command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	770066	File	data/converged/CVE-2018-16863_ghostpdl/base_gssprintf.c								
ANR	770067	DeclStmt									
ANR	770068	Decl							uint32_t	uint32_t	apr_uint32_t
ANR	770069	DeclStmt									
ANR	770070	Decl							int32_t	int32_t	apr_int32_t
ANR	770071	DeclStmt									
ANR	770072	Decl							uint64_t	uint64_t	apr_uint64_t
ANR	770073	DeclStmt									
ANR	770074	Decl							int64_t	int64_t	apr_int64_t
ANR	770075	DeclStmt									
ANR	770076	Decl							size_t	size_t	apr_size_t
ANR	770077	DeclStmt									
ANR	770078	Decl							int64_t	int64_t	apr_off_t
ANR	770079	DeclStmt									
ANR	770080	Decl							struct apr_vformatter_buff_t	struct apr_vformatter_buff_t	apr_vformatter_buff_t
ANR	770081	ClassDef	apr_vformatter_buff_t	49:0:1554:1702							
ANR	770082	DeclStmt									
ANR	770083	Decl							char	char *	curpos
ANR	770084	DeclStmt									
ANR	770085	Decl							char	char *	endpos
ANR	770086	ClassDef	<unnamed>	56:8:1714:1752							
ANR	770087	DeclStmt									
ANR	770088	Decl									boolean_e
ANR	770089	DeclStmt									
ANR	770090	Decl							const char	const char [ ]	null_string
ANR	770091	Function	apr_cvt	118:0:3256:4798							
ANR	770092	FunctionDef	"apr_cvt (double arg , int ndigits , int * decpt , int * sign , int eflag , char * buf)"		770091	0					
ANR	770093	CompoundStatement		120:0:3369:4798	770091	0					
ANR	770094	Statement	register	121:4:3375:3382	770091	0	True				
ANR	770095	IdentifierDeclStatement	int r2 ;	121:13:3384:3390	770091	1	True				
ANR	770096	IdentifierDecl	r2		770091	0					
ANR	770097	IdentifierDeclType	int		770091	0					
ANR	770098	Identifier	r2		770091	1					
ANR	770099	IdentifierDeclStatement	"double fi , fj ;"	122:4:3396:3409	770091	2	True				
ANR	770100	IdentifierDecl	fi		770091	0					
ANR	770101	IdentifierDeclType	double		770091	0					
ANR	770102	Identifier	fi		770091	1					
ANR	770103	IdentifierDecl	fj		770091	1					
ANR	770104	IdentifierDeclType	double		770091	0					
ANR	770105	Identifier	fj		770091	1					
ANR	770106	Statement	register	123:4:3415:3422	770091	3	True				
ANR	770107	IdentifierDeclStatement	"char * p , * p1 ;"	123:13:3424:3436	770091	4	True				
ANR	770108	IdentifierDecl	* p		770091	0					
ANR	770109	IdentifierDeclType	char *		770091	0					
ANR	770110	Identifier	p		770091	1					
ANR	770111	IdentifierDecl	* p1		770091	1					
ANR	770112	IdentifierDeclType	char *		770091	0					
ANR	770113	Identifier	p1		770091	1					
ANR	770114	IfStatement	if ( ndigits >= NDIG - 1 )		770091	5					
ANR	770115	Condition	ndigits >= NDIG - 1	125:8:3451:3469	770091	0	True				
ANR	770116	RelationalExpression	ndigits >= NDIG - 1		770091	0		>=			
ANR	770117	Identifier	ndigits		770091	0					
ANR	770118	AdditiveExpression	NDIG - 1		770091	1		-			
ANR	770119	Identifier	NDIG		770091	0					
ANR	770120	PrimaryExpression	1		770091	1					
ANR	770121	ExpressionStatement	ndigits = NDIG - 2	126:8:3480:3498	770091	1	True				
ANR	770122	AssignmentExpression	ndigits = NDIG - 2		770091	0		=			
ANR	770123	Identifier	ndigits		770091	0					
ANR	770124	AdditiveExpression	NDIG - 2		770091	1		-			
ANR	770125	Identifier	NDIG		770091	0					
ANR	770126	PrimaryExpression	2		770091	1					
ANR	770127	ExpressionStatement	r2 = 0	127:4:3504:3510	770091	6	True				
ANR	770128	AssignmentExpression	r2 = 0		770091	0		=			
ANR	770129	Identifier	r2		770091	0					
ANR	770130	PrimaryExpression	0		770091	1					
ANR	770131	ExpressionStatement	* sign = 0	128:4:3516:3525	770091	7	True				
ANR	770132	AssignmentExpression	* sign = 0		770091	0		=			
ANR	770133	UnaryOperationExpression	* sign		770091	0					
ANR	770134	UnaryOperator	*		770091	0					
ANR	770135	Identifier	sign		770091	1					
ANR	770136	PrimaryExpression	0		770091	1					
ANR	770137	ExpressionStatement	p = & buf [ 0 ]	129:4:3531:3542	770091	8	True				
ANR	770138	AssignmentExpression	p = & buf [ 0 ]		770091	0		=			
ANR	770139	Identifier	p		770091	0					
ANR	770140	UnaryOperationExpression	& buf [ 0 ]		770091	1					
ANR	770141	UnaryOperator	&		770091	0					
ANR	770142	ArrayIndexing	buf [ 0 ]		770091	1					
ANR	770143	Identifier	buf		770091	0					
ANR	770144	PrimaryExpression	0		770091	1					
ANR	770145	IfStatement	if ( arg < 0 )		770091	9					
ANR	770146	Condition	arg < 0	130:8:3552:3558	770091	0	True				
ANR	770147	RelationalExpression	arg < 0		770091	0		<			
ANR	770148	Identifier	arg		770091	0					
ANR	770149	PrimaryExpression	0		770091	1					
ANR	770150	CompoundStatement		11:17:191:191	770091	1					
ANR	770151	ExpressionStatement	* sign = 1	131:8:3571:3580	770091	0	True				
ANR	770152	AssignmentExpression	* sign = 1		770091	0		=			
ANR	770153	UnaryOperationExpression	* sign		770091	0					
ANR	770154	UnaryOperator	*		770091	0					
ANR	770155	Identifier	sign		770091	1					
ANR	770156	PrimaryExpression	1		770091	1					
ANR	770157	ExpressionStatement	arg = - arg	132:8:3590:3600	770091	1	True				
ANR	770158	AssignmentExpression	arg = - arg		770091	0		=			
ANR	770159	Identifier	arg		770091	0					
ANR	770160	UnaryOperationExpression	- arg		770091	1					
ANR	770161	UnaryOperator	-		770091	0					
ANR	770162	Identifier	arg		770091	1					
ANR	770163	ExpressionStatement	"arg = modf ( arg , & fi )"	134:4:3612:3632	770091	10	True				
ANR	770164	AssignmentExpression	"arg = modf ( arg , & fi )"		770091	0		=			
ANR	770165	Identifier	arg		770091	0					
ANR	770166	CallExpression	"modf ( arg , & fi )"		770091	1					
ANR	770167	Callee	modf		770091	0					
ANR	770168	Identifier	modf		770091	0					
ANR	770169	ArgumentList	arg		770091	1					
ANR	770170	Argument	arg		770091	0					
ANR	770171	Identifier	arg		770091	0					
ANR	770172	Argument	& fi		770091	1					
ANR	770173	UnaryOperationExpression	& fi		770091	0					
ANR	770174	UnaryOperator	&		770091	0					
ANR	770175	Identifier	fi		770091	1					
ANR	770176	IfStatement	if ( fi != 0 )		770091	11					
ANR	770177	Condition	fi != 0	138:8:3680:3686	770091	0	True				
ANR	770178	EqualityExpression	fi != 0		770091	0		!=			
ANR	770179	Identifier	fi		770091	0					
ANR	770180	PrimaryExpression	0		770091	1					
ANR	770181	CompoundStatement		19:17:319:319	770091	1					
ANR	770182	ExpressionStatement	p1 = & buf [ NDIG ]	139:8:3699:3714	770091	0	True				
ANR	770183	AssignmentExpression	p1 = & buf [ NDIG ]		770091	0		=			
ANR	770184	Identifier	p1		770091	0					
ANR	770185	UnaryOperationExpression	& buf [ NDIG ]		770091	1					
ANR	770186	UnaryOperator	&		770091	0					
ANR	770187	ArrayIndexing	buf [ NDIG ]		770091	1					
ANR	770188	Identifier	buf		770091	0					
ANR	770189	Identifier	NDIG		770091	1					
ANR	770190	WhileStatement	while ( p1 > & buf [ 0 ] && fi != 0 )		770091	1					
ANR	770191	Condition	p1 > & buf [ 0 ] && fi != 0	140:15:3731:3753	770091	0	True				
ANR	770192	AndExpression	p1 > & buf [ 0 ] && fi != 0		770091	0		&&			
ANR	770193	RelationalExpression	p1 > & buf [ 0 ]		770091	0		>			
ANR	770194	Identifier	p1		770091	0					
ANR	770195	UnaryOperationExpression	& buf [ 0 ]		770091	1					
ANR	770196	UnaryOperator	&		770091	0					
ANR	770197	ArrayIndexing	buf [ 0 ]		770091	1					
ANR	770198	Identifier	buf		770091	0					
ANR	770199	PrimaryExpression	0		770091	1					
ANR	770200	EqualityExpression	fi != 0		770091	1		!=			
ANR	770201	Identifier	fi		770091	0					
ANR	770202	PrimaryExpression	0		770091	1					
ANR	770203	CompoundStatement		21:40:386:386	770091	1					
ANR	770204	ExpressionStatement	"fj = modf ( fi / 10 , & fi )"	141:12:3770:3793	770091	0	True				
ANR	770205	AssignmentExpression	"fj = modf ( fi / 10 , & fi )"		770091	0		=			
ANR	770206	Identifier	fj		770091	0					
ANR	770207	CallExpression	"modf ( fi / 10 , & fi )"		770091	1					
ANR	770208	Callee	modf		770091	0					
ANR	770209	Identifier	modf		770091	0					
ANR	770210	ArgumentList	fi / 10		770091	1					
ANR	770211	Argument	fi / 10		770091	0					
ANR	770212	MultiplicativeExpression	fi / 10		770091	0		/			
ANR	770213	Identifier	fi		770091	0					
ANR	770214	PrimaryExpression	10		770091	1					
ANR	770215	Argument	& fi		770091	1					
ANR	770216	UnaryOperationExpression	& fi		770091	0					
ANR	770217	UnaryOperator	&		770091	0					
ANR	770218	Identifier	fi		770091	1					
ANR	770219	ExpressionStatement	* -- p1 = ( int ) ( ( fj + .03 ) * 10 ) + '0'	142:12:3807:3844	770091	1	True				
ANR	770220	AssignmentExpression	* -- p1 = ( int ) ( ( fj + .03 ) * 10 ) + '0'		770091	0		=			
ANR	770221	UnaryOperationExpression	* -- p1		770091	0					
ANR	770222	UnaryOperator	*		770091	0					
ANR	770223	UnaryExpression	-- p1		770091	1					
ANR	770224	IncDec	--		770091	0					
ANR	770225	Identifier	p1		770091	1					
ANR	770226	AdditiveExpression	( int ) ( ( fj + .03 ) * 10 ) + '0'		770091	1		+			
ANR	770227	CastExpression	( int ) ( ( fj + .03 ) * 10 )		770091	0					
ANR	770228	CastTarget	int		770091	0					
ANR	770229	MultiplicativeExpression	( fj + .03 ) * 10		770091	1		*			
ANR	770230	AdditiveExpression	fj + .03		770091	0		+			
ANR	770231	Identifier	fj		770091	0					
ANR	770232	PrimaryExpression	.03		770091	1					
ANR	770233	PrimaryExpression	10		770091	1					
ANR	770234	PrimaryExpression	'0'		770091	1					
ANR	770235	ExpressionStatement	r2 ++	143:12:3858:3862	770091	2	True				
ANR	770236	PostIncDecOperationExpression	r2 ++		770091	0					
ANR	770237	Identifier	r2		770091	0					
ANR	770238	IncDec	++		770091	1					
ANR	770239	WhileStatement	while ( p1 < & buf [ NDIG ] )		770091	2					
ANR	770240	Condition	p1 < & buf [ NDIG ]	145:15:3889:3903	770091	0	True				
ANR	770241	RelationalExpression	p1 < & buf [ NDIG ]		770091	0		<			
ANR	770242	Identifier	p1		770091	0					
ANR	770243	UnaryOperationExpression	& buf [ NDIG ]		770091	1					
ANR	770244	UnaryOperator	&		770091	0					
ANR	770245	ArrayIndexing	buf [ NDIG ]		770091	1					
ANR	770246	Identifier	buf		770091	0					
ANR	770247	Identifier	NDIG		770091	1					
ANR	770248	ExpressionStatement	* p ++ = * p1 ++	146:12:3918:3930	770091	1	True				
ANR	770249	AssignmentExpression	* p ++ = * p1 ++		770091	0		=			
ANR	770250	UnaryOperationExpression	* p ++		770091	0					
ANR	770251	UnaryOperator	*		770091	0					
ANR	770252	PostIncDecOperationExpression	p ++		770091	1					
ANR	770253	Identifier	p		770091	0					
ANR	770254	IncDec	++		770091	1					
ANR	770255	UnaryOperationExpression	* p1 ++		770091	1					
ANR	770256	UnaryOperator	*		770091	0					
ANR	770257	PostIncDecOperationExpression	p1 ++		770091	1					
ANR	770258	Identifier	p1		770091	0					
ANR	770259	IncDec	++		770091	1					
ANR	770260	ElseStatement	else		770091	0					
ANR	770261	IfStatement	if ( arg > 0 )		770091	0					
ANR	770262	Condition	arg > 0	148:13:3951:3957	770091	0	True				
ANR	770263	RelationalExpression	arg > 0		770091	0		>			
ANR	770264	Identifier	arg		770091	0					
ANR	770265	PrimaryExpression	0		770091	1					
ANR	770266	CompoundStatement		29:22:590:590	770091	1					
ANR	770267	WhileStatement	while ( ( fj = arg * 10 ) < 1 )		770091	0					
ANR	770268	Condition	( fj = arg * 10 ) < 1	149:15:3977:3995	770091	0	True				
ANR	770269	RelationalExpression	( fj = arg * 10 ) < 1		770091	0		<			
ANR	770270	AssignmentExpression	fj = arg * 10		770091	0		=			
ANR	770271	Identifier	fj		770091	0					
ANR	770272	MultiplicativeExpression	arg * 10		770091	1		*			
ANR	770273	Identifier	arg		770091	0					
ANR	770274	PrimaryExpression	10		770091	1					
ANR	770275	PrimaryExpression	1		770091	1					
ANR	770276	CompoundStatement		30:36:628:628	770091	1					
ANR	770277	ExpressionStatement	arg = fj	150:12:4012:4020	770091	0	True				
ANR	770278	AssignmentExpression	arg = fj		770091	0		=			
ANR	770279	Identifier	arg		770091	0					
ANR	770280	Identifier	fj		770091	1					
ANR	770281	ExpressionStatement	r2 --	151:12:4034:4038	770091	1	True				
ANR	770282	PostIncDecOperationExpression	r2 --		770091	0					
ANR	770283	Identifier	r2		770091	0					
ANR	770284	IncDec	--		770091	1					
ANR	770285	ExpressionStatement	p1 = & buf [ ndigits ]	154:4:4060:4078	770091	12	True				
ANR	770286	AssignmentExpression	p1 = & buf [ ndigits ]		770091	0		=			
ANR	770287	Identifier	p1		770091	0					
ANR	770288	UnaryOperationExpression	& buf [ ndigits ]		770091	1					
ANR	770289	UnaryOperator	&		770091	0					
ANR	770290	ArrayIndexing	buf [ ndigits ]		770091	1					
ANR	770291	Identifier	buf		770091	0					
ANR	770292	Identifier	ndigits		770091	1					
ANR	770293	IfStatement	if ( eflag == 0 )		770091	13					
ANR	770294	Condition	eflag == 0	155:8:4088:4097	770091	0	True				
ANR	770295	EqualityExpression	eflag == 0		770091	0		==			
ANR	770296	Identifier	eflag		770091	0					
ANR	770297	PrimaryExpression	0		770091	1					
ANR	770298	ExpressionStatement	p1 += r2	156:8:4108:4116	770091	1	True				
ANR	770299	AssignmentExpression	p1 += r2		770091	0		+=			
ANR	770300	Identifier	p1		770091	0					
ANR	770301	Identifier	r2		770091	1					
ANR	770302	IfStatement	if ( p1 < & buf [ 0 ] )		770091	14					
ANR	770303	Condition	p1 < & buf [ 0 ]	157:8:4126:4137	770091	0	True				
ANR	770304	RelationalExpression	p1 < & buf [ 0 ]		770091	0		<			
ANR	770305	Identifier	p1		770091	0					
ANR	770306	UnaryOperationExpression	& buf [ 0 ]		770091	1					
ANR	770307	UnaryOperator	&		770091	0					
ANR	770308	ArrayIndexing	buf [ 0 ]		770091	1					
ANR	770309	Identifier	buf		770091	0					
ANR	770310	PrimaryExpression	0		770091	1					
ANR	770311	CompoundStatement		38:22:770:770	770091	1					
ANR	770312	ExpressionStatement	* decpt = - ndigits	158:8:4150:4167	770091	0	True				
ANR	770313	AssignmentExpression	* decpt = - ndigits		770091	0		=			
ANR	770314	UnaryOperationExpression	* decpt		770091	0					
ANR	770315	UnaryOperator	*		770091	0					
ANR	770316	Identifier	decpt		770091	1					
ANR	770317	UnaryOperationExpression	- ndigits		770091	1					
ANR	770318	UnaryOperator	-		770091	0					
ANR	770319	Identifier	ndigits		770091	1					
ANR	770320	ExpressionStatement	buf [ 0 ] = '\\0'	159:8:4177:4190	770091	1	True				
ANR	770321	AssignmentExpression	buf [ 0 ] = '\\0'		770091	0		=			
ANR	770322	ArrayIndexing	buf [ 0 ]		770091	0					
ANR	770323	Identifier	buf		770091	0					
ANR	770324	PrimaryExpression	0		770091	1					
ANR	770325	PrimaryExpression	'\\0'		770091	1					
ANR	770326	ReturnStatement	return ( buf ) ;	160:8:4200:4212	770091	2	True				
ANR	770327	Identifier	buf		770091	0					
ANR	770328	ExpressionStatement	* decpt = r2	162:4:4224:4235	770091	15	True				
ANR	770329	AssignmentExpression	* decpt = r2		770091	0		=			
ANR	770330	UnaryOperationExpression	* decpt		770091	0					
ANR	770331	UnaryOperator	*		770091	0					
ANR	770332	Identifier	decpt		770091	1					
ANR	770333	Identifier	r2		770091	1					
ANR	770334	WhileStatement	while ( p <= p1 && p < & buf [ NDIG ] )		770091	16					
ANR	770335	Condition	p <= p1 && p < & buf [ NDIG ]	163:11:4248:4272	770091	0	True				
ANR	770336	AndExpression	p <= p1 && p < & buf [ NDIG ]		770091	0		&&			
ANR	770337	RelationalExpression	p <= p1		770091	0		<=			
ANR	770338	Identifier	p		770091	0					
ANR	770339	Identifier	p1		770091	1					
ANR	770340	RelationalExpression	p < & buf [ NDIG ]		770091	1		<			
ANR	770341	Identifier	p		770091	0					
ANR	770342	UnaryOperationExpression	& buf [ NDIG ]		770091	1					
ANR	770343	UnaryOperator	&		770091	0					
ANR	770344	ArrayIndexing	buf [ NDIG ]		770091	1					
ANR	770345	Identifier	buf		770091	0					
ANR	770346	Identifier	NDIG		770091	1					
ANR	770347	CompoundStatement		44:38:905:905	770091	1					
ANR	770348	ExpressionStatement	arg *= 10	164:8:4285:4294	770091	0	True				
ANR	770349	AssignmentExpression	arg *= 10		770091	0		*=			
ANR	770350	Identifier	arg		770091	0					
ANR	770351	PrimaryExpression	10		770091	1					
ANR	770352	ExpressionStatement	"arg = modf ( arg , & fj )"	165:8:4304:4324	770091	1	True				
ANR	770353	AssignmentExpression	"arg = modf ( arg , & fj )"		770091	0		=			
ANR	770354	Identifier	arg		770091	0					
ANR	770355	CallExpression	"modf ( arg , & fj )"		770091	1					
ANR	770356	Callee	modf		770091	0					
ANR	770357	Identifier	modf		770091	0					
ANR	770358	ArgumentList	arg		770091	1					
ANR	770359	Argument	arg		770091	0					
ANR	770360	Identifier	arg		770091	0					
ANR	770361	Argument	& fj		770091	1					
ANR	770362	UnaryOperationExpression	& fj		770091	0					
ANR	770363	UnaryOperator	&		770091	0					
ANR	770364	Identifier	fj		770091	1					
ANR	770365	ExpressionStatement	* p ++ = ( int ) fj + '0'	166:8:4334:4355	770091	2	True				
ANR	770366	AssignmentExpression	* p ++ = ( int ) fj + '0'		770091	0		=			
ANR	770367	UnaryOperationExpression	* p ++		770091	0					
ANR	770368	UnaryOperator	*		770091	0					
ANR	770369	PostIncDecOperationExpression	p ++		770091	1					
ANR	770370	Identifier	p		770091	0					
ANR	770371	IncDec	++		770091	1					
ANR	770372	AdditiveExpression	( int ) fj + '0'		770091	1		+			
ANR	770373	CastExpression	( int ) fj		770091	0					
ANR	770374	CastTarget	int		770091	0					
ANR	770375	Identifier	fj		770091	1					
ANR	770376	PrimaryExpression	'0'		770091	1					
ANR	770377	IfStatement	if ( p1 >= & buf [ NDIG ] )		770091	17					
ANR	770378	Condition	p1 >= & buf [ NDIG ]	168:8:4371:4386	770091	0	True				
ANR	770379	RelationalExpression	p1 >= & buf [ NDIG ]		770091	0		>=			
ANR	770380	Identifier	p1		770091	0					
ANR	770381	UnaryOperationExpression	& buf [ NDIG ]		770091	1					
ANR	770382	UnaryOperator	&		770091	0					
ANR	770383	ArrayIndexing	buf [ NDIG ]		770091	1					
ANR	770384	Identifier	buf		770091	0					
ANR	770385	Identifier	NDIG		770091	1					
ANR	770386	CompoundStatement		49:26:1019:1019	770091	1					
ANR	770387	ExpressionStatement	buf [ NDIG - 1 ] = '\\0'	169:8:4399:4419	770091	0	True				
ANR	770388	AssignmentExpression	buf [ NDIG - 1 ] = '\\0'		770091	0		=			
ANR	770389	ArrayIndexing	buf [ NDIG - 1 ]		770091	0					
ANR	770390	Identifier	buf		770091	0					
ANR	770391	AdditiveExpression	NDIG - 1		770091	1		-			
ANR	770392	Identifier	NDIG		770091	0					
ANR	770393	PrimaryExpression	1		770091	1					
ANR	770394	PrimaryExpression	'\\0'		770091	1					
ANR	770395	ReturnStatement	return ( buf ) ;	170:8:4429:4441	770091	1	True				
ANR	770396	Identifier	buf		770091	0					
ANR	770397	ExpressionStatement	p = p1	172:4:4453:4459	770091	18	True				
ANR	770398	AssignmentExpression	p = p1		770091	0		=			
ANR	770399	Identifier	p		770091	0					
ANR	770400	Identifier	p1		770091	1					
ANR	770401	ExpressionStatement	* p1 += 5	173:4:4465:4473	770091	19	True				
ANR	770402	AssignmentExpression	* p1 += 5		770091	0		+=			
ANR	770403	UnaryOperationExpression	* p1		770091	0					
ANR	770404	UnaryOperator	*		770091	0					
ANR	770405	Identifier	p1		770091	1					
ANR	770406	PrimaryExpression	5		770091	1					
ANR	770407	WhileStatement	while ( * p1 > '9' )		770091	20					
ANR	770408	Condition	* p1 > '9'	174:11:4486:4494	770091	0	True				
ANR	770409	RelationalExpression	* p1 > '9'		770091	0		>			
ANR	770410	UnaryOperationExpression	* p1		770091	0					
ANR	770411	UnaryOperator	*		770091	0					
ANR	770412	Identifier	p1		770091	1					
ANR	770413	PrimaryExpression	'9'		770091	1					
ANR	770414	CompoundStatement		55:22:1127:1127	770091	1					
ANR	770415	ExpressionStatement	* p1 = '0'	175:8:4507:4516	770091	0	True				
ANR	770416	AssignmentExpression	* p1 = '0'		770091	0		=			
ANR	770417	UnaryOperationExpression	* p1		770091	0					
ANR	770418	UnaryOperator	*		770091	0					
ANR	770419	Identifier	p1		770091	1					
ANR	770420	PrimaryExpression	'0'		770091	1					
ANR	770421	IfStatement	if ( p1 > buf )		770091	1					
ANR	770422	Condition	p1 > buf	176:12:4530:4537	770091	0	True				
ANR	770423	RelationalExpression	p1 > buf		770091	0		>			
ANR	770424	Identifier	p1		770091	0					
ANR	770425	Identifier	buf		770091	1					
ANR	770426	ExpressionStatement	++ * -- p1	177:12:4552:4561	770091	1	True				
ANR	770427	UnaryExpression	++ * -- p1		770091	0					
ANR	770428	IncDec	++		770091	0					
ANR	770429	UnaryOperationExpression	* -- p1		770091	1					
ANR	770430	UnaryOperator	*		770091	0					
ANR	770431	UnaryExpression	-- p1		770091	1					
ANR	770432	IncDec	--		770091	0					
ANR	770433	Identifier	p1		770091	1					
ANR	770434	ElseStatement	else		770091	0					
ANR	770435	CompoundStatement		59:13:1206:1206	770091	0					
ANR	770436	ExpressionStatement	* p1 = '1'	179:12:4590:4599	770091	0	True				
ANR	770437	AssignmentExpression	* p1 = '1'		770091	0		=			
ANR	770438	UnaryOperationExpression	* p1		770091	0					
ANR	770439	UnaryOperator	*		770091	0					
ANR	770440	Identifier	p1		770091	1					
ANR	770441	PrimaryExpression	'1'		770091	1					
ANR	770442	ExpressionStatement	( * decpt ) ++	180:12:4613:4623	770091	1	True				
ANR	770443	PostIncDecOperationExpression	( * decpt ) ++		770091	0					
ANR	770444	UnaryOperationExpression	* decpt		770091	0					
ANR	770445	UnaryOperator	*		770091	0					
ANR	770446	Identifier	decpt		770091	1					
ANR	770447	IncDec	++		770091	1					
ANR	770448	IfStatement	if ( eflag == 0 )		770091	2					
ANR	770449	Condition	eflag == 0	181:16:4641:4650	770091	0	True				
ANR	770450	EqualityExpression	eflag == 0		770091	0		==			
ANR	770451	Identifier	eflag		770091	0					
ANR	770452	PrimaryExpression	0		770091	1					
ANR	770453	CompoundStatement		62:28:1283:1283	770091	1					
ANR	770454	IfStatement	if ( p > buf )		770091	0					
ANR	770455	Condition	p > buf	182:20:4675:4681	770091	0	True				
ANR	770456	RelationalExpression	p > buf		770091	0		>			
ANR	770457	Identifier	p		770091	0					
ANR	770458	Identifier	buf		770091	1					
ANR	770459	ExpressionStatement	* p = '0'	183:20:4704:4712	770091	1	True				
ANR	770460	AssignmentExpression	* p = '0'		770091	0		=			
ANR	770461	UnaryOperationExpression	* p		770091	0					
ANR	770462	UnaryOperator	*		770091	0					
ANR	770463	Identifier	p		770091	1					
ANR	770464	PrimaryExpression	'0'		770091	1					
ANR	770465	ExpressionStatement	p ++	184:16:4730:4733	770091	1	True				
ANR	770466	PostIncDecOperationExpression	p ++		770091	0					
ANR	770467	Identifier	p		770091	0					
ANR	770468	IncDec	++		770091	1					
ANR	770469	ExpressionStatement	* p = '\\0'	188:4:4769:4778	770091	21	True				
ANR	770470	AssignmentExpression	* p = '\\0'		770091	0		=			
ANR	770471	UnaryOperationExpression	* p		770091	0					
ANR	770472	UnaryOperator	*		770091	0					
ANR	770473	Identifier	p		770091	1					
ANR	770474	PrimaryExpression	'\\0'		770091	1					
ANR	770475	ReturnStatement	return ( buf ) ;	189:4:4784:4796	770091	22	True				
ANR	770476	Identifier	buf		770091	0					
ANR	770477	ReturnType	static char *		770091	1					
ANR	770478	Identifier	apr_cvt		770091	2					
ANR	770479	ParameterList	"double arg , int ndigits , int * decpt , int * sign , int eflag , char * buf"		770091	3					
ANR	770480	Parameter	double arg	118:21:3277:3286	770091	0	True				
ANR	770481	ParameterType	double		770091	0					
ANR	770482	Identifier	arg		770091	1					
ANR	770483	Parameter	int ndigits	118:33:3289:3299	770091	1	True				
ANR	770484	ParameterType	int		770091	0					
ANR	770485	Identifier	ndigits		770091	1					
ANR	770486	Parameter	int * decpt	118:46:3302:3311	770091	2	True				
ANR	770487	ParameterType	int *		770091	0					
ANR	770488	Identifier	decpt		770091	1					
ANR	770489	Parameter	int * sign	118:58:3314:3322	770091	3	True				
ANR	770490	ParameterType	int *		770091	0					
ANR	770491	Identifier	sign		770091	1					
ANR	770492	Parameter	int eflag	119:21:3347:3355	770091	4	True				
ANR	770493	ParameterType	int		770091	0					
ANR	770494	Identifier	eflag		770091	1					
ANR	770495	Parameter	char * buf	119:32:3358:3366	770091	5	True				
ANR	770496	ParameterType	char *		770091	0					
ANR	770497	Identifier	buf		770091	1					
ANR	770498	CFGEntryNode	ENTRY		770091		True				
ANR	770499	CFGExitNode	EXIT		770091		True				
ANR	770500	Symbol	r2		770091						
ANR	770501	Symbol	p1		770091						
ANR	770502	Symbol	* decpt		770091						
ANR	770503	Symbol	* buf		770091						
ANR	770504	Symbol	fi		770091						
ANR	770505	Symbol	fj		770091						
ANR	770506	Symbol	* -- p1		770091						
ANR	770507	Symbol	* p1		770091						
ANR	770508	Symbol	* p ++		770091						
ANR	770509	Symbol	sign		770091						
ANR	770510	Symbol	* p1 ++		770091						
ANR	770511	Symbol	& fi		770091						
ANR	770512	Symbol	eflag		770091						
ANR	770513	Symbol	& fj		770091						
ANR	770514	Symbol	p		770091						
ANR	770515	Symbol	NDIG		770091						
ANR	770516	Symbol	buf		770091						
ANR	770517	Symbol	decpt		770091						
ANR	770518	Symbol	arg		770091						
ANR	770519	Symbol	* sign		770091						
ANR	770520	Symbol	modf		770091						
ANR	770521	Symbol	* NDIG		770091						
ANR	770522	Symbol	* p		770091						
ANR	770523	Symbol	ndigits		770091						
ANR	770524	Function	apr_ecvt	192:0:4801:4941							
ANR	770525	FunctionDef	"apr_ecvt (double arg , int ndigits , int * decpt , int * sign , char * buf)"		770524	0					
ANR	770526	CompoundStatement		193:0:4882:4941	770524	0					
ANR	770527	ReturnStatement	"return ( apr_cvt ( arg , ndigits , decpt , sign , 1 , buf ) ) ;"	194:4:4888:4939	770524	0	True				
ANR	770528	CallExpression	"apr_cvt ( arg , ndigits , decpt , sign , 1 , buf )"		770524	0					
ANR	770529	Callee	apr_cvt		770524	0					
ANR	770530	Identifier	apr_cvt		770524	0					
ANR	770531	ArgumentList	arg		770524	1					
ANR	770532	Argument	arg		770524	0					
ANR	770533	Identifier	arg		770524	0					
ANR	770534	Argument	ndigits		770524	1					
ANR	770535	Identifier	ndigits		770524	0					
ANR	770536	Argument	decpt		770524	2					
ANR	770537	Identifier	decpt		770524	0					
ANR	770538	Argument	sign		770524	3					
ANR	770539	Identifier	sign		770524	0					
ANR	770540	Argument	1		770524	4					
ANR	770541	PrimaryExpression	1		770524	0					
ANR	770542	Argument	buf		770524	5					
ANR	770543	Identifier	buf		770524	0					
ANR	770544	ReturnType	static char *		770524	1					
ANR	770545	Identifier	apr_ecvt		770524	2					
ANR	770546	ParameterList	"double arg , int ndigits , int * decpt , int * sign , char * buf"		770524	3					
ANR	770547	Parameter	double arg	192:22:4823:4832	770524	0	True				
ANR	770548	ParameterType	double		770524	0					
ANR	770549	Identifier	arg		770524	1					
ANR	770550	Parameter	int ndigits	192:34:4835:4845	770524	1	True				
ANR	770551	ParameterType	int		770524	0					
ANR	770552	Identifier	ndigits		770524	1					
ANR	770553	Parameter	int * decpt	192:47:4848:4857	770524	2	True				
ANR	770554	ParameterType	int *		770524	0					
ANR	770555	Identifier	decpt		770524	1					
ANR	770556	Parameter	int * sign	192:59:4860:4868	770524	3	True				
ANR	770557	ParameterType	int *		770524	0					
ANR	770558	Identifier	sign		770524	1					
ANR	770559	Parameter	char * buf	192:70:4871:4879	770524	4	True				
ANR	770560	ParameterType	char *		770524	0					
ANR	770561	Identifier	buf		770524	1					
ANR	770562	CFGEntryNode	ENTRY		770524		True				
ANR	770563	CFGExitNode	EXIT		770524		True				
ANR	770564	Symbol	buf		770524						
ANR	770565	Symbol	decpt		770524						
ANR	770566	Symbol	arg		770524						
ANR	770567	Symbol	sign		770524						
ANR	770568	Symbol	apr_cvt		770524						
ANR	770569	Symbol	ndigits		770524						
ANR	770570	Function	apr_fcvt	197:0:4944:5084							
ANR	770571	FunctionDef	"apr_fcvt (double arg , int ndigits , int * decpt , int * sign , char * buf)"		770570	0					
ANR	770572	CompoundStatement		198:0:5025:5084	770570	0					
ANR	770573	ReturnStatement	"return ( apr_cvt ( arg , ndigits , decpt , sign , 0 , buf ) ) ;"	199:4:5031:5082	770570	0	True				
ANR	770574	CallExpression	"apr_cvt ( arg , ndigits , decpt , sign , 0 , buf )"		770570	0					
ANR	770575	Callee	apr_cvt		770570	0					
ANR	770576	Identifier	apr_cvt		770570	0					
ANR	770577	ArgumentList	arg		770570	1					
ANR	770578	Argument	arg		770570	0					
ANR	770579	Identifier	arg		770570	0					
ANR	770580	Argument	ndigits		770570	1					
ANR	770581	Identifier	ndigits		770570	0					
ANR	770582	Argument	decpt		770570	2					
ANR	770583	Identifier	decpt		770570	0					
ANR	770584	Argument	sign		770570	3					
ANR	770585	Identifier	sign		770570	0					
ANR	770586	Argument	0		770570	4					
ANR	770587	PrimaryExpression	0		770570	0					
ANR	770588	Argument	buf		770570	5					
ANR	770589	Identifier	buf		770570	0					
ANR	770590	ReturnType	static char *		770570	1					
ANR	770591	Identifier	apr_fcvt		770570	2					
ANR	770592	ParameterList	"double arg , int ndigits , int * decpt , int * sign , char * buf"		770570	3					
ANR	770593	Parameter	double arg	197:22:4966:4975	770570	0	True				
ANR	770594	ParameterType	double		770570	0					
ANR	770595	Identifier	arg		770570	1					
ANR	770596	Parameter	int ndigits	197:34:4978:4988	770570	1	True				
ANR	770597	ParameterType	int		770570	0					
ANR	770598	Identifier	ndigits		770570	1					
ANR	770599	Parameter	int * decpt	197:47:4991:5000	770570	2	True				
ANR	770600	ParameterType	int *		770570	0					
ANR	770601	Identifier	decpt		770570	1					
ANR	770602	Parameter	int * sign	197:59:5003:5011	770570	3	True				
ANR	770603	ParameterType	int *		770570	0					
ANR	770604	Identifier	sign		770570	1					
ANR	770605	Parameter	char * buf	197:70:5014:5022	770570	4	True				
ANR	770606	ParameterType	char *		770570	0					
ANR	770607	Identifier	buf		770570	1					
ANR	770608	CFGEntryNode	ENTRY		770570		True				
ANR	770609	CFGExitNode	EXIT		770570		True				
ANR	770610	Symbol	buf		770570						
ANR	770611	Symbol	decpt		770570						
ANR	770612	Symbol	arg		770570						
ANR	770613	Symbol	sign		770570						
ANR	770614	Symbol	apr_cvt		770570						
ANR	770615	Symbol	ndigits		770570						
ANR	770616	Function	apr_gcvt	207:0:5165:7040							
ANR	770617	FunctionDef	"apr_gcvt (double number , int ndigit , char * buf , boolean_e altform)"		770616	0					
ANR	770618	CompoundStatement		208:0:5244:7040	770616	0					
ANR	770619	IdentifierDeclStatement	"int sign , decpt ;"	209:4:5250:5265	770616	0	True				
ANR	770620	IdentifierDecl	sign		770616	0					
ANR	770621	IdentifierDeclType	int		770616	0					
ANR	770622	Identifier	sign		770616	1					
ANR	770623	IdentifierDecl	decpt		770616	1					
ANR	770624	IdentifierDeclType	int		770616	0					
ANR	770625	Identifier	decpt		770616	1					
ANR	770626	Statement	register	210:4:5271:5278	770616	1	True				
ANR	770627	IdentifierDeclStatement	"char * p1 , * p2 ;"	210:13:5280:5293	770616	2	True				
ANR	770628	IdentifierDecl	* p1		770616	0					
ANR	770629	IdentifierDeclType	char *		770616	0					
ANR	770630	Identifier	p1		770616	1					
ANR	770631	IdentifierDecl	* p2		770616	1					
ANR	770632	IdentifierDeclType	char *		770616	0					
ANR	770633	Identifier	p2		770616	1					
ANR	770634	Statement	register	211:4:5299:5306	770616	3	True				
ANR	770635	IdentifierDeclStatement	int i ;	211:13:5308:5313	770616	4	True				
ANR	770636	IdentifierDecl	i		770616	0					
ANR	770637	IdentifierDeclType	int		770616	0					
ANR	770638	Identifier	i		770616	1					
ANR	770639	IdentifierDeclStatement	char buf1 [ NDIG ] ;	212:4:5319:5334	770616	5	True				
ANR	770640	IdentifierDecl	buf1 [ NDIG ]		770616	0					
ANR	770641	IdentifierDeclType	char [ NDIG ]		770616	0					
ANR	770642	Identifier	buf1		770616	1					
ANR	770643	Identifier	NDIG		770616	2					
ANR	770644	IdentifierDeclStatement	int nd = ndigit ;	213:4:5340:5355	770616	6	True				
ANR	770645	IdentifierDecl	nd = ndigit		770616	0					
ANR	770646	IdentifierDeclType	int		770616	0					
ANR	770647	Identifier	nd		770616	1					
ANR	770648	AssignmentExpression	nd = ndigit		770616	2		=			
ANR	770649	Identifier	ndigit		770616	0					
ANR	770650	Identifier	ndigit		770616	1					
ANR	770651	IdentifierDeclStatement	double magn = number < 0 ? - number : number ;	214:4:5361:5404	770616	7	True				
ANR	770652	IdentifierDecl	magn = number < 0 ? - number : number		770616	0					
ANR	770653	IdentifierDeclType	double		770616	0					
ANR	770654	Identifier	magn		770616	1					
ANR	770655	AssignmentExpression	magn = number < 0 ? - number : number		770616	2		=			
ANR	770656	Identifier	magn		770616	0					
ANR	770657	ConditionalExpression	number < 0 ? - number : number		770616	1					
ANR	770658	Condition	number < 0		770616	0					
ANR	770659	RelationalExpression	number < 0		770616	0		<			
ANR	770660	Identifier	number		770616	0					
ANR	770661	PrimaryExpression	0		770616	1					
ANR	770662	UnaryOperationExpression	- number		770616	1					
ANR	770663	UnaryOperator	-		770616	0					
ANR	770664	Identifier	number		770616	1					
ANR	770665	Identifier	number		770616	2					
ANR	770666	ExpressionStatement	"p1 = apr_ecvt ( number , ndigit , & decpt , & sign , buf1 )"	216:4:5411:5461	770616	8	True				
ANR	770667	AssignmentExpression	"p1 = apr_ecvt ( number , ndigit , & decpt , & sign , buf1 )"		770616	0		=			
ANR	770668	Identifier	p1		770616	0					
ANR	770669	CallExpression	"apr_ecvt ( number , ndigit , & decpt , & sign , buf1 )"		770616	1					
ANR	770670	Callee	apr_ecvt		770616	0					
ANR	770671	Identifier	apr_ecvt		770616	0					
ANR	770672	ArgumentList	number		770616	1					
ANR	770673	Argument	number		770616	0					
ANR	770674	Identifier	number		770616	0					
ANR	770675	Argument	ndigit		770616	1					
ANR	770676	Identifier	ndigit		770616	0					
ANR	770677	Argument	& decpt		770616	2					
ANR	770678	UnaryOperationExpression	& decpt		770616	0					
ANR	770679	UnaryOperator	&		770616	0					
ANR	770680	Identifier	decpt		770616	1					
ANR	770681	Argument	& sign		770616	3					
ANR	770682	UnaryOperationExpression	& sign		770616	0					
ANR	770683	UnaryOperator	&		770616	0					
ANR	770684	Identifier	sign		770616	1					
ANR	770685	Argument	buf1		770616	4					
ANR	770686	Identifier	buf1		770616	0					
ANR	770687	ExpressionStatement	p2 = buf	217:4:5467:5475	770616	9	True				
ANR	770688	AssignmentExpression	p2 = buf		770616	0		=			
ANR	770689	Identifier	p2		770616	0					
ANR	770690	Identifier	buf		770616	1					
ANR	770691	IfStatement	if ( sign )		770616	10					
ANR	770692	Condition	sign	218:8:5485:5488	770616	0	True				
ANR	770693	Identifier	sign		770616	0					
ANR	770694	ExpressionStatement	* p2 ++ = '-'	219:8:5499:5510	770616	1	True				
ANR	770695	AssignmentExpression	* p2 ++ = '-'		770616	0		=			
ANR	770696	UnaryOperationExpression	* p2 ++		770616	0					
ANR	770697	UnaryOperator	*		770616	0					
ANR	770698	PostIncDecOperationExpression	p2 ++		770616	1					
ANR	770699	Identifier	p2		770616	0					
ANR	770700	IncDec	++		770616	1					
ANR	770701	PrimaryExpression	'-'		770616	1					
ANR	770702	ForStatement	for ( i = ndigit - 1 ; i > 0 && p1 [ i ] == '0' ; i -- )		770616	11					
ANR	770703	ForInit	i = ndigit - 1 ;	220:9:5521:5535	770616	0	True				
ANR	770704	AssignmentExpression	i = ndigit - 1		770616	0		=			
ANR	770705	Identifier	i		770616	0					
ANR	770706	AdditiveExpression	ndigit - 1		770616	1		-			
ANR	770707	Identifier	ndigit		770616	0					
ANR	770708	PrimaryExpression	1		770616	1					
ANR	770709	Condition	i > 0 && p1 [ i ] == '0'	220:25:5537:5557	770616	1	True				
ANR	770710	AndExpression	i > 0 && p1 [ i ] == '0'		770616	0		&&			
ANR	770711	RelationalExpression	i > 0		770616	0		>			
ANR	770712	Identifier	i		770616	0					
ANR	770713	PrimaryExpression	0		770616	1					
ANR	770714	EqualityExpression	p1 [ i ] == '0'		770616	1		==			
ANR	770715	ArrayIndexing	p1 [ i ]		770616	0					
ANR	770716	Identifier	p1		770616	0					
ANR	770717	Identifier	i		770616	1					
ANR	770718	PrimaryExpression	'0'		770616	1					
ANR	770719	PostIncDecOperationExpression	i --	220:48:5560:5562	770616	2	True				
ANR	770720	Identifier	i		770616	0					
ANR	770721	IncDec	--		770616	1					
ANR	770722	ExpressionStatement	ndigit --	221:8:5573:5581	770616	3	True				
ANR	770723	PostIncDecOperationExpression	ndigit --		770616	0					
ANR	770724	Identifier	ndigit		770616	0					
ANR	770725	IncDec	--		770616	1					
ANR	770726	IfStatement	if ( ( decpt >= 0 && decpt - ndigit > 4 ) || ( decpt < 0 && decpt < - 3 ) )		770616	12					
ANR	770727	Condition	( decpt >= 0 && decpt - ndigit > 4 ) || ( decpt < 0 && decpt < - 3 )	223:8:5603:5673	770616	0	True				
ANR	770728	OrExpression	( decpt >= 0 && decpt - ndigit > 4 ) || ( decpt < 0 && decpt < - 3 )		770616	0		||			
ANR	770729	AndExpression	decpt >= 0 && decpt - ndigit > 4		770616	0		&&			
ANR	770730	RelationalExpression	decpt >= 0		770616	0		>=			
ANR	770731	Identifier	decpt		770616	0					
ANR	770732	PrimaryExpression	0		770616	1					
ANR	770733	RelationalExpression	decpt - ndigit > 4		770616	1		>			
ANR	770734	AdditiveExpression	decpt - ndigit		770616	0		-			
ANR	770735	Identifier	decpt		770616	0					
ANR	770736	Identifier	ndigit		770616	1					
ANR	770737	PrimaryExpression	4		770616	1					
ANR	770738	AndExpression	decpt < 0 && decpt < - 3		770616	1		&&			
ANR	770739	RelationalExpression	decpt < 0		770616	0		<			
ANR	770740	Identifier	decpt		770616	0					
ANR	770741	PrimaryExpression	0		770616	1					
ANR	770742	RelationalExpression	decpt < - 3		770616	1		<			
ANR	770743	Identifier	decpt		770616	0					
ANR	770744	UnaryOperationExpression	- 3		770616	1					
ANR	770745	UnaryOperator	-		770616	0					
ANR	770746	PrimaryExpression	3		770616	1					
ANR	770747	CompoundStatement		17:38:431:431	770616	1					
ANR	770748	ExpressionStatement	decpt --	229:8:5861:5868	770616	0	True				
ANR	770749	PostIncDecOperationExpression	decpt --		770616	0					
ANR	770750	Identifier	decpt		770616	0					
ANR	770751	IncDec	--		770616	1					
ANR	770752	ExpressionStatement	* p2 ++ = * p1 ++	230:8:5878:5891	770616	1	True				
ANR	770753	AssignmentExpression	* p2 ++ = * p1 ++		770616	0		=			
ANR	770754	UnaryOperationExpression	* p2 ++		770616	0					
ANR	770755	UnaryOperator	*		770616	0					
ANR	770756	PostIncDecOperationExpression	p2 ++		770616	1					
ANR	770757	Identifier	p2		770616	0					
ANR	770758	IncDec	++		770616	1					
ANR	770759	UnaryOperationExpression	* p1 ++		770616	1					
ANR	770760	UnaryOperator	*		770616	0					
ANR	770761	PostIncDecOperationExpression	p1 ++		770616	1					
ANR	770762	Identifier	p1		770616	0					
ANR	770763	IncDec	++		770616	1					
ANR	770764	IfStatement	if ( ndigit >= 2 )		770616	2					
ANR	770765	Condition	ndigit >= 2	232:12:5906:5916	770616	0	True				
ANR	770766	RelationalExpression	ndigit >= 2		770616	0		>=			
ANR	770767	Identifier	ndigit		770616	0					
ANR	770768	PrimaryExpression	2		770616	1					
ANR	770769	ExpressionStatement	* p2 ++ = '.'	233:12:5931:5942	770616	1	True				
ANR	770770	AssignmentExpression	* p2 ++ = '.'		770616	0		=			
ANR	770771	UnaryOperationExpression	* p2 ++		770616	0					
ANR	770772	UnaryOperator	*		770616	0					
ANR	770773	PostIncDecOperationExpression	p2 ++		770616	1					
ANR	770774	Identifier	p2		770616	0					
ANR	770775	IncDec	++		770616	1					
ANR	770776	PrimaryExpression	'.'		770616	1					
ANR	770777	ForStatement	for ( i = 1 ; i < ndigit ; i ++ )		770616	3					
ANR	770778	ForInit	i = 1 ;	234:13:5957:5962	770616	0	True				
ANR	770779	AssignmentExpression	i = 1		770616	0		=			
ANR	770780	Identifier	i		770616	0					
ANR	770781	PrimaryExpression	1		770616	1					
ANR	770782	Condition	i < ndigit	234:20:5964:5973	770616	1	True				
ANR	770783	RelationalExpression	i < ndigit		770616	0		<			
ANR	770784	Identifier	i		770616	0					
ANR	770785	Identifier	ndigit		770616	1					
ANR	770786	PostIncDecOperationExpression	i ++	234:32:5976:5978	770616	2	True				
ANR	770787	Identifier	i		770616	0					
ANR	770788	IncDec	++		770616	1					
ANR	770789	ExpressionStatement	* p2 ++ = * p1 ++	235:12:5993:6006	770616	3	True				
ANR	770790	AssignmentExpression	* p2 ++ = * p1 ++		770616	0		=			
ANR	770791	UnaryOperationExpression	* p2 ++		770616	0					
ANR	770792	UnaryOperator	*		770616	0					
ANR	770793	PostIncDecOperationExpression	p2 ++		770616	1					
ANR	770794	Identifier	p2		770616	0					
ANR	770795	IncDec	++		770616	1					
ANR	770796	UnaryOperationExpression	* p1 ++		770616	1					
ANR	770797	UnaryOperator	*		770616	0					
ANR	770798	PostIncDecOperationExpression	p1 ++		770616	1					
ANR	770799	Identifier	p1		770616	0					
ANR	770800	IncDec	++		770616	1					
ANR	770801	ExpressionStatement	* p2 ++ = 'e'	236:8:6016:6027	770616	4	True				
ANR	770802	AssignmentExpression	* p2 ++ = 'e'		770616	0		=			
ANR	770803	UnaryOperationExpression	* p2 ++		770616	0					
ANR	770804	UnaryOperator	*		770616	0					
ANR	770805	PostIncDecOperationExpression	p2 ++		770616	1					
ANR	770806	Identifier	p2		770616	0					
ANR	770807	IncDec	++		770616	1					
ANR	770808	PrimaryExpression	'e'		770616	1					
ANR	770809	IfStatement	if ( decpt < 0 )		770616	5					
ANR	770810	Condition	decpt < 0	237:12:6041:6049	770616	0	True				
ANR	770811	RelationalExpression	decpt < 0		770616	0		<			
ANR	770812	Identifier	decpt		770616	0					
ANR	770813	PrimaryExpression	0		770616	1					
ANR	770814	CompoundStatement		30:23:807:807	770616	1					
ANR	770815	ExpressionStatement	decpt = - decpt	238:12:6066:6080	770616	0	True				
ANR	770816	AssignmentExpression	decpt = - decpt		770616	0		=			
ANR	770817	Identifier	decpt		770616	0					
ANR	770818	UnaryOperationExpression	- decpt		770616	1					
ANR	770819	UnaryOperator	-		770616	0					
ANR	770820	Identifier	decpt		770616	1					
ANR	770821	ExpressionStatement	* p2 ++ = '-'	239:12:6094:6105	770616	1	True				
ANR	770822	AssignmentExpression	* p2 ++ = '-'		770616	0		=			
ANR	770823	UnaryOperationExpression	* p2 ++		770616	0					
ANR	770824	UnaryOperator	*		770616	0					
ANR	770825	PostIncDecOperationExpression	p2 ++		770616	1					
ANR	770826	Identifier	p2		770616	0					
ANR	770827	IncDec	++		770616	1					
ANR	770828	PrimaryExpression	'-'		770616	1					
ANR	770829	ElseStatement	else		770616	0					
ANR	770830	ExpressionStatement	* p2 ++ = '+'	242:12:6142:6153	770616	0	True				
ANR	770831	AssignmentExpression	* p2 ++ = '+'		770616	0		=			
ANR	770832	UnaryOperationExpression	* p2 ++		770616	0					
ANR	770833	UnaryOperator	*		770616	0					
ANR	770834	PostIncDecOperationExpression	p2 ++		770616	1					
ANR	770835	Identifier	p2		770616	0					
ANR	770836	IncDec	++		770616	1					
ANR	770837	PrimaryExpression	'+'		770616	1					
ANR	770838	IfStatement	if ( decpt / 100 > 0 )		770616	6					
ANR	770839	Condition	decpt / 100 > 0	243:12:6167:6181	770616	0	True				
ANR	770840	RelationalExpression	decpt / 100 > 0		770616	0		>			
ANR	770841	MultiplicativeExpression	decpt / 100		770616	0		/			
ANR	770842	Identifier	decpt		770616	0					
ANR	770843	PrimaryExpression	100		770616	1					
ANR	770844	PrimaryExpression	0		770616	1					
ANR	770845	ExpressionStatement	* p2 ++ = decpt / 100 + '0'	244:12:6196:6221	770616	1	True				
ANR	770846	AssignmentExpression	* p2 ++ = decpt / 100 + '0'		770616	0		=			
ANR	770847	UnaryOperationExpression	* p2 ++		770616	0					
ANR	770848	UnaryOperator	*		770616	0					
ANR	770849	PostIncDecOperationExpression	p2 ++		770616	1					
ANR	770850	Identifier	p2		770616	0					
ANR	770851	IncDec	++		770616	1					
ANR	770852	AdditiveExpression	decpt / 100 + '0'		770616	1		+			
ANR	770853	MultiplicativeExpression	decpt / 100		770616	0		/			
ANR	770854	Identifier	decpt		770616	0					
ANR	770855	PrimaryExpression	100		770616	1					
ANR	770856	PrimaryExpression	'0'		770616	1					
ANR	770857	IfStatement	if ( decpt / 10 > 0 )		770616	7					
ANR	770858	Condition	decpt / 10 > 0	247:12:6328:6341	770616	0	True				
ANR	770859	RelationalExpression	decpt / 10 > 0		770616	0		>			
ANR	770860	MultiplicativeExpression	decpt / 10		770616	0		/			
ANR	770861	Identifier	decpt		770616	0					
ANR	770862	PrimaryExpression	10		770616	1					
ANR	770863	PrimaryExpression	0		770616	1					
ANR	770864	ExpressionStatement	* p2 ++ = ( decpt % 100 ) / 10 + '0'	249:12:6363:6395	770616	1	True				
ANR	770865	AssignmentExpression	* p2 ++ = ( decpt % 100 ) / 10 + '0'		770616	0		=			
ANR	770866	UnaryOperationExpression	* p2 ++		770616	0					
ANR	770867	UnaryOperator	*		770616	0					
ANR	770868	PostIncDecOperationExpression	p2 ++		770616	1					
ANR	770869	Identifier	p2		770616	0					
ANR	770870	IncDec	++		770616	1					
ANR	770871	AdditiveExpression	( decpt % 100 ) / 10 + '0'		770616	1		+			
ANR	770872	MultiplicativeExpression	( decpt % 100 ) / 10		770616	0		/			
ANR	770873	MultiplicativeExpression	decpt % 100		770616	0		%			
ANR	770874	Identifier	decpt		770616	0					
ANR	770875	PrimaryExpression	100		770616	1					
ANR	770876	PrimaryExpression	10		770616	1					
ANR	770877	PrimaryExpression	'0'		770616	1					
ANR	770878	ExpressionStatement	* p2 ++ = decpt % 10 + '0'	250:8:6405:6429	770616	8	True				
ANR	770879	AssignmentExpression	* p2 ++ = decpt % 10 + '0'		770616	0		=			
ANR	770880	UnaryOperationExpression	* p2 ++		770616	0					
ANR	770881	UnaryOperator	*		770616	0					
ANR	770882	PostIncDecOperationExpression	p2 ++		770616	1					
ANR	770883	Identifier	p2		770616	0					
ANR	770884	IncDec	++		770616	1					
ANR	770885	AdditiveExpression	decpt % 10 + '0'		770616	1		+			
ANR	770886	MultiplicativeExpression	decpt % 10		770616	0		%			
ANR	770887	Identifier	decpt		770616	0					
ANR	770888	PrimaryExpression	10		770616	1					
ANR	770889	PrimaryExpression	'0'		770616	1					
ANR	770890	ElseStatement	else		770616	0					
ANR	770891	CompoundStatement		45:9:1201:1201	770616	0					
ANR	770892	IfStatement	if ( decpt <= 0 )		770616	0					
ANR	770893	Condition	decpt <= 0	253:12:6460:6469	770616	0	True				
ANR	770894	RelationalExpression	decpt <= 0		770616	0		<=			
ANR	770895	Identifier	decpt		770616	0					
ANR	770896	PrimaryExpression	0		770616	1					
ANR	770897	CompoundStatement		46:24:1227:1227	770616	1					
ANR	770898	IfStatement	if ( * p1 != '0' )		770616	0					
ANR	770899	Condition	* p1 != '0'	254:16:6490:6499	770616	0	True				
ANR	770900	EqualityExpression	* p1 != '0'		770616	0		!=			
ANR	770901	UnaryOperationExpression	* p1		770616	0					
ANR	770902	UnaryOperator	*		770616	0					
ANR	770903	Identifier	p1		770616	1					
ANR	770904	PrimaryExpression	'0'		770616	1					
ANR	770905	CompoundStatement		47:28:1257:1257	770616	1					
ANR	770906	ExpressionStatement	* p2 ++ = '0'	255:16:6520:6531	770616	0	True				
ANR	770907	AssignmentExpression	* p2 ++ = '0'		770616	0		=			
ANR	770908	UnaryOperationExpression	* p2 ++		770616	0					
ANR	770909	UnaryOperator	*		770616	0					
ANR	770910	PostIncDecOperationExpression	p2 ++		770616	1					
ANR	770911	Identifier	p2		770616	0					
ANR	770912	IncDec	++		770616	1					
ANR	770913	PrimaryExpression	'0'		770616	1					
ANR	770914	ExpressionStatement	* p2 ++ = '.'	256:16:6549:6560	770616	1	True				
ANR	770915	AssignmentExpression	* p2 ++ = '.'		770616	0		=			
ANR	770916	UnaryOperationExpression	* p2 ++		770616	0					
ANR	770917	UnaryOperator	*		770616	0					
ANR	770918	PostIncDecOperationExpression	p2 ++		770616	1					
ANR	770919	Identifier	p2		770616	0					
ANR	770920	IncDec	++		770616	1					
ANR	770921	PrimaryExpression	'.'		770616	1					
ANR	770922	WhileStatement	while ( decpt < 0 )		770616	1					
ANR	770923	Condition	decpt < 0	258:19:6595:6603	770616	0	True				
ANR	770924	RelationalExpression	decpt < 0		770616	0		<			
ANR	770925	Identifier	decpt		770616	0					
ANR	770926	PrimaryExpression	0		770616	1					
ANR	770927	CompoundStatement		51:30:1361:1361	770616	1					
ANR	770928	ExpressionStatement	decpt ++	259:16:6624:6631	770616	0	True				
ANR	770929	PostIncDecOperationExpression	decpt ++		770616	0					
ANR	770930	Identifier	decpt		770616	0					
ANR	770931	IncDec	++		770616	1					
ANR	770932	ExpressionStatement	* p2 ++ = '0'	260:16:6649:6660	770616	1	True				
ANR	770933	AssignmentExpression	* p2 ++ = '0'		770616	0		=			
ANR	770934	UnaryOperationExpression	* p2 ++		770616	0					
ANR	770935	UnaryOperator	*		770616	0					
ANR	770936	PostIncDecOperationExpression	p2 ++		770616	1					
ANR	770937	Identifier	p2		770616	0					
ANR	770938	IncDec	++		770616	1					
ANR	770939	PrimaryExpression	'0'		770616	1					
ANR	770940	ForStatement	for ( i = 1 ; i <= ndigit ; i ++ )		770616	1					
ANR	770941	ForInit	i = 1 ;	263:13:6699:6704	770616	0	True				
ANR	770942	AssignmentExpression	i = 1		770616	0		=			
ANR	770943	Identifier	i		770616	0					
ANR	770944	PrimaryExpression	1		770616	1					
ANR	770945	Condition	i <= ndigit	263:20:6706:6716	770616	1	True				
ANR	770946	RelationalExpression	i <= ndigit		770616	0		<=			
ANR	770947	Identifier	i		770616	0					
ANR	770948	Identifier	ndigit		770616	1					
ANR	770949	PostIncDecOperationExpression	i ++	263:33:6719:6721	770616	2	True				
ANR	770950	Identifier	i		770616	0					
ANR	770951	IncDec	++		770616	1					
ANR	770952	CompoundStatement		56:38:1479:1479	770616	3					
ANR	770953	ExpressionStatement	* p2 ++ = * p1 ++	264:12:6738:6751	770616	0	True				
ANR	770954	AssignmentExpression	* p2 ++ = * p1 ++		770616	0		=			
ANR	770955	UnaryOperationExpression	* p2 ++		770616	0					
ANR	770956	UnaryOperator	*		770616	0					
ANR	770957	PostIncDecOperationExpression	p2 ++		770616	1					
ANR	770958	Identifier	p2		770616	0					
ANR	770959	IncDec	++		770616	1					
ANR	770960	UnaryOperationExpression	* p1 ++		770616	1					
ANR	770961	UnaryOperator	*		770616	0					
ANR	770962	PostIncDecOperationExpression	p1 ++		770616	1					
ANR	770963	Identifier	p1		770616	0					
ANR	770964	IncDec	++		770616	1					
ANR	770965	IfStatement	if ( i == decpt )		770616	1					
ANR	770966	Condition	i == decpt	265:16:6769:6778	770616	0	True				
ANR	770967	EqualityExpression	i == decpt		770616	0		==			
ANR	770968	Identifier	i		770616	0					
ANR	770969	Identifier	decpt		770616	1					
ANR	770970	ExpressionStatement	* p2 ++ = '.'	266:16:6797:6808	770616	1	True				
ANR	770971	AssignmentExpression	* p2 ++ = '.'		770616	0		=			
ANR	770972	UnaryOperationExpression	* p2 ++		770616	0					
ANR	770973	UnaryOperator	*		770616	0					
ANR	770974	PostIncDecOperationExpression	p2 ++		770616	1					
ANR	770975	Identifier	p2		770616	0					
ANR	770976	IncDec	++		770616	1					
ANR	770977	PrimaryExpression	'.'		770616	1					
ANR	770978	IfStatement	if ( ndigit < decpt )		770616	2					
ANR	770979	Condition	ndigit < decpt	268:12:6832:6845	770616	0	True				
ANR	770980	RelationalExpression	ndigit < decpt		770616	0		<			
ANR	770981	Identifier	ndigit		770616	0					
ANR	770982	Identifier	decpt		770616	1					
ANR	770983	CompoundStatement		61:28:1603:1603	770616	1					
ANR	770984	WhileStatement	while ( ndigit ++ < decpt )		770616	0					
ANR	770985	Condition	ndigit ++ < decpt	269:19:6869:6884	770616	0	True				
ANR	770986	RelationalExpression	ndigit ++ < decpt		770616	0		<			
ANR	770987	PostIncDecOperationExpression	ndigit ++		770616	0					
ANR	770988	Identifier	ndigit		770616	0					
ANR	770989	IncDec	++		770616	1					
ANR	770990	Identifier	decpt		770616	1					
ANR	770991	ExpressionStatement	* p2 ++ = '0'	270:16:6903:6914	770616	1	True				
ANR	770992	AssignmentExpression	* p2 ++ = '0'		770616	0		=			
ANR	770993	UnaryOperationExpression	* p2 ++		770616	0					
ANR	770994	UnaryOperator	*		770616	0					
ANR	770995	PostIncDecOperationExpression	p2 ++		770616	1					
ANR	770996	Identifier	p2		770616	0					
ANR	770997	IncDec	++		770616	1					
ANR	770998	PrimaryExpression	'0'		770616	1					
ANR	770999	ExpressionStatement	* p2 ++ = '.'	271:12:6928:6939	770616	1	True				
ANR	771000	AssignmentExpression	* p2 ++ = '.'		770616	0		=			
ANR	771001	UnaryOperationExpression	* p2 ++		770616	0					
ANR	771002	UnaryOperator	*		770616	0					
ANR	771003	PostIncDecOperationExpression	p2 ++		770616	1					
ANR	771004	Identifier	p2		770616	0					
ANR	771005	IncDec	++		770616	1					
ANR	771006	PrimaryExpression	'.'		770616	1					
ANR	771007	IfStatement	if ( p2 [ - 1 ] == '.' && ! altform )		770616	13					
ANR	771008	Condition	p2 [ - 1 ] == '.' && ! altform	274:8:6965:6989	770616	0	True				
ANR	771009	AndExpression	p2 [ - 1 ] == '.' && ! altform		770616	0		&&			
ANR	771010	EqualityExpression	p2 [ - 1 ] == '.'		770616	0		==			
ANR	771011	ArrayIndexing	p2 [ - 1 ]		770616	0					
ANR	771012	Identifier	p2		770616	0					
ANR	771013	UnaryOperationExpression	- 1		770616	1					
ANR	771014	UnaryOperator	-		770616	0					
ANR	771015	PrimaryExpression	1		770616	1					
ANR	771016	PrimaryExpression	'.'		770616	1					
ANR	771017	UnaryOperationExpression	! altform		770616	1					
ANR	771018	UnaryOperator	!		770616	0					
ANR	771019	Identifier	altform		770616	1					
ANR	771020	ExpressionStatement	p2 --	275:8:7000:7004	770616	1	True				
ANR	771021	PostIncDecOperationExpression	p2 --		770616	0					
ANR	771022	Identifier	p2		770616	0					
ANR	771023	IncDec	--		770616	1					
ANR	771024	ExpressionStatement	* p2 = '\\0'	276:4:7010:7020	770616	14	True				
ANR	771025	AssignmentExpression	* p2 = '\\0'		770616	0		=			
ANR	771026	UnaryOperationExpression	* p2		770616	0					
ANR	771027	UnaryOperator	*		770616	0					
ANR	771028	Identifier	p2		770616	1					
ANR	771029	PrimaryExpression	'\\0'		770616	1					
ANR	771030	ReturnStatement	return ( buf ) ;	277:4:7026:7038	770616	15	True				
ANR	771031	Identifier	buf		770616	0					
ANR	771032	ReturnType	static char *		770616	1					
ANR	771033	Identifier	apr_gcvt		770616	2					
ANR	771034	ParameterList	"double number , int ndigit , char * buf , boolean_e altform"		770616	3					
ANR	771035	Parameter	double number	207:22:5187:5199	770616	0	True				
ANR	771036	ParameterType	double		770616	0					
ANR	771037	Identifier	number		770616	1					
ANR	771038	Parameter	int ndigit	207:37:5202:5211	770616	1	True				
ANR	771039	ParameterType	int		770616	0					
ANR	771040	Identifier	ndigit		770616	1					
ANR	771041	Parameter	char * buf	207:49:5214:5222	770616	2	True				
ANR	771042	ParameterType	char *		770616	0					
ANR	771043	Identifier	buf		770616	1					
ANR	771044	Parameter	boolean_e altform	207:60:5225:5241	770616	3	True				
ANR	771045	ParameterType	boolean_e		770616	0					
ANR	771046	Identifier	altform		770616	1					
ANR	771047	CFGEntryNode	ENTRY		770616		True				
ANR	771048	CFGExitNode	EXIT		770616		True				
ANR	771049	Symbol	p1		770616						
ANR	771050	Symbol	p2		770616						
ANR	771051	Symbol	* p1		770616						
ANR	771052	Symbol	apr_ecvt		770616						
ANR	771053	Symbol	& sign		770616						
ANR	771054	Symbol	sign		770616						
ANR	771055	Symbol	magn		770616						
ANR	771056	Symbol	* p1 ++		770616						
ANR	771057	Symbol	i		770616						
ANR	771058	Symbol	* p2 ++		770616						
ANR	771059	Symbol	* p2		770616						
ANR	771060	Symbol	buf1		770616						
ANR	771061	Symbol	number		770616						
ANR	771062	Symbol	buf		770616						
ANR	771063	Symbol	* i		770616						
ANR	771064	Symbol	& decpt		770616						
ANR	771065	Symbol	decpt		770616						
ANR	771066	Symbol	nd		770616						
ANR	771067	Symbol	altform		770616						
ANR	771068	Symbol	ndigit		770616						
ANR	771069	DeclStmt									
ANR	771070	Decl							apr_size_t	apr_size_t	p
ANR	771071	Function	conv_10	375:0:10780:11992							
ANR	771072	FunctionDef	"conv_10 (register apr_int32_t num , register int is_unsigned , register int * is_negative , char * buf_end , register apr_size_t * len)"		771071	0					
ANR	771073	CompoundStatement		378:0:10963:11992	771071	0					
ANR	771074	Statement	register	379:4:10969:10976	771071	0	True				
ANR	771075	IdentifierDeclStatement	char * p = buf_end ;	379:13:10978:10995	771071	1	True				
ANR	771076	IdentifierDecl	* p = buf_end		771071	0					
ANR	771077	IdentifierDeclType	char *		771071	0					
ANR	771078	Identifier	p		771071	1					
ANR	771079	AssignmentExpression	* p = buf_end		771071	2		=			
ANR	771080	Identifier	buf_end		771071	0					
ANR	771081	Identifier	buf_end		771071	1					
ANR	771082	Statement	register	380:4:11001:11008	771071	2	True				
ANR	771083	IdentifierDeclStatement	apr_uint32_t magnitude = num ;	380:13:11010:11038	771071	3	True				
ANR	771084	IdentifierDecl	magnitude = num		771071	0					
ANR	771085	IdentifierDeclType	apr_uint32_t		771071	0					
ANR	771086	Identifier	magnitude		771071	1					
ANR	771087	AssignmentExpression	magnitude = num		771071	2		=			
ANR	771088	Identifier	num		771071	0					
ANR	771089	Identifier	num		771071	1					
ANR	771090	IfStatement	if ( is_unsigned )		771071	4					
ANR	771091	Condition	is_unsigned	382:8:11049:11059	771071	0	True				
ANR	771092	Identifier	is_unsigned		771071	0					
ANR	771093	CompoundStatement		5:21:98:98	771071	1					
ANR	771094	ExpressionStatement	* is_negative = FALSE	383:8:11072:11092	771071	0	True				
ANR	771095	AssignmentExpression	* is_negative = FALSE		771071	0		=			
ANR	771096	UnaryOperationExpression	* is_negative		771071	0					
ANR	771097	UnaryOperator	*		771071	0					
ANR	771098	Identifier	is_negative		771071	1					
ANR	771099	Identifier	FALSE		771071	1					
ANR	771100	ElseStatement	else		771071	0					
ANR	771101	CompoundStatement		8:9:145:145	771071	0					
ANR	771102	ExpressionStatement	* is_negative = ( num < 0 )	386:8:11119:11143	771071	0	True				
ANR	771103	AssignmentExpression	* is_negative = ( num < 0 )		771071	0		=			
ANR	771104	UnaryOperationExpression	* is_negative		771071	0					
ANR	771105	UnaryOperator	*		771071	0					
ANR	771106	Identifier	is_negative		771071	1					
ANR	771107	RelationalExpression	num < 0		771071	1		<			
ANR	771108	Identifier	num		771071	0					
ANR	771109	PrimaryExpression	0		771071	1					
ANR	771110	IfStatement	if ( * is_negative )		771071	1					
ANR	771111	Condition	* is_negative	397:12:11554:11565	771071	0	True				
ANR	771112	UnaryOperationExpression	* is_negative		771071	0					
ANR	771113	UnaryOperator	*		771071	0					
ANR	771114	Identifier	is_negative		771071	1					
ANR	771115	CompoundStatement		21:12:618:641	771071	1					
ANR	771116	IdentifierDeclStatement	apr_int32_t t = num + 1 ;	398:12:11582:11605	771071	0	True				
ANR	771117	IdentifierDecl	t = num + 1		771071	0					
ANR	771118	IdentifierDeclType	apr_int32_t		771071	0					
ANR	771119	Identifier	t		771071	1					
ANR	771120	AssignmentExpression	t = num + 1		771071	2		=			
ANR	771121	Identifier	t		771071	0					
ANR	771122	AdditiveExpression	num + 1		771071	1		+			
ANR	771123	Identifier	num		771071	0					
ANR	771124	PrimaryExpression	1		771071	1					
ANR	771125	ExpressionStatement	magnitude = ( ( apr_uint32_t ) - t ) + 1	399:12:11619:11654	771071	1	True				
ANR	771126	AssignmentExpression	magnitude = ( ( apr_uint32_t ) - t ) + 1		771071	0		=			
ANR	771127	Identifier	magnitude		771071	0					
ANR	771128	AdditiveExpression	( ( apr_uint32_t ) - t ) + 1		771071	1		+			
ANR	771129	CastExpression	( apr_uint32_t ) - t		771071	0					
ANR	771130	CastTarget	apr_uint32_t		771071	0					
ANR	771131	UnaryOperationExpression	- t		771071	1					
ANR	771132	UnaryOperator	-		771071	0					
ANR	771133	Identifier	t		771071	1					
ANR	771134	PrimaryExpression	1		771071	1					
ANR	771135	DoStatement	do		771071	5					
ANR	771136	CompoundStatement		30:17:815:858	771071	0					
ANR	771137	Statement	register	407:8:11770:11777	771071	0	True				
ANR	771138	IdentifierDeclStatement	apr_uint32_t new_magnitude = magnitude / 10 ;	407:17:11779:11822	771071	1	True				
ANR	771139	IdentifierDecl	new_magnitude = magnitude / 10		771071	0					
ANR	771140	IdentifierDeclType	apr_uint32_t		771071	0					
ANR	771141	Identifier	new_magnitude		771071	1					
ANR	771142	AssignmentExpression	new_magnitude = magnitude / 10		771071	2		=			
ANR	771143	Identifier	new_magnitude		771071	0					
ANR	771144	MultiplicativeExpression	magnitude / 10		771071	1		/			
ANR	771145	Identifier	magnitude		771071	0					
ANR	771146	PrimaryExpression	10		771071	1					
ANR	771147	ExpressionStatement	* -- p = ( char ) ( magnitude - new_magnitude * 10 + '0' )	409:8:11833:11885	771071	2	True				
ANR	771148	AssignmentExpression	* -- p = ( char ) ( magnitude - new_magnitude * 10 + '0' )		771071	0		=			
ANR	771149	UnaryOperationExpression	* -- p		771071	0					
ANR	771150	UnaryOperator	*		771071	0					
ANR	771151	UnaryExpression	-- p		771071	1					
ANR	771152	IncDec	--		771071	0					
ANR	771153	Identifier	p		771071	1					
ANR	771154	CastExpression	( char ) ( magnitude - new_magnitude * 10 + '0' )		771071	1					
ANR	771155	CastTarget	char		771071	0					
ANR	771156	AdditiveExpression	magnitude - new_magnitude * 10 + '0'		771071	1		-			
ANR	771157	Identifier	magnitude		771071	0					
ANR	771158	AdditiveExpression	new_magnitude * 10 + '0'		771071	1		+			
ANR	771159	MultiplicativeExpression	new_magnitude * 10		771071	0		*			
ANR	771160	Identifier	new_magnitude		771071	0					
ANR	771161	PrimaryExpression	10		771071	1					
ANR	771162	PrimaryExpression	'0'		771071	1					
ANR	771163	ExpressionStatement	magnitude = new_magnitude	410:8:11895:11920	771071	3	True				
ANR	771164	AssignmentExpression	magnitude = new_magnitude		771071	0		=			
ANR	771165	Identifier	magnitude		771071	0					
ANR	771166	Identifier	new_magnitude		771071	1					
ANR	771167	Condition	magnitude	412:11:11939:11947	771071	1	True				
ANR	771168	Identifier	magnitude		771071	0					
ANR	771169	ExpressionStatement	* len = buf_end - p	414:4:11956:11974	771071	6	True				
ANR	771170	AssignmentExpression	* len = buf_end - p		771071	0		=			
ANR	771171	UnaryOperationExpression	* len		771071	0					
ANR	771172	UnaryOperator	*		771071	0					
ANR	771173	Identifier	len		771071	1					
ANR	771174	AdditiveExpression	buf_end - p		771071	1		-			
ANR	771175	Identifier	buf_end		771071	0					
ANR	771176	Identifier	p		771071	1					
ANR	771177	ReturnStatement	return ( p ) ;	415:4:11980:11990	771071	7	True				
ANR	771178	Identifier	p		771071	0					
ANR	771179	ReturnType	static char *		771071	1					
ANR	771180	Identifier	conv_10		771071	2					
ANR	771181	ParameterList	"register apr_int32_t num , register int is_unsigned , register int * is_negative , char * buf_end , register apr_size_t * len"		771071	3					
ANR	771182	Parameter	register apr_int32_t num	375:21:10801:10824	771071	0	True				
ANR	771183	ParameterType	register apr_int32_t		771071	0					
ANR	771184	Identifier	num		771071	1					
ANR	771185	Parameter	register int is_unsigned	375:47:10827:10850	771071	1	True				
ANR	771186	ParameterType	register int		771071	0					
ANR	771187	Identifier	is_unsigned		771071	1					
ANR	771188	Parameter	register int * is_negative	376:21:10874:10898	771071	2	True				
ANR	771189	ParameterType	register int *		771071	0					
ANR	771190	Identifier	is_negative		771071	1					
ANR	771191	Parameter	char * buf_end	376:48:10901:10913	771071	3	True				
ANR	771192	ParameterType	char *		771071	0					
ANR	771193	Identifier	buf_end		771071	1					
ANR	771194	Parameter	register apr_size_t * len	377:21:10937:10960	771071	4	True				
ANR	771195	ParameterType	register apr_size_t *		771071	0					
ANR	771196	Identifier	len		771071	1					
ANR	771197	CFGEntryNode	ENTRY		771071		True				
ANR	771198	CFGExitNode	EXIT		771071		True				
ANR	771199	Symbol	* -- p		771071						
ANR	771200	Symbol	num		771071						
ANR	771201	Symbol	new_magnitude		771071						
ANR	771202	Symbol	p		771071						
ANR	771203	Symbol	len		771071						
ANR	771204	Symbol	t		771071						
ANR	771205	Symbol	is_unsigned		771071						
ANR	771206	Symbol	magnitude		771071						
ANR	771207	Symbol	FALSE		771071						
ANR	771208	Symbol	* p		771071						
ANR	771209	Symbol	buf_end		771071						
ANR	771210	Symbol	is_negative		771071						
ANR	771211	Symbol	* is_negative		771071						
ANR	771212	Symbol	* len		771071						
ANR	771213	Function	conv_10_quad	418:0:11995:13590							
ANR	771214	FunctionDef	"conv_10_quad (apr_int64_t num , register int is_unsigned , register int * is_negative , char * buf_end , register apr_size_t * len)"		771213	0					
ANR	771215	CompoundStatement		421:0:12174:13590	771213	0					
ANR	771216	Statement	register	422:4:12180:12187	771213	0	True				
ANR	771217	IdentifierDeclStatement	char * p = buf_end ;	422:13:12189:12206	771213	1	True				
ANR	771218	IdentifierDecl	* p = buf_end		771213	0					
ANR	771219	IdentifierDeclType	char *		771213	0					
ANR	771220	Identifier	p		771213	1					
ANR	771221	AssignmentExpression	* p = buf_end		771213	2		=			
ANR	771222	Identifier	buf_end		771213	0					
ANR	771223	Identifier	buf_end		771213	1					
ANR	771224	IdentifierDeclStatement	apr_uint64_t magnitude = num ;	423:4:12212:12240	771213	2	True				
ANR	771225	IdentifierDecl	magnitude = num		771213	0					
ANR	771226	IdentifierDeclType	apr_uint64_t		771213	0					
ANR	771227	Identifier	magnitude		771213	1					
ANR	771228	AssignmentExpression	magnitude = num		771213	2		=			
ANR	771229	Identifier	num		771213	0					
ANR	771230	Identifier	num		771213	1					
ANR	771231	IfStatement	if ( ( magnitude <= APR_UINT32_MAX && is_unsigned ) || ( num <= APR_INT32_MAX && num >= APR_INT32_MIN && ! is_unsigned ) )		771213	3					
ANR	771232	Condition	( magnitude <= APR_UINT32_MAX && is_unsigned ) || ( num <= APR_INT32_MAX && num >= APR_INT32_MIN && ! is_unsigned )	430:8:12440:12557	771213	0	True				
ANR	771233	OrExpression	( magnitude <= APR_UINT32_MAX && is_unsigned ) || ( num <= APR_INT32_MAX && num >= APR_INT32_MIN && ! is_unsigned )		771213	0		||			
ANR	771234	AndExpression	magnitude <= APR_UINT32_MAX && is_unsigned		771213	0		&&			
ANR	771235	RelationalExpression	magnitude <= APR_UINT32_MAX		771213	0		<=			
ANR	771236	Identifier	magnitude		771213	0					
ANR	771237	Identifier	APR_UINT32_MAX		771213	1					
ANR	771238	Identifier	is_unsigned		771213	1					
ANR	771239	AndExpression	num <= APR_INT32_MAX && num >= APR_INT32_MIN && ! is_unsigned		771213	1		&&			
ANR	771240	RelationalExpression	num <= APR_INT32_MAX		771213	0		<=			
ANR	771241	Identifier	num		771213	0					
ANR	771242	Identifier	APR_INT32_MAX		771213	1					
ANR	771243	AndExpression	num >= APR_INT32_MIN && ! is_unsigned		771213	1		&&			
ANR	771244	RelationalExpression	num >= APR_INT32_MIN		771213	0		>=			
ANR	771245	Identifier	num		771213	0					
ANR	771246	Identifier	APR_INT32_MIN		771213	1					
ANR	771247	UnaryOperationExpression	! is_unsigned		771213	1					
ANR	771248	UnaryOperator	!		771213	0					
ANR	771249	Identifier	is_unsigned		771213	1					
ANR	771250	ReturnStatement	"return ( conv_10 ( ( apr_int32_t ) num , is_unsigned , is_negative , buf_end , len ) ) ;"	432:12:12572:12645	771213	1	True				
ANR	771251	CallExpression	"conv_10 ( ( apr_int32_t ) num , is_unsigned , is_negative , buf_end , len )"		771213	0					
ANR	771252	Callee	conv_10		771213	0					
ANR	771253	Identifier	conv_10		771213	0					
ANR	771254	ArgumentList	( apr_int32_t ) num		771213	1					
ANR	771255	Argument	( apr_int32_t ) num		771213	0					
ANR	771256	CastExpression	( apr_int32_t ) num		771213	0					
ANR	771257	CastTarget	apr_int32_t		771213	0					
ANR	771258	Identifier	num		771213	1					
ANR	771259	Argument	is_unsigned		771213	1					
ANR	771260	Identifier	is_unsigned		771213	0					
ANR	771261	Argument	is_negative		771213	2					
ANR	771262	Identifier	is_negative		771213	0					
ANR	771263	Argument	buf_end		771213	3					
ANR	771264	Identifier	buf_end		771213	0					
ANR	771265	Argument	len		771213	4					
ANR	771266	Identifier	len		771213	0					
ANR	771267	IfStatement	if ( is_unsigned )		771213	4					
ANR	771268	Condition	is_unsigned	434:8:12656:12666	771213	0	True				
ANR	771269	Identifier	is_unsigned		771213	0					
ANR	771270	CompoundStatement		14:21:494:494	771213	1					
ANR	771271	ExpressionStatement	* is_negative = FALSE	435:8:12679:12699	771213	0	True				
ANR	771272	AssignmentExpression	* is_negative = FALSE		771213	0		=			
ANR	771273	UnaryOperationExpression	* is_negative		771213	0					
ANR	771274	UnaryOperator	*		771213	0					
ANR	771275	Identifier	is_negative		771213	1					
ANR	771276	Identifier	FALSE		771213	1					
ANR	771277	ElseStatement	else		771213	0					
ANR	771278	CompoundStatement		17:9:541:541	771213	0					
ANR	771279	ExpressionStatement	* is_negative = ( num < 0 )	438:8:12726:12750	771213	0	True				
ANR	771280	AssignmentExpression	* is_negative = ( num < 0 )		771213	0		=			
ANR	771281	UnaryOperationExpression	* is_negative		771213	0					
ANR	771282	UnaryOperator	*		771213	0					
ANR	771283	Identifier	is_negative		771213	1					
ANR	771284	RelationalExpression	num < 0		771213	1		<			
ANR	771285	Identifier	num		771213	0					
ANR	771286	PrimaryExpression	0		771213	1					
ANR	771287	IfStatement	if ( * is_negative )		771213	1					
ANR	771288	Condition	* is_negative	449:12:13161:13172	771213	0	True				
ANR	771289	UnaryOperationExpression	* is_negative		771213	0					
ANR	771290	UnaryOperator	*		771213	0					
ANR	771291	Identifier	is_negative		771213	1					
ANR	771292	CompoundStatement		30:12:1014:1037	771213	1					
ANR	771293	IdentifierDeclStatement	apr_int64_t t = num + 1 ;	450:12:13189:13212	771213	0	True				
ANR	771294	IdentifierDecl	t = num + 1		771213	0					
ANR	771295	IdentifierDeclType	apr_int64_t		771213	0					
ANR	771296	Identifier	t		771213	1					
ANR	771297	AssignmentExpression	t = num + 1		771213	2		=			
ANR	771298	Identifier	t		771213	0					
ANR	771299	AdditiveExpression	num + 1		771213	1		+			
ANR	771300	Identifier	num		771213	0					
ANR	771301	PrimaryExpression	1		771213	1					
ANR	771302	ExpressionStatement	magnitude = ( ( apr_uint64_t ) - t ) + 1	451:12:13226:13261	771213	1	True				
ANR	771303	AssignmentExpression	magnitude = ( ( apr_uint64_t ) - t ) + 1		771213	0		=			
ANR	771304	Identifier	magnitude		771213	0					
ANR	771305	AdditiveExpression	( ( apr_uint64_t ) - t ) + 1		771213	1		+			
ANR	771306	CastExpression	( apr_uint64_t ) - t		771213	0					
ANR	771307	CastTarget	apr_uint64_t		771213	0					
ANR	771308	UnaryOperationExpression	- t		771213	1					
ANR	771309	UnaryOperator	-		771213	0					
ANR	771310	Identifier	t		771213	1					
ANR	771311	PrimaryExpression	1		771213	1					
ANR	771312	DoStatement	do		771213	5					
ANR	771313	CompoundStatement		39:8:1202:1245	771213	0					
ANR	771314	IdentifierDeclStatement	apr_uint64_t new_magnitude = magnitude / 10 ;	459:8:13377:13420	771213	0	True				
ANR	771315	IdentifierDecl	new_magnitude = magnitude / 10		771213	0					
ANR	771316	IdentifierDeclType	apr_uint64_t		771213	0					
ANR	771317	Identifier	new_magnitude		771213	1					
ANR	771318	AssignmentExpression	new_magnitude = magnitude / 10		771213	2		=			
ANR	771319	Identifier	new_magnitude		771213	0					
ANR	771320	MultiplicativeExpression	magnitude / 10		771213	1		/			
ANR	771321	Identifier	magnitude		771213	0					
ANR	771322	PrimaryExpression	10		771213	1					
ANR	771323	ExpressionStatement	* -- p = ( char ) ( magnitude - new_magnitude * 10 + '0' )	461:8:13431:13483	771213	1	True				
ANR	771324	AssignmentExpression	* -- p = ( char ) ( magnitude - new_magnitude * 10 + '0' )		771213	0		=			
ANR	771325	UnaryOperationExpression	* -- p		771213	0					
ANR	771326	UnaryOperator	*		771213	0					
ANR	771327	UnaryExpression	-- p		771213	1					
ANR	771328	IncDec	--		771213	0					
ANR	771329	Identifier	p		771213	1					
ANR	771330	CastExpression	( char ) ( magnitude - new_magnitude * 10 + '0' )		771213	1					
ANR	771331	CastTarget	char		771213	0					
ANR	771332	AdditiveExpression	magnitude - new_magnitude * 10 + '0'		771213	1		-			
ANR	771333	Identifier	magnitude		771213	0					
ANR	771334	AdditiveExpression	new_magnitude * 10 + '0'		771213	1		+			
ANR	771335	MultiplicativeExpression	new_magnitude * 10		771213	0		*			
ANR	771336	Identifier	new_magnitude		771213	0					
ANR	771337	PrimaryExpression	10		771213	1					
ANR	771338	PrimaryExpression	'0'		771213	1					
ANR	771339	ExpressionStatement	magnitude = new_magnitude	462:8:13493:13518	771213	2	True				
ANR	771340	AssignmentExpression	magnitude = new_magnitude		771213	0		=			
ANR	771341	Identifier	magnitude		771213	0					
ANR	771342	Identifier	new_magnitude		771213	1					
ANR	771343	Condition	magnitude	464:11:13537:13545	771213	1	True				
ANR	771344	Identifier	magnitude		771213	0					
ANR	771345	ExpressionStatement	* len = buf_end - p	466:4:13554:13572	771213	6	True				
ANR	771346	AssignmentExpression	* len = buf_end - p		771213	0		=			
ANR	771347	UnaryOperationExpression	* len		771213	0					
ANR	771348	UnaryOperator	*		771213	0					
ANR	771349	Identifier	len		771213	1					
ANR	771350	AdditiveExpression	buf_end - p		771213	1		-			
ANR	771351	Identifier	buf_end		771213	0					
ANR	771352	Identifier	p		771213	1					
ANR	771353	ReturnStatement	return ( p ) ;	467:4:13578:13588	771213	7	True				
ANR	771354	Identifier	p		771213	0					
ANR	771355	ReturnType	static char *		771213	1					
ANR	771356	Identifier	conv_10_quad		771213	2					
ANR	771357	ParameterList	"apr_int64_t num , register int is_unsigned , register int * is_negative , char * buf_end , register apr_size_t * len"		771213	3					
ANR	771358	Parameter	apr_int64_t num	418:26:12021:12035	771213	0	True				
ANR	771359	ParameterType	apr_int64_t		771213	0					
ANR	771360	Identifier	num		771213	1					
ANR	771361	Parameter	register int is_unsigned	418:43:12038:12061	771213	1	True				
ANR	771362	ParameterType	register int		771213	0					
ANR	771363	Identifier	is_unsigned		771213	1					
ANR	771364	Parameter	register int * is_negative	419:21:12085:12109	771213	2	True				
ANR	771365	ParameterType	register int *		771213	0					
ANR	771366	Identifier	is_negative		771213	1					
ANR	771367	Parameter	char * buf_end	419:48:12112:12124	771213	3	True				
ANR	771368	ParameterType	char *		771213	0					
ANR	771369	Identifier	buf_end		771213	1					
ANR	771370	Parameter	register apr_size_t * len	420:21:12148:12171	771213	4	True				
ANR	771371	ParameterType	register apr_size_t *		771213	0					
ANR	771372	Identifier	len		771213	1					
ANR	771373	CFGEntryNode	ENTRY		771213		True				
ANR	771374	CFGExitNode	EXIT		771213		True				
ANR	771375	Symbol	* -- p		771213						
ANR	771376	Symbol	num		771213						
ANR	771377	Symbol	APR_INT32_MIN		771213						
ANR	771378	Symbol	new_magnitude		771213						
ANR	771379	Symbol	p		771213						
ANR	771380	Symbol	APR_UINT32_MAX		771213						
ANR	771381	Symbol	len		771213						
ANR	771382	Symbol	t		771213						
ANR	771383	Symbol	is_unsigned		771213						
ANR	771384	Symbol	magnitude		771213						
ANR	771385	Symbol	FALSE		771213						
ANR	771386	Symbol	* p		771213						
ANR	771387	Symbol	buf_end		771213						
ANR	771388	Symbol	is_negative		771213						
ANR	771389	Symbol	conv_10		771213						
ANR	771390	Symbol	APR_INT32_MAX		771213						
ANR	771391	Symbol	* is_negative		771213						
ANR	771392	Symbol	* len		771213						
ANR	771393	Function	conv_in_addr	471:0:13605:14190							
ANR	771394	FunctionDef	"conv_in_addr (struct in_addr * ia , char * buf_end , apr_size_t * len)"		771393	0					
ANR	771395	CompoundStatement		472:0:13683:14190	771393	0					
ANR	771396	IdentifierDeclStatement	unsigned addr = ntohl ( ia -> s_addr ) ;	473:4:13689:13722	771393	0	True				
ANR	771397	IdentifierDecl	addr = ntohl ( ia -> s_addr )		771393	0					
ANR	771398	IdentifierDeclType	unsigned		771393	0					
ANR	771399	Identifier	addr		771393	1					
ANR	771400	AssignmentExpression	addr = ntohl ( ia -> s_addr )		771393	2		=			
ANR	771401	Identifier	addr		771393	0					
ANR	771402	CallExpression	ntohl ( ia -> s_addr )		771393	1					
ANR	771403	Callee	ntohl		771393	0					
ANR	771404	Identifier	ntohl		771393	0					
ANR	771405	ArgumentList	ia -> s_addr		771393	1					
ANR	771406	Argument	ia -> s_addr		771393	0					
ANR	771407	PtrMemberAccess	ia -> s_addr		771393	0					
ANR	771408	Identifier	ia		771393	0					
ANR	771409	Identifier	s_addr		771393	1					
ANR	771410	IdentifierDeclStatement	char * p = buf_end ;	474:4:13728:13745	771393	1	True				
ANR	771411	IdentifierDecl	* p = buf_end		771393	0					
ANR	771412	IdentifierDeclType	char *		771393	0					
ANR	771413	Identifier	p		771393	1					
ANR	771414	AssignmentExpression	* p = buf_end		771393	2		=			
ANR	771415	Identifier	buf_end		771393	0					
ANR	771416	Identifier	buf_end		771393	1					
ANR	771417	IdentifierDeclStatement	int is_negative ;	475:4:13751:13766	771393	2	True				
ANR	771418	IdentifierDecl	is_negative		771393	0					
ANR	771419	IdentifierDeclType	int		771393	0					
ANR	771420	Identifier	is_negative		771393	1					
ANR	771421	IdentifierDeclStatement	apr_size_t sub_len ;	476:4:13772:13790	771393	3	True				
ANR	771422	IdentifierDecl	sub_len		771393	0					
ANR	771423	IdentifierDeclType	apr_size_t		771393	0					
ANR	771424	Identifier	sub_len		771393	1					
ANR	771425	ExpressionStatement	"p = conv_10 ( ( addr & 0x000000FF ) , TRUE , & is_negative , p , & sub_len )"	478:4:13797:13868	771393	4	True				
ANR	771426	AssignmentExpression	"p = conv_10 ( ( addr & 0x000000FF ) , TRUE , & is_negative , p , & sub_len )"		771393	0		=			
ANR	771427	Identifier	p		771393	0					
ANR	771428	CallExpression	"conv_10 ( ( addr & 0x000000FF ) , TRUE , & is_negative , p , & sub_len )"		771393	1					
ANR	771429	Callee	conv_10		771393	0					
ANR	771430	Identifier	conv_10		771393	0					
ANR	771431	ArgumentList	addr & 0x000000FF		771393	1					
ANR	771432	Argument	addr & 0x000000FF		771393	0					
ANR	771433	BitAndExpression	addr & 0x000000FF		771393	0		&			
ANR	771434	Identifier	addr		771393	0					
ANR	771435	PrimaryExpression	0x000000FF		771393	1					
ANR	771436	Argument	TRUE		771393	1					
ANR	771437	Identifier	TRUE		771393	0					
ANR	771438	Argument	& is_negative		771393	2					
ANR	771439	UnaryOperationExpression	& is_negative		771393	0					
ANR	771440	UnaryOperator	&		771393	0					
ANR	771441	Identifier	is_negative		771393	1					
ANR	771442	Argument	p		771393	3					
ANR	771443	Identifier	p		771393	0					
ANR	771444	Argument	& sub_len		771393	4					
ANR	771445	UnaryOperationExpression	& sub_len		771393	0					
ANR	771446	UnaryOperator	&		771393	0					
ANR	771447	Identifier	sub_len		771393	1					
ANR	771448	ExpressionStatement	* -- p = '.'	479:4:13874:13884	771393	5	True				
ANR	771449	AssignmentExpression	* -- p = '.'		771393	0		=			
ANR	771450	UnaryOperationExpression	* -- p		771393	0					
ANR	771451	UnaryOperator	*		771393	0					
ANR	771452	UnaryExpression	-- p		771393	1					
ANR	771453	IncDec	--		771393	0					
ANR	771454	Identifier	p		771393	1					
ANR	771455	PrimaryExpression	'.'		771393	1					
ANR	771456	ExpressionStatement	"p = conv_10 ( ( addr & 0x0000FF00 ) >> 8 , TRUE , & is_negative , p , & sub_len )"	480:4:13890:13961	771393	6	True				
ANR	771457	AssignmentExpression	"p = conv_10 ( ( addr & 0x0000FF00 ) >> 8 , TRUE , & is_negative , p , & sub_len )"		771393	0		=			
ANR	771458	Identifier	p		771393	0					
ANR	771459	CallExpression	"conv_10 ( ( addr & 0x0000FF00 ) >> 8 , TRUE , & is_negative , p , & sub_len )"		771393	1					
ANR	771460	Callee	conv_10		771393	0					
ANR	771461	Identifier	conv_10		771393	0					
ANR	771462	ArgumentList	( addr & 0x0000FF00 ) >> 8		771393	1					
ANR	771463	Argument	( addr & 0x0000FF00 ) >> 8		771393	0					
ANR	771464	ShiftExpression	( addr & 0x0000FF00 ) >> 8		771393	0		>>			
ANR	771465	BitAndExpression	addr & 0x0000FF00		771393	0		&			
ANR	771466	Identifier	addr		771393	0					
ANR	771467	PrimaryExpression	0x0000FF00		771393	1					
ANR	771468	PrimaryExpression	8		771393	1					
ANR	771469	Argument	TRUE		771393	1					
ANR	771470	Identifier	TRUE		771393	0					
ANR	771471	Argument	& is_negative		771393	2					
ANR	771472	UnaryOperationExpression	& is_negative		771393	0					
ANR	771473	UnaryOperator	&		771393	0					
ANR	771474	Identifier	is_negative		771393	1					
ANR	771475	Argument	p		771393	3					
ANR	771476	Identifier	p		771393	0					
ANR	771477	Argument	& sub_len		771393	4					
ANR	771478	UnaryOperationExpression	& sub_len		771393	0					
ANR	771479	UnaryOperator	&		771393	0					
ANR	771480	Identifier	sub_len		771393	1					
ANR	771481	ExpressionStatement	* -- p = '.'	481:4:13967:13977	771393	7	True				
ANR	771482	AssignmentExpression	* -- p = '.'		771393	0		=			
ANR	771483	UnaryOperationExpression	* -- p		771393	0					
ANR	771484	UnaryOperator	*		771393	0					
ANR	771485	UnaryExpression	-- p		771393	1					
ANR	771486	IncDec	--		771393	0					
ANR	771487	Identifier	p		771393	1					
ANR	771488	PrimaryExpression	'.'		771393	1					
ANR	771489	ExpressionStatement	"p = conv_10 ( ( addr & 0x00FF0000 ) >> 16 , TRUE , & is_negative , p , & sub_len )"	482:4:13983:14054	771393	8	True				
ANR	771490	AssignmentExpression	"p = conv_10 ( ( addr & 0x00FF0000 ) >> 16 , TRUE , & is_negative , p , & sub_len )"		771393	0		=			
ANR	771491	Identifier	p		771393	0					
ANR	771492	CallExpression	"conv_10 ( ( addr & 0x00FF0000 ) >> 16 , TRUE , & is_negative , p , & sub_len )"		771393	1					
ANR	771493	Callee	conv_10		771393	0					
ANR	771494	Identifier	conv_10		771393	0					
ANR	771495	ArgumentList	( addr & 0x00FF0000 ) >> 16		771393	1					
ANR	771496	Argument	( addr & 0x00FF0000 ) >> 16		771393	0					
ANR	771497	ShiftExpression	( addr & 0x00FF0000 ) >> 16		771393	0		>>			
ANR	771498	BitAndExpression	addr & 0x00FF0000		771393	0		&			
ANR	771499	Identifier	addr		771393	0					
ANR	771500	PrimaryExpression	0x00FF0000		771393	1					
ANR	771501	PrimaryExpression	16		771393	1					
ANR	771502	Argument	TRUE		771393	1					
ANR	771503	Identifier	TRUE		771393	0					
ANR	771504	Argument	& is_negative		771393	2					
ANR	771505	UnaryOperationExpression	& is_negative		771393	0					
ANR	771506	UnaryOperator	&		771393	0					
ANR	771507	Identifier	is_negative		771393	1					
ANR	771508	Argument	p		771393	3					
ANR	771509	Identifier	p		771393	0					
ANR	771510	Argument	& sub_len		771393	4					
ANR	771511	UnaryOperationExpression	& sub_len		771393	0					
ANR	771512	UnaryOperator	&		771393	0					
ANR	771513	Identifier	sub_len		771393	1					
ANR	771514	ExpressionStatement	* -- p = '.'	483:4:14060:14070	771393	9	True				
ANR	771515	AssignmentExpression	* -- p = '.'		771393	0		=			
ANR	771516	UnaryOperationExpression	* -- p		771393	0					
ANR	771517	UnaryOperator	*		771393	0					
ANR	771518	UnaryExpression	-- p		771393	1					
ANR	771519	IncDec	--		771393	0					
ANR	771520	Identifier	p		771393	1					
ANR	771521	PrimaryExpression	'.'		771393	1					
ANR	771522	ExpressionStatement	"p = conv_10 ( ( addr & 0xFF000000 ) >> 24 , TRUE , & is_negative , p , & sub_len )"	484:4:14076:14147	771393	10	True				
ANR	771523	AssignmentExpression	"p = conv_10 ( ( addr & 0xFF000000 ) >> 24 , TRUE , & is_negative , p , & sub_len )"		771393	0		=			
ANR	771524	Identifier	p		771393	0					
ANR	771525	CallExpression	"conv_10 ( ( addr & 0xFF000000 ) >> 24 , TRUE , & is_negative , p , & sub_len )"		771393	1					
ANR	771526	Callee	conv_10		771393	0					
ANR	771527	Identifier	conv_10		771393	0					
ANR	771528	ArgumentList	( addr & 0xFF000000 ) >> 24		771393	1					
ANR	771529	Argument	( addr & 0xFF000000 ) >> 24		771393	0					
ANR	771530	ShiftExpression	( addr & 0xFF000000 ) >> 24		771393	0		>>			
ANR	771531	BitAndExpression	addr & 0xFF000000		771393	0		&			
ANR	771532	Identifier	addr		771393	0					
ANR	771533	PrimaryExpression	0xFF000000		771393	1					
ANR	771534	PrimaryExpression	24		771393	1					
ANR	771535	Argument	TRUE		771393	1					
ANR	771536	Identifier	TRUE		771393	0					
ANR	771537	Argument	& is_negative		771393	2					
ANR	771538	UnaryOperationExpression	& is_negative		771393	0					
ANR	771539	UnaryOperator	&		771393	0					
ANR	771540	Identifier	is_negative		771393	1					
ANR	771541	Argument	p		771393	3					
ANR	771542	Identifier	p		771393	0					
ANR	771543	Argument	& sub_len		771393	4					
ANR	771544	UnaryOperationExpression	& sub_len		771393	0					
ANR	771545	UnaryOperator	&		771393	0					
ANR	771546	Identifier	sub_len		771393	1					
ANR	771547	ExpressionStatement	* len = buf_end - p	486:4:14154:14172	771393	11	True				
ANR	771548	AssignmentExpression	* len = buf_end - p		771393	0		=			
ANR	771549	UnaryOperationExpression	* len		771393	0					
ANR	771550	UnaryOperator	*		771393	0					
ANR	771551	Identifier	len		771393	1					
ANR	771552	AdditiveExpression	buf_end - p		771393	1		-			
ANR	771553	Identifier	buf_end		771393	0					
ANR	771554	Identifier	p		771393	1					
ANR	771555	ReturnStatement	return ( p ) ;	487:4:14178:14188	771393	12	True				
ANR	771556	Identifier	p		771393	0					
ANR	771557	ReturnType	static char *		771393	1					
ANR	771558	Identifier	conv_in_addr		771393	2					
ANR	771559	ParameterList	"struct in_addr * ia , char * buf_end , apr_size_t * len"		771393	3					
ANR	771560	Parameter	struct in_addr * ia	471:26:13631:13648	771393	0	True				
ANR	771561	ParameterType	struct in_addr *		771393	0					
ANR	771562	Identifier	ia		771393	1					
ANR	771563	Parameter	char * buf_end	471:46:13651:13663	771393	1	True				
ANR	771564	ParameterType	char *		771393	0					
ANR	771565	Identifier	buf_end		771393	1					
ANR	771566	Parameter	apr_size_t * len	471:61:13666:13680	771393	2	True				
ANR	771567	ParameterType	apr_size_t *		771393	0					
ANR	771568	Identifier	len		771393	1					
ANR	771569	CFGEntryNode	ENTRY		771393		True				
ANR	771570	CFGExitNode	EXIT		771393		True				
ANR	771571	Symbol	* -- p		771393						
ANR	771572	Symbol	ntohl		771393						
ANR	771573	Symbol	TRUE		771393						
ANR	771574	Symbol	& is_negative		771393						
ANR	771575	Symbol	& sub_len		771393						
ANR	771576	Symbol	p		771393						
ANR	771577	Symbol	sub_len		771393						
ANR	771578	Symbol	len		771393						
ANR	771579	Symbol	ia -> s_addr		771393						
ANR	771580	Symbol	ia		771393						
ANR	771581	Symbol	* p		771393						
ANR	771582	Symbol	buf_end		771393						
ANR	771583	Symbol	addr		771393						
ANR	771584	Symbol	* ia		771393						
ANR	771585	Symbol	is_negative		771393						
ANR	771586	Symbol	conv_10		771393						
ANR	771587	Symbol	* len		771393						
ANR	771588	Function	conv_apr_sockaddr	492:0:14306:15248							
ANR	771589	FunctionDef	"conv_apr_sockaddr (apr_sockaddr_t * sa , char * buf_end , apr_size_t * len)"		771588	0					
ANR	771590	CompoundStatement		493:0:14389:15248	771588	0					
ANR	771591	IdentifierDeclStatement	char * p = buf_end ;	494:4:14395:14412	771588	0	True				
ANR	771592	IdentifierDecl	* p = buf_end		771588	0					
ANR	771593	IdentifierDeclType	char *		771588	0					
ANR	771594	Identifier	p		771588	1					
ANR	771595	AssignmentExpression	* p = buf_end		771588	2		=			
ANR	771596	Identifier	buf_end		771588	0					
ANR	771597	Identifier	buf_end		771588	1					
ANR	771598	IdentifierDeclStatement	int is_negative ;	495:4:14418:14433	771588	1	True				
ANR	771599	IdentifierDecl	is_negative		771588	0					
ANR	771600	IdentifierDeclType	int		771588	0					
ANR	771601	Identifier	is_negative		771588	1					
ANR	771602	IdentifierDeclStatement	apr_size_t sub_len ;	496:4:14439:14457	771588	2	True				
ANR	771603	IdentifierDecl	sub_len		771588	0					
ANR	771604	IdentifierDeclType	apr_size_t		771588	0					
ANR	771605	Identifier	sub_len		771588	1					
ANR	771606	IdentifierDeclStatement	char * ipaddr_str ;	497:4:14463:14479	771588	3	True				
ANR	771607	IdentifierDecl	* ipaddr_str		771588	0					
ANR	771608	IdentifierDeclType	char *		771588	0					
ANR	771609	Identifier	ipaddr_str		771588	1					
ANR	771610	ExpressionStatement	"p = conv_10 ( sa -> port , TRUE , & is_negative , p , & sub_len )"	499:4:14486:14540	771588	4	True				
ANR	771611	AssignmentExpression	"p = conv_10 ( sa -> port , TRUE , & is_negative , p , & sub_len )"		771588	0		=			
ANR	771612	Identifier	p		771588	0					
ANR	771613	CallExpression	"conv_10 ( sa -> port , TRUE , & is_negative , p , & sub_len )"		771588	1					
ANR	771614	Callee	conv_10		771588	0					
ANR	771615	Identifier	conv_10		771588	0					
ANR	771616	ArgumentList	sa -> port		771588	1					
ANR	771617	Argument	sa -> port		771588	0					
ANR	771618	PtrMemberAccess	sa -> port		771588	0					
ANR	771619	Identifier	sa		771588	0					
ANR	771620	Identifier	port		771588	1					
ANR	771621	Argument	TRUE		771588	1					
ANR	771622	Identifier	TRUE		771588	0					
ANR	771623	Argument	& is_negative		771588	2					
ANR	771624	UnaryOperationExpression	& is_negative		771588	0					
ANR	771625	UnaryOperator	&		771588	0					
ANR	771626	Identifier	is_negative		771588	1					
ANR	771627	Argument	p		771588	3					
ANR	771628	Identifier	p		771588	0					
ANR	771629	Argument	& sub_len		771588	4					
ANR	771630	UnaryOperationExpression	& sub_len		771588	0					
ANR	771631	UnaryOperator	&		771588	0					
ANR	771632	Identifier	sub_len		771588	1					
ANR	771633	ExpressionStatement	* -- p = ':'	500:4:14546:14556	771588	5	True				
ANR	771634	AssignmentExpression	* -- p = ':'		771588	0		=			
ANR	771635	UnaryOperationExpression	* -- p		771588	0					
ANR	771636	UnaryOperator	*		771588	0					
ANR	771637	UnaryExpression	-- p		771588	1					
ANR	771638	IncDec	--		771588	0					
ANR	771639	Identifier	p		771588	1					
ANR	771640	PrimaryExpression	':'		771588	1					
ANR	771641	ExpressionStatement	ipaddr_str = buf_end - NUM_BUF_SIZE	501:4:14562:14597	771588	6	True				
ANR	771642	AssignmentExpression	ipaddr_str = buf_end - NUM_BUF_SIZE		771588	0		=			
ANR	771643	Identifier	ipaddr_str		771588	0					
ANR	771644	AdditiveExpression	buf_end - NUM_BUF_SIZE		771588	1		-			
ANR	771645	Identifier	buf_end		771588	0					
ANR	771646	Identifier	NUM_BUF_SIZE		771588	1					
ANR	771647	IfStatement	"if ( apr_sockaddr_ip_getbuf ( ipaddr_str , sa -> addr_str_len , sa ) )"		771588	7					
ANR	771648	Condition	"apr_sockaddr_ip_getbuf ( ipaddr_str , sa -> addr_str_len , sa )"	502:8:14607:14662	771588	0	True				
ANR	771649	CallExpression	"apr_sockaddr_ip_getbuf ( ipaddr_str , sa -> addr_str_len , sa )"		771588	0					
ANR	771650	Callee	apr_sockaddr_ip_getbuf		771588	0					
ANR	771651	Identifier	apr_sockaddr_ip_getbuf		771588	0					
ANR	771652	ArgumentList	ipaddr_str		771588	1					
ANR	771653	Argument	ipaddr_str		771588	0					
ANR	771654	Identifier	ipaddr_str		771588	0					
ANR	771655	Argument	sa -> addr_str_len		771588	1					
ANR	771656	PtrMemberAccess	sa -> addr_str_len		771588	0					
ANR	771657	Identifier	sa		771588	0					
ANR	771658	Identifier	addr_str_len		771588	1					
ANR	771659	Argument	sa		771588	2					
ANR	771660	Identifier	sa		771588	0					
ANR	771661	CompoundStatement		10:66:275:275	771588	1					
ANR	771662	ExpressionStatement	* -- p = '?'	505:8:14791:14801	771588	0	True				
ANR	771663	AssignmentExpression	* -- p = '?'		771588	0		=			
ANR	771664	UnaryOperationExpression	* -- p		771588	0					
ANR	771665	UnaryOperator	*		771588	0					
ANR	771666	UnaryExpression	-- p		771588	1					
ANR	771667	IncDec	--		771588	0					
ANR	771668	Identifier	p		771588	1					
ANR	771669	PrimaryExpression	'?'		771588	1					
ANR	771670	ExpressionStatement	* len = buf_end - p	506:8:14811:14829	771588	1	True				
ANR	771671	AssignmentExpression	* len = buf_end - p		771588	0		=			
ANR	771672	UnaryOperationExpression	* len		771588	0					
ANR	771673	UnaryOperator	*		771588	0					
ANR	771674	Identifier	len		771588	1					
ANR	771675	AdditiveExpression	buf_end - p		771588	1		-			
ANR	771676	Identifier	buf_end		771588	0					
ANR	771677	Identifier	p		771588	1					
ANR	771678	ReturnStatement	return p ;	507:8:14839:14847	771588	2	True				
ANR	771679	Identifier	p		771588	0					
ANR	771680	ExpressionStatement	sub_len = strlen ( ipaddr_str )	509:4:14859:14887	771588	8	True				
ANR	771681	AssignmentExpression	sub_len = strlen ( ipaddr_str )		771588	0		=			
ANR	771682	Identifier	sub_len		771588	0					
ANR	771683	CallExpression	strlen ( ipaddr_str )		771588	1					
ANR	771684	Callee	strlen		771588	0					
ANR	771685	Identifier	strlen		771588	0					
ANR	771686	ArgumentList	ipaddr_str		771588	1					
ANR	771687	Argument	ipaddr_str		771588	0					
ANR	771688	Identifier	ipaddr_str		771588	0					
ANR	771689	IfStatement	if ( sa -> family == APR_INET6 && ! IN6_IS_ADDR_V4MAPPED ( & sa -> sa . sin6 . sin6_addr ) )		771588	9					
ANR	771690	Condition	sa -> family == APR_INET6 && ! IN6_IS_ADDR_V4MAPPED ( & sa -> sa . sin6 . sin6_addr )	511:8:14915:14994	771588	0	True				
ANR	771691	AndExpression	sa -> family == APR_INET6 && ! IN6_IS_ADDR_V4MAPPED ( & sa -> sa . sin6 . sin6_addr )		771588	0		&&			
ANR	771692	EqualityExpression	sa -> family == APR_INET6		771588	0		==			
ANR	771693	PtrMemberAccess	sa -> family		771588	0					
ANR	771694	Identifier	sa		771588	0					
ANR	771695	Identifier	family		771588	1					
ANR	771696	Identifier	APR_INET6		771588	1					
ANR	771697	UnaryOperationExpression	! IN6_IS_ADDR_V4MAPPED ( & sa -> sa . sin6 . sin6_addr )		771588	1					
ANR	771698	UnaryOperator	!		771588	0					
ANR	771699	CallExpression	IN6_IS_ADDR_V4MAPPED ( & sa -> sa . sin6 . sin6_addr )		771588	1					
ANR	771700	Callee	IN6_IS_ADDR_V4MAPPED		771588	0					
ANR	771701	Identifier	IN6_IS_ADDR_V4MAPPED		771588	0					
ANR	771702	ArgumentList	& sa -> sa . sin6 . sin6_addr		771588	1					
ANR	771703	Argument	& sa -> sa . sin6 . sin6_addr		771588	0					
ANR	771704	UnaryOperationExpression	& sa -> sa . sin6 . sin6_addr		771588	0					
ANR	771705	UnaryOperator	&		771588	0					
ANR	771706	MemberAccess	sa -> sa . sin6 . sin6_addr		771588	1					
ANR	771707	MemberAccess	sa -> sa . sin6		771588	0					
ANR	771708	PtrMemberAccess	sa -> sa		771588	0					
ANR	771709	Identifier	sa		771588	0					
ANR	771710	Identifier	sa		771588	1					
ANR	771711	Identifier	sin6		771588	1					
ANR	771712	Identifier	sin6_addr		771588	1					
ANR	771713	CompoundStatement		20:55:607:607	771588	1					
ANR	771714	ExpressionStatement	* ( p - 1 ) = ']'	513:8:15007:15021	771588	0	True				
ANR	771715	AssignmentExpression	* ( p - 1 ) = ']'		771588	0		=			
ANR	771716	UnaryOperationExpression	* ( p - 1 )		771588	0					
ANR	771717	UnaryOperator	*		771588	0					
ANR	771718	AdditiveExpression	p - 1		771588	1		-			
ANR	771719	Identifier	p		771588	0					
ANR	771720	PrimaryExpression	1		771588	1					
ANR	771721	PrimaryExpression	']'		771588	1					
ANR	771722	ExpressionStatement	p -= sub_len + 2	514:8:15031:15047	771588	1	True				
ANR	771723	AssignmentExpression	p -= sub_len + 2		771588	0		-=			
ANR	771724	Identifier	p		771588	0					
ANR	771725	AdditiveExpression	sub_len + 2		771588	1		+			
ANR	771726	Identifier	sub_len		771588	0					
ANR	771727	PrimaryExpression	2		771588	1					
ANR	771728	ExpressionStatement	* p = '['	515:8:15057:15065	771588	2	True				
ANR	771729	AssignmentExpression	* p = '['		771588	0		=			
ANR	771730	UnaryOperationExpression	* p		771588	0					
ANR	771731	UnaryOperator	*		771588	0					
ANR	771732	Identifier	p		771588	1					
ANR	771733	PrimaryExpression	'['		771588	1					
ANR	771734	ExpressionStatement	"memcpy ( p + 1 , ipaddr_str , sub_len )"	516:8:15075:15109	771588	3	True				
ANR	771735	CallExpression	"memcpy ( p + 1 , ipaddr_str , sub_len )"		771588	0					
ANR	771736	Callee	memcpy		771588	0					
ANR	771737	Identifier	memcpy		771588	0					
ANR	771738	ArgumentList	p + 1		771588	1					
ANR	771739	Argument	p + 1		771588	0					
ANR	771740	AdditiveExpression	p + 1		771588	0		+			
ANR	771741	Identifier	p		771588	0					
ANR	771742	PrimaryExpression	1		771588	1					
ANR	771743	Argument	ipaddr_str		771588	1					
ANR	771744	Identifier	ipaddr_str		771588	0					
ANR	771745	Argument	sub_len		771588	2					
ANR	771746	Identifier	sub_len		771588	0					
ANR	771747	ElseStatement	else		771588	0					
ANR	771748	CompoundStatement		28:4:747:747	771588	0					
ANR	771749	ExpressionStatement	p -= sub_len	521:8:15147:15159	771588	0	True				
ANR	771750	AssignmentExpression	p -= sub_len		771588	0		-=			
ANR	771751	Identifier	p		771588	0					
ANR	771752	Identifier	sub_len		771588	1					
ANR	771753	ExpressionStatement	"memcpy ( p , ipaddr_str , sub_len )"	522:8:15169:15199	771588	1	True				
ANR	771754	CallExpression	"memcpy ( p , ipaddr_str , sub_len )"		771588	0					
ANR	771755	Callee	memcpy		771588	0					
ANR	771756	Identifier	memcpy		771588	0					
ANR	771757	ArgumentList	p		771588	1					
ANR	771758	Argument	p		771588	0					
ANR	771759	Identifier	p		771588	0					
ANR	771760	Argument	ipaddr_str		771588	1					
ANR	771761	Identifier	ipaddr_str		771588	0					
ANR	771762	Argument	sub_len		771588	2					
ANR	771763	Identifier	sub_len		771588	0					
ANR	771764	ExpressionStatement	* len = buf_end - p	525:4:15212:15230	771588	10	True				
ANR	771765	AssignmentExpression	* len = buf_end - p		771588	0		=			
ANR	771766	UnaryOperationExpression	* len		771588	0					
ANR	771767	UnaryOperator	*		771588	0					
ANR	771768	Identifier	len		771588	1					
ANR	771769	AdditiveExpression	buf_end - p		771588	1		-			
ANR	771770	Identifier	buf_end		771588	0					
ANR	771771	Identifier	p		771588	1					
ANR	771772	ReturnStatement	return ( p ) ;	526:4:15236:15246	771588	11	True				
ANR	771773	Identifier	p		771588	0					
ANR	771774	ReturnType	static char *		771588	1					
ANR	771775	Identifier	conv_apr_sockaddr		771588	2					
ANR	771776	ParameterList	"apr_sockaddr_t * sa , char * buf_end , apr_size_t * len"		771588	3					
ANR	771777	Parameter	apr_sockaddr_t * sa	492:31:14337:14354	771588	0	True				
ANR	771778	ParameterType	apr_sockaddr_t *		771588	0					
ANR	771779	Identifier	sa		771588	1					
ANR	771780	Parameter	char * buf_end	492:51:14357:14369	771588	1	True				
ANR	771781	ParameterType	char *		771588	0					
ANR	771782	Identifier	buf_end		771588	1					
ANR	771783	Parameter	apr_size_t * len	492:66:14372:14386	771588	2	True				
ANR	771784	ParameterType	apr_size_t *		771588	0					
ANR	771785	Identifier	len		771588	1					
ANR	771786	CFGEntryNode	ENTRY		771588		True				
ANR	771787	CFGExitNode	EXIT		771588		True				
ANR	771788	Symbol	* ( p - 1 )		771588						
ANR	771789	Symbol	& sa -> sa . sin6		771588						
ANR	771790	Symbol	sa -> addr_str_len		771588						
ANR	771791	Symbol	sa		771588						
ANR	771792	Symbol	& is_negative		771588						
ANR	771793	Symbol	& sa -> sa		771588						
ANR	771794	Symbol	sa -> sa . sin6		771588						
ANR	771795	Symbol	strlen		771588						
ANR	771796	Symbol	len		771588						
ANR	771797	Symbol	* sa		771588						
ANR	771798	Symbol	IN6_IS_ADDR_V4MAPPED		771588						
ANR	771799	Symbol	buf_end		771588						
ANR	771800	Symbol	sa -> sa		771588						
ANR	771801	Symbol	ipaddr_str		771588						
ANR	771802	Symbol	APR_INET6		771588						
ANR	771803	Symbol	* -- p		771588						
ANR	771804	Symbol	TRUE		771588						
ANR	771805	Symbol	& sub_len		771588						
ANR	771806	Symbol	p		771588						
ANR	771807	Symbol	sa -> family		771588						
ANR	771808	Symbol	sub_len		771588						
ANR	771809	Symbol	sa -> port		771588						
ANR	771810	Symbol	apr_sockaddr_ip_getbuf		771588						
ANR	771811	Symbol	NUM_BUF_SIZE		771588						
ANR	771812	Symbol	* p		771588						
ANR	771813	Symbol	is_negative		771588						
ANR	771814	Symbol	conv_10		771588						
ANR	771815	Symbol	& sa -> sa . sin6 . sin6_addr		771588						
ANR	771816	Symbol	* len		771588						
ANR	771817	Function	conv_os_thread_t	533:0:15280:15864							
ANR	771818	FunctionDef	"conv_os_thread_t (apr_os_thread_t * tid , char * buf_end , apr_size_t * len)"		771817	0					
ANR	771819	CompoundStatement		534:0:15364:15864	771817	0					
ANR	771820	ClassDefStatement	union { apr_os_thread_t tid ; apr_uint64_t u64 ; apr_uint32_t u32 ; } u ;	535:4:15370:15466	771817	0	True				
ANR	771821	IdentifierDecl	u		771817	0					
ANR	771822	IdentifierDeclType			771817	0					
ANR	771823	Identifier	u		771817	1					
ANR	771824	IdentifierDeclStatement	int is_negative ;	540:4:15472:15487	771817	1	True				
ANR	771825	IdentifierDecl	is_negative		771817	0					
ANR	771826	IdentifierDeclType	int		771817	0					
ANR	771827	Identifier	is_negative		771817	1					
ANR	771828	ExpressionStatement	u . tid = * tid	542:4:15494:15506	771817	2	True				
ANR	771829	AssignmentExpression	u . tid = * tid		771817	0		=			
ANR	771830	MemberAccess	u . tid		771817	0					
ANR	771831	Identifier	u		771817	0					
ANR	771832	Identifier	tid		771817	1					
ANR	771833	UnaryOperationExpression	* tid		771817	1					
ANR	771834	UnaryOperator	*		771817	0					
ANR	771835	Identifier	tid		771817	1					
ANR	771836	SwitchStatement	switch ( sizeof ( u . tid ) )		771817	3					
ANR	771837	Condition	sizeof ( u . tid )	543:11:15519:15531	771817	0	True				
ANR	771838	SizeofExpression	sizeof ( u . tid )		771817	0					
ANR	771839	Sizeof	sizeof		771817	0					
ANR	771840	MemberAccess	u . tid		771817	1					
ANR	771841	Identifier	u		771817	0					
ANR	771842	Identifier	tid		771817	1					
ANR	771843	CompoundStatement		10:26:169:169	771817	1					
ANR	771844	Statement	case	544:4:15540:15543	771817	0	True				
ANR	771845	Statement	sizeof	544:9:15545:15550	771817	1	True				
ANR	771846	Statement	(	544:15:15551:15551	771817	2	True				
ANR	771847	Statement	apr_int32_t	544:16:15552:15562	771817	3	True				
ANR	771848	Statement	)	544:27:15563:15563	771817	4	True				
ANR	771849	Statement	:	544:28:15564:15564	771817	5	True				
ANR	771850	ReturnStatement	"return conv_10 ( u . u32 , TRUE , & is_negative , buf_end , len ) ;"	545:8:15574:15629	771817	6	True				
ANR	771851	CallExpression	"conv_10 ( u . u32 , TRUE , & is_negative , buf_end , len )"		771817	0					
ANR	771852	Callee	conv_10		771817	0					
ANR	771853	Identifier	conv_10		771817	0					
ANR	771854	ArgumentList	u . u32		771817	1					
ANR	771855	Argument	u . u32		771817	0					
ANR	771856	MemberAccess	u . u32		771817	0					
ANR	771857	Identifier	u		771817	0					
ANR	771858	Identifier	u32		771817	1					
ANR	771859	Argument	TRUE		771817	1					
ANR	771860	Identifier	TRUE		771817	0					
ANR	771861	Argument	& is_negative		771817	2					
ANR	771862	UnaryOperationExpression	& is_negative		771817	0					
ANR	771863	UnaryOperator	&		771817	0					
ANR	771864	Identifier	is_negative		771817	1					
ANR	771865	Argument	buf_end		771817	3					
ANR	771866	Identifier	buf_end		771817	0					
ANR	771867	Argument	len		771817	4					
ANR	771868	Identifier	len		771817	0					
ANR	771869	Statement	case	546:4:15635:15638	771817	7	True				
ANR	771870	Statement	sizeof	546:9:15640:15645	771817	8	True				
ANR	771871	Statement	(	546:15:15646:15646	771817	9	True				
ANR	771872	Statement	apr_int64_t	546:16:15647:15657	771817	10	True				
ANR	771873	Statement	)	546:27:15658:15658	771817	11	True				
ANR	771874	Statement	:	546:28:15659:15659	771817	12	True				
ANR	771875	ReturnStatement	"return conv_10_quad ( u . u64 , TRUE , & is_negative , buf_end , len ) ;"	547:8:15669:15729	771817	13	True				
ANR	771876	CallExpression	"conv_10_quad ( u . u64 , TRUE , & is_negative , buf_end , len )"		771817	0					
ANR	771877	Callee	conv_10_quad		771817	0					
ANR	771878	Identifier	conv_10_quad		771817	0					
ANR	771879	ArgumentList	u . u64		771817	1					
ANR	771880	Argument	u . u64		771817	0					
ANR	771881	MemberAccess	u . u64		771817	0					
ANR	771882	Identifier	u		771817	0					
ANR	771883	Identifier	u64		771817	1					
ANR	771884	Argument	TRUE		771817	1					
ANR	771885	Identifier	TRUE		771817	0					
ANR	771886	Argument	& is_negative		771817	2					
ANR	771887	UnaryOperationExpression	& is_negative		771817	0					
ANR	771888	UnaryOperator	&		771817	0					
ANR	771889	Identifier	is_negative		771817	1					
ANR	771890	Argument	buf_end		771817	3					
ANR	771891	Identifier	buf_end		771817	0					
ANR	771892	Argument	len		771817	4					
ANR	771893	Identifier	len		771817	0					
ANR	771894	Label	default :	548:4:15735:15742	771817	14	True				
ANR	771895	Identifier	default		771817	0					
ANR	771896	ReturnStatement	"return conv_10 ( 0 , TRUE , & is_negative , buf_end , len ) ;"	550:8:15805:15856	771817	15	True				
ANR	771897	CallExpression	"conv_10 ( 0 , TRUE , & is_negative , buf_end , len )"		771817	0					
ANR	771898	Callee	conv_10		771817	0					
ANR	771899	Identifier	conv_10		771817	0					
ANR	771900	ArgumentList	0		771817	1					
ANR	771901	Argument	0		771817	0					
ANR	771902	PrimaryExpression	0		771817	0					
ANR	771903	Argument	TRUE		771817	1					
ANR	771904	Identifier	TRUE		771817	0					
ANR	771905	Argument	& is_negative		771817	2					
ANR	771906	UnaryOperationExpression	& is_negative		771817	0					
ANR	771907	UnaryOperator	&		771817	0					
ANR	771908	Identifier	is_negative		771817	1					
ANR	771909	Argument	buf_end		771817	3					
ANR	771910	Identifier	buf_end		771817	0					
ANR	771911	Argument	len		771817	4					
ANR	771912	Identifier	len		771817	0					
ANR	771913	ReturnType	static char *		771817	1					
ANR	771914	Identifier	conv_os_thread_t		771817	2					
ANR	771915	ParameterList	"apr_os_thread_t * tid , char * buf_end , apr_size_t * len"		771817	3					
ANR	771916	Parameter	apr_os_thread_t * tid	533:30:15310:15329	771817	0	True				
ANR	771917	ParameterType	apr_os_thread_t *		771817	0					
ANR	771918	Identifier	tid		771817	1					
ANR	771919	Parameter	char * buf_end	533:52:15332:15344	771817	1	True				
ANR	771920	ParameterType	char *		771817	0					
ANR	771921	Identifier	buf_end		771817	1					
ANR	771922	Parameter	apr_size_t * len	533:67:15347:15361	771817	2	True				
ANR	771923	ParameterType	apr_size_t *		771817	0					
ANR	771924	Identifier	len		771817	1					
ANR	771925	CFGEntryNode	ENTRY		771817		True				
ANR	771926	CFGExitNode	EXIT		771817		True				
ANR	771927	Symbol	TRUE		771817						
ANR	771928	Symbol	tid		771817						
ANR	771929	Symbol	& is_negative		771817						
ANR	771930	Symbol	conv_10_quad		771817						
ANR	771931	Symbol	len		771817						
ANR	771932	Symbol	u		771817						
ANR	771933	Symbol	* tid		771817						
ANR	771934	Symbol	u . u64		771817						
ANR	771935	Symbol	u . u32		771817						
ANR	771936	Symbol	buf_end		771817						
ANR	771937	Symbol	is_negative		771817						
ANR	771938	Symbol	conv_10		771817						
ANR	771939	Symbol	u . tid		771817						
ANR	771940	Function	conv_fp	563:0:16111:18261							
ANR	771941	FunctionDef	"conv_fp (register char format , register double num , boolean_e add_dp , int precision , int * is_negative , char * buf , apr_size_t * len)"		771940	0					
ANR	771942	CompoundStatement		566:0:16262:18261	771940	0					
ANR	771943	Statement	register	567:4:16268:16275	771940	0	True				
ANR	771944	IdentifierDeclStatement	char * s = buf ;	567:13:16277:16290	771940	1	True				
ANR	771945	IdentifierDecl	* s = buf		771940	0					
ANR	771946	IdentifierDeclType	char *		771940	0					
ANR	771947	Identifier	s		771940	1					
ANR	771948	AssignmentExpression	* s = buf		771940	2		=			
ANR	771949	Identifier	buf		771940	0					
ANR	771950	Identifier	buf		771940	1					
ANR	771951	Statement	register	568:4:16296:16303	771940	2	True				
ANR	771952	IdentifierDeclStatement	char * p ;	568:13:16305:16312	771940	3	True				
ANR	771953	IdentifierDecl	* p		771940	0					
ANR	771954	IdentifierDeclType	char *		771940	0					
ANR	771955	Identifier	p		771940	1					
ANR	771956	IdentifierDeclStatement	int decimal_point ;	569:4:16318:16335	771940	4	True				
ANR	771957	IdentifierDecl	decimal_point		771940	0					
ANR	771958	IdentifierDeclType	int		771940	0					
ANR	771959	Identifier	decimal_point		771940	1					
ANR	771960	IdentifierDeclStatement	char buf1 [ NDIG ] ;	570:4:16341:16356	771940	5	True				
ANR	771961	IdentifierDecl	buf1 [ NDIG ]		771940	0					
ANR	771962	IdentifierDeclType	char [ NDIG ]		771940	0					
ANR	771963	Identifier	buf1		771940	1					
ANR	771964	Identifier	NDIG		771940	2					
ANR	771965	IfStatement	if ( format == 'f' )		771940	6					
ANR	771966	Condition	format == 'f'	572:8:16367:16379	771940	0	True				
ANR	771967	EqualityExpression	format == 'f'		771940	0		==			
ANR	771968	Identifier	format		771940	0					
ANR	771969	PrimaryExpression	'f'		771940	1					
ANR	771970	ExpressionStatement	"p = apr_fcvt ( num , precision , & decimal_point , is_negative , buf1 )"	573:8:16390:16453	771940	1	True				
ANR	771971	AssignmentExpression	"p = apr_fcvt ( num , precision , & decimal_point , is_negative , buf1 )"		771940	0		=			
ANR	771972	Identifier	p		771940	0					
ANR	771973	CallExpression	"apr_fcvt ( num , precision , & decimal_point , is_negative , buf1 )"		771940	1					
ANR	771974	Callee	apr_fcvt		771940	0					
ANR	771975	Identifier	apr_fcvt		771940	0					
ANR	771976	ArgumentList	num		771940	1					
ANR	771977	Argument	num		771940	0					
ANR	771978	Identifier	num		771940	0					
ANR	771979	Argument	precision		771940	1					
ANR	771980	Identifier	precision		771940	0					
ANR	771981	Argument	& decimal_point		771940	2					
ANR	771982	UnaryOperationExpression	& decimal_point		771940	0					
ANR	771983	UnaryOperator	&		771940	0					
ANR	771984	Identifier	decimal_point		771940	1					
ANR	771985	Argument	is_negative		771940	3					
ANR	771986	Identifier	is_negative		771940	0					
ANR	771987	Argument	buf1		771940	4					
ANR	771988	Identifier	buf1		771940	0					
ANR	771989	ElseStatement	else		771940	0					
ANR	771990	ExpressionStatement	"p = apr_ecvt ( num , precision + 1 , & decimal_point , is_negative , buf1 )"	575:8:16499:16566	771940	0	True				
ANR	771991	AssignmentExpression	"p = apr_ecvt ( num , precision + 1 , & decimal_point , is_negative , buf1 )"		771940	0		=			
ANR	771992	Identifier	p		771940	0					
ANR	771993	CallExpression	"apr_ecvt ( num , precision + 1 , & decimal_point , is_negative , buf1 )"		771940	1					
ANR	771994	Callee	apr_ecvt		771940	0					
ANR	771995	Identifier	apr_ecvt		771940	0					
ANR	771996	ArgumentList	num		771940	1					
ANR	771997	Argument	num		771940	0					
ANR	771998	Identifier	num		771940	0					
ANR	771999	Argument	precision + 1		771940	1					
ANR	772000	AdditiveExpression	precision + 1		771940	0		+			
ANR	772001	Identifier	precision		771940	0					
ANR	772002	PrimaryExpression	1		771940	1					
ANR	772003	Argument	& decimal_point		771940	2					
ANR	772004	UnaryOperationExpression	& decimal_point		771940	0					
ANR	772005	UnaryOperator	&		771940	0					
ANR	772006	Identifier	decimal_point		771940	1					
ANR	772007	Argument	is_negative		771940	3					
ANR	772008	Identifier	is_negative		771940	0					
ANR	772009	Argument	buf1		771940	4					
ANR	772010	Identifier	buf1		771940	0					
ANR	772011	IfStatement	if ( apr_isalpha ( * p ) )		771940	7					
ANR	772012	Condition	apr_isalpha ( * p )	580:8:16626:16640	771940	0	True				
ANR	772013	CallExpression	apr_isalpha ( * p )		771940	0					
ANR	772014	Callee	apr_isalpha		771940	0					
ANR	772015	Identifier	apr_isalpha		771940	0					
ANR	772016	ArgumentList	* p		771940	1					
ANR	772017	Argument	* p		771940	0					
ANR	772018	UnaryOperationExpression	* p		771940	0					
ANR	772019	UnaryOperator	*		771940	0					
ANR	772020	Identifier	p		771940	1					
ANR	772021	CompoundStatement		15:25:380:380	771940	1					
ANR	772022	ExpressionStatement	* len = strlen ( p )	581:8:16653:16669	771940	0	True				
ANR	772023	AssignmentExpression	* len = strlen ( p )		771940	0		=			
ANR	772024	UnaryOperationExpression	* len		771940	0					
ANR	772025	UnaryOperator	*		771940	0					
ANR	772026	Identifier	len		771940	1					
ANR	772027	CallExpression	strlen ( p )		771940	1					
ANR	772028	Callee	strlen		771940	0					
ANR	772029	Identifier	strlen		771940	0					
ANR	772030	ArgumentList	p		771940	1					
ANR	772031	Argument	p		771940	0					
ANR	772032	Identifier	p		771940	0					
ANR	772033	ExpressionStatement	"memcpy ( buf , p , * len + 1 )"	582:8:16679:16703	771940	1	True				
ANR	772034	CallExpression	"memcpy ( buf , p , * len + 1 )"		771940	0					
ANR	772035	Callee	memcpy		771940	0					
ANR	772036	Identifier	memcpy		771940	0					
ANR	772037	ArgumentList	buf		771940	1					
ANR	772038	Argument	buf		771940	0					
ANR	772039	Identifier	buf		771940	0					
ANR	772040	Argument	p		771940	1					
ANR	772041	Identifier	p		771940	0					
ANR	772042	Argument	* len + 1		771940	2					
ANR	772043	AdditiveExpression	* len + 1		771940	0		+			
ANR	772044	UnaryOperationExpression	* len		771940	0					
ANR	772045	UnaryOperator	*		771940	0					
ANR	772046	Identifier	len		771940	1					
ANR	772047	PrimaryExpression	1		771940	1					
ANR	772048	ExpressionStatement	* is_negative = FALSE	583:8:16713:16733	771940	2	True				
ANR	772049	AssignmentExpression	* is_negative = FALSE		771940	0		=			
ANR	772050	UnaryOperationExpression	* is_negative		771940	0					
ANR	772051	UnaryOperator	*		771940	0					
ANR	772052	Identifier	is_negative		771940	1					
ANR	772053	Identifier	FALSE		771940	1					
ANR	772054	ReturnStatement	return ( buf ) ;	584:8:16743:16755	771940	3	True				
ANR	772055	Identifier	buf		771940	0					
ANR	772056	IfStatement	if ( format == 'f' )		771940	8					
ANR	772057	Condition	format == 'f'	587:8:16772:16784	771940	0	True				
ANR	772058	EqualityExpression	format == 'f'		771940	0		==			
ANR	772059	Identifier	format		771940	0					
ANR	772060	PrimaryExpression	'f'		771940	1					
ANR	772061	CompoundStatement		22:23:524:524	771940	1					
ANR	772062	IfStatement	if ( decimal_point <= 0 )		771940	0					
ANR	772063	Condition	decimal_point <= 0	588:12:16801:16818	771940	0	True				
ANR	772064	RelationalExpression	decimal_point <= 0		771940	0		<=			
ANR	772065	Identifier	decimal_point		771940	0					
ANR	772066	PrimaryExpression	0		771940	1					
ANR	772067	CompoundStatement		23:32:558:558	771940	1					
ANR	772068	ExpressionStatement	* s ++ = '0'	589:12:16835:16845	771940	0	True				
ANR	772069	AssignmentExpression	* s ++ = '0'		771940	0		=			
ANR	772070	UnaryOperationExpression	* s ++		771940	0					
ANR	772071	UnaryOperator	*		771940	0					
ANR	772072	PostIncDecOperationExpression	s ++		771940	1					
ANR	772073	Identifier	s		771940	0					
ANR	772074	IncDec	++		771940	1					
ANR	772075	PrimaryExpression	'0'		771940	1					
ANR	772076	IfStatement	if ( precision > 0 )		771940	1					
ANR	772077	Condition	precision > 0	590:16:16863:16875	771940	0	True				
ANR	772078	RelationalExpression	precision > 0		771940	0		>			
ANR	772079	Identifier	precision		771940	0					
ANR	772080	PrimaryExpression	0		771940	1					
ANR	772081	CompoundStatement		25:31:615:615	771940	1					
ANR	772082	ExpressionStatement	* s ++ = '.'	591:16:16896:16906	771940	0	True				
ANR	772083	AssignmentExpression	* s ++ = '.'		771940	0		=			
ANR	772084	UnaryOperationExpression	* s ++		771940	0					
ANR	772085	UnaryOperator	*		771940	0					
ANR	772086	PostIncDecOperationExpression	s ++		771940	1					
ANR	772087	Identifier	s		771940	0					
ANR	772088	IncDec	++		771940	1					
ANR	772089	PrimaryExpression	'.'		771940	1					
ANR	772090	WhileStatement	while ( decimal_point ++ < 0 )		771940	1					
ANR	772091	Condition	decimal_point ++ < 0	592:23:16931:16949	771940	0	True				
ANR	772092	RelationalExpression	decimal_point ++ < 0		771940	0		<			
ANR	772093	PostIncDecOperationExpression	decimal_point ++		771940	0					
ANR	772094	Identifier	decimal_point		771940	0					
ANR	772095	IncDec	++		771940	1					
ANR	772096	PrimaryExpression	0		771940	1					
ANR	772097	ExpressionStatement	* s ++ = '0'	593:20:16972:16982	771940	1	True				
ANR	772098	AssignmentExpression	* s ++ = '0'		771940	0		=			
ANR	772099	UnaryOperationExpression	* s ++		771940	0					
ANR	772100	UnaryOperator	*		771940	0					
ANR	772101	PostIncDecOperationExpression	s ++		771940	1					
ANR	772102	Identifier	s		771940	0					
ANR	772103	IncDec	++		771940	1					
ANR	772104	PrimaryExpression	'0'		771940	1					
ANR	772105	ElseStatement	else		771940	0					
ANR	772106	IfStatement	if ( add_dp )		771940	0					
ANR	772107	Condition	add_dp	595:21:17019:17024	771940	0	True				
ANR	772108	Identifier	add_dp		771940	0					
ANR	772109	ExpressionStatement	* s ++ = '.'	596:16:17043:17053	771940	1	True				
ANR	772110	AssignmentExpression	* s ++ = '.'		771940	0		=			
ANR	772111	UnaryOperationExpression	* s ++		771940	0					
ANR	772112	UnaryOperator	*		771940	0					
ANR	772113	PostIncDecOperationExpression	s ++		771940	1					
ANR	772114	Identifier	s		771940	0					
ANR	772115	IncDec	++		771940	1					
ANR	772116	PrimaryExpression	'.'		771940	1					
ANR	772117	ElseStatement	else		771940	0					
ANR	772118	CompoundStatement		33:13:815:815	771940	0					
ANR	772119	WhileStatement	while ( decimal_point -- > 0 )		771940	0					
ANR	772120	Condition	decimal_point -- > 0	599:19:17099:17117	771940	0	True				
ANR	772121	RelationalExpression	decimal_point -- > 0		771940	0		>			
ANR	772122	PostIncDecOperationExpression	decimal_point --		771940	0					
ANR	772123	Identifier	decimal_point		771940	0					
ANR	772124	IncDec	--		771940	1					
ANR	772125	PrimaryExpression	0		771940	1					
ANR	772126	ExpressionStatement	* s ++ = * p ++	600:16:17136:17147	771940	1	True				
ANR	772127	AssignmentExpression	* s ++ = * p ++		771940	0		=			
ANR	772128	UnaryOperationExpression	* s ++		771940	0					
ANR	772129	UnaryOperator	*		771940	0					
ANR	772130	PostIncDecOperationExpression	s ++		771940	1					
ANR	772131	Identifier	s		771940	0					
ANR	772132	IncDec	++		771940	1					
ANR	772133	UnaryOperationExpression	* p ++		771940	1					
ANR	772134	UnaryOperator	*		771940	0					
ANR	772135	PostIncDecOperationExpression	p ++		771940	1					
ANR	772136	Identifier	p		771940	0					
ANR	772137	IncDec	++		771940	1					
ANR	772138	IfStatement	if ( precision > 0 || add_dp )		771940	1					
ANR	772139	Condition	precision > 0 || add_dp	601:16:17165:17187	771940	0	True				
ANR	772140	OrExpression	precision > 0 || add_dp		771940	0		||			
ANR	772141	RelationalExpression	precision > 0		771940	0		>			
ANR	772142	Identifier	precision		771940	0					
ANR	772143	PrimaryExpression	0		771940	1					
ANR	772144	Identifier	add_dp		771940	1					
ANR	772145	ExpressionStatement	* s ++ = '.'	602:16:17206:17216	771940	1	True				
ANR	772146	AssignmentExpression	* s ++ = '.'		771940	0		=			
ANR	772147	UnaryOperationExpression	* s ++		771940	0					
ANR	772148	UnaryOperator	*		771940	0					
ANR	772149	PostIncDecOperationExpression	s ++		771940	1					
ANR	772150	Identifier	s		771940	0					
ANR	772151	IncDec	++		771940	1					
ANR	772152	PrimaryExpression	'.'		771940	1					
ANR	772153	ElseStatement	else		771940	0					
ANR	772154	CompoundStatement		40:9:980:980	771940	0					
ANR	772155	ExpressionStatement	* s ++ = * p ++	606:8:17253:17264	771940	0	True				
ANR	772156	AssignmentExpression	* s ++ = * p ++		771940	0		=			
ANR	772157	UnaryOperationExpression	* s ++		771940	0					
ANR	772158	UnaryOperator	*		771940	0					
ANR	772159	PostIncDecOperationExpression	s ++		771940	1					
ANR	772160	Identifier	s		771940	0					
ANR	772161	IncDec	++		771940	1					
ANR	772162	UnaryOperationExpression	* p ++		771940	1					
ANR	772163	UnaryOperator	*		771940	0					
ANR	772164	PostIncDecOperationExpression	p ++		771940	1					
ANR	772165	Identifier	p		771940	0					
ANR	772166	IncDec	++		771940	1					
ANR	772167	IfStatement	if ( precision > 0 || add_dp )		771940	1					
ANR	772168	Condition	precision > 0 || add_dp	607:12:17278:17300	771940	0	True				
ANR	772169	OrExpression	precision > 0 || add_dp		771940	0		||			
ANR	772170	RelationalExpression	precision > 0		771940	0		>			
ANR	772171	Identifier	precision		771940	0					
ANR	772172	PrimaryExpression	0		771940	1					
ANR	772173	Identifier	add_dp		771940	1					
ANR	772174	ExpressionStatement	* s ++ = '.'	608:12:17315:17325	771940	1	True				
ANR	772175	AssignmentExpression	* s ++ = '.'		771940	0		=			
ANR	772176	UnaryOperationExpression	* s ++		771940	0					
ANR	772177	UnaryOperator	*		771940	0					
ANR	772178	PostIncDecOperationExpression	s ++		771940	1					
ANR	772179	Identifier	s		771940	0					
ANR	772180	IncDec	++		771940	1					
ANR	772181	PrimaryExpression	'.'		771940	1					
ANR	772182	WhileStatement	while ( * p )		771940	9					
ANR	772183	Condition	* p	614:11:17409:17410	771940	0	True				
ANR	772184	UnaryOperationExpression	* p		771940	0					
ANR	772185	UnaryOperator	*		771940	0					
ANR	772186	Identifier	p		771940	1					
ANR	772187	ExpressionStatement	* s ++ = * p ++	615:8:17421:17432	771940	1	True				
ANR	772188	AssignmentExpression	* s ++ = * p ++		771940	0		=			
ANR	772189	UnaryOperationExpression	* s ++		771940	0					
ANR	772190	UnaryOperator	*		771940	0					
ANR	772191	PostIncDecOperationExpression	s ++		771940	1					
ANR	772192	Identifier	s		771940	0					
ANR	772193	IncDec	++		771940	1					
ANR	772194	UnaryOperationExpression	* p ++		771940	1					
ANR	772195	UnaryOperator	*		771940	0					
ANR	772196	PostIncDecOperationExpression	p ++		771940	1					
ANR	772197	Identifier	p		771940	0					
ANR	772198	IncDec	++		771940	1					
ANR	772199	IfStatement	if ( format != 'f' )		771940	10					
ANR	772200	Condition	format != 'f'	617:8:17443:17455	771940	0	True				
ANR	772201	EqualityExpression	format != 'f'		771940	0		!=			
ANR	772202	Identifier	format		771940	0					
ANR	772203	PrimaryExpression	'f'		771940	1					
ANR	772204	CompoundStatement		55:8:1304:1328	771940	1					
ANR	772205	IdentifierDeclStatement	char temp [ EXPONENT_LENGTH ] ;	618:8:17468:17494	771940	0	True				
ANR	772206	IdentifierDecl	temp [ EXPONENT_LENGTH ]		771940	0					
ANR	772207	IdentifierDeclType	char [ EXPONENT_LENGTH ]		771940	0					
ANR	772208	Identifier	temp		771940	1					
ANR	772209	Identifier	EXPONENT_LENGTH		771940	2					
ANR	772210	IdentifierDeclStatement	apr_size_t t_len ;	619:8:17541:17557	771940	1	True				
ANR	772211	IdentifierDecl	t_len		771940	0					
ANR	772212	IdentifierDeclType	apr_size_t		771940	0					
ANR	772213	Identifier	t_len		771940	1					
ANR	772214	IdentifierDeclStatement	int exponent_is_negative ;	620:8:17567:17591	771940	2	True				
ANR	772215	IdentifierDecl	exponent_is_negative		771940	0					
ANR	772216	IdentifierDeclType	int		771940	0					
ANR	772217	Identifier	exponent_is_negative		771940	1					
ANR	772218	ExpressionStatement	* s ++ = format	622:8:17602:17615	771940	3	True				
ANR	772219	AssignmentExpression	* s ++ = format		771940	0		=			
ANR	772220	UnaryOperationExpression	* s ++		771940	0					
ANR	772221	UnaryOperator	*		771940	0					
ANR	772222	PostIncDecOperationExpression	s ++		771940	1					
ANR	772223	Identifier	s		771940	0					
ANR	772224	IncDec	++		771940	1					
ANR	772225	Identifier	format		771940	1					
ANR	772226	ExpressionStatement	decimal_point --	623:8:17660:17675	771940	4	True				
ANR	772227	PostIncDecOperationExpression	decimal_point --		771940	0					
ANR	772228	Identifier	decimal_point		771940	0					
ANR	772229	IncDec	--		771940	1					
ANR	772230	IfStatement	if ( decimal_point != 0 )		771940	5					
ANR	772231	Condition	decimal_point != 0	624:12:17689:17706	771940	0	True				
ANR	772232	EqualityExpression	decimal_point != 0		771940	0		!=			
ANR	772233	Identifier	decimal_point		771940	0					
ANR	772234	PrimaryExpression	0		771940	1					
ANR	772235	CompoundStatement		59:32:1446:1446	771940	1					
ANR	772236	ExpressionStatement	"p = conv_10 ( ( apr_int32_t ) decimal_point , FALSE , & exponent_is_negative , & temp [ EXPONENT_LENGTH ] , & t_len )"	625:12:17723:17849	771940	0	True				
ANR	772237	AssignmentExpression	"p = conv_10 ( ( apr_int32_t ) decimal_point , FALSE , & exponent_is_negative , & temp [ EXPONENT_LENGTH ] , & t_len )"		771940	0		=			
ANR	772238	Identifier	p		771940	0					
ANR	772239	CallExpression	"conv_10 ( ( apr_int32_t ) decimal_point , FALSE , & exponent_is_negative , & temp [ EXPONENT_LENGTH ] , & t_len )"		771940	1					
ANR	772240	Callee	conv_10		771940	0					
ANR	772241	Identifier	conv_10		771940	0					
ANR	772242	ArgumentList	( apr_int32_t ) decimal_point		771940	1					
ANR	772243	Argument	( apr_int32_t ) decimal_point		771940	0					
ANR	772244	CastExpression	( apr_int32_t ) decimal_point		771940	0					
ANR	772245	CastTarget	apr_int32_t		771940	0					
ANR	772246	Identifier	decimal_point		771940	1					
ANR	772247	Argument	FALSE		771940	1					
ANR	772248	Identifier	FALSE		771940	0					
ANR	772249	Argument	& exponent_is_negative		771940	2					
ANR	772250	UnaryOperationExpression	& exponent_is_negative		771940	0					
ANR	772251	UnaryOperator	&		771940	0					
ANR	772252	Identifier	exponent_is_negative		771940	1					
ANR	772253	Argument	& temp [ EXPONENT_LENGTH ]		771940	3					
ANR	772254	UnaryOperationExpression	& temp [ EXPONENT_LENGTH ]		771940	0					
ANR	772255	UnaryOperator	&		771940	0					
ANR	772256	ArrayIndexing	temp [ EXPONENT_LENGTH ]		771940	1					
ANR	772257	Identifier	temp		771940	0					
ANR	772258	Identifier	EXPONENT_LENGTH		771940	1					
ANR	772259	Argument	& t_len		771940	4					
ANR	772260	UnaryOperationExpression	& t_len		771940	0					
ANR	772261	UnaryOperator	&		771940	0					
ANR	772262	Identifier	t_len		771940	1					
ANR	772263	ExpressionStatement	* s ++ = exponent_is_negative ? '-' : '+'	627:12:17863:17902	771940	1	True				
ANR	772264	AssignmentExpression	* s ++ = exponent_is_negative ? '-' : '+'		771940	0		=			
ANR	772265	UnaryOperationExpression	* s ++		771940	0					
ANR	772266	UnaryOperator	*		771940	0					
ANR	772267	PostIncDecOperationExpression	s ++		771940	1					
ANR	772268	Identifier	s		771940	0					
ANR	772269	IncDec	++		771940	1					
ANR	772270	ConditionalExpression	exponent_is_negative ? '-' : '+'		771940	1					
ANR	772271	Condition	exponent_is_negative		771940	0					
ANR	772272	Identifier	exponent_is_negative		771940	0					
ANR	772273	PrimaryExpression	'-'		771940	1					
ANR	772274	PrimaryExpression	'+'		771940	2					
ANR	772275	IfStatement	if ( t_len == 1 )		771940	2					
ANR	772276	Condition	t_len == 1	632:16:18012:18021	771940	0	True				
ANR	772277	EqualityExpression	t_len == 1		771940	0		==			
ANR	772278	Identifier	t_len		771940	0					
ANR	772279	PrimaryExpression	1		771940	1					
ANR	772280	ExpressionStatement	* s ++ = '0'	633:16:18040:18050	771940	1	True				
ANR	772281	AssignmentExpression	* s ++ = '0'		771940	0		=			
ANR	772282	UnaryOperationExpression	* s ++		771940	0					
ANR	772283	UnaryOperator	*		771940	0					
ANR	772284	PostIncDecOperationExpression	s ++		771940	1					
ANR	772285	Identifier	s		771940	0					
ANR	772286	IncDec	++		771940	1					
ANR	772287	PrimaryExpression	'0'		771940	1					
ANR	772288	WhileStatement	while ( t_len -- )		771940	3					
ANR	772289	Condition	t_len --	634:19:18071:18077	771940	0	True				
ANR	772290	PostIncDecOperationExpression	t_len --		771940	0					
ANR	772291	Identifier	t_len		771940	0					
ANR	772292	IncDec	--		771940	1					
ANR	772293	ExpressionStatement	* s ++ = * p ++	635:16:18096:18107	771940	1	True				
ANR	772294	AssignmentExpression	* s ++ = * p ++		771940	0		=			
ANR	772295	UnaryOperationExpression	* s ++		771940	0					
ANR	772296	UnaryOperator	*		771940	0					
ANR	772297	PostIncDecOperationExpression	s ++		771940	1					
ANR	772298	Identifier	s		771940	0					
ANR	772299	IncDec	++		771940	1					
ANR	772300	UnaryOperationExpression	* p ++		771940	1					
ANR	772301	UnaryOperator	*		771940	0					
ANR	772302	PostIncDecOperationExpression	p ++		771940	1					
ANR	772303	Identifier	p		771940	0					
ANR	772304	IncDec	++		771940	1					
ANR	772305	ElseStatement	else		771940	0					
ANR	772306	CompoundStatement		72:13:1869:1869	771940	0					
ANR	772307	ExpressionStatement	* s ++ = '+'	638:12:18146:18156	771940	0	True				
ANR	772308	AssignmentExpression	* s ++ = '+'		771940	0		=			
ANR	772309	UnaryOperationExpression	* s ++		771940	0					
ANR	772310	UnaryOperator	*		771940	0					
ANR	772311	PostIncDecOperationExpression	s ++		771940	1					
ANR	772312	Identifier	s		771940	0					
ANR	772313	IncDec	++		771940	1					
ANR	772314	PrimaryExpression	'+'		771940	1					
ANR	772315	ExpressionStatement	* s ++ = '0'	639:12:18170:18180	771940	1	True				
ANR	772316	AssignmentExpression	* s ++ = '0'		771940	0		=			
ANR	772317	UnaryOperationExpression	* s ++		771940	0					
ANR	772318	UnaryOperator	*		771940	0					
ANR	772319	PostIncDecOperationExpression	s ++		771940	1					
ANR	772320	Identifier	s		771940	0					
ANR	772321	IncDec	++		771940	1					
ANR	772322	PrimaryExpression	'0'		771940	1					
ANR	772323	ExpressionStatement	* s ++ = '0'	640:12:18194:18204	771940	2	True				
ANR	772324	AssignmentExpression	* s ++ = '0'		771940	0		=			
ANR	772325	UnaryOperationExpression	* s ++		771940	0					
ANR	772326	UnaryOperator	*		771940	0					
ANR	772327	PostIncDecOperationExpression	s ++		771940	1					
ANR	772328	Identifier	s		771940	0					
ANR	772329	IncDec	++		771940	1					
ANR	772330	PrimaryExpression	'0'		771940	1					
ANR	772331	ExpressionStatement	* len = s - buf	644:4:18227:18241	771940	11	True				
ANR	772332	AssignmentExpression	* len = s - buf		771940	0		=			
ANR	772333	UnaryOperationExpression	* len		771940	0					
ANR	772334	UnaryOperator	*		771940	0					
ANR	772335	Identifier	len		771940	1					
ANR	772336	AdditiveExpression	s - buf		771940	1		-			
ANR	772337	Identifier	s		771940	0					
ANR	772338	Identifier	buf		771940	1					
ANR	772339	ReturnStatement	return ( buf ) ;	645:4:18247:18259	771940	12	True				
ANR	772340	Identifier	buf		771940	0					
ANR	772341	ReturnType	static char *		771940	1					
ANR	772342	Identifier	conv_fp		771940	2					
ANR	772343	ParameterList	"register char format , register double num , boolean_e add_dp , int precision , int * is_negative , char * buf , apr_size_t * len"		771940	3					
ANR	772344	Parameter	register char format	563:21:16132:16151	771940	0	True				
ANR	772345	ParameterType	register char		771940	0					
ANR	772346	Identifier	format		771940	1					
ANR	772347	Parameter	register double num	563:43:16154:16172	771940	1	True				
ANR	772348	ParameterType	register double		771940	0					
ANR	772349	Identifier	num		771940	1					
ANR	772350	Parameter	boolean_e add_dp	564:4:16179:16194	771940	2	True				
ANR	772351	ParameterType	boolean_e		771940	0					
ANR	772352	Identifier	add_dp		771940	1					
ANR	772353	Parameter	int precision	564:22:16197:16209	771940	3	True				
ANR	772354	ParameterType	int		771940	0					
ANR	772355	Identifier	precision		771940	1					
ANR	772356	Parameter	int * is_negative	564:37:16212:16227	771940	4	True				
ANR	772357	ParameterType	int *		771940	0					
ANR	772358	Identifier	is_negative		771940	1					
ANR	772359	Parameter	char * buf	565:4:16234:16242	771940	5	True				
ANR	772360	ParameterType	char *		771940	0					
ANR	772361	Identifier	buf		771940	1					
ANR	772362	Parameter	apr_size_t * len	565:15:16245:16259	771940	6	True				
ANR	772363	ParameterType	apr_size_t *		771940	0					
ANR	772364	Identifier	len		771940	1					
ANR	772365	CFGEntryNode	ENTRY		771940		True				
ANR	772366	CFGExitNode	EXIT		771940		True				
ANR	772367	Symbol	* s ++		771940						
ANR	772368	Symbol	& exponent_is_negative		771940						
ANR	772369	Symbol	decimal_point		771940						
ANR	772370	Symbol	t_len		771940						
ANR	772371	Symbol	exponent_is_negative		771940						
ANR	772372	Symbol	apr_ecvt		771940						
ANR	772373	Symbol	num		771940						
ANR	772374	Symbol	precision		771940						
ANR	772375	Symbol	& t_len		771940						
ANR	772376	Symbol	strlen		771940						
ANR	772377	Symbol	len		771940						
ANR	772378	Symbol	& decimal_point		771940						
ANR	772379	Symbol	EXPONENT_LENGTH		771940						
ANR	772380	Symbol	add_dp		771940						
ANR	772381	Symbol	apr_isalpha		771940						
ANR	772382	Symbol	temp		771940						
ANR	772383	Symbol	* p ++		771940						
ANR	772384	Symbol	format		771940						
ANR	772385	Symbol	apr_fcvt		771940						
ANR	772386	Symbol	p		771940						
ANR	772387	Symbol	buf1		771940						
ANR	772388	Symbol	buf		771940						
ANR	772389	Symbol	s		771940						
ANR	772390	Symbol	* p		771940						
ANR	772391	Symbol	FALSE		771940						
ANR	772392	Symbol	is_negative		771940						
ANR	772393	Symbol	conv_10		771940						
ANR	772394	Symbol	* len		771940						
ANR	772395	Symbol	* is_negative		771940						
ANR	772396	Function	conv_p2	662:0:18785:19331							
ANR	772397	FunctionDef	"conv_p2 (register apr_uint32_t num , register int nbits , char format , char * buf_end , register apr_size_t * len)"		772396	0					
ANR	772398	CompoundStatement		664:0:18928:19331	772396	0					
ANR	772399	Statement	register	665:4:18934:18941	772396	0	True				
ANR	772400	IdentifierDeclStatement	int mask = ( 1 << nbits ) - 1 ;	665:13:18943:18970	772396	1	True				
ANR	772401	IdentifierDecl	mask = ( 1 << nbits ) - 1		772396	0					
ANR	772402	IdentifierDeclType	int		772396	0					
ANR	772403	Identifier	mask		772396	1					
ANR	772404	AssignmentExpression	mask = ( 1 << nbits ) - 1		772396	2		=			
ANR	772405	Identifier	mask		772396	0					
ANR	772406	AdditiveExpression	( 1 << nbits ) - 1		772396	1		-			
ANR	772407	ShiftExpression	1 << nbits		772396	0		<<			
ANR	772408	PrimaryExpression	1		772396	0					
ANR	772409	Identifier	nbits		772396	1					
ANR	772410	PrimaryExpression	1		772396	1					
ANR	772411	Statement	register	666:4:18976:18983	772396	2	True				
ANR	772412	IdentifierDeclStatement	char * p = buf_end ;	666:13:18985:19002	772396	3	True				
ANR	772413	IdentifierDecl	* p = buf_end		772396	0					
ANR	772414	IdentifierDeclType	char *		772396	0					
ANR	772415	Identifier	p		772396	1					
ANR	772416	AssignmentExpression	* p = buf_end		772396	2		=			
ANR	772417	Identifier	buf_end		772396	0					
ANR	772418	Identifier	buf_end		772396	1					
ANR	772419	Statement	static	667:4:19008:19013	772396	4	True				
ANR	772420	IdentifierDeclStatement	"const char low_digits [ ] = ""0123456789abcdef"" ;"	667:11:19015:19059	772396	5	True				
ANR	772421	IdentifierDecl	"low_digits [ ] = ""0123456789abcdef"""		772396	0					
ANR	772422	IdentifierDeclType	const char [ ]		772396	0					
ANR	772423	Identifier	low_digits		772396	1					
ANR	772424	AssignmentExpression	"low_digits [ ] = ""0123456789abcdef"""		772396	2		=			
ANR	772425	Identifier	low_digits		772396	0					
ANR	772426	PrimaryExpression	"""0123456789abcdef"""		772396	1					
ANR	772427	Statement	static	668:4:19065:19070	772396	6	True				
ANR	772428	IdentifierDeclStatement	"const char upper_digits [ ] = ""0123456789ABCDEF"" ;"	668:11:19072:19118	772396	7	True				
ANR	772429	IdentifierDecl	"upper_digits [ ] = ""0123456789ABCDEF"""		772396	0					
ANR	772430	IdentifierDeclType	const char [ ]		772396	0					
ANR	772431	Identifier	upper_digits		772396	1					
ANR	772432	AssignmentExpression	"upper_digits [ ] = ""0123456789ABCDEF"""		772396	2		=			
ANR	772433	Identifier	upper_digits		772396	0					
ANR	772434	PrimaryExpression	"""0123456789ABCDEF"""		772396	1					
ANR	772435	Statement	register	669:4:19124:19131	772396	8	True				
ANR	772436	IdentifierDeclStatement	const char * digits = ( format == 'X' ) ? upper_digits : low_digits ;	669:13:19133:19197	772396	9	True				
ANR	772437	IdentifierDecl	* digits = ( format == 'X' ) ? upper_digits : low_digits		772396	0					
ANR	772438	IdentifierDeclType	const char *		772396	0					
ANR	772439	Identifier	digits		772396	1					
ANR	772440	AssignmentExpression	* digits = ( format == 'X' ) ? upper_digits : low_digits		772396	2		=			
ANR	772441	Identifier	digits		772396	0					
ANR	772442	ConditionalExpression	( format == 'X' ) ? upper_digits : low_digits		772396	1					
ANR	772443	Condition	format == 'X'		772396	0					
ANR	772444	EqualityExpression	format == 'X'		772396	0		==			
ANR	772445	Identifier	format		772396	0					
ANR	772446	PrimaryExpression	'X'		772396	1					
ANR	772447	Identifier	upper_digits		772396	1					
ANR	772448	Identifier	low_digits		772396	2					
ANR	772449	DoStatement	do		772396	10					
ANR	772450	CompoundStatement		8:7:278:278	772396	0					
ANR	772451	ExpressionStatement	* -- p = digits [ num & mask ]	672:8:19217:19242	772396	0	True				
ANR	772452	AssignmentExpression	* -- p = digits [ num & mask ]		772396	0		=			
ANR	772453	UnaryOperationExpression	* -- p		772396	0					
ANR	772454	UnaryOperator	*		772396	0					
ANR	772455	UnaryExpression	-- p		772396	1					
ANR	772456	IncDec	--		772396	0					
ANR	772457	Identifier	p		772396	1					
ANR	772458	ArrayIndexing	digits [ num & mask ]		772396	1					
ANR	772459	Identifier	digits		772396	0					
ANR	772460	BitAndExpression	num & mask		772396	1		&			
ANR	772461	Identifier	num		772396	0					
ANR	772462	Identifier	mask		772396	1					
ANR	772463	ExpressionStatement	num >>= nbits	673:8:19252:19265	772396	1	True				
ANR	772464	AssignmentExpression	num >>= nbits		772396	0		>>=			
ANR	772465	Identifier	num		772396	0					
ANR	772466	Identifier	nbits		772396	1					
ANR	772467	Condition	num	675:11:19284:19286	772396	1	True				
ANR	772468	Identifier	num		772396	0					
ANR	772469	ExpressionStatement	* len = buf_end - p	677:4:19295:19313	772396	11	True				
ANR	772470	AssignmentExpression	* len = buf_end - p		772396	0		=			
ANR	772471	UnaryOperationExpression	* len		772396	0					
ANR	772472	UnaryOperator	*		772396	0					
ANR	772473	Identifier	len		772396	1					
ANR	772474	AdditiveExpression	buf_end - p		772396	1		-			
ANR	772475	Identifier	buf_end		772396	0					
ANR	772476	Identifier	p		772396	1					
ANR	772477	ReturnStatement	return ( p ) ;	678:4:19319:19329	772396	12	True				
ANR	772478	Identifier	p		772396	0					
ANR	772479	ReturnType	static char *		772396	1					
ANR	772480	Identifier	conv_p2		772396	2					
ANR	772481	ParameterList	"register apr_uint32_t num , register int nbits , char format , char * buf_end , register apr_size_t * len"		772396	3					
ANR	772482	Parameter	register apr_uint32_t num	662:21:18806:18830	772396	0	True				
ANR	772483	ParameterType	register apr_uint32_t		772396	0					
ANR	772484	Identifier	num		772396	1					
ANR	772485	Parameter	register int nbits	662:48:18833:18850	772396	1	True				
ANR	772486	ParameterType	register int		772396	0					
ANR	772487	Identifier	nbits		772396	1					
ANR	772488	Parameter	char format	663:21:18874:18884	772396	2	True				
ANR	772489	ParameterType	char		772396	0					
ANR	772490	Identifier	format		772396	1					
ANR	772491	Parameter	char * buf_end	663:34:18887:18899	772396	3	True				
ANR	772492	ParameterType	char *		772396	0					
ANR	772493	Identifier	buf_end		772396	1					
ANR	772494	Parameter	register apr_size_t * len	663:49:18902:18925	772396	4	True				
ANR	772495	ParameterType	register apr_size_t *		772396	0					
ANR	772496	Identifier	len		772396	1					
ANR	772497	CFGEntryNode	ENTRY		772396		True				
ANR	772498	CFGExitNode	EXIT		772396		True				
ANR	772499	Symbol	* mask		772396						
ANR	772500	Symbol	* -- p		772396						
ANR	772501	Symbol	num		772396						
ANR	772502	Symbol	nbits		772396						
ANR	772503	Symbol	format		772396						
ANR	772504	Symbol	* digits		772396						
ANR	772505	Symbol	p		772396						
ANR	772506	Symbol	* num		772396						
ANR	772507	Symbol	low_digits		772396						
ANR	772508	Symbol	upper_digits		772396						
ANR	772509	Symbol	len		772396						
ANR	772510	Symbol	digits		772396						
ANR	772511	Symbol	* p		772396						
ANR	772512	Symbol	buf_end		772396						
ANR	772513	Symbol	mask		772396						
ANR	772514	Symbol	* len		772396						
ANR	772515	Function	conv_p2_quad	681:0:19334:19981							
ANR	772516	FunctionDef	"conv_p2_quad (apr_uint64_t num , register int nbits , char format , char * buf_end , register apr_size_t * len)"		772515	0					
ANR	772517	CompoundStatement		683:0:19473:19981	772515	0					
ANR	772518	Statement	register	684:4:19479:19486	772515	0	True				
ANR	772519	IdentifierDeclStatement	int mask = ( 1 << nbits ) - 1 ;	684:13:19488:19515	772515	1	True				
ANR	772520	IdentifierDecl	mask = ( 1 << nbits ) - 1		772515	0					
ANR	772521	IdentifierDeclType	int		772515	0					
ANR	772522	Identifier	mask		772515	1					
ANR	772523	AssignmentExpression	mask = ( 1 << nbits ) - 1		772515	2		=			
ANR	772524	Identifier	mask		772515	0					
ANR	772525	AdditiveExpression	( 1 << nbits ) - 1		772515	1		-			
ANR	772526	ShiftExpression	1 << nbits		772515	0		<<			
ANR	772527	PrimaryExpression	1		772515	0					
ANR	772528	Identifier	nbits		772515	1					
ANR	772529	PrimaryExpression	1		772515	1					
ANR	772530	Statement	register	685:4:19521:19528	772515	2	True				
ANR	772531	IdentifierDeclStatement	char * p = buf_end ;	685:13:19530:19547	772515	3	True				
ANR	772532	IdentifierDecl	* p = buf_end		772515	0					
ANR	772533	IdentifierDeclType	char *		772515	0					
ANR	772534	Identifier	p		772515	1					
ANR	772535	AssignmentExpression	* p = buf_end		772515	2		=			
ANR	772536	Identifier	buf_end		772515	0					
ANR	772537	Identifier	buf_end		772515	1					
ANR	772538	Statement	static	686:4:19553:19558	772515	4	True				
ANR	772539	IdentifierDeclStatement	"const char low_digits [ ] = ""0123456789abcdef"" ;"	686:11:19560:19604	772515	5	True				
ANR	772540	IdentifierDecl	"low_digits [ ] = ""0123456789abcdef"""		772515	0					
ANR	772541	IdentifierDeclType	const char [ ]		772515	0					
ANR	772542	Identifier	low_digits		772515	1					
ANR	772543	AssignmentExpression	"low_digits [ ] = ""0123456789abcdef"""		772515	2		=			
ANR	772544	Identifier	low_digits		772515	0					
ANR	772545	PrimaryExpression	"""0123456789abcdef"""		772515	1					
ANR	772546	Statement	static	687:4:19610:19615	772515	6	True				
ANR	772547	IdentifierDeclStatement	"const char upper_digits [ ] = ""0123456789ABCDEF"" ;"	687:11:19617:19663	772515	7	True				
ANR	772548	IdentifierDecl	"upper_digits [ ] = ""0123456789ABCDEF"""		772515	0					
ANR	772549	IdentifierDeclType	const char [ ]		772515	0					
ANR	772550	Identifier	upper_digits		772515	1					
ANR	772551	AssignmentExpression	"upper_digits [ ] = ""0123456789ABCDEF"""		772515	2		=			
ANR	772552	Identifier	upper_digits		772515	0					
ANR	772553	PrimaryExpression	"""0123456789ABCDEF"""		772515	1					
ANR	772554	Statement	register	688:4:19669:19676	772515	8	True				
ANR	772555	IdentifierDeclStatement	const char * digits = ( format == 'X' ) ? upper_digits : low_digits ;	688:13:19678:19742	772515	9	True				
ANR	772556	IdentifierDecl	* digits = ( format == 'X' ) ? upper_digits : low_digits		772515	0					
ANR	772557	IdentifierDeclType	const char *		772515	0					
ANR	772558	Identifier	digits		772515	1					
ANR	772559	AssignmentExpression	* digits = ( format == 'X' ) ? upper_digits : low_digits		772515	2		=			
ANR	772560	Identifier	digits		772515	0					
ANR	772561	ConditionalExpression	( format == 'X' ) ? upper_digits : low_digits		772515	1					
ANR	772562	Condition	format == 'X'		772515	0					
ANR	772563	EqualityExpression	format == 'X'		772515	0		==			
ANR	772564	Identifier	format		772515	0					
ANR	772565	PrimaryExpression	'X'		772515	1					
ANR	772566	Identifier	upper_digits		772515	1					
ANR	772567	Identifier	low_digits		772515	2					
ANR	772568	IfStatement	if ( num <= APR_UINT32_MAX )		772515	10					
ANR	772569	Condition	num <= APR_UINT32_MAX	690:8:19753:19773	772515	0	True				
ANR	772570	RelationalExpression	num <= APR_UINT32_MAX		772515	0		<=			
ANR	772571	Identifier	num		772515	0					
ANR	772572	Identifier	APR_UINT32_MAX		772515	1					
ANR	772573	ReturnStatement	"return ( conv_p2 ( ( apr_uint32_t ) num , nbits , format , buf_end , len ) ) ;"	691:8:19784:19847	772515	1	True				
ANR	772574	CallExpression	"conv_p2 ( ( apr_uint32_t ) num , nbits , format , buf_end , len )"		772515	0					
ANR	772575	Callee	conv_p2		772515	0					
ANR	772576	Identifier	conv_p2		772515	0					
ANR	772577	ArgumentList	( apr_uint32_t ) num		772515	1					
ANR	772578	Argument	( apr_uint32_t ) num		772515	0					
ANR	772579	CastExpression	( apr_uint32_t ) num		772515	0					
ANR	772580	CastTarget	apr_uint32_t		772515	0					
ANR	772581	Identifier	num		772515	1					
ANR	772582	Argument	nbits		772515	1					
ANR	772583	Identifier	nbits		772515	0					
ANR	772584	Argument	format		772515	2					
ANR	772585	Identifier	format		772515	0					
ANR	772586	Argument	buf_end		772515	3					
ANR	772587	Identifier	buf_end		772515	0					
ANR	772588	Argument	len		772515	4					
ANR	772589	Identifier	len		772515	0					
ANR	772590	DoStatement	do		772515	11					
ANR	772591	CompoundStatement		11:7:383:383	772515	0					
ANR	772592	ExpressionStatement	* -- p = digits [ num & mask ]	694:8:19867:19892	772515	0	True				
ANR	772593	AssignmentExpression	* -- p = digits [ num & mask ]		772515	0		=			
ANR	772594	UnaryOperationExpression	* -- p		772515	0					
ANR	772595	UnaryOperator	*		772515	0					
ANR	772596	UnaryExpression	-- p		772515	1					
ANR	772597	IncDec	--		772515	0					
ANR	772598	Identifier	p		772515	1					
ANR	772599	ArrayIndexing	digits [ num & mask ]		772515	1					
ANR	772600	Identifier	digits		772515	0					
ANR	772601	BitAndExpression	num & mask		772515	1		&			
ANR	772602	Identifier	num		772515	0					
ANR	772603	Identifier	mask		772515	1					
ANR	772604	ExpressionStatement	num >>= nbits	695:8:19902:19915	772515	1	True				
ANR	772605	AssignmentExpression	num >>= nbits		772515	0		>>=			
ANR	772606	Identifier	num		772515	0					
ANR	772607	Identifier	nbits		772515	1					
ANR	772608	Condition	num	697:11:19934:19936	772515	1	True				
ANR	772609	Identifier	num		772515	0					
ANR	772610	ExpressionStatement	* len = buf_end - p	699:4:19945:19963	772515	12	True				
ANR	772611	AssignmentExpression	* len = buf_end - p		772515	0		=			
ANR	772612	UnaryOperationExpression	* len		772515	0					
ANR	772613	UnaryOperator	*		772515	0					
ANR	772614	Identifier	len		772515	1					
ANR	772615	AdditiveExpression	buf_end - p		772515	1		-			
ANR	772616	Identifier	buf_end		772515	0					
ANR	772617	Identifier	p		772515	1					
ANR	772618	ReturnStatement	return ( p ) ;	700:4:19969:19979	772515	13	True				
ANR	772619	Identifier	p		772515	0					
ANR	772620	ReturnType	static char *		772515	1					
ANR	772621	Identifier	conv_p2_quad		772515	2					
ANR	772622	ParameterList	"apr_uint64_t num , register int nbits , char format , char * buf_end , register apr_size_t * len"		772515	3					
ANR	772623	Parameter	apr_uint64_t num	681:26:19360:19375	772515	0	True				
ANR	772624	ParameterType	apr_uint64_t		772515	0					
ANR	772625	Identifier	num		772515	1					
ANR	772626	Parameter	register int nbits	681:44:19378:19395	772515	1	True				
ANR	772627	ParameterType	register int		772515	0					
ANR	772628	Identifier	nbits		772515	1					
ANR	772629	Parameter	char format	682:21:19419:19429	772515	2	True				
ANR	772630	ParameterType	char		772515	0					
ANR	772631	Identifier	format		772515	1					
ANR	772632	Parameter	char * buf_end	682:34:19432:19444	772515	3	True				
ANR	772633	ParameterType	char *		772515	0					
ANR	772634	Identifier	buf_end		772515	1					
ANR	772635	Parameter	register apr_size_t * len	682:49:19447:19470	772515	4	True				
ANR	772636	ParameterType	register apr_size_t *		772515	0					
ANR	772637	Identifier	len		772515	1					
ANR	772638	CFGEntryNode	ENTRY		772515		True				
ANR	772639	CFGExitNode	EXIT		772515		True				
ANR	772640	Symbol	* mask		772515						
ANR	772641	Symbol	* -- p		772515						
ANR	772642	Symbol	num		772515						
ANR	772643	Symbol	nbits		772515						
ANR	772644	Symbol	format		772515						
ANR	772645	Symbol	* digits		772515						
ANR	772646	Symbol	p		772515						
ANR	772647	Symbol	* num		772515						
ANR	772648	Symbol	low_digits		772515						
ANR	772649	Symbol	upper_digits		772515						
ANR	772650	Symbol	APR_UINT32_MAX		772515						
ANR	772651	Symbol	len		772515						
ANR	772652	Symbol	conv_p2		772515						
ANR	772653	Symbol	digits		772515						
ANR	772654	Symbol	* p		772515						
ANR	772655	Symbol	buf_end		772515						
ANR	772656	Symbol	mask		772515						
ANR	772657	Symbol	* len		772515						
ANR	772658	Function	conv_os_thread_t_hex	704:0:20004:20568							
ANR	772659	FunctionDef	"conv_os_thread_t_hex (apr_os_thread_t * tid , char * buf_end , apr_size_t * len)"		772658	0					
ANR	772660	CompoundStatement		705:0:20092:20568	772658	0					
ANR	772661	ClassDefStatement	union { apr_os_thread_t tid ; apr_uint64_t u64 ; apr_uint32_t u32 ; } u ;	706:4:20098:20194	772658	0	True				
ANR	772662	IdentifierDecl	u		772658	0					
ANR	772663	IdentifierDeclType			772658	0					
ANR	772664	Identifier	u		772658	1					
ANR	772665	IdentifierDeclStatement	int is_negative ;	711:4:20200:20215	772658	1	True				
ANR	772666	IdentifierDecl	is_negative		772658	0					
ANR	772667	IdentifierDeclType	int		772658	0					
ANR	772668	Identifier	is_negative		772658	1					
ANR	772669	ExpressionStatement	u . tid = * tid	713:4:20222:20234	772658	2	True				
ANR	772670	AssignmentExpression	u . tid = * tid		772658	0		=			
ANR	772671	MemberAccess	u . tid		772658	0					
ANR	772672	Identifier	u		772658	0					
ANR	772673	Identifier	tid		772658	1					
ANR	772674	UnaryOperationExpression	* tid		772658	1					
ANR	772675	UnaryOperator	*		772658	0					
ANR	772676	Identifier	tid		772658	1					
ANR	772677	SwitchStatement	switch ( sizeof ( u . tid ) )		772658	3					
ANR	772678	Condition	sizeof ( u . tid )	714:11:20247:20259	772658	0	True				
ANR	772679	SizeofExpression	sizeof ( u . tid )		772658	0					
ANR	772680	Sizeof	sizeof		772658	0					
ANR	772681	MemberAccess	u . tid		772658	1					
ANR	772682	Identifier	u		772658	0					
ANR	772683	Identifier	tid		772658	1					
ANR	772684	CompoundStatement		10:26:169:169	772658	1					
ANR	772685	Statement	case	715:4:20268:20271	772658	0	True				
ANR	772686	Statement	sizeof	715:9:20273:20278	772658	1	True				
ANR	772687	Statement	(	715:15:20279:20279	772658	2	True				
ANR	772688	Statement	apr_int32_t	715:16:20280:20290	772658	3	True				
ANR	772689	Statement	)	715:27:20291:20291	772658	4	True				
ANR	772690	Statement	:	715:28:20292:20292	772658	5	True				
ANR	772691	ReturnStatement	"return conv_p2 ( u . u32 , 4 , 'x' , buf_end , len ) ;"	716:8:20302:20345	772658	6	True				
ANR	772692	CallExpression	"conv_p2 ( u . u32 , 4 , 'x' , buf_end , len )"		772658	0					
ANR	772693	Callee	conv_p2		772658	0					
ANR	772694	Identifier	conv_p2		772658	0					
ANR	772695	ArgumentList	u . u32		772658	1					
ANR	772696	Argument	u . u32		772658	0					
ANR	772697	MemberAccess	u . u32		772658	0					
ANR	772698	Identifier	u		772658	0					
ANR	772699	Identifier	u32		772658	1					
ANR	772700	Argument	4		772658	1					
ANR	772701	PrimaryExpression	4		772658	0					
ANR	772702	Argument	'x'		772658	2					
ANR	772703	PrimaryExpression	'x'		772658	0					
ANR	772704	Argument	buf_end		772658	3					
ANR	772705	Identifier	buf_end		772658	0					
ANR	772706	Argument	len		772658	4					
ANR	772707	Identifier	len		772658	0					
ANR	772708	Statement	case	717:4:20351:20354	772658	7	True				
ANR	772709	Statement	sizeof	717:9:20356:20361	772658	8	True				
ANR	772710	Statement	(	717:15:20362:20362	772658	9	True				
ANR	772711	Statement	apr_int64_t	717:16:20363:20373	772658	10	True				
ANR	772712	Statement	)	717:27:20374:20374	772658	11	True				
ANR	772713	Statement	:	717:28:20375:20375	772658	12	True				
ANR	772714	ReturnStatement	"return conv_p2_quad ( u . u64 , 4 , 'x' , buf_end , len ) ;"	718:8:20385:20433	772658	13	True				
ANR	772715	CallExpression	"conv_p2_quad ( u . u64 , 4 , 'x' , buf_end , len )"		772658	0					
ANR	772716	Callee	conv_p2_quad		772658	0					
ANR	772717	Identifier	conv_p2_quad		772658	0					
ANR	772718	ArgumentList	u . u64		772658	1					
ANR	772719	Argument	u . u64		772658	0					
ANR	772720	MemberAccess	u . u64		772658	0					
ANR	772721	Identifier	u		772658	0					
ANR	772722	Identifier	u64		772658	1					
ANR	772723	Argument	4		772658	1					
ANR	772724	PrimaryExpression	4		772658	0					
ANR	772725	Argument	'x'		772658	2					
ANR	772726	PrimaryExpression	'x'		772658	0					
ANR	772727	Argument	buf_end		772658	3					
ANR	772728	Identifier	buf_end		772658	0					
ANR	772729	Argument	len		772658	4					
ANR	772730	Identifier	len		772658	0					
ANR	772731	Label	default :	719:4:20439:20446	772658	14	True				
ANR	772732	Identifier	default		772658	0					
ANR	772733	ReturnStatement	"return conv_10 ( 0 , TRUE , & is_negative , buf_end , len ) ;"	721:8:20509:20560	772658	15	True				
ANR	772734	CallExpression	"conv_10 ( 0 , TRUE , & is_negative , buf_end , len )"		772658	0					
ANR	772735	Callee	conv_10		772658	0					
ANR	772736	Identifier	conv_10		772658	0					
ANR	772737	ArgumentList	0		772658	1					
ANR	772738	Argument	0		772658	0					
ANR	772739	PrimaryExpression	0		772658	0					
ANR	772740	Argument	TRUE		772658	1					
ANR	772741	Identifier	TRUE		772658	0					
ANR	772742	Argument	& is_negative		772658	2					
ANR	772743	UnaryOperationExpression	& is_negative		772658	0					
ANR	772744	UnaryOperator	&		772658	0					
ANR	772745	Identifier	is_negative		772658	1					
ANR	772746	Argument	buf_end		772658	3					
ANR	772747	Identifier	buf_end		772658	0					
ANR	772748	Argument	len		772658	4					
ANR	772749	Identifier	len		772658	0					
ANR	772750	ReturnType	static char *		772658	1					
ANR	772751	Identifier	conv_os_thread_t_hex		772658	2					
ANR	772752	ParameterList	"apr_os_thread_t * tid , char * buf_end , apr_size_t * len"		772658	3					
ANR	772753	Parameter	apr_os_thread_t * tid	704:34:20038:20057	772658	0	True				
ANR	772754	ParameterType	apr_os_thread_t *		772658	0					
ANR	772755	Identifier	tid		772658	1					
ANR	772756	Parameter	char * buf_end	704:56:20060:20072	772658	1	True				
ANR	772757	ParameterType	char *		772658	0					
ANR	772758	Identifier	buf_end		772658	1					
ANR	772759	Parameter	apr_size_t * len	704:71:20075:20089	772658	2	True				
ANR	772760	ParameterType	apr_size_t *		772658	0					
ANR	772761	Identifier	len		772658	1					
ANR	772762	CFGEntryNode	ENTRY		772658		True				
ANR	772763	CFGExitNode	EXIT		772658		True				
ANR	772764	Symbol	TRUE		772658						
ANR	772765	Symbol	tid		772658						
ANR	772766	Symbol	& is_negative		772658						
ANR	772767	Symbol	len		772658						
ANR	772768	Symbol	u		772658						
ANR	772769	Symbol	conv_p2		772658						
ANR	772770	Symbol	conv_p2_quad		772658						
ANR	772771	Symbol	* tid		772658						
ANR	772772	Symbol	u . u64		772658						
ANR	772773	Symbol	u . u32		772658						
ANR	772774	Symbol	buf_end		772658						
ANR	772775	Symbol	is_negative		772658						
ANR	772776	Symbol	conv_10		772658						
ANR	772777	Symbol	u . tid		772658						
ANR	772778	Function	apr_vformatter	729:0:20638:45122							
ANR	772779	FunctionDef	"apr_vformatter (int ( * flush_func ) ( apr_vformatter_buff_t * ) , apr_vformatter_buff_t * vbuff , const char * fmt , va_list ap)"		772778	0					
ANR	772780	CompoundStatement		731:0:20771:45122	772778	0					
ANR	772781	Statement	register	732:4:20777:20784	772778	0	True				
ANR	772782	IdentifierDeclStatement	char * sp ;	732:13:20786:20794	772778	1	True				
ANR	772783	IdentifierDecl	* sp		772778	0					
ANR	772784	IdentifierDeclType	char *		772778	0					
ANR	772785	Identifier	sp		772778	1					
ANR	772786	Statement	register	733:4:20800:20807	772778	2	True				
ANR	772787	IdentifierDeclStatement	char * bep ;	733:13:20809:20818	772778	3	True				
ANR	772788	IdentifierDecl	* bep		772778	0					
ANR	772789	IdentifierDeclType	char *		772778	0					
ANR	772790	Identifier	bep		772778	1					
ANR	772791	Statement	register	734:4:20824:20831	772778	4	True				
ANR	772792	IdentifierDeclStatement	int cc = 0 ;	734:13:20833:20843	772778	5	True				
ANR	772793	IdentifierDecl	cc = 0		772778	0					
ANR	772794	IdentifierDeclType	int		772778	0					
ANR	772795	Identifier	cc		772778	1					
ANR	772796	AssignmentExpression	cc = 0		772778	2		=			
ANR	772797	Identifier	cc		772778	0					
ANR	772798	PrimaryExpression	0		772778	1					
ANR	772799	Statement	register	735:4:20849:20856	772778	6	True				
ANR	772800	IdentifierDeclStatement	apr_size_t i ;	735:13:20858:20870	772778	7	True				
ANR	772801	IdentifierDecl	i		772778	0					
ANR	772802	IdentifierDeclType	apr_size_t		772778	0					
ANR	772803	Identifier	i		772778	1					
ANR	772804	Statement	register	737:4:20877:20884	772778	8	True				
ANR	772805	IdentifierDeclStatement	char * s = NULL ;	737:13:20886:20900	772778	9	True				
ANR	772806	IdentifierDecl	* s = NULL		772778	0					
ANR	772807	IdentifierDeclType	char *		772778	0					
ANR	772808	Identifier	s		772778	1					
ANR	772809	AssignmentExpression	* s = NULL		772778	2		=			
ANR	772810	Identifier	NULL		772778	0					
ANR	772811	Identifier	NULL		772778	1					
ANR	772812	IdentifierDeclStatement	char * q ;	738:4:20906:20913	772778	10	True				
ANR	772813	IdentifierDecl	* q		772778	0					
ANR	772814	IdentifierDeclType	char *		772778	0					
ANR	772815	Identifier	q		772778	1					
ANR	772816	IdentifierDeclStatement	apr_size_t s_len = 0 ;	739:4:20919:20939	772778	11	True				
ANR	772817	IdentifierDecl	s_len = 0		772778	0					
ANR	772818	IdentifierDeclType	apr_size_t		772778	0					
ANR	772819	Identifier	s_len		772778	1					
ANR	772820	AssignmentExpression	s_len = 0		772778	2		=			
ANR	772821	Identifier	s_len		772778	0					
ANR	772822	PrimaryExpression	0		772778	1					
ANR	772823	Statement	register	741:4:20946:20953	772778	12	True				
ANR	772824	IdentifierDeclStatement	apr_size_t min_width = 0 ;	741:13:20955:20979	772778	13	True				
ANR	772825	IdentifierDecl	min_width = 0		772778	0					
ANR	772826	IdentifierDeclType	apr_size_t		772778	0					
ANR	772827	Identifier	min_width		772778	1					
ANR	772828	AssignmentExpression	min_width = 0		772778	2		=			
ANR	772829	Identifier	min_width		772778	0					
ANR	772830	PrimaryExpression	0		772778	1					
ANR	772831	IdentifierDeclStatement	apr_size_t precision = 0 ;	742:4:20985:21009	772778	14	True				
ANR	772832	IdentifierDecl	precision = 0		772778	0					
ANR	772833	IdentifierDeclType	apr_size_t		772778	0					
ANR	772834	Identifier	precision		772778	1					
ANR	772835	AssignmentExpression	precision = 0		772778	2		=			
ANR	772836	Identifier	precision		772778	0					
ANR	772837	PrimaryExpression	0		772778	1					
ANR	772838	ClassDefStatement	"enum { LEFT , RIGHT } adjust ;"	743:4:21015:21054	772778	15	True				
ANR	772839	IdentifierDecl	adjust		772778	0					
ANR	772840	IdentifierDeclType			772778	0					
ANR	772841	Identifier	adjust		772778	1					
ANR	772842	IdentifierDeclStatement	char pad_char ;	746:4:21060:21073	772778	16	True				
ANR	772843	IdentifierDecl	pad_char		772778	0					
ANR	772844	IdentifierDeclType	char		772778	0					
ANR	772845	Identifier	pad_char		772778	1					
ANR	772846	IdentifierDeclStatement	char prefix_char ;	747:4:21079:21095	772778	17	True				
ANR	772847	IdentifierDecl	prefix_char		772778	0					
ANR	772848	IdentifierDeclType	char		772778	0					
ANR	772849	Identifier	prefix_char		772778	1					
ANR	772850	IdentifierDeclStatement	double fp_num ;	749:4:21102:21115	772778	18	True				
ANR	772851	IdentifierDecl	fp_num		772778	0					
ANR	772852	IdentifierDeclType	double		772778	0					
ANR	772853	Identifier	fp_num		772778	1					
ANR	772854	IdentifierDeclStatement	apr_int64_t i_quad = 0 ;	750:4:21121:21143	772778	19	True				
ANR	772855	IdentifierDecl	i_quad = 0		772778	0					
ANR	772856	IdentifierDeclType	apr_int64_t		772778	0					
ANR	772857	Identifier	i_quad		772778	1					
ANR	772858	AssignmentExpression	i_quad = 0		772778	2		=			
ANR	772859	Identifier	i_quad		772778	0					
ANR	772860	PrimaryExpression	0		772778	1					
ANR	772861	IdentifierDeclStatement	apr_uint64_t ui_quad ;	751:4:21149:21169	772778	20	True				
ANR	772862	IdentifierDecl	ui_quad		772778	0					
ANR	772863	IdentifierDeclType	apr_uint64_t		772778	0					
ANR	772864	Identifier	ui_quad		772778	1					
ANR	772865	IdentifierDeclStatement	apr_int32_t i_num = 0 ;	752:4:21175:21196	772778	21	True				
ANR	772866	IdentifierDecl	i_num = 0		772778	0					
ANR	772867	IdentifierDeclType	apr_int32_t		772778	0					
ANR	772868	Identifier	i_num		772778	1					
ANR	772869	AssignmentExpression	i_num = 0		772778	2		=			
ANR	772870	Identifier	i_num		772778	0					
ANR	772871	PrimaryExpression	0		772778	1					
ANR	772872	IdentifierDeclStatement	apr_uint32_t ui_num = 0 ;	753:4:21202:21225	772778	22	True				
ANR	772873	IdentifierDecl	ui_num = 0		772778	0					
ANR	772874	IdentifierDeclType	apr_uint32_t		772778	0					
ANR	772875	Identifier	ui_num		772778	1					
ANR	772876	AssignmentExpression	ui_num = 0		772778	2		=			
ANR	772877	Identifier	ui_num		772778	0					
ANR	772878	PrimaryExpression	0		772778	1					
ANR	772879	IdentifierDeclStatement	char num_buf [ NUM_BUF_SIZE ] ;	755:4:21232:21258	772778	23	True				
ANR	772880	IdentifierDecl	num_buf [ NUM_BUF_SIZE ]		772778	0					
ANR	772881	IdentifierDeclType	char [ NUM_BUF_SIZE ]		772778	0					
ANR	772882	Identifier	num_buf		772778	1					
ANR	772883	Identifier	NUM_BUF_SIZE		772778	2					
ANR	772884	IdentifierDeclStatement	char char_buf [ 2 ] ;	756:4:21264:21280	772778	24	True				
ANR	772885	IdentifierDecl	char_buf [ 2 ]		772778	0					
ANR	772886	IdentifierDeclType	char [ 2 ]		772778	0					
ANR	772887	Identifier	char_buf		772778	1					
ANR	772888	PrimaryExpression	2		772778	2					
ANR	772889	IdentifierDeclStatement	"char inf [ ] = ""#INF"" ;"	757:4:21338:21357	772778	25	True				
ANR	772890	IdentifierDecl	"inf [ ] = ""#INF"""		772778	0					
ANR	772891	IdentifierDeclType	char [ ]		772778	0					
ANR	772892	Identifier	inf		772778	1					
ANR	772893	AssignmentExpression	"inf [ ] = ""#INF"""		772778	2		=			
ANR	772894	Identifier	inf		772778	0					
ANR	772895	PrimaryExpression	"""#INF"""		772778	1					
ANR	772896	IdentifierDeclStatement	"char nan [ ] = ""#NAN"" ;"	758:4:21363:21382	772778	26	True				
ANR	772897	IdentifierDecl	"nan [ ] = ""#NAN"""		772778	0					
ANR	772898	IdentifierDeclType	char [ ]		772778	0					
ANR	772899	Identifier	nan		772778	1					
ANR	772900	AssignmentExpression	"nan [ ] = ""#NAN"""		772778	2		=			
ANR	772901	Identifier	nan		772778	0					
ANR	772902	PrimaryExpression	"""#NAN"""		772778	1					
ANR	772903	ClassDefStatement	"enum var_type_enum { IS_QUAD , IS_LONG , IS_SHORT , IS_INT }"	760:4:21389:21461	772778	27	True				
ANR	772904	Identifier	var_type_enum		772778	0					
ANR	772905	ExpressionStatement		762:5:21462:21462	772778	28	True				
ANR	772906	IdentifierDeclStatement	enum var_type_enum var_type = IS_INT ;	763:4:21468:21504	772778	29	True				
ANR	772907	IdentifierDecl	var_type = IS_INT		772778	0					
ANR	772908	IdentifierDeclType	enum var_type_enum		772778	0					
ANR	772909	Identifier	var_type		772778	1					
ANR	772910	AssignmentExpression	var_type = IS_INT		772778	2		=			
ANR	772911	Identifier	IS_INT		772778	0					
ANR	772912	Identifier	IS_INT		772778	1					
ANR	772913	IdentifierDeclStatement	boolean_e alternate_form ;	768:4:21548:21572	772778	30	True				
ANR	772914	IdentifierDecl	alternate_form		772778	0					
ANR	772915	IdentifierDeclType	boolean_e		772778	0					
ANR	772916	Identifier	alternate_form		772778	1					
ANR	772917	IdentifierDeclStatement	boolean_e print_sign ;	769:4:21578:21598	772778	31	True				
ANR	772918	IdentifierDecl	print_sign		772778	0					
ANR	772919	IdentifierDeclType	boolean_e		772778	0					
ANR	772920	Identifier	print_sign		772778	1					
ANR	772921	IdentifierDeclStatement	boolean_e print_blank ;	770:4:21604:21625	772778	32	True				
ANR	772922	IdentifierDecl	print_blank		772778	0					
ANR	772923	IdentifierDeclType	boolean_e		772778	0					
ANR	772924	Identifier	print_blank		772778	1					
ANR	772925	IdentifierDeclStatement	boolean_e adjust_precision ;	771:4:21631:21657	772778	33	True				
ANR	772926	IdentifierDecl	adjust_precision		772778	0					
ANR	772927	IdentifierDeclType	boolean_e		772778	0					
ANR	772928	Identifier	adjust_precision		772778	1					
ANR	772929	IdentifierDeclStatement	boolean_e adjust_width ;	772:4:21663:21685	772778	34	True				
ANR	772930	IdentifierDecl	adjust_width		772778	0					
ANR	772931	IdentifierDeclType	boolean_e		772778	0					
ANR	772932	Identifier	adjust_width		772778	1					
ANR	772933	IdentifierDeclStatement	int is_negative ;	773:4:21691:21706	772778	35	True				
ANR	772934	IdentifierDecl	is_negative		772778	0					
ANR	772935	IdentifierDeclType	int		772778	0					
ANR	772936	Identifier	is_negative		772778	1					
ANR	772937	ExpressionStatement	sp = vbuff -> curpos	775:4:21713:21731	772778	36	True				
ANR	772938	AssignmentExpression	sp = vbuff -> curpos		772778	0		=			
ANR	772939	Identifier	sp		772778	0					
ANR	772940	PtrMemberAccess	vbuff -> curpos		772778	1					
ANR	772941	Identifier	vbuff		772778	0					
ANR	772942	Identifier	curpos		772778	1					
ANR	772943	ExpressionStatement	bep = vbuff -> endpos	776:4:21737:21756	772778	37	True				
ANR	772944	AssignmentExpression	bep = vbuff -> endpos		772778	0		=			
ANR	772945	Identifier	bep		772778	0					
ANR	772946	PtrMemberAccess	vbuff -> endpos		772778	1					
ANR	772947	Identifier	vbuff		772778	0					
ANR	772948	Identifier	endpos		772778	1					
ANR	772949	WhileStatement	while ( * fmt )		772778	38					
ANR	772950	Condition	* fmt	778:11:21770:21773	772778	0	True				
ANR	772951	UnaryOperationExpression	* fmt		772778	0					
ANR	772952	UnaryOperator	*		772778	0					
ANR	772953	Identifier	fmt		772778	1					
ANR	772954	CompoundStatement		48:17:1004:1004	772778	1					
ANR	772955	IfStatement	if ( * fmt != '%' )		772778	0					
ANR	772956	Condition	* fmt != '%'	779:12:21790:21800	772778	0	True				
ANR	772957	EqualityExpression	* fmt != '%'		772778	0		!=			
ANR	772958	UnaryOperationExpression	* fmt		772778	0					
ANR	772959	UnaryOperator	*		772778	0					
ANR	772960	Identifier	fmt		772778	1					
ANR	772961	PrimaryExpression	'%'		772778	1					
ANR	772962	CompoundStatement		49:25:1031:1031	772778	1					
ANR	772963	ExpressionStatement	"INS_CHAR ( * fmt , sp , bep , cc )"	780:12:21817:21844	772778	0	True				
ANR	772964	CallExpression	"INS_CHAR ( * fmt , sp , bep , cc )"		772778	0					
ANR	772965	Callee	INS_CHAR		772778	0					
ANR	772966	Identifier	INS_CHAR		772778	0					
ANR	772967	ArgumentList	* fmt		772778	1					
ANR	772968	Argument	* fmt		772778	0					
ANR	772969	UnaryOperationExpression	* fmt		772778	0					
ANR	772970	UnaryOperator	*		772778	0					
ANR	772971	Identifier	fmt		772778	1					
ANR	772972	Argument	sp		772778	1					
ANR	772973	Identifier	sp		772778	0					
ANR	772974	Argument	bep		772778	2					
ANR	772975	Identifier	bep		772778	0					
ANR	772976	Argument	cc		772778	3					
ANR	772977	Identifier	cc		772778	0					
ANR	772978	ElseStatement	else		772778	0					
ANR	772979	CompoundStatement		56:12:1183:1214	772778	0					
ANR	772980	IdentifierDeclStatement	boolean_e print_something = YES ;	786:12:21955:21986	772778	0	True				
ANR	772981	IdentifierDecl	print_something = YES		772778	0					
ANR	772982	IdentifierDeclType	boolean_e		772778	0					
ANR	772983	Identifier	print_something		772778	1					
ANR	772984	AssignmentExpression	print_something = YES		772778	2		=			
ANR	772985	Identifier	YES		772778	0					
ANR	772986	Identifier	YES		772778	1					
ANR	772987	ExpressionStatement	adjust = RIGHT	787:12:22000:22014	772778	1	True				
ANR	772988	AssignmentExpression	adjust = RIGHT		772778	0		=			
ANR	772989	Identifier	adjust		772778	0					
ANR	772990	Identifier	RIGHT		772778	1					
ANR	772991	ExpressionStatement	alternate_form = print_sign = print_blank = NO	788:12:22028:22074	772778	2	True				
ANR	772992	AssignmentExpression	alternate_form = print_sign = print_blank = NO		772778	0		=			
ANR	772993	Identifier	alternate_form		772778	0					
ANR	772994	AssignmentExpression	print_sign = print_blank = NO		772778	1		=			
ANR	772995	Identifier	print_sign		772778	0					
ANR	772996	AssignmentExpression	print_blank = NO		772778	1		=			
ANR	772997	Identifier	print_blank		772778	0					
ANR	772998	Identifier	NO		772778	1					
ANR	772999	ExpressionStatement	pad_char = ' '	789:12:22088:22102	772778	3	True				
ANR	773000	AssignmentExpression	pad_char = ' '		772778	0		=			
ANR	773001	Identifier	pad_char		772778	0					
ANR	773002	PrimaryExpression	' '		772778	1					
ANR	773003	ExpressionStatement	prefix_char = NUL	790:12:22116:22133	772778	4	True				
ANR	773004	AssignmentExpression	prefix_char = NUL		772778	0		=			
ANR	773005	Identifier	prefix_char		772778	0					
ANR	773006	Identifier	NUL		772778	1					
ANR	773007	ExpressionStatement	fmt ++	792:12:22148:22153	772778	5	True				
ANR	773008	PostIncDecOperationExpression	fmt ++		772778	0					
ANR	773009	Identifier	fmt		772778	0					
ANR	773010	IncDec	++		772778	1					
ANR	773011	IfStatement	if ( ! apr_islower ( * fmt ) )		772778	6					
ANR	773012	Condition	! apr_islower ( * fmt )	797:16:22270:22287	772778	0	True				
ANR	773013	UnaryOperationExpression	! apr_islower ( * fmt )		772778	0					
ANR	773014	UnaryOperator	!		772778	0					
ANR	773015	CallExpression	apr_islower ( * fmt )		772778	1					
ANR	773016	Callee	apr_islower		772778	0					
ANR	773017	Identifier	apr_islower		772778	0					
ANR	773018	ArgumentList	* fmt		772778	1					
ANR	773019	Argument	* fmt		772778	0					
ANR	773020	UnaryOperationExpression	* fmt		772778	0					
ANR	773021	UnaryOperator	*		772778	0					
ANR	773022	Identifier	fmt		772778	1					
ANR	773023	CompoundStatement		67:36:1518:1518	772778	1					
ANR	773024	ForStatement	for ( ; ; fmt ++ )		772778	0					
ANR	773025	PostIncDecOperationExpression	fmt ++	801:24:22406:22410	772778	0	True				
ANR	773026	Identifier	fmt		772778	0					
ANR	773027	IncDec	++		772778	1					
ANR	773028	CompoundStatement		71:31:1641:1641	772778	1					
ANR	773029	IfStatement	if ( * fmt == '-' )		772778	0					
ANR	773030	Condition	* fmt == '-'	802:24:22439:22449	772778	0	True				
ANR	773031	EqualityExpression	* fmt == '-'		772778	0		==			
ANR	773032	UnaryOperationExpression	* fmt		772778	0					
ANR	773033	UnaryOperator	*		772778	0					
ANR	773034	Identifier	fmt		772778	1					
ANR	773035	PrimaryExpression	'-'		772778	1					
ANR	773036	ExpressionStatement	adjust = LEFT	803:24:22476:22489	772778	1	True				
ANR	773037	AssignmentExpression	adjust = LEFT		772778	0		=			
ANR	773038	Identifier	adjust		772778	0					
ANR	773039	Identifier	LEFT		772778	1					
ANR	773040	ElseStatement	else		772778	0					
ANR	773041	IfStatement	if ( * fmt == '+' )		772778	0					
ANR	773042	Condition	* fmt == '+'	804:29:22520:22530	772778	0	True				
ANR	773043	EqualityExpression	* fmt == '+'		772778	0		==			
ANR	773044	UnaryOperationExpression	* fmt		772778	0					
ANR	773045	UnaryOperator	*		772778	0					
ANR	773046	Identifier	fmt		772778	1					
ANR	773047	PrimaryExpression	'+'		772778	1					
ANR	773048	ExpressionStatement	print_sign = YES	805:24:22557:22573	772778	1	True				
ANR	773049	AssignmentExpression	print_sign = YES		772778	0		=			
ANR	773050	Identifier	print_sign		772778	0					
ANR	773051	Identifier	YES		772778	1					
ANR	773052	ElseStatement	else		772778	0					
ANR	773053	IfStatement	if ( * fmt == '#' )		772778	0					
ANR	773054	Condition	* fmt == '#'	806:29:22604:22614	772778	0	True				
ANR	773055	EqualityExpression	* fmt == '#'		772778	0		==			
ANR	773056	UnaryOperationExpression	* fmt		772778	0					
ANR	773057	UnaryOperator	*		772778	0					
ANR	773058	Identifier	fmt		772778	1					
ANR	773059	PrimaryExpression	'#'		772778	1					
ANR	773060	ExpressionStatement	alternate_form = YES	807:24:22641:22661	772778	1	True				
ANR	773061	AssignmentExpression	alternate_form = YES		772778	0		=			
ANR	773062	Identifier	alternate_form		772778	0					
ANR	773063	Identifier	YES		772778	1					
ANR	773064	ElseStatement	else		772778	0					
ANR	773065	IfStatement	if ( * fmt == ' ' )		772778	0					
ANR	773066	Condition	* fmt == ' '	808:29:22692:22702	772778	0	True				
ANR	773067	EqualityExpression	* fmt == ' '		772778	0		==			
ANR	773068	UnaryOperationExpression	* fmt		772778	0					
ANR	773069	UnaryOperator	*		772778	0					
ANR	773070	Identifier	fmt		772778	1					
ANR	773071	PrimaryExpression	' '		772778	1					
ANR	773072	ExpressionStatement	print_blank = YES	809:24:22729:22746	772778	1	True				
ANR	773073	AssignmentExpression	print_blank = YES		772778	0		=			
ANR	773074	Identifier	print_blank		772778	0					
ANR	773075	Identifier	YES		772778	1					
ANR	773076	ElseStatement	else		772778	0					
ANR	773077	IfStatement	if ( * fmt == '0' )		772778	0					
ANR	773078	Condition	* fmt == '0'	810:29:22777:22787	772778	0	True				
ANR	773079	EqualityExpression	* fmt == '0'		772778	0		==			
ANR	773080	UnaryOperationExpression	* fmt		772778	0					
ANR	773081	UnaryOperator	*		772778	0					
ANR	773082	Identifier	fmt		772778	1					
ANR	773083	PrimaryExpression	'0'		772778	1					
ANR	773084	ExpressionStatement	pad_char = '0'	811:24:22814:22828	772778	1	True				
ANR	773085	AssignmentExpression	pad_char = '0'		772778	0		=			
ANR	773086	Identifier	pad_char		772778	0					
ANR	773087	PrimaryExpression	'0'		772778	1					
ANR	773088	ElseStatement	else		772778	0					
ANR	773089	BreakStatement	break ;	813:24:22879:22884	772778	0	True				
ANR	773090	IfStatement	if ( apr_isdigit ( * fmt ) )		772778	1					
ANR	773091	Condition	apr_isdigit ( * fmt )	819:20:23014:23030	772778	0	True				
ANR	773092	CallExpression	apr_isdigit ( * fmt )		772778	0					
ANR	773093	Callee	apr_isdigit		772778	0					
ANR	773094	Identifier	apr_isdigit		772778	0					
ANR	773095	ArgumentList	* fmt		772778	1					
ANR	773096	Argument	* fmt		772778	0					
ANR	773097	UnaryOperationExpression	* fmt		772778	0					
ANR	773098	UnaryOperator	*		772778	0					
ANR	773099	Identifier	fmt		772778	1					
ANR	773100	CompoundStatement		89:39:2261:2261	772778	1					
ANR	773101	ExpressionStatement	"STR_TO_DEC ( fmt , min_width )"	820:20:23055:23081	772778	0	True				
ANR	773102	CallExpression	"STR_TO_DEC ( fmt , min_width )"		772778	0					
ANR	773103	Callee	STR_TO_DEC		772778	0					
ANR	773104	Identifier	STR_TO_DEC		772778	0					
ANR	773105	ArgumentList	fmt		772778	1					
ANR	773106	Argument	fmt		772778	0					
ANR	773107	Identifier	fmt		772778	0					
ANR	773108	Argument	min_width		772778	1					
ANR	773109	Identifier	min_width		772778	0					
ANR	773110	ExpressionStatement	adjust_width = YES	821:20:23103:23121	772778	1	True				
ANR	773111	AssignmentExpression	adjust_width = YES		772778	0		=			
ANR	773112	Identifier	adjust_width		772778	0					
ANR	773113	Identifier	YES		772778	1					
ANR	773114	ElseStatement	else		772778	0					
ANR	773115	IfStatement	if ( * fmt == '*' )		772778	0					
ANR	773116	Condition	* fmt == '*'	823:25:23166:23176	772778	0	True				
ANR	773117	EqualityExpression	* fmt == '*'		772778	0		==			
ANR	773118	UnaryOperationExpression	* fmt		772778	0					
ANR	773119	UnaryOperator	*		772778	0					
ANR	773120	Identifier	fmt		772778	1					
ANR	773121	PrimaryExpression	'*'		772778	1					
ANR	773122	CompoundStatement		94:20:2429:2452	772778	1					
ANR	773123	IdentifierDeclStatement	"int v = va_arg ( ap , int ) ;"	824:20:23201:23224	772778	0	True				
ANR	773124	IdentifierDecl	"v = va_arg ( ap , int )"		772778	0					
ANR	773125	IdentifierDeclType	int		772778	0					
ANR	773126	Identifier	v		772778	1					
ANR	773127	AssignmentExpression	"v = va_arg ( ap , int )"		772778	2		=			
ANR	773128	Identifier	v		772778	0					
ANR	773129	CallExpression	"va_arg ( ap , int )"		772778	1					
ANR	773130	Callee	va_arg		772778	0					
ANR	773131	Identifier	va_arg		772778	0					
ANR	773132	ArgumentList	ap		772778	1					
ANR	773133	Argument	ap		772778	0					
ANR	773134	Identifier	ap		772778	0					
ANR	773135	Argument	int		772778	1					
ANR	773136	Identifier	int		772778	0					
ANR	773137	ExpressionStatement	fmt ++	825:20:23246:23251	772778	1	True				
ANR	773138	PostIncDecOperationExpression	fmt ++		772778	0					
ANR	773139	Identifier	fmt		772778	0					
ANR	773140	IncDec	++		772778	1					
ANR	773141	ExpressionStatement	adjust_width = YES	826:20:23273:23291	772778	2	True				
ANR	773142	AssignmentExpression	adjust_width = YES		772778	0		=			
ANR	773143	Identifier	adjust_width		772778	0					
ANR	773144	Identifier	YES		772778	1					
ANR	773145	IfStatement	if ( v < 0 )		772778	3					
ANR	773146	Condition	v < 0	827:24:23317:23321	772778	0	True				
ANR	773147	RelationalExpression	v < 0		772778	0		<			
ANR	773148	Identifier	v		772778	0					
ANR	773149	PrimaryExpression	0		772778	1					
ANR	773150	CompoundStatement		97:31:2552:2552	772778	1					
ANR	773151	ExpressionStatement	adjust = LEFT	828:24:23350:23363	772778	0	True				
ANR	773152	AssignmentExpression	adjust = LEFT		772778	0		=			
ANR	773153	Identifier	adjust		772778	0					
ANR	773154	Identifier	LEFT		772778	1					
ANR	773155	ExpressionStatement	min_width = ( apr_size_t ) ( - v )	829:24:23389:23417	772778	1	True				
ANR	773156	AssignmentExpression	min_width = ( apr_size_t ) ( - v )		772778	0		=			
ANR	773157	Identifier	min_width		772778	0					
ANR	773158	CastExpression	( apr_size_t ) ( - v )		772778	1					
ANR	773159	CastTarget	apr_size_t		772778	0					
ANR	773160	UnaryOperationExpression	- v		772778	1					
ANR	773161	UnaryOperator	-		772778	0					
ANR	773162	Identifier	v		772778	1					
ANR	773163	ElseStatement	else		772778	0					
ANR	773164	ExpressionStatement	min_width = ( apr_size_t ) v	832:24:23490:23515	772778	0	True				
ANR	773165	AssignmentExpression	min_width = ( apr_size_t ) v		772778	0		=			
ANR	773166	Identifier	min_width		772778	0					
ANR	773167	CastExpression	( apr_size_t ) v		772778	1					
ANR	773168	CastTarget	apr_size_t		772778	0					
ANR	773169	Identifier	v		772778	1					
ANR	773170	ElseStatement	else		772778	0					
ANR	773171	ExpressionStatement	adjust_width = NO	835:20:23576:23593	772778	0	True				
ANR	773172	AssignmentExpression	adjust_width = NO		772778	0		=			
ANR	773173	Identifier	adjust_width		772778	0					
ANR	773174	Identifier	NO		772778	1					
ANR	773175	IfStatement	if ( * fmt == '.' )		772778	2					
ANR	773176	Condition	* fmt == '.'	840:20:23709:23719	772778	0	True				
ANR	773177	EqualityExpression	* fmt == '.'		772778	0		==			
ANR	773178	UnaryOperationExpression	* fmt		772778	0					
ANR	773179	UnaryOperator	*		772778	0					
ANR	773180	Identifier	fmt		772778	1					
ANR	773181	PrimaryExpression	'.'		772778	1					
ANR	773182	CompoundStatement		110:33:2950:2950	772778	1					
ANR	773183	ExpressionStatement	adjust_precision = YES	841:20:23744:23766	772778	0	True				
ANR	773184	AssignmentExpression	adjust_precision = YES		772778	0		=			
ANR	773185	Identifier	adjust_precision		772778	0					
ANR	773186	Identifier	YES		772778	1					
ANR	773187	ExpressionStatement	fmt ++	842:20:23788:23793	772778	1	True				
ANR	773188	PostIncDecOperationExpression	fmt ++		772778	0					
ANR	773189	Identifier	fmt		772778	0					
ANR	773190	IncDec	++		772778	1					
ANR	773191	IfStatement	if ( apr_isdigit ( * fmt ) )		772778	2					
ANR	773192	Condition	apr_isdigit ( * fmt )	843:24:23819:23835	772778	0	True				
ANR	773193	CallExpression	apr_isdigit ( * fmt )		772778	0					
ANR	773194	Callee	apr_isdigit		772778	0					
ANR	773195	Identifier	apr_isdigit		772778	0					
ANR	773196	ArgumentList	* fmt		772778	1					
ANR	773197	Argument	* fmt		772778	0					
ANR	773198	UnaryOperationExpression	* fmt		772778	0					
ANR	773199	UnaryOperator	*		772778	0					
ANR	773200	Identifier	fmt		772778	1					
ANR	773201	CompoundStatement		113:43:3066:3066	772778	1					
ANR	773202	ExpressionStatement	"STR_TO_DEC ( fmt , precision )"	844:24:23864:23890	772778	0	True				
ANR	773203	CallExpression	"STR_TO_DEC ( fmt , precision )"		772778	0					
ANR	773204	Callee	STR_TO_DEC		772778	0					
ANR	773205	Identifier	STR_TO_DEC		772778	0					
ANR	773206	ArgumentList	fmt		772778	1					
ANR	773207	Argument	fmt		772778	0					
ANR	773208	Identifier	fmt		772778	0					
ANR	773209	Argument	precision		772778	1					
ANR	773210	Identifier	precision		772778	0					
ANR	773211	ElseStatement	else		772778	0					
ANR	773212	IfStatement	if ( * fmt == '*' )		772778	0					
ANR	773213	Condition	* fmt == '*'	846:29:23943:23953	772778	0	True				
ANR	773214	EqualityExpression	* fmt == '*'		772778	0		==			
ANR	773215	UnaryOperationExpression	* fmt		772778	0					
ANR	773216	UnaryOperator	*		772778	0					
ANR	773217	Identifier	fmt		772778	1					
ANR	773218	PrimaryExpression	'*'		772778	1					
ANR	773219	CompoundStatement		117:24:3210:3233	772778	1					
ANR	773220	IdentifierDeclStatement	"int v = va_arg ( ap , int ) ;"	847:24:23982:24005	772778	0	True				
ANR	773221	IdentifierDecl	"v = va_arg ( ap , int )"		772778	0					
ANR	773222	IdentifierDeclType	int		772778	0					
ANR	773223	Identifier	v		772778	1					
ANR	773224	AssignmentExpression	"v = va_arg ( ap , int )"		772778	2		=			
ANR	773225	Identifier	v		772778	0					
ANR	773226	CallExpression	"va_arg ( ap , int )"		772778	1					
ANR	773227	Callee	va_arg		772778	0					
ANR	773228	Identifier	va_arg		772778	0					
ANR	773229	ArgumentList	ap		772778	1					
ANR	773230	Argument	ap		772778	0					
ANR	773231	Identifier	ap		772778	0					
ANR	773232	Argument	int		772778	1					
ANR	773233	Identifier	int		772778	0					
ANR	773234	ExpressionStatement	fmt ++	848:24:24031:24036	772778	1	True				
ANR	773235	PostIncDecOperationExpression	fmt ++		772778	0					
ANR	773236	Identifier	fmt		772778	0					
ANR	773237	IncDec	++		772778	1					
ANR	773238	ExpressionStatement	precision = ( v < 0 ) ? 0 : ( apr_size_t ) v	849:24:24062:24101	772778	2	True				
ANR	773239	AssignmentExpression	precision = ( v < 0 ) ? 0 : ( apr_size_t ) v		772778	0		=			
ANR	773240	Identifier	precision		772778	0					
ANR	773241	ConditionalExpression	( v < 0 ) ? 0 : ( apr_size_t ) v		772778	1					
ANR	773242	Condition	v < 0		772778	0					
ANR	773243	RelationalExpression	v < 0		772778	0		<			
ANR	773244	Identifier	v		772778	0					
ANR	773245	PrimaryExpression	0		772778	1					
ANR	773246	PrimaryExpression	0		772778	1					
ANR	773247	CastExpression	( apr_size_t ) v		772778	2					
ANR	773248	CastTarget	apr_size_t		772778	0					
ANR	773249	Identifier	v		772778	1					
ANR	773250	ElseStatement	else		772778	0					
ANR	773251	ExpressionStatement	precision = 0	852:24:24174:24187	772778	0	True				
ANR	773252	AssignmentExpression	precision = 0		772778	0		=			
ANR	773253	Identifier	precision		772778	0					
ANR	773254	PrimaryExpression	0		772778	1					
ANR	773255	ElseStatement	else		772778	0					
ANR	773256	ExpressionStatement	adjust_precision = NO	855:20:24248:24269	772778	0	True				
ANR	773257	AssignmentExpression	adjust_precision = NO		772778	0		=			
ANR	773258	Identifier	adjust_precision		772778	0					
ANR	773259	Identifier	NO		772778	1					
ANR	773260	ElseStatement	else		772778	0					
ANR	773261	ExpressionStatement	adjust_precision = adjust_width = NO	858:16:24318:24354	772778	0	True				
ANR	773262	AssignmentExpression	adjust_precision = adjust_width = NO		772778	0		=			
ANR	773263	Identifier	adjust_precision		772778	0					
ANR	773264	AssignmentExpression	adjust_width = NO		772778	1		=			
ANR	773265	Identifier	adjust_width		772778	0					
ANR	773266	Identifier	NO		772778	1					
ANR	773267	IfStatement	"if ( ( sizeof ( APR_OFF_T_FMT ) > sizeof ( APR_INT64_T_FMT ) ) && ( ( sizeof ( APR_OFF_T_FMT ) == 4 && fmt [ 0 ] == APR_OFF_T_FMT [ 0 ] && fmt [ 1 ] == APR_OFF_T_FMT [ 1 ] ) || ( sizeof ( APR_OFF_T_FMT ) == 3 && fmt [ 0 ] == APR_OFF_T_FMT [ 0 ] ) || ( sizeof ( APR_OFF_T_FMT ) > 4 && strncmp ( fmt , APR_OFF_T_FMT , sizeof ( APR_OFF_T_FMT ) - 2 ) == 0 ) ) )"		772778	7					
ANR	773268	Condition	"( sizeof ( APR_OFF_T_FMT ) > sizeof ( APR_INT64_T_FMT ) ) && ( ( sizeof ( APR_OFF_T_FMT ) == 4 && fmt [ 0 ] == APR_OFF_T_FMT [ 0 ] && fmt [ 1 ] == APR_OFF_T_FMT [ 1 ] ) || ( sizeof ( APR_OFF_T_FMT ) == 3 && fmt [ 0 ] == APR_OFF_T_FMT [ 0 ] ) || ( sizeof ( APR_OFF_T_FMT ) > 4 && strncmp ( fmt , APR_OFF_T_FMT , sizeof ( APR_OFF_T_FMT ) - 2 ) == 0 ) )"	868:16:24790:25229	772778	0	True				
ANR	773269	AndExpression	"( sizeof ( APR_OFF_T_FMT ) > sizeof ( APR_INT64_T_FMT ) ) && ( ( sizeof ( APR_OFF_T_FMT ) == 4 && fmt [ 0 ] == APR_OFF_T_FMT [ 0 ] && fmt [ 1 ] == APR_OFF_T_FMT [ 1 ] ) || ( sizeof ( APR_OFF_T_FMT ) == 3 && fmt [ 0 ] == APR_OFF_T_FMT [ 0 ] ) || ( sizeof ( APR_OFF_T_FMT ) > 4 && strncmp ( fmt , APR_OFF_T_FMT , sizeof ( APR_OFF_T_FMT ) - 2 ) == 0 ) )"		772778	0		&&			
ANR	773270	RelationalExpression	sizeof ( APR_OFF_T_FMT ) > sizeof ( APR_INT64_T_FMT )		772778	0		>			
ANR	773271	SizeofExpression	sizeof ( APR_OFF_T_FMT )		772778	0					
ANR	773272	Sizeof	sizeof		772778	0					
ANR	773273	SizeofOperand	APR_OFF_T_FMT		772778	1					
ANR	773274	SizeofExpression	sizeof ( APR_INT64_T_FMT )		772778	1					
ANR	773275	Sizeof	sizeof		772778	0					
ANR	773276	SizeofOperand	APR_INT64_T_FMT		772778	1					
ANR	773277	OrExpression	"( sizeof ( APR_OFF_T_FMT ) == 4 && fmt [ 0 ] == APR_OFF_T_FMT [ 0 ] && fmt [ 1 ] == APR_OFF_T_FMT [ 1 ] ) || ( sizeof ( APR_OFF_T_FMT ) == 3 && fmt [ 0 ] == APR_OFF_T_FMT [ 0 ] ) || ( sizeof ( APR_OFF_T_FMT ) > 4 && strncmp ( fmt , APR_OFF_T_FMT , sizeof ( APR_OFF_T_FMT ) - 2 ) == 0 )"		772778	1		||			
ANR	773278	AndExpression	sizeof ( APR_OFF_T_FMT ) == 4 && fmt [ 0 ] == APR_OFF_T_FMT [ 0 ] && fmt [ 1 ] == APR_OFF_T_FMT [ 1 ]		772778	0		&&			
ANR	773279	EqualityExpression	sizeof ( APR_OFF_T_FMT ) == 4		772778	0		==			
ANR	773280	SizeofExpression	sizeof ( APR_OFF_T_FMT )		772778	0					
ANR	773281	Sizeof	sizeof		772778	0					
ANR	773282	SizeofOperand	APR_OFF_T_FMT		772778	1					
ANR	773283	PrimaryExpression	4		772778	1					
ANR	773284	AndExpression	fmt [ 0 ] == APR_OFF_T_FMT [ 0 ] && fmt [ 1 ] == APR_OFF_T_FMT [ 1 ]		772778	1		&&			
ANR	773285	EqualityExpression	fmt [ 0 ] == APR_OFF_T_FMT [ 0 ]		772778	0		==			
ANR	773286	ArrayIndexing	fmt [ 0 ]		772778	0					
ANR	773287	Identifier	fmt		772778	0					
ANR	773288	PrimaryExpression	0		772778	1					
ANR	773289	ArrayIndexing	APR_OFF_T_FMT [ 0 ]		772778	1					
ANR	773290	Identifier	APR_OFF_T_FMT		772778	0					
ANR	773291	PrimaryExpression	0		772778	1					
ANR	773292	EqualityExpression	fmt [ 1 ] == APR_OFF_T_FMT [ 1 ]		772778	1		==			
ANR	773293	ArrayIndexing	fmt [ 1 ]		772778	0					
ANR	773294	Identifier	fmt		772778	0					
ANR	773295	PrimaryExpression	1		772778	1					
ANR	773296	ArrayIndexing	APR_OFF_T_FMT [ 1 ]		772778	1					
ANR	773297	Identifier	APR_OFF_T_FMT		772778	0					
ANR	773298	PrimaryExpression	1		772778	1					
ANR	773299	OrExpression	"( sizeof ( APR_OFF_T_FMT ) == 3 && fmt [ 0 ] == APR_OFF_T_FMT [ 0 ] ) || ( sizeof ( APR_OFF_T_FMT ) > 4 && strncmp ( fmt , APR_OFF_T_FMT , sizeof ( APR_OFF_T_FMT ) - 2 ) == 0 )"		772778	1		||			
ANR	773300	AndExpression	sizeof ( APR_OFF_T_FMT ) == 3 && fmt [ 0 ] == APR_OFF_T_FMT [ 0 ]		772778	0		&&			
ANR	773301	EqualityExpression	sizeof ( APR_OFF_T_FMT ) == 3		772778	0		==			
ANR	773302	SizeofExpression	sizeof ( APR_OFF_T_FMT )		772778	0					
ANR	773303	Sizeof	sizeof		772778	0					
ANR	773304	SizeofOperand	APR_OFF_T_FMT		772778	1					
ANR	773305	PrimaryExpression	3		772778	1					
ANR	773306	EqualityExpression	fmt [ 0 ] == APR_OFF_T_FMT [ 0 ]		772778	1		==			
ANR	773307	ArrayIndexing	fmt [ 0 ]		772778	0					
ANR	773308	Identifier	fmt		772778	0					
ANR	773309	PrimaryExpression	0		772778	1					
ANR	773310	ArrayIndexing	APR_OFF_T_FMT [ 0 ]		772778	1					
ANR	773311	Identifier	APR_OFF_T_FMT		772778	0					
ANR	773312	PrimaryExpression	0		772778	1					
ANR	773313	AndExpression	"sizeof ( APR_OFF_T_FMT ) > 4 && strncmp ( fmt , APR_OFF_T_FMT , sizeof ( APR_OFF_T_FMT ) - 2 ) == 0"		772778	1		&&			
ANR	773314	RelationalExpression	sizeof ( APR_OFF_T_FMT ) > 4		772778	0		>			
ANR	773315	SizeofExpression	sizeof ( APR_OFF_T_FMT )		772778	0					
ANR	773316	Sizeof	sizeof		772778	0					
ANR	773317	SizeofOperand	APR_OFF_T_FMT		772778	1					
ANR	773318	PrimaryExpression	4		772778	1					
ANR	773319	EqualityExpression	"strncmp ( fmt , APR_OFF_T_FMT , sizeof ( APR_OFF_T_FMT ) - 2 ) == 0"		772778	1		==			
ANR	773320	CallExpression	"strncmp ( fmt , APR_OFF_T_FMT , sizeof ( APR_OFF_T_FMT ) - 2 )"		772778	0					
ANR	773321	Callee	strncmp		772778	0					
ANR	773322	Identifier	strncmp		772778	0					
ANR	773323	ArgumentList	fmt		772778	1					
ANR	773324	Argument	fmt		772778	0					
ANR	773325	Identifier	fmt		772778	0					
ANR	773326	Argument	APR_OFF_T_FMT		772778	1					
ANR	773327	Identifier	APR_OFF_T_FMT		772778	0					
ANR	773328	Argument	sizeof ( APR_OFF_T_FMT ) - 2		772778	2					
ANR	773329	AdditiveExpression	sizeof ( APR_OFF_T_FMT ) - 2		772778	0		-			
ANR	773330	SizeofExpression	sizeof ( APR_OFF_T_FMT )		772778	0					
ANR	773331	Sizeof	sizeof		772778	0					
ANR	773332	SizeofOperand	APR_OFF_T_FMT		772778	1					
ANR	773333	PrimaryExpression	2		772778	1					
ANR	773334	PrimaryExpression	0		772778	1					
ANR	773335	CompoundStatement		146:60:4460:4460	772778	1					
ANR	773336	ExpressionStatement	var_type = IS_QUAD	878:16:25326:25344	772778	0	True				
ANR	773337	AssignmentExpression	var_type = IS_QUAD		772778	0		=			
ANR	773338	Identifier	var_type		772778	0					
ANR	773339	Identifier	IS_QUAD		772778	1					
ANR	773340	ExpressionStatement	fmt += ( sizeof ( APR_OFF_T_FMT ) - 2 )	879:16:25362:25396	772778	1	True				
ANR	773341	AssignmentExpression	fmt += ( sizeof ( APR_OFF_T_FMT ) - 2 )		772778	0		+=			
ANR	773342	Identifier	fmt		772778	0					
ANR	773343	AdditiveExpression	sizeof ( APR_OFF_T_FMT ) - 2		772778	1		-			
ANR	773344	SizeofExpression	sizeof ( APR_OFF_T_FMT )		772778	0					
ANR	773345	Sizeof	sizeof		772778	0					
ANR	773346	SizeofOperand	APR_OFF_T_FMT		772778	1					
ANR	773347	PrimaryExpression	2		772778	1					
ANR	773348	ElseStatement	else		772778	0					
ANR	773349	IfStatement	"if ( ( sizeof ( APR_INT64_T_FMT ) == 4 && fmt [ 0 ] == APR_INT64_T_FMT [ 0 ] && fmt [ 1 ] == APR_INT64_T_FMT [ 1 ] ) || ( sizeof ( APR_INT64_T_FMT ) == 3 && fmt [ 0 ] == APR_INT64_T_FMT [ 0 ] ) || ( sizeof ( APR_INT64_T_FMT ) > 4 && strncmp ( fmt , APR_INT64_T_FMT , sizeof ( APR_INT64_T_FMT ) - 2 ) == 0 ) )"		772778	0					
ANR	773350	Condition	"( sizeof ( APR_INT64_T_FMT ) == 4 && fmt [ 0 ] == APR_INT64_T_FMT [ 0 ] && fmt [ 1 ] == APR_INT64_T_FMT [ 1 ] ) || ( sizeof ( APR_INT64_T_FMT ) == 3 && fmt [ 0 ] == APR_INT64_T_FMT [ 0 ] ) || ( sizeof ( APR_INT64_T_FMT ) > 4 && strncmp ( fmt , APR_INT64_T_FMT , sizeof ( APR_INT64_T_FMT ) - 2 ) == 0 )"	881:21:25433:25818	772778	0	True				
ANR	773351	OrExpression	"( sizeof ( APR_INT64_T_FMT ) == 4 && fmt [ 0 ] == APR_INT64_T_FMT [ 0 ] && fmt [ 1 ] == APR_INT64_T_FMT [ 1 ] ) || ( sizeof ( APR_INT64_T_FMT ) == 3 && fmt [ 0 ] == APR_INT64_T_FMT [ 0 ] ) || ( sizeof ( APR_INT64_T_FMT ) > 4 && strncmp ( fmt , APR_INT64_T_FMT , sizeof ( APR_INT64_T_FMT ) - 2 ) == 0 )"		772778	0		||			
ANR	773352	AndExpression	sizeof ( APR_INT64_T_FMT ) == 4 && fmt [ 0 ] == APR_INT64_T_FMT [ 0 ] && fmt [ 1 ] == APR_INT64_T_FMT [ 1 ]		772778	0		&&			
ANR	773353	EqualityExpression	sizeof ( APR_INT64_T_FMT ) == 4		772778	0		==			
ANR	773354	SizeofExpression	sizeof ( APR_INT64_T_FMT )		772778	0					
ANR	773355	Sizeof	sizeof		772778	0					
ANR	773356	SizeofOperand	APR_INT64_T_FMT		772778	1					
ANR	773357	PrimaryExpression	4		772778	1					
ANR	773358	AndExpression	fmt [ 0 ] == APR_INT64_T_FMT [ 0 ] && fmt [ 1 ] == APR_INT64_T_FMT [ 1 ]		772778	1		&&			
ANR	773359	EqualityExpression	fmt [ 0 ] == APR_INT64_T_FMT [ 0 ]		772778	0		==			
ANR	773360	ArrayIndexing	fmt [ 0 ]		772778	0					
ANR	773361	Identifier	fmt		772778	0					
ANR	773362	PrimaryExpression	0		772778	1					
ANR	773363	ArrayIndexing	APR_INT64_T_FMT [ 0 ]		772778	1					
ANR	773364	Identifier	APR_INT64_T_FMT		772778	0					
ANR	773365	PrimaryExpression	0		772778	1					
ANR	773366	EqualityExpression	fmt [ 1 ] == APR_INT64_T_FMT [ 1 ]		772778	1		==			
ANR	773367	ArrayIndexing	fmt [ 1 ]		772778	0					
ANR	773368	Identifier	fmt		772778	0					
ANR	773369	PrimaryExpression	1		772778	1					
ANR	773370	ArrayIndexing	APR_INT64_T_FMT [ 1 ]		772778	1					
ANR	773371	Identifier	APR_INT64_T_FMT		772778	0					
ANR	773372	PrimaryExpression	1		772778	1					
ANR	773373	OrExpression	"( sizeof ( APR_INT64_T_FMT ) == 3 && fmt [ 0 ] == APR_INT64_T_FMT [ 0 ] ) || ( sizeof ( APR_INT64_T_FMT ) > 4 && strncmp ( fmt , APR_INT64_T_FMT , sizeof ( APR_INT64_T_FMT ) - 2 ) == 0 )"		772778	1		||			
ANR	773374	AndExpression	sizeof ( APR_INT64_T_FMT ) == 3 && fmt [ 0 ] == APR_INT64_T_FMT [ 0 ]		772778	0		&&			
ANR	773375	EqualityExpression	sizeof ( APR_INT64_T_FMT ) == 3		772778	0		==			
ANR	773376	SizeofExpression	sizeof ( APR_INT64_T_FMT )		772778	0					
ANR	773377	Sizeof	sizeof		772778	0					
ANR	773378	SizeofOperand	APR_INT64_T_FMT		772778	1					
ANR	773379	PrimaryExpression	3		772778	1					
ANR	773380	EqualityExpression	fmt [ 0 ] == APR_INT64_T_FMT [ 0 ]		772778	1		==			
ANR	773381	ArrayIndexing	fmt [ 0 ]		772778	0					
ANR	773382	Identifier	fmt		772778	0					
ANR	773383	PrimaryExpression	0		772778	1					
ANR	773384	ArrayIndexing	APR_INT64_T_FMT [ 0 ]		772778	1					
ANR	773385	Identifier	APR_INT64_T_FMT		772778	0					
ANR	773386	PrimaryExpression	0		772778	1					
ANR	773387	AndExpression	"sizeof ( APR_INT64_T_FMT ) > 4 && strncmp ( fmt , APR_INT64_T_FMT , sizeof ( APR_INT64_T_FMT ) - 2 ) == 0"		772778	1		&&			
ANR	773388	RelationalExpression	sizeof ( APR_INT64_T_FMT ) > 4		772778	0		>			
ANR	773389	SizeofExpression	sizeof ( APR_INT64_T_FMT )		772778	0					
ANR	773390	Sizeof	sizeof		772778	0					
ANR	773391	SizeofOperand	APR_INT64_T_FMT		772778	1					
ANR	773392	PrimaryExpression	4		772778	1					
ANR	773393	EqualityExpression	"strncmp ( fmt , APR_INT64_T_FMT , sizeof ( APR_INT64_T_FMT ) - 2 ) == 0"		772778	1		==			
ANR	773394	CallExpression	"strncmp ( fmt , APR_INT64_T_FMT , sizeof ( APR_INT64_T_FMT ) - 2 )"		772778	0					
ANR	773395	Callee	strncmp		772778	0					
ANR	773396	Identifier	strncmp		772778	0					
ANR	773397	ArgumentList	fmt		772778	1					
ANR	773398	Argument	fmt		772778	0					
ANR	773399	Identifier	fmt		772778	0					
ANR	773400	Argument	APR_INT64_T_FMT		772778	1					
ANR	773401	Identifier	APR_INT64_T_FMT		772778	0					
ANR	773402	Argument	sizeof ( APR_INT64_T_FMT ) - 2		772778	2					
ANR	773403	AdditiveExpression	sizeof ( APR_INT64_T_FMT ) - 2		772778	0		-			
ANR	773404	SizeofExpression	sizeof ( APR_INT64_T_FMT )		772778	0					
ANR	773405	Sizeof	sizeof		772778	0					
ANR	773406	SizeofOperand	APR_INT64_T_FMT		772778	1					
ANR	773407	PrimaryExpression	2		772778	1					
ANR	773408	PrimaryExpression	0		772778	1					
ANR	773409	CompoundStatement		158:61:5049:5049	772778	1					
ANR	773410	ExpressionStatement	var_type = IS_QUAD	890:16:25915:25933	772778	0	True				
ANR	773411	AssignmentExpression	var_type = IS_QUAD		772778	0		=			
ANR	773412	Identifier	var_type		772778	0					
ANR	773413	Identifier	IS_QUAD		772778	1					
ANR	773414	ExpressionStatement	fmt += ( sizeof ( APR_INT64_T_FMT ) - 2 )	891:16:25951:25987	772778	1	True				
ANR	773415	AssignmentExpression	fmt += ( sizeof ( APR_INT64_T_FMT ) - 2 )		772778	0		+=			
ANR	773416	Identifier	fmt		772778	0					
ANR	773417	AdditiveExpression	sizeof ( APR_INT64_T_FMT ) - 2		772778	1		-			
ANR	773418	SizeofExpression	sizeof ( APR_INT64_T_FMT )		772778	0					
ANR	773419	Sizeof	sizeof		772778	0					
ANR	773420	SizeofOperand	APR_INT64_T_FMT		772778	1					
ANR	773421	PrimaryExpression	2		772778	1					
ANR	773422	ElseStatement	else		772778	0					
ANR	773423	IfStatement	if ( * fmt == 'q' )		772778	0					
ANR	773424	Condition	* fmt == 'q'	893:21:26024:26034	772778	0	True				
ANR	773425	EqualityExpression	* fmt == 'q'		772778	0		==			
ANR	773426	UnaryOperationExpression	* fmt		772778	0					
ANR	773427	UnaryOperator	*		772778	0					
ANR	773428	Identifier	fmt		772778	1					
ANR	773429	PrimaryExpression	'q'		772778	1					
ANR	773430	CompoundStatement		163:34:5265:5265	772778	1					
ANR	773431	ExpressionStatement	var_type = IS_QUAD	894:16:26055:26073	772778	0	True				
ANR	773432	AssignmentExpression	var_type = IS_QUAD		772778	0		=			
ANR	773433	Identifier	var_type		772778	0					
ANR	773434	Identifier	IS_QUAD		772778	1					
ANR	773435	ExpressionStatement	fmt ++	895:16:26091:26096	772778	1	True				
ANR	773436	PostIncDecOperationExpression	fmt ++		772778	0					
ANR	773437	Identifier	fmt		772778	0					
ANR	773438	IncDec	++		772778	1					
ANR	773439	ElseStatement	else		772778	0					
ANR	773440	IfStatement	if ( * fmt == 'l' )		772778	0					
ANR	773441	Condition	* fmt == 'l'	897:21:26133:26143	772778	0	True				
ANR	773442	EqualityExpression	* fmt == 'l'		772778	0		==			
ANR	773443	UnaryOperationExpression	* fmt		772778	0					
ANR	773444	UnaryOperator	*		772778	0					
ANR	773445	Identifier	fmt		772778	1					
ANR	773446	PrimaryExpression	'l'		772778	1					
ANR	773447	CompoundStatement		167:34:5374:5374	772778	1					
ANR	773448	ExpressionStatement	var_type = IS_LONG	898:16:26164:26182	772778	0	True				
ANR	773449	AssignmentExpression	var_type = IS_LONG		772778	0		=			
ANR	773450	Identifier	var_type		772778	0					
ANR	773451	Identifier	IS_LONG		772778	1					
ANR	773452	ExpressionStatement	fmt ++	899:16:26200:26205	772778	1	True				
ANR	773453	PostIncDecOperationExpression	fmt ++		772778	0					
ANR	773454	Identifier	fmt		772778	0					
ANR	773455	IncDec	++		772778	1					
ANR	773456	ElseStatement	else		772778	0					
ANR	773457	IfStatement	if ( * fmt == 'h' )		772778	0					
ANR	773458	Condition	* fmt == 'h'	901:21:26242:26252	772778	0	True				
ANR	773459	EqualityExpression	* fmt == 'h'		772778	0		==			
ANR	773460	UnaryOperationExpression	* fmt		772778	0					
ANR	773461	UnaryOperator	*		772778	0					
ANR	773462	Identifier	fmt		772778	1					
ANR	773463	PrimaryExpression	'h'		772778	1					
ANR	773464	CompoundStatement		171:34:5483:5483	772778	1					
ANR	773465	ExpressionStatement	var_type = IS_SHORT	902:16:26273:26292	772778	0	True				
ANR	773466	AssignmentExpression	var_type = IS_SHORT		772778	0		=			
ANR	773467	Identifier	var_type		772778	0					
ANR	773468	Identifier	IS_SHORT		772778	1					
ANR	773469	ExpressionStatement	fmt ++	903:16:26310:26315	772778	1	True				
ANR	773470	PostIncDecOperationExpression	fmt ++		772778	0					
ANR	773471	Identifier	fmt		772778	0					
ANR	773472	IncDec	++		772778	1					
ANR	773473	ElseStatement	else		772778	0					
ANR	773474	CompoundStatement		175:17:5576:5576	772778	0					
ANR	773475	ExpressionStatement	var_type = IS_INT	906:16:26366:26383	772778	0	True				
ANR	773476	AssignmentExpression	var_type = IS_INT		772778	0		=			
ANR	773477	Identifier	var_type		772778	0					
ANR	773478	Identifier	IS_INT		772778	1					
ANR	773479	SwitchStatement	switch ( * fmt )		772778	8					
ANR	773480	Condition	* fmt	920:20:26966:26969	772778	0	True				
ANR	773481	UnaryOperationExpression	* fmt		772778	0					
ANR	773482	UnaryOperator	*		772778	0					
ANR	773483	Identifier	fmt		772778	1					
ANR	773484	CompoundStatement		190:26:6200:6200	772778	1					
ANR	773485	Label	case 'u' :	921:12:26986:26994	772778	0	True				
ANR	773486	IfStatement	if ( var_type == IS_QUAD )		772778	1					
ANR	773487	Condition	var_type == IS_QUAD	922:20:27016:27034	772778	0	True				
ANR	773488	EqualityExpression	var_type == IS_QUAD		772778	0		==			
ANR	773489	Identifier	var_type		772778	0					
ANR	773490	Identifier	IS_QUAD		772778	1					
ANR	773491	CompoundStatement		192:41:6265:6265	772778	1					
ANR	773492	ExpressionStatement	"i_quad = va_arg ( ap , apr_uint64_t )"	923:20:27059:27092	772778	0	True				
ANR	773493	AssignmentExpression	"i_quad = va_arg ( ap , apr_uint64_t )"		772778	0		=			
ANR	773494	Identifier	i_quad		772778	0					
ANR	773495	CallExpression	"va_arg ( ap , apr_uint64_t )"		772778	1					
ANR	773496	Callee	va_arg		772778	0					
ANR	773497	Identifier	va_arg		772778	0					
ANR	773498	ArgumentList	ap		772778	1					
ANR	773499	Argument	ap		772778	0					
ANR	773500	Identifier	ap		772778	0					
ANR	773501	Argument	apr_uint64_t		772778	1					
ANR	773502	Identifier	apr_uint64_t		772778	0					
ANR	773503	ExpressionStatement	"s = conv_10_quad ( i_quad , 1 , & is_negative , & num_buf [ NUM_BUF_SIZE ] , & s_len )"	924:20:27114:27215	772778	1	True				
ANR	773504	AssignmentExpression	"s = conv_10_quad ( i_quad , 1 , & is_negative , & num_buf [ NUM_BUF_SIZE ] , & s_len )"		772778	0		=			
ANR	773505	Identifier	s		772778	0					
ANR	773506	CallExpression	"conv_10_quad ( i_quad , 1 , & is_negative , & num_buf [ NUM_BUF_SIZE ] , & s_len )"		772778	1					
ANR	773507	Callee	conv_10_quad		772778	0					
ANR	773508	Identifier	conv_10_quad		772778	0					
ANR	773509	ArgumentList	i_quad		772778	1					
ANR	773510	Argument	i_quad		772778	0					
ANR	773511	Identifier	i_quad		772778	0					
ANR	773512	Argument	1		772778	1					
ANR	773513	PrimaryExpression	1		772778	0					
ANR	773514	Argument	& is_negative		772778	2					
ANR	773515	UnaryOperationExpression	& is_negative		772778	0					
ANR	773516	UnaryOperator	&		772778	0					
ANR	773517	Identifier	is_negative		772778	1					
ANR	773518	Argument	& num_buf [ NUM_BUF_SIZE ]		772778	3					
ANR	773519	UnaryOperationExpression	& num_buf [ NUM_BUF_SIZE ]		772778	0					
ANR	773520	UnaryOperator	&		772778	0					
ANR	773521	ArrayIndexing	num_buf [ NUM_BUF_SIZE ]		772778	1					
ANR	773522	Identifier	num_buf		772778	0					
ANR	773523	Identifier	NUM_BUF_SIZE		772778	1					
ANR	773524	Argument	& s_len		772778	4					
ANR	773525	UnaryOperationExpression	& s_len		772778	0					
ANR	773526	UnaryOperator	&		772778	0					
ANR	773527	Identifier	s_len		772778	1					
ANR	773528	ElseStatement	else		772778	0					
ANR	773529	CompoundStatement		197:21:6484:6484	772778	0					
ANR	773530	IfStatement	if ( var_type == IS_LONG )		772778	0					
ANR	773531	Condition	var_type == IS_LONG	928:24:27282:27300	772778	0	True				
ANR	773532	EqualityExpression	var_type == IS_LONG		772778	0		==			
ANR	773533	Identifier	var_type		772778	0					
ANR	773534	Identifier	IS_LONG		772778	1					
ANR	773535	ExpressionStatement	"i_num = ( apr_int32_t ) va_arg ( ap , apr_uint32_t )"	929:24:27327:27373	772778	1	True				
ANR	773536	AssignmentExpression	"i_num = ( apr_int32_t ) va_arg ( ap , apr_uint32_t )"		772778	0		=			
ANR	773537	Identifier	i_num		772778	0					
ANR	773538	CastExpression	"( apr_int32_t ) va_arg ( ap , apr_uint32_t )"		772778	1					
ANR	773539	CastTarget	apr_int32_t		772778	0					
ANR	773540	CallExpression	"va_arg ( ap , apr_uint32_t )"		772778	1					
ANR	773541	Callee	va_arg		772778	0					
ANR	773542	Identifier	va_arg		772778	0					
ANR	773543	ArgumentList	ap		772778	1					
ANR	773544	Argument	ap		772778	0					
ANR	773545	Identifier	ap		772778	0					
ANR	773546	Argument	apr_uint32_t		772778	1					
ANR	773547	Identifier	apr_uint32_t		772778	0					
ANR	773548	ElseStatement	else		772778	0					
ANR	773549	IfStatement	if ( var_type == IS_SHORT )		772778	0					
ANR	773550	Condition	var_type == IS_SHORT	930:29:27404:27423	772778	0	True				
ANR	773551	EqualityExpression	var_type == IS_SHORT		772778	0		==			
ANR	773552	Identifier	var_type		772778	0					
ANR	773553	Identifier	IS_SHORT		772778	1					
ANR	773554	Statement	i_num	931:24:27450:27454	772778	1	True				
ANR	773555	ElseStatement	else		772778	0					
ANR	773556	Statement	i_num	933:24:27564:27568	772778	0	True				
ANR	773557	Statement	=	931:30:27456:27456	772778	1	True				
ANR	773558	Statement	(	931:32:27458:27458	772778	2	True				
ANR	773559	Statement	apr_int32_t	931:33:27459:27469	772778	3	True				
ANR	773560	Statement	)	931:44:27470:27470	772778	4	True				
ANR	773561	Statement	(	931:46:27472:27472	772778	5	True				
ANR	773562	Statement	unsigned	931:47:27473:27480	772778	6	True				
ANR	773563	Statement	short	931:56:27482:27486	772778	7	True				
ANR	773564	Statement	)	931:61:27487:27487	772778	8	True				
ANR	773565	Statement	va_arg	931:63:27489:27494	772778	9	True				
ANR	773566	Statement	(	931:69:27495:27495	772778	10	True				
ANR	773567	Statement	ap	931:70:27496:27497	772778	11	True				
ANR	773568	Statement	","	931:72:27498:27498	772778	12	True				
ANR	773569	Statement	unsigned	931:74:27500:27507	772778	13	True				
ANR	773570	Statement	int	931:83:27509:27511	772778	14	True				
ANR	773571	Statement	)	931:86:27512:27512	772778	15	True				
ANR	773572	ExpressionStatement		931:87:27513:27513	772778	16	True				
ANR	773573	Statement	=	933:30:27570:27570	772778	17	True				
ANR	773574	Statement	(	933:32:27572:27572	772778	18	True				
ANR	773575	Statement	apr_int32_t	933:33:27573:27583	772778	19	True				
ANR	773576	Statement	)	933:44:27584:27584	772778	20	True				
ANR	773577	Statement	va_arg	933:46:27586:27591	772778	21	True				
ANR	773578	Statement	(	933:52:27592:27592	772778	22	True				
ANR	773579	Statement	ap	933:53:27593:27594	772778	23	True				
ANR	773580	Statement	","	933:55:27595:27595	772778	24	True				
ANR	773581	Statement	unsigned	933:57:27597:27604	772778	25	True				
ANR	773582	Statement	int	933:66:27606:27608	772778	26	True				
ANR	773583	Statement	)	933:69:27609:27609	772778	27	True				
ANR	773584	ExpressionStatement		933:70:27610:27610	772778	28	True				
ANR	773585	ExpressionStatement	"s = conv_10 ( i_num , 1 , & is_negative , & num_buf [ NUM_BUF_SIZE ] , & s_len )"	934:20:27632:27727	772778	29	True				
ANR	773586	AssignmentExpression	"s = conv_10 ( i_num , 1 , & is_negative , & num_buf [ NUM_BUF_SIZE ] , & s_len )"		772778	0		=			
ANR	773587	Identifier	s		772778	0					
ANR	773588	CallExpression	"conv_10 ( i_num , 1 , & is_negative , & num_buf [ NUM_BUF_SIZE ] , & s_len )"		772778	1					
ANR	773589	Callee	conv_10		772778	0					
ANR	773590	Identifier	conv_10		772778	0					
ANR	773591	ArgumentList	i_num		772778	1					
ANR	773592	Argument	i_num		772778	0					
ANR	773593	Identifier	i_num		772778	0					
ANR	773594	Argument	1		772778	1					
ANR	773595	PrimaryExpression	1		772778	0					
ANR	773596	Argument	& is_negative		772778	2					
ANR	773597	UnaryOperationExpression	& is_negative		772778	0					
ANR	773598	UnaryOperator	&		772778	0					
ANR	773599	Identifier	is_negative		772778	1					
ANR	773600	Argument	& num_buf [ NUM_BUF_SIZE ]		772778	3					
ANR	773601	UnaryOperationExpression	& num_buf [ NUM_BUF_SIZE ]		772778	0					
ANR	773602	UnaryOperator	&		772778	0					
ANR	773603	ArrayIndexing	num_buf [ NUM_BUF_SIZE ]		772778	1					
ANR	773604	Identifier	num_buf		772778	0					
ANR	773605	Identifier	NUM_BUF_SIZE		772778	1					
ANR	773606	Argument	& s_len		772778	4					
ANR	773607	UnaryOperationExpression	& s_len		772778	0					
ANR	773608	UnaryOperator	&		772778	0					
ANR	773609	Identifier	s_len		772778	1					
ANR	773610	ExpressionStatement	"FIX_PRECISION ( adjust_precision , precision , s , s_len )"	937:16:27763:27815	772778	2	True				
ANR	773611	CallExpression	"FIX_PRECISION ( adjust_precision , precision , s , s_len )"		772778	0					
ANR	773612	Callee	FIX_PRECISION		772778	0					
ANR	773613	Identifier	FIX_PRECISION		772778	0					
ANR	773614	ArgumentList	adjust_precision		772778	1					
ANR	773615	Argument	adjust_precision		772778	0					
ANR	773616	Identifier	adjust_precision		772778	0					
ANR	773617	Argument	precision		772778	1					
ANR	773618	Identifier	precision		772778	0					
ANR	773619	Argument	s		772778	2					
ANR	773620	Identifier	s		772778	0					
ANR	773621	Argument	s_len		772778	3					
ANR	773622	Identifier	s_len		772778	0					
ANR	773623	BreakStatement	break ;	938:16:27833:27838	772778	3	True				
ANR	773624	Label	case 'd' :	940:12:27853:27861	772778	4	True				
ANR	773625	Label	case 'i' :	941:12:27875:27883	772778	5	True				
ANR	773626	IfStatement	if ( var_type == IS_QUAD )		772778	6					
ANR	773627	Condition	var_type == IS_QUAD	942:20:27905:27923	772778	0	True				
ANR	773628	EqualityExpression	var_type == IS_QUAD		772778	0		==			
ANR	773629	Identifier	var_type		772778	0					
ANR	773630	Identifier	IS_QUAD		772778	1					
ANR	773631	CompoundStatement		212:41:7154:7154	772778	1					
ANR	773632	ExpressionStatement	"i_quad = va_arg ( ap , apr_int64_t )"	943:20:27948:27980	772778	0	True				
ANR	773633	AssignmentExpression	"i_quad = va_arg ( ap , apr_int64_t )"		772778	0		=			
ANR	773634	Identifier	i_quad		772778	0					
ANR	773635	CallExpression	"va_arg ( ap , apr_int64_t )"		772778	1					
ANR	773636	Callee	va_arg		772778	0					
ANR	773637	Identifier	va_arg		772778	0					
ANR	773638	ArgumentList	ap		772778	1					
ANR	773639	Argument	ap		772778	0					
ANR	773640	Identifier	ap		772778	0					
ANR	773641	Argument	apr_int64_t		772778	1					
ANR	773642	Identifier	apr_int64_t		772778	0					
ANR	773643	ExpressionStatement	"s = conv_10_quad ( i_quad , 0 , & is_negative , & num_buf [ NUM_BUF_SIZE ] , & s_len )"	944:20:28002:28103	772778	1	True				
ANR	773644	AssignmentExpression	"s = conv_10_quad ( i_quad , 0 , & is_negative , & num_buf [ NUM_BUF_SIZE ] , & s_len )"		772778	0		=			
ANR	773645	Identifier	s		772778	0					
ANR	773646	CallExpression	"conv_10_quad ( i_quad , 0 , & is_negative , & num_buf [ NUM_BUF_SIZE ] , & s_len )"		772778	1					
ANR	773647	Callee	conv_10_quad		772778	0					
ANR	773648	Identifier	conv_10_quad		772778	0					
ANR	773649	ArgumentList	i_quad		772778	1					
ANR	773650	Argument	i_quad		772778	0					
ANR	773651	Identifier	i_quad		772778	0					
ANR	773652	Argument	0		772778	1					
ANR	773653	PrimaryExpression	0		772778	0					
ANR	773654	Argument	& is_negative		772778	2					
ANR	773655	UnaryOperationExpression	& is_negative		772778	0					
ANR	773656	UnaryOperator	&		772778	0					
ANR	773657	Identifier	is_negative		772778	1					
ANR	773658	Argument	& num_buf [ NUM_BUF_SIZE ]		772778	3					
ANR	773659	UnaryOperationExpression	& num_buf [ NUM_BUF_SIZE ]		772778	0					
ANR	773660	UnaryOperator	&		772778	0					
ANR	773661	ArrayIndexing	num_buf [ NUM_BUF_SIZE ]		772778	1					
ANR	773662	Identifier	num_buf		772778	0					
ANR	773663	Identifier	NUM_BUF_SIZE		772778	1					
ANR	773664	Argument	& s_len		772778	4					
ANR	773665	UnaryOperationExpression	& s_len		772778	0					
ANR	773666	UnaryOperator	&		772778	0					
ANR	773667	Identifier	s_len		772778	1					
ANR	773668	ElseStatement	else		772778	0					
ANR	773669	CompoundStatement		217:21:7372:7372	772778	0					
ANR	773670	IfStatement	if ( var_type == IS_LONG )		772778	0					
ANR	773671	Condition	var_type == IS_LONG	948:24:28170:28188	772778	0	True				
ANR	773672	EqualityExpression	var_type == IS_LONG		772778	0		==			
ANR	773673	Identifier	var_type		772778	0					
ANR	773674	Identifier	IS_LONG		772778	1					
ANR	773675	ExpressionStatement	"i_num = va_arg ( ap , apr_int32_t )"	949:24:28215:28246	772778	1	True				
ANR	773676	AssignmentExpression	"i_num = va_arg ( ap , apr_int32_t )"		772778	0		=			
ANR	773677	Identifier	i_num		772778	0					
ANR	773678	CallExpression	"va_arg ( ap , apr_int32_t )"		772778	1					
ANR	773679	Callee	va_arg		772778	0					
ANR	773680	Identifier	va_arg		772778	0					
ANR	773681	ArgumentList	ap		772778	1					
ANR	773682	Argument	ap		772778	0					
ANR	773683	Identifier	ap		772778	0					
ANR	773684	Argument	apr_int32_t		772778	1					
ANR	773685	Identifier	apr_int32_t		772778	0					
ANR	773686	ElseStatement	else		772778	0					
ANR	773687	IfStatement	if ( var_type == IS_SHORT )		772778	0					
ANR	773688	Condition	var_type == IS_SHORT	950:29:28277:28296	772778	0	True				
ANR	773689	EqualityExpression	var_type == IS_SHORT		772778	0		==			
ANR	773690	Identifier	var_type		772778	0					
ANR	773691	Identifier	IS_SHORT		772778	1					
ANR	773692	ExpressionStatement	"i_num = ( short ) va_arg ( ap , int )"	951:24:28323:28354	772778	1	True				
ANR	773693	AssignmentExpression	"i_num = ( short ) va_arg ( ap , int )"		772778	0		=			
ANR	773694	Identifier	i_num		772778	0					
ANR	773695	CastExpression	"( short ) va_arg ( ap , int )"		772778	1					
ANR	773696	CastTarget	short		772778	0					
ANR	773697	CallExpression	"va_arg ( ap , int )"		772778	1					
ANR	773698	Callee	va_arg		772778	0					
ANR	773699	Identifier	va_arg		772778	0					
ANR	773700	ArgumentList	ap		772778	1					
ANR	773701	Argument	ap		772778	0					
ANR	773702	Identifier	ap		772778	0					
ANR	773703	Argument	int		772778	1					
ANR	773704	Identifier	int		772778	0					
ANR	773705	ElseStatement	else		772778	0					
ANR	773706	ExpressionStatement	"i_num = va_arg ( ap , int )"	953:24:28405:28428	772778	0	True				
ANR	773707	AssignmentExpression	"i_num = va_arg ( ap , int )"		772778	0		=			
ANR	773708	Identifier	i_num		772778	0					
ANR	773709	CallExpression	"va_arg ( ap , int )"		772778	1					
ANR	773710	Callee	va_arg		772778	0					
ANR	773711	Identifier	va_arg		772778	0					
ANR	773712	ArgumentList	ap		772778	1					
ANR	773713	Argument	ap		772778	0					
ANR	773714	Identifier	ap		772778	0					
ANR	773715	Argument	int		772778	1					
ANR	773716	Identifier	int		772778	0					
ANR	773717	ExpressionStatement	"s = conv_10 ( i_num , 0 , & is_negative , & num_buf [ NUM_BUF_SIZE ] , & s_len )"	954:20:28450:28545	772778	1	True				
ANR	773718	AssignmentExpression	"s = conv_10 ( i_num , 0 , & is_negative , & num_buf [ NUM_BUF_SIZE ] , & s_len )"		772778	0		=			
ANR	773719	Identifier	s		772778	0					
ANR	773720	CallExpression	"conv_10 ( i_num , 0 , & is_negative , & num_buf [ NUM_BUF_SIZE ] , & s_len )"		772778	1					
ANR	773721	Callee	conv_10		772778	0					
ANR	773722	Identifier	conv_10		772778	0					
ANR	773723	ArgumentList	i_num		772778	1					
ANR	773724	Argument	i_num		772778	0					
ANR	773725	Identifier	i_num		772778	0					
ANR	773726	Argument	0		772778	1					
ANR	773727	PrimaryExpression	0		772778	0					
ANR	773728	Argument	& is_negative		772778	2					
ANR	773729	UnaryOperationExpression	& is_negative		772778	0					
ANR	773730	UnaryOperator	&		772778	0					
ANR	773731	Identifier	is_negative		772778	1					
ANR	773732	Argument	& num_buf [ NUM_BUF_SIZE ]		772778	3					
ANR	773733	UnaryOperationExpression	& num_buf [ NUM_BUF_SIZE ]		772778	0					
ANR	773734	UnaryOperator	&		772778	0					
ANR	773735	ArrayIndexing	num_buf [ NUM_BUF_SIZE ]		772778	1					
ANR	773736	Identifier	num_buf		772778	0					
ANR	773737	Identifier	NUM_BUF_SIZE		772778	1					
ANR	773738	Argument	& s_len		772778	4					
ANR	773739	UnaryOperationExpression	& s_len		772778	0					
ANR	773740	UnaryOperator	&		772778	0					
ANR	773741	Identifier	s_len		772778	1					
ANR	773742	ExpressionStatement	"FIX_PRECISION ( adjust_precision , precision , s , s_len )"	957:16:28581:28633	772778	7	True				
ANR	773743	CallExpression	"FIX_PRECISION ( adjust_precision , precision , s , s_len )"		772778	0					
ANR	773744	Callee	FIX_PRECISION		772778	0					
ANR	773745	Identifier	FIX_PRECISION		772778	0					
ANR	773746	ArgumentList	adjust_precision		772778	1					
ANR	773747	Argument	adjust_precision		772778	0					
ANR	773748	Identifier	adjust_precision		772778	0					
ANR	773749	Argument	precision		772778	1					
ANR	773750	Identifier	precision		772778	0					
ANR	773751	Argument	s		772778	2					
ANR	773752	Identifier	s		772778	0					
ANR	773753	Argument	s_len		772778	3					
ANR	773754	Identifier	s_len		772778	0					
ANR	773755	IfStatement	if ( is_negative )		772778	8					
ANR	773756	Condition	is_negative	959:20:28656:28666	772778	0	True				
ANR	773757	Identifier	is_negative		772778	0					
ANR	773758	ExpressionStatement	prefix_char = '-'	960:20:28689:28706	772778	1	True				
ANR	773759	AssignmentExpression	prefix_char = '-'		772778	0		=			
ANR	773760	Identifier	prefix_char		772778	0					
ANR	773761	PrimaryExpression	'-'		772778	1					
ANR	773762	ElseStatement	else		772778	0					
ANR	773763	IfStatement	if ( print_sign )		772778	0					
ANR	773764	Condition	print_sign	961:25:28733:28742	772778	0	True				
ANR	773765	Identifier	print_sign		772778	0					
ANR	773766	ExpressionStatement	prefix_char = '+'	962:20:28765:28782	772778	1	True				
ANR	773767	AssignmentExpression	prefix_char = '+'		772778	0		=			
ANR	773768	Identifier	prefix_char		772778	0					
ANR	773769	PrimaryExpression	'+'		772778	1					
ANR	773770	ElseStatement	else		772778	0					
ANR	773771	IfStatement	if ( print_blank )		772778	0					
ANR	773772	Condition	print_blank	963:25:28809:28819	772778	0	True				
ANR	773773	Identifier	print_blank		772778	0					
ANR	773774	ExpressionStatement	prefix_char = ' '	964:20:28842:28859	772778	1	True				
ANR	773775	AssignmentExpression	prefix_char = ' '		772778	0		=			
ANR	773776	Identifier	prefix_char		772778	0					
ANR	773777	PrimaryExpression	' '		772778	1					
ANR	773778	BreakStatement	break ;	965:16:28877:28882	772778	9	True				
ANR	773779	Label	case 'o' :	968:12:28898:28906	772778	10	True				
ANR	773780	IfStatement	if ( var_type == IS_QUAD )		772778	11					
ANR	773781	Condition	var_type == IS_QUAD	969:20:28928:28946	772778	0	True				
ANR	773782	EqualityExpression	var_type == IS_QUAD		772778	0		==			
ANR	773783	Identifier	var_type		772778	0					
ANR	773784	Identifier	IS_QUAD		772778	1					
ANR	773785	CompoundStatement		239:41:8177:8177	772778	1					
ANR	773786	ExpressionStatement	"ui_quad = va_arg ( ap , apr_uint64_t )"	970:20:28971:29005	772778	0	True				
ANR	773787	AssignmentExpression	"ui_quad = va_arg ( ap , apr_uint64_t )"		772778	0		=			
ANR	773788	Identifier	ui_quad		772778	0					
ANR	773789	CallExpression	"va_arg ( ap , apr_uint64_t )"		772778	1					
ANR	773790	Callee	va_arg		772778	0					
ANR	773791	Identifier	va_arg		772778	0					
ANR	773792	ArgumentList	ap		772778	1					
ANR	773793	Argument	ap		772778	0					
ANR	773794	Identifier	ap		772778	0					
ANR	773795	Argument	apr_uint64_t		772778	1					
ANR	773796	Identifier	apr_uint64_t		772778	0					
ANR	773797	ExpressionStatement	"s = conv_p2_quad ( ui_quad , 3 , * fmt , & num_buf [ NUM_BUF_SIZE ] , & s_len )"	971:20:29027:29121	772778	1	True				
ANR	773798	AssignmentExpression	"s = conv_p2_quad ( ui_quad , 3 , * fmt , & num_buf [ NUM_BUF_SIZE ] , & s_len )"		772778	0		=			
ANR	773799	Identifier	s		772778	0					
ANR	773800	CallExpression	"conv_p2_quad ( ui_quad , 3 , * fmt , & num_buf [ NUM_BUF_SIZE ] , & s_len )"		772778	1					
ANR	773801	Callee	conv_p2_quad		772778	0					
ANR	773802	Identifier	conv_p2_quad		772778	0					
ANR	773803	ArgumentList	ui_quad		772778	1					
ANR	773804	Argument	ui_quad		772778	0					
ANR	773805	Identifier	ui_quad		772778	0					
ANR	773806	Argument	3		772778	1					
ANR	773807	PrimaryExpression	3		772778	0					
ANR	773808	Argument	* fmt		772778	2					
ANR	773809	UnaryOperationExpression	* fmt		772778	0					
ANR	773810	UnaryOperator	*		772778	0					
ANR	773811	Identifier	fmt		772778	1					
ANR	773812	Argument	& num_buf [ NUM_BUF_SIZE ]		772778	3					
ANR	773813	UnaryOperationExpression	& num_buf [ NUM_BUF_SIZE ]		772778	0					
ANR	773814	UnaryOperator	&		772778	0					
ANR	773815	ArrayIndexing	num_buf [ NUM_BUF_SIZE ]		772778	1					
ANR	773816	Identifier	num_buf		772778	0					
ANR	773817	Identifier	NUM_BUF_SIZE		772778	1					
ANR	773818	Argument	& s_len		772778	4					
ANR	773819	UnaryOperationExpression	& s_len		772778	0					
ANR	773820	UnaryOperator	&		772778	0					
ANR	773821	Identifier	s_len		772778	1					
ANR	773822	ElseStatement	else		772778	0					
ANR	773823	CompoundStatement		244:21:8390:8390	772778	0					
ANR	773824	IfStatement	if ( var_type == IS_LONG )		772778	0					
ANR	773825	Condition	var_type == IS_LONG	975:24:29188:29206	772778	0	True				
ANR	773826	EqualityExpression	var_type == IS_LONG		772778	0		==			
ANR	773827	Identifier	var_type		772778	0					
ANR	773828	Identifier	IS_LONG		772778	1					
ANR	773829	ExpressionStatement	"ui_num = va_arg ( ap , apr_uint32_t )"	976:24:29233:29266	772778	1	True				
ANR	773830	AssignmentExpression	"ui_num = va_arg ( ap , apr_uint32_t )"		772778	0		=			
ANR	773831	Identifier	ui_num		772778	0					
ANR	773832	CallExpression	"va_arg ( ap , apr_uint32_t )"		772778	1					
ANR	773833	Callee	va_arg		772778	0					
ANR	773834	Identifier	va_arg		772778	0					
ANR	773835	ArgumentList	ap		772778	1					
ANR	773836	Argument	ap		772778	0					
ANR	773837	Identifier	ap		772778	0					
ANR	773838	Argument	apr_uint32_t		772778	1					
ANR	773839	Identifier	apr_uint32_t		772778	0					
ANR	773840	ElseStatement	else		772778	0					
ANR	773841	IfStatement	if ( var_type == IS_SHORT )		772778	0					
ANR	773842	Condition	var_type == IS_SHORT	977:29:29297:29316	772778	0	True				
ANR	773843	EqualityExpression	var_type == IS_SHORT		772778	0		==			
ANR	773844	Identifier	var_type		772778	0					
ANR	773845	Identifier	IS_SHORT		772778	1					
ANR	773846	Statement	ui_num	978:24:29343:29348	772778	1	True				
ANR	773847	ElseStatement	else		772778	0					
ANR	773848	Statement	ui_num	980:24:29444:29449	772778	0	True				
ANR	773849	Statement	=	978:31:29350:29350	772778	1	True				
ANR	773850	Statement	(	978:33:29352:29352	772778	2	True				
ANR	773851	Statement	unsigned	978:34:29353:29360	772778	3	True				
ANR	773852	Statement	short	978:43:29362:29366	772778	4	True				
ANR	773853	Statement	)	978:48:29367:29367	772778	5	True				
ANR	773854	Statement	va_arg	978:50:29369:29374	772778	6	True				
ANR	773855	Statement	(	978:56:29375:29375	772778	7	True				
ANR	773856	Statement	ap	978:57:29376:29377	772778	8	True				
ANR	773857	Statement	","	978:59:29378:29378	772778	9	True				
ANR	773858	Statement	unsigned	978:61:29380:29387	772778	10	True				
ANR	773859	Statement	int	978:70:29389:29391	772778	11	True				
ANR	773860	Statement	)	978:73:29392:29392	772778	12	True				
ANR	773861	ExpressionStatement		978:74:29393:29393	772778	13	True				
ANR	773862	Statement	=	980:31:29451:29451	772778	14	True				
ANR	773863	Statement	va_arg	980:33:29453:29458	772778	15	True				
ANR	773864	Statement	(	980:39:29459:29459	772778	16	True				
ANR	773865	Statement	ap	980:40:29460:29461	772778	17	True				
ANR	773866	Statement	","	980:42:29462:29462	772778	18	True				
ANR	773867	Statement	unsigned	980:44:29464:29471	772778	19	True				
ANR	773868	Statement	int	980:53:29473:29475	772778	20	True				
ANR	773869	Statement	)	980:56:29476:29476	772778	21	True				
ANR	773870	ExpressionStatement		980:57:29477:29477	772778	22	True				
ANR	773871	ExpressionStatement	"s = conv_p2 ( ui_num , 3 , * fmt , & num_buf [ NUM_BUF_SIZE ] , & s_len )"	981:20:29499:29587	772778	23	True				
ANR	773872	AssignmentExpression	"s = conv_p2 ( ui_num , 3 , * fmt , & num_buf [ NUM_BUF_SIZE ] , & s_len )"		772778	0		=			
ANR	773873	Identifier	s		772778	0					
ANR	773874	CallExpression	"conv_p2 ( ui_num , 3 , * fmt , & num_buf [ NUM_BUF_SIZE ] , & s_len )"		772778	1					
ANR	773875	Callee	conv_p2		772778	0					
ANR	773876	Identifier	conv_p2		772778	0					
ANR	773877	ArgumentList	ui_num		772778	1					
ANR	773878	Argument	ui_num		772778	0					
ANR	773879	Identifier	ui_num		772778	0					
ANR	773880	Argument	3		772778	1					
ANR	773881	PrimaryExpression	3		772778	0					
ANR	773882	Argument	* fmt		772778	2					
ANR	773883	UnaryOperationExpression	* fmt		772778	0					
ANR	773884	UnaryOperator	*		772778	0					
ANR	773885	Identifier	fmt		772778	1					
ANR	773886	Argument	& num_buf [ NUM_BUF_SIZE ]		772778	3					
ANR	773887	UnaryOperationExpression	& num_buf [ NUM_BUF_SIZE ]		772778	0					
ANR	773888	UnaryOperator	&		772778	0					
ANR	773889	ArrayIndexing	num_buf [ NUM_BUF_SIZE ]		772778	1					
ANR	773890	Identifier	num_buf		772778	0					
ANR	773891	Identifier	NUM_BUF_SIZE		772778	1					
ANR	773892	Argument	& s_len		772778	4					
ANR	773893	UnaryOperationExpression	& s_len		772778	0					
ANR	773894	UnaryOperator	&		772778	0					
ANR	773895	Identifier	s_len		772778	1					
ANR	773896	ExpressionStatement	"FIX_PRECISION ( adjust_precision , precision , s , s_len )"	984:16:29623:29675	772778	12	True				
ANR	773897	CallExpression	"FIX_PRECISION ( adjust_precision , precision , s , s_len )"		772778	0					
ANR	773898	Callee	FIX_PRECISION		772778	0					
ANR	773899	Identifier	FIX_PRECISION		772778	0					
ANR	773900	ArgumentList	adjust_precision		772778	1					
ANR	773901	Argument	adjust_precision		772778	0					
ANR	773902	Identifier	adjust_precision		772778	0					
ANR	773903	Argument	precision		772778	1					
ANR	773904	Identifier	precision		772778	0					
ANR	773905	Argument	s		772778	2					
ANR	773906	Identifier	s		772778	0					
ANR	773907	Argument	s_len		772778	3					
ANR	773908	Identifier	s_len		772778	0					
ANR	773909	IfStatement	if ( alternate_form && * s != '0' )		772778	13					
ANR	773910	Condition	alternate_form && * s != '0'	985:20:29697:29723	772778	0	True				
ANR	773911	AndExpression	alternate_form && * s != '0'		772778	0		&&			
ANR	773912	Identifier	alternate_form		772778	0					
ANR	773913	EqualityExpression	* s != '0'		772778	1		!=			
ANR	773914	UnaryOperationExpression	* s		772778	0					
ANR	773915	UnaryOperator	*		772778	0					
ANR	773916	Identifier	s		772778	1					
ANR	773917	PrimaryExpression	'0'		772778	1					
ANR	773918	CompoundStatement		255:49:8954:8954	772778	1					
ANR	773919	ExpressionStatement	* -- s = '0'	986:20:29748:29758	772778	0	True				
ANR	773920	AssignmentExpression	* -- s = '0'		772778	0		=			
ANR	773921	UnaryOperationExpression	* -- s		772778	0					
ANR	773922	UnaryOperator	*		772778	0					
ANR	773923	UnaryExpression	-- s		772778	1					
ANR	773924	IncDec	--		772778	0					
ANR	773925	Identifier	s		772778	1					
ANR	773926	PrimaryExpression	'0'		772778	1					
ANR	773927	ExpressionStatement	s_len ++	987:20:29780:29787	772778	1	True				
ANR	773928	PostIncDecOperationExpression	s_len ++		772778	0					
ANR	773929	Identifier	s_len		772778	0					
ANR	773930	IncDec	++		772778	1					
ANR	773931	BreakStatement	break ;	989:16:29823:29828	772778	14	True				
ANR	773932	Label	case 'x' :	992:12:29844:29852	772778	15	True				
ANR	773933	Label	case 'X' :	993:12:29866:29874	772778	16	True				
ANR	773934	IfStatement	if ( var_type == IS_QUAD )		772778	17					
ANR	773935	Condition	var_type == IS_QUAD	994:20:29896:29914	772778	0	True				
ANR	773936	EqualityExpression	var_type == IS_QUAD		772778	0		==			
ANR	773937	Identifier	var_type		772778	0					
ANR	773938	Identifier	IS_QUAD		772778	1					
ANR	773939	CompoundStatement		264:41:9145:9145	772778	1					
ANR	773940	ExpressionStatement	"ui_quad = va_arg ( ap , apr_uint64_t )"	995:20:29939:29973	772778	0	True				
ANR	773941	AssignmentExpression	"ui_quad = va_arg ( ap , apr_uint64_t )"		772778	0		=			
ANR	773942	Identifier	ui_quad		772778	0					
ANR	773943	CallExpression	"va_arg ( ap , apr_uint64_t )"		772778	1					
ANR	773944	Callee	va_arg		772778	0					
ANR	773945	Identifier	va_arg		772778	0					
ANR	773946	ArgumentList	ap		772778	1					
ANR	773947	Argument	ap		772778	0					
ANR	773948	Identifier	ap		772778	0					
ANR	773949	Argument	apr_uint64_t		772778	1					
ANR	773950	Identifier	apr_uint64_t		772778	0					
ANR	773951	ExpressionStatement	"s = conv_p2_quad ( ui_quad , 4 , * fmt , & num_buf [ NUM_BUF_SIZE ] , & s_len )"	996:20:29995:30089	772778	1	True				
ANR	773952	AssignmentExpression	"s = conv_p2_quad ( ui_quad , 4 , * fmt , & num_buf [ NUM_BUF_SIZE ] , & s_len )"		772778	0		=			
ANR	773953	Identifier	s		772778	0					
ANR	773954	CallExpression	"conv_p2_quad ( ui_quad , 4 , * fmt , & num_buf [ NUM_BUF_SIZE ] , & s_len )"		772778	1					
ANR	773955	Callee	conv_p2_quad		772778	0					
ANR	773956	Identifier	conv_p2_quad		772778	0					
ANR	773957	ArgumentList	ui_quad		772778	1					
ANR	773958	Argument	ui_quad		772778	0					
ANR	773959	Identifier	ui_quad		772778	0					
ANR	773960	Argument	4		772778	1					
ANR	773961	PrimaryExpression	4		772778	0					
ANR	773962	Argument	* fmt		772778	2					
ANR	773963	UnaryOperationExpression	* fmt		772778	0					
ANR	773964	UnaryOperator	*		772778	0					
ANR	773965	Identifier	fmt		772778	1					
ANR	773966	Argument	& num_buf [ NUM_BUF_SIZE ]		772778	3					
ANR	773967	UnaryOperationExpression	& num_buf [ NUM_BUF_SIZE ]		772778	0					
ANR	773968	UnaryOperator	&		772778	0					
ANR	773969	ArrayIndexing	num_buf [ NUM_BUF_SIZE ]		772778	1					
ANR	773970	Identifier	num_buf		772778	0					
ANR	773971	Identifier	NUM_BUF_SIZE		772778	1					
ANR	773972	Argument	& s_len		772778	4					
ANR	773973	UnaryOperationExpression	& s_len		772778	0					
ANR	773974	UnaryOperator	&		772778	0					
ANR	773975	Identifier	s_len		772778	1					
ANR	773976	ElseStatement	else		772778	0					
ANR	773977	CompoundStatement		269:21:9358:9358	772778	0					
ANR	773978	IfStatement	if ( var_type == IS_LONG )		772778	0					
ANR	773979	Condition	var_type == IS_LONG	1000:24:30156:30174	772778	0	True				
ANR	773980	EqualityExpression	var_type == IS_LONG		772778	0		==			
ANR	773981	Identifier	var_type		772778	0					
ANR	773982	Identifier	IS_LONG		772778	1					
ANR	773983	ExpressionStatement	"ui_num = va_arg ( ap , apr_uint32_t )"	1001:24:30201:30234	772778	1	True				
ANR	773984	AssignmentExpression	"ui_num = va_arg ( ap , apr_uint32_t )"		772778	0		=			
ANR	773985	Identifier	ui_num		772778	0					
ANR	773986	CallExpression	"va_arg ( ap , apr_uint32_t )"		772778	1					
ANR	773987	Callee	va_arg		772778	0					
ANR	773988	Identifier	va_arg		772778	0					
ANR	773989	ArgumentList	ap		772778	1					
ANR	773990	Argument	ap		772778	0					
ANR	773991	Identifier	ap		772778	0					
ANR	773992	Argument	apr_uint32_t		772778	1					
ANR	773993	Identifier	apr_uint32_t		772778	0					
ANR	773994	ElseStatement	else		772778	0					
ANR	773995	IfStatement	if ( var_type == IS_SHORT )		772778	0					
ANR	773996	Condition	var_type == IS_SHORT	1002:29:30265:30284	772778	0	True				
ANR	773997	EqualityExpression	var_type == IS_SHORT		772778	0		==			
ANR	773998	Identifier	var_type		772778	0					
ANR	773999	Identifier	IS_SHORT		772778	1					
ANR	774000	Statement	ui_num	1003:24:30311:30316	772778	1	True				
ANR	774001	ElseStatement	else		772778	0					
ANR	774002	Statement	ui_num	1005:24:30412:30417	772778	0	True				
ANR	774003	Statement	=	1003:31:30318:30318	772778	1	True				
ANR	774004	Statement	(	1003:33:30320:30320	772778	2	True				
ANR	774005	Statement	unsigned	1003:34:30321:30328	772778	3	True				
ANR	774006	Statement	short	1003:43:30330:30334	772778	4	True				
ANR	774007	Statement	)	1003:48:30335:30335	772778	5	True				
ANR	774008	Statement	va_arg	1003:50:30337:30342	772778	6	True				
ANR	774009	Statement	(	1003:56:30343:30343	772778	7	True				
ANR	774010	Statement	ap	1003:57:30344:30345	772778	8	True				
ANR	774011	Statement	","	1003:59:30346:30346	772778	9	True				
ANR	774012	Statement	unsigned	1003:61:30348:30355	772778	10	True				
ANR	774013	Statement	int	1003:70:30357:30359	772778	11	True				
ANR	774014	Statement	)	1003:73:30360:30360	772778	12	True				
ANR	774015	ExpressionStatement		1003:74:30361:30361	772778	13	True				
ANR	774016	Statement	=	1005:31:30419:30419	772778	14	True				
ANR	774017	Statement	va_arg	1005:33:30421:30426	772778	15	True				
ANR	774018	Statement	(	1005:39:30427:30427	772778	16	True				
ANR	774019	Statement	ap	1005:40:30428:30429	772778	17	True				
ANR	774020	Statement	","	1005:42:30430:30430	772778	18	True				
ANR	774021	Statement	unsigned	1005:44:30432:30439	772778	19	True				
ANR	774022	Statement	int	1005:53:30441:30443	772778	20	True				
ANR	774023	Statement	)	1005:56:30444:30444	772778	21	True				
ANR	774024	ExpressionStatement		1005:57:30445:30445	772778	22	True				
ANR	774025	ExpressionStatement	"s = conv_p2 ( ui_num , 4 , * fmt , & num_buf [ NUM_BUF_SIZE ] , & s_len )"	1006:20:30467:30555	772778	23	True				
ANR	774026	AssignmentExpression	"s = conv_p2 ( ui_num , 4 , * fmt , & num_buf [ NUM_BUF_SIZE ] , & s_len )"		772778	0		=			
ANR	774027	Identifier	s		772778	0					
ANR	774028	CallExpression	"conv_p2 ( ui_num , 4 , * fmt , & num_buf [ NUM_BUF_SIZE ] , & s_len )"		772778	1					
ANR	774029	Callee	conv_p2		772778	0					
ANR	774030	Identifier	conv_p2		772778	0					
ANR	774031	ArgumentList	ui_num		772778	1					
ANR	774032	Argument	ui_num		772778	0					
ANR	774033	Identifier	ui_num		772778	0					
ANR	774034	Argument	4		772778	1					
ANR	774035	PrimaryExpression	4		772778	0					
ANR	774036	Argument	* fmt		772778	2					
ANR	774037	UnaryOperationExpression	* fmt		772778	0					
ANR	774038	UnaryOperator	*		772778	0					
ANR	774039	Identifier	fmt		772778	1					
ANR	774040	Argument	& num_buf [ NUM_BUF_SIZE ]		772778	3					
ANR	774041	UnaryOperationExpression	& num_buf [ NUM_BUF_SIZE ]		772778	0					
ANR	774042	UnaryOperator	&		772778	0					
ANR	774043	ArrayIndexing	num_buf [ NUM_BUF_SIZE ]		772778	1					
ANR	774044	Identifier	num_buf		772778	0					
ANR	774045	Identifier	NUM_BUF_SIZE		772778	1					
ANR	774046	Argument	& s_len		772778	4					
ANR	774047	UnaryOperationExpression	& s_len		772778	0					
ANR	774048	UnaryOperator	&		772778	0					
ANR	774049	Identifier	s_len		772778	1					
ANR	774050	ExpressionStatement	"FIX_PRECISION ( adjust_precision , precision , s , s_len )"	1009:16:30591:30643	772778	18	True				
ANR	774051	CallExpression	"FIX_PRECISION ( adjust_precision , precision , s , s_len )"		772778	0					
ANR	774052	Callee	FIX_PRECISION		772778	0					
ANR	774053	Identifier	FIX_PRECISION		772778	0					
ANR	774054	ArgumentList	adjust_precision		772778	1					
ANR	774055	Argument	adjust_precision		772778	0					
ANR	774056	Identifier	adjust_precision		772778	0					
ANR	774057	Argument	precision		772778	1					
ANR	774058	Identifier	precision		772778	0					
ANR	774059	Argument	s		772778	2					
ANR	774060	Identifier	s		772778	0					
ANR	774061	Argument	s_len		772778	3					
ANR	774062	Identifier	s_len		772778	0					
ANR	774063	IfStatement	if ( alternate_form && ui_num != 0 )		772778	19					
ANR	774064	Condition	alternate_form && ui_num != 0	1010:20:30665:30693	772778	0	True				
ANR	774065	AndExpression	alternate_form && ui_num != 0		772778	0		&&			
ANR	774066	Identifier	alternate_form		772778	0					
ANR	774067	EqualityExpression	ui_num != 0		772778	1		!=			
ANR	774068	Identifier	ui_num		772778	0					
ANR	774069	PrimaryExpression	0		772778	1					
ANR	774070	CompoundStatement		280:51:9924:9924	772778	1					
ANR	774071	ExpressionStatement	* -- s = * fmt	1011:20:30718:30729	772778	0	True				
ANR	774072	AssignmentExpression	* -- s = * fmt		772778	0		=			
ANR	774073	UnaryOperationExpression	* -- s		772778	0					
ANR	774074	UnaryOperator	*		772778	0					
ANR	774075	UnaryExpression	-- s		772778	1					
ANR	774076	IncDec	--		772778	0					
ANR	774077	Identifier	s		772778	1					
ANR	774078	UnaryOperationExpression	* fmt		772778	1					
ANR	774079	UnaryOperator	*		772778	0					
ANR	774080	Identifier	fmt		772778	1					
ANR	774081	ExpressionStatement	* -- s = '0'	1012:20:30775:30785	772778	1	True				
ANR	774082	AssignmentExpression	* -- s = '0'		772778	0		=			
ANR	774083	UnaryOperationExpression	* -- s		772778	0					
ANR	774084	UnaryOperator	*		772778	0					
ANR	774085	UnaryExpression	-- s		772778	1					
ANR	774086	IncDec	--		772778	0					
ANR	774087	Identifier	s		772778	1					
ANR	774088	PrimaryExpression	'0'		772778	1					
ANR	774089	ExpressionStatement	s_len += 2	1013:20:30807:30817	772778	2	True				
ANR	774090	AssignmentExpression	s_len += 2		772778	0		+=			
ANR	774091	Identifier	s_len		772778	0					
ANR	774092	PrimaryExpression	2		772778	1					
ANR	774093	BreakStatement	break ;	1015:16:30853:30858	772778	20	True				
ANR	774094	Label	case 's' :	1018:12:30874:30882	772778	21	True				
ANR	774095	Statement	s	1019:16:30900:30900	772778	22	True				
ANR	774096	Statement	=	1019:18:30902:30902	772778	23	True				
ANR	774097	Statement	va_arg	1019:20:30904:30909	772778	24	True				
ANR	774098	Statement	(	1019:26:30910:30910	772778	25	True				
ANR	774099	Statement	ap	1019:27:30911:30912	772778	26	True				
ANR	774100	Statement	","	1019:29:30913:30913	772778	27	True				
ANR	774101	Statement	char	1019:31:30915:30918	772778	28	True				
ANR	774102	Statement	*	1019:36:30920:30920	772778	29	True				
ANR	774103	Statement	)	1019:37:30921:30921	772778	30	True				
ANR	774104	ExpressionStatement		1019:38:30922:30922	772778	31	True				
ANR	774105	IfStatement	if ( s != NULL )		772778	32					
ANR	774106	Condition	s != NULL	1020:20:30944:30952	772778	0	True				
ANR	774107	EqualityExpression	s != NULL		772778	0		!=			
ANR	774108	Identifier	s		772778	0					
ANR	774109	Identifier	NULL		772778	1					
ANR	774110	CompoundStatement		290:31:10183:10183	772778	1					
ANR	774111	IfStatement	if ( ! adjust_precision )		772778	0					
ANR	774112	Condition	! adjust_precision	1021:24:30981:30997	772778	0	True				
ANR	774113	UnaryOperationExpression	! adjust_precision		772778	0					
ANR	774114	UnaryOperator	!		772778	0					
ANR	774115	Identifier	adjust_precision		772778	1					
ANR	774116	CompoundStatement		291:43:10228:10228	772778	1					
ANR	774117	ExpressionStatement	s_len = strlen ( s )	1022:24:31026:31043	772778	0	True				
ANR	774118	AssignmentExpression	s_len = strlen ( s )		772778	0		=			
ANR	774119	Identifier	s_len		772778	0					
ANR	774120	CallExpression	strlen ( s )		772778	1					
ANR	774121	Callee	strlen		772778	0					
ANR	774122	Identifier	strlen		772778	0					
ANR	774123	ArgumentList	s		772778	1					
ANR	774124	Argument	s		772778	0					
ANR	774125	Identifier	s		772778	0					
ANR	774126	ElseStatement	else		772778	0					
ANR	774127	CompoundStatement		317:24:11618:11634	772778	0					
ANR	774128	IdentifierDeclStatement	const char * walk ;	1047:24:32390:32406	772778	0	True				
ANR	774129	IdentifierDecl	* walk		772778	0					
ANR	774130	IdentifierDeclType	const char *		772778	0					
ANR	774131	Identifier	walk		772778	1					
ANR	774132	ForStatement	"for ( walk = s , s_len = 0 ; ( s_len < precision ) && ( * walk != '\\0' ) ; ++ walk , ++ s_len )"		772778	1					
ANR	774133	ForInit	"walk = s , s_len = 0 ;"	1049:29:32438:32457	772778	0	True				
ANR	774134	Expression	"walk = s , s_len = 0"		772778	0					
ANR	774135	AssignmentExpression	walk = s		772778	0		=			
ANR	774136	Identifier	walk		772778	0					
ANR	774137	Identifier	s		772778	1					
ANR	774138	AssignmentExpression	s_len = 0		772778	1		=			
ANR	774139	Identifier	s_len		772778	0					
ANR	774140	PrimaryExpression	0		772778	1					
ANR	774141	Condition	( s_len < precision ) && ( * walk != '\\0' )	1050:29:32488:32525	772778	1	True				
ANR	774142	AndExpression	( s_len < precision ) && ( * walk != '\\0' )		772778	0		&&			
ANR	774143	RelationalExpression	s_len < precision		772778	0		<			
ANR	774144	Identifier	s_len		772778	0					
ANR	774145	Identifier	precision		772778	1					
ANR	774146	EqualityExpression	* walk != '\\0'		772778	1		!=			
ANR	774147	UnaryOperationExpression	* walk		772778	0					
ANR	774148	UnaryOperator	*		772778	0					
ANR	774149	Identifier	walk		772778	1					
ANR	774150	PrimaryExpression	'\\0'		772778	1					
ANR	774151	Expression	"++ walk , ++ s_len"	1051:29:32557:32571	772778	2	True				
ANR	774152	UnaryExpression	++ walk		772778	0					
ANR	774153	IncDec	++		772778	0					
ANR	774154	Identifier	walk		772778	1					
ANR	774155	UnaryExpression	++ s_len		772778	1					
ANR	774156	IncDec	++		772778	0					
ANR	774157	Identifier	s_len		772778	1					
ANR	774158	ExpressionStatement		1051:45:32573:32573	772778	3	True				
ANR	774159	ElseStatement	else		772778	0					
ANR	774160	CompoundStatement		324:21:11864:11864	772778	0					
ANR	774161	ExpressionStatement	s = S_NULL	1055:20:32658:32668	772778	0	True				
ANR	774162	AssignmentExpression	s = S_NULL		772778	0		=			
ANR	774163	Identifier	s		772778	0					
ANR	774164	Identifier	S_NULL		772778	1					
ANR	774165	ExpressionStatement	s_len = S_NULL_LEN	1056:20:32690:32708	772778	1	True				
ANR	774166	AssignmentExpression	s_len = S_NULL_LEN		772778	0		=			
ANR	774167	Identifier	s_len		772778	0					
ANR	774168	Identifier	S_NULL_LEN		772778	1					
ANR	774169	ExpressionStatement	pad_char = ' '	1058:16:32744:32758	772778	33	True				
ANR	774170	AssignmentExpression	pad_char = ' '		772778	0		=			
ANR	774171	Identifier	pad_char		772778	0					
ANR	774172	PrimaryExpression	' '		772778	1					
ANR	774173	BreakStatement	break ;	1059:16:32776:32781	772778	34	True				
ANR	774174	Label	case 'f' :	1062:12:32797:32805	772778	35	True				
ANR	774175	Label	case 'e' :	1063:12:32819:32827	772778	36	True				
ANR	774176	Label	case 'E' :	1064:12:32841:32849	772778	37	True				
ANR	774177	ExpressionStatement	"fp_num = va_arg ( ap , double )"	1065:16:32867:32894	772778	38	True				
ANR	774178	AssignmentExpression	"fp_num = va_arg ( ap , double )"		772778	0		=			
ANR	774179	Identifier	fp_num		772778	0					
ANR	774180	CallExpression	"va_arg ( ap , double )"		772778	1					
ANR	774181	Callee	va_arg		772778	0					
ANR	774182	Identifier	va_arg		772778	0					
ANR	774183	ArgumentList	ap		772778	1					
ANR	774184	Argument	ap		772778	0					
ANR	774185	Identifier	ap		772778	0					
ANR	774186	Argument	double		772778	1					
ANR	774187	Identifier	double		772778	0					
ANR	774188	ExpressionStatement	s = NULL	1069:16:33026:33034	772778	39	True				
ANR	774189	AssignmentExpression	s = NULL		772778	0		=			
ANR	774190	Identifier	s		772778	0					
ANR	774191	Identifier	NULL		772778	1					
ANR	774192	IfStatement	if ( isnan ( fp_num ) )		772778	40					
ANR	774193	Condition	isnan ( fp_num )	1071:20:33074:33086	772778	0	True				
ANR	774194	CallExpression	isnan ( fp_num )		772778	0					
ANR	774195	Callee	isnan		772778	0					
ANR	774196	Identifier	isnan		772778	0					
ANR	774197	ArgumentList	fp_num		772778	1					
ANR	774198	Argument	fp_num		772778	0					
ANR	774199	Identifier	fp_num		772778	0					
ANR	774200	CompoundStatement		341:35:12317:12317	772778	1					
ANR	774201	ExpressionStatement	s = nan	1072:20:33111:33118	772778	0	True				
ANR	774202	AssignmentExpression	s = nan		772778	0		=			
ANR	774203	Identifier	s		772778	0					
ANR	774204	Identifier	nan		772778	1					
ANR	774205	ExpressionStatement	s_len = strlen ( nan )	1073:20:33140:33159	772778	1	True				
ANR	774206	AssignmentExpression	s_len = strlen ( nan )		772778	0		=			
ANR	774207	Identifier	s_len		772778	0					
ANR	774208	CallExpression	strlen ( nan )		772778	1					
ANR	774209	Callee	strlen		772778	0					
ANR	774210	Identifier	strlen		772778	0					
ANR	774211	ArgumentList	nan		772778	1					
ANR	774212	Argument	nan		772778	0					
ANR	774213	Identifier	nan		772778	0					
ANR	774214	IfStatement	if ( ! s && isinf ( fp_num ) )		772778	41					
ANR	774215	Condition	! s && isinf ( fp_num )	1077:20:33224:33242	772778	0	True				
ANR	774216	AndExpression	! s && isinf ( fp_num )		772778	0		&&			
ANR	774217	UnaryOperationExpression	! s		772778	0					
ANR	774218	UnaryOperator	!		772778	0					
ANR	774219	Identifier	s		772778	1					
ANR	774220	CallExpression	isinf ( fp_num )		772778	1					
ANR	774221	Callee	isinf		772778	0					
ANR	774222	Identifier	isinf		772778	0					
ANR	774223	ArgumentList	fp_num		772778	1					
ANR	774224	Argument	fp_num		772778	0					
ANR	774225	Identifier	fp_num		772778	0					
ANR	774226	CompoundStatement		347:41:12473:12473	772778	1					
ANR	774227	ExpressionStatement	s = inf	1078:20:33267:33274	772778	0	True				
ANR	774228	AssignmentExpression	s = inf		772778	0		=			
ANR	774229	Identifier	s		772778	0					
ANR	774230	Identifier	inf		772778	1					
ANR	774231	ExpressionStatement	s_len = strlen ( inf )	1079:20:33296:33315	772778	1	True				
ANR	774232	AssignmentExpression	s_len = strlen ( inf )		772778	0		=			
ANR	774233	Identifier	s_len		772778	0					
ANR	774234	CallExpression	strlen ( inf )		772778	1					
ANR	774235	Callee	strlen		772778	0					
ANR	774236	Identifier	strlen		772778	0					
ANR	774237	ArgumentList	inf		772778	1					
ANR	774238	Argument	inf		772778	0					
ANR	774239	Identifier	inf		772778	0					
ANR	774240	IfStatement	if ( ! s )		772778	42					
ANR	774241	Condition	! s	1082:20:33362:33363	772778	0	True				
ANR	774242	UnaryOperationExpression	! s		772778	0					
ANR	774243	UnaryOperator	!		772778	0					
ANR	774244	Identifier	s		772778	1					
ANR	774245	CompoundStatement		352:24:12594:12594	772778	1					
ANR	774246	ExpressionStatement	"s = conv_fp ( * fmt , fp_num , alternate_form , ( int ) ( ( adjust_precision == NO ) ? FLOAT_DIGITS : precision ) , & is_negative , & num_buf [ 1 ] , & s_len )"	1083:20:33388:33588	772778	0	True				
ANR	774247	AssignmentExpression	"s = conv_fp ( * fmt , fp_num , alternate_form , ( int ) ( ( adjust_precision == NO ) ? FLOAT_DIGITS : precision ) , & is_negative , & num_buf [ 1 ] , & s_len )"		772778	0		=			
ANR	774248	Identifier	s		772778	0					
ANR	774249	CallExpression	"conv_fp ( * fmt , fp_num , alternate_form , ( int ) ( ( adjust_precision == NO ) ? FLOAT_DIGITS : precision ) , & is_negative , & num_buf [ 1 ] , & s_len )"		772778	1					
ANR	774250	Callee	conv_fp		772778	0					
ANR	774251	Identifier	conv_fp		772778	0					
ANR	774252	ArgumentList	* fmt		772778	1					
ANR	774253	Argument	* fmt		772778	0					
ANR	774254	UnaryOperationExpression	* fmt		772778	0					
ANR	774255	UnaryOperator	*		772778	0					
ANR	774256	Identifier	fmt		772778	1					
ANR	774257	Argument	fp_num		772778	1					
ANR	774258	Identifier	fp_num		772778	0					
ANR	774259	Argument	alternate_form		772778	2					
ANR	774260	Identifier	alternate_form		772778	0					
ANR	774261	Argument	( int ) ( ( adjust_precision == NO ) ? FLOAT_DIGITS : precision )		772778	3					
ANR	774262	CastExpression	( int ) ( ( adjust_precision == NO ) ? FLOAT_DIGITS : precision )		772778	0					
ANR	774263	CastTarget	int		772778	0					
ANR	774264	ConditionalExpression	( adjust_precision == NO ) ? FLOAT_DIGITS : precision		772778	1					
ANR	774265	Condition	adjust_precision == NO		772778	0					
ANR	774266	EqualityExpression	adjust_precision == NO		772778	0		==			
ANR	774267	Identifier	adjust_precision		772778	0					
ANR	774268	Identifier	NO		772778	1					
ANR	774269	Identifier	FLOAT_DIGITS		772778	1					
ANR	774270	Identifier	precision		772778	2					
ANR	774271	Argument	& is_negative		772778	4					
ANR	774272	UnaryOperationExpression	& is_negative		772778	0					
ANR	774273	UnaryOperator	&		772778	0					
ANR	774274	Identifier	is_negative		772778	1					
ANR	774275	Argument	& num_buf [ 1 ]		772778	5					
ANR	774276	UnaryOperationExpression	& num_buf [ 1 ]		772778	0					
ANR	774277	UnaryOperator	&		772778	0					
ANR	774278	ArrayIndexing	num_buf [ 1 ]		772778	1					
ANR	774279	Identifier	num_buf		772778	0					
ANR	774280	PrimaryExpression	1		772778	1					
ANR	774281	Argument	& s_len		772778	6					
ANR	774282	UnaryOperationExpression	& s_len		772778	0					
ANR	774283	UnaryOperator	&		772778	0					
ANR	774284	Identifier	s_len		772778	1					
ANR	774285	IfStatement	if ( is_negative )		772778	1					
ANR	774286	Condition	is_negative	1086:24:33614:33624	772778	0	True				
ANR	774287	Identifier	is_negative		772778	0					
ANR	774288	ExpressionStatement	prefix_char = '-'	1087:24:33651:33668	772778	1	True				
ANR	774289	AssignmentExpression	prefix_char = '-'		772778	0		=			
ANR	774290	Identifier	prefix_char		772778	0					
ANR	774291	PrimaryExpression	'-'		772778	1					
ANR	774292	ElseStatement	else		772778	0					
ANR	774293	IfStatement	if ( print_sign )		772778	0					
ANR	774294	Condition	print_sign	1088:29:33699:33708	772778	0	True				
ANR	774295	Identifier	print_sign		772778	0					
ANR	774296	ExpressionStatement	prefix_char = '+'	1089:24:33735:33752	772778	1	True				
ANR	774297	AssignmentExpression	prefix_char = '+'		772778	0		=			
ANR	774298	Identifier	prefix_char		772778	0					
ANR	774299	PrimaryExpression	'+'		772778	1					
ANR	774300	ElseStatement	else		772778	0					
ANR	774301	IfStatement	if ( print_blank )		772778	0					
ANR	774302	Condition	print_blank	1090:29:33783:33793	772778	0	True				
ANR	774303	Identifier	print_blank		772778	0					
ANR	774304	ExpressionStatement	prefix_char = ' '	1091:24:33820:33837	772778	1	True				
ANR	774305	AssignmentExpression	prefix_char = ' '		772778	0		=			
ANR	774306	Identifier	prefix_char		772778	0					
ANR	774307	PrimaryExpression	' '		772778	1					
ANR	774308	BreakStatement	break ;	1093:16:33873:33878	772778	43	True				
ANR	774309	Label	case 'g' :	1096:12:33894:33902	772778	44	True				
ANR	774310	Label	case 'G' :	1097:12:33916:33924	772778	45	True				
ANR	774311	ExpressionStatement	"fp_num = va_arg ( ap , double )"	1098:16:33942:33969	772778	46	True				
ANR	774312	AssignmentExpression	"fp_num = va_arg ( ap , double )"		772778	0		=			
ANR	774313	Identifier	fp_num		772778	0					
ANR	774314	CallExpression	"va_arg ( ap , double )"		772778	1					
ANR	774315	Callee	va_arg		772778	0					
ANR	774316	Identifier	va_arg		772778	0					
ANR	774317	ArgumentList	ap		772778	1					
ANR	774318	Argument	ap		772778	0					
ANR	774319	Identifier	ap		772778	0					
ANR	774320	Argument	double		772778	1					
ANR	774321	Identifier	double		772778	0					
ANR	774322	ExpressionStatement	s = NULL	1099:16:33987:33995	772778	47	True				
ANR	774323	AssignmentExpression	s = NULL		772778	0		=			
ANR	774324	Identifier	s		772778	0					
ANR	774325	Identifier	NULL		772778	1					
ANR	774326	IfStatement	if ( isnan ( fp_num ) )		772778	48					
ANR	774327	Condition	isnan ( fp_num )	1101:20:34035:34047	772778	0	True				
ANR	774328	CallExpression	isnan ( fp_num )		772778	0					
ANR	774329	Callee	isnan		772778	0					
ANR	774330	Identifier	isnan		772778	0					
ANR	774331	ArgumentList	fp_num		772778	1					
ANR	774332	Argument	fp_num		772778	0					
ANR	774333	Identifier	fp_num		772778	0					
ANR	774334	CompoundStatement		371:35:13278:13278	772778	1					
ANR	774335	ExpressionStatement	s = nan	1102:20:34072:34079	772778	0	True				
ANR	774336	AssignmentExpression	s = nan		772778	0		=			
ANR	774337	Identifier	s		772778	0					
ANR	774338	Identifier	nan		772778	1					
ANR	774339	ExpressionStatement	s_len = strlen ( nan )	1103:20:34101:34120	772778	1	True				
ANR	774340	AssignmentExpression	s_len = strlen ( nan )		772778	0		=			
ANR	774341	Identifier	s_len		772778	0					
ANR	774342	CallExpression	strlen ( nan )		772778	1					
ANR	774343	Callee	strlen		772778	0					
ANR	774344	Identifier	strlen		772778	0					
ANR	774345	ArgumentList	nan		772778	1					
ANR	774346	Argument	nan		772778	0					
ANR	774347	Identifier	nan		772778	0					
ANR	774348	IfStatement	if ( ! s && isinf ( fp_num ) )		772778	49					
ANR	774349	Condition	! s && isinf ( fp_num )	1107:20:34185:34203	772778	0	True				
ANR	774350	AndExpression	! s && isinf ( fp_num )		772778	0		&&			
ANR	774351	UnaryOperationExpression	! s		772778	0					
ANR	774352	UnaryOperator	!		772778	0					
ANR	774353	Identifier	s		772778	1					
ANR	774354	CallExpression	isinf ( fp_num )		772778	1					
ANR	774355	Callee	isinf		772778	0					
ANR	774356	Identifier	isinf		772778	0					
ANR	774357	ArgumentList	fp_num		772778	1					
ANR	774358	Argument	fp_num		772778	0					
ANR	774359	Identifier	fp_num		772778	0					
ANR	774360	CompoundStatement		377:41:13434:13434	772778	1					
ANR	774361	ExpressionStatement	s = inf	1108:20:34228:34235	772778	0	True				
ANR	774362	AssignmentExpression	s = inf		772778	0		=			
ANR	774363	Identifier	s		772778	0					
ANR	774364	Identifier	inf		772778	1					
ANR	774365	ExpressionStatement	s_len = strlen ( inf )	1109:20:34257:34276	772778	1	True				
ANR	774366	AssignmentExpression	s_len = strlen ( inf )		772778	0		=			
ANR	774367	Identifier	s_len		772778	0					
ANR	774368	CallExpression	strlen ( inf )		772778	1					
ANR	774369	Callee	strlen		772778	0					
ANR	774370	Identifier	strlen		772778	0					
ANR	774371	ArgumentList	inf		772778	1					
ANR	774372	Argument	inf		772778	0					
ANR	774373	Identifier	inf		772778	0					
ANR	774374	IfStatement	if ( ! s )		772778	50					
ANR	774375	Condition	! s	1112:20:34323:34324	772778	0	True				
ANR	774376	UnaryOperationExpression	! s		772778	0					
ANR	774377	UnaryOperator	!		772778	0					
ANR	774378	Identifier	s		772778	1					
ANR	774379	CompoundStatement		382:24:13555:13555	772778	1					
ANR	774380	IfStatement	if ( adjust_precision == NO )		772778	0					
ANR	774381	Condition	adjust_precision == NO	1113:24:34353:34374	772778	0	True				
ANR	774382	EqualityExpression	adjust_precision == NO		772778	0		==			
ANR	774383	Identifier	adjust_precision		772778	0					
ANR	774384	Identifier	NO		772778	1					
ANR	774385	ExpressionStatement	precision = FLOAT_DIGITS	1114:24:34401:34425	772778	1	True				
ANR	774386	AssignmentExpression	precision = FLOAT_DIGITS		772778	0		=			
ANR	774387	Identifier	precision		772778	0					
ANR	774388	Identifier	FLOAT_DIGITS		772778	1					
ANR	774389	ElseStatement	else		772778	0					
ANR	774390	IfStatement	if ( precision == 0 )		772778	0					
ANR	774391	Condition	precision == 0	1115:29:34456:34469	772778	0	True				
ANR	774392	EqualityExpression	precision == 0		772778	0		==			
ANR	774393	Identifier	precision		772778	0					
ANR	774394	PrimaryExpression	0		772778	1					
ANR	774395	ExpressionStatement	precision = 1	1116:24:34496:34509	772778	1	True				
ANR	774396	AssignmentExpression	precision = 1		772778	0		=			
ANR	774397	Identifier	precision		772778	0					
ANR	774398	PrimaryExpression	1		772778	1					
ANR	774399	ExpressionStatement	"s = apr_gcvt ( fp_num , ( int ) precision , & num_buf [ 1 ] , alternate_form )"	1120:20:34659:34757	772778	1	True				
ANR	774400	AssignmentExpression	"s = apr_gcvt ( fp_num , ( int ) precision , & num_buf [ 1 ] , alternate_form )"		772778	0		=			
ANR	774401	Identifier	s		772778	0					
ANR	774402	CallExpression	"apr_gcvt ( fp_num , ( int ) precision , & num_buf [ 1 ] , alternate_form )"		772778	1					
ANR	774403	Callee	apr_gcvt		772778	0					
ANR	774404	Identifier	apr_gcvt		772778	0					
ANR	774405	ArgumentList	fp_num		772778	1					
ANR	774406	Argument	fp_num		772778	0					
ANR	774407	Identifier	fp_num		772778	0					
ANR	774408	Argument	( int ) precision		772778	1					
ANR	774409	CastExpression	( int ) precision		772778	0					
ANR	774410	CastTarget	int		772778	0					
ANR	774411	Identifier	precision		772778	1					
ANR	774412	Argument	& num_buf [ 1 ]		772778	2					
ANR	774413	UnaryOperationExpression	& num_buf [ 1 ]		772778	0					
ANR	774414	UnaryOperator	&		772778	0					
ANR	774415	ArrayIndexing	num_buf [ 1 ]		772778	1					
ANR	774416	Identifier	num_buf		772778	0					
ANR	774417	PrimaryExpression	1		772778	1					
ANR	774418	Argument	alternate_form		772778	3					
ANR	774419	Identifier	alternate_form		772778	0					
ANR	774420	IfStatement	if ( * s == '-' )		772778	2					
ANR	774421	Condition	* s == '-'	1122:24:34783:34791	772778	0	True				
ANR	774422	EqualityExpression	* s == '-'		772778	0		==			
ANR	774423	UnaryOperationExpression	* s		772778	0					
ANR	774424	UnaryOperator	*		772778	0					
ANR	774425	Identifier	s		772778	1					
ANR	774426	PrimaryExpression	'-'		772778	1					
ANR	774427	ExpressionStatement	prefix_char = * s ++	1123:24:34818:34836	772778	1	True				
ANR	774428	AssignmentExpression	prefix_char = * s ++		772778	0		=			
ANR	774429	Identifier	prefix_char		772778	0					
ANR	774430	UnaryOperationExpression	* s ++		772778	1					
ANR	774431	UnaryOperator	*		772778	0					
ANR	774432	PostIncDecOperationExpression	s ++		772778	1					
ANR	774433	Identifier	s		772778	0					
ANR	774434	IncDec	++		772778	1					
ANR	774435	ElseStatement	else		772778	0					
ANR	774436	IfStatement	if ( print_sign )		772778	0					
ANR	774437	Condition	print_sign	1124:29:34867:34876	772778	0	True				
ANR	774438	Identifier	print_sign		772778	0					
ANR	774439	ExpressionStatement	prefix_char = '+'	1125:24:34903:34920	772778	1	True				
ANR	774440	AssignmentExpression	prefix_char = '+'		772778	0		=			
ANR	774441	Identifier	prefix_char		772778	0					
ANR	774442	PrimaryExpression	'+'		772778	1					
ANR	774443	ElseStatement	else		772778	0					
ANR	774444	IfStatement	if ( print_blank )		772778	0					
ANR	774445	Condition	print_blank	1126:29:34951:34961	772778	0	True				
ANR	774446	Identifier	print_blank		772778	0					
ANR	774447	ExpressionStatement	prefix_char = ' '	1127:24:34988:35005	772778	1	True				
ANR	774448	AssignmentExpression	prefix_char = ' '		772778	0		=			
ANR	774449	Identifier	prefix_char		772778	0					
ANR	774450	PrimaryExpression	' '		772778	1					
ANR	774451	ExpressionStatement	s_len = strlen ( s )	1129:20:35028:35045	772778	3	True				
ANR	774452	AssignmentExpression	s_len = strlen ( s )		772778	0		=			
ANR	774453	Identifier	s_len		772778	0					
ANR	774454	CallExpression	strlen ( s )		772778	1					
ANR	774455	Callee	strlen		772778	0					
ANR	774456	Identifier	strlen		772778	0					
ANR	774457	ArgumentList	s		772778	1					
ANR	774458	Argument	s		772778	0					
ANR	774459	Identifier	s		772778	0					
ANR	774460	IfStatement	"if ( alternate_form && ( q = strchr ( s , '.' ) ) == NULL )"		772778	4					
ANR	774461	Condition	"alternate_form && ( q = strchr ( s , '.' ) ) == NULL"	1131:24:35072:35117	772778	0	True				
ANR	774462	AndExpression	"alternate_form && ( q = strchr ( s , '.' ) ) == NULL"		772778	0		&&			
ANR	774463	Identifier	alternate_form		772778	0					
ANR	774464	EqualityExpression	"( q = strchr ( s , '.' ) ) == NULL"		772778	1		==			
ANR	774465	AssignmentExpression	"q = strchr ( s , '.' )"		772778	0		=			
ANR	774466	Identifier	q		772778	0					
ANR	774467	CallExpression	"strchr ( s , '.' )"		772778	1					
ANR	774468	Callee	strchr		772778	0					
ANR	774469	Identifier	strchr		772778	0					
ANR	774470	ArgumentList	s		772778	1					
ANR	774471	Argument	s		772778	0					
ANR	774472	Identifier	s		772778	0					
ANR	774473	Argument	'.'		772778	1					
ANR	774474	PrimaryExpression	'.'		772778	0					
ANR	774475	Identifier	NULL		772778	1					
ANR	774476	CompoundStatement		401:72:14348:14348	772778	1					
ANR	774477	ExpressionStatement	s [ s_len ++ ] = '.'	1132:24:35146:35162	772778	0	True				
ANR	774478	AssignmentExpression	s [ s_len ++ ] = '.'		772778	0		=			
ANR	774479	ArrayIndexing	s [ s_len ++ ]		772778	0					
ANR	774480	Identifier	s		772778	0					
ANR	774481	PostIncDecOperationExpression	s_len ++		772778	1					
ANR	774482	Identifier	s_len		772778	0					
ANR	774483	IncDec	++		772778	1					
ANR	774484	PrimaryExpression	'.'		772778	1					
ANR	774485	ExpressionStatement	s [ s_len ] = '\\0'	1133:24:35188:35203	772778	1	True				
ANR	774486	AssignmentExpression	s [ s_len ] = '\\0'		772778	0		=			
ANR	774487	ArrayIndexing	s [ s_len ]		772778	0					
ANR	774488	Identifier	s		772778	0					
ANR	774489	Identifier	s_len		772778	1					
ANR	774490	PrimaryExpression	'\\0'		772778	1					
ANR	774491	IfStatement	"if ( * fmt == 'G' && ( q = strchr ( s , 'e' ) ) != NULL )"		772778	5					
ANR	774492	Condition	"* fmt == 'G' && ( q = strchr ( s , 'e' ) ) != NULL"	1135:24:35288:35330	772778	0	True				
ANR	774493	AndExpression	"* fmt == 'G' && ( q = strchr ( s , 'e' ) ) != NULL"		772778	0		&&			
ANR	774494	EqualityExpression	* fmt == 'G'		772778	0		==			
ANR	774495	UnaryOperationExpression	* fmt		772778	0					
ANR	774496	UnaryOperator	*		772778	0					
ANR	774497	Identifier	fmt		772778	1					
ANR	774498	PrimaryExpression	'G'		772778	1					
ANR	774499	EqualityExpression	"( q = strchr ( s , 'e' ) ) != NULL"		772778	1		!=			
ANR	774500	AssignmentExpression	"q = strchr ( s , 'e' )"		772778	0		=			
ANR	774501	Identifier	q		772778	0					
ANR	774502	CallExpression	"strchr ( s , 'e' )"		772778	1					
ANR	774503	Callee	strchr		772778	0					
ANR	774504	Identifier	strchr		772778	0					
ANR	774505	ArgumentList	s		772778	1					
ANR	774506	Argument	s		772778	0					
ANR	774507	Identifier	s		772778	0					
ANR	774508	Argument	'e'		772778	1					
ANR	774509	PrimaryExpression	'e'		772778	0					
ANR	774510	Identifier	NULL		772778	1					
ANR	774511	ExpressionStatement	* q = 'E'	1136:24:35357:35365	772778	1	True				
ANR	774512	AssignmentExpression	* q = 'E'		772778	0		=			
ANR	774513	UnaryOperationExpression	* q		772778	0					
ANR	774514	UnaryOperator	*		772778	0					
ANR	774515	Identifier	q		772778	1					
ANR	774516	PrimaryExpression	'E'		772778	1					
ANR	774517	BreakStatement	break ;	1138:16:35401:35406	772778	51	True				
ANR	774518	Label	case 'c' :	1141:12:35422:35430	772778	52	True				
ANR	774519	ExpressionStatement	"char_buf [ 0 ] = ( char ) ( va_arg ( ap , int ) )"	1142:16:35448:35486	772778	53	True				
ANR	774520	AssignmentExpression	"char_buf [ 0 ] = ( char ) ( va_arg ( ap , int ) )"		772778	0		=			
ANR	774521	ArrayIndexing	char_buf [ 0 ]		772778	0					
ANR	774522	Identifier	char_buf		772778	0					
ANR	774523	PrimaryExpression	0		772778	1					
ANR	774524	CastExpression	"( char ) ( va_arg ( ap , int ) )"		772778	1					
ANR	774525	CastTarget	char		772778	0					
ANR	774526	CallExpression	"va_arg ( ap , int )"		772778	1					
ANR	774527	Callee	va_arg		772778	0					
ANR	774528	Identifier	va_arg		772778	0					
ANR	774529	ArgumentList	ap		772778	1					
ANR	774530	Argument	ap		772778	0					
ANR	774531	Identifier	ap		772778	0					
ANR	774532	Argument	int		772778	1					
ANR	774533	Identifier	int		772778	0					
ANR	774534	ExpressionStatement	s = & char_buf [ 0 ]	1143:16:35504:35520	772778	54	True				
ANR	774535	AssignmentExpression	s = & char_buf [ 0 ]		772778	0		=			
ANR	774536	Identifier	s		772778	0					
ANR	774537	UnaryOperationExpression	& char_buf [ 0 ]		772778	1					
ANR	774538	UnaryOperator	&		772778	0					
ANR	774539	ArrayIndexing	char_buf [ 0 ]		772778	1					
ANR	774540	Identifier	char_buf		772778	0					
ANR	774541	PrimaryExpression	0		772778	1					
ANR	774542	ExpressionStatement	s_len = 1	1144:16:35538:35547	772778	55	True				
ANR	774543	AssignmentExpression	s_len = 1		772778	0		=			
ANR	774544	Identifier	s_len		772778	0					
ANR	774545	PrimaryExpression	1		772778	1					
ANR	774546	ExpressionStatement	pad_char = ' '	1145:16:35565:35579	772778	56	True				
ANR	774547	AssignmentExpression	pad_char = ' '		772778	0		=			
ANR	774548	Identifier	pad_char		772778	0					
ANR	774549	PrimaryExpression	' '		772778	1					
ANR	774550	BreakStatement	break ;	1146:16:35597:35602	772778	57	True				
ANR	774551	Label	case '%' :	1149:12:35618:35626	772778	58	True				
ANR	774552	ExpressionStatement	char_buf [ 0 ] = '%'	1150:16:35644:35661	772778	59	True				
ANR	774553	AssignmentExpression	char_buf [ 0 ] = '%'		772778	0		=			
ANR	774554	ArrayIndexing	char_buf [ 0 ]		772778	0					
ANR	774555	Identifier	char_buf		772778	0					
ANR	774556	PrimaryExpression	0		772778	1					
ANR	774557	PrimaryExpression	'%'		772778	1					
ANR	774558	ExpressionStatement	s = & char_buf [ 0 ]	1151:16:35679:35695	772778	60	True				
ANR	774559	AssignmentExpression	s = & char_buf [ 0 ]		772778	0		=			
ANR	774560	Identifier	s		772778	0					
ANR	774561	UnaryOperationExpression	& char_buf [ 0 ]		772778	1					
ANR	774562	UnaryOperator	&		772778	0					
ANR	774563	ArrayIndexing	char_buf [ 0 ]		772778	1					
ANR	774564	Identifier	char_buf		772778	0					
ANR	774565	PrimaryExpression	0		772778	1					
ANR	774566	ExpressionStatement	s_len = 1	1152:16:35713:35722	772778	61	True				
ANR	774567	AssignmentExpression	s_len = 1		772778	0		=			
ANR	774568	Identifier	s_len		772778	0					
ANR	774569	PrimaryExpression	1		772778	1					
ANR	774570	ExpressionStatement	pad_char = ' '	1153:16:35740:35754	772778	62	True				
ANR	774571	AssignmentExpression	pad_char = ' '		772778	0		=			
ANR	774572	Identifier	pad_char		772778	0					
ANR	774573	PrimaryExpression	' '		772778	1					
ANR	774574	BreakStatement	break ;	1154:16:35772:35777	772778	63	True				
ANR	774575	Label	case 'n' :	1157:12:35793:35801	772778	64	True				
ANR	774576	IfStatement	if ( var_type == IS_QUAD )		772778	65					
ANR	774577	Condition	var_type == IS_QUAD	1158:20:35823:35841	772778	0	True				
ANR	774578	EqualityExpression	var_type == IS_QUAD		772778	0		==			
ANR	774579	Identifier	var_type		772778	0					
ANR	774580	Identifier	IS_QUAD		772778	1					
ANR	774581	Statement	*	1159:20:35864:35864	772778	1	True				
ANR	774582	ElseStatement	else		772778	0					
ANR	774583	IfStatement	if ( var_type == IS_LONG )		772778	0					
ANR	774584	Condition	var_type == IS_LONG	1160:25:35924:35942	772778	0	True				
ANR	774585	EqualityExpression	var_type == IS_LONG		772778	0		==			
ANR	774586	Identifier	var_type		772778	0					
ANR	774587	Identifier	IS_LONG		772778	1					
ANR	774588	Statement	*	1161:20:35965:35965	772778	1	True				
ANR	774589	ElseStatement	else		772778	0					
ANR	774590	IfStatement	if ( var_type == IS_SHORT )		772778	0					
ANR	774591	Condition	var_type == IS_SHORT	1162:25:36018:36037	772778	0	True				
ANR	774592	EqualityExpression	var_type == IS_SHORT		772778	0		==			
ANR	774593	Identifier	var_type		772778	0					
ANR	774594	Identifier	IS_SHORT		772778	1					
ANR	774595	Statement	*	1163:20:36060:36060	772778	1	True				
ANR	774596	ElseStatement	else		772778	0					
ANR	774597	Statement	*	1165:20:36130:36130	772778	0	True				
ANR	774598	Statement	(	1159:21:35865:35865	772778	66	True				
ANR	774599	Statement	va_arg	1159:22:35866:35871	772778	67	True				
ANR	774600	Statement	(	1159:28:35872:35872	772778	68	True				
ANR	774601	Statement	ap	1159:29:35873:35874	772778	69	True				
ANR	774602	Statement	","	1159:31:35875:35875	772778	70	True				
ANR	774603	Statement	apr_int64_t	1159:33:35877:35887	772778	71	True				
ANR	774604	Statement	*	1159:45:35889:35889	772778	72	True				
ANR	774605	Statement	)	1159:46:35890:35890	772778	73	True				
ANR	774606	Statement	)	1159:47:35891:35891	772778	74	True				
ANR	774607	Statement	=	1159:49:35893:35893	772778	75	True				
ANR	774608	ExpressionStatement	cc	1159:51:35895:35897	772778	76	True				
ANR	774609	Identifier	cc		772778	0					
ANR	774610	Statement	(	1161:21:35966:35966	772778	77	True				
ANR	774611	Statement	va_arg	1161:22:35967:35972	772778	78	True				
ANR	774612	Statement	(	1161:28:35973:35973	772778	79	True				
ANR	774613	Statement	ap	1161:29:35974:35975	772778	80	True				
ANR	774614	Statement	","	1161:31:35976:35976	772778	81	True				
ANR	774615	Statement	long	1161:33:35978:35981	772778	82	True				
ANR	774616	Statement	*	1161:38:35983:35983	772778	83	True				
ANR	774617	Statement	)	1161:39:35984:35984	772778	84	True				
ANR	774618	Statement	)	1161:40:35985:35985	772778	85	True				
ANR	774619	Statement	=	1161:42:35987:35987	772778	86	True				
ANR	774620	ExpressionStatement	cc	1161:44:35989:35991	772778	87	True				
ANR	774621	Identifier	cc		772778	0					
ANR	774622	Statement	(	1163:21:36061:36061	772778	88	True				
ANR	774623	Statement	va_arg	1163:22:36062:36067	772778	89	True				
ANR	774624	Statement	(	1163:28:36068:36068	772778	90	True				
ANR	774625	Statement	ap	1163:29:36069:36070	772778	91	True				
ANR	774626	Statement	","	1163:31:36071:36071	772778	92	True				
ANR	774627	Statement	short	1163:33:36073:36077	772778	93	True				
ANR	774628	Statement	*	1163:39:36079:36079	772778	94	True				
ANR	774629	Statement	)	1163:40:36080:36080	772778	95	True				
ANR	774630	Statement	)	1163:41:36081:36081	772778	96	True				
ANR	774631	Statement	=	1163:43:36083:36083	772778	97	True				
ANR	774632	ExpressionStatement	cc	1163:45:36085:36087	772778	98	True				
ANR	774633	Identifier	cc		772778	0					
ANR	774634	Statement	(	1165:21:36131:36131	772778	99	True				
ANR	774635	Statement	va_arg	1165:22:36132:36137	772778	100	True				
ANR	774636	Statement	(	1165:28:36138:36138	772778	101	True				
ANR	774637	Statement	ap	1165:29:36139:36140	772778	102	True				
ANR	774638	Statement	","	1165:31:36141:36141	772778	103	True				
ANR	774639	Statement	int	1165:33:36143:36145	772778	104	True				
ANR	774640	Statement	*	1165:37:36147:36147	772778	105	True				
ANR	774641	Statement	)	1165:38:36148:36148	772778	106	True				
ANR	774642	Statement	)	1165:39:36149:36149	772778	107	True				
ANR	774643	Statement	=	1165:41:36151:36151	772778	108	True				
ANR	774644	ExpressionStatement	cc	1165:43:36153:36155	772778	109	True				
ANR	774645	Identifier	cc		772778	0					
ANR	774646	ExpressionStatement	print_something = NO	1166:16:36173:36193	772778	110	True				
ANR	774647	AssignmentExpression	print_something = NO		772778	0		=			
ANR	774648	Identifier	print_something		772778	0					
ANR	774649	Identifier	NO		772778	1					
ANR	774650	BreakStatement	break ;	1167:16:36211:36216	772778	111	True				
ANR	774651	Label	case 'p' :	1173:12:36380:36388	772778	112	True				
ANR	774652	SwitchStatement	switch ( * ++ fmt )		772778	113					
ANR	774653	Condition	* ++ fmt	1174:23:36413:36418	772778	0	True				
ANR	774654	UnaryOperationExpression	* ++ fmt		772778	0					
ANR	774655	UnaryOperator	*		772778	0					
ANR	774656	UnaryExpression	++ fmt		772778	1					
ANR	774657	IncDec	++		772778	0					
ANR	774658	Identifier	fmt		772778	1					
ANR	774659	CompoundStatement		444:31:15649:15649	772778	1					
ANR	774660	Label	case 'p' :	1181:16:36743:36751	772778	0	True				
ANR	774661	IfStatement	if ( sizeof ( void * ) <= sizeof ( apr_uint64_t ) )		772778	1					
ANR	774662	Condition	sizeof ( void * ) <= sizeof ( apr_uint64_t )	1183:24:36803:36840	772778	0	True				
ANR	774663	RelationalExpression	sizeof ( void * ) <= sizeof ( apr_uint64_t )		772778	0		<=			
ANR	774664	SizeofExpression	sizeof ( void * )		772778	0					
ANR	774665	Sizeof	sizeof		772778	0					
ANR	774666	SizeofOperand	void *		772778	1					
ANR	774667	SizeofExpression	sizeof ( apr_uint64_t )		772778	1					
ANR	774668	Sizeof	sizeof		772778	0					
ANR	774669	SizeofOperand	apr_uint64_t		772778	1					
ANR	774670	CompoundStatement		453:64:16071:16071	772778	1					
ANR	774671	Statement	ui_quad	1184:24:36869:36875	772778	0	True				
ANR	774672	Statement	=	1184:32:36877:36877	772778	1	True				
ANR	774673	Statement	(	1184:34:36879:36879	772778	2	True				
ANR	774674	Statement	apr_uint64_t	1184:35:36880:36891	772778	3	True				
ANR	774675	Statement	)	1184:47:36892:36892	772778	4	True				
ANR	774676	Statement	va_arg	1184:49:36894:36899	772778	5	True				
ANR	774677	Statement	(	1184:55:36900:36900	772778	6	True				
ANR	774678	Statement	ap	1184:56:36901:36902	772778	7	True				
ANR	774679	Statement	","	1184:58:36903:36903	772778	8	True				
ANR	774680	Statement	void	1184:60:36905:36908	772778	9	True				
ANR	774681	Statement	*	1184:65:36910:36910	772778	10	True				
ANR	774682	Statement	)	1184:66:36911:36911	772778	11	True				
ANR	774683	ExpressionStatement		1184:67:36912:36912	772778	12	True				
ANR	774684	ExpressionStatement	"s = conv_p2_quad ( ui_quad , 4 , 'x' , & num_buf [ NUM_BUF_SIZE ] , & s_len )"	1185:24:36938:37035	772778	13	True				
ANR	774685	AssignmentExpression	"s = conv_p2_quad ( ui_quad , 4 , 'x' , & num_buf [ NUM_BUF_SIZE ] , & s_len )"		772778	0		=			
ANR	774686	Identifier	s		772778	0					
ANR	774687	CallExpression	"conv_p2_quad ( ui_quad , 4 , 'x' , & num_buf [ NUM_BUF_SIZE ] , & s_len )"		772778	1					
ANR	774688	Callee	conv_p2_quad		772778	0					
ANR	774689	Identifier	conv_p2_quad		772778	0					
ANR	774690	ArgumentList	ui_quad		772778	1					
ANR	774691	Argument	ui_quad		772778	0					
ANR	774692	Identifier	ui_quad		772778	0					
ANR	774693	Argument	4		772778	1					
ANR	774694	PrimaryExpression	4		772778	0					
ANR	774695	Argument	'x'		772778	2					
ANR	774696	PrimaryExpression	'x'		772778	0					
ANR	774697	Argument	& num_buf [ NUM_BUF_SIZE ]		772778	3					
ANR	774698	UnaryOperationExpression	& num_buf [ NUM_BUF_SIZE ]		772778	0					
ANR	774699	UnaryOperator	&		772778	0					
ANR	774700	ArrayIndexing	num_buf [ NUM_BUF_SIZE ]		772778	1					
ANR	774701	Identifier	num_buf		772778	0					
ANR	774702	Identifier	NUM_BUF_SIZE		772778	1					
ANR	774703	Argument	& s_len		772778	4					
ANR	774704	UnaryOperationExpression	& s_len		772778	0					
ANR	774705	UnaryOperator	&		772778	0					
ANR	774706	Identifier	s_len		772778	1					
ANR	774707	ElseStatement	else		772778	0					
ANR	774708	CompoundStatement		465:25:16598:16598	772778	0					
ANR	774709	ExpressionStatement	"s = ( char * ) ""%p"""	1196:24:37396:37412	772778	0	True				
ANR	774710	AssignmentExpression	"s = ( char * ) ""%p"""		772778	0		=			
ANR	774711	Identifier	s		772778	0					
ANR	774712	CastExpression	"( char * ) ""%p"""		772778	1					
ANR	774713	CastTarget	char *		772778	0					
ANR	774714	PrimaryExpression	"""%p"""		772778	1					
ANR	774715	ExpressionStatement	s_len = 2	1197:24:37438:37447	772778	1	True				
ANR	774716	AssignmentExpression	s_len = 2		772778	0		=			
ANR	774717	Identifier	s_len		772778	0					
ANR	774718	PrimaryExpression	2		772778	1					
ANR	774719	ExpressionStatement	prefix_char = NUL	1198:24:37473:37490	772778	2	True				
ANR	774720	AssignmentExpression	prefix_char = NUL		772778	0		=			
ANR	774721	Identifier	prefix_char		772778	0					
ANR	774722	Identifier	NUL		772778	1					
ANR	774723	ExpressionStatement	pad_char = ' '	1200:20:37534:37548	772778	2	True				
ANR	774724	AssignmentExpression	pad_char = ' '		772778	0		=			
ANR	774725	Identifier	pad_char		772778	0					
ANR	774726	PrimaryExpression	' '		772778	1					
ANR	774727	BreakStatement	break ;	1201:20:37570:37575	772778	3	True				
ANR	774728	Label	case 'I' :	1205:16:37668:37676	772778	4	True				
ANR	774729	CompoundStatement		477:20:16944:16962	772778	5					
ANR	774730	IdentifierDeclStatement	apr_sockaddr_t * sa ;	1207:20:37716:37734	772778	0	True				
ANR	774731	IdentifierDecl	* sa		772778	0					
ANR	774732	IdentifierDeclType	apr_sockaddr_t *		772778	0					
ANR	774733	Identifier	sa		772778	1					
ANR	774734	Statement	sa	1209:20:37757:37758	772778	1	True				
ANR	774735	Statement	=	1209:23:37760:37760	772778	2	True				
ANR	774736	Statement	va_arg	1209:25:37762:37767	772778	3	True				
ANR	774737	Statement	(	1209:31:37768:37768	772778	4	True				
ANR	774738	Statement	ap	1209:32:37769:37770	772778	5	True				
ANR	774739	Statement	","	1209:34:37771:37771	772778	6	True				
ANR	774740	Statement	apr_sockaddr_t	1209:36:37773:37786	772778	7	True				
ANR	774741	Statement	*	1209:51:37788:37788	772778	8	True				
ANR	774742	Statement	)	1209:52:37789:37789	772778	9	True				
ANR	774743	ExpressionStatement		1209:53:37790:37790	772778	10	True				
ANR	774744	IfStatement	if ( sa != NULL )		772778	11					
ANR	774745	Condition	sa != NULL	1210:24:37816:37825	772778	0	True				
ANR	774746	EqualityExpression	sa != NULL		772778	0		!=			
ANR	774747	Identifier	sa		772778	0					
ANR	774748	Identifier	NULL		772778	1					
ANR	774749	CompoundStatement		480:36:17056:17056	772778	1					
ANR	774750	ExpressionStatement	"s = conv_apr_sockaddr ( sa , & num_buf [ NUM_BUF_SIZE ] , & s_len )"	1211:24:37854:37911	772778	0	True				
ANR	774751	AssignmentExpression	"s = conv_apr_sockaddr ( sa , & num_buf [ NUM_BUF_SIZE ] , & s_len )"		772778	0		=			
ANR	774752	Identifier	s		772778	0					
ANR	774753	CallExpression	"conv_apr_sockaddr ( sa , & num_buf [ NUM_BUF_SIZE ] , & s_len )"		772778	1					
ANR	774754	Callee	conv_apr_sockaddr		772778	0					
ANR	774755	Identifier	conv_apr_sockaddr		772778	0					
ANR	774756	ArgumentList	sa		772778	1					
ANR	774757	Argument	sa		772778	0					
ANR	774758	Identifier	sa		772778	0					
ANR	774759	Argument	& num_buf [ NUM_BUF_SIZE ]		772778	1					
ANR	774760	UnaryOperationExpression	& num_buf [ NUM_BUF_SIZE ]		772778	0					
ANR	774761	UnaryOperator	&		772778	0					
ANR	774762	ArrayIndexing	num_buf [ NUM_BUF_SIZE ]		772778	1					
ANR	774763	Identifier	num_buf		772778	0					
ANR	774764	Identifier	NUM_BUF_SIZE		772778	1					
ANR	774765	Argument	& s_len		772778	2					
ANR	774766	UnaryOperationExpression	& s_len		772778	0					
ANR	774767	UnaryOperator	&		772778	0					
ANR	774768	Identifier	s_len		772778	1					
ANR	774769	IfStatement	if ( adjust_precision && precision < s_len )		772778	1					
ANR	774770	Condition	adjust_precision && precision < s_len	1212:28:37941:37977	772778	0	True				
ANR	774771	AndExpression	adjust_precision && precision < s_len		772778	0		&&			
ANR	774772	Identifier	adjust_precision		772778	0					
ANR	774773	RelationalExpression	precision < s_len		772778	1		<			
ANR	774774	Identifier	precision		772778	0					
ANR	774775	Identifier	s_len		772778	1					
ANR	774776	ExpressionStatement	s_len = precision	1213:28:38008:38025	772778	1	True				
ANR	774777	AssignmentExpression	s_len = precision		772778	0		=			
ANR	774778	Identifier	s_len		772778	0					
ANR	774779	Identifier	precision		772778	1					
ANR	774780	ElseStatement	else		772778	0					
ANR	774781	CompoundStatement		485:25:17302:17302	772778	0					
ANR	774782	ExpressionStatement	s = S_NULL	1216:24:38100:38110	772778	0	True				
ANR	774783	AssignmentExpression	s = S_NULL		772778	0		=			
ANR	774784	Identifier	s		772778	0					
ANR	774785	Identifier	S_NULL		772778	1					
ANR	774786	ExpressionStatement	s_len = S_NULL_LEN	1217:24:38136:38154	772778	1	True				
ANR	774787	AssignmentExpression	s_len = S_NULL_LEN		772778	0		=			
ANR	774788	Identifier	s_len		772778	0					
ANR	774789	Identifier	S_NULL_LEN		772778	1					
ANR	774790	ExpressionStatement	pad_char = ' '	1219:20:38198:38212	772778	12	True				
ANR	774791	AssignmentExpression	pad_char = ' '		772778	0		=			
ANR	774792	Identifier	pad_char		772778	0					
ANR	774793	PrimaryExpression	' '		772778	1					
ANR	774794	BreakStatement	break ;	1221:16:38248:38253	772778	6	True				
ANR	774795	Label	case 'A' :	1224:16:38328:38336	772778	7	True				
ANR	774796	CompoundStatement		496:20:17604:17622	772778	8					
ANR	774797	IdentifierDeclStatement	struct in_addr * ia ;	1226:20:38376:38394	772778	0	True				
ANR	774798	IdentifierDecl	* ia		772778	0					
ANR	774799	IdentifierDeclType	struct in_addr *		772778	0					
ANR	774800	Identifier	ia		772778	1					
ANR	774801	Statement	ia	1228:20:38417:38418	772778	1	True				
ANR	774802	Statement	=	1228:23:38420:38420	772778	2	True				
ANR	774803	Statement	va_arg	1228:25:38422:38427	772778	3	True				
ANR	774804	Statement	(	1228:31:38428:38428	772778	4	True				
ANR	774805	Statement	ap	1228:32:38429:38430	772778	5	True				
ANR	774806	Statement	","	1228:34:38431:38431	772778	6	True				
ANR	774807	Statement	struct	1228:36:38433:38438	772778	7	True				
ANR	774808	Statement	in_addr	1228:43:38440:38446	772778	8	True				
ANR	774809	Statement	*	1228:51:38448:38448	772778	9	True				
ANR	774810	Statement	)	1228:52:38449:38449	772778	10	True				
ANR	774811	ExpressionStatement		1228:53:38450:38450	772778	11	True				
ANR	774812	IfStatement	if ( ia != NULL )		772778	12					
ANR	774813	Condition	ia != NULL	1229:24:38476:38485	772778	0	True				
ANR	774814	EqualityExpression	ia != NULL		772778	0		!=			
ANR	774815	Identifier	ia		772778	0					
ANR	774816	Identifier	NULL		772778	1					
ANR	774817	CompoundStatement		499:36:17716:17716	772778	1					
ANR	774818	ExpressionStatement	"s = conv_in_addr ( ia , & num_buf [ NUM_BUF_SIZE ] , & s_len )"	1230:24:38514:38566	772778	0	True				
ANR	774819	AssignmentExpression	"s = conv_in_addr ( ia , & num_buf [ NUM_BUF_SIZE ] , & s_len )"		772778	0		=			
ANR	774820	Identifier	s		772778	0					
ANR	774821	CallExpression	"conv_in_addr ( ia , & num_buf [ NUM_BUF_SIZE ] , & s_len )"		772778	1					
ANR	774822	Callee	conv_in_addr		772778	0					
ANR	774823	Identifier	conv_in_addr		772778	0					
ANR	774824	ArgumentList	ia		772778	1					
ANR	774825	Argument	ia		772778	0					
ANR	774826	Identifier	ia		772778	0					
ANR	774827	Argument	& num_buf [ NUM_BUF_SIZE ]		772778	1					
ANR	774828	UnaryOperationExpression	& num_buf [ NUM_BUF_SIZE ]		772778	0					
ANR	774829	UnaryOperator	&		772778	0					
ANR	774830	ArrayIndexing	num_buf [ NUM_BUF_SIZE ]		772778	1					
ANR	774831	Identifier	num_buf		772778	0					
ANR	774832	Identifier	NUM_BUF_SIZE		772778	1					
ANR	774833	Argument	& s_len		772778	2					
ANR	774834	UnaryOperationExpression	& s_len		772778	0					
ANR	774835	UnaryOperator	&		772778	0					
ANR	774836	Identifier	s_len		772778	1					
ANR	774837	IfStatement	if ( adjust_precision && precision < s_len )		772778	1					
ANR	774838	Condition	adjust_precision && precision < s_len	1231:28:38596:38632	772778	0	True				
ANR	774839	AndExpression	adjust_precision && precision < s_len		772778	0		&&			
ANR	774840	Identifier	adjust_precision		772778	0					
ANR	774841	RelationalExpression	precision < s_len		772778	1		<			
ANR	774842	Identifier	precision		772778	0					
ANR	774843	Identifier	s_len		772778	1					
ANR	774844	ExpressionStatement	s_len = precision	1232:28:38663:38680	772778	1	True				
ANR	774845	AssignmentExpression	s_len = precision		772778	0		=			
ANR	774846	Identifier	s_len		772778	0					
ANR	774847	Identifier	precision		772778	1					
ANR	774848	ElseStatement	else		772778	0					
ANR	774849	CompoundStatement		504:25:17957:17957	772778	0					
ANR	774850	ExpressionStatement	s = S_NULL	1235:24:38755:38765	772778	0	True				
ANR	774851	AssignmentExpression	s = S_NULL		772778	0		=			
ANR	774852	Identifier	s		772778	0					
ANR	774853	Identifier	S_NULL		772778	1					
ANR	774854	ExpressionStatement	s_len = S_NULL_LEN	1236:24:38791:38809	772778	1	True				
ANR	774855	AssignmentExpression	s_len = S_NULL_LEN		772778	0		=			
ANR	774856	Identifier	s_len		772778	0					
ANR	774857	Identifier	S_NULL_LEN		772778	1					
ANR	774858	ExpressionStatement	pad_char = ' '	1238:20:38853:38867	772778	13	True				
ANR	774859	AssignmentExpression	pad_char = ' '		772778	0		=			
ANR	774860	Identifier	pad_char		772778	0					
ANR	774861	PrimaryExpression	' '		772778	1					
ANR	774862	BreakStatement	break ;	1240:16:38903:38908	772778	9	True				
ANR	774863	Label	case 'm' :	1243:16:38985:38993	772778	10	True				
ANR	774864	CompoundStatement		515:20:18261:18278	772778	11					
ANR	774865	IdentifierDeclStatement	apr_status_t * mrv ;	1245:20:39033:39050	772778	0	True				
ANR	774866	IdentifierDecl	* mrv		772778	0					
ANR	774867	IdentifierDeclType	apr_status_t *		772778	0					
ANR	774868	Identifier	mrv		772778	1					
ANR	774869	Statement	mrv	1247:20:39073:39075	772778	1	True				
ANR	774870	Statement	=	1247:24:39077:39077	772778	2	True				
ANR	774871	Statement	va_arg	1247:26:39079:39084	772778	3	True				
ANR	774872	Statement	(	1247:32:39085:39085	772778	4	True				
ANR	774873	Statement	ap	1247:33:39086:39087	772778	5	True				
ANR	774874	Statement	","	1247:35:39088:39088	772778	6	True				
ANR	774875	Statement	apr_status_t	1247:37:39090:39101	772778	7	True				
ANR	774876	Statement	*	1247:50:39103:39103	772778	8	True				
ANR	774877	Statement	)	1247:51:39104:39104	772778	9	True				
ANR	774878	ExpressionStatement		1247:52:39105:39105	772778	10	True				
ANR	774879	IfStatement	if ( mrv != NULL )		772778	11					
ANR	774880	Condition	mrv != NULL	1248:24:39131:39141	772778	0	True				
ANR	774881	EqualityExpression	mrv != NULL		772778	0		!=			
ANR	774882	Identifier	mrv		772778	0					
ANR	774883	Identifier	NULL		772778	1					
ANR	774884	CompoundStatement		518:37:18372:18372	772778	1					
ANR	774885	ExpressionStatement	"s = apr_strerror ( * mrv , num_buf , NUM_BUF_SIZE - 1 )"	1249:24:39170:39217	772778	0	True				
ANR	774886	AssignmentExpression	"s = apr_strerror ( * mrv , num_buf , NUM_BUF_SIZE - 1 )"		772778	0		=			
ANR	774887	Identifier	s		772778	0					
ANR	774888	CallExpression	"apr_strerror ( * mrv , num_buf , NUM_BUF_SIZE - 1 )"		772778	1					
ANR	774889	Callee	apr_strerror		772778	0					
ANR	774890	Identifier	apr_strerror		772778	0					
ANR	774891	ArgumentList	* mrv		772778	1					
ANR	774892	Argument	* mrv		772778	0					
ANR	774893	UnaryOperationExpression	* mrv		772778	0					
ANR	774894	UnaryOperator	*		772778	0					
ANR	774895	Identifier	mrv		772778	1					
ANR	774896	Argument	num_buf		772778	1					
ANR	774897	Identifier	num_buf		772778	0					
ANR	774898	Argument	NUM_BUF_SIZE - 1		772778	2					
ANR	774899	AdditiveExpression	NUM_BUF_SIZE - 1		772778	0		-			
ANR	774900	Identifier	NUM_BUF_SIZE		772778	0					
ANR	774901	PrimaryExpression	1		772778	1					
ANR	774902	ExpressionStatement	s_len = strlen ( s )	1250:24:39243:39260	772778	1	True				
ANR	774903	AssignmentExpression	s_len = strlen ( s )		772778	0		=			
ANR	774904	Identifier	s_len		772778	0					
ANR	774905	CallExpression	strlen ( s )		772778	1					
ANR	774906	Callee	strlen		772778	0					
ANR	774907	Identifier	strlen		772778	0					
ANR	774908	ArgumentList	s		772778	1					
ANR	774909	Argument	s		772778	0					
ANR	774910	Identifier	s		772778	0					
ANR	774911	ElseStatement	else		772778	0					
ANR	774912	CompoundStatement		522:25:18537:18537	772778	0					
ANR	774913	ExpressionStatement	s = S_NULL	1253:24:39335:39345	772778	0	True				
ANR	774914	AssignmentExpression	s = S_NULL		772778	0		=			
ANR	774915	Identifier	s		772778	0					
ANR	774916	Identifier	S_NULL		772778	1					
ANR	774917	ExpressionStatement	s_len = S_NULL_LEN	1254:24:39371:39389	772778	1	True				
ANR	774918	AssignmentExpression	s_len = S_NULL_LEN		772778	0		=			
ANR	774919	Identifier	s_len		772778	0					
ANR	774920	Identifier	S_NULL_LEN		772778	1					
ANR	774921	ExpressionStatement	pad_char = ' '	1256:20:39433:39447	772778	12	True				
ANR	774922	AssignmentExpression	pad_char = ' '		772778	0		=			
ANR	774923	Identifier	pad_char		772778	0					
ANR	774924	PrimaryExpression	' '		772778	1					
ANR	774925	BreakStatement	break ;	1258:16:39483:39488	772778	12	True				
ANR	774926	Label	case 'T' :	1261:16:39514:39522	772778	13	True				
ANR	774927	CompoundStatement		534:20:18810:18830	772778	14					
ANR	774928	IdentifierDeclStatement	apr_os_thread_t * tid ;	1264:20:39582:39602	772778	0	True				
ANR	774929	IdentifierDecl	* tid		772778	0					
ANR	774930	IdentifierDeclType	apr_os_thread_t *		772778	0					
ANR	774931	Identifier	tid		772778	1					
ANR	774932	Statement	tid	1266:20:39625:39627	772778	1	True				
ANR	774933	Statement	=	1266:24:39629:39629	772778	2	True				
ANR	774934	Statement	va_arg	1266:26:39631:39636	772778	3	True				
ANR	774935	Statement	(	1266:32:39637:39637	772778	4	True				
ANR	774936	Statement	ap	1266:33:39638:39639	772778	5	True				
ANR	774937	Statement	","	1266:35:39640:39640	772778	6	True				
ANR	774938	Statement	apr_os_thread_t	1266:37:39642:39656	772778	7	True				
ANR	774939	Statement	*	1266:53:39658:39658	772778	8	True				
ANR	774940	Statement	)	1266:54:39659:39659	772778	9	True				
ANR	774941	ExpressionStatement		1266:55:39660:39660	772778	10	True				
ANR	774942	IfStatement	if ( tid != NULL )		772778	11					
ANR	774943	Condition	tid != NULL	1267:24:39686:39696	772778	0	True				
ANR	774944	EqualityExpression	tid != NULL		772778	0		!=			
ANR	774945	Identifier	tid		772778	0					
ANR	774946	Identifier	NULL		772778	1					
ANR	774947	CompoundStatement		537:37:18927:18927	772778	1					
ANR	774948	ExpressionStatement	"s = conv_os_thread_t ( tid , & num_buf [ NUM_BUF_SIZE ] , & s_len )"	1268:24:39725:39782	772778	0	True				
ANR	774949	AssignmentExpression	"s = conv_os_thread_t ( tid , & num_buf [ NUM_BUF_SIZE ] , & s_len )"		772778	0		=			
ANR	774950	Identifier	s		772778	0					
ANR	774951	CallExpression	"conv_os_thread_t ( tid , & num_buf [ NUM_BUF_SIZE ] , & s_len )"		772778	1					
ANR	774952	Callee	conv_os_thread_t		772778	0					
ANR	774953	Identifier	conv_os_thread_t		772778	0					
ANR	774954	ArgumentList	tid		772778	1					
ANR	774955	Argument	tid		772778	0					
ANR	774956	Identifier	tid		772778	0					
ANR	774957	Argument	& num_buf [ NUM_BUF_SIZE ]		772778	1					
ANR	774958	UnaryOperationExpression	& num_buf [ NUM_BUF_SIZE ]		772778	0					
ANR	774959	UnaryOperator	&		772778	0					
ANR	774960	ArrayIndexing	num_buf [ NUM_BUF_SIZE ]		772778	1					
ANR	774961	Identifier	num_buf		772778	0					
ANR	774962	Identifier	NUM_BUF_SIZE		772778	1					
ANR	774963	Argument	& s_len		772778	2					
ANR	774964	UnaryOperationExpression	& s_len		772778	0					
ANR	774965	UnaryOperator	&		772778	0					
ANR	774966	Identifier	s_len		772778	1					
ANR	774967	IfStatement	if ( adjust_precision && precision < s_len )		772778	1					
ANR	774968	Condition	adjust_precision && precision < s_len	1269:28:39812:39848	772778	0	True				
ANR	774969	AndExpression	adjust_precision && precision < s_len		772778	0		&&			
ANR	774970	Identifier	adjust_precision		772778	0					
ANR	774971	RelationalExpression	precision < s_len		772778	1		<			
ANR	774972	Identifier	precision		772778	0					
ANR	774973	Identifier	s_len		772778	1					
ANR	774974	ExpressionStatement	s_len = precision	1270:28:39879:39896	772778	1	True				
ANR	774975	AssignmentExpression	s_len = precision		772778	0		=			
ANR	774976	Identifier	s_len		772778	0					
ANR	774977	Identifier	precision		772778	1					
ANR	774978	ElseStatement	else		772778	0					
ANR	774979	CompoundStatement		542:25:19173:19173	772778	0					
ANR	774980	ExpressionStatement	s = S_NULL	1273:24:39971:39981	772778	0	True				
ANR	774981	AssignmentExpression	s = S_NULL		772778	0		=			
ANR	774982	Identifier	s		772778	0					
ANR	774983	Identifier	S_NULL		772778	1					
ANR	774984	ExpressionStatement	s_len = S_NULL_LEN	1274:24:40007:40025	772778	1	True				
ANR	774985	AssignmentExpression	s_len = S_NULL_LEN		772778	0		=			
ANR	774986	Identifier	s_len		772778	0					
ANR	774987	Identifier	S_NULL_LEN		772778	1					
ANR	774988	ExpressionStatement	pad_char = ' '	1276:20:40069:40083	772778	12	True				
ANR	774989	AssignmentExpression	pad_char = ' '		772778	0		=			
ANR	774990	Identifier	pad_char		772778	0					
ANR	774991	PrimaryExpression	' '		772778	1					
ANR	774992	BreakStatement	break ;	1284:20:40280:40285	772778	15	True				
ANR	774993	Label	case 't' :	1286:16:40304:40312	772778	16	True				
ANR	774994	CompoundStatement		559:20:19600:19620	772778	17					
ANR	774995	IdentifierDeclStatement	apr_os_thread_t * tid ;	1289:20:40372:40392	772778	0	True				
ANR	774996	IdentifierDecl	* tid		772778	0					
ANR	774997	IdentifierDeclType	apr_os_thread_t *		772778	0					
ANR	774998	Identifier	tid		772778	1					
ANR	774999	Statement	tid	1291:20:40415:40417	772778	1	True				
ANR	775000	Statement	=	1291:24:40419:40419	772778	2	True				
ANR	775001	Statement	va_arg	1291:26:40421:40426	772778	3	True				
ANR	775002	Statement	(	1291:32:40427:40427	772778	4	True				
ANR	775003	Statement	ap	1291:33:40428:40429	772778	5	True				
ANR	775004	Statement	","	1291:35:40430:40430	772778	6	True				
ANR	775005	Statement	apr_os_thread_t	1291:37:40432:40446	772778	7	True				
ANR	775006	Statement	*	1291:53:40448:40448	772778	8	True				
ANR	775007	Statement	)	1291:54:40449:40449	772778	9	True				
ANR	775008	ExpressionStatement		1291:55:40450:40450	772778	10	True				
ANR	775009	IfStatement	if ( tid != NULL )		772778	11					
ANR	775010	Condition	tid != NULL	1292:24:40476:40486	772778	0	True				
ANR	775011	EqualityExpression	tid != NULL		772778	0		!=			
ANR	775012	Identifier	tid		772778	0					
ANR	775013	Identifier	NULL		772778	1					
ANR	775014	CompoundStatement		562:37:19717:19717	772778	1					
ANR	775015	ExpressionStatement	"s = conv_os_thread_t_hex ( tid , & num_buf [ NUM_BUF_SIZE ] , & s_len )"	1293:24:40515:40576	772778	0	True				
ANR	775016	AssignmentExpression	"s = conv_os_thread_t_hex ( tid , & num_buf [ NUM_BUF_SIZE ] , & s_len )"		772778	0		=			
ANR	775017	Identifier	s		772778	0					
ANR	775018	CallExpression	"conv_os_thread_t_hex ( tid , & num_buf [ NUM_BUF_SIZE ] , & s_len )"		772778	1					
ANR	775019	Callee	conv_os_thread_t_hex		772778	0					
ANR	775020	Identifier	conv_os_thread_t_hex		772778	0					
ANR	775021	ArgumentList	tid		772778	1					
ANR	775022	Argument	tid		772778	0					
ANR	775023	Identifier	tid		772778	0					
ANR	775024	Argument	& num_buf [ NUM_BUF_SIZE ]		772778	1					
ANR	775025	UnaryOperationExpression	& num_buf [ NUM_BUF_SIZE ]		772778	0					
ANR	775026	UnaryOperator	&		772778	0					
ANR	775027	ArrayIndexing	num_buf [ NUM_BUF_SIZE ]		772778	1					
ANR	775028	Identifier	num_buf		772778	0					
ANR	775029	Identifier	NUM_BUF_SIZE		772778	1					
ANR	775030	Argument	& s_len		772778	2					
ANR	775031	UnaryOperationExpression	& s_len		772778	0					
ANR	775032	UnaryOperator	&		772778	0					
ANR	775033	Identifier	s_len		772778	1					
ANR	775034	IfStatement	if ( adjust_precision && precision < s_len )		772778	1					
ANR	775035	Condition	adjust_precision && precision < s_len	1294:28:40606:40642	772778	0	True				
ANR	775036	AndExpression	adjust_precision && precision < s_len		772778	0		&&			
ANR	775037	Identifier	adjust_precision		772778	0					
ANR	775038	RelationalExpression	precision < s_len		772778	1		<			
ANR	775039	Identifier	precision		772778	0					
ANR	775040	Identifier	s_len		772778	1					
ANR	775041	ExpressionStatement	s_len = precision	1295:28:40673:40690	772778	1	True				
ANR	775042	AssignmentExpression	s_len = precision		772778	0		=			
ANR	775043	Identifier	s_len		772778	0					
ANR	775044	Identifier	precision		772778	1					
ANR	775045	ElseStatement	else		772778	0					
ANR	775046	CompoundStatement		567:25:19967:19967	772778	0					
ANR	775047	ExpressionStatement	s = S_NULL	1298:24:40765:40775	772778	0	True				
ANR	775048	AssignmentExpression	s = S_NULL		772778	0		=			
ANR	775049	Identifier	s		772778	0					
ANR	775050	Identifier	S_NULL		772778	1					
ANR	775051	ExpressionStatement	s_len = S_NULL_LEN	1299:24:40801:40819	772778	1	True				
ANR	775052	AssignmentExpression	s_len = S_NULL_LEN		772778	0		=			
ANR	775053	Identifier	s_len		772778	0					
ANR	775054	Identifier	S_NULL_LEN		772778	1					
ANR	775055	ExpressionStatement	pad_char = ' '	1301:20:40863:40877	772778	12	True				
ANR	775056	AssignmentExpression	pad_char = ' '		772778	0		=			
ANR	775057	Identifier	pad_char		772778	0					
ANR	775058	PrimaryExpression	' '		772778	1					
ANR	775059	BreakStatement	break ;	1309:20:41074:41079	772778	18	True				
ANR	775060	Label	case 'B' :	1312:16:41110:41118	772778	19	True				
ANR	775061	Label	case 'F' :	1313:16:41136:41144	772778	20	True				
ANR	775062	Label	case 'S' :	1314:16:41162:41170	772778	21	True				
ANR	775063	CompoundStatement		587:20:20471:20489	772778	22					
ANR	775064	IdentifierDeclStatement	char buf [ 5 ] ;	1316:20:41210:41221	772778	0	True				
ANR	775065	IdentifierDecl	buf [ 5 ]		772778	0					
ANR	775066	IdentifierDeclType	char [ 5 ]		772778	0					
ANR	775067	Identifier	buf		772778	1					
ANR	775068	PrimaryExpression	5		772778	2					
ANR	775069	IdentifierDeclStatement	apr_off_t size = 0 ;	1317:20:41243:41261	772778	1	True				
ANR	775070	IdentifierDecl	size = 0		772778	0					
ANR	775071	IdentifierDeclType	apr_off_t		772778	0					
ANR	775072	Identifier	size		772778	1					
ANR	775073	AssignmentExpression	size = 0		772778	2		=			
ANR	775074	Identifier	size		772778	0					
ANR	775075	PrimaryExpression	0		772778	1					
ANR	775076	IfStatement	if ( * fmt == 'B' )		772778	2					
ANR	775077	Condition	* fmt == 'B'	1319:24:41288:41298	772778	0	True				
ANR	775078	EqualityExpression	* fmt == 'B'		772778	0		==			
ANR	775079	UnaryOperationExpression	* fmt		772778	0					
ANR	775080	UnaryOperator	*		772778	0					
ANR	775081	Identifier	fmt		772778	1					
ANR	775082	PrimaryExpression	'B'		772778	1					
ANR	775083	CompoundStatement		589:37:20529:20529	772778	1					
ANR	775084	Statement	apr_uint32_t	1320:24:41327:41338	772778	0	True				
ANR	775085	Statement	*	1320:37:41340:41340	772778	1	True				
ANR	775086	Statement	arg	1320:38:41341:41343	772778	2	True				
ANR	775087	Statement	=	1320:42:41345:41345	772778	3	True				
ANR	775088	Statement	va_arg	1320:44:41347:41352	772778	4	True				
ANR	775089	Statement	(	1320:50:41353:41353	772778	5	True				
ANR	775090	Statement	ap	1320:51:41354:41355	772778	6	True				
ANR	775091	Statement	","	1320:53:41356:41356	772778	7	True				
ANR	775092	Statement	apr_uint32_t	1320:55:41358:41369	772778	8	True				
ANR	775093	Statement	*	1320:68:41371:41371	772778	9	True				
ANR	775094	Statement	)	1320:69:41372:41372	772778	10	True				
ANR	775095	ExpressionStatement		1320:70:41373:41373	772778	11	True				
ANR	775096	ExpressionStatement	size = ( arg ) ? * arg : 0	1321:24:41399:41422	772778	12	True				
ANR	775097	AssignmentExpression	size = ( arg ) ? * arg : 0		772778	0		=			
ANR	775098	Identifier	size		772778	0					
ANR	775099	ConditionalExpression	( arg ) ? * arg : 0		772778	1					
ANR	775100	Condition	arg		772778	0					
ANR	775101	Identifier	arg		772778	0					
ANR	775102	UnaryOperationExpression	* arg		772778	1					
ANR	775103	UnaryOperator	*		772778	0					
ANR	775104	Identifier	arg		772778	1					
ANR	775105	PrimaryExpression	0		772778	2					
ANR	775106	ElseStatement	else		772778	0					
ANR	775107	IfStatement	if ( * fmt == 'F' )		772778	0					
ANR	775108	Condition	* fmt == 'F'	1323:29:41475:41485	772778	0	True				
ANR	775109	EqualityExpression	* fmt == 'F'		772778	0		==			
ANR	775110	UnaryOperationExpression	* fmt		772778	0					
ANR	775111	UnaryOperator	*		772778	0					
ANR	775112	Identifier	fmt		772778	1					
ANR	775113	PrimaryExpression	'F'		772778	1					
ANR	775114	CompoundStatement		593:42:20716:20716	772778	1					
ANR	775115	Statement	apr_off_t	1324:24:41514:41522	772778	0	True				
ANR	775116	Statement	*	1324:34:41524:41524	772778	1	True				
ANR	775117	Statement	arg	1324:35:41525:41527	772778	2	True				
ANR	775118	Statement	=	1324:39:41529:41529	772778	3	True				
ANR	775119	Statement	va_arg	1324:41:41531:41536	772778	4	True				
ANR	775120	Statement	(	1324:47:41537:41537	772778	5	True				
ANR	775121	Statement	ap	1324:48:41538:41539	772778	6	True				
ANR	775122	Statement	","	1324:50:41540:41540	772778	7	True				
ANR	775123	Statement	apr_off_t	1324:52:41542:41550	772778	8	True				
ANR	775124	Statement	*	1324:62:41552:41552	772778	9	True				
ANR	775125	Statement	)	1324:63:41553:41553	772778	10	True				
ANR	775126	ExpressionStatement		1324:64:41554:41554	772778	11	True				
ANR	775127	ExpressionStatement	size = ( arg ) ? * arg : 0	1325:24:41580:41603	772778	12	True				
ANR	775128	AssignmentExpression	size = ( arg ) ? * arg : 0		772778	0		=			
ANR	775129	Identifier	size		772778	0					
ANR	775130	ConditionalExpression	( arg ) ? * arg : 0		772778	1					
ANR	775131	Condition	arg		772778	0					
ANR	775132	Identifier	arg		772778	0					
ANR	775133	UnaryOperationExpression	* arg		772778	1					
ANR	775134	UnaryOperator	*		772778	0					
ANR	775135	Identifier	arg		772778	1					
ANR	775136	PrimaryExpression	0		772778	2					
ANR	775137	ElseStatement	else		772778	0					
ANR	775138	CompoundStatement		597:25:20880:20880	772778	0					
ANR	775139	Statement	apr_size_t	1328:24:41678:41687	772778	0	True				
ANR	775140	Statement	*	1328:35:41689:41689	772778	1	True				
ANR	775141	Statement	arg	1328:36:41690:41692	772778	2	True				
ANR	775142	Statement	=	1328:40:41694:41694	772778	3	True				
ANR	775143	Statement	va_arg	1328:42:41696:41701	772778	4	True				
ANR	775144	Statement	(	1328:48:41702:41702	772778	5	True				
ANR	775145	Statement	ap	1328:49:41703:41704	772778	6	True				
ANR	775146	Statement	","	1328:51:41705:41705	772778	7	True				
ANR	775147	Statement	apr_size_t	1328:53:41707:41716	772778	8	True				
ANR	775148	Statement	*	1328:64:41718:41718	772778	9	True				
ANR	775149	Statement	)	1328:65:41719:41719	772778	10	True				
ANR	775150	ExpressionStatement		1328:66:41720:41720	772778	11	True				
ANR	775151	ExpressionStatement	size = ( arg ) ? * arg : 0	1329:24:41746:41769	772778	12	True				
ANR	775152	AssignmentExpression	size = ( arg ) ? * arg : 0		772778	0		=			
ANR	775153	Identifier	size		772778	0					
ANR	775154	ConditionalExpression	( arg ) ? * arg : 0		772778	1					
ANR	775155	Condition	arg		772778	0					
ANR	775156	Identifier	arg		772778	0					
ANR	775157	UnaryOperationExpression	* arg		772778	1					
ANR	775158	UnaryOperator	*		772778	0					
ANR	775159	Identifier	arg		772778	1					
ANR	775160	PrimaryExpression	0		772778	2					
ANR	775161	ExpressionStatement	"s = apr_strfsize ( size , buf )"	1332:20:41814:41841	772778	3	True				
ANR	775162	AssignmentExpression	"s = apr_strfsize ( size , buf )"		772778	0		=			
ANR	775163	Identifier	s		772778	0					
ANR	775164	CallExpression	"apr_strfsize ( size , buf )"		772778	1					
ANR	775165	Callee	apr_strfsize		772778	0					
ANR	775166	Identifier	apr_strfsize		772778	0					
ANR	775167	ArgumentList	size		772778	1					
ANR	775168	Argument	size		772778	0					
ANR	775169	Identifier	size		772778	0					
ANR	775170	Argument	buf		772778	1					
ANR	775171	Identifier	buf		772778	0					
ANR	775172	ExpressionStatement	s_len = strlen ( s )	1333:20:41863:41880	772778	4	True				
ANR	775173	AssignmentExpression	s_len = strlen ( s )		772778	0		=			
ANR	775174	Identifier	s_len		772778	0					
ANR	775175	CallExpression	strlen ( s )		772778	1					
ANR	775176	Callee	strlen		772778	0					
ANR	775177	Identifier	strlen		772778	0					
ANR	775178	ArgumentList	s		772778	1					
ANR	775179	Argument	s		772778	0					
ANR	775180	Identifier	s		772778	0					
ANR	775181	ExpressionStatement	pad_char = ' '	1334:20:41902:41916	772778	5	True				
ANR	775182	AssignmentExpression	pad_char = ' '		772778	0		=			
ANR	775183	Identifier	pad_char		772778	0					
ANR	775184	PrimaryExpression	' '		772778	1					
ANR	775185	BreakStatement	break ;	1336:16:41952:41957	772778	23	True				
ANR	775186	Label	case NUL :	1339:16:41983:41991	772778	24	True				
ANR	775187	Identifier	NUL		772778	0					
ANR	775188	IfStatement	if ( sizeof ( void * ) <= sizeof ( apr_uint64_t ) )		772778	25					
ANR	775189	Condition	sizeof ( void * ) <= sizeof ( apr_uint64_t )	1342:24:42112:42149	772778	0	True				
ANR	775190	RelationalExpression	sizeof ( void * ) <= sizeof ( apr_uint64_t )		772778	0		<=			
ANR	775191	SizeofExpression	sizeof ( void * )		772778	0					
ANR	775192	Sizeof	sizeof		772778	0					
ANR	775193	SizeofOperand	void *		772778	1					
ANR	775194	SizeofExpression	sizeof ( apr_uint64_t )		772778	1					
ANR	775195	Sizeof	sizeof		772778	0					
ANR	775196	SizeofOperand	apr_uint64_t		772778	1					
ANR	775197	CompoundStatement		612:64:21380:21380	772778	1					
ANR	775198	Statement	ui_quad	1343:24:42178:42184	772778	0	True				
ANR	775199	Statement	=	1343:32:42186:42186	772778	1	True				
ANR	775200	Statement	(	1343:34:42188:42188	772778	2	True				
ANR	775201	Statement	apr_uint64_t	1343:35:42189:42200	772778	3	True				
ANR	775202	Statement	)	1343:47:42201:42201	772778	4	True				
ANR	775203	Statement	va_arg	1343:49:42203:42208	772778	5	True				
ANR	775204	Statement	(	1343:55:42209:42209	772778	6	True				
ANR	775205	Statement	ap	1343:56:42210:42211	772778	7	True				
ANR	775206	Statement	","	1343:58:42212:42212	772778	8	True				
ANR	775207	Statement	void	1343:60:42214:42217	772778	9	True				
ANR	775208	Statement	*	1343:65:42219:42219	772778	10	True				
ANR	775209	Statement	)	1343:66:42220:42220	772778	11	True				
ANR	775210	ExpressionStatement		1343:67:42221:42221	772778	12	True				
ANR	775211	ExpressionStatement	"s = conv_p2_quad ( ui_quad , 4 , 'x' , & num_buf [ NUM_BUF_SIZE ] , & s_len )"	1344:24:42247:42344	772778	13	True				
ANR	775212	AssignmentExpression	"s = conv_p2_quad ( ui_quad , 4 , 'x' , & num_buf [ NUM_BUF_SIZE ] , & s_len )"		772778	0		=			
ANR	775213	Identifier	s		772778	0					
ANR	775214	CallExpression	"conv_p2_quad ( ui_quad , 4 , 'x' , & num_buf [ NUM_BUF_SIZE ] , & s_len )"		772778	1					
ANR	775215	Callee	conv_p2_quad		772778	0					
ANR	775216	Identifier	conv_p2_quad		772778	0					
ANR	775217	ArgumentList	ui_quad		772778	1					
ANR	775218	Argument	ui_quad		772778	0					
ANR	775219	Identifier	ui_quad		772778	0					
ANR	775220	Argument	4		772778	1					
ANR	775221	PrimaryExpression	4		772778	0					
ANR	775222	Argument	'x'		772778	2					
ANR	775223	PrimaryExpression	'x'		772778	0					
ANR	775224	Argument	& num_buf [ NUM_BUF_SIZE ]		772778	3					
ANR	775225	UnaryOperationExpression	& num_buf [ NUM_BUF_SIZE ]		772778	0					
ANR	775226	UnaryOperator	&		772778	0					
ANR	775227	ArrayIndexing	num_buf [ NUM_BUF_SIZE ]		772778	1					
ANR	775228	Identifier	num_buf		772778	0					
ANR	775229	Identifier	NUM_BUF_SIZE		772778	1					
ANR	775230	Argument	& s_len		772778	4					
ANR	775231	UnaryOperationExpression	& s_len		772778	0					
ANR	775232	UnaryOperator	&		772778	0					
ANR	775233	Identifier	s_len		772778	1					
ANR	775234	ElseStatement	else		772778	0					
ANR	775235	CompoundStatement		624:25:21907:21907	772778	0					
ANR	775236	ExpressionStatement	"s = ( char * ) ""%p"""	1355:24:42705:42721	772778	0	True				
ANR	775237	AssignmentExpression	"s = ( char * ) ""%p"""		772778	0		=			
ANR	775238	Identifier	s		772778	0					
ANR	775239	CastExpression	"( char * ) ""%p"""		772778	1					
ANR	775240	CastTarget	char *		772778	0					
ANR	775241	PrimaryExpression	"""%p"""		772778	1					
ANR	775242	ExpressionStatement	s_len = 2	1356:24:42747:42756	772778	1	True				
ANR	775243	AssignmentExpression	s_len = 2		772778	0		=			
ANR	775244	Identifier	s_len		772778	0					
ANR	775245	PrimaryExpression	2		772778	1					
ANR	775246	ExpressionStatement	prefix_char = NUL	1357:24:42782:42799	772778	2	True				
ANR	775247	AssignmentExpression	prefix_char = NUL		772778	0		=			
ANR	775248	Identifier	prefix_char		772778	0					
ANR	775249	Identifier	NUL		772778	1					
ANR	775250	ExpressionStatement	pad_char = ' '	1359:20:42843:42857	772778	26	True				
ANR	775251	AssignmentExpression	pad_char = ' '		772778	0		=			
ANR	775252	Identifier	pad_char		772778	0					
ANR	775253	PrimaryExpression	' '		772778	1					
ANR	775254	ExpressionStatement	fmt --	1360:20:42879:42884	772778	27	True				
ANR	775255	PostIncDecOperationExpression	fmt --		772778	0					
ANR	775256	Identifier	fmt		772778	0					
ANR	775257	IncDec	--		772778	1					
ANR	775258	BreakStatement	break ;	1361:20:42906:42911	772778	28	True				
ANR	775259	Label	default :	1363:16:42930:42937	772778	29	True				
ANR	775260	Identifier	default		772778	0					
ANR	775261	ExpressionStatement	"s = ( char * ) ""bogus %p"""	1364:20:42959:42981	772778	30	True				
ANR	775262	AssignmentExpression	"s = ( char * ) ""bogus %p"""		772778	0		=			
ANR	775263	Identifier	s		772778	0					
ANR	775264	CastExpression	"( char * ) ""bogus %p"""		772778	1					
ANR	775265	CastTarget	char *		772778	0					
ANR	775266	PrimaryExpression	"""bogus %p"""		772778	1					
ANR	775267	ExpressionStatement	s_len = 8	1365:20:43003:43012	772778	31	True				
ANR	775268	AssignmentExpression	s_len = 8		772778	0		=			
ANR	775269	Identifier	s_len		772778	0					
ANR	775270	PrimaryExpression	8		772778	1					
ANR	775271	ExpressionStatement	prefix_char = NUL	1366:20:43034:43051	772778	32	True				
ANR	775272	AssignmentExpression	prefix_char = NUL		772778	0		=			
ANR	775273	Identifier	prefix_char		772778	0					
ANR	775274	Identifier	NUL		772778	1					
ANR	775275	Statement	(	1367:20:43073:43073	772778	33	True				
ANR	775276	Statement	void	1367:21:43074:43077	772778	34	True				
ANR	775277	Statement	)	1367:25:43078:43078	772778	35	True				
ANR	775278	Statement	va_arg	1367:26:43079:43084	772778	36	True				
ANR	775279	Statement	(	1367:32:43085:43085	772778	37	True				
ANR	775280	Statement	ap	1367:33:43086:43087	772778	38	True				
ANR	775281	Statement	","	1367:35:43088:43088	772778	39	True				
ANR	775282	Statement	void	1367:37:43090:43093	772778	40	True				
ANR	775283	Statement	*	1367:42:43095:43095	772778	41	True				
ANR	775284	Statement	)	1367:43:43096:43096	772778	42	True				
ANR	775285	ExpressionStatement		1367:44:43097:43097	772778	43	True				
ANR	775286	BreakStatement	break ;	1368:20:43162:43167	772778	44	True				
ANR	775287	BreakStatement	break ;	1370:16:43203:43208	772778	114	True				
ANR	775288	Label	case NUL :	1372:12:43223:43231	772778	115	True				
ANR	775289	Identifier	NUL		772778	0					
ANR	775290	ContinueStatement	continue ;	1377:16:43387:43395	772778	116	True				
ANR	775291	Label	default :	1390:12:43968:43975	772778	117	True				
ANR	775292	Identifier	default		772778	0					
ANR	775293	ExpressionStatement	char_buf [ 0 ] = '%'	1391:16:43993:44010	772778	118	True				
ANR	775294	AssignmentExpression	char_buf [ 0 ] = '%'		772778	0		=			
ANR	775295	ArrayIndexing	char_buf [ 0 ]		772778	0					
ANR	775296	Identifier	char_buf		772778	0					
ANR	775297	PrimaryExpression	0		772778	1					
ANR	775298	PrimaryExpression	'%'		772778	1					
ANR	775299	ExpressionStatement	char_buf [ 1 ] = * fmt	1392:16:44028:44046	772778	119	True				
ANR	775300	AssignmentExpression	char_buf [ 1 ] = * fmt		772778	0		=			
ANR	775301	ArrayIndexing	char_buf [ 1 ]		772778	0					
ANR	775302	Identifier	char_buf		772778	0					
ANR	775303	PrimaryExpression	1		772778	1					
ANR	775304	UnaryOperationExpression	* fmt		772778	1					
ANR	775305	UnaryOperator	*		772778	0					
ANR	775306	Identifier	fmt		772778	1					
ANR	775307	ExpressionStatement	s = char_buf	1393:16:44064:44076	772778	120	True				
ANR	775308	AssignmentExpression	s = char_buf		772778	0		=			
ANR	775309	Identifier	s		772778	0					
ANR	775310	Identifier	char_buf		772778	1					
ANR	775311	ExpressionStatement	s_len = 2	1394:16:44094:44103	772778	121	True				
ANR	775312	AssignmentExpression	s_len = 2		772778	0		=			
ANR	775313	Identifier	s_len		772778	0					
ANR	775314	PrimaryExpression	2		772778	1					
ANR	775315	ExpressionStatement	pad_char = ' '	1395:16:44121:44135	772778	122	True				
ANR	775316	AssignmentExpression	pad_char = ' '		772778	0		=			
ANR	775317	Identifier	pad_char		772778	0					
ANR	775318	PrimaryExpression	' '		772778	1					
ANR	775319	BreakStatement	break ;	1396:16:44153:44158	772778	123	True				
ANR	775320	IfStatement	if ( prefix_char != NUL && s != S_NULL && s != char_buf )		772778	9					
ANR	775321	Condition	prefix_char != NUL && s != S_NULL && s != char_buf	1399:16:44191:44240	772778	0	True				
ANR	775322	AndExpression	prefix_char != NUL && s != S_NULL && s != char_buf		772778	0		&&			
ANR	775323	EqualityExpression	prefix_char != NUL		772778	0		!=			
ANR	775324	Identifier	prefix_char		772778	0					
ANR	775325	Identifier	NUL		772778	1					
ANR	775326	AndExpression	s != S_NULL && s != char_buf		772778	1		&&			
ANR	775327	EqualityExpression	s != S_NULL		772778	0		!=			
ANR	775328	Identifier	s		772778	0					
ANR	775329	Identifier	S_NULL		772778	1					
ANR	775330	EqualityExpression	s != char_buf		772778	1		!=			
ANR	775331	Identifier	s		772778	0					
ANR	775332	Identifier	char_buf		772778	1					
ANR	775333	CompoundStatement		669:68:23471:23471	772778	1					
ANR	775334	ExpressionStatement	* -- s = prefix_char	1400:16:44261:44279	772778	0	True				
ANR	775335	AssignmentExpression	* -- s = prefix_char		772778	0		=			
ANR	775336	UnaryOperationExpression	* -- s		772778	0					
ANR	775337	UnaryOperator	*		772778	0					
ANR	775338	UnaryExpression	-- s		772778	1					
ANR	775339	IncDec	--		772778	0					
ANR	775340	Identifier	s		772778	1					
ANR	775341	Identifier	prefix_char		772778	1					
ANR	775342	ExpressionStatement	s_len ++	1401:16:44297:44304	772778	1	True				
ANR	775343	PostIncDecOperationExpression	s_len ++		772778	0					
ANR	775344	Identifier	s_len		772778	0					
ANR	775345	IncDec	++		772778	1					
ANR	775346	IfStatement	if ( adjust_width && adjust == RIGHT && min_width > s_len )		772778	10					
ANR	775347	Condition	adjust_width && adjust == RIGHT && min_width > s_len	1404:16:44337:44388	772778	0	True				
ANR	775348	AndExpression	adjust_width && adjust == RIGHT && min_width > s_len		772778	0		&&			
ANR	775349	Identifier	adjust_width		772778	0					
ANR	775350	AndExpression	adjust == RIGHT && min_width > s_len		772778	1		&&			
ANR	775351	EqualityExpression	adjust == RIGHT		772778	0		==			
ANR	775352	Identifier	adjust		772778	0					
ANR	775353	Identifier	RIGHT		772778	1					
ANR	775354	RelationalExpression	min_width > s_len		772778	1		>			
ANR	775355	Identifier	min_width		772778	0					
ANR	775356	Identifier	s_len		772778	1					
ANR	775357	CompoundStatement		674:70:23619:23619	772778	1					
ANR	775358	IfStatement	if ( pad_char == '0' && prefix_char != NUL )		772778	0					
ANR	775359	Condition	pad_char == '0' && prefix_char != NUL	1405:20:44413:44449	772778	0	True				
ANR	775360	AndExpression	pad_char == '0' && prefix_char != NUL		772778	0		&&			
ANR	775361	EqualityExpression	pad_char == '0'		772778	0		==			
ANR	775362	Identifier	pad_char		772778	0					
ANR	775363	PrimaryExpression	'0'		772778	1					
ANR	775364	EqualityExpression	prefix_char != NUL		772778	1		!=			
ANR	775365	Identifier	prefix_char		772778	0					
ANR	775366	Identifier	NUL		772778	1					
ANR	775367	CompoundStatement		675:59:23680:23680	772778	1					
ANR	775368	ExpressionStatement	"INS_CHAR ( * s , sp , bep , cc )"	1406:20:44474:44499	772778	0	True				
ANR	775369	CallExpression	"INS_CHAR ( * s , sp , bep , cc )"		772778	0					
ANR	775370	Callee	INS_CHAR		772778	0					
ANR	775371	Identifier	INS_CHAR		772778	0					
ANR	775372	ArgumentList	* s		772778	1					
ANR	775373	Argument	* s		772778	0					
ANR	775374	UnaryOperationExpression	* s		772778	0					
ANR	775375	UnaryOperator	*		772778	0					
ANR	775376	Identifier	s		772778	1					
ANR	775377	Argument	sp		772778	1					
ANR	775378	Identifier	sp		772778	0					
ANR	775379	Argument	bep		772778	2					
ANR	775380	Identifier	bep		772778	0					
ANR	775381	Argument	cc		772778	3					
ANR	775382	Identifier	cc		772778	0					
ANR	775383	ExpressionStatement	s ++	1407:20:44521:44524	772778	1	True				
ANR	775384	PostIncDecOperationExpression	s ++		772778	0					
ANR	775385	Identifier	s		772778	0					
ANR	775386	IncDec	++		772778	1					
ANR	775387	ExpressionStatement	s_len --	1408:20:44546:44553	772778	2	True				
ANR	775388	PostIncDecOperationExpression	s_len --		772778	0					
ANR	775389	Identifier	s_len		772778	0					
ANR	775390	IncDec	--		772778	1					
ANR	775391	ExpressionStatement	min_width --	1409:20:44575:44586	772778	3	True				
ANR	775392	PostIncDecOperationExpression	min_width --		772778	0					
ANR	775393	Identifier	min_width		772778	0					
ANR	775394	IncDec	--		772778	1					
ANR	775395	ExpressionStatement	"PAD ( min_width , s_len , pad_char )"	1411:16:44622:44653	772778	1	True				
ANR	775396	CallExpression	"PAD ( min_width , s_len , pad_char )"		772778	0					
ANR	775397	Callee	PAD		772778	0					
ANR	775398	Identifier	PAD		772778	0					
ANR	775399	ArgumentList	min_width		772778	1					
ANR	775400	Argument	min_width		772778	0					
ANR	775401	Identifier	min_width		772778	0					
ANR	775402	Argument	s_len		772778	1					
ANR	775403	Identifier	s_len		772778	0					
ANR	775404	Argument	pad_char		772778	2					
ANR	775405	Identifier	pad_char		772778	0					
ANR	775406	IfStatement	if ( print_something == YES )		772778	11					
ANR	775407	Condition	print_something == YES	1417:16:44753:44774	772778	0	True				
ANR	775408	EqualityExpression	print_something == YES		772778	0		==			
ANR	775409	Identifier	print_something		772778	0					
ANR	775410	Identifier	YES		772778	1					
ANR	775411	CompoundStatement		687:40:24005:24005	772778	1					
ANR	775412	ForStatement	for ( i = s_len ; i != 0 ; i -- )		772778	0					
ANR	775413	ForInit	i = s_len ;	1418:21:44800:44809	772778	0	True				
ANR	775414	AssignmentExpression	i = s_len		772778	0		=			
ANR	775415	Identifier	i		772778	0					
ANR	775416	Identifier	s_len		772778	1					
ANR	775417	Condition	i != 0	1418:32:44811:44816	772778	1	True				
ANR	775418	EqualityExpression	i != 0		772778	0		!=			
ANR	775419	Identifier	i		772778	0					
ANR	775420	PrimaryExpression	0		772778	1					
ANR	775421	PostIncDecOperationExpression	i --	1418:40:44819:44821	772778	2	True				
ANR	775422	Identifier	i		772778	0					
ANR	775423	IncDec	--		772778	1					
ANR	775424	CompoundStatement		688:45:24052:24052	772778	3					
ANR	775425	ExpressionStatement	"INS_CHAR ( * s , sp , bep , cc )"	1419:22:44848:44873	772778	0	True				
ANR	775426	CallExpression	"INS_CHAR ( * s , sp , bep , cc )"		772778	0					
ANR	775427	Callee	INS_CHAR		772778	0					
ANR	775428	Identifier	INS_CHAR		772778	0					
ANR	775429	ArgumentList	* s		772778	1					
ANR	775430	Argument	* s		772778	0					
ANR	775431	UnaryOperationExpression	* s		772778	0					
ANR	775432	UnaryOperator	*		772778	0					
ANR	775433	Identifier	s		772778	1					
ANR	775434	Argument	sp		772778	1					
ANR	775435	Identifier	sp		772778	0					
ANR	775436	Argument	bep		772778	2					
ANR	775437	Identifier	bep		772778	0					
ANR	775438	Argument	cc		772778	3					
ANR	775439	Identifier	cc		772778	0					
ANR	775440	ExpressionStatement	s ++	1420:20:44895:44898	772778	1	True				
ANR	775441	PostIncDecOperationExpression	s ++		772778	0					
ANR	775442	Identifier	s		772778	0					
ANR	775443	IncDec	++		772778	1					
ANR	775444	IfStatement	if ( adjust_width && adjust == LEFT && min_width > s_len )		772778	12					
ANR	775445	Condition	adjust_width && adjust == LEFT && min_width > s_len	1424:16:44949:44999	772778	0	True				
ANR	775446	AndExpression	adjust_width && adjust == LEFT && min_width > s_len		772778	0		&&			
ANR	775447	Identifier	adjust_width		772778	0					
ANR	775448	AndExpression	adjust == LEFT && min_width > s_len		772778	1		&&			
ANR	775449	EqualityExpression	adjust == LEFT		772778	0		==			
ANR	775450	Identifier	adjust		772778	0					
ANR	775451	Identifier	LEFT		772778	1					
ANR	775452	RelationalExpression	min_width > s_len		772778	1		>			
ANR	775453	Identifier	min_width		772778	0					
ANR	775454	Identifier	s_len		772778	1					
ANR	775455	ExpressionStatement	"PAD ( min_width , s_len , pad_char )"	1425:16:45018:45049	772778	1	True				
ANR	775456	CallExpression	"PAD ( min_width , s_len , pad_char )"		772778	0					
ANR	775457	Callee	PAD		772778	0					
ANR	775458	Identifier	PAD		772778	0					
ANR	775459	ArgumentList	min_width		772778	1					
ANR	775460	Argument	min_width		772778	0					
ANR	775461	Identifier	min_width		772778	0					
ANR	775462	Argument	s_len		772778	1					
ANR	775463	Identifier	s_len		772778	0					
ANR	775464	Argument	pad_char		772778	2					
ANR	775465	Identifier	pad_char		772778	0					
ANR	775466	ExpressionStatement	fmt ++	1427:8:45069:45074	772778	1	True				
ANR	775467	PostIncDecOperationExpression	fmt ++		772778	0					
ANR	775468	Identifier	fmt		772778	0					
ANR	775469	IncDec	++		772778	1					
ANR	775470	ExpressionStatement	vbuff -> curpos = sp	1429:4:45086:45104	772778	39	True				
ANR	775471	AssignmentExpression	vbuff -> curpos = sp		772778	0		=			
ANR	775472	PtrMemberAccess	vbuff -> curpos		772778	0					
ANR	775473	Identifier	vbuff		772778	0					
ANR	775474	Identifier	curpos		772778	1					
ANR	775475	Identifier	sp		772778	1					
ANR	775476	ReturnStatement	return cc ;	1431:4:45111:45120	772778	40	True				
ANR	775477	Identifier	cc		772778	0					
ANR	775478	ReturnType	static int		772778	1					
ANR	775479	Identifier	apr_vformatter		772778	2					
ANR	775480	ParameterList	"int ( * flush_func ) ( apr_vformatter_buff_t * ) , apr_vformatter_buff_t * vbuff , const char * fmt , va_list ap"		772778	3					
ANR	775481	Parameter	int ( * flush_func ) ( apr_vformatter_buff_t * )	729:26:20664:20705	772778	0	True				
ANR	775482	ParameterType	(( apr_vformatter_buff_t * ) int) *		772778	0					
ANR	775483	Identifier	flush_func		772778	1					
ANR	775484	Parameter	apr_vformatter_buff_t * vbuff	730:4:20712:20739	772778	1	True				
ANR	775485	ParameterType	apr_vformatter_buff_t *		772778	0					
ANR	775486	Identifier	vbuff		772778	1					
ANR	775487	Parameter	const char * fmt	730:34:20742:20756	772778	2	True				
ANR	775488	ParameterType	const char *		772778	0					
ANR	775489	Identifier	fmt		772778	1					
ANR	775490	Parameter	va_list ap	730:51:20759:20768	772778	3	True				
ANR	775491	ParameterType	va_list		772778	0					
ANR	775492	Identifier	ap		772778	1					
ANR	775493	CFGEntryNode	ENTRY		772778		True				
ANR	775494	CFGExitNode	EXIT		772778		True				
ANR	775495	InfiniteForNode	true		772778		True				
ANR	775496	Symbol	APR_OFF_T_FMT		772778						
ANR	775497	Symbol	* ++ fmt		772778						
ANR	775498	Symbol	strchr		772778						
ANR	775499	Symbol	conv_fp		772778						
ANR	775500	Symbol	& is_negative		772778						
ANR	775501	Symbol	strncmp		772778						
ANR	775502	Symbol	conv_p2		772778						
ANR	775503	Symbol	apr_isdigit		772778						
ANR	775504	Symbol	ia		772778						
ANR	775505	Symbol	nan		772778						
ANR	775506	Symbol	* mrv		772778						
ANR	775507	Symbol	va_arg		772778						
ANR	775508	Symbol	vbuff -> curpos		772778						
ANR	775509	Symbol	LEFT		772778						
ANR	775510	Symbol	double		772778						
ANR	775511	Symbol	apr_uint64_t		772778						
ANR	775512	Symbol	apr_strerror		772778						
ANR	775513	Symbol	ap		772778						
ANR	775514	Symbol	* s_len		772778						
ANR	775515	Symbol	conv_os_thread_t_hex		772778						
ANR	775516	Symbol	size		772778						
ANR	775517	Symbol	* arg		772778						
ANR	775518	Symbol	apr_strfsize		772778						
ANR	775519	Symbol	i_num		772778						
ANR	775520	Symbol	flush_func		772778						
ANR	775521	Symbol	print_sign		772778						
ANR	775522	Symbol	isnan		772778						
ANR	775523	Symbol	FLOAT_DIGITS		772778						
ANR	775524	Symbol	sa		772778						
ANR	775525	Symbol	pad_char		772778						
ANR	775526	Symbol	var_type		772778						
ANR	775527	Symbol	arg		772778						
ANR	775528	Symbol	RIGHT		772778						
ANR	775529	Symbol	* walk		772778						
ANR	775530	Symbol	sp		772778						
ANR	775531	Symbol	* vbuff		772778						
ANR	775532	Symbol	apr_islower		772778						
ANR	775533	Symbol	cc		772778						
ANR	775534	Symbol	print_something		772778						
ANR	775535	Symbol	conv_os_thread_t		772778						
ANR	775536	Symbol	vbuff		772778						
ANR	775537	Symbol	NUL		772778						
ANR	775538	Symbol	i		772778						
ANR	775539	Symbol	* char_buf		772778						
ANR	775540	Symbol	mrv		772778						
ANR	775541	Symbol	q		772778						
ANR	775542	Symbol	buf		772778						
ANR	775543	Symbol	s		772778						
ANR	775544	Symbol	apr_uint32_t		772778						
ANR	775545	Symbol	IS_INT		772778						
ANR	775546	Symbol	v		772778						
ANR	775547	Symbol	& s_len		772778						
ANR	775548	Symbol	precision		772778						
ANR	775549	Symbol	isinf		772778						
ANR	775550	Symbol	fmt		772778						
ANR	775551	Symbol	bep		772778						
ANR	775552	Symbol	tid		772778						
ANR	775553	Symbol	strlen		772778						
ANR	775554	Symbol	adjust_precision		772778						
ANR	775555	Symbol	IS_QUAD		772778						
ANR	775556	Symbol	apr_int32_t		772778						
ANR	775557	Symbol	conv_p2_quad		772778						
ANR	775558	Symbol	char_buf		772778						
ANR	775559	Symbol	NULL		772778						
ANR	775560	Symbol	* -- s		772778						
ANR	775561	Symbol	IS_SHORT		772778						
ANR	775562	Symbol	conv_10_quad		772778						
ANR	775563	Symbol	adjust		772778						
ANR	775564	Symbol	is_negative		772778						
ANR	775565	Symbol	conv_10		772778						
ANR	775566	Symbol	vbuff -> endpos		772778						
ANR	775567	Symbol	adjust_width		772778						
ANR	775568	Symbol	ui_num		772778						
ANR	775569	Symbol	* s ++		772778						
ANR	775570	Symbol	i_quad		772778						
ANR	775571	Symbol	NO		772778						
ANR	775572	Symbol	YES		772778						
ANR	775573	Symbol	ui_quad		772778						
ANR	775574	Symbol	s_len		772778						
ANR	775575	Symbol	* fmt		772778						
ANR	775576	Symbol	apr_gcvt		772778						
ANR	775577	Symbol	conv_in_addr		772778						
ANR	775578	Symbol	IS_LONG		772778						
ANR	775579	Symbol	print_blank		772778						
ANR	775580	Symbol	min_width		772778						
ANR	775581	Symbol	inf		772778						
ANR	775582	Symbol	S_NULL_LEN		772778						
ANR	775583	Symbol	* APR_INT64_T_FMT		772778						
ANR	775584	Symbol	alternate_form		772778						
ANR	775585	Symbol	int		772778						
ANR	775586	Symbol	* APR_OFF_T_FMT		772778						
ANR	775587	Symbol	S_NULL		772778						
ANR	775588	Symbol	prefix_char		772778						
ANR	775589	Symbol	fp_num		772778						
ANR	775590	Symbol	APR_INT64_T_FMT		772778						
ANR	775591	Symbol	apr_int64_t		772778						
ANR	775592	Symbol	NUM_BUF_SIZE		772778						
ANR	775593	Symbol	conv_apr_sockaddr		772778						
ANR	775594	Symbol	num_buf		772778						
ANR	775595	Symbol	* q		772778						
ANR	775596	Symbol	* s		772778						
ANR	775597	Symbol	walk		772778						
ANR	775598	Function	snprintf_flush	1435:0:45126:45349							
ANR	775599	FunctionDef	snprintf_flush (apr_vformatter_buff_t * vbuff)		775598	0					
ANR	775600	CompoundStatement		1436:0:45182:45349	775598	0					
ANR	775601	ReturnStatement	return - 1 ;	1440:4:45338:45347	775598	0	True				
ANR	775602	UnaryOperationExpression	- 1		775598	0					
ANR	775603	UnaryOperator	-		775598	0					
ANR	775604	PrimaryExpression	1		775598	1					
ANR	775605	ReturnType	static int		775598	1					
ANR	775606	Identifier	snprintf_flush		775598	2					
ANR	775607	ParameterList	apr_vformatter_buff_t * vbuff		775598	3					
ANR	775608	Parameter	apr_vformatter_buff_t * vbuff	1435:26:45152:45179	775598	0	True				
ANR	775609	ParameterType	apr_vformatter_buff_t *		775598	0					
ANR	775610	Identifier	vbuff		775598	1					
ANR	775611	CFGEntryNode	ENTRY		775598		True				
ANR	775612	CFGExitNode	EXIT		775598		True				
ANR	775613	Symbol	vbuff		775598						
ANR	775614	Function	gs_snprintf	1443:0:45352:46328							
ANR	775615	FunctionDef	"gs_snprintf (char * buf , int len , const char * format)"		775614	0					
ANR	775616	CompoundStatement		1445:0:45450:46328	775614	0					
ANR	775617	IdentifierDeclStatement	int cc ;	1446:4:45456:45462	775614	0	True				
ANR	775618	IdentifierDecl	cc		775614	0					
ANR	775619	IdentifierDeclType	int		775614	0					
ANR	775620	Identifier	cc		775614	1					
ANR	775621	IdentifierDeclStatement	va_list ap ;	1447:4:45468:45478	775614	1	True				
ANR	775622	IdentifierDecl	ap		775614	0					
ANR	775623	IdentifierDeclType	va_list		775614	0					
ANR	775624	Identifier	ap		775614	1					
ANR	775625	IdentifierDeclStatement	apr_vformatter_buff_t vbuff ;	1448:4:45484:45511	775614	2	True				
ANR	775626	IdentifierDecl	vbuff		775614	0					
ANR	775627	IdentifierDeclType	apr_vformatter_buff_t		775614	0					
ANR	775628	Identifier	vbuff		775614	1					
ANR	775629	IfStatement	if ( len == 0 )		775614	3					
ANR	775630	Condition	len == 0	1450:8:45522:45529	775614	0	True				
ANR	775631	EqualityExpression	len == 0		775614	0		==			
ANR	775632	Identifier	len		775614	0					
ANR	775633	PrimaryExpression	0		775614	1					
ANR	775634	CompoundStatement		6:18:81:81	775614	1					
ANR	775635	ExpressionStatement	vbuff . curpos = NULL	1458:8:45944:45963	775614	0	True				
ANR	775636	AssignmentExpression	vbuff . curpos = NULL		775614	0		=			
ANR	775637	MemberAccess	vbuff . curpos		775614	0					
ANR	775638	Identifier	vbuff		775614	0					
ANR	775639	Identifier	curpos		775614	1					
ANR	775640	Identifier	NULL		775614	1					
ANR	775641	ExpressionStatement	vbuff . endpos = NULL	1459:8:45973:45992	775614	1	True				
ANR	775642	AssignmentExpression	vbuff . endpos = NULL		775614	0		=			
ANR	775643	MemberAccess	vbuff . endpos		775614	0					
ANR	775644	Identifier	vbuff		775614	0					
ANR	775645	Identifier	endpos		775614	1					
ANR	775646	Identifier	NULL		775614	1					
ANR	775647	ElseStatement	else		775614	0					
ANR	775648	CompoundStatement		16:11:554:554	775614	0					
ANR	775649	ExpressionStatement	vbuff . curpos = buf	1462:8:46062:46080	775614	0	True				
ANR	775650	AssignmentExpression	vbuff . curpos = buf		775614	0		=			
ANR	775651	MemberAccess	vbuff . curpos		775614	0					
ANR	775652	Identifier	vbuff		775614	0					
ANR	775653	Identifier	curpos		775614	1					
ANR	775654	Identifier	buf		775614	1					
ANR	775655	ExpressionStatement	vbuff . endpos = buf + len - 1	1463:8:46090:46118	775614	1	True				
ANR	775656	AssignmentExpression	vbuff . endpos = buf + len - 1		775614	0		=			
ANR	775657	MemberAccess	vbuff . endpos		775614	0					
ANR	775658	Identifier	vbuff		775614	0					
ANR	775659	Identifier	endpos		775614	1					
ANR	775660	AdditiveExpression	buf + len - 1		775614	1		+			
ANR	775661	Identifier	buf		775614	0					
ANR	775662	AdditiveExpression	len - 1		775614	1		-			
ANR	775663	Identifier	len		775614	0					
ANR	775664	PrimaryExpression	1		775614	1					
ANR	775665	ExpressionStatement	"va_start ( ap , format )"	1465:4:46130:46150	775614	4	True				
ANR	775666	CallExpression	"va_start ( ap , format )"		775614	0					
ANR	775667	Callee	va_start		775614	0					
ANR	775668	Identifier	va_start		775614	0					
ANR	775669	ArgumentList	ap		775614	1					
ANR	775670	Argument	ap		775614	0					
ANR	775671	Identifier	ap		775614	0					
ANR	775672	Argument	format		775614	1					
ANR	775673	Identifier	format		775614	0					
ANR	775674	ExpressionStatement	"cc = apr_vformatter ( snprintf_flush , & vbuff , format , ap )"	1466:4:46156:46211	775614	5	True				
ANR	775675	AssignmentExpression	"cc = apr_vformatter ( snprintf_flush , & vbuff , format , ap )"		775614	0		=			
ANR	775676	Identifier	cc		775614	0					
ANR	775677	CallExpression	"apr_vformatter ( snprintf_flush , & vbuff , format , ap )"		775614	1					
ANR	775678	Callee	apr_vformatter		775614	0					
ANR	775679	Identifier	apr_vformatter		775614	0					
ANR	775680	ArgumentList	snprintf_flush		775614	1					
ANR	775681	Argument	snprintf_flush		775614	0					
ANR	775682	Identifier	snprintf_flush		775614	0					
ANR	775683	Argument	& vbuff		775614	1					
ANR	775684	UnaryOperationExpression	& vbuff		775614	0					
ANR	775685	UnaryOperator	&		775614	0					
ANR	775686	Identifier	vbuff		775614	1					
ANR	775687	Argument	format		775614	2					
ANR	775688	Identifier	format		775614	0					
ANR	775689	Argument	ap		775614	3					
ANR	775690	Identifier	ap		775614	0					
ANR	775691	ExpressionStatement	va_end ( ap )	1467:4:46217:46227	775614	6	True				
ANR	775692	CallExpression	va_end ( ap )		775614	0					
ANR	775693	Callee	va_end		775614	0					
ANR	775694	Identifier	va_end		775614	0					
ANR	775695	ArgumentList	ap		775614	1					
ANR	775696	Argument	ap		775614	0					
ANR	775697	Identifier	ap		775614	0					
ANR	775698	IfStatement	if ( len != 0 )		775614	7					
ANR	775699	Condition	len != 0	1468:8:46237:46244	775614	0	True				
ANR	775700	EqualityExpression	len != 0		775614	0		!=			
ANR	775701	Identifier	len		775614	0					
ANR	775702	PrimaryExpression	0		775614	1					
ANR	775703	CompoundStatement		24:18:796:796	775614	1					
ANR	775704	ExpressionStatement	* vbuff . curpos = '\\0'	1469:8:46257:46277	775614	0	True				
ANR	775705	AssignmentExpression	* vbuff . curpos = '\\0'		775614	0		=			
ANR	775706	UnaryOperationExpression	* vbuff . curpos		775614	0					
ANR	775707	UnaryOperator	*		775614	0					
ANR	775708	MemberAccess	vbuff . curpos		775614	1					
ANR	775709	Identifier	vbuff		775614	0					
ANR	775710	Identifier	curpos		775614	1					
ANR	775711	PrimaryExpression	'\\0'		775614	1					
ANR	775712	ReturnStatement	return ( cc == - 1 ) ? ( int ) len - 1 : cc ;	1471:4:46289:46326	775614	8	True				
ANR	775713	ConditionalExpression	( cc == - 1 ) ? ( int ) len - 1 : cc		775614	0					
ANR	775714	Condition	cc == - 1		775614	0					
ANR	775715	EqualityExpression	cc == - 1		775614	0		==			
ANR	775716	Identifier	cc		775614	0					
ANR	775717	UnaryOperationExpression	- 1		775614	1					
ANR	775718	UnaryOperator	-		775614	0					
ANR	775719	PrimaryExpression	1		775614	1					
ANR	775720	AdditiveExpression	( int ) len - 1		775614	1		-			
ANR	775721	CastExpression	( int ) len		775614	0					
ANR	775722	CastTarget	int		775614	0					
ANR	775723	Identifier	len		775614	1					
ANR	775724	PrimaryExpression	1		775614	1					
ANR	775725	Identifier	cc		775614	2					
ANR	775726	ReturnType	int		775614	1					
ANR	775727	Identifier	gs_snprintf		775614	2					
ANR	775728	ParameterList	"char * buf , int len , const char * format"		775614	3					
ANR	775729	Parameter	char * buf	1443:16:45368:45376	775614	0	True				
ANR	775730	ParameterType	char *		775614	0					
ANR	775731	Identifier	buf		775614	1					
ANR	775732	Parameter	int len	1443:27:45379:45385	775614	1	True				
ANR	775733	ParameterType	int		775614	0					
ANR	775734	Identifier	len		775614	1					
ANR	775735	Parameter	const char * format	1444:37:45425:45442	775614	2	True				
ANR	775736	ParameterType	const char *		775614	0					
ANR	775737	Identifier	format		775614	1					
ANR	775738	CFGEntryNode	ENTRY		775614		True				
ANR	775739	CFGExitNode	EXIT		775614		True				
ANR	775740	Symbol	cc		775614						
ANR	775741	Symbol	* vbuff . curpos		775614						
ANR	775742	Symbol	NULL		775614						
ANR	775743	Symbol	vbuff		775614						
ANR	775744	Symbol	format		775614						
ANR	775745	Symbol	vbuff . curpos		775614						
ANR	775746	Symbol	snprintf_flush		775614						
ANR	775747	Symbol	ap		775614						
ANR	775748	Symbol	buf		775614						
ANR	775749	Symbol	len		775614						
ANR	775750	Symbol	vbuff . endpos		775614						
ANR	775751	Symbol	& vbuff		775614						
ANR	775752	Symbol	apr_vformatter		775614						
ANR	775753	Symbol	* vbuff		775614						
ANR	775754	Function	gs_sprintf	1474:0:46331:46702							
ANR	775755	FunctionDef	"gs_sprintf (char * buf , const char * format)"		775754	0					
ANR	775756	CompoundStatement		1475:0:46382:46702	775754	0					
ANR	775757	IdentifierDeclStatement	int cc ;	1476:4:46388:46394	775754	0	True				
ANR	775758	IdentifierDecl	cc		775754	0					
ANR	775759	IdentifierDeclType	int		775754	0					
ANR	775760	Identifier	cc		775754	1					
ANR	775761	IdentifierDeclStatement	va_list ap ;	1477:4:46400:46410	775754	1	True				
ANR	775762	IdentifierDecl	ap		775754	0					
ANR	775763	IdentifierDeclType	va_list		775754	0					
ANR	775764	Identifier	ap		775754	1					
ANR	775765	IdentifierDeclStatement	apr_vformatter_buff_t vbuff ;	1478:4:46416:46443	775754	2	True				
ANR	775766	IdentifierDecl	vbuff		775754	0					
ANR	775767	IdentifierDeclType	apr_vformatter_buff_t		775754	0					
ANR	775768	Identifier	vbuff		775754	1					
ANR	775769	ExpressionStatement	vbuff . curpos = buf	1481:4:46493:46511	775754	3	True				
ANR	775770	AssignmentExpression	vbuff . curpos = buf		775754	0		=			
ANR	775771	MemberAccess	vbuff . curpos		775754	0					
ANR	775772	Identifier	vbuff		775754	0					
ANR	775773	Identifier	curpos		775754	1					
ANR	775774	Identifier	buf		775754	1					
ANR	775775	ExpressionStatement	vbuff . endpos = buf + NUM_BUF_SIZE - 1	1482:4:46517:46554	775754	4	True				
ANR	775776	AssignmentExpression	vbuff . endpos = buf + NUM_BUF_SIZE - 1		775754	0		=			
ANR	775777	MemberAccess	vbuff . endpos		775754	0					
ANR	775778	Identifier	vbuff		775754	0					
ANR	775779	Identifier	endpos		775754	1					
ANR	775780	AdditiveExpression	buf + NUM_BUF_SIZE - 1		775754	1		+			
ANR	775781	Identifier	buf		775754	0					
ANR	775782	AdditiveExpression	NUM_BUF_SIZE - 1		775754	1		-			
ANR	775783	Identifier	NUM_BUF_SIZE		775754	0					
ANR	775784	PrimaryExpression	1		775754	1					
ANR	775785	ExpressionStatement	"va_start ( ap , format )"	1484:4:46561:46581	775754	5	True				
ANR	775786	CallExpression	"va_start ( ap , format )"		775754	0					
ANR	775787	Callee	va_start		775754	0					
ANR	775788	Identifier	va_start		775754	0					
ANR	775789	ArgumentList	ap		775754	1					
ANR	775790	Argument	ap		775754	0					
ANR	775791	Identifier	ap		775754	0					
ANR	775792	Argument	format		775754	1					
ANR	775793	Identifier	format		775754	0					
ANR	775794	ExpressionStatement	"cc = apr_vformatter ( snprintf_flush , & vbuff , format , ap )"	1485:4:46587:46642	775754	6	True				
ANR	775795	AssignmentExpression	"cc = apr_vformatter ( snprintf_flush , & vbuff , format , ap )"		775754	0		=			
ANR	775796	Identifier	cc		775754	0					
ANR	775797	CallExpression	"apr_vformatter ( snprintf_flush , & vbuff , format , ap )"		775754	1					
ANR	775798	Callee	apr_vformatter		775754	0					
ANR	775799	Identifier	apr_vformatter		775754	0					
ANR	775800	ArgumentList	snprintf_flush		775754	1					
ANR	775801	Argument	snprintf_flush		775754	0					
ANR	775802	Identifier	snprintf_flush		775754	0					
ANR	775803	Argument	& vbuff		775754	1					
ANR	775804	UnaryOperationExpression	& vbuff		775754	0					
ANR	775805	UnaryOperator	&		775754	0					
ANR	775806	Identifier	vbuff		775754	1					
ANR	775807	Argument	format		775754	2					
ANR	775808	Identifier	format		775754	0					
ANR	775809	Argument	ap		775754	3					
ANR	775810	Identifier	ap		775754	0					
ANR	775811	ExpressionStatement	va_end ( ap )	1486:4:46648:46658	775754	7	True				
ANR	775812	CallExpression	va_end ( ap )		775754	0					
ANR	775813	Callee	va_end		775754	0					
ANR	775814	Identifier	va_end		775754	0					
ANR	775815	ArgumentList	ap		775754	1					
ANR	775816	Argument	ap		775754	0					
ANR	775817	Identifier	ap		775754	0					
ANR	775818	ExpressionStatement	* vbuff . curpos = '\\0'	1487:4:46664:46684	775754	8	True				
ANR	775819	AssignmentExpression	* vbuff . curpos = '\\0'		775754	0		=			
ANR	775820	UnaryOperationExpression	* vbuff . curpos		775754	0					
ANR	775821	UnaryOperator	*		775754	0					
ANR	775822	MemberAccess	vbuff . curpos		775754	1					
ANR	775823	Identifier	vbuff		775754	0					
ANR	775824	Identifier	curpos		775754	1					
ANR	775825	PrimaryExpression	'\\0'		775754	1					
ANR	775826	ReturnStatement	return cc ;	1489:4:46691:46700	775754	9	True				
ANR	775827	Identifier	cc		775754	0					
ANR	775828	ReturnType	int		775754	1					
ANR	775829	Identifier	gs_sprintf		775754	2					
ANR	775830	ParameterList	"char * buf , const char * format"		775754	3					
ANR	775831	Parameter	char * buf	1474:15:46346:46354	775754	0	True				
ANR	775832	ParameterType	char *		775754	0					
ANR	775833	Identifier	buf		775754	1					
ANR	775834	Parameter	const char * format	1474:26:46357:46374	775754	1	True				
ANR	775835	ParameterType	const char *		775754	0					
ANR	775836	Identifier	format		775754	1					
ANR	775837	CFGEntryNode	ENTRY		775754		True				
ANR	775838	CFGExitNode	EXIT		775754		True				
ANR	775839	Symbol	cc		775754						
ANR	775840	Symbol	* vbuff . curpos		775754						
ANR	775841	Symbol	vbuff		775754						
ANR	775842	Symbol	format		775754						
ANR	775843	Symbol	vbuff . curpos		775754						
ANR	775844	Symbol	snprintf_flush		775754						
ANR	775845	Symbol	ap		775754						
ANR	775846	Symbol	buf		775754						
ANR	775847	Symbol	NUM_BUF_SIZE		775754						
ANR	775848	Symbol	vbuff . endpos		775754						
ANR	775849	Symbol	& vbuff		775754						
ANR	775850	Symbol	apr_vformatter		775754						
ANR	775851	Symbol	* vbuff		775754						
ANR	775852	Function	gs_vsnprintf	1493:0:46706:47254							
ANR	775853	FunctionDef	"gs_vsnprintf (char * buf , int len , const char * format , va_list ap)"		775852	0					
ANR	775854	CompoundStatement		1495:0:46806:47254	775852	0					
ANR	775855	IdentifierDeclStatement	int cc ;	1496:4:46812:46818	775852	0	True				
ANR	775856	IdentifierDecl	cc		775852	0					
ANR	775857	IdentifierDeclType	int		775852	0					
ANR	775858	Identifier	cc		775852	1					
ANR	775859	IdentifierDeclStatement	apr_vformatter_buff_t vbuff ;	1497:4:46824:46851	775852	1	True				
ANR	775860	IdentifierDecl	vbuff		775852	0					
ANR	775861	IdentifierDeclType	apr_vformatter_buff_t		775852	0					
ANR	775862	Identifier	vbuff		775852	1					
ANR	775863	IfStatement	if ( len == 0 )		775852	2					
ANR	775864	Condition	len == 0	1499:8:46862:46869	775852	0	True				
ANR	775865	EqualityExpression	len == 0		775852	0		==			
ANR	775866	Identifier	len		775852	0					
ANR	775867	PrimaryExpression	0		775852	1					
ANR	775868	CompoundStatement		5:18:65:65	775852	1					
ANR	775869	ExpressionStatement	vbuff . curpos = NULL	1501:8:46911:46930	775852	0	True				
ANR	775870	AssignmentExpression	vbuff . curpos = NULL		775852	0		=			
ANR	775871	MemberAccess	vbuff . curpos		775852	0					
ANR	775872	Identifier	vbuff		775852	0					
ANR	775873	Identifier	curpos		775852	1					
ANR	775874	Identifier	NULL		775852	1					
ANR	775875	ExpressionStatement	vbuff . endpos = NULL	1502:8:46940:46959	775852	1	True				
ANR	775876	AssignmentExpression	vbuff . endpos = NULL		775852	0		=			
ANR	775877	MemberAccess	vbuff . endpos		775852	0					
ANR	775878	Identifier	vbuff		775852	0					
ANR	775879	Identifier	endpos		775852	1					
ANR	775880	Identifier	NULL		775852	1					
ANR	775881	ElseStatement	else		775852	0					
ANR	775882	CompoundStatement		9:11:165:165	775852	0					
ANR	775883	ExpressionStatement	vbuff . curpos = buf	1505:8:47029:47047	775852	0	True				
ANR	775884	AssignmentExpression	vbuff . curpos = buf		775852	0		=			
ANR	775885	MemberAccess	vbuff . curpos		775852	0					
ANR	775886	Identifier	vbuff		775852	0					
ANR	775887	Identifier	curpos		775852	1					
ANR	775888	Identifier	buf		775852	1					
ANR	775889	ExpressionStatement	vbuff . endpos = buf + len - 1	1506:8:47057:47085	775852	1	True				
ANR	775890	AssignmentExpression	vbuff . endpos = buf + len - 1		775852	0		=			
ANR	775891	MemberAccess	vbuff . endpos		775852	0					
ANR	775892	Identifier	vbuff		775852	0					
ANR	775893	Identifier	endpos		775852	1					
ANR	775894	AdditiveExpression	buf + len - 1		775852	1		+			
ANR	775895	Identifier	buf		775852	0					
ANR	775896	AdditiveExpression	len - 1		775852	1		-			
ANR	775897	Identifier	len		775852	0					
ANR	775898	PrimaryExpression	1		775852	1					
ANR	775899	ExpressionStatement	"cc = apr_vformatter ( snprintf_flush , & vbuff , format , ap )"	1508:4:47097:47152	775852	3	True				
ANR	775900	AssignmentExpression	"cc = apr_vformatter ( snprintf_flush , & vbuff , format , ap )"		775852	0		=			
ANR	775901	Identifier	cc		775852	0					
ANR	775902	CallExpression	"apr_vformatter ( snprintf_flush , & vbuff , format , ap )"		775852	1					
ANR	775903	Callee	apr_vformatter		775852	0					
ANR	775904	Identifier	apr_vformatter		775852	0					
ANR	775905	ArgumentList	snprintf_flush		775852	1					
ANR	775906	Argument	snprintf_flush		775852	0					
ANR	775907	Identifier	snprintf_flush		775852	0					
ANR	775908	Argument	& vbuff		775852	1					
ANR	775909	UnaryOperationExpression	& vbuff		775852	0					
ANR	775910	UnaryOperator	&		775852	0					
ANR	775911	Identifier	vbuff		775852	1					
ANR	775912	Argument	format		775852	2					
ANR	775913	Identifier	format		775852	0					
ANR	775914	Argument	ap		775852	3					
ANR	775915	Identifier	ap		775852	0					
ANR	775916	IfStatement	if ( len != 0 )		775852	4					
ANR	775917	Condition	len != 0	1509:8:47162:47169	775852	0	True				
ANR	775918	EqualityExpression	len != 0		775852	0		!=			
ANR	775919	Identifier	len		775852	0					
ANR	775920	PrimaryExpression	0		775852	1					
ANR	775921	CompoundStatement		15:18:365:365	775852	1					
ANR	775922	ExpressionStatement	* vbuff . curpos = '\\0'	1510:8:47182:47202	775852	0	True				
ANR	775923	AssignmentExpression	* vbuff . curpos = '\\0'		775852	0		=			
ANR	775924	UnaryOperationExpression	* vbuff . curpos		775852	0					
ANR	775925	UnaryOperator	*		775852	0					
ANR	775926	MemberAccess	vbuff . curpos		775852	1					
ANR	775927	Identifier	vbuff		775852	0					
ANR	775928	Identifier	curpos		775852	1					
ANR	775929	PrimaryExpression	'\\0'		775852	1					
ANR	775930	ReturnStatement	return ( cc == - 1 ) ? ( int ) len - 1 : cc ;	1513:4:47215:47252	775852	5	True				
ANR	775931	ConditionalExpression	( cc == - 1 ) ? ( int ) len - 1 : cc		775852	0					
ANR	775932	Condition	cc == - 1		775852	0					
ANR	775933	EqualityExpression	cc == - 1		775852	0		==			
ANR	775934	Identifier	cc		775852	0					
ANR	775935	UnaryOperationExpression	- 1		775852	1					
ANR	775936	UnaryOperator	-		775852	0					
ANR	775937	PrimaryExpression	1		775852	1					
ANR	775938	AdditiveExpression	( int ) len - 1		775852	1		-			
ANR	775939	CastExpression	( int ) len		775852	0					
ANR	775940	CastTarget	int		775852	0					
ANR	775941	Identifier	len		775852	1					
ANR	775942	PrimaryExpression	1		775852	1					
ANR	775943	Identifier	cc		775852	2					
ANR	775944	ReturnType	int		775852	1					
ANR	775945	Identifier	gs_vsnprintf		775852	2					
ANR	775946	ParameterList	"char * buf , int len , const char * format , va_list ap"		775852	3					
ANR	775947	Parameter	char * buf	1493:17:46723:46731	775852	0	True				
ANR	775948	ParameterType	char *		775852	0					
ANR	775949	Identifier	buf		775852	1					
ANR	775950	Parameter	int len	1493:28:46734:46740	775852	1	True				
ANR	775951	ParameterType	int		775852	0					
ANR	775952	Identifier	len		775852	1					
ANR	775953	Parameter	const char * format	1493:37:46743:46760	775852	2	True				
ANR	775954	ParameterType	const char *		775852	0					
ANR	775955	Identifier	format		775852	1					
ANR	775956	Parameter	va_list ap	1494:31:46794:46803	775852	3	True				
ANR	775957	ParameterType	va_list		775852	0					
ANR	775958	Identifier	ap		775852	1					
ANR	775959	CFGEntryNode	ENTRY		775852		True				
ANR	775960	CFGExitNode	EXIT		775852		True				
ANR	775961	Symbol	cc		775852						
ANR	775962	Symbol	* vbuff . curpos		775852						
ANR	775963	Symbol	NULL		775852						
ANR	775964	Symbol	vbuff		775852						
ANR	775965	Symbol	format		775852						
ANR	775966	Symbol	vbuff . curpos		775852						
ANR	775967	Symbol	snprintf_flush		775852						
ANR	775968	Symbol	ap		775852						
ANR	775969	Symbol	buf		775852						
ANR	775970	Symbol	len		775852						
ANR	775971	Symbol	vbuff . endpos		775852						
ANR	775972	Symbol	& vbuff		775852						
ANR	775973	Symbol	apr_vformatter		775852						
ANR	775974	Symbol	* vbuff		775852						
ANR	775975	Function	gs_vsprintf	1516:0:47257:47578							
ANR	775976	FunctionDef	"gs_vsprintf (char * buf , const char * format , va_list ap)"		775975	0					
ANR	775977	CompoundStatement		1517:0:47316:47578	775975	0					
ANR	775978	IdentifierDeclStatement	int cc ;	1518:4:47322:47328	775975	0	True				
ANR	775979	IdentifierDecl	cc		775975	0					
ANR	775980	IdentifierDeclType	int		775975	0					
ANR	775981	Identifier	cc		775975	1					
ANR	775982	IdentifierDeclStatement	apr_vformatter_buff_t vbuff ;	1519:4:47334:47361	775975	1	True				
ANR	775983	IdentifierDecl	vbuff		775975	0					
ANR	775984	IdentifierDeclType	apr_vformatter_buff_t		775975	0					
ANR	775985	Identifier	vbuff		775975	1					
ANR	775986	ExpressionStatement	vbuff . curpos = buf	1522:4:47411:47429	775975	2	True				
ANR	775987	AssignmentExpression	vbuff . curpos = buf		775975	0		=			
ANR	775988	MemberAccess	vbuff . curpos		775975	0					
ANR	775989	Identifier	vbuff		775975	0					
ANR	775990	Identifier	curpos		775975	1					
ANR	775991	Identifier	buf		775975	1					
ANR	775992	ExpressionStatement	vbuff . endpos = buf + NUM_BUF_SIZE - 1	1523:4:47435:47472	775975	3	True				
ANR	775993	AssignmentExpression	vbuff . endpos = buf + NUM_BUF_SIZE - 1		775975	0		=			
ANR	775994	MemberAccess	vbuff . endpos		775975	0					
ANR	775995	Identifier	vbuff		775975	0					
ANR	775996	Identifier	endpos		775975	1					
ANR	775997	AdditiveExpression	buf + NUM_BUF_SIZE - 1		775975	1		+			
ANR	775998	Identifier	buf		775975	0					
ANR	775999	AdditiveExpression	NUM_BUF_SIZE - 1		775975	1		-			
ANR	776000	Identifier	NUM_BUF_SIZE		775975	0					
ANR	776001	PrimaryExpression	1		775975	1					
ANR	776002	ExpressionStatement	"cc = apr_vformatter ( snprintf_flush , & vbuff , format , ap )"	1525:4:47479:47534	775975	4	True				
ANR	776003	AssignmentExpression	"cc = apr_vformatter ( snprintf_flush , & vbuff , format , ap )"		775975	0		=			
ANR	776004	Identifier	cc		775975	0					
ANR	776005	CallExpression	"apr_vformatter ( snprintf_flush , & vbuff , format , ap )"		775975	1					
ANR	776006	Callee	apr_vformatter		775975	0					
ANR	776007	Identifier	apr_vformatter		775975	0					
ANR	776008	ArgumentList	snprintf_flush		775975	1					
ANR	776009	Argument	snprintf_flush		775975	0					
ANR	776010	Identifier	snprintf_flush		775975	0					
ANR	776011	Argument	& vbuff		775975	1					
ANR	776012	UnaryOperationExpression	& vbuff		775975	0					
ANR	776013	UnaryOperator	&		775975	0					
ANR	776014	Identifier	vbuff		775975	1					
ANR	776015	Argument	format		775975	2					
ANR	776016	Identifier	format		775975	0					
ANR	776017	Argument	ap		775975	3					
ANR	776018	Identifier	ap		775975	0					
ANR	776019	ExpressionStatement	* vbuff . curpos = '\\0'	1526:4:47540:47560	775975	5	True				
ANR	776020	AssignmentExpression	* vbuff . curpos = '\\0'		775975	0		=			
ANR	776021	UnaryOperationExpression	* vbuff . curpos		775975	0					
ANR	776022	UnaryOperator	*		775975	0					
ANR	776023	MemberAccess	vbuff . curpos		775975	1					
ANR	776024	Identifier	vbuff		775975	0					
ANR	776025	Identifier	curpos		775975	1					
ANR	776026	PrimaryExpression	'\\0'		775975	1					
ANR	776027	ReturnStatement	return cc ;	1528:4:47567:47576	775975	6	True				
ANR	776028	Identifier	cc		775975	0					
ANR	776029	ReturnType	int		775975	1					
ANR	776030	Identifier	gs_vsprintf		775975	2					
ANR	776031	ParameterList	"char * buf , const char * format , va_list ap"		775975	3					
ANR	776032	Parameter	char * buf	1516:16:47273:47281	775975	0	True				
ANR	776033	ParameterType	char *		775975	0					
ANR	776034	Identifier	buf		775975	1					
ANR	776035	Parameter	const char * format	1516:27:47284:47301	775975	1	True				
ANR	776036	ParameterType	const char *		775975	0					
ANR	776037	Identifier	format		775975	1					
ANR	776038	Parameter	va_list ap	1516:47:47304:47313	775975	2	True				
ANR	776039	ParameterType	va_list		775975	0					
ANR	776040	Identifier	ap		775975	1					
ANR	776041	CFGEntryNode	ENTRY		775975		True				
ANR	776042	CFGExitNode	EXIT		775975		True				
ANR	776043	Symbol	cc		775975						
ANR	776044	Symbol	* vbuff . curpos		775975						
ANR	776045	Symbol	vbuff		775975						
ANR	776046	Symbol	format		775975						
ANR	776047	Symbol	vbuff . curpos		775975						
ANR	776048	Symbol	snprintf_flush		775975						
ANR	776049	Symbol	ap		775975						
ANR	776050	Symbol	buf		775975						
ANR	776051	Symbol	NUM_BUF_SIZE		775975						
ANR	776052	Symbol	vbuff . endpos		775975						
ANR	776053	Symbol	& vbuff		775975						
ANR	776054	Symbol	apr_vformatter		775975						
ANR	776055	Symbol	* vbuff		775975						
