command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4975745	File	data/converged/CVE-2018-16863_ghostpdl/gsbitops.c								
ANR	4975746	DeclStmt									
ANR	4975747	Decl							const bits16	const bits16 [ 17 ]	mono_copy_masks
ANR	4975748	DeclStmt									
ANR	4975749	Decl							const bits32	const bits32 [ 33 ]	mono_fill_masks
ANR	4975750	Function	bits_fill_rectangle	55:1:1897:5366							
ANR	4975751	FunctionDef	"bits_fill_rectangle (byte * dest , int dest_bit , uint draster , mono_fill_chunk pattern , int width_bits , int height)"		4975750	0					
ANR	4975752	CompoundStatement		62:0:2131:5366	4975750	0					
ANR	4975753	IdentifierDeclStatement	uint bit ;	63:4:2137:2145	4975750	0	True				
ANR	4975754	IdentifierDecl	bit		4975750	0					
ANR	4975755	IdentifierDeclType	uint		4975750	0					
ANR	4975756	Identifier	bit		4975750	1					
ANR	4975757	IdentifierDeclStatement	chunk right_mask ;	64:4:2151:2167	4975750	1	True				
ANR	4975758	IdentifierDecl	right_mask		4975750	0					
ANR	4975759	IdentifierDeclType	chunk		4975750	0					
ANR	4975760	Identifier	right_mask		4975750	1					
ANR	4975761	IdentifierDeclStatement	int line_count = height ;	65:4:2173:2196	4975750	2	True				
ANR	4975762	IdentifierDecl	line_count = height		4975750	0					
ANR	4975763	IdentifierDeclType	int		4975750	0					
ANR	4975764	Identifier	line_count		4975750	1					
ANR	4975765	AssignmentExpression	line_count = height		4975750	2		=			
ANR	4975766	Identifier	height		4975750	0					
ANR	4975767	Identifier	height		4975750	1					
ANR	4975768	IdentifierDeclStatement	chunk * ptr ;	66:4:2202:2212	4975750	3	True				
ANR	4975769	IdentifierDecl	* ptr		4975750	0					
ANR	4975770	IdentifierDeclType	chunk *		4975750	0					
ANR	4975771	Identifier	ptr		4975750	1					
ANR	4975772	IdentifierDeclStatement	int last_bit ;	67:4:2218:2230	4975750	4	True				
ANR	4975773	IdentifierDecl	last_bit		4975750	0					
ANR	4975774	IdentifierDeclType	int		4975750	0					
ANR	4975775	Identifier	last_bit		4975750	1					
ANR	4975776	Statement	define	69:1:2234:2239	4975750	5	True				
ANR	4975777	Statement	FOR_EACH_LINE	69:8:2241:2253	4975750	6	True				
ANR	4975778	Statement	(	69:21:2254:2254	4975750	7	True				
ANR	4975779	Statement	stat	69:22:2255:2258	4975750	8	True				
ANR	4975780	Statement	)	69:26:2259:2259	4975750	9	True				
ANR	4975781	DoStatement	do		4975750	10					
ANR	4975782	CompoundStatement		9:11:141:141	4975750	0					
ANR	4975783	Statement	stat	70:13:2275:2278	4975750	0	True				
ANR	4975784	Condition	"inc_ptr ( ptr , draster ) , -- line_count"	70:28:2290:2324	4975750	1	True				
ANR	4975785	Expression	"inc_ptr ( ptr , draster ) , -- line_count"		4975750	0					
ANR	4975786	CallExpression	"inc_ptr ( ptr , draster )"		4975750	0					
ANR	4975787	Callee	inc_ptr		4975750	0					
ANR	4975788	Identifier	inc_ptr		4975750	0					
ANR	4975789	ArgumentList	ptr		4975750	1					
ANR	4975790	Argument	ptr		4975750	0					
ANR	4975791	Identifier	ptr		4975750	0					
ANR	4975792	Argument	draster		4975750	1					
ANR	4975793	Identifier	draster		4975750	0					
ANR	4975794	UnaryExpression	-- line_count		4975750	1					
ANR	4975795	IncDec	--		4975750	0					
ANR	4975796	Identifier	line_count		4975750	1					
ANR	4975797	ExpressionStatement	ptr = ( chunk * ) dest	73:4:2383:2403	4975750	11	True				
ANR	4975798	AssignmentExpression	ptr = ( chunk * ) dest		4975750	0		=			
ANR	4975799	Identifier	ptr		4975750	0					
ANR	4975800	CastExpression	( chunk * ) dest		4975750	1					
ANR	4975801	CastTarget	chunk *		4975750	0					
ANR	4975802	Identifier	dest		4975750	1					
ANR	4975803	ExpressionStatement	bit = dest_bit & chunk_align_bit_mask	74:4:2409:2446	4975750	12	True				
ANR	4975804	AssignmentExpression	bit = dest_bit & chunk_align_bit_mask		4975750	0		=			
ANR	4975805	Identifier	bit		4975750	0					
ANR	4975806	BitAndExpression	dest_bit & chunk_align_bit_mask		4975750	1		&			
ANR	4975807	Identifier	dest_bit		4975750	0					
ANR	4975808	Identifier	chunk_align_bit_mask		4975750	1					
ANR	4975809	ExpressionStatement	last_bit = width_bits + bit - ( chunk_bits + 1 )	75:4:2452:2498	4975750	13	True				
ANR	4975810	AssignmentExpression	last_bit = width_bits + bit - ( chunk_bits + 1 )		4975750	0		=			
ANR	4975811	Identifier	last_bit		4975750	0					
ANR	4975812	AdditiveExpression	width_bits + bit - ( chunk_bits + 1 )		4975750	1		+			
ANR	4975813	Identifier	width_bits		4975750	0					
ANR	4975814	AdditiveExpression	bit - ( chunk_bits + 1 )		4975750	1		-			
ANR	4975815	Identifier	bit		4975750	0					
ANR	4975816	AdditiveExpression	chunk_bits + 1		4975750	1		+			
ANR	4975817	Identifier	chunk_bits		4975750	0					
ANR	4975818	PrimaryExpression	1		4975750	1					
ANR	4975819	IfStatement	if ( last_bit < 0 )		4975750	14					
ANR	4975820	Condition	last_bit < 0	77:8:2509:2520	4975750	0	True				
ANR	4975821	RelationalExpression	last_bit < 0		4975750	0		<			
ANR	4975822	Identifier	last_bit		4975750	0					
ANR	4975823	PrimaryExpression	0		4975750	1					
ANR	4975824	CompoundStatement		16:22:391:391	4975750	1					
ANR	4975825	ExpressionStatement	"set_mono_thin_mask ( right_mask , width_bits , bit )"	78:8:2550:2597	4975750	0	True				
ANR	4975826	CallExpression	"set_mono_thin_mask ( right_mask , width_bits , bit )"		4975750	0					
ANR	4975827	Callee	set_mono_thin_mask		4975750	0					
ANR	4975828	Identifier	set_mono_thin_mask		4975750	0					
ANR	4975829	ArgumentList	right_mask		4975750	1					
ANR	4975830	Argument	right_mask		4975750	0					
ANR	4975831	Identifier	right_mask		4975750	0					
ANR	4975832	Argument	width_bits		4975750	1					
ANR	4975833	Identifier	width_bits		4975750	0					
ANR	4975834	Argument	bit		4975750	2					
ANR	4975835	Identifier	bit		4975750	0					
ANR	4975836	IfStatement	if ( pattern == 0 )		4975750	1					
ANR	4975837	Condition	pattern == 0	79:12:2611:2622	4975750	0	True				
ANR	4975838	EqualityExpression	pattern == 0		4975750	0		==			
ANR	4975839	Identifier	pattern		4975750	0					
ANR	4975840	PrimaryExpression	0		4975750	1					
ANR	4975841	Statement	FOR_EACH_LINE	80:12:2637:2649	4975750	1	True				
ANR	4975842	ElseStatement	else		4975750	0					
ANR	4975843	IfStatement	if ( pattern == ( mono_fill_chunk ) ( - 1 ) )		4975750	0					
ANR	4975844	Condition	pattern == ( mono_fill_chunk ) ( - 1 )	81:17:2691:2722	4975750	0	True				
ANR	4975845	EqualityExpression	pattern == ( mono_fill_chunk ) ( - 1 )		4975750	0		==			
ANR	4975846	Identifier	pattern		4975750	0					
ANR	4975847	CastExpression	( mono_fill_chunk ) ( - 1 )		4975750	1					
ANR	4975848	CastTarget	mono_fill_chunk		4975750	0					
ANR	4975849	UnaryOperationExpression	- 1		4975750	1					
ANR	4975850	UnaryOperator	-		4975750	0					
ANR	4975851	PrimaryExpression	1		4975750	1					
ANR	4975852	Statement	FOR_EACH_LINE	82:12:2737:2749	4975750	1	True				
ANR	4975853	ElseStatement	else		4975750	0					
ANR	4975854	Statement	FOR_EACH_LINE	84:12:2798:2810	4975750	0	True				
ANR	4975855	Statement	(	80:25:2650:2650	4975750	2	True				
ANR	4975856	ExpressionStatement	* ptr &= ~right_mask	80:26:2651:2670	4975750	3	True				
ANR	4975857	AssignmentExpression	* ptr &= ~right_mask		4975750	0		&=			
ANR	4975858	UnaryOperationExpression	* ptr		4975750	0					
ANR	4975859	UnaryOperator	*		4975750	0					
ANR	4975860	Identifier	ptr		4975750	1					
ANR	4975861	Identifier	~right_mask		4975750	1					
ANR	4975862	Statement	)	80:46:2671:2671	4975750	4	True				
ANR	4975863	ExpressionStatement		80:47:2672:2672	4975750	5	True				
ANR	4975864	Statement	(	82:25:2750:2750	4975750	6	True				
ANR	4975865	ExpressionStatement	* ptr |= right_mask	82:26:2751:2769	4975750	7	True				
ANR	4975866	AssignmentExpression	* ptr |= right_mask		4975750	0		|=			
ANR	4975867	UnaryOperationExpression	* ptr		4975750	0					
ANR	4975868	UnaryOperator	*		4975750	0					
ANR	4975869	Identifier	ptr		4975750	1					
ANR	4975870	Identifier	right_mask		4975750	1					
ANR	4975871	Statement	)	82:45:2770:2770	4975750	8	True				
ANR	4975872	ExpressionStatement		82:46:2771:2771	4975750	9	True				
ANR	4975873	Statement	(	84:25:2811:2811	4975750	10	True				
ANR	4975874	ExpressionStatement	* ptr = ( * ptr & ~right_mask ) | ( pattern & right_mask )	85:16:2829:2881	4975750	11	True				
ANR	4975875	AssignmentExpression	* ptr = ( * ptr & ~right_mask ) | ( pattern & right_mask )		4975750	0		=			
ANR	4975876	UnaryOperationExpression	* ptr		4975750	0					
ANR	4975877	UnaryOperator	*		4975750	0					
ANR	4975878	Identifier	ptr		4975750	1					
ANR	4975879	InclusiveOrExpression	( * ptr & ~right_mask ) | ( pattern & right_mask )		4975750	1		|			
ANR	4975880	BitAndExpression	* ptr & ~right_mask		4975750	0		&			
ANR	4975881	UnaryOperationExpression	* ptr		4975750	0					
ANR	4975882	UnaryOperator	*		4975750	0					
ANR	4975883	Identifier	ptr		4975750	1					
ANR	4975884	Identifier	~right_mask		4975750	1					
ANR	4975885	BitAndExpression	pattern & right_mask		4975750	1		&			
ANR	4975886	Identifier	pattern		4975750	0					
ANR	4975887	Identifier	right_mask		4975750	1					
ANR	4975888	Statement	)	85:70:2883:2883	4975750	12	True				
ANR	4975889	ExpressionStatement		85:71:2884:2884	4975750	13	True				
ANR	4975890	ElseStatement	else		4975750	0					
ANR	4975891	CompoundStatement		27:8:795:833	4975750	0					
ANR	4975892	IdentifierDeclStatement	chunk mask ;	87:8:2907:2917	4975750	0	True				
ANR	4975893	IdentifierDecl	mask		4975750	0					
ANR	4975894	IdentifierDeclType	chunk		4975750	0					
ANR	4975895	Identifier	mask		4975750	1					
ANR	4975896	IdentifierDeclStatement	int last = last_bit >> chunk_log2_bits ;	88:8:2927:2965	4975750	1	True				
ANR	4975897	IdentifierDecl	last = last_bit >> chunk_log2_bits		4975750	0					
ANR	4975898	IdentifierDeclType	int		4975750	0					
ANR	4975899	Identifier	last		4975750	1					
ANR	4975900	AssignmentExpression	last = last_bit >> chunk_log2_bits		4975750	2		=			
ANR	4975901	Identifier	last		4975750	0					
ANR	4975902	ShiftExpression	last_bit >> chunk_log2_bits		4975750	1		>>			
ANR	4975903	Identifier	last_bit		4975750	0					
ANR	4975904	Identifier	chunk_log2_bits		4975750	1					
ANR	4975905	ExpressionStatement	"set_mono_left_mask ( mask , bit )"	90:8:2976:3005	4975750	2	True				
ANR	4975906	CallExpression	"set_mono_left_mask ( mask , bit )"		4975750	0					
ANR	4975907	Callee	set_mono_left_mask		4975750	0					
ANR	4975908	Identifier	set_mono_left_mask		4975750	0					
ANR	4975909	ArgumentList	mask		4975750	1					
ANR	4975910	Argument	mask		4975750	0					
ANR	4975911	Identifier	mask		4975750	0					
ANR	4975912	Argument	bit		4975750	1					
ANR	4975913	Identifier	bit		4975750	0					
ANR	4975914	ExpressionStatement	"set_mono_right_mask ( right_mask , ( last_bit & chunk_bit_mask ) + 1 )"	91:8:3015:3079	4975750	3	True				
ANR	4975915	CallExpression	"set_mono_right_mask ( right_mask , ( last_bit & chunk_bit_mask ) + 1 )"		4975750	0					
ANR	4975916	Callee	set_mono_right_mask		4975750	0					
ANR	4975917	Identifier	set_mono_right_mask		4975750	0					
ANR	4975918	ArgumentList	right_mask		4975750	1					
ANR	4975919	Argument	right_mask		4975750	0					
ANR	4975920	Identifier	right_mask		4975750	0					
ANR	4975921	Argument	( last_bit & chunk_bit_mask ) + 1		4975750	1					
ANR	4975922	AdditiveExpression	( last_bit & chunk_bit_mask ) + 1		4975750	0		+			
ANR	4975923	BitAndExpression	last_bit & chunk_bit_mask		4975750	0		&			
ANR	4975924	Identifier	last_bit		4975750	0					
ANR	4975925	Identifier	chunk_bit_mask		4975750	1					
ANR	4975926	PrimaryExpression	1		4975750	1					
ANR	4975927	SwitchStatement	switch ( last )		4975750	4					
ANR	4975928	Condition	last	92:16:3097:3100	4975750	0	True				
ANR	4975929	Identifier	last		4975750	0					
ANR	4975930	CompoundStatement		31:22:971:971	4975750	1					
ANR	4975931	Label	case 0 :	93:12:3117:3123	4975750	0	True				
ANR	4975932	IfStatement	if ( pattern == 0 )		4975750	1					
ANR	4975933	Condition	pattern == 0	94:20:3161:3172	4975750	0	True				
ANR	4975934	EqualityExpression	pattern == 0		4975750	0		==			
ANR	4975935	Identifier	pattern		4975750	0					
ANR	4975936	PrimaryExpression	0		4975750	1					
ANR	4975937	Statement	FOR_EACH_LINE	95:20:3195:3207	4975750	1	True				
ANR	4975938	ElseStatement	else		4975750	0					
ANR	4975939	IfStatement	if ( pattern == ( mono_fill_chunk ) ( - 1 ) )		4975750	0					
ANR	4975940	Condition	pattern == ( mono_fill_chunk ) ( - 1 )	96:25:3274:3305	4975750	0	True				
ANR	4975941	EqualityExpression	pattern == ( mono_fill_chunk ) ( - 1 )		4975750	0		==			
ANR	4975942	Identifier	pattern		4975750	0					
ANR	4975943	CastExpression	( mono_fill_chunk ) ( - 1 )		4975750	1					
ANR	4975944	CastTarget	mono_fill_chunk		4975750	0					
ANR	4975945	UnaryOperationExpression	- 1		4975750	1					
ANR	4975946	UnaryOperator	-		4975750	0					
ANR	4975947	PrimaryExpression	1		4975750	1					
ANR	4975948	Statement	FOR_EACH_LINE	97:20:3328:3340	4975750	1	True				
ANR	4975949	ElseStatement	else		4975750	0					
ANR	4975950	Statement	FOR_EACH_LINE	99:20:3421:3433	4975750	0	True				
ANR	4975951	Statement	(	95:33:3208:3208	4975750	2	True				
ANR	4975952	ExpressionStatement	* ptr &= ~mask	95:34:3209:3222	4975750	3	True				
ANR	4975953	AssignmentExpression	* ptr &= ~mask		4975750	0		&=			
ANR	4975954	UnaryOperationExpression	* ptr		4975750	0					
ANR	4975955	UnaryOperator	*		4975750	0					
ANR	4975956	Identifier	ptr		4975750	1					
ANR	4975957	Identifier	~mask		4975750	1					
ANR	4975958	ExpressionStatement	ptr [ 1 ] &= ~right_mask	95:49:3224:3245	4975750	4	True				
ANR	4975959	AssignmentExpression	ptr [ 1 ] &= ~right_mask		4975750	0		&=			
ANR	4975960	ArrayIndexing	ptr [ 1 ]		4975750	0					
ANR	4975961	Identifier	ptr		4975750	0					
ANR	4975962	PrimaryExpression	1		4975750	1					
ANR	4975963	Identifier	~right_mask		4975750	1					
ANR	4975964	Statement	)	95:71:3246:3246	4975750	5	True				
ANR	4975965	ExpressionStatement		95:72:3247:3247	4975750	6	True				
ANR	4975966	Statement	(	97:33:3341:3341	4975750	7	True				
ANR	4975967	ExpressionStatement	* ptr |= mask	97:34:3342:3354	4975750	8	True				
ANR	4975968	AssignmentExpression	* ptr |= mask		4975750	0		|=			
ANR	4975969	UnaryOperationExpression	* ptr		4975750	0					
ANR	4975970	UnaryOperator	*		4975750	0					
ANR	4975971	Identifier	ptr		4975750	1					
ANR	4975972	Identifier	mask		4975750	1					
ANR	4975973	ExpressionStatement	ptr [ 1 ] |= right_mask	97:48:3356:3376	4975750	9	True				
ANR	4975974	AssignmentExpression	ptr [ 1 ] |= right_mask		4975750	0		|=			
ANR	4975975	ArrayIndexing	ptr [ 1 ]		4975750	0					
ANR	4975976	Identifier	ptr		4975750	0					
ANR	4975977	PrimaryExpression	1		4975750	1					
ANR	4975978	Identifier	right_mask		4975750	1					
ANR	4975979	Statement	)	97:69:3377:3377	4975750	10	True				
ANR	4975980	ExpressionStatement		97:70:3378:3378	4975750	11	True				
ANR	4975981	Statement	(	99:33:3434:3434	4975750	12	True				
ANR	4975982	ExpressionStatement	* ptr = ( * ptr & ~mask ) | ( pattern & mask )	100:24:3460:3500	4975750	13	True				
ANR	4975983	AssignmentExpression	* ptr = ( * ptr & ~mask ) | ( pattern & mask )		4975750	0		=			
ANR	4975984	UnaryOperationExpression	* ptr		4975750	0					
ANR	4975985	UnaryOperator	*		4975750	0					
ANR	4975986	Identifier	ptr		4975750	1					
ANR	4975987	InclusiveOrExpression	( * ptr & ~mask ) | ( pattern & mask )		4975750	1		|			
ANR	4975988	BitAndExpression	* ptr & ~mask		4975750	0		&			
ANR	4975989	UnaryOperationExpression	* ptr		4975750	0					
ANR	4975990	UnaryOperator	*		4975750	0					
ANR	4975991	Identifier	ptr		4975750	1					
ANR	4975992	Identifier	~mask		4975750	1					
ANR	4975993	BitAndExpression	pattern & mask		4975750	1		&			
ANR	4975994	Identifier	pattern		4975750	0					
ANR	4975995	Identifier	mask		4975750	1					
ANR	4975996	ExpressionStatement	ptr [ 1 ] = ( ptr [ 1 ] & ~right_mask ) | ( pattern & right_mask )	101:24:3526:3582	4975750	14	True				
ANR	4975997	AssignmentExpression	ptr [ 1 ] = ( ptr [ 1 ] & ~right_mask ) | ( pattern & right_mask )		4975750	0		=			
ANR	4975998	ArrayIndexing	ptr [ 1 ]		4975750	0					
ANR	4975999	Identifier	ptr		4975750	0					
ANR	4976000	PrimaryExpression	1		4975750	1					
ANR	4976001	InclusiveOrExpression	( ptr [ 1 ] & ~right_mask ) | ( pattern & right_mask )		4975750	1		|			
ANR	4976002	BitAndExpression	ptr [ 1 ] & ~right_mask		4975750	0		&			
ANR	4976003	ArrayIndexing	ptr [ 1 ]		4975750	0					
ANR	4976004	Identifier	ptr		4975750	0					
ANR	4976005	PrimaryExpression	1		4975750	1					
ANR	4976006	Identifier	~right_mask		4975750	1					
ANR	4976007	BitAndExpression	pattern & right_mask		4975750	1		&			
ANR	4976008	Identifier	pattern		4975750	0					
ANR	4976009	Identifier	right_mask		4975750	1					
ANR	4976010	Statement	)	101:82:3584:3584	4975750	15	True				
ANR	4976011	ExpressionStatement		101:83:3585:3585	4975750	16	True				
ANR	4976012	BreakStatement	break ;	102:16:3603:3608	4975750	17	True				
ANR	4976013	Label	case 1 :	103:12:3622:3628	4975750	18	True				
ANR	4976014	IfStatement	if ( pattern == 0 )		4975750	19					
ANR	4976015	Condition	pattern == 0	104:20:3666:3677	4975750	0	True				
ANR	4976016	EqualityExpression	pattern == 0		4975750	0		==			
ANR	4976017	Identifier	pattern		4975750	0					
ANR	4976018	PrimaryExpression	0		4975750	1					
ANR	4976019	Statement	FOR_EACH_LINE	105:20:3700:3712	4975750	1	True				
ANR	4976020	ElseStatement	else		4975750	0					
ANR	4976021	IfStatement	if ( pattern == ( mono_fill_chunk ) ( - 1 ) )		4975750	0					
ANR	4976022	Condition	pattern == ( mono_fill_chunk ) ( - 1 )	108:25:3863:3894	4975750	0	True				
ANR	4976023	EqualityExpression	pattern == ( mono_fill_chunk ) ( - 1 )		4975750	0		==			
ANR	4976024	Identifier	pattern		4975750	0					
ANR	4976025	CastExpression	( mono_fill_chunk ) ( - 1 )		4975750	1					
ANR	4976026	CastTarget	mono_fill_chunk		4975750	0					
ANR	4976027	UnaryOperationExpression	- 1		4975750	1					
ANR	4976028	UnaryOperator	-		4975750	0					
ANR	4976029	PrimaryExpression	1		4975750	1					
ANR	4976030	Statement	FOR_EACH_LINE	109:20:3917:3929	4975750	1	True				
ANR	4976031	ElseStatement	else		4975750	0					
ANR	4976032	Statement	FOR_EACH_LINE	113:20:4103:4115	4975750	0	True				
ANR	4976033	Statement	(	105:33:3713:3713	4975750	20	True				
ANR	4976034	ExpressionStatement	* ptr &= ~mask	105:35:3715:3728	4975750	21	True				
ANR	4976035	AssignmentExpression	* ptr &= ~mask		4975750	0		&=			
ANR	4976036	UnaryOperationExpression	* ptr		4975750	0					
ANR	4976037	UnaryOperator	*		4975750	0					
ANR	4976038	Identifier	ptr		4975750	1					
ANR	4976039	Identifier	~mask		4975750	1					
ANR	4976040	ExpressionStatement	ptr [ 1 ] = 0	106:35:3765:3775	4975750	22	True				
ANR	4976041	AssignmentExpression	ptr [ 1 ] = 0		4975750	0		=			
ANR	4976042	ArrayIndexing	ptr [ 1 ]		4975750	0					
ANR	4976043	Identifier	ptr		4975750	0					
ANR	4976044	PrimaryExpression	1		4975750	1					
ANR	4976045	PrimaryExpression	0		4975750	1					
ANR	4976046	ExpressionStatement	ptr [ 2 ] &= ~right_mask	107:35:3812:3833	4975750	23	True				
ANR	4976047	AssignmentExpression	ptr [ 2 ] &= ~right_mask		4975750	0		&=			
ANR	4976048	ArrayIndexing	ptr [ 2 ]		4975750	0					
ANR	4976049	Identifier	ptr		4975750	0					
ANR	4976050	PrimaryExpression	2		4975750	1					
ANR	4976051	Identifier	~right_mask		4975750	1					
ANR	4976052	Statement	)	107:58:3835:3835	4975750	24	True				
ANR	4976053	ExpressionStatement		107:59:3836:3836	4975750	25	True				
ANR	4976054	Statement	(	109:33:3930:3930	4975750	26	True				
ANR	4976055	ExpressionStatement	* ptr |= mask	109:35:3932:3944	4975750	27	True				
ANR	4976056	AssignmentExpression	* ptr |= mask		4975750	0		|=			
ANR	4976057	UnaryOperationExpression	* ptr		4975750	0					
ANR	4976058	UnaryOperator	*		4975750	0					
ANR	4976059	Identifier	ptr		4975750	1					
ANR	4976060	Identifier	mask		4975750	1					
ANR	4976061	ExpressionStatement	ptr [ 1 ] = ~ ( chunk ) 0	110:35:3981:4000	4975750	28	True				
ANR	4976062	AssignmentExpression	ptr [ 1 ] = ~ ( chunk ) 0		4975750	0		=			
ANR	4976063	ArrayIndexing	ptr [ 1 ]		4975750	0					
ANR	4976064	Identifier	ptr		4975750	0					
ANR	4976065	PrimaryExpression	1		4975750	1					
ANR	4976066	UnaryOperationExpression	~ ( chunk ) 0		4975750	1					
ANR	4976067	UnaryOperator	~		4975750	0					
ANR	4976068	CastExpression	( chunk ) 0		4975750	1					
ANR	4976069	CastTarget	chunk		4975750	0					
ANR	4976070	PrimaryExpression	0		4975750	1					
ANR	4976071	ExpressionStatement	ptr [ 2 ] |= right_mask	111:35:4037:4057	4975750	29	True				
ANR	4976072	AssignmentExpression	ptr [ 2 ] |= right_mask		4975750	0		|=			
ANR	4976073	ArrayIndexing	ptr [ 2 ]		4975750	0					
ANR	4976074	Identifier	ptr		4975750	0					
ANR	4976075	PrimaryExpression	2		4975750	1					
ANR	4976076	Identifier	right_mask		4975750	1					
ANR	4976077	Statement	)	111:57:4059:4059	4975750	30	True				
ANR	4976078	ExpressionStatement		111:58:4060:4060	4975750	31	True				
ANR	4976079	Statement	(	113:33:4116:4116	4975750	32	True				
ANR	4976080	ExpressionStatement	* ptr = ( * ptr & ~mask ) | ( pattern & mask )	113:35:4118:4158	4975750	33	True				
ANR	4976081	AssignmentExpression	* ptr = ( * ptr & ~mask ) | ( pattern & mask )		4975750	0		=			
ANR	4976082	UnaryOperationExpression	* ptr		4975750	0					
ANR	4976083	UnaryOperator	*		4975750	0					
ANR	4976084	Identifier	ptr		4975750	1					
ANR	4976085	InclusiveOrExpression	( * ptr & ~mask ) | ( pattern & mask )		4975750	1		|			
ANR	4976086	BitAndExpression	* ptr & ~mask		4975750	0		&			
ANR	4976087	UnaryOperationExpression	* ptr		4975750	0					
ANR	4976088	UnaryOperator	*		4975750	0					
ANR	4976089	Identifier	ptr		4975750	1					
ANR	4976090	Identifier	~mask		4975750	1					
ANR	4976091	BitAndExpression	pattern & mask		4975750	1		&			
ANR	4976092	Identifier	pattern		4975750	0					
ANR	4976093	Identifier	mask		4975750	1					
ANR	4976094	ExpressionStatement	ptr [ 1 ] = pattern	114:36:4196:4212	4975750	34	True				
ANR	4976095	AssignmentExpression	ptr [ 1 ] = pattern		4975750	0		=			
ANR	4976096	ArrayIndexing	ptr [ 1 ]		4975750	0					
ANR	4976097	Identifier	ptr		4975750	0					
ANR	4976098	PrimaryExpression	1		4975750	1					
ANR	4976099	Identifier	pattern		4975750	1					
ANR	4976100	ExpressionStatement	ptr [ 2 ] = ( ptr [ 2 ] & ~right_mask ) | ( pattern & right_mask )	115:36:4250:4306	4975750	35	True				
ANR	4976101	AssignmentExpression	ptr [ 2 ] = ( ptr [ 2 ] & ~right_mask ) | ( pattern & right_mask )		4975750	0		=			
ANR	4976102	ArrayIndexing	ptr [ 2 ]		4975750	0					
ANR	4976103	Identifier	ptr		4975750	0					
ANR	4976104	PrimaryExpression	2		4975750	1					
ANR	4976105	InclusiveOrExpression	( ptr [ 2 ] & ~right_mask ) | ( pattern & right_mask )		4975750	1		|			
ANR	4976106	BitAndExpression	ptr [ 2 ] & ~right_mask		4975750	0		&			
ANR	4976107	ArrayIndexing	ptr [ 2 ]		4975750	0					
ANR	4976108	Identifier	ptr		4975750	0					
ANR	4976109	PrimaryExpression	2		4975750	1					
ANR	4976110	Identifier	~right_mask		4975750	1					
ANR	4976111	BitAndExpression	pattern & right_mask		4975750	1		&			
ANR	4976112	Identifier	pattern		4975750	0					
ANR	4976113	Identifier	right_mask		4975750	1					
ANR	4976114	Statement	)	115:94:4308:4308	4975750	36	True				
ANR	4976115	ExpressionStatement		115:95:4309:4309	4975750	37	True				
ANR	4976116	BreakStatement	break ;	116:16:4327:4332	4975750	38	True				
ANR	4976117	Label	default :	117:12:4346:4353	4975750	39	True				
ANR	4976118	Identifier	default		4975750	0					
ANR	4976119	CompoundStatement		57:20:2261:2309	4975750	40					
ANR	4976120	IdentifierDeclStatement	uint byte_count = ( last_bit >> 3 ) & - chunk_bytes ;	118:20:4393:4441	4975750	0	True				
ANR	4976121	IdentifierDecl	byte_count = ( last_bit >> 3 ) & - chunk_bytes		4975750	0					
ANR	4976122	IdentifierDeclType	uint		4975750	0					
ANR	4976123	Identifier	byte_count		4975750	1					
ANR	4976124	AssignmentExpression	byte_count = ( last_bit >> 3 ) & - chunk_bytes		4975750	2		=			
ANR	4976125	Identifier	byte_count		4975750	0					
ANR	4976126	BitAndExpression	( last_bit >> 3 ) & - chunk_bytes		4975750	1		&			
ANR	4976127	ShiftExpression	last_bit >> 3		4975750	0		>>			
ANR	4976128	Identifier	last_bit		4975750	0					
ANR	4976129	PrimaryExpression	3		4975750	1					
ANR	4976130	UnaryOperationExpression	- chunk_bytes		4975750	1					
ANR	4976131	UnaryOperator	-		4975750	0					
ANR	4976132	Identifier	chunk_bytes		4975750	1					
ANR	4976133	IfStatement	if ( pattern == 0 )		4975750	1					
ANR	4976134	Condition	pattern == 0	120:24:4468:4479	4975750	0	True				
ANR	4976135	EqualityExpression	pattern == 0		4975750	0		==			
ANR	4976136	Identifier	pattern		4975750	0					
ANR	4976137	PrimaryExpression	0		4975750	1					
ANR	4976138	Statement	FOR_EACH_LINE	121:24:4506:4518	4975750	1	True				
ANR	4976139	ElseStatement	else		4975750	0					
ANR	4976140	IfStatement	if ( pattern == ( mono_fill_chunk ) ( - 1 ) )		4975750	0					
ANR	4976141	Condition	pattern == ( mono_fill_chunk ) ( - 1 )	124:29:4708:4739	4975750	0	True				
ANR	4976142	EqualityExpression	pattern == ( mono_fill_chunk ) ( - 1 )		4975750	0		==			
ANR	4976143	Identifier	pattern		4975750	0					
ANR	4976144	CastExpression	( mono_fill_chunk ) ( - 1 )		4975750	1					
ANR	4976145	CastTarget	mono_fill_chunk		4975750	0					
ANR	4976146	UnaryOperationExpression	- 1		4975750	1					
ANR	4976147	UnaryOperator	-		4975750	0					
ANR	4976148	PrimaryExpression	1		4975750	1					
ANR	4976149	Statement	FOR_EACH_LINE	125:24:4766:4778	4975750	1	True				
ANR	4976150	ElseStatement	else		4975750	0					
ANR	4976151	Statement	FOR_EACH_LINE	129:24:4989:5001	4975750	0	True				
ANR	4976152	Statement	(	121:37:4519:4519	4975750	2	True				
ANR	4976153	ExpressionStatement	* ptr &= ~mask	121:39:4521:4534	4975750	3	True				
ANR	4976154	AssignmentExpression	* ptr &= ~mask		4975750	0		&=			
ANR	4976155	UnaryOperationExpression	* ptr		4975750	0					
ANR	4976156	UnaryOperator	*		4975750	0					
ANR	4976157	Identifier	ptr		4975750	1					
ANR	4976158	Identifier	~mask		4975750	1					
ANR	4976159	ExpressionStatement	"memset ( ptr + 1 , 0 , byte_count )"	122:39:4575:4605	4975750	4	True				
ANR	4976160	CallExpression	"memset ( ptr + 1 , 0 , byte_count )"		4975750	0					
ANR	4976161	Callee	memset		4975750	0					
ANR	4976162	Identifier	memset		4975750	0					
ANR	4976163	ArgumentList	ptr + 1		4975750	1					
ANR	4976164	Argument	ptr + 1		4975750	0					
ANR	4976165	AdditiveExpression	ptr + 1		4975750	0		+			
ANR	4976166	Identifier	ptr		4975750	0					
ANR	4976167	PrimaryExpression	1		4975750	1					
ANR	4976168	Argument	0		4975750	1					
ANR	4976169	PrimaryExpression	0		4975750	0					
ANR	4976170	Argument	byte_count		4975750	2					
ANR	4976171	Identifier	byte_count		4975750	0					
ANR	4976172	ExpressionStatement	ptr [ last + 1 ] &= ~right_mask	123:39:4646:4674	4975750	5	True				
ANR	4976173	AssignmentExpression	ptr [ last + 1 ] &= ~right_mask		4975750	0		&=			
ANR	4976174	ArrayIndexing	ptr [ last + 1 ]		4975750	0					
ANR	4976175	Identifier	ptr		4975750	0					
ANR	4976176	AdditiveExpression	last + 1		4975750	1		+			
ANR	4976177	Identifier	last		4975750	0					
ANR	4976178	PrimaryExpression	1		4975750	1					
ANR	4976179	Identifier	~right_mask		4975750	1					
ANR	4976180	Statement	)	123:69:4676:4676	4975750	6	True				
ANR	4976181	ExpressionStatement		123:70:4677:4677	4975750	7	True				
ANR	4976182	Statement	(	125:37:4779:4779	4975750	8	True				
ANR	4976183	ExpressionStatement	* ptr |= mask	125:39:4781:4793	4975750	9	True				
ANR	4976184	AssignmentExpression	* ptr |= mask		4975750	0		|=			
ANR	4976185	UnaryOperationExpression	* ptr		4975750	0					
ANR	4976186	UnaryOperator	*		4975750	0					
ANR	4976187	Identifier	ptr		4975750	1					
ANR	4976188	Identifier	mask		4975750	1					
ANR	4976189	ExpressionStatement	"memset ( ptr + 1 , 0xff , byte_count )"	126:39:4834:4867	4975750	10	True				
ANR	4976190	CallExpression	"memset ( ptr + 1 , 0xff , byte_count )"		4975750	0					
ANR	4976191	Callee	memset		4975750	0					
ANR	4976192	Identifier	memset		4975750	0					
ANR	4976193	ArgumentList	ptr + 1		4975750	1					
ANR	4976194	Argument	ptr + 1		4975750	0					
ANR	4976195	AdditiveExpression	ptr + 1		4975750	0		+			
ANR	4976196	Identifier	ptr		4975750	0					
ANR	4976197	PrimaryExpression	1		4975750	1					
ANR	4976198	Argument	0xff		4975750	1					
ANR	4976199	PrimaryExpression	0xff		4975750	0					
ANR	4976200	Argument	byte_count		4975750	2					
ANR	4976201	Identifier	byte_count		4975750	0					
ANR	4976202	ExpressionStatement	ptr [ last + 1 ] |= right_mask	127:39:4908:4935	4975750	11	True				
ANR	4976203	AssignmentExpression	ptr [ last + 1 ] |= right_mask		4975750	0		|=			
ANR	4976204	ArrayIndexing	ptr [ last + 1 ]		4975750	0					
ANR	4976205	Identifier	ptr		4975750	0					
ANR	4976206	AdditiveExpression	last + 1		4975750	1		+			
ANR	4976207	Identifier	last		4975750	0					
ANR	4976208	PrimaryExpression	1		4975750	1					
ANR	4976209	Identifier	right_mask		4975750	1					
ANR	4976210	Statement	)	127:68:4937:4937	4975750	12	True				
ANR	4976211	ExpressionStatement		127:69:4938:4938	4975750	13	True				
ANR	4976212	Statement	(	129:37:5002:5002	4975750	14	True				
ANR	4976213	ExpressionStatement	* ptr = ( * ptr & ~mask ) | ( pattern & mask )	130:32:5036:5076	4975750	15	True				
ANR	4976214	AssignmentExpression	* ptr = ( * ptr & ~mask ) | ( pattern & mask )		4975750	0		=			
ANR	4976215	UnaryOperationExpression	* ptr		4975750	0					
ANR	4976216	UnaryOperator	*		4975750	0					
ANR	4976217	Identifier	ptr		4975750	1					
ANR	4976218	InclusiveOrExpression	( * ptr & ~mask ) | ( pattern & mask )		4975750	1		|			
ANR	4976219	BitAndExpression	* ptr & ~mask		4975750	0		&			
ANR	4976220	UnaryOperationExpression	* ptr		4975750	0					
ANR	4976221	UnaryOperator	*		4975750	0					
ANR	4976222	Identifier	ptr		4975750	1					
ANR	4976223	Identifier	~mask		4975750	1					
ANR	4976224	BitAndExpression	pattern & mask		4975750	1		&			
ANR	4976225	Identifier	pattern		4975750	0					
ANR	4976226	Identifier	mask		4975750	1					
ANR	4976227	ExpressionStatement	"memset ( ptr + 1 , ( byte ) pattern , byte_count )"	131:32:5110:5153	4975750	16	True				
ANR	4976228	CallExpression	"memset ( ptr + 1 , ( byte ) pattern , byte_count )"		4975750	0					
ANR	4976229	Callee	memset		4975750	0					
ANR	4976230	Identifier	memset		4975750	0					
ANR	4976231	ArgumentList	ptr + 1		4975750	1					
ANR	4976232	Argument	ptr + 1		4975750	0					
ANR	4976233	AdditiveExpression	ptr + 1		4975750	0		+			
ANR	4976234	Identifier	ptr		4975750	0					
ANR	4976235	PrimaryExpression	1		4975750	1					
ANR	4976236	Argument	( byte ) pattern		4975750	1					
ANR	4976237	CastExpression	( byte ) pattern		4975750	0					
ANR	4976238	CastTarget	byte		4975750	0					
ANR	4976239	Identifier	pattern		4975750	1					
ANR	4976240	Argument	byte_count		4975750	2					
ANR	4976241	Identifier	byte_count		4975750	0					
ANR	4976242	ExpressionStatement	ptr [ last + 1 ] = ( ptr [ last + 1 ] & ~right_mask ) | ( pattern & right_mask )	132:32:5187:5305	4975750	17	True				
ANR	4976243	AssignmentExpression	ptr [ last + 1 ] = ( ptr [ last + 1 ] & ~right_mask ) | ( pattern & right_mask )		4975750	0		=			
ANR	4976244	ArrayIndexing	ptr [ last + 1 ]		4975750	0					
ANR	4976245	Identifier	ptr		4975750	0					
ANR	4976246	AdditiveExpression	last + 1		4975750	1		+			
ANR	4976247	Identifier	last		4975750	0					
ANR	4976248	PrimaryExpression	1		4975750	1					
ANR	4976249	InclusiveOrExpression	( ptr [ last + 1 ] & ~right_mask ) | ( pattern & right_mask )		4975750	1		|			
ANR	4976250	BitAndExpression	ptr [ last + 1 ] & ~right_mask		4975750	0		&			
ANR	4976251	ArrayIndexing	ptr [ last + 1 ]		4975750	0					
ANR	4976252	Identifier	ptr		4975750	0					
ANR	4976253	AdditiveExpression	last + 1		4975750	1		+			
ANR	4976254	Identifier	last		4975750	0					
ANR	4976255	PrimaryExpression	1		4975750	1					
ANR	4976256	Identifier	~right_mask		4975750	1					
ANR	4976257	BitAndExpression	pattern & right_mask		4975750	1		&			
ANR	4976258	Identifier	pattern		4975750	0					
ANR	4976259	Identifier	right_mask		4975750	1					
ANR	4976260	Statement	)	133:73:5308:5308	4975750	18	True				
ANR	4976261	ExpressionStatement		133:74:5309:5309	4975750	19	True				
ANR	4976262	Statement	undef	137:1:5346:5350	4975750	15	True				
ANR	4976263	Statement	FOR_EACH_LINE	137:7:5352:5364	4975750	16	True				
ANR	4976264	ReturnType	undef chunk define chunk mono_fill_chunk undef mono_masks define mono_masks mono_fill_masks void		4975750	1					
ANR	4976265	Identifier	bits_fill_rectangle		4975750	2					
ANR	4976266	ParameterList	"byte * dest , int dest_bit , uint draster , mono_fill_chunk pattern , int width_bits , int height"		4975750	3					
ANR	4976267	Parameter	byte * dest	60:20:2017:2027	4975750	0	True				
ANR	4976268	ParameterType	byte *		4975750	0					
ANR	4976269	Identifier	dest		4975750	1					
ANR	4976270	Parameter	int dest_bit	60:33:2030:2041	4975750	1	True				
ANR	4976271	ParameterType	int		4975750	0					
ANR	4976272	Identifier	dest_bit		4975750	1					
ANR	4976273	Parameter	uint draster	60:47:2044:2055	4975750	2	True				
ANR	4976274	ParameterType	uint		4975750	0					
ANR	4976275	Identifier	draster		4975750	1					
ANR	4976276	Parameter	mono_fill_chunk pattern	61:20:2078:2100	4975750	3	True				
ANR	4976277	ParameterType	mono_fill_chunk		4975750	0					
ANR	4976278	Identifier	pattern		4975750	1					
ANR	4976279	Parameter	int width_bits	61:45:2103:2116	4975750	4	True				
ANR	4976280	ParameterType	int		4975750	0					
ANR	4976281	Identifier	width_bits		4975750	1					
ANR	4976282	Parameter	int height	61:61:2119:2128	4975750	5	True				
ANR	4976283	ParameterType	int		4975750	0					
ANR	4976284	Identifier	height		4975750	1					
ANR	4976285	CFGEntryNode	ENTRY		4975750		True				
ANR	4976286	CFGExitNode	EXIT		4975750		True				
ANR	4976287	Symbol	width_bits		4975750						
ANR	4976288	Symbol	line_count		4975750						
ANR	4976289	Symbol	last		4975750						
ANR	4976290	Symbol	chunk_log2_bits		4975750						
ANR	4976291	Symbol	draster		4975750						
ANR	4976292	Symbol	dest_bit		4975750						
ANR	4976293	Symbol	pattern		4975750						
ANR	4976294	Symbol	~mask		4975750						
ANR	4976295	Symbol	right_mask		4975750						
ANR	4976296	Symbol	chunk_align_bit_mask		4975750						
ANR	4976297	Symbol	dest		4975750						
ANR	4976298	Symbol	bit		4975750						
ANR	4976299	Symbol	last_bit		4975750						
ANR	4976300	Symbol	* last		4975750						
ANR	4976301	Symbol	inc_ptr		4975750						
ANR	4976302	Symbol	ptr		4975750						
ANR	4976303	Symbol	byte_count		4975750						
ANR	4976304	Symbol	chunk_bits		4975750						
ANR	4976305	Symbol	* ptr		4975750						
ANR	4976306	Symbol	~right_mask		4975750						
ANR	4976307	Symbol	chunk_bit_mask		4975750						
ANR	4976308	Symbol	chunk_bytes		4975750						
ANR	4976309	Symbol	height		4975750						
ANR	4976310	Symbol	mask		4975750						
ANR	4976311	Function	bits_fill_rectangle_masked	146:0:5643:9348							
ANR	4976312	FunctionDef	"bits_fill_rectangle_masked (byte * dest , int dest_bit , uint draster , mono_fill_chunk pattern , mono_fill_chunk src_mask , int width_bits , int height)"		4976311	0					
ANR	4976313	CompoundStatement		150:0:5835:9348	4976311	0					
ANR	4976314	IdentifierDeclStatement	uint bit ;	151:4:5841:5849	4976311	0	True				
ANR	4976315	IdentifierDecl	bit		4976311	0					
ANR	4976316	IdentifierDeclType	uint		4976311	0					
ANR	4976317	Identifier	bit		4976311	1					
ANR	4976318	IdentifierDeclStatement	chunk right_mask ;	152:4:5855:5871	4976311	1	True				
ANR	4976319	IdentifierDecl	right_mask		4976311	0					
ANR	4976320	IdentifierDeclType	chunk		4976311	0					
ANR	4976321	Identifier	right_mask		4976311	1					
ANR	4976322	IdentifierDeclStatement	int line_count = height ;	153:4:5877:5900	4976311	2	True				
ANR	4976323	IdentifierDecl	line_count = height		4976311	0					
ANR	4976324	IdentifierDeclType	int		4976311	0					
ANR	4976325	Identifier	line_count		4976311	1					
ANR	4976326	AssignmentExpression	line_count = height		4976311	2		=			
ANR	4976327	Identifier	height		4976311	0					
ANR	4976328	Identifier	height		4976311	1					
ANR	4976329	IdentifierDeclStatement	chunk * ptr ;	154:4:5906:5916	4976311	3	True				
ANR	4976330	IdentifierDecl	* ptr		4976311	0					
ANR	4976331	IdentifierDeclType	chunk *		4976311	0					
ANR	4976332	Identifier	ptr		4976311	1					
ANR	4976333	IdentifierDeclStatement	int last_bit ;	155:4:5922:5934	4976311	4	True				
ANR	4976334	IdentifierDecl	last_bit		4976311	0					
ANR	4976335	IdentifierDeclType	int		4976311	0					
ANR	4976336	Identifier	last_bit		4976311	1					
ANR	4976337	Statement	define	157:1:5938:5943	4976311	5	True				
ANR	4976338	Statement	FOR_EACH_LINE	157:8:5945:5957	4976311	6	True				
ANR	4976339	Statement	(	157:21:5958:5958	4976311	7	True				
ANR	4976340	Statement	stat	157:22:5959:5962	4976311	8	True				
ANR	4976341	Statement	)	157:26:5963:5963	4976311	9	True				
ANR	4976342	DoStatement	do		4976311	10					
ANR	4976343	CompoundStatement		9:11:141:141	4976311	0					
ANR	4976344	Statement	stat	158:13:5979:5982	4976311	0	True				
ANR	4976345	Condition	"inc_ptr ( ptr , draster ) , -- line_count"	158:28:5994:6028	4976311	1	True				
ANR	4976346	Expression	"inc_ptr ( ptr , draster ) , -- line_count"		4976311	0					
ANR	4976347	CallExpression	"inc_ptr ( ptr , draster )"		4976311	0					
ANR	4976348	Callee	inc_ptr		4976311	0					
ANR	4976349	Identifier	inc_ptr		4976311	0					
ANR	4976350	ArgumentList	ptr		4976311	1					
ANR	4976351	Argument	ptr		4976311	0					
ANR	4976352	Identifier	ptr		4976311	0					
ANR	4976353	Argument	draster		4976311	1					
ANR	4976354	Identifier	draster		4976311	0					
ANR	4976355	UnaryExpression	-- line_count		4976311	1					
ANR	4976356	IncDec	--		4976311	0					
ANR	4976357	Identifier	line_count		4976311	1					
ANR	4976358	ExpressionStatement	ptr = ( chunk * ) dest	161:4:6087:6107	4976311	11	True				
ANR	4976359	AssignmentExpression	ptr = ( chunk * ) dest		4976311	0		=			
ANR	4976360	Identifier	ptr		4976311	0					
ANR	4976361	CastExpression	( chunk * ) dest		4976311	1					
ANR	4976362	CastTarget	chunk *		4976311	0					
ANR	4976363	Identifier	dest		4976311	1					
ANR	4976364	ExpressionStatement	bit = dest_bit & chunk_align_bit_mask	162:4:6113:6150	4976311	12	True				
ANR	4976365	AssignmentExpression	bit = dest_bit & chunk_align_bit_mask		4976311	0		=			
ANR	4976366	Identifier	bit		4976311	0					
ANR	4976367	BitAndExpression	dest_bit & chunk_align_bit_mask		4976311	1		&			
ANR	4976368	Identifier	dest_bit		4976311	0					
ANR	4976369	Identifier	chunk_align_bit_mask		4976311	1					
ANR	4976370	ExpressionStatement	last_bit = width_bits + bit - ( chunk_bits + 1 )	163:4:6156:6202	4976311	13	True				
ANR	4976371	AssignmentExpression	last_bit = width_bits + bit - ( chunk_bits + 1 )		4976311	0		=			
ANR	4976372	Identifier	last_bit		4976311	0					
ANR	4976373	AdditiveExpression	width_bits + bit - ( chunk_bits + 1 )		4976311	1		+			
ANR	4976374	Identifier	width_bits		4976311	0					
ANR	4976375	AdditiveExpression	bit - ( chunk_bits + 1 )		4976311	1		-			
ANR	4976376	Identifier	bit		4976311	0					
ANR	4976377	AdditiveExpression	chunk_bits + 1		4976311	1		+			
ANR	4976378	Identifier	chunk_bits		4976311	0					
ANR	4976379	PrimaryExpression	1		4976311	1					
ANR	4976380	IfStatement	if ( last_bit < 0 )		4976311	14					
ANR	4976381	Condition	last_bit < 0	165:8:6213:6224	4976311	0	True				
ANR	4976382	RelationalExpression	last_bit < 0		4976311	0		<			
ANR	4976383	Identifier	last_bit		4976311	0					
ANR	4976384	PrimaryExpression	0		4976311	1					
ANR	4976385	CompoundStatement		16:22:391:391	4976311	1					
ANR	4976386	ExpressionStatement	"set_mono_thin_mask ( right_mask , width_bits , bit )"	166:8:6254:6301	4976311	0	True				
ANR	4976387	CallExpression	"set_mono_thin_mask ( right_mask , width_bits , bit )"		4976311	0					
ANR	4976388	Callee	set_mono_thin_mask		4976311	0					
ANR	4976389	Identifier	set_mono_thin_mask		4976311	0					
ANR	4976390	ArgumentList	right_mask		4976311	1					
ANR	4976391	Argument	right_mask		4976311	0					
ANR	4976392	Identifier	right_mask		4976311	0					
ANR	4976393	Argument	width_bits		4976311	1					
ANR	4976394	Identifier	width_bits		4976311	0					
ANR	4976395	Argument	bit		4976311	2					
ANR	4976396	Identifier	bit		4976311	0					
ANR	4976397	ExpressionStatement	right_mask &= ~src_mask	167:8:6311:6334	4976311	1	True				
ANR	4976398	AssignmentExpression	right_mask &= ~src_mask		4976311	0		&=			
ANR	4976399	Identifier	right_mask		4976311	0					
ANR	4976400	Identifier	~src_mask		4976311	1					
ANR	4976401	IfStatement	if ( pattern == 0 )		4976311	2					
ANR	4976402	Condition	pattern == 0	168:12:6348:6359	4976311	0	True				
ANR	4976403	EqualityExpression	pattern == 0		4976311	0		==			
ANR	4976404	Identifier	pattern		4976311	0					
ANR	4976405	PrimaryExpression	0		4976311	1					
ANR	4976406	Statement	FOR_EACH_LINE	169:12:6374:6386	4976311	1	True				
ANR	4976407	ElseStatement	else		4976311	0					
ANR	4976408	IfStatement	if ( pattern == ( mono_fill_chunk ) ( - 1 ) )		4976311	0					
ANR	4976409	Condition	pattern == ( mono_fill_chunk ) ( - 1 )	170:17:6428:6459	4976311	0	True				
ANR	4976410	EqualityExpression	pattern == ( mono_fill_chunk ) ( - 1 )		4976311	0		==			
ANR	4976411	Identifier	pattern		4976311	0					
ANR	4976412	CastExpression	( mono_fill_chunk ) ( - 1 )		4976311	1					
ANR	4976413	CastTarget	mono_fill_chunk		4976311	0					
ANR	4976414	UnaryOperationExpression	- 1		4976311	1					
ANR	4976415	UnaryOperator	-		4976311	0					
ANR	4976416	PrimaryExpression	1		4976311	1					
ANR	4976417	Statement	FOR_EACH_LINE	171:12:6474:6486	4976311	1	True				
ANR	4976418	ElseStatement	else		4976311	0					
ANR	4976419	Statement	FOR_EACH_LINE	173:12:6535:6547	4976311	0	True				
ANR	4976420	Statement	(	169:25:6387:6387	4976311	3	True				
ANR	4976421	ExpressionStatement	* ptr &= ~right_mask	169:26:6388:6407	4976311	4	True				
ANR	4976422	AssignmentExpression	* ptr &= ~right_mask		4976311	0		&=			
ANR	4976423	UnaryOperationExpression	* ptr		4976311	0					
ANR	4976424	UnaryOperator	*		4976311	0					
ANR	4976425	Identifier	ptr		4976311	1					
ANR	4976426	Identifier	~right_mask		4976311	1					
ANR	4976427	Statement	)	169:46:6408:6408	4976311	5	True				
ANR	4976428	ExpressionStatement		169:47:6409:6409	4976311	6	True				
ANR	4976429	Statement	(	171:25:6487:6487	4976311	7	True				
ANR	4976430	ExpressionStatement	* ptr |= right_mask	171:26:6488:6506	4976311	8	True				
ANR	4976431	AssignmentExpression	* ptr |= right_mask		4976311	0		|=			
ANR	4976432	UnaryOperationExpression	* ptr		4976311	0					
ANR	4976433	UnaryOperator	*		4976311	0					
ANR	4976434	Identifier	ptr		4976311	1					
ANR	4976435	Identifier	right_mask		4976311	1					
ANR	4976436	Statement	)	171:45:6507:6507	4976311	9	True				
ANR	4976437	ExpressionStatement		171:46:6508:6508	4976311	10	True				
ANR	4976438	Statement	(	173:25:6548:6548	4976311	11	True				
ANR	4976439	ExpressionStatement	* ptr = ( * ptr & ~right_mask ) | ( pattern & right_mask )	174:16:6566:6618	4976311	12	True				
ANR	4976440	AssignmentExpression	* ptr = ( * ptr & ~right_mask ) | ( pattern & right_mask )		4976311	0		=			
ANR	4976441	UnaryOperationExpression	* ptr		4976311	0					
ANR	4976442	UnaryOperator	*		4976311	0					
ANR	4976443	Identifier	ptr		4976311	1					
ANR	4976444	InclusiveOrExpression	( * ptr & ~right_mask ) | ( pattern & right_mask )		4976311	1		|			
ANR	4976445	BitAndExpression	* ptr & ~right_mask		4976311	0		&			
ANR	4976446	UnaryOperationExpression	* ptr		4976311	0					
ANR	4976447	UnaryOperator	*		4976311	0					
ANR	4976448	Identifier	ptr		4976311	1					
ANR	4976449	Identifier	~right_mask		4976311	1					
ANR	4976450	BitAndExpression	pattern & right_mask		4976311	1		&			
ANR	4976451	Identifier	pattern		4976311	0					
ANR	4976452	Identifier	right_mask		4976311	1					
ANR	4976453	Statement	)	174:70:6620:6620	4976311	13	True				
ANR	4976454	ExpressionStatement		174:71:6621:6621	4976311	14	True				
ANR	4976455	ElseStatement	else		4976311	0					
ANR	4976456	CompoundStatement		28:8:828:866	4976311	0					
ANR	4976457	IdentifierDeclStatement	chunk mask ;	176:8:6644:6654	4976311	0	True				
ANR	4976458	IdentifierDecl	mask		4976311	0					
ANR	4976459	IdentifierDeclType	chunk		4976311	0					
ANR	4976460	Identifier	mask		4976311	1					
ANR	4976461	IdentifierDeclStatement	int last = last_bit >> chunk_log2_bits ;	177:8:6664:6702	4976311	1	True				
ANR	4976462	IdentifierDecl	last = last_bit >> chunk_log2_bits		4976311	0					
ANR	4976463	IdentifierDeclType	int		4976311	0					
ANR	4976464	Identifier	last		4976311	1					
ANR	4976465	AssignmentExpression	last = last_bit >> chunk_log2_bits		4976311	2		=			
ANR	4976466	Identifier	last		4976311	0					
ANR	4976467	ShiftExpression	last_bit >> chunk_log2_bits		4976311	1		>>			
ANR	4976468	Identifier	last_bit		4976311	0					
ANR	4976469	Identifier	chunk_log2_bits		4976311	1					
ANR	4976470	ExpressionStatement	"set_mono_left_mask ( mask , bit )"	179:8:6713:6742	4976311	2	True				
ANR	4976471	CallExpression	"set_mono_left_mask ( mask , bit )"		4976311	0					
ANR	4976472	Callee	set_mono_left_mask		4976311	0					
ANR	4976473	Identifier	set_mono_left_mask		4976311	0					
ANR	4976474	ArgumentList	mask		4976311	1					
ANR	4976475	Argument	mask		4976311	0					
ANR	4976476	Identifier	mask		4976311	0					
ANR	4976477	Argument	bit		4976311	1					
ANR	4976478	Identifier	bit		4976311	0					
ANR	4976479	ExpressionStatement	"set_mono_right_mask ( right_mask , ( last_bit & chunk_bit_mask ) + 1 )"	180:8:6752:6816	4976311	3	True				
ANR	4976480	CallExpression	"set_mono_right_mask ( right_mask , ( last_bit & chunk_bit_mask ) + 1 )"		4976311	0					
ANR	4976481	Callee	set_mono_right_mask		4976311	0					
ANR	4976482	Identifier	set_mono_right_mask		4976311	0					
ANR	4976483	ArgumentList	right_mask		4976311	1					
ANR	4976484	Argument	right_mask		4976311	0					
ANR	4976485	Identifier	right_mask		4976311	0					
ANR	4976486	Argument	( last_bit & chunk_bit_mask ) + 1		4976311	1					
ANR	4976487	AdditiveExpression	( last_bit & chunk_bit_mask ) + 1		4976311	0		+			
ANR	4976488	BitAndExpression	last_bit & chunk_bit_mask		4976311	0		&			
ANR	4976489	Identifier	last_bit		4976311	0					
ANR	4976490	Identifier	chunk_bit_mask		4976311	1					
ANR	4976491	PrimaryExpression	1		4976311	1					
ANR	4976492	ExpressionStatement	mask &= ~src_mask	181:8:6826:6843	4976311	4	True				
ANR	4976493	AssignmentExpression	mask &= ~src_mask		4976311	0		&=			
ANR	4976494	Identifier	mask		4976311	0					
ANR	4976495	Identifier	~src_mask		4976311	1					
ANR	4976496	ExpressionStatement	right_mask &= ~src_mask	182:8:6853:6876	4976311	5	True				
ANR	4976497	AssignmentExpression	right_mask &= ~src_mask		4976311	0		&=			
ANR	4976498	Identifier	right_mask		4976311	0					
ANR	4976499	Identifier	~src_mask		4976311	1					
ANR	4976500	SwitchStatement	switch ( last )		4976311	6					
ANR	4976501	Condition	last	183:16:6894:6897	4976311	0	True				
ANR	4976502	Identifier	last		4976311	0					
ANR	4976503	CompoundStatement		34:22:1064:1064	4976311	1					
ANR	4976504	Label	case 0 :	184:12:6914:6920	4976311	0	True				
ANR	4976505	IfStatement	if ( pattern == 0 )		4976311	1					
ANR	4976506	Condition	pattern == 0	185:20:6958:6969	4976311	0	True				
ANR	4976507	EqualityExpression	pattern == 0		4976311	0		==			
ANR	4976508	Identifier	pattern		4976311	0					
ANR	4976509	PrimaryExpression	0		4976311	1					
ANR	4976510	Statement	FOR_EACH_LINE	186:20:6992:7004	4976311	1	True				
ANR	4976511	ElseStatement	else		4976311	0					
ANR	4976512	IfStatement	if ( pattern == ( mono_fill_chunk ) ( - 1 ) )		4976311	0					
ANR	4976513	Condition	pattern == ( mono_fill_chunk ) ( - 1 )	187:25:7071:7102	4976311	0	True				
ANR	4976514	EqualityExpression	pattern == ( mono_fill_chunk ) ( - 1 )		4976311	0		==			
ANR	4976515	Identifier	pattern		4976311	0					
ANR	4976516	CastExpression	( mono_fill_chunk ) ( - 1 )		4976311	1					
ANR	4976517	CastTarget	mono_fill_chunk		4976311	0					
ANR	4976518	UnaryOperationExpression	- 1		4976311	1					
ANR	4976519	UnaryOperator	-		4976311	0					
ANR	4976520	PrimaryExpression	1		4976311	1					
ANR	4976521	Statement	FOR_EACH_LINE	188:20:7125:7137	4976311	1	True				
ANR	4976522	ElseStatement	else		4976311	0					
ANR	4976523	Statement	FOR_EACH_LINE	190:20:7218:7230	4976311	0	True				
ANR	4976524	Statement	(	186:33:7005:7005	4976311	2	True				
ANR	4976525	ExpressionStatement	* ptr &= ~mask	186:34:7006:7019	4976311	3	True				
ANR	4976526	AssignmentExpression	* ptr &= ~mask		4976311	0		&=			
ANR	4976527	UnaryOperationExpression	* ptr		4976311	0					
ANR	4976528	UnaryOperator	*		4976311	0					
ANR	4976529	Identifier	ptr		4976311	1					
ANR	4976530	Identifier	~mask		4976311	1					
ANR	4976531	ExpressionStatement	ptr [ 1 ] &= ~right_mask	186:49:7021:7042	4976311	4	True				
ANR	4976532	AssignmentExpression	ptr [ 1 ] &= ~right_mask		4976311	0		&=			
ANR	4976533	ArrayIndexing	ptr [ 1 ]		4976311	0					
ANR	4976534	Identifier	ptr		4976311	0					
ANR	4976535	PrimaryExpression	1		4976311	1					
ANR	4976536	Identifier	~right_mask		4976311	1					
ANR	4976537	Statement	)	186:71:7043:7043	4976311	5	True				
ANR	4976538	ExpressionStatement		186:72:7044:7044	4976311	6	True				
ANR	4976539	Statement	(	188:33:7138:7138	4976311	7	True				
ANR	4976540	ExpressionStatement	* ptr |= mask	188:34:7139:7151	4976311	8	True				
ANR	4976541	AssignmentExpression	* ptr |= mask		4976311	0		|=			
ANR	4976542	UnaryOperationExpression	* ptr		4976311	0					
ANR	4976543	UnaryOperator	*		4976311	0					
ANR	4976544	Identifier	ptr		4976311	1					
ANR	4976545	Identifier	mask		4976311	1					
ANR	4976546	ExpressionStatement	ptr [ 1 ] |= right_mask	188:48:7153:7173	4976311	9	True				
ANR	4976547	AssignmentExpression	ptr [ 1 ] |= right_mask		4976311	0		|=			
ANR	4976548	ArrayIndexing	ptr [ 1 ]		4976311	0					
ANR	4976549	Identifier	ptr		4976311	0					
ANR	4976550	PrimaryExpression	1		4976311	1					
ANR	4976551	Identifier	right_mask		4976311	1					
ANR	4976552	Statement	)	188:69:7174:7174	4976311	10	True				
ANR	4976553	ExpressionStatement		188:70:7175:7175	4976311	11	True				
ANR	4976554	Statement	(	190:33:7231:7231	4976311	12	True				
ANR	4976555	ExpressionStatement	* ptr = ( * ptr & ~mask ) | ( pattern & mask )	191:24:7257:7297	4976311	13	True				
ANR	4976556	AssignmentExpression	* ptr = ( * ptr & ~mask ) | ( pattern & mask )		4976311	0		=			
ANR	4976557	UnaryOperationExpression	* ptr		4976311	0					
ANR	4976558	UnaryOperator	*		4976311	0					
ANR	4976559	Identifier	ptr		4976311	1					
ANR	4976560	InclusiveOrExpression	( * ptr & ~mask ) | ( pattern & mask )		4976311	1		|			
ANR	4976561	BitAndExpression	* ptr & ~mask		4976311	0		&			
ANR	4976562	UnaryOperationExpression	* ptr		4976311	0					
ANR	4976563	UnaryOperator	*		4976311	0					
ANR	4976564	Identifier	ptr		4976311	1					
ANR	4976565	Identifier	~mask		4976311	1					
ANR	4976566	BitAndExpression	pattern & mask		4976311	1		&			
ANR	4976567	Identifier	pattern		4976311	0					
ANR	4976568	Identifier	mask		4976311	1					
ANR	4976569	ExpressionStatement	ptr [ 1 ] = ( ptr [ 1 ] & ~right_mask ) | ( pattern & right_mask )	192:24:7323:7379	4976311	14	True				
ANR	4976570	AssignmentExpression	ptr [ 1 ] = ( ptr [ 1 ] & ~right_mask ) | ( pattern & right_mask )		4976311	0		=			
ANR	4976571	ArrayIndexing	ptr [ 1 ]		4976311	0					
ANR	4976572	Identifier	ptr		4976311	0					
ANR	4976573	PrimaryExpression	1		4976311	1					
ANR	4976574	InclusiveOrExpression	( ptr [ 1 ] & ~right_mask ) | ( pattern & right_mask )		4976311	1		|			
ANR	4976575	BitAndExpression	ptr [ 1 ] & ~right_mask		4976311	0		&			
ANR	4976576	ArrayIndexing	ptr [ 1 ]		4976311	0					
ANR	4976577	Identifier	ptr		4976311	0					
ANR	4976578	PrimaryExpression	1		4976311	1					
ANR	4976579	Identifier	~right_mask		4976311	1					
ANR	4976580	BitAndExpression	pattern & right_mask		4976311	1		&			
ANR	4976581	Identifier	pattern		4976311	0					
ANR	4976582	Identifier	right_mask		4976311	1					
ANR	4976583	Statement	)	192:82:7381:7381	4976311	15	True				
ANR	4976584	ExpressionStatement		192:83:7382:7382	4976311	16	True				
ANR	4976585	BreakStatement	break ;	193:16:7400:7405	4976311	17	True				
ANR	4976586	Label	case 1 :	194:12:7419:7425	4976311	18	True				
ANR	4976587	IfStatement	if ( pattern == 0 )		4976311	19					
ANR	4976588	Condition	pattern == 0	195:20:7463:7474	4976311	0	True				
ANR	4976589	EqualityExpression	pattern == 0		4976311	0		==			
ANR	4976590	Identifier	pattern		4976311	0					
ANR	4976591	PrimaryExpression	0		4976311	1					
ANR	4976592	Statement	FOR_EACH_LINE	196:20:7497:7509	4976311	1	True				
ANR	4976593	ElseStatement	else		4976311	0					
ANR	4976594	IfStatement	if ( pattern == ( mono_fill_chunk ) ( - 1 ) )		4976311	0					
ANR	4976595	Condition	pattern == ( mono_fill_chunk ) ( - 1 )	199:25:7668:7699	4976311	0	True				
ANR	4976596	EqualityExpression	pattern == ( mono_fill_chunk ) ( - 1 )		4976311	0		==			
ANR	4976597	Identifier	pattern		4976311	0					
ANR	4976598	CastExpression	( mono_fill_chunk ) ( - 1 )		4976311	1					
ANR	4976599	CastTarget	mono_fill_chunk		4976311	0					
ANR	4976600	UnaryOperationExpression	- 1		4976311	1					
ANR	4976601	UnaryOperator	-		4976311	0					
ANR	4976602	PrimaryExpression	1		4976311	1					
ANR	4976603	Statement	FOR_EACH_LINE	200:20:7722:7734	4976311	1	True				
ANR	4976604	ElseStatement	else		4976311	0					
ANR	4976605	Statement	FOR_EACH_LINE	204:20:7908:7920	4976311	0	True				
ANR	4976606	Statement	(	196:33:7510:7510	4976311	20	True				
ANR	4976607	ExpressionStatement	* ptr &= ~mask	196:35:7512:7525	4976311	21	True				
ANR	4976608	AssignmentExpression	* ptr &= ~mask		4976311	0		&=			
ANR	4976609	UnaryOperationExpression	* ptr		4976311	0					
ANR	4976610	UnaryOperator	*		4976311	0					
ANR	4976611	Identifier	ptr		4976311	1					
ANR	4976612	Identifier	~mask		4976311	1					
ANR	4976613	ExpressionStatement	ptr [ 1 ] &= src_mask	197:35:7562:7580	4976311	22	True				
ANR	4976614	AssignmentExpression	ptr [ 1 ] &= src_mask		4976311	0		&=			
ANR	4976615	ArrayIndexing	ptr [ 1 ]		4976311	0					
ANR	4976616	Identifier	ptr		4976311	0					
ANR	4976617	PrimaryExpression	1		4976311	1					
ANR	4976618	Identifier	src_mask		4976311	1					
ANR	4976619	ExpressionStatement	ptr [ 2 ] &= ~right_mask	198:35:7617:7638	4976311	23	True				
ANR	4976620	AssignmentExpression	ptr [ 2 ] &= ~right_mask		4976311	0		&=			
ANR	4976621	ArrayIndexing	ptr [ 2 ]		4976311	0					
ANR	4976622	Identifier	ptr		4976311	0					
ANR	4976623	PrimaryExpression	2		4976311	1					
ANR	4976624	Identifier	~right_mask		4976311	1					
ANR	4976625	Statement	)	198:58:7640:7640	4976311	24	True				
ANR	4976626	ExpressionStatement		198:59:7641:7641	4976311	25	True				
ANR	4976627	Statement	(	200:33:7735:7735	4976311	26	True				
ANR	4976628	ExpressionStatement	* ptr |= mask	200:35:7737:7749	4976311	27	True				
ANR	4976629	AssignmentExpression	* ptr |= mask		4976311	0		|=			
ANR	4976630	UnaryOperationExpression	* ptr		4976311	0					
ANR	4976631	UnaryOperator	*		4976311	0					
ANR	4976632	Identifier	ptr		4976311	1					
ANR	4976633	Identifier	mask		4976311	1					
ANR	4976634	ExpressionStatement	ptr [ 1 ] |= ~src_mask	201:35:7786:7805	4976311	28	True				
ANR	4976635	AssignmentExpression	ptr [ 1 ] |= ~src_mask		4976311	0		|=			
ANR	4976636	ArrayIndexing	ptr [ 1 ]		4976311	0					
ANR	4976637	Identifier	ptr		4976311	0					
ANR	4976638	PrimaryExpression	1		4976311	1					
ANR	4976639	Identifier	~src_mask		4976311	1					
ANR	4976640	ExpressionStatement	ptr [ 2 ] |= right_mask	202:35:7842:7862	4976311	29	True				
ANR	4976641	AssignmentExpression	ptr [ 2 ] |= right_mask		4976311	0		|=			
ANR	4976642	ArrayIndexing	ptr [ 2 ]		4976311	0					
ANR	4976643	Identifier	ptr		4976311	0					
ANR	4976644	PrimaryExpression	2		4976311	1					
ANR	4976645	Identifier	right_mask		4976311	1					
ANR	4976646	Statement	)	202:57:7864:7864	4976311	30	True				
ANR	4976647	ExpressionStatement		202:58:7865:7865	4976311	31	True				
ANR	4976648	Statement	(	204:33:7921:7921	4976311	32	True				
ANR	4976649	ExpressionStatement	* ptr = ( * ptr & ~mask ) | ( pattern & mask )	204:35:7923:7963	4976311	33	True				
ANR	4976650	AssignmentExpression	* ptr = ( * ptr & ~mask ) | ( pattern & mask )		4976311	0		=			
ANR	4976651	UnaryOperationExpression	* ptr		4976311	0					
ANR	4976652	UnaryOperator	*		4976311	0					
ANR	4976653	Identifier	ptr		4976311	1					
ANR	4976654	InclusiveOrExpression	( * ptr & ~mask ) | ( pattern & mask )		4976311	1		|			
ANR	4976655	BitAndExpression	* ptr & ~mask		4976311	0		&			
ANR	4976656	UnaryOperationExpression	* ptr		4976311	0					
ANR	4976657	UnaryOperator	*		4976311	0					
ANR	4976658	Identifier	ptr		4976311	1					
ANR	4976659	Identifier	~mask		4976311	1					
ANR	4976660	BitAndExpression	pattern & mask		4976311	1		&			
ANR	4976661	Identifier	pattern		4976311	0					
ANR	4976662	Identifier	mask		4976311	1					
ANR	4976663	ExpressionStatement	ptr [ 1 ] = ( ptr [ 1 ] & src_mask ) | pattern	205:36:8001:8038	4976311	34	True				
ANR	4976664	AssignmentExpression	ptr [ 1 ] = ( ptr [ 1 ] & src_mask ) | pattern		4976311	0		=			
ANR	4976665	ArrayIndexing	ptr [ 1 ]		4976311	0					
ANR	4976666	Identifier	ptr		4976311	0					
ANR	4976667	PrimaryExpression	1		4976311	1					
ANR	4976668	InclusiveOrExpression	( ptr [ 1 ] & src_mask ) | pattern		4976311	1		|			
ANR	4976669	BitAndExpression	ptr [ 1 ] & src_mask		4976311	0		&			
ANR	4976670	ArrayIndexing	ptr [ 1 ]		4976311	0					
ANR	4976671	Identifier	ptr		4976311	0					
ANR	4976672	PrimaryExpression	1		4976311	1					
ANR	4976673	Identifier	src_mask		4976311	1					
ANR	4976674	Identifier	pattern		4976311	1					
ANR	4976675	ExpressionStatement	ptr [ 2 ] = ( ptr [ 2 ] & ~right_mask ) | ( pattern & right_mask )	206:36:8076:8132	4976311	35	True				
ANR	4976676	AssignmentExpression	ptr [ 2 ] = ( ptr [ 2 ] & ~right_mask ) | ( pattern & right_mask )		4976311	0		=			
ANR	4976677	ArrayIndexing	ptr [ 2 ]		4976311	0					
ANR	4976678	Identifier	ptr		4976311	0					
ANR	4976679	PrimaryExpression	2		4976311	1					
ANR	4976680	InclusiveOrExpression	( ptr [ 2 ] & ~right_mask ) | ( pattern & right_mask )		4976311	1		|			
ANR	4976681	BitAndExpression	ptr [ 2 ] & ~right_mask		4976311	0		&			
ANR	4976682	ArrayIndexing	ptr [ 2 ]		4976311	0					
ANR	4976683	Identifier	ptr		4976311	0					
ANR	4976684	PrimaryExpression	2		4976311	1					
ANR	4976685	Identifier	~right_mask		4976311	1					
ANR	4976686	BitAndExpression	pattern & right_mask		4976311	1		&			
ANR	4976687	Identifier	pattern		4976311	0					
ANR	4976688	Identifier	right_mask		4976311	1					
ANR	4976689	Statement	)	206:94:8134:8134	4976311	36	True				
ANR	4976690	ExpressionStatement		206:95:8135:8135	4976311	37	True				
ANR	4976691	BreakStatement	break ;	207:16:8153:8158	4976311	38	True				
ANR	4976692	Label	default :	208:12:8172:8179	4976311	39	True				
ANR	4976693	Identifier	default		4976311	0					
ANR	4976694	CompoundStatement		60:20:2383:2392	4976311	40					
ANR	4976695	IdentifierDeclStatement	int i ;	209:20:8219:8228	4976311	0	True				
ANR	4976696	IdentifierDecl	i		4976311	0					
ANR	4976697	IdentifierDeclType	int		4976311	0					
ANR	4976698	Identifier	i		4976311	1					
ANR	4976699	IfStatement	if ( pattern == 0 )		4976311	1					
ANR	4976700	Condition	pattern == 0	211:24:8255:8266	4976311	0	True				
ANR	4976701	EqualityExpression	pattern == 0		4976311	0		==			
ANR	4976702	Identifier	pattern		4976311	0					
ANR	4976703	PrimaryExpression	0		4976311	1					
ANR	4976704	Statement	FOR_EACH_LINE	212:24:8293:8305	4976311	1	True				
ANR	4976705	ElseStatement	else		4976311	0					
ANR	4976706	IfStatement	if ( pattern == ( mono_fill_chunk ) ( - 1 ) )		4976311	0					
ANR	4976707	Condition	pattern == ( mono_fill_chunk ) ( - 1 )	216:29:8546:8577	4976311	0	True				
ANR	4976708	EqualityExpression	pattern == ( mono_fill_chunk ) ( - 1 )		4976311	0		==			
ANR	4976709	Identifier	pattern		4976311	0					
ANR	4976710	CastExpression	( mono_fill_chunk ) ( - 1 )		4976311	1					
ANR	4976711	CastTarget	mono_fill_chunk		4976311	0					
ANR	4976712	UnaryOperationExpression	- 1		4976311	1					
ANR	4976713	UnaryOperator	-		4976311	0					
ANR	4976714	PrimaryExpression	1		4976311	1					
ANR	4976715	Statement	FOR_EACH_LINE	217:24:8604:8616	4976311	1	True				
ANR	4976716	ElseStatement	else		4976311	0					
ANR	4976717	Statement	FOR_EACH_LINE	222:24:8877:8889	4976311	0	True				
ANR	4976718	Statement	(	212:37:8306:8306	4976311	2	True				
ANR	4976719	ExpressionStatement	* ptr ++ &= ~mask	212:39:8308:8323	4976311	3	True				
ANR	4976720	AssignmentExpression	* ptr ++ &= ~mask		4976311	0		&=			
ANR	4976721	UnaryOperationExpression	* ptr ++		4976311	0					
ANR	4976722	UnaryOperator	*		4976311	0					
ANR	4976723	PostIncDecOperationExpression	ptr ++		4976311	1					
ANR	4976724	Identifier	ptr		4976311	0					
ANR	4976725	IncDec	++		4976311	1					
ANR	4976726	Identifier	~mask		4976311	1					
ANR	4976727	ForStatement	for ( i = 0 ; i < last ; i ++ )		4976311	4					
ANR	4976728	ForInit	i = 0 ;	213:44:8369:8374	4976311	0	True				
ANR	4976729	AssignmentExpression	i = 0		4976311	0		=			
ANR	4976730	Identifier	i		4976311	0					
ANR	4976731	PrimaryExpression	0		4976311	1					
ANR	4976732	Condition	i < last	213:51:8376:8383	4976311	1	True				
ANR	4976733	RelationalExpression	i < last		4976311	0		<			
ANR	4976734	Identifier	i		4976311	0					
ANR	4976735	Identifier	last		4976311	1					
ANR	4976736	PostIncDecOperationExpression	i ++	213:61:8386:8388	4976311	2	True				
ANR	4976737	Identifier	i		4976311	0					
ANR	4976738	IncDec	++		4976311	1					
ANR	4976739	ExpressionStatement	* ptr ++ &= src_mask	214:43:8434:8452	4976311	3	True				
ANR	4976740	AssignmentExpression	* ptr ++ &= src_mask		4976311	0		&=			
ANR	4976741	UnaryOperationExpression	* ptr ++		4976311	0					
ANR	4976742	UnaryOperator	*		4976311	0					
ANR	4976743	PostIncDecOperationExpression	ptr ++		4976311	1					
ANR	4976744	Identifier	ptr		4976311	0					
ANR	4976745	IncDec	++		4976311	1					
ANR	4976746	Identifier	src_mask		4976311	1					
ANR	4976747	ExpressionStatement	* ptr &= ~right_mask	215:39:8493:8512	4976311	5	True				
ANR	4976748	AssignmentExpression	* ptr &= ~right_mask		4976311	0		&=			
ANR	4976749	UnaryOperationExpression	* ptr		4976311	0					
ANR	4976750	UnaryOperator	*		4976311	0					
ANR	4976751	Identifier	ptr		4976311	1					
ANR	4976752	Identifier	~right_mask		4976311	1					
ANR	4976753	Statement	)	215:60:8514:8514	4976311	6	True				
ANR	4976754	ExpressionStatement		215:61:8515:8515	4976311	7	True				
ANR	4976755	Statement	(	217:37:8617:8617	4976311	8	True				
ANR	4976756	ExpressionStatement	* ptr ++ |= mask	217:39:8619:8633	4976311	9	True				
ANR	4976757	AssignmentExpression	* ptr ++ |= mask		4976311	0		|=			
ANR	4976758	UnaryOperationExpression	* ptr ++		4976311	0					
ANR	4976759	UnaryOperator	*		4976311	0					
ANR	4976760	PostIncDecOperationExpression	ptr ++		4976311	1					
ANR	4976761	Identifier	ptr		4976311	0					
ANR	4976762	IncDec	++		4976311	1					
ANR	4976763	Identifier	mask		4976311	1					
ANR	4976764	ForStatement	for ( i = 0 ; i < last ; i ++ )		4976311	10					
ANR	4976765	ForInit	i = 0 ;	218:44:8679:8684	4976311	0	True				
ANR	4976766	AssignmentExpression	i = 0		4976311	0		=			
ANR	4976767	Identifier	i		4976311	0					
ANR	4976768	PrimaryExpression	0		4976311	1					
ANR	4976769	Condition	i < last	218:51:8686:8693	4976311	1	True				
ANR	4976770	RelationalExpression	i < last		4976311	0		<			
ANR	4976771	Identifier	i		4976311	0					
ANR	4976772	Identifier	last		4976311	1					
ANR	4976773	PostIncDecOperationExpression	i ++	218:61:8696:8698	4976311	2	True				
ANR	4976774	Identifier	i		4976311	0					
ANR	4976775	IncDec	++		4976311	1					
ANR	4976776	ExpressionStatement	* ptr ++ |= ~src_mask	219:43:8744:8763	4976311	3	True				
ANR	4976777	AssignmentExpression	* ptr ++ |= ~src_mask		4976311	0		|=			
ANR	4976778	UnaryOperationExpression	* ptr ++		4976311	0					
ANR	4976779	UnaryOperator	*		4976311	0					
ANR	4976780	PostIncDecOperationExpression	ptr ++		4976311	1					
ANR	4976781	Identifier	ptr		4976311	0					
ANR	4976782	IncDec	++		4976311	1					
ANR	4976783	Identifier	~src_mask		4976311	1					
ANR	4976784	ExpressionStatement	* ptr |= right_mask	220:40:8805:8823	4976311	11	True				
ANR	4976785	AssignmentExpression	* ptr |= right_mask		4976311	0		|=			
ANR	4976786	UnaryOperationExpression	* ptr		4976311	0					
ANR	4976787	UnaryOperator	*		4976311	0					
ANR	4976788	Identifier	ptr		4976311	1					
ANR	4976789	Identifier	right_mask		4976311	1					
ANR	4976790	Statement	)	220:60:8825:8825	4976311	12	True				
ANR	4976791	ExpressionStatement		220:61:8826:8826	4976311	13	True				
ANR	4976792	Statement	(	222:37:8890:8890	4976311	14	True				
ANR	4976793	ExpressionStatement	* ptr = ( * ptr & ~mask ) | ( pattern & mask )	224:28:9001:9041	4976311	15	True				
ANR	4976794	AssignmentExpression	* ptr = ( * ptr & ~mask ) | ( pattern & mask )		4976311	0		=			
ANR	4976795	UnaryOperationExpression	* ptr		4976311	0					
ANR	4976796	UnaryOperator	*		4976311	0					
ANR	4976797	Identifier	ptr		4976311	1					
ANR	4976798	InclusiveOrExpression	( * ptr & ~mask ) | ( pattern & mask )		4976311	1		|			
ANR	4976799	BitAndExpression	* ptr & ~mask		4976311	0		&			
ANR	4976800	UnaryOperationExpression	* ptr		4976311	0					
ANR	4976801	UnaryOperator	*		4976311	0					
ANR	4976802	Identifier	ptr		4976311	1					
ANR	4976803	Identifier	~mask		4976311	1					
ANR	4976804	BitAndExpression	pattern & mask		4976311	1		&			
ANR	4976805	Identifier	pattern		4976311	0					
ANR	4976806	Identifier	mask		4976311	1					
ANR	4976807	ExpressionStatement	++ ptr	225:28:9071:9076	4976311	16	True				
ANR	4976808	UnaryExpression	++ ptr		4976311	0					
ANR	4976809	IncDec	++		4976311	0					
ANR	4976810	Identifier	ptr		4976311	1					
ANR	4976811	ForStatement	"for ( i = 0 ; i < last ; i ++ , ptr ++ )"		4976311	17					
ANR	4976812	ForInit	i = 0 ;	226:33:9111:9116	4976311	0	True				
ANR	4976813	AssignmentExpression	i = 0		4976311	0		=			
ANR	4976814	Identifier	i		4976311	0					
ANR	4976815	PrimaryExpression	0		4976311	1					
ANR	4976816	Condition	i < last	226:40:9118:9125	4976311	1	True				
ANR	4976817	RelationalExpression	i < last		4976311	0		<			
ANR	4976818	Identifier	i		4976311	0					
ANR	4976819	Identifier	last		4976311	1					
ANR	4976820	Expression	"i ++ , ptr ++"	226:50:9128:9137	4976311	2	True				
ANR	4976821	PostIncDecOperationExpression	i ++		4976311	0					
ANR	4976822	Identifier	i		4976311	0					
ANR	4976823	IncDec	++		4976311	1					
ANR	4976824	PostIncDecOperationExpression	ptr ++		4976311	1					
ANR	4976825	Identifier	ptr		4976311	0					
ANR	4976826	IncDec	++		4976311	1					
ANR	4976827	ExpressionStatement	* ptr = ( * ptr & src_mask ) | pattern	227:32:9172:9206	4976311	3	True				
ANR	4976828	AssignmentExpression	* ptr = ( * ptr & src_mask ) | pattern		4976311	0		=			
ANR	4976829	UnaryOperationExpression	* ptr		4976311	0					
ANR	4976830	UnaryOperator	*		4976311	0					
ANR	4976831	Identifier	ptr		4976311	1					
ANR	4976832	InclusiveOrExpression	( * ptr & src_mask ) | pattern		4976311	1		|			
ANR	4976833	BitAndExpression	* ptr & src_mask		4976311	0		&			
ANR	4976834	UnaryOperationExpression	* ptr		4976311	0					
ANR	4976835	UnaryOperator	*		4976311	0					
ANR	4976836	Identifier	ptr		4976311	1					
ANR	4976837	Identifier	src_mask		4976311	1					
ANR	4976838	Identifier	pattern		4976311	1					
ANR	4976839	ExpressionStatement	* ptr = ( * ptr & ~right_mask ) | ( pattern & right_mask )	228:28:9236:9288	4976311	18	True				
ANR	4976840	AssignmentExpression	* ptr = ( * ptr & ~right_mask ) | ( pattern & right_mask )		4976311	0		=			
ANR	4976841	UnaryOperationExpression	* ptr		4976311	0					
ANR	4976842	UnaryOperator	*		4976311	0					
ANR	4976843	Identifier	ptr		4976311	1					
ANR	4976844	InclusiveOrExpression	( * ptr & ~right_mask ) | ( pattern & right_mask )		4976311	1		|			
ANR	4976845	BitAndExpression	* ptr & ~right_mask		4976311	0		&			
ANR	4976846	UnaryOperationExpression	* ptr		4976311	0					
ANR	4976847	UnaryOperator	*		4976311	0					
ANR	4976848	Identifier	ptr		4976311	1					
ANR	4976849	Identifier	~right_mask		4976311	1					
ANR	4976850	BitAndExpression	pattern & right_mask		4976311	1		&			
ANR	4976851	Identifier	pattern		4976311	0					
ANR	4976852	Identifier	right_mask		4976311	1					
ANR	4976853	Statement	)	228:82:9290:9290	4976311	19	True				
ANR	4976854	ExpressionStatement		228:83:9291:9291	4976311	20	True				
ANR	4976855	Statement	undef	232:1:9328:9332	4976311	15	True				
ANR	4976856	Statement	FOR_EACH_LINE	232:7:9334:9346	4976311	16	True				
ANR	4976857	ReturnType	void		4976311	1					
ANR	4976858	Identifier	bits_fill_rectangle_masked		4976311	2					
ANR	4976859	ParameterList	"byte * dest , int dest_bit , uint draster , mono_fill_chunk pattern , mono_fill_chunk src_mask , int width_bits , int height"		4976311	3					
ANR	4976860	Parameter	byte * dest	147:27:5675:5685	4976311	0	True				
ANR	4976861	ParameterType	byte *		4976311	0					
ANR	4976862	Identifier	dest		4976311	1					
ANR	4976863	Parameter	int dest_bit	147:40:5688:5699	4976311	1	True				
ANR	4976864	ParameterType	int		4976311	0					
ANR	4976865	Identifier	dest_bit		4976311	1					
ANR	4976866	Parameter	uint draster	147:54:5702:5713	4976311	2	True				
ANR	4976867	ParameterType	uint		4976311	0					
ANR	4976868	Identifier	draster		4976311	1					
ANR	4976869	Parameter	mono_fill_chunk pattern	148:20:5736:5758	4976311	3	True				
ANR	4976870	ParameterType	mono_fill_chunk		4976311	0					
ANR	4976871	Identifier	pattern		4976311	1					
ANR	4976872	Parameter	mono_fill_chunk src_mask	148:45:5761:5784	4976311	4	True				
ANR	4976873	ParameterType	mono_fill_chunk		4976311	0					
ANR	4976874	Identifier	src_mask		4976311	1					
ANR	4976875	Parameter	int width_bits	149:20:5807:5820	4976311	5	True				
ANR	4976876	ParameterType	int		4976311	0					
ANR	4976877	Identifier	width_bits		4976311	1					
ANR	4976878	Parameter	int height	149:36:5823:5832	4976311	6	True				
ANR	4976879	ParameterType	int		4976311	0					
ANR	4976880	Identifier	height		4976311	1					
ANR	4976881	CFGEntryNode	ENTRY		4976311		True				
ANR	4976882	CFGExitNode	EXIT		4976311		True				
ANR	4976883	Symbol	width_bits		4976311						
ANR	4976884	Symbol	chunk_log2_bits		4976311						
ANR	4976885	Symbol	pattern		4976311						
ANR	4976886	Symbol	~mask		4976311						
ANR	4976887	Symbol	dest		4976311						
ANR	4976888	Symbol	bit		4976311						
ANR	4976889	Symbol	inc_ptr		4976311						
ANR	4976890	Symbol	chunk_bits		4976311						
ANR	4976891	Symbol	* ptr		4976311						
ANR	4976892	Symbol	~src_mask		4976311						
ANR	4976893	Symbol	height		4976311						
ANR	4976894	Symbol	mask		4976311						
ANR	4976895	Symbol	line_count		4976311						
ANR	4976896	Symbol	last		4976311						
ANR	4976897	Symbol	draster		4976311						
ANR	4976898	Symbol	* ptr ++		4976311						
ANR	4976899	Symbol	dest_bit		4976311						
ANR	4976900	Symbol	right_mask		4976311						
ANR	4976901	Symbol	i		4976311						
ANR	4976902	Symbol	chunk_align_bit_mask		4976311						
ANR	4976903	Symbol	src_mask		4976311						
ANR	4976904	Symbol	last_bit		4976311						
ANR	4976905	Symbol	ptr		4976311						
ANR	4976906	Symbol	~right_mask		4976311						
ANR	4976907	Symbol	chunk_bit_mask		4976311						
ANR	4976908	Function	bits_replicate_horizontally	236:0:9399:11337							
ANR	4976909	FunctionDef	"bits_replicate_horizontally (byte * data , uint width , uint height , uint raster , uint replicated_width , uint replicated_raster)"		4976908	0					
ANR	4976910	CompoundStatement		239:0:9547:11337	4976908	0					
ANR	4976911	IdentifierDeclStatement	const byte * orig_row = data + ( height - 1 ) * raster ;	241:4:9611:9662	4976908	0	True				
ANR	4976912	IdentifierDecl	* orig_row = data + ( height - 1 ) * raster		4976908	0					
ANR	4976913	IdentifierDeclType	const byte *		4976908	0					
ANR	4976914	Identifier	orig_row		4976908	1					
ANR	4976915	AssignmentExpression	* orig_row = data + ( height - 1 ) * raster		4976908	2		=			
ANR	4976916	Identifier	orig_row		4976908	0					
ANR	4976917	AdditiveExpression	data + ( height - 1 ) * raster		4976908	1		+			
ANR	4976918	Identifier	data		4976908	0					
ANR	4976919	MultiplicativeExpression	( height - 1 ) * raster		4976908	1		*			
ANR	4976920	AdditiveExpression	height - 1		4976908	0		-			
ANR	4976921	Identifier	height		4976908	0					
ANR	4976922	PrimaryExpression	1		4976908	1					
ANR	4976923	Identifier	raster		4976908	1					
ANR	4976924	IdentifierDeclStatement	byte * tile_row = data + ( height - 1 ) * replicated_raster ;	242:4:9668:9724	4976908	1	True				
ANR	4976925	IdentifierDecl	* tile_row = data + ( height - 1 ) * replicated_raster		4976908	0					
ANR	4976926	IdentifierDeclType	byte *		4976908	0					
ANR	4976927	Identifier	tile_row		4976908	1					
ANR	4976928	AssignmentExpression	* tile_row = data + ( height - 1 ) * replicated_raster		4976908	2		=			
ANR	4976929	Identifier	tile_row		4976908	0					
ANR	4976930	AdditiveExpression	data + ( height - 1 ) * replicated_raster		4976908	1		+			
ANR	4976931	Identifier	data		4976908	0					
ANR	4976932	MultiplicativeExpression	( height - 1 ) * replicated_raster		4976908	1		*			
ANR	4976933	AdditiveExpression	height - 1		4976908	0		-			
ANR	4976934	Identifier	height		4976908	0					
ANR	4976935	PrimaryExpression	1		4976908	1					
ANR	4976936	Identifier	replicated_raster		4976908	1					
ANR	4976937	IdentifierDeclStatement	uint y ;	243:4:9730:9736	4976908	2	True				
ANR	4976938	IdentifierDecl	y		4976908	0					
ANR	4976939	IdentifierDeclType	uint		4976908	0					
ANR	4976940	Identifier	y		4976908	1					
ANR	4976941	IfStatement	if ( ! ( width & 7 ) )		4976908	3					
ANR	4976942	Condition	! ( width & 7 )	245:8:9747:9758	4976908	0	True				
ANR	4976943	UnaryOperationExpression	! ( width & 7 )		4976908	0					
ANR	4976944	UnaryOperator	!		4976908	0					
ANR	4976945	BitAndExpression	width & 7		4976908	1		&			
ANR	4976946	Identifier	width		4976908	0					
ANR	4976947	PrimaryExpression	7		4976908	1					
ANR	4976948	CompoundStatement		9:8:260:299	4976908	1					
ANR	4976949	IdentifierDeclStatement	uint src_bytes = width >> 3 ;	246:8:9771:9798	4976908	0	True				
ANR	4976950	IdentifierDecl	src_bytes = width >> 3		4976908	0					
ANR	4976951	IdentifierDeclType	uint		4976908	0					
ANR	4976952	Identifier	src_bytes		4976908	1					
ANR	4976953	AssignmentExpression	src_bytes = width >> 3		4976908	2		=			
ANR	4976954	Identifier	src_bytes		4976908	0					
ANR	4976955	ShiftExpression	width >> 3		4976908	1		>>			
ANR	4976956	Identifier	width		4976908	0					
ANR	4976957	PrimaryExpression	3		4976908	1					
ANR	4976958	IdentifierDeclStatement	uint dest_bytes = replicated_width >> 3 ;	247:8:9808:9847	4976908	1	True				
ANR	4976959	IdentifierDecl	dest_bytes = replicated_width >> 3		4976908	0					
ANR	4976960	IdentifierDeclType	uint		4976908	0					
ANR	4976961	Identifier	dest_bytes		4976908	1					
ANR	4976962	AssignmentExpression	dest_bytes = replicated_width >> 3		4976908	2		=			
ANR	4976963	Identifier	dest_bytes		4976908	0					
ANR	4976964	ShiftExpression	replicated_width >> 3		4976908	1		>>			
ANR	4976965	Identifier	replicated_width		4976908	0					
ANR	4976966	PrimaryExpression	3		4976908	1					
ANR	4976967	ForStatement	"for ( y = height ; y -- > 0 ; orig_row -= raster , tile_row -= replicated_raster )"		4976908	2					
ANR	4976968	ForInit	y = height ;	249:13:9863:9873	4976908	0	True				
ANR	4976969	AssignmentExpression	y = height		4976908	0		=			
ANR	4976970	Identifier	y		4976908	0					
ANR	4976971	Identifier	height		4976908	1					
ANR	4976972	Condition	y -- > 0	249:25:9875:9881	4976908	1	True				
ANR	4976973	RelationalExpression	y -- > 0		4976908	0		>			
ANR	4976974	PostIncDecOperationExpression	y --		4976908	0					
ANR	4976975	Identifier	y		4976908	0					
ANR	4976976	IncDec	--		4976908	1					
ANR	4976977	PrimaryExpression	0		4976908	1					
ANR	4976978	Expression	"orig_row -= raster , tile_row -= replicated_raster"	250:13:9897:9945	4976908	2	True				
ANR	4976979	AssignmentExpression	orig_row -= raster		4976908	0		-=			
ANR	4976980	Identifier	orig_row		4976908	0					
ANR	4976981	Identifier	raster		4976908	1					
ANR	4976982	AssignmentExpression	tile_row -= replicated_raster		4976908	1		-=			
ANR	4976983	Identifier	tile_row		4976908	0					
ANR	4976984	Identifier	replicated_raster		4976908	1					
ANR	4976985	CompoundStatement		16:12:504:548	4976908	3					
ANR	4976986	IdentifierDeclStatement	uint move = src_bytes ;	252:12:9976:9997	4976908	0	True				
ANR	4976987	IdentifierDecl	move = src_bytes		4976908	0					
ANR	4976988	IdentifierDeclType	uint		4976908	0					
ANR	4976989	Identifier	move		4976908	1					
ANR	4976990	AssignmentExpression	move = src_bytes		4976908	2		=			
ANR	4976991	Identifier	src_bytes		4976908	0					
ANR	4976992	Identifier	src_bytes		4976908	1					
ANR	4976993	IdentifierDeclStatement	const byte * from = orig_row ;	253:12:10011:10038	4976908	1	True				
ANR	4976994	IdentifierDecl	* from = orig_row		4976908	0					
ANR	4976995	IdentifierDeclType	const byte *		4976908	0					
ANR	4976996	Identifier	from		4976908	1					
ANR	4976997	AssignmentExpression	* from = orig_row		4976908	2		=			
ANR	4976998	Identifier	orig_row		4976908	0					
ANR	4976999	Identifier	orig_row		4976908	1					
ANR	4977000	IdentifierDeclStatement	byte * to = tile_row + dest_bytes - src_bytes ;	254:12:10052:10096	4976908	2	True				
ANR	4977001	IdentifierDecl	* to = tile_row + dest_bytes - src_bytes		4976908	0					
ANR	4977002	IdentifierDeclType	byte *		4976908	0					
ANR	4977003	Identifier	to		4976908	1					
ANR	4977004	AssignmentExpression	* to = tile_row + dest_bytes - src_bytes		4976908	2		=			
ANR	4977005	Identifier	to		4976908	0					
ANR	4977006	AdditiveExpression	tile_row + dest_bytes - src_bytes		4976908	1		+			
ANR	4977007	Identifier	tile_row		4976908	0					
ANR	4977008	AdditiveExpression	dest_bytes - src_bytes		4976908	1		-			
ANR	4977009	Identifier	dest_bytes		4976908	0					
ANR	4977010	Identifier	src_bytes		4976908	1					
ANR	4977011	ExpressionStatement	"memmove ( to , from , move )"	256:12:10111:10134	4976908	3	True				
ANR	4977012	CallExpression	"memmove ( to , from , move )"		4976908	0					
ANR	4977013	Callee	memmove		4976908	0					
ANR	4977014	Identifier	memmove		4976908	0					
ANR	4977015	ArgumentList	to		4976908	1					
ANR	4977016	Argument	to		4976908	0					
ANR	4977017	Identifier	to		4976908	0					
ANR	4977018	Argument	from		4976908	1					
ANR	4977019	Identifier	from		4976908	0					
ANR	4977020	Argument	move		4976908	2					
ANR	4977021	Identifier	move		4976908	0					
ANR	4977022	WhileStatement	while ( to - tile_row >= move )		4976908	4					
ANR	4977023	Condition	to - tile_row >= move	257:19:10155:10175	4976908	0	True				
ANR	4977024	RelationalExpression	to - tile_row >= move		4976908	0		>=			
ANR	4977025	AdditiveExpression	to - tile_row		4976908	0		-			
ANR	4977026	Identifier	to		4976908	0					
ANR	4977027	Identifier	tile_row		4976908	1					
ANR	4977028	Identifier	move		4976908	1					
ANR	4977029	CompoundStatement		19:42:630:630	4976908	1					
ANR	4977030	ExpressionStatement	from = to	258:16:10196:10205	4976908	0	True				
ANR	4977031	AssignmentExpression	from = to		4976908	0		=			
ANR	4977032	Identifier	from		4976908	0					
ANR	4977033	Identifier	to		4976908	1					
ANR	4977034	ExpressionStatement	to -= move	259:16:10223:10233	4976908	1	True				
ANR	4977035	AssignmentExpression	to -= move		4976908	0		-=			
ANR	4977036	Identifier	to		4976908	0					
ANR	4977037	Identifier	move		4976908	1					
ANR	4977038	ExpressionStatement	"memmove ( to , from , move )"	260:16:10251:10274	4976908	2	True				
ANR	4977039	CallExpression	"memmove ( to , from , move )"		4976908	0					
ANR	4977040	Callee	memmove		4976908	0					
ANR	4977041	Identifier	memmove		4976908	0					
ANR	4977042	ArgumentList	to		4976908	1					
ANR	4977043	Argument	to		4976908	0					
ANR	4977044	Identifier	to		4976908	0					
ANR	4977045	Argument	from		4976908	1					
ANR	4977046	Identifier	from		4976908	0					
ANR	4977047	Argument	move		4976908	2					
ANR	4977048	Identifier	move		4976908	0					
ANR	4977049	ExpressionStatement	move <<= 1	261:16:10292:10302	4976908	3	True				
ANR	4977050	AssignmentExpression	move <<= 1		4976908	0		<<=			
ANR	4977051	Identifier	move		4976908	0					
ANR	4977052	PrimaryExpression	1		4976908	1					
ANR	4977053	IfStatement	if ( to != tile_row )		4976908	5					
ANR	4977054	Condition	to != tile_row	263:16:10334:10347	4976908	0	True				
ANR	4977055	EqualityExpression	to != tile_row		4976908	0		!=			
ANR	4977056	Identifier	to		4976908	0					
ANR	4977057	Identifier	tile_row		4976908	1					
ANR	4977058	ExpressionStatement	"memmove ( tile_row , to , to - tile_row )"	264:16:10366:10402	4976908	1	True				
ANR	4977059	CallExpression	"memmove ( tile_row , to , to - tile_row )"		4976908	0					
ANR	4977060	Callee	memmove		4976908	0					
ANR	4977061	Identifier	memmove		4976908	0					
ANR	4977062	ArgumentList	tile_row		4976908	1					
ANR	4977063	Argument	tile_row		4976908	0					
ANR	4977064	Identifier	tile_row		4976908	0					
ANR	4977065	Argument	to		4976908	1					
ANR	4977066	Identifier	to		4976908	0					
ANR	4977067	Argument	to - tile_row		4976908	2					
ANR	4977068	AdditiveExpression	to - tile_row		4976908	0		-			
ANR	4977069	Identifier	to		4976908	0					
ANR	4977070	Identifier	tile_row		4976908	1					
ANR	4977071	ElseStatement	else		4976908	0					
ANR	4977072	CompoundStatement		33:8:1070:1115	4976908	0					
ANR	4977073	IdentifierDeclStatement	uint bit_count = width & ( uint ) ( - ( int ) width ) ;	270:8:10534:10578	4976908	0	True				
ANR	4977074	IdentifierDecl	bit_count = width & ( uint ) ( - ( int ) width )		4976908	0					
ANR	4977075	IdentifierDeclType	uint		4976908	0					
ANR	4977076	Identifier	bit_count		4976908	1					
ANR	4977077	AssignmentExpression	bit_count = width & ( uint ) ( - ( int ) width )		4976908	2		=			
ANR	4977078	Identifier	bit_count		4976908	0					
ANR	4977079	BitAndExpression	width & ( uint ) ( - ( int ) width )		4976908	1		&			
ANR	4977080	Identifier	width		4976908	0					
ANR	4977081	CastExpression	( uint ) ( - ( int ) width )		4976908	1					
ANR	4977082	CastTarget	uint		4976908	0					
ANR	4977083	UnaryOperationExpression	- ( int ) width		4976908	1					
ANR	4977084	UnaryOperator	-		4976908	0					
ANR	4977085	CastExpression	( int ) width		4976908	1					
ANR	4977086	CastTarget	int		4976908	0					
ANR	4977087	Identifier	width		4976908	1					
ANR	4977088	IdentifierDeclStatement	uint left_mask = ( 0xff00 >> bit_count ) & 0xff ;	271:8:10618:10663	4976908	1	True				
ANR	4977089	IdentifierDecl	left_mask = ( 0xff00 >> bit_count ) & 0xff		4976908	0					
ANR	4977090	IdentifierDeclType	uint		4976908	0					
ANR	4977091	Identifier	left_mask		4976908	1					
ANR	4977092	AssignmentExpression	left_mask = ( 0xff00 >> bit_count ) & 0xff		4976908	2		=			
ANR	4977093	Identifier	left_mask		4976908	0					
ANR	4977094	BitAndExpression	( 0xff00 >> bit_count ) & 0xff		4976908	1		&			
ANR	4977095	ShiftExpression	0xff00 >> bit_count		4976908	0		>>			
ANR	4977096	PrimaryExpression	0xff00		4976908	0					
ANR	4977097	Identifier	bit_count		4976908	1					
ANR	4977098	PrimaryExpression	0xff		4976908	1					
ANR	4977099	ForStatement	"for ( y = height ; y -- > 0 ; orig_row -= raster , tile_row -= replicated_raster )"		4976908	2					
ANR	4977100	ForInit	y = height ;	273:13:10679:10689	4976908	0	True				
ANR	4977101	AssignmentExpression	y = height		4976908	0		=			
ANR	4977102	Identifier	y		4976908	0					
ANR	4977103	Identifier	height		4976908	1					
ANR	4977104	Condition	y -- > 0	273:25:10691:10697	4976908	1	True				
ANR	4977105	RelationalExpression	y -- > 0		4976908	0		>			
ANR	4977106	PostIncDecOperationExpression	y --		4976908	0					
ANR	4977107	Identifier	y		4976908	0					
ANR	4977108	IncDec	--		4976908	1					
ANR	4977109	PrimaryExpression	0		4976908	1					
ANR	4977110	Expression	"orig_row -= raster , tile_row -= replicated_raster"	274:13:10713:10761	4976908	2	True				
ANR	4977111	AssignmentExpression	orig_row -= raster		4976908	0		-=			
ANR	4977112	Identifier	orig_row		4976908	0					
ANR	4977113	Identifier	raster		4976908	1					
ANR	4977114	AssignmentExpression	tile_row -= replicated_raster		4976908	1		-=			
ANR	4977115	Identifier	tile_row		4976908	0					
ANR	4977116	Identifier	replicated_raster		4976908	1					
ANR	4977117	CompoundStatement		38:12:1244:1251	4976908	3					
ANR	4977118	IdentifierDeclStatement	uint sx ;	276:12:10792:10799	4976908	0	True				
ANR	4977119	IdentifierDecl	sx		4976908	0					
ANR	4977120	IdentifierDeclType	uint		4976908	0					
ANR	4977121	Identifier	sx		4976908	1					
ANR	4977122	ForStatement	for ( sx = width ; sx > 0 ; )		4976908	1					
ANR	4977123	ForInit	sx = width ;	278:17:10819:10829	4976908	0	True				
ANR	4977124	AssignmentExpression	sx = width		4976908	0		=			
ANR	4977125	Identifier	sx		4976908	0					
ANR	4977126	Identifier	width		4976908	1					
ANR	4977127	Condition	sx > 0	278:29:10831:10836	4976908	1	True				
ANR	4977128	RelationalExpression	sx > 0		4976908	0		>			
ANR	4977129	Identifier	sx		4976908	0					
ANR	4977130	PrimaryExpression	0		4976908	1					
ANR	4977131	CompoundStatement		41:16:1310:1323	4976908	2					
ANR	4977132	IdentifierDeclStatement	"uint bits , dx ;"	279:16:10858:10871	4976908	0	True				
ANR	4977133	IdentifierDecl	bits		4976908	0					
ANR	4977134	IdentifierDeclType	uint		4976908	0					
ANR	4977135	Identifier	bits		4976908	1					
ANR	4977136	IdentifierDecl	dx		4976908	1					
ANR	4977137	IdentifierDeclType	uint		4976908	0					
ANR	4977138	Identifier	dx		4976908	1					
ANR	4977139	ExpressionStatement	sx -= bit_count	281:16:10890:10905	4976908	1	True				
ANR	4977140	AssignmentExpression	sx -= bit_count		4976908	0		-=			
ANR	4977141	Identifier	sx		4976908	0					
ANR	4977142	Identifier	bit_count		4976908	1					
ANR	4977143	ExpressionStatement	bits = ( orig_row [ sx >> 3 ] << ( sx & 7 ) ) & left_mask	282:16:10923:10973	4976908	2	True				
ANR	4977144	AssignmentExpression	bits = ( orig_row [ sx >> 3 ] << ( sx & 7 ) ) & left_mask		4976908	0		=			
ANR	4977145	Identifier	bits		4976908	0					
ANR	4977146	BitAndExpression	( orig_row [ sx >> 3 ] << ( sx & 7 ) ) & left_mask		4976908	1		&			
ANR	4977147	ShiftExpression	orig_row [ sx >> 3 ] << ( sx & 7 )		4976908	0		<<			
ANR	4977148	ArrayIndexing	orig_row [ sx >> 3 ]		4976908	0					
ANR	4977149	Identifier	orig_row		4976908	0					
ANR	4977150	ShiftExpression	sx >> 3		4976908	1		>>			
ANR	4977151	Identifier	sx		4976908	0					
ANR	4977152	PrimaryExpression	3		4976908	1					
ANR	4977153	BitAndExpression	sx & 7		4976908	1		&			
ANR	4977154	Identifier	sx		4976908	0					
ANR	4977155	PrimaryExpression	7		4976908	1					
ANR	4977156	Identifier	left_mask		4976908	1					
ANR	4977157	ForStatement	for ( dx = sx + replicated_width ; dx >= width ; )		4976908	3					
ANR	4977158	ForInit	dx = sx + replicated_width ;	283:21:10996:11022	4976908	0	True				
ANR	4977159	AssignmentExpression	dx = sx + replicated_width		4976908	0		=			
ANR	4977160	Identifier	dx		4976908	0					
ANR	4977161	AdditiveExpression	sx + replicated_width		4976908	1		+			
ANR	4977162	Identifier	sx		4976908	0					
ANR	4977163	Identifier	replicated_width		4976908	1					
ANR	4977164	Condition	dx >= width	283:49:11024:11034	4976908	1	True				
ANR	4977165	RelationalExpression	dx >= width		4976908	0		>=			
ANR	4977166	Identifier	dx		4976908	0					
ANR	4977167	Identifier	width		4976908	1					
ANR	4977168	CompoundStatement		47:20:1542:1550	4976908	2					
ANR	4977169	IdentifierDeclStatement	byte * dp ;	284:20:11060:11068	4976908	0	True				
ANR	4977170	IdentifierDecl	* dp		4976908	0					
ANR	4977171	IdentifierDeclType	byte *		4976908	0					
ANR	4977172	Identifier	dp		4976908	1					
ANR	4977173	IdentifierDeclStatement	int dbit ;	285:20:11090:11098	4976908	1	True				
ANR	4977174	IdentifierDecl	dbit		4976908	0					
ANR	4977175	IdentifierDeclType	int		4976908	0					
ANR	4977176	Identifier	dbit		4976908	1					
ANR	4977177	ExpressionStatement	dx -= width	287:20:11121:11132	4976908	2	True				
ANR	4977178	AssignmentExpression	dx -= width		4976908	0		-=			
ANR	4977179	Identifier	dx		4976908	0					
ANR	4977180	Identifier	width		4976908	1					
ANR	4977181	ExpressionStatement	dbit = dx & 7	288:20:11154:11167	4976908	3	True				
ANR	4977182	AssignmentExpression	dbit = dx & 7		4976908	0		=			
ANR	4977183	Identifier	dbit		4976908	0					
ANR	4977184	BitAndExpression	dx & 7		4976908	1		&			
ANR	4977185	Identifier	dx		4976908	0					
ANR	4977186	PrimaryExpression	7		4976908	1					
ANR	4977187	ExpressionStatement	dp = tile_row + ( dx >> 3 )	289:20:11189:11214	4976908	4	True				
ANR	4977188	AssignmentExpression	dp = tile_row + ( dx >> 3 )		4976908	0		=			
ANR	4977189	Identifier	dp		4976908	0					
ANR	4977190	AdditiveExpression	tile_row + ( dx >> 3 )		4976908	1		+			
ANR	4977191	Identifier	tile_row		4976908	0					
ANR	4977192	ShiftExpression	dx >> 3		4976908	1		>>			
ANR	4977193	Identifier	dx		4976908	0					
ANR	4977194	PrimaryExpression	3		4976908	1					
ANR	4977195	ExpressionStatement	* dp = ( * dp & ~ ( left_mask >> dbit ) ) | ( bits >> dbit )	290:20:11236:11287	4976908	5	True				
ANR	4977196	AssignmentExpression	* dp = ( * dp & ~ ( left_mask >> dbit ) ) | ( bits >> dbit )		4976908	0		=			
ANR	4977197	UnaryOperationExpression	* dp		4976908	0					
ANR	4977198	UnaryOperator	*		4976908	0					
ANR	4977199	Identifier	dp		4976908	1					
ANR	4977200	InclusiveOrExpression	( * dp & ~ ( left_mask >> dbit ) ) | ( bits >> dbit )		4976908	1		|			
ANR	4977201	BitAndExpression	* dp & ~ ( left_mask >> dbit )		4976908	0		&			
ANR	4977202	UnaryOperationExpression	* dp		4976908	0					
ANR	4977203	UnaryOperator	*		4976908	0					
ANR	4977204	Identifier	dp		4976908	1					
ANR	4977205	UnaryOperationExpression	~ ( left_mask >> dbit )		4976908	1					
ANR	4977206	UnaryOperator	~		4976908	0					
ANR	4977207	ShiftExpression	left_mask >> dbit		4976908	1		>>			
ANR	4977208	Identifier	left_mask		4976908	0					
ANR	4977209	Identifier	dbit		4976908	1					
ANR	4977210	ShiftExpression	bits >> dbit		4976908	1		>>			
ANR	4977211	Identifier	bits		4976908	0					
ANR	4977212	Identifier	dbit		4976908	1					
ANR	4977213	ReturnType	void		4976908	1					
ANR	4977214	Identifier	bits_replicate_horizontally		4976908	2					
ANR	4977215	ParameterList	"byte * data , uint width , uint height , uint raster , uint replicated_width , uint replicated_raster"		4976908	3					
ANR	4977216	Parameter	byte * data	237:28:9432:9442	4976908	0	True				
ANR	4977217	ParameterType	byte *		4976908	0					
ANR	4977218	Identifier	data		4976908	1					
ANR	4977219	Parameter	uint width	237:41:9445:9454	4976908	1	True				
ANR	4977220	ParameterType	uint		4976908	0					
ANR	4977221	Identifier	width		4976908	1					
ANR	4977222	Parameter	uint height	237:53:9457:9467	4976908	2	True				
ANR	4977223	ParameterType	uint		4976908	0					
ANR	4977224	Identifier	height		4976908	1					
ANR	4977225	Parameter	uint raster	238:17:9487:9497	4976908	3	True				
ANR	4977226	ParameterType	uint		4976908	0					
ANR	4977227	Identifier	raster		4976908	1					
ANR	4977228	Parameter	uint replicated_width	238:30:9500:9520	4976908	4	True				
ANR	4977229	ParameterType	uint		4976908	0					
ANR	4977230	Identifier	replicated_width		4976908	1					
ANR	4977231	Parameter	uint replicated_raster	238:53:9523:9544	4976908	5	True				
ANR	4977232	ParameterType	uint		4976908	0					
ANR	4977233	Identifier	replicated_raster		4976908	1					
ANR	4977234	CFGEntryNode	ENTRY		4976908		True				
ANR	4977235	CFGExitNode	EXIT		4976908		True				
ANR	4977236	Symbol	move		4976908						
ANR	4977237	Symbol	data		4976908						
ANR	4977238	Symbol	sx		4976908						
ANR	4977239	Symbol	dbit		4976908						
ANR	4977240	Symbol	raster		4976908						
ANR	4977241	Symbol	bits		4976908						
ANR	4977242	Symbol	* sx		4976908						
ANR	4977243	Symbol	dest_bytes		4976908						
ANR	4977244	Symbol	dp		4976908						
ANR	4977245	Symbol	* dp		4976908						
ANR	4977246	Symbol	orig_row		4976908						
ANR	4977247	Symbol	dx		4976908						
ANR	4977248	Symbol	left_mask		4976908						
ANR	4977249	Symbol	src_bytes		4976908						
ANR	4977250	Symbol	tile_row		4976908						
ANR	4977251	Symbol	width		4976908						
ANR	4977252	Symbol	y		4976908						
ANR	4977253	Symbol	bit_count		4976908						
ANR	4977254	Symbol	replicated_raster		4976908						
ANR	4977255	Symbol	from		4976908						
ANR	4977256	Symbol	* orig_row		4976908						
ANR	4977257	Symbol	replicated_width		4976908						
ANR	4977258	Symbol	to		4976908						
ANR	4977259	Symbol	height		4976908						
ANR	4977260	Function	bits_replicate_vertically	298:0:11386:11712							
ANR	4977261	FunctionDef	"bits_replicate_vertically (byte * data , uint height , uint raster , uint replicated_height)"		4977260	0					
ANR	4977262	CompoundStatement		301:0:11506:11712	4977260	0					
ANR	4977263	IdentifierDeclStatement	byte * dest = data ;	302:4:11512:11529	4977260	0	True				
ANR	4977264	IdentifierDecl	* dest = data		4977260	0					
ANR	4977265	IdentifierDeclType	byte *		4977260	0					
ANR	4977266	Identifier	dest		4977260	1					
ANR	4977267	AssignmentExpression	* dest = data		4977260	2		=			
ANR	4977268	Identifier	data		4977260	0					
ANR	4977269	Identifier	data		4977260	1					
ANR	4977270	IdentifierDeclStatement	uint h = replicated_height ;	303:4:11535:11561	4977260	1	True				
ANR	4977271	IdentifierDecl	h = replicated_height		4977260	0					
ANR	4977272	IdentifierDeclType	uint		4977260	0					
ANR	4977273	Identifier	h		4977260	1					
ANR	4977274	AssignmentExpression	h = replicated_height		4977260	2		=			
ANR	4977275	Identifier	replicated_height		4977260	0					
ANR	4977276	Identifier	replicated_height		4977260	1					
ANR	4977277	IdentifierDeclStatement	uint size = raster * height ;	304:4:11567:11594	4977260	2	True				
ANR	4977278	IdentifierDecl	size = raster * height		4977260	0					
ANR	4977279	IdentifierDeclType	uint		4977260	0					
ANR	4977280	Identifier	size		4977260	1					
ANR	4977281	AssignmentExpression	size = raster * height		4977260	2		=			
ANR	4977282	Identifier	size		4977260	0					
ANR	4977283	MultiplicativeExpression	raster * height		4977260	1		*			
ANR	4977284	Identifier	raster		4977260	0					
ANR	4977285	Identifier	height		4977260	1					
ANR	4977286	WhileStatement	while ( h > height )		4977260	3					
ANR	4977287	Condition	h > height	306:11:11608:11617	4977260	0	True				
ANR	4977288	RelationalExpression	h > height		4977260	0		>			
ANR	4977289	Identifier	h		4977260	0					
ANR	4977290	Identifier	height		4977260	1					
ANR	4977291	CompoundStatement		6:23:113:113	4977260	1					
ANR	4977292	ExpressionStatement	"memcpy ( dest + size , dest , size )"	307:8:11630:11661	4977260	0	True				
ANR	4977293	CallExpression	"memcpy ( dest + size , dest , size )"		4977260	0					
ANR	4977294	Callee	memcpy		4977260	0					
ANR	4977295	Identifier	memcpy		4977260	0					
ANR	4977296	ArgumentList	dest + size		4977260	1					
ANR	4977297	Argument	dest + size		4977260	0					
ANR	4977298	AdditiveExpression	dest + size		4977260	0		+			
ANR	4977299	Identifier	dest		4977260	0					
ANR	4977300	Identifier	size		4977260	1					
ANR	4977301	Argument	dest		4977260	1					
ANR	4977302	Identifier	dest		4977260	0					
ANR	4977303	Argument	size		4977260	2					
ANR	4977304	Identifier	size		4977260	0					
ANR	4977305	ExpressionStatement	dest += size	308:8:11671:11683	4977260	1	True				
ANR	4977306	AssignmentExpression	dest += size		4977260	0		+=			
ANR	4977307	Identifier	dest		4977260	0					
ANR	4977308	Identifier	size		4977260	1					
ANR	4977309	ExpressionStatement	h -= height	309:8:11693:11704	4977260	2	True				
ANR	4977310	AssignmentExpression	h -= height		4977260	0		-=			
ANR	4977311	Identifier	h		4977260	0					
ANR	4977312	Identifier	height		4977260	1					
ANR	4977313	ReturnType	void		4977260	1					
ANR	4977314	Identifier	bits_replicate_vertically		4977260	2					
ANR	4977315	ParameterList	"byte * data , uint height , uint raster , uint replicated_height"		4977260	3					
ANR	4977316	Parameter	byte * data	299:26:11417:11427	4977260	0	True				
ANR	4977317	ParameterType	byte *		4977260	0					
ANR	4977318	Identifier	data		4977260	1					
ANR	4977319	Parameter	uint height	299:39:11430:11440	4977260	1	True				
ANR	4977320	ParameterType	uint		4977260	0					
ANR	4977321	Identifier	height		4977260	1					
ANR	4977322	Parameter	uint raster	299:52:11443:11453	4977260	2	True				
ANR	4977323	ParameterType	uint		4977260	0					
ANR	4977324	Identifier	raster		4977260	1					
ANR	4977325	Parameter	uint replicated_height	300:26:11482:11503	4977260	3	True				
ANR	4977326	ParameterType	uint		4977260	0					
ANR	4977327	Identifier	replicated_height		4977260	1					
ANR	4977328	CFGEntryNode	ENTRY		4977260		True				
ANR	4977329	CFGExitNode	EXIT		4977260		True				
ANR	4977330	Symbol	data		4977260						
ANR	4977331	Symbol	size		4977260						
ANR	4977332	Symbol	replicated_height		4977260						
ANR	4977333	Symbol	raster		4977260						
ANR	4977334	Symbol	h		4977260						
ANR	4977335	Symbol	dest		4977260						
ANR	4977336	Symbol	height		4977260						
ANR	4977337	Function	bits_bounding_box	315:0:11801:15577							
ANR	4977338	FunctionDef	"bits_bounding_box (const byte * data , uint height , uint raster , gs_int_rect * pbox)"		4977337	0					
ANR	4977339	CompoundStatement		318:0:11907:15577	4977337	0					
ANR	4977340	Statement	register	319:4:11913:11920	4977337	0	True				
ANR	4977341	IdentifierDeclStatement	const ulong * lp ;	319:13:11922:11937	4977337	1	True				
ANR	4977342	IdentifierDecl	* lp		4977337	0					
ANR	4977343	IdentifierDeclType	const ulong *		4977337	0					
ANR	4977344	Identifier	lp		4977337	1					
ANR	4977345	Statement	static	320:4:11943:11948	4977337	2	True				
ANR	4977346	IdentifierDeclStatement	"const byte first_1 [ 16 ] = { 4 , 3 , 2 , 2 , 1 , 1 , 1 , 1 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 } ;"	320:11:11950:12037	4977337	3	True				
ANR	4977347	IdentifierDecl	"first_1 [ 16 ] = { 4 , 3 , 2 , 2 , 1 , 1 , 1 , 1 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 }"		4977337	0					
ANR	4977348	IdentifierDeclType	const byte [ 16 ]		4977337	0					
ANR	4977349	Identifier	first_1		4977337	1					
ANR	4977350	PrimaryExpression	16		4977337	2					
ANR	4977351	AssignmentExpression	"first_1 [ 16 ] = { 4 , 3 , 2 , 2 , 1 , 1 , 1 , 1 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 }"		4977337	3		=			
ANR	4977352	Identifier	first_1		4977337	0					
ANR	4977353	InitializerList	4		4977337	1					
ANR	4977354	PrimaryExpression	4		4977337	0					
ANR	4977355	PrimaryExpression	3		4977337	1					
ANR	4977356	PrimaryExpression	2		4977337	2					
ANR	4977357	PrimaryExpression	2		4977337	3					
ANR	4977358	PrimaryExpression	1		4977337	4					
ANR	4977359	PrimaryExpression	1		4977337	5					
ANR	4977360	PrimaryExpression	1		4977337	6					
ANR	4977361	PrimaryExpression	1		4977337	7					
ANR	4977362	PrimaryExpression	0		4977337	8					
ANR	4977363	PrimaryExpression	0		4977337	9					
ANR	4977364	PrimaryExpression	0		4977337	10					
ANR	4977365	PrimaryExpression	0		4977337	11					
ANR	4977366	PrimaryExpression	0		4977337	12					
ANR	4977367	PrimaryExpression	0		4977337	13					
ANR	4977368	PrimaryExpression	0		4977337	14					
ANR	4977369	PrimaryExpression	0		4977337	15					
ANR	4977370	Statement	static	323:4:12043:12048	4977337	4	True				
ANR	4977371	IdentifierDeclStatement	"const byte last_1 [ 16 ] = { 0 , 4 , 3 , 4 , 2 , 4 , 3 , 4 , 1 , 4 , 3 , 4 , 2 , 4 , 3 , 4 } ;"	323:11:12050:12136	4977337	5	True				
ANR	4977372	IdentifierDecl	"last_1 [ 16 ] = { 0 , 4 , 3 , 4 , 2 , 4 , 3 , 4 , 1 , 4 , 3 , 4 , 2 , 4 , 3 , 4 }"		4977337	0					
ANR	4977373	IdentifierDeclType	const byte [ 16 ]		4977337	0					
ANR	4977374	Identifier	last_1		4977337	1					
ANR	4977375	PrimaryExpression	16		4977337	2					
ANR	4977376	AssignmentExpression	"last_1 [ 16 ] = { 0 , 4 , 3 , 4 , 2 , 4 , 3 , 4 , 1 , 4 , 3 , 4 , 2 , 4 , 3 , 4 }"		4977337	3		=			
ANR	4977377	Identifier	last_1		4977337	0					
ANR	4977378	InitializerList	0		4977337	1					
ANR	4977379	PrimaryExpression	0		4977337	0					
ANR	4977380	PrimaryExpression	4		4977337	1					
ANR	4977381	PrimaryExpression	3		4977337	2					
ANR	4977382	PrimaryExpression	4		4977337	3					
ANR	4977383	PrimaryExpression	2		4977337	4					
ANR	4977384	PrimaryExpression	4		4977337	5					
ANR	4977385	PrimaryExpression	3		4977337	6					
ANR	4977386	PrimaryExpression	4		4977337	7					
ANR	4977387	PrimaryExpression	1		4977337	8					
ANR	4977388	PrimaryExpression	4		4977337	9					
ANR	4977389	PrimaryExpression	3		4977337	10					
ANR	4977390	PrimaryExpression	4		4977337	11					
ANR	4977391	PrimaryExpression	2		4977337	12					
ANR	4977392	PrimaryExpression	4		4977337	13					
ANR	4977393	PrimaryExpression	3		4977337	14					
ANR	4977394	PrimaryExpression	4		4977337	15					
ANR	4977395	ExpressionStatement	lp = ( const ulong * ) ( data + raster * height )	331:4:12296:12340	4977337	6	True				
ANR	4977396	AssignmentExpression	lp = ( const ulong * ) ( data + raster * height )		4977337	0		=			
ANR	4977397	Identifier	lp		4977337	0					
ANR	4977398	CastExpression	( const ulong * ) ( data + raster * height )		4977337	1					
ANR	4977399	CastTarget	const ulong *		4977337	0					
ANR	4977400	AdditiveExpression	data + raster * height		4977337	1		+			
ANR	4977401	Identifier	data		4977337	0					
ANR	4977402	MultiplicativeExpression	raster * height		4977337	1		*			
ANR	4977403	Identifier	raster		4977337	0					
ANR	4977404	Identifier	height		4977337	1					
ANR	4977405	WhileStatement	while ( ( const byte * ) lp > data && ! lp [ - 1 ] )		4977337	7					
ANR	4977406	Condition	( const byte * ) lp > data && ! lp [ - 1 ]	332:11:12353:12386	4977337	0	True				
ANR	4977407	AndExpression	( const byte * ) lp > data && ! lp [ - 1 ]		4977337	0		&&			
ANR	4977408	RelationalExpression	( const byte * ) lp > data		4977337	0		>			
ANR	4977409	CastExpression	( const byte * ) lp		4977337	0					
ANR	4977410	CastTarget	const byte *		4977337	0					
ANR	4977411	Identifier	lp		4977337	1					
ANR	4977412	Identifier	data		4977337	1					
ANR	4977413	UnaryOperationExpression	! lp [ - 1 ]		4977337	1					
ANR	4977414	UnaryOperator	!		4977337	0					
ANR	4977415	ArrayIndexing	lp [ - 1 ]		4977337	1					
ANR	4977416	Identifier	lp		4977337	0					
ANR	4977417	UnaryOperationExpression	- 1		4977337	1					
ANR	4977418	UnaryOperator	-		4977337	0					
ANR	4977419	PrimaryExpression	1		4977337	1					
ANR	4977420	ExpressionStatement	-- lp	333:8:12397:12401	4977337	1	True				
ANR	4977421	UnaryExpression	-- lp		4977337	0					
ANR	4977422	IncDec	--		4977337	0					
ANR	4977423	Identifier	lp		4977337	1					
ANR	4977424	IfStatement	if ( ( const byte * ) lp == data )		4977337	8					
ANR	4977425	Condition	( const byte * ) lp == data	334:8:12411:12434	4977337	0	True				
ANR	4977426	EqualityExpression	( const byte * ) lp == data		4977337	0		==			
ANR	4977427	CastExpression	( const byte * ) lp		4977337	0					
ANR	4977428	CastTarget	const byte *		4977337	0					
ANR	4977429	Identifier	lp		4977337	1					
ANR	4977430	Identifier	data		4977337	1					
ANR	4977431	CompoundStatement		17:34:529:529	4977337	1					
ANR	4977432	ExpressionStatement	pbox -> p . x = pbox -> q . x = pbox -> p . y = pbox -> q . y = 0	335:8:12447:12496	4977337	0	True				
ANR	4977433	AssignmentExpression	pbox -> p . x = pbox -> q . x = pbox -> p . y = pbox -> q . y = 0		4977337	0		=			
ANR	4977434	MemberAccess	pbox -> p . x		4977337	0					
ANR	4977435	PtrMemberAccess	pbox -> p		4977337	0					
ANR	4977436	Identifier	pbox		4977337	0					
ANR	4977437	Identifier	p		4977337	1					
ANR	4977438	Identifier	x		4977337	1					
ANR	4977439	AssignmentExpression	pbox -> q . x = pbox -> p . y = pbox -> q . y = 0		4977337	1		=			
ANR	4977440	MemberAccess	pbox -> q . x		4977337	0					
ANR	4977441	PtrMemberAccess	pbox -> q		4977337	0					
ANR	4977442	Identifier	pbox		4977337	0					
ANR	4977443	Identifier	q		4977337	1					
ANR	4977444	Identifier	x		4977337	1					
ANR	4977445	AssignmentExpression	pbox -> p . y = pbox -> q . y = 0		4977337	1		=			
ANR	4977446	MemberAccess	pbox -> p . y		4977337	0					
ANR	4977447	PtrMemberAccess	pbox -> p		4977337	0					
ANR	4977448	Identifier	pbox		4977337	0					
ANR	4977449	Identifier	p		4977337	1					
ANR	4977450	Identifier	y		4977337	1					
ANR	4977451	AssignmentExpression	pbox -> q . y = 0		4977337	1		=			
ANR	4977452	MemberAccess	pbox -> q . y		4977337	0					
ANR	4977453	PtrMemberAccess	pbox -> q		4977337	0					
ANR	4977454	Identifier	pbox		4977337	0					
ANR	4977455	Identifier	q		4977337	1					
ANR	4977456	Identifier	y		4977337	1					
ANR	4977457	PrimaryExpression	0		4977337	1					
ANR	4977458	ReturnStatement	return ;	336:8:12506:12512	4977337	1	True				
ANR	4977459	ExpressionStatement	pbox -> q . y = height = ( ( const byte * ) lp - data + raster - 1 ) / raster	338:4:12524:12592	4977337	9	True				
ANR	4977460	AssignmentExpression	pbox -> q . y = height = ( ( const byte * ) lp - data + raster - 1 ) / raster		4977337	0		=			
ANR	4977461	MemberAccess	pbox -> q . y		4977337	0					
ANR	4977462	PtrMemberAccess	pbox -> q		4977337	0					
ANR	4977463	Identifier	pbox		4977337	0					
ANR	4977464	Identifier	q		4977337	1					
ANR	4977465	Identifier	y		4977337	1					
ANR	4977466	AssignmentExpression	height = ( ( const byte * ) lp - data + raster - 1 ) / raster		4977337	1		=			
ANR	4977467	Identifier	height		4977337	0					
ANR	4977468	MultiplicativeExpression	( ( const byte * ) lp - data + raster - 1 ) / raster		4977337	1		/			
ANR	4977469	AdditiveExpression	( const byte * ) lp - data + raster - 1		4977337	0		-			
ANR	4977470	CastExpression	( const byte * ) lp		4977337	0					
ANR	4977471	CastTarget	const byte *		4977337	0					
ANR	4977472	Identifier	lp		4977337	1					
ANR	4977473	AdditiveExpression	data + raster - 1		4977337	1		+			
ANR	4977474	Identifier	data		4977337	0					
ANR	4977475	AdditiveExpression	raster - 1		4977337	1		-			
ANR	4977476	Identifier	raster		4977337	0					
ANR	4977477	PrimaryExpression	1		4977337	1					
ANR	4977478	Identifier	raster		4977337	1					
ANR	4977479	ExpressionStatement	lp = ( const ulong * ) data	342:4:12636:12660	4977337	10	True				
ANR	4977480	AssignmentExpression	lp = ( const ulong * ) data		4977337	0		=			
ANR	4977481	Identifier	lp		4977337	0					
ANR	4977482	CastExpression	( const ulong * ) data		4977337	1					
ANR	4977483	CastTarget	const ulong *		4977337	0					
ANR	4977484	Identifier	data		4977337	1					
ANR	4977485	WhileStatement	while ( ! * lp )		4977337	11					
ANR	4977486	Condition	! * lp	343:11:12673:12676	4977337	0	True				
ANR	4977487	UnaryOperationExpression	! * lp		4977337	0					
ANR	4977488	UnaryOperator	!		4977337	0					
ANR	4977489	UnaryOperationExpression	* lp		4977337	1					
ANR	4977490	UnaryOperator	*		4977337	0					
ANR	4977491	Identifier	lp		4977337	1					
ANR	4977492	ExpressionStatement	++ lp	344:8:12687:12691	4977337	1	True				
ANR	4977493	UnaryExpression	++ lp		4977337	0					
ANR	4977494	IncDec	++		4977337	0					
ANR	4977495	Identifier	lp		4977337	1					
ANR	4977496	CompoundStatement		29:8:799:842	4977337	12					
ANR	4977497	IdentifierDeclStatement	uint n = ( ( const byte * ) lp - data ) / raster ;	346:8:12707:12750	4977337	0	True				
ANR	4977498	IdentifierDecl	n = ( ( const byte * ) lp - data ) / raster		4977337	0					
ANR	4977499	IdentifierDeclType	uint		4977337	0					
ANR	4977500	Identifier	n		4977337	1					
ANR	4977501	AssignmentExpression	n = ( ( const byte * ) lp - data ) / raster		4977337	2		=			
ANR	4977502	Identifier	n		4977337	0					
ANR	4977503	MultiplicativeExpression	( ( const byte * ) lp - data ) / raster		4977337	1		/			
ANR	4977504	AdditiveExpression	( const byte * ) lp - data		4977337	0		-			
ANR	4977505	CastExpression	( const byte * ) lp		4977337	0					
ANR	4977506	CastTarget	const byte *		4977337	0					
ANR	4977507	Identifier	lp		4977337	1					
ANR	4977508	Identifier	data		4977337	1					
ANR	4977509	Identifier	raster		4977337	1					
ANR	4977510	ExpressionStatement	pbox -> p . y = n	348:8:12761:12774	4977337	1	True				
ANR	4977511	AssignmentExpression	pbox -> p . y = n		4977337	0		=			
ANR	4977512	MemberAccess	pbox -> p . y		4977337	0					
ANR	4977513	PtrMemberAccess	pbox -> p		4977337	0					
ANR	4977514	Identifier	pbox		4977337	0					
ANR	4977515	Identifier	p		4977337	1					
ANR	4977516	Identifier	y		4977337	1					
ANR	4977517	Identifier	n		4977337	1					
ANR	4977518	IfStatement	if ( n )		4977337	2					
ANR	4977519	Condition	n	349:12:12788:12788	4977337	0	True				
ANR	4977520	Identifier	n		4977337	0					
ANR	4977521	ExpressionStatement	"height -= n , data += n * raster"	350:12:12803:12834	4977337	1	True				
ANR	4977522	Expression	"height -= n , data += n * raster"		4977337	0					
ANR	4977523	AssignmentExpression	height -= n		4977337	0		-=			
ANR	4977524	Identifier	height		4977337	0					
ANR	4977525	Identifier	n		4977337	1					
ANR	4977526	AssignmentExpression	data += n * raster		4977337	1		+=			
ANR	4977527	Identifier	data		4977337	0					
ANR	4977528	MultiplicativeExpression	n * raster		4977337	1		*			
ANR	4977529	Identifier	n		4977337	0					
ANR	4977530	Identifier	raster		4977337	1					
ANR	4977531	CompoundStatement		44:8:1222:1231	4977337	13					
ANR	4977532	IdentifierDeclStatement	uint raster_longs = raster >> ARCH_LOG2_SIZEOF_LONG ;	357:8:12961:13012	4977337	0	True				
ANR	4977533	IdentifierDecl	raster_longs = raster >> ARCH_LOG2_SIZEOF_LONG		4977337	0					
ANR	4977534	IdentifierDeclType	uint		4977337	0					
ANR	4977535	Identifier	raster_longs		4977337	1					
ANR	4977536	AssignmentExpression	raster_longs = raster >> ARCH_LOG2_SIZEOF_LONG		4977337	2		=			
ANR	4977537	Identifier	raster_longs		4977337	0					
ANR	4977538	ShiftExpression	raster >> ARCH_LOG2_SIZEOF_LONG		4977337	1		>>			
ANR	4977539	Identifier	raster		4977337	0					
ANR	4977540	Identifier	ARCH_LOG2_SIZEOF_LONG		4977337	1					
ANR	4977541	IdentifierDeclStatement	"uint left = raster_longs - 1 , right = 0 ;"	358:8:13022:13061	4977337	1	True				
ANR	4977542	IdentifierDecl	left = raster_longs - 1		4977337	0					
ANR	4977543	IdentifierDeclType	uint		4977337	0					
ANR	4977544	Identifier	left		4977337	1					
ANR	4977545	AssignmentExpression	left = raster_longs - 1		4977337	2		=			
ANR	4977546	Identifier	left		4977337	0					
ANR	4977547	AdditiveExpression	raster_longs - 1		4977337	1		-			
ANR	4977548	Identifier	raster_longs		4977337	0					
ANR	4977549	PrimaryExpression	1		4977337	1					
ANR	4977550	IdentifierDecl	right = 0		4977337	1					
ANR	4977551	IdentifierDeclType	uint		4977337	0					
ANR	4977552	Identifier	right		4977337	1					
ANR	4977553	AssignmentExpression	right = 0		4977337	2		=			
ANR	4977554	Identifier	right		4977337	0					
ANR	4977555	PrimaryExpression	0		4977337	1					
ANR	4977556	IdentifierDeclStatement	"ulong llong = 0 , rlong = 0 ;"	359:8:13071:13097	4977337	2	True				
ANR	4977557	IdentifierDecl	llong = 0		4977337	0					
ANR	4977558	IdentifierDeclType	ulong		4977337	0					
ANR	4977559	Identifier	llong		4977337	1					
ANR	4977560	AssignmentExpression	llong = 0		4977337	2		=			
ANR	4977561	Identifier	llong		4977337	0					
ANR	4977562	PrimaryExpression	0		4977337	1					
ANR	4977563	IdentifierDecl	rlong = 0		4977337	1					
ANR	4977564	IdentifierDeclType	ulong		4977337	0					
ANR	4977565	Identifier	rlong		4977337	1					
ANR	4977566	AssignmentExpression	rlong = 0		4977337	2		=			
ANR	4977567	Identifier	rlong		4977337	0					
ANR	4977568	PrimaryExpression	0		4977337	1					
ANR	4977569	IdentifierDeclStatement	const byte * q ;	360:8:13107:13120	4977337	3	True				
ANR	4977570	IdentifierDecl	* q		4977337	0					
ANR	4977571	IdentifierDeclType	const byte *		4977337	0					
ANR	4977572	Identifier	q		4977337	1					
ANR	4977573	IdentifierDeclStatement	"uint h , n ;"	361:8:13130:13139	4977337	4	True				
ANR	4977574	IdentifierDecl	h		4977337	0					
ANR	4977575	IdentifierDeclType	uint		4977337	0					
ANR	4977576	Identifier	h		4977337	1					
ANR	4977577	IdentifierDecl	n		4977337	1					
ANR	4977578	IdentifierDeclType	uint		4977337	0					
ANR	4977579	Identifier	n		4977337	1					
ANR	4977580	ForStatement	"for ( q = data , h = height ; h -- > 0 ; q += raster )"		4977337	5					
ANR	4977581	ForInit	"q = data , h = height ;"	363:13:13155:13175	4977337	0	True				
ANR	4977582	Expression	"q = data , h = height"		4977337	0					
ANR	4977583	AssignmentExpression	q = data		4977337	0		=			
ANR	4977584	Identifier	q		4977337	0					
ANR	4977585	Identifier	data		4977337	1					
ANR	4977586	AssignmentExpression	h = height		4977337	1		=			
ANR	4977587	Identifier	h		4977337	0					
ANR	4977588	Identifier	height		4977337	1					
ANR	4977589	Condition	h -- > 0	363:35:13177:13183	4977337	1	True				
ANR	4977590	RelationalExpression	h -- > 0		4977337	0		>			
ANR	4977591	PostIncDecOperationExpression	h --		4977337	0					
ANR	4977592	Identifier	h		4977337	0					
ANR	4977593	IncDec	--		4977337	1					
ANR	4977594	PrimaryExpression	0		4977337	1					
ANR	4977595	AssignmentExpression	q += raster	363:44:13186:13196	4977337	2	True	+=			
ANR	4977596	Identifier	q		4977337	0					
ANR	4977597	Identifier	raster		4977337	1					
ANR	4977598	CompoundStatement		46:57:1291:1291	4977337	3					
ANR	4977599	ForStatement	"for ( lp = ( const ulong * ) q , n = 0 ; n < left && ! * lp ; lp ++ , n ++ )"		4977337	0					
ANR	4977600	ForInit	"lp = ( const ulong * ) q , n = 0 ;"	364:17:13258:13286	4977337	0	True				
ANR	4977601	Expression	"lp = ( const ulong * ) q , n = 0"		4977337	0					
ANR	4977602	AssignmentExpression	lp = ( const ulong * ) q		4977337	0		=			
ANR	4977603	Identifier	lp		4977337	0					
ANR	4977604	CastExpression	( const ulong * ) q		4977337	1					
ANR	4977605	CastTarget	const ulong *		4977337	0					
ANR	4977606	Identifier	q		4977337	1					
ANR	4977607	AssignmentExpression	n = 0		4977337	1		=			
ANR	4977608	Identifier	n		4977337	0					
ANR	4977609	PrimaryExpression	0		4977337	1					
ANR	4977610	Condition	n < left && ! * lp	365:17:13305:13320	4977337	1	True				
ANR	4977611	AndExpression	n < left && ! * lp		4977337	0		&&			
ANR	4977612	RelationalExpression	n < left		4977337	0		<			
ANR	4977613	Identifier	n		4977337	0					
ANR	4977614	Identifier	left		4977337	1					
ANR	4977615	UnaryOperationExpression	! * lp		4977337	1					
ANR	4977616	UnaryOperator	!		4977337	0					
ANR	4977617	UnaryOperationExpression	* lp		4977337	1					
ANR	4977618	UnaryOperator	*		4977337	0					
ANR	4977619	Identifier	lp		4977337	1					
ANR	4977620	Expression	"lp ++ , n ++"	365:35:13323:13331	4977337	2	True				
ANR	4977621	PostIncDecOperationExpression	lp ++		4977337	0					
ANR	4977622	Identifier	lp		4977337	0					
ANR	4977623	IncDec	++		4977337	1					
ANR	4977624	PostIncDecOperationExpression	n ++		4977337	1					
ANR	4977625	Identifier	n		4977337	0					
ANR	4977626	IncDec	++		4977337	1					
ANR	4977627	ExpressionStatement		366:17:13350:13350	4977337	3	True				
ANR	4977628	IfStatement	if ( n < left )		4977337	1					
ANR	4977629	Condition	n < left	367:16:13368:13375	4977337	0	True				
ANR	4977630	RelationalExpression	n < left		4977337	0		<			
ANR	4977631	Identifier	n		4977337	0					
ANR	4977632	Identifier	left		4977337	1					
ANR	4977633	ExpressionStatement	"left = n , llong = * lp"	368:16:13394:13415	4977337	1	True				
ANR	4977634	Expression	"left = n , llong = * lp"		4977337	0					
ANR	4977635	AssignmentExpression	left = n		4977337	0		=			
ANR	4977636	Identifier	left		4977337	0					
ANR	4977637	Identifier	n		4977337	1					
ANR	4977638	AssignmentExpression	llong = * lp		4977337	1		=			
ANR	4977639	Identifier	llong		4977337	0					
ANR	4977640	UnaryOperationExpression	* lp		4977337	1					
ANR	4977641	UnaryOperator	*		4977337	0					
ANR	4977642	Identifier	lp		4977337	1					
ANR	4977643	ElseStatement	else		4977337	0					
ANR	4977644	ExpressionStatement	llong |= * lp	370:16:13450:13462	4977337	0	True				
ANR	4977645	AssignmentExpression	llong |= * lp		4977337	0		|=			
ANR	4977646	Identifier	llong		4977337	0					
ANR	4977647	UnaryOperationExpression	* lp		4977337	1					
ANR	4977648	UnaryOperator	*		4977337	0					
ANR	4977649	Identifier	lp		4977337	1					
ANR	4977650	ForStatement	"for ( lp = ( const ulong * ) ( q + raster - sizeof ( long ) ) , n = raster_longs - 1 ; n > right && ! * lp ; lp -- , n -- )"		4977337	2					
ANR	4977651	ForInit	"lp = ( const ulong * ) ( q + raster - sizeof ( long ) ) , n = raster_longs - 1 ;"	372:17:13534:13620	4977337	0	True				
ANR	4977652	Expression	"lp = ( const ulong * ) ( q + raster - sizeof ( long ) ) , n = raster_longs - 1"		4977337	0					
ANR	4977653	AssignmentExpression	lp = ( const ulong * ) ( q + raster - sizeof ( long ) )		4977337	0		=			
ANR	4977654	Identifier	lp		4977337	0					
ANR	4977655	CastExpression	( const ulong * ) ( q + raster - sizeof ( long ) )		4977337	1					
ANR	4977656	CastTarget	const ulong *		4977337	0					
ANR	4977657	AdditiveExpression	q + raster - sizeof ( long )		4977337	1		+			
ANR	4977658	Identifier	q		4977337	0					
ANR	4977659	AdditiveExpression	raster - sizeof ( long )		4977337	1		-			
ANR	4977660	Identifier	raster		4977337	0					
ANR	4977661	SizeofExpression	sizeof ( long )		4977337	1					
ANR	4977662	Sizeof	sizeof		4977337	0					
ANR	4977663	SizeofOperand	long		4977337	1					
ANR	4977664	AssignmentExpression	n = raster_longs - 1		4977337	1		=			
ANR	4977665	Identifier	n		4977337	0					
ANR	4977666	AdditiveExpression	raster_longs - 1		4977337	1		-			
ANR	4977667	Identifier	raster_longs		4977337	0					
ANR	4977668	PrimaryExpression	1		4977337	1					
ANR	4977669	Condition	n > right && ! * lp	375:17:13640:13656	4977337	1	True				
ANR	4977670	AndExpression	n > right && ! * lp		4977337	0		&&			
ANR	4977671	RelationalExpression	n > right		4977337	0		>			
ANR	4977672	Identifier	n		4977337	0					
ANR	4977673	Identifier	right		4977337	1					
ANR	4977674	UnaryOperationExpression	! * lp		4977337	1					
ANR	4977675	UnaryOperator	!		4977337	0					
ANR	4977676	UnaryOperationExpression	* lp		4977337	1					
ANR	4977677	UnaryOperator	*		4977337	0					
ANR	4977678	Identifier	lp		4977337	1					
ANR	4977679	Expression	"lp -- , n --"	375:36:13659:13667	4977337	2	True				
ANR	4977680	PostIncDecOperationExpression	lp --		4977337	0					
ANR	4977681	Identifier	lp		4977337	0					
ANR	4977682	IncDec	--		4977337	1					
ANR	4977683	PostIncDecOperationExpression	n --		4977337	1					
ANR	4977684	Identifier	n		4977337	0					
ANR	4977685	IncDec	--		4977337	1					
ANR	4977686	ExpressionStatement		376:17:13686:13686	4977337	3	True				
ANR	4977687	IfStatement	if ( n > right )		4977337	3					
ANR	4977688	Condition	n > right	377:16:13704:13712	4977337	0	True				
ANR	4977689	RelationalExpression	n > right		4977337	0		>			
ANR	4977690	Identifier	n		4977337	0					
ANR	4977691	Identifier	right		4977337	1					
ANR	4977692	ExpressionStatement	"right = n , rlong = * lp"	378:16:13731:13753	4977337	1	True				
ANR	4977693	Expression	"right = n , rlong = * lp"		4977337	0					
ANR	4977694	AssignmentExpression	right = n		4977337	0		=			
ANR	4977695	Identifier	right		4977337	0					
ANR	4977696	Identifier	n		4977337	1					
ANR	4977697	AssignmentExpression	rlong = * lp		4977337	1		=			
ANR	4977698	Identifier	rlong		4977337	0					
ANR	4977699	UnaryOperationExpression	* lp		4977337	1					
ANR	4977700	UnaryOperator	*		4977337	0					
ANR	4977701	Identifier	lp		4977337	1					
ANR	4977702	ElseStatement	else		4977337	0					
ANR	4977703	ExpressionStatement	rlong |= * lp	380:16:13788:13800	4977337	0	True				
ANR	4977704	AssignmentExpression	rlong |= * lp		4977337	0		|=			
ANR	4977705	Identifier	rlong		4977337	0					
ANR	4977706	UnaryOperationExpression	* lp		4977337	1					
ANR	4977707	UnaryOperator	*		4977337	0					
ANR	4977708	Identifier	lp		4977337	1					
ANR	4977709	ExpressionStatement	Error_longs_are_too_large ( )	386:8:13950:13977	4977337	6	True				
ANR	4977710	CallExpression	Error_longs_are_too_large ( )		4977337	0					
ANR	4977711	Callee	Error_longs_are_too_large		4977337	0					
ANR	4977712	Identifier	Error_longs_are_too_large		4977337	0					
ANR	4977713	ArgumentList			4977337	1					
ANR	4977714	Statement	define	390:3:14013:14018	4977337	7	True				
ANR	4977715	Statement	last_bits	390:10:14020:14028	4977337	8	True				
ANR	4977716	Statement	(	390:19:14029:14029	4977337	9	True				
ANR	4977717	Statement	n	390:20:14030:14030	4977337	10	True				
ANR	4977718	Statement	)	390:21:14031:14031	4977337	11	True				
ANR	4977719	Statement	(	390:23:14033:14033	4977337	12	True				
ANR	4977720	Statement	(	390:24:14034:14034	4977337	13	True				
ANR	4977721	Statement	1L	390:25:14035:14036	4977337	14	True				
ANR	4977722	Statement	<<	390:28:14038:14039	4977337	15	True				
ANR	4977723	Statement	(	390:31:14041:14041	4977337	16	True				
ANR	4977724	Statement	n	390:32:14042:14042	4977337	17	True				
ANR	4977725	Statement	)	390:33:14043:14043	4977337	18	True				
ANR	4977726	Statement	)	390:34:14044:14044	4977337	19	True				
ANR	4977727	Statement	-	390:36:14046:14046	4977337	20	True				
ANR	4977728	Statement	1	390:38:14048:14048	4977337	21	True				
ANR	4977729	Statement	)	390:39:14049:14049	4977337	22	True				
ANR	4977730	Statement	define	391:3:14054:14059	4977337	23	True				
ANR	4977731	Statement	shift_out_last	391:10:14061:14074	4977337	24	True				
ANR	4977732	Statement	(	391:24:14075:14075	4977337	25	True				
ANR	4977733	Statement	x	391:25:14076:14076	4977337	26	True				
ANR	4977734	Statement	","	391:26:14077:14077	4977337	27	True				
ANR	4977735	Statement	n	391:27:14078:14078	4977337	28	True				
ANR	4977736	Statement	)	391:28:14079:14079	4977337	29	True				
ANR	4977737	Statement	(	391:30:14081:14081	4977337	30	True				
ANR	4977738	Statement	(	391:31:14082:14082	4977337	31	True				
ANR	4977739	Statement	x	391:32:14083:14083	4977337	32	True				
ANR	4977740	Statement	)	391:33:14084:14084	4977337	33	True				
ANR	4977741	Statement	>>=	391:35:14086:14088	4977337	34	True				
ANR	4977742	Statement	(	391:39:14090:14090	4977337	35	True				
ANR	4977743	Statement	n	391:40:14091:14091	4977337	36	True				
ANR	4977744	Statement	)	391:41:14092:14092	4977337	37	True				
ANR	4977745	Statement	)	391:42:14093:14093	4977337	38	True				
ANR	4977746	Statement	define	392:3:14098:14103	4977337	39	True				
ANR	4977747	Statement	right_justify_last	392:10:14105:14122	4977337	40	True				
ANR	4977748	Statement	(	392:28:14123:14123	4977337	41	True				
ANR	4977749	Statement	x	392:29:14124:14124	4977337	42	True				
ANR	4977750	Statement	","	392:30:14125:14125	4977337	43	True				
ANR	4977751	Statement	n	392:31:14126:14126	4977337	44	True				
ANR	4977752	Statement	)	392:32:14127:14127	4977337	45	True				
ANR	4977753	Statement	DO_NOTHING	392:34:14129:14138	4977337	46	True				
ANR	4977754	ExpressionStatement	left <<= ARCH_LOG2_SIZEOF_LONG + 3	399:8:14342:14376	4977337	47	True				
ANR	4977755	AssignmentExpression	left <<= ARCH_LOG2_SIZEOF_LONG + 3		4977337	0		<<=			
ANR	4977756	Identifier	left		4977337	0					
ANR	4977757	AdditiveExpression	ARCH_LOG2_SIZEOF_LONG + 3		4977337	1		+			
ANR	4977758	Identifier	ARCH_LOG2_SIZEOF_LONG		4977337	0					
ANR	4977759	PrimaryExpression	3		4977337	1					
ANR	4977760	IfStatement	if ( llong & ~last_bits ( 32 ) )		4977337	48					
ANR	4977761	Condition	llong & ~last_bits ( 32 )	401:12:14416:14437	4977337	0	True				
ANR	4977762	BitAndExpression	llong & ~last_bits ( 32 )		4977337	0		&			
ANR	4977763	Identifier	llong		4977337	0					
ANR	4977764	CallExpression	~last_bits ( 32 )		4977337	1					
ANR	4977765	Callee	~last_bits		4977337	0					
ANR	4977766	Identifier	~last_bits		4977337	0					
ANR	4977767	ArgumentList	32		4977337	1					
ANR	4977768	Argument	32		4977337	0					
ANR	4977769	PrimaryExpression	32		4977337	0					
ANR	4977770	ExpressionStatement	"shift_out_last ( llong , 32 )"	402:12:14452:14477	4977337	1	True				
ANR	4977771	CallExpression	"shift_out_last ( llong , 32 )"		4977337	0					
ANR	4977772	Callee	shift_out_last		4977337	0					
ANR	4977773	Identifier	shift_out_last		4977337	0					
ANR	4977774	ArgumentList	llong		4977337	1					
ANR	4977775	Argument	llong		4977337	0					
ANR	4977776	Identifier	llong		4977337	0					
ANR	4977777	Argument	32		4977337	1					
ANR	4977778	PrimaryExpression	32		4977337	0					
ANR	4977779	ElseStatement	else		4977337	0					
ANR	4977780	ExpressionStatement	left += 32	404:12:14504:14514	4977337	0	True				
ANR	4977781	AssignmentExpression	left += 32		4977337	0		+=			
ANR	4977782	Identifier	left		4977337	0					
ANR	4977783	PrimaryExpression	32		4977337	1					
ANR	4977784	IfStatement	if ( llong & ~last_bits ( 16 ) )		4977337	49					
ANR	4977785	Condition	llong & ~last_bits ( 16 )	406:12:14535:14556	4977337	0	True				
ANR	4977786	BitAndExpression	llong & ~last_bits ( 16 )		4977337	0		&			
ANR	4977787	Identifier	llong		4977337	0					
ANR	4977788	CallExpression	~last_bits ( 16 )		4977337	1					
ANR	4977789	Callee	~last_bits		4977337	0					
ANR	4977790	Identifier	~last_bits		4977337	0					
ANR	4977791	ArgumentList	16		4977337	1					
ANR	4977792	Argument	16		4977337	0					
ANR	4977793	PrimaryExpression	16		4977337	0					
ANR	4977794	ExpressionStatement	"shift_out_last ( llong , 16 )"	407:12:14571:14596	4977337	1	True				
ANR	4977795	CallExpression	"shift_out_last ( llong , 16 )"		4977337	0					
ANR	4977796	Callee	shift_out_last		4977337	0					
ANR	4977797	Identifier	shift_out_last		4977337	0					
ANR	4977798	ArgumentList	llong		4977337	1					
ANR	4977799	Argument	llong		4977337	0					
ANR	4977800	Identifier	llong		4977337	0					
ANR	4977801	Argument	16		4977337	1					
ANR	4977802	PrimaryExpression	16		4977337	0					
ANR	4977803	ElseStatement	else		4977337	0					
ANR	4977804	ExpressionStatement	left += 16	409:12:14623:14633	4977337	0	True				
ANR	4977805	AssignmentExpression	left += 16		4977337	0		+=			
ANR	4977806	Identifier	left		4977337	0					
ANR	4977807	PrimaryExpression	16		4977337	1					
ANR	4977808	IfStatement	if ( llong & ~last_bits ( 8 ) )		4977337	50					
ANR	4977809	Condition	llong & ~last_bits ( 8 )	410:12:14647:14667	4977337	0	True				
ANR	4977810	BitAndExpression	llong & ~last_bits ( 8 )		4977337	0		&			
ANR	4977811	Identifier	llong		4977337	0					
ANR	4977812	CallExpression	~last_bits ( 8 )		4977337	1					
ANR	4977813	Callee	~last_bits		4977337	0					
ANR	4977814	Identifier	~last_bits		4977337	0					
ANR	4977815	ArgumentList	8		4977337	1					
ANR	4977816	Argument	8		4977337	0					
ANR	4977817	PrimaryExpression	8		4977337	0					
ANR	4977818	ExpressionStatement	"shift_out_last ( llong , 8 )"	411:12:14682:14706	4977337	1	True				
ANR	4977819	CallExpression	"shift_out_last ( llong , 8 )"		4977337	0					
ANR	4977820	Callee	shift_out_last		4977337	0					
ANR	4977821	Identifier	shift_out_last		4977337	0					
ANR	4977822	ArgumentList	llong		4977337	1					
ANR	4977823	Argument	llong		4977337	0					
ANR	4977824	Identifier	llong		4977337	0					
ANR	4977825	Argument	8		4977337	1					
ANR	4977826	PrimaryExpression	8		4977337	0					
ANR	4977827	ElseStatement	else		4977337	0					
ANR	4977828	ExpressionStatement	left += 8	413:12:14733:14742	4977337	0	True				
ANR	4977829	AssignmentExpression	left += 8		4977337	0		+=			
ANR	4977830	Identifier	left		4977337	0					
ANR	4977831	PrimaryExpression	8		4977337	1					
ANR	4977832	ExpressionStatement	"right_justify_last ( llong , 8 )"	414:8:14752:14780	4977337	51	True				
ANR	4977833	CallExpression	"right_justify_last ( llong , 8 )"		4977337	0					
ANR	4977834	Callee	right_justify_last		4977337	0					
ANR	4977835	Identifier	right_justify_last		4977337	0					
ANR	4977836	ArgumentList	llong		4977337	1					
ANR	4977837	Argument	llong		4977337	0					
ANR	4977838	Identifier	llong		4977337	0					
ANR	4977839	Argument	8		4977337	1					
ANR	4977840	PrimaryExpression	8		4977337	0					
ANR	4977841	IfStatement	if ( llong & 0xf0 )		4977337	52					
ANR	4977842	Condition	llong & 0xf0	415:12:14794:14805	4977337	0	True				
ANR	4977843	BitAndExpression	llong & 0xf0		4977337	0		&			
ANR	4977844	Identifier	llong		4977337	0					
ANR	4977845	PrimaryExpression	0xf0		4977337	1					
ANR	4977846	ExpressionStatement	left += first_1 [ ( byte ) llong >> 4 ]	416:12:14820:14854	4977337	1	True				
ANR	4977847	AssignmentExpression	left += first_1 [ ( byte ) llong >> 4 ]		4977337	0		+=			
ANR	4977848	Identifier	left		4977337	0					
ANR	4977849	ArrayIndexing	first_1 [ ( byte ) llong >> 4 ]		4977337	1					
ANR	4977850	Identifier	first_1		4977337	0					
ANR	4977851	ShiftExpression	( byte ) llong >> 4		4977337	1		>>			
ANR	4977852	CastExpression	( byte ) llong		4977337	0					
ANR	4977853	CastTarget	byte		4977337	0					
ANR	4977854	Identifier	llong		4977337	1					
ANR	4977855	PrimaryExpression	4		4977337	1					
ANR	4977856	ElseStatement	else		4977337	0					
ANR	4977857	ExpressionStatement	left += first_1 [ ( byte ) llong ] + 4	418:12:14881:14914	4977337	0	True				
ANR	4977858	AssignmentExpression	left += first_1 [ ( byte ) llong ] + 4		4977337	0		+=			
ANR	4977859	Identifier	left		4977337	0					
ANR	4977860	AdditiveExpression	first_1 [ ( byte ) llong ] + 4		4977337	1		+			
ANR	4977861	ArrayIndexing	first_1 [ ( byte ) llong ]		4977337	0					
ANR	4977862	Identifier	first_1		4977337	0					
ANR	4977863	CastExpression	( byte ) llong		4977337	1					
ANR	4977864	CastTarget	byte		4977337	0					
ANR	4977865	Identifier	llong		4977337	1					
ANR	4977866	PrimaryExpression	4		4977337	1					
ANR	4977867	ExpressionStatement	right <<= ARCH_LOG2_SIZEOF_LONG + 3	420:8:14925:14960	4977337	53	True				
ANR	4977868	AssignmentExpression	right <<= ARCH_LOG2_SIZEOF_LONG + 3		4977337	0		<<=			
ANR	4977869	Identifier	right		4977337	0					
ANR	4977870	AdditiveExpression	ARCH_LOG2_SIZEOF_LONG + 3		4977337	1		+			
ANR	4977871	Identifier	ARCH_LOG2_SIZEOF_LONG		4977337	0					
ANR	4977872	PrimaryExpression	3		4977337	1					
ANR	4977873	IfStatement	if ( ! ( rlong & last_bits ( 32 ) ) )		4977337	54					
ANR	4977874	Condition	! ( rlong & last_bits ( 32 ) )	422:12:15000:15023	4977337	0	True				
ANR	4977875	UnaryOperationExpression	! ( rlong & last_bits ( 32 ) )		4977337	0					
ANR	4977876	UnaryOperator	!		4977337	0					
ANR	4977877	BitAndExpression	rlong & last_bits ( 32 )		4977337	1		&			
ANR	4977878	Identifier	rlong		4977337	0					
ANR	4977879	CallExpression	last_bits ( 32 )		4977337	1					
ANR	4977880	Callee	last_bits		4977337	0					
ANR	4977881	Identifier	last_bits		4977337	0					
ANR	4977882	ArgumentList	32		4977337	1					
ANR	4977883	Argument	32		4977337	0					
ANR	4977884	PrimaryExpression	32		4977337	0					
ANR	4977885	ExpressionStatement	"shift_out_last ( rlong , 32 )"	423:12:15038:15063	4977337	1	True				
ANR	4977886	CallExpression	"shift_out_last ( rlong , 32 )"		4977337	0					
ANR	4977887	Callee	shift_out_last		4977337	0					
ANR	4977888	Identifier	shift_out_last		4977337	0					
ANR	4977889	ArgumentList	rlong		4977337	1					
ANR	4977890	Argument	rlong		4977337	0					
ANR	4977891	Identifier	rlong		4977337	0					
ANR	4977892	Argument	32		4977337	1					
ANR	4977893	PrimaryExpression	32		4977337	0					
ANR	4977894	ElseStatement	else		4977337	0					
ANR	4977895	ExpressionStatement	right += 32	425:12:15090:15101	4977337	0	True				
ANR	4977896	AssignmentExpression	right += 32		4977337	0		+=			
ANR	4977897	Identifier	right		4977337	0					
ANR	4977898	PrimaryExpression	32		4977337	1					
ANR	4977899	IfStatement	if ( ! ( rlong & last_bits ( 16 ) ) )		4977337	55					
ANR	4977900	Condition	! ( rlong & last_bits ( 16 ) )	427:12:15122:15145	4977337	0	True				
ANR	4977901	UnaryOperationExpression	! ( rlong & last_bits ( 16 ) )		4977337	0					
ANR	4977902	UnaryOperator	!		4977337	0					
ANR	4977903	BitAndExpression	rlong & last_bits ( 16 )		4977337	1		&			
ANR	4977904	Identifier	rlong		4977337	0					
ANR	4977905	CallExpression	last_bits ( 16 )		4977337	1					
ANR	4977906	Callee	last_bits		4977337	0					
ANR	4977907	Identifier	last_bits		4977337	0					
ANR	4977908	ArgumentList	16		4977337	1					
ANR	4977909	Argument	16		4977337	0					
ANR	4977910	PrimaryExpression	16		4977337	0					
ANR	4977911	ExpressionStatement	"shift_out_last ( rlong , 16 )"	428:12:15160:15185	4977337	1	True				
ANR	4977912	CallExpression	"shift_out_last ( rlong , 16 )"		4977337	0					
ANR	4977913	Callee	shift_out_last		4977337	0					
ANR	4977914	Identifier	shift_out_last		4977337	0					
ANR	4977915	ArgumentList	rlong		4977337	1					
ANR	4977916	Argument	rlong		4977337	0					
ANR	4977917	Identifier	rlong		4977337	0					
ANR	4977918	Argument	16		4977337	1					
ANR	4977919	PrimaryExpression	16		4977337	0					
ANR	4977920	ElseStatement	else		4977337	0					
ANR	4977921	ExpressionStatement	right += 16	430:12:15212:15223	4977337	0	True				
ANR	4977922	AssignmentExpression	right += 16		4977337	0		+=			
ANR	4977923	Identifier	right		4977337	0					
ANR	4977924	PrimaryExpression	16		4977337	1					
ANR	4977925	IfStatement	if ( ! ( rlong & last_bits ( 8 ) ) )		4977337	56					
ANR	4977926	Condition	! ( rlong & last_bits ( 8 ) )	431:12:15237:15259	4977337	0	True				
ANR	4977927	UnaryOperationExpression	! ( rlong & last_bits ( 8 ) )		4977337	0					
ANR	4977928	UnaryOperator	!		4977337	0					
ANR	4977929	BitAndExpression	rlong & last_bits ( 8 )		4977337	1		&			
ANR	4977930	Identifier	rlong		4977337	0					
ANR	4977931	CallExpression	last_bits ( 8 )		4977337	1					
ANR	4977932	Callee	last_bits		4977337	0					
ANR	4977933	Identifier	last_bits		4977337	0					
ANR	4977934	ArgumentList	8		4977337	1					
ANR	4977935	Argument	8		4977337	0					
ANR	4977936	PrimaryExpression	8		4977337	0					
ANR	4977937	ExpressionStatement	"shift_out_last ( rlong , 8 )"	432:12:15274:15298	4977337	1	True				
ANR	4977938	CallExpression	"shift_out_last ( rlong , 8 )"		4977337	0					
ANR	4977939	Callee	shift_out_last		4977337	0					
ANR	4977940	Identifier	shift_out_last		4977337	0					
ANR	4977941	ArgumentList	rlong		4977337	1					
ANR	4977942	Argument	rlong		4977337	0					
ANR	4977943	Identifier	rlong		4977337	0					
ANR	4977944	Argument	8		4977337	1					
ANR	4977945	PrimaryExpression	8		4977337	0					
ANR	4977946	ElseStatement	else		4977337	0					
ANR	4977947	ExpressionStatement	right += 8	434:12:15325:15335	4977337	0	True				
ANR	4977948	AssignmentExpression	right += 8		4977337	0		+=			
ANR	4977949	Identifier	right		4977337	0					
ANR	4977950	PrimaryExpression	8		4977337	1					
ANR	4977951	ExpressionStatement	"right_justify_last ( rlong , 8 )"	435:8:15345:15373	4977337	57	True				
ANR	4977952	CallExpression	"right_justify_last ( rlong , 8 )"		4977337	0					
ANR	4977953	Callee	right_justify_last		4977337	0					
ANR	4977954	Identifier	right_justify_last		4977337	0					
ANR	4977955	ArgumentList	rlong		4977337	1					
ANR	4977956	Argument	rlong		4977337	0					
ANR	4977957	Identifier	rlong		4977337	0					
ANR	4977958	Argument	8		4977337	1					
ANR	4977959	PrimaryExpression	8		4977337	0					
ANR	4977960	IfStatement	if ( ! ( rlong & 0xf ) )		4977337	58					
ANR	4977961	Condition	! ( rlong & 0xf )	436:12:15387:15400	4977337	0	True				
ANR	4977962	UnaryOperationExpression	! ( rlong & 0xf )		4977337	0					
ANR	4977963	UnaryOperator	!		4977337	0					
ANR	4977964	BitAndExpression	rlong & 0xf		4977337	1		&			
ANR	4977965	Identifier	rlong		4977337	0					
ANR	4977966	PrimaryExpression	0xf		4977337	1					
ANR	4977967	ExpressionStatement	right += last_1 [ ( byte ) rlong >> 4 ]	437:12:15415:15449	4977337	1	True				
ANR	4977968	AssignmentExpression	right += last_1 [ ( byte ) rlong >> 4 ]		4977337	0		+=			
ANR	4977969	Identifier	right		4977337	0					
ANR	4977970	ArrayIndexing	last_1 [ ( byte ) rlong >> 4 ]		4977337	1					
ANR	4977971	Identifier	last_1		4977337	0					
ANR	4977972	ShiftExpression	( byte ) rlong >> 4		4977337	1		>>			
ANR	4977973	CastExpression	( byte ) rlong		4977337	0					
ANR	4977974	CastTarget	byte		4977337	0					
ANR	4977975	Identifier	rlong		4977337	1					
ANR	4977976	PrimaryExpression	4		4977337	1					
ANR	4977977	ElseStatement	else		4977337	0					
ANR	4977978	ExpressionStatement	right += last_1 [ ( uint ) rlong & 0xf ] + 4	439:12:15476:15515	4977337	0	True				
ANR	4977979	AssignmentExpression	right += last_1 [ ( uint ) rlong & 0xf ] + 4		4977337	0		+=			
ANR	4977980	Identifier	right		4977337	0					
ANR	4977981	AdditiveExpression	last_1 [ ( uint ) rlong & 0xf ] + 4		4977337	1		+			
ANR	4977982	ArrayIndexing	last_1 [ ( uint ) rlong & 0xf ]		4977337	0					
ANR	4977983	Identifier	last_1		4977337	0					
ANR	4977984	BitAndExpression	( uint ) rlong & 0xf		4977337	1		&			
ANR	4977985	CastExpression	( uint ) rlong		4977337	0					
ANR	4977986	CastTarget	uint		4977337	0					
ANR	4977987	Identifier	rlong		4977337	1					
ANR	4977988	PrimaryExpression	0xf		4977337	1					
ANR	4977989	PrimaryExpression	4		4977337	1					
ANR	4977990	ExpressionStatement	pbox -> p . x = left	441:8:15526:15542	4977337	59	True				
ANR	4977991	AssignmentExpression	pbox -> p . x = left		4977337	0		=			
ANR	4977992	MemberAccess	pbox -> p . x		4977337	0					
ANR	4977993	PtrMemberAccess	pbox -> p		4977337	0					
ANR	4977994	Identifier	pbox		4977337	0					
ANR	4977995	Identifier	p		4977337	1					
ANR	4977996	Identifier	x		4977337	1					
ANR	4977997	Identifier	left		4977337	1					
ANR	4977998	ExpressionStatement	pbox -> q . x = right	442:8:15552:15569	4977337	60	True				
ANR	4977999	AssignmentExpression	pbox -> q . x = right		4977337	0		=			
ANR	4978000	MemberAccess	pbox -> q . x		4977337	0					
ANR	4978001	PtrMemberAccess	pbox -> q		4977337	0					
ANR	4978002	Identifier	pbox		4977337	0					
ANR	4978003	Identifier	q		4977337	1					
ANR	4978004	Identifier	x		4977337	1					
ANR	4978005	Identifier	right		4977337	1					
ANR	4978006	ReturnType	void		4977337	1					
ANR	4978007	Identifier	bits_bounding_box		4977337	2					
ANR	4978008	ParameterList	"const byte * data , uint height , uint raster , gs_int_rect * pbox"		4977337	3					
ANR	4978009	Parameter	const byte * data	316:18:11824:11840	4977337	0	True				
ANR	4978010	ParameterType	const byte *		4977337	0					
ANR	4978011	Identifier	data		4977337	1					
ANR	4978012	Parameter	uint height	316:37:11843:11853	4977337	1	True				
ANR	4978013	ParameterType	uint		4977337	0					
ANR	4978014	Identifier	height		4977337	1					
ANR	4978015	Parameter	uint raster	316:50:11856:11866	4977337	2	True				
ANR	4978016	ParameterType	uint		4977337	0					
ANR	4978017	Identifier	raster		4977337	1					
ANR	4978018	Parameter	gs_int_rect * pbox	317:18:11887:11904	4977337	3	True				
ANR	4978019	ParameterType	gs_int_rect *		4977337	0					
ANR	4978020	Identifier	pbox		4977337	1					
ANR	4978021	CFGEntryNode	ENTRY		4977337		True				
ANR	4978022	CFGExitNode	EXIT		4977337		True				
ANR	4978023	Symbol	data		4977337						
ANR	4978024	Symbol	lp		4977337						
ANR	4978025	Symbol	first_1		4977337						
ANR	4978026	Symbol	llong		4977337						
ANR	4978027	Symbol	ARCH_LOG2_SIZEOF_LONG		4977337						
ANR	4978028	Symbol	~last_bits		4977337						
ANR	4978029	Symbol	last_1		4977337						
ANR	4978030	Symbol	raster_longs		4977337						
ANR	4978031	Symbol	rlong		4977337						
ANR	4978032	Symbol	height		4977337						
ANR	4978033	Symbol	* rlong		4977337						
ANR	4978034	Symbol	raster		4977337						
ANR	4978035	Symbol	pbox -> p . x		4977337						
ANR	4978036	Symbol	h		4977337						
ANR	4978037	Symbol	* first_1		4977337						
ANR	4978038	Symbol	* lp		4977337						
ANR	4978039	Symbol	pbox -> p . y		4977337						
ANR	4978040	Symbol	right		4977337						
ANR	4978041	Symbol	n		4977337						
ANR	4978042	Symbol	pbox		4977337						
ANR	4978043	Symbol	* last_1		4977337						
ANR	4978044	Symbol	q		4977337						
ANR	4978045	Symbol	pbox -> q		4977337						
ANR	4978046	Symbol	pbox -> p		4977337						
ANR	4978047	Symbol	* pbox		4977337						
ANR	4978048	Symbol	left		4977337						
ANR	4978049	Symbol	* llong		4977337						
ANR	4978050	Symbol	last_bits		4977337						
ANR	4978051	Symbol	pbox -> q . y		4977337						
ANR	4978052	Symbol	pbox -> q . x		4977337						
ANR	4978053	Function	bits_extract_plane	447:0:15617:19380							
ANR	4978054	FunctionDef	"bits_extract_plane (const bits_plane_t * dest , const bits_plane_t * source , int shift , int width , int height)"		4978053	0					
ANR	4978055	CompoundStatement		450:0:15751:19380	4978053	0					
ANR	4978056	IdentifierDeclStatement	int source_depth = source -> depth ;	451:4:15757:15789	4978053	0	True				
ANR	4978057	IdentifierDecl	source_depth = source -> depth		4978053	0					
ANR	4978058	IdentifierDeclType	int		4978053	0					
ANR	4978059	Identifier	source_depth		4978053	1					
ANR	4978060	AssignmentExpression	source_depth = source -> depth		4978053	2		=			
ANR	4978061	Identifier	source_depth		4978053	0					
ANR	4978062	PtrMemberAccess	source -> depth		4978053	1					
ANR	4978063	Identifier	source		4978053	0					
ANR	4978064	Identifier	depth		4978053	1					
ANR	4978065	IdentifierDeclStatement	int source_bit = source -> x * source_depth ;	452:4:15795:15836	4978053	1	True				
ANR	4978066	IdentifierDecl	source_bit = source -> x * source_depth		4978053	0					
ANR	4978067	IdentifierDeclType	int		4978053	0					
ANR	4978068	Identifier	source_bit		4978053	1					
ANR	4978069	AssignmentExpression	source_bit = source -> x * source_depth		4978053	2		=			
ANR	4978070	Identifier	source_bit		4978053	0					
ANR	4978071	MultiplicativeExpression	source -> x * source_depth		4978053	1		*			
ANR	4978072	PtrMemberAccess	source -> x		4978053	0					
ANR	4978073	Identifier	source		4978053	0					
ANR	4978074	Identifier	x		4978053	1					
ANR	4978075	Identifier	source_depth		4978053	1					
ANR	4978076	IdentifierDeclStatement	const byte * source_row = source -> data . read + ( source_bit >> 3 ) ;	453:4:15842:15904	4978053	2	True				
ANR	4978077	IdentifierDecl	* source_row = source -> data . read + ( source_bit >> 3 )		4978053	0					
ANR	4978078	IdentifierDeclType	const byte *		4978053	0					
ANR	4978079	Identifier	source_row		4978053	1					
ANR	4978080	AssignmentExpression	* source_row = source -> data . read + ( source_bit >> 3 )		4978053	2		=			
ANR	4978081	Identifier	source_row		4978053	0					
ANR	4978082	AdditiveExpression	source -> data . read + ( source_bit >> 3 )		4978053	1		+			
ANR	4978083	MemberAccess	source -> data . read		4978053	0					
ANR	4978084	PtrMemberAccess	source -> data		4978053	0					
ANR	4978085	Identifier	source		4978053	0					
ANR	4978086	Identifier	data		4978053	1					
ANR	4978087	Identifier	read		4978053	1					
ANR	4978088	ShiftExpression	source_bit >> 3		4978053	1		>>			
ANR	4978089	Identifier	source_bit		4978053	0					
ANR	4978090	PrimaryExpression	3		4978053	1					
ANR	4978091	IdentifierDeclStatement	int dest_depth = dest -> depth ;	454:4:15910:15938	4978053	3	True				
ANR	4978092	IdentifierDecl	dest_depth = dest -> depth		4978053	0					
ANR	4978093	IdentifierDeclType	int		4978053	0					
ANR	4978094	Identifier	dest_depth		4978053	1					
ANR	4978095	AssignmentExpression	dest_depth = dest -> depth		4978053	2		=			
ANR	4978096	Identifier	dest_depth		4978053	0					
ANR	4978097	PtrMemberAccess	dest -> depth		4978053	1					
ANR	4978098	Identifier	dest		4978053	0					
ANR	4978099	Identifier	depth		4978053	1					
ANR	4978100	IdentifierDeclStatement	uint plane_mask = ( 1 << dest_depth ) - 1 ;	455:4:15944:15983	4978053	4	True				
ANR	4978101	IdentifierDecl	plane_mask = ( 1 << dest_depth ) - 1		4978053	0					
ANR	4978102	IdentifierDeclType	uint		4978053	0					
ANR	4978103	Identifier	plane_mask		4978053	1					
ANR	4978104	AssignmentExpression	plane_mask = ( 1 << dest_depth ) - 1		4978053	2		=			
ANR	4978105	Identifier	plane_mask		4978053	0					
ANR	4978106	AdditiveExpression	( 1 << dest_depth ) - 1		4978053	1		-			
ANR	4978107	ShiftExpression	1 << dest_depth		4978053	0		<<			
ANR	4978108	PrimaryExpression	1		4978053	0					
ANR	4978109	Identifier	dest_depth		4978053	1					
ANR	4978110	PrimaryExpression	1		4978053	1					
ANR	4978111	IdentifierDeclStatement	int dest_bit = dest -> x * dest_depth ;	456:4:15989:16024	4978053	5	True				
ANR	4978112	IdentifierDecl	dest_bit = dest -> x * dest_depth		4978053	0					
ANR	4978113	IdentifierDeclType	int		4978053	0					
ANR	4978114	Identifier	dest_bit		4978053	1					
ANR	4978115	AssignmentExpression	dest_bit = dest -> x * dest_depth		4978053	2		=			
ANR	4978116	Identifier	dest_bit		4978053	0					
ANR	4978117	MultiplicativeExpression	dest -> x * dest_depth		4978053	1		*			
ANR	4978118	PtrMemberAccess	dest -> x		4978053	0					
ANR	4978119	Identifier	dest		4978053	0					
ANR	4978120	Identifier	x		4978053	1					
ANR	4978121	Identifier	dest_depth		4978053	1					
ANR	4978122	IdentifierDeclStatement	byte * dest_row = dest -> data . write + ( dest_bit >> 3 ) ;	457:4:16030:16081	4978053	6	True				
ANR	4978123	IdentifierDecl	* dest_row = dest -> data . write + ( dest_bit >> 3 )		4978053	0					
ANR	4978124	IdentifierDeclType	byte *		4978053	0					
ANR	4978125	Identifier	dest_row		4978053	1					
ANR	4978126	AssignmentExpression	* dest_row = dest -> data . write + ( dest_bit >> 3 )		4978053	2		=			
ANR	4978127	Identifier	dest_row		4978053	0					
ANR	4978128	AdditiveExpression	dest -> data . write + ( dest_bit >> 3 )		4978053	1		+			
ANR	4978129	MemberAccess	dest -> data . write		4978053	0					
ANR	4978130	PtrMemberAccess	dest -> data		4978053	0					
ANR	4978131	Identifier	dest		4978053	0					
ANR	4978132	Identifier	data		4978053	1					
ANR	4978133	Identifier	write		4978053	1					
ANR	4978134	ShiftExpression	dest_bit >> 3		4978053	1		>>			
ANR	4978135	Identifier	dest_bit		4978053	0					
ANR	4978136	PrimaryExpression	3		4978053	1					
ANR	4978137	ClassDefStatement	"enum { EXTRACT_SLOW = 0 , EXTRACT_4_TO_1 , EXTRACT_32_TO_8 } loop_case = EXTRACT_SLOW ;"	458:4:16087:16198	4978053	7	True				
ANR	4978138	IdentifierDecl	loop_case = EXTRACT_SLOW		4978053	0					
ANR	4978139	IdentifierDeclType			4978053	0					
ANR	4978140	Identifier	loop_case		4978053	1					
ANR	4978141	AssignmentExpression	loop_case = EXTRACT_SLOW		4978053	2		=			
ANR	4978142	Identifier	EXTRACT_SLOW		4978053	0					
ANR	4978143	Identifier	EXTRACT_SLOW		4978053	1					
ANR	4978144	IdentifierDeclStatement	int y ;	463:4:16204:16209	4978053	8	True				
ANR	4978145	IdentifierDecl	y		4978053	0					
ANR	4978146	IdentifierDeclType	int		4978053	0					
ANR	4978147	Identifier	y		4978053	1					
ANR	4978148	ExpressionStatement	source_bit &= 7	465:4:16216:16231	4978053	9	True				
ANR	4978149	AssignmentExpression	source_bit &= 7		4978053	0		&=			
ANR	4978150	Identifier	source_bit		4978053	0					
ANR	4978151	PrimaryExpression	7		4978053	1					
ANR	4978152	ExpressionStatement	dest_bit &= 7	466:4:16237:16250	4978053	10	True				
ANR	4978153	AssignmentExpression	dest_bit &= 7		4978053	0		&=			
ANR	4978154	Identifier	dest_bit		4978053	0					
ANR	4978155	PrimaryExpression	7		4978053	1					
ANR	4978156	IfStatement	if ( ! ( source_bit | dest_bit ) )		4978053	11					
ANR	4978157	Condition	! ( source_bit | dest_bit )	468:8:16301:16324	4978053	0	True				
ANR	4978158	UnaryOperationExpression	! ( source_bit | dest_bit )		4978053	0					
ANR	4978159	UnaryOperator	!		4978053	0					
ANR	4978160	InclusiveOrExpression	source_bit | dest_bit		4978053	1		|			
ANR	4978161	Identifier	source_bit		4978053	0					
ANR	4978162	Identifier	dest_bit		4978053	1					
ANR	4978163	CompoundStatement		19:34:575:575	4978053	1					
ANR	4978164	SwitchStatement	switch ( source_depth )		4978053	0					
ANR	4978165	Condition	source_depth	469:16:16345:16356	4978053	0	True				
ANR	4978166	Identifier	source_depth		4978053	0					
ANR	4978167	CompoundStatement		20:30:607:607	4978053	1					
ANR	4978168	Label	case 4 :	470:8:16369:16375	4978053	0	True				
ANR	4978169	ExpressionStatement	loop_case = ( dest_depth == 1 && ! ( source -> raster & 3 ) && ! ( source -> x & 1 ) ? EXTRACT_4_TO_1 : EXTRACT_SLOW )	471:12:16389:16545	4978053	1	True				
ANR	4978170	AssignmentExpression	loop_case = ( dest_depth == 1 && ! ( source -> raster & 3 ) && ! ( source -> x & 1 ) ? EXTRACT_4_TO_1 : EXTRACT_SLOW )		4978053	0		=			
ANR	4978171	Identifier	loop_case		4978053	0					
ANR	4978172	ConditionalExpression	dest_depth == 1 && ! ( source -> raster & 3 ) && ! ( source -> x & 1 ) ? EXTRACT_4_TO_1 : EXTRACT_SLOW		4978053	1					
ANR	4978173	Condition	dest_depth == 1 && ! ( source -> raster & 3 ) && ! ( source -> x & 1 )		4978053	0					
ANR	4978174	AndExpression	dest_depth == 1 && ! ( source -> raster & 3 ) && ! ( source -> x & 1 )		4978053	0		&&			
ANR	4978175	EqualityExpression	dest_depth == 1		4978053	0		==			
ANR	4978176	Identifier	dest_depth		4978053	0					
ANR	4978177	PrimaryExpression	1		4978053	1					
ANR	4978178	AndExpression	! ( source -> raster & 3 ) && ! ( source -> x & 1 )		4978053	1		&&			
ANR	4978179	UnaryOperationExpression	! ( source -> raster & 3 )		4978053	0					
ANR	4978180	UnaryOperator	!		4978053	0					
ANR	4978181	BitAndExpression	source -> raster & 3		4978053	1		&			
ANR	4978182	PtrMemberAccess	source -> raster		4978053	0					
ANR	4978183	Identifier	source		4978053	0					
ANR	4978184	Identifier	raster		4978053	1					
ANR	4978185	PrimaryExpression	3		4978053	1					
ANR	4978186	UnaryOperationExpression	! ( source -> x & 1 )		4978053	1					
ANR	4978187	UnaryOperator	!		4978053	0					
ANR	4978188	BitAndExpression	source -> x & 1		4978053	1		&			
ANR	4978189	PtrMemberAccess	source -> x		4978053	0					
ANR	4978190	Identifier	source		4978053	0					
ANR	4978191	Identifier	x		4978053	1					
ANR	4978192	PrimaryExpression	1		4978053	1					
ANR	4978193	Identifier	EXTRACT_4_TO_1		4978053	1					
ANR	4978194	Identifier	EXTRACT_SLOW		4978053	2					
ANR	4978195	BreakStatement	break ;	475:12:16559:16564	4978053	2	True				
ANR	4978196	Label	case 32 :	476:8:16574:16581	4978053	3	True				
ANR	4978197	IfStatement	if ( dest_depth == 8 && ! ( shift & 7 ) )		4978053	4					
ANR	4978198	Condition	dest_depth == 8 && ! ( shift & 7 )	477:16:16599:16629	4978053	0	True				
ANR	4978199	AndExpression	dest_depth == 8 && ! ( shift & 7 )		4978053	0		&&			
ANR	4978200	EqualityExpression	dest_depth == 8		4978053	0		==			
ANR	4978201	Identifier	dest_depth		4978053	0					
ANR	4978202	PrimaryExpression	8		4978053	1					
ANR	4978203	UnaryOperationExpression	! ( shift & 7 )		4978053	1					
ANR	4978204	UnaryOperator	!		4978053	0					
ANR	4978205	BitAndExpression	shift & 7		4978053	1		&			
ANR	4978206	Identifier	shift		4978053	0					
ANR	4978207	PrimaryExpression	7		4978053	1					
ANR	4978208	CompoundStatement		28:49:880:880	4978053	1					
ANR	4978209	ExpressionStatement	loop_case = EXTRACT_32_TO_8	478:16:16650:16677	4978053	0	True				
ANR	4978210	AssignmentExpression	loop_case = EXTRACT_32_TO_8		4978053	0		=			
ANR	4978211	Identifier	loop_case		4978053	0					
ANR	4978212	Identifier	EXTRACT_32_TO_8		4978053	1					
ANR	4978213	ExpressionStatement	source_row += 3 - ( shift >> 3 )	479:16:16695:16725	4978053	1	True				
ANR	4978214	AssignmentExpression	source_row += 3 - ( shift >> 3 )		4978053	0		+=			
ANR	4978215	Identifier	source_row		4978053	0					
ANR	4978216	AdditiveExpression	3 - ( shift >> 3 )		4978053	1		-			
ANR	4978217	PrimaryExpression	3		4978053	0					
ANR	4978218	ShiftExpression	shift >> 3		4978053	1		>>			
ANR	4978219	Identifier	shift		4978053	0					
ANR	4978220	PrimaryExpression	3		4978053	1					
ANR	4978221	BreakStatement	break ;	481:12:16753:16758	4978053	5	True				
ANR	4978222	ForStatement	"for ( y = 0 ; y < height ; ++ y , source_row += source -> raster , dest_row += dest -> raster )"		4978053	12					
ANR	4978223	ForInit	y = 0 ;	484:9:16785:16790	4978053	0	True				
ANR	4978224	AssignmentExpression	y = 0		4978053	0		=			
ANR	4978225	Identifier	y		4978053	0					
ANR	4978226	PrimaryExpression	0		4978053	1					
ANR	4978227	Condition	y < height	484:16:16792:16801	4978053	1	True				
ANR	4978228	RelationalExpression	y < height		4978053	0		<			
ANR	4978229	Identifier	y		4978053	0					
ANR	4978230	Identifier	height		4978053	1					
ANR	4978231	Expression	"++ y , source_row += source -> raster , dest_row += dest -> raster"	485:9:16813:16871	4978053	2	True				
ANR	4978232	UnaryExpression	++ y		4978053	0					
ANR	4978233	IncDec	++		4978053	0					
ANR	4978234	Identifier	y		4978053	1					
ANR	4978235	Expression	"source_row += source -> raster , dest_row += dest -> raster"		4978053	1					
ANR	4978236	AssignmentExpression	source_row += source -> raster		4978053	0		+=			
ANR	4978237	Identifier	source_row		4978053	0					
ANR	4978238	PtrMemberAccess	source -> raster		4978053	1					
ANR	4978239	Identifier	source		4978053	0					
ANR	4978240	Identifier	raster		4978053	1					
ANR	4978241	AssignmentExpression	dest_row += dest -> raster		4978053	1		+=			
ANR	4978242	Identifier	dest_row		4978053	0					
ANR	4978243	PtrMemberAccess	dest -> raster		4978053	1					
ANR	4978244	Identifier	dest		4978053	0					
ANR	4978245	Identifier	raster		4978053	1					
ANR	4978246	CompoundStatement		38:8:1141:1146	4978053	3					
ANR	4978247	IdentifierDeclStatement	int x ;	487:8:16893:16898	4978053	0	True				
ANR	4978248	IdentifierDecl	x		4978053	0					
ANR	4978249	IdentifierDeclType	int		4978053	0					
ANR	4978250	Identifier	x		4978053	1					
ANR	4978251	SwitchStatement	switch ( loop_case )		4978053	1					
ANR	4978252	Condition	loop_case	489:16:16917:16925	4978053	0	True				
ANR	4978253	Identifier	loop_case		4978053	0					
ANR	4978254	CompoundStatement		40:27:1176:1176	4978053	1					
ANR	4978255	Label	case EXTRACT_4_TO_1 :	490:8:16938:16957	4978053	0	True				
ANR	4978256	Identifier	EXTRACT_4_TO_1		4978053	0					
ANR	4978257	CompoundStatement		43:12:1263:1283	4978053	1					
ANR	4978258	IdentifierDeclStatement	const byte * src = source_row ;	491:12:16973:17001	4978053	0	True				
ANR	4978259	IdentifierDecl	* src = source_row		4978053	0					
ANR	4978260	IdentifierDeclType	const byte *		4978053	0					
ANR	4978261	Identifier	src		4978053	1					
ANR	4978262	AssignmentExpression	* src = source_row		4978053	2		=			
ANR	4978263	Identifier	source_row		4978053	0					
ANR	4978264	Identifier	source_row		4978053	1					
ANR	4978265	IdentifierDeclStatement	byte * dst = dest_row ;	492:12:17015:17035	4978053	1	True				
ANR	4978266	IdentifierDecl	* dst = dest_row		4978053	0					
ANR	4978267	IdentifierDeclType	byte *		4978053	0					
ANR	4978268	Identifier	dst		4978053	1					
ANR	4978269	AssignmentExpression	* dst = dest_row		4978053	2		=			
ANR	4978270	Identifier	dest_row		4978053	0					
ANR	4978271	Identifier	dest_row		4978053	1					
ANR	4978272	ForStatement	"for ( x = width ; x >= 8 ; src += 4 , x -= 8 )"		4978053	2					
ANR	4978273	ForInit	x = width ;	495:17:17096:17105	4978053	0	True				
ANR	4978274	AssignmentExpression	x = width		4978053	0		=			
ANR	4978275	Identifier	x		4978053	0					
ANR	4978276	Identifier	width		4978053	1					
ANR	4978277	Condition	x >= 8	495:28:17107:17112	4978053	1	True				
ANR	4978278	RelationalExpression	x >= 8		4978053	0		>=			
ANR	4978279	Identifier	x		4978053	0					
ANR	4978280	PrimaryExpression	8		4978053	1					
ANR	4978281	Expression	"src += 4 , x -= 8"	495:36:17115:17130	4978053	2	True				
ANR	4978282	AssignmentExpression	src += 4		4978053	0		+=			
ANR	4978283	Identifier	src		4978053	0					
ANR	4978284	PrimaryExpression	4		4978053	1					
ANR	4978285	AssignmentExpression	x -= 8		4978053	1		-=			
ANR	4978286	Identifier	x		4978053	0					
ANR	4978287	PrimaryExpression	8		4978053	1					
ANR	4978288	CompoundStatement		47:16:1399:1478	4978053	3					
ANR	4978289	IdentifierDeclStatement	bits32 sword = ( * ( const bits32 * ) src >> shift ) & 0x11111111 ;	496:16:17151:17230	4978053	0	True				
ANR	4978290	IdentifierDecl	sword = ( * ( const bits32 * ) src >> shift ) & 0x11111111		4978053	0					
ANR	4978291	IdentifierDeclType	bits32		4978053	0					
ANR	4978292	Identifier	sword		4978053	1					
ANR	4978293	AssignmentExpression	sword = ( * ( const bits32 * ) src >> shift ) & 0x11111111		4978053	2		=			
ANR	4978294	Identifier	sword		4978053	0					
ANR	4978295	BitAndExpression	( * ( const bits32 * ) src >> shift ) & 0x11111111		4978053	1		&			
ANR	4978296	ShiftExpression	* ( const bits32 * ) src >> shift		4978053	0		>>			
ANR	4978297	UnaryOperationExpression	* ( const bits32 * ) src		4978053	0					
ANR	4978298	UnaryOperator	*		4978053	0					
ANR	4978299	CastExpression	( const bits32 * ) src		4978053	1					
ANR	4978300	CastTarget	const bits32 *		4978053	0					
ANR	4978301	Identifier	src		4978053	1					
ANR	4978302	Identifier	shift		4978053	1					
ANR	4978303	PrimaryExpression	0x11111111		4978053	1					
ANR	4978304	Statement	*	499:16:17249:17249	4978053	1	True				
ANR	4978305	Statement	dst	499:17:17250:17252	4978053	2	True				
ANR	4978306	Statement	++	499:20:17253:17254	4978053	3	True				
ANR	4978307	Statement	=	499:23:17256:17256	4978053	4	True				
ANR	4978308	Statement	byte_acegbdfh_to_abcdefgh	500:20:17278:17302	4978053	5	True				
ANR	4978309	Statement	[	500:45:17303:17303	4978053	6	True				
ANR	4978310	Statement	(	500:46:17304:17304	4978053	7	True				
ANR	4978311	Statement	(	502:20:17349:17349	4978053	8	True				
ANR	4978312	Statement	sword	502:21:17350:17354	4978053	9	True				
ANR	4978313	Statement	>>	502:27:17356:17357	4978053	10	True				
ANR	4978314	Statement	21	502:30:17359:17360	4978053	11	True				
ANR	4978315	Statement	)	502:32:17361:17361	4978053	12	True				
ANR	4978316	Statement	|	502:34:17363:17363	4978053	13	True				
ANR	4978317	Statement	(	502:36:17365:17365	4978053	14	True				
ANR	4978318	Statement	sword	502:37:17366:17370	4978053	15	True				
ANR	4978319	Statement	>>	502:43:17372:17373	4978053	16	True				
ANR	4978320	Statement	14	502:46:17375:17376	4978053	17	True				
ANR	4978321	Statement	)	502:48:17377:17377	4978053	18	True				
ANR	4978322	Statement	|	502:50:17379:17379	4978053	19	True				
ANR	4978323	Statement	(	502:52:17381:17381	4978053	20	True				
ANR	4978324	Statement	sword	502:53:17382:17386	4978053	21	True				
ANR	4978325	Statement	>>	502:59:17388:17389	4978053	22	True				
ANR	4978326	Statement	7	502:62:17391:17391	4978053	23	True				
ANR	4978327	Statement	)	502:63:17392:17392	4978053	24	True				
ANR	4978328	Statement	|	502:65:17394:17394	4978053	25	True				
ANR	4978329	Statement	sword	502:67:17396:17400	4978053	26	True				
ANR	4978330	Statement	)	506:40:17535:17535	4978053	27	True				
ANR	4978331	Statement	&	506:42:17537:17537	4978053	28	True				
ANR	4978332	Statement	0xff	506:44:17539:17542	4978053	29	True				
ANR	4978333	Statement	]	506:48:17543:17543	4978053	30	True				
ANR	4978334	ExpressionStatement		506:49:17544:17544	4978053	31	True				
ANR	4978335	IfStatement	if ( x )		4978053	3					
ANR	4978336	Condition	x	508:16:17576:17576	4978053	0	True				
ANR	4978337	Identifier	x		4978053	0					
ANR	4978338	CompoundStatement		61:16:1892:1931	4978053	1					
ANR	4978339	IdentifierDeclStatement	"uint test = 0x10 << shift , store = 0x80 ;"	510:16:17644:17683	4978053	0	True				
ANR	4978340	IdentifierDecl	test = 0x10 << shift		4978053	0					
ANR	4978341	IdentifierDeclType	uint		4978053	0					
ANR	4978342	Identifier	test		4978053	1					
ANR	4978343	AssignmentExpression	test = 0x10 << shift		4978053	2		=			
ANR	4978344	Identifier	test		4978053	0					
ANR	4978345	ShiftExpression	0x10 << shift		4978053	1		<<			
ANR	4978346	PrimaryExpression	0x10		4978053	0					
ANR	4978347	Identifier	shift		4978053	1					
ANR	4978348	IdentifierDecl	store = 0x80		4978053	1					
ANR	4978349	IdentifierDeclType	uint		4978053	0					
ANR	4978350	Identifier	store		4978053	1					
ANR	4978351	AssignmentExpression	store = 0x80		4978053	2		=			
ANR	4978352	Identifier	store		4978053	0					
ANR	4978353	PrimaryExpression	0x80		4978053	1					
ANR	4978354	DoStatement	do		4978053	1					
ANR	4978355	CompoundStatement		63:19:1953:1953	4978053	0					
ANR	4978356	ExpressionStatement	* dst = ( * src & test ? * dst | store : * dst & ~store )	513:20:17727:17778	4978053	0	True				
ANR	4978357	AssignmentExpression	* dst = ( * src & test ? * dst | store : * dst & ~store )		4978053	0		=			
ANR	4978358	UnaryOperationExpression	* dst		4978053	0					
ANR	4978359	UnaryOperator	*		4978053	0					
ANR	4978360	Identifier	dst		4978053	1					
ANR	4978361	ConditionalExpression	* src & test ? * dst | store : * dst & ~store		4978053	1					
ANR	4978362	Condition	* src & test		4978053	0					
ANR	4978363	BitAndExpression	* src & test		4978053	0		&			
ANR	4978364	UnaryOperationExpression	* src		4978053	0					
ANR	4978365	UnaryOperator	*		4978053	0					
ANR	4978366	Identifier	src		4978053	1					
ANR	4978367	Identifier	test		4978053	1					
ANR	4978368	InclusiveOrExpression	* dst | store		4978053	1		|			
ANR	4978369	UnaryOperationExpression	* dst		4978053	0					
ANR	4978370	UnaryOperator	*		4978053	0					
ANR	4978371	Identifier	dst		4978053	1					
ANR	4978372	Identifier	store		4978053	1					
ANR	4978373	BitAndExpression	* dst & ~store		4978053	2		&			
ANR	4978374	UnaryOperationExpression	* dst		4978053	0					
ANR	4978375	UnaryOperator	*		4978053	0					
ANR	4978376	Identifier	dst		4978053	1					
ANR	4978377	Identifier	~store		4978053	1					
ANR	4978378	IfStatement	if ( test >= 0x10 )		4978053	1					
ANR	4978379	Condition	test >= 0x10	514:24:17804:17815	4978053	0	True				
ANR	4978380	RelationalExpression	test >= 0x10		4978053	0		>=			
ANR	4978381	Identifier	test		4978053	0					
ANR	4978382	PrimaryExpression	0x10		4978053	1					
ANR	4978383	ExpressionStatement	test >>= 4	515:24:17842:17852	4978053	1	True				
ANR	4978384	AssignmentExpression	test >>= 4		4978053	0		>>=			
ANR	4978385	Identifier	test		4978053	0					
ANR	4978386	PrimaryExpression	4		4978053	1					
ANR	4978387	ElseStatement	else		4978053	0					
ANR	4978388	ExpressionStatement	"test <<= 4 , ++ src"	517:24:17903:17920	4978053	0	True				
ANR	4978389	Expression	"test <<= 4 , ++ src"		4978053	0					
ANR	4978390	AssignmentExpression	test <<= 4		4978053	0		<<=			
ANR	4978391	Identifier	test		4978053	0					
ANR	4978392	PrimaryExpression	4		4978053	1					
ANR	4978393	UnaryExpression	++ src		4978053	1					
ANR	4978394	IncDec	++		4978053	0					
ANR	4978395	Identifier	src		4978053	1					
ANR	4978396	ExpressionStatement	store >>= 1	518:20:17942:17953	4978053	2	True				
ANR	4978397	AssignmentExpression	store >>= 1		4978053	0		>>=			
ANR	4978398	Identifier	store		4978053	0					
ANR	4978399	PrimaryExpression	1		4978053	1					
ANR	4978400	Condition	-- x > 0	519:25:17980:17986	4978053	1	True				
ANR	4978401	RelationalExpression	-- x > 0		4978053	0		>			
ANR	4978402	UnaryExpression	-- x		4978053	0					
ANR	4978403	IncDec	--		4978053	0					
ANR	4978404	Identifier	x		4978053	1					
ANR	4978405	PrimaryExpression	0		4978053	1					
ANR	4978406	BreakStatement	break ;	521:12:18016:18021	4978053	4	True				
ANR	4978407	Label	case EXTRACT_32_TO_8 :	523:8:18041:18061	4978053	2	True				
ANR	4978408	Identifier	EXTRACT_32_TO_8		4978053	0					
ANR	4978409	CompoundStatement		76:12:2367:2387	4978053	3					
ANR	4978410	IdentifierDeclStatement	const byte * src = source_row ;	524:12:18077:18105	4978053	0	True				
ANR	4978411	IdentifierDecl	* src = source_row		4978053	0					
ANR	4978412	IdentifierDeclType	const byte *		4978053	0					
ANR	4978413	Identifier	src		4978053	1					
ANR	4978414	AssignmentExpression	* src = source_row		4978053	2		=			
ANR	4978415	Identifier	source_row		4978053	0					
ANR	4978416	Identifier	source_row		4978053	1					
ANR	4978417	IdentifierDeclStatement	byte * dst = dest_row ;	525:12:18119:18139	4978053	1	True				
ANR	4978418	IdentifierDecl	* dst = dest_row		4978053	0					
ANR	4978419	IdentifierDeclType	byte *		4978053	0					
ANR	4978420	Identifier	dst		4978053	1					
ANR	4978421	AssignmentExpression	* dst = dest_row		4978053	2		=			
ANR	4978422	Identifier	dest_row		4978053	0					
ANR	4978423	Identifier	dest_row		4978053	1					
ANR	4978424	ForStatement	"for ( x = width ; x > 0 ; src += 4 , -- x )"		4978053	2					
ANR	4978425	ForInit	x = width ;	527:17:18159:18168	4978053	0	True				
ANR	4978426	AssignmentExpression	x = width		4978053	0		=			
ANR	4978427	Identifier	x		4978053	0					
ANR	4978428	Identifier	width		4978053	1					
ANR	4978429	Condition	x > 0	527:28:18170:18174	4978053	1	True				
ANR	4978430	RelationalExpression	x > 0		4978053	0		>			
ANR	4978431	Identifier	x		4978053	0					
ANR	4978432	PrimaryExpression	0		4978053	1					
ANR	4978433	Expression	"src += 4 , -- x"	527:35:18177:18189	4978053	2	True				
ANR	4978434	AssignmentExpression	src += 4		4978053	0		+=			
ANR	4978435	Identifier	src		4978053	0					
ANR	4978436	PrimaryExpression	4		4978053	1					
ANR	4978437	UnaryExpression	-- x		4978053	1					
ANR	4978438	IncDec	--		4978053	0					
ANR	4978439	Identifier	x		4978053	1					
ANR	4978440	ExpressionStatement	* dst ++ = * src	528:16:18208:18221	4978053	3	True				
ANR	4978441	AssignmentExpression	* dst ++ = * src		4978053	0		=			
ANR	4978442	UnaryOperationExpression	* dst ++		4978053	0					
ANR	4978443	UnaryOperator	*		4978053	0					
ANR	4978444	PostIncDecOperationExpression	dst ++		4978053	1					
ANR	4978445	Identifier	dst		4978053	0					
ANR	4978446	IncDec	++		4978053	1					
ANR	4978447	UnaryOperationExpression	* src		4978053	1					
ANR	4978448	UnaryOperator	*		4978053	0					
ANR	4978449	Identifier	src		4978053	1					
ANR	4978450	BreakStatement	break ;	529:12:18235:18240	4978053	3	True				
ANR	4978451	Label	default :	531:8:18260:18267	4978053	4	True				
ANR	4978452	Identifier	default		4978053	0					
ANR	4978453	CompoundStatement		87:12:2677:2736	4978053	5					
ANR	4978454	IdentifierDeclStatement	const byte * sptr = source_row ;	532:12:18283:18312	4978053	0	True				
ANR	4978455	IdentifierDecl	* sptr = source_row		4978053	0					
ANR	4978456	IdentifierDeclType	const byte *		4978053	0					
ANR	4978457	Identifier	sptr		4978053	1					
ANR	4978458	AssignmentExpression	* sptr = source_row		4978053	2		=			
ANR	4978459	Identifier	source_row		4978053	0					
ANR	4978460	Identifier	source_row		4978053	1					
ANR	4978461	IdentifierDeclStatement	int sbit = source_bit ;	533:12:18326:18347	4978053	1	True				
ANR	4978462	IdentifierDecl	sbit = source_bit		4978053	0					
ANR	4978463	IdentifierDeclType	int		4978053	0					
ANR	4978464	Identifier	sbit		4978053	1					
ANR	4978465	AssignmentExpression	sbit = source_bit		4978053	2		=			
ANR	4978466	Identifier	source_bit		4978053	0					
ANR	4978467	Identifier	source_bit		4978053	1					
ANR	4978468	IdentifierDeclStatement	byte * dptr = dest_row ;	534:12:18361:18382	4978053	2	True				
ANR	4978469	IdentifierDecl	* dptr = dest_row		4978053	0					
ANR	4978470	IdentifierDeclType	byte *		4978053	0					
ANR	4978471	Identifier	dptr		4978053	1					
ANR	4978472	AssignmentExpression	* dptr = dest_row		4978053	2		=			
ANR	4978473	Identifier	dest_row		4978053	0					
ANR	4978474	Identifier	dest_row		4978053	1					
ANR	4978475	IdentifierDeclStatement	int dbit = dest_bit ;	535:12:18396:18415	4978053	3	True				
ANR	4978476	IdentifierDecl	dbit = dest_bit		4978053	0					
ANR	4978477	IdentifierDeclType	int		4978053	0					
ANR	4978478	Identifier	dbit		4978053	1					
ANR	4978479	AssignmentExpression	dbit = dest_bit		4978053	2		=			
ANR	4978480	Identifier	dest_bit		4978053	0					
ANR	4978481	Identifier	dest_bit		4978053	1					
ANR	4978482	IdentifierDeclStatement	byte dbbyte = ( dbit ? ( byte ) ( * dptr & ( 0xff00 >> dbit ) ) : 0 ) ;	536:12:18429:18488	4978053	4	True				
ANR	4978483	IdentifierDecl	dbbyte = ( dbit ? ( byte ) ( * dptr & ( 0xff00 >> dbit ) ) : 0 )		4978053	0					
ANR	4978484	IdentifierDeclType	byte		4978053	0					
ANR	4978485	Identifier	dbbyte		4978053	1					
ANR	4978486	AssignmentExpression	dbbyte = ( dbit ? ( byte ) ( * dptr & ( 0xff00 >> dbit ) ) : 0 )		4978053	2		=			
ANR	4978487	Identifier	dbbyte		4978053	0					
ANR	4978488	ConditionalExpression	dbit ? ( byte ) ( * dptr & ( 0xff00 >> dbit ) ) : 0		4978053	1					
ANR	4978489	Condition	dbit		4978053	0					
ANR	4978490	Identifier	dbit		4978053	0					
ANR	4978491	CastExpression	( byte ) ( * dptr & ( 0xff00 >> dbit ) )		4978053	1					
ANR	4978492	CastTarget	byte		4978053	0					
ANR	4978493	BitAndExpression	* dptr & ( 0xff00 >> dbit )		4978053	1		&			
ANR	4978494	UnaryOperationExpression	* dptr		4978053	0					
ANR	4978495	UnaryOperator	*		4978053	0					
ANR	4978496	Identifier	dptr		4978053	1					
ANR	4978497	ShiftExpression	0xff00 >> dbit		4978053	1		>>			
ANR	4978498	PrimaryExpression	0xff00		4978053	0					
ANR	4978499	Identifier	dbit		4978053	1					
ANR	4978500	PrimaryExpression	0		4978053	2					
ANR	4978501	ExpressionStatement	dbbyte = ( dbit ? ( byte ) ( * dptr & ( 0xff00 >> dbit ) ) : 0 )	538:12:18503:18557	4978053	5	True				
ANR	4978502	AssignmentExpression	dbbyte = ( dbit ? ( byte ) ( * dptr & ( 0xff00 >> dbit ) ) : 0 )		4978053	0		=			
ANR	4978503	Identifier	dbbyte		4978053	0					
ANR	4978504	ConditionalExpression	dbit ? ( byte ) ( * dptr & ( 0xff00 >> dbit ) ) : 0		4978053	1					
ANR	4978505	Condition	dbit		4978053	0					
ANR	4978506	Identifier	dbit		4978053	0					
ANR	4978507	CastExpression	( byte ) ( * dptr & ( 0xff00 >> dbit ) )		4978053	1					
ANR	4978508	CastTarget	byte		4978053	0					
ANR	4978509	BitAndExpression	* dptr & ( 0xff00 >> dbit )		4978053	1		&			
ANR	4978510	UnaryOperationExpression	* dptr		4978053	0					
ANR	4978511	UnaryOperator	*		4978053	0					
ANR	4978512	Identifier	dptr		4978053	1					
ANR	4978513	ShiftExpression	0xff00 >> dbit		4978053	1		>>			
ANR	4978514	PrimaryExpression	0xff00		4978053	0					
ANR	4978515	Identifier	dbit		4978053	1					
ANR	4978516	PrimaryExpression	0		4978053	2					
ANR	4978517	ForStatement	for ( x = width ; x > 0 ; -- x )		4978053	6					
ANR	4978518	ForInit	x = width ;	539:17:18576:18585	4978053	0	True				
ANR	4978519	AssignmentExpression	x = width		4978053	0		=			
ANR	4978520	Identifier	x		4978053	0					
ANR	4978521	Identifier	width		4978053	1					
ANR	4978522	Condition	x > 0	539:28:18587:18591	4978053	1	True				
ANR	4978523	RelationalExpression	x > 0		4978053	0		>			
ANR	4978524	Identifier	x		4978053	0					
ANR	4978525	PrimaryExpression	0		4978053	1					
ANR	4978526	UnaryExpression	-- x	539:35:18594:18596	4978053	2	True				
ANR	4978527	IncDec	--		4978053	0					
ANR	4978528	Identifier	x		4978053	1					
ANR	4978529	CompoundStatement		92:16:2903:2913	4978053	3					
ANR	4978530	IdentifierDeclStatement	gx_color_index color ;	540:16:18617:18637	4978053	0	True				
ANR	4978531	IdentifierDecl	color		4978053	0					
ANR	4978532	IdentifierDeclType	gx_color_index		4978053	0					
ANR	4978533	Identifier	color		4978053	1					
ANR	4978534	IdentifierDeclStatement	uint pixel ;	541:16:18655:18665	4978053	1	True				
ANR	4978535	IdentifierDecl	pixel		4978053	0					
ANR	4978536	IdentifierDeclType	uint		4978053	0					
ANR	4978537	Identifier	pixel		4978053	1					
ANR	4978538	IfStatement	if ( sizeof ( color ) > 4 )		4978053	2					
ANR	4978539	Condition	sizeof ( color ) > 4	543:20:18688:18704	4978053	0	True				
ANR	4978540	RelationalExpression	sizeof ( color ) > 4		4978053	0		>			
ANR	4978541	SizeofExpression	sizeof ( color )		4978053	0					
ANR	4978542	Sizeof	sizeof		4978053	0					
ANR	4978543	SizeofOperand	color		4978053	1					
ANR	4978544	PrimaryExpression	4		4978053	1					
ANR	4978545	CompoundStatement		94:39:2955:2955	4978053	1					
ANR	4978546	IfStatement	"if ( sample_load_next64 ( ( uint64_t * ) & color , & sptr , & sbit , source_depth ) < 0 )"		4978053	0					
ANR	4978547	Condition	"sample_load_next64 ( ( uint64_t * ) & color , & sptr , & sbit , source_depth ) < 0"	544:24:18733:18802	4978053	0	True				
ANR	4978548	RelationalExpression	"sample_load_next64 ( ( uint64_t * ) & color , & sptr , & sbit , source_depth ) < 0"		4978053	0		<			
ANR	4978549	CallExpression	"sample_load_next64 ( ( uint64_t * ) & color , & sptr , & sbit , source_depth )"		4978053	0					
ANR	4978550	Callee	sample_load_next64		4978053	0					
ANR	4978551	Identifier	sample_load_next64		4978053	0					
ANR	4978552	ArgumentList	( uint64_t * ) & color		4978053	1					
ANR	4978553	Argument	( uint64_t * ) & color		4978053	0					
ANR	4978554	CastExpression	( uint64_t * ) & color		4978053	0					
ANR	4978555	CastTarget	uint64_t *		4978053	0					
ANR	4978556	UnaryOperationExpression	& color		4978053	1					
ANR	4978557	UnaryOperator	&		4978053	0					
ANR	4978558	Identifier	color		4978053	1					
ANR	4978559	Argument	& sptr		4978053	1					
ANR	4978560	UnaryOperationExpression	& sptr		4978053	0					
ANR	4978561	UnaryOperator	&		4978053	0					
ANR	4978562	Identifier	sptr		4978053	1					
ANR	4978563	Argument	& sbit		4978053	2					
ANR	4978564	UnaryOperationExpression	& sbit		4978053	0					
ANR	4978565	UnaryOperator	&		4978053	0					
ANR	4978566	Identifier	sbit		4978053	1					
ANR	4978567	Argument	source_depth		4978053	3					
ANR	4978568	Identifier	source_depth		4978053	0					
ANR	4978569	PrimaryExpression	0		4978053	1					
ANR	4978570	ExpressionStatement	return_error ( gs_error_rangecheck )	545:24:18829:18862	4978053	1	True				
ANR	4978571	CallExpression	return_error ( gs_error_rangecheck )		4978053	0					
ANR	4978572	Callee	return_error		4978053	0					
ANR	4978573	Identifier	return_error		4978053	0					
ANR	4978574	ArgumentList	gs_error_rangecheck		4978053	1					
ANR	4978575	Argument	gs_error_rangecheck		4978053	0					
ANR	4978576	Identifier	gs_error_rangecheck		4978053	0					
ANR	4978577	ElseStatement	else		4978053	0					
ANR	4978578	CompoundStatement		98:21:3151:3151	4978053	0					
ANR	4978579	IfStatement	"if ( sample_load_next32 ( ( uint32_t * ) & color , & sptr , & sbit , source_depth ) < 0 )"		4978053	0					
ANR	4978580	Condition	"sample_load_next32 ( ( uint32_t * ) & color , & sptr , & sbit , source_depth ) < 0"	548:24:18929:18998	4978053	0	True				
ANR	4978581	RelationalExpression	"sample_load_next32 ( ( uint32_t * ) & color , & sptr , & sbit , source_depth ) < 0"		4978053	0		<			
ANR	4978582	CallExpression	"sample_load_next32 ( ( uint32_t * ) & color , & sptr , & sbit , source_depth )"		4978053	0					
ANR	4978583	Callee	sample_load_next32		4978053	0					
ANR	4978584	Identifier	sample_load_next32		4978053	0					
ANR	4978585	ArgumentList	( uint32_t * ) & color		4978053	1					
ANR	4978586	Argument	( uint32_t * ) & color		4978053	0					
ANR	4978587	CastExpression	( uint32_t * ) & color		4978053	0					
ANR	4978588	CastTarget	uint32_t *		4978053	0					
ANR	4978589	UnaryOperationExpression	& color		4978053	1					
ANR	4978590	UnaryOperator	&		4978053	0					
ANR	4978591	Identifier	color		4978053	1					
ANR	4978592	Argument	& sptr		4978053	1					
ANR	4978593	UnaryOperationExpression	& sptr		4978053	0					
ANR	4978594	UnaryOperator	&		4978053	0					
ANR	4978595	Identifier	sptr		4978053	1					
ANR	4978596	Argument	& sbit		4978053	2					
ANR	4978597	UnaryOperationExpression	& sbit		4978053	0					
ANR	4978598	UnaryOperator	&		4978053	0					
ANR	4978599	Identifier	sbit		4978053	1					
ANR	4978600	Argument	source_depth		4978053	3					
ANR	4978601	Identifier	source_depth		4978053	0					
ANR	4978602	PrimaryExpression	0		4978053	1					
ANR	4978603	ExpressionStatement	return_error ( gs_error_rangecheck )	549:24:19025:19058	4978053	1	True				
ANR	4978604	CallExpression	return_error ( gs_error_rangecheck )		4978053	0					
ANR	4978605	Callee	return_error		4978053	0					
ANR	4978606	Identifier	return_error		4978053	0					
ANR	4978607	ArgumentList	gs_error_rangecheck		4978053	1					
ANR	4978608	Argument	gs_error_rangecheck		4978053	0					
ANR	4978609	Identifier	gs_error_rangecheck		4978053	0					
ANR	4978610	ExpressionStatement	pixel = ( color >> shift ) & plane_mask	551:16:19094:19131	4978053	3	True				
ANR	4978611	AssignmentExpression	pixel = ( color >> shift ) & plane_mask		4978053	0		=			
ANR	4978612	Identifier	pixel		4978053	0					
ANR	4978613	BitAndExpression	( color >> shift ) & plane_mask		4978053	1		&			
ANR	4978614	ShiftExpression	color >> shift		4978053	0		>>			
ANR	4978615	Identifier	color		4978053	0					
ANR	4978616	Identifier	shift		4978053	1					
ANR	4978617	Identifier	plane_mask		4978053	1					
ANR	4978618	IfStatement	"if ( sample_store_next8 ( pixel , & dptr , & dbit , dest_depth , & dbbyte ) < 0 )"		4978053	4					
ANR	4978619	Condition	"sample_store_next8 ( pixel , & dptr , & dbit , dest_depth , & dbbyte ) < 0"	552:20:19153:19216	4978053	0	True				
ANR	4978620	RelationalExpression	"sample_store_next8 ( pixel , & dptr , & dbit , dest_depth , & dbbyte ) < 0"		4978053	0		<			
ANR	4978621	CallExpression	"sample_store_next8 ( pixel , & dptr , & dbit , dest_depth , & dbbyte )"		4978053	0					
ANR	4978622	Callee	sample_store_next8		4978053	0					
ANR	4978623	Identifier	sample_store_next8		4978053	0					
ANR	4978624	ArgumentList	pixel		4978053	1					
ANR	4978625	Argument	pixel		4978053	0					
ANR	4978626	Identifier	pixel		4978053	0					
ANR	4978627	Argument	& dptr		4978053	1					
ANR	4978628	UnaryOperationExpression	& dptr		4978053	0					
ANR	4978629	UnaryOperator	&		4978053	0					
ANR	4978630	Identifier	dptr		4978053	1					
ANR	4978631	Argument	& dbit		4978053	2					
ANR	4978632	UnaryOperationExpression	& dbit		4978053	0					
ANR	4978633	UnaryOperator	&		4978053	0					
ANR	4978634	Identifier	dbit		4978053	1					
ANR	4978635	Argument	dest_depth		4978053	3					
ANR	4978636	Identifier	dest_depth		4978053	0					
ANR	4978637	Argument	& dbbyte		4978053	4					
ANR	4978638	UnaryOperationExpression	& dbbyte		4978053	0					
ANR	4978639	UnaryOperator	&		4978053	0					
ANR	4978640	Identifier	dbbyte		4978053	1					
ANR	4978641	PrimaryExpression	0		4978053	1					
ANR	4978642	ExpressionStatement	return_error ( gs_error_rangecheck )	553:20:19239:19272	4978053	1	True				
ANR	4978643	CallExpression	return_error ( gs_error_rangecheck )		4978053	0					
ANR	4978644	Callee	return_error		4978053	0					
ANR	4978645	Identifier	return_error		4978053	0					
ANR	4978646	ArgumentList	gs_error_rangecheck		4978053	1					
ANR	4978647	Argument	gs_error_rangecheck		4978053	0					
ANR	4978648	Identifier	gs_error_rangecheck		4978053	0					
ANR	4978649	ExpressionStatement	"sample_store_flush ( dptr , dbit , dbbyte )"	555:12:19300:19338	4978053	7	True				
ANR	4978650	CallExpression	"sample_store_flush ( dptr , dbit , dbbyte )"		4978053	0					
ANR	4978651	Callee	sample_store_flush		4978053	0					
ANR	4978652	Identifier	sample_store_flush		4978053	0					
ANR	4978653	ArgumentList	dptr		4978053	1					
ANR	4978654	Argument	dptr		4978053	0					
ANR	4978655	Identifier	dptr		4978053	0					
ANR	4978656	Argument	dbit		4978053	1					
ANR	4978657	Identifier	dbit		4978053	0					
ANR	4978658	Argument	dbbyte		4978053	2					
ANR	4978659	Identifier	dbbyte		4978053	0					
ANR	4978660	ReturnStatement	return 0 ;	559:4:19370:19378	4978053	13	True				
ANR	4978661	PrimaryExpression	0		4978053	0					
ANR	4978662	ReturnType	int		4978053	1					
ANR	4978663	Identifier	bits_extract_plane		4978053	2					
ANR	4978664	ParameterList	"const bits_plane_t * dest , const bits_plane_t * source , int shift , int width , int height"		4978053	3					
ANR	4978665	Parameter	const bits_plane_t * dest	448:19:15640:15663	4978053	0	True				
ANR	4978666	ParameterType	const bits_plane_t *		4978053	0					
ANR	4978667	Identifier	dest		4978053	1					
ANR	4978668	Parameter	const bits_plane_t * source	449:4:15680:15705	4978053	1	True				
ANR	4978669	ParameterType	const bits_plane_t *		4978053	0					
ANR	4978670	Identifier	source		4978053	1					
ANR	4978671	Parameter	int shift	449:41:15717:15725	4978053	2	True				
ANR	4978672	ParameterType	int		4978053	0					
ANR	4978673	Identifier	shift		4978053	1					
ANR	4978674	Parameter	int width	449:52:15728:15736	4978053	3	True				
ANR	4978675	ParameterType	int		4978053	0					
ANR	4978676	Identifier	width		4978053	1					
ANR	4978677	Parameter	int height	449:63:15739:15748	4978053	4	True				
ANR	4978678	ParameterType	int		4978053	0					
ANR	4978679	Identifier	height		4978053	1					
ANR	4978680	CFGEntryNode	ENTRY		4978053		True				
ANR	4978681	CFGExitNode	EXIT		4978053		True				
ANR	4978682	Symbol	& sptr		4978053						
ANR	4978683	Symbol	gs_error_rangecheck		4978053						
ANR	4978684	Symbol	& color		4978053						
ANR	4978685	Symbol	shift		4978053						
ANR	4978686	Symbol	dbit		4978053						
ANR	4978687	Symbol	sample_load_next64		4978053						
ANR	4978688	Symbol	source -> data		4978053						
ANR	4978689	Symbol	source		4978053						
ANR	4978690	Symbol	dest		4978053						
ANR	4978691	Symbol	* src		4978053						
ANR	4978692	Symbol	& dptr		4978053						
ANR	4978693	Symbol	sbit		4978053						
ANR	4978694	Symbol	* dst		4978053						
ANR	4978695	Symbol	dest_depth		4978053						
ANR	4978696	Symbol	dest -> raster		4978053						
ANR	4978697	Symbol	* source		4978053						
ANR	4978698	Symbol	height		4978053						
ANR	4978699	Symbol	test		4978053						
ANR	4978700	Symbol	& sbit		4978053						
ANR	4978701	Symbol	sample_load_next32		4978053						
ANR	4978702	Symbol	dptr		4978053						
ANR	4978703	Symbol	source_depth		4978053						
ANR	4978704	Symbol	& dbit		4978053						
ANR	4978705	Symbol	dest_row		4978053						
ANR	4978706	Symbol	dest -> depth		4978053						
ANR	4978707	Symbol	source_bit		4978053						
ANR	4978708	Symbol	& dbbyte		4978053						
ANR	4978709	Symbol	source -> depth		4978053						
ANR	4978710	Symbol	~store		4978053						
ANR	4978711	Symbol	sptr		4978053						
ANR	4978712	Symbol	dbbyte		4978053						
ANR	4978713	Symbol	EXTRACT_SLOW		4978053						
ANR	4978714	Symbol	* dst ++		4978053						
ANR	4978715	Symbol	loop_case		4978053						
ANR	4978716	Symbol	source -> data . read		4978053						
ANR	4978717	Symbol	dest -> data		4978053						
ANR	4978718	Symbol	dst		4978053						
ANR	4978719	Symbol	color		4978053						
ANR	4978720	Symbol	* dest		4978053						
ANR	4978721	Symbol	dest -> x		4978053						
ANR	4978722	Symbol	EXTRACT_32_TO_8		4978053						
ANR	4978723	Symbol	* dptr		4978053						
ANR	4978724	Symbol	pixel		4978053						
ANR	4978725	Symbol	sample_store_next8		4978053						
ANR	4978726	Symbol	src		4978053						
ANR	4978727	Symbol	dest_bit		4978053						
ANR	4978728	Symbol	plane_mask		4978053						
ANR	4978729	Symbol	EXTRACT_4_TO_1		4978053						
ANR	4978730	Symbol	store		4978053						
ANR	4978731	Symbol	* ( const bits32 * ) src		4978053						
ANR	4978732	Symbol	source -> raster		4978053						
ANR	4978733	Symbol	dest -> data . write		4978053						
ANR	4978734	Symbol	sword		4978053						
ANR	4978735	Symbol	source_row		4978053						
ANR	4978736	Symbol	source -> x		4978053						
ANR	4978737	Symbol	width		4978053						
ANR	4978738	Symbol	x		4978053						
ANR	4978739	Symbol	y		4978053						
ANR	4978740	Function	bits_expand_plane	563:0:19419:22296							
ANR	4978741	FunctionDef	"bits_expand_plane (const bits_plane_t * dest , const bits_plane_t * source , int shift , int width , int height)"		4978740	0					
ANR	4978742	CompoundStatement		566:0:19552:22296	4978740	0					
ANR	4978743	IdentifierDeclStatement	int source_depth = source -> depth ;	570:4:19643:19675	4978740	0	True				
ANR	4978744	IdentifierDecl	source_depth = source -> depth		4978740	0					
ANR	4978745	IdentifierDeclType	int		4978740	0					
ANR	4978746	Identifier	source_depth		4978740	1					
ANR	4978747	AssignmentExpression	source_depth = source -> depth		4978740	2		=			
ANR	4978748	Identifier	source_depth		4978740	0					
ANR	4978749	PtrMemberAccess	source -> depth		4978740	1					
ANR	4978750	Identifier	source		4978740	0					
ANR	4978751	Identifier	depth		4978740	1					
ANR	4978752	IdentifierDeclStatement	int source_bit = source -> x * source_depth ;	571:4:19681:19722	4978740	1	True				
ANR	4978753	IdentifierDecl	source_bit = source -> x * source_depth		4978740	0					
ANR	4978754	IdentifierDeclType	int		4978740	0					
ANR	4978755	Identifier	source_bit		4978740	1					
ANR	4978756	AssignmentExpression	source_bit = source -> x * source_depth		4978740	2		=			
ANR	4978757	Identifier	source_bit		4978740	0					
ANR	4978758	MultiplicativeExpression	source -> x * source_depth		4978740	1		*			
ANR	4978759	PtrMemberAccess	source -> x		4978740	0					
ANR	4978760	Identifier	source		4978740	0					
ANR	4978761	Identifier	x		4978740	1					
ANR	4978762	Identifier	source_depth		4978740	1					
ANR	4978763	IdentifierDeclStatement	const byte * source_row = source -> data . read + ( source_bit >> 3 ) ;	572:4:19728:19790	4978740	2	True				
ANR	4978764	IdentifierDecl	* source_row = source -> data . read + ( source_bit >> 3 )		4978740	0					
ANR	4978765	IdentifierDeclType	const byte *		4978740	0					
ANR	4978766	Identifier	source_row		4978740	1					
ANR	4978767	AssignmentExpression	* source_row = source -> data . read + ( source_bit >> 3 )		4978740	2		=			
ANR	4978768	Identifier	source_row		4978740	0					
ANR	4978769	AdditiveExpression	source -> data . read + ( source_bit >> 3 )		4978740	1		+			
ANR	4978770	MemberAccess	source -> data . read		4978740	0					
ANR	4978771	PtrMemberAccess	source -> data		4978740	0					
ANR	4978772	Identifier	source		4978740	0					
ANR	4978773	Identifier	data		4978740	1					
ANR	4978774	Identifier	read		4978740	1					
ANR	4978775	ShiftExpression	source_bit >> 3		4978740	1		>>			
ANR	4978776	Identifier	source_bit		4978740	0					
ANR	4978777	PrimaryExpression	3		4978740	1					
ANR	4978778	IdentifierDeclStatement	int dest_depth = dest -> depth ;	573:4:19796:19824	4978740	3	True				
ANR	4978779	IdentifierDecl	dest_depth = dest -> depth		4978740	0					
ANR	4978780	IdentifierDeclType	int		4978740	0					
ANR	4978781	Identifier	dest_depth		4978740	1					
ANR	4978782	AssignmentExpression	dest_depth = dest -> depth		4978740	2		=			
ANR	4978783	Identifier	dest_depth		4978740	0					
ANR	4978784	PtrMemberAccess	dest -> depth		4978740	1					
ANR	4978785	Identifier	dest		4978740	0					
ANR	4978786	Identifier	depth		4978740	1					
ANR	4978787	IdentifierDeclStatement	int dest_bit = dest -> x * dest_depth ;	574:4:19830:19865	4978740	4	True				
ANR	4978788	IdentifierDecl	dest_bit = dest -> x * dest_depth		4978740	0					
ANR	4978789	IdentifierDeclType	int		4978740	0					
ANR	4978790	Identifier	dest_bit		4978740	1					
ANR	4978791	AssignmentExpression	dest_bit = dest -> x * dest_depth		4978740	2		=			
ANR	4978792	Identifier	dest_bit		4978740	0					
ANR	4978793	MultiplicativeExpression	dest -> x * dest_depth		4978740	1		*			
ANR	4978794	PtrMemberAccess	dest -> x		4978740	0					
ANR	4978795	Identifier	dest		4978740	0					
ANR	4978796	Identifier	x		4978740	1					
ANR	4978797	Identifier	dest_depth		4978740	1					
ANR	4978798	IdentifierDeclStatement	byte * dest_row = dest -> data . write + ( dest_bit >> 3 ) ;	575:4:19871:19922	4978740	5	True				
ANR	4978799	IdentifierDecl	* dest_row = dest -> data . write + ( dest_bit >> 3 )		4978740	0					
ANR	4978800	IdentifierDeclType	byte *		4978740	0					
ANR	4978801	Identifier	dest_row		4978740	1					
ANR	4978802	AssignmentExpression	* dest_row = dest -> data . write + ( dest_bit >> 3 )		4978740	2		=			
ANR	4978803	Identifier	dest_row		4978740	0					
ANR	4978804	AdditiveExpression	dest -> data . write + ( dest_bit >> 3 )		4978740	1		+			
ANR	4978805	MemberAccess	dest -> data . write		4978740	0					
ANR	4978806	PtrMemberAccess	dest -> data		4978740	0					
ANR	4978807	Identifier	dest		4978740	0					
ANR	4978808	Identifier	data		4978740	1					
ANR	4978809	Identifier	write		4978740	1					
ANR	4978810	ShiftExpression	dest_bit >> 3		4978740	1		>>			
ANR	4978811	Identifier	dest_bit		4978740	0					
ANR	4978812	PrimaryExpression	3		4978740	1					
ANR	4978813	ClassDefStatement	"enum { EXPAND_SLOW = 0 , EXPAND_1_TO_4 , EXPAND_8_TO_32 } loop_case = EXPAND_SLOW ;"	576:4:19928:20035	4978740	6	True				
ANR	4978814	IdentifierDecl	loop_case = EXPAND_SLOW		4978740	0					
ANR	4978815	IdentifierDeclType			4978740	0					
ANR	4978816	Identifier	loop_case		4978740	1					
ANR	4978817	AssignmentExpression	loop_case = EXPAND_SLOW		4978740	2		=			
ANR	4978818	Identifier	EXPAND_SLOW		4978740	0					
ANR	4978819	Identifier	EXPAND_SLOW		4978740	1					
ANR	4978820	IdentifierDeclStatement	int y ;	581:4:20041:20046	4978740	7	True				
ANR	4978821	IdentifierDecl	y		4978740	0					
ANR	4978822	IdentifierDeclType	int		4978740	0					
ANR	4978823	Identifier	y		4978740	1					
ANR	4978824	ExpressionStatement	source_bit &= 7	583:4:20053:20068	4978740	8	True				
ANR	4978825	AssignmentExpression	source_bit &= 7		4978740	0		&=			
ANR	4978826	Identifier	source_bit		4978740	0					
ANR	4978827	PrimaryExpression	7		4978740	1					
ANR	4978828	IfStatement	if ( ! ( source_bit || ( dest_bit & 31 ) || ( dest -> raster & 3 ) ) )		4978740	9					
ANR	4978829	Condition	! ( source_bit || ( dest_bit & 31 ) || ( dest -> raster & 3 ) )	585:8:20119:20172	4978740	0	True				
ANR	4978830	UnaryOperationExpression	! ( source_bit || ( dest_bit & 31 ) || ( dest -> raster & 3 ) )		4978740	0					
ANR	4978831	UnaryOperator	!		4978740	0					
ANR	4978832	OrExpression	source_bit || ( dest_bit & 31 ) || ( dest -> raster & 3 )		4978740	1		||			
ANR	4978833	Identifier	source_bit		4978740	0					
ANR	4978834	OrExpression	( dest_bit & 31 ) || ( dest -> raster & 3 )		4978740	1		||			
ANR	4978835	BitAndExpression	dest_bit & 31		4978740	0		&			
ANR	4978836	Identifier	dest_bit		4978740	0					
ANR	4978837	PrimaryExpression	31		4978740	1					
ANR	4978838	BitAndExpression	dest -> raster & 3		4978740	1		&			
ANR	4978839	PtrMemberAccess	dest -> raster		4978740	0					
ANR	4978840	Identifier	dest		4978740	0					
ANR	4978841	Identifier	raster		4978740	1					
ANR	4978842	PrimaryExpression	3		4978740	1					
ANR	4978843	CompoundStatement		20:64:622:622	4978740	1					
ANR	4978844	SwitchStatement	switch ( dest_depth )		4978740	0					
ANR	4978845	Condition	dest_depth	586:16:20193:20202	4978740	0	True				
ANR	4978846	Identifier	dest_depth		4978740	0					
ANR	4978847	CompoundStatement		21:28:652:652	4978740	1					
ANR	4978848	Label	case 4 :	587:8:20215:20221	4978740	0	True				
ANR	4978849	IfStatement	if ( source_depth == 1 )		4978740	1					
ANR	4978850	Condition	source_depth == 1	588:16:20239:20255	4978740	0	True				
ANR	4978851	EqualityExpression	source_depth == 1		4978740	0		==			
ANR	4978852	Identifier	source_depth		4978740	0					
ANR	4978853	PrimaryExpression	1		4978740	1					
ANR	4978854	ExpressionStatement	loop_case = EXPAND_1_TO_4	589:16:20274:20299	4978740	1	True				
ANR	4978855	AssignmentExpression	loop_case = EXPAND_1_TO_4		4978740	0		=			
ANR	4978856	Identifier	loop_case		4978740	0					
ANR	4978857	Identifier	EXPAND_1_TO_4		4978740	1					
ANR	4978858	BreakStatement	break ;	590:12:20313:20318	4978740	2	True				
ANR	4978859	Label	case 32 :	591:8:20328:20335	4978740	3	True				
ANR	4978860	IfStatement	if ( source_depth == 8 && ! ( shift & 7 ) )		4978740	4					
ANR	4978861	Condition	source_depth == 8 && ! ( shift & 7 )	592:16:20353:20385	4978740	0	True				
ANR	4978862	AndExpression	source_depth == 8 && ! ( shift & 7 )		4978740	0		&&			
ANR	4978863	EqualityExpression	source_depth == 8		4978740	0		==			
ANR	4978864	Identifier	source_depth		4978740	0					
ANR	4978865	PrimaryExpression	8		4978740	1					
ANR	4978866	UnaryOperationExpression	! ( shift & 7 )		4978740	1					
ANR	4978867	UnaryOperator	!		4978740	0					
ANR	4978868	BitAndExpression	shift & 7		4978740	1		&			
ANR	4978869	Identifier	shift		4978740	0					
ANR	4978870	PrimaryExpression	7		4978740	1					
ANR	4978871	ExpressionStatement	loop_case = EXPAND_8_TO_32	593:16:20404:20430	4978740	1	True				
ANR	4978872	AssignmentExpression	loop_case = EXPAND_8_TO_32		4978740	0		=			
ANR	4978873	Identifier	loop_case		4978740	0					
ANR	4978874	Identifier	EXPAND_8_TO_32		4978740	1					
ANR	4978875	BreakStatement	break ;	594:12:20444:20449	4978740	5	True				
ANR	4978876	ExpressionStatement	dest_bit &= 7	597:4:20471:20484	4978740	10	True				
ANR	4978877	AssignmentExpression	dest_bit &= 7		4978740	0		&=			
ANR	4978878	Identifier	dest_bit		4978740	0					
ANR	4978879	PrimaryExpression	7		4978740	1					
ANR	4978880	SwitchStatement	switch ( loop_case )		4978740	11					
ANR	4978881	Condition	loop_case	598:12:20498:20506	4978740	0	True				
ANR	4978882	Identifier	loop_case		4978740	0					
ANR	4978883	CompoundStatement		33:23:956:956	4978740	1					
ANR	4978884	Label	case EXPAND_8_TO_32 :	600:4:20516:20535	4978740	0	True				
ANR	4978885	Identifier	EXPAND_8_TO_32		4978740	0					
ANR	4978886	CompoundStatement		35:25:984:984	4978740	1					
ANR	4978887	Statement	define	602:3:20565:20570	4978740	0	True				
ANR	4978888	Statement	word_shift	602:10:20572:20581	4978740	1	True				
ANR	4978889	Statement	(	602:21:20583:20583	4978740	2	True				
ANR	4978890	Statement	shift	602:22:20584:20588	4978740	3	True				
ANR	4978891	Statement	)	602:27:20589:20589	4978740	4	True				
ANR	4978892	ForStatement	"for ( y = 0 ; y < height ; ++ y , source_row += source -> raster , dest_row += dest -> raster )"		4978740	5					
ANR	4978893	ForInit	y = 0 ;	606:13:20654:20659	4978740	0	True				
ANR	4978894	AssignmentExpression	y = 0		4978740	0		=			
ANR	4978895	Identifier	y		4978740	0					
ANR	4978896	PrimaryExpression	0		4978740	1					
ANR	4978897	Condition	y < height	606:20:20661:20670	4978740	1	True				
ANR	4978898	RelationalExpression	y < height		4978740	0		<			
ANR	4978899	Identifier	y		4978740	0					
ANR	4978900	Identifier	height		4978740	1					
ANR	4978901	Expression	"++ y , source_row += source -> raster , dest_row += dest -> raster"	607:13:20686:20744	4978740	2	True				
ANR	4978902	UnaryExpression	++ y		4978740	0					
ANR	4978903	IncDec	++		4978740	0					
ANR	4978904	Identifier	y		4978740	1					
ANR	4978905	Expression	"source_row += source -> raster , dest_row += dest -> raster"		4978740	1					
ANR	4978906	AssignmentExpression	source_row += source -> raster		4978740	0		+=			
ANR	4978907	Identifier	source_row		4978740	0					
ANR	4978908	PtrMemberAccess	source -> raster		4978740	1					
ANR	4978909	Identifier	source		4978740	0					
ANR	4978910	Identifier	raster		4978740	1					
ANR	4978911	AssignmentExpression	dest_row += dest -> raster		4978740	1		+=			
ANR	4978912	Identifier	dest_row		4978740	0					
ANR	4978913	PtrMemberAccess	dest -> raster		4978740	1					
ANR	4978914	Identifier	dest		4978740	0					
ANR	4978915	Identifier	raster		4978740	1					
ANR	4978916	CompoundStatement		46:12:1283:1315	4978740	3					
ANR	4978917	IdentifierDeclStatement	int x ;	609:12:20775:20780	4978740	0	True				
ANR	4978918	IdentifierDecl	x		4978740	0					
ANR	4978919	IdentifierDeclType	int		4978740	0					
ANR	4978920	Identifier	x		4978740	1					
ANR	4978921	IdentifierDeclStatement	const byte * src = source_row ;	610:12:20794:20822	4978740	1	True				
ANR	4978922	IdentifierDecl	* src = source_row		4978740	0					
ANR	4978923	IdentifierDeclType	const byte *		4978740	0					
ANR	4978924	Identifier	src		4978740	1					
ANR	4978925	AssignmentExpression	* src = source_row		4978740	2		=			
ANR	4978926	Identifier	source_row		4978740	0					
ANR	4978927	Identifier	source_row		4978740	1					
ANR	4978928	IdentifierDeclStatement	bits32 * dst = ( bits32 * ) dest_row ;	611:12:20836:20868	4978740	2	True				
ANR	4978929	IdentifierDecl	* dst = ( bits32 * ) dest_row		4978740	0					
ANR	4978930	IdentifierDeclType	bits32 *		4978740	0					
ANR	4978931	Identifier	dst		4978740	1					
ANR	4978932	AssignmentExpression	* dst = ( bits32 * ) dest_row		4978740	2		=			
ANR	4978933	Identifier	dst		4978740	0					
ANR	4978934	CastExpression	( bits32 * ) dest_row		4978740	1					
ANR	4978935	CastTarget	bits32 *		4978740	0					
ANR	4978936	Identifier	dest_row		4978740	1					
ANR	4978937	ForStatement	for ( x = width ; x > 0 ; -- x )		4978740	3					
ANR	4978938	ForInit	x = width ;	613:17:20888:20897	4978740	0	True				
ANR	4978939	AssignmentExpression	x = width		4978740	0		=			
ANR	4978940	Identifier	x		4978740	0					
ANR	4978941	Identifier	width		4978740	1					
ANR	4978942	Condition	x > 0	613:28:20899:20903	4978740	1	True				
ANR	4978943	RelationalExpression	x > 0		4978740	0		>			
ANR	4978944	Identifier	x		4978740	0					
ANR	4978945	PrimaryExpression	0		4978740	1					
ANR	4978946	UnaryExpression	-- x	613:35:20906:20908	4978740	2	True				
ANR	4978947	IncDec	--		4978740	0					
ANR	4978948	Identifier	x		4978740	1					
ANR	4978949	ExpressionStatement	* dst ++ = ( bits32 ) ( * src ++ ) << word_shift	614:16:20927:20966	4978740	3	True				
ANR	4978950	AssignmentExpression	* dst ++ = ( bits32 ) ( * src ++ ) << word_shift		4978740	0		=			
ANR	4978951	UnaryOperationExpression	* dst ++		4978740	0					
ANR	4978952	UnaryOperator	*		4978740	0					
ANR	4978953	PostIncDecOperationExpression	dst ++		4978740	1					
ANR	4978954	Identifier	dst		4978740	0					
ANR	4978955	IncDec	++		4978740	1					
ANR	4978956	ShiftExpression	( bits32 ) ( * src ++ ) << word_shift		4978740	1		<<			
ANR	4978957	CastExpression	( bits32 ) ( * src ++ )		4978740	0					
ANR	4978958	CastTarget	bits32		4978740	0					
ANR	4978959	UnaryOperationExpression	* src ++		4978740	1					
ANR	4978960	UnaryOperator	*		4978740	0					
ANR	4978961	PostIncDecOperationExpression	src ++		4978740	1					
ANR	4978962	Identifier	src		4978740	0					
ANR	4978963	IncDec	++		4978740	1					
ANR	4978964	Identifier	word_shift		4978740	1					
ANR	4978965	Statement	undef	616:1:20979:20983	4978740	6	True				
ANR	4978966	Statement	word_shift	616:7:20985:20994	4978740	7	True				
ANR	4978967	BreakStatement	break ;	618:8:21010:21015	4978740	2	True				
ANR	4978968	Label	case EXPAND_1_TO_4 :	620:4:21022:21040	4978740	3	True				
ANR	4978969	Identifier	EXPAND_1_TO_4		4978740	0					
ANR	4978970	Label	default :	621:4:21046:21053	4978740	4	True				
ANR	4978971	Identifier	default		4978740	0					
ANR	4978972	ForStatement	"for ( y = 0 ; y < height ; ++ y , source_row += source -> raster , dest_row += dest -> raster )"		4978740	5					
ANR	4978973	ForInit	y = 0 ;	622:13:21068:21073	4978740	0	True				
ANR	4978974	AssignmentExpression	y = 0		4978740	0		=			
ANR	4978975	Identifier	y		4978740	0					
ANR	4978976	PrimaryExpression	0		4978740	1					
ANR	4978977	Condition	y < height	622:20:21075:21084	4978740	1	True				
ANR	4978978	RelationalExpression	y < height		4978740	0		<			
ANR	4978979	Identifier	y		4978740	0					
ANR	4978980	Identifier	height		4978740	1					
ANR	4978981	Expression	"++ y , source_row += source -> raster , dest_row += dest -> raster"	623:13:21100:21158	4978740	2	True				
ANR	4978982	UnaryExpression	++ y		4978740	0					
ANR	4978983	IncDec	++		4978740	0					
ANR	4978984	Identifier	y		4978740	1					
ANR	4978985	Expression	"source_row += source -> raster , dest_row += dest -> raster"		4978740	1					
ANR	4978986	AssignmentExpression	source_row += source -> raster		4978740	0		+=			
ANR	4978987	Identifier	source_row		4978740	0					
ANR	4978988	PtrMemberAccess	source -> raster		4978740	1					
ANR	4978989	Identifier	source		4978740	0					
ANR	4978990	Identifier	raster		4978740	1					
ANR	4978991	AssignmentExpression	dest_row += dest -> raster		4978740	1		+=			
ANR	4978992	Identifier	dest_row		4978740	0					
ANR	4978993	PtrMemberAccess	dest -> raster		4978740	1					
ANR	4978994	Identifier	dest		4978740	0					
ANR	4978995	Identifier	raster		4978740	1					
ANR	4978996	CompoundStatement		65:12:1801:1860	4978740	3					
ANR	4978997	IdentifierDeclStatement	int x ;	625:12:21189:21194	4978740	0	True				
ANR	4978998	IdentifierDecl	x		4978740	0					
ANR	4978999	IdentifierDeclType	int		4978740	0					
ANR	4979000	Identifier	x		4978740	1					
ANR	4979001	IdentifierDeclStatement	const byte * sptr = source_row ;	626:12:21208:21237	4978740	1	True				
ANR	4979002	IdentifierDecl	* sptr = source_row		4978740	0					
ANR	4979003	IdentifierDeclType	const byte *		4978740	0					
ANR	4979004	Identifier	sptr		4978740	1					
ANR	4979005	AssignmentExpression	* sptr = source_row		4978740	2		=			
ANR	4979006	Identifier	source_row		4978740	0					
ANR	4979007	Identifier	source_row		4978740	1					
ANR	4979008	IdentifierDeclStatement	int sbit = source_bit ;	627:12:21251:21272	4978740	2	True				
ANR	4979009	IdentifierDecl	sbit = source_bit		4978740	0					
ANR	4979010	IdentifierDeclType	int		4978740	0					
ANR	4979011	Identifier	sbit		4978740	1					
ANR	4979012	AssignmentExpression	sbit = source_bit		4978740	2		=			
ANR	4979013	Identifier	source_bit		4978740	0					
ANR	4979014	Identifier	source_bit		4978740	1					
ANR	4979015	IdentifierDeclStatement	byte * dptr = dest_row ;	628:12:21286:21307	4978740	3	True				
ANR	4979016	IdentifierDecl	* dptr = dest_row		4978740	0					
ANR	4979017	IdentifierDeclType	byte *		4978740	0					
ANR	4979018	Identifier	dptr		4978740	1					
ANR	4979019	AssignmentExpression	* dptr = dest_row		4978740	2		=			
ANR	4979020	Identifier	dest_row		4978740	0					
ANR	4979021	Identifier	dest_row		4978740	1					
ANR	4979022	IdentifierDeclStatement	int dbit = dest_bit ;	629:12:21321:21340	4978740	4	True				
ANR	4979023	IdentifierDecl	dbit = dest_bit		4978740	0					
ANR	4979024	IdentifierDeclType	int		4978740	0					
ANR	4979025	Identifier	dbit		4978740	1					
ANR	4979026	AssignmentExpression	dbit = dest_bit		4978740	2		=			
ANR	4979027	Identifier	dest_bit		4978740	0					
ANR	4979028	Identifier	dest_bit		4978740	1					
ANR	4979029	IdentifierDeclStatement	byte dbbyte = ( dbit ? ( byte ) ( * dptr & ( 0xff00 >> dbit ) ) : 0 ) ;	630:12:21354:21413	4978740	5	True				
ANR	4979030	IdentifierDecl	dbbyte = ( dbit ? ( byte ) ( * dptr & ( 0xff00 >> dbit ) ) : 0 )		4978740	0					
ANR	4979031	IdentifierDeclType	byte		4978740	0					
ANR	4979032	Identifier	dbbyte		4978740	1					
ANR	4979033	AssignmentExpression	dbbyte = ( dbit ? ( byte ) ( * dptr & ( 0xff00 >> dbit ) ) : 0 )		4978740	2		=			
ANR	4979034	Identifier	dbbyte		4978740	0					
ANR	4979035	ConditionalExpression	dbit ? ( byte ) ( * dptr & ( 0xff00 >> dbit ) ) : 0		4978740	1					
ANR	4979036	Condition	dbit		4978740	0					
ANR	4979037	Identifier	dbit		4978740	0					
ANR	4979038	CastExpression	( byte ) ( * dptr & ( 0xff00 >> dbit ) )		4978740	1					
ANR	4979039	CastTarget	byte		4978740	0					
ANR	4979040	BitAndExpression	* dptr & ( 0xff00 >> dbit )		4978740	1		&			
ANR	4979041	UnaryOperationExpression	* dptr		4978740	0					
ANR	4979042	UnaryOperator	*		4978740	0					
ANR	4979043	Identifier	dptr		4978740	1					
ANR	4979044	ShiftExpression	0xff00 >> dbit		4978740	1		>>			
ANR	4979045	PrimaryExpression	0xff00		4978740	0					
ANR	4979046	Identifier	dbit		4978740	1					
ANR	4979047	PrimaryExpression	0		4978740	2					
ANR	4979048	ExpressionStatement	dbbyte = ( dbit ? ( byte ) ( * dptr & ( 0xff00 >> dbit ) ) : 0 )	632:12:21428:21482	4978740	6	True				
ANR	4979049	AssignmentExpression	dbbyte = ( dbit ? ( byte ) ( * dptr & ( 0xff00 >> dbit ) ) : 0 )		4978740	0		=			
ANR	4979050	Identifier	dbbyte		4978740	0					
ANR	4979051	ConditionalExpression	dbit ? ( byte ) ( * dptr & ( 0xff00 >> dbit ) ) : 0		4978740	1					
ANR	4979052	Condition	dbit		4978740	0					
ANR	4979053	Identifier	dbit		4978740	0					
ANR	4979054	CastExpression	( byte ) ( * dptr & ( 0xff00 >> dbit ) )		4978740	1					
ANR	4979055	CastTarget	byte		4978740	0					
ANR	4979056	BitAndExpression	* dptr & ( 0xff00 >> dbit )		4978740	1		&			
ANR	4979057	UnaryOperationExpression	* dptr		4978740	0					
ANR	4979058	UnaryOperator	*		4978740	0					
ANR	4979059	Identifier	dptr		4978740	1					
ANR	4979060	ShiftExpression	0xff00 >> dbit		4978740	1		>>			
ANR	4979061	PrimaryExpression	0xff00		4978740	0					
ANR	4979062	Identifier	dbit		4978740	1					
ANR	4979063	PrimaryExpression	0		4978740	2					
ANR	4979064	ForStatement	for ( x = width ; x > 0 ; -- x )		4978740	7					
ANR	4979065	ForInit	x = width ;	633:17:21501:21510	4978740	0	True				
ANR	4979066	AssignmentExpression	x = width		4978740	0		=			
ANR	4979067	Identifier	x		4978740	0					
ANR	4979068	Identifier	width		4978740	1					
ANR	4979069	Condition	x > 0	633:28:21512:21516	4978740	1	True				
ANR	4979070	RelationalExpression	x > 0		4978740	0		>			
ANR	4979071	Identifier	x		4978740	0					
ANR	4979072	PrimaryExpression	0		4978740	1					
ANR	4979073	UnaryExpression	-- x	633:35:21519:21521	4978740	2	True				
ANR	4979074	IncDec	--		4978740	0					
ANR	4979075	Identifier	x		4978740	1					
ANR	4979076	CompoundStatement		70:16:2017:2037	4978740	3					
ANR	4979077	IdentifierDeclStatement	uint color ;	634:16:21542:21552	4978740	0	True				
ANR	4979078	IdentifierDecl	color		4978740	0					
ANR	4979079	IdentifierDeclType	uint		4978740	0					
ANR	4979080	Identifier	color		4978740	1					
ANR	4979081	IdentifierDeclStatement	gx_color_index pixel ;	635:16:21570:21590	4978740	1	True				
ANR	4979082	IdentifierDecl	pixel		4978740	0					
ANR	4979083	IdentifierDeclType	gx_color_index		4978740	0					
ANR	4979084	Identifier	pixel		4978740	1					
ANR	4979085	IfStatement	"if ( sample_load_next8 ( & color , & sptr , & sbit , source_depth ) < 0 )"		4978740	2					
ANR	4979086	Condition	"sample_load_next8 ( & color , & sptr , & sbit , source_depth ) < 0"	637:20:21613:21669	4978740	0	True				
ANR	4979087	RelationalExpression	"sample_load_next8 ( & color , & sptr , & sbit , source_depth ) < 0"		4978740	0		<			
ANR	4979088	CallExpression	"sample_load_next8 ( & color , & sptr , & sbit , source_depth )"		4978740	0					
ANR	4979089	Callee	sample_load_next8		4978740	0					
ANR	4979090	Identifier	sample_load_next8		4978740	0					
ANR	4979091	ArgumentList	& color		4978740	1					
ANR	4979092	Argument	& color		4978740	0					
ANR	4979093	UnaryOperationExpression	& color		4978740	0					
ANR	4979094	UnaryOperator	&		4978740	0					
ANR	4979095	Identifier	color		4978740	1					
ANR	4979096	Argument	& sptr		4978740	1					
ANR	4979097	UnaryOperationExpression	& sptr		4978740	0					
ANR	4979098	UnaryOperator	&		4978740	0					
ANR	4979099	Identifier	sptr		4978740	1					
ANR	4979100	Argument	& sbit		4978740	2					
ANR	4979101	UnaryOperationExpression	& sbit		4978740	0					
ANR	4979102	UnaryOperator	&		4978740	0					
ANR	4979103	Identifier	sbit		4978740	1					
ANR	4979104	Argument	source_depth		4978740	3					
ANR	4979105	Identifier	source_depth		4978740	0					
ANR	4979106	PrimaryExpression	0		4978740	1					
ANR	4979107	ExpressionStatement	return_error ( gs_error_rangecheck )	638:20:21692:21725	4978740	1	True				
ANR	4979108	CallExpression	return_error ( gs_error_rangecheck )		4978740	0					
ANR	4979109	Callee	return_error		4978740	0					
ANR	4979110	Identifier	return_error		4978740	0					
ANR	4979111	ArgumentList	gs_error_rangecheck		4978740	1					
ANR	4979112	Argument	gs_error_rangecheck		4978740	0					
ANR	4979113	Identifier	gs_error_rangecheck		4978740	0					
ANR	4979114	ExpressionStatement	pixel = ( gx_color_index ) color << shift	640:16:21744:21782	4978740	3	True				
ANR	4979115	AssignmentExpression	pixel = ( gx_color_index ) color << shift		4978740	0		=			
ANR	4979116	Identifier	pixel		4978740	0					
ANR	4979117	ShiftExpression	( gx_color_index ) color << shift		4978740	1		<<			
ANR	4979118	CastExpression	( gx_color_index ) color		4978740	0					
ANR	4979119	CastTarget	gx_color_index		4978740	0					
ANR	4979120	Identifier	color		4978740	1					
ANR	4979121	Identifier	shift		4978740	1					
ANR	4979122	IfStatement	if ( sizeof ( pixel ) > 4 )		4978740	4					
ANR	4979123	Condition	sizeof ( pixel ) > 4	641:20:21804:21820	4978740	0	True				
ANR	4979124	RelationalExpression	sizeof ( pixel ) > 4		4978740	0		>			
ANR	4979125	SizeofExpression	sizeof ( pixel )		4978740	0					
ANR	4979126	Sizeof	sizeof		4978740	0					
ANR	4979127	SizeofOperand	pixel		4978740	1					
ANR	4979128	PrimaryExpression	4		4978740	1					
ANR	4979129	CompoundStatement		76:39:2270:2270	4978740	1					
ANR	4979130	IfStatement	"if ( sample_store_next64 ( pixel , & dptr , & dbit , dest_depth , & dbbyte ) < 0 )"		4978740	0					
ANR	4979131	Condition	"sample_store_next64 ( pixel , & dptr , & dbit , dest_depth , & dbbyte ) < 0"	642:24:21849:21913	4978740	0	True				
ANR	4979132	RelationalExpression	"sample_store_next64 ( pixel , & dptr , & dbit , dest_depth , & dbbyte ) < 0"		4978740	0		<			
ANR	4979133	CallExpression	"sample_store_next64 ( pixel , & dptr , & dbit , dest_depth , & dbbyte )"		4978740	0					
ANR	4979134	Callee	sample_store_next64		4978740	0					
ANR	4979135	Identifier	sample_store_next64		4978740	0					
ANR	4979136	ArgumentList	pixel		4978740	1					
ANR	4979137	Argument	pixel		4978740	0					
ANR	4979138	Identifier	pixel		4978740	0					
ANR	4979139	Argument	& dptr		4978740	1					
ANR	4979140	UnaryOperationExpression	& dptr		4978740	0					
ANR	4979141	UnaryOperator	&		4978740	0					
ANR	4979142	Identifier	dptr		4978740	1					
ANR	4979143	Argument	& dbit		4978740	2					
ANR	4979144	UnaryOperationExpression	& dbit		4978740	0					
ANR	4979145	UnaryOperator	&		4978740	0					
ANR	4979146	Identifier	dbit		4978740	1					
ANR	4979147	Argument	dest_depth		4978740	3					
ANR	4979148	Identifier	dest_depth		4978740	0					
ANR	4979149	Argument	& dbbyte		4978740	4					
ANR	4979150	UnaryOperationExpression	& dbbyte		4978740	0					
ANR	4979151	UnaryOperator	&		4978740	0					
ANR	4979152	Identifier	dbbyte		4978740	1					
ANR	4979153	PrimaryExpression	0		4978740	1					
ANR	4979154	ExpressionStatement	return_error ( gs_error_rangecheck )	643:24:21940:21973	4978740	1	True				
ANR	4979155	CallExpression	return_error ( gs_error_rangecheck )		4978740	0					
ANR	4979156	Callee	return_error		4978740	0					
ANR	4979157	Identifier	return_error		4978740	0					
ANR	4979158	ArgumentList	gs_error_rangecheck		4978740	1					
ANR	4979159	Argument	gs_error_rangecheck		4978740	0					
ANR	4979160	Identifier	gs_error_rangecheck		4978740	0					
ANR	4979161	ElseStatement	else		4978740	0					
ANR	4979162	CompoundStatement		80:21:2461:2461	4978740	0					
ANR	4979163	IfStatement	"if ( sample_store_next32 ( pixel , & dptr , & dbit , dest_depth , & dbbyte ) < 0 )"		4978740	0					
ANR	4979164	Condition	"sample_store_next32 ( pixel , & dptr , & dbit , dest_depth , & dbbyte ) < 0"	646:24:22040:22104	4978740	0	True				
ANR	4979165	RelationalExpression	"sample_store_next32 ( pixel , & dptr , & dbit , dest_depth , & dbbyte ) < 0"		4978740	0		<			
ANR	4979166	CallExpression	"sample_store_next32 ( pixel , & dptr , & dbit , dest_depth , & dbbyte )"		4978740	0					
ANR	4979167	Callee	sample_store_next32		4978740	0					
ANR	4979168	Identifier	sample_store_next32		4978740	0					
ANR	4979169	ArgumentList	pixel		4978740	1					
ANR	4979170	Argument	pixel		4978740	0					
ANR	4979171	Identifier	pixel		4978740	0					
ANR	4979172	Argument	& dptr		4978740	1					
ANR	4979173	UnaryOperationExpression	& dptr		4978740	0					
ANR	4979174	UnaryOperator	&		4978740	0					
ANR	4979175	Identifier	dptr		4978740	1					
ANR	4979176	Argument	& dbit		4978740	2					
ANR	4979177	UnaryOperationExpression	& dbit		4978740	0					
ANR	4979178	UnaryOperator	&		4978740	0					
ANR	4979179	Identifier	dbit		4978740	1					
ANR	4979180	Argument	dest_depth		4978740	3					
ANR	4979181	Identifier	dest_depth		4978740	0					
ANR	4979182	Argument	& dbbyte		4978740	4					
ANR	4979183	UnaryOperationExpression	& dbbyte		4978740	0					
ANR	4979184	UnaryOperator	&		4978740	0					
ANR	4979185	Identifier	dbbyte		4978740	1					
ANR	4979186	PrimaryExpression	0		4978740	1					
ANR	4979187	ExpressionStatement	return_error ( gs_error_rangecheck )	647:24:22131:22164	4978740	1	True				
ANR	4979188	CallExpression	return_error ( gs_error_rangecheck )		4978740	0					
ANR	4979189	Callee	return_error		4978740	0					
ANR	4979190	Identifier	return_error		4978740	0					
ANR	4979191	ArgumentList	gs_error_rangecheck		4978740	1					
ANR	4979192	Argument	gs_error_rangecheck		4978740	0					
ANR	4979193	Identifier	gs_error_rangecheck		4978740	0					
ANR	4979194	ExpressionStatement	"sample_store_flush ( dptr , dbit , dbbyte )"	650:12:22210:22248	4978740	8	True				
ANR	4979195	CallExpression	"sample_store_flush ( dptr , dbit , dbbyte )"		4978740	0					
ANR	4979196	Callee	sample_store_flush		4978740	0					
ANR	4979197	Identifier	sample_store_flush		4978740	0					
ANR	4979198	ArgumentList	dptr		4978740	1					
ANR	4979199	Argument	dptr		4978740	0					
ANR	4979200	Identifier	dptr		4978740	0					
ANR	4979201	Argument	dbit		4978740	1					
ANR	4979202	Identifier	dbit		4978740	0					
ANR	4979203	Argument	dbbyte		4978740	2					
ANR	4979204	Identifier	dbbyte		4978740	0					
ANR	4979205	BreakStatement	break ;	652:8:22268:22273	4978740	6	True				
ANR	4979206	ReturnStatement	return 0 ;	655:4:22286:22294	4978740	12	True				
ANR	4979207	PrimaryExpression	0		4978740	0					
ANR	4979208	ReturnType	int		4978740	1					
ANR	4979209	Identifier	bits_expand_plane		4978740	2					
ANR	4979210	ParameterList	"const bits_plane_t * dest , const bits_plane_t * source , int shift , int width , int height"		4978740	3					
ANR	4979211	Parameter	const bits_plane_t * dest	564:18:19441:19464	4978740	0	True				
ANR	4979212	ParameterType	const bits_plane_t *		4978740	0					
ANR	4979213	Identifier	dest		4978740	1					
ANR	4979214	Parameter	const bits_plane_t * source	565:4:19481:19506	4978740	1	True				
ANR	4979215	ParameterType	const bits_plane_t *		4978740	0					
ANR	4979216	Identifier	source		4978740	1					
ANR	4979217	Parameter	int shift	565:41:19518:19526	4978740	2	True				
ANR	4979218	ParameterType	int		4978740	0					
ANR	4979219	Identifier	shift		4978740	1					
ANR	4979220	Parameter	int width	565:52:19529:19537	4978740	3	True				
ANR	4979221	ParameterType	int		4978740	0					
ANR	4979222	Identifier	width		4978740	1					
ANR	4979223	Parameter	int height	565:63:19540:19549	4978740	4	True				
ANR	4979224	ParameterType	int		4978740	0					
ANR	4979225	Identifier	height		4978740	1					
ANR	4979226	CFGEntryNode	ENTRY		4978740		True				
ANR	4979227	CFGExitNode	EXIT		4978740		True				
ANR	4979228	Symbol	& sptr		4978740						
ANR	4979229	Symbol	gs_error_rangecheck		4978740						
ANR	4979230	Symbol	EXPAND_SLOW		4978740						
ANR	4979231	Symbol	& color		4978740						
ANR	4979232	Symbol	shift		4978740						
ANR	4979233	Symbol	dbit		4978740						
ANR	4979234	Symbol	source -> data		4978740						
ANR	4979235	Symbol	source		4978740						
ANR	4979236	Symbol	dest		4978740						
ANR	4979237	Symbol	sample_store_next32		4978740						
ANR	4979238	Symbol	& dptr		4978740						
ANR	4979239	Symbol	sbit		4978740						
ANR	4979240	Symbol	dest_depth		4978740						
ANR	4979241	Symbol	dest -> raster		4978740						
ANR	4979242	Symbol	* source		4978740						
ANR	4979243	Symbol	EXPAND_1_TO_4		4978740						
ANR	4979244	Symbol	height		4978740						
ANR	4979245	Symbol	& sbit		4978740						
ANR	4979246	Symbol	dptr		4978740						
ANR	4979247	Symbol	source_depth		4978740						
ANR	4979248	Symbol	& dbit		4978740						
ANR	4979249	Symbol	dest_row		4978740						
ANR	4979250	Symbol	dest -> depth		4978740						
ANR	4979251	Symbol	word_shift		4978740						
ANR	4979252	Symbol	source_bit		4978740						
ANR	4979253	Symbol	& dbbyte		4978740						
ANR	4979254	Symbol	source -> depth		4978740						
ANR	4979255	Symbol	sample_store_next64		4978740						
ANR	4979256	Symbol	sptr		4978740						
ANR	4979257	Symbol	dbbyte		4978740						
ANR	4979258	Symbol	* dst ++		4978740						
ANR	4979259	Symbol	loop_case		4978740						
ANR	4979260	Symbol	* src ++		4978740						
ANR	4979261	Symbol	source -> data . read		4978740						
ANR	4979262	Symbol	dest -> data		4978740						
ANR	4979263	Symbol	dst		4978740						
ANR	4979264	Symbol	color		4978740						
ANR	4979265	Symbol	* dest		4978740						
ANR	4979266	Symbol	sample_load_next8		4978740						
ANR	4979267	Symbol	dest -> x		4978740						
ANR	4979268	Symbol	* dptr		4978740						
ANR	4979269	Symbol	pixel		4978740						
ANR	4979270	Symbol	src		4978740						
ANR	4979271	Symbol	dest_bit		4978740						
ANR	4979272	Symbol	source -> raster		4978740						
ANR	4979273	Symbol	dest -> data . write		4978740						
ANR	4979274	Symbol	source_row		4978740						
ANR	4979275	Symbol	source -> x		4978740						
ANR	4979276	Symbol	EXPAND_8_TO_32		4978740						
ANR	4979277	Symbol	width		4978740						
ANR	4979278	Symbol	x		4978740						
ANR	4979279	Symbol	y		4978740						
ANR	4979280	Function	bytes_fill_rectangle	661:0:22398:22613							
ANR	4979281	FunctionDef	"bytes_fill_rectangle (byte * dest , uint raster , byte value , int width_bytes , int height)"		4979280	0					
ANR	4979282	CompoundStatement		664:0:22512:22613	4979280	0					
ANR	4979283	WhileStatement	while ( height -- > 0 )		4979280	0					
ANR	4979284	Condition	height -- > 0	665:11:22525:22536	4979280	0	True				
ANR	4979285	RelationalExpression	height -- > 0		4979280	0		>			
ANR	4979286	PostIncDecOperationExpression	height --		4979280	0					
ANR	4979287	Identifier	height		4979280	0					
ANR	4979288	IncDec	--		4979280	1					
ANR	4979289	PrimaryExpression	0		4979280	1					
ANR	4979290	CompoundStatement		2:25:26:26	4979280	1					
ANR	4979291	ExpressionStatement	"memset ( dest , value , width_bytes )"	666:8:22549:22581	4979280	0	True				
ANR	4979292	CallExpression	"memset ( dest , value , width_bytes )"		4979280	0					
ANR	4979293	Callee	memset		4979280	0					
ANR	4979294	Identifier	memset		4979280	0					
ANR	4979295	ArgumentList	dest		4979280	1					
ANR	4979296	Argument	dest		4979280	0					
ANR	4979297	Identifier	dest		4979280	0					
ANR	4979298	Argument	value		4979280	1					
ANR	4979299	Identifier	value		4979280	0					
ANR	4979300	Argument	width_bytes		4979280	2					
ANR	4979301	Identifier	width_bytes		4979280	0					
ANR	4979302	ExpressionStatement	dest += raster	667:8:22591:22605	4979280	1	True				
ANR	4979303	AssignmentExpression	dest += raster		4979280	0		+=			
ANR	4979304	Identifier	dest		4979280	0					
ANR	4979305	Identifier	raster		4979280	1					
ANR	4979306	ReturnType	void		4979280	1					
ANR	4979307	Identifier	bytes_fill_rectangle		4979280	2					
ANR	4979308	ParameterList	"byte * dest , uint raster , byte value , int width_bytes , int height"		4979280	3					
ANR	4979309	Parameter	byte * dest	662:21:22424:22434	4979280	0	True				
ANR	4979310	ParameterType	byte *		4979280	0					
ANR	4979311	Identifier	dest		4979280	1					
ANR	4979312	Parameter	uint raster	662:34:22437:22447	4979280	1	True				
ANR	4979313	ParameterType	uint		4979280	0					
ANR	4979314	Identifier	raster		4979280	1					
ANR	4979315	Parameter	byte value	663:21:22471:22480	4979280	2	True				
ANR	4979316	ParameterType	byte		4979280	0					
ANR	4979317	Identifier	value		4979280	1					
ANR	4979318	Parameter	int width_bytes	663:33:22483:22497	4979280	3	True				
ANR	4979319	ParameterType	int		4979280	0					
ANR	4979320	Identifier	width_bytes		4979280	1					
ANR	4979321	Parameter	int height	663:50:22500:22509	4979280	4	True				
ANR	4979322	ParameterType	int		4979280	0					
ANR	4979323	Identifier	height		4979280	1					
ANR	4979324	CFGEntryNode	ENTRY		4979280		True				
ANR	4979325	CFGExitNode	EXIT		4979280		True				
ANR	4979326	Symbol	width_bytes		4979280						
ANR	4979327	Symbol	raster		4979280						
ANR	4979328	Symbol	dest		4979280						
ANR	4979329	Symbol	value		4979280						
ANR	4979330	Symbol	height		4979280						
ANR	4979331	Function	bytes_copy_rectangle	672:0:22649:22914							
ANR	4979332	FunctionDef	"bytes_copy_rectangle (byte * dest , uint dest_raster , const byte * src , uint src_raster , int width_bytes , int height)"		4979331	0					
ANR	4979333	CompoundStatement		675:0:22783:22914	4979331	0					
ANR	4979334	WhileStatement	while ( height -- > 0 )		4979331	0					
ANR	4979335	Condition	height -- > 0	676:11:22796:22807	4979331	0	True				
ANR	4979336	RelationalExpression	height -- > 0		4979331	0		>			
ANR	4979337	PostIncDecOperationExpression	height --		4979331	0					
ANR	4979338	Identifier	height		4979331	0					
ANR	4979339	IncDec	--		4979331	1					
ANR	4979340	PrimaryExpression	0		4979331	1					
ANR	4979341	CompoundStatement		2:25:26:26	4979331	1					
ANR	4979342	ExpressionStatement	"memcpy ( dest , src , width_bytes )"	677:8:22820:22850	4979331	0	True				
ANR	4979343	CallExpression	"memcpy ( dest , src , width_bytes )"		4979331	0					
ANR	4979344	Callee	memcpy		4979331	0					
ANR	4979345	Identifier	memcpy		4979331	0					
ANR	4979346	ArgumentList	dest		4979331	1					
ANR	4979347	Argument	dest		4979331	0					
ANR	4979348	Identifier	dest		4979331	0					
ANR	4979349	Argument	src		4979331	1					
ANR	4979350	Identifier	src		4979331	0					
ANR	4979351	Argument	width_bytes		4979331	2					
ANR	4979352	Identifier	width_bytes		4979331	0					
ANR	4979353	ExpressionStatement	src += src_raster	678:8:22860:22877	4979331	1	True				
ANR	4979354	AssignmentExpression	src += src_raster		4979331	0		+=			
ANR	4979355	Identifier	src		4979331	0					
ANR	4979356	Identifier	src_raster		4979331	1					
ANR	4979357	ExpressionStatement	dest += dest_raster	679:8:22887:22906	4979331	2	True				
ANR	4979358	AssignmentExpression	dest += dest_raster		4979331	0		+=			
ANR	4979359	Identifier	dest		4979331	0					
ANR	4979360	Identifier	dest_raster		4979331	1					
ANR	4979361	ReturnType	void		4979331	1					
ANR	4979362	Identifier	bytes_copy_rectangle		4979331	2					
ANR	4979363	ParameterList	"byte * dest , uint dest_raster , const byte * src , uint src_raster , int width_bytes , int height"		4979331	3					
ANR	4979364	Parameter	byte * dest	673:21:22675:22685	4979331	0	True				
ANR	4979365	ParameterType	byte *		4979331	0					
ANR	4979366	Identifier	dest		4979331	1					
ANR	4979367	Parameter	uint dest_raster	673:34:22688:22703	4979331	1	True				
ANR	4979368	ParameterType	uint		4979331	0					
ANR	4979369	Identifier	dest_raster		4979331	1					
ANR	4979370	Parameter	const byte * src	674:13:22719:22734	4979331	2	True				
ANR	4979371	ParameterType	const byte *		4979331	0					
ANR	4979372	Identifier	src		4979331	1					
ANR	4979373	Parameter	uint src_raster	674:31:22737:22751	4979331	3	True				
ANR	4979374	ParameterType	uint		4979331	0					
ANR	4979375	Identifier	src_raster		4979331	1					
ANR	4979376	Parameter	int width_bytes	674:48:22754:22768	4979331	4	True				
ANR	4979377	ParameterType	int		4979331	0					
ANR	4979378	Identifier	width_bytes		4979331	1					
ANR	4979379	Parameter	int height	674:65:22771:22780	4979331	5	True				
ANR	4979380	ParameterType	int		4979331	0					
ANR	4979381	Identifier	height		4979331	1					
ANR	4979382	CFGEntryNode	ENTRY		4979331		True				
ANR	4979383	CFGExitNode	EXIT		4979331		True				
ANR	4979384	Symbol	dest_raster		4979331						
ANR	4979385	Symbol	src		4979331						
ANR	4979386	Symbol	width_bytes		4979331						
ANR	4979387	Symbol	src_raster		4979331						
ANR	4979388	Symbol	dest		4979331						
ANR	4979389	Symbol	height		4979331						
ANR	4979390	Function	bytes_rectangle_is_const	683:0:22917:23334							
ANR	4979391	FunctionDef	"bytes_rectangle_is_const (const byte * src , uint src_raster , int width_bytes , int height)"		4979390	0					
ANR	4979392	CompoundStatement		686:0:23035:23334	4979390	0					
ANR	4979393	IdentifierDeclStatement	int i ;	687:4:23041:23046	4979390	0	True				
ANR	4979394	IdentifierDecl	i		4979390	0					
ANR	4979395	IdentifierDeclType	int		4979390	0					
ANR	4979396	Identifier	i		4979390	1					
ANR	4979397	IdentifierDeclStatement	char c ;	688:4:23052:23058	4979390	1	True				
ANR	4979398	IdentifierDecl	c		4979390	0					
ANR	4979399	IdentifierDeclType	char		4979390	0					
ANR	4979400	Identifier	c		4979390	1					
ANR	4979401	IfStatement	if ( width_bytes == 0 || height == 0 )		4979390	2					
ANR	4979402	Condition	width_bytes == 0 || height == 0	690:8:23069:23099	4979390	0	True				
ANR	4979403	OrExpression	width_bytes == 0 || height == 0		4979390	0		||			
ANR	4979404	EqualityExpression	width_bytes == 0		4979390	0		==			
ANR	4979405	Identifier	width_bytes		4979390	0					
ANR	4979406	PrimaryExpression	0		4979390	1					
ANR	4979407	EqualityExpression	height == 0		4979390	1		==			
ANR	4979408	Identifier	height		4979390	0					
ANR	4979409	PrimaryExpression	0		4979390	1					
ANR	4979410	ReturnStatement	return - 1 ;	691:8:23110:23119	4979390	1	True				
ANR	4979411	UnaryOperationExpression	- 1		4979390	0					
ANR	4979412	UnaryOperator	-		4979390	0					
ANR	4979413	PrimaryExpression	1		4979390	1					
ANR	4979414	ExpressionStatement	c = * src	692:4:23125:23133	4979390	3	True				
ANR	4979415	AssignmentExpression	c = * src		4979390	0		=			
ANR	4979416	Identifier	c		4979390	0					
ANR	4979417	UnaryOperationExpression	* src		4979390	1					
ANR	4979418	UnaryOperator	*		4979390	0					
ANR	4979419	Identifier	src		4979390	1					
ANR	4979420	WhileStatement	while ( height -- > 0 )		4979390	4					
ANR	4979421	Condition	height -- > 0	693:11:23146:23157	4979390	0	True				
ANR	4979422	RelationalExpression	height -- > 0		4979390	0		>			
ANR	4979423	PostIncDecOperationExpression	height --		4979390	0					
ANR	4979424	Identifier	height		4979390	0					
ANR	4979425	IncDec	--		4979390	1					
ANR	4979426	PrimaryExpression	0		4979390	1					
ANR	4979427	CompoundStatement		9:8:134:153	4979390	1					
ANR	4979428	IdentifierDeclStatement	const byte * s = src ;	694:8:23170:23189	4979390	0	True				
ANR	4979429	IdentifierDecl	* s = src		4979390	0					
ANR	4979430	IdentifierDeclType	const byte *		4979390	0					
ANR	4979431	Identifier	s		4979390	1					
ANR	4979432	AssignmentExpression	* s = src		4979390	2		=			
ANR	4979433	Identifier	src		4979390	0					
ANR	4979434	Identifier	src		4979390	1					
ANR	4979435	ExpressionStatement	src += src_raster	695:8:23199:23216	4979390	1	True				
ANR	4979436	AssignmentExpression	src += src_raster		4979390	0		+=			
ANR	4979437	Identifier	src		4979390	0					
ANR	4979438	Identifier	src_raster		4979390	1					
ANR	4979439	ForStatement	for ( i = width_bytes ; i > 0 ; i -- )		4979390	2					
ANR	4979440	ForInit	i = width_bytes ;	696:13:23231:23246	4979390	0	True				
ANR	4979441	AssignmentExpression	i = width_bytes		4979390	0		=			
ANR	4979442	Identifier	i		4979390	0					
ANR	4979443	Identifier	width_bytes		4979390	1					
ANR	4979444	Condition	i > 0	696:30:23248:23252	4979390	1	True				
ANR	4979445	RelationalExpression	i > 0		4979390	0		>			
ANR	4979446	Identifier	i		4979390	0					
ANR	4979447	PrimaryExpression	0		4979390	1					
ANR	4979448	PostIncDecOperationExpression	i --	696:37:23255:23257	4979390	2	True				
ANR	4979449	Identifier	i		4979390	0					
ANR	4979450	IncDec	--		4979390	1					
ANR	4979451	IfStatement	if ( * s ++ != c )		4979390	3					
ANR	4979452	Condition	* s ++ != c	697:16:23276:23284	4979390	0	True				
ANR	4979453	EqualityExpression	* s ++ != c		4979390	0		!=			
ANR	4979454	UnaryOperationExpression	* s ++		4979390	0					
ANR	4979455	UnaryOperator	*		4979390	0					
ANR	4979456	PostIncDecOperationExpression	s ++		4979390	1					
ANR	4979457	Identifier	s		4979390	0					
ANR	4979458	IncDec	++		4979390	1					
ANR	4979459	Identifier	c		4979390	1					
ANR	4979460	ReturnStatement	return - 1 ;	698:16:23303:23312	4979390	1	True				
ANR	4979461	UnaryOperationExpression	- 1		4979390	0					
ANR	4979462	UnaryOperator	-		4979390	0					
ANR	4979463	PrimaryExpression	1		4979390	1					
ANR	4979464	ReturnStatement	return c ;	700:4:23324:23332	4979390	5	True				
ANR	4979465	Identifier	c		4979390	0					
ANR	4979466	ReturnType	int		4979390	1					
ANR	4979467	Identifier	bytes_rectangle_is_const		4979390	2					
ANR	4979468	ParameterList	"const byte * src , uint src_raster , int width_bytes , int height"		4979390	3					
ANR	4979469	Parameter	const byte * src	684:25:22946:22961	4979390	0	True				
ANR	4979470	ParameterType	const byte *		4979390	0					
ANR	4979471	Identifier	src		4979390	1					
ANR	4979472	Parameter	uint src_raster	684:43:22964:22978	4979390	1	True				
ANR	4979473	ParameterType	uint		4979390	0					
ANR	4979474	Identifier	src_raster		4979390	1					
ANR	4979475	Parameter	int width_bytes	685:25:23006:23020	4979390	2	True				
ANR	4979476	ParameterType	int		4979390	0					
ANR	4979477	Identifier	width_bytes		4979390	1					
ANR	4979478	Parameter	int height	685:42:23023:23032	4979390	3	True				
ANR	4979479	ParameterType	int		4979390	0					
ANR	4979480	Identifier	height		4979390	1					
ANR	4979481	CFGEntryNode	ENTRY		4979390		True				
ANR	4979482	CFGExitNode	EXIT		4979390		True				
ANR	4979483	Symbol	* s ++		4979390						
ANR	4979484	Symbol	c		4979390						
ANR	4979485	Symbol	s		4979390						
ANR	4979486	Symbol	src		4979390						
ANR	4979487	Symbol	width_bytes		4979390						
ANR	4979488	Symbol	src_raster		4979390						
ANR	4979489	Symbol	i		4979390						
ANR	4979490	Symbol	* src		4979390						
ANR	4979491	Symbol	height		4979390						
ANR	4979492	Function	bytes_copy_rectangle_zero_padding	704:0:23396:24041							
ANR	4979493	FunctionDef	"bytes_copy_rectangle_zero_padding (byte * dest , uint dest_raster , const byte * src , uint src_raster , int width_bytes , int height)"		4979492	0					
ANR	4979494	CompoundStatement		707:0:23543:24041	4979492	0					
ANR	4979495	IdentifierDeclStatement	int padlen = dest_raster ;	708:4:23549:23573	4979492	0	True				
ANR	4979496	IdentifierDecl	padlen = dest_raster		4979492	0					
ANR	4979497	IdentifierDeclType	int		4979492	0					
ANR	4979498	Identifier	padlen		4979492	1					
ANR	4979499	AssignmentExpression	padlen = dest_raster		4979492	2		=			
ANR	4979500	Identifier	dest_raster		4979492	0					
ANR	4979501	Identifier	dest_raster		4979492	1					
ANR	4979502	IfStatement	if ( padlen < 0 )		4979492	1					
ANR	4979503	Condition	padlen < 0	709:8:23583:23592	4979492	0	True				
ANR	4979504	RelationalExpression	padlen < 0		4979492	0		<			
ANR	4979505	Identifier	padlen		4979492	0					
ANR	4979506	PrimaryExpression	0		4979492	1					
ANR	4979507	ExpressionStatement	padlen = - padlen	710:8:23603:23619	4979492	1	True				
ANR	4979508	AssignmentExpression	padlen = - padlen		4979492	0		=			
ANR	4979509	Identifier	padlen		4979492	0					
ANR	4979510	UnaryOperationExpression	- padlen		4979492	1					
ANR	4979511	UnaryOperator	-		4979492	0					
ANR	4979512	Identifier	padlen		4979492	1					
ANR	4979513	ExpressionStatement	padlen -= width_bytes	711:4:23625:23646	4979492	2	True				
ANR	4979514	AssignmentExpression	padlen -= width_bytes		4979492	0		-=			
ANR	4979515	Identifier	padlen		4979492	0					
ANR	4979516	Identifier	width_bytes		4979492	1					
ANR	4979517	IfStatement	if ( padlen == 0 )		4979492	3					
ANR	4979518	Condition	padlen == 0	712:8:23656:23666	4979492	0	True				
ANR	4979519	EqualityExpression	padlen == 0		4979492	0		==			
ANR	4979520	Identifier	padlen		4979492	0					
ANR	4979521	PrimaryExpression	0		4979492	1					
ANR	4979522	CompoundStatement		7:4:129:129	4979492	1					
ANR	4979523	WhileStatement	while ( height -- > 0 )		4979492	0					
ANR	4979524	Condition	height -- > 0	714:15:23690:23701	4979492	0	True				
ANR	4979525	RelationalExpression	height -- > 0		4979492	0		>			
ANR	4979526	PostIncDecOperationExpression	height --		4979492	0					
ANR	4979527	Identifier	height		4979492	0					
ANR	4979528	IncDec	--		4979492	1					
ANR	4979529	PrimaryExpression	0		4979492	1					
ANR	4979530	CompoundStatement		8:29:160:160	4979492	1					
ANR	4979531	ExpressionStatement	"memcpy ( dest , src , width_bytes )"	715:12:23718:23748	4979492	0	True				
ANR	4979532	CallExpression	"memcpy ( dest , src , width_bytes )"		4979492	0					
ANR	4979533	Callee	memcpy		4979492	0					
ANR	4979534	Identifier	memcpy		4979492	0					
ANR	4979535	ArgumentList	dest		4979492	1					
ANR	4979536	Argument	dest		4979492	0					
ANR	4979537	Identifier	dest		4979492	0					
ANR	4979538	Argument	src		4979492	1					
ANR	4979539	Identifier	src		4979492	0					
ANR	4979540	Argument	width_bytes		4979492	2					
ANR	4979541	Identifier	width_bytes		4979492	0					
ANR	4979542	ExpressionStatement	src += src_raster	716:12:23762:23779	4979492	1	True				
ANR	4979543	AssignmentExpression	src += src_raster		4979492	0		+=			
ANR	4979544	Identifier	src		4979492	0					
ANR	4979545	Identifier	src_raster		4979492	1					
ANR	4979546	ExpressionStatement	dest += dest_raster	717:12:23793:23812	4979492	2	True				
ANR	4979547	AssignmentExpression	dest += dest_raster		4979492	0		+=			
ANR	4979548	Identifier	dest		4979492	0					
ANR	4979549	Identifier	dest_raster		4979492	1					
ANR	4979550	ElseStatement	else		4979492	0					
ANR	4979551	CompoundStatement		13:11:291:291	4979492	0					
ANR	4979552	WhileStatement	while ( height -- > 0 )		4979492	0					
ANR	4979553	Condition	height -- > 0	720:15:23852:23863	4979492	0	True				
ANR	4979554	RelationalExpression	height -- > 0		4979492	0		>			
ANR	4979555	PostIncDecOperationExpression	height --		4979492	0					
ANR	4979556	Identifier	height		4979492	0					
ANR	4979557	IncDec	--		4979492	1					
ANR	4979558	PrimaryExpression	0		4979492	1					
ANR	4979559	CompoundStatement		14:29:322:322	4979492	1					
ANR	4979560	ExpressionStatement	"memcpy ( dest , src , width_bytes )"	721:12:23880:23910	4979492	0	True				
ANR	4979561	CallExpression	"memcpy ( dest , src , width_bytes )"		4979492	0					
ANR	4979562	Callee	memcpy		4979492	0					
ANR	4979563	Identifier	memcpy		4979492	0					
ANR	4979564	ArgumentList	dest		4979492	1					
ANR	4979565	Argument	dest		4979492	0					
ANR	4979566	Identifier	dest		4979492	0					
ANR	4979567	Argument	src		4979492	1					
ANR	4979568	Identifier	src		4979492	0					
ANR	4979569	Argument	width_bytes		4979492	2					
ANR	4979570	Identifier	width_bytes		4979492	0					
ANR	4979571	ExpressionStatement	"memset ( dest + width_bytes , 0 , padlen )"	722:12:23924:23959	4979492	1	True				
ANR	4979572	CallExpression	"memset ( dest + width_bytes , 0 , padlen )"		4979492	0					
ANR	4979573	Callee	memset		4979492	0					
ANR	4979574	Identifier	memset		4979492	0					
ANR	4979575	ArgumentList	dest + width_bytes		4979492	1					
ANR	4979576	Argument	dest + width_bytes		4979492	0					
ANR	4979577	AdditiveExpression	dest + width_bytes		4979492	0		+			
ANR	4979578	Identifier	dest		4979492	0					
ANR	4979579	Identifier	width_bytes		4979492	1					
ANR	4979580	Argument	0		4979492	1					
ANR	4979581	PrimaryExpression	0		4979492	0					
ANR	4979582	Argument	padlen		4979492	2					
ANR	4979583	Identifier	padlen		4979492	0					
ANR	4979584	ExpressionStatement	src += src_raster	723:12:23973:23990	4979492	2	True				
ANR	4979585	AssignmentExpression	src += src_raster		4979492	0		+=			
ANR	4979586	Identifier	src		4979492	0					
ANR	4979587	Identifier	src_raster		4979492	1					
ANR	4979588	ExpressionStatement	dest += dest_raster	724:12:24004:24023	4979492	3	True				
ANR	4979589	AssignmentExpression	dest += dest_raster		4979492	0		+=			
ANR	4979590	Identifier	dest		4979492	0					
ANR	4979591	Identifier	dest_raster		4979492	1					
ANR	4979592	ReturnType	void		4979492	1					
ANR	4979593	Identifier	bytes_copy_rectangle_zero_padding		4979492	2					
ANR	4979594	ParameterList	"byte * dest , uint dest_raster , const byte * src , uint src_raster , int width_bytes , int height"		4979492	3					
ANR	4979595	Parameter	byte * dest	705:34:23435:23445	4979492	0	True				
ANR	4979596	ParameterType	byte *		4979492	0					
ANR	4979597	Identifier	dest		4979492	1					
ANR	4979598	Parameter	uint dest_raster	705:47:23448:23463	4979492	1	True				
ANR	4979599	ParameterType	uint		4979492	0					
ANR	4979600	Identifier	dest_raster		4979492	1					
ANR	4979601	Parameter	const byte * src	706:13:23479:23494	4979492	2	True				
ANR	4979602	ParameterType	const byte *		4979492	0					
ANR	4979603	Identifier	src		4979492	1					
ANR	4979604	Parameter	uint src_raster	706:31:23497:23511	4979492	3	True				
ANR	4979605	ParameterType	uint		4979492	0					
ANR	4979606	Identifier	src_raster		4979492	1					
ANR	4979607	Parameter	int width_bytes	706:48:23514:23528	4979492	4	True				
ANR	4979608	ParameterType	int		4979492	0					
ANR	4979609	Identifier	width_bytes		4979492	1					
ANR	4979610	Parameter	int height	706:65:23531:23540	4979492	5	True				
ANR	4979611	ParameterType	int		4979492	0					
ANR	4979612	Identifier	height		4979492	1					
ANR	4979613	CFGEntryNode	ENTRY		4979492		True				
ANR	4979614	CFGExitNode	EXIT		4979492		True				
ANR	4979615	Symbol	dest_raster		4979492						
ANR	4979616	Symbol	src		4979492						
ANR	4979617	Symbol	width_bytes		4979492						
ANR	4979618	Symbol	padlen		4979492						
ANR	4979619	Symbol	src_raster		4979492						
ANR	4979620	Symbol	dest		4979492						
ANR	4979621	Symbol	height		4979492						
