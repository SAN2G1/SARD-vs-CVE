command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	534037	File	data/converged/CVE-2018-16863_ghostpdl/base_gsfcid.c								
ANR	534038	DeclStmt									
ANR	534039	Decl							RELOC_PTRS_END	RELOC_PTRS_END ( )	public_st_gs_font_cid1
ANR	534040	DeclStmt									
ANR	534041	Decl							RELOC_PTRS_END	RELOC_PTRS_END ( )	public_st_gs_font_cid2
ANR	534042	Function	subst_CID_on_WMode_finalize	109:0:3964:4369							
ANR	534043	FunctionDef	"subst_CID_on_WMode_finalize (const gs_memory_t * cmem , void * data)"		534042	0					
ANR	534044	CompoundStatement		111:0:4041:4369	534042	0					
ANR	534045	IdentifierDeclStatement	gs_subst_CID_on_WMode_t * subst = ( gs_subst_CID_on_WMode_t * ) data ;	112:4:4047:4111	534042	0	True				
ANR	534046	IdentifierDecl	* subst = ( gs_subst_CID_on_WMode_t * ) data		534042	0					
ANR	534047	IdentifierDeclType	gs_subst_CID_on_WMode_t *		534042	0					
ANR	534048	Identifier	subst		534042	1					
ANR	534049	AssignmentExpression	* subst = ( gs_subst_CID_on_WMode_t * ) data		534042	2		=			
ANR	534050	Identifier	subst		534042	0					
ANR	534051	CastExpression	( gs_subst_CID_on_WMode_t * ) data		534042	1					
ANR	534052	CastTarget	gs_subst_CID_on_WMode_t *		534042	0					
ANR	534053	Identifier	data		534042	1					
ANR	534054	ExpressionStatement	( void ) cmem	113:4:4117:4127	534042	1	True				
ANR	534055	CastExpression	( void ) cmem		534042	0					
ANR	534056	CastTarget	void		534042	0					
ANR	534057	Identifier	cmem		534042	1					
ANR	534058	ExpressionStatement	"gs_free_object ( subst -> rc . memory , subst -> data + 0 , ""subst_CID_on_WMode_finalize"" )"	115:4:4147:4227	534042	2	True				
ANR	534059	CallExpression	"gs_free_object ( subst -> rc . memory , subst -> data + 0 , ""subst_CID_on_WMode_finalize"" )"		534042	0					
ANR	534060	Callee	gs_free_object		534042	0					
ANR	534061	Identifier	gs_free_object		534042	0					
ANR	534062	ArgumentList	subst -> rc . memory		534042	1					
ANR	534063	Argument	subst -> rc . memory		534042	0					
ANR	534064	MemberAccess	subst -> rc . memory		534042	0					
ANR	534065	PtrMemberAccess	subst -> rc		534042	0					
ANR	534066	Identifier	subst		534042	0					
ANR	534067	Identifier	rc		534042	1					
ANR	534068	Identifier	memory		534042	1					
ANR	534069	Argument	subst -> data + 0		534042	1					
ANR	534070	AdditiveExpression	subst -> data + 0		534042	0		+			
ANR	534071	PtrMemberAccess	subst -> data		534042	0					
ANR	534072	Identifier	subst		534042	0					
ANR	534073	Identifier	data		534042	1					
ANR	534074	PrimaryExpression	0		534042	1					
ANR	534075	Argument	"""subst_CID_on_WMode_finalize"""		534042	2					
ANR	534076	PrimaryExpression	"""subst_CID_on_WMode_finalize"""		534042	0					
ANR	534077	ExpressionStatement	subst -> data [ 0 ] = NULL	116:4:4233:4254	534042	3	True				
ANR	534078	AssignmentExpression	subst -> data [ 0 ] = NULL		534042	0		=			
ANR	534079	ArrayIndexing	subst -> data [ 0 ]		534042	0					
ANR	534080	PtrMemberAccess	subst -> data		534042	0					
ANR	534081	Identifier	subst		534042	0					
ANR	534082	Identifier	data		534042	1					
ANR	534083	PrimaryExpression	0		534042	1					
ANR	534084	Identifier	NULL		534042	1					
ANR	534085	ExpressionStatement	"gs_free_object ( subst -> rc . memory , subst -> data + 1 , ""subst_CID_on_WMode_finalize"" )"	117:4:4260:4340	534042	4	True				
ANR	534086	CallExpression	"gs_free_object ( subst -> rc . memory , subst -> data + 1 , ""subst_CID_on_WMode_finalize"" )"		534042	0					
ANR	534087	Callee	gs_free_object		534042	0					
ANR	534088	Identifier	gs_free_object		534042	0					
ANR	534089	ArgumentList	subst -> rc . memory		534042	1					
ANR	534090	Argument	subst -> rc . memory		534042	0					
ANR	534091	MemberAccess	subst -> rc . memory		534042	0					
ANR	534092	PtrMemberAccess	subst -> rc		534042	0					
ANR	534093	Identifier	subst		534042	0					
ANR	534094	Identifier	rc		534042	1					
ANR	534095	Identifier	memory		534042	1					
ANR	534096	Argument	subst -> data + 1		534042	1					
ANR	534097	AdditiveExpression	subst -> data + 1		534042	0		+			
ANR	534098	PtrMemberAccess	subst -> data		534042	0					
ANR	534099	Identifier	subst		534042	0					
ANR	534100	Identifier	data		534042	1					
ANR	534101	PrimaryExpression	1		534042	1					
ANR	534102	Argument	"""subst_CID_on_WMode_finalize"""		534042	2					
ANR	534103	PrimaryExpression	"""subst_CID_on_WMode_finalize"""		534042	0					
ANR	534104	ExpressionStatement	subst -> data [ 1 ] = NULL	118:4:4346:4367	534042	5	True				
ANR	534105	AssignmentExpression	subst -> data [ 1 ] = NULL		534042	0		=			
ANR	534106	ArrayIndexing	subst -> data [ 1 ]		534042	0					
ANR	534107	PtrMemberAccess	subst -> data		534042	0					
ANR	534108	Identifier	subst		534042	0					
ANR	534109	Identifier	data		534042	1					
ANR	534110	PrimaryExpression	1		534042	1					
ANR	534111	Identifier	NULL		534042	1					
ANR	534112	ReturnType	static void		534042	1					
ANR	534113	Identifier	subst_CID_on_WMode_finalize		534042	2					
ANR	534114	ParameterList	"const gs_memory_t * cmem , void * data"		534042	3					
ANR	534115	Parameter	const gs_memory_t * cmem	110:28:4004:4026	534042	0	True				
ANR	534116	ParameterType	const gs_memory_t *		534042	0					
ANR	534117	Identifier	cmem		534042	1					
ANR	534118	Parameter	void * data	110:53:4029:4038	534042	1	True				
ANR	534119	ParameterType	void *		534042	0					
ANR	534120	Identifier	data		534042	1					
ANR	534121	CFGEntryNode	ENTRY		534042		True				
ANR	534122	CFGExitNode	EXIT		534042		True				
ANR	534123	Symbol	NULL		534042						
ANR	534124	Symbol	data		534042						
ANR	534125	Symbol	* subst		534042						
ANR	534126	Symbol	subst		534042						
ANR	534127	Symbol	subst -> rc . memory		534042						
ANR	534128	Symbol	subst -> rc		534042						
ANR	534129	Symbol	* subst -> data		534042						
ANR	534130	Symbol	cmem		534042						
ANR	534131	Symbol	* * subst		534042						
ANR	534132	Symbol	subst -> data		534042						
ANR	534133	Function	cid_system_info_set_null	127:0:4550:4652							
ANR	534134	FunctionDef	cid_system_info_set_null (gs_cid_system_info_t * pcidsi)		534133	0					
ANR	534135	CompoundStatement		129:0:4610:4652	534133	0					
ANR	534136	ExpressionStatement	"memset ( pcidsi , 0 , sizeof ( * pcidsi ) )"	130:4:4616:4650	534133	0	True				
ANR	534137	CallExpression	"memset ( pcidsi , 0 , sizeof ( * pcidsi ) )"		534133	0					
ANR	534138	Callee	memset		534133	0					
ANR	534139	Identifier	memset		534133	0					
ANR	534140	ArgumentList	pcidsi		534133	1					
ANR	534141	Argument	pcidsi		534133	0					
ANR	534142	Identifier	pcidsi		534133	0					
ANR	534143	Argument	0		534133	1					
ANR	534144	PrimaryExpression	0		534133	0					
ANR	534145	Argument	sizeof ( * pcidsi )		534133	2					
ANR	534146	SizeofExpression	sizeof ( * pcidsi )		534133	0					
ANR	534147	Sizeof	sizeof		534133	0					
ANR	534148	UnaryOperationExpression	* pcidsi		534133	1					
ANR	534149	UnaryOperator	*		534133	0					
ANR	534150	Identifier	pcidsi		534133	1					
ANR	534151	ReturnType	void		534133	1					
ANR	534152	Identifier	cid_system_info_set_null		534133	2					
ANR	534153	ParameterList	gs_cid_system_info_t * pcidsi		534133	3					
ANR	534154	Parameter	gs_cid_system_info_t * pcidsi	128:25:4580:4607	534133	0	True				
ANR	534155	ParameterType	gs_cid_system_info_t *		534133	0					
ANR	534156	Identifier	pcidsi		534133	1					
ANR	534157	CFGEntryNode	ENTRY		534133		True				
ANR	534158	CFGExitNode	EXIT		534133		True				
ANR	534159	Symbol	* pcidsi		534133						
ANR	534160	Symbol	pcidsi		534133						
ANR	534161	Function	cid_system_info_is_null	132:0:4654:4831							
ANR	534162	FunctionDef	cid_system_info_is_null (const gs_cid_system_info_t * pcidsi)		534161	0					
ANR	534163	CompoundStatement		134:0:4719:4831	534161	0					
ANR	534164	ReturnStatement	return ( pcidsi -> Registry . size == 0 && pcidsi -> Ordering . size == 0 && pcidsi -> Supplement == 0 ) ;	135:4:4725:4829	534161	0	True				
ANR	534165	AndExpression	pcidsi -> Registry . size == 0 && pcidsi -> Ordering . size == 0 && pcidsi -> Supplement == 0		534161	0		&&			
ANR	534166	EqualityExpression	pcidsi -> Registry . size == 0		534161	0		==			
ANR	534167	MemberAccess	pcidsi -> Registry . size		534161	0					
ANR	534168	PtrMemberAccess	pcidsi -> Registry		534161	0					
ANR	534169	Identifier	pcidsi		534161	0					
ANR	534170	Identifier	Registry		534161	1					
ANR	534171	Identifier	size		534161	1					
ANR	534172	PrimaryExpression	0		534161	1					
ANR	534173	AndExpression	pcidsi -> Ordering . size == 0 && pcidsi -> Supplement == 0		534161	1		&&			
ANR	534174	EqualityExpression	pcidsi -> Ordering . size == 0		534161	0		==			
ANR	534175	MemberAccess	pcidsi -> Ordering . size		534161	0					
ANR	534176	PtrMemberAccess	pcidsi -> Ordering		534161	0					
ANR	534177	Identifier	pcidsi		534161	0					
ANR	534178	Identifier	Ordering		534161	1					
ANR	534179	Identifier	size		534161	1					
ANR	534180	PrimaryExpression	0		534161	1					
ANR	534181	EqualityExpression	pcidsi -> Supplement == 0		534161	1		==			
ANR	534182	PtrMemberAccess	pcidsi -> Supplement		534161	0					
ANR	534183	Identifier	pcidsi		534161	0					
ANR	534184	Identifier	Supplement		534161	1					
ANR	534185	PrimaryExpression	0		534161	1					
ANR	534186	ReturnType	bool		534161	1					
ANR	534187	Identifier	cid_system_info_is_null		534161	2					
ANR	534188	ParameterList	const gs_cid_system_info_t * pcidsi		534161	3					
ANR	534189	Parameter	const gs_cid_system_info_t * pcidsi	133:24:4683:4716	534161	0	True				
ANR	534190	ParameterType	const gs_cid_system_info_t *		534161	0					
ANR	534191	Identifier	pcidsi		534161	1					
ANR	534192	CFGEntryNode	ENTRY		534161		True				
ANR	534193	CFGExitNode	EXIT		534161		True				
ANR	534194	Symbol	pcidsi -> Ordering . size		534161						
ANR	534195	Symbol	* pcidsi		534161						
ANR	534196	Symbol	pcidsi -> Registry		534161						
ANR	534197	Symbol	pcidsi		534161						
ANR	534198	Symbol	pcidsi -> Supplement		534161						
ANR	534199	Symbol	pcidsi -> Registry . size		534161						
ANR	534200	Symbol	pcidsi -> Ordering		534161						
ANR	534201	Function	gs_font_cid_system_info	143:0:4924:5373							
ANR	534202	FunctionDef	gs_font_cid_system_info (const gs_font * pfont)		534201	0					
ANR	534203	CompoundStatement		145:0:4999:5373	534201	0					
ANR	534204	SwitchStatement	switch ( pfont -> FontType )		534201	0					
ANR	534205	Condition	pfont -> FontType	146:12:5013:5027	534201	0	True				
ANR	534206	PtrMemberAccess	pfont -> FontType		534201	0					
ANR	534207	Identifier	pfont		534201	0					
ANR	534208	Identifier	FontType		534201	1					
ANR	534209	CompoundStatement		2:29:30:30	534201	1					
ANR	534210	Label	case ft_CID_encrypted :	147:4:5036:5057	534201	0	True				
ANR	534211	Identifier	ft_CID_encrypted		534201	0					
ANR	534212	ReturnStatement	return & ( ( const gs_font_cid0 * ) pfont ) -> cidata . common . CIDSystemInfo ;	148:8:5067:5133	534201	1	True				
ANR	534213	UnaryOperationExpression	& ( ( const gs_font_cid0 * ) pfont ) -> cidata . common . CIDSystemInfo		534201	0					
ANR	534214	UnaryOperator	&		534201	0					
ANR	534215	MemberAccess	( ( const gs_font_cid0 * ) pfont ) -> cidata . common . CIDSystemInfo		534201	1					
ANR	534216	MemberAccess	( ( const gs_font_cid0 * ) pfont ) -> cidata . common		534201	0					
ANR	534217	PtrMemberAccess	( ( const gs_font_cid0 * ) pfont ) -> cidata		534201	0					
ANR	534218	CastExpression	( const gs_font_cid0 * ) pfont		534201	0					
ANR	534219	CastTarget	const gs_font_cid0 *		534201	0					
ANR	534220	Identifier	pfont		534201	1					
ANR	534221	Identifier	cidata		534201	1					
ANR	534222	Identifier	common		534201	1					
ANR	534223	Identifier	CIDSystemInfo		534201	1					
ANR	534224	Label	case ft_CID_user_defined :	149:4:5139:5163	534201	2	True				
ANR	534225	Identifier	ft_CID_user_defined		534201	0					
ANR	534226	ReturnStatement	return & ( ( const gs_font_cid1 * ) pfont ) -> cidata . CIDSystemInfo ;	150:8:5173:5232	534201	3	True				
ANR	534227	UnaryOperationExpression	& ( ( const gs_font_cid1 * ) pfont ) -> cidata . CIDSystemInfo		534201	0					
ANR	534228	UnaryOperator	&		534201	0					
ANR	534229	MemberAccess	( ( const gs_font_cid1 * ) pfont ) -> cidata . CIDSystemInfo		534201	1					
ANR	534230	PtrMemberAccess	( ( const gs_font_cid1 * ) pfont ) -> cidata		534201	0					
ANR	534231	CastExpression	( const gs_font_cid1 * ) pfont		534201	0					
ANR	534232	CastTarget	const gs_font_cid1 *		534201	0					
ANR	534233	Identifier	pfont		534201	1					
ANR	534234	Identifier	cidata		534201	1					
ANR	534235	Identifier	CIDSystemInfo		534201	1					
ANR	534236	Label	case ft_CID_TrueType :	151:4:5238:5258	534201	4	True				
ANR	534237	Identifier	ft_CID_TrueType		534201	0					
ANR	534238	ReturnStatement	return & ( ( const gs_font_cid2 * ) pfont ) -> cidata . common . CIDSystemInfo ;	152:8:5268:5334	534201	5	True				
ANR	534239	UnaryOperationExpression	& ( ( const gs_font_cid2 * ) pfont ) -> cidata . common . CIDSystemInfo		534201	0					
ANR	534240	UnaryOperator	&		534201	0					
ANR	534241	MemberAccess	( ( const gs_font_cid2 * ) pfont ) -> cidata . common . CIDSystemInfo		534201	1					
ANR	534242	MemberAccess	( ( const gs_font_cid2 * ) pfont ) -> cidata . common		534201	0					
ANR	534243	PtrMemberAccess	( ( const gs_font_cid2 * ) pfont ) -> cidata		534201	0					
ANR	534244	CastExpression	( const gs_font_cid2 * ) pfont		534201	0					
ANR	534245	CastTarget	const gs_font_cid2 *		534201	0					
ANR	534246	Identifier	pfont		534201	1					
ANR	534247	Identifier	cidata		534201	1					
ANR	534248	Identifier	common		534201	1					
ANR	534249	Identifier	CIDSystemInfo		534201	1					
ANR	534250	Label	default :	153:4:5340:5347	534201	6	True				
ANR	534251	Identifier	default		534201	0					
ANR	534252	ReturnStatement	return 0 ;	154:8:5357:5365	534201	7	True				
ANR	534253	PrimaryExpression	0		534201	0					
ANR	534254	ReturnType	const gs_cid_system_info_t *		534201	1					
ANR	534255	Identifier	gs_font_cid_system_info		534201	2					
ANR	534256	ParameterList	const gs_font * pfont		534201	3					
ANR	534257	Parameter	const gs_font * pfont	144:24:4977:4996	534201	0	True				
ANR	534258	ParameterType	const gs_font *		534201	0					
ANR	534259	Identifier	pfont		534201	1					
ANR	534260	CFGEntryNode	ENTRY		534201		True				
ANR	534261	CFGExitNode	EXIT		534201		True				
ANR	534262	Symbol	& ( ( const gs_font_cid1 * ) pfont ) -> cidata . CIDSystemInfo		534201						
ANR	534263	Symbol	pfont		534201						
ANR	534264	Symbol	& ( ( const gs_font_cid0 * ) pfont ) -> cidata		534201						
ANR	534265	Symbol	( ( const gs_font_cid1 * ) pfont ) -> cidata		534201						
ANR	534266	Symbol	& ( ( const gs_font_cid0 * ) pfont ) -> cidata . common		534201						
ANR	534267	Symbol	& ( ( const gs_font_cid2 * ) pfont ) -> cidata		534201						
ANR	534268	Symbol	( ( const gs_font_cid0 * ) pfont ) -> cidata		534201						
ANR	534269	Symbol	& ( ( const gs_font_cid2 * ) pfont ) -> cidata . common		534201						
ANR	534270	Symbol	* pfont		534201						
ANR	534271	Symbol	pfont -> FontType		534201						
ANR	534272	Symbol	( ( const gs_font_cid2 * ) pfont ) -> cidata . common		534201						
ANR	534273	Symbol	& ( ( const gs_font_cid2 * ) pfont ) -> cidata . common . CIDSystemInfo		534201						
ANR	534274	Symbol	( ( const gs_font_cid0 * ) pfont ) -> cidata . common		534201						
ANR	534275	Symbol	& ( ( const gs_font_cid1 * ) pfont ) -> cidata		534201						
ANR	534276	Symbol	& ( ( const gs_font_cid0 * ) pfont ) -> cidata . common . CIDSystemInfo		534201						
ANR	534277	Symbol	( ( const gs_font_cid2 * ) pfont ) -> cidata		534201						
ANR	534278	Function	gs_is_CIDSystemInfo_compatible	161:0:5421:6029							
ANR	534279	FunctionDef	"gs_is_CIDSystemInfo_compatible (const gs_cid_system_info_t * info0 , const gs_cid_system_info_t * info1)"		534278	0					
ANR	534280	CompoundStatement		164:0:5558:6029	534278	0					
ANR	534281	IfStatement	if ( info0 == NULL || info1 == NULL )		534278	0					
ANR	534282	Condition	info0 == NULL || info1 == NULL	165:8:5568:5597	534278	0	True				
ANR	534283	OrExpression	info0 == NULL || info1 == NULL		534278	0		||			
ANR	534284	EqualityExpression	info0 == NULL		534278	0		==			
ANR	534285	Identifier	info0		534278	0					
ANR	534286	Identifier	NULL		534278	1					
ANR	534287	EqualityExpression	info1 == NULL		534278	1		==			
ANR	534288	Identifier	info1		534278	0					
ANR	534289	Identifier	NULL		534278	1					
ANR	534290	ReturnStatement	return false ;	166:8:5608:5620	534278	1	True				
ANR	534291	Identifier	false		534278	0					
ANR	534292	IfStatement	if ( info0 -> Registry . size != info1 -> Registry . size )		534278	1					
ANR	534293	Condition	info0 -> Registry . size != info1 -> Registry . size	167:8:5630:5673	534278	0	True				
ANR	534294	EqualityExpression	info0 -> Registry . size != info1 -> Registry . size		534278	0		!=			
ANR	534295	MemberAccess	info0 -> Registry . size		534278	0					
ANR	534296	PtrMemberAccess	info0 -> Registry		534278	0					
ANR	534297	Identifier	info0		534278	0					
ANR	534298	Identifier	Registry		534278	1					
ANR	534299	Identifier	size		534278	1					
ANR	534300	MemberAccess	info1 -> Registry . size		534278	1					
ANR	534301	PtrMemberAccess	info1 -> Registry		534278	0					
ANR	534302	Identifier	info1		534278	0					
ANR	534303	Identifier	Registry		534278	1					
ANR	534304	Identifier	size		534278	1					
ANR	534305	ReturnStatement	return false ;	168:8:5684:5696	534278	1	True				
ANR	534306	Identifier	false		534278	0					
ANR	534307	IfStatement	if ( info0 -> Ordering . size != info1 -> Ordering . size )		534278	2					
ANR	534308	Condition	info0 -> Ordering . size != info1 -> Ordering . size	169:8:5706:5749	534278	0	True				
ANR	534309	EqualityExpression	info0 -> Ordering . size != info1 -> Ordering . size		534278	0		!=			
ANR	534310	MemberAccess	info0 -> Ordering . size		534278	0					
ANR	534311	PtrMemberAccess	info0 -> Ordering		534278	0					
ANR	534312	Identifier	info0		534278	0					
ANR	534313	Identifier	Ordering		534278	1					
ANR	534314	Identifier	size		534278	1					
ANR	534315	MemberAccess	info1 -> Ordering . size		534278	1					
ANR	534316	PtrMemberAccess	info1 -> Ordering		534278	0					
ANR	534317	Identifier	info1		534278	0					
ANR	534318	Identifier	Ordering		534278	1					
ANR	534319	Identifier	size		534278	1					
ANR	534320	ReturnStatement	return false ;	170:8:5760:5772	534278	1	True				
ANR	534321	Identifier	false		534278	0					
ANR	534322	IfStatement	"if ( memcmp ( info0 -> Registry . data , info1 -> Registry . data , info0 -> Registry . size ) )"		534278	3					
ANR	534323	Condition	"memcmp ( info0 -> Registry . data , info1 -> Registry . data , info0 -> Registry . size )"	171:8:5782:5868	534278	0	True				
ANR	534324	CallExpression	"memcmp ( info0 -> Registry . data , info1 -> Registry . data , info0 -> Registry . size )"		534278	0					
ANR	534325	Callee	memcmp		534278	0					
ANR	534326	Identifier	memcmp		534278	0					
ANR	534327	ArgumentList	info0 -> Registry . data		534278	1					
ANR	534328	Argument	info0 -> Registry . data		534278	0					
ANR	534329	MemberAccess	info0 -> Registry . data		534278	0					
ANR	534330	PtrMemberAccess	info0 -> Registry		534278	0					
ANR	534331	Identifier	info0		534278	0					
ANR	534332	Identifier	Registry		534278	1					
ANR	534333	Identifier	data		534278	1					
ANR	534334	Argument	info1 -> Registry . data		534278	1					
ANR	534335	MemberAccess	info1 -> Registry . data		534278	0					
ANR	534336	PtrMemberAccess	info1 -> Registry		534278	0					
ANR	534337	Identifier	info1		534278	0					
ANR	534338	Identifier	Registry		534278	1					
ANR	534339	Identifier	data		534278	1					
ANR	534340	Argument	info0 -> Registry . size		534278	2					
ANR	534341	MemberAccess	info0 -> Registry . size		534278	0					
ANR	534342	PtrMemberAccess	info0 -> Registry		534278	0					
ANR	534343	Identifier	info0		534278	0					
ANR	534344	Identifier	Registry		534278	1					
ANR	534345	Identifier	size		534278	1					
ANR	534346	ReturnStatement	return false ;	173:8:5879:5891	534278	1	True				
ANR	534347	Identifier	false		534278	0					
ANR	534348	IfStatement	"if ( memcmp ( info0 -> Ordering . data , info1 -> Ordering . data , info0 -> Ordering . size ) )"		534278	4					
ANR	534349	Condition	"memcmp ( info0 -> Ordering . data , info1 -> Ordering . data , info0 -> Ordering . size )"	174:8:5901:5987	534278	0	True				
ANR	534350	CallExpression	"memcmp ( info0 -> Ordering . data , info1 -> Ordering . data , info0 -> Ordering . size )"		534278	0					
ANR	534351	Callee	memcmp		534278	0					
ANR	534352	Identifier	memcmp		534278	0					
ANR	534353	ArgumentList	info0 -> Ordering . data		534278	1					
ANR	534354	Argument	info0 -> Ordering . data		534278	0					
ANR	534355	MemberAccess	info0 -> Ordering . data		534278	0					
ANR	534356	PtrMemberAccess	info0 -> Ordering		534278	0					
ANR	534357	Identifier	info0		534278	0					
ANR	534358	Identifier	Ordering		534278	1					
ANR	534359	Identifier	data		534278	1					
ANR	534360	Argument	info1 -> Ordering . data		534278	1					
ANR	534361	MemberAccess	info1 -> Ordering . data		534278	0					
ANR	534362	PtrMemberAccess	info1 -> Ordering		534278	0					
ANR	534363	Identifier	info1		534278	0					
ANR	534364	Identifier	Ordering		534278	1					
ANR	534365	Identifier	data		534278	1					
ANR	534366	Argument	info0 -> Ordering . size		534278	2					
ANR	534367	MemberAccess	info0 -> Ordering . size		534278	0					
ANR	534368	PtrMemberAccess	info0 -> Ordering		534278	0					
ANR	534369	Identifier	info0		534278	0					
ANR	534370	Identifier	Ordering		534278	1					
ANR	534371	Identifier	size		534278	1					
ANR	534372	ReturnStatement	return false ;	176:8:5998:6010	534278	1	True				
ANR	534373	Identifier	false		534278	0					
ANR	534374	ReturnStatement	return true ;	177:4:6016:6027	534278	5	True				
ANR	534375	Identifier	true		534278	0					
ANR	534376	ReturnType	bool		534278	1					
ANR	534377	Identifier	gs_is_CIDSystemInfo_compatible		534278	2					
ANR	534378	ParameterList	"const gs_cid_system_info_t * info0 , const gs_cid_system_info_t * info1"		534278	3					
ANR	534379	Parameter	const gs_cid_system_info_t * info0	162:31:5457:5489	534278	0	True				
ANR	534380	ParameterType	const gs_cid_system_info_t *		534278	0					
ANR	534381	Identifier	info0		534278	1					
ANR	534382	Parameter	const gs_cid_system_info_t * info1	163:31:5523:5555	534278	1	True				
ANR	534383	ParameterType	const gs_cid_system_info_t *		534278	0					
ANR	534384	Identifier	info1		534278	1					
ANR	534385	CFGEntryNode	ENTRY		534278		True				
ANR	534386	CFGExitNode	EXIT		534278		True				
ANR	534387	Symbol	info0 -> Ordering . size		534278						
ANR	534388	Symbol	NULL		534278						
ANR	534389	Symbol	info1 -> Ordering . size		534278						
ANR	534390	Symbol	info1 -> Registry . size		534278						
ANR	534391	Symbol	false		534278						
ANR	534392	Symbol	info0 -> Ordering		534278						
ANR	534393	Symbol	info1 -> Ordering . data		534278						
ANR	534394	Symbol	info0 -> Ordering . data		534278						
ANR	534395	Symbol	memcmp		534278						
ANR	534396	Symbol	info1 -> Registry . data		534278						
ANR	534397	Symbol	info1 -> Registry		534278						
ANR	534398	Symbol	* info1		534278						
ANR	534399	Symbol	info1 -> Ordering		534278						
ANR	534400	Symbol	* info0		534278						
ANR	534401	Symbol	info1		534278						
ANR	534402	Symbol	true		534278						
ANR	534403	Symbol	info0		534278						
ANR	534404	Symbol	info0 -> Registry		534278						
ANR	534405	Symbol	info0 -> Registry . data		534278						
ANR	534406	Symbol	info0 -> Registry . size		534278						
ANR	534407	Function	gs_font_cid0_enumerate_glyph	185:0:6230:7037							
ANR	534408	FunctionDef	"gs_font_cid0_enumerate_glyph (gs_font * font , int * pindex , gs_glyph_space_t ignore_glyph_space , gs_glyph * pglyph)"		534407	0					
ANR	534409	CompoundStatement		189:0:6404:7037	534407	0					
ANR	534410	Statement	gs_font_cid0	190:4:6410:6421	534407	0	True				
ANR	534411	Statement	*	190:17:6423:6423	534407	1	True				
ANR	534412	Statement	const	190:18:6424:6428	534407	2	True				
ANR	534413	ExpressionStatement	pfont = ( gs_font_cid0 * ) font	190:24:6430:6458	534407	3	True				
ANR	534414	AssignmentExpression	pfont = ( gs_font_cid0 * ) font		534407	0		=			
ANR	534415	Identifier	pfont		534407	0					
ANR	534416	CastExpression	( gs_font_cid0 * ) font		534407	1					
ANR	534417	CastTarget	gs_font_cid0 *		534407	0					
ANR	534418	Identifier	font		534407	1					
ANR	534419	WhileStatement	while ( * pindex < pfont -> cidata . common . CIDCount )		534407	4					
ANR	534420	Condition	* pindex < pfont -> cidata . common . CIDCount	192:11:6472:6510	534407	0	True				
ANR	534421	RelationalExpression	* pindex < pfont -> cidata . common . CIDCount		534407	0		<			
ANR	534422	UnaryOperationExpression	* pindex		534407	0					
ANR	534423	UnaryOperator	*		534407	0					
ANR	534424	Identifier	pindex		534407	1					
ANR	534425	MemberAccess	pfont -> cidata . common . CIDCount		534407	1					
ANR	534426	MemberAccess	pfont -> cidata . common		534407	0					
ANR	534427	PtrMemberAccess	pfont -> cidata		534407	0					
ANR	534428	Identifier	pfont		534407	0					
ANR	534429	Identifier	cidata		534407	1					
ANR	534430	Identifier	common		534407	1					
ANR	534431	Identifier	CIDCount		534407	1					
ANR	534432	CompoundStatement		8:8:236:244	534407	1					
ANR	534433	IdentifierDeclStatement	gs_glyph_data_t gdata ;	193:8:6523:6544	534407	0	True				
ANR	534434	IdentifierDecl	gdata		534407	0					
ANR	534435	IdentifierDeclType	gs_glyph_data_t		534407	0					
ANR	534436	Identifier	gdata		534407	1					
ANR	534437	IdentifierDeclStatement	int fidx ;	194:8:6554:6562	534407	1	True				
ANR	534438	IdentifierDecl	fidx		534407	0					
ANR	534439	IdentifierDeclType	int		534407	0					
ANR	534440	Identifier	fidx		534407	1					
ANR	534441	IdentifierDeclStatement	gs_glyph glyph = ( gs_glyph ) ( GS_MIN_CID_GLYPH + ( * pindex ) ++ ) ;	195:8:6572:6631	534407	2	True				
ANR	534442	IdentifierDecl	glyph = ( gs_glyph ) ( GS_MIN_CID_GLYPH + ( * pindex ) ++ )		534407	0					
ANR	534443	IdentifierDeclType	gs_glyph		534407	0					
ANR	534444	Identifier	glyph		534407	1					
ANR	534445	AssignmentExpression	glyph = ( gs_glyph ) ( GS_MIN_CID_GLYPH + ( * pindex ) ++ )		534407	2		=			
ANR	534446	Identifier	glyph		534407	0					
ANR	534447	CastExpression	( gs_glyph ) ( GS_MIN_CID_GLYPH + ( * pindex ) ++ )		534407	1					
ANR	534448	CastTarget	gs_glyph		534407	0					
ANR	534449	AdditiveExpression	GS_MIN_CID_GLYPH + ( * pindex ) ++		534407	1		+			
ANR	534450	Identifier	GS_MIN_CID_GLYPH		534407	0					
ANR	534451	PostIncDecOperationExpression	( * pindex ) ++		534407	1					
ANR	534452	UnaryOperationExpression	* pindex		534407	0					
ANR	534453	UnaryOperator	*		534407	0					
ANR	534454	Identifier	pindex		534407	1					
ANR	534455	IncDec	++		534407	1					
ANR	534456	IdentifierDeclStatement	int code ;	196:8:6641:6649	534407	3	True				
ANR	534457	IdentifierDecl	code		534407	0					
ANR	534458	IdentifierDeclType	int		534407	0					
ANR	534459	Identifier	code		534407	1					
ANR	534460	ExpressionStatement	gdata . memory = pfont -> memory	198:8:6660:6688	534407	4	True				
ANR	534461	AssignmentExpression	gdata . memory = pfont -> memory		534407	0		=			
ANR	534462	MemberAccess	gdata . memory		534407	0					
ANR	534463	Identifier	gdata		534407	0					
ANR	534464	Identifier	memory		534407	1					
ANR	534465	PtrMemberAccess	pfont -> memory		534407	1					
ANR	534466	Identifier	pfont		534407	0					
ANR	534467	Identifier	memory		534407	1					
ANR	534468	ExpressionStatement	"code = pfont -> cidata . glyph_data ( ( gs_font_base * ) pfont , glyph , & gdata , & fidx )"	199:8:6698:6818	534407	5	True				
ANR	534469	AssignmentExpression	"code = pfont -> cidata . glyph_data ( ( gs_font_base * ) pfont , glyph , & gdata , & fidx )"		534407	0		=			
ANR	534470	Identifier	code		534407	0					
ANR	534471	CallExpression	"pfont -> cidata . glyph_data ( ( gs_font_base * ) pfont , glyph , & gdata , & fidx )"		534407	1					
ANR	534472	Callee	pfont -> cidata . glyph_data		534407	0					
ANR	534473	MemberAccess	pfont -> cidata . glyph_data		534407	0					
ANR	534474	PtrMemberAccess	pfont -> cidata		534407	0					
ANR	534475	Identifier	pfont		534407	0					
ANR	534476	Identifier	cidata		534407	1					
ANR	534477	Identifier	glyph_data		534407	1					
ANR	534478	ArgumentList	( gs_font_base * ) pfont		534407	1					
ANR	534479	Argument	( gs_font_base * ) pfont		534407	0					
ANR	534480	CastExpression	( gs_font_base * ) pfont		534407	0					
ANR	534481	CastTarget	gs_font_base *		534407	0					
ANR	534482	Identifier	pfont		534407	1					
ANR	534483	Argument	glyph		534407	1					
ANR	534484	Identifier	glyph		534407	0					
ANR	534485	Argument	& gdata		534407	2					
ANR	534486	UnaryOperationExpression	& gdata		534407	0					
ANR	534487	UnaryOperator	&		534407	0					
ANR	534488	Identifier	gdata		534407	1					
ANR	534489	Argument	& fidx		534407	3					
ANR	534490	UnaryOperationExpression	& fidx		534407	0					
ANR	534491	UnaryOperator	&		534407	0					
ANR	534492	Identifier	fidx		534407	1					
ANR	534493	IfStatement	if ( code < 0 || gdata . bits . size == 0 )		534407	6					
ANR	534494	Condition	code < 0 || gdata . bits . size == 0	201:12:6832:6863	534407	0	True				
ANR	534495	OrExpression	code < 0 || gdata . bits . size == 0		534407	0		||			
ANR	534496	RelationalExpression	code < 0		534407	0		<			
ANR	534497	Identifier	code		534407	0					
ANR	534498	PrimaryExpression	0		534407	1					
ANR	534499	EqualityExpression	gdata . bits . size == 0		534407	1		==			
ANR	534500	MemberAccess	gdata . bits . size		534407	0					
ANR	534501	MemberAccess	gdata . bits		534407	0					
ANR	534502	Identifier	gdata		534407	0					
ANR	534503	Identifier	bits		534407	1					
ANR	534504	Identifier	size		534407	1					
ANR	534505	PrimaryExpression	0		534407	1					
ANR	534506	ContinueStatement	continue ;	202:12:6878:6886	534407	1	True				
ANR	534507	ExpressionStatement	* pglyph = glyph	203:8:6896:6911	534407	7	True				
ANR	534508	AssignmentExpression	* pglyph = glyph		534407	0		=			
ANR	534509	UnaryOperationExpression	* pglyph		534407	0					
ANR	534510	UnaryOperator	*		534407	0					
ANR	534511	Identifier	pglyph		534407	1					
ANR	534512	Identifier	glyph		534407	1					
ANR	534513	ExpressionStatement	"gs_glyph_data_free ( & gdata , ""gs_font_cid0_enumerate_glyphs"" )"	204:8:6921:6980	534407	8	True				
ANR	534514	CallExpression	"gs_glyph_data_free ( & gdata , ""gs_font_cid0_enumerate_glyphs"" )"		534407	0					
ANR	534515	Callee	gs_glyph_data_free		534407	0					
ANR	534516	Identifier	gs_glyph_data_free		534407	0					
ANR	534517	ArgumentList	& gdata		534407	1					
ANR	534518	Argument	& gdata		534407	0					
ANR	534519	UnaryOperationExpression	& gdata		534407	0					
ANR	534520	UnaryOperator	&		534407	0					
ANR	534521	Identifier	gdata		534407	1					
ANR	534522	Argument	"""gs_font_cid0_enumerate_glyphs"""		534407	1					
ANR	534523	PrimaryExpression	"""gs_font_cid0_enumerate_glyphs"""		534407	0					
ANR	534524	ReturnStatement	return 0 ;	205:8:6990:6998	534407	9	True				
ANR	534525	PrimaryExpression	0		534407	0					
ANR	534526	ExpressionStatement	* pindex = 0	207:4:7010:7021	534407	5	True				
ANR	534527	AssignmentExpression	* pindex = 0		534407	0		=			
ANR	534528	UnaryOperationExpression	* pindex		534407	0					
ANR	534529	UnaryOperator	*		534407	0					
ANR	534530	Identifier	pindex		534407	1					
ANR	534531	PrimaryExpression	0		534407	1					
ANR	534532	ReturnStatement	return 0 ;	208:4:7027:7035	534407	6	True				
ANR	534533	PrimaryExpression	0		534407	0					
ANR	534534	ReturnType	int		534407	1					
ANR	534535	Identifier	gs_font_cid0_enumerate_glyph		534407	2					
ANR	534536	ParameterList	"gs_font * font , int * pindex , gs_glyph_space_t ignore_glyph_space , gs_glyph * pglyph"		534407	3					
ANR	534537	Parameter	gs_font * font	186:29:6263:6275	534407	0	True				
ANR	534538	ParameterType	gs_font *		534407	0					
ANR	534539	Identifier	font		534407	1					
ANR	534540	Parameter	int * pindex	186:44:6278:6288	534407	1	True				
ANR	534541	ParameterType	int *		534407	0					
ANR	534542	Identifier	pindex		534407	1					
ANR	534543	Parameter	gs_glyph_space_t ignore_glyph_space	187:29:6320:6354	534407	2	True				
ANR	534544	ParameterType	gs_glyph_space_t		534407	0					
ANR	534545	Identifier	ignore_glyph_space		534407	1					
ANR	534546	Parameter	gs_glyph * pglyph	188:29:6386:6401	534407	3	True				
ANR	534547	ParameterType	gs_glyph *		534407	0					
ANR	534548	Identifier	pglyph		534407	1					
ANR	534549	CFGEntryNode	ENTRY		534407		True				
ANR	534550	CFGExitNode	EXIT		534407		True				
ANR	534551	Symbol	pglyph		534407						
ANR	534552	Symbol	code		534407						
ANR	534553	Symbol	pfont -> cidata . glyph_data		534407						
ANR	534554	Symbol	pfont -> cidata . common		534407						
ANR	534555	Symbol	pfont -> memory		534407						
ANR	534556	Symbol	pfont		534407						
ANR	534557	Symbol	* pglyph		534407						
ANR	534558	Symbol	pfont -> cidata . common . CIDCount		534407						
ANR	534559	Symbol	gdata . bits		534407						
ANR	534560	Symbol	* pindex		534407						
ANR	534561	Symbol	gdata		534407						
ANR	534562	Symbol	ignore_glyph_space		534407						
ANR	534563	Symbol	pfont -> cidata		534407						
ANR	534564	Symbol	* pfont		534407						
ANR	534565	Symbol	glyph		534407						
ANR	534566	Symbol	& gdata		534407						
ANR	534567	Symbol	fidx		534407						
ANR	534568	Symbol	& fidx		534407						
ANR	534569	Symbol	pindex		534407						
ANR	534570	Symbol	gdata . bits . size		534407						
ANR	534571	Symbol	GS_MIN_CID_GLYPH		534407						
ANR	534572	Symbol	font		534407						
ANR	534573	Symbol	gdata . memory		534407						
ANR	534574	Function	gs_cid0_indexed_font	212:0:7098:7467							
ANR	534575	FunctionDef	"gs_cid0_indexed_font (const gs_font * font , int fidx)"		534574	0					
ANR	534576	CompoundStatement		214:0:7166:7467	534574	0					
ANR	534577	Statement	gs_font_cid0	215:4:7172:7183	534574	0	True				
ANR	534578	Statement	*	215:17:7185:7185	534574	1	True				
ANR	534579	Statement	const	215:18:7186:7190	534574	2	True				
ANR	534580	ExpressionStatement	pfont = ( gs_font_cid0 * ) font	215:24:7192:7220	534574	3	True				
ANR	534581	AssignmentExpression	pfont = ( gs_font_cid0 * ) font		534574	0		=			
ANR	534582	Identifier	pfont		534574	0					
ANR	534583	CastExpression	( gs_font_cid0 * ) font		534574	1					
ANR	534584	CastTarget	gs_font_cid0 *		534574	0					
ANR	534585	Identifier	font		534574	1					
ANR	534586	IfStatement	if ( font -> FontType != ft_CID_encrypted )		534574	4					
ANR	534587	Condition	font -> FontType != ft_CID_encrypted	217:8:7231:7264	534574	0	True				
ANR	534588	EqualityExpression	font -> FontType != ft_CID_encrypted		534574	0		!=			
ANR	534589	PtrMemberAccess	font -> FontType		534574	0					
ANR	534590	Identifier	font		534574	0					
ANR	534591	Identifier	FontType		534574	1					
ANR	534592	Identifier	ft_CID_encrypted		534574	1					
ANR	534593	CompoundStatement		4:44:100:100	534574	1					
ANR	534594	ExpressionStatement	"emprintf1 ( font -> memory , ""Unexpected font type: %d\\n"" , font -> FontType )"	218:8:7277:7382	534574	0	True				
ANR	534595	CallExpression	"emprintf1 ( font -> memory , ""Unexpected font type: %d\\n"" , font -> FontType )"		534574	0					
ANR	534596	Callee	emprintf1		534574	0					
ANR	534597	Identifier	emprintf1		534574	0					
ANR	534598	ArgumentList	font -> memory		534574	1					
ANR	534599	Argument	font -> memory		534574	0					
ANR	534600	PtrMemberAccess	font -> memory		534574	0					
ANR	534601	Identifier	font		534574	0					
ANR	534602	Identifier	memory		534574	1					
ANR	534603	Argument	"""Unexpected font type: %d\\n"""		534574	1					
ANR	534604	PrimaryExpression	"""Unexpected font type: %d\\n"""		534574	0					
ANR	534605	Argument	font -> FontType		534574	2					
ANR	534606	PtrMemberAccess	font -> FontType		534574	0					
ANR	534607	Identifier	font		534574	0					
ANR	534608	Identifier	FontType		534574	1					
ANR	534609	ReturnStatement	return 0 ;	221:8:7392:7400	534574	1	True				
ANR	534610	PrimaryExpression	0		534574	0					
ANR	534611	ReturnStatement	return ( const gs_font * ) ( pfont -> cidata . FDArray [ fidx ] ) ;	223:4:7412:7465	534574	5	True				
ANR	534612	CastExpression	( const gs_font * ) ( pfont -> cidata . FDArray [ fidx ] )		534574	0					
ANR	534613	CastTarget	const gs_font *		534574	0					
ANR	534614	ArrayIndexing	pfont -> cidata . FDArray [ fidx ]		534574	1					
ANR	534615	MemberAccess	pfont -> cidata . FDArray		534574	0					
ANR	534616	PtrMemberAccess	pfont -> cidata		534574	0					
ANR	534617	Identifier	pfont		534574	0					
ANR	534618	Identifier	cidata		534574	1					
ANR	534619	Identifier	FDArray		534574	1					
ANR	534620	Identifier	fidx		534574	1					
ANR	534621	ReturnType	const gs_font *		534574	1					
ANR	534622	Identifier	gs_cid0_indexed_font		534574	2					
ANR	534623	ParameterList	"const gs_font * font , int fidx"		534574	3					
ANR	534624	Parameter	const gs_font * font	213:21:7135:7153	534574	0	True				
ANR	534625	ParameterType	const gs_font *		534574	0					
ANR	534626	Identifier	font		534574	1					
ANR	534627	Parameter	int fidx	213:42:7156:7163	534574	1	True				
ANR	534628	ParameterType	int		534574	0					
ANR	534629	Identifier	fidx		534574	1					
ANR	534630	CFGEntryNode	ENTRY		534574		True				
ANR	534631	CFGExitNode	EXIT		534574		True				
ANR	534632	Symbol	* pfont -> cidata		534574						
ANR	534633	Symbol	pfont -> cidata . FDArray		534574						
ANR	534634	Symbol	pfont		534574						
ANR	534635	Symbol	ft_CID_encrypted		534574						
ANR	534636	Symbol	* * pfont		534574						
ANR	534637	Symbol	* pfont -> cidata . FDArray		534574						
ANR	534638	Symbol	pfont -> cidata		534574						
ANR	534639	Symbol	* pfont		534574						
ANR	534640	Symbol	font -> memory		534574						
ANR	534641	Symbol	* fidx		534574						
ANR	534642	Symbol	font -> FontType		534574						
ANR	534643	Symbol	fidx		534574						
ANR	534644	Symbol	* font		534574						
ANR	534645	Symbol	font		534574						
ANR	534646	Function	gs_cid0_has_type2	227:0:7523:8004							
ANR	534647	FunctionDef	gs_cid0_has_type2 (const gs_font * font)		534646	0					
ANR	534648	CompoundStatement		229:0:7567:8004	534646	0					
ANR	534649	Statement	gs_font_cid0	230:4:7573:7584	534646	0	True				
ANR	534650	Statement	*	230:17:7586:7586	534646	1	True				
ANR	534651	Statement	const	230:18:7587:7591	534646	2	True				
ANR	534652	ExpressionStatement	pfont = ( gs_font_cid0 * ) font	230:24:7593:7621	534646	3	True				
ANR	534653	AssignmentExpression	pfont = ( gs_font_cid0 * ) font		534646	0		=			
ANR	534654	Identifier	pfont		534646	0					
ANR	534655	CastExpression	( gs_font_cid0 * ) font		534646	1					
ANR	534656	CastTarget	gs_font_cid0 *		534646	0					
ANR	534657	Identifier	font		534646	1					
ANR	534658	IdentifierDeclStatement	int i ;	231:4:7627:7632	534646	4	True				
ANR	534659	IdentifierDecl	i		534646	0					
ANR	534660	IdentifierDeclType	int		534646	0					
ANR	534661	Identifier	i		534646	1					
ANR	534662	IfStatement	if ( font -> FontType != ft_CID_encrypted )		534646	5					
ANR	534663	Condition	font -> FontType != ft_CID_encrypted	233:8:7643:7676	534646	0	True				
ANR	534664	EqualityExpression	font -> FontType != ft_CID_encrypted		534646	0		!=			
ANR	534665	PtrMemberAccess	font -> FontType		534646	0					
ANR	534666	Identifier	font		534646	0					
ANR	534667	Identifier	FontType		534646	1					
ANR	534668	Identifier	ft_CID_encrypted		534646	1					
ANR	534669	CompoundStatement		5:44:111:111	534646	1					
ANR	534670	ExpressionStatement	"emprintf1 ( font -> memory , ""Unexpected font type: %d\\n"" , font -> FontType )"	234:8:7689:7794	534646	0	True				
ANR	534671	CallExpression	"emprintf1 ( font -> memory , ""Unexpected font type: %d\\n"" , font -> FontType )"		534646	0					
ANR	534672	Callee	emprintf1		534646	0					
ANR	534673	Identifier	emprintf1		534646	0					
ANR	534674	ArgumentList	font -> memory		534646	1					
ANR	534675	Argument	font -> memory		534646	0					
ANR	534676	PtrMemberAccess	font -> memory		534646	0					
ANR	534677	Identifier	font		534646	0					
ANR	534678	Identifier	memory		534646	1					
ANR	534679	Argument	"""Unexpected font type: %d\\n"""		534646	1					
ANR	534680	PrimaryExpression	"""Unexpected font type: %d\\n"""		534646	0					
ANR	534681	Argument	font -> FontType		534646	2					
ANR	534682	PtrMemberAccess	font -> FontType		534646	0					
ANR	534683	Identifier	font		534646	0					
ANR	534684	Identifier	FontType		534646	1					
ANR	534685	ReturnStatement	return false ;	237:8:7804:7816	534646	1	True				
ANR	534686	Identifier	false		534646	0					
ANR	534687	ForStatement	for ( i = 0 ; i < pfont -> cidata . FDArray_size ; i ++ )		534646	6					
ANR	534688	ForInit	i = 0 ;	239:9:7833:7838	534646	0	True				
ANR	534689	AssignmentExpression	i = 0		534646	0		=			
ANR	534690	Identifier	i		534646	0					
ANR	534691	PrimaryExpression	0		534646	1					
ANR	534692	Condition	i < pfont -> cidata . FDArray_size	239:16:7840:7869	534646	1	True				
ANR	534693	RelationalExpression	i < pfont -> cidata . FDArray_size		534646	0		<			
ANR	534694	Identifier	i		534646	0					
ANR	534695	MemberAccess	pfont -> cidata . FDArray_size		534646	1					
ANR	534696	PtrMemberAccess	pfont -> cidata		534646	0					
ANR	534697	Identifier	pfont		534646	0					
ANR	534698	Identifier	cidata		534646	1					
ANR	534699	Identifier	FDArray_size		534646	1					
ANR	534700	PostIncDecOperationExpression	i ++	239:48:7872:7874	534646	2	True				
ANR	534701	Identifier	i		534646	0					
ANR	534702	IncDec	++		534646	1					
ANR	534703	IfStatement	if ( ( ( const gs_font * ) pfont -> cidata . FDArray [ i ] ) -> FontType == ft_encrypted2 )		534646	3					
ANR	534704	Condition	( ( const gs_font * ) pfont -> cidata . FDArray [ i ] ) -> FontType == ft_encrypted2	240:12:7889:7958	534646	0	True				
ANR	534705	EqualityExpression	( ( const gs_font * ) pfont -> cidata . FDArray [ i ] ) -> FontType == ft_encrypted2		534646	0		==			
ANR	534706	PtrMemberAccess	( ( const gs_font * ) pfont -> cidata . FDArray [ i ] ) -> FontType		534646	0					
ANR	534707	CastExpression	( const gs_font * ) pfont -> cidata . FDArray [ i ]		534646	0					
ANR	534708	CastTarget	const gs_font *		534646	0					
ANR	534709	ArrayIndexing	pfont -> cidata . FDArray [ i ]		534646	1					
ANR	534710	MemberAccess	pfont -> cidata . FDArray		534646	0					
ANR	534711	PtrMemberAccess	pfont -> cidata		534646	0					
ANR	534712	Identifier	pfont		534646	0					
ANR	534713	Identifier	cidata		534646	1					
ANR	534714	Identifier	FDArray		534646	1					
ANR	534715	Identifier	i		534646	1					
ANR	534716	Identifier	FontType		534646	1					
ANR	534717	Identifier	ft_encrypted2		534646	1					
ANR	534718	ReturnStatement	return true ;	241:12:7973:7984	534646	1	True				
ANR	534719	Identifier	true		534646	0					
ANR	534720	ReturnStatement	return false ;	242:4:7990:8002	534646	7	True				
ANR	534721	Identifier	false		534646	0					
ANR	534722	ReturnType	bool		534646	1					
ANR	534723	Identifier	gs_cid0_has_type2		534646	2					
ANR	534724	ParameterList	const gs_font * font		534646	3					
ANR	534725	Parameter	const gs_font * font	228:18:7546:7564	534646	0	True				
ANR	534726	ParameterType	const gs_font *		534646	0					
ANR	534727	Identifier	font		534646	1					
ANR	534728	CFGEntryNode	ENTRY		534646		True				
ANR	534729	CFGExitNode	EXIT		534646		True				
ANR	534730	Symbol	* pfont -> cidata		534646						
ANR	534731	Symbol	* * i		534646						
ANR	534732	Symbol	pfont -> cidata . FDArray_size		534646						
ANR	534733	Symbol	pfont -> cidata . FDArray		534646						
ANR	534734	Symbol	pfont		534646						
ANR	534735	Symbol	( ( const gs_font * ) pfont -> cidata . FDArray [ i ] ) -> FontType		534646						
ANR	534736	Symbol	false		534646						
ANR	534737	Symbol	i		534646						
ANR	534738	Symbol	ft_CID_encrypted		534646						
ANR	534739	Symbol	* * pfont		534646						
ANR	534740	Symbol	* * pfont -> cidata		534646						
ANR	534741	Symbol	* pfont -> cidata . FDArray		534646						
ANR	534742	Symbol	* * pfont -> cidata . FDArray		534646						
ANR	534743	Symbol	pfont -> cidata		534646						
ANR	534744	Symbol	* pfont		534646						
ANR	534745	Symbol	font -> memory		534646						
ANR	534746	Symbol	* i		534646						
ANR	534747	Symbol	* * * pfont		534646						
ANR	534748	Symbol	font -> FontType		534646						
ANR	534749	Symbol	ft_encrypted2		534646						
ANR	534750	Symbol	true		534646						
ANR	534751	Symbol	* font		534646						
ANR	534752	Symbol	font		534646						
