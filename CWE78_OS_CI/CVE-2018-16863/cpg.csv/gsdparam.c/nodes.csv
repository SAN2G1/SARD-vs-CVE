command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5050542	File	data/converged/CVE-2018-16863_ghostpdl/gsdparam.c								
ANR	5050543	DeclStmt									
ANR	5050544	Decl							bool	"bool ( gx_device * , byte * )"	param_HWColorMap
ANR	5050545	Function	gs_get_device_or_hw_params	37:0:1201:2245							
ANR	5050546	FunctionDef	"gs_get_device_or_hw_params (gx_device * orig_dev , gs_param_list * plist , bool is_hardware)"		5050545	0					
ANR	5050547	CompoundStatement		40:0:1322:2245	5050545	0					
ANR	5050548	IdentifierDeclStatement	gx_device * dev ;	45:4:1430:1444	5050545	0	True				
ANR	5050549	IdentifierDecl	* dev		5050545	0					
ANR	5050550	IdentifierDeclType	gx_device *		5050545	0					
ANR	5050551	Identifier	dev		5050545	1					
ANR	5050552	IdentifierDeclStatement	int code = 0 ;	46:4:1450:1462	5050545	1	True				
ANR	5050553	IdentifierDecl	code = 0		5050545	0					
ANR	5050554	IdentifierDeclType	int		5050545	0					
ANR	5050555	Identifier	code		5050545	1					
ANR	5050556	AssignmentExpression	code = 0		5050545	2		=			
ANR	5050557	Identifier	code		5050545	0					
ANR	5050558	PrimaryExpression	0		5050545	1					
ANR	5050559	IfStatement	if ( orig_dev -> memory )		5050545	2					
ANR	5050560	Condition	orig_dev -> memory	48:8:1473:1488	5050545	0	True				
ANR	5050561	PtrMemberAccess	orig_dev -> memory		5050545	0					
ANR	5050562	Identifier	orig_dev		5050545	0					
ANR	5050563	Identifier	memory		5050545	1					
ANR	5050564	ExpressionStatement	dev = orig_dev	49:8:1499:1513	5050545	1	True				
ANR	5050565	AssignmentExpression	dev = orig_dev		5050545	0		=			
ANR	5050566	Identifier	dev		5050545	0					
ANR	5050567	Identifier	orig_dev		5050545	1					
ANR	5050568	ElseStatement	else		5050545	0					
ANR	5050569	CompoundStatement		11:9:201:201	5050545	0					
ANR	5050570	ExpressionStatement	"code = gs_copydevice ( & dev , orig_dev , plist -> memory )"	51:8:1534:1585	5050545	0	True				
ANR	5050571	AssignmentExpression	"code = gs_copydevice ( & dev , orig_dev , plist -> memory )"		5050545	0		=			
ANR	5050572	Identifier	code		5050545	0					
ANR	5050573	CallExpression	"gs_copydevice ( & dev , orig_dev , plist -> memory )"		5050545	1					
ANR	5050574	Callee	gs_copydevice		5050545	0					
ANR	5050575	Identifier	gs_copydevice		5050545	0					
ANR	5050576	ArgumentList	& dev		5050545	1					
ANR	5050577	Argument	& dev		5050545	0					
ANR	5050578	UnaryOperationExpression	& dev		5050545	0					
ANR	5050579	UnaryOperator	&		5050545	0					
ANR	5050580	Identifier	dev		5050545	1					
ANR	5050581	Argument	orig_dev		5050545	1					
ANR	5050582	Identifier	orig_dev		5050545	0					
ANR	5050583	Argument	plist -> memory		5050545	2					
ANR	5050584	PtrMemberAccess	plist -> memory		5050545	0					
ANR	5050585	Identifier	plist		5050545	0					
ANR	5050586	Identifier	memory		5050545	1					
ANR	5050587	IfStatement	if ( code < 0 )		5050545	1					
ANR	5050588	Condition	code < 0	52:12:1599:1606	5050545	0	True				
ANR	5050589	RelationalExpression	code < 0		5050545	0		<			
ANR	5050590	Identifier	code		5050545	0					
ANR	5050591	PrimaryExpression	0		5050545	1					
ANR	5050592	ReturnStatement	return code ;	53:12:1621:1632	5050545	1	True				
ANR	5050593	Identifier	code		5050545	0					
ANR	5050594	ExpressionStatement	gx_device_set_procs ( dev )	55:4:1644:1668	5050545	3	True				
ANR	5050595	CallExpression	gx_device_set_procs ( dev )		5050545	0					
ANR	5050596	Callee	gx_device_set_procs		5050545	0					
ANR	5050597	Identifier	gx_device_set_procs		5050545	0					
ANR	5050598	ArgumentList	dev		5050545	1					
ANR	5050599	Argument	dev		5050545	0					
ANR	5050600	Identifier	dev		5050545	0					
ANR	5050601	ExpressionStatement	"fill_dev_proc ( dev , get_params , gx_default_get_params )"	56:4:1674:1727	5050545	4	True				
ANR	5050602	CallExpression	"fill_dev_proc ( dev , get_params , gx_default_get_params )"		5050545	0					
ANR	5050603	Callee	fill_dev_proc		5050545	0					
ANR	5050604	Identifier	fill_dev_proc		5050545	0					
ANR	5050605	ArgumentList	dev		5050545	1					
ANR	5050606	Argument	dev		5050545	0					
ANR	5050607	Identifier	dev		5050545	0					
ANR	5050608	Argument	get_params		5050545	1					
ANR	5050609	Identifier	get_params		5050545	0					
ANR	5050610	Argument	gx_default_get_params		5050545	2					
ANR	5050611	Identifier	gx_default_get_params		5050545	0					
ANR	5050612	ExpressionStatement	"fill_dev_proc ( dev , get_page_device , gx_default_get_page_device )"	57:4:1733:1796	5050545	5	True				
ANR	5050613	CallExpression	"fill_dev_proc ( dev , get_page_device , gx_default_get_page_device )"		5050545	0					
ANR	5050614	Callee	fill_dev_proc		5050545	0					
ANR	5050615	Identifier	fill_dev_proc		5050545	0					
ANR	5050616	ArgumentList	dev		5050545	1					
ANR	5050617	Argument	dev		5050545	0					
ANR	5050618	Identifier	dev		5050545	0					
ANR	5050619	Argument	get_page_device		5050545	1					
ANR	5050620	Identifier	get_page_device		5050545	0					
ANR	5050621	Argument	gx_default_get_page_device		5050545	2					
ANR	5050622	Identifier	gx_default_get_page_device		5050545	0					
ANR	5050623	ExpressionStatement	"fill_dev_proc ( dev , get_alpha_bits , gx_default_get_alpha_bits )"	58:4:1802:1863	5050545	6	True				
ANR	5050624	CallExpression	"fill_dev_proc ( dev , get_alpha_bits , gx_default_get_alpha_bits )"		5050545	0					
ANR	5050625	Callee	fill_dev_proc		5050545	0					
ANR	5050626	Identifier	fill_dev_proc		5050545	0					
ANR	5050627	ArgumentList	dev		5050545	1					
ANR	5050628	Argument	dev		5050545	0					
ANR	5050629	Identifier	dev		5050545	0					
ANR	5050630	Argument	get_alpha_bits		5050545	1					
ANR	5050631	Identifier	get_alpha_bits		5050545	0					
ANR	5050632	Argument	gx_default_get_alpha_bits		5050545	2					
ANR	5050633	Identifier	gx_default_get_alpha_bits		5050545	0					
ANR	5050634	IfStatement	if ( is_hardware )		5050545	7					
ANR	5050635	Condition	is_hardware	59:8:1873:1883	5050545	0	True				
ANR	5050636	Identifier	is_hardware		5050545	0					
ANR	5050637	CompoundStatement		20:21:563:563	5050545	1					
ANR	5050638	IfStatement	"if ( dev_proc ( dev , get_hardware_params ) != NULL )"		5050545	0					
ANR	5050639	Condition	"dev_proc ( dev , get_hardware_params ) != NULL"	60:12:1900:1941	5050545	0	True				
ANR	5050640	EqualityExpression	"dev_proc ( dev , get_hardware_params ) != NULL"		5050545	0		!=			
ANR	5050641	CallExpression	"dev_proc ( dev , get_hardware_params )"		5050545	0					
ANR	5050642	Callee	dev_proc		5050545	0					
ANR	5050643	Identifier	dev_proc		5050545	0					
ANR	5050644	ArgumentList	dev		5050545	1					
ANR	5050645	Argument	dev		5050545	0					
ANR	5050646	Identifier	dev		5050545	0					
ANR	5050647	Argument	get_hardware_params		5050545	1					
ANR	5050648	Identifier	get_hardware_params		5050545	0					
ANR	5050649	Identifier	NULL		5050545	1					
ANR	5050650	ExpressionStatement	"code = ( * dev_proc ( dev , get_hardware_params ) ) ( dev , plist )"	61:12:1956:2013	5050545	1	True				
ANR	5050651	AssignmentExpression	"code = ( * dev_proc ( dev , get_hardware_params ) ) ( dev , plist )"		5050545	0		=			
ANR	5050652	Identifier	code		5050545	0					
ANR	5050653	CallExpression	"( * dev_proc ( dev , get_hardware_params ) ) ( dev , plist )"		5050545	1					
ANR	5050654	Callee	"* dev_proc ( dev , get_hardware_params )"		5050545	0					
ANR	5050655	UnaryOperationExpression	"* dev_proc ( dev , get_hardware_params )"		5050545	0					
ANR	5050656	UnaryOperator	*		5050545	0					
ANR	5050657	CallExpression	"dev_proc ( dev , get_hardware_params )"		5050545	1					
ANR	5050658	Callee	dev_proc		5050545	0					
ANR	5050659	Identifier	dev_proc		5050545	0					
ANR	5050660	ArgumentList	dev		5050545	1					
ANR	5050661	Argument	dev		5050545	0					
ANR	5050662	Identifier	dev		5050545	0					
ANR	5050663	Argument	get_hardware_params		5050545	1					
ANR	5050664	Identifier	get_hardware_params		5050545	0					
ANR	5050665	ArgumentList	dev		5050545	1					
ANR	5050666	Argument	dev		5050545	0					
ANR	5050667	Identifier	dev		5050545	0					
ANR	5050668	Argument	plist		5050545	1					
ANR	5050669	Identifier	plist		5050545	0					
ANR	5050670	ElseStatement	else		5050545	0					
ANR	5050671	CompoundStatement		23:11:703:703	5050545	0					
ANR	5050672	IfStatement	"if ( dev_proc ( dev , get_params ) != NULL )"		5050545	0					
ANR	5050673	Condition	"dev_proc ( dev , get_params ) != NULL"	63:12:2040:2072	5050545	0	True				
ANR	5050674	EqualityExpression	"dev_proc ( dev , get_params ) != NULL"		5050545	0		!=			
ANR	5050675	CallExpression	"dev_proc ( dev , get_params )"		5050545	0					
ANR	5050676	Callee	dev_proc		5050545	0					
ANR	5050677	Identifier	dev_proc		5050545	0					
ANR	5050678	ArgumentList	dev		5050545	1					
ANR	5050679	Argument	dev		5050545	0					
ANR	5050680	Identifier	dev		5050545	0					
ANR	5050681	Argument	get_params		5050545	1					
ANR	5050682	Identifier	get_params		5050545	0					
ANR	5050683	Identifier	NULL		5050545	1					
ANR	5050684	ExpressionStatement	"code = ( * dev_proc ( dev , get_params ) ) ( dev , plist )"	64:12:2087:2135	5050545	1	True				
ANR	5050685	AssignmentExpression	"code = ( * dev_proc ( dev , get_params ) ) ( dev , plist )"		5050545	0		=			
ANR	5050686	Identifier	code		5050545	0					
ANR	5050687	CallExpression	"( * dev_proc ( dev , get_params ) ) ( dev , plist )"		5050545	1					
ANR	5050688	Callee	"* dev_proc ( dev , get_params )"		5050545	0					
ANR	5050689	UnaryOperationExpression	"* dev_proc ( dev , get_params )"		5050545	0					
ANR	5050690	UnaryOperator	*		5050545	0					
ANR	5050691	CallExpression	"dev_proc ( dev , get_params )"		5050545	1					
ANR	5050692	Callee	dev_proc		5050545	0					
ANR	5050693	Identifier	dev_proc		5050545	0					
ANR	5050694	ArgumentList	dev		5050545	1					
ANR	5050695	Argument	dev		5050545	0					
ANR	5050696	Identifier	dev		5050545	0					
ANR	5050697	Argument	get_params		5050545	1					
ANR	5050698	Identifier	get_params		5050545	0					
ANR	5050699	ArgumentList	dev		5050545	1					
ANR	5050700	Argument	dev		5050545	0					
ANR	5050701	Identifier	dev		5050545	0					
ANR	5050702	Argument	plist		5050545	1					
ANR	5050703	Identifier	plist		5050545	0					
ANR	5050704	IfStatement	if ( dev != orig_dev )		5050545	8					
ANR	5050705	Condition	dev != orig_dev	66:8:2151:2165	5050545	0	True				
ANR	5050706	EqualityExpression	dev != orig_dev		5050545	0		!=			
ANR	5050707	Identifier	dev		5050545	0					
ANR	5050708	Identifier	orig_dev		5050545	1					
ANR	5050709	ExpressionStatement	"gx_device_retain ( dev , false )"	67:8:2176:2204	5050545	1	True				
ANR	5050710	CallExpression	"gx_device_retain ( dev , false )"		5050545	0					
ANR	5050711	Callee	gx_device_retain		5050545	0					
ANR	5050712	Identifier	gx_device_retain		5050545	0					
ANR	5050713	ArgumentList	dev		5050545	1					
ANR	5050714	Argument	dev		5050545	0					
ANR	5050715	Identifier	dev		5050545	0					
ANR	5050716	Argument	false		5050545	1					
ANR	5050717	Identifier	false		5050545	0					
ANR	5050718	ReturnStatement	return code ;	68:4:2232:2243	5050545	9	True				
ANR	5050719	Identifier	code		5050545	0					
ANR	5050720	ReturnType	int		5050545	1					
ANR	5050721	Identifier	gs_get_device_or_hw_params		5050545	2					
ANR	5050722	ParameterList	"gx_device * orig_dev , gs_param_list * plist , bool is_hardware"		5050545	3					
ANR	5050723	Parameter	gx_device * orig_dev	38:27:1232:1251	5050545	0	True				
ANR	5050724	ParameterType	gx_device *		5050545	0					
ANR	5050725	Identifier	orig_dev		5050545	1					
ANR	5050726	Parameter	gs_param_list * plist	38:49:1254:1274	5050545	1	True				
ANR	5050727	ParameterType	gs_param_list *		5050545	0					
ANR	5050728	Identifier	plist		5050545	1					
ANR	5050729	Parameter	bool is_hardware	39:27:1304:1319	5050545	2	True				
ANR	5050730	ParameterType	bool		5050545	0					
ANR	5050731	Identifier	is_hardware		5050545	1					
ANR	5050732	CFGEntryNode	ENTRY		5050545		True				
ANR	5050733	CFGExitNode	EXIT		5050545		True				
ANR	5050734	Symbol	orig_dev -> memory		5050545						
ANR	5050735	Symbol	get_params		5050545						
ANR	5050736	Symbol	code		5050545						
ANR	5050737	Symbol	NULL		5050545						
ANR	5050738	Symbol	* orig_dev		5050545						
ANR	5050739	Symbol	* plist		5050545						
ANR	5050740	Symbol	* dev_proc		5050545						
ANR	5050741	Symbol	gs_copydevice		5050545						
ANR	5050742	Symbol	get_alpha_bits		5050545						
ANR	5050743	Symbol	false		5050545						
ANR	5050744	Symbol	get_page_device		5050545						
ANR	5050745	Symbol	"* dev_proc ( dev , get_params )"		5050545						
ANR	5050746	Symbol	gx_default_get_params		5050545						
ANR	5050747	Symbol	plist		5050545						
ANR	5050748	Symbol	gx_default_get_page_device		5050545						
ANR	5050749	Symbol	dev		5050545						
ANR	5050750	Symbol	"* dev_proc ( dev , get_hardware_params )"		5050545						
ANR	5050751	Symbol	is_hardware		5050545						
ANR	5050752	Symbol	dev_proc		5050545						
ANR	5050753	Symbol	gx_default_get_alpha_bits		5050545						
ANR	5050754	Symbol	get_hardware_params		5050545						
ANR	5050755	Symbol	orig_dev		5050545						
ANR	5050756	Symbol	plist -> memory		5050545						
ANR	5050757	Symbol	& dev		5050545						
ANR	5050758	Function	gx_default_get_param	71:0:2248:20242							
ANR	5050759	FunctionDef	"gx_default_get_param (gx_device * dev , char * Param , void * list)"		5050758	0					
ANR	5050760	CompoundStatement		72:0:2314:20242	5050758	0					
ANR	5050761	IdentifierDeclStatement	gs_param_list * plist = ( gs_param_list * ) list ;	73:4:2320:2365	5050758	0	True				
ANR	5050762	IdentifierDecl	* plist = ( gs_param_list * ) list		5050758	0					
ANR	5050763	IdentifierDeclType	gs_param_list *		5050758	0					
ANR	5050764	Identifier	plist		5050758	1					
ANR	5050765	AssignmentExpression	* plist = ( gs_param_list * ) list		5050758	2		=			
ANR	5050766	Identifier	plist		5050758	0					
ANR	5050767	CastExpression	( gs_param_list * ) list		5050758	1					
ANR	5050768	CastTarget	gs_param_list *		5050758	0					
ANR	5050769	Identifier	list		5050758	1					
ANR	5050770	IdentifierDeclStatement	"int k , colors = dev -> color_info . num_components ;"	74:4:2371:2417	5050758	1	True				
ANR	5050771	IdentifierDecl	k		5050758	0					
ANR	5050772	IdentifierDeclType	int		5050758	0					
ANR	5050773	Identifier	k		5050758	1					
ANR	5050774	IdentifierDecl	colors = dev -> color_info . num_components		5050758	1					
ANR	5050775	IdentifierDeclType	int		5050758	0					
ANR	5050776	Identifier	colors		5050758	1					
ANR	5050777	AssignmentExpression	colors = dev -> color_info . num_components		5050758	2		=			
ANR	5050778	Identifier	colors		5050758	0					
ANR	5050779	MemberAccess	dev -> color_info . num_components		5050758	1					
ANR	5050780	PtrMemberAccess	dev -> color_info		5050758	0					
ANR	5050781	Identifier	dev		5050758	0					
ANR	5050782	Identifier	color_info		5050758	1					
ANR	5050783	Identifier	num_components		5050758	1					
ANR	5050784	IdentifierDeclStatement	gs_param_string profile_array [ NUM_DEVICE_PROFILES ] ;	75:4:2423:2473	5050758	2	True				
ANR	5050785	IdentifierDecl	profile_array [ NUM_DEVICE_PROFILES ]		5050758	0					
ANR	5050786	IdentifierDeclType	gs_param_string [ NUM_DEVICE_PROFILES ]		5050758	0					
ANR	5050787	Identifier	profile_array		5050758	1					
ANR	5050788	Identifier	NUM_DEVICE_PROFILES		5050758	2					
ANR	5050789	IdentifierDeclStatement	"gs_param_string postren_profile , blend_profile ;"	76:4:2479:2525	5050758	3	True				
ANR	5050790	IdentifierDecl	postren_profile		5050758	0					
ANR	5050791	IdentifierDeclType	gs_param_string		5050758	0					
ANR	5050792	Identifier	postren_profile		5050758	1					
ANR	5050793	IdentifierDecl	blend_profile		5050758	1					
ANR	5050794	IdentifierDeclType	gs_param_string		5050758	0					
ANR	5050795	Identifier	blend_profile		5050758	1					
ANR	5050796	IdentifierDeclStatement	"gs_param_string proof_profile , link_profile , icc_colorants ;"	77:4:2531:2589	5050758	4	True				
ANR	5050797	IdentifierDecl	proof_profile		5050758	0					
ANR	5050798	IdentifierDeclType	gs_param_string		5050758	0					
ANR	5050799	Identifier	proof_profile		5050758	1					
ANR	5050800	IdentifierDecl	link_profile		5050758	1					
ANR	5050801	IdentifierDeclType	gs_param_string		5050758	0					
ANR	5050802	Identifier	link_profile		5050758	1					
ANR	5050803	IdentifierDecl	icc_colorants		5050758	2					
ANR	5050804	IdentifierDeclType	gs_param_string		5050758	0					
ANR	5050805	Identifier	icc_colorants		5050758	1					
ANR	5050806	IdentifierDeclStatement	gsicc_rendering_intents_t profile_intents [ NUM_DEVICE_PROFILES ] ;	78:4:2595:2657	5050758	5	True				
ANR	5050807	IdentifierDecl	profile_intents [ NUM_DEVICE_PROFILES ]		5050758	0					
ANR	5050808	IdentifierDeclType	gsicc_rendering_intents_t [ NUM_DEVICE_PROFILES ]		5050758	0					
ANR	5050809	Identifier	profile_intents		5050758	1					
ANR	5050810	Identifier	NUM_DEVICE_PROFILES		5050758	2					
ANR	5050811	IdentifierDeclStatement	gsicc_blackptcomp_t blackptcomps [ NUM_DEVICE_PROFILES ] ;	79:4:2663:2716	5050758	6	True				
ANR	5050812	IdentifierDecl	blackptcomps [ NUM_DEVICE_PROFILES ]		5050758	0					
ANR	5050813	IdentifierDeclType	gsicc_blackptcomp_t [ NUM_DEVICE_PROFILES ]		5050758	0					
ANR	5050814	Identifier	blackptcomps		5050758	1					
ANR	5050815	Identifier	NUM_DEVICE_PROFILES		5050758	2					
ANR	5050816	IdentifierDeclStatement	gsicc_blackpreserve_t blackpreserve [ NUM_DEVICE_PROFILES ] ;	80:4:2722:2778	5050758	7	True				
ANR	5050817	IdentifierDecl	blackpreserve [ NUM_DEVICE_PROFILES ]		5050758	0					
ANR	5050818	IdentifierDeclType	gsicc_blackpreserve_t [ NUM_DEVICE_PROFILES ]		5050758	0					
ANR	5050819	Identifier	blackpreserve		5050758	1					
ANR	5050820	Identifier	NUM_DEVICE_PROFILES		5050758	2					
ANR	5050821	IdentifierDeclStatement	int color_accuracy = MAX_COLOR_ACCURACY ;	81:4:2784:2823	5050758	8	True				
ANR	5050822	IdentifierDecl	color_accuracy = MAX_COLOR_ACCURACY		5050758	0					
ANR	5050823	IdentifierDeclType	int		5050758	0					
ANR	5050824	Identifier	color_accuracy		5050758	1					
ANR	5050825	AssignmentExpression	color_accuracy = MAX_COLOR_ACCURACY		5050758	2		=			
ANR	5050826	Identifier	MAX_COLOR_ACCURACY		5050758	0					
ANR	5050827	Identifier	MAX_COLOR_ACCURACY		5050758	1					
ANR	5050828	IdentifierDeclStatement	int depth = dev -> color_info . depth ;	82:4:2829:2862	5050758	9	True				
ANR	5050829	IdentifierDecl	depth = dev -> color_info . depth		5050758	0					
ANR	5050830	IdentifierDeclType	int		5050758	0					
ANR	5050831	Identifier	depth		5050758	1					
ANR	5050832	AssignmentExpression	depth = dev -> color_info . depth		5050758	2		=			
ANR	5050833	Identifier	depth		5050758	0					
ANR	5050834	MemberAccess	dev -> color_info . depth		5050758	1					
ANR	5050835	PtrMemberAccess	dev -> color_info		5050758	0					
ANR	5050836	Identifier	dev		5050758	0					
ANR	5050837	Identifier	color_info		5050758	1					
ANR	5050838	Identifier	depth		5050758	1					
ANR	5050839	IdentifierDeclStatement	cmm_dev_profile_t * dev_profile ;	83:4:2868:2898	5050758	10	True				
ANR	5050840	IdentifierDecl	* dev_profile		5050758	0					
ANR	5050841	IdentifierDeclType	cmm_dev_profile_t *		5050758	0					
ANR	5050842	Identifier	dev_profile		5050758	1					
ANR	5050843	IdentifierDeclStatement	char null_str [ 1 ] = { '\\0' } ;	84:4:2904:2927	5050758	11	True				
ANR	5050844	IdentifierDecl	null_str [ 1 ] = { '\\0' }		5050758	0					
ANR	5050845	IdentifierDeclType	char [ 1 ]		5050758	0					
ANR	5050846	Identifier	null_str		5050758	1					
ANR	5050847	PrimaryExpression	1		5050758	2					
ANR	5050848	AssignmentExpression	null_str [ 1 ] = { '\\0' }		5050758	3		=			
ANR	5050849	Identifier	null_str		5050758	0					
ANR	5050850	InitializerList	'\\0'		5050758	1					
ANR	5050851	PrimaryExpression	'\\0'		5050758	0					
ANR	5050852	IdentifierDeclStatement	"define set_param_array ( a , d , s ) ( a . data = d , a . size = s , a . persistent = false ) ;"	85:1:2930:3011	5050758	12	True				
ANR	5050853	IdentifierDecl	"set_param_array ( a , d , s ) ( a . data = d , a . size = s , a . persistent = false )"		5050758	0					
ANR	5050854	IdentifierDeclType	"define ( a , d , s )"		5050758	0					
ANR	5050855	Identifier	set_param_array		5050758	1					
ANR	5050856	Expression	"a . data = d , a . size = s , a . persistent = false"		5050758	2					
ANR	5050857	AssignmentExpression	a . data = d		5050758	0		=			
ANR	5050858	MemberAccess	a . data		5050758	0					
ANR	5050859	Identifier	a		5050758	0					
ANR	5050860	Identifier	data		5050758	1					
ANR	5050861	Identifier	d		5050758	1					
ANR	5050862	Expression	"a . size = s , a . persistent = false"		5050758	1					
ANR	5050863	AssignmentExpression	a . size = s		5050758	0		=			
ANR	5050864	MemberAccess	a . size		5050758	0					
ANR	5050865	Identifier	a		5050758	0					
ANR	5050866	Identifier	size		5050758	1					
ANR	5050867	Identifier	s		5050758	1					
ANR	5050868	AssignmentExpression	a . persistent = false		5050758	1		=			
ANR	5050869	MemberAccess	a . persistent		5050758	0					
ANR	5050870	Identifier	a		5050758	0					
ANR	5050871	Identifier	persistent		5050758	1					
ANR	5050872	Identifier	false		5050758	1					
ANR	5050873	IdentifierDeclStatement	bool devicegraytok = true ;	87:4:3017:3042	5050758	13	True				
ANR	5050874	IdentifierDecl	devicegraytok = true		5050758	0					
ANR	5050875	IdentifierDeclType	bool		5050758	0					
ANR	5050876	Identifier	devicegraytok		5050758	1					
ANR	5050877	AssignmentExpression	devicegraytok = true		5050758	2		=			
ANR	5050878	Identifier	true		5050758	0					
ANR	5050879	Identifier	true		5050758	1					
ANR	5050880	IdentifierDeclStatement	bool graydetection = false ;	88:4:3095:3121	5050758	14	True				
ANR	5050881	IdentifierDecl	graydetection = false		5050758	0					
ANR	5050882	IdentifierDeclType	bool		5050758	0					
ANR	5050883	Identifier	graydetection		5050758	1					
ANR	5050884	AssignmentExpression	graydetection = false		5050758	2		=			
ANR	5050885	Identifier	false		5050758	0					
ANR	5050886	Identifier	false		5050758	1					
ANR	5050887	IdentifierDeclStatement	bool usefastcolor = false ;	89:4:3127:3152	5050758	15	True				
ANR	5050888	IdentifierDecl	usefastcolor = false		5050758	0					
ANR	5050889	IdentifierDeclType	bool		5050758	0					
ANR	5050890	Identifier	usefastcolor		5050758	1					
ANR	5050891	AssignmentExpression	usefastcolor = false		5050758	2		=			
ANR	5050892	Identifier	false		5050758	0					
ANR	5050893	Identifier	false		5050758	1					
ANR	5050894	IdentifierDeclStatement	bool sim_overprint = false ;	90:4:3189:3215	5050758	16	True				
ANR	5050895	IdentifierDecl	sim_overprint = false		5050758	0					
ANR	5050896	IdentifierDeclType	bool		5050758	0					
ANR	5050897	Identifier	sim_overprint		5050758	1					
ANR	5050898	AssignmentExpression	sim_overprint = false		5050758	2		=			
ANR	5050899	Identifier	false		5050758	0					
ANR	5050900	Identifier	false		5050758	1					
ANR	5050901	IdentifierDeclStatement	"bool prebandthreshold = true , temp_bool = false ;"	91:4:3268:3315	5050758	17	True				
ANR	5050902	IdentifierDecl	prebandthreshold = true		5050758	0					
ANR	5050903	IdentifierDeclType	bool		5050758	0					
ANR	5050904	Identifier	prebandthreshold		5050758	1					
ANR	5050905	AssignmentExpression	prebandthreshold = true		5050758	2		=			
ANR	5050906	Identifier	true		5050758	0					
ANR	5050907	Identifier	true		5050758	1					
ANR	5050908	IdentifierDecl	temp_bool = false		5050758	1					
ANR	5050909	IdentifierDeclType	bool		5050758	0					
ANR	5050910	Identifier	temp_bool		5050758	1					
ANR	5050911	AssignmentExpression	temp_bool = false		5050758	2		=			
ANR	5050912	Identifier	false		5050758	0					
ANR	5050913	Identifier	false		5050758	1					
ANR	5050914	IfStatement	"if ( strcmp ( Param , ""OutputDevice"" ) == 0 )"		5050758	18					
ANR	5050915	Condition	"strcmp ( Param , ""OutputDevice"" ) == 0"	93:7:3325:3358	5050758	0	True				
ANR	5050916	EqualityExpression	"strcmp ( Param , ""OutputDevice"" ) == 0"		5050758	0		==			
ANR	5050917	CallExpression	"strcmp ( Param , ""OutputDevice"" )"		5050758	0					
ANR	5050918	Callee	strcmp		5050758	0					
ANR	5050919	Identifier	strcmp		5050758	0					
ANR	5050920	ArgumentList	Param		5050758	1					
ANR	5050921	Argument	Param		5050758	0					
ANR	5050922	Identifier	Param		5050758	0					
ANR	5050923	Argument	"""OutputDevice"""		5050758	1					
ANR	5050924	PrimaryExpression	"""OutputDevice"""		5050758	0					
ANR	5050925	PrimaryExpression	0		5050758	1					
ANR	5050926	CompoundStatement		23:8:1055:1074	5050758	1					
ANR	5050927	IdentifierDeclStatement	gs_param_string dns ;	94:8:3370:3389	5050758	0	True				
ANR	5050928	IdentifierDecl	dns		5050758	0					
ANR	5050929	IdentifierDeclType	gs_param_string		5050758	0					
ANR	5050930	Identifier	dns		5050758	1					
ANR	5050931	ExpressionStatement	"param_string_from_string ( dns , dev -> dname )"	95:8:3399:3440	5050758	1	True				
ANR	5050932	CallExpression	"param_string_from_string ( dns , dev -> dname )"		5050758	0					
ANR	5050933	Callee	param_string_from_string		5050758	0					
ANR	5050934	Identifier	param_string_from_string		5050758	0					
ANR	5050935	ArgumentList	dns		5050758	1					
ANR	5050936	Argument	dns		5050758	0					
ANR	5050937	Identifier	dns		5050758	0					
ANR	5050938	Argument	dev -> dname		5050758	1					
ANR	5050939	PtrMemberAccess	dev -> dname		5050758	0					
ANR	5050940	Identifier	dev		5050758	0					
ANR	5050941	Identifier	dname		5050758	1					
ANR	5050942	ReturnStatement	"return param_write_name ( plist , ""OutputDevice"" , & dns ) ;"	96:8:3450:3502	5050758	2	True				
ANR	5050943	CallExpression	"param_write_name ( plist , ""OutputDevice"" , & dns )"		5050758	0					
ANR	5050944	Callee	param_write_name		5050758	0					
ANR	5050945	Identifier	param_write_name		5050758	0					
ANR	5050946	ArgumentList	plist		5050758	1					
ANR	5050947	Argument	plist		5050758	0					
ANR	5050948	Identifier	plist		5050758	0					
ANR	5050949	Argument	"""OutputDevice"""		5050758	1					
ANR	5050950	PrimaryExpression	"""OutputDevice"""		5050758	0					
ANR	5050951	Argument	& dns		5050758	2					
ANR	5050952	UnaryOperationExpression	& dns		5050758	0					
ANR	5050953	UnaryOperator	&		5050758	0					
ANR	5050954	Identifier	dns		5050758	1					
ANR	5050955	IfStatement	"if ( strcmp ( Param , ""PageSize"" ) == 0 )"		5050758	19					
ANR	5050956	Condition	"strcmp ( Param , ""PageSize"" ) == 0"	99:8:3547:3576	5050758	0	True				
ANR	5050957	EqualityExpression	"strcmp ( Param , ""PageSize"" ) == 0"		5050758	0		==			
ANR	5050958	CallExpression	"strcmp ( Param , ""PageSize"" )"		5050758	0					
ANR	5050959	Callee	strcmp		5050758	0					
ANR	5050960	Identifier	strcmp		5050758	0					
ANR	5050961	ArgumentList	Param		5050758	1					
ANR	5050962	Argument	Param		5050758	0					
ANR	5050963	Identifier	Param		5050758	0					
ANR	5050964	Argument	"""PageSize"""		5050758	1					
ANR	5050965	PrimaryExpression	"""PageSize"""		5050758	0					
ANR	5050966	PrimaryExpression	0		5050758	1					
ANR	5050967	CompoundStatement		29:8:1274:1298	5050758	1					
ANR	5050968	IdentifierDeclStatement	gs_param_float_array msa ;	100:8:3589:3613	5050758	0	True				
ANR	5050969	IdentifierDecl	msa		5050758	0					
ANR	5050970	IdentifierDeclType	gs_param_float_array		5050758	0					
ANR	5050971	Identifier	msa		5050758	1					
ANR	5050972	ExpressionStatement	"set_param_array ( msa , dev -> MediaSize , 2 )"	101:8:3623:3662	5050758	1	True				
ANR	5050973	CallExpression	"set_param_array ( msa , dev -> MediaSize , 2 )"		5050758	0					
ANR	5050974	Callee	set_param_array		5050758	0					
ANR	5050975	Identifier	set_param_array		5050758	0					
ANR	5050976	ArgumentList	msa		5050758	1					
ANR	5050977	Argument	msa		5050758	0					
ANR	5050978	Identifier	msa		5050758	0					
ANR	5050979	Argument	dev -> MediaSize		5050758	1					
ANR	5050980	PtrMemberAccess	dev -> MediaSize		5050758	0					
ANR	5050981	Identifier	dev		5050758	0					
ANR	5050982	Identifier	MediaSize		5050758	1					
ANR	5050983	Argument	2		5050758	2					
ANR	5050984	PrimaryExpression	2		5050758	0					
ANR	5050985	ReturnStatement	"return param_write_float_array ( plist , ""PageSize"" , & msa ) ;"	102:8:3672:3727	5050758	2	True				
ANR	5050986	CallExpression	"param_write_float_array ( plist , ""PageSize"" , & msa )"		5050758	0					
ANR	5050987	Callee	param_write_float_array		5050758	0					
ANR	5050988	Identifier	param_write_float_array		5050758	0					
ANR	5050989	ArgumentList	plist		5050758	1					
ANR	5050990	Argument	plist		5050758	0					
ANR	5050991	Identifier	plist		5050758	0					
ANR	5050992	Argument	"""PageSize"""		5050758	1					
ANR	5050993	PrimaryExpression	"""PageSize"""		5050758	0					
ANR	5050994	Argument	& msa		5050758	2					
ANR	5050995	UnaryOperationExpression	& msa		5050758	0					
ANR	5050996	UnaryOperator	&		5050758	0					
ANR	5050997	Identifier	msa		5050758	1					
ANR	5050998	IfStatement	"if ( strcmp ( Param , ""ProcessColorModel"" ) == 0 )"		5050758	20					
ANR	5050999	Condition	"strcmp ( Param , ""ProcessColorModel"" ) == 0"	105:8:3750:3788	5050758	0	True				
ANR	5051000	EqualityExpression	"strcmp ( Param , ""ProcessColorModel"" ) == 0"		5050758	0		==			
ANR	5051001	CallExpression	"strcmp ( Param , ""ProcessColorModel"" )"		5050758	0					
ANR	5051002	Callee	strcmp		5050758	0					
ANR	5051003	Identifier	strcmp		5050758	0					
ANR	5051004	ArgumentList	Param		5050758	1					
ANR	5051005	Argument	Param		5050758	0					
ANR	5051006	Identifier	Param		5050758	0					
ANR	5051007	Argument	"""ProcessColorModel"""		5050758	1					
ANR	5051008	PrimaryExpression	"""ProcessColorModel"""		5050758	0					
ANR	5051009	PrimaryExpression	0		5050758	1					
ANR	5051010	CompoundStatement		35:8:1486:1537	5050758	1					
ANR	5051011	IdentifierDeclStatement	const char * cms = get_process_color_model_name ( dev ) ;	106:8:3801:3852	5050758	0	True				
ANR	5051012	IdentifierDecl	* cms = get_process_color_model_name ( dev )		5050758	0					
ANR	5051013	IdentifierDeclType	const char *		5050758	0					
ANR	5051014	Identifier	cms		5050758	1					
ANR	5051015	AssignmentExpression	* cms = get_process_color_model_name ( dev )		5050758	2		=			
ANR	5051016	Identifier	cms		5050758	0					
ANR	5051017	CallExpression	get_process_color_model_name ( dev )		5050758	1					
ANR	5051018	Callee	get_process_color_model_name		5050758	0					
ANR	5051019	Identifier	get_process_color_model_name		5050758	0					
ANR	5051020	ArgumentList	dev		5050758	1					
ANR	5051021	Argument	dev		5050758	0					
ANR	5051022	Identifier	dev		5050758	0					
ANR	5051023	IfStatement	if ( ( cms != NULL ) && ( * cms != '\\0' ) )		5050758	1					
ANR	5051024	Condition	( cms != NULL ) && ( * cms != '\\0' )	110:12:3972:4002	5050758	0	True				
ANR	5051025	AndExpression	( cms != NULL ) && ( * cms != '\\0' )		5050758	0		&&			
ANR	5051026	EqualityExpression	cms != NULL		5050758	0		!=			
ANR	5051027	Identifier	cms		5050758	0					
ANR	5051028	Identifier	NULL		5050758	1					
ANR	5051029	EqualityExpression	* cms != '\\0'		5050758	1		!=			
ANR	5051030	UnaryOperationExpression	* cms		5050758	0					
ANR	5051031	UnaryOperator	*		5050758	0					
ANR	5051032	Identifier	cms		5050758	1					
ANR	5051033	PrimaryExpression	'\\0'		5050758	1					
ANR	5051034	CompoundStatement		40:12:1704:1724	5050758	1					
ANR	5051035	IdentifierDeclStatement	gs_param_string pcms ;	111:12:4019:4039	5050758	0	True				
ANR	5051036	IdentifierDecl	pcms		5050758	0					
ANR	5051037	IdentifierDeclType	gs_param_string		5050758	0					
ANR	5051038	Identifier	pcms		5050758	1					
ANR	5051039	ExpressionStatement	"param_string_from_string ( pcms , cms )"	112:12:4053:4088	5050758	1	True				
ANR	5051040	CallExpression	"param_string_from_string ( pcms , cms )"		5050758	0					
ANR	5051041	Callee	param_string_from_string		5050758	0					
ANR	5051042	Identifier	param_string_from_string		5050758	0					
ANR	5051043	ArgumentList	pcms		5050758	1					
ANR	5051044	Argument	pcms		5050758	0					
ANR	5051045	Identifier	pcms		5050758	0					
ANR	5051046	Argument	cms		5050758	1					
ANR	5051047	Identifier	cms		5050758	0					
ANR	5051048	ReturnStatement	"return param_write_name ( plist , ""ProcessColorModel"" , & pcms ) ;"	113:12:4102:4160	5050758	2	True				
ANR	5051049	CallExpression	"param_write_name ( plist , ""ProcessColorModel"" , & pcms )"		5050758	0					
ANR	5051050	Callee	param_write_name		5050758	0					
ANR	5051051	Identifier	param_write_name		5050758	0					
ANR	5051052	ArgumentList	plist		5050758	1					
ANR	5051053	Argument	plist		5050758	0					
ANR	5051054	Identifier	plist		5050758	0					
ANR	5051055	Argument	"""ProcessColorModel"""		5050758	1					
ANR	5051056	PrimaryExpression	"""ProcessColorModel"""		5050758	0					
ANR	5051057	Argument	& pcms		5050758	2					
ANR	5051058	UnaryOperationExpression	& pcms		5050758	0					
ANR	5051059	UnaryOperator	&		5050758	0					
ANR	5051060	Identifier	pcms		5050758	1					
ANR	5051061	IfStatement	"if ( strcmp ( Param , ""HWResolution"" ) == 0 )"		5050758	21					
ANR	5051062	Condition	"strcmp ( Param , ""HWResolution"" ) == 0"	116:8:4186:4219	5050758	0	True				
ANR	5051063	EqualityExpression	"strcmp ( Param , ""HWResolution"" ) == 0"		5050758	0		==			
ANR	5051064	CallExpression	"strcmp ( Param , ""HWResolution"" )"		5050758	0					
ANR	5051065	Callee	strcmp		5050758	0					
ANR	5051066	Identifier	strcmp		5050758	0					
ANR	5051067	ArgumentList	Param		5050758	1					
ANR	5051068	Argument	Param		5050758	0					
ANR	5051069	Identifier	Param		5050758	0					
ANR	5051070	Argument	"""HWResolution"""		5050758	1					
ANR	5051071	PrimaryExpression	"""HWResolution"""		5050758	0					
ANR	5051072	PrimaryExpression	0		5050758	1					
ANR	5051073	CompoundStatement		46:8:1917:1942	5050758	1					
ANR	5051074	IdentifierDeclStatement	gs_param_float_array hwra ;	117:8:4232:4257	5050758	0	True				
ANR	5051075	IdentifierDecl	hwra		5050758	0					
ANR	5051076	IdentifierDeclType	gs_param_float_array		5050758	0					
ANR	5051077	Identifier	hwra		5050758	1					
ANR	5051078	ExpressionStatement	"set_param_array ( hwra , dev -> HWResolution , 2 )"	118:8:4267:4310	5050758	1	True				
ANR	5051079	CallExpression	"set_param_array ( hwra , dev -> HWResolution , 2 )"		5050758	0					
ANR	5051080	Callee	set_param_array		5050758	0					
ANR	5051081	Identifier	set_param_array		5050758	0					
ANR	5051082	ArgumentList	hwra		5050758	1					
ANR	5051083	Argument	hwra		5050758	0					
ANR	5051084	Identifier	hwra		5050758	0					
ANR	5051085	Argument	dev -> HWResolution		5050758	1					
ANR	5051086	PtrMemberAccess	dev -> HWResolution		5050758	0					
ANR	5051087	Identifier	dev		5050758	0					
ANR	5051088	Identifier	HWResolution		5050758	1					
ANR	5051089	Argument	2		5050758	2					
ANR	5051090	PrimaryExpression	2		5050758	0					
ANR	5051091	ReturnStatement	"return param_write_float_array ( plist , ""HWResolution"" , & hwra ) ;"	119:8:4320:4380	5050758	2	True				
ANR	5051092	CallExpression	"param_write_float_array ( plist , ""HWResolution"" , & hwra )"		5050758	0					
ANR	5051093	Callee	param_write_float_array		5050758	0					
ANR	5051094	Identifier	param_write_float_array		5050758	0					
ANR	5051095	ArgumentList	plist		5050758	1					
ANR	5051096	Argument	plist		5050758	0					
ANR	5051097	Identifier	plist		5050758	0					
ANR	5051098	Argument	"""HWResolution"""		5050758	1					
ANR	5051099	PrimaryExpression	"""HWResolution"""		5050758	0					
ANR	5051100	Argument	& hwra		5050758	2					
ANR	5051101	UnaryOperationExpression	& hwra		5050758	0					
ANR	5051102	UnaryOperator	&		5050758	0					
ANR	5051103	Identifier	hwra		5050758	1					
ANR	5051104	IfStatement	"if ( strcmp ( Param , ""ImagingBBox"" ) == 0 )"		5050758	22					
ANR	5051105	Condition	"strcmp ( Param , ""ImagingBBox"" ) == 0"	121:8:4396:4428	5050758	0	True				
ANR	5051106	EqualityExpression	"strcmp ( Param , ""ImagingBBox"" ) == 0"		5050758	0		==			
ANR	5051107	CallExpression	"strcmp ( Param , ""ImagingBBox"" )"		5050758	0					
ANR	5051108	Callee	strcmp		5050758	0					
ANR	5051109	Identifier	strcmp		5050758	0					
ANR	5051110	ArgumentList	Param		5050758	1					
ANR	5051111	Argument	Param		5050758	0					
ANR	5051112	Identifier	Param		5050758	0					
ANR	5051113	Argument	"""ImagingBBox"""		5050758	1					
ANR	5051114	PrimaryExpression	"""ImagingBBox"""		5050758	0					
ANR	5051115	PrimaryExpression	0		5050758	1					
ANR	5051116	CompoundStatement		51:8:2126:2151	5050758	1					
ANR	5051117	IdentifierDeclStatement	gs_param_float_array ibba ;	122:8:4441:4466	5050758	0	True				
ANR	5051118	IdentifierDecl	ibba		5050758	0					
ANR	5051119	IdentifierDeclType	gs_param_float_array		5050758	0					
ANR	5051120	Identifier	ibba		5050758	1					
ANR	5051121	ExpressionStatement	"set_param_array ( ibba , dev -> ImagingBBox , 4 )"	123:8:4476:4518	5050758	1	True				
ANR	5051122	CallExpression	"set_param_array ( ibba , dev -> ImagingBBox , 4 )"		5050758	0					
ANR	5051123	Callee	set_param_array		5050758	0					
ANR	5051124	Identifier	set_param_array		5050758	0					
ANR	5051125	ArgumentList	ibba		5050758	1					
ANR	5051126	Argument	ibba		5050758	0					
ANR	5051127	Identifier	ibba		5050758	0					
ANR	5051128	Argument	dev -> ImagingBBox		5050758	1					
ANR	5051129	PtrMemberAccess	dev -> ImagingBBox		5050758	0					
ANR	5051130	Identifier	dev		5050758	0					
ANR	5051131	Identifier	ImagingBBox		5050758	1					
ANR	5051132	Argument	4		5050758	2					
ANR	5051133	PrimaryExpression	4		5050758	0					
ANR	5051134	IfStatement	if ( dev -> ImagingBBox_set )		5050758	2					
ANR	5051135	Condition	dev -> ImagingBBox_set	124:12:4532:4551	5050758	0	True				
ANR	5051136	PtrMemberAccess	dev -> ImagingBBox_set		5050758	0					
ANR	5051137	Identifier	dev		5050758	0					
ANR	5051138	Identifier	ImagingBBox_set		5050758	1					
ANR	5051139	ReturnStatement	"return param_write_float_array ( plist , ""ImagingBBox"" , & ibba ) ;"	125:12:4566:4625	5050758	1	True				
ANR	5051140	CallExpression	"param_write_float_array ( plist , ""ImagingBBox"" , & ibba )"		5050758	0					
ANR	5051141	Callee	param_write_float_array		5050758	0					
ANR	5051142	Identifier	param_write_float_array		5050758	0					
ANR	5051143	ArgumentList	plist		5050758	1					
ANR	5051144	Argument	plist		5050758	0					
ANR	5051145	Identifier	plist		5050758	0					
ANR	5051146	Argument	"""ImagingBBox"""		5050758	1					
ANR	5051147	PrimaryExpression	"""ImagingBBox"""		5050758	0					
ANR	5051148	Argument	& ibba		5050758	2					
ANR	5051149	UnaryOperationExpression	& ibba		5050758	0					
ANR	5051150	UnaryOperator	&		5050758	0					
ANR	5051151	Identifier	ibba		5050758	1					
ANR	5051152	ElseStatement	else		5050758	0					
ANR	5051153	ReturnStatement	"return param_write_null ( plist , ""ImagingBBox"" ) ;"	127:12:4652:4697	5050758	0	True				
ANR	5051154	CallExpression	"param_write_null ( plist , ""ImagingBBox"" )"		5050758	0					
ANR	5051155	Callee	param_write_null		5050758	0					
ANR	5051156	Identifier	param_write_null		5050758	0					
ANR	5051157	ArgumentList	plist		5050758	1					
ANR	5051158	Argument	plist		5050758	0					
ANR	5051159	Identifier	plist		5050758	0					
ANR	5051160	Argument	"""ImagingBBox"""		5050758	1					
ANR	5051161	PrimaryExpression	"""ImagingBBox"""		5050758	0					
ANR	5051162	IfStatement	"if ( strcmp ( Param , ""Margins"" ) == 0 )"		5050758	23					
ANR	5051163	Condition	"strcmp ( Param , ""Margins"" ) == 0"	129:8:4713:4741	5050758	0	True				
ANR	5051164	EqualityExpression	"strcmp ( Param , ""Margins"" ) == 0"		5050758	0		==			
ANR	5051165	CallExpression	"strcmp ( Param , ""Margins"" )"		5050758	0					
ANR	5051166	Callee	strcmp		5050758	0					
ANR	5051167	Identifier	strcmp		5050758	0					
ANR	5051168	ArgumentList	Param		5050758	1					
ANR	5051169	Argument	Param		5050758	0					
ANR	5051170	Identifier	Param		5050758	0					
ANR	5051171	Argument	"""Margins"""		5050758	1					
ANR	5051172	PrimaryExpression	"""Margins"""		5050758	0					
ANR	5051173	PrimaryExpression	0		5050758	1					
ANR	5051174	CompoundStatement		59:8:2439:2462	5050758	1					
ANR	5051175	IdentifierDeclStatement	gs_param_float_array ma ;	130:8:4754:4777	5050758	0	True				
ANR	5051176	IdentifierDecl	ma		5050758	0					
ANR	5051177	IdentifierDeclType	gs_param_float_array		5050758	0					
ANR	5051178	Identifier	ma		5050758	1					
ANR	5051179	ExpressionStatement	"set_param_array ( ma , dev -> Margins , 2 )"	131:8:4787:4823	5050758	1	True				
ANR	5051180	CallExpression	"set_param_array ( ma , dev -> Margins , 2 )"		5050758	0					
ANR	5051181	Callee	set_param_array		5050758	0					
ANR	5051182	Identifier	set_param_array		5050758	0					
ANR	5051183	ArgumentList	ma		5050758	1					
ANR	5051184	Argument	ma		5050758	0					
ANR	5051185	Identifier	ma		5050758	0					
ANR	5051186	Argument	dev -> Margins		5050758	1					
ANR	5051187	PtrMemberAccess	dev -> Margins		5050758	0					
ANR	5051188	Identifier	dev		5050758	0					
ANR	5051189	Identifier	Margins		5050758	1					
ANR	5051190	Argument	2		5050758	2					
ANR	5051191	PrimaryExpression	2		5050758	0					
ANR	5051192	ReturnStatement	"return param_write_float_array ( plist , ""Margins"" , & ma ) ;"	132:8:4833:4886	5050758	2	True				
ANR	5051193	CallExpression	"param_write_float_array ( plist , ""Margins"" , & ma )"		5050758	0					
ANR	5051194	Callee	param_write_float_array		5050758	0					
ANR	5051195	Identifier	param_write_float_array		5050758	0					
ANR	5051196	ArgumentList	plist		5050758	1					
ANR	5051197	Argument	plist		5050758	0					
ANR	5051198	Identifier	plist		5050758	0					
ANR	5051199	Argument	"""Margins"""		5050758	1					
ANR	5051200	PrimaryExpression	"""Margins"""		5050758	0					
ANR	5051201	Argument	& ma		5050758	2					
ANR	5051202	UnaryOperationExpression	& ma		5050758	0					
ANR	5051203	UnaryOperator	&		5050758	0					
ANR	5051204	Identifier	ma		5050758	1					
ANR	5051205	IfStatement	"if ( strcmp ( Param , ""MaxSeparations"" ) == 0 )"		5050758	24					
ANR	5051206	Condition	"strcmp ( Param , ""MaxSeparations"" ) == 0"	134:8:4902:4937	5050758	0	True				
ANR	5051207	EqualityExpression	"strcmp ( Param , ""MaxSeparations"" ) == 0"		5050758	0		==			
ANR	5051208	CallExpression	"strcmp ( Param , ""MaxSeparations"" )"		5050758	0					
ANR	5051209	Callee	strcmp		5050758	0					
ANR	5051210	Identifier	strcmp		5050758	0					
ANR	5051211	ArgumentList	Param		5050758	1					
ANR	5051212	Argument	Param		5050758	0					
ANR	5051213	Identifier	Param		5050758	0					
ANR	5051214	Argument	"""MaxSeparations"""		5050758	1					
ANR	5051215	PrimaryExpression	"""MaxSeparations"""		5050758	0					
ANR	5051216	PrimaryExpression	0		5050758	1					
ANR	5051217	CompoundStatement		64:8:2635:2679	5050758	1					
ANR	5051218	IdentifierDeclStatement	int max_sep = dev -> color_info . max_components ;	135:8:4950:4994	5050758	0	True				
ANR	5051219	IdentifierDecl	max_sep = dev -> color_info . max_components		5050758	0					
ANR	5051220	IdentifierDeclType	int		5050758	0					
ANR	5051221	Identifier	max_sep		5050758	1					
ANR	5051222	AssignmentExpression	max_sep = dev -> color_info . max_components		5050758	2		=			
ANR	5051223	Identifier	max_sep		5050758	0					
ANR	5051224	MemberAccess	dev -> color_info . max_components		5050758	1					
ANR	5051225	PtrMemberAccess	dev -> color_info		5050758	0					
ANR	5051226	Identifier	dev		5050758	0					
ANR	5051227	Identifier	color_info		5050758	1					
ANR	5051228	Identifier	max_components		5050758	1					
ANR	5051229	ReturnStatement	"return param_write_int ( plist , ""MaxSeparations"" , & max_sep ) ;"	136:8:5004:5061	5050758	1	True				
ANR	5051230	CallExpression	"param_write_int ( plist , ""MaxSeparations"" , & max_sep )"		5050758	0					
ANR	5051231	Callee	param_write_int		5050758	0					
ANR	5051232	Identifier	param_write_int		5050758	0					
ANR	5051233	ArgumentList	plist		5050758	1					
ANR	5051234	Argument	plist		5050758	0					
ANR	5051235	Identifier	plist		5050758	0					
ANR	5051236	Argument	"""MaxSeparations"""		5050758	1					
ANR	5051237	PrimaryExpression	"""MaxSeparations"""		5050758	0					
ANR	5051238	Argument	& max_sep		5050758	2					
ANR	5051239	UnaryOperationExpression	& max_sep		5050758	0					
ANR	5051240	UnaryOperator	&		5050758	0					
ANR	5051241	Identifier	max_sep		5050758	1					
ANR	5051242	IfStatement	"if ( strcmp ( Param , ""NumCopies"" ) == 0 )"		5050758	25					
ANR	5051243	Condition	"strcmp ( Param , ""NumCopies"" ) == 0"	138:8:5077:5107	5050758	0	True				
ANR	5051244	EqualityExpression	"strcmp ( Param , ""NumCopies"" ) == 0"		5050758	0		==			
ANR	5051245	CallExpression	"strcmp ( Param , ""NumCopies"" )"		5050758	0					
ANR	5051246	Callee	strcmp		5050758	0					
ANR	5051247	Identifier	strcmp		5050758	0					
ANR	5051248	ArgumentList	Param		5050758	1					
ANR	5051249	Argument	Param		5050758	0					
ANR	5051250	Identifier	Param		5050758	0					
ANR	5051251	Argument	"""NumCopies"""		5050758	1					
ANR	5051252	PrimaryExpression	"""NumCopies"""		5050758	0					
ANR	5051253	PrimaryExpression	0		5050758	1					
ANR	5051254	CompoundStatement		67:41:2795:2795	5050758	1					
ANR	5051255	IfStatement	"if ( dev -> NumCopies_set < 0 || ( * dev_proc ( dev , get_page_device ) ) ( dev ) == 0 )"		5050758	0					
ANR	5051256	Condition	"dev -> NumCopies_set < 0 || ( * dev_proc ( dev , get_page_device ) ) ( dev ) == 0"	139:12:5124:5192	5050758	0	True				
ANR	5051257	OrExpression	"dev -> NumCopies_set < 0 || ( * dev_proc ( dev , get_page_device ) ) ( dev ) == 0"		5050758	0		||			
ANR	5051258	RelationalExpression	dev -> NumCopies_set < 0		5050758	0		<			
ANR	5051259	PtrMemberAccess	dev -> NumCopies_set		5050758	0					
ANR	5051260	Identifier	dev		5050758	0					
ANR	5051261	Identifier	NumCopies_set		5050758	1					
ANR	5051262	PrimaryExpression	0		5050758	1					
ANR	5051263	EqualityExpression	"( * dev_proc ( dev , get_page_device ) ) ( dev ) == 0"		5050758	1		==			
ANR	5051264	CallExpression	"( * dev_proc ( dev , get_page_device ) ) ( dev )"		5050758	0					
ANR	5051265	Callee	"* dev_proc ( dev , get_page_device )"		5050758	0					
ANR	5051266	UnaryOperationExpression	"* dev_proc ( dev , get_page_device )"		5050758	0					
ANR	5051267	UnaryOperator	*		5050758	0					
ANR	5051268	CallExpression	"dev_proc ( dev , get_page_device )"		5050758	1					
ANR	5051269	Callee	dev_proc		5050758	0					
ANR	5051270	Identifier	dev_proc		5050758	0					
ANR	5051271	ArgumentList	dev		5050758	1					
ANR	5051272	Argument	dev		5050758	0					
ANR	5051273	Identifier	dev		5050758	0					
ANR	5051274	Argument	get_page_device		5050758	1					
ANR	5051275	Identifier	get_page_device		5050758	0					
ANR	5051276	ArgumentList	dev		5050758	1					
ANR	5051277	Argument	dev		5050758	0					
ANR	5051278	Identifier	dev		5050758	0					
ANR	5051279	PrimaryExpression	0		5050758	1					
ANR	5051280	CompoundStatement		68:83:2880:2880	5050758	1					
ANR	5051281	ExpressionStatement	return_error ( gs_error_undefined )	140:12:5209:5241	5050758	0	True				
ANR	5051282	CallExpression	return_error ( gs_error_undefined )		5050758	0					
ANR	5051283	Callee	return_error		5050758	0					
ANR	5051284	Identifier	return_error		5050758	0					
ANR	5051285	ArgumentList	gs_error_undefined		5050758	1					
ANR	5051286	Argument	gs_error_undefined		5050758	0					
ANR	5051287	Identifier	gs_error_undefined		5050758	0					
ANR	5051288	ElseStatement	else		5050758	0					
ANR	5051289	CompoundStatement		70:15:2943:2943	5050758	0					
ANR	5051290	IfStatement	if ( dev -> NumCopies_set )		5050758	0					
ANR	5051291	Condition	dev -> NumCopies_set	142:16:5276:5293	5050758	0	True				
ANR	5051292	PtrMemberAccess	dev -> NumCopies_set		5050758	0					
ANR	5051293	Identifier	dev		5050758	0					
ANR	5051294	Identifier	NumCopies_set		5050758	1					
ANR	5051295	ReturnStatement	"return param_write_int ( plist , ""NumCopies"" , & dev -> NumCopies ) ;"	143:16:5312:5371	5050758	1	True				
ANR	5051296	CallExpression	"param_write_int ( plist , ""NumCopies"" , & dev -> NumCopies )"		5050758	0					
ANR	5051297	Callee	param_write_int		5050758	0					
ANR	5051298	Identifier	param_write_int		5050758	0					
ANR	5051299	ArgumentList	plist		5050758	1					
ANR	5051300	Argument	plist		5050758	0					
ANR	5051301	Identifier	plist		5050758	0					
ANR	5051302	Argument	"""NumCopies"""		5050758	1					
ANR	5051303	PrimaryExpression	"""NumCopies"""		5050758	0					
ANR	5051304	Argument	& dev -> NumCopies		5050758	2					
ANR	5051305	UnaryOperationExpression	& dev -> NumCopies		5050758	0					
ANR	5051306	UnaryOperator	&		5050758	0					
ANR	5051307	PtrMemberAccess	dev -> NumCopies		5050758	1					
ANR	5051308	Identifier	dev		5050758	0					
ANR	5051309	Identifier	NumCopies		5050758	1					
ANR	5051310	ElseStatement	else		5050758	0					
ANR	5051311	ReturnStatement	"return param_write_null ( plist , ""NumCopies"" ) ;"	145:16:5406:5449	5050758	0	True				
ANR	5051312	CallExpression	"param_write_null ( plist , ""NumCopies"" )"		5050758	0					
ANR	5051313	Callee	param_write_null		5050758	0					
ANR	5051314	Identifier	param_write_null		5050758	0					
ANR	5051315	ArgumentList	plist		5050758	1					
ANR	5051316	Argument	plist		5050758	0					
ANR	5051317	Identifier	plist		5050758	0					
ANR	5051318	Argument	"""NumCopies"""		5050758	1					
ANR	5051319	PrimaryExpression	"""NumCopies"""		5050758	0					
ANR	5051320	IfStatement	"if ( strcmp ( Param , ""SeparationColorNames"" ) == 0 )"		5050758	26					
ANR	5051321	Condition	"strcmp ( Param , ""SeparationColorNames"" ) == 0"	148:8:5475:5516	5050758	0	True				
ANR	5051322	EqualityExpression	"strcmp ( Param , ""SeparationColorNames"" ) == 0"		5050758	0		==			
ANR	5051323	CallExpression	"strcmp ( Param , ""SeparationColorNames"" )"		5050758	0					
ANR	5051324	Callee	strcmp		5050758	0					
ANR	5051325	Identifier	strcmp		5050758	0					
ANR	5051326	ArgumentList	Param		5050758	1					
ANR	5051327	Argument	Param		5050758	0					
ANR	5051328	Identifier	Param		5050758	0					
ANR	5051329	Argument	"""SeparationColorNames"""		5050758	1					
ANR	5051330	PrimaryExpression	"""SeparationColorNames"""		5050758	0					
ANR	5051331	PrimaryExpression	0		5050758	1					
ANR	5051332	CompoundStatement		78:8:3214:3240	5050758	1					
ANR	5051333	IdentifierDeclStatement	gs_param_string_array scna ;	149:8:5529:5555	5050758	0	True				
ANR	5051334	IdentifierDecl	scna		5050758	0					
ANR	5051335	IdentifierDeclType	gs_param_string_array		5050758	0					
ANR	5051336	Identifier	scna		5050758	1					
ANR	5051337	ExpressionStatement	"set_param_array ( scna , NULL , 0 )"	150:8:5565:5595	5050758	1	True				
ANR	5051338	CallExpression	"set_param_array ( scna , NULL , 0 )"		5050758	0					
ANR	5051339	Callee	set_param_array		5050758	0					
ANR	5051340	Identifier	set_param_array		5050758	0					
ANR	5051341	ArgumentList	scna		5050758	1					
ANR	5051342	Argument	scna		5050758	0					
ANR	5051343	Identifier	scna		5050758	0					
ANR	5051344	Argument	NULL		5050758	1					
ANR	5051345	Identifier	NULL		5050758	0					
ANR	5051346	Argument	0		5050758	2					
ANR	5051347	PrimaryExpression	0		5050758	0					
ANR	5051348	ReturnStatement	"return param_write_name_array ( plist , ""SeparationColorNames"" , & scna ) ;"	151:8:5605:5672	5050758	2	True				
ANR	5051349	CallExpression	"param_write_name_array ( plist , ""SeparationColorNames"" , & scna )"		5050758	0					
ANR	5051350	Callee	param_write_name_array		5050758	0					
ANR	5051351	Identifier	param_write_name_array		5050758	0					
ANR	5051352	ArgumentList	plist		5050758	1					
ANR	5051353	Argument	plist		5050758	0					
ANR	5051354	Identifier	plist		5050758	0					
ANR	5051355	Argument	"""SeparationColorNames"""		5050758	1					
ANR	5051356	PrimaryExpression	"""SeparationColorNames"""		5050758	0					
ANR	5051357	Argument	& scna		5050758	2					
ANR	5051358	UnaryOperationExpression	& scna		5050758	0					
ANR	5051359	UnaryOperator	&		5050758	0					
ANR	5051360	Identifier	scna		5050758	1					
ANR	5051361	IfStatement	"if ( strcmp ( Param , ""Separations"" ) == 0 )"		5050758	27					
ANR	5051362	Condition	"strcmp ( Param , ""Separations"" ) == 0"	153:8:5688:5720	5050758	0	True				
ANR	5051363	EqualityExpression	"strcmp ( Param , ""Separations"" ) == 0"		5050758	0		==			
ANR	5051364	CallExpression	"strcmp ( Param , ""Separations"" )"		5050758	0					
ANR	5051365	Callee	strcmp		5050758	0					
ANR	5051366	Identifier	strcmp		5050758	0					
ANR	5051367	ArgumentList	Param		5050758	1					
ANR	5051368	Argument	Param		5050758	0					
ANR	5051369	Identifier	Param		5050758	0					
ANR	5051370	Argument	"""Separations"""		5050758	1					
ANR	5051371	PrimaryExpression	"""Separations"""		5050758	0					
ANR	5051372	PrimaryExpression	0		5050758	1					
ANR	5051373	CompoundStatement		83:8:3418:3436	5050758	1					
ANR	5051374	IdentifierDeclStatement	bool seprs = false ;	154:8:5733:5751	5050758	0	True				
ANR	5051375	IdentifierDecl	seprs = false		5050758	0					
ANR	5051376	IdentifierDeclType	bool		5050758	0					
ANR	5051377	Identifier	seprs		5050758	1					
ANR	5051378	AssignmentExpression	seprs = false		5050758	2		=			
ANR	5051379	Identifier	false		5050758	0					
ANR	5051380	Identifier	false		5050758	1					
ANR	5051381	ReturnStatement	"return param_write_bool ( plist , ""Separations"" , & seprs ) ;"	155:8:5761:5814	5050758	1	True				
ANR	5051382	CallExpression	"param_write_bool ( plist , ""Separations"" , & seprs )"		5050758	0					
ANR	5051383	Callee	param_write_bool		5050758	0					
ANR	5051384	Identifier	param_write_bool		5050758	0					
ANR	5051385	ArgumentList	plist		5050758	1					
ANR	5051386	Argument	plist		5050758	0					
ANR	5051387	Identifier	plist		5050758	0					
ANR	5051388	Argument	"""Separations"""		5050758	1					
ANR	5051389	PrimaryExpression	"""Separations"""		5050758	0					
ANR	5051390	Argument	& seprs		5050758	2					
ANR	5051391	UnaryOperationExpression	& seprs		5050758	0					
ANR	5051392	UnaryOperator	&		5050758	0					
ANR	5051393	Identifier	seprs		5050758	1					
ANR	5051394	IfStatement	"if ( strcmp ( Param , ""UseCIEColor"" ) == 0 )"		5050758	28					
ANR	5051395	Condition	"strcmp ( Param , ""UseCIEColor"" ) == 0"	157:8:5830:5862	5050758	0	True				
ANR	5051396	EqualityExpression	"strcmp ( Param , ""UseCIEColor"" ) == 0"		5050758	0		==			
ANR	5051397	CallExpression	"strcmp ( Param , ""UseCIEColor"" )"		5050758	0					
ANR	5051398	Callee	strcmp		5050758	0					
ANR	5051399	Identifier	strcmp		5050758	0					
ANR	5051400	ArgumentList	Param		5050758	1					
ANR	5051401	Argument	Param		5050758	0					
ANR	5051402	Identifier	Param		5050758	0					
ANR	5051403	Argument	"""UseCIEColor"""		5050758	1					
ANR	5051404	PrimaryExpression	"""UseCIEColor"""		5050758	0					
ANR	5051405	PrimaryExpression	0		5050758	1					
ANR	5051406	CompoundStatement		86:43:3550:3550	5050758	1					
ANR	5051407	ReturnStatement	"return param_write_bool ( plist , ""UseCIEColor"" , & dev -> UseCIEColor ) ;"	158:8:5875:5939	5050758	0	True				
ANR	5051408	CallExpression	"param_write_bool ( plist , ""UseCIEColor"" , & dev -> UseCIEColor )"		5050758	0					
ANR	5051409	Callee	param_write_bool		5050758	0					
ANR	5051410	Identifier	param_write_bool		5050758	0					
ANR	5051411	ArgumentList	plist		5050758	1					
ANR	5051412	Argument	plist		5050758	0					
ANR	5051413	Identifier	plist		5050758	0					
ANR	5051414	Argument	"""UseCIEColor"""		5050758	1					
ANR	5051415	PrimaryExpression	"""UseCIEColor"""		5050758	0					
ANR	5051416	Argument	& dev -> UseCIEColor		5050758	2					
ANR	5051417	UnaryOperationExpression	& dev -> UseCIEColor		5050758	0					
ANR	5051418	UnaryOperator	&		5050758	0					
ANR	5051419	PtrMemberAccess	dev -> UseCIEColor		5050758	1					
ANR	5051420	Identifier	dev		5050758	0					
ANR	5051421	Identifier	UseCIEColor		5050758	1					
ANR	5051422	IfStatement	"if ( strcmp ( Param , ""HWSize"" ) == 0 )"		5050758	29					
ANR	5051423	Condition	"strcmp ( Param , ""HWSize"" ) == 0"	162:8:5990:6017	5050758	0	True				
ANR	5051424	EqualityExpression	"strcmp ( Param , ""HWSize"" ) == 0"		5050758	0		==			
ANR	5051425	CallExpression	"strcmp ( Param , ""HWSize"" )"		5050758	0					
ANR	5051426	Callee	strcmp		5050758	0					
ANR	5051427	Identifier	strcmp		5050758	0					
ANR	5051428	ArgumentList	Param		5050758	1					
ANR	5051429	Argument	Param		5050758	0					
ANR	5051430	Identifier	Param		5050758	0					
ANR	5051431	Argument	"""HWSize"""		5050758	1					
ANR	5051432	PrimaryExpression	"""HWSize"""		5050758	0					
ANR	5051433	PrimaryExpression	0		5050758	1					
ANR	5051434	CompoundStatement		93:8:3738:3761	5050758	1					
ANR	5051435	IdentifierDeclStatement	int HWSize [ 2 ] ;	163:8:6030:6043	5050758	0	True				
ANR	5051436	IdentifierDecl	HWSize [ 2 ]		5050758	0					
ANR	5051437	IdentifierDeclType	int [ 2 ]		5050758	0					
ANR	5051438	Identifier	HWSize		5050758	1					
ANR	5051439	PrimaryExpression	2		5050758	2					
ANR	5051440	IdentifierDeclStatement	gs_param_int_array hwsa ;	164:8:6053:6076	5050758	1	True				
ANR	5051441	IdentifierDecl	hwsa		5050758	0					
ANR	5051442	IdentifierDeclType	gs_param_int_array		5050758	0					
ANR	5051443	Identifier	hwsa		5050758	1					
ANR	5051444	ExpressionStatement	HWSize [ 0 ] = dev -> width	166:8:6087:6109	5050758	2	True				
ANR	5051445	AssignmentExpression	HWSize [ 0 ] = dev -> width		5050758	0		=			
ANR	5051446	ArrayIndexing	HWSize [ 0 ]		5050758	0					
ANR	5051447	Identifier	HWSize		5050758	0					
ANR	5051448	PrimaryExpression	0		5050758	1					
ANR	5051449	PtrMemberAccess	dev -> width		5050758	1					
ANR	5051450	Identifier	dev		5050758	0					
ANR	5051451	Identifier	width		5050758	1					
ANR	5051452	ExpressionStatement	HWSize [ 1 ] = dev -> height	167:8:6119:6142	5050758	3	True				
ANR	5051453	AssignmentExpression	HWSize [ 1 ] = dev -> height		5050758	0		=			
ANR	5051454	ArrayIndexing	HWSize [ 1 ]		5050758	0					
ANR	5051455	Identifier	HWSize		5050758	0					
ANR	5051456	PrimaryExpression	1		5050758	1					
ANR	5051457	PtrMemberAccess	dev -> height		5050758	1					
ANR	5051458	Identifier	dev		5050758	0					
ANR	5051459	Identifier	height		5050758	1					
ANR	5051460	ExpressionStatement	"set_param_array ( hwsa , HWSize , 2 )"	168:8:6152:6184	5050758	4	True				
ANR	5051461	CallExpression	"set_param_array ( hwsa , HWSize , 2 )"		5050758	0					
ANR	5051462	Callee	set_param_array		5050758	0					
ANR	5051463	Identifier	set_param_array		5050758	0					
ANR	5051464	ArgumentList	hwsa		5050758	1					
ANR	5051465	Argument	hwsa		5050758	0					
ANR	5051466	Identifier	hwsa		5050758	0					
ANR	5051467	Argument	HWSize		5050758	1					
ANR	5051468	Identifier	HWSize		5050758	0					
ANR	5051469	Argument	2		5050758	2					
ANR	5051470	PrimaryExpression	2		5050758	0					
ANR	5051471	ReturnStatement	"return param_write_int_array ( plist , ""HWSize"" , & hwsa ) ;"	169:8:6194:6246	5050758	5	True				
ANR	5051472	CallExpression	"param_write_int_array ( plist , ""HWSize"" , & hwsa )"		5050758	0					
ANR	5051473	Callee	param_write_int_array		5050758	0					
ANR	5051474	Identifier	param_write_int_array		5050758	0					
ANR	5051475	ArgumentList	plist		5050758	1					
ANR	5051476	Argument	plist		5050758	0					
ANR	5051477	Identifier	plist		5050758	0					
ANR	5051478	Argument	"""HWSize"""		5050758	1					
ANR	5051479	PrimaryExpression	"""HWSize"""		5050758	0					
ANR	5051480	Argument	& hwsa		5050758	2					
ANR	5051481	UnaryOperationExpression	& hwsa		5050758	0					
ANR	5051482	UnaryOperator	&		5050758	0					
ANR	5051483	Identifier	hwsa		5050758	1					
ANR	5051484	IfStatement	"if ( strcmp ( Param , "".HWMargins"" ) == 0 )"		5050758	30					
ANR	5051485	Condition	"strcmp ( Param , "".HWMargins"" ) == 0"	171:8:6262:6293	5050758	0	True				
ANR	5051486	EqualityExpression	"strcmp ( Param , "".HWMargins"" ) == 0"		5050758	0		==			
ANR	5051487	CallExpression	"strcmp ( Param , "".HWMargins"" )"		5050758	0					
ANR	5051488	Callee	strcmp		5050758	0					
ANR	5051489	Identifier	strcmp		5050758	0					
ANR	5051490	ArgumentList	Param		5050758	1					
ANR	5051491	Argument	Param		5050758	0					
ANR	5051492	Identifier	Param		5050758	0					
ANR	5051493	Argument	""".HWMargins"""		5050758	1					
ANR	5051494	PrimaryExpression	""".HWMargins"""		5050758	0					
ANR	5051495	PrimaryExpression	0		5050758	1					
ANR	5051496	CompoundStatement		101:8:3991:4016	5050758	1					
ANR	5051497	IdentifierDeclStatement	gs_param_float_array hwma ;	172:8:6306:6331	5050758	0	True				
ANR	5051498	IdentifierDecl	hwma		5050758	0					
ANR	5051499	IdentifierDeclType	gs_param_float_array		5050758	0					
ANR	5051500	Identifier	hwma		5050758	1					
ANR	5051501	ExpressionStatement	"set_param_array ( hwma , dev -> HWMargins , 4 )"	173:8:6341:6381	5050758	1	True				
ANR	5051502	CallExpression	"set_param_array ( hwma , dev -> HWMargins , 4 )"		5050758	0					
ANR	5051503	Callee	set_param_array		5050758	0					
ANR	5051504	Identifier	set_param_array		5050758	0					
ANR	5051505	ArgumentList	hwma		5050758	1					
ANR	5051506	Argument	hwma		5050758	0					
ANR	5051507	Identifier	hwma		5050758	0					
ANR	5051508	Argument	dev -> HWMargins		5050758	1					
ANR	5051509	PtrMemberAccess	dev -> HWMargins		5050758	0					
ANR	5051510	Identifier	dev		5050758	0					
ANR	5051511	Identifier	HWMargins		5050758	1					
ANR	5051512	Argument	4		5050758	2					
ANR	5051513	PrimaryExpression	4		5050758	0					
ANR	5051514	ReturnStatement	"return param_write_float_array ( plist , "".HWMargins"" , & hwma ) ;"	174:8:6391:6449	5050758	2	True				
ANR	5051515	CallExpression	"param_write_float_array ( plist , "".HWMargins"" , & hwma )"		5050758	0					
ANR	5051516	Callee	param_write_float_array		5050758	0					
ANR	5051517	Identifier	param_write_float_array		5050758	0					
ANR	5051518	ArgumentList	plist		5050758	1					
ANR	5051519	Argument	plist		5050758	0					
ANR	5051520	Identifier	plist		5050758	0					
ANR	5051521	Argument	""".HWMargins"""		5050758	1					
ANR	5051522	PrimaryExpression	""".HWMargins"""		5050758	0					
ANR	5051523	Argument	& hwma		5050758	2					
ANR	5051524	UnaryOperationExpression	& hwma		5050758	0					
ANR	5051525	UnaryOperator	&		5050758	0					
ANR	5051526	Identifier	hwma		5050758	1					
ANR	5051527	IfStatement	"if ( strcmp ( Param , "".MediaSize"" ) == 0 )"		5050758	31					
ANR	5051528	Condition	"strcmp ( Param , "".MediaSize"" ) == 0"	176:8:6465:6496	5050758	0	True				
ANR	5051529	EqualityExpression	"strcmp ( Param , "".MediaSize"" ) == 0"		5050758	0		==			
ANR	5051530	CallExpression	"strcmp ( Param , "".MediaSize"" )"		5050758	0					
ANR	5051531	Callee	strcmp		5050758	0					
ANR	5051532	Identifier	strcmp		5050758	0					
ANR	5051533	ArgumentList	Param		5050758	1					
ANR	5051534	Argument	Param		5050758	0					
ANR	5051535	Identifier	Param		5050758	0					
ANR	5051536	Argument	""".MediaSize"""		5050758	1					
ANR	5051537	PrimaryExpression	""".MediaSize"""		5050758	0					
ANR	5051538	PrimaryExpression	0		5050758	1					
ANR	5051539	CompoundStatement		106:8:4194:4218	5050758	1					
ANR	5051540	IdentifierDeclStatement	gs_param_float_array msa ;	177:8:6509:6533	5050758	0	True				
ANR	5051541	IdentifierDecl	msa		5050758	0					
ANR	5051542	IdentifierDeclType	gs_param_float_array		5050758	0					
ANR	5051543	Identifier	msa		5050758	1					
ANR	5051544	ExpressionStatement	"set_param_array ( msa , dev -> MediaSize , 2 )"	178:8:6543:6582	5050758	1	True				
ANR	5051545	CallExpression	"set_param_array ( msa , dev -> MediaSize , 2 )"		5050758	0					
ANR	5051546	Callee	set_param_array		5050758	0					
ANR	5051547	Identifier	set_param_array		5050758	0					
ANR	5051548	ArgumentList	msa		5050758	1					
ANR	5051549	Argument	msa		5050758	0					
ANR	5051550	Identifier	msa		5050758	0					
ANR	5051551	Argument	dev -> MediaSize		5050758	1					
ANR	5051552	PtrMemberAccess	dev -> MediaSize		5050758	0					
ANR	5051553	Identifier	dev		5050758	0					
ANR	5051554	Identifier	MediaSize		5050758	1					
ANR	5051555	Argument	2		5050758	2					
ANR	5051556	PrimaryExpression	2		5050758	0					
ANR	5051557	ReturnStatement	"return param_write_float_array ( plist , "".MediaSize"" , & msa ) ;"	179:8:6592:6649	5050758	2	True				
ANR	5051558	CallExpression	"param_write_float_array ( plist , "".MediaSize"" , & msa )"		5050758	0					
ANR	5051559	Callee	param_write_float_array		5050758	0					
ANR	5051560	Identifier	param_write_float_array		5050758	0					
ANR	5051561	ArgumentList	plist		5050758	1					
ANR	5051562	Argument	plist		5050758	0					
ANR	5051563	Identifier	plist		5050758	0					
ANR	5051564	Argument	""".MediaSize"""		5050758	1					
ANR	5051565	PrimaryExpression	""".MediaSize"""		5050758	0					
ANR	5051566	Argument	& msa		5050758	2					
ANR	5051567	UnaryOperationExpression	& msa		5050758	0					
ANR	5051568	UnaryOperator	&		5050758	0					
ANR	5051569	Identifier	msa		5050758	1					
ANR	5051570	IfStatement	"if ( strcmp ( Param , ""Name"" ) == 0 )"		5050758	32					
ANR	5051571	Condition	"strcmp ( Param , ""Name"" ) == 0"	181:8:6665:6690	5050758	0	True				
ANR	5051572	EqualityExpression	"strcmp ( Param , ""Name"" ) == 0"		5050758	0		==			
ANR	5051573	CallExpression	"strcmp ( Param , ""Name"" )"		5050758	0					
ANR	5051574	Callee	strcmp		5050758	0					
ANR	5051575	Identifier	strcmp		5050758	0					
ANR	5051576	ArgumentList	Param		5050758	1					
ANR	5051577	Argument	Param		5050758	0					
ANR	5051578	Identifier	Param		5050758	0					
ANR	5051579	Argument	"""Name"""		5050758	1					
ANR	5051580	PrimaryExpression	"""Name"""		5050758	0					
ANR	5051581	PrimaryExpression	0		5050758	1					
ANR	5051582	CompoundStatement		111:8:4388:4407	5050758	1					
ANR	5051583	IdentifierDeclStatement	gs_param_string dns ;	182:8:6703:6722	5050758	0	True				
ANR	5051584	IdentifierDecl	dns		5050758	0					
ANR	5051585	IdentifierDeclType	gs_param_string		5050758	0					
ANR	5051586	Identifier	dns		5050758	1					
ANR	5051587	ExpressionStatement	"param_string_from_string ( dns , dev -> dname )"	183:8:6732:6773	5050758	1	True				
ANR	5051588	CallExpression	"param_string_from_string ( dns , dev -> dname )"		5050758	0					
ANR	5051589	Callee	param_string_from_string		5050758	0					
ANR	5051590	Identifier	param_string_from_string		5050758	0					
ANR	5051591	ArgumentList	dns		5050758	1					
ANR	5051592	Argument	dns		5050758	0					
ANR	5051593	Identifier	dns		5050758	0					
ANR	5051594	Argument	dev -> dname		5050758	1					
ANR	5051595	PtrMemberAccess	dev -> dname		5050758	0					
ANR	5051596	Identifier	dev		5050758	0					
ANR	5051597	Identifier	dname		5050758	1					
ANR	5051598	ReturnStatement	"return param_write_string ( plist , ""Name"" , & dns ) ;"	184:8:6783:6829	5050758	2	True				
ANR	5051599	CallExpression	"param_write_string ( plist , ""Name"" , & dns )"		5050758	0					
ANR	5051600	Callee	param_write_string		5050758	0					
ANR	5051601	Identifier	param_write_string		5050758	0					
ANR	5051602	ArgumentList	plist		5050758	1					
ANR	5051603	Argument	plist		5050758	0					
ANR	5051604	Identifier	plist		5050758	0					
ANR	5051605	Argument	"""Name"""		5050758	1					
ANR	5051606	PrimaryExpression	"""Name"""		5050758	0					
ANR	5051607	Argument	& dns		5050758	2					
ANR	5051608	UnaryOperationExpression	& dns		5050758	0					
ANR	5051609	UnaryOperator	&		5050758	0					
ANR	5051610	Identifier	dns		5050758	1					
ANR	5051611	IfStatement	"if ( strcmp ( Param , ""Colors"" ) == 0 )"		5050758	33					
ANR	5051612	Condition	"strcmp ( Param , ""Colors"" ) == 0"	186:8:6845:6872	5050758	0	True				
ANR	5051613	EqualityExpression	"strcmp ( Param , ""Colors"" ) == 0"		5050758	0		==			
ANR	5051614	CallExpression	"strcmp ( Param , ""Colors"" )"		5050758	0					
ANR	5051615	Callee	strcmp		5050758	0					
ANR	5051616	Identifier	strcmp		5050758	0					
ANR	5051617	ArgumentList	Param		5050758	1					
ANR	5051618	Argument	Param		5050758	0					
ANR	5051619	Identifier	Param		5050758	0					
ANR	5051620	Argument	"""Colors"""		5050758	1					
ANR	5051621	PrimaryExpression	"""Colors"""		5050758	0					
ANR	5051622	PrimaryExpression	0		5050758	1					
ANR	5051623	CompoundStatement		116:8:4570:4613	5050758	1					
ANR	5051624	IdentifierDeclStatement	int colors = dev -> color_info . num_components ;	187:8:6885:6928	5050758	0	True				
ANR	5051625	IdentifierDecl	colors = dev -> color_info . num_components		5050758	0					
ANR	5051626	IdentifierDeclType	int		5050758	0					
ANR	5051627	Identifier	colors		5050758	1					
ANR	5051628	AssignmentExpression	colors = dev -> color_info . num_components		5050758	2		=			
ANR	5051629	Identifier	colors		5050758	0					
ANR	5051630	MemberAccess	dev -> color_info . num_components		5050758	1					
ANR	5051631	PtrMemberAccess	dev -> color_info		5050758	0					
ANR	5051632	Identifier	dev		5050758	0					
ANR	5051633	Identifier	color_info		5050758	1					
ANR	5051634	Identifier	num_components		5050758	1					
ANR	5051635	ReturnStatement	"return param_write_int ( plist , ""Colors"" , & colors ) ;"	188:8:6938:6986	5050758	1	True				
ANR	5051636	CallExpression	"param_write_int ( plist , ""Colors"" , & colors )"		5050758	0					
ANR	5051637	Callee	param_write_int		5050758	0					
ANR	5051638	Identifier	param_write_int		5050758	0					
ANR	5051639	ArgumentList	plist		5050758	1					
ANR	5051640	Argument	plist		5050758	0					
ANR	5051641	Identifier	plist		5050758	0					
ANR	5051642	Argument	"""Colors"""		5050758	1					
ANR	5051643	PrimaryExpression	"""Colors"""		5050758	0					
ANR	5051644	Argument	& colors		5050758	2					
ANR	5051645	UnaryOperationExpression	& colors		5050758	0					
ANR	5051646	UnaryOperator	&		5050758	0					
ANR	5051647	Identifier	colors		5050758	1					
ANR	5051648	IfStatement	"if ( strcmp ( Param , ""BitsPerPixel"" ) == 0 )"		5050758	34					
ANR	5051649	Condition	"strcmp ( Param , ""BitsPerPixel"" ) == 0"	190:8:7002:7035	5050758	0	True				
ANR	5051650	EqualityExpression	"strcmp ( Param , ""BitsPerPixel"" ) == 0"		5050758	0		==			
ANR	5051651	CallExpression	"strcmp ( Param , ""BitsPerPixel"" )"		5050758	0					
ANR	5051652	Callee	strcmp		5050758	0					
ANR	5051653	Identifier	strcmp		5050758	0					
ANR	5051654	ArgumentList	Param		5050758	1					
ANR	5051655	Argument	Param		5050758	0					
ANR	5051656	Identifier	Param		5050758	0					
ANR	5051657	Argument	"""BitsPerPixel"""		5050758	1					
ANR	5051658	PrimaryExpression	"""BitsPerPixel"""		5050758	0					
ANR	5051659	PrimaryExpression	0		5050758	1					
ANR	5051660	CompoundStatement		119:44:4723:4723	5050758	1					
ANR	5051661	ReturnStatement	"return param_write_int ( plist , ""BitsPerPixel"" , & depth ) ;"	191:8:7048:7101	5050758	0	True				
ANR	5051662	CallExpression	"param_write_int ( plist , ""BitsPerPixel"" , & depth )"		5050758	0					
ANR	5051663	Callee	param_write_int		5050758	0					
ANR	5051664	Identifier	param_write_int		5050758	0					
ANR	5051665	ArgumentList	plist		5050758	1					
ANR	5051666	Argument	plist		5050758	0					
ANR	5051667	Identifier	plist		5050758	0					
ANR	5051668	Argument	"""BitsPerPixel"""		5050758	1					
ANR	5051669	PrimaryExpression	"""BitsPerPixel"""		5050758	0					
ANR	5051670	Argument	& depth		5050758	2					
ANR	5051671	UnaryOperationExpression	& depth		5050758	0					
ANR	5051672	UnaryOperator	&		5050758	0					
ANR	5051673	Identifier	depth		5050758	1					
ANR	5051674	IfStatement	"if ( strcmp ( Param , ""GrayValues"" ) == 0 )"		5050758	35					
ANR	5051675	Condition	"strcmp ( Param , ""GrayValues"" ) == 0"	193:8:7117:7148	5050758	0	True				
ANR	5051676	EqualityExpression	"strcmp ( Param , ""GrayValues"" ) == 0"		5050758	0		==			
ANR	5051677	CallExpression	"strcmp ( Param , ""GrayValues"" )"		5050758	0					
ANR	5051678	Callee	strcmp		5050758	0					
ANR	5051679	Identifier	strcmp		5050758	0					
ANR	5051680	ArgumentList	Param		5050758	1					
ANR	5051681	Argument	Param		5050758	0					
ANR	5051682	Identifier	Param		5050758	0					
ANR	5051683	Argument	"""GrayValues"""		5050758	1					
ANR	5051684	PrimaryExpression	"""GrayValues"""		5050758	0					
ANR	5051685	PrimaryExpression	0		5050758	1					
ANR	5051686	CompoundStatement		123:8:4846:4891	5050758	1					
ANR	5051687	IdentifierDeclStatement	int GrayValues = dev -> color_info . max_gray + 1 ;	194:8:7161:7206	5050758	0	True				
ANR	5051688	IdentifierDecl	GrayValues = dev -> color_info . max_gray + 1		5050758	0					
ANR	5051689	IdentifierDeclType	int		5050758	0					
ANR	5051690	Identifier	GrayValues		5050758	1					
ANR	5051691	AssignmentExpression	GrayValues = dev -> color_info . max_gray + 1		5050758	2		=			
ANR	5051692	Identifier	GrayValues		5050758	0					
ANR	5051693	AdditiveExpression	dev -> color_info . max_gray + 1		5050758	1		+			
ANR	5051694	MemberAccess	dev -> color_info . max_gray		5050758	0					
ANR	5051695	PtrMemberAccess	dev -> color_info		5050758	0					
ANR	5051696	Identifier	dev		5050758	0					
ANR	5051697	Identifier	color_info		5050758	1					
ANR	5051698	Identifier	max_gray		5050758	1					
ANR	5051699	PrimaryExpression	1		5050758	1					
ANR	5051700	ReturnStatement	"return param_write_int ( plist , ""GrayValues"" , & GrayValues ) ;"	195:8:7216:7272	5050758	1	True				
ANR	5051701	CallExpression	"param_write_int ( plist , ""GrayValues"" , & GrayValues )"		5050758	0					
ANR	5051702	Callee	param_write_int		5050758	0					
ANR	5051703	Identifier	param_write_int		5050758	0					
ANR	5051704	ArgumentList	plist		5050758	1					
ANR	5051705	Argument	plist		5050758	0					
ANR	5051706	Identifier	plist		5050758	0					
ANR	5051707	Argument	"""GrayValues"""		5050758	1					
ANR	5051708	PrimaryExpression	"""GrayValues"""		5050758	0					
ANR	5051709	Argument	& GrayValues		5050758	2					
ANR	5051710	UnaryOperationExpression	& GrayValues		5050758	0					
ANR	5051711	UnaryOperator	&		5050758	0					
ANR	5051712	Identifier	GrayValues		5050758	1					
ANR	5051713	IfStatement	"if ( strcmp ( Param , ""PageCount"" ) == 0 )"		5050758	36					
ANR	5051714	Condition	"strcmp ( Param , ""PageCount"" ) == 0"	197:8:7288:7318	5050758	0	True				
ANR	5051715	EqualityExpression	"strcmp ( Param , ""PageCount"" ) == 0"		5050758	0		==			
ANR	5051716	CallExpression	"strcmp ( Param , ""PageCount"" )"		5050758	0					
ANR	5051717	Callee	strcmp		5050758	0					
ANR	5051718	Identifier	strcmp		5050758	0					
ANR	5051719	ArgumentList	Param		5050758	1					
ANR	5051720	Argument	Param		5050758	0					
ANR	5051721	Identifier	Param		5050758	0					
ANR	5051722	Argument	"""PageCount"""		5050758	1					
ANR	5051723	PrimaryExpression	"""PageCount"""		5050758	0					
ANR	5051724	PrimaryExpression	0		5050758	1					
ANR	5051725	CompoundStatement		126:41:5006:5006	5050758	1					
ANR	5051726	ReturnStatement	"return param_write_long ( plist , ""PageCount"" , & dev -> PageCount ) ;"	198:8:7331:7391	5050758	0	True				
ANR	5051727	CallExpression	"param_write_long ( plist , ""PageCount"" , & dev -> PageCount )"		5050758	0					
ANR	5051728	Callee	param_write_long		5050758	0					
ANR	5051729	Identifier	param_write_long		5050758	0					
ANR	5051730	ArgumentList	plist		5050758	1					
ANR	5051731	Argument	plist		5050758	0					
ANR	5051732	Identifier	plist		5050758	0					
ANR	5051733	Argument	"""PageCount"""		5050758	1					
ANR	5051734	PrimaryExpression	"""PageCount"""		5050758	0					
ANR	5051735	Argument	& dev -> PageCount		5050758	2					
ANR	5051736	UnaryOperationExpression	& dev -> PageCount		5050758	0					
ANR	5051737	UnaryOperator	&		5050758	0					
ANR	5051738	PtrMemberAccess	dev -> PageCount		5050758	1					
ANR	5051739	Identifier	dev		5050758	0					
ANR	5051740	Identifier	PageCount		5050758	1					
ANR	5051741	IfStatement	"if ( strcmp ( Param , "".IgnoreNumCopies"" ) == 0 )"		5050758	37					
ANR	5051742	Condition	"strcmp ( Param , "".IgnoreNumCopies"" ) == 0"	200:8:7407:7444	5050758	0	True				
ANR	5051743	EqualityExpression	"strcmp ( Param , "".IgnoreNumCopies"" ) == 0"		5050758	0		==			
ANR	5051744	CallExpression	"strcmp ( Param , "".IgnoreNumCopies"" )"		5050758	0					
ANR	5051745	Callee	strcmp		5050758	0					
ANR	5051746	Identifier	strcmp		5050758	0					
ANR	5051747	ArgumentList	Param		5050758	1					
ANR	5051748	Argument	Param		5050758	0					
ANR	5051749	Identifier	Param		5050758	0					
ANR	5051750	Argument	""".IgnoreNumCopies"""		5050758	1					
ANR	5051751	PrimaryExpression	""".IgnoreNumCopies"""		5050758	0					
ANR	5051752	PrimaryExpression	0		5050758	1					
ANR	5051753	CompoundStatement		129:48:5132:5132	5050758	1					
ANR	5051754	ReturnStatement	"return param_write_bool ( plist , "".IgnoreNumCopies"" , & dev -> IgnoreNumCopies ) ;"	201:8:7457:7530	5050758	0	True				
ANR	5051755	CallExpression	"param_write_bool ( plist , "".IgnoreNumCopies"" , & dev -> IgnoreNumCopies )"		5050758	0					
ANR	5051756	Callee	param_write_bool		5050758	0					
ANR	5051757	Identifier	param_write_bool		5050758	0					
ANR	5051758	ArgumentList	plist		5050758	1					
ANR	5051759	Argument	plist		5050758	0					
ANR	5051760	Identifier	plist		5050758	0					
ANR	5051761	Argument	""".IgnoreNumCopies"""		5050758	1					
ANR	5051762	PrimaryExpression	""".IgnoreNumCopies"""		5050758	0					
ANR	5051763	Argument	& dev -> IgnoreNumCopies		5050758	2					
ANR	5051764	UnaryOperationExpression	& dev -> IgnoreNumCopies		5050758	0					
ANR	5051765	UnaryOperator	&		5050758	0					
ANR	5051766	PtrMemberAccess	dev -> IgnoreNumCopies		5050758	1					
ANR	5051767	Identifier	dev		5050758	0					
ANR	5051768	Identifier	IgnoreNumCopies		5050758	1					
ANR	5051769	IfStatement	"if ( strcmp ( Param , ""TextAlphaBits"" ) == 0 )"		5050758	38					
ANR	5051770	Condition	"strcmp ( Param , ""TextAlphaBits"" ) == 0"	203:8:7546:7580	5050758	0	True				
ANR	5051771	EqualityExpression	"strcmp ( Param , ""TextAlphaBits"" ) == 0"		5050758	0		==			
ANR	5051772	CallExpression	"strcmp ( Param , ""TextAlphaBits"" )"		5050758	0					
ANR	5051773	Callee	strcmp		5050758	0					
ANR	5051774	Identifier	strcmp		5050758	0					
ANR	5051775	ArgumentList	Param		5050758	1					
ANR	5051776	Argument	Param		5050758	0					
ANR	5051777	Identifier	Param		5050758	0					
ANR	5051778	Argument	"""TextAlphaBits"""		5050758	1					
ANR	5051779	PrimaryExpression	"""TextAlphaBits"""		5050758	0					
ANR	5051780	PrimaryExpression	0		5050758	1					
ANR	5051781	CompoundStatement		132:45:5268:5268	5050758	1					
ANR	5051782	ReturnStatement	"return param_write_int ( plist , ""TextAlphaBits"" , & dev -> color_info . anti_alias . text_bits ) ;"	204:8:7593:7710	5050758	0	True				
ANR	5051783	CallExpression	"param_write_int ( plist , ""TextAlphaBits"" , & dev -> color_info . anti_alias . text_bits )"		5050758	0					
ANR	5051784	Callee	param_write_int		5050758	0					
ANR	5051785	Identifier	param_write_int		5050758	0					
ANR	5051786	ArgumentList	plist		5050758	1					
ANR	5051787	Argument	plist		5050758	0					
ANR	5051788	Identifier	plist		5050758	0					
ANR	5051789	Argument	"""TextAlphaBits"""		5050758	1					
ANR	5051790	PrimaryExpression	"""TextAlphaBits"""		5050758	0					
ANR	5051791	Argument	& dev -> color_info . anti_alias . text_bits		5050758	2					
ANR	5051792	UnaryOperationExpression	& dev -> color_info . anti_alias . text_bits		5050758	0					
ANR	5051793	UnaryOperator	&		5050758	0					
ANR	5051794	MemberAccess	dev -> color_info . anti_alias . text_bits		5050758	1					
ANR	5051795	MemberAccess	dev -> color_info . anti_alias		5050758	0					
ANR	5051796	PtrMemberAccess	dev -> color_info		5050758	0					
ANR	5051797	Identifier	dev		5050758	0					
ANR	5051798	Identifier	color_info		5050758	1					
ANR	5051799	Identifier	anti_alias		5050758	1					
ANR	5051800	Identifier	text_bits		5050758	1					
ANR	5051801	IfStatement	"if ( strcmp ( Param , ""GraphicsAlphaBits"" ) == 0 )"		5050758	39					
ANR	5051802	Condition	"strcmp ( Param , ""GraphicsAlphaBits"" ) == 0"	207:8:7726:7764	5050758	0	True				
ANR	5051803	EqualityExpression	"strcmp ( Param , ""GraphicsAlphaBits"" ) == 0"		5050758	0		==			
ANR	5051804	CallExpression	"strcmp ( Param , ""GraphicsAlphaBits"" )"		5050758	0					
ANR	5051805	Callee	strcmp		5050758	0					
ANR	5051806	Identifier	strcmp		5050758	0					
ANR	5051807	ArgumentList	Param		5050758	1					
ANR	5051808	Argument	Param		5050758	0					
ANR	5051809	Identifier	Param		5050758	0					
ANR	5051810	Argument	"""GraphicsAlphaBits"""		5050758	1					
ANR	5051811	PrimaryExpression	"""GraphicsAlphaBits"""		5050758	0					
ANR	5051812	PrimaryExpression	0		5050758	1					
ANR	5051813	CompoundStatement		136:49:5452:5452	5050758	1					
ANR	5051814	ReturnStatement	"return param_write_int ( plist , ""GraphicsAlphaBits"" , & dev -> color_info . anti_alias . graphics_bits ) ;"	208:8:7777:7902	5050758	0	True				
ANR	5051815	CallExpression	"param_write_int ( plist , ""GraphicsAlphaBits"" , & dev -> color_info . anti_alias . graphics_bits )"		5050758	0					
ANR	5051816	Callee	param_write_int		5050758	0					
ANR	5051817	Identifier	param_write_int		5050758	0					
ANR	5051818	ArgumentList	plist		5050758	1					
ANR	5051819	Argument	plist		5050758	0					
ANR	5051820	Identifier	plist		5050758	0					
ANR	5051821	Argument	"""GraphicsAlphaBits"""		5050758	1					
ANR	5051822	PrimaryExpression	"""GraphicsAlphaBits"""		5050758	0					
ANR	5051823	Argument	& dev -> color_info . anti_alias . graphics_bits		5050758	2					
ANR	5051824	UnaryOperationExpression	& dev -> color_info . anti_alias . graphics_bits		5050758	0					
ANR	5051825	UnaryOperator	&		5050758	0					
ANR	5051826	MemberAccess	dev -> color_info . anti_alias . graphics_bits		5050758	1					
ANR	5051827	MemberAccess	dev -> color_info . anti_alias		5050758	0					
ANR	5051828	PtrMemberAccess	dev -> color_info		5050758	0					
ANR	5051829	Identifier	dev		5050758	0					
ANR	5051830	Identifier	color_info		5050758	1					
ANR	5051831	Identifier	anti_alias		5050758	1					
ANR	5051832	Identifier	graphics_bits		5050758	1					
ANR	5051833	IfStatement	"if ( strcmp ( Param , ""AntidropoutDownscaler"" ) == 0 )"		5050758	40					
ANR	5051834	Condition	"strcmp ( Param , ""AntidropoutDownscaler"" ) == 0"	211:8:7918:7960	5050758	0	True				
ANR	5051835	EqualityExpression	"strcmp ( Param , ""AntidropoutDownscaler"" ) == 0"		5050758	0		==			
ANR	5051836	CallExpression	"strcmp ( Param , ""AntidropoutDownscaler"" )"		5050758	0					
ANR	5051837	Callee	strcmp		5050758	0					
ANR	5051838	Identifier	strcmp		5050758	0					
ANR	5051839	ArgumentList	Param		5050758	1					
ANR	5051840	Argument	Param		5050758	0					
ANR	5051841	Identifier	Param		5050758	0					
ANR	5051842	Argument	"""AntidropoutDownscaler"""		5050758	1					
ANR	5051843	PrimaryExpression	"""AntidropoutDownscaler"""		5050758	0					
ANR	5051844	PrimaryExpression	0		5050758	1					
ANR	5051845	CompoundStatement		140:53:5648:5648	5050758	1					
ANR	5051846	ReturnStatement	"return param_write_bool ( plist , ""AntidropoutDownscaler"" , & dev -> color_info . use_antidropout_downscaler ) ;"	212:8:7973:8105	5050758	0	True				
ANR	5051847	CallExpression	"param_write_bool ( plist , ""AntidropoutDownscaler"" , & dev -> color_info . use_antidropout_downscaler )"		5050758	0					
ANR	5051848	Callee	param_write_bool		5050758	0					
ANR	5051849	Identifier	param_write_bool		5050758	0					
ANR	5051850	ArgumentList	plist		5050758	1					
ANR	5051851	Argument	plist		5050758	0					
ANR	5051852	Identifier	plist		5050758	0					
ANR	5051853	Argument	"""AntidropoutDownscaler"""		5050758	1					
ANR	5051854	PrimaryExpression	"""AntidropoutDownscaler"""		5050758	0					
ANR	5051855	Argument	& dev -> color_info . use_antidropout_downscaler		5050758	2					
ANR	5051856	UnaryOperationExpression	& dev -> color_info . use_antidropout_downscaler		5050758	0					
ANR	5051857	UnaryOperator	&		5050758	0					
ANR	5051858	MemberAccess	dev -> color_info . use_antidropout_downscaler		5050758	1					
ANR	5051859	PtrMemberAccess	dev -> color_info		5050758	0					
ANR	5051860	Identifier	dev		5050758	0					
ANR	5051861	Identifier	color_info		5050758	1					
ANR	5051862	Identifier	use_antidropout_downscaler		5050758	1					
ANR	5051863	IfStatement	"if ( strcmp ( Param , "".LockSafetyParams"" ) == 0 )"		5050758	41					
ANR	5051864	Condition	"strcmp ( Param , "".LockSafetyParams"" ) == 0"	215:8:8121:8159	5050758	0	True				
ANR	5051865	EqualityExpression	"strcmp ( Param , "".LockSafetyParams"" ) == 0"		5050758	0		==			
ANR	5051866	CallExpression	"strcmp ( Param , "".LockSafetyParams"" )"		5050758	0					
ANR	5051867	Callee	strcmp		5050758	0					
ANR	5051868	Identifier	strcmp		5050758	0					
ANR	5051869	ArgumentList	Param		5050758	1					
ANR	5051870	Argument	Param		5050758	0					
ANR	5051871	Identifier	Param		5050758	0					
ANR	5051872	Argument	""".LockSafetyParams"""		5050758	1					
ANR	5051873	PrimaryExpression	""".LockSafetyParams"""		5050758	0					
ANR	5051874	PrimaryExpression	0		5050758	1					
ANR	5051875	CompoundStatement		144:49:5847:5847	5050758	1					
ANR	5051876	ReturnStatement	"return param_write_bool ( plist , "".LockSafetyParams"" , & dev -> LockSafetyParams ) ;"	216:8:8172:8247	5050758	0	True				
ANR	5051877	CallExpression	"param_write_bool ( plist , "".LockSafetyParams"" , & dev -> LockSafetyParams )"		5050758	0					
ANR	5051878	Callee	param_write_bool		5050758	0					
ANR	5051879	Identifier	param_write_bool		5050758	0					
ANR	5051880	ArgumentList	plist		5050758	1					
ANR	5051881	Argument	plist		5050758	0					
ANR	5051882	Identifier	plist		5050758	0					
ANR	5051883	Argument	""".LockSafetyParams"""		5050758	1					
ANR	5051884	PrimaryExpression	""".LockSafetyParams"""		5050758	0					
ANR	5051885	Argument	& dev -> LockSafetyParams		5050758	2					
ANR	5051886	UnaryOperationExpression	& dev -> LockSafetyParams		5050758	0					
ANR	5051887	UnaryOperator	&		5050758	0					
ANR	5051888	PtrMemberAccess	dev -> LockSafetyParams		5050758	1					
ANR	5051889	Identifier	dev		5050758	0					
ANR	5051890	Identifier	LockSafetyParams		5050758	1					
ANR	5051891	IfStatement	"if ( strcmp ( Param , ""MaxPatternBitmap"" ) == 0 )"		5050758	42					
ANR	5051892	Condition	"strcmp ( Param , ""MaxPatternBitmap"" ) == 0"	218:8:8263:8300	5050758	0	True				
ANR	5051893	EqualityExpression	"strcmp ( Param , ""MaxPatternBitmap"" ) == 0"		5050758	0		==			
ANR	5051894	CallExpression	"strcmp ( Param , ""MaxPatternBitmap"" )"		5050758	0					
ANR	5051895	Callee	strcmp		5050758	0					
ANR	5051896	Identifier	strcmp		5050758	0					
ANR	5051897	ArgumentList	Param		5050758	1					
ANR	5051898	Argument	Param		5050758	0					
ANR	5051899	Identifier	Param		5050758	0					
ANR	5051900	Argument	"""MaxPatternBitmap"""		5050758	1					
ANR	5051901	PrimaryExpression	"""MaxPatternBitmap"""		5050758	0					
ANR	5051902	PrimaryExpression	0		5050758	1					
ANR	5051903	CompoundStatement		147:48:5988:5988	5050758	1					
ANR	5051904	ReturnStatement	"return param_write_int ( plist , ""MaxPatternBitmap"" , & dev -> MaxPatternBitmap ) ;"	219:8:8313:8386	5050758	0	True				
ANR	5051905	CallExpression	"param_write_int ( plist , ""MaxPatternBitmap"" , & dev -> MaxPatternBitmap )"		5050758	0					
ANR	5051906	Callee	param_write_int		5050758	0					
ANR	5051907	Identifier	param_write_int		5050758	0					
ANR	5051908	ArgumentList	plist		5050758	1					
ANR	5051909	Argument	plist		5050758	0					
ANR	5051910	Identifier	plist		5050758	0					
ANR	5051911	Argument	"""MaxPatternBitmap"""		5050758	1					
ANR	5051912	PrimaryExpression	"""MaxPatternBitmap"""		5050758	0					
ANR	5051913	Argument	& dev -> MaxPatternBitmap		5050758	2					
ANR	5051914	UnaryOperationExpression	& dev -> MaxPatternBitmap		5050758	0					
ANR	5051915	UnaryOperator	&		5050758	0					
ANR	5051916	PtrMemberAccess	dev -> MaxPatternBitmap		5050758	1					
ANR	5051917	Identifier	dev		5050758	0					
ANR	5051918	Identifier	MaxPatternBitmap		5050758	1					
ANR	5051919	IfStatement	"if ( strcmp ( Param , ""PageUsesTransparency"" ) == 0 )"		5050758	43					
ANR	5051920	Condition	"strcmp ( Param , ""PageUsesTransparency"" ) == 0"	221:8:8402:8443	5050758	0	True				
ANR	5051921	EqualityExpression	"strcmp ( Param , ""PageUsesTransparency"" ) == 0"		5050758	0		==			
ANR	5051922	CallExpression	"strcmp ( Param , ""PageUsesTransparency"" )"		5050758	0					
ANR	5051923	Callee	strcmp		5050758	0					
ANR	5051924	Identifier	strcmp		5050758	0					
ANR	5051925	ArgumentList	Param		5050758	1					
ANR	5051926	Argument	Param		5050758	0					
ANR	5051927	Identifier	Param		5050758	0					
ANR	5051928	Argument	"""PageUsesTransparency"""		5050758	1					
ANR	5051929	PrimaryExpression	"""PageUsesTransparency"""		5050758	0					
ANR	5051930	PrimaryExpression	0		5050758	1					
ANR	5051931	CompoundStatement		150:52:6131:6131	5050758	1					
ANR	5051932	ReturnStatement	"return param_write_bool ( plist , ""PageUsesTransparency"" , & dev -> page_uses_transparency ) ;"	222:8:8456:8540	5050758	0	True				
ANR	5051933	CallExpression	"param_write_bool ( plist , ""PageUsesTransparency"" , & dev -> page_uses_transparency )"		5050758	0					
ANR	5051934	Callee	param_write_bool		5050758	0					
ANR	5051935	Identifier	param_write_bool		5050758	0					
ANR	5051936	ArgumentList	plist		5050758	1					
ANR	5051937	Argument	plist		5050758	0					
ANR	5051938	Identifier	plist		5050758	0					
ANR	5051939	Argument	"""PageUsesTransparency"""		5050758	1					
ANR	5051940	PrimaryExpression	"""PageUsesTransparency"""		5050758	0					
ANR	5051941	Argument	& dev -> page_uses_transparency		5050758	2					
ANR	5051942	UnaryOperationExpression	& dev -> page_uses_transparency		5050758	0					
ANR	5051943	UnaryOperator	&		5050758	0					
ANR	5051944	PtrMemberAccess	dev -> page_uses_transparency		5050758	1					
ANR	5051945	Identifier	dev		5050758	0					
ANR	5051946	Identifier	page_uses_transparency		5050758	1					
ANR	5051947	IfStatement	"if ( strcmp ( Param , ""MaxBitmap"" ) == 0 )"		5050758	44					
ANR	5051948	Condition	"strcmp ( Param , ""MaxBitmap"" ) == 0"	224:8:8556:8586	5050758	0	True				
ANR	5051949	EqualityExpression	"strcmp ( Param , ""MaxBitmap"" ) == 0"		5050758	0		==			
ANR	5051950	CallExpression	"strcmp ( Param , ""MaxBitmap"" )"		5050758	0					
ANR	5051951	Callee	strcmp		5050758	0					
ANR	5051952	Identifier	strcmp		5050758	0					
ANR	5051953	ArgumentList	Param		5050758	1					
ANR	5051954	Argument	Param		5050758	0					
ANR	5051955	Identifier	Param		5050758	0					
ANR	5051956	Argument	"""MaxBitmap"""		5050758	1					
ANR	5051957	PrimaryExpression	"""MaxBitmap"""		5050758	0					
ANR	5051958	PrimaryExpression	0		5050758	1					
ANR	5051959	CompoundStatement		153:41:6274:6274	5050758	1					
ANR	5051960	ReturnStatement	"return param_write_long ( plist , ""MaxBitmap"" , & ( dev -> space_params . MaxBitmap ) ) ;"	225:8:8599:8674	5050758	0	True				
ANR	5051961	CallExpression	"param_write_long ( plist , ""MaxBitmap"" , & ( dev -> space_params . MaxBitmap ) )"		5050758	0					
ANR	5051962	Callee	param_write_long		5050758	0					
ANR	5051963	Identifier	param_write_long		5050758	0					
ANR	5051964	ArgumentList	plist		5050758	1					
ANR	5051965	Argument	plist		5050758	0					
ANR	5051966	Identifier	plist		5050758	0					
ANR	5051967	Argument	"""MaxBitmap"""		5050758	1					
ANR	5051968	PrimaryExpression	"""MaxBitmap"""		5050758	0					
ANR	5051969	Argument	& ( dev -> space_params . MaxBitmap )		5050758	2					
ANR	5051970	UnaryOperationExpression	& ( dev -> space_params . MaxBitmap )		5050758	0					
ANR	5051971	UnaryOperator	&		5050758	0					
ANR	5051972	MemberAccess	dev -> space_params . MaxBitmap		5050758	1					
ANR	5051973	PtrMemberAccess	dev -> space_params		5050758	0					
ANR	5051974	Identifier	dev		5050758	0					
ANR	5051975	Identifier	space_params		5050758	1					
ANR	5051976	Identifier	MaxBitmap		5050758	1					
ANR	5051977	IfStatement	"if ( strcmp ( Param , ""BandBufferSpace"" ) == 0 )"		5050758	45					
ANR	5051978	Condition	"strcmp ( Param , ""BandBufferSpace"" ) == 0"	227:8:8690:8726	5050758	0	True				
ANR	5051979	EqualityExpression	"strcmp ( Param , ""BandBufferSpace"" ) == 0"		5050758	0		==			
ANR	5051980	CallExpression	"strcmp ( Param , ""BandBufferSpace"" )"		5050758	0					
ANR	5051981	Callee	strcmp		5050758	0					
ANR	5051982	Identifier	strcmp		5050758	0					
ANR	5051983	ArgumentList	Param		5050758	1					
ANR	5051984	Argument	Param		5050758	0					
ANR	5051985	Identifier	Param		5050758	0					
ANR	5051986	Argument	"""BandBufferSpace"""		5050758	1					
ANR	5051987	PrimaryExpression	"""BandBufferSpace"""		5050758	0					
ANR	5051988	PrimaryExpression	0		5050758	1					
ANR	5051989	CompoundStatement		156:47:6414:6414	5050758	1					
ANR	5051990	ReturnStatement	"return param_write_long ( plist , ""BandBufferSpace"" , & dev -> space_params . band . BandBufferSpace ) ;"	228:8:8739:8829	5050758	0	True				
ANR	5051991	CallExpression	"param_write_long ( plist , ""BandBufferSpace"" , & dev -> space_params . band . BandBufferSpace )"		5050758	0					
ANR	5051992	Callee	param_write_long		5050758	0					
ANR	5051993	Identifier	param_write_long		5050758	0					
ANR	5051994	ArgumentList	plist		5050758	1					
ANR	5051995	Argument	plist		5050758	0					
ANR	5051996	Identifier	plist		5050758	0					
ANR	5051997	Argument	"""BandBufferSpace"""		5050758	1					
ANR	5051998	PrimaryExpression	"""BandBufferSpace"""		5050758	0					
ANR	5051999	Argument	& dev -> space_params . band . BandBufferSpace		5050758	2					
ANR	5052000	UnaryOperationExpression	& dev -> space_params . band . BandBufferSpace		5050758	0					
ANR	5052001	UnaryOperator	&		5050758	0					
ANR	5052002	MemberAccess	dev -> space_params . band . BandBufferSpace		5050758	1					
ANR	5052003	MemberAccess	dev -> space_params . band		5050758	0					
ANR	5052004	PtrMemberAccess	dev -> space_params		5050758	0					
ANR	5052005	Identifier	dev		5050758	0					
ANR	5052006	Identifier	space_params		5050758	1					
ANR	5052007	Identifier	band		5050758	1					
ANR	5052008	Identifier	BandBufferSpace		5050758	1					
ANR	5052009	IfStatement	"if ( strcmp ( Param , ""BandHeight"" ) == 0 )"		5050758	46					
ANR	5052010	Condition	"strcmp ( Param , ""BandHeight"" ) == 0"	230:8:8845:8876	5050758	0	True				
ANR	5052011	EqualityExpression	"strcmp ( Param , ""BandHeight"" ) == 0"		5050758	0		==			
ANR	5052012	CallExpression	"strcmp ( Param , ""BandHeight"" )"		5050758	0					
ANR	5052013	Callee	strcmp		5050758	0					
ANR	5052014	Identifier	strcmp		5050758	0					
ANR	5052015	ArgumentList	Param		5050758	1					
ANR	5052016	Argument	Param		5050758	0					
ANR	5052017	Identifier	Param		5050758	0					
ANR	5052018	Argument	"""BandHeight"""		5050758	1					
ANR	5052019	PrimaryExpression	"""BandHeight"""		5050758	0					
ANR	5052020	PrimaryExpression	0		5050758	1					
ANR	5052021	CompoundStatement		159:42:6564:6564	5050758	1					
ANR	5052022	ReturnStatement	"return param_write_int ( plist , ""BandHeight"" , & dev -> space_params . band . BandHeight ) ;"	231:8:8889:8968	5050758	0	True				
ANR	5052023	CallExpression	"param_write_int ( plist , ""BandHeight"" , & dev -> space_params . band . BandHeight )"		5050758	0					
ANR	5052024	Callee	param_write_int		5050758	0					
ANR	5052025	Identifier	param_write_int		5050758	0					
ANR	5052026	ArgumentList	plist		5050758	1					
ANR	5052027	Argument	plist		5050758	0					
ANR	5052028	Identifier	plist		5050758	0					
ANR	5052029	Argument	"""BandHeight"""		5050758	1					
ANR	5052030	PrimaryExpression	"""BandHeight"""		5050758	0					
ANR	5052031	Argument	& dev -> space_params . band . BandHeight		5050758	2					
ANR	5052032	UnaryOperationExpression	& dev -> space_params . band . BandHeight		5050758	0					
ANR	5052033	UnaryOperator	&		5050758	0					
ANR	5052034	MemberAccess	dev -> space_params . band . BandHeight		5050758	1					
ANR	5052035	MemberAccess	dev -> space_params . band		5050758	0					
ANR	5052036	PtrMemberAccess	dev -> space_params		5050758	0					
ANR	5052037	Identifier	dev		5050758	0					
ANR	5052038	Identifier	space_params		5050758	1					
ANR	5052039	Identifier	band		5050758	1					
ANR	5052040	Identifier	BandHeight		5050758	1					
ANR	5052041	IfStatement	"if ( strcmp ( Param , ""BandWidth"" ) == 0 )"		5050758	47					
ANR	5052042	Condition	"strcmp ( Param , ""BandWidth"" ) == 0"	233:8:8984:9014	5050758	0	True				
ANR	5052043	EqualityExpression	"strcmp ( Param , ""BandWidth"" ) == 0"		5050758	0		==			
ANR	5052044	CallExpression	"strcmp ( Param , ""BandWidth"" )"		5050758	0					
ANR	5052045	Callee	strcmp		5050758	0					
ANR	5052046	Identifier	strcmp		5050758	0					
ANR	5052047	ArgumentList	Param		5050758	1					
ANR	5052048	Argument	Param		5050758	0					
ANR	5052049	Identifier	Param		5050758	0					
ANR	5052050	Argument	"""BandWidth"""		5050758	1					
ANR	5052051	PrimaryExpression	"""BandWidth"""		5050758	0					
ANR	5052052	PrimaryExpression	0		5050758	1					
ANR	5052053	CompoundStatement		162:41:6702:6702	5050758	1					
ANR	5052054	ReturnStatement	"return param_write_int ( plist , ""BandWidth"" , & dev -> space_params . band . BandWidth ) ;"	234:8:9027:9104	5050758	0	True				
ANR	5052055	CallExpression	"param_write_int ( plist , ""BandWidth"" , & dev -> space_params . band . BandWidth )"		5050758	0					
ANR	5052056	Callee	param_write_int		5050758	0					
ANR	5052057	Identifier	param_write_int		5050758	0					
ANR	5052058	ArgumentList	plist		5050758	1					
ANR	5052059	Argument	plist		5050758	0					
ANR	5052060	Identifier	plist		5050758	0					
ANR	5052061	Argument	"""BandWidth"""		5050758	1					
ANR	5052062	PrimaryExpression	"""BandWidth"""		5050758	0					
ANR	5052063	Argument	& dev -> space_params . band . BandWidth		5050758	2					
ANR	5052064	UnaryOperationExpression	& dev -> space_params . band . BandWidth		5050758	0					
ANR	5052065	UnaryOperator	&		5050758	0					
ANR	5052066	MemberAccess	dev -> space_params . band . BandWidth		5050758	1					
ANR	5052067	MemberAccess	dev -> space_params . band		5050758	0					
ANR	5052068	PtrMemberAccess	dev -> space_params		5050758	0					
ANR	5052069	Identifier	dev		5050758	0					
ANR	5052070	Identifier	space_params		5050758	1					
ANR	5052071	Identifier	band		5050758	1					
ANR	5052072	Identifier	BandWidth		5050758	1					
ANR	5052073	IfStatement	"if ( strcmp ( Param , ""BufferSpace"" ) == 0 )"		5050758	48					
ANR	5052074	Condition	"strcmp ( Param , ""BufferSpace"" ) == 0"	236:8:9120:9152	5050758	0	True				
ANR	5052075	EqualityExpression	"strcmp ( Param , ""BufferSpace"" ) == 0"		5050758	0		==			
ANR	5052076	CallExpression	"strcmp ( Param , ""BufferSpace"" )"		5050758	0					
ANR	5052077	Callee	strcmp		5050758	0					
ANR	5052078	Identifier	strcmp		5050758	0					
ANR	5052079	ArgumentList	Param		5050758	1					
ANR	5052080	Argument	Param		5050758	0					
ANR	5052081	Identifier	Param		5050758	0					
ANR	5052082	Argument	"""BufferSpace"""		5050758	1					
ANR	5052083	PrimaryExpression	"""BufferSpace"""		5050758	0					
ANR	5052084	PrimaryExpression	0		5050758	1					
ANR	5052085	CompoundStatement		165:43:6840:6840	5050758	1					
ANR	5052086	ReturnStatement	"return param_write_long ( plist , ""BufferSpace"" , & dev -> space_params . BufferSpace ) ;"	237:8:9165:9242	5050758	0	True				
ANR	5052087	CallExpression	"param_write_long ( plist , ""BufferSpace"" , & dev -> space_params . BufferSpace )"		5050758	0					
ANR	5052088	Callee	param_write_long		5050758	0					
ANR	5052089	Identifier	param_write_long		5050758	0					
ANR	5052090	ArgumentList	plist		5050758	1					
ANR	5052091	Argument	plist		5050758	0					
ANR	5052092	Identifier	plist		5050758	0					
ANR	5052093	Argument	"""BufferSpace"""		5050758	1					
ANR	5052094	PrimaryExpression	"""BufferSpace"""		5050758	0					
ANR	5052095	Argument	& dev -> space_params . BufferSpace		5050758	2					
ANR	5052096	UnaryOperationExpression	& dev -> space_params . BufferSpace		5050758	0					
ANR	5052097	UnaryOperator	&		5050758	0					
ANR	5052098	MemberAccess	dev -> space_params . BufferSpace		5050758	1					
ANR	5052099	PtrMemberAccess	dev -> space_params		5050758	0					
ANR	5052100	Identifier	dev		5050758	0					
ANR	5052101	Identifier	space_params		5050758	1					
ANR	5052102	Identifier	BufferSpace		5050758	1					
ANR	5052103	IfStatement	"if ( strcmp ( Param , ""InterpolateControl"" ) == 0 )"		5050758	49					
ANR	5052104	Condition	"strcmp ( Param , ""InterpolateControl"" ) == 0"	239:8:9258:9297	5050758	0	True				
ANR	5052105	EqualityExpression	"strcmp ( Param , ""InterpolateControl"" ) == 0"		5050758	0		==			
ANR	5052106	CallExpression	"strcmp ( Param , ""InterpolateControl"" )"		5050758	0					
ANR	5052107	Callee	strcmp		5050758	0					
ANR	5052108	Identifier	strcmp		5050758	0					
ANR	5052109	ArgumentList	Param		5050758	1					
ANR	5052110	Argument	Param		5050758	0					
ANR	5052111	Identifier	Param		5050758	0					
ANR	5052112	Argument	"""InterpolateControl"""		5050758	1					
ANR	5052113	PrimaryExpression	"""InterpolateControl"""		5050758	0					
ANR	5052114	PrimaryExpression	0		5050758	1					
ANR	5052115	CompoundStatement		169:8:6995:7045	5050758	1					
ANR	5052116	IdentifierDeclStatement	int interpolate_control = dev -> interpolate_control ;	240:8:9310:9360	5050758	0	True				
ANR	5052117	IdentifierDecl	interpolate_control = dev -> interpolate_control		5050758	0					
ANR	5052118	IdentifierDeclType	int		5050758	0					
ANR	5052119	Identifier	interpolate_control		5050758	1					
ANR	5052120	AssignmentExpression	interpolate_control = dev -> interpolate_control		5050758	2		=			
ANR	5052121	Identifier	interpolate_control		5050758	0					
ANR	5052122	PtrMemberAccess	dev -> interpolate_control		5050758	1					
ANR	5052123	Identifier	dev		5050758	0					
ANR	5052124	Identifier	interpolate_control		5050758	1					
ANR	5052125	ReturnStatement	"return param_write_int ( plist , ""InterpolateControl"" , & interpolate_control ) ;"	241:8:9370:9443	5050758	1	True				
ANR	5052126	CallExpression	"param_write_int ( plist , ""InterpolateControl"" , & interpolate_control )"		5050758	0					
ANR	5052127	Callee	param_write_int		5050758	0					
ANR	5052128	Identifier	param_write_int		5050758	0					
ANR	5052129	ArgumentList	plist		5050758	1					
ANR	5052130	Argument	plist		5050758	0					
ANR	5052131	Identifier	plist		5050758	0					
ANR	5052132	Argument	"""InterpolateControl"""		5050758	1					
ANR	5052133	PrimaryExpression	"""InterpolateControl"""		5050758	0					
ANR	5052134	Argument	& interpolate_control		5050758	2					
ANR	5052135	UnaryOperationExpression	& interpolate_control		5050758	0					
ANR	5052136	UnaryOperator	&		5050758	0					
ANR	5052137	Identifier	interpolate_control		5050758	1					
ANR	5052138	IfStatement	"if ( strcmp ( Param , ""LeadingEdge"" ) == 0 )"		5050758	50					
ANR	5052139	Condition	"strcmp ( Param , ""LeadingEdge"" ) == 0"	243:8:9459:9491	5050758	0	True				
ANR	5052140	EqualityExpression	"strcmp ( Param , ""LeadingEdge"" ) == 0"		5050758	0		==			
ANR	5052141	CallExpression	"strcmp ( Param , ""LeadingEdge"" )"		5050758	0					
ANR	5052142	Callee	strcmp		5050758	0					
ANR	5052143	Identifier	strcmp		5050758	0					
ANR	5052144	ArgumentList	Param		5050758	1					
ANR	5052145	Argument	Param		5050758	0					
ANR	5052146	Identifier	Param		5050758	0					
ANR	5052147	Argument	"""LeadingEdge"""		5050758	1					
ANR	5052148	PrimaryExpression	"""LeadingEdge"""		5050758	0					
ANR	5052149	PrimaryExpression	0		5050758	1					
ANR	5052150	CompoundStatement		172:43:7179:7179	5050758	1					
ANR	5052151	IfStatement	if ( dev -> LeadingEdge & LEADINGEDGE_SET_MASK )		5050758	0					
ANR	5052152	Condition	dev -> LeadingEdge & LEADINGEDGE_SET_MASK	244:12:9508:9546	5050758	0	True				
ANR	5052153	BitAndExpression	dev -> LeadingEdge & LEADINGEDGE_SET_MASK		5050758	0		&			
ANR	5052154	PtrMemberAccess	dev -> LeadingEdge		5050758	0					
ANR	5052155	Identifier	dev		5050758	0					
ANR	5052156	Identifier	LeadingEdge		5050758	1					
ANR	5052157	Identifier	LEADINGEDGE_SET_MASK		5050758	1					
ANR	5052158	CompoundStatement		174:12:7248:7301	5050758	1					
ANR	5052159	IdentifierDeclStatement	int leadingedge = dev -> LeadingEdge & LEADINGEDGE_MASK ;	245:12:9563:9616	5050758	0	True				
ANR	5052160	IdentifierDecl	leadingedge = dev -> LeadingEdge & LEADINGEDGE_MASK		5050758	0					
ANR	5052161	IdentifierDeclType	int		5050758	0					
ANR	5052162	Identifier	leadingedge		5050758	1					
ANR	5052163	AssignmentExpression	leadingedge = dev -> LeadingEdge & LEADINGEDGE_MASK		5050758	2		=			
ANR	5052164	Identifier	leadingedge		5050758	0					
ANR	5052165	BitAndExpression	dev -> LeadingEdge & LEADINGEDGE_MASK		5050758	1		&			
ANR	5052166	PtrMemberAccess	dev -> LeadingEdge		5050758	0					
ANR	5052167	Identifier	dev		5050758	0					
ANR	5052168	Identifier	LeadingEdge		5050758	1					
ANR	5052169	Identifier	LEADINGEDGE_MASK		5050758	1					
ANR	5052170	ReturnStatement	"return param_write_int ( plist , ""LeadingEdge"" , & leadingedge ) ;"	246:12:9630:9688	5050758	1	True				
ANR	5052171	CallExpression	"param_write_int ( plist , ""LeadingEdge"" , & leadingedge )"		5050758	0					
ANR	5052172	Callee	param_write_int		5050758	0					
ANR	5052173	Identifier	param_write_int		5050758	0					
ANR	5052174	ArgumentList	plist		5050758	1					
ANR	5052175	Argument	plist		5050758	0					
ANR	5052176	Identifier	plist		5050758	0					
ANR	5052177	Argument	"""LeadingEdge"""		5050758	1					
ANR	5052178	PrimaryExpression	"""LeadingEdge"""		5050758	0					
ANR	5052179	Argument	& leadingedge		5050758	2					
ANR	5052180	UnaryOperationExpression	& leadingedge		5050758	0					
ANR	5052181	UnaryOperator	&		5050758	0					
ANR	5052182	Identifier	leadingedge		5050758	1					
ANR	5052183	ElseStatement	else		5050758	0					
ANR	5052184	ReturnStatement	"return param_write_null ( plist , ""LeadingEdge"" ) ;"	248:12:9717:9762	5050758	0	True				
ANR	5052185	CallExpression	"param_write_null ( plist , ""LeadingEdge"" )"		5050758	0					
ANR	5052186	Callee	param_write_null		5050758	0					
ANR	5052187	Identifier	param_write_null		5050758	0					
ANR	5052188	ArgumentList	plist		5050758	1					
ANR	5052189	Argument	plist		5050758	0					
ANR	5052190	Identifier	plist		5050758	0					
ANR	5052191	Argument	"""LeadingEdge"""		5050758	1					
ANR	5052192	PrimaryExpression	"""LeadingEdge"""		5050758	0					
ANR	5052193	IfStatement	if ( dev -> color_info . num_components > 1 )		5050758	51					
ANR	5052194	Condition	dev -> color_info . num_components > 1	251:8:9779:9812	5050758	0	True				
ANR	5052195	RelationalExpression	dev -> color_info . num_components > 1		5050758	0		>			
ANR	5052196	MemberAccess	dev -> color_info . num_components		5050758	0					
ANR	5052197	PtrMemberAccess	dev -> color_info		5050758	0					
ANR	5052198	Identifier	dev		5050758	0					
ANR	5052199	Identifier	color_info		5050758	1					
ANR	5052200	Identifier	num_components		5050758	1					
ANR	5052201	PrimaryExpression	1		5050758	1					
ANR	5052202	CompoundStatement		182:8:7565:7616	5050758	1					
ANR	5052203	IdentifierDeclStatement	int RGBValues = dev -> color_info . max_color + 1 ;	252:8:9825:9870	5050758	0	True				
ANR	5052204	IdentifierDecl	RGBValues = dev -> color_info . max_color + 1		5050758	0					
ANR	5052205	IdentifierDeclType	int		5050758	0					
ANR	5052206	Identifier	RGBValues		5050758	1					
ANR	5052207	AssignmentExpression	RGBValues = dev -> color_info . max_color + 1		5050758	2		=			
ANR	5052208	Identifier	RGBValues		5050758	0					
ANR	5052209	AdditiveExpression	dev -> color_info . max_color + 1		5050758	1		+			
ANR	5052210	MemberAccess	dev -> color_info . max_color		5050758	0					
ANR	5052211	PtrMemberAccess	dev -> color_info		5050758	0					
ANR	5052212	Identifier	dev		5050758	0					
ANR	5052213	Identifier	color_info		5050758	1					
ANR	5052214	Identifier	max_color		5050758	1					
ANR	5052215	PrimaryExpression	1		5050758	1					
ANR	5052216	IdentifierDeclStatement	long ColorValues = ( depth >= 32 ? - 1 : 1L << depth ) ;	253:8:9880:9931	5050758	1	True				
ANR	5052217	IdentifierDecl	ColorValues = ( depth >= 32 ? - 1 : 1L << depth )		5050758	0					
ANR	5052218	IdentifierDeclType	long		5050758	0					
ANR	5052219	Identifier	ColorValues		5050758	1					
ANR	5052220	AssignmentExpression	ColorValues = ( depth >= 32 ? - 1 : 1L << depth )		5050758	2		=			
ANR	5052221	Identifier	ColorValues		5050758	0					
ANR	5052222	ConditionalExpression	depth >= 32 ? - 1 : 1L << depth		5050758	1					
ANR	5052223	Condition	depth >= 32		5050758	0					
ANR	5052224	RelationalExpression	depth >= 32		5050758	0		>=			
ANR	5052225	Identifier	depth		5050758	0					
ANR	5052226	PrimaryExpression	32		5050758	1					
ANR	5052227	UnaryOperationExpression	- 1		5050758	1					
ANR	5052228	UnaryOperator	-		5050758	0					
ANR	5052229	PrimaryExpression	1		5050758	1					
ANR	5052230	ShiftExpression	1L << depth		5050758	2		<<			
ANR	5052231	PrimaryExpression	1L		5050758	0					
ANR	5052232	Identifier	depth		5050758	1					
ANR	5052233	IfStatement	"if ( strcmp ( Param , ""RedValues"" ) == 0 )"		5050758	2					
ANR	5052234	Condition	"strcmp ( Param , ""RedValues"" ) == 0"	255:12:9978:10008	5050758	0	True				
ANR	5052235	EqualityExpression	"strcmp ( Param , ""RedValues"" ) == 0"		5050758	0		==			
ANR	5052236	CallExpression	"strcmp ( Param , ""RedValues"" )"		5050758	0					
ANR	5052237	Callee	strcmp		5050758	0					
ANR	5052238	Identifier	strcmp		5050758	0					
ANR	5052239	ArgumentList	Param		5050758	1					
ANR	5052240	Argument	Param		5050758	0					
ANR	5052241	Identifier	Param		5050758	0					
ANR	5052242	Argument	"""RedValues"""		5050758	1					
ANR	5052243	PrimaryExpression	"""RedValues"""		5050758	0					
ANR	5052244	PrimaryExpression	0		5050758	1					
ANR	5052245	CompoundStatement		184:45:7696:7696	5050758	1					
ANR	5052246	ReturnStatement	"return param_write_int ( plist , ""RedValues"" , & RGBValues ) ;"	256:12:10025:10079	5050758	0	True				
ANR	5052247	CallExpression	"param_write_int ( plist , ""RedValues"" , & RGBValues )"		5050758	0					
ANR	5052248	Callee	param_write_int		5050758	0					
ANR	5052249	Identifier	param_write_int		5050758	0					
ANR	5052250	ArgumentList	plist		5050758	1					
ANR	5052251	Argument	plist		5050758	0					
ANR	5052252	Identifier	plist		5050758	0					
ANR	5052253	Argument	"""RedValues"""		5050758	1					
ANR	5052254	PrimaryExpression	"""RedValues"""		5050758	0					
ANR	5052255	Argument	& RGBValues		5050758	2					
ANR	5052256	UnaryOperationExpression	& RGBValues		5050758	0					
ANR	5052257	UnaryOperator	&		5050758	0					
ANR	5052258	Identifier	RGBValues		5050758	1					
ANR	5052259	IfStatement	"if ( strcmp ( Param , ""GreenValues"" ) == 0 )"		5050758	3					
ANR	5052260	Condition	"strcmp ( Param , ""GreenValues"" ) == 0"	258:12:10103:10135	5050758	0	True				
ANR	5052261	EqualityExpression	"strcmp ( Param , ""GreenValues"" ) == 0"		5050758	0		==			
ANR	5052262	CallExpression	"strcmp ( Param , ""GreenValues"" )"		5050758	0					
ANR	5052263	Callee	strcmp		5050758	0					
ANR	5052264	Identifier	strcmp		5050758	0					
ANR	5052265	ArgumentList	Param		5050758	1					
ANR	5052266	Argument	Param		5050758	0					
ANR	5052267	Identifier	Param		5050758	0					
ANR	5052268	Argument	"""GreenValues"""		5050758	1					
ANR	5052269	PrimaryExpression	"""GreenValues"""		5050758	0					
ANR	5052270	PrimaryExpression	0		5050758	1					
ANR	5052271	CompoundStatement		187:47:7823:7823	5050758	1					
ANR	5052272	ReturnStatement	"return param_write_int ( plist , ""GreenValues"" , & RGBValues ) ;"	259:12:10152:10208	5050758	0	True				
ANR	5052273	CallExpression	"param_write_int ( plist , ""GreenValues"" , & RGBValues )"		5050758	0					
ANR	5052274	Callee	param_write_int		5050758	0					
ANR	5052275	Identifier	param_write_int		5050758	0					
ANR	5052276	ArgumentList	plist		5050758	1					
ANR	5052277	Argument	plist		5050758	0					
ANR	5052278	Identifier	plist		5050758	0					
ANR	5052279	Argument	"""GreenValues"""		5050758	1					
ANR	5052280	PrimaryExpression	"""GreenValues"""		5050758	0					
ANR	5052281	Argument	& RGBValues		5050758	2					
ANR	5052282	UnaryOperationExpression	& RGBValues		5050758	0					
ANR	5052283	UnaryOperator	&		5050758	0					
ANR	5052284	Identifier	RGBValues		5050758	1					
ANR	5052285	IfStatement	"if ( strcmp ( Param , ""BlueValues"" ) == 0 )"		5050758	4					
ANR	5052286	Condition	"strcmp ( Param , ""BlueValues"" ) == 0"	261:12:10232:10263	5050758	0	True				
ANR	5052287	EqualityExpression	"strcmp ( Param , ""BlueValues"" ) == 0"		5050758	0		==			
ANR	5052288	CallExpression	"strcmp ( Param , ""BlueValues"" )"		5050758	0					
ANR	5052289	Callee	strcmp		5050758	0					
ANR	5052290	Identifier	strcmp		5050758	0					
ANR	5052291	ArgumentList	Param		5050758	1					
ANR	5052292	Argument	Param		5050758	0					
ANR	5052293	Identifier	Param		5050758	0					
ANR	5052294	Argument	"""BlueValues"""		5050758	1					
ANR	5052295	PrimaryExpression	"""BlueValues"""		5050758	0					
ANR	5052296	PrimaryExpression	0		5050758	1					
ANR	5052297	CompoundStatement		190:46:7951:7951	5050758	1					
ANR	5052298	ReturnStatement	"return param_write_int ( plist , ""BlueValues"" , & RGBValues ) ;"	262:12:10280:10335	5050758	0	True				
ANR	5052299	CallExpression	"param_write_int ( plist , ""BlueValues"" , & RGBValues )"		5050758	0					
ANR	5052300	Callee	param_write_int		5050758	0					
ANR	5052301	Identifier	param_write_int		5050758	0					
ANR	5052302	ArgumentList	plist		5050758	1					
ANR	5052303	Argument	plist		5050758	0					
ANR	5052304	Identifier	plist		5050758	0					
ANR	5052305	Argument	"""BlueValues"""		5050758	1					
ANR	5052306	PrimaryExpression	"""BlueValues"""		5050758	0					
ANR	5052307	Argument	& RGBValues		5050758	2					
ANR	5052308	UnaryOperationExpression	& RGBValues		5050758	0					
ANR	5052309	UnaryOperator	&		5050758	0					
ANR	5052310	Identifier	RGBValues		5050758	1					
ANR	5052311	IfStatement	"if ( strcmp ( Param , ""ColorValues"" ) == 0 )"		5050758	5					
ANR	5052312	Condition	"strcmp ( Param , ""ColorValues"" ) == 0"	264:12:10359:10391	5050758	0	True				
ANR	5052313	EqualityExpression	"strcmp ( Param , ""ColorValues"" ) == 0"		5050758	0		==			
ANR	5052314	CallExpression	"strcmp ( Param , ""ColorValues"" )"		5050758	0					
ANR	5052315	Callee	strcmp		5050758	0					
ANR	5052316	Identifier	strcmp		5050758	0					
ANR	5052317	ArgumentList	Param		5050758	1					
ANR	5052318	Argument	Param		5050758	0					
ANR	5052319	Identifier	Param		5050758	0					
ANR	5052320	Argument	"""ColorValues"""		5050758	1					
ANR	5052321	PrimaryExpression	"""ColorValues"""		5050758	0					
ANR	5052322	PrimaryExpression	0		5050758	1					
ANR	5052323	CompoundStatement		193:47:8079:8079	5050758	1					
ANR	5052324	ReturnStatement	"return param_write_long ( plist , ""ColorValues"" , & ColorValues ) ;"	265:12:10408:10467	5050758	0	True				
ANR	5052325	CallExpression	"param_write_long ( plist , ""ColorValues"" , & ColorValues )"		5050758	0					
ANR	5052326	Callee	param_write_long		5050758	0					
ANR	5052327	Identifier	param_write_long		5050758	0					
ANR	5052328	ArgumentList	plist		5050758	1					
ANR	5052329	Argument	plist		5050758	0					
ANR	5052330	Identifier	plist		5050758	0					
ANR	5052331	Argument	"""ColorValues"""		5050758	1					
ANR	5052332	PrimaryExpression	"""ColorValues"""		5050758	0					
ANR	5052333	Argument	& ColorValues		5050758	2					
ANR	5052334	UnaryOperationExpression	& ColorValues		5050758	0					
ANR	5052335	UnaryOperator	&		5050758	0					
ANR	5052336	Identifier	ColorValues		5050758	1					
ANR	5052337	IfStatement	"if ( strcmp ( Param , ""HWColorMap"" ) == 0 )"		5050758	52					
ANR	5052338	Condition	"strcmp ( Param , ""HWColorMap"" ) == 0"	268:8:10493:10524	5050758	0	True				
ANR	5052339	EqualityExpression	"strcmp ( Param , ""HWColorMap"" ) == 0"		5050758	0		==			
ANR	5052340	CallExpression	"strcmp ( Param , ""HWColorMap"" )"		5050758	0					
ANR	5052341	Callee	strcmp		5050758	0					
ANR	5052342	Identifier	strcmp		5050758	0					
ANR	5052343	ArgumentList	Param		5050758	1					
ANR	5052344	Argument	Param		5050758	0					
ANR	5052345	Identifier	Param		5050758	0					
ANR	5052346	Argument	"""HWColorMap"""		5050758	1					
ANR	5052347	PrimaryExpression	"""HWColorMap"""		5050758	0					
ANR	5052348	PrimaryExpression	0		5050758	1					
ANR	5052349	CompoundStatement		198:8:8222:8242	5050758	1					
ANR	5052350	IdentifierDeclStatement	byte palette [ 3 << 8 ] ;	269:8:10537:10557	5050758	0	True				
ANR	5052351	IdentifierDecl	palette [ 3 << 8 ]		5050758	0					
ANR	5052352	IdentifierDeclType	byte [ 3 << 8 ]		5050758	0					
ANR	5052353	Identifier	palette		5050758	1					
ANR	5052354	ShiftExpression	3 << 8		5050758	2		<<			
ANR	5052355	PrimaryExpression	3		5050758	0					
ANR	5052356	PrimaryExpression	8		5050758	1					
ANR	5052357	IfStatement	"if ( param_HWColorMap ( dev , palette ) )"		5050758	1					
ANR	5052358	Condition	"param_HWColorMap ( dev , palette )"	271:12:10572:10601	5050758	0	True				
ANR	5052359	CallExpression	"param_HWColorMap ( dev , palette )"		5050758	0					
ANR	5052360	Callee	param_HWColorMap		5050758	0					
ANR	5052361	Identifier	param_HWColorMap		5050758	0					
ANR	5052362	ArgumentList	dev		5050758	1					
ANR	5052363	Argument	dev		5050758	0					
ANR	5052364	Identifier	dev		5050758	0					
ANR	5052365	Argument	palette		5050758	1					
ANR	5052366	Identifier	palette		5050758	0					
ANR	5052367	CompoundStatement		201:12:8303:8324	5050758	1					
ANR	5052368	IdentifierDeclStatement	gs_param_string hwcms ;	272:12:10618:10639	5050758	0	True				
ANR	5052369	IdentifierDecl	hwcms		5050758	0					
ANR	5052370	IdentifierDeclType	gs_param_string		5050758	0					
ANR	5052371	Identifier	hwcms		5050758	1					
ANR	5052372	ExpressionStatement	"hwcms . data = palette , hwcms . size = colors << depth , hwcms . persistent = false"	274:12:10654:10746	5050758	1	True				
ANR	5052373	Expression	"hwcms . data = palette , hwcms . size = colors << depth , hwcms . persistent = false"		5050758	0					
ANR	5052374	AssignmentExpression	hwcms . data = palette		5050758	0		=			
ANR	5052375	MemberAccess	hwcms . data		5050758	0					
ANR	5052376	Identifier	hwcms		5050758	0					
ANR	5052377	Identifier	data		5050758	1					
ANR	5052378	Identifier	palette		5050758	1					
ANR	5052379	Expression	"hwcms . size = colors << depth , hwcms . persistent = false"		5050758	1					
ANR	5052380	AssignmentExpression	hwcms . size = colors << depth		5050758	0		=			
ANR	5052381	MemberAccess	hwcms . size		5050758	0					
ANR	5052382	Identifier	hwcms		5050758	0					
ANR	5052383	Identifier	size		5050758	1					
ANR	5052384	ShiftExpression	colors << depth		5050758	1		<<			
ANR	5052385	Identifier	colors		5050758	0					
ANR	5052386	Identifier	depth		5050758	1					
ANR	5052387	AssignmentExpression	hwcms . persistent = false		5050758	1		=			
ANR	5052388	MemberAccess	hwcms . persistent		5050758	0					
ANR	5052389	Identifier	hwcms		5050758	0					
ANR	5052390	Identifier	persistent		5050758	1					
ANR	5052391	Identifier	false		5050758	1					
ANR	5052392	ReturnStatement	"return param_write_string ( plist , ""HWColorMap"" , & hwcms ) ;"	276:12:10760:10814	5050758	2	True				
ANR	5052393	CallExpression	"param_write_string ( plist , ""HWColorMap"" , & hwcms )"		5050758	0					
ANR	5052394	Callee	param_write_string		5050758	0					
ANR	5052395	Identifier	param_write_string		5050758	0					
ANR	5052396	ArgumentList	plist		5050758	1					
ANR	5052397	Argument	plist		5050758	0					
ANR	5052398	Identifier	plist		5050758	0					
ANR	5052399	Argument	"""HWColorMap"""		5050758	1					
ANR	5052400	PrimaryExpression	"""HWColorMap"""		5050758	0					
ANR	5052401	Argument	& hwcms		5050758	2					
ANR	5052402	UnaryOperationExpression	& hwcms		5050758	0					
ANR	5052403	UnaryOperator	&		5050758	0					
ANR	5052404	Identifier	hwcms		5050758	1					
ANR	5052405	IfStatement	"if ( dev_proc ( dev , get_profile ) != NULL )"		5050758	53					
ANR	5052406	Condition	"dev_proc ( dev , get_profile ) != NULL"	288:8:11334:11367	5050758	0	True				
ANR	5052407	EqualityExpression	"dev_proc ( dev , get_profile ) != NULL"		5050758	0		!=			
ANR	5052408	CallExpression	"dev_proc ( dev , get_profile )"		5050758	0					
ANR	5052409	Callee	dev_proc		5050758	0					
ANR	5052410	Identifier	dev_proc		5050758	0					
ANR	5052411	ArgumentList	dev		5050758	1					
ANR	5052412	Argument	dev		5050758	0					
ANR	5052413	Identifier	dev		5050758	0					
ANR	5052414	Argument	get_profile		5050758	1					
ANR	5052415	Identifier	get_profile		5050758	0					
ANR	5052416	Identifier	NULL		5050758	1					
ANR	5052417	CompoundStatement		218:8:9065:9073	5050758	1					
ANR	5052418	IdentifierDeclStatement	int code ;	289:8:11380:11388	5050758	0	True				
ANR	5052419	IdentifierDecl	code		5050758	0					
ANR	5052420	IdentifierDeclType	int		5050758	0					
ANR	5052421	Identifier	code		5050758	1					
ANR	5052422	ExpressionStatement	"code = dev_proc ( dev , get_profile ) ( dev , & dev_profile )"	290:8:11398:11451	5050758	1	True				
ANR	5052423	AssignmentExpression	"code = dev_proc ( dev , get_profile ) ( dev , & dev_profile )"		5050758	0		=			
ANR	5052424	Identifier	code		5050758	0					
ANR	5052425	CallExpression	"dev_proc ( dev , get_profile ) ( dev , & dev_profile )"		5050758	1					
ANR	5052426	Callee	"dev_proc ( dev , get_profile )"		5050758	0					
ANR	5052427	CallExpression	"dev_proc ( dev , get_profile )"		5050758	0					
ANR	5052428	Callee	dev_proc		5050758	0					
ANR	5052429	Identifier	dev_proc		5050758	0					
ANR	5052430	ArgumentList	dev		5050758	1					
ANR	5052431	Argument	dev		5050758	0					
ANR	5052432	Identifier	dev		5050758	0					
ANR	5052433	Argument	get_profile		5050758	1					
ANR	5052434	Identifier	get_profile		5050758	0					
ANR	5052435	ArgumentList	dev		5050758	1					
ANR	5052436	Argument	dev		5050758	0					
ANR	5052437	Identifier	dev		5050758	0					
ANR	5052438	Argument	& dev_profile		5050758	1					
ANR	5052439	UnaryOperationExpression	& dev_profile		5050758	0					
ANR	5052440	UnaryOperator	&		5050758	0					
ANR	5052441	Identifier	dev_profile		5050758	1					
ANR	5052442	IfStatement	if ( code < 0 )		5050758	2					
ANR	5052443	Condition	code < 0	291:12:11465:11472	5050758	0	True				
ANR	5052444	RelationalExpression	code < 0		5050758	0		<			
ANR	5052445	Identifier	code		5050758	0					
ANR	5052446	PrimaryExpression	0		5050758	1					
ANR	5052447	ReturnStatement	return code ;	292:12:11487:11498	5050758	1	True				
ANR	5052448	Identifier	code		5050758	0					
ANR	5052449	IfStatement	if ( dev_profile == NULL )		5050758	3					
ANR	5052450	Condition	dev_profile == NULL	293:12:11512:11530	5050758	0	True				
ANR	5052451	EqualityExpression	dev_profile == NULL		5050758	0		==			
ANR	5052452	Identifier	dev_profile		5050758	0					
ANR	5052453	Identifier	NULL		5050758	1					
ANR	5052454	CompoundStatement		222:33:9218:9218	5050758	1					
ANR	5052455	ExpressionStatement	"code = gsicc_init_device_profile_struct ( dev , NULL , 0 )"	294:12:11547:11600	5050758	0	True				
ANR	5052456	AssignmentExpression	"code = gsicc_init_device_profile_struct ( dev , NULL , 0 )"		5050758	0		=			
ANR	5052457	Identifier	code		5050758	0					
ANR	5052458	CallExpression	"gsicc_init_device_profile_struct ( dev , NULL , 0 )"		5050758	1					
ANR	5052459	Callee	gsicc_init_device_profile_struct		5050758	0					
ANR	5052460	Identifier	gsicc_init_device_profile_struct		5050758	0					
ANR	5052461	ArgumentList	dev		5050758	1					
ANR	5052462	Argument	dev		5050758	0					
ANR	5052463	Identifier	dev		5050758	0					
ANR	5052464	Argument	NULL		5050758	1					
ANR	5052465	Identifier	NULL		5050758	0					
ANR	5052466	Argument	0		5050758	2					
ANR	5052467	PrimaryExpression	0		5050758	0					
ANR	5052468	IfStatement	if ( code < 0 )		5050758	1					
ANR	5052469	Condition	code < 0	295:16:11618:11625	5050758	0	True				
ANR	5052470	RelationalExpression	code < 0		5050758	0		<			
ANR	5052471	Identifier	code		5050758	0					
ANR	5052472	PrimaryExpression	0		5050758	1					
ANR	5052473	ReturnStatement	return code ;	296:16:11644:11655	5050758	1	True				
ANR	5052474	Identifier	code		5050758	0					
ANR	5052475	ExpressionStatement	"code = dev_proc ( dev , get_profile ) ( dev , & dev_profile )"	297:12:11669:11722	5050758	2	True				
ANR	5052476	AssignmentExpression	"code = dev_proc ( dev , get_profile ) ( dev , & dev_profile )"		5050758	0		=			
ANR	5052477	Identifier	code		5050758	0					
ANR	5052478	CallExpression	"dev_proc ( dev , get_profile ) ( dev , & dev_profile )"		5050758	1					
ANR	5052479	Callee	"dev_proc ( dev , get_profile )"		5050758	0					
ANR	5052480	CallExpression	"dev_proc ( dev , get_profile )"		5050758	0					
ANR	5052481	Callee	dev_proc		5050758	0					
ANR	5052482	Identifier	dev_proc		5050758	0					
ANR	5052483	ArgumentList	dev		5050758	1					
ANR	5052484	Argument	dev		5050758	0					
ANR	5052485	Identifier	dev		5050758	0					
ANR	5052486	Argument	get_profile		5050758	1					
ANR	5052487	Identifier	get_profile		5050758	0					
ANR	5052488	ArgumentList	dev		5050758	1					
ANR	5052489	Argument	dev		5050758	0					
ANR	5052490	Identifier	dev		5050758	0					
ANR	5052491	Argument	& dev_profile		5050758	1					
ANR	5052492	UnaryOperationExpression	& dev_profile		5050758	0					
ANR	5052493	UnaryOperator	&		5050758	0					
ANR	5052494	Identifier	dev_profile		5050758	1					
ANR	5052495	IfStatement	if ( code < 0 )		5050758	3					
ANR	5052496	Condition	code < 0	298:16:11740:11747	5050758	0	True				
ANR	5052497	RelationalExpression	code < 0		5050758	0		<			
ANR	5052498	Identifier	code		5050758	0					
ANR	5052499	PrimaryExpression	0		5050758	1					
ANR	5052500	ReturnStatement	return code ;	299:16:11766:11777	5050758	1	True				
ANR	5052501	Identifier	code		5050758	0					
ANR	5052502	ForStatement	for ( k = 0 ; k < NUM_DEVICE_PROFILES ; k ++ )		5050758	4					
ANR	5052503	ForInit	k = 0 ;	301:13:11802:11807	5050758	0	True				
ANR	5052504	AssignmentExpression	k = 0		5050758	0		=			
ANR	5052505	Identifier	k		5050758	0					
ANR	5052506	PrimaryExpression	0		5050758	1					
ANR	5052507	Condition	k < NUM_DEVICE_PROFILES	301:20:11809:11831	5050758	1	True				
ANR	5052508	RelationalExpression	k < NUM_DEVICE_PROFILES		5050758	0		<			
ANR	5052509	Identifier	k		5050758	0					
ANR	5052510	Identifier	NUM_DEVICE_PROFILES		5050758	1					
ANR	5052511	PostIncDecOperationExpression	k ++	301:45:11834:11836	5050758	2	True				
ANR	5052512	Identifier	k		5050758	0					
ANR	5052513	IncDec	++		5050758	1					
ANR	5052514	CompoundStatement		230:50:9524:9524	5050758	3					
ANR	5052515	IfStatement	if ( dev_profile -> device_profile [ k ] == NULL || dev_profile -> device_profile [ k ] -> name == NULL )		5050758	0					
ANR	5052516	Condition	dev_profile -> device_profile [ k ] == NULL || dev_profile -> device_profile [ k ] -> name == NULL	302:16:11857:11958	5050758	0	True				
ANR	5052517	OrExpression	dev_profile -> device_profile [ k ] == NULL || dev_profile -> device_profile [ k ] -> name == NULL		5050758	0		||			
ANR	5052518	EqualityExpression	dev_profile -> device_profile [ k ] == NULL		5050758	0		==			
ANR	5052519	ArrayIndexing	dev_profile -> device_profile [ k ]		5050758	0					
ANR	5052520	PtrMemberAccess	dev_profile -> device_profile		5050758	0					
ANR	5052521	Identifier	dev_profile		5050758	0					
ANR	5052522	Identifier	device_profile		5050758	1					
ANR	5052523	Identifier	k		5050758	1					
ANR	5052524	Identifier	NULL		5050758	1					
ANR	5052525	EqualityExpression	dev_profile -> device_profile [ k ] -> name == NULL		5050758	1		==			
ANR	5052526	PtrMemberAccess	dev_profile -> device_profile [ k ] -> name		5050758	0					
ANR	5052527	ArrayIndexing	dev_profile -> device_profile [ k ]		5050758	0					
ANR	5052528	PtrMemberAccess	dev_profile -> device_profile		5050758	0					
ANR	5052529	Identifier	dev_profile		5050758	0					
ANR	5052530	Identifier	device_profile		5050758	1					
ANR	5052531	Identifier	k		5050758	1					
ANR	5052532	Identifier	name		5050758	1					
ANR	5052533	Identifier	NULL		5050758	1					
ANR	5052534	CompoundStatement		232:65:9646:9646	5050758	1					
ANR	5052535	ExpressionStatement	"param_string_from_string ( profile_array [ k ] , null_str )"	304:16:11979:12031	5050758	0	True				
ANR	5052536	CallExpression	"param_string_from_string ( profile_array [ k ] , null_str )"		5050758	0					
ANR	5052537	Callee	param_string_from_string		5050758	0					
ANR	5052538	Identifier	param_string_from_string		5050758	0					
ANR	5052539	ArgumentList	profile_array [ k ]		5050758	1					
ANR	5052540	Argument	profile_array [ k ]		5050758	0					
ANR	5052541	ArrayIndexing	profile_array [ k ]		5050758	0					
ANR	5052542	Identifier	profile_array		5050758	0					
ANR	5052543	Identifier	k		5050758	1					
ANR	5052544	Argument	null_str		5050758	1					
ANR	5052545	Identifier	null_str		5050758	0					
ANR	5052546	ExpressionStatement	profile_intents [ k ] = gsRINOTSPECIFIED	305:16:12049:12086	5050758	1	True				
ANR	5052547	AssignmentExpression	profile_intents [ k ] = gsRINOTSPECIFIED		5050758	0		=			
ANR	5052548	ArrayIndexing	profile_intents [ k ]		5050758	0					
ANR	5052549	Identifier	profile_intents		5050758	0					
ANR	5052550	Identifier	k		5050758	1					
ANR	5052551	Identifier	gsRINOTSPECIFIED		5050758	1					
ANR	5052552	ExpressionStatement	blackptcomps [ k ] = gsBPNOTSPECIFIED	306:16:12104:12138	5050758	2	True				
ANR	5052553	AssignmentExpression	blackptcomps [ k ] = gsBPNOTSPECIFIED		5050758	0		=			
ANR	5052554	ArrayIndexing	blackptcomps [ k ]		5050758	0					
ANR	5052555	Identifier	blackptcomps		5050758	0					
ANR	5052556	Identifier	k		5050758	1					
ANR	5052557	Identifier	gsBPNOTSPECIFIED		5050758	1					
ANR	5052558	ExpressionStatement	blackpreserve [ k ] = gsBKPRESNOTSPECIFIED	307:16:12156:12195	5050758	3	True				
ANR	5052559	AssignmentExpression	blackpreserve [ k ] = gsBKPRESNOTSPECIFIED		5050758	0		=			
ANR	5052560	ArrayIndexing	blackpreserve [ k ]		5050758	0					
ANR	5052561	Identifier	blackpreserve		5050758	0					
ANR	5052562	Identifier	k		5050758	1					
ANR	5052563	Identifier	gsBKPRESNOTSPECIFIED		5050758	1					
ANR	5052564	ElseStatement	else		5050758	0					
ANR	5052565	CompoundStatement		237:19:9901:9901	5050758	0					
ANR	5052566	ExpressionStatement	"param_string_from_transient_string ( profile_array [ k ] , dev_profile -> device_profile [ k ] -> name )"	309:16:12234:12344	5050758	0	True				
ANR	5052567	CallExpression	"param_string_from_transient_string ( profile_array [ k ] , dev_profile -> device_profile [ k ] -> name )"		5050758	0					
ANR	5052568	Callee	param_string_from_transient_string		5050758	0					
ANR	5052569	Identifier	param_string_from_transient_string		5050758	0					
ANR	5052570	ArgumentList	profile_array [ k ]		5050758	1					
ANR	5052571	Argument	profile_array [ k ]		5050758	0					
ANR	5052572	ArrayIndexing	profile_array [ k ]		5050758	0					
ANR	5052573	Identifier	profile_array		5050758	0					
ANR	5052574	Identifier	k		5050758	1					
ANR	5052575	Argument	dev_profile -> device_profile [ k ] -> name		5050758	1					
ANR	5052576	PtrMemberAccess	dev_profile -> device_profile [ k ] -> name		5050758	0					
ANR	5052577	ArrayIndexing	dev_profile -> device_profile [ k ]		5050758	0					
ANR	5052578	PtrMemberAccess	dev_profile -> device_profile		5050758	0					
ANR	5052579	Identifier	dev_profile		5050758	0					
ANR	5052580	Identifier	device_profile		5050758	1					
ANR	5052581	Identifier	k		5050758	1					
ANR	5052582	Identifier	name		5050758	1					
ANR	5052583	ExpressionStatement	profile_intents [ k ] = dev_profile -> rendercond [ k ] . rendering_intent	311:16:12362:12426	5050758	1	True				
ANR	5052584	AssignmentExpression	profile_intents [ k ] = dev_profile -> rendercond [ k ] . rendering_intent		5050758	0		=			
ANR	5052585	ArrayIndexing	profile_intents [ k ]		5050758	0					
ANR	5052586	Identifier	profile_intents		5050758	0					
ANR	5052587	Identifier	k		5050758	1					
ANR	5052588	MemberAccess	dev_profile -> rendercond [ k ] . rendering_intent		5050758	1					
ANR	5052589	ArrayIndexing	dev_profile -> rendercond [ k ]		5050758	0					
ANR	5052590	PtrMemberAccess	dev_profile -> rendercond		5050758	0					
ANR	5052591	Identifier	dev_profile		5050758	0					
ANR	5052592	Identifier	rendercond		5050758	1					
ANR	5052593	Identifier	k		5050758	1					
ANR	5052594	Identifier	rendering_intent		5050758	1					
ANR	5052595	ExpressionStatement	blackptcomps [ k ] = dev_profile -> rendercond [ k ] . black_point_comp	312:16:12444:12505	5050758	2	True				
ANR	5052596	AssignmentExpression	blackptcomps [ k ] = dev_profile -> rendercond [ k ] . black_point_comp		5050758	0		=			
ANR	5052597	ArrayIndexing	blackptcomps [ k ]		5050758	0					
ANR	5052598	Identifier	blackptcomps		5050758	0					
ANR	5052599	Identifier	k		5050758	1					
ANR	5052600	MemberAccess	dev_profile -> rendercond [ k ] . black_point_comp		5050758	1					
ANR	5052601	ArrayIndexing	dev_profile -> rendercond [ k ]		5050758	0					
ANR	5052602	PtrMemberAccess	dev_profile -> rendercond		5050758	0					
ANR	5052603	Identifier	dev_profile		5050758	0					
ANR	5052604	Identifier	rendercond		5050758	1					
ANR	5052605	Identifier	k		5050758	1					
ANR	5052606	Identifier	black_point_comp		5050758	1					
ANR	5052607	ExpressionStatement	blackpreserve [ k ] = dev_profile -> rendercond [ k ] . preserve_black	313:16:12523:12583	5050758	3	True				
ANR	5052608	AssignmentExpression	blackpreserve [ k ] = dev_profile -> rendercond [ k ] . preserve_black		5050758	0		=			
ANR	5052609	ArrayIndexing	blackpreserve [ k ]		5050758	0					
ANR	5052610	Identifier	blackpreserve		5050758	0					
ANR	5052611	Identifier	k		5050758	1					
ANR	5052612	MemberAccess	dev_profile -> rendercond [ k ] . preserve_black		5050758	1					
ANR	5052613	ArrayIndexing	dev_profile -> rendercond [ k ]		5050758	0					
ANR	5052614	PtrMemberAccess	dev_profile -> rendercond		5050758	0					
ANR	5052615	Identifier	dev_profile		5050758	0					
ANR	5052616	Identifier	rendercond		5050758	1					
ANR	5052617	Identifier	k		5050758	1					
ANR	5052618	Identifier	preserve_black		5050758	1					
ANR	5052619	IfStatement	if ( dev_profile -> blend_profile == NULL )		5050758	5					
ANR	5052620	Condition	dev_profile -> blend_profile == NULL	316:12:12621:12654	5050758	0	True				
ANR	5052621	EqualityExpression	dev_profile -> blend_profile == NULL		5050758	0		==			
ANR	5052622	PtrMemberAccess	dev_profile -> blend_profile		5050758	0					
ANR	5052623	Identifier	dev_profile		5050758	0					
ANR	5052624	Identifier	blend_profile		5050758	1					
ANR	5052625	Identifier	NULL		5050758	1					
ANR	5052626	CompoundStatement		245:48:10342:10342	5050758	1					
ANR	5052627	ExpressionStatement	"param_string_from_string ( blend_profile , null_str )"	317:12:12671:12720	5050758	0	True				
ANR	5052628	CallExpression	"param_string_from_string ( blend_profile , null_str )"		5050758	0					
ANR	5052629	Callee	param_string_from_string		5050758	0					
ANR	5052630	Identifier	param_string_from_string		5050758	0					
ANR	5052631	ArgumentList	blend_profile		5050758	1					
ANR	5052632	Argument	blend_profile		5050758	0					
ANR	5052633	Identifier	blend_profile		5050758	0					
ANR	5052634	Argument	null_str		5050758	1					
ANR	5052635	Identifier	null_str		5050758	0					
ANR	5052636	ElseStatement	else		5050758	0					
ANR	5052637	CompoundStatement		247:15:10422:10422	5050758	0					
ANR	5052638	ExpressionStatement	"param_string_from_transient_string ( blend_profile , dev_profile -> blend_profile -> name )"	319:12:12751:12850	5050758	0	True				
ANR	5052639	CallExpression	"param_string_from_transient_string ( blend_profile , dev_profile -> blend_profile -> name )"		5050758	0					
ANR	5052640	Callee	param_string_from_transient_string		5050758	0					
ANR	5052641	Identifier	param_string_from_transient_string		5050758	0					
ANR	5052642	ArgumentList	blend_profile		5050758	1					
ANR	5052643	Argument	blend_profile		5050758	0					
ANR	5052644	Identifier	blend_profile		5050758	0					
ANR	5052645	Argument	dev_profile -> blend_profile -> name		5050758	1					
ANR	5052646	PtrMemberAccess	dev_profile -> blend_profile -> name		5050758	0					
ANR	5052647	PtrMemberAccess	dev_profile -> blend_profile		5050758	0					
ANR	5052648	Identifier	dev_profile		5050758	0					
ANR	5052649	Identifier	blend_profile		5050758	1					
ANR	5052650	Identifier	name		5050758	1					
ANR	5052651	IfStatement	if ( dev_profile -> postren_profile == NULL )		5050758	6					
ANR	5052652	Condition	dev_profile -> postren_profile == NULL	322:12:12874:12909	5050758	0	True				
ANR	5052653	EqualityExpression	dev_profile -> postren_profile == NULL		5050758	0		==			
ANR	5052654	PtrMemberAccess	dev_profile -> postren_profile		5050758	0					
ANR	5052655	Identifier	dev_profile		5050758	0					
ANR	5052656	Identifier	postren_profile		5050758	1					
ANR	5052657	Identifier	NULL		5050758	1					
ANR	5052658	CompoundStatement		251:50:10597:10597	5050758	1					
ANR	5052659	ExpressionStatement	"param_string_from_string ( postren_profile , null_str )"	323:12:12926:12977	5050758	0	True				
ANR	5052660	CallExpression	"param_string_from_string ( postren_profile , null_str )"		5050758	0					
ANR	5052661	Callee	param_string_from_string		5050758	0					
ANR	5052662	Identifier	param_string_from_string		5050758	0					
ANR	5052663	ArgumentList	postren_profile		5050758	1					
ANR	5052664	Argument	postren_profile		5050758	0					
ANR	5052665	Identifier	postren_profile		5050758	0					
ANR	5052666	Argument	null_str		5050758	1					
ANR	5052667	Identifier	null_str		5050758	0					
ANR	5052668	ElseStatement	else		5050758	0					
ANR	5052669	CompoundStatement		253:15:10679:10679	5050758	0					
ANR	5052670	ExpressionStatement	"param_string_from_transient_string ( postren_profile , dev_profile -> postren_profile -> name )"	325:12:13008:13111	5050758	0	True				
ANR	5052671	CallExpression	"param_string_from_transient_string ( postren_profile , dev_profile -> postren_profile -> name )"		5050758	0					
ANR	5052672	Callee	param_string_from_transient_string		5050758	0					
ANR	5052673	Identifier	param_string_from_transient_string		5050758	0					
ANR	5052674	ArgumentList	postren_profile		5050758	1					
ANR	5052675	Argument	postren_profile		5050758	0					
ANR	5052676	Identifier	postren_profile		5050758	0					
ANR	5052677	Argument	dev_profile -> postren_profile -> name		5050758	1					
ANR	5052678	PtrMemberAccess	dev_profile -> postren_profile -> name		5050758	0					
ANR	5052679	PtrMemberAccess	dev_profile -> postren_profile		5050758	0					
ANR	5052680	Identifier	dev_profile		5050758	0					
ANR	5052681	Identifier	postren_profile		5050758	1					
ANR	5052682	Identifier	name		5050758	1					
ANR	5052683	IfStatement	if ( dev_profile -> proof_profile == NULL )		5050758	7					
ANR	5052684	Condition	dev_profile -> proof_profile == NULL	328:12:13135:13168	5050758	0	True				
ANR	5052685	EqualityExpression	dev_profile -> proof_profile == NULL		5050758	0		==			
ANR	5052686	PtrMemberAccess	dev_profile -> proof_profile		5050758	0					
ANR	5052687	Identifier	dev_profile		5050758	0					
ANR	5052688	Identifier	proof_profile		5050758	1					
ANR	5052689	Identifier	NULL		5050758	1					
ANR	5052690	CompoundStatement		257:48:10856:10856	5050758	1					
ANR	5052691	ExpressionStatement	"param_string_from_string ( proof_profile , null_str )"	329:12:13185:13234	5050758	0	True				
ANR	5052692	CallExpression	"param_string_from_string ( proof_profile , null_str )"		5050758	0					
ANR	5052693	Callee	param_string_from_string		5050758	0					
ANR	5052694	Identifier	param_string_from_string		5050758	0					
ANR	5052695	ArgumentList	proof_profile		5050758	1					
ANR	5052696	Argument	proof_profile		5050758	0					
ANR	5052697	Identifier	proof_profile		5050758	0					
ANR	5052698	Argument	null_str		5050758	1					
ANR	5052699	Identifier	null_str		5050758	0					
ANR	5052700	ElseStatement	else		5050758	0					
ANR	5052701	CompoundStatement		259:15:10936:10936	5050758	0					
ANR	5052702	ExpressionStatement	"param_string_from_transient_string ( proof_profile , dev_profile -> proof_profile -> name )"	331:12:13265:13385	5050758	0	True				
ANR	5052703	CallExpression	"param_string_from_transient_string ( proof_profile , dev_profile -> proof_profile -> name )"		5050758	0					
ANR	5052704	Callee	param_string_from_transient_string		5050758	0					
ANR	5052705	Identifier	param_string_from_transient_string		5050758	0					
ANR	5052706	ArgumentList	proof_profile		5050758	1					
ANR	5052707	Argument	proof_profile		5050758	0					
ANR	5052708	Identifier	proof_profile		5050758	0					
ANR	5052709	Argument	dev_profile -> proof_profile -> name		5050758	1					
ANR	5052710	PtrMemberAccess	dev_profile -> proof_profile -> name		5050758	0					
ANR	5052711	PtrMemberAccess	dev_profile -> proof_profile		5050758	0					
ANR	5052712	Identifier	dev_profile		5050758	0					
ANR	5052713	Identifier	proof_profile		5050758	1					
ANR	5052714	Identifier	name		5050758	1					
ANR	5052715	IfStatement	if ( dev_profile -> link_profile == NULL )		5050758	8					
ANR	5052716	Condition	dev_profile -> link_profile == NULL	334:12:13409:13441	5050758	0	True				
ANR	5052717	EqualityExpression	dev_profile -> link_profile == NULL		5050758	0		==			
ANR	5052718	PtrMemberAccess	dev_profile -> link_profile		5050758	0					
ANR	5052719	Identifier	dev_profile		5050758	0					
ANR	5052720	Identifier	link_profile		5050758	1					
ANR	5052721	Identifier	NULL		5050758	1					
ANR	5052722	CompoundStatement		263:47:11129:11129	5050758	1					
ANR	5052723	ExpressionStatement	"param_string_from_string ( link_profile , null_str )"	335:12:13458:13506	5050758	0	True				
ANR	5052724	CallExpression	"param_string_from_string ( link_profile , null_str )"		5050758	0					
ANR	5052725	Callee	param_string_from_string		5050758	0					
ANR	5052726	Identifier	param_string_from_string		5050758	0					
ANR	5052727	ArgumentList	link_profile		5050758	1					
ANR	5052728	Argument	link_profile		5050758	0					
ANR	5052729	Identifier	link_profile		5050758	0					
ANR	5052730	Argument	null_str		5050758	1					
ANR	5052731	Identifier	null_str		5050758	0					
ANR	5052732	ElseStatement	else		5050758	0					
ANR	5052733	CompoundStatement		265:15:11208:11208	5050758	0					
ANR	5052734	ExpressionStatement	"param_string_from_transient_string ( link_profile , dev_profile -> link_profile -> name )"	337:12:13537:13655	5050758	0	True				
ANR	5052735	CallExpression	"param_string_from_transient_string ( link_profile , dev_profile -> link_profile -> name )"		5050758	0					
ANR	5052736	Callee	param_string_from_transient_string		5050758	0					
ANR	5052737	Identifier	param_string_from_transient_string		5050758	0					
ANR	5052738	ArgumentList	link_profile		5050758	1					
ANR	5052739	Argument	link_profile		5050758	0					
ANR	5052740	Identifier	link_profile		5050758	0					
ANR	5052741	Argument	dev_profile -> link_profile -> name		5050758	1					
ANR	5052742	PtrMemberAccess	dev_profile -> link_profile -> name		5050758	0					
ANR	5052743	PtrMemberAccess	dev_profile -> link_profile		5050758	0					
ANR	5052744	Identifier	dev_profile		5050758	0					
ANR	5052745	Identifier	link_profile		5050758	1					
ANR	5052746	Identifier	name		5050758	1					
ANR	5052747	ExpressionStatement	devicegraytok = dev_profile -> devicegraytok	340:8:13675:13717	5050758	9	True				
ANR	5052748	AssignmentExpression	devicegraytok = dev_profile -> devicegraytok		5050758	0		=			
ANR	5052749	Identifier	devicegraytok		5050758	0					
ANR	5052750	PtrMemberAccess	dev_profile -> devicegraytok		5050758	1					
ANR	5052751	Identifier	dev_profile		5050758	0					
ANR	5052752	Identifier	devicegraytok		5050758	1					
ANR	5052753	ExpressionStatement	graydetection = dev_profile -> graydetection	341:8:13727:13769	5050758	10	True				
ANR	5052754	AssignmentExpression	graydetection = dev_profile -> graydetection		5050758	0		=			
ANR	5052755	Identifier	graydetection		5050758	0					
ANR	5052756	PtrMemberAccess	dev_profile -> graydetection		5050758	1					
ANR	5052757	Identifier	dev_profile		5050758	0					
ANR	5052758	Identifier	graydetection		5050758	1					
ANR	5052759	ExpressionStatement	usefastcolor = dev_profile -> usefastcolor	342:8:13779:13819	5050758	11	True				
ANR	5052760	AssignmentExpression	usefastcolor = dev_profile -> usefastcolor		5050758	0		=			
ANR	5052761	Identifier	usefastcolor		5050758	0					
ANR	5052762	PtrMemberAccess	dev_profile -> usefastcolor		5050758	1					
ANR	5052763	Identifier	dev_profile		5050758	0					
ANR	5052764	Identifier	usefastcolor		5050758	1					
ANR	5052765	ExpressionStatement	sim_overprint = dev_profile -> sim_overprint	343:8:13829:13871	5050758	12	True				
ANR	5052766	AssignmentExpression	sim_overprint = dev_profile -> sim_overprint		5050758	0		=			
ANR	5052767	Identifier	sim_overprint		5050758	0					
ANR	5052768	PtrMemberAccess	dev_profile -> sim_overprint		5050758	1					
ANR	5052769	Identifier	dev_profile		5050758	0					
ANR	5052770	Identifier	sim_overprint		5050758	1					
ANR	5052771	ExpressionStatement	prebandthreshold = dev_profile -> prebandthreshold	344:8:13881:13929	5050758	13	True				
ANR	5052772	AssignmentExpression	prebandthreshold = dev_profile -> prebandthreshold		5050758	0		=			
ANR	5052773	Identifier	prebandthreshold		5050758	0					
ANR	5052774	PtrMemberAccess	dev_profile -> prebandthreshold		5050758	1					
ANR	5052775	Identifier	dev_profile		5050758	0					
ANR	5052776	Identifier	prebandthreshold		5050758	1					
ANR	5052777	IfStatement	if ( dev_profile -> spotnames == NULL )		5050758	14					
ANR	5052778	Condition	dev_profile -> spotnames == NULL	348:12:14121:14150	5050758	0	True				
ANR	5052779	EqualityExpression	dev_profile -> spotnames == NULL		5050758	0		==			
ANR	5052780	PtrMemberAccess	dev_profile -> spotnames		5050758	0					
ANR	5052781	Identifier	dev_profile		5050758	0					
ANR	5052782	Identifier	spotnames		5050758	1					
ANR	5052783	Identifier	NULL		5050758	1					
ANR	5052784	CompoundStatement		277:44:11838:11838	5050758	1					
ANR	5052785	ExpressionStatement	"param_string_from_string ( icc_colorants , null_str )"	349:12:14167:14216	5050758	0	True				
ANR	5052786	CallExpression	"param_string_from_string ( icc_colorants , null_str )"		5050758	0					
ANR	5052787	Callee	param_string_from_string		5050758	0					
ANR	5052788	Identifier	param_string_from_string		5050758	0					
ANR	5052789	ArgumentList	icc_colorants		5050758	1					
ANR	5052790	Argument	icc_colorants		5050758	0					
ANR	5052791	Identifier	icc_colorants		5050758	0					
ANR	5052792	Argument	null_str		5050758	1					
ANR	5052793	Identifier	null_str		5050758	0					
ANR	5052794	ElseStatement	else		5050758	0					
ANR	5052795	CompoundStatement		280:12:11932:11952	5050758	0					
ANR	5052796	IdentifierDeclStatement	char * colorant_names ;	351:12:14247:14267	5050758	0	True				
ANR	5052797	IdentifierDecl	* colorant_names		5050758	0					
ANR	5052798	IdentifierDeclType	char *		5050758	0					
ANR	5052799	Identifier	colorant_names		5050758	1					
ANR	5052800	ExpressionStatement	colorant_names = gsicc_get_dev_icccolorants ( dev_profile )	353:12:14282:14354	5050758	1	True				
ANR	5052801	AssignmentExpression	colorant_names = gsicc_get_dev_icccolorants ( dev_profile )		5050758	0		=			
ANR	5052802	Identifier	colorant_names		5050758	0					
ANR	5052803	CallExpression	gsicc_get_dev_icccolorants ( dev_profile )		5050758	1					
ANR	5052804	Callee	gsicc_get_dev_icccolorants		5050758	0					
ANR	5052805	Identifier	gsicc_get_dev_icccolorants		5050758	0					
ANR	5052806	ArgumentList	dev_profile		5050758	1					
ANR	5052807	Argument	dev_profile		5050758	0					
ANR	5052808	Identifier	dev_profile		5050758	0					
ANR	5052809	IfStatement	if ( colorant_names != NULL )		5050758	2					
ANR	5052810	Condition	colorant_names != NULL	355:16:14372:14393	5050758	0	True				
ANR	5052811	EqualityExpression	colorant_names != NULL		5050758	0		!=			
ANR	5052812	Identifier	colorant_names		5050758	0					
ANR	5052813	Identifier	NULL		5050758	1					
ANR	5052814	CompoundStatement		284:40:12081:12081	5050758	1					
ANR	5052815	ExpressionStatement	"param_string_from_transient_string ( icc_colorants , colorant_names )"	356:16:14414:14479	5050758	0	True				
ANR	5052816	CallExpression	"param_string_from_transient_string ( icc_colorants , colorant_names )"		5050758	0					
ANR	5052817	Callee	param_string_from_transient_string		5050758	0					
ANR	5052818	Identifier	param_string_from_transient_string		5050758	0					
ANR	5052819	ArgumentList	icc_colorants		5050758	1					
ANR	5052820	Argument	icc_colorants		5050758	0					
ANR	5052821	Identifier	icc_colorants		5050758	0					
ANR	5052822	Argument	colorant_names		5050758	1					
ANR	5052823	Identifier	colorant_names		5050758	0					
ANR	5052824	ElseStatement	else		5050758	0					
ANR	5052825	CompoundStatement		286:19:12185:12185	5050758	0					
ANR	5052826	ExpressionStatement	"param_string_from_string ( icc_colorants , null_str )"	358:16:14518:14567	5050758	0	True				
ANR	5052827	CallExpression	"param_string_from_string ( icc_colorants , null_str )"		5050758	0					
ANR	5052828	Callee	param_string_from_string		5050758	0					
ANR	5052829	Identifier	param_string_from_string		5050758	0					
ANR	5052830	ArgumentList	icc_colorants		5050758	1					
ANR	5052831	Argument	icc_colorants		5050758	0					
ANR	5052832	Identifier	icc_colorants		5050758	0					
ANR	5052833	Argument	null_str		5050758	1					
ANR	5052834	Identifier	null_str		5050758	0					
ANR	5052835	ElseStatement	else		5050758	0					
ANR	5052836	CompoundStatement		290:11:12289:12289	5050758	0					
ANR	5052837	ForStatement	for ( k = 0 ; k < NUM_DEVICE_PROFILES ; k ++ )		5050758	0					
ANR	5052838	ForInit	k = 0 ;	362:13:14619:14624	5050758	0	True				
ANR	5052839	AssignmentExpression	k = 0		5050758	0		=			
ANR	5052840	Identifier	k		5050758	0					
ANR	5052841	PrimaryExpression	0		5050758	1					
ANR	5052842	Condition	k < NUM_DEVICE_PROFILES	362:20:14626:14648	5050758	1	True				
ANR	5052843	RelationalExpression	k < NUM_DEVICE_PROFILES		5050758	0		<			
ANR	5052844	Identifier	k		5050758	0					
ANR	5052845	Identifier	NUM_DEVICE_PROFILES		5050758	1					
ANR	5052846	PostIncDecOperationExpression	k ++	362:45:14651:14653	5050758	2	True				
ANR	5052847	Identifier	k		5050758	0					
ANR	5052848	IncDec	++		5050758	1					
ANR	5052849	CompoundStatement		291:50:12341:12341	5050758	3					
ANR	5052850	ExpressionStatement	"param_string_from_string ( profile_array [ k ] , null_str )"	363:12:14670:14722	5050758	0	True				
ANR	5052851	CallExpression	"param_string_from_string ( profile_array [ k ] , null_str )"		5050758	0					
ANR	5052852	Callee	param_string_from_string		5050758	0					
ANR	5052853	Identifier	param_string_from_string		5050758	0					
ANR	5052854	ArgumentList	profile_array [ k ]		5050758	1					
ANR	5052855	Argument	profile_array [ k ]		5050758	0					
ANR	5052856	ArrayIndexing	profile_array [ k ]		5050758	0					
ANR	5052857	Identifier	profile_array		5050758	0					
ANR	5052858	Identifier	k		5050758	1					
ANR	5052859	Argument	null_str		5050758	1					
ANR	5052860	Identifier	null_str		5050758	0					
ANR	5052861	ExpressionStatement	profile_intents [ k ] = gsRINOTSPECIFIED	364:12:14736:14773	5050758	1	True				
ANR	5052862	AssignmentExpression	profile_intents [ k ] = gsRINOTSPECIFIED		5050758	0		=			
ANR	5052863	ArrayIndexing	profile_intents [ k ]		5050758	0					
ANR	5052864	Identifier	profile_intents		5050758	0					
ANR	5052865	Identifier	k		5050758	1					
ANR	5052866	Identifier	gsRINOTSPECIFIED		5050758	1					
ANR	5052867	ExpressionStatement	blackptcomps [ k ] = gsBPNOTSPECIFIED	365:12:14787:14821	5050758	2	True				
ANR	5052868	AssignmentExpression	blackptcomps [ k ] = gsBPNOTSPECIFIED		5050758	0		=			
ANR	5052869	ArrayIndexing	blackptcomps [ k ]		5050758	0					
ANR	5052870	Identifier	blackptcomps		5050758	0					
ANR	5052871	Identifier	k		5050758	1					
ANR	5052872	Identifier	gsBPNOTSPECIFIED		5050758	1					
ANR	5052873	ExpressionStatement	blackpreserve [ k ] = gsBKPRESNOTSPECIFIED	366:12:14835:14874	5050758	3	True				
ANR	5052874	AssignmentExpression	blackpreserve [ k ] = gsBKPRESNOTSPECIFIED		5050758	0		=			
ANR	5052875	ArrayIndexing	blackpreserve [ k ]		5050758	0					
ANR	5052876	Identifier	blackpreserve		5050758	0					
ANR	5052877	Identifier	k		5050758	1					
ANR	5052878	Identifier	gsBKPRESNOTSPECIFIED		5050758	1					
ANR	5052879	ExpressionStatement	"param_string_from_string ( blend_profile , null_str )"	368:8:14894:14943	5050758	1	True				
ANR	5052880	CallExpression	"param_string_from_string ( blend_profile , null_str )"		5050758	0					
ANR	5052881	Callee	param_string_from_string		5050758	0					
ANR	5052882	Identifier	param_string_from_string		5050758	0					
ANR	5052883	ArgumentList	blend_profile		5050758	1					
ANR	5052884	Argument	blend_profile		5050758	0					
ANR	5052885	Identifier	blend_profile		5050758	0					
ANR	5052886	Argument	null_str		5050758	1					
ANR	5052887	Identifier	null_str		5050758	0					
ANR	5052888	ExpressionStatement	"param_string_from_string ( postren_profile , null_str )"	369:8:14953:15004	5050758	2	True				
ANR	5052889	CallExpression	"param_string_from_string ( postren_profile , null_str )"		5050758	0					
ANR	5052890	Callee	param_string_from_string		5050758	0					
ANR	5052891	Identifier	param_string_from_string		5050758	0					
ANR	5052892	ArgumentList	postren_profile		5050758	1					
ANR	5052893	Argument	postren_profile		5050758	0					
ANR	5052894	Identifier	postren_profile		5050758	0					
ANR	5052895	Argument	null_str		5050758	1					
ANR	5052896	Identifier	null_str		5050758	0					
ANR	5052897	ExpressionStatement	"param_string_from_string ( proof_profile , null_str )"	370:8:15014:15063	5050758	3	True				
ANR	5052898	CallExpression	"param_string_from_string ( proof_profile , null_str )"		5050758	0					
ANR	5052899	Callee	param_string_from_string		5050758	0					
ANR	5052900	Identifier	param_string_from_string		5050758	0					
ANR	5052901	ArgumentList	proof_profile		5050758	1					
ANR	5052902	Argument	proof_profile		5050758	0					
ANR	5052903	Identifier	proof_profile		5050758	0					
ANR	5052904	Argument	null_str		5050758	1					
ANR	5052905	Identifier	null_str		5050758	0					
ANR	5052906	ExpressionStatement	"param_string_from_string ( link_profile , null_str )"	371:8:15073:15121	5050758	4	True				
ANR	5052907	CallExpression	"param_string_from_string ( link_profile , null_str )"		5050758	0					
ANR	5052908	Callee	param_string_from_string		5050758	0					
ANR	5052909	Identifier	param_string_from_string		5050758	0					
ANR	5052910	ArgumentList	link_profile		5050758	1					
ANR	5052911	Argument	link_profile		5050758	0					
ANR	5052912	Identifier	link_profile		5050758	0					
ANR	5052913	Argument	null_str		5050758	1					
ANR	5052914	Identifier	null_str		5050758	0					
ANR	5052915	ExpressionStatement	"param_string_from_string ( icc_colorants , null_str )"	372:8:15131:15180	5050758	5	True				
ANR	5052916	CallExpression	"param_string_from_string ( icc_colorants , null_str )"		5050758	0					
ANR	5052917	Callee	param_string_from_string		5050758	0					
ANR	5052918	Identifier	param_string_from_string		5050758	0					
ANR	5052919	ArgumentList	icc_colorants		5050758	1					
ANR	5052920	Argument	icc_colorants		5050758	0					
ANR	5052921	Identifier	icc_colorants		5050758	0					
ANR	5052922	Argument	null_str		5050758	1					
ANR	5052923	Identifier	null_str		5050758	0					
ANR	5052924	IfStatement	"if ( strcmp ( Param , ""DeviceGrayToK"" ) == 0 )"		5050758	54					
ANR	5052925	Condition	"strcmp ( Param , ""DeviceGrayToK"" ) == 0"	374:8:15196:15230	5050758	0	True				
ANR	5052926	EqualityExpression	"strcmp ( Param , ""DeviceGrayToK"" ) == 0"		5050758	0		==			
ANR	5052927	CallExpression	"strcmp ( Param , ""DeviceGrayToK"" )"		5050758	0					
ANR	5052928	Callee	strcmp		5050758	0					
ANR	5052929	Identifier	strcmp		5050758	0					
ANR	5052930	ArgumentList	Param		5050758	1					
ANR	5052931	Argument	Param		5050758	0					
ANR	5052932	Identifier	Param		5050758	0					
ANR	5052933	Argument	"""DeviceGrayToK"""		5050758	1					
ANR	5052934	PrimaryExpression	"""DeviceGrayToK"""		5050758	0					
ANR	5052935	PrimaryExpression	0		5050758	1					
ANR	5052936	CompoundStatement		303:45:12918:12918	5050758	1					
ANR	5052937	ReturnStatement	"return param_write_bool ( plist , ""DeviceGrayToK"" , & devicegraytok ) ;"	375:8:15243:15306	5050758	0	True				
ANR	5052938	CallExpression	"param_write_bool ( plist , ""DeviceGrayToK"" , & devicegraytok )"		5050758	0					
ANR	5052939	Callee	param_write_bool		5050758	0					
ANR	5052940	Identifier	param_write_bool		5050758	0					
ANR	5052941	ArgumentList	plist		5050758	1					
ANR	5052942	Argument	plist		5050758	0					
ANR	5052943	Identifier	plist		5050758	0					
ANR	5052944	Argument	"""DeviceGrayToK"""		5050758	1					
ANR	5052945	PrimaryExpression	"""DeviceGrayToK"""		5050758	0					
ANR	5052946	Argument	& devicegraytok		5050758	2					
ANR	5052947	UnaryOperationExpression	& devicegraytok		5050758	0					
ANR	5052948	UnaryOperator	&		5050758	0					
ANR	5052949	Identifier	devicegraytok		5050758	1					
ANR	5052950	IfStatement	"if ( strcmp ( Param , ""GrayDetection"" ) == 0 )"		5050758	55					
ANR	5052951	Condition	"strcmp ( Param , ""GrayDetection"" ) == 0"	377:8:15322:15356	5050758	0	True				
ANR	5052952	EqualityExpression	"strcmp ( Param , ""GrayDetection"" ) == 0"		5050758	0		==			
ANR	5052953	CallExpression	"strcmp ( Param , ""GrayDetection"" )"		5050758	0					
ANR	5052954	Callee	strcmp		5050758	0					
ANR	5052955	Identifier	strcmp		5050758	0					
ANR	5052956	ArgumentList	Param		5050758	1					
ANR	5052957	Argument	Param		5050758	0					
ANR	5052958	Identifier	Param		5050758	0					
ANR	5052959	Argument	"""GrayDetection"""		5050758	1					
ANR	5052960	PrimaryExpression	"""GrayDetection"""		5050758	0					
ANR	5052961	PrimaryExpression	0		5050758	1					
ANR	5052962	CompoundStatement		306:45:13044:13044	5050758	1					
ANR	5052963	ReturnStatement	"return param_write_bool ( plist , ""GrayDetection"" , & graydetection ) ;"	378:8:15369:15432	5050758	0	True				
ANR	5052964	CallExpression	"param_write_bool ( plist , ""GrayDetection"" , & graydetection )"		5050758	0					
ANR	5052965	Callee	param_write_bool		5050758	0					
ANR	5052966	Identifier	param_write_bool		5050758	0					
ANR	5052967	ArgumentList	plist		5050758	1					
ANR	5052968	Argument	plist		5050758	0					
ANR	5052969	Identifier	plist		5050758	0					
ANR	5052970	Argument	"""GrayDetection"""		5050758	1					
ANR	5052971	PrimaryExpression	"""GrayDetection"""		5050758	0					
ANR	5052972	Argument	& graydetection		5050758	2					
ANR	5052973	UnaryOperationExpression	& graydetection		5050758	0					
ANR	5052974	UnaryOperator	&		5050758	0					
ANR	5052975	Identifier	graydetection		5050758	1					
ANR	5052976	IfStatement	"if ( strcmp ( Param , ""UseFastColor"" ) == 0 )"		5050758	56					
ANR	5052977	Condition	"strcmp ( Param , ""UseFastColor"" ) == 0"	380:8:15448:15481	5050758	0	True				
ANR	5052978	EqualityExpression	"strcmp ( Param , ""UseFastColor"" ) == 0"		5050758	0		==			
ANR	5052979	CallExpression	"strcmp ( Param , ""UseFastColor"" )"		5050758	0					
ANR	5052980	Callee	strcmp		5050758	0					
ANR	5052981	Identifier	strcmp		5050758	0					
ANR	5052982	ArgumentList	Param		5050758	1					
ANR	5052983	Argument	Param		5050758	0					
ANR	5052984	Identifier	Param		5050758	0					
ANR	5052985	Argument	"""UseFastColor"""		5050758	1					
ANR	5052986	PrimaryExpression	"""UseFastColor"""		5050758	0					
ANR	5052987	PrimaryExpression	0		5050758	1					
ANR	5052988	CompoundStatement		309:44:13169:13169	5050758	1					
ANR	5052989	ReturnStatement	"return param_write_bool ( plist , ""UseFastColor"" , & usefastcolor ) ;"	381:8:15494:15555	5050758	0	True				
ANR	5052990	CallExpression	"param_write_bool ( plist , ""UseFastColor"" , & usefastcolor )"		5050758	0					
ANR	5052991	Callee	param_write_bool		5050758	0					
ANR	5052992	Identifier	param_write_bool		5050758	0					
ANR	5052993	ArgumentList	plist		5050758	1					
ANR	5052994	Argument	plist		5050758	0					
ANR	5052995	Identifier	plist		5050758	0					
ANR	5052996	Argument	"""UseFastColor"""		5050758	1					
ANR	5052997	PrimaryExpression	"""UseFastColor"""		5050758	0					
ANR	5052998	Argument	& usefastcolor		5050758	2					
ANR	5052999	UnaryOperationExpression	& usefastcolor		5050758	0					
ANR	5053000	UnaryOperator	&		5050758	0					
ANR	5053001	Identifier	usefastcolor		5050758	1					
ANR	5053002	IfStatement	"if ( strcmp ( Param , ""SimulateOverprint"" ) == 0 )"		5050758	57					
ANR	5053003	Condition	"strcmp ( Param , ""SimulateOverprint"" ) == 0"	383:8:15571:15609	5050758	0	True				
ANR	5053004	EqualityExpression	"strcmp ( Param , ""SimulateOverprint"" ) == 0"		5050758	0		==			
ANR	5053005	CallExpression	"strcmp ( Param , ""SimulateOverprint"" )"		5050758	0					
ANR	5053006	Callee	strcmp		5050758	0					
ANR	5053007	Identifier	strcmp		5050758	0					
ANR	5053008	ArgumentList	Param		5050758	1					
ANR	5053009	Argument	Param		5050758	0					
ANR	5053010	Identifier	Param		5050758	0					
ANR	5053011	Argument	"""SimulateOverprint"""		5050758	1					
ANR	5053012	PrimaryExpression	"""SimulateOverprint"""		5050758	0					
ANR	5053013	PrimaryExpression	0		5050758	1					
ANR	5053014	CompoundStatement		312:49:13297:13297	5050758	1					
ANR	5053015	ReturnStatement	"return param_write_bool ( plist , ""SimulateOverprint"" , & sim_overprint ) ;"	384:8:15622:15689	5050758	0	True				
ANR	5053016	CallExpression	"param_write_bool ( plist , ""SimulateOverprint"" , & sim_overprint )"		5050758	0					
ANR	5053017	Callee	param_write_bool		5050758	0					
ANR	5053018	Identifier	param_write_bool		5050758	0					
ANR	5053019	ArgumentList	plist		5050758	1					
ANR	5053020	Argument	plist		5050758	0					
ANR	5053021	Identifier	plist		5050758	0					
ANR	5053022	Argument	"""SimulateOverprint"""		5050758	1					
ANR	5053023	PrimaryExpression	"""SimulateOverprint"""		5050758	0					
ANR	5053024	Argument	& sim_overprint		5050758	2					
ANR	5053025	UnaryOperationExpression	& sim_overprint		5050758	0					
ANR	5053026	UnaryOperator	&		5050758	0					
ANR	5053027	Identifier	sim_overprint		5050758	1					
ANR	5053028	IfStatement	"if ( strcmp ( Param , ""PreBandThreshold"" ) == 0 )"		5050758	58					
ANR	5053029	Condition	"strcmp ( Param , ""PreBandThreshold"" ) == 0"	386:8:15705:15742	5050758	0	True				
ANR	5053030	EqualityExpression	"strcmp ( Param , ""PreBandThreshold"" ) == 0"		5050758	0		==			
ANR	5053031	CallExpression	"strcmp ( Param , ""PreBandThreshold"" )"		5050758	0					
ANR	5053032	Callee	strcmp		5050758	0					
ANR	5053033	Identifier	strcmp		5050758	0					
ANR	5053034	ArgumentList	Param		5050758	1					
ANR	5053035	Argument	Param		5050758	0					
ANR	5053036	Identifier	Param		5050758	0					
ANR	5053037	Argument	"""PreBandThreshold"""		5050758	1					
ANR	5053038	PrimaryExpression	"""PreBandThreshold"""		5050758	0					
ANR	5053039	PrimaryExpression	0		5050758	1					
ANR	5053040	CompoundStatement		315:48:13430:13430	5050758	1					
ANR	5053041	ReturnStatement	"return param_write_bool ( plist , ""PreBandThreshold"" , & prebandthreshold ) ;"	387:8:15755:15824	5050758	0	True				
ANR	5053042	CallExpression	"param_write_bool ( plist , ""PreBandThreshold"" , & prebandthreshold )"		5050758	0					
ANR	5053043	Callee	param_write_bool		5050758	0					
ANR	5053044	Identifier	param_write_bool		5050758	0					
ANR	5053045	ArgumentList	plist		5050758	1					
ANR	5053046	Argument	plist		5050758	0					
ANR	5053047	Identifier	plist		5050758	0					
ANR	5053048	Argument	"""PreBandThreshold"""		5050758	1					
ANR	5053049	PrimaryExpression	"""PreBandThreshold"""		5050758	0					
ANR	5053050	Argument	& prebandthreshold		5050758	2					
ANR	5053051	UnaryOperationExpression	& prebandthreshold		5050758	0					
ANR	5053052	UnaryOperator	&		5050758	0					
ANR	5053053	Identifier	prebandthreshold		5050758	1					
ANR	5053054	IfStatement	"if ( strcmp ( Param , ""PostRenderProfile"" ) == 0 )"		5050758	59					
ANR	5053055	Condition	"strcmp ( Param , ""PostRenderProfile"" ) == 0"	389:8:15840:15878	5050758	0	True				
ANR	5053056	EqualityExpression	"strcmp ( Param , ""PostRenderProfile"" ) == 0"		5050758	0		==			
ANR	5053057	CallExpression	"strcmp ( Param , ""PostRenderProfile"" )"		5050758	0					
ANR	5053058	Callee	strcmp		5050758	0					
ANR	5053059	Identifier	strcmp		5050758	0					
ANR	5053060	ArgumentList	Param		5050758	1					
ANR	5053061	Argument	Param		5050758	0					
ANR	5053062	Identifier	Param		5050758	0					
ANR	5053063	Argument	"""PostRenderProfile"""		5050758	1					
ANR	5053064	PrimaryExpression	"""PostRenderProfile"""		5050758	0					
ANR	5053065	PrimaryExpression	0		5050758	1					
ANR	5053066	CompoundStatement		318:49:13566:13566	5050758	1					
ANR	5053067	ReturnStatement	"return param_write_string ( plist , ""PostRenderProfile"" , & ( postren_profile ) ) ;"	390:8:15891:15964	5050758	0	True				
ANR	5053068	CallExpression	"param_write_string ( plist , ""PostRenderProfile"" , & ( postren_profile ) )"		5050758	0					
ANR	5053069	Callee	param_write_string		5050758	0					
ANR	5053070	Identifier	param_write_string		5050758	0					
ANR	5053071	ArgumentList	plist		5050758	1					
ANR	5053072	Argument	plist		5050758	0					
ANR	5053073	Identifier	plist		5050758	0					
ANR	5053074	Argument	"""PostRenderProfile"""		5050758	1					
ANR	5053075	PrimaryExpression	"""PostRenderProfile"""		5050758	0					
ANR	5053076	Argument	& ( postren_profile )		5050758	2					
ANR	5053077	UnaryOperationExpression	& ( postren_profile )		5050758	0					
ANR	5053078	UnaryOperator	&		5050758	0					
ANR	5053079	Identifier	postren_profile		5050758	1					
ANR	5053080	IfStatement	"if ( strcmp ( Param , ""BlendColorProfile"" ) == 0 )"		5050758	60					
ANR	5053081	Condition	"strcmp ( Param , ""BlendColorProfile"" ) == 0"	392:8:15980:16018	5050758	0	True				
ANR	5053082	EqualityExpression	"strcmp ( Param , ""BlendColorProfile"" ) == 0"		5050758	0		==			
ANR	5053083	CallExpression	"strcmp ( Param , ""BlendColorProfile"" )"		5050758	0					
ANR	5053084	Callee	strcmp		5050758	0					
ANR	5053085	Identifier	strcmp		5050758	0					
ANR	5053086	ArgumentList	Param		5050758	1					
ANR	5053087	Argument	Param		5050758	0					
ANR	5053088	Identifier	Param		5050758	0					
ANR	5053089	Argument	"""BlendColorProfile"""		5050758	1					
ANR	5053090	PrimaryExpression	"""BlendColorProfile"""		5050758	0					
ANR	5053091	PrimaryExpression	0		5050758	1					
ANR	5053092	CompoundStatement		321:49:13706:13706	5050758	1					
ANR	5053093	ReturnStatement	"return param_write_string ( plist , ""BlendColorProfile"" , & ( blend_profile ) ) ;"	393:8:16031:16102	5050758	0	True				
ANR	5053094	CallExpression	"param_write_string ( plist , ""BlendColorProfile"" , & ( blend_profile ) )"		5050758	0					
ANR	5053095	Callee	param_write_string		5050758	0					
ANR	5053096	Identifier	param_write_string		5050758	0					
ANR	5053097	ArgumentList	plist		5050758	1					
ANR	5053098	Argument	plist		5050758	0					
ANR	5053099	Identifier	plist		5050758	0					
ANR	5053100	Argument	"""BlendColorProfile"""		5050758	1					
ANR	5053101	PrimaryExpression	"""BlendColorProfile"""		5050758	0					
ANR	5053102	Argument	& ( blend_profile )		5050758	2					
ANR	5053103	UnaryOperationExpression	& ( blend_profile )		5050758	0					
ANR	5053104	UnaryOperator	&		5050758	0					
ANR	5053105	Identifier	blend_profile		5050758	1					
ANR	5053106	IfStatement	"if ( strcmp ( Param , ""ProofProfile"" ) == 0 )"		5050758	61					
ANR	5053107	Condition	"strcmp ( Param , ""ProofProfile"" ) == 0"	395:8:16118:16151	5050758	0	True				
ANR	5053108	EqualityExpression	"strcmp ( Param , ""ProofProfile"" ) == 0"		5050758	0		==			
ANR	5053109	CallExpression	"strcmp ( Param , ""ProofProfile"" )"		5050758	0					
ANR	5053110	Callee	strcmp		5050758	0					
ANR	5053111	Identifier	strcmp		5050758	0					
ANR	5053112	ArgumentList	Param		5050758	1					
ANR	5053113	Argument	Param		5050758	0					
ANR	5053114	Identifier	Param		5050758	0					
ANR	5053115	Argument	"""ProofProfile"""		5050758	1					
ANR	5053116	PrimaryExpression	"""ProofProfile"""		5050758	0					
ANR	5053117	PrimaryExpression	0		5050758	1					
ANR	5053118	CompoundStatement		324:44:13839:13839	5050758	1					
ANR	5053119	ReturnStatement	"return param_write_string ( plist , ""ProofProfile"" , & ( proof_profile ) ) ;"	396:8:16164:16229	5050758	0	True				
ANR	5053120	CallExpression	"param_write_string ( plist , ""ProofProfile"" , & ( proof_profile ) )"		5050758	0					
ANR	5053121	Callee	param_write_string		5050758	0					
ANR	5053122	Identifier	param_write_string		5050758	0					
ANR	5053123	ArgumentList	plist		5050758	1					
ANR	5053124	Argument	plist		5050758	0					
ANR	5053125	Identifier	plist		5050758	0					
ANR	5053126	Argument	"""ProofProfile"""		5050758	1					
ANR	5053127	PrimaryExpression	"""ProofProfile"""		5050758	0					
ANR	5053128	Argument	& ( proof_profile )		5050758	2					
ANR	5053129	UnaryOperationExpression	& ( proof_profile )		5050758	0					
ANR	5053130	UnaryOperator	&		5050758	0					
ANR	5053131	Identifier	proof_profile		5050758	1					
ANR	5053132	IfStatement	"if ( strcmp ( Param , ""DeviceLinkProfile"" ) == 0 )"		5050758	62					
ANR	5053133	Condition	"strcmp ( Param , ""DeviceLinkProfile"" ) == 0"	398:8:16245:16283	5050758	0	True				
ANR	5053134	EqualityExpression	"strcmp ( Param , ""DeviceLinkProfile"" ) == 0"		5050758	0		==			
ANR	5053135	CallExpression	"strcmp ( Param , ""DeviceLinkProfile"" )"		5050758	0					
ANR	5053136	Callee	strcmp		5050758	0					
ANR	5053137	Identifier	strcmp		5050758	0					
ANR	5053138	ArgumentList	Param		5050758	1					
ANR	5053139	Argument	Param		5050758	0					
ANR	5053140	Identifier	Param		5050758	0					
ANR	5053141	Argument	"""DeviceLinkProfile"""		5050758	1					
ANR	5053142	PrimaryExpression	"""DeviceLinkProfile"""		5050758	0					
ANR	5053143	PrimaryExpression	0		5050758	1					
ANR	5053144	CompoundStatement		327:49:13971:13971	5050758	1					
ANR	5053145	ReturnStatement	"return param_write_string ( plist , ""DeviceLinkProfile"" , & ( link_profile ) ) ;"	399:8:16296:16365	5050758	0	True				
ANR	5053146	CallExpression	"param_write_string ( plist , ""DeviceLinkProfile"" , & ( link_profile ) )"		5050758	0					
ANR	5053147	Callee	param_write_string		5050758	0					
ANR	5053148	Identifier	param_write_string		5050758	0					
ANR	5053149	ArgumentList	plist		5050758	1					
ANR	5053150	Argument	plist		5050758	0					
ANR	5053151	Identifier	plist		5050758	0					
ANR	5053152	Argument	"""DeviceLinkProfile"""		5050758	1					
ANR	5053153	PrimaryExpression	"""DeviceLinkProfile"""		5050758	0					
ANR	5053154	Argument	& ( link_profile )		5050758	2					
ANR	5053155	UnaryOperationExpression	& ( link_profile )		5050758	0					
ANR	5053156	UnaryOperator	&		5050758	0					
ANR	5053157	Identifier	link_profile		5050758	1					
ANR	5053158	IfStatement	"if ( strcmp ( Param , ""ICCOutputColors"" ) == 0 )"		5050758	63					
ANR	5053159	Condition	"strcmp ( Param , ""ICCOutputColors"" ) == 0"	401:8:16381:16417	5050758	0	True				
ANR	5053160	EqualityExpression	"strcmp ( Param , ""ICCOutputColors"" ) == 0"		5050758	0		==			
ANR	5053161	CallExpression	"strcmp ( Param , ""ICCOutputColors"" )"		5050758	0					
ANR	5053162	Callee	strcmp		5050758	0					
ANR	5053163	Identifier	strcmp		5050758	0					
ANR	5053164	ArgumentList	Param		5050758	1					
ANR	5053165	Argument	Param		5050758	0					
ANR	5053166	Identifier	Param		5050758	0					
ANR	5053167	Argument	"""ICCOutputColors"""		5050758	1					
ANR	5053168	PrimaryExpression	"""ICCOutputColors"""		5050758	0					
ANR	5053169	PrimaryExpression	0		5050758	1					
ANR	5053170	CompoundStatement		330:47:14105:14105	5050758	1					
ANR	5053171	ReturnStatement	"return param_write_string ( plist , ""ICCOutputColors"" , & ( icc_colorants ) ) ;"	402:8:16430:16498	5050758	0	True				
ANR	5053172	CallExpression	"param_write_string ( plist , ""ICCOutputColors"" , & ( icc_colorants ) )"		5050758	0					
ANR	5053173	Callee	param_write_string		5050758	0					
ANR	5053174	Identifier	param_write_string		5050758	0					
ANR	5053175	ArgumentList	plist		5050758	1					
ANR	5053176	Argument	plist		5050758	0					
ANR	5053177	Identifier	plist		5050758	0					
ANR	5053178	Argument	"""ICCOutputColors"""		5050758	1					
ANR	5053179	PrimaryExpression	"""ICCOutputColors"""		5050758	0					
ANR	5053180	Argument	& ( icc_colorants )		5050758	2					
ANR	5053181	UnaryOperationExpression	& ( icc_colorants )		5050758	0					
ANR	5053182	UnaryOperator	&		5050758	0					
ANR	5053183	Identifier	icc_colorants		5050758	1					
ANR	5053184	IfStatement	"if ( strcmp ( Param , ""OutputICCProfile"" ) == 0 )"		5050758	64					
ANR	5053185	Condition	"strcmp ( Param , ""OutputICCProfile"" ) == 0"	404:8:16514:16551	5050758	0	True				
ANR	5053186	EqualityExpression	"strcmp ( Param , ""OutputICCProfile"" ) == 0"		5050758	0		==			
ANR	5053187	CallExpression	"strcmp ( Param , ""OutputICCProfile"" )"		5050758	0					
ANR	5053188	Callee	strcmp		5050758	0					
ANR	5053189	Identifier	strcmp		5050758	0					
ANR	5053190	ArgumentList	Param		5050758	1					
ANR	5053191	Argument	Param		5050758	0					
ANR	5053192	Identifier	Param		5050758	0					
ANR	5053193	Argument	"""OutputICCProfile"""		5050758	1					
ANR	5053194	PrimaryExpression	"""OutputICCProfile"""		5050758	0					
ANR	5053195	PrimaryExpression	0		5050758	1					
ANR	5053196	CompoundStatement		333:48:14239:14239	5050758	1					
ANR	5053197	ReturnStatement	"return param_write_string ( plist , ""OutputICCProfile"" , & ( profile_array [ 0 ] ) ) ;"	405:8:16564:16636	5050758	0	True				
ANR	5053198	CallExpression	"param_write_string ( plist , ""OutputICCProfile"" , & ( profile_array [ 0 ] ) )"		5050758	0					
ANR	5053199	Callee	param_write_string		5050758	0					
ANR	5053200	Identifier	param_write_string		5050758	0					
ANR	5053201	ArgumentList	plist		5050758	1					
ANR	5053202	Argument	plist		5050758	0					
ANR	5053203	Identifier	plist		5050758	0					
ANR	5053204	Argument	"""OutputICCProfile"""		5050758	1					
ANR	5053205	PrimaryExpression	"""OutputICCProfile"""		5050758	0					
ANR	5053206	Argument	& ( profile_array [ 0 ] )		5050758	2					
ANR	5053207	UnaryOperationExpression	& ( profile_array [ 0 ] )		5050758	0					
ANR	5053208	UnaryOperator	&		5050758	0					
ANR	5053209	ArrayIndexing	profile_array [ 0 ]		5050758	1					
ANR	5053210	Identifier	profile_array		5050758	0					
ANR	5053211	PrimaryExpression	0		5050758	1					
ANR	5053212	IfStatement	"if ( strcmp ( Param , ""GraphicICCProfile"" ) == 0 )"		5050758	65					
ANR	5053213	Condition	"strcmp ( Param , ""GraphicICCProfile"" ) == 0"	407:8:16652:16690	5050758	0	True				
ANR	5053214	EqualityExpression	"strcmp ( Param , ""GraphicICCProfile"" ) == 0"		5050758	0		==			
ANR	5053215	CallExpression	"strcmp ( Param , ""GraphicICCProfile"" )"		5050758	0					
ANR	5053216	Callee	strcmp		5050758	0					
ANR	5053217	Identifier	strcmp		5050758	0					
ANR	5053218	ArgumentList	Param		5050758	1					
ANR	5053219	Argument	Param		5050758	0					
ANR	5053220	Identifier	Param		5050758	0					
ANR	5053221	Argument	"""GraphicICCProfile"""		5050758	1					
ANR	5053222	PrimaryExpression	"""GraphicICCProfile"""		5050758	0					
ANR	5053223	PrimaryExpression	0		5050758	1					
ANR	5053224	CompoundStatement		336:49:14378:14378	5050758	1					
ANR	5053225	ReturnStatement	"return param_write_string ( plist , ""GraphicICCProfile"" , & ( profile_array [ 1 ] ) ) ;"	408:8:16703:16776	5050758	0	True				
ANR	5053226	CallExpression	"param_write_string ( plist , ""GraphicICCProfile"" , & ( profile_array [ 1 ] ) )"		5050758	0					
ANR	5053227	Callee	param_write_string		5050758	0					
ANR	5053228	Identifier	param_write_string		5050758	0					
ANR	5053229	ArgumentList	plist		5050758	1					
ANR	5053230	Argument	plist		5050758	0					
ANR	5053231	Identifier	plist		5050758	0					
ANR	5053232	Argument	"""GraphicICCProfile"""		5050758	1					
ANR	5053233	PrimaryExpression	"""GraphicICCProfile"""		5050758	0					
ANR	5053234	Argument	& ( profile_array [ 1 ] )		5050758	2					
ANR	5053235	UnaryOperationExpression	& ( profile_array [ 1 ] )		5050758	0					
ANR	5053236	UnaryOperator	&		5050758	0					
ANR	5053237	ArrayIndexing	profile_array [ 1 ]		5050758	1					
ANR	5053238	Identifier	profile_array		5050758	0					
ANR	5053239	PrimaryExpression	1		5050758	1					
ANR	5053240	IfStatement	"if ( strcmp ( Param , ""ImageICCProfile"" ) == 0 )"		5050758	66					
ANR	5053241	Condition	"strcmp ( Param , ""ImageICCProfile"" ) == 0"	410:8:16792:16828	5050758	0	True				
ANR	5053242	EqualityExpression	"strcmp ( Param , ""ImageICCProfile"" ) == 0"		5050758	0		==			
ANR	5053243	CallExpression	"strcmp ( Param , ""ImageICCProfile"" )"		5050758	0					
ANR	5053244	Callee	strcmp		5050758	0					
ANR	5053245	Identifier	strcmp		5050758	0					
ANR	5053246	ArgumentList	Param		5050758	1					
ANR	5053247	Argument	Param		5050758	0					
ANR	5053248	Identifier	Param		5050758	0					
ANR	5053249	Argument	"""ImageICCProfile"""		5050758	1					
ANR	5053250	PrimaryExpression	"""ImageICCProfile"""		5050758	0					
ANR	5053251	PrimaryExpression	0		5050758	1					
ANR	5053252	CompoundStatement		339:47:14516:14516	5050758	1					
ANR	5053253	ReturnStatement	"return param_write_string ( plist , ""ImageICCProfile"" , & ( profile_array [ 2 ] ) ) ;"	411:8:16841:16912	5050758	0	True				
ANR	5053254	CallExpression	"param_write_string ( plist , ""ImageICCProfile"" , & ( profile_array [ 2 ] ) )"		5050758	0					
ANR	5053255	Callee	param_write_string		5050758	0					
ANR	5053256	Identifier	param_write_string		5050758	0					
ANR	5053257	ArgumentList	plist		5050758	1					
ANR	5053258	Argument	plist		5050758	0					
ANR	5053259	Identifier	plist		5050758	0					
ANR	5053260	Argument	"""ImageICCProfile"""		5050758	1					
ANR	5053261	PrimaryExpression	"""ImageICCProfile"""		5050758	0					
ANR	5053262	Argument	& ( profile_array [ 2 ] )		5050758	2					
ANR	5053263	UnaryOperationExpression	& ( profile_array [ 2 ] )		5050758	0					
ANR	5053264	UnaryOperator	&		5050758	0					
ANR	5053265	ArrayIndexing	profile_array [ 2 ]		5050758	1					
ANR	5053266	Identifier	profile_array		5050758	0					
ANR	5053267	PrimaryExpression	2		5050758	1					
ANR	5053268	IfStatement	"if ( strcmp ( Param , ""TextICCProfile"" ) == 0 )"		5050758	67					
ANR	5053269	Condition	"strcmp ( Param , ""TextICCProfile"" ) == 0"	413:8:16928:16963	5050758	0	True				
ANR	5053270	EqualityExpression	"strcmp ( Param , ""TextICCProfile"" ) == 0"		5050758	0		==			
ANR	5053271	CallExpression	"strcmp ( Param , ""TextICCProfile"" )"		5050758	0					
ANR	5053272	Callee	strcmp		5050758	0					
ANR	5053273	Identifier	strcmp		5050758	0					
ANR	5053274	ArgumentList	Param		5050758	1					
ANR	5053275	Argument	Param		5050758	0					
ANR	5053276	Identifier	Param		5050758	0					
ANR	5053277	Argument	"""TextICCProfile"""		5050758	1					
ANR	5053278	PrimaryExpression	"""TextICCProfile"""		5050758	0					
ANR	5053279	PrimaryExpression	0		5050758	1					
ANR	5053280	CompoundStatement		342:46:14651:14651	5050758	1					
ANR	5053281	ReturnStatement	"return param_write_string ( plist , ""TextICCProfile"" , & ( profile_array [ 3 ] ) ) ;"	414:8:16976:17046	5050758	0	True				
ANR	5053282	CallExpression	"param_write_string ( plist , ""TextICCProfile"" , & ( profile_array [ 3 ] ) )"		5050758	0					
ANR	5053283	Callee	param_write_string		5050758	0					
ANR	5053284	Identifier	param_write_string		5050758	0					
ANR	5053285	ArgumentList	plist		5050758	1					
ANR	5053286	Argument	plist		5050758	0					
ANR	5053287	Identifier	plist		5050758	0					
ANR	5053288	Argument	"""TextICCProfile"""		5050758	1					
ANR	5053289	PrimaryExpression	"""TextICCProfile"""		5050758	0					
ANR	5053290	Argument	& ( profile_array [ 3 ] )		5050758	2					
ANR	5053291	UnaryOperationExpression	& ( profile_array [ 3 ] )		5050758	0					
ANR	5053292	UnaryOperator	&		5050758	0					
ANR	5053293	ArrayIndexing	profile_array [ 3 ]		5050758	1					
ANR	5053294	Identifier	profile_array		5050758	0					
ANR	5053295	PrimaryExpression	3		5050758	1					
ANR	5053296	IfStatement	"if ( strcmp ( Param , ""ColorAccuracy"" ) == 0 )"		5050758	68					
ANR	5053297	Condition	"strcmp ( Param , ""ColorAccuracy"" ) == 0"	416:8:17062:17096	5050758	0	True				
ANR	5053298	EqualityExpression	"strcmp ( Param , ""ColorAccuracy"" ) == 0"		5050758	0		==			
ANR	5053299	CallExpression	"strcmp ( Param , ""ColorAccuracy"" )"		5050758	0					
ANR	5053300	Callee	strcmp		5050758	0					
ANR	5053301	Identifier	strcmp		5050758	0					
ANR	5053302	ArgumentList	Param		5050758	1					
ANR	5053303	Argument	Param		5050758	0					
ANR	5053304	Identifier	Param		5050758	0					
ANR	5053305	Argument	"""ColorAccuracy"""		5050758	1					
ANR	5053306	PrimaryExpression	"""ColorAccuracy"""		5050758	0					
ANR	5053307	PrimaryExpression	0		5050758	1					
ANR	5053308	CompoundStatement		345:45:14784:14784	5050758	1					
ANR	5053309	ReturnStatement	"return param_write_int ( plist , ""ColorAccuracy"" , ( const int * ) ( & ( color_accuracy ) ) ) ;"	417:8:17109:17189	5050758	0	True				
ANR	5053310	CallExpression	"param_write_int ( plist , ""ColorAccuracy"" , ( const int * ) ( & ( color_accuracy ) ) )"		5050758	0					
ANR	5053311	Callee	param_write_int		5050758	0					
ANR	5053312	Identifier	param_write_int		5050758	0					
ANR	5053313	ArgumentList	plist		5050758	1					
ANR	5053314	Argument	plist		5050758	0					
ANR	5053315	Identifier	plist		5050758	0					
ANR	5053316	Argument	"""ColorAccuracy"""		5050758	1					
ANR	5053317	PrimaryExpression	"""ColorAccuracy"""		5050758	0					
ANR	5053318	Argument	( const int * ) ( & ( color_accuracy ) )		5050758	2					
ANR	5053319	CastExpression	( const int * ) ( & ( color_accuracy ) )		5050758	0					
ANR	5053320	CastTarget	const int *		5050758	0					
ANR	5053321	UnaryOperationExpression	& ( color_accuracy )		5050758	1					
ANR	5053322	UnaryOperator	&		5050758	0					
ANR	5053323	Identifier	color_accuracy		5050758	1					
ANR	5053324	IfStatement	"if ( strcmp ( Param , ""RenderIntent"" ) == 0 )"		5050758	69					
ANR	5053325	Condition	"strcmp ( Param , ""RenderIntent"" ) == 0"	419:8:17205:17238	5050758	0	True				
ANR	5053326	EqualityExpression	"strcmp ( Param , ""RenderIntent"" ) == 0"		5050758	0		==			
ANR	5053327	CallExpression	"strcmp ( Param , ""RenderIntent"" )"		5050758	0					
ANR	5053328	Callee	strcmp		5050758	0					
ANR	5053329	Identifier	strcmp		5050758	0					
ANR	5053330	ArgumentList	Param		5050758	1					
ANR	5053331	Argument	Param		5050758	0					
ANR	5053332	Identifier	Param		5050758	0					
ANR	5053333	Argument	"""RenderIntent"""		5050758	1					
ANR	5053334	PrimaryExpression	"""RenderIntent"""		5050758	0					
ANR	5053335	PrimaryExpression	0		5050758	1					
ANR	5053336	CompoundStatement		348:44:14926:14926	5050758	1					
ANR	5053337	ReturnStatement	"return param_write_int ( plist , ""RenderIntent"" , ( const int * ) ( & ( profile_intents [ 0 ] ) ) ) ;"	420:8:17251:17334	5050758	0	True				
ANR	5053338	CallExpression	"param_write_int ( plist , ""RenderIntent"" , ( const int * ) ( & ( profile_intents [ 0 ] ) ) )"		5050758	0					
ANR	5053339	Callee	param_write_int		5050758	0					
ANR	5053340	Identifier	param_write_int		5050758	0					
ANR	5053341	ArgumentList	plist		5050758	1					
ANR	5053342	Argument	plist		5050758	0					
ANR	5053343	Identifier	plist		5050758	0					
ANR	5053344	Argument	"""RenderIntent"""		5050758	1					
ANR	5053345	PrimaryExpression	"""RenderIntent"""		5050758	0					
ANR	5053346	Argument	( const int * ) ( & ( profile_intents [ 0 ] ) )		5050758	2					
ANR	5053347	CastExpression	( const int * ) ( & ( profile_intents [ 0 ] ) )		5050758	0					
ANR	5053348	CastTarget	const int *		5050758	0					
ANR	5053349	UnaryOperationExpression	& ( profile_intents [ 0 ] )		5050758	1					
ANR	5053350	UnaryOperator	&		5050758	0					
ANR	5053351	ArrayIndexing	profile_intents [ 0 ]		5050758	1					
ANR	5053352	Identifier	profile_intents		5050758	0					
ANR	5053353	PrimaryExpression	0		5050758	1					
ANR	5053354	IfStatement	"if ( strcmp ( Param , ""GraphicIntent"" ) == 0 )"		5050758	70					
ANR	5053355	Condition	"strcmp ( Param , ""GraphicIntent"" ) == 0"	422:8:17350:17384	5050758	0	True				
ANR	5053356	EqualityExpression	"strcmp ( Param , ""GraphicIntent"" ) == 0"		5050758	0		==			
ANR	5053357	CallExpression	"strcmp ( Param , ""GraphicIntent"" )"		5050758	0					
ANR	5053358	Callee	strcmp		5050758	0					
ANR	5053359	Identifier	strcmp		5050758	0					
ANR	5053360	ArgumentList	Param		5050758	1					
ANR	5053361	Argument	Param		5050758	0					
ANR	5053362	Identifier	Param		5050758	0					
ANR	5053363	Argument	"""GraphicIntent"""		5050758	1					
ANR	5053364	PrimaryExpression	"""GraphicIntent"""		5050758	0					
ANR	5053365	PrimaryExpression	0		5050758	1					
ANR	5053366	CompoundStatement		351:45:15072:15072	5050758	1					
ANR	5053367	ReturnStatement	"return param_write_int ( plist , ""GraphicIntent"" , ( const int * ) & ( profile_intents [ 1 ] ) ) ;"	423:8:17397:17479	5050758	0	True				
ANR	5053368	CallExpression	"param_write_int ( plist , ""GraphicIntent"" , ( const int * ) & ( profile_intents [ 1 ] ) )"		5050758	0					
ANR	5053369	Callee	param_write_int		5050758	0					
ANR	5053370	Identifier	param_write_int		5050758	0					
ANR	5053371	ArgumentList	plist		5050758	1					
ANR	5053372	Argument	plist		5050758	0					
ANR	5053373	Identifier	plist		5050758	0					
ANR	5053374	Argument	"""GraphicIntent"""		5050758	1					
ANR	5053375	PrimaryExpression	"""GraphicIntent"""		5050758	0					
ANR	5053376	Argument	( const int * ) & ( profile_intents [ 1 ] )		5050758	2					
ANR	5053377	CastExpression	( const int * ) & ( profile_intents [ 1 ] )		5050758	0					
ANR	5053378	CastTarget	const int *		5050758	0					
ANR	5053379	UnaryOperationExpression	& ( profile_intents [ 1 ] )		5050758	1					
ANR	5053380	UnaryOperator	&		5050758	0					
ANR	5053381	ArrayIndexing	profile_intents [ 1 ]		5050758	1					
ANR	5053382	Identifier	profile_intents		5050758	0					
ANR	5053383	PrimaryExpression	1		5050758	1					
ANR	5053384	IfStatement	"if ( strcmp ( Param , ""ImageIntent"" ) == 0 )"		5050758	71					
ANR	5053385	Condition	"strcmp ( Param , ""ImageIntent"" ) == 0"	425:8:17495:17527	5050758	0	True				
ANR	5053386	EqualityExpression	"strcmp ( Param , ""ImageIntent"" ) == 0"		5050758	0		==			
ANR	5053387	CallExpression	"strcmp ( Param , ""ImageIntent"" )"		5050758	0					
ANR	5053388	Callee	strcmp		5050758	0					
ANR	5053389	Identifier	strcmp		5050758	0					
ANR	5053390	ArgumentList	Param		5050758	1					
ANR	5053391	Argument	Param		5050758	0					
ANR	5053392	Identifier	Param		5050758	0					
ANR	5053393	Argument	"""ImageIntent"""		5050758	1					
ANR	5053394	PrimaryExpression	"""ImageIntent"""		5050758	0					
ANR	5053395	PrimaryExpression	0		5050758	1					
ANR	5053396	CompoundStatement		354:43:15215:15215	5050758	1					
ANR	5053397	ReturnStatement	"return param_write_int ( plist , ""ImageIntent"" , ( const int * ) & ( profile_intents [ 2 ] ) ) ;"	426:8:17540:17620	5050758	0	True				
ANR	5053398	CallExpression	"param_write_int ( plist , ""ImageIntent"" , ( const int * ) & ( profile_intents [ 2 ] ) )"		5050758	0					
ANR	5053399	Callee	param_write_int		5050758	0					
ANR	5053400	Identifier	param_write_int		5050758	0					
ANR	5053401	ArgumentList	plist		5050758	1					
ANR	5053402	Argument	plist		5050758	0					
ANR	5053403	Identifier	plist		5050758	0					
ANR	5053404	Argument	"""ImageIntent"""		5050758	1					
ANR	5053405	PrimaryExpression	"""ImageIntent"""		5050758	0					
ANR	5053406	Argument	( const int * ) & ( profile_intents [ 2 ] )		5050758	2					
ANR	5053407	CastExpression	( const int * ) & ( profile_intents [ 2 ] )		5050758	0					
ANR	5053408	CastTarget	const int *		5050758	0					
ANR	5053409	UnaryOperationExpression	& ( profile_intents [ 2 ] )		5050758	1					
ANR	5053410	UnaryOperator	&		5050758	0					
ANR	5053411	ArrayIndexing	profile_intents [ 2 ]		5050758	1					
ANR	5053412	Identifier	profile_intents		5050758	0					
ANR	5053413	PrimaryExpression	2		5050758	1					
ANR	5053414	IfStatement	"if ( strcmp ( Param , ""TextIntent"" ) == 0 )"		5050758	72					
ANR	5053415	Condition	"strcmp ( Param , ""TextIntent"" ) == 0"	428:8:17636:17667	5050758	0	True				
ANR	5053416	EqualityExpression	"strcmp ( Param , ""TextIntent"" ) == 0"		5050758	0		==			
ANR	5053417	CallExpression	"strcmp ( Param , ""TextIntent"" )"		5050758	0					
ANR	5053418	Callee	strcmp		5050758	0					
ANR	5053419	Identifier	strcmp		5050758	0					
ANR	5053420	ArgumentList	Param		5050758	1					
ANR	5053421	Argument	Param		5050758	0					
ANR	5053422	Identifier	Param		5050758	0					
ANR	5053423	Argument	"""TextIntent"""		5050758	1					
ANR	5053424	PrimaryExpression	"""TextIntent"""		5050758	0					
ANR	5053425	PrimaryExpression	0		5050758	1					
ANR	5053426	CompoundStatement		357:42:15355:15355	5050758	1					
ANR	5053427	ReturnStatement	"return param_write_int ( plist , ""TextIntent"" , ( const int * ) & ( profile_intents [ 3 ] ) ) ;"	429:8:17680:17759	5050758	0	True				
ANR	5053428	CallExpression	"param_write_int ( plist , ""TextIntent"" , ( const int * ) & ( profile_intents [ 3 ] ) )"		5050758	0					
ANR	5053429	Callee	param_write_int		5050758	0					
ANR	5053430	Identifier	param_write_int		5050758	0					
ANR	5053431	ArgumentList	plist		5050758	1					
ANR	5053432	Argument	plist		5050758	0					
ANR	5053433	Identifier	plist		5050758	0					
ANR	5053434	Argument	"""TextIntent"""		5050758	1					
ANR	5053435	PrimaryExpression	"""TextIntent"""		5050758	0					
ANR	5053436	Argument	( const int * ) & ( profile_intents [ 3 ] )		5050758	2					
ANR	5053437	CastExpression	( const int * ) & ( profile_intents [ 3 ] )		5050758	0					
ANR	5053438	CastTarget	const int *		5050758	0					
ANR	5053439	UnaryOperationExpression	& ( profile_intents [ 3 ] )		5050758	1					
ANR	5053440	UnaryOperator	&		5050758	0					
ANR	5053441	ArrayIndexing	profile_intents [ 3 ]		5050758	1					
ANR	5053442	Identifier	profile_intents		5050758	0					
ANR	5053443	PrimaryExpression	3		5050758	1					
ANR	5053444	IfStatement	"if ( strcmp ( Param , ""BlackPtComp"" ) == 0 )"		5050758	73					
ANR	5053445	Condition	"strcmp ( Param , ""BlackPtComp"" ) == 0"	431:8:17775:17807	5050758	0	True				
ANR	5053446	EqualityExpression	"strcmp ( Param , ""BlackPtComp"" ) == 0"		5050758	0		==			
ANR	5053447	CallExpression	"strcmp ( Param , ""BlackPtComp"" )"		5050758	0					
ANR	5053448	Callee	strcmp		5050758	0					
ANR	5053449	Identifier	strcmp		5050758	0					
ANR	5053450	ArgumentList	Param		5050758	1					
ANR	5053451	Argument	Param		5050758	0					
ANR	5053452	Identifier	Param		5050758	0					
ANR	5053453	Argument	"""BlackPtComp"""		5050758	1					
ANR	5053454	PrimaryExpression	"""BlackPtComp"""		5050758	0					
ANR	5053455	PrimaryExpression	0		5050758	1					
ANR	5053456	CompoundStatement		360:43:15495:15495	5050758	1					
ANR	5053457	ReturnStatement	"return param_write_int ( plist , ""BlackPtComp"" , ( const int * ) ( & ( blackptcomps [ 0 ] ) ) ) ;"	432:8:17820:17899	5050758	0	True				
ANR	5053458	CallExpression	"param_write_int ( plist , ""BlackPtComp"" , ( const int * ) ( & ( blackptcomps [ 0 ] ) ) )"		5050758	0					
ANR	5053459	Callee	param_write_int		5050758	0					
ANR	5053460	Identifier	param_write_int		5050758	0					
ANR	5053461	ArgumentList	plist		5050758	1					
ANR	5053462	Argument	plist		5050758	0					
ANR	5053463	Identifier	plist		5050758	0					
ANR	5053464	Argument	"""BlackPtComp"""		5050758	1					
ANR	5053465	PrimaryExpression	"""BlackPtComp"""		5050758	0					
ANR	5053466	Argument	( const int * ) ( & ( blackptcomps [ 0 ] ) )		5050758	2					
ANR	5053467	CastExpression	( const int * ) ( & ( blackptcomps [ 0 ] ) )		5050758	0					
ANR	5053468	CastTarget	const int *		5050758	0					
ANR	5053469	UnaryOperationExpression	& ( blackptcomps [ 0 ] )		5050758	1					
ANR	5053470	UnaryOperator	&		5050758	0					
ANR	5053471	ArrayIndexing	blackptcomps [ 0 ]		5050758	1					
ANR	5053472	Identifier	blackptcomps		5050758	0					
ANR	5053473	PrimaryExpression	0		5050758	1					
ANR	5053474	IfStatement	"if ( strcmp ( Param , ""GraphicBlackPt"" ) == 0 )"		5050758	74					
ANR	5053475	Condition	"strcmp ( Param , ""GraphicBlackPt"" ) == 0"	434:8:17915:17950	5050758	0	True				
ANR	5053476	EqualityExpression	"strcmp ( Param , ""GraphicBlackPt"" ) == 0"		5050758	0		==			
ANR	5053477	CallExpression	"strcmp ( Param , ""GraphicBlackPt"" )"		5050758	0					
ANR	5053478	Callee	strcmp		5050758	0					
ANR	5053479	Identifier	strcmp		5050758	0					
ANR	5053480	ArgumentList	Param		5050758	1					
ANR	5053481	Argument	Param		5050758	0					
ANR	5053482	Identifier	Param		5050758	0					
ANR	5053483	Argument	"""GraphicBlackPt"""		5050758	1					
ANR	5053484	PrimaryExpression	"""GraphicBlackPt"""		5050758	0					
ANR	5053485	PrimaryExpression	0		5050758	1					
ANR	5053486	CompoundStatement		363:46:15638:15638	5050758	1					
ANR	5053487	ReturnStatement	"return param_write_int ( plist , ""GraphicBlackPt"" , ( const int * ) & ( blackptcomps [ 1 ] ) ) ;"	435:8:17963:18043	5050758	0	True				
ANR	5053488	CallExpression	"param_write_int ( plist , ""GraphicBlackPt"" , ( const int * ) & ( blackptcomps [ 1 ] ) )"		5050758	0					
ANR	5053489	Callee	param_write_int		5050758	0					
ANR	5053490	Identifier	param_write_int		5050758	0					
ANR	5053491	ArgumentList	plist		5050758	1					
ANR	5053492	Argument	plist		5050758	0					
ANR	5053493	Identifier	plist		5050758	0					
ANR	5053494	Argument	"""GraphicBlackPt"""		5050758	1					
ANR	5053495	PrimaryExpression	"""GraphicBlackPt"""		5050758	0					
ANR	5053496	Argument	( const int * ) & ( blackptcomps [ 1 ] )		5050758	2					
ANR	5053497	CastExpression	( const int * ) & ( blackptcomps [ 1 ] )		5050758	0					
ANR	5053498	CastTarget	const int *		5050758	0					
ANR	5053499	UnaryOperationExpression	& ( blackptcomps [ 1 ] )		5050758	1					
ANR	5053500	UnaryOperator	&		5050758	0					
ANR	5053501	ArrayIndexing	blackptcomps [ 1 ]		5050758	1					
ANR	5053502	Identifier	blackptcomps		5050758	0					
ANR	5053503	PrimaryExpression	1		5050758	1					
ANR	5053504	IfStatement	"if ( strcmp ( Param , ""ImageBlackPt"" ) == 0 )"		5050758	75					
ANR	5053505	Condition	"strcmp ( Param , ""ImageBlackPt"" ) == 0"	437:8:18059:18092	5050758	0	True				
ANR	5053506	EqualityExpression	"strcmp ( Param , ""ImageBlackPt"" ) == 0"		5050758	0		==			
ANR	5053507	CallExpression	"strcmp ( Param , ""ImageBlackPt"" )"		5050758	0					
ANR	5053508	Callee	strcmp		5050758	0					
ANR	5053509	Identifier	strcmp		5050758	0					
ANR	5053510	ArgumentList	Param		5050758	1					
ANR	5053511	Argument	Param		5050758	0					
ANR	5053512	Identifier	Param		5050758	0					
ANR	5053513	Argument	"""ImageBlackPt"""		5050758	1					
ANR	5053514	PrimaryExpression	"""ImageBlackPt"""		5050758	0					
ANR	5053515	PrimaryExpression	0		5050758	1					
ANR	5053516	CompoundStatement		366:44:15780:15780	5050758	1					
ANR	5053517	ReturnStatement	"return param_write_int ( plist , ""ImageBlackPt"" , ( const int * ) & ( blackptcomps [ 2 ] ) ) ;"	438:8:18105:18183	5050758	0	True				
ANR	5053518	CallExpression	"param_write_int ( plist , ""ImageBlackPt"" , ( const int * ) & ( blackptcomps [ 2 ] ) )"		5050758	0					
ANR	5053519	Callee	param_write_int		5050758	0					
ANR	5053520	Identifier	param_write_int		5050758	0					
ANR	5053521	ArgumentList	plist		5050758	1					
ANR	5053522	Argument	plist		5050758	0					
ANR	5053523	Identifier	plist		5050758	0					
ANR	5053524	Argument	"""ImageBlackPt"""		5050758	1					
ANR	5053525	PrimaryExpression	"""ImageBlackPt"""		5050758	0					
ANR	5053526	Argument	( const int * ) & ( blackptcomps [ 2 ] )		5050758	2					
ANR	5053527	CastExpression	( const int * ) & ( blackptcomps [ 2 ] )		5050758	0					
ANR	5053528	CastTarget	const int *		5050758	0					
ANR	5053529	UnaryOperationExpression	& ( blackptcomps [ 2 ] )		5050758	1					
ANR	5053530	UnaryOperator	&		5050758	0					
ANR	5053531	ArrayIndexing	blackptcomps [ 2 ]		5050758	1					
ANR	5053532	Identifier	blackptcomps		5050758	0					
ANR	5053533	PrimaryExpression	2		5050758	1					
ANR	5053534	IfStatement	"if ( strcmp ( Param , ""TextBlackPt"" ) == 0 )"		5050758	76					
ANR	5053535	Condition	"strcmp ( Param , ""TextBlackPt"" ) == 0"	440:8:18199:18231	5050758	0	True				
ANR	5053536	EqualityExpression	"strcmp ( Param , ""TextBlackPt"" ) == 0"		5050758	0		==			
ANR	5053537	CallExpression	"strcmp ( Param , ""TextBlackPt"" )"		5050758	0					
ANR	5053538	Callee	strcmp		5050758	0					
ANR	5053539	Identifier	strcmp		5050758	0					
ANR	5053540	ArgumentList	Param		5050758	1					
ANR	5053541	Argument	Param		5050758	0					
ANR	5053542	Identifier	Param		5050758	0					
ANR	5053543	Argument	"""TextBlackPt"""		5050758	1					
ANR	5053544	PrimaryExpression	"""TextBlackPt"""		5050758	0					
ANR	5053545	PrimaryExpression	0		5050758	1					
ANR	5053546	CompoundStatement		369:43:15919:15919	5050758	1					
ANR	5053547	ReturnStatement	"return param_write_int ( plist , ""TextBlackPt"" , ( const int * ) & ( blackptcomps [ 3 ] ) ) ;"	441:8:18244:18321	5050758	0	True				
ANR	5053548	CallExpression	"param_write_int ( plist , ""TextBlackPt"" , ( const int * ) & ( blackptcomps [ 3 ] ) )"		5050758	0					
ANR	5053549	Callee	param_write_int		5050758	0					
ANR	5053550	Identifier	param_write_int		5050758	0					
ANR	5053551	ArgumentList	plist		5050758	1					
ANR	5053552	Argument	plist		5050758	0					
ANR	5053553	Identifier	plist		5050758	0					
ANR	5053554	Argument	"""TextBlackPt"""		5050758	1					
ANR	5053555	PrimaryExpression	"""TextBlackPt"""		5050758	0					
ANR	5053556	Argument	( const int * ) & ( blackptcomps [ 3 ] )		5050758	2					
ANR	5053557	CastExpression	( const int * ) & ( blackptcomps [ 3 ] )		5050758	0					
ANR	5053558	CastTarget	const int *		5050758	0					
ANR	5053559	UnaryOperationExpression	& ( blackptcomps [ 3 ] )		5050758	1					
ANR	5053560	UnaryOperator	&		5050758	0					
ANR	5053561	ArrayIndexing	blackptcomps [ 3 ]		5050758	1					
ANR	5053562	Identifier	blackptcomps		5050758	0					
ANR	5053563	PrimaryExpression	3		5050758	1					
ANR	5053564	IfStatement	"if ( strcmp ( Param , ""KPreserve"" ) == 0 )"		5050758	77					
ANR	5053565	Condition	"strcmp ( Param , ""KPreserve"" ) == 0"	443:8:18337:18367	5050758	0	True				
ANR	5053566	EqualityExpression	"strcmp ( Param , ""KPreserve"" ) == 0"		5050758	0		==			
ANR	5053567	CallExpression	"strcmp ( Param , ""KPreserve"" )"		5050758	0					
ANR	5053568	Callee	strcmp		5050758	0					
ANR	5053569	Identifier	strcmp		5050758	0					
ANR	5053570	ArgumentList	Param		5050758	1					
ANR	5053571	Argument	Param		5050758	0					
ANR	5053572	Identifier	Param		5050758	0					
ANR	5053573	Argument	"""KPreserve"""		5050758	1					
ANR	5053574	PrimaryExpression	"""KPreserve"""		5050758	0					
ANR	5053575	PrimaryExpression	0		5050758	1					
ANR	5053576	CompoundStatement		372:41:16055:16055	5050758	1					
ANR	5053577	ReturnStatement	"return param_write_int ( plist , ""KPreserve"" , ( const int * ) ( & ( blackpreserve [ 0 ] ) ) ) ;"	444:8:18380:18458	5050758	0	True				
ANR	5053578	CallExpression	"param_write_int ( plist , ""KPreserve"" , ( const int * ) ( & ( blackpreserve [ 0 ] ) ) )"		5050758	0					
ANR	5053579	Callee	param_write_int		5050758	0					
ANR	5053580	Identifier	param_write_int		5050758	0					
ANR	5053581	ArgumentList	plist		5050758	1					
ANR	5053582	Argument	plist		5050758	0					
ANR	5053583	Identifier	plist		5050758	0					
ANR	5053584	Argument	"""KPreserve"""		5050758	1					
ANR	5053585	PrimaryExpression	"""KPreserve"""		5050758	0					
ANR	5053586	Argument	( const int * ) ( & ( blackpreserve [ 0 ] ) )		5050758	2					
ANR	5053587	CastExpression	( const int * ) ( & ( blackpreserve [ 0 ] ) )		5050758	0					
ANR	5053588	CastTarget	const int *		5050758	0					
ANR	5053589	UnaryOperationExpression	& ( blackpreserve [ 0 ] )		5050758	1					
ANR	5053590	UnaryOperator	&		5050758	0					
ANR	5053591	ArrayIndexing	blackpreserve [ 0 ]		5050758	1					
ANR	5053592	Identifier	blackpreserve		5050758	0					
ANR	5053593	PrimaryExpression	0		5050758	1					
ANR	5053594	IfStatement	"if ( strcmp ( Param , ""GraphicKPreserve"" ) == 0 )"		5050758	78					
ANR	5053595	Condition	"strcmp ( Param , ""GraphicKPreserve"" ) == 0"	446:8:18474:18511	5050758	0	True				
ANR	5053596	EqualityExpression	"strcmp ( Param , ""GraphicKPreserve"" ) == 0"		5050758	0		==			
ANR	5053597	CallExpression	"strcmp ( Param , ""GraphicKPreserve"" )"		5050758	0					
ANR	5053598	Callee	strcmp		5050758	0					
ANR	5053599	Identifier	strcmp		5050758	0					
ANR	5053600	ArgumentList	Param		5050758	1					
ANR	5053601	Argument	Param		5050758	0					
ANR	5053602	Identifier	Param		5050758	0					
ANR	5053603	Argument	"""GraphicKPreserve"""		5050758	1					
ANR	5053604	PrimaryExpression	"""GraphicKPreserve"""		5050758	0					
ANR	5053605	PrimaryExpression	0		5050758	1					
ANR	5053606	CompoundStatement		375:48:16199:16199	5050758	1					
ANR	5053607	ReturnStatement	"return param_write_int ( plist , ""GraphicKPreserve"" , ( const int * ) & ( blackpreserve [ 1 ] ) ) ;"	447:8:18524:18607	5050758	0	True				
ANR	5053608	CallExpression	"param_write_int ( plist , ""GraphicKPreserve"" , ( const int * ) & ( blackpreserve [ 1 ] ) )"		5050758	0					
ANR	5053609	Callee	param_write_int		5050758	0					
ANR	5053610	Identifier	param_write_int		5050758	0					
ANR	5053611	ArgumentList	plist		5050758	1					
ANR	5053612	Argument	plist		5050758	0					
ANR	5053613	Identifier	plist		5050758	0					
ANR	5053614	Argument	"""GraphicKPreserve"""		5050758	1					
ANR	5053615	PrimaryExpression	"""GraphicKPreserve"""		5050758	0					
ANR	5053616	Argument	( const int * ) & ( blackpreserve [ 1 ] )		5050758	2					
ANR	5053617	CastExpression	( const int * ) & ( blackpreserve [ 1 ] )		5050758	0					
ANR	5053618	CastTarget	const int *		5050758	0					
ANR	5053619	UnaryOperationExpression	& ( blackpreserve [ 1 ] )		5050758	1					
ANR	5053620	UnaryOperator	&		5050758	0					
ANR	5053621	ArrayIndexing	blackpreserve [ 1 ]		5050758	1					
ANR	5053622	Identifier	blackpreserve		5050758	0					
ANR	5053623	PrimaryExpression	1		5050758	1					
ANR	5053624	IfStatement	"if ( strcmp ( Param , ""ImageKPreserve"" ) == 0 )"		5050758	79					
ANR	5053625	Condition	"strcmp ( Param , ""ImageKPreserve"" ) == 0"	449:8:18623:18658	5050758	0	True				
ANR	5053626	EqualityExpression	"strcmp ( Param , ""ImageKPreserve"" ) == 0"		5050758	0		==			
ANR	5053627	CallExpression	"strcmp ( Param , ""ImageKPreserve"" )"		5050758	0					
ANR	5053628	Callee	strcmp		5050758	0					
ANR	5053629	Identifier	strcmp		5050758	0					
ANR	5053630	ArgumentList	Param		5050758	1					
ANR	5053631	Argument	Param		5050758	0					
ANR	5053632	Identifier	Param		5050758	0					
ANR	5053633	Argument	"""ImageKPreserve"""		5050758	1					
ANR	5053634	PrimaryExpression	"""ImageKPreserve"""		5050758	0					
ANR	5053635	PrimaryExpression	0		5050758	1					
ANR	5053636	CompoundStatement		378:46:16346:16346	5050758	1					
ANR	5053637	ReturnStatement	"return param_write_int ( plist , ""ImageKPreserve"" , ( const int * ) & ( blackpreserve [ 2 ] ) ) ;"	450:8:18671:18752	5050758	0	True				
ANR	5053638	CallExpression	"param_write_int ( plist , ""ImageKPreserve"" , ( const int * ) & ( blackpreserve [ 2 ] ) )"		5050758	0					
ANR	5053639	Callee	param_write_int		5050758	0					
ANR	5053640	Identifier	param_write_int		5050758	0					
ANR	5053641	ArgumentList	plist		5050758	1					
ANR	5053642	Argument	plist		5050758	0					
ANR	5053643	Identifier	plist		5050758	0					
ANR	5053644	Argument	"""ImageKPreserve"""		5050758	1					
ANR	5053645	PrimaryExpression	"""ImageKPreserve"""		5050758	0					
ANR	5053646	Argument	( const int * ) & ( blackpreserve [ 2 ] )		5050758	2					
ANR	5053647	CastExpression	( const int * ) & ( blackpreserve [ 2 ] )		5050758	0					
ANR	5053648	CastTarget	const int *		5050758	0					
ANR	5053649	UnaryOperationExpression	& ( blackpreserve [ 2 ] )		5050758	1					
ANR	5053650	UnaryOperator	&		5050758	0					
ANR	5053651	ArrayIndexing	blackpreserve [ 2 ]		5050758	1					
ANR	5053652	Identifier	blackpreserve		5050758	0					
ANR	5053653	PrimaryExpression	2		5050758	1					
ANR	5053654	IfStatement	"if ( strcmp ( Param , ""TextKPreserve"" ) == 0 )"		5050758	80					
ANR	5053655	Condition	"strcmp ( Param , ""TextKPreserve"" ) == 0"	452:8:18768:18802	5050758	0	True				
ANR	5053656	EqualityExpression	"strcmp ( Param , ""TextKPreserve"" ) == 0"		5050758	0		==			
ANR	5053657	CallExpression	"strcmp ( Param , ""TextKPreserve"" )"		5050758	0					
ANR	5053658	Callee	strcmp		5050758	0					
ANR	5053659	Identifier	strcmp		5050758	0					
ANR	5053660	ArgumentList	Param		5050758	1					
ANR	5053661	Argument	Param		5050758	0					
ANR	5053662	Identifier	Param		5050758	0					
ANR	5053663	Argument	"""TextKPreserve"""		5050758	1					
ANR	5053664	PrimaryExpression	"""TextKPreserve"""		5050758	0					
ANR	5053665	PrimaryExpression	0		5050758	1					
ANR	5053666	CompoundStatement		381:45:16490:16490	5050758	1					
ANR	5053667	ReturnStatement	"return param_write_int ( plist , ""TextKPreserve"" , ( const int * ) & ( blackpreserve [ 3 ] ) ) ;"	453:8:18815:18895	5050758	0	True				
ANR	5053668	CallExpression	"param_write_int ( plist , ""TextKPreserve"" , ( const int * ) & ( blackpreserve [ 3 ] ) )"		5050758	0					
ANR	5053669	Callee	param_write_int		5050758	0					
ANR	5053670	Identifier	param_write_int		5050758	0					
ANR	5053671	ArgumentList	plist		5050758	1					
ANR	5053672	Argument	plist		5050758	0					
ANR	5053673	Identifier	plist		5050758	0					
ANR	5053674	Argument	"""TextKPreserve"""		5050758	1					
ANR	5053675	PrimaryExpression	"""TextKPreserve"""		5050758	0					
ANR	5053676	Argument	( const int * ) & ( blackpreserve [ 3 ] )		5050758	2					
ANR	5053677	CastExpression	( const int * ) & ( blackpreserve [ 3 ] )		5050758	0					
ANR	5053678	CastTarget	const int *		5050758	0					
ANR	5053679	UnaryOperationExpression	& ( blackpreserve [ 3 ] )		5050758	1					
ANR	5053680	UnaryOperator	&		5050758	0					
ANR	5053681	ArrayIndexing	blackpreserve [ 3 ]		5050758	1					
ANR	5053682	Identifier	blackpreserve		5050758	0					
ANR	5053683	PrimaryExpression	3		5050758	1					
ANR	5053684	IfStatement	"if ( strcmp ( Param , ""FirstPage"" ) == 0 )"		5050758	81					
ANR	5053685	Condition	"strcmp ( Param , ""FirstPage"" ) == 0"	455:8:18911:18941	5050758	0	True				
ANR	5053686	EqualityExpression	"strcmp ( Param , ""FirstPage"" ) == 0"		5050758	0		==			
ANR	5053687	CallExpression	"strcmp ( Param , ""FirstPage"" )"		5050758	0					
ANR	5053688	Callee	strcmp		5050758	0					
ANR	5053689	Identifier	strcmp		5050758	0					
ANR	5053690	ArgumentList	Param		5050758	1					
ANR	5053691	Argument	Param		5050758	0					
ANR	5053692	Identifier	Param		5050758	0					
ANR	5053693	Argument	"""FirstPage"""		5050758	1					
ANR	5053694	PrimaryExpression	"""FirstPage"""		5050758	0					
ANR	5053695	PrimaryExpression	0		5050758	1					
ANR	5053696	CompoundStatement		384:41:16629:16629	5050758	1					
ANR	5053697	ReturnStatement	"return param_write_int ( plist , ""FirstPage"" , & dev -> FirstPage ) ;"	456:8:18954:19013	5050758	0	True				
ANR	5053698	CallExpression	"param_write_int ( plist , ""FirstPage"" , & dev -> FirstPage )"		5050758	0					
ANR	5053699	Callee	param_write_int		5050758	0					
ANR	5053700	Identifier	param_write_int		5050758	0					
ANR	5053701	ArgumentList	plist		5050758	1					
ANR	5053702	Argument	plist		5050758	0					
ANR	5053703	Identifier	plist		5050758	0					
ANR	5053704	Argument	"""FirstPage"""		5050758	1					
ANR	5053705	PrimaryExpression	"""FirstPage"""		5050758	0					
ANR	5053706	Argument	& dev -> FirstPage		5050758	2					
ANR	5053707	UnaryOperationExpression	& dev -> FirstPage		5050758	0					
ANR	5053708	UnaryOperator	&		5050758	0					
ANR	5053709	PtrMemberAccess	dev -> FirstPage		5050758	1					
ANR	5053710	Identifier	dev		5050758	0					
ANR	5053711	Identifier	FirstPage		5050758	1					
ANR	5053712	IfStatement	"if ( strcmp ( Param , ""LastPage"" ) == 0 )"		5050758	82					
ANR	5053713	Condition	"strcmp ( Param , ""LastPage"" ) == 0"	458:8:19029:19058	5050758	0	True				
ANR	5053714	EqualityExpression	"strcmp ( Param , ""LastPage"" ) == 0"		5050758	0		==			
ANR	5053715	CallExpression	"strcmp ( Param , ""LastPage"" )"		5050758	0					
ANR	5053716	Callee	strcmp		5050758	0					
ANR	5053717	Identifier	strcmp		5050758	0					
ANR	5053718	ArgumentList	Param		5050758	1					
ANR	5053719	Argument	Param		5050758	0					
ANR	5053720	Identifier	Param		5050758	0					
ANR	5053721	Argument	"""LastPage"""		5050758	1					
ANR	5053722	PrimaryExpression	"""LastPage"""		5050758	0					
ANR	5053723	PrimaryExpression	0		5050758	1					
ANR	5053724	CompoundStatement		387:40:16746:16746	5050758	1					
ANR	5053725	ReturnStatement	"return param_write_int ( plist , ""LastPage"" , & dev -> LastPage ) ;"	459:8:19071:19128	5050758	0	True				
ANR	5053726	CallExpression	"param_write_int ( plist , ""LastPage"" , & dev -> LastPage )"		5050758	0					
ANR	5053727	Callee	param_write_int		5050758	0					
ANR	5053728	Identifier	param_write_int		5050758	0					
ANR	5053729	ArgumentList	plist		5050758	1					
ANR	5053730	Argument	plist		5050758	0					
ANR	5053731	Identifier	plist		5050758	0					
ANR	5053732	Argument	"""LastPage"""		5050758	1					
ANR	5053733	PrimaryExpression	"""LastPage"""		5050758	0					
ANR	5053734	Argument	& dev -> LastPage		5050758	2					
ANR	5053735	UnaryOperationExpression	& dev -> LastPage		5050758	0					
ANR	5053736	UnaryOperator	&		5050758	0					
ANR	5053737	PtrMemberAccess	dev -> LastPage		5050758	1					
ANR	5053738	Identifier	dev		5050758	0					
ANR	5053739	Identifier	LastPage		5050758	1					
ANR	5053740	IfStatement	"if ( strcmp ( Param , ""DisablePageHandler"" ) == 0 )"		5050758	83					
ANR	5053741	Condition	"strcmp ( Param , ""DisablePageHandler"" ) == 0"	461:8:19144:19183	5050758	0	True				
ANR	5053742	EqualityExpression	"strcmp ( Param , ""DisablePageHandler"" ) == 0"		5050758	0		==			
ANR	5053743	CallExpression	"strcmp ( Param , ""DisablePageHandler"" )"		5050758	0					
ANR	5053744	Callee	strcmp		5050758	0					
ANR	5053745	Identifier	strcmp		5050758	0					
ANR	5053746	ArgumentList	Param		5050758	1					
ANR	5053747	Argument	Param		5050758	0					
ANR	5053748	Identifier	Param		5050758	0					
ANR	5053749	Argument	"""DisablePageHandler"""		5050758	1					
ANR	5053750	PrimaryExpression	"""DisablePageHandler"""		5050758	0					
ANR	5053751	PrimaryExpression	0		5050758	1					
ANR	5053752	CompoundStatement		390:50:16871:16871	5050758	1					
ANR	5053753	ExpressionStatement	temp_bool = dev -> DisablePageHandler	462:8:19196:19231	5050758	0	True				
ANR	5053754	AssignmentExpression	temp_bool = dev -> DisablePageHandler		5050758	0		=			
ANR	5053755	Identifier	temp_bool		5050758	0					
ANR	5053756	PtrMemberAccess	dev -> DisablePageHandler		5050758	1					
ANR	5053757	Identifier	dev		5050758	0					
ANR	5053758	Identifier	DisablePageHandler		5050758	1					
ANR	5053759	ReturnStatement	"return param_write_bool ( plist , ""DisablePageHandler"" , & temp_bool ) ;"	463:8:19241:19305	5050758	1	True				
ANR	5053760	CallExpression	"param_write_bool ( plist , ""DisablePageHandler"" , & temp_bool )"		5050758	0					
ANR	5053761	Callee	param_write_bool		5050758	0					
ANR	5053762	Identifier	param_write_bool		5050758	0					
ANR	5053763	ArgumentList	plist		5050758	1					
ANR	5053764	Argument	plist		5050758	0					
ANR	5053765	Identifier	plist		5050758	0					
ANR	5053766	Argument	"""DisablePageHandler"""		5050758	1					
ANR	5053767	PrimaryExpression	"""DisablePageHandler"""		5050758	0					
ANR	5053768	Argument	& temp_bool		5050758	2					
ANR	5053769	UnaryOperationExpression	& temp_bool		5050758	0					
ANR	5053770	UnaryOperator	&		5050758	0					
ANR	5053771	Identifier	temp_bool		5050758	1					
ANR	5053772	IfStatement	"if ( strcmp ( Param , ""PageList"" ) == 0 )"		5050758	84					
ANR	5053773	Condition	"strcmp ( Param , ""PageList"" ) == 0"	465:8:19321:19350	5050758	0	True				
ANR	5053774	EqualityExpression	"strcmp ( Param , ""PageList"" ) == 0"		5050758	0		==			
ANR	5053775	CallExpression	"strcmp ( Param , ""PageList"" )"		5050758	0					
ANR	5053776	Callee	strcmp		5050758	0					
ANR	5053777	Identifier	strcmp		5050758	0					
ANR	5053778	ArgumentList	Param		5050758	1					
ANR	5053779	Argument	Param		5050758	0					
ANR	5053780	Identifier	Param		5050758	0					
ANR	5053781	Argument	"""PageList"""		5050758	1					
ANR	5053782	PrimaryExpression	"""PageList"""		5050758	0					
ANR	5053783	PrimaryExpression	0		5050758	1					
ANR	5053784	CompoundStatement		395:8:17047:17071	5050758	1					
ANR	5053785	IdentifierDeclStatement	gs_param_string pagelist ;	466:8:19362:19386	5050758	0	True				
ANR	5053786	IdentifierDecl	pagelist		5050758	0					
ANR	5053787	IdentifierDeclType	gs_param_string		5050758	0					
ANR	5053788	Identifier	pagelist		5050758	1					
ANR	5053789	IfStatement	if ( dev -> PageList )		5050758	1					
ANR	5053790	Condition	dev -> PageList	467:12:19400:19412	5050758	0	True				
ANR	5053791	PtrMemberAccess	dev -> PageList		5050758	0					
ANR	5053792	Identifier	dev		5050758	0					
ANR	5053793	Identifier	PageList		5050758	1					
ANR	5053794	CompoundStatement		397:12:17114:17163	5050758	1					
ANR	5053795	IdentifierDeclStatement	gdev_pagelist * p = ( gdev_pagelist * ) dev -> PageList ;	468:12:19429:19478	5050758	0	True				
ANR	5053796	IdentifierDecl	* p = ( gdev_pagelist * ) dev -> PageList		5050758	0					
ANR	5053797	IdentifierDeclType	gdev_pagelist *		5050758	0					
ANR	5053798	Identifier	p		5050758	1					
ANR	5053799	AssignmentExpression	* p = ( gdev_pagelist * ) dev -> PageList		5050758	2		=			
ANR	5053800	Identifier	p		5050758	0					
ANR	5053801	CastExpression	( gdev_pagelist * ) dev -> PageList		5050758	1					
ANR	5053802	CastTarget	gdev_pagelist *		5050758	0					
ANR	5053803	PtrMemberAccess	dev -> PageList		5050758	1					
ANR	5053804	Identifier	dev		5050758	0					
ANR	5053805	Identifier	PageList		5050758	1					
ANR	5053806	ExpressionStatement	"param_string_from_string ( pagelist , p -> Pages )"	469:12:19492:19536	5050758	1	True				
ANR	5053807	CallExpression	"param_string_from_string ( pagelist , p -> Pages )"		5050758	0					
ANR	5053808	Callee	param_string_from_string		5050758	0					
ANR	5053809	Identifier	param_string_from_string		5050758	0					
ANR	5053810	ArgumentList	pagelist		5050758	1					
ANR	5053811	Argument	pagelist		5050758	0					
ANR	5053812	Identifier	pagelist		5050758	0					
ANR	5053813	Argument	p -> Pages		5050758	1					
ANR	5053814	PtrMemberAccess	p -> Pages		5050758	0					
ANR	5053815	Identifier	p		5050758	0					
ANR	5053816	Identifier	Pages		5050758	1					
ANR	5053817	ElseStatement	else		5050758	0					
ANR	5053818	ExpressionStatement	"param_string_from_string ( pagelist , null_str )"	472:12:19573:19617	5050758	0	True				
ANR	5053819	CallExpression	"param_string_from_string ( pagelist , null_str )"		5050758	0					
ANR	5053820	Callee	param_string_from_string		5050758	0					
ANR	5053821	Identifier	param_string_from_string		5050758	0					
ANR	5053822	ArgumentList	pagelist		5050758	1					
ANR	5053823	Argument	pagelist		5050758	0					
ANR	5053824	Identifier	pagelist		5050758	0					
ANR	5053825	Argument	null_str		5050758	1					
ANR	5053826	Identifier	null_str		5050758	0					
ANR	5053827	ReturnStatement	"return param_write_string ( plist , ""PageList"" , & pagelist ) ;"	473:8:19627:19682	5050758	2	True				
ANR	5053828	CallExpression	"param_write_string ( plist , ""PageList"" , & pagelist )"		5050758	0					
ANR	5053829	Callee	param_write_string		5050758	0					
ANR	5053830	Identifier	param_write_string		5050758	0					
ANR	5053831	ArgumentList	plist		5050758	1					
ANR	5053832	Argument	plist		5050758	0					
ANR	5053833	Identifier	plist		5050758	0					
ANR	5053834	Argument	"""PageList"""		5050758	1					
ANR	5053835	PrimaryExpression	"""PageList"""		5050758	0					
ANR	5053836	Argument	& pagelist		5050758	2					
ANR	5053837	UnaryOperationExpression	& pagelist		5050758	0					
ANR	5053838	UnaryOperator	&		5050758	0					
ANR	5053839	Identifier	pagelist		5050758	1					
ANR	5053840	IfStatement	"if ( strcmp ( Param , ""FILTERIMAGE"" ) == 0 )"		5050758	85					
ANR	5053841	Condition	"strcmp ( Param , ""FILTERIMAGE"" ) == 0"	475:8:19698:19730	5050758	0	True				
ANR	5053842	EqualityExpression	"strcmp ( Param , ""FILTERIMAGE"" ) == 0"		5050758	0		==			
ANR	5053843	CallExpression	"strcmp ( Param , ""FILTERIMAGE"" )"		5050758	0					
ANR	5053844	Callee	strcmp		5050758	0					
ANR	5053845	Identifier	strcmp		5050758	0					
ANR	5053846	ArgumentList	Param		5050758	1					
ANR	5053847	Argument	Param		5050758	0					
ANR	5053848	Identifier	Param		5050758	0					
ANR	5053849	Argument	"""FILTERIMAGE"""		5050758	1					
ANR	5053850	PrimaryExpression	"""FILTERIMAGE"""		5050758	0					
ANR	5053851	PrimaryExpression	0		5050758	1					
ANR	5053852	CompoundStatement		404:43:17418:17418	5050758	1					
ANR	5053853	ExpressionStatement	temp_bool = dev -> ObjectFilter & FILTERIMAGE	476:8:19743:19786	5050758	0	True				
ANR	5053854	AssignmentExpression	temp_bool = dev -> ObjectFilter & FILTERIMAGE		5050758	0		=			
ANR	5053855	Identifier	temp_bool		5050758	0					
ANR	5053856	BitAndExpression	dev -> ObjectFilter & FILTERIMAGE		5050758	1		&			
ANR	5053857	PtrMemberAccess	dev -> ObjectFilter		5050758	0					
ANR	5053858	Identifier	dev		5050758	0					
ANR	5053859	Identifier	ObjectFilter		5050758	1					
ANR	5053860	Identifier	FILTERIMAGE		5050758	1					
ANR	5053861	ReturnStatement	"return param_write_bool ( plist , ""FILTERIMAGE"" , & temp_bool ) ;"	477:8:19796:19853	5050758	1	True				
ANR	5053862	CallExpression	"param_write_bool ( plist , ""FILTERIMAGE"" , & temp_bool )"		5050758	0					
ANR	5053863	Callee	param_write_bool		5050758	0					
ANR	5053864	Identifier	param_write_bool		5050758	0					
ANR	5053865	ArgumentList	plist		5050758	1					
ANR	5053866	Argument	plist		5050758	0					
ANR	5053867	Identifier	plist		5050758	0					
ANR	5053868	Argument	"""FILTERIMAGE"""		5050758	1					
ANR	5053869	PrimaryExpression	"""FILTERIMAGE"""		5050758	0					
ANR	5053870	Argument	& temp_bool		5050758	2					
ANR	5053871	UnaryOperationExpression	& temp_bool		5050758	0					
ANR	5053872	UnaryOperator	&		5050758	0					
ANR	5053873	Identifier	temp_bool		5050758	1					
ANR	5053874	IfStatement	"if ( strcmp ( Param , ""FILTERTEXT"" ) == 0 )"		5050758	86					
ANR	5053875	Condition	"strcmp ( Param , ""FILTERTEXT"" ) == 0"	479:8:19869:19900	5050758	0	True				
ANR	5053876	EqualityExpression	"strcmp ( Param , ""FILTERTEXT"" ) == 0"		5050758	0		==			
ANR	5053877	CallExpression	"strcmp ( Param , ""FILTERTEXT"" )"		5050758	0					
ANR	5053878	Callee	strcmp		5050758	0					
ANR	5053879	Identifier	strcmp		5050758	0					
ANR	5053880	ArgumentList	Param		5050758	1					
ANR	5053881	Argument	Param		5050758	0					
ANR	5053882	Identifier	Param		5050758	0					
ANR	5053883	Argument	"""FILTERTEXT"""		5050758	1					
ANR	5053884	PrimaryExpression	"""FILTERTEXT"""		5050758	0					
ANR	5053885	PrimaryExpression	0		5050758	1					
ANR	5053886	CompoundStatement		408:42:17588:17588	5050758	1					
ANR	5053887	ExpressionStatement	temp_bool = dev -> ObjectFilter & FILTERTEXT	480:8:19913:19955	5050758	0	True				
ANR	5053888	AssignmentExpression	temp_bool = dev -> ObjectFilter & FILTERTEXT		5050758	0		=			
ANR	5053889	Identifier	temp_bool		5050758	0					
ANR	5053890	BitAndExpression	dev -> ObjectFilter & FILTERTEXT		5050758	1		&			
ANR	5053891	PtrMemberAccess	dev -> ObjectFilter		5050758	0					
ANR	5053892	Identifier	dev		5050758	0					
ANR	5053893	Identifier	ObjectFilter		5050758	1					
ANR	5053894	Identifier	FILTERTEXT		5050758	1					
ANR	5053895	ReturnStatement	"return param_write_bool ( plist , ""FILTERTEXT"" , & temp_bool ) ;"	481:8:19965:20021	5050758	1	True				
ANR	5053896	CallExpression	"param_write_bool ( plist , ""FILTERTEXT"" , & temp_bool )"		5050758	0					
ANR	5053897	Callee	param_write_bool		5050758	0					
ANR	5053898	Identifier	param_write_bool		5050758	0					
ANR	5053899	ArgumentList	plist		5050758	1					
ANR	5053900	Argument	plist		5050758	0					
ANR	5053901	Identifier	plist		5050758	0					
ANR	5053902	Argument	"""FILTERTEXT"""		5050758	1					
ANR	5053903	PrimaryExpression	"""FILTERTEXT"""		5050758	0					
ANR	5053904	Argument	& temp_bool		5050758	2					
ANR	5053905	UnaryOperationExpression	& temp_bool		5050758	0					
ANR	5053906	UnaryOperator	&		5050758	0					
ANR	5053907	Identifier	temp_bool		5050758	1					
ANR	5053908	IfStatement	"if ( strcmp ( Param , ""FILTERVECTOR"" ) == 0 )"		5050758	87					
ANR	5053909	Condition	"strcmp ( Param , ""FILTERVECTOR"" ) == 0"	483:8:20037:20070	5050758	0	True				
ANR	5053910	EqualityExpression	"strcmp ( Param , ""FILTERVECTOR"" ) == 0"		5050758	0		==			
ANR	5053911	CallExpression	"strcmp ( Param , ""FILTERVECTOR"" )"		5050758	0					
ANR	5053912	Callee	strcmp		5050758	0					
ANR	5053913	Identifier	strcmp		5050758	0					
ANR	5053914	ArgumentList	Param		5050758	1					
ANR	5053915	Argument	Param		5050758	0					
ANR	5053916	Identifier	Param		5050758	0					
ANR	5053917	Argument	"""FILTERVECTOR"""		5050758	1					
ANR	5053918	PrimaryExpression	"""FILTERVECTOR"""		5050758	0					
ANR	5053919	PrimaryExpression	0		5050758	1					
ANR	5053920	CompoundStatement		412:44:17758:17758	5050758	1					
ANR	5053921	ExpressionStatement	temp_bool = dev -> ObjectFilter & FILTERVECTOR	484:8:20083:20127	5050758	0	True				
ANR	5053922	AssignmentExpression	temp_bool = dev -> ObjectFilter & FILTERVECTOR		5050758	0		=			
ANR	5053923	Identifier	temp_bool		5050758	0					
ANR	5053924	BitAndExpression	dev -> ObjectFilter & FILTERVECTOR		5050758	1		&			
ANR	5053925	PtrMemberAccess	dev -> ObjectFilter		5050758	0					
ANR	5053926	Identifier	dev		5050758	0					
ANR	5053927	Identifier	ObjectFilter		5050758	1					
ANR	5053928	Identifier	FILTERVECTOR		5050758	1					
ANR	5053929	ReturnStatement	"return param_write_bool ( plist , ""FILTERVECTOR"" , & temp_bool ) ;"	485:8:20137:20195	5050758	1	True				
ANR	5053930	CallExpression	"param_write_bool ( plist , ""FILTERVECTOR"" , & temp_bool )"		5050758	0					
ANR	5053931	Callee	param_write_bool		5050758	0					
ANR	5053932	Identifier	param_write_bool		5050758	0					
ANR	5053933	ArgumentList	plist		5050758	1					
ANR	5053934	Argument	plist		5050758	0					
ANR	5053935	Identifier	plist		5050758	0					
ANR	5053936	Argument	"""FILTERVECTOR"""		5050758	1					
ANR	5053937	PrimaryExpression	"""FILTERVECTOR"""		5050758	0					
ANR	5053938	Argument	& temp_bool		5050758	2					
ANR	5053939	UnaryOperationExpression	& temp_bool		5050758	0					
ANR	5053940	UnaryOperator	&		5050758	0					
ANR	5053941	Identifier	temp_bool		5050758	1					
ANR	5053942	ExpressionStatement	return_error ( gs_error_undefined )	488:4:20208:20240	5050758	88	True				
ANR	5053943	CallExpression	return_error ( gs_error_undefined )		5050758	0					
ANR	5053944	Callee	return_error		5050758	0					
ANR	5053945	Identifier	return_error		5050758	0					
ANR	5053946	ArgumentList	gs_error_undefined		5050758	1					
ANR	5053947	Argument	gs_error_undefined		5050758	0					
ANR	5053948	Identifier	gs_error_undefined		5050758	0					
ANR	5053949	ReturnType	int		5050758	1					
ANR	5053950	Identifier	gx_default_get_param		5050758	2					
ANR	5053951	ParameterList	"gx_device * dev , char * Param , void * list"		5050758	3					
ANR	5053952	Parameter	gx_device * dev	71:25:2273:2286	5050758	0	True				
ANR	5053953	ParameterType	gx_device *		5050758	0					
ANR	5053954	Identifier	dev		5050758	1					
ANR	5053955	Parameter	char * Param	71:41:2289:2299	5050758	1	True				
ANR	5053956	ParameterType	char *		5050758	0					
ANR	5053957	Identifier	Param		5050758	1					
ANR	5053958	Parameter	void * list	71:54:2302:2311	5050758	2	True				
ANR	5053959	ParameterType	void *		5050758	0					
ANR	5053960	Identifier	list		5050758	1					
ANR	5053961	CFGEntryNode	ENTRY		5050758		True				
ANR	5053962	CFGExitNode	EXIT		5050758		True				
ANR	5053963	Symbol	hwcms . data		5050758						
ANR	5053964	Symbol	& dev -> page_uses_transparency		5050758						
ANR	5053965	Symbol	blend_profile		5050758						
ANR	5053966	Symbol	& dns		5050758						
ANR	5053967	Symbol	* cms		5050758						
ANR	5053968	Symbol	p -> Pages		5050758						
ANR	5053969	Symbol	dev		5050758						
ANR	5053970	Symbol	palette		5050758						
ANR	5053971	Symbol	& ibba		5050758						
ANR	5053972	Symbol	devicegraytok		5050758						
ANR	5053973	Symbol	icc_colorants		5050758						
ANR	5053974	Symbol	dev -> color_info . num_components		5050758						
ANR	5053975	Symbol	gsicc_init_device_profile_struct		5050758						
ANR	5053976	Symbol	& proof_profile		5050758						
ANR	5053977	Symbol	profile_array		5050758						
ANR	5053978	Symbol	hwcms		5050758						
ANR	5053979	Symbol	param_write_name		5050758						
ANR	5053980	Symbol	MAX_COLOR_ACCURACY		5050758						
ANR	5053981	Symbol	& depth		5050758						
ANR	5053982	Symbol	& dev -> space_params . band . BandHeight		5050758						
ANR	5053983	Symbol	gsBPNOTSPECIFIED		5050758						
ANR	5053984	Symbol	scna		5050758						
ANR	5053985	Symbol	& leadingedge		5050758						
ANR	5053986	Symbol	* dev_profile -> link_profile		5050758						
ANR	5053987	Symbol	param_HWColorMap		5050758						
ANR	5053988	Symbol	param_write_long		5050758						
ANR	5053989	Symbol	ColorValues		5050758						
ANR	5053990	Symbol	& color_accuracy		5050758						
ANR	5053991	Symbol	& dev -> FirstPage		5050758						
ANR	5053992	Symbol	dev_profile -> device_profile		5050758						
ANR	5053993	Symbol	* dev_proc		5050758						
ANR	5053994	Symbol	dev -> Margins		5050758						
ANR	5053995	Symbol	* dev_profile -> blend_profile		5050758						
ANR	5053996	Symbol	dev -> color_info		5050758						
ANR	5053997	Symbol	& link_profile		5050758						
ANR	5053998	Symbol	colors		5050758						
ANR	5053999	Symbol	hwcms . persistent		5050758						
ANR	5054000	Symbol	& hwma		5050758						
ANR	5054001	Symbol	& dev -> color_info . use_antidropout_downscaler		5050758						
ANR	5054002	Symbol	dev_profile -> blend_profile -> name		5050758						
ANR	5054003	Symbol	dev -> ImagingBBox		5050758						
ANR	5054004	Symbol	dev_profile -> rendercond [ k ] . black_point_comp		5050758						
ANR	5054005	Symbol	dev_profile -> link_profile -> name		5050758						
ANR	5054006	Symbol	& pcms		5050758						
ANR	5054007	Symbol	& dev -> space_params . band		5050758						
ANR	5054008	Symbol	dev_profile -> device_profile [ k ] -> name		5050758						
ANR	5054009	Symbol	dev_profile -> spotnames		5050758						
ANR	5054010	Symbol	a		5050758						
ANR	5054011	Symbol	usefastcolor		5050758						
ANR	5054012	Symbol	* * * dev_profile		5050758						
ANR	5054013	Symbol	d		5050758						
ANR	5054014	Symbol	k		5050758						
ANR	5054015	Symbol	gsRINOTSPECIFIED		5050758						
ANR	5054016	Symbol	dev -> HWResolution		5050758						
ANR	5054017	Symbol	p		5050758						
ANR	5054018	Symbol	s		5050758						
ANR	5054019	Symbol	& temp_bool		5050758						
ANR	5054020	Symbol	LEADINGEDGE_MASK		5050758						
ANR	5054021	Symbol	dev -> LeadingEdge		5050758						
ANR	5054022	Symbol	* * dev_profile		5050758						
ANR	5054023	Symbol	dev_profile -> link_profile		5050758						
ANR	5054024	Symbol	HWSize		5050758						
ANR	5054025	Symbol	sim_overprint		5050758						
ANR	5054026	Symbol	& GrayValues		5050758						
ANR	5054027	Symbol	dev_profile		5050758						
ANR	5054028	Symbol	gs_error_undefined		5050758						
ANR	5054029	Symbol	param_write_name_array		5050758						
ANR	5054030	Symbol	& RGBValues		5050758						
ANR	5054031	Symbol	& dev -> IgnoreNumCopies		5050758						
ANR	5054032	Symbol	FILTERVECTOR		5050758						
ANR	5054033	Symbol	leadingedge		5050758						
ANR	5054034	Symbol	dev -> MediaSize		5050758						
ANR	5054035	Symbol	* * k		5050758						
ANR	5054036	Symbol	& msa		5050758						
ANR	5054037	Symbol	& dev -> color_info . anti_alias		5050758						
ANR	5054038	Symbol	gsBKPRESNOTSPECIFIED		5050758						
ANR	5054039	Symbol	list		5050758						
ANR	5054040	Symbol	& dev -> space_params . MaxBitmap		5050758						
ANR	5054041	Symbol	& sim_overprint		5050758						
ANR	5054042	Symbol	a . size		5050758						
ANR	5054043	Symbol	FILTERTEXT		5050758						
ANR	5054044	Symbol	& dev -> LockSafetyParams		5050758						
ANR	5054045	Symbol	dev_profile -> proof_profile		5050758						
ANR	5054046	Symbol	hwma		5050758						
ANR	5054047	Symbol	hwcms . size		5050758						
ANR	5054048	Symbol	dev_proc		5050758						
ANR	5054049	Symbol	blackptcomps		5050758						
ANR	5054050	Symbol	param_write_int		5050758						
ANR	5054051	Symbol	& pagelist		5050758						
ANR	5054052	Symbol	dev -> NumCopies_set		5050758						
ANR	5054053	Symbol	dev_profile -> postren_profile		5050758						
ANR	5054054	Symbol	& ColorValues		5050758						
ANR	5054055	Symbol	false		5050758						
ANR	5054056	Symbol	pagelist		5050758						
ANR	5054057	Symbol	dev -> interpolate_control		5050758						
ANR	5054058	Symbol	dev_profile -> rendercond		5050758						
ANR	5054059	Symbol	pcms		5050758						
ANR	5054060	Symbol	color_accuracy		5050758						
ANR	5054061	Symbol	* profile_array		5050758						
ANR	5054062	Symbol	dev_profile -> proof_profile -> name		5050758						
ANR	5054063	Symbol	* dev_profile -> rendercond		5050758						
ANR	5054064	Symbol	& prebandthreshold		5050758						
ANR	5054065	Symbol	Param		5050758						
ANR	5054066	Symbol	"* dev_proc ( dev , get_page_device )"		5050758						
ANR	5054067	Symbol	dev_profile -> postren_profile -> name		5050758						
ANR	5054068	Symbol	dev -> HWMargins		5050758						
ANR	5054069	Symbol	dev -> color_info . max_components		5050758						
ANR	5054070	Symbol	temp_bool		5050758						
ANR	5054071	Symbol	FILTERIMAGE		5050758						
ANR	5054072	Symbol	& icc_colorants		5050758						
ANR	5054073	Symbol	param_write_string		5050758						
ANR	5054074	Symbol	null_str		5050758						
ANR	5054075	Symbol	dev -> ImagingBBox_set		5050758						
ANR	5054076	Symbol	LEADINGEDGE_SET_MASK		5050758						
ANR	5054077	Symbol	dev -> color_info . max_color		5050758						
ANR	5054078	Symbol	& dev_profile		5050758						
ANR	5054079	Symbol	* dev_profile		5050758						
ANR	5054080	Symbol	& postren_profile		5050758						
ANR	5054081	Symbol	dns		5050758						
ANR	5054082	Symbol	* dev_profile -> proof_profile		5050758						
ANR	5054083	Symbol	ibba		5050758						
ANR	5054084	Symbol	param_write_null		5050758						
ANR	5054085	Symbol	RGBValues		5050758						
ANR	5054086	Symbol	dev -> DisablePageHandler		5050758						
ANR	5054087	Symbol	& dev -> UseCIEColor		5050758						
ANR	5054088	Symbol	& dev -> color_info . anti_alias . text_bits		5050758						
ANR	5054089	Symbol	& dev -> space_params . BufferSpace		5050758						
ANR	5054090	Symbol	* dev_profile -> postren_profile		5050758						
ANR	5054091	Symbol	* dev		5050758						
ANR	5054092	Symbol	prebandthreshold		5050758						
ANR	5054093	Symbol	dev -> height		5050758						
ANR	5054094	Symbol	& blend_profile		5050758						
ANR	5054095	Symbol	cms		5050758						
ANR	5054096	Symbol	& dev -> NumCopies		5050758						
ANR	5054097	Symbol	* profile_intents		5050758						
ANR	5054098	Symbol	dev -> color_info . depth		5050758						
ANR	5054099	Symbol	hwra		5050758						
ANR	5054100	Symbol	plist		5050758						
ANR	5054101	Symbol	dev -> ObjectFilter		5050758						
ANR	5054102	Symbol	colorant_names		5050758						
ANR	5054103	Symbol	& usefastcolor		5050758						
ANR	5054104	Symbol	max_sep		5050758						
ANR	5054105	Symbol	dev -> color_info . max_gray		5050758						
ANR	5054106	Symbol	& dev -> color_info		5050758						
ANR	5054107	Symbol	* * dev_profile -> device_profile		5050758						
ANR	5054108	Symbol	& devicegraytok		5050758						
ANR	5054109	Symbol	& dev -> space_params . band . BandWidth		5050758						
ANR	5054110	Symbol	a . persistent		5050758						
ANR	5054111	Symbol	link_profile		5050758						
ANR	5054112	Symbol	get_process_color_model_name		5050758						
ANR	5054113	Symbol	& dev -> color_info . anti_alias . graphics_bits		5050758						
ANR	5054114	Symbol	gsicc_get_dev_icccolorants		5050758						
ANR	5054115	Symbol	dev_profile -> usefastcolor		5050758						
ANR	5054116	Symbol	& graydetection		5050758						
ANR	5054117	Symbol	& scna		5050758						
ANR	5054118	Symbol	set_param_array		5050758						
ANR	5054119	Symbol	a . data		5050758						
ANR	5054120	Symbol	depth		5050758						
ANR	5054121	Symbol	msa		5050758						
ANR	5054122	Symbol	proof_profile		5050758						
ANR	5054123	Symbol	dev -> space_params		5050758						
ANR	5054124	Symbol	* dev_profile -> device_profile		5050758						
ANR	5054125	Symbol	dev_profile -> rendercond [ k ] . rendering_intent		5050758						
ANR	5054126	Symbol	ma		5050758						
ANR	5054127	Symbol	NUM_DEVICE_PROFILES		5050758						
ANR	5054128	Symbol	dev_profile -> devicegraytok		5050758						
ANR	5054129	Symbol	dev -> PageList		5050758						
ANR	5054130	Symbol	graydetection		5050758						
ANR	5054131	Symbol	seprs		5050758						
ANR	5054132	Symbol	& hwsa		5050758						
ANR	5054133	Symbol	& interpolate_control		5050758						
ANR	5054134	Symbol	strcmp		5050758						
ANR	5054135	Symbol	dev -> color_info . anti_alias		5050758						
ANR	5054136	Symbol	& dev -> space_params . band . BandBufferSpace		5050758						
ANR	5054137	Symbol	NULL		5050758						
ANR	5054138	Symbol	profile_intents		5050758						
ANR	5054139	Symbol	& max_sep		5050758						
ANR	5054140	Symbol	hwsa		5050758						
ANR	5054141	Symbol	get_page_device		5050758						
ANR	5054142	Symbol	dev -> space_params . band		5050758						
ANR	5054143	Symbol	& dev -> MaxPatternBitmap		5050758						
ANR	5054144	Symbol	* blackpreserve		5050758						
ANR	5054145	Symbol	true		5050758						
ANR	5054146	Symbol	dev_profile -> blend_profile		5050758						
ANR	5054147	Symbol	param_write_float_array		5050758						
ANR	5054148	Symbol	& dev -> PageCount		5050758						
ANR	5054149	Symbol	& dev -> space_params		5050758						
ANR	5054150	Symbol	postren_profile		5050758						
ANR	5054151	Symbol	dev_profile -> graydetection		5050758						
ANR	5054152	Symbol	GrayValues		5050758						
ANR	5054153	Symbol	code		5050758						
ANR	5054154	Symbol	dev -> dname		5050758						
ANR	5054155	Symbol	& dev -> LastPage		5050758						
ANR	5054156	Symbol	dev_profile -> sim_overprint		5050758						
ANR	5054157	Symbol	param_write_bool		5050758						
ANR	5054158	Symbol	interpolate_control		5050758						
ANR	5054159	Symbol	param_write_int_array		5050758						
ANR	5054160	Symbol	& colors		5050758						
ANR	5054161	Symbol	& hwcms		5050758						
ANR	5054162	Symbol	get_profile		5050758						
ANR	5054163	Symbol	& ma		5050758						
ANR	5054164	Symbol	blackpreserve		5050758						
ANR	5054165	Symbol	* HWSize		5050758						
ANR	5054166	Symbol	& seprs		5050758						
ANR	5054167	Symbol	* blackptcomps		5050758						
ANR	5054168	Symbol	dev_profile -> rendercond [ k ] . preserve_black		5050758						
ANR	5054169	Symbol	dev_profile -> prebandthreshold		5050758						
ANR	5054170	Symbol	& hwra		5050758						
ANR	5054171	Symbol	dev -> width		5050758						
ANR	5054172	Symbol	* k		5050758						
ANR	5054173	Symbol	* p		5050758						
ANR	5054174	Function	gx_default_get_params	492:0:20276:35493							
ANR	5054175	FunctionDef	"gx_default_get_params (gx_device * dev , gs_param_list * plist)"		5054174	0					
ANR	5054176	CompoundStatement		494:0:20342:35493	5054174	0					
ANR	5054177	IdentifierDeclStatement	int code ;	495:4:20348:20356	5054174	0	True				
ANR	5054178	IdentifierDecl	code		5054174	0					
ANR	5054179	IdentifierDeclType	int		5054174	0					
ANR	5054180	Identifier	code		5054174	1					
ANR	5054181	IdentifierDeclStatement	bool seprs = false ;	499:4:20407:20425	5054174	1	True				
ANR	5054182	IdentifierDecl	seprs = false		5054174	0					
ANR	5054183	IdentifierDeclType	bool		5054174	0					
ANR	5054184	Identifier	seprs		5054174	1					
ANR	5054185	AssignmentExpression	seprs = false		5054174	2		=			
ANR	5054186	Identifier	false		5054174	0					
ANR	5054187	Identifier	false		5054174	1					
ANR	5054188	IdentifierDeclStatement	"gs_param_string dns , pcms , profile_array [ NUM_DEVICE_PROFILES ] ;"	500:4:20431:20492	5054174	2	True				
ANR	5054189	IdentifierDecl	dns		5054174	0					
ANR	5054190	IdentifierDeclType	gs_param_string		5054174	0					
ANR	5054191	Identifier	dns		5054174	1					
ANR	5054192	IdentifierDecl	pcms		5054174	1					
ANR	5054193	IdentifierDeclType	gs_param_string		5054174	0					
ANR	5054194	Identifier	pcms		5054174	1					
ANR	5054195	IdentifierDecl	profile_array [ NUM_DEVICE_PROFILES ]		5054174	2					
ANR	5054196	IdentifierDeclType	gs_param_string [ NUM_DEVICE_PROFILES ]		5054174	0					
ANR	5054197	Identifier	profile_array		5054174	1					
ANR	5054198	Identifier	NUM_DEVICE_PROFILES		5054174	2					
ANR	5054199	IdentifierDeclStatement	"gs_param_string blend_profile , postren_profile , pagelist ;"	501:4:20498:20554	5054174	3	True				
ANR	5054200	IdentifierDecl	blend_profile		5054174	0					
ANR	5054201	IdentifierDeclType	gs_param_string		5054174	0					
ANR	5054202	Identifier	blend_profile		5054174	1					
ANR	5054203	IdentifierDecl	postren_profile		5054174	1					
ANR	5054204	IdentifierDeclType	gs_param_string		5054174	0					
ANR	5054205	Identifier	postren_profile		5054174	1					
ANR	5054206	IdentifierDecl	pagelist		5054174	2					
ANR	5054207	IdentifierDeclType	gs_param_string		5054174	0					
ANR	5054208	Identifier	pagelist		5054174	1					
ANR	5054209	IdentifierDeclStatement	"gs_param_string proof_profile , link_profile , icc_colorants ;"	502:4:20560:20618	5054174	4	True				
ANR	5054210	IdentifierDecl	proof_profile		5054174	0					
ANR	5054211	IdentifierDeclType	gs_param_string		5054174	0					
ANR	5054212	Identifier	proof_profile		5054174	1					
ANR	5054213	IdentifierDecl	link_profile		5054174	1					
ANR	5054214	IdentifierDeclType	gs_param_string		5054174	0					
ANR	5054215	Identifier	link_profile		5054174	1					
ANR	5054216	IdentifierDecl	icc_colorants		5054174	2					
ANR	5054217	IdentifierDeclType	gs_param_string		5054174	0					
ANR	5054218	Identifier	icc_colorants		5054174	1					
ANR	5054219	IdentifierDeclStatement	gsicc_rendering_intents_t profile_intents [ NUM_DEVICE_PROFILES ] ;	503:4:20624:20686	5054174	5	True				
ANR	5054220	IdentifierDecl	profile_intents [ NUM_DEVICE_PROFILES ]		5054174	0					
ANR	5054221	IdentifierDeclType	gsicc_rendering_intents_t [ NUM_DEVICE_PROFILES ]		5054174	0					
ANR	5054222	Identifier	profile_intents		5054174	1					
ANR	5054223	Identifier	NUM_DEVICE_PROFILES		5054174	2					
ANR	5054224	IdentifierDeclStatement	gsicc_blackptcomp_t blackptcomps [ NUM_DEVICE_PROFILES ] ;	504:4:20692:20745	5054174	6	True				
ANR	5054225	IdentifierDecl	blackptcomps [ NUM_DEVICE_PROFILES ]		5054174	0					
ANR	5054226	IdentifierDeclType	gsicc_blackptcomp_t [ NUM_DEVICE_PROFILES ]		5054174	0					
ANR	5054227	Identifier	blackptcomps		5054174	1					
ANR	5054228	Identifier	NUM_DEVICE_PROFILES		5054174	2					
ANR	5054229	IdentifierDeclStatement	gsicc_blackpreserve_t blackpreserve [ NUM_DEVICE_PROFILES ] ;	505:4:20751:20807	5054174	7	True				
ANR	5054230	IdentifierDecl	blackpreserve [ NUM_DEVICE_PROFILES ]		5054174	0					
ANR	5054231	IdentifierDeclType	gsicc_blackpreserve_t [ NUM_DEVICE_PROFILES ]		5054174	0					
ANR	5054232	Identifier	blackpreserve		5054174	1					
ANR	5054233	Identifier	NUM_DEVICE_PROFILES		5054174	2					
ANR	5054234	IdentifierDeclStatement	bool devicegraytok = true ;	506:4:20813:20838	5054174	8	True				
ANR	5054235	IdentifierDecl	devicegraytok = true		5054174	0					
ANR	5054236	IdentifierDeclType	bool		5054174	0					
ANR	5054237	Identifier	devicegraytok		5054174	1					
ANR	5054238	AssignmentExpression	devicegraytok = true		5054174	2		=			
ANR	5054239	Identifier	true		5054174	0					
ANR	5054240	Identifier	true		5054174	1					
ANR	5054241	IdentifierDeclStatement	bool graydetection = false ;	507:4:20891:20917	5054174	9	True				
ANR	5054242	IdentifierDecl	graydetection = false		5054174	0					
ANR	5054243	IdentifierDeclType	bool		5054174	0					
ANR	5054244	Identifier	graydetection		5054174	1					
ANR	5054245	AssignmentExpression	graydetection = false		5054174	2		=			
ANR	5054246	Identifier	false		5054174	0					
ANR	5054247	Identifier	false		5054174	1					
ANR	5054248	IdentifierDeclStatement	bool usefastcolor = false ;	508:4:20923:20948	5054174	10	True				
ANR	5054249	IdentifierDecl	usefastcolor = false		5054174	0					
ANR	5054250	IdentifierDeclType	bool		5054174	0					
ANR	5054251	Identifier	usefastcolor		5054174	1					
ANR	5054252	AssignmentExpression	usefastcolor = false		5054174	2		=			
ANR	5054253	Identifier	false		5054174	0					
ANR	5054254	Identifier	false		5054174	1					
ANR	5054255	IdentifierDeclStatement	bool sim_overprint = false ;	509:4:20985:21011	5054174	11	True				
ANR	5054256	IdentifierDecl	sim_overprint = false		5054174	0					
ANR	5054257	IdentifierDeclType	bool		5054174	0					
ANR	5054258	Identifier	sim_overprint		5054174	1					
ANR	5054259	AssignmentExpression	sim_overprint = false		5054174	2		=			
ANR	5054260	Identifier	false		5054174	0					
ANR	5054261	Identifier	false		5054174	1					
ANR	5054262	IdentifierDeclStatement	"bool prebandthreshold = true , temp_bool ;"	510:4:21064:21103	5054174	12	True				
ANR	5054263	IdentifierDecl	prebandthreshold = true		5054174	0					
ANR	5054264	IdentifierDeclType	bool		5054174	0					
ANR	5054265	Identifier	prebandthreshold		5054174	1					
ANR	5054266	AssignmentExpression	prebandthreshold = true		5054174	2		=			
ANR	5054267	Identifier	true		5054174	0					
ANR	5054268	Identifier	true		5054174	1					
ANR	5054269	IdentifierDecl	temp_bool		5054174	1					
ANR	5054270	IdentifierDeclType	bool		5054174	0					
ANR	5054271	Identifier	temp_bool		5054174	1					
ANR	5054272	IdentifierDeclStatement	int k ;	511:4:21109:21114	5054174	13	True				
ANR	5054273	IdentifierDecl	k		5054174	0					
ANR	5054274	IdentifierDeclType	int		5054174	0					
ANR	5054275	Identifier	k		5054174	1					
ANR	5054276	IdentifierDeclStatement	int color_accuracy = MAX_COLOR_ACCURACY ;	512:4:21120:21159	5054174	14	True				
ANR	5054277	IdentifierDecl	color_accuracy = MAX_COLOR_ACCURACY		5054174	0					
ANR	5054278	IdentifierDeclType	int		5054174	0					
ANR	5054279	Identifier	color_accuracy		5054174	1					
ANR	5054280	AssignmentExpression	color_accuracy = MAX_COLOR_ACCURACY		5054174	2		=			
ANR	5054281	Identifier	MAX_COLOR_ACCURACY		5054174	0					
ANR	5054282	Identifier	MAX_COLOR_ACCURACY		5054174	1					
ANR	5054283	IdentifierDeclStatement	"gs_param_float_array msa , ibba , hwra , ma ;"	513:4:21165:21205	5054174	15	True				
ANR	5054284	IdentifierDecl	msa		5054174	0					
ANR	5054285	IdentifierDeclType	gs_param_float_array		5054174	0					
ANR	5054286	Identifier	msa		5054174	1					
ANR	5054287	IdentifierDecl	ibba		5054174	1					
ANR	5054288	IdentifierDeclType	gs_param_float_array		5054174	0					
ANR	5054289	Identifier	ibba		5054174	1					
ANR	5054290	IdentifierDecl	hwra		5054174	2					
ANR	5054291	IdentifierDeclType	gs_param_float_array		5054174	0					
ANR	5054292	Identifier	hwra		5054174	1					
ANR	5054293	IdentifierDecl	ma		5054174	3					
ANR	5054294	IdentifierDeclType	gs_param_float_array		5054174	0					
ANR	5054295	Identifier	ma		5054174	1					
ANR	5054296	IdentifierDeclStatement	gs_param_string_array scna ;	514:4:21211:21237	5054174	16	True				
ANR	5054297	IdentifierDecl	scna		5054174	0					
ANR	5054298	IdentifierDeclType	gs_param_string_array		5054174	0					
ANR	5054299	Identifier	scna		5054174	1					
ANR	5054300	IdentifierDeclStatement	char null_str [ 1 ] = { '\\0' } ;	515:4:21243:21266	5054174	17	True				
ANR	5054301	IdentifierDecl	null_str [ 1 ] = { '\\0' }		5054174	0					
ANR	5054302	IdentifierDeclType	char [ 1 ]		5054174	0					
ANR	5054303	Identifier	null_str		5054174	1					
ANR	5054304	PrimaryExpression	1		5054174	2					
ANR	5054305	AssignmentExpression	null_str [ 1 ] = { '\\0' }		5054174	3		=			
ANR	5054306	Identifier	null_str		5054174	0					
ANR	5054307	InitializerList	'\\0'		5054174	1					
ANR	5054308	PrimaryExpression	'\\0'		5054174	0					
ANR	5054309	IdentifierDeclStatement	"define set_param_array ( a , d , s ) ( a . data = d , a . size = s , a . persistent = false ) ;"	517:1:21270:21351	5054174	18	True				
ANR	5054310	IdentifierDecl	"set_param_array ( a , d , s ) ( a . data = d , a . size = s , a . persistent = false )"		5054174	0					
ANR	5054311	IdentifierDeclType	"define ( a , d , s )"		5054174	0					
ANR	5054312	Identifier	set_param_array		5054174	1					
ANR	5054313	Expression	"a . data = d , a . size = s , a . persistent = false"		5054174	2					
ANR	5054314	AssignmentExpression	a . data = d		5054174	0		=			
ANR	5054315	MemberAccess	a . data		5054174	0					
ANR	5054316	Identifier	a		5054174	0					
ANR	5054317	Identifier	data		5054174	1					
ANR	5054318	Identifier	d		5054174	1					
ANR	5054319	Expression	"a . size = s , a . persistent = false"		5054174	1					
ANR	5054320	AssignmentExpression	a . size = s		5054174	0		=			
ANR	5054321	MemberAccess	a . size		5054174	0					
ANR	5054322	Identifier	a		5054174	0					
ANR	5054323	Identifier	size		5054174	1					
ANR	5054324	Identifier	s		5054174	1					
ANR	5054325	AssignmentExpression	a . persistent = false		5054174	1		=			
ANR	5054326	MemberAccess	a . persistent		5054174	0					
ANR	5054327	Identifier	a		5054174	0					
ANR	5054328	Identifier	persistent		5054174	1					
ANR	5054329	Identifier	false		5054174	1					
ANR	5054330	IdentifierDeclStatement	int colors = dev -> color_info . num_components ;	521:4:21393:21436	5054174	19	True				
ANR	5054331	IdentifierDecl	colors = dev -> color_info . num_components		5054174	0					
ANR	5054332	IdentifierDeclType	int		5054174	0					
ANR	5054333	Identifier	colors		5054174	1					
ANR	5054334	AssignmentExpression	colors = dev -> color_info . num_components		5054174	2		=			
ANR	5054335	Identifier	colors		5054174	0					
ANR	5054336	MemberAccess	dev -> color_info . num_components		5054174	1					
ANR	5054337	PtrMemberAccess	dev -> color_info		5054174	0					
ANR	5054338	Identifier	dev		5054174	0					
ANR	5054339	Identifier	color_info		5054174	1					
ANR	5054340	Identifier	num_components		5054174	1					
ANR	5054341	IdentifierDeclStatement	int mns = dev -> color_info . max_components ;	522:4:21442:21482	5054174	20	True				
ANR	5054342	IdentifierDecl	mns = dev -> color_info . max_components		5054174	0					
ANR	5054343	IdentifierDeclType	int		5054174	0					
ANR	5054344	Identifier	mns		5054174	1					
ANR	5054345	AssignmentExpression	mns = dev -> color_info . max_components		5054174	2		=			
ANR	5054346	Identifier	mns		5054174	0					
ANR	5054347	MemberAccess	dev -> color_info . max_components		5054174	1					
ANR	5054348	PtrMemberAccess	dev -> color_info		5054174	0					
ANR	5054349	Identifier	dev		5054174	0					
ANR	5054350	Identifier	color_info		5054174	1					
ANR	5054351	Identifier	max_components		5054174	1					
ANR	5054352	IdentifierDeclStatement	int depth = dev -> color_info . depth ;	523:4:21488:21521	5054174	21	True				
ANR	5054353	IdentifierDecl	depth = dev -> color_info . depth		5054174	0					
ANR	5054354	IdentifierDeclType	int		5054174	0					
ANR	5054355	Identifier	depth		5054174	1					
ANR	5054356	AssignmentExpression	depth = dev -> color_info . depth		5054174	2		=			
ANR	5054357	Identifier	depth		5054174	0					
ANR	5054358	MemberAccess	dev -> color_info . depth		5054174	1					
ANR	5054359	PtrMemberAccess	dev -> color_info		5054174	0					
ANR	5054360	Identifier	dev		5054174	0					
ANR	5054361	Identifier	color_info		5054174	1					
ANR	5054362	Identifier	depth		5054174	1					
ANR	5054363	IdentifierDeclStatement	int GrayValues = dev -> color_info . max_gray + 1 ;	524:4:21527:21572	5054174	22	True				
ANR	5054364	IdentifierDecl	GrayValues = dev -> color_info . max_gray + 1		5054174	0					
ANR	5054365	IdentifierDeclType	int		5054174	0					
ANR	5054366	Identifier	GrayValues		5054174	1					
ANR	5054367	AssignmentExpression	GrayValues = dev -> color_info . max_gray + 1		5054174	2		=			
ANR	5054368	Identifier	GrayValues		5054174	0					
ANR	5054369	AdditiveExpression	dev -> color_info . max_gray + 1		5054174	1		+			
ANR	5054370	MemberAccess	dev -> color_info . max_gray		5054174	0					
ANR	5054371	PtrMemberAccess	dev -> color_info		5054174	0					
ANR	5054372	Identifier	dev		5054174	0					
ANR	5054373	Identifier	color_info		5054174	1					
ANR	5054374	Identifier	max_gray		5054174	1					
ANR	5054375	PrimaryExpression	1		5054174	1					
ANR	5054376	IdentifierDeclStatement	int HWSize [ 2 ] ;	525:4:21578:21591	5054174	23	True				
ANR	5054377	IdentifierDecl	HWSize [ 2 ]		5054174	0					
ANR	5054378	IdentifierDeclType	int [ 2 ]		5054174	0					
ANR	5054379	Identifier	HWSize		5054174	1					
ANR	5054380	PrimaryExpression	2		5054174	2					
ANR	5054381	IdentifierDeclStatement	gs_param_int_array hwsa ;	526:4:21597:21620	5054174	24	True				
ANR	5054382	IdentifierDecl	hwsa		5054174	0					
ANR	5054383	IdentifierDeclType	gs_param_int_array		5054174	0					
ANR	5054384	Identifier	hwsa		5054174	1					
ANR	5054385	IdentifierDeclStatement	gs_param_float_array hwma ;	527:4:21626:21651	5054174	25	True				
ANR	5054386	IdentifierDecl	hwma		5054174	0					
ANR	5054387	IdentifierDeclType	gs_param_float_array		5054174	0					
ANR	5054388	Identifier	hwma		5054174	1					
ANR	5054389	IdentifierDeclStatement	cmm_dev_profile_t * dev_profile ;	528:4:21657:21687	5054174	26	True				
ANR	5054390	IdentifierDecl	* dev_profile		5054174	0					
ANR	5054391	IdentifierDeclType	cmm_dev_profile_t *		5054174	0					
ANR	5054392	Identifier	dev_profile		5054174	1					
ANR	5054393	ExpressionStatement	"param_string_from_string ( dns , dev -> dname )"	532:4:21737:21778	5054174	27	True				
ANR	5054394	CallExpression	"param_string_from_string ( dns , dev -> dname )"		5054174	0					
ANR	5054395	Callee	param_string_from_string		5054174	0					
ANR	5054396	Identifier	param_string_from_string		5054174	0					
ANR	5054397	ArgumentList	dns		5054174	1					
ANR	5054398	Argument	dns		5054174	0					
ANR	5054399	Identifier	dns		5054174	0					
ANR	5054400	Argument	dev -> dname		5054174	1					
ANR	5054401	PtrMemberAccess	dev -> dname		5054174	0					
ANR	5054402	Identifier	dev		5054174	0					
ANR	5054403	Identifier	dname		5054174	1					
ANR	5054404	CompoundStatement		41:8:1451:1502	5054174	28					
ANR	5054405	IdentifierDeclStatement	const char * cms = get_process_color_model_name ( dev ) ;	534:8:21794:21845	5054174	0	True				
ANR	5054406	IdentifierDecl	* cms = get_process_color_model_name ( dev )		5054174	0					
ANR	5054407	IdentifierDeclType	const char *		5054174	0					
ANR	5054408	Identifier	cms		5054174	1					
ANR	5054409	AssignmentExpression	* cms = get_process_color_model_name ( dev )		5054174	2		=			
ANR	5054410	Identifier	cms		5054174	0					
ANR	5054411	CallExpression	get_process_color_model_name ( dev )		5054174	1					
ANR	5054412	Callee	get_process_color_model_name		5054174	0					
ANR	5054413	Identifier	get_process_color_model_name		5054174	0					
ANR	5054414	ArgumentList	dev		5054174	1					
ANR	5054415	Argument	dev		5054174	0					
ANR	5054416	Identifier	dev		5054174	0					
ANR	5054417	IfStatement	if ( ( cms != NULL ) && ( * cms != '\\0' ) )		5054174	1					
ANR	5054418	Condition	( cms != NULL ) && ( * cms != '\\0' )	538:12:21965:21995	5054174	0	True				
ANR	5054419	AndExpression	( cms != NULL ) && ( * cms != '\\0' )		5054174	0		&&			
ANR	5054420	EqualityExpression	cms != NULL		5054174	0		!=			
ANR	5054421	Identifier	cms		5054174	0					
ANR	5054422	Identifier	NULL		5054174	1					
ANR	5054423	EqualityExpression	* cms != '\\0'		5054174	1		!=			
ANR	5054424	UnaryOperationExpression	* cms		5054174	0					
ANR	5054425	UnaryOperator	*		5054174	0					
ANR	5054426	Identifier	cms		5054174	1					
ANR	5054427	PrimaryExpression	'\\0'		5054174	1					
ANR	5054428	ExpressionStatement	"param_string_from_string ( pcms , cms )"	539:12:22010:22045	5054174	1	True				
ANR	5054429	CallExpression	"param_string_from_string ( pcms , cms )"		5054174	0					
ANR	5054430	Callee	param_string_from_string		5054174	0					
ANR	5054431	Identifier	param_string_from_string		5054174	0					
ANR	5054432	ArgumentList	pcms		5054174	1					
ANR	5054433	Argument	pcms		5054174	0					
ANR	5054434	Identifier	pcms		5054174	0					
ANR	5054435	Argument	cms		5054174	1					
ANR	5054436	Identifier	cms		5054174	0					
ANR	5054437	ElseStatement	else		5054174	0					
ANR	5054438	ExpressionStatement	pcms . data = 0	541:12:22072:22085	5054174	0	True				
ANR	5054439	AssignmentExpression	pcms . data = 0		5054174	0		=			
ANR	5054440	MemberAccess	pcms . data		5054174	0					
ANR	5054441	Identifier	pcms		5054174	0					
ANR	5054442	Identifier	data		5054174	1					
ANR	5054443	PrimaryExpression	0		5054174	1					
ANR	5054444	ExpressionStatement	"set_param_array ( hwra , dev -> HWResolution , 2 )"	544:4:22098:22141	5054174	29	True				
ANR	5054445	CallExpression	"set_param_array ( hwra , dev -> HWResolution , 2 )"		5054174	0					
ANR	5054446	Callee	set_param_array		5054174	0					
ANR	5054447	Identifier	set_param_array		5054174	0					
ANR	5054448	ArgumentList	hwra		5054174	1					
ANR	5054449	Argument	hwra		5054174	0					
ANR	5054450	Identifier	hwra		5054174	0					
ANR	5054451	Argument	dev -> HWResolution		5054174	1					
ANR	5054452	PtrMemberAccess	dev -> HWResolution		5054174	0					
ANR	5054453	Identifier	dev		5054174	0					
ANR	5054454	Identifier	HWResolution		5054174	1					
ANR	5054455	Argument	2		5054174	2					
ANR	5054456	PrimaryExpression	2		5054174	0					
ANR	5054457	ExpressionStatement	"set_param_array ( msa , dev -> MediaSize , 2 )"	545:4:22147:22186	5054174	30	True				
ANR	5054458	CallExpression	"set_param_array ( msa , dev -> MediaSize , 2 )"		5054174	0					
ANR	5054459	Callee	set_param_array		5054174	0					
ANR	5054460	Identifier	set_param_array		5054174	0					
ANR	5054461	ArgumentList	msa		5054174	1					
ANR	5054462	Argument	msa		5054174	0					
ANR	5054463	Identifier	msa		5054174	0					
ANR	5054464	Argument	dev -> MediaSize		5054174	1					
ANR	5054465	PtrMemberAccess	dev -> MediaSize		5054174	0					
ANR	5054466	Identifier	dev		5054174	0					
ANR	5054467	Identifier	MediaSize		5054174	1					
ANR	5054468	Argument	2		5054174	2					
ANR	5054469	PrimaryExpression	2		5054174	0					
ANR	5054470	ExpressionStatement	"set_param_array ( ibba , dev -> ImagingBBox , 4 )"	546:4:22192:22234	5054174	31	True				
ANR	5054471	CallExpression	"set_param_array ( ibba , dev -> ImagingBBox , 4 )"		5054174	0					
ANR	5054472	Callee	set_param_array		5054174	0					
ANR	5054473	Identifier	set_param_array		5054174	0					
ANR	5054474	ArgumentList	ibba		5054174	1					
ANR	5054475	Argument	ibba		5054174	0					
ANR	5054476	Identifier	ibba		5054174	0					
ANR	5054477	Argument	dev -> ImagingBBox		5054174	1					
ANR	5054478	PtrMemberAccess	dev -> ImagingBBox		5054174	0					
ANR	5054479	Identifier	dev		5054174	0					
ANR	5054480	Identifier	ImagingBBox		5054174	1					
ANR	5054481	Argument	4		5054174	2					
ANR	5054482	PrimaryExpression	4		5054174	0					
ANR	5054483	ExpressionStatement	"set_param_array ( ma , dev -> Margins , 2 )"	547:4:22240:22276	5054174	32	True				
ANR	5054484	CallExpression	"set_param_array ( ma , dev -> Margins , 2 )"		5054174	0					
ANR	5054485	Callee	set_param_array		5054174	0					
ANR	5054486	Identifier	set_param_array		5054174	0					
ANR	5054487	ArgumentList	ma		5054174	1					
ANR	5054488	Argument	ma		5054174	0					
ANR	5054489	Identifier	ma		5054174	0					
ANR	5054490	Argument	dev -> Margins		5054174	1					
ANR	5054491	PtrMemberAccess	dev -> Margins		5054174	0					
ANR	5054492	Identifier	dev		5054174	0					
ANR	5054493	Identifier	Margins		5054174	1					
ANR	5054494	Argument	2		5054174	2					
ANR	5054495	PrimaryExpression	2		5054174	0					
ANR	5054496	ExpressionStatement	"set_param_array ( scna , NULL , 0 )"	548:4:22282:22312	5054174	33	True				
ANR	5054497	CallExpression	"set_param_array ( scna , NULL , 0 )"		5054174	0					
ANR	5054498	Callee	set_param_array		5054174	0					
ANR	5054499	Identifier	set_param_array		5054174	0					
ANR	5054500	ArgumentList	scna		5054174	1					
ANR	5054501	Argument	scna		5054174	0					
ANR	5054502	Identifier	scna		5054174	0					
ANR	5054503	Argument	NULL		5054174	1					
ANR	5054504	Identifier	NULL		5054174	0					
ANR	5054505	Argument	0		5054174	2					
ANR	5054506	PrimaryExpression	0		5054174	0					
ANR	5054507	ExpressionStatement	HWSize [ 0 ] = dev -> width	551:4:22362:22384	5054174	34	True				
ANR	5054508	AssignmentExpression	HWSize [ 0 ] = dev -> width		5054174	0		=			
ANR	5054509	ArrayIndexing	HWSize [ 0 ]		5054174	0					
ANR	5054510	Identifier	HWSize		5054174	0					
ANR	5054511	PrimaryExpression	0		5054174	1					
ANR	5054512	PtrMemberAccess	dev -> width		5054174	1					
ANR	5054513	Identifier	dev		5054174	0					
ANR	5054514	Identifier	width		5054174	1					
ANR	5054515	ExpressionStatement	HWSize [ 1 ] = dev -> height	552:4:22390:22413	5054174	35	True				
ANR	5054516	AssignmentExpression	HWSize [ 1 ] = dev -> height		5054174	0		=			
ANR	5054517	ArrayIndexing	HWSize [ 1 ]		5054174	0					
ANR	5054518	Identifier	HWSize		5054174	0					
ANR	5054519	PrimaryExpression	1		5054174	1					
ANR	5054520	PtrMemberAccess	dev -> height		5054174	1					
ANR	5054521	Identifier	dev		5054174	0					
ANR	5054522	Identifier	height		5054174	1					
ANR	5054523	ExpressionStatement	"set_param_array ( hwsa , HWSize , 2 )"	553:4:22419:22451	5054174	36	True				
ANR	5054524	CallExpression	"set_param_array ( hwsa , HWSize , 2 )"		5054174	0					
ANR	5054525	Callee	set_param_array		5054174	0					
ANR	5054526	Identifier	set_param_array		5054174	0					
ANR	5054527	ArgumentList	hwsa		5054174	1					
ANR	5054528	Argument	hwsa		5054174	0					
ANR	5054529	Identifier	hwsa		5054174	0					
ANR	5054530	Argument	HWSize		5054174	1					
ANR	5054531	Identifier	HWSize		5054174	0					
ANR	5054532	Argument	2		5054174	2					
ANR	5054533	PrimaryExpression	2		5054174	0					
ANR	5054534	ExpressionStatement	"set_param_array ( hwma , dev -> HWMargins , 4 )"	554:4:22457:22497	5054174	37	True				
ANR	5054535	CallExpression	"set_param_array ( hwma , dev -> HWMargins , 4 )"		5054174	0					
ANR	5054536	Callee	set_param_array		5054174	0					
ANR	5054537	Identifier	set_param_array		5054174	0					
ANR	5054538	ArgumentList	hwma		5054174	1					
ANR	5054539	Argument	hwma		5054174	0					
ANR	5054540	Identifier	hwma		5054174	0					
ANR	5054541	Argument	dev -> HWMargins		5054174	1					
ANR	5054542	PtrMemberAccess	dev -> HWMargins		5054174	0					
ANR	5054543	Identifier	dev		5054174	0					
ANR	5054544	Identifier	HWMargins		5054174	1					
ANR	5054545	Argument	4		5054174	2					
ANR	5054546	PrimaryExpression	4		5054174	0					
ANR	5054547	IfStatement	"if ( dev_proc ( dev , get_profile ) != NULL )"		5054174	38					
ANR	5054548	Condition	"dev_proc ( dev , get_profile ) != NULL"	562:8:22977:23010	5054174	0	True				
ANR	5054549	EqualityExpression	"dev_proc ( dev , get_profile ) != NULL"		5054174	0		!=			
ANR	5054550	CallExpression	"dev_proc ( dev , get_profile )"		5054174	0					
ANR	5054551	Callee	dev_proc		5054174	0					
ANR	5054552	Identifier	dev_proc		5054174	0					
ANR	5054553	ArgumentList	dev		5054174	1					
ANR	5054554	Argument	dev		5054174	0					
ANR	5054555	Identifier	dev		5054174	0					
ANR	5054556	Argument	get_profile		5054174	1					
ANR	5054557	Identifier	get_profile		5054174	0					
ANR	5054558	Identifier	NULL		5054174	1					
ANR	5054559	CompoundStatement		69:44:2670:2670	5054174	1					
ANR	5054560	ExpressionStatement	"code = dev_proc ( dev , get_profile ) ( dev , & dev_profile )"	563:8:23023:23076	5054174	0	True				
ANR	5054561	AssignmentExpression	"code = dev_proc ( dev , get_profile ) ( dev , & dev_profile )"		5054174	0		=			
ANR	5054562	Identifier	code		5054174	0					
ANR	5054563	CallExpression	"dev_proc ( dev , get_profile ) ( dev , & dev_profile )"		5054174	1					
ANR	5054564	Callee	"dev_proc ( dev , get_profile )"		5054174	0					
ANR	5054565	CallExpression	"dev_proc ( dev , get_profile )"		5054174	0					
ANR	5054566	Callee	dev_proc		5054174	0					
ANR	5054567	Identifier	dev_proc		5054174	0					
ANR	5054568	ArgumentList	dev		5054174	1					
ANR	5054569	Argument	dev		5054174	0					
ANR	5054570	Identifier	dev		5054174	0					
ANR	5054571	Argument	get_profile		5054174	1					
ANR	5054572	Identifier	get_profile		5054174	0					
ANR	5054573	ArgumentList	dev		5054174	1					
ANR	5054574	Argument	dev		5054174	0					
ANR	5054575	Identifier	dev		5054174	0					
ANR	5054576	Argument	& dev_profile		5054174	1					
ANR	5054577	UnaryOperationExpression	& dev_profile		5054174	0					
ANR	5054578	UnaryOperator	&		5054174	0					
ANR	5054579	Identifier	dev_profile		5054174	1					
ANR	5054580	IfStatement	if ( code < 0 )		5054174	1					
ANR	5054581	Condition	code < 0	564:12:23090:23097	5054174	0	True				
ANR	5054582	RelationalExpression	code < 0		5054174	0		<			
ANR	5054583	Identifier	code		5054174	0					
ANR	5054584	PrimaryExpression	0		5054174	1					
ANR	5054585	ReturnStatement	return code ;	565:12:23112:23123	5054174	1	True				
ANR	5054586	Identifier	code		5054174	0					
ANR	5054587	IfStatement	if ( dev_profile == NULL )		5054174	2					
ANR	5054588	Condition	dev_profile == NULL	567:12:23138:23156	5054174	0	True				
ANR	5054589	EqualityExpression	dev_profile == NULL		5054174	0		==			
ANR	5054590	Identifier	dev_profile		5054174	0					
ANR	5054591	Identifier	NULL		5054174	1					
ANR	5054592	CompoundStatement		74:33:2816:2816	5054174	1					
ANR	5054593	ExpressionStatement	"code = gsicc_init_device_profile_struct ( dev , NULL , 0 )"	568:12:23173:23226	5054174	0	True				
ANR	5054594	AssignmentExpression	"code = gsicc_init_device_profile_struct ( dev , NULL , 0 )"		5054174	0		=			
ANR	5054595	Identifier	code		5054174	0					
ANR	5054596	CallExpression	"gsicc_init_device_profile_struct ( dev , NULL , 0 )"		5054174	1					
ANR	5054597	Callee	gsicc_init_device_profile_struct		5054174	0					
ANR	5054598	Identifier	gsicc_init_device_profile_struct		5054174	0					
ANR	5054599	ArgumentList	dev		5054174	1					
ANR	5054600	Argument	dev		5054174	0					
ANR	5054601	Identifier	dev		5054174	0					
ANR	5054602	Argument	NULL		5054174	1					
ANR	5054603	Identifier	NULL		5054174	0					
ANR	5054604	Argument	0		5054174	2					
ANR	5054605	PrimaryExpression	0		5054174	0					
ANR	5054606	IfStatement	if ( code < 0 )		5054174	1					
ANR	5054607	Condition	code < 0	569:16:23244:23251	5054174	0	True				
ANR	5054608	RelationalExpression	code < 0		5054174	0		<			
ANR	5054609	Identifier	code		5054174	0					
ANR	5054610	PrimaryExpression	0		5054174	1					
ANR	5054611	ReturnStatement	return code ;	570:16:23270:23281	5054174	1	True				
ANR	5054612	Identifier	code		5054174	0					
ANR	5054613	ExpressionStatement	"code = dev_proc ( dev , get_profile ) ( dev , & dev_profile )"	571:12:23295:23348	5054174	2	True				
ANR	5054614	AssignmentExpression	"code = dev_proc ( dev , get_profile ) ( dev , & dev_profile )"		5054174	0		=			
ANR	5054615	Identifier	code		5054174	0					
ANR	5054616	CallExpression	"dev_proc ( dev , get_profile ) ( dev , & dev_profile )"		5054174	1					
ANR	5054617	Callee	"dev_proc ( dev , get_profile )"		5054174	0					
ANR	5054618	CallExpression	"dev_proc ( dev , get_profile )"		5054174	0					
ANR	5054619	Callee	dev_proc		5054174	0					
ANR	5054620	Identifier	dev_proc		5054174	0					
ANR	5054621	ArgumentList	dev		5054174	1					
ANR	5054622	Argument	dev		5054174	0					
ANR	5054623	Identifier	dev		5054174	0					
ANR	5054624	Argument	get_profile		5054174	1					
ANR	5054625	Identifier	get_profile		5054174	0					
ANR	5054626	ArgumentList	dev		5054174	1					
ANR	5054627	Argument	dev		5054174	0					
ANR	5054628	Identifier	dev		5054174	0					
ANR	5054629	Argument	& dev_profile		5054174	1					
ANR	5054630	UnaryOperationExpression	& dev_profile		5054174	0					
ANR	5054631	UnaryOperator	&		5054174	0					
ANR	5054632	Identifier	dev_profile		5054174	1					
ANR	5054633	IfStatement	if ( code < 0 )		5054174	3					
ANR	5054634	Condition	code < 0	572:16:23366:23373	5054174	0	True				
ANR	5054635	RelationalExpression	code < 0		5054174	0		<			
ANR	5054636	Identifier	code		5054174	0					
ANR	5054637	PrimaryExpression	0		5054174	1					
ANR	5054638	ReturnStatement	return code ;	573:16:23392:23403	5054174	1	True				
ANR	5054639	Identifier	code		5054174	0					
ANR	5054640	ForStatement	for ( k = 0 ; k < NUM_DEVICE_PROFILES ; k ++ )		5054174	3					
ANR	5054641	ForInit	k = 0 ;	579:13:23729:23734	5054174	0	True				
ANR	5054642	AssignmentExpression	k = 0		5054174	0		=			
ANR	5054643	Identifier	k		5054174	0					
ANR	5054644	PrimaryExpression	0		5054174	1					
ANR	5054645	Condition	k < NUM_DEVICE_PROFILES	579:20:23736:23758	5054174	1	True				
ANR	5054646	RelationalExpression	k < NUM_DEVICE_PROFILES		5054174	0		<			
ANR	5054647	Identifier	k		5054174	0					
ANR	5054648	Identifier	NUM_DEVICE_PROFILES		5054174	1					
ANR	5054649	PostIncDecOperationExpression	k ++	579:45:23761:23763	5054174	2	True				
ANR	5054650	Identifier	k		5054174	0					
ANR	5054651	IncDec	++		5054174	1					
ANR	5054652	CompoundStatement		86:50:3423:3423	5054174	3					
ANR	5054653	IfStatement	if ( dev_profile -> device_profile [ k ] == NULL || dev_profile -> device_profile [ k ] -> name == NULL )		5054174	0					
ANR	5054654	Condition	dev_profile -> device_profile [ k ] == NULL || dev_profile -> device_profile [ k ] -> name == NULL	580:16:23784:23885	5054174	0	True				
ANR	5054655	OrExpression	dev_profile -> device_profile [ k ] == NULL || dev_profile -> device_profile [ k ] -> name == NULL		5054174	0		||			
ANR	5054656	EqualityExpression	dev_profile -> device_profile [ k ] == NULL		5054174	0		==			
ANR	5054657	ArrayIndexing	dev_profile -> device_profile [ k ]		5054174	0					
ANR	5054658	PtrMemberAccess	dev_profile -> device_profile		5054174	0					
ANR	5054659	Identifier	dev_profile		5054174	0					
ANR	5054660	Identifier	device_profile		5054174	1					
ANR	5054661	Identifier	k		5054174	1					
ANR	5054662	Identifier	NULL		5054174	1					
ANR	5054663	EqualityExpression	dev_profile -> device_profile [ k ] -> name == NULL		5054174	1		==			
ANR	5054664	PtrMemberAccess	dev_profile -> device_profile [ k ] -> name		5054174	0					
ANR	5054665	ArrayIndexing	dev_profile -> device_profile [ k ]		5054174	0					
ANR	5054666	PtrMemberAccess	dev_profile -> device_profile		5054174	0					
ANR	5054667	Identifier	dev_profile		5054174	0					
ANR	5054668	Identifier	device_profile		5054174	1					
ANR	5054669	Identifier	k		5054174	1					
ANR	5054670	Identifier	name		5054174	1					
ANR	5054671	Identifier	NULL		5054174	1					
ANR	5054672	CompoundStatement		88:65:3545:3545	5054174	1					
ANR	5054673	ExpressionStatement	"param_string_from_string ( profile_array [ k ] , null_str )"	582:16:23906:23958	5054174	0	True				
ANR	5054674	CallExpression	"param_string_from_string ( profile_array [ k ] , null_str )"		5054174	0					
ANR	5054675	Callee	param_string_from_string		5054174	0					
ANR	5054676	Identifier	param_string_from_string		5054174	0					
ANR	5054677	ArgumentList	profile_array [ k ]		5054174	1					
ANR	5054678	Argument	profile_array [ k ]		5054174	0					
ANR	5054679	ArrayIndexing	profile_array [ k ]		5054174	0					
ANR	5054680	Identifier	profile_array		5054174	0					
ANR	5054681	Identifier	k		5054174	1					
ANR	5054682	Argument	null_str		5054174	1					
ANR	5054683	Identifier	null_str		5054174	0					
ANR	5054684	ExpressionStatement	profile_intents [ k ] = gsRINOTSPECIFIED	583:16:23976:24013	5054174	1	True				
ANR	5054685	AssignmentExpression	profile_intents [ k ] = gsRINOTSPECIFIED		5054174	0		=			
ANR	5054686	ArrayIndexing	profile_intents [ k ]		5054174	0					
ANR	5054687	Identifier	profile_intents		5054174	0					
ANR	5054688	Identifier	k		5054174	1					
ANR	5054689	Identifier	gsRINOTSPECIFIED		5054174	1					
ANR	5054690	ExpressionStatement	blackptcomps [ k ] = gsBPNOTSPECIFIED	584:16:24031:24065	5054174	2	True				
ANR	5054691	AssignmentExpression	blackptcomps [ k ] = gsBPNOTSPECIFIED		5054174	0		=			
ANR	5054692	ArrayIndexing	blackptcomps [ k ]		5054174	0					
ANR	5054693	Identifier	blackptcomps		5054174	0					
ANR	5054694	Identifier	k		5054174	1					
ANR	5054695	Identifier	gsBPNOTSPECIFIED		5054174	1					
ANR	5054696	ExpressionStatement	blackpreserve [ k ] = gsBKPRESNOTSPECIFIED	585:16:24083:24122	5054174	3	True				
ANR	5054697	AssignmentExpression	blackpreserve [ k ] = gsBKPRESNOTSPECIFIED		5054174	0		=			
ANR	5054698	ArrayIndexing	blackpreserve [ k ]		5054174	0					
ANR	5054699	Identifier	blackpreserve		5054174	0					
ANR	5054700	Identifier	k		5054174	1					
ANR	5054701	Identifier	gsBKPRESNOTSPECIFIED		5054174	1					
ANR	5054702	ElseStatement	else		5054174	0					
ANR	5054703	CompoundStatement		93:19:3800:3800	5054174	0					
ANR	5054704	ExpressionStatement	"param_string_from_transient_string ( profile_array [ k ] , dev_profile -> device_profile [ k ] -> name )"	587:16:24161:24271	5054174	0	True				
ANR	5054705	CallExpression	"param_string_from_transient_string ( profile_array [ k ] , dev_profile -> device_profile [ k ] -> name )"		5054174	0					
ANR	5054706	Callee	param_string_from_transient_string		5054174	0					
ANR	5054707	Identifier	param_string_from_transient_string		5054174	0					
ANR	5054708	ArgumentList	profile_array [ k ]		5054174	1					
ANR	5054709	Argument	profile_array [ k ]		5054174	0					
ANR	5054710	ArrayIndexing	profile_array [ k ]		5054174	0					
ANR	5054711	Identifier	profile_array		5054174	0					
ANR	5054712	Identifier	k		5054174	1					
ANR	5054713	Argument	dev_profile -> device_profile [ k ] -> name		5054174	1					
ANR	5054714	PtrMemberAccess	dev_profile -> device_profile [ k ] -> name		5054174	0					
ANR	5054715	ArrayIndexing	dev_profile -> device_profile [ k ]		5054174	0					
ANR	5054716	PtrMemberAccess	dev_profile -> device_profile		5054174	0					
ANR	5054717	Identifier	dev_profile		5054174	0					
ANR	5054718	Identifier	device_profile		5054174	1					
ANR	5054719	Identifier	k		5054174	1					
ANR	5054720	Identifier	name		5054174	1					
ANR	5054721	ExpressionStatement	profile_intents [ k ] = dev_profile -> rendercond [ k ] . rendering_intent	589:16:24289:24353	5054174	1	True				
ANR	5054722	AssignmentExpression	profile_intents [ k ] = dev_profile -> rendercond [ k ] . rendering_intent		5054174	0		=			
ANR	5054723	ArrayIndexing	profile_intents [ k ]		5054174	0					
ANR	5054724	Identifier	profile_intents		5054174	0					
ANR	5054725	Identifier	k		5054174	1					
ANR	5054726	MemberAccess	dev_profile -> rendercond [ k ] . rendering_intent		5054174	1					
ANR	5054727	ArrayIndexing	dev_profile -> rendercond [ k ]		5054174	0					
ANR	5054728	PtrMemberAccess	dev_profile -> rendercond		5054174	0					
ANR	5054729	Identifier	dev_profile		5054174	0					
ANR	5054730	Identifier	rendercond		5054174	1					
ANR	5054731	Identifier	k		5054174	1					
ANR	5054732	Identifier	rendering_intent		5054174	1					
ANR	5054733	ExpressionStatement	blackptcomps [ k ] = dev_profile -> rendercond [ k ] . black_point_comp	590:16:24371:24432	5054174	2	True				
ANR	5054734	AssignmentExpression	blackptcomps [ k ] = dev_profile -> rendercond [ k ] . black_point_comp		5054174	0		=			
ANR	5054735	ArrayIndexing	blackptcomps [ k ]		5054174	0					
ANR	5054736	Identifier	blackptcomps		5054174	0					
ANR	5054737	Identifier	k		5054174	1					
ANR	5054738	MemberAccess	dev_profile -> rendercond [ k ] . black_point_comp		5054174	1					
ANR	5054739	ArrayIndexing	dev_profile -> rendercond [ k ]		5054174	0					
ANR	5054740	PtrMemberAccess	dev_profile -> rendercond		5054174	0					
ANR	5054741	Identifier	dev_profile		5054174	0					
ANR	5054742	Identifier	rendercond		5054174	1					
ANR	5054743	Identifier	k		5054174	1					
ANR	5054744	Identifier	black_point_comp		5054174	1					
ANR	5054745	ExpressionStatement	blackpreserve [ k ] = dev_profile -> rendercond [ k ] . preserve_black	591:16:24450:24510	5054174	3	True				
ANR	5054746	AssignmentExpression	blackpreserve [ k ] = dev_profile -> rendercond [ k ] . preserve_black		5054174	0		=			
ANR	5054747	ArrayIndexing	blackpreserve [ k ]		5054174	0					
ANR	5054748	Identifier	blackpreserve		5054174	0					
ANR	5054749	Identifier	k		5054174	1					
ANR	5054750	MemberAccess	dev_profile -> rendercond [ k ] . preserve_black		5054174	1					
ANR	5054751	ArrayIndexing	dev_profile -> rendercond [ k ]		5054174	0					
ANR	5054752	PtrMemberAccess	dev_profile -> rendercond		5054174	0					
ANR	5054753	Identifier	dev_profile		5054174	0					
ANR	5054754	Identifier	rendercond		5054174	1					
ANR	5054755	Identifier	k		5054174	1					
ANR	5054756	Identifier	preserve_black		5054174	1					
ANR	5054757	IfStatement	if ( dev_profile -> proof_profile == NULL )		5054174	4					
ANR	5054758	Condition	dev_profile -> proof_profile == NULL	595:12:24602:24635	5054174	0	True				
ANR	5054759	EqualityExpression	dev_profile -> proof_profile == NULL		5054174	0		==			
ANR	5054760	PtrMemberAccess	dev_profile -> proof_profile		5054174	0					
ANR	5054761	Identifier	dev_profile		5054174	0					
ANR	5054762	Identifier	proof_profile		5054174	1					
ANR	5054763	Identifier	NULL		5054174	1					
ANR	5054764	CompoundStatement		102:48:4295:4295	5054174	1					
ANR	5054765	ExpressionStatement	"param_string_from_string ( proof_profile , null_str )"	596:12:24652:24701	5054174	0	True				
ANR	5054766	CallExpression	"param_string_from_string ( proof_profile , null_str )"		5054174	0					
ANR	5054767	Callee	param_string_from_string		5054174	0					
ANR	5054768	Identifier	param_string_from_string		5054174	0					
ANR	5054769	ArgumentList	proof_profile		5054174	1					
ANR	5054770	Argument	proof_profile		5054174	0					
ANR	5054771	Identifier	proof_profile		5054174	0					
ANR	5054772	Argument	null_str		5054174	1					
ANR	5054773	Identifier	null_str		5054174	0					
ANR	5054774	ElseStatement	else		5054174	0					
ANR	5054775	CompoundStatement		104:15:4375:4375	5054174	0					
ANR	5054776	ExpressionStatement	"param_string_from_transient_string ( proof_profile , dev_profile -> proof_profile -> name )"	598:12:24732:24852	5054174	0	True				
ANR	5054777	CallExpression	"param_string_from_transient_string ( proof_profile , dev_profile -> proof_profile -> name )"		5054174	0					
ANR	5054778	Callee	param_string_from_transient_string		5054174	0					
ANR	5054779	Identifier	param_string_from_transient_string		5054174	0					
ANR	5054780	ArgumentList	proof_profile		5054174	1					
ANR	5054781	Argument	proof_profile		5054174	0					
ANR	5054782	Identifier	proof_profile		5054174	0					
ANR	5054783	Argument	dev_profile -> proof_profile -> name		5054174	1					
ANR	5054784	PtrMemberAccess	dev_profile -> proof_profile -> name		5054174	0					
ANR	5054785	PtrMemberAccess	dev_profile -> proof_profile		5054174	0					
ANR	5054786	Identifier	dev_profile		5054174	0					
ANR	5054787	Identifier	proof_profile		5054174	1					
ANR	5054788	Identifier	name		5054174	1					
ANR	5054789	IfStatement	if ( dev_profile -> link_profile == NULL )		5054174	5					
ANR	5054790	Condition	dev_profile -> link_profile == NULL	601:12:24876:24908	5054174	0	True				
ANR	5054791	EqualityExpression	dev_profile -> link_profile == NULL		5054174	0		==			
ANR	5054792	PtrMemberAccess	dev_profile -> link_profile		5054174	0					
ANR	5054793	Identifier	dev_profile		5054174	0					
ANR	5054794	Identifier	link_profile		5054174	1					
ANR	5054795	Identifier	NULL		5054174	1					
ANR	5054796	CompoundStatement		108:47:4568:4568	5054174	1					
ANR	5054797	ExpressionStatement	"param_string_from_string ( link_profile , null_str )"	602:12:24925:24973	5054174	0	True				
ANR	5054798	CallExpression	"param_string_from_string ( link_profile , null_str )"		5054174	0					
ANR	5054799	Callee	param_string_from_string		5054174	0					
ANR	5054800	Identifier	param_string_from_string		5054174	0					
ANR	5054801	ArgumentList	link_profile		5054174	1					
ANR	5054802	Argument	link_profile		5054174	0					
ANR	5054803	Identifier	link_profile		5054174	0					
ANR	5054804	Argument	null_str		5054174	1					
ANR	5054805	Identifier	null_str		5054174	0					
ANR	5054806	ElseStatement	else		5054174	0					
ANR	5054807	CompoundStatement		110:15:4647:4647	5054174	0					
ANR	5054808	ExpressionStatement	"param_string_from_transient_string ( link_profile , dev_profile -> link_profile -> name )"	604:12:25004:25122	5054174	0	True				
ANR	5054809	CallExpression	"param_string_from_transient_string ( link_profile , dev_profile -> link_profile -> name )"		5054174	0					
ANR	5054810	Callee	param_string_from_transient_string		5054174	0					
ANR	5054811	Identifier	param_string_from_transient_string		5054174	0					
ANR	5054812	ArgumentList	link_profile		5054174	1					
ANR	5054813	Argument	link_profile		5054174	0					
ANR	5054814	Identifier	link_profile		5054174	0					
ANR	5054815	Argument	dev_profile -> link_profile -> name		5054174	1					
ANR	5054816	PtrMemberAccess	dev_profile -> link_profile -> name		5054174	0					
ANR	5054817	PtrMemberAccess	dev_profile -> link_profile		5054174	0					
ANR	5054818	Identifier	dev_profile		5054174	0					
ANR	5054819	Identifier	link_profile		5054174	1					
ANR	5054820	Identifier	name		5054174	1					
ANR	5054821	IfStatement	if ( dev_profile -> postren_profile == NULL )		5054174	6					
ANR	5054822	Condition	dev_profile -> postren_profile == NULL	607:12:25146:25181	5054174	0	True				
ANR	5054823	EqualityExpression	dev_profile -> postren_profile == NULL		5054174	0		==			
ANR	5054824	PtrMemberAccess	dev_profile -> postren_profile		5054174	0					
ANR	5054825	Identifier	dev_profile		5054174	0					
ANR	5054826	Identifier	postren_profile		5054174	1					
ANR	5054827	Identifier	NULL		5054174	1					
ANR	5054828	CompoundStatement		114:50:4841:4841	5054174	1					
ANR	5054829	ExpressionStatement	"param_string_from_string ( postren_profile , null_str )"	608:12:25198:25249	5054174	0	True				
ANR	5054830	CallExpression	"param_string_from_string ( postren_profile , null_str )"		5054174	0					
ANR	5054831	Callee	param_string_from_string		5054174	0					
ANR	5054832	Identifier	param_string_from_string		5054174	0					
ANR	5054833	ArgumentList	postren_profile		5054174	1					
ANR	5054834	Argument	postren_profile		5054174	0					
ANR	5054835	Identifier	postren_profile		5054174	0					
ANR	5054836	Argument	null_str		5054174	1					
ANR	5054837	Identifier	null_str		5054174	0					
ANR	5054838	ElseStatement	else		5054174	0					
ANR	5054839	CompoundStatement		116:15:4923:4923	5054174	0					
ANR	5054840	ExpressionStatement	"param_string_from_transient_string ( postren_profile , dev_profile -> postren_profile -> name )"	610:12:25280:25383	5054174	0	True				
ANR	5054841	CallExpression	"param_string_from_transient_string ( postren_profile , dev_profile -> postren_profile -> name )"		5054174	0					
ANR	5054842	Callee	param_string_from_transient_string		5054174	0					
ANR	5054843	Identifier	param_string_from_transient_string		5054174	0					
ANR	5054844	ArgumentList	postren_profile		5054174	1					
ANR	5054845	Argument	postren_profile		5054174	0					
ANR	5054846	Identifier	postren_profile		5054174	0					
ANR	5054847	Argument	dev_profile -> postren_profile -> name		5054174	1					
ANR	5054848	PtrMemberAccess	dev_profile -> postren_profile -> name		5054174	0					
ANR	5054849	PtrMemberAccess	dev_profile -> postren_profile		5054174	0					
ANR	5054850	Identifier	dev_profile		5054174	0					
ANR	5054851	Identifier	postren_profile		5054174	1					
ANR	5054852	Identifier	name		5054174	1					
ANR	5054853	IfStatement	if ( dev_profile -> blend_profile == NULL )		5054174	7					
ANR	5054854	Condition	dev_profile -> blend_profile == NULL	613:12:25407:25440	5054174	0	True				
ANR	5054855	EqualityExpression	dev_profile -> blend_profile == NULL		5054174	0		==			
ANR	5054856	PtrMemberAccess	dev_profile -> blend_profile		5054174	0					
ANR	5054857	Identifier	dev_profile		5054174	0					
ANR	5054858	Identifier	blend_profile		5054174	1					
ANR	5054859	Identifier	NULL		5054174	1					
ANR	5054860	CompoundStatement		120:48:5100:5100	5054174	1					
ANR	5054861	ExpressionStatement	"param_string_from_string ( blend_profile , null_str )"	614:12:25457:25506	5054174	0	True				
ANR	5054862	CallExpression	"param_string_from_string ( blend_profile , null_str )"		5054174	0					
ANR	5054863	Callee	param_string_from_string		5054174	0					
ANR	5054864	Identifier	param_string_from_string		5054174	0					
ANR	5054865	ArgumentList	blend_profile		5054174	1					
ANR	5054866	Argument	blend_profile		5054174	0					
ANR	5054867	Identifier	blend_profile		5054174	0					
ANR	5054868	Argument	null_str		5054174	1					
ANR	5054869	Identifier	null_str		5054174	0					
ANR	5054870	ElseStatement	else		5054174	0					
ANR	5054871	CompoundStatement		122:15:5180:5180	5054174	0					
ANR	5054872	ExpressionStatement	"param_string_from_transient_string ( blend_profile , dev_profile -> blend_profile -> name )"	616:12:25537:25636	5054174	0	True				
ANR	5054873	CallExpression	"param_string_from_transient_string ( blend_profile , dev_profile -> blend_profile -> name )"		5054174	0					
ANR	5054874	Callee	param_string_from_transient_string		5054174	0					
ANR	5054875	Identifier	param_string_from_transient_string		5054174	0					
ANR	5054876	ArgumentList	blend_profile		5054174	1					
ANR	5054877	Argument	blend_profile		5054174	0					
ANR	5054878	Identifier	blend_profile		5054174	0					
ANR	5054879	Argument	dev_profile -> blend_profile -> name		5054174	1					
ANR	5054880	PtrMemberAccess	dev_profile -> blend_profile -> name		5054174	0					
ANR	5054881	PtrMemberAccess	dev_profile -> blend_profile		5054174	0					
ANR	5054882	Identifier	dev_profile		5054174	0					
ANR	5054883	Identifier	blend_profile		5054174	1					
ANR	5054884	Identifier	name		5054174	1					
ANR	5054885	ExpressionStatement	devicegraytok = dev_profile -> devicegraytok	619:8:25656:25698	5054174	8	True				
ANR	5054886	AssignmentExpression	devicegraytok = dev_profile -> devicegraytok		5054174	0		=			
ANR	5054887	Identifier	devicegraytok		5054174	0					
ANR	5054888	PtrMemberAccess	dev_profile -> devicegraytok		5054174	1					
ANR	5054889	Identifier	dev_profile		5054174	0					
ANR	5054890	Identifier	devicegraytok		5054174	1					
ANR	5054891	ExpressionStatement	graydetection = dev_profile -> graydetection	620:8:25708:25750	5054174	9	True				
ANR	5054892	AssignmentExpression	graydetection = dev_profile -> graydetection		5054174	0		=			
ANR	5054893	Identifier	graydetection		5054174	0					
ANR	5054894	PtrMemberAccess	dev_profile -> graydetection		5054174	1					
ANR	5054895	Identifier	dev_profile		5054174	0					
ANR	5054896	Identifier	graydetection		5054174	1					
ANR	5054897	ExpressionStatement	usefastcolor = dev_profile -> usefastcolor	621:8:25760:25800	5054174	10	True				
ANR	5054898	AssignmentExpression	usefastcolor = dev_profile -> usefastcolor		5054174	0		=			
ANR	5054899	Identifier	usefastcolor		5054174	0					
ANR	5054900	PtrMemberAccess	dev_profile -> usefastcolor		5054174	1					
ANR	5054901	Identifier	dev_profile		5054174	0					
ANR	5054902	Identifier	usefastcolor		5054174	1					
ANR	5054903	ExpressionStatement	sim_overprint = dev_profile -> sim_overprint	622:8:25810:25852	5054174	11	True				
ANR	5054904	AssignmentExpression	sim_overprint = dev_profile -> sim_overprint		5054174	0		=			
ANR	5054905	Identifier	sim_overprint		5054174	0					
ANR	5054906	PtrMemberAccess	dev_profile -> sim_overprint		5054174	1					
ANR	5054907	Identifier	dev_profile		5054174	0					
ANR	5054908	Identifier	sim_overprint		5054174	1					
ANR	5054909	ExpressionStatement	prebandthreshold = dev_profile -> prebandthreshold	623:8:25862:25910	5054174	12	True				
ANR	5054910	AssignmentExpression	prebandthreshold = dev_profile -> prebandthreshold		5054174	0		=			
ANR	5054911	Identifier	prebandthreshold		5054174	0					
ANR	5054912	PtrMemberAccess	dev_profile -> prebandthreshold		5054174	1					
ANR	5054913	Identifier	dev_profile		5054174	0					
ANR	5054914	Identifier	prebandthreshold		5054174	1					
ANR	5054915	IfStatement	if ( dev_profile -> spotnames == NULL )		5054174	13					
ANR	5054916	Condition	dev_profile -> spotnames == NULL	627:12:26102:26131	5054174	0	True				
ANR	5054917	EqualityExpression	dev_profile -> spotnames == NULL		5054174	0		==			
ANR	5054918	PtrMemberAccess	dev_profile -> spotnames		5054174	0					
ANR	5054919	Identifier	dev_profile		5054174	0					
ANR	5054920	Identifier	spotnames		5054174	1					
ANR	5054921	Identifier	NULL		5054174	1					
ANR	5054922	CompoundStatement		134:44:5791:5791	5054174	1					
ANR	5054923	ExpressionStatement	"param_string_from_string ( icc_colorants , null_str )"	628:12:26148:26197	5054174	0	True				
ANR	5054924	CallExpression	"param_string_from_string ( icc_colorants , null_str )"		5054174	0					
ANR	5054925	Callee	param_string_from_string		5054174	0					
ANR	5054926	Identifier	param_string_from_string		5054174	0					
ANR	5054927	ArgumentList	icc_colorants		5054174	1					
ANR	5054928	Argument	icc_colorants		5054174	0					
ANR	5054929	Identifier	icc_colorants		5054174	0					
ANR	5054930	Argument	null_str		5054174	1					
ANR	5054931	Identifier	null_str		5054174	0					
ANR	5054932	ElseStatement	else		5054174	0					
ANR	5054933	CompoundStatement		137:12:5885:5905	5054174	0					
ANR	5054934	IdentifierDeclStatement	char * colorant_names ;	630:12:26228:26248	5054174	0	True				
ANR	5054935	IdentifierDecl	* colorant_names		5054174	0					
ANR	5054936	IdentifierDeclType	char *		5054174	0					
ANR	5054937	Identifier	colorant_names		5054174	1					
ANR	5054938	ExpressionStatement	colorant_names = gsicc_get_dev_icccolorants ( dev_profile )	632:12:26263:26335	5054174	1	True				
ANR	5054939	AssignmentExpression	colorant_names = gsicc_get_dev_icccolorants ( dev_profile )		5054174	0		=			
ANR	5054940	Identifier	colorant_names		5054174	0					
ANR	5054941	CallExpression	gsicc_get_dev_icccolorants ( dev_profile )		5054174	1					
ANR	5054942	Callee	gsicc_get_dev_icccolorants		5054174	0					
ANR	5054943	Identifier	gsicc_get_dev_icccolorants		5054174	0					
ANR	5054944	ArgumentList	dev_profile		5054174	1					
ANR	5054945	Argument	dev_profile		5054174	0					
ANR	5054946	Identifier	dev_profile		5054174	0					
ANR	5054947	IfStatement	if ( colorant_names != NULL )		5054174	2					
ANR	5054948	Condition	colorant_names != NULL	634:16:26353:26374	5054174	0	True				
ANR	5054949	EqualityExpression	colorant_names != NULL		5054174	0		!=			
ANR	5054950	Identifier	colorant_names		5054174	0					
ANR	5054951	Identifier	NULL		5054174	1					
ANR	5054952	CompoundStatement		141:40:6034:6034	5054174	1					
ANR	5054953	ExpressionStatement	"param_string_from_transient_string ( icc_colorants , colorant_names )"	635:16:26395:26460	5054174	0	True				
ANR	5054954	CallExpression	"param_string_from_transient_string ( icc_colorants , colorant_names )"		5054174	0					
ANR	5054955	Callee	param_string_from_transient_string		5054174	0					
ANR	5054956	Identifier	param_string_from_transient_string		5054174	0					
ANR	5054957	ArgumentList	icc_colorants		5054174	1					
ANR	5054958	Argument	icc_colorants		5054174	0					
ANR	5054959	Identifier	icc_colorants		5054174	0					
ANR	5054960	Argument	colorant_names		5054174	1					
ANR	5054961	Identifier	colorant_names		5054174	0					
ANR	5054962	ElseStatement	else		5054174	0					
ANR	5054963	CompoundStatement		143:19:6138:6138	5054174	0					
ANR	5054964	ExpressionStatement	"param_string_from_string ( icc_colorants , null_str )"	637:16:26499:26548	5054174	0	True				
ANR	5054965	CallExpression	"param_string_from_string ( icc_colorants , null_str )"		5054174	0					
ANR	5054966	Callee	param_string_from_string		5054174	0					
ANR	5054967	Identifier	param_string_from_string		5054174	0					
ANR	5054968	ArgumentList	icc_colorants		5054174	1					
ANR	5054969	Argument	icc_colorants		5054174	0					
ANR	5054970	Identifier	icc_colorants		5054174	0					
ANR	5054971	Argument	null_str		5054174	1					
ANR	5054972	Identifier	null_str		5054174	0					
ANR	5054973	ElseStatement	else		5054174	0					
ANR	5054974	CompoundStatement		147:11:6242:6242	5054174	0					
ANR	5054975	ForStatement	for ( k = 0 ; k < NUM_DEVICE_PROFILES ; k ++ )		5054174	0					
ANR	5054976	ForInit	k = 0 ;	641:13:26600:26605	5054174	0	True				
ANR	5054977	AssignmentExpression	k = 0		5054174	0		=			
ANR	5054978	Identifier	k		5054174	0					
ANR	5054979	PrimaryExpression	0		5054174	1					
ANR	5054980	Condition	k < NUM_DEVICE_PROFILES	641:20:26607:26629	5054174	1	True				
ANR	5054981	RelationalExpression	k < NUM_DEVICE_PROFILES		5054174	0		<			
ANR	5054982	Identifier	k		5054174	0					
ANR	5054983	Identifier	NUM_DEVICE_PROFILES		5054174	1					
ANR	5054984	PostIncDecOperationExpression	k ++	641:45:26632:26634	5054174	2	True				
ANR	5054985	Identifier	k		5054174	0					
ANR	5054986	IncDec	++		5054174	1					
ANR	5054987	CompoundStatement		148:50:6294:6294	5054174	3					
ANR	5054988	ExpressionStatement	"param_string_from_string ( profile_array [ k ] , null_str )"	642:12:26651:26703	5054174	0	True				
ANR	5054989	CallExpression	"param_string_from_string ( profile_array [ k ] , null_str )"		5054174	0					
ANR	5054990	Callee	param_string_from_string		5054174	0					
ANR	5054991	Identifier	param_string_from_string		5054174	0					
ANR	5054992	ArgumentList	profile_array [ k ]		5054174	1					
ANR	5054993	Argument	profile_array [ k ]		5054174	0					
ANR	5054994	ArrayIndexing	profile_array [ k ]		5054174	0					
ANR	5054995	Identifier	profile_array		5054174	0					
ANR	5054996	Identifier	k		5054174	1					
ANR	5054997	Argument	null_str		5054174	1					
ANR	5054998	Identifier	null_str		5054174	0					
ANR	5054999	ExpressionStatement	profile_intents [ k ] = gsRINOTSPECIFIED	643:12:26717:26754	5054174	1	True				
ANR	5055000	AssignmentExpression	profile_intents [ k ] = gsRINOTSPECIFIED		5054174	0		=			
ANR	5055001	ArrayIndexing	profile_intents [ k ]		5054174	0					
ANR	5055002	Identifier	profile_intents		5054174	0					
ANR	5055003	Identifier	k		5054174	1					
ANR	5055004	Identifier	gsRINOTSPECIFIED		5054174	1					
ANR	5055005	ExpressionStatement	blackptcomps [ k ] = gsBPNOTSPECIFIED	644:12:26768:26802	5054174	2	True				
ANR	5055006	AssignmentExpression	blackptcomps [ k ] = gsBPNOTSPECIFIED		5054174	0		=			
ANR	5055007	ArrayIndexing	blackptcomps [ k ]		5054174	0					
ANR	5055008	Identifier	blackptcomps		5054174	0					
ANR	5055009	Identifier	k		5054174	1					
ANR	5055010	Identifier	gsBPNOTSPECIFIED		5054174	1					
ANR	5055011	ExpressionStatement	blackpreserve [ k ] = gsBKPRESNOTSPECIFIED	645:12:26816:26855	5054174	3	True				
ANR	5055012	AssignmentExpression	blackpreserve [ k ] = gsBKPRESNOTSPECIFIED		5054174	0		=			
ANR	5055013	ArrayIndexing	blackpreserve [ k ]		5054174	0					
ANR	5055014	Identifier	blackpreserve		5054174	0					
ANR	5055015	Identifier	k		5054174	1					
ANR	5055016	Identifier	gsBKPRESNOTSPECIFIED		5054174	1					
ANR	5055017	ExpressionStatement	"param_string_from_string ( proof_profile , null_str )"	647:8:26875:26924	5054174	1	True				
ANR	5055018	CallExpression	"param_string_from_string ( proof_profile , null_str )"		5054174	0					
ANR	5055019	Callee	param_string_from_string		5054174	0					
ANR	5055020	Identifier	param_string_from_string		5054174	0					
ANR	5055021	ArgumentList	proof_profile		5054174	1					
ANR	5055022	Argument	proof_profile		5054174	0					
ANR	5055023	Identifier	proof_profile		5054174	0					
ANR	5055024	Argument	null_str		5054174	1					
ANR	5055025	Identifier	null_str		5054174	0					
ANR	5055026	ExpressionStatement	"param_string_from_string ( link_profile , null_str )"	648:8:26934:26982	5054174	2	True				
ANR	5055027	CallExpression	"param_string_from_string ( link_profile , null_str )"		5054174	0					
ANR	5055028	Callee	param_string_from_string		5054174	0					
ANR	5055029	Identifier	param_string_from_string		5054174	0					
ANR	5055030	ArgumentList	link_profile		5054174	1					
ANR	5055031	Argument	link_profile		5054174	0					
ANR	5055032	Identifier	link_profile		5054174	0					
ANR	5055033	Argument	null_str		5054174	1					
ANR	5055034	Identifier	null_str		5054174	0					
ANR	5055035	ExpressionStatement	"param_string_from_string ( icc_colorants , null_str )"	649:8:26992:27041	5054174	3	True				
ANR	5055036	CallExpression	"param_string_from_string ( icc_colorants , null_str )"		5054174	0					
ANR	5055037	Callee	param_string_from_string		5054174	0					
ANR	5055038	Identifier	param_string_from_string		5054174	0					
ANR	5055039	ArgumentList	icc_colorants		5054174	1					
ANR	5055040	Argument	icc_colorants		5054174	0					
ANR	5055041	Identifier	icc_colorants		5054174	0					
ANR	5055042	Argument	null_str		5054174	1					
ANR	5055043	Identifier	null_str		5054174	0					
ANR	5055044	ExpressionStatement	"param_string_from_string ( postren_profile , null_str )"	650:8:27051:27102	5054174	4	True				
ANR	5055045	CallExpression	"param_string_from_string ( postren_profile , null_str )"		5054174	0					
ANR	5055046	Callee	param_string_from_string		5054174	0					
ANR	5055047	Identifier	param_string_from_string		5054174	0					
ANR	5055048	ArgumentList	postren_profile		5054174	1					
ANR	5055049	Argument	postren_profile		5054174	0					
ANR	5055050	Identifier	postren_profile		5054174	0					
ANR	5055051	Argument	null_str		5054174	1					
ANR	5055052	Identifier	null_str		5054174	0					
ANR	5055053	ExpressionStatement	"param_string_from_string ( blend_profile , null_str )"	651:8:27112:27161	5054174	5	True				
ANR	5055054	CallExpression	"param_string_from_string ( blend_profile , null_str )"		5054174	0					
ANR	5055055	Callee	param_string_from_string		5054174	0					
ANR	5055056	Identifier	param_string_from_string		5054174	0					
ANR	5055057	ArgumentList	blend_profile		5054174	1					
ANR	5055058	Argument	blend_profile		5054174	0					
ANR	5055059	Identifier	blend_profile		5054174	0					
ANR	5055060	Argument	null_str		5054174	1					
ANR	5055061	Identifier	null_str		5054174	0					
ANR	5055062	Statement	if	655:4:27234:27235	5054174	39	True				
ANR	5055063	Statement	(	655:7:27237:27237	5054174	40	True				
ANR	5055064	Statement	(	656:8:27247:27247	5054174	41	True				
ANR	5055065	Statement	code	656:9:27248:27251	5054174	42	True				
ANR	5055066	Statement	=	656:14:27253:27253	5054174	43	True				
ANR	5055067	Statement	param_write_name	656:16:27255:27270	5054174	44	True				
ANR	5055068	Statement	(	656:32:27271:27271	5054174	45	True				
ANR	5055069	Statement	plist	656:33:27272:27276	5054174	46	True				
ANR	5055070	Statement	","	656:38:27277:27277	5054174	47	True				
ANR	5055071	Statement	"""OutputDevice"""	656:40:27279:27292	5054174	48	True				
ANR	5055072	Statement	","	656:54:27293:27293	5054174	49	True				
ANR	5055073	Statement	&	656:56:27295:27295	5054174	50	True				
ANR	5055074	Statement	dns	656:57:27296:27298	5054174	51	True				
ANR	5055075	Statement	)	656:60:27299:27299	5054174	52	True				
ANR	5055076	Statement	)	656:61:27300:27300	5054174	53	True				
ANR	5055077	Statement	<	656:63:27302:27302	5054174	54	True				
ANR	5055078	Statement	0	656:65:27304:27304	5054174	55	True				
ANR	5055079	Statement	||	656:67:27306:27307	5054174	56	True				
ANR	5055080	Statement	(	658:8:27346:27346	5054174	57	True				
ANR	5055081	Statement	code	658:9:27347:27350	5054174	58	True				
ANR	5055082	Statement	=	658:14:27352:27352	5054174	59	True				
ANR	5055083	Statement	param_write_float_array	658:16:27354:27376	5054174	60	True				
ANR	5055084	Statement	(	658:39:27377:27377	5054174	61	True				
ANR	5055085	Statement	plist	658:40:27378:27382	5054174	62	True				
ANR	5055086	Statement	","	658:45:27383:27383	5054174	63	True				
ANR	5055087	Statement	"""PageSize"""	658:47:27385:27394	5054174	64	True				
ANR	5055088	Statement	","	658:57:27395:27395	5054174	65	True				
ANR	5055089	Statement	&	658:59:27397:27397	5054174	66	True				
ANR	5055090	Statement	msa	658:60:27398:27400	5054174	67	True				
ANR	5055091	Statement	)	658:63:27401:27401	5054174	68	True				
ANR	5055092	Statement	)	658:64:27402:27402	5054174	69	True				
ANR	5055093	Statement	<	658:66:27404:27404	5054174	70	True				
ANR	5055094	Statement	0	658:68:27406:27406	5054174	71	True				
ANR	5055095	Statement	||	658:70:27408:27409	5054174	72	True				
ANR	5055096	Statement	(	660:8:27426:27426	5054174	73	True				
ANR	5055097	Statement	code	660:9:27427:27430	5054174	74	True				
ANR	5055098	Statement	=	660:14:27432:27432	5054174	75	True				
ANR	5055099	Statement	(	660:16:27434:27434	5054174	76	True				
ANR	5055100	Statement	pcms	660:17:27435:27438	5054174	77	True				
ANR	5055101	Statement	.	660:21:27439:27439	5054174	78	True				
ANR	5055102	Statement	data	660:22:27440:27443	5054174	79	True				
ANR	5055103	Statement	==	660:27:27445:27446	5054174	80	True				
ANR	5055104	Statement	0	660:30:27448:27448	5054174	81	True				
ANR	5055105	Statement	?	660:32:27450:27450	5054174	82	True				
ANR	5055106	Label	0 :	660:34:27452:27454	5054174	83	True				
ANR	5055107	Statement	param_write_name	661:17:27473:27488	5054174	84	True				
ANR	5055108	Statement	(	661:33:27489:27489	5054174	85	True				
ANR	5055109	Statement	plist	661:34:27490:27494	5054174	86	True				
ANR	5055110	Statement	","	661:39:27495:27495	5054174	87	True				
ANR	5055111	Statement	"""ProcessColorModel"""	661:41:27497:27515	5054174	88	True				
ANR	5055112	Statement	","	661:60:27516:27516	5054174	89	True				
ANR	5055113	Statement	&	661:62:27518:27518	5054174	90	True				
ANR	5055114	Statement	pcms	661:63:27519:27522	5054174	91	True				
ANR	5055115	Statement	)	661:67:27523:27523	5054174	92	True				
ANR	5055116	Statement	)	661:68:27524:27524	5054174	93	True				
ANR	5055117	Statement	)	661:69:27525:27525	5054174	94	True				
ANR	5055118	Statement	<	661:71:27527:27527	5054174	95	True				
ANR	5055119	Statement	0	661:73:27529:27529	5054174	96	True				
ANR	5055120	Statement	||	661:75:27531:27532	5054174	97	True				
ANR	5055121	Statement	(	662:8:27542:27542	5054174	98	True				
ANR	5055122	Statement	code	662:9:27543:27546	5054174	99	True				
ANR	5055123	Statement	=	662:14:27548:27548	5054174	100	True				
ANR	5055124	Statement	param_write_float_array	662:16:27550:27572	5054174	101	True				
ANR	5055125	Statement	(	662:39:27573:27573	5054174	102	True				
ANR	5055126	Statement	plist	662:40:27574:27578	5054174	103	True				
ANR	5055127	Statement	","	662:45:27579:27579	5054174	104	True				
ANR	5055128	Statement	"""HWResolution"""	662:47:27581:27594	5054174	105	True				
ANR	5055129	Statement	","	662:61:27595:27595	5054174	106	True				
ANR	5055130	Statement	&	662:63:27597:27597	5054174	107	True				
ANR	5055131	Statement	hwra	662:64:27598:27601	5054174	108	True				
ANR	5055132	Statement	)	662:68:27602:27602	5054174	109	True				
ANR	5055133	Statement	)	662:69:27603:27603	5054174	110	True				
ANR	5055134	Statement	<	662:71:27605:27605	5054174	111	True				
ANR	5055135	Statement	0	662:73:27607:27607	5054174	112	True				
ANR	5055136	Statement	||	662:75:27609:27610	5054174	113	True				
ANR	5055137	Statement	(	663:8:27620:27620	5054174	114	True				
ANR	5055138	Statement	code	663:9:27621:27624	5054174	115	True				
ANR	5055139	Statement	=	663:14:27626:27626	5054174	116	True				
ANR	5055140	Statement	(	663:16:27628:27628	5054174	117	True				
ANR	5055141	Statement	dev	663:17:27629:27631	5054174	118	True				
ANR	5055142	Statement	->	663:20:27632:27633	5054174	119	True				
ANR	5055143	Statement	ImagingBBox_set	663:22:27634:27648	5054174	120	True				
ANR	5055144	Statement	?	663:38:27650:27650	5054174	121	True				
ANR	5055145	Statement	param_write_float_array	664:17:27669:27691	5054174	122	True				
ANR	5055146	Statement	(	664:40:27692:27692	5054174	123	True				
ANR	5055147	Statement	plist	664:41:27693:27697	5054174	124	True				
ANR	5055148	Statement	","	664:46:27698:27698	5054174	125	True				
ANR	5055149	Statement	"""ImagingBBox"""	664:48:27700:27712	5054174	126	True				
ANR	5055150	Statement	","	664:61:27713:27713	5054174	127	True				
ANR	5055151	Statement	&	664:63:27715:27715	5054174	128	True				
ANR	5055152	Statement	ibba	664:64:27716:27719	5054174	129	True				
ANR	5055153	Statement	)	664:68:27720:27720	5054174	130	True				
ANR	5055154	Statement	:	664:70:27722:27722	5054174	131	True				
ANR	5055155	Statement	param_write_null	665:17:27741:27756	5054174	132	True				
ANR	5055156	Statement	(	665:33:27757:27757	5054174	133	True				
ANR	5055157	Statement	plist	665:34:27758:27762	5054174	134	True				
ANR	5055158	Statement	","	665:39:27763:27763	5054174	135	True				
ANR	5055159	Statement	"""ImagingBBox"""	665:41:27765:27777	5054174	136	True				
ANR	5055160	Statement	)	665:54:27778:27778	5054174	137	True				
ANR	5055161	Statement	)	665:55:27779:27779	5054174	138	True				
ANR	5055162	Statement	)	665:56:27780:27780	5054174	139	True				
ANR	5055163	Statement	<	665:58:27782:27782	5054174	140	True				
ANR	5055164	Statement	0	665:60:27784:27784	5054174	141	True				
ANR	5055165	Statement	||	665:62:27786:27787	5054174	142	True				
ANR	5055166	Statement	(	666:8:27797:27797	5054174	143	True				
ANR	5055167	Statement	code	666:9:27798:27801	5054174	144	True				
ANR	5055168	Statement	=	666:14:27803:27803	5054174	145	True				
ANR	5055169	Statement	param_write_float_array	666:16:27805:27827	5054174	146	True				
ANR	5055170	Statement	(	666:39:27828:27828	5054174	147	True				
ANR	5055171	Statement	plist	666:40:27829:27833	5054174	148	True				
ANR	5055172	Statement	","	666:45:27834:27834	5054174	149	True				
ANR	5055173	Statement	"""Margins"""	666:47:27836:27844	5054174	150	True				
ANR	5055174	Statement	","	666:56:27845:27845	5054174	151	True				
ANR	5055175	Statement	&	666:58:27847:27847	5054174	152	True				
ANR	5055176	Statement	ma	666:59:27848:27849	5054174	153	True				
ANR	5055177	Statement	)	666:61:27850:27850	5054174	154	True				
ANR	5055178	Statement	)	666:62:27851:27851	5054174	155	True				
ANR	5055179	Statement	<	666:64:27853:27853	5054174	156	True				
ANR	5055180	Statement	0	666:66:27855:27855	5054174	157	True				
ANR	5055181	Statement	||	666:68:27857:27858	5054174	158	True				
ANR	5055182	Statement	(	667:8:27868:27868	5054174	159	True				
ANR	5055183	Statement	code	667:9:27869:27872	5054174	160	True				
ANR	5055184	Statement	=	667:14:27874:27874	5054174	161	True				
ANR	5055185	Statement	param_write_int	667:16:27876:27890	5054174	162	True				
ANR	5055186	Statement	(	667:31:27891:27891	5054174	163	True				
ANR	5055187	Statement	plist	667:32:27892:27896	5054174	164	True				
ANR	5055188	Statement	","	667:37:27897:27897	5054174	165	True				
ANR	5055189	Statement	"""MaxSeparations"""	667:39:27899:27914	5054174	166	True				
ANR	5055190	Statement	","	667:55:27915:27915	5054174	167	True				
ANR	5055191	Statement	&	667:57:27917:27917	5054174	168	True				
ANR	5055192	Statement	mns	667:58:27918:27920	5054174	169	True				
ANR	5055193	Statement	)	667:61:27921:27921	5054174	170	True				
ANR	5055194	Statement	)	667:62:27922:27922	5054174	171	True				
ANR	5055195	Statement	<	667:64:27924:27924	5054174	172	True				
ANR	5055196	Statement	0	667:66:27926:27926	5054174	173	True				
ANR	5055197	Statement	||	667:68:27928:27929	5054174	174	True				
ANR	5055198	Statement	(	668:8:27939:27939	5054174	175	True				
ANR	5055199	Statement	code	668:9:27940:27943	5054174	176	True				
ANR	5055200	Statement	=	668:14:27945:27945	5054174	177	True				
ANR	5055201	Statement	(	668:16:27947:27947	5054174	178	True				
ANR	5055202	Statement	dev	668:17:27948:27950	5054174	179	True				
ANR	5055203	Statement	->	668:20:27951:27952	5054174	180	True				
ANR	5055204	Statement	NumCopies_set	668:22:27953:27965	5054174	181	True				
ANR	5055205	Statement	<	668:36:27967:27967	5054174	182	True				
ANR	5055206	Statement	0	668:38:27969:27969	5054174	183	True				
ANR	5055207	Statement	||	668:40:27971:27972	5054174	184	True				
ANR	5055208	Statement	(	669:17:27991:27991	5054174	185	True				
ANR	5055209	Statement	*	669:18:27992:27992	5054174	186	True				
ANR	5055210	Statement	dev_proc	669:19:27993:28000	5054174	187	True				
ANR	5055211	Statement	(	669:27:28001:28001	5054174	188	True				
ANR	5055212	Statement	dev	669:28:28002:28004	5054174	189	True				
ANR	5055213	Statement	","	669:31:28005:28005	5054174	190	True				
ANR	5055214	Statement	get_page_device	669:33:28007:28021	5054174	191	True				
ANR	5055215	Statement	)	669:48:28022:28022	5054174	192	True				
ANR	5055216	Statement	)	669:49:28023:28023	5054174	193	True				
ANR	5055217	Statement	(	669:50:28024:28024	5054174	194	True				
ANR	5055218	Statement	dev	669:51:28025:28027	5054174	195	True				
ANR	5055219	Statement	)	669:54:28028:28028	5054174	196	True				
ANR	5055220	Statement	==	669:56:28030:28031	5054174	197	True				
ANR	5055221	Statement	0	669:59:28033:28033	5054174	198	True				
ANR	5055222	Statement	?	669:61:28035:28035	5054174	199	True				
ANR	5055223	Label	0 :	669:63:28037:28038	5054174	200	True				
ANR	5055224	Statement	dev	670:17:28057:28059	5054174	201	True				
ANR	5055225	Statement	->	670:20:28060:28061	5054174	202	True				
ANR	5055226	Statement	NumCopies_set	670:22:28062:28074	5054174	203	True				
ANR	5055227	Statement	?	670:36:28076:28076	5054174	204	True				
ANR	5055228	Statement	param_write_int	671:17:28095:28109	5054174	205	True				
ANR	5055229	Statement	(	671:32:28110:28110	5054174	206	True				
ANR	5055230	Statement	plist	671:33:28111:28115	5054174	207	True				
ANR	5055231	Statement	","	671:38:28116:28116	5054174	208	True				
ANR	5055232	Statement	"""NumCopies"""	671:40:28118:28128	5054174	209	True				
ANR	5055233	Statement	","	671:51:28129:28129	5054174	210	True				
ANR	5055234	Statement	&	671:53:28131:28131	5054174	211	True				
ANR	5055235	Statement	dev	671:54:28132:28134	5054174	212	True				
ANR	5055236	Statement	->	671:57:28135:28136	5054174	213	True				
ANR	5055237	Statement	NumCopies	671:59:28137:28145	5054174	214	True				
ANR	5055238	Statement	)	671:68:28146:28146	5054174	215	True				
ANR	5055239	Statement	:	671:70:28148:28148	5054174	216	True				
ANR	5055240	Statement	param_write_null	672:17:28167:28182	5054174	217	True				
ANR	5055241	Statement	(	672:33:28183:28183	5054174	218	True				
ANR	5055242	Statement	plist	672:34:28184:28188	5054174	219	True				
ANR	5055243	Statement	","	672:39:28189:28189	5054174	220	True				
ANR	5055244	Statement	"""NumCopies"""	672:41:28191:28201	5054174	221	True				
ANR	5055245	Statement	)	672:52:28202:28202	5054174	222	True				
ANR	5055246	Statement	)	672:53:28203:28203	5054174	223	True				
ANR	5055247	Statement	)	672:54:28204:28204	5054174	224	True				
ANR	5055248	Statement	<	672:56:28206:28206	5054174	225	True				
ANR	5055249	Statement	0	672:58:28208:28208	5054174	226	True				
ANR	5055250	Statement	||	672:60:28210:28211	5054174	227	True				
ANR	5055251	Statement	(	673:8:28221:28221	5054174	228	True				
ANR	5055252	Statement	code	673:9:28222:28225	5054174	229	True				
ANR	5055253	Statement	=	673:14:28227:28227	5054174	230	True				
ANR	5055254	Statement	param_write_name_array	673:16:28229:28250	5054174	231	True				
ANR	5055255	Statement	(	673:38:28251:28251	5054174	232	True				
ANR	5055256	Statement	plist	673:39:28252:28256	5054174	233	True				
ANR	5055257	Statement	","	673:44:28257:28257	5054174	234	True				
ANR	5055258	Statement	"""SeparationColorNames"""	673:46:28259:28280	5054174	235	True				
ANR	5055259	Statement	","	673:68:28281:28281	5054174	236	True				
ANR	5055260	Statement	&	673:70:28283:28283	5054174	237	True				
ANR	5055261	Statement	scna	673:71:28284:28287	5054174	238	True				
ANR	5055262	Statement	)	673:75:28288:28288	5054174	239	True				
ANR	5055263	Statement	)	673:76:28289:28289	5054174	240	True				
ANR	5055264	Statement	<	673:78:28291:28291	5054174	241	True				
ANR	5055265	Statement	0	673:80:28293:28293	5054174	242	True				
ANR	5055266	Statement	||	673:82:28295:28296	5054174	243	True				
ANR	5055267	Statement	(	674:8:28306:28306	5054174	244	True				
ANR	5055268	Statement	code	674:9:28307:28310	5054174	245	True				
ANR	5055269	Statement	=	674:14:28312:28312	5054174	246	True				
ANR	5055270	Statement	param_write_bool	674:16:28314:28329	5054174	247	True				
ANR	5055271	Statement	(	674:32:28330:28330	5054174	248	True				
ANR	5055272	Statement	plist	674:33:28331:28335	5054174	249	True				
ANR	5055273	Statement	","	674:38:28336:28336	5054174	250	True				
ANR	5055274	Statement	"""Separations"""	674:40:28338:28350	5054174	251	True				
ANR	5055275	Statement	","	674:53:28351:28351	5054174	252	True				
ANR	5055276	Statement	&	674:55:28353:28353	5054174	253	True				
ANR	5055277	Statement	seprs	674:56:28354:28358	5054174	254	True				
ANR	5055278	Statement	)	674:61:28359:28359	5054174	255	True				
ANR	5055279	Statement	)	674:62:28360:28360	5054174	256	True				
ANR	5055280	Statement	<	674:64:28362:28362	5054174	257	True				
ANR	5055281	Statement	0	674:66:28364:28364	5054174	258	True				
ANR	5055282	Statement	||	674:68:28366:28367	5054174	259	True				
ANR	5055283	Statement	(	675:8:28377:28377	5054174	260	True				
ANR	5055284	Statement	code	675:9:28378:28381	5054174	261	True				
ANR	5055285	Statement	=	675:14:28383:28383	5054174	262	True				
ANR	5055286	Statement	param_write_bool	675:16:28385:28400	5054174	263	True				
ANR	5055287	Statement	(	675:32:28401:28401	5054174	264	True				
ANR	5055288	Statement	plist	675:33:28402:28406	5054174	265	True				
ANR	5055289	Statement	","	675:38:28407:28407	5054174	266	True				
ANR	5055290	Statement	"""UseCIEColor"""	675:40:28409:28421	5054174	267	True				
ANR	5055291	Statement	","	675:53:28422:28422	5054174	268	True				
ANR	5055292	Statement	&	675:55:28424:28424	5054174	269	True				
ANR	5055293	Statement	dev	675:56:28425:28427	5054174	270	True				
ANR	5055294	Statement	->	675:59:28428:28429	5054174	271	True				
ANR	5055295	Statement	UseCIEColor	675:61:28430:28440	5054174	272	True				
ANR	5055296	Statement	)	675:72:28441:28441	5054174	273	True				
ANR	5055297	Statement	)	675:73:28442:28442	5054174	274	True				
ANR	5055298	Statement	<	675:75:28444:28444	5054174	275	True				
ANR	5055299	Statement	0	675:77:28446:28446	5054174	276	True				
ANR	5055300	Statement	||	675:79:28448:28449	5054174	277	True				
ANR	5055301	Statement	(	679:8:28649:28649	5054174	278	True				
ANR	5055302	Statement	code	679:9:28650:28653	5054174	279	True				
ANR	5055303	Statement	=	679:14:28655:28655	5054174	280	True				
ANR	5055304	Statement	param_write_bool	679:16:28657:28672	5054174	281	True				
ANR	5055305	Statement	(	679:32:28673:28673	5054174	282	True				
ANR	5055306	Statement	plist	679:33:28674:28678	5054174	283	True				
ANR	5055307	Statement	","	679:38:28679:28679	5054174	284	True				
ANR	5055308	Statement	"""DeviceGrayToK"""	679:40:28681:28695	5054174	285	True				
ANR	5055309	Statement	","	679:55:28696:28696	5054174	286	True				
ANR	5055310	Statement	&	679:57:28698:28698	5054174	287	True				
ANR	5055311	Statement	devicegraytok	679:58:28699:28711	5054174	288	True				
ANR	5055312	Statement	)	679:71:28712:28712	5054174	289	True				
ANR	5055313	Statement	)	679:72:28713:28713	5054174	290	True				
ANR	5055314	Statement	<	679:74:28715:28715	5054174	291	True				
ANR	5055315	Statement	0	679:76:28717:28717	5054174	292	True				
ANR	5055316	Statement	||	679:78:28719:28720	5054174	293	True				
ANR	5055317	Statement	(	680:8:28730:28730	5054174	294	True				
ANR	5055318	Statement	code	680:9:28731:28734	5054174	295	True				
ANR	5055319	Statement	=	680:14:28736:28736	5054174	296	True				
ANR	5055320	Statement	param_write_bool	680:16:28738:28753	5054174	297	True				
ANR	5055321	Statement	(	680:32:28754:28754	5054174	298	True				
ANR	5055322	Statement	plist	680:33:28755:28759	5054174	299	True				
ANR	5055323	Statement	","	680:38:28760:28760	5054174	300	True				
ANR	5055324	Statement	"""GrayDetection"""	680:40:28762:28776	5054174	301	True				
ANR	5055325	Statement	","	680:55:28777:28777	5054174	302	True				
ANR	5055326	Statement	&	680:57:28779:28779	5054174	303	True				
ANR	5055327	Statement	graydetection	680:58:28780:28792	5054174	304	True				
ANR	5055328	Statement	)	680:71:28793:28793	5054174	305	True				
ANR	5055329	Statement	)	680:72:28794:28794	5054174	306	True				
ANR	5055330	Statement	<	680:74:28796:28796	5054174	307	True				
ANR	5055331	Statement	0	680:76:28798:28798	5054174	308	True				
ANR	5055332	Statement	||	680:78:28800:28801	5054174	309	True				
ANR	5055333	Statement	(	681:8:28811:28811	5054174	310	True				
ANR	5055334	Statement	code	681:9:28812:28815	5054174	311	True				
ANR	5055335	Statement	=	681:14:28817:28817	5054174	312	True				
ANR	5055336	Statement	param_write_bool	681:16:28819:28834	5054174	313	True				
ANR	5055337	Statement	(	681:32:28835:28835	5054174	314	True				
ANR	5055338	Statement	plist	681:33:28836:28840	5054174	315	True				
ANR	5055339	Statement	","	681:38:28841:28841	5054174	316	True				
ANR	5055340	Statement	"""UseFastColor"""	681:40:28843:28856	5054174	317	True				
ANR	5055341	Statement	","	681:54:28857:28857	5054174	318	True				
ANR	5055342	Statement	&	681:56:28859:28859	5054174	319	True				
ANR	5055343	Statement	usefastcolor	681:57:28860:28871	5054174	320	True				
ANR	5055344	Statement	)	681:69:28872:28872	5054174	321	True				
ANR	5055345	Statement	)	681:70:28873:28873	5054174	322	True				
ANR	5055346	Statement	<	681:72:28875:28875	5054174	323	True				
ANR	5055347	Statement	0	681:74:28877:28877	5054174	324	True				
ANR	5055348	Statement	||	681:76:28879:28880	5054174	325	True				
ANR	5055349	Statement	(	682:8:28890:28890	5054174	326	True				
ANR	5055350	Statement	code	682:9:28891:28894	5054174	327	True				
ANR	5055351	Statement	=	682:14:28896:28896	5054174	328	True				
ANR	5055352	Statement	param_write_bool	682:16:28898:28913	5054174	329	True				
ANR	5055353	Statement	(	682:32:28914:28914	5054174	330	True				
ANR	5055354	Statement	plist	682:33:28915:28919	5054174	331	True				
ANR	5055355	Statement	","	682:38:28920:28920	5054174	332	True				
ANR	5055356	Statement	"""SimulateOverprint"""	682:40:28922:28940	5054174	333	True				
ANR	5055357	Statement	","	682:59:28941:28941	5054174	334	True				
ANR	5055358	Statement	&	682:61:28943:28943	5054174	335	True				
ANR	5055359	Statement	sim_overprint	682:62:28944:28956	5054174	336	True				
ANR	5055360	Statement	)	682:75:28957:28957	5054174	337	True				
ANR	5055361	Statement	)	682:76:28958:28958	5054174	338	True				
ANR	5055362	Statement	<	682:78:28960:28960	5054174	339	True				
ANR	5055363	Statement	0	682:80:28962:28962	5054174	340	True				
ANR	5055364	Statement	||	682:82:28964:28965	5054174	341	True				
ANR	5055365	Statement	(	683:8:28975:28975	5054174	342	True				
ANR	5055366	Statement	code	683:9:28976:28979	5054174	343	True				
ANR	5055367	Statement	=	683:14:28981:28981	5054174	344	True				
ANR	5055368	Statement	param_write_bool	683:16:28983:28998	5054174	345	True				
ANR	5055369	Statement	(	683:32:28999:28999	5054174	346	True				
ANR	5055370	Statement	plist	683:33:29000:29004	5054174	347	True				
ANR	5055371	Statement	","	683:38:29005:29005	5054174	348	True				
ANR	5055372	Statement	"""PreBandThreshold"""	683:40:29007:29024	5054174	349	True				
ANR	5055373	Statement	","	683:58:29025:29025	5054174	350	True				
ANR	5055374	Statement	&	683:60:29027:29027	5054174	351	True				
ANR	5055375	Statement	prebandthreshold	683:61:29028:29043	5054174	352	True				
ANR	5055376	Statement	)	683:77:29044:29044	5054174	353	True				
ANR	5055377	Statement	)	683:78:29045:29045	5054174	354	True				
ANR	5055378	Statement	<	683:80:29047:29047	5054174	355	True				
ANR	5055379	Statement	0	683:82:29049:29049	5054174	356	True				
ANR	5055380	Statement	||	683:84:29051:29052	5054174	357	True				
ANR	5055381	Statement	(	684:8:29062:29062	5054174	358	True				
ANR	5055382	Statement	code	684:9:29063:29066	5054174	359	True				
ANR	5055383	Statement	=	684:14:29068:29068	5054174	360	True				
ANR	5055384	Statement	param_write_string	684:16:29070:29087	5054174	361	True				
ANR	5055385	Statement	(	684:34:29088:29088	5054174	362	True				
ANR	5055386	Statement	plist	684:35:29089:29093	5054174	363	True				
ANR	5055387	Statement	","	684:40:29094:29094	5054174	364	True				
ANR	5055388	Statement	"""OutputICCProfile"""	684:41:29095:29112	5054174	365	True				
ANR	5055389	Statement	","	684:59:29113:29113	5054174	366	True				
ANR	5055390	Statement	&	684:61:29115:29115	5054174	367	True				
ANR	5055391	Statement	(	684:62:29116:29116	5054174	368	True				
ANR	5055392	Statement	profile_array	684:63:29117:29129	5054174	369	True				
ANR	5055393	Statement	[	684:76:29130:29130	5054174	370	True				
ANR	5055394	Statement	0	684:77:29131:29131	5054174	371	True				
ANR	5055395	Statement	]	684:78:29132:29132	5054174	372	True				
ANR	5055396	Statement	)	684:79:29133:29133	5054174	373	True				
ANR	5055397	Statement	)	684:80:29134:29134	5054174	374	True				
ANR	5055398	Statement	)	684:81:29135:29135	5054174	375	True				
ANR	5055399	Statement	<	684:83:29137:29137	5054174	376	True				
ANR	5055400	Statement	0	684:85:29139:29139	5054174	377	True				
ANR	5055401	Statement	||	684:87:29141:29142	5054174	378	True				
ANR	5055402	Statement	(	685:8:29152:29152	5054174	379	True				
ANR	5055403	Statement	code	685:9:29153:29156	5054174	380	True				
ANR	5055404	Statement	=	685:14:29158:29158	5054174	381	True				
ANR	5055405	Statement	param_write_string	685:16:29160:29177	5054174	382	True				
ANR	5055406	Statement	(	685:34:29178:29178	5054174	383	True				
ANR	5055407	Statement	plist	685:35:29179:29183	5054174	384	True				
ANR	5055408	Statement	","	685:40:29184:29184	5054174	385	True				
ANR	5055409	Statement	"""GraphicICCProfile"""	685:41:29185:29203	5054174	386	True				
ANR	5055410	Statement	","	685:60:29204:29204	5054174	387	True				
ANR	5055411	Statement	&	685:62:29206:29206	5054174	388	True				
ANR	5055412	Statement	(	685:63:29207:29207	5054174	389	True				
ANR	5055413	Statement	profile_array	685:64:29208:29220	5054174	390	True				
ANR	5055414	Statement	[	685:77:29221:29221	5054174	391	True				
ANR	5055415	Statement	1	685:78:29222:29222	5054174	392	True				
ANR	5055416	Statement	]	685:79:29223:29223	5054174	393	True				
ANR	5055417	Statement	)	685:80:29224:29224	5054174	394	True				
ANR	5055418	Statement	)	685:81:29225:29225	5054174	395	True				
ANR	5055419	Statement	)	685:82:29226:29226	5054174	396	True				
ANR	5055420	Statement	<	685:84:29228:29228	5054174	397	True				
ANR	5055421	Statement	0	685:86:29230:29230	5054174	398	True				
ANR	5055422	Statement	||	685:88:29232:29233	5054174	399	True				
ANR	5055423	Statement	(	686:8:29243:29243	5054174	400	True				
ANR	5055424	Statement	code	686:9:29244:29247	5054174	401	True				
ANR	5055425	Statement	=	686:14:29249:29249	5054174	402	True				
ANR	5055426	Statement	param_write_string	686:16:29251:29268	5054174	403	True				
ANR	5055427	Statement	(	686:34:29269:29269	5054174	404	True				
ANR	5055428	Statement	plist	686:35:29270:29274	5054174	405	True				
ANR	5055429	Statement	","	686:40:29275:29275	5054174	406	True				
ANR	5055430	Statement	"""ImageICCProfile"""	686:41:29276:29292	5054174	407	True				
ANR	5055431	Statement	","	686:58:29293:29293	5054174	408	True				
ANR	5055432	Statement	&	686:60:29295:29295	5054174	409	True				
ANR	5055433	Statement	(	686:61:29296:29296	5054174	410	True				
ANR	5055434	Statement	profile_array	686:62:29297:29309	5054174	411	True				
ANR	5055435	Statement	[	686:75:29310:29310	5054174	412	True				
ANR	5055436	Statement	2	686:76:29311:29311	5054174	413	True				
ANR	5055437	Statement	]	686:77:29312:29312	5054174	414	True				
ANR	5055438	Statement	)	686:78:29313:29313	5054174	415	True				
ANR	5055439	Statement	)	686:79:29314:29314	5054174	416	True				
ANR	5055440	Statement	)	686:80:29315:29315	5054174	417	True				
ANR	5055441	Statement	<	686:82:29317:29317	5054174	418	True				
ANR	5055442	Statement	0	686:84:29319:29319	5054174	419	True				
ANR	5055443	Statement	||	686:86:29321:29322	5054174	420	True				
ANR	5055444	Statement	(	687:8:29332:29332	5054174	421	True				
ANR	5055445	Statement	code	687:9:29333:29336	5054174	422	True				
ANR	5055446	Statement	=	687:14:29338:29338	5054174	423	True				
ANR	5055447	Statement	param_write_string	687:16:29340:29357	5054174	424	True				
ANR	5055448	Statement	(	687:34:29358:29358	5054174	425	True				
ANR	5055449	Statement	plist	687:35:29359:29363	5054174	426	True				
ANR	5055450	Statement	","	687:40:29364:29364	5054174	427	True				
ANR	5055451	Statement	"""TextICCProfile"""	687:41:29365:29380	5054174	428	True				
ANR	5055452	Statement	","	687:57:29381:29381	5054174	429	True				
ANR	5055453	Statement	&	687:59:29383:29383	5054174	430	True				
ANR	5055454	Statement	(	687:60:29384:29384	5054174	431	True				
ANR	5055455	Statement	profile_array	687:61:29385:29397	5054174	432	True				
ANR	5055456	Statement	[	687:74:29398:29398	5054174	433	True				
ANR	5055457	Statement	3	687:75:29399:29399	5054174	434	True				
ANR	5055458	Statement	]	687:76:29400:29400	5054174	435	True				
ANR	5055459	Statement	)	687:77:29401:29401	5054174	436	True				
ANR	5055460	Statement	)	687:78:29402:29402	5054174	437	True				
ANR	5055461	Statement	)	687:79:29403:29403	5054174	438	True				
ANR	5055462	Statement	<	687:81:29405:29405	5054174	439	True				
ANR	5055463	Statement	0	687:83:29407:29407	5054174	440	True				
ANR	5055464	Statement	||	687:85:29409:29410	5054174	441	True				
ANR	5055465	Statement	(	688:8:29420:29420	5054174	442	True				
ANR	5055466	Statement	code	688:9:29421:29424	5054174	443	True				
ANR	5055467	Statement	=	688:14:29426:29426	5054174	444	True				
ANR	5055468	Statement	param_write_string	688:16:29428:29445	5054174	445	True				
ANR	5055469	Statement	(	688:34:29446:29446	5054174	446	True				
ANR	5055470	Statement	plist	688:35:29447:29451	5054174	447	True				
ANR	5055471	Statement	","	688:40:29452:29452	5054174	448	True				
ANR	5055472	Statement	"""ProofProfile"""	688:41:29453:29466	5054174	449	True				
ANR	5055473	Statement	","	688:55:29467:29467	5054174	450	True				
ANR	5055474	Statement	&	688:57:29469:29469	5054174	451	True				
ANR	5055475	Statement	(	688:58:29470:29470	5054174	452	True				
ANR	5055476	Statement	proof_profile	688:59:29471:29483	5054174	453	True				
ANR	5055477	Statement	)	688:72:29484:29484	5054174	454	True				
ANR	5055478	Statement	)	688:73:29485:29485	5054174	455	True				
ANR	5055479	Statement	)	688:74:29486:29486	5054174	456	True				
ANR	5055480	Statement	<	688:76:29488:29488	5054174	457	True				
ANR	5055481	Statement	0	688:78:29490:29490	5054174	458	True				
ANR	5055482	Statement	||	688:80:29492:29493	5054174	459	True				
ANR	5055483	Statement	(	689:8:29503:29503	5054174	460	True				
ANR	5055484	Statement	code	689:9:29504:29507	5054174	461	True				
ANR	5055485	Statement	=	689:14:29509:29509	5054174	462	True				
ANR	5055486	Statement	param_write_string	689:16:29511:29528	5054174	463	True				
ANR	5055487	Statement	(	689:34:29529:29529	5054174	464	True				
ANR	5055488	Statement	plist	689:35:29530:29534	5054174	465	True				
ANR	5055489	Statement	","	689:40:29535:29535	5054174	466	True				
ANR	5055490	Statement	"""PostRenderProfile"""	689:42:29537:29555	5054174	467	True				
ANR	5055491	Statement	","	689:61:29556:29556	5054174	468	True				
ANR	5055492	Statement	&	689:63:29558:29558	5054174	469	True				
ANR	5055493	Statement	(	689:64:29559:29559	5054174	470	True				
ANR	5055494	Statement	postren_profile	689:65:29560:29574	5054174	471	True				
ANR	5055495	Statement	)	689:80:29575:29575	5054174	472	True				
ANR	5055496	Statement	)	689:81:29576:29576	5054174	473	True				
ANR	5055497	Statement	)	689:82:29577:29577	5054174	474	True				
ANR	5055498	Statement	<	689:84:29579:29579	5054174	475	True				
ANR	5055499	Statement	0	689:86:29581:29581	5054174	476	True				
ANR	5055500	Statement	||	689:88:29583:29584	5054174	477	True				
ANR	5055501	Statement	(	690:8:29594:29594	5054174	478	True				
ANR	5055502	Statement	code	690:9:29595:29598	5054174	479	True				
ANR	5055503	Statement	=	690:14:29600:29600	5054174	480	True				
ANR	5055504	Statement	param_write_string	690:16:29602:29619	5054174	481	True				
ANR	5055505	Statement	(	690:34:29620:29620	5054174	482	True				
ANR	5055506	Statement	plist	690:35:29621:29625	5054174	483	True				
ANR	5055507	Statement	","	690:40:29626:29626	5054174	484	True				
ANR	5055508	Statement	"""BlendColorProfile"""	690:42:29628:29646	5054174	485	True				
ANR	5055509	Statement	","	690:61:29647:29647	5054174	486	True				
ANR	5055510	Statement	&	690:63:29649:29649	5054174	487	True				
ANR	5055511	Statement	(	690:64:29650:29650	5054174	488	True				
ANR	5055512	Statement	blend_profile	690:65:29651:29663	5054174	489	True				
ANR	5055513	Statement	)	690:78:29664:29664	5054174	490	True				
ANR	5055514	Statement	)	690:79:29665:29665	5054174	491	True				
ANR	5055515	Statement	)	690:80:29666:29666	5054174	492	True				
ANR	5055516	Statement	<	690:82:29668:29668	5054174	493	True				
ANR	5055517	Statement	0	690:84:29670:29670	5054174	494	True				
ANR	5055518	Statement	||	690:86:29672:29673	5054174	495	True				
ANR	5055519	Statement	(	691:8:29683:29683	5054174	496	True				
ANR	5055520	Statement	code	691:9:29684:29687	5054174	497	True				
ANR	5055521	Statement	=	691:14:29689:29689	5054174	498	True				
ANR	5055522	Statement	param_write_string	691:16:29691:29708	5054174	499	True				
ANR	5055523	Statement	(	691:34:29709:29709	5054174	500	True				
ANR	5055524	Statement	plist	691:35:29710:29714	5054174	501	True				
ANR	5055525	Statement	","	691:40:29715:29715	5054174	502	True				
ANR	5055526	Statement	"""DeviceLinkProfile"""	691:41:29716:29734	5054174	503	True				
ANR	5055527	Statement	","	691:60:29735:29735	5054174	504	True				
ANR	5055528	Statement	&	691:62:29737:29737	5054174	505	True				
ANR	5055529	Statement	(	691:63:29738:29738	5054174	506	True				
ANR	5055530	Statement	link_profile	691:64:29739:29750	5054174	507	True				
ANR	5055531	Statement	)	691:76:29751:29751	5054174	508	True				
ANR	5055532	Statement	)	691:77:29752:29752	5054174	509	True				
ANR	5055533	Statement	)	691:78:29753:29753	5054174	510	True				
ANR	5055534	Statement	<	691:80:29755:29755	5054174	511	True				
ANR	5055535	Statement	0	691:82:29757:29757	5054174	512	True				
ANR	5055536	Statement	||	691:84:29759:29760	5054174	513	True				
ANR	5055537	Statement	(	692:8:29770:29770	5054174	514	True				
ANR	5055538	Statement	code	692:9:29771:29774	5054174	515	True				
ANR	5055539	Statement	=	692:14:29776:29776	5054174	516	True				
ANR	5055540	Statement	param_write_string	692:16:29778:29795	5054174	517	True				
ANR	5055541	Statement	(	692:34:29796:29796	5054174	518	True				
ANR	5055542	Statement	plist	692:35:29797:29801	5054174	519	True				
ANR	5055543	Statement	","	692:40:29802:29802	5054174	520	True				
ANR	5055544	Statement	"""ICCOutputColors"""	692:41:29803:29819	5054174	521	True				
ANR	5055545	Statement	","	692:58:29820:29820	5054174	522	True				
ANR	5055546	Statement	&	692:60:29822:29822	5054174	523	True				
ANR	5055547	Statement	(	692:61:29823:29823	5054174	524	True				
ANR	5055548	Statement	icc_colorants	692:62:29824:29836	5054174	525	True				
ANR	5055549	Statement	)	692:75:29837:29837	5054174	526	True				
ANR	5055550	Statement	)	692:76:29838:29838	5054174	527	True				
ANR	5055551	Statement	)	692:77:29839:29839	5054174	528	True				
ANR	5055552	Statement	<	692:79:29841:29841	5054174	529	True				
ANR	5055553	Statement	0	692:81:29843:29843	5054174	530	True				
ANR	5055554	Statement	||	692:83:29845:29846	5054174	531	True				
ANR	5055555	Statement	(	693:8:29856:29856	5054174	532	True				
ANR	5055556	Statement	code	693:9:29857:29860	5054174	533	True				
ANR	5055557	Statement	=	693:14:29862:29862	5054174	534	True				
ANR	5055558	Statement	param_write_int	693:16:29864:29878	5054174	535	True				
ANR	5055559	Statement	(	693:31:29879:29879	5054174	536	True				
ANR	5055560	Statement	plist	693:32:29880:29884	5054174	537	True				
ANR	5055561	Statement	","	693:37:29885:29885	5054174	538	True				
ANR	5055562	Statement	"""RenderIntent"""	693:39:29887:29900	5054174	539	True				
ANR	5055563	Statement	","	693:53:29901:29901	5054174	540	True				
ANR	5055564	Statement	(	693:55:29903:29903	5054174	541	True				
ANR	5055565	Statement	const	693:56:29904:29908	5054174	542	True				
ANR	5055566	Statement	int	693:62:29910:29912	5054174	543	True				
ANR	5055567	Statement	*	693:66:29914:29914	5054174	544	True				
ANR	5055568	Statement	)	693:67:29915:29915	5054174	545	True				
ANR	5055569	Statement	(	693:68:29916:29916	5054174	546	True				
ANR	5055570	Statement	&	693:69:29917:29917	5054174	547	True				
ANR	5055571	Statement	(	693:70:29918:29918	5054174	548	True				
ANR	5055572	Statement	profile_intents	693:71:29919:29933	5054174	549	True				
ANR	5055573	Statement	[	693:86:29934:29934	5054174	550	True				
ANR	5055574	Statement	0	693:87:29935:29935	5054174	551	True				
ANR	5055575	Statement	]	693:88:29936:29936	5054174	552	True				
ANR	5055576	Statement	)	693:89:29937:29937	5054174	553	True				
ANR	5055577	Statement	)	693:90:29938:29938	5054174	554	True				
ANR	5055578	Statement	)	693:91:29939:29939	5054174	555	True				
ANR	5055579	Statement	)	693:92:29940:29940	5054174	556	True				
ANR	5055580	Statement	<	693:94:29942:29942	5054174	557	True				
ANR	5055581	Statement	0	693:96:29944:29944	5054174	558	True				
ANR	5055582	Statement	||	693:98:29946:29947	5054174	559	True				
ANR	5055583	Statement	(	694:8:29957:29957	5054174	560	True				
ANR	5055584	Statement	code	694:9:29958:29961	5054174	561	True				
ANR	5055585	Statement	=	694:14:29963:29963	5054174	562	True				
ANR	5055586	Statement	param_write_int	694:16:29965:29979	5054174	563	True				
ANR	5055587	Statement	(	694:31:29980:29980	5054174	564	True				
ANR	5055588	Statement	plist	694:32:29981:29985	5054174	565	True				
ANR	5055589	Statement	","	694:37:29986:29986	5054174	566	True				
ANR	5055590	Statement	"""ColorAccuracy"""	694:39:29988:30002	5054174	567	True				
ANR	5055591	Statement	","	694:54:30003:30003	5054174	568	True				
ANR	5055592	Statement	(	694:56:30005:30005	5054174	569	True				
ANR	5055593	Statement	const	694:57:30006:30010	5054174	570	True				
ANR	5055594	Statement	int	694:63:30012:30014	5054174	571	True				
ANR	5055595	Statement	*	694:67:30016:30016	5054174	572	True				
ANR	5055596	Statement	)	694:68:30017:30017	5054174	573	True				
ANR	5055597	Statement	(	694:69:30018:30018	5054174	574	True				
ANR	5055598	Statement	&	694:70:30019:30019	5054174	575	True				
ANR	5055599	Statement	(	694:71:30020:30020	5054174	576	True				
ANR	5055600	Statement	color_accuracy	694:72:30021:30034	5054174	577	True				
ANR	5055601	Statement	)	694:86:30035:30035	5054174	578	True				
ANR	5055602	Statement	)	694:87:30036:30036	5054174	579	True				
ANR	5055603	Statement	)	694:88:30037:30037	5054174	580	True				
ANR	5055604	Statement	)	694:89:30038:30038	5054174	581	True				
ANR	5055605	Statement	<	694:91:30040:30040	5054174	582	True				
ANR	5055606	Statement	0	694:93:30042:30042	5054174	583	True				
ANR	5055607	Statement	||	694:95:30044:30045	5054174	584	True				
ANR	5055608	Statement	(	695:8:30055:30055	5054174	585	True				
ANR	5055609	Statement	code	695:9:30056:30059	5054174	586	True				
ANR	5055610	Statement	=	695:14:30061:30061	5054174	587	True				
ANR	5055611	Statement	param_write_int	695:16:30063:30077	5054174	588	True				
ANR	5055612	Statement	(	695:31:30078:30078	5054174	589	True				
ANR	5055613	Statement	plist	695:32:30079:30083	5054174	590	True				
ANR	5055614	Statement	","	695:37:30084:30084	5054174	591	True				
ANR	5055615	Statement	"""GraphicIntent"""	695:38:30085:30099	5054174	592	True				
ANR	5055616	Statement	","	695:53:30100:30100	5054174	593	True				
ANR	5055617	Statement	(	695:55:30102:30102	5054174	594	True				
ANR	5055618	Statement	const	695:56:30103:30107	5054174	595	True				
ANR	5055619	Statement	int	695:62:30109:30111	5054174	596	True				
ANR	5055620	Statement	*	695:66:30113:30113	5054174	597	True				
ANR	5055621	Statement	)	695:67:30114:30114	5054174	598	True				
ANR	5055622	Statement	&	695:69:30116:30116	5054174	599	True				
ANR	5055623	Statement	(	695:70:30117:30117	5054174	600	True				
ANR	5055624	Statement	profile_intents	695:71:30118:30132	5054174	601	True				
ANR	5055625	Statement	[	695:86:30133:30133	5054174	602	True				
ANR	5055626	Statement	1	695:87:30134:30134	5054174	603	True				
ANR	5055627	Statement	]	695:88:30135:30135	5054174	604	True				
ANR	5055628	Statement	)	695:89:30136:30136	5054174	605	True				
ANR	5055629	Statement	)	695:90:30137:30137	5054174	606	True				
ANR	5055630	Statement	)	695:91:30138:30138	5054174	607	True				
ANR	5055631	Statement	<	695:93:30140:30140	5054174	608	True				
ANR	5055632	Statement	0	695:95:30142:30142	5054174	609	True				
ANR	5055633	Statement	||	695:97:30144:30145	5054174	610	True				
ANR	5055634	Statement	(	696:8:30155:30155	5054174	611	True				
ANR	5055635	Statement	code	696:9:30156:30159	5054174	612	True				
ANR	5055636	Statement	=	696:14:30161:30161	5054174	613	True				
ANR	5055637	Statement	param_write_int	696:16:30163:30177	5054174	614	True				
ANR	5055638	Statement	(	696:31:30178:30178	5054174	615	True				
ANR	5055639	Statement	plist	696:32:30179:30183	5054174	616	True				
ANR	5055640	Statement	","	696:37:30184:30184	5054174	617	True				
ANR	5055641	Statement	"""ImageIntent"""	696:38:30185:30197	5054174	618	True				
ANR	5055642	Statement	","	696:51:30198:30198	5054174	619	True				
ANR	5055643	Statement	(	696:53:30200:30200	5054174	620	True				
ANR	5055644	Statement	const	696:54:30201:30205	5054174	621	True				
ANR	5055645	Statement	int	696:60:30207:30209	5054174	622	True				
ANR	5055646	Statement	*	696:64:30211:30211	5054174	623	True				
ANR	5055647	Statement	)	696:65:30212:30212	5054174	624	True				
ANR	5055648	Statement	&	696:67:30214:30214	5054174	625	True				
ANR	5055649	Statement	(	696:68:30215:30215	5054174	626	True				
ANR	5055650	Statement	profile_intents	696:69:30216:30230	5054174	627	True				
ANR	5055651	Statement	[	696:84:30231:30231	5054174	628	True				
ANR	5055652	Statement	2	696:85:30232:30232	5054174	629	True				
ANR	5055653	Statement	]	696:86:30233:30233	5054174	630	True				
ANR	5055654	Statement	)	696:87:30234:30234	5054174	631	True				
ANR	5055655	Statement	)	696:88:30235:30235	5054174	632	True				
ANR	5055656	Statement	)	696:89:30236:30236	5054174	633	True				
ANR	5055657	Statement	<	696:91:30238:30238	5054174	634	True				
ANR	5055658	Statement	0	696:93:30240:30240	5054174	635	True				
ANR	5055659	Statement	||	696:95:30242:30243	5054174	636	True				
ANR	5055660	Statement	(	697:8:30253:30253	5054174	637	True				
ANR	5055661	Statement	code	697:9:30254:30257	5054174	638	True				
ANR	5055662	Statement	=	697:14:30259:30259	5054174	639	True				
ANR	5055663	Statement	param_write_int	697:16:30261:30275	5054174	640	True				
ANR	5055664	Statement	(	697:31:30276:30276	5054174	641	True				
ANR	5055665	Statement	plist	697:32:30277:30281	5054174	642	True				
ANR	5055666	Statement	","	697:37:30282:30282	5054174	643	True				
ANR	5055667	Statement	"""TextIntent"""	697:38:30283:30294	5054174	644	True				
ANR	5055668	Statement	","	697:50:30295:30295	5054174	645	True				
ANR	5055669	Statement	(	697:52:30297:30297	5054174	646	True				
ANR	5055670	Statement	const	697:53:30298:30302	5054174	647	True				
ANR	5055671	Statement	int	697:59:30304:30306	5054174	648	True				
ANR	5055672	Statement	*	697:63:30308:30308	5054174	649	True				
ANR	5055673	Statement	)	697:64:30309:30309	5054174	650	True				
ANR	5055674	Statement	&	697:66:30311:30311	5054174	651	True				
ANR	5055675	Statement	(	697:67:30312:30312	5054174	652	True				
ANR	5055676	Statement	profile_intents	697:68:30313:30327	5054174	653	True				
ANR	5055677	Statement	[	697:83:30328:30328	5054174	654	True				
ANR	5055678	Statement	3	697:84:30329:30329	5054174	655	True				
ANR	5055679	Statement	]	697:85:30330:30330	5054174	656	True				
ANR	5055680	Statement	)	697:86:30331:30331	5054174	657	True				
ANR	5055681	Statement	)	697:87:30332:30332	5054174	658	True				
ANR	5055682	Statement	)	697:88:30333:30333	5054174	659	True				
ANR	5055683	Statement	<	697:90:30335:30335	5054174	660	True				
ANR	5055684	Statement	0	697:92:30337:30337	5054174	661	True				
ANR	5055685	Statement	||	697:94:30339:30340	5054174	662	True				
ANR	5055686	Statement	(	698:8:30350:30350	5054174	663	True				
ANR	5055687	Statement	code	698:9:30351:30354	5054174	664	True				
ANR	5055688	Statement	=	698:14:30356:30356	5054174	665	True				
ANR	5055689	Statement	param_write_int	698:16:30358:30372	5054174	666	True				
ANR	5055690	Statement	(	698:31:30373:30373	5054174	667	True				
ANR	5055691	Statement	plist	698:32:30374:30378	5054174	668	True				
ANR	5055692	Statement	","	698:37:30379:30379	5054174	669	True				
ANR	5055693	Statement	"""BlackPtComp"""	698:38:30380:30392	5054174	670	True				
ANR	5055694	Statement	","	698:51:30393:30393	5054174	671	True				
ANR	5055695	Statement	(	698:53:30395:30395	5054174	672	True				
ANR	5055696	Statement	const	698:54:30396:30400	5054174	673	True				
ANR	5055697	Statement	int	698:60:30402:30404	5054174	674	True				
ANR	5055698	Statement	*	698:64:30406:30406	5054174	675	True				
ANR	5055699	Statement	)	698:65:30407:30407	5054174	676	True				
ANR	5055700	Statement	(	698:67:30409:30409	5054174	677	True				
ANR	5055701	Statement	&	698:68:30410:30410	5054174	678	True				
ANR	5055702	Statement	(	698:69:30411:30411	5054174	679	True				
ANR	5055703	Statement	blackptcomps	698:70:30412:30423	5054174	680	True				
ANR	5055704	Statement	[	698:82:30424:30424	5054174	681	True				
ANR	5055705	Statement	0	698:83:30425:30425	5054174	682	True				
ANR	5055706	Statement	]	698:84:30426:30426	5054174	683	True				
ANR	5055707	Statement	)	698:85:30427:30427	5054174	684	True				
ANR	5055708	Statement	)	698:86:30428:30428	5054174	685	True				
ANR	5055709	Statement	)	698:87:30429:30429	5054174	686	True				
ANR	5055710	Statement	)	698:88:30430:30430	5054174	687	True				
ANR	5055711	Statement	<	698:90:30432:30432	5054174	688	True				
ANR	5055712	Statement	0	698:92:30434:30434	5054174	689	True				
ANR	5055713	Statement	||	698:94:30436:30437	5054174	690	True				
ANR	5055714	Statement	(	699:8:30447:30447	5054174	691	True				
ANR	5055715	Statement	code	699:9:30448:30451	5054174	692	True				
ANR	5055716	Statement	=	699:14:30453:30453	5054174	693	True				
ANR	5055717	Statement	param_write_int	699:16:30455:30469	5054174	694	True				
ANR	5055718	Statement	(	699:31:30470:30470	5054174	695	True				
ANR	5055719	Statement	plist	699:32:30471:30475	5054174	696	True				
ANR	5055720	Statement	","	699:37:30476:30476	5054174	697	True				
ANR	5055721	Statement	"""GraphicBlackPt"""	699:38:30477:30492	5054174	698	True				
ANR	5055722	Statement	","	699:54:30493:30493	5054174	699	True				
ANR	5055723	Statement	(	699:56:30495:30495	5054174	700	True				
ANR	5055724	Statement	const	699:57:30496:30500	5054174	701	True				
ANR	5055725	Statement	int	699:63:30502:30504	5054174	702	True				
ANR	5055726	Statement	*	699:67:30506:30506	5054174	703	True				
ANR	5055727	Statement	)	699:68:30507:30507	5054174	704	True				
ANR	5055728	Statement	&	699:70:30509:30509	5054174	705	True				
ANR	5055729	Statement	(	699:71:30510:30510	5054174	706	True				
ANR	5055730	Statement	blackptcomps	699:72:30511:30522	5054174	707	True				
ANR	5055731	Statement	[	699:84:30523:30523	5054174	708	True				
ANR	5055732	Statement	1	699:85:30524:30524	5054174	709	True				
ANR	5055733	Statement	]	699:86:30525:30525	5054174	710	True				
ANR	5055734	Statement	)	699:87:30526:30526	5054174	711	True				
ANR	5055735	Statement	)	699:88:30527:30527	5054174	712	True				
ANR	5055736	Statement	)	699:89:30528:30528	5054174	713	True				
ANR	5055737	Statement	<	699:91:30530:30530	5054174	714	True				
ANR	5055738	Statement	0	699:93:30532:30532	5054174	715	True				
ANR	5055739	Statement	||	699:95:30534:30535	5054174	716	True				
ANR	5055740	Statement	(	700:8:30545:30545	5054174	717	True				
ANR	5055741	Statement	code	700:9:30546:30549	5054174	718	True				
ANR	5055742	Statement	=	700:14:30551:30551	5054174	719	True				
ANR	5055743	Statement	param_write_int	700:16:30553:30567	5054174	720	True				
ANR	5055744	Statement	(	700:31:30568:30568	5054174	721	True				
ANR	5055745	Statement	plist	700:32:30569:30573	5054174	722	True				
ANR	5055746	Statement	","	700:37:30574:30574	5054174	723	True				
ANR	5055747	Statement	"""ImageBlackPt"""	700:38:30575:30588	5054174	724	True				
ANR	5055748	Statement	","	700:52:30589:30589	5054174	725	True				
ANR	5055749	Statement	(	700:54:30591:30591	5054174	726	True				
ANR	5055750	Statement	const	700:55:30592:30596	5054174	727	True				
ANR	5055751	Statement	int	700:61:30598:30600	5054174	728	True				
ANR	5055752	Statement	*	700:65:30602:30602	5054174	729	True				
ANR	5055753	Statement	)	700:66:30603:30603	5054174	730	True				
ANR	5055754	Statement	&	700:68:30605:30605	5054174	731	True				
ANR	5055755	Statement	(	700:69:30606:30606	5054174	732	True				
ANR	5055756	Statement	blackptcomps	700:70:30607:30618	5054174	733	True				
ANR	5055757	Statement	[	700:82:30619:30619	5054174	734	True				
ANR	5055758	Statement	2	700:83:30620:30620	5054174	735	True				
ANR	5055759	Statement	]	700:84:30621:30621	5054174	736	True				
ANR	5055760	Statement	)	700:85:30622:30622	5054174	737	True				
ANR	5055761	Statement	)	700:86:30623:30623	5054174	738	True				
ANR	5055762	Statement	)	700:87:30624:30624	5054174	739	True				
ANR	5055763	Statement	<	700:89:30626:30626	5054174	740	True				
ANR	5055764	Statement	0	700:91:30628:30628	5054174	741	True				
ANR	5055765	Statement	||	700:93:30630:30631	5054174	742	True				
ANR	5055766	Statement	(	701:8:30641:30641	5054174	743	True				
ANR	5055767	Statement	code	701:9:30642:30645	5054174	744	True				
ANR	5055768	Statement	=	701:14:30647:30647	5054174	745	True				
ANR	5055769	Statement	param_write_int	701:16:30649:30663	5054174	746	True				
ANR	5055770	Statement	(	701:31:30664:30664	5054174	747	True				
ANR	5055771	Statement	plist	701:32:30665:30669	5054174	748	True				
ANR	5055772	Statement	","	701:37:30670:30670	5054174	749	True				
ANR	5055773	Statement	"""TextBlackPt"""	701:38:30671:30683	5054174	750	True				
ANR	5055774	Statement	","	701:51:30684:30684	5054174	751	True				
ANR	5055775	Statement	(	701:53:30686:30686	5054174	752	True				
ANR	5055776	Statement	const	701:54:30687:30691	5054174	753	True				
ANR	5055777	Statement	int	701:60:30693:30695	5054174	754	True				
ANR	5055778	Statement	*	701:64:30697:30697	5054174	755	True				
ANR	5055779	Statement	)	701:65:30698:30698	5054174	756	True				
ANR	5055780	Statement	&	701:67:30700:30700	5054174	757	True				
ANR	5055781	Statement	(	701:68:30701:30701	5054174	758	True				
ANR	5055782	Statement	blackptcomps	701:69:30702:30713	5054174	759	True				
ANR	5055783	Statement	[	701:81:30714:30714	5054174	760	True				
ANR	5055784	Statement	3	701:82:30715:30715	5054174	761	True				
ANR	5055785	Statement	]	701:83:30716:30716	5054174	762	True				
ANR	5055786	Statement	)	701:84:30717:30717	5054174	763	True				
ANR	5055787	Statement	)	701:85:30718:30718	5054174	764	True				
ANR	5055788	Statement	)	701:86:30719:30719	5054174	765	True				
ANR	5055789	Statement	<	701:88:30721:30721	5054174	766	True				
ANR	5055790	Statement	0	701:90:30723:30723	5054174	767	True				
ANR	5055791	Statement	||	701:92:30725:30726	5054174	768	True				
ANR	5055792	Statement	(	702:8:30736:30736	5054174	769	True				
ANR	5055793	Statement	code	702:9:30737:30740	5054174	770	True				
ANR	5055794	Statement	=	702:14:30742:30742	5054174	771	True				
ANR	5055795	Statement	param_write_int	702:16:30744:30758	5054174	772	True				
ANR	5055796	Statement	(	702:31:30759:30759	5054174	773	True				
ANR	5055797	Statement	plist	702:32:30760:30764	5054174	774	True				
ANR	5055798	Statement	","	702:37:30765:30765	5054174	775	True				
ANR	5055799	Statement	"""KPreserve"""	702:38:30766:30776	5054174	776	True				
ANR	5055800	Statement	","	702:49:30777:30777	5054174	777	True				
ANR	5055801	Statement	(	702:51:30779:30779	5054174	778	True				
ANR	5055802	Statement	const	702:52:30780:30784	5054174	779	True				
ANR	5055803	Statement	int	702:58:30786:30788	5054174	780	True				
ANR	5055804	Statement	*	702:62:30790:30790	5054174	781	True				
ANR	5055805	Statement	)	702:63:30791:30791	5054174	782	True				
ANR	5055806	Statement	(	702:65:30793:30793	5054174	783	True				
ANR	5055807	Statement	&	702:66:30794:30794	5054174	784	True				
ANR	5055808	Statement	(	702:67:30795:30795	5054174	785	True				
ANR	5055809	Statement	blackpreserve	702:68:30796:30808	5054174	786	True				
ANR	5055810	Statement	[	702:81:30809:30809	5054174	787	True				
ANR	5055811	Statement	0	702:82:30810:30810	5054174	788	True				
ANR	5055812	Statement	]	702:83:30811:30811	5054174	789	True				
ANR	5055813	Statement	)	702:84:30812:30812	5054174	790	True				
ANR	5055814	Statement	)	702:85:30813:30813	5054174	791	True				
ANR	5055815	Statement	)	702:86:30814:30814	5054174	792	True				
ANR	5055816	Statement	)	702:87:30815:30815	5054174	793	True				
ANR	5055817	Statement	<	702:89:30817:30817	5054174	794	True				
ANR	5055818	Statement	0	702:91:30819:30819	5054174	795	True				
ANR	5055819	Statement	||	702:93:30821:30822	5054174	796	True				
ANR	5055820	Statement	(	703:8:30832:30832	5054174	797	True				
ANR	5055821	Statement	code	703:9:30833:30836	5054174	798	True				
ANR	5055822	Statement	=	703:14:30838:30838	5054174	799	True				
ANR	5055823	Statement	param_write_int	703:16:30840:30854	5054174	800	True				
ANR	5055824	Statement	(	703:31:30855:30855	5054174	801	True				
ANR	5055825	Statement	plist	703:32:30856:30860	5054174	802	True				
ANR	5055826	Statement	","	703:37:30861:30861	5054174	803	True				
ANR	5055827	Statement	"""GraphicKPreserve"""	703:38:30862:30879	5054174	804	True				
ANR	5055828	Statement	","	703:56:30880:30880	5054174	805	True				
ANR	5055829	Statement	(	703:58:30882:30882	5054174	806	True				
ANR	5055830	Statement	const	703:59:30883:30887	5054174	807	True				
ANR	5055831	Statement	int	703:65:30889:30891	5054174	808	True				
ANR	5055832	Statement	*	703:69:30893:30893	5054174	809	True				
ANR	5055833	Statement	)	703:70:30894:30894	5054174	810	True				
ANR	5055834	Statement	&	703:72:30896:30896	5054174	811	True				
ANR	5055835	Statement	(	703:73:30897:30897	5054174	812	True				
ANR	5055836	Statement	blackpreserve	703:74:30898:30910	5054174	813	True				
ANR	5055837	Statement	[	703:87:30911:30911	5054174	814	True				
ANR	5055838	Statement	1	703:88:30912:30912	5054174	815	True				
ANR	5055839	Statement	]	703:89:30913:30913	5054174	816	True				
ANR	5055840	Statement	)	703:90:30914:30914	5054174	817	True				
ANR	5055841	Statement	)	703:91:30915:30915	5054174	818	True				
ANR	5055842	Statement	)	703:92:30916:30916	5054174	819	True				
ANR	5055843	Statement	<	703:94:30918:30918	5054174	820	True				
ANR	5055844	Statement	0	703:96:30920:30920	5054174	821	True				
ANR	5055845	Statement	||	703:98:30922:30923	5054174	822	True				
ANR	5055846	Statement	(	704:8:30933:30933	5054174	823	True				
ANR	5055847	Statement	code	704:9:30934:30937	5054174	824	True				
ANR	5055848	Statement	=	704:14:30939:30939	5054174	825	True				
ANR	5055849	Statement	param_write_int	704:16:30941:30955	5054174	826	True				
ANR	5055850	Statement	(	704:31:30956:30956	5054174	827	True				
ANR	5055851	Statement	plist	704:32:30957:30961	5054174	828	True				
ANR	5055852	Statement	","	704:37:30962:30962	5054174	829	True				
ANR	5055853	Statement	"""ImageKPreserve"""	704:38:30963:30978	5054174	830	True				
ANR	5055854	Statement	","	704:54:30979:30979	5054174	831	True				
ANR	5055855	Statement	(	704:56:30981:30981	5054174	832	True				
ANR	5055856	Statement	const	704:57:30982:30986	5054174	833	True				
ANR	5055857	Statement	int	704:63:30988:30990	5054174	834	True				
ANR	5055858	Statement	*	704:67:30992:30992	5054174	835	True				
ANR	5055859	Statement	)	704:68:30993:30993	5054174	836	True				
ANR	5055860	Statement	&	704:70:30995:30995	5054174	837	True				
ANR	5055861	Statement	(	704:71:30996:30996	5054174	838	True				
ANR	5055862	Statement	blackpreserve	704:72:30997:31009	5054174	839	True				
ANR	5055863	Statement	[	704:85:31010:31010	5054174	840	True				
ANR	5055864	Statement	2	704:86:31011:31011	5054174	841	True				
ANR	5055865	Statement	]	704:87:31012:31012	5054174	842	True				
ANR	5055866	Statement	)	704:88:31013:31013	5054174	843	True				
ANR	5055867	Statement	)	704:89:31014:31014	5054174	844	True				
ANR	5055868	Statement	)	704:90:31015:31015	5054174	845	True				
ANR	5055869	Statement	<	704:92:31017:31017	5054174	846	True				
ANR	5055870	Statement	0	704:94:31019:31019	5054174	847	True				
ANR	5055871	Statement	||	704:96:31021:31022	5054174	848	True				
ANR	5055872	Statement	(	705:8:31032:31032	5054174	849	True				
ANR	5055873	Statement	code	705:9:31033:31036	5054174	850	True				
ANR	5055874	Statement	=	705:14:31038:31038	5054174	851	True				
ANR	5055875	Statement	param_write_int	705:16:31040:31054	5054174	852	True				
ANR	5055876	Statement	(	705:31:31055:31055	5054174	853	True				
ANR	5055877	Statement	plist	705:32:31056:31060	5054174	854	True				
ANR	5055878	Statement	","	705:37:31061:31061	5054174	855	True				
ANR	5055879	Statement	"""TextKPreserve"""	705:38:31062:31076	5054174	856	True				
ANR	5055880	Statement	","	705:53:31077:31077	5054174	857	True				
ANR	5055881	Statement	(	705:55:31079:31079	5054174	858	True				
ANR	5055882	Statement	const	705:56:31080:31084	5054174	859	True				
ANR	5055883	Statement	int	705:62:31086:31088	5054174	860	True				
ANR	5055884	Statement	*	705:66:31090:31090	5054174	861	True				
ANR	5055885	Statement	)	705:67:31091:31091	5054174	862	True				
ANR	5055886	Statement	&	705:69:31093:31093	5054174	863	True				
ANR	5055887	Statement	(	705:70:31094:31094	5054174	864	True				
ANR	5055888	Statement	blackpreserve	705:71:31095:31107	5054174	865	True				
ANR	5055889	Statement	[	705:84:31108:31108	5054174	866	True				
ANR	5055890	Statement	3	705:85:31109:31109	5054174	867	True				
ANR	5055891	Statement	]	705:86:31110:31110	5054174	868	True				
ANR	5055892	Statement	)	705:87:31111:31111	5054174	869	True				
ANR	5055893	Statement	)	705:88:31112:31112	5054174	870	True				
ANR	5055894	Statement	)	705:89:31113:31113	5054174	871	True				
ANR	5055895	Statement	<	705:91:31115:31115	5054174	872	True				
ANR	5055896	Statement	0	705:93:31117:31117	5054174	873	True				
ANR	5055897	Statement	||	705:95:31119:31120	5054174	874	True				
ANR	5055898	Statement	(	706:8:31130:31130	5054174	875	True				
ANR	5055899	Statement	code	706:9:31131:31134	5054174	876	True				
ANR	5055900	Statement	=	706:14:31136:31136	5054174	877	True				
ANR	5055901	Statement	param_write_int_array	706:16:31138:31158	5054174	878	True				
ANR	5055902	Statement	(	706:37:31159:31159	5054174	879	True				
ANR	5055903	Statement	plist	706:38:31160:31164	5054174	880	True				
ANR	5055904	Statement	","	706:43:31165:31165	5054174	881	True				
ANR	5055905	Statement	"""HWSize"""	706:45:31167:31174	5054174	882	True				
ANR	5055906	Statement	","	706:53:31175:31175	5054174	883	True				
ANR	5055907	Statement	&	706:55:31177:31177	5054174	884	True				
ANR	5055908	Statement	hwsa	706:56:31178:31181	5054174	885	True				
ANR	5055909	Statement	)	706:60:31182:31182	5054174	886	True				
ANR	5055910	Statement	)	706:61:31183:31183	5054174	887	True				
ANR	5055911	Statement	<	706:63:31185:31185	5054174	888	True				
ANR	5055912	Statement	0	706:65:31187:31187	5054174	889	True				
ANR	5055913	Statement	||	706:67:31189:31190	5054174	890	True				
ANR	5055914	Statement	(	707:8:31200:31200	5054174	891	True				
ANR	5055915	Statement	code	707:9:31201:31204	5054174	892	True				
ANR	5055916	Statement	=	707:14:31206:31206	5054174	893	True				
ANR	5055917	Statement	param_write_float_array	707:16:31208:31230	5054174	894	True				
ANR	5055918	Statement	(	707:39:31231:31231	5054174	895	True				
ANR	5055919	Statement	plist	707:40:31232:31236	5054174	896	True				
ANR	5055920	Statement	","	707:45:31237:31237	5054174	897	True				
ANR	5055921	Statement	""".HWMargins"""	707:47:31239:31250	5054174	898	True				
ANR	5055922	Statement	","	707:59:31251:31251	5054174	899	True				
ANR	5055923	Statement	&	707:61:31253:31253	5054174	900	True				
ANR	5055924	Statement	hwma	707:62:31254:31257	5054174	901	True				
ANR	5055925	Statement	)	707:66:31258:31258	5054174	902	True				
ANR	5055926	Statement	)	707:67:31259:31259	5054174	903	True				
ANR	5055927	Statement	<	707:69:31261:31261	5054174	904	True				
ANR	5055928	Statement	0	707:71:31263:31263	5054174	905	True				
ANR	5055929	Statement	||	707:73:31265:31266	5054174	906	True				
ANR	5055930	Statement	(	708:8:31276:31276	5054174	907	True				
ANR	5055931	Statement	code	708:9:31277:31280	5054174	908	True				
ANR	5055932	Statement	=	708:14:31282:31282	5054174	909	True				
ANR	5055933	Statement	param_write_float_array	708:16:31284:31306	5054174	910	True				
ANR	5055934	Statement	(	708:39:31307:31307	5054174	911	True				
ANR	5055935	Statement	plist	708:40:31308:31312	5054174	912	True				
ANR	5055936	Statement	","	708:45:31313:31313	5054174	913	True				
ANR	5055937	Statement	""".MediaSize"""	708:47:31315:31326	5054174	914	True				
ANR	5055938	Statement	","	708:59:31327:31327	5054174	915	True				
ANR	5055939	Statement	&	708:61:31329:31329	5054174	916	True				
ANR	5055940	Statement	msa	708:62:31330:31332	5054174	917	True				
ANR	5055941	Statement	)	708:65:31333:31333	5054174	918	True				
ANR	5055942	Statement	)	708:66:31334:31334	5054174	919	True				
ANR	5055943	Statement	<	708:68:31336:31336	5054174	920	True				
ANR	5055944	Statement	0	708:70:31338:31338	5054174	921	True				
ANR	5055945	Statement	||	708:72:31340:31341	5054174	922	True				
ANR	5055946	Statement	(	709:8:31351:31351	5054174	923	True				
ANR	5055947	Statement	code	709:9:31352:31355	5054174	924	True				
ANR	5055948	Statement	=	709:14:31357:31357	5054174	925	True				
ANR	5055949	Statement	param_write_string	709:16:31359:31376	5054174	926	True				
ANR	5055950	Statement	(	709:34:31377:31377	5054174	927	True				
ANR	5055951	Statement	plist	709:35:31378:31382	5054174	928	True				
ANR	5055952	Statement	","	709:40:31383:31383	5054174	929	True				
ANR	5055953	Statement	"""Name"""	709:42:31385:31390	5054174	930	True				
ANR	5055954	Statement	","	709:48:31391:31391	5054174	931	True				
ANR	5055955	Statement	&	709:50:31393:31393	5054174	932	True				
ANR	5055956	Statement	dns	709:51:31394:31396	5054174	933	True				
ANR	5055957	Statement	)	709:54:31397:31397	5054174	934	True				
ANR	5055958	Statement	)	709:55:31398:31398	5054174	935	True				
ANR	5055959	Statement	<	709:57:31400:31400	5054174	936	True				
ANR	5055960	Statement	0	709:59:31402:31402	5054174	937	True				
ANR	5055961	Statement	||	709:61:31404:31405	5054174	938	True				
ANR	5055962	Statement	(	710:8:31415:31415	5054174	939	True				
ANR	5055963	Statement	code	710:9:31416:31419	5054174	940	True				
ANR	5055964	Statement	=	710:14:31421:31421	5054174	941	True				
ANR	5055965	Statement	param_write_int	710:16:31423:31437	5054174	942	True				
ANR	5055966	Statement	(	710:31:31438:31438	5054174	943	True				
ANR	5055967	Statement	plist	710:32:31439:31443	5054174	944	True				
ANR	5055968	Statement	","	710:37:31444:31444	5054174	945	True				
ANR	5055969	Statement	"""Colors"""	710:39:31446:31453	5054174	946	True				
ANR	5055970	Statement	","	710:47:31454:31454	5054174	947	True				
ANR	5055971	Statement	&	710:49:31456:31456	5054174	948	True				
ANR	5055972	Statement	colors	710:50:31457:31462	5054174	949	True				
ANR	5055973	Statement	)	710:56:31463:31463	5054174	950	True				
ANR	5055974	Statement	)	710:57:31464:31464	5054174	951	True				
ANR	5055975	Statement	<	710:59:31466:31466	5054174	952	True				
ANR	5055976	Statement	0	710:61:31468:31468	5054174	953	True				
ANR	5055977	Statement	||	710:63:31470:31471	5054174	954	True				
ANR	5055978	Statement	(	711:8:31481:31481	5054174	955	True				
ANR	5055979	Statement	code	711:9:31482:31485	5054174	956	True				
ANR	5055980	Statement	=	711:14:31487:31487	5054174	957	True				
ANR	5055981	Statement	param_write_int	711:16:31489:31503	5054174	958	True				
ANR	5055982	Statement	(	711:31:31504:31504	5054174	959	True				
ANR	5055983	Statement	plist	711:32:31505:31509	5054174	960	True				
ANR	5055984	Statement	","	711:37:31510:31510	5054174	961	True				
ANR	5055985	Statement	"""BitsPerPixel"""	711:39:31512:31525	5054174	962	True				
ANR	5055986	Statement	","	711:53:31526:31526	5054174	963	True				
ANR	5055987	Statement	&	711:55:31528:31528	5054174	964	True				
ANR	5055988	Statement	depth	711:56:31529:31533	5054174	965	True				
ANR	5055989	Statement	)	711:61:31534:31534	5054174	966	True				
ANR	5055990	Statement	)	711:62:31535:31535	5054174	967	True				
ANR	5055991	Statement	<	711:64:31537:31537	5054174	968	True				
ANR	5055992	Statement	0	711:66:31539:31539	5054174	969	True				
ANR	5055993	Statement	||	711:68:31541:31542	5054174	970	True				
ANR	5055994	Statement	(	712:8:31552:31552	5054174	971	True				
ANR	5055995	Statement	code	712:9:31553:31556	5054174	972	True				
ANR	5055996	Statement	=	712:14:31558:31558	5054174	973	True				
ANR	5055997	Statement	param_write_int	712:16:31560:31574	5054174	974	True				
ANR	5055998	Statement	(	712:31:31575:31575	5054174	975	True				
ANR	5055999	Statement	plist	712:32:31576:31580	5054174	976	True				
ANR	5056000	Statement	","	712:37:31581:31581	5054174	977	True				
ANR	5056001	Statement	"""GrayValues"""	712:39:31583:31594	5054174	978	True				
ANR	5056002	Statement	","	712:51:31595:31595	5054174	979	True				
ANR	5056003	Statement	&	712:53:31597:31597	5054174	980	True				
ANR	5056004	Statement	GrayValues	712:54:31598:31607	5054174	981	True				
ANR	5056005	Statement	)	712:64:31608:31608	5054174	982	True				
ANR	5056006	Statement	)	712:65:31609:31609	5054174	983	True				
ANR	5056007	Statement	<	712:67:31611:31611	5054174	984	True				
ANR	5056008	Statement	0	712:69:31613:31613	5054174	985	True				
ANR	5056009	Statement	||	712:71:31615:31616	5054174	986	True				
ANR	5056010	Statement	(	713:8:31626:31626	5054174	987	True				
ANR	5056011	Statement	code	713:9:31627:31630	5054174	988	True				
ANR	5056012	Statement	=	713:14:31632:31632	5054174	989	True				
ANR	5056013	Statement	param_write_long	713:16:31634:31649	5054174	990	True				
ANR	5056014	Statement	(	713:32:31650:31650	5054174	991	True				
ANR	5056015	Statement	plist	713:33:31651:31655	5054174	992	True				
ANR	5056016	Statement	","	713:38:31656:31656	5054174	993	True				
ANR	5056017	Statement	"""PageCount"""	713:40:31658:31668	5054174	994	True				
ANR	5056018	Statement	","	713:51:31669:31669	5054174	995	True				
ANR	5056019	Statement	&	713:53:31671:31671	5054174	996	True				
ANR	5056020	Statement	dev	713:54:31672:31674	5054174	997	True				
ANR	5056021	Statement	->	713:57:31675:31676	5054174	998	True				
ANR	5056022	Statement	PageCount	713:59:31677:31685	5054174	999	True				
ANR	5056023	Statement	)	713:68:31686:31686	5054174	1000	True				
ANR	5056024	Statement	)	713:69:31687:31687	5054174	1001	True				
ANR	5056025	Statement	<	713:71:31689:31689	5054174	1002	True				
ANR	5056026	Statement	0	713:73:31691:31691	5054174	1003	True				
ANR	5056027	Statement	||	713:75:31693:31694	5054174	1004	True				
ANR	5056028	Statement	(	714:8:31704:31704	5054174	1005	True				
ANR	5056029	Statement	code	714:9:31705:31708	5054174	1006	True				
ANR	5056030	Statement	=	714:14:31710:31710	5054174	1007	True				
ANR	5056031	Statement	param_write_bool	714:16:31712:31727	5054174	1008	True				
ANR	5056032	Statement	(	714:32:31728:31728	5054174	1009	True				
ANR	5056033	Statement	plist	714:33:31729:31733	5054174	1010	True				
ANR	5056034	Statement	","	714:38:31734:31734	5054174	1011	True				
ANR	5056035	Statement	""".IgnoreNumCopies"""	714:40:31736:31753	5054174	1012	True				
ANR	5056036	Statement	","	714:58:31754:31754	5054174	1013	True				
ANR	5056037	Statement	&	714:60:31756:31756	5054174	1014	True				
ANR	5056038	Statement	dev	714:61:31757:31759	5054174	1015	True				
ANR	5056039	Statement	->	714:64:31760:31761	5054174	1016	True				
ANR	5056040	Statement	IgnoreNumCopies	714:66:31762:31776	5054174	1017	True				
ANR	5056041	Statement	)	714:81:31777:31777	5054174	1018	True				
ANR	5056042	Statement	)	714:82:31778:31778	5054174	1019	True				
ANR	5056043	Statement	<	714:84:31780:31780	5054174	1020	True				
ANR	5056044	Statement	0	714:86:31782:31782	5054174	1021	True				
ANR	5056045	Statement	||	714:88:31784:31785	5054174	1022	True				
ANR	5056046	Statement	(	715:8:31795:31795	5054174	1023	True				
ANR	5056047	Statement	code	715:9:31796:31799	5054174	1024	True				
ANR	5056048	Statement	=	715:14:31801:31801	5054174	1025	True				
ANR	5056049	Statement	param_write_int	715:16:31803:31817	5054174	1026	True				
ANR	5056050	Statement	(	715:31:31818:31818	5054174	1027	True				
ANR	5056051	Statement	plist	715:32:31819:31823	5054174	1028	True				
ANR	5056052	Statement	","	715:37:31824:31824	5054174	1029	True				
ANR	5056053	Statement	"""TextAlphaBits"""	715:39:31826:31840	5054174	1030	True				
ANR	5056054	Statement	","	715:54:31841:31841	5054174	1031	True				
ANR	5056055	Statement	&	716:32:31875:31875	5054174	1032	True				
ANR	5056056	Statement	dev	716:33:31876:31878	5054174	1033	True				
ANR	5056057	Statement	->	716:36:31879:31880	5054174	1034	True				
ANR	5056058	Statement	color_info	716:38:31881:31890	5054174	1035	True				
ANR	5056059	Statement	.	716:48:31891:31891	5054174	1036	True				
ANR	5056060	Statement	anti_alias	716:49:31892:31901	5054174	1037	True				
ANR	5056061	Statement	.	716:59:31902:31902	5054174	1038	True				
ANR	5056062	Statement	text_bits	716:60:31903:31911	5054174	1039	True				
ANR	5056063	Statement	)	716:69:31912:31912	5054174	1040	True				
ANR	5056064	Statement	)	716:70:31913:31913	5054174	1041	True				
ANR	5056065	Statement	<	716:72:31915:31915	5054174	1042	True				
ANR	5056066	Statement	0	716:74:31917:31917	5054174	1043	True				
ANR	5056067	Statement	||	716:76:31919:31920	5054174	1044	True				
ANR	5056068	Statement	(	717:8:31930:31930	5054174	1045	True				
ANR	5056069	Statement	code	717:9:31931:31934	5054174	1046	True				
ANR	5056070	Statement	=	717:14:31936:31936	5054174	1047	True				
ANR	5056071	Statement	param_write_int	717:16:31938:31952	5054174	1048	True				
ANR	5056072	Statement	(	717:31:31953:31953	5054174	1049	True				
ANR	5056073	Statement	plist	717:32:31954:31958	5054174	1050	True				
ANR	5056074	Statement	","	717:37:31959:31959	5054174	1051	True				
ANR	5056075	Statement	"""GraphicsAlphaBits"""	717:39:31961:31979	5054174	1052	True				
ANR	5056076	Statement	","	717:58:31980:31980	5054174	1053	True				
ANR	5056077	Statement	&	718:32:32014:32014	5054174	1054	True				
ANR	5056078	Statement	dev	718:33:32015:32017	5054174	1055	True				
ANR	5056079	Statement	->	718:36:32018:32019	5054174	1056	True				
ANR	5056080	Statement	color_info	718:38:32020:32029	5054174	1057	True				
ANR	5056081	Statement	.	718:48:32030:32030	5054174	1058	True				
ANR	5056082	Statement	anti_alias	718:49:32031:32040	5054174	1059	True				
ANR	5056083	Statement	.	718:59:32041:32041	5054174	1060	True				
ANR	5056084	Statement	graphics_bits	718:60:32042:32054	5054174	1061	True				
ANR	5056085	Statement	)	718:73:32055:32055	5054174	1062	True				
ANR	5056086	Statement	)	718:74:32056:32056	5054174	1063	True				
ANR	5056087	Statement	<	718:76:32058:32058	5054174	1064	True				
ANR	5056088	Statement	0	718:78:32060:32060	5054174	1065	True				
ANR	5056089	Statement	||	718:80:32062:32063	5054174	1066	True				
ANR	5056090	Statement	(	719:8:32073:32073	5054174	1067	True				
ANR	5056091	Statement	code	719:9:32074:32077	5054174	1068	True				
ANR	5056092	Statement	=	719:14:32079:32079	5054174	1069	True				
ANR	5056093	Statement	param_write_bool	719:16:32081:32096	5054174	1070	True				
ANR	5056094	Statement	(	719:32:32097:32097	5054174	1071	True				
ANR	5056095	Statement	plist	719:33:32098:32102	5054174	1072	True				
ANR	5056096	Statement	","	719:38:32103:32103	5054174	1073	True				
ANR	5056097	Statement	"""AntidropoutDownscaler"""	719:40:32105:32127	5054174	1074	True				
ANR	5056098	Statement	","	719:63:32128:32128	5054174	1075	True				
ANR	5056099	Statement	&	720:32:32162:32162	5054174	1076	True				
ANR	5056100	Statement	dev	720:33:32163:32165	5054174	1077	True				
ANR	5056101	Statement	->	720:36:32166:32167	5054174	1078	True				
ANR	5056102	Statement	color_info	720:38:32168:32177	5054174	1079	True				
ANR	5056103	Statement	.	720:48:32178:32178	5054174	1080	True				
ANR	5056104	Statement	use_antidropout_downscaler	720:49:32179:32204	5054174	1081	True				
ANR	5056105	Statement	)	720:75:32205:32205	5054174	1082	True				
ANR	5056106	Statement	)	720:76:32206:32206	5054174	1083	True				
ANR	5056107	Statement	<	720:78:32208:32208	5054174	1084	True				
ANR	5056108	Statement	0	720:80:32210:32210	5054174	1085	True				
ANR	5056109	Statement	||	720:82:32212:32213	5054174	1086	True				
ANR	5056110	Statement	(	721:8:32223:32223	5054174	1087	True				
ANR	5056111	Statement	code	721:9:32224:32227	5054174	1088	True				
ANR	5056112	Statement	=	721:14:32229:32229	5054174	1089	True				
ANR	5056113	Statement	param_write_bool	721:16:32231:32246	5054174	1090	True				
ANR	5056114	Statement	(	721:32:32247:32247	5054174	1091	True				
ANR	5056115	Statement	plist	721:33:32248:32252	5054174	1092	True				
ANR	5056116	Statement	","	721:38:32253:32253	5054174	1093	True				
ANR	5056117	Statement	""".LockSafetyParams"""	721:40:32255:32273	5054174	1094	True				
ANR	5056118	Statement	","	721:59:32274:32274	5054174	1095	True				
ANR	5056119	Statement	&	721:61:32276:32276	5054174	1096	True				
ANR	5056120	Statement	dev	721:62:32277:32279	5054174	1097	True				
ANR	5056121	Statement	->	721:65:32280:32281	5054174	1098	True				
ANR	5056122	Statement	LockSafetyParams	721:67:32282:32297	5054174	1099	True				
ANR	5056123	Statement	)	721:83:32298:32298	5054174	1100	True				
ANR	5056124	Statement	)	721:84:32299:32299	5054174	1101	True				
ANR	5056125	Statement	<	721:86:32301:32301	5054174	1102	True				
ANR	5056126	Statement	0	721:88:32303:32303	5054174	1103	True				
ANR	5056127	Statement	||	721:90:32305:32306	5054174	1104	True				
ANR	5056128	Statement	(	722:8:32316:32316	5054174	1105	True				
ANR	5056129	Statement	code	722:9:32317:32320	5054174	1106	True				
ANR	5056130	Statement	=	722:14:32322:32322	5054174	1107	True				
ANR	5056131	Statement	param_write_int	722:16:32324:32338	5054174	1108	True				
ANR	5056132	Statement	(	722:31:32339:32339	5054174	1109	True				
ANR	5056133	Statement	plist	722:32:32340:32344	5054174	1110	True				
ANR	5056134	Statement	","	722:37:32345:32345	5054174	1111	True				
ANR	5056135	Statement	"""MaxPatternBitmap"""	722:39:32347:32364	5054174	1112	True				
ANR	5056136	Statement	","	722:57:32365:32365	5054174	1113	True				
ANR	5056137	Statement	&	722:59:32367:32367	5054174	1114	True				
ANR	5056138	Statement	dev	722:60:32368:32370	5054174	1115	True				
ANR	5056139	Statement	->	722:63:32371:32372	5054174	1116	True				
ANR	5056140	Statement	MaxPatternBitmap	722:65:32373:32388	5054174	1117	True				
ANR	5056141	Statement	)	722:81:32389:32389	5054174	1118	True				
ANR	5056142	Statement	)	722:82:32390:32390	5054174	1119	True				
ANR	5056143	Statement	<	722:84:32392:32392	5054174	1120	True				
ANR	5056144	Statement	0	722:86:32394:32394	5054174	1121	True				
ANR	5056145	Statement	||	722:88:32396:32397	5054174	1122	True				
ANR	5056146	Statement	(	723:8:32407:32407	5054174	1123	True				
ANR	5056147	Statement	code	723:9:32408:32411	5054174	1124	True				
ANR	5056148	Statement	=	723:14:32413:32413	5054174	1125	True				
ANR	5056149	Statement	param_write_bool	723:16:32415:32430	5054174	1126	True				
ANR	5056150	Statement	(	723:32:32431:32431	5054174	1127	True				
ANR	5056151	Statement	plist	723:33:32432:32436	5054174	1128	True				
ANR	5056152	Statement	","	723:38:32437:32437	5054174	1129	True				
ANR	5056153	Statement	"""PageUsesTransparency"""	723:40:32439:32460	5054174	1130	True				
ANR	5056154	Statement	","	723:62:32461:32461	5054174	1131	True				
ANR	5056155	Statement	&	723:64:32463:32463	5054174	1132	True				
ANR	5056156	Statement	dev	723:65:32464:32466	5054174	1133	True				
ANR	5056157	Statement	->	723:68:32467:32468	5054174	1134	True				
ANR	5056158	Statement	page_uses_transparency	723:70:32469:32490	5054174	1135	True				
ANR	5056159	Statement	)	723:92:32491:32491	5054174	1136	True				
ANR	5056160	Statement	)	723:93:32492:32492	5054174	1137	True				
ANR	5056161	Statement	<	723:95:32494:32494	5054174	1138	True				
ANR	5056162	Statement	0	723:97:32496:32496	5054174	1139	True				
ANR	5056163	Statement	||	723:99:32498:32499	5054174	1140	True				
ANR	5056164	Statement	(	724:8:32509:32509	5054174	1141	True				
ANR	5056165	Statement	code	724:9:32510:32513	5054174	1142	True				
ANR	5056166	Statement	=	724:14:32515:32515	5054174	1143	True				
ANR	5056167	Statement	param_write_long	724:16:32517:32532	5054174	1144	True				
ANR	5056168	Statement	(	724:32:32533:32533	5054174	1145	True				
ANR	5056169	Statement	plist	724:33:32534:32538	5054174	1146	True				
ANR	5056170	Statement	","	724:38:32539:32539	5054174	1147	True				
ANR	5056171	Statement	"""MaxBitmap"""	724:40:32541:32551	5054174	1148	True				
ANR	5056172	Statement	","	724:51:32552:32552	5054174	1149	True				
ANR	5056173	Statement	&	724:53:32554:32554	5054174	1150	True				
ANR	5056174	Statement	(	724:54:32555:32555	5054174	1151	True				
ANR	5056175	Statement	dev	724:55:32556:32558	5054174	1152	True				
ANR	5056176	Statement	->	724:58:32559:32560	5054174	1153	True				
ANR	5056177	Statement	space_params	724:60:32561:32572	5054174	1154	True				
ANR	5056178	Statement	.	724:72:32573:32573	5054174	1155	True				
ANR	5056179	Statement	MaxBitmap	724:73:32574:32582	5054174	1156	True				
ANR	5056180	Statement	)	724:82:32583:32583	5054174	1157	True				
ANR	5056181	Statement	)	724:83:32584:32584	5054174	1158	True				
ANR	5056182	Statement	)	724:84:32585:32585	5054174	1159	True				
ANR	5056183	Statement	<	724:86:32587:32587	5054174	1160	True				
ANR	5056184	Statement	0	724:88:32589:32589	5054174	1161	True				
ANR	5056185	Statement	||	724:90:32591:32592	5054174	1162	True				
ANR	5056186	Statement	(	725:8:32602:32602	5054174	1163	True				
ANR	5056187	Statement	code	725:9:32603:32606	5054174	1164	True				
ANR	5056188	Statement	=	725:14:32608:32608	5054174	1165	True				
ANR	5056189	Statement	param_write_long	725:16:32610:32625	5054174	1166	True				
ANR	5056190	Statement	(	725:32:32626:32626	5054174	1167	True				
ANR	5056191	Statement	plist	725:33:32627:32631	5054174	1168	True				
ANR	5056192	Statement	","	725:38:32632:32632	5054174	1169	True				
ANR	5056193	Statement	"""BandBufferSpace"""	725:40:32634:32650	5054174	1170	True				
ANR	5056194	Statement	","	725:57:32651:32651	5054174	1171	True				
ANR	5056195	Statement	&	725:59:32653:32653	5054174	1172	True				
ANR	5056196	Statement	dev	725:60:32654:32656	5054174	1173	True				
ANR	5056197	Statement	->	725:63:32657:32658	5054174	1174	True				
ANR	5056198	Statement	space_params	725:65:32659:32670	5054174	1175	True				
ANR	5056199	Statement	.	725:77:32671:32671	5054174	1176	True				
ANR	5056200	Statement	band	725:78:32672:32675	5054174	1177	True				
ANR	5056201	Statement	.	725:82:32676:32676	5054174	1178	True				
ANR	5056202	Statement	BandBufferSpace	725:83:32677:32691	5054174	1179	True				
ANR	5056203	Statement	)	725:98:32692:32692	5054174	1180	True				
ANR	5056204	Statement	)	725:99:32693:32693	5054174	1181	True				
ANR	5056205	Statement	<	725:101:32695:32695	5054174	1182	True				
ANR	5056206	Statement	0	725:103:32697:32697	5054174	1183	True				
ANR	5056207	Statement	||	725:105:32699:32700	5054174	1184	True				
ANR	5056208	Statement	(	726:8:32710:32710	5054174	1185	True				
ANR	5056209	Statement	code	726:9:32711:32714	5054174	1186	True				
ANR	5056210	Statement	=	726:14:32716:32716	5054174	1187	True				
ANR	5056211	Statement	param_write_int	726:16:32718:32732	5054174	1188	True				
ANR	5056212	Statement	(	726:31:32733:32733	5054174	1189	True				
ANR	5056213	Statement	plist	726:32:32734:32738	5054174	1190	True				
ANR	5056214	Statement	","	726:37:32739:32739	5054174	1191	True				
ANR	5056215	Statement	"""BandHeight"""	726:39:32741:32752	5054174	1192	True				
ANR	5056216	Statement	","	726:51:32753:32753	5054174	1193	True				
ANR	5056217	Statement	&	726:53:32755:32755	5054174	1194	True				
ANR	5056218	Statement	dev	726:54:32756:32758	5054174	1195	True				
ANR	5056219	Statement	->	726:57:32759:32760	5054174	1196	True				
ANR	5056220	Statement	space_params	726:59:32761:32772	5054174	1197	True				
ANR	5056221	Statement	.	726:71:32773:32773	5054174	1198	True				
ANR	5056222	Statement	band	726:72:32774:32777	5054174	1199	True				
ANR	5056223	Statement	.	726:76:32778:32778	5054174	1200	True				
ANR	5056224	Statement	BandHeight	726:77:32779:32788	5054174	1201	True				
ANR	5056225	Statement	)	726:87:32789:32789	5054174	1202	True				
ANR	5056226	Statement	)	726:88:32790:32790	5054174	1203	True				
ANR	5056227	Statement	<	726:90:32792:32792	5054174	1204	True				
ANR	5056228	Statement	0	726:92:32794:32794	5054174	1205	True				
ANR	5056229	Statement	||	726:94:32796:32797	5054174	1206	True				
ANR	5056230	Statement	(	727:8:32807:32807	5054174	1207	True				
ANR	5056231	Statement	code	727:9:32808:32811	5054174	1208	True				
ANR	5056232	Statement	=	727:14:32813:32813	5054174	1209	True				
ANR	5056233	Statement	param_write_int	727:16:32815:32829	5054174	1210	True				
ANR	5056234	Statement	(	727:31:32830:32830	5054174	1211	True				
ANR	5056235	Statement	plist	727:32:32831:32835	5054174	1212	True				
ANR	5056236	Statement	","	727:37:32836:32836	5054174	1213	True				
ANR	5056237	Statement	"""BandWidth"""	727:39:32838:32848	5054174	1214	True				
ANR	5056238	Statement	","	727:50:32849:32849	5054174	1215	True				
ANR	5056239	Statement	&	727:52:32851:32851	5054174	1216	True				
ANR	5056240	Statement	dev	727:53:32852:32854	5054174	1217	True				
ANR	5056241	Statement	->	727:56:32855:32856	5054174	1218	True				
ANR	5056242	Statement	space_params	727:58:32857:32868	5054174	1219	True				
ANR	5056243	Statement	.	727:70:32869:32869	5054174	1220	True				
ANR	5056244	Statement	band	727:71:32870:32873	5054174	1221	True				
ANR	5056245	Statement	.	727:75:32874:32874	5054174	1222	True				
ANR	5056246	Statement	BandWidth	727:76:32875:32883	5054174	1223	True				
ANR	5056247	Statement	)	727:85:32884:32884	5054174	1224	True				
ANR	5056248	Statement	)	727:86:32885:32885	5054174	1225	True				
ANR	5056249	Statement	<	727:88:32887:32887	5054174	1226	True				
ANR	5056250	Statement	0	727:90:32889:32889	5054174	1227	True				
ANR	5056251	Statement	||	727:92:32891:32892	5054174	1228	True				
ANR	5056252	Statement	(	728:8:32902:32902	5054174	1229	True				
ANR	5056253	Statement	code	728:9:32903:32906	5054174	1230	True				
ANR	5056254	Statement	=	728:14:32908:32908	5054174	1231	True				
ANR	5056255	Statement	param_write_long	728:16:32910:32925	5054174	1232	True				
ANR	5056256	Statement	(	728:32:32926:32926	5054174	1233	True				
ANR	5056257	Statement	plist	728:33:32927:32931	5054174	1234	True				
ANR	5056258	Statement	","	728:38:32932:32932	5054174	1235	True				
ANR	5056259	Statement	"""BufferSpace"""	728:40:32934:32946	5054174	1236	True				
ANR	5056260	Statement	","	728:53:32947:32947	5054174	1237	True				
ANR	5056261	Statement	&	728:55:32949:32949	5054174	1238	True				
ANR	5056262	Statement	dev	728:56:32950:32952	5054174	1239	True				
ANR	5056263	Statement	->	728:59:32953:32954	5054174	1240	True				
ANR	5056264	Statement	space_params	728:61:32955:32966	5054174	1241	True				
ANR	5056265	Statement	.	728:73:32967:32967	5054174	1242	True				
ANR	5056266	Statement	BufferSpace	728:74:32968:32978	5054174	1243	True				
ANR	5056267	Statement	)	728:85:32979:32979	5054174	1244	True				
ANR	5056268	Statement	)	728:86:32980:32980	5054174	1245	True				
ANR	5056269	Statement	<	728:88:32982:32982	5054174	1246	True				
ANR	5056270	Statement	0	728:90:32984:32984	5054174	1247	True				
ANR	5056271	Statement	||	728:92:32986:32987	5054174	1248	True				
ANR	5056272	Statement	(	729:8:32997:32997	5054174	1249	True				
ANR	5056273	Statement	code	729:9:32998:33001	5054174	1250	True				
ANR	5056274	Statement	=	729:14:33003:33003	5054174	1251	True				
ANR	5056275	Statement	param_write_int	729:16:33005:33019	5054174	1252	True				
ANR	5056276	Statement	(	729:31:33020:33020	5054174	1253	True				
ANR	5056277	Statement	plist	729:32:33021:33025	5054174	1254	True				
ANR	5056278	Statement	","	729:37:33026:33026	5054174	1255	True				
ANR	5056279	Statement	"""InterpolateControl"""	729:39:33028:33047	5054174	1256	True				
ANR	5056280	Statement	","	729:59:33048:33048	5054174	1257	True				
ANR	5056281	Statement	&	729:61:33050:33050	5054174	1258	True				
ANR	5056282	Statement	dev	729:62:33051:33053	5054174	1259	True				
ANR	5056283	Statement	->	729:65:33054:33055	5054174	1260	True				
ANR	5056284	Statement	interpolate_control	729:67:33056:33074	5054174	1261	True				
ANR	5056285	Statement	)	729:86:33075:33075	5054174	1262	True				
ANR	5056286	Statement	)	729:87:33076:33076	5054174	1263	True				
ANR	5056287	Statement	<	729:89:33078:33078	5054174	1264	True				
ANR	5056288	Statement	0	729:91:33080:33080	5054174	1265	True				
ANR	5056289	Statement	)	730:8:33090:33090	5054174	1266	True				
ANR	5056290	ReturnStatement	return code ;	731:8:33100:33111	5054174	1267	True				
ANR	5056291	Identifier	code		5054174	0					
ANR	5056292	IfStatement	if ( dev -> LeadingEdge & LEADINGEDGE_SET_MASK )		5054174	1268					
ANR	5056293	Condition	dev -> LeadingEdge & LEADINGEDGE_SET_MASK	734:8:33183:33221	5054174	0	True				
ANR	5056294	BitAndExpression	dev -> LeadingEdge & LEADINGEDGE_SET_MASK		5054174	0		&			
ANR	5056295	PtrMemberAccess	dev -> LeadingEdge		5054174	0					
ANR	5056296	Identifier	dev		5054174	0					
ANR	5056297	Identifier	LeadingEdge		5054174	1					
ANR	5056298	Identifier	LEADINGEDGE_SET_MASK		5054174	1					
ANR	5056299	CompoundStatement		242:8:12891:12944	5054174	1					
ANR	5056300	IdentifierDeclStatement	int leadingedge = dev -> LeadingEdge & LEADINGEDGE_MASK ;	735:8:33234:33287	5054174	0	True				
ANR	5056301	IdentifierDecl	leadingedge = dev -> LeadingEdge & LEADINGEDGE_MASK		5054174	0					
ANR	5056302	IdentifierDeclType	int		5054174	0					
ANR	5056303	Identifier	leadingedge		5054174	1					
ANR	5056304	AssignmentExpression	leadingedge = dev -> LeadingEdge & LEADINGEDGE_MASK		5054174	2		=			
ANR	5056305	Identifier	leadingedge		5054174	0					
ANR	5056306	BitAndExpression	dev -> LeadingEdge & LEADINGEDGE_MASK		5054174	1		&			
ANR	5056307	PtrMemberAccess	dev -> LeadingEdge		5054174	0					
ANR	5056308	Identifier	dev		5054174	0					
ANR	5056309	Identifier	LeadingEdge		5054174	1					
ANR	5056310	Identifier	LEADINGEDGE_MASK		5054174	1					
ANR	5056311	ExpressionStatement	"code = param_write_int ( plist , ""LeadingEdge"" , & leadingedge )"	736:8:33297:33355	5054174	1	True				
ANR	5056312	AssignmentExpression	"code = param_write_int ( plist , ""LeadingEdge"" , & leadingedge )"		5054174	0		=			
ANR	5056313	Identifier	code		5054174	0					
ANR	5056314	CallExpression	"param_write_int ( plist , ""LeadingEdge"" , & leadingedge )"		5054174	1					
ANR	5056315	Callee	param_write_int		5054174	0					
ANR	5056316	Identifier	param_write_int		5054174	0					
ANR	5056317	ArgumentList	plist		5054174	1					
ANR	5056318	Argument	plist		5054174	0					
ANR	5056319	Identifier	plist		5054174	0					
ANR	5056320	Argument	"""LeadingEdge"""		5054174	1					
ANR	5056321	PrimaryExpression	"""LeadingEdge"""		5054174	0					
ANR	5056322	Argument	& leadingedge		5054174	2					
ANR	5056323	UnaryOperationExpression	& leadingedge		5054174	0					
ANR	5056324	UnaryOperator	&		5054174	0					
ANR	5056325	Identifier	leadingedge		5054174	1					
ANR	5056326	ElseStatement	else		5054174	0					
ANR	5056327	ExpressionStatement	"code = param_write_null ( plist , ""LeadingEdge"" )"	738:8:33376:33421	5054174	0	True				
ANR	5056328	AssignmentExpression	"code = param_write_null ( plist , ""LeadingEdge"" )"		5054174	0		=			
ANR	5056329	Identifier	code		5054174	0					
ANR	5056330	CallExpression	"param_write_null ( plist , ""LeadingEdge"" )"		5054174	1					
ANR	5056331	Callee	param_write_null		5054174	0					
ANR	5056332	Identifier	param_write_null		5054174	0					
ANR	5056333	ArgumentList	plist		5054174	1					
ANR	5056334	Argument	plist		5054174	0					
ANR	5056335	Identifier	plist		5054174	0					
ANR	5056336	Argument	"""LeadingEdge"""		5054174	1					
ANR	5056337	PrimaryExpression	"""LeadingEdge"""		5054174	0					
ANR	5056338	IfStatement	if ( code < 0 )		5054174	1269					
ANR	5056339	Condition	code < 0	739:8:33431:33438	5054174	0	True				
ANR	5056340	RelationalExpression	code < 0		5054174	0		<			
ANR	5056341	Identifier	code		5054174	0					
ANR	5056342	PrimaryExpression	0		5054174	1					
ANR	5056343	ReturnStatement	return code ;	740:8:33449:33460	5054174	1	True				
ANR	5056344	Identifier	code		5054174	0					
ANR	5056345	IfStatement	"if ( ( code = param_write_int ( plist , ""FirstPage"" , & dev -> FirstPage ) ) < 0 )"		5054174	1270					
ANR	5056346	Condition	"( code = param_write_int ( plist , ""FirstPage"" , & dev -> FirstPage ) ) < 0"	742:8:33471:33535	5054174	0	True				
ANR	5056347	RelationalExpression	"( code = param_write_int ( plist , ""FirstPage"" , & dev -> FirstPage ) ) < 0"		5054174	0		<			
ANR	5056348	AssignmentExpression	"code = param_write_int ( plist , ""FirstPage"" , & dev -> FirstPage )"		5054174	0		=			
ANR	5056349	Identifier	code		5054174	0					
ANR	5056350	CallExpression	"param_write_int ( plist , ""FirstPage"" , & dev -> FirstPage )"		5054174	1					
ANR	5056351	Callee	param_write_int		5054174	0					
ANR	5056352	Identifier	param_write_int		5054174	0					
ANR	5056353	ArgumentList	plist		5054174	1					
ANR	5056354	Argument	plist		5054174	0					
ANR	5056355	Identifier	plist		5054174	0					
ANR	5056356	Argument	"""FirstPage"""		5054174	1					
ANR	5056357	PrimaryExpression	"""FirstPage"""		5054174	0					
ANR	5056358	Argument	& dev -> FirstPage		5054174	2					
ANR	5056359	UnaryOperationExpression	& dev -> FirstPage		5054174	0					
ANR	5056360	UnaryOperator	&		5054174	0					
ANR	5056361	PtrMemberAccess	dev -> FirstPage		5054174	1					
ANR	5056362	Identifier	dev		5054174	0					
ANR	5056363	Identifier	FirstPage		5054174	1					
ANR	5056364	PrimaryExpression	0		5054174	1					
ANR	5056365	ReturnStatement	return code ;	743:8:33546:33557	5054174	1	True				
ANR	5056366	Identifier	code		5054174	0					
ANR	5056367	IfStatement	"if ( ( code = param_write_int ( plist , ""LastPage"" , & dev -> LastPage ) ) < 0 )"		5054174	1271					
ANR	5056368	Condition	"( code = param_write_int ( plist , ""LastPage"" , & dev -> LastPage ) ) < 0"	744:8:33567:33629	5054174	0	True				
ANR	5056369	RelationalExpression	"( code = param_write_int ( plist , ""LastPage"" , & dev -> LastPage ) ) < 0"		5054174	0		<			
ANR	5056370	AssignmentExpression	"code = param_write_int ( plist , ""LastPage"" , & dev -> LastPage )"		5054174	0		=			
ANR	5056371	Identifier	code		5054174	0					
ANR	5056372	CallExpression	"param_write_int ( plist , ""LastPage"" , & dev -> LastPage )"		5054174	1					
ANR	5056373	Callee	param_write_int		5054174	0					
ANR	5056374	Identifier	param_write_int		5054174	0					
ANR	5056375	ArgumentList	plist		5054174	1					
ANR	5056376	Argument	plist		5054174	0					
ANR	5056377	Identifier	plist		5054174	0					
ANR	5056378	Argument	"""LastPage"""		5054174	1					
ANR	5056379	PrimaryExpression	"""LastPage"""		5054174	0					
ANR	5056380	Argument	& dev -> LastPage		5054174	2					
ANR	5056381	UnaryOperationExpression	& dev -> LastPage		5054174	0					
ANR	5056382	UnaryOperator	&		5054174	0					
ANR	5056383	PtrMemberAccess	dev -> LastPage		5054174	1					
ANR	5056384	Identifier	dev		5054174	0					
ANR	5056385	Identifier	LastPage		5054174	1					
ANR	5056386	PrimaryExpression	0		5054174	1					
ANR	5056387	ReturnStatement	return code ;	745:8:33640:33651	5054174	1	True				
ANR	5056388	Identifier	code		5054174	0					
ANR	5056389	ExpressionStatement	temp_bool = dev -> DisablePageHandler	747:4:33658:33693	5054174	1272	True				
ANR	5056390	AssignmentExpression	temp_bool = dev -> DisablePageHandler		5054174	0		=			
ANR	5056391	Identifier	temp_bool		5054174	0					
ANR	5056392	PtrMemberAccess	dev -> DisablePageHandler		5054174	1					
ANR	5056393	Identifier	dev		5054174	0					
ANR	5056394	Identifier	DisablePageHandler		5054174	1					
ANR	5056395	IfStatement	"if ( ( code = param_write_bool ( plist , ""DisablePageHandler"" , & temp_bool ) ) < 0 )"		5054174	1273					
ANR	5056396	Condition	"( code = param_write_bool ( plist , ""DisablePageHandler"" , & temp_bool ) ) < 0"	748:8:33703:33772	5054174	0	True				
ANR	5056397	RelationalExpression	"( code = param_write_bool ( plist , ""DisablePageHandler"" , & temp_bool ) ) < 0"		5054174	0		<			
ANR	5056398	AssignmentExpression	"code = param_write_bool ( plist , ""DisablePageHandler"" , & temp_bool )"		5054174	0		=			
ANR	5056399	Identifier	code		5054174	0					
ANR	5056400	CallExpression	"param_write_bool ( plist , ""DisablePageHandler"" , & temp_bool )"		5054174	1					
ANR	5056401	Callee	param_write_bool		5054174	0					
ANR	5056402	Identifier	param_write_bool		5054174	0					
ANR	5056403	ArgumentList	plist		5054174	1					
ANR	5056404	Argument	plist		5054174	0					
ANR	5056405	Identifier	plist		5054174	0					
ANR	5056406	Argument	"""DisablePageHandler"""		5054174	1					
ANR	5056407	PrimaryExpression	"""DisablePageHandler"""		5054174	0					
ANR	5056408	Argument	& temp_bool		5054174	2					
ANR	5056409	UnaryOperationExpression	& temp_bool		5054174	0					
ANR	5056410	UnaryOperator	&		5054174	0					
ANR	5056411	Identifier	temp_bool		5054174	1					
ANR	5056412	PrimaryExpression	0		5054174	1					
ANR	5056413	ReturnStatement	return code ;	749:8:33783:33794	5054174	1	True				
ANR	5056414	Identifier	code		5054174	0					
ANR	5056415	IfStatement	if ( dev -> PageList )		5054174	1274					
ANR	5056416	Condition	dev -> PageList	751:8:33805:33817	5054174	0	True				
ANR	5056417	PtrMemberAccess	dev -> PageList		5054174	0					
ANR	5056418	Identifier	dev		5054174	0					
ANR	5056419	Identifier	PageList		5054174	1					
ANR	5056420	CompoundStatement		259:8:13487:13536	5054174	1					
ANR	5056421	IdentifierDeclStatement	gdev_pagelist * p = ( gdev_pagelist * ) dev -> PageList ;	752:8:33830:33879	5054174	0	True				
ANR	5056422	IdentifierDecl	* p = ( gdev_pagelist * ) dev -> PageList		5054174	0					
ANR	5056423	IdentifierDeclType	gdev_pagelist *		5054174	0					
ANR	5056424	Identifier	p		5054174	1					
ANR	5056425	AssignmentExpression	* p = ( gdev_pagelist * ) dev -> PageList		5054174	2		=			
ANR	5056426	Identifier	p		5054174	0					
ANR	5056427	CastExpression	( gdev_pagelist * ) dev -> PageList		5054174	1					
ANR	5056428	CastTarget	gdev_pagelist *		5054174	0					
ANR	5056429	PtrMemberAccess	dev -> PageList		5054174	1					
ANR	5056430	Identifier	dev		5054174	0					
ANR	5056431	Identifier	PageList		5054174	1					
ANR	5056432	ExpressionStatement	"param_string_from_string ( pagelist , p -> Pages )"	753:8:33889:33933	5054174	1	True				
ANR	5056433	CallExpression	"param_string_from_string ( pagelist , p -> Pages )"		5054174	0					
ANR	5056434	Callee	param_string_from_string		5054174	0					
ANR	5056435	Identifier	param_string_from_string		5054174	0					
ANR	5056436	ArgumentList	pagelist		5054174	1					
ANR	5056437	Argument	pagelist		5054174	0					
ANR	5056438	Identifier	pagelist		5054174	0					
ANR	5056439	Argument	p -> Pages		5054174	1					
ANR	5056440	PtrMemberAccess	p -> Pages		5054174	0					
ANR	5056441	Identifier	p		5054174	0					
ANR	5056442	Identifier	Pages		5054174	1					
ANR	5056443	ElseStatement	else		5054174	0					
ANR	5056444	ExpressionStatement	"param_string_from_string ( pagelist , null_str )"	756:8:33958:34002	5054174	0	True				
ANR	5056445	CallExpression	"param_string_from_string ( pagelist , null_str )"		5054174	0					
ANR	5056446	Callee	param_string_from_string		5054174	0					
ANR	5056447	Identifier	param_string_from_string		5054174	0					
ANR	5056448	ArgumentList	pagelist		5054174	1					
ANR	5056449	Argument	pagelist		5054174	0					
ANR	5056450	Identifier	pagelist		5054174	0					
ANR	5056451	Argument	null_str		5054174	1					
ANR	5056452	Identifier	null_str		5054174	0					
ANR	5056453	IfStatement	"if ( ( code = param_write_name ( plist , ""PageList"" , & pagelist ) ) < 0 )"		5054174	1275					
ANR	5056454	Condition	"( code = param_write_name ( plist , ""PageList"" , & pagelist ) ) < 0"	757:8:34012:34070	5054174	0	True				
ANR	5056455	RelationalExpression	"( code = param_write_name ( plist , ""PageList"" , & pagelist ) ) < 0"		5054174	0		<			
ANR	5056456	AssignmentExpression	"code = param_write_name ( plist , ""PageList"" , & pagelist )"		5054174	0		=			
ANR	5056457	Identifier	code		5054174	0					
ANR	5056458	CallExpression	"param_write_name ( plist , ""PageList"" , & pagelist )"		5054174	1					
ANR	5056459	Callee	param_write_name		5054174	0					
ANR	5056460	Identifier	param_write_name		5054174	0					
ANR	5056461	ArgumentList	plist		5054174	1					
ANR	5056462	Argument	plist		5054174	0					
ANR	5056463	Identifier	plist		5054174	0					
ANR	5056464	Argument	"""PageList"""		5054174	1					
ANR	5056465	PrimaryExpression	"""PageList"""		5054174	0					
ANR	5056466	Argument	& pagelist		5054174	2					
ANR	5056467	UnaryOperationExpression	& pagelist		5054174	0					
ANR	5056468	UnaryOperator	&		5054174	0					
ANR	5056469	Identifier	pagelist		5054174	1					
ANR	5056470	PrimaryExpression	0		5054174	1					
ANR	5056471	ReturnStatement	return code ;	758:8:34081:34092	5054174	1	True				
ANR	5056472	Identifier	code		5054174	0					
ANR	5056473	ExpressionStatement	temp_bool = dev -> ObjectFilter & FILTERIMAGE	760:4:34099:34142	5054174	1276	True				
ANR	5056474	AssignmentExpression	temp_bool = dev -> ObjectFilter & FILTERIMAGE		5054174	0		=			
ANR	5056475	Identifier	temp_bool		5054174	0					
ANR	5056476	BitAndExpression	dev -> ObjectFilter & FILTERIMAGE		5054174	1		&			
ANR	5056477	PtrMemberAccess	dev -> ObjectFilter		5054174	0					
ANR	5056478	Identifier	dev		5054174	0					
ANR	5056479	Identifier	ObjectFilter		5054174	1					
ANR	5056480	Identifier	FILTERIMAGE		5054174	1					
ANR	5056481	IfStatement	"if ( ( code = param_write_bool ( plist , ""FILTERIMAGE"" , & temp_bool ) ) < 0 )"		5054174	1277					
ANR	5056482	Condition	"( code = param_write_bool ( plist , ""FILTERIMAGE"" , & temp_bool ) ) < 0"	761:8:34152:34214	5054174	0	True				
ANR	5056483	RelationalExpression	"( code = param_write_bool ( plist , ""FILTERIMAGE"" , & temp_bool ) ) < 0"		5054174	0		<			
ANR	5056484	AssignmentExpression	"code = param_write_bool ( plist , ""FILTERIMAGE"" , & temp_bool )"		5054174	0		=			
ANR	5056485	Identifier	code		5054174	0					
ANR	5056486	CallExpression	"param_write_bool ( plist , ""FILTERIMAGE"" , & temp_bool )"		5054174	1					
ANR	5056487	Callee	param_write_bool		5054174	0					
ANR	5056488	Identifier	param_write_bool		5054174	0					
ANR	5056489	ArgumentList	plist		5054174	1					
ANR	5056490	Argument	plist		5054174	0					
ANR	5056491	Identifier	plist		5054174	0					
ANR	5056492	Argument	"""FILTERIMAGE"""		5054174	1					
ANR	5056493	PrimaryExpression	"""FILTERIMAGE"""		5054174	0					
ANR	5056494	Argument	& temp_bool		5054174	2					
ANR	5056495	UnaryOperationExpression	& temp_bool		5054174	0					
ANR	5056496	UnaryOperator	&		5054174	0					
ANR	5056497	Identifier	temp_bool		5054174	1					
ANR	5056498	PrimaryExpression	0		5054174	1					
ANR	5056499	ReturnStatement	return code ;	762:8:34225:34236	5054174	1	True				
ANR	5056500	Identifier	code		5054174	0					
ANR	5056501	ExpressionStatement	temp_bool = dev -> ObjectFilter & FILTERTEXT	763:4:34242:34284	5054174	1278	True				
ANR	5056502	AssignmentExpression	temp_bool = dev -> ObjectFilter & FILTERTEXT		5054174	0		=			
ANR	5056503	Identifier	temp_bool		5054174	0					
ANR	5056504	BitAndExpression	dev -> ObjectFilter & FILTERTEXT		5054174	1		&			
ANR	5056505	PtrMemberAccess	dev -> ObjectFilter		5054174	0					
ANR	5056506	Identifier	dev		5054174	0					
ANR	5056507	Identifier	ObjectFilter		5054174	1					
ANR	5056508	Identifier	FILTERTEXT		5054174	1					
ANR	5056509	IfStatement	"if ( ( code = param_write_bool ( plist , ""FILTERTEXT"" , & temp_bool ) ) < 0 )"		5054174	1279					
ANR	5056510	Condition	"( code = param_write_bool ( plist , ""FILTERTEXT"" , & temp_bool ) ) < 0"	764:8:34294:34355	5054174	0	True				
ANR	5056511	RelationalExpression	"( code = param_write_bool ( plist , ""FILTERTEXT"" , & temp_bool ) ) < 0"		5054174	0		<			
ANR	5056512	AssignmentExpression	"code = param_write_bool ( plist , ""FILTERTEXT"" , & temp_bool )"		5054174	0		=			
ANR	5056513	Identifier	code		5054174	0					
ANR	5056514	CallExpression	"param_write_bool ( plist , ""FILTERTEXT"" , & temp_bool )"		5054174	1					
ANR	5056515	Callee	param_write_bool		5054174	0					
ANR	5056516	Identifier	param_write_bool		5054174	0					
ANR	5056517	ArgumentList	plist		5054174	1					
ANR	5056518	Argument	plist		5054174	0					
ANR	5056519	Identifier	plist		5054174	0					
ANR	5056520	Argument	"""FILTERTEXT"""		5054174	1					
ANR	5056521	PrimaryExpression	"""FILTERTEXT"""		5054174	0					
ANR	5056522	Argument	& temp_bool		5054174	2					
ANR	5056523	UnaryOperationExpression	& temp_bool		5054174	0					
ANR	5056524	UnaryOperator	&		5054174	0					
ANR	5056525	Identifier	temp_bool		5054174	1					
ANR	5056526	PrimaryExpression	0		5054174	1					
ANR	5056527	ReturnStatement	return code ;	765:8:34366:34377	5054174	1	True				
ANR	5056528	Identifier	code		5054174	0					
ANR	5056529	ExpressionStatement	temp_bool = dev -> ObjectFilter & FILTERVECTOR	766:4:34383:34427	5054174	1280	True				
ANR	5056530	AssignmentExpression	temp_bool = dev -> ObjectFilter & FILTERVECTOR		5054174	0		=			
ANR	5056531	Identifier	temp_bool		5054174	0					
ANR	5056532	BitAndExpression	dev -> ObjectFilter & FILTERVECTOR		5054174	1		&			
ANR	5056533	PtrMemberAccess	dev -> ObjectFilter		5054174	0					
ANR	5056534	Identifier	dev		5054174	0					
ANR	5056535	Identifier	ObjectFilter		5054174	1					
ANR	5056536	Identifier	FILTERVECTOR		5054174	1					
ANR	5056537	IfStatement	"if ( ( code = param_write_bool ( plist , ""FILTERVECTOR"" , & temp_bool ) ) < 0 )"		5054174	1281					
ANR	5056538	Condition	"( code = param_write_bool ( plist , ""FILTERVECTOR"" , & temp_bool ) ) < 0"	767:8:34437:34500	5054174	0	True				
ANR	5056539	RelationalExpression	"( code = param_write_bool ( plist , ""FILTERVECTOR"" , & temp_bool ) ) < 0"		5054174	0		<			
ANR	5056540	AssignmentExpression	"code = param_write_bool ( plist , ""FILTERVECTOR"" , & temp_bool )"		5054174	0		=			
ANR	5056541	Identifier	code		5054174	0					
ANR	5056542	CallExpression	"param_write_bool ( plist , ""FILTERVECTOR"" , & temp_bool )"		5054174	1					
ANR	5056543	Callee	param_write_bool		5054174	0					
ANR	5056544	Identifier	param_write_bool		5054174	0					
ANR	5056545	ArgumentList	plist		5054174	1					
ANR	5056546	Argument	plist		5054174	0					
ANR	5056547	Identifier	plist		5054174	0					
ANR	5056548	Argument	"""FILTERVECTOR"""		5054174	1					
ANR	5056549	PrimaryExpression	"""FILTERVECTOR"""		5054174	0					
ANR	5056550	Argument	& temp_bool		5054174	2					
ANR	5056551	UnaryOperationExpression	& temp_bool		5054174	0					
ANR	5056552	UnaryOperator	&		5054174	0					
ANR	5056553	Identifier	temp_bool		5054174	1					
ANR	5056554	PrimaryExpression	0		5054174	1					
ANR	5056555	ReturnStatement	return code ;	768:8:34511:34522	5054174	1	True				
ANR	5056556	Identifier	code		5054174	0					
ANR	5056557	IfStatement	if ( colors > 1 )		5054174	1282					
ANR	5056558	Condition	colors > 1	772:8:34571:34580	5054174	0	True				
ANR	5056559	RelationalExpression	colors > 1		5054174	0		>			
ANR	5056560	Identifier	colors		5054174	0					
ANR	5056561	PrimaryExpression	1		5054174	1					
ANR	5056562	CompoundStatement		281:8:14305:14356	5054174	1					
ANR	5056563	IdentifierDeclStatement	int RGBValues = dev -> color_info . max_color + 1 ;	773:8:34593:34638	5054174	0	True				
ANR	5056564	IdentifierDecl	RGBValues = dev -> color_info . max_color + 1		5054174	0					
ANR	5056565	IdentifierDeclType	int		5054174	0					
ANR	5056566	Identifier	RGBValues		5054174	1					
ANR	5056567	AssignmentExpression	RGBValues = dev -> color_info . max_color + 1		5054174	2		=			
ANR	5056568	Identifier	RGBValues		5054174	0					
ANR	5056569	AdditiveExpression	dev -> color_info . max_color + 1		5054174	1		+			
ANR	5056570	MemberAccess	dev -> color_info . max_color		5054174	0					
ANR	5056571	PtrMemberAccess	dev -> color_info		5054174	0					
ANR	5056572	Identifier	dev		5054174	0					
ANR	5056573	Identifier	color_info		5054174	1					
ANR	5056574	Identifier	max_color		5054174	1					
ANR	5056575	PrimaryExpression	1		5054174	1					
ANR	5056576	IdentifierDeclStatement	long ColorValues = ( depth >= 32 ? - 1 : 1L << depth ) ;	774:8:34648:34699	5054174	1	True				
ANR	5056577	IdentifierDecl	ColorValues = ( depth >= 32 ? - 1 : 1L << depth )		5054174	0					
ANR	5056578	IdentifierDeclType	long		5054174	0					
ANR	5056579	Identifier	ColorValues		5054174	1					
ANR	5056580	AssignmentExpression	ColorValues = ( depth >= 32 ? - 1 : 1L << depth )		5054174	2		=			
ANR	5056581	Identifier	ColorValues		5054174	0					
ANR	5056582	ConditionalExpression	depth >= 32 ? - 1 : 1L << depth		5054174	1					
ANR	5056583	Condition	depth >= 32		5054174	0					
ANR	5056584	RelationalExpression	depth >= 32		5054174	0		>=			
ANR	5056585	Identifier	depth		5054174	0					
ANR	5056586	PrimaryExpression	32		5054174	1					
ANR	5056587	UnaryOperationExpression	- 1		5054174	1					
ANR	5056588	UnaryOperator	-		5054174	0					
ANR	5056589	PrimaryExpression	1		5054174	1					
ANR	5056590	ShiftExpression	1L << depth		5054174	2		<<			
ANR	5056591	PrimaryExpression	1L		5054174	0					
ANR	5056592	Identifier	depth		5054174	1					
ANR	5056593	IfStatement	"if ( ( code = param_write_int ( plist , ""RedValues"" , & RGBValues ) ) < 0 || ( code = param_write_int ( plist , ""GreenValues"" , & RGBValues ) ) < 0 || ( code = param_write_int ( plist , ""BlueValues"" , & RGBValues ) ) < 0 || ( code = param_write_long ( plist , ""ColorValues"" , & ColorValues ) ) < 0 )"		5054174	2					
ANR	5056594	Condition	"( code = param_write_int ( plist , ""RedValues"" , & RGBValues ) ) < 0 || ( code = param_write_int ( plist , ""GreenValues"" , & RGBValues ) ) < 0 || ( code = param_write_int ( plist , ""BlueValues"" , & RGBValues ) ) < 0 || ( code = param_write_long ( plist , ""ColorValues"" , & ColorValues ) ) < 0"	776:12:34746:35041	5054174	0	True				
ANR	5056595	OrExpression	"( code = param_write_int ( plist , ""RedValues"" , & RGBValues ) ) < 0 || ( code = param_write_int ( plist , ""GreenValues"" , & RGBValues ) ) < 0 || ( code = param_write_int ( plist , ""BlueValues"" , & RGBValues ) ) < 0 || ( code = param_write_long ( plist , ""ColorValues"" , & ColorValues ) ) < 0"		5054174	0		||			
ANR	5056596	RelationalExpression	"( code = param_write_int ( plist , ""RedValues"" , & RGBValues ) ) < 0"		5054174	0		<			
ANR	5056597	AssignmentExpression	"code = param_write_int ( plist , ""RedValues"" , & RGBValues )"		5054174	0		=			
ANR	5056598	Identifier	code		5054174	0					
ANR	5056599	CallExpression	"param_write_int ( plist , ""RedValues"" , & RGBValues )"		5054174	1					
ANR	5056600	Callee	param_write_int		5054174	0					
ANR	5056601	Identifier	param_write_int		5054174	0					
ANR	5056602	ArgumentList	plist		5054174	1					
ANR	5056603	Argument	plist		5054174	0					
ANR	5056604	Identifier	plist		5054174	0					
ANR	5056605	Argument	"""RedValues"""		5054174	1					
ANR	5056606	PrimaryExpression	"""RedValues"""		5054174	0					
ANR	5056607	Argument	& RGBValues		5054174	2					
ANR	5056608	UnaryOperationExpression	& RGBValues		5054174	0					
ANR	5056609	UnaryOperator	&		5054174	0					
ANR	5056610	Identifier	RGBValues		5054174	1					
ANR	5056611	PrimaryExpression	0		5054174	1					
ANR	5056612	OrExpression	"( code = param_write_int ( plist , ""GreenValues"" , & RGBValues ) ) < 0 || ( code = param_write_int ( plist , ""BlueValues"" , & RGBValues ) ) < 0 || ( code = param_write_long ( plist , ""ColorValues"" , & ColorValues ) ) < 0"		5054174	1		||			
ANR	5056613	RelationalExpression	"( code = param_write_int ( plist , ""GreenValues"" , & RGBValues ) ) < 0"		5054174	0		<			
ANR	5056614	AssignmentExpression	"code = param_write_int ( plist , ""GreenValues"" , & RGBValues )"		5054174	0		=			
ANR	5056615	Identifier	code		5054174	0					
ANR	5056616	CallExpression	"param_write_int ( plist , ""GreenValues"" , & RGBValues )"		5054174	1					
ANR	5056617	Callee	param_write_int		5054174	0					
ANR	5056618	Identifier	param_write_int		5054174	0					
ANR	5056619	ArgumentList	plist		5054174	1					
ANR	5056620	Argument	plist		5054174	0					
ANR	5056621	Identifier	plist		5054174	0					
ANR	5056622	Argument	"""GreenValues"""		5054174	1					
ANR	5056623	PrimaryExpression	"""GreenValues"""		5054174	0					
ANR	5056624	Argument	& RGBValues		5054174	2					
ANR	5056625	UnaryOperationExpression	& RGBValues		5054174	0					
ANR	5056626	UnaryOperator	&		5054174	0					
ANR	5056627	Identifier	RGBValues		5054174	1					
ANR	5056628	PrimaryExpression	0		5054174	1					
ANR	5056629	OrExpression	"( code = param_write_int ( plist , ""BlueValues"" , & RGBValues ) ) < 0 || ( code = param_write_long ( plist , ""ColorValues"" , & ColorValues ) ) < 0"		5054174	1		||			
ANR	5056630	RelationalExpression	"( code = param_write_int ( plist , ""BlueValues"" , & RGBValues ) ) < 0"		5054174	0		<			
ANR	5056631	AssignmentExpression	"code = param_write_int ( plist , ""BlueValues"" , & RGBValues )"		5054174	0		=			
ANR	5056632	Identifier	code		5054174	0					
ANR	5056633	CallExpression	"param_write_int ( plist , ""BlueValues"" , & RGBValues )"		5054174	1					
ANR	5056634	Callee	param_write_int		5054174	0					
ANR	5056635	Identifier	param_write_int		5054174	0					
ANR	5056636	ArgumentList	plist		5054174	1					
ANR	5056637	Argument	plist		5054174	0					
ANR	5056638	Identifier	plist		5054174	0					
ANR	5056639	Argument	"""BlueValues"""		5054174	1					
ANR	5056640	PrimaryExpression	"""BlueValues"""		5054174	0					
ANR	5056641	Argument	& RGBValues		5054174	2					
ANR	5056642	UnaryOperationExpression	& RGBValues		5054174	0					
ANR	5056643	UnaryOperator	&		5054174	0					
ANR	5056644	Identifier	RGBValues		5054174	1					
ANR	5056645	PrimaryExpression	0		5054174	1					
ANR	5056646	RelationalExpression	"( code = param_write_long ( plist , ""ColorValues"" , & ColorValues ) ) < 0"		5054174	1		<			
ANR	5056647	AssignmentExpression	"code = param_write_long ( plist , ""ColorValues"" , & ColorValues )"		5054174	0		=			
ANR	5056648	Identifier	code		5054174	0					
ANR	5056649	CallExpression	"param_write_long ( plist , ""ColorValues"" , & ColorValues )"		5054174	1					
ANR	5056650	Callee	param_write_long		5054174	0					
ANR	5056651	Identifier	param_write_long		5054174	0					
ANR	5056652	ArgumentList	plist		5054174	1					
ANR	5056653	Argument	plist		5054174	0					
ANR	5056654	Identifier	plist		5054174	0					
ANR	5056655	Argument	"""ColorValues"""		5054174	1					
ANR	5056656	PrimaryExpression	"""ColorValues"""		5054174	0					
ANR	5056657	Argument	& ColorValues		5054174	2					
ANR	5056658	UnaryOperationExpression	& ColorValues		5054174	0					
ANR	5056659	UnaryOperator	&		5054174	0					
ANR	5056660	Identifier	ColorValues		5054174	1					
ANR	5056661	PrimaryExpression	0		5054174	1					
ANR	5056662	ReturnStatement	return code ;	781:12:35069:35080	5054174	1	True				
ANR	5056663	Identifier	code		5054174	0					
ANR	5056664	IfStatement	"if ( param_requested ( plist , ""HWColorMap"" ) )"		5054174	1283					
ANR	5056665	Condition	"param_requested ( plist , ""HWColorMap"" )"	783:8:35096:35131	5054174	0	True				
ANR	5056666	CallExpression	"param_requested ( plist , ""HWColorMap"" )"		5054174	0					
ANR	5056667	Callee	param_requested		5054174	0					
ANR	5056668	Identifier	param_requested		5054174	0					
ANR	5056669	ArgumentList	plist		5054174	1					
ANR	5056670	Argument	plist		5054174	0					
ANR	5056671	Identifier	plist		5054174	0					
ANR	5056672	Argument	"""HWColorMap"""		5054174	1					
ANR	5056673	PrimaryExpression	"""HWColorMap"""		5054174	0					
ANR	5056674	CompoundStatement		291:8:14801:14821	5054174	1					
ANR	5056675	IdentifierDeclStatement	byte palette [ 3 << 8 ] ;	784:8:35144:35164	5054174	0	True				
ANR	5056676	IdentifierDecl	palette [ 3 << 8 ]		5054174	0					
ANR	5056677	IdentifierDeclType	byte [ 3 << 8 ]		5054174	0					
ANR	5056678	Identifier	palette		5054174	1					
ANR	5056679	ShiftExpression	3 << 8		5054174	2		<<			
ANR	5056680	PrimaryExpression	3		5054174	0					
ANR	5056681	PrimaryExpression	8		5054174	1					
ANR	5056682	IfStatement	"if ( param_HWColorMap ( dev , palette ) )"		5054174	1					
ANR	5056683	Condition	"param_HWColorMap ( dev , palette )"	786:12:35179:35208	5054174	0	True				
ANR	5056684	CallExpression	"param_HWColorMap ( dev , palette )"		5054174	0					
ANR	5056685	Callee	param_HWColorMap		5054174	0					
ANR	5056686	Identifier	param_HWColorMap		5054174	0					
ANR	5056687	ArgumentList	dev		5054174	1					
ANR	5056688	Argument	dev		5054174	0					
ANR	5056689	Identifier	dev		5054174	0					
ANR	5056690	Argument	palette		5054174	1					
ANR	5056691	Identifier	palette		5054174	0					
ANR	5056692	CompoundStatement		294:12:14882:14903	5054174	1					
ANR	5056693	IdentifierDeclStatement	gs_param_string hwcms ;	787:12:35225:35246	5054174	0	True				
ANR	5056694	IdentifierDecl	hwcms		5054174	0					
ANR	5056695	IdentifierDeclType	gs_param_string		5054174	0					
ANR	5056696	Identifier	hwcms		5054174	1					
ANR	5056697	ExpressionStatement	"hwcms . data = palette , hwcms . size = colors << depth , hwcms . persistent = false"	789:12:35261:35353	5054174	1	True				
ANR	5056698	Expression	"hwcms . data = palette , hwcms . size = colors << depth , hwcms . persistent = false"		5054174	0					
ANR	5056699	AssignmentExpression	hwcms . data = palette		5054174	0		=			
ANR	5056700	MemberAccess	hwcms . data		5054174	0					
ANR	5056701	Identifier	hwcms		5054174	0					
ANR	5056702	Identifier	data		5054174	1					
ANR	5056703	Identifier	palette		5054174	1					
ANR	5056704	Expression	"hwcms . size = colors << depth , hwcms . persistent = false"		5054174	1					
ANR	5056705	AssignmentExpression	hwcms . size = colors << depth		5054174	0		=			
ANR	5056706	MemberAccess	hwcms . size		5054174	0					
ANR	5056707	Identifier	hwcms		5054174	0					
ANR	5056708	Identifier	size		5054174	1					
ANR	5056709	ShiftExpression	colors << depth		5054174	1		<<			
ANR	5056710	Identifier	colors		5054174	0					
ANR	5056711	Identifier	depth		5054174	1					
ANR	5056712	AssignmentExpression	hwcms . persistent = false		5054174	1		=			
ANR	5056713	MemberAccess	hwcms . persistent		5054174	0					
ANR	5056714	Identifier	hwcms		5054174	0					
ANR	5056715	Identifier	persistent		5054174	1					
ANR	5056716	Identifier	false		5054174	1					
ANR	5056717	IfStatement	"if ( ( code = param_write_string ( plist , ""HWColorMap"" , & hwcms ) ) < 0 )"		5054174	2					
ANR	5056718	Condition	"( code = param_write_string ( plist , ""HWColorMap"" , & hwcms ) ) < 0"	791:16:35371:35430	5054174	0	True				
ANR	5056719	RelationalExpression	"( code = param_write_string ( plist , ""HWColorMap"" , & hwcms ) ) < 0"		5054174	0		<			
ANR	5056720	AssignmentExpression	"code = param_write_string ( plist , ""HWColorMap"" , & hwcms )"		5054174	0		=			
ANR	5056721	Identifier	code		5054174	0					
ANR	5056722	CallExpression	"param_write_string ( plist , ""HWColorMap"" , & hwcms )"		5054174	1					
ANR	5056723	Callee	param_write_string		5054174	0					
ANR	5056724	Identifier	param_write_string		5054174	0					
ANR	5056725	ArgumentList	plist		5054174	1					
ANR	5056726	Argument	plist		5054174	0					
ANR	5056727	Identifier	plist		5054174	0					
ANR	5056728	Argument	"""HWColorMap"""		5054174	1					
ANR	5056729	PrimaryExpression	"""HWColorMap"""		5054174	0					
ANR	5056730	Argument	& hwcms		5054174	2					
ANR	5056731	UnaryOperationExpression	& hwcms		5054174	0					
ANR	5056732	UnaryOperator	&		5054174	0					
ANR	5056733	Identifier	hwcms		5054174	1					
ANR	5056734	PrimaryExpression	0		5054174	1					
ANR	5056735	ReturnStatement	return code ;	792:16:35449:35460	5054174	1	True				
ANR	5056736	Identifier	code		5054174	0					
ANR	5056737	ReturnStatement	return 0 ;	796:4:35483:35491	5054174	1284	True				
ANR	5056738	PrimaryExpression	0		5054174	0					
ANR	5056739	ReturnType	int		5054174	1					
ANR	5056740	Identifier	gx_default_get_params		5054174	2					
ANR	5056741	ParameterList	"gx_device * dev , gs_param_list * plist"		5054174	3					
ANR	5056742	Parameter	gx_device * dev	493:22:20302:20316	5054174	0	True				
ANR	5056743	ParameterType	gx_device *		5054174	0					
ANR	5056744	Identifier	dev		5054174	1					
ANR	5056745	Parameter	gs_param_list * plist	493:39:20319:20339	5054174	1	True				
ANR	5056746	ParameterType	gs_param_list *		5054174	0					
ANR	5056747	Identifier	plist		5054174	1					
ANR	5056748	CFGEntryNode	ENTRY		5054174		True				
ANR	5056749	CFGExitNode	EXIT		5054174		True				
ANR	5056750	Symbol	hwcms . data		5054174						
ANR	5056751	Symbol	dev_profile -> postren_profile -> name		5054174						
ANR	5056752	Symbol	blend_profile		5054174						
ANR	5056753	Symbol	dev -> HWMargins		5054174						
ANR	5056754	Symbol	dev -> color_info . max_components		5054174						
ANR	5056755	Symbol	* cms		5054174						
ANR	5056756	Symbol	temp_bool		5054174						
ANR	5056757	Symbol	FILTERIMAGE		5054174						
ANR	5056758	Symbol	p -> Pages		5054174						
ANR	5056759	Symbol	dev		5054174						
ANR	5056760	Symbol	palette		5054174						
ANR	5056761	Symbol	param_write_string		5054174						
ANR	5056762	Symbol	null_str		5054174						
ANR	5056763	Symbol	LEADINGEDGE_SET_MASK		5054174						
ANR	5056764	Symbol	devicegraytok		5054174						
ANR	5056765	Symbol	icc_colorants		5054174						
ANR	5056766	Symbol	dev -> color_info . num_components		5054174						
ANR	5056767	Symbol	gsicc_init_device_profile_struct		5054174						
ANR	5056768	Symbol	dev -> color_info . max_color		5054174						
ANR	5056769	Symbol	& dev_profile		5054174						
ANR	5056770	Symbol	* dev_profile		5054174						
ANR	5056771	Symbol	dns		5054174						
ANR	5056772	Symbol	* dev_profile -> proof_profile		5054174						
ANR	5056773	Symbol	ibba		5054174						
ANR	5056774	Symbol	profile_array		5054174						
ANR	5056775	Symbol	param_write_null		5054174						
ANR	5056776	Symbol	RGBValues		5054174						
ANR	5056777	Symbol	hwcms		5054174						
ANR	5056778	Symbol	dev -> DisablePageHandler		5054174						
ANR	5056779	Symbol	param_write_name		5054174						
ANR	5056780	Symbol	MAX_COLOR_ACCURACY		5054174						
ANR	5056781	Symbol	gsBPNOTSPECIFIED		5054174						
ANR	5056782	Symbol	scna		5054174						
ANR	5056783	Symbol	& leadingedge		5054174						
ANR	5056784	Symbol	* dev_profile -> postren_profile		5054174						
ANR	5056785	Symbol	* dev_profile -> link_profile		5054174						
ANR	5056786	Symbol	param_HWColorMap		5054174						
ANR	5056787	Symbol	param_write_long		5054174						
ANR	5056788	Symbol	* dev		5054174						
ANR	5056789	Symbol	ColorValues		5054174						
ANR	5056790	Symbol	& dev -> FirstPage		5054174						
ANR	5056791	Symbol	dev_profile -> device_profile		5054174						
ANR	5056792	Symbol	prebandthreshold		5054174						
ANR	5056793	Symbol	dev -> height		5054174						
ANR	5056794	Symbol	cms		5054174						
ANR	5056795	Symbol	* profile_intents		5054174						
ANR	5056796	Symbol	dev -> Margins		5054174						
ANR	5056797	Symbol	* dev_profile -> blend_profile		5054174						
ANR	5056798	Symbol	dev -> color_info		5054174						
ANR	5056799	Symbol	dev -> color_info . depth		5054174						
ANR	5056800	Symbol	colors		5054174						
ANR	5056801	Symbol	hwra		5054174						
ANR	5056802	Symbol	hwcms . persistent		5054174						
ANR	5056803	Symbol	plist		5054174						
ANR	5056804	Symbol	dev -> ObjectFilter		5054174						
ANR	5056805	Symbol	dev_profile -> blend_profile -> name		5054174						
ANR	5056806	Symbol	colorant_names		5054174						
ANR	5056807	Symbol	dev -> ImagingBBox		5054174						
ANR	5056808	Symbol	dev_profile -> rendercond [ k ] . black_point_comp		5054174						
ANR	5056809	Symbol	dev_profile -> link_profile -> name		5054174						
ANR	5056810	Symbol	dev -> color_info . max_gray		5054174						
ANR	5056811	Symbol	* * dev_profile -> device_profile		5054174						
ANR	5056812	Symbol	dev_profile -> device_profile [ k ] -> name		5054174						
ANR	5056813	Symbol	dev_profile -> spotnames		5054174						
ANR	5056814	Symbol	a . persistent		5054174						
ANR	5056815	Symbol	a		5054174						
ANR	5056816	Symbol	link_profile		5054174						
ANR	5056817	Symbol	usefastcolor		5054174						
ANR	5056818	Symbol	* * * dev_profile		5054174						
ANR	5056819	Symbol	get_process_color_model_name		5054174						
ANR	5056820	Symbol	d		5054174						
ANR	5056821	Symbol	gsicc_get_dev_icccolorants		5054174						
ANR	5056822	Symbol	dev_profile -> usefastcolor		5054174						
ANR	5056823	Symbol	k		5054174						
ANR	5056824	Symbol	gsRINOTSPECIFIED		5054174						
ANR	5056825	Symbol	dev -> HWResolution		5054174						
ANR	5056826	Symbol	set_param_array		5054174						
ANR	5056827	Symbol	p		5054174						
ANR	5056828	Symbol	a . data		5054174						
ANR	5056829	Symbol	s		5054174						
ANR	5056830	Symbol	depth		5054174						
ANR	5056831	Symbol	& temp_bool		5054174						
ANR	5056832	Symbol	pcms . data		5054174						
ANR	5056833	Symbol	LEADINGEDGE_MASK		5054174						
ANR	5056834	Symbol	* * dev_profile		5054174						
ANR	5056835	Symbol	dev -> LeadingEdge		5054174						
ANR	5056836	Symbol	dev_profile -> link_profile		5054174						
ANR	5056837	Symbol	msa		5054174						
ANR	5056838	Symbol	proof_profile		5054174						
ANR	5056839	Symbol	HWSize		5054174						
ANR	5056840	Symbol	sim_overprint		5054174						
ANR	5056841	Symbol	dev_profile		5054174						
ANR	5056842	Symbol	* dev_profile -> device_profile		5054174						
ANR	5056843	Symbol	dev_profile -> rendercond [ k ] . rendering_intent		5054174						
ANR	5056844	Symbol	& RGBValues		5054174						
ANR	5056845	Symbol	FILTERVECTOR		5054174						
ANR	5056846	Symbol	param_requested		5054174						
ANR	5056847	Symbol	ma		5054174						
ANR	5056848	Symbol	leadingedge		5054174						
ANR	5056849	Symbol	dev -> MediaSize		5054174						
ANR	5056850	Symbol	NUM_DEVICE_PROFILES		5054174						
ANR	5056851	Symbol	dev_profile -> devicegraytok		5054174						
ANR	5056852	Symbol	dev -> PageList		5054174						
ANR	5056853	Symbol	seprs		5054174						
ANR	5056854	Symbol	graydetection		5054174						
ANR	5056855	Symbol	* * k		5054174						
ANR	5056856	Symbol	NULL		5054174						
ANR	5056857	Symbol	gsBKPRESNOTSPECIFIED		5054174						
ANR	5056858	Symbol	profile_intents		5054174						
ANR	5056859	Symbol	hwsa		5054174						
ANR	5056860	Symbol	* blackpreserve		5054174						
ANR	5056861	Symbol	true		5054174						
ANR	5056862	Symbol	dev_profile -> blend_profile		5054174						
ANR	5056863	Symbol	postren_profile		5054174						
ANR	5056864	Symbol	dev_profile -> graydetection		5054174						
ANR	5056865	Symbol	code		5054174						
ANR	5056866	Symbol	a . size		5054174						
ANR	5056867	Symbol	GrayValues		5054174						
ANR	5056868	Symbol	FILTERTEXT		5054174						
ANR	5056869	Symbol	dev -> dname		5054174						
ANR	5056870	Symbol	& dev -> LastPage		5054174						
ANR	5056871	Symbol	dev_profile -> sim_overprint		5054174						
ANR	5056872	Symbol	dev_profile -> proof_profile		5054174						
ANR	5056873	Symbol	param_write_bool		5054174						
ANR	5056874	Symbol	hwma		5054174						
ANR	5056875	Symbol	hwcms . size		5054174						
ANR	5056876	Symbol	dev_proc		5054174						
ANR	5056877	Symbol	blackptcomps		5054174						
ANR	5056878	Symbol	& hwcms		5054174						
ANR	5056879	Symbol	get_profile		5054174						
ANR	5056880	Symbol	param_write_int		5054174						
ANR	5056881	Symbol	& pagelist		5054174						
ANR	5056882	Symbol	blackpreserve		5054174						
ANR	5056883	Symbol	* HWSize		5054174						
ANR	5056884	Symbol	dev_profile -> postren_profile		5054174						
ANR	5056885	Symbol	& ColorValues		5054174						
ANR	5056886	Symbol	false		5054174						
ANR	5056887	Symbol	pagelist		5054174						
ANR	5056888	Symbol	* blackptcomps		5054174						
ANR	5056889	Symbol	dev_profile -> rendercond		5054174						
ANR	5056890	Symbol	pcms		5054174						
ANR	5056891	Symbol	dev_profile -> rendercond [ k ] . preserve_black		5054174						
ANR	5056892	Symbol	color_accuracy		5054174						
ANR	5056893	Symbol	* profile_array		5054174						
ANR	5056894	Symbol	dev_profile -> proof_profile -> name		5054174						
ANR	5056895	Symbol	dev_profile -> prebandthreshold		5054174						
ANR	5056896	Symbol	mns		5054174						
ANR	5056897	Symbol	* dev_profile -> rendercond		5054174						
ANR	5056898	Symbol	dev -> width		5054174						
ANR	5056899	Symbol	* k		5054174						
ANR	5056900	Symbol	* p		5054174						
ANR	5056901	Function	param_HWColorMap	800:0:35564:36236							
ANR	5056902	FunctionDef	"param_HWColorMap (gx_device * dev , byte * palette)"		5056901	0					
ANR	5056903	CompoundStatement		802:0:35640:36236	5056901	0					
ANR	5056904	IdentifierDeclStatement	int depth = dev -> color_info . depth ;	803:4:35646:35679	5056901	0	True				
ANR	5056905	IdentifierDecl	depth = dev -> color_info . depth		5056901	0					
ANR	5056906	IdentifierDeclType	int		5056901	0					
ANR	5056907	Identifier	depth		5056901	1					
ANR	5056908	AssignmentExpression	depth = dev -> color_info . depth		5056901	2		=			
ANR	5056909	Identifier	depth		5056901	0					
ANR	5056910	MemberAccess	dev -> color_info . depth		5056901	1					
ANR	5056911	PtrMemberAccess	dev -> color_info		5056901	0					
ANR	5056912	Identifier	dev		5056901	0					
ANR	5056913	Identifier	color_info		5056901	1					
ANR	5056914	Identifier	depth		5056901	1					
ANR	5056915	IdentifierDeclStatement	int colors = dev -> color_info . num_components ;	804:4:35685:35728	5056901	1	True				
ANR	5056916	IdentifierDecl	colors = dev -> color_info . num_components		5056901	0					
ANR	5056917	IdentifierDeclType	int		5056901	0					
ANR	5056918	Identifier	colors		5056901	1					
ANR	5056919	AssignmentExpression	colors = dev -> color_info . num_components		5056901	2		=			
ANR	5056920	Identifier	colors		5056901	0					
ANR	5056921	MemberAccess	dev -> color_info . num_components		5056901	1					
ANR	5056922	PtrMemberAccess	dev -> color_info		5056901	0					
ANR	5056923	Identifier	dev		5056901	0					
ANR	5056924	Identifier	color_info		5056901	1					
ANR	5056925	Identifier	num_components		5056901	1					
ANR	5056926	IfStatement	if ( depth <= 8 && colors <= 3 )		5056901	2					
ANR	5056927	Condition	depth <= 8 && colors <= 3	806:8:35739:35763	5056901	0	True				
ANR	5056928	AndExpression	depth <= 8 && colors <= 3		5056901	0		&&			
ANR	5056929	RelationalExpression	depth <= 8		5056901	0		<=			
ANR	5056930	Identifier	depth		5056901	0					
ANR	5056931	PrimaryExpression	8		5056901	1					
ANR	5056932	RelationalExpression	colors <= 3		5056901	1		<=			
ANR	5056933	Identifier	colors		5056901	0					
ANR	5056934	PrimaryExpression	3		5056901	1					
ANR	5056935	CompoundStatement		8:8:193:209	5056901	1					
ANR	5056936	IdentifierDeclStatement	byte * p = palette ;	807:8:35776:35793	5056901	0	True				
ANR	5056937	IdentifierDecl	* p = palette		5056901	0					
ANR	5056938	IdentifierDeclType	byte *		5056901	0					
ANR	5056939	Identifier	p		5056901	1					
ANR	5056940	AssignmentExpression	* p = palette		5056901	2		=			
ANR	5056941	Identifier	palette		5056901	0					
ANR	5056942	Identifier	palette		5056901	1					
ANR	5056943	IdentifierDeclStatement	gx_color_value rgb [ 3 ] ;	808:8:35803:35824	5056901	1	True				
ANR	5056944	IdentifierDecl	rgb [ 3 ]		5056901	0					
ANR	5056945	IdentifierDeclType	gx_color_value [ 3 ]		5056901	0					
ANR	5056946	Identifier	rgb		5056901	1					
ANR	5056947	PrimaryExpression	3		5056901	2					
ANR	5056948	IdentifierDeclStatement	gx_color_index i ;	809:8:35834:35850	5056901	2	True				
ANR	5056949	IdentifierDecl	i		5056901	0					
ANR	5056950	IdentifierDeclType	gx_color_index		5056901	0					
ANR	5056951	Identifier	i		5056901	1					
ANR	5056952	ExpressionStatement	"fill_dev_proc ( dev , map_color_rgb , gx_default_map_color_rgb )"	811:8:35861:35920	5056901	3	True				
ANR	5056953	CallExpression	"fill_dev_proc ( dev , map_color_rgb , gx_default_map_color_rgb )"		5056901	0					
ANR	5056954	Callee	fill_dev_proc		5056901	0					
ANR	5056955	Identifier	fill_dev_proc		5056901	0					
ANR	5056956	ArgumentList	dev		5056901	1					
ANR	5056957	Argument	dev		5056901	0					
ANR	5056958	Identifier	dev		5056901	0					
ANR	5056959	Argument	map_color_rgb		5056901	1					
ANR	5056960	Identifier	map_color_rgb		5056901	0					
ANR	5056961	Argument	gx_default_map_color_rgb		5056901	2					
ANR	5056962	Identifier	gx_default_map_color_rgb		5056901	0					
ANR	5056963	ForStatement	for ( i = 0 ; ( i >> depth ) == 0 ; i ++ )		5056901	4					
ANR	5056964	ForInit	i = 0 ;	812:13:35935:35940	5056901	0	True				
ANR	5056965	AssignmentExpression	i = 0		5056901	0		=			
ANR	5056966	Identifier	i		5056901	0					
ANR	5056967	PrimaryExpression	0		5056901	1					
ANR	5056968	Condition	( i >> depth ) == 0	812:20:35942:35958	5056901	1	True				
ANR	5056969	EqualityExpression	( i >> depth ) == 0		5056901	0		==			
ANR	5056970	ShiftExpression	i >> depth		5056901	0		>>			
ANR	5056971	Identifier	i		5056901	0					
ANR	5056972	Identifier	depth		5056901	1					
ANR	5056973	PrimaryExpression	0		5056901	1					
ANR	5056974	PostIncDecOperationExpression	i ++	812:39:35961:35963	5056901	2	True				
ANR	5056975	Identifier	i		5056901	0					
ANR	5056976	IncDec	++		5056901	1					
ANR	5056977	CompoundStatement		12:12:339:344	5056901	3					
ANR	5056978	IdentifierDeclStatement	int j ;	813:12:35980:35985	5056901	0	True				
ANR	5056979	IdentifierDecl	j		5056901	0					
ANR	5056980	IdentifierDeclType	int		5056901	0					
ANR	5056981	Identifier	j		5056901	1					
ANR	5056982	IfStatement	"if ( ( * dev_proc ( dev , map_color_rgb ) ) ( dev , i , rgb ) < 0 )"		5056901	1					
ANR	5056983	Condition	"( * dev_proc ( dev , map_color_rgb ) ) ( dev , i , rgb ) < 0"	815:16:36004:36052	5056901	0	True				
ANR	5056984	RelationalExpression	"( * dev_proc ( dev , map_color_rgb ) ) ( dev , i , rgb ) < 0"		5056901	0		<			
ANR	5056985	CallExpression	"( * dev_proc ( dev , map_color_rgb ) ) ( dev , i , rgb )"		5056901	0					
ANR	5056986	Callee	"* dev_proc ( dev , map_color_rgb )"		5056901	0					
ANR	5056987	UnaryOperationExpression	"* dev_proc ( dev , map_color_rgb )"		5056901	0					
ANR	5056988	UnaryOperator	*		5056901	0					
ANR	5056989	CallExpression	"dev_proc ( dev , map_color_rgb )"		5056901	1					
ANR	5056990	Callee	dev_proc		5056901	0					
ANR	5056991	Identifier	dev_proc		5056901	0					
ANR	5056992	ArgumentList	dev		5056901	1					
ANR	5056993	Argument	dev		5056901	0					
ANR	5056994	Identifier	dev		5056901	0					
ANR	5056995	Argument	map_color_rgb		5056901	1					
ANR	5056996	Identifier	map_color_rgb		5056901	0					
ANR	5056997	ArgumentList	dev		5056901	1					
ANR	5056998	Argument	dev		5056901	0					
ANR	5056999	Identifier	dev		5056901	0					
ANR	5057000	Argument	i		5056901	1					
ANR	5057001	Identifier	i		5056901	0					
ANR	5057002	Argument	rgb		5056901	2					
ANR	5057003	Identifier	rgb		5056901	0					
ANR	5057004	PrimaryExpression	0		5056901	1					
ANR	5057005	ReturnStatement	return false ;	816:16:36071:36083	5056901	1	True				
ANR	5057006	Identifier	false		5056901	0					
ANR	5057007	ForStatement	for ( j = 0 ; j < colors ; j ++ )		5056901	2					
ANR	5057008	ForInit	j = 0 ;	817:17:36102:36107	5056901	0	True				
ANR	5057009	AssignmentExpression	j = 0		5056901	0		=			
ANR	5057010	Identifier	j		5056901	0					
ANR	5057011	PrimaryExpression	0		5056901	1					
ANR	5057012	Condition	j < colors	817:24:36109:36118	5056901	1	True				
ANR	5057013	RelationalExpression	j < colors		5056901	0		<			
ANR	5057014	Identifier	j		5056901	0					
ANR	5057015	Identifier	colors		5056901	1					
ANR	5057016	PostIncDecOperationExpression	j ++	817:36:36121:36123	5056901	2	True				
ANR	5057017	Identifier	j		5056901	0					
ANR	5057018	IncDec	++		5056901	1					
ANR	5057019	ExpressionStatement	* p ++ = gx_color_value_to_byte ( rgb [ j ] )	818:16:36142:36179	5056901	3	True				
ANR	5057020	AssignmentExpression	* p ++ = gx_color_value_to_byte ( rgb [ j ] )		5056901	0		=			
ANR	5057021	UnaryOperationExpression	* p ++		5056901	0					
ANR	5057022	UnaryOperator	*		5056901	0					
ANR	5057023	PostIncDecOperationExpression	p ++		5056901	1					
ANR	5057024	Identifier	p		5056901	0					
ANR	5057025	IncDec	++		5056901	1					
ANR	5057026	CallExpression	gx_color_value_to_byte ( rgb [ j ] )		5056901	1					
ANR	5057027	Callee	gx_color_value_to_byte		5056901	0					
ANR	5057028	Identifier	gx_color_value_to_byte		5056901	0					
ANR	5057029	ArgumentList	rgb [ j ]		5056901	1					
ANR	5057030	Argument	rgb [ j ]		5056901	0					
ANR	5057031	ArrayIndexing	rgb [ j ]		5056901	0					
ANR	5057032	Identifier	rgb		5056901	0					
ANR	5057033	Identifier	j		5056901	1					
ANR	5057034	ReturnStatement	return true ;	820:8:36199:36210	5056901	5	True				
ANR	5057035	Identifier	true		5056901	0					
ANR	5057036	ReturnStatement	return false ;	822:4:36222:36234	5056901	3	True				
ANR	5057037	Identifier	false		5056901	0					
ANR	5057038	ReturnType	static bool		5056901	1					
ANR	5057039	Identifier	param_HWColorMap		5056901	2					
ANR	5057040	ParameterList	"gx_device * dev , byte * palette"		5056901	3					
ANR	5057041	Parameter	gx_device * dev	801:17:35593:35607	5056901	0	True				
ANR	5057042	ParameterType	gx_device *		5056901	0					
ANR	5057043	Identifier	dev		5056901	1					
ANR	5057044	Parameter	byte * palette	801:34:35610:35623	5056901	1	True				
ANR	5057045	ParameterType	byte *		5056901	0					
ANR	5057046	Identifier	palette		5056901	1					
ANR	5057047	CFGEntryNode	ENTRY		5056901		True				
ANR	5057048	CFGExitNode	EXIT		5056901		True				
ANR	5057049	Symbol	* dev		5056901						
ANR	5057050	Symbol	gx_color_value_to_byte		5056901						
ANR	5057051	Symbol	dev -> color_info . num_components		5056901						
ANR	5057052	Symbol	* dev_proc		5056901						
ANR	5057053	Symbol	* p ++		5056901						
ANR	5057054	Symbol	gx_default_map_color_rgb		5056901						
ANR	5057055	Symbol	"* dev_proc ( dev , map_color_rgb )"		5056901						
ANR	5057056	Symbol	false		5056901						
ANR	5057057	Symbol	i		5056901						
ANR	5057058	Symbol	j		5056901						
ANR	5057059	Symbol	dev -> color_info		5056901						
ANR	5057060	Symbol	dev -> color_info . depth		5056901						
ANR	5057061	Symbol	rgb		5056901						
ANR	5057062	Symbol	colors		5056901						
ANR	5057063	Symbol	map_color_rgb		5056901						
ANR	5057064	Symbol	p		5056901						
ANR	5057065	Symbol	depth		5056901						
ANR	5057066	Symbol	dev		5056901						
ANR	5057067	Symbol	* j		5056901						
ANR	5057068	Symbol	dev_proc		5056901						
ANR	5057069	Symbol	* rgb		5056901						
ANR	5057070	Symbol	true		5056901						
ANR	5057071	Symbol	palette		5056901						
ANR	5057072	Function	gx_default_get_hardware_params	826:0:36317:36408							
ANR	5057073	FunctionDef	"gx_default_get_hardware_params (gx_device * dev , gs_param_list * plist)"		5057072	0					
ANR	5057074	CompoundStatement		828:0:36392:36408	5057072	0					
ANR	5057075	ReturnStatement	return 0 ;	829:4:36398:36406	5057072	0	True				
ANR	5057076	PrimaryExpression	0		5057072	0					
ANR	5057077	ReturnType	int		5057072	1					
ANR	5057078	Identifier	gx_default_get_hardware_params		5057072	2					
ANR	5057079	ParameterList	"gx_device * dev , gs_param_list * plist"		5057072	3					
ANR	5057080	Parameter	gx_device * dev	827:31:36352:36366	5057072	0	True				
ANR	5057081	ParameterType	gx_device *		5057072	0					
ANR	5057082	Identifier	dev		5057072	1					
ANR	5057083	Parameter	gs_param_list * plist	827:48:36369:36389	5057072	1	True				
ANR	5057084	ParameterType	gs_param_list *		5057072	0					
ANR	5057085	Identifier	plist		5057072	1					
ANR	5057086	CFGEntryNode	ENTRY		5057072		True				
ANR	5057087	CFGExitNode	EXIT		5057072		True				
ANR	5057088	Symbol	plist		5057072						
ANR	5057089	Symbol	dev		5057072						
ANR	5057090	Function	finish_media	835:0:36520:36812							
ANR	5057091	FunctionDef	"finish_media (gs_param_list * mlist , gs_param_name key , const char * media_type)"		5057090	0					
ANR	5057092	CompoundStatement		837:0:36610:36812	5057090	0					
ANR	5057093	IdentifierDeclStatement	int code = 0 ;	838:4:36616:36628	5057090	0	True				
ANR	5057094	IdentifierDecl	code = 0		5057090	0					
ANR	5057095	IdentifierDeclType	int		5057090	0					
ANR	5057096	Identifier	code		5057090	1					
ANR	5057097	AssignmentExpression	code = 0		5057090	2		=			
ANR	5057098	Identifier	code		5057090	0					
ANR	5057099	PrimaryExpression	0		5057090	1					
ANR	5057100	IfStatement	if ( media_type != 0 )		5057090	1					
ANR	5057101	Condition	media_type != 0	840:8:36639:36653	5057090	0	True				
ANR	5057102	EqualityExpression	media_type != 0		5057090	0		!=			
ANR	5057103	Identifier	media_type		5057090	0					
ANR	5057104	PrimaryExpression	0		5057090	1					
ANR	5057105	CompoundStatement		5:8:55:73	5057090	1					
ANR	5057106	IdentifierDeclStatement	gs_param_string as ;	841:8:36666:36684	5057090	0	True				
ANR	5057107	IdentifierDecl	as		5057090	0					
ANR	5057108	IdentifierDeclType	gs_param_string		5057090	0					
ANR	5057109	Identifier	as		5057090	1					
ANR	5057110	ExpressionStatement	"param_string_from_string ( as , media_type )"	843:8:36695:36735	5057090	1	True				
ANR	5057111	CallExpression	"param_string_from_string ( as , media_type )"		5057090	0					
ANR	5057112	Callee	param_string_from_string		5057090	0					
ANR	5057113	Identifier	param_string_from_string		5057090	0					
ANR	5057114	ArgumentList	as		5057090	1					
ANR	5057115	Argument	as		5057090	0					
ANR	5057116	Identifier	as		5057090	0					
ANR	5057117	Argument	media_type		5057090	1					
ANR	5057118	Identifier	media_type		5057090	0					
ANR	5057119	ExpressionStatement	"code = param_write_string ( mlist , key , & as )"	844:8:36745:36787	5057090	2	True				
ANR	5057120	AssignmentExpression	"code = param_write_string ( mlist , key , & as )"		5057090	0		=			
ANR	5057121	Identifier	code		5057090	0					
ANR	5057122	CallExpression	"param_write_string ( mlist , key , & as )"		5057090	1					
ANR	5057123	Callee	param_write_string		5057090	0					
ANR	5057124	Identifier	param_write_string		5057090	0					
ANR	5057125	ArgumentList	mlist		5057090	1					
ANR	5057126	Argument	mlist		5057090	0					
ANR	5057127	Identifier	mlist		5057090	0					
ANR	5057128	Argument	key		5057090	1					
ANR	5057129	Identifier	key		5057090	0					
ANR	5057130	Argument	& as		5057090	2					
ANR	5057131	UnaryOperationExpression	& as		5057090	0					
ANR	5057132	UnaryOperator	&		5057090	0					
ANR	5057133	Identifier	as		5057090	1					
ANR	5057134	ReturnStatement	return code ;	846:4:36799:36810	5057090	2	True				
ANR	5057135	Identifier	code		5057090	0					
ANR	5057136	ReturnType	static int		5057090	1					
ANR	5057137	Identifier	finish_media		5057090	2					
ANR	5057138	ParameterList	"gs_param_list * mlist , gs_param_name key , const char * media_type"		5057090	3					
ANR	5057139	Parameter	gs_param_list * mlist	836:13:36544:36564	5057090	0	True				
ANR	5057140	ParameterType	gs_param_list *		5057090	0					
ANR	5057141	Identifier	mlist		5057090	1					
ANR	5057142	Parameter	gs_param_name key	836:36:36567:36583	5057090	1	True				
ANR	5057143	ParameterType	gs_param_name		5057090	0					
ANR	5057144	Identifier	key		5057090	1					
ANR	5057145	Parameter	const char * media_type	836:55:36586:36607	5057090	2	True				
ANR	5057146	ParameterType	const char *		5057090	0					
ANR	5057147	Identifier	media_type		5057090	1					
ANR	5057148	CFGEntryNode	ENTRY		5057090		True				
ANR	5057149	CFGExitNode	EXIT		5057090		True				
ANR	5057150	Symbol	as		5057090						
ANR	5057151	Symbol	code		5057090						
ANR	5057152	Symbol	media_type		5057090						
ANR	5057153	Symbol	mlist		5057090						
ANR	5057154	Symbol	param_write_string		5057090						
ANR	5057155	Symbol	& as		5057090						
ANR	5057156	Symbol	key		5057090						
ANR	5057157	DeclStmt									
ANR	5057158	Decl							const gdev_input_media_t	const gdev_input_media_t	gdev_input_media_default
ANR	5057159	Function	gdev_begin_input_media	856:0:36936:37144							
ANR	5057160	FunctionDef	"gdev_begin_input_media (gs_param_list * mlist , gs_param_dict * pdict , int count)"		5057159	0					
ANR	5057161	CompoundStatement		859:0:37043:37144	5057159	0					
ANR	5057162	ExpressionStatement	pdict -> size = count	860:4:37049:37068	5057159	0	True				
ANR	5057163	AssignmentExpression	pdict -> size = count		5057159	0		=			
ANR	5057164	PtrMemberAccess	pdict -> size		5057159	0					
ANR	5057165	Identifier	pdict		5057159	0					
ANR	5057166	Identifier	size		5057159	1					
ANR	5057167	Identifier	count		5057159	1					
ANR	5057168	ReturnStatement	"return param_begin_write_dict ( mlist , ""InputAttributes"" , pdict , true ) ;"	861:4:37074:37142	5057159	1	True				
ANR	5057169	CallExpression	"param_begin_write_dict ( mlist , ""InputAttributes"" , pdict , true )"		5057159	0					
ANR	5057170	Callee	param_begin_write_dict		5057159	0					
ANR	5057171	Identifier	param_begin_write_dict		5057159	0					
ANR	5057172	ArgumentList	mlist		5057159	1					
ANR	5057173	Argument	mlist		5057159	0					
ANR	5057174	Identifier	mlist		5057159	0					
ANR	5057175	Argument	"""InputAttributes"""		5057159	1					
ANR	5057176	PrimaryExpression	"""InputAttributes"""		5057159	0					
ANR	5057177	Argument	pdict		5057159	2					
ANR	5057178	Identifier	pdict		5057159	0					
ANR	5057179	Argument	true		5057159	3					
ANR	5057180	Identifier	true		5057159	0					
ANR	5057181	ReturnType	int		5057159	1					
ANR	5057182	Identifier	gdev_begin_input_media		5057159	2					
ANR	5057183	ParameterList	"gs_param_list * mlist , gs_param_dict * pdict , int count"		5057159	3					
ANR	5057184	Parameter	gs_param_list * mlist	857:23:36963:36983	5057159	0	True				
ANR	5057185	ParameterType	gs_param_list *		5057159	0					
ANR	5057186	Identifier	mlist		5057159	1					
ANR	5057187	Parameter	gs_param_dict * pdict	857:46:36986:37006	5057159	1	True				
ANR	5057188	ParameterType	gs_param_dict *		5057159	0					
ANR	5057189	Identifier	pdict		5057159	1					
ANR	5057190	Parameter	int count	858:23:37032:37040	5057159	2	True				
ANR	5057191	ParameterType	int		5057159	0					
ANR	5057192	Identifier	count		5057159	1					
ANR	5057193	CFGEntryNode	ENTRY		5057159		True				
ANR	5057194	CFGExitNode	EXIT		5057159		True				
ANR	5057195	Symbol	pdict -> size		5057159						
ANR	5057196	Symbol	count		5057159						
ANR	5057197	Symbol	true		5057159						
ANR	5057198	Symbol	mlist		5057159						
ANR	5057199	Symbol	* pdict		5057159						
ANR	5057200	Symbol	pdict		5057159						
ANR	5057201	Symbol	param_begin_write_dict		5057159						
ANR	5057202	Function	gdev_write_input_media	864:0:37147:38813							
ANR	5057203	FunctionDef	"gdev_write_input_media (int index , gs_param_dict * pdict , const gdev_input_media_t * pim)"		5057202	0					
ANR	5057204	CompoundStatement		867:0:37263:38813	5057202	0					
ANR	5057205	IdentifierDeclStatement	char key [ 25 ] ;	868:4:37269:37281	5057202	0	True				
ANR	5057206	IdentifierDecl	key [ 25 ]		5057202	0					
ANR	5057207	IdentifierDeclType	char [ 25 ]		5057202	0					
ANR	5057208	Identifier	key		5057202	1					
ANR	5057209	PrimaryExpression	25		5057202	2					
ANR	5057210	IdentifierDeclStatement	gs_param_dict mdict ;	869:4:37287:37306	5057202	1	True				
ANR	5057211	IdentifierDecl	mdict		5057202	0					
ANR	5057212	IdentifierDeclType	gs_param_dict		5057202	0					
ANR	5057213	Identifier	mdict		5057202	1					
ANR	5057214	IdentifierDeclStatement	int code ;	870:4:37312:37320	5057202	2	True				
ANR	5057215	IdentifierDecl	code		5057202	0					
ANR	5057216	IdentifierDeclType	int		5057202	0					
ANR	5057217	Identifier	code		5057202	1					
ANR	5057218	IdentifierDeclStatement	gs_param_string as ;	871:4:37326:37344	5057202	3	True				
ANR	5057219	IdentifierDecl	as		5057202	0					
ANR	5057220	IdentifierDeclType	gs_param_string		5057202	0					
ANR	5057221	Identifier	as		5057202	1					
ANR	5057222	ExpressionStatement	"gs_sprintf ( key , ""%d"" , index )"	873:4:37351:37379	5057202	4	True				
ANR	5057223	CallExpression	"gs_sprintf ( key , ""%d"" , index )"		5057202	0					
ANR	5057224	Callee	gs_sprintf		5057202	0					
ANR	5057225	Identifier	gs_sprintf		5057202	0					
ANR	5057226	ArgumentList	key		5057202	1					
ANR	5057227	Argument	key		5057202	0					
ANR	5057228	Identifier	key		5057202	0					
ANR	5057229	Argument	"""%d"""		5057202	1					
ANR	5057230	PrimaryExpression	"""%d"""		5057202	0					
ANR	5057231	Argument	index		5057202	2					
ANR	5057232	Identifier	index		5057202	0					
ANR	5057233	ExpressionStatement	mdict . size = 4	874:4:37385:37399	5057202	5	True				
ANR	5057234	AssignmentExpression	mdict . size = 4		5057202	0		=			
ANR	5057235	MemberAccess	mdict . size		5057202	0					
ANR	5057236	Identifier	mdict		5057202	0					
ANR	5057237	Identifier	size		5057202	1					
ANR	5057238	PrimaryExpression	4		5057202	1					
ANR	5057239	ExpressionStatement	"code = param_begin_write_dict ( pdict -> list , key , & mdict , false )"	875:4:37405:37467	5057202	6	True				
ANR	5057240	AssignmentExpression	"code = param_begin_write_dict ( pdict -> list , key , & mdict , false )"		5057202	0		=			
ANR	5057241	Identifier	code		5057202	0					
ANR	5057242	CallExpression	"param_begin_write_dict ( pdict -> list , key , & mdict , false )"		5057202	1					
ANR	5057243	Callee	param_begin_write_dict		5057202	0					
ANR	5057244	Identifier	param_begin_write_dict		5057202	0					
ANR	5057245	ArgumentList	pdict -> list		5057202	1					
ANR	5057246	Argument	pdict -> list		5057202	0					
ANR	5057247	PtrMemberAccess	pdict -> list		5057202	0					
ANR	5057248	Identifier	pdict		5057202	0					
ANR	5057249	Identifier	list		5057202	1					
ANR	5057250	Argument	key		5057202	1					
ANR	5057251	Identifier	key		5057202	0					
ANR	5057252	Argument	& mdict		5057202	2					
ANR	5057253	UnaryOperationExpression	& mdict		5057202	0					
ANR	5057254	UnaryOperator	&		5057202	0					
ANR	5057255	Identifier	mdict		5057202	1					
ANR	5057256	Argument	false		5057202	3					
ANR	5057257	Identifier	false		5057202	0					
ANR	5057258	IfStatement	if ( code < 0 )		5057202	7					
ANR	5057259	Condition	code < 0	876:8:37477:37484	5057202	0	True				
ANR	5057260	RelationalExpression	code < 0		5057202	0		<			
ANR	5057261	Identifier	code		5057202	0					
ANR	5057262	PrimaryExpression	0		5057202	1					
ANR	5057263	ReturnStatement	return code ;	877:8:37495:37506	5057202	1	True				
ANR	5057264	Identifier	code		5057202	0					
ANR	5057265	IfStatement	if ( ( pim -> PageSize [ 0 ] != 0 && pim -> PageSize [ 1 ] != 0 ) || ( pim -> PageSize [ 2 ] != 0 && pim -> PageSize [ 3 ] != 0 ) )		5057202	8					
ANR	5057266	Condition	( pim -> PageSize [ 0 ] != 0 && pim -> PageSize [ 1 ] != 0 ) || ( pim -> PageSize [ 2 ] != 0 && pim -> PageSize [ 3 ] != 0 )	878:8:37516:37623	5057202	0	True				
ANR	5057267	OrExpression	( pim -> PageSize [ 0 ] != 0 && pim -> PageSize [ 1 ] != 0 ) || ( pim -> PageSize [ 2 ] != 0 && pim -> PageSize [ 3 ] != 0 )		5057202	0		||			
ANR	5057268	AndExpression	pim -> PageSize [ 0 ] != 0 && pim -> PageSize [ 1 ] != 0		5057202	0		&&			
ANR	5057269	EqualityExpression	pim -> PageSize [ 0 ] != 0		5057202	0		!=			
ANR	5057270	ArrayIndexing	pim -> PageSize [ 0 ]		5057202	0					
ANR	5057271	PtrMemberAccess	pim -> PageSize		5057202	0					
ANR	5057272	Identifier	pim		5057202	0					
ANR	5057273	Identifier	PageSize		5057202	1					
ANR	5057274	PrimaryExpression	0		5057202	1					
ANR	5057275	PrimaryExpression	0		5057202	1					
ANR	5057276	EqualityExpression	pim -> PageSize [ 1 ] != 0		5057202	1		!=			
ANR	5057277	ArrayIndexing	pim -> PageSize [ 1 ]		5057202	0					
ANR	5057278	PtrMemberAccess	pim -> PageSize		5057202	0					
ANR	5057279	Identifier	pim		5057202	0					
ANR	5057280	Identifier	PageSize		5057202	1					
ANR	5057281	PrimaryExpression	1		5057202	1					
ANR	5057282	PrimaryExpression	0		5057202	1					
ANR	5057283	AndExpression	pim -> PageSize [ 2 ] != 0 && pim -> PageSize [ 3 ] != 0		5057202	1		&&			
ANR	5057284	EqualityExpression	pim -> PageSize [ 2 ] != 0		5057202	0		!=			
ANR	5057285	ArrayIndexing	pim -> PageSize [ 2 ]		5057202	0					
ANR	5057286	PtrMemberAccess	pim -> PageSize		5057202	0					
ANR	5057287	Identifier	pim		5057202	0					
ANR	5057288	Identifier	PageSize		5057202	1					
ANR	5057289	PrimaryExpression	2		5057202	1					
ANR	5057290	PrimaryExpression	0		5057202	1					
ANR	5057291	EqualityExpression	pim -> PageSize [ 3 ] != 0		5057202	1		!=			
ANR	5057292	ArrayIndexing	pim -> PageSize [ 3 ]		5057202	0					
ANR	5057293	PtrMemberAccess	pim -> PageSize		5057202	0					
ANR	5057294	Identifier	pim		5057202	0					
ANR	5057295	Identifier	PageSize		5057202	1					
ANR	5057296	PrimaryExpression	3		5057202	1					
ANR	5057297	PrimaryExpression	0		5057202	1					
ANR	5057298	CompoundStatement		15:8:381:405	5057202	1					
ANR	5057299	IdentifierDeclStatement	gs_param_float_array psa ;	881:8:37645:37669	5057202	0	True				
ANR	5057300	IdentifierDecl	psa		5057202	0					
ANR	5057301	IdentifierDeclType	gs_param_float_array		5057202	0					
ANR	5057302	Identifier	psa		5057202	1					
ANR	5057303	ExpressionStatement	psa . data = pim -> PageSize	883:8:37680:37704	5057202	1	True				
ANR	5057304	AssignmentExpression	psa . data = pim -> PageSize		5057202	0		=			
ANR	5057305	MemberAccess	psa . data		5057202	0					
ANR	5057306	Identifier	psa		5057202	0					
ANR	5057307	Identifier	data		5057202	1					
ANR	5057308	PtrMemberAccess	pim -> PageSize		5057202	1					
ANR	5057309	Identifier	pim		5057202	0					
ANR	5057310	Identifier	PageSize		5057202	1					
ANR	5057311	ExpressionStatement	psa . size = ( pim -> PageSize [ 0 ] == pim -> PageSize [ 2 ] && pim -> PageSize [ 1 ] == pim -> PageSize [ 3 ] ? 2 : 4 )	884:8:37714:37836	5057202	2	True				
ANR	5057312	AssignmentExpression	psa . size = ( pim -> PageSize [ 0 ] == pim -> PageSize [ 2 ] && pim -> PageSize [ 1 ] == pim -> PageSize [ 3 ] ? 2 : 4 )		5057202	0		=			
ANR	5057313	MemberAccess	psa . size		5057202	0					
ANR	5057314	Identifier	psa		5057202	0					
ANR	5057315	Identifier	size		5057202	1					
ANR	5057316	ConditionalExpression	pim -> PageSize [ 0 ] == pim -> PageSize [ 2 ] && pim -> PageSize [ 1 ] == pim -> PageSize [ 3 ] ? 2 : 4		5057202	1					
ANR	5057317	Condition	pim -> PageSize [ 0 ] == pim -> PageSize [ 2 ] && pim -> PageSize [ 1 ] == pim -> PageSize [ 3 ]		5057202	0					
ANR	5057318	AndExpression	pim -> PageSize [ 0 ] == pim -> PageSize [ 2 ] && pim -> PageSize [ 1 ] == pim -> PageSize [ 3 ]		5057202	0		&&			
ANR	5057319	EqualityExpression	pim -> PageSize [ 0 ] == pim -> PageSize [ 2 ]		5057202	0		==			
ANR	5057320	ArrayIndexing	pim -> PageSize [ 0 ]		5057202	0					
ANR	5057321	PtrMemberAccess	pim -> PageSize		5057202	0					
ANR	5057322	Identifier	pim		5057202	0					
ANR	5057323	Identifier	PageSize		5057202	1					
ANR	5057324	PrimaryExpression	0		5057202	1					
ANR	5057325	ArrayIndexing	pim -> PageSize [ 2 ]		5057202	1					
ANR	5057326	PtrMemberAccess	pim -> PageSize		5057202	0					
ANR	5057327	Identifier	pim		5057202	0					
ANR	5057328	Identifier	PageSize		5057202	1					
ANR	5057329	PrimaryExpression	2		5057202	1					
ANR	5057330	EqualityExpression	pim -> PageSize [ 1 ] == pim -> PageSize [ 3 ]		5057202	1		==			
ANR	5057331	ArrayIndexing	pim -> PageSize [ 1 ]		5057202	0					
ANR	5057332	PtrMemberAccess	pim -> PageSize		5057202	0					
ANR	5057333	Identifier	pim		5057202	0					
ANR	5057334	Identifier	PageSize		5057202	1					
ANR	5057335	PrimaryExpression	1		5057202	1					
ANR	5057336	ArrayIndexing	pim -> PageSize [ 3 ]		5057202	1					
ANR	5057337	PtrMemberAccess	pim -> PageSize		5057202	0					
ANR	5057338	Identifier	pim		5057202	0					
ANR	5057339	Identifier	PageSize		5057202	1					
ANR	5057340	PrimaryExpression	3		5057202	1					
ANR	5057341	PrimaryExpression	2		5057202	1					
ANR	5057342	PrimaryExpression	4		5057202	2					
ANR	5057343	ExpressionStatement	psa . persistent = false	887:8:37846:37868	5057202	3	True				
ANR	5057344	AssignmentExpression	psa . persistent = false		5057202	0		=			
ANR	5057345	MemberAccess	psa . persistent		5057202	0					
ANR	5057346	Identifier	psa		5057202	0					
ANR	5057347	Identifier	persistent		5057202	1					
ANR	5057348	Identifier	false		5057202	1					
ANR	5057349	ExpressionStatement	"code = param_write_float_array ( mdict . list , ""PageSize"" , & psa )"	888:8:37878:37977	5057202	4	True				
ANR	5057350	AssignmentExpression	"code = param_write_float_array ( mdict . list , ""PageSize"" , & psa )"		5057202	0		=			
ANR	5057351	Identifier	code		5057202	0					
ANR	5057352	CallExpression	"param_write_float_array ( mdict . list , ""PageSize"" , & psa )"		5057202	1					
ANR	5057353	Callee	param_write_float_array		5057202	0					
ANR	5057354	Identifier	param_write_float_array		5057202	0					
ANR	5057355	ArgumentList	mdict . list		5057202	1					
ANR	5057356	Argument	mdict . list		5057202	0					
ANR	5057357	MemberAccess	mdict . list		5057202	0					
ANR	5057358	Identifier	mdict		5057202	0					
ANR	5057359	Identifier	list		5057202	1					
ANR	5057360	Argument	"""PageSize"""		5057202	1					
ANR	5057361	PrimaryExpression	"""PageSize"""		5057202	0					
ANR	5057362	Argument	& psa		5057202	2					
ANR	5057363	UnaryOperationExpression	& psa		5057202	0					
ANR	5057364	UnaryOperator	&		5057202	0					
ANR	5057365	Identifier	psa		5057202	1					
ANR	5057366	IfStatement	if ( code < 0 )		5057202	5					
ANR	5057367	Condition	code < 0	890:12:37991:37998	5057202	0	True				
ANR	5057368	RelationalExpression	code < 0		5057202	0		<			
ANR	5057369	Identifier	code		5057202	0					
ANR	5057370	PrimaryExpression	0		5057202	1					
ANR	5057371	ReturnStatement	return code ;	891:12:38013:38024	5057202	1	True				
ANR	5057372	Identifier	code		5057202	0					
ANR	5057373	IfStatement	if ( pim -> MediaColor != 0 )		5057202	9					
ANR	5057374	Condition	pim -> MediaColor != 0	893:8:38040:38059	5057202	0	True				
ANR	5057375	EqualityExpression	pim -> MediaColor != 0		5057202	0		!=			
ANR	5057376	PtrMemberAccess	pim -> MediaColor		5057202	0					
ANR	5057377	Identifier	pim		5057202	0					
ANR	5057378	Identifier	MediaColor		5057202	1					
ANR	5057379	PrimaryExpression	0		5057202	1					
ANR	5057380	CompoundStatement		27:30:798:798	5057202	1					
ANR	5057381	ExpressionStatement	"param_string_from_string ( as , pim -> MediaColor )"	894:8:38072:38117	5057202	0	True				
ANR	5057382	CallExpression	"param_string_from_string ( as , pim -> MediaColor )"		5057202	0					
ANR	5057383	Callee	param_string_from_string		5057202	0					
ANR	5057384	Identifier	param_string_from_string		5057202	0					
ANR	5057385	ArgumentList	as		5057202	1					
ANR	5057386	Argument	as		5057202	0					
ANR	5057387	Identifier	as		5057202	0					
ANR	5057388	Argument	pim -> MediaColor		5057202	1					
ANR	5057389	PtrMemberAccess	pim -> MediaColor		5057202	0					
ANR	5057390	Identifier	pim		5057202	0					
ANR	5057391	Identifier	MediaColor		5057202	1					
ANR	5057392	ExpressionStatement	"code = param_write_string ( mdict . list , ""MediaColor"" , & as )"	895:8:38127:38217	5057202	1	True				
ANR	5057393	AssignmentExpression	"code = param_write_string ( mdict . list , ""MediaColor"" , & as )"		5057202	0		=			
ANR	5057394	Identifier	code		5057202	0					
ANR	5057395	CallExpression	"param_write_string ( mdict . list , ""MediaColor"" , & as )"		5057202	1					
ANR	5057396	Callee	param_write_string		5057202	0					
ANR	5057397	Identifier	param_write_string		5057202	0					
ANR	5057398	ArgumentList	mdict . list		5057202	1					
ANR	5057399	Argument	mdict . list		5057202	0					
ANR	5057400	MemberAccess	mdict . list		5057202	0					
ANR	5057401	Identifier	mdict		5057202	0					
ANR	5057402	Identifier	list		5057202	1					
ANR	5057403	Argument	"""MediaColor"""		5057202	1					
ANR	5057404	PrimaryExpression	"""MediaColor"""		5057202	0					
ANR	5057405	Argument	& as		5057202	2					
ANR	5057406	UnaryOperationExpression	& as		5057202	0					
ANR	5057407	UnaryOperator	&		5057202	0					
ANR	5057408	Identifier	as		5057202	1					
ANR	5057409	IfStatement	if ( code < 0 )		5057202	2					
ANR	5057410	Condition	code < 0	897:12:38231:38238	5057202	0	True				
ANR	5057411	RelationalExpression	code < 0		5057202	0		<			
ANR	5057412	Identifier	code		5057202	0					
ANR	5057413	PrimaryExpression	0		5057202	1					
ANR	5057414	ReturnStatement	return code ;	898:12:38253:38264	5057202	1	True				
ANR	5057415	Identifier	code		5057202	0					
ANR	5057416	IfStatement	if ( pim -> MediaWeight != 0 )		5057202	10					
ANR	5057417	Condition	pim -> MediaWeight != 0	900:8:38280:38300	5057202	0	True				
ANR	5057418	EqualityExpression	pim -> MediaWeight != 0		5057202	0		!=			
ANR	5057419	PtrMemberAccess	pim -> MediaWeight		5057202	0					
ANR	5057420	Identifier	pim		5057202	0					
ANR	5057421	Identifier	MediaWeight		5057202	1					
ANR	5057422	PrimaryExpression	0		5057202	1					
ANR	5057423	CompoundStatement		39:8:1195:1226	5057202	1					
ANR	5057424	IdentifierDeclStatement	float weight = pim -> MediaWeight ;	905:8:38459:38490	5057202	0	True				
ANR	5057425	IdentifierDecl	weight = pim -> MediaWeight		5057202	0					
ANR	5057426	IdentifierDeclType	float		5057202	0					
ANR	5057427	Identifier	weight		5057202	1					
ANR	5057428	AssignmentExpression	weight = pim -> MediaWeight		5057202	2		=			
ANR	5057429	Identifier	weight		5057202	0					
ANR	5057430	PtrMemberAccess	pim -> MediaWeight		5057202	1					
ANR	5057431	Identifier	pim		5057202	0					
ANR	5057432	Identifier	MediaWeight		5057202	1					
ANR	5057433	ExpressionStatement	"code = param_write_float ( mdict . list , ""MediaWeight"" , & weight )"	907:8:38501:38594	5057202	1	True				
ANR	5057434	AssignmentExpression	"code = param_write_float ( mdict . list , ""MediaWeight"" , & weight )"		5057202	0		=			
ANR	5057435	Identifier	code		5057202	0					
ANR	5057436	CallExpression	"param_write_float ( mdict . list , ""MediaWeight"" , & weight )"		5057202	1					
ANR	5057437	Callee	param_write_float		5057202	0					
ANR	5057438	Identifier	param_write_float		5057202	0					
ANR	5057439	ArgumentList	mdict . list		5057202	1					
ANR	5057440	Argument	mdict . list		5057202	0					
ANR	5057441	MemberAccess	mdict . list		5057202	0					
ANR	5057442	Identifier	mdict		5057202	0					
ANR	5057443	Identifier	list		5057202	1					
ANR	5057444	Argument	"""MediaWeight"""		5057202	1					
ANR	5057445	PrimaryExpression	"""MediaWeight"""		5057202	0					
ANR	5057446	Argument	& weight		5057202	2					
ANR	5057447	UnaryOperationExpression	& weight		5057202	0					
ANR	5057448	UnaryOperator	&		5057202	0					
ANR	5057449	Identifier	weight		5057202	1					
ANR	5057450	IfStatement	if ( code < 0 )		5057202	2					
ANR	5057451	Condition	code < 0	909:12:38608:38615	5057202	0	True				
ANR	5057452	RelationalExpression	code < 0		5057202	0		<			
ANR	5057453	Identifier	code		5057202	0					
ANR	5057454	PrimaryExpression	0		5057202	1					
ANR	5057455	ReturnStatement	return code ;	910:12:38630:38641	5057202	1	True				
ANR	5057456	Identifier	code		5057202	0					
ANR	5057457	ExpressionStatement	"code = finish_media ( mdict . list , ""MediaType"" , pim -> MediaType )"	912:4:38653:38713	5057202	11	True				
ANR	5057458	AssignmentExpression	"code = finish_media ( mdict . list , ""MediaType"" , pim -> MediaType )"		5057202	0		=			
ANR	5057459	Identifier	code		5057202	0					
ANR	5057460	CallExpression	"finish_media ( mdict . list , ""MediaType"" , pim -> MediaType )"		5057202	1					
ANR	5057461	Callee	finish_media		5057202	0					
ANR	5057462	Identifier	finish_media		5057202	0					
ANR	5057463	ArgumentList	mdict . list		5057202	1					
ANR	5057464	Argument	mdict . list		5057202	0					
ANR	5057465	MemberAccess	mdict . list		5057202	0					
ANR	5057466	Identifier	mdict		5057202	0					
ANR	5057467	Identifier	list		5057202	1					
ANR	5057468	Argument	"""MediaType"""		5057202	1					
ANR	5057469	PrimaryExpression	"""MediaType"""		5057202	0					
ANR	5057470	Argument	pim -> MediaType		5057202	2					
ANR	5057471	PtrMemberAccess	pim -> MediaType		5057202	0					
ANR	5057472	Identifier	pim		5057202	0					
ANR	5057473	Identifier	MediaType		5057202	1					
ANR	5057474	IfStatement	if ( code < 0 )		5057202	12					
ANR	5057475	Condition	code < 0	913:8:38723:38730	5057202	0	True				
ANR	5057476	RelationalExpression	code < 0		5057202	0		<			
ANR	5057477	Identifier	code		5057202	0					
ANR	5057478	PrimaryExpression	0		5057202	1					
ANR	5057479	ReturnStatement	return code ;	914:8:38741:38752	5057202	1	True				
ANR	5057480	Identifier	code		5057202	0					
ANR	5057481	ReturnStatement	"return param_end_write_dict ( pdict -> list , key , & mdict ) ;"	915:4:38758:38811	5057202	13	True				
ANR	5057482	CallExpression	"param_end_write_dict ( pdict -> list , key , & mdict )"		5057202	0					
ANR	5057483	Callee	param_end_write_dict		5057202	0					
ANR	5057484	Identifier	param_end_write_dict		5057202	0					
ANR	5057485	ArgumentList	pdict -> list		5057202	1					
ANR	5057486	Argument	pdict -> list		5057202	0					
ANR	5057487	PtrMemberAccess	pdict -> list		5057202	0					
ANR	5057488	Identifier	pdict		5057202	0					
ANR	5057489	Identifier	list		5057202	1					
ANR	5057490	Argument	key		5057202	1					
ANR	5057491	Identifier	key		5057202	0					
ANR	5057492	Argument	& mdict		5057202	2					
ANR	5057493	UnaryOperationExpression	& mdict		5057202	0					
ANR	5057494	UnaryOperator	&		5057202	0					
ANR	5057495	Identifier	mdict		5057202	1					
ANR	5057496	ReturnType	int		5057202	1					
ANR	5057497	Identifier	gdev_write_input_media		5057202	2					
ANR	5057498	ParameterList	"int index , gs_param_dict * pdict , const gdev_input_media_t * pim"		5057202	3					
ANR	5057499	Parameter	int index	865:23:37174:37182	5057202	0	True				
ANR	5057500	ParameterType	int		5057202	0					
ANR	5057501	Identifier	index		5057202	1					
ANR	5057502	Parameter	gs_param_dict * pdict	865:34:37185:37205	5057202	1	True				
ANR	5057503	ParameterType	gs_param_dict *		5057202	0					
ANR	5057504	Identifier	pdict		5057202	1					
ANR	5057505	Parameter	const gdev_input_media_t * pim	866:23:37231:37260	5057202	2	True				
ANR	5057506	ParameterType	const gdev_input_media_t *		5057202	0					
ANR	5057507	Identifier	pim		5057202	1					
ANR	5057508	CFGEntryNode	ENTRY		5057202		True				
ANR	5057509	CFGExitNode	EXIT		5057202		True				
ANR	5057510	Symbol	pim -> PageSize		5057202						
ANR	5057511	Symbol	code		5057202						
ANR	5057512	Symbol	mdict . size		5057202						
ANR	5057513	Symbol	finish_media		5057202						
ANR	5057514	Symbol	* pdict		5057202						
ANR	5057515	Symbol	pim -> MediaType		5057202						
ANR	5057516	Symbol	mdict		5057202						
ANR	5057517	Symbol	pim		5057202						
ANR	5057518	Symbol	pim -> MediaColor		5057202						
ANR	5057519	Symbol	psa . data		5057202						
ANR	5057520	Symbol	param_write_string		5057202						
ANR	5057521	Symbol	key		5057202						
ANR	5057522	Symbol	& mdict		5057202						
ANR	5057523	Symbol	param_write_float		5057202						
ANR	5057524	Symbol	& psa		5057202						
ANR	5057525	Symbol	psa . size		5057202						
ANR	5057526	Symbol	false		5057202						
ANR	5057527	Symbol	* * pim		5057202						
ANR	5057528	Symbol	index		5057202						
ANR	5057529	Symbol	weight		5057202						
ANR	5057530	Symbol	* pim -> PageSize		5057202						
ANR	5057531	Symbol	as		5057202						
ANR	5057532	Symbol	psa . persistent		5057202						
ANR	5057533	Symbol	& weight		5057202						
ANR	5057534	Symbol	pim -> MediaWeight		5057202						
ANR	5057535	Symbol	param_end_write_dict		5057202						
ANR	5057536	Symbol	param_write_float_array		5057202						
ANR	5057537	Symbol	& as		5057202						
ANR	5057538	Symbol	pdict -> list		5057202						
ANR	5057539	Symbol	* pim		5057202						
ANR	5057540	Symbol	mdict . list		5057202						
ANR	5057541	Symbol	pdict		5057202						
ANR	5057542	Symbol	param_begin_write_dict		5057202						
ANR	5057543	Symbol	psa		5057202						
ANR	5057544	Function	gdev_write_input_page_size	918:0:38816:39252							
ANR	5057545	FunctionDef	"gdev_write_input_page_size (int index , gs_param_dict * pdict , double width_points , double height_points)"		5057544	0					
ANR	5057546	CompoundStatement		921:0:38951:39252	5057544	0					
ANR	5057547	IdentifierDeclStatement	gdev_input_media_t media ;	922:4:38957:38981	5057544	0	True				
ANR	5057548	IdentifierDecl	media		5057544	0					
ANR	5057549	IdentifierDeclType	gdev_input_media_t		5057544	0					
ANR	5057550	Identifier	media		5057544	1					
ANR	5057551	ExpressionStatement	media . PageSize [ 0 ] = media . PageSize [ 2 ] = ( float ) width_points	924:4:38988:39048	5057544	1	True				
ANR	5057552	AssignmentExpression	media . PageSize [ 0 ] = media . PageSize [ 2 ] = ( float ) width_points		5057544	0		=			
ANR	5057553	ArrayIndexing	media . PageSize [ 0 ]		5057544	0					
ANR	5057554	MemberAccess	media . PageSize		5057544	0					
ANR	5057555	Identifier	media		5057544	0					
ANR	5057556	Identifier	PageSize		5057544	1					
ANR	5057557	PrimaryExpression	0		5057544	1					
ANR	5057558	AssignmentExpression	media . PageSize [ 2 ] = ( float ) width_points		5057544	1		=			
ANR	5057559	ArrayIndexing	media . PageSize [ 2 ]		5057544	0					
ANR	5057560	MemberAccess	media . PageSize		5057544	0					
ANR	5057561	Identifier	media		5057544	0					
ANR	5057562	Identifier	PageSize		5057544	1					
ANR	5057563	PrimaryExpression	2		5057544	1					
ANR	5057564	CastExpression	( float ) width_points		5057544	1					
ANR	5057565	CastTarget	float		5057544	0					
ANR	5057566	Identifier	width_points		5057544	1					
ANR	5057567	ExpressionStatement	media . PageSize [ 1 ] = media . PageSize [ 3 ] = ( float ) height_points	925:4:39054:39115	5057544	2	True				
ANR	5057568	AssignmentExpression	media . PageSize [ 1 ] = media . PageSize [ 3 ] = ( float ) height_points		5057544	0		=			
ANR	5057569	ArrayIndexing	media . PageSize [ 1 ]		5057544	0					
ANR	5057570	MemberAccess	media . PageSize		5057544	0					
ANR	5057571	Identifier	media		5057544	0					
ANR	5057572	Identifier	PageSize		5057544	1					
ANR	5057573	PrimaryExpression	1		5057544	1					
ANR	5057574	AssignmentExpression	media . PageSize [ 3 ] = ( float ) height_points		5057544	1		=			
ANR	5057575	ArrayIndexing	media . PageSize [ 3 ]		5057544	0					
ANR	5057576	MemberAccess	media . PageSize		5057544	0					
ANR	5057577	Identifier	media		5057544	0					
ANR	5057578	Identifier	PageSize		5057544	1					
ANR	5057579	PrimaryExpression	3		5057544	1					
ANR	5057580	CastExpression	( float ) height_points		5057544	1					
ANR	5057581	CastTarget	float		5057544	0					
ANR	5057582	Identifier	height_points		5057544	1					
ANR	5057583	ExpressionStatement	media . MediaColor = 0	926:4:39121:39141	5057544	3	True				
ANR	5057584	AssignmentExpression	media . MediaColor = 0		5057544	0		=			
ANR	5057585	MemberAccess	media . MediaColor		5057544	0					
ANR	5057586	Identifier	media		5057544	0					
ANR	5057587	Identifier	MediaColor		5057544	1					
ANR	5057588	PrimaryExpression	0		5057544	1					
ANR	5057589	ExpressionStatement	media . MediaWeight = 0	927:4:39147:39168	5057544	4	True				
ANR	5057590	AssignmentExpression	media . MediaWeight = 0		5057544	0		=			
ANR	5057591	MemberAccess	media . MediaWeight		5057544	0					
ANR	5057592	Identifier	media		5057544	0					
ANR	5057593	Identifier	MediaWeight		5057544	1					
ANR	5057594	PrimaryExpression	0		5057544	1					
ANR	5057595	ExpressionStatement	media . MediaType = 0	928:4:39174:39193	5057544	5	True				
ANR	5057596	AssignmentExpression	media . MediaType = 0		5057544	0		=			
ANR	5057597	MemberAccess	media . MediaType		5057544	0					
ANR	5057598	Identifier	media		5057544	0					
ANR	5057599	Identifier	MediaType		5057544	1					
ANR	5057600	PrimaryExpression	0		5057544	1					
ANR	5057601	ReturnStatement	"return gdev_write_input_media ( index , pdict , & media ) ;"	929:4:39199:39250	5057544	6	True				
ANR	5057602	CallExpression	"gdev_write_input_media ( index , pdict , & media )"		5057544	0					
ANR	5057603	Callee	gdev_write_input_media		5057544	0					
ANR	5057604	Identifier	gdev_write_input_media		5057544	0					
ANR	5057605	ArgumentList	index		5057544	1					
ANR	5057606	Argument	index		5057544	0					
ANR	5057607	Identifier	index		5057544	0					
ANR	5057608	Argument	pdict		5057544	1					
ANR	5057609	Identifier	pdict		5057544	0					
ANR	5057610	Argument	& media		5057544	2					
ANR	5057611	UnaryOperationExpression	& media		5057544	0					
ANR	5057612	UnaryOperator	&		5057544	0					
ANR	5057613	Identifier	media		5057544	1					
ANR	5057614	ReturnType	int		5057544	1					
ANR	5057615	Identifier	gdev_write_input_page_size		5057544	2					
ANR	5057616	ParameterList	"int index , gs_param_dict * pdict , double width_points , double height_points"		5057544	3					
ANR	5057617	Parameter	int index	919:27:38847:38855	5057544	0	True				
ANR	5057618	ParameterType	int		5057544	0					
ANR	5057619	Identifier	index		5057544	1					
ANR	5057620	Parameter	gs_param_dict * pdict	919:38:38858:38878	5057544	1	True				
ANR	5057621	ParameterType	gs_param_dict *		5057544	0					
ANR	5057622	Identifier	pdict		5057544	1					
ANR	5057623	Parameter	double width_points	920:27:38908:38926	5057544	2	True				
ANR	5057624	ParameterType	double		5057544	0					
ANR	5057625	Identifier	width_points		5057544	1					
ANR	5057626	Parameter	double height_points	920:48:38929:38948	5057544	3	True				
ANR	5057627	ParameterType	double		5057544	0					
ANR	5057628	Identifier	height_points		5057544	1					
ANR	5057629	CFGEntryNode	ENTRY		5057544		True				
ANR	5057630	CFGExitNode	EXIT		5057544		True				
ANR	5057631	Symbol	media . MediaColor		5057544						
ANR	5057632	Symbol	media . MediaType		5057544						
ANR	5057633	Symbol	* media . PageSize		5057544						
ANR	5057634	Symbol	height_points		5057544						
ANR	5057635	Symbol	index		5057544						
ANR	5057636	Symbol	media		5057544						
ANR	5057637	Symbol	gdev_write_input_media		5057544						
ANR	5057638	Symbol	width_points		5057544						
ANR	5057639	Symbol	media . PageSize		5057544						
ANR	5057640	Symbol	& media		5057544						
ANR	5057641	Symbol	* media		5057544						
ANR	5057642	Symbol	pdict		5057544						
ANR	5057643	Symbol	media . MediaWeight		5057544						
ANR	5057644	Function	gdev_end_input_media	932:0:39255:39394							
ANR	5057645	FunctionDef	"gdev_end_input_media (gs_param_list * mlist , gs_param_dict * pdict)"		5057644	0					
ANR	5057646	CompoundStatement		934:0:39326:39394	5057644	0					
ANR	5057647	ReturnStatement	"return param_end_write_dict ( mlist , ""InputAttributes"" , pdict ) ;"	935:4:39332:39392	5057644	0	True				
ANR	5057648	CallExpression	"param_end_write_dict ( mlist , ""InputAttributes"" , pdict )"		5057644	0					
ANR	5057649	Callee	param_end_write_dict		5057644	0					
ANR	5057650	Identifier	param_end_write_dict		5057644	0					
ANR	5057651	ArgumentList	mlist		5057644	1					
ANR	5057652	Argument	mlist		5057644	0					
ANR	5057653	Identifier	mlist		5057644	0					
ANR	5057654	Argument	"""InputAttributes"""		5057644	1					
ANR	5057655	PrimaryExpression	"""InputAttributes"""		5057644	0					
ANR	5057656	Argument	pdict		5057644	2					
ANR	5057657	Identifier	pdict		5057644	0					
ANR	5057658	ReturnType	int		5057644	1					
ANR	5057659	Identifier	gdev_end_input_media		5057644	2					
ANR	5057660	ParameterList	"gs_param_list * mlist , gs_param_dict * pdict"		5057644	3					
ANR	5057661	Parameter	gs_param_list * mlist	933:21:39280:39300	5057644	0	True				
ANR	5057662	ParameterType	gs_param_list *		5057644	0					
ANR	5057663	Identifier	mlist		5057644	1					
ANR	5057664	Parameter	gs_param_dict * pdict	933:44:39303:39323	5057644	1	True				
ANR	5057665	ParameterType	gs_param_dict *		5057644	0					
ANR	5057666	Identifier	pdict		5057644	1					
ANR	5057667	CFGEntryNode	ENTRY		5057644		True				
ANR	5057668	CFGExitNode	EXIT		5057644		True				
ANR	5057669	Symbol	mlist		5057644						
ANR	5057670	Symbol	param_end_write_dict		5057644						
ANR	5057671	Symbol	pdict		5057644						
ANR	5057672	DeclStmt									
ANR	5057673	Decl							const gdev_output_media_t	const gdev_output_media_t	gdev_output_media_default
ANR	5057674	Function	gdev_begin_output_media	945:0:39522:39733							
ANR	5057675	FunctionDef	"gdev_begin_output_media (gs_param_list * mlist , gs_param_dict * pdict , int count)"		5057674	0					
ANR	5057676	CompoundStatement		948:0:39631:39733	5057674	0					
ANR	5057677	ExpressionStatement	pdict -> size = count	949:4:39637:39656	5057674	0	True				
ANR	5057678	AssignmentExpression	pdict -> size = count		5057674	0		=			
ANR	5057679	PtrMemberAccess	pdict -> size		5057674	0					
ANR	5057680	Identifier	pdict		5057674	0					
ANR	5057681	Identifier	size		5057674	1					
ANR	5057682	Identifier	count		5057674	1					
ANR	5057683	ReturnStatement	"return param_begin_write_dict ( mlist , ""OutputAttributes"" , pdict , true ) ;"	950:4:39662:39731	5057674	1	True				
ANR	5057684	CallExpression	"param_begin_write_dict ( mlist , ""OutputAttributes"" , pdict , true )"		5057674	0					
ANR	5057685	Callee	param_begin_write_dict		5057674	0					
ANR	5057686	Identifier	param_begin_write_dict		5057674	0					
ANR	5057687	ArgumentList	mlist		5057674	1					
ANR	5057688	Argument	mlist		5057674	0					
ANR	5057689	Identifier	mlist		5057674	0					
ANR	5057690	Argument	"""OutputAttributes"""		5057674	1					
ANR	5057691	PrimaryExpression	"""OutputAttributes"""		5057674	0					
ANR	5057692	Argument	pdict		5057674	2					
ANR	5057693	Identifier	pdict		5057674	0					
ANR	5057694	Argument	true		5057674	3					
ANR	5057695	Identifier	true		5057674	0					
ANR	5057696	ReturnType	int		5057674	1					
ANR	5057697	Identifier	gdev_begin_output_media		5057674	2					
ANR	5057698	ParameterList	"gs_param_list * mlist , gs_param_dict * pdict , int count"		5057674	3					
ANR	5057699	Parameter	gs_param_list * mlist	946:24:39550:39570	5057674	0	True				
ANR	5057700	ParameterType	gs_param_list *		5057674	0					
ANR	5057701	Identifier	mlist		5057674	1					
ANR	5057702	Parameter	gs_param_dict * pdict	946:47:39573:39593	5057674	1	True				
ANR	5057703	ParameterType	gs_param_dict *		5057674	0					
ANR	5057704	Identifier	pdict		5057674	1					
ANR	5057705	Parameter	int count	947:24:39620:39628	5057674	2	True				
ANR	5057706	ParameterType	int		5057674	0					
ANR	5057707	Identifier	count		5057674	1					
ANR	5057708	CFGEntryNode	ENTRY		5057674		True				
ANR	5057709	CFGExitNode	EXIT		5057674		True				
ANR	5057710	Symbol	pdict -> size		5057674						
ANR	5057711	Symbol	count		5057674						
ANR	5057712	Symbol	true		5057674						
ANR	5057713	Symbol	mlist		5057674						
ANR	5057714	Symbol	* pdict		5057674						
ANR	5057715	Symbol	pdict		5057674						
ANR	5057716	Symbol	param_begin_write_dict		5057674						
ANR	5057717	Function	gdev_write_output_media	953:0:39736:40242							
ANR	5057718	FunctionDef	"gdev_write_output_media (int index , gs_param_dict * pdict , const gdev_output_media_t * pom)"		5057717	0					
ANR	5057719	CompoundStatement		956:0:39855:40242	5057717	0					
ANR	5057720	IdentifierDeclStatement	char key [ 25 ] ;	957:4:39861:39873	5057717	0	True				
ANR	5057721	IdentifierDecl	key [ 25 ]		5057717	0					
ANR	5057722	IdentifierDeclType	char [ 25 ]		5057717	0					
ANR	5057723	Identifier	key		5057717	1					
ANR	5057724	PrimaryExpression	25		5057717	2					
ANR	5057725	IdentifierDeclStatement	gs_param_dict mdict ;	958:4:39879:39898	5057717	1	True				
ANR	5057726	IdentifierDecl	mdict		5057717	0					
ANR	5057727	IdentifierDeclType	gs_param_dict		5057717	0					
ANR	5057728	Identifier	mdict		5057717	1					
ANR	5057729	IdentifierDeclStatement	int code ;	959:4:39904:39912	5057717	2	True				
ANR	5057730	IdentifierDecl	code		5057717	0					
ANR	5057731	IdentifierDeclType	int		5057717	0					
ANR	5057732	Identifier	code		5057717	1					
ANR	5057733	ExpressionStatement	"gs_sprintf ( key , ""%d"" , index )"	961:4:39919:39947	5057717	3	True				
ANR	5057734	CallExpression	"gs_sprintf ( key , ""%d"" , index )"		5057717	0					
ANR	5057735	Callee	gs_sprintf		5057717	0					
ANR	5057736	Identifier	gs_sprintf		5057717	0					
ANR	5057737	ArgumentList	key		5057717	1					
ANR	5057738	Argument	key		5057717	0					
ANR	5057739	Identifier	key		5057717	0					
ANR	5057740	Argument	"""%d"""		5057717	1					
ANR	5057741	PrimaryExpression	"""%d"""		5057717	0					
ANR	5057742	Argument	index		5057717	2					
ANR	5057743	Identifier	index		5057717	0					
ANR	5057744	ExpressionStatement	mdict . size = 4	962:4:39953:39967	5057717	4	True				
ANR	5057745	AssignmentExpression	mdict . size = 4		5057717	0		=			
ANR	5057746	MemberAccess	mdict . size		5057717	0					
ANR	5057747	Identifier	mdict		5057717	0					
ANR	5057748	Identifier	size		5057717	1					
ANR	5057749	PrimaryExpression	4		5057717	1					
ANR	5057750	ExpressionStatement	"code = param_begin_write_dict ( pdict -> list , key , & mdict , false )"	963:4:39973:40035	5057717	5	True				
ANR	5057751	AssignmentExpression	"code = param_begin_write_dict ( pdict -> list , key , & mdict , false )"		5057717	0		=			
ANR	5057752	Identifier	code		5057717	0					
ANR	5057753	CallExpression	"param_begin_write_dict ( pdict -> list , key , & mdict , false )"		5057717	1					
ANR	5057754	Callee	param_begin_write_dict		5057717	0					
ANR	5057755	Identifier	param_begin_write_dict		5057717	0					
ANR	5057756	ArgumentList	pdict -> list		5057717	1					
ANR	5057757	Argument	pdict -> list		5057717	0					
ANR	5057758	PtrMemberAccess	pdict -> list		5057717	0					
ANR	5057759	Identifier	pdict		5057717	0					
ANR	5057760	Identifier	list		5057717	1					
ANR	5057761	Argument	key		5057717	1					
ANR	5057762	Identifier	key		5057717	0					
ANR	5057763	Argument	& mdict		5057717	2					
ANR	5057764	UnaryOperationExpression	& mdict		5057717	0					
ANR	5057765	UnaryOperator	&		5057717	0					
ANR	5057766	Identifier	mdict		5057717	1					
ANR	5057767	Argument	false		5057717	3					
ANR	5057768	Identifier	false		5057717	0					
ANR	5057769	IfStatement	if ( code < 0 )		5057717	6					
ANR	5057770	Condition	code < 0	964:8:40045:40052	5057717	0	True				
ANR	5057771	RelationalExpression	code < 0		5057717	0		<			
ANR	5057772	Identifier	code		5057717	0					
ANR	5057773	PrimaryExpression	0		5057717	1					
ANR	5057774	ReturnStatement	return code ;	965:8:40063:40074	5057717	1	True				
ANR	5057775	Identifier	code		5057717	0					
ANR	5057776	ExpressionStatement	"code = finish_media ( mdict . list , ""OutputType"" , pom -> OutputType )"	966:4:40080:40142	5057717	7	True				
ANR	5057777	AssignmentExpression	"code = finish_media ( mdict . list , ""OutputType"" , pom -> OutputType )"		5057717	0		=			
ANR	5057778	Identifier	code		5057717	0					
ANR	5057779	CallExpression	"finish_media ( mdict . list , ""OutputType"" , pom -> OutputType )"		5057717	1					
ANR	5057780	Callee	finish_media		5057717	0					
ANR	5057781	Identifier	finish_media		5057717	0					
ANR	5057782	ArgumentList	mdict . list		5057717	1					
ANR	5057783	Argument	mdict . list		5057717	0					
ANR	5057784	MemberAccess	mdict . list		5057717	0					
ANR	5057785	Identifier	mdict		5057717	0					
ANR	5057786	Identifier	list		5057717	1					
ANR	5057787	Argument	"""OutputType"""		5057717	1					
ANR	5057788	PrimaryExpression	"""OutputType"""		5057717	0					
ANR	5057789	Argument	pom -> OutputType		5057717	2					
ANR	5057790	PtrMemberAccess	pom -> OutputType		5057717	0					
ANR	5057791	Identifier	pom		5057717	0					
ANR	5057792	Identifier	OutputType		5057717	1					
ANR	5057793	IfStatement	if ( code < 0 )		5057717	8					
ANR	5057794	Condition	code < 0	967:8:40152:40159	5057717	0	True				
ANR	5057795	RelationalExpression	code < 0		5057717	0		<			
ANR	5057796	Identifier	code		5057717	0					
ANR	5057797	PrimaryExpression	0		5057717	1					
ANR	5057798	ReturnStatement	return code ;	968:8:40170:40181	5057717	1	True				
ANR	5057799	Identifier	code		5057717	0					
ANR	5057800	ReturnStatement	"return param_end_write_dict ( pdict -> list , key , & mdict ) ;"	969:4:40187:40240	5057717	9	True				
ANR	5057801	CallExpression	"param_end_write_dict ( pdict -> list , key , & mdict )"		5057717	0					
ANR	5057802	Callee	param_end_write_dict		5057717	0					
ANR	5057803	Identifier	param_end_write_dict		5057717	0					
ANR	5057804	ArgumentList	pdict -> list		5057717	1					
ANR	5057805	Argument	pdict -> list		5057717	0					
ANR	5057806	PtrMemberAccess	pdict -> list		5057717	0					
ANR	5057807	Identifier	pdict		5057717	0					
ANR	5057808	Identifier	list		5057717	1					
ANR	5057809	Argument	key		5057717	1					
ANR	5057810	Identifier	key		5057717	0					
ANR	5057811	Argument	& mdict		5057717	2					
ANR	5057812	UnaryOperationExpression	& mdict		5057717	0					
ANR	5057813	UnaryOperator	&		5057717	0					
ANR	5057814	Identifier	mdict		5057717	1					
ANR	5057815	ReturnType	int		5057717	1					
ANR	5057816	Identifier	gdev_write_output_media		5057717	2					
ANR	5057817	ParameterList	"int index , gs_param_dict * pdict , const gdev_output_media_t * pom"		5057717	3					
ANR	5057818	Parameter	int index	954:24:39764:39772	5057717	0	True				
ANR	5057819	ParameterType	int		5057717	0					
ANR	5057820	Identifier	index		5057717	1					
ANR	5057821	Parameter	gs_param_dict * pdict	954:35:39775:39795	5057717	1	True				
ANR	5057822	ParameterType	gs_param_dict *		5057717	0					
ANR	5057823	Identifier	pdict		5057717	1					
ANR	5057824	Parameter	const gdev_output_media_t * pom	955:24:39822:39852	5057717	2	True				
ANR	5057825	ParameterType	const gdev_output_media_t *		5057717	0					
ANR	5057826	Identifier	pom		5057717	1					
ANR	5057827	CFGEntryNode	ENTRY		5057717		True				
ANR	5057828	CFGExitNode	EXIT		5057717		True				
ANR	5057829	Symbol	code		5057717						
ANR	5057830	Symbol	pom -> OutputType		5057717						
ANR	5057831	Symbol	mdict . size		5057717						
ANR	5057832	Symbol	false		5057717						
ANR	5057833	Symbol	finish_media		5057717						
ANR	5057834	Symbol	index		5057717						
ANR	5057835	Symbol	* pdict		5057717						
ANR	5057836	Symbol	mdict		5057717						
ANR	5057837	Symbol	pom		5057717						
ANR	5057838	Symbol	* pom		5057717						
ANR	5057839	Symbol	param_end_write_dict		5057717						
ANR	5057840	Symbol	key		5057717						
ANR	5057841	Symbol	pdict -> list		5057717						
ANR	5057842	Symbol	mdict . list		5057717						
ANR	5057843	Symbol	pdict		5057717						
ANR	5057844	Symbol	param_begin_write_dict		5057717						
ANR	5057845	Symbol	& mdict		5057717						
ANR	5057846	Function	gdev_end_output_media	972:0:40245:40386							
ANR	5057847	FunctionDef	"gdev_end_output_media (gs_param_list * mlist , gs_param_dict * pdict)"		5057846	0					
ANR	5057848	CompoundStatement		974:0:40317:40386	5057846	0					
ANR	5057849	ReturnStatement	"return param_end_write_dict ( mlist , ""OutputAttributes"" , pdict ) ;"	975:4:40323:40384	5057846	0	True				
ANR	5057850	CallExpression	"param_end_write_dict ( mlist , ""OutputAttributes"" , pdict )"		5057846	0					
ANR	5057851	Callee	param_end_write_dict		5057846	0					
ANR	5057852	Identifier	param_end_write_dict		5057846	0					
ANR	5057853	ArgumentList	mlist		5057846	1					
ANR	5057854	Argument	mlist		5057846	0					
ANR	5057855	Identifier	mlist		5057846	0					
ANR	5057856	Argument	"""OutputAttributes"""		5057846	1					
ANR	5057857	PrimaryExpression	"""OutputAttributes"""		5057846	0					
ANR	5057858	Argument	pdict		5057846	2					
ANR	5057859	Identifier	pdict		5057846	0					
ANR	5057860	ReturnType	int		5057846	1					
ANR	5057861	Identifier	gdev_end_output_media		5057846	2					
ANR	5057862	ParameterList	"gs_param_list * mlist , gs_param_dict * pdict"		5057846	3					
ANR	5057863	Parameter	gs_param_list * mlist	973:22:40271:40291	5057846	0	True				
ANR	5057864	ParameterType	gs_param_list *		5057846	0					
ANR	5057865	Identifier	mlist		5057846	1					
ANR	5057866	Parameter	gs_param_dict * pdict	973:45:40294:40314	5057846	1	True				
ANR	5057867	ParameterType	gs_param_dict *		5057846	0					
ANR	5057868	Identifier	pdict		5057846	1					
ANR	5057869	CFGEntryNode	ENTRY		5057846		True				
ANR	5057870	CFGExitNode	EXIT		5057846		True				
ANR	5057871	Symbol	mlist		5057846						
ANR	5057872	Symbol	param_end_write_dict		5057846						
ANR	5057873	Symbol	pdict		5057846						
ANR	5057874	DeclStmt									
ANR	5057875	Decl							int	"int ( uint max_gray , int bits )"	param_normalize_anti_alias_bits
ANR	5057876	DeclStmt									
ANR	5057877	Decl							int	"int ( gs_param_list * , gs_param_name , int * )"	param_anti_alias_bits
ANR	5057878	DeclStmt									
ANR	5057879	Decl							int	"int ( gs_param_list * , gs_param_name , const float * , gs_param_float_array * )"	param_MediaSize
ANR	5057880	DeclStmt									
ANR	5057881	Decl							int	"int ( gs_param_list * , gs_param_name , bool , bool )"	param_check_bool
ANR	5057882	DeclStmt									
ANR	5057883	Decl							int	"int ( gs_param_list * , gs_param_name , long , bool )"	param_check_long
ANR	5057884	DeclStmt									
ANR	5057885	Decl							int	"int ( gs_param_list * , gs_param_name , const byte * , uint , bool )"	param_check_bytes
ANR	5057886	Function	gs_putdeviceparams	999:0:41472:41865							
ANR	5057887	FunctionDef	"gs_putdeviceparams (gx_device * dev , gs_param_list * plist)"		5057886	0					
ANR	5057888	CompoundStatement		1001:0:41535:41865	5057886	0					
ANR	5057889	IdentifierDeclStatement	bool was_open = dev -> is_open ;	1002:4:41541:41569	5057886	0	True				
ANR	5057890	IdentifierDecl	was_open = dev -> is_open		5057886	0					
ANR	5057891	IdentifierDeclType	bool		5057886	0					
ANR	5057892	Identifier	was_open		5057886	1					
ANR	5057893	AssignmentExpression	was_open = dev -> is_open		5057886	2		=			
ANR	5057894	Identifier	was_open		5057886	0					
ANR	5057895	PtrMemberAccess	dev -> is_open		5057886	1					
ANR	5057896	Identifier	dev		5057886	0					
ANR	5057897	Identifier	is_open		5057886	1					
ANR	5057898	IdentifierDeclStatement	int code ;	1003:4:41575:41583	5057886	1	True				
ANR	5057899	IdentifierDecl	code		5057886	0					
ANR	5057900	IdentifierDeclType	int		5057886	0					
ANR	5057901	Identifier	code		5057886	1					
ANR	5057902	ExpressionStatement	gx_device_set_procs ( dev )	1005:4:41590:41614	5057886	2	True				
ANR	5057903	CallExpression	gx_device_set_procs ( dev )		5057886	0					
ANR	5057904	Callee	gx_device_set_procs		5057886	0					
ANR	5057905	Identifier	gx_device_set_procs		5057886	0					
ANR	5057906	ArgumentList	dev		5057886	1					
ANR	5057907	Argument	dev		5057886	0					
ANR	5057908	Identifier	dev		5057886	0					
ANR	5057909	ExpressionStatement	"fill_dev_proc ( dev , put_params , gx_default_put_params )"	1006:4:41620:41673	5057886	3	True				
ANR	5057910	CallExpression	"fill_dev_proc ( dev , put_params , gx_default_put_params )"		5057886	0					
ANR	5057911	Callee	fill_dev_proc		5057886	0					
ANR	5057912	Identifier	fill_dev_proc		5057886	0					
ANR	5057913	ArgumentList	dev		5057886	1					
ANR	5057914	Argument	dev		5057886	0					
ANR	5057915	Identifier	dev		5057886	0					
ANR	5057916	Argument	put_params		5057886	1					
ANR	5057917	Identifier	put_params		5057886	0					
ANR	5057918	Argument	gx_default_put_params		5057886	2					
ANR	5057919	Identifier	gx_default_put_params		5057886	0					
ANR	5057920	ExpressionStatement	"fill_dev_proc ( dev , get_alpha_bits , gx_default_get_alpha_bits )"	1007:4:41679:41740	5057886	4	True				
ANR	5057921	CallExpression	"fill_dev_proc ( dev , get_alpha_bits , gx_default_get_alpha_bits )"		5057886	0					
ANR	5057922	Callee	fill_dev_proc		5057886	0					
ANR	5057923	Identifier	fill_dev_proc		5057886	0					
ANR	5057924	ArgumentList	dev		5057886	1					
ANR	5057925	Argument	dev		5057886	0					
ANR	5057926	Identifier	dev		5057886	0					
ANR	5057927	Argument	get_alpha_bits		5057886	1					
ANR	5057928	Identifier	get_alpha_bits		5057886	0					
ANR	5057929	Argument	gx_default_get_alpha_bits		5057886	2					
ANR	5057930	Identifier	gx_default_get_alpha_bits		5057886	0					
ANR	5057931	ExpressionStatement	"code = ( * dev_proc ( dev , put_params ) ) ( dev , plist )"	1008:4:41746:41794	5057886	5	True				
ANR	5057932	AssignmentExpression	"code = ( * dev_proc ( dev , put_params ) ) ( dev , plist )"		5057886	0		=			
ANR	5057933	Identifier	code		5057886	0					
ANR	5057934	CallExpression	"( * dev_proc ( dev , put_params ) ) ( dev , plist )"		5057886	1					
ANR	5057935	Callee	"* dev_proc ( dev , put_params )"		5057886	0					
ANR	5057936	UnaryOperationExpression	"* dev_proc ( dev , put_params )"		5057886	0					
ANR	5057937	UnaryOperator	*		5057886	0					
ANR	5057938	CallExpression	"dev_proc ( dev , put_params )"		5057886	1					
ANR	5057939	Callee	dev_proc		5057886	0					
ANR	5057940	Identifier	dev_proc		5057886	0					
ANR	5057941	ArgumentList	dev		5057886	1					
ANR	5057942	Argument	dev		5057886	0					
ANR	5057943	Identifier	dev		5057886	0					
ANR	5057944	Argument	put_params		5057886	1					
ANR	5057945	Identifier	put_params		5057886	0					
ANR	5057946	ArgumentList	dev		5057886	1					
ANR	5057947	Argument	dev		5057886	0					
ANR	5057948	Identifier	dev		5057886	0					
ANR	5057949	Argument	plist		5057886	1					
ANR	5057950	Identifier	plist		5057886	0					
ANR	5057951	ReturnStatement	return ( code < 0 ? code : was_open && ! dev -> is_open ? 1 : code ) ;	1009:4:41800:41863	5057886	6	True				
ANR	5057952	ConditionalExpression	code < 0 ? code : was_open && ! dev -> is_open ? 1 : code		5057886	0					
ANR	5057953	Condition	code < 0		5057886	0					
ANR	5057954	RelationalExpression	code < 0		5057886	0		<			
ANR	5057955	Identifier	code		5057886	0					
ANR	5057956	PrimaryExpression	0		5057886	1					
ANR	5057957	Identifier	code		5057886	1					
ANR	5057958	ConditionalExpression	was_open && ! dev -> is_open ? 1 : code		5057886	2					
ANR	5057959	Condition	was_open && ! dev -> is_open		5057886	0					
ANR	5057960	AndExpression	was_open && ! dev -> is_open		5057886	0		&&			
ANR	5057961	Identifier	was_open		5057886	0					
ANR	5057962	UnaryOperationExpression	! dev -> is_open		5057886	1					
ANR	5057963	UnaryOperator	!		5057886	0					
ANR	5057964	PtrMemberAccess	dev -> is_open		5057886	1					
ANR	5057965	Identifier	dev		5057886	0					
ANR	5057966	Identifier	is_open		5057886	1					
ANR	5057967	PrimaryExpression	1		5057886	1					
ANR	5057968	Identifier	code		5057886	2					
ANR	5057969	ReturnType	int		5057886	1					
ANR	5057970	Identifier	gs_putdeviceparams		5057886	2					
ANR	5057971	ParameterList	"gx_device * dev , gs_param_list * plist"		5057886	3					
ANR	5057972	Parameter	gx_device * dev	1000:19:41495:41509	5057886	0	True				
ANR	5057973	ParameterType	gx_device *		5057886	0					
ANR	5057974	Identifier	dev		5057886	1					
ANR	5057975	Parameter	gs_param_list * plist	1000:36:41512:41532	5057886	1	True				
ANR	5057976	ParameterType	gs_param_list *		5057886	0					
ANR	5057977	Identifier	plist		5057886	1					
ANR	5057978	CFGEntryNode	ENTRY		5057886		True				
ANR	5057979	CFGExitNode	EXIT		5057886		True				
ANR	5057980	Symbol	* dev		5057886						
ANR	5057981	Symbol	code		5057886						
ANR	5057982	Symbol	* dev_proc		5057886						
ANR	5057983	Symbol	get_alpha_bits		5057886						
ANR	5057984	Symbol	plist		5057886						
ANR	5057985	Symbol	gx_default_put_params		5057886						
ANR	5057986	Symbol	dev -> is_open		5057886						
ANR	5057987	Symbol	dev		5057886						
ANR	5057988	Symbol	was_open		5057886						
ANR	5057989	Symbol	dev_proc		5057886						
ANR	5057990	Symbol	gx_default_get_alpha_bits		5057886						
ANR	5057991	Symbol	put_params		5057886						
ANR	5057992	Symbol	"* dev_proc ( dev , put_params )"		5057886						
ANR	5057993	Function	gx_default_put_graydetection	1012:0:41868:43426							
ANR	5057994	FunctionDef	"gx_default_put_graydetection (bool graydetection , gx_device * dev)"		5057993	0					
ANR	5057995	CompoundStatement		1014:0:41945:43426	5057993	0					
ANR	5057996	IdentifierDeclStatement	int code = 0 ;	1015:4:41951:41963	5057993	0	True				
ANR	5057997	IdentifierDecl	code = 0		5057993	0					
ANR	5057998	IdentifierDeclType	int		5057993	0					
ANR	5057999	Identifier	code		5057993	1					
ANR	5058000	AssignmentExpression	code = 0		5057993	2		=			
ANR	5058001	Identifier	code		5057993	0					
ANR	5058002	PrimaryExpression	0		5057993	1					
ANR	5058003	IdentifierDeclStatement	cmm_dev_profile_t * profile_struct ;	1016:4:41969:42002	5057993	1	True				
ANR	5058004	IdentifierDecl	* profile_struct		5057993	0					
ANR	5058005	IdentifierDeclType	cmm_dev_profile_t *		5057993	0					
ANR	5058006	Identifier	profile_struct		5057993	1					
ANR	5058007	IfStatement	"if ( dev_proc ( dev , get_profile ) == NULL )"		5057993	2					
ANR	5058008	Condition	"dev_proc ( dev , get_profile ) == NULL"	1022:8:42282:42315	5057993	0	True				
ANR	5058009	EqualityExpression	"dev_proc ( dev , get_profile ) == NULL"		5057993	0		==			
ANR	5058010	CallExpression	"dev_proc ( dev , get_profile )"		5057993	0					
ANR	5058011	Callee	dev_proc		5057993	0					
ANR	5058012	Identifier	dev_proc		5057993	0					
ANR	5058013	ArgumentList	dev		5057993	1					
ANR	5058014	Argument	dev		5057993	0					
ANR	5058015	Identifier	dev		5057993	0					
ANR	5058016	Argument	get_profile		5057993	1					
ANR	5058017	Identifier	get_profile		5057993	0					
ANR	5058018	Identifier	NULL		5057993	1					
ANR	5058019	CompoundStatement		9:44:372:372	5057993	1					
ANR	5058020	IfStatement	if ( dev -> icc_struct == NULL )		5057993	0					
ANR	5058021	Condition	dev -> icc_struct == NULL	1029:12:42730:42752	5057993	0	True				
ANR	5058022	EqualityExpression	dev -> icc_struct == NULL		5057993	0		==			
ANR	5058023	PtrMemberAccess	dev -> icc_struct		5057993	0					
ANR	5058024	Identifier	dev		5057993	0					
ANR	5058025	Identifier	icc_struct		5057993	1					
ANR	5058026	Identifier	NULL		5057993	1					
ANR	5058027	CompoundStatement		16:37:809:809	5057993	1					
ANR	5058028	ExpressionStatement	dev -> icc_struct = gsicc_new_device_profile_array ( dev -> memory )	1031:12:42823:42884	5057993	0	True				
ANR	5058029	AssignmentExpression	dev -> icc_struct = gsicc_new_device_profile_array ( dev -> memory )		5057993	0		=			
ANR	5058030	PtrMemberAccess	dev -> icc_struct		5057993	0					
ANR	5058031	Identifier	dev		5057993	0					
ANR	5058032	Identifier	icc_struct		5057993	1					
ANR	5058033	CallExpression	gsicc_new_device_profile_array ( dev -> memory )		5057993	1					
ANR	5058034	Callee	gsicc_new_device_profile_array		5057993	0					
ANR	5058035	Identifier	gsicc_new_device_profile_array		5057993	0					
ANR	5058036	ArgumentList	dev -> memory		5057993	1					
ANR	5058037	Argument	dev -> memory		5057993	0					
ANR	5058038	PtrMemberAccess	dev -> memory		5057993	0					
ANR	5058039	Identifier	dev		5057993	0					
ANR	5058040	Identifier	memory		5057993	1					
ANR	5058041	ExpressionStatement	dev -> icc_struct -> graydetection = graydetection	1033:8:42904:42950	5057993	1	True				
ANR	5058042	AssignmentExpression	dev -> icc_struct -> graydetection = graydetection		5057993	0		=			
ANR	5058043	PtrMemberAccess	dev -> icc_struct -> graydetection		5057993	0					
ANR	5058044	PtrMemberAccess	dev -> icc_struct		5057993	0					
ANR	5058045	Identifier	dev		5057993	0					
ANR	5058046	Identifier	icc_struct		5057993	1					
ANR	5058047	Identifier	graydetection		5057993	1					
ANR	5058048	Identifier	graydetection		5057993	1					
ANR	5058049	ExpressionStatement	dev -> icc_struct -> pageneutralcolor = graydetection	1034:8:42960:43009	5057993	2	True				
ANR	5058050	AssignmentExpression	dev -> icc_struct -> pageneutralcolor = graydetection		5057993	0		=			
ANR	5058051	PtrMemberAccess	dev -> icc_struct -> pageneutralcolor		5057993	0					
ANR	5058052	PtrMemberAccess	dev -> icc_struct		5057993	0					
ANR	5058053	Identifier	dev		5057993	0					
ANR	5058054	Identifier	icc_struct		5057993	1					
ANR	5058055	Identifier	pageneutralcolor		5057993	1					
ANR	5058056	Identifier	graydetection		5057993	1					
ANR	5058057	ElseStatement	else		5057993	0					
ANR	5058058	CompoundStatement		22:11:1076:1076	5057993	0					
ANR	5058059	ExpressionStatement	"code = dev_proc ( dev , get_profile ) ( dev , & profile_struct )"	1036:8:43032:43088	5057993	0	True				
ANR	5058060	AssignmentExpression	"code = dev_proc ( dev , get_profile ) ( dev , & profile_struct )"		5057993	0		=			
ANR	5058061	Identifier	code		5057993	0					
ANR	5058062	CallExpression	"dev_proc ( dev , get_profile ) ( dev , & profile_struct )"		5057993	1					
ANR	5058063	Callee	"dev_proc ( dev , get_profile )"		5057993	0					
ANR	5058064	CallExpression	"dev_proc ( dev , get_profile )"		5057993	0					
ANR	5058065	Callee	dev_proc		5057993	0					
ANR	5058066	Identifier	dev_proc		5057993	0					
ANR	5058067	ArgumentList	dev		5057993	1					
ANR	5058068	Argument	dev		5057993	0					
ANR	5058069	Identifier	dev		5057993	0					
ANR	5058070	Argument	get_profile		5057993	1					
ANR	5058071	Identifier	get_profile		5057993	0					
ANR	5058072	ArgumentList	dev		5057993	1					
ANR	5058073	Argument	dev		5057993	0					
ANR	5058074	Identifier	dev		5057993	0					
ANR	5058075	Argument	& profile_struct		5057993	1					
ANR	5058076	UnaryOperationExpression	& profile_struct		5057993	0					
ANR	5058077	UnaryOperator	&		5057993	0					
ANR	5058078	Identifier	profile_struct		5057993	1					
ANR	5058079	IfStatement	if ( profile_struct == NULL )		5057993	1					
ANR	5058080	Condition	profile_struct == NULL	1037:12:43102:43123	5057993	0	True				
ANR	5058081	EqualityExpression	profile_struct == NULL		5057993	0		==			
ANR	5058082	Identifier	profile_struct		5057993	0					
ANR	5058083	Identifier	NULL		5057993	1					
ANR	5058084	CompoundStatement		24:36:1180:1180	5057993	1					
ANR	5058085	ExpressionStatement	dev -> icc_struct = gsicc_new_device_profile_array ( dev -> memory )	1039:12:43170:43231	5057993	0	True				
ANR	5058086	AssignmentExpression	dev -> icc_struct = gsicc_new_device_profile_array ( dev -> memory )		5057993	0		=			
ANR	5058087	PtrMemberAccess	dev -> icc_struct		5057993	0					
ANR	5058088	Identifier	dev		5057993	0					
ANR	5058089	Identifier	icc_struct		5057993	1					
ANR	5058090	CallExpression	gsicc_new_device_profile_array ( dev -> memory )		5057993	1					
ANR	5058091	Callee	gsicc_new_device_profile_array		5057993	0					
ANR	5058092	Identifier	gsicc_new_device_profile_array		5057993	0					
ANR	5058093	ArgumentList	dev -> memory		5057993	1					
ANR	5058094	Argument	dev -> memory		5057993	0					
ANR	5058095	PtrMemberAccess	dev -> memory		5057993	0					
ANR	5058096	Identifier	dev		5057993	0					
ANR	5058097	Identifier	memory		5057993	1					
ANR	5058098	ExpressionStatement	profile_struct = dev -> icc_struct	1040:12:43245:43278	5057993	1	True				
ANR	5058099	AssignmentExpression	profile_struct = dev -> icc_struct		5057993	0		=			
ANR	5058100	Identifier	profile_struct		5057993	0					
ANR	5058101	PtrMemberAccess	dev -> icc_struct		5057993	1					
ANR	5058102	Identifier	dev		5057993	0					
ANR	5058103	Identifier	icc_struct		5057993	1					
ANR	5058104	ExpressionStatement	profile_struct -> graydetection = graydetection	1042:8:43298:43343	5057993	2	True				
ANR	5058105	AssignmentExpression	profile_struct -> graydetection = graydetection		5057993	0		=			
ANR	5058106	PtrMemberAccess	profile_struct -> graydetection		5057993	0					
ANR	5058107	Identifier	profile_struct		5057993	0					
ANR	5058108	Identifier	graydetection		5057993	1					
ANR	5058109	Identifier	graydetection		5057993	1					
ANR	5058110	ExpressionStatement	profile_struct -> pageneutralcolor = graydetection	1043:8:43353:43401	5057993	3	True				
ANR	5058111	AssignmentExpression	profile_struct -> pageneutralcolor = graydetection		5057993	0		=			
ANR	5058112	PtrMemberAccess	profile_struct -> pageneutralcolor		5057993	0					
ANR	5058113	Identifier	profile_struct		5057993	0					
ANR	5058114	Identifier	pageneutralcolor		5057993	1					
ANR	5058115	Identifier	graydetection		5057993	1					
ANR	5058116	ReturnStatement	return code ;	1045:4:43413:43424	5057993	3	True				
ANR	5058117	Identifier	code		5057993	0					
ANR	5058118	ReturnType	static int		5057993	1					
ANR	5058119	Identifier	gx_default_put_graydetection		5057993	2					
ANR	5058120	ParameterList	"bool graydetection , gx_device * dev"		5057993	3					
ANR	5058121	Parameter	bool graydetection	1013:29:41908:41925	5057993	0	True				
ANR	5058122	ParameterType	bool		5057993	0					
ANR	5058123	Identifier	graydetection		5057993	1					
ANR	5058124	Parameter	gx_device * dev	1013:49:41928:41942	5057993	1	True				
ANR	5058125	ParameterType	gx_device *		5057993	0					
ANR	5058126	Identifier	dev		5057993	1					
ANR	5058127	CFGEntryNode	ENTRY		5057993		True				
ANR	5058128	CFGExitNode	EXIT		5057993		True				
ANR	5058129	Symbol	* dev		5057993						
ANR	5058130	Symbol	dev -> icc_struct -> graydetection		5057993						
ANR	5058131	Symbol	code		5057993						
ANR	5058132	Symbol	NULL		5057993						
ANR	5058133	Symbol	gsicc_new_device_profile_array		5057993						
ANR	5058134	Symbol	* * dev		5057993						
ANR	5058135	Symbol	profile_struct		5057993						
ANR	5058136	Symbol	profile_struct -> graydetection		5057993						
ANR	5058137	Symbol	& profile_struct		5057993						
ANR	5058138	Symbol	profile_struct -> pageneutralcolor		5057993						
ANR	5058139	Symbol	* dev -> icc_struct		5057993						
ANR	5058140	Symbol	dev -> memory		5057993						
ANR	5058141	Symbol	dev		5057993						
ANR	5058142	Symbol	dev_proc		5057993						
ANR	5058143	Symbol	dev -> icc_struct		5057993						
ANR	5058144	Symbol	graydetection		5057993						
ANR	5058145	Symbol	* profile_struct		5057993						
ANR	5058146	Symbol	get_profile		5057993						
ANR	5058147	Symbol	dev -> icc_struct -> pageneutralcolor		5057993						
ANR	5058148	Function	gx_default_put_graytok	1048:0:43429:45023							
ANR	5058149	FunctionDef	"gx_default_put_graytok (bool graytok , gx_device * dev)"		5058148	0					
ANR	5058150	CompoundStatement		1050:0:43494:45023	5058148	0					
ANR	5058151	IdentifierDeclStatement	int code = 0 ;	1051:4:43500:43512	5058148	0	True				
ANR	5058152	IdentifierDecl	code = 0		5058148	0					
ANR	5058153	IdentifierDeclType	int		5058148	0					
ANR	5058154	Identifier	code		5058148	1					
ANR	5058155	AssignmentExpression	code = 0		5058148	2		=			
ANR	5058156	Identifier	code		5058148	0					
ANR	5058157	PrimaryExpression	0		5058148	1					
ANR	5058158	IdentifierDeclStatement	cmm_dev_profile_t * profile_struct ;	1052:4:43518:43551	5058148	1	True				
ANR	5058159	IdentifierDecl	* profile_struct		5058148	0					
ANR	5058160	IdentifierDeclType	cmm_dev_profile_t *		5058148	0					
ANR	5058161	Identifier	profile_struct		5058148	1					
ANR	5058162	IfStatement	"if ( dev_proc ( dev , get_profile ) == NULL )"		5058148	2					
ANR	5058163	Condition	"dev_proc ( dev , get_profile ) == NULL"	1058:8:43831:43864	5058148	0	True				
ANR	5058164	EqualityExpression	"dev_proc ( dev , get_profile ) == NULL"		5058148	0		==			
ANR	5058165	CallExpression	"dev_proc ( dev , get_profile )"		5058148	0					
ANR	5058166	Callee	dev_proc		5058148	0					
ANR	5058167	Identifier	dev_proc		5058148	0					
ANR	5058168	ArgumentList	dev		5058148	1					
ANR	5058169	Argument	dev		5058148	0					
ANR	5058170	Identifier	dev		5058148	0					
ANR	5058171	Argument	get_profile		5058148	1					
ANR	5058172	Identifier	get_profile		5058148	0					
ANR	5058173	Identifier	NULL		5058148	1					
ANR	5058174	CompoundStatement		9:44:372:372	5058148	1					
ANR	5058175	IfStatement	if ( dev -> icc_struct == NULL )		5058148	0					
ANR	5058176	Condition	dev -> icc_struct == NULL	1065:12:44279:44301	5058148	0	True				
ANR	5058177	EqualityExpression	dev -> icc_struct == NULL		5058148	0		==			
ANR	5058178	PtrMemberAccess	dev -> icc_struct		5058148	0					
ANR	5058179	Identifier	dev		5058148	0					
ANR	5058180	Identifier	icc_struct		5058148	1					
ANR	5058181	Identifier	NULL		5058148	1					
ANR	5058182	CompoundStatement		16:37:809:809	5058148	1					
ANR	5058183	ExpressionStatement	dev -> icc_struct = gsicc_new_device_profile_array ( dev -> memory )	1067:12:44372:44433	5058148	0	True				
ANR	5058184	AssignmentExpression	dev -> icc_struct = gsicc_new_device_profile_array ( dev -> memory )		5058148	0		=			
ANR	5058185	PtrMemberAccess	dev -> icc_struct		5058148	0					
ANR	5058186	Identifier	dev		5058148	0					
ANR	5058187	Identifier	icc_struct		5058148	1					
ANR	5058188	CallExpression	gsicc_new_device_profile_array ( dev -> memory )		5058148	1					
ANR	5058189	Callee	gsicc_new_device_profile_array		5058148	0					
ANR	5058190	Identifier	gsicc_new_device_profile_array		5058148	0					
ANR	5058191	ArgumentList	dev -> memory		5058148	1					
ANR	5058192	Argument	dev -> memory		5058148	0					
ANR	5058193	PtrMemberAccess	dev -> memory		5058148	0					
ANR	5058194	Identifier	dev		5058148	0					
ANR	5058195	Identifier	memory		5058148	1					
ANR	5058196	IfStatement	if ( dev -> icc_struct == NULL )		5058148	1					
ANR	5058197	Condition	dev -> icc_struct == NULL	1068:16:44451:44473	5058148	0	True				
ANR	5058198	EqualityExpression	dev -> icc_struct == NULL		5058148	0		==			
ANR	5058199	PtrMemberAccess	dev -> icc_struct		5058148	0					
ANR	5058200	Identifier	dev		5058148	0					
ANR	5058201	Identifier	icc_struct		5058148	1					
ANR	5058202	Identifier	NULL		5058148	1					
ANR	5058203	ExpressionStatement	return_error ( gs_error_VMerror )	1069:16:44492:44522	5058148	1	True				
ANR	5058204	CallExpression	return_error ( gs_error_VMerror )		5058148	0					
ANR	5058205	Callee	return_error		5058148	0					
ANR	5058206	Identifier	return_error		5058148	0					
ANR	5058207	ArgumentList	gs_error_VMerror		5058148	1					
ANR	5058208	Argument	gs_error_VMerror		5058148	0					
ANR	5058209	Identifier	gs_error_VMerror		5058148	0					
ANR	5058210	ExpressionStatement	dev -> icc_struct -> devicegraytok = graytok	1071:8:44542:44582	5058148	1	True				
ANR	5058211	AssignmentExpression	dev -> icc_struct -> devicegraytok = graytok		5058148	0		=			
ANR	5058212	PtrMemberAccess	dev -> icc_struct -> devicegraytok		5058148	0					
ANR	5058213	PtrMemberAccess	dev -> icc_struct		5058148	0					
ANR	5058214	Identifier	dev		5058148	0					
ANR	5058215	Identifier	icc_struct		5058148	1					
ANR	5058216	Identifier	devicegraytok		5058148	1					
ANR	5058217	Identifier	graytok		5058148	1					
ANR	5058218	ElseStatement	else		5058148	0					
ANR	5058219	CompoundStatement		23:11:1100:1100	5058148	0					
ANR	5058220	ExpressionStatement	"code = dev_proc ( dev , get_profile ) ( dev , & profile_struct )"	1073:8:44605:44661	5058148	0	True				
ANR	5058221	AssignmentExpression	"code = dev_proc ( dev , get_profile ) ( dev , & profile_struct )"		5058148	0		=			
ANR	5058222	Identifier	code		5058148	0					
ANR	5058223	CallExpression	"dev_proc ( dev , get_profile ) ( dev , & profile_struct )"		5058148	1					
ANR	5058224	Callee	"dev_proc ( dev , get_profile )"		5058148	0					
ANR	5058225	CallExpression	"dev_proc ( dev , get_profile )"		5058148	0					
ANR	5058226	Callee	dev_proc		5058148	0					
ANR	5058227	Identifier	dev_proc		5058148	0					
ANR	5058228	ArgumentList	dev		5058148	1					
ANR	5058229	Argument	dev		5058148	0					
ANR	5058230	Identifier	dev		5058148	0					
ANR	5058231	Argument	get_profile		5058148	1					
ANR	5058232	Identifier	get_profile		5058148	0					
ANR	5058233	ArgumentList	dev		5058148	1					
ANR	5058234	Argument	dev		5058148	0					
ANR	5058235	Identifier	dev		5058148	0					
ANR	5058236	Argument	& profile_struct		5058148	1					
ANR	5058237	UnaryOperationExpression	& profile_struct		5058148	0					
ANR	5058238	UnaryOperator	&		5058148	0					
ANR	5058239	Identifier	profile_struct		5058148	1					
ANR	5058240	IfStatement	if ( profile_struct == NULL )		5058148	1					
ANR	5058241	Condition	profile_struct == NULL	1074:12:44675:44696	5058148	0	True				
ANR	5058242	EqualityExpression	profile_struct == NULL		5058148	0		==			
ANR	5058243	Identifier	profile_struct		5058148	0					
ANR	5058244	Identifier	NULL		5058148	1					
ANR	5058245	CompoundStatement		25:36:1204:1204	5058148	1					
ANR	5058246	ExpressionStatement	dev -> icc_struct = gsicc_new_device_profile_array ( dev -> memory )	1076:12:44743:44804	5058148	0	True				
ANR	5058247	AssignmentExpression	dev -> icc_struct = gsicc_new_device_profile_array ( dev -> memory )		5058148	0		=			
ANR	5058248	PtrMemberAccess	dev -> icc_struct		5058148	0					
ANR	5058249	Identifier	dev		5058148	0					
ANR	5058250	Identifier	icc_struct		5058148	1					
ANR	5058251	CallExpression	gsicc_new_device_profile_array ( dev -> memory )		5058148	1					
ANR	5058252	Callee	gsicc_new_device_profile_array		5058148	0					
ANR	5058253	Identifier	gsicc_new_device_profile_array		5058148	0					
ANR	5058254	ArgumentList	dev -> memory		5058148	1					
ANR	5058255	Argument	dev -> memory		5058148	0					
ANR	5058256	PtrMemberAccess	dev -> memory		5058148	0					
ANR	5058257	Identifier	dev		5058148	0					
ANR	5058258	Identifier	memory		5058148	1					
ANR	5058259	ExpressionStatement	profile_struct = dev -> icc_struct	1077:12:44818:44851	5058148	1	True				
ANR	5058260	AssignmentExpression	profile_struct = dev -> icc_struct		5058148	0		=			
ANR	5058261	Identifier	profile_struct		5058148	0					
ANR	5058262	PtrMemberAccess	dev -> icc_struct		5058148	1					
ANR	5058263	Identifier	dev		5058148	0					
ANR	5058264	Identifier	icc_struct		5058148	1					
ANR	5058265	IfStatement	if ( profile_struct == NULL )		5058148	2					
ANR	5058266	Condition	profile_struct == NULL	1078:16:44869:44890	5058148	0	True				
ANR	5058267	EqualityExpression	profile_struct == NULL		5058148	0		==			
ANR	5058268	Identifier	profile_struct		5058148	0					
ANR	5058269	Identifier	NULL		5058148	1					
ANR	5058270	ExpressionStatement	return_error ( gs_error_VMerror )	1079:16:44909:44939	5058148	1	True				
ANR	5058271	CallExpression	return_error ( gs_error_VMerror )		5058148	0					
ANR	5058272	Callee	return_error		5058148	0					
ANR	5058273	Identifier	return_error		5058148	0					
ANR	5058274	ArgumentList	gs_error_VMerror		5058148	1					
ANR	5058275	Argument	gs_error_VMerror		5058148	0					
ANR	5058276	Identifier	gs_error_VMerror		5058148	0					
ANR	5058277	ExpressionStatement	profile_struct -> devicegraytok = graytok	1081:8:44959:44998	5058148	2	True				
ANR	5058278	AssignmentExpression	profile_struct -> devicegraytok = graytok		5058148	0		=			
ANR	5058279	PtrMemberAccess	profile_struct -> devicegraytok		5058148	0					
ANR	5058280	Identifier	profile_struct		5058148	0					
ANR	5058281	Identifier	devicegraytok		5058148	1					
ANR	5058282	Identifier	graytok		5058148	1					
ANR	5058283	ReturnStatement	return code ;	1083:4:45010:45021	5058148	3	True				
ANR	5058284	Identifier	code		5058148	0					
ANR	5058285	ReturnType	static int		5058148	1					
ANR	5058286	Identifier	gx_default_put_graytok		5058148	2					
ANR	5058287	ParameterList	"bool graytok , gx_device * dev"		5058148	3					
ANR	5058288	Parameter	bool graytok	1049:23:43463:43474	5058148	0	True				
ANR	5058289	ParameterType	bool		5058148	0					
ANR	5058290	Identifier	graytok		5058148	1					
ANR	5058291	Parameter	gx_device * dev	1049:37:43477:43491	5058148	1	True				
ANR	5058292	ParameterType	gx_device *		5058148	0					
ANR	5058293	Identifier	dev		5058148	1					
ANR	5058294	CFGEntryNode	ENTRY		5058148		True				
ANR	5058295	CFGExitNode	EXIT		5058148		True				
ANR	5058296	Symbol	* dev		5058148						
ANR	5058297	Symbol	code		5058148						
ANR	5058298	Symbol	NULL		5058148						
ANR	5058299	Symbol	gsicc_new_device_profile_array		5058148						
ANR	5058300	Symbol	* * dev		5058148						
ANR	5058301	Symbol	profile_struct		5058148						
ANR	5058302	Symbol	& profile_struct		5058148						
ANR	5058303	Symbol	gs_error_VMerror		5058148						
ANR	5058304	Symbol	* dev -> icc_struct		5058148						
ANR	5058305	Symbol	dev -> memory		5058148						
ANR	5058306	Symbol	graytok		5058148						
ANR	5058307	Symbol	dev		5058148						
ANR	5058308	Symbol	dev_proc		5058148						
ANR	5058309	Symbol	dev -> icc_struct		5058148						
ANR	5058310	Symbol	dev -> icc_struct -> devicegraytok		5058148						
ANR	5058311	Symbol	* profile_struct		5058148						
ANR	5058312	Symbol	profile_struct -> devicegraytok		5058148						
ANR	5058313	Symbol	get_profile		5058148						
ANR	5058314	Function	gx_default_put_prebandthreshold	1086:0:45026:46662							
ANR	5058315	FunctionDef	"gx_default_put_prebandthreshold (bool prebandthreshold , gx_device * dev)"		5058314	0					
ANR	5058316	CompoundStatement		1088:0:45109:46662	5058314	0					
ANR	5058317	IdentifierDeclStatement	int code = 0 ;	1089:4:45115:45127	5058314	0	True				
ANR	5058318	IdentifierDecl	code = 0		5058314	0					
ANR	5058319	IdentifierDeclType	int		5058314	0					
ANR	5058320	Identifier	code		5058314	1					
ANR	5058321	AssignmentExpression	code = 0		5058314	2		=			
ANR	5058322	Identifier	code		5058314	0					
ANR	5058323	PrimaryExpression	0		5058314	1					
ANR	5058324	IdentifierDeclStatement	cmm_dev_profile_t * profile_struct ;	1090:4:45133:45166	5058314	1	True				
ANR	5058325	IdentifierDecl	* profile_struct		5058314	0					
ANR	5058326	IdentifierDeclType	cmm_dev_profile_t *		5058314	0					
ANR	5058327	Identifier	profile_struct		5058314	1					
ANR	5058328	IfStatement	"if ( dev_proc ( dev , get_profile ) == NULL )"		5058314	2					
ANR	5058329	Condition	"dev_proc ( dev , get_profile ) == NULL"	1096:8:45446:45479	5058314	0	True				
ANR	5058330	EqualityExpression	"dev_proc ( dev , get_profile ) == NULL"		5058314	0		==			
ANR	5058331	CallExpression	"dev_proc ( dev , get_profile )"		5058314	0					
ANR	5058332	Callee	dev_proc		5058314	0					
ANR	5058333	Identifier	dev_proc		5058314	0					
ANR	5058334	ArgumentList	dev		5058314	1					
ANR	5058335	Argument	dev		5058314	0					
ANR	5058336	Identifier	dev		5058314	0					
ANR	5058337	Argument	get_profile		5058314	1					
ANR	5058338	Identifier	get_profile		5058314	0					
ANR	5058339	Identifier	NULL		5058314	1					
ANR	5058340	CompoundStatement		9:44:372:372	5058314	1					
ANR	5058341	IfStatement	if ( dev -> icc_struct == NULL )		5058314	0					
ANR	5058342	Condition	dev -> icc_struct == NULL	1103:12:45894:45916	5058314	0	True				
ANR	5058343	EqualityExpression	dev -> icc_struct == NULL		5058314	0		==			
ANR	5058344	PtrMemberAccess	dev -> icc_struct		5058314	0					
ANR	5058345	Identifier	dev		5058314	0					
ANR	5058346	Identifier	icc_struct		5058314	1					
ANR	5058347	Identifier	NULL		5058314	1					
ANR	5058348	CompoundStatement		16:37:809:809	5058314	1					
ANR	5058349	ExpressionStatement	dev -> icc_struct = gsicc_new_device_profile_array ( dev -> memory )	1105:12:45987:46048	5058314	0	True				
ANR	5058350	AssignmentExpression	dev -> icc_struct = gsicc_new_device_profile_array ( dev -> memory )		5058314	0		=			
ANR	5058351	PtrMemberAccess	dev -> icc_struct		5058314	0					
ANR	5058352	Identifier	dev		5058314	0					
ANR	5058353	Identifier	icc_struct		5058314	1					
ANR	5058354	CallExpression	gsicc_new_device_profile_array ( dev -> memory )		5058314	1					
ANR	5058355	Callee	gsicc_new_device_profile_array		5058314	0					
ANR	5058356	Identifier	gsicc_new_device_profile_array		5058314	0					
ANR	5058357	ArgumentList	dev -> memory		5058314	1					
ANR	5058358	Argument	dev -> memory		5058314	0					
ANR	5058359	PtrMemberAccess	dev -> memory		5058314	0					
ANR	5058360	Identifier	dev		5058314	0					
ANR	5058361	Identifier	memory		5058314	1					
ANR	5058362	IfStatement	if ( dev -> icc_struct == NULL )		5058314	1					
ANR	5058363	Condition	dev -> icc_struct == NULL	1106:16:46066:46088	5058314	0	True				
ANR	5058364	EqualityExpression	dev -> icc_struct == NULL		5058314	0		==			
ANR	5058365	PtrMemberAccess	dev -> icc_struct		5058314	0					
ANR	5058366	Identifier	dev		5058314	0					
ANR	5058367	Identifier	icc_struct		5058314	1					
ANR	5058368	Identifier	NULL		5058314	1					
ANR	5058369	ExpressionStatement	return_error ( gs_error_VMerror )	1107:16:46107:46137	5058314	1	True				
ANR	5058370	CallExpression	return_error ( gs_error_VMerror )		5058314	0					
ANR	5058371	Callee	return_error		5058314	0					
ANR	5058372	Identifier	return_error		5058314	0					
ANR	5058373	ArgumentList	gs_error_VMerror		5058314	1					
ANR	5058374	Argument	gs_error_VMerror		5058314	0					
ANR	5058375	Identifier	gs_error_VMerror		5058314	0					
ANR	5058376	ExpressionStatement	dev -> icc_struct -> prebandthreshold = prebandthreshold	1109:8:46157:46209	5058314	1	True				
ANR	5058377	AssignmentExpression	dev -> icc_struct -> prebandthreshold = prebandthreshold		5058314	0		=			
ANR	5058378	PtrMemberAccess	dev -> icc_struct -> prebandthreshold		5058314	0					
ANR	5058379	PtrMemberAccess	dev -> icc_struct		5058314	0					
ANR	5058380	Identifier	dev		5058314	0					
ANR	5058381	Identifier	icc_struct		5058314	1					
ANR	5058382	Identifier	prebandthreshold		5058314	1					
ANR	5058383	Identifier	prebandthreshold		5058314	1					
ANR	5058384	ElseStatement	else		5058314	0					
ANR	5058385	CompoundStatement		23:11:1112:1112	5058314	0					
ANR	5058386	ExpressionStatement	"code = dev_proc ( dev , get_profile ) ( dev , & profile_struct )"	1111:8:46232:46288	5058314	0	True				
ANR	5058387	AssignmentExpression	"code = dev_proc ( dev , get_profile ) ( dev , & profile_struct )"		5058314	0		=			
ANR	5058388	Identifier	code		5058314	0					
ANR	5058389	CallExpression	"dev_proc ( dev , get_profile ) ( dev , & profile_struct )"		5058314	1					
ANR	5058390	Callee	"dev_proc ( dev , get_profile )"		5058314	0					
ANR	5058391	CallExpression	"dev_proc ( dev , get_profile )"		5058314	0					
ANR	5058392	Callee	dev_proc		5058314	0					
ANR	5058393	Identifier	dev_proc		5058314	0					
ANR	5058394	ArgumentList	dev		5058314	1					
ANR	5058395	Argument	dev		5058314	0					
ANR	5058396	Identifier	dev		5058314	0					
ANR	5058397	Argument	get_profile		5058314	1					
ANR	5058398	Identifier	get_profile		5058314	0					
ANR	5058399	ArgumentList	dev		5058314	1					
ANR	5058400	Argument	dev		5058314	0					
ANR	5058401	Identifier	dev		5058314	0					
ANR	5058402	Argument	& profile_struct		5058314	1					
ANR	5058403	UnaryOperationExpression	& profile_struct		5058314	0					
ANR	5058404	UnaryOperator	&		5058314	0					
ANR	5058405	Identifier	profile_struct		5058314	1					
ANR	5058406	IfStatement	if ( profile_struct == NULL )		5058314	1					
ANR	5058407	Condition	profile_struct == NULL	1112:12:46302:46323	5058314	0	True				
ANR	5058408	EqualityExpression	profile_struct == NULL		5058314	0		==			
ANR	5058409	Identifier	profile_struct		5058314	0					
ANR	5058410	Identifier	NULL		5058314	1					
ANR	5058411	CompoundStatement		25:36:1216:1216	5058314	1					
ANR	5058412	ExpressionStatement	dev -> icc_struct = gsicc_new_device_profile_array ( dev -> memory )	1114:12:46370:46431	5058314	0	True				
ANR	5058413	AssignmentExpression	dev -> icc_struct = gsicc_new_device_profile_array ( dev -> memory )		5058314	0		=			
ANR	5058414	PtrMemberAccess	dev -> icc_struct		5058314	0					
ANR	5058415	Identifier	dev		5058314	0					
ANR	5058416	Identifier	icc_struct		5058314	1					
ANR	5058417	CallExpression	gsicc_new_device_profile_array ( dev -> memory )		5058314	1					
ANR	5058418	Callee	gsicc_new_device_profile_array		5058314	0					
ANR	5058419	Identifier	gsicc_new_device_profile_array		5058314	0					
ANR	5058420	ArgumentList	dev -> memory		5058314	1					
ANR	5058421	Argument	dev -> memory		5058314	0					
ANR	5058422	PtrMemberAccess	dev -> memory		5058314	0					
ANR	5058423	Identifier	dev		5058314	0					
ANR	5058424	Identifier	memory		5058314	1					
ANR	5058425	ExpressionStatement	profile_struct = dev -> icc_struct	1115:12:46445:46478	5058314	1	True				
ANR	5058426	AssignmentExpression	profile_struct = dev -> icc_struct		5058314	0		=			
ANR	5058427	Identifier	profile_struct		5058314	0					
ANR	5058428	PtrMemberAccess	dev -> icc_struct		5058314	1					
ANR	5058429	Identifier	dev		5058314	0					
ANR	5058430	Identifier	icc_struct		5058314	1					
ANR	5058431	IfStatement	if ( profile_struct == NULL )		5058314	2					
ANR	5058432	Condition	profile_struct == NULL	1116:16:46496:46517	5058314	0	True				
ANR	5058433	EqualityExpression	profile_struct == NULL		5058314	0		==			
ANR	5058434	Identifier	profile_struct		5058314	0					
ANR	5058435	Identifier	NULL		5058314	1					
ANR	5058436	ExpressionStatement	return_error ( gs_error_VMerror )	1117:16:46536:46566	5058314	1	True				
ANR	5058437	CallExpression	return_error ( gs_error_VMerror )		5058314	0					
ANR	5058438	Callee	return_error		5058314	0					
ANR	5058439	Identifier	return_error		5058314	0					
ANR	5058440	ArgumentList	gs_error_VMerror		5058314	1					
ANR	5058441	Argument	gs_error_VMerror		5058314	0					
ANR	5058442	Identifier	gs_error_VMerror		5058314	0					
ANR	5058443	ExpressionStatement	profile_struct -> prebandthreshold = prebandthreshold	1119:8:46586:46637	5058314	2	True				
ANR	5058444	AssignmentExpression	profile_struct -> prebandthreshold = prebandthreshold		5058314	0		=			
ANR	5058445	PtrMemberAccess	profile_struct -> prebandthreshold		5058314	0					
ANR	5058446	Identifier	profile_struct		5058314	0					
ANR	5058447	Identifier	prebandthreshold		5058314	1					
ANR	5058448	Identifier	prebandthreshold		5058314	1					
ANR	5058449	ReturnStatement	return code ;	1121:4:46649:46660	5058314	3	True				
ANR	5058450	Identifier	code		5058314	0					
ANR	5058451	ReturnType	static int		5058314	1					
ANR	5058452	Identifier	gx_default_put_prebandthreshold		5058314	2					
ANR	5058453	ParameterList	"bool prebandthreshold , gx_device * dev"		5058314	3					
ANR	5058454	Parameter	bool prebandthreshold	1087:32:45069:45089	5058314	0	True				
ANR	5058455	ParameterType	bool		5058314	0					
ANR	5058456	Identifier	prebandthreshold		5058314	1					
ANR	5058457	Parameter	gx_device * dev	1087:55:45092:45106	5058314	1	True				
ANR	5058458	ParameterType	gx_device *		5058314	0					
ANR	5058459	Identifier	dev		5058314	1					
ANR	5058460	CFGEntryNode	ENTRY		5058314		True				
ANR	5058461	CFGExitNode	EXIT		5058314		True				
ANR	5058462	Symbol	* dev		5058314						
ANR	5058463	Symbol	code		5058314						
ANR	5058464	Symbol	NULL		5058314						
ANR	5058465	Symbol	dev -> icc_struct -> prebandthreshold		5058314						
ANR	5058466	Symbol	gsicc_new_device_profile_array		5058314						
ANR	5058467	Symbol	prebandthreshold		5058314						
ANR	5058468	Symbol	* * dev		5058314						
ANR	5058469	Symbol	profile_struct		5058314						
ANR	5058470	Symbol	& profile_struct		5058314						
ANR	5058471	Symbol	gs_error_VMerror		5058314						
ANR	5058472	Symbol	* dev -> icc_struct		5058314						
ANR	5058473	Symbol	dev -> memory		5058314						
ANR	5058474	Symbol	dev		5058314						
ANR	5058475	Symbol	dev_proc		5058314						
ANR	5058476	Symbol	dev -> icc_struct		5058314						
ANR	5058477	Symbol	profile_struct -> prebandthreshold		5058314						
ANR	5058478	Symbol	* profile_struct		5058314						
ANR	5058479	Symbol	get_profile		5058314						
ANR	5058480	Function	gx_default_put_usefastcolor	1124:0:46665:48268							
ANR	5058481	FunctionDef	"gx_default_put_usefastcolor (bool fastcolor , gx_device * dev)"		5058480	0					
ANR	5058482	CompoundStatement		1126:0:46737:48268	5058480	0					
ANR	5058483	IdentifierDeclStatement	int code = 0 ;	1127:4:46743:46755	5058480	0	True				
ANR	5058484	IdentifierDecl	code = 0		5058480	0					
ANR	5058485	IdentifierDeclType	int		5058480	0					
ANR	5058486	Identifier	code		5058480	1					
ANR	5058487	AssignmentExpression	code = 0		5058480	2		=			
ANR	5058488	Identifier	code		5058480	0					
ANR	5058489	PrimaryExpression	0		5058480	1					
ANR	5058490	IdentifierDeclStatement	cmm_dev_profile_t * profile_struct ;	1128:4:46761:46794	5058480	1	True				
ANR	5058491	IdentifierDecl	* profile_struct		5058480	0					
ANR	5058492	IdentifierDeclType	cmm_dev_profile_t *		5058480	0					
ANR	5058493	Identifier	profile_struct		5058480	1					
ANR	5058494	IfStatement	"if ( dev_proc ( dev , get_profile ) == NULL )"		5058480	2					
ANR	5058495	Condition	"dev_proc ( dev , get_profile ) == NULL"	1134:8:47074:47107	5058480	0	True				
ANR	5058496	EqualityExpression	"dev_proc ( dev , get_profile ) == NULL"		5058480	0		==			
ANR	5058497	CallExpression	"dev_proc ( dev , get_profile )"		5058480	0					
ANR	5058498	Callee	dev_proc		5058480	0					
ANR	5058499	Identifier	dev_proc		5058480	0					
ANR	5058500	ArgumentList	dev		5058480	1					
ANR	5058501	Argument	dev		5058480	0					
ANR	5058502	Identifier	dev		5058480	0					
ANR	5058503	Argument	get_profile		5058480	1					
ANR	5058504	Identifier	get_profile		5058480	0					
ANR	5058505	Identifier	NULL		5058480	1					
ANR	5058506	CompoundStatement		9:44:372:372	5058480	1					
ANR	5058507	IfStatement	if ( dev -> icc_struct == NULL )		5058480	0					
ANR	5058508	Condition	dev -> icc_struct == NULL	1141:12:47522:47544	5058480	0	True				
ANR	5058509	EqualityExpression	dev -> icc_struct == NULL		5058480	0		==			
ANR	5058510	PtrMemberAccess	dev -> icc_struct		5058480	0					
ANR	5058511	Identifier	dev		5058480	0					
ANR	5058512	Identifier	icc_struct		5058480	1					
ANR	5058513	Identifier	NULL		5058480	1					
ANR	5058514	CompoundStatement		16:37:809:809	5058480	1					
ANR	5058515	ExpressionStatement	dev -> icc_struct = gsicc_new_device_profile_array ( dev -> memory )	1143:12:47615:47676	5058480	0	True				
ANR	5058516	AssignmentExpression	dev -> icc_struct = gsicc_new_device_profile_array ( dev -> memory )		5058480	0		=			
ANR	5058517	PtrMemberAccess	dev -> icc_struct		5058480	0					
ANR	5058518	Identifier	dev		5058480	0					
ANR	5058519	Identifier	icc_struct		5058480	1					
ANR	5058520	CallExpression	gsicc_new_device_profile_array ( dev -> memory )		5058480	1					
ANR	5058521	Callee	gsicc_new_device_profile_array		5058480	0					
ANR	5058522	Identifier	gsicc_new_device_profile_array		5058480	0					
ANR	5058523	ArgumentList	dev -> memory		5058480	1					
ANR	5058524	Argument	dev -> memory		5058480	0					
ANR	5058525	PtrMemberAccess	dev -> memory		5058480	0					
ANR	5058526	Identifier	dev		5058480	0					
ANR	5058527	Identifier	memory		5058480	1					
ANR	5058528	IfStatement	if ( dev -> icc_struct == NULL )		5058480	1					
ANR	5058529	Condition	dev -> icc_struct == NULL	1144:16:47694:47716	5058480	0	True				
ANR	5058530	EqualityExpression	dev -> icc_struct == NULL		5058480	0		==			
ANR	5058531	PtrMemberAccess	dev -> icc_struct		5058480	0					
ANR	5058532	Identifier	dev		5058480	0					
ANR	5058533	Identifier	icc_struct		5058480	1					
ANR	5058534	Identifier	NULL		5058480	1					
ANR	5058535	ExpressionStatement	return_error ( gs_error_VMerror )	1145:16:47735:47765	5058480	1	True				
ANR	5058536	CallExpression	return_error ( gs_error_VMerror )		5058480	0					
ANR	5058537	Callee	return_error		5058480	0					
ANR	5058538	Identifier	return_error		5058480	0					
ANR	5058539	ArgumentList	gs_error_VMerror		5058480	1					
ANR	5058540	Argument	gs_error_VMerror		5058480	0					
ANR	5058541	Identifier	gs_error_VMerror		5058480	0					
ANR	5058542	ExpressionStatement	dev -> icc_struct -> usefastcolor = fastcolor	1147:8:47785:47826	5058480	1	True				
ANR	5058543	AssignmentExpression	dev -> icc_struct -> usefastcolor = fastcolor		5058480	0		=			
ANR	5058544	PtrMemberAccess	dev -> icc_struct -> usefastcolor		5058480	0					
ANR	5058545	PtrMemberAccess	dev -> icc_struct		5058480	0					
ANR	5058546	Identifier	dev		5058480	0					
ANR	5058547	Identifier	icc_struct		5058480	1					
ANR	5058548	Identifier	usefastcolor		5058480	1					
ANR	5058549	Identifier	fastcolor		5058480	1					
ANR	5058550	ElseStatement	else		5058480	0					
ANR	5058551	CompoundStatement		23:11:1101:1101	5058480	0					
ANR	5058552	ExpressionStatement	"code = dev_proc ( dev , get_profile ) ( dev , & profile_struct )"	1149:8:47849:47905	5058480	0	True				
ANR	5058553	AssignmentExpression	"code = dev_proc ( dev , get_profile ) ( dev , & profile_struct )"		5058480	0		=			
ANR	5058554	Identifier	code		5058480	0					
ANR	5058555	CallExpression	"dev_proc ( dev , get_profile ) ( dev , & profile_struct )"		5058480	1					
ANR	5058556	Callee	"dev_proc ( dev , get_profile )"		5058480	0					
ANR	5058557	CallExpression	"dev_proc ( dev , get_profile )"		5058480	0					
ANR	5058558	Callee	dev_proc		5058480	0					
ANR	5058559	Identifier	dev_proc		5058480	0					
ANR	5058560	ArgumentList	dev		5058480	1					
ANR	5058561	Argument	dev		5058480	0					
ANR	5058562	Identifier	dev		5058480	0					
ANR	5058563	Argument	get_profile		5058480	1					
ANR	5058564	Identifier	get_profile		5058480	0					
ANR	5058565	ArgumentList	dev		5058480	1					
ANR	5058566	Argument	dev		5058480	0					
ANR	5058567	Identifier	dev		5058480	0					
ANR	5058568	Argument	& profile_struct		5058480	1					
ANR	5058569	UnaryOperationExpression	& profile_struct		5058480	0					
ANR	5058570	UnaryOperator	&		5058480	0					
ANR	5058571	Identifier	profile_struct		5058480	1					
ANR	5058572	IfStatement	if ( profile_struct == NULL )		5058480	1					
ANR	5058573	Condition	profile_struct == NULL	1150:12:47919:47940	5058480	0	True				
ANR	5058574	EqualityExpression	profile_struct == NULL		5058480	0		==			
ANR	5058575	Identifier	profile_struct		5058480	0					
ANR	5058576	Identifier	NULL		5058480	1					
ANR	5058577	CompoundStatement		25:36:1205:1205	5058480	1					
ANR	5058578	ExpressionStatement	dev -> icc_struct = gsicc_new_device_profile_array ( dev -> memory )	1152:12:47987:48048	5058480	0	True				
ANR	5058579	AssignmentExpression	dev -> icc_struct = gsicc_new_device_profile_array ( dev -> memory )		5058480	0		=			
ANR	5058580	PtrMemberAccess	dev -> icc_struct		5058480	0					
ANR	5058581	Identifier	dev		5058480	0					
ANR	5058582	Identifier	icc_struct		5058480	1					
ANR	5058583	CallExpression	gsicc_new_device_profile_array ( dev -> memory )		5058480	1					
ANR	5058584	Callee	gsicc_new_device_profile_array		5058480	0					
ANR	5058585	Identifier	gsicc_new_device_profile_array		5058480	0					
ANR	5058586	ArgumentList	dev -> memory		5058480	1					
ANR	5058587	Argument	dev -> memory		5058480	0					
ANR	5058588	PtrMemberAccess	dev -> memory		5058480	0					
ANR	5058589	Identifier	dev		5058480	0					
ANR	5058590	Identifier	memory		5058480	1					
ANR	5058591	ExpressionStatement	profile_struct = dev -> icc_struct	1153:12:48062:48095	5058480	1	True				
ANR	5058592	AssignmentExpression	profile_struct = dev -> icc_struct		5058480	0		=			
ANR	5058593	Identifier	profile_struct		5058480	0					
ANR	5058594	PtrMemberAccess	dev -> icc_struct		5058480	1					
ANR	5058595	Identifier	dev		5058480	0					
ANR	5058596	Identifier	icc_struct		5058480	1					
ANR	5058597	IfStatement	if ( profile_struct == NULL )		5058480	2					
ANR	5058598	Condition	profile_struct == NULL	1154:16:48113:48134	5058480	0	True				
ANR	5058599	EqualityExpression	profile_struct == NULL		5058480	0		==			
ANR	5058600	Identifier	profile_struct		5058480	0					
ANR	5058601	Identifier	NULL		5058480	1					
ANR	5058602	ExpressionStatement	return_error ( gs_error_VMerror )	1155:16:48153:48183	5058480	1	True				
ANR	5058603	CallExpression	return_error ( gs_error_VMerror )		5058480	0					
ANR	5058604	Callee	return_error		5058480	0					
ANR	5058605	Identifier	return_error		5058480	0					
ANR	5058606	ArgumentList	gs_error_VMerror		5058480	1					
ANR	5058607	Argument	gs_error_VMerror		5058480	0					
ANR	5058608	Identifier	gs_error_VMerror		5058480	0					
ANR	5058609	ExpressionStatement	profile_struct -> usefastcolor = fastcolor	1157:8:48203:48243	5058480	2	True				
ANR	5058610	AssignmentExpression	profile_struct -> usefastcolor = fastcolor		5058480	0		=			
ANR	5058611	PtrMemberAccess	profile_struct -> usefastcolor		5058480	0					
ANR	5058612	Identifier	profile_struct		5058480	0					
ANR	5058613	Identifier	usefastcolor		5058480	1					
ANR	5058614	Identifier	fastcolor		5058480	1					
ANR	5058615	ReturnStatement	return code ;	1159:4:48255:48266	5058480	3	True				
ANR	5058616	Identifier	code		5058480	0					
ANR	5058617	ReturnType	static int		5058480	1					
ANR	5058618	Identifier	gx_default_put_usefastcolor		5058480	2					
ANR	5058619	ParameterList	"bool fastcolor , gx_device * dev"		5058480	3					
ANR	5058620	Parameter	bool fastcolor	1125:28:46704:46717	5058480	0	True				
ANR	5058621	ParameterType	bool		5058480	0					
ANR	5058622	Identifier	fastcolor		5058480	1					
ANR	5058623	Parameter	gx_device * dev	1125:44:46720:46734	5058480	1	True				
ANR	5058624	ParameterType	gx_device *		5058480	0					
ANR	5058625	Identifier	dev		5058480	1					
ANR	5058626	CFGEntryNode	ENTRY		5058480		True				
ANR	5058627	CFGExitNode	EXIT		5058480		True				
ANR	5058628	Symbol	* dev		5058480						
ANR	5058629	Symbol	code		5058480						
ANR	5058630	Symbol	NULL		5058480						
ANR	5058631	Symbol	gsicc_new_device_profile_array		5058480						
ANR	5058632	Symbol	* * dev		5058480						
ANR	5058633	Symbol	profile_struct -> usefastcolor		5058480						
ANR	5058634	Symbol	profile_struct		5058480						
ANR	5058635	Symbol	& profile_struct		5058480						
ANR	5058636	Symbol	gs_error_VMerror		5058480						
ANR	5058637	Symbol	* dev -> icc_struct		5058480						
ANR	5058638	Symbol	dev -> memory		5058480						
ANR	5058639	Symbol	dev -> icc_struct -> usefastcolor		5058480						
ANR	5058640	Symbol	dev		5058480						
ANR	5058641	Symbol	dev_proc		5058480						
ANR	5058642	Symbol	dev -> icc_struct		5058480						
ANR	5058643	Symbol	fastcolor		5058480						
ANR	5058644	Symbol	* profile_struct		5058480						
ANR	5058645	Symbol	get_profile		5058480						
ANR	5058646	Function	gx_default_put_simulateoverprint	1162:0:48271:49893							
ANR	5058647	FunctionDef	"gx_default_put_simulateoverprint (bool sim_overprint , gx_device * dev)"		5058646	0					
ANR	5058648	CompoundStatement		1164:0:48352:49893	5058646	0					
ANR	5058649	IdentifierDeclStatement	int code = 0 ;	1165:4:48358:48370	5058646	0	True				
ANR	5058650	IdentifierDecl	code = 0		5058646	0					
ANR	5058651	IdentifierDeclType	int		5058646	0					
ANR	5058652	Identifier	code		5058646	1					
ANR	5058653	AssignmentExpression	code = 0		5058646	2		=			
ANR	5058654	Identifier	code		5058646	0					
ANR	5058655	PrimaryExpression	0		5058646	1					
ANR	5058656	IdentifierDeclStatement	cmm_dev_profile_t * profile_struct ;	1166:4:48376:48409	5058646	1	True				
ANR	5058657	IdentifierDecl	* profile_struct		5058646	0					
ANR	5058658	IdentifierDeclType	cmm_dev_profile_t *		5058646	0					
ANR	5058659	Identifier	profile_struct		5058646	1					
ANR	5058660	IfStatement	"if ( dev_proc ( dev , get_profile ) == NULL )"		5058646	2					
ANR	5058661	Condition	"dev_proc ( dev , get_profile ) == NULL"	1172:8:48689:48722	5058646	0	True				
ANR	5058662	EqualityExpression	"dev_proc ( dev , get_profile ) == NULL"		5058646	0		==			
ANR	5058663	CallExpression	"dev_proc ( dev , get_profile )"		5058646	0					
ANR	5058664	Callee	dev_proc		5058646	0					
ANR	5058665	Identifier	dev_proc		5058646	0					
ANR	5058666	ArgumentList	dev		5058646	1					
ANR	5058667	Argument	dev		5058646	0					
ANR	5058668	Identifier	dev		5058646	0					
ANR	5058669	Argument	get_profile		5058646	1					
ANR	5058670	Identifier	get_profile		5058646	0					
ANR	5058671	Identifier	NULL		5058646	1					
ANR	5058672	CompoundStatement		9:44:372:372	5058646	1					
ANR	5058673	IfStatement	if ( dev -> icc_struct == NULL )		5058646	0					
ANR	5058674	Condition	dev -> icc_struct == NULL	1179:12:49137:49159	5058646	0	True				
ANR	5058675	EqualityExpression	dev -> icc_struct == NULL		5058646	0		==			
ANR	5058676	PtrMemberAccess	dev -> icc_struct		5058646	0					
ANR	5058677	Identifier	dev		5058646	0					
ANR	5058678	Identifier	icc_struct		5058646	1					
ANR	5058679	Identifier	NULL		5058646	1					
ANR	5058680	CompoundStatement		16:37:809:809	5058646	1					
ANR	5058681	ExpressionStatement	dev -> icc_struct = gsicc_new_device_profile_array ( dev -> memory )	1181:12:49230:49291	5058646	0	True				
ANR	5058682	AssignmentExpression	dev -> icc_struct = gsicc_new_device_profile_array ( dev -> memory )		5058646	0		=			
ANR	5058683	PtrMemberAccess	dev -> icc_struct		5058646	0					
ANR	5058684	Identifier	dev		5058646	0					
ANR	5058685	Identifier	icc_struct		5058646	1					
ANR	5058686	CallExpression	gsicc_new_device_profile_array ( dev -> memory )		5058646	1					
ANR	5058687	Callee	gsicc_new_device_profile_array		5058646	0					
ANR	5058688	Identifier	gsicc_new_device_profile_array		5058646	0					
ANR	5058689	ArgumentList	dev -> memory		5058646	1					
ANR	5058690	Argument	dev -> memory		5058646	0					
ANR	5058691	PtrMemberAccess	dev -> memory		5058646	0					
ANR	5058692	Identifier	dev		5058646	0					
ANR	5058693	Identifier	memory		5058646	1					
ANR	5058694	IfStatement	if ( dev -> icc_struct == NULL )		5058646	1					
ANR	5058695	Condition	dev -> icc_struct == NULL	1182:16:49309:49331	5058646	0	True				
ANR	5058696	EqualityExpression	dev -> icc_struct == NULL		5058646	0		==			
ANR	5058697	PtrMemberAccess	dev -> icc_struct		5058646	0					
ANR	5058698	Identifier	dev		5058646	0					
ANR	5058699	Identifier	icc_struct		5058646	1					
ANR	5058700	Identifier	NULL		5058646	1					
ANR	5058701	ExpressionStatement	return_error ( gs_error_VMerror )	1183:16:49350:49380	5058646	1	True				
ANR	5058702	CallExpression	return_error ( gs_error_VMerror )		5058646	0					
ANR	5058703	Callee	return_error		5058646	0					
ANR	5058704	Identifier	return_error		5058646	0					
ANR	5058705	ArgumentList	gs_error_VMerror		5058646	1					
ANR	5058706	Argument	gs_error_VMerror		5058646	0					
ANR	5058707	Identifier	gs_error_VMerror		5058646	0					
ANR	5058708	ExpressionStatement	dev -> icc_struct -> sim_overprint = sim_overprint	1185:8:49400:49446	5058646	1	True				
ANR	5058709	AssignmentExpression	dev -> icc_struct -> sim_overprint = sim_overprint		5058646	0		=			
ANR	5058710	PtrMemberAccess	dev -> icc_struct -> sim_overprint		5058646	0					
ANR	5058711	PtrMemberAccess	dev -> icc_struct		5058646	0					
ANR	5058712	Identifier	dev		5058646	0					
ANR	5058713	Identifier	icc_struct		5058646	1					
ANR	5058714	Identifier	sim_overprint		5058646	1					
ANR	5058715	Identifier	sim_overprint		5058646	1					
ANR	5058716	ElseStatement	else		5058646	0					
ANR	5058717	CompoundStatement		23:11:1106:1106	5058646	0					
ANR	5058718	ExpressionStatement	"code = dev_proc ( dev , get_profile ) ( dev , & profile_struct )"	1187:8:49469:49525	5058646	0	True				
ANR	5058719	AssignmentExpression	"code = dev_proc ( dev , get_profile ) ( dev , & profile_struct )"		5058646	0		=			
ANR	5058720	Identifier	code		5058646	0					
ANR	5058721	CallExpression	"dev_proc ( dev , get_profile ) ( dev , & profile_struct )"		5058646	1					
ANR	5058722	Callee	"dev_proc ( dev , get_profile )"		5058646	0					
ANR	5058723	CallExpression	"dev_proc ( dev , get_profile )"		5058646	0					
ANR	5058724	Callee	dev_proc		5058646	0					
ANR	5058725	Identifier	dev_proc		5058646	0					
ANR	5058726	ArgumentList	dev		5058646	1					
ANR	5058727	Argument	dev		5058646	0					
ANR	5058728	Identifier	dev		5058646	0					
ANR	5058729	Argument	get_profile		5058646	1					
ANR	5058730	Identifier	get_profile		5058646	0					
ANR	5058731	ArgumentList	dev		5058646	1					
ANR	5058732	Argument	dev		5058646	0					
ANR	5058733	Identifier	dev		5058646	0					
ANR	5058734	Argument	& profile_struct		5058646	1					
ANR	5058735	UnaryOperationExpression	& profile_struct		5058646	0					
ANR	5058736	UnaryOperator	&		5058646	0					
ANR	5058737	Identifier	profile_struct		5058646	1					
ANR	5058738	IfStatement	if ( profile_struct == NULL )		5058646	1					
ANR	5058739	Condition	profile_struct == NULL	1188:12:49539:49560	5058646	0	True				
ANR	5058740	EqualityExpression	profile_struct == NULL		5058646	0		==			
ANR	5058741	Identifier	profile_struct		5058646	0					
ANR	5058742	Identifier	NULL		5058646	1					
ANR	5058743	CompoundStatement		25:36:1210:1210	5058646	1					
ANR	5058744	ExpressionStatement	dev -> icc_struct = gsicc_new_device_profile_array ( dev -> memory )	1190:12:49607:49668	5058646	0	True				
ANR	5058745	AssignmentExpression	dev -> icc_struct = gsicc_new_device_profile_array ( dev -> memory )		5058646	0		=			
ANR	5058746	PtrMemberAccess	dev -> icc_struct		5058646	0					
ANR	5058747	Identifier	dev		5058646	0					
ANR	5058748	Identifier	icc_struct		5058646	1					
ANR	5058749	CallExpression	gsicc_new_device_profile_array ( dev -> memory )		5058646	1					
ANR	5058750	Callee	gsicc_new_device_profile_array		5058646	0					
ANR	5058751	Identifier	gsicc_new_device_profile_array		5058646	0					
ANR	5058752	ArgumentList	dev -> memory		5058646	1					
ANR	5058753	Argument	dev -> memory		5058646	0					
ANR	5058754	PtrMemberAccess	dev -> memory		5058646	0					
ANR	5058755	Identifier	dev		5058646	0					
ANR	5058756	Identifier	memory		5058646	1					
ANR	5058757	ExpressionStatement	profile_struct = dev -> icc_struct	1191:12:49682:49715	5058646	1	True				
ANR	5058758	AssignmentExpression	profile_struct = dev -> icc_struct		5058646	0		=			
ANR	5058759	Identifier	profile_struct		5058646	0					
ANR	5058760	PtrMemberAccess	dev -> icc_struct		5058646	1					
ANR	5058761	Identifier	dev		5058646	0					
ANR	5058762	Identifier	icc_struct		5058646	1					
ANR	5058763	IfStatement	if ( profile_struct == NULL )		5058646	2					
ANR	5058764	Condition	profile_struct == NULL	1192:16:49733:49754	5058646	0	True				
ANR	5058765	EqualityExpression	profile_struct == NULL		5058646	0		==			
ANR	5058766	Identifier	profile_struct		5058646	0					
ANR	5058767	Identifier	NULL		5058646	1					
ANR	5058768	ExpressionStatement	return_error ( gs_error_VMerror )	1193:16:49773:49803	5058646	1	True				
ANR	5058769	CallExpression	return_error ( gs_error_VMerror )		5058646	0					
ANR	5058770	Callee	return_error		5058646	0					
ANR	5058771	Identifier	return_error		5058646	0					
ANR	5058772	ArgumentList	gs_error_VMerror		5058646	1					
ANR	5058773	Argument	gs_error_VMerror		5058646	0					
ANR	5058774	Identifier	gs_error_VMerror		5058646	0					
ANR	5058775	ExpressionStatement	profile_struct -> sim_overprint = sim_overprint	1195:8:49823:49868	5058646	2	True				
ANR	5058776	AssignmentExpression	profile_struct -> sim_overprint = sim_overprint		5058646	0		=			
ANR	5058777	PtrMemberAccess	profile_struct -> sim_overprint		5058646	0					
ANR	5058778	Identifier	profile_struct		5058646	0					
ANR	5058779	Identifier	sim_overprint		5058646	1					
ANR	5058780	Identifier	sim_overprint		5058646	1					
ANR	5058781	ReturnStatement	return code ;	1197:4:49880:49891	5058646	3	True				
ANR	5058782	Identifier	code		5058646	0					
ANR	5058783	ReturnType	static int		5058646	1					
ANR	5058784	Identifier	gx_default_put_simulateoverprint		5058646	2					
ANR	5058785	ParameterList	"bool sim_overprint , gx_device * dev"		5058646	3					
ANR	5058786	Parameter	bool sim_overprint	1163:33:48315:48332	5058646	0	True				
ANR	5058787	ParameterType	bool		5058646	0					
ANR	5058788	Identifier	sim_overprint		5058646	1					
ANR	5058789	Parameter	gx_device * dev	1163:53:48335:48349	5058646	1	True				
ANR	5058790	ParameterType	gx_device *		5058646	0					
ANR	5058791	Identifier	dev		5058646	1					
ANR	5058792	CFGEntryNode	ENTRY		5058646		True				
ANR	5058793	CFGExitNode	EXIT		5058646		True				
ANR	5058794	Symbol	* dev		5058646						
ANR	5058795	Symbol	code		5058646						
ANR	5058796	Symbol	NULL		5058646						
ANR	5058797	Symbol	gsicc_new_device_profile_array		5058646						
ANR	5058798	Symbol	dev -> icc_struct -> sim_overprint		5058646						
ANR	5058799	Symbol	* * dev		5058646						
ANR	5058800	Symbol	profile_struct		5058646						
ANR	5058801	Symbol	profile_struct -> sim_overprint		5058646						
ANR	5058802	Symbol	& profile_struct		5058646						
ANR	5058803	Symbol	gs_error_VMerror		5058646						
ANR	5058804	Symbol	* dev -> icc_struct		5058646						
ANR	5058805	Symbol	dev -> memory		5058646						
ANR	5058806	Symbol	dev		5058646						
ANR	5058807	Symbol	dev_proc		5058646						
ANR	5058808	Symbol	dev -> icc_struct		5058646						
ANR	5058809	Symbol	* profile_struct		5058646						
ANR	5058810	Symbol	get_profile		5058646						
ANR	5058811	Symbol	sim_overprint		5058646						
ANR	5058812	Function	gx_default_put_intent	1200:0:49896:51477							
ANR	5058813	FunctionDef	"gx_default_put_intent (gsicc_rendering_intents_t icc_intent , gx_device * dev , gsicc_profile_types_t index)"		5058812	0					
ANR	5058814	CompoundStatement		1203:0:50032:51477	5058812	0					
ANR	5058815	IdentifierDeclStatement	int code ;	1204:4:50038:50046	5058812	0	True				
ANR	5058816	IdentifierDecl	code		5058812	0					
ANR	5058817	IdentifierDeclType	int		5058812	0					
ANR	5058818	Identifier	code		5058812	1					
ANR	5058819	IdentifierDeclStatement	cmm_dev_profile_t * profile_struct ;	1205:4:50052:50085	5058812	1	True				
ANR	5058820	IdentifierDecl	* profile_struct		5058812	0					
ANR	5058821	IdentifierDeclType	cmm_dev_profile_t *		5058812	0					
ANR	5058822	Identifier	profile_struct		5058812	1					
ANR	5058823	IfStatement	"if ( dev_proc ( dev , get_profile ) == NULL )"		5058812	2					
ANR	5058824	Condition	"dev_proc ( dev , get_profile ) == NULL"	1211:8:50365:50398	5058812	0	True				
ANR	5058825	EqualityExpression	"dev_proc ( dev , get_profile ) == NULL"		5058812	0		==			
ANR	5058826	CallExpression	"dev_proc ( dev , get_profile )"		5058812	0					
ANR	5058827	Callee	dev_proc		5058812	0					
ANR	5058828	Identifier	dev_proc		5058812	0					
ANR	5058829	ArgumentList	dev		5058812	1					
ANR	5058830	Argument	dev		5058812	0					
ANR	5058831	Identifier	dev		5058812	0					
ANR	5058832	Argument	get_profile		5058812	1					
ANR	5058833	Identifier	get_profile		5058812	0					
ANR	5058834	Identifier	NULL		5058812	1					
ANR	5058835	CompoundStatement		9:44:368:368	5058812	1					
ANR	5058836	IfStatement	if ( dev -> icc_struct == NULL )		5058812	0					
ANR	5058837	Condition	dev -> icc_struct == NULL	1216:12:50656:50678	5058812	0	True				
ANR	5058838	EqualityExpression	dev -> icc_struct == NULL		5058812	0		==			
ANR	5058839	PtrMemberAccess	dev -> icc_struct		5058812	0					
ANR	5058840	Identifier	dev		5058812	0					
ANR	5058841	Identifier	icc_struct		5058812	1					
ANR	5058842	Identifier	NULL		5058812	1					
ANR	5058843	CompoundStatement		14:37:648:648	5058812	1					
ANR	5058844	ExpressionStatement	dev -> icc_struct = gsicc_new_device_profile_array ( dev -> memory )	1218:12:50780:50841	5058812	0	True				
ANR	5058845	AssignmentExpression	dev -> icc_struct = gsicc_new_device_profile_array ( dev -> memory )		5058812	0		=			
ANR	5058846	PtrMemberAccess	dev -> icc_struct		5058812	0					
ANR	5058847	Identifier	dev		5058812	0					
ANR	5058848	Identifier	icc_struct		5058812	1					
ANR	5058849	CallExpression	gsicc_new_device_profile_array ( dev -> memory )		5058812	1					
ANR	5058850	Callee	gsicc_new_device_profile_array		5058812	0					
ANR	5058851	Identifier	gsicc_new_device_profile_array		5058812	0					
ANR	5058852	ArgumentList	dev -> memory		5058812	1					
ANR	5058853	Argument	dev -> memory		5058812	0					
ANR	5058854	PtrMemberAccess	dev -> memory		5058812	0					
ANR	5058855	Identifier	dev		5058812	0					
ANR	5058856	Identifier	memory		5058812	1					
ANR	5058857	IfStatement	if ( dev -> icc_struct == NULL )		5058812	1					
ANR	5058858	Condition	dev -> icc_struct == NULL	1219:16:50859:50881	5058812	0	True				
ANR	5058859	EqualityExpression	dev -> icc_struct == NULL		5058812	0		==			
ANR	5058860	PtrMemberAccess	dev -> icc_struct		5058812	0					
ANR	5058861	Identifier	dev		5058812	0					
ANR	5058862	Identifier	icc_struct		5058812	1					
ANR	5058863	Identifier	NULL		5058812	1					
ANR	5058864	ExpressionStatement	return_error ( gs_error_VMerror )	1220:16:50900:50930	5058812	1	True				
ANR	5058865	CallExpression	return_error ( gs_error_VMerror )		5058812	0					
ANR	5058866	Callee	return_error		5058812	0					
ANR	5058867	Identifier	return_error		5058812	0					
ANR	5058868	ArgumentList	gs_error_VMerror		5058812	1					
ANR	5058869	Argument	gs_error_VMerror		5058812	0					
ANR	5058870	Identifier	gs_error_VMerror		5058812	0					
ANR	5058871	ExpressionStatement	"code = gsicc_set_device_profile_intent ( dev , icc_intent , index )"	1222:8:50950:51012	5058812	1	True				
ANR	5058872	AssignmentExpression	"code = gsicc_set_device_profile_intent ( dev , icc_intent , index )"		5058812	0		=			
ANR	5058873	Identifier	code		5058812	0					
ANR	5058874	CallExpression	"gsicc_set_device_profile_intent ( dev , icc_intent , index )"		5058812	1					
ANR	5058875	Callee	gsicc_set_device_profile_intent		5058812	0					
ANR	5058876	Identifier	gsicc_set_device_profile_intent		5058812	0					
ANR	5058877	ArgumentList	dev		5058812	1					
ANR	5058878	Argument	dev		5058812	0					
ANR	5058879	Identifier	dev		5058812	0					
ANR	5058880	Argument	icc_intent		5058812	1					
ANR	5058881	Identifier	icc_intent		5058812	0					
ANR	5058882	Argument	index		5058812	2					
ANR	5058883	Identifier	index		5058812	0					
ANR	5058884	ElseStatement	else		5058812	0					
ANR	5058885	CompoundStatement		21:11:992:992	5058812	0					
ANR	5058886	ExpressionStatement	"code = dev_proc ( dev , get_profile ) ( dev , & profile_struct )"	1224:8:51035:51091	5058812	0	True				
ANR	5058887	AssignmentExpression	"code = dev_proc ( dev , get_profile ) ( dev , & profile_struct )"		5058812	0		=			
ANR	5058888	Identifier	code		5058812	0					
ANR	5058889	CallExpression	"dev_proc ( dev , get_profile ) ( dev , & profile_struct )"		5058812	1					
ANR	5058890	Callee	"dev_proc ( dev , get_profile )"		5058812	0					
ANR	5058891	CallExpression	"dev_proc ( dev , get_profile )"		5058812	0					
ANR	5058892	Callee	dev_proc		5058812	0					
ANR	5058893	Identifier	dev_proc		5058812	0					
ANR	5058894	ArgumentList	dev		5058812	1					
ANR	5058895	Argument	dev		5058812	0					
ANR	5058896	Identifier	dev		5058812	0					
ANR	5058897	Argument	get_profile		5058812	1					
ANR	5058898	Identifier	get_profile		5058812	0					
ANR	5058899	ArgumentList	dev		5058812	1					
ANR	5058900	Argument	dev		5058812	0					
ANR	5058901	Identifier	dev		5058812	0					
ANR	5058902	Argument	& profile_struct		5058812	1					
ANR	5058903	UnaryOperationExpression	& profile_struct		5058812	0					
ANR	5058904	UnaryOperator	&		5058812	0					
ANR	5058905	Identifier	profile_struct		5058812	1					
ANR	5058906	IfStatement	if ( code < 0 )		5058812	1					
ANR	5058907	Condition	code < 0	1225:12:51105:51112	5058812	0	True				
ANR	5058908	RelationalExpression	code < 0		5058812	0		<			
ANR	5058909	Identifier	code		5058812	0					
ANR	5058910	PrimaryExpression	0		5058812	1					
ANR	5058911	ReturnStatement	return code ;	1226:12:51127:51138	5058812	1	True				
ANR	5058912	Identifier	code		5058812	0					
ANR	5058913	IfStatement	if ( profile_struct == NULL )		5058812	2					
ANR	5058914	Condition	profile_struct == NULL	1227:12:51152:51173	5058812	0	True				
ANR	5058915	EqualityExpression	profile_struct == NULL		5058812	0		==			
ANR	5058916	Identifier	profile_struct		5058812	0					
ANR	5058917	Identifier	NULL		5058812	1					
ANR	5058918	CompoundStatement		25:36:1143:1143	5058812	1					
ANR	5058919	ExpressionStatement	dev -> icc_struct = gsicc_new_device_profile_array ( dev -> memory )	1229:12:51220:51281	5058812	0	True				
ANR	5058920	AssignmentExpression	dev -> icc_struct = gsicc_new_device_profile_array ( dev -> memory )		5058812	0		=			
ANR	5058921	PtrMemberAccess	dev -> icc_struct		5058812	0					
ANR	5058922	Identifier	dev		5058812	0					
ANR	5058923	Identifier	icc_struct		5058812	1					
ANR	5058924	CallExpression	gsicc_new_device_profile_array ( dev -> memory )		5058812	1					
ANR	5058925	Callee	gsicc_new_device_profile_array		5058812	0					
ANR	5058926	Identifier	gsicc_new_device_profile_array		5058812	0					
ANR	5058927	ArgumentList	dev -> memory		5058812	1					
ANR	5058928	Argument	dev -> memory		5058812	0					
ANR	5058929	PtrMemberAccess	dev -> memory		5058812	0					
ANR	5058930	Identifier	dev		5058812	0					
ANR	5058931	Identifier	memory		5058812	1					
ANR	5058932	IfStatement	if ( dev -> icc_struct == NULL )		5058812	1					
ANR	5058933	Condition	dev -> icc_struct == NULL	1230:16:51299:51321	5058812	0	True				
ANR	5058934	EqualityExpression	dev -> icc_struct == NULL		5058812	0		==			
ANR	5058935	PtrMemberAccess	dev -> icc_struct		5058812	0					
ANR	5058936	Identifier	dev		5058812	0					
ANR	5058937	Identifier	icc_struct		5058812	1					
ANR	5058938	Identifier	NULL		5058812	1					
ANR	5058939	ExpressionStatement	return_error ( gs_error_VMerror )	1231:16:51340:51370	5058812	1	True				
ANR	5058940	CallExpression	return_error ( gs_error_VMerror )		5058812	0					
ANR	5058941	Callee	return_error		5058812	0					
ANR	5058942	Identifier	return_error		5058812	0					
ANR	5058943	ArgumentList	gs_error_VMerror		5058812	1					
ANR	5058944	Argument	gs_error_VMerror		5058812	0					
ANR	5058945	Identifier	gs_error_VMerror		5058812	0					
ANR	5058946	ExpressionStatement	"code = gsicc_set_device_profile_intent ( dev , icc_intent , index )"	1233:8:51390:51452	5058812	3	True				
ANR	5058947	AssignmentExpression	"code = gsicc_set_device_profile_intent ( dev , icc_intent , index )"		5058812	0		=			
ANR	5058948	Identifier	code		5058812	0					
ANR	5058949	CallExpression	"gsicc_set_device_profile_intent ( dev , icc_intent , index )"		5058812	1					
ANR	5058950	Callee	gsicc_set_device_profile_intent		5058812	0					
ANR	5058951	Identifier	gsicc_set_device_profile_intent		5058812	0					
ANR	5058952	ArgumentList	dev		5058812	1					
ANR	5058953	Argument	dev		5058812	0					
ANR	5058954	Identifier	dev		5058812	0					
ANR	5058955	Argument	icc_intent		5058812	1					
ANR	5058956	Identifier	icc_intent		5058812	0					
ANR	5058957	Argument	index		5058812	2					
ANR	5058958	Identifier	index		5058812	0					
ANR	5058959	ReturnStatement	return code ;	1235:4:51464:51475	5058812	3	True				
ANR	5058960	Identifier	code		5058812	0					
ANR	5058961	ReturnType	static int		5058812	1					
ANR	5058962	Identifier	gx_default_put_intent		5058812	2					
ANR	5058963	ParameterList	"gsicc_rendering_intents_t icc_intent , gx_device * dev , gsicc_profile_types_t index"		5058812	3					
ANR	5058964	Parameter	gsicc_rendering_intents_t icc_intent	1201:22:49929:49964	5058812	0	True				
ANR	5058965	ParameterType	gsicc_rendering_intents_t		5058812	0					
ANR	5058966	Identifier	icc_intent		5058812	1					
ANR	5058967	Parameter	gx_device * dev	1201:60:49967:49981	5058812	1	True				
ANR	5058968	ParameterType	gx_device *		5058812	0					
ANR	5058969	Identifier	dev		5058812	1					
ANR	5058970	Parameter	gsicc_profile_types_t index	1202:19:50003:50029	5058812	2	True				
ANR	5058971	ParameterType	gsicc_profile_types_t		5058812	0					
ANR	5058972	Identifier	index		5058812	1					
ANR	5058973	CFGEntryNode	ENTRY		5058812		True				
ANR	5058974	CFGExitNode	EXIT		5058812		True				
ANR	5058975	Symbol	* dev		5058812						
ANR	5058976	Symbol	gsicc_set_device_profile_intent		5058812						
ANR	5058977	Symbol	code		5058812						
ANR	5058978	Symbol	NULL		5058812						
ANR	5058979	Symbol	gsicc_new_device_profile_array		5058812						
ANR	5058980	Symbol	index		5058812						
ANR	5058981	Symbol	profile_struct		5058812						
ANR	5058982	Symbol	& profile_struct		5058812						
ANR	5058983	Symbol	gs_error_VMerror		5058812						
ANR	5058984	Symbol	dev -> memory		5058812						
ANR	5058985	Symbol	dev		5058812						
ANR	5058986	Symbol	dev_proc		5058812						
ANR	5058987	Symbol	dev -> icc_struct		5058812						
ANR	5058988	Symbol	icc_intent		5058812						
ANR	5058989	Symbol	get_profile		5058812						
ANR	5058990	Function	gx_default_put_blackpreserve	1238:0:51480:53079							
ANR	5058991	FunctionDef	"gx_default_put_blackpreserve (gsicc_blackpreserve_t blackpreserve , gx_device * dev , gsicc_profile_types_t index)"		5058990	0					
ANR	5058992	CompoundStatement		1241:0:51630:53079	5058990	0					
ANR	5058993	IdentifierDeclStatement	int code ;	1242:4:51636:51644	5058990	0	True				
ANR	5058994	IdentifierDecl	code		5058990	0					
ANR	5058995	IdentifierDeclType	int		5058990	0					
ANR	5058996	Identifier	code		5058990	1					
ANR	5058997	IdentifierDeclStatement	cmm_dev_profile_t * profile_struct ;	1243:4:51650:51683	5058990	1	True				
ANR	5058998	IdentifierDecl	* profile_struct		5058990	0					
ANR	5058999	IdentifierDeclType	cmm_dev_profile_t *		5058990	0					
ANR	5059000	Identifier	profile_struct		5058990	1					
ANR	5059001	IfStatement	"if ( dev_proc ( dev , get_profile ) == NULL )"		5058990	2					
ANR	5059002	Condition	"dev_proc ( dev , get_profile ) == NULL"	1249:8:51963:51996	5058990	0	True				
ANR	5059003	EqualityExpression	"dev_proc ( dev , get_profile ) == NULL"		5058990	0		==			
ANR	5059004	CallExpression	"dev_proc ( dev , get_profile )"		5058990	0					
ANR	5059005	Callee	dev_proc		5058990	0					
ANR	5059006	Identifier	dev_proc		5058990	0					
ANR	5059007	ArgumentList	dev		5058990	1					
ANR	5059008	Argument	dev		5058990	0					
ANR	5059009	Identifier	dev		5058990	0					
ANR	5059010	Argument	get_profile		5058990	1					
ANR	5059011	Identifier	get_profile		5058990	0					
ANR	5059012	Identifier	NULL		5058990	1					
ANR	5059013	CompoundStatement		9:44:368:368	5058990	1					
ANR	5059014	IfStatement	if ( dev -> icc_struct == NULL )		5058990	0					
ANR	5059015	Condition	dev -> icc_struct == NULL	1254:12:52254:52276	5058990	0	True				
ANR	5059016	EqualityExpression	dev -> icc_struct == NULL		5058990	0		==			
ANR	5059017	PtrMemberAccess	dev -> icc_struct		5058990	0					
ANR	5059018	Identifier	dev		5058990	0					
ANR	5059019	Identifier	icc_struct		5058990	1					
ANR	5059020	Identifier	NULL		5058990	1					
ANR	5059021	CompoundStatement		14:37:648:648	5058990	1					
ANR	5059022	ExpressionStatement	dev -> icc_struct = gsicc_new_device_profile_array ( dev -> memory )	1256:12:52378:52439	5058990	0	True				
ANR	5059023	AssignmentExpression	dev -> icc_struct = gsicc_new_device_profile_array ( dev -> memory )		5058990	0		=			
ANR	5059024	PtrMemberAccess	dev -> icc_struct		5058990	0					
ANR	5059025	Identifier	dev		5058990	0					
ANR	5059026	Identifier	icc_struct		5058990	1					
ANR	5059027	CallExpression	gsicc_new_device_profile_array ( dev -> memory )		5058990	1					
ANR	5059028	Callee	gsicc_new_device_profile_array		5058990	0					
ANR	5059029	Identifier	gsicc_new_device_profile_array		5058990	0					
ANR	5059030	ArgumentList	dev -> memory		5058990	1					
ANR	5059031	Argument	dev -> memory		5058990	0					
ANR	5059032	PtrMemberAccess	dev -> memory		5058990	0					
ANR	5059033	Identifier	dev		5058990	0					
ANR	5059034	Identifier	memory		5058990	1					
ANR	5059035	IfStatement	if ( dev -> icc_struct == NULL )		5058990	1					
ANR	5059036	Condition	dev -> icc_struct == NULL	1257:16:52457:52479	5058990	0	True				
ANR	5059037	EqualityExpression	dev -> icc_struct == NULL		5058990	0		==			
ANR	5059038	PtrMemberAccess	dev -> icc_struct		5058990	0					
ANR	5059039	Identifier	dev		5058990	0					
ANR	5059040	Identifier	icc_struct		5058990	1					
ANR	5059041	Identifier	NULL		5058990	1					
ANR	5059042	ExpressionStatement	return_error ( gs_error_VMerror )	1258:16:52498:52528	5058990	1	True				
ANR	5059043	CallExpression	return_error ( gs_error_VMerror )		5058990	0					
ANR	5059044	Callee	return_error		5058990	0					
ANR	5059045	Identifier	return_error		5058990	0					
ANR	5059046	ArgumentList	gs_error_VMerror		5058990	1					
ANR	5059047	Argument	gs_error_VMerror		5058990	0					
ANR	5059048	Identifier	gs_error_VMerror		5058990	0					
ANR	5059049	ExpressionStatement	"code = gsicc_set_device_blackpreserve ( dev , blackpreserve , index )"	1260:8:52548:52612	5058990	1	True				
ANR	5059050	AssignmentExpression	"code = gsicc_set_device_blackpreserve ( dev , blackpreserve , index )"		5058990	0		=			
ANR	5059051	Identifier	code		5058990	0					
ANR	5059052	CallExpression	"gsicc_set_device_blackpreserve ( dev , blackpreserve , index )"		5058990	1					
ANR	5059053	Callee	gsicc_set_device_blackpreserve		5058990	0					
ANR	5059054	Identifier	gsicc_set_device_blackpreserve		5058990	0					
ANR	5059055	ArgumentList	dev		5058990	1					
ANR	5059056	Argument	dev		5058990	0					
ANR	5059057	Identifier	dev		5058990	0					
ANR	5059058	Argument	blackpreserve		5058990	1					
ANR	5059059	Identifier	blackpreserve		5058990	0					
ANR	5059060	Argument	index		5058990	2					
ANR	5059061	Identifier	index		5058990	0					
ANR	5059062	ElseStatement	else		5058990	0					
ANR	5059063	CompoundStatement		21:11:994:994	5058990	0					
ANR	5059064	ExpressionStatement	"code = dev_proc ( dev , get_profile ) ( dev , & profile_struct )"	1262:8:52635:52691	5058990	0	True				
ANR	5059065	AssignmentExpression	"code = dev_proc ( dev , get_profile ) ( dev , & profile_struct )"		5058990	0		=			
ANR	5059066	Identifier	code		5058990	0					
ANR	5059067	CallExpression	"dev_proc ( dev , get_profile ) ( dev , & profile_struct )"		5058990	1					
ANR	5059068	Callee	"dev_proc ( dev , get_profile )"		5058990	0					
ANR	5059069	CallExpression	"dev_proc ( dev , get_profile )"		5058990	0					
ANR	5059070	Callee	dev_proc		5058990	0					
ANR	5059071	Identifier	dev_proc		5058990	0					
ANR	5059072	ArgumentList	dev		5058990	1					
ANR	5059073	Argument	dev		5058990	0					
ANR	5059074	Identifier	dev		5058990	0					
ANR	5059075	Argument	get_profile		5058990	1					
ANR	5059076	Identifier	get_profile		5058990	0					
ANR	5059077	ArgumentList	dev		5058990	1					
ANR	5059078	Argument	dev		5058990	0					
ANR	5059079	Identifier	dev		5058990	0					
ANR	5059080	Argument	& profile_struct		5058990	1					
ANR	5059081	UnaryOperationExpression	& profile_struct		5058990	0					
ANR	5059082	UnaryOperator	&		5058990	0					
ANR	5059083	Identifier	profile_struct		5058990	1					
ANR	5059084	IfStatement	if ( code < 0 )		5058990	1					
ANR	5059085	Condition	code < 0	1263:12:52705:52712	5058990	0	True				
ANR	5059086	RelationalExpression	code < 0		5058990	0		<			
ANR	5059087	Identifier	code		5058990	0					
ANR	5059088	PrimaryExpression	0		5058990	1					
ANR	5059089	ReturnStatement	return code ;	1264:12:52727:52738	5058990	1	True				
ANR	5059090	Identifier	code		5058990	0					
ANR	5059091	IfStatement	if ( profile_struct == NULL )		5058990	2					
ANR	5059092	Condition	profile_struct == NULL	1265:12:52752:52773	5058990	0	True				
ANR	5059093	EqualityExpression	profile_struct == NULL		5058990	0		==			
ANR	5059094	Identifier	profile_struct		5058990	0					
ANR	5059095	Identifier	NULL		5058990	1					
ANR	5059096	CompoundStatement		25:36:1145:1145	5058990	1					
ANR	5059097	ExpressionStatement	dev -> icc_struct = gsicc_new_device_profile_array ( dev -> memory )	1267:12:52820:52881	5058990	0	True				
ANR	5059098	AssignmentExpression	dev -> icc_struct = gsicc_new_device_profile_array ( dev -> memory )		5058990	0		=			
ANR	5059099	PtrMemberAccess	dev -> icc_struct		5058990	0					
ANR	5059100	Identifier	dev		5058990	0					
ANR	5059101	Identifier	icc_struct		5058990	1					
ANR	5059102	CallExpression	gsicc_new_device_profile_array ( dev -> memory )		5058990	1					
ANR	5059103	Callee	gsicc_new_device_profile_array		5058990	0					
ANR	5059104	Identifier	gsicc_new_device_profile_array		5058990	0					
ANR	5059105	ArgumentList	dev -> memory		5058990	1					
ANR	5059106	Argument	dev -> memory		5058990	0					
ANR	5059107	PtrMemberAccess	dev -> memory		5058990	0					
ANR	5059108	Identifier	dev		5058990	0					
ANR	5059109	Identifier	memory		5058990	1					
ANR	5059110	IfStatement	if ( dev -> icc_struct == NULL )		5058990	1					
ANR	5059111	Condition	dev -> icc_struct == NULL	1268:16:52899:52921	5058990	0	True				
ANR	5059112	EqualityExpression	dev -> icc_struct == NULL		5058990	0		==			
ANR	5059113	PtrMemberAccess	dev -> icc_struct		5058990	0					
ANR	5059114	Identifier	dev		5058990	0					
ANR	5059115	Identifier	icc_struct		5058990	1					
ANR	5059116	Identifier	NULL		5058990	1					
ANR	5059117	ExpressionStatement	return_error ( gs_error_VMerror )	1269:16:52940:52970	5058990	1	True				
ANR	5059118	CallExpression	return_error ( gs_error_VMerror )		5058990	0					
ANR	5059119	Callee	return_error		5058990	0					
ANR	5059120	Identifier	return_error		5058990	0					
ANR	5059121	ArgumentList	gs_error_VMerror		5058990	1					
ANR	5059122	Argument	gs_error_VMerror		5058990	0					
ANR	5059123	Identifier	gs_error_VMerror		5058990	0					
ANR	5059124	ExpressionStatement	"code = gsicc_set_device_blackpreserve ( dev , blackpreserve , index )"	1271:8:52990:53054	5058990	3	True				
ANR	5059125	AssignmentExpression	"code = gsicc_set_device_blackpreserve ( dev , blackpreserve , index )"		5058990	0		=			
ANR	5059126	Identifier	code		5058990	0					
ANR	5059127	CallExpression	"gsicc_set_device_blackpreserve ( dev , blackpreserve , index )"		5058990	1					
ANR	5059128	Callee	gsicc_set_device_blackpreserve		5058990	0					
ANR	5059129	Identifier	gsicc_set_device_blackpreserve		5058990	0					
ANR	5059130	ArgumentList	dev		5058990	1					
ANR	5059131	Argument	dev		5058990	0					
ANR	5059132	Identifier	dev		5058990	0					
ANR	5059133	Argument	blackpreserve		5058990	1					
ANR	5059134	Identifier	blackpreserve		5058990	0					
ANR	5059135	Argument	index		5058990	2					
ANR	5059136	Identifier	index		5058990	0					
ANR	5059137	ReturnStatement	return code ;	1273:4:53066:53077	5058990	3	True				
ANR	5059138	Identifier	code		5058990	0					
ANR	5059139	ReturnType	static int		5058990	1					
ANR	5059140	Identifier	gx_default_put_blackpreserve		5058990	2					
ANR	5059141	ParameterList	"gsicc_blackpreserve_t blackpreserve , gx_device * dev , gsicc_profile_types_t index"		5058990	3					
ANR	5059142	Parameter	gsicc_blackpreserve_t blackpreserve	1239:29:51520:51554	5058990	0	True				
ANR	5059143	ParameterType	gsicc_blackpreserve_t		5058990	0					
ANR	5059144	Identifier	blackpreserve		5058990	1					
ANR	5059145	Parameter	gx_device * dev	1239:66:51557:51571	5058990	1	True				
ANR	5059146	ParameterType	gx_device *		5058990	0					
ANR	5059147	Identifier	dev		5058990	1					
ANR	5059148	Parameter	gsicc_profile_types_t index	1240:27:51601:51627	5058990	2	True				
ANR	5059149	ParameterType	gsicc_profile_types_t		5058990	0					
ANR	5059150	Identifier	index		5058990	1					
ANR	5059151	CFGEntryNode	ENTRY		5058990		True				
ANR	5059152	CFGExitNode	EXIT		5058990		True				
ANR	5059153	Symbol	* dev		5058990						
ANR	5059154	Symbol	blackpreserve		5058990						
ANR	5059155	Symbol	code		5058990						
ANR	5059156	Symbol	NULL		5058990						
ANR	5059157	Symbol	gsicc_new_device_profile_array		5058990						
ANR	5059158	Symbol	index		5058990						
ANR	5059159	Symbol	profile_struct		5058990						
ANR	5059160	Symbol	& profile_struct		5058990						
ANR	5059161	Symbol	gs_error_VMerror		5058990						
ANR	5059162	Symbol	dev -> memory		5058990						
ANR	5059163	Symbol	dev		5058990						
ANR	5059164	Symbol	dev_proc		5058990						
ANR	5059165	Symbol	gsicc_set_device_blackpreserve		5058990						
ANR	5059166	Symbol	dev -> icc_struct		5058990						
ANR	5059167	Symbol	get_profile		5058990						
ANR	5059168	Function	gx_default_put_blackptcomp	1279:0:53085:54670							
ANR	5059169	FunctionDef	"gx_default_put_blackptcomp (gsicc_blackptcomp_t blackptcomp , gx_device * dev , gsicc_profile_types_t index)"		5059168	0					
ANR	5059170	CompoundStatement		1282:0:53229:54670	5059168	0					
ANR	5059171	IdentifierDeclStatement	int code ;	1283:4:53235:53243	5059168	0	True				
ANR	5059172	IdentifierDecl	code		5059168	0					
ANR	5059173	IdentifierDeclType	int		5059168	0					
ANR	5059174	Identifier	code		5059168	1					
ANR	5059175	IdentifierDeclStatement	cmm_dev_profile_t * profile_struct ;	1284:4:53249:53282	5059168	1	True				
ANR	5059176	IdentifierDecl	* profile_struct		5059168	0					
ANR	5059177	IdentifierDeclType	cmm_dev_profile_t *		5059168	0					
ANR	5059178	Identifier	profile_struct		5059168	1					
ANR	5059179	IfStatement	"if ( dev_proc ( dev , get_profile ) == NULL )"		5059168	2					
ANR	5059180	Condition	"dev_proc ( dev , get_profile ) == NULL"	1290:8:53562:53595	5059168	0	True				
ANR	5059181	EqualityExpression	"dev_proc ( dev , get_profile ) == NULL"		5059168	0		==			
ANR	5059182	CallExpression	"dev_proc ( dev , get_profile )"		5059168	0					
ANR	5059183	Callee	dev_proc		5059168	0					
ANR	5059184	Identifier	dev_proc		5059168	0					
ANR	5059185	ArgumentList	dev		5059168	1					
ANR	5059186	Argument	dev		5059168	0					
ANR	5059187	Identifier	dev		5059168	0					
ANR	5059188	Argument	get_profile		5059168	1					
ANR	5059189	Identifier	get_profile		5059168	0					
ANR	5059190	Identifier	NULL		5059168	1					
ANR	5059191	CompoundStatement		9:44:368:368	5059168	1					
ANR	5059192	IfStatement	if ( dev -> icc_struct == NULL )		5059168	0					
ANR	5059193	Condition	dev -> icc_struct == NULL	1295:12:53853:53875	5059168	0	True				
ANR	5059194	EqualityExpression	dev -> icc_struct == NULL		5059168	0		==			
ANR	5059195	PtrMemberAccess	dev -> icc_struct		5059168	0					
ANR	5059196	Identifier	dev		5059168	0					
ANR	5059197	Identifier	icc_struct		5059168	1					
ANR	5059198	Identifier	NULL		5059168	1					
ANR	5059199	CompoundStatement		14:37:648:648	5059168	1					
ANR	5059200	ExpressionStatement	dev -> icc_struct = gsicc_new_device_profile_array ( dev -> memory )	1297:12:53977:54038	5059168	0	True				
ANR	5059201	AssignmentExpression	dev -> icc_struct = gsicc_new_device_profile_array ( dev -> memory )		5059168	0		=			
ANR	5059202	PtrMemberAccess	dev -> icc_struct		5059168	0					
ANR	5059203	Identifier	dev		5059168	0					
ANR	5059204	Identifier	icc_struct		5059168	1					
ANR	5059205	CallExpression	gsicc_new_device_profile_array ( dev -> memory )		5059168	1					
ANR	5059206	Callee	gsicc_new_device_profile_array		5059168	0					
ANR	5059207	Identifier	gsicc_new_device_profile_array		5059168	0					
ANR	5059208	ArgumentList	dev -> memory		5059168	1					
ANR	5059209	Argument	dev -> memory		5059168	0					
ANR	5059210	PtrMemberAccess	dev -> memory		5059168	0					
ANR	5059211	Identifier	dev		5059168	0					
ANR	5059212	Identifier	memory		5059168	1					
ANR	5059213	IfStatement	if ( dev -> icc_struct == NULL )		5059168	1					
ANR	5059214	Condition	dev -> icc_struct == NULL	1298:16:54056:54078	5059168	0	True				
ANR	5059215	EqualityExpression	dev -> icc_struct == NULL		5059168	0		==			
ANR	5059216	PtrMemberAccess	dev -> icc_struct		5059168	0					
ANR	5059217	Identifier	dev		5059168	0					
ANR	5059218	Identifier	icc_struct		5059168	1					
ANR	5059219	Identifier	NULL		5059168	1					
ANR	5059220	ExpressionStatement	return_error ( gs_error_VMerror )	1299:16:54097:54127	5059168	1	True				
ANR	5059221	CallExpression	return_error ( gs_error_VMerror )		5059168	0					
ANR	5059222	Callee	return_error		5059168	0					
ANR	5059223	Identifier	return_error		5059168	0					
ANR	5059224	ArgumentList	gs_error_VMerror		5059168	1					
ANR	5059225	Argument	gs_error_VMerror		5059168	0					
ANR	5059226	Identifier	gs_error_VMerror		5059168	0					
ANR	5059227	ExpressionStatement	"code = gsicc_set_device_blackptcomp ( dev , blackptcomp , index )"	1301:8:54147:54207	5059168	1	True				
ANR	5059228	AssignmentExpression	"code = gsicc_set_device_blackptcomp ( dev , blackptcomp , index )"		5059168	0		=			
ANR	5059229	Identifier	code		5059168	0					
ANR	5059230	CallExpression	"gsicc_set_device_blackptcomp ( dev , blackptcomp , index )"		5059168	1					
ANR	5059231	Callee	gsicc_set_device_blackptcomp		5059168	0					
ANR	5059232	Identifier	gsicc_set_device_blackptcomp		5059168	0					
ANR	5059233	ArgumentList	dev		5059168	1					
ANR	5059234	Argument	dev		5059168	0					
ANR	5059235	Identifier	dev		5059168	0					
ANR	5059236	Argument	blackptcomp		5059168	1					
ANR	5059237	Identifier	blackptcomp		5059168	0					
ANR	5059238	Argument	index		5059168	2					
ANR	5059239	Identifier	index		5059168	0					
ANR	5059240	ElseStatement	else		5059168	0					
ANR	5059241	CompoundStatement		21:11:990:990	5059168	0					
ANR	5059242	ExpressionStatement	"code = dev_proc ( dev , get_profile ) ( dev , & profile_struct )"	1303:8:54230:54286	5059168	0	True				
ANR	5059243	AssignmentExpression	"code = dev_proc ( dev , get_profile ) ( dev , & profile_struct )"		5059168	0		=			
ANR	5059244	Identifier	code		5059168	0					
ANR	5059245	CallExpression	"dev_proc ( dev , get_profile ) ( dev , & profile_struct )"		5059168	1					
ANR	5059246	Callee	"dev_proc ( dev , get_profile )"		5059168	0					
ANR	5059247	CallExpression	"dev_proc ( dev , get_profile )"		5059168	0					
ANR	5059248	Callee	dev_proc		5059168	0					
ANR	5059249	Identifier	dev_proc		5059168	0					
ANR	5059250	ArgumentList	dev		5059168	1					
ANR	5059251	Argument	dev		5059168	0					
ANR	5059252	Identifier	dev		5059168	0					
ANR	5059253	Argument	get_profile		5059168	1					
ANR	5059254	Identifier	get_profile		5059168	0					
ANR	5059255	ArgumentList	dev		5059168	1					
ANR	5059256	Argument	dev		5059168	0					
ANR	5059257	Identifier	dev		5059168	0					
ANR	5059258	Argument	& profile_struct		5059168	1					
ANR	5059259	UnaryOperationExpression	& profile_struct		5059168	0					
ANR	5059260	UnaryOperator	&		5059168	0					
ANR	5059261	Identifier	profile_struct		5059168	1					
ANR	5059262	IfStatement	if ( code < 0 )		5059168	1					
ANR	5059263	Condition	code < 0	1304:12:54300:54307	5059168	0	True				
ANR	5059264	RelationalExpression	code < 0		5059168	0		<			
ANR	5059265	Identifier	code		5059168	0					
ANR	5059266	PrimaryExpression	0		5059168	1					
ANR	5059267	ReturnStatement	return code ;	1305:12:54322:54333	5059168	1	True				
ANR	5059268	Identifier	code		5059168	0					
ANR	5059269	IfStatement	if ( profile_struct == NULL )		5059168	2					
ANR	5059270	Condition	profile_struct == NULL	1306:12:54347:54368	5059168	0	True				
ANR	5059271	EqualityExpression	profile_struct == NULL		5059168	0		==			
ANR	5059272	Identifier	profile_struct		5059168	0					
ANR	5059273	Identifier	NULL		5059168	1					
ANR	5059274	CompoundStatement		25:36:1141:1141	5059168	1					
ANR	5059275	ExpressionStatement	dev -> icc_struct = gsicc_new_device_profile_array ( dev -> memory )	1308:12:54415:54476	5059168	0	True				
ANR	5059276	AssignmentExpression	dev -> icc_struct = gsicc_new_device_profile_array ( dev -> memory )		5059168	0		=			
ANR	5059277	PtrMemberAccess	dev -> icc_struct		5059168	0					
ANR	5059278	Identifier	dev		5059168	0					
ANR	5059279	Identifier	icc_struct		5059168	1					
ANR	5059280	CallExpression	gsicc_new_device_profile_array ( dev -> memory )		5059168	1					
ANR	5059281	Callee	gsicc_new_device_profile_array		5059168	0					
ANR	5059282	Identifier	gsicc_new_device_profile_array		5059168	0					
ANR	5059283	ArgumentList	dev -> memory		5059168	1					
ANR	5059284	Argument	dev -> memory		5059168	0					
ANR	5059285	PtrMemberAccess	dev -> memory		5059168	0					
ANR	5059286	Identifier	dev		5059168	0					
ANR	5059287	Identifier	memory		5059168	1					
ANR	5059288	IfStatement	if ( dev -> icc_struct == NULL )		5059168	1					
ANR	5059289	Condition	dev -> icc_struct == NULL	1309:16:54494:54516	5059168	0	True				
ANR	5059290	EqualityExpression	dev -> icc_struct == NULL		5059168	0		==			
ANR	5059291	PtrMemberAccess	dev -> icc_struct		5059168	0					
ANR	5059292	Identifier	dev		5059168	0					
ANR	5059293	Identifier	icc_struct		5059168	1					
ANR	5059294	Identifier	NULL		5059168	1					
ANR	5059295	ExpressionStatement	return_error ( gs_error_VMerror )	1310:16:54535:54565	5059168	1	True				
ANR	5059296	CallExpression	return_error ( gs_error_VMerror )		5059168	0					
ANR	5059297	Callee	return_error		5059168	0					
ANR	5059298	Identifier	return_error		5059168	0					
ANR	5059299	ArgumentList	gs_error_VMerror		5059168	1					
ANR	5059300	Argument	gs_error_VMerror		5059168	0					
ANR	5059301	Identifier	gs_error_VMerror		5059168	0					
ANR	5059302	ExpressionStatement	"code = gsicc_set_device_blackptcomp ( dev , blackptcomp , index )"	1312:8:54585:54645	5059168	3	True				
ANR	5059303	AssignmentExpression	"code = gsicc_set_device_blackptcomp ( dev , blackptcomp , index )"		5059168	0		=			
ANR	5059304	Identifier	code		5059168	0					
ANR	5059305	CallExpression	"gsicc_set_device_blackptcomp ( dev , blackptcomp , index )"		5059168	1					
ANR	5059306	Callee	gsicc_set_device_blackptcomp		5059168	0					
ANR	5059307	Identifier	gsicc_set_device_blackptcomp		5059168	0					
ANR	5059308	ArgumentList	dev		5059168	1					
ANR	5059309	Argument	dev		5059168	0					
ANR	5059310	Identifier	dev		5059168	0					
ANR	5059311	Argument	blackptcomp		5059168	1					
ANR	5059312	Identifier	blackptcomp		5059168	0					
ANR	5059313	Argument	index		5059168	2					
ANR	5059314	Identifier	index		5059168	0					
ANR	5059315	ReturnStatement	return code ;	1314:4:54657:54668	5059168	3	True				
ANR	5059316	Identifier	code		5059168	0					
ANR	5059317	ReturnType	static int		5059168	1					
ANR	5059318	Identifier	gx_default_put_blackptcomp		5059168	2					
ANR	5059319	ParameterList	"gsicc_blackptcomp_t blackptcomp , gx_device * dev , gsicc_profile_types_t index"		5059168	3					
ANR	5059320	Parameter	gsicc_blackptcomp_t blackptcomp	1280:27:53123:53153	5059168	0	True				
ANR	5059321	ParameterType	gsicc_blackptcomp_t		5059168	0					
ANR	5059322	Identifier	blackptcomp		5059168	1					
ANR	5059323	Parameter	gx_device * dev	1280:60:53156:53170	5059168	1	True				
ANR	5059324	ParameterType	gx_device *		5059168	0					
ANR	5059325	Identifier	dev		5059168	1					
ANR	5059326	Parameter	gsicc_profile_types_t index	1281:27:53200:53226	5059168	2	True				
ANR	5059327	ParameterType	gsicc_profile_types_t		5059168	0					
ANR	5059328	Identifier	index		5059168	1					
ANR	5059329	CFGEntryNode	ENTRY		5059168		True				
ANR	5059330	CFGExitNode	EXIT		5059168		True				
ANR	5059331	Symbol	* dev		5059168						
ANR	5059332	Symbol	code		5059168						
ANR	5059333	Symbol	NULL		5059168						
ANR	5059334	Symbol	gsicc_new_device_profile_array		5059168						
ANR	5059335	Symbol	blackptcomp		5059168						
ANR	5059336	Symbol	index		5059168						
ANR	5059337	Symbol	profile_struct		5059168						
ANR	5059338	Symbol	gsicc_set_device_blackptcomp		5059168						
ANR	5059339	Symbol	& profile_struct		5059168						
ANR	5059340	Symbol	gs_error_VMerror		5059168						
ANR	5059341	Symbol	dev -> memory		5059168						
ANR	5059342	Symbol	dev		5059168						
ANR	5059343	Symbol	dev_proc		5059168						
ANR	5059344	Symbol	dev -> icc_struct		5059168						
ANR	5059345	Symbol	get_profile		5059168						
ANR	5059346	Function	gx_default_put_icc_colorants	1317:0:54673:55363							
ANR	5059347	FunctionDef	"gx_default_put_icc_colorants (gs_param_string * colorants , gx_device * dev)"		5059346	0					
ANR	5059348	CompoundStatement		1319:0:54758:55363	5059346	0					
ANR	5059349	IdentifierDeclStatement	char * tempstr ;	1320:4:54764:54777	5059346	0	True				
ANR	5059350	IdentifierDecl	* tempstr		5059346	0					
ANR	5059351	IdentifierDeclType	char *		5059346	0					
ANR	5059352	Identifier	tempstr		5059346	1					
ANR	5059353	IdentifierDeclStatement	int code ;	1321:4:54783:54791	5059346	1	True				
ANR	5059354	IdentifierDecl	code		5059346	0					
ANR	5059355	IdentifierDeclType	int		5059346	0					
ANR	5059356	Identifier	code		5059346	1					
ANR	5059357	IfStatement	if ( colorants -> size == 0 )		5059346	2					
ANR	5059358	Condition	colorants -> size == 0	1323:8:54802:54821	5059346	0	True				
ANR	5059359	EqualityExpression	colorants -> size == 0		5059346	0		==			
ANR	5059360	PtrMemberAccess	colorants -> size		5059346	0					
ANR	5059361	Identifier	colorants		5059346	0					
ANR	5059362	Identifier	size		5059346	1					
ANR	5059363	PrimaryExpression	0		5059346	1					
ANR	5059364	ReturnStatement	return 0 ;	1323:30:54824:54832	5059346	1	True				
ANR	5059365	PrimaryExpression	0		5059346	0					
ANR	5059366	ExpressionStatement	"fill_dev_proc ( dev , get_profile , gx_default_get_profile )"	1326:4:54887:54942	5059346	3	True				
ANR	5059367	CallExpression	"fill_dev_proc ( dev , get_profile , gx_default_get_profile )"		5059346	0					
ANR	5059368	Callee	fill_dev_proc		5059346	0					
ANR	5059369	Identifier	fill_dev_proc		5059346	0					
ANR	5059370	ArgumentList	dev		5059346	1					
ANR	5059371	Argument	dev		5059346	0					
ANR	5059372	Identifier	dev		5059346	0					
ANR	5059373	Argument	get_profile		5059346	1					
ANR	5059374	Identifier	get_profile		5059346	0					
ANR	5059375	Argument	gx_default_get_profile		5059346	2					
ANR	5059376	Identifier	gx_default_get_profile		5059346	0					
ANR	5059377	ExpressionStatement	"tempstr = ( char * ) gs_alloc_bytes ( dev -> memory , colorants -> size + 1 , ""gx_default_put_icc_colorants"" )"	1327:4:54948:55083	5059346	4	True				
ANR	5059378	AssignmentExpression	"tempstr = ( char * ) gs_alloc_bytes ( dev -> memory , colorants -> size + 1 , ""gx_default_put_icc_colorants"" )"		5059346	0		=			
ANR	5059379	Identifier	tempstr		5059346	0					
ANR	5059380	CastExpression	"( char * ) gs_alloc_bytes ( dev -> memory , colorants -> size + 1 , ""gx_default_put_icc_colorants"" )"		5059346	1					
ANR	5059381	CastTarget	char *		5059346	0					
ANR	5059382	CallExpression	"gs_alloc_bytes ( dev -> memory , colorants -> size + 1 , ""gx_default_put_icc_colorants"" )"		5059346	1					
ANR	5059383	Callee	gs_alloc_bytes		5059346	0					
ANR	5059384	Identifier	gs_alloc_bytes		5059346	0					
ANR	5059385	ArgumentList	dev -> memory		5059346	1					
ANR	5059386	Argument	dev -> memory		5059346	0					
ANR	5059387	PtrMemberAccess	dev -> memory		5059346	0					
ANR	5059388	Identifier	dev		5059346	0					
ANR	5059389	Identifier	memory		5059346	1					
ANR	5059390	Argument	colorants -> size + 1		5059346	1					
ANR	5059391	AdditiveExpression	colorants -> size + 1		5059346	0		+			
ANR	5059392	PtrMemberAccess	colorants -> size		5059346	0					
ANR	5059393	Identifier	colorants		5059346	0					
ANR	5059394	Identifier	size		5059346	1					
ANR	5059395	PrimaryExpression	1		5059346	1					
ANR	5059396	Argument	"""gx_default_put_icc_colorants"""		5059346	2					
ANR	5059397	PrimaryExpression	"""gx_default_put_icc_colorants"""		5059346	0					
ANR	5059398	ExpressionStatement	"memcpy ( tempstr , colorants -> data , colorants -> size )"	1329:4:55089:55138	5059346	5	True				
ANR	5059399	CallExpression	"memcpy ( tempstr , colorants -> data , colorants -> size )"		5059346	0					
ANR	5059400	Callee	memcpy		5059346	0					
ANR	5059401	Identifier	memcpy		5059346	0					
ANR	5059402	ArgumentList	tempstr		5059346	1					
ANR	5059403	Argument	tempstr		5059346	0					
ANR	5059404	Identifier	tempstr		5059346	0					
ANR	5059405	Argument	colorants -> data		5059346	1					
ANR	5059406	PtrMemberAccess	colorants -> data		5059346	0					
ANR	5059407	Identifier	colorants		5059346	0					
ANR	5059408	Identifier	data		5059346	1					
ANR	5059409	Argument	colorants -> size		5059346	2					
ANR	5059410	PtrMemberAccess	colorants -> size		5059346	0					
ANR	5059411	Identifier	colorants		5059346	0					
ANR	5059412	Identifier	size		5059346	1					
ANR	5059413	ExpressionStatement	tempstr [ colorants -> size ] = 0	1331:4:55181:55209	5059346	6	True				
ANR	5059414	AssignmentExpression	tempstr [ colorants -> size ] = 0		5059346	0		=			
ANR	5059415	ArrayIndexing	tempstr [ colorants -> size ]		5059346	0					
ANR	5059416	Identifier	tempstr		5059346	0					
ANR	5059417	PtrMemberAccess	colorants -> size		5059346	1					
ANR	5059418	Identifier	colorants		5059346	0					
ANR	5059419	Identifier	size		5059346	1					
ANR	5059420	PrimaryExpression	0		5059346	1					
ANR	5059421	ExpressionStatement	"code = gsicc_set_device_profile_colorants ( dev , tempstr )"	1332:4:55215:55270	5059346	7	True				
ANR	5059422	AssignmentExpression	"code = gsicc_set_device_profile_colorants ( dev , tempstr )"		5059346	0		=			
ANR	5059423	Identifier	code		5059346	0					
ANR	5059424	CallExpression	"gsicc_set_device_profile_colorants ( dev , tempstr )"		5059346	1					
ANR	5059425	Callee	gsicc_set_device_profile_colorants		5059346	0					
ANR	5059426	Identifier	gsicc_set_device_profile_colorants		5059346	0					
ANR	5059427	ArgumentList	dev		5059346	1					
ANR	5059428	Argument	dev		5059346	0					
ANR	5059429	Identifier	dev		5059346	0					
ANR	5059430	Argument	tempstr		5059346	1					
ANR	5059431	Identifier	tempstr		5059346	0					
ANR	5059432	ExpressionStatement	"gs_free_object ( dev -> memory , tempstr , ""gx_default_put_icc_colorants"" )"	1333:4:55276:55344	5059346	8	True				
ANR	5059433	CallExpression	"gs_free_object ( dev -> memory , tempstr , ""gx_default_put_icc_colorants"" )"		5059346	0					
ANR	5059434	Callee	gs_free_object		5059346	0					
ANR	5059435	Identifier	gs_free_object		5059346	0					
ANR	5059436	ArgumentList	dev -> memory		5059346	1					
ANR	5059437	Argument	dev -> memory		5059346	0					
ANR	5059438	PtrMemberAccess	dev -> memory		5059346	0					
ANR	5059439	Identifier	dev		5059346	0					
ANR	5059440	Identifier	memory		5059346	1					
ANR	5059441	Argument	tempstr		5059346	1					
ANR	5059442	Identifier	tempstr		5059346	0					
ANR	5059443	Argument	"""gx_default_put_icc_colorants"""		5059346	2					
ANR	5059444	PrimaryExpression	"""gx_default_put_icc_colorants"""		5059346	0					
ANR	5059445	ReturnStatement	return code ;	1334:4:55350:55361	5059346	9	True				
ANR	5059446	Identifier	code		5059346	0					
ANR	5059447	ReturnType	static int		5059346	1					
ANR	5059448	Identifier	gx_default_put_icc_colorants		5059346	2					
ANR	5059449	ParameterList	"gs_param_string * colorants , gx_device * dev"		5059346	3					
ANR	5059450	Parameter	gs_param_string * colorants	1318:29:54713:54738	5059346	0	True				
ANR	5059451	ParameterType	gs_param_string *		5059346	0					
ANR	5059452	Identifier	colorants		5059346	1					
ANR	5059453	Parameter	gx_device * dev	1318:57:54741:54755	5059346	1	True				
ANR	5059454	ParameterType	gx_device *		5059346	0					
ANR	5059455	Identifier	dev		5059346	1					
ANR	5059456	CFGEntryNode	ENTRY		5059346		True				
ANR	5059457	CFGExitNode	EXIT		5059346		True				
ANR	5059458	Symbol	* dev		5059346						
ANR	5059459	Symbol	gs_alloc_bytes		5059346						
ANR	5059460	Symbol	code		5059346						
ANR	5059461	Symbol	* tempstr		5059346						
ANR	5059462	Symbol	gsicc_set_device_profile_colorants		5059346						
ANR	5059463	Symbol	dev -> memory		5059346						
ANR	5059464	Symbol	colorants -> data		5059346						
ANR	5059465	Symbol	dev		5059346						
ANR	5059466	Symbol	* colorants		5059346						
ANR	5059467	Symbol	gx_default_get_profile		5059346						
ANR	5059468	Symbol	colorants		5059346						
ANR	5059469	Symbol	* colorants -> size		5059346						
ANR	5059470	Symbol	* * colorants		5059346						
ANR	5059471	Symbol	tempstr		5059346						
ANR	5059472	Symbol	colorants -> size		5059346						
ANR	5059473	Symbol	get_profile		5059346						
ANR	5059474	Function	gx_default_put_icc	1337:0:55366:56572							
ANR	5059475	FunctionDef	"gx_default_put_icc (gs_param_string * icc_pro , gx_device * dev , gsicc_profile_types_t index)"		5059474	0					
ANR	5059476	CompoundStatement		1340:0:55487:56572	5059474	0					
ANR	5059477	IdentifierDeclStatement	char * tempstr ;	1341:4:55493:55506	5059474	0	True				
ANR	5059478	IdentifierDecl	* tempstr		5059474	0					
ANR	5059479	IdentifierDeclType	char *		5059474	0					
ANR	5059480	Identifier	tempstr		5059474	1					
ANR	5059481	IdentifierDeclStatement	int code = 0 ;	1342:4:55512:55524	5059474	1	True				
ANR	5059482	IdentifierDecl	code = 0		5059474	0					
ANR	5059483	IdentifierDeclType	int		5059474	0					
ANR	5059484	Identifier	code		5059474	1					
ANR	5059485	AssignmentExpression	code = 0		5059474	2		=			
ANR	5059486	Identifier	code		5059474	0					
ANR	5059487	PrimaryExpression	0		5059474	1					
ANR	5059488	IfStatement	if ( icc_pro -> size == 0 )		5059474	2					
ANR	5059489	Condition	icc_pro -> size == 0	1344:8:55535:55552	5059474	0	True				
ANR	5059490	EqualityExpression	icc_pro -> size == 0		5059474	0		==			
ANR	5059491	PtrMemberAccess	icc_pro -> size		5059474	0					
ANR	5059492	Identifier	icc_pro		5059474	0					
ANR	5059493	Identifier	size		5059474	1					
ANR	5059494	PrimaryExpression	0		5059474	1					
ANR	5059495	ReturnStatement	return 0 ;	1344:28:55555:55563	5059474	1	True				
ANR	5059496	PrimaryExpression	0		5059474	0					
ANR	5059497	ExpressionStatement	"fill_dev_proc ( dev , get_profile , gx_default_get_profile )"	1351:4:55965:56020	5059474	3	True				
ANR	5059498	CallExpression	"fill_dev_proc ( dev , get_profile , gx_default_get_profile )"		5059474	0					
ANR	5059499	Callee	fill_dev_proc		5059474	0					
ANR	5059500	Identifier	fill_dev_proc		5059474	0					
ANR	5059501	ArgumentList	dev		5059474	1					
ANR	5059502	Argument	dev		5059474	0					
ANR	5059503	Identifier	dev		5059474	0					
ANR	5059504	Argument	get_profile		5059474	1					
ANR	5059505	Identifier	get_profile		5059474	0					
ANR	5059506	Argument	gx_default_get_profile		5059474	2					
ANR	5059507	Identifier	gx_default_get_profile		5059474	0					
ANR	5059508	IfStatement	if ( icc_pro -> size < gp_file_name_sizeof )		5059474	4					
ANR	5059509	Condition	icc_pro -> size < gp_file_name_sizeof	1352:8:56030:56064	5059474	0	True				
ANR	5059510	RelationalExpression	icc_pro -> size < gp_file_name_sizeof		5059474	0		<			
ANR	5059511	PtrMemberAccess	icc_pro -> size		5059474	0					
ANR	5059512	Identifier	icc_pro		5059474	0					
ANR	5059513	Identifier	size		5059474	1					
ANR	5059514	Identifier	gp_file_name_sizeof		5059474	1					
ANR	5059515	CompoundStatement		13:45:579:579	5059474	1					
ANR	5059516	ExpressionStatement	"tempstr = ( char * ) gs_alloc_bytes ( dev -> memory , icc_pro -> size + 1 , ""gx_default_put_icc"" )"	1353:8:56077:56204	5059474	0	True				
ANR	5059517	AssignmentExpression	"tempstr = ( char * ) gs_alloc_bytes ( dev -> memory , icc_pro -> size + 1 , ""gx_default_put_icc"" )"		5059474	0		=			
ANR	5059518	Identifier	tempstr		5059474	0					
ANR	5059519	CastExpression	"( char * ) gs_alloc_bytes ( dev -> memory , icc_pro -> size + 1 , ""gx_default_put_icc"" )"		5059474	1					
ANR	5059520	CastTarget	char *		5059474	0					
ANR	5059521	CallExpression	"gs_alloc_bytes ( dev -> memory , icc_pro -> size + 1 , ""gx_default_put_icc"" )"		5059474	1					
ANR	5059522	Callee	gs_alloc_bytes		5059474	0					
ANR	5059523	Identifier	gs_alloc_bytes		5059474	0					
ANR	5059524	ArgumentList	dev -> memory		5059474	1					
ANR	5059525	Argument	dev -> memory		5059474	0					
ANR	5059526	PtrMemberAccess	dev -> memory		5059474	0					
ANR	5059527	Identifier	dev		5059474	0					
ANR	5059528	Identifier	memory		5059474	1					
ANR	5059529	Argument	icc_pro -> size + 1		5059474	1					
ANR	5059530	AdditiveExpression	icc_pro -> size + 1		5059474	0		+			
ANR	5059531	PtrMemberAccess	icc_pro -> size		5059474	0					
ANR	5059532	Identifier	icc_pro		5059474	0					
ANR	5059533	Identifier	size		5059474	1					
ANR	5059534	PrimaryExpression	1		5059474	1					
ANR	5059535	Argument	"""gx_default_put_icc"""		5059474	2					
ANR	5059536	PrimaryExpression	"""gx_default_put_icc"""		5059474	0					
ANR	5059537	IfStatement	if ( tempstr == NULL )		5059474	1					
ANR	5059538	Condition	tempstr == NULL	1355:12:56218:56232	5059474	0	True				
ANR	5059539	EqualityExpression	tempstr == NULL		5059474	0		==			
ANR	5059540	Identifier	tempstr		5059474	0					
ANR	5059541	Identifier	NULL		5059474	1					
ANR	5059542	ExpressionStatement	return_error ( gs_error_VMerror )	1356:12:56247:56277	5059474	1	True				
ANR	5059543	CallExpression	return_error ( gs_error_VMerror )		5059474	0					
ANR	5059544	Callee	return_error		5059474	0					
ANR	5059545	Identifier	return_error		5059474	0					
ANR	5059546	ArgumentList	gs_error_VMerror		5059474	1					
ANR	5059547	Argument	gs_error_VMerror		5059474	0					
ANR	5059548	Identifier	gs_error_VMerror		5059474	0					
ANR	5059549	ExpressionStatement	"memcpy ( tempstr , icc_pro -> data , icc_pro -> size )"	1357:8:56287:56332	5059474	2	True				
ANR	5059550	CallExpression	"memcpy ( tempstr , icc_pro -> data , icc_pro -> size )"		5059474	0					
ANR	5059551	Callee	memcpy		5059474	0					
ANR	5059552	Identifier	memcpy		5059474	0					
ANR	5059553	ArgumentList	tempstr		5059474	1					
ANR	5059554	Argument	tempstr		5059474	0					
ANR	5059555	Identifier	tempstr		5059474	0					
ANR	5059556	Argument	icc_pro -> data		5059474	1					
ANR	5059557	PtrMemberAccess	icc_pro -> data		5059474	0					
ANR	5059558	Identifier	icc_pro		5059474	0					
ANR	5059559	Identifier	data		5059474	1					
ANR	5059560	Argument	icc_pro -> size		5059474	2					
ANR	5059561	PtrMemberAccess	icc_pro -> size		5059474	0					
ANR	5059562	Identifier	icc_pro		5059474	0					
ANR	5059563	Identifier	size		5059474	1					
ANR	5059564	ExpressionStatement	tempstr [ icc_pro -> size ] = 0	1359:8:56383:56409	5059474	3	True				
ANR	5059565	AssignmentExpression	tempstr [ icc_pro -> size ] = 0		5059474	0		=			
ANR	5059566	ArrayIndexing	tempstr [ icc_pro -> size ]		5059474	0					
ANR	5059567	Identifier	tempstr		5059474	0					
ANR	5059568	PtrMemberAccess	icc_pro -> size		5059474	1					
ANR	5059569	Identifier	icc_pro		5059474	0					
ANR	5059570	Identifier	size		5059474	1					
ANR	5059571	PrimaryExpression	0		5059474	1					
ANR	5059572	ExpressionStatement	"code = gsicc_init_device_profile_struct ( dev , tempstr , index )"	1360:8:56419:56479	5059474	4	True				
ANR	5059573	AssignmentExpression	"code = gsicc_init_device_profile_struct ( dev , tempstr , index )"		5059474	0		=			
ANR	5059574	Identifier	code		5059474	0					
ANR	5059575	CallExpression	"gsicc_init_device_profile_struct ( dev , tempstr , index )"		5059474	1					
ANR	5059576	Callee	gsicc_init_device_profile_struct		5059474	0					
ANR	5059577	Identifier	gsicc_init_device_profile_struct		5059474	0					
ANR	5059578	ArgumentList	dev		5059474	1					
ANR	5059579	Argument	dev		5059474	0					
ANR	5059580	Identifier	dev		5059474	0					
ANR	5059581	Argument	tempstr		5059474	1					
ANR	5059582	Identifier	tempstr		5059474	0					
ANR	5059583	Argument	index		5059474	2					
ANR	5059584	Identifier	index		5059474	0					
ANR	5059585	ExpressionStatement	"gs_free_object ( dev -> memory , tempstr , ""gx_default_put_icc"" )"	1361:8:56489:56547	5059474	5	True				
ANR	5059586	CallExpression	"gs_free_object ( dev -> memory , tempstr , ""gx_default_put_icc"" )"		5059474	0					
ANR	5059587	Callee	gs_free_object		5059474	0					
ANR	5059588	Identifier	gs_free_object		5059474	0					
ANR	5059589	ArgumentList	dev -> memory		5059474	1					
ANR	5059590	Argument	dev -> memory		5059474	0					
ANR	5059591	PtrMemberAccess	dev -> memory		5059474	0					
ANR	5059592	Identifier	dev		5059474	0					
ANR	5059593	Identifier	memory		5059474	1					
ANR	5059594	Argument	tempstr		5059474	1					
ANR	5059595	Identifier	tempstr		5059474	0					
ANR	5059596	Argument	"""gx_default_put_icc"""		5059474	2					
ANR	5059597	PrimaryExpression	"""gx_default_put_icc"""		5059474	0					
ANR	5059598	ReturnStatement	return code ;	1363:4:56559:56570	5059474	5	True				
ANR	5059599	Identifier	code		5059474	0					
ANR	5059600	ReturnType	static int		5059474	1					
ANR	5059601	Identifier	gx_default_put_icc		5059474	2					
ANR	5059602	ParameterList	"gs_param_string * icc_pro , gx_device * dev , gsicc_profile_types_t index"		5059474	3					
ANR	5059603	Parameter	gs_param_string * icc_pro	1338:19:55396:55419	5059474	0	True				
ANR	5059604	ParameterType	gs_param_string *		5059474	0					
ANR	5059605	Identifier	icc_pro		5059474	1					
ANR	5059606	Parameter	gx_device * dev	1338:45:55422:55436	5059474	1	True				
ANR	5059607	ParameterType	gx_device *		5059474	0					
ANR	5059608	Identifier	dev		5059474	1					
ANR	5059609	Parameter	gsicc_profile_types_t index	1339:19:55458:55484	5059474	2	True				
ANR	5059610	ParameterType	gsicc_profile_types_t		5059474	0					
ANR	5059611	Identifier	index		5059474	1					
ANR	5059612	CFGEntryNode	ENTRY		5059474		True				
ANR	5059613	CFGExitNode	EXIT		5059474		True				
ANR	5059614	Symbol	* dev		5059474						
ANR	5059615	Symbol	gs_alloc_bytes		5059474						
ANR	5059616	Symbol	code		5059474						
ANR	5059617	Symbol	NULL		5059474						
ANR	5059618	Symbol	gsicc_init_device_profile_struct		5059474						
ANR	5059619	Symbol	* tempstr		5059474						
ANR	5059620	Symbol	icc_pro		5059474						
ANR	5059621	Symbol	index		5059474						
ANR	5059622	Symbol	gp_file_name_sizeof		5059474						
ANR	5059623	Symbol	icc_pro -> size		5059474						
ANR	5059624	Symbol	gs_error_VMerror		5059474						
ANR	5059625	Symbol	dev -> memory		5059474						
ANR	5059626	Symbol	dev		5059474						
ANR	5059627	Symbol	gx_default_get_profile		5059474						
ANR	5059628	Symbol	icc_pro -> data		5059474						
ANR	5059629	Symbol	* icc_pro -> size		5059474						
ANR	5059630	Symbol	* * icc_pro		5059474						
ANR	5059631	Symbol	* icc_pro		5059474						
ANR	5059632	Symbol	tempstr		5059474						
ANR	5059633	Symbol	get_profile		5059474						
ANR	5059634	Function	rc_free_pages_list	1366:0:56575:56958							
ANR	5059635	FunctionDef	"rc_free_pages_list (gs_memory_t * mem , void * ptr_in , client_name_t cname)"		5059634	0					
ANR	5059636	CompoundStatement		1368:0:56660:56958	5059634	0					
ANR	5059637	IdentifierDeclStatement	gdev_pagelist * PageList = ( gdev_pagelist * ) ptr_in ;	1369:4:56666:56715	5059634	0	True				
ANR	5059638	IdentifierDecl	* PageList = ( gdev_pagelist * ) ptr_in		5059634	0					
ANR	5059639	IdentifierDeclType	gdev_pagelist *		5059634	0					
ANR	5059640	Identifier	PageList		5059634	1					
ANR	5059641	AssignmentExpression	* PageList = ( gdev_pagelist * ) ptr_in		5059634	2		=			
ANR	5059642	Identifier	PageList		5059634	0					
ANR	5059643	CastExpression	( gdev_pagelist * ) ptr_in		5059634	1					
ANR	5059644	CastTarget	gdev_pagelist *		5059634	0					
ANR	5059645	Identifier	ptr_in		5059634	1					
ANR	5059646	IfStatement	if ( PageList -> rc . ref_count <= 1 )		5059634	1					
ANR	5059647	Condition	PageList -> rc . ref_count <= 1	1371:8:56726:56752	5059634	0	True				
ANR	5059648	RelationalExpression	PageList -> rc . ref_count <= 1		5059634	0		<=			
ANR	5059649	MemberAccess	PageList -> rc . ref_count		5059634	0					
ANR	5059650	PtrMemberAccess	PageList -> rc		5059634	0					
ANR	5059651	Identifier	PageList		5059634	0					
ANR	5059652	Identifier	rc		5059634	1					
ANR	5059653	Identifier	ref_count		5059634	1					
ANR	5059654	PrimaryExpression	1		5059634	1					
ANR	5059655	CompoundStatement		4:37:94:94	5059634	1					
ANR	5059656	ExpressionStatement	"gs_free ( mem -> non_gc_memory , PageList -> Pages , 1 , PagesSize , ""free page list"" )"	1372:8:56765:56841	5059634	0	True				
ANR	5059657	CallExpression	"gs_free ( mem -> non_gc_memory , PageList -> Pages , 1 , PagesSize , ""free page list"" )"		5059634	0					
ANR	5059658	Callee	gs_free		5059634	0					
ANR	5059659	Identifier	gs_free		5059634	0					
ANR	5059660	ArgumentList	mem -> non_gc_memory		5059634	1					
ANR	5059661	Argument	mem -> non_gc_memory		5059634	0					
ANR	5059662	PtrMemberAccess	mem -> non_gc_memory		5059634	0					
ANR	5059663	Identifier	mem		5059634	0					
ANR	5059664	Identifier	non_gc_memory		5059634	1					
ANR	5059665	Argument	PageList -> Pages		5059634	1					
ANR	5059666	PtrMemberAccess	PageList -> Pages		5059634	0					
ANR	5059667	Identifier	PageList		5059634	0					
ANR	5059668	Identifier	Pages		5059634	1					
ANR	5059669	Argument	1		5059634	2					
ANR	5059670	PrimaryExpression	1		5059634	0					
ANR	5059671	Argument	PagesSize		5059634	3					
ANR	5059672	Identifier	PagesSize		5059634	0					
ANR	5059673	Argument	"""free page list"""		5059634	4					
ANR	5059674	PrimaryExpression	"""free page list"""		5059634	0					
ANR	5059675	ExpressionStatement	"gs_free ( mem -> non_gc_memory , PageList , 1 , sizeof ( gdev_pagelist ) , ""free structure to hold page list"" )"	1373:8:56851:56950	5059634	1	True				
ANR	5059676	CallExpression	"gs_free ( mem -> non_gc_memory , PageList , 1 , sizeof ( gdev_pagelist ) , ""free structure to hold page list"" )"		5059634	0					
ANR	5059677	Callee	gs_free		5059634	0					
ANR	5059678	Identifier	gs_free		5059634	0					
ANR	5059679	ArgumentList	mem -> non_gc_memory		5059634	1					
ANR	5059680	Argument	mem -> non_gc_memory		5059634	0					
ANR	5059681	PtrMemberAccess	mem -> non_gc_memory		5059634	0					
ANR	5059682	Identifier	mem		5059634	0					
ANR	5059683	Identifier	non_gc_memory		5059634	1					
ANR	5059684	Argument	PageList		5059634	1					
ANR	5059685	Identifier	PageList		5059634	0					
ANR	5059686	Argument	1		5059634	2					
ANR	5059687	PrimaryExpression	1		5059634	0					
ANR	5059688	Argument	sizeof ( gdev_pagelist )		5059634	3					
ANR	5059689	SizeofExpression	sizeof ( gdev_pagelist )		5059634	0					
ANR	5059690	Sizeof	sizeof		5059634	0					
ANR	5059691	SizeofOperand	gdev_pagelist		5059634	1					
ANR	5059692	Argument	"""free structure to hold page list"""		5059634	4					
ANR	5059693	PrimaryExpression	"""free structure to hold page list"""		5059634	0					
ANR	5059694	ReturnType	static void		5059634	1					
ANR	5059695	Identifier	rc_free_pages_list		5059634	2					
ANR	5059696	ParameterList	"gs_memory_t * mem , void * ptr_in , client_name_t cname"		5059634	3					
ANR	5059697	Parameter	gs_memory_t * mem	1367:19:56606:56622	5059634	0	True				
ANR	5059698	ParameterType	gs_memory_t *		5059634	0					
ANR	5059699	Identifier	mem		5059634	1					
ANR	5059700	Parameter	void * ptr_in	1367:38:56625:56636	5059634	1	True				
ANR	5059701	ParameterType	void *		5059634	0					
ANR	5059702	Identifier	ptr_in		5059634	1					
ANR	5059703	Parameter	client_name_t cname	1367:52:56639:56657	5059634	2	True				
ANR	5059704	ParameterType	client_name_t		5059634	0					
ANR	5059705	Identifier	cname		5059634	1					
ANR	5059706	CFGEntryNode	ENTRY		5059634		True				
ANR	5059707	CFGExitNode	EXIT		5059634		True				
ANR	5059708	Symbol	ptr_in		5059634						
ANR	5059709	Symbol	mem		5059634						
ANR	5059710	Symbol	PageList -> Pages		5059634						
ANR	5059711	Symbol	cname		5059634						
ANR	5059712	Symbol	* PageList		5059634						
ANR	5059713	Symbol	PageList		5059634						
ANR	5059714	Symbol	PageList -> rc . ref_count		5059634						
ANR	5059715	Symbol	mem -> non_gc_memory		5059634						
ANR	5059716	Symbol	PageList -> rc		5059634						
ANR	5059717	Symbol	PagesSize		5059634						
ANR	5059718	Symbol	* mem		5059634						
ANR	5059719	Function	gx_default_put_params	1382:0:57245:86277							
ANR	5059720	FunctionDef	"gx_default_put_params (gx_device * dev , gs_param_list * plist)"		5059719	0					
ANR	5059721	CompoundStatement		1384:0:57311:86277	5059719	0					
ANR	5059722	IdentifierDeclStatement	int ecode = 0 ;	1385:4:57317:57330	5059719	0	True				
ANR	5059723	IdentifierDecl	ecode = 0		5059719	0					
ANR	5059724	IdentifierDeclType	int		5059719	0					
ANR	5059725	Identifier	ecode		5059719	1					
ANR	5059726	AssignmentExpression	ecode = 0		5059719	2		=			
ANR	5059727	Identifier	ecode		5059719	0					
ANR	5059728	PrimaryExpression	0		5059719	1					
ANR	5059729	IdentifierDeclStatement	int code ;	1386:4:57336:57344	5059719	1	True				
ANR	5059730	IdentifierDecl	code		5059719	0					
ANR	5059731	IdentifierDeclType	int		5059719	0					
ANR	5059732	Identifier	code		5059719	1					
ANR	5059733	IdentifierDeclStatement	gs_param_name param_name ;	1387:4:57350:57374	5059719	2	True				
ANR	5059734	IdentifierDecl	param_name		5059719	0					
ANR	5059735	IdentifierDeclType	gs_param_name		5059719	0					
ANR	5059736	Identifier	param_name		5059719	1					
ANR	5059737	IdentifierDeclStatement	gs_param_float_array hwra ;	1388:4:57380:57405	5059719	3	True				
ANR	5059738	IdentifierDecl	hwra		5059719	0					
ANR	5059739	IdentifierDeclType	gs_param_float_array		5059719	0					
ANR	5059740	Identifier	hwra		5059719	1					
ANR	5059741	IdentifierDeclStatement	gs_param_int_array hwsa ;	1389:4:57411:57434	5059719	4	True				
ANR	5059742	IdentifierDecl	hwsa		5059719	0					
ANR	5059743	IdentifierDeclType	gs_param_int_array		5059719	0					
ANR	5059744	Identifier	hwsa		5059719	1					
ANR	5059745	IdentifierDeclStatement	gs_param_float_array msa ;	1390:4:57440:57464	5059719	5	True				
ANR	5059746	IdentifierDecl	msa		5059719	0					
ANR	5059747	IdentifierDeclType	gs_param_float_array		5059719	0					
ANR	5059748	Identifier	msa		5059719	1					
ANR	5059749	IdentifierDeclStatement	gs_param_float_array ma ;	1391:4:57470:57493	5059719	6	True				
ANR	5059750	IdentifierDecl	ma		5059719	0					
ANR	5059751	IdentifierDeclType	gs_param_float_array		5059719	0					
ANR	5059752	Identifier	ma		5059719	1					
ANR	5059753	IdentifierDeclStatement	gs_param_float_array hwma ;	1392:4:57499:57524	5059719	7	True				
ANR	5059754	IdentifierDecl	hwma		5059719	0					
ANR	5059755	IdentifierDeclType	gs_param_float_array		5059719	0					
ANR	5059756	Identifier	hwma		5059719	1					
ANR	5059757	IdentifierDeclStatement	gs_param_string_array scna ;	1393:4:57530:57556	5059719	8	True				
ANR	5059758	IdentifierDecl	scna		5059719	0					
ANR	5059759	IdentifierDeclType	gs_param_string_array		5059719	0					
ANR	5059760	Identifier	scna		5059719	1					
ANR	5059761	IdentifierDeclStatement	int nci = dev -> NumCopies ;	1394:4:57562:57586	5059719	9	True				
ANR	5059762	IdentifierDecl	nci = dev -> NumCopies		5059719	0					
ANR	5059763	IdentifierDeclType	int		5059719	0					
ANR	5059764	Identifier	nci		5059719	1					
ANR	5059765	AssignmentExpression	nci = dev -> NumCopies		5059719	2		=			
ANR	5059766	Identifier	nci		5059719	0					
ANR	5059767	PtrMemberAccess	dev -> NumCopies		5059719	1					
ANR	5059768	Identifier	dev		5059719	0					
ANR	5059769	Identifier	NumCopies		5059719	1					
ANR	5059770	IdentifierDeclStatement	int ncset = dev -> NumCopies_set ;	1395:4:57592:57622	5059719	10	True				
ANR	5059771	IdentifierDecl	ncset = dev -> NumCopies_set		5059719	0					
ANR	5059772	IdentifierDeclType	int		5059719	0					
ANR	5059773	Identifier	ncset		5059719	1					
ANR	5059774	AssignmentExpression	ncset = dev -> NumCopies_set		5059719	2		=			
ANR	5059775	Identifier	ncset		5059719	0					
ANR	5059776	PtrMemberAccess	dev -> NumCopies_set		5059719	1					
ANR	5059777	Identifier	dev		5059719	0					
ANR	5059778	Identifier	NumCopies_set		5059719	1					
ANR	5059779	IdentifierDeclStatement	bool ignc = dev -> IgnoreNumCopies ;	1396:4:57628:57660	5059719	11	True				
ANR	5059780	IdentifierDecl	ignc = dev -> IgnoreNumCopies		5059719	0					
ANR	5059781	IdentifierDeclType	bool		5059719	0					
ANR	5059782	Identifier	ignc		5059719	1					
ANR	5059783	AssignmentExpression	ignc = dev -> IgnoreNumCopies		5059719	2		=			
ANR	5059784	Identifier	ignc		5059719	0					
ANR	5059785	PtrMemberAccess	dev -> IgnoreNumCopies		5059719	1					
ANR	5059786	Identifier	dev		5059719	0					
ANR	5059787	Identifier	IgnoreNumCopies		5059719	1					
ANR	5059788	IdentifierDeclStatement	bool ucc = dev -> UseCIEColor ;	1397:4:57666:57693	5059719	12	True				
ANR	5059789	IdentifierDecl	ucc = dev -> UseCIEColor		5059719	0					
ANR	5059790	IdentifierDeclType	bool		5059719	0					
ANR	5059791	Identifier	ucc		5059719	1					
ANR	5059792	AssignmentExpression	ucc = dev -> UseCIEColor		5059719	2		=			
ANR	5059793	Identifier	ucc		5059719	0					
ANR	5059794	PtrMemberAccess	dev -> UseCIEColor		5059719	1					
ANR	5059795	Identifier	dev		5059719	0					
ANR	5059796	Identifier	UseCIEColor		5059719	1					
ANR	5059797	IdentifierDeclStatement	gs_param_string icc_pro ;	1398:4:57699:57722	5059719	13	True				
ANR	5059798	IdentifierDecl	icc_pro		5059719	0					
ANR	5059799	IdentifierDeclType	gs_param_string		5059719	0					
ANR	5059800	Identifier	icc_pro		5059719	1					
ANR	5059801	IdentifierDeclStatement	bool locksafe = dev -> LockSafetyParams ;	1399:4:57728:57765	5059719	14	True				
ANR	5059802	IdentifierDecl	locksafe = dev -> LockSafetyParams		5059719	0					
ANR	5059803	IdentifierDeclType	bool		5059719	0					
ANR	5059804	Identifier	locksafe		5059719	1					
ANR	5059805	AssignmentExpression	locksafe = dev -> LockSafetyParams		5059719	2		=			
ANR	5059806	Identifier	locksafe		5059719	0					
ANR	5059807	PtrMemberAccess	dev -> LockSafetyParams		5059719	1					
ANR	5059808	Identifier	dev		5059719	0					
ANR	5059809	Identifier	LockSafetyParams		5059719	1					
ANR	5059810	IdentifierDeclStatement	gs_param_float_array ibba ;	1400:4:57771:57796	5059719	15	True				
ANR	5059811	IdentifierDecl	ibba		5059719	0					
ANR	5059812	IdentifierDeclType	gs_param_float_array		5059719	0					
ANR	5059813	Identifier	ibba		5059719	1					
ANR	5059814	IdentifierDeclStatement	bool ibbnull = false ;	1401:4:57802:57822	5059719	16	True				
ANR	5059815	IdentifierDecl	ibbnull = false		5059719	0					
ANR	5059816	IdentifierDeclType	bool		5059719	0					
ANR	5059817	Identifier	ibbnull		5059719	1					
ANR	5059818	AssignmentExpression	ibbnull = false		5059719	2		=			
ANR	5059819	Identifier	false		5059719	0					
ANR	5059820	Identifier	false		5059719	1					
ANR	5059821	IdentifierDeclStatement	int colors = dev -> color_info . num_components ;	1402:4:57828:57871	5059719	17	True				
ANR	5059822	IdentifierDecl	colors = dev -> color_info . num_components		5059719	0					
ANR	5059823	IdentifierDeclType	int		5059719	0					
ANR	5059824	Identifier	colors		5059719	1					
ANR	5059825	AssignmentExpression	colors = dev -> color_info . num_components		5059719	2		=			
ANR	5059826	Identifier	colors		5059719	0					
ANR	5059827	MemberAccess	dev -> color_info . num_components		5059719	1					
ANR	5059828	PtrMemberAccess	dev -> color_info		5059719	0					
ANR	5059829	Identifier	dev		5059719	0					
ANR	5059830	Identifier	color_info		5059719	1					
ANR	5059831	Identifier	num_components		5059719	1					
ANR	5059832	IdentifierDeclStatement	int depth = dev -> color_info . depth ;	1403:4:57877:57910	5059719	18	True				
ANR	5059833	IdentifierDecl	depth = dev -> color_info . depth		5059719	0					
ANR	5059834	IdentifierDeclType	int		5059719	0					
ANR	5059835	Identifier	depth		5059719	1					
ANR	5059836	AssignmentExpression	depth = dev -> color_info . depth		5059719	2		=			
ANR	5059837	Identifier	depth		5059719	0					
ANR	5059838	MemberAccess	dev -> color_info . depth		5059719	1					
ANR	5059839	PtrMemberAccess	dev -> color_info		5059719	0					
ANR	5059840	Identifier	dev		5059719	0					
ANR	5059841	Identifier	color_info		5059719	1					
ANR	5059842	Identifier	depth		5059719	1					
ANR	5059843	IdentifierDeclStatement	int GrayValues = dev -> color_info . max_gray + 1 ;	1404:4:57916:57961	5059719	19	True				
ANR	5059844	IdentifierDecl	GrayValues = dev -> color_info . max_gray + 1		5059719	0					
ANR	5059845	IdentifierDeclType	int		5059719	0					
ANR	5059846	Identifier	GrayValues		5059719	1					
ANR	5059847	AssignmentExpression	GrayValues = dev -> color_info . max_gray + 1		5059719	2		=			
ANR	5059848	Identifier	GrayValues		5059719	0					
ANR	5059849	AdditiveExpression	dev -> color_info . max_gray + 1		5059719	1		+			
ANR	5059850	MemberAccess	dev -> color_info . max_gray		5059719	0					
ANR	5059851	PtrMemberAccess	dev -> color_info		5059719	0					
ANR	5059852	Identifier	dev		5059719	0					
ANR	5059853	Identifier	color_info		5059719	1					
ANR	5059854	Identifier	max_gray		5059719	1					
ANR	5059855	PrimaryExpression	1		5059719	1					
ANR	5059856	IdentifierDeclStatement	int RGBValues = dev -> color_info . max_color + 1 ;	1405:4:57967:58012	5059719	20	True				
ANR	5059857	IdentifierDecl	RGBValues = dev -> color_info . max_color + 1		5059719	0					
ANR	5059858	IdentifierDeclType	int		5059719	0					
ANR	5059859	Identifier	RGBValues		5059719	1					
ANR	5059860	AssignmentExpression	RGBValues = dev -> color_info . max_color + 1		5059719	2		=			
ANR	5059861	Identifier	RGBValues		5059719	0					
ANR	5059862	AdditiveExpression	dev -> color_info . max_color + 1		5059719	1		+			
ANR	5059863	MemberAccess	dev -> color_info . max_color		5059719	0					
ANR	5059864	PtrMemberAccess	dev -> color_info		5059719	0					
ANR	5059865	Identifier	dev		5059719	0					
ANR	5059866	Identifier	color_info		5059719	1					
ANR	5059867	Identifier	max_color		5059719	1					
ANR	5059868	PrimaryExpression	1		5059719	1					
ANR	5059869	IdentifierDeclStatement	long ColorValues = ( depth >= 32 ? - 1 : 1L << depth ) ;	1406:4:58018:58069	5059719	21	True				
ANR	5059870	IdentifierDecl	ColorValues = ( depth >= 32 ? - 1 : 1L << depth )		5059719	0					
ANR	5059871	IdentifierDeclType	long		5059719	0					
ANR	5059872	Identifier	ColorValues		5059719	1					
ANR	5059873	AssignmentExpression	ColorValues = ( depth >= 32 ? - 1 : 1L << depth )		5059719	2		=			
ANR	5059874	Identifier	ColorValues		5059719	0					
ANR	5059875	ConditionalExpression	depth >= 32 ? - 1 : 1L << depth		5059719	1					
ANR	5059876	Condition	depth >= 32		5059719	0					
ANR	5059877	RelationalExpression	depth >= 32		5059719	0		>=			
ANR	5059878	Identifier	depth		5059719	0					
ANR	5059879	PrimaryExpression	32		5059719	1					
ANR	5059880	UnaryOperationExpression	- 1		5059719	1					
ANR	5059881	UnaryOperator	-		5059719	0					
ANR	5059882	PrimaryExpression	1		5059719	1					
ANR	5059883	ShiftExpression	1L << depth		5059719	2		<<			
ANR	5059884	PrimaryExpression	1L		5059719	0					
ANR	5059885	Identifier	depth		5059719	1					
ANR	5059886	IdentifierDeclStatement	int tab = dev -> color_info . anti_alias . text_bits ;	1407:4:58075:58121	5059719	22	True				
ANR	5059887	IdentifierDecl	tab = dev -> color_info . anti_alias . text_bits		5059719	0					
ANR	5059888	IdentifierDeclType	int		5059719	0					
ANR	5059889	Identifier	tab		5059719	1					
ANR	5059890	AssignmentExpression	tab = dev -> color_info . anti_alias . text_bits		5059719	2		=			
ANR	5059891	Identifier	tab		5059719	0					
ANR	5059892	MemberAccess	dev -> color_info . anti_alias . text_bits		5059719	1					
ANR	5059893	MemberAccess	dev -> color_info . anti_alias		5059719	0					
ANR	5059894	PtrMemberAccess	dev -> color_info		5059719	0					
ANR	5059895	Identifier	dev		5059719	0					
ANR	5059896	Identifier	color_info		5059719	1					
ANR	5059897	Identifier	anti_alias		5059719	1					
ANR	5059898	Identifier	text_bits		5059719	1					
ANR	5059899	IdentifierDeclStatement	int gab = dev -> color_info . anti_alias . graphics_bits ;	1408:4:58127:58177	5059719	23	True				
ANR	5059900	IdentifierDecl	gab = dev -> color_info . anti_alias . graphics_bits		5059719	0					
ANR	5059901	IdentifierDeclType	int		5059719	0					
ANR	5059902	Identifier	gab		5059719	1					
ANR	5059903	AssignmentExpression	gab = dev -> color_info . anti_alias . graphics_bits		5059719	2		=			
ANR	5059904	Identifier	gab		5059719	0					
ANR	5059905	MemberAccess	dev -> color_info . anti_alias . graphics_bits		5059719	1					
ANR	5059906	MemberAccess	dev -> color_info . anti_alias		5059719	0					
ANR	5059907	PtrMemberAccess	dev -> color_info		5059719	0					
ANR	5059908	Identifier	dev		5059719	0					
ANR	5059909	Identifier	color_info		5059719	1					
ANR	5059910	Identifier	anti_alias		5059719	1					
ANR	5059911	Identifier	graphics_bits		5059719	1					
ANR	5059912	IdentifierDeclStatement	int mpbm = dev -> MaxPatternBitmap ;	1409:4:58183:58215	5059719	24	True				
ANR	5059913	IdentifierDecl	mpbm = dev -> MaxPatternBitmap		5059719	0					
ANR	5059914	IdentifierDeclType	int		5059719	0					
ANR	5059915	Identifier	mpbm		5059719	1					
ANR	5059916	AssignmentExpression	mpbm = dev -> MaxPatternBitmap		5059719	2		=			
ANR	5059917	Identifier	mpbm		5059719	0					
ANR	5059918	PtrMemberAccess	dev -> MaxPatternBitmap		5059719	1					
ANR	5059919	Identifier	dev		5059719	0					
ANR	5059920	Identifier	MaxPatternBitmap		5059719	1					
ANR	5059921	IdentifierDeclStatement	int ic = dev -> interpolate_control ;	1410:4:58221:58254	5059719	25	True				
ANR	5059922	IdentifierDecl	ic = dev -> interpolate_control		5059719	0					
ANR	5059923	IdentifierDeclType	int		5059719	0					
ANR	5059924	Identifier	ic		5059719	1					
ANR	5059925	AssignmentExpression	ic = dev -> interpolate_control		5059719	2		=			
ANR	5059926	Identifier	ic		5059719	0					
ANR	5059927	PtrMemberAccess	dev -> interpolate_control		5059719	1					
ANR	5059928	Identifier	dev		5059719	0					
ANR	5059929	Identifier	interpolate_control		5059719	1					
ANR	5059930	IdentifierDeclStatement	bool page_uses_transparency = dev -> page_uses_transparency ;	1411:4:58260:58317	5059719	26	True				
ANR	5059931	IdentifierDecl	page_uses_transparency = dev -> page_uses_transparency		5059719	0					
ANR	5059932	IdentifierDeclType	bool		5059719	0					
ANR	5059933	Identifier	page_uses_transparency		5059719	1					
ANR	5059934	AssignmentExpression	page_uses_transparency = dev -> page_uses_transparency		5059719	2		=			
ANR	5059935	Identifier	page_uses_transparency		5059719	0					
ANR	5059936	PtrMemberAccess	dev -> page_uses_transparency		5059719	1					
ANR	5059937	Identifier	dev		5059719	0					
ANR	5059938	Identifier	page_uses_transparency		5059719	1					
ANR	5059939	IdentifierDeclStatement	gdev_space_params sp = dev -> space_params ;	1412:4:58323:58363	5059719	27	True				
ANR	5059940	IdentifierDecl	sp = dev -> space_params		5059719	0					
ANR	5059941	IdentifierDeclType	gdev_space_params		5059719	0					
ANR	5059942	Identifier	sp		5059719	1					
ANR	5059943	AssignmentExpression	sp = dev -> space_params		5059719	2		=			
ANR	5059944	Identifier	sp		5059719	0					
ANR	5059945	PtrMemberAccess	dev -> space_params		5059719	1					
ANR	5059946	Identifier	dev		5059719	0					
ANR	5059947	Identifier	space_params		5059719	1					
ANR	5059948	IdentifierDeclStatement	gdev_space_params save_sp = dev -> space_params ;	1413:4:58369:58414	5059719	28	True				
ANR	5059949	IdentifierDecl	save_sp = dev -> space_params		5059719	0					
ANR	5059950	IdentifierDeclType	gdev_space_params		5059719	0					
ANR	5059951	Identifier	save_sp		5059719	1					
ANR	5059952	AssignmentExpression	save_sp = dev -> space_params		5059719	2		=			
ANR	5059953	Identifier	save_sp		5059719	0					
ANR	5059954	PtrMemberAccess	dev -> space_params		5059719	1					
ANR	5059955	Identifier	dev		5059719	0					
ANR	5059956	Identifier	space_params		5059719	1					
ANR	5059957	IdentifierDeclStatement	int rend_intent [ NUM_DEVICE_PROFILES ] ;	1414:4:58420:58456	5059719	29	True				
ANR	5059958	IdentifierDecl	rend_intent [ NUM_DEVICE_PROFILES ]		5059719	0					
ANR	5059959	IdentifierDeclType	int [ NUM_DEVICE_PROFILES ]		5059719	0					
ANR	5059960	Identifier	rend_intent		5059719	1					
ANR	5059961	Identifier	NUM_DEVICE_PROFILES		5059719	2					
ANR	5059962	IdentifierDeclStatement	int blackptcomp [ NUM_DEVICE_PROFILES ] ;	1415:4:58462:58498	5059719	30	True				
ANR	5059963	IdentifierDecl	blackptcomp [ NUM_DEVICE_PROFILES ]		5059719	0					
ANR	5059964	IdentifierDeclType	int [ NUM_DEVICE_PROFILES ]		5059719	0					
ANR	5059965	Identifier	blackptcomp		5059719	1					
ANR	5059966	Identifier	NUM_DEVICE_PROFILES		5059719	2					
ANR	5059967	IdentifierDeclStatement	int blackpreserve [ NUM_DEVICE_PROFILES ] ;	1416:4:58504:58542	5059719	31	True				
ANR	5059968	IdentifierDecl	blackpreserve [ NUM_DEVICE_PROFILES ]		5059719	0					
ANR	5059969	IdentifierDeclType	int [ NUM_DEVICE_PROFILES ]		5059719	0					
ANR	5059970	Identifier	blackpreserve		5059719	1					
ANR	5059971	Identifier	NUM_DEVICE_PROFILES		5059719	2					
ANR	5059972	IdentifierDeclStatement	"gs_param_string cms , pagelist ;"	1417:4:58548:58577	5059719	32	True				
ANR	5059973	IdentifierDecl	cms		5059719	0					
ANR	5059974	IdentifierDeclType	gs_param_string		5059719	0					
ANR	5059975	Identifier	cms		5059719	1					
ANR	5059976	IdentifierDecl	pagelist		5059719	1					
ANR	5059977	IdentifierDeclType	gs_param_string		5059719	0					
ANR	5059978	Identifier	pagelist		5059719	1					
ANR	5059979	IdentifierDeclStatement	int leadingedge = dev -> LeadingEdge ;	1418:4:58583:58617	5059719	33	True				
ANR	5059980	IdentifierDecl	leadingedge = dev -> LeadingEdge		5059719	0					
ANR	5059981	IdentifierDeclType	int		5059719	0					
ANR	5059982	Identifier	leadingedge		5059719	1					
ANR	5059983	AssignmentExpression	leadingedge = dev -> LeadingEdge		5059719	2		=			
ANR	5059984	Identifier	leadingedge		5059719	0					
ANR	5059985	PtrMemberAccess	dev -> LeadingEdge		5059719	1					
ANR	5059986	Identifier	dev		5059719	0					
ANR	5059987	Identifier	LeadingEdge		5059719	1					
ANR	5059988	IdentifierDeclStatement	int k ;	1419:4:58623:58628	5059719	34	True				
ANR	5059989	IdentifierDecl	k		5059719	0					
ANR	5059990	IdentifierDeclType	int		5059719	0					
ANR	5059991	Identifier	k		5059719	1					
ANR	5059992	IdentifierDeclStatement	int color_accuracy ;	1420:4:58634:58652	5059719	35	True				
ANR	5059993	IdentifierDecl	color_accuracy		5059719	0					
ANR	5059994	IdentifierDeclType	int		5059719	0					
ANR	5059995	Identifier	color_accuracy		5059719	1					
ANR	5059996	IdentifierDeclStatement	bool devicegraytok = true ;	1421:4:58658:58683	5059719	36	True				
ANR	5059997	IdentifierDecl	devicegraytok = true		5059719	0					
ANR	5059998	IdentifierDeclType	bool		5059719	0					
ANR	5059999	Identifier	devicegraytok		5059719	1					
ANR	5060000	AssignmentExpression	devicegraytok = true		5059719	2		=			
ANR	5060001	Identifier	true		5059719	0					
ANR	5060002	Identifier	true		5059719	1					
ANR	5060003	IdentifierDeclStatement	bool graydetection = false ;	1422:4:58689:58715	5059719	37	True				
ANR	5060004	IdentifierDecl	graydetection = false		5059719	0					
ANR	5060005	IdentifierDeclType	bool		5059719	0					
ANR	5060006	Identifier	graydetection		5059719	1					
ANR	5060007	AssignmentExpression	graydetection = false		5059719	2		=			
ANR	5060008	Identifier	false		5059719	0					
ANR	5060009	Identifier	false		5059719	1					
ANR	5060010	IdentifierDeclStatement	bool usefastcolor = false ;	1423:4:58721:58746	5059719	38	True				
ANR	5060011	IdentifierDecl	usefastcolor = false		5059719	0					
ANR	5060012	IdentifierDeclType	bool		5059719	0					
ANR	5060013	Identifier	usefastcolor		5059719	1					
ANR	5060014	AssignmentExpression	usefastcolor = false		5059719	2		=			
ANR	5060015	Identifier	false		5059719	0					
ANR	5060016	Identifier	false		5059719	1					
ANR	5060017	IdentifierDeclStatement	bool sim_overprint = false ;	1424:4:58752:58778	5059719	39	True				
ANR	5060018	IdentifierDecl	sim_overprint = false		5059719	0					
ANR	5060019	IdentifierDeclType	bool		5059719	0					
ANR	5060020	Identifier	sim_overprint		5059719	1					
ANR	5060021	AssignmentExpression	sim_overprint = false		5059719	2		=			
ANR	5060022	Identifier	false		5059719	0					
ANR	5060023	Identifier	false		5059719	1					
ANR	5060024	IdentifierDeclStatement	bool prebandthreshold = false ;	1425:4:58784:58813	5059719	40	True				
ANR	5060025	IdentifierDecl	prebandthreshold = false		5059719	0					
ANR	5060026	IdentifierDeclType	bool		5059719	0					
ANR	5060027	Identifier	prebandthreshold		5059719	1					
ANR	5060028	AssignmentExpression	prebandthreshold = false		5059719	2		=			
ANR	5060029	Identifier	false		5059719	0					
ANR	5060030	Identifier	false		5059719	1					
ANR	5060031	IdentifierDeclStatement	bool use_antidropout = dev -> color_info . use_antidropout_downscaler ;	1426:4:58819:58884	5059719	41	True				
ANR	5060032	IdentifierDecl	use_antidropout = dev -> color_info . use_antidropout_downscaler		5059719	0					
ANR	5060033	IdentifierDeclType	bool		5059719	0					
ANR	5060034	Identifier	use_antidropout		5059719	1					
ANR	5060035	AssignmentExpression	use_antidropout = dev -> color_info . use_antidropout_downscaler		5059719	2		=			
ANR	5060036	Identifier	use_antidropout		5059719	0					
ANR	5060037	MemberAccess	dev -> color_info . use_antidropout_downscaler		5059719	1					
ANR	5060038	PtrMemberAccess	dev -> color_info		5059719	0					
ANR	5060039	Identifier	dev		5059719	0					
ANR	5060040	Identifier	color_info		5059719	1					
ANR	5060041	Identifier	use_antidropout_downscaler		5059719	1					
ANR	5060042	IdentifierDeclStatement	bool temp_bool ;	1427:4:58890:58904	5059719	42	True				
ANR	5060043	IdentifierDecl	temp_bool		5059719	0					
ANR	5060044	IdentifierDeclType	bool		5059719	0					
ANR	5060045	Identifier	temp_bool		5059719	1					
ANR	5060046	IdentifierDeclStatement	"int profile_types [ NUM_DEVICE_PROFILES ] = { gsDEFAULTPROFILE , gsGRAPHICPROFILE , gsIMAGEPROFILE , gsTEXTPROFILE } ;"	1428:4:58910:59160	5059719	43	True				
ANR	5060047	IdentifierDecl	"profile_types [ NUM_DEVICE_PROFILES ] = { gsDEFAULTPROFILE , gsGRAPHICPROFILE , gsIMAGEPROFILE , gsTEXTPROFILE }"		5059719	0					
ANR	5060048	IdentifierDeclType	int [ NUM_DEVICE_PROFILES ]		5059719	0					
ANR	5060049	Identifier	profile_types		5059719	1					
ANR	5060050	Identifier	NUM_DEVICE_PROFILES		5059719	2					
ANR	5060051	AssignmentExpression	"profile_types [ NUM_DEVICE_PROFILES ] = { gsDEFAULTPROFILE , gsGRAPHICPROFILE , gsIMAGEPROFILE , gsTEXTPROFILE }"		5059719	3		=			
ANR	5060052	Identifier	NUM_DEVICE_PROFILES		5059719	0					
ANR	5060053	InitializerList	gsDEFAULTPROFILE		5059719	1					
ANR	5060054	Identifier	gsDEFAULTPROFILE		5059719	0					
ANR	5060055	Identifier	gsGRAPHICPROFILE		5059719	1					
ANR	5060056	Identifier	gsIMAGEPROFILE		5059719	2					
ANR	5060057	Identifier	gsTEXTPROFILE		5059719	3					
ANR	5060058	ExpressionStatement	color_accuracy = gsicc_currentcoloraccuracy ( dev -> memory )	1433:4:59167:59223	5059719	44	True				
ANR	5060059	AssignmentExpression	color_accuracy = gsicc_currentcoloraccuracy ( dev -> memory )		5059719	0		=			
ANR	5060060	Identifier	color_accuracy		5059719	0					
ANR	5060061	CallExpression	gsicc_currentcoloraccuracy ( dev -> memory )		5059719	1					
ANR	5060062	Callee	gsicc_currentcoloraccuracy		5059719	0					
ANR	5060063	Identifier	gsicc_currentcoloraccuracy		5059719	0					
ANR	5060064	ArgumentList	dev -> memory		5059719	1					
ANR	5060065	Argument	dev -> memory		5059719	0					
ANR	5060066	PtrMemberAccess	dev -> memory		5059719	0					
ANR	5060067	Identifier	dev		5059719	0					
ANR	5060068	Identifier	memory		5059719	1					
ANR	5060069	IfStatement	if ( dev -> icc_struct != NULL )		5059719	45					
ANR	5060070	Condition	dev -> icc_struct != NULL	1434:8:59233:59255	5059719	0	True				
ANR	5060071	EqualityExpression	dev -> icc_struct != NULL		5059719	0		!=			
ANR	5060072	PtrMemberAccess	dev -> icc_struct		5059719	0					
ANR	5060073	Identifier	dev		5059719	0					
ANR	5060074	Identifier	icc_struct		5059719	1					
ANR	5060075	Identifier	NULL		5059719	1					
ANR	5060076	CompoundStatement		51:33:1946:1946	5059719	1					
ANR	5060077	ForStatement	for ( k = 0 ; k < NUM_DEVICE_PROFILES ; k ++ )		5059719	0					
ANR	5060078	ForInit	k = 0 ;	1435:13:59273:59278	5059719	0	True				
ANR	5060079	AssignmentExpression	k = 0		5059719	0		=			
ANR	5060080	Identifier	k		5059719	0					
ANR	5060081	PrimaryExpression	0		5059719	1					
ANR	5060082	Condition	k < NUM_DEVICE_PROFILES	1435:20:59280:59302	5059719	1	True				
ANR	5060083	RelationalExpression	k < NUM_DEVICE_PROFILES		5059719	0		<			
ANR	5060084	Identifier	k		5059719	0					
ANR	5060085	Identifier	NUM_DEVICE_PROFILES		5059719	1					
ANR	5060086	PostIncDecOperationExpression	k ++	1435:45:59305:59307	5059719	2	True				
ANR	5060087	Identifier	k		5059719	0					
ANR	5060088	IncDec	++		5059719	1					
ANR	5060089	CompoundStatement		52:50:1998:1998	5059719	3					
ANR	5060090	ExpressionStatement	rend_intent [ k ] = dev -> icc_struct -> rendercond [ k ] . rendering_intent	1436:12:59324:59388	5059719	0	True				
ANR	5060091	AssignmentExpression	rend_intent [ k ] = dev -> icc_struct -> rendercond [ k ] . rendering_intent		5059719	0		=			
ANR	5060092	ArrayIndexing	rend_intent [ k ]		5059719	0					
ANR	5060093	Identifier	rend_intent		5059719	0					
ANR	5060094	Identifier	k		5059719	1					
ANR	5060095	MemberAccess	dev -> icc_struct -> rendercond [ k ] . rendering_intent		5059719	1					
ANR	5060096	ArrayIndexing	dev -> icc_struct -> rendercond [ k ]		5059719	0					
ANR	5060097	PtrMemberAccess	dev -> icc_struct -> rendercond		5059719	0					
ANR	5060098	PtrMemberAccess	dev -> icc_struct		5059719	0					
ANR	5060099	Identifier	dev		5059719	0					
ANR	5060100	Identifier	icc_struct		5059719	1					
ANR	5060101	Identifier	rendercond		5059719	1					
ANR	5060102	Identifier	k		5059719	1					
ANR	5060103	Identifier	rendering_intent		5059719	1					
ANR	5060104	ExpressionStatement	blackptcomp [ k ] = dev -> icc_struct -> rendercond [ k ] . black_point_comp	1437:12:59402:59466	5059719	1	True				
ANR	5060105	AssignmentExpression	blackptcomp [ k ] = dev -> icc_struct -> rendercond [ k ] . black_point_comp		5059719	0		=			
ANR	5060106	ArrayIndexing	blackptcomp [ k ]		5059719	0					
ANR	5060107	Identifier	blackptcomp		5059719	0					
ANR	5060108	Identifier	k		5059719	1					
ANR	5060109	MemberAccess	dev -> icc_struct -> rendercond [ k ] . black_point_comp		5059719	1					
ANR	5060110	ArrayIndexing	dev -> icc_struct -> rendercond [ k ]		5059719	0					
ANR	5060111	PtrMemberAccess	dev -> icc_struct -> rendercond		5059719	0					
ANR	5060112	PtrMemberAccess	dev -> icc_struct		5059719	0					
ANR	5060113	Identifier	dev		5059719	0					
ANR	5060114	Identifier	icc_struct		5059719	1					
ANR	5060115	Identifier	rendercond		5059719	1					
ANR	5060116	Identifier	k		5059719	1					
ANR	5060117	Identifier	black_point_comp		5059719	1					
ANR	5060118	ExpressionStatement	blackpreserve [ k ] = dev -> icc_struct -> rendercond [ k ] . preserve_black	1438:12:59480:59544	5059719	2	True				
ANR	5060119	AssignmentExpression	blackpreserve [ k ] = dev -> icc_struct -> rendercond [ k ] . preserve_black		5059719	0		=			
ANR	5060120	ArrayIndexing	blackpreserve [ k ]		5059719	0					
ANR	5060121	Identifier	blackpreserve		5059719	0					
ANR	5060122	Identifier	k		5059719	1					
ANR	5060123	MemberAccess	dev -> icc_struct -> rendercond [ k ] . preserve_black		5059719	1					
ANR	5060124	ArrayIndexing	dev -> icc_struct -> rendercond [ k ]		5059719	0					
ANR	5060125	PtrMemberAccess	dev -> icc_struct -> rendercond		5059719	0					
ANR	5060126	PtrMemberAccess	dev -> icc_struct		5059719	0					
ANR	5060127	Identifier	dev		5059719	0					
ANR	5060128	Identifier	icc_struct		5059719	1					
ANR	5060129	Identifier	rendercond		5059719	1					
ANR	5060130	Identifier	k		5059719	1					
ANR	5060131	Identifier	preserve_black		5059719	1					
ANR	5060132	ExpressionStatement	graydetection = dev -> icc_struct -> graydetection	1440:8:59564:59610	5059719	1	True				
ANR	5060133	AssignmentExpression	graydetection = dev -> icc_struct -> graydetection		5059719	0		=			
ANR	5060134	Identifier	graydetection		5059719	0					
ANR	5060135	PtrMemberAccess	dev -> icc_struct -> graydetection		5059719	1					
ANR	5060136	PtrMemberAccess	dev -> icc_struct		5059719	0					
ANR	5060137	Identifier	dev		5059719	0					
ANR	5060138	Identifier	icc_struct		5059719	1					
ANR	5060139	Identifier	graydetection		5059719	1					
ANR	5060140	ExpressionStatement	devicegraytok = dev -> icc_struct -> devicegraytok	1441:8:59620:59666	5059719	2	True				
ANR	5060141	AssignmentExpression	devicegraytok = dev -> icc_struct -> devicegraytok		5059719	0		=			
ANR	5060142	Identifier	devicegraytok		5059719	0					
ANR	5060143	PtrMemberAccess	dev -> icc_struct -> devicegraytok		5059719	1					
ANR	5060144	PtrMemberAccess	dev -> icc_struct		5059719	0					
ANR	5060145	Identifier	dev		5059719	0					
ANR	5060146	Identifier	icc_struct		5059719	1					
ANR	5060147	Identifier	devicegraytok		5059719	1					
ANR	5060148	ExpressionStatement	usefastcolor = dev -> icc_struct -> usefastcolor	1442:8:59676:59720	5059719	3	True				
ANR	5060149	AssignmentExpression	usefastcolor = dev -> icc_struct -> usefastcolor		5059719	0		=			
ANR	5060150	Identifier	usefastcolor		5059719	0					
ANR	5060151	PtrMemberAccess	dev -> icc_struct -> usefastcolor		5059719	1					
ANR	5060152	PtrMemberAccess	dev -> icc_struct		5059719	0					
ANR	5060153	Identifier	dev		5059719	0					
ANR	5060154	Identifier	icc_struct		5059719	1					
ANR	5060155	Identifier	usefastcolor		5059719	1					
ANR	5060156	ExpressionStatement	prebandthreshold = dev -> icc_struct -> prebandthreshold	1443:8:59730:59782	5059719	4	True				
ANR	5060157	AssignmentExpression	prebandthreshold = dev -> icc_struct -> prebandthreshold		5059719	0		=			
ANR	5060158	Identifier	prebandthreshold		5059719	0					
ANR	5060159	PtrMemberAccess	dev -> icc_struct -> prebandthreshold		5059719	1					
ANR	5060160	PtrMemberAccess	dev -> icc_struct		5059719	0					
ANR	5060161	Identifier	dev		5059719	0					
ANR	5060162	Identifier	icc_struct		5059719	1					
ANR	5060163	Identifier	prebandthreshold		5059719	1					
ANR	5060164	ExpressionStatement	sim_overprint = dev -> icc_struct -> sim_overprint	1444:8:59792:59838	5059719	5	True				
ANR	5060165	AssignmentExpression	sim_overprint = dev -> icc_struct -> sim_overprint		5059719	0		=			
ANR	5060166	Identifier	sim_overprint		5059719	0					
ANR	5060167	PtrMemberAccess	dev -> icc_struct -> sim_overprint		5059719	1					
ANR	5060168	PtrMemberAccess	dev -> icc_struct		5059719	0					
ANR	5060169	Identifier	dev		5059719	0					
ANR	5060170	Identifier	icc_struct		5059719	1					
ANR	5060171	Identifier	sim_overprint		5059719	1					
ANR	5060172	ElseStatement	else		5059719	0					
ANR	5060173	CompoundStatement		62:11:2539:2539	5059719	0					
ANR	5060174	ForStatement	for ( k = 0 ; k < NUM_DEVICE_PROFILES ; k ++ )		5059719	0					
ANR	5060175	ForInit	k = 0 ;	1446:13:59866:59871	5059719	0	True				
ANR	5060176	AssignmentExpression	k = 0		5059719	0		=			
ANR	5060177	Identifier	k		5059719	0					
ANR	5060178	PrimaryExpression	0		5059719	1					
ANR	5060179	Condition	k < NUM_DEVICE_PROFILES	1446:20:59873:59895	5059719	1	True				
ANR	5060180	RelationalExpression	k < NUM_DEVICE_PROFILES		5059719	0		<			
ANR	5060181	Identifier	k		5059719	0					
ANR	5060182	Identifier	NUM_DEVICE_PROFILES		5059719	1					
ANR	5060183	PostIncDecOperationExpression	k ++	1446:45:59898:59900	5059719	2	True				
ANR	5060184	Identifier	k		5059719	0					
ANR	5060185	IncDec	++		5059719	1					
ANR	5060186	CompoundStatement		63:50:2591:2591	5059719	3					
ANR	5060187	ExpressionStatement	rend_intent [ k ] = gsRINOTSPECIFIED	1447:12:59917:59950	5059719	0	True				
ANR	5060188	AssignmentExpression	rend_intent [ k ] = gsRINOTSPECIFIED		5059719	0		=			
ANR	5060189	ArrayIndexing	rend_intent [ k ]		5059719	0					
ANR	5060190	Identifier	rend_intent		5059719	0					
ANR	5060191	Identifier	k		5059719	1					
ANR	5060192	Identifier	gsRINOTSPECIFIED		5059719	1					
ANR	5060193	ExpressionStatement	blackptcomp [ k ] = gsBPNOTSPECIFIED	1448:12:59964:59997	5059719	1	True				
ANR	5060194	AssignmentExpression	blackptcomp [ k ] = gsBPNOTSPECIFIED		5059719	0		=			
ANR	5060195	ArrayIndexing	blackptcomp [ k ]		5059719	0					
ANR	5060196	Identifier	blackptcomp		5059719	0					
ANR	5060197	Identifier	k		5059719	1					
ANR	5060198	Identifier	gsBPNOTSPECIFIED		5059719	1					
ANR	5060199	ExpressionStatement	blackpreserve [ k ] = gsBKPRESNOTSPECIFIED	1449:12:60011:60050	5059719	2	True				
ANR	5060200	AssignmentExpression	blackpreserve [ k ] = gsBKPRESNOTSPECIFIED		5059719	0		=			
ANR	5060201	ArrayIndexing	blackpreserve [ k ]		5059719	0					
ANR	5060202	Identifier	blackpreserve		5059719	0					
ANR	5060203	Identifier	k		5059719	1					
ANR	5060204	Identifier	gsBKPRESNOTSPECIFIED		5059719	1					
ANR	5060205	Statement	define	1463:1:60336:60341	5059719	46	True				
ANR	5060206	Statement	BEGIN_ARRAY_PARAM	1463:8:60343:60359	5059719	47	True				
ANR	5060207	Statement	(	1463:25:60360:60360	5059719	48	True				
ANR	5060208	Statement	pread	1463:26:60361:60365	5059719	49	True				
ANR	5060209	Statement	","	1463:31:60366:60366	5059719	50	True				
ANR	5060210	Statement	pname	1463:33:60368:60372	5059719	51	True				
ANR	5060211	Statement	","	1463:38:60373:60373	5059719	52	True				
ANR	5060212	Statement	pa	1463:40:60375:60376	5059719	53	True				
ANR	5060213	Statement	","	1463:42:60377:60377	5059719	54	True				
ANR	5060214	Statement	psize	1463:44:60379:60383	5059719	55	True				
ANR	5060215	Statement	","	1463:49:60384:60384	5059719	56	True				
ANR	5060216	Statement	e	1463:51:60386:60386	5059719	57	True				
ANR	5060217	Statement	)	1463:52:60387:60387	5059719	58	True				
ANR	5060218	Statement	BEGIN	1464:4:60394:60398	5059719	59	True				
ANR	5060219	SwitchStatement	"switch ( code = pread ( plist , ( param_name = pname ) , & ( pa ) ) )"		5059719	60					
ANR	5060220	Condition	"code = pread ( plist , ( param_name = pname ) , & ( pa ) )"	1465:12:60413:60460	5059719	0	True				
ANR	5060221	AssignmentExpression	"code = pread ( plist , ( param_name = pname ) , & ( pa ) )"		5059719	0		=			
ANR	5060222	Identifier	code		5059719	0					
ANR	5060223	CallExpression	"pread ( plist , ( param_name = pname ) , & ( pa ) )"		5059719	1					
ANR	5060224	Callee	pread		5059719	0					
ANR	5060225	Identifier	pread		5059719	0					
ANR	5060226	ArgumentList	plist		5059719	1					
ANR	5060227	Argument	plist		5059719	0					
ANR	5060228	Identifier	plist		5059719	0					
ANR	5060229	Argument	param_name = pname		5059719	1					
ANR	5060230	AssignmentExpression	param_name = pname		5059719	0		=			
ANR	5060231	Identifier	param_name		5059719	0					
ANR	5060232	Identifier	pname		5059719	1					
ANR	5060233	Argument	& ( pa )		5059719	2					
ANR	5060234	UnaryOperationExpression	& ( pa )		5059719	0					
ANR	5060235	UnaryOperator	&		5059719	0					
ANR	5060236	Identifier	pa		5059719	1					
ANR	5060237	CompoundStatement		82:62:3151:3151	5059719	1					
ANR	5060238	Label	case 0 :	1466:6:60472:60478	5059719	0	True				
ANR	5060239	IfStatement	if ( ( pa ) . size != psize )		5059719	1					
ANR	5060240	Condition	( pa ) . size != psize	1467:12:60493:60510	5059719	0	True				
ANR	5060241	EqualityExpression	( pa ) . size != psize		5059719	0		!=			
ANR	5060242	MemberAccess	( pa ) . size		5059719	0					
ANR	5060243	Identifier	pa		5059719	0					
ANR	5060244	Identifier	size		5059719	1					
ANR	5060245	Identifier	psize		5059719	1					
ANR	5060246	CompoundStatement		84:32:3201:3201	5059719	1					
ANR	5060247	ExpressionStatement	ecode = gs_note_error ( gs_error_rangecheck )	1468:10:60526:60568	5059719	0	True				
ANR	5060248	AssignmentExpression	ecode = gs_note_error ( gs_error_rangecheck )		5059719	0		=			
ANR	5060249	Identifier	ecode		5059719	0					
ANR	5060250	CallExpression	gs_note_error ( gs_error_rangecheck )		5059719	1					
ANR	5060251	Callee	gs_note_error		5059719	0					
ANR	5060252	Identifier	gs_note_error		5059719	0					
ANR	5060253	ArgumentList	gs_error_rangecheck		5059719	1					
ANR	5060254	Argument	gs_error_rangecheck		5059719	0					
ANR	5060255	Identifier	gs_error_rangecheck		5059719	0					
ANR	5060256	ExpressionStatement	( pa ) . data = 0	1469:10:60581:60594	5059719	1	True				
ANR	5060257	AssignmentExpression	( pa ) . data = 0		5059719	0		=			
ANR	5060258	MemberAccess	( pa ) . data		5059719	0					
ANR	5060259	Identifier	pa		5059719	0					
ANR	5060260	Identifier	data		5059719	1					
ANR	5060261	PrimaryExpression	0		5059719	1					
ANR	5060262	ElseStatement	else		5059719	0					
ANR	5060263	Statement	define	1471:1:60638:60643	5059719	0	True				
ANR	5060264	Statement	END_ARRAY_PARAM	1471:8:60645:60659	5059719	2	True				
ANR	5060265	Statement	(	1471:23:60660:60660	5059719	3	True				
ANR	5060266	Statement	pa	1471:24:60661:60662	5059719	4	True				
ANR	5060267	Statement	","	1471:26:60663:60663	5059719	5	True				
ANR	5060268	Statement	e	1471:28:60665:60665	5059719	6	True				
ANR	5060269	Statement	)	1471:29:60666:60666	5059719	7	True				
ANR	5060270	GotoStatement	goto e ;	1472:8:60677:60683	5059719	8	True				
ANR	5060271	Identifier	e		5059719	0					
ANR	5060272	Label	default :	1473:6:60692:60699	5059719	9	True				
ANR	5060273	Identifier	default		5059719	0					
ANR	5060274	ExpressionStatement	ecode = code	1474:8:60710:60722	5059719	10	True				
ANR	5060275	AssignmentExpression	ecode = code		5059719	0		=			
ANR	5060276	Identifier	ecode		5059719	0					
ANR	5060277	Identifier	code		5059719	1					
ANR	5060278	Label	e :	1475:0:60725:60726	5059719	11	True				
ANR	5060279	Identifier	e		5059719	0					
ANR	5060280	ExpressionStatement	"param_signal_error ( plist , param_name , ecode )"	1475:3:60728:60772	5059719	12	True				
ANR	5060281	CallExpression	"param_signal_error ( plist , param_name , ecode )"		5059719	0					
ANR	5060282	Callee	param_signal_error		5059719	0					
ANR	5060283	Identifier	param_signal_error		5059719	0					
ANR	5060284	ArgumentList	plist		5059719	1					
ANR	5060285	Argument	plist		5059719	0					
ANR	5060286	Identifier	plist		5059719	0					
ANR	5060287	Argument	param_name		5059719	1					
ANR	5060288	Identifier	param_name		5059719	0					
ANR	5060289	Argument	ecode		5059719	2					
ANR	5060290	Identifier	ecode		5059719	0					
ANR	5060291	Label	case 1 :	1476:6:60781:60787	5059719	13	True				
ANR	5060292	ExpressionStatement	( pa ) . data = 0	1477:8:60798:60811	5059719	14	True				
ANR	5060293	AssignmentExpression	( pa ) . data = 0		5059719	0		=			
ANR	5060294	MemberAccess	( pa ) . data		5059719	0					
ANR	5060295	Identifier	pa		5059719	0					
ANR	5060296	Identifier	data		5059719	1					
ANR	5060297	PrimaryExpression	0		5059719	1					
ANR	5060298	Statement	END	1479:4:60851:60853	5059719	61	True				
ANR	5060299	IfStatement	if ( leadingedge & LEADINGEDGE_REQ_BIT )		5059719	62					
ANR	5060300	Condition	leadingedge & LEADINGEDGE_REQ_BIT	1487:8:61121:61153	5059719	0	True				
ANR	5060301	BitAndExpression	leadingedge & LEADINGEDGE_REQ_BIT		5059719	0		&			
ANR	5060302	Identifier	leadingedge		5059719	0					
ANR	5060303	Identifier	LEADINGEDGE_REQ_BIT		5059719	1					
ANR	5060304	CompoundStatement		104:43:3844:3844	5059719	1					
ANR	5060305	ExpressionStatement	leadingedge = ( leadingedge & LEADINGEDGE_SET_MASK ) | ( ( leadingedge >> LEADINGEDGE_REQ_VAL_SHIFT ) & LEADINGEDGE_MASK )	1488:8:61166:61294	5059719	0	True				
ANR	5060306	AssignmentExpression	leadingedge = ( leadingedge & LEADINGEDGE_SET_MASK ) | ( ( leadingedge >> LEADINGEDGE_REQ_VAL_SHIFT ) & LEADINGEDGE_MASK )		5059719	0		=			
ANR	5060307	Identifier	leadingedge		5059719	0					
ANR	5060308	InclusiveOrExpression	( leadingedge & LEADINGEDGE_SET_MASK ) | ( ( leadingedge >> LEADINGEDGE_REQ_VAL_SHIFT ) & LEADINGEDGE_MASK )		5059719	1		|			
ANR	5060309	BitAndExpression	leadingedge & LEADINGEDGE_SET_MASK		5059719	0		&			
ANR	5060310	Identifier	leadingedge		5059719	0					
ANR	5060311	Identifier	LEADINGEDGE_SET_MASK		5059719	1					
ANR	5060312	BitAndExpression	( leadingedge >> LEADINGEDGE_REQ_VAL_SHIFT ) & LEADINGEDGE_MASK		5059719	1		&			
ANR	5060313	ShiftExpression	leadingedge >> LEADINGEDGE_REQ_VAL_SHIFT		5059719	0		>>			
ANR	5060314	Identifier	leadingedge		5059719	0					
ANR	5060315	Identifier	LEADINGEDGE_REQ_VAL_SHIFT		5059719	1					
ANR	5060316	Identifier	LEADINGEDGE_MASK		5059719	1					
ANR	5060317	Statement	BEGIN_ARRAY_PARAM	1511:4:62268:62284	5059719	63	True				
ANR	5060318	Statement	(	1511:21:62285:62285	5059719	64	True				
ANR	5060319	Statement	param_read_float_array	1511:22:62286:62307	5059719	65	True				
ANR	5060320	Statement	","	1511:44:62308:62308	5059719	66	True				
ANR	5060321	Statement	"""HWResolution"""	1511:46:62310:62323	5059719	67	True				
ANR	5060322	Statement	","	1511:60:62324:62324	5059719	68	True				
ANR	5060323	Statement	hwra	1511:62:62326:62329	5059719	69	True				
ANR	5060324	Statement	","	1511:66:62330:62330	5059719	70	True				
ANR	5060325	Statement	2	1511:68:62332:62332	5059719	71	True				
ANR	5060326	Statement	","	1511:69:62333:62333	5059719	72	True				
ANR	5060327	Statement	hwre	1511:71:62335:62338	5059719	73	True				
ANR	5060328	Statement	)	1511:75:62339:62339	5059719	74	True				
ANR	5060329	CompoundStatement		128:77:5029:5029	5059719	75					
ANR	5060330	IfStatement	if ( hwra . data [ 0 ] <= 0 || hwra . data [ 1 ] <= 0 )		5059719	0					
ANR	5060331	Condition	hwra . data [ 0 ] <= 0 || hwra . data [ 1 ] <= 0	1512:12:62355:62392	5059719	0	True				
ANR	5060332	OrExpression	hwra . data [ 0 ] <= 0 || hwra . data [ 1 ] <= 0		5059719	0		||			
ANR	5060333	RelationalExpression	hwra . data [ 0 ] <= 0		5059719	0		<=			
ANR	5060334	ArrayIndexing	hwra . data [ 0 ]		5059719	0					
ANR	5060335	MemberAccess	hwra . data		5059719	0					
ANR	5060336	Identifier	hwra		5059719	0					
ANR	5060337	Identifier	data		5059719	1					
ANR	5060338	PrimaryExpression	0		5059719	1					
ANR	5060339	PrimaryExpression	0		5059719	1					
ANR	5060340	RelationalExpression	hwra . data [ 1 ] <= 0		5059719	1		<=			
ANR	5060341	ArrayIndexing	hwra . data [ 1 ]		5059719	0					
ANR	5060342	MemberAccess	hwra . data		5059719	0					
ANR	5060343	Identifier	hwra		5059719	0					
ANR	5060344	Identifier	data		5059719	1					
ANR	5060345	PrimaryExpression	1		5059719	1					
ANR	5060346	PrimaryExpression	0		5059719	1					
ANR	5060347	ExpressionStatement	ecode = gs_note_error ( gs_error_rangecheck )	1513:12:62407:62449	5059719	1	True				
ANR	5060348	AssignmentExpression	ecode = gs_note_error ( gs_error_rangecheck )		5059719	0		=			
ANR	5060349	Identifier	ecode		5059719	0					
ANR	5060350	CallExpression	gs_note_error ( gs_error_rangecheck )		5059719	1					
ANR	5060351	Callee	gs_note_error		5059719	0					
ANR	5060352	Identifier	gs_note_error		5059719	0					
ANR	5060353	ArgumentList	gs_error_rangecheck		5059719	1					
ANR	5060354	Argument	gs_error_rangecheck		5059719	0					
ANR	5060355	Identifier	gs_error_rangecheck		5059719	0					
ANR	5060356	ElseStatement	else		5059719	0					
ANR	5060357	BreakStatement	break ;	1515:12:62476:62481	5059719	0	True				
ANR	5060358	ExpressionStatement	"END_ARRAY_PARAM ( hwra , hwre )"	1516:6:62489:62516	5059719	76	True				
ANR	5060359	CallExpression	"END_ARRAY_PARAM ( hwra , hwre )"		5059719	0					
ANR	5060360	Callee	END_ARRAY_PARAM		5059719	0					
ANR	5060361	Identifier	END_ARRAY_PARAM		5059719	0					
ANR	5060362	ArgumentList	hwra		5059719	1					
ANR	5060363	Argument	hwra		5059719	0					
ANR	5060364	Identifier	hwra		5059719	0					
ANR	5060365	Argument	hwre		5059719	1					
ANR	5060366	Identifier	hwre		5059719	0					
ANR	5060367	Statement	BEGIN_ARRAY_PARAM	1517:4:62522:62538	5059719	77	True				
ANR	5060368	Statement	(	1517:21:62539:62539	5059719	78	True				
ANR	5060369	Statement	param_read_int_array	1517:22:62540:62559	5059719	79	True				
ANR	5060370	Statement	","	1517:42:62560:62560	5059719	80	True				
ANR	5060371	Statement	"""HWSize"""	1517:44:62562:62569	5059719	81	True				
ANR	5060372	Statement	","	1517:52:62570:62570	5059719	82	True				
ANR	5060373	Statement	hwsa	1517:54:62572:62575	5059719	83	True				
ANR	5060374	Statement	","	1517:58:62576:62576	5059719	84	True				
ANR	5060375	Statement	2	1517:60:62578:62578	5059719	85	True				
ANR	5060376	Statement	","	1517:61:62579:62579	5059719	86	True				
ANR	5060377	Statement	hwsa	1517:63:62581:62584	5059719	87	True				
ANR	5060378	Statement	)	1517:67:62585:62585	5059719	88	True				
ANR	5060379	CompoundStatement		134:69:5275:5275	5059719	89					
ANR	5060380	IfStatement	if ( ( hwsa . data [ 0 ] <= 0 && hwsa . data [ 0 ] != dev -> width ) || ( hwsa . data [ 1 ] <= 0 && hwsa . data [ 1 ] != dev -> height ) )		5059719	0					
ANR	5060381	Condition	( hwsa . data [ 0 ] <= 0 && hwsa . data [ 0 ] != dev -> width ) || ( hwsa . data [ 1 ] <= 0 && hwsa . data [ 1 ] != dev -> height )	1520:12:62718:62832	5059719	0	True				
ANR	5060382	OrExpression	( hwsa . data [ 0 ] <= 0 && hwsa . data [ 0 ] != dev -> width ) || ( hwsa . data [ 1 ] <= 0 && hwsa . data [ 1 ] != dev -> height )		5059719	0		||			
ANR	5060383	AndExpression	hwsa . data [ 0 ] <= 0 && hwsa . data [ 0 ] != dev -> width		5059719	0		&&			
ANR	5060384	RelationalExpression	hwsa . data [ 0 ] <= 0		5059719	0		<=			
ANR	5060385	ArrayIndexing	hwsa . data [ 0 ]		5059719	0					
ANR	5060386	MemberAccess	hwsa . data		5059719	0					
ANR	5060387	Identifier	hwsa		5059719	0					
ANR	5060388	Identifier	data		5059719	1					
ANR	5060389	PrimaryExpression	0		5059719	1					
ANR	5060390	PrimaryExpression	0		5059719	1					
ANR	5060391	EqualityExpression	hwsa . data [ 0 ] != dev -> width		5059719	1		!=			
ANR	5060392	ArrayIndexing	hwsa . data [ 0 ]		5059719	0					
ANR	5060393	MemberAccess	hwsa . data		5059719	0					
ANR	5060394	Identifier	hwsa		5059719	0					
ANR	5060395	Identifier	data		5059719	1					
ANR	5060396	PrimaryExpression	0		5059719	1					
ANR	5060397	PtrMemberAccess	dev -> width		5059719	1					
ANR	5060398	Identifier	dev		5059719	0					
ANR	5060399	Identifier	width		5059719	1					
ANR	5060400	AndExpression	hwsa . data [ 1 ] <= 0 && hwsa . data [ 1 ] != dev -> height		5059719	1		&&			
ANR	5060401	RelationalExpression	hwsa . data [ 1 ] <= 0		5059719	0		<=			
ANR	5060402	ArrayIndexing	hwsa . data [ 1 ]		5059719	0					
ANR	5060403	MemberAccess	hwsa . data		5059719	0					
ANR	5060404	Identifier	hwsa		5059719	0					
ANR	5060405	Identifier	data		5059719	1					
ANR	5060406	PrimaryExpression	1		5059719	1					
ANR	5060407	PrimaryExpression	0		5059719	1					
ANR	5060408	EqualityExpression	hwsa . data [ 1 ] != dev -> height		5059719	1		!=			
ANR	5060409	ArrayIndexing	hwsa . data [ 1 ]		5059719	0					
ANR	5060410	MemberAccess	hwsa . data		5059719	0					
ANR	5060411	Identifier	hwsa		5059719	0					
ANR	5060412	Identifier	data		5059719	1					
ANR	5060413	PrimaryExpression	1		5059719	1					
ANR	5060414	PtrMemberAccess	dev -> height		5059719	1					
ANR	5060415	Identifier	dev		5059719	0					
ANR	5060416	Identifier	height		5059719	1					
ANR	5060417	ExpressionStatement	ecode = gs_note_error ( gs_error_rangecheck )	1523:12:62856:62898	5059719	1	True				
ANR	5060418	AssignmentExpression	ecode = gs_note_error ( gs_error_rangecheck )		5059719	0		=			
ANR	5060419	Identifier	ecode		5059719	0					
ANR	5060420	CallExpression	gs_note_error ( gs_error_rangecheck )		5059719	1					
ANR	5060421	Callee	gs_note_error		5059719	0					
ANR	5060422	Identifier	gs_note_error		5059719	0					
ANR	5060423	ArgumentList	gs_error_rangecheck		5059719	1					
ANR	5060424	Argument	gs_error_rangecheck		5059719	0					
ANR	5060425	Identifier	gs_error_rangecheck		5059719	0					
ANR	5060426	ElseStatement	else		5059719	0					
ANR	5060427	IfStatement	if ( hwsa . data [ 0 ] > max_coord || hwsa . data [ 1 ] > max_coord )		5059719	0					
ANR	5060428	Condition	hwsa . data [ 0 ] > max_coord || hwsa . data [ 1 ] > max_coord	1526:17:62981:63032	5059719	0	True				
ANR	5060429	OrExpression	hwsa . data [ 0 ] > max_coord || hwsa . data [ 1 ] > max_coord		5059719	0		||			
ANR	5060430	RelationalExpression	hwsa . data [ 0 ] > max_coord		5059719	0		>			
ANR	5060431	ArrayIndexing	hwsa . data [ 0 ]		5059719	0					
ANR	5060432	MemberAccess	hwsa . data		5059719	0					
ANR	5060433	Identifier	hwsa		5059719	0					
ANR	5060434	Identifier	data		5059719	1					
ANR	5060435	PrimaryExpression	0		5059719	1					
ANR	5060436	Identifier	max_coord		5059719	1					
ANR	5060437	RelationalExpression	hwsa . data [ 1 ] > max_coord		5059719	1		>			
ANR	5060438	ArrayIndexing	hwsa . data [ 1 ]		5059719	0					
ANR	5060439	MemberAccess	hwsa . data		5059719	0					
ANR	5060440	Identifier	hwsa		5059719	0					
ANR	5060441	Identifier	data		5059719	1					
ANR	5060442	PrimaryExpression	1		5059719	1					
ANR	5060443	Identifier	max_coord		5059719	1					
ANR	5060444	ExpressionStatement	ecode = gs_note_error ( gs_error_limitcheck )	1527:12:63047:63089	5059719	1	True				
ANR	5060445	AssignmentExpression	ecode = gs_note_error ( gs_error_limitcheck )		5059719	0		=			
ANR	5060446	Identifier	ecode		5059719	0					
ANR	5060447	CallExpression	gs_note_error ( gs_error_limitcheck )		5059719	1					
ANR	5060448	Callee	gs_note_error		5059719	0					
ANR	5060449	Identifier	gs_note_error		5059719	0					
ANR	5060450	ArgumentList	gs_error_limitcheck		5059719	1					
ANR	5060451	Argument	gs_error_limitcheck		5059719	0					
ANR	5060452	Identifier	gs_error_limitcheck		5059719	0					
ANR	5060453	ElseStatement	else		5059719	0					
ANR	5060454	BreakStatement	break ;	1531:12:63140:63145	5059719	0	True				
ANR	5060455	Statement	define	1524:1:62901:62906	5059719	1	True				
ANR	5060456	Statement	max_coord	1524:8:62908:62916	5059719	2	True				
ANR	5060457	Statement	(	1524:18:62918:62918	5059719	3	True				
ANR	5060458	Statement	max_fixed	1524:19:62919:62927	5059719	4	True				
ANR	5060459	Statement	/	1524:29:62929:62929	5059719	5	True				
ANR	5060460	Statement	fixed_1	1524:31:62931:62937	5059719	6	True				
ANR	5060461	Statement	)	1524:38:62938:62938	5059719	7	True				
ANR	5060462	Statement	undef	1529:1:63099:63103	5059719	8	True				
ANR	5060463	Statement	max_coord	1529:7:63105:63113	5059719	9	True				
ANR	5060464	ExpressionStatement	"END_ARRAY_PARAM ( hwsa , hwse )"	1532:6:63153:63180	5059719	90	True				
ANR	5060465	CallExpression	"END_ARRAY_PARAM ( hwsa , hwse )"		5059719	0					
ANR	5060466	Callee	END_ARRAY_PARAM		5059719	0					
ANR	5060467	Identifier	END_ARRAY_PARAM		5059719	0					
ANR	5060468	ArgumentList	hwsa		5059719	1					
ANR	5060469	Argument	hwsa		5059719	0					
ANR	5060470	Identifier	hwsa		5059719	0					
ANR	5060471	Argument	hwse		5059719	1					
ANR	5060472	Identifier	hwse		5059719	0					
ANR	5060473	CompoundStatement		151:8:5884:5889	5059719	91					
ANR	5060474	IdentifierDeclStatement	int t ;	1534:8:63196:63201	5059719	0	True				
ANR	5060475	IdentifierDecl	t		5059719	0					
ANR	5060476	IdentifierDeclType	int		5059719	0					
ANR	5060477	Identifier	t		5059719	1					
ANR	5060478	ExpressionStatement	"code = param_read_int ( plist , ""LeadingEdge"" , & t )"	1536:8:63212:63259	5059719	1	True				
ANR	5060479	AssignmentExpression	"code = param_read_int ( plist , ""LeadingEdge"" , & t )"		5059719	0		=			
ANR	5060480	Identifier	code		5059719	0					
ANR	5060481	CallExpression	"param_read_int ( plist , ""LeadingEdge"" , & t )"		5059719	1					
ANR	5060482	Callee	param_read_int		5059719	0					
ANR	5060483	Identifier	param_read_int		5059719	0					
ANR	5060484	ArgumentList	plist		5059719	1					
ANR	5060485	Argument	plist		5059719	0					
ANR	5060486	Identifier	plist		5059719	0					
ANR	5060487	Argument	"""LeadingEdge"""		5059719	1					
ANR	5060488	PrimaryExpression	"""LeadingEdge"""		5059719	0					
ANR	5060489	Argument	& t		5059719	2					
ANR	5060490	UnaryOperationExpression	& t		5059719	0					
ANR	5060491	UnaryOperator	&		5059719	0					
ANR	5060492	Identifier	t		5059719	1					
ANR	5060493	IfStatement	if ( code < 0 )		5059719	2					
ANR	5060494	Condition	code < 0	1537:12:63273:63280	5059719	0	True				
ANR	5060495	RelationalExpression	code < 0		5059719	0		<			
ANR	5060496	Identifier	code		5059719	0					
ANR	5060497	PrimaryExpression	0		5059719	1					
ANR	5060498	CompoundStatement		154:22:5971:5971	5059719	1					
ANR	5060499	IfStatement	"if ( param_read_null ( plist , ""LeadingEdge"" ) == 0 )"		5059719	0					
ANR	5060500	Condition	"param_read_null ( plist , ""LeadingEdge"" ) == 0"	1538:16:63301:63342	5059719	0	True				
ANR	5060501	EqualityExpression	"param_read_null ( plist , ""LeadingEdge"" ) == 0"		5059719	0		==			
ANR	5060502	CallExpression	"param_read_null ( plist , ""LeadingEdge"" )"		5059719	0					
ANR	5060503	Callee	param_read_null		5059719	0					
ANR	5060504	Identifier	param_read_null		5059719	0					
ANR	5060505	ArgumentList	plist		5059719	1					
ANR	5060506	Argument	plist		5059719	0					
ANR	5060507	Identifier	plist		5059719	0					
ANR	5060508	Argument	"""LeadingEdge"""		5059719	1					
ANR	5060509	PrimaryExpression	"""LeadingEdge"""		5059719	0					
ANR	5060510	PrimaryExpression	0		5059719	1					
ANR	5060511	CompoundStatement		155:60:6033:6033	5059719	1					
ANR	5060512	ExpressionStatement	leadingedge &= ~LEADINGEDGE_SET_MASK	1540:16:63429:63465	5059719	0	True				
ANR	5060513	AssignmentExpression	leadingedge &= ~LEADINGEDGE_SET_MASK		5059719	0		&=			
ANR	5060514	Identifier	leadingedge		5059719	0					
ANR	5060515	Identifier	~LEADINGEDGE_SET_MASK		5059719	1					
ANR	5060516	ElseStatement	else		5059719	0					
ANR	5060517	CompoundStatement		158:19:6174:6174	5059719	0					
ANR	5060518	ExpressionStatement	ecode = code	1542:16:63504:63516	5059719	0	True				
ANR	5060519	AssignmentExpression	ecode = code		5059719	0		=			
ANR	5060520	Identifier	ecode		5059719	0					
ANR	5060521	Identifier	code		5059719	1					
ANR	5060522	ElseStatement	else		5059719	0					
ANR	5060523	IfStatement	if ( code == 0 )		5059719	0					
ANR	5060524	Condition	code == 0	1544:19:63551:63559	5059719	0	True				
ANR	5060525	EqualityExpression	code == 0		5059719	0		==			
ANR	5060526	Identifier	code		5059719	0					
ANR	5060527	PrimaryExpression	0		5059719	1					
ANR	5060528	CompoundStatement		161:30:6250:6250	5059719	1					
ANR	5060529	IfStatement	if ( t < 0 || t > 3 )		5059719	0					
ANR	5060530	Condition	t < 0 || t > 3	1545:16:63580:63593	5059719	0	True				
ANR	5060531	OrExpression	t < 0 || t > 3		5059719	0		||			
ANR	5060532	RelationalExpression	t < 0		5059719	0		<			
ANR	5060533	Identifier	t		5059719	0					
ANR	5060534	PrimaryExpression	0		5059719	1					
ANR	5060535	RelationalExpression	t > 3		5059719	1		>			
ANR	5060536	Identifier	t		5059719	0					
ANR	5060537	PrimaryExpression	3		5059719	1					
ANR	5060538	ExpressionStatement	"param_signal_error ( plist , ""LeadingEdge"" , ecode = gs_error_rangecheck )"	1546:16:63612:63716	5059719	1	True				
ANR	5060539	CallExpression	"param_signal_error ( plist , ""LeadingEdge"" , ecode = gs_error_rangecheck )"		5059719	0					
ANR	5060540	Callee	param_signal_error		5059719	0					
ANR	5060541	Identifier	param_signal_error		5059719	0					
ANR	5060542	ArgumentList	plist		5059719	1					
ANR	5060543	Argument	plist		5059719	0					
ANR	5060544	Identifier	plist		5059719	0					
ANR	5060545	Argument	"""LeadingEdge"""		5059719	1					
ANR	5060546	PrimaryExpression	"""LeadingEdge"""		5059719	0					
ANR	5060547	Argument	ecode = gs_error_rangecheck		5059719	2					
ANR	5060548	AssignmentExpression	ecode = gs_error_rangecheck		5059719	0		=			
ANR	5060549	Identifier	ecode		5059719	0					
ANR	5060550	Identifier	gs_error_rangecheck		5059719	1					
ANR	5060551	ElseStatement	else		5059719	0					
ANR	5060552	ExpressionStatement	leadingedge = LEADINGEDGE_SET_MASK | t	1549:16:63751:63789	5059719	0	True				
ANR	5060553	AssignmentExpression	leadingedge = LEADINGEDGE_SET_MASK | t		5059719	0		=			
ANR	5060554	Identifier	leadingedge		5059719	0					
ANR	5060555	InclusiveOrExpression	LEADINGEDGE_SET_MASK | t		5059719	1		|			
ANR	5060556	Identifier	LEADINGEDGE_SET_MASK		5059719	0					
ANR	5060557	Identifier	t		5059719	1					
ANR	5060558	CompoundStatement		173:8:6616:6633	5059719	92					
ANR	5060559	IdentifierDeclStatement	const float * res = ( hwra . data == 0 ? dev -> HWResolution : hwra . data ) ;	1553:8:63821:63888	5059719	0	True				
ANR	5060560	IdentifierDecl	* res = ( hwra . data == 0 ? dev -> HWResolution : hwra . data )		5059719	0					
ANR	5060561	IdentifierDeclType	const float *		5059719	0					
ANR	5060562	Identifier	res		5059719	1					
ANR	5060563	AssignmentExpression	* res = ( hwra . data == 0 ? dev -> HWResolution : hwra . data )		5059719	2		=			
ANR	5060564	Identifier	res		5059719	0					
ANR	5060565	ConditionalExpression	hwra . data == 0 ? dev -> HWResolution : hwra . data		5059719	1					
ANR	5060566	Condition	hwra . data == 0		5059719	0					
ANR	5060567	EqualityExpression	hwra . data == 0		5059719	0		==			
ANR	5060568	MemberAccess	hwra . data		5059719	0					
ANR	5060569	Identifier	hwra		5059719	0					
ANR	5060570	Identifier	data		5059719	1					
ANR	5060571	PrimaryExpression	0		5059719	1					
ANR	5060572	PtrMemberAccess	dev -> HWResolution		5059719	1					
ANR	5060573	Identifier	dev		5059719	0					
ANR	5060574	Identifier	HWResolution		5059719	1					
ANR	5060575	MemberAccess	hwra . data		5059719	2					
ANR	5060576	Identifier	hwra		5059719	0					
ANR	5060577	Identifier	data		5059719	1					
ANR	5060578	IdentifierDeclStatement	const float * data ;	1556:8:63928:63945	5059719	1	True				
ANR	5060579	IdentifierDecl	* data		5059719	0					
ANR	5060580	IdentifierDeclType	const float *		5059719	0					
ANR	5060581	Identifier	data		5059719	1					
ANR	5060582	ExpressionStatement	"code = param_MediaSize ( plist , ""PageSize"" , res , & msa )"	1560:8:64054:64106	5059719	2	True				
ANR	5060583	AssignmentExpression	"code = param_MediaSize ( plist , ""PageSize"" , res , & msa )"		5059719	0		=			
ANR	5060584	Identifier	code		5059719	0					
ANR	5060585	CallExpression	"param_MediaSize ( plist , ""PageSize"" , res , & msa )"		5059719	1					
ANR	5060586	Callee	param_MediaSize		5059719	0					
ANR	5060587	Identifier	param_MediaSize		5059719	0					
ANR	5060588	ArgumentList	plist		5059719	1					
ANR	5060589	Argument	plist		5059719	0					
ANR	5060590	Identifier	plist		5059719	0					
ANR	5060591	Argument	"""PageSize"""		5059719	1					
ANR	5060592	PrimaryExpression	"""PageSize"""		5059719	0					
ANR	5060593	Argument	res		5059719	2					
ANR	5060594	Identifier	res		5059719	0					
ANR	5060595	Argument	& msa		5059719	3					
ANR	5060596	UnaryOperationExpression	& msa		5059719	0					
ANR	5060597	UnaryOperator	&		5059719	0					
ANR	5060598	Identifier	msa		5059719	1					
ANR	5060599	IfStatement	if ( code < 0 )		5059719	3					
ANR	5060600	Condition	code < 0	1561:12:64120:64127	5059719	0	True				
ANR	5060601	RelationalExpression	code < 0		5059719	0		<			
ANR	5060602	Identifier	code		5059719	0					
ANR	5060603	PrimaryExpression	0		5059719	1					
ANR	5060604	ExpressionStatement	ecode = code	1562:12:64142:64154	5059719	1	True				
ANR	5060605	AssignmentExpression	ecode = code		5059719	0		=			
ANR	5060606	Identifier	ecode		5059719	0					
ANR	5060607	Identifier	code		5059719	1					
ANR	5060608	ExpressionStatement	data = msa . data	1565:8:64273:64288	5059719	4	True				
ANR	5060609	AssignmentExpression	data = msa . data		5059719	0		=			
ANR	5060610	Identifier	data		5059719	0					
ANR	5060611	MemberAccess	msa . data		5059719	1					
ANR	5060612	Identifier	msa		5059719	0					
ANR	5060613	Identifier	data		5059719	1					
ANR	5060614	ExpressionStatement	"code = param_MediaSize ( plist , "".MediaSize"" , res , & msa )"	1566:8:64298:64352	5059719	5	True				
ANR	5060615	AssignmentExpression	"code = param_MediaSize ( plist , "".MediaSize"" , res , & msa )"		5059719	0		=			
ANR	5060616	Identifier	code		5059719	0					
ANR	5060617	CallExpression	"param_MediaSize ( plist , "".MediaSize"" , res , & msa )"		5059719	1					
ANR	5060618	Callee	param_MediaSize		5059719	0					
ANR	5060619	Identifier	param_MediaSize		5059719	0					
ANR	5060620	ArgumentList	plist		5059719	1					
ANR	5060621	Argument	plist		5059719	0					
ANR	5060622	Identifier	plist		5059719	0					
ANR	5060623	Argument	""".MediaSize"""		5059719	1					
ANR	5060624	PrimaryExpression	""".MediaSize"""		5059719	0					
ANR	5060625	Argument	res		5059719	2					
ANR	5060626	Identifier	res		5059719	0					
ANR	5060627	Argument	& msa		5059719	3					
ANR	5060628	UnaryOperationExpression	& msa		5059719	0					
ANR	5060629	UnaryOperator	&		5059719	0					
ANR	5060630	Identifier	msa		5059719	1					
ANR	5060631	IfStatement	if ( code < 0 )		5059719	6					
ANR	5060632	Condition	code < 0	1567:12:64366:64373	5059719	0	True				
ANR	5060633	RelationalExpression	code < 0		5059719	0		<			
ANR	5060634	Identifier	code		5059719	0					
ANR	5060635	PrimaryExpression	0		5059719	1					
ANR	5060636	ExpressionStatement	ecode = code	1568:12:64388:64400	5059719	1	True				
ANR	5060637	AssignmentExpression	ecode = code		5059719	0		=			
ANR	5060638	Identifier	ecode		5059719	0					
ANR	5060639	Identifier	code		5059719	1					
ANR	5060640	ElseStatement	else		5059719	0					
ANR	5060641	IfStatement	if ( msa . data == 0 )		5059719	0					
ANR	5060642	Condition	msa . data == 0	1569:17:64419:64431	5059719	0	True				
ANR	5060643	EqualityExpression	msa . data == 0		5059719	0		==			
ANR	5060644	MemberAccess	msa . data		5059719	0					
ANR	5060645	Identifier	msa		5059719	0					
ANR	5060646	Identifier	data		5059719	1					
ANR	5060647	PrimaryExpression	0		5059719	1					
ANR	5060648	ExpressionStatement	msa . data = data	1570:12:64446:64461	5059719	1	True				
ANR	5060649	AssignmentExpression	msa . data = data		5059719	0		=			
ANR	5060650	MemberAccess	msa . data		5059719	0					
ANR	5060651	Identifier	msa		5059719	0					
ANR	5060652	Identifier	data		5059719	1					
ANR	5060653	Identifier	data		5059719	1					
ANR	5060654	Statement	BEGIN_ARRAY_PARAM	1578:4:64599:64615	5059719	93	True				
ANR	5060655	Statement	(	1578:21:64616:64616	5059719	94	True				
ANR	5060656	Statement	param_read_float_array	1578:22:64617:64638	5059719	95	True				
ANR	5060657	Statement	","	1578:44:64639:64639	5059719	96	True				
ANR	5060658	Statement	"""Margins"""	1578:46:64641:64649	5059719	97	True				
ANR	5060659	Statement	","	1578:55:64650:64650	5059719	98	True				
ANR	5060660	Statement	ma	1578:57:64652:64653	5059719	99	True				
ANR	5060661	Statement	","	1578:59:64654:64654	5059719	100	True				
ANR	5060662	Statement	2	1578:61:64656:64656	5059719	101	True				
ANR	5060663	Statement	","	1578:62:64657:64657	5059719	102	True				
ANR	5060664	Statement	me	1578:64:64659:64660	5059719	103	True				
ANR	5060665	Statement	)	1578:66:64661:64661	5059719	104	True				
ANR	5060666	CompoundStatement		195:68:7351:7351	5059719	105					
ANR	5060667	BreakStatement	break ;	1579:8:64673:64678	5059719	0	True				
ANR	5060668	ExpressionStatement	"END_ARRAY_PARAM ( ma , me )"	1580:6:64686:64709	5059719	106	True				
ANR	5060669	CallExpression	"END_ARRAY_PARAM ( ma , me )"		5059719	0					
ANR	5060670	Callee	END_ARRAY_PARAM		5059719	0					
ANR	5060671	Identifier	END_ARRAY_PARAM		5059719	0					
ANR	5060672	ArgumentList	ma		5059719	1					
ANR	5060673	Argument	ma		5059719	0					
ANR	5060674	Identifier	ma		5059719	0					
ANR	5060675	Argument	me		5059719	1					
ANR	5060676	Identifier	me		5059719	0					
ANR	5060677	Statement	BEGIN_ARRAY_PARAM	1581:4:64715:64731	5059719	107	True				
ANR	5060678	Statement	(	1581:21:64732:64732	5059719	108	True				
ANR	5060679	Statement	param_read_float_array	1581:22:64733:64754	5059719	109	True				
ANR	5060680	Statement	","	1581:44:64755:64755	5059719	110	True				
ANR	5060681	Statement	""".HWMargins"""	1581:46:64757:64768	5059719	111	True				
ANR	5060682	Statement	","	1581:58:64769:64769	5059719	112	True				
ANR	5060683	Statement	hwma	1581:60:64771:64774	5059719	113	True				
ANR	5060684	Statement	","	1581:64:64775:64775	5059719	114	True				
ANR	5060685	Statement	4	1581:66:64777:64777	5059719	115	True				
ANR	5060686	Statement	","	1581:67:64778:64778	5059719	116	True				
ANR	5060687	Statement	hwme	1581:69:64780:64783	5059719	117	True				
ANR	5060688	Statement	)	1581:73:64784:64784	5059719	118	True				
ANR	5060689	CompoundStatement		198:75:7474:7474	5059719	119					
ANR	5060690	BreakStatement	break ;	1582:8:64796:64801	5059719	0	True				
ANR	5060691	ExpressionStatement	"END_ARRAY_PARAM ( hwma , hwme )"	1583:6:64809:64836	5059719	120	True				
ANR	5060692	CallExpression	"END_ARRAY_PARAM ( hwma , hwme )"		5059719	0					
ANR	5060693	Callee	END_ARRAY_PARAM		5059719	0					
ANR	5060694	Identifier	END_ARRAY_PARAM		5059719	0					
ANR	5060695	ArgumentList	hwma		5059719	1					
ANR	5060696	Argument	hwma		5059719	0					
ANR	5060697	Identifier	hwma		5059719	0					
ANR	5060698	Argument	hwme		5059719	1					
ANR	5060699	Identifier	hwme		5059719	0					
ANR	5060700	SwitchStatement	"switch ( code = param_read_bool ( plist , ( param_name = "".IgnoreNumCopies"" ) , & ignc ) )"		5059719	121					
ANR	5060701	Condition	"code = param_read_bool ( plist , ( param_name = "".IgnoreNumCopies"" ) , & ignc )"	1584:12:64850:64920	5059719	0	True				
ANR	5060702	AssignmentExpression	"code = param_read_bool ( plist , ( param_name = "".IgnoreNumCopies"" ) , & ignc )"		5059719	0		=			
ANR	5060703	Identifier	code		5059719	0					
ANR	5060704	CallExpression	"param_read_bool ( plist , ( param_name = "".IgnoreNumCopies"" ) , & ignc )"		5059719	1					
ANR	5060705	Callee	param_read_bool		5059719	0					
ANR	5060706	Identifier	param_read_bool		5059719	0					
ANR	5060707	ArgumentList	plist		5059719	1					
ANR	5060708	Argument	plist		5059719	0					
ANR	5060709	Identifier	plist		5059719	0					
ANR	5060710	Argument	"param_name = "".IgnoreNumCopies"""		5059719	1					
ANR	5060711	AssignmentExpression	"param_name = "".IgnoreNumCopies"""		5059719	0		=			
ANR	5060712	Identifier	param_name		5059719	0					
ANR	5060713	PrimaryExpression	""".IgnoreNumCopies"""		5059719	1					
ANR	5060714	Argument	& ignc		5059719	2					
ANR	5060715	UnaryOperationExpression	& ignc		5059719	0					
ANR	5060716	UnaryOperator	&		5059719	0					
ANR	5060717	Identifier	ignc		5059719	1					
ANR	5060718	CompoundStatement		201:85:7611:7611	5059719	1					
ANR	5060719	Label	default :	1585:8:64933:64940	5059719	0	True				
ANR	5060720	Identifier	default		5059719	0					
ANR	5060721	ExpressionStatement	ecode = code	1586:12:64954:64966	5059719	1	True				
ANR	5060722	AssignmentExpression	ecode = code		5059719	0		=			
ANR	5060723	Identifier	ecode		5059719	0					
ANR	5060724	Identifier	code		5059719	1					
ANR	5060725	ExpressionStatement	"param_signal_error ( plist , param_name , ecode )"	1587:12:64980:65024	5059719	2	True				
ANR	5060726	CallExpression	"param_signal_error ( plist , param_name , ecode )"		5059719	0					
ANR	5060727	Callee	param_signal_error		5059719	0					
ANR	5060728	Identifier	param_signal_error		5059719	0					
ANR	5060729	ArgumentList	plist		5059719	1					
ANR	5060730	Argument	plist		5059719	0					
ANR	5060731	Identifier	plist		5059719	0					
ANR	5060732	Argument	param_name		5059719	1					
ANR	5060733	Identifier	param_name		5059719	0					
ANR	5060734	Argument	ecode		5059719	2					
ANR	5060735	Identifier	ecode		5059719	0					
ANR	5060736	Label	case 0 :	1588:8:65034:65040	5059719	3	True				
ANR	5060737	Label	case 1 :	1589:8:65050:65056	5059719	4	True				
ANR	5060738	BreakStatement	break ;	1590:12:65070:65075	5059719	5	True				
ANR	5060739	IfStatement	"if ( dev -> NumCopies_set >= 0 && ( * dev_proc ( dev , get_page_device ) ) ( dev ) != 0 )"		5059719	122					
ANR	5060740	Condition	"dev -> NumCopies_set >= 0 && ( * dev_proc ( dev , get_page_device ) ) ( dev ) != 0"	1592:8:65091:65168	5059719	0	True				
ANR	5060741	AndExpression	"dev -> NumCopies_set >= 0 && ( * dev_proc ( dev , get_page_device ) ) ( dev ) != 0"		5059719	0		&&			
ANR	5060742	RelationalExpression	dev -> NumCopies_set >= 0		5059719	0		>=			
ANR	5060743	PtrMemberAccess	dev -> NumCopies_set		5059719	0					
ANR	5060744	Identifier	dev		5059719	0					
ANR	5060745	Identifier	NumCopies_set		5059719	1					
ANR	5060746	PrimaryExpression	0		5059719	1					
ANR	5060747	EqualityExpression	"( * dev_proc ( dev , get_page_device ) ) ( dev ) != 0"		5059719	1		!=			
ANR	5060748	CallExpression	"( * dev_proc ( dev , get_page_device ) ) ( dev )"		5059719	0					
ANR	5060749	Callee	"* dev_proc ( dev , get_page_device )"		5059719	0					
ANR	5060750	UnaryOperationExpression	"* dev_proc ( dev , get_page_device )"		5059719	0					
ANR	5060751	UnaryOperator	*		5059719	0					
ANR	5060752	CallExpression	"dev_proc ( dev , get_page_device )"		5059719	1					
ANR	5060753	Callee	dev_proc		5059719	0					
ANR	5060754	Identifier	dev_proc		5059719	0					
ANR	5060755	ArgumentList	dev		5059719	1					
ANR	5060756	Argument	dev		5059719	0					
ANR	5060757	Identifier	dev		5059719	0					
ANR	5060758	Argument	get_page_device		5059719	1					
ANR	5060759	Identifier	get_page_device		5059719	0					
ANR	5060760	ArgumentList	dev		5059719	1					
ANR	5060761	Argument	dev		5059719	0					
ANR	5060762	Identifier	dev		5059719	0					
ANR	5060763	PrimaryExpression	0		5059719	1					
ANR	5060764	CompoundStatement		211:10:7868:7868	5059719	1					
ANR	5060765	SwitchStatement	"switch ( code = param_read_int ( plist , ( param_name = ""NumCopies"" ) , & nci ) )"		5059719	0					
ANR	5060766	Condition	"code = param_read_int ( plist , ( param_name = ""NumCopies"" ) , & nci )"	1595:16:65198:65259	5059719	0	True				
ANR	5060767	AssignmentExpression	"code = param_read_int ( plist , ( param_name = ""NumCopies"" ) , & nci )"		5059719	0		=			
ANR	5060768	Identifier	code		5059719	0					
ANR	5060769	CallExpression	"param_read_int ( plist , ( param_name = ""NumCopies"" ) , & nci )"		5059719	1					
ANR	5060770	Callee	param_read_int		5059719	0					
ANR	5060771	Identifier	param_read_int		5059719	0					
ANR	5060772	ArgumentList	plist		5059719	1					
ANR	5060773	Argument	plist		5059719	0					
ANR	5060774	Identifier	plist		5059719	0					
ANR	5060775	Argument	"param_name = ""NumCopies"""		5059719	1					
ANR	5060776	AssignmentExpression	"param_name = ""NumCopies"""		5059719	0		=			
ANR	5060777	Identifier	param_name		5059719	0					
ANR	5060778	PrimaryExpression	"""NumCopies"""		5059719	1					
ANR	5060779	Argument	& nci		5059719	2					
ANR	5060780	UnaryOperationExpression	& nci		5059719	0					
ANR	5060781	UnaryOperator	&		5059719	0					
ANR	5060782	Identifier	nci		5059719	1					
ANR	5060783	CompoundStatement		212:80:7950:7950	5059719	1					
ANR	5060784	Label	case 0 :	1596:12:65276:65282	5059719	0	True				
ANR	5060785	IfStatement	if ( nci < 0 )		5059719	1					
ANR	5060786	Condition	nci < 0	1597:20:65304:65310	5059719	0	True				
ANR	5060787	RelationalExpression	nci < 0		5059719	0		<			
ANR	5060788	Identifier	nci		5059719	0					
ANR	5060789	PrimaryExpression	0		5059719	1					
ANR	5060790	ExpressionStatement	ecode = gs_error_rangecheck	1598:20:65333:65360	5059719	1	True				
ANR	5060791	AssignmentExpression	ecode = gs_error_rangecheck		5059719	0		=			
ANR	5060792	Identifier	ecode		5059719	0					
ANR	5060793	Identifier	gs_error_rangecheck		5059719	1					
ANR	5060794	ElseStatement	else		5059719	0					
ANR	5060795	CompoundStatement		216:21:8071:8071	5059719	0					
ANR	5060796	ExpressionStatement	ncset = 1	1600:20:65405:65414	5059719	0	True				
ANR	5060797	AssignmentExpression	ncset = 1		5059719	0		=			
ANR	5060798	Identifier	ncset		5059719	0					
ANR	5060799	PrimaryExpression	1		5059719	1					
ANR	5060800	BreakStatement	break ;	1601:20:65436:65441	5059719	1	True				
ANR	5060801	GotoStatement	goto nce ;	1603:16:65477:65485	5059719	2	True				
ANR	5060802	Identifier	nce		5059719	0					
ANR	5060803	Label	default :	1604:12:65499:65506	5059719	3	True				
ANR	5060804	Identifier	default		5059719	0					
ANR	5060805	IfStatement	"if ( ( code = param_read_null ( plist , param_name ) ) == 0 )"		5059719	4					
ANR	5060806	Condition	"( code = param_read_null ( plist , param_name ) ) == 0"	1605:20:65528:65575	5059719	0	True				
ANR	5060807	EqualityExpression	"( code = param_read_null ( plist , param_name ) ) == 0"		5059719	0		==			
ANR	5060808	AssignmentExpression	"code = param_read_null ( plist , param_name )"		5059719	0		=			
ANR	5060809	Identifier	code		5059719	0					
ANR	5060810	CallExpression	"param_read_null ( plist , param_name )"		5059719	1					
ANR	5060811	Callee	param_read_null		5059719	0					
ANR	5060812	Identifier	param_read_null		5059719	0					
ANR	5060813	ArgumentList	plist		5059719	1					
ANR	5060814	Argument	plist		5059719	0					
ANR	5060815	Identifier	plist		5059719	0					
ANR	5060816	Argument	param_name		5059719	1					
ANR	5060817	Identifier	param_name		5059719	0					
ANR	5060818	PrimaryExpression	0		5059719	1					
ANR	5060819	CompoundStatement		222:70:8266:8266	5059719	1					
ANR	5060820	ExpressionStatement	ncset = 0	1606:20:65600:65609	5059719	0	True				
ANR	5060821	AssignmentExpression	ncset = 0		5059719	0		=			
ANR	5060822	Identifier	ncset		5059719	0					
ANR	5060823	PrimaryExpression	0		5059719	1					
ANR	5060824	BreakStatement	break ;	1607:20:65631:65636	5059719	1	True				
ANR	5060825	ExpressionStatement	ecode = code	1609:16:65672:65684	5059719	5	True				
ANR	5060826	AssignmentExpression	ecode = code		5059719	0		=			
ANR	5060827	Identifier	ecode		5059719	0					
ANR	5060828	Identifier	code		5059719	1					
ANR	5060829	Label	nce :	1610:0:65703:65706	5059719	6	True				
ANR	5060830	Identifier	nce		5059719	0					
ANR	5060831	ExpressionStatement	"param_signal_error ( plist , param_name , ecode )"	1611:16:65724:65768	5059719	7	True				
ANR	5060832	CallExpression	"param_signal_error ( plist , param_name , ecode )"		5059719	0					
ANR	5060833	Callee	param_signal_error		5059719	0					
ANR	5060834	Identifier	param_signal_error		5059719	0					
ANR	5060835	ArgumentList	plist		5059719	1					
ANR	5060836	Argument	plist		5059719	0					
ANR	5060837	Identifier	plist		5059719	0					
ANR	5060838	Argument	param_name		5059719	1					
ANR	5060839	Identifier	param_name		5059719	0					
ANR	5060840	Argument	ecode		5059719	2					
ANR	5060841	Identifier	ecode		5059719	0					
ANR	5060842	Label	case 1 :	1612:12:65782:65788	5059719	8	True				
ANR	5060843	BreakStatement	break ;	1613:16:65806:65811	5059719	9	True				
ANR	5060844	IfStatement	"if ( ( code = param_read_string ( plist , ""ICCOutputColors"" , & icc_pro ) ) != 1 )"		5059719	123					
ANR	5060845	Condition	"( code = param_read_string ( plist , ""ICCOutputColors"" , & icc_pro ) ) != 1"	1617:8:65879:65945	5059719	0	True				
ANR	5060846	EqualityExpression	"( code = param_read_string ( plist , ""ICCOutputColors"" , & icc_pro ) ) != 1"		5059719	0		!=			
ANR	5060847	AssignmentExpression	"code = param_read_string ( plist , ""ICCOutputColors"" , & icc_pro )"		5059719	0		=			
ANR	5060848	Identifier	code		5059719	0					
ANR	5060849	CallExpression	"param_read_string ( plist , ""ICCOutputColors"" , & icc_pro )"		5059719	1					
ANR	5060850	Callee	param_read_string		5059719	0					
ANR	5060851	Identifier	param_read_string		5059719	0					
ANR	5060852	ArgumentList	plist		5059719	1					
ANR	5060853	Argument	plist		5059719	0					
ANR	5060854	Identifier	plist		5059719	0					
ANR	5060855	Argument	"""ICCOutputColors"""		5059719	1					
ANR	5060856	PrimaryExpression	"""ICCOutputColors"""		5059719	0					
ANR	5060857	Argument	& icc_pro		5059719	2					
ANR	5060858	UnaryOperationExpression	& icc_pro		5059719	0					
ANR	5060859	UnaryOperator	&		5059719	0					
ANR	5060860	Identifier	icc_pro		5059719	1					
ANR	5060861	PrimaryExpression	1		5059719	1					
ANR	5060862	CompoundStatement		234:77:8636:8636	5059719	1					
ANR	5060863	IfStatement	"if ( ( code = gx_default_put_icc_colorants ( & icc_pro , dev ) ) < 0 )"		5059719	0					
ANR	5060864	Condition	"( code = gx_default_put_icc_colorants ( & icc_pro , dev ) ) < 0"	1618:12:65962:66017	5059719	0	True				
ANR	5060865	RelationalExpression	"( code = gx_default_put_icc_colorants ( & icc_pro , dev ) ) < 0"		5059719	0		<			
ANR	5060866	AssignmentExpression	"code = gx_default_put_icc_colorants ( & icc_pro , dev )"		5059719	0		=			
ANR	5060867	Identifier	code		5059719	0					
ANR	5060868	CallExpression	"gx_default_put_icc_colorants ( & icc_pro , dev )"		5059719	1					
ANR	5060869	Callee	gx_default_put_icc_colorants		5059719	0					
ANR	5060870	Identifier	gx_default_put_icc_colorants		5059719	0					
ANR	5060871	ArgumentList	& icc_pro		5059719	1					
ANR	5060872	Argument	& icc_pro		5059719	0					
ANR	5060873	UnaryOperationExpression	& icc_pro		5059719	0					
ANR	5060874	UnaryOperator	&		5059719	0					
ANR	5060875	Identifier	icc_pro		5059719	1					
ANR	5060876	Argument	dev		5059719	1					
ANR	5060877	Identifier	dev		5059719	0					
ANR	5060878	PrimaryExpression	0		5059719	1					
ANR	5060879	CompoundStatement		235:70:8708:8708	5059719	1					
ANR	5060880	ExpressionStatement	ecode = code	1619:12:66034:66046	5059719	0	True				
ANR	5060881	AssignmentExpression	ecode = code		5059719	0		=			
ANR	5060882	Identifier	ecode		5059719	0					
ANR	5060883	Identifier	code		5059719	1					
ANR	5060884	ExpressionStatement	"param_signal_error ( plist , ""ICCOutputColors"" , ecode )"	1620:12:66060:66111	5059719	1	True				
ANR	5060885	CallExpression	"param_signal_error ( plist , ""ICCOutputColors"" , ecode )"		5059719	0					
ANR	5060886	Callee	param_signal_error		5059719	0					
ANR	5060887	Identifier	param_signal_error		5059719	0					
ANR	5060888	ArgumentList	plist		5059719	1					
ANR	5060889	Argument	plist		5059719	0					
ANR	5060890	Identifier	plist		5059719	0					
ANR	5060891	Argument	"""ICCOutputColors"""		5059719	1					
ANR	5060892	PrimaryExpression	"""ICCOutputColors"""		5059719	0					
ANR	5060893	Argument	ecode		5059719	2					
ANR	5060894	Identifier	ecode		5059719	0					
ANR	5060895	IfStatement	"if ( ( code = param_read_string ( plist , ""DeviceLinkProfile"" , & icc_pro ) ) != 1 )"		5059719	124					
ANR	5060896	Condition	"( code = param_read_string ( plist , ""DeviceLinkProfile"" , & icc_pro ) ) != 1"	1623:8:66137:66205	5059719	0	True				
ANR	5060897	EqualityExpression	"( code = param_read_string ( plist , ""DeviceLinkProfile"" , & icc_pro ) ) != 1"		5059719	0		!=			
ANR	5060898	AssignmentExpression	"code = param_read_string ( plist , ""DeviceLinkProfile"" , & icc_pro )"		5059719	0		=			
ANR	5060899	Identifier	code		5059719	0					
ANR	5060900	CallExpression	"param_read_string ( plist , ""DeviceLinkProfile"" , & icc_pro )"		5059719	1					
ANR	5060901	Callee	param_read_string		5059719	0					
ANR	5060902	Identifier	param_read_string		5059719	0					
ANR	5060903	ArgumentList	plist		5059719	1					
ANR	5060904	Argument	plist		5059719	0					
ANR	5060905	Identifier	plist		5059719	0					
ANR	5060906	Argument	"""DeviceLinkProfile"""		5059719	1					
ANR	5060907	PrimaryExpression	"""DeviceLinkProfile"""		5059719	0					
ANR	5060908	Argument	& icc_pro		5059719	2					
ANR	5060909	UnaryOperationExpression	& icc_pro		5059719	0					
ANR	5060910	UnaryOperator	&		5059719	0					
ANR	5060911	Identifier	icc_pro		5059719	1					
ANR	5060912	PrimaryExpression	1		5059719	1					
ANR	5060913	CompoundStatement		240:79:8896:8896	5059719	1					
ANR	5060914	IfStatement	"if ( ( code = gx_default_put_icc ( & icc_pro , dev , gsLINKPROFILE ) ) < 0 )"		5059719	0					
ANR	5060915	Condition	"( code = gx_default_put_icc ( & icc_pro , dev , gsLINKPROFILE ) ) < 0"	1624:12:66222:66282	5059719	0	True				
ANR	5060916	RelationalExpression	"( code = gx_default_put_icc ( & icc_pro , dev , gsLINKPROFILE ) ) < 0"		5059719	0		<			
ANR	5060917	AssignmentExpression	"code = gx_default_put_icc ( & icc_pro , dev , gsLINKPROFILE )"		5059719	0		=			
ANR	5060918	Identifier	code		5059719	0					
ANR	5060919	CallExpression	"gx_default_put_icc ( & icc_pro , dev , gsLINKPROFILE )"		5059719	1					
ANR	5060920	Callee	gx_default_put_icc		5059719	0					
ANR	5060921	Identifier	gx_default_put_icc		5059719	0					
ANR	5060922	ArgumentList	& icc_pro		5059719	1					
ANR	5060923	Argument	& icc_pro		5059719	0					
ANR	5060924	UnaryOperationExpression	& icc_pro		5059719	0					
ANR	5060925	UnaryOperator	&		5059719	0					
ANR	5060926	Identifier	icc_pro		5059719	1					
ANR	5060927	Argument	dev		5059719	1					
ANR	5060928	Identifier	dev		5059719	0					
ANR	5060929	Argument	gsLINKPROFILE		5059719	2					
ANR	5060930	Identifier	gsLINKPROFILE		5059719	0					
ANR	5060931	PrimaryExpression	0		5059719	1					
ANR	5060932	CompoundStatement		241:75:8973:8973	5059719	1					
ANR	5060933	ExpressionStatement	ecode = code	1625:12:66299:66311	5059719	0	True				
ANR	5060934	AssignmentExpression	ecode = code		5059719	0		=			
ANR	5060935	Identifier	ecode		5059719	0					
ANR	5060936	Identifier	code		5059719	1					
ANR	5060937	ExpressionStatement	"param_signal_error ( plist , ""DeviceLinkProfile"" , ecode )"	1626:12:66325:66378	5059719	1	True				
ANR	5060938	CallExpression	"param_signal_error ( plist , ""DeviceLinkProfile"" , ecode )"		5059719	0					
ANR	5060939	Callee	param_signal_error		5059719	0					
ANR	5060940	Identifier	param_signal_error		5059719	0					
ANR	5060941	ArgumentList	plist		5059719	1					
ANR	5060942	Argument	plist		5059719	0					
ANR	5060943	Identifier	plist		5059719	0					
ANR	5060944	Argument	"""DeviceLinkProfile"""		5059719	1					
ANR	5060945	PrimaryExpression	"""DeviceLinkProfile"""		5059719	0					
ANR	5060946	Argument	ecode		5059719	2					
ANR	5060947	Identifier	ecode		5059719	0					
ANR	5060948	IfStatement	"if ( ( code = param_read_string ( plist , ""PostRenderProfile"" , & icc_pro ) ) != 1 )"		5059719	125					
ANR	5060949	Condition	"( code = param_read_string ( plist , ""PostRenderProfile"" , & icc_pro ) ) != 1"	1629:8:66404:66472	5059719	0	True				
ANR	5060950	EqualityExpression	"( code = param_read_string ( plist , ""PostRenderProfile"" , & icc_pro ) ) != 1"		5059719	0		!=			
ANR	5060951	AssignmentExpression	"code = param_read_string ( plist , ""PostRenderProfile"" , & icc_pro )"		5059719	0		=			
ANR	5060952	Identifier	code		5059719	0					
ANR	5060953	CallExpression	"param_read_string ( plist , ""PostRenderProfile"" , & icc_pro )"		5059719	1					
ANR	5060954	Callee	param_read_string		5059719	0					
ANR	5060955	Identifier	param_read_string		5059719	0					
ANR	5060956	ArgumentList	plist		5059719	1					
ANR	5060957	Argument	plist		5059719	0					
ANR	5060958	Identifier	plist		5059719	0					
ANR	5060959	Argument	"""PostRenderProfile"""		5059719	1					
ANR	5060960	PrimaryExpression	"""PostRenderProfile"""		5059719	0					
ANR	5060961	Argument	& icc_pro		5059719	2					
ANR	5060962	UnaryOperationExpression	& icc_pro		5059719	0					
ANR	5060963	UnaryOperator	&		5059719	0					
ANR	5060964	Identifier	icc_pro		5059719	1					
ANR	5060965	PrimaryExpression	1		5059719	1					
ANR	5060966	CompoundStatement		246:79:9163:9163	5059719	1					
ANR	5060967	IfStatement	"if ( ( code = gx_default_put_icc ( & icc_pro , dev , gsPRPROFILE ) ) < 0 )"		5059719	0					
ANR	5060968	Condition	"( code = gx_default_put_icc ( & icc_pro , dev , gsPRPROFILE ) ) < 0"	1630:12:66489:66547	5059719	0	True				
ANR	5060969	RelationalExpression	"( code = gx_default_put_icc ( & icc_pro , dev , gsPRPROFILE ) ) < 0"		5059719	0		<			
ANR	5060970	AssignmentExpression	"code = gx_default_put_icc ( & icc_pro , dev , gsPRPROFILE )"		5059719	0		=			
ANR	5060971	Identifier	code		5059719	0					
ANR	5060972	CallExpression	"gx_default_put_icc ( & icc_pro , dev , gsPRPROFILE )"		5059719	1					
ANR	5060973	Callee	gx_default_put_icc		5059719	0					
ANR	5060974	Identifier	gx_default_put_icc		5059719	0					
ANR	5060975	ArgumentList	& icc_pro		5059719	1					
ANR	5060976	Argument	& icc_pro		5059719	0					
ANR	5060977	UnaryOperationExpression	& icc_pro		5059719	0					
ANR	5060978	UnaryOperator	&		5059719	0					
ANR	5060979	Identifier	icc_pro		5059719	1					
ANR	5060980	Argument	dev		5059719	1					
ANR	5060981	Identifier	dev		5059719	0					
ANR	5060982	Argument	gsPRPROFILE		5059719	2					
ANR	5060983	Identifier	gsPRPROFILE		5059719	0					
ANR	5060984	PrimaryExpression	0		5059719	1					
ANR	5060985	CompoundStatement		247:73:9238:9238	5059719	1					
ANR	5060986	ExpressionStatement	ecode = code	1631:12:66564:66576	5059719	0	True				
ANR	5060987	AssignmentExpression	ecode = code		5059719	0		=			
ANR	5060988	Identifier	ecode		5059719	0					
ANR	5060989	Identifier	code		5059719	1					
ANR	5060990	ExpressionStatement	"param_signal_error ( plist , ""PostRenderProfile"" , ecode )"	1632:12:66590:66643	5059719	1	True				
ANR	5060991	CallExpression	"param_signal_error ( plist , ""PostRenderProfile"" , ecode )"		5059719	0					
ANR	5060992	Callee	param_signal_error		5059719	0					
ANR	5060993	Identifier	param_signal_error		5059719	0					
ANR	5060994	ArgumentList	plist		5059719	1					
ANR	5060995	Argument	plist		5059719	0					
ANR	5060996	Identifier	plist		5059719	0					
ANR	5060997	Argument	"""PostRenderProfile"""		5059719	1					
ANR	5060998	PrimaryExpression	"""PostRenderProfile"""		5059719	0					
ANR	5060999	Argument	ecode		5059719	2					
ANR	5061000	Identifier	ecode		5059719	0					
ANR	5061001	IfStatement	"if ( ( code = param_read_string ( plist , ""OutputICCProfile"" , & icc_pro ) ) != 1 )"		5059719	126					
ANR	5061002	Condition	"( code = param_read_string ( plist , ""OutputICCProfile"" , & icc_pro ) ) != 1"	1635:8:66669:66736	5059719	0	True				
ANR	5061003	EqualityExpression	"( code = param_read_string ( plist , ""OutputICCProfile"" , & icc_pro ) ) != 1"		5059719	0		!=			
ANR	5061004	AssignmentExpression	"code = param_read_string ( plist , ""OutputICCProfile"" , & icc_pro )"		5059719	0		=			
ANR	5061005	Identifier	code		5059719	0					
ANR	5061006	CallExpression	"param_read_string ( plist , ""OutputICCProfile"" , & icc_pro )"		5059719	1					
ANR	5061007	Callee	param_read_string		5059719	0					
ANR	5061008	Identifier	param_read_string		5059719	0					
ANR	5061009	ArgumentList	plist		5059719	1					
ANR	5061010	Argument	plist		5059719	0					
ANR	5061011	Identifier	plist		5059719	0					
ANR	5061012	Argument	"""OutputICCProfile"""		5059719	1					
ANR	5061013	PrimaryExpression	"""OutputICCProfile"""		5059719	0					
ANR	5061014	Argument	& icc_pro		5059719	2					
ANR	5061015	UnaryOperationExpression	& icc_pro		5059719	0					
ANR	5061016	UnaryOperator	&		5059719	0					
ANR	5061017	Identifier	icc_pro		5059719	1					
ANR	5061018	PrimaryExpression	1		5059719	1					
ANR	5061019	CompoundStatement		252:78:9427:9427	5059719	1					
ANR	5061020	IfStatement	"if ( ( code = gx_default_put_icc ( & icc_pro , dev , gsDEFAULTPROFILE ) ) < 0 )"		5059719	0					
ANR	5061021	Condition	"( code = gx_default_put_icc ( & icc_pro , dev , gsDEFAULTPROFILE ) ) < 0"	1636:12:66753:66816	5059719	0	True				
ANR	5061022	RelationalExpression	"( code = gx_default_put_icc ( & icc_pro , dev , gsDEFAULTPROFILE ) ) < 0"		5059719	0		<			
ANR	5061023	AssignmentExpression	"code = gx_default_put_icc ( & icc_pro , dev , gsDEFAULTPROFILE )"		5059719	0		=			
ANR	5061024	Identifier	code		5059719	0					
ANR	5061025	CallExpression	"gx_default_put_icc ( & icc_pro , dev , gsDEFAULTPROFILE )"		5059719	1					
ANR	5061026	Callee	gx_default_put_icc		5059719	0					
ANR	5061027	Identifier	gx_default_put_icc		5059719	0					
ANR	5061028	ArgumentList	& icc_pro		5059719	1					
ANR	5061029	Argument	& icc_pro		5059719	0					
ANR	5061030	UnaryOperationExpression	& icc_pro		5059719	0					
ANR	5061031	UnaryOperator	&		5059719	0					
ANR	5061032	Identifier	icc_pro		5059719	1					
ANR	5061033	Argument	dev		5059719	1					
ANR	5061034	Identifier	dev		5059719	0					
ANR	5061035	Argument	gsDEFAULTPROFILE		5059719	2					
ANR	5061036	Identifier	gsDEFAULTPROFILE		5059719	0					
ANR	5061037	PrimaryExpression	0		5059719	1					
ANR	5061038	CompoundStatement		253:78:9507:9507	5059719	1					
ANR	5061039	ExpressionStatement	ecode = code	1637:12:66833:66845	5059719	0	True				
ANR	5061040	AssignmentExpression	ecode = code		5059719	0		=			
ANR	5061041	Identifier	ecode		5059719	0					
ANR	5061042	Identifier	code		5059719	1					
ANR	5061043	ExpressionStatement	"param_signal_error ( plist , ""OutputICCProfile"" , ecode )"	1638:12:66859:66911	5059719	1	True				
ANR	5061044	CallExpression	"param_signal_error ( plist , ""OutputICCProfile"" , ecode )"		5059719	0					
ANR	5061045	Callee	param_signal_error		5059719	0					
ANR	5061046	Identifier	param_signal_error		5059719	0					
ANR	5061047	ArgumentList	plist		5059719	1					
ANR	5061048	Argument	plist		5059719	0					
ANR	5061049	Identifier	plist		5059719	0					
ANR	5061050	Argument	"""OutputICCProfile"""		5059719	1					
ANR	5061051	PrimaryExpression	"""OutputICCProfile"""		5059719	0					
ANR	5061052	Argument	ecode		5059719	2					
ANR	5061053	Identifier	ecode		5059719	0					
ANR	5061054	IfStatement	"if ( ( code = param_read_string ( plist , ""GraphicICCProfile"" , & icc_pro ) ) != 1 )"		5059719	127					
ANR	5061055	Condition	"( code = param_read_string ( plist , ""GraphicICCProfile"" , & icc_pro ) ) != 1"	1643:8:67055:67123	5059719	0	True				
ANR	5061056	EqualityExpression	"( code = param_read_string ( plist , ""GraphicICCProfile"" , & icc_pro ) ) != 1"		5059719	0		!=			
ANR	5061057	AssignmentExpression	"code = param_read_string ( plist , ""GraphicICCProfile"" , & icc_pro )"		5059719	0		=			
ANR	5061058	Identifier	code		5059719	0					
ANR	5061059	CallExpression	"param_read_string ( plist , ""GraphicICCProfile"" , & icc_pro )"		5059719	1					
ANR	5061060	Callee	param_read_string		5059719	0					
ANR	5061061	Identifier	param_read_string		5059719	0					
ANR	5061062	ArgumentList	plist		5059719	1					
ANR	5061063	Argument	plist		5059719	0					
ANR	5061064	Identifier	plist		5059719	0					
ANR	5061065	Argument	"""GraphicICCProfile"""		5059719	1					
ANR	5061066	PrimaryExpression	"""GraphicICCProfile"""		5059719	0					
ANR	5061067	Argument	& icc_pro		5059719	2					
ANR	5061068	UnaryOperationExpression	& icc_pro		5059719	0					
ANR	5061069	UnaryOperator	&		5059719	0					
ANR	5061070	Identifier	icc_pro		5059719	1					
ANR	5061071	PrimaryExpression	1		5059719	1					
ANR	5061072	CompoundStatement		260:79:9814:9814	5059719	1					
ANR	5061073	IfStatement	"if ( ( code = gx_default_put_icc ( & icc_pro , dev , gsGRAPHICPROFILE ) ) < 0 )"		5059719	0					
ANR	5061074	Condition	"( code = gx_default_put_icc ( & icc_pro , dev , gsGRAPHICPROFILE ) ) < 0"	1644:12:67140:67203	5059719	0	True				
ANR	5061075	RelationalExpression	"( code = gx_default_put_icc ( & icc_pro , dev , gsGRAPHICPROFILE ) ) < 0"		5059719	0		<			
ANR	5061076	AssignmentExpression	"code = gx_default_put_icc ( & icc_pro , dev , gsGRAPHICPROFILE )"		5059719	0		=			
ANR	5061077	Identifier	code		5059719	0					
ANR	5061078	CallExpression	"gx_default_put_icc ( & icc_pro , dev , gsGRAPHICPROFILE )"		5059719	1					
ANR	5061079	Callee	gx_default_put_icc		5059719	0					
ANR	5061080	Identifier	gx_default_put_icc		5059719	0					
ANR	5061081	ArgumentList	& icc_pro		5059719	1					
ANR	5061082	Argument	& icc_pro		5059719	0					
ANR	5061083	UnaryOperationExpression	& icc_pro		5059719	0					
ANR	5061084	UnaryOperator	&		5059719	0					
ANR	5061085	Identifier	icc_pro		5059719	1					
ANR	5061086	Argument	dev		5059719	1					
ANR	5061087	Identifier	dev		5059719	0					
ANR	5061088	Argument	gsGRAPHICPROFILE		5059719	2					
ANR	5061089	Identifier	gsGRAPHICPROFILE		5059719	0					
ANR	5061090	PrimaryExpression	0		5059719	1					
ANR	5061091	CompoundStatement		261:78:9894:9894	5059719	1					
ANR	5061092	ExpressionStatement	ecode = code	1645:12:67220:67232	5059719	0	True				
ANR	5061093	AssignmentExpression	ecode = code		5059719	0		=			
ANR	5061094	Identifier	ecode		5059719	0					
ANR	5061095	Identifier	code		5059719	1					
ANR	5061096	ExpressionStatement	"param_signal_error ( plist , ""GraphicICCProfile"" , ecode )"	1646:12:67246:67299	5059719	1	True				
ANR	5061097	CallExpression	"param_signal_error ( plist , ""GraphicICCProfile"" , ecode )"		5059719	0					
ANR	5061098	Callee	param_signal_error		5059719	0					
ANR	5061099	Identifier	param_signal_error		5059719	0					
ANR	5061100	ArgumentList	plist		5059719	1					
ANR	5061101	Argument	plist		5059719	0					
ANR	5061102	Identifier	plist		5059719	0					
ANR	5061103	Argument	"""GraphicICCProfile"""		5059719	1					
ANR	5061104	PrimaryExpression	"""GraphicICCProfile"""		5059719	0					
ANR	5061105	Argument	ecode		5059719	2					
ANR	5061106	Identifier	ecode		5059719	0					
ANR	5061107	IfStatement	"if ( ( code = param_read_string ( plist , ""ImageICCProfile"" , & icc_pro ) ) != 1 )"		5059719	128					
ANR	5061108	Condition	"( code = param_read_string ( plist , ""ImageICCProfile"" , & icc_pro ) ) != 1"	1649:8:67325:67391	5059719	0	True				
ANR	5061109	EqualityExpression	"( code = param_read_string ( plist , ""ImageICCProfile"" , & icc_pro ) ) != 1"		5059719	0		!=			
ANR	5061110	AssignmentExpression	"code = param_read_string ( plist , ""ImageICCProfile"" , & icc_pro )"		5059719	0		=			
ANR	5061111	Identifier	code		5059719	0					
ANR	5061112	CallExpression	"param_read_string ( plist , ""ImageICCProfile"" , & icc_pro )"		5059719	1					
ANR	5061113	Callee	param_read_string		5059719	0					
ANR	5061114	Identifier	param_read_string		5059719	0					
ANR	5061115	ArgumentList	plist		5059719	1					
ANR	5061116	Argument	plist		5059719	0					
ANR	5061117	Identifier	plist		5059719	0					
ANR	5061118	Argument	"""ImageICCProfile"""		5059719	1					
ANR	5061119	PrimaryExpression	"""ImageICCProfile"""		5059719	0					
ANR	5061120	Argument	& icc_pro		5059719	2					
ANR	5061121	UnaryOperationExpression	& icc_pro		5059719	0					
ANR	5061122	UnaryOperator	&		5059719	0					
ANR	5061123	Identifier	icc_pro		5059719	1					
ANR	5061124	PrimaryExpression	1		5059719	1					
ANR	5061125	CompoundStatement		266:77:10082:10082	5059719	1					
ANR	5061126	IfStatement	"if ( ( code = gx_default_put_icc ( & icc_pro , dev , gsIMAGEPROFILE ) ) < 0 )"		5059719	0					
ANR	5061127	Condition	"( code = gx_default_put_icc ( & icc_pro , dev , gsIMAGEPROFILE ) ) < 0"	1650:12:67408:67469	5059719	0	True				
ANR	5061128	RelationalExpression	"( code = gx_default_put_icc ( & icc_pro , dev , gsIMAGEPROFILE ) ) < 0"		5059719	0		<			
ANR	5061129	AssignmentExpression	"code = gx_default_put_icc ( & icc_pro , dev , gsIMAGEPROFILE )"		5059719	0		=			
ANR	5061130	Identifier	code		5059719	0					
ANR	5061131	CallExpression	"gx_default_put_icc ( & icc_pro , dev , gsIMAGEPROFILE )"		5059719	1					
ANR	5061132	Callee	gx_default_put_icc		5059719	0					
ANR	5061133	Identifier	gx_default_put_icc		5059719	0					
ANR	5061134	ArgumentList	& icc_pro		5059719	1					
ANR	5061135	Argument	& icc_pro		5059719	0					
ANR	5061136	UnaryOperationExpression	& icc_pro		5059719	0					
ANR	5061137	UnaryOperator	&		5059719	0					
ANR	5061138	Identifier	icc_pro		5059719	1					
ANR	5061139	Argument	dev		5059719	1					
ANR	5061140	Identifier	dev		5059719	0					
ANR	5061141	Argument	gsIMAGEPROFILE		5059719	2					
ANR	5061142	Identifier	gsIMAGEPROFILE		5059719	0					
ANR	5061143	PrimaryExpression	0		5059719	1					
ANR	5061144	CompoundStatement		267:76:10160:10160	5059719	1					
ANR	5061145	ExpressionStatement	ecode = code	1651:12:67486:67498	5059719	0	True				
ANR	5061146	AssignmentExpression	ecode = code		5059719	0		=			
ANR	5061147	Identifier	ecode		5059719	0					
ANR	5061148	Identifier	code		5059719	1					
ANR	5061149	ExpressionStatement	"param_signal_error ( plist , ""ImageICCProfile"" , ecode )"	1652:12:67512:67563	5059719	1	True				
ANR	5061150	CallExpression	"param_signal_error ( plist , ""ImageICCProfile"" , ecode )"		5059719	0					
ANR	5061151	Callee	param_signal_error		5059719	0					
ANR	5061152	Identifier	param_signal_error		5059719	0					
ANR	5061153	ArgumentList	plist		5059719	1					
ANR	5061154	Argument	plist		5059719	0					
ANR	5061155	Identifier	plist		5059719	0					
ANR	5061156	Argument	"""ImageICCProfile"""		5059719	1					
ANR	5061157	PrimaryExpression	"""ImageICCProfile"""		5059719	0					
ANR	5061158	Argument	ecode		5059719	2					
ANR	5061159	Identifier	ecode		5059719	0					
ANR	5061160	IfStatement	"if ( ( code = param_read_string ( plist , ""TextICCProfile"" , & icc_pro ) ) != 1 )"		5059719	129					
ANR	5061161	Condition	"( code = param_read_string ( plist , ""TextICCProfile"" , & icc_pro ) ) != 1"	1655:8:67589:67654	5059719	0	True				
ANR	5061162	EqualityExpression	"( code = param_read_string ( plist , ""TextICCProfile"" , & icc_pro ) ) != 1"		5059719	0		!=			
ANR	5061163	AssignmentExpression	"code = param_read_string ( plist , ""TextICCProfile"" , & icc_pro )"		5059719	0		=			
ANR	5061164	Identifier	code		5059719	0					
ANR	5061165	CallExpression	"param_read_string ( plist , ""TextICCProfile"" , & icc_pro )"		5059719	1					
ANR	5061166	Callee	param_read_string		5059719	0					
ANR	5061167	Identifier	param_read_string		5059719	0					
ANR	5061168	ArgumentList	plist		5059719	1					
ANR	5061169	Argument	plist		5059719	0					
ANR	5061170	Identifier	plist		5059719	0					
ANR	5061171	Argument	"""TextICCProfile"""		5059719	1					
ANR	5061172	PrimaryExpression	"""TextICCProfile"""		5059719	0					
ANR	5061173	Argument	& icc_pro		5059719	2					
ANR	5061174	UnaryOperationExpression	& icc_pro		5059719	0					
ANR	5061175	UnaryOperator	&		5059719	0					
ANR	5061176	Identifier	icc_pro		5059719	1					
ANR	5061177	PrimaryExpression	1		5059719	1					
ANR	5061178	CompoundStatement		272:76:10345:10345	5059719	1					
ANR	5061179	IfStatement	"if ( ( code = gx_default_put_icc ( & icc_pro , dev , gsTEXTPROFILE ) ) < 0 )"		5059719	0					
ANR	5061180	Condition	"( code = gx_default_put_icc ( & icc_pro , dev , gsTEXTPROFILE ) ) < 0"	1656:12:67671:67731	5059719	0	True				
ANR	5061181	RelationalExpression	"( code = gx_default_put_icc ( & icc_pro , dev , gsTEXTPROFILE ) ) < 0"		5059719	0		<			
ANR	5061182	AssignmentExpression	"code = gx_default_put_icc ( & icc_pro , dev , gsTEXTPROFILE )"		5059719	0		=			
ANR	5061183	Identifier	code		5059719	0					
ANR	5061184	CallExpression	"gx_default_put_icc ( & icc_pro , dev , gsTEXTPROFILE )"		5059719	1					
ANR	5061185	Callee	gx_default_put_icc		5059719	0					
ANR	5061186	Identifier	gx_default_put_icc		5059719	0					
ANR	5061187	ArgumentList	& icc_pro		5059719	1					
ANR	5061188	Argument	& icc_pro		5059719	0					
ANR	5061189	UnaryOperationExpression	& icc_pro		5059719	0					
ANR	5061190	UnaryOperator	&		5059719	0					
ANR	5061191	Identifier	icc_pro		5059719	1					
ANR	5061192	Argument	dev		5059719	1					
ANR	5061193	Identifier	dev		5059719	0					
ANR	5061194	Argument	gsTEXTPROFILE		5059719	2					
ANR	5061195	Identifier	gsTEXTPROFILE		5059719	0					
ANR	5061196	PrimaryExpression	0		5059719	1					
ANR	5061197	CompoundStatement		273:75:10422:10422	5059719	1					
ANR	5061198	ExpressionStatement	ecode = code	1657:12:67748:67760	5059719	0	True				
ANR	5061199	AssignmentExpression	ecode = code		5059719	0		=			
ANR	5061200	Identifier	ecode		5059719	0					
ANR	5061201	Identifier	code		5059719	1					
ANR	5061202	ExpressionStatement	"param_signal_error ( plist , ""TextICCProfile"" , ecode )"	1658:12:67774:67824	5059719	1	True				
ANR	5061203	CallExpression	"param_signal_error ( plist , ""TextICCProfile"" , ecode )"		5059719	0					
ANR	5061204	Callee	param_signal_error		5059719	0					
ANR	5061205	Identifier	param_signal_error		5059719	0					
ANR	5061206	ArgumentList	plist		5059719	1					
ANR	5061207	Argument	plist		5059719	0					
ANR	5061208	Identifier	plist		5059719	0					
ANR	5061209	Argument	"""TextICCProfile"""		5059719	1					
ANR	5061210	PrimaryExpression	"""TextICCProfile"""		5059719	0					
ANR	5061211	Argument	ecode		5059719	2					
ANR	5061212	Identifier	ecode		5059719	0					
ANR	5061213	IfStatement	"if ( ( code = param_read_string ( plist , ""ProofProfile"" , & icc_pro ) ) != 1 )"		5059719	130					
ANR	5061214	Condition	"( code = param_read_string ( plist , ""ProofProfile"" , & icc_pro ) ) != 1"	1661:8:67850:67913	5059719	0	True				
ANR	5061215	EqualityExpression	"( code = param_read_string ( plist , ""ProofProfile"" , & icc_pro ) ) != 1"		5059719	0		!=			
ANR	5061216	AssignmentExpression	"code = param_read_string ( plist , ""ProofProfile"" , & icc_pro )"		5059719	0		=			
ANR	5061217	Identifier	code		5059719	0					
ANR	5061218	CallExpression	"param_read_string ( plist , ""ProofProfile"" , & icc_pro )"		5059719	1					
ANR	5061219	Callee	param_read_string		5059719	0					
ANR	5061220	Identifier	param_read_string		5059719	0					
ANR	5061221	ArgumentList	plist		5059719	1					
ANR	5061222	Argument	plist		5059719	0					
ANR	5061223	Identifier	plist		5059719	0					
ANR	5061224	Argument	"""ProofProfile"""		5059719	1					
ANR	5061225	PrimaryExpression	"""ProofProfile"""		5059719	0					
ANR	5061226	Argument	& icc_pro		5059719	2					
ANR	5061227	UnaryOperationExpression	& icc_pro		5059719	0					
ANR	5061228	UnaryOperator	&		5059719	0					
ANR	5061229	Identifier	icc_pro		5059719	1					
ANR	5061230	PrimaryExpression	1		5059719	1					
ANR	5061231	CompoundStatement		278:74:10604:10604	5059719	1					
ANR	5061232	IfStatement	"if ( ( code = gx_default_put_icc ( & icc_pro , dev , gsPROOFPROFILE ) ) < 0 )"		5059719	0					
ANR	5061233	Condition	"( code = gx_default_put_icc ( & icc_pro , dev , gsPROOFPROFILE ) ) < 0"	1662:12:67930:67991	5059719	0	True				
ANR	5061234	RelationalExpression	"( code = gx_default_put_icc ( & icc_pro , dev , gsPROOFPROFILE ) ) < 0"		5059719	0		<			
ANR	5061235	AssignmentExpression	"code = gx_default_put_icc ( & icc_pro , dev , gsPROOFPROFILE )"		5059719	0		=			
ANR	5061236	Identifier	code		5059719	0					
ANR	5061237	CallExpression	"gx_default_put_icc ( & icc_pro , dev , gsPROOFPROFILE )"		5059719	1					
ANR	5061238	Callee	gx_default_put_icc		5059719	0					
ANR	5061239	Identifier	gx_default_put_icc		5059719	0					
ANR	5061240	ArgumentList	& icc_pro		5059719	1					
ANR	5061241	Argument	& icc_pro		5059719	0					
ANR	5061242	UnaryOperationExpression	& icc_pro		5059719	0					
ANR	5061243	UnaryOperator	&		5059719	0					
ANR	5061244	Identifier	icc_pro		5059719	1					
ANR	5061245	Argument	dev		5059719	1					
ANR	5061246	Identifier	dev		5059719	0					
ANR	5061247	Argument	gsPROOFPROFILE		5059719	2					
ANR	5061248	Identifier	gsPROOFPROFILE		5059719	0					
ANR	5061249	PrimaryExpression	0		5059719	1					
ANR	5061250	CompoundStatement		279:76:10682:10682	5059719	1					
ANR	5061251	ExpressionStatement	ecode = code	1663:12:68008:68020	5059719	0	True				
ANR	5061252	AssignmentExpression	ecode = code		5059719	0		=			
ANR	5061253	Identifier	ecode		5059719	0					
ANR	5061254	Identifier	code		5059719	1					
ANR	5061255	ExpressionStatement	"param_signal_error ( plist , ""ProofProfile"" , ecode )"	1664:12:68034:68082	5059719	1	True				
ANR	5061256	CallExpression	"param_signal_error ( plist , ""ProofProfile"" , ecode )"		5059719	0					
ANR	5061257	Callee	param_signal_error		5059719	0					
ANR	5061258	Identifier	param_signal_error		5059719	0					
ANR	5061259	ArgumentList	plist		5059719	1					
ANR	5061260	Argument	plist		5059719	0					
ANR	5061261	Identifier	plist		5059719	0					
ANR	5061262	Argument	"""ProofProfile"""		5059719	1					
ANR	5061263	PrimaryExpression	"""ProofProfile"""		5059719	0					
ANR	5061264	Argument	ecode		5059719	2					
ANR	5061265	Identifier	ecode		5059719	0					
ANR	5061266	IfStatement	"if ( ( code = param_read_string ( plist , ""BlendColorProfile"" , & icc_pro ) ) != 1 )"		5059719	131					
ANR	5061267	Condition	"( code = param_read_string ( plist , ""BlendColorProfile"" , & icc_pro ) ) != 1"	1667:8:68108:68176	5059719	0	True				
ANR	5061268	EqualityExpression	"( code = param_read_string ( plist , ""BlendColorProfile"" , & icc_pro ) ) != 1"		5059719	0		!=			
ANR	5061269	AssignmentExpression	"code = param_read_string ( plist , ""BlendColorProfile"" , & icc_pro )"		5059719	0		=			
ANR	5061270	Identifier	code		5059719	0					
ANR	5061271	CallExpression	"param_read_string ( plist , ""BlendColorProfile"" , & icc_pro )"		5059719	1					
ANR	5061272	Callee	param_read_string		5059719	0					
ANR	5061273	Identifier	param_read_string		5059719	0					
ANR	5061274	ArgumentList	plist		5059719	1					
ANR	5061275	Argument	plist		5059719	0					
ANR	5061276	Identifier	plist		5059719	0					
ANR	5061277	Argument	"""BlendColorProfile"""		5059719	1					
ANR	5061278	PrimaryExpression	"""BlendColorProfile"""		5059719	0					
ANR	5061279	Argument	& icc_pro		5059719	2					
ANR	5061280	UnaryOperationExpression	& icc_pro		5059719	0					
ANR	5061281	UnaryOperator	&		5059719	0					
ANR	5061282	Identifier	icc_pro		5059719	1					
ANR	5061283	PrimaryExpression	1		5059719	1					
ANR	5061284	CompoundStatement		284:79:10867:10867	5059719	1					
ANR	5061285	IfStatement	"if ( ( code = gx_default_put_icc ( & icc_pro , dev , gsBLENDPROFILE ) ) < 0 )"		5059719	0					
ANR	5061286	Condition	"( code = gx_default_put_icc ( & icc_pro , dev , gsBLENDPROFILE ) ) < 0"	1668:12:68193:68254	5059719	0	True				
ANR	5061287	RelationalExpression	"( code = gx_default_put_icc ( & icc_pro , dev , gsBLENDPROFILE ) ) < 0"		5059719	0		<			
ANR	5061288	AssignmentExpression	"code = gx_default_put_icc ( & icc_pro , dev , gsBLENDPROFILE )"		5059719	0		=			
ANR	5061289	Identifier	code		5059719	0					
ANR	5061290	CallExpression	"gx_default_put_icc ( & icc_pro , dev , gsBLENDPROFILE )"		5059719	1					
ANR	5061291	Callee	gx_default_put_icc		5059719	0					
ANR	5061292	Identifier	gx_default_put_icc		5059719	0					
ANR	5061293	ArgumentList	& icc_pro		5059719	1					
ANR	5061294	Argument	& icc_pro		5059719	0					
ANR	5061295	UnaryOperationExpression	& icc_pro		5059719	0					
ANR	5061296	UnaryOperator	&		5059719	0					
ANR	5061297	Identifier	icc_pro		5059719	1					
ANR	5061298	Argument	dev		5059719	1					
ANR	5061299	Identifier	dev		5059719	0					
ANR	5061300	Argument	gsBLENDPROFILE		5059719	2					
ANR	5061301	Identifier	gsBLENDPROFILE		5059719	0					
ANR	5061302	PrimaryExpression	0		5059719	1					
ANR	5061303	CompoundStatement		285:76:10945:10945	5059719	1					
ANR	5061304	ExpressionStatement	ecode = code	1669:12:68271:68283	5059719	0	True				
ANR	5061305	AssignmentExpression	ecode = code		5059719	0		=			
ANR	5061306	Identifier	ecode		5059719	0					
ANR	5061307	Identifier	code		5059719	1					
ANR	5061308	ExpressionStatement	"param_signal_error ( plist , ""BlendColorProfile"" , ecode )"	1670:12:68297:68350	5059719	1	True				
ANR	5061309	CallExpression	"param_signal_error ( plist , ""BlendColorProfile"" , ecode )"		5059719	0					
ANR	5061310	Callee	param_signal_error		5059719	0					
ANR	5061311	Identifier	param_signal_error		5059719	0					
ANR	5061312	ArgumentList	plist		5059719	1					
ANR	5061313	Argument	plist		5059719	0					
ANR	5061314	Identifier	plist		5059719	0					
ANR	5061315	Argument	"""BlendColorProfile"""		5059719	1					
ANR	5061316	PrimaryExpression	"""BlendColorProfile"""		5059719	0					
ANR	5061317	Argument	ecode		5059719	2					
ANR	5061318	Identifier	ecode		5059719	0					
ANR	5061319	IfStatement	"if ( ( code = param_read_int ( plist , ( param_name = ""RenderIntent"" ) , & ( rend_intent [ 0 ] ) ) ) < 0 )"		5059719	132					
ANR	5061320	Condition	"( code = param_read_int ( plist , ( param_name = ""RenderIntent"" ) , & ( rend_intent [ 0 ] ) ) ) < 0"	1673:8:68376:68511	5059719	0	True				
ANR	5061321	RelationalExpression	"( code = param_read_int ( plist , ( param_name = ""RenderIntent"" ) , & ( rend_intent [ 0 ] ) ) ) < 0"		5059719	0		<			
ANR	5061322	AssignmentExpression	"code = param_read_int ( plist , ( param_name = ""RenderIntent"" ) , & ( rend_intent [ 0 ] ) )"		5059719	0		=			
ANR	5061323	Identifier	code		5059719	0					
ANR	5061324	CallExpression	"param_read_int ( plist , ( param_name = ""RenderIntent"" ) , & ( rend_intent [ 0 ] ) )"		5059719	1					
ANR	5061325	Callee	param_read_int		5059719	0					
ANR	5061326	Identifier	param_read_int		5059719	0					
ANR	5061327	ArgumentList	plist		5059719	1					
ANR	5061328	Argument	plist		5059719	0					
ANR	5061329	Identifier	plist		5059719	0					
ANR	5061330	Argument	"param_name = ""RenderIntent"""		5059719	1					
ANR	5061331	AssignmentExpression	"param_name = ""RenderIntent"""		5059719	0		=			
ANR	5061332	Identifier	param_name		5059719	0					
ANR	5061333	PrimaryExpression	"""RenderIntent"""		5059719	1					
ANR	5061334	Argument	& ( rend_intent [ 0 ] )		5059719	2					
ANR	5061335	UnaryOperationExpression	& ( rend_intent [ 0 ] )		5059719	0					
ANR	5061336	UnaryOperator	&		5059719	0					
ANR	5061337	ArrayIndexing	rend_intent [ 0 ]		5059719	1					
ANR	5061338	Identifier	rend_intent		5059719	0					
ANR	5061339	PrimaryExpression	0		5059719	1					
ANR	5061340	PrimaryExpression	0		5059719	1					
ANR	5061341	CompoundStatement		291:77:11202:11202	5059719	1					
ANR	5061342	ExpressionStatement	ecode = code	1675:8:68524:68536	5059719	0	True				
ANR	5061343	AssignmentExpression	ecode = code		5059719	0		=			
ANR	5061344	Identifier	ecode		5059719	0					
ANR	5061345	Identifier	code		5059719	1					
ANR	5061346	ExpressionStatement	"param_signal_error ( plist , param_name , ecode )"	1676:8:68546:68590	5059719	1	True				
ANR	5061347	CallExpression	"param_signal_error ( plist , param_name , ecode )"		5059719	0					
ANR	5061348	Callee	param_signal_error		5059719	0					
ANR	5061349	Identifier	param_signal_error		5059719	0					
ANR	5061350	ArgumentList	plist		5059719	1					
ANR	5061351	Argument	plist		5059719	0					
ANR	5061352	Identifier	plist		5059719	0					
ANR	5061353	Argument	param_name		5059719	1					
ANR	5061354	Identifier	param_name		5059719	0					
ANR	5061355	Argument	ecode		5059719	2					
ANR	5061356	Identifier	ecode		5059719	0					
ANR	5061357	IfStatement	"if ( ( code = param_read_int ( plist , ( param_name = ""GraphicIntent"" ) , & ( rend_intent [ 1 ] ) ) ) < 0 )"		5059719	133					
ANR	5061358	Condition	"( code = param_read_int ( plist , ( param_name = ""GraphicIntent"" ) , & ( rend_intent [ 1 ] ) ) ) < 0"	1678:8:68606:68742	5059719	0	True				
ANR	5061359	RelationalExpression	"( code = param_read_int ( plist , ( param_name = ""GraphicIntent"" ) , & ( rend_intent [ 1 ] ) ) ) < 0"		5059719	0		<			
ANR	5061360	AssignmentExpression	"code = param_read_int ( plist , ( param_name = ""GraphicIntent"" ) , & ( rend_intent [ 1 ] ) )"		5059719	0		=			
ANR	5061361	Identifier	code		5059719	0					
ANR	5061362	CallExpression	"param_read_int ( plist , ( param_name = ""GraphicIntent"" ) , & ( rend_intent [ 1 ] ) )"		5059719	1					
ANR	5061363	Callee	param_read_int		5059719	0					
ANR	5061364	Identifier	param_read_int		5059719	0					
ANR	5061365	ArgumentList	plist		5059719	1					
ANR	5061366	Argument	plist		5059719	0					
ANR	5061367	Identifier	plist		5059719	0					
ANR	5061368	Argument	"param_name = ""GraphicIntent"""		5059719	1					
ANR	5061369	AssignmentExpression	"param_name = ""GraphicIntent"""		5059719	0		=			
ANR	5061370	Identifier	param_name		5059719	0					
ANR	5061371	PrimaryExpression	"""GraphicIntent"""		5059719	1					
ANR	5061372	Argument	& ( rend_intent [ 1 ] )		5059719	2					
ANR	5061373	UnaryOperationExpression	& ( rend_intent [ 1 ] )		5059719	0					
ANR	5061374	UnaryOperator	&		5059719	0					
ANR	5061375	ArrayIndexing	rend_intent [ 1 ]		5059719	1					
ANR	5061376	Identifier	rend_intent		5059719	0					
ANR	5061377	PrimaryExpression	1		5059719	1					
ANR	5061378	PrimaryExpression	0		5059719	1					
ANR	5061379	CompoundStatement		296:77:11433:11433	5059719	1					
ANR	5061380	ExpressionStatement	ecode = code	1680:8:68755:68767	5059719	0	True				
ANR	5061381	AssignmentExpression	ecode = code		5059719	0		=			
ANR	5061382	Identifier	ecode		5059719	0					
ANR	5061383	Identifier	code		5059719	1					
ANR	5061384	ExpressionStatement	"param_signal_error ( plist , param_name , ecode )"	1681:8:68777:68821	5059719	1	True				
ANR	5061385	CallExpression	"param_signal_error ( plist , param_name , ecode )"		5059719	0					
ANR	5061386	Callee	param_signal_error		5059719	0					
ANR	5061387	Identifier	param_signal_error		5059719	0					
ANR	5061388	ArgumentList	plist		5059719	1					
ANR	5061389	Argument	plist		5059719	0					
ANR	5061390	Identifier	plist		5059719	0					
ANR	5061391	Argument	param_name		5059719	1					
ANR	5061392	Identifier	param_name		5059719	0					
ANR	5061393	Argument	ecode		5059719	2					
ANR	5061394	Identifier	ecode		5059719	0					
ANR	5061395	IfStatement	"if ( ( code = param_read_int ( plist , ( param_name = ""ImageIntent"" ) , & ( rend_intent [ 2 ] ) ) ) < 0 )"		5059719	134					
ANR	5061396	Condition	"( code = param_read_int ( plist , ( param_name = ""ImageIntent"" ) , & ( rend_intent [ 2 ] ) ) ) < 0"	1683:8:68837:68971	5059719	0	True				
ANR	5061397	RelationalExpression	"( code = param_read_int ( plist , ( param_name = ""ImageIntent"" ) , & ( rend_intent [ 2 ] ) ) ) < 0"		5059719	0		<			
ANR	5061398	AssignmentExpression	"code = param_read_int ( plist , ( param_name = ""ImageIntent"" ) , & ( rend_intent [ 2 ] ) )"		5059719	0		=			
ANR	5061399	Identifier	code		5059719	0					
ANR	5061400	CallExpression	"param_read_int ( plist , ( param_name = ""ImageIntent"" ) , & ( rend_intent [ 2 ] ) )"		5059719	1					
ANR	5061401	Callee	param_read_int		5059719	0					
ANR	5061402	Identifier	param_read_int		5059719	0					
ANR	5061403	ArgumentList	plist		5059719	1					
ANR	5061404	Argument	plist		5059719	0					
ANR	5061405	Identifier	plist		5059719	0					
ANR	5061406	Argument	"param_name = ""ImageIntent"""		5059719	1					
ANR	5061407	AssignmentExpression	"param_name = ""ImageIntent"""		5059719	0		=			
ANR	5061408	Identifier	param_name		5059719	0					
ANR	5061409	PrimaryExpression	"""ImageIntent"""		5059719	1					
ANR	5061410	Argument	& ( rend_intent [ 2 ] )		5059719	2					
ANR	5061411	UnaryOperationExpression	& ( rend_intent [ 2 ] )		5059719	0					
ANR	5061412	UnaryOperator	&		5059719	0					
ANR	5061413	ArrayIndexing	rend_intent [ 2 ]		5059719	1					
ANR	5061414	Identifier	rend_intent		5059719	0					
ANR	5061415	PrimaryExpression	2		5059719	1					
ANR	5061416	PrimaryExpression	0		5059719	1					
ANR	5061417	CompoundStatement		301:77:11662:11662	5059719	1					
ANR	5061418	ExpressionStatement	ecode = code	1685:8:68984:68996	5059719	0	True				
ANR	5061419	AssignmentExpression	ecode = code		5059719	0		=			
ANR	5061420	Identifier	ecode		5059719	0					
ANR	5061421	Identifier	code		5059719	1					
ANR	5061422	ExpressionStatement	"param_signal_error ( plist , param_name , ecode )"	1686:8:69006:69050	5059719	1	True				
ANR	5061423	CallExpression	"param_signal_error ( plist , param_name , ecode )"		5059719	0					
ANR	5061424	Callee	param_signal_error		5059719	0					
ANR	5061425	Identifier	param_signal_error		5059719	0					
ANR	5061426	ArgumentList	plist		5059719	1					
ANR	5061427	Argument	plist		5059719	0					
ANR	5061428	Identifier	plist		5059719	0					
ANR	5061429	Argument	param_name		5059719	1					
ANR	5061430	Identifier	param_name		5059719	0					
ANR	5061431	Argument	ecode		5059719	2					
ANR	5061432	Identifier	ecode		5059719	0					
ANR	5061433	IfStatement	"if ( ( code = param_read_int ( plist , ( param_name = ""TextIntent"" ) , & ( rend_intent [ 3 ] ) ) ) < 0 )"		5059719	135					
ANR	5061434	Condition	"( code = param_read_int ( plist , ( param_name = ""TextIntent"" ) , & ( rend_intent [ 3 ] ) ) ) < 0"	1688:8:69066:69199	5059719	0	True				
ANR	5061435	RelationalExpression	"( code = param_read_int ( plist , ( param_name = ""TextIntent"" ) , & ( rend_intent [ 3 ] ) ) ) < 0"		5059719	0		<			
ANR	5061436	AssignmentExpression	"code = param_read_int ( plist , ( param_name = ""TextIntent"" ) , & ( rend_intent [ 3 ] ) )"		5059719	0		=			
ANR	5061437	Identifier	code		5059719	0					
ANR	5061438	CallExpression	"param_read_int ( plist , ( param_name = ""TextIntent"" ) , & ( rend_intent [ 3 ] ) )"		5059719	1					
ANR	5061439	Callee	param_read_int		5059719	0					
ANR	5061440	Identifier	param_read_int		5059719	0					
ANR	5061441	ArgumentList	plist		5059719	1					
ANR	5061442	Argument	plist		5059719	0					
ANR	5061443	Identifier	plist		5059719	0					
ANR	5061444	Argument	"param_name = ""TextIntent"""		5059719	1					
ANR	5061445	AssignmentExpression	"param_name = ""TextIntent"""		5059719	0		=			
ANR	5061446	Identifier	param_name		5059719	0					
ANR	5061447	PrimaryExpression	"""TextIntent"""		5059719	1					
ANR	5061448	Argument	& ( rend_intent [ 3 ] )		5059719	2					
ANR	5061449	UnaryOperationExpression	& ( rend_intent [ 3 ] )		5059719	0					
ANR	5061450	UnaryOperator	&		5059719	0					
ANR	5061451	ArrayIndexing	rend_intent [ 3 ]		5059719	1					
ANR	5061452	Identifier	rend_intent		5059719	0					
ANR	5061453	PrimaryExpression	3		5059719	1					
ANR	5061454	PrimaryExpression	0		5059719	1					
ANR	5061455	CompoundStatement		306:77:11890:11890	5059719	1					
ANR	5061456	ExpressionStatement	ecode = code	1690:8:69212:69224	5059719	0	True				
ANR	5061457	AssignmentExpression	ecode = code		5059719	0		=			
ANR	5061458	Identifier	ecode		5059719	0					
ANR	5061459	Identifier	code		5059719	1					
ANR	5061460	ExpressionStatement	"param_signal_error ( plist , param_name , ecode )"	1691:8:69234:69278	5059719	1	True				
ANR	5061461	CallExpression	"param_signal_error ( plist , param_name , ecode )"		5059719	0					
ANR	5061462	Callee	param_signal_error		5059719	0					
ANR	5061463	Identifier	param_signal_error		5059719	0					
ANR	5061464	ArgumentList	plist		5059719	1					
ANR	5061465	Argument	plist		5059719	0					
ANR	5061466	Identifier	plist		5059719	0					
ANR	5061467	Argument	param_name		5059719	1					
ANR	5061468	Identifier	param_name		5059719	0					
ANR	5061469	Argument	ecode		5059719	2					
ANR	5061470	Identifier	ecode		5059719	0					
ANR	5061471	IfStatement	"if ( ( code = param_read_int ( plist , ( param_name = ""BlackPtComp"" ) , & ( blackptcomp [ 0 ] ) ) ) < 0 )"		5059719	136					
ANR	5061472	Condition	"( code = param_read_int ( plist , ( param_name = ""BlackPtComp"" ) , & ( blackptcomp [ 0 ] ) ) ) < 0"	1693:8:69294:69428	5059719	0	True				
ANR	5061473	RelationalExpression	"( code = param_read_int ( plist , ( param_name = ""BlackPtComp"" ) , & ( blackptcomp [ 0 ] ) ) ) < 0"		5059719	0		<			
ANR	5061474	AssignmentExpression	"code = param_read_int ( plist , ( param_name = ""BlackPtComp"" ) , & ( blackptcomp [ 0 ] ) )"		5059719	0		=			
ANR	5061475	Identifier	code		5059719	0					
ANR	5061476	CallExpression	"param_read_int ( plist , ( param_name = ""BlackPtComp"" ) , & ( blackptcomp [ 0 ] ) )"		5059719	1					
ANR	5061477	Callee	param_read_int		5059719	0					
ANR	5061478	Identifier	param_read_int		5059719	0					
ANR	5061479	ArgumentList	plist		5059719	1					
ANR	5061480	Argument	plist		5059719	0					
ANR	5061481	Identifier	plist		5059719	0					
ANR	5061482	Argument	"param_name = ""BlackPtComp"""		5059719	1					
ANR	5061483	AssignmentExpression	"param_name = ""BlackPtComp"""		5059719	0		=			
ANR	5061484	Identifier	param_name		5059719	0					
ANR	5061485	PrimaryExpression	"""BlackPtComp"""		5059719	1					
ANR	5061486	Argument	& ( blackptcomp [ 0 ] )		5059719	2					
ANR	5061487	UnaryOperationExpression	& ( blackptcomp [ 0 ] )		5059719	0					
ANR	5061488	UnaryOperator	&		5059719	0					
ANR	5061489	ArrayIndexing	blackptcomp [ 0 ]		5059719	1					
ANR	5061490	Identifier	blackptcomp		5059719	0					
ANR	5061491	PrimaryExpression	0		5059719	1					
ANR	5061492	PrimaryExpression	0		5059719	1					
ANR	5061493	CompoundStatement		311:77:12119:12119	5059719	1					
ANR	5061494	ExpressionStatement	ecode = code	1695:8:69441:69453	5059719	0	True				
ANR	5061495	AssignmentExpression	ecode = code		5059719	0		=			
ANR	5061496	Identifier	ecode		5059719	0					
ANR	5061497	Identifier	code		5059719	1					
ANR	5061498	ExpressionStatement	"param_signal_error ( plist , param_name , ecode )"	1696:8:69463:69507	5059719	1	True				
ANR	5061499	CallExpression	"param_signal_error ( plist , param_name , ecode )"		5059719	0					
ANR	5061500	Callee	param_signal_error		5059719	0					
ANR	5061501	Identifier	param_signal_error		5059719	0					
ANR	5061502	ArgumentList	plist		5059719	1					
ANR	5061503	Argument	plist		5059719	0					
ANR	5061504	Identifier	plist		5059719	0					
ANR	5061505	Argument	param_name		5059719	1					
ANR	5061506	Identifier	param_name		5059719	0					
ANR	5061507	Argument	ecode		5059719	2					
ANR	5061508	Identifier	ecode		5059719	0					
ANR	5061509	IfStatement	"if ( ( code = param_read_int ( plist , ( param_name = ""GraphicBlackPt"" ) , & ( blackptcomp [ 1 ] ) ) ) < 0 )"		5059719	137					
ANR	5061510	Condition	"( code = param_read_int ( plist , ( param_name = ""GraphicBlackPt"" ) , & ( blackptcomp [ 1 ] ) ) ) < 0"	1698:8:69523:69660	5059719	0	True				
ANR	5061511	RelationalExpression	"( code = param_read_int ( plist , ( param_name = ""GraphicBlackPt"" ) , & ( blackptcomp [ 1 ] ) ) ) < 0"		5059719	0		<			
ANR	5061512	AssignmentExpression	"code = param_read_int ( plist , ( param_name = ""GraphicBlackPt"" ) , & ( blackptcomp [ 1 ] ) )"		5059719	0		=			
ANR	5061513	Identifier	code		5059719	0					
ANR	5061514	CallExpression	"param_read_int ( plist , ( param_name = ""GraphicBlackPt"" ) , & ( blackptcomp [ 1 ] ) )"		5059719	1					
ANR	5061515	Callee	param_read_int		5059719	0					
ANR	5061516	Identifier	param_read_int		5059719	0					
ANR	5061517	ArgumentList	plist		5059719	1					
ANR	5061518	Argument	plist		5059719	0					
ANR	5061519	Identifier	plist		5059719	0					
ANR	5061520	Argument	"param_name = ""GraphicBlackPt"""		5059719	1					
ANR	5061521	AssignmentExpression	"param_name = ""GraphicBlackPt"""		5059719	0		=			
ANR	5061522	Identifier	param_name		5059719	0					
ANR	5061523	PrimaryExpression	"""GraphicBlackPt"""		5059719	1					
ANR	5061524	Argument	& ( blackptcomp [ 1 ] )		5059719	2					
ANR	5061525	UnaryOperationExpression	& ( blackptcomp [ 1 ] )		5059719	0					
ANR	5061526	UnaryOperator	&		5059719	0					
ANR	5061527	ArrayIndexing	blackptcomp [ 1 ]		5059719	1					
ANR	5061528	Identifier	blackptcomp		5059719	0					
ANR	5061529	PrimaryExpression	1		5059719	1					
ANR	5061530	PrimaryExpression	0		5059719	1					
ANR	5061531	CompoundStatement		316:77:12351:12351	5059719	1					
ANR	5061532	ExpressionStatement	ecode = code	1700:8:69673:69685	5059719	0	True				
ANR	5061533	AssignmentExpression	ecode = code		5059719	0		=			
ANR	5061534	Identifier	ecode		5059719	0					
ANR	5061535	Identifier	code		5059719	1					
ANR	5061536	ExpressionStatement	"param_signal_error ( plist , param_name , ecode )"	1701:8:69695:69739	5059719	1	True				
ANR	5061537	CallExpression	"param_signal_error ( plist , param_name , ecode )"		5059719	0					
ANR	5061538	Callee	param_signal_error		5059719	0					
ANR	5061539	Identifier	param_signal_error		5059719	0					
ANR	5061540	ArgumentList	plist		5059719	1					
ANR	5061541	Argument	plist		5059719	0					
ANR	5061542	Identifier	plist		5059719	0					
ANR	5061543	Argument	param_name		5059719	1					
ANR	5061544	Identifier	param_name		5059719	0					
ANR	5061545	Argument	ecode		5059719	2					
ANR	5061546	Identifier	ecode		5059719	0					
ANR	5061547	IfStatement	"if ( ( code = param_read_int ( plist , ( param_name = ""ImageBlackPt"" ) , & ( blackptcomp [ 2 ] ) ) ) < 0 )"		5059719	138					
ANR	5061548	Condition	"( code = param_read_int ( plist , ( param_name = ""ImageBlackPt"" ) , & ( blackptcomp [ 2 ] ) ) ) < 0"	1703:8:69755:69890	5059719	0	True				
ANR	5061549	RelationalExpression	"( code = param_read_int ( plist , ( param_name = ""ImageBlackPt"" ) , & ( blackptcomp [ 2 ] ) ) ) < 0"		5059719	0		<			
ANR	5061550	AssignmentExpression	"code = param_read_int ( plist , ( param_name = ""ImageBlackPt"" ) , & ( blackptcomp [ 2 ] ) )"		5059719	0		=			
ANR	5061551	Identifier	code		5059719	0					
ANR	5061552	CallExpression	"param_read_int ( plist , ( param_name = ""ImageBlackPt"" ) , & ( blackptcomp [ 2 ] ) )"		5059719	1					
ANR	5061553	Callee	param_read_int		5059719	0					
ANR	5061554	Identifier	param_read_int		5059719	0					
ANR	5061555	ArgumentList	plist		5059719	1					
ANR	5061556	Argument	plist		5059719	0					
ANR	5061557	Identifier	plist		5059719	0					
ANR	5061558	Argument	"param_name = ""ImageBlackPt"""		5059719	1					
ANR	5061559	AssignmentExpression	"param_name = ""ImageBlackPt"""		5059719	0		=			
ANR	5061560	Identifier	param_name		5059719	0					
ANR	5061561	PrimaryExpression	"""ImageBlackPt"""		5059719	1					
ANR	5061562	Argument	& ( blackptcomp [ 2 ] )		5059719	2					
ANR	5061563	UnaryOperationExpression	& ( blackptcomp [ 2 ] )		5059719	0					
ANR	5061564	UnaryOperator	&		5059719	0					
ANR	5061565	ArrayIndexing	blackptcomp [ 2 ]		5059719	1					
ANR	5061566	Identifier	blackptcomp		5059719	0					
ANR	5061567	PrimaryExpression	2		5059719	1					
ANR	5061568	PrimaryExpression	0		5059719	1					
ANR	5061569	CompoundStatement		321:77:12581:12581	5059719	1					
ANR	5061570	ExpressionStatement	ecode = code	1705:8:69903:69915	5059719	0	True				
ANR	5061571	AssignmentExpression	ecode = code		5059719	0		=			
ANR	5061572	Identifier	ecode		5059719	0					
ANR	5061573	Identifier	code		5059719	1					
ANR	5061574	ExpressionStatement	"param_signal_error ( plist , param_name , ecode )"	1706:8:69925:69969	5059719	1	True				
ANR	5061575	CallExpression	"param_signal_error ( plist , param_name , ecode )"		5059719	0					
ANR	5061576	Callee	param_signal_error		5059719	0					
ANR	5061577	Identifier	param_signal_error		5059719	0					
ANR	5061578	ArgumentList	plist		5059719	1					
ANR	5061579	Argument	plist		5059719	0					
ANR	5061580	Identifier	plist		5059719	0					
ANR	5061581	Argument	param_name		5059719	1					
ANR	5061582	Identifier	param_name		5059719	0					
ANR	5061583	Argument	ecode		5059719	2					
ANR	5061584	Identifier	ecode		5059719	0					
ANR	5061585	IfStatement	"if ( ( code = param_read_int ( plist , ( param_name = ""TextBlackPt"" ) , & ( blackptcomp [ 3 ] ) ) ) < 0 )"		5059719	139					
ANR	5061586	Condition	"( code = param_read_int ( plist , ( param_name = ""TextBlackPt"" ) , & ( blackptcomp [ 3 ] ) ) ) < 0"	1708:8:69985:70119	5059719	0	True				
ANR	5061587	RelationalExpression	"( code = param_read_int ( plist , ( param_name = ""TextBlackPt"" ) , & ( blackptcomp [ 3 ] ) ) ) < 0"		5059719	0		<			
ANR	5061588	AssignmentExpression	"code = param_read_int ( plist , ( param_name = ""TextBlackPt"" ) , & ( blackptcomp [ 3 ] ) )"		5059719	0		=			
ANR	5061589	Identifier	code		5059719	0					
ANR	5061590	CallExpression	"param_read_int ( plist , ( param_name = ""TextBlackPt"" ) , & ( blackptcomp [ 3 ] ) )"		5059719	1					
ANR	5061591	Callee	param_read_int		5059719	0					
ANR	5061592	Identifier	param_read_int		5059719	0					
ANR	5061593	ArgumentList	plist		5059719	1					
ANR	5061594	Argument	plist		5059719	0					
ANR	5061595	Identifier	plist		5059719	0					
ANR	5061596	Argument	"param_name = ""TextBlackPt"""		5059719	1					
ANR	5061597	AssignmentExpression	"param_name = ""TextBlackPt"""		5059719	0		=			
ANR	5061598	Identifier	param_name		5059719	0					
ANR	5061599	PrimaryExpression	"""TextBlackPt"""		5059719	1					
ANR	5061600	Argument	& ( blackptcomp [ 3 ] )		5059719	2					
ANR	5061601	UnaryOperationExpression	& ( blackptcomp [ 3 ] )		5059719	0					
ANR	5061602	UnaryOperator	&		5059719	0					
ANR	5061603	ArrayIndexing	blackptcomp [ 3 ]		5059719	1					
ANR	5061604	Identifier	blackptcomp		5059719	0					
ANR	5061605	PrimaryExpression	3		5059719	1					
ANR	5061606	PrimaryExpression	0		5059719	1					
ANR	5061607	CompoundStatement		326:77:12810:12810	5059719	1					
ANR	5061608	ExpressionStatement	ecode = code	1710:8:70132:70144	5059719	0	True				
ANR	5061609	AssignmentExpression	ecode = code		5059719	0		=			
ANR	5061610	Identifier	ecode		5059719	0					
ANR	5061611	Identifier	code		5059719	1					
ANR	5061612	ExpressionStatement	"param_signal_error ( plist , param_name , ecode )"	1711:8:70154:70198	5059719	1	True				
ANR	5061613	CallExpression	"param_signal_error ( plist , param_name , ecode )"		5059719	0					
ANR	5061614	Callee	param_signal_error		5059719	0					
ANR	5061615	Identifier	param_signal_error		5059719	0					
ANR	5061616	ArgumentList	plist		5059719	1					
ANR	5061617	Argument	plist		5059719	0					
ANR	5061618	Identifier	plist		5059719	0					
ANR	5061619	Argument	param_name		5059719	1					
ANR	5061620	Identifier	param_name		5059719	0					
ANR	5061621	Argument	ecode		5059719	2					
ANR	5061622	Identifier	ecode		5059719	0					
ANR	5061623	IfStatement	"if ( ( code = param_read_int ( plist , ( param_name = ""KPreserve"" ) , & ( blackpreserve [ 0 ] ) ) ) < 0 )"		5059719	140					
ANR	5061624	Condition	"( code = param_read_int ( plist , ( param_name = ""KPreserve"" ) , & ( blackpreserve [ 0 ] ) ) ) < 0"	1713:8:70214:70348	5059719	0	True				
ANR	5061625	RelationalExpression	"( code = param_read_int ( plist , ( param_name = ""KPreserve"" ) , & ( blackpreserve [ 0 ] ) ) ) < 0"		5059719	0		<			
ANR	5061626	AssignmentExpression	"code = param_read_int ( plist , ( param_name = ""KPreserve"" ) , & ( blackpreserve [ 0 ] ) )"		5059719	0		=			
ANR	5061627	Identifier	code		5059719	0					
ANR	5061628	CallExpression	"param_read_int ( plist , ( param_name = ""KPreserve"" ) , & ( blackpreserve [ 0 ] ) )"		5059719	1					
ANR	5061629	Callee	param_read_int		5059719	0					
ANR	5061630	Identifier	param_read_int		5059719	0					
ANR	5061631	ArgumentList	plist		5059719	1					
ANR	5061632	Argument	plist		5059719	0					
ANR	5061633	Identifier	plist		5059719	0					
ANR	5061634	Argument	"param_name = ""KPreserve"""		5059719	1					
ANR	5061635	AssignmentExpression	"param_name = ""KPreserve"""		5059719	0		=			
ANR	5061636	Identifier	param_name		5059719	0					
ANR	5061637	PrimaryExpression	"""KPreserve"""		5059719	1					
ANR	5061638	Argument	& ( blackpreserve [ 0 ] )		5059719	2					
ANR	5061639	UnaryOperationExpression	& ( blackpreserve [ 0 ] )		5059719	0					
ANR	5061640	UnaryOperator	&		5059719	0					
ANR	5061641	ArrayIndexing	blackpreserve [ 0 ]		5059719	1					
ANR	5061642	Identifier	blackpreserve		5059719	0					
ANR	5061643	PrimaryExpression	0		5059719	1					
ANR	5061644	PrimaryExpression	0		5059719	1					
ANR	5061645	CompoundStatement		331:79:13039:13039	5059719	1					
ANR	5061646	ExpressionStatement	ecode = code	1715:8:70361:70373	5059719	0	True				
ANR	5061647	AssignmentExpression	ecode = code		5059719	0		=			
ANR	5061648	Identifier	ecode		5059719	0					
ANR	5061649	Identifier	code		5059719	1					
ANR	5061650	ExpressionStatement	"param_signal_error ( plist , param_name , ecode )"	1716:8:70383:70427	5059719	1	True				
ANR	5061651	CallExpression	"param_signal_error ( plist , param_name , ecode )"		5059719	0					
ANR	5061652	Callee	param_signal_error		5059719	0					
ANR	5061653	Identifier	param_signal_error		5059719	0					
ANR	5061654	ArgumentList	plist		5059719	1					
ANR	5061655	Argument	plist		5059719	0					
ANR	5061656	Identifier	plist		5059719	0					
ANR	5061657	Argument	param_name		5059719	1					
ANR	5061658	Identifier	param_name		5059719	0					
ANR	5061659	Argument	ecode		5059719	2					
ANR	5061660	Identifier	ecode		5059719	0					
ANR	5061661	IfStatement	"if ( ( code = param_read_int ( plist , ( param_name = ""GraphicKPreserve"" ) , & ( blackpreserve [ 1 ] ) ) ) < 0 )"		5059719	141					
ANR	5061662	Condition	"( code = param_read_int ( plist , ( param_name = ""GraphicKPreserve"" ) , & ( blackpreserve [ 1 ] ) ) ) < 0"	1718:8:70443:70584	5059719	0	True				
ANR	5061663	RelationalExpression	"( code = param_read_int ( plist , ( param_name = ""GraphicKPreserve"" ) , & ( blackpreserve [ 1 ] ) ) ) < 0"		5059719	0		<			
ANR	5061664	AssignmentExpression	"code = param_read_int ( plist , ( param_name = ""GraphicKPreserve"" ) , & ( blackpreserve [ 1 ] ) )"		5059719	0		=			
ANR	5061665	Identifier	code		5059719	0					
ANR	5061666	CallExpression	"param_read_int ( plist , ( param_name = ""GraphicKPreserve"" ) , & ( blackpreserve [ 1 ] ) )"		5059719	1					
ANR	5061667	Callee	param_read_int		5059719	0					
ANR	5061668	Identifier	param_read_int		5059719	0					
ANR	5061669	ArgumentList	plist		5059719	1					
ANR	5061670	Argument	plist		5059719	0					
ANR	5061671	Identifier	plist		5059719	0					
ANR	5061672	Argument	"param_name = ""GraphicKPreserve"""		5059719	1					
ANR	5061673	AssignmentExpression	"param_name = ""GraphicKPreserve"""		5059719	0		=			
ANR	5061674	Identifier	param_name		5059719	0					
ANR	5061675	PrimaryExpression	"""GraphicKPreserve"""		5059719	1					
ANR	5061676	Argument	& ( blackpreserve [ 1 ] )		5059719	2					
ANR	5061677	UnaryOperationExpression	& ( blackpreserve [ 1 ] )		5059719	0					
ANR	5061678	UnaryOperator	&		5059719	0					
ANR	5061679	ArrayIndexing	blackpreserve [ 1 ]		5059719	1					
ANR	5061680	Identifier	blackpreserve		5059719	0					
ANR	5061681	PrimaryExpression	1		5059719	1					
ANR	5061682	PrimaryExpression	0		5059719	1					
ANR	5061683	CompoundStatement		336:79:13275:13275	5059719	1					
ANR	5061684	ExpressionStatement	ecode = code	1720:8:70597:70609	5059719	0	True				
ANR	5061685	AssignmentExpression	ecode = code		5059719	0		=			
ANR	5061686	Identifier	ecode		5059719	0					
ANR	5061687	Identifier	code		5059719	1					
ANR	5061688	ExpressionStatement	"param_signal_error ( plist , param_name , ecode )"	1721:8:70619:70663	5059719	1	True				
ANR	5061689	CallExpression	"param_signal_error ( plist , param_name , ecode )"		5059719	0					
ANR	5061690	Callee	param_signal_error		5059719	0					
ANR	5061691	Identifier	param_signal_error		5059719	0					
ANR	5061692	ArgumentList	plist		5059719	1					
ANR	5061693	Argument	plist		5059719	0					
ANR	5061694	Identifier	plist		5059719	0					
ANR	5061695	Argument	param_name		5059719	1					
ANR	5061696	Identifier	param_name		5059719	0					
ANR	5061697	Argument	ecode		5059719	2					
ANR	5061698	Identifier	ecode		5059719	0					
ANR	5061699	IfStatement	"if ( ( code = param_read_int ( plist , ( param_name = ""ImageKPreserve"" ) , & ( blackpreserve [ 2 ] ) ) ) < 0 )"		5059719	142					
ANR	5061700	Condition	"( code = param_read_int ( plist , ( param_name = ""ImageKPreserve"" ) , & ( blackpreserve [ 2 ] ) ) ) < 0"	1723:8:70679:70818	5059719	0	True				
ANR	5061701	RelationalExpression	"( code = param_read_int ( plist , ( param_name = ""ImageKPreserve"" ) , & ( blackpreserve [ 2 ] ) ) ) < 0"		5059719	0		<			
ANR	5061702	AssignmentExpression	"code = param_read_int ( plist , ( param_name = ""ImageKPreserve"" ) , & ( blackpreserve [ 2 ] ) )"		5059719	0		=			
ANR	5061703	Identifier	code		5059719	0					
ANR	5061704	CallExpression	"param_read_int ( plist , ( param_name = ""ImageKPreserve"" ) , & ( blackpreserve [ 2 ] ) )"		5059719	1					
ANR	5061705	Callee	param_read_int		5059719	0					
ANR	5061706	Identifier	param_read_int		5059719	0					
ANR	5061707	ArgumentList	plist		5059719	1					
ANR	5061708	Argument	plist		5059719	0					
ANR	5061709	Identifier	plist		5059719	0					
ANR	5061710	Argument	"param_name = ""ImageKPreserve"""		5059719	1					
ANR	5061711	AssignmentExpression	"param_name = ""ImageKPreserve"""		5059719	0		=			
ANR	5061712	Identifier	param_name		5059719	0					
ANR	5061713	PrimaryExpression	"""ImageKPreserve"""		5059719	1					
ANR	5061714	Argument	& ( blackpreserve [ 2 ] )		5059719	2					
ANR	5061715	UnaryOperationExpression	& ( blackpreserve [ 2 ] )		5059719	0					
ANR	5061716	UnaryOperator	&		5059719	0					
ANR	5061717	ArrayIndexing	blackpreserve [ 2 ]		5059719	1					
ANR	5061718	Identifier	blackpreserve		5059719	0					
ANR	5061719	PrimaryExpression	2		5059719	1					
ANR	5061720	PrimaryExpression	0		5059719	1					
ANR	5061721	CompoundStatement		341:79:13509:13509	5059719	1					
ANR	5061722	ExpressionStatement	ecode = code	1725:8:70831:70843	5059719	0	True				
ANR	5061723	AssignmentExpression	ecode = code		5059719	0		=			
ANR	5061724	Identifier	ecode		5059719	0					
ANR	5061725	Identifier	code		5059719	1					
ANR	5061726	ExpressionStatement	"param_signal_error ( plist , param_name , ecode )"	1726:8:70853:70897	5059719	1	True				
ANR	5061727	CallExpression	"param_signal_error ( plist , param_name , ecode )"		5059719	0					
ANR	5061728	Callee	param_signal_error		5059719	0					
ANR	5061729	Identifier	param_signal_error		5059719	0					
ANR	5061730	ArgumentList	plist		5059719	1					
ANR	5061731	Argument	plist		5059719	0					
ANR	5061732	Identifier	plist		5059719	0					
ANR	5061733	Argument	param_name		5059719	1					
ANR	5061734	Identifier	param_name		5059719	0					
ANR	5061735	Argument	ecode		5059719	2					
ANR	5061736	Identifier	ecode		5059719	0					
ANR	5061737	IfStatement	"if ( ( code = param_read_int ( plist , ( param_name = ""TextKPreserve"" ) , & ( blackpreserve [ 3 ] ) ) ) < 0 )"		5059719	143					
ANR	5061738	Condition	"( code = param_read_int ( plist , ( param_name = ""TextKPreserve"" ) , & ( blackpreserve [ 3 ] ) ) ) < 0"	1728:8:70913:71051	5059719	0	True				
ANR	5061739	RelationalExpression	"( code = param_read_int ( plist , ( param_name = ""TextKPreserve"" ) , & ( blackpreserve [ 3 ] ) ) ) < 0"		5059719	0		<			
ANR	5061740	AssignmentExpression	"code = param_read_int ( plist , ( param_name = ""TextKPreserve"" ) , & ( blackpreserve [ 3 ] ) )"		5059719	0		=			
ANR	5061741	Identifier	code		5059719	0					
ANR	5061742	CallExpression	"param_read_int ( plist , ( param_name = ""TextKPreserve"" ) , & ( blackpreserve [ 3 ] ) )"		5059719	1					
ANR	5061743	Callee	param_read_int		5059719	0					
ANR	5061744	Identifier	param_read_int		5059719	0					
ANR	5061745	ArgumentList	plist		5059719	1					
ANR	5061746	Argument	plist		5059719	0					
ANR	5061747	Identifier	plist		5059719	0					
ANR	5061748	Argument	"param_name = ""TextKPreserve"""		5059719	1					
ANR	5061749	AssignmentExpression	"param_name = ""TextKPreserve"""		5059719	0		=			
ANR	5061750	Identifier	param_name		5059719	0					
ANR	5061751	PrimaryExpression	"""TextKPreserve"""		5059719	1					
ANR	5061752	Argument	& ( blackpreserve [ 3 ] )		5059719	2					
ANR	5061753	UnaryOperationExpression	& ( blackpreserve [ 3 ] )		5059719	0					
ANR	5061754	UnaryOperator	&		5059719	0					
ANR	5061755	ArrayIndexing	blackpreserve [ 3 ]		5059719	1					
ANR	5061756	Identifier	blackpreserve		5059719	0					
ANR	5061757	PrimaryExpression	3		5059719	1					
ANR	5061758	PrimaryExpression	0		5059719	1					
ANR	5061759	CompoundStatement		346:79:13742:13742	5059719	1					
ANR	5061760	ExpressionStatement	ecode = code	1730:8:71064:71076	5059719	0	True				
ANR	5061761	AssignmentExpression	ecode = code		5059719	0		=			
ANR	5061762	Identifier	ecode		5059719	0					
ANR	5061763	Identifier	code		5059719	1					
ANR	5061764	ExpressionStatement	"param_signal_error ( plist , param_name , ecode )"	1731:8:71086:71130	5059719	1	True				
ANR	5061765	CallExpression	"param_signal_error ( plist , param_name , ecode )"		5059719	0					
ANR	5061766	Callee	param_signal_error		5059719	0					
ANR	5061767	Identifier	param_signal_error		5059719	0					
ANR	5061768	ArgumentList	plist		5059719	1					
ANR	5061769	Argument	plist		5059719	0					
ANR	5061770	Identifier	plist		5059719	0					
ANR	5061771	Argument	param_name		5059719	1					
ANR	5061772	Identifier	param_name		5059719	0					
ANR	5061773	Argument	ecode		5059719	2					
ANR	5061774	Identifier	ecode		5059719	0					
ANR	5061775	IfStatement	"if ( ( code = param_read_int ( plist , ( param_name = ""ColorAccuracy"" ) , & color_accuracy ) ) < 0 )"		5059719	144					
ANR	5061776	Condition	"( code = param_read_int ( plist , ( param_name = ""ColorAccuracy"" ) , & color_accuracy ) ) < 0"	1733:8:71146:71284	5059719	0	True				
ANR	5061777	RelationalExpression	"( code = param_read_int ( plist , ( param_name = ""ColorAccuracy"" ) , & color_accuracy ) ) < 0"		5059719	0		<			
ANR	5061778	AssignmentExpression	"code = param_read_int ( plist , ( param_name = ""ColorAccuracy"" ) , & color_accuracy )"		5059719	0		=			
ANR	5061779	Identifier	code		5059719	0					
ANR	5061780	CallExpression	"param_read_int ( plist , ( param_name = ""ColorAccuracy"" ) , & color_accuracy )"		5059719	1					
ANR	5061781	Callee	param_read_int		5059719	0					
ANR	5061782	Identifier	param_read_int		5059719	0					
ANR	5061783	ArgumentList	plist		5059719	1					
ANR	5061784	Argument	plist		5059719	0					
ANR	5061785	Identifier	plist		5059719	0					
ANR	5061786	Argument	"param_name = ""ColorAccuracy"""		5059719	1					
ANR	5061787	AssignmentExpression	"param_name = ""ColorAccuracy"""		5059719	0		=			
ANR	5061788	Identifier	param_name		5059719	0					
ANR	5061789	PrimaryExpression	"""ColorAccuracy"""		5059719	1					
ANR	5061790	Argument	& color_accuracy		5059719	2					
ANR	5061791	UnaryOperationExpression	& color_accuracy		5059719	0					
ANR	5061792	UnaryOperator	&		5059719	0					
ANR	5061793	Identifier	color_accuracy		5059719	1					
ANR	5061794	PrimaryExpression	0		5059719	1					
ANR	5061795	CompoundStatement		351:79:13975:13975	5059719	1					
ANR	5061796	ExpressionStatement	ecode = code	1735:8:71297:71309	5059719	0	True				
ANR	5061797	AssignmentExpression	ecode = code		5059719	0		=			
ANR	5061798	Identifier	ecode		5059719	0					
ANR	5061799	Identifier	code		5059719	1					
ANR	5061800	ExpressionStatement	"param_signal_error ( plist , param_name , ecode )"	1736:8:71319:71363	5059719	1	True				
ANR	5061801	CallExpression	"param_signal_error ( plist , param_name , ecode )"		5059719	0					
ANR	5061802	Callee	param_signal_error		5059719	0					
ANR	5061803	Identifier	param_signal_error		5059719	0					
ANR	5061804	ArgumentList	plist		5059719	1					
ANR	5061805	Argument	plist		5059719	0					
ANR	5061806	Identifier	plist		5059719	0					
ANR	5061807	Argument	param_name		5059719	1					
ANR	5061808	Identifier	param_name		5059719	0					
ANR	5061809	Argument	ecode		5059719	2					
ANR	5061810	Identifier	ecode		5059719	0					
ANR	5061811	IfStatement	"if ( ( code = param_read_bool ( plist , ( param_name = ""DeviceGrayToK"" ) , & devicegraytok ) ) < 0 )"		5059719	145					
ANR	5061812	Condition	"( code = param_read_bool ( plist , ( param_name = ""DeviceGrayToK"" ) , & devicegraytok ) ) < 0"	1738:8:71379:71517	5059719	0	True				
ANR	5061813	RelationalExpression	"( code = param_read_bool ( plist , ( param_name = ""DeviceGrayToK"" ) , & devicegraytok ) ) < 0"		5059719	0		<			
ANR	5061814	AssignmentExpression	"code = param_read_bool ( plist , ( param_name = ""DeviceGrayToK"" ) , & devicegraytok )"		5059719	0		=			
ANR	5061815	Identifier	code		5059719	0					
ANR	5061816	CallExpression	"param_read_bool ( plist , ( param_name = ""DeviceGrayToK"" ) , & devicegraytok )"		5059719	1					
ANR	5061817	Callee	param_read_bool		5059719	0					
ANR	5061818	Identifier	param_read_bool		5059719	0					
ANR	5061819	ArgumentList	plist		5059719	1					
ANR	5061820	Argument	plist		5059719	0					
ANR	5061821	Identifier	plist		5059719	0					
ANR	5061822	Argument	"param_name = ""DeviceGrayToK"""		5059719	1					
ANR	5061823	AssignmentExpression	"param_name = ""DeviceGrayToK"""		5059719	0		=			
ANR	5061824	Identifier	param_name		5059719	0					
ANR	5061825	PrimaryExpression	"""DeviceGrayToK"""		5059719	1					
ANR	5061826	Argument	& devicegraytok		5059719	2					
ANR	5061827	UnaryOperationExpression	& devicegraytok		5059719	0					
ANR	5061828	UnaryOperator	&		5059719	0					
ANR	5061829	Identifier	devicegraytok		5059719	1					
ANR	5061830	PrimaryExpression	0		5059719	1					
ANR	5061831	CompoundStatement		356:78:14208:14208	5059719	1					
ANR	5061832	ExpressionStatement	ecode = code	1740:8:71530:71542	5059719	0	True				
ANR	5061833	AssignmentExpression	ecode = code		5059719	0		=			
ANR	5061834	Identifier	ecode		5059719	0					
ANR	5061835	Identifier	code		5059719	1					
ANR	5061836	ExpressionStatement	"param_signal_error ( plist , param_name , ecode )"	1741:8:71552:71596	5059719	1	True				
ANR	5061837	CallExpression	"param_signal_error ( plist , param_name , ecode )"		5059719	0					
ANR	5061838	Callee	param_signal_error		5059719	0					
ANR	5061839	Identifier	param_signal_error		5059719	0					
ANR	5061840	ArgumentList	plist		5059719	1					
ANR	5061841	Argument	plist		5059719	0					
ANR	5061842	Identifier	plist		5059719	0					
ANR	5061843	Argument	param_name		5059719	1					
ANR	5061844	Identifier	param_name		5059719	0					
ANR	5061845	Argument	ecode		5059719	2					
ANR	5061846	Identifier	ecode		5059719	0					
ANR	5061847	IfStatement	"if ( ( code = param_read_bool ( plist , ( param_name = ""GrayDetection"" ) , & graydetection ) ) < 0 )"		5059719	146					
ANR	5061848	Condition	"( code = param_read_bool ( plist , ( param_name = ""GrayDetection"" ) , & graydetection ) ) < 0"	1743:8:71612:71750	5059719	0	True				
ANR	5061849	RelationalExpression	"( code = param_read_bool ( plist , ( param_name = ""GrayDetection"" ) , & graydetection ) ) < 0"		5059719	0		<			
ANR	5061850	AssignmentExpression	"code = param_read_bool ( plist , ( param_name = ""GrayDetection"" ) , & graydetection )"		5059719	0		=			
ANR	5061851	Identifier	code		5059719	0					
ANR	5061852	CallExpression	"param_read_bool ( plist , ( param_name = ""GrayDetection"" ) , & graydetection )"		5059719	1					
ANR	5061853	Callee	param_read_bool		5059719	0					
ANR	5061854	Identifier	param_read_bool		5059719	0					
ANR	5061855	ArgumentList	plist		5059719	1					
ANR	5061856	Argument	plist		5059719	0					
ANR	5061857	Identifier	plist		5059719	0					
ANR	5061858	Argument	"param_name = ""GrayDetection"""		5059719	1					
ANR	5061859	AssignmentExpression	"param_name = ""GrayDetection"""		5059719	0		=			
ANR	5061860	Identifier	param_name		5059719	0					
ANR	5061861	PrimaryExpression	"""GrayDetection"""		5059719	1					
ANR	5061862	Argument	& graydetection		5059719	2					
ANR	5061863	UnaryOperationExpression	& graydetection		5059719	0					
ANR	5061864	UnaryOperator	&		5059719	0					
ANR	5061865	Identifier	graydetection		5059719	1					
ANR	5061866	PrimaryExpression	0		5059719	1					
ANR	5061867	CompoundStatement		361:78:14441:14441	5059719	1					
ANR	5061868	ExpressionStatement	ecode = code	1745:8:71763:71775	5059719	0	True				
ANR	5061869	AssignmentExpression	ecode = code		5059719	0		=			
ANR	5061870	Identifier	ecode		5059719	0					
ANR	5061871	Identifier	code		5059719	1					
ANR	5061872	ExpressionStatement	"param_signal_error ( plist , param_name , ecode )"	1746:8:71785:71829	5059719	1	True				
ANR	5061873	CallExpression	"param_signal_error ( plist , param_name , ecode )"		5059719	0					
ANR	5061874	Callee	param_signal_error		5059719	0					
ANR	5061875	Identifier	param_signal_error		5059719	0					
ANR	5061876	ArgumentList	plist		5059719	1					
ANR	5061877	Argument	plist		5059719	0					
ANR	5061878	Identifier	plist		5059719	0					
ANR	5061879	Argument	param_name		5059719	1					
ANR	5061880	Identifier	param_name		5059719	0					
ANR	5061881	Argument	ecode		5059719	2					
ANR	5061882	Identifier	ecode		5059719	0					
ANR	5061883	IfStatement	"if ( ( code = param_read_bool ( plist , ( param_name = ""UseFastColor"" ) , & usefastcolor ) ) < 0 )"		5059719	147					
ANR	5061884	Condition	"( code = param_read_bool ( plist , ( param_name = ""UseFastColor"" ) , & usefastcolor ) ) < 0"	1748:8:71845:71981	5059719	0	True				
ANR	5061885	RelationalExpression	"( code = param_read_bool ( plist , ( param_name = ""UseFastColor"" ) , & usefastcolor ) ) < 0"		5059719	0		<			
ANR	5061886	AssignmentExpression	"code = param_read_bool ( plist , ( param_name = ""UseFastColor"" ) , & usefastcolor )"		5059719	0		=			
ANR	5061887	Identifier	code		5059719	0					
ANR	5061888	CallExpression	"param_read_bool ( plist , ( param_name = ""UseFastColor"" ) , & usefastcolor )"		5059719	1					
ANR	5061889	Callee	param_read_bool		5059719	0					
ANR	5061890	Identifier	param_read_bool		5059719	0					
ANR	5061891	ArgumentList	plist		5059719	1					
ANR	5061892	Argument	plist		5059719	0					
ANR	5061893	Identifier	plist		5059719	0					
ANR	5061894	Argument	"param_name = ""UseFastColor"""		5059719	1					
ANR	5061895	AssignmentExpression	"param_name = ""UseFastColor"""		5059719	0		=			
ANR	5061896	Identifier	param_name		5059719	0					
ANR	5061897	PrimaryExpression	"""UseFastColor"""		5059719	1					
ANR	5061898	Argument	& usefastcolor		5059719	2					
ANR	5061899	UnaryOperationExpression	& usefastcolor		5059719	0					
ANR	5061900	UnaryOperator	&		5059719	0					
ANR	5061901	Identifier	usefastcolor		5059719	1					
ANR	5061902	PrimaryExpression	0		5059719	1					
ANR	5061903	CompoundStatement		366:77:14672:14672	5059719	1					
ANR	5061904	ExpressionStatement	ecode = code	1750:8:71994:72006	5059719	0	True				
ANR	5061905	AssignmentExpression	ecode = code		5059719	0		=			
ANR	5061906	Identifier	ecode		5059719	0					
ANR	5061907	Identifier	code		5059719	1					
ANR	5061908	ExpressionStatement	"param_signal_error ( plist , param_name , ecode )"	1751:8:72016:72060	5059719	1	True				
ANR	5061909	CallExpression	"param_signal_error ( plist , param_name , ecode )"		5059719	0					
ANR	5061910	Callee	param_signal_error		5059719	0					
ANR	5061911	Identifier	param_signal_error		5059719	0					
ANR	5061912	ArgumentList	plist		5059719	1					
ANR	5061913	Argument	plist		5059719	0					
ANR	5061914	Identifier	plist		5059719	0					
ANR	5061915	Argument	param_name		5059719	1					
ANR	5061916	Identifier	param_name		5059719	0					
ANR	5061917	Argument	ecode		5059719	2					
ANR	5061918	Identifier	ecode		5059719	0					
ANR	5061919	IfStatement	"if ( ( code = param_read_bool ( plist , ( param_name = ""SimulateOverprint"" ) , & sim_overprint ) ) < 0 )"		5059719	148					
ANR	5061920	Condition	"( code = param_read_bool ( plist , ( param_name = ""SimulateOverprint"" ) , & sim_overprint ) ) < 0"	1753:8:72076:72218	5059719	0	True				
ANR	5061921	RelationalExpression	"( code = param_read_bool ( plist , ( param_name = ""SimulateOverprint"" ) , & sim_overprint ) ) < 0"		5059719	0		<			
ANR	5061922	AssignmentExpression	"code = param_read_bool ( plist , ( param_name = ""SimulateOverprint"" ) , & sim_overprint )"		5059719	0		=			
ANR	5061923	Identifier	code		5059719	0					
ANR	5061924	CallExpression	"param_read_bool ( plist , ( param_name = ""SimulateOverprint"" ) , & sim_overprint )"		5059719	1					
ANR	5061925	Callee	param_read_bool		5059719	0					
ANR	5061926	Identifier	param_read_bool		5059719	0					
ANR	5061927	ArgumentList	plist		5059719	1					
ANR	5061928	Argument	plist		5059719	0					
ANR	5061929	Identifier	plist		5059719	0					
ANR	5061930	Argument	"param_name = ""SimulateOverprint"""		5059719	1					
ANR	5061931	AssignmentExpression	"param_name = ""SimulateOverprint"""		5059719	0		=			
ANR	5061932	Identifier	param_name		5059719	0					
ANR	5061933	PrimaryExpression	"""SimulateOverprint"""		5059719	1					
ANR	5061934	Argument	& sim_overprint		5059719	2					
ANR	5061935	UnaryOperationExpression	& sim_overprint		5059719	0					
ANR	5061936	UnaryOperator	&		5059719	0					
ANR	5061937	Identifier	sim_overprint		5059719	1					
ANR	5061938	PrimaryExpression	0		5059719	1					
ANR	5061939	CompoundStatement		371:78:14909:14909	5059719	1					
ANR	5061940	ExpressionStatement	ecode = code	1755:8:72231:72243	5059719	0	True				
ANR	5061941	AssignmentExpression	ecode = code		5059719	0		=			
ANR	5061942	Identifier	ecode		5059719	0					
ANR	5061943	Identifier	code		5059719	1					
ANR	5061944	ExpressionStatement	"param_signal_error ( plist , param_name , ecode )"	1756:8:72253:72297	5059719	1	True				
ANR	5061945	CallExpression	"param_signal_error ( plist , param_name , ecode )"		5059719	0					
ANR	5061946	Callee	param_signal_error		5059719	0					
ANR	5061947	Identifier	param_signal_error		5059719	0					
ANR	5061948	ArgumentList	plist		5059719	1					
ANR	5061949	Argument	plist		5059719	0					
ANR	5061950	Identifier	plist		5059719	0					
ANR	5061951	Argument	param_name		5059719	1					
ANR	5061952	Identifier	param_name		5059719	0					
ANR	5061953	Argument	ecode		5059719	2					
ANR	5061954	Identifier	ecode		5059719	0					
ANR	5061955	IfStatement	"if ( ( code = param_read_bool ( plist , ( param_name = ""PreBandThreshold"" ) , & prebandthreshold ) ) < 0 )"		5059719	149					
ANR	5061956	Condition	"( code = param_read_bool ( plist , ( param_name = ""PreBandThreshold"" ) , & prebandthreshold ) ) < 0"	1758:8:72313:72457	5059719	0	True				
ANR	5061957	RelationalExpression	"( code = param_read_bool ( plist , ( param_name = ""PreBandThreshold"" ) , & prebandthreshold ) ) < 0"		5059719	0		<			
ANR	5061958	AssignmentExpression	"code = param_read_bool ( plist , ( param_name = ""PreBandThreshold"" ) , & prebandthreshold )"		5059719	0		=			
ANR	5061959	Identifier	code		5059719	0					
ANR	5061960	CallExpression	"param_read_bool ( plist , ( param_name = ""PreBandThreshold"" ) , & prebandthreshold )"		5059719	1					
ANR	5061961	Callee	param_read_bool		5059719	0					
ANR	5061962	Identifier	param_read_bool		5059719	0					
ANR	5061963	ArgumentList	plist		5059719	1					
ANR	5061964	Argument	plist		5059719	0					
ANR	5061965	Identifier	plist		5059719	0					
ANR	5061966	Argument	"param_name = ""PreBandThreshold"""		5059719	1					
ANR	5061967	AssignmentExpression	"param_name = ""PreBandThreshold"""		5059719	0		=			
ANR	5061968	Identifier	param_name		5059719	0					
ANR	5061969	PrimaryExpression	"""PreBandThreshold"""		5059719	1					
ANR	5061970	Argument	& prebandthreshold		5059719	2					
ANR	5061971	UnaryOperationExpression	& prebandthreshold		5059719	0					
ANR	5061972	UnaryOperator	&		5059719	0					
ANR	5061973	Identifier	prebandthreshold		5059719	1					
ANR	5061974	PrimaryExpression	0		5059719	1					
ANR	5061975	CompoundStatement		376:81:15148:15148	5059719	1					
ANR	5061976	ExpressionStatement	ecode = code	1760:8:72470:72482	5059719	0	True				
ANR	5061977	AssignmentExpression	ecode = code		5059719	0		=			
ANR	5061978	Identifier	ecode		5059719	0					
ANR	5061979	Identifier	code		5059719	1					
ANR	5061980	ExpressionStatement	"param_signal_error ( plist , param_name , ecode )"	1761:8:72492:72536	5059719	1	True				
ANR	5061981	CallExpression	"param_signal_error ( plist , param_name , ecode )"		5059719	0					
ANR	5061982	Callee	param_signal_error		5059719	0					
ANR	5061983	Identifier	param_signal_error		5059719	0					
ANR	5061984	ArgumentList	plist		5059719	1					
ANR	5061985	Argument	plist		5059719	0					
ANR	5061986	Identifier	plist		5059719	0					
ANR	5061987	Argument	param_name		5059719	1					
ANR	5061988	Identifier	param_name		5059719	0					
ANR	5061989	Argument	ecode		5059719	2					
ANR	5061990	Identifier	ecode		5059719	0					
ANR	5061991	IfStatement	"if ( ( code = param_read_bool ( plist , ( param_name = ""UseCIEColor"" ) , & ucc ) ) < 0 )"		5059719	150					
ANR	5061992	Condition	"( code = param_read_bool ( plist , ( param_name = ""UseCIEColor"" ) , & ucc ) ) < 0"	1763:8:72552:72622	5059719	0	True				
ANR	5061993	RelationalExpression	"( code = param_read_bool ( plist , ( param_name = ""UseCIEColor"" ) , & ucc ) ) < 0"		5059719	0		<			
ANR	5061994	AssignmentExpression	"code = param_read_bool ( plist , ( param_name = ""UseCIEColor"" ) , & ucc )"		5059719	0		=			
ANR	5061995	Identifier	code		5059719	0					
ANR	5061996	CallExpression	"param_read_bool ( plist , ( param_name = ""UseCIEColor"" ) , & ucc )"		5059719	1					
ANR	5061997	Callee	param_read_bool		5059719	0					
ANR	5061998	Identifier	param_read_bool		5059719	0					
ANR	5061999	ArgumentList	plist		5059719	1					
ANR	5062000	Argument	plist		5059719	0					
ANR	5062001	Identifier	plist		5059719	0					
ANR	5062002	Argument	"param_name = ""UseCIEColor"""		5059719	1					
ANR	5062003	AssignmentExpression	"param_name = ""UseCIEColor"""		5059719	0		=			
ANR	5062004	Identifier	param_name		5059719	0					
ANR	5062005	PrimaryExpression	"""UseCIEColor"""		5059719	1					
ANR	5062006	Argument	& ucc		5059719	2					
ANR	5062007	UnaryOperationExpression	& ucc		5059719	0					
ANR	5062008	UnaryOperator	&		5059719	0					
ANR	5062009	Identifier	ucc		5059719	1					
ANR	5062010	PrimaryExpression	0		5059719	1					
ANR	5062011	CompoundStatement		380:81:15313:15313	5059719	1					
ANR	5062012	ExpressionStatement	ecode = code	1764:8:72635:72647	5059719	0	True				
ANR	5062013	AssignmentExpression	ecode = code		5059719	0		=			
ANR	5062014	Identifier	ecode		5059719	0					
ANR	5062015	Identifier	code		5059719	1					
ANR	5062016	ExpressionStatement	"param_signal_error ( plist , param_name , ecode )"	1765:8:72657:72701	5059719	1	True				
ANR	5062017	CallExpression	"param_signal_error ( plist , param_name , ecode )"		5059719	0					
ANR	5062018	Callee	param_signal_error		5059719	0					
ANR	5062019	Identifier	param_signal_error		5059719	0					
ANR	5062020	ArgumentList	plist		5059719	1					
ANR	5062021	Argument	plist		5059719	0					
ANR	5062022	Identifier	plist		5059719	0					
ANR	5062023	Argument	param_name		5059719	1					
ANR	5062024	Identifier	param_name		5059719	0					
ANR	5062025	Argument	ecode		5059719	2					
ANR	5062026	Identifier	ecode		5059719	0					
ANR	5062027	IfStatement	"if ( ( code = param_anti_alias_bits ( plist , ""TextAlphaBits"" , & tab ) ) < 0 )"		5059719	151					
ANR	5062028	Condition	"( code = param_anti_alias_bits ( plist , ""TextAlphaBits"" , & tab ) ) < 0"	1767:8:72717:72780	5059719	0	True				
ANR	5062029	RelationalExpression	"( code = param_anti_alias_bits ( plist , ""TextAlphaBits"" , & tab ) ) < 0"		5059719	0		<			
ANR	5062030	AssignmentExpression	"code = param_anti_alias_bits ( plist , ""TextAlphaBits"" , & tab )"		5059719	0		=			
ANR	5062031	Identifier	code		5059719	0					
ANR	5062032	CallExpression	"param_anti_alias_bits ( plist , ""TextAlphaBits"" , & tab )"		5059719	1					
ANR	5062033	Callee	param_anti_alias_bits		5059719	0					
ANR	5062034	Identifier	param_anti_alias_bits		5059719	0					
ANR	5062035	ArgumentList	plist		5059719	1					
ANR	5062036	Argument	plist		5059719	0					
ANR	5062037	Identifier	plist		5059719	0					
ANR	5062038	Argument	"""TextAlphaBits"""		5059719	1					
ANR	5062039	PrimaryExpression	"""TextAlphaBits"""		5059719	0					
ANR	5062040	Argument	& tab		5059719	2					
ANR	5062041	UnaryOperationExpression	& tab		5059719	0					
ANR	5062042	UnaryOperator	&		5059719	0					
ANR	5062043	Identifier	tab		5059719	1					
ANR	5062044	PrimaryExpression	0		5059719	1					
ANR	5062045	ExpressionStatement	ecode = code	1768:8:72791:72803	5059719	1	True				
ANR	5062046	AssignmentExpression	ecode = code		5059719	0		=			
ANR	5062047	Identifier	ecode		5059719	0					
ANR	5062048	Identifier	code		5059719	1					
ANR	5062049	IfStatement	"if ( ( code = param_anti_alias_bits ( plist , ""GraphicsAlphaBits"" , & gab ) ) < 0 )"		5059719	152					
ANR	5062050	Condition	"( code = param_anti_alias_bits ( plist , ""GraphicsAlphaBits"" , & gab ) ) < 0"	1769:8:72813:72880	5059719	0	True				
ANR	5062051	RelationalExpression	"( code = param_anti_alias_bits ( plist , ""GraphicsAlphaBits"" , & gab ) ) < 0"		5059719	0		<			
ANR	5062052	AssignmentExpression	"code = param_anti_alias_bits ( plist , ""GraphicsAlphaBits"" , & gab )"		5059719	0		=			
ANR	5062053	Identifier	code		5059719	0					
ANR	5062054	CallExpression	"param_anti_alias_bits ( plist , ""GraphicsAlphaBits"" , & gab )"		5059719	1					
ANR	5062055	Callee	param_anti_alias_bits		5059719	0					
ANR	5062056	Identifier	param_anti_alias_bits		5059719	0					
ANR	5062057	ArgumentList	plist		5059719	1					
ANR	5062058	Argument	plist		5059719	0					
ANR	5062059	Identifier	plist		5059719	0					
ANR	5062060	Argument	"""GraphicsAlphaBits"""		5059719	1					
ANR	5062061	PrimaryExpression	"""GraphicsAlphaBits"""		5059719	0					
ANR	5062062	Argument	& gab		5059719	2					
ANR	5062063	UnaryOperationExpression	& gab		5059719	0					
ANR	5062064	UnaryOperator	&		5059719	0					
ANR	5062065	Identifier	gab		5059719	1					
ANR	5062066	PrimaryExpression	0		5059719	1					
ANR	5062067	ExpressionStatement	ecode = code	1770:8:72891:72903	5059719	1	True				
ANR	5062068	AssignmentExpression	ecode = code		5059719	0		=			
ANR	5062069	Identifier	ecode		5059719	0					
ANR	5062070	Identifier	code		5059719	1					
ANR	5062071	IfStatement	"if ( ( code = param_read_bool ( plist , ""AntidropoutDownscaler"" , & use_antidropout ) ) < 0 )"		5059719	153					
ANR	5062072	Condition	"( code = param_read_bool ( plist , ""AntidropoutDownscaler"" , & use_antidropout ) ) < 0"	1771:8:72913:72990	5059719	0	True				
ANR	5062073	RelationalExpression	"( code = param_read_bool ( plist , ""AntidropoutDownscaler"" , & use_antidropout ) ) < 0"		5059719	0		<			
ANR	5062074	AssignmentExpression	"code = param_read_bool ( plist , ""AntidropoutDownscaler"" , & use_antidropout )"		5059719	0		=			
ANR	5062075	Identifier	code		5059719	0					
ANR	5062076	CallExpression	"param_read_bool ( plist , ""AntidropoutDownscaler"" , & use_antidropout )"		5059719	1					
ANR	5062077	Callee	param_read_bool		5059719	0					
ANR	5062078	Identifier	param_read_bool		5059719	0					
ANR	5062079	ArgumentList	plist		5059719	1					
ANR	5062080	Argument	plist		5059719	0					
ANR	5062081	Identifier	plist		5059719	0					
ANR	5062082	Argument	"""AntidropoutDownscaler"""		5059719	1					
ANR	5062083	PrimaryExpression	"""AntidropoutDownscaler"""		5059719	0					
ANR	5062084	Argument	& use_antidropout		5059719	2					
ANR	5062085	UnaryOperationExpression	& use_antidropout		5059719	0					
ANR	5062086	UnaryOperator	&		5059719	0					
ANR	5062087	Identifier	use_antidropout		5059719	1					
ANR	5062088	PrimaryExpression	0		5059719	1					
ANR	5062089	ExpressionStatement	ecode = code	1772:8:73001:73013	5059719	1	True				
ANR	5062090	AssignmentExpression	ecode = code		5059719	0		=			
ANR	5062091	Identifier	ecode		5059719	0					
ANR	5062092	Identifier	code		5059719	1					
ANR	5062093	IfStatement	"if ( ( code = param_read_int ( plist , ""MaxPatternBitmap"" , & mpbm ) ) < 0 )"		5059719	154					
ANR	5062094	Condition	"( code = param_read_int ( plist , ""MaxPatternBitmap"" , & mpbm ) ) < 0"	1773:8:73023:73083	5059719	0	True				
ANR	5062095	RelationalExpression	"( code = param_read_int ( plist , ""MaxPatternBitmap"" , & mpbm ) ) < 0"		5059719	0		<			
ANR	5062096	AssignmentExpression	"code = param_read_int ( plist , ""MaxPatternBitmap"" , & mpbm )"		5059719	0		=			
ANR	5062097	Identifier	code		5059719	0					
ANR	5062098	CallExpression	"param_read_int ( plist , ""MaxPatternBitmap"" , & mpbm )"		5059719	1					
ANR	5062099	Callee	param_read_int		5059719	0					
ANR	5062100	Identifier	param_read_int		5059719	0					
ANR	5062101	ArgumentList	plist		5059719	1					
ANR	5062102	Argument	plist		5059719	0					
ANR	5062103	Identifier	plist		5059719	0					
ANR	5062104	Argument	"""MaxPatternBitmap"""		5059719	1					
ANR	5062105	PrimaryExpression	"""MaxPatternBitmap"""		5059719	0					
ANR	5062106	Argument	& mpbm		5059719	2					
ANR	5062107	UnaryOperationExpression	& mpbm		5059719	0					
ANR	5062108	UnaryOperator	&		5059719	0					
ANR	5062109	Identifier	mpbm		5059719	1					
ANR	5062110	PrimaryExpression	0		5059719	1					
ANR	5062111	ExpressionStatement	ecode = code	1774:8:73094:73106	5059719	1	True				
ANR	5062112	AssignmentExpression	ecode = code		5059719	0		=			
ANR	5062113	Identifier	ecode		5059719	0					
ANR	5062114	Identifier	code		5059719	1					
ANR	5062115	IfStatement	"if ( ( code = param_read_int ( plist , ""InterpolateControl"" , & ic ) ) < 0 )"		5059719	155					
ANR	5062116	Condition	"( code = param_read_int ( plist , ""InterpolateControl"" , & ic ) ) < 0"	1775:8:73116:73176	5059719	0	True				
ANR	5062117	RelationalExpression	"( code = param_read_int ( plist , ""InterpolateControl"" , & ic ) ) < 0"		5059719	0		<			
ANR	5062118	AssignmentExpression	"code = param_read_int ( plist , ""InterpolateControl"" , & ic )"		5059719	0		=			
ANR	5062119	Identifier	code		5059719	0					
ANR	5062120	CallExpression	"param_read_int ( plist , ""InterpolateControl"" , & ic )"		5059719	1					
ANR	5062121	Callee	param_read_int		5059719	0					
ANR	5062122	Identifier	param_read_int		5059719	0					
ANR	5062123	ArgumentList	plist		5059719	1					
ANR	5062124	Argument	plist		5059719	0					
ANR	5062125	Identifier	plist		5059719	0					
ANR	5062126	Argument	"""InterpolateControl"""		5059719	1					
ANR	5062127	PrimaryExpression	"""InterpolateControl"""		5059719	0					
ANR	5062128	Argument	& ic		5059719	2					
ANR	5062129	UnaryOperationExpression	& ic		5059719	0					
ANR	5062130	UnaryOperator	&		5059719	0					
ANR	5062131	Identifier	ic		5059719	1					
ANR	5062132	PrimaryExpression	0		5059719	1					
ANR	5062133	ExpressionStatement	ecode = code	1776:8:73187:73199	5059719	1	True				
ANR	5062134	AssignmentExpression	ecode = code		5059719	0		=			
ANR	5062135	Identifier	ecode		5059719	0					
ANR	5062136	Identifier	code		5059719	1					
ANR	5062137	IfStatement	"if ( ( code = param_read_bool ( plist , ( param_name = ""PageUsesTransparency"" ) , & page_uses_transparency ) ) < 0 )"		5059719	156					
ANR	5062138	Condition	"( code = param_read_bool ( plist , ( param_name = ""PageUsesTransparency"" ) , & page_uses_transparency ) ) < 0"	1777:8:73209:73339	5059719	0	True				
ANR	5062139	RelationalExpression	"( code = param_read_bool ( plist , ( param_name = ""PageUsesTransparency"" ) , & page_uses_transparency ) ) < 0"		5059719	0		<			
ANR	5062140	AssignmentExpression	"code = param_read_bool ( plist , ( param_name = ""PageUsesTransparency"" ) , & page_uses_transparency )"		5059719	0		=			
ANR	5062141	Identifier	code		5059719	0					
ANR	5062142	CallExpression	"param_read_bool ( plist , ( param_name = ""PageUsesTransparency"" ) , & page_uses_transparency )"		5059719	1					
ANR	5062143	Callee	param_read_bool		5059719	0					
ANR	5062144	Identifier	param_read_bool		5059719	0					
ANR	5062145	ArgumentList	plist		5059719	1					
ANR	5062146	Argument	plist		5059719	0					
ANR	5062147	Identifier	plist		5059719	0					
ANR	5062148	Argument	"param_name = ""PageUsesTransparency"""		5059719	1					
ANR	5062149	AssignmentExpression	"param_name = ""PageUsesTransparency"""		5059719	0		=			
ANR	5062150	Identifier	param_name		5059719	0					
ANR	5062151	PrimaryExpression	"""PageUsesTransparency"""		5059719	1					
ANR	5062152	Argument	& page_uses_transparency		5059719	2					
ANR	5062153	UnaryOperationExpression	& page_uses_transparency		5059719	0					
ANR	5062154	UnaryOperator	&		5059719	0					
ANR	5062155	Identifier	page_uses_transparency		5059719	1					
ANR	5062156	PrimaryExpression	0		5059719	1					
ANR	5062157	CompoundStatement		395:63:16030:16030	5059719	1					
ANR	5062158	ExpressionStatement	ecode = code	1779:8:73352:73364	5059719	0	True				
ANR	5062159	AssignmentExpression	ecode = code		5059719	0		=			
ANR	5062160	Identifier	ecode		5059719	0					
ANR	5062161	Identifier	code		5059719	1					
ANR	5062162	ExpressionStatement	"param_signal_error ( plist , param_name , ecode )"	1780:8:73374:73418	5059719	1	True				
ANR	5062163	CallExpression	"param_signal_error ( plist , param_name , ecode )"		5059719	0					
ANR	5062164	Callee	param_signal_error		5059719	0					
ANR	5062165	Identifier	param_signal_error		5059719	0					
ANR	5062166	ArgumentList	plist		5059719	1					
ANR	5062167	Argument	plist		5059719	0					
ANR	5062168	Identifier	plist		5059719	0					
ANR	5062169	Argument	param_name		5059719	1					
ANR	5062170	Identifier	param_name		5059719	0					
ANR	5062171	Argument	ecode		5059719	2					
ANR	5062172	Identifier	ecode		5059719	0					
ANR	5062173	IfStatement	"if ( ( code = param_read_long ( plist , ""MaxBitmap"" , & sp . MaxBitmap ) ) < 0 )"		5059719	157					
ANR	5062174	Condition	"( code = param_read_long ( plist , ""MaxBitmap"" , & sp . MaxBitmap ) ) < 0"	1782:8:73434:73496	5059719	0	True				
ANR	5062175	RelationalExpression	"( code = param_read_long ( plist , ""MaxBitmap"" , & sp . MaxBitmap ) ) < 0"		5059719	0		<			
ANR	5062176	AssignmentExpression	"code = param_read_long ( plist , ""MaxBitmap"" , & sp . MaxBitmap )"		5059719	0		=			
ANR	5062177	Identifier	code		5059719	0					
ANR	5062178	CallExpression	"param_read_long ( plist , ""MaxBitmap"" , & sp . MaxBitmap )"		5059719	1					
ANR	5062179	Callee	param_read_long		5059719	0					
ANR	5062180	Identifier	param_read_long		5059719	0					
ANR	5062181	ArgumentList	plist		5059719	1					
ANR	5062182	Argument	plist		5059719	0					
ANR	5062183	Identifier	plist		5059719	0					
ANR	5062184	Argument	"""MaxBitmap"""		5059719	1					
ANR	5062185	PrimaryExpression	"""MaxBitmap"""		5059719	0					
ANR	5062186	Argument	& sp . MaxBitmap		5059719	2					
ANR	5062187	UnaryOperationExpression	& sp . MaxBitmap		5059719	0					
ANR	5062188	UnaryOperator	&		5059719	0					
ANR	5062189	MemberAccess	sp . MaxBitmap		5059719	1					
ANR	5062190	Identifier	sp		5059719	0					
ANR	5062191	Identifier	MaxBitmap		5059719	1					
ANR	5062192	PrimaryExpression	0		5059719	1					
ANR	5062193	ExpressionStatement	ecode = code	1783:8:73507:73519	5059719	1	True				
ANR	5062194	AssignmentExpression	ecode = code		5059719	0		=			
ANR	5062195	Identifier	ecode		5059719	0					
ANR	5062196	Identifier	code		5059719	1					
ANR	5062197	Statement	define	1785:1:73523:73528	5059719	158	True				
ANR	5062198	Statement	CHECK_PARAM_CASES	1785:8:73530:73546	5059719	159	True				
ANR	5062199	Statement	(	1785:25:73547:73547	5059719	160	True				
ANR	5062200	Statement	member	1785:26:73548:73553	5059719	161	True				
ANR	5062201	Statement	","	1785:32:73554:73554	5059719	162	True				
ANR	5062202	Statement	bad	1785:34:73556:73558	5059719	163	True				
ANR	5062203	Statement	","	1785:37:73559:73559	5059719	164	True				
ANR	5062204	Statement	label	1785:39:73561:73565	5059719	165	True				
ANR	5062205	Statement	)	1785:44:73566:73566	5059719	166	True				
ANR	5062206	Label	case 0 :	1786:4:73573:73579	5059719	167	True				
ANR	5062207	IfStatement	if ( ( sp . params_are_read_only ? sp . member != save_sp . member : bad ) )		5059719	168					
ANR	5062208	Condition	sp . params_are_read_only ? sp . member != save_sp . member : bad	1787:12:73594:73654	5059719	0	True				
ANR	5062209	ConditionalExpression	sp . params_are_read_only ? sp . member != save_sp . member : bad		5059719	0					
ANR	5062210	Condition	sp . params_are_read_only		5059719	0					
ANR	5062211	MemberAccess	sp . params_are_read_only		5059719	0					
ANR	5062212	Identifier	sp		5059719	0					
ANR	5062213	Identifier	params_are_read_only		5059719	1					
ANR	5062214	EqualityExpression	sp . member != save_sp . member		5059719	1		!=			
ANR	5062215	MemberAccess	sp . member		5059719	0					
ANR	5062216	Identifier	sp		5059719	0					
ANR	5062217	Identifier	member		5059719	1					
ANR	5062218	MemberAccess	save_sp . member		5059719	1					
ANR	5062219	Identifier	save_sp		5059719	0					
ANR	5062220	Identifier	member		5059719	1					
ANR	5062221	Identifier	bad		5059719	2					
ANR	5062222	ExpressionStatement	ecode = gs_error_rangecheck	1788:12:73670:73697	5059719	1	True				
ANR	5062223	AssignmentExpression	ecode = gs_error_rangecheck		5059719	0		=			
ANR	5062224	Identifier	ecode		5059719	0					
ANR	5062225	Identifier	gs_error_rangecheck		5059719	1					
ANR	5062226	ElseStatement	else		5059719	0					
ANR	5062227	BreakStatement	break ;	1790:12:73726:73731	5059719	0	True				
ANR	5062228	GotoStatement	goto label ;	1791:8:73742:73752	5059719	169	True				
ANR	5062229	Identifier	label		5059719	0					
ANR	5062230	Label	default :	1792:4:73759:73766	5059719	170	True				
ANR	5062231	Identifier	default		5059719	0					
ANR	5062232	ExpressionStatement	ecode = code	1793:8:73777:73789	5059719	171	True				
ANR	5062233	AssignmentExpression	ecode = code		5059719	0		=			
ANR	5062234	Identifier	ecode		5059719	0					
ANR	5062235	Identifier	code		5059719	1					
ANR	5062236	Label	label :	1794:0:73792:73797	5059719	172	True				
ANR	5062237	Identifier	label		5059719	0					
ANR	5062238	ExpressionStatement	"param_signal_error ( plist , param_name , ecode )"	1795:8:73808:73852	5059719	173	True				
ANR	5062239	CallExpression	"param_signal_error ( plist , param_name , ecode )"		5059719	0					
ANR	5062240	Callee	param_signal_error		5059719	0					
ANR	5062241	Identifier	param_signal_error		5059719	0					
ANR	5062242	ArgumentList	plist		5059719	1					
ANR	5062243	Argument	plist		5059719	0					
ANR	5062244	Identifier	plist		5059719	0					
ANR	5062245	Argument	param_name		5059719	1					
ANR	5062246	Identifier	param_name		5059719	0					
ANR	5062247	Argument	ecode		5059719	2					
ANR	5062248	Identifier	ecode		5059719	0					
ANR	5062249	Label	case 1 :	1796:4:73859:73865	5059719	174	True				
ANR	5062250	Statement	break	1797:8:73876:73880	5059719	175	True				
ANR	5062251	SwitchStatement	"switch ( code = param_read_long ( plist , ( param_name = ""BufferSpace"" ) , & sp . BufferSpace ) )"		5059719	176					
ANR	5062252	Condition	"code = param_read_long ( plist , ( param_name = ""BufferSpace"" ) , & sp . BufferSpace )"	1799:12:73895:73970	5059719	0	True				
ANR	5062253	AssignmentExpression	"code = param_read_long ( plist , ( param_name = ""BufferSpace"" ) , & sp . BufferSpace )"		5059719	0		=			
ANR	5062254	Identifier	code		5059719	0					
ANR	5062255	CallExpression	"param_read_long ( plist , ( param_name = ""BufferSpace"" ) , & sp . BufferSpace )"		5059719	1					
ANR	5062256	Callee	param_read_long		5059719	0					
ANR	5062257	Identifier	param_read_long		5059719	0					
ANR	5062258	ArgumentList	plist		5059719	1					
ANR	5062259	Argument	plist		5059719	0					
ANR	5062260	Identifier	plist		5059719	0					
ANR	5062261	Argument	"param_name = ""BufferSpace"""		5059719	1					
ANR	5062262	AssignmentExpression	"param_name = ""BufferSpace"""		5059719	0		=			
ANR	5062263	Identifier	param_name		5059719	0					
ANR	5062264	PrimaryExpression	"""BufferSpace"""		5059719	1					
ANR	5062265	Argument	& sp . BufferSpace		5059719	2					
ANR	5062266	UnaryOperationExpression	& sp . BufferSpace		5059719	0					
ANR	5062267	UnaryOperator	&		5059719	0					
ANR	5062268	MemberAccess	sp . BufferSpace		5059719	1					
ANR	5062269	Identifier	sp		5059719	0					
ANR	5062270	Identifier	BufferSpace		5059719	1					
ANR	5062271	CompoundStatement		416:90:16661:16661	5059719	1					
ANR	5062272	ExpressionStatement	"CHECK_PARAM_CASES ( BufferSpace , sp . BufferSpace < 10000 , bse )"	1800:8:73983:74042	5059719	0	True				
ANR	5062273	CallExpression	"CHECK_PARAM_CASES ( BufferSpace , sp . BufferSpace < 10000 , bse )"		5059719	0					
ANR	5062274	Callee	CHECK_PARAM_CASES		5059719	0					
ANR	5062275	Identifier	CHECK_PARAM_CASES		5059719	0					
ANR	5062276	ArgumentList	BufferSpace		5059719	1					
ANR	5062277	Argument	BufferSpace		5059719	0					
ANR	5062278	Identifier	BufferSpace		5059719	0					
ANR	5062279	Argument	sp . BufferSpace < 10000		5059719	1					
ANR	5062280	RelationalExpression	sp . BufferSpace < 10000		5059719	0		<			
ANR	5062281	MemberAccess	sp . BufferSpace		5059719	0					
ANR	5062282	Identifier	sp		5059719	0					
ANR	5062283	Identifier	BufferSpace		5059719	1					
ANR	5062284	PrimaryExpression	10000		5059719	1					
ANR	5062285	Argument	bse		5059719	2					
ANR	5062286	Identifier	bse		5059719	0					
ANR	5062287	SwitchStatement	"switch ( code = param_read_int ( plist , ( param_name = ""BandWidth"" ) , & sp . band . BandWidth ) )"		5059719	177					
ANR	5062288	Condition	"code = param_read_int ( plist , ( param_name = ""BandWidth"" ) , & sp . band . BandWidth )"	1803:12:74063:74138	5059719	0	True				
ANR	5062289	AssignmentExpression	"code = param_read_int ( plist , ( param_name = ""BandWidth"" ) , & sp . band . BandWidth )"		5059719	0		=			
ANR	5062290	Identifier	code		5059719	0					
ANR	5062291	CallExpression	"param_read_int ( plist , ( param_name = ""BandWidth"" ) , & sp . band . BandWidth )"		5059719	1					
ANR	5062292	Callee	param_read_int		5059719	0					
ANR	5062293	Identifier	param_read_int		5059719	0					
ANR	5062294	ArgumentList	plist		5059719	1					
ANR	5062295	Argument	plist		5059719	0					
ANR	5062296	Identifier	plist		5059719	0					
ANR	5062297	Argument	"param_name = ""BandWidth"""		5059719	1					
ANR	5062298	AssignmentExpression	"param_name = ""BandWidth"""		5059719	0		=			
ANR	5062299	Identifier	param_name		5059719	0					
ANR	5062300	PrimaryExpression	"""BandWidth"""		5059719	1					
ANR	5062301	Argument	& sp . band . BandWidth		5059719	2					
ANR	5062302	UnaryOperationExpression	& sp . band . BandWidth		5059719	0					
ANR	5062303	UnaryOperator	&		5059719	0					
ANR	5062304	MemberAccess	sp . band . BandWidth		5059719	1					
ANR	5062305	MemberAccess	sp . band		5059719	0					
ANR	5062306	Identifier	sp		5059719	0					
ANR	5062307	Identifier	band		5059719	1					
ANR	5062308	Identifier	BandWidth		5059719	1					
ANR	5062309	CompoundStatement		420:90:16829:16829	5059719	1					
ANR	5062310	ExpressionStatement	"CHECK_PARAM_CASES ( band . BandWidth , sp . band . BandWidth < 0 , bwe )"	1804:8:74151:74212	5059719	0	True				
ANR	5062311	CallExpression	"CHECK_PARAM_CASES ( band . BandWidth , sp . band . BandWidth < 0 , bwe )"		5059719	0					
ANR	5062312	Callee	CHECK_PARAM_CASES		5059719	0					
ANR	5062313	Identifier	CHECK_PARAM_CASES		5059719	0					
ANR	5062314	ArgumentList	band . BandWidth		5059719	1					
ANR	5062315	Argument	band . BandWidth		5059719	0					
ANR	5062316	MemberAccess	band . BandWidth		5059719	0					
ANR	5062317	Identifier	band		5059719	0					
ANR	5062318	Identifier	BandWidth		5059719	1					
ANR	5062319	Argument	sp . band . BandWidth < 0		5059719	1					
ANR	5062320	RelationalExpression	sp . band . BandWidth < 0		5059719	0		<			
ANR	5062321	MemberAccess	sp . band . BandWidth		5059719	0					
ANR	5062322	MemberAccess	sp . band		5059719	0					
ANR	5062323	Identifier	sp		5059719	0					
ANR	5062324	Identifier	band		5059719	1					
ANR	5062325	Identifier	BandWidth		5059719	1					
ANR	5062326	PrimaryExpression	0		5059719	1					
ANR	5062327	Argument	bwe		5059719	2					
ANR	5062328	Identifier	bwe		5059719	0					
ANR	5062329	SwitchStatement	"switch ( code = param_read_int ( plist , ( param_name = ""BandHeight"" ) , & sp . band . BandHeight ) )"		5059719	178					
ANR	5062330	Condition	"code = param_read_int ( plist , ( param_name = ""BandHeight"" ) , & sp . band . BandHeight )"	1807:12:74233:74310	5059719	0	True				
ANR	5062331	AssignmentExpression	"code = param_read_int ( plist , ( param_name = ""BandHeight"" ) , & sp . band . BandHeight )"		5059719	0		=			
ANR	5062332	Identifier	code		5059719	0					
ANR	5062333	CallExpression	"param_read_int ( plist , ( param_name = ""BandHeight"" ) , & sp . band . BandHeight )"		5059719	1					
ANR	5062334	Callee	param_read_int		5059719	0					
ANR	5062335	Identifier	param_read_int		5059719	0					
ANR	5062336	ArgumentList	plist		5059719	1					
ANR	5062337	Argument	plist		5059719	0					
ANR	5062338	Identifier	plist		5059719	0					
ANR	5062339	Argument	"param_name = ""BandHeight"""		5059719	1					
ANR	5062340	AssignmentExpression	"param_name = ""BandHeight"""		5059719	0		=			
ANR	5062341	Identifier	param_name		5059719	0					
ANR	5062342	PrimaryExpression	"""BandHeight"""		5059719	1					
ANR	5062343	Argument	& sp . band . BandHeight		5059719	2					
ANR	5062344	UnaryOperationExpression	& sp . band . BandHeight		5059719	0					
ANR	5062345	UnaryOperator	&		5059719	0					
ANR	5062346	MemberAccess	sp . band . BandHeight		5059719	1					
ANR	5062347	MemberAccess	sp . band		5059719	0					
ANR	5062348	Identifier	sp		5059719	0					
ANR	5062349	Identifier	band		5059719	1					
ANR	5062350	Identifier	BandHeight		5059719	1					
ANR	5062351	CompoundStatement		424:92:17001:17001	5059719	1					
ANR	5062352	ExpressionStatement	"CHECK_PARAM_CASES ( band . BandHeight , sp . band . BandHeight < 0 , bhe )"	1808:8:74323:74386	5059719	0	True				
ANR	5062353	CallExpression	"CHECK_PARAM_CASES ( band . BandHeight , sp . band . BandHeight < 0 , bhe )"		5059719	0					
ANR	5062354	Callee	CHECK_PARAM_CASES		5059719	0					
ANR	5062355	Identifier	CHECK_PARAM_CASES		5059719	0					
ANR	5062356	ArgumentList	band . BandHeight		5059719	1					
ANR	5062357	Argument	band . BandHeight		5059719	0					
ANR	5062358	MemberAccess	band . BandHeight		5059719	0					
ANR	5062359	Identifier	band		5059719	0					
ANR	5062360	Identifier	BandHeight		5059719	1					
ANR	5062361	Argument	sp . band . BandHeight < 0		5059719	1					
ANR	5062362	RelationalExpression	sp . band . BandHeight < 0		5059719	0		<			
ANR	5062363	MemberAccess	sp . band . BandHeight		5059719	0					
ANR	5062364	MemberAccess	sp . band		5059719	0					
ANR	5062365	Identifier	sp		5059719	0					
ANR	5062366	Identifier	band		5059719	1					
ANR	5062367	Identifier	BandHeight		5059719	1					
ANR	5062368	PrimaryExpression	0		5059719	1					
ANR	5062369	Argument	bhe		5059719	2					
ANR	5062370	Identifier	bhe		5059719	0					
ANR	5062371	SwitchStatement	"switch ( code = param_read_long ( plist , ( param_name = ""BandBufferSpace"" ) , & sp . band . BandBufferSpace ) )"		5059719	179					
ANR	5062372	Condition	"code = param_read_long ( plist , ( param_name = ""BandBufferSpace"" ) , & sp . band . BandBufferSpace )"	1811:12:74407:74495	5059719	0	True				
ANR	5062373	AssignmentExpression	"code = param_read_long ( plist , ( param_name = ""BandBufferSpace"" ) , & sp . band . BandBufferSpace )"		5059719	0		=			
ANR	5062374	Identifier	code		5059719	0					
ANR	5062375	CallExpression	"param_read_long ( plist , ( param_name = ""BandBufferSpace"" ) , & sp . band . BandBufferSpace )"		5059719	1					
ANR	5062376	Callee	param_read_long		5059719	0					
ANR	5062377	Identifier	param_read_long		5059719	0					
ANR	5062378	ArgumentList	plist		5059719	1					
ANR	5062379	Argument	plist		5059719	0					
ANR	5062380	Identifier	plist		5059719	0					
ANR	5062381	Argument	"param_name = ""BandBufferSpace"""		5059719	1					
ANR	5062382	AssignmentExpression	"param_name = ""BandBufferSpace"""		5059719	0		=			
ANR	5062383	Identifier	param_name		5059719	0					
ANR	5062384	PrimaryExpression	"""BandBufferSpace"""		5059719	1					
ANR	5062385	Argument	& sp . band . BandBufferSpace		5059719	2					
ANR	5062386	UnaryOperationExpression	& sp . band . BandBufferSpace		5059719	0					
ANR	5062387	UnaryOperator	&		5059719	0					
ANR	5062388	MemberAccess	sp . band . BandBufferSpace		5059719	1					
ANR	5062389	MemberAccess	sp . band		5059719	0					
ANR	5062390	Identifier	sp		5059719	0					
ANR	5062391	Identifier	band		5059719	1					
ANR	5062392	Identifier	BandBufferSpace		5059719	1					
ANR	5062393	CompoundStatement		428:103:17186:17186	5059719	1					
ANR	5062394	ExpressionStatement	"CHECK_PARAM_CASES ( band . BandBufferSpace , sp . band . BandBufferSpace < 0 , bbse )"	1812:8:74508:74582	5059719	0	True				
ANR	5062395	CallExpression	"CHECK_PARAM_CASES ( band . BandBufferSpace , sp . band . BandBufferSpace < 0 , bbse )"		5059719	0					
ANR	5062396	Callee	CHECK_PARAM_CASES		5059719	0					
ANR	5062397	Identifier	CHECK_PARAM_CASES		5059719	0					
ANR	5062398	ArgumentList	band . BandBufferSpace		5059719	1					
ANR	5062399	Argument	band . BandBufferSpace		5059719	0					
ANR	5062400	MemberAccess	band . BandBufferSpace		5059719	0					
ANR	5062401	Identifier	band		5059719	0					
ANR	5062402	Identifier	BandBufferSpace		5059719	1					
ANR	5062403	Argument	sp . band . BandBufferSpace < 0		5059719	1					
ANR	5062404	RelationalExpression	sp . band . BandBufferSpace < 0		5059719	0		<			
ANR	5062405	MemberAccess	sp . band . BandBufferSpace		5059719	0					
ANR	5062406	MemberAccess	sp . band		5059719	0					
ANR	5062407	Identifier	sp		5059719	0					
ANR	5062408	Identifier	band		5059719	1					
ANR	5062409	Identifier	BandBufferSpace		5059719	1					
ANR	5062410	PrimaryExpression	0		5059719	1					
ANR	5062411	Argument	bbse		5059719	2					
ANR	5062412	Identifier	bbse		5059719	0					
ANR	5062413	SwitchStatement	"switch ( code = param_read_bool ( plist , ( param_name = "".LockSafetyParams"" ) , & locksafe ) )"		5059719	180					
ANR	5062414	Condition	"code = param_read_bool ( plist , ( param_name = "".LockSafetyParams"" ) , & locksafe )"	1816:12:74604:74679	5059719	0	True				
ANR	5062415	AssignmentExpression	"code = param_read_bool ( plist , ( param_name = "".LockSafetyParams"" ) , & locksafe )"		5059719	0		=			
ANR	5062416	Identifier	code		5059719	0					
ANR	5062417	CallExpression	"param_read_bool ( plist , ( param_name = "".LockSafetyParams"" ) , & locksafe )"		5059719	1					
ANR	5062418	Callee	param_read_bool		5059719	0					
ANR	5062419	Identifier	param_read_bool		5059719	0					
ANR	5062420	ArgumentList	plist		5059719	1					
ANR	5062421	Argument	plist		5059719	0					
ANR	5062422	Identifier	plist		5059719	0					
ANR	5062423	Argument	"param_name = "".LockSafetyParams"""		5059719	1					
ANR	5062424	AssignmentExpression	"param_name = "".LockSafetyParams"""		5059719	0		=			
ANR	5062425	Identifier	param_name		5059719	0					
ANR	5062426	PrimaryExpression	""".LockSafetyParams"""		5059719	1					
ANR	5062427	Argument	& locksafe		5059719	2					
ANR	5062428	UnaryOperationExpression	& locksafe		5059719	0					
ANR	5062429	UnaryOperator	&		5059719	0					
ANR	5062430	Identifier	locksafe		5059719	1					
ANR	5062431	CompoundStatement		433:90:17370:17370	5059719	1					
ANR	5062432	Label	case 0 :	1817:8:74692:74698	5059719	0	True				
ANR	5062433	IfStatement	if ( dev -> LockSafetyParams && ! locksafe )		5059719	1					
ANR	5062434	Condition	dev -> LockSafetyParams && ! locksafe	1818:16:74716:74749	5059719	0	True				
ANR	5062435	AndExpression	dev -> LockSafetyParams && ! locksafe		5059719	0		&&			
ANR	5062436	PtrMemberAccess	dev -> LockSafetyParams		5059719	0					
ANR	5062437	Identifier	dev		5059719	0					
ANR	5062438	Identifier	LockSafetyParams		5059719	1					
ANR	5062439	UnaryOperationExpression	! locksafe		5059719	1					
ANR	5062440	UnaryOperator	!		5059719	0					
ANR	5062441	Identifier	locksafe		5059719	1					
ANR	5062442	ExpressionStatement	code = gs_note_error ( gs_error_invalidaccess )	1819:16:74768:74812	5059719	1	True				
ANR	5062443	AssignmentExpression	code = gs_note_error ( gs_error_invalidaccess )		5059719	0		=			
ANR	5062444	Identifier	code		5059719	0					
ANR	5062445	CallExpression	gs_note_error ( gs_error_invalidaccess )		5059719	1					
ANR	5062446	Callee	gs_note_error		5059719	0					
ANR	5062447	Identifier	gs_note_error		5059719	0					
ANR	5062448	ArgumentList	gs_error_invalidaccess		5059719	1					
ANR	5062449	Argument	gs_error_invalidaccess		5059719	0					
ANR	5062450	Identifier	gs_error_invalidaccess		5059719	0					
ANR	5062451	ElseStatement	else		5059719	0					
ANR	5062452	BreakStatement	break ;	1821:16:74847:74852	5059719	0	True				
ANR	5062453	Label	default :	1822:8:74862:74869	5059719	2	True				
ANR	5062454	Identifier	default		5059719	0					
ANR	5062455	ExpressionStatement	ecode = code	1823:12:74883:74895	5059719	3	True				
ANR	5062456	AssignmentExpression	ecode = code		5059719	0		=			
ANR	5062457	Identifier	ecode		5059719	0					
ANR	5062458	Identifier	code		5059719	1					
ANR	5062459	ExpressionStatement	"param_signal_error ( plist , param_name , ecode )"	1824:12:74909:74953	5059719	4	True				
ANR	5062460	CallExpression	"param_signal_error ( plist , param_name , ecode )"		5059719	0					
ANR	5062461	Callee	param_signal_error		5059719	0					
ANR	5062462	Identifier	param_signal_error		5059719	0					
ANR	5062463	ArgumentList	plist		5059719	1					
ANR	5062464	Argument	plist		5059719	0					
ANR	5062465	Identifier	plist		5059719	0					
ANR	5062466	Argument	param_name		5059719	1					
ANR	5062467	Identifier	param_name		5059719	0					
ANR	5062468	Argument	ecode		5059719	2					
ANR	5062469	Identifier	ecode		5059719	0					
ANR	5062470	Label	case 1 :	1825:8:74963:74969	5059719	5	True				
ANR	5062471	BreakStatement	break ;	1826:12:74983:74988	5059719	6	True				
ANR	5062472	Statement	define	1829:1:75062:75067	5059719	181	True				
ANR	5062473	Statement	IGNORE_INT_PARAM	1829:8:75069:75084	5059719	182	True				
ANR	5062474	Statement	(	1829:24:75085:75085	5059719	183	True				
ANR	5062475	Statement	pname	1829:25:75086:75090	5059719	184	True				
ANR	5062476	Statement	)	1829:30:75091:75091	5059719	185	True				
ANR	5062477	CompoundStatement		447:4:17786:17794	5059719	186					
ANR	5062478	IdentifierDeclStatement	int igni ;	1830:4:75098:75106	5059719	0	True				
ANR	5062479	IdentifierDecl	igni		5059719	0					
ANR	5062480	IdentifierDeclType	int		5059719	0					
ANR	5062481	Identifier	igni		5059719	1					
ANR	5062482	SwitchStatement	"switch ( code = param_read_int ( plist , ( param_name = pname ) , & igni ) )"		5059719	1					
ANR	5062483	Condition	"code = param_read_int ( plist , ( param_name = pname ) , & igni )"	1831:13:75122:75178	5059719	0	True				
ANR	5062484	AssignmentExpression	"code = param_read_int ( plist , ( param_name = pname ) , & igni )"		5059719	0		=			
ANR	5062485	Identifier	code		5059719	0					
ANR	5062486	CallExpression	"param_read_int ( plist , ( param_name = pname ) , & igni )"		5059719	1					
ANR	5062487	Callee	param_read_int		5059719	0					
ANR	5062488	Identifier	param_read_int		5059719	0					
ANR	5062489	ArgumentList	plist		5059719	1					
ANR	5062490	Argument	plist		5059719	0					
ANR	5062491	Identifier	plist		5059719	0					
ANR	5062492	Argument	param_name = pname		5059719	1					
ANR	5062493	AssignmentExpression	param_name = pname		5059719	0		=			
ANR	5062494	Identifier	param_name		5059719	0					
ANR	5062495	Identifier	pname		5059719	1					
ANR	5062496	Argument	& igni		5059719	2					
ANR	5062497	UnaryOperationExpression	& igni		5059719	0					
ANR	5062498	UnaryOperator	&		5059719	0					
ANR	5062499	Identifier	igni		5059719	1					
ANR	5062500	CompoundStatement		449:6:17877:17877	5059719	1					
ANR	5062501	Label	default :	1832:8:75191:75198	5059719	0	True				
ANR	5062502	Identifier	default		5059719	0					
ANR	5062503	ExpressionStatement	ecode = code	1833:10:75211:75223	5059719	1	True				
ANR	5062504	AssignmentExpression	ecode = code		5059719	0		=			
ANR	5062505	Identifier	ecode		5059719	0					
ANR	5062506	Identifier	code		5059719	1					
ANR	5062507	ExpressionStatement	"param_signal_error ( plist , param_name , ecode )"	1834:10:75236:75280	5059719	2	True				
ANR	5062508	CallExpression	"param_signal_error ( plist , param_name , ecode )"		5059719	0					
ANR	5062509	Callee	param_signal_error		5059719	0					
ANR	5062510	Identifier	param_signal_error		5059719	0					
ANR	5062511	ArgumentList	plist		5059719	1					
ANR	5062512	Argument	plist		5059719	0					
ANR	5062513	Identifier	plist		5059719	0					
ANR	5062514	Argument	param_name		5059719	1					
ANR	5062515	Identifier	param_name		5059719	0					
ANR	5062516	Argument	ecode		5059719	2					
ANR	5062517	Identifier	ecode		5059719	0					
ANR	5062518	Label	case 0 :	1835:8:75291:75297	5059719	3	True				
ANR	5062519	Label	case 1 :	1836:8:75308:75314	5059719	4	True				
ANR	5062520	BreakStatement	break ;	1837:10:75327:75332	5059719	5	True				
ANR	5062521	Statement	IGNORE_INT_PARAM	1840:4:75352:75367	5059719	187	True				
ANR	5062522	Statement	(	1840:20:75368:75368	5059719	188	True				
ANR	5062523	Statement	"""%MediaSource"""	1840:21:75369:75382	5059719	189	True				
ANR	5062524	Statement	)	1840:35:75383:75383	5059719	190	True				
ANR	5062525	Statement	IGNORE_INT_PARAM	1841:8:75393:75408	5059719	191	True				
ANR	5062526	Statement	(	1841:24:75409:75409	5059719	192	True				
ANR	5062527	Statement	"""%MediaDestination"""	1841:25:75410:75428	5059719	193	True				
ANR	5062528	Statement	)	1841:44:75429:75429	5059719	194	True				
ANR	5062529	SwitchStatement	"switch ( code = param_read_float_array ( plist , ( param_name = ""ImagingBBox"" ) , & ibba ) )"		5059719	195					
ANR	5062530	Condition	"code = param_read_float_array ( plist , ( param_name = ""ImagingBBox"" ) , & ibba )"	1842:16:75447:75519	5059719	0	True				
ANR	5062531	AssignmentExpression	"code = param_read_float_array ( plist , ( param_name = ""ImagingBBox"" ) , & ibba )"		5059719	0		=			
ANR	5062532	Identifier	code		5059719	0					
ANR	5062533	CallExpression	"param_read_float_array ( plist , ( param_name = ""ImagingBBox"" ) , & ibba )"		5059719	1					
ANR	5062534	Callee	param_read_float_array		5059719	0					
ANR	5062535	Identifier	param_read_float_array		5059719	0					
ANR	5062536	ArgumentList	plist		5059719	1					
ANR	5062537	Argument	plist		5059719	0					
ANR	5062538	Identifier	plist		5059719	0					
ANR	5062539	Argument	"param_name = ""ImagingBBox"""		5059719	1					
ANR	5062540	AssignmentExpression	"param_name = ""ImagingBBox"""		5059719	0		=			
ANR	5062541	Identifier	param_name		5059719	0					
ANR	5062542	PrimaryExpression	"""ImagingBBox"""		5059719	1					
ANR	5062543	Argument	& ibba		5059719	2					
ANR	5062544	UnaryOperationExpression	& ibba		5059719	0					
ANR	5062545	UnaryOperator	&		5059719	0					
ANR	5062546	Identifier	ibba		5059719	1					
ANR	5062547	CompoundStatement		459:91:18210:18210	5059719	1					
ANR	5062548	Label	case 0 :	1843:8:75532:75538	5059719	0	True				
ANR	5062549	IfStatement	if ( ibba . size != 4 || ibba . data [ 2 ] < ibba . data [ 0 ] || ibba . data [ 3 ] < ibba . data [ 1 ] )		5059719	1					
ANR	5062550	Condition	ibba . size != 4 || ibba . data [ 2 ] < ibba . data [ 0 ] || ibba . data [ 3 ] < ibba . data [ 1 ]	1844:16:75556:75647	5059719	0	True				
ANR	5062551	OrExpression	ibba . size != 4 || ibba . data [ 2 ] < ibba . data [ 0 ] || ibba . data [ 3 ] < ibba . data [ 1 ]		5059719	0		||			
ANR	5062552	EqualityExpression	ibba . size != 4		5059719	0		!=			
ANR	5062553	MemberAccess	ibba . size		5059719	0					
ANR	5062554	Identifier	ibba		5059719	0					
ANR	5062555	Identifier	size		5059719	1					
ANR	5062556	PrimaryExpression	4		5059719	1					
ANR	5062557	OrExpression	ibba . data [ 2 ] < ibba . data [ 0 ] || ibba . data [ 3 ] < ibba . data [ 1 ]		5059719	1		||			
ANR	5062558	RelationalExpression	ibba . data [ 2 ] < ibba . data [ 0 ]		5059719	0		<			
ANR	5062559	ArrayIndexing	ibba . data [ 2 ]		5059719	0					
ANR	5062560	MemberAccess	ibba . data		5059719	0					
ANR	5062561	Identifier	ibba		5059719	0					
ANR	5062562	Identifier	data		5059719	1					
ANR	5062563	PrimaryExpression	2		5059719	1					
ANR	5062564	ArrayIndexing	ibba . data [ 0 ]		5059719	1					
ANR	5062565	MemberAccess	ibba . data		5059719	0					
ANR	5062566	Identifier	ibba		5059719	0					
ANR	5062567	Identifier	data		5059719	1					
ANR	5062568	PrimaryExpression	0		5059719	1					
ANR	5062569	RelationalExpression	ibba . data [ 3 ] < ibba . data [ 1 ]		5059719	1		<			
ANR	5062570	ArrayIndexing	ibba . data [ 3 ]		5059719	0					
ANR	5062571	MemberAccess	ibba . data		5059719	0					
ANR	5062572	Identifier	ibba		5059719	0					
ANR	5062573	Identifier	data		5059719	1					
ANR	5062574	PrimaryExpression	3		5059719	1					
ANR	5062575	ArrayIndexing	ibba . data [ 1 ]		5059719	1					
ANR	5062576	MemberAccess	ibba . data		5059719	0					
ANR	5062577	Identifier	ibba		5059719	0					
ANR	5062578	Identifier	data		5059719	1					
ANR	5062579	PrimaryExpression	1		5059719	1					
ANR	5062580	ExpressionStatement	ecode = gs_note_error ( gs_error_rangecheck )	1847:16:75683:75725	5059719	1	True				
ANR	5062581	AssignmentExpression	ecode = gs_note_error ( gs_error_rangecheck )		5059719	0		=			
ANR	5062582	Identifier	ecode		5059719	0					
ANR	5062583	CallExpression	gs_note_error ( gs_error_rangecheck )		5059719	1					
ANR	5062584	Callee	gs_note_error		5059719	0					
ANR	5062585	Identifier	gs_note_error		5059719	0					
ANR	5062586	ArgumentList	gs_error_rangecheck		5059719	1					
ANR	5062587	Argument	gs_error_rangecheck		5059719	0					
ANR	5062588	Identifier	gs_error_rangecheck		5059719	0					
ANR	5062589	ElseStatement	else		5059719	0					
ANR	5062590	BreakStatement	break ;	1849:16:75760:75765	5059719	0	True				
ANR	5062591	GotoStatement	goto ibbe ;	1850:12:75779:75788	5059719	2	True				
ANR	5062592	Identifier	ibbe		5059719	0					
ANR	5062593	Label	default :	1851:8:75798:75805	5059719	3	True				
ANR	5062594	Identifier	default		5059719	0					
ANR	5062595	IfStatement	"if ( ( code = param_read_null ( plist , param_name ) ) == 0 )"		5059719	4					
ANR	5062596	Condition	"( code = param_read_null ( plist , param_name ) ) == 0"	1852:16:75823:75870	5059719	0	True				
ANR	5062597	EqualityExpression	"( code = param_read_null ( plist , param_name ) ) == 0"		5059719	0		==			
ANR	5062598	AssignmentExpression	"code = param_read_null ( plist , param_name )"		5059719	0		=			
ANR	5062599	Identifier	code		5059719	0					
ANR	5062600	CallExpression	"param_read_null ( plist , param_name )"		5059719	1					
ANR	5062601	Callee	param_read_null		5059719	0					
ANR	5062602	Identifier	param_read_null		5059719	0					
ANR	5062603	ArgumentList	plist		5059719	1					
ANR	5062604	Argument	plist		5059719	0					
ANR	5062605	Identifier	plist		5059719	0					
ANR	5062606	Argument	param_name		5059719	1					
ANR	5062607	Identifier	param_name		5059719	0					
ANR	5062608	PrimaryExpression	0		5059719	1					
ANR	5062609	CompoundStatement		469:66:18561:18561	5059719	1					
ANR	5062610	ExpressionStatement	ibbnull = true	1853:16:75891:75905	5059719	0	True				
ANR	5062611	AssignmentExpression	ibbnull = true		5059719	0		=			
ANR	5062612	Identifier	ibbnull		5059719	0					
ANR	5062613	Identifier	true		5059719	1					
ANR	5062614	ExpressionStatement	ibba . data = 0	1854:16:75923:75936	5059719	1	True				
ANR	5062615	AssignmentExpression	ibba . data = 0		5059719	0		=			
ANR	5062616	MemberAccess	ibba . data		5059719	0					
ANR	5062617	Identifier	ibba		5059719	0					
ANR	5062618	Identifier	data		5059719	1					
ANR	5062619	PrimaryExpression	0		5059719	1					
ANR	5062620	BreakStatement	break ;	1855:16:75954:75959	5059719	2	True				
ANR	5062621	ExpressionStatement	ecode = code	1857:12:75987:75999	5059719	5	True				
ANR	5062622	AssignmentExpression	ecode = code		5059719	0		=			
ANR	5062623	Identifier	ecode		5059719	0					
ANR	5062624	Identifier	code		5059719	1					
ANR	5062625	Label	ibbe :	1858:10:76028:76032	5059719	6	True				
ANR	5062626	Identifier	ibbe		5059719	0					
ANR	5062627	ExpressionStatement	"param_signal_error ( plist , param_name , ecode )"	1858:15:76033:76077	5059719	7	True				
ANR	5062628	CallExpression	"param_signal_error ( plist , param_name , ecode )"		5059719	0					
ANR	5062629	Callee	param_signal_error		5059719	0					
ANR	5062630	Identifier	param_signal_error		5059719	0					
ANR	5062631	ArgumentList	plist		5059719	1					
ANR	5062632	Argument	plist		5059719	0					
ANR	5062633	Identifier	plist		5059719	0					
ANR	5062634	Argument	param_name		5059719	1					
ANR	5062635	Identifier	param_name		5059719	0					
ANR	5062636	Argument	ecode		5059719	2					
ANR	5062637	Identifier	ecode		5059719	0					
ANR	5062638	Label	case 1 :	1859:8:76087:76093	5059719	8	True				
ANR	5062639	ExpressionStatement	ibba . data = 0	1860:12:76107:76120	5059719	9	True				
ANR	5062640	AssignmentExpression	ibba . data = 0		5059719	0		=			
ANR	5062641	MemberAccess	ibba . data		5059719	0					
ANR	5062642	Identifier	ibba		5059719	0					
ANR	5062643	Identifier	data		5059719	1					
ANR	5062644	PrimaryExpression	0		5059719	1					
ANR	5062645	BreakStatement	break ;	1861:12:76134:76139	5059719	10	True				
ANR	5062646	CompoundStatement		483:8:18929:18982	5059719	196					
ANR	5062647	IdentifierDeclStatement	const char * pcms = get_process_color_model_name ( dev ) ;	1866:8:76241:76294	5059719	0	True				
ANR	5062648	IdentifierDecl	* pcms = get_process_color_model_name ( dev )		5059719	0					
ANR	5062649	IdentifierDeclType	const char *		5059719	0					
ANR	5062650	Identifier	pcms		5059719	1					
ANR	5062651	AssignmentExpression	* pcms = get_process_color_model_name ( dev )		5059719	2		=			
ANR	5062652	Identifier	pcms		5059719	0					
ANR	5062653	CallExpression	get_process_color_model_name ( dev )		5059719	1					
ANR	5062654	Callee	get_process_color_model_name		5059719	0					
ANR	5062655	Identifier	get_process_color_model_name		5059719	0					
ANR	5062656	ArgumentList	dev		5059719	1					
ANR	5062657	Argument	dev		5059719	0					
ANR	5062658	Identifier	dev		5059719	0					
ANR	5062659	IfStatement	"if ( ( code = param_check_string ( plist , ""ProcessColorModel"" , pcms , ( pcms != NULL ) ) ) < 0 )"		5059719	1					
ANR	5062660	Condition	"( code = param_check_string ( plist , ""ProcessColorModel"" , pcms , ( pcms != NULL ) ) ) < 0"	1868:12:76384:76464	5059719	0	True				
ANR	5062661	RelationalExpression	"( code = param_check_string ( plist , ""ProcessColorModel"" , pcms , ( pcms != NULL ) ) ) < 0"		5059719	0		<			
ANR	5062662	AssignmentExpression	"code = param_check_string ( plist , ""ProcessColorModel"" , pcms , ( pcms != NULL ) )"		5059719	0		=			
ANR	5062663	Identifier	code		5059719	0					
ANR	5062664	CallExpression	"param_check_string ( plist , ""ProcessColorModel"" , pcms , ( pcms != NULL ) )"		5059719	1					
ANR	5062665	Callee	param_check_string		5059719	0					
ANR	5062666	Identifier	param_check_string		5059719	0					
ANR	5062667	ArgumentList	plist		5059719	1					
ANR	5062668	Argument	plist		5059719	0					
ANR	5062669	Identifier	plist		5059719	0					
ANR	5062670	Argument	"""ProcessColorModel"""		5059719	1					
ANR	5062671	PrimaryExpression	"""ProcessColorModel"""		5059719	0					
ANR	5062672	Argument	pcms		5059719	2					
ANR	5062673	Identifier	pcms		5059719	0					
ANR	5062674	Argument	pcms != NULL		5059719	3					
ANR	5062675	EqualityExpression	pcms != NULL		5059719	0		!=			
ANR	5062676	Identifier	pcms		5059719	0					
ANR	5062677	Identifier	NULL		5059719	1					
ANR	5062678	PrimaryExpression	0		5059719	1					
ANR	5062679	ExpressionStatement	ecode = code	1869:12:76479:76491	5059719	1	True				
ANR	5062680	AssignmentExpression	ecode = code		5059719	0		=			
ANR	5062681	Identifier	ecode		5059719	0					
ANR	5062682	Identifier	code		5059719	1					
ANR	5062683	Statement	IGNORE_INT_PARAM	1871:4:76503:76518	5059719	197	True				
ANR	5062684	Statement	(	1871:20:76519:76519	5059719	198	True				
ANR	5062685	Statement	"""MaxSeparations"""	1871:21:76520:76535	5059719	199	True				
ANR	5062686	Statement	)	1871:37:76536:76536	5059719	200	True				
ANR	5062687	IfStatement	"if ( ( code = param_check_bool ( plist , ""Separations"" , false , true ) ) < 0 )"		5059719	201					
ANR	5062688	Condition	"( code = param_check_bool ( plist , ""Separations"" , false , true ) ) < 0"	1872:8:76546:76609	5059719	0	True				
ANR	5062689	RelationalExpression	"( code = param_check_bool ( plist , ""Separations"" , false , true ) ) < 0"		5059719	0		<			
ANR	5062690	AssignmentExpression	"code = param_check_bool ( plist , ""Separations"" , false , true )"		5059719	0		=			
ANR	5062691	Identifier	code		5059719	0					
ANR	5062692	CallExpression	"param_check_bool ( plist , ""Separations"" , false , true )"		5059719	1					
ANR	5062693	Callee	param_check_bool		5059719	0					
ANR	5062694	Identifier	param_check_bool		5059719	0					
ANR	5062695	ArgumentList	plist		5059719	1					
ANR	5062696	Argument	plist		5059719	0					
ANR	5062697	Identifier	plist		5059719	0					
ANR	5062698	Argument	"""Separations"""		5059719	1					
ANR	5062699	PrimaryExpression	"""Separations"""		5059719	0					
ANR	5062700	Argument	false		5059719	2					
ANR	5062701	Identifier	false		5059719	0					
ANR	5062702	Argument	true		5059719	3					
ANR	5062703	Identifier	true		5059719	0					
ANR	5062704	PrimaryExpression	0		5059719	1					
ANR	5062705	ExpressionStatement	ecode = code	1873:8:76620:76632	5059719	1	True				
ANR	5062706	AssignmentExpression	ecode = code		5059719	0		=			
ANR	5062707	Identifier	ecode		5059719	0					
ANR	5062708	Identifier	code		5059719	1					
ANR	5062709	Statement	BEGIN_ARRAY_PARAM	1875:4:76639:76655	5059719	202	True				
ANR	5062710	Statement	(	1875:21:76656:76656	5059719	203	True				
ANR	5062711	Statement	param_read_name_array	1875:22:76657:76677	5059719	204	True				
ANR	5062712	Statement	","	1875:43:76678:76678	5059719	205	True				
ANR	5062713	Statement	"""SeparationColorNames"""	1875:45:76680:76701	5059719	206	True				
ANR	5062714	Statement	","	1875:67:76702:76702	5059719	207	True				
ANR	5062715	Statement	scna	1875:69:76704:76707	5059719	208	True				
ANR	5062716	Statement	","	1875:73:76708:76708	5059719	209	True				
ANR	5062717	Statement	scna	1875:75:76710:76713	5059719	210	True				
ANR	5062718	Statement	.	1875:79:76714:76714	5059719	211	True				
ANR	5062719	Statement	size	1875:80:76715:76718	5059719	212	True				
ANR	5062720	Statement	","	1875:84:76719:76719	5059719	213	True				
ANR	5062721	Statement	scne	1875:86:76721:76724	5059719	214	True				
ANR	5062722	Statement	)	1875:90:76725:76725	5059719	215	True				
ANR	5062723	CompoundStatement		492:92:19415:19415	5059719	216					
ANR	5062724	BreakStatement	break ;	1876:8:76737:76742	5059719	0	True				
ANR	5062725	ExpressionStatement	"END_ARRAY_PARAM ( scna , scne )"	1877:6:76750:76777	5059719	217	True				
ANR	5062726	CallExpression	"END_ARRAY_PARAM ( scna , scne )"		5059719	0					
ANR	5062727	Callee	END_ARRAY_PARAM		5059719	0					
ANR	5062728	Identifier	END_ARRAY_PARAM		5059719	0					
ANR	5062729	ArgumentList	scna		5059719	1					
ANR	5062730	Argument	scna		5059719	0					
ANR	5062731	Identifier	scna		5059719	0					
ANR	5062732	Argument	scne		5059719	1					
ANR	5062733	Identifier	scne		5059719	0					
ANR	5062734	IfStatement	"if ( ( code = param_check_string ( plist , ""OutputDevice"" , dev -> dname , true ) ) < 0 )"		5059719	218					
ANR	5062735	Condition	"( code = param_check_string ( plist , ""OutputDevice"" , dev -> dname , true ) ) < 0"	1880:8:76840:76911	5059719	0	True				
ANR	5062736	RelationalExpression	"( code = param_check_string ( plist , ""OutputDevice"" , dev -> dname , true ) ) < 0"		5059719	0		<			
ANR	5062737	AssignmentExpression	"code = param_check_string ( plist , ""OutputDevice"" , dev -> dname , true )"		5059719	0		=			
ANR	5062738	Identifier	code		5059719	0					
ANR	5062739	CallExpression	"param_check_string ( plist , ""OutputDevice"" , dev -> dname , true )"		5059719	1					
ANR	5062740	Callee	param_check_string		5059719	0					
ANR	5062741	Identifier	param_check_string		5059719	0					
ANR	5062742	ArgumentList	plist		5059719	1					
ANR	5062743	Argument	plist		5059719	0					
ANR	5062744	Identifier	plist		5059719	0					
ANR	5062745	Argument	"""OutputDevice"""		5059719	1					
ANR	5062746	PrimaryExpression	"""OutputDevice"""		5059719	0					
ANR	5062747	Argument	dev -> dname		5059719	2					
ANR	5062748	PtrMemberAccess	dev -> dname		5059719	0					
ANR	5062749	Identifier	dev		5059719	0					
ANR	5062750	Identifier	dname		5059719	1					
ANR	5062751	Argument	true		5059719	3					
ANR	5062752	Identifier	true		5059719	0					
ANR	5062753	PrimaryExpression	0		5059719	1					
ANR	5062754	ExpressionStatement	ecode = code	1881:8:76922:76934	5059719	1	True				
ANR	5062755	AssignmentExpression	ecode = code		5059719	0		=			
ANR	5062756	Identifier	ecode		5059719	0					
ANR	5062757	Identifier	code		5059719	1					
ANR	5062758	IfStatement	"if ( ( code = param_check_string ( plist , ""Name"" , dev -> dname , true ) ) < 0 )"		5059719	219					
ANR	5062759	Condition	"( code = param_check_string ( plist , ""Name"" , dev -> dname , true ) ) < 0"	1882:8:76944:77007	5059719	0	True				
ANR	5062760	RelationalExpression	"( code = param_check_string ( plist , ""Name"" , dev -> dname , true ) ) < 0"		5059719	0		<			
ANR	5062761	AssignmentExpression	"code = param_check_string ( plist , ""Name"" , dev -> dname , true )"		5059719	0		=			
ANR	5062762	Identifier	code		5059719	0					
ANR	5062763	CallExpression	"param_check_string ( plist , ""Name"" , dev -> dname , true )"		5059719	1					
ANR	5062764	Callee	param_check_string		5059719	0					
ANR	5062765	Identifier	param_check_string		5059719	0					
ANR	5062766	ArgumentList	plist		5059719	1					
ANR	5062767	Argument	plist		5059719	0					
ANR	5062768	Identifier	plist		5059719	0					
ANR	5062769	Argument	"""Name"""		5059719	1					
ANR	5062770	PrimaryExpression	"""Name"""		5059719	0					
ANR	5062771	Argument	dev -> dname		5059719	2					
ANR	5062772	PtrMemberAccess	dev -> dname		5059719	0					
ANR	5062773	Identifier	dev		5059719	0					
ANR	5062774	Identifier	dname		5059719	1					
ANR	5062775	Argument	true		5059719	3					
ANR	5062776	Identifier	true		5059719	0					
ANR	5062777	PrimaryExpression	0		5059719	1					
ANR	5062778	ExpressionStatement	ecode = code	1883:8:77018:77030	5059719	1	True				
ANR	5062779	AssignmentExpression	ecode = code		5059719	0		=			
ANR	5062780	Identifier	ecode		5059719	0					
ANR	5062781	Identifier	code		5059719	1					
ANR	5062782	IfStatement	"if ( ( code = param_check_int ( plist , ""Colors"" , colors , true ) ) < 0 )"		5059719	220					
ANR	5062783	Condition	"( code = param_check_int ( plist , ""Colors"" , colors , true ) ) < 0"	1884:8:77040:77098	5059719	0	True				
ANR	5062784	RelationalExpression	"( code = param_check_int ( plist , ""Colors"" , colors , true ) ) < 0"		5059719	0		<			
ANR	5062785	AssignmentExpression	"code = param_check_int ( plist , ""Colors"" , colors , true )"		5059719	0		=			
ANR	5062786	Identifier	code		5059719	0					
ANR	5062787	CallExpression	"param_check_int ( plist , ""Colors"" , colors , true )"		5059719	1					
ANR	5062788	Callee	param_check_int		5059719	0					
ANR	5062789	Identifier	param_check_int		5059719	0					
ANR	5062790	ArgumentList	plist		5059719	1					
ANR	5062791	Argument	plist		5059719	0					
ANR	5062792	Identifier	plist		5059719	0					
ANR	5062793	Argument	"""Colors"""		5059719	1					
ANR	5062794	PrimaryExpression	"""Colors"""		5059719	0					
ANR	5062795	Argument	colors		5059719	2					
ANR	5062796	Identifier	colors		5059719	0					
ANR	5062797	Argument	true		5059719	3					
ANR	5062798	Identifier	true		5059719	0					
ANR	5062799	PrimaryExpression	0		5059719	1					
ANR	5062800	ExpressionStatement	ecode = code	1885:8:77109:77121	5059719	1	True				
ANR	5062801	AssignmentExpression	ecode = code		5059719	0		=			
ANR	5062802	Identifier	ecode		5059719	0					
ANR	5062803	Identifier	code		5059719	1					
ANR	5062804	IfStatement	"if ( ( code = param_check_int ( plist , ""BitsPerPixel"" , depth , true ) ) < 0 )"		5059719	221					
ANR	5062805	Condition	"( code = param_check_int ( plist , ""BitsPerPixel"" , depth , true ) ) < 0"	1886:8:77131:77194	5059719	0	True				
ANR	5062806	RelationalExpression	"( code = param_check_int ( plist , ""BitsPerPixel"" , depth , true ) ) < 0"		5059719	0		<			
ANR	5062807	AssignmentExpression	"code = param_check_int ( plist , ""BitsPerPixel"" , depth , true )"		5059719	0		=			
ANR	5062808	Identifier	code		5059719	0					
ANR	5062809	CallExpression	"param_check_int ( plist , ""BitsPerPixel"" , depth , true )"		5059719	1					
ANR	5062810	Callee	param_check_int		5059719	0					
ANR	5062811	Identifier	param_check_int		5059719	0					
ANR	5062812	ArgumentList	plist		5059719	1					
ANR	5062813	Argument	plist		5059719	0					
ANR	5062814	Identifier	plist		5059719	0					
ANR	5062815	Argument	"""BitsPerPixel"""		5059719	1					
ANR	5062816	PrimaryExpression	"""BitsPerPixel"""		5059719	0					
ANR	5062817	Argument	depth		5059719	2					
ANR	5062818	Identifier	depth		5059719	0					
ANR	5062819	Argument	true		5059719	3					
ANR	5062820	Identifier	true		5059719	0					
ANR	5062821	PrimaryExpression	0		5059719	1					
ANR	5062822	ExpressionStatement	ecode = code	1887:8:77205:77217	5059719	1	True				
ANR	5062823	AssignmentExpression	ecode = code		5059719	0		=			
ANR	5062824	Identifier	ecode		5059719	0					
ANR	5062825	Identifier	code		5059719	1					
ANR	5062826	IfStatement	"if ( ( code = param_check_int ( plist , ""GrayValues"" , GrayValues , true ) ) < 0 )"		5059719	222					
ANR	5062827	Condition	"( code = param_check_int ( plist , ""GrayValues"" , GrayValues , true ) ) < 0"	1888:8:77227:77293	5059719	0	True				
ANR	5062828	RelationalExpression	"( code = param_check_int ( plist , ""GrayValues"" , GrayValues , true ) ) < 0"		5059719	0		<			
ANR	5062829	AssignmentExpression	"code = param_check_int ( plist , ""GrayValues"" , GrayValues , true )"		5059719	0		=			
ANR	5062830	Identifier	code		5059719	0					
ANR	5062831	CallExpression	"param_check_int ( plist , ""GrayValues"" , GrayValues , true )"		5059719	1					
ANR	5062832	Callee	param_check_int		5059719	0					
ANR	5062833	Identifier	param_check_int		5059719	0					
ANR	5062834	ArgumentList	plist		5059719	1					
ANR	5062835	Argument	plist		5059719	0					
ANR	5062836	Identifier	plist		5059719	0					
ANR	5062837	Argument	"""GrayValues"""		5059719	1					
ANR	5062838	PrimaryExpression	"""GrayValues"""		5059719	0					
ANR	5062839	Argument	GrayValues		5059719	2					
ANR	5062840	Identifier	GrayValues		5059719	0					
ANR	5062841	Argument	true		5059719	3					
ANR	5062842	Identifier	true		5059719	0					
ANR	5062843	PrimaryExpression	0		5059719	1					
ANR	5062844	ExpressionStatement	ecode = code	1889:8:77304:77316	5059719	1	True				
ANR	5062845	AssignmentExpression	ecode = code		5059719	0		=			
ANR	5062846	Identifier	ecode		5059719	0					
ANR	5062847	Identifier	code		5059719	1					
ANR	5062848	Statement	IGNORE_INT_PARAM	1892:4:77408:77423	5059719	223	True				
ANR	5062849	Statement	(	1892:20:77424:77424	5059719	224	True				
ANR	5062850	Statement	"""PageCount"""	1892:21:77425:77435	5059719	225	True				
ANR	5062851	Statement	)	1892:32:77436:77436	5059719	226	True				
ANR	5062852	IfStatement	"if ( ( code = param_check_int ( plist , ""RedValues"" , RGBValues , true ) ) < 0 )"		5059719	227					
ANR	5062853	Condition	"( code = param_check_int ( plist , ""RedValues"" , RGBValues , true ) ) < 0"	1894:8:77447:77511	5059719	0	True				
ANR	5062854	RelationalExpression	"( code = param_check_int ( plist , ""RedValues"" , RGBValues , true ) ) < 0"		5059719	0		<			
ANR	5062855	AssignmentExpression	"code = param_check_int ( plist , ""RedValues"" , RGBValues , true )"		5059719	0		=			
ANR	5062856	Identifier	code		5059719	0					
ANR	5062857	CallExpression	"param_check_int ( plist , ""RedValues"" , RGBValues , true )"		5059719	1					
ANR	5062858	Callee	param_check_int		5059719	0					
ANR	5062859	Identifier	param_check_int		5059719	0					
ANR	5062860	ArgumentList	plist		5059719	1					
ANR	5062861	Argument	plist		5059719	0					
ANR	5062862	Identifier	plist		5059719	0					
ANR	5062863	Argument	"""RedValues"""		5059719	1					
ANR	5062864	PrimaryExpression	"""RedValues"""		5059719	0					
ANR	5062865	Argument	RGBValues		5059719	2					
ANR	5062866	Identifier	RGBValues		5059719	0					
ANR	5062867	Argument	true		5059719	3					
ANR	5062868	Identifier	true		5059719	0					
ANR	5062869	PrimaryExpression	0		5059719	1					
ANR	5062870	ExpressionStatement	ecode = code	1895:8:77522:77534	5059719	1	True				
ANR	5062871	AssignmentExpression	ecode = code		5059719	0		=			
ANR	5062872	Identifier	ecode		5059719	0					
ANR	5062873	Identifier	code		5059719	1					
ANR	5062874	IfStatement	"if ( ( code = param_check_int ( plist , ""GreenValues"" , RGBValues , true ) ) < 0 )"		5059719	228					
ANR	5062875	Condition	"( code = param_check_int ( plist , ""GreenValues"" , RGBValues , true ) ) < 0"	1896:8:77544:77610	5059719	0	True				
ANR	5062876	RelationalExpression	"( code = param_check_int ( plist , ""GreenValues"" , RGBValues , true ) ) < 0"		5059719	0		<			
ANR	5062877	AssignmentExpression	"code = param_check_int ( plist , ""GreenValues"" , RGBValues , true )"		5059719	0		=			
ANR	5062878	Identifier	code		5059719	0					
ANR	5062879	CallExpression	"param_check_int ( plist , ""GreenValues"" , RGBValues , true )"		5059719	1					
ANR	5062880	Callee	param_check_int		5059719	0					
ANR	5062881	Identifier	param_check_int		5059719	0					
ANR	5062882	ArgumentList	plist		5059719	1					
ANR	5062883	Argument	plist		5059719	0					
ANR	5062884	Identifier	plist		5059719	0					
ANR	5062885	Argument	"""GreenValues"""		5059719	1					
ANR	5062886	PrimaryExpression	"""GreenValues"""		5059719	0					
ANR	5062887	Argument	RGBValues		5059719	2					
ANR	5062888	Identifier	RGBValues		5059719	0					
ANR	5062889	Argument	true		5059719	3					
ANR	5062890	Identifier	true		5059719	0					
ANR	5062891	PrimaryExpression	0		5059719	1					
ANR	5062892	ExpressionStatement	ecode = code	1897:8:77621:77633	5059719	1	True				
ANR	5062893	AssignmentExpression	ecode = code		5059719	0		=			
ANR	5062894	Identifier	ecode		5059719	0					
ANR	5062895	Identifier	code		5059719	1					
ANR	5062896	IfStatement	"if ( ( code = param_check_int ( plist , ""BlueValues"" , RGBValues , true ) ) < 0 )"		5059719	229					
ANR	5062897	Condition	"( code = param_check_int ( plist , ""BlueValues"" , RGBValues , true ) ) < 0"	1898:8:77643:77708	5059719	0	True				
ANR	5062898	RelationalExpression	"( code = param_check_int ( plist , ""BlueValues"" , RGBValues , true ) ) < 0"		5059719	0		<			
ANR	5062899	AssignmentExpression	"code = param_check_int ( plist , ""BlueValues"" , RGBValues , true )"		5059719	0		=			
ANR	5062900	Identifier	code		5059719	0					
ANR	5062901	CallExpression	"param_check_int ( plist , ""BlueValues"" , RGBValues , true )"		5059719	1					
ANR	5062902	Callee	param_check_int		5059719	0					
ANR	5062903	Identifier	param_check_int		5059719	0					
ANR	5062904	ArgumentList	plist		5059719	1					
ANR	5062905	Argument	plist		5059719	0					
ANR	5062906	Identifier	plist		5059719	0					
ANR	5062907	Argument	"""BlueValues"""		5059719	1					
ANR	5062908	PrimaryExpression	"""BlueValues"""		5059719	0					
ANR	5062909	Argument	RGBValues		5059719	2					
ANR	5062910	Identifier	RGBValues		5059719	0					
ANR	5062911	Argument	true		5059719	3					
ANR	5062912	Identifier	true		5059719	0					
ANR	5062913	PrimaryExpression	0		5059719	1					
ANR	5062914	ExpressionStatement	ecode = code	1899:8:77719:77731	5059719	1	True				
ANR	5062915	AssignmentExpression	ecode = code		5059719	0		=			
ANR	5062916	Identifier	ecode		5059719	0					
ANR	5062917	Identifier	code		5059719	1					
ANR	5062918	IfStatement	"if ( ( code = param_check_long ( plist , ""ColorValues"" , ColorValues , true ) ) < 0 )"		5059719	230					
ANR	5062919	Condition	"( code = param_check_long ( plist , ""ColorValues"" , ColorValues , true ) ) < 0"	1900:8:77741:77810	5059719	0	True				
ANR	5062920	RelationalExpression	"( code = param_check_long ( plist , ""ColorValues"" , ColorValues , true ) ) < 0"		5059719	0		<			
ANR	5062921	AssignmentExpression	"code = param_check_long ( plist , ""ColorValues"" , ColorValues , true )"		5059719	0		=			
ANR	5062922	Identifier	code		5059719	0					
ANR	5062923	CallExpression	"param_check_long ( plist , ""ColorValues"" , ColorValues , true )"		5059719	1					
ANR	5062924	Callee	param_check_long		5059719	0					
ANR	5062925	Identifier	param_check_long		5059719	0					
ANR	5062926	ArgumentList	plist		5059719	1					
ANR	5062927	Argument	plist		5059719	0					
ANR	5062928	Identifier	plist		5059719	0					
ANR	5062929	Argument	"""ColorValues"""		5059719	1					
ANR	5062930	PrimaryExpression	"""ColorValues"""		5059719	0					
ANR	5062931	Argument	ColorValues		5059719	2					
ANR	5062932	Identifier	ColorValues		5059719	0					
ANR	5062933	Argument	true		5059719	3					
ANR	5062934	Identifier	true		5059719	0					
ANR	5062935	PrimaryExpression	0		5059719	1					
ANR	5062936	ExpressionStatement	ecode = code	1901:8:77821:77833	5059719	1	True				
ANR	5062937	AssignmentExpression	ecode = code		5059719	0		=			
ANR	5062938	Identifier	ecode		5059719	0					
ANR	5062939	Identifier	code		5059719	1					
ANR	5062940	IfStatement	"if ( param_read_string ( plist , ""HWColorMap"" , & cms ) != 1 )"		5059719	231					
ANR	5062941	Condition	"param_read_string ( plist , ""HWColorMap"" , & cms ) != 1"	1902:8:77843:77891	5059719	0	True				
ANR	5062942	EqualityExpression	"param_read_string ( plist , ""HWColorMap"" , & cms ) != 1"		5059719	0		!=			
ANR	5062943	CallExpression	"param_read_string ( plist , ""HWColorMap"" , & cms )"		5059719	0					
ANR	5062944	Callee	param_read_string		5059719	0					
ANR	5062945	Identifier	param_read_string		5059719	0					
ANR	5062946	ArgumentList	plist		5059719	1					
ANR	5062947	Argument	plist		5059719	0					
ANR	5062948	Identifier	plist		5059719	0					
ANR	5062949	Argument	"""HWColorMap"""		5059719	1					
ANR	5062950	PrimaryExpression	"""HWColorMap"""		5059719	0					
ANR	5062951	Argument	& cms		5059719	2					
ANR	5062952	UnaryOperationExpression	& cms		5059719	0					
ANR	5062953	UnaryOperator	&		5059719	0					
ANR	5062954	Identifier	cms		5059719	1					
ANR	5062955	PrimaryExpression	1		5059719	1					
ANR	5062956	CompoundStatement		520:8:20592:20612	5059719	1					
ANR	5062957	IdentifierDeclStatement	byte palette [ 3 << 8 ] ;	1903:8:77904:77924	5059719	0	True				
ANR	5062958	IdentifierDecl	palette [ 3 << 8 ]		5059719	0					
ANR	5062959	IdentifierDeclType	byte [ 3 << 8 ]		5059719	0					
ANR	5062960	Identifier	palette		5059719	1					
ANR	5062961	ShiftExpression	3 << 8		5059719	2		<<			
ANR	5062962	PrimaryExpression	3		5059719	0					
ANR	5062963	PrimaryExpression	8		5059719	1					
ANR	5062964	IfStatement	"if ( param_HWColorMap ( dev , palette ) )"		5059719	1					
ANR	5062965	Condition	"param_HWColorMap ( dev , palette )"	1905:12:77939:77968	5059719	0	True				
ANR	5062966	CallExpression	"param_HWColorMap ( dev , palette )"		5059719	0					
ANR	5062967	Callee	param_HWColorMap		5059719	0					
ANR	5062968	Identifier	param_HWColorMap		5059719	0					
ANR	5062969	ArgumentList	dev		5059719	1					
ANR	5062970	Argument	dev		5059719	0					
ANR	5062971	Identifier	dev		5059719	0					
ANR	5062972	Argument	palette		5059719	1					
ANR	5062973	Identifier	palette		5059719	0					
ANR	5062974	ExpressionStatement	"code = param_check_bytes ( plist , ""HWColorMap"" , palette , colors << depth , true )"	1906:12:77983:78097	5059719	1	True				
ANR	5062975	AssignmentExpression	"code = param_check_bytes ( plist , ""HWColorMap"" , palette , colors << depth , true )"		5059719	0		=			
ANR	5062976	Identifier	code		5059719	0					
ANR	5062977	CallExpression	"param_check_bytes ( plist , ""HWColorMap"" , palette , colors << depth , true )"		5059719	1					
ANR	5062978	Callee	param_check_bytes		5059719	0					
ANR	5062979	Identifier	param_check_bytes		5059719	0					
ANR	5062980	ArgumentList	plist		5059719	1					
ANR	5062981	Argument	plist		5059719	0					
ANR	5062982	Identifier	plist		5059719	0					
ANR	5062983	Argument	"""HWColorMap"""		5059719	1					
ANR	5062984	PrimaryExpression	"""HWColorMap"""		5059719	0					
ANR	5062985	Argument	palette		5059719	2					
ANR	5062986	Identifier	palette		5059719	0					
ANR	5062987	Argument	colors << depth		5059719	3					
ANR	5062988	ShiftExpression	colors << depth		5059719	0		<<			
ANR	5062989	Identifier	colors		5059719	0					
ANR	5062990	Identifier	depth		5059719	1					
ANR	5062991	Argument	true		5059719	4					
ANR	5062992	Identifier	true		5059719	0					
ANR	5062993	ElseStatement	else		5059719	0					
ANR	5062994	ExpressionStatement	"code = param_check_bytes ( plist , ""HWColorMap"" , 0 , 0 , false )"	1909:12:78124:78182	5059719	0	True				
ANR	5062995	AssignmentExpression	"code = param_check_bytes ( plist , ""HWColorMap"" , 0 , 0 , false )"		5059719	0		=			
ANR	5062996	Identifier	code		5059719	0					
ANR	5062997	CallExpression	"param_check_bytes ( plist , ""HWColorMap"" , 0 , 0 , false )"		5059719	1					
ANR	5062998	Callee	param_check_bytes		5059719	0					
ANR	5062999	Identifier	param_check_bytes		5059719	0					
ANR	5063000	ArgumentList	plist		5059719	1					
ANR	5063001	Argument	plist		5059719	0					
ANR	5063002	Identifier	plist		5059719	0					
ANR	5063003	Argument	"""HWColorMap"""		5059719	1					
ANR	5063004	PrimaryExpression	"""HWColorMap"""		5059719	0					
ANR	5063005	Argument	0		5059719	2					
ANR	5063006	PrimaryExpression	0		5059719	0					
ANR	5063007	Argument	0		5059719	3					
ANR	5063008	PrimaryExpression	0		5059719	0					
ANR	5063009	Argument	false		5059719	4					
ANR	5063010	Identifier	false		5059719	0					
ANR	5063011	IfStatement	if ( code < 0 )		5059719	2					
ANR	5063012	Condition	code < 0	1910:12:78196:78203	5059719	0	True				
ANR	5063013	RelationalExpression	code < 0		5059719	0		<			
ANR	5063014	Identifier	code		5059719	0					
ANR	5063015	PrimaryExpression	0		5059719	1					
ANR	5063016	ExpressionStatement	ecode = code	1911:12:78218:78230	5059719	1	True				
ANR	5063017	AssignmentExpression	ecode = code		5059719	0		=			
ANR	5063018	Identifier	ecode		5059719	0					
ANR	5063019	Identifier	code		5059719	1					
ANR	5063020	ExpressionStatement	"code = param_read_int ( plist , ""FirstPage"" , & dev -> FirstPage )"	1914:4:78243:78301	5059719	232	True				
ANR	5063021	AssignmentExpression	"code = param_read_int ( plist , ""FirstPage"" , & dev -> FirstPage )"		5059719	0		=			
ANR	5063022	Identifier	code		5059719	0					
ANR	5063023	CallExpression	"param_read_int ( plist , ""FirstPage"" , & dev -> FirstPage )"		5059719	1					
ANR	5063024	Callee	param_read_int		5059719	0					
ANR	5063025	Identifier	param_read_int		5059719	0					
ANR	5063026	ArgumentList	plist		5059719	1					
ANR	5063027	Argument	plist		5059719	0					
ANR	5063028	Identifier	plist		5059719	0					
ANR	5063029	Argument	"""FirstPage"""		5059719	1					
ANR	5063030	PrimaryExpression	"""FirstPage"""		5059719	0					
ANR	5063031	Argument	& dev -> FirstPage		5059719	2					
ANR	5063032	UnaryOperationExpression	& dev -> FirstPage		5059719	0					
ANR	5063033	UnaryOperator	&		5059719	0					
ANR	5063034	PtrMemberAccess	dev -> FirstPage		5059719	1					
ANR	5063035	Identifier	dev		5059719	0					
ANR	5063036	Identifier	FirstPage		5059719	1					
ANR	5063037	IfStatement	if ( code < 0 )		5059719	233					
ANR	5063038	Condition	code < 0	1915:8:78311:78318	5059719	0	True				
ANR	5063039	RelationalExpression	code < 0		5059719	0		<			
ANR	5063040	Identifier	code		5059719	0					
ANR	5063041	PrimaryExpression	0		5059719	1					
ANR	5063042	ExpressionStatement	ecode = code	1916:8:78329:78341	5059719	1	True				
ANR	5063043	AssignmentExpression	ecode = code		5059719	0		=			
ANR	5063044	Identifier	ecode		5059719	0					
ANR	5063045	Identifier	code		5059719	1					
ANR	5063046	ExpressionStatement	"code = param_read_int ( plist , ""LastPage"" , & dev -> LastPage )"	1918:4:78348:78405	5059719	234	True				
ANR	5063047	AssignmentExpression	"code = param_read_int ( plist , ""LastPage"" , & dev -> LastPage )"		5059719	0		=			
ANR	5063048	Identifier	code		5059719	0					
ANR	5063049	CallExpression	"param_read_int ( plist , ""LastPage"" , & dev -> LastPage )"		5059719	1					
ANR	5063050	Callee	param_read_int		5059719	0					
ANR	5063051	Identifier	param_read_int		5059719	0					
ANR	5063052	ArgumentList	plist		5059719	1					
ANR	5063053	Argument	plist		5059719	0					
ANR	5063054	Identifier	plist		5059719	0					
ANR	5063055	Argument	"""LastPage"""		5059719	1					
ANR	5063056	PrimaryExpression	"""LastPage"""		5059719	0					
ANR	5063057	Argument	& dev -> LastPage		5059719	2					
ANR	5063058	UnaryOperationExpression	& dev -> LastPage		5059719	0					
ANR	5063059	UnaryOperator	&		5059719	0					
ANR	5063060	PtrMemberAccess	dev -> LastPage		5059719	1					
ANR	5063061	Identifier	dev		5059719	0					
ANR	5063062	Identifier	LastPage		5059719	1					
ANR	5063063	IfStatement	if ( code < 0 )		5059719	235					
ANR	5063064	Condition	code < 0	1919:8:78415:78422	5059719	0	True				
ANR	5063065	RelationalExpression	code < 0		5059719	0		<			
ANR	5063066	Identifier	code		5059719	0					
ANR	5063067	PrimaryExpression	0		5059719	1					
ANR	5063068	ExpressionStatement	ecode = code	1920:8:78433:78445	5059719	1	True				
ANR	5063069	AssignmentExpression	ecode = code		5059719	0		=			
ANR	5063070	Identifier	ecode		5059719	0					
ANR	5063071	Identifier	code		5059719	1					
ANR	5063072	ExpressionStatement	"code = param_read_bool ( plist , ""DisablePageHandler"" , & temp_bool )"	1922:4:78452:78515	5059719	236	True				
ANR	5063073	AssignmentExpression	"code = param_read_bool ( plist , ""DisablePageHandler"" , & temp_bool )"		5059719	0		=			
ANR	5063074	Identifier	code		5059719	0					
ANR	5063075	CallExpression	"param_read_bool ( plist , ""DisablePageHandler"" , & temp_bool )"		5059719	1					
ANR	5063076	Callee	param_read_bool		5059719	0					
ANR	5063077	Identifier	param_read_bool		5059719	0					
ANR	5063078	ArgumentList	plist		5059719	1					
ANR	5063079	Argument	plist		5059719	0					
ANR	5063080	Identifier	plist		5059719	0					
ANR	5063081	Argument	"""DisablePageHandler"""		5059719	1					
ANR	5063082	PrimaryExpression	"""DisablePageHandler"""		5059719	0					
ANR	5063083	Argument	& temp_bool		5059719	2					
ANR	5063084	UnaryOperationExpression	& temp_bool		5059719	0					
ANR	5063085	UnaryOperator	&		5059719	0					
ANR	5063086	Identifier	temp_bool		5059719	1					
ANR	5063087	IfStatement	if ( code < 0 )		5059719	237					
ANR	5063088	Condition	code < 0	1923:8:78525:78532	5059719	0	True				
ANR	5063089	RelationalExpression	code < 0		5059719	0		<			
ANR	5063090	Identifier	code		5059719	0					
ANR	5063091	PrimaryExpression	0		5059719	1					
ANR	5063092	ExpressionStatement	ecode = code	1924:8:78543:78555	5059719	1	True				
ANR	5063093	AssignmentExpression	ecode = code		5059719	0		=			
ANR	5063094	Identifier	ecode		5059719	0					
ANR	5063095	Identifier	code		5059719	1					
ANR	5063096	IfStatement	if ( code == 0 )		5059719	238					
ANR	5063097	Condition	code == 0	1925:8:78565:78573	5059719	0	True				
ANR	5063098	EqualityExpression	code == 0		5059719	0		==			
ANR	5063099	Identifier	code		5059719	0					
ANR	5063100	PrimaryExpression	0		5059719	1					
ANR	5063101	ExpressionStatement	dev -> DisablePageHandler = temp_bool	1926:8:78584:78619	5059719	1	True				
ANR	5063102	AssignmentExpression	dev -> DisablePageHandler = temp_bool		5059719	0		=			
ANR	5063103	PtrMemberAccess	dev -> DisablePageHandler		5059719	0					
ANR	5063104	Identifier	dev		5059719	0					
ANR	5063105	Identifier	DisablePageHandler		5059719	1					
ANR	5063106	Identifier	temp_bool		5059719	1					
ANR	5063107	IfStatement	"if ( ( code = param_read_string ( plist , ""PageList"" , & pagelist ) ) != 1 && pagelist . size > 0 )"		5059719	239					
ANR	5063108	Condition	"( code = param_read_string ( plist , ""PageList"" , & pagelist ) ) != 1 && pagelist . size > 0"	1928:8:78630:78711	5059719	0	True				
ANR	5063109	AndExpression	"( code = param_read_string ( plist , ""PageList"" , & pagelist ) ) != 1 && pagelist . size > 0"		5059719	0		&&			
ANR	5063110	EqualityExpression	"( code = param_read_string ( plist , ""PageList"" , & pagelist ) ) != 1"		5059719	0		!=			
ANR	5063111	AssignmentExpression	"code = param_read_string ( plist , ""PageList"" , & pagelist )"		5059719	0		=			
ANR	5063112	Identifier	code		5059719	0					
ANR	5063113	CallExpression	"param_read_string ( plist , ""PageList"" , & pagelist )"		5059719	1					
ANR	5063114	Callee	param_read_string		5059719	0					
ANR	5063115	Identifier	param_read_string		5059719	0					
ANR	5063116	ArgumentList	plist		5059719	1					
ANR	5063117	Argument	plist		5059719	0					
ANR	5063118	Identifier	plist		5059719	0					
ANR	5063119	Argument	"""PageList"""		5059719	1					
ANR	5063120	PrimaryExpression	"""PageList"""		5059719	0					
ANR	5063121	Argument	& pagelist		5059719	2					
ANR	5063122	UnaryOperationExpression	& pagelist		5059719	0					
ANR	5063123	UnaryOperator	&		5059719	0					
ANR	5063124	Identifier	pagelist		5059719	1					
ANR	5063125	PrimaryExpression	1		5059719	1					
ANR	5063126	RelationalExpression	pagelist . size > 0		5059719	1		>			
ANR	5063127	MemberAccess	pagelist . size		5059719	0					
ANR	5063128	Identifier	pagelist		5059719	0					
ANR	5063129	Identifier	size		5059719	1					
ANR	5063130	PrimaryExpression	0		5059719	1					
ANR	5063131	CompoundStatement		545:92:21402:21402	5059719	1					
ANR	5063132	IfStatement	if ( dev -> PageList )		5059719	0					
ANR	5063133	Condition	dev -> PageList	1929:12:78728:78740	5059719	0	True				
ANR	5063134	PtrMemberAccess	dev -> PageList		5059719	0					
ANR	5063135	Identifier	dev		5059719	0					
ANR	5063136	Identifier	PageList		5059719	1					
ANR	5063137	ExpressionStatement	"rc_decrement ( dev -> PageList , ""default put_params PageList"" )"	1930:12:78755:78813	5059719	1	True				
ANR	5063138	CallExpression	"rc_decrement ( dev -> PageList , ""default put_params PageList"" )"		5059719	0					
ANR	5063139	Callee	rc_decrement		5059719	0					
ANR	5063140	Identifier	rc_decrement		5059719	0					
ANR	5063141	ArgumentList	dev -> PageList		5059719	1					
ANR	5063142	Argument	dev -> PageList		5059719	0					
ANR	5063143	PtrMemberAccess	dev -> PageList		5059719	0					
ANR	5063144	Identifier	dev		5059719	0					
ANR	5063145	Identifier	PageList		5059719	1					
ANR	5063146	Argument	"""default put_params PageList"""		5059719	1					
ANR	5063147	PrimaryExpression	"""default put_params PageList"""		5059719	0					
ANR	5063148	ExpressionStatement	"dev -> PageList = ( gdev_pagelist * ) gs_alloc_bytes ( dev -> memory -> non_gc_memory , sizeof ( gdev_pagelist ) , ""structure to hold page list"" )"	1931:8:78823:78952	5059719	1	True				
ANR	5063149	AssignmentExpression	"dev -> PageList = ( gdev_pagelist * ) gs_alloc_bytes ( dev -> memory -> non_gc_memory , sizeof ( gdev_pagelist ) , ""structure to hold page list"" )"		5059719	0		=			
ANR	5063150	PtrMemberAccess	dev -> PageList		5059719	0					
ANR	5063151	Identifier	dev		5059719	0					
ANR	5063152	Identifier	PageList		5059719	1					
ANR	5063153	CastExpression	"( gdev_pagelist * ) gs_alloc_bytes ( dev -> memory -> non_gc_memory , sizeof ( gdev_pagelist ) , ""structure to hold page list"" )"		5059719	1					
ANR	5063154	CastTarget	gdev_pagelist *		5059719	0					
ANR	5063155	CallExpression	"gs_alloc_bytes ( dev -> memory -> non_gc_memory , sizeof ( gdev_pagelist ) , ""structure to hold page list"" )"		5059719	1					
ANR	5063156	Callee	gs_alloc_bytes		5059719	0					
ANR	5063157	Identifier	gs_alloc_bytes		5059719	0					
ANR	5063158	ArgumentList	dev -> memory -> non_gc_memory		5059719	1					
ANR	5063159	Argument	dev -> memory -> non_gc_memory		5059719	0					
ANR	5063160	PtrMemberAccess	dev -> memory -> non_gc_memory		5059719	0					
ANR	5063161	PtrMemberAccess	dev -> memory		5059719	0					
ANR	5063162	Identifier	dev		5059719	0					
ANR	5063163	Identifier	memory		5059719	1					
ANR	5063164	Identifier	non_gc_memory		5059719	1					
ANR	5063165	Argument	sizeof ( gdev_pagelist )		5059719	1					
ANR	5063166	SizeofExpression	sizeof ( gdev_pagelist )		5059719	0					
ANR	5063167	Sizeof	sizeof		5059719	0					
ANR	5063168	SizeofOperand	gdev_pagelist		5059719	1					
ANR	5063169	Argument	"""structure to hold page list"""		5059719	2					
ANR	5063170	PrimaryExpression	"""structure to hold page list"""		5059719	0					
ANR	5063171	IfStatement	if ( ! dev -> PageList )		5059719	2					
ANR	5063172	Condition	! dev -> PageList	1932:12:78966:78979	5059719	0	True				
ANR	5063173	UnaryOperationExpression	! dev -> PageList		5059719	0					
ANR	5063174	UnaryOperator	!		5059719	0					
ANR	5063175	PtrMemberAccess	dev -> PageList		5059719	1					
ANR	5063176	Identifier	dev		5059719	0					
ANR	5063177	Identifier	PageList		5059719	1					
ANR	5063178	ReturnStatement	return gs_note_error ( gs_error_VMerror ) ;	1933:12:78994:79032	5059719	1	True				
ANR	5063179	CallExpression	gs_note_error ( gs_error_VMerror )		5059719	0					
ANR	5063180	Callee	gs_note_error		5059719	0					
ANR	5063181	Identifier	gs_note_error		5059719	0					
ANR	5063182	ArgumentList	gs_error_VMerror		5059719	1					
ANR	5063183	Argument	gs_error_VMerror		5059719	0					
ANR	5063184	Identifier	gs_error_VMerror		5059719	0					
ANR	5063185	ExpressionStatement	"dev -> PageList -> Pages = ( void * ) gs_alloc_bytes ( dev -> memory -> non_gc_memory , pagelist . size + 1 , ""String to hold page list"" )"	1934:8:79042:79162	5059719	3	True				
ANR	5063186	AssignmentExpression	"dev -> PageList -> Pages = ( void * ) gs_alloc_bytes ( dev -> memory -> non_gc_memory , pagelist . size + 1 , ""String to hold page list"" )"		5059719	0		=			
ANR	5063187	PtrMemberAccess	dev -> PageList -> Pages		5059719	0					
ANR	5063188	PtrMemberAccess	dev -> PageList		5059719	0					
ANR	5063189	Identifier	dev		5059719	0					
ANR	5063190	Identifier	PageList		5059719	1					
ANR	5063191	Identifier	Pages		5059719	1					
ANR	5063192	CastExpression	"( void * ) gs_alloc_bytes ( dev -> memory -> non_gc_memory , pagelist . size + 1 , ""String to hold page list"" )"		5059719	1					
ANR	5063193	CastTarget	void *		5059719	0					
ANR	5063194	CallExpression	"gs_alloc_bytes ( dev -> memory -> non_gc_memory , pagelist . size + 1 , ""String to hold page list"" )"		5059719	1					
ANR	5063195	Callee	gs_alloc_bytes		5059719	0					
ANR	5063196	Identifier	gs_alloc_bytes		5059719	0					
ANR	5063197	ArgumentList	dev -> memory -> non_gc_memory		5059719	1					
ANR	5063198	Argument	dev -> memory -> non_gc_memory		5059719	0					
ANR	5063199	PtrMemberAccess	dev -> memory -> non_gc_memory		5059719	0					
ANR	5063200	PtrMemberAccess	dev -> memory		5059719	0					
ANR	5063201	Identifier	dev		5059719	0					
ANR	5063202	Identifier	memory		5059719	1					
ANR	5063203	Identifier	non_gc_memory		5059719	1					
ANR	5063204	Argument	pagelist . size + 1		5059719	1					
ANR	5063205	AdditiveExpression	pagelist . size + 1		5059719	0		+			
ANR	5063206	MemberAccess	pagelist . size		5059719	0					
ANR	5063207	Identifier	pagelist		5059719	0					
ANR	5063208	Identifier	size		5059719	1					
ANR	5063209	PrimaryExpression	1		5059719	1					
ANR	5063210	Argument	"""String to hold page list"""		5059719	2					
ANR	5063211	PrimaryExpression	"""String to hold page list"""		5059719	0					
ANR	5063212	IfStatement	if ( ! dev -> PageList -> Pages )		5059719	4					
ANR	5063213	Condition	! dev -> PageList -> Pages	1935:12:79176:79196	5059719	0	True				
ANR	5063214	UnaryOperationExpression	! dev -> PageList -> Pages		5059719	0					
ANR	5063215	UnaryOperator	!		5059719	0					
ANR	5063216	PtrMemberAccess	dev -> PageList -> Pages		5059719	1					
ANR	5063217	PtrMemberAccess	dev -> PageList		5059719	0					
ANR	5063218	Identifier	dev		5059719	0					
ANR	5063219	Identifier	PageList		5059719	1					
ANR	5063220	Identifier	Pages		5059719	1					
ANR	5063221	CompoundStatement		552:34:21886:21886	5059719	1					
ANR	5063222	ExpressionStatement	"gs_free ( dev -> memory -> non_gc_memory , dev -> PageList , 1 , sizeof ( gdev_pagelist ) , ""free structure to hold page list"" )"	1936:12:79212:79324	5059719	0	True				
ANR	5063223	CallExpression	"gs_free ( dev -> memory -> non_gc_memory , dev -> PageList , 1 , sizeof ( gdev_pagelist ) , ""free structure to hold page list"" )"		5059719	0					
ANR	5063224	Callee	gs_free		5059719	0					
ANR	5063225	Identifier	gs_free		5059719	0					
ANR	5063226	ArgumentList	dev -> memory -> non_gc_memory		5059719	1					
ANR	5063227	Argument	dev -> memory -> non_gc_memory		5059719	0					
ANR	5063228	PtrMemberAccess	dev -> memory -> non_gc_memory		5059719	0					
ANR	5063229	PtrMemberAccess	dev -> memory		5059719	0					
ANR	5063230	Identifier	dev		5059719	0					
ANR	5063231	Identifier	memory		5059719	1					
ANR	5063232	Identifier	non_gc_memory		5059719	1					
ANR	5063233	Argument	dev -> PageList		5059719	1					
ANR	5063234	PtrMemberAccess	dev -> PageList		5059719	0					
ANR	5063235	Identifier	dev		5059719	0					
ANR	5063236	Identifier	PageList		5059719	1					
ANR	5063237	Argument	1		5059719	2					
ANR	5063238	PrimaryExpression	1		5059719	0					
ANR	5063239	Argument	sizeof ( gdev_pagelist )		5059719	3					
ANR	5063240	SizeofExpression	sizeof ( gdev_pagelist )		5059719	0					
ANR	5063241	Sizeof	sizeof		5059719	0					
ANR	5063242	SizeofOperand	gdev_pagelist		5059719	1					
ANR	5063243	Argument	"""free structure to hold page list"""		5059719	4					
ANR	5063244	PrimaryExpression	"""free structure to hold page list"""		5059719	0					
ANR	5063245	ExpressionStatement	dev -> PageList = 0	1937:12:79338:79355	5059719	1	True				
ANR	5063246	AssignmentExpression	dev -> PageList = 0		5059719	0		=			
ANR	5063247	PtrMemberAccess	dev -> PageList		5059719	0					
ANR	5063248	Identifier	dev		5059719	0					
ANR	5063249	Identifier	PageList		5059719	1					
ANR	5063250	PrimaryExpression	0		5059719	1					
ANR	5063251	ReturnStatement	return gs_note_error ( gs_error_VMerror ) ;	1938:12:79369:79407	5059719	2	True				
ANR	5063252	CallExpression	gs_note_error ( gs_error_VMerror )		5059719	0					
ANR	5063253	Callee	gs_note_error		5059719	0					
ANR	5063254	Identifier	gs_note_error		5059719	0					
ANR	5063255	ArgumentList	gs_error_VMerror		5059719	1					
ANR	5063256	Argument	gs_error_VMerror		5059719	0					
ANR	5063257	Identifier	gs_error_VMerror		5059719	0					
ANR	5063258	ExpressionStatement	"memset ( dev -> PageList -> Pages , 0x00 , pagelist . size + 1 )"	1940:8:79427:79480	5059719	5	True				
ANR	5063259	CallExpression	"memset ( dev -> PageList -> Pages , 0x00 , pagelist . size + 1 )"		5059719	0					
ANR	5063260	Callee	memset		5059719	0					
ANR	5063261	Identifier	memset		5059719	0					
ANR	5063262	ArgumentList	dev -> PageList -> Pages		5059719	1					
ANR	5063263	Argument	dev -> PageList -> Pages		5059719	0					
ANR	5063264	PtrMemberAccess	dev -> PageList -> Pages		5059719	0					
ANR	5063265	PtrMemberAccess	dev -> PageList		5059719	0					
ANR	5063266	Identifier	dev		5059719	0					
ANR	5063267	Identifier	PageList		5059719	1					
ANR	5063268	Identifier	Pages		5059719	1					
ANR	5063269	Argument	0x00		5059719	1					
ANR	5063270	PrimaryExpression	0x00		5059719	0					
ANR	5063271	Argument	pagelist . size + 1		5059719	2					
ANR	5063272	AdditiveExpression	pagelist . size + 1		5059719	0		+			
ANR	5063273	MemberAccess	pagelist . size		5059719	0					
ANR	5063274	Identifier	pagelist		5059719	0					
ANR	5063275	Identifier	size		5059719	1					
ANR	5063276	PrimaryExpression	1		5059719	1					
ANR	5063277	ExpressionStatement	"memcpy ( dev -> PageList -> Pages , pagelist . data , pagelist . size )"	1941:8:79490:79548	5059719	6	True				
ANR	5063278	CallExpression	"memcpy ( dev -> PageList -> Pages , pagelist . data , pagelist . size )"		5059719	0					
ANR	5063279	Callee	memcpy		5059719	0					
ANR	5063280	Identifier	memcpy		5059719	0					
ANR	5063281	ArgumentList	dev -> PageList -> Pages		5059719	1					
ANR	5063282	Argument	dev -> PageList -> Pages		5059719	0					
ANR	5063283	PtrMemberAccess	dev -> PageList -> Pages		5059719	0					
ANR	5063284	PtrMemberAccess	dev -> PageList		5059719	0					
ANR	5063285	Identifier	dev		5059719	0					
ANR	5063286	Identifier	PageList		5059719	1					
ANR	5063287	Identifier	Pages		5059719	1					
ANR	5063288	Argument	pagelist . data		5059719	1					
ANR	5063289	MemberAccess	pagelist . data		5059719	0					
ANR	5063290	Identifier	pagelist		5059719	0					
ANR	5063291	Identifier	data		5059719	1					
ANR	5063292	Argument	pagelist . size		5059719	2					
ANR	5063293	MemberAccess	pagelist . size		5059719	0					
ANR	5063294	Identifier	pagelist		5059719	0					
ANR	5063295	Identifier	size		5059719	1					
ANR	5063296	ExpressionStatement	dev -> PageList -> PagesSize = pagelist . size + 1	1942:8:79558:79602	5059719	7	True				
ANR	5063297	AssignmentExpression	dev -> PageList -> PagesSize = pagelist . size + 1		5059719	0		=			
ANR	5063298	PtrMemberAccess	dev -> PageList -> PagesSize		5059719	0					
ANR	5063299	PtrMemberAccess	dev -> PageList		5059719	0					
ANR	5063300	Identifier	dev		5059719	0					
ANR	5063301	Identifier	PageList		5059719	1					
ANR	5063302	Identifier	PagesSize		5059719	1					
ANR	5063303	AdditiveExpression	pagelist . size + 1		5059719	1		+			
ANR	5063304	MemberAccess	pagelist . size		5059719	0					
ANR	5063305	Identifier	pagelist		5059719	0					
ANR	5063306	Identifier	size		5059719	1					
ANR	5063307	PrimaryExpression	1		5059719	1					
ANR	5063308	ExpressionStatement	"rc_init_free ( dev -> PageList , dev -> memory -> non_gc_memory , 1 , rc_free_pages_list )"	1943:8:79612:79690	5059719	8	True				
ANR	5063309	CallExpression	"rc_init_free ( dev -> PageList , dev -> memory -> non_gc_memory , 1 , rc_free_pages_list )"		5059719	0					
ANR	5063310	Callee	rc_init_free		5059719	0					
ANR	5063311	Identifier	rc_init_free		5059719	0					
ANR	5063312	ArgumentList	dev -> PageList		5059719	1					
ANR	5063313	Argument	dev -> PageList		5059719	0					
ANR	5063314	PtrMemberAccess	dev -> PageList		5059719	0					
ANR	5063315	Identifier	dev		5059719	0					
ANR	5063316	Identifier	PageList		5059719	1					
ANR	5063317	Argument	dev -> memory -> non_gc_memory		5059719	1					
ANR	5063318	PtrMemberAccess	dev -> memory -> non_gc_memory		5059719	0					
ANR	5063319	PtrMemberAccess	dev -> memory		5059719	0					
ANR	5063320	Identifier	dev		5059719	0					
ANR	5063321	Identifier	memory		5059719	1					
ANR	5063322	Identifier	non_gc_memory		5059719	1					
ANR	5063323	Argument	1		5059719	2					
ANR	5063324	PrimaryExpression	1		5059719	0					
ANR	5063325	Argument	rc_free_pages_list		5059719	3					
ANR	5063326	Identifier	rc_free_pages_list		5059719	0					
ANR	5063327	ExpressionStatement	"code = param_read_bool ( plist , ""FILTERIMAGE"" , & temp_bool )"	1946:4:79703:79759	5059719	240	True				
ANR	5063328	AssignmentExpression	"code = param_read_bool ( plist , ""FILTERIMAGE"" , & temp_bool )"		5059719	0		=			
ANR	5063329	Identifier	code		5059719	0					
ANR	5063330	CallExpression	"param_read_bool ( plist , ""FILTERIMAGE"" , & temp_bool )"		5059719	1					
ANR	5063331	Callee	param_read_bool		5059719	0					
ANR	5063332	Identifier	param_read_bool		5059719	0					
ANR	5063333	ArgumentList	plist		5059719	1					
ANR	5063334	Argument	plist		5059719	0					
ANR	5063335	Identifier	plist		5059719	0					
ANR	5063336	Argument	"""FILTERIMAGE"""		5059719	1					
ANR	5063337	PrimaryExpression	"""FILTERIMAGE"""		5059719	0					
ANR	5063338	Argument	& temp_bool		5059719	2					
ANR	5063339	UnaryOperationExpression	& temp_bool		5059719	0					
ANR	5063340	UnaryOperator	&		5059719	0					
ANR	5063341	Identifier	temp_bool		5059719	1					
ANR	5063342	IfStatement	if ( code < 0 )		5059719	241					
ANR	5063343	Condition	code < 0	1947:8:79769:79776	5059719	0	True				
ANR	5063344	RelationalExpression	code < 0		5059719	0		<			
ANR	5063345	Identifier	code		5059719	0					
ANR	5063346	PrimaryExpression	0		5059719	1					
ANR	5063347	ExpressionStatement	ecode = code	1948:8:79787:79799	5059719	1	True				
ANR	5063348	AssignmentExpression	ecode = code		5059719	0		=			
ANR	5063349	Identifier	ecode		5059719	0					
ANR	5063350	Identifier	code		5059719	1					
ANR	5063351	IfStatement	if ( code == 0 )		5059719	242					
ANR	5063352	Condition	code == 0	1949:8:79809:79817	5059719	0	True				
ANR	5063353	EqualityExpression	code == 0		5059719	0		==			
ANR	5063354	Identifier	code		5059719	0					
ANR	5063355	PrimaryExpression	0		5059719	1					
ANR	5063356	CompoundStatement		566:19:22508:22508	5059719	1					
ANR	5063357	IfStatement	if ( temp_bool )		5059719	0					
ANR	5063358	Condition	temp_bool	1950:12:79834:79842	5059719	0	True				
ANR	5063359	Identifier	temp_bool		5059719	0					
ANR	5063360	ExpressionStatement	dev -> ObjectFilter |= FILTERIMAGE	1951:12:79857:79889	5059719	1	True				
ANR	5063361	AssignmentExpression	dev -> ObjectFilter |= FILTERIMAGE		5059719	0		|=			
ANR	5063362	PtrMemberAccess	dev -> ObjectFilter		5059719	0					
ANR	5063363	Identifier	dev		5059719	0					
ANR	5063364	Identifier	ObjectFilter		5059719	1					
ANR	5063365	Identifier	FILTERIMAGE		5059719	1					
ANR	5063366	ElseStatement	else		5059719	0					
ANR	5063367	ExpressionStatement	dev -> ObjectFilter &= ~FILTERIMAGE	1953:12:79916:79949	5059719	0	True				
ANR	5063368	AssignmentExpression	dev -> ObjectFilter &= ~FILTERIMAGE		5059719	0		&=			
ANR	5063369	PtrMemberAccess	dev -> ObjectFilter		5059719	0					
ANR	5063370	Identifier	dev		5059719	0					
ANR	5063371	Identifier	ObjectFilter		5059719	1					
ANR	5063372	Identifier	~FILTERIMAGE		5059719	1					
ANR	5063373	ExpressionStatement	"code = param_read_bool ( plist , ""FILTERTEXT"" , & temp_bool )"	1956:4:79962:80017	5059719	243	True				
ANR	5063374	AssignmentExpression	"code = param_read_bool ( plist , ""FILTERTEXT"" , & temp_bool )"		5059719	0		=			
ANR	5063375	Identifier	code		5059719	0					
ANR	5063376	CallExpression	"param_read_bool ( plist , ""FILTERTEXT"" , & temp_bool )"		5059719	1					
ANR	5063377	Callee	param_read_bool		5059719	0					
ANR	5063378	Identifier	param_read_bool		5059719	0					
ANR	5063379	ArgumentList	plist		5059719	1					
ANR	5063380	Argument	plist		5059719	0					
ANR	5063381	Identifier	plist		5059719	0					
ANR	5063382	Argument	"""FILTERTEXT"""		5059719	1					
ANR	5063383	PrimaryExpression	"""FILTERTEXT"""		5059719	0					
ANR	5063384	Argument	& temp_bool		5059719	2					
ANR	5063385	UnaryOperationExpression	& temp_bool		5059719	0					
ANR	5063386	UnaryOperator	&		5059719	0					
ANR	5063387	Identifier	temp_bool		5059719	1					
ANR	5063388	IfStatement	if ( code < 0 )		5059719	244					
ANR	5063389	Condition	code < 0	1957:8:80027:80034	5059719	0	True				
ANR	5063390	RelationalExpression	code < 0		5059719	0		<			
ANR	5063391	Identifier	code		5059719	0					
ANR	5063392	PrimaryExpression	0		5059719	1					
ANR	5063393	ExpressionStatement	ecode = code	1958:8:80045:80057	5059719	1	True				
ANR	5063394	AssignmentExpression	ecode = code		5059719	0		=			
ANR	5063395	Identifier	ecode		5059719	0					
ANR	5063396	Identifier	code		5059719	1					
ANR	5063397	IfStatement	if ( code == 0 )		5059719	245					
ANR	5063398	Condition	code == 0	1959:8:80067:80075	5059719	0	True				
ANR	5063399	EqualityExpression	code == 0		5059719	0		==			
ANR	5063400	Identifier	code		5059719	0					
ANR	5063401	PrimaryExpression	0		5059719	1					
ANR	5063402	CompoundStatement		576:19:22766:22766	5059719	1					
ANR	5063403	IfStatement	if ( temp_bool )		5059719	0					
ANR	5063404	Condition	temp_bool	1960:12:80092:80100	5059719	0	True				
ANR	5063405	Identifier	temp_bool		5059719	0					
ANR	5063406	ExpressionStatement	dev -> ObjectFilter |= FILTERTEXT	1961:12:80115:80146	5059719	1	True				
ANR	5063407	AssignmentExpression	dev -> ObjectFilter |= FILTERTEXT		5059719	0		|=			
ANR	5063408	PtrMemberAccess	dev -> ObjectFilter		5059719	0					
ANR	5063409	Identifier	dev		5059719	0					
ANR	5063410	Identifier	ObjectFilter		5059719	1					
ANR	5063411	Identifier	FILTERTEXT		5059719	1					
ANR	5063412	ElseStatement	else		5059719	0					
ANR	5063413	ExpressionStatement	dev -> ObjectFilter &= ~FILTERTEXT	1963:12:80173:80205	5059719	0	True				
ANR	5063414	AssignmentExpression	dev -> ObjectFilter &= ~FILTERTEXT		5059719	0		&=			
ANR	5063415	PtrMemberAccess	dev -> ObjectFilter		5059719	0					
ANR	5063416	Identifier	dev		5059719	0					
ANR	5063417	Identifier	ObjectFilter		5059719	1					
ANR	5063418	Identifier	~FILTERTEXT		5059719	1					
ANR	5063419	ExpressionStatement	"code = param_read_bool ( plist , ""FILTERVECTOR"" , & temp_bool )"	1966:4:80218:80275	5059719	246	True				
ANR	5063420	AssignmentExpression	"code = param_read_bool ( plist , ""FILTERVECTOR"" , & temp_bool )"		5059719	0		=			
ANR	5063421	Identifier	code		5059719	0					
ANR	5063422	CallExpression	"param_read_bool ( plist , ""FILTERVECTOR"" , & temp_bool )"		5059719	1					
ANR	5063423	Callee	param_read_bool		5059719	0					
ANR	5063424	Identifier	param_read_bool		5059719	0					
ANR	5063425	ArgumentList	plist		5059719	1					
ANR	5063426	Argument	plist		5059719	0					
ANR	5063427	Identifier	plist		5059719	0					
ANR	5063428	Argument	"""FILTERVECTOR"""		5059719	1					
ANR	5063429	PrimaryExpression	"""FILTERVECTOR"""		5059719	0					
ANR	5063430	Argument	& temp_bool		5059719	2					
ANR	5063431	UnaryOperationExpression	& temp_bool		5059719	0					
ANR	5063432	UnaryOperator	&		5059719	0					
ANR	5063433	Identifier	temp_bool		5059719	1					
ANR	5063434	IfStatement	if ( code < 0 )		5059719	247					
ANR	5063435	Condition	code < 0	1967:8:80285:80292	5059719	0	True				
ANR	5063436	RelationalExpression	code < 0		5059719	0		<			
ANR	5063437	Identifier	code		5059719	0					
ANR	5063438	PrimaryExpression	0		5059719	1					
ANR	5063439	ExpressionStatement	ecode = code	1968:8:80303:80315	5059719	1	True				
ANR	5063440	AssignmentExpression	ecode = code		5059719	0		=			
ANR	5063441	Identifier	ecode		5059719	0					
ANR	5063442	Identifier	code		5059719	1					
ANR	5063443	IfStatement	if ( code == 0 )		5059719	248					
ANR	5063444	Condition	code == 0	1969:8:80325:80333	5059719	0	True				
ANR	5063445	EqualityExpression	code == 0		5059719	0		==			
ANR	5063446	Identifier	code		5059719	0					
ANR	5063447	PrimaryExpression	0		5059719	1					
ANR	5063448	CompoundStatement		586:19:23024:23024	5059719	1					
ANR	5063449	IfStatement	if ( temp_bool )		5059719	0					
ANR	5063450	Condition	temp_bool	1970:12:80350:80358	5059719	0	True				
ANR	5063451	Identifier	temp_bool		5059719	0					
ANR	5063452	ExpressionStatement	dev -> ObjectFilter |= FILTERVECTOR	1971:12:80373:80406	5059719	1	True				
ANR	5063453	AssignmentExpression	dev -> ObjectFilter |= FILTERVECTOR		5059719	0		|=			
ANR	5063454	PtrMemberAccess	dev -> ObjectFilter		5059719	0					
ANR	5063455	Identifier	dev		5059719	0					
ANR	5063456	Identifier	ObjectFilter		5059719	1					
ANR	5063457	Identifier	FILTERVECTOR		5059719	1					
ANR	5063458	ElseStatement	else		5059719	0					
ANR	5063459	ExpressionStatement	dev -> ObjectFilter &= ~FILTERVECTOR	1973:12:80433:80467	5059719	0	True				
ANR	5063460	AssignmentExpression	dev -> ObjectFilter &= ~FILTERVECTOR		5059719	0		&=			
ANR	5063461	PtrMemberAccess	dev -> ObjectFilter		5059719	0					
ANR	5063462	Identifier	dev		5059719	0					
ANR	5063463	Identifier	ObjectFilter		5059719	1					
ANR	5063464	Identifier	~FILTERVECTOR		5059719	1					
ANR	5063465	ExpressionStatement	code = param_commit ( plist )	1978:4:80584:80610	5059719	249	True				
ANR	5063466	AssignmentExpression	code = param_commit ( plist )		5059719	0		=			
ANR	5063467	Identifier	code		5059719	0					
ANR	5063468	CallExpression	param_commit ( plist )		5059719	1					
ANR	5063469	Callee	param_commit		5059719	0					
ANR	5063470	Identifier	param_commit		5059719	0					
ANR	5063471	ArgumentList	plist		5059719	1					
ANR	5063472	Argument	plist		5059719	0					
ANR	5063473	Identifier	plist		5059719	0					
ANR	5063474	IfStatement	if ( ecode < 0 )		5059719	250					
ANR	5063475	Condition	ecode < 0	1979:8:80620:80628	5059719	0	True				
ANR	5063476	RelationalExpression	ecode < 0		5059719	0		<			
ANR	5063477	Identifier	ecode		5059719	0					
ANR	5063478	PrimaryExpression	0		5059719	1					
ANR	5063479	ReturnStatement	return ecode ;	1980:8:80639:80651	5059719	1	True				
ANR	5063480	Identifier	ecode		5059719	0					
ANR	5063481	IfStatement	if ( code < 0 )		5059719	251					
ANR	5063482	Condition	code < 0	1981:8:80661:80668	5059719	0	True				
ANR	5063483	RelationalExpression	code < 0		5059719	0		<			
ANR	5063484	Identifier	code		5059719	0					
ANR	5063485	PrimaryExpression	0		5059719	1					
ANR	5063486	ReturnStatement	return code ;	1982:8:80679:80690	5059719	1	True				
ANR	5063487	Identifier	code		5059719	0					
ANR	5063488	ExpressionStatement	dev -> color_info . use_antidropout_downscaler = use_antidropout	1992:4:81032:81092	5059719	252	True				
ANR	5063489	AssignmentExpression	dev -> color_info . use_antidropout_downscaler = use_antidropout		5059719	0		=			
ANR	5063490	MemberAccess	dev -> color_info . use_antidropout_downscaler		5059719	0					
ANR	5063491	PtrMemberAccess	dev -> color_info		5059719	0					
ANR	5063492	Identifier	dev		5059719	0					
ANR	5063493	Identifier	color_info		5059719	1					
ANR	5063494	Identifier	use_antidropout_downscaler		5059719	1					
ANR	5063495	Identifier	use_antidropout		5059719	1					
ANR	5063496	IfStatement	if ( hwra . data != 0 && ( dev -> HWResolution [ 0 ] != hwra . data [ 0 ] || dev -> HWResolution [ 1 ] != hwra . data [ 1 ] ) )		5059719	253					
ANR	5063497	Condition	hwra . data != 0 && ( dev -> HWResolution [ 0 ] != hwra . data [ 0 ] || dev -> HWResolution [ 1 ] != hwra . data [ 1 ] )	1994:8:81103:81215	5059719	0	True				
ANR	5063498	AndExpression	hwra . data != 0 && ( dev -> HWResolution [ 0 ] != hwra . data [ 0 ] || dev -> HWResolution [ 1 ] != hwra . data [ 1 ] )		5059719	0		&&			
ANR	5063499	EqualityExpression	hwra . data != 0		5059719	0		!=			
ANR	5063500	MemberAccess	hwra . data		5059719	0					
ANR	5063501	Identifier	hwra		5059719	0					
ANR	5063502	Identifier	data		5059719	1					
ANR	5063503	PrimaryExpression	0		5059719	1					
ANR	5063504	OrExpression	dev -> HWResolution [ 0 ] != hwra . data [ 0 ] || dev -> HWResolution [ 1 ] != hwra . data [ 1 ]		5059719	1		||			
ANR	5063505	EqualityExpression	dev -> HWResolution [ 0 ] != hwra . data [ 0 ]		5059719	0		!=			
ANR	5063506	ArrayIndexing	dev -> HWResolution [ 0 ]		5059719	0					
ANR	5063507	PtrMemberAccess	dev -> HWResolution		5059719	0					
ANR	5063508	Identifier	dev		5059719	0					
ANR	5063509	Identifier	HWResolution		5059719	1					
ANR	5063510	PrimaryExpression	0		5059719	1					
ANR	5063511	ArrayIndexing	hwra . data [ 0 ]		5059719	1					
ANR	5063512	MemberAccess	hwra . data		5059719	0					
ANR	5063513	Identifier	hwra		5059719	0					
ANR	5063514	Identifier	data		5059719	1					
ANR	5063515	PrimaryExpression	0		5059719	1					
ANR	5063516	EqualityExpression	dev -> HWResolution [ 1 ] != hwra . data [ 1 ]		5059719	1		!=			
ANR	5063517	ArrayIndexing	dev -> HWResolution [ 1 ]		5059719	0					
ANR	5063518	PtrMemberAccess	dev -> HWResolution		5059719	0					
ANR	5063519	Identifier	dev		5059719	0					
ANR	5063520	Identifier	HWResolution		5059719	1					
ANR	5063521	PrimaryExpression	1		5059719	1					
ANR	5063522	ArrayIndexing	hwra . data [ 1 ]		5059719	1					
ANR	5063523	MemberAccess	hwra . data		5059719	0					
ANR	5063524	Identifier	hwra		5059719	0					
ANR	5063525	Identifier	data		5059719	1					
ANR	5063526	PrimaryExpression	1		5059719	1					
ANR	5063527	CompoundStatement		614:10:23915:23915	5059719	1					
ANR	5063528	IfStatement	if ( dev -> is_open )		5059719	0					
ANR	5063529	Condition	dev -> is_open	1998:12:81241:81252	5059719	0	True				
ANR	5063530	PtrMemberAccess	dev -> is_open		5059719	0					
ANR	5063531	Identifier	dev		5059719	0					
ANR	5063532	Identifier	is_open		5059719	1					
ANR	5063533	ExpressionStatement	gs_closedevice ( dev )	1999:12:81267:81286	5059719	1	True				
ANR	5063534	CallExpression	gs_closedevice ( dev )		5059719	0					
ANR	5063535	Callee	gs_closedevice		5059719	0					
ANR	5063536	Identifier	gs_closedevice		5059719	0					
ANR	5063537	ArgumentList	dev		5059719	1					
ANR	5063538	Argument	dev		5059719	0					
ANR	5063539	Identifier	dev		5059719	0					
ANR	5063540	ExpressionStatement	"gx_device_set_resolution ( dev , hwra . data [ 0 ] , hwra . data [ 1 ] )"	2000:8:81296:81353	5059719	1	True				
ANR	5063541	CallExpression	"gx_device_set_resolution ( dev , hwra . data [ 0 ] , hwra . data [ 1 ] )"		5059719	0					
ANR	5063542	Callee	gx_device_set_resolution		5059719	0					
ANR	5063543	Identifier	gx_device_set_resolution		5059719	0					
ANR	5063544	ArgumentList	dev		5059719	1					
ANR	5063545	Argument	dev		5059719	0					
ANR	5063546	Identifier	dev		5059719	0					
ANR	5063547	Argument	hwra . data [ 0 ]		5059719	1					
ANR	5063548	ArrayIndexing	hwra . data [ 0 ]		5059719	0					
ANR	5063549	MemberAccess	hwra . data		5059719	0					
ANR	5063550	Identifier	hwra		5059719	0					
ANR	5063551	Identifier	data		5059719	1					
ANR	5063552	PrimaryExpression	0		5059719	1					
ANR	5063553	Argument	hwra . data [ 1 ]		5059719	2					
ANR	5063554	ArrayIndexing	hwra . data [ 1 ]		5059719	0					
ANR	5063555	MemberAccess	hwra . data		5059719	0					
ANR	5063556	Identifier	hwra		5059719	0					
ANR	5063557	Identifier	data		5059719	1					
ANR	5063558	PrimaryExpression	1		5059719	1					
ANR	5063559	IfStatement	if ( ( leadingedge & LEADINGEDGE_MASK ) != ( dev -> LeadingEdge & LEADINGEDGE_MASK ) )		5059719	254					
ANR	5063560	Condition	( leadingedge & LEADINGEDGE_MASK ) != ( dev -> LeadingEdge & LEADINGEDGE_MASK )	2002:8:81369:81449	5059719	0	True				
ANR	5063561	EqualityExpression	( leadingedge & LEADINGEDGE_MASK ) != ( dev -> LeadingEdge & LEADINGEDGE_MASK )		5059719	0		!=			
ANR	5063562	BitAndExpression	leadingedge & LEADINGEDGE_MASK		5059719	0		&			
ANR	5063563	Identifier	leadingedge		5059719	0					
ANR	5063564	Identifier	LEADINGEDGE_MASK		5059719	1					
ANR	5063565	BitAndExpression	dev -> LeadingEdge & LEADINGEDGE_MASK		5059719	1		&			
ANR	5063566	PtrMemberAccess	dev -> LeadingEdge		5059719	0					
ANR	5063567	Identifier	dev		5059719	0					
ANR	5063568	Identifier	LeadingEdge		5059719	1					
ANR	5063569	Identifier	LEADINGEDGE_MASK		5059719	1					
ANR	5063570	CompoundStatement		620:47:24140:24140	5059719	1					
ANR	5063571	ExpressionStatement	dev -> LeadingEdge = leadingedge	2006:8:81613:81643	5059719	0	True				
ANR	5063572	AssignmentExpression	dev -> LeadingEdge = leadingedge		5059719	0		=			
ANR	5063573	PtrMemberAccess	dev -> LeadingEdge		5059719	0					
ANR	5063574	Identifier	dev		5059719	0					
ANR	5063575	Identifier	LeadingEdge		5059719	1					
ANR	5063576	Identifier	leadingedge		5059719	1					
ANR	5063577	IfStatement	if ( dev -> is_open )		5059719	1					
ANR	5063578	Condition	dev -> is_open	2007:12:81657:81668	5059719	0	True				
ANR	5063579	PtrMemberAccess	dev -> is_open		5059719	0					
ANR	5063580	Identifier	dev		5059719	0					
ANR	5063581	Identifier	is_open		5059719	1					
ANR	5063582	ExpressionStatement	gs_closedevice ( dev )	2008:12:81683:81702	5059719	1	True				
ANR	5063583	CallExpression	gs_closedevice ( dev )		5059719	0					
ANR	5063584	Callee	gs_closedevice		5059719	0					
ANR	5063585	Identifier	gs_closedevice		5059719	0					
ANR	5063586	ArgumentList	dev		5059719	1					
ANR	5063587	Argument	dev		5059719	0					
ANR	5063588	Identifier	dev		5059719	0					
ANR	5063589	ExpressionStatement	"gx_device_set_resolution ( dev , dev -> HWResolution [ 0 ] , dev -> HWResolution [ 1 ] )"	2009:8:81712:81785	5059719	2	True				
ANR	5063590	CallExpression	"gx_device_set_resolution ( dev , dev -> HWResolution [ 0 ] , dev -> HWResolution [ 1 ] )"		5059719	0					
ANR	5063591	Callee	gx_device_set_resolution		5059719	0					
ANR	5063592	Identifier	gx_device_set_resolution		5059719	0					
ANR	5063593	ArgumentList	dev		5059719	1					
ANR	5063594	Argument	dev		5059719	0					
ANR	5063595	Identifier	dev		5059719	0					
ANR	5063596	Argument	dev -> HWResolution [ 0 ]		5059719	1					
ANR	5063597	ArrayIndexing	dev -> HWResolution [ 0 ]		5059719	0					
ANR	5063598	PtrMemberAccess	dev -> HWResolution		5059719	0					
ANR	5063599	Identifier	dev		5059719	0					
ANR	5063600	Identifier	HWResolution		5059719	1					
ANR	5063601	PrimaryExpression	0		5059719	1					
ANR	5063602	Argument	dev -> HWResolution [ 1 ]		5059719	2					
ANR	5063603	ArrayIndexing	dev -> HWResolution [ 1 ]		5059719	0					
ANR	5063604	PtrMemberAccess	dev -> HWResolution		5059719	0					
ANR	5063605	Identifier	dev		5059719	0					
ANR	5063606	Identifier	HWResolution		5059719	1					
ANR	5063607	PrimaryExpression	1		5059719	1					
ANR	5063608	ExpressionStatement	dev -> LeadingEdge &= LEADINGEDGE_MASK	2012:4:81854:81890	5059719	255	True				
ANR	5063609	AssignmentExpression	dev -> LeadingEdge &= LEADINGEDGE_MASK		5059719	0		&=			
ANR	5063610	PtrMemberAccess	dev -> LeadingEdge		5059719	0					
ANR	5063611	Identifier	dev		5059719	0					
ANR	5063612	Identifier	LeadingEdge		5059719	1					
ANR	5063613	Identifier	LEADINGEDGE_MASK		5059719	1					
ANR	5063614	ExpressionStatement	dev -> LeadingEdge |= ( leadingedge & LEADINGEDGE_SET_MASK )	2013:4:81896:81952	5059719	256	True				
ANR	5063615	AssignmentExpression	dev -> LeadingEdge |= ( leadingedge & LEADINGEDGE_SET_MASK )		5059719	0		|=			
ANR	5063616	PtrMemberAccess	dev -> LeadingEdge		5059719	0					
ANR	5063617	Identifier	dev		5059719	0					
ANR	5063618	Identifier	LeadingEdge		5059719	1					
ANR	5063619	BitAndExpression	leadingedge & LEADINGEDGE_SET_MASK		5059719	1		&			
ANR	5063620	Identifier	leadingedge		5059719	0					
ANR	5063621	Identifier	LEADINGEDGE_SET_MASK		5059719	1					
ANR	5063622	IfStatement	if ( hwsa . data != 0 && ( dev -> width != hwsa . data [ 0 ] || dev -> height != hwsa . data [ 1 ] ) )		5059719	257					
ANR	5063623	Condition	hwsa . data != 0 && ( dev -> width != hwsa . data [ 0 ] || dev -> height != hwsa . data [ 1 ] )	2015:8:81963:82056	5059719	0	True				
ANR	5063624	AndExpression	hwsa . data != 0 && ( dev -> width != hwsa . data [ 0 ] || dev -> height != hwsa . data [ 1 ] )		5059719	0		&&			
ANR	5063625	EqualityExpression	hwsa . data != 0		5059719	0		!=			
ANR	5063626	MemberAccess	hwsa . data		5059719	0					
ANR	5063627	Identifier	hwsa		5059719	0					
ANR	5063628	Identifier	data		5059719	1					
ANR	5063629	PrimaryExpression	0		5059719	1					
ANR	5063630	OrExpression	dev -> width != hwsa . data [ 0 ] || dev -> height != hwsa . data [ 1 ]		5059719	1		||			
ANR	5063631	EqualityExpression	dev -> width != hwsa . data [ 0 ]		5059719	0		!=			
ANR	5063632	PtrMemberAccess	dev -> width		5059719	0					
ANR	5063633	Identifier	dev		5059719	0					
ANR	5063634	Identifier	width		5059719	1					
ANR	5063635	ArrayIndexing	hwsa . data [ 0 ]		5059719	1					
ANR	5063636	MemberAccess	hwsa . data		5059719	0					
ANR	5063637	Identifier	hwsa		5059719	0					
ANR	5063638	Identifier	data		5059719	1					
ANR	5063639	PrimaryExpression	0		5059719	1					
ANR	5063640	EqualityExpression	dev -> height != hwsa . data [ 1 ]		5059719	1		!=			
ANR	5063641	PtrMemberAccess	dev -> height		5059719	0					
ANR	5063642	Identifier	dev		5059719	0					
ANR	5063643	Identifier	height		5059719	1					
ANR	5063644	ArrayIndexing	hwsa . data [ 1 ]		5059719	1					
ANR	5063645	MemberAccess	hwsa . data		5059719	0					
ANR	5063646	Identifier	hwsa		5059719	0					
ANR	5063647	Identifier	data		5059719	1					
ANR	5063648	PrimaryExpression	1		5059719	1					
ANR	5063649	CompoundStatement		635:10:24756:24756	5059719	1					
ANR	5063650	IfStatement	if ( dev -> is_open )		5059719	0					
ANR	5063651	Condition	dev -> is_open	2019:12:82082:82093	5059719	0	True				
ANR	5063652	PtrMemberAccess	dev -> is_open		5059719	0					
ANR	5063653	Identifier	dev		5059719	0					
ANR	5063654	Identifier	is_open		5059719	1					
ANR	5063655	ExpressionStatement	gs_closedevice ( dev )	2020:12:82108:82127	5059719	1	True				
ANR	5063656	CallExpression	gs_closedevice ( dev )		5059719	0					
ANR	5063657	Callee	gs_closedevice		5059719	0					
ANR	5063658	Identifier	gs_closedevice		5059719	0					
ANR	5063659	ArgumentList	dev		5059719	1					
ANR	5063660	Argument	dev		5059719	0					
ANR	5063661	Identifier	dev		5059719	0					
ANR	5063662	ExpressionStatement	"gx_device_set_width_height ( dev , hwsa . data [ 0 ] , hwsa . data [ 1 ] )"	2021:8:82137:82196	5059719	1	True				
ANR	5063663	CallExpression	"gx_device_set_width_height ( dev , hwsa . data [ 0 ] , hwsa . data [ 1 ] )"		5059719	0					
ANR	5063664	Callee	gx_device_set_width_height		5059719	0					
ANR	5063665	Identifier	gx_device_set_width_height		5059719	0					
ANR	5063666	ArgumentList	dev		5059719	1					
ANR	5063667	Argument	dev		5059719	0					
ANR	5063668	Identifier	dev		5059719	0					
ANR	5063669	Argument	hwsa . data [ 0 ]		5059719	1					
ANR	5063670	ArrayIndexing	hwsa . data [ 0 ]		5059719	0					
ANR	5063671	MemberAccess	hwsa . data		5059719	0					
ANR	5063672	Identifier	hwsa		5059719	0					
ANR	5063673	Identifier	data		5059719	1					
ANR	5063674	PrimaryExpression	0		5059719	1					
ANR	5063675	Argument	hwsa . data [ 1 ]		5059719	2					
ANR	5063676	ArrayIndexing	hwsa . data [ 1 ]		5059719	0					
ANR	5063677	MemberAccess	hwsa . data		5059719	0					
ANR	5063678	Identifier	hwsa		5059719	0					
ANR	5063679	Identifier	data		5059719	1					
ANR	5063680	PrimaryExpression	1		5059719	1					
ANR	5063681	IfStatement	if ( msa . data != 0 && ( dev -> MediaSize [ 0 ] != msa . data [ 0 ] || dev -> MediaSize [ 1 ] != msa . data [ 1 ] ) )		5059719	258					
ANR	5063682	Condition	msa . data != 0 && ( dev -> MediaSize [ 0 ] != msa . data [ 0 ] || dev -> MediaSize [ 1 ] != msa . data [ 1 ] )	2023:8:82212:82315	5059719	0	True				
ANR	5063683	AndExpression	msa . data != 0 && ( dev -> MediaSize [ 0 ] != msa . data [ 0 ] || dev -> MediaSize [ 1 ] != msa . data [ 1 ] )		5059719	0		&&			
ANR	5063684	EqualityExpression	msa . data != 0		5059719	0		!=			
ANR	5063685	MemberAccess	msa . data		5059719	0					
ANR	5063686	Identifier	msa		5059719	0					
ANR	5063687	Identifier	data		5059719	1					
ANR	5063688	PrimaryExpression	0		5059719	1					
ANR	5063689	OrExpression	dev -> MediaSize [ 0 ] != msa . data [ 0 ] || dev -> MediaSize [ 1 ] != msa . data [ 1 ]		5059719	1		||			
ANR	5063690	EqualityExpression	dev -> MediaSize [ 0 ] != msa . data [ 0 ]		5059719	0		!=			
ANR	5063691	ArrayIndexing	dev -> MediaSize [ 0 ]		5059719	0					
ANR	5063692	PtrMemberAccess	dev -> MediaSize		5059719	0					
ANR	5063693	Identifier	dev		5059719	0					
ANR	5063694	Identifier	MediaSize		5059719	1					
ANR	5063695	PrimaryExpression	0		5059719	1					
ANR	5063696	ArrayIndexing	msa . data [ 0 ]		5059719	1					
ANR	5063697	MemberAccess	msa . data		5059719	0					
ANR	5063698	Identifier	msa		5059719	0					
ANR	5063699	Identifier	data		5059719	1					
ANR	5063700	PrimaryExpression	0		5059719	1					
ANR	5063701	EqualityExpression	dev -> MediaSize [ 1 ] != msa . data [ 1 ]		5059719	1		!=			
ANR	5063702	ArrayIndexing	dev -> MediaSize [ 1 ]		5059719	0					
ANR	5063703	PtrMemberAccess	dev -> MediaSize		5059719	0					
ANR	5063704	Identifier	dev		5059719	0					
ANR	5063705	Identifier	MediaSize		5059719	1					
ANR	5063706	PrimaryExpression	1		5059719	1					
ANR	5063707	ArrayIndexing	msa . data [ 1 ]		5059719	1					
ANR	5063708	MemberAccess	msa . data		5059719	0					
ANR	5063709	Identifier	msa		5059719	0					
ANR	5063710	Identifier	data		5059719	1					
ANR	5063711	PrimaryExpression	1		5059719	1					
ANR	5063712	CompoundStatement		643:10:25015:25015	5059719	1					
ANR	5063713	IfStatement	if ( dev -> is_open )		5059719	0					
ANR	5063714	Condition	dev -> is_open	2027:12:82341:82352	5059719	0	True				
ANR	5063715	PtrMemberAccess	dev -> is_open		5059719	0					
ANR	5063716	Identifier	dev		5059719	0					
ANR	5063717	Identifier	is_open		5059719	1					
ANR	5063718	ExpressionStatement	gs_closedevice ( dev )	2028:12:82367:82386	5059719	1	True				
ANR	5063719	CallExpression	gs_closedevice ( dev )		5059719	0					
ANR	5063720	Callee	gs_closedevice		5059719	0					
ANR	5063721	Identifier	gs_closedevice		5059719	0					
ANR	5063722	ArgumentList	dev		5059719	1					
ANR	5063723	Argument	dev		5059719	0					
ANR	5063724	Identifier	dev		5059719	0					
ANR	5063725	ExpressionStatement	"gx_device_set_page_size ( dev , msa . data [ 0 ] , msa . data [ 1 ] )"	2029:8:82396:82450	5059719	1	True				
ANR	5063726	CallExpression	"gx_device_set_page_size ( dev , msa . data [ 0 ] , msa . data [ 1 ] )"		5059719	0					
ANR	5063727	Callee	gx_device_set_page_size		5059719	0					
ANR	5063728	Identifier	gx_device_set_page_size		5059719	0					
ANR	5063729	ArgumentList	dev		5059719	1					
ANR	5063730	Argument	dev		5059719	0					
ANR	5063731	Identifier	dev		5059719	0					
ANR	5063732	Argument	msa . data [ 0 ]		5059719	1					
ANR	5063733	ArrayIndexing	msa . data [ 0 ]		5059719	0					
ANR	5063734	MemberAccess	msa . data		5059719	0					
ANR	5063735	Identifier	msa		5059719	0					
ANR	5063736	Identifier	data		5059719	1					
ANR	5063737	PrimaryExpression	0		5059719	1					
ANR	5063738	Argument	msa . data [ 1 ]		5059719	2					
ANR	5063739	ArrayIndexing	msa . data [ 1 ]		5059719	0					
ANR	5063740	MemberAccess	msa . data		5059719	0					
ANR	5063741	Identifier	msa		5059719	0					
ANR	5063742	Identifier	data		5059719	1					
ANR	5063743	PrimaryExpression	1		5059719	1					
ANR	5063744	IfStatement	if ( ma . data != 0 )		5059719	259					
ANR	5063745	Condition	ma . data != 0	2031:8:82466:82477	5059719	0	True				
ANR	5063746	EqualityExpression	ma . data != 0		5059719	0		!=			
ANR	5063747	MemberAccess	ma . data		5059719	0					
ANR	5063748	Identifier	ma		5059719	0					
ANR	5063749	Identifier	data		5059719	1					
ANR	5063750	PrimaryExpression	0		5059719	1					
ANR	5063751	CompoundStatement		648:22:25168:25168	5059719	1					
ANR	5063752	ExpressionStatement	dev -> Margins [ 0 ] = ma . data [ 0 ]	2032:8:82490:82518	5059719	0	True				
ANR	5063753	AssignmentExpression	dev -> Margins [ 0 ] = ma . data [ 0 ]		5059719	0		=			
ANR	5063754	ArrayIndexing	dev -> Margins [ 0 ]		5059719	0					
ANR	5063755	PtrMemberAccess	dev -> Margins		5059719	0					
ANR	5063756	Identifier	dev		5059719	0					
ANR	5063757	Identifier	Margins		5059719	1					
ANR	5063758	PrimaryExpression	0		5059719	1					
ANR	5063759	ArrayIndexing	ma . data [ 0 ]		5059719	1					
ANR	5063760	MemberAccess	ma . data		5059719	0					
ANR	5063761	Identifier	ma		5059719	0					
ANR	5063762	Identifier	data		5059719	1					
ANR	5063763	PrimaryExpression	0		5059719	1					
ANR	5063764	ExpressionStatement	dev -> Margins [ 1 ] = ma . data [ 1 ]	2033:8:82528:82556	5059719	1	True				
ANR	5063765	AssignmentExpression	dev -> Margins [ 1 ] = ma . data [ 1 ]		5059719	0		=			
ANR	5063766	ArrayIndexing	dev -> Margins [ 1 ]		5059719	0					
ANR	5063767	PtrMemberAccess	dev -> Margins		5059719	0					
ANR	5063768	Identifier	dev		5059719	0					
ANR	5063769	Identifier	Margins		5059719	1					
ANR	5063770	PrimaryExpression	1		5059719	1					
ANR	5063771	ArrayIndexing	ma . data [ 1 ]		5059719	1					
ANR	5063772	MemberAccess	ma . data		5059719	0					
ANR	5063773	Identifier	ma		5059719	0					
ANR	5063774	Identifier	data		5059719	1					
ANR	5063775	PrimaryExpression	1		5059719	1					
ANR	5063776	IfStatement	if ( hwma . data != 0 )		5059719	260					
ANR	5063777	Condition	hwma . data != 0	2035:8:82572:82585	5059719	0	True				
ANR	5063778	EqualityExpression	hwma . data != 0		5059719	0		!=			
ANR	5063779	MemberAccess	hwma . data		5059719	0					
ANR	5063780	Identifier	hwma		5059719	0					
ANR	5063781	Identifier	data		5059719	1					
ANR	5063782	PrimaryExpression	0		5059719	1					
ANR	5063783	CompoundStatement		652:24:25276:25276	5059719	1					
ANR	5063784	ExpressionStatement	dev -> HWMargins [ 0 ] = hwma . data [ 0 ]	2036:8:82598:82630	5059719	0	True				
ANR	5063785	AssignmentExpression	dev -> HWMargins [ 0 ] = hwma . data [ 0 ]		5059719	0		=			
ANR	5063786	ArrayIndexing	dev -> HWMargins [ 0 ]		5059719	0					
ANR	5063787	PtrMemberAccess	dev -> HWMargins		5059719	0					
ANR	5063788	Identifier	dev		5059719	0					
ANR	5063789	Identifier	HWMargins		5059719	1					
ANR	5063790	PrimaryExpression	0		5059719	1					
ANR	5063791	ArrayIndexing	hwma . data [ 0 ]		5059719	1					
ANR	5063792	MemberAccess	hwma . data		5059719	0					
ANR	5063793	Identifier	hwma		5059719	0					
ANR	5063794	Identifier	data		5059719	1					
ANR	5063795	PrimaryExpression	0		5059719	1					
ANR	5063796	ExpressionStatement	dev -> HWMargins [ 1 ] = hwma . data [ 1 ]	2037:8:82640:82672	5059719	1	True				
ANR	5063797	AssignmentExpression	dev -> HWMargins [ 1 ] = hwma . data [ 1 ]		5059719	0		=			
ANR	5063798	ArrayIndexing	dev -> HWMargins [ 1 ]		5059719	0					
ANR	5063799	PtrMemberAccess	dev -> HWMargins		5059719	0					
ANR	5063800	Identifier	dev		5059719	0					
ANR	5063801	Identifier	HWMargins		5059719	1					
ANR	5063802	PrimaryExpression	1		5059719	1					
ANR	5063803	ArrayIndexing	hwma . data [ 1 ]		5059719	1					
ANR	5063804	MemberAccess	hwma . data		5059719	0					
ANR	5063805	Identifier	hwma		5059719	0					
ANR	5063806	Identifier	data		5059719	1					
ANR	5063807	PrimaryExpression	1		5059719	1					
ANR	5063808	ExpressionStatement	dev -> HWMargins [ 2 ] = hwma . data [ 2 ]	2038:8:82682:82714	5059719	2	True				
ANR	5063809	AssignmentExpression	dev -> HWMargins [ 2 ] = hwma . data [ 2 ]		5059719	0		=			
ANR	5063810	ArrayIndexing	dev -> HWMargins [ 2 ]		5059719	0					
ANR	5063811	PtrMemberAccess	dev -> HWMargins		5059719	0					
ANR	5063812	Identifier	dev		5059719	0					
ANR	5063813	Identifier	HWMargins		5059719	1					
ANR	5063814	PrimaryExpression	2		5059719	1					
ANR	5063815	ArrayIndexing	hwma . data [ 2 ]		5059719	1					
ANR	5063816	MemberAccess	hwma . data		5059719	0					
ANR	5063817	Identifier	hwma		5059719	0					
ANR	5063818	Identifier	data		5059719	1					
ANR	5063819	PrimaryExpression	2		5059719	1					
ANR	5063820	ExpressionStatement	dev -> HWMargins [ 3 ] = hwma . data [ 3 ]	2039:8:82724:82756	5059719	3	True				
ANR	5063821	AssignmentExpression	dev -> HWMargins [ 3 ] = hwma . data [ 3 ]		5059719	0		=			
ANR	5063822	ArrayIndexing	dev -> HWMargins [ 3 ]		5059719	0					
ANR	5063823	PtrMemberAccess	dev -> HWMargins		5059719	0					
ANR	5063824	Identifier	dev		5059719	0					
ANR	5063825	Identifier	HWMargins		5059719	1					
ANR	5063826	PrimaryExpression	3		5059719	1					
ANR	5063827	ArrayIndexing	hwma . data [ 3 ]		5059719	1					
ANR	5063828	MemberAccess	hwma . data		5059719	0					
ANR	5063829	Identifier	hwma		5059719	0					
ANR	5063830	Identifier	data		5059719	1					
ANR	5063831	PrimaryExpression	3		5059719	1					
ANR	5063832	ExpressionStatement	dev -> NumCopies = nci	2041:4:82768:82788	5059719	261	True				
ANR	5063833	AssignmentExpression	dev -> NumCopies = nci		5059719	0		=			
ANR	5063834	PtrMemberAccess	dev -> NumCopies		5059719	0					
ANR	5063835	Identifier	dev		5059719	0					
ANR	5063836	Identifier	NumCopies		5059719	1					
ANR	5063837	Identifier	nci		5059719	1					
ANR	5063838	ExpressionStatement	dev -> NumCopies_set = ncset	2042:4:82794:82820	5059719	262	True				
ANR	5063839	AssignmentExpression	dev -> NumCopies_set = ncset		5059719	0		=			
ANR	5063840	PtrMemberAccess	dev -> NumCopies_set		5059719	0					
ANR	5063841	Identifier	dev		5059719	0					
ANR	5063842	Identifier	NumCopies_set		5059719	1					
ANR	5063843	Identifier	ncset		5059719	1					
ANR	5063844	ExpressionStatement	dev -> IgnoreNumCopies = ignc	2043:4:82826:82853	5059719	263	True				
ANR	5063845	AssignmentExpression	dev -> IgnoreNumCopies = ignc		5059719	0		=			
ANR	5063846	PtrMemberAccess	dev -> IgnoreNumCopies		5059719	0					
ANR	5063847	Identifier	dev		5059719	0					
ANR	5063848	Identifier	IgnoreNumCopies		5059719	1					
ANR	5063849	Identifier	ignc		5059719	1					
ANR	5063850	IfStatement	if ( ibba . data != 0 )		5059719	264					
ANR	5063851	Condition	ibba . data != 0	2044:8:82863:82876	5059719	0	True				
ANR	5063852	EqualityExpression	ibba . data != 0		5059719	0		!=			
ANR	5063853	MemberAccess	ibba . data		5059719	0					
ANR	5063854	Identifier	ibba		5059719	0					
ANR	5063855	Identifier	data		5059719	1					
ANR	5063856	PrimaryExpression	0		5059719	1					
ANR	5063857	CompoundStatement		661:24:25567:25567	5059719	1					
ANR	5063858	ExpressionStatement	dev -> ImagingBBox [ 0 ] = ibba . data [ 0 ]	2045:8:82889:82923	5059719	0	True				
ANR	5063859	AssignmentExpression	dev -> ImagingBBox [ 0 ] = ibba . data [ 0 ]		5059719	0		=			
ANR	5063860	ArrayIndexing	dev -> ImagingBBox [ 0 ]		5059719	0					
ANR	5063861	PtrMemberAccess	dev -> ImagingBBox		5059719	0					
ANR	5063862	Identifier	dev		5059719	0					
ANR	5063863	Identifier	ImagingBBox		5059719	1					
ANR	5063864	PrimaryExpression	0		5059719	1					
ANR	5063865	ArrayIndexing	ibba . data [ 0 ]		5059719	1					
ANR	5063866	MemberAccess	ibba . data		5059719	0					
ANR	5063867	Identifier	ibba		5059719	0					
ANR	5063868	Identifier	data		5059719	1					
ANR	5063869	PrimaryExpression	0		5059719	1					
ANR	5063870	ExpressionStatement	dev -> ImagingBBox [ 1 ] = ibba . data [ 1 ]	2046:8:82933:82967	5059719	1	True				
ANR	5063871	AssignmentExpression	dev -> ImagingBBox [ 1 ] = ibba . data [ 1 ]		5059719	0		=			
ANR	5063872	ArrayIndexing	dev -> ImagingBBox [ 1 ]		5059719	0					
ANR	5063873	PtrMemberAccess	dev -> ImagingBBox		5059719	0					
ANR	5063874	Identifier	dev		5059719	0					
ANR	5063875	Identifier	ImagingBBox		5059719	1					
ANR	5063876	PrimaryExpression	1		5059719	1					
ANR	5063877	ArrayIndexing	ibba . data [ 1 ]		5059719	1					
ANR	5063878	MemberAccess	ibba . data		5059719	0					
ANR	5063879	Identifier	ibba		5059719	0					
ANR	5063880	Identifier	data		5059719	1					
ANR	5063881	PrimaryExpression	1		5059719	1					
ANR	5063882	ExpressionStatement	dev -> ImagingBBox [ 2 ] = ibba . data [ 2 ]	2047:8:82977:83011	5059719	2	True				
ANR	5063883	AssignmentExpression	dev -> ImagingBBox [ 2 ] = ibba . data [ 2 ]		5059719	0		=			
ANR	5063884	ArrayIndexing	dev -> ImagingBBox [ 2 ]		5059719	0					
ANR	5063885	PtrMemberAccess	dev -> ImagingBBox		5059719	0					
ANR	5063886	Identifier	dev		5059719	0					
ANR	5063887	Identifier	ImagingBBox		5059719	1					
ANR	5063888	PrimaryExpression	2		5059719	1					
ANR	5063889	ArrayIndexing	ibba . data [ 2 ]		5059719	1					
ANR	5063890	MemberAccess	ibba . data		5059719	0					
ANR	5063891	Identifier	ibba		5059719	0					
ANR	5063892	Identifier	data		5059719	1					
ANR	5063893	PrimaryExpression	2		5059719	1					
ANR	5063894	ExpressionStatement	dev -> ImagingBBox [ 3 ] = ibba . data [ 3 ]	2048:8:83021:83055	5059719	3	True				
ANR	5063895	AssignmentExpression	dev -> ImagingBBox [ 3 ] = ibba . data [ 3 ]		5059719	0		=			
ANR	5063896	ArrayIndexing	dev -> ImagingBBox [ 3 ]		5059719	0					
ANR	5063897	PtrMemberAccess	dev -> ImagingBBox		5059719	0					
ANR	5063898	Identifier	dev		5059719	0					
ANR	5063899	Identifier	ImagingBBox		5059719	1					
ANR	5063900	PrimaryExpression	3		5059719	1					
ANR	5063901	ArrayIndexing	ibba . data [ 3 ]		5059719	1					
ANR	5063902	MemberAccess	ibba . data		5059719	0					
ANR	5063903	Identifier	ibba		5059719	0					
ANR	5063904	Identifier	data		5059719	1					
ANR	5063905	PrimaryExpression	3		5059719	1					
ANR	5063906	ExpressionStatement	dev -> ImagingBBox_set = true	2049:8:83065:83092	5059719	4	True				
ANR	5063907	AssignmentExpression	dev -> ImagingBBox_set = true		5059719	0		=			
ANR	5063908	PtrMemberAccess	dev -> ImagingBBox_set		5059719	0					
ANR	5063909	Identifier	dev		5059719	0					
ANR	5063910	Identifier	ImagingBBox_set		5059719	1					
ANR	5063911	Identifier	true		5059719	1					
ANR	5063912	ElseStatement	else		5059719	0					
ANR	5063913	IfStatement	if ( ibbnull )		5059719	0					
ANR	5063914	Condition	ibbnull	2050:15:83109:83115	5059719	0	True				
ANR	5063915	Identifier	ibbnull		5059719	0					
ANR	5063916	CompoundStatement		667:24:25806:25806	5059719	1					
ANR	5063917	ExpressionStatement	dev -> ImagingBBox_set = false	2051:8:83128:83156	5059719	0	True				
ANR	5063918	AssignmentExpression	dev -> ImagingBBox_set = false		5059719	0		=			
ANR	5063919	PtrMemberAccess	dev -> ImagingBBox_set		5059719	0					
ANR	5063920	Identifier	dev		5059719	0					
ANR	5063921	Identifier	ImagingBBox_set		5059719	1					
ANR	5063922	Identifier	false		5059719	1					
ANR	5063923	ExpressionStatement	dev -> UseCIEColor = ucc	2053:4:83168:83190	5059719	265	True				
ANR	5063924	AssignmentExpression	dev -> UseCIEColor = ucc		5059719	0		=			
ANR	5063925	PtrMemberAccess	dev -> UseCIEColor		5059719	0					
ANR	5063926	Identifier	dev		5059719	0					
ANR	5063927	Identifier	UseCIEColor		5059719	1					
ANR	5063928	Identifier	ucc		5059719	1					
ANR	5063929	ExpressionStatement	"dev -> color_info . anti_alias . text_bits = param_normalize_anti_alias_bits ( max ( dev -> color_info . max_gray , dev -> color_info . max_color ) , tab )"	2054:8:83200:83373	5059719	266	True				
ANR	5063930	AssignmentExpression	"dev -> color_info . anti_alias . text_bits = param_normalize_anti_alias_bits ( max ( dev -> color_info . max_gray , dev -> color_info . max_color ) , tab )"		5059719	0		=			
ANR	5063931	MemberAccess	dev -> color_info . anti_alias . text_bits		5059719	0					
ANR	5063932	MemberAccess	dev -> color_info . anti_alias		5059719	0					
ANR	5063933	PtrMemberAccess	dev -> color_info		5059719	0					
ANR	5063934	Identifier	dev		5059719	0					
ANR	5063935	Identifier	color_info		5059719	1					
ANR	5063936	Identifier	anti_alias		5059719	1					
ANR	5063937	Identifier	text_bits		5059719	1					
ANR	5063938	CallExpression	"param_normalize_anti_alias_bits ( max ( dev -> color_info . max_gray , dev -> color_info . max_color ) , tab )"		5059719	1					
ANR	5063939	Callee	param_normalize_anti_alias_bits		5059719	0					
ANR	5063940	Identifier	param_normalize_anti_alias_bits		5059719	0					
ANR	5063941	ArgumentList	"max ( dev -> color_info . max_gray , dev -> color_info . max_color )"		5059719	1					
ANR	5063942	Argument	"max ( dev -> color_info . max_gray , dev -> color_info . max_color )"		5059719	0					
ANR	5063943	CallExpression	"max ( dev -> color_info . max_gray , dev -> color_info . max_color )"		5059719	0					
ANR	5063944	Callee	max		5059719	0					
ANR	5063945	Identifier	max		5059719	0					
ANR	5063946	ArgumentList	dev -> color_info . max_gray		5059719	1					
ANR	5063947	Argument	dev -> color_info . max_gray		5059719	0					
ANR	5063948	MemberAccess	dev -> color_info . max_gray		5059719	0					
ANR	5063949	PtrMemberAccess	dev -> color_info		5059719	0					
ANR	5063950	Identifier	dev		5059719	0					
ANR	5063951	Identifier	color_info		5059719	1					
ANR	5063952	Identifier	max_gray		5059719	1					
ANR	5063953	Argument	dev -> color_info . max_color		5059719	1					
ANR	5063954	MemberAccess	dev -> color_info . max_color		5059719	0					
ANR	5063955	PtrMemberAccess	dev -> color_info		5059719	0					
ANR	5063956	Identifier	dev		5059719	0					
ANR	5063957	Identifier	color_info		5059719	1					
ANR	5063958	Identifier	max_color		5059719	1					
ANR	5063959	Argument	tab		5059719	1					
ANR	5063960	Identifier	tab		5059719	0					
ANR	5063961	ExpressionStatement	"dev -> color_info . anti_alias . graphics_bits = param_normalize_anti_alias_bits ( max ( dev -> color_info . max_gray , dev -> color_info . max_color ) , gab )"	2057:8:83383:83560	5059719	267	True				
ANR	5063962	AssignmentExpression	"dev -> color_info . anti_alias . graphics_bits = param_normalize_anti_alias_bits ( max ( dev -> color_info . max_gray , dev -> color_info . max_color ) , gab )"		5059719	0		=			
ANR	5063963	MemberAccess	dev -> color_info . anti_alias . graphics_bits		5059719	0					
ANR	5063964	MemberAccess	dev -> color_info . anti_alias		5059719	0					
ANR	5063965	PtrMemberAccess	dev -> color_info		5059719	0					
ANR	5063966	Identifier	dev		5059719	0					
ANR	5063967	Identifier	color_info		5059719	1					
ANR	5063968	Identifier	anti_alias		5059719	1					
ANR	5063969	Identifier	graphics_bits		5059719	1					
ANR	5063970	CallExpression	"param_normalize_anti_alias_bits ( max ( dev -> color_info . max_gray , dev -> color_info . max_color ) , gab )"		5059719	1					
ANR	5063971	Callee	param_normalize_anti_alias_bits		5059719	0					
ANR	5063972	Identifier	param_normalize_anti_alias_bits		5059719	0					
ANR	5063973	ArgumentList	"max ( dev -> color_info . max_gray , dev -> color_info . max_color )"		5059719	1					
ANR	5063974	Argument	"max ( dev -> color_info . max_gray , dev -> color_info . max_color )"		5059719	0					
ANR	5063975	CallExpression	"max ( dev -> color_info . max_gray , dev -> color_info . max_color )"		5059719	0					
ANR	5063976	Callee	max		5059719	0					
ANR	5063977	Identifier	max		5059719	0					
ANR	5063978	ArgumentList	dev -> color_info . max_gray		5059719	1					
ANR	5063979	Argument	dev -> color_info . max_gray		5059719	0					
ANR	5063980	MemberAccess	dev -> color_info . max_gray		5059719	0					
ANR	5063981	PtrMemberAccess	dev -> color_info		5059719	0					
ANR	5063982	Identifier	dev		5059719	0					
ANR	5063983	Identifier	color_info		5059719	1					
ANR	5063984	Identifier	max_gray		5059719	1					
ANR	5063985	Argument	dev -> color_info . max_color		5059719	1					
ANR	5063986	MemberAccess	dev -> color_info . max_color		5059719	0					
ANR	5063987	PtrMemberAccess	dev -> color_info		5059719	0					
ANR	5063988	Identifier	dev		5059719	0					
ANR	5063989	Identifier	color_info		5059719	1					
ANR	5063990	Identifier	max_color		5059719	1					
ANR	5063991	Argument	gab		5059719	1					
ANR	5063992	Identifier	gab		5059719	0					
ANR	5063993	ExpressionStatement	dev -> LockSafetyParams = locksafe	2060:4:83566:83598	5059719	268	True				
ANR	5063994	AssignmentExpression	dev -> LockSafetyParams = locksafe		5059719	0		=			
ANR	5063995	PtrMemberAccess	dev -> LockSafetyParams		5059719	0					
ANR	5063996	Identifier	dev		5059719	0					
ANR	5063997	Identifier	LockSafetyParams		5059719	1					
ANR	5063998	Identifier	locksafe		5059719	1					
ANR	5063999	ExpressionStatement	dev -> MaxPatternBitmap = mpbm	2061:4:83604:83632	5059719	269	True				
ANR	5064000	AssignmentExpression	dev -> MaxPatternBitmap = mpbm		5059719	0		=			
ANR	5064001	PtrMemberAccess	dev -> MaxPatternBitmap		5059719	0					
ANR	5064002	Identifier	dev		5059719	0					
ANR	5064003	Identifier	MaxPatternBitmap		5059719	1					
ANR	5064004	Identifier	mpbm		5059719	1					
ANR	5064005	ExpressionStatement	dev -> interpolate_control = ic	2062:4:83638:83667	5059719	270	True				
ANR	5064006	AssignmentExpression	dev -> interpolate_control = ic		5059719	0		=			
ANR	5064007	PtrMemberAccess	dev -> interpolate_control		5059719	0					
ANR	5064008	Identifier	dev		5059719	0					
ANR	5064009	Identifier	interpolate_control		5059719	1					
ANR	5064010	Identifier	ic		5059719	1					
ANR	5064011	ExpressionStatement	dev -> space_params = sp	2063:4:83673:83695	5059719	271	True				
ANR	5064012	AssignmentExpression	dev -> space_params = sp		5059719	0		=			
ANR	5064013	PtrMemberAccess	dev -> space_params		5059719	0					
ANR	5064014	Identifier	dev		5059719	0					
ANR	5064015	Identifier	space_params		5059719	1					
ANR	5064016	Identifier	sp		5059719	1					
ANR	5064017	ExpressionStatement	dev -> page_uses_transparency = page_uses_transparency	2064:4:83701:83753	5059719	272	True				
ANR	5064018	AssignmentExpression	dev -> page_uses_transparency = page_uses_transparency		5059719	0		=			
ANR	5064019	PtrMemberAccess	dev -> page_uses_transparency		5059719	0					
ANR	5064020	Identifier	dev		5059719	0					
ANR	5064021	Identifier	page_uses_transparency		5059719	1					
ANR	5064022	Identifier	page_uses_transparency		5059719	1					
ANR	5064023	ExpressionStatement	gx_device_decache_colors ( dev )	2065:4:83759:83788	5059719	273	True				
ANR	5064024	CallExpression	gx_device_decache_colors ( dev )		5059719	0					
ANR	5064025	Callee	gx_device_decache_colors		5059719	0					
ANR	5064026	Identifier	gx_device_decache_colors		5059719	0					
ANR	5064027	ArgumentList	dev		5059719	1					
ANR	5064028	Argument	dev		5059719	0					
ANR	5064029	Identifier	dev		5059719	0					
ANR	5064030	IfStatement	if ( dev -> icc_struct != NULL )		5059719	274					
ANR	5064031	Condition	dev -> icc_struct != NULL	2069:8:83935:83957	5059719	0	True				
ANR	5064032	EqualityExpression	dev -> icc_struct != NULL		5059719	0		!=			
ANR	5064033	PtrMemberAccess	dev -> icc_struct		5059719	0					
ANR	5064034	Identifier	dev		5059719	0					
ANR	5064035	Identifier	icc_struct		5059719	1					
ANR	5064036	Identifier	NULL		5059719	1					
ANR	5064037	CompoundStatement		686:33:26648:26648	5059719	1					
ANR	5064038	ExpressionStatement	"code = gx_default_put_intent ( rend_intent [ 0 ] , dev , gsDEFAULTPROFILE )"	2071:8:84007:84074	5059719	0	True				
ANR	5064039	AssignmentExpression	"code = gx_default_put_intent ( rend_intent [ 0 ] , dev , gsDEFAULTPROFILE )"		5059719	0		=			
ANR	5064040	Identifier	code		5059719	0					
ANR	5064041	CallExpression	"gx_default_put_intent ( rend_intent [ 0 ] , dev , gsDEFAULTPROFILE )"		5059719	1					
ANR	5064042	Callee	gx_default_put_intent		5059719	0					
ANR	5064043	Identifier	gx_default_put_intent		5059719	0					
ANR	5064044	ArgumentList	rend_intent [ 0 ]		5059719	1					
ANR	5064045	Argument	rend_intent [ 0 ]		5059719	0					
ANR	5064046	ArrayIndexing	rend_intent [ 0 ]		5059719	0					
ANR	5064047	Identifier	rend_intent		5059719	0					
ANR	5064048	PrimaryExpression	0		5059719	1					
ANR	5064049	Argument	dev		5059719	1					
ANR	5064050	Identifier	dev		5059719	0					
ANR	5064051	Argument	gsDEFAULTPROFILE		5059719	2					
ANR	5064052	Identifier	gsDEFAULTPROFILE		5059719	0					
ANR	5064053	IfStatement	if ( code < 0 )		5059719	1					
ANR	5064054	Condition	code < 0	2072:12:84088:84095	5059719	0	True				
ANR	5064055	RelationalExpression	code < 0		5059719	0		<			
ANR	5064056	Identifier	code		5059719	0					
ANR	5064057	PrimaryExpression	0		5059719	1					
ANR	5064058	ReturnStatement	return code ;	2073:12:84110:84121	5059719	1	True				
ANR	5064059	Identifier	code		5059719	0					
ANR	5064060	ExpressionStatement	"code = gx_default_put_blackptcomp ( blackptcomp [ 0 ] , dev , gsDEFAULTPROFILE )"	2074:8:84131:84203	5059719	2	True				
ANR	5064061	AssignmentExpression	"code = gx_default_put_blackptcomp ( blackptcomp [ 0 ] , dev , gsDEFAULTPROFILE )"		5059719	0		=			
ANR	5064062	Identifier	code		5059719	0					
ANR	5064063	CallExpression	"gx_default_put_blackptcomp ( blackptcomp [ 0 ] , dev , gsDEFAULTPROFILE )"		5059719	1					
ANR	5064064	Callee	gx_default_put_blackptcomp		5059719	0					
ANR	5064065	Identifier	gx_default_put_blackptcomp		5059719	0					
ANR	5064066	ArgumentList	blackptcomp [ 0 ]		5059719	1					
ANR	5064067	Argument	blackptcomp [ 0 ]		5059719	0					
ANR	5064068	ArrayIndexing	blackptcomp [ 0 ]		5059719	0					
ANR	5064069	Identifier	blackptcomp		5059719	0					
ANR	5064070	PrimaryExpression	0		5059719	1					
ANR	5064071	Argument	dev		5059719	1					
ANR	5064072	Identifier	dev		5059719	0					
ANR	5064073	Argument	gsDEFAULTPROFILE		5059719	2					
ANR	5064074	Identifier	gsDEFAULTPROFILE		5059719	0					
ANR	5064075	IfStatement	if ( code < 0 )		5059719	3					
ANR	5064076	Condition	code < 0	2075:12:84217:84224	5059719	0	True				
ANR	5064077	RelationalExpression	code < 0		5059719	0		<			
ANR	5064078	Identifier	code		5059719	0					
ANR	5064079	PrimaryExpression	0		5059719	1					
ANR	5064080	ReturnStatement	return code ;	2076:12:84239:84250	5059719	1	True				
ANR	5064081	Identifier	code		5059719	0					
ANR	5064082	ExpressionStatement	"code = gx_default_put_blackpreserve ( blackpreserve [ 0 ] , dev , gsDEFAULTPROFILE )"	2077:8:84260:84336	5059719	4	True				
ANR	5064083	AssignmentExpression	"code = gx_default_put_blackpreserve ( blackpreserve [ 0 ] , dev , gsDEFAULTPROFILE )"		5059719	0		=			
ANR	5064084	Identifier	code		5059719	0					
ANR	5064085	CallExpression	"gx_default_put_blackpreserve ( blackpreserve [ 0 ] , dev , gsDEFAULTPROFILE )"		5059719	1					
ANR	5064086	Callee	gx_default_put_blackpreserve		5059719	0					
ANR	5064087	Identifier	gx_default_put_blackpreserve		5059719	0					
ANR	5064088	ArgumentList	blackpreserve [ 0 ]		5059719	1					
ANR	5064089	Argument	blackpreserve [ 0 ]		5059719	0					
ANR	5064090	ArrayIndexing	blackpreserve [ 0 ]		5059719	0					
ANR	5064091	Identifier	blackpreserve		5059719	0					
ANR	5064092	PrimaryExpression	0		5059719	1					
ANR	5064093	Argument	dev		5059719	1					
ANR	5064094	Identifier	dev		5059719	0					
ANR	5064095	Argument	gsDEFAULTPROFILE		5059719	2					
ANR	5064096	Identifier	gsDEFAULTPROFILE		5059719	0					
ANR	5064097	IfStatement	if ( code < 0 )		5059719	5					
ANR	5064098	Condition	code < 0	2078:12:84350:84357	5059719	0	True				
ANR	5064099	RelationalExpression	code < 0		5059719	0		<			
ANR	5064100	Identifier	code		5059719	0					
ANR	5064101	PrimaryExpression	0		5059719	1					
ANR	5064102	ReturnStatement	return code ;	2079:12:84372:84383	5059719	1	True				
ANR	5064103	Identifier	code		5059719	0					
ANR	5064104	ForStatement	for ( k = 1 ; k < NUM_DEVICE_PROFILES ; k ++ )		5059719	6					
ANR	5064105	ForInit	k = 1 ;	2082:13:84558:84563	5059719	0	True				
ANR	5064106	AssignmentExpression	k = 1		5059719	0		=			
ANR	5064107	Identifier	k		5059719	0					
ANR	5064108	PrimaryExpression	1		5059719	1					
ANR	5064109	Condition	k < NUM_DEVICE_PROFILES	2082:20:84565:84587	5059719	1	True				
ANR	5064110	RelationalExpression	k < NUM_DEVICE_PROFILES		5059719	0		<			
ANR	5064111	Identifier	k		5059719	0					
ANR	5064112	Identifier	NUM_DEVICE_PROFILES		5059719	1					
ANR	5064113	PostIncDecOperationExpression	k ++	2082:45:84590:84592	5059719	2	True				
ANR	5064114	Identifier	k		5059719	0					
ANR	5064115	IncDec	++		5059719	1					
ANR	5064116	CompoundStatement		699:50:27283:27283	5059719	3					
ANR	5064117	IfStatement	if ( rend_intent [ 0 ] != gsRINOTSPECIFIED && rend_intent [ k ] == gsRINOTSPECIFIED )		5059719	0					
ANR	5064118	Condition	rend_intent [ 0 ] != gsRINOTSPECIFIED && rend_intent [ k ] == gsRINOTSPECIFIED	2083:16:84613:84700	5059719	0	True				
ANR	5064119	AndExpression	rend_intent [ 0 ] != gsRINOTSPECIFIED && rend_intent [ k ] == gsRINOTSPECIFIED		5059719	0		&&			
ANR	5064120	EqualityExpression	rend_intent [ 0 ] != gsRINOTSPECIFIED		5059719	0		!=			
ANR	5064121	ArrayIndexing	rend_intent [ 0 ]		5059719	0					
ANR	5064122	Identifier	rend_intent		5059719	0					
ANR	5064123	PrimaryExpression	0		5059719	1					
ANR	5064124	Identifier	gsRINOTSPECIFIED		5059719	1					
ANR	5064125	EqualityExpression	rend_intent [ k ] == gsRINOTSPECIFIED		5059719	1		==			
ANR	5064126	ArrayIndexing	rend_intent [ k ]		5059719	0					
ANR	5064127	Identifier	rend_intent		5059719	0					
ANR	5064128	Identifier	k		5059719	1					
ANR	5064129	Identifier	gsRINOTSPECIFIED		5059719	1					
ANR	5064130	CompoundStatement		701:52:27391:27391	5059719	1					
ANR	5064131	ExpressionStatement	"code = gx_default_put_intent ( rend_intent [ 0 ] , dev , profile_types [ k ] )"	2085:16:84721:84788	5059719	0	True				
ANR	5064132	AssignmentExpression	"code = gx_default_put_intent ( rend_intent [ 0 ] , dev , profile_types [ k ] )"		5059719	0		=			
ANR	5064133	Identifier	code		5059719	0					
ANR	5064134	CallExpression	"gx_default_put_intent ( rend_intent [ 0 ] , dev , profile_types [ k ] )"		5059719	1					
ANR	5064135	Callee	gx_default_put_intent		5059719	0					
ANR	5064136	Identifier	gx_default_put_intent		5059719	0					
ANR	5064137	ArgumentList	rend_intent [ 0 ]		5059719	1					
ANR	5064138	Argument	rend_intent [ 0 ]		5059719	0					
ANR	5064139	ArrayIndexing	rend_intent [ 0 ]		5059719	0					
ANR	5064140	Identifier	rend_intent		5059719	0					
ANR	5064141	PrimaryExpression	0		5059719	1					
ANR	5064142	Argument	dev		5059719	1					
ANR	5064143	Identifier	dev		5059719	0					
ANR	5064144	Argument	profile_types [ k ]		5059719	2					
ANR	5064145	ArrayIndexing	profile_types [ k ]		5059719	0					
ANR	5064146	Identifier	profile_types		5059719	0					
ANR	5064147	Identifier	k		5059719	1					
ANR	5064148	ElseStatement	else		5059719	0					
ANR	5064149	CompoundStatement		703:19:27497:27497	5059719	0					
ANR	5064150	ExpressionStatement	"code = gx_default_put_intent ( rend_intent [ k ] , dev , profile_types [ k ] )"	2087:16:84827:84894	5059719	0	True				
ANR	5064151	AssignmentExpression	"code = gx_default_put_intent ( rend_intent [ k ] , dev , profile_types [ k ] )"		5059719	0		=			
ANR	5064152	Identifier	code		5059719	0					
ANR	5064153	CallExpression	"gx_default_put_intent ( rend_intent [ k ] , dev , profile_types [ k ] )"		5059719	1					
ANR	5064154	Callee	gx_default_put_intent		5059719	0					
ANR	5064155	Identifier	gx_default_put_intent		5059719	0					
ANR	5064156	ArgumentList	rend_intent [ k ]		5059719	1					
ANR	5064157	Argument	rend_intent [ k ]		5059719	0					
ANR	5064158	ArrayIndexing	rend_intent [ k ]		5059719	0					
ANR	5064159	Identifier	rend_intent		5059719	0					
ANR	5064160	Identifier	k		5059719	1					
ANR	5064161	Argument	dev		5059719	1					
ANR	5064162	Identifier	dev		5059719	0					
ANR	5064163	Argument	profile_types [ k ]		5059719	2					
ANR	5064164	ArrayIndexing	profile_types [ k ]		5059719	0					
ANR	5064165	Identifier	profile_types		5059719	0					
ANR	5064166	Identifier	k		5059719	1					
ANR	5064167	IfStatement	if ( code < 0 )		5059719	1					
ANR	5064168	Condition	code < 0	2089:16:84926:84933	5059719	0	True				
ANR	5064169	RelationalExpression	code < 0		5059719	0		<			
ANR	5064170	Identifier	code		5059719	0					
ANR	5064171	PrimaryExpression	0		5059719	1					
ANR	5064172	ReturnStatement	return code ;	2090:16:84952:84963	5059719	1	True				
ANR	5064173	Identifier	code		5059719	0					
ANR	5064174	IfStatement	if ( blackptcomp [ 0 ] != gsBPNOTSPECIFIED && blackptcomp [ k ] == gsBPNOTSPECIFIED )		5059719	2					
ANR	5064175	Condition	blackptcomp [ 0 ] != gsBPNOTSPECIFIED && blackptcomp [ k ] == gsBPNOTSPECIFIED	2091:16:84981:85068	5059719	0	True				
ANR	5064176	AndExpression	blackptcomp [ 0 ] != gsBPNOTSPECIFIED && blackptcomp [ k ] == gsBPNOTSPECIFIED		5059719	0		&&			
ANR	5064177	EqualityExpression	blackptcomp [ 0 ] != gsBPNOTSPECIFIED		5059719	0		!=			
ANR	5064178	ArrayIndexing	blackptcomp [ 0 ]		5059719	0					
ANR	5064179	Identifier	blackptcomp		5059719	0					
ANR	5064180	PrimaryExpression	0		5059719	1					
ANR	5064181	Identifier	gsBPNOTSPECIFIED		5059719	1					
ANR	5064182	EqualityExpression	blackptcomp [ k ] == gsBPNOTSPECIFIED		5059719	1		==			
ANR	5064183	ArrayIndexing	blackptcomp [ k ]		5059719	0					
ANR	5064184	Identifier	blackptcomp		5059719	0					
ANR	5064185	Identifier	k		5059719	1					
ANR	5064186	Identifier	gsBPNOTSPECIFIED		5059719	1					
ANR	5064187	CompoundStatement		709:52:27759:27759	5059719	1					
ANR	5064188	ExpressionStatement	"code = gx_default_put_blackptcomp ( blackptcomp [ 0 ] , dev , profile_types [ k ] )"	2093:16:85089:85161	5059719	0	True				
ANR	5064189	AssignmentExpression	"code = gx_default_put_blackptcomp ( blackptcomp [ 0 ] , dev , profile_types [ k ] )"		5059719	0		=			
ANR	5064190	Identifier	code		5059719	0					
ANR	5064191	CallExpression	"gx_default_put_blackptcomp ( blackptcomp [ 0 ] , dev , profile_types [ k ] )"		5059719	1					
ANR	5064192	Callee	gx_default_put_blackptcomp		5059719	0					
ANR	5064193	Identifier	gx_default_put_blackptcomp		5059719	0					
ANR	5064194	ArgumentList	blackptcomp [ 0 ]		5059719	1					
ANR	5064195	Argument	blackptcomp [ 0 ]		5059719	0					
ANR	5064196	ArrayIndexing	blackptcomp [ 0 ]		5059719	0					
ANR	5064197	Identifier	blackptcomp		5059719	0					
ANR	5064198	PrimaryExpression	0		5059719	1					
ANR	5064199	Argument	dev		5059719	1					
ANR	5064200	Identifier	dev		5059719	0					
ANR	5064201	Argument	profile_types [ k ]		5059719	2					
ANR	5064202	ArrayIndexing	profile_types [ k ]		5059719	0					
ANR	5064203	Identifier	profile_types		5059719	0					
ANR	5064204	Identifier	k		5059719	1					
ANR	5064205	ElseStatement	else		5059719	0					
ANR	5064206	CompoundStatement		711:19:27870:27870	5059719	0					
ANR	5064207	ExpressionStatement	"code = gx_default_put_blackptcomp ( blackptcomp [ k ] , dev , profile_types [ k ] )"	2095:16:85200:85272	5059719	0	True				
ANR	5064208	AssignmentExpression	"code = gx_default_put_blackptcomp ( blackptcomp [ k ] , dev , profile_types [ k ] )"		5059719	0		=			
ANR	5064209	Identifier	code		5059719	0					
ANR	5064210	CallExpression	"gx_default_put_blackptcomp ( blackptcomp [ k ] , dev , profile_types [ k ] )"		5059719	1					
ANR	5064211	Callee	gx_default_put_blackptcomp		5059719	0					
ANR	5064212	Identifier	gx_default_put_blackptcomp		5059719	0					
ANR	5064213	ArgumentList	blackptcomp [ k ]		5059719	1					
ANR	5064214	Argument	blackptcomp [ k ]		5059719	0					
ANR	5064215	ArrayIndexing	blackptcomp [ k ]		5059719	0					
ANR	5064216	Identifier	blackptcomp		5059719	0					
ANR	5064217	Identifier	k		5059719	1					
ANR	5064218	Argument	dev		5059719	1					
ANR	5064219	Identifier	dev		5059719	0					
ANR	5064220	Argument	profile_types [ k ]		5059719	2					
ANR	5064221	ArrayIndexing	profile_types [ k ]		5059719	0					
ANR	5064222	Identifier	profile_types		5059719	0					
ANR	5064223	Identifier	k		5059719	1					
ANR	5064224	IfStatement	if ( code < 0 )		5059719	3					
ANR	5064225	Condition	code < 0	2097:16:85304:85311	5059719	0	True				
ANR	5064226	RelationalExpression	code < 0		5059719	0		<			
ANR	5064227	Identifier	code		5059719	0					
ANR	5064228	PrimaryExpression	0		5059719	1					
ANR	5064229	ReturnStatement	return code ;	2098:16:85330:85341	5059719	1	True				
ANR	5064230	Identifier	code		5059719	0					
ANR	5064231	IfStatement	if ( blackpreserve [ 0 ] != gsBKPRESNOTSPECIFIED && blackpreserve [ k ] == gsBKPRESNOTSPECIFIED )		5059719	4					
ANR	5064232	Condition	blackpreserve [ 0 ] != gsBKPRESNOTSPECIFIED && blackpreserve [ k ] == gsBKPRESNOTSPECIFIED	2099:16:85359:85458	5059719	0	True				
ANR	5064233	AndExpression	blackpreserve [ 0 ] != gsBKPRESNOTSPECIFIED && blackpreserve [ k ] == gsBKPRESNOTSPECIFIED		5059719	0		&&			
ANR	5064234	EqualityExpression	blackpreserve [ 0 ] != gsBKPRESNOTSPECIFIED		5059719	0		!=			
ANR	5064235	ArrayIndexing	blackpreserve [ 0 ]		5059719	0					
ANR	5064236	Identifier	blackpreserve		5059719	0					
ANR	5064237	PrimaryExpression	0		5059719	1					
ANR	5064238	Identifier	gsBKPRESNOTSPECIFIED		5059719	1					
ANR	5064239	EqualityExpression	blackpreserve [ k ] == gsBKPRESNOTSPECIFIED		5059719	1		==			
ANR	5064240	ArrayIndexing	blackpreserve [ k ]		5059719	0					
ANR	5064241	Identifier	blackpreserve		5059719	0					
ANR	5064242	Identifier	k		5059719	1					
ANR	5064243	Identifier	gsBKPRESNOTSPECIFIED		5059719	1					
ANR	5064244	CompoundStatement		717:58:28149:28149	5059719	1					
ANR	5064245	ExpressionStatement	"code = gx_default_put_blackpreserve ( blackpreserve [ 0 ] , dev , profile_types [ k ] )"	2101:16:85479:85555	5059719	0	True				
ANR	5064246	AssignmentExpression	"code = gx_default_put_blackpreserve ( blackpreserve [ 0 ] , dev , profile_types [ k ] )"		5059719	0		=			
ANR	5064247	Identifier	code		5059719	0					
ANR	5064248	CallExpression	"gx_default_put_blackpreserve ( blackpreserve [ 0 ] , dev , profile_types [ k ] )"		5059719	1					
ANR	5064249	Callee	gx_default_put_blackpreserve		5059719	0					
ANR	5064250	Identifier	gx_default_put_blackpreserve		5059719	0					
ANR	5064251	ArgumentList	blackpreserve [ 0 ]		5059719	1					
ANR	5064252	Argument	blackpreserve [ 0 ]		5059719	0					
ANR	5064253	ArrayIndexing	blackpreserve [ 0 ]		5059719	0					
ANR	5064254	Identifier	blackpreserve		5059719	0					
ANR	5064255	PrimaryExpression	0		5059719	1					
ANR	5064256	Argument	dev		5059719	1					
ANR	5064257	Identifier	dev		5059719	0					
ANR	5064258	Argument	profile_types [ k ]		5059719	2					
ANR	5064259	ArrayIndexing	profile_types [ k ]		5059719	0					
ANR	5064260	Identifier	profile_types		5059719	0					
ANR	5064261	Identifier	k		5059719	1					
ANR	5064262	ElseStatement	else		5059719	0					
ANR	5064263	CompoundStatement		719:19:28264:28264	5059719	0					
ANR	5064264	ExpressionStatement	"code = gx_default_put_blackpreserve ( blackpreserve [ k ] , dev , profile_types [ k ] )"	2103:16:85594:85670	5059719	0	True				
ANR	5064265	AssignmentExpression	"code = gx_default_put_blackpreserve ( blackpreserve [ k ] , dev , profile_types [ k ] )"		5059719	0		=			
ANR	5064266	Identifier	code		5059719	0					
ANR	5064267	CallExpression	"gx_default_put_blackpreserve ( blackpreserve [ k ] , dev , profile_types [ k ] )"		5059719	1					
ANR	5064268	Callee	gx_default_put_blackpreserve		5059719	0					
ANR	5064269	Identifier	gx_default_put_blackpreserve		5059719	0					
ANR	5064270	ArgumentList	blackpreserve [ k ]		5059719	1					
ANR	5064271	Argument	blackpreserve [ k ]		5059719	0					
ANR	5064272	ArrayIndexing	blackpreserve [ k ]		5059719	0					
ANR	5064273	Identifier	blackpreserve		5059719	0					
ANR	5064274	Identifier	k		5059719	1					
ANR	5064275	Argument	dev		5059719	1					
ANR	5064276	Identifier	dev		5059719	0					
ANR	5064277	Argument	profile_types [ k ]		5059719	2					
ANR	5064278	ArrayIndexing	profile_types [ k ]		5059719	0					
ANR	5064279	Identifier	profile_types		5059719	0					
ANR	5064280	Identifier	k		5059719	1					
ANR	5064281	IfStatement	if ( code < 0 )		5059719	5					
ANR	5064282	Condition	code < 0	2105:16:85702:85709	5059719	0	True				
ANR	5064283	RelationalExpression	code < 0		5059719	0		<			
ANR	5064284	Identifier	code		5059719	0					
ANR	5064285	PrimaryExpression	0		5059719	1					
ANR	5064286	ReturnStatement	return code ;	2106:16:85728:85739	5059719	1	True				
ANR	5064287	Identifier	code		5059719	0					
ANR	5064288	ExpressionStatement	"gsicc_setcoloraccuracy ( dev -> memory , color_accuracy )"	2109:4:85761:85812	5059719	275	True				
ANR	5064289	CallExpression	"gsicc_setcoloraccuracy ( dev -> memory , color_accuracy )"		5059719	0					
ANR	5064290	Callee	gsicc_setcoloraccuracy		5059719	0					
ANR	5064291	Identifier	gsicc_setcoloraccuracy		5059719	0					
ANR	5064292	ArgumentList	dev -> memory		5059719	1					
ANR	5064293	Argument	dev -> memory		5059719	0					
ANR	5064294	PtrMemberAccess	dev -> memory		5059719	0					
ANR	5064295	Identifier	dev		5059719	0					
ANR	5064296	Identifier	memory		5059719	1					
ANR	5064297	Argument	color_accuracy		5059719	1					
ANR	5064298	Identifier	color_accuracy		5059719	0					
ANR	5064299	ExpressionStatement	"code = gx_default_put_graytok ( devicegraytok , dev )"	2110:4:85818:85867	5059719	276	True				
ANR	5064300	AssignmentExpression	"code = gx_default_put_graytok ( devicegraytok , dev )"		5059719	0		=			
ANR	5064301	Identifier	code		5059719	0					
ANR	5064302	CallExpression	"gx_default_put_graytok ( devicegraytok , dev )"		5059719	1					
ANR	5064303	Callee	gx_default_put_graytok		5059719	0					
ANR	5064304	Identifier	gx_default_put_graytok		5059719	0					
ANR	5064305	ArgumentList	devicegraytok		5059719	1					
ANR	5064306	Argument	devicegraytok		5059719	0					
ANR	5064307	Identifier	devicegraytok		5059719	0					
ANR	5064308	Argument	dev		5059719	1					
ANR	5064309	Identifier	dev		5059719	0					
ANR	5064310	IfStatement	if ( code < 0 )		5059719	277					
ANR	5064311	Condition	code < 0	2111:8:85877:85884	5059719	0	True				
ANR	5064312	RelationalExpression	code < 0		5059719	0		<			
ANR	5064313	Identifier	code		5059719	0					
ANR	5064314	PrimaryExpression	0		5059719	1					
ANR	5064315	ReturnStatement	return code ;	2112:8:85895:85906	5059719	1	True				
ANR	5064316	Identifier	code		5059719	0					
ANR	5064317	ExpressionStatement	"code = gx_default_put_usefastcolor ( usefastcolor , dev )"	2113:4:85912:85965	5059719	278	True				
ANR	5064318	AssignmentExpression	"code = gx_default_put_usefastcolor ( usefastcolor , dev )"		5059719	0		=			
ANR	5064319	Identifier	code		5059719	0					
ANR	5064320	CallExpression	"gx_default_put_usefastcolor ( usefastcolor , dev )"		5059719	1					
ANR	5064321	Callee	gx_default_put_usefastcolor		5059719	0					
ANR	5064322	Identifier	gx_default_put_usefastcolor		5059719	0					
ANR	5064323	ArgumentList	usefastcolor		5059719	1					
ANR	5064324	Argument	usefastcolor		5059719	0					
ANR	5064325	Identifier	usefastcolor		5059719	0					
ANR	5064326	Argument	dev		5059719	1					
ANR	5064327	Identifier	dev		5059719	0					
ANR	5064328	IfStatement	if ( code < 0 )		5059719	279					
ANR	5064329	Condition	code < 0	2114:8:85975:85982	5059719	0	True				
ANR	5064330	RelationalExpression	code < 0		5059719	0		<			
ANR	5064331	Identifier	code		5059719	0					
ANR	5064332	PrimaryExpression	0		5059719	1					
ANR	5064333	ReturnStatement	return code ;	2115:8:85993:86004	5059719	1	True				
ANR	5064334	Identifier	code		5059719	0					
ANR	5064335	ExpressionStatement	"code = gx_default_put_simulateoverprint ( sim_overprint , dev )"	2116:4:86010:86069	5059719	280	True				
ANR	5064336	AssignmentExpression	"code = gx_default_put_simulateoverprint ( sim_overprint , dev )"		5059719	0		=			
ANR	5064337	Identifier	code		5059719	0					
ANR	5064338	CallExpression	"gx_default_put_simulateoverprint ( sim_overprint , dev )"		5059719	1					
ANR	5064339	Callee	gx_default_put_simulateoverprint		5059719	0					
ANR	5064340	Identifier	gx_default_put_simulateoverprint		5059719	0					
ANR	5064341	ArgumentList	sim_overprint		5059719	1					
ANR	5064342	Argument	sim_overprint		5059719	0					
ANR	5064343	Identifier	sim_overprint		5059719	0					
ANR	5064344	Argument	dev		5059719	1					
ANR	5064345	Identifier	dev		5059719	0					
ANR	5064346	IfStatement	if ( code < 0 )		5059719	281					
ANR	5064347	Condition	code < 0	2117:8:86079:86086	5059719	0	True				
ANR	5064348	RelationalExpression	code < 0		5059719	0		<			
ANR	5064349	Identifier	code		5059719	0					
ANR	5064350	PrimaryExpression	0		5059719	1					
ANR	5064351	ReturnStatement	return code ;	2118:8:86097:86108	5059719	1	True				
ANR	5064352	Identifier	code		5059719	0					
ANR	5064353	ExpressionStatement	"code = gx_default_put_graydetection ( graydetection , dev )"	2119:4:86114:86169	5059719	282	True				
ANR	5064354	AssignmentExpression	"code = gx_default_put_graydetection ( graydetection , dev )"		5059719	0		=			
ANR	5064355	Identifier	code		5059719	0					
ANR	5064356	CallExpression	"gx_default_put_graydetection ( graydetection , dev )"		5059719	1					
ANR	5064357	Callee	gx_default_put_graydetection		5059719	0					
ANR	5064358	Identifier	gx_default_put_graydetection		5059719	0					
ANR	5064359	ArgumentList	graydetection		5059719	1					
ANR	5064360	Argument	graydetection		5059719	0					
ANR	5064361	Identifier	graydetection		5059719	0					
ANR	5064362	Argument	dev		5059719	1					
ANR	5064363	Identifier	dev		5059719	0					
ANR	5064364	IfStatement	if ( code < 0 )		5059719	283					
ANR	5064365	Condition	code < 0	2120:8:86179:86186	5059719	0	True				
ANR	5064366	RelationalExpression	code < 0		5059719	0		<			
ANR	5064367	Identifier	code		5059719	0					
ANR	5064368	PrimaryExpression	0		5059719	1					
ANR	5064369	ReturnStatement	return code ;	2121:8:86197:86208	5059719	1	True				
ANR	5064370	Identifier	code		5059719	0					
ANR	5064371	ReturnStatement	"return gx_default_put_prebandthreshold ( prebandthreshold , dev ) ;"	2122:4:86214:86275	5059719	284	True				
ANR	5064372	CallExpression	"gx_default_put_prebandthreshold ( prebandthreshold , dev )"		5059719	0					
ANR	5064373	Callee	gx_default_put_prebandthreshold		5059719	0					
ANR	5064374	Identifier	gx_default_put_prebandthreshold		5059719	0					
ANR	5064375	ArgumentList	prebandthreshold		5059719	1					
ANR	5064376	Argument	prebandthreshold		5059719	0					
ANR	5064377	Identifier	prebandthreshold		5059719	0					
ANR	5064378	Argument	dev		5059719	1					
ANR	5064379	Identifier	dev		5059719	0					
ANR	5064380	ReturnType	int		5059719	1					
ANR	5064381	Identifier	gx_default_put_params		5059719	2					
ANR	5064382	ParameterList	"gx_device * dev , gs_param_list * plist"		5059719	3					
ANR	5064383	Parameter	gx_device * dev	1383:22:57271:57285	5059719	0	True				
ANR	5064384	ParameterType	gx_device *		5059719	0					
ANR	5064385	Identifier	dev		5059719	1					
ANR	5064386	Parameter	gs_param_list * plist	1383:39:57288:57308	5059719	1	True				
ANR	5064387	ParameterType	gs_param_list *		5059719	0					
ANR	5064388	Identifier	plist		5059719	1					
ANR	5064389	CFGEntryNode	ENTRY		5059719		True				
ANR	5064390	CFGExitNode	EXIT		5059719		True				
ANR	5064391	CFGErrorNode	ERROR		5059719		True				
ANR	5064392	Symbol	dev -> icc_struct -> graydetection		5059719						
ANR	5064393	Symbol	param_read_float_array		5059719						
ANR	5064394	Symbol	bad		5059719						
ANR	5064395	Symbol	psize		5059719						
ANR	5064396	Symbol	dev		5059719						
ANR	5064397	Symbol	dev -> icc_struct		5059719						
ANR	5064398	Symbol	rc_free_pages_list		5059719						
ANR	5064399	Symbol	gs_error_invalidaccess		5059719						
ANR	5064400	Symbol	palette		5059719						
ANR	5064401	Symbol	band		5059719						
ANR	5064402	Symbol	& ibba		5059719						
ANR	5064403	Symbol	devicegraytok		5059719						
ANR	5064404	Symbol	dev -> color_info . num_components		5059719						
ANR	5064405	Symbol	dev -> PageList -> Pages		5059719						
ANR	5064406	Symbol	& mpbm		5059719						
ANR	5064407	Symbol	gsicc_currentcoloraccuracy		5059719						
ANR	5064408	Symbol	sp . params_are_read_only		5059719						
ANR	5064409	Symbol	* hwra		5059719						
ANR	5064410	Symbol	dev -> LockSafetyParams		5059719						
ANR	5064411	Symbol	* hwma . data		5059719						
ANR	5064412	Symbol	ibbnull		5059719						
ANR	5064413	Symbol	hwra . data		5059719						
ANR	5064414	Symbol	scne		5059719						
ANR	5064415	Symbol	sp . band . BandHeight		5059719						
ANR	5064416	Symbol	gsBPNOTSPECIFIED		5059719						
ANR	5064417	Symbol	bse		5059719						
ANR	5064418	Symbol	* ibba . data		5059719						
ANR	5064419	Symbol	scna		5059719						
ANR	5064420	Symbol	& pa		5059719						
ANR	5064421	Symbol	gx_default_put_icc		5059719						
ANR	5064422	Symbol	param_HWColorMap		5059719						
ANR	5064423	Symbol	dev -> color_info . anti_alias . text_bits		5059719						
ANR	5064424	Symbol	gx_default_put_graytok		5059719						
ANR	5064425	Symbol	ColorValues		5059719						
ANR	5064426	Symbol	* hwsa . data		5059719						
ANR	5064427	Symbol	& color_accuracy		5059719						
ANR	5064428	Symbol	param_check_bool		5059719						
ANR	5064429	Symbol	& dev -> FirstPage		5059719						
ANR	5064430	Symbol	dev -> IgnoreNumCopies		5059719						
ANR	5064431	Symbol	dev -> icc_struct -> rendercond [ k ] . rendering_intent		5059719						
ANR	5064432	Symbol	use_antidropout		5059719						
ANR	5064433	Symbol	* dev_proc		5059719						
ANR	5064434	Symbol	dev -> Margins		5059719						
ANR	5064435	Symbol	dev -> color_info		5059719						
ANR	5064436	Symbol	* hwsa		5059719						
ANR	5064437	Symbol	colors		5059719						
ANR	5064438	Symbol	param_read_int		5059719						
ANR	5064439	Symbol	dev -> ImagingBBox		5059719						
ANR	5064440	Symbol	dev -> icc_struct -> rendercond		5059719						
ANR	5064441	Symbol	gx_default_put_usefastcolor		5059719						
ANR	5064442	Symbol	gs_error_limitcheck		5059719						
ANR	5064443	Symbol	pread		5059719						
ANR	5064444	Symbol	dev -> UseCIEColor		5059719						
ANR	5064445	Symbol	sp		5059719						
ANR	5064446	Symbol	band . BandHeight		5059719						
ANR	5064447	Symbol	sp . band . BandWidth		5059719						
ANR	5064448	Symbol	usefastcolor		5059719						
ANR	5064449	Symbol	& cms		5059719						
ANR	5064450	Symbol	k		5059719						
ANR	5064451	Symbol	gsRINOTSPECIFIED		5059719						
ANR	5064452	Symbol	gsGRAPHICPROFILE		5059719						
ANR	5064453	Symbol	ecode		5059719						
ANR	5064454	Symbol	dev -> HWResolution		5059719						
ANR	5064455	Symbol	sp . band		5059719						
ANR	5064456	Symbol	& temp_bool		5059719						
ANR	5064457	Symbol	t		5059719						
ANR	5064458	Symbol	gx_default_put_simulateoverprint		5059719						
ANR	5064459	Symbol	LEADINGEDGE_MASK		5059719						
ANR	5064460	Symbol	dev -> LeadingEdge		5059719						
ANR	5064461	Symbol	& nci		5059719						
ANR	5064462	Symbol	sim_overprint		5059719						
ANR	5064463	Symbol	save_sp . member		5059719						
ANR	5064464	Symbol	gs_error_rangecheck		5059719						
ANR	5064465	Symbol	& sp		5059719						
ANR	5064466	Symbol	* hwma		5059719						
ANR	5064467	Symbol	* hwra . data		5059719						
ANR	5064468	Symbol	( pa ) . size		5059719						
ANR	5064469	Symbol	FILTERVECTOR		5059719						
ANR	5064470	Symbol	* ma . data		5059719						
ANR	5064471	Symbol	leadingedge		5059719						
ANR	5064472	Symbol	dev -> MediaSize		5059719						
ANR	5064473	Symbol	param_check_bytes		5059719						
ANR	5064474	Symbol	~FILTERVECTOR		5059719						
ANR	5064475	Symbol	res		5059719						
ANR	5064476	Symbol	& locksafe		5059719						
ANR	5064477	Symbol	& sp . band . BandWidth		5059719						
ANR	5064478	Symbol	pname		5059719						
ANR	5064479	Symbol	& msa		5059719						
ANR	5064480	Symbol	gsBKPRESNOTSPECIFIED		5059719						
ANR	5064481	Symbol	dev -> memory -> non_gc_memory		5059719						
ANR	5064482	Symbol	& sim_overprint		5059719						
ANR	5064483	Symbol	param_read_null		5059719						
ANR	5064484	Symbol	ncset		5059719						
ANR	5064485	Symbol	& icc_pro		5059719						
ANR	5064486	Symbol	bwe		5059719						
ANR	5064487	Symbol	param_anti_alias_bits		5059719						
ANR	5064488	Symbol	param_check_long		5059719						
ANR	5064489	Symbol	sp . BufferSpace		5059719						
ANR	5064490	Symbol	sp . band . BandBufferSpace		5059719						
ANR	5064491	Symbol	& ucc		5059719						
ANR	5064492	Symbol	& tab		5059719						
ANR	5064493	Symbol	bbse		5059719						
ANR	5064494	Symbol	dev -> icc_struct -> rendercond [ k ] . black_point_comp		5059719						
ANR	5064495	Symbol	gx_default_put_icc_colorants		5059719						
ANR	5064496	Symbol	gsBLENDPROFILE		5059719						
ANR	5064497	Symbol	& page_uses_transparency		5059719						
ANR	5064498	Symbol	param_normalize_anti_alias_bits		5059719						
ANR	5064499	Symbol	FILTERTEXT		5059719						
ANR	5064500	Symbol	~FILTERIMAGE		5059719						
ANR	5064501	Symbol	ma . data		5059719						
ANR	5064502	Symbol	gab		5059719						
ANR	5064503	Symbol	* ibba		5059719						
ANR	5064504	Symbol	hwma		5059719						
ANR	5064505	Symbol	hwme		5059719						
ANR	5064506	Symbol	dev_proc		5059719						
ANR	5064507	Symbol	band . BandBufferSpace		5059719						
ANR	5064508	Symbol	bhe		5059719						
ANR	5064509	Symbol	& pagelist		5059719						
ANR	5064510	Symbol	band . BandWidth		5059719						
ANR	5064511	Symbol	dev -> NumCopies_set		5059719						
ANR	5064512	Symbol	locksafe		5059719						
ANR	5064513	Symbol	dev -> icc_struct -> prebandthreshold		5059719						
ANR	5064514	Symbol	* msa		5059719						
ANR	5064515	Symbol	gx_default_put_prebandthreshold		5059719						
ANR	5064516	Symbol	false		5059719						
ANR	5064517	Symbol	pagelist		5059719						
ANR	5064518	Symbol	dev -> interpolate_control		5059719						
ANR	5064519	Symbol	* dev -> HWResolution		5059719						
ANR	5064520	Symbol	( pa ) . data		5059719						
ANR	5064521	Symbol	& sp . MaxBitmap		5059719						
ANR	5064522	Symbol	pcms		5059719						
ANR	5064523	Symbol	color_accuracy		5059719						
ANR	5064524	Symbol	gs_error_VMerror		5059719						
ANR	5064525	Symbol	gs_note_error		5059719						
ANR	5064526	Symbol	* dev -> ImagingBBox		5059719						
ANR	5064527	Symbol	& prebandthreshold		5059719						
ANR	5064528	Symbol	* blackptcomp		5059719						
ANR	5064529	Symbol	& t		5059719						
ANR	5064530	Symbol	dev -> color_info . anti_alias . graphics_bits		5059719						
ANR	5064531	Symbol	& use_antidropout		5059719						
ANR	5064532	Symbol	dev -> color_info . use_antidropout_downscaler		5059719						
ANR	5064533	Symbol	"* dev_proc ( dev , get_page_device )"		5059719						
ANR	5064534	Symbol	gsPRPROFILE		5059719						
ANR	5064535	Symbol	dev -> HWMargins		5059719						
ANR	5064536	Symbol	dev -> icc_struct -> sim_overprint		5059719						
ANR	5064537	Symbol	icc_pro		5059719						
ANR	5064538	Symbol	& sp . band		5059719						
ANR	5064539	Symbol	* dev -> icc_struct -> rendercond		5059719						
ANR	5064540	Symbol	temp_bool		5059719						
ANR	5064541	Symbol	FILTERIMAGE		5059719						
ANR	5064542	Symbol	ibba . size		5059719						
ANR	5064543	Symbol	ic		5059719						
ANR	5064544	Symbol	profile_types		5059719						
ANR	5064545	Symbol	mpbm		5059719						
ANR	5064546	Symbol	dev -> ImagingBBox_set		5059719						
ANR	5064547	Symbol	LEADINGEDGE_SET_MASK		5059719						
ANR	5064548	Symbol	param_check_int		5059719						
ANR	5064549	Symbol	* msa . data		5059719						
ANR	5064550	Symbol	BufferSpace		5059719						
ANR	5064551	Symbol	dev -> color_info . max_color		5059719						
ANR	5064552	Symbol	gsDEFAULTPROFILE		5059719						
ANR	5064553	Symbol	~LEADINGEDGE_SET_MASK		5059719						
ANR	5064554	Symbol	ibba		5059719						
ANR	5064555	Symbol	param_read_bool		5059719						
ANR	5064556	Symbol	RGBValues		5059719						
ANR	5064557	Symbol	msa . data		5059719						
ANR	5064558	Symbol	param_read_string		5059719						
ANR	5064559	Symbol	dev -> DisablePageHandler		5059719						
ANR	5064560	Symbol	dev -> is_open		5059719						
ANR	5064561	Symbol	dev -> NumCopies		5059719						
ANR	5064562	Symbol	* dev -> HWMargins		5059719						
ANR	5064563	Symbol	* * dev -> icc_struct		5059719						
ANR	5064564	Symbol	* dev -> memory		5059719						
ANR	5064565	Symbol	* dev		5059719						
ANR	5064566	Symbol	gsPROOFPROFILE		5059719						
ANR	5064567	Symbol	pagelist . data		5059719						
ANR	5064568	Symbol	& sp . BufferSpace		5059719						
ANR	5064569	Symbol	sp . member		5059719						
ANR	5064570	Symbol	& ic		5059719						
ANR	5064571	Symbol	prebandthreshold		5059719						
ANR	5064572	Symbol	dev -> height		5059719						
ANR	5064573	Symbol	cms		5059719						
ANR	5064574	Symbol	dev -> color_info . depth		5059719						
ANR	5064575	Symbol	gsTEXTPROFILE		5059719						
ANR	5064576	Symbol	hwra		5059719						
ANR	5064577	Symbol	* dev -> icc_struct		5059719						
ANR	5064578	Symbol	plist		5059719						
ANR	5064579	Symbol	dev -> ObjectFilter		5059719						
ANR	5064580	Symbol	nci		5059719						
ANR	5064581	Symbol	& usefastcolor		5059719						
ANR	5064582	Symbol	~FILTERTEXT		5059719						
ANR	5064583	Symbol	dev -> PageList -> PagesSize		5059719						
ANR	5064584	Symbol	* ma		5059719						
ANR	5064585	Symbol	& sp . band . BandHeight		5059719						
ANR	5064586	Symbol	dev -> color_info . max_gray		5059719						
ANR	5064587	Symbol	& devicegraytok		5059719						
ANR	5064588	Symbol	param_check_string		5059719						
ANR	5064589	Symbol	gx_default_put_blackpreserve		5059719						
ANR	5064590	Symbol	ignc		5059719						
ANR	5064591	Symbol	page_uses_transparency		5059719						
ANR	5064592	Symbol	get_process_color_model_name		5059719						
ANR	5064593	Symbol	gsLINKPROFILE		5059719						
ANR	5064594	Symbol	max		5059719						
ANR	5064595	Symbol	igni		5059719						
ANR	5064596	Symbol	* * dev		5059719						
ANR	5064597	Symbol	hwsa . data		5059719						
ANR	5064598	Symbol	& graydetection		5059719						
ANR	5064599	Symbol	LEADINGEDGE_REQ_BIT		5059719						
ANR	5064600	Symbol	depth		5059719						
ANR	5064601	Symbol	msa		5059719						
ANR	5064602	Symbol	rend_intent		5059719						
ANR	5064603	Symbol	max_coord		5059719						
ANR	5064604	Symbol	* dev -> PageList		5059719						
ANR	5064605	Symbol	dev -> icc_struct -> rendercond [ k ] . preserve_black		5059719						
ANR	5064606	Symbol	hwma . data		5059719						
ANR	5064607	Symbol	data		5059719						
ANR	5064608	Symbol	dev -> space_params		5059719						
ANR	5064609	Symbol	hwse		5059719						
ANR	5064610	Symbol	* dev -> Margins		5059719						
ANR	5064611	Symbol	* * * dev		5059719						
ANR	5064612	Symbol	ma		5059719						
ANR	5064613	Symbol	ucc		5059719						
ANR	5064614	Symbol	tab		5059719						
ANR	5064615	Symbol	NUM_DEVICE_PROFILES		5059719						
ANR	5064616	Symbol	me		5059719						
ANR	5064617	Symbol	dev -> PageList		5059719						
ANR	5064618	Symbol	graydetection		5059719						
ANR	5064619	Symbol	dev -> page_uses_transparency		5059719						
ANR	5064620	Symbol	dev -> color_info . anti_alias		5059719						
ANR	5064621	Symbol	& sp . band . BandBufferSpace		5059719						
ANR	5064622	Symbol	NULL		5059719						
ANR	5064623	Symbol	param_read_long		5059719						
ANR	5064624	Symbol	blackptcomp		5059719						
ANR	5064625	Symbol	LEADINGEDGE_REQ_VAL_SHIFT		5059719						
ANR	5064626	Symbol	dev -> MaxPatternBitmap		5059719						
ANR	5064627	Symbol	hwsa		5059719						
ANR	5064628	Symbol	get_page_device		5059719						
ANR	5064629	Symbol	gx_default_put_intent		5059719						
ANR	5064630	Symbol	hwre		5059719						
ANR	5064631	Symbol	* dev -> MediaSize		5059719						
ANR	5064632	Symbol	* blackpreserve		5059719						
ANR	5064633	Symbol	true		5059719						
ANR	5064634	Symbol	param_commit		5059719						
ANR	5064635	Symbol	dev -> icc_struct -> devicegraytok		5059719						
ANR	5064636	Symbol	* rend_intent		5059719						
ANR	5064637	Symbol	& ignc		5059719						
ANR	5064638	Symbol	code		5059719						
ANR	5064639	Symbol	GrayValues		5059719						
ANR	5064640	Symbol	ibba . data		5059719						
ANR	5064641	Symbol	dev -> dname		5059719						
ANR	5064642	Symbol	& dev -> LastPage		5059719						
ANR	5064643	Symbol	* profile_types		5059719						
ANR	5064644	Symbol	& igni		5059719						
ANR	5064645	Symbol	blackpreserve		5059719						
ANR	5064646	Symbol	gs_alloc_bytes		5059719						
ANR	5064647	Symbol	param_MediaSize		5059719						
ANR	5064648	Symbol	& gab		5059719						
ANR	5064649	Symbol	gsIMAGEPROFILE		5059719						
ANR	5064650	Symbol	pa		5059719						
ANR	5064651	Symbol	dev -> memory		5059719						
ANR	5064652	Symbol	dev -> icc_struct -> usefastcolor		5059719						
ANR	5064653	Symbol	pagelist . size		5059719						
ANR	5064654	Symbol	* k		5059719						
ANR	5064655	Symbol	dev -> width		5059719						
ANR	5064656	Symbol	gx_default_put_graydetection		5059719						
ANR	5064657	Symbol	gx_default_put_blackptcomp		5059719						
ANR	5064658	Symbol	param_name		5059719						
ANR	5064659	Symbol	save_sp		5059719						
ANR	5064660	Function	gx_device_request_leadingedge	2125:0:86280:86513							
ANR	5064661	FunctionDef	"gx_device_request_leadingedge (gx_device * dev , int le_req)"		5064660	0					
ANR	5064662	CompoundStatement		2127:0:86343:86513	5064660	0					
ANR	5064663	ExpressionStatement	dev -> LeadingEdge = ( dev -> LeadingEdge & ~LEADINGEDGE_REQ_VAL ) | ( ( le_req << LEADINGEDGE_REQ_VAL_SHIFT ) & LEADINGEDGE_REQ_VAL ) | LEADINGEDGE_REQ_BIT	2128:4:86349:86511	5064660	0	True				
ANR	5064664	AssignmentExpression	dev -> LeadingEdge = ( dev -> LeadingEdge & ~LEADINGEDGE_REQ_VAL ) | ( ( le_req << LEADINGEDGE_REQ_VAL_SHIFT ) & LEADINGEDGE_REQ_VAL ) | LEADINGEDGE_REQ_BIT		5064660	0		=			
ANR	5064665	PtrMemberAccess	dev -> LeadingEdge		5064660	0					
ANR	5064666	Identifier	dev		5064660	0					
ANR	5064667	Identifier	LeadingEdge		5064660	1					
ANR	5064668	InclusiveOrExpression	( dev -> LeadingEdge & ~LEADINGEDGE_REQ_VAL ) | ( ( le_req << LEADINGEDGE_REQ_VAL_SHIFT ) & LEADINGEDGE_REQ_VAL ) | LEADINGEDGE_REQ_BIT		5064660	1		|			
ANR	5064669	BitAndExpression	dev -> LeadingEdge & ~LEADINGEDGE_REQ_VAL		5064660	0		&			
ANR	5064670	PtrMemberAccess	dev -> LeadingEdge		5064660	0					
ANR	5064671	Identifier	dev		5064660	0					
ANR	5064672	Identifier	LeadingEdge		5064660	1					
ANR	5064673	Identifier	~LEADINGEDGE_REQ_VAL		5064660	1					
ANR	5064674	InclusiveOrExpression	( ( le_req << LEADINGEDGE_REQ_VAL_SHIFT ) & LEADINGEDGE_REQ_VAL ) | LEADINGEDGE_REQ_BIT		5064660	1		|			
ANR	5064675	BitAndExpression	( le_req << LEADINGEDGE_REQ_VAL_SHIFT ) & LEADINGEDGE_REQ_VAL		5064660	0		&			
ANR	5064676	ShiftExpression	le_req << LEADINGEDGE_REQ_VAL_SHIFT		5064660	0		<<			
ANR	5064677	Identifier	le_req		5064660	0					
ANR	5064678	Identifier	LEADINGEDGE_REQ_VAL_SHIFT		5064660	1					
ANR	5064679	Identifier	LEADINGEDGE_REQ_VAL		5064660	1					
ANR	5064680	Identifier	LEADINGEDGE_REQ_BIT		5064660	1					
ANR	5064681	ReturnType	void		5064660	1					
ANR	5064682	Identifier	gx_device_request_leadingedge		5064660	2					
ANR	5064683	ParameterList	"gx_device * dev , int le_req"		5064660	3					
ANR	5064684	Parameter	gx_device * dev	2126:30:86315:86328	5064660	0	True				
ANR	5064685	ParameterType	gx_device *		5064660	0					
ANR	5064686	Identifier	dev		5064660	1					
ANR	5064687	Parameter	int le_req	2126:46:86331:86340	5064660	1	True				
ANR	5064688	ParameterType	int		5064660	0					
ANR	5064689	Identifier	le_req		5064660	1					
ANR	5064690	CFGEntryNode	ENTRY		5064660		True				
ANR	5064691	CFGExitNode	EXIT		5064660		True				
ANR	5064692	Symbol	* dev		5064660						
ANR	5064693	Symbol	LEADINGEDGE_REQ_BIT		5064660						
ANR	5064694	Symbol	dev		5064660						
ANR	5064695	Symbol	dev -> LeadingEdge		5064660						
ANR	5064696	Symbol	LEADINGEDGE_REQ_VAL		5064660						
ANR	5064697	Symbol	LEADINGEDGE_REQ_VAL_SHIFT		5064660						
ANR	5064698	Symbol	~LEADINGEDGE_REQ_VAL		5064660						
ANR	5064699	Symbol	le_req		5064660						
ANR	5064700	Function	param_normalize_anti_alias_bits	2136:0:86614:86785							
ANR	5064701	FunctionDef	"param_normalize_anti_alias_bits (uint max_gray , int bits)"		5064700	0					
ANR	5064702	CompoundStatement		2138:0:86684:86785	5064700	0					
ANR	5064703	IdentifierDeclStatement	int max_bits = ilog2 ( max_gray + 1 ) ;	2139:8:86694:86729	5064700	0	True				
ANR	5064704	IdentifierDecl	max_bits = ilog2 ( max_gray + 1 )		5064700	0					
ANR	5064705	IdentifierDeclType	int		5064700	0					
ANR	5064706	Identifier	max_bits		5064700	1					
ANR	5064707	AssignmentExpression	max_bits = ilog2 ( max_gray + 1 )		5064700	2		=			
ANR	5064708	Identifier	max_bits		5064700	0					
ANR	5064709	CallExpression	ilog2 ( max_gray + 1 )		5064700	1					
ANR	5064710	Callee	ilog2		5064700	0					
ANR	5064711	Identifier	ilog2		5064700	0					
ANR	5064712	ArgumentList	max_gray + 1		5064700	1					
ANR	5064713	Argument	max_gray + 1		5064700	0					
ANR	5064714	AdditiveExpression	max_gray + 1		5064700	0		+			
ANR	5064715	Identifier	max_gray		5064700	0					
ANR	5064716	PrimaryExpression	1		5064700	1					
ANR	5064717	ReturnStatement	return ( bits > max_bits ? max_bits : bits ) ;	2141:8:86740:86783	5064700	1	True				
ANR	5064718	ConditionalExpression	bits > max_bits ? max_bits : bits		5064700	0					
ANR	5064719	Condition	bits > max_bits		5064700	0					
ANR	5064720	RelationalExpression	bits > max_bits		5064700	0		>			
ANR	5064721	Identifier	bits		5064700	0					
ANR	5064722	Identifier	max_bits		5064700	1					
ANR	5064723	Identifier	max_bits		5064700	1					
ANR	5064724	Identifier	bits		5064700	2					
ANR	5064725	ReturnType	static int		5064700	1					
ANR	5064726	Identifier	param_normalize_anti_alias_bits		5064700	2					
ANR	5064727	ParameterList	"uint max_gray , int bits"		5064700	3					
ANR	5064728	Parameter	uint max_gray	2137:33:86658:86670	5064700	0	True				
ANR	5064729	ParameterType	uint		5064700	0					
ANR	5064730	Identifier	max_gray		5064700	1					
ANR	5064731	Parameter	int bits	2137:48:86673:86680	5064700	1	True				
ANR	5064732	ParameterType	int		5064700	0					
ANR	5064733	Identifier	bits		5064700	1					
ANR	5064734	CFGEntryNode	ENTRY		5064700		True				
ANR	5064735	CFGExitNode	EXIT		5064700		True				
ANR	5064736	Symbol	max_gray		5064700						
ANR	5064737	Symbol	bits		5064700						
ANR	5064738	Symbol	max_bits		5064700						
ANR	5064739	Symbol	ilog2		5064700						
ANR	5064740	Function	param_anti_alias_bits	2145:0:86835:87297							
ANR	5064741	FunctionDef	"param_anti_alias_bits (gs_param_list * plist , gs_param_name param_name , int * pa)"		5064740	0					
ANR	5064742	CompoundStatement		2147:0:86926:87297	5064740	0					
ANR	5064743	IdentifierDeclStatement	"int code = param_read_int ( plist , param_name , pa ) ;"	2148:4:86932:86980	5064740	0	True				
ANR	5064744	IdentifierDecl	"code = param_read_int ( plist , param_name , pa )"		5064740	0					
ANR	5064745	IdentifierDeclType	int		5064740	0					
ANR	5064746	Identifier	code		5064740	1					
ANR	5064747	AssignmentExpression	"code = param_read_int ( plist , param_name , pa )"		5064740	2		=			
ANR	5064748	Identifier	code		5064740	0					
ANR	5064749	CallExpression	"param_read_int ( plist , param_name , pa )"		5064740	1					
ANR	5064750	Callee	param_read_int		5064740	0					
ANR	5064751	Identifier	param_read_int		5064740	0					
ANR	5064752	ArgumentList	plist		5064740	1					
ANR	5064753	Argument	plist		5064740	0					
ANR	5064754	Identifier	plist		5064740	0					
ANR	5064755	Argument	param_name		5064740	1					
ANR	5064756	Identifier	param_name		5064740	0					
ANR	5064757	Argument	pa		5064740	2					
ANR	5064758	Identifier	pa		5064740	0					
ANR	5064759	SwitchStatement	switch ( code )		5064740	1					
ANR	5064760	Condition	code	2150:12:86995:86998	5064740	0	True				
ANR	5064761	Identifier	code		5064740	0					
ANR	5064762	CompoundStatement		4:18:74:74	5064740	1					
ANR	5064763	Label	case 0 :	2151:4:87007:87013	5064740	0	True				
ANR	5064764	SwitchStatement	switch ( * pa )		5064740	1					
ANR	5064765	Condition	* pa	2152:16:87031:87033	5064740	0	True				
ANR	5064766	UnaryOperationExpression	* pa		5064740	0					
ANR	5064767	UnaryOperator	*		5064740	0					
ANR	5064768	Identifier	pa		5064740	1					
ANR	5064769	CompoundStatement		6:21:109:109	5064740	1					
ANR	5064770	Label	case 1 :	2153:8:87046:87052	5064740	0	True				
ANR	5064771	Label	case 2 :	2153:16:87054:87060	5064740	1	True				
ANR	5064772	Label	case 4 :	2153:24:87062:87068	5064740	2	True				
ANR	5064773	ReturnStatement	return 0 ;	2154:12:87082:87090	5064740	3	True				
ANR	5064774	PrimaryExpression	0		5064740	0					
ANR	5064775	Label	default :	2155:8:87100:87107	5064740	4	True				
ANR	5064776	Identifier	default		5064740	0					
ANR	5064777	ExpressionStatement	code = gs_error_rangecheck	2156:12:87121:87147	5064740	5	True				
ANR	5064778	AssignmentExpression	code = gs_error_rangecheck		5064740	0		=			
ANR	5064779	Identifier	code		5064740	0					
ANR	5064780	Identifier	gs_error_rangecheck		5064740	1					
ANR	5064781	Label	default :	2159:4:87190:87197	5064740	2	True				
ANR	5064782	Identifier	default		5064740	0					
ANR	5064783	ExpressionStatement	"param_signal_error ( plist , param_name , code )"	2160:8:87207:87250	5064740	3	True				
ANR	5064784	CallExpression	"param_signal_error ( plist , param_name , code )"		5064740	0					
ANR	5064785	Callee	param_signal_error		5064740	0					
ANR	5064786	Identifier	param_signal_error		5064740	0					
ANR	5064787	ArgumentList	plist		5064740	1					
ANR	5064788	Argument	plist		5064740	0					
ANR	5064789	Identifier	plist		5064740	0					
ANR	5064790	Argument	param_name		5064740	1					
ANR	5064791	Identifier	param_name		5064740	0					
ANR	5064792	Argument	code		5064740	2					
ANR	5064793	Identifier	code		5064740	0					
ANR	5064794	Label	case 1 :	2161:4:87256:87262	5064740	4	True				
ANR	5064795	ExpressionStatement		2162:8:87272:87272	5064740	5	True				
ANR	5064796	ReturnStatement	return code ;	2164:4:87284:87295	5064740	2	True				
ANR	5064797	Identifier	code		5064740	0					
ANR	5064798	ReturnType	static int		5064740	1					
ANR	5064799	Identifier	param_anti_alias_bits		5064740	2					
ANR	5064800	ParameterList	"gs_param_list * plist , gs_param_name param_name , int * pa"		5064740	3					
ANR	5064801	Parameter	gs_param_list * plist	2146:22:86868:86888	5064740	0	True				
ANR	5064802	ParameterType	gs_param_list *		5064740	0					
ANR	5064803	Identifier	plist		5064740	1					
ANR	5064804	Parameter	gs_param_name param_name	2146:45:86891:86914	5064740	1	True				
ANR	5064805	ParameterType	gs_param_name		5064740	0					
ANR	5064806	Identifier	param_name		5064740	1					
ANR	5064807	Parameter	int * pa	2146:71:86917:86923	5064740	2	True				
ANR	5064808	ParameterType	int *		5064740	0					
ANR	5064809	Identifier	pa		5064740	1					
ANR	5064810	CFGEntryNode	ENTRY		5064740		True				
ANR	5064811	CFGExitNode	EXIT		5064740		True				
ANR	5064812	Symbol	pa		5064740						
ANR	5064813	Symbol	plist		5064740						
ANR	5064814	Symbol	param_read_int		5064740						
ANR	5064815	Symbol	code		5064740						
ANR	5064816	Symbol	* pa		5064740						
ANR	5064817	Symbol	gs_error_rangecheck		5064740						
ANR	5064818	Symbol	param_name		5064740						
ANR	5064819	Function	param_MediaSize	2168:0:87363:88143							
ANR	5064820	FunctionDef	"param_MediaSize (gs_param_list * plist , gs_param_name pname , const float * res , gs_param_float_array * pa)"		5064819	0					
ANR	5064821	CompoundStatement		2171:0:87495:88143	5064819	0					
ANR	5064822	IdentifierDeclStatement	gs_param_name param_name ;	2172:4:87501:87525	5064819	0	True				
ANR	5064823	IdentifierDecl	param_name		5064819	0					
ANR	5064824	IdentifierDeclType	gs_param_name		5064819	0					
ANR	5064825	Identifier	param_name		5064819	1					
ANR	5064826	IdentifierDeclStatement	int ecode = 0 ;	2173:4:87531:87544	5064819	1	True				
ANR	5064827	IdentifierDecl	ecode = 0		5064819	0					
ANR	5064828	IdentifierDeclType	int		5064819	0					
ANR	5064829	Identifier	ecode		5064819	1					
ANR	5064830	AssignmentExpression	ecode = 0		5064819	2		=			
ANR	5064831	Identifier	ecode		5064819	0					
ANR	5064832	PrimaryExpression	0		5064819	1					
ANR	5064833	IdentifierDeclStatement	int code ;	2174:4:87550:87558	5064819	2	True				
ANR	5064834	IdentifierDecl	code		5064819	0					
ANR	5064835	IdentifierDeclType	int		5064819	0					
ANR	5064836	Identifier	code		5064819	1					
ANR	5064837	Statement	BEGIN_ARRAY_PARAM	2176:4:87565:87581	5064819	3	True				
ANR	5064838	Statement	(	2176:21:87582:87582	5064819	4	True				
ANR	5064839	Statement	param_read_float_array	2176:22:87583:87604	5064819	5	True				
ANR	5064840	Statement	","	2176:44:87605:87605	5064819	6	True				
ANR	5064841	Statement	pname	2176:46:87607:87611	5064819	7	True				
ANR	5064842	Statement	","	2176:51:87612:87612	5064819	8	True				
ANR	5064843	Statement	*	2176:53:87614:87614	5064819	9	True				
ANR	5064844	Statement	pa	2176:54:87615:87616	5064819	10	True				
ANR	5064845	Statement	","	2176:56:87617:87617	5064819	11	True				
ANR	5064846	Statement	2	2176:58:87619:87619	5064819	12	True				
ANR	5064847	Statement	","	2176:59:87620:87620	5064819	13	True				
ANR	5064848	Statement	mse	2176:61:87622:87624	5064819	14	True				
ANR	5064849	Statement	)	2176:64:87625:87625	5064819	15	True				
ANR	5064850	CompoundStatement		8:8:194:238	5064819	16					
ANR	5064851	IdentifierDeclStatement	float width_new = pa -> data [ 0 ] * res [ 0 ] / 72 ;	2177:8:87637:87680	5064819	0	True				
ANR	5064852	IdentifierDecl	width_new = pa -> data [ 0 ] * res [ 0 ] / 72		5064819	0					
ANR	5064853	IdentifierDeclType	float		5064819	0					
ANR	5064854	Identifier	width_new		5064819	1					
ANR	5064855	AssignmentExpression	width_new = pa -> data [ 0 ] * res [ 0 ] / 72		5064819	2		=			
ANR	5064856	Identifier	width_new		5064819	0					
ANR	5064857	MultiplicativeExpression	pa -> data [ 0 ] * res [ 0 ] / 72		5064819	1		*			
ANR	5064858	ArrayIndexing	pa -> data [ 0 ]		5064819	0					
ANR	5064859	PtrMemberAccess	pa -> data		5064819	0					
ANR	5064860	Identifier	pa		5064819	0					
ANR	5064861	Identifier	data		5064819	1					
ANR	5064862	PrimaryExpression	0		5064819	1					
ANR	5064863	MultiplicativeExpression	res [ 0 ] / 72		5064819	1		/			
ANR	5064864	ArrayIndexing	res [ 0 ]		5064819	0					
ANR	5064865	Identifier	res		5064819	0					
ANR	5064866	PrimaryExpression	0		5064819	1					
ANR	5064867	PrimaryExpression	72		5064819	1					
ANR	5064868	IdentifierDeclStatement	float height_new = pa -> data [ 1 ] * res [ 1 ] / 72 ;	2178:8:87690:87734	5064819	1	True				
ANR	5064869	IdentifierDecl	height_new = pa -> data [ 1 ] * res [ 1 ] / 72		5064819	0					
ANR	5064870	IdentifierDeclType	float		5064819	0					
ANR	5064871	Identifier	height_new		5064819	1					
ANR	5064872	AssignmentExpression	height_new = pa -> data [ 1 ] * res [ 1 ] / 72		5064819	2		=			
ANR	5064873	Identifier	height_new		5064819	0					
ANR	5064874	MultiplicativeExpression	pa -> data [ 1 ] * res [ 1 ] / 72		5064819	1		*			
ANR	5064875	ArrayIndexing	pa -> data [ 1 ]		5064819	0					
ANR	5064876	PtrMemberAccess	pa -> data		5064819	0					
ANR	5064877	Identifier	pa		5064819	0					
ANR	5064878	Identifier	data		5064819	1					
ANR	5064879	PrimaryExpression	1		5064819	1					
ANR	5064880	MultiplicativeExpression	res [ 1 ] / 72		5064819	1		/			
ANR	5064881	ArrayIndexing	res [ 1 ]		5064819	0					
ANR	5064882	Identifier	res		5064819	0					
ANR	5064883	PrimaryExpression	1		5064819	1					
ANR	5064884	PrimaryExpression	72		5064819	1					
ANR	5064885	IfStatement	if ( width_new < 0 || height_new < 0 )		5064819	2					
ANR	5064886	Condition	width_new < 0 || height_new < 0	2180:12:87749:87779	5064819	0	True				
ANR	5064887	OrExpression	width_new < 0 || height_new < 0		5064819	0		||			
ANR	5064888	RelationalExpression	width_new < 0		5064819	0		<			
ANR	5064889	Identifier	width_new		5064819	0					
ANR	5064890	PrimaryExpression	0		5064819	1					
ANR	5064891	RelationalExpression	height_new < 0		5064819	1		<			
ANR	5064892	Identifier	height_new		5064819	0					
ANR	5064893	PrimaryExpression	0		5064819	1					
ANR	5064894	ExpressionStatement	ecode = gs_note_error ( gs_error_rangecheck )	2181:12:87794:87836	5064819	1	True				
ANR	5064895	AssignmentExpression	ecode = gs_note_error ( gs_error_rangecheck )		5064819	0		=			
ANR	5064896	Identifier	ecode		5064819	0					
ANR	5064897	CallExpression	gs_note_error ( gs_error_rangecheck )		5064819	1					
ANR	5064898	Callee	gs_note_error		5064819	0					
ANR	5064899	Identifier	gs_note_error		5064819	0					
ANR	5064900	ArgumentList	gs_error_rangecheck		5064819	1					
ANR	5064901	Argument	gs_error_rangecheck		5064819	0					
ANR	5064902	Identifier	gs_error_rangecheck		5064819	0					
ANR	5064903	ElseStatement	else		5064819	0					
ANR	5064904	IfStatement	if ( width_new > ( long ) max_coord || height_new > ( long ) max_coord )		5064819	0					
ANR	5064905	Condition	width_new > ( long ) max_coord || height_new > ( long ) max_coord	2184:17:87919:87977	5064819	0	True				
ANR	5064906	OrExpression	width_new > ( long ) max_coord || height_new > ( long ) max_coord		5064819	0		||			
ANR	5064907	RelationalExpression	width_new > ( long ) max_coord		5064819	0		>			
ANR	5064908	Identifier	width_new		5064819	0					
ANR	5064909	CastExpression	( long ) max_coord		5064819	1					
ANR	5064910	CastTarget	long		5064819	0					
ANR	5064911	Identifier	max_coord		5064819	1					
ANR	5064912	RelationalExpression	height_new > ( long ) max_coord		5064819	1		>			
ANR	5064913	Identifier	height_new		5064819	0					
ANR	5064914	CastExpression	( long ) max_coord		5064819	1					
ANR	5064915	CastTarget	long		5064819	0					
ANR	5064916	Identifier	max_coord		5064819	1					
ANR	5064917	ExpressionStatement	ecode = gs_note_error ( gs_error_limitcheck )	2185:12:87992:88034	5064819	1	True				
ANR	5064918	AssignmentExpression	ecode = gs_note_error ( gs_error_limitcheck )		5064819	0		=			
ANR	5064919	Identifier	ecode		5064819	0					
ANR	5064920	CallExpression	gs_note_error ( gs_error_limitcheck )		5064819	1					
ANR	5064921	Callee	gs_note_error		5064819	0					
ANR	5064922	Identifier	gs_note_error		5064819	0					
ANR	5064923	ArgumentList	gs_error_limitcheck		5064819	1					
ANR	5064924	Argument	gs_error_limitcheck		5064819	0					
ANR	5064925	Identifier	gs_error_limitcheck		5064819	0					
ANR	5064926	ElseStatement	else		5064819	0					
ANR	5064927	BreakStatement	break ;	2189:12:88085:88090	5064819	0	True				
ANR	5064928	Statement	define	2182:1:87839:87844	5064819	3	True				
ANR	5064929	Statement	max_coord	2182:8:87846:87854	5064819	4	True				
ANR	5064930	Statement	(	2182:18:87856:87856	5064819	5	True				
ANR	5064931	Statement	max_fixed	2182:19:87857:87865	5064819	6	True				
ANR	5064932	Statement	/	2182:29:87867:87867	5064819	7	True				
ANR	5064933	Statement	fixed_1	2182:31:87869:87875	5064819	8	True				
ANR	5064934	Statement	)	2182:38:87876:87876	5064819	9	True				
ANR	5064935	Statement	undef	2187:1:88044:88048	5064819	10	True				
ANR	5064936	Statement	max_coord	2187:7:88050:88058	5064819	11	True				
ANR	5064937	ExpressionStatement	"END_ARRAY_PARAM ( * pa , mse )"	2190:6:88098:88123	5064819	17	True				
ANR	5064938	CallExpression	"END_ARRAY_PARAM ( * pa , mse )"		5064819	0					
ANR	5064939	Callee	END_ARRAY_PARAM		5064819	0					
ANR	5064940	Identifier	END_ARRAY_PARAM		5064819	0					
ANR	5064941	ArgumentList	* pa		5064819	1					
ANR	5064942	Argument	* pa		5064819	0					
ANR	5064943	UnaryOperationExpression	* pa		5064819	0					
ANR	5064944	UnaryOperator	*		5064819	0					
ANR	5064945	Identifier	pa		5064819	1					
ANR	5064946	Argument	mse		5064819	1					
ANR	5064947	Identifier	mse		5064819	0					
ANR	5064948	ReturnStatement	return ecode ;	2191:4:88129:88141	5064819	18	True				
ANR	5064949	Identifier	ecode		5064819	0					
ANR	5064950	ReturnType	static int		5064819	1					
ANR	5064951	Identifier	param_MediaSize		5064819	2					
ANR	5064952	ParameterList	"gs_param_list * plist , gs_param_name pname , const float * res , gs_param_float_array * pa"		5064819	3					
ANR	5064953	Parameter	gs_param_list * plist	2169:16:87390:87410	5064819	0	True				
ANR	5064954	ParameterType	gs_param_list *		5064819	0					
ANR	5064955	Identifier	plist		5064819	1					
ANR	5064956	Parameter	gs_param_name pname	2169:39:87413:87431	5064819	1	True				
ANR	5064957	ParameterType	gs_param_name		5064819	0					
ANR	5064958	Identifier	pname		5064819	1					
ANR	5064959	Parameter	const float * res	2170:16:87450:87465	5064819	2	True				
ANR	5064960	ParameterType	const float *		5064819	0					
ANR	5064961	Identifier	res		5064819	1					
ANR	5064962	Parameter	gs_param_float_array * pa	2170:34:87468:87492	5064819	3	True				
ANR	5064963	ParameterType	gs_param_float_array *		5064819	0					
ANR	5064964	Identifier	pa		5064819	1					
ANR	5064965	CFGEntryNode	ENTRY		5064819		True				
ANR	5064966	CFGExitNode	EXIT		5064819		True				
ANR	5064967	CFGErrorNode	ERROR		5064819		True				
ANR	5064968	Symbol	res		5064819						
ANR	5064969	Symbol	pa -> data		5064819						
ANR	5064970	Symbol	code		5064819						
ANR	5064971	Symbol	gs_error_rangecheck		5064819						
ANR	5064972	Symbol	pname		5064819						
ANR	5064973	Symbol	* pa -> data		5064819						
ANR	5064974	Symbol	* res		5064819						
ANR	5064975	Symbol	ecode		5064819						
ANR	5064976	Symbol	pa		5064819						
ANR	5064977	Symbol	plist		5064819						
ANR	5064978	Symbol	height_new		5064819						
ANR	5064979	Symbol	gs_note_error		5064819						
ANR	5064980	Symbol	* pa		5064819						
ANR	5064981	Symbol	width_new		5064819						
ANR	5064982	Symbol	gs_error_limitcheck		5064819						
ANR	5064983	Symbol	param_name		5064819						
ANR	5064984	Symbol	max_coord		5064819						
ANR	5064985	Symbol	mse		5064819						
ANR	5064986	Symbol	* * pa		5064819						
ANR	5064987	Function	param_check_bool	2196:0:88237:88820							
ANR	5064988	FunctionDef	"param_check_bool (gs_param_list * plist , gs_param_name pname , bool value , bool is_defined)"		5064987	0					
ANR	5064989	CompoundStatement		2199:0:88355:88820	5064987	0					
ANR	5064990	IdentifierDeclStatement	int code ;	2200:4:88361:88369	5064987	0	True				
ANR	5064991	IdentifierDecl	code		5064987	0					
ANR	5064992	IdentifierDeclType	int		5064987	0					
ANR	5064993	Identifier	code		5064987	1					
ANR	5064994	IdentifierDeclStatement	bool new_value ;	2201:4:88375:88389	5064987	1	True				
ANR	5064995	IdentifierDecl	new_value		5064987	0					
ANR	5064996	IdentifierDeclType	bool		5064987	0					
ANR	5064997	Identifier	new_value		5064987	1					
ANR	5064998	SwitchStatement	"switch ( code = param_read_bool ( plist , pname , & new_value ) )"		5064987	2					
ANR	5064999	Condition	"code = param_read_bool ( plist , pname , & new_value )"	2203:12:88404:88451	5064987	0	True				
ANR	5065000	AssignmentExpression	"code = param_read_bool ( plist , pname , & new_value )"		5064987	0		=			
ANR	5065001	Identifier	code		5064987	0					
ANR	5065002	CallExpression	"param_read_bool ( plist , pname , & new_value )"		5064987	1					
ANR	5065003	Callee	param_read_bool		5064987	0					
ANR	5065004	Identifier	param_read_bool		5064987	0					
ANR	5065005	ArgumentList	plist		5064987	1					
ANR	5065006	Argument	plist		5064987	0					
ANR	5065007	Identifier	plist		5064987	0					
ANR	5065008	Argument	pname		5064987	1					
ANR	5065009	Identifier	pname		5064987	0					
ANR	5065010	Argument	& new_value		5064987	2					
ANR	5065011	UnaryOperationExpression	& new_value		5064987	0					
ANR	5065012	UnaryOperator	&		5064987	0					
ANR	5065013	Identifier	new_value		5064987	1					
ANR	5065014	CompoundStatement		5:62:98:98	5064987	1					
ANR	5065015	Label	case 0 :	2204:8:88464:88470	5064987	0	True				
ANR	5065016	IfStatement	if ( is_defined && new_value == value )		5064987	1					
ANR	5065017	Condition	is_defined && new_value == value	2205:16:88488:88519	5064987	0	True				
ANR	5065018	AndExpression	is_defined && new_value == value		5064987	0		&&			
ANR	5065019	Identifier	is_defined		5064987	0					
ANR	5065020	EqualityExpression	new_value == value		5064987	1		==			
ANR	5065021	Identifier	new_value		5064987	0					
ANR	5065022	Identifier	value		5064987	1					
ANR	5065023	BreakStatement	break ;	2206:16:88538:88543	5064987	1	True				
ANR	5065024	ExpressionStatement	code = gs_note_error ( gs_error_rangecheck )	2207:12:88557:88598	5064987	2	True				
ANR	5065025	AssignmentExpression	code = gs_note_error ( gs_error_rangecheck )		5064987	0		=			
ANR	5065026	Identifier	code		5064987	0					
ANR	5065027	CallExpression	gs_note_error ( gs_error_rangecheck )		5064987	1					
ANR	5065028	Callee	gs_note_error		5064987	0					
ANR	5065029	Identifier	gs_note_error		5064987	0					
ANR	5065030	ArgumentList	gs_error_rangecheck		5064987	1					
ANR	5065031	Argument	gs_error_rangecheck		5064987	0					
ANR	5065032	Identifier	gs_error_rangecheck		5064987	0					
ANR	5065033	GotoStatement	goto e ;	2208:12:88612:88618	5064987	3	True				
ANR	5065034	Identifier	e		5064987	0					
ANR	5065035	Label	default :	2209:8:88628:88635	5064987	4	True				
ANR	5065036	Identifier	default		5064987	0					
ANR	5065037	IfStatement	"if ( param_read_null ( plist , pname ) == 0 )"		5064987	5					
ANR	5065038	Condition	"param_read_null ( plist , pname ) == 0"	2210:16:88653:88686	5064987	0	True				
ANR	5065039	EqualityExpression	"param_read_null ( plist , pname ) == 0"		5064987	0		==			
ANR	5065040	CallExpression	"param_read_null ( plist , pname )"		5064987	0					
ANR	5065041	Callee	param_read_null		5064987	0					
ANR	5065042	Identifier	param_read_null		5064987	0					
ANR	5065043	ArgumentList	plist		5064987	1					
ANR	5065044	Argument	plist		5064987	0					
ANR	5065045	Identifier	plist		5064987	0					
ANR	5065046	Argument	pname		5064987	1					
ANR	5065047	Identifier	pname		5064987	0					
ANR	5065048	PrimaryExpression	0		5064987	1					
ANR	5065049	ReturnStatement	return 1 ;	2211:16:88705:88713	5064987	1	True				
ANR	5065050	PrimaryExpression	1		5064987	0					
ANR	5065051	Label	e :	2212:10:88725:88726	5064987	6	True				
ANR	5065052	Identifier	e		5064987	0					
ANR	5065053	ExpressionStatement	"param_signal_error ( plist , pname , code )"	2212:12:88727:88765	5064987	7	True				
ANR	5065054	CallExpression	"param_signal_error ( plist , pname , code )"		5064987	0					
ANR	5065055	Callee	param_signal_error		5064987	0					
ANR	5065056	Identifier	param_signal_error		5064987	0					
ANR	5065057	ArgumentList	plist		5064987	1					
ANR	5065058	Argument	plist		5064987	0					
ANR	5065059	Identifier	plist		5064987	0					
ANR	5065060	Argument	pname		5064987	1					
ANR	5065061	Identifier	pname		5064987	0					
ANR	5065062	Argument	code		5064987	2					
ANR	5065063	Identifier	code		5064987	0					
ANR	5065064	Label	case 1 :	2213:8:88775:88781	5064987	8	True				
ANR	5065065	ExpressionStatement		2214:12:88795:88795	5064987	9	True				
ANR	5065066	ReturnStatement	return code ;	2216:4:88807:88818	5064987	3	True				
ANR	5065067	Identifier	code		5064987	0					
ANR	5065068	ReturnType	static int		5064987	1					
ANR	5065069	Identifier	param_check_bool		5064987	2					
ANR	5065070	ParameterList	"gs_param_list * plist , gs_param_name pname , bool value , bool is_defined"		5064987	3					
ANR	5065071	Parameter	gs_param_list * plist	2197:17:88265:88285	5064987	0	True				
ANR	5065072	ParameterType	gs_param_list *		5064987	0					
ANR	5065073	Identifier	plist		5064987	1					
ANR	5065074	Parameter	gs_param_name pname	2197:40:88288:88306	5064987	1	True				
ANR	5065075	ParameterType	gs_param_name		5064987	0					
ANR	5065076	Identifier	pname		5064987	1					
ANR	5065077	Parameter	bool value	2197:61:88309:88318	5064987	2	True				
ANR	5065078	ParameterType	bool		5064987	0					
ANR	5065079	Identifier	value		5064987	1					
ANR	5065080	Parameter	bool is_defined	2198:17:88338:88352	5064987	3	True				
ANR	5065081	ParameterType	bool		5064987	0					
ANR	5065082	Identifier	is_defined		5064987	1					
ANR	5065083	CFGEntryNode	ENTRY		5064987		True				
ANR	5065084	CFGExitNode	EXIT		5064987		True				
ANR	5065085	Symbol	is_defined		5064987						
ANR	5065086	Symbol	plist		5064987						
ANR	5065087	Symbol	gs_note_error		5064987						
ANR	5065088	Symbol	code		5064987						
ANR	5065089	Symbol	gs_error_rangecheck		5064987						
ANR	5065090	Symbol	& new_value		5064987						
ANR	5065091	Symbol	pname		5064987						
ANR	5065092	Symbol	param_read_bool		5064987						
ANR	5065093	Symbol	value		5064987						
ANR	5065094	Symbol	new_value		5064987						
ANR	5065095	Symbol	param_read_null		5064987						
ANR	5065096	Function	param_check_long	2218:0:88822:89405							
ANR	5065097	FunctionDef	"param_check_long (gs_param_list * plist , gs_param_name pname , long value , bool is_defined)"		5065096	0					
ANR	5065098	CompoundStatement		2221:0:88940:89405	5065096	0					
ANR	5065099	IdentifierDeclStatement	int code ;	2222:4:88946:88954	5065096	0	True				
ANR	5065100	IdentifierDecl	code		5065096	0					
ANR	5065101	IdentifierDeclType	int		5065096	0					
ANR	5065102	Identifier	code		5065096	1					
ANR	5065103	IdentifierDeclStatement	long new_value ;	2223:4:88960:88974	5065096	1	True				
ANR	5065104	IdentifierDecl	new_value		5065096	0					
ANR	5065105	IdentifierDeclType	long		5065096	0					
ANR	5065106	Identifier	new_value		5065096	1					
ANR	5065107	SwitchStatement	"switch ( code = param_read_long ( plist , pname , & new_value ) )"		5065096	2					
ANR	5065108	Condition	"code = param_read_long ( plist , pname , & new_value )"	2225:12:88989:89036	5065096	0	True				
ANR	5065109	AssignmentExpression	"code = param_read_long ( plist , pname , & new_value )"		5065096	0		=			
ANR	5065110	Identifier	code		5065096	0					
ANR	5065111	CallExpression	"param_read_long ( plist , pname , & new_value )"		5065096	1					
ANR	5065112	Callee	param_read_long		5065096	0					
ANR	5065113	Identifier	param_read_long		5065096	0					
ANR	5065114	ArgumentList	plist		5065096	1					
ANR	5065115	Argument	plist		5065096	0					
ANR	5065116	Identifier	plist		5065096	0					
ANR	5065117	Argument	pname		5065096	1					
ANR	5065118	Identifier	pname		5065096	0					
ANR	5065119	Argument	& new_value		5065096	2					
ANR	5065120	UnaryOperationExpression	& new_value		5065096	0					
ANR	5065121	UnaryOperator	&		5065096	0					
ANR	5065122	Identifier	new_value		5065096	1					
ANR	5065123	CompoundStatement		5:62:98:98	5065096	1					
ANR	5065124	Label	case 0 :	2226:8:89049:89055	5065096	0	True				
ANR	5065125	IfStatement	if ( is_defined && new_value == value )		5065096	1					
ANR	5065126	Condition	is_defined && new_value == value	2227:16:89073:89104	5065096	0	True				
ANR	5065127	AndExpression	is_defined && new_value == value		5065096	0		&&			
ANR	5065128	Identifier	is_defined		5065096	0					
ANR	5065129	EqualityExpression	new_value == value		5065096	1		==			
ANR	5065130	Identifier	new_value		5065096	0					
ANR	5065131	Identifier	value		5065096	1					
ANR	5065132	BreakStatement	break ;	2228:16:89123:89128	5065096	1	True				
ANR	5065133	ExpressionStatement	code = gs_note_error ( gs_error_rangecheck )	2229:12:89142:89183	5065096	2	True				
ANR	5065134	AssignmentExpression	code = gs_note_error ( gs_error_rangecheck )		5065096	0		=			
ANR	5065135	Identifier	code		5065096	0					
ANR	5065136	CallExpression	gs_note_error ( gs_error_rangecheck )		5065096	1					
ANR	5065137	Callee	gs_note_error		5065096	0					
ANR	5065138	Identifier	gs_note_error		5065096	0					
ANR	5065139	ArgumentList	gs_error_rangecheck		5065096	1					
ANR	5065140	Argument	gs_error_rangecheck		5065096	0					
ANR	5065141	Identifier	gs_error_rangecheck		5065096	0					
ANR	5065142	GotoStatement	goto e ;	2230:12:89197:89203	5065096	3	True				
ANR	5065143	Identifier	e		5065096	0					
ANR	5065144	Label	default :	2231:8:89213:89220	5065096	4	True				
ANR	5065145	Identifier	default		5065096	0					
ANR	5065146	IfStatement	"if ( param_read_null ( plist , pname ) == 0 )"		5065096	5					
ANR	5065147	Condition	"param_read_null ( plist , pname ) == 0"	2232:16:89238:89271	5065096	0	True				
ANR	5065148	EqualityExpression	"param_read_null ( plist , pname ) == 0"		5065096	0		==			
ANR	5065149	CallExpression	"param_read_null ( plist , pname )"		5065096	0					
ANR	5065150	Callee	param_read_null		5065096	0					
ANR	5065151	Identifier	param_read_null		5065096	0					
ANR	5065152	ArgumentList	plist		5065096	1					
ANR	5065153	Argument	plist		5065096	0					
ANR	5065154	Identifier	plist		5065096	0					
ANR	5065155	Argument	pname		5065096	1					
ANR	5065156	Identifier	pname		5065096	0					
ANR	5065157	PrimaryExpression	0		5065096	1					
ANR	5065158	ReturnStatement	return 1 ;	2233:16:89290:89298	5065096	1	True				
ANR	5065159	PrimaryExpression	1		5065096	0					
ANR	5065160	Label	e :	2234:10:89310:89311	5065096	6	True				
ANR	5065161	Identifier	e		5065096	0					
ANR	5065162	ExpressionStatement	"param_signal_error ( plist , pname , code )"	2234:12:89312:89350	5065096	7	True				
ANR	5065163	CallExpression	"param_signal_error ( plist , pname , code )"		5065096	0					
ANR	5065164	Callee	param_signal_error		5065096	0					
ANR	5065165	Identifier	param_signal_error		5065096	0					
ANR	5065166	ArgumentList	plist		5065096	1					
ANR	5065167	Argument	plist		5065096	0					
ANR	5065168	Identifier	plist		5065096	0					
ANR	5065169	Argument	pname		5065096	1					
ANR	5065170	Identifier	pname		5065096	0					
ANR	5065171	Argument	code		5065096	2					
ANR	5065172	Identifier	code		5065096	0					
ANR	5065173	Label	case 1 :	2235:8:89360:89366	5065096	8	True				
ANR	5065174	ExpressionStatement		2236:12:89380:89380	5065096	9	True				
ANR	5065175	ReturnStatement	return code ;	2238:4:89392:89403	5065096	3	True				
ANR	5065176	Identifier	code		5065096	0					
ANR	5065177	ReturnType	static int		5065096	1					
ANR	5065178	Identifier	param_check_long		5065096	2					
ANR	5065179	ParameterList	"gs_param_list * plist , gs_param_name pname , long value , bool is_defined"		5065096	3					
ANR	5065180	Parameter	gs_param_list * plist	2219:17:88850:88870	5065096	0	True				
ANR	5065181	ParameterType	gs_param_list *		5065096	0					
ANR	5065182	Identifier	plist		5065096	1					
ANR	5065183	Parameter	gs_param_name pname	2219:40:88873:88891	5065096	1	True				
ANR	5065184	ParameterType	gs_param_name		5065096	0					
ANR	5065185	Identifier	pname		5065096	1					
ANR	5065186	Parameter	long value	2219:61:88894:88903	5065096	2	True				
ANR	5065187	ParameterType	long		5065096	0					
ANR	5065188	Identifier	value		5065096	1					
ANR	5065189	Parameter	bool is_defined	2220:17:88923:88937	5065096	3	True				
ANR	5065190	ParameterType	bool		5065096	0					
ANR	5065191	Identifier	is_defined		5065096	1					
ANR	5065192	CFGEntryNode	ENTRY		5065096		True				
ANR	5065193	CFGExitNode	EXIT		5065096		True				
ANR	5065194	Symbol	is_defined		5065096						
ANR	5065195	Symbol	plist		5065096						
ANR	5065196	Symbol	gs_note_error		5065096						
ANR	5065197	Symbol	code		5065096						
ANR	5065198	Symbol	param_read_long		5065096						
ANR	5065199	Symbol	gs_error_rangecheck		5065096						
ANR	5065200	Symbol	& new_value		5065096						
ANR	5065201	Symbol	pname		5065096						
ANR	5065202	Symbol	value		5065096						
ANR	5065203	Symbol	new_value		5065096						
ANR	5065204	Symbol	param_read_null		5065096						
ANR	5065205	Function	param_check_bytes	2240:0:89407:90149							
ANR	5065206	FunctionDef	"param_check_bytes (gs_param_list * plist , gs_param_name pname , const byte * str , uint size , bool is_defined)"		5065205	0					
ANR	5065207	CompoundStatement		2243:0:89544:90149	5065205	0					
ANR	5065208	IdentifierDeclStatement	int code ;	2244:4:89550:89558	5065205	0	True				
ANR	5065209	IdentifierDecl	code		5065205	0					
ANR	5065210	IdentifierDeclType	int		5065205	0					
ANR	5065211	Identifier	code		5065205	1					
ANR	5065212	IdentifierDeclStatement	gs_param_string new_value ;	2245:4:89564:89589	5065205	1	True				
ANR	5065213	IdentifierDecl	new_value		5065205	0					
ANR	5065214	IdentifierDeclType	gs_param_string		5065205	0					
ANR	5065215	Identifier	new_value		5065205	1					
ANR	5065216	SwitchStatement	"switch ( code = param_read_string ( plist , pname , & new_value ) )"		5065205	2					
ANR	5065217	Condition	"code = param_read_string ( plist , pname , & new_value )"	2247:12:89604:89653	5065205	0	True				
ANR	5065218	AssignmentExpression	"code = param_read_string ( plist , pname , & new_value )"		5065205	0		=			
ANR	5065219	Identifier	code		5065205	0					
ANR	5065220	CallExpression	"param_read_string ( plist , pname , & new_value )"		5065205	1					
ANR	5065221	Callee	param_read_string		5065205	0					
ANR	5065222	Identifier	param_read_string		5065205	0					
ANR	5065223	ArgumentList	plist		5065205	1					
ANR	5065224	Argument	plist		5065205	0					
ANR	5065225	Identifier	plist		5065205	0					
ANR	5065226	Argument	pname		5065205	1					
ANR	5065227	Identifier	pname		5065205	0					
ANR	5065228	Argument	& new_value		5065205	2					
ANR	5065229	UnaryOperationExpression	& new_value		5065205	0					
ANR	5065230	UnaryOperator	&		5065205	0					
ANR	5065231	Identifier	new_value		5065205	1					
ANR	5065232	CompoundStatement		5:64:111:111	5065205	1					
ANR	5065233	Label	case 0 :	2248:8:89666:89672	5065205	0	True				
ANR	5065234	IfStatement	"if ( is_defined && new_value . size == size && ! memcmp ( ( const char * ) str , ( const char * ) new_value . data , size ) )"		5065205	1					
ANR	5065235	Condition	"is_defined && new_value . size == size && ! memcmp ( ( const char * ) str , ( const char * ) new_value . data , size )"	2249:16:89690:89831	5065205	0	True				
ANR	5065236	AndExpression	"is_defined && new_value . size == size && ! memcmp ( ( const char * ) str , ( const char * ) new_value . data , size )"		5065205	0		&&			
ANR	5065237	Identifier	is_defined		5065205	0					
ANR	5065238	AndExpression	"new_value . size == size && ! memcmp ( ( const char * ) str , ( const char * ) new_value . data , size )"		5065205	1		&&			
ANR	5065239	EqualityExpression	new_value . size == size		5065205	0		==			
ANR	5065240	MemberAccess	new_value . size		5065205	0					
ANR	5065241	Identifier	new_value		5065205	0					
ANR	5065242	Identifier	size		5065205	1					
ANR	5065243	Identifier	size		5065205	1					
ANR	5065244	UnaryOperationExpression	"! memcmp ( ( const char * ) str , ( const char * ) new_value . data , size )"		5065205	1					
ANR	5065245	UnaryOperator	!		5065205	0					
ANR	5065246	CallExpression	"memcmp ( ( const char * ) str , ( const char * ) new_value . data , size )"		5065205	1					
ANR	5065247	Callee	memcmp		5065205	0					
ANR	5065248	Identifier	memcmp		5065205	0					
ANR	5065249	ArgumentList	( const char * ) str		5065205	1					
ANR	5065250	Argument	( const char * ) str		5065205	0					
ANR	5065251	CastExpression	( const char * ) str		5065205	0					
ANR	5065252	CastTarget	const char *		5065205	0					
ANR	5065253	Identifier	str		5065205	1					
ANR	5065254	Argument	( const char * ) new_value . data		5065205	1					
ANR	5065255	CastExpression	( const char * ) new_value . data		5065205	0					
ANR	5065256	CastTarget	const char *		5065205	0					
ANR	5065257	MemberAccess	new_value . data		5065205	1					
ANR	5065258	Identifier	new_value		5065205	0					
ANR	5065259	Identifier	data		5065205	1					
ANR	5065260	Argument	size		5065205	2					
ANR	5065261	Identifier	size		5065205	0					
ANR	5065262	BreakStatement	break ;	2253:16:89867:89872	5065205	1	True				
ANR	5065263	ExpressionStatement	code = gs_note_error ( gs_error_rangecheck )	2254:12:89886:89927	5065205	2	True				
ANR	5065264	AssignmentExpression	code = gs_note_error ( gs_error_rangecheck )		5065205	0		=			
ANR	5065265	Identifier	code		5065205	0					
ANR	5065266	CallExpression	gs_note_error ( gs_error_rangecheck )		5065205	1					
ANR	5065267	Callee	gs_note_error		5065205	0					
ANR	5065268	Identifier	gs_note_error		5065205	0					
ANR	5065269	ArgumentList	gs_error_rangecheck		5065205	1					
ANR	5065270	Argument	gs_error_rangecheck		5065205	0					
ANR	5065271	Identifier	gs_error_rangecheck		5065205	0					
ANR	5065272	GotoStatement	goto e ;	2255:12:89941:89947	5065205	3	True				
ANR	5065273	Identifier	e		5065205	0					
ANR	5065274	Label	default :	2256:8:89957:89964	5065205	4	True				
ANR	5065275	Identifier	default		5065205	0					
ANR	5065276	IfStatement	"if ( param_read_null ( plist , pname ) == 0 )"		5065205	5					
ANR	5065277	Condition	"param_read_null ( plist , pname ) == 0"	2257:16:89982:90015	5065205	0	True				
ANR	5065278	EqualityExpression	"param_read_null ( plist , pname ) == 0"		5065205	0		==			
ANR	5065279	CallExpression	"param_read_null ( plist , pname )"		5065205	0					
ANR	5065280	Callee	param_read_null		5065205	0					
ANR	5065281	Identifier	param_read_null		5065205	0					
ANR	5065282	ArgumentList	plist		5065205	1					
ANR	5065283	Argument	plist		5065205	0					
ANR	5065284	Identifier	plist		5065205	0					
ANR	5065285	Argument	pname		5065205	1					
ANR	5065286	Identifier	pname		5065205	0					
ANR	5065287	PrimaryExpression	0		5065205	1					
ANR	5065288	ReturnStatement	return 1 ;	2258:16:90034:90042	5065205	1	True				
ANR	5065289	PrimaryExpression	1		5065205	0					
ANR	5065290	Label	e :	2259:10:90054:90055	5065205	6	True				
ANR	5065291	Identifier	e		5065205	0					
ANR	5065292	ExpressionStatement	"param_signal_error ( plist , pname , code )"	2259:12:90056:90094	5065205	7	True				
ANR	5065293	CallExpression	"param_signal_error ( plist , pname , code )"		5065205	0					
ANR	5065294	Callee	param_signal_error		5065205	0					
ANR	5065295	Identifier	param_signal_error		5065205	0					
ANR	5065296	ArgumentList	plist		5065205	1					
ANR	5065297	Argument	plist		5065205	0					
ANR	5065298	Identifier	plist		5065205	0					
ANR	5065299	Argument	pname		5065205	1					
ANR	5065300	Identifier	pname		5065205	0					
ANR	5065301	Argument	code		5065205	2					
ANR	5065302	Identifier	code		5065205	0					
ANR	5065303	Label	case 1 :	2260:8:90104:90110	5065205	8	True				
ANR	5065304	ExpressionStatement		2261:12:90124:90124	5065205	9	True				
ANR	5065305	ReturnStatement	return code ;	2263:4:90136:90147	5065205	3	True				
ANR	5065306	Identifier	code		5065205	0					
ANR	5065307	ReturnType	static int		5065205	1					
ANR	5065308	Identifier	param_check_bytes		5065205	2					
ANR	5065309	ParameterList	"gs_param_list * plist , gs_param_name pname , const byte * str , uint size , bool is_defined"		5065205	3					
ANR	5065310	Parameter	gs_param_list * plist	2241:18:89436:89456	5065205	0	True				
ANR	5065311	ParameterType	gs_param_list *		5065205	0					
ANR	5065312	Identifier	plist		5065205	1					
ANR	5065313	Parameter	gs_param_name pname	2241:41:89459:89477	5065205	1	True				
ANR	5065314	ParameterType	gs_param_name		5065205	0					
ANR	5065315	Identifier	pname		5065205	1					
ANR	5065316	Parameter	const byte * str	2241:62:89480:89495	5065205	2	True				
ANR	5065317	ParameterType	const byte *		5065205	0					
ANR	5065318	Identifier	str		5065205	1					
ANR	5065319	Parameter	uint size	2242:18:89516:89524	5065205	3	True				
ANR	5065320	ParameterType	uint		5065205	0					
ANR	5065321	Identifier	size		5065205	1					
ANR	5065322	Parameter	bool is_defined	2242:29:89527:89541	5065205	4	True				
ANR	5065323	ParameterType	bool		5065205	0					
ANR	5065324	Identifier	is_defined		5065205	1					
ANR	5065325	CFGEntryNode	ENTRY		5065205		True				
ANR	5065326	CFGExitNode	EXIT		5065205		True				
ANR	5065327	Symbol	code		5065205						
ANR	5065328	Symbol	gs_error_rangecheck		5065205						
ANR	5065329	Symbol	pname		5065205						
ANR	5065330	Symbol	param_read_string		5065205						
ANR	5065331	Symbol	param_read_null		5065205						
ANR	5065332	Symbol	str		5065205						
ANR	5065333	Symbol	is_defined		5065205						
ANR	5065334	Symbol	plist		5065205						
ANR	5065335	Symbol	gs_note_error		5065205						
ANR	5065336	Symbol	memcmp		5065205						
ANR	5065337	Symbol	size		5065205						
ANR	5065338	Symbol	& new_value		5065205						
ANR	5065339	Symbol	new_value . size		5065205						
ANR	5065340	Symbol	new_value . data		5065205						
ANR	5065341	Symbol	new_value		5065205						
