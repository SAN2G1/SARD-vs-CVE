command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2606434	File	data/converged/CVE-2018-16863_ghostpdl/devices_gdevxalt.c								
ANR	2606435	DeclStmt									
ANR	2606436	Decl							void	void ( void )	gs_shared_init
ANR	2606437	DeclStmt									
ANR	2606438	Decl							const gx_device_X	const gx_device_X	gs_x11_device
ANR	2606439	DeclStmt									
ANR	2606440	Decl							const gx_device_X	const gx_device_X	gs_x11alpha_device
ANR	2606441	ClassDef	<unnamed>	40:8:1244:1534							
ANR	2606442	DeclStmt									
ANR	2606443	Decl							gx_color_index	gx_color_index [ 16 ]	color_cache
ANR	2606444	DeclStmt									
ANR	2606445	Decl									gx_device_X_wrapper
ANR	2606446	DeclStmt									
ANR	2606447	Decl							amc_proc	amc_proc	gs_private_st_suffix_add0_final
ANR	2606448	DeclStmt									
ANR	2606449	Decl							int	"int ( gx_device * * , gx_device * )"	get_dev_target
ANR	2606450	DeclStmt									
ANR	2606451	Decl							int	int ( gx_device * )	get_target_info
ANR	2606452	DeclStmt									
ANR	2606453	Decl							gx_color_index	"gx_color_index ( gx_device * , gx_color_index )"	x_alt_map_color
ANR	2606454	Function	x_clear_color_cache	69:0:2216:2504							
ANR	2606455	FunctionDef	x_clear_color_cache (gx_device * dev)		2606454	0					
ANR	2606456	CompoundStatement		71:0:2291:2504	2606454	0					
ANR	2606457	IdentifierDeclStatement	gx_device_X_wrapper * xdev = ( gx_device_X_wrapper * ) dev ;	72:4:2297:2352	2606454	0	True				
ANR	2606458	IdentifierDecl	* xdev = ( gx_device_X_wrapper * ) dev		2606454	0					
ANR	2606459	IdentifierDeclType	gx_device_X_wrapper *		2606454	0					
ANR	2606460	Identifier	xdev		2606454	1					
ANR	2606461	AssignmentExpression	* xdev = ( gx_device_X_wrapper * ) dev		2606454	2		=			
ANR	2606462	Identifier	xdev		2606454	0					
ANR	2606463	CastExpression	( gx_device_X_wrapper * ) dev		2606454	1					
ANR	2606464	CastTarget	gx_device_X_wrapper *		2606454	0					
ANR	2606465	Identifier	dev		2606454	1					
ANR	2606466	IdentifierDeclStatement	int i ;	73:4:2358:2363	2606454	1	True				
ANR	2606467	IdentifierDecl	i		2606454	0					
ANR	2606468	IdentifierDeclType	int		2606454	0					
ANR	2606469	Identifier	i		2606454	1					
ANR	2606470	ForStatement	for ( i = 0 ; i < countof ( xdev -> color_cache ) ; ++ i )		2606454	2					
ANR	2606471	ForInit	i = 0 ;	75:9:2375:2380	2606454	0	True				
ANR	2606472	AssignmentExpression	i = 0		2606454	0		=			
ANR	2606473	Identifier	i		2606454	0					
ANR	2606474	PrimaryExpression	0		2606454	1					
ANR	2606475	Condition	i < countof ( xdev -> color_cache )	75:16:2382:2411	2606454	1	True				
ANR	2606476	RelationalExpression	i < countof ( xdev -> color_cache )		2606454	0		<			
ANR	2606477	Identifier	i		2606454	0					
ANR	2606478	CallExpression	countof ( xdev -> color_cache )		2606454	1					
ANR	2606479	Callee	countof		2606454	0					
ANR	2606480	Identifier	countof		2606454	0					
ANR	2606481	ArgumentList	xdev -> color_cache		2606454	1					
ANR	2606482	Argument	xdev -> color_cache		2606454	0					
ANR	2606483	PtrMemberAccess	xdev -> color_cache		2606454	0					
ANR	2606484	Identifier	xdev		2606454	0					
ANR	2606485	Identifier	color_cache		2606454	1					
ANR	2606486	UnaryExpression	++ i	75:48:2414:2416	2606454	2	True				
ANR	2606487	IncDec	++		2606454	0					
ANR	2606488	Identifier	i		2606454	1					
ANR	2606489	ExpressionStatement	xdev -> color_cache [ i ] = gx_no_color_index	76:8:2427:2467	2606454	3	True				
ANR	2606490	AssignmentExpression	xdev -> color_cache [ i ] = gx_no_color_index		2606454	0		=			
ANR	2606491	ArrayIndexing	xdev -> color_cache [ i ]		2606454	0					
ANR	2606492	PtrMemberAccess	xdev -> color_cache		2606454	0					
ANR	2606493	Identifier	xdev		2606454	0					
ANR	2606494	Identifier	color_cache		2606454	1					
ANR	2606495	Identifier	i		2606454	1					
ANR	2606496	Identifier	gx_no_color_index		2606454	1					
ANR	2606497	ExpressionStatement	gx_device_decache_colors ( dev )	77:4:2473:2502	2606454	3	True				
ANR	2606498	CallExpression	gx_device_decache_colors ( dev )		2606454	0					
ANR	2606499	Callee	gx_device_decache_colors		2606454	0					
ANR	2606500	Identifier	gx_device_decache_colors		2606454	0					
ANR	2606501	ArgumentList	dev		2606454	1					
ANR	2606502	Argument	dev		2606454	0					
ANR	2606503	Identifier	dev		2606454	0					
ANR	2606504	ReturnType	static void		2606454	1					
ANR	2606505	Identifier	x_clear_color_cache		2606454	2					
ANR	2606506	ParameterList	gx_device * dev		2606454	3					
ANR	2606507	Parameter	gx_device * dev	70:20:2248:2288	2606454	0	True				
ANR	2606508	ParameterType	gx_device *		2606454	0					
ANR	2606509	Identifier	dev		2606454	1					
ANR	2606510	CFGEntryNode	ENTRY		2606454		True				
ANR	2606511	CFGExitNode	EXIT		2606454		True				
ANR	2606512	Symbol	countof		2606454						
ANR	2606513	Symbol	* xdev -> color_cache		2606454						
ANR	2606514	Symbol	gx_no_color_index		2606454						
ANR	2606515	Symbol	* i		2606454						
ANR	2606516	Symbol	dev		2606454						
ANR	2606517	Symbol	xdev		2606454						
ANR	2606518	Symbol	* xdev		2606454						
ANR	2606519	Symbol	* * xdev		2606454						
ANR	2606520	Symbol	xdev -> color_cache		2606454						
ANR	2606521	Symbol	i		2606454						
ANR	2606522	Function	x_wrap_open	82:0:2547:2891							
ANR	2606523	FunctionDef	x_wrap_open (gx_device * dev)		2606522	0					
ANR	2606524	CompoundStatement		84:0:2587:2891	2606522	0					
ANR	2606525	IdentifierDeclStatement	gx_device * tdev ;	85:4:2593:2608	2606522	0	True				
ANR	2606526	IdentifierDecl	* tdev		2606522	0					
ANR	2606527	IdentifierDeclType	gx_device *		2606522	0					
ANR	2606528	Identifier	tdev		2606522	1					
ANR	2606529	IdentifierDeclStatement	"int rcode , code ;"	86:4:2614:2629	2606522	1	True				
ANR	2606530	IdentifierDecl	rcode		2606522	0					
ANR	2606531	IdentifierDeclType	int		2606522	0					
ANR	2606532	Identifier	rcode		2606522	1					
ANR	2606533	IdentifierDecl	code		2606522	1					
ANR	2606534	IdentifierDeclType	int		2606522	0					
ANR	2606535	Identifier	code		2606522	1					
ANR	2606536	IfStatement	"if ( ( code = get_dev_target ( & tdev , dev ) ) < 0 )"		2606522	2					
ANR	2606537	Condition	"( code = get_dev_target ( & tdev , dev ) ) < 0"	88:8:2640:2678	2606522	0	True				
ANR	2606538	RelationalExpression	"( code = get_dev_target ( & tdev , dev ) ) < 0"		2606522	0		<			
ANR	2606539	AssignmentExpression	"code = get_dev_target ( & tdev , dev )"		2606522	0		=			
ANR	2606540	Identifier	code		2606522	0					
ANR	2606541	CallExpression	"get_dev_target ( & tdev , dev )"		2606522	1					
ANR	2606542	Callee	get_dev_target		2606522	0					
ANR	2606543	Identifier	get_dev_target		2606522	0					
ANR	2606544	ArgumentList	& tdev		2606522	1					
ANR	2606545	Argument	& tdev		2606522	0					
ANR	2606546	UnaryOperationExpression	& tdev		2606522	0					
ANR	2606547	UnaryOperator	&		2606522	0					
ANR	2606548	Identifier	tdev		2606522	1					
ANR	2606549	Argument	dev		2606522	1					
ANR	2606550	Identifier	dev		2606522	0					
ANR	2606551	PrimaryExpression	0		2606522	1					
ANR	2606552	ReturnStatement	return code ;	89:8:2689:2700	2606522	1	True				
ANR	2606553	Identifier	code		2606522	0					
ANR	2606554	ExpressionStatement	"rcode = ( * dev_proc ( tdev , open_device ) ) ( tdev )"	90:4:2706:2751	2606522	3	True				
ANR	2606555	AssignmentExpression	"rcode = ( * dev_proc ( tdev , open_device ) ) ( tdev )"		2606522	0		=			
ANR	2606556	Identifier	rcode		2606522	0					
ANR	2606557	CallExpression	"( * dev_proc ( tdev , open_device ) ) ( tdev )"		2606522	1					
ANR	2606558	Callee	"* dev_proc ( tdev , open_device )"		2606522	0					
ANR	2606559	UnaryOperationExpression	"* dev_proc ( tdev , open_device )"		2606522	0					
ANR	2606560	UnaryOperator	*		2606522	0					
ANR	2606561	CallExpression	"dev_proc ( tdev , open_device )"		2606522	1					
ANR	2606562	Callee	dev_proc		2606522	0					
ANR	2606563	Identifier	dev_proc		2606522	0					
ANR	2606564	ArgumentList	tdev		2606522	1					
ANR	2606565	Argument	tdev		2606522	0					
ANR	2606566	Identifier	tdev		2606522	0					
ANR	2606567	Argument	open_device		2606522	1					
ANR	2606568	Identifier	open_device		2606522	0					
ANR	2606569	ArgumentList	tdev		2606522	1					
ANR	2606570	Argument	tdev		2606522	0					
ANR	2606571	Identifier	tdev		2606522	0					
ANR	2606572	IfStatement	if ( rcode < 0 )		2606522	4					
ANR	2606573	Condition	rcode < 0	91:8:2761:2769	2606522	0	True				
ANR	2606574	RelationalExpression	rcode < 0		2606522	0		<			
ANR	2606575	Identifier	rcode		2606522	0					
ANR	2606576	PrimaryExpression	0		2606522	1					
ANR	2606577	ReturnStatement	return rcode ;	92:8:2780:2792	2606522	1	True				
ANR	2606578	Identifier	rcode		2606522	0					
ANR	2606579	ExpressionStatement	tdev -> is_open = true	93:4:2798:2818	2606522	5	True				
ANR	2606580	AssignmentExpression	tdev -> is_open = true		2606522	0		=			
ANR	2606581	PtrMemberAccess	tdev -> is_open		2606522	0					
ANR	2606582	Identifier	tdev		2606522	0					
ANR	2606583	Identifier	is_open		2606522	1					
ANR	2606584	Identifier	true		2606522	1					
ANR	2606585	ExpressionStatement	code = get_target_info ( dev )	94:4:2824:2851	2606522	6	True				
ANR	2606586	AssignmentExpression	code = get_target_info ( dev )		2606522	0		=			
ANR	2606587	Identifier	code		2606522	0					
ANR	2606588	CallExpression	get_target_info ( dev )		2606522	1					
ANR	2606589	Callee	get_target_info		2606522	0					
ANR	2606590	Identifier	get_target_info		2606522	0					
ANR	2606591	ArgumentList	dev		2606522	1					
ANR	2606592	Argument	dev		2606522	0					
ANR	2606593	Identifier	dev		2606522	0					
ANR	2606594	ReturnStatement	return ( code < 0 ? code : rcode ) ;	95:4:2857:2889	2606522	7	True				
ANR	2606595	ConditionalExpression	code < 0 ? code : rcode		2606522	0					
ANR	2606596	Condition	code < 0		2606522	0					
ANR	2606597	RelationalExpression	code < 0		2606522	0		<			
ANR	2606598	Identifier	code		2606522	0					
ANR	2606599	PrimaryExpression	0		2606522	1					
ANR	2606600	Identifier	code		2606522	1					
ANR	2606601	Identifier	rcode		2606522	2					
ANR	2606602	ReturnType	static int		2606522	1					
ANR	2606603	Identifier	x_wrap_open		2606522	2					
ANR	2606604	ParameterList	gx_device * dev		2606522	3					
ANR	2606605	Parameter	gx_device * dev	83:12:2570:2584	2606522	0	True				
ANR	2606606	ParameterType	gx_device *		2606522	0					
ANR	2606607	Identifier	dev		2606522	1					
ANR	2606608	CFGEntryNode	ENTRY		2606522		True				
ANR	2606609	CFGExitNode	EXIT		2606522		True				
ANR	2606610	Symbol	code		2606522						
ANR	2606611	Symbol	* dev_proc		2606522						
ANR	2606612	Symbol	rcode		2606522						
ANR	2606613	Symbol	& tdev		2606522						
ANR	2606614	Symbol	open_device		2606522						
ANR	2606615	Symbol	get_dev_target		2606522						
ANR	2606616	Symbol	* tdev		2606522						
ANR	2606617	Symbol	dev		2606522						
ANR	2606618	Symbol	dev_proc		2606522						
ANR	2606619	Symbol	tdev		2606522						
ANR	2606620	Symbol	true		2606522						
ANR	2606621	Symbol	tdev -> is_open		2606522						
ANR	2606622	Symbol	get_target_info		2606522						
ANR	2606623	Symbol	"* dev_proc ( tdev , open_device )"		2606522						
ANR	2606624	Function	x_forward_sync_output	98:0:2894:3102							
ANR	2606625	FunctionDef	x_forward_sync_output (gx_device * dev)		2606624	0					
ANR	2606626	CompoundStatement		100:0:2944:3102	2606624	0					
ANR	2606627	IdentifierDeclStatement	gx_device * tdev ;	101:4:2950:2965	2606624	0	True				
ANR	2606628	IdentifierDecl	* tdev		2606624	0					
ANR	2606629	IdentifierDeclType	gx_device *		2606624	0					
ANR	2606630	Identifier	tdev		2606624	1					
ANR	2606631	IdentifierDeclStatement	int code ;	102:4:2971:2979	2606624	1	True				
ANR	2606632	IdentifierDecl	code		2606624	0					
ANR	2606633	IdentifierDeclType	int		2606624	0					
ANR	2606634	Identifier	code		2606624	1					
ANR	2606635	IfStatement	"if ( ( code = get_dev_target ( & tdev , dev ) ) < 0 )"		2606624	2					
ANR	2606636	Condition	"( code = get_dev_target ( & tdev , dev ) ) < 0"	104:8:2990:3028	2606624	0	True				
ANR	2606637	RelationalExpression	"( code = get_dev_target ( & tdev , dev ) ) < 0"		2606624	0		<			
ANR	2606638	AssignmentExpression	"code = get_dev_target ( & tdev , dev )"		2606624	0		=			
ANR	2606639	Identifier	code		2606624	0					
ANR	2606640	CallExpression	"get_dev_target ( & tdev , dev )"		2606624	1					
ANR	2606641	Callee	get_dev_target		2606624	0					
ANR	2606642	Identifier	get_dev_target		2606624	0					
ANR	2606643	ArgumentList	& tdev		2606624	1					
ANR	2606644	Argument	& tdev		2606624	0					
ANR	2606645	UnaryOperationExpression	& tdev		2606624	0					
ANR	2606646	UnaryOperator	&		2606624	0					
ANR	2606647	Identifier	tdev		2606624	1					
ANR	2606648	Argument	dev		2606624	1					
ANR	2606649	Identifier	dev		2606624	0					
ANR	2606650	PrimaryExpression	0		2606624	1					
ANR	2606651	ReturnStatement	return code ;	105:8:3039:3050	2606624	1	True				
ANR	2606652	Identifier	code		2606624	0					
ANR	2606653	ReturnStatement	"return ( * dev_proc ( tdev , sync_output ) ) ( tdev ) ;"	106:4:3056:3100	2606624	3	True				
ANR	2606654	CallExpression	"( * dev_proc ( tdev , sync_output ) ) ( tdev )"		2606624	0					
ANR	2606655	Callee	"* dev_proc ( tdev , sync_output )"		2606624	0					
ANR	2606656	UnaryOperationExpression	"* dev_proc ( tdev , sync_output )"		2606624	0					
ANR	2606657	UnaryOperator	*		2606624	0					
ANR	2606658	CallExpression	"dev_proc ( tdev , sync_output )"		2606624	1					
ANR	2606659	Callee	dev_proc		2606624	0					
ANR	2606660	Identifier	dev_proc		2606624	0					
ANR	2606661	ArgumentList	tdev		2606624	1					
ANR	2606662	Argument	tdev		2606624	0					
ANR	2606663	Identifier	tdev		2606624	0					
ANR	2606664	Argument	sync_output		2606624	1					
ANR	2606665	Identifier	sync_output		2606624	0					
ANR	2606666	ArgumentList	tdev		2606624	1					
ANR	2606667	Argument	tdev		2606624	0					
ANR	2606668	Identifier	tdev		2606624	0					
ANR	2606669	ReturnType	static int		2606624	1					
ANR	2606670	Identifier	x_forward_sync_output		2606624	2					
ANR	2606671	ParameterList	gx_device * dev		2606624	3					
ANR	2606672	Parameter	gx_device * dev	99:22:2927:2941	2606624	0	True				
ANR	2606673	ParameterType	gx_device *		2606624	0					
ANR	2606674	Identifier	dev		2606624	1					
ANR	2606675	CFGEntryNode	ENTRY		2606624		True				
ANR	2606676	CFGExitNode	EXIT		2606624		True				
ANR	2606677	Symbol	get_dev_target		2606624						
ANR	2606678	Symbol	"* dev_proc ( tdev , sync_output )"		2606624						
ANR	2606679	Symbol	code		2606624						
ANR	2606680	Symbol	dev		2606624						
ANR	2606681	Symbol	* dev_proc		2606624						
ANR	2606682	Symbol	dev_proc		2606624						
ANR	2606683	Symbol	tdev		2606624						
ANR	2606684	Symbol	& tdev		2606624						
ANR	2606685	Symbol	sync_output		2606624						
ANR	2606686	Function	x_forward_output_page	109:0:3105:3359							
ANR	2606687	FunctionDef	"x_forward_output_page (gx_device * dev , int num_copies , int flush)"		2606686	0					
ANR	2606688	CompoundStatement		111:0:3182:3359	2606686	0					
ANR	2606689	IdentifierDeclStatement	gx_device * tdev ;	112:4:3188:3203	2606686	0	True				
ANR	2606690	IdentifierDecl	* tdev		2606686	0					
ANR	2606691	IdentifierDeclType	gx_device *		2606686	0					
ANR	2606692	Identifier	tdev		2606686	1					
ANR	2606693	IdentifierDeclStatement	int code ;	113:4:3209:3217	2606686	1	True				
ANR	2606694	IdentifierDecl	code		2606686	0					
ANR	2606695	IdentifierDeclType	int		2606686	0					
ANR	2606696	Identifier	code		2606686	1					
ANR	2606697	IfStatement	"if ( ( code = get_dev_target ( & tdev , dev ) ) < 0 )"		2606686	2					
ANR	2606698	Condition	"( code = get_dev_target ( & tdev , dev ) ) < 0"	115:8:3228:3266	2606686	0	True				
ANR	2606699	RelationalExpression	"( code = get_dev_target ( & tdev , dev ) ) < 0"		2606686	0		<			
ANR	2606700	AssignmentExpression	"code = get_dev_target ( & tdev , dev )"		2606686	0		=			
ANR	2606701	Identifier	code		2606686	0					
ANR	2606702	CallExpression	"get_dev_target ( & tdev , dev )"		2606686	1					
ANR	2606703	Callee	get_dev_target		2606686	0					
ANR	2606704	Identifier	get_dev_target		2606686	0					
ANR	2606705	ArgumentList	& tdev		2606686	1					
ANR	2606706	Argument	& tdev		2606686	0					
ANR	2606707	UnaryOperationExpression	& tdev		2606686	0					
ANR	2606708	UnaryOperator	&		2606686	0					
ANR	2606709	Identifier	tdev		2606686	1					
ANR	2606710	Argument	dev		2606686	1					
ANR	2606711	Identifier	dev		2606686	0					
ANR	2606712	PrimaryExpression	0		2606686	1					
ANR	2606713	ReturnStatement	return code ;	116:8:3277:3288	2606686	1	True				
ANR	2606714	Identifier	code		2606686	0					
ANR	2606715	ReturnStatement	"return ( * dev_proc ( tdev , output_page ) ) ( tdev , num_copies , flush ) ;"	117:4:3294:3357	2606686	3	True				
ANR	2606716	CallExpression	"( * dev_proc ( tdev , output_page ) ) ( tdev , num_copies , flush )"		2606686	0					
ANR	2606717	Callee	"* dev_proc ( tdev , output_page )"		2606686	0					
ANR	2606718	UnaryOperationExpression	"* dev_proc ( tdev , output_page )"		2606686	0					
ANR	2606719	UnaryOperator	*		2606686	0					
ANR	2606720	CallExpression	"dev_proc ( tdev , output_page )"		2606686	1					
ANR	2606721	Callee	dev_proc		2606686	0					
ANR	2606722	Identifier	dev_proc		2606686	0					
ANR	2606723	ArgumentList	tdev		2606686	1					
ANR	2606724	Argument	tdev		2606686	0					
ANR	2606725	Identifier	tdev		2606686	0					
ANR	2606726	Argument	output_page		2606686	1					
ANR	2606727	Identifier	output_page		2606686	0					
ANR	2606728	ArgumentList	tdev		2606686	1					
ANR	2606729	Argument	tdev		2606686	0					
ANR	2606730	Identifier	tdev		2606686	0					
ANR	2606731	Argument	num_copies		2606686	1					
ANR	2606732	Identifier	num_copies		2606686	0					
ANR	2606733	Argument	flush		2606686	2					
ANR	2606734	Identifier	flush		2606686	0					
ANR	2606735	ReturnType	static int		2606686	1					
ANR	2606736	Identifier	x_forward_output_page		2606686	2					
ANR	2606737	ParameterList	"gx_device * dev , int num_copies , int flush"		2606686	3					
ANR	2606738	Parameter	gx_device * dev	110:22:3138:3152	2606686	0	True				
ANR	2606739	ParameterType	gx_device *		2606686	0					
ANR	2606740	Identifier	dev		2606686	1					
ANR	2606741	Parameter	int num_copies	110:39:3155:3168	2606686	1	True				
ANR	2606742	ParameterType	int		2606686	0					
ANR	2606743	Identifier	num_copies		2606686	1					
ANR	2606744	Parameter	int flush	110:55:3171:3179	2606686	2	True				
ANR	2606745	ParameterType	int		2606686	0					
ANR	2606746	Identifier	flush		2606686	1					
ANR	2606747	CFGEntryNode	ENTRY		2606686		True				
ANR	2606748	CFGExitNode	EXIT		2606686		True				
ANR	2606749	Symbol	get_dev_target		2606686						
ANR	2606750	Symbol	code		2606686						
ANR	2606751	Symbol	dev		2606686						
ANR	2606752	Symbol	flush		2606686						
ANR	2606753	Symbol	"* dev_proc ( tdev , output_page )"		2606686						
ANR	2606754	Symbol	dev_proc		2606686						
ANR	2606755	Symbol	* dev_proc		2606686						
ANR	2606756	Symbol	tdev		2606686						
ANR	2606757	Symbol	output_page		2606686						
ANR	2606758	Symbol	num_copies		2606686						
ANR	2606759	Symbol	& tdev		2606686						
ANR	2606760	Function	x_wrap_close	120:0:3362:3684							
ANR	2606761	FunctionDef	x_wrap_close (gx_device * dev)		2606760	0					
ANR	2606762	CompoundStatement		122:0:3403:3684	2606760	0					
ANR	2606763	ExpressionStatement	"gx_device_set_target ( ( gx_device_forward * ) dev , NULL )"	128:4:3586:3638	2606760	0	True				
ANR	2606764	CallExpression	"gx_device_set_target ( ( gx_device_forward * ) dev , NULL )"		2606760	0					
ANR	2606765	Callee	gx_device_set_target		2606760	0					
ANR	2606766	Identifier	gx_device_set_target		2606760	0					
ANR	2606767	ArgumentList	( gx_device_forward * ) dev		2606760	1					
ANR	2606768	Argument	( gx_device_forward * ) dev		2606760	0					
ANR	2606769	CastExpression	( gx_device_forward * ) dev		2606760	0					
ANR	2606770	CastTarget	gx_device_forward *		2606760	0					
ANR	2606771	Identifier	dev		2606760	1					
ANR	2606772	Argument	NULL		2606760	1					
ANR	2606773	Identifier	NULL		2606760	0					
ANR	2606774	ExpressionStatement	x_clear_color_cache ( dev )	129:4:3644:3668	2606760	1	True				
ANR	2606775	CallExpression	x_clear_color_cache ( dev )		2606760	0					
ANR	2606776	Callee	x_clear_color_cache		2606760	0					
ANR	2606777	Identifier	x_clear_color_cache		2606760	0					
ANR	2606778	ArgumentList	dev		2606760	1					
ANR	2606779	Argument	dev		2606760	0					
ANR	2606780	Identifier	dev		2606760	0					
ANR	2606781	ReturnStatement	return 0 ;	130:4:3674:3682	2606760	2	True				
ANR	2606782	PrimaryExpression	0		2606760	0					
ANR	2606783	ReturnType	static int		2606760	1					
ANR	2606784	Identifier	x_wrap_close		2606760	2					
ANR	2606785	ParameterList	gx_device * dev		2606760	3					
ANR	2606786	Parameter	gx_device * dev	121:13:3386:3400	2606760	0	True				
ANR	2606787	ParameterType	gx_device *		2606760	0					
ANR	2606788	Identifier	dev		2606760	1					
ANR	2606789	CFGEntryNode	ENTRY		2606760		True				
ANR	2606790	CFGExitNode	EXIT		2606760		True				
ANR	2606791	Symbol	NULL		2606760						
ANR	2606792	Symbol	dev		2606760						
ANR	2606793	Function	x_wrap_map_color_rgb	133:0:3687:4088							
ANR	2606794	FunctionDef	"x_wrap_map_color_rgb (gx_device * dev , gx_color_index color , gx_color_value prgb [ 3 ])"		2606793	0					
ANR	2606795	CompoundStatement		136:0:3803:4088	2606793	0					
ANR	2606796	IdentifierDeclStatement	gx_device * tdev ;	137:4:3809:3824	2606793	0	True				
ANR	2606797	IdentifierDecl	* tdev		2606793	0					
ANR	2606798	IdentifierDeclType	gx_device *		2606793	0					
ANR	2606799	Identifier	tdev		2606793	1					
ANR	2606800	IdentifierDeclStatement	int code ;	138:4:3830:3838	2606793	1	True				
ANR	2606801	IdentifierDecl	code		2606793	0					
ANR	2606802	IdentifierDeclType	int		2606793	0					
ANR	2606803	Identifier	code		2606793	1					
ANR	2606804	IfStatement	"if ( ( code = get_dev_target ( & tdev , dev ) ) < 0 )"		2606793	2					
ANR	2606805	Condition	"( code = get_dev_target ( & tdev , dev ) ) < 0"	140:8:3849:3887	2606793	0	True				
ANR	2606806	RelationalExpression	"( code = get_dev_target ( & tdev , dev ) ) < 0"		2606793	0		<			
ANR	2606807	AssignmentExpression	"code = get_dev_target ( & tdev , dev )"		2606793	0		=			
ANR	2606808	Identifier	code		2606793	0					
ANR	2606809	CallExpression	"get_dev_target ( & tdev , dev )"		2606793	1					
ANR	2606810	Callee	get_dev_target		2606793	0					
ANR	2606811	Identifier	get_dev_target		2606793	0					
ANR	2606812	ArgumentList	& tdev		2606793	1					
ANR	2606813	Argument	& tdev		2606793	0					
ANR	2606814	UnaryOperationExpression	& tdev		2606793	0					
ANR	2606815	UnaryOperator	&		2606793	0					
ANR	2606816	Identifier	tdev		2606793	1					
ANR	2606817	Argument	dev		2606793	1					
ANR	2606818	Identifier	dev		2606793	0					
ANR	2606819	PrimaryExpression	0		2606793	1					
ANR	2606820	ReturnStatement	return code ;	141:8:3898:3909	2606793	1	True				
ANR	2606821	Identifier	code		2606793	0					
ANR	2606822	ReturnStatement	"return ( * dev_proc ( tdev , map_color_rgb ) ) ( tdev , x_alt_map_color ( dev , color ) , prgb ) ;"	142:4:3915:4086	2606793	3	True				
ANR	2606823	CallExpression	"( * dev_proc ( tdev , map_color_rgb ) ) ( tdev , x_alt_map_color ( dev , color ) , prgb )"		2606793	0					
ANR	2606824	Callee	"* dev_proc ( tdev , map_color_rgb )"		2606793	0					
ANR	2606825	UnaryOperationExpression	"* dev_proc ( tdev , map_color_rgb )"		2606793	0					
ANR	2606826	UnaryOperator	*		2606793	0					
ANR	2606827	CallExpression	"dev_proc ( tdev , map_color_rgb )"		2606793	1					
ANR	2606828	Callee	dev_proc		2606793	0					
ANR	2606829	Identifier	dev_proc		2606793	0					
ANR	2606830	ArgumentList	tdev		2606793	1					
ANR	2606831	Argument	tdev		2606793	0					
ANR	2606832	Identifier	tdev		2606793	0					
ANR	2606833	Argument	map_color_rgb		2606793	1					
ANR	2606834	Identifier	map_color_rgb		2606793	0					
ANR	2606835	ArgumentList	tdev		2606793	1					
ANR	2606836	Argument	tdev		2606793	0					
ANR	2606837	Identifier	tdev		2606793	0					
ANR	2606838	Argument	"x_alt_map_color ( dev , color )"		2606793	1					
ANR	2606839	CallExpression	"x_alt_map_color ( dev , color )"		2606793	0					
ANR	2606840	Callee	x_alt_map_color		2606793	0					
ANR	2606841	Identifier	x_alt_map_color		2606793	0					
ANR	2606842	ArgumentList	dev		2606793	1					
ANR	2606843	Argument	dev		2606793	0					
ANR	2606844	Identifier	dev		2606793	0					
ANR	2606845	Argument	color		2606793	1					
ANR	2606846	Identifier	color		2606793	0					
ANR	2606847	Argument	prgb		2606793	2					
ANR	2606848	Identifier	prgb		2606793	0					
ANR	2606849	ReturnType	static int		2606793	1					
ANR	2606850	Identifier	x_wrap_map_color_rgb		2606793	2					
ANR	2606851	ParameterList	"gx_device * dev , gx_color_index color , gx_color_value prgb [ 3 ]"		2606793	3					
ANR	2606852	Parameter	gx_device * dev	134:21:3719:3733	2606793	0	True				
ANR	2606853	ParameterType	gx_device *		2606793	0					
ANR	2606854	Identifier	dev		2606793	1					
ANR	2606855	Parameter	gx_color_index color	134:38:3736:3755	2606793	1	True				
ANR	2606856	ParameterType	gx_color_index		2606793	0					
ANR	2606857	Identifier	color		2606793	1					
ANR	2606858	Parameter	gx_color_value prgb [ 3 ]	135:21:3779:3800	2606793	2	True				
ANR	2606859	ParameterType	gx_color_value [ 3 ]		2606793	0					
ANR	2606860	Identifier	prgb		2606793	1					
ANR	2606861	CFGEntryNode	ENTRY		2606793		True				
ANR	2606862	CFGExitNode	EXIT		2606793		True				
ANR	2606863	Symbol	get_dev_target		2606793						
ANR	2606864	Symbol	x_alt_map_color		2606793						
ANR	2606865	Symbol	code		2606793						
ANR	2606866	Symbol	dev		2606793						
ANR	2606867	Symbol	color		2606793						
ANR	2606868	Symbol	dev_proc		2606793						
ANR	2606869	Symbol	* dev_proc		2606793						
ANR	2606870	Symbol	tdev		2606793						
ANR	2606871	Symbol	prgb		2606793						
ANR	2606872	Symbol	& tdev		2606793						
ANR	2606873	Symbol	"* dev_proc ( tdev , map_color_rgb )"		2606793						
ANR	2606874	Symbol	map_color_rgb		2606793						
ANR	2606875	Function	x_wrap_fill_rectangle	147:0:4091:4461							
ANR	2606876	FunctionDef	"x_wrap_fill_rectangle (gx_device * dev , int x , int y , int w , int h , gx_color_index color)"		2606875	0					
ANR	2606877	CompoundStatement		150:0:4213:4461	2606875	0					
ANR	2606878	IdentifierDeclStatement	gx_device * tdev ;	151:4:4219:4234	2606875	0	True				
ANR	2606879	IdentifierDecl	* tdev		2606875	0					
ANR	2606880	IdentifierDeclType	gx_device *		2606875	0					
ANR	2606881	Identifier	tdev		2606875	1					
ANR	2606882	IdentifierDeclStatement	int code ;	152:4:4240:4248	2606875	1	True				
ANR	2606883	IdentifierDecl	code		2606875	0					
ANR	2606884	IdentifierDeclType	int		2606875	0					
ANR	2606885	Identifier	code		2606875	1					
ANR	2606886	IfStatement	"if ( ( code = get_dev_target ( & tdev , dev ) ) < 0 )"		2606875	2					
ANR	2606887	Condition	"( code = get_dev_target ( & tdev , dev ) ) < 0"	154:8:4259:4297	2606875	0	True				
ANR	2606888	RelationalExpression	"( code = get_dev_target ( & tdev , dev ) ) < 0"		2606875	0		<			
ANR	2606889	AssignmentExpression	"code = get_dev_target ( & tdev , dev )"		2606875	0		=			
ANR	2606890	Identifier	code		2606875	0					
ANR	2606891	CallExpression	"get_dev_target ( & tdev , dev )"		2606875	1					
ANR	2606892	Callee	get_dev_target		2606875	0					
ANR	2606893	Identifier	get_dev_target		2606875	0					
ANR	2606894	ArgumentList	& tdev		2606875	1					
ANR	2606895	Argument	& tdev		2606875	0					
ANR	2606896	UnaryOperationExpression	& tdev		2606875	0					
ANR	2606897	UnaryOperator	&		2606875	0					
ANR	2606898	Identifier	tdev		2606875	1					
ANR	2606899	Argument	dev		2606875	1					
ANR	2606900	Identifier	dev		2606875	0					
ANR	2606901	PrimaryExpression	0		2606875	1					
ANR	2606902	ReturnStatement	return code ;	155:8:4308:4319	2606875	1	True				
ANR	2606903	Identifier	code		2606875	0					
ANR	2606904	ReturnStatement	"return ( * dev_proc ( tdev , fill_rectangle ) ) ( tdev , x , y , w , h , x_alt_map_color ( dev , color ) ) ;"	156:4:4325:4459	2606875	3	True				
ANR	2606905	CallExpression	"( * dev_proc ( tdev , fill_rectangle ) ) ( tdev , x , y , w , h , x_alt_map_color ( dev , color ) )"		2606875	0					
ANR	2606906	Callee	"* dev_proc ( tdev , fill_rectangle )"		2606875	0					
ANR	2606907	UnaryOperationExpression	"* dev_proc ( tdev , fill_rectangle )"		2606875	0					
ANR	2606908	UnaryOperator	*		2606875	0					
ANR	2606909	CallExpression	"dev_proc ( tdev , fill_rectangle )"		2606875	1					
ANR	2606910	Callee	dev_proc		2606875	0					
ANR	2606911	Identifier	dev_proc		2606875	0					
ANR	2606912	ArgumentList	tdev		2606875	1					
ANR	2606913	Argument	tdev		2606875	0					
ANR	2606914	Identifier	tdev		2606875	0					
ANR	2606915	Argument	fill_rectangle		2606875	1					
ANR	2606916	Identifier	fill_rectangle		2606875	0					
ANR	2606917	ArgumentList	tdev		2606875	1					
ANR	2606918	Argument	tdev		2606875	0					
ANR	2606919	Identifier	tdev		2606875	0					
ANR	2606920	Argument	x		2606875	1					
ANR	2606921	Identifier	x		2606875	0					
ANR	2606922	Argument	y		2606875	2					
ANR	2606923	Identifier	y		2606875	0					
ANR	2606924	Argument	w		2606875	3					
ANR	2606925	Identifier	w		2606875	0					
ANR	2606926	Argument	h		2606875	4					
ANR	2606927	Identifier	h		2606875	0					
ANR	2606928	Argument	"x_alt_map_color ( dev , color )"		2606875	5					
ANR	2606929	CallExpression	"x_alt_map_color ( dev , color )"		2606875	0					
ANR	2606930	Callee	x_alt_map_color		2606875	0					
ANR	2606931	Identifier	x_alt_map_color		2606875	0					
ANR	2606932	ArgumentList	dev		2606875	1					
ANR	2606933	Argument	dev		2606875	0					
ANR	2606934	Identifier	dev		2606875	0					
ANR	2606935	Argument	color		2606875	1					
ANR	2606936	Identifier	color		2606875	0					
ANR	2606937	ReturnType	static int		2606875	1					
ANR	2606938	Identifier	x_wrap_fill_rectangle		2606875	2					
ANR	2606939	ParameterList	"gx_device * dev , int x , int y , int w , int h , gx_color_index color"		2606875	3					
ANR	2606940	Parameter	gx_device * dev	148:22:4124:4138	2606875	0	True				
ANR	2606941	ParameterType	gx_device *		2606875	0					
ANR	2606942	Identifier	dev		2606875	1					
ANR	2606943	Parameter	int x	148:39:4141:4145	2606875	1	True				
ANR	2606944	ParameterType	int		2606875	0					
ANR	2606945	Identifier	x		2606875	1					
ANR	2606946	Parameter	int y	148:46:4148:4152	2606875	2	True				
ANR	2606947	ParameterType	int		2606875	0					
ANR	2606948	Identifier	y		2606875	1					
ANR	2606949	Parameter	int w	148:53:4155:4159	2606875	3	True				
ANR	2606950	ParameterType	int		2606875	0					
ANR	2606951	Identifier	w		2606875	1					
ANR	2606952	Parameter	int h	148:60:4162:4166	2606875	4	True				
ANR	2606953	ParameterType	int		2606875	0					
ANR	2606954	Identifier	h		2606875	1					
ANR	2606955	Parameter	gx_color_index color	149:22:4191:4210	2606875	5	True				
ANR	2606956	ParameterType	gx_color_index		2606875	0					
ANR	2606957	Identifier	color		2606875	1					
ANR	2606958	CFGEntryNode	ENTRY		2606875		True				
ANR	2606959	CFGExitNode	EXIT		2606875		True				
ANR	2606960	Symbol	code		2606875						
ANR	2606961	Symbol	color		2606875						
ANR	2606962	Symbol	* dev_proc		2606875						
ANR	2606963	Symbol	h		2606875						
ANR	2606964	Symbol	& tdev		2606875						
ANR	2606965	Symbol	fill_rectangle		2606875						
ANR	2606966	Symbol	"* dev_proc ( tdev , fill_rectangle )"		2606875						
ANR	2606967	Symbol	get_dev_target		2606875						
ANR	2606968	Symbol	x_alt_map_color		2606875						
ANR	2606969	Symbol	dev		2606875						
ANR	2606970	Symbol	dev_proc		2606875						
ANR	2606971	Symbol	w		2606875						
ANR	2606972	Symbol	tdev		2606875						
ANR	2606973	Symbol	x		2606875						
ANR	2606974	Symbol	y		2606875						
ANR	2606975	Function	x_wrap_copy_mono	160:0:4464:5064							
ANR	2606976	FunctionDef	"x_wrap_copy_mono (gx_device * dev , const byte * base , int sourcex , int raster , gx_bitmap_id id , int x , int y , int w , int h , gx_color_index zero , gx_color_index one)"		2606975	0					
ANR	2606977	CompoundStatement		165:0:4690:5064	2606975	0					
ANR	2606978	IdentifierDeclStatement	gx_device * tdev ;	166:4:4696:4711	2606975	0	True				
ANR	2606979	IdentifierDecl	* tdev		2606975	0					
ANR	2606980	IdentifierDeclType	gx_device *		2606975	0					
ANR	2606981	Identifier	tdev		2606975	1					
ANR	2606982	IdentifierDeclStatement	int code ;	167:4:4717:4725	2606975	1	True				
ANR	2606983	IdentifierDecl	code		2606975	0					
ANR	2606984	IdentifierDeclType	int		2606975	0					
ANR	2606985	Identifier	code		2606975	1					
ANR	2606986	IfStatement	"if ( ( code = get_dev_target ( & tdev , dev ) ) < 0 )"		2606975	2					
ANR	2606987	Condition	"( code = get_dev_target ( & tdev , dev ) ) < 0"	169:8:4736:4774	2606975	0	True				
ANR	2606988	RelationalExpression	"( code = get_dev_target ( & tdev , dev ) ) < 0"		2606975	0		<			
ANR	2606989	AssignmentExpression	"code = get_dev_target ( & tdev , dev )"		2606975	0		=			
ANR	2606990	Identifier	code		2606975	0					
ANR	2606991	CallExpression	"get_dev_target ( & tdev , dev )"		2606975	1					
ANR	2606992	Callee	get_dev_target		2606975	0					
ANR	2606993	Identifier	get_dev_target		2606975	0					
ANR	2606994	ArgumentList	& tdev		2606975	1					
ANR	2606995	Argument	& tdev		2606975	0					
ANR	2606996	UnaryOperationExpression	& tdev		2606975	0					
ANR	2606997	UnaryOperator	&		2606975	0					
ANR	2606998	Identifier	tdev		2606975	1					
ANR	2606999	Argument	dev		2606975	1					
ANR	2607000	Identifier	dev		2606975	0					
ANR	2607001	PrimaryExpression	0		2606975	1					
ANR	2607002	ReturnStatement	return code ;	170:8:4785:4796	2606975	1	True				
ANR	2607003	Identifier	code		2606975	0					
ANR	2607004	ReturnStatement	"return ( * dev_proc ( tdev , copy_mono ) ) ( tdev , base , sourcex , raster , id , x , y , w , h , x_alt_map_color ( dev , zero ) , x_alt_map_color ( dev , one ) ) ;"	171:4:4802:5061	2606975	3	True				
ANR	2607005	CallExpression	"( * dev_proc ( tdev , copy_mono ) ) ( tdev , base , sourcex , raster , id , x , y , w , h , x_alt_map_color ( dev , zero ) , x_alt_map_color ( dev , one ) )"		2606975	0					
ANR	2607006	Callee	"* dev_proc ( tdev , copy_mono )"		2606975	0					
ANR	2607007	UnaryOperationExpression	"* dev_proc ( tdev , copy_mono )"		2606975	0					
ANR	2607008	UnaryOperator	*		2606975	0					
ANR	2607009	CallExpression	"dev_proc ( tdev , copy_mono )"		2606975	1					
ANR	2607010	Callee	dev_proc		2606975	0					
ANR	2607011	Identifier	dev_proc		2606975	0					
ANR	2607012	ArgumentList	tdev		2606975	1					
ANR	2607013	Argument	tdev		2606975	0					
ANR	2607014	Identifier	tdev		2606975	0					
ANR	2607015	Argument	copy_mono		2606975	1					
ANR	2607016	Identifier	copy_mono		2606975	0					
ANR	2607017	ArgumentList	tdev		2606975	1					
ANR	2607018	Argument	tdev		2606975	0					
ANR	2607019	Identifier	tdev		2606975	0					
ANR	2607020	Argument	base		2606975	1					
ANR	2607021	Identifier	base		2606975	0					
ANR	2607022	Argument	sourcex		2606975	2					
ANR	2607023	Identifier	sourcex		2606975	0					
ANR	2607024	Argument	raster		2606975	3					
ANR	2607025	Identifier	raster		2606975	0					
ANR	2607026	Argument	id		2606975	4					
ANR	2607027	Identifier	id		2606975	0					
ANR	2607028	Argument	x		2606975	5					
ANR	2607029	Identifier	x		2606975	0					
ANR	2607030	Argument	y		2606975	6					
ANR	2607031	Identifier	y		2606975	0					
ANR	2607032	Argument	w		2606975	7					
ANR	2607033	Identifier	w		2606975	0					
ANR	2607034	Argument	h		2606975	8					
ANR	2607035	Identifier	h		2606975	0					
ANR	2607036	Argument	"x_alt_map_color ( dev , zero )"		2606975	9					
ANR	2607037	CallExpression	"x_alt_map_color ( dev , zero )"		2606975	0					
ANR	2607038	Callee	x_alt_map_color		2606975	0					
ANR	2607039	Identifier	x_alt_map_color		2606975	0					
ANR	2607040	ArgumentList	dev		2606975	1					
ANR	2607041	Argument	dev		2606975	0					
ANR	2607042	Identifier	dev		2606975	0					
ANR	2607043	Argument	zero		2606975	1					
ANR	2607044	Identifier	zero		2606975	0					
ANR	2607045	Argument	"x_alt_map_color ( dev , one )"		2606975	10					
ANR	2607046	CallExpression	"x_alt_map_color ( dev , one )"		2606975	0					
ANR	2607047	Callee	x_alt_map_color		2606975	0					
ANR	2607048	Identifier	x_alt_map_color		2606975	0					
ANR	2607049	ArgumentList	dev		2606975	1					
ANR	2607050	Argument	dev		2606975	0					
ANR	2607051	Identifier	dev		2606975	0					
ANR	2607052	Argument	one		2606975	1					
ANR	2607053	Identifier	one		2606975	0					
ANR	2607054	ReturnType	static int		2606975	1					
ANR	2607055	Identifier	x_wrap_copy_mono		2606975	2					
ANR	2607056	ParameterList	"gx_device * dev , const byte * base , int sourcex , int raster , gx_bitmap_id id , int x , int y , int w , int h , gx_color_index zero , gx_color_index one"		2606975	3					
ANR	2607057	Parameter	gx_device * dev	161:17:4492:4506	2606975	0	True				
ANR	2607058	ParameterType	gx_device *		2606975	0					
ANR	2607059	Identifier	dev		2606975	1					
ANR	2607060	Parameter	const byte * base	162:17:4526:4542	2606975	1	True				
ANR	2607061	ParameterType	const byte *		2606975	0					
ANR	2607062	Identifier	base		2606975	1					
ANR	2607063	Parameter	int sourcex	162:36:4545:4555	2606975	2	True				
ANR	2607064	ParameterType	int		2606975	0					
ANR	2607065	Identifier	sourcex		2606975	1					
ANR	2607066	Parameter	int raster	162:49:4558:4567	2606975	3	True				
ANR	2607067	ParameterType	int		2606975	0					
ANR	2607068	Identifier	raster		2606975	1					
ANR	2607069	Parameter	gx_bitmap_id id	162:61:4570:4584	2606975	4	True				
ANR	2607070	ParameterType	gx_bitmap_id		2606975	0					
ANR	2607071	Identifier	id		2606975	1					
ANR	2607072	Parameter	int x	163:17:4604:4608	2606975	5	True				
ANR	2607073	ParameterType	int		2606975	0					
ANR	2607074	Identifier	x		2606975	1					
ANR	2607075	Parameter	int y	163:24:4611:4615	2606975	6	True				
ANR	2607076	ParameterType	int		2606975	0					
ANR	2607077	Identifier	y		2606975	1					
ANR	2607078	Parameter	int w	163:31:4618:4622	2606975	7	True				
ANR	2607079	ParameterType	int		2606975	0					
ANR	2607080	Identifier	w		2606975	1					
ANR	2607081	Parameter	int h	163:38:4625:4629	2606975	8	True				
ANR	2607082	ParameterType	int		2606975	0					
ANR	2607083	Identifier	h		2606975	1					
ANR	2607084	Parameter	gx_color_index zero	164:17:4649:4667	2606975	9	True				
ANR	2607085	ParameterType	gx_color_index		2606975	0					
ANR	2607086	Identifier	zero		2606975	1					
ANR	2607087	Parameter	gx_color_index one	164:38:4670:4687	2606975	10	True				
ANR	2607088	ParameterType	gx_color_index		2606975	0					
ANR	2607089	Identifier	one		2606975	1					
ANR	2607090	CFGEntryNode	ENTRY		2606975		True				
ANR	2607091	CFGExitNode	EXIT		2606975		True				
ANR	2607092	Symbol	sourcex		2606975						
ANR	2607093	Symbol	code		2606975						
ANR	2607094	Symbol	* dev_proc		2606975						
ANR	2607095	Symbol	one		2606975						
ANR	2607096	Symbol	raster		2606975						
ANR	2607097	Symbol	h		2606975						
ANR	2607098	Symbol	& tdev		2606975						
ANR	2607099	Symbol	zero		2606975						
ANR	2607100	Symbol	get_dev_target		2606975						
ANR	2607101	Symbol	x_alt_map_color		2606975						
ANR	2607102	Symbol	"* dev_proc ( tdev , copy_mono )"		2606975						
ANR	2607103	Symbol	dev		2606975						
ANR	2607104	Symbol	dev_proc		2606975						
ANR	2607105	Symbol	copy_mono		2606975						
ANR	2607106	Symbol	w		2606975						
ANR	2607107	Symbol	tdev		2606975						
ANR	2607108	Symbol	x		2606975						
ANR	2607109	Symbol	y		2606975						
ANR	2607110	Symbol	id		2606975						
ANR	2607111	Symbol	base		2606975						
ANR	2607112	Function	x_wrap_copy_color	178:0:5067:7888							
ANR	2607113	FunctionDef	"x_wrap_copy_color (gx_device * dev , const byte * base , int sourcex , int raster , gx_bitmap_id id , int x , int y , int w , int h)"		2607112	0					
ANR	2607114	CompoundStatement		181:0:5220:7888	2607112	0					
ANR	2607115	IdentifierDeclStatement	gx_device * tdev ;	182:4:5226:5241	2607112	0	True				
ANR	2607116	IdentifierDecl	* tdev		2607112	0					
ANR	2607117	IdentifierDeclType	gx_device *		2607112	0					
ANR	2607118	Identifier	tdev		2607112	1					
ANR	2607119	Statement	define	184:1:5245:5250	2607112	1	True				
ANR	2607120	Statement	mapped_bytes	184:8:5252:5263	2607112	2	True				
ANR	2607121	Statement	480	184:21:5265:5267	2607112	3	True				
ANR	2607122	IdentifierDeclStatement	"int depth_bytes , source_bits ;"	185:4:5307:5335	2607112	4	True				
ANR	2607123	IdentifierDecl	depth_bytes		2607112	0					
ANR	2607124	IdentifierDeclType	int		2607112	0					
ANR	2607125	Identifier	depth_bytes		2607112	1					
ANR	2607126	IdentifierDecl	source_bits		2607112	1					
ANR	2607127	IdentifierDeclType	int		2607112	0					
ANR	2607128	Identifier	source_bits		2607112	1					
ANR	2607129	IdentifierDeclStatement	"int block_w , block_h ;"	186:4:5341:5361	2607112	5	True				
ANR	2607130	IdentifierDecl	block_w		2607112	0					
ANR	2607131	IdentifierDeclType	int		2607112	0					
ANR	2607132	Identifier	block_w		2607112	1					
ANR	2607133	IdentifierDecl	block_h		2607112	1					
ANR	2607134	IdentifierDeclType	int		2607112	0					
ANR	2607135	Identifier	block_h		2607112	1					
ANR	2607136	IdentifierDeclStatement	"int xblock , yblock ;"	187:4:5367:5385	2607112	6	True				
ANR	2607137	IdentifierDecl	xblock		2607112	0					
ANR	2607138	IdentifierDeclType	int		2607112	0					
ANR	2607139	Identifier	xblock		2607112	1					
ANR	2607140	IdentifierDecl	yblock		2607112	1					
ANR	2607141	IdentifierDeclType	int		2607112	0					
ANR	2607142	Identifier	yblock		2607112	1					
ANR	2607143	IdentifierDeclStatement	byte mapped [ mapped_bytes ] ;	188:4:5391:5416	2607112	7	True				
ANR	2607144	IdentifierDecl	mapped [ mapped_bytes ]		2607112	0					
ANR	2607145	IdentifierDeclType	byte [ mapped_bytes ]		2607112	0					
ANR	2607146	Identifier	mapped		2607112	1					
ANR	2607147	Identifier	mapped_bytes		2607112	2					
ANR	2607148	IdentifierDeclStatement	int code ;	189:4:5422:5430	2607112	8	True				
ANR	2607149	IdentifierDecl	code		2607112	0					
ANR	2607150	IdentifierDeclType	int		2607112	0					
ANR	2607151	Identifier	code		2607112	1					
ANR	2607152	ExpressionStatement	"fit_copy ( dev , base , sourcex , raster , id , x , y , w , h )"	191:4:5437:5489	2607112	9	True				
ANR	2607153	CallExpression	"fit_copy ( dev , base , sourcex , raster , id , x , y , w , h )"		2607112	0					
ANR	2607154	Callee	fit_copy		2607112	0					
ANR	2607155	Identifier	fit_copy		2607112	0					
ANR	2607156	ArgumentList	dev		2607112	1					
ANR	2607157	Argument	dev		2607112	0					
ANR	2607158	Identifier	dev		2607112	0					
ANR	2607159	Argument	base		2607112	1					
ANR	2607160	Identifier	base		2607112	0					
ANR	2607161	Argument	sourcex		2607112	2					
ANR	2607162	Identifier	sourcex		2607112	0					
ANR	2607163	Argument	raster		2607112	3					
ANR	2607164	Identifier	raster		2607112	0					
ANR	2607165	Argument	id		2607112	4					
ANR	2607166	Identifier	id		2607112	0					
ANR	2607167	Argument	x		2607112	5					
ANR	2607168	Identifier	x		2607112	0					
ANR	2607169	Argument	y		2607112	6					
ANR	2607170	Identifier	y		2607112	0					
ANR	2607171	Argument	w		2607112	7					
ANR	2607172	Identifier	w		2607112	0					
ANR	2607173	Argument	h		2607112	8					
ANR	2607174	Identifier	h		2607112	0					
ANR	2607175	IfStatement	"if ( ( code = get_dev_target ( & tdev , dev ) ) < 0 )"		2607112	10					
ANR	2607176	Condition	"( code = get_dev_target ( & tdev , dev ) ) < 0"	192:8:5499:5537	2607112	0	True				
ANR	2607177	RelationalExpression	"( code = get_dev_target ( & tdev , dev ) ) < 0"		2607112	0		<			
ANR	2607178	AssignmentExpression	"code = get_dev_target ( & tdev , dev )"		2607112	0		=			
ANR	2607179	Identifier	code		2607112	0					
ANR	2607180	CallExpression	"get_dev_target ( & tdev , dev )"		2607112	1					
ANR	2607181	Callee	get_dev_target		2607112	0					
ANR	2607182	Identifier	get_dev_target		2607112	0					
ANR	2607183	ArgumentList	& tdev		2607112	1					
ANR	2607184	Argument	& tdev		2607112	0					
ANR	2607185	UnaryOperationExpression	& tdev		2607112	0					
ANR	2607186	UnaryOperator	&		2607112	0					
ANR	2607187	Identifier	tdev		2607112	1					
ANR	2607188	Argument	dev		2607112	1					
ANR	2607189	Identifier	dev		2607112	0					
ANR	2607190	PrimaryExpression	0		2607112	1					
ANR	2607191	ReturnStatement	return code ;	193:8:5548:5559	2607112	1	True				
ANR	2607192	Identifier	code		2607112	0					
ANR	2607193	IfStatement	if ( tdev -> color_info . depth & 7 )		2607112	11					
ANR	2607194	Condition	tdev -> color_info . depth & 7	195:8:5630:5655	2607112	0	True				
ANR	2607195	BitAndExpression	tdev -> color_info . depth & 7		2607112	0		&			
ANR	2607196	MemberAccess	tdev -> color_info . depth		2607112	0					
ANR	2607197	PtrMemberAccess	tdev -> color_info		2607112	0					
ANR	2607198	Identifier	tdev		2607112	0					
ANR	2607199	Identifier	color_info		2607112	1					
ANR	2607200	Identifier	depth		2607112	1					
ANR	2607201	PrimaryExpression	7		2607112	1					
ANR	2607202	ReturnStatement	"return gx_default_copy_color ( dev , base , sourcex , raster , id , x , y , w , h ) ;"	196:8:5666:5775	2607112	1	True				
ANR	2607203	CallExpression	"gx_default_copy_color ( dev , base , sourcex , raster , id , x , y , w , h )"		2607112	0					
ANR	2607204	Callee	gx_default_copy_color		2607112	0					
ANR	2607205	Identifier	gx_default_copy_color		2607112	0					
ANR	2607206	ArgumentList	dev		2607112	1					
ANR	2607207	Argument	dev		2607112	0					
ANR	2607208	Identifier	dev		2607112	0					
ANR	2607209	Argument	base		2607112	1					
ANR	2607210	Identifier	base		2607112	0					
ANR	2607211	Argument	sourcex		2607112	2					
ANR	2607212	Identifier	sourcex		2607112	0					
ANR	2607213	Argument	raster		2607112	3					
ANR	2607214	Identifier	raster		2607112	0					
ANR	2607215	Argument	id		2607112	4					
ANR	2607216	Identifier	id		2607112	0					
ANR	2607217	Argument	x		2607112	5					
ANR	2607218	Identifier	x		2607112	0					
ANR	2607219	Argument	y		2607112	6					
ANR	2607220	Identifier	y		2607112	0					
ANR	2607221	Argument	w		2607112	7					
ANR	2607222	Identifier	w		2607112	0					
ANR	2607223	Argument	h		2607112	8					
ANR	2607224	Identifier	h		2607112	0					
ANR	2607225	ExpressionStatement	depth_bytes = tdev -> color_info . depth >> 3	198:4:5781:5822	2607112	12	True				
ANR	2607226	AssignmentExpression	depth_bytes = tdev -> color_info . depth >> 3		2607112	0		=			
ANR	2607227	Identifier	depth_bytes		2607112	0					
ANR	2607228	ShiftExpression	tdev -> color_info . depth >> 3		2607112	1		>>			
ANR	2607229	MemberAccess	tdev -> color_info . depth		2607112	0					
ANR	2607230	PtrMemberAccess	tdev -> color_info		2607112	0					
ANR	2607231	Identifier	tdev		2607112	0					
ANR	2607232	Identifier	color_info		2607112	1					
ANR	2607233	Identifier	depth		2607112	1					
ANR	2607234	PrimaryExpression	3		2607112	1					
ANR	2607235	ExpressionStatement	source_bits = dev -> color_info . depth	199:4:5828:5863	2607112	13	True				
ANR	2607236	AssignmentExpression	source_bits = dev -> color_info . depth		2607112	0		=			
ANR	2607237	Identifier	source_bits		2607112	0					
ANR	2607238	MemberAccess	dev -> color_info . depth		2607112	1					
ANR	2607239	PtrMemberAccess	dev -> color_info		2607112	0					
ANR	2607240	Identifier	dev		2607112	0					
ANR	2607241	Identifier	color_info		2607112	1					
ANR	2607242	Identifier	depth		2607112	1					
ANR	2607243	CompoundStatement		21:8:658:704	2607112	14					
ANR	2607244	IdentifierDeclStatement	int mapped_pixels = mapped_bytes / depth_bytes ;	201:8:5879:5925	2607112	0	True				
ANR	2607245	IdentifierDecl	mapped_pixels = mapped_bytes / depth_bytes		2607112	0					
ANR	2607246	IdentifierDeclType	int		2607112	0					
ANR	2607247	Identifier	mapped_pixels		2607112	1					
ANR	2607248	AssignmentExpression	mapped_pixels = mapped_bytes / depth_bytes		2607112	2		=			
ANR	2607249	Identifier	mapped_pixels		2607112	0					
ANR	2607250	MultiplicativeExpression	mapped_bytes / depth_bytes		2607112	1		/			
ANR	2607251	Identifier	mapped_bytes		2607112	0					
ANR	2607252	Identifier	depth_bytes		2607112	1					
ANR	2607253	IfStatement	if ( w > mapped_pixels >> 1 )		2607112	1					
ANR	2607254	Condition	w > mapped_pixels >> 1	203:12:5940:5961	2607112	0	True				
ANR	2607255	RelationalExpression	w > mapped_pixels >> 1		2607112	0		>			
ANR	2607256	Identifier	w		2607112	0					
ANR	2607257	ShiftExpression	mapped_pixels >> 1		2607112	1		>>			
ANR	2607258	Identifier	mapped_pixels		2607112	0					
ANR	2607259	PrimaryExpression	1		2607112	1					
ANR	2607260	ExpressionStatement	"block_w = min ( w , mapped_pixels ) , block_h = 1"	204:12:5976:6020	2607112	1	True				
ANR	2607261	Expression	"block_w = min ( w , mapped_pixels ) , block_h = 1"		2607112	0					
ANR	2607262	AssignmentExpression	"block_w = min ( w , mapped_pixels )"		2607112	0		=			
ANR	2607263	Identifier	block_w		2607112	0					
ANR	2607264	CallExpression	"min ( w , mapped_pixels )"		2607112	1					
ANR	2607265	Callee	min		2607112	0					
ANR	2607266	Identifier	min		2607112	0					
ANR	2607267	ArgumentList	w		2607112	1					
ANR	2607268	Argument	w		2607112	0					
ANR	2607269	Identifier	w		2607112	0					
ANR	2607270	Argument	mapped_pixels		2607112	1					
ANR	2607271	Identifier	mapped_pixels		2607112	0					
ANR	2607272	AssignmentExpression	block_h = 1		2607112	1		=			
ANR	2607273	Identifier	block_h		2607112	0					
ANR	2607274	PrimaryExpression	1		2607112	1					
ANR	2607275	ElseStatement	else		2607112	0					
ANR	2607276	ExpressionStatement	"block_w = w , block_h = mapped_pixels / w"	206:12:6047:6087	2607112	0	True				
ANR	2607277	Expression	"block_w = w , block_h = mapped_pixels / w"		2607112	0					
ANR	2607278	AssignmentExpression	block_w = w		2607112	0		=			
ANR	2607279	Identifier	block_w		2607112	0					
ANR	2607280	Identifier	w		2607112	1					
ANR	2607281	AssignmentExpression	block_h = mapped_pixels / w		2607112	1		=			
ANR	2607282	Identifier	block_h		2607112	0					
ANR	2607283	MultiplicativeExpression	mapped_pixels / w		2607112	1		/			
ANR	2607284	Identifier	mapped_pixels		2607112	0					
ANR	2607285	Identifier	w		2607112	1					
ANR	2607286	ForStatement	for ( yblock = y ; yblock < y + h ; yblock += block_h )		2607112	15					
ANR	2607287	ForInit	yblock = y ;	208:9:6104:6114	2607112	0	True				
ANR	2607288	AssignmentExpression	yblock = y		2607112	0		=			
ANR	2607289	Identifier	yblock		2607112	0					
ANR	2607290	Identifier	y		2607112	1					
ANR	2607291	Condition	yblock < y + h	208:21:6116:6129	2607112	1	True				
ANR	2607292	RelationalExpression	yblock < y + h		2607112	0		<			
ANR	2607293	Identifier	yblock		2607112	0					
ANR	2607294	AdditiveExpression	y + h		2607112	1		+			
ANR	2607295	Identifier	y		2607112	0					
ANR	2607296	Identifier	h		2607112	1					
ANR	2607297	AssignmentExpression	yblock += block_h	208:37:6132:6148	2607112	2	True	+=			
ANR	2607298	Identifier	yblock		2607112	0					
ANR	2607299	Identifier	block_h		2607112	1					
ANR	2607300	ForStatement	for ( xblock = x ; xblock < x + w ; xblock += block_w )		2607112	3					
ANR	2607301	ForInit	xblock = x ;	209:13:6164:6174	2607112	0	True				
ANR	2607302	AssignmentExpression	xblock = x		2607112	0		=			
ANR	2607303	Identifier	xblock		2607112	0					
ANR	2607304	Identifier	x		2607112	1					
ANR	2607305	Condition	xblock < x + w	209:25:6176:6189	2607112	1	True				
ANR	2607306	RelationalExpression	xblock < x + w		2607112	0		<			
ANR	2607307	Identifier	xblock		2607112	0					
ANR	2607308	AdditiveExpression	x + w		2607112	1		+			
ANR	2607309	Identifier	x		2607112	0					
ANR	2607310	Identifier	w		2607112	1					
ANR	2607311	AssignmentExpression	xblock += block_w	209:41:6192:6208	2607112	2	True	+=			
ANR	2607312	Identifier	xblock		2607112	0					
ANR	2607313	Identifier	block_w		2607112	1					
ANR	2607314	CompoundStatement		34:12:1168:1176	2607112	3					
ANR	2607315	IdentifierDeclStatement	byte * p = mapped ;	210:12:6225:6241	2607112	0	True				
ANR	2607316	IdentifierDecl	* p = mapped		2607112	0					
ANR	2607317	IdentifierDeclType	byte *		2607112	0					
ANR	2607318	Identifier	p		2607112	1					
ANR	2607319	AssignmentExpression	* p = mapped		2607112	2		=			
ANR	2607320	Identifier	mapped		2607112	0					
ANR	2607321	Identifier	mapped		2607112	1					
ANR	2607322	IdentifierDeclStatement	"int xend = min ( xblock + block_w , x + w ) ;"	211:12:6255:6294	2607112	1	True				
ANR	2607323	IdentifierDecl	"xend = min ( xblock + block_w , x + w )"		2607112	0					
ANR	2607324	IdentifierDeclType	int		2607112	0					
ANR	2607325	Identifier	xend		2607112	1					
ANR	2607326	AssignmentExpression	"xend = min ( xblock + block_w , x + w )"		2607112	2		=			
ANR	2607327	Identifier	xend		2607112	0					
ANR	2607328	CallExpression	"min ( xblock + block_w , x + w )"		2607112	1					
ANR	2607329	Callee	min		2607112	0					
ANR	2607330	Identifier	min		2607112	0					
ANR	2607331	ArgumentList	xblock + block_w		2607112	1					
ANR	2607332	Argument	xblock + block_w		2607112	0					
ANR	2607333	AdditiveExpression	xblock + block_w		2607112	0		+			
ANR	2607334	Identifier	xblock		2607112	0					
ANR	2607335	Identifier	block_w		2607112	1					
ANR	2607336	Argument	x + w		2607112	1					
ANR	2607337	AdditiveExpression	x + w		2607112	0		+			
ANR	2607338	Identifier	x		2607112	0					
ANR	2607339	Identifier	w		2607112	1					
ANR	2607340	IdentifierDeclStatement	"int yend = min ( yblock + block_h , y + h ) ;"	212:12:6308:6347	2607112	2	True				
ANR	2607341	IdentifierDecl	"yend = min ( yblock + block_h , y + h )"		2607112	0					
ANR	2607342	IdentifierDeclType	int		2607112	0					
ANR	2607343	Identifier	yend		2607112	1					
ANR	2607344	AssignmentExpression	"yend = min ( yblock + block_h , y + h )"		2607112	2		=			
ANR	2607345	Identifier	yend		2607112	0					
ANR	2607346	CallExpression	"min ( yblock + block_h , y + h )"		2607112	1					
ANR	2607347	Callee	min		2607112	0					
ANR	2607348	Identifier	min		2607112	0					
ANR	2607349	ArgumentList	yblock + block_h		2607112	1					
ANR	2607350	Argument	yblock + block_h		2607112	0					
ANR	2607351	AdditiveExpression	yblock + block_h		2607112	0		+			
ANR	2607352	Identifier	yblock		2607112	0					
ANR	2607353	Identifier	block_h		2607112	1					
ANR	2607354	Argument	y + h		2607112	1					
ANR	2607355	AdditiveExpression	y + h		2607112	0		+			
ANR	2607356	Identifier	y		2607112	0					
ANR	2607357	Identifier	h		2607112	1					
ANR	2607358	IdentifierDeclStatement	"int xcur , ycur ;"	213:12:6361:6375	2607112	3	True				
ANR	2607359	IdentifierDecl	xcur		2607112	0					
ANR	2607360	IdentifierDeclType	int		2607112	0					
ANR	2607361	Identifier	xcur		2607112	1					
ANR	2607362	IdentifierDecl	ycur		2607112	1					
ANR	2607363	IdentifierDeclType	int		2607112	0					
ANR	2607364	Identifier	ycur		2607112	1					
ANR	2607365	IdentifierDeclStatement	int code ;	214:12:6389:6397	2607112	4	True				
ANR	2607366	IdentifierDecl	code		2607112	0					
ANR	2607367	IdentifierDeclType	int		2607112	0					
ANR	2607368	Identifier	code		2607112	1					
ANR	2607369	ForStatement	for ( ycur = yblock ; ycur < yend ; ++ ycur )		2607112	5					
ANR	2607370	ForInit	ycur = yblock ;	216:17:6417:6430	2607112	0	True				
ANR	2607371	AssignmentExpression	ycur = yblock		2607112	0		=			
ANR	2607372	Identifier	ycur		2607112	0					
ANR	2607373	Identifier	yblock		2607112	1					
ANR	2607374	Condition	ycur < yend	216:32:6432:6442	2607112	1	True				
ANR	2607375	RelationalExpression	ycur < yend		2607112	0		<			
ANR	2607376	Identifier	ycur		2607112	0					
ANR	2607377	Identifier	yend		2607112	1					
ANR	2607378	UnaryExpression	++ ycur	216:45:6445:6450	2607112	2	True				
ANR	2607379	IncDec	++		2607112	0					
ANR	2607380	Identifier	ycur		2607112	1					
ANR	2607381	ForStatement	for ( xcur = xblock ; xcur < xend ; ++ xcur )		2607112	3					
ANR	2607382	ForInit	xcur = xblock ;	217:21:6474:6487	2607112	0	True				
ANR	2607383	AssignmentExpression	xcur = xblock		2607112	0		=			
ANR	2607384	Identifier	xcur		2607112	0					
ANR	2607385	Identifier	xblock		2607112	1					
ANR	2607386	Condition	xcur < xend	217:36:6489:6499	2607112	1	True				
ANR	2607387	RelationalExpression	xcur < xend		2607112	0		<			
ANR	2607388	Identifier	xcur		2607112	0					
ANR	2607389	Identifier	xend		2607112	1					
ANR	2607390	UnaryExpression	++ xcur	217:49:6502:6507	2607112	2	True				
ANR	2607391	IncDec	++		2607112	0					
ANR	2607392	Identifier	xcur		2607112	1					
ANR	2607393	CompoundStatement		43:20:1587:1685	2607112	3					
ANR	2607394	IdentifierDeclStatement	int sbit = ( xcur - x + sourcex ) * source_bits ;	218:20:6532:6577	2607112	0	True				
ANR	2607395	IdentifierDecl	sbit = ( xcur - x + sourcex ) * source_bits		2607112	0					
ANR	2607396	IdentifierDeclType	int		2607112	0					
ANR	2607397	Identifier	sbit		2607112	1					
ANR	2607398	AssignmentExpression	sbit = ( xcur - x + sourcex ) * source_bits		2607112	2		=			
ANR	2607399	Identifier	sbit		2607112	0					
ANR	2607400	MultiplicativeExpression	( xcur - x + sourcex ) * source_bits		2607112	1		*			
ANR	2607401	AdditiveExpression	xcur - x + sourcex		2607112	0		-			
ANR	2607402	Identifier	xcur		2607112	0					
ANR	2607403	AdditiveExpression	x + sourcex		2607112	1		+			
ANR	2607404	Identifier	x		2607112	0					
ANR	2607405	Identifier	sourcex		2607112	1					
ANR	2607406	Identifier	source_bits		2607112	1					
ANR	2607407	IdentifierDeclStatement	uint sbyte = base [ ( ycur - y ) * raster + ( sbit >> 3 ) ] ;	219:20:6599:6675	2607112	1	True				
ANR	2607408	IdentifierDecl	sbyte = base [ ( ycur - y ) * raster + ( sbit >> 3 ) ]		2607112	0					
ANR	2607409	IdentifierDeclType	uint		2607112	0					
ANR	2607410	Identifier	sbyte		2607112	1					
ANR	2607411	AssignmentExpression	sbyte = base [ ( ycur - y ) * raster + ( sbit >> 3 ) ]		2607112	2		=			
ANR	2607412	Identifier	sbyte		2607112	0					
ANR	2607413	ArrayIndexing	base [ ( ycur - y ) * raster + ( sbit >> 3 ) ]		2607112	1					
ANR	2607414	Identifier	base		2607112	0					
ANR	2607415	AdditiveExpression	( ycur - y ) * raster + ( sbit >> 3 )		2607112	1		+			
ANR	2607416	MultiplicativeExpression	( ycur - y ) * raster		2607112	0		*			
ANR	2607417	AdditiveExpression	ycur - y		2607112	0		-			
ANR	2607418	Identifier	ycur		2607112	0					
ANR	2607419	Identifier	y		2607112	1					
ANR	2607420	Identifier	raster		2607112	1					
ANR	2607421	ShiftExpression	sbit >> 3		2607112	1		>>			
ANR	2607422	Identifier	sbit		2607112	0					
ANR	2607423	PrimaryExpression	3		2607112	1					
ANR	2607424	IdentifierDeclStatement	uint spixel = ( ( sbyte << ( sbit & 7 ) ) & 0xff ) >> ( 8 - source_bits ) ;	221:20:6697:6786	2607112	2	True				
ANR	2607425	IdentifierDecl	spixel = ( ( sbyte << ( sbit & 7 ) ) & 0xff ) >> ( 8 - source_bits )		2607112	0					
ANR	2607426	IdentifierDeclType	uint		2607112	0					
ANR	2607427	Identifier	spixel		2607112	1					
ANR	2607428	AssignmentExpression	spixel = ( ( sbyte << ( sbit & 7 ) ) & 0xff ) >> ( 8 - source_bits )		2607112	2		=			
ANR	2607429	Identifier	spixel		2607112	0					
ANR	2607430	ShiftExpression	( ( sbyte << ( sbit & 7 ) ) & 0xff ) >> ( 8 - source_bits )		2607112	1		>>			
ANR	2607431	BitAndExpression	( sbyte << ( sbit & 7 ) ) & 0xff		2607112	0		&			
ANR	2607432	ShiftExpression	sbyte << ( sbit & 7 )		2607112	0		<<			
ANR	2607433	Identifier	sbyte		2607112	0					
ANR	2607434	BitAndExpression	sbit & 7		2607112	1		&			
ANR	2607435	Identifier	sbit		2607112	0					
ANR	2607436	PrimaryExpression	7		2607112	1					
ANR	2607437	PrimaryExpression	0xff		2607112	1					
ANR	2607438	AdditiveExpression	8 - source_bits		2607112	1		-			
ANR	2607439	PrimaryExpression	8		2607112	0					
ANR	2607440	Identifier	source_bits		2607112	1					
ANR	2607441	IdentifierDeclStatement	gx_color_index cindex = ( ( gx_device_X_wrapper * ) dev ) -> color_cache [ spixel ] ;	223:20:6808:6906	2607112	3	True				
ANR	2607442	IdentifierDecl	cindex = ( ( gx_device_X_wrapper * ) dev ) -> color_cache [ spixel ]		2607112	0					
ANR	2607443	IdentifierDeclType	gx_color_index		2607112	0					
ANR	2607444	Identifier	cindex		2607112	1					
ANR	2607445	AssignmentExpression	cindex = ( ( gx_device_X_wrapper * ) dev ) -> color_cache [ spixel ]		2607112	2		=			
ANR	2607446	Identifier	cindex		2607112	0					
ANR	2607447	ArrayIndexing	( ( gx_device_X_wrapper * ) dev ) -> color_cache [ spixel ]		2607112	1					
ANR	2607448	PtrMemberAccess	( ( gx_device_X_wrapper * ) dev ) -> color_cache		2607112	0					
ANR	2607449	CastExpression	( gx_device_X_wrapper * ) dev		2607112	0					
ANR	2607450	CastTarget	gx_device_X_wrapper *		2607112	0					
ANR	2607451	Identifier	dev		2607112	1					
ANR	2607452	Identifier	color_cache		2607112	1					
ANR	2607453	Identifier	spixel		2607112	1					
ANR	2607454	IfStatement	if ( cindex == gx_no_color_index )		2607112	4					
ANR	2607455	Condition	cindex == gx_no_color_index	226:24:6933:6959	2607112	0	True				
ANR	2607456	EqualityExpression	cindex == gx_no_color_index		2607112	0		==			
ANR	2607457	Identifier	cindex		2607112	0					
ANR	2607458	Identifier	gx_no_color_index		2607112	1					
ANR	2607459	ExpressionStatement	"cindex = x_alt_map_color ( dev , spixel )"	227:24:6986:7023	2607112	1	True				
ANR	2607460	AssignmentExpression	"cindex = x_alt_map_color ( dev , spixel )"		2607112	0		=			
ANR	2607461	Identifier	cindex		2607112	0					
ANR	2607462	CallExpression	"x_alt_map_color ( dev , spixel )"		2607112	1					
ANR	2607463	Callee	x_alt_map_color		2607112	0					
ANR	2607464	Identifier	x_alt_map_color		2607112	0					
ANR	2607465	ArgumentList	dev		2607112	1					
ANR	2607466	Argument	dev		2607112	0					
ANR	2607467	Identifier	dev		2607112	0					
ANR	2607468	Argument	spixel		2607112	1					
ANR	2607469	Identifier	spixel		2607112	0					
ANR	2607470	SwitchStatement	switch ( depth_bytes )		2607112	5					
ANR	2607471	Condition	depth_bytes	228:28:7053:7063	2607112	0	True				
ANR	2607472	Identifier	depth_bytes		2607112	0					
ANR	2607473	CompoundStatement		48:41:1845:1845	2607112	1					
ANR	2607474	Label	case 4 :	229:24:7092:7098	2607112	0	True				
ANR	2607475	ExpressionStatement	* p ++ = ( byte ) ( cindex >> 24 )	230:28:7128:7156	2607112	1	True				
ANR	2607476	AssignmentExpression	* p ++ = ( byte ) ( cindex >> 24 )		2607112	0		=			
ANR	2607477	UnaryOperationExpression	* p ++		2607112	0					
ANR	2607478	UnaryOperator	*		2607112	0					
ANR	2607479	PostIncDecOperationExpression	p ++		2607112	1					
ANR	2607480	Identifier	p		2607112	0					
ANR	2607481	IncDec	++		2607112	1					
ANR	2607482	CastExpression	( byte ) ( cindex >> 24 )		2607112	1					
ANR	2607483	CastTarget	byte		2607112	0					
ANR	2607484	ShiftExpression	cindex >> 24		2607112	1		>>			
ANR	2607485	Identifier	cindex		2607112	0					
ANR	2607486	PrimaryExpression	24		2607112	1					
ANR	2607487	Label	case 3 :	232:24:7229:7235	2607112	2	True				
ANR	2607488	ExpressionStatement	* p ++ = ( byte ) ( cindex >> 16 )	233:28:7265:7293	2607112	3	True				
ANR	2607489	AssignmentExpression	* p ++ = ( byte ) ( cindex >> 16 )		2607112	0		=			
ANR	2607490	UnaryOperationExpression	* p ++		2607112	0					
ANR	2607491	UnaryOperator	*		2607112	0					
ANR	2607492	PostIncDecOperationExpression	p ++		2607112	1					
ANR	2607493	Identifier	p		2607112	0					
ANR	2607494	IncDec	++		2607112	1					
ANR	2607495	CastExpression	( byte ) ( cindex >> 16 )		2607112	1					
ANR	2607496	CastTarget	byte		2607112	0					
ANR	2607497	ShiftExpression	cindex >> 16		2607112	1		>>			
ANR	2607498	Identifier	cindex		2607112	0					
ANR	2607499	PrimaryExpression	16		2607112	1					
ANR	2607500	Label	case 2 :	235:24:7366:7372	2607112	4	True				
ANR	2607501	ExpressionStatement	* p ++ = ( byte ) ( cindex >> 8 )	236:28:7402:7429	2607112	5	True				
ANR	2607502	AssignmentExpression	* p ++ = ( byte ) ( cindex >> 8 )		2607112	0		=			
ANR	2607503	UnaryOperationExpression	* p ++		2607112	0					
ANR	2607504	UnaryOperator	*		2607112	0					
ANR	2607505	PostIncDecOperationExpression	p ++		2607112	1					
ANR	2607506	Identifier	p		2607112	0					
ANR	2607507	IncDec	++		2607112	1					
ANR	2607508	CastExpression	( byte ) ( cindex >> 8 )		2607112	1					
ANR	2607509	CastTarget	byte		2607112	0					
ANR	2607510	ShiftExpression	cindex >> 8		2607112	1		>>			
ANR	2607511	Identifier	cindex		2607112	0					
ANR	2607512	PrimaryExpression	8		2607112	1					
ANR	2607513	Label	default :	238:24:7502:7522	2607112	6	True				
ANR	2607514	Identifier	default		2607112	0					
ANR	2607515	ExpressionStatement	* p ++ = ( byte ) cindex	239:28:7552:7572	2607112	7	True				
ANR	2607516	AssignmentExpression	* p ++ = ( byte ) cindex		2607112	0		=			
ANR	2607517	UnaryOperationExpression	* p ++		2607112	0					
ANR	2607518	UnaryOperator	*		2607112	0					
ANR	2607519	PostIncDecOperationExpression	p ++		2607112	1					
ANR	2607520	Identifier	p		2607112	0					
ANR	2607521	IncDec	++		2607112	1					
ANR	2607522	CastExpression	( byte ) cindex		2607112	1					
ANR	2607523	CastTarget	byte		2607112	0					
ANR	2607524	Identifier	cindex		2607112	1					
ANR	2607525	ExpressionStatement	"code = ( * dev_proc ( tdev , copy_color ) ) ( tdev , mapped , 0 , ( xend - xblock ) * depth_bytes , gx_no_bitmap_id , xblock , yblock , xend - xblock , yend - yblock )"	242:12:7626:7807	2607112	6	True				
ANR	2607526	AssignmentExpression	"code = ( * dev_proc ( tdev , copy_color ) ) ( tdev , mapped , 0 , ( xend - xblock ) * depth_bytes , gx_no_bitmap_id , xblock , yblock , xend - xblock , yend - yblock )"		2607112	0		=			
ANR	2607527	Identifier	code		2607112	0					
ANR	2607528	CallExpression	"( * dev_proc ( tdev , copy_color ) ) ( tdev , mapped , 0 , ( xend - xblock ) * depth_bytes , gx_no_bitmap_id , xblock , yblock , xend - xblock , yend - yblock )"		2607112	1					
ANR	2607529	Callee	"* dev_proc ( tdev , copy_color )"		2607112	0					
ANR	2607530	UnaryOperationExpression	"* dev_proc ( tdev , copy_color )"		2607112	0					
ANR	2607531	UnaryOperator	*		2607112	0					
ANR	2607532	CallExpression	"dev_proc ( tdev , copy_color )"		2607112	1					
ANR	2607533	Callee	dev_proc		2607112	0					
ANR	2607534	Identifier	dev_proc		2607112	0					
ANR	2607535	ArgumentList	tdev		2607112	1					
ANR	2607536	Argument	tdev		2607112	0					
ANR	2607537	Identifier	tdev		2607112	0					
ANR	2607538	Argument	copy_color		2607112	1					
ANR	2607539	Identifier	copy_color		2607112	0					
ANR	2607540	ArgumentList	tdev		2607112	1					
ANR	2607541	Argument	tdev		2607112	0					
ANR	2607542	Identifier	tdev		2607112	0					
ANR	2607543	Argument	mapped		2607112	1					
ANR	2607544	Identifier	mapped		2607112	0					
ANR	2607545	Argument	0		2607112	2					
ANR	2607546	PrimaryExpression	0		2607112	0					
ANR	2607547	Argument	( xend - xblock ) * depth_bytes		2607112	3					
ANR	2607548	MultiplicativeExpression	( xend - xblock ) * depth_bytes		2607112	0		*			
ANR	2607549	AdditiveExpression	xend - xblock		2607112	0		-			
ANR	2607550	Identifier	xend		2607112	0					
ANR	2607551	Identifier	xblock		2607112	1					
ANR	2607552	Identifier	depth_bytes		2607112	1					
ANR	2607553	Argument	gx_no_bitmap_id		2607112	4					
ANR	2607554	Identifier	gx_no_bitmap_id		2607112	0					
ANR	2607555	Argument	xblock		2607112	5					
ANR	2607556	Identifier	xblock		2607112	0					
ANR	2607557	Argument	yblock		2607112	6					
ANR	2607558	Identifier	yblock		2607112	0					
ANR	2607559	Argument	xend - xblock		2607112	7					
ANR	2607560	AdditiveExpression	xend - xblock		2607112	0		-			
ANR	2607561	Identifier	xend		2607112	0					
ANR	2607562	Identifier	xblock		2607112	1					
ANR	2607563	Argument	yend - yblock		2607112	8					
ANR	2607564	AdditiveExpression	yend - yblock		2607112	0		-			
ANR	2607565	Identifier	yend		2607112	0					
ANR	2607566	Identifier	yblock		2607112	1					
ANR	2607567	IfStatement	if ( code < 0 )		2607112	7					
ANR	2607568	Condition	code < 0	245:16:7825:7832	2607112	0	True				
ANR	2607569	RelationalExpression	code < 0		2607112	0		<			
ANR	2607570	Identifier	code		2607112	0					
ANR	2607571	PrimaryExpression	0		2607112	1					
ANR	2607572	ReturnStatement	return code ;	246:16:7851:7862	2607112	1	True				
ANR	2607573	Identifier	code		2607112	0					
ANR	2607574	ReturnStatement	return 0 ;	248:4:7878:7886	2607112	16	True				
ANR	2607575	PrimaryExpression	0		2607112	0					
ANR	2607576	ReturnType	static int		2607112	1					
ANR	2607577	Identifier	x_wrap_copy_color		2607112	2					
ANR	2607578	ParameterList	"gx_device * dev , const byte * base , int sourcex , int raster , gx_bitmap_id id , int x , int y , int w , int h"		2607112	3					
ANR	2607579	Parameter	gx_device * dev	179:18:5096:5110	2607112	0	True				
ANR	2607580	ParameterType	gx_device *		2607112	0					
ANR	2607581	Identifier	dev		2607112	1					
ANR	2607582	Parameter	const byte * base	179:35:5113:5129	2607112	1	True				
ANR	2607583	ParameterType	const byte *		2607112	0					
ANR	2607584	Identifier	base		2607112	1					
ANR	2607585	Parameter	int sourcex	179:54:5132:5142	2607112	2	True				
ANR	2607586	ParameterType	int		2607112	0					
ANR	2607587	Identifier	sourcex		2607112	1					
ANR	2607588	Parameter	int raster	180:18:5163:5172	2607112	3	True				
ANR	2607589	ParameterType	int		2607112	0					
ANR	2607590	Identifier	raster		2607112	1					
ANR	2607591	Parameter	gx_bitmap_id id	180:30:5175:5189	2607112	4	True				
ANR	2607592	ParameterType	gx_bitmap_id		2607112	0					
ANR	2607593	Identifier	id		2607112	1					
ANR	2607594	Parameter	int x	180:47:5192:5196	2607112	5	True				
ANR	2607595	ParameterType	int		2607112	0					
ANR	2607596	Identifier	x		2607112	1					
ANR	2607597	Parameter	int y	180:54:5199:5203	2607112	6	True				
ANR	2607598	ParameterType	int		2607112	0					
ANR	2607599	Identifier	y		2607112	1					
ANR	2607600	Parameter	int w	180:61:5206:5210	2607112	7	True				
ANR	2607601	ParameterType	int		2607112	0					
ANR	2607602	Identifier	w		2607112	1					
ANR	2607603	Parameter	int h	180:68:5213:5217	2607112	8	True				
ANR	2607604	ParameterType	int		2607112	0					
ANR	2607605	Identifier	h		2607112	1					
ANR	2607606	CFGEntryNode	ENTRY		2607112		True				
ANR	2607607	CFGExitNode	EXIT		2607112		True				
ANR	2607608	Symbol	mapped_bytes		2607112						
ANR	2607609	Symbol	"* dev_proc ( tdev , copy_color )"		2607112						
ANR	2607610	Symbol	* y		2607112						
ANR	2607611	Symbol	& tdev		2607112						
ANR	2607612	Symbol	block_h		2607112						
ANR	2607613	Symbol	sbit		2607112						
ANR	2607614	Symbol	gx_no_color_index		2607112						
ANR	2607615	Symbol	dev		2607112						
ANR	2607616	Symbol	tdev		2607112						
ANR	2607617	Symbol	id		2607112						
ANR	2607618	Symbol	* base		2607112						
ANR	2607619	Symbol	ycur		2607112						
ANR	2607620	Symbol	cindex		2607112						
ANR	2607621	Symbol	yblock		2607112						
ANR	2607622	Symbol	tdev -> color_info . depth		2607112						
ANR	2607623	Symbol	* ( ( gx_device_X_wrapper * ) dev ) -> color_cache		2607112						
ANR	2607624	Symbol	get_dev_target		2607112						
ANR	2607625	Symbol	x_alt_map_color		2607112						
ANR	2607626	Symbol	gx_no_bitmap_id		2607112						
ANR	2607627	Symbol	copy_color		2607112						
ANR	2607628	Symbol	mapped		2607112						
ANR	2607629	Symbol	* dev		2607112						
ANR	2607630	Symbol	sourcex		2607112						
ANR	2607631	Symbol	code		2607112						
ANR	2607632	Symbol	source_bits		2607112						
ANR	2607633	Symbol	tdev -> color_info		2607112						
ANR	2607634	Symbol	* dev_proc		2607112						
ANR	2607635	Symbol	xblock		2607112						
ANR	2607636	Symbol	dev -> color_info		2607112						
ANR	2607637	Symbol	dev -> color_info . depth		2607112						
ANR	2607638	Symbol	( ( gx_device_X_wrapper * ) dev ) -> color_cache		2607112						
ANR	2607639	Symbol	min		2607112						
ANR	2607640	Symbol	* sbit		2607112						
ANR	2607641	Symbol	dev_proc		2607112						
ANR	2607642	Symbol	xend		2607112						
ANR	2607643	Symbol	depth_bytes		2607112						
ANR	2607644	Symbol	* p ++		2607112						
ANR	2607645	Symbol	raster		2607112						
ANR	2607646	Symbol	h		2607112						
ANR	2607647	Symbol	* * dev		2607112						
ANR	2607648	Symbol	spixel		2607112						
ANR	2607649	Symbol	p		2607112						
ANR	2607650	Symbol	xcur		2607112						
ANR	2607651	Symbol	* tdev		2607112						
ANR	2607652	Symbol	gx_default_copy_color		2607112						
ANR	2607653	Symbol	mapped_pixels		2607112						
ANR	2607654	Symbol	w		2607112						
ANR	2607655	Symbol	x		2607112						
ANR	2607656	Symbol	* spixel		2607112						
ANR	2607657	Symbol	y		2607112						
ANR	2607658	Symbol	sbyte		2607112						
ANR	2607659	Symbol	yend		2607112						
ANR	2607660	Symbol	* ycur		2607112						
ANR	2607661	Symbol	block_w		2607112						
ANR	2607662	Symbol	* raster		2607112						
ANR	2607663	Symbol	base		2607112						
ANR	2607664	Function	x_forward_copy_color	251:0:7891:8288							
ANR	2607665	FunctionDef	"x_forward_copy_color (gx_device * dev , const byte * base , int sourcex , int raster , gx_bitmap_id id , int x , int y , int w , int h)"		2607664	0					
ANR	2607666	CompoundStatement		254:0:8050:8288	2607664	0					
ANR	2607667	IdentifierDeclStatement	gx_device * tdev ;	255:4:8056:8071	2607664	0	True				
ANR	2607668	IdentifierDecl	* tdev		2607664	0					
ANR	2607669	IdentifierDeclType	gx_device *		2607664	0					
ANR	2607670	Identifier	tdev		2607664	1					
ANR	2607671	IdentifierDeclStatement	int code ;	256:4:8077:8085	2607664	1	True				
ANR	2607672	IdentifierDecl	code		2607664	0					
ANR	2607673	IdentifierDeclType	int		2607664	0					
ANR	2607674	Identifier	code		2607664	1					
ANR	2607675	IfStatement	"if ( ( code = get_dev_target ( & tdev , dev ) ) < 0 )"		2607664	2					
ANR	2607676	Condition	"( code = get_dev_target ( & tdev , dev ) ) < 0"	258:8:8096:8134	2607664	0	True				
ANR	2607677	RelationalExpression	"( code = get_dev_target ( & tdev , dev ) ) < 0"		2607664	0		<			
ANR	2607678	AssignmentExpression	"code = get_dev_target ( & tdev , dev )"		2607664	0		=			
ANR	2607679	Identifier	code		2607664	0					
ANR	2607680	CallExpression	"get_dev_target ( & tdev , dev )"		2607664	1					
ANR	2607681	Callee	get_dev_target		2607664	0					
ANR	2607682	Identifier	get_dev_target		2607664	0					
ANR	2607683	ArgumentList	& tdev		2607664	1					
ANR	2607684	Argument	& tdev		2607664	0					
ANR	2607685	UnaryOperationExpression	& tdev		2607664	0					
ANR	2607686	UnaryOperator	&		2607664	0					
ANR	2607687	Identifier	tdev		2607664	1					
ANR	2607688	Argument	dev		2607664	1					
ANR	2607689	Identifier	dev		2607664	0					
ANR	2607690	PrimaryExpression	0		2607664	1					
ANR	2607691	ReturnStatement	return code ;	259:8:8145:8156	2607664	1	True				
ANR	2607692	Identifier	code		2607664	0					
ANR	2607693	ReturnStatement	"return ( * dev_proc ( tdev , copy_color ) ) ( tdev , base , sourcex , raster , id , x , y , w , h ) ;"	260:4:8162:8286	2607664	3	True				
ANR	2607694	CallExpression	"( * dev_proc ( tdev , copy_color ) ) ( tdev , base , sourcex , raster , id , x , y , w , h )"		2607664	0					
ANR	2607695	Callee	"* dev_proc ( tdev , copy_color )"		2607664	0					
ANR	2607696	UnaryOperationExpression	"* dev_proc ( tdev , copy_color )"		2607664	0					
ANR	2607697	UnaryOperator	*		2607664	0					
ANR	2607698	CallExpression	"dev_proc ( tdev , copy_color )"		2607664	1					
ANR	2607699	Callee	dev_proc		2607664	0					
ANR	2607700	Identifier	dev_proc		2607664	0					
ANR	2607701	ArgumentList	tdev		2607664	1					
ANR	2607702	Argument	tdev		2607664	0					
ANR	2607703	Identifier	tdev		2607664	0					
ANR	2607704	Argument	copy_color		2607664	1					
ANR	2607705	Identifier	copy_color		2607664	0					
ANR	2607706	ArgumentList	tdev		2607664	1					
ANR	2607707	Argument	tdev		2607664	0					
ANR	2607708	Identifier	tdev		2607664	0					
ANR	2607709	Argument	base		2607664	1					
ANR	2607710	Identifier	base		2607664	0					
ANR	2607711	Argument	sourcex		2607664	2					
ANR	2607712	Identifier	sourcex		2607664	0					
ANR	2607713	Argument	raster		2607664	3					
ANR	2607714	Identifier	raster		2607664	0					
ANR	2607715	Argument	id		2607664	4					
ANR	2607716	Identifier	id		2607664	0					
ANR	2607717	Argument	x		2607664	5					
ANR	2607718	Identifier	x		2607664	0					
ANR	2607719	Argument	y		2607664	6					
ANR	2607720	Identifier	y		2607664	0					
ANR	2607721	Argument	w		2607664	7					
ANR	2607722	Identifier	w		2607664	0					
ANR	2607723	Argument	h		2607664	8					
ANR	2607724	Identifier	h		2607664	0					
ANR	2607725	ReturnType	static int		2607664	1					
ANR	2607726	Identifier	x_forward_copy_color		2607664	2					
ANR	2607727	ParameterList	"gx_device * dev , const byte * base , int sourcex , int raster , gx_bitmap_id id , int x , int y , int w , int h"		2607664	3					
ANR	2607728	Parameter	gx_device * dev	252:21:7923:7937	2607664	0	True				
ANR	2607729	ParameterType	gx_device *		2607664	0					
ANR	2607730	Identifier	dev		2607664	1					
ANR	2607731	Parameter	const byte * base	252:38:7940:7956	2607664	1	True				
ANR	2607732	ParameterType	const byte *		2607664	0					
ANR	2607733	Identifier	base		2607664	1					
ANR	2607734	Parameter	int sourcex	252:57:7959:7969	2607664	2	True				
ANR	2607735	ParameterType	int		2607664	0					
ANR	2607736	Identifier	sourcex		2607664	1					
ANR	2607737	Parameter	int raster	253:21:7993:8002	2607664	3	True				
ANR	2607738	ParameterType	int		2607664	0					
ANR	2607739	Identifier	raster		2607664	1					
ANR	2607740	Parameter	gx_bitmap_id id	253:33:8005:8019	2607664	4	True				
ANR	2607741	ParameterType	gx_bitmap_id		2607664	0					
ANR	2607742	Identifier	id		2607664	1					
ANR	2607743	Parameter	int x	253:50:8022:8026	2607664	5	True				
ANR	2607744	ParameterType	int		2607664	0					
ANR	2607745	Identifier	x		2607664	1					
ANR	2607746	Parameter	int y	253:57:8029:8033	2607664	6	True				
ANR	2607747	ParameterType	int		2607664	0					
ANR	2607748	Identifier	y		2607664	1					
ANR	2607749	Parameter	int w	253:64:8036:8040	2607664	7	True				
ANR	2607750	ParameterType	int		2607664	0					
ANR	2607751	Identifier	w		2607664	1					
ANR	2607752	Parameter	int h	253:71:8043:8047	2607664	8	True				
ANR	2607753	ParameterType	int		2607664	0					
ANR	2607754	Identifier	h		2607664	1					
ANR	2607755	CFGEntryNode	ENTRY		2607664		True				
ANR	2607756	CFGExitNode	EXIT		2607664		True				
ANR	2607757	Symbol	sourcex		2607664						
ANR	2607758	Symbol	"* dev_proc ( tdev , copy_color )"		2607664						
ANR	2607759	Symbol	code		2607664						
ANR	2607760	Symbol	* dev_proc		2607664						
ANR	2607761	Symbol	raster		2607664						
ANR	2607762	Symbol	h		2607664						
ANR	2607763	Symbol	& tdev		2607664						
ANR	2607764	Symbol	get_dev_target		2607664						
ANR	2607765	Symbol	dev		2607664						
ANR	2607766	Symbol	copy_color		2607664						
ANR	2607767	Symbol	dev_proc		2607664						
ANR	2607768	Symbol	w		2607664						
ANR	2607769	Symbol	tdev		2607664						
ANR	2607770	Symbol	x		2607664						
ANR	2607771	Symbol	y		2607664						
ANR	2607772	Symbol	id		2607664						
ANR	2607773	Symbol	base		2607664						
ANR	2607774	Function	x_forward_get_bits	264:0:8291:8554							
ANR	2607775	FunctionDef	"x_forward_get_bits (gx_device * dev , int y , byte * str , byte * * actual_data)"		2607774	0					
ANR	2607776	CompoundStatement		266:0:8378:8554	2607774	0					
ANR	2607777	IdentifierDeclStatement	gx_device * tdev ;	267:4:8384:8399	2607774	0	True				
ANR	2607778	IdentifierDecl	* tdev		2607774	0					
ANR	2607779	IdentifierDeclType	gx_device *		2607774	0					
ANR	2607780	Identifier	tdev		2607774	1					
ANR	2607781	IdentifierDeclStatement	int code ;	268:4:8405:8413	2607774	1	True				
ANR	2607782	IdentifierDecl	code		2607774	0					
ANR	2607783	IdentifierDeclType	int		2607774	0					
ANR	2607784	Identifier	code		2607774	1					
ANR	2607785	IfStatement	"if ( ( code = get_dev_target ( & tdev , dev ) ) < 0 )"		2607774	2					
ANR	2607786	Condition	"( code = get_dev_target ( & tdev , dev ) ) < 0"	270:8:8424:8462	2607774	0	True				
ANR	2607787	RelationalExpression	"( code = get_dev_target ( & tdev , dev ) ) < 0"		2607774	0		<			
ANR	2607788	AssignmentExpression	"code = get_dev_target ( & tdev , dev )"		2607774	0		=			
ANR	2607789	Identifier	code		2607774	0					
ANR	2607790	CallExpression	"get_dev_target ( & tdev , dev )"		2607774	1					
ANR	2607791	Callee	get_dev_target		2607774	0					
ANR	2607792	Identifier	get_dev_target		2607774	0					
ANR	2607793	ArgumentList	& tdev		2607774	1					
ANR	2607794	Argument	& tdev		2607774	0					
ANR	2607795	UnaryOperationExpression	& tdev		2607774	0					
ANR	2607796	UnaryOperator	&		2607774	0					
ANR	2607797	Identifier	tdev		2607774	1					
ANR	2607798	Argument	dev		2607774	1					
ANR	2607799	Identifier	dev		2607774	0					
ANR	2607800	PrimaryExpression	0		2607774	1					
ANR	2607801	ReturnStatement	return code ;	271:8:8473:8484	2607774	1	True				
ANR	2607802	Identifier	code		2607774	0					
ANR	2607803	ReturnStatement	"return ( * dev_proc ( tdev , get_bits ) ) ( tdev , y , str , actual_data ) ;"	272:4:8490:8552	2607774	3	True				
ANR	2607804	CallExpression	"( * dev_proc ( tdev , get_bits ) ) ( tdev , y , str , actual_data )"		2607774	0					
ANR	2607805	Callee	"* dev_proc ( tdev , get_bits )"		2607774	0					
ANR	2607806	UnaryOperationExpression	"* dev_proc ( tdev , get_bits )"		2607774	0					
ANR	2607807	UnaryOperator	*		2607774	0					
ANR	2607808	CallExpression	"dev_proc ( tdev , get_bits )"		2607774	1					
ANR	2607809	Callee	dev_proc		2607774	0					
ANR	2607810	Identifier	dev_proc		2607774	0					
ANR	2607811	ArgumentList	tdev		2607774	1					
ANR	2607812	Argument	tdev		2607774	0					
ANR	2607813	Identifier	tdev		2607774	0					
ANR	2607814	Argument	get_bits		2607774	1					
ANR	2607815	Identifier	get_bits		2607774	0					
ANR	2607816	ArgumentList	tdev		2607774	1					
ANR	2607817	Argument	tdev		2607774	0					
ANR	2607818	Identifier	tdev		2607774	0					
ANR	2607819	Argument	y		2607774	1					
ANR	2607820	Identifier	y		2607774	0					
ANR	2607821	Argument	str		2607774	2					
ANR	2607822	Identifier	str		2607774	0					
ANR	2607823	Argument	actual_data		2607774	3					
ANR	2607824	Identifier	actual_data		2607774	0					
ANR	2607825	ReturnType	static int		2607774	1					
ANR	2607826	Identifier	x_forward_get_bits		2607774	2					
ANR	2607827	ParameterList	"gx_device * dev , int y , byte * str , byte * * actual_data"		2607774	3					
ANR	2607828	Parameter	gx_device * dev	265:19:8321:8335	2607774	0	True				
ANR	2607829	ParameterType	gx_device *		2607774	0					
ANR	2607830	Identifier	dev		2607774	1					
ANR	2607831	Parameter	int y	265:36:8338:8342	2607774	1	True				
ANR	2607832	ParameterType	int		2607774	0					
ANR	2607833	Identifier	y		2607774	1					
ANR	2607834	Parameter	byte * str	265:43:8345:8354	2607774	2	True				
ANR	2607835	ParameterType	byte *		2607774	0					
ANR	2607836	Identifier	str		2607774	1					
ANR	2607837	Parameter	byte * * actual_data	265:55:8357:8375	2607774	3	True				
ANR	2607838	ParameterType	byte * *		2607774	0					
ANR	2607839	Identifier	actual_data		2607774	1					
ANR	2607840	CFGEntryNode	ENTRY		2607774		True				
ANR	2607841	CFGExitNode	EXIT		2607774		True				
ANR	2607842	Symbol	str		2607774						
ANR	2607843	Symbol	actual_data		2607774						
ANR	2607844	Symbol	get_dev_target		2607774						
ANR	2607845	Symbol	code		2607774						
ANR	2607846	Symbol	dev		2607774						
ANR	2607847	Symbol	get_bits		2607774						
ANR	2607848	Symbol	dev_proc		2607774						
ANR	2607849	Symbol	* dev_proc		2607774						
ANR	2607850	Symbol	tdev		2607774						
ANR	2607851	Symbol	y		2607774						
ANR	2607852	Symbol	& tdev		2607774						
ANR	2607853	Symbol	"* dev_proc ( tdev , get_bits )"		2607774						
ANR	2607854	Function	x_wrap_get_bits	275:0:8557:11569							
ANR	2607855	FunctionDef	"x_wrap_get_bits (gx_device * dev , int y , byte * str , byte * * actual_data)"		2607854	0					
ANR	2607856	CompoundStatement		277:0:8641:11569	2607854	0					
ANR	2607857	IdentifierDeclStatement	int depth = dev -> color_info . depth ;	278:4:8647:8680	2607854	0	True				
ANR	2607858	IdentifierDecl	depth = dev -> color_info . depth		2607854	0					
ANR	2607859	IdentifierDeclType	int		2607854	0					
ANR	2607860	Identifier	depth		2607854	1					
ANR	2607861	AssignmentExpression	depth = dev -> color_info . depth		2607854	2		=			
ANR	2607862	Identifier	depth		2607854	0					
ANR	2607863	MemberAccess	dev -> color_info . depth		2607854	1					
ANR	2607864	PtrMemberAccess	dev -> color_info		2607854	0					
ANR	2607865	Identifier	dev		2607854	0					
ANR	2607866	Identifier	color_info		2607854	1					
ANR	2607867	Identifier	depth		2607854	1					
ANR	2607868	IdentifierDeclStatement	gx_device * tdev ;	279:4:8686:8701	2607854	1	True				
ANR	2607869	IdentifierDecl	* tdev		2607854	0					
ANR	2607870	IdentifierDeclType	gx_device *		2607854	0					
ANR	2607871	Identifier	tdev		2607854	1					
ANR	2607872	IdentifierDeclStatement	int width ;	280:4:8707:8716	2607854	2	True				
ANR	2607873	IdentifierDecl	width		2607854	0					
ANR	2607874	IdentifierDeclType	int		2607854	0					
ANR	2607875	Identifier	width		2607854	1					
ANR	2607876	IdentifierDeclStatement	int sdepth ;	281:4:8722:8732	2607854	3	True				
ANR	2607877	IdentifierDecl	sdepth		2607854	0					
ANR	2607878	IdentifierDeclType	int		2607854	0					
ANR	2607879	Identifier	sdepth		2607854	1					
ANR	2607880	IdentifierDeclStatement	byte smask ;	282:4:8738:8748	2607854	4	True				
ANR	2607881	IdentifierDecl	smask		2607854	0					
ANR	2607882	IdentifierDeclType	byte		2607854	0					
ANR	2607883	Identifier	smask		2607854	1					
ANR	2607884	IdentifierDeclStatement	uint dsize ;	283:4:8754:8764	2607854	5	True				
ANR	2607885	IdentifierDecl	dsize		2607854	0					
ANR	2607886	IdentifierDeclType	uint		2607854	0					
ANR	2607887	Identifier	dsize		2607854	1					
ANR	2607888	IdentifierDeclStatement	gs_memory_t * mem = dev -> memory ;	284:4:8770:8800	2607854	6	True				
ANR	2607889	IdentifierDecl	* mem = dev -> memory		2607854	0					
ANR	2607890	IdentifierDeclType	gs_memory_t *		2607854	0					
ANR	2607891	Identifier	mem		2607854	1					
ANR	2607892	AssignmentExpression	* mem = dev -> memory		2607854	2		=			
ANR	2607893	Identifier	mem		2607854	0					
ANR	2607894	PtrMemberAccess	dev -> memory		2607854	1					
ANR	2607895	Identifier	dev		2607854	0					
ANR	2607896	Identifier	memory		2607854	1					
ANR	2607897	IdentifierDeclStatement	byte * row ;	285:4:8806:8815	2607854	7	True				
ANR	2607898	IdentifierDecl	* row		2607854	0					
ANR	2607899	IdentifierDeclType	byte *		2607854	0					
ANR	2607900	Identifier	row		2607854	1					
ANR	2607901	IdentifierDeclStatement	byte * base ;	286:4:8821:8831	2607854	8	True				
ANR	2607902	IdentifierDecl	* base		2607854	0					
ANR	2607903	IdentifierDeclType	byte *		2607854	0					
ANR	2607904	Identifier	base		2607854	1					
ANR	2607905	IdentifierDeclStatement	int code ;	287:4:8837:8845	2607854	9	True				
ANR	2607906	IdentifierDecl	code		2607854	0					
ANR	2607907	IdentifierDeclType	int		2607854	0					
ANR	2607908	Identifier	code		2607854	1					
ANR	2607909	IdentifierDeclStatement	gx_color_index pixel_in = gx_no_color_index ;	288:4:8851:8894	2607854	10	True				
ANR	2607910	IdentifierDecl	pixel_in = gx_no_color_index		2607854	0					
ANR	2607911	IdentifierDeclType	gx_color_index		2607854	0					
ANR	2607912	Identifier	pixel_in		2607854	1					
ANR	2607913	AssignmentExpression	pixel_in = gx_no_color_index		2607854	2		=			
ANR	2607914	Identifier	gx_no_color_index		2607854	0					
ANR	2607915	Identifier	gx_no_color_index		2607854	1					
ANR	2607916	IdentifierDeclStatement	gx_color_index pixel_out = 0 ;	296:4:9272:9300	2607854	11	True				
ANR	2607917	IdentifierDecl	pixel_out = 0		2607854	0					
ANR	2607918	IdentifierDeclType	gx_color_index		2607854	0					
ANR	2607919	Identifier	pixel_out		2607854	1					
ANR	2607920	AssignmentExpression	pixel_out = 0		2607854	2		=			
ANR	2607921	Identifier	pixel_out		2607854	0					
ANR	2607922	PrimaryExpression	0		2607854	1					
ANR	2607923	IdentifierDeclStatement	int xi ;	297:4:9306:9312	2607854	12	True				
ANR	2607924	IdentifierDecl	xi		2607854	0					
ANR	2607925	IdentifierDeclType	int		2607854	0					
ANR	2607926	Identifier	xi		2607854	1					
ANR	2607927	IdentifierDeclStatement	int sbit ;	298:4:9318:9326	2607854	13	True				
ANR	2607928	IdentifierDecl	sbit		2607854	0					
ANR	2607929	IdentifierDeclType	int		2607854	0					
ANR	2607930	Identifier	sbit		2607854	1					
ANR	2607931	IdentifierDeclStatement	byte * l_dptr = str ;	300:4:9333:9351	2607854	14	True				
ANR	2607932	IdentifierDecl	* l_dptr = str		2607854	0					
ANR	2607933	IdentifierDeclType	byte *		2607854	0					
ANR	2607934	Identifier	l_dptr		2607854	1					
ANR	2607935	AssignmentExpression	* l_dptr = str		2607854	2		=			
ANR	2607936	Identifier	str		2607854	0					
ANR	2607937	Identifier	str		2607854	1					
ANR	2607938	IdentifierDeclStatement	int l_dbit = 0 ;	301:4:9357:9371	2607854	15	True				
ANR	2607939	IdentifierDecl	l_dbit = 0		2607854	0					
ANR	2607940	IdentifierDeclType	int		2607854	0					
ANR	2607941	Identifier	l_dbit		2607854	1					
ANR	2607942	AssignmentExpression	l_dbit = 0		2607854	2		=			
ANR	2607943	Identifier	l_dbit		2607854	0					
ANR	2607944	PrimaryExpression	0		2607854	1					
ANR	2607945	IdentifierDeclStatement	byte l_dbyte = 0 ;	302:4:9377:9393	2607854	16	True				
ANR	2607946	IdentifierDecl	l_dbyte = 0		2607854	0					
ANR	2607947	IdentifierDeclType	byte		2607854	0					
ANR	2607948	Identifier	l_dbyte		2607854	1					
ANR	2607949	AssignmentExpression	l_dbyte = 0		2607854	2		=			
ANR	2607950	Identifier	l_dbyte		2607854	0					
ANR	2607951	PrimaryExpression	0		2607854	1					
ANR	2607952	IfStatement	"if ( ( code = get_dev_target ( & tdev , dev ) ) < 0 )"		2607854	17					
ANR	2607953	Condition	"( code = get_dev_target ( & tdev , dev ) ) < 0"	304:8:9404:9442	2607854	0	True				
ANR	2607954	RelationalExpression	"( code = get_dev_target ( & tdev , dev ) ) < 0"		2607854	0		<			
ANR	2607955	AssignmentExpression	"code = get_dev_target ( & tdev , dev )"		2607854	0		=			
ANR	2607956	Identifier	code		2607854	0					
ANR	2607957	CallExpression	"get_dev_target ( & tdev , dev )"		2607854	1					
ANR	2607958	Callee	get_dev_target		2607854	0					
ANR	2607959	Identifier	get_dev_target		2607854	0					
ANR	2607960	ArgumentList	& tdev		2607854	1					
ANR	2607961	Argument	& tdev		2607854	0					
ANR	2607962	UnaryOperationExpression	& tdev		2607854	0					
ANR	2607963	UnaryOperator	&		2607854	0					
ANR	2607964	Identifier	tdev		2607854	1					
ANR	2607965	Argument	dev		2607854	1					
ANR	2607966	Identifier	dev		2607854	0					
ANR	2607967	PrimaryExpression	0		2607854	1					
ANR	2607968	ReturnStatement	return code ;	305:8:9453:9464	2607854	1	True				
ANR	2607969	Identifier	code		2607854	0					
ANR	2607970	ExpressionStatement	width = tdev -> width	306:4:9470:9489	2607854	18	True				
ANR	2607971	AssignmentExpression	width = tdev -> width		2607854	0		=			
ANR	2607972	Identifier	width		2607854	0					
ANR	2607973	PtrMemberAccess	tdev -> width		2607854	1					
ANR	2607974	Identifier	tdev		2607854	0					
ANR	2607975	Identifier	width		2607854	1					
ANR	2607976	ExpressionStatement	sdepth = tdev -> color_info . depth	307:4:9495:9526	2607854	19	True				
ANR	2607977	AssignmentExpression	sdepth = tdev -> color_info . depth		2607854	0		=			
ANR	2607978	Identifier	sdepth		2607854	0					
ANR	2607979	MemberAccess	tdev -> color_info . depth		2607854	1					
ANR	2607980	PtrMemberAccess	tdev -> color_info		2607854	0					
ANR	2607981	Identifier	tdev		2607854	0					
ANR	2607982	Identifier	color_info		2607854	1					
ANR	2607983	Identifier	depth		2607854	1					
ANR	2607984	ExpressionStatement	smask = ( sdepth <= 8 ? ( 1 << sdepth ) - 1 : 0xff )	308:4:9532:9580	2607854	20	True				
ANR	2607985	AssignmentExpression	smask = ( sdepth <= 8 ? ( 1 << sdepth ) - 1 : 0xff )		2607854	0		=			
ANR	2607986	Identifier	smask		2607854	0					
ANR	2607987	ConditionalExpression	sdepth <= 8 ? ( 1 << sdepth ) - 1 : 0xff		2607854	1					
ANR	2607988	Condition	sdepth <= 8		2607854	0					
ANR	2607989	RelationalExpression	sdepth <= 8		2607854	0		<=			
ANR	2607990	Identifier	sdepth		2607854	0					
ANR	2607991	PrimaryExpression	8		2607854	1					
ANR	2607992	AdditiveExpression	( 1 << sdepth ) - 1		2607854	1		-			
ANR	2607993	ShiftExpression	1 << sdepth		2607854	0		<<			
ANR	2607994	PrimaryExpression	1		2607854	0					
ANR	2607995	Identifier	sdepth		2607854	1					
ANR	2607996	PrimaryExpression	1		2607854	1					
ANR	2607997	PrimaryExpression	0xff		2607854	2					
ANR	2607998	ExpressionStatement	dsize = ( width * sdepth + 7 ) / 8	309:4:9586:9618	2607854	21	True				
ANR	2607999	AssignmentExpression	dsize = ( width * sdepth + 7 ) / 8		2607854	0		=			
ANR	2608000	Identifier	dsize		2607854	0					
ANR	2608001	MultiplicativeExpression	( width * sdepth + 7 ) / 8		2607854	1		/			
ANR	2608002	AdditiveExpression	width * sdepth + 7		2607854	0		+			
ANR	2608003	MultiplicativeExpression	width * sdepth		2607854	0		*			
ANR	2608004	Identifier	width		2607854	0					
ANR	2608005	Identifier	sdepth		2607854	1					
ANR	2608006	PrimaryExpression	7		2607854	1					
ANR	2608007	PrimaryExpression	8		2607854	1					
ANR	2608008	ExpressionStatement	"row = gs_alloc_bytes ( mem , dsize , ""x_wrap_get_bits"" )"	310:4:9624:9675	2607854	22	True				
ANR	2608009	AssignmentExpression	"row = gs_alloc_bytes ( mem , dsize , ""x_wrap_get_bits"" )"		2607854	0		=			
ANR	2608010	Identifier	row		2607854	0					
ANR	2608011	CallExpression	"gs_alloc_bytes ( mem , dsize , ""x_wrap_get_bits"" )"		2607854	1					
ANR	2608012	Callee	gs_alloc_bytes		2607854	0					
ANR	2608013	Identifier	gs_alloc_bytes		2607854	0					
ANR	2608014	ArgumentList	mem		2607854	1					
ANR	2608015	Argument	mem		2607854	0					
ANR	2608016	Identifier	mem		2607854	0					
ANR	2608017	Argument	dsize		2607854	1					
ANR	2608018	Identifier	dsize		2607854	0					
ANR	2608019	Argument	"""x_wrap_get_bits"""		2607854	2					
ANR	2608020	PrimaryExpression	"""x_wrap_get_bits"""		2607854	0					
ANR	2608021	IfStatement	if ( row == 0 )		2607854	23					
ANR	2608022	Condition	row == 0	311:8:9685:9692	2607854	0	True				
ANR	2608023	EqualityExpression	row == 0		2607854	0		==			
ANR	2608024	Identifier	row		2607854	0					
ANR	2608025	PrimaryExpression	0		2607854	1					
ANR	2608026	ExpressionStatement	return_error ( gs_error_VMerror )	312:8:9703:9733	2607854	1	True				
ANR	2608027	CallExpression	return_error ( gs_error_VMerror )		2607854	0					
ANR	2608028	Callee	return_error		2607854	0					
ANR	2608029	Identifier	return_error		2607854	0					
ANR	2608030	ArgumentList	gs_error_VMerror		2607854	1					
ANR	2608031	Argument	gs_error_VMerror		2607854	0					
ANR	2608032	Identifier	gs_error_VMerror		2607854	0					
ANR	2608033	ExpressionStatement	"code = ( * dev_proc ( tdev , get_bits ) ) ( tdev , y , row , & base )"	313:4:9739:9795	2607854	24	True				
ANR	2608034	AssignmentExpression	"code = ( * dev_proc ( tdev , get_bits ) ) ( tdev , y , row , & base )"		2607854	0		=			
ANR	2608035	Identifier	code		2607854	0					
ANR	2608036	CallExpression	"( * dev_proc ( tdev , get_bits ) ) ( tdev , y , row , & base )"		2607854	1					
ANR	2608037	Callee	"* dev_proc ( tdev , get_bits )"		2607854	0					
ANR	2608038	UnaryOperationExpression	"* dev_proc ( tdev , get_bits )"		2607854	0					
ANR	2608039	UnaryOperator	*		2607854	0					
ANR	2608040	CallExpression	"dev_proc ( tdev , get_bits )"		2607854	1					
ANR	2608041	Callee	dev_proc		2607854	0					
ANR	2608042	Identifier	dev_proc		2607854	0					
ANR	2608043	ArgumentList	tdev		2607854	1					
ANR	2608044	Argument	tdev		2607854	0					
ANR	2608045	Identifier	tdev		2607854	0					
ANR	2608046	Argument	get_bits		2607854	1					
ANR	2608047	Identifier	get_bits		2607854	0					
ANR	2608048	ArgumentList	tdev		2607854	1					
ANR	2608049	Argument	tdev		2607854	0					
ANR	2608050	Identifier	tdev		2607854	0					
ANR	2608051	Argument	y		2607854	1					
ANR	2608052	Identifier	y		2607854	0					
ANR	2608053	Argument	row		2607854	2					
ANR	2608054	Identifier	row		2607854	0					
ANR	2608055	Argument	& base		2607854	3					
ANR	2608056	UnaryOperationExpression	& base		2607854	0					
ANR	2608057	UnaryOperator	&		2607854	0					
ANR	2608058	Identifier	base		2607854	1					
ANR	2608059	IfStatement	if ( code < 0 )		2607854	25					
ANR	2608060	Condition	code < 0	314:8:9805:9812	2607854	0	True				
ANR	2608061	RelationalExpression	code < 0		2607854	0		<			
ANR	2608062	Identifier	code		2607854	0					
ANR	2608063	PrimaryExpression	0		2607854	1					
ANR	2608064	GotoStatement	goto gx ;	315:8:9823:9830	2607854	1	True				
ANR	2608065	Identifier	gx		2607854	0					
ANR	2608066	ForStatement	"for ( sbit = 0 , xi = 0 ; xi < width ; sbit += sdepth , ++ xi )"		2607854	26					
ANR	2608067	ForInit	"sbit = 0 , xi = 0 ;"	316:9:9841:9857	2607854	0	True				
ANR	2608068	Expression	"sbit = 0 , xi = 0"		2607854	0					
ANR	2608069	AssignmentExpression	sbit = 0		2607854	0		=			
ANR	2608070	Identifier	sbit		2607854	0					
ANR	2608071	PrimaryExpression	0		2607854	1					
ANR	2608072	AssignmentExpression	xi = 0		2607854	1		=			
ANR	2608073	Identifier	xi		2607854	0					
ANR	2608074	PrimaryExpression	0		2607854	1					
ANR	2608075	Condition	xi < width	316:27:9859:9868	2607854	1	True				
ANR	2608076	RelationalExpression	xi < width		2607854	0		<			
ANR	2608077	Identifier	xi		2607854	0					
ANR	2608078	Identifier	width		2607854	1					
ANR	2608079	Expression	"sbit += sdepth , ++ xi"	316:39:9871:9890	2607854	2	True				
ANR	2608080	AssignmentExpression	sbit += sdepth		2607854	0		+=			
ANR	2608081	Identifier	sbit		2607854	0					
ANR	2608082	Identifier	sdepth		2607854	1					
ANR	2608083	UnaryExpression	++ xi		2607854	1					
ANR	2608084	IncDec	++		2607854	0					
ANR	2608085	Identifier	xi		2607854	1					
ANR	2608086	CompoundStatement		44:8:1369:1374	2607854	3					
ANR	2608087	IdentifierDeclStatement	const byte * sptr = base + ( sbit >> 3 ) ;	317:8:9903:9940	2607854	0	True				
ANR	2608088	IdentifierDecl	* sptr = base + ( sbit >> 3 )		2607854	0					
ANR	2608089	IdentifierDeclType	const byte *		2607854	0					
ANR	2608090	Identifier	sptr		2607854	1					
ANR	2608091	AssignmentExpression	* sptr = base + ( sbit >> 3 )		2607854	2		=			
ANR	2608092	Identifier	sptr		2607854	0					
ANR	2608093	AdditiveExpression	base + ( sbit >> 3 )		2607854	1		+			
ANR	2608094	Identifier	base		2607854	0					
ANR	2608095	ShiftExpression	sbit >> 3		2607854	1		>>			
ANR	2608096	Identifier	sbit		2607854	0					
ANR	2608097	PrimaryExpression	3		2607854	1					
ANR	2608098	IdentifierDeclStatement	gx_color_index pixel ;	318:8:9950:9970	2607854	1	True				
ANR	2608099	IdentifierDecl	pixel		2607854	0					
ANR	2608100	IdentifierDeclType	gx_color_index		2607854	0					
ANR	2608101	Identifier	pixel		2607854	1					
ANR	2608102	IdentifierDeclStatement	gx_color_value rgb [ 3 ] ;	319:8:9980:10001	2607854	2	True				
ANR	2608103	IdentifierDecl	rgb [ 3 ]		2607854	0					
ANR	2608104	IdentifierDeclType	gx_color_value [ 3 ]		2607854	0					
ANR	2608105	Identifier	rgb		2607854	1					
ANR	2608106	PrimaryExpression	3		2607854	2					
ANR	2608107	IdentifierDeclStatement	int i ;	320:8:10011:10016	2607854	3	True				
ANR	2608108	IdentifierDecl	i		2607854	0					
ANR	2608109	IdentifierDeclType	int		2607854	0					
ANR	2608110	Identifier	i		2607854	1					
ANR	2608111	IfStatement	if ( sdepth <= 8 )		2607854	4					
ANR	2608112	Condition	sdepth <= 8	322:12:10031:10041	2607854	0	True				
ANR	2608113	RelationalExpression	sdepth <= 8		2607854	0		<=			
ANR	2608114	Identifier	sdepth		2607854	0					
ANR	2608115	PrimaryExpression	8		2607854	1					
ANR	2608116	ExpressionStatement	pixel = ( * sptr >> ( 8 - sdepth - ( sbit & 7 ) ) ) & smask	323:12:10056:10108	2607854	1	True				
ANR	2608117	AssignmentExpression	pixel = ( * sptr >> ( 8 - sdepth - ( sbit & 7 ) ) ) & smask		2607854	0		=			
ANR	2608118	Identifier	pixel		2607854	0					
ANR	2608119	BitAndExpression	( * sptr >> ( 8 - sdepth - ( sbit & 7 ) ) ) & smask		2607854	1		&			
ANR	2608120	ShiftExpression	* sptr >> ( 8 - sdepth - ( sbit & 7 ) )		2607854	0		>>			
ANR	2608121	UnaryOperationExpression	* sptr		2607854	0					
ANR	2608122	UnaryOperator	*		2607854	0					
ANR	2608123	Identifier	sptr		2607854	1					
ANR	2608124	AdditiveExpression	8 - sdepth - ( sbit & 7 )		2607854	1		-			
ANR	2608125	PrimaryExpression	8		2607854	0					
ANR	2608126	AdditiveExpression	sdepth - ( sbit & 7 )		2607854	1		-			
ANR	2608127	Identifier	sdepth		2607854	0					
ANR	2608128	BitAndExpression	sbit & 7		2607854	1		&			
ANR	2608129	Identifier	sbit		2607854	0					
ANR	2608130	PrimaryExpression	7		2607854	1					
ANR	2608131	Identifier	smask		2607854	1					
ANR	2608132	ElseStatement	else		2607854	0					
ANR	2608133	CompoundStatement		48:13:1481:1481	2607854	0					
ANR	2608134	ExpressionStatement	pixel = 0	325:12:10137:10146	2607854	0	True				
ANR	2608135	AssignmentExpression	pixel = 0		2607854	0		=			
ANR	2608136	Identifier	pixel		2607854	0					
ANR	2608137	PrimaryExpression	0		2607854	1					
ANR	2608138	ForStatement	"for ( i = 0 ; i < sdepth ; i += 8 , ++ sptr )"		2607854	1					
ANR	2608139	ForInit	i = 0 ;	326:17:10165:10170	2607854	0	True				
ANR	2608140	AssignmentExpression	i = 0		2607854	0		=			
ANR	2608141	Identifier	i		2607854	0					
ANR	2608142	PrimaryExpression	0		2607854	1					
ANR	2608143	Condition	i < sdepth	326:24:10172:10181	2607854	1	True				
ANR	2608144	RelationalExpression	i < sdepth		2607854	0		<			
ANR	2608145	Identifier	i		2607854	0					
ANR	2608146	Identifier	sdepth		2607854	1					
ANR	2608147	Expression	"i += 8 , ++ sptr"	326:36:10184:10197	2607854	2	True				
ANR	2608148	AssignmentExpression	i += 8		2607854	0		+=			
ANR	2608149	Identifier	i		2607854	0					
ANR	2608150	PrimaryExpression	8		2607854	1					
ANR	2608151	UnaryExpression	++ sptr		2607854	1					
ANR	2608152	IncDec	++		2607854	0					
ANR	2608153	Identifier	sptr		2607854	1					
ANR	2608154	ExpressionStatement	pixel = ( pixel << 8 ) + * sptr	327:16:10216:10244	2607854	3	True				
ANR	2608155	AssignmentExpression	pixel = ( pixel << 8 ) + * sptr		2607854	0		=			
ANR	2608156	Identifier	pixel		2607854	0					
ANR	2608157	AdditiveExpression	( pixel << 8 ) + * sptr		2607854	1		+			
ANR	2608158	ShiftExpression	pixel << 8		2607854	0		<<			
ANR	2608159	Identifier	pixel		2607854	0					
ANR	2608160	PrimaryExpression	8		2607854	1					
ANR	2608161	UnaryOperationExpression	* sptr		2607854	1					
ANR	2608162	UnaryOperator	*		2607854	0					
ANR	2608163	Identifier	sptr		2607854	1					
ANR	2608164	IfStatement	if ( pixel != pixel_in )		2607854	5					
ANR	2608165	Condition	pixel != pixel_in	329:12:10268:10284	2607854	0	True				
ANR	2608166	EqualityExpression	pixel != pixel_in		2607854	0		!=			
ANR	2608167	Identifier	pixel		2607854	0					
ANR	2608168	Identifier	pixel_in		2607854	1					
ANR	2608169	CompoundStatement		53:31:1645:1645	2607854	1					
ANR	2608170	ExpressionStatement	"( * dev_proc ( tdev , map_color_rgb ) ) ( tdev , pixel , rgb )"	330:12:10301:10351	2607854	0	True				
ANR	2608171	CallExpression	"( * dev_proc ( tdev , map_color_rgb ) ) ( tdev , pixel , rgb )"		2607854	0					
ANR	2608172	Callee	"* dev_proc ( tdev , map_color_rgb )"		2607854	0					
ANR	2608173	UnaryOperationExpression	"* dev_proc ( tdev , map_color_rgb )"		2607854	0					
ANR	2608174	UnaryOperator	*		2607854	0					
ANR	2608175	CallExpression	"dev_proc ( tdev , map_color_rgb )"		2607854	1					
ANR	2608176	Callee	dev_proc		2607854	0					
ANR	2608177	Identifier	dev_proc		2607854	0					
ANR	2608178	ArgumentList	tdev		2607854	1					
ANR	2608179	Argument	tdev		2607854	0					
ANR	2608180	Identifier	tdev		2607854	0					
ANR	2608181	Argument	map_color_rgb		2607854	1					
ANR	2608182	Identifier	map_color_rgb		2607854	0					
ANR	2608183	ArgumentList	tdev		2607854	1					
ANR	2608184	Argument	tdev		2607854	0					
ANR	2608185	Identifier	tdev		2607854	0					
ANR	2608186	Argument	pixel		2607854	1					
ANR	2608187	Identifier	pixel		2607854	0					
ANR	2608188	Argument	rgb		2607854	2					
ANR	2608189	Identifier	rgb		2607854	0					
ANR	2608190	ExpressionStatement	pixel_in = pixel	331:12:10365:10381	2607854	1	True				
ANR	2608191	AssignmentExpression	pixel_in = pixel		2607854	0		=			
ANR	2608192	Identifier	pixel_in		2607854	0					
ANR	2608193	Identifier	pixel		2607854	1					
ANR	2608194	IfStatement	if ( dev -> color_info . num_components <= 3 )		2607854	2					
ANR	2608195	Condition	dev -> color_info . num_components <= 3	332:16:10399:10433	2607854	0	True				
ANR	2608196	RelationalExpression	dev -> color_info . num_components <= 3		2607854	0		<=			
ANR	2608197	MemberAccess	dev -> color_info . num_components		2607854	0					
ANR	2608198	PtrMemberAccess	dev -> color_info		2607854	0					
ANR	2608199	Identifier	dev		2607854	0					
ANR	2608200	Identifier	color_info		2607854	1					
ANR	2608201	Identifier	num_components		2607854	1					
ANR	2608202	PrimaryExpression	3		2607854	1					
ANR	2608203	ExpressionStatement	"pixel_out = ( * dev_proc ( dev , map_rgb_color ) ) ( dev , rgb )"	333:16:10452:10505	2607854	1	True				
ANR	2608204	AssignmentExpression	"pixel_out = ( * dev_proc ( dev , map_rgb_color ) ) ( dev , rgb )"		2607854	0		=			
ANR	2608205	Identifier	pixel_out		2607854	0					
ANR	2608206	CallExpression	"( * dev_proc ( dev , map_rgb_color ) ) ( dev , rgb )"		2607854	1					
ANR	2608207	Callee	"* dev_proc ( dev , map_rgb_color )"		2607854	0					
ANR	2608208	UnaryOperationExpression	"* dev_proc ( dev , map_rgb_color )"		2607854	0					
ANR	2608209	UnaryOperator	*		2607854	0					
ANR	2608210	CallExpression	"dev_proc ( dev , map_rgb_color )"		2607854	1					
ANR	2608211	Callee	dev_proc		2607854	0					
ANR	2608212	Identifier	dev_proc		2607854	0					
ANR	2608213	ArgumentList	dev		2607854	1					
ANR	2608214	Argument	dev		2607854	0					
ANR	2608215	Identifier	dev		2607854	0					
ANR	2608216	Argument	map_rgb_color		2607854	1					
ANR	2608217	Identifier	map_rgb_color		2607854	0					
ANR	2608218	ArgumentList	dev		2607854	1					
ANR	2608219	Argument	dev		2607854	0					
ANR	2608220	Identifier	dev		2607854	0					
ANR	2608221	Argument	rgb		2607854	1					
ANR	2608222	Identifier	rgb		2607854	0					
ANR	2608223	ElseStatement	else		2607854	0					
ANR	2608224	CompoundStatement		65:16:2204:2226	2607854	0					
ANR	2608225	IdentifierDeclStatement	gx_color_value c = gx_max_color_value - rgb [ 0 ] ;	336:16:10585:10631	2607854	0	True				
ANR	2608226	IdentifierDecl	c = gx_max_color_value - rgb [ 0 ]		2607854	0					
ANR	2608227	IdentifierDeclType	gx_color_value		2607854	0					
ANR	2608228	Identifier	c		2607854	1					
ANR	2608229	AssignmentExpression	c = gx_max_color_value - rgb [ 0 ]		2607854	2		=			
ANR	2608230	Identifier	c		2607854	0					
ANR	2608231	AdditiveExpression	gx_max_color_value - rgb [ 0 ]		2607854	1		-			
ANR	2608232	Identifier	gx_max_color_value		2607854	0					
ANR	2608233	ArrayIndexing	rgb [ 0 ]		2607854	1					
ANR	2608234	Identifier	rgb		2607854	0					
ANR	2608235	PrimaryExpression	0		2607854	1					
ANR	2608236	IdentifierDeclStatement	gx_color_value m = gx_max_color_value - rgb [ 1 ] ;	337:16:10649:10695	2607854	1	True				
ANR	2608237	IdentifierDecl	m = gx_max_color_value - rgb [ 1 ]		2607854	0					
ANR	2608238	IdentifierDeclType	gx_color_value		2607854	0					
ANR	2608239	Identifier	m		2607854	1					
ANR	2608240	AssignmentExpression	m = gx_max_color_value - rgb [ 1 ]		2607854	2		=			
ANR	2608241	Identifier	m		2607854	0					
ANR	2608242	AdditiveExpression	gx_max_color_value - rgb [ 1 ]		2607854	1		-			
ANR	2608243	Identifier	gx_max_color_value		2607854	0					
ANR	2608244	ArrayIndexing	rgb [ 1 ]		2607854	1					
ANR	2608245	Identifier	rgb		2607854	0					
ANR	2608246	PrimaryExpression	1		2607854	1					
ANR	2608247	IdentifierDeclStatement	gx_color_value y = gx_max_color_value - rgb [ 2 ] ;	338:16:10713:10759	2607854	2	True				
ANR	2608248	IdentifierDecl	y = gx_max_color_value - rgb [ 2 ]		2607854	0					
ANR	2608249	IdentifierDeclType	gx_color_value		2607854	0					
ANR	2608250	Identifier	y		2607854	1					
ANR	2608251	AssignmentExpression	y = gx_max_color_value - rgb [ 2 ]		2607854	2		=			
ANR	2608252	Identifier	y		2607854	0					
ANR	2608253	AdditiveExpression	gx_max_color_value - rgb [ 2 ]		2607854	1		-			
ANR	2608254	Identifier	gx_max_color_value		2607854	0					
ANR	2608255	ArrayIndexing	rgb [ 2 ]		2607854	1					
ANR	2608256	Identifier	rgb		2607854	0					
ANR	2608257	PrimaryExpression	2		2607854	1					
ANR	2608258	IdentifierDeclStatement	"gx_color_value k = ( c < m ? min ( c , y ) : min ( m , y ) ) ;"	339:16:10777:10827	2607854	3	True				
ANR	2608259	IdentifierDecl	"k = ( c < m ? min ( c , y ) : min ( m , y ) )"		2607854	0					
ANR	2608260	IdentifierDeclType	gx_color_value		2607854	0					
ANR	2608261	Identifier	k		2607854	1					
ANR	2608262	AssignmentExpression	"k = ( c < m ? min ( c , y ) : min ( m , y ) )"		2607854	2		=			
ANR	2608263	Identifier	k		2607854	0					
ANR	2608264	ConditionalExpression	"c < m ? min ( c , y ) : min ( m , y )"		2607854	1					
ANR	2608265	Condition	c < m		2607854	0					
ANR	2608266	RelationalExpression	c < m		2607854	0		<			
ANR	2608267	Identifier	c		2607854	0					
ANR	2608268	Identifier	m		2607854	1					
ANR	2608269	CallExpression	"min ( c , y )"		2607854	1					
ANR	2608270	Callee	min		2607854	0					
ANR	2608271	Identifier	min		2607854	0					
ANR	2608272	ArgumentList	c		2607854	1					
ANR	2608273	Argument	c		2607854	0					
ANR	2608274	Identifier	c		2607854	0					
ANR	2608275	Argument	y		2607854	1					
ANR	2608276	Identifier	y		2607854	0					
ANR	2608277	CallExpression	"min ( m , y )"		2607854	2					
ANR	2608278	Callee	min		2607854	0					
ANR	2608279	Identifier	min		2607854	0					
ANR	2608280	ArgumentList	m		2607854	1					
ANR	2608281	Argument	m		2607854	0					
ANR	2608282	Identifier	m		2607854	0					
ANR	2608283	Argument	y		2607854	1					
ANR	2608284	Identifier	y		2607854	0					
ANR	2608285	IdentifierDeclStatement	gx_color_value cmyk [ 4 ] ;	341:16:10846:10868	2607854	4	True				
ANR	2608286	IdentifierDecl	cmyk [ 4 ]		2607854	0					
ANR	2608287	IdentifierDeclType	gx_color_value [ 4 ]		2607854	0					
ANR	2608288	Identifier	cmyk		2607854	1					
ANR	2608289	PrimaryExpression	4		2607854	2					
ANR	2608290	ExpressionStatement	cmyk [ 0 ] = c - k	342:16:10886:10901	2607854	5	True				
ANR	2608291	AssignmentExpression	cmyk [ 0 ] = c - k		2607854	0		=			
ANR	2608292	ArrayIndexing	cmyk [ 0 ]		2607854	0					
ANR	2608293	Identifier	cmyk		2607854	0					
ANR	2608294	PrimaryExpression	0		2607854	1					
ANR	2608295	AdditiveExpression	c - k		2607854	1		-			
ANR	2608296	Identifier	c		2607854	0					
ANR	2608297	Identifier	k		2607854	1					
ANR	2608298	ExpressionStatement	cmyk [ 1 ] = m - k	342:33:10903:10918	2607854	6	True				
ANR	2608299	AssignmentExpression	cmyk [ 1 ] = m - k		2607854	0		=			
ANR	2608300	ArrayIndexing	cmyk [ 1 ]		2607854	0					
ANR	2608301	Identifier	cmyk		2607854	0					
ANR	2608302	PrimaryExpression	1		2607854	1					
ANR	2608303	AdditiveExpression	m - k		2607854	1		-			
ANR	2608304	Identifier	m		2607854	0					
ANR	2608305	Identifier	k		2607854	1					
ANR	2608306	ExpressionStatement	cmyk [ 2 ] = y - k	342:50:10920:10935	2607854	7	True				
ANR	2608307	AssignmentExpression	cmyk [ 2 ] = y - k		2607854	0		=			
ANR	2608308	ArrayIndexing	cmyk [ 2 ]		2607854	0					
ANR	2608309	Identifier	cmyk		2607854	0					
ANR	2608310	PrimaryExpression	2		2607854	1					
ANR	2608311	AdditiveExpression	y - k		2607854	1		-			
ANR	2608312	Identifier	y		2607854	0					
ANR	2608313	Identifier	k		2607854	1					
ANR	2608314	ExpressionStatement	cmyk [ 3 ] = k	342:67:10937:10948	2607854	8	True				
ANR	2608315	AssignmentExpression	cmyk [ 3 ] = k		2607854	0		=			
ANR	2608316	ArrayIndexing	cmyk [ 3 ]		2607854	0					
ANR	2608317	Identifier	cmyk		2607854	0					
ANR	2608318	PrimaryExpression	3		2607854	1					
ANR	2608319	Identifier	k		2607854	1					
ANR	2608320	ExpressionStatement	"pixel_out = ( * dev_proc ( dev , map_cmyk_color ) ) ( dev , cmyk )"	343:16:10966:11021	2607854	9	True				
ANR	2608321	AssignmentExpression	"pixel_out = ( * dev_proc ( dev , map_cmyk_color ) ) ( dev , cmyk )"		2607854	0		=			
ANR	2608322	Identifier	pixel_out		2607854	0					
ANR	2608323	CallExpression	"( * dev_proc ( dev , map_cmyk_color ) ) ( dev , cmyk )"		2607854	1					
ANR	2608324	Callee	"* dev_proc ( dev , map_cmyk_color )"		2607854	0					
ANR	2608325	UnaryOperationExpression	"* dev_proc ( dev , map_cmyk_color )"		2607854	0					
ANR	2608326	UnaryOperator	*		2607854	0					
ANR	2608327	CallExpression	"dev_proc ( dev , map_cmyk_color )"		2607854	1					
ANR	2608328	Callee	dev_proc		2607854	0					
ANR	2608329	Identifier	dev_proc		2607854	0					
ANR	2608330	ArgumentList	dev		2607854	1					
ANR	2608331	Argument	dev		2607854	0					
ANR	2608332	Identifier	dev		2607854	0					
ANR	2608333	Argument	map_cmyk_color		2607854	1					
ANR	2608334	Identifier	map_cmyk_color		2607854	0					
ANR	2608335	ArgumentList	dev		2607854	1					
ANR	2608336	Argument	dev		2607854	0					
ANR	2608337	Identifier	dev		2607854	0					
ANR	2608338	Argument	cmyk		2607854	1					
ANR	2608339	Identifier	cmyk		2607854	0					
ANR	2608340	IfStatement	if ( sizeof ( pixel_out ) > 4 )		2607854	6					
ANR	2608341	Condition	sizeof ( pixel_out ) > 4	346:12:11059:11079	2607854	0	True				
ANR	2608342	RelationalExpression	sizeof ( pixel_out ) > 4		2607854	0		>			
ANR	2608343	SizeofExpression	sizeof ( pixel_out )		2607854	0					
ANR	2608344	Sizeof	sizeof		2607854	0					
ANR	2608345	SizeofOperand	pixel_out		2607854	1					
ANR	2608346	PrimaryExpression	4		2607854	1					
ANR	2608347	CompoundStatement		70:35:2440:2440	2607854	1					
ANR	2608348	IfStatement	"if ( sample_store_next64 ( pixel_out , & l_dptr , & l_dbit , depth , & l_dbyte ) < 0 )"		2607854	0					
ANR	2608349	Condition	"sample_store_next64 ( pixel_out , & l_dptr , & l_dbit , depth , & l_dbyte ) < 0"	347:16:11100:11168	2607854	0	True				
ANR	2608350	RelationalExpression	"sample_store_next64 ( pixel_out , & l_dptr , & l_dbit , depth , & l_dbyte ) < 0"		2607854	0		<			
ANR	2608351	CallExpression	"sample_store_next64 ( pixel_out , & l_dptr , & l_dbit , depth , & l_dbyte )"		2607854	0					
ANR	2608352	Callee	sample_store_next64		2607854	0					
ANR	2608353	Identifier	sample_store_next64		2607854	0					
ANR	2608354	ArgumentList	pixel_out		2607854	1					
ANR	2608355	Argument	pixel_out		2607854	0					
ANR	2608356	Identifier	pixel_out		2607854	0					
ANR	2608357	Argument	& l_dptr		2607854	1					
ANR	2608358	UnaryOperationExpression	& l_dptr		2607854	0					
ANR	2608359	UnaryOperator	&		2607854	0					
ANR	2608360	Identifier	l_dptr		2607854	1					
ANR	2608361	Argument	& l_dbit		2607854	2					
ANR	2608362	UnaryOperationExpression	& l_dbit		2607854	0					
ANR	2608363	UnaryOperator	&		2607854	0					
ANR	2608364	Identifier	l_dbit		2607854	1					
ANR	2608365	Argument	depth		2607854	3					
ANR	2608366	Identifier	depth		2607854	0					
ANR	2608367	Argument	& l_dbyte		2607854	4					
ANR	2608368	UnaryOperationExpression	& l_dbyte		2607854	0					
ANR	2608369	UnaryOperator	&		2607854	0					
ANR	2608370	Identifier	l_dbyte		2607854	1					
ANR	2608371	PrimaryExpression	0		2607854	1					
ANR	2608372	ExpressionStatement	return_error ( gs_error_rangecheck )	348:16:11187:11220	2607854	1	True				
ANR	2608373	CallExpression	return_error ( gs_error_rangecheck )		2607854	0					
ANR	2608374	Callee	return_error		2607854	0					
ANR	2608375	Identifier	return_error		2607854	0					
ANR	2608376	ArgumentList	gs_error_rangecheck		2607854	1					
ANR	2608377	Argument	gs_error_rangecheck		2607854	0					
ANR	2608378	Identifier	gs_error_rangecheck		2607854	0					
ANR	2608379	ElseStatement	else		2607854	0					
ANR	2608380	CompoundStatement		74:13:2603:2603	2607854	0					
ANR	2608381	IfStatement	"if ( sample_store_next32 ( pixel_out , & l_dptr , & l_dbit , depth , & l_dbyte ) < 0 )"		2607854	0					
ANR	2608382	Condition	"sample_store_next32 ( pixel_out , & l_dptr , & l_dbit , depth , & l_dbyte ) < 0"	351:16:11263:11331	2607854	0	True				
ANR	2608383	RelationalExpression	"sample_store_next32 ( pixel_out , & l_dptr , & l_dbit , depth , & l_dbyte ) < 0"		2607854	0		<			
ANR	2608384	CallExpression	"sample_store_next32 ( pixel_out , & l_dptr , & l_dbit , depth , & l_dbyte )"		2607854	0					
ANR	2608385	Callee	sample_store_next32		2607854	0					
ANR	2608386	Identifier	sample_store_next32		2607854	0					
ANR	2608387	ArgumentList	pixel_out		2607854	1					
ANR	2608388	Argument	pixel_out		2607854	0					
ANR	2608389	Identifier	pixel_out		2607854	0					
ANR	2608390	Argument	& l_dptr		2607854	1					
ANR	2608391	UnaryOperationExpression	& l_dptr		2607854	0					
ANR	2608392	UnaryOperator	&		2607854	0					
ANR	2608393	Identifier	l_dptr		2607854	1					
ANR	2608394	Argument	& l_dbit		2607854	2					
ANR	2608395	UnaryOperationExpression	& l_dbit		2607854	0					
ANR	2608396	UnaryOperator	&		2607854	0					
ANR	2608397	Identifier	l_dbit		2607854	1					
ANR	2608398	Argument	depth		2607854	3					
ANR	2608399	Identifier	depth		2607854	0					
ANR	2608400	Argument	& l_dbyte		2607854	4					
ANR	2608401	UnaryOperationExpression	& l_dbyte		2607854	0					
ANR	2608402	UnaryOperator	&		2607854	0					
ANR	2608403	Identifier	l_dbyte		2607854	1					
ANR	2608404	PrimaryExpression	0		2607854	1					
ANR	2608405	ExpressionStatement	return_error ( gs_error_rangecheck )	352:16:11350:11383	2607854	1	True				
ANR	2608406	CallExpression	return_error ( gs_error_rangecheck )		2607854	0					
ANR	2608407	Callee	return_error		2607854	0					
ANR	2608408	Identifier	return_error		2607854	0					
ANR	2608409	ArgumentList	gs_error_rangecheck		2607854	1					
ANR	2608410	Argument	gs_error_rangecheck		2607854	0					
ANR	2608411	Identifier	gs_error_rangecheck		2607854	0					
ANR	2608412	ExpressionStatement	"sample_store_flush ( l_dptr , l_dbit , l_dbyte )"	355:4:11405:11448	2607854	27	True				
ANR	2608413	CallExpression	"sample_store_flush ( l_dptr , l_dbit , l_dbyte )"		2607854	0					
ANR	2608414	Callee	sample_store_flush		2607854	0					
ANR	2608415	Identifier	sample_store_flush		2607854	0					
ANR	2608416	ArgumentList	l_dptr		2607854	1					
ANR	2608417	Argument	l_dptr		2607854	0					
ANR	2608418	Identifier	l_dptr		2607854	0					
ANR	2608419	Argument	l_dbit		2607854	1					
ANR	2608420	Identifier	l_dbit		2607854	0					
ANR	2608421	Argument	l_dbyte		2607854	2					
ANR	2608422	Identifier	l_dbyte		2607854	0					
ANR	2608423	Label	gx :	356:0:11450:11452	2607854	28	True				
ANR	2608424	Identifier	gx		2607854	0					
ANR	2608425	ExpressionStatement	"gs_free_object ( mem , row , ""x_wrap_get_bits"" )"	357:4:11458:11501	2607854	29	True				
ANR	2608426	CallExpression	"gs_free_object ( mem , row , ""x_wrap_get_bits"" )"		2607854	0					
ANR	2608427	Callee	gs_free_object		2607854	0					
ANR	2608428	Identifier	gs_free_object		2607854	0					
ANR	2608429	ArgumentList	mem		2607854	1					
ANR	2608430	Argument	mem		2607854	0					
ANR	2608431	Identifier	mem		2607854	0					
ANR	2608432	Argument	row		2607854	1					
ANR	2608433	Identifier	row		2607854	0					
ANR	2608434	Argument	"""x_wrap_get_bits"""		2607854	2					
ANR	2608435	PrimaryExpression	"""x_wrap_get_bits"""		2607854	0					
ANR	2608436	IfStatement	if ( actual_data )		2607854	30					
ANR	2608437	Condition	actual_data	358:8:11511:11521	2607854	0	True				
ANR	2608438	Identifier	actual_data		2607854	0					
ANR	2608439	ExpressionStatement	* actual_data = str	359:8:11532:11550	2607854	1	True				
ANR	2608440	AssignmentExpression	* actual_data = str		2607854	0		=			
ANR	2608441	UnaryOperationExpression	* actual_data		2607854	0					
ANR	2608442	UnaryOperator	*		2607854	0					
ANR	2608443	Identifier	actual_data		2607854	1					
ANR	2608444	Identifier	str		2607854	1					
ANR	2608445	ReturnStatement	return code ;	360:4:11556:11567	2607854	31	True				
ANR	2608446	Identifier	code		2607854	0					
ANR	2608447	ReturnType	static int		2607854	1					
ANR	2608448	Identifier	x_wrap_get_bits		2607854	2					
ANR	2608449	ParameterList	"gx_device * dev , int y , byte * str , byte * * actual_data"		2607854	3					
ANR	2608450	Parameter	gx_device * dev	276:16:8584:8598	2607854	0	True				
ANR	2608451	ParameterType	gx_device *		2607854	0					
ANR	2608452	Identifier	dev		2607854	1					
ANR	2608453	Parameter	int y	276:33:8601:8605	2607854	1	True				
ANR	2608454	ParameterType	int		2607854	0					
ANR	2608455	Identifier	y		2607854	1					
ANR	2608456	Parameter	byte * str	276:40:8608:8617	2607854	2	True				
ANR	2608457	ParameterType	byte *		2607854	0					
ANR	2608458	Identifier	str		2607854	1					
ANR	2608459	Parameter	byte * * actual_data	276:52:8620:8638	2607854	3	True				
ANR	2608460	ParameterType	byte * *		2607854	0					
ANR	2608461	Identifier	actual_data		2607854	1					
ANR	2608462	CFGEntryNode	ENTRY		2607854		True				
ANR	2608463	CFGExitNode	EXIT		2607854		True				
ANR	2608464	Symbol	map_cmyk_color		2607854						
ANR	2608465	Symbol	gs_error_rangecheck		2607854						
ANR	2608466	Symbol	"* dev_proc ( dev , map_cmyk_color )"		2607854						
ANR	2608467	Symbol	get_bits		2607854						
ANR	2608468	Symbol	pixel_in		2607854						
ANR	2608469	Symbol	& tdev		2607854						
ANR	2608470	Symbol	sample_store_next32		2607854						
ANR	2608471	Symbol	sbit		2607854						
ANR	2608472	Symbol	"* dev_proc ( tdev , get_bits )"		2607854						
ANR	2608473	Symbol	"* dev_proc ( dev , map_rgb_color )"		2607854						
ANR	2608474	Symbol	gx_no_color_index		2607854						
ANR	2608475	Symbol	dev		2607854						
ANR	2608476	Symbol	tdev		2607854						
ANR	2608477	Symbol	tdev -> width		2607854						
ANR	2608478	Symbol	dev -> color_info . num_components		2607854						
ANR	2608479	Symbol	tdev -> color_info . depth		2607854						
ANR	2608480	Symbol	l_dbit		2607854						
ANR	2608481	Symbol	sample_store_next64		2607854						
ANR	2608482	Symbol	sptr		2607854						
ANR	2608483	Symbol	map_rgb_color		2607854						
ANR	2608484	Symbol	* cmyk		2607854						
ANR	2608485	Symbol	str		2607854						
ANR	2608486	Symbol	get_dev_target		2607854						
ANR	2608487	Symbol	l_dbyte		2607854						
ANR	2608488	Symbol	gx_max_color_value		2607854						
ANR	2608489	Symbol	* rgb		2607854						
ANR	2608490	Symbol	pixel_out		2607854						
ANR	2608491	Symbol	& l_dbit		2607854						
ANR	2608492	Symbol	* dev		2607854						
ANR	2608493	Symbol	& base		2607854						
ANR	2608494	Symbol	code		2607854						
ANR	2608495	Symbol	tdev -> color_info		2607854						
ANR	2608496	Symbol	* dev_proc		2607854						
ANR	2608497	Symbol	l_dptr		2607854						
ANR	2608498	Symbol	dev -> color_info		2607854						
ANR	2608499	Symbol	dev -> color_info . depth		2607854						
ANR	2608500	Symbol	rgb		2607854						
ANR	2608501	Symbol	map_color_rgb		2607854						
ANR	2608502	Symbol	actual_data		2607854						
ANR	2608503	Symbol	dsize		2607854						
ANR	2608504	Symbol	cmyk		2607854						
ANR	2608505	Symbol	min		2607854						
ANR	2608506	Symbol	mem		2607854						
ANR	2608507	Symbol	dev_proc		2607854						
ANR	2608508	Symbol	smask		2607854						
ANR	2608509	Symbol	* actual_data		2607854						
ANR	2608510	Symbol	row		2607854						
ANR	2608511	Symbol	pixel		2607854						
ANR	2608512	Symbol	sdepth		2607854						
ANR	2608513	Symbol	& l_dptr		2607854						
ANR	2608514	Symbol	gs_alloc_bytes		2607854						
ANR	2608515	Symbol	c		2607854						
ANR	2608516	Symbol	& l_dbyte		2607854						
ANR	2608517	Symbol	i		2607854						
ANR	2608518	Symbol	k		2607854						
ANR	2608519	Symbol	m		2607854						
ANR	2608520	Symbol	xi		2607854						
ANR	2608521	Symbol	gs_error_VMerror		2607854						
ANR	2608522	Symbol	dev -> memory		2607854						
ANR	2608523	Symbol	depth		2607854						
ANR	2608524	Symbol	* tdev		2607854						
ANR	2608525	Symbol	* sptr		2607854						
ANR	2608526	Symbol	width		2607854						
ANR	2608527	Symbol	y		2607854						
ANR	2608528	Symbol	base		2607854						
ANR	2608529	Function	x_wrap_get_params	363:0:11572:12177							
ANR	2608530	FunctionDef	"x_wrap_get_params (gx_device * dev , gs_param_list * plist)"		2608529	0					
ANR	2608531	CompoundStatement		365:0:11641:12177	2608529	0					
ANR	2608532	IdentifierDeclStatement	gx_device * tdev ;	366:4:11647:11662	2608529	0	True				
ANR	2608533	IdentifierDecl	* tdev		2608529	0					
ANR	2608534	IdentifierDeclType	gx_device *		2608529	0					
ANR	2608535	Identifier	tdev		2608529	1					
ANR	2608536	IdentifierDeclStatement	"gx_device_X save_dev , * xdev ;"	368:4:11735:11762	2608529	1	True				
ANR	2608537	IdentifierDecl	save_dev		2608529	0					
ANR	2608538	IdentifierDeclType	gx_device_X		2608529	0					
ANR	2608539	Identifier	save_dev		2608529	1					
ANR	2608540	IdentifierDecl	* xdev		2608529	1					
ANR	2608541	IdentifierDeclType	gx_device_X *		2608529	0					
ANR	2608542	Identifier	xdev		2608529	1					
ANR	2608543	IdentifierDeclStatement	int ecode ;	369:4:11768:11777	2608529	2	True				
ANR	2608544	IdentifierDecl	ecode		2608529	0					
ANR	2608545	IdentifierDeclType	int		2608529	0					
ANR	2608546	Identifier	ecode		2608529	1					
ANR	2608547	IdentifierDeclStatement	int code ;	370:4:11783:11791	2608529	3	True				
ANR	2608548	IdentifierDecl	code		2608529	0					
ANR	2608549	IdentifierDeclType	int		2608529	0					
ANR	2608550	Identifier	code		2608529	1					
ANR	2608551	IfStatement	"if ( ( code = get_dev_target ( & tdev , dev ) ) < 0 )"		2608529	4					
ANR	2608552	Condition	"( code = get_dev_target ( & tdev , dev ) ) < 0"	372:8:11802:11840	2608529	0	True				
ANR	2608553	RelationalExpression	"( code = get_dev_target ( & tdev , dev ) ) < 0"		2608529	0		<			
ANR	2608554	AssignmentExpression	"code = get_dev_target ( & tdev , dev )"		2608529	0		=			
ANR	2608555	Identifier	code		2608529	0					
ANR	2608556	CallExpression	"get_dev_target ( & tdev , dev )"		2608529	1					
ANR	2608557	Callee	get_dev_target		2608529	0					
ANR	2608558	Identifier	get_dev_target		2608529	0					
ANR	2608559	ArgumentList	& tdev		2608529	1					
ANR	2608560	Argument	& tdev		2608529	0					
ANR	2608561	UnaryOperationExpression	& tdev		2608529	0					
ANR	2608562	UnaryOperator	&		2608529	0					
ANR	2608563	Identifier	tdev		2608529	1					
ANR	2608564	Argument	dev		2608529	1					
ANR	2608565	Identifier	dev		2608529	0					
ANR	2608566	PrimaryExpression	0		2608529	1					
ANR	2608567	ReturnStatement	return code ;	373:8:11851:11862	2608529	1	True				
ANR	2608568	Identifier	code		2608529	0					
ANR	2608569	ExpressionStatement	xdev = ( gx_device_X * ) tdev	374:4:11868:11895	2608529	5	True				
ANR	2608570	AssignmentExpression	xdev = ( gx_device_X * ) tdev		2608529	0		=			
ANR	2608571	Identifier	xdev		2608529	0					
ANR	2608572	CastExpression	( gx_device_X * ) tdev		2608529	1					
ANR	2608573	CastTarget	gx_device_X *		2608529	0					
ANR	2608574	Identifier	tdev		2608529	1					
ANR	2608575	ExpressionStatement	xdev -> orig_color_info = xdev -> color_info	375:4:11901:11941	2608529	6	True				
ANR	2608576	AssignmentExpression	xdev -> orig_color_info = xdev -> color_info		2608529	0		=			
ANR	2608577	PtrMemberAccess	xdev -> orig_color_info		2608529	0					
ANR	2608578	Identifier	xdev		2608529	0					
ANR	2608579	Identifier	orig_color_info		2608529	1					
ANR	2608580	PtrMemberAccess	xdev -> color_info		2608529	1					
ANR	2608581	Identifier	xdev		2608529	0					
ANR	2608582	Identifier	color_info		2608529	1					
ANR	2608583	ExpressionStatement	save_dev = * xdev	377:4:11948:11964	2608529	7	True				
ANR	2608584	AssignmentExpression	save_dev = * xdev		2608529	0		=			
ANR	2608585	Identifier	save_dev		2608529	0					
ANR	2608586	UnaryOperationExpression	* xdev		2608529	1					
ANR	2608587	UnaryOperator	*		2608529	0					
ANR	2608588	Identifier	xdev		2608529	1					
ANR	2608589	IfStatement	if ( tdev -> is_open )		2608529	8					
ANR	2608590	Condition	tdev -> is_open	379:8:11975:11987	2608529	0	True				
ANR	2608591	PtrMemberAccess	tdev -> is_open		2608529	0					
ANR	2608592	Identifier	tdev		2608529	0					
ANR	2608593	Identifier	is_open		2608529	1					
ANR	2608594	ExpressionStatement	tdev -> color_info = dev -> color_info	380:8:11998:12032	2608529	1	True				
ANR	2608595	AssignmentExpression	tdev -> color_info = dev -> color_info		2608529	0		=			
ANR	2608596	PtrMemberAccess	tdev -> color_info		2608529	0					
ANR	2608597	Identifier	tdev		2608529	0					
ANR	2608598	Identifier	color_info		2608529	1					
ANR	2608599	PtrMemberAccess	dev -> color_info		2608529	1					
ANR	2608600	Identifier	dev		2608529	0					
ANR	2608601	Identifier	color_info		2608529	1					
ANR	2608602	ExpressionStatement	tdev -> dname = dev -> dname	381:4:12038:12062	2608529	9	True				
ANR	2608603	AssignmentExpression	tdev -> dname = dev -> dname		2608529	0		=			
ANR	2608604	PtrMemberAccess	tdev -> dname		2608529	0					
ANR	2608605	Identifier	tdev		2608529	0					
ANR	2608606	Identifier	dname		2608529	1					
ANR	2608607	PtrMemberAccess	dev -> dname		2608529	1					
ANR	2608608	Identifier	dev		2608529	0					
ANR	2608609	Identifier	dname		2608529	1					
ANR	2608610	ExpressionStatement	"ecode = ( * dev_proc ( tdev , get_params ) ) ( tdev , plist )"	382:4:12068:12119	2608529	10	True				
ANR	2608611	AssignmentExpression	"ecode = ( * dev_proc ( tdev , get_params ) ) ( tdev , plist )"		2608529	0		=			
ANR	2608612	Identifier	ecode		2608529	0					
ANR	2608613	CallExpression	"( * dev_proc ( tdev , get_params ) ) ( tdev , plist )"		2608529	1					
ANR	2608614	Callee	"* dev_proc ( tdev , get_params )"		2608529	0					
ANR	2608615	UnaryOperationExpression	"* dev_proc ( tdev , get_params )"		2608529	0					
ANR	2608616	UnaryOperator	*		2608529	0					
ANR	2608617	CallExpression	"dev_proc ( tdev , get_params )"		2608529	1					
ANR	2608618	Callee	dev_proc		2608529	0					
ANR	2608619	Identifier	dev_proc		2608529	0					
ANR	2608620	ArgumentList	tdev		2608529	1					
ANR	2608621	Argument	tdev		2608529	0					
ANR	2608622	Identifier	tdev		2608529	0					
ANR	2608623	Argument	get_params		2608529	1					
ANR	2608624	Identifier	get_params		2608529	0					
ANR	2608625	ArgumentList	tdev		2608529	1					
ANR	2608626	Argument	tdev		2608529	0					
ANR	2608627	Identifier	tdev		2608529	0					
ANR	2608628	Argument	plist		2608529	1					
ANR	2608629	Identifier	plist		2608529	0					
ANR	2608630	ExpressionStatement	* ( gx_device_X * ) tdev = save_dev	383:4:12125:12157	2608529	11	True				
ANR	2608631	AssignmentExpression	* ( gx_device_X * ) tdev = save_dev		2608529	0		=			
ANR	2608632	UnaryOperationExpression	* ( gx_device_X * ) tdev		2608529	0					
ANR	2608633	UnaryOperator	*		2608529	0					
ANR	2608634	CastExpression	( gx_device_X * ) tdev		2608529	1					
ANR	2608635	CastTarget	gx_device_X *		2608529	0					
ANR	2608636	Identifier	tdev		2608529	1					
ANR	2608637	Identifier	save_dev		2608529	1					
ANR	2608638	ReturnStatement	return ecode ;	384:4:12163:12175	2608529	12	True				
ANR	2608639	Identifier	ecode		2608529	0					
ANR	2608640	ReturnType	static int		2608529	1					
ANR	2608641	Identifier	x_wrap_get_params		2608529	2					
ANR	2608642	ParameterList	"gx_device * dev , gs_param_list * plist"		2608529	3					
ANR	2608643	Parameter	gx_device * dev	364:18:11601:11615	2608529	0	True				
ANR	2608644	ParameterType	gx_device *		2608529	0					
ANR	2608645	Identifier	dev		2608529	1					
ANR	2608646	Parameter	gs_param_list * plist	364:35:11618:11638	2608529	1	True				
ANR	2608647	ParameterType	gs_param_list *		2608529	0					
ANR	2608648	Identifier	plist		2608529	1					
ANR	2608649	CFGEntryNode	ENTRY		2608529		True				
ANR	2608650	CFGExitNode	EXIT		2608529		True				
ANR	2608651	Symbol	* dev		2608529						
ANR	2608652	Symbol	get_params		2608529						
ANR	2608653	Symbol	code		2608529						
ANR	2608654	Symbol	xdev		2608529						
ANR	2608655	Symbol	dev -> dname		2608529						
ANR	2608656	Symbol	tdev -> color_info		2608529						
ANR	2608657	Symbol	* dev_proc		2608529						
ANR	2608658	Symbol	save_dev		2608529						
ANR	2608659	Symbol	xdev -> orig_color_info		2608529						
ANR	2608660	Symbol	& tdev		2608529						
ANR	2608661	Symbol	dev -> color_info		2608529						
ANR	2608662	Symbol	ecode		2608529						
ANR	2608663	Symbol	"* dev_proc ( tdev , get_params )"		2608529						
ANR	2608664	Symbol	get_dev_target		2608529						
ANR	2608665	Symbol	plist		2608529						
ANR	2608666	Symbol	xdev -> color_info		2608529						
ANR	2608667	Symbol	tdev -> dname		2608529						
ANR	2608668	Symbol	* ( gx_device_X * ) tdev		2608529						
ANR	2608669	Symbol	* tdev		2608529						
ANR	2608670	Symbol	dev		2608529						
ANR	2608671	Symbol	* xdev		2608529						
ANR	2608672	Symbol	dev_proc		2608529						
ANR	2608673	Symbol	tdev		2608529						
ANR	2608674	Symbol	tdev -> is_open		2608529						
ANR	2608675	Function	x_wrap_put_params	387:0:12180:12969							
ANR	2608676	FunctionDef	"x_wrap_put_params (gx_device * dev , gs_param_list * plist)"		2608675	0					
ANR	2608677	CompoundStatement		389:0:12249:12969	2608675	0					
ANR	2608678	IdentifierDeclStatement	gx_device * tdev ;	390:4:12255:12270	2608675	0	True				
ANR	2608679	IdentifierDecl	* tdev		2608675	0					
ANR	2608680	IdentifierDeclType	gx_device *		2608675	0					
ANR	2608681	Identifier	tdev		2608675	1					
ANR	2608682	IdentifierDeclStatement	gx_device_X * xdev ;	391:4:12276:12293	2608675	1	True				
ANR	2608683	IdentifierDecl	* xdev		2608675	0					
ANR	2608684	IdentifierDeclType	gx_device_X *		2608675	0					
ANR	2608685	Identifier	xdev		2608675	1					
ANR	2608686	IdentifierDeclStatement	const char * dname ;	392:4:12299:12316	2608675	2	True				
ANR	2608687	IdentifierDecl	* dname		2608675	0					
ANR	2608688	IdentifierDeclType	const char *		2608675	0					
ANR	2608689	Identifier	dname		2608675	1					
ANR	2608690	IdentifierDeclStatement	"int rcode , code ;"	393:4:12322:12337	2608675	3	True				
ANR	2608691	IdentifierDecl	rcode		2608675	0					
ANR	2608692	IdentifierDeclType	int		2608675	0					
ANR	2608693	Identifier	rcode		2608675	1					
ANR	2608694	IdentifierDecl	code		2608675	1					
ANR	2608695	IdentifierDeclType	int		2608675	0					
ANR	2608696	Identifier	code		2608675	1					
ANR	2608697	IfStatement	"if ( ( code = get_dev_target ( & tdev , dev ) ) < 0 )"		2608675	4					
ANR	2608698	Condition	"( code = get_dev_target ( & tdev , dev ) ) < 0"	395:8:12348:12386	2608675	0	True				
ANR	2608699	RelationalExpression	"( code = get_dev_target ( & tdev , dev ) ) < 0"		2608675	0		<			
ANR	2608700	AssignmentExpression	"code = get_dev_target ( & tdev , dev )"		2608675	0		=			
ANR	2608701	Identifier	code		2608675	0					
ANR	2608702	CallExpression	"get_dev_target ( & tdev , dev )"		2608675	1					
ANR	2608703	Callee	get_dev_target		2608675	0					
ANR	2608704	Identifier	get_dev_target		2608675	0					
ANR	2608705	ArgumentList	& tdev		2608675	1					
ANR	2608706	Argument	& tdev		2608675	0					
ANR	2608707	UnaryOperationExpression	& tdev		2608675	0					
ANR	2608708	UnaryOperator	&		2608675	0					
ANR	2608709	Identifier	tdev		2608675	1					
ANR	2608710	Argument	dev		2608675	1					
ANR	2608711	Identifier	dev		2608675	0					
ANR	2608712	PrimaryExpression	0		2608675	1					
ANR	2608713	ReturnStatement	return code ;	396:8:12397:12408	2608675	1	True				
ANR	2608714	Identifier	code		2608675	0					
ANR	2608715	ExpressionStatement	xdev = ( gx_device_X * ) tdev	401:4:12559:12586	2608675	5	True				
ANR	2608716	AssignmentExpression	xdev = ( gx_device_X * ) tdev		2608675	0		=			
ANR	2608717	Identifier	xdev		2608675	0					
ANR	2608718	CastExpression	( gx_device_X * ) tdev		2608675	1					
ANR	2608719	CastTarget	gx_device_X *		2608675	0					
ANR	2608720	Identifier	tdev		2608675	1					
ANR	2608721	ExpressionStatement	xdev -> orig_color_info = xdev -> color_info	402:4:12592:12632	2608675	6	True				
ANR	2608722	AssignmentExpression	xdev -> orig_color_info = xdev -> color_info		2608675	0		=			
ANR	2608723	PtrMemberAccess	xdev -> orig_color_info		2608675	0					
ANR	2608724	Identifier	xdev		2608675	0					
ANR	2608725	Identifier	orig_color_info		2608675	1					
ANR	2608726	PtrMemberAccess	xdev -> color_info		2608675	1					
ANR	2608727	Identifier	xdev		2608675	0					
ANR	2608728	Identifier	color_info		2608675	1					
ANR	2608729	ExpressionStatement	dname = tdev -> dname	403:4:12638:12657	2608675	7	True				
ANR	2608730	AssignmentExpression	dname = tdev -> dname		2608675	0		=			
ANR	2608731	Identifier	dname		2608675	0					
ANR	2608732	PtrMemberAccess	tdev -> dname		2608675	1					
ANR	2608733	Identifier	tdev		2608675	0					
ANR	2608734	Identifier	dname		2608675	1					
ANR	2608735	ExpressionStatement	tdev -> color_info = dev -> color_info	404:4:12663:12697	2608675	8	True				
ANR	2608736	AssignmentExpression	tdev -> color_info = dev -> color_info		2608675	0		=			
ANR	2608737	PtrMemberAccess	tdev -> color_info		2608675	0					
ANR	2608738	Identifier	tdev		2608675	0					
ANR	2608739	Identifier	color_info		2608675	1					
ANR	2608740	PtrMemberAccess	dev -> color_info		2608675	1					
ANR	2608741	Identifier	dev		2608675	0					
ANR	2608742	Identifier	color_info		2608675	1					
ANR	2608743	ExpressionStatement	tdev -> dname = dev -> dname	405:4:12703:12727	2608675	9	True				
ANR	2608744	AssignmentExpression	tdev -> dname = dev -> dname		2608675	0		=			
ANR	2608745	PtrMemberAccess	tdev -> dname		2608675	0					
ANR	2608746	Identifier	tdev		2608675	0					
ANR	2608747	Identifier	dname		2608675	1					
ANR	2608748	PtrMemberAccess	dev -> dname		2608675	1					
ANR	2608749	Identifier	dev		2608675	0					
ANR	2608750	Identifier	dname		2608675	1					
ANR	2608751	ExpressionStatement	"rcode = ( * dev_proc ( tdev , put_params ) ) ( tdev , plist )"	406:4:12733:12784	2608675	10	True				
ANR	2608752	AssignmentExpression	"rcode = ( * dev_proc ( tdev , put_params ) ) ( tdev , plist )"		2608675	0		=			
ANR	2608753	Identifier	rcode		2608675	0					
ANR	2608754	CallExpression	"( * dev_proc ( tdev , put_params ) ) ( tdev , plist )"		2608675	1					
ANR	2608755	Callee	"* dev_proc ( tdev , put_params )"		2608675	0					
ANR	2608756	UnaryOperationExpression	"* dev_proc ( tdev , put_params )"		2608675	0					
ANR	2608757	UnaryOperator	*		2608675	0					
ANR	2608758	CallExpression	"dev_proc ( tdev , put_params )"		2608675	1					
ANR	2608759	Callee	dev_proc		2608675	0					
ANR	2608760	Identifier	dev_proc		2608675	0					
ANR	2608761	ArgumentList	tdev		2608675	1					
ANR	2608762	Argument	tdev		2608675	0					
ANR	2608763	Identifier	tdev		2608675	0					
ANR	2608764	Argument	put_params		2608675	1					
ANR	2608765	Identifier	put_params		2608675	0					
ANR	2608766	ArgumentList	tdev		2608675	1					
ANR	2608767	Argument	tdev		2608675	0					
ANR	2608768	Identifier	tdev		2608675	0					
ANR	2608769	Argument	plist		2608675	1					
ANR	2608770	Identifier	plist		2608675	0					
ANR	2608771	ExpressionStatement	tdev -> color_info = xdev -> orig_color_info	407:4:12790:12830	2608675	11	True				
ANR	2608772	AssignmentExpression	tdev -> color_info = xdev -> orig_color_info		2608675	0		=			
ANR	2608773	PtrMemberAccess	tdev -> color_info		2608675	0					
ANR	2608774	Identifier	tdev		2608675	0					
ANR	2608775	Identifier	color_info		2608675	1					
ANR	2608776	PtrMemberAccess	xdev -> orig_color_info		2608675	1					
ANR	2608777	Identifier	xdev		2608675	0					
ANR	2608778	Identifier	orig_color_info		2608675	1					
ANR	2608779	ExpressionStatement	tdev -> dname = dname	408:4:12836:12855	2608675	12	True				
ANR	2608780	AssignmentExpression	tdev -> dname = dname		2608675	0		=			
ANR	2608781	PtrMemberAccess	tdev -> dname		2608675	0					
ANR	2608782	Identifier	tdev		2608675	0					
ANR	2608783	Identifier	dname		2608675	1					
ANR	2608784	Identifier	dname		2608675	1					
ANR	2608785	IfStatement	if ( rcode < 0 )		2608675	13					
ANR	2608786	Condition	rcode < 0	409:8:12865:12873	2608675	0	True				
ANR	2608787	RelationalExpression	rcode < 0		2608675	0		<			
ANR	2608788	Identifier	rcode		2608675	0					
ANR	2608789	PrimaryExpression	0		2608675	1					
ANR	2608790	ReturnStatement	return rcode ;	410:8:12884:12896	2608675	1	True				
ANR	2608791	Identifier	rcode		2608675	0					
ANR	2608792	ExpressionStatement	code = get_target_info ( dev )	411:4:12902:12929	2608675	14	True				
ANR	2608793	AssignmentExpression	code = get_target_info ( dev )		2608675	0		=			
ANR	2608794	Identifier	code		2608675	0					
ANR	2608795	CallExpression	get_target_info ( dev )		2608675	1					
ANR	2608796	Callee	get_target_info		2608675	0					
ANR	2608797	Identifier	get_target_info		2608675	0					
ANR	2608798	ArgumentList	dev		2608675	1					
ANR	2608799	Argument	dev		2608675	0					
ANR	2608800	Identifier	dev		2608675	0					
ANR	2608801	ReturnStatement	return ( code < 0 ? code : rcode ) ;	412:4:12935:12967	2608675	15	True				
ANR	2608802	ConditionalExpression	code < 0 ? code : rcode		2608675	0					
ANR	2608803	Condition	code < 0		2608675	0					
ANR	2608804	RelationalExpression	code < 0		2608675	0		<			
ANR	2608805	Identifier	code		2608675	0					
ANR	2608806	PrimaryExpression	0		2608675	1					
ANR	2608807	Identifier	code		2608675	1					
ANR	2608808	Identifier	rcode		2608675	2					
ANR	2608809	ReturnType	static int		2608675	1					
ANR	2608810	Identifier	x_wrap_put_params		2608675	2					
ANR	2608811	ParameterList	"gx_device * dev , gs_param_list * plist"		2608675	3					
ANR	2608812	Parameter	gx_device * dev	388:18:12209:12223	2608675	0	True				
ANR	2608813	ParameterType	gx_device *		2608675	0					
ANR	2608814	Identifier	dev		2608675	1					
ANR	2608815	Parameter	gs_param_list * plist	388:35:12226:12246	2608675	1	True				
ANR	2608816	ParameterType	gs_param_list *		2608675	0					
ANR	2608817	Identifier	plist		2608675	1					
ANR	2608818	CFGEntryNode	ENTRY		2608675		True				
ANR	2608819	CFGExitNode	EXIT		2608675		True				
ANR	2608820	Symbol	* dev		2608675						
ANR	2608821	Symbol	"* dev_proc ( tdev , put_params )"		2608675						
ANR	2608822	Symbol	code		2608675						
ANR	2608823	Symbol	xdev		2608675						
ANR	2608824	Symbol	dev -> dname		2608675						
ANR	2608825	Symbol	tdev -> color_info		2608675						
ANR	2608826	Symbol	* dev_proc		2608675						
ANR	2608827	Symbol	xdev -> orig_color_info		2608675						
ANR	2608828	Symbol	rcode		2608675						
ANR	2608829	Symbol	& tdev		2608675						
ANR	2608830	Symbol	dev -> color_info		2608675						
ANR	2608831	Symbol	get_dev_target		2608675						
ANR	2608832	Symbol	plist		2608675						
ANR	2608833	Symbol	xdev -> color_info		2608675						
ANR	2608834	Symbol	tdev -> dname		2608675						
ANR	2608835	Symbol	* tdev		2608675						
ANR	2608836	Symbol	dev		2608675						
ANR	2608837	Symbol	* xdev		2608675						
ANR	2608838	Symbol	dev_proc		2608675						
ANR	2608839	Symbol	tdev		2608675						
ANR	2608840	Symbol	dname		2608675						
ANR	2608841	Symbol	put_params		2608675						
ANR	2608842	Symbol	get_target_info		2608675						
ANR	2608843	Function	get_dev_target	418:0:13047:13615							
ANR	2608844	FunctionDef	"get_dev_target (gx_device * * ptdev , gx_device * dev)"		2608843	0					
ANR	2608845	CompoundStatement		420:0:13110:13615	2608843	0					
ANR	2608846	IdentifierDeclStatement	gx_device * tdev = ( ( gx_device_forward * ) dev ) -> target ;	421:4:13116:13169	2608843	0	True				
ANR	2608847	IdentifierDecl	* tdev = ( ( gx_device_forward * ) dev ) -> target		2608843	0					
ANR	2608848	IdentifierDeclType	gx_device *		2608843	0					
ANR	2608849	Identifier	tdev		2608843	1					
ANR	2608850	AssignmentExpression	* tdev = ( ( gx_device_forward * ) dev ) -> target		2608843	2		=			
ANR	2608851	Identifier	tdev		2608843	0					
ANR	2608852	PtrMemberAccess	( ( gx_device_forward * ) dev ) -> target		2608843	1					
ANR	2608853	CastExpression	( gx_device_forward * ) dev		2608843	0					
ANR	2608854	CastTarget	gx_device_forward *		2608843	0					
ANR	2608855	Identifier	dev		2608843	1					
ANR	2608856	Identifier	target		2608843	1					
ANR	2608857	IfStatement	if ( tdev == 0 )		2608843	1					
ANR	2608858	Condition	tdev == 0	423:8:13180:13188	2608843	0	True				
ANR	2608859	EqualityExpression	tdev == 0		2608843	0		==			
ANR	2608860	Identifier	tdev		2608843	0					
ANR	2608861	PrimaryExpression	0		2608843	1					
ANR	2608862	CompoundStatement		6:8:133:245	2608843	1					
ANR	2608863	IdentifierDeclStatement	"int code = gs_copydevice ( & tdev , ( const gx_device * ) & gs_x11_device , dev -> memory ) ;"	425:8:13244:13356	2608843	0	True				
ANR	2608864	IdentifierDecl	"code = gs_copydevice ( & tdev , ( const gx_device * ) & gs_x11_device , dev -> memory )"		2608843	0					
ANR	2608865	IdentifierDeclType	int		2608843	0					
ANR	2608866	Identifier	code		2608843	1					
ANR	2608867	AssignmentExpression	"code = gs_copydevice ( & tdev , ( const gx_device * ) & gs_x11_device , dev -> memory )"		2608843	2		=			
ANR	2608868	Identifier	code		2608843	0					
ANR	2608869	CallExpression	"gs_copydevice ( & tdev , ( const gx_device * ) & gs_x11_device , dev -> memory )"		2608843	1					
ANR	2608870	Callee	gs_copydevice		2608843	0					
ANR	2608871	Identifier	gs_copydevice		2608843	0					
ANR	2608872	ArgumentList	& tdev		2608843	1					
ANR	2608873	Argument	& tdev		2608843	0					
ANR	2608874	UnaryOperationExpression	& tdev		2608843	0					
ANR	2608875	UnaryOperator	&		2608843	0					
ANR	2608876	Identifier	tdev		2608843	1					
ANR	2608877	Argument	( const gx_device * ) & gs_x11_device		2608843	1					
ANR	2608878	CastExpression	( const gx_device * ) & gs_x11_device		2608843	0					
ANR	2608879	CastTarget	const gx_device *		2608843	0					
ANR	2608880	UnaryOperationExpression	& gs_x11_device		2608843	1					
ANR	2608881	UnaryOperator	&		2608843	0					
ANR	2608882	Identifier	gs_x11_device		2608843	1					
ANR	2608883	Argument	dev -> memory		2608843	2					
ANR	2608884	PtrMemberAccess	dev -> memory		2608843	0					
ANR	2608885	Identifier	dev		2608843	0					
ANR	2608886	Identifier	memory		2608843	1					
ANR	2608887	IfStatement	if ( code < 0 )		2608843	1					
ANR	2608888	Condition	code < 0	428:12:13371:13378	2608843	0	True				
ANR	2608889	RelationalExpression	code < 0		2608843	0		<			
ANR	2608890	Identifier	code		2608843	0					
ANR	2608891	PrimaryExpression	0		2608843	1					
ANR	2608892	ReturnStatement	return 0 ;	429:12:13393:13401	2608843	1	True				
ANR	2608893	PrimaryExpression	0		2608843	0					
ANR	2608894	ExpressionStatement	check_device_separable ( tdev )	430:8:13411:13439	2608843	2	True				
ANR	2608895	CallExpression	check_device_separable ( tdev )		2608843	0					
ANR	2608896	Callee	check_device_separable		2608843	0					
ANR	2608897	Identifier	check_device_separable		2608843	0					
ANR	2608898	ArgumentList	tdev		2608843	1					
ANR	2608899	Argument	tdev		2608843	0					
ANR	2608900	Identifier	tdev		2608843	0					
ANR	2608901	ExpressionStatement	gx_device_fill_in_procs ( tdev )	431:8:13449:13478	2608843	3	True				
ANR	2608902	CallExpression	gx_device_fill_in_procs ( tdev )		2608843	0					
ANR	2608903	Callee	gx_device_fill_in_procs		2608843	0					
ANR	2608904	Identifier	gx_device_fill_in_procs		2608843	0					
ANR	2608905	ArgumentList	tdev		2608843	1					
ANR	2608906	Argument	tdev		2608843	0					
ANR	2608907	Identifier	tdev		2608843	0					
ANR	2608908	ExpressionStatement	"gx_device_set_target ( ( gx_device_forward * ) dev , tdev )"	432:8:13488:13540	2608843	4	True				
ANR	2608909	CallExpression	"gx_device_set_target ( ( gx_device_forward * ) dev , tdev )"		2608843	0					
ANR	2608910	Callee	gx_device_set_target		2608843	0					
ANR	2608911	Identifier	gx_device_set_target		2608843	0					
ANR	2608912	ArgumentList	( gx_device_forward * ) dev		2608843	1					
ANR	2608913	Argument	( gx_device_forward * ) dev		2608843	0					
ANR	2608914	CastExpression	( gx_device_forward * ) dev		2608843	0					
ANR	2608915	CastTarget	gx_device_forward *		2608843	0					
ANR	2608916	Identifier	dev		2608843	1					
ANR	2608917	Argument	tdev		2608843	1					
ANR	2608918	Identifier	tdev		2608843	0					
ANR	2608919	ExpressionStatement	x_clear_color_cache ( dev )	433:8:13550:13574	2608843	5	True				
ANR	2608920	CallExpression	x_clear_color_cache ( dev )		2608843	0					
ANR	2608921	Callee	x_clear_color_cache		2608843	0					
ANR	2608922	Identifier	x_clear_color_cache		2608843	0					
ANR	2608923	ArgumentList	dev		2608843	1					
ANR	2608924	Argument	dev		2608843	0					
ANR	2608925	Identifier	dev		2608843	0					
ANR	2608926	ExpressionStatement	* ptdev = tdev	435:4:13586:13599	2608843	2	True				
ANR	2608927	AssignmentExpression	* ptdev = tdev		2608843	0		=			
ANR	2608928	UnaryOperationExpression	* ptdev		2608843	0					
ANR	2608929	UnaryOperator	*		2608843	0					
ANR	2608930	Identifier	ptdev		2608843	1					
ANR	2608931	Identifier	tdev		2608843	1					
ANR	2608932	ReturnStatement	return 0 ;	436:4:13605:13613	2608843	3	True				
ANR	2608933	PrimaryExpression	0		2608843	0					
ANR	2608934	ReturnType	static int		2608843	1					
ANR	2608935	Identifier	get_dev_target		2608843	2					
ANR	2608936	ParameterList	"gx_device * * ptdev , gx_device * dev"		2608843	3					
ANR	2608937	Parameter	gx_device * * ptdev	419:15:13073:13090	2608843	0	True				
ANR	2608938	ParameterType	gx_device * *		2608843	0					
ANR	2608939	Identifier	ptdev		2608843	1					
ANR	2608940	Parameter	gx_device * dev	419:35:13093:13107	2608843	1	True				
ANR	2608941	ParameterType	gx_device *		2608843	0					
ANR	2608942	Identifier	dev		2608843	1					
ANR	2608943	CFGEntryNode	ENTRY		2608843		True				
ANR	2608944	CFGExitNode	EXIT		2608843		True				
ANR	2608945	Symbol	* dev		2608843						
ANR	2608946	Symbol	ptdev		2608843						
ANR	2608947	Symbol	dev -> memory		2608843						
ANR	2608948	Symbol	code		2608843						
ANR	2608949	Symbol	dev		2608843						
ANR	2608950	Symbol	tdev		2608843						
ANR	2608951	Symbol	( ( gx_device_forward * ) dev ) -> target		2608843						
ANR	2608952	Symbol	gs_copydevice		2608843						
ANR	2608953	Symbol	& tdev		2608843						
ANR	2608954	Symbol	* ptdev		2608843						
ANR	2608955	Symbol	& gs_x11_device		2608843						
ANR	2608956	Function	get_target_info	440:0:13662:14456							
ANR	2608957	FunctionDef	get_target_info (gx_device * dev)		2608956	0					
ANR	2608958	CompoundStatement		442:0:13706:14456	2608956	0					
ANR	2608959	IdentifierDeclStatement	gx_device * tdev ;	443:4:13712:13727	2608956	0	True				
ANR	2608960	IdentifierDecl	* tdev		2608956	0					
ANR	2608961	IdentifierDeclType	gx_device *		2608956	0					
ANR	2608962	Identifier	tdev		2608956	1					
ANR	2608963	IdentifierDeclStatement	int code ;	444:4:13733:13741	2608956	1	True				
ANR	2608964	IdentifierDecl	code		2608956	0					
ANR	2608965	IdentifierDeclType	int		2608956	0					
ANR	2608966	Identifier	code		2608956	1					
ANR	2608967	IfStatement	"if ( ( code = get_dev_target ( & tdev , dev ) ) < 0 )"		2608956	2					
ANR	2608968	Condition	"( code = get_dev_target ( & tdev , dev ) ) < 0"	446:8:13752:13790	2608956	0	True				
ANR	2608969	RelationalExpression	"( code = get_dev_target ( & tdev , dev ) ) < 0"		2608956	0		<			
ANR	2608970	AssignmentExpression	"code = get_dev_target ( & tdev , dev )"		2608956	0		=			
ANR	2608971	Identifier	code		2608956	0					
ANR	2608972	CallExpression	"get_dev_target ( & tdev , dev )"		2608956	1					
ANR	2608973	Callee	get_dev_target		2608956	0					
ANR	2608974	Identifier	get_dev_target		2608956	0					
ANR	2608975	ArgumentList	& tdev		2608956	1					
ANR	2608976	Argument	& tdev		2608956	0					
ANR	2608977	UnaryOperationExpression	& tdev		2608956	0					
ANR	2608978	UnaryOperator	&		2608956	0					
ANR	2608979	Identifier	tdev		2608956	1					
ANR	2608980	Argument	dev		2608956	1					
ANR	2608981	Identifier	dev		2608956	0					
ANR	2608982	PrimaryExpression	0		2608956	1					
ANR	2608983	ReturnStatement	return code ;	447:8:13801:13812	2608956	1	True				
ANR	2608984	Identifier	code		2608956	0					
ANR	2608985	Statement	define	449:1:13816:13821	2608956	3	True				
ANR	2608986	Statement	copy	449:8:13823:13826	2608956	4	True				
ANR	2608987	ExpressionStatement	( m ) dev -> m = tdev -> m	449:12:13827:13847	2608956	5	True				
ANR	2608988	AssignmentExpression	( m ) dev -> m = tdev -> m		2608956	0		=			
ANR	2608989	CastExpression	( m ) dev -> m		2608956	0					
ANR	2608990	CastTarget	m		2608956	0					
ANR	2608991	PtrMemberAccess	dev -> m		2608956	1					
ANR	2608992	Identifier	dev		2608956	0					
ANR	2608993	Identifier	m		2608956	1					
ANR	2608994	PtrMemberAccess	tdev -> m		2608956	1					
ANR	2608995	Identifier	tdev		2608956	0					
ANR	2608996	Identifier	m		2608956	1					
ANR	2608997	Statement	define	450:1:13850:13855	2608956	6	True				
ANR	2608998	Statement	copy2	450:8:13857:13861	2608956	7	True				
ANR	2608999	ExpressionStatement	( m ) copy ( m [ 0 ] )	450:13:13862:13876	2608956	8	True				
ANR	2609000	CastExpression	( m ) copy ( m [ 0 ] )		2608956	0					
ANR	2609001	CastTarget	m		2608956	0					
ANR	2609002	CallExpression	copy ( m [ 0 ] )		2608956	1					
ANR	2609003	Callee	copy		2608956	0					
ANR	2609004	Identifier	copy		2608956	0					
ANR	2609005	ArgumentList	m [ 0 ]		2608956	1					
ANR	2609006	Argument	m [ 0 ]		2608956	0					
ANR	2609007	ArrayIndexing	m [ 0 ]		2608956	0					
ANR	2609008	Identifier	m		2608956	0					
ANR	2609009	PrimaryExpression	0		2608956	1					
ANR	2609010	Statement	copy	450:29:13878:13881	2608956	9	True				
ANR	2609011	Statement	(	450:33:13882:13882	2608956	10	True				
ANR	2609012	Statement	m	450:34:13883:13883	2608956	11	True				
ANR	2609013	Statement	[	450:35:13884:13884	2608956	12	True				
ANR	2609014	Statement	1	450:36:13885:13885	2608956	13	True				
ANR	2609015	Statement	]	450:37:13886:13886	2608956	14	True				
ANR	2609016	Statement	)	450:38:13887:13887	2608956	15	True				
ANR	2609017	Statement	define	451:1:13890:13895	2608956	16	True				
ANR	2609018	Statement	copy4	451:8:13897:13901	2608956	17	True				
ANR	2609019	ExpressionStatement	( m ) copy2 ( m )	451:13:13902:13914	2608956	18	True				
ANR	2609020	CastExpression	( m ) copy2 ( m )		2608956	0					
ANR	2609021	CastTarget	m		2608956	0					
ANR	2609022	CallExpression	copy2 ( m )		2608956	1					
ANR	2609023	Callee	copy2		2608956	0					
ANR	2609024	Identifier	copy2		2608956	0					
ANR	2609025	ArgumentList	m		2608956	1					
ANR	2609026	Argument	m		2608956	0					
ANR	2609027	Identifier	m		2608956	0					
ANR	2609028	ExpressionStatement	copy ( m [ 2 ] )	451:27:13916:13926	2608956	19	True				
ANR	2609029	CallExpression	copy ( m [ 2 ] )		2608956	0					
ANR	2609030	Callee	copy		2608956	0					
ANR	2609031	Identifier	copy		2608956	0					
ANR	2609032	ArgumentList	m [ 2 ]		2608956	1					
ANR	2609033	Argument	m [ 2 ]		2608956	0					
ANR	2609034	ArrayIndexing	m [ 2 ]		2608956	0					
ANR	2609035	Identifier	m		2608956	0					
ANR	2609036	PrimaryExpression	2		2608956	1					
ANR	2609037	Statement	copy	451:39:13928:13931	2608956	20	True				
ANR	2609038	Statement	(	451:43:13932:13932	2608956	21	True				
ANR	2609039	Statement	m	451:44:13933:13933	2608956	22	True				
ANR	2609040	Statement	[	451:45:13934:13934	2608956	23	True				
ANR	2609041	Statement	3	451:46:13935:13935	2608956	24	True				
ANR	2609042	Statement	]	451:47:13936:13936	2608956	25	True				
ANR	2609043	Statement	)	451:48:13937:13937	2608956	26	True				
ANR	2609044	ExpressionStatement	copy ( width )	453:4:13944:13955	2608956	27	True				
ANR	2609045	CallExpression	copy ( width )		2608956	0					
ANR	2609046	Callee	copy		2608956	0					
ANR	2609047	Identifier	copy		2608956	0					
ANR	2609048	ArgumentList	width		2608956	1					
ANR	2609049	Argument	width		2608956	0					
ANR	2609050	Identifier	width		2608956	0					
ANR	2609051	ExpressionStatement	copy ( height )	454:4:13961:13973	2608956	28	True				
ANR	2609052	CallExpression	copy ( height )		2608956	0					
ANR	2609053	Callee	copy		2608956	0					
ANR	2609054	Identifier	copy		2608956	0					
ANR	2609055	ArgumentList	height		2608956	1					
ANR	2609056	Argument	height		2608956	0					
ANR	2609057	Identifier	height		2608956	0					
ANR	2609058	ExpressionStatement	copy2 ( MediaSize )	455:4:13979:13995	2608956	29	True				
ANR	2609059	CallExpression	copy2 ( MediaSize )		2608956	0					
ANR	2609060	Callee	copy2		2608956	0					
ANR	2609061	Identifier	copy2		2608956	0					
ANR	2609062	ArgumentList	MediaSize		2608956	1					
ANR	2609063	Argument	MediaSize		2608956	0					
ANR	2609064	Identifier	MediaSize		2608956	0					
ANR	2609065	ExpressionStatement	copy4 ( ImagingBBox )	456:4:14001:14019	2608956	30	True				
ANR	2609066	CallExpression	copy4 ( ImagingBBox )		2608956	0					
ANR	2609067	Callee	copy4		2608956	0					
ANR	2609068	Identifier	copy4		2608956	0					
ANR	2609069	ArgumentList	ImagingBBox		2608956	1					
ANR	2609070	Argument	ImagingBBox		2608956	0					
ANR	2609071	Identifier	ImagingBBox		2608956	0					
ANR	2609072	ExpressionStatement	copy ( ImagingBBox_set )	457:4:14025:14046	2608956	31	True				
ANR	2609073	CallExpression	copy ( ImagingBBox_set )		2608956	0					
ANR	2609074	Callee	copy		2608956	0					
ANR	2609075	Identifier	copy		2608956	0					
ANR	2609076	ArgumentList	ImagingBBox_set		2608956	1					
ANR	2609077	Argument	ImagingBBox_set		2608956	0					
ANR	2609078	Identifier	ImagingBBox_set		2608956	0					
ANR	2609079	ExpressionStatement	copy2 ( HWResolution )	458:4:14052:14071	2608956	32	True				
ANR	2609080	CallExpression	copy2 ( HWResolution )		2608956	0					
ANR	2609081	Callee	copy2		2608956	0					
ANR	2609082	Identifier	copy2		2608956	0					
ANR	2609083	ArgumentList	HWResolution		2608956	1					
ANR	2609084	Argument	HWResolution		2608956	0					
ANR	2609085	Identifier	HWResolution		2608956	0					
ANR	2609086	ExpressionStatement	copy2 ( Margins )	459:4:14077:14091	2608956	33	True				
ANR	2609087	CallExpression	copy2 ( Margins )		2608956	0					
ANR	2609088	Callee	copy2		2608956	0					
ANR	2609089	Identifier	copy2		2608956	0					
ANR	2609090	ArgumentList	Margins		2608956	1					
ANR	2609091	Argument	Margins		2608956	0					
ANR	2609092	Identifier	Margins		2608956	0					
ANR	2609093	ExpressionStatement	copy4 ( HWMargins )	460:4:14097:14113	2608956	34	True				
ANR	2609094	CallExpression	copy4 ( HWMargins )		2608956	0					
ANR	2609095	Callee	copy4		2608956	0					
ANR	2609096	Identifier	copy4		2608956	0					
ANR	2609097	ArgumentList	HWMargins		2608956	1					
ANR	2609098	Argument	HWMargins		2608956	0					
ANR	2609099	Identifier	HWMargins		2608956	0					
ANR	2609100	IfStatement	if ( dev -> color_info . num_components == 3 )		2608956	35					
ANR	2609101	Condition	dev -> color_info . num_components == 3	461:8:14123:14157	2608956	0	True				
ANR	2609102	EqualityExpression	dev -> color_info . num_components == 3		2608956	0		==			
ANR	2609103	MemberAccess	dev -> color_info . num_components		2608956	0					
ANR	2609104	PtrMemberAccess	dev -> color_info		2608956	0					
ANR	2609105	Identifier	dev		2608956	0					
ANR	2609106	Identifier	color_info		2608956	1					
ANR	2609107	Identifier	num_components		2608956	1					
ANR	2609108	PrimaryExpression	3		2608956	1					
ANR	2609109	CompoundStatement		22:8:520:548	2608956	1					
ANR	2609110	IdentifierDeclStatement	gx_device_anti_alias_info aa ;	463:8:14227:14255	2608956	0	True				
ANR	2609111	IdentifierDecl	aa		2608956	0					
ANR	2609112	IdentifierDeclType	gx_device_anti_alias_info		2608956	0					
ANR	2609113	Identifier	aa		2608956	1					
ANR	2609114	ExpressionStatement	aa = dev -> color_info . anti_alias	465:8:14266:14297	2608956	1	True				
ANR	2609115	AssignmentExpression	aa = dev -> color_info . anti_alias		2608956	0		=			
ANR	2609116	Identifier	aa		2608956	0					
ANR	2609117	MemberAccess	dev -> color_info . anti_alias		2608956	1					
ANR	2609118	PtrMemberAccess	dev -> color_info		2608956	0					
ANR	2609119	Identifier	dev		2608956	0					
ANR	2609120	Identifier	color_info		2608956	1					
ANR	2609121	Identifier	anti_alias		2608956	1					
ANR	2609122	ExpressionStatement	copy ( color_info )	466:8:14307:14323	2608956	2	True				
ANR	2609123	CallExpression	copy ( color_info )		2608956	0					
ANR	2609124	Callee	copy		2608956	0					
ANR	2609125	Identifier	copy		2608956	0					
ANR	2609126	ArgumentList	color_info		2608956	1					
ANR	2609127	Argument	color_info		2608956	0					
ANR	2609128	Identifier	color_info		2608956	0					
ANR	2609129	ExpressionStatement	dev -> color_info . anti_alias = aa	467:8:14333:14364	2608956	3	True				
ANR	2609130	AssignmentExpression	dev -> color_info . anti_alias = aa		2608956	0		=			
ANR	2609131	MemberAccess	dev -> color_info . anti_alias		2608956	0					
ANR	2609132	PtrMemberAccess	dev -> color_info		2608956	0					
ANR	2609133	Identifier	dev		2608956	0					
ANR	2609134	Identifier	color_info		2608956	1					
ANR	2609135	Identifier	anti_alias		2608956	1					
ANR	2609136	Identifier	aa		2608956	1					
ANR	2609137	IdentifierDeclStatement	undef copy4 undef copy2 undef copy x_clear_color_cache ( dev ) ;	470:1:14374:14440	2608956	36	True				
ANR	2609138	IdentifierDecl	x_clear_color_cache ( dev )		2608956	0					
ANR	2609139	IdentifierDeclType	undef copy4 undef copy2 undef copy		2608956	0					
ANR	2609140	Identifier	x_clear_color_cache		2608956	1					
ANR	2609141	Identifier	dev		2608956	2					
ANR	2609142	ReturnStatement	return 0 ;	475:4:14446:14454	2608956	37	True				
ANR	2609143	PrimaryExpression	0		2608956	0					
ANR	2609144	ReturnType	static int		2608956	1					
ANR	2609145	Identifier	get_target_info		2608956	2					
ANR	2609146	ParameterList	gx_device * dev		2608956	3					
ANR	2609147	Parameter	gx_device * dev	441:16:13689:13703	2608956	0	True				
ANR	2609148	ParameterType	gx_device *		2608956	0					
ANR	2609149	Identifier	dev		2608956	1					
ANR	2609150	CFGEntryNode	ENTRY		2608956		True				
ANR	2609151	CFGExitNode	EXIT		2608956		True				
ANR	2609152	Symbol	* dev		2608956						
ANR	2609153	Symbol	code		2608956						
ANR	2609154	Symbol	x_clear_color_cache		2608956						
ANR	2609155	Symbol	& tdev		2608956						
ANR	2609156	Symbol	dev -> color_info		2608956						
ANR	2609157	Symbol	ImagingBBox		2608956						
ANR	2609158	Symbol	color_info		2608956						
ANR	2609159	Symbol	dev		2608956						
ANR	2609160	Symbol	dev -> m		2608956						
ANR	2609161	Symbol	tdev		2608956						
ANR	2609162	Symbol	Margins		2608956						
ANR	2609163	Symbol	ImagingBBox_set		2608956						
ANR	2609164	Symbol	tdev -> m		2608956						
ANR	2609165	Symbol	height		2608956						
ANR	2609166	Symbol	aa		2608956						
ANR	2609167	Symbol	dev -> color_info . anti_alias		2608956						
ANR	2609168	Symbol	MediaSize		2608956						
ANR	2609169	Symbol	dev -> color_info . num_components		2608956						
ANR	2609170	Symbol	m		2608956						
ANR	2609171	Symbol	get_dev_target		2608956						
ANR	2609172	Symbol	* tdev		2608956						
ANR	2609173	Symbol	HWMargins		2608956						
ANR	2609174	Symbol	* m		2608956						
ANR	2609175	Symbol	width		2608956						
ANR	2609176	Symbol	HWResolution		2608956						
ANR	2609177	Function	x_alt_map_color	479:0:14534:15344							
ANR	2609178	FunctionDef	"x_alt_map_color (gx_device * dev , gx_color_index color)"		2609177	0					
ANR	2609179	CompoundStatement		481:0:14611:15344	2609177	0					
ANR	2609180	IdentifierDeclStatement	gx_device_X_wrapper * xdev = ( gx_device_X_wrapper * ) dev ;	482:4:14617:14672	2609177	0	True				
ANR	2609181	IdentifierDecl	* xdev = ( gx_device_X_wrapper * ) dev		2609177	0					
ANR	2609182	IdentifierDeclType	gx_device_X_wrapper *		2609177	0					
ANR	2609183	Identifier	xdev		2609177	1					
ANR	2609184	AssignmentExpression	* xdev = ( gx_device_X_wrapper * ) dev		2609177	2		=			
ANR	2609185	Identifier	xdev		2609177	0					
ANR	2609186	CastExpression	( gx_device_X_wrapper * ) dev		2609177	1					
ANR	2609187	CastTarget	gx_device_X_wrapper *		2609177	0					
ANR	2609188	Identifier	dev		2609177	1					
ANR	2609189	IdentifierDeclStatement	gx_device * tdev ;	483:4:14678:14693	2609177	1	True				
ANR	2609190	IdentifierDecl	* tdev		2609177	0					
ANR	2609191	IdentifierDeclType	gx_device *		2609177	0					
ANR	2609192	Identifier	tdev		2609177	1					
ANR	2609193	IdentifierDeclStatement	gx_color_value rgb [ 3 ] ;	484:4:14699:14720	2609177	2	True				
ANR	2609194	IdentifierDecl	rgb [ 3 ]		2609177	0					
ANR	2609195	IdentifierDeclType	gx_color_value [ 3 ]		2609177	0					
ANR	2609196	Identifier	rgb		2609177	1					
ANR	2609197	PrimaryExpression	3		2609177	2					
ANR	2609198	IdentifierDeclStatement	gx_color_index cindex ;	485:4:14726:14747	2609177	3	True				
ANR	2609199	IdentifierDecl	cindex		2609177	0					
ANR	2609200	IdentifierDeclType	gx_color_index		2609177	0					
ANR	2609201	Identifier	cindex		2609177	1					
ANR	2609202	IdentifierDeclStatement	int result ;	486:4:14753:14763	2609177	4	True				
ANR	2609203	IdentifierDecl	result		2609177	0					
ANR	2609204	IdentifierDeclType	int		2609177	0					
ANR	2609205	Identifier	result		2609177	1					
ANR	2609206	IdentifierDeclStatement	int code ;	487:4:14769:14777	2609177	5	True				
ANR	2609207	IdentifierDecl	code		2609177	0					
ANR	2609208	IdentifierDeclType	int		2609177	0					
ANR	2609209	Identifier	code		2609177	1					
ANR	2609210	IfStatement	if ( color == gx_no_color_index )		2609177	6					
ANR	2609211	Condition	color == gx_no_color_index	489:8:14788:14813	2609177	0	True				
ANR	2609212	EqualityExpression	color == gx_no_color_index		2609177	0		==			
ANR	2609213	Identifier	color		2609177	0					
ANR	2609214	Identifier	gx_no_color_index		2609177	1					
ANR	2609215	ReturnStatement	return color ;	490:8:14824:14836	2609177	1	True				
ANR	2609216	Identifier	color		2609177	0					
ANR	2609217	IfStatement	if ( color < 16 )		2609177	7					
ANR	2609218	Condition	color < 16	491:8:14846:14855	2609177	0	True				
ANR	2609219	RelationalExpression	color < 16		2609177	0		<			
ANR	2609220	Identifier	color		2609177	0					
ANR	2609221	PrimaryExpression	16		2609177	1					
ANR	2609222	CompoundStatement		11:20:246:246	2609177	1					
ANR	2609223	ExpressionStatement	cindex = ( ( gx_device_X_wrapper * ) dev ) -> color_cache [ color ]	492:8:14868:14926	2609177	0	True				
ANR	2609224	AssignmentExpression	cindex = ( ( gx_device_X_wrapper * ) dev ) -> color_cache [ color ]		2609177	0		=			
ANR	2609225	Identifier	cindex		2609177	0					
ANR	2609226	ArrayIndexing	( ( gx_device_X_wrapper * ) dev ) -> color_cache [ color ]		2609177	1					
ANR	2609227	PtrMemberAccess	( ( gx_device_X_wrapper * ) dev ) -> color_cache		2609177	0					
ANR	2609228	CastExpression	( gx_device_X_wrapper * ) dev		2609177	0					
ANR	2609229	CastTarget	gx_device_X_wrapper *		2609177	0					
ANR	2609230	Identifier	dev		2609177	1					
ANR	2609231	Identifier	color_cache		2609177	1					
ANR	2609232	Identifier	color		2609177	1					
ANR	2609233	IfStatement	if ( cindex != gx_no_color_index )		2609177	1					
ANR	2609234	Condition	cindex != gx_no_color_index	493:12:14940:14966	2609177	0	True				
ANR	2609235	EqualityExpression	cindex != gx_no_color_index		2609177	0		!=			
ANR	2609236	Identifier	cindex		2609177	0					
ANR	2609237	Identifier	gx_no_color_index		2609177	1					
ANR	2609238	ReturnStatement	return cindex ;	494:12:14981:14994	2609177	1	True				
ANR	2609239	Identifier	cindex		2609177	0					
ANR	2609240	IfStatement	"if ( ( code = get_dev_target ( & tdev , dev ) ) < 0 )"		2609177	8					
ANR	2609241	Condition	"( code = get_dev_target ( & tdev , dev ) ) < 0"	496:8:15010:15048	2609177	0	True				
ANR	2609242	RelationalExpression	"( code = get_dev_target ( & tdev , dev ) ) < 0"		2609177	0		<			
ANR	2609243	AssignmentExpression	"code = get_dev_target ( & tdev , dev )"		2609177	0		=			
ANR	2609244	Identifier	code		2609177	0					
ANR	2609245	CallExpression	"get_dev_target ( & tdev , dev )"		2609177	1					
ANR	2609246	Callee	get_dev_target		2609177	0					
ANR	2609247	Identifier	get_dev_target		2609177	0					
ANR	2609248	ArgumentList	& tdev		2609177	1					
ANR	2609249	Argument	& tdev		2609177	0					
ANR	2609250	UnaryOperationExpression	& tdev		2609177	0					
ANR	2609251	UnaryOperator	&		2609177	0					
ANR	2609252	Identifier	tdev		2609177	1					
ANR	2609253	Argument	dev		2609177	1					
ANR	2609254	Identifier	dev		2609177	0					
ANR	2609255	PrimaryExpression	0		2609177	1					
ANR	2609256	ReturnStatement	return code ;	497:8:15059:15070	2609177	1	True				
ANR	2609257	Identifier	code		2609177	0					
ANR	2609258	ExpressionStatement	"result = xdev -> alt_map_color ( dev , color , rgb )"	498:4:15076:15121	2609177	9	True				
ANR	2609259	AssignmentExpression	"result = xdev -> alt_map_color ( dev , color , rgb )"		2609177	0		=			
ANR	2609260	Identifier	result		2609177	0					
ANR	2609261	CallExpression	"xdev -> alt_map_color ( dev , color , rgb )"		2609177	1					
ANR	2609262	Callee	xdev -> alt_map_color		2609177	0					
ANR	2609263	PtrMemberAccess	xdev -> alt_map_color		2609177	0					
ANR	2609264	Identifier	xdev		2609177	0					
ANR	2609265	Identifier	alt_map_color		2609177	1					
ANR	2609266	ArgumentList	dev		2609177	1					
ANR	2609267	Argument	dev		2609177	0					
ANR	2609268	Identifier	dev		2609177	0					
ANR	2609269	Argument	color		2609177	1					
ANR	2609270	Identifier	color		2609177	0					
ANR	2609271	Argument	rgb		2609177	2					
ANR	2609272	Identifier	rgb		2609177	0					
ANR	2609273	IfStatement	if ( result >= 0 )		2609177	10					
ANR	2609274	Condition	result >= 0	499:8:15131:15141	2609177	0	True				
ANR	2609275	RelationalExpression	result >= 0		2609177	0		>=			
ANR	2609276	Identifier	result		2609177	0					
ANR	2609277	PrimaryExpression	0		2609177	1					
ANR	2609278	ExpressionStatement	cindex = result	500:8:15152:15167	2609177	1	True				
ANR	2609279	AssignmentExpression	cindex = result		2609177	0		=			
ANR	2609280	Identifier	cindex		2609177	0					
ANR	2609281	Identifier	result		2609177	1					
ANR	2609282	ElseStatement	else		2609177	0					
ANR	2609283	ExpressionStatement	"cindex = dev_proc ( tdev , map_rgb_color ) ( tdev , rgb )"	502:8:15186:15235	2609177	0	True				
ANR	2609284	AssignmentExpression	"cindex = dev_proc ( tdev , map_rgb_color ) ( tdev , rgb )"		2609177	0		=			
ANR	2609285	Identifier	cindex		2609177	0					
ANR	2609286	CallExpression	"dev_proc ( tdev , map_rgb_color ) ( tdev , rgb )"		2609177	1					
ANR	2609287	Callee	"dev_proc ( tdev , map_rgb_color )"		2609177	0					
ANR	2609288	CallExpression	"dev_proc ( tdev , map_rgb_color )"		2609177	0					
ANR	2609289	Callee	dev_proc		2609177	0					
ANR	2609290	Identifier	dev_proc		2609177	0					
ANR	2609291	ArgumentList	tdev		2609177	1					
ANR	2609292	Argument	tdev		2609177	0					
ANR	2609293	Identifier	tdev		2609177	0					
ANR	2609294	Argument	map_rgb_color		2609177	1					
ANR	2609295	Identifier	map_rgb_color		2609177	0					
ANR	2609296	ArgumentList	tdev		2609177	1					
ANR	2609297	Argument	tdev		2609177	0					
ANR	2609298	Identifier	tdev		2609177	0					
ANR	2609299	Argument	rgb		2609177	1					
ANR	2609300	Identifier	rgb		2609177	0					
ANR	2609301	IfStatement	if ( color < 16 )		2609177	11					
ANR	2609302	Condition	color < 16	503:8:15245:15254	2609177	0	True				
ANR	2609303	RelationalExpression	color < 16		2609177	0		<			
ANR	2609304	Identifier	color		2609177	0					
ANR	2609305	PrimaryExpression	16		2609177	1					
ANR	2609306	ExpressionStatement	( ( gx_device_X_wrapper * ) dev ) -> color_cache [ color ] = cindex	504:8:15265:15323	2609177	1	True				
ANR	2609307	AssignmentExpression	( ( gx_device_X_wrapper * ) dev ) -> color_cache [ color ] = cindex		2609177	0		=			
ANR	2609308	ArrayIndexing	( ( gx_device_X_wrapper * ) dev ) -> color_cache [ color ]		2609177	0					
ANR	2609309	PtrMemberAccess	( ( gx_device_X_wrapper * ) dev ) -> color_cache		2609177	0					
ANR	2609310	CastExpression	( gx_device_X_wrapper * ) dev		2609177	0					
ANR	2609311	CastTarget	gx_device_X_wrapper *		2609177	0					
ANR	2609312	Identifier	dev		2609177	1					
ANR	2609313	Identifier	color_cache		2609177	1					
ANR	2609314	Identifier	color		2609177	1					
ANR	2609315	Identifier	cindex		2609177	1					
ANR	2609316	ReturnStatement	return cindex ;	505:4:15329:15342	2609177	12	True				
ANR	2609317	Identifier	cindex		2609177	0					
ANR	2609318	ReturnType	static gx_color_index		2609177	1					
ANR	2609319	Identifier	x_alt_map_color		2609177	2					
ANR	2609320	ParameterList	"gx_device * dev , gx_color_index color"		2609177	3					
ANR	2609321	Parameter	gx_device * dev	480:16:14572:14586	2609177	0	True				
ANR	2609322	ParameterType	gx_device *		2609177	0					
ANR	2609323	Identifier	dev		2609177	1					
ANR	2609324	Parameter	gx_color_index color	480:33:14589:14608	2609177	1	True				
ANR	2609325	ParameterType	gx_color_index		2609177	0					
ANR	2609326	Identifier	color		2609177	1					
ANR	2609327	CFGEntryNode	ENTRY		2609177		True				
ANR	2609328	CFGExitNode	EXIT		2609177		True				
ANR	2609329	Symbol	* dev		2609177						
ANR	2609330	Symbol	code		2609177						
ANR	2609331	Symbol	color		2609177						
ANR	2609332	Symbol	xdev		2609177						
ANR	2609333	Symbol	cindex		2609177						
ANR	2609334	Symbol	* * dev		2609177						
ANR	2609335	Symbol	* color		2609177						
ANR	2609336	Symbol	& tdev		2609177						
ANR	2609337	Symbol	* ( ( gx_device_X_wrapper * ) dev ) -> color_cache		2609177						
ANR	2609338	Symbol	rgb		2609177						
ANR	2609339	Symbol	( ( gx_device_X_wrapper * ) dev ) -> color_cache		2609177						
ANR	2609340	Symbol	map_rgb_color		2609177						
ANR	2609341	Symbol	result		2609177						
ANR	2609342	Symbol	get_dev_target		2609177						
ANR	2609343	Symbol	gx_no_color_index		2609177						
ANR	2609344	Symbol	dev		2609177						
ANR	2609345	Symbol	xdev -> alt_map_color		2609177						
ANR	2609346	Symbol	* xdev		2609177						
ANR	2609347	Symbol	dev_proc		2609177						
ANR	2609348	Symbol	tdev		2609177						
ANR	2609349	DeclStmt									
ANR	2609350	Decl							const gx_device_procs	const gx_device_procs	x_cmyk_procs
ANR	2609351	DeclStmt									
ANR	2609352	Decl							const gx_device_X_wrapper	const gx_device_X_wrapper	gs_x11cmyk_device
ANR	2609353	DeclStmt									
ANR	2609354	Decl							const gx_device_X_wrapper	const gx_device_X_wrapper	gs_x11cmyk2_device
ANR	2609355	DeclStmt									
ANR	2609356	Decl							const gx_device_X_wrapper	const gx_device_X_wrapper	gs_x11cmyk4_device
ANR	2609357	DeclStmt									
ANR	2609358	Decl							const gx_device_X_wrapper	const gx_device_X_wrapper	gs_x11cmyk8_device
ANR	2609359	Function	x_cmyk_alt_map_color	578:0:17856:18448							
ANR	2609360	FunctionDef	"x_cmyk_alt_map_color (gx_device * dev , gx_color_index color , gx_color_value rgb [ 3 ])"		2609359	0					
ANR	2609361	CompoundStatement		581:0:17971:18448	2609359	0					
ANR	2609362	IdentifierDeclStatement	int shift = dev -> color_info . depth >> 2 ;	582:4:17977:18015	2609359	0	True				
ANR	2609363	IdentifierDecl	shift = dev -> color_info . depth >> 2		2609359	0					
ANR	2609364	IdentifierDeclType	int		2609359	0					
ANR	2609365	Identifier	shift		2609359	1					
ANR	2609366	AssignmentExpression	shift = dev -> color_info . depth >> 2		2609359	2		=			
ANR	2609367	Identifier	shift		2609359	0					
ANR	2609368	ShiftExpression	dev -> color_info . depth >> 2		2609359	1		>>			
ANR	2609369	MemberAccess	dev -> color_info . depth		2609359	0					
ANR	2609370	PtrMemberAccess	dev -> color_info		2609359	0					
ANR	2609371	Identifier	dev		2609359	0					
ANR	2609372	Identifier	color_info		2609359	1					
ANR	2609373	Identifier	depth		2609359	1					
ANR	2609374	PrimaryExpression	2		2609359	1					
ANR	2609375	IdentifierDeclStatement	int mask = ( 1 << shift ) - 1 ;	583:4:18021:18048	2609359	1	True				
ANR	2609376	IdentifierDecl	mask = ( 1 << shift ) - 1		2609359	0					
ANR	2609377	IdentifierDeclType	int		2609359	0					
ANR	2609378	Identifier	mask		2609359	1					
ANR	2609379	AssignmentExpression	mask = ( 1 << shift ) - 1		2609359	2		=			
ANR	2609380	Identifier	mask		2609359	0					
ANR	2609381	AdditiveExpression	( 1 << shift ) - 1		2609359	1		-			
ANR	2609382	ShiftExpression	1 << shift		2609359	0		<<			
ANR	2609383	PrimaryExpression	1		2609359	0					
ANR	2609384	Identifier	shift		2609359	1					
ANR	2609385	PrimaryExpression	1		2609359	1					
ANR	2609386	IdentifierDeclStatement	gx_color_value scale = gx_max_color_value / mask ;	585:4:18108:18156	2609359	2	True				
ANR	2609387	IdentifierDecl	scale = gx_max_color_value / mask		2609359	0					
ANR	2609388	IdentifierDeclType	gx_color_value		2609359	0					
ANR	2609389	Identifier	scale		2609359	1					
ANR	2609390	AssignmentExpression	scale = gx_max_color_value / mask		2609359	2		=			
ANR	2609391	Identifier	scale		2609359	0					
ANR	2609392	MultiplicativeExpression	gx_max_color_value / mask		2609359	1		/			
ANR	2609393	Identifier	gx_max_color_value		2609359	0					
ANR	2609394	Identifier	mask		2609359	1					
ANR	2609395	IdentifierDeclStatement	int cw = ~color & mask ;	586:4:18162:18184	2609359	3	True				
ANR	2609396	IdentifierDecl	cw = ~color & mask		2609359	0					
ANR	2609397	IdentifierDeclType	int		2609359	0					
ANR	2609398	Identifier	cw		2609359	1					
ANR	2609399	AssignmentExpression	cw = ~color & mask		2609359	2		=			
ANR	2609400	Identifier	cw		2609359	0					
ANR	2609401	BitAndExpression	~color & mask		2609359	1		&			
ANR	2609402	Identifier	~color		2609359	0					
ANR	2609403	Identifier	mask		2609359	1					
ANR	2609404	IdentifierDeclStatement	int cb = cw - ( ( color >> shift ) & mask ) ;	587:4:18190:18229	2609359	4	True				
ANR	2609405	IdentifierDecl	cb = cw - ( ( color >> shift ) & mask )		2609359	0					
ANR	2609406	IdentifierDeclType	int		2609359	0					
ANR	2609407	Identifier	cb		2609359	1					
ANR	2609408	AssignmentExpression	cb = cw - ( ( color >> shift ) & mask )		2609359	2		=			
ANR	2609409	Identifier	cb		2609359	0					
ANR	2609410	AdditiveExpression	cw - ( ( color >> shift ) & mask )		2609359	1		-			
ANR	2609411	Identifier	cw		2609359	0					
ANR	2609412	BitAndExpression	( color >> shift ) & mask		2609359	1		&			
ANR	2609413	ShiftExpression	color >> shift		2609359	0		>>			
ANR	2609414	Identifier	color		2609359	0					
ANR	2609415	Identifier	shift		2609359	1					
ANR	2609416	Identifier	mask		2609359	1					
ANR	2609417	IdentifierDeclStatement	int cg = cw - ( ( color >> ( shift * 2 ) ) & mask ) ;	588:4:18235:18280	2609359	5	True				
ANR	2609418	IdentifierDecl	cg = cw - ( ( color >> ( shift * 2 ) ) & mask )		2609359	0					
ANR	2609419	IdentifierDeclType	int		2609359	0					
ANR	2609420	Identifier	cg		2609359	1					
ANR	2609421	AssignmentExpression	cg = cw - ( ( color >> ( shift * 2 ) ) & mask )		2609359	2		=			
ANR	2609422	Identifier	cg		2609359	0					
ANR	2609423	AdditiveExpression	cw - ( ( color >> ( shift * 2 ) ) & mask )		2609359	1		-			
ANR	2609424	Identifier	cw		2609359	0					
ANR	2609425	BitAndExpression	( color >> ( shift * 2 ) ) & mask		2609359	1		&			
ANR	2609426	ShiftExpression	color >> ( shift * 2 )		2609359	0		>>			
ANR	2609427	Identifier	color		2609359	0					
ANR	2609428	MultiplicativeExpression	shift * 2		2609359	1		*			
ANR	2609429	Identifier	shift		2609359	0					
ANR	2609430	PrimaryExpression	2		2609359	1					
ANR	2609431	Identifier	mask		2609359	1					
ANR	2609432	IdentifierDeclStatement	int cr = cw - ( ( color >> ( shift * 3 ) ) & mask ) ;	589:4:18286:18331	2609359	6	True				
ANR	2609433	IdentifierDecl	cr = cw - ( ( color >> ( shift * 3 ) ) & mask )		2609359	0					
ANR	2609434	IdentifierDeclType	int		2609359	0					
ANR	2609435	Identifier	cr		2609359	1					
ANR	2609436	AssignmentExpression	cr = cw - ( ( color >> ( shift * 3 ) ) & mask )		2609359	2		=			
ANR	2609437	Identifier	cr		2609359	0					
ANR	2609438	AdditiveExpression	cw - ( ( color >> ( shift * 3 ) ) & mask )		2609359	1		-			
ANR	2609439	Identifier	cw		2609359	0					
ANR	2609440	BitAndExpression	( color >> ( shift * 3 ) ) & mask		2609359	1		&			
ANR	2609441	ShiftExpression	color >> ( shift * 3 )		2609359	0		>>			
ANR	2609442	Identifier	color		2609359	0					
ANR	2609443	MultiplicativeExpression	shift * 3		2609359	1		*			
ANR	2609444	Identifier	shift		2609359	0					
ANR	2609445	PrimaryExpression	3		2609359	1					
ANR	2609446	Identifier	mask		2609359	1					
ANR	2609447	ExpressionStatement	"rgb [ 0 ] = max ( cr , 0 ) * scale"	591:4:18338:18365	2609359	7	True				
ANR	2609448	AssignmentExpression	"rgb [ 0 ] = max ( cr , 0 ) * scale"		2609359	0		=			
ANR	2609449	ArrayIndexing	rgb [ 0 ]		2609359	0					
ANR	2609450	Identifier	rgb		2609359	0					
ANR	2609451	PrimaryExpression	0		2609359	1					
ANR	2609452	MultiplicativeExpression	"max ( cr , 0 ) * scale"		2609359	1		*			
ANR	2609453	CallExpression	"max ( cr , 0 )"		2609359	0					
ANR	2609454	Callee	max		2609359	0					
ANR	2609455	Identifier	max		2609359	0					
ANR	2609456	ArgumentList	cr		2609359	1					
ANR	2609457	Argument	cr		2609359	0					
ANR	2609458	Identifier	cr		2609359	0					
ANR	2609459	Argument	0		2609359	1					
ANR	2609460	PrimaryExpression	0		2609359	0					
ANR	2609461	Identifier	scale		2609359	1					
ANR	2609462	ExpressionStatement	"rgb [ 1 ] = max ( cg , 0 ) * scale"	592:4:18371:18398	2609359	8	True				
ANR	2609463	AssignmentExpression	"rgb [ 1 ] = max ( cg , 0 ) * scale"		2609359	0		=			
ANR	2609464	ArrayIndexing	rgb [ 1 ]		2609359	0					
ANR	2609465	Identifier	rgb		2609359	0					
ANR	2609466	PrimaryExpression	1		2609359	1					
ANR	2609467	MultiplicativeExpression	"max ( cg , 0 ) * scale"		2609359	1		*			
ANR	2609468	CallExpression	"max ( cg , 0 )"		2609359	0					
ANR	2609469	Callee	max		2609359	0					
ANR	2609470	Identifier	max		2609359	0					
ANR	2609471	ArgumentList	cg		2609359	1					
ANR	2609472	Argument	cg		2609359	0					
ANR	2609473	Identifier	cg		2609359	0					
ANR	2609474	Argument	0		2609359	1					
ANR	2609475	PrimaryExpression	0		2609359	0					
ANR	2609476	Identifier	scale		2609359	1					
ANR	2609477	ExpressionStatement	"rgb [ 2 ] = max ( cb , 0 ) * scale"	593:4:18404:18431	2609359	9	True				
ANR	2609478	AssignmentExpression	"rgb [ 2 ] = max ( cb , 0 ) * scale"		2609359	0		=			
ANR	2609479	ArrayIndexing	rgb [ 2 ]		2609359	0					
ANR	2609480	Identifier	rgb		2609359	0					
ANR	2609481	PrimaryExpression	2		2609359	1					
ANR	2609482	MultiplicativeExpression	"max ( cb , 0 ) * scale"		2609359	1		*			
ANR	2609483	CallExpression	"max ( cb , 0 )"		2609359	0					
ANR	2609484	Callee	max		2609359	0					
ANR	2609485	Identifier	max		2609359	0					
ANR	2609486	ArgumentList	cb		2609359	1					
ANR	2609487	Argument	cb		2609359	0					
ANR	2609488	Identifier	cb		2609359	0					
ANR	2609489	Argument	0		2609359	1					
ANR	2609490	PrimaryExpression	0		2609359	0					
ANR	2609491	Identifier	scale		2609359	1					
ANR	2609492	ReturnStatement	return - 1 ;	594:4:18437:18446	2609359	10	True				
ANR	2609493	UnaryOperationExpression	- 1		2609359	0					
ANR	2609494	UnaryOperator	-		2609359	0					
ANR	2609495	PrimaryExpression	1		2609359	1					
ANR	2609496	ReturnType	static int		2609359	1					
ANR	2609497	Identifier	x_cmyk_alt_map_color		2609359	2					
ANR	2609498	ParameterList	"gx_device * dev , gx_color_index color , gx_color_value rgb [ 3 ]"		2609359	3					
ANR	2609499	Parameter	gx_device * dev	579:21:17888:17902	2609359	0	True				
ANR	2609500	ParameterType	gx_device *		2609359	0					
ANR	2609501	Identifier	dev		2609359	1					
ANR	2609502	Parameter	gx_color_index color	579:38:17905:17924	2609359	1	True				
ANR	2609503	ParameterType	gx_color_index		2609359	0					
ANR	2609504	Identifier	color		2609359	1					
ANR	2609505	Parameter	gx_color_value rgb [ 3 ]	580:21:17948:17968	2609359	2	True				
ANR	2609506	ParameterType	gx_color_value [ 3 ]		2609359	0					
ANR	2609507	Identifier	rgb		2609359	1					
ANR	2609508	CFGEntryNode	ENTRY		2609359		True				
ANR	2609509	CFGExitNode	EXIT		2609359		True				
ANR	2609510	Symbol	* dev		2609359						
ANR	2609511	Symbol	color		2609359						
ANR	2609512	Symbol	cg		2609359						
ANR	2609513	Symbol	max		2609359						
ANR	2609514	Symbol	shift		2609359						
ANR	2609515	Symbol	scale		2609359						
ANR	2609516	Symbol	rgb		2609359						
ANR	2609517	Symbol	dev -> color_info		2609359						
ANR	2609518	Symbol	dev -> color_info . depth		2609359						
ANR	2609519	Symbol	~color		2609359						
ANR	2609520	Symbol	cr		2609359						
ANR	2609521	Symbol	dev		2609359						
ANR	2609522	Symbol	cw		2609359						
ANR	2609523	Symbol	gx_max_color_value		2609359						
ANR	2609524	Symbol	* rgb		2609359						
ANR	2609525	Symbol	mask		2609359						
ANR	2609526	Symbol	cb		2609359						
ANR	2609527	Function	x_cmyk_set_procs	598:0:18486:18725							
ANR	2609528	FunctionDef	x_cmyk_set_procs (gx_device * dev)		2609527	0					
ANR	2609529	CompoundStatement		600:0:18531:18725	2609527	0					
ANR	2609530	IfStatement	if ( dev -> color_info . depth == 4 )		2609527	0					
ANR	2609531	Condition	dev -> color_info . depth == 4	601:8:18541:18566	2609527	0	True				
ANR	2609532	EqualityExpression	dev -> color_info . depth == 4		2609527	0		==			
ANR	2609533	MemberAccess	dev -> color_info . depth		2609527	0					
ANR	2609534	PtrMemberAccess	dev -> color_info		2609527	0					
ANR	2609535	Identifier	dev		2609527	0					
ANR	2609536	Identifier	color_info		2609527	1					
ANR	2609537	Identifier	depth		2609527	1					
ANR	2609538	PrimaryExpression	4		2609527	1					
ANR	2609539	CompoundStatement		2:36:37:37	2609527	1					
ANR	2609540	ExpressionStatement	"set_dev_proc ( dev , map_cmyk_color , cmyk_1bit_map_cmyk_color )"	602:8:18579:18638	2609527	0	True				
ANR	2609541	CallExpression	"set_dev_proc ( dev , map_cmyk_color , cmyk_1bit_map_cmyk_color )"		2609527	0					
ANR	2609542	Callee	set_dev_proc		2609527	0					
ANR	2609543	Identifier	set_dev_proc		2609527	0					
ANR	2609544	ArgumentList	dev		2609527	1					
ANR	2609545	Argument	dev		2609527	0					
ANR	2609546	Identifier	dev		2609527	0					
ANR	2609547	Argument	map_cmyk_color		2609527	1					
ANR	2609548	Identifier	map_cmyk_color		2609527	0					
ANR	2609549	Argument	cmyk_1bit_map_cmyk_color		2609527	2					
ANR	2609550	Identifier	cmyk_1bit_map_cmyk_color		2609527	0					
ANR	2609551	ElseStatement	else		2609527	0					
ANR	2609552	CompoundStatement		4:11:119:119	2609527	0					
ANR	2609553	ExpressionStatement	"set_dev_proc ( dev , map_cmyk_color , x_cmyk_map_cmyk_color )"	604:8:18661:18717	2609527	0	True				
ANR	2609554	CallExpression	"set_dev_proc ( dev , map_cmyk_color , x_cmyk_map_cmyk_color )"		2609527	0					
ANR	2609555	Callee	set_dev_proc		2609527	0					
ANR	2609556	Identifier	set_dev_proc		2609527	0					
ANR	2609557	ArgumentList	dev		2609527	1					
ANR	2609558	Argument	dev		2609527	0					
ANR	2609559	Identifier	dev		2609527	0					
ANR	2609560	Argument	map_cmyk_color		2609527	1					
ANR	2609561	Identifier	map_cmyk_color		2609527	0					
ANR	2609562	Argument	x_cmyk_map_cmyk_color		2609527	2					
ANR	2609563	Identifier	x_cmyk_map_cmyk_color		2609527	0					
ANR	2609564	ReturnType	static void		2609527	1					
ANR	2609565	Identifier	x_cmyk_set_procs		2609527	2					
ANR	2609566	ParameterList	gx_device * dev		2609527	3					
ANR	2609567	Parameter	gx_device * dev	599:17:18515:18528	2609527	0	True				
ANR	2609568	ParameterType	gx_device *		2609527	0					
ANR	2609569	Identifier	dev		2609527	1					
ANR	2609570	CFGEntryNode	ENTRY		2609527		True				
ANR	2609571	CFGExitNode	EXIT		2609527		True				
ANR	2609572	Symbol	* dev		2609527						
ANR	2609573	Symbol	cmyk_1bit_map_cmyk_color		2609527						
ANR	2609574	Symbol	map_cmyk_color		2609527						
ANR	2609575	Symbol	dev		2609527						
ANR	2609576	Symbol	dev -> color_info		2609527						
ANR	2609577	Symbol	dev -> color_info . depth		2609527						
ANR	2609578	Symbol	x_cmyk_map_cmyk_color		2609527						
ANR	2609579	Function	x_cmyk_open	610:0:18753:18895							
ANR	2609580	FunctionDef	x_cmyk_open (gx_device * dev)		2609579	0					
ANR	2609581	CompoundStatement		612:0:18792:18895	2609579	0					
ANR	2609582	IdentifierDeclStatement	int code = x_wrap_open ( dev ) ;	613:4:18798:18825	2609579	0	True				
ANR	2609583	IdentifierDecl	code = x_wrap_open ( dev )		2609579	0					
ANR	2609584	IdentifierDeclType	int		2609579	0					
ANR	2609585	Identifier	code		2609579	1					
ANR	2609586	AssignmentExpression	code = x_wrap_open ( dev )		2609579	2		=			
ANR	2609587	Identifier	code		2609579	0					
ANR	2609588	CallExpression	x_wrap_open ( dev )		2609579	1					
ANR	2609589	Callee	x_wrap_open		2609579	0					
ANR	2609590	Identifier	x_wrap_open		2609579	0					
ANR	2609591	ArgumentList	dev		2609579	1					
ANR	2609592	Argument	dev		2609579	0					
ANR	2609593	Identifier	dev		2609579	0					
ANR	2609594	IfStatement	if ( code >= 0 )		2609579	1					
ANR	2609595	Condition	code >= 0	615:8:18836:18844	2609579	0	True				
ANR	2609596	RelationalExpression	code >= 0		2609579	0		>=			
ANR	2609597	Identifier	code		2609579	0					
ANR	2609598	PrimaryExpression	0		2609579	1					
ANR	2609599	ExpressionStatement	x_cmyk_set_procs ( dev )	616:8:18855:18876	2609579	1	True				
ANR	2609600	CallExpression	x_cmyk_set_procs ( dev )		2609579	0					
ANR	2609601	Callee	x_cmyk_set_procs		2609579	0					
ANR	2609602	Identifier	x_cmyk_set_procs		2609579	0					
ANR	2609603	ArgumentList	dev		2609579	1					
ANR	2609604	Argument	dev		2609579	0					
ANR	2609605	Identifier	dev		2609579	0					
ANR	2609606	ReturnStatement	return code ;	617:4:18882:18893	2609579	2	True				
ANR	2609607	Identifier	code		2609579	0					
ANR	2609608	ReturnType	static int		2609579	1					
ANR	2609609	Identifier	x_cmyk_open		2609579	2					
ANR	2609610	ParameterList	gx_device * dev		2609579	3					
ANR	2609611	Parameter	gx_device * dev	611:12:18776:18789	2609579	0	True				
ANR	2609612	ParameterType	gx_device *		2609579	0					
ANR	2609613	Identifier	dev		2609579	1					
ANR	2609614	CFGEntryNode	ENTRY		2609579		True				
ANR	2609615	CFGExitNode	EXIT		2609579		True				
ANR	2609616	Symbol	code		2609579						
ANR	2609617	Symbol	dev		2609579						
ANR	2609618	Symbol	x_wrap_open		2609579						
ANR	2609619	Function	x_cmyk_put_params	620:0:18898:19083							
ANR	2609620	FunctionDef	"x_cmyk_put_params (gx_device * dev , gs_param_list * plist)"		2609619	0					
ANR	2609621	CompoundStatement		622:0:18967:19083	2609619	0					
ANR	2609622	IdentifierDeclStatement	"int code = x_wrap_put_params ( dev , plist ) ;"	623:4:18973:19013	2609619	0	True				
ANR	2609623	IdentifierDecl	"code = x_wrap_put_params ( dev , plist )"		2609619	0					
ANR	2609624	IdentifierDeclType	int		2609619	0					
ANR	2609625	Identifier	code		2609619	1					
ANR	2609626	AssignmentExpression	"code = x_wrap_put_params ( dev , plist )"		2609619	2		=			
ANR	2609627	Identifier	code		2609619	0					
ANR	2609628	CallExpression	"x_wrap_put_params ( dev , plist )"		2609619	1					
ANR	2609629	Callee	x_wrap_put_params		2609619	0					
ANR	2609630	Identifier	x_wrap_put_params		2609619	0					
ANR	2609631	ArgumentList	dev		2609619	1					
ANR	2609632	Argument	dev		2609619	0					
ANR	2609633	Identifier	dev		2609619	0					
ANR	2609634	Argument	plist		2609619	1					
ANR	2609635	Identifier	plist		2609619	0					
ANR	2609636	IfStatement	if ( code >= 0 )		2609619	1					
ANR	2609637	Condition	code >= 0	625:8:19024:19032	2609619	0	True				
ANR	2609638	RelationalExpression	code >= 0		2609619	0		>=			
ANR	2609639	Identifier	code		2609619	0					
ANR	2609640	PrimaryExpression	0		2609619	1					
ANR	2609641	ExpressionStatement	x_cmyk_set_procs ( dev )	626:8:19043:19064	2609619	1	True				
ANR	2609642	CallExpression	x_cmyk_set_procs ( dev )		2609619	0					
ANR	2609643	Callee	x_cmyk_set_procs		2609619	0					
ANR	2609644	Identifier	x_cmyk_set_procs		2609619	0					
ANR	2609645	ArgumentList	dev		2609619	1					
ANR	2609646	Argument	dev		2609619	0					
ANR	2609647	Identifier	dev		2609619	0					
ANR	2609648	ReturnStatement	return code ;	627:4:19070:19081	2609619	2	True				
ANR	2609649	Identifier	code		2609619	0					
ANR	2609650	ReturnType	static int		2609619	1					
ANR	2609651	Identifier	x_cmyk_put_params		2609619	2					
ANR	2609652	ParameterList	"gx_device * dev , gs_param_list * plist"		2609619	3					
ANR	2609653	Parameter	gx_device * dev	621:18:18927:18941	2609619	0	True				
ANR	2609654	ParameterType	gx_device *		2609619	0					
ANR	2609655	Identifier	dev		2609619	1					
ANR	2609656	Parameter	gs_param_list * plist	621:35:18944:18964	2609619	1	True				
ANR	2609657	ParameterType	gs_param_list *		2609619	0					
ANR	2609658	Identifier	plist		2609619	1					
ANR	2609659	CFGEntryNode	ENTRY		2609619		True				
ANR	2609660	CFGExitNode	EXIT		2609619		True				
ANR	2609661	Symbol	plist		2609619						
ANR	2609662	Symbol	code		2609619						
ANR	2609663	Symbol	dev		2609619						
ANR	2609664	Symbol	x_wrap_put_params		2609619						
ANR	2609665	Function	x_cmyk_map_cmyk_color	630:0:19086:19579							
ANR	2609666	FunctionDef	"x_cmyk_map_cmyk_color (gx_device * dev , const gx_color_value cv [ ])"		2609665	0					
ANR	2609667	CompoundStatement		632:0:19174:19579	2609665	0					
ANR	2609668	IdentifierDeclStatement	int shift = dev -> color_info . depth >> 2 ;	633:4:19180:19218	2609665	0	True				
ANR	2609669	IdentifierDecl	shift = dev -> color_info . depth >> 2		2609665	0					
ANR	2609670	IdentifierDeclType	int		2609665	0					
ANR	2609671	Identifier	shift		2609665	1					
ANR	2609672	AssignmentExpression	shift = dev -> color_info . depth >> 2		2609665	2		=			
ANR	2609673	Identifier	shift		2609665	0					
ANR	2609674	ShiftExpression	dev -> color_info . depth >> 2		2609665	1		>>			
ANR	2609675	MemberAccess	dev -> color_info . depth		2609665	0					
ANR	2609676	PtrMemberAccess	dev -> color_info		2609665	0					
ANR	2609677	Identifier	dev		2609665	0					
ANR	2609678	Identifier	color_info		2609665	1					
ANR	2609679	Identifier	depth		2609665	1					
ANR	2609680	PrimaryExpression	2		2609665	1					
ANR	2609681	IdentifierDeclStatement	gx_color_index pixel ;	634:4:19224:19244	2609665	1	True				
ANR	2609682	IdentifierDecl	pixel		2609665	0					
ANR	2609683	IdentifierDeclType	gx_color_index		2609665	0					
ANR	2609684	Identifier	pixel		2609665	1					
ANR	2609685	IdentifierDeclStatement	"gx_color_value c , m , y , k ;"	635:4:19250:19275	2609665	2	True				
ANR	2609686	IdentifierDecl	c		2609665	0					
ANR	2609687	IdentifierDeclType	gx_color_value		2609665	0					
ANR	2609688	Identifier	c		2609665	1					
ANR	2609689	IdentifierDecl	m		2609665	1					
ANR	2609690	IdentifierDeclType	gx_color_value		2609665	0					
ANR	2609691	Identifier	m		2609665	1					
ANR	2609692	IdentifierDecl	y		2609665	2					
ANR	2609693	IdentifierDeclType	gx_color_value		2609665	0					
ANR	2609694	Identifier	y		2609665	1					
ANR	2609695	IdentifierDecl	k		2609665	3					
ANR	2609696	IdentifierDeclType	gx_color_value		2609665	0					
ANR	2609697	Identifier	k		2609665	1					
ANR	2609698	ExpressionStatement	c = cv [ 0 ]	636:4:19281:19290	2609665	3	True				
ANR	2609699	AssignmentExpression	c = cv [ 0 ]		2609665	0		=			
ANR	2609700	Identifier	c		2609665	0					
ANR	2609701	ArrayIndexing	cv [ 0 ]		2609665	1					
ANR	2609702	Identifier	cv		2609665	0					
ANR	2609703	PrimaryExpression	0		2609665	1					
ANR	2609704	ExpressionStatement	m = cv [ 1 ]	636:15:19292:19301	2609665	4	True				
ANR	2609705	AssignmentExpression	m = cv [ 1 ]		2609665	0		=			
ANR	2609706	Identifier	m		2609665	0					
ANR	2609707	ArrayIndexing	cv [ 1 ]		2609665	1					
ANR	2609708	Identifier	cv		2609665	0					
ANR	2609709	PrimaryExpression	1		2609665	1					
ANR	2609710	ExpressionStatement	y = cv [ 2 ]	636:26:19303:19312	2609665	5	True				
ANR	2609711	AssignmentExpression	y = cv [ 2 ]		2609665	0		=			
ANR	2609712	Identifier	y		2609665	0					
ANR	2609713	ArrayIndexing	cv [ 2 ]		2609665	1					
ANR	2609714	Identifier	cv		2609665	0					
ANR	2609715	PrimaryExpression	2		2609665	1					
ANR	2609716	ExpressionStatement	k = cv [ 3 ]	636:37:19314:19323	2609665	6	True				
ANR	2609717	AssignmentExpression	k = cv [ 3 ]		2609665	0		=			
ANR	2609718	Identifier	k		2609665	0					
ANR	2609719	ArrayIndexing	cv [ 3 ]		2609665	1					
ANR	2609720	Identifier	cv		2609665	0					
ANR	2609721	PrimaryExpression	3		2609665	1					
ANR	2609722	ExpressionStatement	pixel = c >> ( gx_color_value_bits - shift )	637:4:19329:19371	2609665	7	True				
ANR	2609723	AssignmentExpression	pixel = c >> ( gx_color_value_bits - shift )		2609665	0		=			
ANR	2609724	Identifier	pixel		2609665	0					
ANR	2609725	ShiftExpression	c >> ( gx_color_value_bits - shift )		2609665	1		>>			
ANR	2609726	Identifier	c		2609665	0					
ANR	2609727	AdditiveExpression	gx_color_value_bits - shift		2609665	1		-			
ANR	2609728	Identifier	gx_color_value_bits		2609665	0					
ANR	2609729	Identifier	shift		2609665	1					
ANR	2609730	ExpressionStatement	pixel = ( pixel << shift ) | ( m >> ( gx_color_value_bits - shift ) )	638:4:19377:19440	2609665	8	True				
ANR	2609731	AssignmentExpression	pixel = ( pixel << shift ) | ( m >> ( gx_color_value_bits - shift ) )		2609665	0		=			
ANR	2609732	Identifier	pixel		2609665	0					
ANR	2609733	InclusiveOrExpression	( pixel << shift ) | ( m >> ( gx_color_value_bits - shift ) )		2609665	1		|			
ANR	2609734	ShiftExpression	pixel << shift		2609665	0		<<			
ANR	2609735	Identifier	pixel		2609665	0					
ANR	2609736	Identifier	shift		2609665	1					
ANR	2609737	ShiftExpression	m >> ( gx_color_value_bits - shift )		2609665	1		>>			
ANR	2609738	Identifier	m		2609665	0					
ANR	2609739	AdditiveExpression	gx_color_value_bits - shift		2609665	1		-			
ANR	2609740	Identifier	gx_color_value_bits		2609665	0					
ANR	2609741	Identifier	shift		2609665	1					
ANR	2609742	ExpressionStatement	pixel = ( pixel << shift ) | ( y >> ( gx_color_value_bits - shift ) )	639:4:19446:19509	2609665	9	True				
ANR	2609743	AssignmentExpression	pixel = ( pixel << shift ) | ( y >> ( gx_color_value_bits - shift ) )		2609665	0		=			
ANR	2609744	Identifier	pixel		2609665	0					
ANR	2609745	InclusiveOrExpression	( pixel << shift ) | ( y >> ( gx_color_value_bits - shift ) )		2609665	1		|			
ANR	2609746	ShiftExpression	pixel << shift		2609665	0		<<			
ANR	2609747	Identifier	pixel		2609665	0					
ANR	2609748	Identifier	shift		2609665	1					
ANR	2609749	ShiftExpression	y >> ( gx_color_value_bits - shift )		2609665	1		>>			
ANR	2609750	Identifier	y		2609665	0					
ANR	2609751	AdditiveExpression	gx_color_value_bits - shift		2609665	1		-			
ANR	2609752	Identifier	gx_color_value_bits		2609665	0					
ANR	2609753	Identifier	shift		2609665	1					
ANR	2609754	ReturnStatement	return ( pixel << shift ) | ( k >> ( gx_color_value_bits - shift ) ) ;	640:4:19515:19577	2609665	10	True				
ANR	2609755	InclusiveOrExpression	( pixel << shift ) | ( k >> ( gx_color_value_bits - shift ) )		2609665	0		|			
ANR	2609756	ShiftExpression	pixel << shift		2609665	0		<<			
ANR	2609757	Identifier	pixel		2609665	0					
ANR	2609758	Identifier	shift		2609665	1					
ANR	2609759	ShiftExpression	k >> ( gx_color_value_bits - shift )		2609665	1		>>			
ANR	2609760	Identifier	k		2609665	0					
ANR	2609761	AdditiveExpression	gx_color_value_bits - shift		2609665	1		-			
ANR	2609762	Identifier	gx_color_value_bits		2609665	0					
ANR	2609763	Identifier	shift		2609665	1					
ANR	2609764	ReturnType	static gx_color_index		2609665	1					
ANR	2609765	Identifier	x_cmyk_map_cmyk_color		2609665	2					
ANR	2609766	ParameterList	"gx_device * dev , const gx_color_value cv [ ]"		2609665	3					
ANR	2609767	Parameter	gx_device * dev	631:22:19130:19144	2609665	0	True				
ANR	2609768	ParameterType	gx_device *		2609665	0					
ANR	2609769	Identifier	dev		2609665	1					
ANR	2609770	Parameter	const gx_color_value cv [ ]	631:39:19147:19171	2609665	1	True				
ANR	2609771	ParameterType	const gx_color_value [ ]		2609665	0					
ANR	2609772	Identifier	cv		2609665	1					
ANR	2609773	CFGEntryNode	ENTRY		2609665		True				
ANR	2609774	CFGExitNode	EXIT		2609665		True				
ANR	2609775	Symbol	* dev		2609665						
ANR	2609776	Symbol	c		2609665						
ANR	2609777	Symbol	shift		2609665						
ANR	2609778	Symbol	k		2609665						
ANR	2609779	Symbol	dev -> color_info		2609665						
ANR	2609780	Symbol	dev -> color_info . depth		2609665						
ANR	2609781	Symbol	m		2609665						
ANR	2609782	Symbol	cv		2609665						
ANR	2609783	Symbol	dev		2609665						
ANR	2609784	Symbol	y		2609665						
ANR	2609785	Symbol	* cv		2609665						
ANR	2609786	Symbol	pixel		2609665						
ANR	2609787	Symbol	gx_color_value_bits		2609665						
ANR	2609788	DeclStmt									
ANR	2609789	Decl							const gx_device_procs	const gx_device_procs	x_mono_procs
ANR	2609790	DeclStmt									
ANR	2609791	Decl							const gx_device_X_wrapper	const gx_device_X_wrapper	gs_x11mono_device
ANR	2609792	Function	x_mono_alt_map_color	685:0:20883:21080							
ANR	2609793	FunctionDef	"x_mono_alt_map_color (gx_device * dev , gx_color_index color , gx_color_value rgb [ 3 ])"		2609792	0					
ANR	2609794	CompoundStatement		688:0:20998:21080	2609792	0					
ANR	2609795	ExpressionStatement	rgb [ 0 ] = rgb [ 1 ] = rgb [ 2 ] = ( color ? 0 : gx_max_color_value )	689:4:21004:21063	2609792	0	True				
ANR	2609796	AssignmentExpression	rgb [ 0 ] = rgb [ 1 ] = rgb [ 2 ] = ( color ? 0 : gx_max_color_value )		2609792	0		=			
ANR	2609797	ArrayIndexing	rgb [ 0 ]		2609792	0					
ANR	2609798	Identifier	rgb		2609792	0					
ANR	2609799	PrimaryExpression	0		2609792	1					
ANR	2609800	AssignmentExpression	rgb [ 1 ] = rgb [ 2 ] = ( color ? 0 : gx_max_color_value )		2609792	1		=			
ANR	2609801	ArrayIndexing	rgb [ 1 ]		2609792	0					
ANR	2609802	Identifier	rgb		2609792	0					
ANR	2609803	PrimaryExpression	1		2609792	1					
ANR	2609804	AssignmentExpression	rgb [ 2 ] = ( color ? 0 : gx_max_color_value )		2609792	1		=			
ANR	2609805	ArrayIndexing	rgb [ 2 ]		2609792	0					
ANR	2609806	Identifier	rgb		2609792	0					
ANR	2609807	PrimaryExpression	2		2609792	1					
ANR	2609808	ConditionalExpression	color ? 0 : gx_max_color_value		2609792	1					
ANR	2609809	Condition	color		2609792	0					
ANR	2609810	Identifier	color		2609792	0					
ANR	2609811	PrimaryExpression	0		2609792	1					
ANR	2609812	Identifier	gx_max_color_value		2609792	2					
ANR	2609813	ReturnStatement	return - 1 ;	690:4:21069:21078	2609792	1	True				
ANR	2609814	UnaryOperationExpression	- 1		2609792	0					
ANR	2609815	UnaryOperator	-		2609792	0					
ANR	2609816	PrimaryExpression	1		2609792	1					
ANR	2609817	ReturnType	static int		2609792	1					
ANR	2609818	Identifier	x_mono_alt_map_color		2609792	2					
ANR	2609819	ParameterList	"gx_device * dev , gx_color_index color , gx_color_value rgb [ 3 ]"		2609792	3					
ANR	2609820	Parameter	gx_device * dev	686:21:20915:20929	2609792	0	True				
ANR	2609821	ParameterType	gx_device *		2609792	0					
ANR	2609822	Identifier	dev		2609792	1					
ANR	2609823	Parameter	gx_color_index color	686:38:20932:20951	2609792	1	True				
ANR	2609824	ParameterType	gx_color_index		2609792	0					
ANR	2609825	Identifier	color		2609792	1					
ANR	2609826	Parameter	gx_color_value rgb [ 3 ]	687:21:20975:20995	2609792	2	True				
ANR	2609827	ParameterType	gx_color_value [ 3 ]		2609792	0					
ANR	2609828	Identifier	rgb		2609792	1					
ANR	2609829	CFGEntryNode	ENTRY		2609792		True				
ANR	2609830	CFGExitNode	EXIT		2609792		True				
ANR	2609831	Symbol	dev		2609792						
ANR	2609832	Symbol	color		2609792						
ANR	2609833	Symbol	gx_max_color_value		2609792						
ANR	2609834	Symbol	* rgb		2609792						
ANR	2609835	Symbol	rgb		2609792						
ANR	2609836	DeclStmt									
ANR	2609837	Decl							const gx_device_procs	const gx_device_procs	x_gray_procs
ANR	2609838	DeclStmt									
ANR	2609839	Decl							const gx_device_X_wrapper	const gx_device_X_wrapper	gs_x11gray2_device
ANR	2609840	DeclStmt									
ANR	2609841	Decl							const gx_device_X_wrapper	const gx_device_X_wrapper	gs_x11gray4_device
ANR	2609842	Function	x_gray_alt_map_color	744:0:22719:22945							
ANR	2609843	FunctionDef	"x_gray_alt_map_color (gx_device * dev , gx_color_index color , gx_color_value rgb [ 3 ])"		2609842	0					
ANR	2609844	CompoundStatement		747:0:22834:22945	2609842	0					
ANR	2609845	ExpressionStatement	rgb [ 0 ] = rgb [ 1 ] = rgb [ 2 ] = color * gx_max_color_value / dev -> color_info . max_gray	748:4:22840:22928	2609842	0	True				
ANR	2609846	AssignmentExpression	rgb [ 0 ] = rgb [ 1 ] = rgb [ 2 ] = color * gx_max_color_value / dev -> color_info . max_gray		2609842	0		=			
ANR	2609847	ArrayIndexing	rgb [ 0 ]		2609842	0					
ANR	2609848	Identifier	rgb		2609842	0					
ANR	2609849	PrimaryExpression	0		2609842	1					
ANR	2609850	AssignmentExpression	rgb [ 1 ] = rgb [ 2 ] = color * gx_max_color_value / dev -> color_info . max_gray		2609842	1		=			
ANR	2609851	ArrayIndexing	rgb [ 1 ]		2609842	0					
ANR	2609852	Identifier	rgb		2609842	0					
ANR	2609853	PrimaryExpression	1		2609842	1					
ANR	2609854	AssignmentExpression	rgb [ 2 ] = color * gx_max_color_value / dev -> color_info . max_gray		2609842	1		=			
ANR	2609855	ArrayIndexing	rgb [ 2 ]		2609842	0					
ANR	2609856	Identifier	rgb		2609842	0					
ANR	2609857	PrimaryExpression	2		2609842	1					
ANR	2609858	MultiplicativeExpression	color * gx_max_color_value / dev -> color_info . max_gray		2609842	1		*			
ANR	2609859	Identifier	color		2609842	0					
ANR	2609860	MultiplicativeExpression	gx_max_color_value / dev -> color_info . max_gray		2609842	1		/			
ANR	2609861	Identifier	gx_max_color_value		2609842	0					
ANR	2609862	MemberAccess	dev -> color_info . max_gray		2609842	1					
ANR	2609863	PtrMemberAccess	dev -> color_info		2609842	0					
ANR	2609864	Identifier	dev		2609842	0					
ANR	2609865	Identifier	color_info		2609842	1					
ANR	2609866	Identifier	max_gray		2609842	1					
ANR	2609867	ReturnStatement	return - 1 ;	750:4:22934:22943	2609842	1	True				
ANR	2609868	UnaryOperationExpression	- 1		2609842	0					
ANR	2609869	UnaryOperator	-		2609842	0					
ANR	2609870	PrimaryExpression	1		2609842	1					
ANR	2609871	ReturnType	static int		2609842	1					
ANR	2609872	Identifier	x_gray_alt_map_color		2609842	2					
ANR	2609873	ParameterList	"gx_device * dev , gx_color_index color , gx_color_value rgb [ 3 ]"		2609842	3					
ANR	2609874	Parameter	gx_device * dev	745:21:22751:22765	2609842	0	True				
ANR	2609875	ParameterType	gx_device *		2609842	0					
ANR	2609876	Identifier	dev		2609842	1					
ANR	2609877	Parameter	gx_color_index color	745:38:22768:22787	2609842	1	True				
ANR	2609878	ParameterType	gx_color_index		2609842	0					
ANR	2609879	Identifier	color		2609842	1					
ANR	2609880	Parameter	gx_color_value rgb [ 3 ]	746:21:22811:22831	2609842	2	True				
ANR	2609881	ParameterType	gx_color_value [ 3 ]		2609842	0					
ANR	2609882	Identifier	rgb		2609842	1					
ANR	2609883	CFGEntryNode	ENTRY		2609842		True				
ANR	2609884	CFGExitNode	EXIT		2609842		True				
ANR	2609885	Symbol	* dev		2609842						
ANR	2609886	Symbol	dev		2609842						
ANR	2609887	Symbol	color		2609842						
ANR	2609888	Symbol	gx_max_color_value		2609842						
ANR	2609889	Symbol	* rgb		2609842						
ANR	2609890	Symbol	rgb		2609842						
ANR	2609891	Symbol	dev -> color_info		2609842						
ANR	2609892	Symbol	dev -> color_info . max_gray		2609842						
ANR	2609893	Function	x_alpha_map_rgb_alpha_color	757:0:23061:23512							
ANR	2609894	FunctionDef	"x_alpha_map_rgb_alpha_color (gx_device * dev , gx_color_value r , gx_color_value g , gx_color_value b , gx_color_value alpha)"		2609893	0					
ANR	2609895	CompoundStatement		760:0:23205:23512	2609893	0					
ANR	2609896	IdentifierDeclStatement	gx_color_index color ;	761:4:23211:23231	2609893	0	True				
ANR	2609897	IdentifierDecl	color		2609893	0					
ANR	2609898	IdentifierDeclType	gx_color_index		2609893	0					
ANR	2609899	Identifier	color		2609893	1					
ANR	2609900	IdentifierDeclStatement	gx_color_value cv [ 3 ] ;	762:4:23237:23257	2609893	1	True				
ANR	2609901	IdentifierDecl	cv [ 3 ]		2609893	0					
ANR	2609902	IdentifierDeclType	gx_color_value [ 3 ]		2609893	0					
ANR	2609903	Identifier	cv		2609893	1					
ANR	2609904	PrimaryExpression	3		2609893	2					
ANR	2609905	IdentifierDeclStatement	byte abyte = alpha >> ( gx_color_value_bits - 8 ) ;	763:4:23263:23310	2609893	2	True				
ANR	2609906	IdentifierDecl	abyte = alpha >> ( gx_color_value_bits - 8 )		2609893	0					
ANR	2609907	IdentifierDeclType	byte		2609893	0					
ANR	2609908	Identifier	abyte		2609893	1					
ANR	2609909	AssignmentExpression	abyte = alpha >> ( gx_color_value_bits - 8 )		2609893	2		=			
ANR	2609910	Identifier	abyte		2609893	0					
ANR	2609911	ShiftExpression	alpha >> ( gx_color_value_bits - 8 )		2609893	1		>>			
ANR	2609912	Identifier	alpha		2609893	0					
ANR	2609913	AdditiveExpression	gx_color_value_bits - 8		2609893	1		-			
ANR	2609914	Identifier	gx_color_value_bits		2609893	0					
ANR	2609915	PrimaryExpression	8		2609893	1					
ANR	2609916	ExpressionStatement	cv [ 0 ] = r	764:4:23316:23325	2609893	3	True				
ANR	2609917	AssignmentExpression	cv [ 0 ] = r		2609893	0		=			
ANR	2609918	ArrayIndexing	cv [ 0 ]		2609893	0					
ANR	2609919	Identifier	cv		2609893	0					
ANR	2609920	PrimaryExpression	0		2609893	1					
ANR	2609921	Identifier	r		2609893	1					
ANR	2609922	ExpressionStatement	cv [ 1 ] = g	764:15:23327:23336	2609893	4	True				
ANR	2609923	AssignmentExpression	cv [ 1 ] = g		2609893	0		=			
ANR	2609924	ArrayIndexing	cv [ 1 ]		2609893	0					
ANR	2609925	Identifier	cv		2609893	0					
ANR	2609926	PrimaryExpression	1		2609893	1					
ANR	2609927	Identifier	g		2609893	1					
ANR	2609928	ExpressionStatement	cv [ 2 ] = b	764:26:23338:23347	2609893	5	True				
ANR	2609929	AssignmentExpression	cv [ 2 ] = b		2609893	0		=			
ANR	2609930	ArrayIndexing	cv [ 2 ]		2609893	0					
ANR	2609931	Identifier	cv		2609893	0					
ANR	2609932	PrimaryExpression	2		2609893	1					
ANR	2609933	Identifier	b		2609893	1					
ANR	2609934	ExpressionStatement	"color = gx_forward_map_rgb_color ( dev , cv )"	765:4:23353:23394	2609893	6	True				
ANR	2609935	AssignmentExpression	"color = gx_forward_map_rgb_color ( dev , cv )"		2609893	0		=			
ANR	2609936	Identifier	color		2609893	0					
ANR	2609937	CallExpression	"gx_forward_map_rgb_color ( dev , cv )"		2609893	1					
ANR	2609938	Callee	gx_forward_map_rgb_color		2609893	0					
ANR	2609939	Identifier	gx_forward_map_rgb_color		2609893	0					
ANR	2609940	ArgumentList	dev		2609893	1					
ANR	2609941	Argument	dev		2609893	0					
ANR	2609942	Identifier	dev		2609893	0					
ANR	2609943	Argument	cv		2609893	1					
ANR	2609944	Identifier	cv		2609893	0					
ANR	2609945	ReturnStatement	return ( abyte == 0 ? ( gx_color_index ) 0xff << 24 : ( ( gx_color_index ) ( abyte ^ 0xff ) << 24 ) + color ) ;	766:4:23400:23510	2609893	7	True				
ANR	2609946	ConditionalExpression	abyte == 0 ? ( gx_color_index ) 0xff << 24 : ( ( gx_color_index ) ( abyte ^ 0xff ) << 24 ) + color		2609893	0					
ANR	2609947	Condition	abyte == 0		2609893	0					
ANR	2609948	EqualityExpression	abyte == 0		2609893	0		==			
ANR	2609949	Identifier	abyte		2609893	0					
ANR	2609950	PrimaryExpression	0		2609893	1					
ANR	2609951	ShiftExpression	( gx_color_index ) 0xff << 24		2609893	1		<<			
ANR	2609952	CastExpression	( gx_color_index ) 0xff		2609893	0					
ANR	2609953	CastTarget	gx_color_index		2609893	0					
ANR	2609954	PrimaryExpression	0xff		2609893	1					
ANR	2609955	PrimaryExpression	24		2609893	1					
ANR	2609956	AdditiveExpression	( ( gx_color_index ) ( abyte ^ 0xff ) << 24 ) + color		2609893	2		+			
ANR	2609957	ShiftExpression	( gx_color_index ) ( abyte ^ 0xff ) << 24		2609893	0		<<			
ANR	2609958	CastExpression	( gx_color_index ) ( abyte ^ 0xff )		2609893	0					
ANR	2609959	CastTarget	gx_color_index		2609893	0					
ANR	2609960	ExclusiveOrExpression	abyte ^ 0xff		2609893	1		^			
ANR	2609961	Identifier	abyte		2609893	0					
ANR	2609962	PrimaryExpression	0xff		2609893	1					
ANR	2609963	PrimaryExpression	24		2609893	1					
ANR	2609964	Identifier	color		2609893	1					
ANR	2609965	ReturnType	static gx_color_index		2609893	1					
ANR	2609966	Identifier	x_alpha_map_rgb_alpha_color		2609893	2					
ANR	2609967	ParameterList	"gx_device * dev , gx_color_value r , gx_color_value g , gx_color_value b , gx_color_value alpha"		2609893	3					
ANR	2609968	Parameter	gx_device * dev	758:28:23111:23125	2609893	0	True				
ANR	2609969	ParameterType	gx_device *		2609893	0					
ANR	2609970	Identifier	dev		2609893	1					
ANR	2609971	Parameter	gx_color_value r	759:1:23129:23144	2609893	1	True				
ANR	2609972	ParameterType	gx_color_value		2609893	0					
ANR	2609973	Identifier	r		2609893	1					
ANR	2609974	Parameter	gx_color_value g	759:19:23147:23162	2609893	2	True				
ANR	2609975	ParameterType	gx_color_value		2609893	0					
ANR	2609976	Identifier	g		2609893	1					
ANR	2609977	Parameter	gx_color_value b	759:37:23165:23180	2609893	3	True				
ANR	2609978	ParameterType	gx_color_value		2609893	0					
ANR	2609979	Identifier	b		2609893	1					
ANR	2609980	Parameter	gx_color_value alpha	759:55:23183:23202	2609893	4	True				
ANR	2609981	ParameterType	gx_color_value		2609893	0					
ANR	2609982	Identifier	alpha		2609893	1					
ANR	2609983	CFGEntryNode	ENTRY		2609893		True				
ANR	2609984	CFGExitNode	EXIT		2609893		True				
ANR	2609985	Symbol	r		2609893						
ANR	2609986	Symbol	b		2609893						
ANR	2609987	Symbol	gx_forward_map_rgb_color		2609893						
ANR	2609988	Symbol	cv		2609893						
ANR	2609989	Symbol	dev		2609893						
ANR	2609990	Symbol	color		2609893						
ANR	2609991	Symbol	g		2609893						
ANR	2609992	Symbol	alpha		2609893						
ANR	2609993	Symbol	* cv		2609893						
ANR	2609994	Symbol	abyte		2609893						
ANR	2609995	Symbol	gx_color_value_bits		2609893						
ANR	2609996	DeclStmt									
ANR	2609997	Decl							const gx_device_procs	const gx_device_procs	x_rg16x_procs
ANR	2609998	DeclStmt									
ANR	2609999	Decl							const gx_device_X_wrapper	const gx_device_X_wrapper	gs_x11rg16x_device
ANR	2610000	DeclStmt									
ANR	2610001	Decl							const gx_device_procs	const gx_device_procs	x_rg32x_procs
ANR	2610002	DeclStmt									
ANR	2610003	Decl							const gx_device_X_wrapper	const gx_device_X_wrapper	gs_x11rg32x_device
ANR	2610004	Function	x_rg16x_map_rgb_color	829:0:25499:25842							
ANR	2610005	FunctionDef	"x_rg16x_map_rgb_color (gx_device * dev , const gx_color_value cv [ ])"		2610004	0					
ANR	2610006	CompoundStatement		831:0:25587:25842	2610004	0					
ANR	2610007	IdentifierDeclStatement	"gx_color_value r , g , b ;"	833:4:25635:25657	2610004	0	True				
ANR	2610008	IdentifierDecl	r		2610004	0					
ANR	2610009	IdentifierDeclType	gx_color_value		2610004	0					
ANR	2610010	Identifier	r		2610004	1					
ANR	2610011	IdentifierDecl	g		2610004	1					
ANR	2610012	IdentifierDeclType	gx_color_value		2610004	0					
ANR	2610013	Identifier	g		2610004	1					
ANR	2610014	IdentifierDecl	b		2610004	2					
ANR	2610015	IdentifierDeclType	gx_color_value		2610004	0					
ANR	2610016	Identifier	b		2610004	1					
ANR	2610017	ExpressionStatement	r = cv [ 0 ]	834:4:25663:25672	2610004	1	True				
ANR	2610018	AssignmentExpression	r = cv [ 0 ]		2610004	0		=			
ANR	2610019	Identifier	r		2610004	0					
ANR	2610020	ArrayIndexing	cv [ 0 ]		2610004	1					
ANR	2610021	Identifier	cv		2610004	0					
ANR	2610022	PrimaryExpression	0		2610004	1					
ANR	2610023	ExpressionStatement	g = cv [ 1 ]	834:15:25674:25683	2610004	2	True				
ANR	2610024	AssignmentExpression	g = cv [ 1 ]		2610004	0		=			
ANR	2610025	Identifier	g		2610004	0					
ANR	2610026	ArrayIndexing	cv [ 1 ]		2610004	1					
ANR	2610027	Identifier	cv		2610004	0					
ANR	2610028	PrimaryExpression	1		2610004	1					
ANR	2610029	ExpressionStatement	b = cv [ 2 ]	834:26:25685:25694	2610004	3	True				
ANR	2610030	AssignmentExpression	b = cv [ 2 ]		2610004	0		=			
ANR	2610031	Identifier	b		2610004	0					
ANR	2610032	ArrayIndexing	cv [ 2 ]		2610004	1					
ANR	2610033	Identifier	cv		2610004	0					
ANR	2610034	PrimaryExpression	2		2610004	1					
ANR	2610035	ReturnStatement	return ( r >> ( gx_color_value_bits - 6 ) ) + ( ( g >> ( gx_color_value_bits - 5 ) ) << 11 ) + ( ( b >> ( gx_color_value_bits - 5 ) ) << 6 ) ;	835:4:25700:25840	2610004	4	True				
ANR	2610036	AdditiveExpression	( r >> ( gx_color_value_bits - 6 ) ) + ( ( g >> ( gx_color_value_bits - 5 ) ) << 11 ) + ( ( b >> ( gx_color_value_bits - 5 ) ) << 6 )		2610004	0		+			
ANR	2610037	ShiftExpression	r >> ( gx_color_value_bits - 6 )		2610004	0		>>			
ANR	2610038	Identifier	r		2610004	0					
ANR	2610039	AdditiveExpression	gx_color_value_bits - 6		2610004	1		-			
ANR	2610040	Identifier	gx_color_value_bits		2610004	0					
ANR	2610041	PrimaryExpression	6		2610004	1					
ANR	2610042	AdditiveExpression	( ( g >> ( gx_color_value_bits - 5 ) ) << 11 ) + ( ( b >> ( gx_color_value_bits - 5 ) ) << 6 )		2610004	1		+			
ANR	2610043	ShiftExpression	( g >> ( gx_color_value_bits - 5 ) ) << 11		2610004	0		<<			
ANR	2610044	ShiftExpression	g >> ( gx_color_value_bits - 5 )		2610004	0		>>			
ANR	2610045	Identifier	g		2610004	0					
ANR	2610046	AdditiveExpression	gx_color_value_bits - 5		2610004	1		-			
ANR	2610047	Identifier	gx_color_value_bits		2610004	0					
ANR	2610048	PrimaryExpression	5		2610004	1					
ANR	2610049	PrimaryExpression	11		2610004	1					
ANR	2610050	ShiftExpression	( b >> ( gx_color_value_bits - 5 ) ) << 6		2610004	1		<<			
ANR	2610051	ShiftExpression	b >> ( gx_color_value_bits - 5 )		2610004	0		>>			
ANR	2610052	Identifier	b		2610004	0					
ANR	2610053	AdditiveExpression	gx_color_value_bits - 5		2610004	1		-			
ANR	2610054	Identifier	gx_color_value_bits		2610004	0					
ANR	2610055	PrimaryExpression	5		2610004	1					
ANR	2610056	PrimaryExpression	6		2610004	1					
ANR	2610057	ReturnType	static gx_color_index		2610004	1					
ANR	2610058	Identifier	x_rg16x_map_rgb_color		2610004	2					
ANR	2610059	ParameterList	"gx_device * dev , const gx_color_value cv [ ]"		2610004	3					
ANR	2610060	Parameter	gx_device * dev	830:22:25543:25557	2610004	0	True				
ANR	2610061	ParameterType	gx_device *		2610004	0					
ANR	2610062	Identifier	dev		2610004	1					
ANR	2610063	Parameter	const gx_color_value cv [ ]	830:39:25560:25584	2610004	1	True				
ANR	2610064	ParameterType	const gx_color_value [ ]		2610004	0					
ANR	2610065	Identifier	cv		2610004	1					
ANR	2610066	CFGEntryNode	ENTRY		2610004		True				
ANR	2610067	CFGExitNode	EXIT		2610004		True				
ANR	2610068	Symbol	b		2610004						
ANR	2610069	Symbol	r		2610004						
ANR	2610070	Symbol	cv		2610004						
ANR	2610071	Symbol	dev		2610004						
ANR	2610072	Symbol	g		2610004						
ANR	2610073	Symbol	* cv		2610004						
ANR	2610074	Symbol	gx_color_value_bits		2610004						
ANR	2610075	Function	x_rg32x_map_rgb_color	839:0:25844:26226							
ANR	2610076	FunctionDef	"x_rg32x_map_rgb_color (gx_device * dev , const gx_color_value cv [ ])"		2610075	0					
ANR	2610077	CompoundStatement		841:0:25932:26226	2610075	0					
ANR	2610078	IdentifierDeclStatement	"gx_color_value r , g , b ;"	843:4:25983:26005	2610075	0	True				
ANR	2610079	IdentifierDecl	r		2610075	0					
ANR	2610080	IdentifierDeclType	gx_color_value		2610075	0					
ANR	2610081	Identifier	r		2610075	1					
ANR	2610082	IdentifierDecl	g		2610075	1					
ANR	2610083	IdentifierDeclType	gx_color_value		2610075	0					
ANR	2610084	Identifier	g		2610075	1					
ANR	2610085	IdentifierDecl	b		2610075	2					
ANR	2610086	IdentifierDeclType	gx_color_value		2610075	0					
ANR	2610087	Identifier	b		2610075	1					
ANR	2610088	ExpressionStatement	r = cv [ 0 ]	844:4:26011:26020	2610075	1	True				
ANR	2610089	AssignmentExpression	r = cv [ 0 ]		2610075	0		=			
ANR	2610090	Identifier	r		2610075	0					
ANR	2610091	ArrayIndexing	cv [ 0 ]		2610075	1					
ANR	2610092	Identifier	cv		2610075	0					
ANR	2610093	PrimaryExpression	0		2610075	1					
ANR	2610094	ExpressionStatement	g = cv [ 1 ]	844:15:26022:26031	2610075	2	True				
ANR	2610095	AssignmentExpression	g = cv [ 1 ]		2610075	0		=			
ANR	2610096	Identifier	g		2610075	0					
ANR	2610097	ArrayIndexing	cv [ 1 ]		2610075	1					
ANR	2610098	Identifier	cv		2610075	0					
ANR	2610099	PrimaryExpression	1		2610075	1					
ANR	2610100	ExpressionStatement	b = cv [ 2 ]	844:26:26033:26042	2610075	3	True				
ANR	2610101	AssignmentExpression	b = cv [ 2 ]		2610075	0		=			
ANR	2610102	Identifier	b		2610075	0					
ANR	2610103	ArrayIndexing	cv [ 2 ]		2610075	1					
ANR	2610104	Identifier	cv		2610075	0					
ANR	2610105	PrimaryExpression	2		2610075	1					
ANR	2610106	ReturnStatement	return ( r >> ( gx_color_value_bits - 11 ) ) + ( ( gx_color_index ) ( g >> ( gx_color_value_bits - 11 ) ) << 21 ) + ( ( gx_color_index ) ( b >> ( gx_color_value_bits - 10 ) ) << 11 ) ;	845:4:26048:26224	2610075	4	True				
ANR	2610107	AdditiveExpression	( r >> ( gx_color_value_bits - 11 ) ) + ( ( gx_color_index ) ( g >> ( gx_color_value_bits - 11 ) ) << 21 ) + ( ( gx_color_index ) ( b >> ( gx_color_value_bits - 10 ) ) << 11 )		2610075	0		+			
ANR	2610108	ShiftExpression	r >> ( gx_color_value_bits - 11 )		2610075	0		>>			
ANR	2610109	Identifier	r		2610075	0					
ANR	2610110	AdditiveExpression	gx_color_value_bits - 11		2610075	1		-			
ANR	2610111	Identifier	gx_color_value_bits		2610075	0					
ANR	2610112	PrimaryExpression	11		2610075	1					
ANR	2610113	AdditiveExpression	( ( gx_color_index ) ( g >> ( gx_color_value_bits - 11 ) ) << 21 ) + ( ( gx_color_index ) ( b >> ( gx_color_value_bits - 10 ) ) << 11 )		2610075	1		+			
ANR	2610114	ShiftExpression	( gx_color_index ) ( g >> ( gx_color_value_bits - 11 ) ) << 21		2610075	0		<<			
ANR	2610115	CastExpression	( gx_color_index ) ( g >> ( gx_color_value_bits - 11 ) )		2610075	0					
ANR	2610116	CastTarget	gx_color_index		2610075	0					
ANR	2610117	ShiftExpression	g >> ( gx_color_value_bits - 11 )		2610075	1		>>			
ANR	2610118	Identifier	g		2610075	0					
ANR	2610119	AdditiveExpression	gx_color_value_bits - 11		2610075	1		-			
ANR	2610120	Identifier	gx_color_value_bits		2610075	0					
ANR	2610121	PrimaryExpression	11		2610075	1					
ANR	2610122	PrimaryExpression	21		2610075	1					
ANR	2610123	ShiftExpression	( gx_color_index ) ( b >> ( gx_color_value_bits - 10 ) ) << 11		2610075	1		<<			
ANR	2610124	CastExpression	( gx_color_index ) ( b >> ( gx_color_value_bits - 10 ) )		2610075	0					
ANR	2610125	CastTarget	gx_color_index		2610075	0					
ANR	2610126	ShiftExpression	b >> ( gx_color_value_bits - 10 )		2610075	1		>>			
ANR	2610127	Identifier	b		2610075	0					
ANR	2610128	AdditiveExpression	gx_color_value_bits - 10		2610075	1		-			
ANR	2610129	Identifier	gx_color_value_bits		2610075	0					
ANR	2610130	PrimaryExpression	10		2610075	1					
ANR	2610131	PrimaryExpression	11		2610075	1					
ANR	2610132	ReturnType	static gx_color_index		2610075	1					
ANR	2610133	Identifier	x_rg32x_map_rgb_color		2610075	2					
ANR	2610134	ParameterList	"gx_device * dev , const gx_color_value cv [ ]"		2610075	3					
ANR	2610135	Parameter	gx_device * dev	840:22:25888:25902	2610075	0	True				
ANR	2610136	ParameterType	gx_device *		2610075	0					
ANR	2610137	Identifier	dev		2610075	1					
ANR	2610138	Parameter	const gx_color_value cv [ ]	840:39:25905:25929	2610075	1	True				
ANR	2610139	ParameterType	const gx_color_value [ ]		2610075	0					
ANR	2610140	Identifier	cv		2610075	1					
ANR	2610141	CFGEntryNode	ENTRY		2610075		True				
ANR	2610142	CFGExitNode	EXIT		2610075		True				
ANR	2610143	Symbol	r		2610075						
ANR	2610144	Symbol	b		2610075						
ANR	2610145	Symbol	cv		2610075						
ANR	2610146	Symbol	dev		2610075						
ANR	2610147	Symbol	g		2610075						
ANR	2610148	Symbol	* cv		2610075						
ANR	2610149	Symbol	gx_color_value_bits		2610075						
ANR	2610150	Function	x_rg16x_alt_map_color	851:0:26260:26580							
ANR	2610151	FunctionDef	"x_rg16x_alt_map_color (gx_device * dev , gx_color_index color , gx_color_value rgb [ 3 ])"		2610150	0					
ANR	2610152	CompoundStatement		854:0:26377:26580	2610150	0					
ANR	2610153	ExpressionStatement	rgb [ 0 ] = ( color & 0x3f ) * gx_max_color_value / 0x3f	855:4:26383:26434	2610150	0	True				
ANR	2610154	AssignmentExpression	rgb [ 0 ] = ( color & 0x3f ) * gx_max_color_value / 0x3f		2610150	0		=			
ANR	2610155	ArrayIndexing	rgb [ 0 ]		2610150	0					
ANR	2610156	Identifier	rgb		2610150	0					
ANR	2610157	PrimaryExpression	0		2610150	1					
ANR	2610158	MultiplicativeExpression	( color & 0x3f ) * gx_max_color_value / 0x3f		2610150	1		*			
ANR	2610159	BitAndExpression	color & 0x3f		2610150	0		&			
ANR	2610160	Identifier	color		2610150	0					
ANR	2610161	PrimaryExpression	0x3f		2610150	1					
ANR	2610162	MultiplicativeExpression	gx_max_color_value / 0x3f		2610150	1		/			
ANR	2610163	Identifier	gx_max_color_value		2610150	0					
ANR	2610164	PrimaryExpression	0x3f		2610150	1					
ANR	2610165	ExpressionStatement	rgb [ 1 ] = ( ( color >> 11 ) & 0x1f ) * gx_max_color_value / 0x1f	856:4:26440:26499	2610150	1	True				
ANR	2610166	AssignmentExpression	rgb [ 1 ] = ( ( color >> 11 ) & 0x1f ) * gx_max_color_value / 0x1f		2610150	0		=			
ANR	2610167	ArrayIndexing	rgb [ 1 ]		2610150	0					
ANR	2610168	Identifier	rgb		2610150	0					
ANR	2610169	PrimaryExpression	1		2610150	1					
ANR	2610170	MultiplicativeExpression	( ( color >> 11 ) & 0x1f ) * gx_max_color_value / 0x1f		2610150	1		*			
ANR	2610171	BitAndExpression	( color >> 11 ) & 0x1f		2610150	0		&			
ANR	2610172	ShiftExpression	color >> 11		2610150	0		>>			
ANR	2610173	Identifier	color		2610150	0					
ANR	2610174	PrimaryExpression	11		2610150	1					
ANR	2610175	PrimaryExpression	0x1f		2610150	1					
ANR	2610176	MultiplicativeExpression	gx_max_color_value / 0x1f		2610150	1		/			
ANR	2610177	Identifier	gx_max_color_value		2610150	0					
ANR	2610178	PrimaryExpression	0x1f		2610150	1					
ANR	2610179	ExpressionStatement	rgb [ 2 ] = ( ( color >> 6 ) & 0x1f ) * gx_max_color_value / 0x1f	857:4:26505:26563	2610150	2	True				
ANR	2610180	AssignmentExpression	rgb [ 2 ] = ( ( color >> 6 ) & 0x1f ) * gx_max_color_value / 0x1f		2610150	0		=			
ANR	2610181	ArrayIndexing	rgb [ 2 ]		2610150	0					
ANR	2610182	Identifier	rgb		2610150	0					
ANR	2610183	PrimaryExpression	2		2610150	1					
ANR	2610184	MultiplicativeExpression	( ( color >> 6 ) & 0x1f ) * gx_max_color_value / 0x1f		2610150	1		*			
ANR	2610185	BitAndExpression	( color >> 6 ) & 0x1f		2610150	0		&			
ANR	2610186	ShiftExpression	color >> 6		2610150	0		>>			
ANR	2610187	Identifier	color		2610150	0					
ANR	2610188	PrimaryExpression	6		2610150	1					
ANR	2610189	PrimaryExpression	0x1f		2610150	1					
ANR	2610190	MultiplicativeExpression	gx_max_color_value / 0x1f		2610150	1		/			
ANR	2610191	Identifier	gx_max_color_value		2610150	0					
ANR	2610192	PrimaryExpression	0x1f		2610150	1					
ANR	2610193	ReturnStatement	return - 1 ;	858:4:26569:26578	2610150	3	True				
ANR	2610194	UnaryOperationExpression	- 1		2610150	0					
ANR	2610195	UnaryOperator	-		2610150	0					
ANR	2610196	PrimaryExpression	1		2610150	1					
ANR	2610197	ReturnType	static int		2610150	1					
ANR	2610198	Identifier	x_rg16x_alt_map_color		2610150	2					
ANR	2610199	ParameterList	"gx_device * dev , gx_color_index color , gx_color_value rgb [ 3 ]"		2610150	3					
ANR	2610200	Parameter	gx_device * dev	852:22:26293:26307	2610150	0	True				
ANR	2610201	ParameterType	gx_device *		2610150	0					
ANR	2610202	Identifier	dev		2610150	1					
ANR	2610203	Parameter	gx_color_index color	852:39:26310:26329	2610150	1	True				
ANR	2610204	ParameterType	gx_color_index		2610150	0					
ANR	2610205	Identifier	color		2610150	1					
ANR	2610206	Parameter	gx_color_value rgb [ 3 ]	853:22:26354:26374	2610150	2	True				
ANR	2610207	ParameterType	gx_color_value [ 3 ]		2610150	0					
ANR	2610208	Identifier	rgb		2610150	1					
ANR	2610209	CFGEntryNode	ENTRY		2610150		True				
ANR	2610210	CFGExitNode	EXIT		2610150		True				
ANR	2610211	Symbol	dev		2610150						
ANR	2610212	Symbol	color		2610150						
ANR	2610213	Symbol	gx_max_color_value		2610150						
ANR	2610214	Symbol	* rgb		2610150						
ANR	2610215	Symbol	rgb		2610150						
ANR	2610216	Function	x_rg32x_alt_map_color	860:0:26582:26909							
ANR	2610217	FunctionDef	"x_rg32x_alt_map_color (gx_device * dev , gx_color_index color , gx_color_value rgb [ 3 ])"		2610216	0					
ANR	2610218	CompoundStatement		863:0:26699:26909	2610216	0					
ANR	2610219	ExpressionStatement	rgb [ 0 ] = ( color & 0x7ff ) * gx_max_color_value / 0x7ff	864:4:26705:26758	2610216	0	True				
ANR	2610220	AssignmentExpression	rgb [ 0 ] = ( color & 0x7ff ) * gx_max_color_value / 0x7ff		2610216	0		=			
ANR	2610221	ArrayIndexing	rgb [ 0 ]		2610216	0					
ANR	2610222	Identifier	rgb		2610216	0					
ANR	2610223	PrimaryExpression	0		2610216	1					
ANR	2610224	MultiplicativeExpression	( color & 0x7ff ) * gx_max_color_value / 0x7ff		2610216	1		*			
ANR	2610225	BitAndExpression	color & 0x7ff		2610216	0		&			
ANR	2610226	Identifier	color		2610216	0					
ANR	2610227	PrimaryExpression	0x7ff		2610216	1					
ANR	2610228	MultiplicativeExpression	gx_max_color_value / 0x7ff		2610216	1		/			
ANR	2610229	Identifier	gx_max_color_value		2610216	0					
ANR	2610230	PrimaryExpression	0x7ff		2610216	1					
ANR	2610231	ExpressionStatement	rgb [ 1 ] = ( ( color >> 21 ) & 0x7ff ) * gx_max_color_value / 0x7ff	865:4:26764:26825	2610216	1	True				
ANR	2610232	AssignmentExpression	rgb [ 1 ] = ( ( color >> 21 ) & 0x7ff ) * gx_max_color_value / 0x7ff		2610216	0		=			
ANR	2610233	ArrayIndexing	rgb [ 1 ]		2610216	0					
ANR	2610234	Identifier	rgb		2610216	0					
ANR	2610235	PrimaryExpression	1		2610216	1					
ANR	2610236	MultiplicativeExpression	( ( color >> 21 ) & 0x7ff ) * gx_max_color_value / 0x7ff		2610216	1		*			
ANR	2610237	BitAndExpression	( color >> 21 ) & 0x7ff		2610216	0		&			
ANR	2610238	ShiftExpression	color >> 21		2610216	0		>>			
ANR	2610239	Identifier	color		2610216	0					
ANR	2610240	PrimaryExpression	21		2610216	1					
ANR	2610241	PrimaryExpression	0x7ff		2610216	1					
ANR	2610242	MultiplicativeExpression	gx_max_color_value / 0x7ff		2610216	1		/			
ANR	2610243	Identifier	gx_max_color_value		2610216	0					
ANR	2610244	PrimaryExpression	0x7ff		2610216	1					
ANR	2610245	ExpressionStatement	rgb [ 2 ] = ( ( color >> 11 ) & 0x3ff ) * gx_max_color_value / 0x3ff	866:4:26831:26892	2610216	2	True				
ANR	2610246	AssignmentExpression	rgb [ 2 ] = ( ( color >> 11 ) & 0x3ff ) * gx_max_color_value / 0x3ff		2610216	0		=			
ANR	2610247	ArrayIndexing	rgb [ 2 ]		2610216	0					
ANR	2610248	Identifier	rgb		2610216	0					
ANR	2610249	PrimaryExpression	2		2610216	1					
ANR	2610250	MultiplicativeExpression	( ( color >> 11 ) & 0x3ff ) * gx_max_color_value / 0x3ff		2610216	1		*			
ANR	2610251	BitAndExpression	( color >> 11 ) & 0x3ff		2610216	0		&			
ANR	2610252	ShiftExpression	color >> 11		2610216	0		>>			
ANR	2610253	Identifier	color		2610216	0					
ANR	2610254	PrimaryExpression	11		2610216	1					
ANR	2610255	PrimaryExpression	0x3ff		2610216	1					
ANR	2610256	MultiplicativeExpression	gx_max_color_value / 0x3ff		2610216	1		/			
ANR	2610257	Identifier	gx_max_color_value		2610216	0					
ANR	2610258	PrimaryExpression	0x3ff		2610216	1					
ANR	2610259	ReturnStatement	return - 1 ;	867:4:26898:26907	2610216	3	True				
ANR	2610260	UnaryOperationExpression	- 1		2610216	0					
ANR	2610261	UnaryOperator	-		2610216	0					
ANR	2610262	PrimaryExpression	1		2610216	1					
ANR	2610263	ReturnType	static int		2610216	1					
ANR	2610264	Identifier	x_rg32x_alt_map_color		2610216	2					
ANR	2610265	ParameterList	"gx_device * dev , gx_color_index color , gx_color_value rgb [ 3 ]"		2610216	3					
ANR	2610266	Parameter	gx_device * dev	861:22:26615:26629	2610216	0	True				
ANR	2610267	ParameterType	gx_device *		2610216	0					
ANR	2610268	Identifier	dev		2610216	1					
ANR	2610269	Parameter	gx_color_index color	861:39:26632:26651	2610216	1	True				
ANR	2610270	ParameterType	gx_color_index		2610216	0					
ANR	2610271	Identifier	color		2610216	1					
ANR	2610272	Parameter	gx_color_value rgb [ 3 ]	862:22:26676:26696	2610216	2	True				
ANR	2610273	ParameterType	gx_color_value [ 3 ]		2610216	0					
ANR	2610274	Identifier	rgb		2610216	1					
ANR	2610275	CFGEntryNode	ENTRY		2610216		True				
ANR	2610276	CFGExitNode	EXIT		2610216		True				
ANR	2610277	Symbol	dev		2610216						
ANR	2610278	Symbol	color		2610216						
ANR	2610279	Symbol	gx_max_color_value		2610216						
ANR	2610280	Symbol	* rgb		2610216						
ANR	2610281	Symbol	rgb		2610216						
ANR	2610282	DeclStmt									
ANR	2610283	Decl							extern void	extern void ( const gx_device * dev )	gs_lib_register_device
ANR	2610284	Function	gs_shared_init	872:0:26992:27607							
ANR	2610285	FunctionDef	gs_shared_init ()		2610284	0					
ANR	2610286	CompoundStatement		874:0:27018:27607	2610284	0					
ANR	2610287	ExpressionStatement	gs_lib_register_device ( ( const gx_device * ) & gs_x11_device )	875:2:27022:27079	2610284	0	True				
ANR	2610288	CallExpression	gs_lib_register_device ( ( const gx_device * ) & gs_x11_device )		2610284	0					
ANR	2610289	Callee	gs_lib_register_device		2610284	0					
ANR	2610290	Identifier	gs_lib_register_device		2610284	0					
ANR	2610291	ArgumentList	( const gx_device * ) & gs_x11_device		2610284	1					
ANR	2610292	Argument	( const gx_device * ) & gs_x11_device		2610284	0					
ANR	2610293	CastExpression	( const gx_device * ) & gs_x11_device		2610284	0					
ANR	2610294	CastTarget	const gx_device *		2610284	0					
ANR	2610295	UnaryOperationExpression	& gs_x11_device		2610284	1					
ANR	2610296	UnaryOperator	&		2610284	0					
ANR	2610297	Identifier	gs_x11_device		2610284	1					
ANR	2610298	ExpressionStatement	gs_lib_register_device ( ( const gx_device * ) & gs_x11alpha_device )	876:2:27083:27145	2610284	1	True				
ANR	2610299	CallExpression	gs_lib_register_device ( ( const gx_device * ) & gs_x11alpha_device )		2610284	0					
ANR	2610300	Callee	gs_lib_register_device		2610284	0					
ANR	2610301	Identifier	gs_lib_register_device		2610284	0					
ANR	2610302	ArgumentList	( const gx_device * ) & gs_x11alpha_device		2610284	1					
ANR	2610303	Argument	( const gx_device * ) & gs_x11alpha_device		2610284	0					
ANR	2610304	CastExpression	( const gx_device * ) & gs_x11alpha_device		2610284	0					
ANR	2610305	CastTarget	const gx_device *		2610284	0					
ANR	2610306	UnaryOperationExpression	& gs_x11alpha_device		2610284	1					
ANR	2610307	UnaryOperator	&		2610284	0					
ANR	2610308	Identifier	gs_x11alpha_device		2610284	1					
ANR	2610309	ExpressionStatement	gs_lib_register_device ( ( const gx_device * ) & gs_x11cmyk_device )	877:2:27149:27210	2610284	2	True				
ANR	2610310	CallExpression	gs_lib_register_device ( ( const gx_device * ) & gs_x11cmyk_device )		2610284	0					
ANR	2610311	Callee	gs_lib_register_device		2610284	0					
ANR	2610312	Identifier	gs_lib_register_device		2610284	0					
ANR	2610313	ArgumentList	( const gx_device * ) & gs_x11cmyk_device		2610284	1					
ANR	2610314	Argument	( const gx_device * ) & gs_x11cmyk_device		2610284	0					
ANR	2610315	CastExpression	( const gx_device * ) & gs_x11cmyk_device		2610284	0					
ANR	2610316	CastTarget	const gx_device *		2610284	0					
ANR	2610317	UnaryOperationExpression	& gs_x11cmyk_device		2610284	1					
ANR	2610318	UnaryOperator	&		2610284	0					
ANR	2610319	Identifier	gs_x11cmyk_device		2610284	1					
ANR	2610320	ExpressionStatement	gs_lib_register_device ( ( const gx_device * ) & gs_x11cmyk2_device )	878:2:27214:27276	2610284	3	True				
ANR	2610321	CallExpression	gs_lib_register_device ( ( const gx_device * ) & gs_x11cmyk2_device )		2610284	0					
ANR	2610322	Callee	gs_lib_register_device		2610284	0					
ANR	2610323	Identifier	gs_lib_register_device		2610284	0					
ANR	2610324	ArgumentList	( const gx_device * ) & gs_x11cmyk2_device		2610284	1					
ANR	2610325	Argument	( const gx_device * ) & gs_x11cmyk2_device		2610284	0					
ANR	2610326	CastExpression	( const gx_device * ) & gs_x11cmyk2_device		2610284	0					
ANR	2610327	CastTarget	const gx_device *		2610284	0					
ANR	2610328	UnaryOperationExpression	& gs_x11cmyk2_device		2610284	1					
ANR	2610329	UnaryOperator	&		2610284	0					
ANR	2610330	Identifier	gs_x11cmyk2_device		2610284	1					
ANR	2610331	ExpressionStatement	gs_lib_register_device ( ( const gx_device * ) & gs_x11cmyk4_device )	879:2:27280:27342	2610284	4	True				
ANR	2610332	CallExpression	gs_lib_register_device ( ( const gx_device * ) & gs_x11cmyk4_device )		2610284	0					
ANR	2610333	Callee	gs_lib_register_device		2610284	0					
ANR	2610334	Identifier	gs_lib_register_device		2610284	0					
ANR	2610335	ArgumentList	( const gx_device * ) & gs_x11cmyk4_device		2610284	1					
ANR	2610336	Argument	( const gx_device * ) & gs_x11cmyk4_device		2610284	0					
ANR	2610337	CastExpression	( const gx_device * ) & gs_x11cmyk4_device		2610284	0					
ANR	2610338	CastTarget	const gx_device *		2610284	0					
ANR	2610339	UnaryOperationExpression	& gs_x11cmyk4_device		2610284	1					
ANR	2610340	UnaryOperator	&		2610284	0					
ANR	2610341	Identifier	gs_x11cmyk4_device		2610284	1					
ANR	2610342	ExpressionStatement	gs_lib_register_device ( ( const gx_device * ) & gs_x11cmyk8_device )	880:2:27346:27408	2610284	5	True				
ANR	2610343	CallExpression	gs_lib_register_device ( ( const gx_device * ) & gs_x11cmyk8_device )		2610284	0					
ANR	2610344	Callee	gs_lib_register_device		2610284	0					
ANR	2610345	Identifier	gs_lib_register_device		2610284	0					
ANR	2610346	ArgumentList	( const gx_device * ) & gs_x11cmyk8_device		2610284	1					
ANR	2610347	Argument	( const gx_device * ) & gs_x11cmyk8_device		2610284	0					
ANR	2610348	CastExpression	( const gx_device * ) & gs_x11cmyk8_device		2610284	0					
ANR	2610349	CastTarget	const gx_device *		2610284	0					
ANR	2610350	UnaryOperationExpression	& gs_x11cmyk8_device		2610284	1					
ANR	2610351	UnaryOperator	&		2610284	0					
ANR	2610352	Identifier	gs_x11cmyk8_device		2610284	1					
ANR	2610353	ExpressionStatement	gs_lib_register_device ( ( const gx_device * ) & gs_x11gray2_device )	881:2:27412:27474	2610284	6	True				
ANR	2610354	CallExpression	gs_lib_register_device ( ( const gx_device * ) & gs_x11gray2_device )		2610284	0					
ANR	2610355	Callee	gs_lib_register_device		2610284	0					
ANR	2610356	Identifier	gs_lib_register_device		2610284	0					
ANR	2610357	ArgumentList	( const gx_device * ) & gs_x11gray2_device		2610284	1					
ANR	2610358	Argument	( const gx_device * ) & gs_x11gray2_device		2610284	0					
ANR	2610359	CastExpression	( const gx_device * ) & gs_x11gray2_device		2610284	0					
ANR	2610360	CastTarget	const gx_device *		2610284	0					
ANR	2610361	UnaryOperationExpression	& gs_x11gray2_device		2610284	1					
ANR	2610362	UnaryOperator	&		2610284	0					
ANR	2610363	Identifier	gs_x11gray2_device		2610284	1					
ANR	2610364	ExpressionStatement	gs_lib_register_device ( ( const gx_device * ) & gs_x11gray4_device )	882:2:27478:27540	2610284	7	True				
ANR	2610365	CallExpression	gs_lib_register_device ( ( const gx_device * ) & gs_x11gray4_device )		2610284	0					
ANR	2610366	Callee	gs_lib_register_device		2610284	0					
ANR	2610367	Identifier	gs_lib_register_device		2610284	0					
ANR	2610368	ArgumentList	( const gx_device * ) & gs_x11gray4_device		2610284	1					
ANR	2610369	Argument	( const gx_device * ) & gs_x11gray4_device		2610284	0					
ANR	2610370	CastExpression	( const gx_device * ) & gs_x11gray4_device		2610284	0					
ANR	2610371	CastTarget	const gx_device *		2610284	0					
ANR	2610372	UnaryOperationExpression	& gs_x11gray4_device		2610284	1					
ANR	2610373	UnaryOperator	&		2610284	0					
ANR	2610374	Identifier	gs_x11gray4_device		2610284	1					
ANR	2610375	ExpressionStatement	gs_lib_register_device ( ( const gx_device * ) & gs_x11mono_device )	883:2:27544:27605	2610284	8	True				
ANR	2610376	CallExpression	gs_lib_register_device ( ( const gx_device * ) & gs_x11mono_device )		2610284	0					
ANR	2610377	Callee	gs_lib_register_device		2610284	0					
ANR	2610378	Identifier	gs_lib_register_device		2610284	0					
ANR	2610379	ArgumentList	( const gx_device * ) & gs_x11mono_device		2610284	1					
ANR	2610380	Argument	( const gx_device * ) & gs_x11mono_device		2610284	0					
ANR	2610381	CastExpression	( const gx_device * ) & gs_x11mono_device		2610284	0					
ANR	2610382	CastTarget	const gx_device *		2610284	0					
ANR	2610383	UnaryOperationExpression	& gs_x11mono_device		2610284	1					
ANR	2610384	UnaryOperator	&		2610284	0					
ANR	2610385	Identifier	gs_x11mono_device		2610284	1					
ANR	2610386	ReturnType	void		2610284	1					
ANR	2610387	Identifier	gs_shared_init		2610284	2					
ANR	2610388	ParameterList			2610284	3					
ANR	2610389	CFGEntryNode	ENTRY		2610284		True				
ANR	2610390	CFGExitNode	EXIT		2610284		True				
ANR	2610391	Symbol	& gs_x11cmyk2_device		2610284						
ANR	2610392	Symbol	& gs_x11gray4_device		2610284						
ANR	2610393	Symbol	& gs_x11mono_device		2610284						
ANR	2610394	Symbol	& gs_x11alpha_device		2610284						
ANR	2610395	Symbol	& gs_x11gray2_device		2610284						
ANR	2610396	Symbol	& gs_x11cmyk4_device		2610284						
ANR	2610397	Symbol	& gs_x11cmyk8_device		2610284						
ANR	2610398	Symbol	& gs_x11_device		2610284						
ANR	2610399	Symbol	& gs_x11cmyk_device		2610284						
