command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8111735	File	data/converged/CVE-2018-16863_ghostpdl/pcl_pcl_pcwhtidx.c								
ANR	8111736	Function	find_first_white	28:0:830:1076							
ANR	8111737	FunctionDef	"find_first_white (const byte * ptbl , int num_entries)"		8111736	0					
ANR	8111738	CompoundStatement		30:0:894:1076	8111736	0					
ANR	8111739	IdentifierDeclStatement	int i ;	31:4:900:905	8111736	0	True				
ANR	8111740	IdentifierDecl	i		8111736	0					
ANR	8111741	IdentifierDeclType	int		8111736	0					
ANR	8111742	Identifier	i		8111736	1					
ANR	8111743	ForStatement	for ( i = 0 ; i < 3 * num_entries ; i += 3 )		8111736	1					
ANR	8111744	ForInit	i = 0 ;	33:9:917:922	8111736	0	True				
ANR	8111745	AssignmentExpression	i = 0		8111736	0		=			
ANR	8111746	Identifier	i		8111736	0					
ANR	8111747	PrimaryExpression	0		8111736	1					
ANR	8111748	Condition	i < 3 * num_entries	33:16:924:942	8111736	1	True				
ANR	8111749	RelationalExpression	i < 3 * num_entries		8111736	0		<			
ANR	8111750	Identifier	i		8111736	0					
ANR	8111751	MultiplicativeExpression	3 * num_entries		8111736	1		*			
ANR	8111752	PrimaryExpression	3		8111736	0					
ANR	8111753	Identifier	num_entries		8111736	1					
ANR	8111754	AssignmentExpression	i += 3	33:37:945:950	8111736	2	True	+=			
ANR	8111755	Identifier	i		8111736	0					
ANR	8111756	PrimaryExpression	3		8111736	1					
ANR	8111757	CompoundStatement		4:45:58:58	8111736	3					
ANR	8111758	IfStatement	if ( ( ptbl [ i ] == 255 ) && ( ptbl [ i + 1 ] == 255 ) && ( ptbl [ i + 2 ] == 255 ) )		8111736	0					
ANR	8111759	Condition	( ptbl [ i ] == 255 ) && ( ptbl [ i + 1 ] == 255 ) && ( ptbl [ i + 2 ] == 255 )	34:12:967:1030	8111736	0	True				
ANR	8111760	AndExpression	( ptbl [ i ] == 255 ) && ( ptbl [ i + 1 ] == 255 ) && ( ptbl [ i + 2 ] == 255 )		8111736	0		&&			
ANR	8111761	EqualityExpression	ptbl [ i ] == 255		8111736	0		==			
ANR	8111762	ArrayIndexing	ptbl [ i ]		8111736	0					
ANR	8111763	Identifier	ptbl		8111736	0					
ANR	8111764	Identifier	i		8111736	1					
ANR	8111765	PrimaryExpression	255		8111736	1					
ANR	8111766	AndExpression	( ptbl [ i + 1 ] == 255 ) && ( ptbl [ i + 2 ] == 255 )		8111736	1		&&			
ANR	8111767	EqualityExpression	ptbl [ i + 1 ] == 255		8111736	0		==			
ANR	8111768	ArrayIndexing	ptbl [ i + 1 ]		8111736	0					
ANR	8111769	Identifier	ptbl		8111736	0					
ANR	8111770	AdditiveExpression	i + 1		8111736	1		+			
ANR	8111771	Identifier	i		8111736	0					
ANR	8111772	PrimaryExpression	1		8111736	1					
ANR	8111773	PrimaryExpression	255		8111736	1					
ANR	8111774	EqualityExpression	ptbl [ i + 2 ] == 255		8111736	1		==			
ANR	8111775	ArrayIndexing	ptbl [ i + 2 ]		8111736	0					
ANR	8111776	Identifier	ptbl		8111736	0					
ANR	8111777	AdditiveExpression	i + 2		8111736	1		+			
ANR	8111778	Identifier	i		8111736	0					
ANR	8111779	PrimaryExpression	2		8111736	1					
ANR	8111780	PrimaryExpression	255		8111736	1					
ANR	8111781	BreakStatement	break ;	35:12:1045:1050	8111736	1	True				
ANR	8111782	ReturnStatement	return i / 3 ;	37:4:1062:1074	8111736	2	True				
ANR	8111783	MultiplicativeExpression	i / 3		8111736	0		/			
ANR	8111784	Identifier	i		8111736	0					
ANR	8111785	PrimaryExpression	3		8111736	1					
ANR	8111786	ReturnType	static int		8111736	1					
ANR	8111787	Identifier	find_first_white		8111736	2					
ANR	8111788	ParameterList	"const byte * ptbl , int num_entries"		8111736	3					
ANR	8111789	Parameter	const byte * ptbl	29:17:858:874	8111736	0	True				
ANR	8111790	ParameterType	const byte *		8111736	0					
ANR	8111791	Identifier	ptbl		8111736	1					
ANR	8111792	Parameter	int num_entries	29:36:877:891	8111736	1	True				
ANR	8111793	ParameterType	int		8111736	0					
ANR	8111794	Identifier	num_entries		8111736	1					
ANR	8111795	CFGEntryNode	ENTRY		8111736		True				
ANR	8111796	CFGExitNode	EXIT		8111736		True				
ANR	8111797	Symbol	* i		8111736						
ANR	8111798	Symbol	* ptbl		8111736						
ANR	8111799	Symbol	i		8111736						
ANR	8111800	Symbol	ptbl		8111736						
ANR	8111801	Symbol	num_entries		8111736						
ANR	8111802	Function	build_remap_array8	46:0:1310:1974							
ANR	8111803	FunctionDef	"build_remap_array8 (byte * pmap , int num_entries , int b_per_p)"		8111802	0					
ANR	8111804	CompoundStatement		51:0:1531:1974	8111802	0					
ANR	8111805	IdentifierDeclStatement	byte tmp_map [ 256 ] ;	52:4:1537:1554	8111802	0	True				
ANR	8111806	IdentifierDecl	tmp_map [ 256 ]		8111802	0					
ANR	8111807	IdentifierDeclType	byte [ 256 ]		8111802	0					
ANR	8111808	Identifier	tmp_map		8111802	1					
ANR	8111809	PrimaryExpression	256		8111802	2					
ANR	8111810	IdentifierDeclStatement	int i ;	53:4:1560:1565	8111802	1	True				
ANR	8111811	IdentifierDecl	i		8111802	0					
ANR	8111812	IdentifierDeclType	int		8111802	0					
ANR	8111813	Identifier	i		8111802	1					
ANR	8111814	IdentifierDeclStatement	int pix_per_byte = 8 / b_per_p ;	54:4:1571:1601	8111802	2	True				
ANR	8111815	IdentifierDecl	pix_per_byte = 8 / b_per_p		8111802	0					
ANR	8111816	IdentifierDeclType	int		8111802	0					
ANR	8111817	Identifier	pix_per_byte		8111802	1					
ANR	8111818	AssignmentExpression	pix_per_byte = 8 / b_per_p		8111802	2		=			
ANR	8111819	Identifier	pix_per_byte		8111802	0					
ANR	8111820	MultiplicativeExpression	8 / b_per_p		8111802	1		/			
ANR	8111821	PrimaryExpression	8		8111802	0					
ANR	8111822	Identifier	b_per_p		8111802	1					
ANR	8111823	IdentifierDeclStatement	uint mask = ( 1 << b_per_p ) - 1 ;	55:4:1607:1637	8111802	3	True				
ANR	8111824	IdentifierDecl	mask = ( 1 << b_per_p ) - 1		8111802	0					
ANR	8111825	IdentifierDeclType	uint		8111802	0					
ANR	8111826	Identifier	mask		8111802	1					
ANR	8111827	AssignmentExpression	mask = ( 1 << b_per_p ) - 1		8111802	2		=			
ANR	8111828	Identifier	mask		8111802	0					
ANR	8111829	AdditiveExpression	( 1 << b_per_p ) - 1		8111802	1		-			
ANR	8111830	ShiftExpression	1 << b_per_p		8111802	0		<<			
ANR	8111831	PrimaryExpression	1		8111802	0					
ANR	8111832	Identifier	b_per_p		8111802	1					
ANR	8111833	PrimaryExpression	1		8111802	1					
ANR	8111834	ForStatement	for ( i = 0 ; i < 256 ; i ++ )		8111802	4					
ANR	8111835	ForInit	i = 0 ;	58:9:1695:1700	8111802	0	True				
ANR	8111836	AssignmentExpression	i = 0		8111802	0		=			
ANR	8111837	Identifier	i		8111802	0					
ANR	8111838	PrimaryExpression	0		8111802	1					
ANR	8111839	Condition	i < 256	58:16:1702:1708	8111802	1	True				
ANR	8111840	RelationalExpression	i < 256		8111802	0		<			
ANR	8111841	Identifier	i		8111802	0					
ANR	8111842	PrimaryExpression	256		8111802	1					
ANR	8111843	PostIncDecOperationExpression	i ++	58:25:1711:1713	8111802	2	True				
ANR	8111844	Identifier	i		8111802	0					
ANR	8111845	IncDec	++		8111802	1					
ANR	8111846	CompoundStatement		9:8:194:199	8111802	3					
ANR	8111847	IdentifierDeclStatement	int j ;	59:8:1726:1731	8111802	0	True				
ANR	8111848	IdentifierDecl	j		8111802	0					
ANR	8111849	IdentifierDeclType	int		8111802	0					
ANR	8111850	Identifier	j		8111802	1					
ANR	8111851	ExpressionStatement	tmp_map [ i ] = 0	61:8:1742:1756	8111802	1	True				
ANR	8111852	AssignmentExpression	tmp_map [ i ] = 0		8111802	0		=			
ANR	8111853	ArrayIndexing	tmp_map [ i ]		8111802	0					
ANR	8111854	Identifier	tmp_map		8111802	0					
ANR	8111855	Identifier	i		8111802	1					
ANR	8111856	PrimaryExpression	0		8111802	1					
ANR	8111857	ForStatement	for ( j = 0 ; j < pix_per_byte ; j ++ )		8111802	2					
ANR	8111858	ForInit	j = 0 ;	62:13:1771:1776	8111802	0	True				
ANR	8111859	AssignmentExpression	j = 0		8111802	0		=			
ANR	8111860	Identifier	j		8111802	0					
ANR	8111861	PrimaryExpression	0		8111802	1					
ANR	8111862	Condition	j < pix_per_byte	62:20:1778:1793	8111802	1	True				
ANR	8111863	RelationalExpression	j < pix_per_byte		8111802	0		<			
ANR	8111864	Identifier	j		8111802	0					
ANR	8111865	Identifier	pix_per_byte		8111802	1					
ANR	8111866	PostIncDecOperationExpression	j ++	62:38:1796:1798	8111802	2	True				
ANR	8111867	Identifier	j		8111802	0					
ANR	8111868	IncDec	++		8111802	1					
ANR	8111869	ExpressionStatement	tmp_map [ i ] |= pmap [ ( ( i >> ( j * b_per_p ) ) & mask ) ] << ( j * b_per_p )	63:12:1813:1895	8111802	3	True				
ANR	8111870	AssignmentExpression	tmp_map [ i ] |= pmap [ ( ( i >> ( j * b_per_p ) ) & mask ) ] << ( j * b_per_p )		8111802	0		|=			
ANR	8111871	ArrayIndexing	tmp_map [ i ]		8111802	0					
ANR	8111872	Identifier	tmp_map		8111802	0					
ANR	8111873	Identifier	i		8111802	1					
ANR	8111874	ShiftExpression	pmap [ ( ( i >> ( j * b_per_p ) ) & mask ) ] << ( j * b_per_p )		8111802	1		<<			
ANR	8111875	ArrayIndexing	pmap [ ( ( i >> ( j * b_per_p ) ) & mask ) ]		8111802	0					
ANR	8111876	Identifier	pmap		8111802	0					
ANR	8111877	BitAndExpression	( i >> ( j * b_per_p ) ) & mask		8111802	1		&			
ANR	8111878	ShiftExpression	i >> ( j * b_per_p )		8111802	0		>>			
ANR	8111879	Identifier	i		8111802	0					
ANR	8111880	MultiplicativeExpression	j * b_per_p		8111802	1		*			
ANR	8111881	Identifier	j		8111802	0					
ANR	8111882	Identifier	b_per_p		8111802	1					
ANR	8111883	Identifier	mask		8111802	1					
ANR	8111884	MultiplicativeExpression	j * b_per_p		8111802	1		*			
ANR	8111885	Identifier	j		8111802	0					
ANR	8111886	Identifier	b_per_p		8111802	1					
ANR	8111887	ExpressionStatement	"memcpy ( pmap , tmp_map , 256 )"	68:4:1946:1972	8111802	5	True				
ANR	8111888	CallExpression	"memcpy ( pmap , tmp_map , 256 )"		8111802	0					
ANR	8111889	Callee	memcpy		8111802	0					
ANR	8111890	Identifier	memcpy		8111802	0					
ANR	8111891	ArgumentList	pmap		8111802	1					
ANR	8111892	Argument	pmap		8111802	0					
ANR	8111893	Identifier	pmap		8111802	0					
ANR	8111894	Argument	tmp_map		8111802	1					
ANR	8111895	Identifier	tmp_map		8111802	0					
ANR	8111896	Argument	256		8111802	2					
ANR	8111897	PrimaryExpression	256		8111802	0					
ANR	8111898	ReturnType	static void		8111802	1					
ANR	8111899	Identifier	build_remap_array8		8111802	2					
ANR	8111900	ParameterList	"byte * pmap , int num_entries , int b_per_p"		8111802	3					
ANR	8111901	Parameter	byte * pmap	47:19:1341:1351	8111802	0	True				
ANR	8111902	ParameterType	byte *		8111802	0					
ANR	8111903	Identifier	pmap		8111802	1					
ANR	8111904	Parameter	int num_entries	48:19:1411:1425	8111802	1	True				
ANR	8111905	ParameterType	int		8111802	0					
ANR	8111906	Identifier	num_entries		8111802	1					
ANR	8111907	Parameter	int b_per_p	49:19:1491:1501	8111802	2	True				
ANR	8111908	ParameterType	int		8111802	0					
ANR	8111909	Identifier	b_per_p		8111802	1					
ANR	8111910	CFGEntryNode	ENTRY		8111802		True				
ANR	8111911	CFGExitNode	EXIT		8111802		True				
ANR	8111912	Symbol	* pmap		8111802						
ANR	8111913	Symbol	* mask		8111802						
ANR	8111914	Symbol	* b_per_p		8111802						
ANR	8111915	Symbol	pix_per_byte		8111802						
ANR	8111916	Symbol	b_per_p		8111802						
ANR	8111917	Symbol	i		8111802						
ANR	8111918	Symbol	j		8111802						
ANR	8111919	Symbol	* i		8111802						
ANR	8111920	Symbol	* tmp_map		8111802						
ANR	8111921	Symbol	* j		8111802						
ANR	8111922	Symbol	pmap		8111802						
ANR	8111923	Symbol	num_entries		8111802						
ANR	8111924	Symbol	tmp_map		8111802						
ANR	8111925	Symbol	mask		8111802						
ANR	8111926	Function	build_remap_array	86:0:2733:4405							
ANR	8111927	FunctionDef	"build_remap_array (const byte * ptbl , int num_entries , byte * pmap , int * pfirst_white , int b_per_p , bool for_pattern)"		8111926	0					
ANR	8111928	CompoundStatement		91:0:2916:4405	8111926	0					
ANR	8111929	IdentifierDeclStatement	int first_white ;	92:4:2922:2937	8111926	0	True				
ANR	8111930	IdentifierDecl	first_white		8111926	0					
ANR	8111931	IdentifierDeclType	int		8111926	0					
ANR	8111932	Identifier	first_white		8111926	1					
ANR	8111933	IdentifierDeclStatement	int second_white ;	93:4:2943:2959	8111926	1	True				
ANR	8111934	IdentifierDecl	second_white		8111926	0					
ANR	8111935	IdentifierDeclType	int		8111926	0					
ANR	8111936	Identifier	second_white		8111926	1					
ANR	8111937	IdentifierDeclStatement	int map_size = ( 1 << b_per_p ) ;	94:4:2965:2994	8111926	2	True				
ANR	8111938	IdentifierDecl	map_size = ( 1 << b_per_p )		8111926	0					
ANR	8111939	IdentifierDeclType	int		8111926	0					
ANR	8111940	Identifier	map_size		8111926	1					
ANR	8111941	AssignmentExpression	map_size = ( 1 << b_per_p )		8111926	2		=			
ANR	8111942	Identifier	map_size		8111926	0					
ANR	8111943	ShiftExpression	1 << b_per_p		8111926	1		<<			
ANR	8111944	PrimaryExpression	1		8111926	0					
ANR	8111945	Identifier	b_per_p		8111926	1					
ANR	8111946	IdentifierDeclStatement	bool must_map = ( map_size > num_entries ) ;	95:4:3000:3040	8111926	3	True				
ANR	8111947	IdentifierDecl	must_map = ( map_size > num_entries )		8111926	0					
ANR	8111948	IdentifierDeclType	bool		8111926	0					
ANR	8111949	Identifier	must_map		8111926	1					
ANR	8111950	AssignmentExpression	must_map = ( map_size > num_entries )		8111926	2		=			
ANR	8111951	Identifier	must_map		8111926	0					
ANR	8111952	RelationalExpression	map_size > num_entries		8111926	1		>			
ANR	8111953	Identifier	map_size		8111926	0					
ANR	8111954	Identifier	num_entries		8111926	1					
ANR	8111955	IdentifierDeclStatement	int i ;	96:4:3046:3051	8111926	4	True				
ANR	8111956	IdentifierDecl	i		8111926	0					
ANR	8111957	IdentifierDeclType	int		8111926	0					
ANR	8111958	Identifier	i		8111926	1					
ANR	8111959	IfStatement	if ( num_entries > map_size )		8111926	5					
ANR	8111960	Condition	num_entries > map_size	99:8:3130:3151	8111926	0	True				
ANR	8111961	RelationalExpression	num_entries > map_size		8111926	0		>			
ANR	8111962	Identifier	num_entries		8111926	0					
ANR	8111963	Identifier	map_size		8111926	1					
ANR	8111964	ExpressionStatement	num_entries = map_size	100:8:3162:3184	8111926	1	True				
ANR	8111965	AssignmentExpression	num_entries = map_size		8111926	0		=			
ANR	8111966	Identifier	num_entries		8111926	0					
ANR	8111967	Identifier	map_size		8111926	1					
ANR	8111968	ExpressionStatement	"first_white = find_first_white ( ptbl , num_entries )"	103:4:3267:3316	8111926	6	True				
ANR	8111969	AssignmentExpression	"first_white = find_first_white ( ptbl , num_entries )"		8111926	0		=			
ANR	8111970	Identifier	first_white		8111926	0					
ANR	8111971	CallExpression	"find_first_white ( ptbl , num_entries )"		8111926	1					
ANR	8111972	Callee	find_first_white		8111926	0					
ANR	8111973	Identifier	find_first_white		8111926	0					
ANR	8111974	ArgumentList	ptbl		8111926	1					
ANR	8111975	Argument	ptbl		8111926	0					
ANR	8111976	Identifier	ptbl		8111926	0					
ANR	8111977	Argument	num_entries		8111926	1					
ANR	8111978	Identifier	num_entries		8111926	0					
ANR	8111979	ExpressionStatement	* pfirst_white = first_white	104:4:3322:3349	8111926	7	True				
ANR	8111980	AssignmentExpression	* pfirst_white = first_white		8111926	0		=			
ANR	8111981	UnaryOperationExpression	* pfirst_white		8111926	0					
ANR	8111982	UnaryOperator	*		8111926	0					
ANR	8111983	Identifier	pfirst_white		8111926	1					
ANR	8111984	Identifier	first_white		8111926	1					
ANR	8111985	IfStatement	if ( ( first_white == num_entries ) && ! must_map )		8111926	8					
ANR	8111986	Condition	( first_white == num_entries ) && ! must_map	105:8:3359:3399	8111926	0	True				
ANR	8111987	AndExpression	( first_white == num_entries ) && ! must_map		8111926	0		&&			
ANR	8111988	EqualityExpression	first_white == num_entries		8111926	0		==			
ANR	8111989	Identifier	first_white		8111926	0					
ANR	8111990	Identifier	num_entries		8111926	1					
ANR	8111991	UnaryOperationExpression	! must_map		8111926	1					
ANR	8111992	UnaryOperator	!		8111926	0					
ANR	8111993	Identifier	must_map		8111926	1					
ANR	8111994	ReturnStatement	return false ;	106:8:3410:3422	8111926	1	True				
ANR	8111995	Identifier	false		8111926	0					
ANR	8111996	ExpressionStatement	"second_white = find_first_white ( ptbl + 3 * ( first_white + 1 ) , num_entries - first_white - 1 ) + first_white + 1"	109:4:3495:3649	8111926	9	True				
ANR	8111997	AssignmentExpression	"second_white = find_first_white ( ptbl + 3 * ( first_white + 1 ) , num_entries - first_white - 1 ) + first_white + 1"		8111926	0		=			
ANR	8111998	Identifier	second_white		8111926	0					
ANR	8111999	AdditiveExpression	"find_first_white ( ptbl + 3 * ( first_white + 1 ) , num_entries - first_white - 1 ) + first_white + 1"		8111926	1		+			
ANR	8112000	CallExpression	"find_first_white ( ptbl + 3 * ( first_white + 1 ) , num_entries - first_white - 1 )"		8111926	0					
ANR	8112001	Callee	find_first_white		8111926	0					
ANR	8112002	Identifier	find_first_white		8111926	0					
ANR	8112003	ArgumentList	ptbl + 3 * ( first_white + 1 )		8111926	1					
ANR	8112004	Argument	ptbl + 3 * ( first_white + 1 )		8111926	0					
ANR	8112005	AdditiveExpression	ptbl + 3 * ( first_white + 1 )		8111926	0		+			
ANR	8112006	Identifier	ptbl		8111926	0					
ANR	8112007	MultiplicativeExpression	3 * ( first_white + 1 )		8111926	1		*			
ANR	8112008	PrimaryExpression	3		8111926	0					
ANR	8112009	AdditiveExpression	first_white + 1		8111926	1		+			
ANR	8112010	Identifier	first_white		8111926	0					
ANR	8112011	PrimaryExpression	1		8111926	1					
ANR	8112012	Argument	num_entries - first_white - 1		8111926	1					
ANR	8112013	AdditiveExpression	num_entries - first_white - 1		8111926	0		-			
ANR	8112014	Identifier	num_entries		8111926	0					
ANR	8112015	AdditiveExpression	first_white - 1		8111926	1		-			
ANR	8112016	Identifier	first_white		8111926	0					
ANR	8112017	PrimaryExpression	1		8111926	1					
ANR	8112018	AdditiveExpression	first_white + 1		8111926	1		+			
ANR	8112019	Identifier	first_white		8111926	0					
ANR	8112020	PrimaryExpression	1		8111926	1					
ANR	8112021	IfStatement	if ( ( second_white == num_entries ) && ! must_map )		8111926	10					
ANR	8112022	Condition	( second_white == num_entries ) && ! must_map	112:8:3659:3700	8111926	0	True				
ANR	8112023	AndExpression	( second_white == num_entries ) && ! must_map		8111926	0		&&			
ANR	8112024	EqualityExpression	second_white == num_entries		8111926	0		==			
ANR	8112025	Identifier	second_white		8111926	0					
ANR	8112026	Identifier	num_entries		8111926	1					
ANR	8112027	UnaryOperationExpression	! must_map		8111926	1					
ANR	8112028	UnaryOperator	!		8111926	0					
ANR	8112029	Identifier	must_map		8111926	1					
ANR	8112030	ReturnStatement	return false ;	113:8:3711:3723	8111926	1	True				
ANR	8112031	Identifier	false		8111926	0					
ANR	8112032	ForStatement	for ( i = 0 ; i < second_white ; i ++ )		8111926	11					
ANR	8112033	ForInit	i = 0 ;	116:9:3768:3773	8111926	0	True				
ANR	8112034	AssignmentExpression	i = 0		8111926	0		=			
ANR	8112035	Identifier	i		8111926	0					
ANR	8112036	PrimaryExpression	0		8111926	1					
ANR	8112037	Condition	i < second_white	116:16:3775:3790	8111926	1	True				
ANR	8112038	RelationalExpression	i < second_white		8111926	0		<			
ANR	8112039	Identifier	i		8111926	0					
ANR	8112040	Identifier	second_white		8111926	1					
ANR	8112041	PostIncDecOperationExpression	i ++	116:34:3793:3795	8111926	2	True				
ANR	8112042	Identifier	i		8111926	0					
ANR	8112043	IncDec	++		8111926	1					
ANR	8112044	ExpressionStatement	pmap [ i ] = i	117:8:3806:3817	8111926	3	True				
ANR	8112045	AssignmentExpression	pmap [ i ] = i		8111926	0		=			
ANR	8112046	ArrayIndexing	pmap [ i ]		8111926	0					
ANR	8112047	Identifier	pmap		8111926	0					
ANR	8112048	Identifier	i		8111926	1					
ANR	8112049	Identifier	i		8111926	1					
ANR	8112050	IfStatement	if ( second_white != num_entries )		8111926	12					
ANR	8112051	Condition	second_white != num_entries	119:8:3828:3854	8111926	0	True				
ANR	8112052	EqualityExpression	second_white != num_entries		8111926	0		!=			
ANR	8112053	Identifier	second_white		8111926	0					
ANR	8112054	Identifier	num_entries		8111926	1					
ANR	8112055	ExpressionStatement	pmap [ i ++ ] = first_white	120:8:3865:3888	8111926	1	True				
ANR	8112056	AssignmentExpression	pmap [ i ++ ] = first_white		8111926	0		=			
ANR	8112057	ArrayIndexing	pmap [ i ++ ]		8111926	0					
ANR	8112058	Identifier	pmap		8111926	0					
ANR	8112059	PostIncDecOperationExpression	i ++		8111926	1					
ANR	8112060	Identifier	i		8111926	0					
ANR	8112061	IncDec	++		8111926	1					
ANR	8112062	Identifier	first_white		8111926	1					
ANR	8112063	ForStatement	for ( ; i < map_size ; i ++ )		8111926	13					
ANR	8112064	Condition	i < map_size	122:11:3902:3913	8111926	0	True				
ANR	8112065	RelationalExpression	i < map_size		8111926	0		<			
ANR	8112066	Identifier	i		8111926	0					
ANR	8112067	Identifier	map_size		8111926	1					
ANR	8112068	PostIncDecOperationExpression	i ++	122:25:3916:3918	8111926	1	True				
ANR	8112069	Identifier	i		8111926	0					
ANR	8112070	IncDec	++		8111926	1					
ANR	8112071	CompoundStatement		33:8:1014:1043	8111926	2					
ANR	8112072	IdentifierDeclStatement	int j = i & ( num_entries - 1 ) ;	123:8:3931:3960	8111926	0	True				
ANR	8112073	IdentifierDecl	j = i & ( num_entries - 1 )		8111926	0					
ANR	8112074	IdentifierDeclType	int		8111926	0					
ANR	8112075	Identifier	j		8111926	1					
ANR	8112076	AssignmentExpression	j = i & ( num_entries - 1 )		8111926	2		=			
ANR	8112077	Identifier	j		8111926	0					
ANR	8112078	BitAndExpression	i & ( num_entries - 1 )		8111926	1		&			
ANR	8112079	Identifier	i		8111926	0					
ANR	8112080	AdditiveExpression	num_entries - 1		8111926	1		-			
ANR	8112081	Identifier	num_entries		8111926	0					
ANR	8112082	PrimaryExpression	1		8111926	1					
ANR	8112083	IfStatement	if ( ( ptbl [ 3 * j ] == 255 ) && ( ptbl [ 3 * j + 1 ] == 255 ) && ( ptbl [ 3 * j + 2 ] == 255 ) )		8111926	1					
ANR	8112084	Condition	( ptbl [ 3 * j ] == 255 ) && ( ptbl [ 3 * j + 1 ] == 255 ) && ( ptbl [ 3 * j + 2 ] == 255 )	125:12:4013:4100	8111926	0	True				
ANR	8112085	AndExpression	( ptbl [ 3 * j ] == 255 ) && ( ptbl [ 3 * j + 1 ] == 255 ) && ( ptbl [ 3 * j + 2 ] == 255 )		8111926	0		&&			
ANR	8112086	EqualityExpression	ptbl [ 3 * j ] == 255		8111926	0		==			
ANR	8112087	ArrayIndexing	ptbl [ 3 * j ]		8111926	0					
ANR	8112088	Identifier	ptbl		8111926	0					
ANR	8112089	MultiplicativeExpression	3 * j		8111926	1		*			
ANR	8112090	PrimaryExpression	3		8111926	0					
ANR	8112091	Identifier	j		8111926	1					
ANR	8112092	PrimaryExpression	255		8111926	1					
ANR	8112093	AndExpression	( ptbl [ 3 * j + 1 ] == 255 ) && ( ptbl [ 3 * j + 2 ] == 255 )		8111926	1		&&			
ANR	8112094	EqualityExpression	ptbl [ 3 * j + 1 ] == 255		8111926	0		==			
ANR	8112095	ArrayIndexing	ptbl [ 3 * j + 1 ]		8111926	0					
ANR	8112096	Identifier	ptbl		8111926	0					
ANR	8112097	AdditiveExpression	3 * j + 1		8111926	1		+			
ANR	8112098	MultiplicativeExpression	3 * j		8111926	0		*			
ANR	8112099	PrimaryExpression	3		8111926	0					
ANR	8112100	Identifier	j		8111926	1					
ANR	8112101	PrimaryExpression	1		8111926	1					
ANR	8112102	PrimaryExpression	255		8111926	1					
ANR	8112103	EqualityExpression	ptbl [ 3 * j + 2 ] == 255		8111926	1		==			
ANR	8112104	ArrayIndexing	ptbl [ 3 * j + 2 ]		8111926	0					
ANR	8112105	Identifier	ptbl		8111926	0					
ANR	8112106	AdditiveExpression	3 * j + 2		8111926	1		+			
ANR	8112107	MultiplicativeExpression	3 * j		8111926	0		*			
ANR	8112108	PrimaryExpression	3		8111926	0					
ANR	8112109	Identifier	j		8111926	1					
ANR	8112110	PrimaryExpression	2		8111926	1					
ANR	8112111	PrimaryExpression	255		8111926	1					
ANR	8112112	ExpressionStatement	pmap [ i ] = first_white	127:12:4115:4136	8111926	1	True				
ANR	8112113	AssignmentExpression	pmap [ i ] = first_white		8111926	0		=			
ANR	8112114	ArrayIndexing	pmap [ i ]		8111926	0					
ANR	8112115	Identifier	pmap		8111926	0					
ANR	8112116	Identifier	i		8111926	1					
ANR	8112117	Identifier	first_white		8111926	1					
ANR	8112118	ElseStatement	else		8111926	0					
ANR	8112119	ExpressionStatement	pmap [ i ] = j	129:12:4163:4174	8111926	0	True				
ANR	8112120	AssignmentExpression	pmap [ i ] = j		8111926	0		=			
ANR	8112121	ArrayIndexing	pmap [ i ]		8111926	0					
ANR	8112122	Identifier	pmap		8111926	0					
ANR	8112123	Identifier	i		8111926	1					
ANR	8112124	Identifier	j		8111926	1					
ANR	8112125	IfStatement	if ( ( b_per_p < 8 ) && ( ( 8 % b_per_p ) == 0 ) && ( pcl_cs_indexed_palette_size >= 8 ) )		8111926	14					
ANR	8112126	Condition	( b_per_p < 8 ) && ( ( 8 % b_per_p ) == 0 ) && ( pcl_cs_indexed_palette_size >= 8 )	132:8:4246:4328	8111926	0	True				
ANR	8112127	AndExpression	( b_per_p < 8 ) && ( ( 8 % b_per_p ) == 0 ) && ( pcl_cs_indexed_palette_size >= 8 )		8111926	0		&&			
ANR	8112128	RelationalExpression	b_per_p < 8		8111926	0		<			
ANR	8112129	Identifier	b_per_p		8111926	0					
ANR	8112130	PrimaryExpression	8		8111926	1					
ANR	8112131	AndExpression	( ( 8 % b_per_p ) == 0 ) && ( pcl_cs_indexed_palette_size >= 8 )		8111926	1		&&			
ANR	8112132	EqualityExpression	( 8 % b_per_p ) == 0		8111926	0		==			
ANR	8112133	MultiplicativeExpression	8 % b_per_p		8111926	0		%			
ANR	8112134	PrimaryExpression	8		8111926	0					
ANR	8112135	Identifier	b_per_p		8111926	1					
ANR	8112136	PrimaryExpression	0		8111926	1					
ANR	8112137	RelationalExpression	pcl_cs_indexed_palette_size >= 8		8111926	1		>=			
ANR	8112138	Identifier	pcl_cs_indexed_palette_size		8111926	0					
ANR	8112139	PrimaryExpression	8		8111926	1					
ANR	8112140	ExpressionStatement	"build_remap_array8 ( pmap , num_entries , b_per_p )"	134:8:4339:4385	8111926	1	True				
ANR	8112141	CallExpression	"build_remap_array8 ( pmap , num_entries , b_per_p )"		8111926	0					
ANR	8112142	Callee	build_remap_array8		8111926	0					
ANR	8112143	Identifier	build_remap_array8		8111926	0					
ANR	8112144	ArgumentList	pmap		8111926	1					
ANR	8112145	Argument	pmap		8111926	0					
ANR	8112146	Identifier	pmap		8111926	0					
ANR	8112147	Argument	num_entries		8111926	1					
ANR	8112148	Identifier	num_entries		8111926	0					
ANR	8112149	Argument	b_per_p		8111926	2					
ANR	8112150	Identifier	b_per_p		8111926	0					
ANR	8112151	ReturnStatement	return true ;	136:4:4392:4403	8111926	15	True				
ANR	8112152	Identifier	true		8111926	0					
ANR	8112153	ReturnType	static bool		8111926	1					
ANR	8112154	Identifier	build_remap_array		8111926	2					
ANR	8112155	ParameterList	"const byte * ptbl , int num_entries , byte * pmap , int * pfirst_white , int b_per_p , bool for_pattern"		8111926	3					
ANR	8112156	Parameter	const byte * ptbl	87:18:2763:2779	8111926	0	True				
ANR	8112157	ParameterType	const byte *		8111926	0					
ANR	8112158	Identifier	ptbl		8111926	1					
ANR	8112159	Parameter	int num_entries	88:18:2800:2814	8111926	1	True				
ANR	8112160	ParameterType	int		8111926	0					
ANR	8112161	Identifier	num_entries		8111926	1					
ANR	8112162	Parameter	byte * pmap	89:18:2835:2845	8111926	2	True				
ANR	8112163	ParameterType	byte *		8111926	0					
ANR	8112164	Identifier	pmap		8111926	1					
ANR	8112165	Parameter	int * pfirst_white	90:18:2866:2882	8111926	3	True				
ANR	8112166	ParameterType	int *		8111926	0					
ANR	8112167	Identifier	pfirst_white		8111926	1					
ANR	8112168	Parameter	int b_per_p	90:37:2885:2895	8111926	4	True				
ANR	8112169	ParameterType	int		8111926	0					
ANR	8112170	Identifier	b_per_p		8111926	1					
ANR	8112171	Parameter	bool for_pattern	90:50:2898:2913	8111926	5	True				
ANR	8112172	ParameterType	bool		8111926	0					
ANR	8112173	Identifier	for_pattern		8111926	1					
ANR	8112174	CFGEntryNode	ENTRY		8111926		True				
ANR	8112175	CFGExitNode	EXIT		8111926		True				
ANR	8112176	Symbol	* pmap		8111926						
ANR	8112177	Symbol	for_pattern		8111926						
ANR	8112178	Symbol	must_map		8111926						
ANR	8112179	Symbol	find_first_white		8111926						
ANR	8112180	Symbol	* ptbl		8111926						
ANR	8112181	Symbol	* pfirst_white		8111926						
ANR	8112182	Symbol	false		8111926						
ANR	8112183	Symbol	b_per_p		8111926						
ANR	8112184	Symbol	i		8111926						
ANR	8112185	Symbol	j		8111926						
ANR	8112186	Symbol	pfirst_white		8111926						
ANR	8112187	Symbol	map_size		8111926						
ANR	8112188	Symbol	* i		8111926						
ANR	8112189	Symbol	* j		8111926						
ANR	8112190	Symbol	first_white		8111926						
ANR	8112191	Symbol	pmap		8111926						
ANR	8112192	Symbol	true		8111926						
ANR	8112193	Symbol	ptbl		8111926						
ANR	8112194	Symbol	pcl_cs_indexed_palette_size		8111926						
ANR	8112195	Symbol	second_white		8111926						
ANR	8112196	Symbol	num_entries		8111926						
ANR	8112197	Function	remap_raster_ary8	144:0:4619:5109							
ANR	8112198	FunctionDef	"remap_raster_ary8 (const byte * inp , byte * outp , int npixels , int b_per_p , const byte * pmap)"		8112197	0					
ANR	8112199	CompoundStatement		150:0:5007:5109	8112197	0					
ANR	8112200	IdentifierDeclStatement	int nbytes = ( npixels * b_per_p ) / 8 ;	151:4:5013:5049	8112197	0	True				
ANR	8112201	IdentifierDecl	nbytes = ( npixels * b_per_p ) / 8		8112197	0					
ANR	8112202	IdentifierDeclType	int		8112197	0					
ANR	8112203	Identifier	nbytes		8112197	1					
ANR	8112204	AssignmentExpression	nbytes = ( npixels * b_per_p ) / 8		8112197	2		=			
ANR	8112205	Identifier	nbytes		8112197	0					
ANR	8112206	MultiplicativeExpression	( npixels * b_per_p ) / 8		8112197	1		/			
ANR	8112207	MultiplicativeExpression	npixels * b_per_p		8112197	0		*			
ANR	8112208	Identifier	npixels		8112197	0					
ANR	8112209	Identifier	b_per_p		8112197	1					
ANR	8112210	PrimaryExpression	8		8112197	1					
ANR	8112211	WhileStatement	while ( nbytes -- > 0 )		8112197	1					
ANR	8112212	Condition	nbytes -- > 0	153:11:5063:5074	8112197	0	True				
ANR	8112213	RelationalExpression	nbytes -- > 0		8112197	0		>			
ANR	8112214	PostIncDecOperationExpression	nbytes --		8112197	0					
ANR	8112215	Identifier	nbytes		8112197	0					
ANR	8112216	IncDec	--		8112197	1					
ANR	8112217	PrimaryExpression	0		8112197	1					
ANR	8112218	ExpressionStatement	* outp ++ = pmap [ * inp ++ ]	154:8:5085:5107	8112197	1	True				
ANR	8112219	AssignmentExpression	* outp ++ = pmap [ * inp ++ ]		8112197	0		=			
ANR	8112220	UnaryOperationExpression	* outp ++		8112197	0					
ANR	8112221	UnaryOperator	*		8112197	0					
ANR	8112222	PostIncDecOperationExpression	outp ++		8112197	1					
ANR	8112223	Identifier	outp		8112197	0					
ANR	8112224	IncDec	++		8112197	1					
ANR	8112225	ArrayIndexing	pmap [ * inp ++ ]		8112197	1					
ANR	8112226	Identifier	pmap		8112197	0					
ANR	8112227	UnaryOperationExpression	* inp ++		8112197	1					
ANR	8112228	UnaryOperator	*		8112197	0					
ANR	8112229	PostIncDecOperationExpression	inp ++		8112197	1					
ANR	8112230	Identifier	inp		8112197	0					
ANR	8112231	IncDec	++		8112197	1					
ANR	8112232	ReturnType	static void		8112197	1					
ANR	8112233	Identifier	remap_raster_ary8		8112197	2					
ANR	8112234	ParameterList	"const byte * inp , byte * outp , int npixels , int b_per_p , const byte * pmap"		8112197	3					
ANR	8112235	Parameter	const byte * inp	144:30:4649:4664	8112197	0	True				
ANR	8112236	ParameterType	const byte *		8112197	0					
ANR	8112237	Identifier	inp		8112197	1					
ANR	8112238	Parameter	byte * outp	145:30:4722:4732	8112197	1	True				
ANR	8112239	ParameterType	byte *		8112197	0					
ANR	8112240	Identifier	outp		8112197	1					
ANR	8112241	Parameter	int npixels	146:30:4814:4824	8112197	2	True				
ANR	8112242	ParameterType	int		8112197	0					
ANR	8112243	Identifier	npixels		8112197	1					
ANR	8112244	Parameter	int b_per_p	147:30:4895:4905	8112197	3	True				
ANR	8112245	ParameterType	int		8112197	0					
ANR	8112246	Identifier	b_per_p		8112197	1					
ANR	8112247	Parameter	const byte * pmap	148:30:4964:4980	8112197	4	True				
ANR	8112248	ParameterType	const byte *		8112197	0					
ANR	8112249	Identifier	pmap		8112197	1					
ANR	8112250	CFGEntryNode	ENTRY		8112197		True				
ANR	8112251	CFGExitNode	EXIT		8112197		True				
ANR	8112252	Symbol	npixels		8112197						
ANR	8112253	Symbol	* * inp ++		8112197						
ANR	8112254	Symbol	* pmap		8112197						
ANR	8112255	Symbol	outp		8112197						
ANR	8112256	Symbol	pmap		8112197						
ANR	8112257	Symbol	* outp ++		8112197						
ANR	8112258	Symbol	b_per_p		8112197						
ANR	8112259	Symbol	inp		8112197						
ANR	8112260	Symbol	* inp ++		8112197						
ANR	8112261	Symbol	nbytes		8112197						
ANR	8112262	Function	remap_raster_ary	162:0:5228:5865							
ANR	8112263	FunctionDef	"remap_raster_ary (const byte * inp , byte * outp , int npixels , int b_per_p , const byte * pmap)"		8112262	0					
ANR	8112264	CompoundStatement		168:0:5616:5865	8112262	0					
ANR	8112265	IfStatement	if ( 8 % b_per_p == 0 )		8112262	0					
ANR	8112266	Condition	8 % b_per_p == 0	170:8:5678:5693	8112262	0	True				
ANR	8112267	EqualityExpression	8 % b_per_p == 0		8112262	0		==			
ANR	8112268	MultiplicativeExpression	8 % b_per_p		8112262	0		%			
ANR	8112269	PrimaryExpression	8		8112262	0					
ANR	8112270	Identifier	b_per_p		8112262	1					
ANR	8112271	PrimaryExpression	0		8112262	1					
ANR	8112272	CompoundStatement		3:26:79:79	8112262	1					
ANR	8112273	ExpressionStatement	"remap_raster_ary8 ( inp , outp , npixels , b_per_p , pmap )"	171:8:5706:5758	8112262	0	True				
ANR	8112274	CallExpression	"remap_raster_ary8 ( inp , outp , npixels , b_per_p , pmap )"		8112262	0					
ANR	8112275	Callee	remap_raster_ary8		8112262	0					
ANR	8112276	Identifier	remap_raster_ary8		8112262	0					
ANR	8112277	ArgumentList	inp		8112262	1					
ANR	8112278	Argument	inp		8112262	0					
ANR	8112279	Identifier	inp		8112262	0					
ANR	8112280	Argument	outp		8112262	1					
ANR	8112281	Identifier	outp		8112262	0					
ANR	8112282	Argument	npixels		8112262	2					
ANR	8112283	Identifier	npixels		8112262	0					
ANR	8112284	Argument	b_per_p		8112262	3					
ANR	8112285	Identifier	b_per_p		8112262	0					
ANR	8112286	Argument	pmap		8112262	4					
ANR	8112287	Identifier	pmap		8112262	0					
ANR	8112288	ReturnStatement	return ;	172:8:5768:5774	8112262	1	True				
ANR	8112289	ExpressionStatement	"gs_warn ( ""Raster bits per pixel do not divide 8"" )"	176:4:5815:5863	8112262	1	True				
ANR	8112290	CallExpression	"gs_warn ( ""Raster bits per pixel do not divide 8"" )"		8112262	0					
ANR	8112291	Callee	gs_warn		8112262	0					
ANR	8112292	Identifier	gs_warn		8112262	0					
ANR	8112293	ArgumentList	"""Raster bits per pixel do not divide 8"""		8112262	1					
ANR	8112294	Argument	"""Raster bits per pixel do not divide 8"""		8112262	0					
ANR	8112295	PrimaryExpression	"""Raster bits per pixel do not divide 8"""		8112262	0					
ANR	8112296	ReturnType	static void		8112262	1					
ANR	8112297	Identifier	remap_raster_ary		8112262	2					
ANR	8112298	ParameterList	"const byte * inp , byte * outp , int npixels , int b_per_p , const byte * pmap"		8112262	3					
ANR	8112299	Parameter	const byte * inp	162:29:5257:5272	8112262	0	True				
ANR	8112300	ParameterType	const byte *		8112262	0					
ANR	8112301	Identifier	inp		8112262	1					
ANR	8112302	Parameter	byte * outp	163:29:5330:5340	8112262	1	True				
ANR	8112303	ParameterType	byte *		8112262	0					
ANR	8112304	Identifier	outp		8112262	1					
ANR	8112305	Parameter	int npixels	164:29:5422:5432	8112262	2	True				
ANR	8112306	ParameterType	int		8112262	0					
ANR	8112307	Identifier	npixels		8112262	1					
ANR	8112308	Parameter	int b_per_p	165:29:5503:5513	8112262	3	True				
ANR	8112309	ParameterType	int		8112262	0					
ANR	8112310	Identifier	b_per_p		8112262	1					
ANR	8112311	Parameter	const byte * pmap	166:29:5572:5588	8112262	4	True				
ANR	8112312	ParameterType	const byte *		8112262	0					
ANR	8112313	Identifier	pmap		8112262	1					
ANR	8112314	CFGEntryNode	ENTRY		8112262		True				
ANR	8112315	CFGExitNode	EXIT		8112262		True				
ANR	8112316	Symbol	npixels		8112262						
ANR	8112317	Symbol	outp		8112262						
ANR	8112318	Symbol	pmap		8112262						
ANR	8112319	Symbol	b_per_p		8112262						
ANR	8112320	Symbol	inp		8112262						
ANR	8112321	Function	pcl_cmap_map_raster	196:0:6664:8432							
ANR	8112322	FunctionDef	"pcl_cmap_map_raster (const pcl_cs_indexed_t * pindexed , int * pfirst_white , const gs_depth_bitmap * pin_pixinfo , gs_depth_bitmap * pout_pixinfo , bool must_copy , gs_memory_t * pmem)"		8112321	0					
ANR	8112323	CompoundStatement		202:0:6927:8432	8112321	0					
ANR	8112324	IdentifierDeclStatement	byte remap [ pcl_cs_indexed_palette_size ] ;	203:4:6933:6972	8112321	0	True				
ANR	8112325	IdentifierDecl	remap [ pcl_cs_indexed_palette_size ]		8112321	0					
ANR	8112326	IdentifierDeclType	byte [ pcl_cs_indexed_palette_size ]		8112321	0					
ANR	8112327	Identifier	remap		8112321	1					
ANR	8112328	Identifier	pcl_cs_indexed_palette_size		8112321	2					
ANR	8112329	IdentifierDeclStatement	const byte * pin_rast = 0 ;	204:4:6978:7002	8112321	1	True				
ANR	8112330	IdentifierDecl	* pin_rast = 0		8112321	0					
ANR	8112331	IdentifierDeclType	const byte *		8112321	0					
ANR	8112332	Identifier	pin_rast		8112321	1					
ANR	8112333	AssignmentExpression	* pin_rast = 0		8112321	2		=			
ANR	8112334	Identifier	pin_rast		8112321	0					
ANR	8112335	PrimaryExpression	0		8112321	1					
ANR	8112336	IdentifierDeclStatement	byte * pout_rast = 0 ;	205:4:7008:7027	8112321	2	True				
ANR	8112337	IdentifierDecl	* pout_rast = 0		8112321	0					
ANR	8112338	IdentifierDeclType	byte *		8112321	0					
ANR	8112339	Identifier	pout_rast		8112321	1					
ANR	8112340	AssignmentExpression	* pout_rast = 0		8112321	2		=			
ANR	8112341	Identifier	pout_rast		8112321	0					
ANR	8112342	PrimaryExpression	0		8112321	1					
ANR	8112343	IdentifierDeclStatement	int pix_depth = pin_pixinfo -> pix_depth ;	206:4:7033:7071	8112321	3	True				
ANR	8112344	IdentifierDecl	pix_depth = pin_pixinfo -> pix_depth		8112321	0					
ANR	8112345	IdentifierDeclType	int		8112321	0					
ANR	8112346	Identifier	pix_depth		8112321	1					
ANR	8112347	AssignmentExpression	pix_depth = pin_pixinfo -> pix_depth		8112321	2		=			
ANR	8112348	Identifier	pix_depth		8112321	0					
ANR	8112349	PtrMemberAccess	pin_pixinfo -> pix_depth		8112321	1					
ANR	8112350	Identifier	pin_pixinfo		8112321	0					
ANR	8112351	Identifier	pix_depth		8112321	1					
ANR	8112352	IdentifierDeclStatement	bool fast_mode = ( ( pix_depth < 8 ) && ( 8 % pix_depth == 0 ) ) ;	207:4:7077:7135	8112321	4	True				
ANR	8112353	IdentifierDecl	fast_mode = ( ( pix_depth < 8 ) && ( 8 % pix_depth == 0 ) )		8112321	0					
ANR	8112354	IdentifierDeclType	bool		8112321	0					
ANR	8112355	Identifier	fast_mode		8112321	1					
ANR	8112356	AssignmentExpression	fast_mode = ( ( pix_depth < 8 ) && ( 8 % pix_depth == 0 ) )		8112321	2		=			
ANR	8112357	Identifier	fast_mode		8112321	0					
ANR	8112358	AndExpression	( pix_depth < 8 ) && ( 8 % pix_depth == 0 )		8112321	1		&&			
ANR	8112359	RelationalExpression	pix_depth < 8		8112321	0		<			
ANR	8112360	Identifier	pix_depth		8112321	0					
ANR	8112361	PrimaryExpression	8		8112321	1					
ANR	8112362	EqualityExpression	8 % pix_depth == 0		8112321	1		==			
ANR	8112363	MultiplicativeExpression	8 % pix_depth		8112321	0		%			
ANR	8112364	PrimaryExpression	8		8112321	0					
ANR	8112365	Identifier	pix_depth		8112321	1					
ANR	8112366	PrimaryExpression	0		8112321	1					
ANR	8112367	IdentifierDeclStatement	int npixels = pin_pixinfo -> size . x ;	208:4:7141:7174	8112321	5	True				
ANR	8112368	IdentifierDecl	npixels = pin_pixinfo -> size . x		8112321	0					
ANR	8112369	IdentifierDeclType	int		8112321	0					
ANR	8112370	Identifier	npixels		8112321	1					
ANR	8112371	AssignmentExpression	npixels = pin_pixinfo -> size . x		8112321	2		=			
ANR	8112372	Identifier	npixels		8112321	0					
ANR	8112373	MemberAccess	pin_pixinfo -> size . x		8112321	1					
ANR	8112374	PtrMemberAccess	pin_pixinfo -> size		8112321	0					
ANR	8112375	Identifier	pin_pixinfo		8112321	0					
ANR	8112376	Identifier	size		8112321	1					
ANR	8112377	Identifier	x		8112321	1					
ANR	8112378	IdentifierDeclStatement	int i ;	209:4:7180:7185	8112321	6	True				
ANR	8112379	IdentifierDecl	i		8112321	0					
ANR	8112380	IdentifierDeclType	int		8112321	0					
ANR	8112381	Identifier	i		8112321	1					
ANR	8112382	ExpressionStatement	* pout_pixinfo = * pin_pixinfo	212:4:7236:7264	8112321	7	True				
ANR	8112383	AssignmentExpression	* pout_pixinfo = * pin_pixinfo		8112321	0		=			
ANR	8112384	UnaryOperationExpression	* pout_pixinfo		8112321	0					
ANR	8112385	UnaryOperator	*		8112321	0					
ANR	8112386	Identifier	pout_pixinfo		8112321	1					
ANR	8112387	UnaryOperationExpression	* pin_pixinfo		8112321	1					
ANR	8112388	UnaryOperator	*		8112321	0					
ANR	8112389	Identifier	pin_pixinfo		8112321	1					
ANR	8112390	IfStatement	"if ( ! build_remap_array ( pindexed -> palette . data , pindexed -> num_entries , remap , pfirst_white , pix_depth , true ) )"		8112321	8					
ANR	8112391	Condition	"! build_remap_array ( pindexed -> palette . data , pindexed -> num_entries , remap , pfirst_white , pix_depth , true )"	213:8:7274:7430	8112321	0	True				
ANR	8112392	UnaryOperationExpression	"! build_remap_array ( pindexed -> palette . data , pindexed -> num_entries , remap , pfirst_white , pix_depth , true )"		8112321	0					
ANR	8112393	UnaryOperator	!		8112321	0					
ANR	8112394	CallExpression	"build_remap_array ( pindexed -> palette . data , pindexed -> num_entries , remap , pfirst_white , pix_depth , true )"		8112321	1					
ANR	8112395	Callee	build_remap_array		8112321	0					
ANR	8112396	Identifier	build_remap_array		8112321	0					
ANR	8112397	ArgumentList	pindexed -> palette . data		8112321	1					
ANR	8112398	Argument	pindexed -> palette . data		8112321	0					
ANR	8112399	MemberAccess	pindexed -> palette . data		8112321	0					
ANR	8112400	PtrMemberAccess	pindexed -> palette		8112321	0					
ANR	8112401	Identifier	pindexed		8112321	0					
ANR	8112402	Identifier	palette		8112321	1					
ANR	8112403	Identifier	data		8112321	1					
ANR	8112404	Argument	pindexed -> num_entries		8112321	1					
ANR	8112405	PtrMemberAccess	pindexed -> num_entries		8112321	0					
ANR	8112406	Identifier	pindexed		8112321	0					
ANR	8112407	Identifier	num_entries		8112321	1					
ANR	8112408	Argument	remap		8112321	2					
ANR	8112409	Identifier	remap		8112321	0					
ANR	8112410	Argument	pfirst_white		8112321	3					
ANR	8112411	Identifier	pfirst_white		8112321	0					
ANR	8112412	Argument	pix_depth		8112321	4					
ANR	8112413	Identifier	pix_depth		8112321	0					
ANR	8112414	Argument	true		8112321	5					
ANR	8112415	Identifier	true		8112321	0					
ANR	8112416	ReturnStatement	return 0 ;	216:8:7441:7449	8112321	1	True				
ANR	8112417	PrimaryExpression	0		8112321	0					
ANR	8112418	IfStatement	if ( must_copy )		8112321	9					
ANR	8112419	Condition	must_copy	219:8:7522:7530	8112321	0	True				
ANR	8112420	Identifier	must_copy		8112321	0					
ANR	8112421	CompoundStatement		19:8:615:673	8112321	1					
ANR	8112422	IdentifierDeclStatement	long nbytes = pin_pixinfo -> size . x * pin_pixinfo -> pix_depth ;	220:8:7543:7601	8112321	0	True				
ANR	8112423	IdentifierDecl	nbytes = pin_pixinfo -> size . x * pin_pixinfo -> pix_depth		8112321	0					
ANR	8112424	IdentifierDeclType	long		8112321	0					
ANR	8112425	Identifier	nbytes		8112321	1					
ANR	8112426	AssignmentExpression	nbytes = pin_pixinfo -> size . x * pin_pixinfo -> pix_depth		8112321	2		=			
ANR	8112427	Identifier	nbytes		8112321	0					
ANR	8112428	MultiplicativeExpression	pin_pixinfo -> size . x * pin_pixinfo -> pix_depth		8112321	1		*			
ANR	8112429	MemberAccess	pin_pixinfo -> size . x		8112321	0					
ANR	8112430	PtrMemberAccess	pin_pixinfo -> size		8112321	0					
ANR	8112431	Identifier	pin_pixinfo		8112321	0					
ANR	8112432	Identifier	size		8112321	1					
ANR	8112433	Identifier	x		8112321	1					
ANR	8112434	PtrMemberAccess	pin_pixinfo -> pix_depth		8112321	1					
ANR	8112435	Identifier	pin_pixinfo		8112321	0					
ANR	8112436	Identifier	pix_depth		8112321	1					
ANR	8112437	ExpressionStatement	nbytes = ( ( nbytes + 7 ) / 8 )	222:8:7612:7639	8112321	1	True				
ANR	8112438	AssignmentExpression	nbytes = ( ( nbytes + 7 ) / 8 )		8112321	0		=			
ANR	8112439	Identifier	nbytes		8112321	0					
ANR	8112440	MultiplicativeExpression	( nbytes + 7 ) / 8		8112321	1		/			
ANR	8112441	AdditiveExpression	nbytes + 7		8112321	0		+			
ANR	8112442	Identifier	nbytes		8112321	0					
ANR	8112443	PrimaryExpression	7		8112321	1					
ANR	8112444	PrimaryExpression	8		8112321	1					
ANR	8112445	ExpressionStatement	pout_pixinfo -> raster = nbytes	223:8:7649:7678	8112321	2	True				
ANR	8112446	AssignmentExpression	pout_pixinfo -> raster = nbytes		8112321	0		=			
ANR	8112447	PtrMemberAccess	pout_pixinfo -> raster		8112321	0					
ANR	8112448	Identifier	pout_pixinfo		8112321	0					
ANR	8112449	Identifier	raster		8112321	1					
ANR	8112450	Identifier	nbytes		8112321	1					
ANR	8112451	ExpressionStatement	"pout_rast = gs_alloc_bytes ( pmem , nbytes * pin_pixinfo -> size . y , ""re-map colored pattern raster"" )"	224:8:7688:7853	8112321	3	True				
ANR	8112452	AssignmentExpression	"pout_rast = gs_alloc_bytes ( pmem , nbytes * pin_pixinfo -> size . y , ""re-map colored pattern raster"" )"		8112321	0		=			
ANR	8112453	Identifier	pout_rast		8112321	0					
ANR	8112454	CallExpression	"gs_alloc_bytes ( pmem , nbytes * pin_pixinfo -> size . y , ""re-map colored pattern raster"" )"		8112321	1					
ANR	8112455	Callee	gs_alloc_bytes		8112321	0					
ANR	8112456	Identifier	gs_alloc_bytes		8112321	0					
ANR	8112457	ArgumentList	pmem		8112321	1					
ANR	8112458	Argument	pmem		8112321	0					
ANR	8112459	Identifier	pmem		8112321	0					
ANR	8112460	Argument	nbytes * pin_pixinfo -> size . y		8112321	1					
ANR	8112461	MultiplicativeExpression	nbytes * pin_pixinfo -> size . y		8112321	0		*			
ANR	8112462	Identifier	nbytes		8112321	0					
ANR	8112463	MemberAccess	pin_pixinfo -> size . y		8112321	1					
ANR	8112464	PtrMemberAccess	pin_pixinfo -> size		8112321	0					
ANR	8112465	Identifier	pin_pixinfo		8112321	0					
ANR	8112466	Identifier	size		8112321	1					
ANR	8112467	Identifier	y		8112321	1					
ANR	8112468	Argument	"""re-map colored pattern raster"""		8112321	2					
ANR	8112469	PrimaryExpression	"""re-map colored pattern raster"""		8112321	0					
ANR	8112470	IfStatement	if ( pout_rast == 0 )		8112321	4					
ANR	8112471	Condition	pout_rast == 0	227:12:7867:7880	8112321	0	True				
ANR	8112472	EqualityExpression	pout_rast == 0		8112321	0		==			
ANR	8112473	Identifier	pout_rast		8112321	0					
ANR	8112474	PrimaryExpression	0		8112321	1					
ANR	8112475	ReturnStatement	return e_Memory ;	228:12:7895:7910	8112321	1	True				
ANR	8112476	Identifier	e_Memory		8112321	0					
ANR	8112477	ExpressionStatement	pout_pixinfo -> data = pout_rast	229:8:7920:7950	8112321	5	True				
ANR	8112478	AssignmentExpression	pout_pixinfo -> data = pout_rast		8112321	0		=			
ANR	8112479	PtrMemberAccess	pout_pixinfo -> data		8112321	0					
ANR	8112480	Identifier	pout_pixinfo		8112321	0					
ANR	8112481	Identifier	data		8112321	1					
ANR	8112482	Identifier	pout_rast		8112321	1					
ANR	8112483	ElseStatement	else		8112321	0					
ANR	8112484	ExpressionStatement	pout_rast = ( byte * ) pin_pixinfo -> data	232:8:7972:8010	8112321	0	True				
ANR	8112485	AssignmentExpression	pout_rast = ( byte * ) pin_pixinfo -> data		8112321	0		=			
ANR	8112486	Identifier	pout_rast		8112321	0					
ANR	8112487	CastExpression	( byte * ) pin_pixinfo -> data		8112321	1					
ANR	8112488	CastTarget	byte *		8112321	0					
ANR	8112489	PtrMemberAccess	pin_pixinfo -> data		8112321	1					
ANR	8112490	Identifier	pin_pixinfo		8112321	0					
ANR	8112491	Identifier	data		8112321	1					
ANR	8112492	ExpressionStatement	pin_rast = pin_pixinfo -> data	235:4:8056:8084	8112321	10	True				
ANR	8112493	AssignmentExpression	pin_rast = pin_pixinfo -> data		8112321	0		=			
ANR	8112494	Identifier	pin_rast		8112321	0					
ANR	8112495	PtrMemberAccess	pin_pixinfo -> data		8112321	1					
ANR	8112496	Identifier	pin_pixinfo		8112321	0					
ANR	8112497	Identifier	data		8112321	1					
ANR	8112498	ForStatement	for ( i = 0 ; i < pin_pixinfo -> size . y ; i ++ )		8112321	11					
ANR	8112499	ForInit	i = 0 ;	236:9:8095:8100	8112321	0	True				
ANR	8112500	AssignmentExpression	i = 0		8112321	0		=			
ANR	8112501	Identifier	i		8112321	0					
ANR	8112502	PrimaryExpression	0		8112321	1					
ANR	8112503	Condition	i < pin_pixinfo -> size . y	236:16:8102:8124	8112321	1	True				
ANR	8112504	RelationalExpression	i < pin_pixinfo -> size . y		8112321	0		<			
ANR	8112505	Identifier	i		8112321	0					
ANR	8112506	MemberAccess	pin_pixinfo -> size . y		8112321	1					
ANR	8112507	PtrMemberAccess	pin_pixinfo -> size		8112321	0					
ANR	8112508	Identifier	pin_pixinfo		8112321	0					
ANR	8112509	Identifier	size		8112321	1					
ANR	8112510	Identifier	y		8112321	1					
ANR	8112511	PostIncDecOperationExpression	i ++	236:41:8127:8129	8112321	2	True				
ANR	8112512	Identifier	i		8112321	0					
ANR	8112513	IncDec	++		8112321	1					
ANR	8112514	CompoundStatement		35:46:1204:1204	8112321	3					
ANR	8112515	IfStatement	if ( fast_mode )		8112321	0					
ANR	8112516	Condition	fast_mode	237:12:8146:8154	8112321	0	True				
ANR	8112517	Identifier	fast_mode		8112321	0					
ANR	8112518	ExpressionStatement	"remap_raster_ary8 ( pin_rast , pout_rast , npixels , pix_depth , remap )"	238:12:8169:8234	8112321	1	True				
ANR	8112519	CallExpression	"remap_raster_ary8 ( pin_rast , pout_rast , npixels , pix_depth , remap )"		8112321	0					
ANR	8112520	Callee	remap_raster_ary8		8112321	0					
ANR	8112521	Identifier	remap_raster_ary8		8112321	0					
ANR	8112522	ArgumentList	pin_rast		8112321	1					
ANR	8112523	Argument	pin_rast		8112321	0					
ANR	8112524	Identifier	pin_rast		8112321	0					
ANR	8112525	Argument	pout_rast		8112321	1					
ANR	8112526	Identifier	pout_rast		8112321	0					
ANR	8112527	Argument	npixels		8112321	2					
ANR	8112528	Identifier	npixels		8112321	0					
ANR	8112529	Argument	pix_depth		8112321	3					
ANR	8112530	Identifier	pix_depth		8112321	0					
ANR	8112531	Argument	remap		8112321	4					
ANR	8112532	Identifier	remap		8112321	0					
ANR	8112533	ElseStatement	else		8112321	0					
ANR	8112534	ExpressionStatement	"remap_raster_ary ( pin_rast , pout_rast , npixels , pix_depth , remap )"	240:12:8261:8325	8112321	0	True				
ANR	8112535	CallExpression	"remap_raster_ary ( pin_rast , pout_rast , npixels , pix_depth , remap )"		8112321	0					
ANR	8112536	Callee	remap_raster_ary		8112321	0					
ANR	8112537	Identifier	remap_raster_ary		8112321	0					
ANR	8112538	ArgumentList	pin_rast		8112321	1					
ANR	8112539	Argument	pin_rast		8112321	0					
ANR	8112540	Identifier	pin_rast		8112321	0					
ANR	8112541	Argument	pout_rast		8112321	1					
ANR	8112542	Identifier	pout_rast		8112321	0					
ANR	8112543	Argument	npixels		8112321	2					
ANR	8112544	Identifier	npixels		8112321	0					
ANR	8112545	Argument	pix_depth		8112321	3					
ANR	8112546	Identifier	pix_depth		8112321	0					
ANR	8112547	Argument	remap		8112321	4					
ANR	8112548	Identifier	remap		8112321	0					
ANR	8112549	ExpressionStatement	pin_rast += pin_pixinfo -> raster	241:8:8335:8366	8112321	1	True				
ANR	8112550	AssignmentExpression	pin_rast += pin_pixinfo -> raster		8112321	0		+=			
ANR	8112551	Identifier	pin_rast		8112321	0					
ANR	8112552	PtrMemberAccess	pin_pixinfo -> raster		8112321	1					
ANR	8112553	Identifier	pin_pixinfo		8112321	0					
ANR	8112554	Identifier	raster		8112321	1					
ANR	8112555	ExpressionStatement	pout_rast += pout_pixinfo -> raster	242:8:8376:8409	8112321	2	True				
ANR	8112556	AssignmentExpression	pout_rast += pout_pixinfo -> raster		8112321	0		+=			
ANR	8112557	Identifier	pout_rast		8112321	0					
ANR	8112558	PtrMemberAccess	pout_pixinfo -> raster		8112321	1					
ANR	8112559	Identifier	pout_pixinfo		8112321	0					
ANR	8112560	Identifier	raster		8112321	1					
ANR	8112561	ReturnStatement	return 0 ;	245:4:8422:8430	8112321	12	True				
ANR	8112562	PrimaryExpression	0		8112321	0					
ANR	8112563	ReturnType	int		8112321	1					
ANR	8112564	Identifier	pcl_cmap_map_raster		8112321	2					
ANR	8112565	ParameterList	"const pcl_cs_indexed_t * pindexed , int * pfirst_white , const gs_depth_bitmap * pin_pixinfo , gs_depth_bitmap * pout_pixinfo , bool must_copy , gs_memory_t * pmem"		8112321	3					
ANR	8112566	Parameter	const pcl_cs_indexed_t * pindexed	197:20:6688:6720	8112321	0	True				
ANR	8112567	ParameterType	const pcl_cs_indexed_t *		8112321	0					
ANR	8112568	Identifier	pindexed		8112321	1					
ANR	8112569	Parameter	int * pfirst_white	198:20:6743:6759	8112321	1	True				
ANR	8112570	ParameterType	int *		8112321	0					
ANR	8112571	Identifier	pfirst_white		8112321	1					
ANR	8112572	Parameter	const gs_depth_bitmap * pin_pixinfo	199:20:6782:6816	8112321	2	True				
ANR	8112573	ParameterType	const gs_depth_bitmap *		8112321	0					
ANR	8112574	Identifier	pin_pixinfo		8112321	1					
ANR	8112575	Parameter	gs_depth_bitmap * pout_pixinfo	200:20:6839:6868	8112321	3	True				
ANR	8112576	ParameterType	gs_depth_bitmap *		8112321	0					
ANR	8112577	Identifier	pout_pixinfo		8112321	1					
ANR	8112578	Parameter	bool must_copy	201:20:6891:6904	8112321	4	True				
ANR	8112579	ParameterType	bool		8112321	0					
ANR	8112580	Identifier	must_copy		8112321	1					
ANR	8112581	Parameter	gs_memory_t * pmem	201:36:6907:6924	8112321	5	True				
ANR	8112582	ParameterType	gs_memory_t *		8112321	0					
ANR	8112583	Identifier	pmem		8112321	1					
ANR	8112584	CFGEntryNode	ENTRY		8112321		True				
ANR	8112585	CFGExitNode	EXIT		8112321		True				
ANR	8112586	Symbol	fast_mode		8112321						
ANR	8112587	Symbol	pindexed -> palette		8112321						
ANR	8112588	Symbol	* pindexed		8112321						
ANR	8112589	Symbol	pin_pixinfo -> size		8112321						
ANR	8112590	Symbol	pout_pixinfo -> data		8112321						
ANR	8112591	Symbol	pindexed -> palette . data		8112321						
ANR	8112592	Symbol	npixels		8112321						
ANR	8112593	Symbol	pmem		8112321						
ANR	8112594	Symbol	e_Memory		8112321						
ANR	8112595	Symbol	pindexed		8112321						
ANR	8112596	Symbol	build_remap_array		8112321						
ANR	8112597	Symbol	* pout_pixinfo		8112321						
ANR	8112598	Symbol	pout_pixinfo		8112321						
ANR	8112599	Symbol	gs_alloc_bytes		8112321						
ANR	8112600	Symbol	pin_pixinfo -> pix_depth		8112321						
ANR	8112601	Symbol	* pin_pixinfo		8112321						
ANR	8112602	Symbol	pix_depth		8112321						
ANR	8112603	Symbol	i		8112321						
ANR	8112604	Symbol	pout_pixinfo -> raster		8112321						
ANR	8112605	Symbol	pin_rast		8112321						
ANR	8112606	Symbol	pfirst_white		8112321						
ANR	8112607	Symbol	nbytes		8112321						
ANR	8112608	Symbol	pin_pixinfo -> data		8112321						
ANR	8112609	Symbol	pin_pixinfo -> size . x		8112321						
ANR	8112610	Symbol	true		8112321						
ANR	8112611	Symbol	pin_pixinfo -> raster		8112321						
ANR	8112612	Symbol	pin_pixinfo		8112321						
ANR	8112613	Symbol	pindexed -> num_entries		8112321						
ANR	8112614	Symbol	pin_pixinfo -> size . y		8112321						
ANR	8112615	Symbol	must_copy		8112321						
ANR	8112616	Symbol	remap		8112321						
ANR	8112617	Symbol	pout_rast		8112321						
ANR	8112618	Function	pcl_cmap_create_remap_ary	267:0:9364:10442							
ANR	8112619	FunctionDef	"pcl_cmap_create_remap_ary (pcl_state_t * pcs , int * pfirst_white)"		8112618	0					
ANR	8112620	CompoundStatement		269:0:9441:10442	8112618	0					
ANR	8112621	IdentifierDeclStatement	byte tmp_remap [ pcl_cs_indexed_palette_size ] ;	270:4:9447:9490	8112618	0	True				
ANR	8112622	IdentifierDecl	tmp_remap [ pcl_cs_indexed_palette_size ]		8112618	0					
ANR	8112623	IdentifierDeclType	byte [ pcl_cs_indexed_palette_size ]		8112618	0					
ANR	8112624	Identifier	tmp_remap		8112618	1					
ANR	8112625	Identifier	pcl_cs_indexed_palette_size		8112618	2					
ANR	8112626	IdentifierDeclStatement	byte * pmap = 0 ;	271:4:9496:9510	8112618	1	True				
ANR	8112627	IdentifierDecl	* pmap = 0		8112618	0					
ANR	8112628	IdentifierDeclType	byte *		8112618	0					
ANR	8112629	Identifier	pmap		8112618	1					
ANR	8112630	AssignmentExpression	* pmap = 0		8112618	2		=			
ANR	8112631	Identifier	pmap		8112618	0					
ANR	8112632	PrimaryExpression	0		8112618	1					
ANR	8112633	IdentifierDeclStatement	pcl_cs_indexed_t * pindexed = pcs -> ppalet -> pindexed ;	272:4:9516:9566	8112618	2	True				
ANR	8112634	IdentifierDecl	* pindexed = pcs -> ppalet -> pindexed		8112618	0					
ANR	8112635	IdentifierDeclType	pcl_cs_indexed_t *		8112618	0					
ANR	8112636	Identifier	pindexed		8112618	1					
ANR	8112637	AssignmentExpression	* pindexed = pcs -> ppalet -> pindexed		8112618	2		=			
ANR	8112638	Identifier	pindexed		8112618	0					
ANR	8112639	PtrMemberAccess	pcs -> ppalet -> pindexed		8112618	1					
ANR	8112640	PtrMemberAccess	pcs -> ppalet		8112618	0					
ANR	8112641	Identifier	pcs		8112618	0					
ANR	8112642	Identifier	ppalet		8112618	1					
ANR	8112643	Identifier	pindexed		8112618	1					
ANR	8112644	IdentifierDeclStatement	int b_per_p ;	273:4:9572:9583	8112618	3	True				
ANR	8112645	IdentifierDecl	b_per_p		8112618	0					
ANR	8112646	IdentifierDeclType	int		8112618	0					
ANR	8112647	Identifier	b_per_p		8112618	1					
ANR	8112648	ExpressionStatement	* pfirst_white = pindexed -> num_entries	276:4:9665:9702	8112618	4	True				
ANR	8112649	AssignmentExpression	* pfirst_white = pindexed -> num_entries		8112618	0		=			
ANR	8112650	UnaryOperationExpression	* pfirst_white		8112618	0					
ANR	8112651	UnaryOperator	*		8112618	0					
ANR	8112652	Identifier	pfirst_white		8112618	1					
ANR	8112653	PtrMemberAccess	pindexed -> num_entries		8112618	1					
ANR	8112654	Identifier	pindexed		8112618	0					
ANR	8112655	Identifier	num_entries		8112618	1					
ANR	8112656	IfStatement	if ( ( ! pcs -> source_transparent && ! pcs -> pattern_transparent ) || ( pcl_cs_indexed_get_encoding ( pindexed ) > pcl_penc_indexed_by_pixel ) )		8112618	5					
ANR	8112657	Condition	( ! pcs -> source_transparent && ! pcs -> pattern_transparent ) || ( pcl_cs_indexed_get_encoding ( pindexed ) > pcl_penc_indexed_by_pixel )	278:8:9713:9846	8112618	0	True				
ANR	8112658	OrExpression	( ! pcs -> source_transparent && ! pcs -> pattern_transparent ) || ( pcl_cs_indexed_get_encoding ( pindexed ) > pcl_penc_indexed_by_pixel )		8112618	0		||			
ANR	8112659	AndExpression	! pcs -> source_transparent && ! pcs -> pattern_transparent		8112618	0		&&			
ANR	8112660	UnaryOperationExpression	! pcs -> source_transparent		8112618	0					
ANR	8112661	UnaryOperator	!		8112618	0					
ANR	8112662	PtrMemberAccess	pcs -> source_transparent		8112618	1					
ANR	8112663	Identifier	pcs		8112618	0					
ANR	8112664	Identifier	source_transparent		8112618	1					
ANR	8112665	UnaryOperationExpression	! pcs -> pattern_transparent		8112618	1					
ANR	8112666	UnaryOperator	!		8112618	0					
ANR	8112667	PtrMemberAccess	pcs -> pattern_transparent		8112618	1					
ANR	8112668	Identifier	pcs		8112618	0					
ANR	8112669	Identifier	pattern_transparent		8112618	1					
ANR	8112670	RelationalExpression	pcl_cs_indexed_get_encoding ( pindexed ) > pcl_penc_indexed_by_pixel		8112618	1		>			
ANR	8112671	CallExpression	pcl_cs_indexed_get_encoding ( pindexed )		8112618	0					
ANR	8112672	Callee	pcl_cs_indexed_get_encoding		8112618	0					
ANR	8112673	Identifier	pcl_cs_indexed_get_encoding		8112618	0					
ANR	8112674	ArgumentList	pindexed		8112618	1					
ANR	8112675	Argument	pindexed		8112618	0					
ANR	8112676	Identifier	pindexed		8112618	0					
ANR	8112677	Identifier	pcl_penc_indexed_by_pixel		8112618	1					
ANR	8112678	ReturnStatement	return 0 ;	280:8:9857:9865	8112618	1	True				
ANR	8112679	PrimaryExpression	0		8112618	0					
ANR	8112680	ExpressionStatement	b_per_p = pcl_cs_indexed_get_bits_per_index ( pindexed )	281:4:9871:9924	8112618	6	True				
ANR	8112681	AssignmentExpression	b_per_p = pcl_cs_indexed_get_bits_per_index ( pindexed )		8112618	0		=			
ANR	8112682	Identifier	b_per_p		8112618	0					
ANR	8112683	CallExpression	pcl_cs_indexed_get_bits_per_index ( pindexed )		8112618	1					
ANR	8112684	Callee	pcl_cs_indexed_get_bits_per_index		8112618	0					
ANR	8112685	Identifier	pcl_cs_indexed_get_bits_per_index		8112618	0					
ANR	8112686	ArgumentList	pindexed		8112618	1					
ANR	8112687	Argument	pindexed		8112618	0					
ANR	8112688	Identifier	pindexed		8112618	0					
ANR	8112689	IfStatement	"if ( ! build_remap_array ( pindexed -> palette . data , pindexed -> num_entries , tmp_remap , pfirst_white , b_per_p , false ) )"		8112618	7					
ANR	8112690	Condition	"! build_remap_array ( pindexed -> palette . data , pindexed -> num_entries , tmp_remap , pfirst_white , b_per_p , false )"	282:8:9934:10093	8112618	0	True				
ANR	8112691	UnaryOperationExpression	"! build_remap_array ( pindexed -> palette . data , pindexed -> num_entries , tmp_remap , pfirst_white , b_per_p , false )"		8112618	0					
ANR	8112692	UnaryOperator	!		8112618	0					
ANR	8112693	CallExpression	"build_remap_array ( pindexed -> palette . data , pindexed -> num_entries , tmp_remap , pfirst_white , b_per_p , false )"		8112618	1					
ANR	8112694	Callee	build_remap_array		8112618	0					
ANR	8112695	Identifier	build_remap_array		8112618	0					
ANR	8112696	ArgumentList	pindexed -> palette . data		8112618	1					
ANR	8112697	Argument	pindexed -> palette . data		8112618	0					
ANR	8112698	MemberAccess	pindexed -> palette . data		8112618	0					
ANR	8112699	PtrMemberAccess	pindexed -> palette		8112618	0					
ANR	8112700	Identifier	pindexed		8112618	0					
ANR	8112701	Identifier	palette		8112618	1					
ANR	8112702	Identifier	data		8112618	1					
ANR	8112703	Argument	pindexed -> num_entries		8112618	1					
ANR	8112704	PtrMemberAccess	pindexed -> num_entries		8112618	0					
ANR	8112705	Identifier	pindexed		8112618	0					
ANR	8112706	Identifier	num_entries		8112618	1					
ANR	8112707	Argument	tmp_remap		8112618	2					
ANR	8112708	Identifier	tmp_remap		8112618	0					
ANR	8112709	Argument	pfirst_white		8112618	3					
ANR	8112710	Identifier	pfirst_white		8112618	0					
ANR	8112711	Argument	b_per_p		8112618	4					
ANR	8112712	Identifier	b_per_p		8112618	0					
ANR	8112713	Argument	false		8112618	5					
ANR	8112714	Identifier	false		8112618	0					
ANR	8112715	ReturnStatement	return 0 ;	285:8:10104:10112	8112618	1	True				
ANR	8112716	PrimaryExpression	0		8112618	0					
ANR	8112717	ExpressionStatement	"pmap = gs_alloc_bytes ( pcs -> memory , pcl_cs_indexed_palette_size , ""create PCL raster remapping array"" )"	288:4:10198:10350	8112618	8	True				
ANR	8112718	AssignmentExpression	"pmap = gs_alloc_bytes ( pcs -> memory , pcl_cs_indexed_palette_size , ""create PCL raster remapping array"" )"		8112618	0		=			
ANR	8112719	Identifier	pmap		8112618	0					
ANR	8112720	CallExpression	"gs_alloc_bytes ( pcs -> memory , pcl_cs_indexed_palette_size , ""create PCL raster remapping array"" )"		8112618	1					
ANR	8112721	Callee	gs_alloc_bytes		8112618	0					
ANR	8112722	Identifier	gs_alloc_bytes		8112618	0					
ANR	8112723	ArgumentList	pcs -> memory		8112618	1					
ANR	8112724	Argument	pcs -> memory		8112618	0					
ANR	8112725	PtrMemberAccess	pcs -> memory		8112618	0					
ANR	8112726	Identifier	pcs		8112618	0					
ANR	8112727	Identifier	memory		8112618	1					
ANR	8112728	Argument	pcl_cs_indexed_palette_size		8112618	1					
ANR	8112729	Identifier	pcl_cs_indexed_palette_size		8112618	0					
ANR	8112730	Argument	"""create PCL raster remapping array"""		8112618	2					
ANR	8112731	PrimaryExpression	"""create PCL raster remapping array"""		8112618	0					
ANR	8112732	ExpressionStatement	"memcpy ( pmap , tmp_remap , pcl_cs_indexed_palette_size )"	291:4:10356:10408	8112618	9	True				
ANR	8112733	CallExpression	"memcpy ( pmap , tmp_remap , pcl_cs_indexed_palette_size )"		8112618	0					
ANR	8112734	Callee	memcpy		8112618	0					
ANR	8112735	Identifier	memcpy		8112618	0					
ANR	8112736	ArgumentList	pmap		8112618	1					
ANR	8112737	Argument	pmap		8112618	0					
ANR	8112738	Identifier	pmap		8112618	0					
ANR	8112739	Argument	tmp_remap		8112618	1					
ANR	8112740	Identifier	tmp_remap		8112618	0					
ANR	8112741	Argument	pcl_cs_indexed_palette_size		8112618	2					
ANR	8112742	Identifier	pcl_cs_indexed_palette_size		8112618	0					
ANR	8112743	ReturnStatement	return ( const void * ) pmap ;	293:4:10415:10440	8112618	10	True				
ANR	8112744	CastExpression	( const void * ) pmap		8112618	0					
ANR	8112745	CastTarget	const void *		8112618	0					
ANR	8112746	Identifier	pmap		8112618	1					
ANR	8112747	ReturnType	const void *		8112618	1					
ANR	8112748	Identifier	pcl_cmap_create_remap_ary		8112618	2					
ANR	8112749	ParameterList	"pcl_state_t * pcs , int * pfirst_white"		8112618	3					
ANR	8112750	Parameter	pcl_state_t * pcs	268:26:9403:9419	8112618	0	True				
ANR	8112751	ParameterType	pcl_state_t *		8112618	0					
ANR	8112752	Identifier	pcs		8112618	1					
ANR	8112753	Parameter	int * pfirst_white	268:45:9422:9438	8112618	1	True				
ANR	8112754	ParameterType	int *		8112618	0					
ANR	8112755	Identifier	pfirst_white		8112618	1					
ANR	8112756	CFGEntryNode	ENTRY		8112618		True				
ANR	8112757	CFGExitNode	EXIT		8112618		True				
ANR	8112758	Symbol	pcl_penc_indexed_by_pixel		8112618						
ANR	8112759	Symbol	* pcs -> ppalet		8112618						
ANR	8112760	Symbol	pindexed -> palette		8112618						
ANR	8112761	Symbol	* pindexed		8112618						
ANR	8112762	Symbol	pcs -> pattern_transparent		8112618						
ANR	8112763	Symbol	pindexed -> palette . data		8112618						
ANR	8112764	Symbol	* pcs		8112618						
ANR	8112765	Symbol	tmp_remap		8112618						
ANR	8112766	Symbol	pcs -> ppalet -> pindexed		8112618						
ANR	8112767	Symbol	pindexed		8112618						
ANR	8112768	Symbol	pcs -> source_transparent		8112618						
ANR	8112769	Symbol	pcl_cs_indexed_get_encoding		8112618						
ANR	8112770	Symbol	pcl_cs_indexed_get_bits_per_index		8112618						
ANR	8112771	Symbol	pcs -> ppalet		8112618						
ANR	8112772	Symbol	build_remap_array		8112618						
ANR	8112773	Symbol	pmap		8112618						
ANR	8112774	Symbol	pcl_cs_indexed_palette_size		8112618						
ANR	8112775	Symbol	pcs -> memory		8112618						
ANR	8112776	Symbol	pcs		8112618						
ANR	8112777	Symbol	gs_alloc_bytes		8112618						
ANR	8112778	Symbol	* pfirst_white		8112618						
ANR	8112779	Symbol	false		8112618						
ANR	8112780	Symbol	b_per_p		8112618						
ANR	8112781	Symbol	pfirst_white		8112618						
ANR	8112782	Symbol	* * pcs		8112618						
ANR	8112783	Symbol	pindexed -> num_entries		8112618						
ANR	8112784	Function	pcl_cmap_apply_remap_ary	305:0:10826:11305							
ANR	8112785	FunctionDef	"pcl_cmap_apply_remap_ary (const void * vpmap , byte * prast , int b_per_p , int npixels)"		8112784	0					
ANR	8112786	CompoundStatement		310:0:11082:11305	8112784	0					
ANR	8112787	IfStatement	if ( 8 % b_per_p == 0 )		8112784	0					
ANR	8112788	Condition	8 % b_per_p == 0	311:8:11092:11107	8112784	0	True				
ANR	8112789	EqualityExpression	8 % b_per_p == 0		8112784	0		==			
ANR	8112790	MultiplicativeExpression	8 % b_per_p		8112784	0		%			
ANR	8112791	PrimaryExpression	8		8112784	0					
ANR	8112792	Identifier	b_per_p		8112784	1					
ANR	8112793	PrimaryExpression	0		8112784	1					
ANR	8112794	ExpressionStatement	"remap_raster_ary8 ( prast , prast , npixels , b_per_p , ( const byte * ) vpmap )"	312:8:11118:11214	8112784	1	True				
ANR	8112795	CallExpression	"remap_raster_ary8 ( prast , prast , npixels , b_per_p , ( const byte * ) vpmap )"		8112784	0					
ANR	8112796	Callee	remap_raster_ary8		8112784	0					
ANR	8112797	Identifier	remap_raster_ary8		8112784	0					
ANR	8112798	ArgumentList	prast		8112784	1					
ANR	8112799	Argument	prast		8112784	0					
ANR	8112800	Identifier	prast		8112784	0					
ANR	8112801	Argument	prast		8112784	1					
ANR	8112802	Identifier	prast		8112784	0					
ANR	8112803	Argument	npixels		8112784	2					
ANR	8112804	Identifier	npixels		8112784	0					
ANR	8112805	Argument	b_per_p		8112784	3					
ANR	8112806	Identifier	b_per_p		8112784	0					
ANR	8112807	Argument	( const byte * ) vpmap		8112784	4					
ANR	8112808	CastExpression	( const byte * ) vpmap		8112784	0					
ANR	8112809	CastTarget	const byte *		8112784	0					
ANR	8112810	Identifier	vpmap		8112784	1					
ANR	8112811	ElseStatement	else		8112784	0					
ANR	8112812	ExpressionStatement	"remap_raster_ary ( prast , prast , npixels , b_per_p , ( const byte * ) vpmap )"	315:8:11233:11302	8112784	0	True				
ANR	8112813	CallExpression	"remap_raster_ary ( prast , prast , npixels , b_per_p , ( const byte * ) vpmap )"		8112784	0					
ANR	8112814	Callee	remap_raster_ary		8112784	0					
ANR	8112815	Identifier	remap_raster_ary		8112784	0					
ANR	8112816	ArgumentList	prast		8112784	1					
ANR	8112817	Argument	prast		8112784	0					
ANR	8112818	Identifier	prast		8112784	0					
ANR	8112819	Argument	prast		8112784	1					
ANR	8112820	Identifier	prast		8112784	0					
ANR	8112821	Argument	npixels		8112784	2					
ANR	8112822	Identifier	npixels		8112784	0					
ANR	8112823	Argument	b_per_p		8112784	3					
ANR	8112824	Identifier	b_per_p		8112784	0					
ANR	8112825	Argument	( const byte * ) vpmap		8112784	4					
ANR	8112826	CastExpression	( const byte * ) vpmap		8112784	0					
ANR	8112827	CastTarget	const byte *		8112784	0					
ANR	8112828	Identifier	vpmap		8112784	1					
ANR	8112829	ReturnType	void		8112784	1					
ANR	8112830	Identifier	pcl_cmap_apply_remap_ary		8112784	2					
ANR	8112831	ParameterList	"const void * vpmap , byte * prast , int b_per_p , int npixels"		8112784	3					
ANR	8112832	Parameter	const void * vpmap	306:25:10856:10872	8112784	0	True				
ANR	8112833	ParameterType	const void *		8112784	0					
ANR	8112834	Identifier	vpmap		8112784	1					
ANR	8112835	Parameter	byte * prast	307:25:10926:10937	8112784	1	True				
ANR	8112836	ParameterType	byte *		8112784	0					
ANR	8112837	Identifier	prast		8112784	1					
ANR	8112838	Parameter	int b_per_p	308:25:11004:11014	8112784	2	True				
ANR	8112839	ParameterType	int		8112784	0					
ANR	8112840	Identifier	b_per_p		8112784	1					
ANR	8112841	Parameter	int npixels	309:25:11069:11079	8112784	3	True				
ANR	8112842	ParameterType	int		8112784	0					
ANR	8112843	Identifier	npixels		8112784	1					
ANR	8112844	CFGEntryNode	ENTRY		8112784		True				
ANR	8112845	CFGExitNode	EXIT		8112784		True				
ANR	8112846	Symbol	npixels		8112784						
ANR	8112847	Symbol	vpmap		8112784						
ANR	8112848	Symbol	b_per_p		8112784						
ANR	8112849	Symbol	prast		8112784						
