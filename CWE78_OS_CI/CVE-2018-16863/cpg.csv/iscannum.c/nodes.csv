command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6140532	File	data/converged/CVE-2018-16863_ghostpdl/iscannum.c								
ANR	6140533	Function	scan_number	37:0:1190:12076							
ANR	6140534	FunctionDef	"scan_number (const byte * str , const byte * end , int sign , ref * pref , const byte * * psp , int scanner_options)"		6140533	0					
ANR	6140535	CompoundStatement		40:0:1316:12076	6140533	0					
ANR	6140536	IdentifierDeclStatement	const byte * sp = str ;	41:4:1322:1342	6140533	0	True				
ANR	6140537	IdentifierDecl	* sp = str		6140533	0					
ANR	6140538	IdentifierDeclType	const byte *		6140533	0					
ANR	6140539	Identifier	sp		6140533	1					
ANR	6140540	AssignmentExpression	* sp = str		6140533	2		=			
ANR	6140541	Identifier	str		6140533	0					
ANR	6140542	Identifier	str		6140533	1					
ANR	6140543	Statement	define	42:1:1345:1350	6140533	1	True				
ANR	6140544	Statement	GET_NEXT	42:8:1352:1359	6140533	2	True				
ANR	6140545	Statement	(	42:16:1360:1360	6140533	3	True				
ANR	6140546	Statement	cvar	42:17:1361:1364	6140533	4	True				
ANR	6140547	Statement	","	42:21:1365:1365	6140533	5	True				
ANR	6140548	Statement	sp	42:23:1367:1368	6140533	6	True				
ANR	6140549	Statement	","	42:25:1369:1369	6140533	7	True				
ANR	6140550	Statement	end_action	42:27:1371:1380	6140533	8	True				
ANR	6140551	Statement	)	42:37:1381:1381	6140533	9	True				
ANR	6140552	IfStatement	if ( sp >= end )		6140533	10					
ANR	6140553	Condition	sp >= end	43:6:1390:1398	6140533	0	True				
ANR	6140554	RelationalExpression	sp >= end		6140533	0		>=			
ANR	6140555	Identifier	sp		6140533	0					
ANR	6140556	Identifier	end		6140533	1					
ANR	6140557	CompoundStatement		4:17:84:84	6140533	1					
ANR	6140558	ExpressionStatement	end_action	43:19:1403:1413	6140533	0	True				
ANR	6140559	Identifier	end_action		6140533	0					
ANR	6140560	ElseStatement	else		6140533	0					
ANR	6140561	Statement	cvar	43:38:1422:1425	6140533	0	True				
ANR	6140562	Statement	=	43:43:1427:1427	6140533	11	True				
ANR	6140563	Statement	*	43:45:1429:1429	6140533	12	True				
ANR	6140564	Statement	sp	43:46:1430:1431	6140533	13	True				
ANR	6140565	Statement	++	43:48:1432:1433	6140533	14	True				
ANR	6140566	Statement	define	49:1:1546:1551	6140533	15	True				
ANR	6140567	Statement	NUM_POWERS_10	49:8:1553:1565	6140533	16	True				
ANR	6140568	Statement	6	49:22:1567:1567	6140533	17	True				
ANR	6140569	Statement	static	50:4:1573:1578	6140533	18	True				
ANR	6140570	IdentifierDeclStatement	"const float powers_10 [ NUM_POWERS_10 + 1 ] = { 1e0 , 1e1 , 1e2 , 1e3 , 1e4 , 1e5 , 1e6 } ;"	50:11:1580:1672	6140533	19	True				
ANR	6140571	IdentifierDecl	"powers_10 [ NUM_POWERS_10 + 1 ] = { 1e0 , 1e1 , 1e2 , 1e3 , 1e4 , 1e5 , 1e6 }"		6140533	0					
ANR	6140572	IdentifierDeclType	const float [ NUM_POWERS_10 + 1 ]		6140533	0					
ANR	6140573	Identifier	powers_10		6140533	1					
ANR	6140574	AdditiveExpression	NUM_POWERS_10 + 1		6140533	2		+			
ANR	6140575	Identifier	NUM_POWERS_10		6140533	0					
ANR	6140576	PrimaryExpression	1		6140533	1					
ANR	6140577	AssignmentExpression	"powers_10 [ NUM_POWERS_10 + 1 ] = { 1e0 , 1e1 , 1e2 , 1e3 , 1e4 , 1e5 , 1e6 }"		6140533	3		=			
ANR	6140578	Identifier	powers_10		6140533	0					
ANR	6140579	InitializerList	1e0		6140533	1					
ANR	6140580	PrimaryExpression	1e0		6140533	0					
ANR	6140581	PrimaryExpression	1e1		6140533	1					
ANR	6140582	PrimaryExpression	1e2		6140533	2					
ANR	6140583	PrimaryExpression	1e3		6140533	3					
ANR	6140584	PrimaryExpression	1e4		6140533	4					
ANR	6140585	PrimaryExpression	1e5		6140533	5					
ANR	6140586	PrimaryExpression	1e6		6140533	6					
ANR	6140587	Statement	static	53:4:1678:1683	6140533	20	True				
ANR	6140588	IdentifierDeclStatement	"const double neg_powers_10 [ NUM_POWERS_10 + 1 ] = { 1e0 , 1e-1 , 1e-2 , 1e-3 , 1e-4 , 1e-5 , 1e-6 } ;"	53:11:1685:1788	6140533	21	True				
ANR	6140589	IdentifierDecl	"neg_powers_10 [ NUM_POWERS_10 + 1 ] = { 1e0 , 1e-1 , 1e-2 , 1e-3 , 1e-4 , 1e-5 , 1e-6 }"		6140533	0					
ANR	6140590	IdentifierDeclType	const double [ NUM_POWERS_10 + 1 ]		6140533	0					
ANR	6140591	Identifier	neg_powers_10		6140533	1					
ANR	6140592	AdditiveExpression	NUM_POWERS_10 + 1		6140533	2		+			
ANR	6140593	Identifier	NUM_POWERS_10		6140533	0					
ANR	6140594	PrimaryExpression	1		6140533	1					
ANR	6140595	AssignmentExpression	"neg_powers_10 [ NUM_POWERS_10 + 1 ] = { 1e0 , 1e-1 , 1e-2 , 1e-3 , 1e-4 , 1e-5 , 1e-6 }"		6140533	3		=			
ANR	6140596	Identifier	neg_powers_10		6140533	0					
ANR	6140597	InitializerList	1e0		6140533	1					
ANR	6140598	PrimaryExpression	1e0		6140533	0					
ANR	6140599	PrimaryExpression	1e-1		6140533	1					
ANR	6140600	PrimaryExpression	1e-2		6140533	2					
ANR	6140601	PrimaryExpression	1e-3		6140533	3					
ANR	6140602	PrimaryExpression	1e-4		6140533	4					
ANR	6140603	PrimaryExpression	1e-5		6140533	5					
ANR	6140604	PrimaryExpression	1e-6		6140533	6					
ANR	6140605	IdentifierDeclStatement	ps_int ival ;	57:4:1795:1806	6140533	22	True				
ANR	6140606	IdentifierDecl	ival		6140533	0					
ANR	6140607	IdentifierDeclType	ps_int		6140533	0					
ANR	6140608	Identifier	ival		6140533	1					
ANR	6140609	IdentifierDeclStatement	double dval ;	58:4:1812:1823	6140533	23	True				
ANR	6140610	IdentifierDecl	dval		6140533	0					
ANR	6140611	IdentifierDeclType	double		6140533	0					
ANR	6140612	Identifier	dval		6140533	1					
ANR	6140613	IdentifierDeclStatement	int exp10 ;	59:4:1829:1838	6140533	24	True				
ANR	6140614	IdentifierDecl	exp10		6140533	0					
ANR	6140615	IdentifierDeclType	int		6140533	0					
ANR	6140616	Identifier	exp10		6140533	1					
ANR	6140617	IdentifierDeclStatement	int code = 0 ;	60:4:1844:1856	6140533	25	True				
ANR	6140618	IdentifierDecl	code = 0		6140533	0					
ANR	6140619	IdentifierDeclType	int		6140533	0					
ANR	6140620	Identifier	code		6140533	1					
ANR	6140621	AssignmentExpression	code = 0		6140533	2		=			
ANR	6140622	Identifier	code		6140533	0					
ANR	6140623	PrimaryExpression	0		6140533	1					
ANR	6140624	IdentifierDeclStatement	"int c , d ;"	61:4:1862:1870	6140533	26	True				
ANR	6140625	IdentifierDecl	c		6140533	0					
ANR	6140626	IdentifierDeclType	int		6140533	0					
ANR	6140627	Identifier	c		6140533	1					
ANR	6140628	IdentifierDecl	d		6140533	1					
ANR	6140629	IdentifierDeclType	int		6140533	0					
ANR	6140630	Identifier	d		6140533	1					
ANR	6140631	IdentifierDeclStatement	ps_uint max_scan ;	62:4:1876:1892	6140533	27	True				
ANR	6140632	IdentifierDecl	max_scan		6140533	0					
ANR	6140633	IdentifierDeclType	ps_uint		6140533	0					
ANR	6140634	Identifier	max_scan		6140533	1					
ANR	6140635	IdentifierDeclStatement	"ps_int max_ps_int_scan , min_ps_int_scan ;"	63:4:1931:1970	6140533	28	True				
ANR	6140636	IdentifierDecl	max_ps_int_scan		6140533	0					
ANR	6140637	IdentifierDeclType	ps_int		6140533	0					
ANR	6140638	Identifier	max_ps_int_scan		6140533	1					
ANR	6140639	IdentifierDecl	min_ps_int_scan		6140533	1					
ANR	6140640	IdentifierDeclType	ps_int		6140533	0					
ANR	6140641	Identifier	min_ps_int_scan		6140533	1					
ANR	6140642	Statement	const	64:4:1976:1980	6140533	29	True				
ANR	6140643	Statement	byte	64:10:1982:1985	6140533	30	True				
ANR	6140644	Statement	*	64:15:1987:1987	6140533	31	True				
ANR	6140645	Statement	const	64:16:1988:1992	6140533	32	True				
ANR	6140646	ExpressionStatement	decoder = scan_char_decoder	64:22:1994:2021	6140533	33	True				
ANR	6140647	AssignmentExpression	decoder = scan_char_decoder		6140533	0		=			
ANR	6140648	Identifier	decoder		6140533	0					
ANR	6140649	Identifier	scan_char_decoder		6140533	1					
ANR	6140650	Statement	define	65:1:2024:2029	6140533	34	True				
ANR	6140651	Statement	IS_DIGIT	65:8:2031:2038	6140533	35	True				
ANR	6140652	Statement	(	65:16:2039:2039	6140533	36	True				
ANR	6140653	Statement	d	65:17:2040:2040	6140533	37	True				
ANR	6140654	Statement	","	65:18:2041:2041	6140533	38	True				
ANR	6140655	Statement	c	65:20:2043:2043	6140533	39	True				
ANR	6140656	Statement	)	65:21:2044:2044	6140533	40	True				
ANR	6140657	Statement	(	66:2:2049:2049	6140533	41	True				
ANR	6140658	Statement	(	66:3:2050:2050	6140533	42	True				
ANR	6140659	Statement	d	66:4:2051:2051	6140533	43	True				
ANR	6140660	Statement	=	66:6:2053:2053	6140533	44	True				
ANR	6140661	Statement	decoder	66:8:2055:2061	6140533	45	True				
ANR	6140662	Statement	[	66:15:2062:2062	6140533	46	True				
ANR	6140663	Statement	c	66:16:2063:2063	6140533	47	True				
ANR	6140664	Statement	]	66:17:2064:2064	6140533	48	True				
ANR	6140665	Statement	)	66:18:2065:2065	6140533	49	True				
ANR	6140666	Statement	<	66:20:2067:2067	6140533	50	True				
ANR	6140667	Statement	10	66:22:2069:2070	6140533	51	True				
ANR	6140668	Statement	)	66:24:2071:2071	6140533	52	True				
ANR	6140669	Statement	define	67:1:2074:2079	6140533	53	True				
ANR	6140670	Statement	WOULD_OVERFLOW	67:8:2081:2094	6140533	54	True				
ANR	6140671	Statement	(	67:22:2095:2095	6140533	55	True				
ANR	6140672	Statement	val	67:23:2096:2098	6140533	56	True				
ANR	6140673	Statement	","	67:26:2099:2099	6140533	57	True				
ANR	6140674	Statement	d	67:28:2101:2101	6140533	58	True				
ANR	6140675	Statement	","	67:29:2102:2102	6140533	59	True				
ANR	6140676	Statement	maxv	67:31:2104:2107	6140533	60	True				
ANR	6140677	Statement	)	67:35:2108:2108	6140533	61	True				
ANR	6140678	Statement	(	68:2:2113:2113	6140533	62	True				
ANR	6140679	Statement	val	68:3:2114:2116	6140533	63	True				
ANR	6140680	Statement	>=	68:7:2118:2119	6140533	64	True				
ANR	6140681	Statement	maxv	68:10:2121:2124	6140533	65	True				
ANR	6140682	Statement	/	68:15:2126:2126	6140533	66	True				
ANR	6140683	Statement	10	68:17:2128:2129	6140533	67	True				
ANR	6140684	Statement	&&	68:20:2131:2132	6140533	68	True				
ANR	6140685	Statement	(	68:23:2134:2134	6140533	69	True				
ANR	6140686	Statement	val	68:24:2135:2137	6140533	70	True				
ANR	6140687	Statement	>	68:28:2139:2139	6140533	71	True				
ANR	6140688	Statement	maxv	68:30:2141:2144	6140533	72	True				
ANR	6140689	Statement	/	68:35:2146:2146	6140533	73	True				
ANR	6140690	Statement	10	68:37:2148:2149	6140533	74	True				
ANR	6140691	Statement	||	68:40:2151:2152	6140533	75	True				
ANR	6140692	Statement	d	68:43:2154:2154	6140533	76	True				
ANR	6140693	Statement	>	68:45:2156:2156	6140533	77	True				
ANR	6140694	Statement	(	68:47:2158:2158	6140533	78	True				
ANR	6140695	Statement	int64_t	68:48:2159:2165	6140533	79	True				
ANR	6140696	Statement	)	68:55:2166:2166	6140533	80	True				
ANR	6140697	Statement	(	68:56:2167:2167	6140533	81	True				
ANR	6140698	Statement	maxv	68:57:2168:2171	6140533	82	True				
ANR	6140699	Statement	%	68:62:2173:2173	6140533	83	True				
ANR	6140700	Statement	10	68:64:2175:2176	6140533	84	True				
ANR	6140701	Statement	)	68:66:2177:2177	6140533	85	True				
ANR	6140702	Statement	)	68:67:2178:2178	6140533	86	True				
ANR	6140703	Statement	)	68:68:2179:2179	6140533	87	True				
ANR	6140704	ExpressionStatement	"GET_NEXT ( c , sp , return_error ( gs_error_syntaxerror ) )"	70:4:2186:2237	6140533	88	True				
ANR	6140705	CallExpression	"GET_NEXT ( c , sp , return_error ( gs_error_syntaxerror ) )"		6140533	0					
ANR	6140706	Callee	GET_NEXT		6140533	0					
ANR	6140707	Identifier	GET_NEXT		6140533	0					
ANR	6140708	ArgumentList	c		6140533	1					
ANR	6140709	Argument	c		6140533	0					
ANR	6140710	Identifier	c		6140533	0					
ANR	6140711	Argument	sp		6140533	1					
ANR	6140712	Identifier	sp		6140533	0					
ANR	6140713	Argument	return_error ( gs_error_syntaxerror )		6140533	2					
ANR	6140714	CallExpression	return_error ( gs_error_syntaxerror )		6140533	0					
ANR	6140715	Callee	return_error		6140533	0					
ANR	6140716	Identifier	return_error		6140533	0					
ANR	6140717	ArgumentList	gs_error_syntaxerror		6140533	1					
ANR	6140718	Argument	gs_error_syntaxerror		6140533	0					
ANR	6140719	Identifier	gs_error_syntaxerror		6140533	0					
ANR	6140720	IfStatement	"if ( ! IS_DIGIT ( d , c ) )"		6140533	89					
ANR	6140721	Condition	"! IS_DIGIT ( d , c )"	71:8:2247:2261	6140533	0	True				
ANR	6140722	UnaryOperationExpression	"! IS_DIGIT ( d , c )"		6140533	0					
ANR	6140723	UnaryOperator	!		6140533	0					
ANR	6140724	CallExpression	"IS_DIGIT ( d , c )"		6140533	1					
ANR	6140725	Callee	IS_DIGIT		6140533	0					
ANR	6140726	Identifier	IS_DIGIT		6140533	0					
ANR	6140727	ArgumentList	d		6140533	1					
ANR	6140728	Argument	d		6140533	0					
ANR	6140729	Identifier	d		6140533	0					
ANR	6140730	Argument	c		6140533	1					
ANR	6140731	Identifier	c		6140533	0					
ANR	6140732	CompoundStatement		32:25:947:947	6140533	1					
ANR	6140733	IfStatement	if ( c != '.' )		6140533	0					
ANR	6140734	Condition	c != '.'	72:12:2278:2285	6140533	0	True				
ANR	6140735	EqualityExpression	c != '.'		6140533	0		!=			
ANR	6140736	Identifier	c		6140533	0					
ANR	6140737	PrimaryExpression	'.'		6140533	1					
ANR	6140738	ExpressionStatement	return_error ( gs_error_syntaxerror )	73:12:2300:2334	6140533	1	True				
ANR	6140739	CallExpression	return_error ( gs_error_syntaxerror )		6140533	0					
ANR	6140740	Callee	return_error		6140533	0					
ANR	6140741	Identifier	return_error		6140533	0					
ANR	6140742	ArgumentList	gs_error_syntaxerror		6140533	1					
ANR	6140743	Argument	gs_error_syntaxerror		6140533	0					
ANR	6140744	Identifier	gs_error_syntaxerror		6140533	0					
ANR	6140745	ExpressionStatement	"GET_NEXT ( c , sp , return_error ( gs_error_syntaxerror ) )"	75:8:2395:2446	6140533	1	True				
ANR	6140746	CallExpression	"GET_NEXT ( c , sp , return_error ( gs_error_syntaxerror ) )"		6140533	0					
ANR	6140747	Callee	GET_NEXT		6140533	0					
ANR	6140748	Identifier	GET_NEXT		6140533	0					
ANR	6140749	ArgumentList	c		6140533	1					
ANR	6140750	Argument	c		6140533	0					
ANR	6140751	Identifier	c		6140533	0					
ANR	6140752	Argument	sp		6140533	1					
ANR	6140753	Identifier	sp		6140533	0					
ANR	6140754	Argument	return_error ( gs_error_syntaxerror )		6140533	2					
ANR	6140755	CallExpression	return_error ( gs_error_syntaxerror )		6140533	0					
ANR	6140756	Callee	return_error		6140533	0					
ANR	6140757	Identifier	return_error		6140533	0					
ANR	6140758	ArgumentList	gs_error_syntaxerror		6140533	1					
ANR	6140759	Argument	gs_error_syntaxerror		6140533	0					
ANR	6140760	Identifier	gs_error_syntaxerror		6140533	0					
ANR	6140761	IfStatement	"if ( ! IS_DIGIT ( d , c ) )"		6140533	2					
ANR	6140762	Condition	"! IS_DIGIT ( d , c )"	76:12:2460:2474	6140533	0	True				
ANR	6140763	UnaryOperationExpression	"! IS_DIGIT ( d , c )"		6140533	0					
ANR	6140764	UnaryOperator	!		6140533	0					
ANR	6140765	CallExpression	"IS_DIGIT ( d , c )"		6140533	1					
ANR	6140766	Callee	IS_DIGIT		6140533	0					
ANR	6140767	Identifier	IS_DIGIT		6140533	0					
ANR	6140768	ArgumentList	d		6140533	1					
ANR	6140769	Argument	d		6140533	0					
ANR	6140770	Identifier	d		6140533	0					
ANR	6140771	Argument	c		6140533	1					
ANR	6140772	Identifier	c		6140533	0					
ANR	6140773	ExpressionStatement	return_error ( gs_error_syntaxerror )	77:12:2489:2523	6140533	1	True				
ANR	6140774	CallExpression	return_error ( gs_error_syntaxerror )		6140533	0					
ANR	6140775	Callee	return_error		6140533	0					
ANR	6140776	Identifier	return_error		6140533	0					
ANR	6140777	ArgumentList	gs_error_syntaxerror		6140533	1					
ANR	6140778	Argument	gs_error_syntaxerror		6140533	0					
ANR	6140779	Identifier	gs_error_syntaxerror		6140533	0					
ANR	6140780	ExpressionStatement	ival = 0	78:8:2533:2541	6140533	3	True				
ANR	6140781	AssignmentExpression	ival = 0		6140533	0		=			
ANR	6140782	Identifier	ival		6140533	0					
ANR	6140783	PrimaryExpression	0		6140533	1					
ANR	6140784	GotoStatement	goto i2r ;	79:8:2551:2559	6140533	4	True				
ANR	6140785	Identifier	i2r		6140533	0					
ANR	6140786	ExpressionStatement	ival = d	85:4:2767:2775	6140533	90	True				
ANR	6140787	AssignmentExpression	ival = d		6140533	0		=			
ANR	6140788	Identifier	ival		6140533	0					
ANR	6140789	Identifier	d		6140533	1					
ANR	6140790	IfStatement	if ( end - sp >= 3 )		6140533	91					
ANR	6140791	Condition	end - sp >= 3	86:8:2785:2797	6140533	0	True				
ANR	6140792	RelationalExpression	end - sp >= 3		6140533	0		>=			
ANR	6140793	AdditiveExpression	end - sp		6140533	0		-			
ANR	6140794	Identifier	end		6140533	0					
ANR	6140795	Identifier	sp		6140533	1					
ANR	6140796	PrimaryExpression	3		6140533	1					
ANR	6140797	CompoundStatement		47:23:1483:1483	6140533	1					
ANR	6140798	IfStatement	"if ( ! IS_DIGIT ( d , ( c = * sp ) ) )"		6140533	0					
ANR	6140799	Condition	"! IS_DIGIT ( d , ( c = * sp ) )"	87:12:2836:2858	6140533	0	True				
ANR	6140800	UnaryOperationExpression	"! IS_DIGIT ( d , ( c = * sp ) )"		6140533	0					
ANR	6140801	UnaryOperator	!		6140533	0					
ANR	6140802	CallExpression	"IS_DIGIT ( d , ( c = * sp ) )"		6140533	1					
ANR	6140803	Callee	IS_DIGIT		6140533	0					
ANR	6140804	Identifier	IS_DIGIT		6140533	0					
ANR	6140805	ArgumentList	d		6140533	1					
ANR	6140806	Argument	d		6140533	0					
ANR	6140807	Identifier	d		6140533	0					
ANR	6140808	Argument	c = * sp		6140533	1					
ANR	6140809	AssignmentExpression	c = * sp		6140533	0		=			
ANR	6140810	Identifier	c		6140533	0					
ANR	6140811	UnaryOperationExpression	* sp		6140533	1					
ANR	6140812	UnaryOperator	*		6140533	0					
ANR	6140813	Identifier	sp		6140533	1					
ANR	6140814	CompoundStatement		48:37:1544:1544	6140533	1					
ANR	6140815	ExpressionStatement	sp ++	88:12:2875:2879	6140533	0	True				
ANR	6140816	PostIncDecOperationExpression	sp ++		6140533	0					
ANR	6140817	Identifier	sp		6140533	0					
ANR	6140818	IncDec	++		6140533	1					
ANR	6140819	GotoStatement	goto ind ;	89:12:2893:2901	6140533	1	True				
ANR	6140820	Identifier	ind		6140533	0					
ANR	6140821	ExpressionStatement	ival = ival * 10 + d	91:8:2921:2941	6140533	1	True				
ANR	6140822	AssignmentExpression	ival = ival * 10 + d		6140533	0		=			
ANR	6140823	Identifier	ival		6140533	0					
ANR	6140824	AdditiveExpression	ival * 10 + d		6140533	1		+			
ANR	6140825	MultiplicativeExpression	ival * 10		6140533	0		*			
ANR	6140826	Identifier	ival		6140533	0					
ANR	6140827	PrimaryExpression	10		6140533	1					
ANR	6140828	Identifier	d		6140533	1					
ANR	6140829	IfStatement	"if ( ! IS_DIGIT ( d , ( c = sp [ 1 ] ) ) )"		6140533	2					
ANR	6140830	Condition	"! IS_DIGIT ( d , ( c = sp [ 1 ] ) )"	92:12:2955:2979	6140533	0	True				
ANR	6140831	UnaryOperationExpression	"! IS_DIGIT ( d , ( c = sp [ 1 ] ) )"		6140533	0					
ANR	6140832	UnaryOperator	!		6140533	0					
ANR	6140833	CallExpression	"IS_DIGIT ( d , ( c = sp [ 1 ] ) )"		6140533	1					
ANR	6140834	Callee	IS_DIGIT		6140533	0					
ANR	6140835	Identifier	IS_DIGIT		6140533	0					
ANR	6140836	ArgumentList	d		6140533	1					
ANR	6140837	Argument	d		6140533	0					
ANR	6140838	Identifier	d		6140533	0					
ANR	6140839	Argument	c = sp [ 1 ]		6140533	1					
ANR	6140840	AssignmentExpression	c = sp [ 1 ]		6140533	0		=			
ANR	6140841	Identifier	c		6140533	0					
ANR	6140842	ArrayIndexing	sp [ 1 ]		6140533	1					
ANR	6140843	Identifier	sp		6140533	0					
ANR	6140844	PrimaryExpression	1		6140533	1					
ANR	6140845	CompoundStatement		53:39:1665:1665	6140533	1					
ANR	6140846	ExpressionStatement	sp += 2	93:12:2996:3003	6140533	0	True				
ANR	6140847	AssignmentExpression	sp += 2		6140533	0		+=			
ANR	6140848	Identifier	sp		6140533	0					
ANR	6140849	PrimaryExpression	2		6140533	1					
ANR	6140850	GotoStatement	goto ind ;	94:12:3017:3025	6140533	1	True				
ANR	6140851	Identifier	ind		6140533	0					
ANR	6140852	ExpressionStatement	ival = ival * 10 + d	96:8:3045:3065	6140533	3	True				
ANR	6140853	AssignmentExpression	ival = ival * 10 + d		6140533	0		=			
ANR	6140854	Identifier	ival		6140533	0					
ANR	6140855	AdditiveExpression	ival * 10 + d		6140533	1		+			
ANR	6140856	MultiplicativeExpression	ival * 10		6140533	0		*			
ANR	6140857	Identifier	ival		6140533	0					
ANR	6140858	PrimaryExpression	10		6140533	1					
ANR	6140859	Identifier	d		6140533	1					
ANR	6140860	ExpressionStatement	sp += 3	97:8:3075:3082	6140533	4	True				
ANR	6140861	AssignmentExpression	sp += 3		6140533	0		+=			
ANR	6140862	Identifier	sp		6140533	0					
ANR	6140863	PrimaryExpression	3		6140533	1					
ANR	6140864	IfStatement	"if ( ! IS_DIGIT ( d , ( c = sp [ - 1 ] ) ) )"		6140533	5					
ANR	6140865	Condition	"! IS_DIGIT ( d , ( c = sp [ - 1 ] ) )"	98:12:3096:3121	6140533	0	True				
ANR	6140866	UnaryOperationExpression	"! IS_DIGIT ( d , ( c = sp [ - 1 ] ) )"		6140533	0					
ANR	6140867	UnaryOperator	!		6140533	0					
ANR	6140868	CallExpression	"IS_DIGIT ( d , ( c = sp [ - 1 ] ) )"		6140533	1					
ANR	6140869	Callee	IS_DIGIT		6140533	0					
ANR	6140870	Identifier	IS_DIGIT		6140533	0					
ANR	6140871	ArgumentList	d		6140533	1					
ANR	6140872	Argument	d		6140533	0					
ANR	6140873	Identifier	d		6140533	0					
ANR	6140874	Argument	c = sp [ - 1 ]		6140533	1					
ANR	6140875	AssignmentExpression	c = sp [ - 1 ]		6140533	0		=			
ANR	6140876	Identifier	c		6140533	0					
ANR	6140877	ArrayIndexing	sp [ - 1 ]		6140533	1					
ANR	6140878	Identifier	sp		6140533	0					
ANR	6140879	UnaryOperationExpression	- 1		6140533	1					
ANR	6140880	UnaryOperator	-		6140533	0					
ANR	6140881	PrimaryExpression	1		6140533	1					
ANR	6140882	GotoStatement	goto ind ;	99:12:3136:3144	6140533	1	True				
ANR	6140883	Identifier	ind		6140533	0					
ANR	6140884	ExpressionStatement	ival = ival * 10 + d	100:8:3154:3174	6140533	6	True				
ANR	6140885	AssignmentExpression	ival = ival * 10 + d		6140533	0		=			
ANR	6140886	Identifier	ival		6140533	0					
ANR	6140887	AdditiveExpression	ival * 10 + d		6140533	1		+			
ANR	6140888	MultiplicativeExpression	ival * 10		6140533	0		*			
ANR	6140889	Identifier	ival		6140533	0					
ANR	6140890	PrimaryExpression	10		6140533	1					
ANR	6140891	Identifier	d		6140533	1					
ANR	6140892	ExpressionStatement	max_ps_int_scan = scanner_options & SCAN_CPSI_MODE ? MAX_PS_INT32 : MAX_PS_INT	103:4:3187:3265	6140533	92	True				
ANR	6140893	AssignmentExpression	max_ps_int_scan = scanner_options & SCAN_CPSI_MODE ? MAX_PS_INT32 : MAX_PS_INT		6140533	0		=			
ANR	6140894	Identifier	max_ps_int_scan		6140533	0					
ANR	6140895	ConditionalExpression	scanner_options & SCAN_CPSI_MODE ? MAX_PS_INT32 : MAX_PS_INT		6140533	1					
ANR	6140896	Condition	scanner_options & SCAN_CPSI_MODE		6140533	0					
ANR	6140897	BitAndExpression	scanner_options & SCAN_CPSI_MODE		6140533	0		&			
ANR	6140898	Identifier	scanner_options		6140533	0					
ANR	6140899	Identifier	SCAN_CPSI_MODE		6140533	1					
ANR	6140900	Identifier	MAX_PS_INT32		6140533	1					
ANR	6140901	Identifier	MAX_PS_INT		6140533	2					
ANR	6140902	ExpressionStatement	min_ps_int_scan = scanner_options & SCAN_CPSI_MODE ? MIN_PS_INT32 : MIN_PS_INT	104:4:3271:3349	6140533	93	True				
ANR	6140903	AssignmentExpression	min_ps_int_scan = scanner_options & SCAN_CPSI_MODE ? MIN_PS_INT32 : MIN_PS_INT		6140533	0		=			
ANR	6140904	Identifier	min_ps_int_scan		6140533	0					
ANR	6140905	ConditionalExpression	scanner_options & SCAN_CPSI_MODE ? MIN_PS_INT32 : MIN_PS_INT		6140533	1					
ANR	6140906	Condition	scanner_options & SCAN_CPSI_MODE		6140533	0					
ANR	6140907	BitAndExpression	scanner_options & SCAN_CPSI_MODE		6140533	0		&			
ANR	6140908	Identifier	scanner_options		6140533	0					
ANR	6140909	Identifier	SCAN_CPSI_MODE		6140533	1					
ANR	6140910	Identifier	MIN_PS_INT32		6140533	1					
ANR	6140911	Identifier	MIN_PS_INT		6140533	2					
ANR	6140912	ExpressionStatement	max_scan = scanner_options & SCAN_PDF_UNSIGNED && sign >= 0 ? ~ ( ( ps_int ) 0 ) : max_ps_int_scan	106:4:3356:3448	6140533	94	True				
ANR	6140913	AssignmentExpression	max_scan = scanner_options & SCAN_PDF_UNSIGNED && sign >= 0 ? ~ ( ( ps_int ) 0 ) : max_ps_int_scan		6140533	0		=			
ANR	6140914	Identifier	max_scan		6140533	0					
ANR	6140915	ConditionalExpression	scanner_options & SCAN_PDF_UNSIGNED && sign >= 0 ? ~ ( ( ps_int ) 0 ) : max_ps_int_scan		6140533	1					
ANR	6140916	Condition	scanner_options & SCAN_PDF_UNSIGNED && sign >= 0		6140533	0					
ANR	6140917	AndExpression	scanner_options & SCAN_PDF_UNSIGNED && sign >= 0		6140533	0		&&			
ANR	6140918	BitAndExpression	scanner_options & SCAN_PDF_UNSIGNED		6140533	0		&			
ANR	6140919	Identifier	scanner_options		6140533	0					
ANR	6140920	Identifier	SCAN_PDF_UNSIGNED		6140533	1					
ANR	6140921	RelationalExpression	sign >= 0		6140533	1		>=			
ANR	6140922	Identifier	sign		6140533	0					
ANR	6140923	PrimaryExpression	0		6140533	1					
ANR	6140924	UnaryOperationExpression	~ ( ( ps_int ) 0 )		6140533	1					
ANR	6140925	UnaryOperator	~		6140533	0					
ANR	6140926	CastExpression	( ps_int ) 0		6140533	1					
ANR	6140927	CastTarget	ps_int		6140533	0					
ANR	6140928	PrimaryExpression	0		6140533	1					
ANR	6140929	Identifier	max_ps_int_scan		6140533	2					
ANR	6140930	ForStatement	for ( ; ; ival = ival * 10 + d )		6140533	95					
ANR	6140931	AssignmentExpression	ival = ival * 10 + d	108:12:3463:3482	6140533	0	True	=			
ANR	6140932	Identifier	ival		6140533	0					
ANR	6140933	AdditiveExpression	ival * 10 + d		6140533	1		+			
ANR	6140934	MultiplicativeExpression	ival * 10		6140533	0		*			
ANR	6140935	Identifier	ival		6140533	0					
ANR	6140936	PrimaryExpression	10		6140533	1					
ANR	6140937	Identifier	d		6140533	1					
ANR	6140938	CompoundStatement		69:34:2168:2168	6140533	1					
ANR	6140939	Statement	GET_NEXT	109:8:3495:3502	6140533	0	True				
ANR	6140940	Statement	(	109:16:3503:3503	6140533	1	True				
ANR	6140941	Statement	c	109:17:3504:3504	6140533	2	True				
ANR	6140942	Statement	","	109:18:3505:3505	6140533	3	True				
ANR	6140943	Statement	sp	109:20:3507:3508	6140533	4	True				
ANR	6140944	Statement	","	109:22:3509:3509	6140533	5	True				
ANR	6140945	Statement	goto	109:24:3511:3514	6140533	6	True				
ANR	6140946	Statement	iret	109:29:3516:3519	6140533	7	True				
ANR	6140947	Statement	)	109:33:3520:3520	6140533	8	True				
ANR	6140948	ExpressionStatement		109:34:3521:3521	6140533	9	True				
ANR	6140949	IfStatement	"if ( ! IS_DIGIT ( d , c ) )"		6140533	10					
ANR	6140950	Condition	"! IS_DIGIT ( d , c )"	110:12:3535:3549	6140533	0	True				
ANR	6140951	UnaryOperationExpression	"! IS_DIGIT ( d , c )"		6140533	0					
ANR	6140952	UnaryOperator	!		6140533	0					
ANR	6140953	CallExpression	"IS_DIGIT ( d , c )"		6140533	1					
ANR	6140954	Callee	IS_DIGIT		6140533	0					
ANR	6140955	Identifier	IS_DIGIT		6140533	0					
ANR	6140956	ArgumentList	d		6140533	1					
ANR	6140957	Argument	d		6140533	0					
ANR	6140958	Identifier	d		6140533	0					
ANR	6140959	Argument	c		6140533	1					
ANR	6140960	Identifier	c		6140533	0					
ANR	6140961	BreakStatement	break ;	111:12:3564:3569	6140533	1	True				
ANR	6140962	IfStatement	"if ( WOULD_OVERFLOW ( ( ( ps_uint ) ival ) , d , max_scan ) )"		6140533	11					
ANR	6140963	Condition	"WOULD_OVERFLOW ( ( ( ps_uint ) ival ) , d , max_scan )"	112:12:3583:3626	6140533	0	True				
ANR	6140964	CallExpression	"WOULD_OVERFLOW ( ( ( ps_uint ) ival ) , d , max_scan )"		6140533	0					
ANR	6140965	Callee	WOULD_OVERFLOW		6140533	0					
ANR	6140966	Identifier	WOULD_OVERFLOW		6140533	0					
ANR	6140967	ArgumentList	( ps_uint ) ival		6140533	1					
ANR	6140968	Argument	( ps_uint ) ival		6140533	0					
ANR	6140969	CastExpression	( ps_uint ) ival		6140533	0					
ANR	6140970	CastTarget	ps_uint		6140533	0					
ANR	6140971	Identifier	ival		6140533	1					
ANR	6140972	Argument	d		6140533	1					
ANR	6140973	Identifier	d		6140533	0					
ANR	6140974	Argument	max_scan		6140533	2					
ANR	6140975	Identifier	max_scan		6140533	0					
ANR	6140976	CompoundStatement		73:58:2312:2312	6140533	1					
ANR	6140977	IfStatement	if ( ival == max_ps_int_scan / 10 && d == ( max_ps_int_scan % 10 ) + 1 && sign < 0 )		6140533	0					
ANR	6140978	Condition	ival == max_ps_int_scan / 10 && d == ( max_ps_int_scan % 10 ) + 1 && sign < 0	113:16:3647:3721	6140533	0	True				
ANR	6140979	AndExpression	ival == max_ps_int_scan / 10 && d == ( max_ps_int_scan % 10 ) + 1 && sign < 0		6140533	0		&&			
ANR	6140980	EqualityExpression	ival == max_ps_int_scan / 10		6140533	0		==			
ANR	6140981	Identifier	ival		6140533	0					
ANR	6140982	MultiplicativeExpression	max_ps_int_scan / 10		6140533	1		/			
ANR	6140983	Identifier	max_ps_int_scan		6140533	0					
ANR	6140984	PrimaryExpression	10		6140533	1					
ANR	6140985	AndExpression	d == ( max_ps_int_scan % 10 ) + 1 && sign < 0		6140533	1		&&			
ANR	6140986	EqualityExpression	d == ( max_ps_int_scan % 10 ) + 1		6140533	0		==			
ANR	6140987	Identifier	d		6140533	0					
ANR	6140988	AdditiveExpression	( max_ps_int_scan % 10 ) + 1		6140533	1		+			
ANR	6140989	MultiplicativeExpression	max_ps_int_scan % 10		6140533	0		%			
ANR	6140990	Identifier	max_ps_int_scan		6140533	0					
ANR	6140991	PrimaryExpression	10		6140533	1					
ANR	6140992	PrimaryExpression	1		6140533	1					
ANR	6140993	RelationalExpression	sign < 0		6140533	1		<			
ANR	6140994	Identifier	sign		6140533	0					
ANR	6140995	PrimaryExpression	0		6140533	1					
ANR	6140996	CompoundStatement		74:93:2407:2407	6140533	1					
ANR	6140997	ExpressionStatement	"GET_NEXT ( c , sp , c = EOFC )"	114:16:3742:3767	6140533	0	True				
ANR	6140998	CallExpression	"GET_NEXT ( c , sp , c = EOFC )"		6140533	0					
ANR	6140999	Callee	GET_NEXT		6140533	0					
ANR	6141000	Identifier	GET_NEXT		6140533	0					
ANR	6141001	ArgumentList	c		6140533	1					
ANR	6141002	Argument	c		6140533	0					
ANR	6141003	Identifier	c		6140533	0					
ANR	6141004	Argument	sp		6140533	1					
ANR	6141005	Identifier	sp		6140533	0					
ANR	6141006	Argument	c = EOFC		6140533	2					
ANR	6141007	AssignmentExpression	c = EOFC		6140533	0		=			
ANR	6141008	Identifier	c		6140533	0					
ANR	6141009	Identifier	EOFC		6140533	1					
ANR	6141010	ExpressionStatement	dval = - ( double ) min_ps_int_scan	115:16:3785:3816	6140533	1	True				
ANR	6141011	AssignmentExpression	dval = - ( double ) min_ps_int_scan		6140533	0		=			
ANR	6141012	Identifier	dval		6140533	0					
ANR	6141013	UnaryOperationExpression	- ( double ) min_ps_int_scan		6140533	1					
ANR	6141014	UnaryOperator	-		6140533	0					
ANR	6141015	CastExpression	( double ) min_ps_int_scan		6140533	1					
ANR	6141016	CastTarget	double		6140533	0					
ANR	6141017	Identifier	min_ps_int_scan		6140533	1					
ANR	6141018	IfStatement	if ( c == 'e' || c == 'E' )		6140533	2					
ANR	6141019	Condition	c == 'e' || c == 'E'	116:20:3838:3857	6140533	0	True				
ANR	6141020	OrExpression	c == 'e' || c == 'E'		6140533	0		||			
ANR	6141021	EqualityExpression	c == 'e'		6140533	0		==			
ANR	6141022	Identifier	c		6140533	0					
ANR	6141023	PrimaryExpression	'e'		6140533	1					
ANR	6141024	EqualityExpression	c == 'E'		6140533	1		==			
ANR	6141025	Identifier	c		6140533	0					
ANR	6141026	PrimaryExpression	'E'		6140533	1					
ANR	6141027	CompoundStatement		77:42:2543:2543	6140533	1					
ANR	6141028	ExpressionStatement	exp10 = 0	117:20:3882:3891	6140533	0	True				
ANR	6141029	AssignmentExpression	exp10 = 0		6140533	0		=			
ANR	6141030	Identifier	exp10		6140533	0					
ANR	6141031	PrimaryExpression	0		6140533	1					
ANR	6141032	GotoStatement	goto fs ;	118:20:3913:3920	6140533	1	True				
ANR	6141033	Identifier	fs		6140533	0					
ANR	6141034	ElseStatement	else		6140533	0					
ANR	6141035	IfStatement	if ( c == '.' )		6140533	0					
ANR	6141036	Condition	c == '.'	119:27:3949:3956	6140533	0	True				
ANR	6141037	EqualityExpression	c == '.'		6140533	0		==			
ANR	6141038	Identifier	c		6140533	0					
ANR	6141039	PrimaryExpression	'.'		6140533	1					
ANR	6141040	CompoundStatement		80:37:2642:2642	6140533	1					
ANR	6141041	ExpressionStatement	"GET_NEXT ( c , sp , c = EOFC )"	120:20:3981:4006	6140533	0	True				
ANR	6141042	CallExpression	"GET_NEXT ( c , sp , c = EOFC )"		6140533	0					
ANR	6141043	Callee	GET_NEXT		6140533	0					
ANR	6141044	Identifier	GET_NEXT		6140533	0					
ANR	6141045	ArgumentList	c		6140533	1					
ANR	6141046	Argument	c		6140533	0					
ANR	6141047	Identifier	c		6140533	0					
ANR	6141048	Argument	sp		6140533	1					
ANR	6141049	Identifier	sp		6140533	0					
ANR	6141050	Argument	c = EOFC		6140533	2					
ANR	6141051	AssignmentExpression	c = EOFC		6140533	0		=			
ANR	6141052	Identifier	c		6140533	0					
ANR	6141053	Identifier	EOFC		6140533	1					
ANR	6141054	ExpressionStatement	exp10 = 0	121:20:4028:4037	6140533	1	True				
ANR	6141055	AssignmentExpression	exp10 = 0		6140533	0		=			
ANR	6141056	Identifier	exp10		6140533	0					
ANR	6141057	PrimaryExpression	0		6140533	1					
ANR	6141058	GotoStatement	goto fd ;	122:20:4059:4066	6140533	2	True				
ANR	6141059	Identifier	fd		6140533	0					
ANR	6141060	ElseStatement	else		6140533	0					
ANR	6141061	IfStatement	"if ( ! IS_DIGIT ( d , c ) )"		6140533	0					
ANR	6141062	Condition	"! IS_DIGIT ( d , c )"	123:27:4095:4109	6140533	0	True				
ANR	6141063	UnaryOperationExpression	"! IS_DIGIT ( d , c )"		6140533	0					
ANR	6141064	UnaryOperator	!		6140533	0					
ANR	6141065	CallExpression	"IS_DIGIT ( d , c )"		6140533	1					
ANR	6141066	Callee	IS_DIGIT		6140533	0					
ANR	6141067	Identifier	IS_DIGIT		6140533	0					
ANR	6141068	ArgumentList	d		6140533	1					
ANR	6141069	Argument	d		6140533	0					
ANR	6141070	Identifier	d		6140533	0					
ANR	6141071	Argument	c		6140533	1					
ANR	6141072	Identifier	c		6140533	0					
ANR	6141073	CompoundStatement		84:44:2795:2795	6140533	1					
ANR	6141074	ExpressionStatement	ival = min_ps_int_scan	124:20:4134:4156	6140533	0	True				
ANR	6141075	AssignmentExpression	ival = min_ps_int_scan		6140533	0		=			
ANR	6141076	Identifier	ival		6140533	0					
ANR	6141077	Identifier	min_ps_int_scan		6140533	1					
ANR	6141078	BreakStatement	break ;	125:20:4178:4183	6140533	1	True				
ANR	6141079	ElseStatement	else		6140533	0					
ANR	6141080	ExpressionStatement	dval = ( double ) ival	128:16:4238:4257	6140533	0	True				
ANR	6141081	AssignmentExpression	dval = ( double ) ival		6140533	0		=			
ANR	6141082	Identifier	dval		6140533	0					
ANR	6141083	CastExpression	( double ) ival		6140533	1					
ANR	6141084	CastTarget	double		6140533	0					
ANR	6141085	Identifier	ival		6140533	1					
ANR	6141086	GotoStatement	goto l2d ;	129:12:4271:4279	6140533	1	True				
ANR	6141087	Identifier	l2d		6140533	0					
ANR	6141088	Label	ind :	132:2:4299:4302	6140533	96	True				
ANR	6141089	Identifier	ind		6140533	0					
ANR	6141090	SwitchStatement	switch ( c )		6140533	97					
ANR	6141091	Condition	c	133:12:4383:4383	6140533	0	True				
ANR	6141092	Identifier	c		6140533	0					
ANR	6141093	CompoundStatement		94:15:3069:3069	6140533	1					
ANR	6141094	Label	case '.' :	134:8:4396:4404	6140533	0	True				
ANR	6141095	ExpressionStatement	"GET_NEXT ( c , sp , c = EOFC )"	135:12:4418:4443	6140533	1	True				
ANR	6141096	CallExpression	"GET_NEXT ( c , sp , c = EOFC )"		6140533	0					
ANR	6141097	Callee	GET_NEXT		6140533	0					
ANR	6141098	Identifier	GET_NEXT		6140533	0					
ANR	6141099	ArgumentList	c		6140533	1					
ANR	6141100	Argument	c		6140533	0					
ANR	6141101	Identifier	c		6140533	0					
ANR	6141102	Argument	sp		6140533	1					
ANR	6141103	Identifier	sp		6140533	0					
ANR	6141104	Argument	c = EOFC		6140533	2					
ANR	6141105	AssignmentExpression	c = EOFC		6140533	0		=			
ANR	6141106	Identifier	c		6140533	0					
ANR	6141107	Identifier	EOFC		6140533	1					
ANR	6141108	GotoStatement	goto i2r ;	136:12:4457:4465	6140533	2	True				
ANR	6141109	Identifier	i2r		6140533	0					
ANR	6141110	Label	default :	137:8:4475:4482	6140533	3	True				
ANR	6141111	Identifier	default		6140533	0					
ANR	6141112	ExpressionStatement	* psp = sp	138:12:4496:4505	6140533	4	True				
ANR	6141113	AssignmentExpression	* psp = sp		6140533	0		=			
ANR	6141114	UnaryOperationExpression	* psp		6140533	0					
ANR	6141115	UnaryOperator	*		6140533	0					
ANR	6141116	Identifier	psp		6140533	1					
ANR	6141117	Identifier	sp		6140533	1					
ANR	6141118	ExpressionStatement	code = 1	139:12:4519:4527	6140533	5	True				
ANR	6141119	AssignmentExpression	code = 1		6140533	0		=			
ANR	6141120	Identifier	code		6140533	0					
ANR	6141121	PrimaryExpression	1		6140533	1					
ANR	6141122	BreakStatement	break ;	140:12:4541:4546	6140533	6	True				
ANR	6141123	Label	case EOFC :	141:8:4556:4565	6140533	7	True				
ANR	6141124	Identifier	EOFC		6140533	0					
ANR	6141125	BreakStatement	break ;	142:12:4579:4584	6140533	8	True				
ANR	6141126	Label	case 'e' :	143:8:4594:4602	6140533	9	True				
ANR	6141127	Label	case 'E' :	144:8:4612:4620	6140533	10	True				
ANR	6141128	IfStatement	if ( sign < 0 )		6140533	11					
ANR	6141129	Condition	sign < 0	145:16:4638:4645	6140533	0	True				
ANR	6141130	RelationalExpression	sign < 0		6140533	0		<			
ANR	6141131	Identifier	sign		6140533	0					
ANR	6141132	PrimaryExpression	0		6140533	1					
ANR	6141133	ExpressionStatement	ival = - ival	146:16:4664:4676	6140533	1	True				
ANR	6141134	AssignmentExpression	ival = - ival		6140533	0		=			
ANR	6141135	Identifier	ival		6140533	0					
ANR	6141136	UnaryOperationExpression	- ival		6140533	1					
ANR	6141137	UnaryOperator	-		6140533	0					
ANR	6141138	Identifier	ival		6140533	1					
ANR	6141139	ExpressionStatement	dval = ( double ) ival	147:12:4690:4709	6140533	12	True				
ANR	6141140	AssignmentExpression	dval = ( double ) ival		6140533	0		=			
ANR	6141141	Identifier	dval		6140533	0					
ANR	6141142	CastExpression	( double ) ival		6140533	1					
ANR	6141143	CastTarget	double		6140533	0					
ANR	6141144	Identifier	ival		6140533	1					
ANR	6141145	ExpressionStatement	exp10 = 0	148:12:4723:4732	6140533	13	True				
ANR	6141146	AssignmentExpression	exp10 = 0		6140533	0		=			
ANR	6141147	Identifier	exp10		6140533	0					
ANR	6141148	PrimaryExpression	0		6140533	1					
ANR	6141149	GotoStatement	goto fe ;	149:12:4746:4753	6140533	14	True				
ANR	6141150	Identifier	fe		6140533	0					
ANR	6141151	Label	case '#' :	150:8:4763:4771	6140533	15	True				
ANR	6141152	CompoundStatement		114:16:3526:3547	6140533	16					
ANR	6141153	IdentifierDeclStatement	const int radix = ival ;	152:16:4803:4825	6140533	0	True				
ANR	6141154	IdentifierDecl	radix = ival		6140533	0					
ANR	6141155	IdentifierDeclType	const int		6140533	0					
ANR	6141156	Identifier	radix		6140533	1					
ANR	6141157	AssignmentExpression	radix = ival		6140533	2		=			
ANR	6141158	Identifier	ival		6140533	0					
ANR	6141159	Identifier	ival		6140533	1					
ANR	6141160	IdentifierDeclStatement	"ps_int uval = 0 , imax ;"	153:16:4843:4864	6140533	1	True				
ANR	6141161	IdentifierDecl	uval = 0		6140533	0					
ANR	6141162	IdentifierDeclType	ps_int		6140533	0					
ANR	6141163	Identifier	uval		6140533	1					
ANR	6141164	AssignmentExpression	uval = 0		6140533	2		=			
ANR	6141165	Identifier	uval		6140533	0					
ANR	6141166	PrimaryExpression	0		6140533	1					
ANR	6141167	IdentifierDecl	imax		6140533	1					
ANR	6141168	IdentifierDeclType	ps_int		6140533	0					
ANR	6141169	Identifier	imax		6140533	1					
ANR	6141170	IfStatement	if ( sign || radix < min_radix || radix > max_radix )		6140533	2					
ANR	6141171	Condition	sign || radix < min_radix || radix > max_radix	155:20:4887:4932	6140533	0	True				
ANR	6141172	OrExpression	sign || radix < min_radix || radix > max_radix		6140533	0		||			
ANR	6141173	Identifier	sign		6140533	0					
ANR	6141174	OrExpression	radix < min_radix || radix > max_radix		6140533	1		||			
ANR	6141175	RelationalExpression	radix < min_radix		6140533	0		<			
ANR	6141176	Identifier	radix		6140533	0					
ANR	6141177	Identifier	min_radix		6140533	1					
ANR	6141178	RelationalExpression	radix > max_radix		6140533	1		>			
ANR	6141179	Identifier	radix		6140533	0					
ANR	6141180	Identifier	max_radix		6140533	1					
ANR	6141181	ExpressionStatement	return_error ( gs_error_syntaxerror )	156:20:4955:4989	6140533	1	True				
ANR	6141182	CallExpression	return_error ( gs_error_syntaxerror )		6140533	0					
ANR	6141183	Callee	return_error		6140533	0					
ANR	6141184	Identifier	return_error		6140533	0					
ANR	6141185	ArgumentList	gs_error_syntaxerror		6140533	1					
ANR	6141186	Argument	gs_error_syntaxerror		6140533	0					
ANR	6141187	Identifier	gs_error_syntaxerror		6140533	0					
ANR	6141188	IfStatement	if ( ! ( radix & ( radix - 1 ) ) )		6140533	3					
ANR	6141189	Condition	! ( radix & ( radix - 1 ) )	158:20:5072:5093	6140533	0	True				
ANR	6141190	UnaryOperationExpression	! ( radix & ( radix - 1 ) )		6140533	0					
ANR	6141191	UnaryOperator	!		6140533	0					
ANR	6141192	BitAndExpression	radix & ( radix - 1 )		6140533	1		&			
ANR	6141193	Identifier	radix		6140533	0					
ANR	6141194	AdditiveExpression	radix - 1		6140533	1		-			
ANR	6141195	Identifier	radix		6140533	0					
ANR	6141196	PrimaryExpression	1		6140533	1					
ANR	6141197	CompoundStatement		120:20:3801:3810	6140533	1					
ANR	6141198	IdentifierDeclStatement	int shift ;	159:20:5118:5127	6140533	0	True				
ANR	6141199	IdentifierDecl	shift		6140533	0					
ANR	6141200	IdentifierDeclType	int		6140533	0					
ANR	6141201	Identifier	shift		6140533	1					
ANR	6141202	SwitchStatement	switch ( radix )		6140533	1					
ANR	6141203	Condition	radix	161:28:5158:5162	6140533	0	True				
ANR	6141204	Identifier	radix		6140533	0					
ANR	6141205	CompoundStatement		122:35:3848:3848	6140533	1					
ANR	6141206	Label	case 2 :	162:24:5191:5197	6140533	0	True				
ANR	6141207	ExpressionStatement	"shift = 1 , imax = MAX_PS_UINT >> 1"	163:28:5227:5261	6140533	1	True				
ANR	6141208	Expression	"shift = 1 , imax = MAX_PS_UINT >> 1"		6140533	0					
ANR	6141209	AssignmentExpression	shift = 1		6140533	0		=			
ANR	6141210	Identifier	shift		6140533	0					
ANR	6141211	PrimaryExpression	1		6140533	1					
ANR	6141212	AssignmentExpression	imax = MAX_PS_UINT >> 1		6140533	1		=			
ANR	6141213	Identifier	imax		6140533	0					
ANR	6141214	ShiftExpression	MAX_PS_UINT >> 1		6140533	1		>>			
ANR	6141215	Identifier	MAX_PS_UINT		6140533	0					
ANR	6141216	PrimaryExpression	1		6140533	1					
ANR	6141217	BreakStatement	break ;	164:28:5291:5296	6140533	2	True				
ANR	6141218	Label	case 4 :	165:24:5322:5328	6140533	3	True				
ANR	6141219	ExpressionStatement	"shift = 2 , imax = MAX_PS_UINT >> 2"	166:28:5358:5392	6140533	4	True				
ANR	6141220	Expression	"shift = 2 , imax = MAX_PS_UINT >> 2"		6140533	0					
ANR	6141221	AssignmentExpression	shift = 2		6140533	0		=			
ANR	6141222	Identifier	shift		6140533	0					
ANR	6141223	PrimaryExpression	2		6140533	1					
ANR	6141224	AssignmentExpression	imax = MAX_PS_UINT >> 2		6140533	1		=			
ANR	6141225	Identifier	imax		6140533	0					
ANR	6141226	ShiftExpression	MAX_PS_UINT >> 2		6140533	1		>>			
ANR	6141227	Identifier	MAX_PS_UINT		6140533	0					
ANR	6141228	PrimaryExpression	2		6140533	1					
ANR	6141229	BreakStatement	break ;	167:28:5422:5427	6140533	5	True				
ANR	6141230	Label	case 8 :	168:24:5453:5459	6140533	6	True				
ANR	6141231	ExpressionStatement	"shift = 3 , imax = MAX_PS_UINT >> 3"	169:28:5489:5523	6140533	7	True				
ANR	6141232	Expression	"shift = 3 , imax = MAX_PS_UINT >> 3"		6140533	0					
ANR	6141233	AssignmentExpression	shift = 3		6140533	0		=			
ANR	6141234	Identifier	shift		6140533	0					
ANR	6141235	PrimaryExpression	3		6140533	1					
ANR	6141236	AssignmentExpression	imax = MAX_PS_UINT >> 3		6140533	1		=			
ANR	6141237	Identifier	imax		6140533	0					
ANR	6141238	ShiftExpression	MAX_PS_UINT >> 3		6140533	1		>>			
ANR	6141239	Identifier	MAX_PS_UINT		6140533	0					
ANR	6141240	PrimaryExpression	3		6140533	1					
ANR	6141241	BreakStatement	break ;	170:28:5553:5558	6140533	8	True				
ANR	6141242	Label	case 16 :	171:24:5584:5591	6140533	9	True				
ANR	6141243	ExpressionStatement	"shift = 4 , imax = MAX_PS_UINT >> 4"	172:28:5621:5655	6140533	10	True				
ANR	6141244	Expression	"shift = 4 , imax = MAX_PS_UINT >> 4"		6140533	0					
ANR	6141245	AssignmentExpression	shift = 4		6140533	0		=			
ANR	6141246	Identifier	shift		6140533	0					
ANR	6141247	PrimaryExpression	4		6140533	1					
ANR	6141248	AssignmentExpression	imax = MAX_PS_UINT >> 4		6140533	1		=			
ANR	6141249	Identifier	imax		6140533	0					
ANR	6141250	ShiftExpression	MAX_PS_UINT >> 4		6140533	1		>>			
ANR	6141251	Identifier	MAX_PS_UINT		6140533	0					
ANR	6141252	PrimaryExpression	4		6140533	1					
ANR	6141253	BreakStatement	break ;	173:28:5685:5690	6140533	11	True				
ANR	6141254	Label	case 32 :	174:24:5716:5723	6140533	12	True				
ANR	6141255	ExpressionStatement	"shift = 5 , imax = MAX_PS_UINT >> 5"	175:28:5753:5787	6140533	13	True				
ANR	6141256	Expression	"shift = 5 , imax = MAX_PS_UINT >> 5"		6140533	0					
ANR	6141257	AssignmentExpression	shift = 5		6140533	0		=			
ANR	6141258	Identifier	shift		6140533	0					
ANR	6141259	PrimaryExpression	5		6140533	1					
ANR	6141260	AssignmentExpression	imax = MAX_PS_UINT >> 5		6140533	1		=			
ANR	6141261	Identifier	imax		6140533	0					
ANR	6141262	ShiftExpression	MAX_PS_UINT >> 5		6140533	1		>>			
ANR	6141263	Identifier	MAX_PS_UINT		6140533	0					
ANR	6141264	PrimaryExpression	5		6140533	1					
ANR	6141265	BreakStatement	break ;	176:28:5817:5822	6140533	14	True				
ANR	6141266	Label	default :	177:24:5848:5855	6140533	15	True				
ANR	6141267	Identifier	default		6140533	0					
ANR	6141268	ExpressionStatement	return_error ( gs_error_rangecheck )	178:28:5904:5937	6140533	16	True				
ANR	6141269	CallExpression	return_error ( gs_error_rangecheck )		6140533	0					
ANR	6141270	Callee	return_error		6140533	0					
ANR	6141271	Identifier	return_error		6140533	0					
ANR	6141272	ArgumentList	gs_error_rangecheck		6140533	1					
ANR	6141273	Argument	gs_error_rangecheck		6140533	0					
ANR	6141274	Identifier	gs_error_rangecheck		6140533	0					
ANR	6141275	ForStatement	for ( ; ; uval = ( uval << shift ) + d )		6140533	2					
ANR	6141276	AssignmentExpression	uval = ( uval << shift ) + d	180:28:5989:6014	6140533	0	True	=			
ANR	6141277	Identifier	uval		6140533	0					
ANR	6141278	AdditiveExpression	( uval << shift ) + d		6140533	1		+			
ANR	6141279	ShiftExpression	uval << shift		6140533	0		<<			
ANR	6141280	Identifier	uval		6140533	0					
ANR	6141281	Identifier	shift		6140533	1					
ANR	6141282	Identifier	d		6140533	1					
ANR	6141283	CompoundStatement		141:56:4700:4700	6140533	1					
ANR	6141284	Statement	GET_NEXT	181:24:6043:6050	6140533	0	True				
ANR	6141285	Statement	(	181:32:6051:6051	6140533	1	True				
ANR	6141286	Statement	c	181:33:6052:6052	6140533	2	True				
ANR	6141287	Statement	","	181:34:6053:6053	6140533	3	True				
ANR	6141288	Statement	sp	181:36:6055:6056	6140533	4	True				
ANR	6141289	Statement	","	181:38:6057:6057	6140533	5	True				
ANR	6141290	Statement	break	181:40:6059:6063	6140533	6	True				
ANR	6141291	Statement	)	181:45:6064:6064	6140533	7	True				
ANR	6141292	ExpressionStatement		181:46:6065:6065	6140533	8	True				
ANR	6141293	ExpressionStatement	d = decoder [ c ]	182:24:6091:6105	6140533	9	True				
ANR	6141294	AssignmentExpression	d = decoder [ c ]		6140533	0		=			
ANR	6141295	Identifier	d		6140533	0					
ANR	6141296	ArrayIndexing	decoder [ c ]		6140533	1					
ANR	6141297	Identifier	decoder		6140533	0					
ANR	6141298	Identifier	c		6140533	1					
ANR	6141299	IfStatement	if ( d >= radix )		6140533	10					
ANR	6141300	Condition	d >= radix	183:28:6135:6144	6140533	0	True				
ANR	6141301	RelationalExpression	d >= radix		6140533	0		>=			
ANR	6141302	Identifier	d		6140533	0					
ANR	6141303	Identifier	radix		6140533	1					
ANR	6141304	CompoundStatement		144:40:4830:4830	6140533	1					
ANR	6141305	ExpressionStatement	* psp = sp	184:28:6177:6186	6140533	0	True				
ANR	6141306	AssignmentExpression	* psp = sp		6140533	0		=			
ANR	6141307	UnaryOperationExpression	* psp		6140533	0					
ANR	6141308	UnaryOperator	*		6140533	0					
ANR	6141309	Identifier	psp		6140533	1					
ANR	6141310	Identifier	sp		6140533	1					
ANR	6141311	ExpressionStatement	code = 1	185:28:6216:6224	6140533	1	True				
ANR	6141312	AssignmentExpression	code = 1		6140533	0		=			
ANR	6141313	Identifier	code		6140533	0					
ANR	6141314	PrimaryExpression	1		6140533	1					
ANR	6141315	BreakStatement	break ;	186:28:6254:6259	6140533	2	True				
ANR	6141316	IfStatement	if ( uval > imax )		6140533	11					
ANR	6141317	Condition	uval > imax	188:28:6315:6325	6140533	0	True				
ANR	6141318	RelationalExpression	uval > imax		6140533	0		>			
ANR	6141319	Identifier	uval		6140533	0					
ANR	6141320	Identifier	imax		6140533	1					
ANR	6141321	ExpressionStatement	return_error ( gs_error_limitcheck )	189:28:6356:6389	6140533	1	True				
ANR	6141322	CallExpression	return_error ( gs_error_limitcheck )		6140533	0					
ANR	6141323	Callee	return_error		6140533	0					
ANR	6141324	Identifier	return_error		6140533	0					
ANR	6141325	ArgumentList	gs_error_limitcheck		6140533	1					
ANR	6141326	Argument	gs_error_limitcheck		6140533	0					
ANR	6141327	Identifier	gs_error_limitcheck		6140533	0					
ANR	6141328	ElseStatement	else		6140533	0					
ANR	6141329	CompoundStatement		153:20:5141:5174	6140533	0					
ANR	6141330	IdentifierDeclStatement	ps_int irem = MAX_PS_UINT % radix ;	192:20:6458:6491	6140533	0	True				
ANR	6141331	IdentifierDecl	irem = MAX_PS_UINT % radix		6140533	0					
ANR	6141332	IdentifierDeclType	ps_int		6140533	0					
ANR	6141333	Identifier	irem		6140533	1					
ANR	6141334	AssignmentExpression	irem = MAX_PS_UINT % radix		6140533	2		=			
ANR	6141335	Identifier	irem		6140533	0					
ANR	6141336	MultiplicativeExpression	MAX_PS_UINT % radix		6140533	1		%			
ANR	6141337	Identifier	MAX_PS_UINT		6140533	0					
ANR	6141338	Identifier	radix		6140533	1					
ANR	6141339	ExpressionStatement	imax = MAX_PS_UINT / radix	194:20:6514:6540	6140533	1	True				
ANR	6141340	AssignmentExpression	imax = MAX_PS_UINT / radix		6140533	0		=			
ANR	6141341	Identifier	imax		6140533	0					
ANR	6141342	MultiplicativeExpression	MAX_PS_UINT / radix		6140533	1		/			
ANR	6141343	Identifier	MAX_PS_UINT		6140533	0					
ANR	6141344	Identifier	radix		6140533	1					
ANR	6141345	ForStatement	for ( ; ; uval = uval * radix + d )		6140533	2					
ANR	6141346	AssignmentExpression	uval = uval * radix + d	195:28:6570:6592	6140533	0	True	=			
ANR	6141347	Identifier	uval		6140533	0					
ANR	6141348	AdditiveExpression	uval * radix + d		6140533	1		+			
ANR	6141349	MultiplicativeExpression	uval * radix		6140533	0		*			
ANR	6141350	Identifier	uval		6140533	0					
ANR	6141351	Identifier	radix		6140533	1					
ANR	6141352	Identifier	d		6140533	1					
ANR	6141353	CompoundStatement		156:53:5278:5278	6140533	1					
ANR	6141354	Statement	GET_NEXT	196:24:6621:6628	6140533	0	True				
ANR	6141355	Statement	(	196:32:6629:6629	6140533	1	True				
ANR	6141356	Statement	c	196:33:6630:6630	6140533	2	True				
ANR	6141357	Statement	","	196:34:6631:6631	6140533	3	True				
ANR	6141358	Statement	sp	196:36:6633:6634	6140533	4	True				
ANR	6141359	Statement	","	196:38:6635:6635	6140533	5	True				
ANR	6141360	Statement	break	196:40:6637:6641	6140533	6	True				
ANR	6141361	Statement	)	196:45:6642:6642	6140533	7	True				
ANR	6141362	ExpressionStatement		196:46:6643:6643	6140533	8	True				
ANR	6141363	ExpressionStatement	d = decoder [ c ]	197:24:6669:6683	6140533	9	True				
ANR	6141364	AssignmentExpression	d = decoder [ c ]		6140533	0		=			
ANR	6141365	Identifier	d		6140533	0					
ANR	6141366	ArrayIndexing	decoder [ c ]		6140533	1					
ANR	6141367	Identifier	decoder		6140533	0					
ANR	6141368	Identifier	c		6140533	1					
ANR	6141369	IfStatement	if ( d >= radix )		6140533	10					
ANR	6141370	Condition	d >= radix	198:28:6713:6722	6140533	0	True				
ANR	6141371	RelationalExpression	d >= radix		6140533	0		>=			
ANR	6141372	Identifier	d		6140533	0					
ANR	6141373	Identifier	radix		6140533	1					
ANR	6141374	CompoundStatement		159:40:5408:5408	6140533	1					
ANR	6141375	ExpressionStatement	* psp = sp	199:28:6755:6764	6140533	0	True				
ANR	6141376	AssignmentExpression	* psp = sp		6140533	0		=			
ANR	6141377	UnaryOperationExpression	* psp		6140533	0					
ANR	6141378	UnaryOperator	*		6140533	0					
ANR	6141379	Identifier	psp		6140533	1					
ANR	6141380	Identifier	sp		6140533	1					
ANR	6141381	ExpressionStatement	code = 1	200:28:6794:6802	6140533	1	True				
ANR	6141382	AssignmentExpression	code = 1		6140533	0		=			
ANR	6141383	Identifier	code		6140533	0					
ANR	6141384	PrimaryExpression	1		6140533	1					
ANR	6141385	BreakStatement	break ;	201:28:6832:6837	6140533	2	True				
ANR	6141386	IfStatement	if ( uval >= imax && ( uval > imax || d > irem ) )		6140533	11					
ANR	6141387	Condition	uval >= imax && ( uval > imax || d > irem )	203:28:6893:6961	6140533	0	True				
ANR	6141388	AndExpression	uval >= imax && ( uval > imax || d > irem )		6140533	0		&&			
ANR	6141389	RelationalExpression	uval >= imax		6140533	0		>=			
ANR	6141390	Identifier	uval		6140533	0					
ANR	6141391	Identifier	imax		6140533	1					
ANR	6141392	OrExpression	uval > imax || d > irem		6140533	1		||			
ANR	6141393	RelationalExpression	uval > imax		6140533	0		>			
ANR	6141394	Identifier	uval		6140533	0					
ANR	6141395	Identifier	imax		6140533	1					
ANR	6141396	RelationalExpression	d > irem		6140533	1		>			
ANR	6141397	Identifier	d		6140533	0					
ANR	6141398	Identifier	irem		6140533	1					
ANR	6141399	ExpressionStatement	return_error ( gs_error_limitcheck )	206:28:7021:7054	6140533	1	True				
ANR	6141400	CallExpression	return_error ( gs_error_limitcheck )		6140533	0					
ANR	6141401	Callee	return_error		6140533	0					
ANR	6141402	Identifier	return_error		6140533	0					
ANR	6141403	ArgumentList	gs_error_limitcheck		6140533	1					
ANR	6141404	Argument	gs_error_limitcheck		6140533	0					
ANR	6141405	Identifier	gs_error_limitcheck		6140533	0					
ANR	6141406	IfStatement	if ( scanner_options & SCAN_CPSI_MODE )		6140533	4					
ANR	6141407	Condition	scanner_options & SCAN_CPSI_MODE	209:20:7116:7147	6140533	0	True				
ANR	6141408	BitAndExpression	scanner_options & SCAN_CPSI_MODE		6140533	0		&			
ANR	6141409	Identifier	scanner_options		6140533	0					
ANR	6141410	Identifier	SCAN_CPSI_MODE		6140533	1					
ANR	6141411	CompoundStatement		171:20:5855:5873	6140533	1					
ANR	6141412	IdentifierDeclStatement	ps_uint32 int1 = 0 ;	210:20:7172:7190	6140533	0	True				
ANR	6141413	IdentifierDecl	int1 = 0		6140533	0					
ANR	6141414	IdentifierDeclType	ps_uint32		6140533	0					
ANR	6141415	Identifier	int1		6140533	1					
ANR	6141416	AssignmentExpression	int1 = 0		6140533	2		=			
ANR	6141417	Identifier	int1		6140533	0					
ANR	6141418	PrimaryExpression	0		6140533	1					
ANR	6141419	ExpressionStatement	int1 |= ( uval & 0xffffffff )	211:20:7212:7239	6140533	1	True				
ANR	6141420	AssignmentExpression	int1 |= ( uval & 0xffffffff )		6140533	0		|=			
ANR	6141421	Identifier	int1		6140533	0					
ANR	6141422	BitAndExpression	uval & 0xffffffff		6140533	1		&			
ANR	6141423	Identifier	uval		6140533	0					
ANR	6141424	PrimaryExpression	0xffffffff		6140533	1					
ANR	6141425	ExpressionStatement	"make_int ( pref , ( ps_int ) ( ( ps_int32 ) int1 ) )"	212:20:7261:7301	6140533	2	True				
ANR	6141426	CallExpression	"make_int ( pref , ( ps_int ) ( ( ps_int32 ) int1 ) )"		6140533	0					
ANR	6141427	Callee	make_int		6140533	0					
ANR	6141428	Identifier	make_int		6140533	0					
ANR	6141429	ArgumentList	pref		6140533	1					
ANR	6141430	Argument	pref		6140533	0					
ANR	6141431	Identifier	pref		6140533	0					
ANR	6141432	Argument	( ps_int ) ( ( ps_int32 ) int1 )		6140533	1					
ANR	6141433	CastExpression	( ps_int ) ( ( ps_int32 ) int1 )		6140533	0					
ANR	6141434	CastTarget	ps_int		6140533	0					
ANR	6141435	CastExpression	( ps_int32 ) int1		6140533	1					
ANR	6141436	CastTarget	ps_int32		6140533	0					
ANR	6141437	Identifier	int1		6140533	1					
ANR	6141438	ElseStatement	else		6140533	0					
ANR	6141439	ExpressionStatement	"make_int ( pref , uval )"	215:20:7362:7382	6140533	0	True				
ANR	6141440	CallExpression	"make_int ( pref , uval )"		6140533	0					
ANR	6141441	Callee	make_int		6140533	0					
ANR	6141442	Identifier	make_int		6140533	0					
ANR	6141443	ArgumentList	pref		6140533	1					
ANR	6141444	Argument	pref		6140533	0					
ANR	6141445	Identifier	pref		6140533	0					
ANR	6141446	Argument	uval		6140533	1					
ANR	6141447	Identifier	uval		6140533	0					
ANR	6141448	ReturnStatement	return code ;	217:16:7401:7412	6140533	5	True				
ANR	6141449	Identifier	code		6140533	0					
ANR	6141450	Label	iret :	220:0:7434:7438	6140533	98	True				
ANR	6141451	Identifier	iret		6140533	0					
ANR	6141452	IfStatement	if ( scanner_options & SCAN_CPSI_MODE )		6140533	99					
ANR	6141453	Condition	scanner_options & SCAN_CPSI_MODE	221:8:7448:7479	6140533	0	True				
ANR	6141454	BitAndExpression	scanner_options & SCAN_CPSI_MODE		6140533	0		&			
ANR	6141455	Identifier	scanner_options		6140533	0					
ANR	6141456	Identifier	SCAN_CPSI_MODE		6140533	1					
ANR	6141457	CompoundStatement		182:42:6165:6165	6140533	1					
ANR	6141458	ExpressionStatement	"make_int ( pref , ( sign < 0 ? ( ps_int32 ) - ival : ( ps_int32 ) ival ) )"	222:8:7492:7553	6140533	0	True				
ANR	6141459	CallExpression	"make_int ( pref , ( sign < 0 ? ( ps_int32 ) - ival : ( ps_int32 ) ival ) )"		6140533	0					
ANR	6141460	Callee	make_int		6140533	0					
ANR	6141461	Identifier	make_int		6140533	0					
ANR	6141462	ArgumentList	pref		6140533	1					
ANR	6141463	Argument	pref		6140533	0					
ANR	6141464	Identifier	pref		6140533	0					
ANR	6141465	Argument	sign < 0 ? ( ps_int32 ) - ival : ( ps_int32 ) ival		6140533	1					
ANR	6141466	ConditionalExpression	sign < 0 ? ( ps_int32 ) - ival : ( ps_int32 ) ival		6140533	0					
ANR	6141467	Condition	sign < 0		6140533	0					
ANR	6141468	RelationalExpression	sign < 0		6140533	0		<			
ANR	6141469	Identifier	sign		6140533	0					
ANR	6141470	PrimaryExpression	0		6140533	1					
ANR	6141471	CastExpression	( ps_int32 ) - ival		6140533	1					
ANR	6141472	CastTarget	ps_int32		6140533	0					
ANR	6141473	UnaryOperationExpression	- ival		6140533	1					
ANR	6141474	UnaryOperator	-		6140533	0					
ANR	6141475	Identifier	ival		6140533	1					
ANR	6141476	CastExpression	( ps_int32 ) ival		6140533	2					
ANR	6141477	CastTarget	ps_int32		6140533	0					
ANR	6141478	Identifier	ival		6140533	1					
ANR	6141479	ElseStatement	else		6140533	0					
ANR	6141480	CompoundStatement		185:9:6253:6253	6140533	0					
ANR	6141481	ExpressionStatement	"make_int ( pref , ( sign < 0 ? ( ps_int ) - ival : ( ps_int ) ival ) )"	225:8:7580:7637	6140533	0	True				
ANR	6141482	CallExpression	"make_int ( pref , ( sign < 0 ? ( ps_int ) - ival : ( ps_int ) ival ) )"		6140533	0					
ANR	6141483	Callee	make_int		6140533	0					
ANR	6141484	Identifier	make_int		6140533	0					
ANR	6141485	ArgumentList	pref		6140533	1					
ANR	6141486	Argument	pref		6140533	0					
ANR	6141487	Identifier	pref		6140533	0					
ANR	6141488	Argument	sign < 0 ? ( ps_int ) - ival : ( ps_int ) ival		6140533	1					
ANR	6141489	ConditionalExpression	sign < 0 ? ( ps_int ) - ival : ( ps_int ) ival		6140533	0					
ANR	6141490	Condition	sign < 0		6140533	0					
ANR	6141491	RelationalExpression	sign < 0		6140533	0		<			
ANR	6141492	Identifier	sign		6140533	0					
ANR	6141493	PrimaryExpression	0		6140533	1					
ANR	6141494	CastExpression	( ps_int ) - ival		6140533	1					
ANR	6141495	CastTarget	ps_int		6140533	0					
ANR	6141496	UnaryOperationExpression	- ival		6140533	1					
ANR	6141497	UnaryOperator	-		6140533	0					
ANR	6141498	Identifier	ival		6140533	1					
ANR	6141499	CastExpression	( ps_int ) ival		6140533	2					
ANR	6141500	CastTarget	ps_int		6140533	0					
ANR	6141501	Identifier	ival		6140533	1					
ANR	6141502	ReturnStatement	return code ;	227:4:7649:7660	6140533	100	True				
ANR	6141503	Identifier	code		6140533	0					
ANR	6141504	Label	l2d :	230:0:7702:7705	6140533	101	True				
ANR	6141505	Identifier	l2d		6140533	0					
ANR	6141506	ExpressionStatement	exp10 = 0	231:4:7711:7720	6140533	102	True				
ANR	6141507	AssignmentExpression	exp10 = 0		6140533	0		=			
ANR	6141508	Identifier	exp10		6140533	0					
ANR	6141509	PrimaryExpression	0		6140533	1					
ANR	6141510	ForStatement	for ( ; ; )		6140533	103					
ANR	6141511	CompoundStatement		193:13:6418:6418	6140533	0					
ANR	6141512	ExpressionStatement	dval = dval * 10 + d	233:8:7745:7765	6140533	0	True				
ANR	6141513	AssignmentExpression	dval = dval * 10 + d		6140533	0		=			
ANR	6141514	Identifier	dval		6140533	0					
ANR	6141515	AdditiveExpression	dval * 10 + d		6140533	1		+			
ANR	6141516	MultiplicativeExpression	dval * 10		6140533	0		*			
ANR	6141517	Identifier	dval		6140533	0					
ANR	6141518	PrimaryExpression	10		6140533	1					
ANR	6141519	Identifier	d		6140533	1					
ANR	6141520	ExpressionStatement	"GET_NEXT ( c , sp , c = EOFC )"	234:8:7775:7800	6140533	1	True				
ANR	6141521	CallExpression	"GET_NEXT ( c , sp , c = EOFC )"		6140533	0					
ANR	6141522	Callee	GET_NEXT		6140533	0					
ANR	6141523	Identifier	GET_NEXT		6140533	0					
ANR	6141524	ArgumentList	c		6140533	1					
ANR	6141525	Argument	c		6140533	0					
ANR	6141526	Identifier	c		6140533	0					
ANR	6141527	Argument	sp		6140533	1					
ANR	6141528	Identifier	sp		6140533	0					
ANR	6141529	Argument	c = EOFC		6140533	2					
ANR	6141530	AssignmentExpression	c = EOFC		6140533	0		=			
ANR	6141531	Identifier	c		6140533	0					
ANR	6141532	Identifier	EOFC		6140533	1					
ANR	6141533	IfStatement	"if ( ! IS_DIGIT ( d , c ) )"		6140533	2					
ANR	6141534	Condition	"! IS_DIGIT ( d , c )"	235:12:7814:7828	6140533	0	True				
ANR	6141535	UnaryOperationExpression	"! IS_DIGIT ( d , c )"		6140533	0					
ANR	6141536	UnaryOperator	!		6140533	0					
ANR	6141537	CallExpression	"IS_DIGIT ( d , c )"		6140533	1					
ANR	6141538	Callee	IS_DIGIT		6140533	0					
ANR	6141539	Identifier	IS_DIGIT		6140533	0					
ANR	6141540	ArgumentList	d		6140533	1					
ANR	6141541	Argument	d		6140533	0					
ANR	6141542	Identifier	d		6140533	0					
ANR	6141543	Argument	c		6140533	1					
ANR	6141544	Identifier	c		6140533	0					
ANR	6141545	BreakStatement	break ;	236:12:7843:7848	6140533	1	True				
ANR	6141546	SwitchStatement	switch ( c )		6140533	104					
ANR	6141547	Condition	c	238:12:7868:7868	6140533	0	True				
ANR	6141548	Identifier	c		6140533	0					
ANR	6141549	CompoundStatement		199:15:6554:6554	6140533	1					
ANR	6141550	Label	case '.' :	239:8:7881:7889	6140533	0	True				
ANR	6141551	ExpressionStatement	"GET_NEXT ( c , sp , c = EOFC )"	240:12:7903:7928	6140533	1	True				
ANR	6141552	CallExpression	"GET_NEXT ( c , sp , c = EOFC )"		6140533	0					
ANR	6141553	Callee	GET_NEXT		6140533	0					
ANR	6141554	Identifier	GET_NEXT		6140533	0					
ANR	6141555	ArgumentList	c		6140533	1					
ANR	6141556	Argument	c		6140533	0					
ANR	6141557	Identifier	c		6140533	0					
ANR	6141558	Argument	sp		6140533	1					
ANR	6141559	Identifier	sp		6140533	0					
ANR	6141560	Argument	c = EOFC		6140533	2					
ANR	6141561	AssignmentExpression	c = EOFC		6140533	0		=			
ANR	6141562	Identifier	c		6140533	0					
ANR	6141563	Identifier	EOFC		6140533	1					
ANR	6141564	ExpressionStatement	exp10 = 0	241:12:7942:7951	6140533	2	True				
ANR	6141565	AssignmentExpression	exp10 = 0		6140533	0		=			
ANR	6141566	Identifier	exp10		6140533	0					
ANR	6141567	PrimaryExpression	0		6140533	1					
ANR	6141568	GotoStatement	goto fd ;	242:12:7965:7972	6140533	3	True				
ANR	6141569	Identifier	fd		6140533	0					
ANR	6141570	Label	default :	243:8:7982:7989	6140533	4	True				
ANR	6141571	Identifier	default		6140533	0					
ANR	6141572	ExpressionStatement	* psp = sp	244:12:8003:8012	6140533	5	True				
ANR	6141573	AssignmentExpression	* psp = sp		6140533	0		=			
ANR	6141574	UnaryOperationExpression	* psp		6140533	0					
ANR	6141575	UnaryOperator	*		6140533	0					
ANR	6141576	Identifier	psp		6140533	1					
ANR	6141577	Identifier	sp		6140533	1					
ANR	6141578	ExpressionStatement	code = 1	245:12:8026:8034	6140533	6	True				
ANR	6141579	AssignmentExpression	code = 1		6140533	0		=			
ANR	6141580	Identifier	code		6140533	0					
ANR	6141581	PrimaryExpression	1		6140533	1					
ANR	6141582	Label	case EOFC :	247:8:8076:8085	6140533	7	True				
ANR	6141583	Identifier	EOFC		6140533	0					
ANR	6141584	IfStatement	if ( sign < 0 )		6140533	8					
ANR	6141585	Condition	sign < 0	248:16:8103:8110	6140533	0	True				
ANR	6141586	RelationalExpression	sign < 0		6140533	0		<			
ANR	6141587	Identifier	sign		6140533	0					
ANR	6141588	PrimaryExpression	0		6140533	1					
ANR	6141589	ExpressionStatement	dval = - dval	249:16:8129:8141	6140533	1	True				
ANR	6141590	AssignmentExpression	dval = - dval		6140533	0		=			
ANR	6141591	Identifier	dval		6140533	0					
ANR	6141592	UnaryOperationExpression	- dval		6140533	1					
ANR	6141593	UnaryOperator	-		6140533	0					
ANR	6141594	Identifier	dval		6140533	1					
ANR	6141595	GotoStatement	goto rret ;	250:12:8155:8164	6140533	9	True				
ANR	6141596	Identifier	rret		6140533	0					
ANR	6141597	Label	case 'e' :	251:8:8174:8182	6140533	10	True				
ANR	6141598	Label	case 'E' :	252:8:8192:8200	6140533	11	True				
ANR	6141599	ExpressionStatement	exp10 = 0	253:12:8214:8223	6140533	12	True				
ANR	6141600	AssignmentExpression	exp10 = 0		6140533	0		=			
ANR	6141601	Identifier	exp10		6140533	0					
ANR	6141602	PrimaryExpression	0		6140533	1					
ANR	6141603	GotoStatement	goto fs ;	254:12:8237:8244	6140533	13	True				
ANR	6141604	Identifier	fs		6140533	0					
ANR	6141605	Label	case '#' :	255:8:8254:8262	6140533	14	True				
ANR	6141606	ExpressionStatement	return_error ( gs_error_syntaxerror )	256:12:8276:8310	6140533	15	True				
ANR	6141607	CallExpression	return_error ( gs_error_syntaxerror )		6140533	0					
ANR	6141608	Callee	return_error		6140533	0					
ANR	6141609	Identifier	return_error		6140533	0					
ANR	6141610	ArgumentList	gs_error_syntaxerror		6140533	1					
ANR	6141611	Argument	gs_error_syntaxerror		6140533	0					
ANR	6141612	Identifier	gs_error_syntaxerror		6140533	0					
ANR	6141613	Label	i2r :	260:0:8381:8384	6140533	105	True				
ANR	6141614	Identifier	i2r		6140533	0					
ANR	6141615	ExpressionStatement	exp10 = 0	261:4:8390:8399	6140533	106	True				
ANR	6141616	AssignmentExpression	exp10 = 0		6140533	0		=			
ANR	6141617	Identifier	exp10		6140533	0					
ANR	6141618	PrimaryExpression	0		6140533	1					
ANR	6141619	WhileStatement	"while ( IS_DIGIT ( d , c ) || c == '-' )"		6140533	107					
ANR	6141620	Condition	"IS_DIGIT ( d , c ) || c == '-'"	262:11:8412:8437	6140533	0	True				
ANR	6141621	OrExpression	"IS_DIGIT ( d , c ) || c == '-'"		6140533	0		||			
ANR	6141622	CallExpression	"IS_DIGIT ( d , c )"		6140533	0					
ANR	6141623	Callee	IS_DIGIT		6140533	0					
ANR	6141624	Identifier	IS_DIGIT		6140533	0					
ANR	6141625	ArgumentList	d		6140533	1					
ANR	6141626	Argument	d		6140533	0					
ANR	6141627	Identifier	d		6140533	0					
ANR	6141628	Argument	c		6140533	1					
ANR	6141629	Identifier	c		6140533	0					
ANR	6141630	EqualityExpression	c == '-'		6140533	1		==			
ANR	6141631	Identifier	c		6140533	0					
ANR	6141632	PrimaryExpression	'-'		6140533	1					
ANR	6141633	CompoundStatement		223:39:7123:7123	6140533	1					
ANR	6141634	IfStatement	if ( c == '-' )		6140533	0					
ANR	6141635	Condition	c == '-'	270:12:8820:8827	6140533	0	True				
ANR	6141636	EqualityExpression	c == '-'		6140533	0		==			
ANR	6141637	Identifier	c		6140533	0					
ANR	6141638	PrimaryExpression	'-'		6140533	1					
ANR	6141639	CompoundStatement		231:22:7513:7513	6140533	1					
ANR	6141640	IfStatement	if ( ( SCAN_PDF_INV_NUM & scanner_options ) == 0 )		6140533	0					
ANR	6141641	Condition	( SCAN_PDF_INV_NUM & scanner_options ) == 0	271:16:8848:8888	6140533	0	True				
ANR	6141642	EqualityExpression	( SCAN_PDF_INV_NUM & scanner_options ) == 0		6140533	0		==			
ANR	6141643	BitAndExpression	SCAN_PDF_INV_NUM & scanner_options		6140533	0		&			
ANR	6141644	Identifier	SCAN_PDF_INV_NUM		6140533	0					
ANR	6141645	Identifier	scanner_options		6140533	1					
ANR	6141646	PrimaryExpression	0		6140533	1					
ANR	6141647	BreakStatement	break ;	272:16:8907:8912	6140533	1	True				
ANR	6141648	DoStatement	do		6140533	1					
ANR	6141649	CompoundStatement		234:15:7612:7612	6140533	0					
ANR	6141650	ExpressionStatement	"GET_NEXT ( c , sp , c = EOFC )"	274:16:8947:8972	6140533	0	True				
ANR	6141651	CallExpression	"GET_NEXT ( c , sp , c = EOFC )"		6140533	0					
ANR	6141652	Callee	GET_NEXT		6140533	0					
ANR	6141653	Identifier	GET_NEXT		6140533	0					
ANR	6141654	ArgumentList	c		6140533	1					
ANR	6141655	Argument	c		6140533	0					
ANR	6141656	Identifier	c		6140533	0					
ANR	6141657	Argument	sp		6140533	1					
ANR	6141658	Identifier	sp		6140533	0					
ANR	6141659	Argument	c = EOFC		6140533	2					
ANR	6141660	AssignmentExpression	c = EOFC		6140533	0		=			
ANR	6141661	Identifier	c		6140533	0					
ANR	6141662	Identifier	EOFC		6140533	1					
ANR	6141663	Condition	"IS_DIGIT ( d , c )"	275:21:8995:9008	6140533	1	True				
ANR	6141664	CallExpression	"IS_DIGIT ( d , c )"		6140533	0					
ANR	6141665	Callee	IS_DIGIT		6140533	0					
ANR	6141666	Identifier	IS_DIGIT		6140533	0					
ANR	6141667	ArgumentList	d		6140533	1					
ANR	6141668	Argument	d		6140533	0					
ANR	6141669	Identifier	d		6140533	0					
ANR	6141670	Argument	c		6140533	1					
ANR	6141671	Identifier	c		6140533	0					
ANR	6141672	BreakStatement	break ;	276:12:9024:9029	6140533	2	True				
ANR	6141673	IfStatement	"if ( WOULD_OVERFLOW ( ival , d , max_int ) )"		6140533	1					
ANR	6141674	Condition	"WOULD_OVERFLOW ( ival , d , max_int )"	278:12:9053:9084	6140533	0	True				
ANR	6141675	CallExpression	"WOULD_OVERFLOW ( ival , d , max_int )"		6140533	0					
ANR	6141676	Callee	WOULD_OVERFLOW		6140533	0					
ANR	6141677	Identifier	WOULD_OVERFLOW		6140533	0					
ANR	6141678	ArgumentList	ival		6140533	1					
ANR	6141679	Argument	ival		6140533	0					
ANR	6141680	Identifier	ival		6140533	0					
ANR	6141681	Argument	d		6140533	1					
ANR	6141682	Identifier	d		6140533	0					
ANR	6141683	Argument	max_int		6140533	2					
ANR	6141684	Identifier	max_int		6140533	0					
ANR	6141685	CompoundStatement		239:46:7770:7770	6140533	1					
ANR	6141686	ExpressionStatement	dval = ( double ) ival	279:12:9101:9120	6140533	0	True				
ANR	6141687	AssignmentExpression	dval = ( double ) ival		6140533	0		=			
ANR	6141688	Identifier	dval		6140533	0					
ANR	6141689	CastExpression	( double ) ival		6140533	1					
ANR	6141690	CastTarget	double		6140533	0					
ANR	6141691	Identifier	ival		6140533	1					
ANR	6141692	GotoStatement	goto fd ;	280:12:9134:9141	6140533	1	True				
ANR	6141693	Identifier	fd		6140533	0					
ANR	6141694	ExpressionStatement	ival = ival * 10 + d	282:8:9161:9181	6140533	2	True				
ANR	6141695	AssignmentExpression	ival = ival * 10 + d		6140533	0		=			
ANR	6141696	Identifier	ival		6140533	0					
ANR	6141697	AdditiveExpression	ival * 10 + d		6140533	1		+			
ANR	6141698	MultiplicativeExpression	ival * 10		6140533	0		*			
ANR	6141699	Identifier	ival		6140533	0					
ANR	6141700	PrimaryExpression	10		6140533	1					
ANR	6141701	Identifier	d		6140533	1					
ANR	6141702	ExpressionStatement	exp10 --	283:8:9191:9198	6140533	3	True				
ANR	6141703	PostIncDecOperationExpression	exp10 --		6140533	0					
ANR	6141704	Identifier	exp10		6140533	0					
ANR	6141705	IncDec	--		6140533	1					
ANR	6141706	ExpressionStatement	"GET_NEXT ( c , sp , c = EOFC )"	284:8:9208:9233	6140533	4	True				
ANR	6141707	CallExpression	"GET_NEXT ( c , sp , c = EOFC )"		6140533	0					
ANR	6141708	Callee	GET_NEXT		6140533	0					
ANR	6141709	Identifier	GET_NEXT		6140533	0					
ANR	6141710	ArgumentList	c		6140533	1					
ANR	6141711	Argument	c		6140533	0					
ANR	6141712	Identifier	c		6140533	0					
ANR	6141713	Argument	sp		6140533	1					
ANR	6141714	Identifier	sp		6140533	0					
ANR	6141715	Argument	c = EOFC		6140533	2					
ANR	6141716	AssignmentExpression	c = EOFC		6140533	0		=			
ANR	6141717	Identifier	c		6140533	0					
ANR	6141718	Identifier	EOFC		6140533	1					
ANR	6141719	IfStatement	if ( sign < 0 )		6140533	108					
ANR	6141720	Condition	sign < 0	286:8:9249:9256	6140533	0	True				
ANR	6141721	RelationalExpression	sign < 0		6140533	0		<			
ANR	6141722	Identifier	sign		6140533	0					
ANR	6141723	PrimaryExpression	0		6140533	1					
ANR	6141724	ExpressionStatement	ival = - ival	287:8:9267:9279	6140533	1	True				
ANR	6141725	AssignmentExpression	ival = - ival		6140533	0		=			
ANR	6141726	Identifier	ival		6140533	0					
ANR	6141727	UnaryOperationExpression	- ival		6140533	1					
ANR	6141728	UnaryOperator	-		6140533	0					
ANR	6141729	Identifier	ival		6140533	1					
ANR	6141730	IfStatement	if ( ! ( c == 'e' || c == 'E' || exp10 < - NUM_POWERS_10 ) )		6140533	109					
ANR	6141731	Condition	! ( c == 'e' || c == 'E' || exp10 < - NUM_POWERS_10 )	289:8:9335:9383	6140533	0	True				
ANR	6141732	UnaryOperationExpression	! ( c == 'e' || c == 'E' || exp10 < - NUM_POWERS_10 )		6140533	0					
ANR	6141733	UnaryOperator	!		6140533	0					
ANR	6141734	OrExpression	c == 'e' || c == 'E' || exp10 < - NUM_POWERS_10		6140533	1		||			
ANR	6141735	EqualityExpression	c == 'e'		6140533	0		==			
ANR	6141736	Identifier	c		6140533	0					
ANR	6141737	PrimaryExpression	'e'		6140533	1					
ANR	6141738	OrExpression	c == 'E' || exp10 < - NUM_POWERS_10		6140533	1		||			
ANR	6141739	EqualityExpression	c == 'E'		6140533	0		==			
ANR	6141740	Identifier	c		6140533	0					
ANR	6141741	PrimaryExpression	'E'		6140533	1					
ANR	6141742	RelationalExpression	exp10 < - NUM_POWERS_10		6140533	1		<			
ANR	6141743	Identifier	exp10		6140533	0					
ANR	6141744	UnaryOperationExpression	- NUM_POWERS_10		6140533	1					
ANR	6141745	UnaryOperator	-		6140533	0					
ANR	6141746	Identifier	NUM_POWERS_10		6140533	1					
ANR	6141747	CompoundStatement		250:59:8069:8069	6140533	1					
ANR	6141748	IfStatement	if ( c != EOFC )		6140533	0					
ANR	6141749	Condition	c != EOFC	290:12:9433:9441	6140533	0	True				
ANR	6141750	EqualityExpression	c != EOFC		6140533	0		!=			
ANR	6141751	Identifier	c		6140533	0					
ANR	6141752	Identifier	EOFC		6140533	1					
ANR	6141753	ExpressionStatement	"* psp = sp , code = 1"	291:12:9456:9475	6140533	1	True				
ANR	6141754	Expression	"* psp = sp , code = 1"		6140533	0					
ANR	6141755	AssignmentExpression	* psp = sp		6140533	0		=			
ANR	6141756	UnaryOperationExpression	* psp		6140533	0					
ANR	6141757	UnaryOperator	*		6140533	0					
ANR	6141758	Identifier	psp		6140533	1					
ANR	6141759	Identifier	sp		6140533	1					
ANR	6141760	AssignmentExpression	code = 1		6140533	1		=			
ANR	6141761	Identifier	code		6140533	0					
ANR	6141762	PrimaryExpression	1		6140533	1					
ANR	6141763	ExpressionStatement	"make_real ( pref , ival * neg_powers_10 [ - exp10 ] )"	292:8:9485:9530	6140533	1	True				
ANR	6141764	CallExpression	"make_real ( pref , ival * neg_powers_10 [ - exp10 ] )"		6140533	0					
ANR	6141765	Callee	make_real		6140533	0					
ANR	6141766	Identifier	make_real		6140533	0					
ANR	6141767	ArgumentList	pref		6140533	1					
ANR	6141768	Argument	pref		6140533	0					
ANR	6141769	Identifier	pref		6140533	0					
ANR	6141770	Argument	ival * neg_powers_10 [ - exp10 ]		6140533	1					
ANR	6141771	MultiplicativeExpression	ival * neg_powers_10 [ - exp10 ]		6140533	0		*			
ANR	6141772	Identifier	ival		6140533	0					
ANR	6141773	ArrayIndexing	neg_powers_10 [ - exp10 ]		6140533	1					
ANR	6141774	Identifier	neg_powers_10		6140533	0					
ANR	6141775	UnaryOperationExpression	- exp10		6140533	1					
ANR	6141776	UnaryOperator	-		6140533	0					
ANR	6141777	Identifier	exp10		6140533	1					
ANR	6141778	ReturnStatement	return code ;	293:8:9540:9551	6140533	2	True				
ANR	6141779	Identifier	code		6140533	0					
ANR	6141780	ExpressionStatement	dval = ( double ) ival	295:4:9563:9582	6140533	110	True				
ANR	6141781	AssignmentExpression	dval = ( double ) ival		6140533	0		=			
ANR	6141782	Identifier	dval		6140533	0					
ANR	6141783	CastExpression	( double ) ival		6140533	1					
ANR	6141784	CastTarget	double		6140533	0					
ANR	6141785	Identifier	ival		6140533	1					
ANR	6141786	GotoStatement	goto fe ;	296:4:9588:9595	6140533	111	True				
ANR	6141787	Identifier	fe		6140533	0					
ANR	6141788	Label	fd :	299:0:9650:9652	6140533	112	True				
ANR	6141789	Identifier	fd		6140533	0					
ANR	6141790	WhileStatement	"while ( IS_DIGIT ( d , c ) )"		6140533	113					
ANR	6141791	Condition	"IS_DIGIT ( d , c )"	300:11:9665:9678	6140533	0	True				
ANR	6141792	CallExpression	"IS_DIGIT ( d , c )"		6140533	0					
ANR	6141793	Callee	IS_DIGIT		6140533	0					
ANR	6141794	Identifier	IS_DIGIT		6140533	0					
ANR	6141795	ArgumentList	d		6140533	1					
ANR	6141796	Argument	d		6140533	0					
ANR	6141797	Identifier	d		6140533	0					
ANR	6141798	Argument	c		6140533	1					
ANR	6141799	Identifier	c		6140533	0					
ANR	6141800	CompoundStatement		261:27:8364:8364	6140533	1					
ANR	6141801	ExpressionStatement	dval = dval * 10 + d	301:8:9691:9711	6140533	0	True				
ANR	6141802	AssignmentExpression	dval = dval * 10 + d		6140533	0		=			
ANR	6141803	Identifier	dval		6140533	0					
ANR	6141804	AdditiveExpression	dval * 10 + d		6140533	1		+			
ANR	6141805	MultiplicativeExpression	dval * 10		6140533	0		*			
ANR	6141806	Identifier	dval		6140533	0					
ANR	6141807	PrimaryExpression	10		6140533	1					
ANR	6141808	Identifier	d		6140533	1					
ANR	6141809	ExpressionStatement	exp10 --	302:8:9721:9728	6140533	1	True				
ANR	6141810	PostIncDecOperationExpression	exp10 --		6140533	0					
ANR	6141811	Identifier	exp10		6140533	0					
ANR	6141812	IncDec	--		6140533	1					
ANR	6141813	ExpressionStatement	"GET_NEXT ( c , sp , c = EOFC )"	303:8:9738:9763	6140533	2	True				
ANR	6141814	CallExpression	"GET_NEXT ( c , sp , c = EOFC )"		6140533	0					
ANR	6141815	Callee	GET_NEXT		6140533	0					
ANR	6141816	Identifier	GET_NEXT		6140533	0					
ANR	6141817	ArgumentList	c		6140533	1					
ANR	6141818	Argument	c		6140533	0					
ANR	6141819	Identifier	c		6140533	0					
ANR	6141820	Argument	sp		6140533	1					
ANR	6141821	Identifier	sp		6140533	0					
ANR	6141822	Argument	c = EOFC		6140533	2					
ANR	6141823	AssignmentExpression	c = EOFC		6140533	0		=			
ANR	6141824	Identifier	c		6140533	0					
ANR	6141825	Identifier	EOFC		6140533	1					
ANR	6141826	Label	fs :	305:0:9771:9773	6140533	114	True				
ANR	6141827	Identifier	fs		6140533	0					
ANR	6141828	IfStatement	if ( sign < 0 )		6140533	115					
ANR	6141829	Condition	sign < 0	306:8:9783:9790	6140533	0	True				
ANR	6141830	RelationalExpression	sign < 0		6140533	0		<			
ANR	6141831	Identifier	sign		6140533	0					
ANR	6141832	PrimaryExpression	0		6140533	1					
ANR	6141833	ExpressionStatement	dval = - dval	307:8:9801:9813	6140533	1	True				
ANR	6141834	AssignmentExpression	dval = - dval		6140533	0		=			
ANR	6141835	Identifier	dval		6140533	0					
ANR	6141836	UnaryOperationExpression	- dval		6140533	1					
ANR	6141837	UnaryOperator	-		6140533	0					
ANR	6141838	Identifier	dval		6140533	1					
ANR	6141839	Label	fe :	308:0:9815:9817	6140533	116	True				
ANR	6141840	Identifier	fe		6140533	0					
ANR	6141841	SwitchStatement	switch ( c )		6140533	117					
ANR	6141842	Condition	c	310:12:9892:9892	6140533	0	True				
ANR	6141843	Identifier	c		6140533	0					
ANR	6141844	CompoundStatement		271:15:8578:8578	6140533	1					
ANR	6141845	Label	case 'e' :	311:8:9905:9913	6140533	0	True				
ANR	6141846	Label	case 'E' :	312:8:9923:9931	6140533	1	True				
ANR	6141847	CompoundStatement		276:16:8717:8725	6140533	2					
ANR	6141848	IdentifierDeclStatement	int esign = 0 ;	314:16:10003:10016	6140533	0	True				
ANR	6141849	IdentifierDecl	esign = 0		6140533	0					
ANR	6141850	IdentifierDeclType	int		6140533	0					
ANR	6141851	Identifier	esign		6140533	1					
ANR	6141852	AssignmentExpression	esign = 0		6140533	2		=			
ANR	6141853	Identifier	esign		6140533	0					
ANR	6141854	PrimaryExpression	0		6140533	1					
ANR	6141855	IdentifierDeclStatement	int iexp ;	315:16:10034:10042	6140533	1	True				
ANR	6141856	IdentifierDecl	iexp		6140533	0					
ANR	6141857	IdentifierDeclType	int		6140533	0					
ANR	6141858	Identifier	iexp		6140533	1					
ANR	6141859	ExpressionStatement	"GET_NEXT ( c , sp , return_error ( gs_error_syntaxerror ) )"	317:16:10061:10112	6140533	2	True				
ANR	6141860	CallExpression	"GET_NEXT ( c , sp , return_error ( gs_error_syntaxerror ) )"		6140533	0					
ANR	6141861	Callee	GET_NEXT		6140533	0					
ANR	6141862	Identifier	GET_NEXT		6140533	0					
ANR	6141863	ArgumentList	c		6140533	1					
ANR	6141864	Argument	c		6140533	0					
ANR	6141865	Identifier	c		6140533	0					
ANR	6141866	Argument	sp		6140533	1					
ANR	6141867	Identifier	sp		6140533	0					
ANR	6141868	Argument	return_error ( gs_error_syntaxerror )		6140533	2					
ANR	6141869	CallExpression	return_error ( gs_error_syntaxerror )		6140533	0					
ANR	6141870	Callee	return_error		6140533	0					
ANR	6141871	Identifier	return_error		6140533	0					
ANR	6141872	ArgumentList	gs_error_syntaxerror		6140533	1					
ANR	6141873	Argument	gs_error_syntaxerror		6140533	0					
ANR	6141874	Identifier	gs_error_syntaxerror		6140533	0					
ANR	6141875	SwitchStatement	switch ( c )		6140533	3					
ANR	6141876	Condition	c	318:24:10138:10138	6140533	0	True				
ANR	6141877	Identifier	c		6140533	0					
ANR	6141878	CompoundStatement		279:27:8824:8824	6140533	1					
ANR	6141879	Label	case '-' :	319:20:10163:10171	6140533	0	True				
ANR	6141880	ExpressionStatement	esign = 1	320:24:10197:10206	6140533	1	True				
ANR	6141881	AssignmentExpression	esign = 1		6140533	0		=			
ANR	6141882	Identifier	esign		6140533	0					
ANR	6141883	PrimaryExpression	1		6140533	1					
ANR	6141884	Label	case '+' :	322:20:10271:10279	6140533	2	True				
ANR	6141885	ExpressionStatement	"GET_NEXT ( c , sp , return_error ( gs_error_syntaxerror ) )"	323:24:10305:10356	6140533	3	True				
ANR	6141886	CallExpression	"GET_NEXT ( c , sp , return_error ( gs_error_syntaxerror ) )"		6140533	0					
ANR	6141887	Callee	GET_NEXT		6140533	0					
ANR	6141888	Identifier	GET_NEXT		6140533	0					
ANR	6141889	ArgumentList	c		6140533	1					
ANR	6141890	Argument	c		6140533	0					
ANR	6141891	Identifier	c		6140533	0					
ANR	6141892	Argument	sp		6140533	1					
ANR	6141893	Identifier	sp		6140533	0					
ANR	6141894	Argument	return_error ( gs_error_syntaxerror )		6140533	2					
ANR	6141895	CallExpression	return_error ( gs_error_syntaxerror )		6140533	0					
ANR	6141896	Callee	return_error		6140533	0					
ANR	6141897	Identifier	return_error		6140533	0					
ANR	6141898	ArgumentList	gs_error_syntaxerror		6140533	1					
ANR	6141899	Argument	gs_error_syntaxerror		6140533	0					
ANR	6141900	Identifier	gs_error_syntaxerror		6140533	0					
ANR	6141901	IfStatement	"if ( ! IS_DIGIT ( d , c ) )"		6140533	4					
ANR	6141902	Condition	"! IS_DIGIT ( d , c )"	326:20:10470:10484	6140533	0	True				
ANR	6141903	UnaryOperationExpression	"! IS_DIGIT ( d , c )"		6140533	0					
ANR	6141904	UnaryOperator	!		6140533	0					
ANR	6141905	CallExpression	"IS_DIGIT ( d , c )"		6140533	1					
ANR	6141906	Callee	IS_DIGIT		6140533	0					
ANR	6141907	Identifier	IS_DIGIT		6140533	0					
ANR	6141908	ArgumentList	d		6140533	1					
ANR	6141909	Argument	d		6140533	0					
ANR	6141910	Identifier	d		6140533	0					
ANR	6141911	Argument	c		6140533	1					
ANR	6141912	Identifier	c		6140533	0					
ANR	6141913	ExpressionStatement	return_error ( gs_error_syntaxerror )	327:20:10507:10541	6140533	1	True				
ANR	6141914	CallExpression	return_error ( gs_error_syntaxerror )		6140533	0					
ANR	6141915	Callee	return_error		6140533	0					
ANR	6141916	Identifier	return_error		6140533	0					
ANR	6141917	ArgumentList	gs_error_syntaxerror		6140533	1					
ANR	6141918	Argument	gs_error_syntaxerror		6140533	0					
ANR	6141919	Identifier	gs_error_syntaxerror		6140533	0					
ANR	6141920	ExpressionStatement	iexp = d	328:16:10559:10567	6140533	5	True				
ANR	6141921	AssignmentExpression	iexp = d		6140533	0		=			
ANR	6141922	Identifier	iexp		6140533	0					
ANR	6141923	Identifier	d		6140533	1					
ANR	6141924	ForStatement	for ( ; ; iexp = iexp * 10 + d )		6140533	6					
ANR	6141925	AssignmentExpression	iexp = iexp * 10 + d	329:24:10593:10612	6140533	0	True	=			
ANR	6141926	Identifier	iexp		6140533	0					
ANR	6141927	AdditiveExpression	iexp * 10 + d		6140533	1		+			
ANR	6141928	MultiplicativeExpression	iexp * 10		6140533	0		*			
ANR	6141929	Identifier	iexp		6140533	0					
ANR	6141930	PrimaryExpression	10		6140533	1					
ANR	6141931	Identifier	d		6140533	1					
ANR	6141932	CompoundStatement		290:46:9298:9298	6140533	1					
ANR	6141933	Statement	GET_NEXT	330:20:10637:10644	6140533	0	True				
ANR	6141934	Statement	(	330:28:10645:10645	6140533	1	True				
ANR	6141935	Statement	c	330:29:10646:10646	6140533	2	True				
ANR	6141936	Statement	","	330:30:10647:10647	6140533	3	True				
ANR	6141937	Statement	sp	330:32:10649:10650	6140533	4	True				
ANR	6141938	Statement	","	330:34:10651:10651	6140533	5	True				
ANR	6141939	Statement	break	330:36:10653:10657	6140533	6	True				
ANR	6141940	Statement	)	330:41:10658:10658	6140533	7	True				
ANR	6141941	ExpressionStatement		330:42:10659:10659	6140533	8	True				
ANR	6141942	IfStatement	"if ( ! IS_DIGIT ( d , c ) )"		6140533	9					
ANR	6141943	Condition	"! IS_DIGIT ( d , c )"	331:24:10685:10699	6140533	0	True				
ANR	6141944	UnaryOperationExpression	"! IS_DIGIT ( d , c )"		6140533	0					
ANR	6141945	UnaryOperator	!		6140533	0					
ANR	6141946	CallExpression	"IS_DIGIT ( d , c )"		6140533	1					
ANR	6141947	Callee	IS_DIGIT		6140533	0					
ANR	6141948	Identifier	IS_DIGIT		6140533	0					
ANR	6141949	ArgumentList	d		6140533	1					
ANR	6141950	Argument	d		6140533	0					
ANR	6141951	Identifier	d		6140533	0					
ANR	6141952	Argument	c		6140533	1					
ANR	6141953	Identifier	c		6140533	0					
ANR	6141954	CompoundStatement		292:41:9385:9385	6140533	1					
ANR	6141955	ExpressionStatement	* psp = sp	332:24:10728:10737	6140533	0	True				
ANR	6141956	AssignmentExpression	* psp = sp		6140533	0		=			
ANR	6141957	UnaryOperationExpression	* psp		6140533	0					
ANR	6141958	UnaryOperator	*		6140533	0					
ANR	6141959	Identifier	psp		6140533	1					
ANR	6141960	Identifier	sp		6140533	1					
ANR	6141961	ExpressionStatement	code = 1	333:24:10763:10771	6140533	1	True				
ANR	6141962	AssignmentExpression	code = 1		6140533	0		=			
ANR	6141963	Identifier	code		6140533	0					
ANR	6141964	PrimaryExpression	1		6140533	1					
ANR	6141965	BreakStatement	break ;	334:24:10797:10802	6140533	2	True				
ANR	6141966	IfStatement	if ( iexp > 99 )		6140533	10					
ANR	6141967	Condition	iexp > 99	336:24:10850:10858	6140533	0	True				
ANR	6141968	RelationalExpression	iexp > 99		6140533	0		>			
ANR	6141969	Identifier	iexp		6140533	0					
ANR	6141970	PrimaryExpression	99		6140533	1					
ANR	6141971	ExpressionStatement	return_error ( gs_error_limitcheck )	337:24:10885:10918	6140533	1	True				
ANR	6141972	CallExpression	return_error ( gs_error_limitcheck )		6140533	0					
ANR	6141973	Callee	return_error		6140533	0					
ANR	6141974	Identifier	return_error		6140533	0					
ANR	6141975	ArgumentList	gs_error_limitcheck		6140533	1					
ANR	6141976	Argument	gs_error_limitcheck		6140533	0					
ANR	6141977	Identifier	gs_error_limitcheck		6140533	0					
ANR	6141978	IfStatement	if ( esign )		6140533	7					
ANR	6141979	Condition	esign	339:20:10958:10962	6140533	0	True				
ANR	6141980	Identifier	esign		6140533	0					
ANR	6141981	ExpressionStatement	exp10 -= iexp	340:20:10985:10998	6140533	1	True				
ANR	6141982	AssignmentExpression	exp10 -= iexp		6140533	0		-=			
ANR	6141983	Identifier	exp10		6140533	0					
ANR	6141984	Identifier	iexp		6140533	1					
ANR	6141985	ElseStatement	else		6140533	0					
ANR	6141986	ExpressionStatement	exp10 += iexp	342:20:11041:11054	6140533	0	True				
ANR	6141987	AssignmentExpression	exp10 += iexp		6140533	0		+=			
ANR	6141988	Identifier	exp10		6140533	0					
ANR	6141989	Identifier	iexp		6140533	1					
ANR	6141990	BreakStatement	break ;	343:16:11072:11077	6140533	8	True				
ANR	6141991	Label	default :	345:8:11101:11108	6140533	3	True				
ANR	6141992	Identifier	default		6140533	0					
ANR	6141993	ExpressionStatement	* psp = sp	346:12:11122:11131	6140533	4	True				
ANR	6141994	AssignmentExpression	* psp = sp		6140533	0		=			
ANR	6141995	UnaryOperationExpression	* psp		6140533	0					
ANR	6141996	UnaryOperator	*		6140533	0					
ANR	6141997	Identifier	psp		6140533	1					
ANR	6141998	Identifier	sp		6140533	1					
ANR	6141999	ExpressionStatement	code = 1	347:12:11145:11153	6140533	5	True				
ANR	6142000	AssignmentExpression	code = 1		6140533	0		=			
ANR	6142001	Identifier	code		6140533	0					
ANR	6142002	PrimaryExpression	1		6140533	1					
ANR	6142003	Label	case EOFC :	348:8:11163:11172	6140533	6	True				
ANR	6142004	Identifier	EOFC		6140533	0					
ANR	6142005	ExpressionStatement		349:12:11186:11186	6140533	7	True				
ANR	6142006	IfStatement	if ( exp10 > 0 )		6140533	118					
ANR	6142007	Condition	exp10 > 0	352:8:11237:11245	6140533	0	True				
ANR	6142008	RelationalExpression	exp10 > 0		6140533	0		>			
ANR	6142009	Identifier	exp10		6140533	0					
ANR	6142010	PrimaryExpression	0		6140533	1					
ANR	6142011	CompoundStatement		313:19:9931:9931	6140533	1					
ANR	6142012	WhileStatement	while ( exp10 > NUM_POWERS_10 )		6140533	0					
ANR	6142013	Condition	exp10 > NUM_POWERS_10	353:15:11265:11285	6140533	0	True				
ANR	6142014	RelationalExpression	exp10 > NUM_POWERS_10		6140533	0		>			
ANR	6142015	Identifier	exp10		6140533	0					
ANR	6142016	Identifier	NUM_POWERS_10		6140533	1					
ANR	6142017	ExpressionStatement	"dval *= powers_10 [ NUM_POWERS_10 ] , exp10 -= NUM_POWERS_10"	354:12:11300:11372	6140533	1	True				
ANR	6142018	Expression	"dval *= powers_10 [ NUM_POWERS_10 ] , exp10 -= NUM_POWERS_10"		6140533	0					
ANR	6142019	AssignmentExpression	dval *= powers_10 [ NUM_POWERS_10 ]		6140533	0		*=			
ANR	6142020	Identifier	dval		6140533	0					
ANR	6142021	ArrayIndexing	powers_10 [ NUM_POWERS_10 ]		6140533	1					
ANR	6142022	Identifier	powers_10		6140533	0					
ANR	6142023	Identifier	NUM_POWERS_10		6140533	1					
ANR	6142024	AssignmentExpression	exp10 -= NUM_POWERS_10		6140533	1		-=			
ANR	6142025	Identifier	exp10		6140533	0					
ANR	6142026	Identifier	NUM_POWERS_10		6140533	1					
ANR	6142027	IfStatement	if ( exp10 > 0 )		6140533	1					
ANR	6142028	Condition	exp10 > 0	356:12:11386:11394	6140533	0	True				
ANR	6142029	RelationalExpression	exp10 > 0		6140533	0		>			
ANR	6142030	Identifier	exp10		6140533	0					
ANR	6142031	PrimaryExpression	0		6140533	1					
ANR	6142032	ExpressionStatement	dval *= powers_10 [ exp10 ]	357:12:11409:11433	6140533	1	True				
ANR	6142033	AssignmentExpression	dval *= powers_10 [ exp10 ]		6140533	0		*=			
ANR	6142034	Identifier	dval		6140533	0					
ANR	6142035	ArrayIndexing	powers_10 [ exp10 ]		6140533	1					
ANR	6142036	Identifier	powers_10		6140533	0					
ANR	6142037	Identifier	exp10		6140533	1					
ANR	6142038	ElseStatement	else		6140533	0					
ANR	6142039	IfStatement	if ( exp10 < 0 )		6140533	0					
ANR	6142040	Condition	exp10 < 0	358:15:11450:11458	6140533	0	True				
ANR	6142041	RelationalExpression	exp10 < 0		6140533	0		<			
ANR	6142042	Identifier	exp10		6140533	0					
ANR	6142043	PrimaryExpression	0		6140533	1					
ANR	6142044	CompoundStatement		319:26:10144:10144	6140533	1					
ANR	6142045	WhileStatement	while ( exp10 < - NUM_POWERS_10 )		6140533	0					
ANR	6142046	Condition	exp10 < - NUM_POWERS_10	359:15:11478:11499	6140533	0	True				
ANR	6142047	RelationalExpression	exp10 < - NUM_POWERS_10		6140533	0		<			
ANR	6142048	Identifier	exp10		6140533	0					
ANR	6142049	UnaryOperationExpression	- NUM_POWERS_10		6140533	1					
ANR	6142050	UnaryOperator	-		6140533	0					
ANR	6142051	Identifier	NUM_POWERS_10		6140533	1					
ANR	6142052	ExpressionStatement	"dval /= powers_10 [ NUM_POWERS_10 ] , exp10 += NUM_POWERS_10"	360:12:11514:11586	6140533	1	True				
ANR	6142053	Expression	"dval /= powers_10 [ NUM_POWERS_10 ] , exp10 += NUM_POWERS_10"		6140533	0					
ANR	6142054	AssignmentExpression	dval /= powers_10 [ NUM_POWERS_10 ]		6140533	0		/=			
ANR	6142055	Identifier	dval		6140533	0					
ANR	6142056	ArrayIndexing	powers_10 [ NUM_POWERS_10 ]		6140533	1					
ANR	6142057	Identifier	powers_10		6140533	0					
ANR	6142058	Identifier	NUM_POWERS_10		6140533	1					
ANR	6142059	AssignmentExpression	exp10 += NUM_POWERS_10		6140533	1		+=			
ANR	6142060	Identifier	exp10		6140533	0					
ANR	6142061	Identifier	NUM_POWERS_10		6140533	1					
ANR	6142062	IfStatement	if ( exp10 < 0 )		6140533	1					
ANR	6142063	Condition	exp10 < 0	362:12:11600:11608	6140533	0	True				
ANR	6142064	RelationalExpression	exp10 < 0		6140533	0		<			
ANR	6142065	Identifier	exp10		6140533	0					
ANR	6142066	PrimaryExpression	0		6140533	1					
ANR	6142067	ExpressionStatement	dval /= powers_10 [ - exp10 ]	363:12:11623:11648	6140533	1	True				
ANR	6142068	AssignmentExpression	dval /= powers_10 [ - exp10 ]		6140533	0		/=			
ANR	6142069	Identifier	dval		6140533	0					
ANR	6142070	ArrayIndexing	powers_10 [ - exp10 ]		6140533	1					
ANR	6142071	Identifier	powers_10		6140533	0					
ANR	6142072	UnaryOperationExpression	- exp10		6140533	1					
ANR	6142073	UnaryOperator	-		6140533	0					
ANR	6142074	Identifier	exp10		6140533	1					
ANR	6142075	IfStatement	if ( dval >= 0 )		6140533	119					
ANR	6142076	Condition	dval >= 0	370:8:11839:11847	6140533	0	True				
ANR	6142077	RelationalExpression	dval >= 0		6140533	0		>=			
ANR	6142078	Identifier	dval		6140533	0					
ANR	6142079	PrimaryExpression	0		6140533	1					
ANR	6142080	CompoundStatement		331:19:10533:10533	6140533	1					
ANR	6142081	IfStatement	if ( dval > MAX_FLOAT )		6140533	0					
ANR	6142082	Condition	dval > MAX_FLOAT	371:12:11864:11879	6140533	0	True				
ANR	6142083	RelationalExpression	dval > MAX_FLOAT		6140533	0		>			
ANR	6142084	Identifier	dval		6140533	0					
ANR	6142085	Identifier	MAX_FLOAT		6140533	1					
ANR	6142086	ExpressionStatement	return_error ( gs_error_limitcheck )	372:12:11894:11927	6140533	1	True				
ANR	6142087	CallExpression	return_error ( gs_error_limitcheck )		6140533	0					
ANR	6142088	Callee	return_error		6140533	0					
ANR	6142089	Identifier	return_error		6140533	0					
ANR	6142090	ArgumentList	gs_error_limitcheck		6140533	1					
ANR	6142091	Argument	gs_error_limitcheck		6140533	0					
ANR	6142092	Identifier	gs_error_limitcheck		6140533	0					
ANR	6142093	ElseStatement	else		6140533	0					
ANR	6142094	CompoundStatement		334:11:10623:10623	6140533	0					
ANR	6142095	IfStatement	if ( dval < - MAX_FLOAT )		6140533	0					
ANR	6142096	Condition	dval < - MAX_FLOAT	374:12:11954:11970	6140533	0	True				
ANR	6142097	RelationalExpression	dval < - MAX_FLOAT		6140533	0		<			
ANR	6142098	Identifier	dval		6140533	0					
ANR	6142099	UnaryOperationExpression	- MAX_FLOAT		6140533	1					
ANR	6142100	UnaryOperator	-		6140533	0					
ANR	6142101	Identifier	MAX_FLOAT		6140533	1					
ANR	6142102	ExpressionStatement	return_error ( gs_error_limitcheck )	375:12:11985:12018	6140533	1	True				
ANR	6142103	CallExpression	return_error ( gs_error_limitcheck )		6140533	0					
ANR	6142104	Callee	return_error		6140533	0					
ANR	6142105	Identifier	return_error		6140533	0					
ANR	6142106	ArgumentList	gs_error_limitcheck		6140533	1					
ANR	6142107	Argument	gs_error_limitcheck		6140533	0					
ANR	6142108	Identifier	gs_error_limitcheck		6140533	0					
ANR	6142109	Label	rret :	377:0:12026:12030	6140533	120	True				
ANR	6142110	Identifier	rret		6140533	0					
ANR	6142111	ExpressionStatement	"make_real ( pref , dval )"	378:4:12036:12057	6140533	121	True				
ANR	6142112	CallExpression	"make_real ( pref , dval )"		6140533	0					
ANR	6142113	Callee	make_real		6140533	0					
ANR	6142114	Identifier	make_real		6140533	0					
ANR	6142115	ArgumentList	pref		6140533	1					
ANR	6142116	Argument	pref		6140533	0					
ANR	6142117	Identifier	pref		6140533	0					
ANR	6142118	Argument	dval		6140533	1					
ANR	6142119	Identifier	dval		6140533	0					
ANR	6142120	ReturnStatement	return code ;	379:4:12063:12074	6140533	122	True				
ANR	6142121	Identifier	code		6140533	0					
ANR	6142122	ReturnType	int		6140533	1					
ANR	6142123	Identifier	scan_number		6140533	2					
ANR	6142124	ParameterList	"const byte * str , const byte * end , int sign , ref * pref , const byte * * psp , int scanner_options"		6140533	3					
ANR	6142125	Parameter	const byte * str	38:12:1206:1221	6140533	0	True				
ANR	6142126	ParameterType	const byte *		6140533	0					
ANR	6142127	Identifier	str		6140533	1					
ANR	6142128	Parameter	const byte * end	38:30:1224:1239	6140533	1	True				
ANR	6142129	ParameterType	const byte *		6140533	0					
ANR	6142130	Identifier	end		6140533	1					
ANR	6142131	Parameter	int sign	38:48:1242:1249	6140533	2	True				
ANR	6142132	ParameterType	int		6140533	0					
ANR	6142133	Identifier	sign		6140533	1					
ANR	6142134	Parameter	ref * pref	39:12:1264:1273	6140533	3	True				
ANR	6142135	ParameterType	ref *		6140533	0					
ANR	6142136	Identifier	pref		6140533	1					
ANR	6142137	Parameter	const byte * * psp	39:24:1276:1292	6140533	4	True				
ANR	6142138	ParameterType	const byte * *		6140533	0					
ANR	6142139	Identifier	psp		6140533	1					
ANR	6142140	Parameter	int scanner_options	39:43:1295:1313	6140533	5	True				
ANR	6142141	ParameterType	int		6140533	0					
ANR	6142142	Identifier	scanner_options		6140533	1					
ANR	6142143	CFGEntryNode	ENTRY		6140533		True				
ANR	6142144	CFGExitNode	EXIT		6140533		True				
ANR	6142145	InfiniteForNode	true		6140533		True				
ANR	6142146	InfiniteForNode	true		6140533		True				
ANR	6142147	InfiniteForNode	true		6140533		True				
ANR	6142148	InfiniteForNode	true		6140533		True				
ANR	6142149	InfiniteForNode	true		6140533		True				
ANR	6142150	Symbol	* sp		6140533						
ANR	6142151	Symbol	SCAN_PDF_INV_NUM		6140533						
ANR	6142152	Symbol	* decoder		6140533						
ANR	6142153	Symbol	MAX_FLOAT		6140533						
ANR	6142154	Symbol	WOULD_OVERFLOW		6140533						
ANR	6142155	Symbol	gs_error_rangecheck		6140533						
ANR	6142156	Symbol	SCAN_CPSI_MODE		6140533						
ANR	6142157	Symbol	shift		6140533						
ANR	6142158	Symbol	sign		6140533						
ANR	6142159	Symbol	dval		6140533						
ANR	6142160	Symbol	int1		6140533						
ANR	6142161	Symbol	pref		6140533						
ANR	6142162	Symbol	neg_powers_10		6140533						
ANR	6142163	Symbol	max_radix		6140533						
ANR	6142164	Symbol	powers_10		6140533						
ANR	6142165	Symbol	MAX_PS_INT32		6140533						
ANR	6142166	Symbol	irem		6140533						
ANR	6142167	Symbol	min_ps_int_scan		6140533						
ANR	6142168	Symbol	iexp		6140533						
ANR	6142169	Symbol	MIN_PS_INT		6140533						
ANR	6142170	Symbol	ival		6140533						
ANR	6142171	Symbol	gs_error_syntaxerror		6140533						
ANR	6142172	Symbol	max_scan		6140533						
ANR	6142173	Symbol	decoder		6140533						
ANR	6142174	Symbol	MIN_PS_INT32		6140533						
ANR	6142175	Symbol	min_radix		6140533						
ANR	6142176	Symbol	NUM_POWERS_10		6140533						
ANR	6142177	Symbol	* exp10		6140533						
ANR	6142178	Symbol	str		6140533						
ANR	6142179	Symbol	* psp		6140533						
ANR	6142180	Symbol	uval		6140533						
ANR	6142181	Symbol	exp10		6140533						
ANR	6142182	Symbol	return_error		6140533						
ANR	6142183	Symbol	max_int		6140533						
ANR	6142184	Symbol	scanner_options		6140533						
ANR	6142185	Symbol	code		6140533						
ANR	6142186	Symbol	* neg_powers_10		6140533						
ANR	6142187	Symbol	max_ps_int_scan		6140533						
ANR	6142188	Symbol	EOFC		6140533						
ANR	6142189	Symbol	psp		6140533						
ANR	6142190	Symbol	* NUM_POWERS_10		6140533						
ANR	6142191	Symbol	gs_error_limitcheck		6140533						
ANR	6142192	Symbol	end		6140533						
ANR	6142193	Symbol	* powers_10		6140533						
ANR	6142194	Symbol	SCAN_PDF_UNSIGNED		6140533						
ANR	6142195	Symbol	sp		6140533						
ANR	6142196	Symbol	c		6140533						
ANR	6142197	Symbol	d		6140533						
ANR	6142198	Symbol	MAX_PS_UINT		6140533						
ANR	6142199	Symbol	esign		6140533						
ANR	6142200	Symbol	imax		6140533						
ANR	6142201	Symbol	* c		6140533						
ANR	6142202	Symbol	IS_DIGIT		6140533						
ANR	6142203	Symbol	radix		6140533						
ANR	6142204	Symbol	scan_char_decoder		6140533						
ANR	6142205	Symbol	MAX_PS_INT		6140533						
