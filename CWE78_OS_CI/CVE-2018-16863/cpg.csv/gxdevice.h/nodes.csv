command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5543669	File	data/converged/CVE-2018-16863_ghostpdl/gxdevice.h								
ANR	5543670	DeclStmt									
ANR	5543671	Decl							define gx_default_map_rgb_color gx_default_w_b_map_rgb_color define gx_default_map_color_rgb gx_default_w_b_map_color_rgb	define gx_default_map_rgb_color gx_default_w_b_map_rgb_color define gx_default_map_color_rgb gx_default_w_b_map_color_rgb ( gx_default_tile_rectangle )	dev_proc_tile_rectangle
ANR	5543672	DeclStmt									
ANR	5543673	Decl							define gx_non_imaging_create_compositor gx_null_create_compositor	define gx_non_imaging_create_compositor gx_null_create_compositor ( gx_default_b_w_map_rgb_color )	dev_proc_map_rgb_color
ANR	5543674	DeclStmt									
ANR	5543675	Decl							define gx_default_cmyk_map_cmyk_color cmyk_8bit_map_cmyk_color	define gx_default_cmyk_map_cmyk_color cmyk_8bit_map_cmyk_color ( gx_default_rgb_map_rgb_color )	dev_proc_map_rgb_color
ANR	5543676	DeclStmt									
ANR	5543677	Decl							define gx_forward_get_alpha_bits gx_default_get_alpha_bits	define gx_forward_get_alpha_bits gx_default_get_alpha_bits ( gx_forward_copy_alpha )	dev_proc_copy_alpha
ANR	5543678	DeclStmt									
ANR	5543679	Decl							define gx_forward_image_data gx_default_image_data define gx_forward_end_image gx_default_end_image	define gx_forward_image_data gx_default_image_data define gx_forward_end_image gx_default_end_image ( gx_forward_strip_tile_rectangle )	dev_proc_strip_tile_rectangle
ANR	5543680	DeclStmt									
ANR	5543681	Decl							int	"int ( gx_device * dev , char * Param , void * list )"	gx_default_get_param
ANR	5543682	DeclStmt									
ANR	5543683	Decl							void	void ( gx_device * )	gx_device_set_procs
ANR	5543684	DeclStmt									
ANR	5543685	Decl							void	void ( gx_device * )	gx_device_fill_in_procs
ANR	5543686	DeclStmt									
ANR	5543687	Decl							void	void ( gx_device_forward * )	gx_device_forward_fill_in_procs
ANR	5543688	DeclStmt									
ANR	5543689	Decl							void	void ( gx_device_forward * )	gx_device_forward_color_procs
ANR	5543690	DeclStmt									
ANR	5543691	Decl							void	void ( gx_device * dev )	check_device_separable
ANR	5543692	DeclStmt									
ANR	5543693	Decl							void	void ( gx_device * dev )	check_device_compatible_encoding
ANR	5543694	DeclStmt									
ANR	5543695	Decl							void	void ( gx_device * dev )	set_linear_color_bits_mask_shift
ANR	5543696	DeclStmt									
ANR	5543697	Decl							void	"void ( gx_device * dev , const gx_device * target )"	gx_device_copy_color_procs
ANR	5543698	DeclStmt									
ANR	5543699	Decl							gx_color_index	gx_color_index ( gx_device * dev )	gx_device_black
ANR	5543700	DeclStmt									
ANR	5543701	Decl							gx_color_index	gx_color_index ( gx_device * dev )	gx_device_white
ANR	5543702	DeclStmt									
ANR	5543703	Decl							void	void ( gx_device * dev )	gx_device_decache_colors
ANR	5543704	DeclStmt									
ANR	5543705	Decl							void	"void ( gx_device * dev , const gx_device * target )"	gx_device_copy_color_params
ANR	5543706	DeclStmt									
ANR	5543707	Decl							void	"void ( gx_device * dev , const gx_device * target )"	gx_device_copy_params
ANR	5543708	DeclStmt									
ANR	5543709	Decl							int	"int ( gs_parsed_file_name_t * pfn , const char * * pfmt , const char * fname , uint len , gs_memory_t * memory )"	gx_parse_output_file_name
ANR	5543710	DeclStmt									
ANR	5543711	Decl							bool	"bool ( const char * fname , gs_memory_t * memory )"	gx_outputfile_is_separate_pages
ANR	5543712	DeclStmt									
ANR	5543713	Decl							int	"int ( const gx_device * dev , char * fname , bool binary , bool positionable , FILE * * pfile )"	gx_device_open_output_file
ANR	5543714	DeclStmt									
ANR	5543715	Decl							int	"int ( const gx_device * dev , const char * fname , FILE * file )"	gx_device_close_output_file
ANR	5543716	DeclStmt									
ANR	5543717	Decl							int	"int ( const gx_device * dev , const char * fname )"	gx_device_delete_output_file
ANR	5543718	DeclStmt									
ANR	5543719	Decl							BEGIN	"BEGIN ( dev , x , y , w , h )"	fit_fill_xy
ANR	5543720	DeclStmt									
ANR	5543721	Decl							BEGIN	"BEGIN ( dev , x , y , w , h )"	fit_fill_xywh
ANR	5543722	DeclStmt									
ANR	5543723	Decl							BEGIN	"BEGIN ( dev , data , data_x , raster , id , x , y , w , h )"	fit_copy_xyw
ANR	5543724	ClassDef	gdev_input_media_s	618:8:27757:27931							
ANR	5543725	DeclStmt									
ANR	5543726	Decl							float	float [ 4 ]	PageSize
ANR	5543727	DeclStmt									
ANR	5543728	Decl							const char	const char *	MediaColor
ANR	5543729	DeclStmt									
ANR	5543730	Decl							float	float	MediaWeight
ANR	5543731	DeclStmt									
ANR	5543732	Decl							const char	const char *	MediaType
ANR	5543733	DeclStmt									
ANR	5543734	Decl							gdev_input_media_s	gdev_input_media_s	gdev_input_media_t
ANR	5543735	DeclStmt									
ANR	5543736	Decl							const gdev_input_media_t	const gdev_input_media_t	gdev_input_media_default
ANR	5543737	DeclStmt									
ANR	5543738	Decl							void	void ( gdev_input_media_t * pim )	gdev_input_media_init
ANR	5543739	DeclStmt									
ANR	5543740	Decl							int	"int ( gs_param_list * mlist , gs_param_dict * pdict , int count )"	gdev_begin_input_media
ANR	5543741	DeclStmt									
ANR	5543742	Decl							int	"int ( int index , gs_param_dict * pdict , double width_points , double height_points )"	gdev_write_input_page_size
ANR	5543743	DeclStmt									
ANR	5543744	Decl							int	"int ( int index , gs_param_dict * pdict , const gdev_input_media_t * pim )"	gdev_write_input_media
ANR	5543745	DeclStmt									
ANR	5543746	Decl							int	"int ( gs_param_list * mlist , gs_param_dict * pdict )"	gdev_end_input_media
ANR	5543747	ClassDef	gdev_output_media_s	641:8:28569:28647							
ANR	5543748	DeclStmt									
ANR	5543749	Decl							const char	const char *	OutputType
ANR	5543750	DeclStmt									
ANR	5543751	Decl							gdev_output_media_s	gdev_output_media_s	gdev_output_media_t
ANR	5543752	DeclStmt									
ANR	5543753	Decl							const gdev_output_media_t	const gdev_output_media_t	gdev_output_media_default
ANR	5543754	DeclStmt									
ANR	5543755	Decl							int	"int ( gs_param_list * mlist , gs_param_dict * pdict , int count )"	gdev_begin_output_media
ANR	5543756	DeclStmt									
ANR	5543757	Decl							int	"int ( int index , gs_param_dict * pdict , const gdev_output_media_t * pom )"	gdev_write_output_media
ANR	5543758	DeclStmt									
ANR	5543759	Decl							void	"void ( gs_param_string * icc_pro , gx_device * dev )"	gx_default_put_icc_dir
ANR	5543760	DeclStmt									
ANR	5543761	Decl							int	"int ( gs_param_list * mlist , gs_param_dict * pdict )"	gdev_end_output_media
ANR	5543762	DeclStmt									
ANR	5543763	Decl							void	"void ( gx_device * dev , int le_req )"	gx_device_request_leadingedge
ANR	5543764	DeclStmt									
ANR	5543765	Decl							int	int ( const gs_composite_t * pct )	gs_is_pdf14trans_compositor
ANR	5543766	DeclStmt									
ANR	5543767	Decl							define subclass_common t_dev_proc_create_compositor	define subclass_common t_dev_proc_create_compositor *	saved_compositor_method
ANR	5543768	ClassDef	<unnamed>	670:8:29674:29804							
ANR	5543769	DeclStmt									
ANR	5543770	Decl							t_dev_proc_create_compositor	t_dev_proc_create_compositor *	saved_compositor_method
ANR	5543771	DeclStmt									
ANR	5543772	Decl							gx_device_forward	gx_device_forward *	forwarding_dev
ANR	5543773	DeclStmt									
ANR	5543774	Decl									generic_subclass_data
ANR	5543775	DeclStmt									
ANR	5543776	Decl							int	"int ( gx_device * dest , gx_device * src , gx_device * prototype )"	gx_copy_device_procs
ANR	5543777	DeclStmt									
ANR	5543778	Decl							int	"int ( gx_device * dev_to_subclass , gx_device * new_prototype , unsigned int private_data_size )"	gx_device_subclass
ANR	5543779	DeclStmt									
ANR	5543780	Decl							int	int ( gx_device * dev )	gx_device_unsubclass
ANR	5543781	DeclStmt									
ANR	5543782	Decl							int	int ( gx_device * dev )	gx_update_from_subclass
ANR	5543783	DeclStmt									
ANR	5543784	Decl							int	"int ( gx_device * dev , gx_device * * pcdev , const gs_composite_t * pcte , gs_gstate * pgs , gs_memory_t * memory , gx_device * cdev )"	gx_subclass_create_compositor
