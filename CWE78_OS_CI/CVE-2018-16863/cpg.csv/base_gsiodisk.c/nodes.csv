command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	662638	File	data/converged/CVE-2018-16863_ghostpdl/base_gsiodisk.c								
ANR	662639	DeclStmt									
ANR	662640	Decl							const gx_io_device	const gx_io_device	varname
ANR	662641	ClassDef	diskn_state_s	154:8:6376:6570							
ANR	662642	DeclStmt									
ANR	662643	Decl							int	int	root_size
ANR	662644	DeclStmt									
ANR	662645	Decl							char	char *	root
ANR	662646	DeclStmt									
ANR	662647	Decl							gs_memory_t	gs_memory_t *	memory
ANR	662648	DeclStmt									
ANR	662649	Decl							diskn_state_s	diskn_state_s	diskn_state
ANR	662650	ClassDef	map_file_enum_s	168:8:6830:7085							
ANR	662651	DeclStmt									
ANR	662652	Decl							FILE	FILE *	stream
ANR	662653	DeclStmt									
ANR	662654	Decl							char	char *	pattern
ANR	662655	DeclStmt									
ANR	662656	Decl							char	char *	root
ANR	662657	DeclStmt									
ANR	662658	Decl							gs_memory_t	gs_memory_t *	memory
ANR	662659	DeclStmt									
ANR	662660	Decl							map_file_enum_s	map_file_enum_s	map_file_enum
ANR	662661	DeclStmt									
ANR	662662	Decl							void	"void * ( gs_memory_t * , const char * , const char * , uint )"	map_file_enum_init
ANR	662663	DeclStmt									
ANR	662664	Decl							bool	"bool ( void * , char * )"	map_file_enum_next
ANR	662665	DeclStmt									
ANR	662666	Decl							void	void ( void * )	map_file_enum_close
ANR	662667	DeclStmt									
ANR	662668	Decl							bool	"bool ( gs_memory_t * , const char * , const char * , char * )"	map_file_name_get
ANR	662669	DeclStmt									
ANR	662670	Decl							void	"void ( gs_memory_t * , const char * , const char * )"	map_file_name_add
ANR	662671	DeclStmt									
ANR	662672	Decl							void	"void ( gs_memory_t * , const char * , const char * , const char * )"	map_file_name_ren
ANR	662673	DeclStmt									
ANR	662674	Decl							void	"void ( gs_memory_t * , const char * , const char * )"	map_file_name_del
ANR	662675	Function	iodev_diskn_init	186:0:7729:8130							
ANR	662676	FunctionDef	"iodev_diskn_init (gx_io_device * iodev , gs_memory_t * mem)"		662675	0					
ANR	662677	CompoundStatement		188:0:7798:8130	662675	0					
ANR	662678	IdentifierDeclStatement	"diskn_state * pstate = gs_alloc_struct ( mem , diskn_state , & st_diskn_state , ""iodev_diskn_init(state)"" ) ;"	189:4:7804:7952	662675	0	True				
ANR	662679	IdentifierDecl	"* pstate = gs_alloc_struct ( mem , diskn_state , & st_diskn_state , ""iodev_diskn_init(state)"" )"		662675	0					
ANR	662680	IdentifierDeclType	diskn_state *		662675	0					
ANR	662681	Identifier	pstate		662675	1					
ANR	662682	AssignmentExpression	"* pstate = gs_alloc_struct ( mem , diskn_state , & st_diskn_state , ""iodev_diskn_init(state)"" )"		662675	2		=			
ANR	662683	Identifier	pstate		662675	0					
ANR	662684	CallExpression	"gs_alloc_struct ( mem , diskn_state , & st_diskn_state , ""iodev_diskn_init(state)"" )"		662675	1					
ANR	662685	Callee	gs_alloc_struct		662675	0					
ANR	662686	Identifier	gs_alloc_struct		662675	0					
ANR	662687	ArgumentList	mem		662675	1					
ANR	662688	Argument	mem		662675	0					
ANR	662689	Identifier	mem		662675	0					
ANR	662690	Argument	diskn_state		662675	1					
ANR	662691	Identifier	diskn_state		662675	0					
ANR	662692	Argument	& st_diskn_state		662675	2					
ANR	662693	UnaryOperationExpression	& st_diskn_state		662675	0					
ANR	662694	UnaryOperator	&		662675	0					
ANR	662695	Identifier	st_diskn_state		662675	1					
ANR	662696	Argument	"""iodev_diskn_init(state)"""		662675	3					
ANR	662697	PrimaryExpression	"""iodev_diskn_init(state)"""		662675	0					
ANR	662698	IfStatement	if ( ! pstate )		662675	1					
ANR	662699	Condition	! pstate	191:8:7962:7968	662675	0	True				
ANR	662700	UnaryOperationExpression	! pstate		662675	0					
ANR	662701	UnaryOperator	!		662675	0					
ANR	662702	Identifier	pstate		662675	1					
ANR	662703	ExpressionStatement	return_error ( gs_error_VMerror )	192:8:7979:8009	662675	1	True				
ANR	662704	CallExpression	return_error ( gs_error_VMerror )		662675	0					
ANR	662705	Callee	return_error		662675	0					
ANR	662706	Identifier	return_error		662675	0					
ANR	662707	ArgumentList	gs_error_VMerror		662675	1					
ANR	662708	Argument	gs_error_VMerror		662675	0					
ANR	662709	Identifier	gs_error_VMerror		662675	0					
ANR	662710	ExpressionStatement	pstate -> root_size = 0	193:4:8015:8036	662675	2	True				
ANR	662711	AssignmentExpression	pstate -> root_size = 0		662675	0		=			
ANR	662712	PtrMemberAccess	pstate -> root_size		662675	0					
ANR	662713	Identifier	pstate		662675	0					
ANR	662714	Identifier	root_size		662675	1					
ANR	662715	PrimaryExpression	0		662675	1					
ANR	662716	ExpressionStatement	pstate -> root = NULL	194:4:8042:8061	662675	3	True				
ANR	662717	AssignmentExpression	pstate -> root = NULL		662675	0		=			
ANR	662718	PtrMemberAccess	pstate -> root		662675	0					
ANR	662719	Identifier	pstate		662675	0					
ANR	662720	Identifier	root		662675	1					
ANR	662721	Identifier	NULL		662675	1					
ANR	662722	ExpressionStatement	pstate -> memory = mem	195:4:8067:8087	662675	4	True				
ANR	662723	AssignmentExpression	pstate -> memory = mem		662675	0		=			
ANR	662724	PtrMemberAccess	pstate -> memory		662675	0					
ANR	662725	Identifier	pstate		662675	0					
ANR	662726	Identifier	memory		662675	1					
ANR	662727	Identifier	mem		662675	1					
ANR	662728	ExpressionStatement	iodev -> state = pstate	196:4:8093:8114	662675	5	True				
ANR	662729	AssignmentExpression	iodev -> state = pstate		662675	0		=			
ANR	662730	PtrMemberAccess	iodev -> state		662675	0					
ANR	662731	Identifier	iodev		662675	0					
ANR	662732	Identifier	state		662675	1					
ANR	662733	Identifier	pstate		662675	1					
ANR	662734	ReturnStatement	return 0 ;	197:4:8120:8128	662675	6	True				
ANR	662735	PrimaryExpression	0		662675	0					
ANR	662736	ReturnType	static int		662675	1					
ANR	662737	Identifier	iodev_diskn_init		662675	2					
ANR	662738	ParameterList	"gx_io_device * iodev , gs_memory_t * mem"		662675	3					
ANR	662739	Parameter	gx_io_device * iodev	187:17:7757:7776	662675	0	True				
ANR	662740	ParameterType	gx_io_device *		662675	0					
ANR	662741	Identifier	iodev		662675	1					
ANR	662742	Parameter	gs_memory_t * mem	187:39:7779:7795	662675	1	True				
ANR	662743	ParameterType	gs_memory_t *		662675	0					
ANR	662744	Identifier	mem		662675	1					
ANR	662745	CFGEntryNode	ENTRY		662675		True				
ANR	662746	CFGExitNode	EXIT		662675		True				
ANR	662747	Symbol	NULL		662675						
ANR	662748	Symbol	* iodev		662675						
ANR	662749	Symbol	diskn_state		662675						
ANR	662750	Symbol	pstate -> root		662675						
ANR	662751	Symbol	gs_alloc_struct		662675						
ANR	662752	Symbol	pstate		662675						
ANR	662753	Symbol	gs_error_VMerror		662675						
ANR	662754	Symbol	pstate -> root_size		662675						
ANR	662755	Symbol	iodev		662675						
ANR	662756	Symbol	mem		662675						
ANR	662757	Symbol	* pstate		662675						
ANR	662758	Symbol	iodev -> state		662675						
ANR	662759	Symbol	& st_diskn_state		662675						
ANR	662760	Symbol	pstate -> memory		662675						
ANR	662761	Function	iodev_diskn_finit	200:0:8133:8303							
ANR	662762	FunctionDef	"iodev_diskn_finit (gx_io_device * iodev , gs_memory_t * mem)"		662761	0					
ANR	662763	CompoundStatement		202:0:8204:8303	662761	0					
ANR	662764	ExpressionStatement	"gs_object_free ( mem , iodev -> state , ""iodev_diskn_finit"" )"	203:4:8210:8264	662761	0	True				
ANR	662765	CallExpression	"gs_object_free ( mem , iodev -> state , ""iodev_diskn_finit"" )"		662761	0					
ANR	662766	Callee	gs_object_free		662761	0					
ANR	662767	Identifier	gs_object_free		662761	0					
ANR	662768	ArgumentList	mem		662761	1					
ANR	662769	Argument	mem		662761	0					
ANR	662770	Identifier	mem		662761	0					
ANR	662771	Argument	iodev -> state		662761	1					
ANR	662772	PtrMemberAccess	iodev -> state		662761	0					
ANR	662773	Identifier	iodev		662761	0					
ANR	662774	Identifier	state		662761	1					
ANR	662775	Argument	"""iodev_diskn_finit"""		662761	2					
ANR	662776	PrimaryExpression	"""iodev_diskn_finit"""		662761	0					
ANR	662777	ExpressionStatement	iodev -> state = NULL	204:4:8270:8289	662761	1	True				
ANR	662778	AssignmentExpression	iodev -> state = NULL		662761	0		=			
ANR	662779	PtrMemberAccess	iodev -> state		662761	0					
ANR	662780	Identifier	iodev		662761	0					
ANR	662781	Identifier	state		662761	1					
ANR	662782	Identifier	NULL		662761	1					
ANR	662783	ReturnStatement	return ;	205:4:8295:8301	662761	2	True				
ANR	662784	ReturnType	static void		662761	1					
ANR	662785	Identifier	iodev_diskn_finit		662761	2					
ANR	662786	ParameterList	"gx_io_device * iodev , gs_memory_t * mem"		662761	3					
ANR	662787	Parameter	gx_io_device * iodev	201:18:8163:8182	662761	0	True				
ANR	662788	ParameterType	gx_io_device *		662761	0					
ANR	662789	Identifier	iodev		662761	1					
ANR	662790	Parameter	gs_memory_t * mem	201:40:8185:8201	662761	1	True				
ANR	662791	ParameterType	gs_memory_t *		662761	0					
ANR	662792	Identifier	mem		662761	1					
ANR	662793	CFGEntryNode	ENTRY		662761		True				
ANR	662794	CFGExitNode	EXIT		662761		True				
ANR	662795	Symbol	NULL		662761						
ANR	662796	Symbol	iodev		662761						
ANR	662797	Symbol	mem		662761						
ANR	662798	Symbol	* iodev		662761						
ANR	662799	Symbol	iodev -> state		662761						
ANR	662800	Function	iodev_diskn_fopen	208:0:8306:9552							
ANR	662801	FunctionDef	"iodev_diskn_fopen (gx_io_device * iodev , const char * fname , const char * access , FILE * * pfile , char * rfname , uint rnamelen)"		662800	0					
ANR	662802	CompoundStatement		211:0:8455:9552	662800	0					
ANR	662803	IdentifierDeclStatement	diskn_state * pstate = ( diskn_state * ) iodev -> state ;	212:4:8461:8511	662800	0	True				
ANR	662804	IdentifierDecl	* pstate = ( diskn_state * ) iodev -> state		662800	0					
ANR	662805	IdentifierDeclType	diskn_state *		662800	0					
ANR	662806	Identifier	pstate		662800	1					
ANR	662807	AssignmentExpression	* pstate = ( diskn_state * ) iodev -> state		662800	2		=			
ANR	662808	Identifier	pstate		662800	0					
ANR	662809	CastExpression	( diskn_state * ) iodev -> state		662800	1					
ANR	662810	CastTarget	diskn_state *		662800	0					
ANR	662811	PtrMemberAccess	iodev -> state		662800	1					
ANR	662812	Identifier	iodev		662800	0					
ANR	662813	Identifier	state		662800	1					
ANR	662814	IdentifierDeclStatement	"char * realname = ( char * ) gs_alloc_bytes ( pstate -> memory , gp_file_name_sizeof , ""iodev_diskn_fopen(realname)"" ) ;"	213:4:8517:8624	662800	1	True				
ANR	662815	IdentifierDecl	"* realname = ( char * ) gs_alloc_bytes ( pstate -> memory , gp_file_name_sizeof , ""iodev_diskn_fopen(realname)"" )"		662800	0					
ANR	662816	IdentifierDeclType	char *		662800	0					
ANR	662817	Identifier	realname		662800	1					
ANR	662818	AssignmentExpression	"* realname = ( char * ) gs_alloc_bytes ( pstate -> memory , gp_file_name_sizeof , ""iodev_diskn_fopen(realname)"" )"		662800	2		=			
ANR	662819	Identifier	realname		662800	0					
ANR	662820	CastExpression	"( char * ) gs_alloc_bytes ( pstate -> memory , gp_file_name_sizeof , ""iodev_diskn_fopen(realname)"" )"		662800	1					
ANR	662821	CastTarget	char *		662800	0					
ANR	662822	CallExpression	"gs_alloc_bytes ( pstate -> memory , gp_file_name_sizeof , ""iodev_diskn_fopen(realname)"" )"		662800	1					
ANR	662823	Callee	gs_alloc_bytes		662800	0					
ANR	662824	Identifier	gs_alloc_bytes		662800	0					
ANR	662825	ArgumentList	pstate -> memory		662800	1					
ANR	662826	Argument	pstate -> memory		662800	0					
ANR	662827	PtrMemberAccess	pstate -> memory		662800	0					
ANR	662828	Identifier	pstate		662800	0					
ANR	662829	Identifier	memory		662800	1					
ANR	662830	Argument	gp_file_name_sizeof		662800	1					
ANR	662831	Identifier	gp_file_name_sizeof		662800	0					
ANR	662832	Argument	"""iodev_diskn_fopen(realname)"""		662800	2					
ANR	662833	PrimaryExpression	"""iodev_diskn_fopen(realname)"""		662800	0					
ANR	662834	IdentifierDeclStatement	int code = 0 ;	214:4:8630:8642	662800	2	True				
ANR	662835	IdentifierDecl	code = 0		662800	0					
ANR	662836	IdentifierDeclType	int		662800	0					
ANR	662837	Identifier	code		662800	1					
ANR	662838	AssignmentExpression	code = 0		662800	2		=			
ANR	662839	Identifier	code		662800	0					
ANR	662840	PrimaryExpression	0		662800	1					
ANR	662841	IfStatement	if ( realname == NULL )		662800	3					
ANR	662842	Condition	realname == NULL	216:8:8653:8668	662800	0	True				
ANR	662843	EqualityExpression	realname == NULL		662800	0		==			
ANR	662844	Identifier	realname		662800	0					
ANR	662845	Identifier	NULL		662800	1					
ANR	662846	CompoundStatement		6:26:215:215	662800	1					
ANR	662847	ExpressionStatement	code = gs_note_error ( gs_error_VMerror )	217:8:8681:8719	662800	0	True				
ANR	662848	AssignmentExpression	code = gs_note_error ( gs_error_VMerror )		662800	0		=			
ANR	662849	Identifier	code		662800	0					
ANR	662850	CallExpression	gs_note_error ( gs_error_VMerror )		662800	1					
ANR	662851	Callee	gs_note_error		662800	0					
ANR	662852	Identifier	gs_note_error		662800	0					
ANR	662853	ArgumentList	gs_error_VMerror		662800	1					
ANR	662854	Argument	gs_error_VMerror		662800	0					
ANR	662855	Identifier	gs_error_VMerror		662800	0					
ANR	662856	GotoStatement	goto done ;	218:1:8722:8731	662800	1	True				
ANR	662857	Identifier	done		662800	0					
ANR	662858	IfStatement	if ( ! pstate -> root )		662800	4					
ANR	662859	Condition	! pstate -> root	222:8:8797:8809	662800	0	True				
ANR	662860	UnaryOperationExpression	! pstate -> root		662800	0					
ANR	662861	UnaryOperator	!		662800	0					
ANR	662862	PtrMemberAccess	pstate -> root		662800	1					
ANR	662863	Identifier	pstate		662800	0					
ANR	662864	Identifier	root		662800	1					
ANR	662865	CompoundStatement		12:23:356:356	662800	1					
ANR	662866	ExpressionStatement	code = gs_note_error ( gs_error_undefinedfilename )	223:8:8822:8870	662800	0	True				
ANR	662867	AssignmentExpression	code = gs_note_error ( gs_error_undefinedfilename )		662800	0		=			
ANR	662868	Identifier	code		662800	0					
ANR	662869	CallExpression	gs_note_error ( gs_error_undefinedfilename )		662800	1					
ANR	662870	Callee	gs_note_error		662800	0					
ANR	662871	Identifier	gs_note_error		662800	0					
ANR	662872	ArgumentList	gs_error_undefinedfilename		662800	1					
ANR	662873	Argument	gs_error_undefinedfilename		662800	0					
ANR	662874	Identifier	gs_error_undefinedfilename		662800	0					
ANR	662875	GotoStatement	goto done ;	224:1:8873:8882	662800	1	True				
ANR	662876	Identifier	done		662800	0					
ANR	662877	IfStatement	"if ( ! map_file_name_get ( pstate -> memory , ( char * ) pstate -> root , fname , realname ) )"		662800	5					
ANR	662878	Condition	"! map_file_name_get ( pstate -> memory , ( char * ) pstate -> root , fname , realname )"	228:8:8940:9012	662800	0	True				
ANR	662879	UnaryOperationExpression	"! map_file_name_get ( pstate -> memory , ( char * ) pstate -> root , fname , realname )"		662800	0					
ANR	662880	UnaryOperator	!		662800	0					
ANR	662881	CallExpression	"map_file_name_get ( pstate -> memory , ( char * ) pstate -> root , fname , realname )"		662800	1					
ANR	662882	Callee	map_file_name_get		662800	0					
ANR	662883	Identifier	map_file_name_get		662800	0					
ANR	662884	ArgumentList	pstate -> memory		662800	1					
ANR	662885	Argument	pstate -> memory		662800	0					
ANR	662886	PtrMemberAccess	pstate -> memory		662800	0					
ANR	662887	Identifier	pstate		662800	0					
ANR	662888	Identifier	memory		662800	1					
ANR	662889	Argument	( char * ) pstate -> root		662800	1					
ANR	662890	CastExpression	( char * ) pstate -> root		662800	0					
ANR	662891	CastTarget	char *		662800	0					
ANR	662892	PtrMemberAccess	pstate -> root		662800	1					
ANR	662893	Identifier	pstate		662800	0					
ANR	662894	Identifier	root		662800	1					
ANR	662895	Argument	fname		662800	2					
ANR	662896	Identifier	fname		662800	0					
ANR	662897	Argument	realname		662800	3					
ANR	662898	Identifier	realname		662800	0					
ANR	662899	CompoundStatement		18:83:559:559	662800	1					
ANR	662900	IfStatement	"if ( strchr ( access , 'w' ) )"		662800	0					
ANR	662901	Condition	"strchr ( access , 'w' )"	229:12:9029:9047	662800	0	True				
ANR	662902	CallExpression	"strchr ( access , 'w' )"		662800	0					
ANR	662903	Callee	strchr		662800	0					
ANR	662904	Identifier	strchr		662800	0					
ANR	662905	ArgumentList	access		662800	1					
ANR	662906	Argument	access		662800	0					
ANR	662907	Identifier	access		662800	0					
ANR	662908	Argument	'w'		662800	1					
ANR	662909	PrimaryExpression	'w'		662800	0					
ANR	662910	CompoundStatement		19:33:594:594	662800	1					
ANR	662911	ExpressionStatement	"map_file_name_add ( pstate -> memory , pstate -> root , fname )"	230:12:9064:9118	662800	0	True				
ANR	662912	CallExpression	"map_file_name_add ( pstate -> memory , pstate -> root , fname )"		662800	0					
ANR	662913	Callee	map_file_name_add		662800	0					
ANR	662914	Identifier	map_file_name_add		662800	0					
ANR	662915	ArgumentList	pstate -> memory		662800	1					
ANR	662916	Argument	pstate -> memory		662800	0					
ANR	662917	PtrMemberAccess	pstate -> memory		662800	0					
ANR	662918	Identifier	pstate		662800	0					
ANR	662919	Identifier	memory		662800	1					
ANR	662920	Argument	pstate -> root		662800	1					
ANR	662921	PtrMemberAccess	pstate -> root		662800	0					
ANR	662922	Identifier	pstate		662800	0					
ANR	662923	Identifier	root		662800	1					
ANR	662924	Argument	fname		662800	2					
ANR	662925	Identifier	fname		662800	0					
ANR	662926	ExpressionStatement	"map_file_name_get ( pstate -> memory , pstate -> root , fname , realname )"	231:12:9132:9196	662800	1	True				
ANR	662927	CallExpression	"map_file_name_get ( pstate -> memory , pstate -> root , fname , realname )"		662800	0					
ANR	662928	Callee	map_file_name_get		662800	0					
ANR	662929	Identifier	map_file_name_get		662800	0					
ANR	662930	ArgumentList	pstate -> memory		662800	1					
ANR	662931	Argument	pstate -> memory		662800	0					
ANR	662932	PtrMemberAccess	pstate -> memory		662800	0					
ANR	662933	Identifier	pstate		662800	0					
ANR	662934	Identifier	memory		662800	1					
ANR	662935	Argument	pstate -> root		662800	1					
ANR	662936	PtrMemberAccess	pstate -> root		662800	0					
ANR	662937	Identifier	pstate		662800	0					
ANR	662938	Identifier	root		662800	1					
ANR	662939	Argument	fname		662800	2					
ANR	662940	Identifier	fname		662800	0					
ANR	662941	Argument	realname		662800	3					
ANR	662942	Identifier	realname		662800	0					
ANR	662943	ElseStatement	else		662800	0					
ANR	662944	CompoundStatement		23:13:765:765	662800	0					
ANR	662945	ExpressionStatement	code = gs_note_error ( gs_error_undefinedfilename )	234:12:9235:9283	662800	0	True				
ANR	662946	AssignmentExpression	code = gs_note_error ( gs_error_undefinedfilename )		662800	0		=			
ANR	662947	Identifier	code		662800	0					
ANR	662948	CallExpression	gs_note_error ( gs_error_undefinedfilename )		662800	1					
ANR	662949	Callee	gs_note_error		662800	0					
ANR	662950	Identifier	gs_note_error		662800	0					
ANR	662951	ArgumentList	gs_error_undefinedfilename		662800	1					
ANR	662952	Argument	gs_error_undefinedfilename		662800	0					
ANR	662953	Identifier	gs_error_undefinedfilename		662800	0					
ANR	662954	GotoStatement	goto done ;	235:5:9290:9299	662800	1	True				
ANR	662955	Identifier	done		662800	0					
ANR	662956	ExpressionStatement	"code = iodev_os_gp_fopen ( iodev_default ( pstate -> memory ) , realname , access , pfile , rfname , rnamelen )"	239:4:9315:9413	662800	6	True				
ANR	662957	AssignmentExpression	"code = iodev_os_gp_fopen ( iodev_default ( pstate -> memory ) , realname , access , pfile , rfname , rnamelen )"		662800	0		=			
ANR	662958	Identifier	code		662800	0					
ANR	662959	CallExpression	"iodev_os_gp_fopen ( iodev_default ( pstate -> memory ) , realname , access , pfile , rfname , rnamelen )"		662800	1					
ANR	662960	Callee	iodev_os_gp_fopen		662800	0					
ANR	662961	Identifier	iodev_os_gp_fopen		662800	0					
ANR	662962	ArgumentList	iodev_default ( pstate -> memory )		662800	1					
ANR	662963	Argument	iodev_default ( pstate -> memory )		662800	0					
ANR	662964	CallExpression	iodev_default ( pstate -> memory )		662800	0					
ANR	662965	Callee	iodev_default		662800	0					
ANR	662966	Identifier	iodev_default		662800	0					
ANR	662967	ArgumentList	pstate -> memory		662800	1					
ANR	662968	Argument	pstate -> memory		662800	0					
ANR	662969	PtrMemberAccess	pstate -> memory		662800	0					
ANR	662970	Identifier	pstate		662800	0					
ANR	662971	Identifier	memory		662800	1					
ANR	662972	Argument	realname		662800	1					
ANR	662973	Identifier	realname		662800	0					
ANR	662974	Argument	access		662800	2					
ANR	662975	Identifier	access		662800	0					
ANR	662976	Argument	pfile		662800	3					
ANR	662977	Identifier	pfile		662800	0					
ANR	662978	Argument	rfname		662800	4					
ANR	662979	Identifier	rfname		662800	0					
ANR	662980	Argument	rnamelen		662800	5					
ANR	662981	Identifier	rnamelen		662800	0					
ANR	662982	Label	done :	241:0:9420:9424	662800	7	True				
ANR	662983	Identifier	done		662800	0					
ANR	662984	IfStatement	if ( realname != NULL )		662800	8					
ANR	662985	Condition	realname != NULL	242:8:9434:9449	662800	0	True				
ANR	662986	EqualityExpression	realname != NULL		662800	0		!=			
ANR	662987	Identifier	realname		662800	0					
ANR	662988	Identifier	NULL		662800	1					
ANR	662989	ExpressionStatement	"gs_free_object ( pstate -> memory , realname , ""iodev_diskn_fopen(realname)"" )"	243:8:9460:9531	662800	1	True				
ANR	662990	CallExpression	"gs_free_object ( pstate -> memory , realname , ""iodev_diskn_fopen(realname)"" )"		662800	0					
ANR	662991	Callee	gs_free_object		662800	0					
ANR	662992	Identifier	gs_free_object		662800	0					
ANR	662993	ArgumentList	pstate -> memory		662800	1					
ANR	662994	Argument	pstate -> memory		662800	0					
ANR	662995	PtrMemberAccess	pstate -> memory		662800	0					
ANR	662996	Identifier	pstate		662800	0					
ANR	662997	Identifier	memory		662800	1					
ANR	662998	Argument	realname		662800	1					
ANR	662999	Identifier	realname		662800	0					
ANR	663000	Argument	"""iodev_diskn_fopen(realname)"""		662800	2					
ANR	663001	PrimaryExpression	"""iodev_diskn_fopen(realname)"""		662800	0					
ANR	663002	ReturnStatement	return ( code ) ;	245:4:9538:9550	662800	9	True				
ANR	663003	Identifier	code		662800	0					
ANR	663004	ReturnType	static int		662800	1					
ANR	663005	Identifier	iodev_diskn_fopen		662800	2					
ANR	663006	ParameterList	"gx_io_device * iodev , const char * fname , const char * access , FILE * * pfile , char * rfname , uint rnamelen"		662800	3					
ANR	663007	Parameter	gx_io_device * iodev	209:18:8335:8354	662800	0	True				
ANR	663008	ParameterType	gx_io_device *		662800	0					
ANR	663009	Identifier	iodev		662800	1					
ANR	663010	Parameter	const char * fname	209:40:8357:8373	662800	1	True				
ANR	663011	ParameterType	const char *		662800	0					
ANR	663012	Identifier	fname		662800	1					
ANR	663013	Parameter	const char * access	209:59:8376:8393	662800	2	True				
ANR	663014	ParameterType	const char *		662800	0					
ANR	663015	Identifier	access		662800	1					
ANR	663016	Parameter	FILE * * pfile	210:15:8411:8423	662800	3	True				
ANR	663017	ParameterType	FILE * *		662800	0					
ANR	663018	Identifier	pfile		662800	1					
ANR	663019	Parameter	char * rfname	210:30:8426:8437	662800	4	True				
ANR	663020	ParameterType	char *		662800	0					
ANR	663021	Identifier	rfname		662800	1					
ANR	663022	Parameter	uint rnamelen	210:44:8440:8452	662800	5	True				
ANR	663023	ParameterType	uint		662800	0					
ANR	663024	Identifier	rnamelen		662800	1					
ANR	663025	CFGEntryNode	ENTRY		662800		True				
ANR	663026	CFGExitNode	EXIT		662800		True				
ANR	663027	Symbol	fname		662800						
ANR	663028	Symbol	gs_alloc_bytes		662800						
ANR	663029	Symbol	access		662800						
ANR	663030	Symbol	code		662800						
ANR	663031	Symbol	NULL		662800						
ANR	663032	Symbol	* iodev		662800						
ANR	663033	Symbol	iodev_os_gp_fopen		662800						
ANR	663034	Symbol	rfname		662800						
ANR	663035	Symbol	pstate -> root		662800						
ANR	663036	Symbol	pstate		662800						
ANR	663037	Symbol	map_file_name_get		662800						
ANR	663038	Symbol	gp_file_name_sizeof		662800						
ANR	663039	Symbol	strchr		662800						
ANR	663040	Symbol	gs_error_undefinedfilename		662800						
ANR	663041	Symbol	realname		662800						
ANR	663042	Symbol	rnamelen		662800						
ANR	663043	Symbol	gs_error_VMerror		662800						
ANR	663044	Symbol	gs_note_error		662800						
ANR	663045	Symbol	iodev_default		662800						
ANR	663046	Symbol	iodev		662800						
ANR	663047	Symbol	* pstate		662800						
ANR	663048	Symbol	pfile		662800						
ANR	663049	Symbol	iodev -> state		662800						
ANR	663050	Symbol	pstate -> memory		662800						
ANR	663051	Function	diskn_delete	248:0:9555:10536							
ANR	663052	FunctionDef	"diskn_delete (gx_io_device * iodev , const char * fname)"		663051	0					
ANR	663053	CompoundStatement		250:0:9620:10536	663051	0					
ANR	663054	IdentifierDeclStatement	diskn_state * pstate = ( diskn_state * ) iodev -> state ;	251:4:9626:9676	663051	0	True				
ANR	663055	IdentifierDecl	* pstate = ( diskn_state * ) iodev -> state		663051	0					
ANR	663056	IdentifierDeclType	diskn_state *		663051	0					
ANR	663057	Identifier	pstate		663051	1					
ANR	663058	AssignmentExpression	* pstate = ( diskn_state * ) iodev -> state		663051	2		=			
ANR	663059	Identifier	pstate		663051	0					
ANR	663060	CastExpression	( diskn_state * ) iodev -> state		663051	1					
ANR	663061	CastTarget	diskn_state *		663051	0					
ANR	663062	PtrMemberAccess	iodev -> state		663051	1					
ANR	663063	Identifier	iodev		663051	0					
ANR	663064	Identifier	state		663051	1					
ANR	663065	IdentifierDeclStatement	"char * realname = ( char * ) gs_alloc_bytes ( pstate -> memory , gp_file_name_sizeof , ""diskn_delete(realname)"" ) ;"	252:4:9682:9784	663051	1	True				
ANR	663066	IdentifierDecl	"* realname = ( char * ) gs_alloc_bytes ( pstate -> memory , gp_file_name_sizeof , ""diskn_delete(realname)"" )"		663051	0					
ANR	663067	IdentifierDeclType	char *		663051	0					
ANR	663068	Identifier	realname		663051	1					
ANR	663069	AssignmentExpression	"* realname = ( char * ) gs_alloc_bytes ( pstate -> memory , gp_file_name_sizeof , ""diskn_delete(realname)"" )"		663051	2		=			
ANR	663070	Identifier	realname		663051	0					
ANR	663071	CastExpression	"( char * ) gs_alloc_bytes ( pstate -> memory , gp_file_name_sizeof , ""diskn_delete(realname)"" )"		663051	1					
ANR	663072	CastTarget	char *		663051	0					
ANR	663073	CallExpression	"gs_alloc_bytes ( pstate -> memory , gp_file_name_sizeof , ""diskn_delete(realname)"" )"		663051	1					
ANR	663074	Callee	gs_alloc_bytes		663051	0					
ANR	663075	Identifier	gs_alloc_bytes		663051	0					
ANR	663076	ArgumentList	pstate -> memory		663051	1					
ANR	663077	Argument	pstate -> memory		663051	0					
ANR	663078	PtrMemberAccess	pstate -> memory		663051	0					
ANR	663079	Identifier	pstate		663051	0					
ANR	663080	Identifier	memory		663051	1					
ANR	663081	Argument	gp_file_name_sizeof		663051	1					
ANR	663082	Identifier	gp_file_name_sizeof		663051	0					
ANR	663083	Argument	"""diskn_delete(realname)"""		663051	2					
ANR	663084	PrimaryExpression	"""diskn_delete(realname)"""		663051	0					
ANR	663085	IdentifierDeclStatement	int code = 0 ;	253:4:9790:9802	663051	2	True				
ANR	663086	IdentifierDecl	code = 0		663051	0					
ANR	663087	IdentifierDeclType	int		663051	0					
ANR	663088	Identifier	code		663051	1					
ANR	663089	AssignmentExpression	code = 0		663051	2		=			
ANR	663090	Identifier	code		663051	0					
ANR	663091	PrimaryExpression	0		663051	1					
ANR	663092	IfStatement	if ( realname == NULL )		663051	3					
ANR	663093	Condition	realname == NULL	255:8:9813:9828	663051	0	True				
ANR	663094	EqualityExpression	realname == NULL		663051	0		==			
ANR	663095	Identifier	realname		663051	0					
ANR	663096	Identifier	NULL		663051	1					
ANR	663097	CompoundStatement		6:26:210:210	663051	1					
ANR	663098	ExpressionStatement	code = gs_note_error ( gs_error_VMerror )	256:8:9841:9879	663051	0	True				
ANR	663099	AssignmentExpression	code = gs_note_error ( gs_error_VMerror )		663051	0		=			
ANR	663100	Identifier	code		663051	0					
ANR	663101	CallExpression	gs_note_error ( gs_error_VMerror )		663051	1					
ANR	663102	Callee	gs_note_error		663051	0					
ANR	663103	Identifier	gs_note_error		663051	0					
ANR	663104	ArgumentList	gs_error_VMerror		663051	1					
ANR	663105	Argument	gs_error_VMerror		663051	0					
ANR	663106	Identifier	gs_error_VMerror		663051	0					
ANR	663107	GotoStatement	goto done ;	257:1:9882:9891	663051	1	True				
ANR	663108	Identifier	done		663051	0					
ANR	663109	IfStatement	if ( ! pstate -> root )		663051	4					
ANR	663110	Condition	! pstate -> root	261:8:9957:9969	663051	0	True				
ANR	663111	UnaryOperationExpression	! pstate -> root		663051	0					
ANR	663112	UnaryOperator	!		663051	0					
ANR	663113	PtrMemberAccess	pstate -> root		663051	1					
ANR	663114	Identifier	pstate		663051	0					
ANR	663115	Identifier	root		663051	1					
ANR	663116	CompoundStatement		12:23:351:351	663051	1					
ANR	663117	ExpressionStatement	code = gs_note_error ( gs_error_undefinedfilename )	262:8:9982:10030	663051	0	True				
ANR	663118	AssignmentExpression	code = gs_note_error ( gs_error_undefinedfilename )		663051	0		=			
ANR	663119	Identifier	code		663051	0					
ANR	663120	CallExpression	gs_note_error ( gs_error_undefinedfilename )		663051	1					
ANR	663121	Callee	gs_note_error		663051	0					
ANR	663122	Identifier	gs_note_error		663051	0					
ANR	663123	ArgumentList	gs_error_undefinedfilename		663051	1					
ANR	663124	Argument	gs_error_undefinedfilename		663051	0					
ANR	663125	Identifier	gs_error_undefinedfilename		663051	0					
ANR	663126	GotoStatement	goto done ;	263:8:10040:10049	663051	1	True				
ANR	663127	Identifier	done		663051	0					
ANR	663128	IfStatement	"if ( ! map_file_name_get ( pstate -> memory , ( char * ) pstate -> root , fname , realname ) )"		663051	5					
ANR	663129	Condition	"! map_file_name_get ( pstate -> memory , ( char * ) pstate -> root , fname , realname )"	267:8:10105:10177	663051	0	True				
ANR	663130	UnaryOperationExpression	"! map_file_name_get ( pstate -> memory , ( char * ) pstate -> root , fname , realname )"		663051	0					
ANR	663131	UnaryOperator	!		663051	0					
ANR	663132	CallExpression	"map_file_name_get ( pstate -> memory , ( char * ) pstate -> root , fname , realname )"		663051	1					
ANR	663133	Callee	map_file_name_get		663051	0					
ANR	663134	Identifier	map_file_name_get		663051	0					
ANR	663135	ArgumentList	pstate -> memory		663051	1					
ANR	663136	Argument	pstate -> memory		663051	0					
ANR	663137	PtrMemberAccess	pstate -> memory		663051	0					
ANR	663138	Identifier	pstate		663051	0					
ANR	663139	Identifier	memory		663051	1					
ANR	663140	Argument	( char * ) pstate -> root		663051	1					
ANR	663141	CastExpression	( char * ) pstate -> root		663051	0					
ANR	663142	CastTarget	char *		663051	0					
ANR	663143	PtrMemberAccess	pstate -> root		663051	1					
ANR	663144	Identifier	pstate		663051	0					
ANR	663145	Identifier	root		663051	1					
ANR	663146	Argument	fname		663051	2					
ANR	663147	Identifier	fname		663051	0					
ANR	663148	Argument	realname		663051	3					
ANR	663149	Identifier	realname		663051	0					
ANR	663150	CompoundStatement		18:83:559:559	663051	1					
ANR	663151	ExpressionStatement	code = gs_note_error ( gs_error_undefinedfilename )	268:8:10190:10238	663051	0	True				
ANR	663152	AssignmentExpression	code = gs_note_error ( gs_error_undefinedfilename )		663051	0		=			
ANR	663153	Identifier	code		663051	0					
ANR	663154	CallExpression	gs_note_error ( gs_error_undefinedfilename )		663051	1					
ANR	663155	Callee	gs_note_error		663051	0					
ANR	663156	Identifier	gs_note_error		663051	0					
ANR	663157	ArgumentList	gs_error_undefinedfilename		663051	1					
ANR	663158	Argument	gs_error_undefinedfilename		663051	0					
ANR	663159	Identifier	gs_error_undefinedfilename		663051	0					
ANR	663160	GotoStatement	goto done ;	269:8:10248:10257	663051	1	True				
ANR	663161	Identifier	done		663051	0					
ANR	663162	ExpressionStatement	"map_file_name_del ( pstate -> memory , ( char * ) pstate -> root , fname )"	272:4:10270:10332	663051	6	True				
ANR	663163	CallExpression	"map_file_name_del ( pstate -> memory , ( char * ) pstate -> root , fname )"		663051	0					
ANR	663164	Callee	map_file_name_del		663051	0					
ANR	663165	Identifier	map_file_name_del		663051	0					
ANR	663166	ArgumentList	pstate -> memory		663051	1					
ANR	663167	Argument	pstate -> memory		663051	0					
ANR	663168	PtrMemberAccess	pstate -> memory		663051	0					
ANR	663169	Identifier	pstate		663051	0					
ANR	663170	Identifier	memory		663051	1					
ANR	663171	Argument	( char * ) pstate -> root		663051	1					
ANR	663172	CastExpression	( char * ) pstate -> root		663051	0					
ANR	663173	CastTarget	char *		663051	0					
ANR	663174	PtrMemberAccess	pstate -> root		663051	1					
ANR	663175	Identifier	pstate		663051	0					
ANR	663176	Identifier	root		663051	1					
ANR	663177	Argument	fname		663051	2					
ANR	663178	Identifier	fname		663051	0					
ANR	663179	ExpressionStatement	code = ( unlink ( realname ) == 0 ? 0 : gs_note_error ( gs_error_ioerror ) )	273:4:10338:10406	663051	7	True				
ANR	663180	AssignmentExpression	code = ( unlink ( realname ) == 0 ? 0 : gs_note_error ( gs_error_ioerror ) )		663051	0		=			
ANR	663181	Identifier	code		663051	0					
ANR	663182	ConditionalExpression	unlink ( realname ) == 0 ? 0 : gs_note_error ( gs_error_ioerror )		663051	1					
ANR	663183	Condition	unlink ( realname ) == 0		663051	0					
ANR	663184	EqualityExpression	unlink ( realname ) == 0		663051	0		==			
ANR	663185	CallExpression	unlink ( realname )		663051	0					
ANR	663186	Callee	unlink		663051	0					
ANR	663187	Identifier	unlink		663051	0					
ANR	663188	ArgumentList	realname		663051	1					
ANR	663189	Argument	realname		663051	0					
ANR	663190	Identifier	realname		663051	0					
ANR	663191	PrimaryExpression	0		663051	1					
ANR	663192	PrimaryExpression	0		663051	1					
ANR	663193	CallExpression	gs_note_error ( gs_error_ioerror )		663051	2					
ANR	663194	Callee	gs_note_error		663051	0					
ANR	663195	Identifier	gs_note_error		663051	0					
ANR	663196	ArgumentList	gs_error_ioerror		663051	1					
ANR	663197	Argument	gs_error_ioerror		663051	0					
ANR	663198	Identifier	gs_error_ioerror		663051	0					
ANR	663199	Label	done :	275:0:10409:10413	663051	8	True				
ANR	663200	Identifier	done		663051	0					
ANR	663201	IfStatement	if ( realname != NULL )		663051	9					
ANR	663202	Condition	realname != NULL	276:8:10423:10438	663051	0	True				
ANR	663203	EqualityExpression	realname != NULL		663051	0		!=			
ANR	663204	Identifier	realname		663051	0					
ANR	663205	Identifier	NULL		663051	1					
ANR	663206	ExpressionStatement	"gs_free_object ( pstate -> memory , realname , ""diskn_delete(realname)"" )"	277:8:10449:10515	663051	1	True				
ANR	663207	CallExpression	"gs_free_object ( pstate -> memory , realname , ""diskn_delete(realname)"" )"		663051	0					
ANR	663208	Callee	gs_free_object		663051	0					
ANR	663209	Identifier	gs_free_object		663051	0					
ANR	663210	ArgumentList	pstate -> memory		663051	1					
ANR	663211	Argument	pstate -> memory		663051	0					
ANR	663212	PtrMemberAccess	pstate -> memory		663051	0					
ANR	663213	Identifier	pstate		663051	0					
ANR	663214	Identifier	memory		663051	1					
ANR	663215	Argument	realname		663051	1					
ANR	663216	Identifier	realname		663051	0					
ANR	663217	Argument	"""diskn_delete(realname)"""		663051	2					
ANR	663218	PrimaryExpression	"""diskn_delete(realname)"""		663051	0					
ANR	663219	ReturnStatement	return ( code ) ;	279:4:10522:10534	663051	10	True				
ANR	663220	Identifier	code		663051	0					
ANR	663221	ReturnType	static int		663051	1					
ANR	663222	Identifier	diskn_delete		663051	2					
ANR	663223	ParameterList	"gx_io_device * iodev , const char * fname"		663051	3					
ANR	663224	Parameter	gx_io_device * iodev	249:13:9579:9598	663051	0	True				
ANR	663225	ParameterType	gx_io_device *		663051	0					
ANR	663226	Identifier	iodev		663051	1					
ANR	663227	Parameter	const char * fname	249:35:9601:9617	663051	1	True				
ANR	663228	ParameterType	const char *		663051	0					
ANR	663229	Identifier	fname		663051	1					
ANR	663230	CFGEntryNode	ENTRY		663051		True				
ANR	663231	CFGExitNode	EXIT		663051		True				
ANR	663232	Symbol	fname		663051						
ANR	663233	Symbol	gs_alloc_bytes		663051						
ANR	663234	Symbol	code		663051						
ANR	663235	Symbol	NULL		663051						
ANR	663236	Symbol	* iodev		663051						
ANR	663237	Symbol	pstate -> root		663051						
ANR	663238	Symbol	pstate		663051						
ANR	663239	Symbol	map_file_name_get		663051						
ANR	663240	Symbol	gp_file_name_sizeof		663051						
ANR	663241	Symbol	gs_error_ioerror		663051						
ANR	663242	Symbol	gs_error_undefinedfilename		663051						
ANR	663243	Symbol	realname		663051						
ANR	663244	Symbol	gs_error_VMerror		663051						
ANR	663245	Symbol	gs_note_error		663051						
ANR	663246	Symbol	iodev		663051						
ANR	663247	Symbol	unlink		663051						
ANR	663248	Symbol	* pstate		663051						
ANR	663249	Symbol	iodev -> state		663051						
ANR	663250	Symbol	pstate -> memory		663051						
ANR	663251	Function	diskn_rename	282:0:10539:11693							
ANR	663252	FunctionDef	"diskn_rename (gx_io_device * iodev , const char * from , const char * to)"		663251	0					
ANR	663253	CompoundStatement		284:0:10619:11693	663251	0					
ANR	663254	IdentifierDeclStatement	diskn_state * pstate = ( diskn_state * ) iodev -> state ;	285:4:10625:10675	663251	0	True				
ANR	663255	IdentifierDecl	* pstate = ( diskn_state * ) iodev -> state		663251	0					
ANR	663256	IdentifierDeclType	diskn_state *		663251	0					
ANR	663257	Identifier	pstate		663251	1					
ANR	663258	AssignmentExpression	* pstate = ( diskn_state * ) iodev -> state		663251	2		=			
ANR	663259	Identifier	pstate		663251	0					
ANR	663260	CastExpression	( diskn_state * ) iodev -> state		663251	1					
ANR	663261	CastTarget	diskn_state *		663251	0					
ANR	663262	PtrMemberAccess	iodev -> state		663251	1					
ANR	663263	Identifier	iodev		663251	0					
ANR	663264	Identifier	state		663251	1					
ANR	663265	IdentifierDeclStatement	"char * toreal = ( char * ) gs_alloc_bytes ( pstate -> memory , gp_file_name_sizeof , ""diskn_rename(toreal)"" ) ;"	286:4:10681:10779	663251	1	True				
ANR	663266	IdentifierDecl	"* toreal = ( char * ) gs_alloc_bytes ( pstate -> memory , gp_file_name_sizeof , ""diskn_rename(toreal)"" )"		663251	0					
ANR	663267	IdentifierDeclType	char *		663251	0					
ANR	663268	Identifier	toreal		663251	1					
ANR	663269	AssignmentExpression	"* toreal = ( char * ) gs_alloc_bytes ( pstate -> memory , gp_file_name_sizeof , ""diskn_rename(toreal)"" )"		663251	2		=			
ANR	663270	Identifier	toreal		663251	0					
ANR	663271	CastExpression	"( char * ) gs_alloc_bytes ( pstate -> memory , gp_file_name_sizeof , ""diskn_rename(toreal)"" )"		663251	1					
ANR	663272	CastTarget	char *		663251	0					
ANR	663273	CallExpression	"gs_alloc_bytes ( pstate -> memory , gp_file_name_sizeof , ""diskn_rename(toreal)"" )"		663251	1					
ANR	663274	Callee	gs_alloc_bytes		663251	0					
ANR	663275	Identifier	gs_alloc_bytes		663251	0					
ANR	663276	ArgumentList	pstate -> memory		663251	1					
ANR	663277	Argument	pstate -> memory		663251	0					
ANR	663278	PtrMemberAccess	pstate -> memory		663251	0					
ANR	663279	Identifier	pstate		663251	0					
ANR	663280	Identifier	memory		663251	1					
ANR	663281	Argument	gp_file_name_sizeof		663251	1					
ANR	663282	Identifier	gp_file_name_sizeof		663251	0					
ANR	663283	Argument	"""diskn_rename(toreal)"""		663251	2					
ANR	663284	PrimaryExpression	"""diskn_rename(toreal)"""		663251	0					
ANR	663285	IdentifierDeclStatement	int code = 0 ;	287:4:10785:10797	663251	2	True				
ANR	663286	IdentifierDecl	code = 0		663251	0					
ANR	663287	IdentifierDeclType	int		663251	0					
ANR	663288	Identifier	code		663251	1					
ANR	663289	AssignmentExpression	code = 0		663251	2		=			
ANR	663290	Identifier	code		663251	0					
ANR	663291	PrimaryExpression	0		663251	1					
ANR	663292	IfStatement	if ( toreal == NULL )		663251	3					
ANR	663293	Condition	toreal == NULL	289:8:10808:10821	663251	0	True				
ANR	663294	EqualityExpression	toreal == NULL		663251	0		==			
ANR	663295	Identifier	toreal		663251	0					
ANR	663296	Identifier	NULL		663251	1					
ANR	663297	CompoundStatement		6:24:204:204	663251	1					
ANR	663298	ExpressionStatement	code = gs_note_error ( gs_error_VMerror )	290:8:10834:10872	663251	0	True				
ANR	663299	AssignmentExpression	code = gs_note_error ( gs_error_VMerror )		663251	0		=			
ANR	663300	Identifier	code		663251	0					
ANR	663301	CallExpression	gs_note_error ( gs_error_VMerror )		663251	1					
ANR	663302	Callee	gs_note_error		663251	0					
ANR	663303	Identifier	gs_note_error		663251	0					
ANR	663304	ArgumentList	gs_error_VMerror		663251	1					
ANR	663305	Argument	gs_error_VMerror		663251	0					
ANR	663306	Identifier	gs_error_VMerror		663251	0					
ANR	663307	GotoStatement	goto done ;	291:1:10875:10884	663251	1	True				
ANR	663308	Identifier	done		663251	0					
ANR	663309	IfStatement	if ( ! pstate -> root )		663251	4					
ANR	663310	Condition	! pstate -> root	295:8:10950:10962	663251	0	True				
ANR	663311	UnaryOperationExpression	! pstate -> root		663251	0					
ANR	663312	UnaryOperator	!		663251	0					
ANR	663313	PtrMemberAccess	pstate -> root		663251	1					
ANR	663314	Identifier	pstate		663251	0					
ANR	663315	Identifier	root		663251	1					
ANR	663316	CompoundStatement		12:23:345:345	663251	1					
ANR	663317	ExpressionStatement	code = gs_note_error ( gs_error_undefinedfilename )	296:8:10975:11023	663251	0	True				
ANR	663318	AssignmentExpression	code = gs_note_error ( gs_error_undefinedfilename )		663251	0		=			
ANR	663319	Identifier	code		663251	0					
ANR	663320	CallExpression	gs_note_error ( gs_error_undefinedfilename )		663251	1					
ANR	663321	Callee	gs_note_error		663251	0					
ANR	663322	Identifier	gs_note_error		663251	0					
ANR	663323	ArgumentList	gs_error_undefinedfilename		663251	1					
ANR	663324	Argument	gs_error_undefinedfilename		663251	0					
ANR	663325	Identifier	gs_error_undefinedfilename		663251	0					
ANR	663326	GotoStatement	goto done ;	297:8:11033:11042	663251	1	True				
ANR	663327	Identifier	done		663251	0					
ANR	663328	IfStatement	"if ( strcmp ( to , from ) == 0 )"		663251	5					
ANR	663329	Condition	"strcmp ( to , from ) == 0"	301:8:11113:11133	663251	0	True				
ANR	663330	EqualityExpression	"strcmp ( to , from ) == 0"		663251	0		==			
ANR	663331	CallExpression	"strcmp ( to , from )"		663251	0					
ANR	663332	Callee	strcmp		663251	0					
ANR	663333	Identifier	strcmp		663251	0					
ANR	663334	ArgumentList	to		663251	1					
ANR	663335	Argument	to		663251	0					
ANR	663336	Identifier	to		663251	0					
ANR	663337	Argument	from		663251	1					
ANR	663338	Identifier	from		663251	0					
ANR	663339	PrimaryExpression	0		663251	1					
ANR	663340	CompoundStatement		18:31:516:516	663251	1					
ANR	663341	ExpressionStatement	code = 0	302:8:11146:11154	663251	0	True				
ANR	663342	AssignmentExpression	code = 0		663251	0		=			
ANR	663343	Identifier	code		663251	0					
ANR	663344	PrimaryExpression	0		663251	1					
ANR	663345	GotoStatement	goto done ;	303:8:11164:11173	663251	1	True				
ANR	663346	Identifier	done		663251	0					
ANR	663347	IfStatement	"if ( map_file_name_get ( pstate -> memory , ( char * ) pstate -> root , to , toreal ) )"		663251	6					
ANR	663348	Condition	"map_file_name_get ( pstate -> memory , ( char * ) pstate -> root , to , toreal )"	309:8:11279:11345	663251	0	True				
ANR	663349	CallExpression	"map_file_name_get ( pstate -> memory , ( char * ) pstate -> root , to , toreal )"		663251	0					
ANR	663350	Callee	map_file_name_get		663251	0					
ANR	663351	Identifier	map_file_name_get		663251	0					
ANR	663352	ArgumentList	pstate -> memory		663251	1					
ANR	663353	Argument	pstate -> memory		663251	0					
ANR	663354	PtrMemberAccess	pstate -> memory		663251	0					
ANR	663355	Identifier	pstate		663251	0					
ANR	663356	Identifier	memory		663251	1					
ANR	663357	Argument	( char * ) pstate -> root		663251	1					
ANR	663358	CastExpression	( char * ) pstate -> root		663251	0					
ANR	663359	CastTarget	char *		663251	0					
ANR	663360	PtrMemberAccess	pstate -> root		663251	1					
ANR	663361	Identifier	pstate		663251	0					
ANR	663362	Identifier	root		663251	1					
ANR	663363	Argument	to		663251	2					
ANR	663364	Identifier	to		663251	0					
ANR	663365	Argument	toreal		663251	3					
ANR	663366	Identifier	toreal		663251	0					
ANR	663367	CompoundStatement		26:77:728:728	663251	1					
ANR	663368	ExpressionStatement	"map_file_name_del ( pstate -> memory , ( char * ) pstate -> root , to )"	310:8:11358:11417	663251	0	True				
ANR	663369	CallExpression	"map_file_name_del ( pstate -> memory , ( char * ) pstate -> root , to )"		663251	0					
ANR	663370	Callee	map_file_name_del		663251	0					
ANR	663371	Identifier	map_file_name_del		663251	0					
ANR	663372	ArgumentList	pstate -> memory		663251	1					
ANR	663373	Argument	pstate -> memory		663251	0					
ANR	663374	PtrMemberAccess	pstate -> memory		663251	0					
ANR	663375	Identifier	pstate		663251	0					
ANR	663376	Identifier	memory		663251	1					
ANR	663377	Argument	( char * ) pstate -> root		663251	1					
ANR	663378	CastExpression	( char * ) pstate -> root		663251	0					
ANR	663379	CastTarget	char *		663251	0					
ANR	663380	PtrMemberAccess	pstate -> root		663251	1					
ANR	663381	Identifier	pstate		663251	0					
ANR	663382	Identifier	root		663251	1					
ANR	663383	Argument	to		663251	2					
ANR	663384	Identifier	to		663251	0					
ANR	663385	ExpressionStatement	code = unlink ( toreal ) == 0 ? 0 : gs_note_error ( gs_error_ioerror )	311:8:11427:11491	663251	1	True				
ANR	663386	AssignmentExpression	code = unlink ( toreal ) == 0 ? 0 : gs_note_error ( gs_error_ioerror )		663251	0		=			
ANR	663387	Identifier	code		663251	0					
ANR	663388	ConditionalExpression	unlink ( toreal ) == 0 ? 0 : gs_note_error ( gs_error_ioerror )		663251	1					
ANR	663389	Condition	unlink ( toreal ) == 0		663251	0					
ANR	663390	EqualityExpression	unlink ( toreal ) == 0		663251	0		==			
ANR	663391	CallExpression	unlink ( toreal )		663251	0					
ANR	663392	Callee	unlink		663251	0					
ANR	663393	Identifier	unlink		663251	0					
ANR	663394	ArgumentList	toreal		663251	1					
ANR	663395	Argument	toreal		663251	0					
ANR	663396	Identifier	toreal		663251	0					
ANR	663397	PrimaryExpression	0		663251	1					
ANR	663398	PrimaryExpression	0		663251	1					
ANR	663399	CallExpression	gs_note_error ( gs_error_ioerror )		663251	2					
ANR	663400	Callee	gs_note_error		663251	0					
ANR	663401	Identifier	gs_note_error		663251	0					
ANR	663402	ArgumentList	gs_error_ioerror		663251	1					
ANR	663403	Argument	gs_error_ioerror		663251	0					
ANR	663404	Identifier	gs_error_ioerror		663251	0					
ANR	663405	ExpressionStatement	"map_file_name_ren ( pstate -> memory , ( char * ) pstate -> root , from , to )"	314:4:11504:11569	663251	7	True				
ANR	663406	CallExpression	"map_file_name_ren ( pstate -> memory , ( char * ) pstate -> root , from , to )"		663251	0					
ANR	663407	Callee	map_file_name_ren		663251	0					
ANR	663408	Identifier	map_file_name_ren		663251	0					
ANR	663409	ArgumentList	pstate -> memory		663251	1					
ANR	663410	Argument	pstate -> memory		663251	0					
ANR	663411	PtrMemberAccess	pstate -> memory		663251	0					
ANR	663412	Identifier	pstate		663251	0					
ANR	663413	Identifier	memory		663251	1					
ANR	663414	Argument	( char * ) pstate -> root		663251	1					
ANR	663415	CastExpression	( char * ) pstate -> root		663251	0					
ANR	663416	CastTarget	char *		663251	0					
ANR	663417	PtrMemberAccess	pstate -> root		663251	1					
ANR	663418	Identifier	pstate		663251	0					
ANR	663419	Identifier	root		663251	1					
ANR	663420	Argument	from		663251	2					
ANR	663421	Identifier	from		663251	0					
ANR	663422	Argument	to		663251	3					
ANR	663423	Identifier	to		663251	0					
ANR	663424	Label	done :	316:0:11572:11576	663251	8	True				
ANR	663425	Identifier	done		663251	0					
ANR	663426	IfStatement	if ( toreal != NULL )		663251	9					
ANR	663427	Condition	toreal != NULL	317:8:11586:11599	663251	0	True				
ANR	663428	EqualityExpression	toreal != NULL		663251	0		!=			
ANR	663429	Identifier	toreal		663251	0					
ANR	663430	Identifier	NULL		663251	1					
ANR	663431	ExpressionStatement	"gs_free_object ( pstate -> memory , toreal , ""diskn_rename(toreal)"" )"	318:8:11610:11672	663251	1	True				
ANR	663432	CallExpression	"gs_free_object ( pstate -> memory , toreal , ""diskn_rename(toreal)"" )"		663251	0					
ANR	663433	Callee	gs_free_object		663251	0					
ANR	663434	Identifier	gs_free_object		663251	0					
ANR	663435	ArgumentList	pstate -> memory		663251	1					
ANR	663436	Argument	pstate -> memory		663251	0					
ANR	663437	PtrMemberAccess	pstate -> memory		663251	0					
ANR	663438	Identifier	pstate		663251	0					
ANR	663439	Identifier	memory		663251	1					
ANR	663440	Argument	toreal		663251	1					
ANR	663441	Identifier	toreal		663251	0					
ANR	663442	Argument	"""diskn_rename(toreal)"""		663251	2					
ANR	663443	PrimaryExpression	"""diskn_rename(toreal)"""		663251	0					
ANR	663444	ReturnStatement	return ( code ) ;	320:4:11679:11691	663251	10	True				
ANR	663445	Identifier	code		663251	0					
ANR	663446	ReturnType	static int		663251	1					
ANR	663447	Identifier	diskn_rename		663251	2					
ANR	663448	ParameterList	"gx_io_device * iodev , const char * from , const char * to"		663251	3					
ANR	663449	Parameter	gx_io_device * iodev	283:13:10563:10582	663251	0	True				
ANR	663450	ParameterType	gx_io_device *		663251	0					
ANR	663451	Identifier	iodev		663251	1					
ANR	663452	Parameter	const char * from	283:35:10585:10600	663251	1	True				
ANR	663453	ParameterType	const char *		663251	0					
ANR	663454	Identifier	from		663251	1					
ANR	663455	Parameter	const char * to	283:53:10603:10616	663251	2	True				
ANR	663456	ParameterType	const char *		663251	0					
ANR	663457	Identifier	to		663251	1					
ANR	663458	CFGEntryNode	ENTRY		663251		True				
ANR	663459	CFGExitNode	EXIT		663251		True				
ANR	663460	Symbol	strcmp		663251						
ANR	663461	Symbol	gs_alloc_bytes		663251						
ANR	663462	Symbol	code		663251						
ANR	663463	Symbol	NULL		663251						
ANR	663464	Symbol	* iodev		663251						
ANR	663465	Symbol	pstate -> root		663251						
ANR	663466	Symbol	pstate		663251						
ANR	663467	Symbol	map_file_name_get		663251						
ANR	663468	Symbol	gp_file_name_sizeof		663251						
ANR	663469	Symbol	gs_error_ioerror		663251						
ANR	663470	Symbol	gs_error_undefinedfilename		663251						
ANR	663471	Symbol	gs_error_VMerror		663251						
ANR	663472	Symbol	gs_note_error		663251						
ANR	663473	Symbol	iodev		663251						
ANR	663474	Symbol	unlink		663251						
ANR	663475	Symbol	* pstate		663251						
ANR	663476	Symbol	iodev -> state		663251						
ANR	663477	Symbol	pstate -> memory		663251						
ANR	663478	Symbol	from		663251						
ANR	663479	Symbol	toreal		663251						
ANR	663480	Symbol	to		663251						
ANR	663481	Function	diskn_status	323:0:11696:12630							
ANR	663482	FunctionDef	"diskn_status (gx_io_device * iodev , const char * fname , struct stat * pstat)"		663481	0					
ANR	663483	CompoundStatement		325:0:11781:12630	663481	0					
ANR	663484	IdentifierDeclStatement	diskn_state * pstate = ( diskn_state * ) iodev -> state ;	326:4:11787:11837	663481	0	True				
ANR	663485	IdentifierDecl	* pstate = ( diskn_state * ) iodev -> state		663481	0					
ANR	663486	IdentifierDeclType	diskn_state *		663481	0					
ANR	663487	Identifier	pstate		663481	1					
ANR	663488	AssignmentExpression	* pstate = ( diskn_state * ) iodev -> state		663481	2		=			
ANR	663489	Identifier	pstate		663481	0					
ANR	663490	CastExpression	( diskn_state * ) iodev -> state		663481	1					
ANR	663491	CastTarget	diskn_state *		663481	0					
ANR	663492	PtrMemberAccess	iodev -> state		663481	1					
ANR	663493	Identifier	iodev		663481	0					
ANR	663494	Identifier	state		663481	1					
ANR	663495	IdentifierDeclStatement	"char * realname = ( char * ) gs_alloc_bytes ( pstate -> memory , gp_file_name_sizeof , ""diskn_status(realname)"" ) ;"	327:4:11843:11945	663481	1	True				
ANR	663496	IdentifierDecl	"* realname = ( char * ) gs_alloc_bytes ( pstate -> memory , gp_file_name_sizeof , ""diskn_status(realname)"" )"		663481	0					
ANR	663497	IdentifierDeclType	char *		663481	0					
ANR	663498	Identifier	realname		663481	1					
ANR	663499	AssignmentExpression	"* realname = ( char * ) gs_alloc_bytes ( pstate -> memory , gp_file_name_sizeof , ""diskn_status(realname)"" )"		663481	2		=			
ANR	663500	Identifier	realname		663481	0					
ANR	663501	CastExpression	"( char * ) gs_alloc_bytes ( pstate -> memory , gp_file_name_sizeof , ""diskn_status(realname)"" )"		663481	1					
ANR	663502	CastTarget	char *		663481	0					
ANR	663503	CallExpression	"gs_alloc_bytes ( pstate -> memory , gp_file_name_sizeof , ""diskn_status(realname)"" )"		663481	1					
ANR	663504	Callee	gs_alloc_bytes		663481	0					
ANR	663505	Identifier	gs_alloc_bytes		663481	0					
ANR	663506	ArgumentList	pstate -> memory		663481	1					
ANR	663507	Argument	pstate -> memory		663481	0					
ANR	663508	PtrMemberAccess	pstate -> memory		663481	0					
ANR	663509	Identifier	pstate		663481	0					
ANR	663510	Identifier	memory		663481	1					
ANR	663511	Argument	gp_file_name_sizeof		663481	1					
ANR	663512	Identifier	gp_file_name_sizeof		663481	0					
ANR	663513	Argument	"""diskn_status(realname)"""		663481	2					
ANR	663514	PrimaryExpression	"""diskn_status(realname)"""		663481	0					
ANR	663515	IdentifierDeclStatement	int code = 0 ;	328:4:11951:11963	663481	2	True				
ANR	663516	IdentifierDecl	code = 0		663481	0					
ANR	663517	IdentifierDeclType	int		663481	0					
ANR	663518	Identifier	code		663481	1					
ANR	663519	AssignmentExpression	code = 0		663481	2		=			
ANR	663520	Identifier	code		663481	0					
ANR	663521	PrimaryExpression	0		663481	1					
ANR	663522	IfStatement	if ( realname == NULL )		663481	3					
ANR	663523	Condition	realname == NULL	330:8:11974:11989	663481	0	True				
ANR	663524	EqualityExpression	realname == NULL		663481	0		==			
ANR	663525	Identifier	realname		663481	0					
ANR	663526	Identifier	NULL		663481	1					
ANR	663527	CompoundStatement		6:26:210:210	663481	1					
ANR	663528	ExpressionStatement	code = gs_note_error ( gs_error_VMerror )	331:8:12002:12040	663481	0	True				
ANR	663529	AssignmentExpression	code = gs_note_error ( gs_error_VMerror )		663481	0		=			
ANR	663530	Identifier	code		663481	0					
ANR	663531	CallExpression	gs_note_error ( gs_error_VMerror )		663481	1					
ANR	663532	Callee	gs_note_error		663481	0					
ANR	663533	Identifier	gs_note_error		663481	0					
ANR	663534	ArgumentList	gs_error_VMerror		663481	1					
ANR	663535	Argument	gs_error_VMerror		663481	0					
ANR	663536	Identifier	gs_error_VMerror		663481	0					
ANR	663537	GotoStatement	goto done ;	332:1:12043:12052	663481	1	True				
ANR	663538	Identifier	done		663481	0					
ANR	663539	IfStatement	if ( ! pstate -> root )		663481	4					
ANR	663540	Condition	! pstate -> root	336:8:12118:12130	663481	0	True				
ANR	663541	UnaryOperationExpression	! pstate -> root		663481	0					
ANR	663542	UnaryOperator	!		663481	0					
ANR	663543	PtrMemberAccess	pstate -> root		663481	1					
ANR	663544	Identifier	pstate		663481	0					
ANR	663545	Identifier	root		663481	1					
ANR	663546	CompoundStatement		12:23:351:351	663481	1					
ANR	663547	ExpressionStatement	code = gs_note_error ( gs_error_undefinedfilename )	337:8:12143:12191	663481	0	True				
ANR	663548	AssignmentExpression	code = gs_note_error ( gs_error_undefinedfilename )		663481	0		=			
ANR	663549	Identifier	code		663481	0					
ANR	663550	CallExpression	gs_note_error ( gs_error_undefinedfilename )		663481	1					
ANR	663551	Callee	gs_note_error		663481	0					
ANR	663552	Identifier	gs_note_error		663481	0					
ANR	663553	ArgumentList	gs_error_undefinedfilename		663481	1					
ANR	663554	Argument	gs_error_undefinedfilename		663481	0					
ANR	663555	Identifier	gs_error_undefinedfilename		663481	0					
ANR	663556	GotoStatement	goto done ;	338:8:12201:12210	663481	1	True				
ANR	663557	Identifier	done		663481	0					
ANR	663558	IfStatement	"if ( ! map_file_name_get ( pstate -> memory , ( char * ) pstate -> root , fname , realname ) )"		663481	5					
ANR	663559	Condition	"! map_file_name_get ( pstate -> memory , ( char * ) pstate -> root , fname , realname )"	342:8:12266:12338	663481	0	True				
ANR	663560	UnaryOperationExpression	"! map_file_name_get ( pstate -> memory , ( char * ) pstate -> root , fname , realname )"		663481	0					
ANR	663561	UnaryOperator	!		663481	0					
ANR	663562	CallExpression	"map_file_name_get ( pstate -> memory , ( char * ) pstate -> root , fname , realname )"		663481	1					
ANR	663563	Callee	map_file_name_get		663481	0					
ANR	663564	Identifier	map_file_name_get		663481	0					
ANR	663565	ArgumentList	pstate -> memory		663481	1					
ANR	663566	Argument	pstate -> memory		663481	0					
ANR	663567	PtrMemberAccess	pstate -> memory		663481	0					
ANR	663568	Identifier	pstate		663481	0					
ANR	663569	Identifier	memory		663481	1					
ANR	663570	Argument	( char * ) pstate -> root		663481	1					
ANR	663571	CastExpression	( char * ) pstate -> root		663481	0					
ANR	663572	CastTarget	char *		663481	0					
ANR	663573	PtrMemberAccess	pstate -> root		663481	1					
ANR	663574	Identifier	pstate		663481	0					
ANR	663575	Identifier	root		663481	1					
ANR	663576	Argument	fname		663481	2					
ANR	663577	Identifier	fname		663481	0					
ANR	663578	Argument	realname		663481	3					
ANR	663579	Identifier	realname		663481	0					
ANR	663580	CompoundStatement		18:83:559:559	663481	1					
ANR	663581	ExpressionStatement	code = gs_note_error ( gs_error_undefinedfilename )	343:8:12351:12399	663481	0	True				
ANR	663582	AssignmentExpression	code = gs_note_error ( gs_error_undefinedfilename )		663481	0		=			
ANR	663583	Identifier	code		663481	0					
ANR	663584	CallExpression	gs_note_error ( gs_error_undefinedfilename )		663481	1					
ANR	663585	Callee	gs_note_error		663481	0					
ANR	663586	Identifier	gs_note_error		663481	0					
ANR	663587	ArgumentList	gs_error_undefinedfilename		663481	1					
ANR	663588	Argument	gs_error_undefinedfilename		663481	0					
ANR	663589	Identifier	gs_error_undefinedfilename		663481	0					
ANR	663590	ExpressionStatement	"code = stat ( ( char * ) realname , pstat ) < 0 ? gs_note_error ( gs_error_undefinedfilename ) : 0"	346:4:12412:12500	663481	6	True				
ANR	663591	AssignmentExpression	"code = stat ( ( char * ) realname , pstat ) < 0 ? gs_note_error ( gs_error_undefinedfilename ) : 0"		663481	0		=			
ANR	663592	Identifier	code		663481	0					
ANR	663593	ConditionalExpression	"stat ( ( char * ) realname , pstat ) < 0 ? gs_note_error ( gs_error_undefinedfilename ) : 0"		663481	1					
ANR	663594	Condition	"stat ( ( char * ) realname , pstat ) < 0"		663481	0					
ANR	663595	RelationalExpression	"stat ( ( char * ) realname , pstat ) < 0"		663481	0		<			
ANR	663596	CallExpression	"stat ( ( char * ) realname , pstat )"		663481	0					
ANR	663597	Callee	stat		663481	0					
ANR	663598	Identifier	stat		663481	0					
ANR	663599	ArgumentList	( char * ) realname		663481	1					
ANR	663600	Argument	( char * ) realname		663481	0					
ANR	663601	CastExpression	( char * ) realname		663481	0					
ANR	663602	CastTarget	char *		663481	0					
ANR	663603	Identifier	realname		663481	1					
ANR	663604	Argument	pstat		663481	1					
ANR	663605	Identifier	pstat		663481	0					
ANR	663606	PrimaryExpression	0		663481	1					
ANR	663607	CallExpression	gs_note_error ( gs_error_undefinedfilename )		663481	1					
ANR	663608	Callee	gs_note_error		663481	0					
ANR	663609	Identifier	gs_note_error		663481	0					
ANR	663610	ArgumentList	gs_error_undefinedfilename		663481	1					
ANR	663611	Argument	gs_error_undefinedfilename		663481	0					
ANR	663612	Identifier	gs_error_undefinedfilename		663481	0					
ANR	663613	PrimaryExpression	0		663481	2					
ANR	663614	Label	done :	348:0:12503:12507	663481	7	True				
ANR	663615	Identifier	done		663481	0					
ANR	663616	IfStatement	if ( realname != NULL )		663481	8					
ANR	663617	Condition	realname != NULL	349:8:12517:12532	663481	0	True				
ANR	663618	EqualityExpression	realname != NULL		663481	0		!=			
ANR	663619	Identifier	realname		663481	0					
ANR	663620	Identifier	NULL		663481	1					
ANR	663621	ExpressionStatement	"gs_free_object ( pstate -> memory , realname , ""diskn_status(realname)"" )"	350:8:12543:12609	663481	1	True				
ANR	663622	CallExpression	"gs_free_object ( pstate -> memory , realname , ""diskn_status(realname)"" )"		663481	0					
ANR	663623	Callee	gs_free_object		663481	0					
ANR	663624	Identifier	gs_free_object		663481	0					
ANR	663625	ArgumentList	pstate -> memory		663481	1					
ANR	663626	Argument	pstate -> memory		663481	0					
ANR	663627	PtrMemberAccess	pstate -> memory		663481	0					
ANR	663628	Identifier	pstate		663481	0					
ANR	663629	Identifier	memory		663481	1					
ANR	663630	Argument	realname		663481	1					
ANR	663631	Identifier	realname		663481	0					
ANR	663632	Argument	"""diskn_status(realname)"""		663481	2					
ANR	663633	PrimaryExpression	"""diskn_status(realname)"""		663481	0					
ANR	663634	ReturnStatement	return ( code ) ;	352:4:12616:12628	663481	9	True				
ANR	663635	Identifier	code		663481	0					
ANR	663636	ReturnType	static int		663481	1					
ANR	663637	Identifier	diskn_status		663481	2					
ANR	663638	ParameterList	"gx_io_device * iodev , const char * fname , struct stat * pstat"		663481	3					
ANR	663639	Parameter	gx_io_device * iodev	324:13:11720:11739	663481	0	True				
ANR	663640	ParameterType	gx_io_device *		663481	0					
ANR	663641	Identifier	iodev		663481	1					
ANR	663642	Parameter	const char * fname	324:35:11742:11758	663481	1	True				
ANR	663643	ParameterType	const char *		663481	0					
ANR	663644	Identifier	fname		663481	1					
ANR	663645	Parameter	struct stat * pstat	324:54:11761:11778	663481	2	True				
ANR	663646	ParameterType	struct stat *		663481	0					
ANR	663647	Identifier	pstat		663481	1					
ANR	663648	CFGEntryNode	ENTRY		663481		True				
ANR	663649	CFGExitNode	EXIT		663481		True				
ANR	663650	Symbol	fname		663481						
ANR	663651	Symbol	gs_alloc_bytes		663481						
ANR	663652	Symbol	stat		663481						
ANR	663653	Symbol	code		663481						
ANR	663654	Symbol	NULL		663481						
ANR	663655	Symbol	pstat		663481						
ANR	663656	Symbol	* iodev		663481						
ANR	663657	Symbol	pstate -> root		663481						
ANR	663658	Symbol	pstate		663481						
ANR	663659	Symbol	map_file_name_get		663481						
ANR	663660	Symbol	gp_file_name_sizeof		663481						
ANR	663661	Symbol	gs_error_undefinedfilename		663481						
ANR	663662	Symbol	realname		663481						
ANR	663663	Symbol	gs_error_VMerror		663481						
ANR	663664	Symbol	gs_note_error		663481						
ANR	663665	Symbol	iodev		663481						
ANR	663666	Symbol	* pstate		663481						
ANR	663667	Symbol	iodev -> state		663481						
ANR	663668	Symbol	pstate -> memory		663481						
ANR	663669	Function	diskn_enumerate_files	355:0:12633:12905							
ANR	663670	FunctionDef	"diskn_enumerate_files (gx_io_device * iodev , const char * pat , uint patlen , gs_memory_t * mem)"		663669	0					
ANR	663671	CompoundStatement		358:0:12758:12905	663669	0					
ANR	663672	IdentifierDeclStatement	diskn_state * pstate = ( diskn_state * ) iodev -> state ;	359:4:12764:12814	663669	0	True				
ANR	663673	IdentifierDecl	* pstate = ( diskn_state * ) iodev -> state		663669	0					
ANR	663674	IdentifierDeclType	diskn_state *		663669	0					
ANR	663675	Identifier	pstate		663669	1					
ANR	663676	AssignmentExpression	* pstate = ( diskn_state * ) iodev -> state		663669	2		=			
ANR	663677	Identifier	pstate		663669	0					
ANR	663678	CastExpression	( diskn_state * ) iodev -> state		663669	1					
ANR	663679	CastTarget	diskn_state *		663669	0					
ANR	663680	PtrMemberAccess	iodev -> state		663669	1					
ANR	663681	Identifier	iodev		663669	0					
ANR	663682	Identifier	state		663669	1					
ANR	663683	ReturnStatement	"return ( file_enum * ) map_file_enum_init ( mem , ( char * ) pstate -> root , pat , patlen ) ;"	361:4:12825:12903	663669	1	True				
ANR	663684	CastExpression	"( file_enum * ) map_file_enum_init ( mem , ( char * ) pstate -> root , pat , patlen )"		663669	0					
ANR	663685	CastTarget	file_enum *		663669	0					
ANR	663686	CallExpression	"map_file_enum_init ( mem , ( char * ) pstate -> root , pat , patlen )"		663669	1					
ANR	663687	Callee	map_file_enum_init		663669	0					
ANR	663688	Identifier	map_file_enum_init		663669	0					
ANR	663689	ArgumentList	mem		663669	1					
ANR	663690	Argument	mem		663669	0					
ANR	663691	Identifier	mem		663669	0					
ANR	663692	Argument	( char * ) pstate -> root		663669	1					
ANR	663693	CastExpression	( char * ) pstate -> root		663669	0					
ANR	663694	CastTarget	char *		663669	0					
ANR	663695	PtrMemberAccess	pstate -> root		663669	1					
ANR	663696	Identifier	pstate		663669	0					
ANR	663697	Identifier	root		663669	1					
ANR	663698	Argument	pat		663669	2					
ANR	663699	Identifier	pat		663669	0					
ANR	663700	Argument	patlen		663669	3					
ANR	663701	Identifier	patlen		663669	0					
ANR	663702	ReturnType	static file_enum *		663669	1					
ANR	663703	Identifier	diskn_enumerate_files		663669	2					
ANR	663704	ParameterList	"gx_io_device * iodev , const char * pat , uint patlen , gs_memory_t * mem"		663669	3					
ANR	663705	Parameter	gx_io_device * iodev	356:22:12674:12693	663669	0	True				
ANR	663706	ParameterType	gx_io_device *		663669	0					
ANR	663707	Identifier	iodev		663669	1					
ANR	663708	Parameter	const char * pat	356:44:12696:12710	663669	1	True				
ANR	663709	ParameterType	const char *		663669	0					
ANR	663710	Identifier	pat		663669	1					
ANR	663711	Parameter	uint patlen	356:61:12713:12723	663669	2	True				
ANR	663712	ParameterType	uint		663669	0					
ANR	663713	Identifier	patlen		663669	1					
ANR	663714	Parameter	gs_memory_t * mem	357:13:12739:12755	663669	3	True				
ANR	663715	ParameterType	gs_memory_t *		663669	0					
ANR	663716	Identifier	mem		663669	1					
ANR	663717	CFGEntryNode	ENTRY		663669		True				
ANR	663718	CFGExitNode	EXIT		663669		True				
ANR	663719	Symbol	pat		663669						
ANR	663720	Symbol	iodev		663669						
ANR	663721	Symbol	mem		663669						
ANR	663722	Symbol	* iodev		663669						
ANR	663723	Symbol	* pstate		663669						
ANR	663724	Symbol	pstate -> root		663669						
ANR	663725	Symbol	iodev -> state		663669						
ANR	663726	Symbol	pstate		663669						
ANR	663727	Symbol	map_file_enum_init		663669						
ANR	663728	Symbol	patlen		663669						
ANR	663729	Function	diskn_enumerate_close	364:0:12908:13000							
ANR	663730	FunctionDef	diskn_enumerate_close (file_enum * pfen)		663729	0					
ANR	663731	CompoundStatement		366:0:12959:13000	663729	0					
ANR	663732	ExpressionStatement	map_file_enum_close ( ( void * ) pfen )	367:4:12965:12998	663729	0	True				
ANR	663733	CallExpression	map_file_enum_close ( ( void * ) pfen )		663729	0					
ANR	663734	Callee	map_file_enum_close		663729	0					
ANR	663735	Identifier	map_file_enum_close		663729	0					
ANR	663736	ArgumentList	( void * ) pfen		663729	1					
ANR	663737	Argument	( void * ) pfen		663729	0					
ANR	663738	CastExpression	( void * ) pfen		663729	0					
ANR	663739	CastTarget	void *		663729	0					
ANR	663740	Identifier	pfen		663729	1					
ANR	663741	ReturnType	static void		663729	1					
ANR	663742	Identifier	diskn_enumerate_close		663729	2					
ANR	663743	ParameterList	file_enum * pfen		663729	3					
ANR	663744	Parameter	file_enum * pfen	365:22:12942:12956	663729	0	True				
ANR	663745	ParameterType	file_enum *		663729	0					
ANR	663746	Identifier	pfen		663729	1					
ANR	663747	CFGEntryNode	ENTRY		663729		True				
ANR	663748	CFGExitNode	EXIT		663729		True				
ANR	663749	Symbol	pfen		663729						
ANR	663750	Function	diskn_enumerate_next	370:0:13003:13259							
ANR	663751	FunctionDef	"diskn_enumerate_next (file_enum * pfen , char * ptr , uint maxlen)"		663750	0					
ANR	663752	CompoundStatement		372:0:13077:13259	663750	0					
ANR	663753	IfStatement	"if ( map_file_enum_next ( ( void * ) pfen , ptr ) )"		663750	0					
ANR	663754	Condition	"map_file_enum_next ( ( void * ) pfen , ptr )"	373:8:13087:13123	663750	0	True				
ANR	663755	CallExpression	"map_file_enum_next ( ( void * ) pfen , ptr )"		663750	0					
ANR	663756	Callee	map_file_enum_next		663750	0					
ANR	663757	Identifier	map_file_enum_next		663750	0					
ANR	663758	ArgumentList	( void * ) pfen		663750	1					
ANR	663759	Argument	( void * ) pfen		663750	0					
ANR	663760	CastExpression	( void * ) pfen		663750	0					
ANR	663761	CastTarget	void *		663750	0					
ANR	663762	Identifier	pfen		663750	1					
ANR	663763	Argument	ptr		663750	1					
ANR	663764	Identifier	ptr		663750	0					
ANR	663765	ReturnStatement	return strlen ( ptr ) ;	374:8:13134:13152	663750	1	True				
ANR	663766	CallExpression	strlen ( ptr )		663750	0					
ANR	663767	Callee	strlen		663750	0					
ANR	663768	Identifier	strlen		663750	0					
ANR	663769	ArgumentList	ptr		663750	1					
ANR	663770	Argument	ptr		663750	0					
ANR	663771	Identifier	ptr		663750	0					
ANR	663772	ExpressionStatement	diskn_enumerate_close ( pfen )	376:4:13208:13235	663750	1	True				
ANR	663773	CallExpression	diskn_enumerate_close ( pfen )		663750	0					
ANR	663774	Callee	diskn_enumerate_close		663750	0					
ANR	663775	Identifier	diskn_enumerate_close		663750	0					
ANR	663776	ArgumentList	pfen		663750	1					
ANR	663777	Argument	pfen		663750	0					
ANR	663778	Identifier	pfen		663750	0					
ANR	663779	ReturnStatement	return ~ ( uint ) 0 ;	377:4:13241:13257	663750	2	True				
ANR	663780	UnaryOperationExpression	~ ( uint ) 0		663750	0					
ANR	663781	UnaryOperator	~		663750	0					
ANR	663782	CastExpression	( uint ) 0		663750	1					
ANR	663783	CastTarget	uint		663750	0					
ANR	663784	PrimaryExpression	0		663750	1					
ANR	663785	ReturnType	static uint		663750	1					
ANR	663786	Identifier	diskn_enumerate_next		663750	2					
ANR	663787	ParameterList	"file_enum * pfen , char * ptr , uint maxlen"		663750	3					
ANR	663788	Parameter	file_enum * pfen	371:21:13036:13050	663750	0	True				
ANR	663789	ParameterType	file_enum *		663750	0					
ANR	663790	Identifier	pfen		663750	1					
ANR	663791	Parameter	char * ptr	371:38:13053:13061	663750	1	True				
ANR	663792	ParameterType	char *		663750	0					
ANR	663793	Identifier	ptr		663750	1					
ANR	663794	Parameter	uint maxlen	371:49:13064:13074	663750	2	True				
ANR	663795	ParameterType	uint		663750	0					
ANR	663796	Identifier	maxlen		663750	1					
ANR	663797	CFGEntryNode	ENTRY		663750		True				
ANR	663798	CFGExitNode	EXIT		663750		True				
ANR	663799	Symbol	strlen		663750						
ANR	663800	Symbol	map_file_enum_next		663750						
ANR	663801	Symbol	pfen		663750						
ANR	663802	Symbol	maxlen		663750						
ANR	663803	Symbol	ptr		663750						
ANR	663804	Function	diskn_get_params	380:0:13262:14919							
ANR	663805	FunctionDef	"diskn_get_params (gx_io_device * iodev , gs_param_list * plist)"		663804	0					
ANR	663806	CompoundStatement		382:0:13335:14919	663804	0					
ANR	663807	IdentifierDeclStatement	int code ;	383:4:13341:13349	663804	0	True				
ANR	663808	IdentifierDecl	code		663804	0					
ANR	663809	IdentifierDeclType	int		663804	0					
ANR	663810	Identifier	code		663804	1					
ANR	663811	IdentifierDeclStatement	"int i0 = 0 , so = 1 ;"	384:4:13355:13373	663804	1	True				
ANR	663812	IdentifierDecl	i0 = 0		663804	0					
ANR	663813	IdentifierDeclType	int		663804	0					
ANR	663814	Identifier	i0		663804	1					
ANR	663815	AssignmentExpression	i0 = 0		663804	2		=			
ANR	663816	Identifier	i0		663804	0					
ANR	663817	PrimaryExpression	0		663804	1					
ANR	663818	IdentifierDecl	so = 1		663804	1					
ANR	663819	IdentifierDeclType	int		663804	0					
ANR	663820	Identifier	so		663804	1					
ANR	663821	AssignmentExpression	so = 1		663804	2		=			
ANR	663822	Identifier	so		663804	0					
ANR	663823	PrimaryExpression	1		663804	1					
ANR	663824	IdentifierDeclStatement	"bool btrue = true , bfalse = false ;"	385:4:13379:13412	663804	2	True				
ANR	663825	IdentifierDecl	btrue = true		663804	0					
ANR	663826	IdentifierDeclType	bool		663804	0					
ANR	663827	Identifier	btrue		663804	1					
ANR	663828	AssignmentExpression	btrue = true		663804	2		=			
ANR	663829	Identifier	true		663804	0					
ANR	663830	Identifier	true		663804	1					
ANR	663831	IdentifierDecl	bfalse = false		663804	1					
ANR	663832	IdentifierDeclType	bool		663804	0					
ANR	663833	Identifier	bfalse		663804	1					
ANR	663834	AssignmentExpression	bfalse = false		663804	2		=			
ANR	663835	Identifier	false		663804	0					
ANR	663836	Identifier	false		663804	1					
ANR	663837	IdentifierDeclStatement	diskn_state * pstate = ( diskn_state * ) iodev -> state ;	386:4:13418:13468	663804	3	True				
ANR	663838	IdentifierDecl	* pstate = ( diskn_state * ) iodev -> state		663804	0					
ANR	663839	IdentifierDeclType	diskn_state *		663804	0					
ANR	663840	Identifier	pstate		663804	1					
ANR	663841	AssignmentExpression	* pstate = ( diskn_state * ) iodev -> state		663804	2		=			
ANR	663842	Identifier	pstate		663804	0					
ANR	663843	CastExpression	( diskn_state * ) iodev -> state		663804	1					
ANR	663844	CastTarget	diskn_state *		663804	0					
ANR	663845	PtrMemberAccess	iodev -> state		663804	1					
ANR	663846	Identifier	iodev		663804	0					
ANR	663847	Identifier	state		663804	1					
ANR	663848	IdentifierDeclStatement	bool bsearch = pstate -> root != 0 ;	387:4:13474:13506	663804	4	True				
ANR	663849	IdentifierDecl	bsearch = pstate -> root != 0		663804	0					
ANR	663850	IdentifierDeclType	bool		663804	0					
ANR	663851	Identifier	bsearch		663804	1					
ANR	663852	AssignmentExpression	bsearch = pstate -> root != 0		663804	2		=			
ANR	663853	Identifier	bsearch		663804	0					
ANR	663854	EqualityExpression	pstate -> root != 0		663804	1		!=			
ANR	663855	PtrMemberAccess	pstate -> root		663804	0					
ANR	663856	Identifier	pstate		663804	0					
ANR	663857	Identifier	root		663804	1					
ANR	663858	PrimaryExpression	0		663804	1					
ANR	663859	IdentifierDeclStatement	int BlockSize ;	388:4:13512:13525	663804	5	True				
ANR	663860	IdentifierDecl	BlockSize		663804	0					
ANR	663861	IdentifierDeclType	int		663804	0					
ANR	663862	Identifier	BlockSize		663804	1					
ANR	663863	IdentifierDeclStatement	"long Free , LogicalSize ;"	389:4:13531:13553	663804	6	True				
ANR	663864	IdentifierDecl	Free		663804	0					
ANR	663865	IdentifierDeclType	long		663804	0					
ANR	663866	Identifier	Free		663804	1					
ANR	663867	IdentifierDecl	LogicalSize		663804	1					
ANR	663868	IdentifierDeclType	long		663804	0					
ANR	663869	Identifier	LogicalSize		663804	1					
ANR	663870	IdentifierDeclStatement	gs_param_string rootstring ;	390:4:13559:13585	663804	7	True				
ANR	663871	IdentifierDecl	rootstring		663804	0					
ANR	663872	IdentifierDeclType	gs_param_string		663804	0					
ANR	663873	Identifier	rootstring		663804	1					
ANR	663874	ExpressionStatement	BlockSize = 1024	396:4:13736:13752	663804	8	True				
ANR	663875	AssignmentExpression	BlockSize = 1024		663804	0		=			
ANR	663876	Identifier	BlockSize		663804	0					
ANR	663877	PrimaryExpression	1024		663804	1					
ANR	663878	ExpressionStatement	LogicalSize = bsearch ? 2000000000 / BlockSize : 0	397:4:13758:13808	663804	9	True				
ANR	663879	AssignmentExpression	LogicalSize = bsearch ? 2000000000 / BlockSize : 0		663804	0		=			
ANR	663880	Identifier	LogicalSize		663804	0					
ANR	663881	ConditionalExpression	bsearch ? 2000000000 / BlockSize : 0		663804	1					
ANR	663882	Condition	bsearch		663804	0					
ANR	663883	Identifier	bsearch		663804	0					
ANR	663884	MultiplicativeExpression	2000000000 / BlockSize		663804	1		/			
ANR	663885	PrimaryExpression	2000000000		663804	0					
ANR	663886	Identifier	BlockSize		663804	1					
ANR	663887	PrimaryExpression	0		663804	2					
ANR	663888	ExpressionStatement	Free = LogicalSize * 3 / 4	398:4:13831:13857	663804	10	True				
ANR	663889	AssignmentExpression	Free = LogicalSize * 3 / 4		663804	0		=			
ANR	663890	Identifier	Free		663804	0					
ANR	663891	MultiplicativeExpression	LogicalSize * 3 / 4		663804	1		*			
ANR	663892	Identifier	LogicalSize		663804	0					
ANR	663893	MultiplicativeExpression	3 / 4		663804	1		/			
ANR	663894	PrimaryExpression	3		663804	0					
ANR	663895	PrimaryExpression	4		663804	1					
ANR	663896	IfStatement	"if ( ( code = param_write_bool ( plist , ""HasNames"" , & btrue ) ) < 0 || ( code = param_write_int ( plist , ""BlockSize"" , & BlockSize ) ) < 0 || ( code = param_write_long ( plist , ""Free"" , & Free ) ) < 0 || ( code = param_write_int ( plist , ""InitializeAction"" , & i0 ) ) < 0 || ( code = param_write_bool ( plist , ""Mounted"" , & bsearch ) ) < 0 || ( code = param_write_bool ( plist , ""Removable"" , & bfalse ) ) < 0 || ( code = param_write_bool ( plist , ""Searchable"" , & bsearch ) ) < 0 || ( code = param_write_int ( plist , ""SearchOrder"" , & so ) ) < 0 || ( code = param_write_bool ( plist , ""Writeable"" , & bsearch ) ) < 0 || ( code = param_write_long ( plist , ""LogicalSize"" , & LogicalSize ) ) < 0 )"		663804	11					
ANR	663897	Condition	"( code = param_write_bool ( plist , ""HasNames"" , & btrue ) ) < 0 || ( code = param_write_int ( plist , ""BlockSize"" , & BlockSize ) ) < 0 || ( code = param_write_long ( plist , ""Free"" , & Free ) ) < 0 || ( code = param_write_int ( plist , ""InitializeAction"" , & i0 ) ) < 0 || ( code = param_write_bool ( plist , ""Mounted"" , & bsearch ) ) < 0 || ( code = param_write_bool ( plist , ""Removable"" , & bfalse ) ) < 0 || ( code = param_write_bool ( plist , ""Searchable"" , & bsearch ) ) < 0 || ( code = param_write_int ( plist , ""SearchOrder"" , & so ) ) < 0 || ( code = param_write_bool ( plist , ""Writeable"" , & bsearch ) ) < 0 || ( code = param_write_long ( plist , ""LogicalSize"" , & LogicalSize ) ) < 0"	401:8:13898:14586	663804	0	True				
ANR	663898	OrExpression	"( code = param_write_bool ( plist , ""HasNames"" , & btrue ) ) < 0 || ( code = param_write_int ( plist , ""BlockSize"" , & BlockSize ) ) < 0 || ( code = param_write_long ( plist , ""Free"" , & Free ) ) < 0 || ( code = param_write_int ( plist , ""InitializeAction"" , & i0 ) ) < 0 || ( code = param_write_bool ( plist , ""Mounted"" , & bsearch ) ) < 0 || ( code = param_write_bool ( plist , ""Removable"" , & bfalse ) ) < 0 || ( code = param_write_bool ( plist , ""Searchable"" , & bsearch ) ) < 0 || ( code = param_write_int ( plist , ""SearchOrder"" , & so ) ) < 0 || ( code = param_write_bool ( plist , ""Writeable"" , & bsearch ) ) < 0 || ( code = param_write_long ( plist , ""LogicalSize"" , & LogicalSize ) ) < 0"		663804	0		||			
ANR	663899	RelationalExpression	"( code = param_write_bool ( plist , ""HasNames"" , & btrue ) ) < 0"		663804	0		<			
ANR	663900	AssignmentExpression	"code = param_write_bool ( plist , ""HasNames"" , & btrue )"		663804	0		=			
ANR	663901	Identifier	code		663804	0					
ANR	663902	CallExpression	"param_write_bool ( plist , ""HasNames"" , & btrue )"		663804	1					
ANR	663903	Callee	param_write_bool		663804	0					
ANR	663904	Identifier	param_write_bool		663804	0					
ANR	663905	ArgumentList	plist		663804	1					
ANR	663906	Argument	plist		663804	0					
ANR	663907	Identifier	plist		663804	0					
ANR	663908	Argument	"""HasNames"""		663804	1					
ANR	663909	PrimaryExpression	"""HasNames"""		663804	0					
ANR	663910	Argument	& btrue		663804	2					
ANR	663911	UnaryOperationExpression	& btrue		663804	0					
ANR	663912	UnaryOperator	&		663804	0					
ANR	663913	Identifier	btrue		663804	1					
ANR	663914	PrimaryExpression	0		663804	1					
ANR	663915	OrExpression	"( code = param_write_int ( plist , ""BlockSize"" , & BlockSize ) ) < 0 || ( code = param_write_long ( plist , ""Free"" , & Free ) ) < 0 || ( code = param_write_int ( plist , ""InitializeAction"" , & i0 ) ) < 0 || ( code = param_write_bool ( plist , ""Mounted"" , & bsearch ) ) < 0 || ( code = param_write_bool ( plist , ""Removable"" , & bfalse ) ) < 0 || ( code = param_write_bool ( plist , ""Searchable"" , & bsearch ) ) < 0 || ( code = param_write_int ( plist , ""SearchOrder"" , & so ) ) < 0 || ( code = param_write_bool ( plist , ""Writeable"" , & bsearch ) ) < 0 || ( code = param_write_long ( plist , ""LogicalSize"" , & LogicalSize ) ) < 0"		663804	1		||			
ANR	663916	RelationalExpression	"( code = param_write_int ( plist , ""BlockSize"" , & BlockSize ) ) < 0"		663804	0		<			
ANR	663917	AssignmentExpression	"code = param_write_int ( plist , ""BlockSize"" , & BlockSize )"		663804	0		=			
ANR	663918	Identifier	code		663804	0					
ANR	663919	CallExpression	"param_write_int ( plist , ""BlockSize"" , & BlockSize )"		663804	1					
ANR	663920	Callee	param_write_int		663804	0					
ANR	663921	Identifier	param_write_int		663804	0					
ANR	663922	ArgumentList	plist		663804	1					
ANR	663923	Argument	plist		663804	0					
ANR	663924	Identifier	plist		663804	0					
ANR	663925	Argument	"""BlockSize"""		663804	1					
ANR	663926	PrimaryExpression	"""BlockSize"""		663804	0					
ANR	663927	Argument	& BlockSize		663804	2					
ANR	663928	UnaryOperationExpression	& BlockSize		663804	0					
ANR	663929	UnaryOperator	&		663804	0					
ANR	663930	Identifier	BlockSize		663804	1					
ANR	663931	PrimaryExpression	0		663804	1					
ANR	663932	OrExpression	"( code = param_write_long ( plist , ""Free"" , & Free ) ) < 0 || ( code = param_write_int ( plist , ""InitializeAction"" , & i0 ) ) < 0 || ( code = param_write_bool ( plist , ""Mounted"" , & bsearch ) ) < 0 || ( code = param_write_bool ( plist , ""Removable"" , & bfalse ) ) < 0 || ( code = param_write_bool ( plist , ""Searchable"" , & bsearch ) ) < 0 || ( code = param_write_int ( plist , ""SearchOrder"" , & so ) ) < 0 || ( code = param_write_bool ( plist , ""Writeable"" , & bsearch ) ) < 0 || ( code = param_write_long ( plist , ""LogicalSize"" , & LogicalSize ) ) < 0"		663804	1		||			
ANR	663933	RelationalExpression	"( code = param_write_long ( plist , ""Free"" , & Free ) ) < 0"		663804	0		<			
ANR	663934	AssignmentExpression	"code = param_write_long ( plist , ""Free"" , & Free )"		663804	0		=			
ANR	663935	Identifier	code		663804	0					
ANR	663936	CallExpression	"param_write_long ( plist , ""Free"" , & Free )"		663804	1					
ANR	663937	Callee	param_write_long		663804	0					
ANR	663938	Identifier	param_write_long		663804	0					
ANR	663939	ArgumentList	plist		663804	1					
ANR	663940	Argument	plist		663804	0					
ANR	663941	Identifier	plist		663804	0					
ANR	663942	Argument	"""Free"""		663804	1					
ANR	663943	PrimaryExpression	"""Free"""		663804	0					
ANR	663944	Argument	& Free		663804	2					
ANR	663945	UnaryOperationExpression	& Free		663804	0					
ANR	663946	UnaryOperator	&		663804	0					
ANR	663947	Identifier	Free		663804	1					
ANR	663948	PrimaryExpression	0		663804	1					
ANR	663949	OrExpression	"( code = param_write_int ( plist , ""InitializeAction"" , & i0 ) ) < 0 || ( code = param_write_bool ( plist , ""Mounted"" , & bsearch ) ) < 0 || ( code = param_write_bool ( plist , ""Removable"" , & bfalse ) ) < 0 || ( code = param_write_bool ( plist , ""Searchable"" , & bsearch ) ) < 0 || ( code = param_write_int ( plist , ""SearchOrder"" , & so ) ) < 0 || ( code = param_write_bool ( plist , ""Writeable"" , & bsearch ) ) < 0 || ( code = param_write_long ( plist , ""LogicalSize"" , & LogicalSize ) ) < 0"		663804	1		||			
ANR	663950	RelationalExpression	"( code = param_write_int ( plist , ""InitializeAction"" , & i0 ) ) < 0"		663804	0		<			
ANR	663951	AssignmentExpression	"code = param_write_int ( plist , ""InitializeAction"" , & i0 )"		663804	0		=			
ANR	663952	Identifier	code		663804	0					
ANR	663953	CallExpression	"param_write_int ( plist , ""InitializeAction"" , & i0 )"		663804	1					
ANR	663954	Callee	param_write_int		663804	0					
ANR	663955	Identifier	param_write_int		663804	0					
ANR	663956	ArgumentList	plist		663804	1					
ANR	663957	Argument	plist		663804	0					
ANR	663958	Identifier	plist		663804	0					
ANR	663959	Argument	"""InitializeAction"""		663804	1					
ANR	663960	PrimaryExpression	"""InitializeAction"""		663804	0					
ANR	663961	Argument	& i0		663804	2					
ANR	663962	UnaryOperationExpression	& i0		663804	0					
ANR	663963	UnaryOperator	&		663804	0					
ANR	663964	Identifier	i0		663804	1					
ANR	663965	PrimaryExpression	0		663804	1					
ANR	663966	OrExpression	"( code = param_write_bool ( plist , ""Mounted"" , & bsearch ) ) < 0 || ( code = param_write_bool ( plist , ""Removable"" , & bfalse ) ) < 0 || ( code = param_write_bool ( plist , ""Searchable"" , & bsearch ) ) < 0 || ( code = param_write_int ( plist , ""SearchOrder"" , & so ) ) < 0 || ( code = param_write_bool ( plist , ""Writeable"" , & bsearch ) ) < 0 || ( code = param_write_long ( plist , ""LogicalSize"" , & LogicalSize ) ) < 0"		663804	1		||			
ANR	663967	RelationalExpression	"( code = param_write_bool ( plist , ""Mounted"" , & bsearch ) ) < 0"		663804	0		<			
ANR	663968	AssignmentExpression	"code = param_write_bool ( plist , ""Mounted"" , & bsearch )"		663804	0		=			
ANR	663969	Identifier	code		663804	0					
ANR	663970	CallExpression	"param_write_bool ( plist , ""Mounted"" , & bsearch )"		663804	1					
ANR	663971	Callee	param_write_bool		663804	0					
ANR	663972	Identifier	param_write_bool		663804	0					
ANR	663973	ArgumentList	plist		663804	1					
ANR	663974	Argument	plist		663804	0					
ANR	663975	Identifier	plist		663804	0					
ANR	663976	Argument	"""Mounted"""		663804	1					
ANR	663977	PrimaryExpression	"""Mounted"""		663804	0					
ANR	663978	Argument	& bsearch		663804	2					
ANR	663979	UnaryOperationExpression	& bsearch		663804	0					
ANR	663980	UnaryOperator	&		663804	0					
ANR	663981	Identifier	bsearch		663804	1					
ANR	663982	PrimaryExpression	0		663804	1					
ANR	663983	OrExpression	"( code = param_write_bool ( plist , ""Removable"" , & bfalse ) ) < 0 || ( code = param_write_bool ( plist , ""Searchable"" , & bsearch ) ) < 0 || ( code = param_write_int ( plist , ""SearchOrder"" , & so ) ) < 0 || ( code = param_write_bool ( plist , ""Writeable"" , & bsearch ) ) < 0 || ( code = param_write_long ( plist , ""LogicalSize"" , & LogicalSize ) ) < 0"		663804	1		||			
ANR	663984	RelationalExpression	"( code = param_write_bool ( plist , ""Removable"" , & bfalse ) ) < 0"		663804	0		<			
ANR	663985	AssignmentExpression	"code = param_write_bool ( plist , ""Removable"" , & bfalse )"		663804	0		=			
ANR	663986	Identifier	code		663804	0					
ANR	663987	CallExpression	"param_write_bool ( plist , ""Removable"" , & bfalse )"		663804	1					
ANR	663988	Callee	param_write_bool		663804	0					
ANR	663989	Identifier	param_write_bool		663804	0					
ANR	663990	ArgumentList	plist		663804	1					
ANR	663991	Argument	plist		663804	0					
ANR	663992	Identifier	plist		663804	0					
ANR	663993	Argument	"""Removable"""		663804	1					
ANR	663994	PrimaryExpression	"""Removable"""		663804	0					
ANR	663995	Argument	& bfalse		663804	2					
ANR	663996	UnaryOperationExpression	& bfalse		663804	0					
ANR	663997	UnaryOperator	&		663804	0					
ANR	663998	Identifier	bfalse		663804	1					
ANR	663999	PrimaryExpression	0		663804	1					
ANR	664000	OrExpression	"( code = param_write_bool ( plist , ""Searchable"" , & bsearch ) ) < 0 || ( code = param_write_int ( plist , ""SearchOrder"" , & so ) ) < 0 || ( code = param_write_bool ( plist , ""Writeable"" , & bsearch ) ) < 0 || ( code = param_write_long ( plist , ""LogicalSize"" , & LogicalSize ) ) < 0"		663804	1		||			
ANR	664001	RelationalExpression	"( code = param_write_bool ( plist , ""Searchable"" , & bsearch ) ) < 0"		663804	0		<			
ANR	664002	AssignmentExpression	"code = param_write_bool ( plist , ""Searchable"" , & bsearch )"		663804	0		=			
ANR	664003	Identifier	code		663804	0					
ANR	664004	CallExpression	"param_write_bool ( plist , ""Searchable"" , & bsearch )"		663804	1					
ANR	664005	Callee	param_write_bool		663804	0					
ANR	664006	Identifier	param_write_bool		663804	0					
ANR	664007	ArgumentList	plist		663804	1					
ANR	664008	Argument	plist		663804	0					
ANR	664009	Identifier	plist		663804	0					
ANR	664010	Argument	"""Searchable"""		663804	1					
ANR	664011	PrimaryExpression	"""Searchable"""		663804	0					
ANR	664012	Argument	& bsearch		663804	2					
ANR	664013	UnaryOperationExpression	& bsearch		663804	0					
ANR	664014	UnaryOperator	&		663804	0					
ANR	664015	Identifier	bsearch		663804	1					
ANR	664016	PrimaryExpression	0		663804	1					
ANR	664017	OrExpression	"( code = param_write_int ( plist , ""SearchOrder"" , & so ) ) < 0 || ( code = param_write_bool ( plist , ""Writeable"" , & bsearch ) ) < 0 || ( code = param_write_long ( plist , ""LogicalSize"" , & LogicalSize ) ) < 0"		663804	1		||			
ANR	664018	RelationalExpression	"( code = param_write_int ( plist , ""SearchOrder"" , & so ) ) < 0"		663804	0		<			
ANR	664019	AssignmentExpression	"code = param_write_int ( plist , ""SearchOrder"" , & so )"		663804	0		=			
ANR	664020	Identifier	code		663804	0					
ANR	664021	CallExpression	"param_write_int ( plist , ""SearchOrder"" , & so )"		663804	1					
ANR	664022	Callee	param_write_int		663804	0					
ANR	664023	Identifier	param_write_int		663804	0					
ANR	664024	ArgumentList	plist		663804	1					
ANR	664025	Argument	plist		663804	0					
ANR	664026	Identifier	plist		663804	0					
ANR	664027	Argument	"""SearchOrder"""		663804	1					
ANR	664028	PrimaryExpression	"""SearchOrder"""		663804	0					
ANR	664029	Argument	& so		663804	2					
ANR	664030	UnaryOperationExpression	& so		663804	0					
ANR	664031	UnaryOperator	&		663804	0					
ANR	664032	Identifier	so		663804	1					
ANR	664033	PrimaryExpression	0		663804	1					
ANR	664034	OrExpression	"( code = param_write_bool ( plist , ""Writeable"" , & bsearch ) ) < 0 || ( code = param_write_long ( plist , ""LogicalSize"" , & LogicalSize ) ) < 0"		663804	1		||			
ANR	664035	RelationalExpression	"( code = param_write_bool ( plist , ""Writeable"" , & bsearch ) ) < 0"		663804	0		<			
ANR	664036	AssignmentExpression	"code = param_write_bool ( plist , ""Writeable"" , & bsearch )"		663804	0		=			
ANR	664037	Identifier	code		663804	0					
ANR	664038	CallExpression	"param_write_bool ( plist , ""Writeable"" , & bsearch )"		663804	1					
ANR	664039	Callee	param_write_bool		663804	0					
ANR	664040	Identifier	param_write_bool		663804	0					
ANR	664041	ArgumentList	plist		663804	1					
ANR	664042	Argument	plist		663804	0					
ANR	664043	Identifier	plist		663804	0					
ANR	664044	Argument	"""Writeable"""		663804	1					
ANR	664045	PrimaryExpression	"""Writeable"""		663804	0					
ANR	664046	Argument	& bsearch		663804	2					
ANR	664047	UnaryOperationExpression	& bsearch		663804	0					
ANR	664048	UnaryOperator	&		663804	0					
ANR	664049	Identifier	bsearch		663804	1					
ANR	664050	PrimaryExpression	0		663804	1					
ANR	664051	RelationalExpression	"( code = param_write_long ( plist , ""LogicalSize"" , & LogicalSize ) ) < 0"		663804	1		<			
ANR	664052	AssignmentExpression	"code = param_write_long ( plist , ""LogicalSize"" , & LogicalSize )"		663804	0		=			
ANR	664053	Identifier	code		663804	0					
ANR	664054	CallExpression	"param_write_long ( plist , ""LogicalSize"" , & LogicalSize )"		663804	1					
ANR	664055	Callee	param_write_long		663804	0					
ANR	664056	Identifier	param_write_long		663804	0					
ANR	664057	ArgumentList	plist		663804	1					
ANR	664058	Argument	plist		663804	0					
ANR	664059	Identifier	plist		663804	0					
ANR	664060	Argument	"""LogicalSize"""		663804	1					
ANR	664061	PrimaryExpression	"""LogicalSize"""		663804	0					
ANR	664062	Argument	& LogicalSize		663804	2					
ANR	664063	UnaryOperationExpression	& LogicalSize		663804	0					
ANR	664064	UnaryOperator	&		663804	0					
ANR	664065	Identifier	LogicalSize		663804	1					
ANR	664066	PrimaryExpression	0		663804	1					
ANR	664067	ReturnStatement	return code ;	412:8:14606:14617	663804	1	True				
ANR	664068	Identifier	code		663804	0					
ANR	664069	IfStatement	if ( pstate -> root )		663804	12					
ANR	664070	Condition	pstate -> root	414:8:14628:14639	663804	0	True				
ANR	664071	PtrMemberAccess	pstate -> root		663804	0					
ANR	664072	Identifier	pstate		663804	0					
ANR	664073	Identifier	root		663804	1					
ANR	664074	CompoundStatement		33:22:1306:1306	663804	1					
ANR	664075	ExpressionStatement	rootstring . data = ( const byte * ) pstate -> root	415:8:14652:14696	663804	0	True				
ANR	664076	AssignmentExpression	rootstring . data = ( const byte * ) pstate -> root		663804	0		=			
ANR	664077	MemberAccess	rootstring . data		663804	0					
ANR	664078	Identifier	rootstring		663804	0					
ANR	664079	Identifier	data		663804	1					
ANR	664080	CastExpression	( const byte * ) pstate -> root		663804	1					
ANR	664081	CastTarget	const byte *		663804	0					
ANR	664082	PtrMemberAccess	pstate -> root		663804	1					
ANR	664083	Identifier	pstate		663804	0					
ANR	664084	Identifier	root		663804	1					
ANR	664085	ExpressionStatement	rootstring . size = strlen ( pstate -> root )	416:8:14706:14744	663804	1	True				
ANR	664086	AssignmentExpression	rootstring . size = strlen ( pstate -> root )		663804	0		=			
ANR	664087	MemberAccess	rootstring . size		663804	0					
ANR	664088	Identifier	rootstring		663804	0					
ANR	664089	Identifier	size		663804	1					
ANR	664090	CallExpression	strlen ( pstate -> root )		663804	1					
ANR	664091	Callee	strlen		663804	0					
ANR	664092	Identifier	strlen		663804	0					
ANR	664093	ArgumentList	pstate -> root		663804	1					
ANR	664094	Argument	pstate -> root		663804	0					
ANR	664095	PtrMemberAccess	pstate -> root		663804	0					
ANR	664096	Identifier	pstate		663804	0					
ANR	664097	Identifier	root		663804	1					
ANR	664098	ExpressionStatement	rootstring . persistent = false	417:8:14754:14783	663804	2	True				
ANR	664099	AssignmentExpression	rootstring . persistent = false		663804	0		=			
ANR	664100	MemberAccess	rootstring . persistent		663804	0					
ANR	664101	Identifier	rootstring		663804	0					
ANR	664102	Identifier	persistent		663804	1					
ANR	664103	Identifier	false		663804	1					
ANR	664104	ReturnStatement	"return param_write_string ( plist , ""Root"" , & rootstring ) ;"	418:8:14793:14846	663804	3	True				
ANR	664105	CallExpression	"param_write_string ( plist , ""Root"" , & rootstring )"		663804	0					
ANR	664106	Callee	param_write_string		663804	0					
ANR	664107	Identifier	param_write_string		663804	0					
ANR	664108	ArgumentList	plist		663804	1					
ANR	664109	Argument	plist		663804	0					
ANR	664110	Identifier	plist		663804	0					
ANR	664111	Argument	"""Root"""		663804	1					
ANR	664112	PrimaryExpression	"""Root"""		663804	0					
ANR	664113	Argument	& rootstring		663804	2					
ANR	664114	UnaryOperationExpression	& rootstring		663804	0					
ANR	664115	UnaryOperator	&		663804	0					
ANR	664116	Identifier	rootstring		663804	1					
ANR	664117	ElseStatement	else		663804	0					
ANR	664118	CompoundStatement		39:9:1527:1527	663804	0					
ANR	664119	ReturnStatement	"return param_write_null ( plist , ""Root"" ) ;"	421:8:14873:14911	663804	0	True				
ANR	664120	CallExpression	"param_write_null ( plist , ""Root"" )"		663804	0					
ANR	664121	Callee	param_write_null		663804	0					
ANR	664122	Identifier	param_write_null		663804	0					
ANR	664123	ArgumentList	plist		663804	1					
ANR	664124	Argument	plist		663804	0					
ANR	664125	Identifier	plist		663804	0					
ANR	664126	Argument	"""Root"""		663804	1					
ANR	664127	PrimaryExpression	"""Root"""		663804	0					
ANR	664128	ReturnType	static int		663804	1					
ANR	664129	Identifier	diskn_get_params		663804	2					
ANR	664130	ParameterList	"gx_io_device * iodev , gs_param_list * plist"		663804	3					
ANR	664131	Parameter	gx_io_device * iodev	381:17:13290:13309	663804	0	True				
ANR	664132	ParameterType	gx_io_device *		663804	0					
ANR	664133	Identifier	iodev		663804	1					
ANR	664134	Parameter	gs_param_list * plist	381:39:13312:13332	663804	1	True				
ANR	664135	ParameterType	gs_param_list *		663804	0					
ANR	664136	Identifier	plist		663804	1					
ANR	664137	CFGEntryNode	ENTRY		663804		True				
ANR	664138	CFGExitNode	EXIT		663804		True				
ANR	664139	Symbol	& bfalse		663804						
ANR	664140	Symbol	code		663804						
ANR	664141	Symbol	LogicalSize		663804						
ANR	664142	Symbol	pstate -> root		663804						
ANR	664143	Symbol	& BlockSize		663804						
ANR	664144	Symbol	bfalse		663804						
ANR	664145	Symbol	& so		663804						
ANR	664146	Symbol	pstate		663804						
ANR	664147	Symbol	& rootstring		663804						
ANR	664148	Symbol	param_write_bool		663804						
ANR	664149	Symbol	strlen		663804						
ANR	664150	Symbol	plist		663804						
ANR	664151	Symbol	iodev		663804						
ANR	664152	Symbol	& btrue		663804						
ANR	664153	Symbol	bsearch		663804						
ANR	664154	Symbol	rootstring		663804						
ANR	664155	Symbol	rootstring . size		663804						
ANR	664156	Symbol	so		663804						
ANR	664157	Symbol	param_write_string		663804						
ANR	664158	Symbol	param_write_int		663804						
ANR	664159	Symbol	rootstring . persistent		663804						
ANR	664160	Symbol	& LogicalSize		663804						
ANR	664161	Symbol	* iodev		663804						
ANR	664162	Symbol	i0		663804						
ANR	664163	Symbol	false		663804						
ANR	664164	Symbol	btrue		663804						
ANR	664165	Symbol	param_write_null		663804						
ANR	664166	Symbol	Free		663804						
ANR	664167	Symbol	& i0		663804						
ANR	664168	Symbol	* pstate		663804						
ANR	664169	Symbol	true		663804						
ANR	664170	Symbol	iodev -> state		663804						
ANR	664171	Symbol	rootstring . data		663804						
ANR	664172	Symbol	& Free		663804						
ANR	664173	Symbol	& bsearch		663804						
ANR	664174	Symbol	BlockSize		663804						
ANR	664175	Symbol	param_write_long		663804						
ANR	664176	Function	diskn_put_params	425:0:14922:16340							
ANR	664177	FunctionDef	"diskn_put_params (gx_io_device * iodev , gs_param_list * plist)"		664176	0					
ANR	664178	CompoundStatement		427:0:14993:16340	664176	0					
ANR	664179	IdentifierDeclStatement	gs_param_string rootstr ;	428:4:14999:15022	664176	0	True				
ANR	664180	IdentifierDecl	rootstr		664176	0					
ANR	664181	IdentifierDeclType	gs_param_string		664176	0					
ANR	664182	Identifier	rootstr		664176	1					
ANR	664183	IdentifierDeclStatement	int code ;	429:4:15028:15036	664176	1	True				
ANR	664184	IdentifierDecl	code		664176	0					
ANR	664185	IdentifierDeclType	int		664176	0					
ANR	664186	Identifier	code		664176	1					
ANR	664187	IdentifierDeclStatement	diskn_state * pstate = ( diskn_state * ) iodev -> state ;	430:4:15042:15092	664176	2	True				
ANR	664188	IdentifierDecl	* pstate = ( diskn_state * ) iodev -> state		664176	0					
ANR	664189	IdentifierDeclType	diskn_state *		664176	0					
ANR	664190	Identifier	pstate		664176	1					
ANR	664191	AssignmentExpression	* pstate = ( diskn_state * ) iodev -> state		664176	2		=			
ANR	664192	Identifier	pstate		664176	0					
ANR	664193	CastExpression	( diskn_state * ) iodev -> state		664176	1					
ANR	664194	CastTarget	diskn_state *		664176	0					
ANR	664195	PtrMemberAccess	iodev -> state		664176	1					
ANR	664196	Identifier	iodev		664176	0					
ANR	664197	Identifier	state		664176	1					
ANR	664198	SwitchStatement	"switch ( code = param_read_string ( plist , ""Root"" , & rootstr ) )"		664176	3					
ANR	664199	Condition	"code = param_read_string ( plist , ""Root"" , & rootstr )"	432:12:15107:15155	664176	0	True				
ANR	664200	AssignmentExpression	"code = param_read_string ( plist , ""Root"" , & rootstr )"		664176	0		=			
ANR	664201	Identifier	code		664176	0					
ANR	664202	CallExpression	"param_read_string ( plist , ""Root"" , & rootstr )"		664176	1					
ANR	664203	Callee	param_read_string		664176	0					
ANR	664204	Identifier	param_read_string		664176	0					
ANR	664205	ArgumentList	plist		664176	1					
ANR	664206	Argument	plist		664176	0					
ANR	664207	Identifier	plist		664176	0					
ANR	664208	Argument	"""Root"""		664176	1					
ANR	664209	PrimaryExpression	"""Root"""		664176	0					
ANR	664210	Argument	& rootstr		664176	2					
ANR	664211	UnaryOperationExpression	& rootstr		664176	0					
ANR	664212	UnaryOperator	&		664176	0					
ANR	664213	Identifier	rootstr		664176	1					
ANR	664214	CompoundStatement		6:63:164:164	664176	1					
ANR	664215	Label	case 0 :	433:8:15168:15174	664176	0	True				
ANR	664216	BreakStatement	break ;	434:12:15188:15193	664176	1	True				
ANR	664217	Label	default :	435:8:15203:15210	664176	2	True				
ANR	664218	Identifier	default		664176	0					
ANR	664219	ExpressionStatement	"param_signal_error ( plist , ""Root"" , code )"	436:12:15224:15263	664176	3	True				
ANR	664220	CallExpression	"param_signal_error ( plist , ""Root"" , code )"		664176	0					
ANR	664221	Callee	param_signal_error		664176	0					
ANR	664222	Identifier	param_signal_error		664176	0					
ANR	664223	ArgumentList	plist		664176	1					
ANR	664224	Argument	plist		664176	0					
ANR	664225	Identifier	plist		664176	0					
ANR	664226	Argument	"""Root"""		664176	1					
ANR	664227	PrimaryExpression	"""Root"""		664176	0					
ANR	664228	Argument	code		664176	2					
ANR	664229	Identifier	code		664176	0					
ANR	664230	Label	case 1 :	437:8:15273:15279	664176	4	True				
ANR	664231	ExpressionStatement	rootstr . data = 0	438:12:15293:15309	664176	5	True				
ANR	664232	AssignmentExpression	rootstr . data = 0		664176	0		=			
ANR	664233	MemberAccess	rootstr . data		664176	0					
ANR	664234	Identifier	rootstr		664176	0					
ANR	664235	Identifier	data		664176	1					
ANR	664236	PrimaryExpression	0		664176	1					
ANR	664237	BreakStatement	break ;	439:12:15323:15328	664176	6	True				
ANR	664238	ExpressionStatement	"code = iodev_no_put_params ( iodev , plist )"	443:4:15387:15427	664176	4	True				
ANR	664239	AssignmentExpression	"code = iodev_no_put_params ( iodev , plist )"		664176	0		=			
ANR	664240	Identifier	code		664176	0					
ANR	664241	CallExpression	"iodev_no_put_params ( iodev , plist )"		664176	1					
ANR	664242	Callee	iodev_no_put_params		664176	0					
ANR	664243	Identifier	iodev_no_put_params		664176	0					
ANR	664244	ArgumentList	iodev		664176	1					
ANR	664245	Argument	iodev		664176	0					
ANR	664246	Identifier	iodev		664176	0					
ANR	664247	Argument	plist		664176	1					
ANR	664248	Identifier	plist		664176	0					
ANR	664249	IfStatement	if ( code < 0 )		664176	5					
ANR	664250	Condition	code < 0	444:8:15437:15444	664176	0	True				
ANR	664251	RelationalExpression	code < 0		664176	0		<			
ANR	664252	Identifier	code		664176	0					
ANR	664253	PrimaryExpression	0		664176	1					
ANR	664254	ReturnStatement	return code ;	445:8:15455:15466	664176	1	True				
ANR	664255	Identifier	code		664176	0					
ANR	664256	IfStatement	if ( rootstr . data )		664176	6					
ANR	664257	Condition	rootstr . data	449:8:15514:15525	664176	0	True				
ANR	664258	MemberAccess	rootstr . data		664176	0					
ANR	664259	Identifier	rootstr		664176	0					
ANR	664260	Identifier	data		664176	1					
ANR	664261	CompoundStatement		23:22:534:534	664176	1					
ANR	664262	IfStatement	if ( ! pstate -> root || pstate -> root_size <= rootstr . size )		664176	0					
ANR	664263	Condition	! pstate -> root || pstate -> root_size <= rootstr . size	451:12:15604:15653	664176	0	True				
ANR	664264	OrExpression	! pstate -> root || pstate -> root_size <= rootstr . size		664176	0		||			
ANR	664265	UnaryOperationExpression	! pstate -> root		664176	0					
ANR	664266	UnaryOperator	!		664176	0					
ANR	664267	PtrMemberAccess	pstate -> root		664176	1					
ANR	664268	Identifier	pstate		664176	0					
ANR	664269	Identifier	root		664176	1					
ANR	664270	RelationalExpression	pstate -> root_size <= rootstr . size		664176	1		<=			
ANR	664271	PtrMemberAccess	pstate -> root_size		664176	0					
ANR	664272	Identifier	pstate		664176	0					
ANR	664273	Identifier	root_size		664176	1					
ANR	664274	MemberAccess	rootstr . size		664176	1					
ANR	664275	Identifier	rootstr		664176	0					
ANR	664276	Identifier	size		664176	1					
ANR	664277	CompoundStatement		25:64:662:662	664176	1					
ANR	664278	IfStatement	if ( pstate -> root )		664176	0					
ANR	664279	Condition	pstate -> root	452:16:15674:15685	664176	0	True				
ANR	664280	PtrMemberAccess	pstate -> root		664176	0					
ANR	664281	Identifier	pstate		664176	0					
ANR	664282	Identifier	root		664176	1					
ANR	664283	ExpressionStatement	"gs_free_object ( pstate -> memory , pstate -> root , ""diskn(rootdir)"" )"	453:16:15742:15804	664176	1	True				
ANR	664284	CallExpression	"gs_free_object ( pstate -> memory , pstate -> root , ""diskn(rootdir)"" )"		664176	0					
ANR	664285	Callee	gs_free_object		664176	0					
ANR	664286	Identifier	gs_free_object		664176	0					
ANR	664287	ArgumentList	pstate -> memory		664176	1					
ANR	664288	Argument	pstate -> memory		664176	0					
ANR	664289	PtrMemberAccess	pstate -> memory		664176	0					
ANR	664290	Identifier	pstate		664176	0					
ANR	664291	Identifier	memory		664176	1					
ANR	664292	Argument	pstate -> root		664176	1					
ANR	664293	PtrMemberAccess	pstate -> root		664176	0					
ANR	664294	Identifier	pstate		664176	0					
ANR	664295	Identifier	root		664176	1					
ANR	664296	Argument	"""diskn(rootdir)"""		664176	2					
ANR	664297	PrimaryExpression	"""diskn(rootdir)"""		664176	0					
ANR	664298	ExpressionStatement	"pstate -> root = ( char * ) gs_alloc_byte_array ( pstate -> memory , gp_file_name_sizeof , sizeof ( char ) , ""diskn(rootdir)"" )"	454:12:15818:15953	664176	1	True				
ANR	664299	AssignmentExpression	"pstate -> root = ( char * ) gs_alloc_byte_array ( pstate -> memory , gp_file_name_sizeof , sizeof ( char ) , ""diskn(rootdir)"" )"		664176	0		=			
ANR	664300	PtrMemberAccess	pstate -> root		664176	0					
ANR	664301	Identifier	pstate		664176	0					
ANR	664302	Identifier	root		664176	1					
ANR	664303	CastExpression	"( char * ) gs_alloc_byte_array ( pstate -> memory , gp_file_name_sizeof , sizeof ( char ) , ""diskn(rootdir)"" )"		664176	1					
ANR	664304	CastTarget	char *		664176	0					
ANR	664305	CallExpression	"gs_alloc_byte_array ( pstate -> memory , gp_file_name_sizeof , sizeof ( char ) , ""diskn(rootdir)"" )"		664176	1					
ANR	664306	Callee	gs_alloc_byte_array		664176	0					
ANR	664307	Identifier	gs_alloc_byte_array		664176	0					
ANR	664308	ArgumentList	pstate -> memory		664176	1					
ANR	664309	Argument	pstate -> memory		664176	0					
ANR	664310	PtrMemberAccess	pstate -> memory		664176	0					
ANR	664311	Identifier	pstate		664176	0					
ANR	664312	Identifier	memory		664176	1					
ANR	664313	Argument	gp_file_name_sizeof		664176	1					
ANR	664314	Identifier	gp_file_name_sizeof		664176	0					
ANR	664315	Argument	sizeof ( char )		664176	2					
ANR	664316	SizeofExpression	sizeof ( char )		664176	0					
ANR	664317	Sizeof	sizeof		664176	0					
ANR	664318	SizeofOperand	char		664176	1					
ANR	664319	Argument	"""diskn(rootdir)"""		664176	3					
ANR	664320	PrimaryExpression	"""diskn(rootdir)"""		664176	0					
ANR	664321	IfStatement	if ( ! pstate -> root )		664176	2					
ANR	664322	Condition	! pstate -> root	456:16:15971:15983	664176	0	True				
ANR	664323	UnaryOperationExpression	! pstate -> root		664176	0					
ANR	664324	UnaryOperator	!		664176	0					
ANR	664325	PtrMemberAccess	pstate -> root		664176	1					
ANR	664326	Identifier	pstate		664176	0					
ANR	664327	Identifier	root		664176	1					
ANR	664328	ExpressionStatement	return_error ( gs_error_VMerror )	457:16:16002:16032	664176	1	True				
ANR	664329	CallExpression	return_error ( gs_error_VMerror )		664176	0					
ANR	664330	Callee	return_error		664176	0					
ANR	664331	Identifier	return_error		664176	0					
ANR	664332	ArgumentList	gs_error_VMerror		664176	1					
ANR	664333	Argument	gs_error_VMerror		664176	0					
ANR	664334	Identifier	gs_error_VMerror		664176	0					
ANR	664335	ExpressionStatement	pstate -> root_size = rootstr . size + 1	458:12:16046:16082	664176	3	True				
ANR	664336	AssignmentExpression	pstate -> root_size = rootstr . size + 1		664176	0		=			
ANR	664337	PtrMemberAccess	pstate -> root_size		664176	0					
ANR	664338	Identifier	pstate		664176	0					
ANR	664339	Identifier	root_size		664176	1					
ANR	664340	AdditiveExpression	rootstr . size + 1		664176	1		+			
ANR	664341	MemberAccess	rootstr . size		664176	0					
ANR	664342	Identifier	rootstr		664176	0					
ANR	664343	Identifier	size		664176	1					
ANR	664344	PrimaryExpression	1		664176	1					
ANR	664345	ExpressionStatement	iodev -> procs . enumerate_files = diskn_enumerate_files	460:12:16157:16209	664176	4	True				
ANR	664346	AssignmentExpression	iodev -> procs . enumerate_files = diskn_enumerate_files		664176	0		=			
ANR	664347	MemberAccess	iodev -> procs . enumerate_files		664176	0					
ANR	664348	PtrMemberAccess	iodev -> procs		664176	0					
ANR	664349	Identifier	iodev		664176	0					
ANR	664350	Identifier	procs		664176	1					
ANR	664351	Identifier	enumerate_files		664176	1					
ANR	664352	Identifier	diskn_enumerate_files		664176	1					
ANR	664353	ExpressionStatement	"memcpy ( pstate -> root , rootstr . data , rootstr . size )"	463:8:16230:16278	664176	1	True				
ANR	664354	CallExpression	"memcpy ( pstate -> root , rootstr . data , rootstr . size )"		664176	0					
ANR	664355	Callee	memcpy		664176	0					
ANR	664356	Identifier	memcpy		664176	0					
ANR	664357	ArgumentList	pstate -> root		664176	1					
ANR	664358	Argument	pstate -> root		664176	0					
ANR	664359	PtrMemberAccess	pstate -> root		664176	0					
ANR	664360	Identifier	pstate		664176	0					
ANR	664361	Identifier	root		664176	1					
ANR	664362	Argument	rootstr . data		664176	1					
ANR	664363	MemberAccess	rootstr . data		664176	0					
ANR	664364	Identifier	rootstr		664176	0					
ANR	664365	Identifier	data		664176	1					
ANR	664366	Argument	rootstr . size		664176	2					
ANR	664367	MemberAccess	rootstr . size		664176	0					
ANR	664368	Identifier	rootstr		664176	0					
ANR	664369	Identifier	size		664176	1					
ANR	664370	ExpressionStatement	pstate -> root [ rootstr . size ] = 0	464:8:16288:16318	664176	2	True				
ANR	664371	AssignmentExpression	pstate -> root [ rootstr . size ] = 0		664176	0		=			
ANR	664372	ArrayIndexing	pstate -> root [ rootstr . size ]		664176	0					
ANR	664373	PtrMemberAccess	pstate -> root		664176	0					
ANR	664374	Identifier	pstate		664176	0					
ANR	664375	Identifier	root		664176	1					
ANR	664376	MemberAccess	rootstr . size		664176	1					
ANR	664377	Identifier	rootstr		664176	0					
ANR	664378	Identifier	size		664176	1					
ANR	664379	PrimaryExpression	0		664176	1					
ANR	664380	ReturnStatement	return 0 ;	466:4:16330:16338	664176	7	True				
ANR	664381	PrimaryExpression	0		664176	0					
ANR	664382	ReturnType	static int		664176	1					
ANR	664383	Identifier	diskn_put_params		664176	2					
ANR	664384	ParameterList	"gx_io_device * iodev , gs_param_list * plist"		664176	3					
ANR	664385	Parameter	gx_io_device * iodev	426:17:14950:14968	664176	0	True				
ANR	664386	ParameterType	gx_io_device *		664176	0					
ANR	664387	Identifier	iodev		664176	1					
ANR	664388	Parameter	gs_param_list * plist	426:38:14971:14990	664176	1	True				
ANR	664389	ParameterType	gs_param_list *		664176	0					
ANR	664390	Identifier	plist		664176	1					
ANR	664391	CFGEntryNode	ENTRY		664176		True				
ANR	664392	CFGExitNode	EXIT		664176		True				
ANR	664393	Symbol	code		664176						
ANR	664394	Symbol	& rootstr		664176						
ANR	664395	Symbol	diskn_enumerate_files		664176						
ANR	664396	Symbol	pstate -> root		664176						
ANR	664397	Symbol	* rootstr . size		664176						
ANR	664398	Symbol	pstate		664176						
ANR	664399	Symbol	rootstr		664176						
ANR	664400	Symbol	plist		664176						
ANR	664401	Symbol	pstate -> root_size		664176						
ANR	664402	Symbol	iodev		664176						
ANR	664403	Symbol	pstate -> memory		664176						
ANR	664404	Symbol	iodev_no_put_params		664176						
ANR	664405	Symbol	iodev -> procs		664176						
ANR	664406	Symbol	rootstr . size		664176						
ANR	664407	Symbol	* iodev		664176						
ANR	664408	Symbol	gp_file_name_sizeof		664176						
ANR	664409	Symbol	param_read_string		664176						
ANR	664410	Symbol	gs_error_VMerror		664176						
ANR	664411	Symbol	* * pstate		664176						
ANR	664412	Symbol	rootstr . data		664176						
ANR	664413	Symbol	iodev -> procs . enumerate_files		664176						
ANR	664414	Symbol	* pstate		664176						
ANR	664415	Symbol	iodev -> state		664176						
ANR	664416	Symbol	* pstate -> root		664176						
ANR	664417	Symbol	* rootstr		664176						
ANR	664418	Symbol	gs_alloc_byte_array		664176						
ANR	664419	Function	MapFileOpen	477:0:16582:17154							
ANR	664420	FunctionDef	"MapFileOpen (gs_memory_t * mem , const char * rootpath , const char * filename , const char * attributes)"		664419	0					
ANR	664421	CompoundStatement		479:0:16697:17154	664419	0					
ANR	664422	IdentifierDeclStatement	char * fullname = NULL ;	480:4:16703:16724	664419	0	True				
ANR	664423	IdentifierDecl	* fullname = NULL		664419	0					
ANR	664424	IdentifierDeclType	char *		664419	0					
ANR	664425	Identifier	fullname		664419	1					
ANR	664426	AssignmentExpression	* fullname = NULL		664419	2		=			
ANR	664427	Identifier	NULL		664419	0					
ANR	664428	Identifier	NULL		664419	1					
ANR	664429	IdentifierDeclStatement	FILE * f = NULL ;	481:4:16730:16744	664419	1	True				
ANR	664430	IdentifierDecl	* f = NULL		664419	0					
ANR	664431	IdentifierDeclType	FILE *		664419	0					
ANR	664432	Identifier	f		664419	1					
ANR	664433	AssignmentExpression	* f = NULL		664419	2		=			
ANR	664434	Identifier	NULL		664419	0					
ANR	664435	Identifier	NULL		664419	1					
ANR	664436	IdentifierDeclStatement	int totlen = strlen ( rootpath ) + strlen ( filename ) + 1 ;	482:4:16750:16802	664419	2	True				
ANR	664437	IdentifierDecl	totlen = strlen ( rootpath ) + strlen ( filename ) + 1		664419	0					
ANR	664438	IdentifierDeclType	int		664419	0					
ANR	664439	Identifier	totlen		664419	1					
ANR	664440	AssignmentExpression	totlen = strlen ( rootpath ) + strlen ( filename ) + 1		664419	2		=			
ANR	664441	Identifier	totlen		664419	0					
ANR	664442	AdditiveExpression	strlen ( rootpath ) + strlen ( filename ) + 1		664419	1		+			
ANR	664443	CallExpression	strlen ( rootpath )		664419	0					
ANR	664444	Callee	strlen		664419	0					
ANR	664445	Identifier	strlen		664419	0					
ANR	664446	ArgumentList	rootpath		664419	1					
ANR	664447	Argument	rootpath		664419	0					
ANR	664448	Identifier	rootpath		664419	0					
ANR	664449	AdditiveExpression	strlen ( filename ) + 1		664419	1		+			
ANR	664450	CallExpression	strlen ( filename )		664419	0					
ANR	664451	Callee	strlen		664419	0					
ANR	664452	Identifier	strlen		664419	0					
ANR	664453	ArgumentList	filename		664419	1					
ANR	664454	Argument	filename		664419	0					
ANR	664455	Identifier	filename		664419	0					
ANR	664456	PrimaryExpression	1		664419	1					
ANR	664457	IfStatement	if ( totlen >= gp_file_name_sizeof )		664419	3					
ANR	664458	Condition	totlen >= gp_file_name_sizeof	484:8:16813:16841	664419	0	True				
ANR	664459	RelationalExpression	totlen >= gp_file_name_sizeof		664419	0		>=			
ANR	664460	Identifier	totlen		664419	0					
ANR	664461	Identifier	gp_file_name_sizeof		664419	1					
ANR	664462	ReturnStatement	return NULL ;	485:8:16852:16863	664419	1	True				
ANR	664463	Identifier	NULL		664419	0					
ANR	664464	ExpressionStatement	"fullname = ( char * ) gs_alloc_bytes ( mem , totlen , ""MapFileOpen(fullname)"" )"	487:4:16870:16941	664419	4	True				
ANR	664465	AssignmentExpression	"fullname = ( char * ) gs_alloc_bytes ( mem , totlen , ""MapFileOpen(fullname)"" )"		664419	0		=			
ANR	664466	Identifier	fullname		664419	0					
ANR	664467	CastExpression	"( char * ) gs_alloc_bytes ( mem , totlen , ""MapFileOpen(fullname)"" )"		664419	1					
ANR	664468	CastTarget	char *		664419	0					
ANR	664469	CallExpression	"gs_alloc_bytes ( mem , totlen , ""MapFileOpen(fullname)"" )"		664419	1					
ANR	664470	Callee	gs_alloc_bytes		664419	0					
ANR	664471	Identifier	gs_alloc_bytes		664419	0					
ANR	664472	ArgumentList	mem		664419	1					
ANR	664473	Argument	mem		664419	0					
ANR	664474	Identifier	mem		664419	0					
ANR	664475	Argument	totlen		664419	1					
ANR	664476	Identifier	totlen		664419	0					
ANR	664477	Argument	"""MapFileOpen(fullname)"""		664419	2					
ANR	664478	PrimaryExpression	"""MapFileOpen(fullname)"""		664419	0					
ANR	664479	IfStatement	if ( fullname )		664419	5					
ANR	664480	Condition	fullname	488:8:16951:16958	664419	0	True				
ANR	664481	Identifier	fullname		664419	0					
ANR	664482	CompoundStatement		10:18:263:263	664419	1					
ANR	664483	ExpressionStatement	"gs_sprintf ( fullname , ""%s%s"" , rootpath , filename )"	490:8:16972:17020	664419	0	True				
ANR	664484	CallExpression	"gs_sprintf ( fullname , ""%s%s"" , rootpath , filename )"		664419	0					
ANR	664485	Callee	gs_sprintf		664419	0					
ANR	664486	Identifier	gs_sprintf		664419	0					
ANR	664487	ArgumentList	fullname		664419	1					
ANR	664488	Argument	fullname		664419	0					
ANR	664489	Identifier	fullname		664419	0					
ANR	664490	Argument	"""%s%s"""		664419	1					
ANR	664491	PrimaryExpression	"""%s%s"""		664419	0					
ANR	664492	Argument	rootpath		664419	2					
ANR	664493	Identifier	rootpath		664419	0					
ANR	664494	Argument	filename		664419	3					
ANR	664495	Identifier	filename		664419	0					
ANR	664496	ExpressionStatement	"f = gp_fopen ( fullname , attributes )"	491:8:17030:17064	664419	1	True				
ANR	664497	AssignmentExpression	"f = gp_fopen ( fullname , attributes )"		664419	0		=			
ANR	664498	Identifier	f		664419	0					
ANR	664499	CallExpression	"gp_fopen ( fullname , attributes )"		664419	1					
ANR	664500	Callee	gp_fopen		664419	0					
ANR	664501	Identifier	gp_fopen		664419	0					
ANR	664502	ArgumentList	fullname		664419	1					
ANR	664503	Argument	fullname		664419	0					
ANR	664504	Identifier	fullname		664419	0					
ANR	664505	Argument	attributes		664419	1					
ANR	664506	Identifier	attributes		664419	0					
ANR	664507	ExpressionStatement	"gs_free_object ( mem , fullname , ""MapFileOpen(fullname)"" )"	493:8:17075:17130	664419	2	True				
ANR	664508	CallExpression	"gs_free_object ( mem , fullname , ""MapFileOpen(fullname)"" )"		664419	0					
ANR	664509	Callee	gs_free_object		664419	0					
ANR	664510	Identifier	gs_free_object		664419	0					
ANR	664511	ArgumentList	mem		664419	1					
ANR	664512	Argument	mem		664419	0					
ANR	664513	Identifier	mem		664419	0					
ANR	664514	Argument	fullname		664419	1					
ANR	664515	Identifier	fullname		664419	0					
ANR	664516	Argument	"""MapFileOpen(fullname)"""		664419	2					
ANR	664517	PrimaryExpression	"""MapFileOpen(fullname)"""		664419	0					
ANR	664518	ReturnStatement	return ( f ) ;	496:4:17143:17152	664419	6	True				
ANR	664519	Identifier	f		664419	0					
ANR	664520	ReturnType	static FILE *		664419	1					
ANR	664521	Identifier	MapFileOpen		664419	2					
ANR	664522	ParameterList	"gs_memory_t * mem , const char * rootpath , const char * filename , const char * attributes"		664419	3					
ANR	664523	Parameter	gs_memory_t * mem	478:12:16608:16623	664419	0	True				
ANR	664524	ParameterType	gs_memory_t *		664419	0					
ANR	664525	Identifier	mem		664419	1					
ANR	664526	Parameter	const char * rootpath	478:30:16626:16646	664419	1	True				
ANR	664527	ParameterType	const char *		664419	0					
ANR	664528	Identifier	rootpath		664419	1					
ANR	664529	Parameter	const char * filename	478:53:16649:16669	664419	2	True				
ANR	664530	ParameterType	const char *		664419	0					
ANR	664531	Identifier	filename		664419	1					
ANR	664532	Parameter	const char * attributes	478:76:16672:16694	664419	3	True				
ANR	664533	ParameterType	const char *		664419	0					
ANR	664534	Identifier	attributes		664419	1					
ANR	664535	CFGEntryNode	ENTRY		664419		True				
ANR	664536	CFGExitNode	EXIT		664419		True				
ANR	664537	Symbol	strlen		664419						
ANR	664538	Symbol	gs_alloc_bytes		664419						
ANR	664539	Symbol	filename		664419						
ANR	664540	Symbol	NULL		664419						
ANR	664541	Symbol	mem		664419						
ANR	664542	Symbol	f		664419						
ANR	664543	Symbol	totlen		664419						
ANR	664544	Symbol	gp_file_name_sizeof		664419						
ANR	664545	Symbol	attributes		664419						
ANR	664546	Symbol	gp_fopen		664419						
ANR	664547	Symbol	fullname		664419						
ANR	664548	Symbol	rootpath		664419						
ANR	664549	Function	MapFileReadVersion	506:0:17337:17775							
ANR	664550	FunctionDef	"MapFileReadVersion (FILE * mapfile , int * value)"		664549	0					
ANR	664551	CompoundStatement		508:0:17396:17775	664549	0					
ANR	664552	IdentifierDeclStatement	"int code = fscanf ( mapfile , ""FileVersion\\t%d\\t"" , value ) == 1 ? 1 : 0 ;"	509:4:17402:17469	664549	0	True				
ANR	664553	IdentifierDecl	"code = fscanf ( mapfile , ""FileVersion\\t%d\\t"" , value ) == 1 ? 1 : 0"		664549	0					
ANR	664554	IdentifierDeclType	int		664549	0					
ANR	664555	Identifier	code		664549	1					
ANR	664556	AssignmentExpression	"code = fscanf ( mapfile , ""FileVersion\\t%d\\t"" , value ) == 1 ? 1 : 0"		664549	2		=			
ANR	664557	Identifier	code		664549	0					
ANR	664558	ConditionalExpression	"fscanf ( mapfile , ""FileVersion\\t%d\\t"" , value ) == 1 ? 1 : 0"		664549	1					
ANR	664559	Condition	"fscanf ( mapfile , ""FileVersion\\t%d\\t"" , value ) == 1"		664549	0					
ANR	664560	EqualityExpression	"fscanf ( mapfile , ""FileVersion\\t%d\\t"" , value ) == 1"		664549	0		==			
ANR	664561	CallExpression	"fscanf ( mapfile , ""FileVersion\\t%d\\t"" , value )"		664549	0					
ANR	664562	Callee	fscanf		664549	0					
ANR	664563	Identifier	fscanf		664549	0					
ANR	664564	ArgumentList	mapfile		664549	1					
ANR	664565	Argument	mapfile		664549	0					
ANR	664566	Identifier	mapfile		664549	0					
ANR	664567	Argument	"""FileVersion\\t%d\\t"""		664549	1					
ANR	664568	PrimaryExpression	"""FileVersion\\t%d\\t"""		664549	0					
ANR	664569	Argument	value		664549	2					
ANR	664570	Identifier	value		664549	0					
ANR	664571	PrimaryExpression	1		664549	1					
ANR	664572	PrimaryExpression	1		664549	1					
ANR	664573	PrimaryExpression	0		664549	2					
ANR	664574	IdentifierDeclStatement	int c ;	510:4:17475:17480	664549	1	True				
ANR	664575	IdentifierDecl	c		664549	0					
ANR	664576	IdentifierDeclType	int		664549	0					
ANR	664577	Identifier	c		664549	1					
ANR	664578	DoStatement	do		664549	2					
ANR	664579	CompoundStatement		6:7:133:133	664549	0					
ANR	664580	ExpressionStatement	c = fgetc ( mapfile )	514:8:17540:17558	664549	0	True				
ANR	664581	AssignmentExpression	c = fgetc ( mapfile )		664549	0		=			
ANR	664582	Identifier	c		664549	0					
ANR	664583	CallExpression	fgetc ( mapfile )		664549	1					
ANR	664584	Callee	fgetc		664549	0					
ANR	664585	Identifier	fgetc		664549	0					
ANR	664586	ArgumentList	mapfile		664549	1					
ANR	664587	Argument	mapfile		664549	0					
ANR	664588	Identifier	mapfile		664549	0					
ANR	664589	Condition	c != EOF && c != '\\n' && c != '\\r'	515:13:17573:17606	664549	1	True				
ANR	664590	AndExpression	c != EOF && c != '\\n' && c != '\\r'		664549	0		&&			
ANR	664591	EqualityExpression	c != EOF		664549	0		!=			
ANR	664592	Identifier	c		664549	0					
ANR	664593	Identifier	EOF		664549	1					
ANR	664594	AndExpression	c != '\\n' && c != '\\r'		664549	1		&&			
ANR	664595	EqualityExpression	c != '\\n'		664549	0		!=			
ANR	664596	Identifier	c		664549	0					
ANR	664597	PrimaryExpression	'\\n'		664549	1					
ANR	664598	EqualityExpression	c != '\\r'		664549	1		!=			
ANR	664599	Identifier	c		664549	0					
ANR	664600	PrimaryExpression	'\\r'		664549	1					
ANR	664601	WhileStatement	while ( c != EOF && ( c == '\\n' || c == '\\r' ) )		664549	3					
ANR	664602	Condition	c != EOF && ( c == '\\n' || c == '\\r' )	518:11:17684:17719	664549	0	True				
ANR	664603	AndExpression	c != EOF && ( c == '\\n' || c == '\\r' )		664549	0		&&			
ANR	664604	EqualityExpression	c != EOF		664549	0		!=			
ANR	664605	Identifier	c		664549	0					
ANR	664606	Identifier	EOF		664549	1					
ANR	664607	OrExpression	c == '\\n' || c == '\\r'		664549	1		||			
ANR	664608	EqualityExpression	c == '\\n'		664549	0		==			
ANR	664609	Identifier	c		664549	0					
ANR	664610	PrimaryExpression	'\\n'		664549	1					
ANR	664611	EqualityExpression	c == '\\r'		664549	1		==			
ANR	664612	Identifier	c		664549	0					
ANR	664613	PrimaryExpression	'\\r'		664549	1					
ANR	664614	CompoundStatement		11:49:325:325	664549	1					
ANR	664615	ExpressionStatement	c = fgetc ( mapfile )	519:8:17732:17750	664549	0	True				
ANR	664616	AssignmentExpression	c = fgetc ( mapfile )		664549	0		=			
ANR	664617	Identifier	c		664549	0					
ANR	664618	CallExpression	fgetc ( mapfile )		664549	1					
ANR	664619	Callee	fgetc		664549	0					
ANR	664620	Identifier	fgetc		664549	0					
ANR	664621	ArgumentList	mapfile		664549	1					
ANR	664622	Argument	mapfile		664549	0					
ANR	664623	Identifier	mapfile		664549	0					
ANR	664624	ReturnStatement	return code ;	521:4:17762:17773	664549	4	True				
ANR	664625	Identifier	code		664549	0					
ANR	664626	ReturnType	static int		664549	1					
ANR	664627	Identifier	MapFileReadVersion		664549	2					
ANR	664628	ParameterList	"FILE * mapfile , int * value"		664549	3					
ANR	664629	Parameter	FILE * mapfile	507:19:17367:17380	664549	0	True				
ANR	664630	ParameterType	FILE *		664549	0					
ANR	664631	Identifier	mapfile		664549	1					
ANR	664632	Parameter	int * value	507:35:17383:17393	664549	1	True				
ANR	664633	ParameterType	int *		664549	0					
ANR	664634	Identifier	value		664549	1					
ANR	664635	CFGEntryNode	ENTRY		664549		True				
ANR	664636	CFGExitNode	EXIT		664549		True				
ANR	664637	Symbol	fscanf		664549						
ANR	664638	Symbol	code		664549						
ANR	664639	Symbol	c		664549						
ANR	664640	Symbol	value		664549						
ANR	664641	Symbol	EOF		664549						
ANR	664642	Symbol	fgetc		664549						
ANR	664643	Symbol	mapfile		664549						
ANR	664644	Function	MapFileWriteVersion	530:0:17908:18082							
ANR	664645	FunctionDef	"MapFileWriteVersion (FILE * mapfile , int value)"		664644	0					
ANR	664646	CompoundStatement		532:0:17967:18082	664644	0					
ANR	664647	ExpressionStatement	"fprintf ( mapfile , ""FileVersion\\t%d\\tThis file is machine generated.  Do not edit.\\n"" , value )"	533:4:17973:18080	664644	0	True				
ANR	664648	CallExpression	"fprintf ( mapfile , ""FileVersion\\t%d\\tThis file is machine generated.  Do not edit.\\n"" , value )"		664644	0					
ANR	664649	Callee	fprintf		664644	0					
ANR	664650	Identifier	fprintf		664644	0					
ANR	664651	ArgumentList	mapfile		664644	1					
ANR	664652	Argument	mapfile		664644	0					
ANR	664653	Identifier	mapfile		664644	0					
ANR	664654	Argument	"""FileVersion\\t%d\\tThis file is machine generated.  Do not edit.\\n"""		664644	1					
ANR	664655	PrimaryExpression	"""FileVersion\\t%d\\tThis file is machine generated.  Do not edit.\\n"""		664644	0					
ANR	664656	Argument	value		664644	2					
ANR	664657	Identifier	value		664644	0					
ANR	664658	ReturnType	static void		664644	1					
ANR	664659	Identifier	MapFileWriteVersion		664644	2					
ANR	664660	ParameterList	"FILE * mapfile , int value"		664644	3					
ANR	664661	Parameter	FILE * mapfile	531:20:17940:17953	664644	0	True				
ANR	664662	ParameterType	FILE *		664644	0					
ANR	664663	Identifier	mapfile		664644	1					
ANR	664664	Parameter	int value	531:36:17956:17964	664644	1	True				
ANR	664665	ParameterType	int		664644	0					
ANR	664666	Identifier	value		664644	1					
ANR	664667	CFGEntryNode	ENTRY		664644		True				
ANR	664668	CFGExitNode	EXIT		664644		True				
ANR	664669	Symbol	value		664644						
ANR	664670	Symbol	mapfile		664644						
ANR	664671	Function	MapFileRead	546:0:18303:18897							
ANR	664672	FunctionDef	"MapFileRead (FILE * mapfile , char * namebuf , int * value)"		664671	0					
ANR	664673	CompoundStatement		548:0:18371:18897	664671	0					
ANR	664674	IdentifierDeclStatement	int count = 0 ;	549:4:18377:18390	664671	0	True				
ANR	664675	IdentifierDecl	count = 0		664671	0					
ANR	664676	IdentifierDeclType	int		664671	0					
ANR	664677	Identifier	count		664671	1					
ANR	664678	AssignmentExpression	count = 0		664671	2		=			
ANR	664679	Identifier	count		664671	0					
ANR	664680	PrimaryExpression	0		664671	1					
ANR	664681	IdentifierDeclStatement	int c ;	550:4:18396:18401	664671	1	True				
ANR	664682	IdentifierDecl	c		664671	0					
ANR	664683	IdentifierDeclType	int		664671	0					
ANR	664684	Identifier	c		664671	1					
ANR	664685	IfStatement	"if ( fscanf ( mapfile , ""%d\\t"" , value ) != 1 )"		664671	2					
ANR	664686	Condition	"fscanf ( mapfile , ""%d\\t"" , value ) != 1"	553:8:18442:18476	664671	0	True				
ANR	664687	EqualityExpression	"fscanf ( mapfile , ""%d\\t"" , value ) != 1"		664671	0		!=			
ANR	664688	CallExpression	"fscanf ( mapfile , ""%d\\t"" , value )"		664671	0					
ANR	664689	Callee	fscanf		664671	0					
ANR	664690	Identifier	fscanf		664671	0					
ANR	664691	ArgumentList	mapfile		664671	1					
ANR	664692	Argument	mapfile		664671	0					
ANR	664693	Identifier	mapfile		664671	0					
ANR	664694	Argument	"""%d\\t"""		664671	1					
ANR	664695	PrimaryExpression	"""%d\\t"""		664671	0					
ANR	664696	Argument	value		664671	2					
ANR	664697	Identifier	value		664671	0					
ANR	664698	PrimaryExpression	1		664671	1					
ANR	664699	ReturnStatement	return 0 ;	554:8:18487:18495	664671	1	True				
ANR	664700	PrimaryExpression	0		664671	0					
ANR	664701	DoStatement	do		664671	3					
ANR	664702	CompoundStatement		10:7:161:161	664671	0					
ANR	664703	ExpressionStatement	namebuf [ count ++ ] = c = fgetc ( mapfile )	558:8:18543:18580	664671	0	True				
ANR	664704	AssignmentExpression	namebuf [ count ++ ] = c = fgetc ( mapfile )		664671	0		=			
ANR	664705	ArrayIndexing	namebuf [ count ++ ]		664671	0					
ANR	664706	Identifier	namebuf		664671	0					
ANR	664707	PostIncDecOperationExpression	count ++		664671	1					
ANR	664708	Identifier	count		664671	0					
ANR	664709	IncDec	++		664671	1					
ANR	664710	AssignmentExpression	c = fgetc ( mapfile )		664671	1		=			
ANR	664711	Identifier	c		664671	0					
ANR	664712	CallExpression	fgetc ( mapfile )		664671	1					
ANR	664713	Callee	fgetc		664671	0					
ANR	664714	Identifier	fgetc		664671	0					
ANR	664715	ArgumentList	mapfile		664671	1					
ANR	664716	Argument	mapfile		664671	0					
ANR	664717	Identifier	mapfile		664671	0					
ANR	664718	Condition	count < gp_file_name_sizeof && c != EOF && c != '\\n' && c != '\\r'	559:13:18595:18659	664671	1	True				
ANR	664719	AndExpression	count < gp_file_name_sizeof && c != EOF && c != '\\n' && c != '\\r'		664671	0		&&			
ANR	664720	RelationalExpression	count < gp_file_name_sizeof		664671	0		<			
ANR	664721	Identifier	count		664671	0					
ANR	664722	Identifier	gp_file_name_sizeof		664671	1					
ANR	664723	AndExpression	c != EOF && c != '\\n' && c != '\\r'		664671	1		&&			
ANR	664724	EqualityExpression	c != EOF		664671	0		!=			
ANR	664725	Identifier	c		664671	0					
ANR	664726	Identifier	EOF		664671	1					
ANR	664727	AndExpression	c != '\\n' && c != '\\r'		664671	1		&&			
ANR	664728	EqualityExpression	c != '\\n'		664671	0		!=			
ANR	664729	Identifier	c		664671	0					
ANR	664730	PrimaryExpression	'\\n'		664671	1					
ANR	664731	EqualityExpression	c != '\\r'		664671	1		!=			
ANR	664732	Identifier	c		664671	0					
ANR	664733	PrimaryExpression	'\\r'		664671	1					
ANR	664734	ExpressionStatement	namebuf [ -- count ] = 0	560:4:18667:18687	664671	4	True				
ANR	664735	AssignmentExpression	namebuf [ -- count ] = 0		664671	0		=			
ANR	664736	ArrayIndexing	namebuf [ -- count ]		664671	0					
ANR	664737	Identifier	namebuf		664671	0					
ANR	664738	UnaryExpression	-- count		664671	1					
ANR	664739	IncDec	--		664671	0					
ANR	664740	Identifier	count		664671	1					
ANR	664741	PrimaryExpression	0		664671	1					
ANR	664742	WhileStatement	while ( c != EOF && ( c == '\\n' || c == '\\r' ) )		664671	5					
ANR	664743	Condition	c != EOF && ( c == '\\n' || c == '\\r' )	563:11:18792:18827	664671	0	True				
ANR	664744	AndExpression	c != EOF && ( c == '\\n' || c == '\\r' )		664671	0		&&			
ANR	664745	EqualityExpression	c != EOF		664671	0		!=			
ANR	664746	Identifier	c		664671	0					
ANR	664747	Identifier	EOF		664671	1					
ANR	664748	OrExpression	c == '\\n' || c == '\\r'		664671	1		||			
ANR	664749	EqualityExpression	c == '\\n'		664671	0		==			
ANR	664750	Identifier	c		664671	0					
ANR	664751	PrimaryExpression	'\\n'		664671	1					
ANR	664752	EqualityExpression	c == '\\r'		664671	1		==			
ANR	664753	Identifier	c		664671	0					
ANR	664754	PrimaryExpression	'\\r'		664671	1					
ANR	664755	CompoundStatement		16:49:458:458	664671	1					
ANR	664756	ExpressionStatement	c = fgetc ( mapfile )	564:8:18840:18858	664671	0	True				
ANR	664757	AssignmentExpression	c = fgetc ( mapfile )		664671	0		=			
ANR	664758	Identifier	c		664671	0					
ANR	664759	CallExpression	fgetc ( mapfile )		664671	1					
ANR	664760	Callee	fgetc		664671	0					
ANR	664761	Identifier	fgetc		664671	0					
ANR	664762	ArgumentList	mapfile		664671	1					
ANR	664763	Argument	mapfile		664671	0					
ANR	664764	Identifier	mapfile		664671	0					
ANR	664765	ReturnStatement	return count != 0 ? 1 : 0 ;	567:4:18871:18895	664671	6	True				
ANR	664766	ConditionalExpression	count != 0 ? 1 : 0		664671	0					
ANR	664767	Condition	count != 0		664671	0					
ANR	664768	EqualityExpression	count != 0		664671	0		!=			
ANR	664769	Identifier	count		664671	0					
ANR	664770	PrimaryExpression	0		664671	1					
ANR	664771	PrimaryExpression	1		664671	1					
ANR	664772	PrimaryExpression	0		664671	2					
ANR	664773	ReturnType	static int		664671	1					
ANR	664774	Identifier	MapFileRead		664671	2					
ANR	664775	ParameterList	"FILE * mapfile , char * namebuf , int * value"		664671	3					
ANR	664776	Parameter	FILE * mapfile	547:12:18326:18339	664671	0	True				
ANR	664777	ParameterType	FILE *		664671	0					
ANR	664778	Identifier	mapfile		664671	1					
ANR	664779	Parameter	char * namebuf	547:28:18342:18355	664671	1	True				
ANR	664780	ParameterType	char *		664671	0					
ANR	664781	Identifier	namebuf		664671	1					
ANR	664782	Parameter	int * value	547:44:18358:18368	664671	2	True				
ANR	664783	ParameterType	int *		664671	0					
ANR	664784	Identifier	value		664671	1					
ANR	664785	CFGEntryNode	ENTRY		664671		True				
ANR	664786	CFGExitNode	EXIT		664671		True				
ANR	664787	Symbol	* namebuf		664671						
ANR	664788	Symbol	* count		664671						
ANR	664789	Symbol	fscanf		664671						
ANR	664790	Symbol	c		664671						
ANR	664791	Symbol	count		664671						
ANR	664792	Symbol	gp_file_name_sizeof		664671						
ANR	664793	Symbol	namebuf		664671						
ANR	664794	Symbol	value		664671						
ANR	664795	Symbol	EOF		664671						
ANR	664796	Symbol	fgetc		664671						
ANR	664797	Symbol	mapfile		664671						
ANR	664798	Function	MapFileWrite	577:0:19048:19175							
ANR	664799	FunctionDef	"MapFileWrite (FILE * mapfile , const char * namebuf , int value)"		664798	0					
ANR	664800	CompoundStatement		579:0:19122:19175	664798	0					
ANR	664801	ExpressionStatement	"fprintf ( mapfile , "" %d\\t%s\\n"" , value , namebuf )"	580:4:19128:19173	664798	0	True				
ANR	664802	CallExpression	"fprintf ( mapfile , "" %d\\t%s\\n"" , value , namebuf )"		664798	0					
ANR	664803	Callee	fprintf		664798	0					
ANR	664804	Identifier	fprintf		664798	0					
ANR	664805	ArgumentList	mapfile		664798	1					
ANR	664806	Argument	mapfile		664798	0					
ANR	664807	Identifier	mapfile		664798	0					
ANR	664808	Argument	""" %d\\t%s\\n"""		664798	1					
ANR	664809	PrimaryExpression	""" %d\\t%s\\n"""		664798	0					
ANR	664810	Argument	value		664798	2					
ANR	664811	Identifier	value		664798	0					
ANR	664812	Argument	namebuf		664798	3					
ANR	664813	Identifier	namebuf		664798	0					
ANR	664814	ReturnType	static void		664798	1					
ANR	664815	Identifier	MapFileWrite		664798	2					
ANR	664816	ParameterList	"FILE * mapfile , const char * namebuf , int value"		664798	3					
ANR	664817	Parameter	FILE * mapfile	578:13:19073:19086	664798	0	True				
ANR	664818	ParameterType	FILE *		664798	0					
ANR	664819	Identifier	mapfile		664798	1					
ANR	664820	Parameter	const char * namebuf	578:29:19089:19108	664798	1	True				
ANR	664821	ParameterType	const char *		664798	0					
ANR	664822	Identifier	namebuf		664798	1					
ANR	664823	Parameter	int value	578:51:19111:19119	664798	2	True				
ANR	664824	ParameterType	int		664798	0					
ANR	664825	Identifier	value		664798	1					
ANR	664826	CFGEntryNode	ENTRY		664798		True				
ANR	664827	CFGExitNode	EXIT		664798		True				
ANR	664828	Symbol	namebuf		664798						
ANR	664829	Symbol	value		664798						
ANR	664830	Symbol	mapfile		664798						
ANR	664831	Function	MapFileUnlink	589:0:19290:19781							
ANR	664832	FunctionDef	"MapFileUnlink (gs_memory_t * mem , const char * rootpath , const char * filename)"		664831	0					
ANR	664833	CompoundStatement		591:0:19380:19781	664831	0					
ANR	664834	IdentifierDeclStatement	char * fullname = NULL ;	592:4:19386:19407	664831	0	True				
ANR	664835	IdentifierDecl	* fullname = NULL		664831	0					
ANR	664836	IdentifierDeclType	char *		664831	0					
ANR	664837	Identifier	fullname		664831	1					
ANR	664838	AssignmentExpression	* fullname = NULL		664831	2		=			
ANR	664839	Identifier	NULL		664831	0					
ANR	664840	Identifier	NULL		664831	1					
ANR	664841	IdentifierDeclStatement	int totlen = strlen ( rootpath ) + strlen ( filename ) + 1 ;	593:4:19413:19465	664831	1	True				
ANR	664842	IdentifierDecl	totlen = strlen ( rootpath ) + strlen ( filename ) + 1		664831	0					
ANR	664843	IdentifierDeclType	int		664831	0					
ANR	664844	Identifier	totlen		664831	1					
ANR	664845	AssignmentExpression	totlen = strlen ( rootpath ) + strlen ( filename ) + 1		664831	2		=			
ANR	664846	Identifier	totlen		664831	0					
ANR	664847	AdditiveExpression	strlen ( rootpath ) + strlen ( filename ) + 1		664831	1		+			
ANR	664848	CallExpression	strlen ( rootpath )		664831	0					
ANR	664849	Callee	strlen		664831	0					
ANR	664850	Identifier	strlen		664831	0					
ANR	664851	ArgumentList	rootpath		664831	1					
ANR	664852	Argument	rootpath		664831	0					
ANR	664853	Identifier	rootpath		664831	0					
ANR	664854	AdditiveExpression	strlen ( filename ) + 1		664831	1		+			
ANR	664855	CallExpression	strlen ( filename )		664831	0					
ANR	664856	Callee	strlen		664831	0					
ANR	664857	Identifier	strlen		664831	0					
ANR	664858	ArgumentList	filename		664831	1					
ANR	664859	Argument	filename		664831	0					
ANR	664860	Identifier	filename		664831	0					
ANR	664861	PrimaryExpression	1		664831	1					
ANR	664862	IfStatement	if ( totlen >= gp_file_name_sizeof )		664831	2					
ANR	664863	Condition	totlen >= gp_file_name_sizeof	595:8:19476:19504	664831	0	True				
ANR	664864	RelationalExpression	totlen >= gp_file_name_sizeof		664831	0		>=			
ANR	664865	Identifier	totlen		664831	0					
ANR	664866	Identifier	gp_file_name_sizeof		664831	1					
ANR	664867	ReturnStatement	return ;	596:8:19515:19521	664831	1	True				
ANR	664868	ExpressionStatement	"fullname = ( char * ) gs_alloc_bytes ( mem , totlen , ""MapFileUnlink(fullname)"" )"	597:4:19527:19600	664831	3	True				
ANR	664869	AssignmentExpression	"fullname = ( char * ) gs_alloc_bytes ( mem , totlen , ""MapFileUnlink(fullname)"" )"		664831	0		=			
ANR	664870	Identifier	fullname		664831	0					
ANR	664871	CastExpression	"( char * ) gs_alloc_bytes ( mem , totlen , ""MapFileUnlink(fullname)"" )"		664831	1					
ANR	664872	CastTarget	char *		664831	0					
ANR	664873	CallExpression	"gs_alloc_bytes ( mem , totlen , ""MapFileUnlink(fullname)"" )"		664831	1					
ANR	664874	Callee	gs_alloc_bytes		664831	0					
ANR	664875	Identifier	gs_alloc_bytes		664831	0					
ANR	664876	ArgumentList	mem		664831	1					
ANR	664877	Argument	mem		664831	0					
ANR	664878	Identifier	mem		664831	0					
ANR	664879	Argument	totlen		664831	1					
ANR	664880	Identifier	totlen		664831	0					
ANR	664881	Argument	"""MapFileUnlink(fullname)"""		664831	2					
ANR	664882	PrimaryExpression	"""MapFileUnlink(fullname)"""		664831	0					
ANR	664883	IfStatement	if ( fullname )		664831	4					
ANR	664884	Condition	fullname	598:8:19610:19617	664831	0	True				
ANR	664885	Identifier	fullname		664831	0					
ANR	664886	CompoundStatement		8:18:239:239	664831	1					
ANR	664887	ExpressionStatement	"gs_sprintf ( fullname , ""%s%s"" , rootpath , filename )"	599:8:19630:19678	664831	0	True				
ANR	664888	CallExpression	"gs_sprintf ( fullname , ""%s%s"" , rootpath , filename )"		664831	0					
ANR	664889	Callee	gs_sprintf		664831	0					
ANR	664890	Identifier	gs_sprintf		664831	0					
ANR	664891	ArgumentList	fullname		664831	1					
ANR	664892	Argument	fullname		664831	0					
ANR	664893	Identifier	fullname		664831	0					
ANR	664894	Argument	"""%s%s"""		664831	1					
ANR	664895	PrimaryExpression	"""%s%s"""		664831	0					
ANR	664896	Argument	rootpath		664831	2					
ANR	664897	Identifier	rootpath		664831	0					
ANR	664898	Argument	filename		664831	3					
ANR	664899	Identifier	filename		664831	0					
ANR	664900	ExpressionStatement	unlink ( fullname )	601:8:19689:19705	664831	1	True				
ANR	664901	CallExpression	unlink ( fullname )		664831	0					
ANR	664902	Callee	unlink		664831	0					
ANR	664903	Identifier	unlink		664831	0					
ANR	664904	ArgumentList	fullname		664831	1					
ANR	664905	Argument	fullname		664831	0					
ANR	664906	Identifier	fullname		664831	0					
ANR	664907	ExpressionStatement	"gs_free_object ( mem , fullname , ""MapFileUnlink(fullname)"" )"	603:8:19716:19773	664831	2	True				
ANR	664908	CallExpression	"gs_free_object ( mem , fullname , ""MapFileUnlink(fullname)"" )"		664831	0					
ANR	664909	Callee	gs_free_object		664831	0					
ANR	664910	Identifier	gs_free_object		664831	0					
ANR	664911	ArgumentList	mem		664831	1					
ANR	664912	Argument	mem		664831	0					
ANR	664913	Identifier	mem		664831	0					
ANR	664914	Argument	fullname		664831	1					
ANR	664915	Identifier	fullname		664831	0					
ANR	664916	Argument	"""MapFileUnlink(fullname)"""		664831	2					
ANR	664917	PrimaryExpression	"""MapFileUnlink(fullname)"""		664831	0					
ANR	664918	ReturnType	static void		664831	1					
ANR	664919	Identifier	MapFileUnlink		664831	2					
ANR	664920	ParameterList	"gs_memory_t * mem , const char * rootpath , const char * filename"		664831	3					
ANR	664921	Parameter	gs_memory_t * mem	590:14:19316:19331	664831	0	True				
ANR	664922	ParameterType	gs_memory_t *		664831	0					
ANR	664923	Identifier	mem		664831	1					
ANR	664924	Parameter	const char * rootpath	590:32:19334:19354	664831	1	True				
ANR	664925	ParameterType	const char *		664831	0					
ANR	664926	Identifier	rootpath		664831	1					
ANR	664927	Parameter	const char * filename	590:55:19357:19377	664831	2	True				
ANR	664928	ParameterType	const char *		664831	0					
ANR	664929	Identifier	filename		664831	1					
ANR	664930	CFGEntryNode	ENTRY		664831		True				
ANR	664931	CFGExitNode	EXIT		664831		True				
ANR	664932	Symbol	strlen		664831						
ANR	664933	Symbol	gs_alloc_bytes		664831						
ANR	664934	Symbol	filename		664831						
ANR	664935	Symbol	NULL		664831						
ANR	664936	Symbol	mem		664831						
ANR	664937	Symbol	totlen		664831						
ANR	664938	Symbol	gp_file_name_sizeof		664831						
ANR	664939	Symbol	fullname		664831						
ANR	664940	Symbol	rootpath		664831						
ANR	664941	Function	MapFileRename	614:0:19963:20911							
ANR	664942	FunctionDef	"MapFileRename (gs_memory_t * mem , const char * rootpath , const char * newfilename , const char * oldfilename)"		664941	0					
ANR	664943	CompoundStatement		616:0:20082:20911	664941	0					
ANR	664944	IdentifierDeclStatement	char * oldfullname = NULL ;	617:4:20088:20112	664941	0	True				
ANR	664945	IdentifierDecl	* oldfullname = NULL		664941	0					
ANR	664946	IdentifierDeclType	char *		664941	0					
ANR	664947	Identifier	oldfullname		664941	1					
ANR	664948	AssignmentExpression	* oldfullname = NULL		664941	2		=			
ANR	664949	Identifier	NULL		664941	0					
ANR	664950	Identifier	NULL		664941	1					
ANR	664951	IdentifierDeclStatement	char * newfullname = NULL ;	618:4:20118:20142	664941	1	True				
ANR	664952	IdentifierDecl	* newfullname = NULL		664941	0					
ANR	664953	IdentifierDeclType	char *		664941	0					
ANR	664954	Identifier	newfullname		664941	1					
ANR	664955	AssignmentExpression	* newfullname = NULL		664941	2		=			
ANR	664956	Identifier	NULL		664941	0					
ANR	664957	Identifier	NULL		664941	1					
ANR	664958	IdentifierDeclStatement	int ototlen = strlen ( rootpath ) + strlen ( oldfilename ) + 1 ;	619:4:20148:20204	664941	2	True				
ANR	664959	IdentifierDecl	ototlen = strlen ( rootpath ) + strlen ( oldfilename ) + 1		664941	0					
ANR	664960	IdentifierDeclType	int		664941	0					
ANR	664961	Identifier	ototlen		664941	1					
ANR	664962	AssignmentExpression	ototlen = strlen ( rootpath ) + strlen ( oldfilename ) + 1		664941	2		=			
ANR	664963	Identifier	ototlen		664941	0					
ANR	664964	AdditiveExpression	strlen ( rootpath ) + strlen ( oldfilename ) + 1		664941	1		+			
ANR	664965	CallExpression	strlen ( rootpath )		664941	0					
ANR	664966	Callee	strlen		664941	0					
ANR	664967	Identifier	strlen		664941	0					
ANR	664968	ArgumentList	rootpath		664941	1					
ANR	664969	Argument	rootpath		664941	0					
ANR	664970	Identifier	rootpath		664941	0					
ANR	664971	AdditiveExpression	strlen ( oldfilename ) + 1		664941	1		+			
ANR	664972	CallExpression	strlen ( oldfilename )		664941	0					
ANR	664973	Callee	strlen		664941	0					
ANR	664974	Identifier	strlen		664941	0					
ANR	664975	ArgumentList	oldfilename		664941	1					
ANR	664976	Argument	oldfilename		664941	0					
ANR	664977	Identifier	oldfilename		664941	0					
ANR	664978	PrimaryExpression	1		664941	1					
ANR	664979	IdentifierDeclStatement	int ntotlen = strlen ( rootpath ) + strlen ( newfilename ) + 1 ;	620:4:20210:20266	664941	3	True				
ANR	664980	IdentifierDecl	ntotlen = strlen ( rootpath ) + strlen ( newfilename ) + 1		664941	0					
ANR	664981	IdentifierDeclType	int		664941	0					
ANR	664982	Identifier	ntotlen		664941	1					
ANR	664983	AssignmentExpression	ntotlen = strlen ( rootpath ) + strlen ( newfilename ) + 1		664941	2		=			
ANR	664984	Identifier	ntotlen		664941	0					
ANR	664985	AdditiveExpression	strlen ( rootpath ) + strlen ( newfilename ) + 1		664941	1		+			
ANR	664986	CallExpression	strlen ( rootpath )		664941	0					
ANR	664987	Callee	strlen		664941	0					
ANR	664988	Identifier	strlen		664941	0					
ANR	664989	ArgumentList	rootpath		664941	1					
ANR	664990	Argument	rootpath		664941	0					
ANR	664991	Identifier	rootpath		664941	0					
ANR	664992	AdditiveExpression	strlen ( newfilename ) + 1		664941	1		+			
ANR	664993	CallExpression	strlen ( newfilename )		664941	0					
ANR	664994	Callee	strlen		664941	0					
ANR	664995	Identifier	strlen		664941	0					
ANR	664996	ArgumentList	newfilename		664941	1					
ANR	664997	Argument	newfilename		664941	0					
ANR	664998	Identifier	newfilename		664941	0					
ANR	664999	PrimaryExpression	1		664941	1					
ANR	665000	IfStatement	if ( ototlen >= gp_file_name_sizeof )		664941	4					
ANR	665001	Condition	ototlen >= gp_file_name_sizeof	622:8:20277:20306	664941	0	True				
ANR	665002	RelationalExpression	ototlen >= gp_file_name_sizeof		664941	0		>=			
ANR	665003	Identifier	ototlen		664941	0					
ANR	665004	Identifier	gp_file_name_sizeof		664941	1					
ANR	665005	ReturnStatement	return ;	623:8:20317:20323	664941	1	True				
ANR	665006	IfStatement	if ( ntotlen >= gp_file_name_sizeof )		664941	5					
ANR	665007	Condition	ntotlen >= gp_file_name_sizeof	624:8:20333:20362	664941	0	True				
ANR	665008	RelationalExpression	ntotlen >= gp_file_name_sizeof		664941	0		>=			
ANR	665009	Identifier	ntotlen		664941	0					
ANR	665010	Identifier	gp_file_name_sizeof		664941	1					
ANR	665011	ReturnStatement	return ;	625:8:20373:20379	664941	1	True				
ANR	665012	ExpressionStatement	"oldfullname = ( char * ) gs_alloc_bytes ( mem , ototlen , ""MapFileRename(oldfullname)"" )"	626:4:20385:20465	664941	6	True				
ANR	665013	AssignmentExpression	"oldfullname = ( char * ) gs_alloc_bytes ( mem , ototlen , ""MapFileRename(oldfullname)"" )"		664941	0		=			
ANR	665014	Identifier	oldfullname		664941	0					
ANR	665015	CastExpression	"( char * ) gs_alloc_bytes ( mem , ototlen , ""MapFileRename(oldfullname)"" )"		664941	1					
ANR	665016	CastTarget	char *		664941	0					
ANR	665017	CallExpression	"gs_alloc_bytes ( mem , ototlen , ""MapFileRename(oldfullname)"" )"		664941	1					
ANR	665018	Callee	gs_alloc_bytes		664941	0					
ANR	665019	Identifier	gs_alloc_bytes		664941	0					
ANR	665020	ArgumentList	mem		664941	1					
ANR	665021	Argument	mem		664941	0					
ANR	665022	Identifier	mem		664941	0					
ANR	665023	Argument	ototlen		664941	1					
ANR	665024	Identifier	ototlen		664941	0					
ANR	665025	Argument	"""MapFileRename(oldfullname)"""		664941	2					
ANR	665026	PrimaryExpression	"""MapFileRename(oldfullname)"""		664941	0					
ANR	665027	ExpressionStatement	"newfullname = ( char * ) gs_alloc_bytes ( mem , ntotlen , ""MapFileRename(newfullname)"" )"	627:4:20471:20551	664941	7	True				
ANR	665028	AssignmentExpression	"newfullname = ( char * ) gs_alloc_bytes ( mem , ntotlen , ""MapFileRename(newfullname)"" )"		664941	0		=			
ANR	665029	Identifier	newfullname		664941	0					
ANR	665030	CastExpression	"( char * ) gs_alloc_bytes ( mem , ntotlen , ""MapFileRename(newfullname)"" )"		664941	1					
ANR	665031	CastTarget	char *		664941	0					
ANR	665032	CallExpression	"gs_alloc_bytes ( mem , ntotlen , ""MapFileRename(newfullname)"" )"		664941	1					
ANR	665033	Callee	gs_alloc_bytes		664941	0					
ANR	665034	Identifier	gs_alloc_bytes		664941	0					
ANR	665035	ArgumentList	mem		664941	1					
ANR	665036	Argument	mem		664941	0					
ANR	665037	Identifier	mem		664941	0					
ANR	665038	Argument	ntotlen		664941	1					
ANR	665039	Identifier	ntotlen		664941	0					
ANR	665040	Argument	"""MapFileRename(newfullname)"""		664941	2					
ANR	665041	PrimaryExpression	"""MapFileRename(newfullname)"""		664941	0					
ANR	665042	IfStatement	if ( oldfullname && newfullname )		664941	8					
ANR	665043	Condition	oldfullname && newfullname	629:8:20562:20587	664941	0	True				
ANR	665044	AndExpression	oldfullname && newfullname		664941	0		&&			
ANR	665045	Identifier	oldfullname		664941	0					
ANR	665046	Identifier	newfullname		664941	1					
ANR	665047	CompoundStatement		14:36:507:507	664941	1					
ANR	665048	ExpressionStatement	"gs_sprintf ( oldfullname , ""%s%s"" , rootpath , oldfilename )"	630:8:20604:20658	664941	0	True				
ANR	665049	CallExpression	"gs_sprintf ( oldfullname , ""%s%s"" , rootpath , oldfilename )"		664941	0					
ANR	665050	Callee	gs_sprintf		664941	0					
ANR	665051	Identifier	gs_sprintf		664941	0					
ANR	665052	ArgumentList	oldfullname		664941	1					
ANR	665053	Argument	oldfullname		664941	0					
ANR	665054	Identifier	oldfullname		664941	0					
ANR	665055	Argument	"""%s%s"""		664941	1					
ANR	665056	PrimaryExpression	"""%s%s"""		664941	0					
ANR	665057	Argument	rootpath		664941	2					
ANR	665058	Identifier	rootpath		664941	0					
ANR	665059	Argument	oldfilename		664941	3					
ANR	665060	Identifier	oldfilename		664941	0					
ANR	665061	ExpressionStatement	"gs_sprintf ( newfullname , ""%s%s"" , rootpath , newfilename )"	631:8:20668:20722	664941	1	True				
ANR	665062	CallExpression	"gs_sprintf ( newfullname , ""%s%s"" , rootpath , newfilename )"		664941	0					
ANR	665063	Callee	gs_sprintf		664941	0					
ANR	665064	Identifier	gs_sprintf		664941	0					
ANR	665065	ArgumentList	newfullname		664941	1					
ANR	665066	Argument	newfullname		664941	0					
ANR	665067	Identifier	newfullname		664941	0					
ANR	665068	Argument	"""%s%s"""		664941	1					
ANR	665069	PrimaryExpression	"""%s%s"""		664941	0					
ANR	665070	Argument	rootpath		664941	2					
ANR	665071	Identifier	rootpath		664941	0					
ANR	665072	Argument	newfilename		664941	3					
ANR	665073	Identifier	newfilename		664941	0					
ANR	665074	ExpressionStatement	"rename ( oldfullname , newfullname )"	632:8:20732:20764	664941	2	True				
ANR	665075	CallExpression	"rename ( oldfullname , newfullname )"		664941	0					
ANR	665076	Callee	rename		664941	0					
ANR	665077	Identifier	rename		664941	0					
ANR	665078	ArgumentList	oldfullname		664941	1					
ANR	665079	Argument	oldfullname		664941	0					
ANR	665080	Identifier	oldfullname		664941	0					
ANR	665081	Argument	newfullname		664941	1					
ANR	665082	Identifier	newfullname		664941	0					
ANR	665083	ExpressionStatement	"gs_free_object ( mem , oldfullname , ""MapFileRename(oldfullname)"" )"	635:4:20777:20840	664941	9	True				
ANR	665084	CallExpression	"gs_free_object ( mem , oldfullname , ""MapFileRename(oldfullname)"" )"		664941	0					
ANR	665085	Callee	gs_free_object		664941	0					
ANR	665086	Identifier	gs_free_object		664941	0					
ANR	665087	ArgumentList	mem		664941	1					
ANR	665088	Argument	mem		664941	0					
ANR	665089	Identifier	mem		664941	0					
ANR	665090	Argument	oldfullname		664941	1					
ANR	665091	Identifier	oldfullname		664941	0					
ANR	665092	Argument	"""MapFileRename(oldfullname)"""		664941	2					
ANR	665093	PrimaryExpression	"""MapFileRename(oldfullname)"""		664941	0					
ANR	665094	ExpressionStatement	"gs_free_object ( mem , newfullname , ""MapFileRename(newfullname)"" )"	636:4:20846:20909	664941	10	True				
ANR	665095	CallExpression	"gs_free_object ( mem , newfullname , ""MapFileRename(newfullname)"" )"		664941	0					
ANR	665096	Callee	gs_free_object		664941	0					
ANR	665097	Identifier	gs_free_object		664941	0					
ANR	665098	ArgumentList	mem		664941	1					
ANR	665099	Argument	mem		664941	0					
ANR	665100	Identifier	mem		664941	0					
ANR	665101	Argument	newfullname		664941	1					
ANR	665102	Identifier	newfullname		664941	0					
ANR	665103	Argument	"""MapFileRename(newfullname)"""		664941	2					
ANR	665104	PrimaryExpression	"""MapFileRename(newfullname)"""		664941	0					
ANR	665105	ReturnType	static void		664941	1					
ANR	665106	Identifier	MapFileRename		664941	2					
ANR	665107	ParameterList	"gs_memory_t * mem , const char * rootpath , const char * newfilename , const char * oldfilename"		664941	3					
ANR	665108	Parameter	gs_memory_t * mem	615:14:19989:20004	664941	0	True				
ANR	665109	ParameterType	gs_memory_t *		664941	0					
ANR	665110	Identifier	mem		664941	1					
ANR	665111	Parameter	const char * rootpath	615:32:20007:20027	664941	1	True				
ANR	665112	ParameterType	const char *		664941	0					
ANR	665113	Identifier	rootpath		664941	1					
ANR	665114	Parameter	const char * newfilename	615:55:20030:20053	664941	2	True				
ANR	665115	ParameterType	const char *		664941	0					
ANR	665116	Identifier	newfilename		664941	1					
ANR	665117	Parameter	const char * oldfilename	615:81:20056:20079	664941	3	True				
ANR	665118	ParameterType	const char *		664941	0					
ANR	665119	Identifier	oldfilename		664941	1					
ANR	665120	CFGEntryNode	ENTRY		664941		True				
ANR	665121	CFGExitNode	EXIT		664941		True				
ANR	665122	Symbol	strlen		664941						
ANR	665123	Symbol	gs_alloc_bytes		664941						
ANR	665124	Symbol	NULL		664941						
ANR	665125	Symbol	oldfullname		664941						
ANR	665126	Symbol	ototlen		664941						
ANR	665127	Symbol	mem		664941						
ANR	665128	Symbol	newfilename		664941						
ANR	665129	Symbol	newfullname		664941						
ANR	665130	Symbol	ntotlen		664941						
ANR	665131	Symbol	gp_file_name_sizeof		664941						
ANR	665132	Symbol	oldfilename		664941						
ANR	665133	Symbol	rootpath		664941						
ANR	665134	Function	MapToFile	648:0:21295:22132							
ANR	665135	FunctionDef	"MapToFile (gs_memory_t * mem , const char * rootpath , const char * name)"		665134	0					
ANR	665136	CompoundStatement		650:0:21374:22132	665134	0					
ANR	665137	IdentifierDeclStatement	FILE * mapfile ;	651:4:21380:21394	665134	0	True				
ANR	665138	IdentifierDecl	* mapfile		665134	0					
ANR	665139	IdentifierDeclType	FILE *		665134	0					
ANR	665140	Identifier	mapfile		665134	1					
ANR	665141	IdentifierDeclStatement	int d = - 1 ;	652:4:21400:21410	665134	1	True				
ANR	665142	IdentifierDecl	d = - 1		665134	0					
ANR	665143	IdentifierDeclType	int		665134	0					
ANR	665144	Identifier	d		665134	1					
ANR	665145	AssignmentExpression	d = - 1		665134	2		=			
ANR	665146	Identifier	d		665134	0					
ANR	665147	UnaryOperationExpression	- 1		665134	1					
ANR	665148	UnaryOperator	-		665134	0					
ANR	665149	PrimaryExpression	1		665134	1					
ANR	665150	IdentifierDeclStatement	char * filename = NULL ;	653:4:21416:21437	665134	2	True				
ANR	665151	IdentifierDecl	* filename = NULL		665134	0					
ANR	665152	IdentifierDeclType	char *		665134	0					
ANR	665153	Identifier	filename		665134	1					
ANR	665154	AssignmentExpression	* filename = NULL		665134	2		=			
ANR	665155	Identifier	NULL		665134	0					
ANR	665156	Identifier	NULL		665134	1					
ANR	665157	IdentifierDeclStatement	int file_version ;	654:4:21443:21459	665134	3	True				
ANR	665158	IdentifierDecl	file_version		665134	0					
ANR	665159	IdentifierDeclType	int		665134	0					
ANR	665160	Identifier	file_version		665134	1					
ANR	665161	ExpressionStatement	"mapfile = MapFileOpen ( mem , rootpath , MAP_FILE_NAME , ""r"" )"	656:4:21466:21522	665134	4	True				
ANR	665162	AssignmentExpression	"mapfile = MapFileOpen ( mem , rootpath , MAP_FILE_NAME , ""r"" )"		665134	0		=			
ANR	665163	Identifier	mapfile		665134	0					
ANR	665164	CallExpression	"MapFileOpen ( mem , rootpath , MAP_FILE_NAME , ""r"" )"		665134	1					
ANR	665165	Callee	MapFileOpen		665134	0					
ANR	665166	Identifier	MapFileOpen		665134	0					
ANR	665167	ArgumentList	mem		665134	1					
ANR	665168	Argument	mem		665134	0					
ANR	665169	Identifier	mem		665134	0					
ANR	665170	Argument	rootpath		665134	1					
ANR	665171	Identifier	rootpath		665134	0					
ANR	665172	Argument	MAP_FILE_NAME		665134	2					
ANR	665173	Identifier	MAP_FILE_NAME		665134	0					
ANR	665174	Argument	"""r"""		665134	3					
ANR	665175	PrimaryExpression	"""r"""		665134	0					
ANR	665176	IfStatement	if ( mapfile == NULL )		665134	5					
ANR	665177	Condition	mapfile == NULL	657:8:21532:21546	665134	0	True				
ANR	665178	EqualityExpression	mapfile == NULL		665134	0		==			
ANR	665179	Identifier	mapfile		665134	0					
ANR	665180	Identifier	NULL		665134	1					
ANR	665181	ReturnStatement	return - 1 ;	658:8:21557:21566	665134	1	True				
ANR	665182	UnaryOperationExpression	- 1		665134	0					
ANR	665183	UnaryOperator	-		665134	0					
ANR	665184	PrimaryExpression	1		665134	1					
ANR	665185	IfStatement	"if ( MapFileReadVersion ( mapfile , & file_version ) && file_version == MAP_FILE_VERSION )"		665134	6					
ANR	665186	Condition	"MapFileReadVersion ( mapfile , & file_version ) && file_version == MAP_FILE_VERSION"	662:8:21627:21712	665134	0	True				
ANR	665187	AndExpression	"MapFileReadVersion ( mapfile , & file_version ) && file_version == MAP_FILE_VERSION"		665134	0		&&			
ANR	665188	CallExpression	"MapFileReadVersion ( mapfile , & file_version )"		665134	0					
ANR	665189	Callee	MapFileReadVersion		665134	0					
ANR	665190	Identifier	MapFileReadVersion		665134	0					
ANR	665191	ArgumentList	mapfile		665134	1					
ANR	665192	Argument	mapfile		665134	0					
ANR	665193	Identifier	mapfile		665134	0					
ANR	665194	Argument	& file_version		665134	1					
ANR	665195	UnaryOperationExpression	& file_version		665134	0					
ANR	665196	UnaryOperator	&		665134	0					
ANR	665197	Identifier	file_version		665134	1					
ANR	665198	EqualityExpression	file_version == MAP_FILE_VERSION		665134	1		==			
ANR	665199	Identifier	file_version		665134	0					
ANR	665200	Identifier	MAP_FILE_VERSION		665134	1					
ANR	665201	CompoundStatement		14:45:340:340	665134	1					
ANR	665202	ExpressionStatement	"filename = ( char * ) gs_alloc_bytes ( mem , gp_file_name_sizeof , ""MapToFile(filename)"" )"	665:8:21726:21808	665134	0	True				
ANR	665203	AssignmentExpression	"filename = ( char * ) gs_alloc_bytes ( mem , gp_file_name_sizeof , ""MapToFile(filename)"" )"		665134	0		=			
ANR	665204	Identifier	filename		665134	0					
ANR	665205	CastExpression	"( char * ) gs_alloc_bytes ( mem , gp_file_name_sizeof , ""MapToFile(filename)"" )"		665134	1					
ANR	665206	CastTarget	char *		665134	0					
ANR	665207	CallExpression	"gs_alloc_bytes ( mem , gp_file_name_sizeof , ""MapToFile(filename)"" )"		665134	1					
ANR	665208	Callee	gs_alloc_bytes		665134	0					
ANR	665209	Identifier	gs_alloc_bytes		665134	0					
ANR	665210	ArgumentList	mem		665134	1					
ANR	665211	Argument	mem		665134	0					
ANR	665212	Identifier	mem		665134	0					
ANR	665213	Argument	gp_file_name_sizeof		665134	1					
ANR	665214	Identifier	gp_file_name_sizeof		665134	0					
ANR	665215	Argument	"""MapToFile(filename)"""		665134	2					
ANR	665216	PrimaryExpression	"""MapToFile(filename)"""		665134	0					
ANR	665217	WhileStatement	"while ( filename && MapFileRead ( mapfile , filename , & d ) )"		665134	1					
ANR	665218	Condition	"filename && MapFileRead ( mapfile , filename , & d )"	668:15:21881:21926	665134	0	True				
ANR	665219	AndExpression	"filename && MapFileRead ( mapfile , filename , & d )"		665134	0		&&			
ANR	665220	Identifier	filename		665134	0					
ANR	665221	CallExpression	"MapFileRead ( mapfile , filename , & d )"		665134	1					
ANR	665222	Callee	MapFileRead		665134	0					
ANR	665223	Identifier	MapFileRead		665134	0					
ANR	665224	ArgumentList	mapfile		665134	1					
ANR	665225	Argument	mapfile		665134	0					
ANR	665226	Identifier	mapfile		665134	0					
ANR	665227	Argument	filename		665134	1					
ANR	665228	Identifier	filename		665134	0					
ANR	665229	Argument	& d		665134	2					
ANR	665230	UnaryOperationExpression	& d		665134	0					
ANR	665231	UnaryOperator	&		665134	0					
ANR	665232	Identifier	d		665134	1					
ANR	665233	CompoundStatement		19:63:554:554	665134	1					
ANR	665234	IfStatement	"if ( strcmp ( filename , name ) == 0 )"		665134	0					
ANR	665235	Condition	"strcmp ( filename , name ) == 0"	669:16:21947:21973	665134	0	True				
ANR	665236	EqualityExpression	"strcmp ( filename , name ) == 0"		665134	0		==			
ANR	665237	CallExpression	"strcmp ( filename , name )"		665134	0					
ANR	665238	Callee	strcmp		665134	0					
ANR	665239	Identifier	strcmp		665134	0					
ANR	665240	ArgumentList	filename		665134	1					
ANR	665241	Argument	filename		665134	0					
ANR	665242	Identifier	filename		665134	0					
ANR	665243	Argument	name		665134	1					
ANR	665244	Identifier	name		665134	0					
ANR	665245	PrimaryExpression	0		665134	1					
ANR	665246	BreakStatement	break ;	670:16:21992:21997	665134	1	True				
ANR	665247	ExpressionStatement	d = - 1	671:12:22011:22017	665134	1	True				
ANR	665248	AssignmentExpression	d = - 1		665134	0		=			
ANR	665249	Identifier	d		665134	0					
ANR	665250	UnaryOperationExpression	- 1		665134	1					
ANR	665251	UnaryOperator	-		665134	0					
ANR	665252	PrimaryExpression	1		665134	1					
ANR	665253	ExpressionStatement	"gs_free_object ( mem , filename , ""MapToFile(filename)"" )"	673:8:22037:22089	665134	2	True				
ANR	665254	CallExpression	"gs_free_object ( mem , filename , ""MapToFile(filename)"" )"		665134	0					
ANR	665255	Callee	gs_free_object		665134	0					
ANR	665256	Identifier	gs_free_object		665134	0					
ANR	665257	ArgumentList	mem		665134	1					
ANR	665258	Argument	mem		665134	0					
ANR	665259	Identifier	mem		665134	0					
ANR	665260	Argument	filename		665134	1					
ANR	665261	Identifier	filename		665134	0					
ANR	665262	Argument	"""MapToFile(filename)"""		665134	2					
ANR	665263	PrimaryExpression	"""MapToFile(filename)"""		665134	0					
ANR	665264	ExpressionStatement	fclose ( mapfile )	675:4:22101:22116	665134	7	True				
ANR	665265	CallExpression	fclose ( mapfile )		665134	0					
ANR	665266	Callee	fclose		665134	0					
ANR	665267	Identifier	fclose		665134	0					
ANR	665268	ArgumentList	mapfile		665134	1					
ANR	665269	Argument	mapfile		665134	0					
ANR	665270	Identifier	mapfile		665134	0					
ANR	665271	ReturnStatement	return d ;	676:4:22122:22130	665134	8	True				
ANR	665272	Identifier	d		665134	0					
ANR	665273	ReturnType	static int		665134	1					
ANR	665274	Identifier	MapToFile		665134	2					
ANR	665275	ParameterList	"gs_memory_t * mem , const char * rootpath , const char * name"		665134	3					
ANR	665276	Parameter	gs_memory_t * mem	649:10:21316:21331	665134	0	True				
ANR	665277	ParameterType	gs_memory_t *		665134	0					
ANR	665278	Identifier	mem		665134	1					
ANR	665279	Parameter	const char * rootpath	649:28:21334:21353	665134	1	True				
ANR	665280	ParameterType	const char *		665134	0					
ANR	665281	Identifier	rootpath		665134	1					
ANR	665282	Parameter	const char * name	649:50:21356:21371	665134	2	True				
ANR	665283	ParameterType	const char *		665134	0					
ANR	665284	Identifier	name		665134	1					
ANR	665285	CFGEntryNode	ENTRY		665134		True				
ANR	665286	CFGExitNode	EXIT		665134		True				
ANR	665287	Symbol	file_version		665134						
ANR	665288	Symbol	strcmp		665134						
ANR	665289	Symbol	gs_alloc_bytes		665134						
ANR	665290	Symbol	NULL		665134						
ANR	665291	Symbol	d		665134						
ANR	665292	Symbol	MapFileReadVersion		665134						
ANR	665293	Symbol	MAP_FILE_VERSION		665134						
ANR	665294	Symbol	gp_file_name_sizeof		665134						
ANR	665295	Symbol	& d		665134						
ANR	665296	Symbol	MAP_FILE_NAME		665134						
ANR	665297	Symbol	MapFileOpen		665134						
ANR	665298	Symbol	& file_version		665134						
ANR	665299	Symbol	filename		665134						
ANR	665300	Symbol	mem		665134						
ANR	665301	Symbol	name		665134						
ANR	665302	Symbol	rootpath		665134						
ANR	665303	Symbol	MapFileRead		665134						
ANR	665304	Symbol	mapfile		665134						
ANR	665305	Function	map_file_enum_init	689:0:22591:24352							
ANR	665306	FunctionDef	"map_file_enum_init (gs_memory_t * mem , const char * root_name , const char * search_pattern , uint search_pattern_len)"		665305	0					
ANR	665307	CompoundStatement		691:0:22720:24352	665305	0					
ANR	665308	IdentifierDeclStatement	int file_version ;	692:4:22726:22742	665305	0	True				
ANR	665309	IdentifierDecl	file_version		665305	0					
ANR	665310	IdentifierDeclType	int		665305	0					
ANR	665311	Identifier	file_version		665305	1					
ANR	665312	IdentifierDeclStatement	"map_file_enum * mapfileenum = gs_alloc_struct ( mem , map_file_enum , & st_map_file_enum , ""diskn:enum_init(file_enum)"" ) ;"	693:4:22748:22918	665305	1	True				
ANR	665313	IdentifierDecl	"* mapfileenum = gs_alloc_struct ( mem , map_file_enum , & st_map_file_enum , ""diskn:enum_init(file_enum)"" )"		665305	0					
ANR	665314	IdentifierDeclType	map_file_enum *		665305	0					
ANR	665315	Identifier	mapfileenum		665305	1					
ANR	665316	AssignmentExpression	"* mapfileenum = gs_alloc_struct ( mem , map_file_enum , & st_map_file_enum , ""diskn:enum_init(file_enum)"" )"		665305	2		=			
ANR	665317	Identifier	mapfileenum		665305	0					
ANR	665318	CallExpression	"gs_alloc_struct ( mem , map_file_enum , & st_map_file_enum , ""diskn:enum_init(file_enum)"" )"		665305	1					
ANR	665319	Callee	gs_alloc_struct		665305	0					
ANR	665320	Identifier	gs_alloc_struct		665305	0					
ANR	665321	ArgumentList	mem		665305	1					
ANR	665322	Argument	mem		665305	0					
ANR	665323	Identifier	mem		665305	0					
ANR	665324	Argument	map_file_enum		665305	1					
ANR	665325	Identifier	map_file_enum		665305	0					
ANR	665326	Argument	& st_map_file_enum		665305	2					
ANR	665327	UnaryOperationExpression	& st_map_file_enum		665305	0					
ANR	665328	UnaryOperator	&		665305	0					
ANR	665329	Identifier	st_map_file_enum		665305	1					
ANR	665330	Argument	"""diskn:enum_init(file_enum)"""		665305	3					
ANR	665331	PrimaryExpression	"""diskn:enum_init(file_enum)"""		665305	0					
ANR	665332	IfStatement	if ( mapfileenum == NULL )		665305	2					
ANR	665333	Condition	mapfileenum == NULL	696:8:22929:22947	665305	0	True				
ANR	665334	EqualityExpression	mapfileenum == NULL		665305	0		==			
ANR	665335	Identifier	mapfileenum		665305	0					
ANR	665336	Identifier	NULL		665305	1					
ANR	665337	ReturnStatement	return NULL ;	697:8:22958:22969	665305	1	True				
ANR	665338	Identifier	NULL		665305	0					
ANR	665339	ExpressionStatement	"memset ( mapfileenum , 0 , sizeof ( map_file_enum ) )"	698:4:22975:23020	665305	3	True				
ANR	665340	CallExpression	"memset ( mapfileenum , 0 , sizeof ( map_file_enum ) )"		665305	0					
ANR	665341	Callee	memset		665305	0					
ANR	665342	Identifier	memset		665305	0					
ANR	665343	ArgumentList	mapfileenum		665305	1					
ANR	665344	Argument	mapfileenum		665305	0					
ANR	665345	Identifier	mapfileenum		665305	0					
ANR	665346	Argument	0		665305	1					
ANR	665347	PrimaryExpression	0		665305	0					
ANR	665348	Argument	sizeof ( map_file_enum )		665305	2					
ANR	665349	SizeofExpression	sizeof ( map_file_enum )		665305	0					
ANR	665350	Sizeof	sizeof		665305	0					
ANR	665351	SizeofOperand	map_file_enum		665305	1					
ANR	665352	ExpressionStatement	mapfileenum -> memory = mem	699:4:23026:23051	665305	4	True				
ANR	665353	AssignmentExpression	mapfileenum -> memory = mem		665305	0		=			
ANR	665354	PtrMemberAccess	mapfileenum -> memory		665305	0					
ANR	665355	Identifier	mapfileenum		665305	0					
ANR	665356	Identifier	memory		665305	1					
ANR	665357	Identifier	mem		665305	1					
ANR	665358	IfStatement	if ( search_pattern )		665305	5					
ANR	665359	Condition	search_pattern	701:8:23062:23075	665305	0	True				
ANR	665360	Identifier	search_pattern		665305	0					
ANR	665361	CompoundStatement		11:24:357:357	665305	1					
ANR	665362	ExpressionStatement	"mapfileenum -> pattern = ( char * ) gs_alloc_bytes ( mem , search_pattern_len + 1 , ""diskn:enum_init(pattern)"" )"	702:8:23088:23246	665305	0	True				
ANR	665363	AssignmentExpression	"mapfileenum -> pattern = ( char * ) gs_alloc_bytes ( mem , search_pattern_len + 1 , ""diskn:enum_init(pattern)"" )"		665305	0		=			
ANR	665364	PtrMemberAccess	mapfileenum -> pattern		665305	0					
ANR	665365	Identifier	mapfileenum		665305	0					
ANR	665366	Identifier	pattern		665305	1					
ANR	665367	CastExpression	"( char * ) gs_alloc_bytes ( mem , search_pattern_len + 1 , ""diskn:enum_init(pattern)"" )"		665305	1					
ANR	665368	CastTarget	char *		665305	0					
ANR	665369	CallExpression	"gs_alloc_bytes ( mem , search_pattern_len + 1 , ""diskn:enum_init(pattern)"" )"		665305	1					
ANR	665370	Callee	gs_alloc_bytes		665305	0					
ANR	665371	Identifier	gs_alloc_bytes		665305	0					
ANR	665372	ArgumentList	mem		665305	1					
ANR	665373	Argument	mem		665305	0					
ANR	665374	Identifier	mem		665305	0					
ANR	665375	Argument	search_pattern_len + 1		665305	1					
ANR	665376	AdditiveExpression	search_pattern_len + 1		665305	0		+			
ANR	665377	Identifier	search_pattern_len		665305	0					
ANR	665378	PrimaryExpression	1		665305	1					
ANR	665379	Argument	"""diskn:enum_init(pattern)"""		665305	2					
ANR	665380	PrimaryExpression	"""diskn:enum_init(pattern)"""		665305	0					
ANR	665381	IfStatement	if ( mapfileenum -> pattern == NULL )		665305	1					
ANR	665382	Condition	mapfileenum -> pattern == NULL	704:12:23260:23287	665305	0	True				
ANR	665383	EqualityExpression	mapfileenum -> pattern == NULL		665305	0		==			
ANR	665384	PtrMemberAccess	mapfileenum -> pattern		665305	0					
ANR	665385	Identifier	mapfileenum		665305	0					
ANR	665386	Identifier	pattern		665305	1					
ANR	665387	Identifier	NULL		665305	1					
ANR	665388	CompoundStatement		14:42:569:569	665305	1					
ANR	665389	ExpressionStatement	map_file_enum_close ( ( file_enum * ) mapfileenum )	705:12:23304:23350	665305	0	True				
ANR	665390	CallExpression	map_file_enum_close ( ( file_enum * ) mapfileenum )		665305	0					
ANR	665391	Callee	map_file_enum_close		665305	0					
ANR	665392	Identifier	map_file_enum_close		665305	0					
ANR	665393	ArgumentList	( file_enum * ) mapfileenum		665305	1					
ANR	665394	Argument	( file_enum * ) mapfileenum		665305	0					
ANR	665395	CastExpression	( file_enum * ) mapfileenum		665305	0					
ANR	665396	CastTarget	file_enum *		665305	0					
ANR	665397	Identifier	mapfileenum		665305	1					
ANR	665398	ReturnStatement	return NULL ;	706:12:23364:23375	665305	1	True				
ANR	665399	Identifier	NULL		665305	0					
ANR	665400	ExpressionStatement	"memcpy ( mapfileenum -> pattern , search_pattern , search_pattern_len )"	708:8:23395:23459	665305	2	True				
ANR	665401	CallExpression	"memcpy ( mapfileenum -> pattern , search_pattern , search_pattern_len )"		665305	0					
ANR	665402	Callee	memcpy		665305	0					
ANR	665403	Identifier	memcpy		665305	0					
ANR	665404	ArgumentList	mapfileenum -> pattern		665305	1					
ANR	665405	Argument	mapfileenum -> pattern		665305	0					
ANR	665406	PtrMemberAccess	mapfileenum -> pattern		665305	0					
ANR	665407	Identifier	mapfileenum		665305	0					
ANR	665408	Identifier	pattern		665305	1					
ANR	665409	Argument	search_pattern		665305	1					
ANR	665410	Identifier	search_pattern		665305	0					
ANR	665411	Argument	search_pattern_len		665305	2					
ANR	665412	Identifier	search_pattern_len		665305	0					
ANR	665413	ExpressionStatement	mapfileenum -> pattern [ search_pattern_len ] = '\\0'	710:8:23500:23547	665305	3	True				
ANR	665414	AssignmentExpression	mapfileenum -> pattern [ search_pattern_len ] = '\\0'		665305	0		=			
ANR	665415	ArrayIndexing	mapfileenum -> pattern [ search_pattern_len ]		665305	0					
ANR	665416	PtrMemberAccess	mapfileenum -> pattern		665305	0					
ANR	665417	Identifier	mapfileenum		665305	0					
ANR	665418	Identifier	pattern		665305	1					
ANR	665419	Identifier	search_pattern_len		665305	1					
ANR	665420	PrimaryExpression	'\\0'		665305	1					
ANR	665421	ExpressionStatement	"mapfileenum -> root = ( char * ) gs_alloc_bytes ( mem , strlen ( root_name ) + 1 , ""diskn:enum_init(root)"" )"	713:4:23560:23703	665305	6	True				
ANR	665422	AssignmentExpression	"mapfileenum -> root = ( char * ) gs_alloc_bytes ( mem , strlen ( root_name ) + 1 , ""diskn:enum_init(root)"" )"		665305	0		=			
ANR	665423	PtrMemberAccess	mapfileenum -> root		665305	0					
ANR	665424	Identifier	mapfileenum		665305	0					
ANR	665425	Identifier	root		665305	1					
ANR	665426	CastExpression	"( char * ) gs_alloc_bytes ( mem , strlen ( root_name ) + 1 , ""diskn:enum_init(root)"" )"		665305	1					
ANR	665427	CastTarget	char *		665305	0					
ANR	665428	CallExpression	"gs_alloc_bytes ( mem , strlen ( root_name ) + 1 , ""diskn:enum_init(root)"" )"		665305	1					
ANR	665429	Callee	gs_alloc_bytes		665305	0					
ANR	665430	Identifier	gs_alloc_bytes		665305	0					
ANR	665431	ArgumentList	mem		665305	1					
ANR	665432	Argument	mem		665305	0					
ANR	665433	Identifier	mem		665305	0					
ANR	665434	Argument	strlen ( root_name ) + 1		665305	1					
ANR	665435	AdditiveExpression	strlen ( root_name ) + 1		665305	0		+			
ANR	665436	CallExpression	strlen ( root_name )		665305	0					
ANR	665437	Callee	strlen		665305	0					
ANR	665438	Identifier	strlen		665305	0					
ANR	665439	ArgumentList	root_name		665305	1					
ANR	665440	Argument	root_name		665305	0					
ANR	665441	Identifier	root_name		665305	0					
ANR	665442	PrimaryExpression	1		665305	1					
ANR	665443	Argument	"""diskn:enum_init(root)"""		665305	2					
ANR	665444	PrimaryExpression	"""diskn:enum_init(root)"""		665305	0					
ANR	665445	IfStatement	if ( mapfileenum -> root == NULL )		665305	7					
ANR	665446	Condition	mapfileenum -> root == NULL	715:8:23713:23737	665305	0	True				
ANR	665447	EqualityExpression	mapfileenum -> root == NULL		665305	0		==			
ANR	665448	PtrMemberAccess	mapfileenum -> root		665305	0					
ANR	665449	Identifier	mapfileenum		665305	0					
ANR	665450	Identifier	root		665305	1					
ANR	665451	Identifier	NULL		665305	1					
ANR	665452	CompoundStatement		25:35:1019:1019	665305	1					
ANR	665453	ExpressionStatement	map_file_enum_close ( ( file_enum * ) mapfileenum )	716:8:23750:23796	665305	0	True				
ANR	665454	CallExpression	map_file_enum_close ( ( file_enum * ) mapfileenum )		665305	0					
ANR	665455	Callee	map_file_enum_close		665305	0					
ANR	665456	Identifier	map_file_enum_close		665305	0					
ANR	665457	ArgumentList	( file_enum * ) mapfileenum		665305	1					
ANR	665458	Argument	( file_enum * ) mapfileenum		665305	0					
ANR	665459	CastExpression	( file_enum * ) mapfileenum		665305	0					
ANR	665460	CastTarget	file_enum *		665305	0					
ANR	665461	Identifier	mapfileenum		665305	1					
ANR	665462	ReturnStatement	return NULL ;	717:8:23806:23817	665305	1	True				
ANR	665463	Identifier	NULL		665305	0					
ANR	665464	IfStatement	if ( strlen ( root_name ) >= gp_file_name_sizeof )		665305	8					
ANR	665465	Condition	strlen ( root_name ) >= gp_file_name_sizeof	720:8:23834:23873	665305	0	True				
ANR	665466	RelationalExpression	strlen ( root_name ) >= gp_file_name_sizeof		665305	0		>=			
ANR	665467	CallExpression	strlen ( root_name )		665305	0					
ANR	665468	Callee	strlen		665305	0					
ANR	665469	Identifier	strlen		665305	0					
ANR	665470	ArgumentList	root_name		665305	1					
ANR	665471	Argument	root_name		665305	0					
ANR	665472	Identifier	root_name		665305	0					
ANR	665473	Identifier	gp_file_name_sizeof		665305	1					
ANR	665474	ReturnStatement	return NULL ;	721:8:23884:23895	665305	1	True				
ANR	665475	Identifier	NULL		665305	0					
ANR	665476	ExpressionStatement	"strcpy ( mapfileenum -> root , root_name )"	722:4:23901:23937	665305	9	True				
ANR	665477	CallExpression	"strcpy ( mapfileenum -> root , root_name )"		665305	0					
ANR	665478	Callee	strcpy		665305	0					
ANR	665479	Identifier	strcpy		665305	0					
ANR	665480	ArgumentList	mapfileenum -> root		665305	1					
ANR	665481	Argument	mapfileenum -> root		665305	0					
ANR	665482	PtrMemberAccess	mapfileenum -> root		665305	0					
ANR	665483	Identifier	mapfileenum		665305	0					
ANR	665484	Identifier	root		665305	1					
ANR	665485	Argument	root_name		665305	1					
ANR	665486	Identifier	root_name		665305	0					
ANR	665487	ExpressionStatement	"mapfileenum -> stream = MapFileOpen ( mem , root_name , MAP_FILE_NAME , ""r"" )"	723:4:23943:24012	665305	10	True				
ANR	665488	AssignmentExpression	"mapfileenum -> stream = MapFileOpen ( mem , root_name , MAP_FILE_NAME , ""r"" )"		665305	0		=			
ANR	665489	PtrMemberAccess	mapfileenum -> stream		665305	0					
ANR	665490	Identifier	mapfileenum		665305	0					
ANR	665491	Identifier	stream		665305	1					
ANR	665492	CallExpression	"MapFileOpen ( mem , root_name , MAP_FILE_NAME , ""r"" )"		665305	1					
ANR	665493	Callee	MapFileOpen		665305	0					
ANR	665494	Identifier	MapFileOpen		665305	0					
ANR	665495	ArgumentList	mem		665305	1					
ANR	665496	Argument	mem		665305	0					
ANR	665497	Identifier	mem		665305	0					
ANR	665498	Argument	root_name		665305	1					
ANR	665499	Identifier	root_name		665305	0					
ANR	665500	Argument	MAP_FILE_NAME		665305	2					
ANR	665501	Identifier	MAP_FILE_NAME		665305	0					
ANR	665502	Argument	"""r"""		665305	3					
ANR	665503	PrimaryExpression	"""r"""		665305	0					
ANR	665504	IfStatement	"if ( mapfileenum -> stream != NULL && ( ! MapFileReadVersion ( mapfileenum -> stream , & file_version ) || file_version != MAP_FILE_VERSION ) )"		665305	11					
ANR	665505	Condition	"mapfileenum -> stream != NULL && ( ! MapFileReadVersion ( mapfileenum -> stream , & file_version ) || file_version != MAP_FILE_VERSION )"	726:8:24071:24214	665305	0	True				
ANR	665506	AndExpression	"mapfileenum -> stream != NULL && ( ! MapFileReadVersion ( mapfileenum -> stream , & file_version ) || file_version != MAP_FILE_VERSION )"		665305	0		&&			
ANR	665507	EqualityExpression	mapfileenum -> stream != NULL		665305	0		!=			
ANR	665508	PtrMemberAccess	mapfileenum -> stream		665305	0					
ANR	665509	Identifier	mapfileenum		665305	0					
ANR	665510	Identifier	stream		665305	1					
ANR	665511	Identifier	NULL		665305	1					
ANR	665512	OrExpression	"! MapFileReadVersion ( mapfileenum -> stream , & file_version ) || file_version != MAP_FILE_VERSION"		665305	1		||			
ANR	665513	UnaryOperationExpression	"! MapFileReadVersion ( mapfileenum -> stream , & file_version )"		665305	0					
ANR	665514	UnaryOperator	!		665305	0					
ANR	665515	CallExpression	"MapFileReadVersion ( mapfileenum -> stream , & file_version )"		665305	1					
ANR	665516	Callee	MapFileReadVersion		665305	0					
ANR	665517	Identifier	MapFileReadVersion		665305	0					
ANR	665518	ArgumentList	mapfileenum -> stream		665305	1					
ANR	665519	Argument	mapfileenum -> stream		665305	0					
ANR	665520	PtrMemberAccess	mapfileenum -> stream		665305	0					
ANR	665521	Identifier	mapfileenum		665305	0					
ANR	665522	Identifier	stream		665305	1					
ANR	665523	Argument	& file_version		665305	1					
ANR	665524	UnaryOperationExpression	& file_version		665305	0					
ANR	665525	UnaryOperator	&		665305	0					
ANR	665526	Identifier	file_version		665305	1					
ANR	665527	EqualityExpression	file_version != MAP_FILE_VERSION		665305	1		!=			
ANR	665528	Identifier	file_version		665305	0					
ANR	665529	Identifier	MAP_FILE_VERSION		665305	1					
ANR	665530	CompoundStatement		38:50:1496:1496	665305	1					
ANR	665531	ExpressionStatement	fclose ( mapfileenum -> stream )	729:8:24227:24254	665305	0	True				
ANR	665532	CallExpression	fclose ( mapfileenum -> stream )		665305	0					
ANR	665533	Callee	fclose		665305	0					
ANR	665534	Identifier	fclose		665305	0					
ANR	665535	ArgumentList	mapfileenum -> stream		665305	1					
ANR	665536	Argument	mapfileenum -> stream		665305	0					
ANR	665537	PtrMemberAccess	mapfileenum -> stream		665305	0					
ANR	665538	Identifier	mapfileenum		665305	0					
ANR	665539	Identifier	stream		665305	1					
ANR	665540	ExpressionStatement	mapfileenum -> stream = NULL	730:8:24293:24319	665305	1	True				
ANR	665541	AssignmentExpression	mapfileenum -> stream = NULL		665305	0		=			
ANR	665542	PtrMemberAccess	mapfileenum -> stream		665305	0					
ANR	665543	Identifier	mapfileenum		665305	0					
ANR	665544	Identifier	stream		665305	1					
ANR	665545	Identifier	NULL		665305	1					
ANR	665546	ReturnStatement	return mapfileenum ;	733:4:24332:24350	665305	12	True				
ANR	665547	Identifier	mapfileenum		665305	0					
ANR	665548	ReturnType	static void *		665305	1					
ANR	665549	Identifier	map_file_enum_init		665305	2					
ANR	665550	ParameterList	"gs_memory_t * mem , const char * root_name , const char * search_pattern , uint search_pattern_len"		665305	3					
ANR	665551	Parameter	gs_memory_t * mem	690:19:22624:22639	665305	0	True				
ANR	665552	ParameterType	gs_memory_t *		665305	0					
ANR	665553	Identifier	mem		665305	1					
ANR	665554	Parameter	const char * root_name	690:37:22642:22663	665305	1	True				
ANR	665555	ParameterType	const char *		665305	0					
ANR	665556	Identifier	root_name		665305	1					
ANR	665557	Parameter	const char * search_pattern	690:61:22666:22692	665305	2	True				
ANR	665558	ParameterType	const char *		665305	0					
ANR	665559	Identifier	search_pattern		665305	1					
ANR	665560	Parameter	uint search_pattern_len	690:90:22695:22717	665305	3	True				
ANR	665561	ParameterType	uint		665305	0					
ANR	665562	Identifier	search_pattern_len		665305	1					
ANR	665563	CFGEntryNode	ENTRY		665305		True				
ANR	665564	CFGExitNode	EXIT		665305		True				
ANR	665565	Symbol	file_version		665305						
ANR	665566	Symbol	mapfileenum -> memory		665305						
ANR	665567	Symbol	MapFileReadVersion		665305						
ANR	665568	Symbol	MAP_FILE_VERSION		665305						
ANR	665569	Symbol	root_name		665305						
ANR	665570	Symbol	gs_alloc_struct		665305						
ANR	665571	Symbol	MAP_FILE_NAME		665305						
ANR	665572	Symbol	mapfileenum		665305						
ANR	665573	Symbol	& st_map_file_enum		665305						
ANR	665574	Symbol	MapFileOpen		665305						
ANR	665575	Symbol	strlen		665305						
ANR	665576	Symbol	mem		665305						
ANR	665577	Symbol	mapfileenum -> stream		665305						
ANR	665578	Symbol	* search_pattern_len		665305						
ANR	665579	Symbol	mapfileenum -> pattern		665305						
ANR	665580	Symbol	mapfileenum -> root		665305						
ANR	665581	Symbol	gs_alloc_bytes		665305						
ANR	665582	Symbol	NULL		665305						
ANR	665583	Symbol	gp_file_name_sizeof		665305						
ANR	665584	Symbol	* mapfileenum		665305						
ANR	665585	Symbol	map_file_enum		665305						
ANR	665586	Symbol	* * mapfileenum		665305						
ANR	665587	Symbol	& file_version		665305						
ANR	665588	Symbol	search_pattern		665305						
ANR	665589	Symbol	* mapfileenum -> pattern		665305						
ANR	665590	Symbol	search_pattern_len		665305						
ANR	665591	Function	map_file_enum_next	742:0:24506:25301							
ANR	665592	FunctionDef	"map_file_enum_next (void * enum_mem , char * target)"		665591	0					
ANR	665593	CompoundStatement		744:0:24568:25301	665591	0					
ANR	665594	IdentifierDeclStatement	int d = - 1 ;	745:4:24574:24584	665591	0	True				
ANR	665595	IdentifierDecl	d = - 1		665591	0					
ANR	665596	IdentifierDeclType	int		665591	0					
ANR	665597	Identifier	d		665591	1					
ANR	665598	AssignmentExpression	d = - 1		665591	2		=			
ANR	665599	Identifier	d		665591	0					
ANR	665600	UnaryOperationExpression	- 1		665591	1					
ANR	665601	UnaryOperator	-		665591	0					
ANR	665602	PrimaryExpression	1		665591	1					
ANR	665603	IdentifierDeclStatement	map_file_enum * mapfileenum ;	746:4:24590:24617	665591	1	True				
ANR	665604	IdentifierDecl	* mapfileenum		665591	0					
ANR	665605	IdentifierDeclType	map_file_enum *		665591	0					
ANR	665606	Identifier	mapfileenum		665591	1					
ANR	665607	IfStatement	if ( enum_mem == NULL )		665591	2					
ANR	665608	Condition	enum_mem == NULL	748:8:24628:24643	665591	0	True				
ANR	665609	EqualityExpression	enum_mem == NULL		665591	0		==			
ANR	665610	Identifier	enum_mem		665591	0					
ANR	665611	Identifier	NULL		665591	1					
ANR	665612	ReturnStatement	return false ;	749:8:24654:24666	665591	1	True				
ANR	665613	Identifier	false		665591	0					
ANR	665614	ExpressionStatement	mapfileenum = ( map_file_enum * ) enum_mem	751:4:24673:24711	665591	3	True				
ANR	665615	AssignmentExpression	mapfileenum = ( map_file_enum * ) enum_mem		665591	0		=			
ANR	665616	Identifier	mapfileenum		665591	0					
ANR	665617	CastExpression	( map_file_enum * ) enum_mem		665591	1					
ANR	665618	CastTarget	map_file_enum *		665591	0					
ANR	665619	Identifier	enum_mem		665591	1					
ANR	665620	IfStatement	if ( mapfileenum -> stream == NULL )		665591	4					
ANR	665621	Condition	mapfileenum -> stream == NULL	752:8:24721:24747	665591	0	True				
ANR	665622	EqualityExpression	mapfileenum -> stream == NULL		665591	0		==			
ANR	665623	PtrMemberAccess	mapfileenum -> stream		665591	0					
ANR	665624	Identifier	mapfileenum		665591	0					
ANR	665625	Identifier	stream		665591	1					
ANR	665626	Identifier	NULL		665591	1					
ANR	665627	ReturnStatement	return false ;	753:8:24758:24770	665591	1	True				
ANR	665628	Identifier	false		665591	0					
ANR	665629	IfStatement	if ( mapfileenum -> pattern )		665591	5					
ANR	665630	Condition	mapfileenum -> pattern	755:8:24781:24800	665591	0	True				
ANR	665631	PtrMemberAccess	mapfileenum -> pattern		665591	0					
ANR	665632	Identifier	mapfileenum		665591	0					
ANR	665633	Identifier	pattern		665591	1					
ANR	665634	CompoundStatement		12:30:234:234	665591	1					
ANR	665635	WhileStatement	"while ( MapFileRead ( mapfileenum -> stream , target , & d ) )"		665591	0					
ANR	665636	Condition	"MapFileRead ( mapfileenum -> stream , target , & d )"	757:15:24878:24921	665591	0	True				
ANR	665637	CallExpression	"MapFileRead ( mapfileenum -> stream , target , & d )"		665591	0					
ANR	665638	Callee	MapFileRead		665591	0					
ANR	665639	Identifier	MapFileRead		665591	0					
ANR	665640	ArgumentList	mapfileenum -> stream		665591	1					
ANR	665641	Argument	mapfileenum -> stream		665591	0					
ANR	665642	PtrMemberAccess	mapfileenum -> stream		665591	0					
ANR	665643	Identifier	mapfileenum		665591	0					
ANR	665644	Identifier	stream		665591	1					
ANR	665645	Argument	target		665591	1					
ANR	665646	Identifier	target		665591	0					
ANR	665647	Argument	& d		665591	2					
ANR	665648	UnaryOperationExpression	& d		665591	0					
ANR	665649	UnaryOperator	&		665591	0					
ANR	665650	Identifier	d		665591	1					
ANR	665651	CompoundStatement		14:61:355:355	665591	1					
ANR	665652	IfStatement	"if ( string_match ( ( byte * ) target , strlen ( target ) , ( byte * ) mapfileenum -> pattern , strlen ( mapfileenum -> pattern ) , 0 ) )"		665591	0					
ANR	665653	Condition	"string_match ( ( byte * ) target , strlen ( target ) , ( byte * ) mapfileenum -> pattern , strlen ( mapfileenum -> pattern ) , 0 )"	758:16:24942:25106	665591	0	True				
ANR	665654	CallExpression	"string_match ( ( byte * ) target , strlen ( target ) , ( byte * ) mapfileenum -> pattern , strlen ( mapfileenum -> pattern ) , 0 )"		665591	0					
ANR	665655	Callee	string_match		665591	0					
ANR	665656	Identifier	string_match		665591	0					
ANR	665657	ArgumentList	( byte * ) target		665591	1					
ANR	665658	Argument	( byte * ) target		665591	0					
ANR	665659	CastExpression	( byte * ) target		665591	0					
ANR	665660	CastTarget	byte *		665591	0					
ANR	665661	Identifier	target		665591	1					
ANR	665662	Argument	strlen ( target )		665591	1					
ANR	665663	CallExpression	strlen ( target )		665591	0					
ANR	665664	Callee	strlen		665591	0					
ANR	665665	Identifier	strlen		665591	0					
ANR	665666	ArgumentList	target		665591	1					
ANR	665667	Argument	target		665591	0					
ANR	665668	Identifier	target		665591	0					
ANR	665669	Argument	( byte * ) mapfileenum -> pattern		665591	2					
ANR	665670	CastExpression	( byte * ) mapfileenum -> pattern		665591	0					
ANR	665671	CastTarget	byte *		665591	0					
ANR	665672	PtrMemberAccess	mapfileenum -> pattern		665591	1					
ANR	665673	Identifier	mapfileenum		665591	0					
ANR	665674	Identifier	pattern		665591	1					
ANR	665675	Argument	strlen ( mapfileenum -> pattern )		665591	3					
ANR	665676	CallExpression	strlen ( mapfileenum -> pattern )		665591	0					
ANR	665677	Callee	strlen		665591	0					
ANR	665678	Identifier	strlen		665591	0					
ANR	665679	ArgumentList	mapfileenum -> pattern		665591	1					
ANR	665680	Argument	mapfileenum -> pattern		665591	0					
ANR	665681	PtrMemberAccess	mapfileenum -> pattern		665591	0					
ANR	665682	Identifier	mapfileenum		665591	0					
ANR	665683	Identifier	pattern		665591	1					
ANR	665684	Argument	0		665591	4					
ANR	665685	PrimaryExpression	0		665591	0					
ANR	665686	ReturnStatement	return true ;	761:16:25125:25136	665591	1	True				
ANR	665687	Identifier	true		665591	0					
ANR	665688	ElseStatement	else		665591	0					
ANR	665689	CompoundStatement		21:9:594:594	665591	0					
ANR	665690	IfStatement	"if ( MapFileRead ( mapfileenum -> stream , target , & d ) )"		665591	0					
ANR	665691	Condition	"MapFileRead ( mapfileenum -> stream , target , & d )"	766:12:25206:25249	665591	0	True				
ANR	665692	CallExpression	"MapFileRead ( mapfileenum -> stream , target , & d )"		665591	0					
ANR	665693	Callee	MapFileRead		665591	0					
ANR	665694	Identifier	MapFileRead		665591	0					
ANR	665695	ArgumentList	mapfileenum -> stream		665591	1					
ANR	665696	Argument	mapfileenum -> stream		665591	0					
ANR	665697	PtrMemberAccess	mapfileenum -> stream		665591	0					
ANR	665698	Identifier	mapfileenum		665591	0					
ANR	665699	Identifier	stream		665591	1					
ANR	665700	Argument	target		665591	1					
ANR	665701	Identifier	target		665591	0					
ANR	665702	Argument	& d		665591	2					
ANR	665703	UnaryOperationExpression	& d		665591	0					
ANR	665704	UnaryOperator	&		665591	0					
ANR	665705	Identifier	d		665591	1					
ANR	665706	ReturnStatement	return true ;	767:12:25264:25275	665591	1	True				
ANR	665707	Identifier	true		665591	0					
ANR	665708	ReturnStatement	return false ;	769:4:25287:25299	665591	6	True				
ANR	665709	Identifier	false		665591	0					
ANR	665710	ReturnType	static bool		665591	1					
ANR	665711	Identifier	map_file_enum_next		665591	2					
ANR	665712	ParameterList	"void * enum_mem , char * target"		665591	3					
ANR	665713	Parameter	void * enum_mem	743:19:24537:24551	665591	0	True				
ANR	665714	ParameterType	void *		665591	0					
ANR	665715	Identifier	enum_mem		665591	1					
ANR	665716	Parameter	char * target	743:36:24554:24565	665591	1	True				
ANR	665717	ParameterType	char *		665591	0					
ANR	665718	Identifier	target		665591	1					
ANR	665719	CFGEntryNode	ENTRY		665591		True				
ANR	665720	CFGExitNode	EXIT		665591		True				
ANR	665721	Symbol	NULL		665591						
ANR	665722	Symbol	d		665591						
ANR	665723	Symbol	false		665591						
ANR	665724	Symbol	& d		665591						
ANR	665725	Symbol	* mapfileenum		665591						
ANR	665726	Symbol	mapfileenum		665591						
ANR	665727	Symbol	enum_mem		665591						
ANR	665728	Symbol	target		665591						
ANR	665729	Symbol	strlen		665591						
ANR	665730	Symbol	mapfileenum -> stream		665591						
ANR	665731	Symbol	string_match		665591						
ANR	665732	Symbol	true		665591						
ANR	665733	Symbol	mapfileenum -> pattern		665591						
ANR	665734	Symbol	MapFileRead		665591						
ANR	665735	Function	map_file_enum_close	778:0:25434:25938							
ANR	665736	FunctionDef	map_file_enum_close (void * enum_mem)		665735	0					
ANR	665737	CompoundStatement		780:0:25483:25938	665735	0					
ANR	665738	IdentifierDeclStatement	map_file_enum * mapfileenum = ( map_file_enum * ) enum_mem ;	781:4:25489:25545	665735	0	True				
ANR	665739	IdentifierDecl	* mapfileenum = ( map_file_enum * ) enum_mem		665735	0					
ANR	665740	IdentifierDeclType	map_file_enum *		665735	0					
ANR	665741	Identifier	mapfileenum		665735	1					
ANR	665742	AssignmentExpression	* mapfileenum = ( map_file_enum * ) enum_mem		665735	2		=			
ANR	665743	Identifier	mapfileenum		665735	0					
ANR	665744	CastExpression	( map_file_enum * ) enum_mem		665735	1					
ANR	665745	CastTarget	map_file_enum *		665735	0					
ANR	665746	Identifier	enum_mem		665735	1					
ANR	665747	IdentifierDeclStatement	gs_memory_t * mem = mapfileenum -> memory ;	782:4:25551:25590	665735	1	True				
ANR	665748	IdentifierDecl	* mem = mapfileenum -> memory		665735	0					
ANR	665749	IdentifierDeclType	gs_memory_t *		665735	0					
ANR	665750	Identifier	mem		665735	1					
ANR	665751	AssignmentExpression	* mem = mapfileenum -> memory		665735	2		=			
ANR	665752	Identifier	mem		665735	0					
ANR	665753	PtrMemberAccess	mapfileenum -> memory		665735	1					
ANR	665754	Identifier	mapfileenum		665735	0					
ANR	665755	Identifier	memory		665735	1					
ANR	665756	IfStatement	if ( mapfileenum -> stream )		665735	2					
ANR	665757	Condition	mapfileenum -> stream	784:8:25601:25619	665735	0	True				
ANR	665758	PtrMemberAccess	mapfileenum -> stream		665735	0					
ANR	665759	Identifier	mapfileenum		665735	0					
ANR	665760	Identifier	stream		665735	1					
ANR	665761	ExpressionStatement	fclose ( mapfileenum -> stream )	785:8:25630:25657	665735	1	True				
ANR	665762	CallExpression	fclose ( mapfileenum -> stream )		665735	0					
ANR	665763	Callee	fclose		665735	0					
ANR	665764	Identifier	fclose		665735	0					
ANR	665765	ArgumentList	mapfileenum -> stream		665735	1					
ANR	665766	Argument	mapfileenum -> stream		665735	0					
ANR	665767	PtrMemberAccess	mapfileenum -> stream		665735	0					
ANR	665768	Identifier	mapfileenum		665735	0					
ANR	665769	Identifier	stream		665735	1					
ANR	665770	IfStatement	if ( mapfileenum -> root )		665735	3					
ANR	665771	Condition	mapfileenum -> root	786:8:25667:25683	665735	0	True				
ANR	665772	PtrMemberAccess	mapfileenum -> root		665735	0					
ANR	665773	Identifier	mapfileenum		665735	0					
ANR	665774	Identifier	root		665735	1					
ANR	665775	ExpressionStatement	"gs_free_object ( mem , mapfileenum -> root , ""diskn_enum_init(root)"" )"	787:8:25694:25757	665735	1	True				
ANR	665776	CallExpression	"gs_free_object ( mem , mapfileenum -> root , ""diskn_enum_init(root)"" )"		665735	0					
ANR	665777	Callee	gs_free_object		665735	0					
ANR	665778	Identifier	gs_free_object		665735	0					
ANR	665779	ArgumentList	mem		665735	1					
ANR	665780	Argument	mem		665735	0					
ANR	665781	Identifier	mem		665735	0					
ANR	665782	Argument	mapfileenum -> root		665735	1					
ANR	665783	PtrMemberAccess	mapfileenum -> root		665735	0					
ANR	665784	Identifier	mapfileenum		665735	0					
ANR	665785	Identifier	root		665735	1					
ANR	665786	Argument	"""diskn_enum_init(root)"""		665735	2					
ANR	665787	PrimaryExpression	"""diskn_enum_init(root)"""		665735	0					
ANR	665788	IfStatement	if ( mapfileenum -> pattern )		665735	4					
ANR	665789	Condition	mapfileenum -> pattern	788:8:25767:25786	665735	0	True				
ANR	665790	PtrMemberAccess	mapfileenum -> pattern		665735	0					
ANR	665791	Identifier	mapfileenum		665735	0					
ANR	665792	Identifier	pattern		665735	1					
ANR	665793	ExpressionStatement	"gs_free_object ( mem , mapfileenum -> pattern , ""diskn_enum_init(pattern)"" )"	789:8:25797:25866	665735	1	True				
ANR	665794	CallExpression	"gs_free_object ( mem , mapfileenum -> pattern , ""diskn_enum_init(pattern)"" )"		665735	0					
ANR	665795	Callee	gs_free_object		665735	0					
ANR	665796	Identifier	gs_free_object		665735	0					
ANR	665797	ArgumentList	mem		665735	1					
ANR	665798	Argument	mem		665735	0					
ANR	665799	Identifier	mem		665735	0					
ANR	665800	Argument	mapfileenum -> pattern		665735	1					
ANR	665801	PtrMemberAccess	mapfileenum -> pattern		665735	0					
ANR	665802	Identifier	mapfileenum		665735	0					
ANR	665803	Identifier	pattern		665735	1					
ANR	665804	Argument	"""diskn_enum_init(pattern)"""		665735	2					
ANR	665805	PrimaryExpression	"""diskn_enum_init(pattern)"""		665735	0					
ANR	665806	ExpressionStatement	"gs_free_object ( mem , mapfileenum , ""diskn_enum_init(mapfileenum)"" )"	790:4:25872:25936	665735	5	True				
ANR	665807	CallExpression	"gs_free_object ( mem , mapfileenum , ""diskn_enum_init(mapfileenum)"" )"		665735	0					
ANR	665808	Callee	gs_free_object		665735	0					
ANR	665809	Identifier	gs_free_object		665735	0					
ANR	665810	ArgumentList	mem		665735	1					
ANR	665811	Argument	mem		665735	0					
ANR	665812	Identifier	mem		665735	0					
ANR	665813	Argument	mapfileenum		665735	1					
ANR	665814	Identifier	mapfileenum		665735	0					
ANR	665815	Argument	"""diskn_enum_init(mapfileenum)"""		665735	2					
ANR	665816	PrimaryExpression	"""diskn_enum_init(mapfileenum)"""		665735	0					
ANR	665817	ReturnType	static void		665735	1					
ANR	665818	Identifier	map_file_enum_close		665735	2					
ANR	665819	ParameterList	void * enum_mem		665735	3					
ANR	665820	Parameter	void * enum_mem	779:20:25466:25480	665735	0	True				
ANR	665821	ParameterType	void *		665735	0					
ANR	665822	Identifier	enum_mem		665735	1					
ANR	665823	CFGEntryNode	ENTRY		665735		True				
ANR	665824	CFGExitNode	EXIT		665735		True				
ANR	665825	Symbol	mapfileenum -> memory		665735						
ANR	665826	Symbol	mem		665735						
ANR	665827	Symbol	mapfileenum -> stream		665735						
ANR	665828	Symbol	* mapfileenum		665735						
ANR	665829	Symbol	mapfileenum		665735						
ANR	665830	Symbol	mapfileenum -> pattern		665735						
ANR	665831	Symbol	mapfileenum -> root		665735						
ANR	665832	Symbol	enum_mem		665735						
ANR	665833	Function	map_file_name_get	804:0:26405:26838							
ANR	665834	FunctionDef	"map_file_name_get (gs_memory_t * mem , const char * root_name , const char * Fname , char * osname)"		665833	0					
ANR	665835	CompoundStatement		806:0:26512:26838	665833	0					
ANR	665836	IdentifierDeclStatement	"int d = MapToFile ( mem , root_name , Fname ) ;"	807:4:26518:26558	665833	0	True				
ANR	665837	IdentifierDecl	"d = MapToFile ( mem , root_name , Fname )"		665833	0					
ANR	665838	IdentifierDeclType	int		665833	0					
ANR	665839	Identifier	d		665833	1					
ANR	665840	AssignmentExpression	"d = MapToFile ( mem , root_name , Fname )"		665833	2		=			
ANR	665841	Identifier	d		665833	0					
ANR	665842	CallExpression	"MapToFile ( mem , root_name , Fname )"		665833	1					
ANR	665843	Callee	MapToFile		665833	0					
ANR	665844	Identifier	MapToFile		665833	0					
ANR	665845	ArgumentList	mem		665833	1					
ANR	665846	Argument	mem		665833	0					
ANR	665847	Identifier	mem		665833	0					
ANR	665848	Argument	root_name		665833	1					
ANR	665849	Identifier	root_name		665833	0					
ANR	665850	Argument	Fname		665833	2					
ANR	665851	Identifier	Fname		665833	0					
ANR	665852	IfStatement	if ( d != - 1 )		665833	1					
ANR	665853	Condition	d != - 1	809:8:26569:26575	665833	0	True				
ANR	665854	EqualityExpression	d != - 1		665833	0		!=			
ANR	665855	Identifier	d		665833	0					
ANR	665856	UnaryOperationExpression	- 1		665833	1					
ANR	665857	UnaryOperator	-		665833	0					
ANR	665858	PrimaryExpression	1		665833	1					
ANR	665859	CompoundStatement		4:17:65:65	665833	1					
ANR	665860	IfStatement	if ( ( strlen ( root_name ) + 20 ) < gp_file_name_sizeof )		665833	0					
ANR	665861	Condition	( strlen ( root_name ) + 20 ) < gp_file_name_sizeof	811:12:26657:26702	665833	0	True				
ANR	665862	RelationalExpression	( strlen ( root_name ) + 20 ) < gp_file_name_sizeof		665833	0		<			
ANR	665863	AdditiveExpression	strlen ( root_name ) + 20		665833	0		+			
ANR	665864	CallExpression	strlen ( root_name )		665833	0					
ANR	665865	Callee	strlen		665833	0					
ANR	665866	Identifier	strlen		665833	0					
ANR	665867	ArgumentList	root_name		665833	1					
ANR	665868	Argument	root_name		665833	0					
ANR	665869	Identifier	root_name		665833	0					
ANR	665870	PrimaryExpression	20		665833	1					
ANR	665871	Identifier	gp_file_name_sizeof		665833	1					
ANR	665872	CompoundStatement		6:60:192:192	665833	1					
ANR	665873	ExpressionStatement	"gs_sprintf ( osname , ""%s%d"" , root_name , d )"	812:12:26719:26759	665833	0	True				
ANR	665874	CallExpression	"gs_sprintf ( osname , ""%s%d"" , root_name , d )"		665833	0					
ANR	665875	Callee	gs_sprintf		665833	0					
ANR	665876	Identifier	gs_sprintf		665833	0					
ANR	665877	ArgumentList	osname		665833	1					
ANR	665878	Argument	osname		665833	0					
ANR	665879	Identifier	osname		665833	0					
ANR	665880	Argument	"""%s%d"""		665833	1					
ANR	665881	PrimaryExpression	"""%s%d"""		665833	0					
ANR	665882	Argument	root_name		665833	2					
ANR	665883	Identifier	root_name		665833	0					
ANR	665884	Argument	d		665833	3					
ANR	665885	Identifier	d		665833	0					
ANR	665886	ReturnStatement	return true ;	813:12:26773:26784	665833	1	True				
ANR	665887	Identifier	true		665833	0					
ANR	665888	ExpressionStatement	* osname = 0	817:4:26807:26818	665833	2	True				
ANR	665889	AssignmentExpression	* osname = 0		665833	0		=			
ANR	665890	UnaryOperationExpression	* osname		665833	0					
ANR	665891	UnaryOperator	*		665833	0					
ANR	665892	Identifier	osname		665833	1					
ANR	665893	PrimaryExpression	0		665833	1					
ANR	665894	ReturnStatement	return false ;	818:4:26824:26836	665833	3	True				
ANR	665895	Identifier	false		665833	0					
ANR	665896	ReturnType	static bool		665833	1					
ANR	665897	Identifier	map_file_name_get		665833	2					
ANR	665898	ParameterList	"gs_memory_t * mem , const char * root_name , const char * Fname , char * osname"		665833	3					
ANR	665899	Parameter	gs_memory_t * mem	805:18:26435:26450	665833	0	True				
ANR	665900	ParameterType	gs_memory_t *		665833	0					
ANR	665901	Identifier	mem		665833	1					
ANR	665902	Parameter	const char * root_name	805:36:26453:26474	665833	1	True				
ANR	665903	ParameterType	const char *		665833	0					
ANR	665904	Identifier	root_name		665833	1					
ANR	665905	Parameter	const char * Fname	805:60:26477:26494	665833	2	True				
ANR	665906	ParameterType	const char *		665833	0					
ANR	665907	Identifier	Fname		665833	1					
ANR	665908	Parameter	char * osname	805:80:26497:26509	665833	3	True				
ANR	665909	ParameterType	char *		665833	0					
ANR	665910	Identifier	osname		665833	1					
ANR	665911	CFGEntryNode	ENTRY		665833		True				
ANR	665912	CFGExitNode	EXIT		665833		True				
ANR	665913	Symbol	strlen		665833						
ANR	665914	Symbol	mem		665833						
ANR	665915	Symbol	d		665833						
ANR	665916	Symbol	MapToFile		665833						
ANR	665917	Symbol	root_name		665833						
ANR	665918	Symbol	true		665833						
ANR	665919	Symbol	false		665833						
ANR	665920	Symbol	gp_file_name_sizeof		665833						
ANR	665921	Symbol	Fname		665833						
ANR	665922	Symbol	osname		665833						
ANR	665923	Symbol	* osname		665833						
ANR	665924	Function	map_file_name_del	829:0:27155:28849							
ANR	665925	FunctionDef	"map_file_name_del (gs_memory_t * mem , const char * root_name , const char * Fname)"		665924	0					
ANR	665926	CompoundStatement		831:0:27247:28849	665924	0					
ANR	665927	IdentifierDeclStatement	"int d = MapToFile ( mem , root_name , Fname ) ;"	833:4:27288:27328	665924	0	True				
ANR	665928	IdentifierDecl	"d = MapToFile ( mem , root_name , Fname )"		665924	0					
ANR	665929	IdentifierDeclType	int		665924	0					
ANR	665930	Identifier	d		665924	1					
ANR	665931	AssignmentExpression	"d = MapToFile ( mem , root_name , Fname )"		665924	2		=			
ANR	665932	Identifier	d		665924	0					
ANR	665933	CallExpression	"MapToFile ( mem , root_name , Fname )"		665924	1					
ANR	665934	Callee	MapToFile		665924	0					
ANR	665935	Identifier	MapToFile		665924	0					
ANR	665936	ArgumentList	mem		665924	1					
ANR	665937	Argument	mem		665924	0					
ANR	665938	Identifier	mem		665924	0					
ANR	665939	Argument	root_name		665924	1					
ANR	665940	Identifier	root_name		665924	0					
ANR	665941	Argument	Fname		665924	2					
ANR	665942	Identifier	Fname		665924	0					
ANR	665943	IdentifierDeclStatement	int file_version ;	834:4:27334:27350	665924	1	True				
ANR	665944	IdentifierDecl	file_version		665924	0					
ANR	665945	IdentifierDeclType	int		665924	0					
ANR	665946	Identifier	file_version		665924	1					
ANR	665947	IdentifierDeclStatement	char * name = NULL ;	835:4:27356:27373	665924	2	True				
ANR	665948	IdentifierDecl	* name = NULL		665924	0					
ANR	665949	IdentifierDeclType	char *		665924	0					
ANR	665950	Identifier	name		665924	1					
ANR	665951	AssignmentExpression	* name = NULL		665924	2		=			
ANR	665952	Identifier	NULL		665924	0					
ANR	665953	Identifier	NULL		665924	1					
ANR	665954	ExpressionStatement	"name = ( char * ) gs_alloc_bytes ( mem , gp_file_name_sizeof , ""map_file_name_del(name)"" )"	837:4:27380:27462	665924	3	True				
ANR	665955	AssignmentExpression	"name = ( char * ) gs_alloc_bytes ( mem , gp_file_name_sizeof , ""map_file_name_del(name)"" )"		665924	0		=			
ANR	665956	Identifier	name		665924	0					
ANR	665957	CastExpression	"( char * ) gs_alloc_bytes ( mem , gp_file_name_sizeof , ""map_file_name_del(name)"" )"		665924	1					
ANR	665958	CastTarget	char *		665924	0					
ANR	665959	CallExpression	"gs_alloc_bytes ( mem , gp_file_name_sizeof , ""map_file_name_del(name)"" )"		665924	1					
ANR	665960	Callee	gs_alloc_bytes		665924	0					
ANR	665961	Identifier	gs_alloc_bytes		665924	0					
ANR	665962	ArgumentList	mem		665924	1					
ANR	665963	Argument	mem		665924	0					
ANR	665964	Identifier	mem		665924	0					
ANR	665965	Argument	gp_file_name_sizeof		665924	1					
ANR	665966	Identifier	gp_file_name_sizeof		665924	0					
ANR	665967	Argument	"""map_file_name_del(name)"""		665924	2					
ANR	665968	PrimaryExpression	"""map_file_name_del(name)"""		665924	0					
ANR	665969	IfStatement	if ( name && d != - 1 )		665924	4					
ANR	665970	Condition	name && d != - 1	839:8:27473:27487	665924	0	True				
ANR	665971	AndExpression	name && d != - 1		665924	0		&&			
ANR	665972	Identifier	name		665924	0					
ANR	665973	EqualityExpression	d != - 1		665924	1		!=			
ANR	665974	Identifier	d		665924	0					
ANR	665975	UnaryOperationExpression	- 1		665924	1					
ANR	665976	UnaryOperator	-		665924	0					
ANR	665977	PrimaryExpression	1		665924	1					
ANR	665978	CompoundStatement		11:8:308:322	665924	1					
ANR	665979	IdentifierDeclStatement	FILE * newMap ;	840:8:27532:27546	665924	0	True				
ANR	665980	IdentifierDecl	* newMap		665924	0					
ANR	665981	IdentifierDeclType	FILE *		665924	0					
ANR	665982	Identifier	newMap		665924	1					
ANR	665983	IdentifierDeclStatement	FILE * oldMap ;	841:8:27556:27570	665924	1	True				
ANR	665984	IdentifierDecl	* oldMap		665924	0					
ANR	665985	IdentifierDeclType	FILE *		665924	0					
ANR	665986	Identifier	oldMap		665924	1					
ANR	665987	ExpressionStatement	"MapFileUnlink ( mem , root_name , TEMP_FILE_NAME )"	845:8:27637:27683	665924	2	True				
ANR	665988	CallExpression	"MapFileUnlink ( mem , root_name , TEMP_FILE_NAME )"		665924	0					
ANR	665989	Callee	MapFileUnlink		665924	0					
ANR	665990	Identifier	MapFileUnlink		665924	0					
ANR	665991	ArgumentList	mem		665924	1					
ANR	665992	Argument	mem		665924	0					
ANR	665993	Identifier	mem		665924	0					
ANR	665994	Argument	root_name		665924	1					
ANR	665995	Identifier	root_name		665924	0					
ANR	665996	Argument	TEMP_FILE_NAME		665924	2					
ANR	665997	Identifier	TEMP_FILE_NAME		665924	0					
ANR	665998	ExpressionStatement	"newMap = MapFileOpen ( mem , root_name , TEMP_FILE_NAME , ""w"" )"	846:8:27693:27750	665924	3	True				
ANR	665999	AssignmentExpression	"newMap = MapFileOpen ( mem , root_name , TEMP_FILE_NAME , ""w"" )"		665924	0		=			
ANR	666000	Identifier	newMap		665924	0					
ANR	666001	CallExpression	"MapFileOpen ( mem , root_name , TEMP_FILE_NAME , ""w"" )"		665924	1					
ANR	666002	Callee	MapFileOpen		665924	0					
ANR	666003	Identifier	MapFileOpen		665924	0					
ANR	666004	ArgumentList	mem		665924	1					
ANR	666005	Argument	mem		665924	0					
ANR	666006	Identifier	mem		665924	0					
ANR	666007	Argument	root_name		665924	1					
ANR	666008	Identifier	root_name		665924	0					
ANR	666009	Argument	TEMP_FILE_NAME		665924	2					
ANR	666010	Identifier	TEMP_FILE_NAME		665924	0					
ANR	666011	Argument	"""w"""		665924	3					
ANR	666012	PrimaryExpression	"""w"""		665924	0					
ANR	666013	IfStatement	if ( newMap == NULL )		665924	4					
ANR	666014	Condition	newMap == NULL	847:12:27764:27777	665924	0	True				
ANR	666015	EqualityExpression	newMap == NULL		665924	0		==			
ANR	666016	Identifier	newMap		665924	0					
ANR	666017	Identifier	NULL		665924	1					
ANR	666018	CompoundStatement		17:28:532:532	665924	1					
ANR	666019	ExpressionStatement	"gs_free_object ( mem , name , ""map_file_name_del(name)"" )"	848:12:27794:27847	665924	0	True				
ANR	666020	CallExpression	"gs_free_object ( mem , name , ""map_file_name_del(name)"" )"		665924	0					
ANR	666021	Callee	gs_free_object		665924	0					
ANR	666022	Identifier	gs_free_object		665924	0					
ANR	666023	ArgumentList	mem		665924	1					
ANR	666024	Argument	mem		665924	0					
ANR	666025	Identifier	mem		665924	0					
ANR	666026	Argument	name		665924	1					
ANR	666027	Identifier	name		665924	0					
ANR	666028	Argument	"""map_file_name_del(name)"""		665924	2					
ANR	666029	PrimaryExpression	"""map_file_name_del(name)"""		665924	0					
ANR	666030	ReturnStatement	return ;	849:12:27861:27867	665924	1	True				
ANR	666031	ExpressionStatement	"oldMap = MapFileOpen ( mem , root_name , MAP_FILE_NAME , ""r"" )"	851:8:27887:27943	665924	5	True				
ANR	666032	AssignmentExpression	"oldMap = MapFileOpen ( mem , root_name , MAP_FILE_NAME , ""r"" )"		665924	0		=			
ANR	666033	Identifier	oldMap		665924	0					
ANR	666034	CallExpression	"MapFileOpen ( mem , root_name , MAP_FILE_NAME , ""r"" )"		665924	1					
ANR	666035	Callee	MapFileOpen		665924	0					
ANR	666036	Identifier	MapFileOpen		665924	0					
ANR	666037	ArgumentList	mem		665924	1					
ANR	666038	Argument	mem		665924	0					
ANR	666039	Identifier	mem		665924	0					
ANR	666040	Argument	root_name		665924	1					
ANR	666041	Identifier	root_name		665924	0					
ANR	666042	Argument	MAP_FILE_NAME		665924	2					
ANR	666043	Identifier	MAP_FILE_NAME		665924	0					
ANR	666044	Argument	"""r"""		665924	3					
ANR	666045	PrimaryExpression	"""r"""		665924	0					
ANR	666046	IfStatement	"if ( oldMap != NULL && ( ! MapFileReadVersion ( oldMap , & file_version ) || file_version != MAP_FILE_VERSION ) )"		665924	6					
ANR	666047	Condition	"oldMap != NULL && ( ! MapFileReadVersion ( oldMap , & file_version ) || file_version != MAP_FILE_VERSION )"	852:12:27957:28066	665924	0	True				
ANR	666048	AndExpression	"oldMap != NULL && ( ! MapFileReadVersion ( oldMap , & file_version ) || file_version != MAP_FILE_VERSION )"		665924	0		&&			
ANR	666049	EqualityExpression	oldMap != NULL		665924	0		!=			
ANR	666050	Identifier	oldMap		665924	0					
ANR	666051	Identifier	NULL		665924	1					
ANR	666052	OrExpression	"! MapFileReadVersion ( oldMap , & file_version ) || file_version != MAP_FILE_VERSION"		665924	1		||			
ANR	666053	UnaryOperationExpression	"! MapFileReadVersion ( oldMap , & file_version )"		665924	0					
ANR	666054	UnaryOperator	!		665924	0					
ANR	666055	CallExpression	"MapFileReadVersion ( oldMap , & file_version )"		665924	1					
ANR	666056	Callee	MapFileReadVersion		665924	0					
ANR	666057	Identifier	MapFileReadVersion		665924	0					
ANR	666058	ArgumentList	oldMap		665924	1					
ANR	666059	Argument	oldMap		665924	0					
ANR	666060	Identifier	oldMap		665924	0					
ANR	666061	Argument	& file_version		665924	1					
ANR	666062	UnaryOperationExpression	& file_version		665924	0					
ANR	666063	UnaryOperator	&		665924	0					
ANR	666064	Identifier	file_version		665924	1					
ANR	666065	EqualityExpression	file_version != MAP_FILE_VERSION		665924	1		!=			
ANR	666066	Identifier	file_version		665924	0					
ANR	666067	Identifier	MAP_FILE_VERSION		665924	1					
ANR	666068	CompoundStatement		23:50:821:821	665924	1					
ANR	666069	ExpressionStatement	fclose ( oldMap )	854:12:28083:28097	665924	0	True				
ANR	666070	CallExpression	fclose ( oldMap )		665924	0					
ANR	666071	Callee	fclose		665924	0					
ANR	666072	Identifier	fclose		665924	0					
ANR	666073	ArgumentList	oldMap		665924	1					
ANR	666074	Argument	oldMap		665924	0					
ANR	666075	Identifier	oldMap		665924	0					
ANR	666076	ExpressionStatement	oldMap = NULL	855:12:28111:28123	665924	1	True				
ANR	666077	AssignmentExpression	oldMap = NULL		665924	0		=			
ANR	666078	Identifier	oldMap		665924	0					
ANR	666079	Identifier	NULL		665924	1					
ANR	666080	IfStatement	if ( oldMap == NULL )		665924	7					
ANR	666081	Condition	oldMap == NULL	857:12:28147:28160	665924	0	True				
ANR	666082	EqualityExpression	oldMap == NULL		665924	0		==			
ANR	666083	Identifier	oldMap		665924	0					
ANR	666084	Identifier	NULL		665924	1					
ANR	666085	CompoundStatement		27:28:915:915	665924	1					
ANR	666086	ExpressionStatement	"gs_free_object ( mem , name , ""map_file_name_del(name)"" )"	858:12:28177:28230	665924	0	True				
ANR	666087	CallExpression	"gs_free_object ( mem , name , ""map_file_name_del(name)"" )"		665924	0					
ANR	666088	Callee	gs_free_object		665924	0					
ANR	666089	Identifier	gs_free_object		665924	0					
ANR	666090	ArgumentList	mem		665924	1					
ANR	666091	Argument	mem		665924	0					
ANR	666092	Identifier	mem		665924	0					
ANR	666093	Argument	name		665924	1					
ANR	666094	Identifier	name		665924	0					
ANR	666095	Argument	"""map_file_name_del(name)"""		665924	2					
ANR	666096	PrimaryExpression	"""map_file_name_del(name)"""		665924	0					
ANR	666097	ExpressionStatement	fclose ( newMap )	859:12:28244:28258	665924	1	True				
ANR	666098	CallExpression	fclose ( newMap )		665924	0					
ANR	666099	Callee	fclose		665924	0					
ANR	666100	Identifier	fclose		665924	0					
ANR	666101	ArgumentList	newMap		665924	1					
ANR	666102	Argument	newMap		665924	0					
ANR	666103	Identifier	newMap		665924	0					
ANR	666104	ExpressionStatement	"MapFileUnlink ( mem , root_name , TEMP_FILE_NAME )"	860:12:28272:28317	665924	2	True				
ANR	666105	CallExpression	"MapFileUnlink ( mem , root_name , TEMP_FILE_NAME )"		665924	0					
ANR	666106	Callee	MapFileUnlink		665924	0					
ANR	666107	Identifier	MapFileUnlink		665924	0					
ANR	666108	ArgumentList	mem		665924	1					
ANR	666109	Argument	mem		665924	0					
ANR	666110	Identifier	mem		665924	0					
ANR	666111	Argument	root_name		665924	1					
ANR	666112	Identifier	root_name		665924	0					
ANR	666113	Argument	TEMP_FILE_NAME		665924	2					
ANR	666114	Identifier	TEMP_FILE_NAME		665924	0					
ANR	666115	ReturnStatement	return ;	861:12:28331:28337	665924	3	True				
ANR	666116	ExpressionStatement	"MapFileWriteVersion ( newMap , MAP_FILE_VERSION )"	866:8:28436:28481	665924	8	True				
ANR	666117	CallExpression	"MapFileWriteVersion ( newMap , MAP_FILE_VERSION )"		665924	0					
ANR	666118	Callee	MapFileWriteVersion		665924	0					
ANR	666119	Identifier	MapFileWriteVersion		665924	0					
ANR	666120	ArgumentList	newMap		665924	1					
ANR	666121	Argument	newMap		665924	0					
ANR	666122	Identifier	newMap		665924	0					
ANR	666123	Argument	MAP_FILE_VERSION		665924	1					
ANR	666124	Identifier	MAP_FILE_VERSION		665924	0					
ANR	666125	WhileStatement	"while ( MapFileRead ( oldMap , name , & d ) )"		665924	9					
ANR	666126	Condition	"MapFileRead ( oldMap , name , & d )"	867:15:28498:28526	665924	0	True				
ANR	666127	CallExpression	"MapFileRead ( oldMap , name , & d )"		665924	0					
ANR	666128	Callee	MapFileRead		665924	0					
ANR	666129	Identifier	MapFileRead		665924	0					
ANR	666130	ArgumentList	oldMap		665924	1					
ANR	666131	Argument	oldMap		665924	0					
ANR	666132	Identifier	oldMap		665924	0					
ANR	666133	Argument	name		665924	1					
ANR	666134	Identifier	name		665924	0					
ANR	666135	Argument	& d		665924	2					
ANR	666136	UnaryOperationExpression	& d		665924	0					
ANR	666137	UnaryOperator	&		665924	0					
ANR	666138	Identifier	d		665924	1					
ANR	666139	IfStatement	"if ( strcmp ( name , Fname ) )"		665924	1					
ANR	666140	Condition	"strcmp ( name , Fname )"	868:16:28545:28563	665924	0	True				
ANR	666141	CallExpression	"strcmp ( name , Fname )"		665924	0					
ANR	666142	Callee	strcmp		665924	0					
ANR	666143	Identifier	strcmp		665924	0					
ANR	666144	ArgumentList	name		665924	1					
ANR	666145	Argument	name		665924	0					
ANR	666146	Identifier	name		665924	0					
ANR	666147	Argument	Fname		665924	1					
ANR	666148	Identifier	Fname		665924	0					
ANR	666149	ExpressionStatement	"MapFileWrite ( newMap , name , d )"	869:16:28582:28611	665924	1	True				
ANR	666150	CallExpression	"MapFileWrite ( newMap , name , d )"		665924	0					
ANR	666151	Callee	MapFileWrite		665924	0					
ANR	666152	Identifier	MapFileWrite		665924	0					
ANR	666153	ArgumentList	newMap		665924	1					
ANR	666154	Argument	newMap		665924	0					
ANR	666155	Identifier	newMap		665924	0					
ANR	666156	Argument	name		665924	1					
ANR	666157	Identifier	name		665924	0					
ANR	666158	Argument	d		665924	2					
ANR	666159	Identifier	d		665924	0					
ANR	666160	ExpressionStatement	fclose ( newMap )	870:8:28621:28635	665924	10	True				
ANR	666161	CallExpression	fclose ( newMap )		665924	0					
ANR	666162	Callee	fclose		665924	0					
ANR	666163	Identifier	fclose		665924	0					
ANR	666164	ArgumentList	newMap		665924	1					
ANR	666165	Argument	newMap		665924	0					
ANR	666166	Identifier	newMap		665924	0					
ANR	666167	ExpressionStatement	fclose ( oldMap )	871:8:28645:28659	665924	11	True				
ANR	666168	CallExpression	fclose ( oldMap )		665924	0					
ANR	666169	Callee	fclose		665924	0					
ANR	666170	Identifier	fclose		665924	0					
ANR	666171	ArgumentList	oldMap		665924	1					
ANR	666172	Argument	oldMap		665924	0					
ANR	666173	Identifier	oldMap		665924	0					
ANR	666174	ExpressionStatement	"MapFileUnlink ( mem , root_name , MAP_FILE_NAME )"	872:8:28669:28713	665924	12	True				
ANR	666175	CallExpression	"MapFileUnlink ( mem , root_name , MAP_FILE_NAME )"		665924	0					
ANR	666176	Callee	MapFileUnlink		665924	0					
ANR	666177	Identifier	MapFileUnlink		665924	0					
ANR	666178	ArgumentList	mem		665924	1					
ANR	666179	Argument	mem		665924	0					
ANR	666180	Identifier	mem		665924	0					
ANR	666181	Argument	root_name		665924	1					
ANR	666182	Identifier	root_name		665924	0					
ANR	666183	Argument	MAP_FILE_NAME		665924	2					
ANR	666184	Identifier	MAP_FILE_NAME		665924	0					
ANR	666185	ExpressionStatement	"MapFileRename ( mem , root_name , MAP_FILE_NAME , TEMP_FILE_NAME )"	873:8:28723:28783	665924	13	True				
ANR	666186	CallExpression	"MapFileRename ( mem , root_name , MAP_FILE_NAME , TEMP_FILE_NAME )"		665924	0					
ANR	666187	Callee	MapFileRename		665924	0					
ANR	666188	Identifier	MapFileRename		665924	0					
ANR	666189	ArgumentList	mem		665924	1					
ANR	666190	Argument	mem		665924	0					
ANR	666191	Identifier	mem		665924	0					
ANR	666192	Argument	root_name		665924	1					
ANR	666193	Identifier	root_name		665924	0					
ANR	666194	Argument	MAP_FILE_NAME		665924	2					
ANR	666195	Identifier	MAP_FILE_NAME		665924	0					
ANR	666196	Argument	TEMP_FILE_NAME		665924	3					
ANR	666197	Identifier	TEMP_FILE_NAME		665924	0					
ANR	666198	ExpressionStatement	"gs_free_object ( mem , name , ""map_file_name_del(name)"" )"	875:4:28795:28847	665924	5	True				
ANR	666199	CallExpression	"gs_free_object ( mem , name , ""map_file_name_del(name)"" )"		665924	0					
ANR	666200	Callee	gs_free_object		665924	0					
ANR	666201	Identifier	gs_free_object		665924	0					
ANR	666202	ArgumentList	mem		665924	1					
ANR	666203	Argument	mem		665924	0					
ANR	666204	Identifier	mem		665924	0					
ANR	666205	Argument	name		665924	1					
ANR	666206	Identifier	name		665924	0					
ANR	666207	Argument	"""map_file_name_del(name)"""		665924	2					
ANR	666208	PrimaryExpression	"""map_file_name_del(name)"""		665924	0					
ANR	666209	ReturnType	static void		665924	1					
ANR	666210	Identifier	map_file_name_del		665924	2					
ANR	666211	ParameterList	"gs_memory_t * mem , const char * root_name , const char * Fname"		665924	3					
ANR	666212	Parameter	gs_memory_t * mem	830:18:27185:27200	665924	0	True				
ANR	666213	ParameterType	gs_memory_t *		665924	0					
ANR	666214	Identifier	mem		665924	1					
ANR	666215	Parameter	const char * root_name	830:36:27203:27224	665924	1	True				
ANR	666216	ParameterType	const char *		665924	0					
ANR	666217	Identifier	root_name		665924	1					
ANR	666218	Parameter	const char * Fname	830:60:27227:27244	665924	2	True				
ANR	666219	ParameterType	const char *		665924	0					
ANR	666220	Identifier	Fname		665924	1					
ANR	666221	CFGEntryNode	ENTRY		665924		True				
ANR	666222	CFGExitNode	EXIT		665924		True				
ANR	666223	Symbol	file_version		665924						
ANR	666224	Symbol	strcmp		665924						
ANR	666225	Symbol	gs_alloc_bytes		665924						
ANR	666226	Symbol	TEMP_FILE_NAME		665924						
ANR	666227	Symbol	NULL		665924						
ANR	666228	Symbol	d		665924						
ANR	666229	Symbol	MapFileReadVersion		665924						
ANR	666230	Symbol	MapToFile		665924						
ANR	666231	Symbol	MAP_FILE_VERSION		665924						
ANR	666232	Symbol	root_name		665924						
ANR	666233	Symbol	newMap		665924						
ANR	666234	Symbol	gp_file_name_sizeof		665924						
ANR	666235	Symbol	& d		665924						
ANR	666236	Symbol	MAP_FILE_NAME		665924						
ANR	666237	Symbol	MapFileOpen		665924						
ANR	666238	Symbol	& file_version		665924						
ANR	666239	Symbol	mem		665924						
ANR	666240	Symbol	name		665924						
ANR	666241	Symbol	Fname		665924						
ANR	666242	Symbol	MapFileRead		665924						
ANR	666243	Symbol	oldMap		665924						
ANR	666244	Function	map_file_name_add	886:0:29163:30946							
ANR	666245	FunctionDef	"map_file_name_add (gs_memory_t * mem , const char * root_name , const char * Fname)"		666244	0					
ANR	666246	CompoundStatement		888:0:29255:30946	666244	0					
ANR	666247	IdentifierDeclStatement	char * name = NULL ;	893:4:29360:29377	666244	0	True				
ANR	666248	IdentifierDecl	* name = NULL		666244	0					
ANR	666249	IdentifierDeclType	char *		666244	0					
ANR	666250	Identifier	name		666244	1					
ANR	666251	AssignmentExpression	* name = NULL		666244	2		=			
ANR	666252	Identifier	NULL		666244	0					
ANR	666253	Identifier	NULL		666244	1					
ANR	666254	IdentifierDeclStatement	int d ;	894:4:29383:29388	666244	1	True				
ANR	666255	IdentifierDecl	d		666244	0					
ANR	666256	IdentifierDeclType	int		666244	0					
ANR	666257	Identifier	d		666244	1					
ANR	666258	IdentifierDeclStatement	int dmax = - 1 ;	895:4:29394:29407	666244	2	True				
ANR	666259	IdentifierDecl	dmax = - 1		666244	0					
ANR	666260	IdentifierDeclType	int		666244	0					
ANR	666261	Identifier	dmax		666244	1					
ANR	666262	AssignmentExpression	dmax = - 1		666244	2		=			
ANR	666263	Identifier	dmax		666244	0					
ANR	666264	UnaryOperationExpression	- 1		666244	1					
ANR	666265	UnaryOperator	-		666244	0					
ANR	666266	PrimaryExpression	1		666244	1					
ANR	666267	IdentifierDeclStatement	int file_version ;	896:4:29413:29429	666244	3	True				
ANR	666268	IdentifierDecl	file_version		666244	0					
ANR	666269	IdentifierDeclType	int		666244	0					
ANR	666270	Identifier	file_version		666244	1					
ANR	666271	IdentifierDeclStatement	FILE * newMap ;	897:4:29435:29449	666244	4	True				
ANR	666272	IdentifierDecl	* newMap		666244	0					
ANR	666273	IdentifierDeclType	FILE *		666244	0					
ANR	666274	Identifier	newMap		666244	1					
ANR	666275	IdentifierDeclStatement	FILE * oldMap ;	898:4:29455:29469	666244	5	True				
ANR	666276	IdentifierDecl	* oldMap		666244	0					
ANR	666277	IdentifierDeclType	FILE *		666244	0					
ANR	666278	Identifier	oldMap		666244	1					
ANR	666279	ExpressionStatement	"name = ( char * ) gs_alloc_bytes ( mem , gp_file_name_sizeof , ""map_file_name_add(name)"" )"	900:4:29476:29558	666244	6	True				
ANR	666280	AssignmentExpression	"name = ( char * ) gs_alloc_bytes ( mem , gp_file_name_sizeof , ""map_file_name_add(name)"" )"		666244	0		=			
ANR	666281	Identifier	name		666244	0					
ANR	666282	CastExpression	"( char * ) gs_alloc_bytes ( mem , gp_file_name_sizeof , ""map_file_name_add(name)"" )"		666244	1					
ANR	666283	CastTarget	char *		666244	0					
ANR	666284	CallExpression	"gs_alloc_bytes ( mem , gp_file_name_sizeof , ""map_file_name_add(name)"" )"		666244	1					
ANR	666285	Callee	gs_alloc_bytes		666244	0					
ANR	666286	Identifier	gs_alloc_bytes		666244	0					
ANR	666287	ArgumentList	mem		666244	1					
ANR	666288	Argument	mem		666244	0					
ANR	666289	Identifier	mem		666244	0					
ANR	666290	Argument	gp_file_name_sizeof		666244	1					
ANR	666291	Identifier	gp_file_name_sizeof		666244	0					
ANR	666292	Argument	"""map_file_name_add(name)"""		666244	2					
ANR	666293	PrimaryExpression	"""map_file_name_add(name)"""		666244	0					
ANR	666294	IfStatement	if ( name )		666244	7					
ANR	666295	Condition	name	901:8:29568:29571	666244	0	True				
ANR	666296	Identifier	name		666244	0					
ANR	666297	CompoundStatement		14:14:318:318	666244	1					
ANR	666298	ExpressionStatement	"oldMap = MapFileOpen ( mem , root_name , MAP_FILE_NAME , ""r"" )"	902:8:29584:29640	666244	0	True				
ANR	666299	AssignmentExpression	"oldMap = MapFileOpen ( mem , root_name , MAP_FILE_NAME , ""r"" )"		666244	0		=			
ANR	666300	Identifier	oldMap		666244	0					
ANR	666301	CallExpression	"MapFileOpen ( mem , root_name , MAP_FILE_NAME , ""r"" )"		666244	1					
ANR	666302	Callee	MapFileOpen		666244	0					
ANR	666303	Identifier	MapFileOpen		666244	0					
ANR	666304	ArgumentList	mem		666244	1					
ANR	666305	Argument	mem		666244	0					
ANR	666306	Identifier	mem		666244	0					
ANR	666307	Argument	root_name		666244	1					
ANR	666308	Identifier	root_name		666244	0					
ANR	666309	Argument	MAP_FILE_NAME		666244	2					
ANR	666310	Identifier	MAP_FILE_NAME		666244	0					
ANR	666311	Argument	"""r"""		666244	3					
ANR	666312	PrimaryExpression	"""r"""		666244	0					
ANR	666313	IfStatement	"if ( oldMap != NULL && ( ! MapFileReadVersion ( oldMap , & file_version ) || file_version != MAP_FILE_VERSION ) )"		666244	1					
ANR	666314	Condition	"oldMap != NULL && ( ! MapFileReadVersion ( oldMap , & file_version ) || file_version != MAP_FILE_VERSION )"	903:12:29654:29763	666244	0	True				
ANR	666315	AndExpression	"oldMap != NULL && ( ! MapFileReadVersion ( oldMap , & file_version ) || file_version != MAP_FILE_VERSION )"		666244	0		&&			
ANR	666316	EqualityExpression	oldMap != NULL		666244	0		!=			
ANR	666317	Identifier	oldMap		666244	0					
ANR	666318	Identifier	NULL		666244	1					
ANR	666319	OrExpression	"! MapFileReadVersion ( oldMap , & file_version ) || file_version != MAP_FILE_VERSION"		666244	1		||			
ANR	666320	UnaryOperationExpression	"! MapFileReadVersion ( oldMap , & file_version )"		666244	0					
ANR	666321	UnaryOperator	!		666244	0					
ANR	666322	CallExpression	"MapFileReadVersion ( oldMap , & file_version )"		666244	1					
ANR	666323	Callee	MapFileReadVersion		666244	0					
ANR	666324	Identifier	MapFileReadVersion		666244	0					
ANR	666325	ArgumentList	oldMap		666244	1					
ANR	666326	Argument	oldMap		666244	0					
ANR	666327	Identifier	oldMap		666244	0					
ANR	666328	Argument	& file_version		666244	1					
ANR	666329	UnaryOperationExpression	& file_version		666244	0					
ANR	666330	UnaryOperator	&		666244	0					
ANR	666331	Identifier	file_version		666244	1					
ANR	666332	EqualityExpression	file_version != MAP_FILE_VERSION		666244	1		!=			
ANR	666333	Identifier	file_version		666244	0					
ANR	666334	Identifier	MAP_FILE_VERSION		666244	1					
ANR	666335	CompoundStatement		17:50:510:510	666244	1					
ANR	666336	ExpressionStatement	fclose ( oldMap )	905:12:29780:29794	666244	0	True				
ANR	666337	CallExpression	fclose ( oldMap )		666244	0					
ANR	666338	Callee	fclose		666244	0					
ANR	666339	Identifier	fclose		666244	0					
ANR	666340	ArgumentList	oldMap		666244	1					
ANR	666341	Argument	oldMap		666244	0					
ANR	666342	Identifier	oldMap		666244	0					
ANR	666343	ExpressionStatement	oldMap = NULL	906:12:29808:29821	666244	1	True				
ANR	666344	AssignmentExpression	oldMap = NULL		666244	0		=			
ANR	666345	Identifier	oldMap		666244	0					
ANR	666346	Identifier	NULL		666244	1					
ANR	666347	IfStatement	if ( oldMap == NULL )		666244	2					
ANR	666348	Condition	oldMap == NULL	908:12:29845:29858	666244	0	True				
ANR	666349	EqualityExpression	oldMap == NULL		666244	0		==			
ANR	666350	Identifier	oldMap		666244	0					
ANR	666351	Identifier	NULL		666244	1					
ANR	666352	CompoundStatement		21:28:605:605	666244	1					
ANR	666353	ExpressionStatement	"oldMap = MapFileOpen ( mem , root_name , MAP_FILE_NAME , ""w"" )"	909:12:29875:29931	666244	0	True				
ANR	666354	AssignmentExpression	"oldMap = MapFileOpen ( mem , root_name , MAP_FILE_NAME , ""w"" )"		666244	0		=			
ANR	666355	Identifier	oldMap		666244	0					
ANR	666356	CallExpression	"MapFileOpen ( mem , root_name , MAP_FILE_NAME , ""w"" )"		666244	1					
ANR	666357	Callee	MapFileOpen		666244	0					
ANR	666358	Identifier	MapFileOpen		666244	0					
ANR	666359	ArgumentList	mem		666244	1					
ANR	666360	Argument	mem		666244	0					
ANR	666361	Identifier	mem		666244	0					
ANR	666362	Argument	root_name		666244	1					
ANR	666363	Identifier	root_name		666244	0					
ANR	666364	Argument	MAP_FILE_NAME		666244	2					
ANR	666365	Identifier	MAP_FILE_NAME		666244	0					
ANR	666366	Argument	"""w"""		666244	3					
ANR	666367	PrimaryExpression	"""w"""		666244	0					
ANR	666368	IfStatement	if ( ! oldMap )		666244	1					
ANR	666369	Condition	! oldMap	910:16:29949:29955	666244	0	True				
ANR	666370	UnaryOperationExpression	! oldMap		666244	0					
ANR	666371	UnaryOperator	!		666244	0					
ANR	666372	Identifier	oldMap		666244	1					
ANR	666373	ReturnStatement	return ;	911:16:29974:29980	666244	1	True				
ANR	666374	ExpressionStatement	"MapFileWriteVersion ( oldMap , MAP_FILE_VERSION )"	912:12:29994:30039	666244	2	True				
ANR	666375	CallExpression	"MapFileWriteVersion ( oldMap , MAP_FILE_VERSION )"		666244	0					
ANR	666376	Callee	MapFileWriteVersion		666244	0					
ANR	666377	Identifier	MapFileWriteVersion		666244	0					
ANR	666378	ArgumentList	oldMap		666244	1					
ANR	666379	Argument	oldMap		666244	0					
ANR	666380	Identifier	oldMap		666244	0					
ANR	666381	Argument	MAP_FILE_VERSION		666244	1					
ANR	666382	Identifier	MAP_FILE_VERSION		666244	0					
ANR	666383	ExpressionStatement	"MapFileWrite ( oldMap , Fname , InitialNumber )"	913:12:30053:30095	666244	3	True				
ANR	666384	CallExpression	"MapFileWrite ( oldMap , Fname , InitialNumber )"		666244	0					
ANR	666385	Callee	MapFileWrite		666244	0					
ANR	666386	Identifier	MapFileWrite		666244	0					
ANR	666387	ArgumentList	oldMap		666244	1					
ANR	666388	Argument	oldMap		666244	0					
ANR	666389	Identifier	oldMap		666244	0					
ANR	666390	Argument	Fname		666244	1					
ANR	666391	Identifier	Fname		666244	0					
ANR	666392	Argument	InitialNumber		666244	2					
ANR	666393	Identifier	InitialNumber		666244	0					
ANR	666394	ExpressionStatement	fclose ( oldMap )	914:12:30109:30123	666244	4	True				
ANR	666395	CallExpression	fclose ( oldMap )		666244	0					
ANR	666396	Callee	fclose		666244	0					
ANR	666397	Identifier	fclose		666244	0					
ANR	666398	ArgumentList	oldMap		666244	1					
ANR	666399	Argument	oldMap		666244	0					
ANR	666400	Identifier	oldMap		666244	0					
ANR	666401	ElseStatement	else		666244	0					
ANR	666402	CompoundStatement		29:13:892:892	666244	0					
ANR	666403	ExpressionStatement	"MapFileUnlink ( mem , root_name , TEMP_FILE_NAME )"	917:12:30162:30207	666244	0	True				
ANR	666404	CallExpression	"MapFileUnlink ( mem , root_name , TEMP_FILE_NAME )"		666244	0					
ANR	666405	Callee	MapFileUnlink		666244	0					
ANR	666406	Identifier	MapFileUnlink		666244	0					
ANR	666407	ArgumentList	mem		666244	1					
ANR	666408	Argument	mem		666244	0					
ANR	666409	Identifier	mem		666244	0					
ANR	666410	Argument	root_name		666244	1					
ANR	666411	Identifier	root_name		666244	0					
ANR	666412	Argument	TEMP_FILE_NAME		666244	2					
ANR	666413	Identifier	TEMP_FILE_NAME		666244	0					
ANR	666414	ExpressionStatement	"newMap = MapFileOpen ( mem , root_name , TEMP_FILE_NAME , ""w"" )"	918:12:30221:30278	666244	1	True				
ANR	666415	AssignmentExpression	"newMap = MapFileOpen ( mem , root_name , TEMP_FILE_NAME , ""w"" )"		666244	0		=			
ANR	666416	Identifier	newMap		666244	0					
ANR	666417	CallExpression	"MapFileOpen ( mem , root_name , TEMP_FILE_NAME , ""w"" )"		666244	1					
ANR	666418	Callee	MapFileOpen		666244	0					
ANR	666419	Identifier	MapFileOpen		666244	0					
ANR	666420	ArgumentList	mem		666244	1					
ANR	666421	Argument	mem		666244	0					
ANR	666422	Identifier	mem		666244	0					
ANR	666423	Argument	root_name		666244	1					
ANR	666424	Identifier	root_name		666244	0					
ANR	666425	Argument	TEMP_FILE_NAME		666244	2					
ANR	666426	Identifier	TEMP_FILE_NAME		666244	0					
ANR	666427	Argument	"""w"""		666244	3					
ANR	666428	PrimaryExpression	"""w"""		666244	0					
ANR	666429	IfStatement	if ( newMap != NULL )		666244	2					
ANR	666430	Condition	newMap != NULL	919:16:30296:30309	666244	0	True				
ANR	666431	EqualityExpression	newMap != NULL		666244	0		!=			
ANR	666432	Identifier	newMap		666244	0					
ANR	666433	Identifier	NULL		666244	1					
ANR	666434	CompoundStatement		32:32:1056:1056	666244	1					
ANR	666435	ExpressionStatement	"MapFileWriteVersion ( newMap , MAP_FILE_VERSION )"	920:16:30330:30375	666244	0	True				
ANR	666436	CallExpression	"MapFileWriteVersion ( newMap , MAP_FILE_VERSION )"		666244	0					
ANR	666437	Callee	MapFileWriteVersion		666244	0					
ANR	666438	Identifier	MapFileWriteVersion		666244	0					
ANR	666439	ArgumentList	newMap		666244	1					
ANR	666440	Argument	newMap		666244	0					
ANR	666441	Identifier	newMap		666244	0					
ANR	666442	Argument	MAP_FILE_VERSION		666244	1					
ANR	666443	Identifier	MAP_FILE_VERSION		666244	0					
ANR	666444	WhileStatement	"while ( MapFileRead ( oldMap , name , & d ) )"		666244	1					
ANR	666445	Condition	"MapFileRead ( oldMap , name , & d )"	921:23:30400:30428	666244	0	True				
ANR	666446	CallExpression	"MapFileRead ( oldMap , name , & d )"		666244	0					
ANR	666447	Callee	MapFileRead		666244	0					
ANR	666448	Identifier	MapFileRead		666244	0					
ANR	666449	ArgumentList	oldMap		666244	1					
ANR	666450	Argument	oldMap		666244	0					
ANR	666451	Identifier	oldMap		666244	0					
ANR	666452	Argument	name		666244	1					
ANR	666453	Identifier	name		666244	0					
ANR	666454	Argument	& d		666244	2					
ANR	666455	UnaryOperationExpression	& d		666244	0					
ANR	666456	UnaryOperator	&		666244	0					
ANR	666457	Identifier	d		666244	1					
ANR	666458	CompoundStatement		34:54:1175:1175	666244	1					
ANR	666459	ExpressionStatement	"MapFileWrite ( newMap , name , d )"	922:20:30453:30482	666244	0	True				
ANR	666460	CallExpression	"MapFileWrite ( newMap , name , d )"		666244	0					
ANR	666461	Callee	MapFileWrite		666244	0					
ANR	666462	Identifier	MapFileWrite		666244	0					
ANR	666463	ArgumentList	newMap		666244	1					
ANR	666464	Argument	newMap		666244	0					
ANR	666465	Identifier	newMap		666244	0					
ANR	666466	Argument	name		666244	1					
ANR	666467	Identifier	name		666244	0					
ANR	666468	Argument	d		666244	2					
ANR	666469	Identifier	d		666244	0					
ANR	666470	IfStatement	if ( dmax < d )		666244	1					
ANR	666471	Condition	dmax < d	923:24:30508:30515	666244	0	True				
ANR	666472	RelationalExpression	dmax < d		666244	0		<			
ANR	666473	Identifier	dmax		666244	0					
ANR	666474	Identifier	d		666244	1					
ANR	666475	ExpressionStatement	dmax = d	924:24:30542:30550	666244	1	True				
ANR	666476	AssignmentExpression	dmax = d		666244	0		=			
ANR	666477	Identifier	dmax		666244	0					
ANR	666478	Identifier	d		666244	1					
ANR	666479	ExpressionStatement	dmax += 1	927:16:30587:30596	666244	2	True				
ANR	666480	AssignmentExpression	dmax += 1		666244	0		+=			
ANR	666481	Identifier	dmax		666244	0					
ANR	666482	PrimaryExpression	1		666244	1					
ANR	666483	ExpressionStatement	"MapFileWrite ( newMap , Fname , dmax )"	928:16:30614:30647	666244	3	True				
ANR	666484	CallExpression	"MapFileWrite ( newMap , Fname , dmax )"		666244	0					
ANR	666485	Callee	MapFileWrite		666244	0					
ANR	666486	Identifier	MapFileWrite		666244	0					
ANR	666487	ArgumentList	newMap		666244	1					
ANR	666488	Argument	newMap		666244	0					
ANR	666489	Identifier	newMap		666244	0					
ANR	666490	Argument	Fname		666244	1					
ANR	666491	Identifier	Fname		666244	0					
ANR	666492	Argument	dmax		666244	2					
ANR	666493	Identifier	dmax		666244	0					
ANR	666494	ExpressionStatement	fclose ( newMap )	929:16:30665:30679	666244	4	True				
ANR	666495	CallExpression	fclose ( newMap )		666244	0					
ANR	666496	Callee	fclose		666244	0					
ANR	666497	Identifier	fclose		666244	0					
ANR	666498	ArgumentList	newMap		666244	1					
ANR	666499	Argument	newMap		666244	0					
ANR	666500	Identifier	newMap		666244	0					
ANR	666501	ExpressionStatement	fclose ( oldMap )	930:16:30697:30711	666244	5	True				
ANR	666502	CallExpression	fclose ( oldMap )		666244	0					
ANR	666503	Callee	fclose		666244	0					
ANR	666504	Identifier	fclose		666244	0					
ANR	666505	ArgumentList	oldMap		666244	1					
ANR	666506	Argument	oldMap		666244	0					
ANR	666507	Identifier	oldMap		666244	0					
ANR	666508	ExpressionStatement	"MapFileUnlink ( mem , root_name , MAP_FILE_NAME )"	931:16:30729:30773	666244	6	True				
ANR	666509	CallExpression	"MapFileUnlink ( mem , root_name , MAP_FILE_NAME )"		666244	0					
ANR	666510	Callee	MapFileUnlink		666244	0					
ANR	666511	Identifier	MapFileUnlink		666244	0					
ANR	666512	ArgumentList	mem		666244	1					
ANR	666513	Argument	mem		666244	0					
ANR	666514	Identifier	mem		666244	0					
ANR	666515	Argument	root_name		666244	1					
ANR	666516	Identifier	root_name		666244	0					
ANR	666517	Argument	MAP_FILE_NAME		666244	2					
ANR	666518	Identifier	MAP_FILE_NAME		666244	0					
ANR	666519	ExpressionStatement	"MapFileRename ( mem , root_name , MAP_FILE_NAME , TEMP_FILE_NAME )"	932:16:30791:30851	666244	7	True				
ANR	666520	CallExpression	"MapFileRename ( mem , root_name , MAP_FILE_NAME , TEMP_FILE_NAME )"		666244	0					
ANR	666521	Callee	MapFileRename		666244	0					
ANR	666522	Identifier	MapFileRename		666244	0					
ANR	666523	ArgumentList	mem		666244	1					
ANR	666524	Argument	mem		666244	0					
ANR	666525	Identifier	mem		666244	0					
ANR	666526	Argument	root_name		666244	1					
ANR	666527	Identifier	root_name		666244	0					
ANR	666528	Argument	MAP_FILE_NAME		666244	2					
ANR	666529	Identifier	MAP_FILE_NAME		666244	0					
ANR	666530	Argument	TEMP_FILE_NAME		666244	3					
ANR	666531	Identifier	TEMP_FILE_NAME		666244	0					
ANR	666532	ExpressionStatement	"gs_free_object ( mem , name , ""map_file_name_add(name)"" )"	935:8:30885:30938	666244	3	True				
ANR	666533	CallExpression	"gs_free_object ( mem , name , ""map_file_name_add(name)"" )"		666244	0					
ANR	666534	Callee	gs_free_object		666244	0					
ANR	666535	Identifier	gs_free_object		666244	0					
ANR	666536	ArgumentList	mem		666244	1					
ANR	666537	Argument	mem		666244	0					
ANR	666538	Identifier	mem		666244	0					
ANR	666539	Argument	name		666244	1					
ANR	666540	Identifier	name		666244	0					
ANR	666541	Argument	"""map_file_name_add(name)"""		666244	2					
ANR	666542	PrimaryExpression	"""map_file_name_add(name)"""		666244	0					
ANR	666543	ReturnType	static void		666244	1					
ANR	666544	Identifier	map_file_name_add		666244	2					
ANR	666545	ParameterList	"gs_memory_t * mem , const char * root_name , const char * Fname"		666244	3					
ANR	666546	Parameter	gs_memory_t * mem	887:18:29193:29208	666244	0	True				
ANR	666547	ParameterType	gs_memory_t *		666244	0					
ANR	666548	Identifier	mem		666244	1					
ANR	666549	Parameter	const char * root_name	887:36:29211:29232	666244	1	True				
ANR	666550	ParameterType	const char *		666244	0					
ANR	666551	Identifier	root_name		666244	1					
ANR	666552	Parameter	const char * Fname	887:60:29235:29252	666244	2	True				
ANR	666553	ParameterType	const char *		666244	0					
ANR	666554	Identifier	Fname		666244	1					
ANR	666555	CFGEntryNode	ENTRY		666244		True				
ANR	666556	CFGExitNode	EXIT		666244		True				
ANR	666557	Symbol	file_version		666244						
ANR	666558	Symbol	gs_alloc_bytes		666244						
ANR	666559	Symbol	TEMP_FILE_NAME		666244						
ANR	666560	Symbol	NULL		666244						
ANR	666561	Symbol	d		666244						
ANR	666562	Symbol	MapFileReadVersion		666244						
ANR	666563	Symbol	InitialNumber		666244						
ANR	666564	Symbol	MAP_FILE_VERSION		666244						
ANR	666565	Symbol	root_name		666244						
ANR	666566	Symbol	newMap		666244						
ANR	666567	Symbol	gp_file_name_sizeof		666244						
ANR	666568	Symbol	& d		666244						
ANR	666569	Symbol	MAP_FILE_NAME		666244						
ANR	666570	Symbol	MapFileOpen		666244						
ANR	666571	Symbol	& file_version		666244						
ANR	666572	Symbol	dmax		666244						
ANR	666573	Symbol	mem		666244						
ANR	666574	Symbol	name		666244						
ANR	666575	Symbol	Fname		666244						
ANR	666576	Symbol	MapFileRead		666244						
ANR	666577	Symbol	oldMap		666244						
ANR	666578	Function	map_file_name_ren	948:0:31378:33027							
ANR	666579	FunctionDef	"map_file_name_ren (gs_memory_t * mem , const char * root_name , const char * oldname , const char * newname)"		666578	0					
ANR	666580	CompoundStatement		950:0:31493:33027	666578	0					
ANR	666581	IdentifierDeclStatement	"int d = MapToFile ( mem , root_name , oldname ) ;"	953:4:31535:31577	666578	0	True				
ANR	666582	IdentifierDecl	"d = MapToFile ( mem , root_name , oldname )"		666578	0					
ANR	666583	IdentifierDeclType	int		666578	0					
ANR	666584	Identifier	d		666578	1					
ANR	666585	AssignmentExpression	"d = MapToFile ( mem , root_name , oldname )"		666578	2		=			
ANR	666586	Identifier	d		666578	0					
ANR	666587	CallExpression	"MapToFile ( mem , root_name , oldname )"		666578	1					
ANR	666588	Callee	MapToFile		666578	0					
ANR	666589	Identifier	MapToFile		666578	0					
ANR	666590	ArgumentList	mem		666578	1					
ANR	666591	Argument	mem		666578	0					
ANR	666592	Identifier	mem		666578	0					
ANR	666593	Argument	root_name		666578	1					
ANR	666594	Identifier	root_name		666578	0					
ANR	666595	Argument	oldname		666578	2					
ANR	666596	Identifier	oldname		666578	0					
ANR	666597	IdentifierDeclStatement	int file_version ;	954:4:31583:31599	666578	1	True				
ANR	666598	IdentifierDecl	file_version		666578	0					
ANR	666599	IdentifierDeclType	int		666578	0					
ANR	666600	Identifier	file_version		666578	1					
ANR	666601	IdentifierDeclStatement	"char * name = ( char * ) gs_alloc_bytes ( mem , gp_file_name_sizeof , ""map_file_name_ren(name)"" ) ;"	955:4:31605:31693	666578	2	True				
ANR	666602	IdentifierDecl	"* name = ( char * ) gs_alloc_bytes ( mem , gp_file_name_sizeof , ""map_file_name_ren(name)"" )"		666578	0					
ANR	666603	IdentifierDeclType	char *		666578	0					
ANR	666604	Identifier	name		666578	1					
ANR	666605	AssignmentExpression	"* name = ( char * ) gs_alloc_bytes ( mem , gp_file_name_sizeof , ""map_file_name_ren(name)"" )"		666578	2		=			
ANR	666606	Identifier	name		666578	0					
ANR	666607	CastExpression	"( char * ) gs_alloc_bytes ( mem , gp_file_name_sizeof , ""map_file_name_ren(name)"" )"		666578	1					
ANR	666608	CastTarget	char *		666578	0					
ANR	666609	CallExpression	"gs_alloc_bytes ( mem , gp_file_name_sizeof , ""map_file_name_ren(name)"" )"		666578	1					
ANR	666610	Callee	gs_alloc_bytes		666578	0					
ANR	666611	Identifier	gs_alloc_bytes		666578	0					
ANR	666612	ArgumentList	mem		666578	1					
ANR	666613	Argument	mem		666578	0					
ANR	666614	Identifier	mem		666578	0					
ANR	666615	Argument	gp_file_name_sizeof		666578	1					
ANR	666616	Identifier	gp_file_name_sizeof		666578	0					
ANR	666617	Argument	"""map_file_name_ren(name)"""		666578	2					
ANR	666618	PrimaryExpression	"""map_file_name_ren(name)"""		666578	0					
ANR	666619	IfStatement	if ( name && d != - 1 )		666578	3					
ANR	666620	Condition	name && d != - 1	957:8:31704:31718	666578	0	True				
ANR	666621	AndExpression	name && d != - 1		666578	0		&&			
ANR	666622	Identifier	name		666578	0					
ANR	666623	EqualityExpression	d != - 1		666578	1		!=			
ANR	666624	Identifier	d		666578	0					
ANR	666625	UnaryOperationExpression	- 1		666578	1					
ANR	666626	UnaryOperator	-		666578	0					
ANR	666627	PrimaryExpression	1		666578	1					
ANR	666628	CompoundStatement		10:8:290:304	666578	1					
ANR	666629	IdentifierDeclStatement	FILE * newMap ;	958:8:31760:31774	666578	0	True				
ANR	666630	IdentifierDecl	* newMap		666578	0					
ANR	666631	IdentifierDeclType	FILE *		666578	0					
ANR	666632	Identifier	newMap		666578	1					
ANR	666633	IdentifierDeclStatement	FILE * oldMap ;	959:8:31784:31798	666578	1	True				
ANR	666634	IdentifierDecl	* oldMap		666578	0					
ANR	666635	IdentifierDeclType	FILE *		666578	0					
ANR	666636	Identifier	oldMap		666578	1					
ANR	666637	ExpressionStatement	"MapFileUnlink ( mem , root_name , TEMP_FILE_NAME )"	963:8:31865:31911	666578	2	True				
ANR	666638	CallExpression	"MapFileUnlink ( mem , root_name , TEMP_FILE_NAME )"		666578	0					
ANR	666639	Callee	MapFileUnlink		666578	0					
ANR	666640	Identifier	MapFileUnlink		666578	0					
ANR	666641	ArgumentList	mem		666578	1					
ANR	666642	Argument	mem		666578	0					
ANR	666643	Identifier	mem		666578	0					
ANR	666644	Argument	root_name		666578	1					
ANR	666645	Identifier	root_name		666578	0					
ANR	666646	Argument	TEMP_FILE_NAME		666578	2					
ANR	666647	Identifier	TEMP_FILE_NAME		666578	0					
ANR	666648	ExpressionStatement	"newMap = MapFileOpen ( mem , root_name , TEMP_FILE_NAME , ""w"" )"	964:8:31921:31978	666578	3	True				
ANR	666649	AssignmentExpression	"newMap = MapFileOpen ( mem , root_name , TEMP_FILE_NAME , ""w"" )"		666578	0		=			
ANR	666650	Identifier	newMap		666578	0					
ANR	666651	CallExpression	"MapFileOpen ( mem , root_name , TEMP_FILE_NAME , ""w"" )"		666578	1					
ANR	666652	Callee	MapFileOpen		666578	0					
ANR	666653	Identifier	MapFileOpen		666578	0					
ANR	666654	ArgumentList	mem		666578	1					
ANR	666655	Argument	mem		666578	0					
ANR	666656	Identifier	mem		666578	0					
ANR	666657	Argument	root_name		666578	1					
ANR	666658	Identifier	root_name		666578	0					
ANR	666659	Argument	TEMP_FILE_NAME		666578	2					
ANR	666660	Identifier	TEMP_FILE_NAME		666578	0					
ANR	666661	Argument	"""w"""		666578	3					
ANR	666662	PrimaryExpression	"""w"""		666578	0					
ANR	666663	IfStatement	if ( newMap == NULL )		666578	4					
ANR	666664	Condition	newMap == NULL	965:12:31992:32005	666578	0	True				
ANR	666665	EqualityExpression	newMap == NULL		666578	0		==			
ANR	666666	Identifier	newMap		666578	0					
ANR	666667	Identifier	NULL		666578	1					
ANR	666668	ReturnStatement	return ;	966:12:32020:32026	666578	1	True				
ANR	666669	ExpressionStatement	"oldMap = MapFileOpen ( mem , root_name , MAP_FILE_NAME , ""r"" )"	967:8:32036:32092	666578	5	True				
ANR	666670	AssignmentExpression	"oldMap = MapFileOpen ( mem , root_name , MAP_FILE_NAME , ""r"" )"		666578	0		=			
ANR	666671	Identifier	oldMap		666578	0					
ANR	666672	CallExpression	"MapFileOpen ( mem , root_name , MAP_FILE_NAME , ""r"" )"		666578	1					
ANR	666673	Callee	MapFileOpen		666578	0					
ANR	666674	Identifier	MapFileOpen		666578	0					
ANR	666675	ArgumentList	mem		666578	1					
ANR	666676	Argument	mem		666578	0					
ANR	666677	Identifier	mem		666578	0					
ANR	666678	Argument	root_name		666578	1					
ANR	666679	Identifier	root_name		666578	0					
ANR	666680	Argument	MAP_FILE_NAME		666578	2					
ANR	666681	Identifier	MAP_FILE_NAME		666578	0					
ANR	666682	Argument	"""r"""		666578	3					
ANR	666683	PrimaryExpression	"""r"""		666578	0					
ANR	666684	IfStatement	"if ( oldMap != NULL && ( ! MapFileReadVersion ( oldMap , & file_version ) || file_version != MAP_FILE_VERSION ) )"		666578	6					
ANR	666685	Condition	"oldMap != NULL && ( ! MapFileReadVersion ( oldMap , & file_version ) || file_version != MAP_FILE_VERSION )"	968:12:32106:32215	666578	0	True				
ANR	666686	AndExpression	"oldMap != NULL && ( ! MapFileReadVersion ( oldMap , & file_version ) || file_version != MAP_FILE_VERSION )"		666578	0		&&			
ANR	666687	EqualityExpression	oldMap != NULL		666578	0		!=			
ANR	666688	Identifier	oldMap		666578	0					
ANR	666689	Identifier	NULL		666578	1					
ANR	666690	OrExpression	"! MapFileReadVersion ( oldMap , & file_version ) || file_version != MAP_FILE_VERSION"		666578	1		||			
ANR	666691	UnaryOperationExpression	"! MapFileReadVersion ( oldMap , & file_version )"		666578	0					
ANR	666692	UnaryOperator	!		666578	0					
ANR	666693	CallExpression	"MapFileReadVersion ( oldMap , & file_version )"		666578	1					
ANR	666694	Callee	MapFileReadVersion		666578	0					
ANR	666695	Identifier	MapFileReadVersion		666578	0					
ANR	666696	ArgumentList	oldMap		666578	1					
ANR	666697	Argument	oldMap		666578	0					
ANR	666698	Identifier	oldMap		666578	0					
ANR	666699	Argument	& file_version		666578	1					
ANR	666700	UnaryOperationExpression	& file_version		666578	0					
ANR	666701	UnaryOperator	&		666578	0					
ANR	666702	Identifier	file_version		666578	1					
ANR	666703	EqualityExpression	file_version != MAP_FILE_VERSION		666578	1		!=			
ANR	666704	Identifier	file_version		666578	0					
ANR	666705	Identifier	MAP_FILE_VERSION		666578	1					
ANR	666706	CompoundStatement		20:50:724:724	666578	1					
ANR	666707	ExpressionStatement	fclose ( oldMap )	970:12:32232:32246	666578	0	True				
ANR	666708	CallExpression	fclose ( oldMap )		666578	0					
ANR	666709	Callee	fclose		666578	0					
ANR	666710	Identifier	fclose		666578	0					
ANR	666711	ArgumentList	oldMap		666578	1					
ANR	666712	Argument	oldMap		666578	0					
ANR	666713	Identifier	oldMap		666578	0					
ANR	666714	ExpressionStatement	oldMap = NULL	971:12:32260:32272	666578	1	True				
ANR	666715	AssignmentExpression	oldMap = NULL		666578	0		=			
ANR	666716	Identifier	oldMap		666578	0					
ANR	666717	Identifier	NULL		666578	1					
ANR	666718	IfStatement	if ( oldMap == NULL )		666578	7					
ANR	666719	Condition	oldMap == NULL	973:12:32296:32309	666578	0	True				
ANR	666720	EqualityExpression	oldMap == NULL		666578	0		==			
ANR	666721	Identifier	oldMap		666578	0					
ANR	666722	Identifier	NULL		666578	1					
ANR	666723	CompoundStatement		24:28:818:818	666578	1					
ANR	666724	ExpressionStatement	fclose ( newMap )	974:12:32326:32340	666578	0	True				
ANR	666725	CallExpression	fclose ( newMap )		666578	0					
ANR	666726	Callee	fclose		666578	0					
ANR	666727	Identifier	fclose		666578	0					
ANR	666728	ArgumentList	newMap		666578	1					
ANR	666729	Argument	newMap		666578	0					
ANR	666730	Identifier	newMap		666578	0					
ANR	666731	ExpressionStatement	"MapFileUnlink ( mem , root_name , TEMP_FILE_NAME )"	975:12:32354:32399	666578	1	True				
ANR	666732	CallExpression	"MapFileUnlink ( mem , root_name , TEMP_FILE_NAME )"		666578	0					
ANR	666733	Callee	MapFileUnlink		666578	0					
ANR	666734	Identifier	MapFileUnlink		666578	0					
ANR	666735	ArgumentList	mem		666578	1					
ANR	666736	Argument	mem		666578	0					
ANR	666737	Identifier	mem		666578	0					
ANR	666738	Argument	root_name		666578	1					
ANR	666739	Identifier	root_name		666578	0					
ANR	666740	Argument	TEMP_FILE_NAME		666578	2					
ANR	666741	Identifier	TEMP_FILE_NAME		666578	0					
ANR	666742	ReturnStatement	return ;	976:12:32413:32419	666578	2	True				
ANR	666743	ExpressionStatement	"MapFileWriteVersion ( newMap , MAP_FILE_VERSION )"	981:8:32514:32559	666578	8	True				
ANR	666744	CallExpression	"MapFileWriteVersion ( newMap , MAP_FILE_VERSION )"		666578	0					
ANR	666745	Callee	MapFileWriteVersion		666578	0					
ANR	666746	Identifier	MapFileWriteVersion		666578	0					
ANR	666747	ArgumentList	newMap		666578	1					
ANR	666748	Argument	newMap		666578	0					
ANR	666749	Identifier	newMap		666578	0					
ANR	666750	Argument	MAP_FILE_VERSION		666578	1					
ANR	666751	Identifier	MAP_FILE_VERSION		666578	0					
ANR	666752	WhileStatement	"while ( MapFileRead ( oldMap , name , & d ) )"		666578	9					
ANR	666753	Condition	"MapFileRead ( oldMap , name , & d )"	982:15:32607:32635	666578	0	True				
ANR	666754	CallExpression	"MapFileRead ( oldMap , name , & d )"		666578	0					
ANR	666755	Callee	MapFileRead		666578	0					
ANR	666756	Identifier	MapFileRead		666578	0					
ANR	666757	ArgumentList	oldMap		666578	1					
ANR	666758	Argument	oldMap		666578	0					
ANR	666759	Identifier	oldMap		666578	0					
ANR	666760	Argument	name		666578	1					
ANR	666761	Identifier	name		666578	0					
ANR	666762	Argument	& d		666578	2					
ANR	666763	UnaryOperationExpression	& d		666578	0					
ANR	666764	UnaryOperator	&		666578	0					
ANR	666765	Identifier	d		666578	1					
ANR	666766	IfStatement	"if ( strcmp ( name , oldname ) )"		666578	1					
ANR	666767	Condition	"strcmp ( name , oldname )"	983:16:32654:32674	666578	0	True				
ANR	666768	CallExpression	"strcmp ( name , oldname )"		666578	0					
ANR	666769	Callee	strcmp		666578	0					
ANR	666770	Identifier	strcmp		666578	0					
ANR	666771	ArgumentList	name		666578	1					
ANR	666772	Argument	name		666578	0					
ANR	666773	Identifier	name		666578	0					
ANR	666774	Argument	oldname		666578	1					
ANR	666775	Identifier	oldname		666578	0					
ANR	666776	ExpressionStatement	"MapFileWrite ( newMap , name , d )"	984:16:32693:32722	666578	1	True				
ANR	666777	CallExpression	"MapFileWrite ( newMap , name , d )"		666578	0					
ANR	666778	Callee	MapFileWrite		666578	0					
ANR	666779	Identifier	MapFileWrite		666578	0					
ANR	666780	ArgumentList	newMap		666578	1					
ANR	666781	Argument	newMap		666578	0					
ANR	666782	Identifier	newMap		666578	0					
ANR	666783	Argument	name		666578	1					
ANR	666784	Identifier	name		666578	0					
ANR	666785	Argument	d		666578	2					
ANR	666786	Identifier	d		666578	0					
ANR	666787	ElseStatement	else		666578	0					
ANR	666788	ExpressionStatement	"MapFileWrite ( newMap , newname , d )"	986:16:32757:32789	666578	0	True				
ANR	666789	CallExpression	"MapFileWrite ( newMap , newname , d )"		666578	0					
ANR	666790	Callee	MapFileWrite		666578	0					
ANR	666791	Identifier	MapFileWrite		666578	0					
ANR	666792	ArgumentList	newMap		666578	1					
ANR	666793	Argument	newMap		666578	0					
ANR	666794	Identifier	newMap		666578	0					
ANR	666795	Argument	newname		666578	1					
ANR	666796	Identifier	newname		666578	0					
ANR	666797	Argument	d		666578	2					
ANR	666798	Identifier	d		666578	0					
ANR	666799	ExpressionStatement	fclose ( newMap )	987:8:32799:32813	666578	10	True				
ANR	666800	CallExpression	fclose ( newMap )		666578	0					
ANR	666801	Callee	fclose		666578	0					
ANR	666802	Identifier	fclose		666578	0					
ANR	666803	ArgumentList	newMap		666578	1					
ANR	666804	Argument	newMap		666578	0					
ANR	666805	Identifier	newMap		666578	0					
ANR	666806	ExpressionStatement	fclose ( oldMap )	988:8:32823:32837	666578	11	True				
ANR	666807	CallExpression	fclose ( oldMap )		666578	0					
ANR	666808	Callee	fclose		666578	0					
ANR	666809	Identifier	fclose		666578	0					
ANR	666810	ArgumentList	oldMap		666578	1					
ANR	666811	Argument	oldMap		666578	0					
ANR	666812	Identifier	oldMap		666578	0					
ANR	666813	ExpressionStatement	"MapFileUnlink ( mem , root_name , MAP_FILE_NAME )"	989:8:32847:32891	666578	12	True				
ANR	666814	CallExpression	"MapFileUnlink ( mem , root_name , MAP_FILE_NAME )"		666578	0					
ANR	666815	Callee	MapFileUnlink		666578	0					
ANR	666816	Identifier	MapFileUnlink		666578	0					
ANR	666817	ArgumentList	mem		666578	1					
ANR	666818	Argument	mem		666578	0					
ANR	666819	Identifier	mem		666578	0					
ANR	666820	Argument	root_name		666578	1					
ANR	666821	Identifier	root_name		666578	0					
ANR	666822	Argument	MAP_FILE_NAME		666578	2					
ANR	666823	Identifier	MAP_FILE_NAME		666578	0					
ANR	666824	ExpressionStatement	"MapFileRename ( mem , root_name , MAP_FILE_NAME , TEMP_FILE_NAME )"	990:8:32901:32961	666578	13	True				
ANR	666825	CallExpression	"MapFileRename ( mem , root_name , MAP_FILE_NAME , TEMP_FILE_NAME )"		666578	0					
ANR	666826	Callee	MapFileRename		666578	0					
ANR	666827	Identifier	MapFileRename		666578	0					
ANR	666828	ArgumentList	mem		666578	1					
ANR	666829	Argument	mem		666578	0					
ANR	666830	Identifier	mem		666578	0					
ANR	666831	Argument	root_name		666578	1					
ANR	666832	Identifier	root_name		666578	0					
ANR	666833	Argument	MAP_FILE_NAME		666578	2					
ANR	666834	Identifier	MAP_FILE_NAME		666578	0					
ANR	666835	Argument	TEMP_FILE_NAME		666578	3					
ANR	666836	Identifier	TEMP_FILE_NAME		666578	0					
ANR	666837	ExpressionStatement	"gs_free_object ( mem , name , ""map_file_name_ren(name)"" )"	992:4:32973:33025	666578	4	True				
ANR	666838	CallExpression	"gs_free_object ( mem , name , ""map_file_name_ren(name)"" )"		666578	0					
ANR	666839	Callee	gs_free_object		666578	0					
ANR	666840	Identifier	gs_free_object		666578	0					
ANR	666841	ArgumentList	mem		666578	1					
ANR	666842	Argument	mem		666578	0					
ANR	666843	Identifier	mem		666578	0					
ANR	666844	Argument	name		666578	1					
ANR	666845	Identifier	name		666578	0					
ANR	666846	Argument	"""map_file_name_ren(name)"""		666578	2					
ANR	666847	PrimaryExpression	"""map_file_name_ren(name)"""		666578	0					
ANR	666848	ReturnType	static void		666578	1					
ANR	666849	Identifier	map_file_name_ren		666578	2					
ANR	666850	ParameterList	"gs_memory_t * mem , const char * root_name , const char * oldname , const char * newname"		666578	3					
ANR	666851	Parameter	gs_memory_t * mem	949:18:31408:31423	666578	0	True				
ANR	666852	ParameterType	gs_memory_t *		666578	0					
ANR	666853	Identifier	mem		666578	1					
ANR	666854	Parameter	const char * root_name	949:36:31426:31446	666578	1	True				
ANR	666855	ParameterType	const char *		666578	0					
ANR	666856	Identifier	root_name		666578	1					
ANR	666857	Parameter	const char * oldname	949:59:31449:31468	666578	2	True				
ANR	666858	ParameterType	const char *		666578	0					
ANR	666859	Identifier	oldname		666578	1					
ANR	666860	Parameter	const char * newname	949:81:31471:31490	666578	3	True				
ANR	666861	ParameterType	const char *		666578	0					
ANR	666862	Identifier	newname		666578	1					
ANR	666863	CFGEntryNode	ENTRY		666578		True				
ANR	666864	CFGExitNode	EXIT		666578		True				
ANR	666865	Symbol	file_version		666578						
ANR	666866	Symbol	strcmp		666578						
ANR	666867	Symbol	oldname		666578						
ANR	666868	Symbol	gs_alloc_bytes		666578						
ANR	666869	Symbol	TEMP_FILE_NAME		666578						
ANR	666870	Symbol	NULL		666578						
ANR	666871	Symbol	d		666578						
ANR	666872	Symbol	MapFileReadVersion		666578						
ANR	666873	Symbol	MapToFile		666578						
ANR	666874	Symbol	MAP_FILE_VERSION		666578						
ANR	666875	Symbol	root_name		666578						
ANR	666876	Symbol	newMap		666578						
ANR	666877	Symbol	gp_file_name_sizeof		666578						
ANR	666878	Symbol	& d		666578						
ANR	666879	Symbol	MAP_FILE_NAME		666578						
ANR	666880	Symbol	newname		666578						
ANR	666881	Symbol	MapFileOpen		666578						
ANR	666882	Symbol	& file_version		666578						
ANR	666883	Symbol	mem		666578						
ANR	666884	Symbol	name		666578						
ANR	666885	Symbol	MapFileRead		666578						
ANR	666886	Symbol	oldMap		666578						
