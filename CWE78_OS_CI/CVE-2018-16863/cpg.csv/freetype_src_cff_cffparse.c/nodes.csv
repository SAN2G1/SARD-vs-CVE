command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3451102	File	data/converged/CVE-2018-16863_ghostpdl/freetype_src_cff_cffparse.c								
ANR	3451103	Function	cff_parser_init	42:2:2041:2991							
ANR	3451104	FunctionDef	"cff_parser_init (CFF_Parser parser , FT_UInt code , void * object , FT_Library library , FT_UInt stackSize , FT_UShort num_designs , FT_UShort num_axes)"		3451103	0					
ANR	3451105	CompoundStatement		49:2:2324:2991	3451103	0					
ANR	3451106	IdentifierDeclStatement	FT_Memory memory = library -> memory ;	50:4:2330:2365	3451103	0	True				
ANR	3451107	IdentifierDecl	memory = library -> memory		3451103	0					
ANR	3451108	IdentifierDeclType	FT_Memory		3451103	0					
ANR	3451109	Identifier	memory		3451103	1					
ANR	3451110	AssignmentExpression	memory = library -> memory		3451103	2		=			
ANR	3451111	Identifier	memory		3451103	0					
ANR	3451112	PtrMemberAccess	library -> memory		3451103	1					
ANR	3451113	Identifier	library		3451103	0					
ANR	3451114	Identifier	memory		3451103	1					
ANR	3451115	IdentifierDeclStatement	FT_Error error ;	51:4:2397:2413	3451103	1	True				
ANR	3451116	IdentifierDecl	error		3451103	0					
ANR	3451117	IdentifierDeclType	FT_Error		3451103	0					
ANR	3451118	Identifier	error		3451103	1					
ANR	3451119	ExpressionStatement	FT_ZERO ( parser )	54:4:2466:2483	3451103	2	True				
ANR	3451120	CallExpression	FT_ZERO ( parser )		3451103	0					
ANR	3451121	Callee	FT_ZERO		3451103	0					
ANR	3451122	Identifier	FT_ZERO		3451103	0					
ANR	3451123	ArgumentList	parser		3451103	1					
ANR	3451124	Argument	parser		3451103	0					
ANR	3451125	Identifier	parser		3451103	0					
ANR	3451126	ExpressionStatement	parser -> top = parser -> stack	57:4:2496:2531	3451103	3	True				
ANR	3451127	AssignmentExpression	parser -> top = parser -> stack		3451103	0		=			
ANR	3451128	PtrMemberAccess	parser -> top		3451103	0					
ANR	3451129	Identifier	parser		3451103	0					
ANR	3451130	Identifier	top		3451103	1					
ANR	3451131	PtrMemberAccess	parser -> stack		3451103	1					
ANR	3451132	Identifier	parser		3451103	0					
ANR	3451133	Identifier	stack		3451103	1					
ANR	3451134	ExpressionStatement	parser -> object_code = code	59:4:2544:2570	3451103	4	True				
ANR	3451135	AssignmentExpression	parser -> object_code = code		3451103	0		=			
ANR	3451136	PtrMemberAccess	parser -> object_code		3451103	0					
ANR	3451137	Identifier	parser		3451103	0					
ANR	3451138	Identifier	object_code		3451103	1					
ANR	3451139	Identifier	code		3451103	1					
ANR	3451140	ExpressionStatement	parser -> object = object	60:4:2576:2604	3451103	5	True				
ANR	3451141	AssignmentExpression	parser -> object = object		3451103	0		=			
ANR	3451142	PtrMemberAccess	parser -> object		3451103	0					
ANR	3451143	Identifier	parser		3451103	0					
ANR	3451144	Identifier	object		3451103	1					
ANR	3451145	Identifier	object		3451103	1					
ANR	3451146	ExpressionStatement	parser -> library = library	61:4:2610:2639	3451103	6	True				
ANR	3451147	AssignmentExpression	parser -> library = library		3451103	0		=			
ANR	3451148	PtrMemberAccess	parser -> library		3451103	0					
ANR	3451149	Identifier	parser		3451103	0					
ANR	3451150	Identifier	library		3451103	1					
ANR	3451151	Identifier	library		3451103	1					
ANR	3451152	ExpressionStatement	parser -> num_designs = num_designs	62:4:2645:2678	3451103	7	True				
ANR	3451153	AssignmentExpression	parser -> num_designs = num_designs		3451103	0		=			
ANR	3451154	PtrMemberAccess	parser -> num_designs		3451103	0					
ANR	3451155	Identifier	parser		3451103	0					
ANR	3451156	Identifier	num_designs		3451103	1					
ANR	3451157	Identifier	num_designs		3451103	1					
ANR	3451158	ExpressionStatement	parser -> num_axes = num_axes	63:4:2684:2714	3451103	8	True				
ANR	3451159	AssignmentExpression	parser -> num_axes = num_axes		3451103	0		=			
ANR	3451160	PtrMemberAccess	parser -> num_axes		3451103	0					
ANR	3451161	Identifier	parser		3451103	0					
ANR	3451162	Identifier	num_axes		3451103	1					
ANR	3451163	Identifier	num_axes		3451103	1					
ANR	3451164	IfStatement	"if ( FT_NEW_ARRAY ( parser -> stack , stackSize ) )"		3451103	9					
ANR	3451165	Condition	"FT_NEW_ARRAY ( parser -> stack , stackSize )"	66:9:2762:2801	3451103	0	True				
ANR	3451166	CallExpression	"FT_NEW_ARRAY ( parser -> stack , stackSize )"		3451103	0					
ANR	3451167	Callee	FT_NEW_ARRAY		3451103	0					
ANR	3451168	Identifier	FT_NEW_ARRAY		3451103	0					
ANR	3451169	ArgumentList	parser -> stack		3451103	1					
ANR	3451170	Argument	parser -> stack		3451103	0					
ANR	3451171	PtrMemberAccess	parser -> stack		3451103	0					
ANR	3451172	Identifier	parser		3451103	0					
ANR	3451173	Identifier	stack		3451103	1					
ANR	3451174	Argument	stackSize		3451103	1					
ANR	3451175	Identifier	stackSize		3451103	0					
ANR	3451176	CompoundStatement		19:4:484:484	3451103	1					
ANR	3451177	ExpressionStatement	FT_FREE ( parser -> stack )	68:6:2817:2841	3451103	0	True				
ANR	3451178	CallExpression	FT_FREE ( parser -> stack )		3451103	0					
ANR	3451179	Callee	FT_FREE		3451103	0					
ANR	3451180	Identifier	FT_FREE		3451103	0					
ANR	3451181	ArgumentList	parser -> stack		3451103	1					
ANR	3451182	Argument	parser -> stack		3451103	0					
ANR	3451183	PtrMemberAccess	parser -> stack		3451103	0					
ANR	3451184	Identifier	parser		3451103	0					
ANR	3451185	Identifier	stack		3451103	1					
ANR	3451186	GotoStatement	goto Exit ;	69:6:2849:2858	3451103	1	True				
ANR	3451187	Identifier	Exit		3451103	0					
ANR	3451188	ExpressionStatement	parser -> stackSize = stackSize	72:4:2871:2900	3451103	10	True				
ANR	3451189	AssignmentExpression	parser -> stackSize = stackSize		3451103	0		=			
ANR	3451190	PtrMemberAccess	parser -> stackSize		3451103	0					
ANR	3451191	Identifier	parser		3451103	0					
ANR	3451192	Identifier	stackSize		3451103	1					
ANR	3451193	Identifier	stackSize		3451103	1					
ANR	3451194	ExpressionStatement	parser -> top = parser -> stack	73:4:2906:2939	3451103	11	True				
ANR	3451195	AssignmentExpression	parser -> top = parser -> stack		3451103	0		=			
ANR	3451196	PtrMemberAccess	parser -> top		3451103	0					
ANR	3451197	Identifier	parser		3451103	0					
ANR	3451198	Identifier	top		3451103	1					
ANR	3451199	PtrMemberAccess	parser -> stack		3451103	1					
ANR	3451200	Identifier	parser		3451103	0					
ANR	3451201	Identifier	stack		3451103	1					
ANR	3451202	Label	Exit :	75:2:2965:2969	3451103	12	True				
ANR	3451203	Identifier	Exit		3451103	0					
ANR	3451204	ReturnStatement	return error ;	76:4:2975:2987	3451103	13	True				
ANR	3451205	Identifier	error		3451103	0					
ANR	3451206	Identifier	cff_parser_init		3451103	1					
ANR	3451207	ParameterList	"CFF_Parser parser , FT_UInt code , void * object , FT_Library library , FT_UInt stackSize , FT_UShort num_designs , FT_UShort num_axes"		3451103	2					
ANR	3451208	Parameter	CFF_Parser parser	42:19:2058:2075	3451103	0	True				
ANR	3451209	ParameterType	CFF_Parser		3451103	0					
ANR	3451210	Identifier	parser		3451103	1					
ANR	3451211	Parameter	FT_UInt code	43:19:2097:2112	3451103	1	True				
ANR	3451212	ParameterType	FT_UInt		3451103	0					
ANR	3451213	Identifier	code		3451103	1					
ANR	3451214	Parameter	void * object	44:19:2134:2151	3451103	2	True				
ANR	3451215	ParameterType	void *		3451103	0					
ANR	3451216	Identifier	object		3451103	1					
ANR	3451217	Parameter	FT_Library library	45:19:2173:2191	3451103	3	True				
ANR	3451218	ParameterType	FT_Library		3451103	0					
ANR	3451219	Identifier	library		3451103	1					
ANR	3451220	Parameter	FT_UInt stackSize	46:19:2213:2233	3451103	4	True				
ANR	3451221	ParameterType	FT_UInt		3451103	0					
ANR	3451222	Identifier	stackSize		3451103	1					
ANR	3451223	Parameter	FT_UShort num_designs	47:19:2255:2277	3451103	5	True				
ANR	3451224	ParameterType	FT_UShort		3451103	0					
ANR	3451225	Identifier	num_designs		3451103	1					
ANR	3451226	Parameter	FT_UShort num_axes	48:19:2299:2318	3451103	6	True				
ANR	3451227	ParameterType	FT_UShort		3451103	0					
ANR	3451228	Identifier	num_axes		3451103	1					
ANR	3451229	CFGEntryNode	ENTRY		3451103		True				
ANR	3451230	CFGExitNode	EXIT		3451103		True				
ANR	3451231	Symbol	parser -> stackSize		3451103						
ANR	3451232	Symbol	parser -> num_designs		3451103						
ANR	3451233	Symbol	* library		3451103						
ANR	3451234	Symbol	code		3451103						
ANR	3451235	Symbol	memory		3451103						
ANR	3451236	Symbol	parser -> object		3451103						
ANR	3451237	Symbol	library -> memory		3451103						
ANR	3451238	Symbol	num_designs		3451103						
ANR	3451239	Symbol	error		3451103						
ANR	3451240	Symbol	parser -> top		3451103						
ANR	3451241	Symbol	parser -> object_code		3451103						
ANR	3451242	Symbol	* parser		3451103						
ANR	3451243	Symbol	library		3451103						
ANR	3451244	Symbol	parser		3451103						
ANR	3451245	Symbol	stackSize		3451103						
ANR	3451246	Symbol	parser -> library		3451103						
ANR	3451247	Symbol	FT_NEW_ARRAY		3451103						
ANR	3451248	Symbol	num_axes		3451103						
ANR	3451249	Symbol	parser -> stack		3451103						
ANR	3451250	Symbol	parser -> num_axes		3451103						
ANR	3451251	Symbol	object		3451103						
ANR	3451252	Function	cff_parser_done	81:2:3020:3166							
ANR	3451253	FunctionDef	cff_parser_done (CFF_Parser parser)		3451252	0					
ANR	3451254	CompoundStatement		82:2:3060:3166	3451252	0					
ANR	3451255	IdentifierDeclStatement	FT_Memory memory = parser -> library -> memory ;	83:4:3066:3109	3451252	0	True				
ANR	3451256	IdentifierDecl	memory = parser -> library -> memory		3451252	0					
ANR	3451257	IdentifierDeclType	FT_Memory		3451252	0					
ANR	3451258	Identifier	memory		3451252	1					
ANR	3451259	AssignmentExpression	memory = parser -> library -> memory		3451252	2		=			
ANR	3451260	Identifier	memory		3451252	0					
ANR	3451261	PtrMemberAccess	parser -> library -> memory		3451252	1					
ANR	3451262	PtrMemberAccess	parser -> library		3451252	0					
ANR	3451263	Identifier	parser		3451252	0					
ANR	3451264	Identifier	library		3451252	1					
ANR	3451265	Identifier	memory		3451252	1					
ANR	3451266	ExpressionStatement	FT_FREE ( parser -> stack )	86:4:3138:3162	3451252	1	True				
ANR	3451267	CallExpression	FT_FREE ( parser -> stack )		3451252	0					
ANR	3451268	Callee	FT_FREE		3451252	0					
ANR	3451269	Identifier	FT_FREE		3451252	0					
ANR	3451270	ArgumentList	parser -> stack		3451252	1					
ANR	3451271	Argument	parser -> stack		3451252	0					
ANR	3451272	PtrMemberAccess	parser -> stack		3451252	0					
ANR	3451273	Identifier	parser		3451252	0					
ANR	3451274	Identifier	stack		3451252	1					
ANR	3451275	Identifier	cff_parser_done		3451252	1					
ANR	3451276	ParameterList	CFF_Parser parser		3451252	2					
ANR	3451277	Parameter	CFF_Parser parser	81:19:3037:3054	3451252	0	True				
ANR	3451278	ParameterType	CFF_Parser		3451252	0					
ANR	3451279	Identifier	parser		3451252	1					
ANR	3451280	CFGEntryNode	ENTRY		3451252		True				
ANR	3451281	CFGExitNode	EXIT		3451252		True				
ANR	3451282	Symbol	* parser		3451252						
ANR	3451283	Symbol	memory		3451252						
ANR	3451284	Symbol	parser		3451252						
ANR	3451285	Symbol	* * parser		3451252						
ANR	3451286	Symbol	parser -> library		3451252						
ANR	3451287	Symbol	parser -> library -> memory		3451252						
ANR	3451288	Symbol	* parser -> library		3451252						
ANR	3451289	Symbol	parser -> stack		3451252						
ANR	3451290	Function	cff_parse_integer	91:2:3196:4188							
ANR	3451291	FunctionDef	"cff_parse_integer (FT_Byte * start , FT_Byte * limit)"		3451290	0					
ANR	3451292	CompoundStatement		94:2:3290:4188	3451290	0					
ANR	3451293	IdentifierDeclStatement	FT_Byte * p = start ;	95:4:3296:3317	3451290	0	True				
ANR	3451294	IdentifierDecl	* p = start		3451290	0					
ANR	3451295	IdentifierDeclType	FT_Byte *		3451290	0					
ANR	3451296	Identifier	p		3451290	1					
ANR	3451297	AssignmentExpression	* p = start		3451290	2		=			
ANR	3451298	Identifier	start		3451290	0					
ANR	3451299	Identifier	start		3451290	1					
ANR	3451300	IdentifierDeclStatement	FT_Int v = * p ++ ;	96:4:3323:3343	3451290	1	True				
ANR	3451301	IdentifierDecl	v = * p ++		3451290	0					
ANR	3451302	IdentifierDeclType	FT_Int		3451290	0					
ANR	3451303	Identifier	v		3451290	1					
ANR	3451304	AssignmentExpression	v = * p ++		3451290	2		=			
ANR	3451305	Identifier	v		3451290	0					
ANR	3451306	UnaryOperationExpression	* p ++		3451290	1					
ANR	3451307	UnaryOperator	*		3451290	0					
ANR	3451308	PostIncDecOperationExpression	p ++		3451290	1					
ANR	3451309	Identifier	p		3451290	0					
ANR	3451310	IncDec	++		3451290	1					
ANR	3451311	IdentifierDeclStatement	FT_Long val = 0 ;	97:4:3349:3366	3451290	2	True				
ANR	3451312	IdentifierDecl	val = 0		3451290	0					
ANR	3451313	IdentifierDeclType	FT_Long		3451290	0					
ANR	3451314	Identifier	val		3451290	1					
ANR	3451315	AssignmentExpression	val = 0		3451290	2		=			
ANR	3451316	Identifier	val		3451290	0					
ANR	3451317	PrimaryExpression	0		3451290	1					
ANR	3451318	IfStatement	if ( v == 28 )		3451290	3					
ANR	3451319	Condition	v == 28	100:9:3379:3385	3451290	0	True				
ANR	3451320	EqualityExpression	v == 28		3451290	0		==			
ANR	3451321	Identifier	v		3451290	0					
ANR	3451322	PrimaryExpression	28		3451290	1					
ANR	3451323	CompoundStatement		8:4:102:102	3451290	1					
ANR	3451324	IfStatement	if ( p + 2 > limit )		3451290	0					
ANR	3451325	Condition	p + 2 > limit	102:11:3406:3418	3451290	0	True				
ANR	3451326	RelationalExpression	p + 2 > limit		3451290	0		>			
ANR	3451327	AdditiveExpression	p + 2		3451290	0		+			
ANR	3451328	Identifier	p		3451290	0					
ANR	3451329	PrimaryExpression	2		3451290	1					
ANR	3451330	Identifier	limit		3451290	1					
ANR	3451331	GotoStatement	goto Bad ;	103:8:3430:3438	3451290	1	True				
ANR	3451332	Identifier	Bad		3451290	0					
ANR	3451333	ExpressionStatement	val = ( FT_Short ) ( ( ( FT_UShort ) p [ 0 ] << 8 ) | p [ 1 ] )	105:6:3447:3498	3451290	1	True				
ANR	3451334	AssignmentExpression	val = ( FT_Short ) ( ( ( FT_UShort ) p [ 0 ] << 8 ) | p [ 1 ] )		3451290	0		=			
ANR	3451335	Identifier	val		3451290	0					
ANR	3451336	CastExpression	( FT_Short ) ( ( ( FT_UShort ) p [ 0 ] << 8 ) | p [ 1 ] )		3451290	1					
ANR	3451337	CastTarget	FT_Short		3451290	0					
ANR	3451338	InclusiveOrExpression	( ( FT_UShort ) p [ 0 ] << 8 ) | p [ 1 ]		3451290	1		|			
ANR	3451339	ShiftExpression	( FT_UShort ) p [ 0 ] << 8		3451290	0		<<			
ANR	3451340	CastExpression	( FT_UShort ) p [ 0 ]		3451290	0					
ANR	3451341	CastTarget	FT_UShort		3451290	0					
ANR	3451342	ArrayIndexing	p [ 0 ]		3451290	1					
ANR	3451343	Identifier	p		3451290	0					
ANR	3451344	PrimaryExpression	0		3451290	1					
ANR	3451345	PrimaryExpression	8		3451290	1					
ANR	3451346	ArrayIndexing	p [ 1 ]		3451290	1					
ANR	3451347	Identifier	p		3451290	0					
ANR	3451348	PrimaryExpression	1		3451290	1					
ANR	3451349	ElseStatement	else		3451290	0					
ANR	3451350	IfStatement	if ( v == 29 )		3451290	0					
ANR	3451351	Condition	v == 29	107:14:3520:3526	3451290	0	True				
ANR	3451352	EqualityExpression	v == 29		3451290	0		==			
ANR	3451353	Identifier	v		3451290	0					
ANR	3451354	PrimaryExpression	29		3451290	1					
ANR	3451355	CompoundStatement		15:4:243:243	3451290	1					
ANR	3451356	IfStatement	if ( p + 4 > limit )		3451290	0					
ANR	3451357	Condition	p + 4 > limit	109:11:3547:3559	3451290	0	True				
ANR	3451358	RelationalExpression	p + 4 > limit		3451290	0		>			
ANR	3451359	AdditiveExpression	p + 4		3451290	0		+			
ANR	3451360	Identifier	p		3451290	0					
ANR	3451361	PrimaryExpression	4		3451290	1					
ANR	3451362	Identifier	limit		3451290	1					
ANR	3451363	GotoStatement	goto Bad ;	110:8:3571:3579	3451290	1	True				
ANR	3451364	Identifier	Bad		3451290	0					
ANR	3451365	ExpressionStatement	val = ( FT_Long ) ( ( ( FT_ULong ) p [ 0 ] << 24 ) | ( ( FT_ULong ) p [ 1 ] << 16 ) | ( ( FT_ULong ) p [ 2 ] << 8 ) | ( FT_ULong ) p [ 3 ] )	112:6:3588:3781	3451290	1	True				
ANR	3451366	AssignmentExpression	val = ( FT_Long ) ( ( ( FT_ULong ) p [ 0 ] << 24 ) | ( ( FT_ULong ) p [ 1 ] << 16 ) | ( ( FT_ULong ) p [ 2 ] << 8 ) | ( FT_ULong ) p [ 3 ] )		3451290	0		=			
ANR	3451367	Identifier	val		3451290	0					
ANR	3451368	CastExpression	( FT_Long ) ( ( ( FT_ULong ) p [ 0 ] << 24 ) | ( ( FT_ULong ) p [ 1 ] << 16 ) | ( ( FT_ULong ) p [ 2 ] << 8 ) | ( FT_ULong ) p [ 3 ] )		3451290	1					
ANR	3451369	CastTarget	FT_Long		3451290	0					
ANR	3451370	InclusiveOrExpression	( ( FT_ULong ) p [ 0 ] << 24 ) | ( ( FT_ULong ) p [ 1 ] << 16 ) | ( ( FT_ULong ) p [ 2 ] << 8 ) | ( FT_ULong ) p [ 3 ]		3451290	1		|			
ANR	3451371	ShiftExpression	( FT_ULong ) p [ 0 ] << 24		3451290	0		<<			
ANR	3451372	CastExpression	( FT_ULong ) p [ 0 ]		3451290	0					
ANR	3451373	CastTarget	FT_ULong		3451290	0					
ANR	3451374	ArrayIndexing	p [ 0 ]		3451290	1					
ANR	3451375	Identifier	p		3451290	0					
ANR	3451376	PrimaryExpression	0		3451290	1					
ANR	3451377	PrimaryExpression	24		3451290	1					
ANR	3451378	InclusiveOrExpression	( ( FT_ULong ) p [ 1 ] << 16 ) | ( ( FT_ULong ) p [ 2 ] << 8 ) | ( FT_ULong ) p [ 3 ]		3451290	1		|			
ANR	3451379	ShiftExpression	( FT_ULong ) p [ 1 ] << 16		3451290	0		<<			
ANR	3451380	CastExpression	( FT_ULong ) p [ 1 ]		3451290	0					
ANR	3451381	CastTarget	FT_ULong		3451290	0					
ANR	3451382	ArrayIndexing	p [ 1 ]		3451290	1					
ANR	3451383	Identifier	p		3451290	0					
ANR	3451384	PrimaryExpression	1		3451290	1					
ANR	3451385	PrimaryExpression	16		3451290	1					
ANR	3451386	InclusiveOrExpression	( ( FT_ULong ) p [ 2 ] << 8 ) | ( FT_ULong ) p [ 3 ]		3451290	1		|			
ANR	3451387	ShiftExpression	( FT_ULong ) p [ 2 ] << 8		3451290	0		<<			
ANR	3451388	CastExpression	( FT_ULong ) p [ 2 ]		3451290	0					
ANR	3451389	CastTarget	FT_ULong		3451290	0					
ANR	3451390	ArrayIndexing	p [ 2 ]		3451290	1					
ANR	3451391	Identifier	p		3451290	0					
ANR	3451392	PrimaryExpression	2		3451290	1					
ANR	3451393	PrimaryExpression	8		3451290	1					
ANR	3451394	CastExpression	( FT_ULong ) p [ 3 ]		3451290	1					
ANR	3451395	CastTarget	FT_ULong		3451290	0					
ANR	3451396	ArrayIndexing	p [ 3 ]		3451290	1					
ANR	3451397	Identifier	p		3451290	0					
ANR	3451398	PrimaryExpression	3		3451290	1					
ANR	3451399	ElseStatement	else		3451290	0					
ANR	3451400	IfStatement	if ( v < 247 )		3451290	0					
ANR	3451401	Condition	v < 247	117:14:3803:3809	3451290	0	True				
ANR	3451402	RelationalExpression	v < 247		3451290	0		<			
ANR	3451403	Identifier	v		3451290	0					
ANR	3451404	PrimaryExpression	247		3451290	1					
ANR	3451405	CompoundStatement		25:4:526:526	3451290	1					
ANR	3451406	ExpressionStatement	val = v - 139	119:6:3825:3838	3451290	0	True				
ANR	3451407	AssignmentExpression	val = v - 139		3451290	0		=			
ANR	3451408	Identifier	val		3451290	0					
ANR	3451409	AdditiveExpression	v - 139		3451290	1		-			
ANR	3451410	Identifier	v		3451290	0					
ANR	3451411	PrimaryExpression	139		3451290	1					
ANR	3451412	ElseStatement	else		3451290	0					
ANR	3451413	IfStatement	if ( v < 251 )		3451290	0					
ANR	3451414	Condition	v < 251	121:14:3860:3866	3451290	0	True				
ANR	3451415	RelationalExpression	v < 251		3451290	0		<			
ANR	3451416	Identifier	v		3451290	0					
ANR	3451417	PrimaryExpression	251		3451290	1					
ANR	3451418	CompoundStatement		29:4:583:583	3451290	1					
ANR	3451419	IfStatement	if ( p + 1 > limit )		3451290	0					
ANR	3451420	Condition	p + 1 > limit	123:11:3887:3899	3451290	0	True				
ANR	3451421	RelationalExpression	p + 1 > limit		3451290	0		>			
ANR	3451422	AdditiveExpression	p + 1		3451290	0		+			
ANR	3451423	Identifier	p		3451290	0					
ANR	3451424	PrimaryExpression	1		3451290	1					
ANR	3451425	Identifier	limit		3451290	1					
ANR	3451426	GotoStatement	goto Bad ;	124:8:3911:3919	3451290	1	True				
ANR	3451427	Identifier	Bad		3451290	0					
ANR	3451428	ExpressionStatement	val = ( v - 247 ) * 256 + p [ 0 ] + 108	126:6:3928:3964	3451290	1	True				
ANR	3451429	AssignmentExpression	val = ( v - 247 ) * 256 + p [ 0 ] + 108		3451290	0		=			
ANR	3451430	Identifier	val		3451290	0					
ANR	3451431	AdditiveExpression	( v - 247 ) * 256 + p [ 0 ] + 108		3451290	1		+			
ANR	3451432	MultiplicativeExpression	( v - 247 ) * 256		3451290	0		*			
ANR	3451433	AdditiveExpression	v - 247		3451290	0		-			
ANR	3451434	Identifier	v		3451290	0					
ANR	3451435	PrimaryExpression	247		3451290	1					
ANR	3451436	PrimaryExpression	256		3451290	1					
ANR	3451437	AdditiveExpression	p [ 0 ] + 108		3451290	1		+			
ANR	3451438	ArrayIndexing	p [ 0 ]		3451290	0					
ANR	3451439	Identifier	p		3451290	0					
ANR	3451440	PrimaryExpression	0		3451290	1					
ANR	3451441	PrimaryExpression	108		3451290	1					
ANR	3451442	ElseStatement	else		3451290	0					
ANR	3451443	CompoundStatement		36:4:694:694	3451290	0					
ANR	3451444	IfStatement	if ( p + 1 > limit )		3451290	0					
ANR	3451445	Condition	p + 1 > limit	130:11:3998:4010	3451290	0	True				
ANR	3451446	RelationalExpression	p + 1 > limit		3451290	0		>			
ANR	3451447	AdditiveExpression	p + 1		3451290	0		+			
ANR	3451448	Identifier	p		3451290	0					
ANR	3451449	PrimaryExpression	1		3451290	1					
ANR	3451450	Identifier	limit		3451290	1					
ANR	3451451	GotoStatement	goto Bad ;	131:8:4022:4030	3451290	1	True				
ANR	3451452	Identifier	Bad		3451290	0					
ANR	3451453	ExpressionStatement	val = - ( v - 251 ) * 256 - p [ 0 ] - 108	133:6:4039:4076	3451290	1	True				
ANR	3451454	AssignmentExpression	val = - ( v - 251 ) * 256 - p [ 0 ] - 108		3451290	0		=			
ANR	3451455	Identifier	val		3451290	0					
ANR	3451456	AdditiveExpression	- ( v - 251 ) * 256 - p [ 0 ] - 108		3451290	1		-			
ANR	3451457	MultiplicativeExpression	- ( v - 251 ) * 256		3451290	0		*			
ANR	3451458	UnaryOperationExpression	- ( v - 251 )		3451290	0					
ANR	3451459	UnaryOperator	-		3451290	0					
ANR	3451460	AdditiveExpression	v - 251		3451290	1		-			
ANR	3451461	Identifier	v		3451290	0					
ANR	3451462	PrimaryExpression	251		3451290	1					
ANR	3451463	PrimaryExpression	256		3451290	1					
ANR	3451464	AdditiveExpression	p [ 0 ] - 108		3451290	1		-			
ANR	3451465	ArrayIndexing	p [ 0 ]		3451290	0					
ANR	3451466	Identifier	p		3451290	0					
ANR	3451467	PrimaryExpression	0		3451290	1					
ANR	3451468	PrimaryExpression	108		3451290	1					
ANR	3451469	Label	Exit :	136:2:4087:4091	3451290	4	True				
ANR	3451470	Identifier	Exit		3451290	0					
ANR	3451471	ReturnStatement	return val ;	137:4:4097:4107	3451290	5	True				
ANR	3451472	Identifier	val		3451290	0					
ANR	3451473	Label	Bad :	139:2:4112:4115	3451290	6	True				
ANR	3451474	Identifier	Bad		3451290	0					
ANR	3451475	ExpressionStatement	val = 0	140:4:4121:4128	3451290	7	True				
ANR	3451476	AssignmentExpression	val = 0		3451290	0		=			
ANR	3451477	Identifier	val		3451290	0					
ANR	3451478	PrimaryExpression	0		3451290	1					
ANR	3451479	ExpressionStatement	"FT_TRACE4 ( ( ""!!!END OF DATA:!!!"" ) )"	141:4:4134:4169	3451290	8	True				
ANR	3451480	CallExpression	"FT_TRACE4 ( ( ""!!!END OF DATA:!!!"" ) )"		3451290	0					
ANR	3451481	Callee	FT_TRACE4		3451290	0					
ANR	3451482	Identifier	FT_TRACE4		3451290	0					
ANR	3451483	ArgumentList	"""!!!END OF DATA:!!!"""		3451290	1					
ANR	3451484	Argument	"""!!!END OF DATA:!!!"""		3451290	0					
ANR	3451485	PrimaryExpression	"""!!!END OF DATA:!!!"""		3451290	0					
ANR	3451486	GotoStatement	goto Exit ;	142:4:4175:4184	3451290	9	True				
ANR	3451487	Identifier	Exit		3451290	0					
ANR	3451488	ReturnType	static FT_Long		3451290	1					
ANR	3451489	Identifier	cff_parse_integer		3451290	2					
ANR	3451490	ParameterList	"FT_Byte * start , FT_Byte * limit"		3451290	3					
ANR	3451491	Parameter	FT_Byte * start	92:21:3232:3246	3451290	0	True				
ANR	3451492	ParameterType	FT_Byte *		3451290	0					
ANR	3451493	Identifier	start		3451290	1					
ANR	3451494	Parameter	FT_Byte * limit	93:21:3270:3284	3451290	1	True				
ANR	3451495	ParameterType	FT_Byte *		3451290	0					
ANR	3451496	Identifier	limit		3451290	1					
ANR	3451497	CFGEntryNode	ENTRY		3451290		True				
ANR	3451498	CFGExitNode	EXIT		3451290		True				
ANR	3451499	Symbol	p		3451290						
ANR	3451500	Symbol	val		3451290						
ANR	3451501	Symbol	v		3451290						
ANR	3451502	Symbol	* p ++		3451290						
ANR	3451503	Symbol	start		3451290						
ANR	3451504	Symbol	limit		3451290						
ANR	3451505	Symbol	* p		3451290						
ANR	3451506	DeclStmt									
ANR	3451507	Decl							const FT_Long	const FT_Long [ ]	power_tens
ANR	3451508	DeclStmt									
ANR	3451509	Decl							const FT_Long	const FT_Long [ ]	power_ten_limits
ANR	3451510	Function	cff_parse_real	178:2:4810:11017							
ANR	3451511	FunctionDef	"cff_parse_real (FT_Byte * start , FT_Byte * limit , FT_Long power_ten , FT_Long * scaling)"		3451510	0					
ANR	3451512	CompoundStatement		183:2:4975:11017	3451510	0					
ANR	3451513	IdentifierDeclStatement	FT_Byte * p = start ;	184:4:4981:5000	3451510	0	True				
ANR	3451514	IdentifierDecl	* p = start		3451510	0					
ANR	3451515	IdentifierDeclType	FT_Byte *		3451510	0					
ANR	3451516	Identifier	p		3451510	1					
ANR	3451517	AssignmentExpression	* p = start		3451510	2		=			
ANR	3451518	Identifier	start		3451510	0					
ANR	3451519	Identifier	start		3451510	1					
ANR	3451520	IdentifierDeclStatement	FT_Int nib ;	185:4:5006:5019	3451510	1	True				
ANR	3451521	IdentifierDecl	nib		3451510	0					
ANR	3451522	IdentifierDeclType	FT_Int		3451510	0					
ANR	3451523	Identifier	nib		3451510	1					
ANR	3451524	IdentifierDeclStatement	FT_UInt phase ;	186:4:5025:5040	3451510	2	True				
ANR	3451525	IdentifierDecl	phase		3451510	0					
ANR	3451526	IdentifierDeclType	FT_UInt		3451510	0					
ANR	3451527	Identifier	phase		3451510	1					
ANR	3451528	IdentifierDeclStatement	"FT_Long result , number , exponent ;"	188:4:5047:5081	3451510	3	True				
ANR	3451529	IdentifierDecl	result		3451510	0					
ANR	3451530	IdentifierDeclType	FT_Long		3451510	0					
ANR	3451531	Identifier	result		3451510	1					
ANR	3451532	IdentifierDecl	number		3451510	1					
ANR	3451533	IdentifierDeclType	FT_Long		3451510	0					
ANR	3451534	Identifier	number		3451510	1					
ANR	3451535	IdentifierDecl	exponent		3451510	2					
ANR	3451536	IdentifierDeclType	FT_Long		3451510	0					
ANR	3451537	Identifier	exponent		3451510	1					
ANR	3451538	IdentifierDeclStatement	"FT_Int sign = 0 , exponent_sign = 0 , have_overflow = 0 ;"	189:4:5087:5143	3451510	4	True				
ANR	3451539	IdentifierDecl	sign = 0		3451510	0					
ANR	3451540	IdentifierDeclType	FT_Int		3451510	0					
ANR	3451541	Identifier	sign		3451510	1					
ANR	3451542	AssignmentExpression	sign = 0		3451510	2		=			
ANR	3451543	Identifier	sign		3451510	0					
ANR	3451544	PrimaryExpression	0		3451510	1					
ANR	3451545	IdentifierDecl	exponent_sign = 0		3451510	1					
ANR	3451546	IdentifierDeclType	FT_Int		3451510	0					
ANR	3451547	Identifier	exponent_sign		3451510	1					
ANR	3451548	AssignmentExpression	exponent_sign = 0		3451510	2		=			
ANR	3451549	Identifier	exponent_sign		3451510	0					
ANR	3451550	PrimaryExpression	0		3451510	1					
ANR	3451551	IdentifierDecl	have_overflow = 0		3451510	2					
ANR	3451552	IdentifierDeclType	FT_Int		3451510	0					
ANR	3451553	Identifier	have_overflow		3451510	1					
ANR	3451554	AssignmentExpression	have_overflow = 0		3451510	2		=			
ANR	3451555	Identifier	have_overflow		3451510	0					
ANR	3451556	PrimaryExpression	0		3451510	1					
ANR	3451557	IdentifierDeclStatement	"FT_Long exponent_add , integer_length , fraction_length ;"	190:4:5149:5204	3451510	5	True				
ANR	3451558	IdentifierDecl	exponent_add		3451510	0					
ANR	3451559	IdentifierDeclType	FT_Long		3451510	0					
ANR	3451560	Identifier	exponent_add		3451510	1					
ANR	3451561	IdentifierDecl	integer_length		3451510	1					
ANR	3451562	IdentifierDeclType	FT_Long		3451510	0					
ANR	3451563	Identifier	integer_length		3451510	1					
ANR	3451564	IdentifierDecl	fraction_length		3451510	2					
ANR	3451565	IdentifierDeclType	FT_Long		3451510	0					
ANR	3451566	Identifier	fraction_length		3451510	1					
ANR	3451567	IfStatement	if ( scaling )		3451510	6					
ANR	3451568	Condition	scaling	193:9:5217:5223	3451510	0	True				
ANR	3451569	Identifier	scaling		3451510	0					
ANR	3451570	ExpressionStatement	* scaling = 0	194:6:5233:5245	3451510	1	True				
ANR	3451571	AssignmentExpression	* scaling = 0		3451510	0		=			
ANR	3451572	UnaryOperationExpression	* scaling		3451510	0					
ANR	3451573	UnaryOperator	*		3451510	0					
ANR	3451574	Identifier	scaling		3451510	1					
ANR	3451575	PrimaryExpression	0		3451510	1					
ANR	3451576	ExpressionStatement	result = 0	196:4:5252:5262	3451510	7	True				
ANR	3451577	AssignmentExpression	result = 0		3451510	0		=			
ANR	3451578	Identifier	result		3451510	0					
ANR	3451579	PrimaryExpression	0		3451510	1					
ANR	3451580	ExpressionStatement	number = 0	198:4:5269:5281	3451510	8	True				
ANR	3451581	AssignmentExpression	number = 0		3451510	0		=			
ANR	3451582	Identifier	number		3451510	0					
ANR	3451583	PrimaryExpression	0		3451510	1					
ANR	3451584	ExpressionStatement	exponent = 0	199:4:5287:5299	3451510	9	True				
ANR	3451585	AssignmentExpression	exponent = 0		3451510	0		=			
ANR	3451586	Identifier	exponent		3451510	0					
ANR	3451587	PrimaryExpression	0		3451510	1					
ANR	3451588	ExpressionStatement	exponent_add = 0	201:4:5306:5325	3451510	10	True				
ANR	3451589	AssignmentExpression	exponent_add = 0		3451510	0		=			
ANR	3451590	Identifier	exponent_add		3451510	0					
ANR	3451591	PrimaryExpression	0		3451510	1					
ANR	3451592	ExpressionStatement	integer_length = 0	202:4:5331:5350	3451510	11	True				
ANR	3451593	AssignmentExpression	integer_length = 0		3451510	0		=			
ANR	3451594	Identifier	integer_length		3451510	0					
ANR	3451595	PrimaryExpression	0		3451510	1					
ANR	3451596	ExpressionStatement	fraction_length = 0	203:4:5356:5375	3451510	12	True				
ANR	3451597	AssignmentExpression	fraction_length = 0		3451510	0		=			
ANR	3451598	Identifier	fraction_length		3451510	0					
ANR	3451599	PrimaryExpression	0		3451510	1					
ANR	3451600	ExpressionStatement	phase = 4	206:4:5429:5438	3451510	13	True				
ANR	3451601	AssignmentExpression	phase = 4		3451510	0		=			
ANR	3451602	Identifier	phase		3451510	0					
ANR	3451603	PrimaryExpression	4		3451510	1					
ANR	3451604	ForStatement	for ( ; ; )		3451510	14					
ANR	3451605	CompoundStatement		27:4:482:482	3451510	0					
ANR	3451606	IfStatement	if ( phase )		3451510	0					
ANR	3451607	Condition	phase	212:11:5609:5613	3451510	0	True				
ANR	3451608	Identifier	phase		3451510	0					
ANR	3451609	CompoundStatement		31:6:647:647	3451510	1					
ANR	3451610	ExpressionStatement	p ++	214:8:5633:5636	3451510	0	True				
ANR	3451611	PostIncDecOperationExpression	p ++		3451510	0					
ANR	3451612	Identifier	p		3451510	0					
ANR	3451613	IncDec	++		3451510	1					
ANR	3451614	IfStatement	if ( p >= limit )		3451510	1					
ANR	3451615	Condition	p >= limit	217:13:5704:5713	3451510	0	True				
ANR	3451616	RelationalExpression	p >= limit		3451510	0		>=			
ANR	3451617	Identifier	p		3451510	0					
ANR	3451618	Identifier	limit		3451510	1					
ANR	3451619	GotoStatement	goto Bad ;	218:10:5727:5735	3451510	1	True				
ANR	3451620	Identifier	Bad		3451510	0					
ANR	3451621	ExpressionStatement	nib = ( FT_Int ) ( p [ 0 ] >> phase ) & 0xF	222:6:5780:5819	3451510	1	True				
ANR	3451622	AssignmentExpression	nib = ( FT_Int ) ( p [ 0 ] >> phase ) & 0xF		3451510	0		=			
ANR	3451623	Identifier	nib		3451510	0					
ANR	3451624	BitAndExpression	( FT_Int ) ( p [ 0 ] >> phase ) & 0xF		3451510	1		&			
ANR	3451625	CastExpression	( FT_Int ) ( p [ 0 ] >> phase )		3451510	0					
ANR	3451626	CastTarget	FT_Int		3451510	0					
ANR	3451627	ShiftExpression	p [ 0 ] >> phase		3451510	1		>>			
ANR	3451628	ArrayIndexing	p [ 0 ]		3451510	0					
ANR	3451629	Identifier	p		3451510	0					
ANR	3451630	PrimaryExpression	0		3451510	1					
ANR	3451631	Identifier	phase		3451510	1					
ANR	3451632	PrimaryExpression	0xF		3451510	1					
ANR	3451633	ExpressionStatement	phase = 4 - phase	223:6:5827:5844	3451510	2	True				
ANR	3451634	AssignmentExpression	phase = 4 - phase		3451510	0		=			
ANR	3451635	Identifier	phase		3451510	0					
ANR	3451636	AdditiveExpression	4 - phase		3451510	1		-			
ANR	3451637	PrimaryExpression	4		3451510	0					
ANR	3451638	Identifier	phase		3451510	1					
ANR	3451639	IfStatement	if ( nib == 0xE )		3451510	3					
ANR	3451640	Condition	nib == 0xE	225:11:5858:5867	3451510	0	True				
ANR	3451641	EqualityExpression	nib == 0xE		3451510	0		==			
ANR	3451642	Identifier	nib		3451510	0					
ANR	3451643	PrimaryExpression	0xE		3451510	1					
ANR	3451644	ExpressionStatement	sign = 1	226:8:5879:5887	3451510	1	True				
ANR	3451645	AssignmentExpression	sign = 1		3451510	0		=			
ANR	3451646	Identifier	sign		3451510	0					
ANR	3451647	PrimaryExpression	1		3451510	1					
ANR	3451648	ElseStatement	else		3451510	0					
ANR	3451649	IfStatement	if ( nib > 9 )		3451510	0					
ANR	3451650	Condition	nib > 9	227:16:5905:5911	3451510	0	True				
ANR	3451651	RelationalExpression	nib > 9		3451510	0		>			
ANR	3451652	Identifier	nib		3451510	0					
ANR	3451653	PrimaryExpression	9		3451510	1					
ANR	3451654	BreakStatement	break ;	228:8:5923:5928	3451510	1	True				
ANR	3451655	ElseStatement	else		3451510	0					
ANR	3451656	CompoundStatement		48:6:971:971	3451510	0					
ANR	3451657	IfStatement	if ( number >= 0xCCCCCCCL )		3451510	0					
ANR	3451658	Condition	number >= 0xCCCCCCCL	232:13:6021:6040	3451510	0	True				
ANR	3451659	RelationalExpression	number >= 0xCCCCCCCL		3451510	0		>=			
ANR	3451660	Identifier	number		3451510	0					
ANR	3451661	PrimaryExpression	0xCCCCCCCL		3451510	1					
ANR	3451662	ExpressionStatement	exponent_add ++	233:10:6054:6068	3451510	1	True				
ANR	3451663	PostIncDecOperationExpression	exponent_add ++		3451510	0					
ANR	3451664	Identifier	exponent_add		3451510	0					
ANR	3451665	IncDec	++		3451510	1					
ANR	3451666	ElseStatement	else		3451510	0					
ANR	3451667	IfStatement	if ( nib || number )		3451510	0					
ANR	3451668	Condition	nib || number	235:18:6122:6134	3451510	0	True				
ANR	3451669	OrExpression	nib || number		3451510	0		||			
ANR	3451670	Identifier	nib		3451510	0					
ANR	3451671	Identifier	number		3451510	1					
ANR	3451672	CompoundStatement		54:8:1170:1170	3451510	1					
ANR	3451673	ExpressionStatement	integer_length ++	237:10:6158:6174	3451510	0	True				
ANR	3451674	PostIncDecOperationExpression	integer_length ++		3451510	0					
ANR	3451675	Identifier	integer_length		3451510	0					
ANR	3451676	IncDec	++		3451510	1					
ANR	3451677	ExpressionStatement	number = number * 10 + nib	238:10:6186:6212	3451510	1	True				
ANR	3451678	AssignmentExpression	number = number * 10 + nib		3451510	0		=			
ANR	3451679	Identifier	number		3451510	0					
ANR	3451680	AdditiveExpression	number * 10 + nib		3451510	1		+			
ANR	3451681	MultiplicativeExpression	number * 10		3451510	0		*			
ANR	3451682	Identifier	number		3451510	0					
ANR	3451683	PrimaryExpression	10		3451510	1					
ANR	3451684	Identifier	nib		3451510	1					
ANR	3451685	IfStatement	if ( nib == 0xA )		3451510	15					
ANR	3451686	Condition	nib == 0xA	244:9:6286:6295	3451510	0	True				
ANR	3451687	EqualityExpression	nib == 0xA		3451510	0		==			
ANR	3451688	Identifier	nib		3451510	0					
ANR	3451689	PrimaryExpression	0xA		3451510	1					
ANR	3451690	ForStatement	for ( ; ; )		3451510	1					
ANR	3451691	CompoundStatement		64:6:1344:1344	3451510	0					
ANR	3451692	IfStatement	if ( phase )		3451510	0					
ANR	3451693	Condition	phase	249:13:6471:6475	3451510	0	True				
ANR	3451694	Identifier	phase		3451510	0					
ANR	3451695	CompoundStatement		68:8:1511:1511	3451510	1					
ANR	3451696	ExpressionStatement	p ++	251:10:6499:6502	3451510	0	True				
ANR	3451697	PostIncDecOperationExpression	p ++		3451510	0					
ANR	3451698	Identifier	p		3451510	0					
ANR	3451699	IncDec	++		3451510	1					
ANR	3451700	IfStatement	if ( p >= limit )		3451510	1					
ANR	3451701	Condition	p >= limit	254:15:6574:6583	3451510	0	True				
ANR	3451702	RelationalExpression	p >= limit		3451510	0		>=			
ANR	3451703	Identifier	p		3451510	0					
ANR	3451704	Identifier	limit		3451510	1					
ANR	3451705	GotoStatement	goto Bad ;	255:12:6599:6607	3451510	1	True				
ANR	3451706	Identifier	Bad		3451510	0					
ANR	3451707	ExpressionStatement	nib = ( p [ 0 ] >> phase ) & 0xF	259:8:6658:6689	3451510	1	True				
ANR	3451708	AssignmentExpression	nib = ( p [ 0 ] >> phase ) & 0xF		3451510	0		=			
ANR	3451709	Identifier	nib		3451510	0					
ANR	3451710	BitAndExpression	( p [ 0 ] >> phase ) & 0xF		3451510	1		&			
ANR	3451711	ShiftExpression	p [ 0 ] >> phase		3451510	0		>>			
ANR	3451712	ArrayIndexing	p [ 0 ]		3451510	0					
ANR	3451713	Identifier	p		3451510	0					
ANR	3451714	PrimaryExpression	0		3451510	1					
ANR	3451715	Identifier	phase		3451510	1					
ANR	3451716	PrimaryExpression	0xF		3451510	1					
ANR	3451717	ExpressionStatement	phase = 4 - phase	260:8:6699:6716	3451510	2	True				
ANR	3451718	AssignmentExpression	phase = 4 - phase		3451510	0		=			
ANR	3451719	Identifier	phase		3451510	0					
ANR	3451720	AdditiveExpression	4 - phase		3451510	1		-			
ANR	3451721	PrimaryExpression	4		3451510	0					
ANR	3451722	Identifier	phase		3451510	1					
ANR	3451723	IfStatement	if ( nib >= 10 )		3451510	3					
ANR	3451724	Condition	nib >= 10	261:13:6731:6739	3451510	0	True				
ANR	3451725	RelationalExpression	nib >= 10		3451510	0		>=			
ANR	3451726	Identifier	nib		3451510	0					
ANR	3451727	PrimaryExpression	10		3451510	1					
ANR	3451728	BreakStatement	break ;	262:10:6753:6758	3451510	1	True				
ANR	3451729	IfStatement	if ( ! nib && ! number )		3451510	4					
ANR	3451730	Condition	! nib && ! number	265:13:6820:6834	3451510	0	True				
ANR	3451731	AndExpression	! nib && ! number		3451510	0		&&			
ANR	3451732	UnaryOperationExpression	! nib		3451510	0					
ANR	3451733	UnaryOperator	!		3451510	0					
ANR	3451734	Identifier	nib		3451510	1					
ANR	3451735	UnaryOperationExpression	! number		3451510	1					
ANR	3451736	UnaryOperator	!		3451510	0					
ANR	3451737	Identifier	number		3451510	1					
ANR	3451738	ExpressionStatement	exponent_add --	266:10:6848:6862	3451510	1	True				
ANR	3451739	PostIncDecOperationExpression	exponent_add --		3451510	0					
ANR	3451740	Identifier	exponent_add		3451510	0					
ANR	3451741	IncDec	--		3451510	1					
ANR	3451742	ElseStatement	else		3451510	0					
ANR	3451743	IfStatement	if ( number < 0xCCCCCCCL && fraction_length < 9 )		3451510	0					
ANR	3451744	Condition	number < 0xCCCCCCCL && fraction_length < 9	268:18:6933:6974	3451510	0	True				
ANR	3451745	AndExpression	number < 0xCCCCCCCL && fraction_length < 9		3451510	0		&&			
ANR	3451746	RelationalExpression	number < 0xCCCCCCCL		3451510	0		<			
ANR	3451747	Identifier	number		3451510	0					
ANR	3451748	PrimaryExpression	0xCCCCCCCL		3451510	1					
ANR	3451749	RelationalExpression	fraction_length < 9		3451510	1		<			
ANR	3451750	Identifier	fraction_length		3451510	0					
ANR	3451751	PrimaryExpression	9		3451510	1					
ANR	3451752	CompoundStatement		87:8:2010:2010	3451510	1					
ANR	3451753	ExpressionStatement	fraction_length ++	270:10:6998:7015	3451510	0	True				
ANR	3451754	PostIncDecOperationExpression	fraction_length ++		3451510	0					
ANR	3451755	Identifier	fraction_length		3451510	0					
ANR	3451756	IncDec	++		3451510	1					
ANR	3451757	ExpressionStatement	number = number * 10 + nib	271:10:7027:7053	3451510	1	True				
ANR	3451758	AssignmentExpression	number = number * 10 + nib		3451510	0		=			
ANR	3451759	Identifier	number		3451510	0					
ANR	3451760	AdditiveExpression	number * 10 + nib		3451510	1		+			
ANR	3451761	MultiplicativeExpression	number * 10		3451510	0		*			
ANR	3451762	Identifier	number		3451510	0					
ANR	3451763	PrimaryExpression	10		3451510	1					
ANR	3451764	Identifier	nib		3451510	1					
ANR	3451765	IfStatement	if ( nib == 12 )		3451510	16					
ANR	3451766	Condition	nib == 12	276:9:7116:7124	3451510	0	True				
ANR	3451767	EqualityExpression	nib == 12		3451510	0		==			
ANR	3451768	Identifier	nib		3451510	0					
ANR	3451769	PrimaryExpression	12		3451510	1					
ANR	3451770	CompoundStatement		95:4:2156:2156	3451510	1					
ANR	3451771	ExpressionStatement	exponent_sign = 1	278:6:7140:7157	3451510	0	True				
ANR	3451772	AssignmentExpression	exponent_sign = 1		3451510	0		=			
ANR	3451773	Identifier	exponent_sign		3451510	0					
ANR	3451774	PrimaryExpression	1		3451510	1					
ANR	3451775	ExpressionStatement	nib = 11	279:6:7165:7183	3451510	1	True				
ANR	3451776	AssignmentExpression	nib = 11		3451510	0		=			
ANR	3451777	Identifier	nib		3451510	0					
ANR	3451778	PrimaryExpression	11		3451510	1					
ANR	3451779	IfStatement	if ( nib == 11 )		3451510	17					
ANR	3451780	Condition	nib == 11	282:9:7201:7209	3451510	0	True				
ANR	3451781	EqualityExpression	nib == 11		3451510	0		==			
ANR	3451782	Identifier	nib		3451510	0					
ANR	3451783	PrimaryExpression	11		3451510	1					
ANR	3451784	CompoundStatement		101:4:2241:2241	3451510	1					
ANR	3451785	ForStatement	for ( ; ; )		3451510	0					
ANR	3451786	CompoundStatement		103:6:2264:2264	3451510	0					
ANR	3451787	IfStatement	if ( phase )		3451510	0					
ANR	3451788	Condition	phase	288:13:7375:7379	3451510	0	True				
ANR	3451789	Identifier	phase		3451510	0					
ANR	3451790	CompoundStatement		107:8:2415:2415	3451510	1					
ANR	3451791	ExpressionStatement	p ++	290:10:7403:7406	3451510	0	True				
ANR	3451792	PostIncDecOperationExpression	p ++		3451510	0					
ANR	3451793	Identifier	p		3451510	0					
ANR	3451794	IncDec	++		3451510	1					
ANR	3451795	IfStatement	if ( p >= limit )		3451510	1					
ANR	3451796	Condition	p >= limit	293:15:7478:7487	3451510	0	True				
ANR	3451797	RelationalExpression	p >= limit		3451510	0		>=			
ANR	3451798	Identifier	p		3451510	0					
ANR	3451799	Identifier	limit		3451510	1					
ANR	3451800	GotoStatement	goto Bad ;	294:12:7503:7511	3451510	1	True				
ANR	3451801	Identifier	Bad		3451510	0					
ANR	3451802	ExpressionStatement	nib = ( p [ 0 ] >> phase ) & 0xF	298:8:7562:7593	3451510	1	True				
ANR	3451803	AssignmentExpression	nib = ( p [ 0 ] >> phase ) & 0xF		3451510	0		=			
ANR	3451804	Identifier	nib		3451510	0					
ANR	3451805	BitAndExpression	( p [ 0 ] >> phase ) & 0xF		3451510	1		&			
ANR	3451806	ShiftExpression	p [ 0 ] >> phase		3451510	0		>>			
ANR	3451807	ArrayIndexing	p [ 0 ]		3451510	0					
ANR	3451808	Identifier	p		3451510	0					
ANR	3451809	PrimaryExpression	0		3451510	1					
ANR	3451810	Identifier	phase		3451510	1					
ANR	3451811	PrimaryExpression	0xF		3451510	1					
ANR	3451812	ExpressionStatement	phase = 4 - phase	299:8:7603:7620	3451510	2	True				
ANR	3451813	AssignmentExpression	phase = 4 - phase		3451510	0		=			
ANR	3451814	Identifier	phase		3451510	0					
ANR	3451815	AdditiveExpression	4 - phase		3451510	1		-			
ANR	3451816	PrimaryExpression	4		3451510	0					
ANR	3451817	Identifier	phase		3451510	1					
ANR	3451818	IfStatement	if ( nib >= 10 )		3451510	3					
ANR	3451819	Condition	nib >= 10	300:13:7635:7643	3451510	0	True				
ANR	3451820	RelationalExpression	nib >= 10		3451510	0		>=			
ANR	3451821	Identifier	nib		3451510	0					
ANR	3451822	PrimaryExpression	10		3451510	1					
ANR	3451823	BreakStatement	break ;	301:10:7657:7662	3451510	1	True				
ANR	3451824	IfStatement	if ( exponent > 1000 )		3451510	4					
ANR	3451825	Condition	exponent > 1000	304:13:7720:7734	3451510	0	True				
ANR	3451826	RelationalExpression	exponent > 1000		3451510	0		>			
ANR	3451827	Identifier	exponent		3451510	0					
ANR	3451828	PrimaryExpression	1000		3451510	1					
ANR	3451829	ExpressionStatement	have_overflow = 1	305:10:7748:7765	3451510	1	True				
ANR	3451830	AssignmentExpression	have_overflow = 1		3451510	0		=			
ANR	3451831	Identifier	have_overflow		3451510	0					
ANR	3451832	PrimaryExpression	1		3451510	1					
ANR	3451833	ElseStatement	else		3451510	0					
ANR	3451834	ExpressionStatement	exponent = exponent * 10 + nib	307:10:7790:7820	3451510	0	True				
ANR	3451835	AssignmentExpression	exponent = exponent * 10 + nib		3451510	0		=			
ANR	3451836	Identifier	exponent		3451510	0					
ANR	3451837	AdditiveExpression	exponent * 10 + nib		3451510	1		+			
ANR	3451838	MultiplicativeExpression	exponent * 10		3451510	0		*			
ANR	3451839	Identifier	exponent		3451510	0					
ANR	3451840	PrimaryExpression	10		3451510	1					
ANR	3451841	Identifier	nib		3451510	1					
ANR	3451842	IfStatement	if ( exponent_sign )		3451510	1					
ANR	3451843	Condition	exponent_sign	310:11:7842:7854	3451510	0	True				
ANR	3451844	Identifier	exponent_sign		3451510	0					
ANR	3451845	ExpressionStatement	exponent = - exponent	311:8:7866:7886	3451510	1	True				
ANR	3451846	AssignmentExpression	exponent = - exponent		3451510	0		=			
ANR	3451847	Identifier	exponent		3451510	0					
ANR	3451848	UnaryOperationExpression	- exponent		3451510	1					
ANR	3451849	UnaryOperator	-		3451510	0					
ANR	3451850	Identifier	exponent		3451510	1					
ANR	3451851	IfStatement	if ( ! number )		3451510	18					
ANR	3451852	Condition	! number	314:9:7904:7910	3451510	0	True				
ANR	3451853	UnaryOperationExpression	! number		3451510	0					
ANR	3451854	UnaryOperator	!		3451510	0					
ANR	3451855	Identifier	number		3451510	1					
ANR	3451856	GotoStatement	goto Exit ;	315:6:7920:7929	3451510	1	True				
ANR	3451857	Identifier	Exit		3451510	0					
ANR	3451858	IfStatement	if ( have_overflow )		3451510	19					
ANR	3451859	Condition	have_overflow	317:9:7941:7953	3451510	0	True				
ANR	3451860	Identifier	have_overflow		3451510	0					
ANR	3451861	CompoundStatement		136:4:2985:2985	3451510	1					
ANR	3451862	IfStatement	if ( exponent_sign )		3451510	0					
ANR	3451863	Condition	exponent_sign	319:11:7974:7986	3451510	0	True				
ANR	3451864	Identifier	exponent_sign		3451510	0					
ANR	3451865	GotoStatement	goto Underflow ;	320:8:7998:8012	3451510	1	True				
ANR	3451866	Identifier	Underflow		3451510	0					
ANR	3451867	ElseStatement	else		3451510	0					
ANR	3451868	GotoStatement	goto Overflow ;	322:8:8033:8046	3451510	0	True				
ANR	3451869	Identifier	Overflow		3451510	0					
ANR	3451870	ExpressionStatement	exponent += power_ten + exponent_add	326:4:8116:8152	3451510	20	True				
ANR	3451871	AssignmentExpression	exponent += power_ten + exponent_add		3451510	0		+=			
ANR	3451872	Identifier	exponent		3451510	0					
ANR	3451873	AdditiveExpression	power_ten + exponent_add		3451510	1		+			
ANR	3451874	Identifier	power_ten		3451510	0					
ANR	3451875	Identifier	exponent_add		3451510	1					
ANR	3451876	IfStatement	if ( scaling )		3451510	21					
ANR	3451877	Condition	scaling	328:9:8164:8170	3451510	0	True				
ANR	3451878	Identifier	scaling		3451510	0					
ANR	3451879	CompoundStatement		147:4:3202:3202	3451510	1					
ANR	3451880	ExpressionStatement	fraction_length += integer_length	331:6:8226:8259	3451510	0	True				
ANR	3451881	AssignmentExpression	fraction_length += integer_length		3451510	0		+=			
ANR	3451882	Identifier	fraction_length		3451510	0					
ANR	3451883	Identifier	integer_length		3451510	1					
ANR	3451884	ExpressionStatement	exponent += integer_length	332:6:8267:8300	3451510	1	True				
ANR	3451885	AssignmentExpression	exponent += integer_length		3451510	0		+=			
ANR	3451886	Identifier	exponent		3451510	0					
ANR	3451887	Identifier	integer_length		3451510	1					
ANR	3451888	IfStatement	if ( fraction_length <= 5 )		3451510	2					
ANR	3451889	Condition	fraction_length <= 5	334:11:8314:8333	3451510	0	True				
ANR	3451890	RelationalExpression	fraction_length <= 5		3451510	0		<=			
ANR	3451891	Identifier	fraction_length		3451510	0					
ANR	3451892	PrimaryExpression	5		3451510	1					
ANR	3451893	CompoundStatement		153:6:3367:3367	3451510	1					
ANR	3451894	IfStatement	if ( number > 0x7FFFL )		3451510	0					
ANR	3451895	Condition	number > 0x7FFFL	336:13:8358:8373	3451510	0	True				
ANR	3451896	RelationalExpression	number > 0x7FFFL		3451510	0		>			
ANR	3451897	Identifier	number		3451510	0					
ANR	3451898	PrimaryExpression	0x7FFFL		3451510	1					
ANR	3451899	CompoundStatement		155:8:3409:3409	3451510	1					
ANR	3451900	ExpressionStatement	"result = FT_DivFix ( number , 10 )"	338:10:8397:8431	3451510	0	True				
ANR	3451901	AssignmentExpression	"result = FT_DivFix ( number , 10 )"		3451510	0		=			
ANR	3451902	Identifier	result		3451510	0					
ANR	3451903	CallExpression	"FT_DivFix ( number , 10 )"		3451510	1					
ANR	3451904	Callee	FT_DivFix		3451510	0					
ANR	3451905	Identifier	FT_DivFix		3451510	0					
ANR	3451906	ArgumentList	number		3451510	1					
ANR	3451907	Argument	number		3451510	0					
ANR	3451908	Identifier	number		3451510	0					
ANR	3451909	Argument	10		3451510	1					
ANR	3451910	PrimaryExpression	10		3451510	0					
ANR	3451911	ExpressionStatement	* scaling = exponent - fraction_length + 1	339:10:8443:8484	3451510	1	True				
ANR	3451912	AssignmentExpression	* scaling = exponent - fraction_length + 1		3451510	0		=			
ANR	3451913	UnaryOperationExpression	* scaling		3451510	0					
ANR	3451914	UnaryOperator	*		3451510	0					
ANR	3451915	Identifier	scaling		3451510	1					
ANR	3451916	AdditiveExpression	exponent - fraction_length + 1		3451510	1		-			
ANR	3451917	Identifier	exponent		3451510	0					
ANR	3451918	AdditiveExpression	fraction_length + 1		3451510	1		+			
ANR	3451919	Identifier	fraction_length		3451510	0					
ANR	3451920	PrimaryExpression	1		3451510	1					
ANR	3451921	ElseStatement	else		3451510	0					
ANR	3451922	CompoundStatement		160:8:3541:3541	3451510	0					
ANR	3451923	IfStatement	if ( exponent > 0 )		3451510	0					
ANR	3451924	Condition	exponent > 0	343:15:8534:8545	3451510	0	True				
ANR	3451925	RelationalExpression	exponent > 0		3451510	0		>			
ANR	3451926	Identifier	exponent		3451510	0					
ANR	3451927	PrimaryExpression	0		3451510	1					
ANR	3451928	CompoundStatement		163:12:3597:3632	3451510	1					
ANR	3451929	IdentifierDeclStatement	"FT_Long new_fraction_length , shift ;"	345:12:8573:8608	3451510	0	True				
ANR	3451930	IdentifierDecl	new_fraction_length		3451510	0					
ANR	3451931	IdentifierDeclType	FT_Long		3451510	0					
ANR	3451932	Identifier	new_fraction_length		3451510	1					
ANR	3451933	IdentifierDecl	shift		3451510	1					
ANR	3451934	IdentifierDeclType	FT_Long		3451510	0					
ANR	3451935	Identifier	shift		3451510	1					
ANR	3451936	ExpressionStatement	"new_fraction_length = FT_MIN ( exponent , 5 )"	349:12:8679:8722	3451510	1	True				
ANR	3451937	AssignmentExpression	"new_fraction_length = FT_MIN ( exponent , 5 )"		3451510	0		=			
ANR	3451938	Identifier	new_fraction_length		3451510	0					
ANR	3451939	CallExpression	"FT_MIN ( exponent , 5 )"		3451510	1					
ANR	3451940	Callee	FT_MIN		3451510	0					
ANR	3451941	Identifier	FT_MIN		3451510	0					
ANR	3451942	ArgumentList	exponent		3451510	1					
ANR	3451943	Argument	exponent		3451510	0					
ANR	3451944	Identifier	exponent		3451510	0					
ANR	3451945	Argument	5		3451510	1					
ANR	3451946	PrimaryExpression	5		3451510	0					
ANR	3451947	ExpressionStatement	shift = new_fraction_length - fraction_length	350:12:8736:8795	3451510	2	True				
ANR	3451948	AssignmentExpression	shift = new_fraction_length - fraction_length		3451510	0		=			
ANR	3451949	Identifier	shift		3451510	0					
ANR	3451950	AdditiveExpression	new_fraction_length - fraction_length		3451510	1		-			
ANR	3451951	Identifier	new_fraction_length		3451510	0					
ANR	3451952	Identifier	fraction_length		3451510	1					
ANR	3451953	IfStatement	if ( shift > 0 )		3451510	3					
ANR	3451954	Condition	shift > 0	352:17:8815:8823	3451510	0	True				
ANR	3451955	RelationalExpression	shift > 0		3451510	0		>			
ANR	3451956	Identifier	shift		3451510	0					
ANR	3451957	PrimaryExpression	0		3451510	1					
ANR	3451958	CompoundStatement		171:12:3863:3863	3451510	1					
ANR	3451959	ExpressionStatement	exponent -= new_fraction_length	354:14:8855:8886	3451510	0	True				
ANR	3451960	AssignmentExpression	exponent -= new_fraction_length		3451510	0		-=			
ANR	3451961	Identifier	exponent		3451510	0					
ANR	3451962	Identifier	new_fraction_length		3451510	1					
ANR	3451963	ExpressionStatement	number *= power_tens [ shift ]	355:14:8902:8931	3451510	1	True				
ANR	3451964	AssignmentExpression	number *= power_tens [ shift ]		3451510	0		*=			
ANR	3451965	Identifier	number		3451510	0					
ANR	3451966	ArrayIndexing	power_tens [ shift ]		3451510	1					
ANR	3451967	Identifier	power_tens		3451510	0					
ANR	3451968	Identifier	shift		3451510	1					
ANR	3451969	IfStatement	if ( number > 0x7FFFL )		3451510	2					
ANR	3451970	Condition	number > 0x7FFFL	356:19:8952:8967	3451510	0	True				
ANR	3451971	RelationalExpression	number > 0x7FFFL		3451510	0		>			
ANR	3451972	Identifier	number		3451510	0					
ANR	3451973	PrimaryExpression	0x7FFFL		3451510	1					
ANR	3451974	CompoundStatement		175:14:4009:4009	3451510	1					
ANR	3451975	ExpressionStatement	number /= 10	358:16:9003:9017	3451510	0	True				
ANR	3451976	AssignmentExpression	number /= 10		3451510	0		/=			
ANR	3451977	Identifier	number		3451510	0					
ANR	3451978	PrimaryExpression	10		3451510	1					
ANR	3451979	ExpressionStatement	exponent += 1	359:16:9035:9048	3451510	1	True				
ANR	3451980	AssignmentExpression	exponent += 1		3451510	0		+=			
ANR	3451981	Identifier	exponent		3451510	0					
ANR	3451982	PrimaryExpression	1		3451510	1					
ANR	3451983	ElseStatement	else		3451510	0					
ANR	3451984	ExpressionStatement	exponent -= fraction_length	363:14:9111:9138	3451510	0	True				
ANR	3451985	AssignmentExpression	exponent -= fraction_length		3451510	0		-=			
ANR	3451986	Identifier	exponent		3451510	0					
ANR	3451987	Identifier	fraction_length		3451510	1					
ANR	3451988	ElseStatement	else		3451510	0					
ANR	3451989	ExpressionStatement	exponent -= fraction_length	366:12:9179:9206	3451510	0	True				
ANR	3451990	AssignmentExpression	exponent -= fraction_length		3451510	0		-=			
ANR	3451991	Identifier	exponent		3451510	0					
ANR	3451992	Identifier	fraction_length		3451510	1					
ANR	3451993	ExpressionStatement	result = ( FT_Long ) ( ( FT_ULong ) number << 16 )	368:10:9219:9265	3451510	1	True				
ANR	3451994	AssignmentExpression	result = ( FT_Long ) ( ( FT_ULong ) number << 16 )		3451510	0		=			
ANR	3451995	Identifier	result		3451510	0					
ANR	3451996	CastExpression	( FT_Long ) ( ( FT_ULong ) number << 16 )		3451510	1					
ANR	3451997	CastTarget	FT_Long		3451510	0					
ANR	3451998	ShiftExpression	( FT_ULong ) number << 16		3451510	1		<<			
ANR	3451999	CastExpression	( FT_ULong ) number		3451510	0					
ANR	3452000	CastTarget	FT_ULong		3451510	0					
ANR	3452001	Identifier	number		3451510	1					
ANR	3452002	PrimaryExpression	16		3451510	1					
ANR	3452003	ExpressionStatement	* scaling = exponent	369:10:9277:9296	3451510	2	True				
ANR	3452004	AssignmentExpression	* scaling = exponent		3451510	0		=			
ANR	3452005	UnaryOperationExpression	* scaling		3451510	0					
ANR	3452006	UnaryOperator	*		3451510	0					
ANR	3452007	Identifier	scaling		3451510	1					
ANR	3452008	Identifier	exponent		3451510	1					
ANR	3452009	ElseStatement	else		3451510	0					
ANR	3452010	CompoundStatement		191:6:4357:4357	3451510	0					
ANR	3452011	IfStatement	if ( ( number / power_tens [ fraction_length - 5 ] ) > 0x7FFFL )		3451510	0					
ANR	3452012	Condition	( number / power_tens [ fraction_length - 5 ] ) > 0x7FFFL	374:13:9348:9401	3451510	0	True				
ANR	3452013	RelationalExpression	( number / power_tens [ fraction_length - 5 ] ) > 0x7FFFL		3451510	0		>			
ANR	3452014	MultiplicativeExpression	number / power_tens [ fraction_length - 5 ]		3451510	0		/			
ANR	3452015	Identifier	number		3451510	0					
ANR	3452016	ArrayIndexing	power_tens [ fraction_length - 5 ]		3451510	1					
ANR	3452017	Identifier	power_tens		3451510	0					
ANR	3452018	AdditiveExpression	fraction_length - 5		3451510	1		-			
ANR	3452019	Identifier	fraction_length		3451510	0					
ANR	3452020	PrimaryExpression	5		3451510	1					
ANR	3452021	PrimaryExpression	0x7FFFL		3451510	1					
ANR	3452022	CompoundStatement		193:8:4437:4437	3451510	1					
ANR	3452023	ExpressionStatement	"result = FT_DivFix ( number , power_tens [ fraction_length - 4 ] )"	376:10:9425:9488	3451510	0	True				
ANR	3452024	AssignmentExpression	"result = FT_DivFix ( number , power_tens [ fraction_length - 4 ] )"		3451510	0		=			
ANR	3452025	Identifier	result		3451510	0					
ANR	3452026	CallExpression	"FT_DivFix ( number , power_tens [ fraction_length - 4 ] )"		3451510	1					
ANR	3452027	Callee	FT_DivFix		3451510	0					
ANR	3452028	Identifier	FT_DivFix		3451510	0					
ANR	3452029	ArgumentList	number		3451510	1					
ANR	3452030	Argument	number		3451510	0					
ANR	3452031	Identifier	number		3451510	0					
ANR	3452032	Argument	power_tens [ fraction_length - 4 ]		3451510	1					
ANR	3452033	ArrayIndexing	power_tens [ fraction_length - 4 ]		3451510	0					
ANR	3452034	Identifier	power_tens		3451510	0					
ANR	3452035	AdditiveExpression	fraction_length - 4		3451510	1		-			
ANR	3452036	Identifier	fraction_length		3451510	0					
ANR	3452037	PrimaryExpression	4		3451510	1					
ANR	3452038	ExpressionStatement	* scaling = exponent - 4	377:10:9500:9523	3451510	1	True				
ANR	3452039	AssignmentExpression	* scaling = exponent - 4		3451510	0		=			
ANR	3452040	UnaryOperationExpression	* scaling		3451510	0					
ANR	3452041	UnaryOperator	*		3451510	0					
ANR	3452042	Identifier	scaling		3451510	1					
ANR	3452043	AdditiveExpression	exponent - 4		3451510	1		-			
ANR	3452044	Identifier	exponent		3451510	0					
ANR	3452045	PrimaryExpression	4		3451510	1					
ANR	3452046	ElseStatement	else		3451510	0					
ANR	3452047	CompoundStatement		198:8:4580:4580	3451510	0					
ANR	3452048	ExpressionStatement	"result = FT_DivFix ( number , power_tens [ fraction_length - 5 ] )"	381:10:9568:9631	3451510	0	True				
ANR	3452049	AssignmentExpression	"result = FT_DivFix ( number , power_tens [ fraction_length - 5 ] )"		3451510	0		=			
ANR	3452050	Identifier	result		3451510	0					
ANR	3452051	CallExpression	"FT_DivFix ( number , power_tens [ fraction_length - 5 ] )"		3451510	1					
ANR	3452052	Callee	FT_DivFix		3451510	0					
ANR	3452053	Identifier	FT_DivFix		3451510	0					
ANR	3452054	ArgumentList	number		3451510	1					
ANR	3452055	Argument	number		3451510	0					
ANR	3452056	Identifier	number		3451510	0					
ANR	3452057	Argument	power_tens [ fraction_length - 5 ]		3451510	1					
ANR	3452058	ArrayIndexing	power_tens [ fraction_length - 5 ]		3451510	0					
ANR	3452059	Identifier	power_tens		3451510	0					
ANR	3452060	AdditiveExpression	fraction_length - 5		3451510	1		-			
ANR	3452061	Identifier	fraction_length		3451510	0					
ANR	3452062	PrimaryExpression	5		3451510	1					
ANR	3452063	ExpressionStatement	* scaling = exponent - 5	382:10:9643:9666	3451510	1	True				
ANR	3452064	AssignmentExpression	* scaling = exponent - 5		3451510	0		=			
ANR	3452065	UnaryOperationExpression	* scaling		3451510	0					
ANR	3452066	UnaryOperator	*		3451510	0					
ANR	3452067	Identifier	scaling		3451510	1					
ANR	3452068	AdditiveExpression	exponent - 5		3451510	1		-			
ANR	3452069	Identifier	exponent		3451510	0					
ANR	3452070	PrimaryExpression	5		3451510	1					
ANR	3452071	ElseStatement	else		3451510	0					
ANR	3452072	CompoundStatement		205:4:4729:4729	3451510	0					
ANR	3452073	ExpressionStatement	integer_length += exponent	388:6:9713:9740	3451510	0	True				
ANR	3452074	AssignmentExpression	integer_length += exponent		3451510	0		+=			
ANR	3452075	Identifier	integer_length		3451510	0					
ANR	3452076	Identifier	exponent		3451510	1					
ANR	3452077	ExpressionStatement	fraction_length -= exponent	389:6:9748:9775	3451510	1	True				
ANR	3452078	AssignmentExpression	fraction_length -= exponent		3451510	0		-=			
ANR	3452079	Identifier	fraction_length		3451510	0					
ANR	3452080	Identifier	exponent		3451510	1					
ANR	3452081	IfStatement	if ( integer_length > 5 )		3451510	2					
ANR	3452082	Condition	integer_length > 5	391:11:9789:9806	3451510	0	True				
ANR	3452083	RelationalExpression	integer_length > 5		3451510	0		>			
ANR	3452084	Identifier	integer_length		3451510	0					
ANR	3452085	PrimaryExpression	5		3451510	1					
ANR	3452086	GotoStatement	goto Overflow ;	392:8:9818:9831	3451510	1	True				
ANR	3452087	Identifier	Overflow		3451510	0					
ANR	3452088	IfStatement	if ( integer_length < - 5 )		3451510	3					
ANR	3452089	Condition	integer_length < - 5	393:11:9844:9862	3451510	0	True				
ANR	3452090	RelationalExpression	integer_length < - 5		3451510	0		<			
ANR	3452091	Identifier	integer_length		3451510	0					
ANR	3452092	UnaryOperationExpression	- 5		3451510	1					
ANR	3452093	UnaryOperator	-		3451510	0					
ANR	3452094	PrimaryExpression	5		3451510	1					
ANR	3452095	GotoStatement	goto Underflow ;	394:8:9874:9888	3451510	1	True				
ANR	3452096	Identifier	Underflow		3451510	0					
ANR	3452097	IfStatement	if ( integer_length < 0 )		3451510	4					
ANR	3452098	Condition	integer_length < 0	397:11:9945:9962	3451510	0	True				
ANR	3452099	RelationalExpression	integer_length < 0		3451510	0		<			
ANR	3452100	Identifier	integer_length		3451510	0					
ANR	3452101	PrimaryExpression	0		3451510	1					
ANR	3452102	CompoundStatement		216:6:4996:4996	3451510	1					
ANR	3452103	ExpressionStatement	number /= power_tens [ - integer_length ]	399:8:9982:10028	3451510	0	True				
ANR	3452104	AssignmentExpression	number /= power_tens [ - integer_length ]		3451510	0		/=			
ANR	3452105	Identifier	number		3451510	0					
ANR	3452106	ArrayIndexing	power_tens [ - integer_length ]		3451510	1					
ANR	3452107	Identifier	power_tens		3451510	0					
ANR	3452108	UnaryOperationExpression	- integer_length		3451510	1					
ANR	3452109	UnaryOperator	-		3451510	0					
ANR	3452110	Identifier	integer_length		3451510	1					
ANR	3452111	ExpressionStatement	fraction_length += integer_length	400:8:10038:10071	3451510	1	True				
ANR	3452112	AssignmentExpression	fraction_length += integer_length		3451510	0		+=			
ANR	3452113	Identifier	fraction_length		3451510	0					
ANR	3452114	Identifier	integer_length		3451510	1					
ANR	3452115	IfStatement	if ( fraction_length == 10 )		3451510	5					
ANR	3452116	Condition	fraction_length == 10	404:11:10151:10171	3451510	0	True				
ANR	3452117	EqualityExpression	fraction_length == 10		3451510	0		==			
ANR	3452118	Identifier	fraction_length		3451510	0					
ANR	3452119	PrimaryExpression	10		3451510	1					
ANR	3452120	CompoundStatement		223:6:5205:5205	3451510	1					
ANR	3452121	ExpressionStatement	number /= 10	406:8:10191:10212	3451510	0	True				
ANR	3452122	AssignmentExpression	number /= 10		3451510	0		/=			
ANR	3452123	Identifier	number		3451510	0					
ANR	3452124	PrimaryExpression	10		3451510	1					
ANR	3452125	ExpressionStatement	fraction_length -= 1	407:8:10222:10242	3451510	1	True				
ANR	3452126	AssignmentExpression	fraction_length -= 1		3451510	0		-=			
ANR	3452127	Identifier	fraction_length		3451510	0					
ANR	3452128	PrimaryExpression	1		3451510	1					
ANR	3452129	IfStatement	if ( fraction_length > 0 )		3451510	6					
ANR	3452130	Condition	fraction_length > 0	411:11:10303:10321	3451510	0	True				
ANR	3452131	RelationalExpression	fraction_length > 0		3451510	0		>			
ANR	3452132	Identifier	fraction_length		3451510	0					
ANR	3452133	PrimaryExpression	0		3451510	1					
ANR	3452134	CompoundStatement		230:6:5355:5355	3451510	1					
ANR	3452135	IfStatement	if ( ( number / power_tens [ fraction_length ] ) > 0x7FFFL )		3451510	0					
ANR	3452136	Condition	( number / power_tens [ fraction_length ] ) > 0x7FFFL	413:13:10346:10395	3451510	0	True				
ANR	3452137	RelationalExpression	( number / power_tens [ fraction_length ] ) > 0x7FFFL		3451510	0		>			
ANR	3452138	MultiplicativeExpression	number / power_tens [ fraction_length ]		3451510	0		/			
ANR	3452139	Identifier	number		3451510	0					
ANR	3452140	ArrayIndexing	power_tens [ fraction_length ]		3451510	1					
ANR	3452141	Identifier	power_tens		3451510	0					
ANR	3452142	Identifier	fraction_length		3451510	1					
ANR	3452143	PrimaryExpression	0x7FFFL		3451510	1					
ANR	3452144	GotoStatement	goto Exit ;	414:10:10409:10418	3451510	1	True				
ANR	3452145	Identifier	Exit		3451510	0					
ANR	3452146	ExpressionStatement	"result = FT_DivFix ( number , power_tens [ fraction_length ] )"	416:8:10429:10486	3451510	1	True				
ANR	3452147	AssignmentExpression	"result = FT_DivFix ( number , power_tens [ fraction_length ] )"		3451510	0		=			
ANR	3452148	Identifier	result		3451510	0					
ANR	3452149	CallExpression	"FT_DivFix ( number , power_tens [ fraction_length ] )"		3451510	1					
ANR	3452150	Callee	FT_DivFix		3451510	0					
ANR	3452151	Identifier	FT_DivFix		3451510	0					
ANR	3452152	ArgumentList	number		3451510	1					
ANR	3452153	Argument	number		3451510	0					
ANR	3452154	Identifier	number		3451510	0					
ANR	3452155	Argument	power_tens [ fraction_length ]		3451510	1					
ANR	3452156	ArrayIndexing	power_tens [ fraction_length ]		3451510	0					
ANR	3452157	Identifier	power_tens		3451510	0					
ANR	3452158	Identifier	fraction_length		3451510	1					
ANR	3452159	ElseStatement	else		3451510	0					
ANR	3452160	CompoundStatement		237:6:5537:5537	3451510	0					
ANR	3452161	ExpressionStatement	number *= power_tens [ - fraction_length ]	420:8:10523:10561	3451510	0	True				
ANR	3452162	AssignmentExpression	number *= power_tens [ - fraction_length ]		3451510	0		*=			
ANR	3452163	Identifier	number		3451510	0					
ANR	3452164	ArrayIndexing	power_tens [ - fraction_length ]		3451510	1					
ANR	3452165	Identifier	power_tens		3451510	0					
ANR	3452166	UnaryOperationExpression	- fraction_length		3451510	1					
ANR	3452167	UnaryOperator	-		3451510	0					
ANR	3452168	Identifier	fraction_length		3451510	1					
ANR	3452169	IfStatement	if ( number > 0x7FFFL )		3451510	1					
ANR	3452170	Condition	number > 0x7FFFL	422:13:10577:10592	3451510	0	True				
ANR	3452171	RelationalExpression	number > 0x7FFFL		3451510	0		>			
ANR	3452172	Identifier	number		3451510	0					
ANR	3452173	PrimaryExpression	0x7FFFL		3451510	1					
ANR	3452174	GotoStatement	goto Overflow ;	423:10:10606:10619	3451510	1	True				
ANR	3452175	Identifier	Overflow		3451510	0					
ANR	3452176	ExpressionStatement	result = ( FT_Long ) ( ( FT_ULong ) number << 16 )	425:8:10630:10674	3451510	2	True				
ANR	3452177	AssignmentExpression	result = ( FT_Long ) ( ( FT_ULong ) number << 16 )		3451510	0		=			
ANR	3452178	Identifier	result		3451510	0					
ANR	3452179	CastExpression	( FT_Long ) ( ( FT_ULong ) number << 16 )		3451510	1					
ANR	3452180	CastTarget	FT_Long		3451510	0					
ANR	3452181	ShiftExpression	( FT_ULong ) number << 16		3451510	1		<<			
ANR	3452182	CastExpression	( FT_ULong ) number		3451510	0					
ANR	3452183	CastTarget	FT_ULong		3451510	0					
ANR	3452184	Identifier	number		3451510	1					
ANR	3452185	PrimaryExpression	16		3451510	1					
ANR	3452186	Label	Exit :	429:2:10693:10697	3451510	22	True				
ANR	3452187	Identifier	Exit		3451510	0					
ANR	3452188	IfStatement	if ( sign )		3451510	23					
ANR	3452189	Condition	sign	430:9:10708:10711	3451510	0	True				
ANR	3452190	Identifier	sign		3451510	0					
ANR	3452191	ExpressionStatement	result = - result	431:6:10721:10737	3451510	1	True				
ANR	3452192	AssignmentExpression	result = - result		3451510	0		=			
ANR	3452193	Identifier	result		3451510	0					
ANR	3452194	UnaryOperationExpression	- result		3451510	1					
ANR	3452195	UnaryOperator	-		3451510	0					
ANR	3452196	Identifier	result		3451510	1					
ANR	3452197	ReturnStatement	return result ;	433:4:10744:10757	3451510	24	True				
ANR	3452198	Identifier	result		3451510	0					
ANR	3452199	Label	Overflow :	435:2:10762:10770	3451510	25	True				
ANR	3452200	Identifier	Overflow		3451510	0					
ANR	3452201	ExpressionStatement	result = 0x7FFFFFFFL	436:4:10776:10796	3451510	26	True				
ANR	3452202	AssignmentExpression	result = 0x7FFFFFFFL		3451510	0		=			
ANR	3452203	Identifier	result		3451510	0					
ANR	3452204	PrimaryExpression	0x7FFFFFFFL		3451510	1					
ANR	3452205	ExpressionStatement	"FT_TRACE4 ( ( ""!!!OVERFLOW:!!!"" ) )"	437:4:10802:10834	3451510	27	True				
ANR	3452206	CallExpression	"FT_TRACE4 ( ( ""!!!OVERFLOW:!!!"" ) )"		3451510	0					
ANR	3452207	Callee	FT_TRACE4		3451510	0					
ANR	3452208	Identifier	FT_TRACE4		3451510	0					
ANR	3452209	ArgumentList	"""!!!OVERFLOW:!!!"""		3451510	1					
ANR	3452210	Argument	"""!!!OVERFLOW:!!!"""		3451510	0					
ANR	3452211	PrimaryExpression	"""!!!OVERFLOW:!!!"""		3451510	0					
ANR	3452212	GotoStatement	goto Exit ;	438:4:10840:10849	3451510	28	True				
ANR	3452213	Identifier	Exit		3451510	0					
ANR	3452214	Label	Underflow :	440:2:10854:10863	3451510	29	True				
ANR	3452215	Identifier	Underflow		3451510	0					
ANR	3452216	ExpressionStatement	result = 0	441:4:10869:10879	3451510	30	True				
ANR	3452217	AssignmentExpression	result = 0		3451510	0		=			
ANR	3452218	Identifier	result		3451510	0					
ANR	3452219	PrimaryExpression	0		3451510	1					
ANR	3452220	ExpressionStatement	"FT_TRACE4 ( ( ""!!!UNDERFLOW:!!!"" ) )"	442:4:10885:10918	3451510	31	True				
ANR	3452221	CallExpression	"FT_TRACE4 ( ( ""!!!UNDERFLOW:!!!"" ) )"		3451510	0					
ANR	3452222	Callee	FT_TRACE4		3451510	0					
ANR	3452223	Identifier	FT_TRACE4		3451510	0					
ANR	3452224	ArgumentList	"""!!!UNDERFLOW:!!!"""		3451510	1					
ANR	3452225	Argument	"""!!!UNDERFLOW:!!!"""		3451510	0					
ANR	3452226	PrimaryExpression	"""!!!UNDERFLOW:!!!"""		3451510	0					
ANR	3452227	GotoStatement	goto Exit ;	443:4:10924:10933	3451510	32	True				
ANR	3452228	Identifier	Exit		3451510	0					
ANR	3452229	Label	Bad :	445:2:10938:10941	3451510	33	True				
ANR	3452230	Identifier	Bad		3451510	0					
ANR	3452231	ExpressionStatement	result = 0	446:4:10947:10957	3451510	34	True				
ANR	3452232	AssignmentExpression	result = 0		3451510	0		=			
ANR	3452233	Identifier	result		3451510	0					
ANR	3452234	PrimaryExpression	0		3451510	1					
ANR	3452235	ExpressionStatement	"FT_TRACE4 ( ( ""!!!END OF DATA:!!!"" ) )"	447:4:10963:10998	3451510	35	True				
ANR	3452236	CallExpression	"FT_TRACE4 ( ( ""!!!END OF DATA:!!!"" ) )"		3451510	0					
ANR	3452237	Callee	FT_TRACE4		3451510	0					
ANR	3452238	Identifier	FT_TRACE4		3451510	0					
ANR	3452239	ArgumentList	"""!!!END OF DATA:!!!"""		3451510	1					
ANR	3452240	Argument	"""!!!END OF DATA:!!!"""		3451510	0					
ANR	3452241	PrimaryExpression	"""!!!END OF DATA:!!!"""		3451510	0					
ANR	3452242	GotoStatement	goto Exit ;	448:4:11004:11013	3451510	36	True				
ANR	3452243	Identifier	Exit		3451510	0					
ANR	3452244	ReturnType	static FT_Fixed		3451510	1					
ANR	3452245	Identifier	cff_parse_real		3451510	2					
ANR	3452246	ParameterList	"FT_Byte * start , FT_Byte * limit , FT_Long power_ten , FT_Long * scaling"		3451510	3					
ANR	3452247	Parameter	FT_Byte * start	179:18:4844:4858	3451510	0	True				
ANR	3452248	ParameterType	FT_Byte *		3451510	0					
ANR	3452249	Identifier	start		3451510	1					
ANR	3452250	Parameter	FT_Byte * limit	180:18:4879:4893	3451510	1	True				
ANR	3452251	ParameterType	FT_Byte *		3451510	0					
ANR	3452252	Identifier	limit		3451510	1					
ANR	3452253	Parameter	FT_Long power_ten	181:18:4914:4932	3451510	2	True				
ANR	3452254	ParameterType	FT_Long		3451510	0					
ANR	3452255	Identifier	power_ten		3451510	1					
ANR	3452256	Parameter	FT_Long * scaling	182:18:4953:4969	3451510	3	True				
ANR	3452257	ParameterType	FT_Long *		3451510	0					
ANR	3452258	Identifier	scaling		3451510	1					
ANR	3452259	CFGEntryNode	ENTRY		3451510		True				
ANR	3452260	CFGExitNode	EXIT		3451510		True				
ANR	3452261	InfiniteForNode	true		3451510		True				
ANR	3452262	InfiniteForNode	true		3451510		True				
ANR	3452263	InfiniteForNode	true		3451510		True				
ANR	3452264	Symbol	* fraction_length		3451510						
ANR	3452265	Symbol	power_ten		3451510						
ANR	3452266	Symbol	nib		3451510						
ANR	3452267	Symbol	shift		3451510						
ANR	3452268	Symbol	sign		3451510						
ANR	3452269	Symbol	integer_length		3451510						
ANR	3452270	Symbol	result		3451510						
ANR	3452271	Symbol	number		3451510						
ANR	3452272	Symbol	* scaling		3451510						
ANR	3452273	Symbol	* integer_length		3451510						
ANR	3452274	Symbol	limit		3451510						
ANR	3452275	Symbol	have_overflow		3451510						
ANR	3452276	Symbol	exponent		3451510						
ANR	3452277	Symbol	phase		3451510						
ANR	3452278	Symbol	scaling		3451510						
ANR	3452279	Symbol	exponent_add		3451510						
ANR	3452280	Symbol	FT_DivFix		3451510						
ANR	3452281	Symbol	* power_tens		3451510						
ANR	3452282	Symbol	exponent_sign		3451510						
ANR	3452283	Symbol	start		3451510						
ANR	3452284	Symbol	* shift		3451510						
ANR	3452285	Symbol	p		3451510						
ANR	3452286	Symbol	new_fraction_length		3451510						
ANR	3452287	Symbol	fraction_length		3451510						
ANR	3452288	Symbol	power_tens		3451510						
ANR	3452289	Symbol	* p		3451510						
ANR	3452290	Symbol	FT_MIN		3451510						
ANR	3452291	Function	cff_parse_num	454:2:11095:12278							
ANR	3452292	FunctionDef	"cff_parse_num (CFF_Parser parser , FT_Byte * * d)"		3452291	0					
ANR	3452293	CompoundStatement		456:2:11165:12278	3452291	0					
ANR	3452294	IfStatement	if ( * * d == 30 )		3452291	0					
ANR	3452295	Condition	* * d == 30	457:9:11176:11184	3452291	0	True				
ANR	3452296	EqualityExpression	* * d == 30		3452291	0		==			
ANR	3452297	UnaryOperationExpression	* * d		3452291	0					
ANR	3452298	UnaryOperator	*		3452291	0					
ANR	3452299	UnaryOperationExpression	* d		3452291	1					
ANR	3452300	UnaryOperator	*		3452291	0					
ANR	3452301	Identifier	d		3452291	1					
ANR	3452302	PrimaryExpression	30		3452291	1					
ANR	3452303	CompoundStatement		3:4:26:26	3452291	1					
ANR	3452304	ReturnStatement	"return cff_parse_real ( * d , parser -> limit , 0 , NULL ) >> 16 ;"	460:6:11257:11314	3452291	0	True				
ANR	3452305	ShiftExpression	"cff_parse_real ( * d , parser -> limit , 0 , NULL ) >> 16"		3452291	0		>>			
ANR	3452306	CallExpression	"cff_parse_real ( * d , parser -> limit , 0 , NULL )"		3452291	0					
ANR	3452307	Callee	cff_parse_real		3452291	0					
ANR	3452308	Identifier	cff_parse_real		3452291	0					
ANR	3452309	ArgumentList	* d		3452291	1					
ANR	3452310	Argument	* d		3452291	0					
ANR	3452311	UnaryOperationExpression	* d		3452291	0					
ANR	3452312	UnaryOperator	*		3452291	0					
ANR	3452313	Identifier	d		3452291	1					
ANR	3452314	Argument	parser -> limit		3452291	1					
ANR	3452315	PtrMemberAccess	parser -> limit		3452291	0					
ANR	3452316	Identifier	parser		3452291	0					
ANR	3452317	Identifier	limit		3452291	1					
ANR	3452318	Argument	0		3452291	2					
ANR	3452319	PrimaryExpression	0		3452291	0					
ANR	3452320	Argument	NULL		3452291	3					
ANR	3452321	Identifier	NULL		3452291	0					
ANR	3452322	PrimaryExpression	16		3452291	1					
ANR	3452323	ElseStatement	else		3452291	0					
ANR	3452324	IfStatement	if ( * * d == 255 )		3452291	0					
ANR	3452325	Condition	* * d == 255	463:14:11337:11346	3452291	0	True				
ANR	3452326	EqualityExpression	* * d == 255		3452291	0		==			
ANR	3452327	UnaryOperationExpression	* * d		3452291	0					
ANR	3452328	UnaryOperator	*		3452291	0					
ANR	3452329	UnaryOperationExpression	* d		3452291	1					
ANR	3452330	UnaryOperator	*		3452291	0					
ANR	3452331	Identifier	d		3452291	1					
ANR	3452332	PrimaryExpression	255		3452291	1					
ANR	3452333	CompoundStatement		9:4:188:188	3452291	1					
ANR	3452334	ReturnStatement	return ( FT_Short ) ( ( ( ( ( FT_UInt32 ) * ( d [ 0 ] + 1 ) << 24 ) | ( ( FT_UInt32 ) * ( d [ 0 ] + 2 ) << 16 ) | ( ( FT_UInt32 ) * ( d [ 0 ] + 3 ) << 8 ) | ( FT_UInt32 ) * ( d [ 0 ] + 4 ) ) + 0x8000U ) >> 16 ) ;	472:6:11719:11981	3452291	0	True				
ANR	3452335	CastExpression	( FT_Short ) ( ( ( ( ( FT_UInt32 ) * ( d [ 0 ] + 1 ) << 24 ) | ( ( FT_UInt32 ) * ( d [ 0 ] + 2 ) << 16 ) | ( ( FT_UInt32 ) * ( d [ 0 ] + 3 ) << 8 ) | ( FT_UInt32 ) * ( d [ 0 ] + 4 ) ) + 0x8000U ) >> 16 )		3452291	0					
ANR	3452336	CastTarget	FT_Short		3452291	0					
ANR	3452337	ShiftExpression	( ( ( ( FT_UInt32 ) * ( d [ 0 ] + 1 ) << 24 ) | ( ( FT_UInt32 ) * ( d [ 0 ] + 2 ) << 16 ) | ( ( FT_UInt32 ) * ( d [ 0 ] + 3 ) << 8 ) | ( FT_UInt32 ) * ( d [ 0 ] + 4 ) ) + 0x8000U ) >> 16		3452291	1		>>			
ANR	3452338	AdditiveExpression	( ( ( FT_UInt32 ) * ( d [ 0 ] + 1 ) << 24 ) | ( ( FT_UInt32 ) * ( d [ 0 ] + 2 ) << 16 ) | ( ( FT_UInt32 ) * ( d [ 0 ] + 3 ) << 8 ) | ( FT_UInt32 ) * ( d [ 0 ] + 4 ) ) + 0x8000U		3452291	0		+			
ANR	3452339	InclusiveOrExpression	( ( FT_UInt32 ) * ( d [ 0 ] + 1 ) << 24 ) | ( ( FT_UInt32 ) * ( d [ 0 ] + 2 ) << 16 ) | ( ( FT_UInt32 ) * ( d [ 0 ] + 3 ) << 8 ) | ( FT_UInt32 ) * ( d [ 0 ] + 4 )		3452291	0		|			
ANR	3452340	ShiftExpression	( FT_UInt32 ) * ( d [ 0 ] + 1 ) << 24		3452291	0		<<			
ANR	3452341	CastExpression	( FT_UInt32 ) * ( d [ 0 ] + 1 )		3452291	0					
ANR	3452342	CastTarget	FT_UInt32		3452291	0					
ANR	3452343	UnaryOperationExpression	* ( d [ 0 ] + 1 )		3452291	1					
ANR	3452344	UnaryOperator	*		3452291	0					
ANR	3452345	AdditiveExpression	d [ 0 ] + 1		3452291	1		+			
ANR	3452346	ArrayIndexing	d [ 0 ]		3452291	0					
ANR	3452347	Identifier	d		3452291	0					
ANR	3452348	PrimaryExpression	0		3452291	1					
ANR	3452349	PrimaryExpression	1		3452291	1					
ANR	3452350	PrimaryExpression	24		3452291	1					
ANR	3452351	InclusiveOrExpression	( ( FT_UInt32 ) * ( d [ 0 ] + 2 ) << 16 ) | ( ( FT_UInt32 ) * ( d [ 0 ] + 3 ) << 8 ) | ( FT_UInt32 ) * ( d [ 0 ] + 4 )		3452291	1		|			
ANR	3452352	ShiftExpression	( FT_UInt32 ) * ( d [ 0 ] + 2 ) << 16		3452291	0		<<			
ANR	3452353	CastExpression	( FT_UInt32 ) * ( d [ 0 ] + 2 )		3452291	0					
ANR	3452354	CastTarget	FT_UInt32		3452291	0					
ANR	3452355	UnaryOperationExpression	* ( d [ 0 ] + 2 )		3452291	1					
ANR	3452356	UnaryOperator	*		3452291	0					
ANR	3452357	AdditiveExpression	d [ 0 ] + 2		3452291	1		+			
ANR	3452358	ArrayIndexing	d [ 0 ]		3452291	0					
ANR	3452359	Identifier	d		3452291	0					
ANR	3452360	PrimaryExpression	0		3452291	1					
ANR	3452361	PrimaryExpression	2		3452291	1					
ANR	3452362	PrimaryExpression	16		3452291	1					
ANR	3452363	InclusiveOrExpression	( ( FT_UInt32 ) * ( d [ 0 ] + 3 ) << 8 ) | ( FT_UInt32 ) * ( d [ 0 ] + 4 )		3452291	1		|			
ANR	3452364	ShiftExpression	( FT_UInt32 ) * ( d [ 0 ] + 3 ) << 8		3452291	0		<<			
ANR	3452365	CastExpression	( FT_UInt32 ) * ( d [ 0 ] + 3 )		3452291	0					
ANR	3452366	CastTarget	FT_UInt32		3452291	0					
ANR	3452367	UnaryOperationExpression	* ( d [ 0 ] + 3 )		3452291	1					
ANR	3452368	UnaryOperator	*		3452291	0					
ANR	3452369	AdditiveExpression	d [ 0 ] + 3		3452291	1		+			
ANR	3452370	ArrayIndexing	d [ 0 ]		3452291	0					
ANR	3452371	Identifier	d		3452291	0					
ANR	3452372	PrimaryExpression	0		3452291	1					
ANR	3452373	PrimaryExpression	3		3452291	1					
ANR	3452374	PrimaryExpression	8		3452291	1					
ANR	3452375	CastExpression	( FT_UInt32 ) * ( d [ 0 ] + 4 )		3452291	1					
ANR	3452376	CastTarget	FT_UInt32		3452291	0					
ANR	3452377	UnaryOperationExpression	* ( d [ 0 ] + 4 )		3452291	1					
ANR	3452378	UnaryOperator	*		3452291	0					
ANR	3452379	AdditiveExpression	d [ 0 ] + 4		3452291	1		+			
ANR	3452380	ArrayIndexing	d [ 0 ]		3452291	0					
ANR	3452381	Identifier	d		3452291	0					
ANR	3452382	PrimaryExpression	0		3452291	1					
ANR	3452383	PrimaryExpression	4		3452291	1					
ANR	3452384	PrimaryExpression	0x8000U		3452291	1					
ANR	3452385	PrimaryExpression	16		3452291	1					
ANR	3452386	ElseStatement	else		3452291	0					
ANR	3452387	ReturnStatement	"return cff_parse_integer ( * d , parser -> limit ) ;"	486:6:12229:12274	3452291	0	True				
ANR	3452388	CallExpression	"cff_parse_integer ( * d , parser -> limit )"		3452291	0					
ANR	3452389	Callee	cff_parse_integer		3452291	0					
ANR	3452390	Identifier	cff_parse_integer		3452291	0					
ANR	3452391	ArgumentList	* d		3452291	1					
ANR	3452392	Argument	* d		3452291	0					
ANR	3452393	UnaryOperationExpression	* d		3452291	0					
ANR	3452394	UnaryOperator	*		3452291	0					
ANR	3452395	Identifier	d		3452291	1					
ANR	3452396	Argument	parser -> limit		3452291	1					
ANR	3452397	PtrMemberAccess	parser -> limit		3452291	0					
ANR	3452398	Identifier	parser		3452291	0					
ANR	3452399	Identifier	limit		3452291	1					
ANR	3452400	Identifier	cff_parse_num		3452291	1					
ANR	3452401	ParameterList	"CFF_Parser parser , FT_Byte * * d"		3452291	2					
ANR	3452402	Parameter	CFF_Parser parser	454:17:11110:11127	3452291	0	True				
ANR	3452403	ParameterType	CFF_Parser		3452291	0					
ANR	3452404	Identifier	parser		3452291	1					
ANR	3452405	Parameter	FT_Byte * * d	455:17:11147:11159	3452291	1	True				
ANR	3452406	ParameterType	FT_Byte * *		3452291	0					
ANR	3452407	Identifier	d		3452291	1					
ANR	3452408	CFGEntryNode	ENTRY		3452291		True				
ANR	3452409	CFGExitNode	EXIT		3452291		True				
ANR	3452410	Symbol	NULL		3452291						
ANR	3452411	Symbol	d		3452291						
ANR	3452412	Symbol	* * d		3452291						
ANR	3452413	Symbol	cff_parse_real		3452291						
ANR	3452414	Symbol	parser -> limit		3452291						
ANR	3452415	Symbol	* d		3452291						
ANR	3452416	Symbol	cff_parse_integer		3452291						
ANR	3452417	Symbol	* parser		3452291						
ANR	3452418	Symbol	parser		3452291						
ANR	3452419	Symbol	* ( d [ 0 ] + 4 )		3452291						
ANR	3452420	Symbol	* ( d [ 0 ] + 3 )		3452291						
ANR	3452421	Symbol	* ( d [ 0 ] + 2 )		3452291						
ANR	3452422	Symbol	* ( d [ 0 ] + 1 )		3452291						
ANR	3452423	Function	do_fixed	491:2:12345:13173							
ANR	3452424	FunctionDef	"do_fixed (CFF_Parser parser , FT_Byte * * d , FT_Long scaling)"		3452423	0					
ANR	3452425	CompoundStatement		495:2:12456:13173	3452423	0					
ANR	3452426	IfStatement	if ( * * d == 30 )		3452423	0					
ANR	3452427	Condition	* * d == 30	496:9:12467:12475	3452423	0	True				
ANR	3452428	EqualityExpression	* * d == 30		3452423	0		==			
ANR	3452429	UnaryOperationExpression	* * d		3452423	0					
ANR	3452430	UnaryOperator	*		3452423	0					
ANR	3452431	UnaryOperationExpression	* d		3452423	1					
ANR	3452432	UnaryOperator	*		3452423	0					
ANR	3452433	Identifier	d		3452423	1					
ANR	3452434	PrimaryExpression	30		3452423	1					
ANR	3452435	ReturnStatement	"return cff_parse_real ( * d , parser -> limit , scaling , NULL ) ;"	497:6:12485:12542	3452423	1	True				
ANR	3452436	CallExpression	"cff_parse_real ( * d , parser -> limit , scaling , NULL )"		3452423	0					
ANR	3452437	Callee	cff_parse_real		3452423	0					
ANR	3452438	Identifier	cff_parse_real		3452423	0					
ANR	3452439	ArgumentList	* d		3452423	1					
ANR	3452440	Argument	* d		3452423	0					
ANR	3452441	UnaryOperationExpression	* d		3452423	0					
ANR	3452442	UnaryOperator	*		3452423	0					
ANR	3452443	Identifier	d		3452423	1					
ANR	3452444	Argument	parser -> limit		3452423	1					
ANR	3452445	PtrMemberAccess	parser -> limit		3452423	0					
ANR	3452446	Identifier	parser		3452423	0					
ANR	3452447	Identifier	limit		3452423	1					
ANR	3452448	Argument	scaling		3452423	2					
ANR	3452449	Identifier	scaling		3452423	0					
ANR	3452450	Argument	NULL		3452423	3					
ANR	3452451	Identifier	NULL		3452423	0					
ANR	3452452	ElseStatement	else		3452423	0					
ANR	3452453	CompoundStatement		6:6:108:161	3452423	0					
ANR	3452454	IdentifierDeclStatement	"FT_Long val = cff_parse_integer ( * d , parser -> limit ) ;"	500:6:12565:12618	3452423	0	True				
ANR	3452455	IdentifierDecl	"val = cff_parse_integer ( * d , parser -> limit )"		3452423	0					
ANR	3452456	IdentifierDeclType	FT_Long		3452423	0					
ANR	3452457	Identifier	val		3452423	1					
ANR	3452458	AssignmentExpression	"val = cff_parse_integer ( * d , parser -> limit )"		3452423	2		=			
ANR	3452459	Identifier	val		3452423	0					
ANR	3452460	CallExpression	"cff_parse_integer ( * d , parser -> limit )"		3452423	1					
ANR	3452461	Callee	cff_parse_integer		3452423	0					
ANR	3452462	Identifier	cff_parse_integer		3452423	0					
ANR	3452463	ArgumentList	* d		3452423	1					
ANR	3452464	Argument	* d		3452423	0					
ANR	3452465	UnaryOperationExpression	* d		3452423	0					
ANR	3452466	UnaryOperator	*		3452423	0					
ANR	3452467	Identifier	d		3452423	1					
ANR	3452468	Argument	parser -> limit		3452423	1					
ANR	3452469	PtrMemberAccess	parser -> limit		3452423	0					
ANR	3452470	Identifier	parser		3452423	0					
ANR	3452471	Identifier	limit		3452423	1					
ANR	3452472	IfStatement	if ( scaling )		3452423	1					
ANR	3452473	Condition	scaling	503:11:12633:12639	3452423	0	True				
ANR	3452474	Identifier	scaling		3452423	0					
ANR	3452475	CompoundStatement		10:6:192:192	3452423	1					
ANR	3452476	IfStatement	if ( FT_ABS ( val ) > power_ten_limits [ scaling ] )		3452423	0					
ANR	3452477	Condition	FT_ABS ( val ) > power_ten_limits [ scaling ]	505:13:12664:12704	3452423	0	True				
ANR	3452478	RelationalExpression	FT_ABS ( val ) > power_ten_limits [ scaling ]		3452423	0		>			
ANR	3452479	CallExpression	FT_ABS ( val )		3452423	0					
ANR	3452480	Callee	FT_ABS		3452423	0					
ANR	3452481	Identifier	FT_ABS		3452423	0					
ANR	3452482	ArgumentList	val		3452423	1					
ANR	3452483	Argument	val		3452423	0					
ANR	3452484	Identifier	val		3452423	0					
ANR	3452485	ArrayIndexing	power_ten_limits [ scaling ]		3452423	1					
ANR	3452486	Identifier	power_ten_limits		3452423	0					
ANR	3452487	Identifier	scaling		3452423	1					
ANR	3452488	CompoundStatement		12:8:259:259	3452423	1					
ANR	3452489	ExpressionStatement	val = val > 0 ? 0x7FFFFFFFL : - 0x7FFFFFFFL	507:10:12728:12770	3452423	0	True				
ANR	3452490	AssignmentExpression	val = val > 0 ? 0x7FFFFFFFL : - 0x7FFFFFFFL		3452423	0		=			
ANR	3452491	Identifier	val		3452423	0					
ANR	3452492	ConditionalExpression	val > 0 ? 0x7FFFFFFFL : - 0x7FFFFFFFL		3452423	1					
ANR	3452493	Condition	val > 0		3452423	0					
ANR	3452494	RelationalExpression	val > 0		3452423	0		>			
ANR	3452495	Identifier	val		3452423	0					
ANR	3452496	PrimaryExpression	0		3452423	1					
ANR	3452497	PrimaryExpression	0x7FFFFFFFL		3452423	1					
ANR	3452498	UnaryOperationExpression	- 0x7FFFFFFFL		3452423	2					
ANR	3452499	UnaryOperator	-		3452423	0					
ANR	3452500	PrimaryExpression	0x7FFFFFFFL		3452423	1					
ANR	3452501	GotoStatement	goto Overflow ;	508:10:12782:12795	3452423	1	True				
ANR	3452502	Identifier	Overflow		3452423	0					
ANR	3452503	ExpressionStatement	val *= power_tens [ scaling ]	511:8:12816:12842	3452423	1	True				
ANR	3452504	AssignmentExpression	val *= power_tens [ scaling ]		3452423	0		*=			
ANR	3452505	Identifier	val		3452423	0					
ANR	3452506	ArrayIndexing	power_tens [ scaling ]		3452423	1					
ANR	3452507	Identifier	power_tens		3452423	0					
ANR	3452508	Identifier	scaling		3452423	1					
ANR	3452509	IfStatement	if ( val > 0x7FFF )		3452423	2					
ANR	3452510	Condition	val > 0x7FFF	514:11:12864:12875	3452423	0	True				
ANR	3452511	RelationalExpression	val > 0x7FFF		3452423	0		>			
ANR	3452512	Identifier	val		3452423	0					
ANR	3452513	PrimaryExpression	0x7FFF		3452423	1					
ANR	3452514	CompoundStatement		21:6:428:428	3452423	1					
ANR	3452515	ExpressionStatement	val = 0x7FFFFFFFL	516:8:12895:12912	3452423	0	True				
ANR	3452516	AssignmentExpression	val = 0x7FFFFFFFL		3452423	0		=			
ANR	3452517	Identifier	val		3452423	0					
ANR	3452518	PrimaryExpression	0x7FFFFFFFL		3452423	1					
ANR	3452519	GotoStatement	goto Overflow ;	517:8:12922:12935	3452423	1	True				
ANR	3452520	Identifier	Overflow		3452423	0					
ANR	3452521	ElseStatement	else		3452423	0					
ANR	3452522	IfStatement	if ( val < - 0x7FFF )		3452423	0					
ANR	3452523	Condition	val < - 0x7FFF	519:16:12961:12973	3452423	0	True				
ANR	3452524	RelationalExpression	val < - 0x7FFF		3452423	0		<			
ANR	3452525	Identifier	val		3452423	0					
ANR	3452526	UnaryOperationExpression	- 0x7FFF		3452423	1					
ANR	3452527	UnaryOperator	-		3452423	0					
ANR	3452528	PrimaryExpression	0x7FFF		3452423	1					
ANR	3452529	CompoundStatement		26:6:526:526	3452423	1					
ANR	3452530	ExpressionStatement	val = - 0x7FFFFFFFL	521:8:12993:13011	3452423	0	True				
ANR	3452531	AssignmentExpression	val = - 0x7FFFFFFFL		3452423	0		=			
ANR	3452532	Identifier	val		3452423	0					
ANR	3452533	UnaryOperationExpression	- 0x7FFFFFFFL		3452423	1					
ANR	3452534	UnaryOperator	-		3452423	0					
ANR	3452535	PrimaryExpression	0x7FFFFFFFL		3452423	1					
ANR	3452536	GotoStatement	goto Overflow ;	522:8:13021:13034	3452423	1	True				
ANR	3452537	Identifier	Overflow		3452423	0					
ANR	3452538	ReturnStatement	return ( FT_Long ) ( ( FT_ULong ) val << 16 ) ;	525:6:13051:13090	3452423	3	True				
ANR	3452539	CastExpression	( FT_Long ) ( ( FT_ULong ) val << 16 )		3452423	0					
ANR	3452540	CastTarget	FT_Long		3452423	0					
ANR	3452541	ShiftExpression	( FT_ULong ) val << 16		3452423	1		<<			
ANR	3452542	CastExpression	( FT_ULong ) val		3452423	0					
ANR	3452543	CastTarget	FT_ULong		3452423	0					
ANR	3452544	Identifier	val		3452423	1					
ANR	3452545	PrimaryExpression	16		3452423	1					
ANR	3452546	Label	Overflow :	527:4:13097:13105	3452423	4	True				
ANR	3452547	Identifier	Overflow		3452423	0					
ANR	3452548	ExpressionStatement	"FT_TRACE4 ( ( ""!!!OVERFLOW:!!!"" ) )"	528:6:13113:13145	3452423	5	True				
ANR	3452549	CallExpression	"FT_TRACE4 ( ( ""!!!OVERFLOW:!!!"" ) )"		3452423	0					
ANR	3452550	Callee	FT_TRACE4		3452423	0					
ANR	3452551	Identifier	FT_TRACE4		3452423	0					
ANR	3452552	ArgumentList	"""!!!OVERFLOW:!!!"""		3452423	1					
ANR	3452553	Argument	"""!!!OVERFLOW:!!!"""		3452423	0					
ANR	3452554	PrimaryExpression	"""!!!OVERFLOW:!!!"""		3452423	0					
ANR	3452555	ReturnStatement	return val ;	529:6:13153:13163	3452423	6	True				
ANR	3452556	Identifier	val		3452423	0					
ANR	3452557	ReturnType	static FT_Fixed		3452423	1					
ANR	3452558	Identifier	do_fixed		3452423	2					
ANR	3452559	ParameterList	"CFF_Parser parser , FT_Byte * * d , FT_Long scaling"		3452423	3					
ANR	3452560	Parameter	CFF_Parser parser	492:12:12373:12390	3452423	0	True				
ANR	3452561	ParameterType	CFF_Parser		3452423	0					
ANR	3452562	Identifier	parser		3452423	1					
ANR	3452563	Parameter	FT_Byte * * d	493:12:12405:12417	3452423	1	True				
ANR	3452564	ParameterType	FT_Byte * *		3452423	0					
ANR	3452565	Identifier	d		3452423	1					
ANR	3452566	Parameter	FT_Long scaling	494:12:12432:12450	3452423	2	True				
ANR	3452567	ParameterType	FT_Long		3452423	0					
ANR	3452568	Identifier	scaling		3452423	1					
ANR	3452569	CFGEntryNode	ENTRY		3452423		True				
ANR	3452570	CFGExitNode	EXIT		3452423		True				
ANR	3452571	Symbol	val		3452423						
ANR	3452572	Symbol	scaling		3452423						
ANR	3452573	Symbol	power_ten_limits		3452423						
ANR	3452574	Symbol	NULL		3452423						
ANR	3452575	Symbol	d		3452423						
ANR	3452576	Symbol	* power_tens		3452423						
ANR	3452577	Symbol	* * d		3452423						
ANR	3452578	Symbol	* power_ten_limits		3452423						
ANR	3452579	Symbol	parser -> limit		3452423						
ANR	3452580	Symbol	cff_parse_real		3452423						
ANR	3452581	Symbol	* d		3452423						
ANR	3452582	Symbol	cff_parse_integer		3452423						
ANR	3452583	Symbol	* parser		3452423						
ANR	3452584	Symbol	parser		3452423						
ANR	3452585	Symbol	* scaling		3452423						
ANR	3452586	Symbol	power_tens		3452423						
ANR	3452587	Symbol	FT_ABS		3452423						
ANR	3452588	Function	cff_parse_fixed	535:2:13240:13373							
ANR	3452589	FunctionDef	"cff_parse_fixed (CFF_Parser parser , FT_Byte * * d)"		3452588	0					
ANR	3452590	CompoundStatement		538:2:13332:13373	3452588	0					
ANR	3452591	ReturnStatement	"return do_fixed ( parser , d , 0 ) ;"	539:4:13338:13369	3452588	0	True				
ANR	3452592	CallExpression	"do_fixed ( parser , d , 0 )"		3452588	0					
ANR	3452593	Callee	do_fixed		3452588	0					
ANR	3452594	Identifier	do_fixed		3452588	0					
ANR	3452595	ArgumentList	parser		3452588	1					
ANR	3452596	Argument	parser		3452588	0					
ANR	3452597	Identifier	parser		3452588	0					
ANR	3452598	Argument	d		3452588	1					
ANR	3452599	Identifier	d		3452588	0					
ANR	3452600	Argument	0		3452588	2					
ANR	3452601	PrimaryExpression	0		3452588	0					
ANR	3452602	ReturnType	static FT_Fixed		3452588	1					
ANR	3452603	Identifier	cff_parse_fixed		3452588	2					
ANR	3452604	ParameterList	"CFF_Parser parser , FT_Byte * * d"		3452588	3					
ANR	3452605	Parameter	CFF_Parser parser	536:19:13275:13292	3452588	0	True				
ANR	3452606	ParameterType	CFF_Parser		3452588	0					
ANR	3452607	Identifier	parser		3452588	1					
ANR	3452608	Parameter	FT_Byte * * d	537:19:13314:13326	3452588	1	True				
ANR	3452609	ParameterType	FT_Byte * *		3452588	0					
ANR	3452610	Identifier	d		3452588	1					
ANR	3452611	CFGEntryNode	ENTRY		3452588		True				
ANR	3452612	CFGExitNode	EXIT		3452588		True				
ANR	3452613	Symbol	parser		3452588						
ANR	3452614	Symbol	d		3452588						
ANR	3452615	Symbol	do_fixed		3452588						
ANR	3452616	Function	cff_parse_fixed_scaled	545:2:13503:13703							
ANR	3452617	FunctionDef	"cff_parse_fixed_scaled (CFF_Parser parser , FT_Byte * * d , FT_Long scaling)"		3452616	0					
ANR	3452618	CompoundStatement		549:2:13656:13703	3452616	0					
ANR	3452619	ReturnStatement	"return do_fixed ( parser , d , scaling ) ;"	550:4:13662:13699	3452616	0	True				
ANR	3452620	CallExpression	"do_fixed ( parser , d , scaling )"		3452616	0					
ANR	3452621	Callee	do_fixed		3452616	0					
ANR	3452622	Identifier	do_fixed		3452616	0					
ANR	3452623	ArgumentList	parser		3452616	1					
ANR	3452624	Argument	parser		3452616	0					
ANR	3452625	Identifier	parser		3452616	0					
ANR	3452626	Argument	d		3452616	1					
ANR	3452627	Identifier	d		3452616	0					
ANR	3452628	Argument	scaling		3452616	2					
ANR	3452629	Identifier	scaling		3452616	0					
ANR	3452630	ReturnType	static FT_Fixed		3452616	1					
ANR	3452631	Identifier	cff_parse_fixed_scaled		3452616	2					
ANR	3452632	ParameterList	"CFF_Parser parser , FT_Byte * * d , FT_Long scaling"		3452616	3					
ANR	3452633	Parameter	CFF_Parser parser	546:26:13545:13562	3452616	0	True				
ANR	3452634	ParameterType	CFF_Parser		3452616	0					
ANR	3452635	Identifier	parser		3452616	1					
ANR	3452636	Parameter	FT_Byte * * d	547:26:13591:13603	3452616	1	True				
ANR	3452637	ParameterType	FT_Byte * *		3452616	0					
ANR	3452638	Identifier	d		3452616	1					
ANR	3452639	Parameter	FT_Long scaling	548:26:13632:13650	3452616	2	True				
ANR	3452640	ParameterType	FT_Long		3452616	0					
ANR	3452641	Identifier	scaling		3452616	1					
ANR	3452642	CFGEntryNode	ENTRY		3452616		True				
ANR	3452643	CFGExitNode	EXIT		3452616		True				
ANR	3452644	Symbol	scaling		3452616						
ANR	3452645	Symbol	parser		3452616						
ANR	3452646	Symbol	d		3452616						
ANR	3452647	Symbol	do_fixed		3452616						
ANR	3452648	Function	cff_parse_fixed_dynamic	557:2:13907:14941							
ANR	3452649	FunctionDef	"cff_parse_fixed_dynamic (CFF_Parser parser , FT_Byte * * d , FT_Long * scaling)"		3452648	0					
ANR	3452650	CompoundStatement		561:2:14063:14941	3452648	0					
ANR	3452651	ExpressionStatement	FT_ASSERT ( scaling )	562:4:14069:14089	3452648	0	True				
ANR	3452652	CallExpression	FT_ASSERT ( scaling )		3452648	0					
ANR	3452653	Callee	FT_ASSERT		3452648	0					
ANR	3452654	Identifier	FT_ASSERT		3452648	0					
ANR	3452655	ArgumentList	scaling		3452648	1					
ANR	3452656	Argument	scaling		3452648	0					
ANR	3452657	Identifier	scaling		3452648	0					
ANR	3452658	IfStatement	if ( * * d == 30 )		3452648	1					
ANR	3452659	Condition	* * d == 30	564:9:14101:14109	3452648	0	True				
ANR	3452660	EqualityExpression	* * d == 30		3452648	0		==			
ANR	3452661	UnaryOperationExpression	* * d		3452648	0					
ANR	3452662	UnaryOperator	*		3452648	0					
ANR	3452663	UnaryOperationExpression	* d		3452648	1					
ANR	3452664	UnaryOperator	*		3452648	0					
ANR	3452665	Identifier	d		3452648	1					
ANR	3452666	PrimaryExpression	30		3452648	1					
ANR	3452667	ReturnStatement	"return cff_parse_real ( * d , parser -> limit , 0 , scaling ) ;"	565:6:14119:14173	3452648	1	True				
ANR	3452668	CallExpression	"cff_parse_real ( * d , parser -> limit , 0 , scaling )"		3452648	0					
ANR	3452669	Callee	cff_parse_real		3452648	0					
ANR	3452670	Identifier	cff_parse_real		3452648	0					
ANR	3452671	ArgumentList	* d		3452648	1					
ANR	3452672	Argument	* d		3452648	0					
ANR	3452673	UnaryOperationExpression	* d		3452648	0					
ANR	3452674	UnaryOperator	*		3452648	0					
ANR	3452675	Identifier	d		3452648	1					
ANR	3452676	Argument	parser -> limit		3452648	1					
ANR	3452677	PtrMemberAccess	parser -> limit		3452648	0					
ANR	3452678	Identifier	parser		3452648	0					
ANR	3452679	Identifier	limit		3452648	1					
ANR	3452680	Argument	0		3452648	2					
ANR	3452681	PrimaryExpression	0		3452648	0					
ANR	3452682	Argument	scaling		3452648	3					
ANR	3452683	Identifier	scaling		3452648	0					
ANR	3452684	ElseStatement	else		3452648	0					
ANR	3452685	CompoundStatement		9:6:155:178	3452648	0					
ANR	3452686	IdentifierDeclStatement	FT_Long number ;	568:6:14196:14211	3452648	0	True				
ANR	3452687	IdentifierDecl	number		3452648	0					
ANR	3452688	IdentifierDeclType	FT_Long		3452648	0					
ANR	3452689	Identifier	number		3452648	1					
ANR	3452690	IdentifierDeclStatement	FT_Int integer_length ;	569:6:14219:14242	3452648	1	True				
ANR	3452691	IdentifierDecl	integer_length		3452648	0					
ANR	3452692	IdentifierDeclType	FT_Int		3452648	0					
ANR	3452693	Identifier	integer_length		3452648	1					
ANR	3452694	ExpressionStatement	"number = cff_parse_integer ( d [ 0 ] , d [ 1 ] )"	572:6:14252:14292	3452648	2	True				
ANR	3452695	AssignmentExpression	"number = cff_parse_integer ( d [ 0 ] , d [ 1 ] )"		3452648	0		=			
ANR	3452696	Identifier	number		3452648	0					
ANR	3452697	CallExpression	"cff_parse_integer ( d [ 0 ] , d [ 1 ] )"		3452648	1					
ANR	3452698	Callee	cff_parse_integer		3452648	0					
ANR	3452699	Identifier	cff_parse_integer		3452648	0					
ANR	3452700	ArgumentList	d [ 0 ]		3452648	1					
ANR	3452701	Argument	d [ 0 ]		3452648	0					
ANR	3452702	ArrayIndexing	d [ 0 ]		3452648	0					
ANR	3452703	Identifier	d		3452648	0					
ANR	3452704	PrimaryExpression	0		3452648	1					
ANR	3452705	Argument	d [ 1 ]		3452648	1					
ANR	3452706	ArrayIndexing	d [ 1 ]		3452648	0					
ANR	3452707	Identifier	d		3452648	0					
ANR	3452708	PrimaryExpression	1		3452648	1					
ANR	3452709	IfStatement	if ( number > 0x7FFFL )		3452648	3					
ANR	3452710	Condition	number > 0x7FFFL	574:11:14306:14321	3452648	0	True				
ANR	3452711	RelationalExpression	number > 0x7FFFL		3452648	0		>			
ANR	3452712	Identifier	number		3452648	0					
ANR	3452713	PrimaryExpression	0x7FFFL		3452648	1					
ANR	3452714	CompoundStatement		15:6:267:267	3452648	1					
ANR	3452715	ForStatement	for ( integer_length = 5 ; integer_length < 10 ; integer_length ++ )		3452648	0					
ANR	3452716	ForInit	integer_length = 5 ;	576:14:14347:14365	3452648	0	True				
ANR	3452717	AssignmentExpression	integer_length = 5		3452648	0		=			
ANR	3452718	Identifier	integer_length		3452648	0					
ANR	3452719	PrimaryExpression	5		3452648	1					
ANR	3452720	Condition	integer_length < 10	576:34:14367:14385	3452648	1	True				
ANR	3452721	RelationalExpression	integer_length < 10		3452648	0		<			
ANR	3452722	Identifier	integer_length		3452648	0					
ANR	3452723	PrimaryExpression	10		3452648	1					
ANR	3452724	PostIncDecOperationExpression	integer_length ++	576:55:14388:14403	3452648	2	True				
ANR	3452725	Identifier	integer_length		3452648	0					
ANR	3452726	IncDec	++		3452648	1					
ANR	3452727	IfStatement	if ( number < power_tens [ integer_length ] )		3452648	3					
ANR	3452728	Condition	number < power_tens [ integer_length ]	577:15:14422:14456	3452648	0	True				
ANR	3452729	RelationalExpression	number < power_tens [ integer_length ]		3452648	0		<			
ANR	3452730	Identifier	number		3452648	0					
ANR	3452731	ArrayIndexing	power_tens [ integer_length ]		3452648	1					
ANR	3452732	Identifier	power_tens		3452648	0					
ANR	3452733	Identifier	integer_length		3452648	1					
ANR	3452734	BreakStatement	break ;	578:12:14472:14477	3452648	1	True				
ANR	3452735	IfStatement	if ( ( number / power_tens [ integer_length - 5 ] ) > 0x7FFFL )		3452648	1					
ANR	3452736	Condition	( number / power_tens [ integer_length - 5 ] ) > 0x7FFFL	580:13:14493:14545	3452648	0	True				
ANR	3452737	RelationalExpression	( number / power_tens [ integer_length - 5 ] ) > 0x7FFFL		3452648	0		>			
ANR	3452738	MultiplicativeExpression	number / power_tens [ integer_length - 5 ]		3452648	0		/			
ANR	3452739	Identifier	number		3452648	0					
ANR	3452740	ArrayIndexing	power_tens [ integer_length - 5 ]		3452648	1					
ANR	3452741	Identifier	power_tens		3452648	0					
ANR	3452742	AdditiveExpression	integer_length - 5		3452648	1		-			
ANR	3452743	Identifier	integer_length		3452648	0					
ANR	3452744	PrimaryExpression	5		3452648	1					
ANR	3452745	PrimaryExpression	0x7FFFL		3452648	1					
ANR	3452746	CompoundStatement		21:8:493:493	3452648	1					
ANR	3452747	ExpressionStatement	* scaling = integer_length - 4	582:10:14569:14598	3452648	0	True				
ANR	3452748	AssignmentExpression	* scaling = integer_length - 4		3452648	0		=			
ANR	3452749	UnaryOperationExpression	* scaling		3452648	0					
ANR	3452750	UnaryOperator	*		3452648	0					
ANR	3452751	Identifier	scaling		3452648	1					
ANR	3452752	AdditiveExpression	integer_length - 4		3452648	1		-			
ANR	3452753	Identifier	integer_length		3452648	0					
ANR	3452754	PrimaryExpression	4		3452648	1					
ANR	3452755	ReturnStatement	"return FT_DivFix ( number , power_tens [ integer_length - 4 ] ) ;"	583:10:14610:14668	3452648	1	True				
ANR	3452756	CallExpression	"FT_DivFix ( number , power_tens [ integer_length - 4 ] )"		3452648	0					
ANR	3452757	Callee	FT_DivFix		3452648	0					
ANR	3452758	Identifier	FT_DivFix		3452648	0					
ANR	3452759	ArgumentList	number		3452648	1					
ANR	3452760	Argument	number		3452648	0					
ANR	3452761	Identifier	number		3452648	0					
ANR	3452762	Argument	power_tens [ integer_length - 4 ]		3452648	1					
ANR	3452763	ArrayIndexing	power_tens [ integer_length - 4 ]		3452648	0					
ANR	3452764	Identifier	power_tens		3452648	0					
ANR	3452765	AdditiveExpression	integer_length - 4		3452648	1		-			
ANR	3452766	Identifier	integer_length		3452648	0					
ANR	3452767	PrimaryExpression	4		3452648	1					
ANR	3452768	ElseStatement	else		3452648	0					
ANR	3452769	CompoundStatement		26:8:637:637	3452648	0					
ANR	3452770	ExpressionStatement	* scaling = integer_length - 5	587:10:14713:14742	3452648	0	True				
ANR	3452771	AssignmentExpression	* scaling = integer_length - 5		3452648	0		=			
ANR	3452772	UnaryOperationExpression	* scaling		3452648	0					
ANR	3452773	UnaryOperator	*		3452648	0					
ANR	3452774	Identifier	scaling		3452648	1					
ANR	3452775	AdditiveExpression	integer_length - 5		3452648	1		-			
ANR	3452776	Identifier	integer_length		3452648	0					
ANR	3452777	PrimaryExpression	5		3452648	1					
ANR	3452778	ReturnStatement	"return FT_DivFix ( number , power_tens [ integer_length - 5 ] ) ;"	588:10:14754:14812	3452648	1	True				
ANR	3452779	CallExpression	"FT_DivFix ( number , power_tens [ integer_length - 5 ] )"		3452648	0					
ANR	3452780	Callee	FT_DivFix		3452648	0					
ANR	3452781	Identifier	FT_DivFix		3452648	0					
ANR	3452782	ArgumentList	number		3452648	1					
ANR	3452783	Argument	number		3452648	0					
ANR	3452784	Identifier	number		3452648	0					
ANR	3452785	Argument	power_tens [ integer_length - 5 ]		3452648	1					
ANR	3452786	ArrayIndexing	power_tens [ integer_length - 5 ]		3452648	0					
ANR	3452787	Identifier	power_tens		3452648	0					
ANR	3452788	AdditiveExpression	integer_length - 5		3452648	1		-			
ANR	3452789	Identifier	integer_length		3452648	0					
ANR	3452790	PrimaryExpression	5		3452648	1					
ANR	3452791	ElseStatement	else		3452648	0					
ANR	3452792	CompoundStatement		32:6:785:785	3452648	0					
ANR	3452793	ExpressionStatement	* scaling = 0	593:8:14859:14871	3452648	0	True				
ANR	3452794	AssignmentExpression	* scaling = 0		3452648	0		=			
ANR	3452795	UnaryOperationExpression	* scaling		3452648	0					
ANR	3452796	UnaryOperator	*		3452648	0					
ANR	3452797	Identifier	scaling		3452648	1					
ANR	3452798	PrimaryExpression	0		3452648	1					
ANR	3452799	ReturnStatement	return ( FT_Long ) ( ( FT_ULong ) number << 16 ) ;	594:8:14881:14923	3452648	1	True				
ANR	3452800	CastExpression	( FT_Long ) ( ( FT_ULong ) number << 16 )		3452648	0					
ANR	3452801	CastTarget	FT_Long		3452648	0					
ANR	3452802	ShiftExpression	( FT_ULong ) number << 16		3452648	1		<<			
ANR	3452803	CastExpression	( FT_ULong ) number		3452648	0					
ANR	3452804	CastTarget	FT_ULong		3452648	0					
ANR	3452805	Identifier	number		3452648	1					
ANR	3452806	PrimaryExpression	16		3452648	1					
ANR	3452807	ReturnType	static FT_Fixed		3452648	1					
ANR	3452808	Identifier	cff_parse_fixed_dynamic		3452648	2					
ANR	3452809	ParameterList	"CFF_Parser parser , FT_Byte * * d , FT_Long * scaling"		3452648	3					
ANR	3452810	Parameter	CFF_Parser parser	558:27:13950:13967	3452648	0	True				
ANR	3452811	ParameterType	CFF_Parser		3452648	0					
ANR	3452812	Identifier	parser		3452648	1					
ANR	3452813	Parameter	FT_Byte * * d	559:27:13997:14009	3452648	1	True				
ANR	3452814	ParameterType	FT_Byte * *		3452648	0					
ANR	3452815	Identifier	d		3452648	1					
ANR	3452816	Parameter	FT_Long * scaling	560:27:14039:14057	3452648	2	True				
ANR	3452817	ParameterType	FT_Long *		3452648	0					
ANR	3452818	Identifier	scaling		3452648	1					
ANR	3452819	CFGEntryNode	ENTRY		3452648		True				
ANR	3452820	CFGExitNode	EXIT		3452648		True				
ANR	3452821	Symbol	scaling		3452648						
ANR	3452822	Symbol	d		3452648						
ANR	3452823	Symbol	* power_tens		3452648						
ANR	3452824	Symbol	FT_DivFix		3452648						
ANR	3452825	Symbol	* * d		3452648						
ANR	3452826	Symbol	integer_length		3452648						
ANR	3452827	Symbol	cff_parse_real		3452648						
ANR	3452828	Symbol	parser -> limit		3452648						
ANR	3452829	Symbol	* d		3452648						
ANR	3452830	Symbol	cff_parse_integer		3452648						
ANR	3452831	Symbol	* parser		3452648						
ANR	3452832	Symbol	number		3452648						
ANR	3452833	Symbol	parser		3452648						
ANR	3452834	Symbol	* scaling		3452648						
ANR	3452835	Symbol	* integer_length		3452648						
ANR	3452836	Symbol	power_tens		3452648						
ANR	3452837	Function	cff_parse_font_matrix	600:2:14947:18400							
ANR	3452838	FunctionDef	cff_parse_font_matrix (CFF_Parser parser)		3452837	0					
ANR	3452839	CompoundStatement		602:2:15011:18400	3452837	0					
ANR	3452840	IdentifierDeclStatement	CFF_FontRecDict dict = ( CFF_FontRecDict ) parser -> object ;	603:4:15017:15074	3452837	0	True				
ANR	3452841	IdentifierDecl	dict = ( CFF_FontRecDict ) parser -> object		3452837	0					
ANR	3452842	IdentifierDeclType	CFF_FontRecDict		3452837	0					
ANR	3452843	Identifier	dict		3452837	1					
ANR	3452844	AssignmentExpression	dict = ( CFF_FontRecDict ) parser -> object		3452837	2		=			
ANR	3452845	Identifier	dict		3452837	0					
ANR	3452846	CastExpression	( CFF_FontRecDict ) parser -> object		3452837	1					
ANR	3452847	CastTarget	CFF_FontRecDict		3452837	0					
ANR	3452848	PtrMemberAccess	parser -> object		3452837	1					
ANR	3452849	Identifier	parser		3452837	0					
ANR	3452850	Identifier	object		3452837	1					
ANR	3452851	IdentifierDeclStatement	FT_Matrix * matrix = & dict -> font_matrix ;	604:4:15080:15124	3452837	1	True				
ANR	3452852	IdentifierDecl	* matrix = & dict -> font_matrix		3452837	0					
ANR	3452853	IdentifierDeclType	FT_Matrix *		3452837	0					
ANR	3452854	Identifier	matrix		3452837	1					
ANR	3452855	AssignmentExpression	* matrix = & dict -> font_matrix		3452837	2		=			
ANR	3452856	Identifier	matrix		3452837	0					
ANR	3452857	UnaryOperationExpression	& dict -> font_matrix		3452837	1					
ANR	3452858	UnaryOperator	&		3452837	0					
ANR	3452859	PtrMemberAccess	dict -> font_matrix		3452837	1					
ANR	3452860	Identifier	dict		3452837	0					
ANR	3452861	Identifier	font_matrix		3452837	1					
ANR	3452862	IdentifierDeclStatement	FT_Vector * offset = & dict -> font_offset ;	605:4:15130:15174	3452837	2	True				
ANR	3452863	IdentifierDecl	* offset = & dict -> font_offset		3452837	0					
ANR	3452864	IdentifierDeclType	FT_Vector *		3452837	0					
ANR	3452865	Identifier	offset		3452837	1					
ANR	3452866	AssignmentExpression	* offset = & dict -> font_offset		3452837	2		=			
ANR	3452867	Identifier	offset		3452837	0					
ANR	3452868	UnaryOperationExpression	& dict -> font_offset		3452837	1					
ANR	3452869	UnaryOperator	&		3452837	0					
ANR	3452870	PtrMemberAccess	dict -> font_offset		3452837	1					
ANR	3452871	Identifier	dict		3452837	0					
ANR	3452872	Identifier	font_offset		3452837	1					
ANR	3452873	IdentifierDeclStatement	FT_ULong * upm = & dict -> units_per_em ;	606:4:15180:15225	3452837	3	True				
ANR	3452874	IdentifierDecl	* upm = & dict -> units_per_em		3452837	0					
ANR	3452875	IdentifierDeclType	FT_ULong *		3452837	0					
ANR	3452876	Identifier	upm		3452837	1					
ANR	3452877	AssignmentExpression	* upm = & dict -> units_per_em		3452837	2		=			
ANR	3452878	Identifier	upm		3452837	0					
ANR	3452879	UnaryOperationExpression	& dict -> units_per_em		3452837	1					
ANR	3452880	UnaryOperator	&		3452837	0					
ANR	3452881	PtrMemberAccess	dict -> units_per_em		3452837	1					
ANR	3452882	Identifier	dict		3452837	0					
ANR	3452883	Identifier	units_per_em		3452837	1					
ANR	3452884	IdentifierDeclStatement	FT_Byte * * data = parser -> stack ;	607:4:15231:15270	3452837	4	True				
ANR	3452885	IdentifierDecl	* * data = parser -> stack		3452837	0					
ANR	3452886	IdentifierDeclType	FT_Byte * *		3452837	0					
ANR	3452887	Identifier	data		3452837	1					
ANR	3452888	AssignmentExpression	* * data = parser -> stack		3452837	2		=			
ANR	3452889	Identifier	data		3452837	0					
ANR	3452890	PtrMemberAccess	parser -> stack		3452837	1					
ANR	3452891	Identifier	parser		3452837	0					
ANR	3452892	Identifier	stack		3452837	1					
ANR	3452893	IdentifierDeclStatement	FT_Error error = FT_ERR ( Stack_Underflow ) ;	608:4:15276:15327	3452837	5	True				
ANR	3452894	IdentifierDecl	error = FT_ERR ( Stack_Underflow )		3452837	0					
ANR	3452895	IdentifierDeclType	FT_Error		3452837	0					
ANR	3452896	Identifier	error		3452837	1					
ANR	3452897	AssignmentExpression	error = FT_ERR ( Stack_Underflow )		3452837	2		=			
ANR	3452898	Identifier	error		3452837	0					
ANR	3452899	CallExpression	FT_ERR ( Stack_Underflow )		3452837	1					
ANR	3452900	Callee	FT_ERR		3452837	0					
ANR	3452901	Identifier	FT_ERR		3452837	0					
ANR	3452902	ArgumentList	Stack_Underflow		3452837	1					
ANR	3452903	Argument	Stack_Underflow		3452837	0					
ANR	3452904	Identifier	Stack_Underflow		3452837	0					
ANR	3452905	IfStatement	if ( parser -> top >= parser -> stack + 6 )		3452837	6					
ANR	3452906	Condition	parser -> top >= parser -> stack + 6	611:9:15340:15371	3452837	0	True				
ANR	3452907	RelationalExpression	parser -> top >= parser -> stack + 6		3452837	0		>=			
ANR	3452908	PtrMemberAccess	parser -> top		3452837	0					
ANR	3452909	Identifier	parser		3452837	0					
ANR	3452910	Identifier	top		3452837	1					
ANR	3452911	AdditiveExpression	parser -> stack + 6		3452837	1		+			
ANR	3452912	PtrMemberAccess	parser -> stack		3452837	0					
ANR	3452913	Identifier	parser		3452837	0					
ANR	3452914	Identifier	stack		3452837	1					
ANR	3452915	PrimaryExpression	6		3452837	1					
ANR	3452916	CompoundStatement		16:6:473:483	3452837	1					
ANR	3452917	IdentifierDeclStatement	FT_Fixed values [ 6 ] ;	613:6:15387:15406	3452837	0	True				
ANR	3452918	IdentifierDecl	values [ 6 ]		3452837	0					
ANR	3452919	IdentifierDeclType	FT_Fixed [ 6 ]		3452837	0					
ANR	3452920	Identifier	values		3452837	1					
ANR	3452921	PrimaryExpression	6		3452837	2					
ANR	3452922	IdentifierDeclStatement	FT_Long scalings [ 6 ] ;	614:6:15414:15435	3452837	1	True				
ANR	3452923	IdentifierDecl	scalings [ 6 ]		3452837	0					
ANR	3452924	IdentifierDeclType	FT_Long [ 6 ]		3452837	0					
ANR	3452925	Identifier	scalings		3452837	1					
ANR	3452926	PrimaryExpression	6		3452837	2					
ANR	3452927	IdentifierDeclStatement	"FT_Long min_scaling , max_scaling ;"	616:6:15444:15477	3452837	2	True				
ANR	3452928	IdentifierDecl	min_scaling		3452837	0					
ANR	3452929	IdentifierDeclType	FT_Long		3452837	0					
ANR	3452930	Identifier	min_scaling		3452837	1					
ANR	3452931	IdentifierDecl	max_scaling		3452837	1					
ANR	3452932	IdentifierDeclType	FT_Long		3452837	0					
ANR	3452933	Identifier	max_scaling		3452837	1					
ANR	3452934	IdentifierDeclStatement	int i ;	617:6:15485:15495	3452837	3	True				
ANR	3452935	IdentifierDecl	i		3452837	0					
ANR	3452936	IdentifierDeclType	int		3452837	0					
ANR	3452937	Identifier	i		3452837	1					
ANR	3452938	ExpressionStatement	error = FT_Err_Ok	620:6:15505:15522	3452837	4	True				
ANR	3452939	AssignmentExpression	error = FT_Err_Ok		3452837	0		=			
ANR	3452940	Identifier	error		3452837	0					
ANR	3452941	Identifier	FT_Err_Ok		3452837	1					
ANR	3452942	ExpressionStatement	dict -> has_font_matrix = TRUE	622:6:15531:15559	3452837	5	True				
ANR	3452943	AssignmentExpression	dict -> has_font_matrix = TRUE		3452837	0		=			
ANR	3452944	PtrMemberAccess	dict -> has_font_matrix		3452837	0					
ANR	3452945	Identifier	dict		3452837	0					
ANR	3452946	Identifier	has_font_matrix		3452837	1					
ANR	3452947	Identifier	TRUE		3452837	1					
ANR	3452948	ExpressionStatement	max_scaling = FT_LONG_MIN	630:6:15959:15984	3452837	6	True				
ANR	3452949	AssignmentExpression	max_scaling = FT_LONG_MIN		3452837	0		=			
ANR	3452950	Identifier	max_scaling		3452837	0					
ANR	3452951	Identifier	FT_LONG_MIN		3452837	1					
ANR	3452952	ExpressionStatement	min_scaling = FT_LONG_MAX	631:6:15992:16017	3452837	7	True				
ANR	3452953	AssignmentExpression	min_scaling = FT_LONG_MAX		3452837	0		=			
ANR	3452954	Identifier	min_scaling		3452837	0					
ANR	3452955	Identifier	FT_LONG_MAX		3452837	1					
ANR	3452956	ForStatement	for ( i = 0 ; i < 6 ; i ++ )		3452837	8					
ANR	3452957	ForInit	i = 0 ;	633:12:16032:16037	3452837	0	True				
ANR	3452958	AssignmentExpression	i = 0		3452837	0		=			
ANR	3452959	Identifier	i		3452837	0					
ANR	3452960	PrimaryExpression	0		3452837	1					
ANR	3452961	Condition	i < 6	633:19:16039:16043	3452837	1	True				
ANR	3452962	RelationalExpression	i < 6		3452837	0		<			
ANR	3452963	Identifier	i		3452837	0					
ANR	3452964	PrimaryExpression	6		3452837	1					
ANR	3452965	PostIncDecOperationExpression	i ++	633:26:16046:16048	3452837	2	True				
ANR	3452966	Identifier	i		3452837	0					
ANR	3452967	IncDec	++		3452837	1					
ANR	3452968	CompoundStatement		33:6:1046:1046	3452837	3					
ANR	3452969	ExpressionStatement	"values [ i ] = cff_parse_fixed_dynamic ( parser , data ++ , & scalings [ i ] )"	635:8:16068:16135	3452837	0	True				
ANR	3452970	AssignmentExpression	"values [ i ] = cff_parse_fixed_dynamic ( parser , data ++ , & scalings [ i ] )"		3452837	0		=			
ANR	3452971	ArrayIndexing	values [ i ]		3452837	0					
ANR	3452972	Identifier	values		3452837	0					
ANR	3452973	Identifier	i		3452837	1					
ANR	3452974	CallExpression	"cff_parse_fixed_dynamic ( parser , data ++ , & scalings [ i ] )"		3452837	1					
ANR	3452975	Callee	cff_parse_fixed_dynamic		3452837	0					
ANR	3452976	Identifier	cff_parse_fixed_dynamic		3452837	0					
ANR	3452977	ArgumentList	parser		3452837	1					
ANR	3452978	Argument	parser		3452837	0					
ANR	3452979	Identifier	parser		3452837	0					
ANR	3452980	Argument	data ++		3452837	1					
ANR	3452981	PostIncDecOperationExpression	data ++		3452837	0					
ANR	3452982	Identifier	data		3452837	0					
ANR	3452983	IncDec	++		3452837	1					
ANR	3452984	Argument	& scalings [ i ]		3452837	2					
ANR	3452985	UnaryOperationExpression	& scalings [ i ]		3452837	0					
ANR	3452986	UnaryOperator	&		3452837	0					
ANR	3452987	ArrayIndexing	scalings [ i ]		3452837	1					
ANR	3452988	Identifier	scalings		3452837	0					
ANR	3452989	Identifier	i		3452837	1					
ANR	3452990	IfStatement	if ( values [ i ] )		3452837	1					
ANR	3452991	Condition	values [ i ]	636:13:16150:16158	3452837	0	True				
ANR	3452992	ArrayIndexing	values [ i ]		3452837	0					
ANR	3452993	Identifier	values		3452837	0					
ANR	3452994	Identifier	i		3452837	1					
ANR	3452995	CompoundStatement		36:8:1158:1158	3452837	1					
ANR	3452996	IfStatement	if ( scalings [ i ] > max_scaling )		3452837	0					
ANR	3452997	Condition	scalings [ i ] > max_scaling	638:15:16187:16211	3452837	0	True				
ANR	3452998	RelationalExpression	scalings [ i ] > max_scaling		3452837	0		>			
ANR	3452999	ArrayIndexing	scalings [ i ]		3452837	0					
ANR	3453000	Identifier	scalings		3452837	0					
ANR	3453001	Identifier	i		3452837	1					
ANR	3453002	Identifier	max_scaling		3452837	1					
ANR	3453003	ExpressionStatement	max_scaling = scalings [ i ]	639:12:16227:16252	3452837	1	True				
ANR	3453004	AssignmentExpression	max_scaling = scalings [ i ]		3452837	0		=			
ANR	3453005	Identifier	max_scaling		3452837	0					
ANR	3453006	ArrayIndexing	scalings [ i ]		3452837	1					
ANR	3453007	Identifier	scalings		3452837	0					
ANR	3453008	Identifier	i		3452837	1					
ANR	3453009	IfStatement	if ( scalings [ i ] < min_scaling )		3452837	1					
ANR	3453010	Condition	scalings [ i ] < min_scaling	640:15:16269:16293	3452837	0	True				
ANR	3453011	RelationalExpression	scalings [ i ] < min_scaling		3452837	0		<			
ANR	3453012	ArrayIndexing	scalings [ i ]		3452837	0					
ANR	3453013	Identifier	scalings		3452837	0					
ANR	3453014	Identifier	i		3452837	1					
ANR	3453015	Identifier	min_scaling		3452837	1					
ANR	3453016	ExpressionStatement	min_scaling = scalings [ i ]	641:12:16309:16334	3452837	1	True				
ANR	3453017	AssignmentExpression	min_scaling = scalings [ i ]		3452837	0		=			
ANR	3453018	Identifier	min_scaling		3452837	0					
ANR	3453019	ArrayIndexing	scalings [ i ]		3452837	1					
ANR	3453020	Identifier	scalings		3452837	0					
ANR	3453021	Identifier	i		3452837	1					
ANR	3453022	IfStatement	if ( max_scaling < - 9 || max_scaling > 0 || ( max_scaling - min_scaling ) < 0 || ( max_scaling - min_scaling ) > 9 )		3452837	9					
ANR	3453023	Condition	max_scaling < - 9 || max_scaling > 0 || ( max_scaling - min_scaling ) < 0 || ( max_scaling - min_scaling ) > 9	645:11:16366:16542	3452837	0	True				
ANR	3453024	OrExpression	max_scaling < - 9 || max_scaling > 0 || ( max_scaling - min_scaling ) < 0 || ( max_scaling - min_scaling ) > 9		3452837	0		||			
ANR	3453025	RelationalExpression	max_scaling < - 9		3452837	0		<			
ANR	3453026	Identifier	max_scaling		3452837	0					
ANR	3453027	UnaryOperationExpression	- 9		3452837	1					
ANR	3453028	UnaryOperator	-		3452837	0					
ANR	3453029	PrimaryExpression	9		3452837	1					
ANR	3453030	OrExpression	max_scaling > 0 || ( max_scaling - min_scaling ) < 0 || ( max_scaling - min_scaling ) > 9		3452837	1		||			
ANR	3453031	RelationalExpression	max_scaling > 0		3452837	0		>			
ANR	3453032	Identifier	max_scaling		3452837	0					
ANR	3453033	PrimaryExpression	0		3452837	1					
ANR	3453034	OrExpression	( max_scaling - min_scaling ) < 0 || ( max_scaling - min_scaling ) > 9		3452837	1		||			
ANR	3453035	RelationalExpression	( max_scaling - min_scaling ) < 0		3452837	0		<			
ANR	3453036	AdditiveExpression	max_scaling - min_scaling		3452837	0		-			
ANR	3453037	Identifier	max_scaling		3452837	0					
ANR	3453038	Identifier	min_scaling		3452837	1					
ANR	3453039	PrimaryExpression	0		3452837	1					
ANR	3453040	RelationalExpression	( max_scaling - min_scaling ) > 9		3452837	1		>			
ANR	3453041	AdditiveExpression	max_scaling - min_scaling		3452837	0		-			
ANR	3453042	Identifier	max_scaling		3452837	0					
ANR	3453043	Identifier	min_scaling		3452837	1					
ANR	3453044	PrimaryExpression	9		3452837	1					
ANR	3453045	CompoundStatement		48:6:1540:1540	3452837	1					
ANR	3453046	Statement	FT_TRACE1	652:8:16627:16635	3452837	0	True				
ANR	3453047	Statement	(	652:17:16636:16636	3452837	1	True				
ANR	3453048	Statement	(	652:18:16637:16637	3452837	2	True				
ANR	3453049	Statement	"""cff_parse_font_matrix:"""	652:20:16639:16662	3452837	3	True				
ANR	3453050	Statement	""" strange scaling values (minimum %d, maximum %d),\\n"""	653:20:16684:16736	3452837	4	True				
ANR	3453051	Statement	"""                      """	654:20:16758:16781	3452837	5	True				
ANR	3453052	Statement	""" using default matrix\\n"""	655:20:16803:16827	3452837	6	True				
ANR	3453053	Statement	","	655:45:16828:16828	3452837	7	True				
ANR	3453054	Statement	min_scaling	655:47:16830:16840	3452837	8	True				
ANR	3453055	Statement	","	655:58:16841:16841	3452837	9	True				
ANR	3453056	Statement	max_scaling	655:60:16843:16853	3452837	10	True				
ANR	3453057	Statement	)	655:72:16855:16855	3452837	11	True				
ANR	3453058	Statement	)	655:73:16856:16856	3452837	12	True				
ANR	3453059	ExpressionStatement		655:74:16857:16857	3452837	13	True				
ANR	3453060	ExpressionStatement	matrix -> xx = 0x10000L	657:8:16868:16889	3452837	14	True				
ANR	3453061	AssignmentExpression	matrix -> xx = 0x10000L		3452837	0		=			
ANR	3453062	PtrMemberAccess	matrix -> xx		3452837	0					
ANR	3453063	Identifier	matrix		3452837	0					
ANR	3453064	Identifier	xx		3452837	1					
ANR	3453065	PrimaryExpression	0x10000L		3452837	1					
ANR	3453066	ExpressionStatement	matrix -> yx = 0	658:8:16899:16913	3452837	15	True				
ANR	3453067	AssignmentExpression	matrix -> yx = 0		3452837	0		=			
ANR	3453068	PtrMemberAccess	matrix -> yx		3452837	0					
ANR	3453069	Identifier	matrix		3452837	0					
ANR	3453070	Identifier	yx		3452837	1					
ANR	3453071	PrimaryExpression	0		3452837	1					
ANR	3453072	ExpressionStatement	matrix -> xy = 0	659:8:16923:16937	3452837	16	True				
ANR	3453073	AssignmentExpression	matrix -> xy = 0		3452837	0		=			
ANR	3453074	PtrMemberAccess	matrix -> xy		3452837	0					
ANR	3453075	Identifier	matrix		3452837	0					
ANR	3453076	Identifier	xy		3452837	1					
ANR	3453077	PrimaryExpression	0		3452837	1					
ANR	3453078	ExpressionStatement	matrix -> yy = 0x10000L	660:8:16947:16968	3452837	17	True				
ANR	3453079	AssignmentExpression	matrix -> yy = 0x10000L		3452837	0		=			
ANR	3453080	PtrMemberAccess	matrix -> yy		3452837	0					
ANR	3453081	Identifier	matrix		3452837	0					
ANR	3453082	Identifier	yy		3452837	1					
ANR	3453083	PrimaryExpression	0x10000L		3452837	1					
ANR	3453084	ExpressionStatement	offset -> x = 0	661:8:16978:16992	3452837	18	True				
ANR	3453085	AssignmentExpression	offset -> x = 0		3452837	0		=			
ANR	3453086	PtrMemberAccess	offset -> x		3452837	0					
ANR	3453087	Identifier	offset		3452837	0					
ANR	3453088	Identifier	x		3452837	1					
ANR	3453089	PrimaryExpression	0		3452837	1					
ANR	3453090	ExpressionStatement	offset -> y = 0	662:8:17002:17016	3452837	19	True				
ANR	3453091	AssignmentExpression	offset -> y = 0		3452837	0		=			
ANR	3453092	PtrMemberAccess	offset -> y		3452837	0					
ANR	3453093	Identifier	offset		3452837	0					
ANR	3453094	Identifier	y		3452837	1					
ANR	3453095	PrimaryExpression	0		3452837	1					
ANR	3453096	ExpressionStatement	* upm = 1	663:8:17026:17040	3452837	20	True				
ANR	3453097	AssignmentExpression	* upm = 1		3452837	0		=			
ANR	3453098	UnaryOperationExpression	* upm		3452837	0					
ANR	3453099	UnaryOperator	*		3452837	0					
ANR	3453100	Identifier	upm		3452837	1					
ANR	3453101	PrimaryExpression	1		3452837	1					
ANR	3453102	GotoStatement	goto Exit ;	665:8:17051:17060	3452837	21	True				
ANR	3453103	Identifier	Exit		3452837	0					
ANR	3453104	ForStatement	for ( i = 0 ; i < 6 ; i ++ )		3452837	10					
ANR	3453105	ForInit	i = 0 ;	668:12:17083:17088	3452837	0	True				
ANR	3453106	AssignmentExpression	i = 0		3452837	0		=			
ANR	3453107	Identifier	i		3452837	0					
ANR	3453108	PrimaryExpression	0		3452837	1					
ANR	3453109	Condition	i < 6	668:19:17090:17094	3452837	1	True				
ANR	3453110	RelationalExpression	i < 6		3452837	0		<			
ANR	3453111	Identifier	i		3452837	0					
ANR	3453112	PrimaryExpression	6		3452837	1					
ANR	3453113	PostIncDecOperationExpression	i ++	668:26:17097:17099	3452837	2	True				
ANR	3453114	Identifier	i		3452837	0					
ANR	3453115	IncDec	++		3452837	1					
ANR	3453116	CompoundStatement		70:8:2144:2175	3452837	3					
ANR	3453117	IdentifierDeclStatement	FT_Fixed value = values [ i ] ;	670:8:17119:17146	3452837	0	True				
ANR	3453118	IdentifierDecl	value = values [ i ]		3452837	0					
ANR	3453119	IdentifierDeclType	FT_Fixed		3452837	0					
ANR	3453120	Identifier	value		3452837	1					
ANR	3453121	AssignmentExpression	value = values [ i ]		3452837	2		=			
ANR	3453122	Identifier	value		3452837	0					
ANR	3453123	ArrayIndexing	values [ i ]		3452837	1					
ANR	3453124	Identifier	values		3452837	0					
ANR	3453125	Identifier	i		3452837	1					
ANR	3453126	IdentifierDeclStatement	"FT_Long divisor , half_divisor ;"	671:8:17156:17187	3452837	1	True				
ANR	3453127	IdentifierDecl	divisor		3452837	0					
ANR	3453128	IdentifierDeclType	FT_Long		3452837	0					
ANR	3453129	Identifier	divisor		3452837	1					
ANR	3453130	IdentifierDecl	half_divisor		3452837	1					
ANR	3453131	IdentifierDeclType	FT_Long		3452837	0					
ANR	3453132	Identifier	half_divisor		3452837	1					
ANR	3453133	IfStatement	if ( ! value )		3452837	2					
ANR	3453134	Condition	! value	674:13:17204:17209	3452837	0	True				
ANR	3453135	UnaryOperationExpression	! value		3452837	0					
ANR	3453136	UnaryOperator	!		3452837	0					
ANR	3453137	Identifier	value		3452837	1					
ANR	3453138	ContinueStatement	continue ;	675:10:17223:17231	3452837	1	True				
ANR	3453139	ExpressionStatement	divisor = power_tens [ max_scaling - scalings [ i ] ]	677:8:17242:17294	3452837	3	True				
ANR	3453140	AssignmentExpression	divisor = power_tens [ max_scaling - scalings [ i ] ]		3452837	0		=			
ANR	3453141	Identifier	divisor		3452837	0					
ANR	3453142	ArrayIndexing	power_tens [ max_scaling - scalings [ i ] ]		3452837	1					
ANR	3453143	Identifier	power_tens		3452837	0					
ANR	3453144	AdditiveExpression	max_scaling - scalings [ i ]		3452837	1		-			
ANR	3453145	Identifier	max_scaling		3452837	0					
ANR	3453146	ArrayIndexing	scalings [ i ]		3452837	1					
ANR	3453147	Identifier	scalings		3452837	0					
ANR	3453148	Identifier	i		3452837	1					
ANR	3453149	ExpressionStatement	half_divisor = divisor >> 1	678:8:17304:17331	3452837	4	True				
ANR	3453150	AssignmentExpression	half_divisor = divisor >> 1		3452837	0		=			
ANR	3453151	Identifier	half_divisor		3452837	0					
ANR	3453152	ShiftExpression	divisor >> 1		3452837	1		>>			
ANR	3453153	Identifier	divisor		3452837	0					
ANR	3453154	PrimaryExpression	1		3452837	1					
ANR	3453155	IfStatement	if ( value < 0 )		3452837	5					
ANR	3453156	Condition	value < 0	680:13:17347:17355	3452837	0	True				
ANR	3453157	RelationalExpression	value < 0		3452837	0		<			
ANR	3453158	Identifier	value		3452837	0					
ANR	3453159	PrimaryExpression	0		3452837	1					
ANR	3453160	CompoundStatement		80:8:2355:2355	3452837	1					
ANR	3453161	IfStatement	if ( FT_LONG_MIN + half_divisor < value )		3452837	0					
ANR	3453162	Condition	FT_LONG_MIN + half_divisor < value	682:15:17384:17417	3452837	0	True				
ANR	3453163	RelationalExpression	FT_LONG_MIN + half_divisor < value		3452837	0		<			
ANR	3453164	AdditiveExpression	FT_LONG_MIN + half_divisor		3452837	0		+			
ANR	3453165	Identifier	FT_LONG_MIN		3452837	0					
ANR	3453166	Identifier	half_divisor		3452837	1					
ANR	3453167	Identifier	value		3452837	1					
ANR	3453168	ExpressionStatement	values [ i ] = ( value - half_divisor ) / divisor	683:12:17433:17479	3452837	1	True				
ANR	3453169	AssignmentExpression	values [ i ] = ( value - half_divisor ) / divisor		3452837	0		=			
ANR	3453170	ArrayIndexing	values [ i ]		3452837	0					
ANR	3453171	Identifier	values		3452837	0					
ANR	3453172	Identifier	i		3452837	1					
ANR	3453173	MultiplicativeExpression	( value - half_divisor ) / divisor		3452837	1		/			
ANR	3453174	AdditiveExpression	value - half_divisor		3452837	0		-			
ANR	3453175	Identifier	value		3452837	0					
ANR	3453176	Identifier	half_divisor		3452837	1					
ANR	3453177	Identifier	divisor		3452837	1					
ANR	3453178	ElseStatement	else		3452837	0					
ANR	3453179	ExpressionStatement	values [ i ] = FT_LONG_MIN / divisor	685:12:17508:17541	3452837	0	True				
ANR	3453180	AssignmentExpression	values [ i ] = FT_LONG_MIN / divisor		3452837	0		=			
ANR	3453181	ArrayIndexing	values [ i ]		3452837	0					
ANR	3453182	Identifier	values		3452837	0					
ANR	3453183	Identifier	i		3452837	1					
ANR	3453184	MultiplicativeExpression	FT_LONG_MIN / divisor		3452837	1		/			
ANR	3453185	Identifier	FT_LONG_MIN		3452837	0					
ANR	3453186	Identifier	divisor		3452837	1					
ANR	3453187	ElseStatement	else		3452837	0					
ANR	3453188	CompoundStatement		87:8:2562:2562	3452837	0					
ANR	3453189	IfStatement	if ( FT_LONG_MAX - half_divisor > value )		3452837	0					
ANR	3453190	Condition	FT_LONG_MAX - half_divisor > value	689:15:17591:17624	3452837	0	True				
ANR	3453191	RelationalExpression	FT_LONG_MAX - half_divisor > value		3452837	0		>			
ANR	3453192	AdditiveExpression	FT_LONG_MAX - half_divisor		3452837	0		-			
ANR	3453193	Identifier	FT_LONG_MAX		3452837	0					
ANR	3453194	Identifier	half_divisor		3452837	1					
ANR	3453195	Identifier	value		3452837	1					
ANR	3453196	ExpressionStatement	values [ i ] = ( value + half_divisor ) / divisor	690:12:17640:17686	3452837	1	True				
ANR	3453197	AssignmentExpression	values [ i ] = ( value + half_divisor ) / divisor		3452837	0		=			
ANR	3453198	ArrayIndexing	values [ i ]		3452837	0					
ANR	3453199	Identifier	values		3452837	0					
ANR	3453200	Identifier	i		3452837	1					
ANR	3453201	MultiplicativeExpression	( value + half_divisor ) / divisor		3452837	1		/			
ANR	3453202	AdditiveExpression	value + half_divisor		3452837	0		+			
ANR	3453203	Identifier	value		3452837	0					
ANR	3453204	Identifier	half_divisor		3452837	1					
ANR	3453205	Identifier	divisor		3452837	1					
ANR	3453206	ElseStatement	else		3452837	0					
ANR	3453207	ExpressionStatement	values [ i ] = FT_LONG_MAX / divisor	692:12:17715:17748	3452837	0	True				
ANR	3453208	AssignmentExpression	values [ i ] = FT_LONG_MAX / divisor		3452837	0		=			
ANR	3453209	ArrayIndexing	values [ i ]		3452837	0					
ANR	3453210	Identifier	values		3452837	0					
ANR	3453211	Identifier	i		3452837	1					
ANR	3453212	MultiplicativeExpression	FT_LONG_MAX / divisor		3452837	1		/			
ANR	3453213	Identifier	FT_LONG_MAX		3452837	0					
ANR	3453214	Identifier	divisor		3452837	1					
ANR	3453215	ExpressionStatement	matrix -> xx = values [ 0 ]	696:6:17775:17797	3452837	11	True				
ANR	3453216	AssignmentExpression	matrix -> xx = values [ 0 ]		3452837	0		=			
ANR	3453217	PtrMemberAccess	matrix -> xx		3452837	0					
ANR	3453218	Identifier	matrix		3452837	0					
ANR	3453219	Identifier	xx		3452837	1					
ANR	3453220	ArrayIndexing	values [ 0 ]		3452837	1					
ANR	3453221	Identifier	values		3452837	0					
ANR	3453222	PrimaryExpression	0		3452837	1					
ANR	3453223	ExpressionStatement	matrix -> yx = values [ 1 ]	697:6:17805:17827	3452837	12	True				
ANR	3453224	AssignmentExpression	matrix -> yx = values [ 1 ]		3452837	0		=			
ANR	3453225	PtrMemberAccess	matrix -> yx		3452837	0					
ANR	3453226	Identifier	matrix		3452837	0					
ANR	3453227	Identifier	yx		3452837	1					
ANR	3453228	ArrayIndexing	values [ 1 ]		3452837	1					
ANR	3453229	Identifier	values		3452837	0					
ANR	3453230	PrimaryExpression	1		3452837	1					
ANR	3453231	ExpressionStatement	matrix -> xy = values [ 2 ]	698:6:17835:17857	3452837	13	True				
ANR	3453232	AssignmentExpression	matrix -> xy = values [ 2 ]		3452837	0		=			
ANR	3453233	PtrMemberAccess	matrix -> xy		3452837	0					
ANR	3453234	Identifier	matrix		3452837	0					
ANR	3453235	Identifier	xy		3452837	1					
ANR	3453236	ArrayIndexing	values [ 2 ]		3452837	1					
ANR	3453237	Identifier	values		3452837	0					
ANR	3453238	PrimaryExpression	2		3452837	1					
ANR	3453239	ExpressionStatement	matrix -> yy = values [ 3 ]	699:6:17865:17887	3452837	14	True				
ANR	3453240	AssignmentExpression	matrix -> yy = values [ 3 ]		3452837	0		=			
ANR	3453241	PtrMemberAccess	matrix -> yy		3452837	0					
ANR	3453242	Identifier	matrix		3452837	0					
ANR	3453243	Identifier	yy		3452837	1					
ANR	3453244	ArrayIndexing	values [ 3 ]		3452837	1					
ANR	3453245	Identifier	values		3452837	0					
ANR	3453246	PrimaryExpression	3		3452837	1					
ANR	3453247	ExpressionStatement	offset -> x = values [ 4 ]	700:6:17895:17917	3452837	15	True				
ANR	3453248	AssignmentExpression	offset -> x = values [ 4 ]		3452837	0		=			
ANR	3453249	PtrMemberAccess	offset -> x		3452837	0					
ANR	3453250	Identifier	offset		3452837	0					
ANR	3453251	Identifier	x		3452837	1					
ANR	3453252	ArrayIndexing	values [ 4 ]		3452837	1					
ANR	3453253	Identifier	values		3452837	0					
ANR	3453254	PrimaryExpression	4		3452837	1					
ANR	3453255	ExpressionStatement	offset -> y = values [ 5 ]	701:6:17925:17947	3452837	16	True				
ANR	3453256	AssignmentExpression	offset -> y = values [ 5 ]		3452837	0		=			
ANR	3453257	PtrMemberAccess	offset -> y		3452837	0					
ANR	3453258	Identifier	offset		3452837	0					
ANR	3453259	Identifier	y		3452837	1					
ANR	3453260	ArrayIndexing	values [ 5 ]		3452837	1					
ANR	3453261	Identifier	values		3452837	0					
ANR	3453262	PrimaryExpression	5		3452837	1					
ANR	3453263	ExpressionStatement	* upm = ( FT_ULong ) power_tens [ - max_scaling ]	703:6:17956:17997	3452837	17	True				
ANR	3453264	AssignmentExpression	* upm = ( FT_ULong ) power_tens [ - max_scaling ]		3452837	0		=			
ANR	3453265	UnaryOperationExpression	* upm		3452837	0					
ANR	3453266	UnaryOperator	*		3452837	0					
ANR	3453267	Identifier	upm		3452837	1					
ANR	3453268	CastExpression	( FT_ULong ) power_tens [ - max_scaling ]		3452837	1					
ANR	3453269	CastTarget	FT_ULong		3452837	0					
ANR	3453270	ArrayIndexing	power_tens [ - max_scaling ]		3452837	1					
ANR	3453271	Identifier	power_tens		3452837	0					
ANR	3453272	UnaryOperationExpression	- max_scaling		3452837	1					
ANR	3453273	UnaryOperator	-		3452837	0					
ANR	3453274	Identifier	max_scaling		3452837	1					
ANR	3453275	ExpressionStatement	"FT_TRACE4 ( ( "" [%f %f %f %f %f %f]\\n"" , ( double ) matrix -> xx / * upm / 65536 , ( double ) matrix -> xy / * upm / 65536 , ( double ) matrix -> yx / * upm / 65536 , ( double ) matrix -> yy / * upm / 65536 , ( double ) offset -> x / * upm / 65536 , ( double ) offset -> y / * upm / 65536 ) )"	705:6:18006:18363	3452837	18	True				
ANR	3453276	CallExpression	"FT_TRACE4 ( ( "" [%f %f %f %f %f %f]\\n"" , ( double ) matrix -> xx / * upm / 65536 , ( double ) matrix -> xy / * upm / 65536 , ( double ) matrix -> yx / * upm / 65536 , ( double ) matrix -> yy / * upm / 65536 , ( double ) offset -> x / * upm / 65536 , ( double ) offset -> y / * upm / 65536 ) )"		3452837	0					
ANR	3453277	Callee	FT_TRACE4		3452837	0					
ANR	3453278	Identifier	FT_TRACE4		3452837	0					
ANR	3453279	ArgumentList	""" [%f %f %f %f %f %f]\\n"" , ( double ) matrix -> xx / * upm / 65536 , ( double ) matrix -> xy / * upm / 65536 , ( double ) matrix -> yx / * upm / 65536 , ( double ) matrix -> yy / * upm / 65536 , ( double ) offset -> x / * upm / 65536 , ( double ) offset -> y / * upm / 65536"		3452837	1					
ANR	3453280	Argument	""" [%f %f %f %f %f %f]\\n"" , ( double ) matrix -> xx / * upm / 65536 , ( double ) matrix -> xy / * upm / 65536 , ( double ) matrix -> yx / * upm / 65536 , ( double ) matrix -> yy / * upm / 65536 , ( double ) offset -> x / * upm / 65536 , ( double ) offset -> y / * upm / 65536"		3452837	0					
ANR	3453281	Expression	""" [%f %f %f %f %f %f]\\n"" , ( double ) matrix -> xx / * upm / 65536 , ( double ) matrix -> xy / * upm / 65536 , ( double ) matrix -> yx / * upm / 65536 , ( double ) matrix -> yy / * upm / 65536 , ( double ) offset -> x / * upm / 65536 , ( double ) offset -> y / * upm / 65536"		3452837	0					
ANR	3453282	PrimaryExpression	""" [%f %f %f %f %f %f]\\n"""		3452837	0					
ANR	3453283	Expression	"( double ) matrix -> xx / * upm / 65536 , ( double ) matrix -> xy / * upm / 65536 , ( double ) matrix -> yx / * upm / 65536 , ( double ) matrix -> yy / * upm / 65536 , ( double ) offset -> x / * upm / 65536 , ( double ) offset -> y / * upm / 65536"		3452837	1					
ANR	3453284	MultiplicativeExpression	( double ) matrix -> xx / * upm / 65536		3452837	0		/			
ANR	3453285	CastExpression	( double ) matrix -> xx		3452837	0					
ANR	3453286	CastTarget	double		3452837	0					
ANR	3453287	PtrMemberAccess	matrix -> xx		3452837	1					
ANR	3453288	Identifier	matrix		3452837	0					
ANR	3453289	Identifier	xx		3452837	1					
ANR	3453290	MultiplicativeExpression	* upm / 65536		3452837	1		/			
ANR	3453291	UnaryOperationExpression	* upm		3452837	0					
ANR	3453292	UnaryOperator	*		3452837	0					
ANR	3453293	Identifier	upm		3452837	1					
ANR	3453294	PrimaryExpression	65536		3452837	1					
ANR	3453295	Expression	"( double ) matrix -> xy / * upm / 65536 , ( double ) matrix -> yx / * upm / 65536 , ( double ) matrix -> yy / * upm / 65536 , ( double ) offset -> x / * upm / 65536 , ( double ) offset -> y / * upm / 65536"		3452837	1					
ANR	3453296	MultiplicativeExpression	( double ) matrix -> xy / * upm / 65536		3452837	0		/			
ANR	3453297	CastExpression	( double ) matrix -> xy		3452837	0					
ANR	3453298	CastTarget	double		3452837	0					
ANR	3453299	PtrMemberAccess	matrix -> xy		3452837	1					
ANR	3453300	Identifier	matrix		3452837	0					
ANR	3453301	Identifier	xy		3452837	1					
ANR	3453302	MultiplicativeExpression	* upm / 65536		3452837	1		/			
ANR	3453303	UnaryOperationExpression	* upm		3452837	0					
ANR	3453304	UnaryOperator	*		3452837	0					
ANR	3453305	Identifier	upm		3452837	1					
ANR	3453306	PrimaryExpression	65536		3452837	1					
ANR	3453307	Expression	"( double ) matrix -> yx / * upm / 65536 , ( double ) matrix -> yy / * upm / 65536 , ( double ) offset -> x / * upm / 65536 , ( double ) offset -> y / * upm / 65536"		3452837	1					
ANR	3453308	MultiplicativeExpression	( double ) matrix -> yx / * upm / 65536		3452837	0		/			
ANR	3453309	CastExpression	( double ) matrix -> yx		3452837	0					
ANR	3453310	CastTarget	double		3452837	0					
ANR	3453311	PtrMemberAccess	matrix -> yx		3452837	1					
ANR	3453312	Identifier	matrix		3452837	0					
ANR	3453313	Identifier	yx		3452837	1					
ANR	3453314	MultiplicativeExpression	* upm / 65536		3452837	1		/			
ANR	3453315	UnaryOperationExpression	* upm		3452837	0					
ANR	3453316	UnaryOperator	*		3452837	0					
ANR	3453317	Identifier	upm		3452837	1					
ANR	3453318	PrimaryExpression	65536		3452837	1					
ANR	3453319	Expression	"( double ) matrix -> yy / * upm / 65536 , ( double ) offset -> x / * upm / 65536 , ( double ) offset -> y / * upm / 65536"		3452837	1					
ANR	3453320	MultiplicativeExpression	( double ) matrix -> yy / * upm / 65536		3452837	0		/			
ANR	3453321	CastExpression	( double ) matrix -> yy		3452837	0					
ANR	3453322	CastTarget	double		3452837	0					
ANR	3453323	PtrMemberAccess	matrix -> yy		3452837	1					
ANR	3453324	Identifier	matrix		3452837	0					
ANR	3453325	Identifier	yy		3452837	1					
ANR	3453326	MultiplicativeExpression	* upm / 65536		3452837	1		/			
ANR	3453327	UnaryOperationExpression	* upm		3452837	0					
ANR	3453328	UnaryOperator	*		3452837	0					
ANR	3453329	Identifier	upm		3452837	1					
ANR	3453330	PrimaryExpression	65536		3452837	1					
ANR	3453331	Expression	"( double ) offset -> x / * upm / 65536 , ( double ) offset -> y / * upm / 65536"		3452837	1					
ANR	3453332	MultiplicativeExpression	( double ) offset -> x / * upm / 65536		3452837	0		/			
ANR	3453333	CastExpression	( double ) offset -> x		3452837	0					
ANR	3453334	CastTarget	double		3452837	0					
ANR	3453335	PtrMemberAccess	offset -> x		3452837	1					
ANR	3453336	Identifier	offset		3452837	0					
ANR	3453337	Identifier	x		3452837	1					
ANR	3453338	MultiplicativeExpression	* upm / 65536		3452837	1		/			
ANR	3453339	UnaryOperationExpression	* upm		3452837	0					
ANR	3453340	UnaryOperator	*		3452837	0					
ANR	3453341	Identifier	upm		3452837	1					
ANR	3453342	PrimaryExpression	65536		3452837	1					
ANR	3453343	MultiplicativeExpression	( double ) offset -> y / * upm / 65536		3452837	1		/			
ANR	3453344	CastExpression	( double ) offset -> y		3452837	0					
ANR	3453345	CastTarget	double		3452837	0					
ANR	3453346	PtrMemberAccess	offset -> y		3452837	1					
ANR	3453347	Identifier	offset		3452837	0					
ANR	3453348	Identifier	y		3452837	1					
ANR	3453349	MultiplicativeExpression	* upm / 65536		3452837	1		/			
ANR	3453350	UnaryOperationExpression	* upm		3452837	0					
ANR	3453351	UnaryOperator	*		3452837	0					
ANR	3453352	Identifier	upm		3452837	1					
ANR	3453353	PrimaryExpression	65536		3452837	1					
ANR	3453354	Label	Exit :	714:2:18374:18378	3452837	7	True				
ANR	3453355	Identifier	Exit		3452837	0					
ANR	3453356	ReturnStatement	return error ;	715:4:18384:18396	3452837	8	True				
ANR	3453357	Identifier	error		3452837	0					
ANR	3453358	ReturnType	static FT_Error		3452837	1					
ANR	3453359	Identifier	cff_parse_font_matrix		3452837	2					
ANR	3453360	ParameterList	CFF_Parser parser		3452837	3					
ANR	3453361	Parameter	CFF_Parser parser	601:25:14988:15005	3452837	0	True				
ANR	3453362	ParameterType	CFF_Parser		3452837	0					
ANR	3453363	Identifier	parser		3452837	1					
ANR	3453364	CFGEntryNode	ENTRY		3452837		True				
ANR	3453365	CFGExitNode	EXIT		3452837		True				
ANR	3453366	Symbol	offset -> y		3452837						
ANR	3453367	Symbol	& dict -> font_offset		3452837						
ANR	3453368	Symbol	offset -> x		3452837						
ANR	3453369	Symbol	Stack_Underflow		3452837						
ANR	3453370	Symbol	data		3452837						
ANR	3453371	Symbol	FT_Err_Ok		3452837						
ANR	3453372	Symbol	parser -> object		3452837						
ANR	3453373	Symbol	min_scaling		3452837						
ANR	3453374	Symbol	* values		3452837						
ANR	3453375	Symbol	values		3452837						
ANR	3453376	Symbol	* max_scaling		3452837						
ANR	3453377	Symbol	FT_LONG_MAX		3452837						
ANR	3453378	Symbol	matrix -> yx		3452837						
ANR	3453379	Symbol	matrix		3452837						
ANR	3453380	Symbol	error		3452837						
ANR	3453381	Symbol	cff_parse_fixed_dynamic		3452837						
ANR	3453382	Symbol	parser -> top		3452837						
ANR	3453383	Symbol	max_scaling		3452837						
ANR	3453384	Symbol	& dict -> units_per_em		3452837						
ANR	3453385	Symbol	divisor		3452837						
ANR	3453386	Symbol	matrix -> yy		3452837						
ANR	3453387	Symbol	scalings		3452837						
ANR	3453388	Symbol	* * scalings		3452837						
ANR	3453389	Symbol	dict -> has_font_matrix		3452837						
ANR	3453390	Symbol	dict		3452837						
ANR	3453391	Symbol	FT_LONG_MIN		3452837						
ANR	3453392	Symbol	* upm		3452837						
ANR	3453393	Symbol	parser -> stack		3452837						
ANR	3453394	Symbol	value		3452837						
ANR	3453395	Symbol	* * i		3452837						
ANR	3453396	Symbol	offset		3452837						
ANR	3453397	Symbol	* power_tens		3452837						
ANR	3453398	Symbol	& dict -> font_matrix		3452837						
ANR	3453399	Symbol	i		3452837						
ANR	3453400	Symbol	TRUE		3452837						
ANR	3453401	Symbol	FT_ERR		3452837						
ANR	3453402	Symbol	* parser		3452837						
ANR	3453403	Symbol	* dict		3452837						
ANR	3453404	Symbol	* scalings		3452837						
ANR	3453405	Symbol	* matrix		3452837						
ANR	3453406	Symbol	upm		3452837						
ANR	3453407	Symbol	* i		3452837						
ANR	3453408	Symbol	parser		3452837						
ANR	3453409	Symbol	matrix -> xx		3452837						
ANR	3453410	Symbol	matrix -> xy		3452837						
ANR	3453411	Symbol	power_tens		3452837						
ANR	3453412	Symbol	* offset		3452837						
ANR	3453413	Symbol	half_divisor		3452837						
ANR	3453414	Function	cff_parse_font_bbox	719:2:18406:19262							
ANR	3453415	FunctionDef	cff_parse_font_bbox (CFF_Parser parser)		3453414	0					
ANR	3453416	CompoundStatement		721:2:18468:19262	3453414	0					
ANR	3453417	IdentifierDeclStatement	CFF_FontRecDict dict = ( CFF_FontRecDict ) parser -> object ;	722:4:18474:18529	3453414	0	True				
ANR	3453418	IdentifierDecl	dict = ( CFF_FontRecDict ) parser -> object		3453414	0					
ANR	3453419	IdentifierDeclType	CFF_FontRecDict		3453414	0					
ANR	3453420	Identifier	dict		3453414	1					
ANR	3453421	AssignmentExpression	dict = ( CFF_FontRecDict ) parser -> object		3453414	2		=			
ANR	3453422	Identifier	dict		3453414	0					
ANR	3453423	CastExpression	( CFF_FontRecDict ) parser -> object		3453414	1					
ANR	3453424	CastTarget	CFF_FontRecDict		3453414	0					
ANR	3453425	PtrMemberAccess	parser -> object		3453414	1					
ANR	3453426	Identifier	parser		3453414	0					
ANR	3453427	Identifier	object		3453414	1					
ANR	3453428	IdentifierDeclStatement	FT_BBox * bbox = & dict -> font_bbox ;	723:4:18535:18575	3453414	1	True				
ANR	3453429	IdentifierDecl	* bbox = & dict -> font_bbox		3453414	0					
ANR	3453430	IdentifierDeclType	FT_BBox *		3453414	0					
ANR	3453431	Identifier	bbox		3453414	1					
ANR	3453432	AssignmentExpression	* bbox = & dict -> font_bbox		3453414	2		=			
ANR	3453433	Identifier	bbox		3453414	0					
ANR	3453434	UnaryOperationExpression	& dict -> font_bbox		3453414	1					
ANR	3453435	UnaryOperator	&		3453414	0					
ANR	3453436	PtrMemberAccess	dict -> font_bbox		3453414	1					
ANR	3453437	Identifier	dict		3453414	0					
ANR	3453438	Identifier	font_bbox		3453414	1					
ANR	3453439	IdentifierDeclStatement	FT_Byte * * data = parser -> stack ;	724:4:18581:18618	3453414	2	True				
ANR	3453440	IdentifierDecl	* * data = parser -> stack		3453414	0					
ANR	3453441	IdentifierDeclType	FT_Byte * *		3453414	0					
ANR	3453442	Identifier	data		3453414	1					
ANR	3453443	AssignmentExpression	* * data = parser -> stack		3453414	2		=			
ANR	3453444	Identifier	data		3453414	0					
ANR	3453445	PtrMemberAccess	parser -> stack		3453414	1					
ANR	3453446	Identifier	parser		3453414	0					
ANR	3453447	Identifier	stack		3453414	1					
ANR	3453448	IdentifierDeclStatement	FT_Error error ;	725:4:18624:18646	3453414	3	True				
ANR	3453449	IdentifierDecl	error		3453414	0					
ANR	3453450	IdentifierDeclType	FT_Error		3453414	0					
ANR	3453451	Identifier	error		3453414	1					
ANR	3453452	ExpressionStatement	error = FT_ERR ( Stack_Underflow )	728:4:18654:18687	3453414	4	True				
ANR	3453453	AssignmentExpression	error = FT_ERR ( Stack_Underflow )		3453414	0		=			
ANR	3453454	Identifier	error		3453414	0					
ANR	3453455	CallExpression	FT_ERR ( Stack_Underflow )		3453414	1					
ANR	3453456	Callee	FT_ERR		3453414	0					
ANR	3453457	Identifier	FT_ERR		3453414	0					
ANR	3453458	ArgumentList	Stack_Underflow		3453414	1					
ANR	3453459	Argument	Stack_Underflow		3453414	0					
ANR	3453460	Identifier	Stack_Underflow		3453414	0					
ANR	3453461	IfStatement	if ( parser -> top >= parser -> stack + 4 )		3453414	5					
ANR	3453462	Condition	parser -> top >= parser -> stack + 4	730:9:18699:18730	3453414	0	True				
ANR	3453463	RelationalExpression	parser -> top >= parser -> stack + 4		3453414	0		>=			
ANR	3453464	PtrMemberAccess	parser -> top		3453414	0					
ANR	3453465	Identifier	parser		3453414	0					
ANR	3453466	Identifier	top		3453414	1					
ANR	3453467	AdditiveExpression	parser -> stack + 4		3453414	1		+			
ANR	3453468	PtrMemberAccess	parser -> stack		3453414	0					
ANR	3453469	Identifier	parser		3453414	0					
ANR	3453470	Identifier	stack		3453414	1					
ANR	3453471	PrimaryExpression	4		3453414	1					
ANR	3453472	CompoundStatement		11:4:269:269	3453414	1					
ANR	3453473	ExpressionStatement	"bbox -> xMin = FT_RoundFix ( cff_parse_fixed ( parser , data ++ ) )"	732:6:18746:18807	3453414	0	True				
ANR	3453474	AssignmentExpression	"bbox -> xMin = FT_RoundFix ( cff_parse_fixed ( parser , data ++ ) )"		3453414	0		=			
ANR	3453475	PtrMemberAccess	bbox -> xMin		3453414	0					
ANR	3453476	Identifier	bbox		3453414	0					
ANR	3453477	Identifier	xMin		3453414	1					
ANR	3453478	CallExpression	"FT_RoundFix ( cff_parse_fixed ( parser , data ++ ) )"		3453414	1					
ANR	3453479	Callee	FT_RoundFix		3453414	0					
ANR	3453480	Identifier	FT_RoundFix		3453414	0					
ANR	3453481	ArgumentList	"cff_parse_fixed ( parser , data ++ )"		3453414	1					
ANR	3453482	Argument	"cff_parse_fixed ( parser , data ++ )"		3453414	0					
ANR	3453483	CallExpression	"cff_parse_fixed ( parser , data ++ )"		3453414	0					
ANR	3453484	Callee	cff_parse_fixed		3453414	0					
ANR	3453485	Identifier	cff_parse_fixed		3453414	0					
ANR	3453486	ArgumentList	parser		3453414	1					
ANR	3453487	Argument	parser		3453414	0					
ANR	3453488	Identifier	parser		3453414	0					
ANR	3453489	Argument	data ++		3453414	1					
ANR	3453490	PostIncDecOperationExpression	data ++		3453414	0					
ANR	3453491	Identifier	data		3453414	0					
ANR	3453492	IncDec	++		3453414	1					
ANR	3453493	ExpressionStatement	"bbox -> yMin = FT_RoundFix ( cff_parse_fixed ( parser , data ++ ) )"	733:6:18815:18876	3453414	1	True				
ANR	3453494	AssignmentExpression	"bbox -> yMin = FT_RoundFix ( cff_parse_fixed ( parser , data ++ ) )"		3453414	0		=			
ANR	3453495	PtrMemberAccess	bbox -> yMin		3453414	0					
ANR	3453496	Identifier	bbox		3453414	0					
ANR	3453497	Identifier	yMin		3453414	1					
ANR	3453498	CallExpression	"FT_RoundFix ( cff_parse_fixed ( parser , data ++ ) )"		3453414	1					
ANR	3453499	Callee	FT_RoundFix		3453414	0					
ANR	3453500	Identifier	FT_RoundFix		3453414	0					
ANR	3453501	ArgumentList	"cff_parse_fixed ( parser , data ++ )"		3453414	1					
ANR	3453502	Argument	"cff_parse_fixed ( parser , data ++ )"		3453414	0					
ANR	3453503	CallExpression	"cff_parse_fixed ( parser , data ++ )"		3453414	0					
ANR	3453504	Callee	cff_parse_fixed		3453414	0					
ANR	3453505	Identifier	cff_parse_fixed		3453414	0					
ANR	3453506	ArgumentList	parser		3453414	1					
ANR	3453507	Argument	parser		3453414	0					
ANR	3453508	Identifier	parser		3453414	0					
ANR	3453509	Argument	data ++		3453414	1					
ANR	3453510	PostIncDecOperationExpression	data ++		3453414	0					
ANR	3453511	Identifier	data		3453414	0					
ANR	3453512	IncDec	++		3453414	1					
ANR	3453513	ExpressionStatement	"bbox -> xMax = FT_RoundFix ( cff_parse_fixed ( parser , data ++ ) )"	734:6:18884:18945	3453414	2	True				
ANR	3453514	AssignmentExpression	"bbox -> xMax = FT_RoundFix ( cff_parse_fixed ( parser , data ++ ) )"		3453414	0		=			
ANR	3453515	PtrMemberAccess	bbox -> xMax		3453414	0					
ANR	3453516	Identifier	bbox		3453414	0					
ANR	3453517	Identifier	xMax		3453414	1					
ANR	3453518	CallExpression	"FT_RoundFix ( cff_parse_fixed ( parser , data ++ ) )"		3453414	1					
ANR	3453519	Callee	FT_RoundFix		3453414	0					
ANR	3453520	Identifier	FT_RoundFix		3453414	0					
ANR	3453521	ArgumentList	"cff_parse_fixed ( parser , data ++ )"		3453414	1					
ANR	3453522	Argument	"cff_parse_fixed ( parser , data ++ )"		3453414	0					
ANR	3453523	CallExpression	"cff_parse_fixed ( parser , data ++ )"		3453414	0					
ANR	3453524	Callee	cff_parse_fixed		3453414	0					
ANR	3453525	Identifier	cff_parse_fixed		3453414	0					
ANR	3453526	ArgumentList	parser		3453414	1					
ANR	3453527	Argument	parser		3453414	0					
ANR	3453528	Identifier	parser		3453414	0					
ANR	3453529	Argument	data ++		3453414	1					
ANR	3453530	PostIncDecOperationExpression	data ++		3453414	0					
ANR	3453531	Identifier	data		3453414	0					
ANR	3453532	IncDec	++		3453414	1					
ANR	3453533	ExpressionStatement	"bbox -> yMax = FT_RoundFix ( cff_parse_fixed ( parser , data ) )"	735:6:18953:19014	3453414	3	True				
ANR	3453534	AssignmentExpression	"bbox -> yMax = FT_RoundFix ( cff_parse_fixed ( parser , data ) )"		3453414	0		=			
ANR	3453535	PtrMemberAccess	bbox -> yMax		3453414	0					
ANR	3453536	Identifier	bbox		3453414	0					
ANR	3453537	Identifier	yMax		3453414	1					
ANR	3453538	CallExpression	"FT_RoundFix ( cff_parse_fixed ( parser , data ) )"		3453414	1					
ANR	3453539	Callee	FT_RoundFix		3453414	0					
ANR	3453540	Identifier	FT_RoundFix		3453414	0					
ANR	3453541	ArgumentList	"cff_parse_fixed ( parser , data )"		3453414	1					
ANR	3453542	Argument	"cff_parse_fixed ( parser , data )"		3453414	0					
ANR	3453543	CallExpression	"cff_parse_fixed ( parser , data )"		3453414	0					
ANR	3453544	Callee	cff_parse_fixed		3453414	0					
ANR	3453545	Identifier	cff_parse_fixed		3453414	0					
ANR	3453546	ArgumentList	parser		3453414	1					
ANR	3453547	Argument	parser		3453414	0					
ANR	3453548	Identifier	parser		3453414	0					
ANR	3453549	Argument	data		3453414	1					
ANR	3453550	Identifier	data		3453414	0					
ANR	3453551	ExpressionStatement	error = FT_Err_Ok	736:6:19022:19039	3453414	4	True				
ANR	3453552	AssignmentExpression	error = FT_Err_Ok		3453414	0		=			
ANR	3453553	Identifier	error		3453414	0					
ANR	3453554	Identifier	FT_Err_Ok		3453414	1					
ANR	3453555	ExpressionStatement	"FT_TRACE4 ( ( "" [%d %d %d %d]\\n"" , bbox -> xMin / 65536 , bbox -> yMin / 65536 , bbox -> xMax / 65536 , bbox -> yMax / 65536 ) )"	738:6:19048:19233	3453414	5	True				
ANR	3453556	CallExpression	"FT_TRACE4 ( ( "" [%d %d %d %d]\\n"" , bbox -> xMin / 65536 , bbox -> yMin / 65536 , bbox -> xMax / 65536 , bbox -> yMax / 65536 ) )"		3453414	0					
ANR	3453557	Callee	FT_TRACE4		3453414	0					
ANR	3453558	Identifier	FT_TRACE4		3453414	0					
ANR	3453559	ArgumentList	""" [%d %d %d %d]\\n"" , bbox -> xMin / 65536 , bbox -> yMin / 65536 , bbox -> xMax / 65536 , bbox -> yMax / 65536"		3453414	1					
ANR	3453560	Argument	""" [%d %d %d %d]\\n"" , bbox -> xMin / 65536 , bbox -> yMin / 65536 , bbox -> xMax / 65536 , bbox -> yMax / 65536"		3453414	0					
ANR	3453561	Expression	""" [%d %d %d %d]\\n"" , bbox -> xMin / 65536 , bbox -> yMin / 65536 , bbox -> xMax / 65536 , bbox -> yMax / 65536"		3453414	0					
ANR	3453562	PrimaryExpression	""" [%d %d %d %d]\\n"""		3453414	0					
ANR	3453563	Expression	"bbox -> xMin / 65536 , bbox -> yMin / 65536 , bbox -> xMax / 65536 , bbox -> yMax / 65536"		3453414	1					
ANR	3453564	MultiplicativeExpression	bbox -> xMin / 65536		3453414	0		/			
ANR	3453565	PtrMemberAccess	bbox -> xMin		3453414	0					
ANR	3453566	Identifier	bbox		3453414	0					
ANR	3453567	Identifier	xMin		3453414	1					
ANR	3453568	PrimaryExpression	65536		3453414	1					
ANR	3453569	Expression	"bbox -> yMin / 65536 , bbox -> xMax / 65536 , bbox -> yMax / 65536"		3453414	1					
ANR	3453570	MultiplicativeExpression	bbox -> yMin / 65536		3453414	0		/			
ANR	3453571	PtrMemberAccess	bbox -> yMin		3453414	0					
ANR	3453572	Identifier	bbox		3453414	0					
ANR	3453573	Identifier	yMin		3453414	1					
ANR	3453574	PrimaryExpression	65536		3453414	1					
ANR	3453575	Expression	"bbox -> xMax / 65536 , bbox -> yMax / 65536"		3453414	1					
ANR	3453576	MultiplicativeExpression	bbox -> xMax / 65536		3453414	0		/			
ANR	3453577	PtrMemberAccess	bbox -> xMax		3453414	0					
ANR	3453578	Identifier	bbox		3453414	0					
ANR	3453579	Identifier	xMax		3453414	1					
ANR	3453580	PrimaryExpression	65536		3453414	1					
ANR	3453581	MultiplicativeExpression	bbox -> yMax / 65536		3453414	1		/			
ANR	3453582	PtrMemberAccess	bbox -> yMax		3453414	0					
ANR	3453583	Identifier	bbox		3453414	0					
ANR	3453584	Identifier	yMax		3453414	1					
ANR	3453585	PrimaryExpression	65536		3453414	1					
ANR	3453586	ReturnStatement	return error ;	745:4:19246:19258	3453414	6	True				
ANR	3453587	Identifier	error		3453414	0					
ANR	3453588	ReturnType	static FT_Error		3453414	1					
ANR	3453589	Identifier	cff_parse_font_bbox		3453414	2					
ANR	3453590	ParameterList	CFF_Parser parser		3453414	3					
ANR	3453591	Parameter	CFF_Parser parser	720:23:18445:18462	3453414	0	True				
ANR	3453592	ParameterType	CFF_Parser		3453414	0					
ANR	3453593	Identifier	parser		3453414	1					
ANR	3453594	CFGEntryNode	ENTRY		3453414		True				
ANR	3453595	CFGExitNode	EXIT		3453414		True				
ANR	3453596	Symbol	Stack_Underflow		3453414						
ANR	3453597	Symbol	* bbox		3453414						
ANR	3453598	Symbol	data		3453414						
ANR	3453599	Symbol	FT_Err_Ok		3453414						
ANR	3453600	Symbol	parser -> object		3453414						
ANR	3453601	Symbol	FT_RoundFix		3453414						
ANR	3453602	Symbol	bbox		3453414						
ANR	3453603	Symbol	FT_ERR		3453414						
ANR	3453604	Symbol	error		3453414						
ANR	3453605	Symbol	bbox -> xMin		3453414						
ANR	3453606	Symbol	parser -> top		3453414						
ANR	3453607	Symbol	bbox -> yMin		3453414						
ANR	3453608	Symbol	& dict -> font_bbox		3453414						
ANR	3453609	Symbol	cff_parse_fixed		3453414						
ANR	3453610	Symbol	* parser		3453414						
ANR	3453611	Symbol	parser		3453414						
ANR	3453612	Symbol	dict		3453414						
ANR	3453613	Symbol	bbox -> xMax		3453414						
ANR	3453614	Symbol	bbox -> yMax		3453414						
ANR	3453615	Symbol	parser -> stack		3453414						
ANR	3453616	Function	cff_parse_private_dict	749:2:19268:20275							
ANR	3453617	FunctionDef	cff_parse_private_dict (CFF_Parser parser)		3453616	0					
ANR	3453618	CompoundStatement		751:2:19333:20275	3453616	0					
ANR	3453619	IdentifierDeclStatement	CFF_FontRecDict dict = ( CFF_FontRecDict ) parser -> object ;	752:4:19339:19394	3453616	0	True				
ANR	3453620	IdentifierDecl	dict = ( CFF_FontRecDict ) parser -> object		3453616	0					
ANR	3453621	IdentifierDeclType	CFF_FontRecDict		3453616	0					
ANR	3453622	Identifier	dict		3453616	1					
ANR	3453623	AssignmentExpression	dict = ( CFF_FontRecDict ) parser -> object		3453616	2		=			
ANR	3453624	Identifier	dict		3453616	0					
ANR	3453625	CastExpression	( CFF_FontRecDict ) parser -> object		3453616	1					
ANR	3453626	CastTarget	CFF_FontRecDict		3453616	0					
ANR	3453627	PtrMemberAccess	parser -> object		3453616	1					
ANR	3453628	Identifier	parser		3453616	0					
ANR	3453629	Identifier	object		3453616	1					
ANR	3453630	IdentifierDeclStatement	FT_Byte * * data = parser -> stack ;	753:4:19400:19437	3453616	1	True				
ANR	3453631	IdentifierDecl	* * data = parser -> stack		3453616	0					
ANR	3453632	IdentifierDeclType	FT_Byte * *		3453616	0					
ANR	3453633	Identifier	data		3453616	1					
ANR	3453634	AssignmentExpression	* * data = parser -> stack		3453616	2		=			
ANR	3453635	Identifier	data		3453616	0					
ANR	3453636	PtrMemberAccess	parser -> stack		3453616	1					
ANR	3453637	Identifier	parser		3453616	0					
ANR	3453638	Identifier	stack		3453616	1					
ANR	3453639	IdentifierDeclStatement	FT_Error error ;	754:4:19443:19465	3453616	2	True				
ANR	3453640	IdentifierDecl	error		3453616	0					
ANR	3453641	IdentifierDeclType	FT_Error		3453616	0					
ANR	3453642	Identifier	error		3453616	1					
ANR	3453643	ExpressionStatement	error = FT_ERR ( Stack_Underflow )	757:4:19473:19506	3453616	3	True				
ANR	3453644	AssignmentExpression	error = FT_ERR ( Stack_Underflow )		3453616	0		=			
ANR	3453645	Identifier	error		3453616	0					
ANR	3453646	CallExpression	FT_ERR ( Stack_Underflow )		3453616	1					
ANR	3453647	Callee	FT_ERR		3453616	0					
ANR	3453648	Identifier	FT_ERR		3453616	0					
ANR	3453649	ArgumentList	Stack_Underflow		3453616	1					
ANR	3453650	Argument	Stack_Underflow		3453616	0					
ANR	3453651	Identifier	Stack_Underflow		3453616	0					
ANR	3453652	IfStatement	if ( parser -> top >= parser -> stack + 2 )		3453616	4					
ANR	3453653	Condition	parser -> top >= parser -> stack + 2	759:9:19518:19549	3453616	0	True				
ANR	3453654	RelationalExpression	parser -> top >= parser -> stack + 2		3453616	0		>=			
ANR	3453655	PtrMemberAccess	parser -> top		3453616	0					
ANR	3453656	Identifier	parser		3453616	0					
ANR	3453657	Identifier	top		3453616	1					
ANR	3453658	AdditiveExpression	parser -> stack + 2		3453616	1		+			
ANR	3453659	PtrMemberAccess	parser -> stack		3453616	0					
ANR	3453660	Identifier	parser		3453616	0					
ANR	3453661	Identifier	stack		3453616	1					
ANR	3453662	PrimaryExpression	2		3453616	1					
ANR	3453663	CompoundStatement		11:6:231:243	3453616	1					
ANR	3453664	IdentifierDeclStatement	FT_Long tmp ;	761:6:19565:19577	3453616	0	True				
ANR	3453665	IdentifierDecl	tmp		3453616	0					
ANR	3453666	IdentifierDeclType	FT_Long		3453616	0					
ANR	3453667	Identifier	tmp		3453616	1					
ANR	3453668	ExpressionStatement	"tmp = cff_parse_num ( parser , data ++ )"	764:6:19587:19624	3453616	1	True				
ANR	3453669	AssignmentExpression	"tmp = cff_parse_num ( parser , data ++ )"		3453616	0		=			
ANR	3453670	Identifier	tmp		3453616	0					
ANR	3453671	CallExpression	"cff_parse_num ( parser , data ++ )"		3453616	1					
ANR	3453672	Callee	cff_parse_num		3453616	0					
ANR	3453673	Identifier	cff_parse_num		3453616	0					
ANR	3453674	ArgumentList	parser		3453616	1					
ANR	3453675	Argument	parser		3453616	0					
ANR	3453676	Identifier	parser		3453616	0					
ANR	3453677	Argument	data ++		3453616	1					
ANR	3453678	PostIncDecOperationExpression	data ++		3453616	0					
ANR	3453679	Identifier	data		3453616	0					
ANR	3453680	IncDec	++		3453616	1					
ANR	3453681	IfStatement	if ( tmp < 0 )		3453616	2					
ANR	3453682	Condition	tmp < 0	765:11:19637:19643	3453616	0	True				
ANR	3453683	RelationalExpression	tmp < 0		3453616	0		<			
ANR	3453684	Identifier	tmp		3453616	0					
ANR	3453685	PrimaryExpression	0		3453616	1					
ANR	3453686	CompoundStatement		16:6:319:319	3453616	1					
ANR	3453687	ExpressionStatement	"FT_ERROR ( ( ""cff_parse_private_dict: Invalid dictionary size\\n"" ) )"	767:8:19663:19728	3453616	0	True				
ANR	3453688	CallExpression	"FT_ERROR ( ( ""cff_parse_private_dict: Invalid dictionary size\\n"" ) )"		3453616	0					
ANR	3453689	Callee	FT_ERROR		3453616	0					
ANR	3453690	Identifier	FT_ERROR		3453616	0					
ANR	3453691	ArgumentList	"""cff_parse_private_dict: Invalid dictionary size\\n"""		3453616	1					
ANR	3453692	Argument	"""cff_parse_private_dict: Invalid dictionary size\\n"""		3453616	0					
ANR	3453693	PrimaryExpression	"""cff_parse_private_dict: Invalid dictionary size\\n"""		3453616	0					
ANR	3453694	ExpressionStatement	error = FT_THROW ( Invalid_File_Format )	768:8:19738:19777	3453616	1	True				
ANR	3453695	AssignmentExpression	error = FT_THROW ( Invalid_File_Format )		3453616	0		=			
ANR	3453696	Identifier	error		3453616	0					
ANR	3453697	CallExpression	FT_THROW ( Invalid_File_Format )		3453616	1					
ANR	3453698	Callee	FT_THROW		3453616	0					
ANR	3453699	Identifier	FT_THROW		3453616	0					
ANR	3453700	ArgumentList	Invalid_File_Format		3453616	1					
ANR	3453701	Argument	Invalid_File_Format		3453616	0					
ANR	3453702	Identifier	Invalid_File_Format		3453616	0					
ANR	3453703	GotoStatement	goto Fail ;	769:8:19787:19796	3453616	2	True				
ANR	3453704	Identifier	Fail		3453616	0					
ANR	3453705	ExpressionStatement	dict -> private_size = ( FT_ULong ) tmp	771:6:19812:19846	3453616	3	True				
ANR	3453706	AssignmentExpression	dict -> private_size = ( FT_ULong ) tmp		3453616	0		=			
ANR	3453707	PtrMemberAccess	dict -> private_size		3453616	0					
ANR	3453708	Identifier	dict		3453616	0					
ANR	3453709	Identifier	private_size		3453616	1					
ANR	3453710	CastExpression	( FT_ULong ) tmp		3453616	1					
ANR	3453711	CastTarget	FT_ULong		3453616	0					
ANR	3453712	Identifier	tmp		3453616	1					
ANR	3453713	ExpressionStatement	"tmp = cff_parse_num ( parser , data )"	773:6:19855:19890	3453616	4	True				
ANR	3453714	AssignmentExpression	"tmp = cff_parse_num ( parser , data )"		3453616	0		=			
ANR	3453715	Identifier	tmp		3453616	0					
ANR	3453716	CallExpression	"cff_parse_num ( parser , data )"		3453616	1					
ANR	3453717	Callee	cff_parse_num		3453616	0					
ANR	3453718	Identifier	cff_parse_num		3453616	0					
ANR	3453719	ArgumentList	parser		3453616	1					
ANR	3453720	Argument	parser		3453616	0					
ANR	3453721	Identifier	parser		3453616	0					
ANR	3453722	Argument	data		3453616	1					
ANR	3453723	Identifier	data		3453616	0					
ANR	3453724	IfStatement	if ( tmp < 0 )		3453616	5					
ANR	3453725	Condition	tmp < 0	774:11:19903:19909	3453616	0	True				
ANR	3453726	RelationalExpression	tmp < 0		3453616	0		<			
ANR	3453727	Identifier	tmp		3453616	0					
ANR	3453728	PrimaryExpression	0		3453616	1					
ANR	3453729	CompoundStatement		25:6:585:585	3453616	1					
ANR	3453730	ExpressionStatement	"FT_ERROR ( ( ""cff_parse_private_dict: Invalid dictionary offset\\n"" ) )"	776:8:19929:19996	3453616	0	True				
ANR	3453731	CallExpression	"FT_ERROR ( ( ""cff_parse_private_dict: Invalid dictionary offset\\n"" ) )"		3453616	0					
ANR	3453732	Callee	FT_ERROR		3453616	0					
ANR	3453733	Identifier	FT_ERROR		3453616	0					
ANR	3453734	ArgumentList	"""cff_parse_private_dict: Invalid dictionary offset\\n"""		3453616	1					
ANR	3453735	Argument	"""cff_parse_private_dict: Invalid dictionary offset\\n"""		3453616	0					
ANR	3453736	PrimaryExpression	"""cff_parse_private_dict: Invalid dictionary offset\\n"""		3453616	0					
ANR	3453737	ExpressionStatement	error = FT_THROW ( Invalid_File_Format )	777:8:20006:20045	3453616	1	True				
ANR	3453738	AssignmentExpression	error = FT_THROW ( Invalid_File_Format )		3453616	0		=			
ANR	3453739	Identifier	error		3453616	0					
ANR	3453740	CallExpression	FT_THROW ( Invalid_File_Format )		3453616	1					
ANR	3453741	Callee	FT_THROW		3453616	0					
ANR	3453742	Identifier	FT_THROW		3453616	0					
ANR	3453743	ArgumentList	Invalid_File_Format		3453616	1					
ANR	3453744	Argument	Invalid_File_Format		3453616	0					
ANR	3453745	Identifier	Invalid_File_Format		3453616	0					
ANR	3453746	GotoStatement	goto Fail ;	778:8:20055:20064	3453616	2	True				
ANR	3453747	Identifier	Fail		3453616	0					
ANR	3453748	ExpressionStatement	dict -> private_offset = ( FT_ULong ) tmp	780:6:20080:20116	3453616	6	True				
ANR	3453749	AssignmentExpression	dict -> private_offset = ( FT_ULong ) tmp		3453616	0		=			
ANR	3453750	PtrMemberAccess	dict -> private_offset		3453616	0					
ANR	3453751	Identifier	dict		3453616	0					
ANR	3453752	Identifier	private_offset		3453616	1					
ANR	3453753	CastExpression	( FT_ULong ) tmp		3453616	1					
ANR	3453754	CastTarget	FT_ULong		3453616	0					
ANR	3453755	Identifier	tmp		3453616	1					
ANR	3453756	ExpressionStatement	"FT_TRACE4 ( ( "" %lu %lu\\n"" , dict -> private_size , dict -> private_offset ) )"	782:6:20125:20212	3453616	7	True				
ANR	3453757	CallExpression	"FT_TRACE4 ( ( "" %lu %lu\\n"" , dict -> private_size , dict -> private_offset ) )"		3453616	0					
ANR	3453758	Callee	FT_TRACE4		3453616	0					
ANR	3453759	Identifier	FT_TRACE4		3453616	0					
ANR	3453760	ArgumentList	""" %lu %lu\\n"" , dict -> private_size , dict -> private_offset"		3453616	1					
ANR	3453761	Argument	""" %lu %lu\\n"" , dict -> private_size , dict -> private_offset"		3453616	0					
ANR	3453762	Expression	""" %lu %lu\\n"" , dict -> private_size , dict -> private_offset"		3453616	0					
ANR	3453763	PrimaryExpression	""" %lu %lu\\n"""		3453616	0					
ANR	3453764	Expression	"dict -> private_size , dict -> private_offset"		3453616	1					
ANR	3453765	PtrMemberAccess	dict -> private_size		3453616	0					
ANR	3453766	Identifier	dict		3453616	0					
ANR	3453767	Identifier	private_size		3453616	1					
ANR	3453768	PtrMemberAccess	dict -> private_offset		3453616	1					
ANR	3453769	Identifier	dict		3453616	0					
ANR	3453770	Identifier	private_offset		3453616	1					
ANR	3453771	ExpressionStatement	error = FT_Err_Ok	785:6:20221:20238	3453616	8	True				
ANR	3453772	AssignmentExpression	error = FT_Err_Ok		3453616	0		=			
ANR	3453773	Identifier	error		3453616	0					
ANR	3453774	Identifier	FT_Err_Ok		3453616	1					
ANR	3453775	Label	Fail :	788:2:20249:20253	3453616	5	True				
ANR	3453776	Identifier	Fail		3453616	0					
ANR	3453777	ReturnStatement	return error ;	789:4:20259:20271	3453616	6	True				
ANR	3453778	Identifier	error		3453616	0					
ANR	3453779	ReturnType	static FT_Error		3453616	1					
ANR	3453780	Identifier	cff_parse_private_dict		3453616	2					
ANR	3453781	ParameterList	CFF_Parser parser		3453616	3					
ANR	3453782	Parameter	CFF_Parser parser	750:26:19310:19327	3453616	0	True				
ANR	3453783	ParameterType	CFF_Parser		3453616	0					
ANR	3453784	Identifier	parser		3453616	1					
ANR	3453785	CFGEntryNode	ENTRY		3453616		True				
ANR	3453786	CFGExitNode	EXIT		3453616		True				
ANR	3453787	Symbol	Stack_Underflow		3453616						
ANR	3453788	Symbol	data		3453616						
ANR	3453789	Symbol	FT_Err_Ok		3453616						
ANR	3453790	Symbol	parser -> object		3453616						
ANR	3453791	Symbol	dict -> private_size		3453616						
ANR	3453792	Symbol	FT_ERR		3453616						
ANR	3453793	Symbol	cff_parse_num		3453616						
ANR	3453794	Symbol	error		3453616						
ANR	3453795	Symbol	dict -> private_offset		3453616						
ANR	3453796	Symbol	parser -> top		3453616						
ANR	3453797	Symbol	FT_THROW		3453616						
ANR	3453798	Symbol	* parser		3453616						
ANR	3453799	Symbol	* dict		3453616						
ANR	3453800	Symbol	parser		3453616						
ANR	3453801	Symbol	tmp		3453616						
ANR	3453802	Symbol	dict		3453616						
ANR	3453803	Symbol	parser -> stack		3453616						
ANR	3453804	Symbol	Invalid_File_Format		3453616						
ANR	3453805	Function	cff_parse_multiple_master	796:2:20394:21646							
ANR	3453806	FunctionDef	cff_parse_multiple_master (CFF_Parser parser)		3453805	0					
ANR	3453807	CompoundStatement		798:2:20462:21646	3453805	0					
ANR	3453808	IdentifierDeclStatement	CFF_FontRecDict dict = ( CFF_FontRecDict ) parser -> object ;	799:4:20468:20523	3453805	0	True				
ANR	3453809	IdentifierDecl	dict = ( CFF_FontRecDict ) parser -> object		3453805	0					
ANR	3453810	IdentifierDeclType	CFF_FontRecDict		3453805	0					
ANR	3453811	Identifier	dict		3453805	1					
ANR	3453812	AssignmentExpression	dict = ( CFF_FontRecDict ) parser -> object		3453805	2		=			
ANR	3453813	Identifier	dict		3453805	0					
ANR	3453814	CastExpression	( CFF_FontRecDict ) parser -> object		3453805	1					
ANR	3453815	CastTarget	CFF_FontRecDict		3453805	0					
ANR	3453816	PtrMemberAccess	parser -> object		3453805	1					
ANR	3453817	Identifier	parser		3453805	0					
ANR	3453818	Identifier	object		3453805	1					
ANR	3453819	IdentifierDeclStatement	FT_Error error ;	800:4:20529:20551	3453805	1	True				
ANR	3453820	IdentifierDecl	error		3453805	0					
ANR	3453821	IdentifierDeclType	FT_Error		3453805	0					
ANR	3453822	Identifier	error		3453805	1					
ANR	3453823	IfStatement	if ( ft_trace_levels [ FT_COMPONENT ] < 4 )		3453805	2					
ANR	3453824	Condition	ft_trace_levels [ FT_COMPONENT ] < 4	805:9:20627:20659	3453805	0	True				
ANR	3453825	RelationalExpression	ft_trace_levels [ FT_COMPONENT ] < 4		3453805	0		<			
ANR	3453826	ArrayIndexing	ft_trace_levels [ FT_COMPONENT ]		3453805	0					
ANR	3453827	Identifier	ft_trace_levels		3453805	0					
ANR	3453828	Identifier	FT_COMPONENT		3453805	1					
ANR	3453829	PrimaryExpression	4		3453805	1					
ANR	3453830	Statement	FT_TRACE1	806:6:20669:20677	3453805	1	True				
ANR	3453831	ElseStatement	else		3453805	0					
ANR	3453832	Statement	FT_TRACE1	809:6:20799:20807	3453805	0	True				
ANR	3453833	Statement	(	806:15:20678:20678	3453805	3	True				
ANR	3453834	Statement	(	806:16:20679:20679	3453805	4	True				
ANR	3453835	Statement	"""Multiple Master CFFs not supported yet,"""	806:18:20681:20721	3453805	5	True				
ANR	3453836	Statement	""" handling first master design only\\n"""	807:18:20741:20778	3453805	6	True				
ANR	3453837	Statement	)	807:57:20780:20780	3453805	7	True				
ANR	3453838	Statement	)	807:58:20781:20781	3453805	8	True				
ANR	3453839	ExpressionStatement		807:59:20782:20782	3453805	9	True				
ANR	3453840	Statement	(	809:15:20808:20808	3453805	10	True				
ANR	3453841	Statement	(	809:16:20809:20809	3453805	11	True				
ANR	3453842	Statement	""" (not supported yet,"""	809:18:20811:20832	3453805	12	True				
ANR	3453843	Statement	""" handling first master design only)\\n"""	810:18:20852:20890	3453805	13	True				
ANR	3453844	Statement	)	810:58:20892:20892	3453805	14	True				
ANR	3453845	Statement	)	810:59:20893:20893	3453805	15	True				
ANR	3453846	ExpressionStatement		810:60:20894:20894	3453805	16	True				
ANR	3453847	ExpressionStatement	error = FT_ERR ( Stack_Underflow )	813:4:20908:20941	3453805	17	True				
ANR	3453848	AssignmentExpression	error = FT_ERR ( Stack_Underflow )		3453805	0		=			
ANR	3453849	Identifier	error		3453805	0					
ANR	3453850	CallExpression	FT_ERR ( Stack_Underflow )		3453805	1					
ANR	3453851	Callee	FT_ERR		3453805	0					
ANR	3453852	Identifier	FT_ERR		3453805	0					
ANR	3453853	ArgumentList	Stack_Underflow		3453805	1					
ANR	3453854	Argument	Stack_Underflow		3453805	0					
ANR	3453855	Identifier	Stack_Underflow		3453805	0					
ANR	3453856	IfStatement	if ( parser -> top >= parser -> stack + 5 )		3453805	18					
ANR	3453857	Condition	parser -> top >= parser -> stack + 5	816:9:21008:21039	3453805	0	True				
ANR	3453858	RelationalExpression	parser -> top >= parser -> stack + 5		3453805	0		>=			
ANR	3453859	PtrMemberAccess	parser -> top		3453805	0					
ANR	3453860	Identifier	parser		3453805	0					
ANR	3453861	Identifier	top		3453805	1					
ANR	3453862	AdditiveExpression	parser -> stack + 5		3453805	1		+			
ANR	3453863	PtrMemberAccess	parser -> stack		3453805	0					
ANR	3453864	Identifier	parser		3453805	0					
ANR	3453865	Identifier	stack		3453805	1					
ANR	3453866	PrimaryExpression	5		3453805	1					
ANR	3453867	CompoundStatement		21:6:592:653	3453805	1					
ANR	3453868	IdentifierDeclStatement	"FT_Long num_designs = cff_parse_num ( parser , parser -> stack ) ;"	818:6:21055:21116	3453805	0	True				
ANR	3453869	IdentifierDecl	"num_designs = cff_parse_num ( parser , parser -> stack )"		3453805	0					
ANR	3453870	IdentifierDeclType	FT_Long		3453805	0					
ANR	3453871	Identifier	num_designs		3453805	1					
ANR	3453872	AssignmentExpression	"num_designs = cff_parse_num ( parser , parser -> stack )"		3453805	2		=			
ANR	3453873	Identifier	num_designs		3453805	0					
ANR	3453874	CallExpression	"cff_parse_num ( parser , parser -> stack )"		3453805	1					
ANR	3453875	Callee	cff_parse_num		3453805	0					
ANR	3453876	Identifier	cff_parse_num		3453805	0					
ANR	3453877	ArgumentList	parser		3453805	1					
ANR	3453878	Argument	parser		3453805	0					
ANR	3453879	Identifier	parser		3453805	0					
ANR	3453880	Argument	parser -> stack		3453805	1					
ANR	3453881	PtrMemberAccess	parser -> stack		3453805	0					
ANR	3453882	Identifier	parser		3453805	0					
ANR	3453883	Identifier	stack		3453805	1					
ANR	3453884	IfStatement	if ( num_designs > 16 || num_designs < 2 )		3453805	1					
ANR	3453885	Condition	num_designs > 16 || num_designs < 2	821:11:21131:21165	3453805	0	True				
ANR	3453886	OrExpression	num_designs > 16 || num_designs < 2		3453805	0		||			
ANR	3453887	RelationalExpression	num_designs > 16		3453805	0		>			
ANR	3453888	Identifier	num_designs		3453805	0					
ANR	3453889	PrimaryExpression	16		3453805	1					
ANR	3453890	RelationalExpression	num_designs < 2		3453805	1		<			
ANR	3453891	Identifier	num_designs		3453805	0					
ANR	3453892	PrimaryExpression	2		3453805	1					
ANR	3453893	CompoundStatement		25:6:712:712	3453805	1					
ANR	3453894	Statement	FT_ERROR	823:8:21185:21192	3453805	0	True				
ANR	3453895	Statement	(	823:16:21193:21193	3453805	1	True				
ANR	3453896	Statement	(	823:17:21194:21194	3453805	2	True				
ANR	3453897	Statement	"""cff_parse_multiple_master:"""	823:19:21196:21223	3453805	3	True				
ANR	3453898	Statement	""" Invalid number of designs\\n"""	824:19:21244:21273	3453805	4	True				
ANR	3453899	Statement	)	824:50:21275:21275	3453805	5	True				
ANR	3453900	Statement	)	824:51:21276:21276	3453805	6	True				
ANR	3453901	ExpressionStatement		824:52:21277:21277	3453805	7	True				
ANR	3453902	ExpressionStatement	error = FT_THROW ( Invalid_File_Format )	825:8:21287:21326	3453805	8	True				
ANR	3453903	AssignmentExpression	error = FT_THROW ( Invalid_File_Format )		3453805	0		=			
ANR	3453904	Identifier	error		3453805	0					
ANR	3453905	CallExpression	FT_THROW ( Invalid_File_Format )		3453805	1					
ANR	3453906	Callee	FT_THROW		3453805	0					
ANR	3453907	Identifier	FT_THROW		3453805	0					
ANR	3453908	ArgumentList	Invalid_File_Format		3453805	1					
ANR	3453909	Argument	Invalid_File_Format		3453805	0					
ANR	3453910	Identifier	Invalid_File_Format		3453805	0					
ANR	3453911	ElseStatement	else		3453805	0					
ANR	3453912	CompoundStatement		31:6:890:890	3453805	0					
ANR	3453913	ExpressionStatement	dict -> num_designs = ( FT_UShort ) num_designs	829:8:21363:21407	3453805	0	True				
ANR	3453914	AssignmentExpression	dict -> num_designs = ( FT_UShort ) num_designs		3453805	0		=			
ANR	3453915	PtrMemberAccess	dict -> num_designs		3453805	0					
ANR	3453916	Identifier	dict		3453805	0					
ANR	3453917	Identifier	num_designs		3453805	1					
ANR	3453918	CastExpression	( FT_UShort ) num_designs		3453805	1					
ANR	3453919	CastTarget	FT_UShort		3453805	0					
ANR	3453920	Identifier	num_designs		3453805	1					
ANR	3453921	ExpressionStatement	dict -> num_axes = ( FT_UShort ) ( parser -> top - parser -> stack - 4 )	830:8:21417:21485	3453805	1	True				
ANR	3453922	AssignmentExpression	dict -> num_axes = ( FT_UShort ) ( parser -> top - parser -> stack - 4 )		3453805	0		=			
ANR	3453923	PtrMemberAccess	dict -> num_axes		3453805	0					
ANR	3453924	Identifier	dict		3453805	0					
ANR	3453925	Identifier	num_axes		3453805	1					
ANR	3453926	CastExpression	( FT_UShort ) ( parser -> top - parser -> stack - 4 )		3453805	1					
ANR	3453927	CastTarget	FT_UShort		3453805	0					
ANR	3453928	AdditiveExpression	parser -> top - parser -> stack - 4		3453805	1		-			
ANR	3453929	PtrMemberAccess	parser -> top		3453805	0					
ANR	3453930	Identifier	parser		3453805	0					
ANR	3453931	Identifier	top		3453805	1					
ANR	3453932	AdditiveExpression	parser -> stack - 4		3453805	1		-			
ANR	3453933	PtrMemberAccess	parser -> stack		3453805	0					
ANR	3453934	Identifier	parser		3453805	0					
ANR	3453935	Identifier	stack		3453805	1					
ANR	3453936	PrimaryExpression	4		3453805	1					
ANR	3453937	ExpressionStatement	parser -> num_designs = dict -> num_designs	832:8:21496:21535	3453805	2	True				
ANR	3453938	AssignmentExpression	parser -> num_designs = dict -> num_designs		3453805	0		=			
ANR	3453939	PtrMemberAccess	parser -> num_designs		3453805	0					
ANR	3453940	Identifier	parser		3453805	0					
ANR	3453941	Identifier	num_designs		3453805	1					
ANR	3453942	PtrMemberAccess	dict -> num_designs		3453805	1					
ANR	3453943	Identifier	dict		3453805	0					
ANR	3453944	Identifier	num_designs		3453805	1					
ANR	3453945	ExpressionStatement	parser -> num_axes = dict -> num_axes	833:8:21545:21581	3453805	3	True				
ANR	3453946	AssignmentExpression	parser -> num_axes = dict -> num_axes		3453805	0		=			
ANR	3453947	PtrMemberAccess	parser -> num_axes		3453805	0					
ANR	3453948	Identifier	parser		3453805	0					
ANR	3453949	Identifier	num_axes		3453805	1					
ANR	3453950	PtrMemberAccess	dict -> num_axes		3453805	1					
ANR	3453951	Identifier	dict		3453805	0					
ANR	3453952	Identifier	num_axes		3453805	1					
ANR	3453953	ExpressionStatement	error = FT_Err_Ok	835:8:21592:21609	3453805	4	True				
ANR	3453954	AssignmentExpression	error = FT_Err_Ok		3453805	0		=			
ANR	3453955	Identifier	error		3453805	0					
ANR	3453956	Identifier	FT_Err_Ok		3453805	1					
ANR	3453957	ReturnStatement	return error ;	839:4:21630:21642	3453805	19	True				
ANR	3453958	Identifier	error		3453805	0					
ANR	3453959	ReturnType	static FT_Error		3453805	1					
ANR	3453960	Identifier	cff_parse_multiple_master		3453805	2					
ANR	3453961	ParameterList	CFF_Parser parser		3453805	3					
ANR	3453962	Parameter	CFF_Parser parser	797:29:20439:20456	3453805	0	True				
ANR	3453963	ParameterType	CFF_Parser		3453805	0					
ANR	3453964	Identifier	parser		3453805	1					
ANR	3453965	CFGEntryNode	ENTRY		3453805		True				
ANR	3453966	CFGExitNode	EXIT		3453805		True				
ANR	3453967	Symbol	parser -> num_designs		3453805						
ANR	3453968	Symbol	Stack_Underflow		3453805						
ANR	3453969	Symbol	FT_Err_Ok		3453805						
ANR	3453970	Symbol	parser -> object		3453805						
ANR	3453971	Symbol	dict -> num_designs		3453805						
ANR	3453972	Symbol	FT_COMPONENT		3453805						
ANR	3453973	Symbol	num_designs		3453805						
ANR	3453974	Symbol	* FT_COMPONENT		3453805						
ANR	3453975	Symbol	FT_ERR		3453805						
ANR	3453976	Symbol	cff_parse_num		3453805						
ANR	3453977	Symbol	error		3453805						
ANR	3453978	Symbol	parser -> top		3453805						
ANR	3453979	Symbol	FT_THROW		3453805						
ANR	3453980	Symbol	* parser		3453805						
ANR	3453981	Symbol	* dict		3453805						
ANR	3453982	Symbol	parser		3453805						
ANR	3453983	Symbol	dict		3453805						
ANR	3453984	Symbol	* ft_trace_levels		3453805						
ANR	3453985	Symbol	dict -> num_axes		3453805						
ANR	3453986	Symbol	parser -> stack		3453805						
ANR	3453987	Symbol	parser -> num_axes		3453805						
ANR	3453988	Symbol	ft_trace_levels		3453805						
ANR	3453989	Symbol	Invalid_File_Format		3453805						
ANR	3453990	Function	cff_parse_cid_ros	843:2:21652:22599							
ANR	3453991	FunctionDef	cff_parse_cid_ros (CFF_Parser parser)		3453990	0					
ANR	3453992	CompoundStatement		845:2:21712:22599	3453990	0					
ANR	3453993	IdentifierDeclStatement	CFF_FontRecDict dict = ( CFF_FontRecDict ) parser -> object ;	846:4:21718:21773	3453990	0	True				
ANR	3453994	IdentifierDecl	dict = ( CFF_FontRecDict ) parser -> object		3453990	0					
ANR	3453995	IdentifierDeclType	CFF_FontRecDict		3453990	0					
ANR	3453996	Identifier	dict		3453990	1					
ANR	3453997	AssignmentExpression	dict = ( CFF_FontRecDict ) parser -> object		3453990	2		=			
ANR	3453998	Identifier	dict		3453990	0					
ANR	3453999	CastExpression	( CFF_FontRecDict ) parser -> object		3453990	1					
ANR	3454000	CastTarget	CFF_FontRecDict		3453990	0					
ANR	3454001	PtrMemberAccess	parser -> object		3453990	1					
ANR	3454002	Identifier	parser		3453990	0					
ANR	3454003	Identifier	object		3453990	1					
ANR	3454004	IdentifierDeclStatement	FT_Byte * * data = parser -> stack ;	847:4:21779:21816	3453990	1	True				
ANR	3454005	IdentifierDecl	* * data = parser -> stack		3453990	0					
ANR	3454006	IdentifierDeclType	FT_Byte * *		3453990	0					
ANR	3454007	Identifier	data		3453990	1					
ANR	3454008	AssignmentExpression	* * data = parser -> stack		3453990	2		=			
ANR	3454009	Identifier	data		3453990	0					
ANR	3454010	PtrMemberAccess	parser -> stack		3453990	1					
ANR	3454011	Identifier	parser		3453990	0					
ANR	3454012	Identifier	stack		3453990	1					
ANR	3454013	IdentifierDeclStatement	FT_Error error ;	848:4:21822:21844	3453990	2	True				
ANR	3454014	IdentifierDecl	error		3453990	0					
ANR	3454015	IdentifierDeclType	FT_Error		3453990	0					
ANR	3454016	Identifier	error		3453990	1					
ANR	3454017	ExpressionStatement	error = FT_ERR ( Stack_Underflow )	851:4:21852:21885	3453990	3	True				
ANR	3454018	AssignmentExpression	error = FT_ERR ( Stack_Underflow )		3453990	0		=			
ANR	3454019	Identifier	error		3453990	0					
ANR	3454020	CallExpression	FT_ERR ( Stack_Underflow )		3453990	1					
ANR	3454021	Callee	FT_ERR		3453990	0					
ANR	3454022	Identifier	FT_ERR		3453990	0					
ANR	3454023	ArgumentList	Stack_Underflow		3453990	1					
ANR	3454024	Argument	Stack_Underflow		3453990	0					
ANR	3454025	Identifier	Stack_Underflow		3453990	0					
ANR	3454026	IfStatement	if ( parser -> top >= parser -> stack + 3 )		3453990	4					
ANR	3454027	Condition	parser -> top >= parser -> stack + 3	853:9:21897:21928	3453990	0	True				
ANR	3454028	RelationalExpression	parser -> top >= parser -> stack + 3		3453990	0		>=			
ANR	3454029	PtrMemberAccess	parser -> top		3453990	0					
ANR	3454030	Identifier	parser		3453990	0					
ANR	3454031	Identifier	top		3453990	1					
ANR	3454032	AdditiveExpression	parser -> stack + 3		3453990	1		+			
ANR	3454033	PtrMemberAccess	parser -> stack		3453990	0					
ANR	3454034	Identifier	parser		3453990	0					
ANR	3454035	Identifier	stack		3453990	1					
ANR	3454036	PrimaryExpression	3		3453990	1					
ANR	3454037	CompoundStatement		10:4:223:223	3453990	1					
ANR	3454038	ExpressionStatement	"dict -> cid_registry = ( FT_UInt ) cff_parse_num ( parser , data ++ )"	855:6:21944:22005	3453990	0	True				
ANR	3454039	AssignmentExpression	"dict -> cid_registry = ( FT_UInt ) cff_parse_num ( parser , data ++ )"		3453990	0		=			
ANR	3454040	PtrMemberAccess	dict -> cid_registry		3453990	0					
ANR	3454041	Identifier	dict		3453990	0					
ANR	3454042	Identifier	cid_registry		3453990	1					
ANR	3454043	CastExpression	"( FT_UInt ) cff_parse_num ( parser , data ++ )"		3453990	1					
ANR	3454044	CastTarget	FT_UInt		3453990	0					
ANR	3454045	CallExpression	"cff_parse_num ( parser , data ++ )"		3453990	1					
ANR	3454046	Callee	cff_parse_num		3453990	0					
ANR	3454047	Identifier	cff_parse_num		3453990	0					
ANR	3454048	ArgumentList	parser		3453990	1					
ANR	3454049	Argument	parser		3453990	0					
ANR	3454050	Identifier	parser		3453990	0					
ANR	3454051	Argument	data ++		3453990	1					
ANR	3454052	PostIncDecOperationExpression	data ++		3453990	0					
ANR	3454053	Identifier	data		3453990	0					
ANR	3454054	IncDec	++		3453990	1					
ANR	3454055	ExpressionStatement	"dict -> cid_ordering = ( FT_UInt ) cff_parse_num ( parser , data ++ )"	856:6:22013:22074	3453990	1	True				
ANR	3454056	AssignmentExpression	"dict -> cid_ordering = ( FT_UInt ) cff_parse_num ( parser , data ++ )"		3453990	0		=			
ANR	3454057	PtrMemberAccess	dict -> cid_ordering		3453990	0					
ANR	3454058	Identifier	dict		3453990	0					
ANR	3454059	Identifier	cid_ordering		3453990	1					
ANR	3454060	CastExpression	"( FT_UInt ) cff_parse_num ( parser , data ++ )"		3453990	1					
ANR	3454061	CastTarget	FT_UInt		3453990	0					
ANR	3454062	CallExpression	"cff_parse_num ( parser , data ++ )"		3453990	1					
ANR	3454063	Callee	cff_parse_num		3453990	0					
ANR	3454064	Identifier	cff_parse_num		3453990	0					
ANR	3454065	ArgumentList	parser		3453990	1					
ANR	3454066	Argument	parser		3453990	0					
ANR	3454067	Identifier	parser		3453990	0					
ANR	3454068	Argument	data ++		3453990	1					
ANR	3454069	PostIncDecOperationExpression	data ++		3453990	0					
ANR	3454070	Identifier	data		3453990	0					
ANR	3454071	IncDec	++		3453990	1					
ANR	3454072	IfStatement	if ( * * data == 30 )		3453990	2					
ANR	3454073	Condition	* * data == 30	857:11:22087:22098	3453990	0	True				
ANR	3454074	EqualityExpression	* * data == 30		3453990	0		==			
ANR	3454075	UnaryOperationExpression	* * data		3453990	0					
ANR	3454076	UnaryOperator	*		3453990	0					
ANR	3454077	UnaryOperationExpression	* data		3453990	1					
ANR	3454078	UnaryOperator	*		3453990	0					
ANR	3454079	Identifier	data		3453990	1					
ANR	3454080	PrimaryExpression	30		3453990	1					
ANR	3454081	ExpressionStatement	"FT_TRACE1 ( ( ""cff_parse_cid_ros: real supplement is rounded\\n"" ) )"	858:8:22110:22174	3453990	1	True				
ANR	3454082	CallExpression	"FT_TRACE1 ( ( ""cff_parse_cid_ros: real supplement is rounded\\n"" ) )"		3453990	0					
ANR	3454083	Callee	FT_TRACE1		3453990	0					
ANR	3454084	Identifier	FT_TRACE1		3453990	0					
ANR	3454085	ArgumentList	"""cff_parse_cid_ros: real supplement is rounded\\n"""		3453990	1					
ANR	3454086	Argument	"""cff_parse_cid_ros: real supplement is rounded\\n"""		3453990	0					
ANR	3454087	PrimaryExpression	"""cff_parse_cid_ros: real supplement is rounded\\n"""		3453990	0					
ANR	3454088	ExpressionStatement	"dict -> cid_supplement = cff_parse_num ( parser , data )"	859:6:22182:22234	3453990	3	True				
ANR	3454089	AssignmentExpression	"dict -> cid_supplement = cff_parse_num ( parser , data )"		3453990	0		=			
ANR	3454090	PtrMemberAccess	dict -> cid_supplement		3453990	0					
ANR	3454091	Identifier	dict		3453990	0					
ANR	3454092	Identifier	cid_supplement		3453990	1					
ANR	3454093	CallExpression	"cff_parse_num ( parser , data )"		3453990	1					
ANR	3454094	Callee	cff_parse_num		3453990	0					
ANR	3454095	Identifier	cff_parse_num		3453990	0					
ANR	3454096	ArgumentList	parser		3453990	1					
ANR	3454097	Argument	parser		3453990	0					
ANR	3454098	Identifier	parser		3453990	0					
ANR	3454099	Argument	data		3453990	1					
ANR	3454100	Identifier	data		3453990	0					
ANR	3454101	IfStatement	if ( dict -> cid_supplement < 0 )		3453990	4					
ANR	3454102	Condition	dict -> cid_supplement < 0	860:11:22247:22270	3453990	0	True				
ANR	3454103	RelationalExpression	dict -> cid_supplement < 0		3453990	0		<			
ANR	3454104	PtrMemberAccess	dict -> cid_supplement		3453990	0					
ANR	3454105	Identifier	dict		3453990	0					
ANR	3454106	Identifier	cid_supplement		3453990	1					
ANR	3454107	PrimaryExpression	0		3453990	1					
ANR	3454108	ExpressionStatement	"FT_TRACE1 ( ( ""cff_parse_cid_ros: negative supplement %d is found\\n"" , dict -> cid_supplement ) )"	861:8:22282:22392	3453990	1	True				
ANR	3454109	CallExpression	"FT_TRACE1 ( ( ""cff_parse_cid_ros: negative supplement %d is found\\n"" , dict -> cid_supplement ) )"		3453990	0					
ANR	3454110	Callee	FT_TRACE1		3453990	0					
ANR	3454111	Identifier	FT_TRACE1		3453990	0					
ANR	3454112	ArgumentList	"""cff_parse_cid_ros: negative supplement %d is found\\n"" , dict -> cid_supplement"		3453990	1					
ANR	3454113	Argument	"""cff_parse_cid_ros: negative supplement %d is found\\n"" , dict -> cid_supplement"		3453990	0					
ANR	3454114	Expression	"""cff_parse_cid_ros: negative supplement %d is found\\n"" , dict -> cid_supplement"		3453990	0					
ANR	3454115	PrimaryExpression	"""cff_parse_cid_ros: negative supplement %d is found\\n"""		3453990	0					
ANR	3454116	PtrMemberAccess	dict -> cid_supplement		3453990	1					
ANR	3454117	Identifier	dict		3453990	0					
ANR	3454118	Identifier	cid_supplement		3453990	1					
ANR	3454119	ExpressionStatement	error = FT_Err_Ok	863:6:22400:22417	3453990	5	True				
ANR	3454120	AssignmentExpression	error = FT_Err_Ok		3453990	0		=			
ANR	3454121	Identifier	error		3453990	0					
ANR	3454122	Identifier	FT_Err_Ok		3453990	1					
ANR	3454123	ExpressionStatement	"FT_TRACE4 ( ( "" %d %d %d\\n"" , dict -> cid_registry , dict -> cid_ordering , dict -> cid_supplement ) )"	865:6:22426:22570	3453990	6	True				
ANR	3454124	CallExpression	"FT_TRACE4 ( ( "" %d %d %d\\n"" , dict -> cid_registry , dict -> cid_ordering , dict -> cid_supplement ) )"		3453990	0					
ANR	3454125	Callee	FT_TRACE4		3453990	0					
ANR	3454126	Identifier	FT_TRACE4		3453990	0					
ANR	3454127	ArgumentList	""" %d %d %d\\n"" , dict -> cid_registry , dict -> cid_ordering , dict -> cid_supplement"		3453990	1					
ANR	3454128	Argument	""" %d %d %d\\n"" , dict -> cid_registry , dict -> cid_ordering , dict -> cid_supplement"		3453990	0					
ANR	3454129	Expression	""" %d %d %d\\n"" , dict -> cid_registry , dict -> cid_ordering , dict -> cid_supplement"		3453990	0					
ANR	3454130	PrimaryExpression	""" %d %d %d\\n"""		3453990	0					
ANR	3454131	Expression	"dict -> cid_registry , dict -> cid_ordering , dict -> cid_supplement"		3453990	1					
ANR	3454132	PtrMemberAccess	dict -> cid_registry		3453990	0					
ANR	3454133	Identifier	dict		3453990	0					
ANR	3454134	Identifier	cid_registry		3453990	1					
ANR	3454135	Expression	"dict -> cid_ordering , dict -> cid_supplement"		3453990	1					
ANR	3454136	PtrMemberAccess	dict -> cid_ordering		3453990	0					
ANR	3454137	Identifier	dict		3453990	0					
ANR	3454138	Identifier	cid_ordering		3453990	1					
ANR	3454139	PtrMemberAccess	dict -> cid_supplement		3453990	1					
ANR	3454140	Identifier	dict		3453990	0					
ANR	3454141	Identifier	cid_supplement		3453990	1					
ANR	3454142	ReturnStatement	return error ;	871:4:22583:22595	3453990	5	True				
ANR	3454143	Identifier	error		3453990	0					
ANR	3454144	ReturnType	static FT_Error		3453990	1					
ANR	3454145	Identifier	cff_parse_cid_ros		3453990	2					
ANR	3454146	ParameterList	CFF_Parser parser		3453990	3					
ANR	3454147	Parameter	CFF_Parser parser	844:21:21689:21706	3453990	0	True				
ANR	3454148	ParameterType	CFF_Parser		3453990	0					
ANR	3454149	Identifier	parser		3453990	1					
ANR	3454150	CFGEntryNode	ENTRY		3453990		True				
ANR	3454151	CFGExitNode	EXIT		3453990		True				
ANR	3454152	Symbol	* * data		3453990						
ANR	3454153	Symbol	Stack_Underflow		3453990						
ANR	3454154	Symbol	data		3453990						
ANR	3454155	Symbol	FT_Err_Ok		3453990						
ANR	3454156	Symbol	parser -> object		3453990						
ANR	3454157	Symbol	FT_ERR		3453990						
ANR	3454158	Symbol	cff_parse_num		3453990						
ANR	3454159	Symbol	error		3453990						
ANR	3454160	Symbol	dict -> cid_supplement		3453990						
ANR	3454161	Symbol	parser -> top		3453990						
ANR	3454162	Symbol	dict -> cid_registry		3453990						
ANR	3454163	Symbol	* parser		3453990						
ANR	3454164	Symbol	* dict		3453990						
ANR	3454165	Symbol	dict -> cid_ordering		3453990						
ANR	3454166	Symbol	parser		3453990						
ANR	3454167	Symbol	dict		3453990						
ANR	3454168	Symbol	parser -> stack		3453990						
ANR	3454169	Symbol	* data		3453990						
ANR	3454170	Function	cff_parse_vsindex	875:2:22605:23350							
ANR	3454171	FunctionDef	cff_parse_vsindex (CFF_Parser parser)		3454170	0					
ANR	3454172	CompoundStatement		877:2:22665:23350	3454170	0					
ANR	3454173	IdentifierDeclStatement	CFF_Private priv = ( CFF_Private ) parser -> object ;	879:4:22733:22780	3454170	0	True				
ANR	3454174	IdentifierDecl	priv = ( CFF_Private ) parser -> object		3454170	0					
ANR	3454175	IdentifierDeclType	CFF_Private		3454170	0					
ANR	3454176	Identifier	priv		3454170	1					
ANR	3454177	AssignmentExpression	priv = ( CFF_Private ) parser -> object		3454170	2		=			
ANR	3454178	Identifier	priv		3454170	0					
ANR	3454179	CastExpression	( CFF_Private ) parser -> object		3454170	1					
ANR	3454180	CastTarget	CFF_Private		3454170	0					
ANR	3454181	PtrMemberAccess	parser -> object		3454170	1					
ANR	3454182	Identifier	parser		3454170	0					
ANR	3454183	Identifier	object		3454170	1					
ANR	3454184	IdentifierDeclStatement	FT_Byte * * data = parser -> stack ;	880:4:22786:22819	3454170	1	True				
ANR	3454185	IdentifierDecl	* * data = parser -> stack		3454170	0					
ANR	3454186	IdentifierDeclType	FT_Byte * *		3454170	0					
ANR	3454187	Identifier	data		3454170	1					
ANR	3454188	AssignmentExpression	* * data = parser -> stack		3454170	2		=			
ANR	3454189	Identifier	data		3454170	0					
ANR	3454190	PtrMemberAccess	parser -> stack		3454170	1					
ANR	3454191	Identifier	parser		3454170	0					
ANR	3454192	Identifier	stack		3454170	1					
ANR	3454193	IdentifierDeclStatement	CFF_Blend blend ;	881:4:22825:22843	3454170	2	True				
ANR	3454194	IdentifierDecl	blend		3454170	0					
ANR	3454195	IdentifierDeclType	CFF_Blend		3454170	0					
ANR	3454196	Identifier	blend		3454170	1					
ANR	3454197	IdentifierDeclStatement	FT_Error error ;	882:4:22849:22867	3454170	3	True				
ANR	3454198	IdentifierDecl	error		3454170	0					
ANR	3454199	IdentifierDeclType	FT_Error		3454170	0					
ANR	3454200	Identifier	error		3454170	1					
ANR	3454201	IfStatement	if ( ! priv || ! priv -> subfont )		3454170	4					
ANR	3454202	Condition	! priv || ! priv -> subfont	885:9:22880:22902	3454170	0	True				
ANR	3454203	OrExpression	! priv || ! priv -> subfont		3454170	0		||			
ANR	3454204	UnaryOperationExpression	! priv		3454170	0					
ANR	3454205	UnaryOperator	!		3454170	0					
ANR	3454206	Identifier	priv		3454170	1					
ANR	3454207	UnaryOperationExpression	! priv -> subfont		3454170	1					
ANR	3454208	UnaryOperator	!		3454170	0					
ANR	3454209	PtrMemberAccess	priv -> subfont		3454170	1					
ANR	3454210	Identifier	priv		3454170	0					
ANR	3454211	Identifier	subfont		3454170	1					
ANR	3454212	CompoundStatement		10:4:244:244	3454170	1					
ANR	3454213	ExpressionStatement	error = FT_THROW ( Invalid_File_Format )	887:6:22918:22957	3454170	0	True				
ANR	3454214	AssignmentExpression	error = FT_THROW ( Invalid_File_Format )		3454170	0		=			
ANR	3454215	Identifier	error		3454170	0					
ANR	3454216	CallExpression	FT_THROW ( Invalid_File_Format )		3454170	1					
ANR	3454217	Callee	FT_THROW		3454170	0					
ANR	3454218	Identifier	FT_THROW		3454170	0					
ANR	3454219	ArgumentList	Invalid_File_Format		3454170	1					
ANR	3454220	Argument	Invalid_File_Format		3454170	0					
ANR	3454221	Identifier	Invalid_File_Format		3454170	0					
ANR	3454222	GotoStatement	goto Exit ;	888:6:22965:22974	3454170	1	True				
ANR	3454223	Identifier	Exit		3454170	0					
ANR	3454224	ExpressionStatement	blend = & priv -> subfont -> blend	891:4:22987:23016	3454170	5	True				
ANR	3454225	AssignmentExpression	blend = & priv -> subfont -> blend		3454170	0		=			
ANR	3454226	Identifier	blend		3454170	0					
ANR	3454227	UnaryOperationExpression	& priv -> subfont -> blend		3454170	1					
ANR	3454228	UnaryOperator	&		3454170	0					
ANR	3454229	PtrMemberAccess	priv -> subfont -> blend		3454170	1					
ANR	3454230	PtrMemberAccess	priv -> subfont		3454170	0					
ANR	3454231	Identifier	priv		3454170	0					
ANR	3454232	Identifier	subfont		3454170	1					
ANR	3454233	Identifier	blend		3454170	1					
ANR	3454234	IfStatement	if ( blend -> usedBV )		3454170	6					
ANR	3454235	Condition	blend -> usedBV	893:9:23028:23040	3454170	0	True				
ANR	3454236	PtrMemberAccess	blend -> usedBV		3454170	0					
ANR	3454237	Identifier	blend		3454170	0					
ANR	3454238	Identifier	usedBV		3454170	1					
ANR	3454239	CompoundStatement		18:4:382:382	3454170	1					
ANR	3454240	ExpressionStatement	"FT_ERROR ( ( "" cff_parse_vsindex: vsindex not allowed after blend\\n"" ) )"	895:6:23056:23125	3454170	0	True				
ANR	3454241	CallExpression	"FT_ERROR ( ( "" cff_parse_vsindex: vsindex not allowed after blend\\n"" ) )"		3454170	0					
ANR	3454242	Callee	FT_ERROR		3454170	0					
ANR	3454243	Identifier	FT_ERROR		3454170	0					
ANR	3454244	ArgumentList	""" cff_parse_vsindex: vsindex not allowed after blend\\n"""		3454170	1					
ANR	3454245	Argument	""" cff_parse_vsindex: vsindex not allowed after blend\\n"""		3454170	0					
ANR	3454246	PrimaryExpression	""" cff_parse_vsindex: vsindex not allowed after blend\\n"""		3454170	0					
ANR	3454247	ExpressionStatement	error = FT_THROW ( Syntax_Error )	896:6:23133:23165	3454170	1	True				
ANR	3454248	AssignmentExpression	error = FT_THROW ( Syntax_Error )		3454170	0		=			
ANR	3454249	Identifier	error		3454170	0					
ANR	3454250	CallExpression	FT_THROW ( Syntax_Error )		3454170	1					
ANR	3454251	Callee	FT_THROW		3454170	0					
ANR	3454252	Identifier	FT_THROW		3454170	0					
ANR	3454253	ArgumentList	Syntax_Error		3454170	1					
ANR	3454254	Argument	Syntax_Error		3454170	0					
ANR	3454255	Identifier	Syntax_Error		3454170	0					
ANR	3454256	GotoStatement	goto Exit ;	897:6:23173:23182	3454170	2	True				
ANR	3454257	Identifier	Exit		3454170	0					
ANR	3454258	ExpressionStatement	"priv -> vsindex = ( FT_UInt ) cff_parse_num ( parser , data ++ )"	900:4:23195:23251	3454170	7	True				
ANR	3454259	AssignmentExpression	"priv -> vsindex = ( FT_UInt ) cff_parse_num ( parser , data ++ )"		3454170	0		=			
ANR	3454260	PtrMemberAccess	priv -> vsindex		3454170	0					
ANR	3454261	Identifier	priv		3454170	0					
ANR	3454262	Identifier	vsindex		3454170	1					
ANR	3454263	CastExpression	"( FT_UInt ) cff_parse_num ( parser , data ++ )"		3454170	1					
ANR	3454264	CastTarget	FT_UInt		3454170	0					
ANR	3454265	CallExpression	"cff_parse_num ( parser , data ++ )"		3454170	1					
ANR	3454266	Callee	cff_parse_num		3454170	0					
ANR	3454267	Identifier	cff_parse_num		3454170	0					
ANR	3454268	ArgumentList	parser		3454170	1					
ANR	3454269	Argument	parser		3454170	0					
ANR	3454270	Identifier	parser		3454170	0					
ANR	3454271	Argument	data ++		3454170	1					
ANR	3454272	PostIncDecOperationExpression	data ++		3454170	0					
ANR	3454273	Identifier	data		3454170	0					
ANR	3454274	IncDec	++		3454170	1					
ANR	3454275	ExpressionStatement	"FT_TRACE4 ( ( "" %d\\n"" , priv -> vsindex ) )"	902:4:23258:23295	3454170	8	True				
ANR	3454276	CallExpression	"FT_TRACE4 ( ( "" %d\\n"" , priv -> vsindex ) )"		3454170	0					
ANR	3454277	Callee	FT_TRACE4		3454170	0					
ANR	3454278	Identifier	FT_TRACE4		3454170	0					
ANR	3454279	ArgumentList	""" %d\\n"" , priv -> vsindex"		3454170	1					
ANR	3454280	Argument	""" %d\\n"" , priv -> vsindex"		3454170	0					
ANR	3454281	Expression	""" %d\\n"" , priv -> vsindex"		3454170	0					
ANR	3454282	PrimaryExpression	""" %d\\n"""		3454170	0					
ANR	3454283	PtrMemberAccess	priv -> vsindex		3454170	1					
ANR	3454284	Identifier	priv		3454170	0					
ANR	3454285	Identifier	vsindex		3454170	1					
ANR	3454286	ExpressionStatement	error = FT_Err_Ok	904:4:23302:23319	3454170	9	True				
ANR	3454287	AssignmentExpression	error = FT_Err_Ok		3454170	0		=			
ANR	3454288	Identifier	error		3454170	0					
ANR	3454289	Identifier	FT_Err_Ok		3454170	1					
ANR	3454290	Label	Exit :	906:2:23324:23328	3454170	10	True				
ANR	3454291	Identifier	Exit		3454170	0					
ANR	3454292	ReturnStatement	return error ;	907:4:23334:23346	3454170	11	True				
ANR	3454293	Identifier	error		3454170	0					
ANR	3454294	ReturnType	static FT_Error		3454170	1					
ANR	3454295	Identifier	cff_parse_vsindex		3454170	2					
ANR	3454296	ParameterList	CFF_Parser parser		3454170	3					
ANR	3454297	Parameter	CFF_Parser parser	876:21:22642:22659	3454170	0	True				
ANR	3454298	ParameterType	CFF_Parser		3454170	0					
ANR	3454299	Identifier	parser		3454170	1					
ANR	3454300	CFGEntryNode	ENTRY		3454170		True				
ANR	3454301	CFGExitNode	EXIT		3454170		True				
ANR	3454302	Symbol	* blend		3454170						
ANR	3454303	Symbol	data		3454170						
ANR	3454304	Symbol	FT_Err_Ok		3454170						
ANR	3454305	Symbol	parser -> object		3454170						
ANR	3454306	Symbol	blend		3454170						
ANR	3454307	Symbol	* priv		3454170						
ANR	3454308	Symbol	priv -> vsindex		3454170						
ANR	3454309	Symbol	cff_parse_num		3454170						
ANR	3454310	Symbol	error		3454170						
ANR	3454311	Symbol	blend -> usedBV		3454170						
ANR	3454312	Symbol	FT_THROW		3454170						
ANR	3454313	Symbol	* parser		3454170						
ANR	3454314	Symbol	Syntax_Error		3454170						
ANR	3454315	Symbol	priv -> subfont		3454170						
ANR	3454316	Symbol	parser		3454170						
ANR	3454317	Symbol	& priv -> subfont -> blend		3454170						
ANR	3454318	Symbol	priv		3454170						
ANR	3454319	Symbol	parser -> stack		3454170						
ANR	3454320	Symbol	Invalid_File_Format		3454170						
ANR	3454321	Function	cff_parse_blend	911:2:23356:24738							
ANR	3454322	FunctionDef	cff_parse_blend (CFF_Parser parser)		3454321	0					
ANR	3454323	CompoundStatement		913:2:23414:24738	3454321	0					
ANR	3454324	IdentifierDeclStatement	CFF_Private priv = ( CFF_Private ) parser -> object ;	915:4:23480:23527	3454321	0	True				
ANR	3454325	IdentifierDecl	priv = ( CFF_Private ) parser -> object		3454321	0					
ANR	3454326	IdentifierDeclType	CFF_Private		3454321	0					
ANR	3454327	Identifier	priv		3454321	1					
ANR	3454328	AssignmentExpression	priv = ( CFF_Private ) parser -> object		3454321	2		=			
ANR	3454329	Identifier	priv		3454321	0					
ANR	3454330	CastExpression	( CFF_Private ) parser -> object		3454321	1					
ANR	3454331	CastTarget	CFF_Private		3454321	0					
ANR	3454332	PtrMemberAccess	parser -> object		3454321	1					
ANR	3454333	Identifier	parser		3454321	0					
ANR	3454334	Identifier	object		3454321	1					
ANR	3454335	IdentifierDeclStatement	CFF_SubFont subFont ;	916:4:23533:23553	3454321	1	True				
ANR	3454336	IdentifierDecl	subFont		3454321	0					
ANR	3454337	IdentifierDeclType	CFF_SubFont		3454321	0					
ANR	3454338	Identifier	subFont		3454321	1					
ANR	3454339	IdentifierDeclStatement	CFF_Blend blend ;	917:4:23559:23577	3454321	2	True				
ANR	3454340	IdentifierDecl	blend		3454321	0					
ANR	3454341	IdentifierDeclType	CFF_Blend		3454321	0					
ANR	3454342	Identifier	blend		3454321	1					
ANR	3454343	IdentifierDeclStatement	FT_UInt numBlends ;	918:4:23583:23605	3454321	3	True				
ANR	3454344	IdentifierDecl	numBlends		3454321	0					
ANR	3454345	IdentifierDeclType	FT_UInt		3454321	0					
ANR	3454346	Identifier	numBlends		3454321	1					
ANR	3454347	IdentifierDeclStatement	FT_Error error ;	919:4:23611:23629	3454321	4	True				
ANR	3454348	IdentifierDecl	error		3454321	0					
ANR	3454349	IdentifierDeclType	FT_Error		3454321	0					
ANR	3454350	Identifier	error		3454321	1					
ANR	3454351	IfStatement	if ( ! priv || ! priv -> subfont )		3454321	5					
ANR	3454352	Condition	! priv || ! priv -> subfont	922:9:23642:23664	3454321	0	True				
ANR	3454353	OrExpression	! priv || ! priv -> subfont		3454321	0		||			
ANR	3454354	UnaryOperationExpression	! priv		3454321	0					
ANR	3454355	UnaryOperator	!		3454321	0					
ANR	3454356	Identifier	priv		3454321	1					
ANR	3454357	UnaryOperationExpression	! priv -> subfont		3454321	1					
ANR	3454358	UnaryOperator	!		3454321	0					
ANR	3454359	PtrMemberAccess	priv -> subfont		3454321	1					
ANR	3454360	Identifier	priv		3454321	0					
ANR	3454361	Identifier	subfont		3454321	1					
ANR	3454362	CompoundStatement		11:4:257:257	3454321	1					
ANR	3454363	ExpressionStatement	error = FT_THROW ( Invalid_File_Format )	924:6:23680:23719	3454321	0	True				
ANR	3454364	AssignmentExpression	error = FT_THROW ( Invalid_File_Format )		3454321	0		=			
ANR	3454365	Identifier	error		3454321	0					
ANR	3454366	CallExpression	FT_THROW ( Invalid_File_Format )		3454321	1					
ANR	3454367	Callee	FT_THROW		3454321	0					
ANR	3454368	Identifier	FT_THROW		3454321	0					
ANR	3454369	ArgumentList	Invalid_File_Format		3454321	1					
ANR	3454370	Argument	Invalid_File_Format		3454321	0					
ANR	3454371	Identifier	Invalid_File_Format		3454321	0					
ANR	3454372	GotoStatement	goto Exit ;	925:6:23727:23736	3454321	1	True				
ANR	3454373	Identifier	Exit		3454321	0					
ANR	3454374	ExpressionStatement	subFont = priv -> subfont	928:4:23749:23772	3454321	6	True				
ANR	3454375	AssignmentExpression	subFont = priv -> subfont		3454321	0		=			
ANR	3454376	Identifier	subFont		3454321	0					
ANR	3454377	PtrMemberAccess	priv -> subfont		3454321	1					
ANR	3454378	Identifier	priv		3454321	0					
ANR	3454379	Identifier	subfont		3454321	1					
ANR	3454380	ExpressionStatement	blend = & subFont -> blend	929:4:23778:23803	3454321	7	True				
ANR	3454381	AssignmentExpression	blend = & subFont -> blend		3454321	0		=			
ANR	3454382	Identifier	blend		3454321	0					
ANR	3454383	UnaryOperationExpression	& subFont -> blend		3454321	1					
ANR	3454384	UnaryOperator	&		3454321	0					
ANR	3454385	PtrMemberAccess	subFont -> blend		3454321	1					
ANR	3454386	Identifier	subFont		3454321	0					
ANR	3454387	Identifier	blend		3454321	1					
ANR	3454388	IfStatement	"if ( cff_blend_check_vector ( blend , priv -> vsindex , subFont -> lenNDV , subFont -> NDV ) )"		3454321	8					
ANR	3454389	Condition	"cff_blend_check_vector ( blend , priv -> vsindex , subFont -> lenNDV , subFont -> NDV )"	931:9:23815:23990	3454321	0	True				
ANR	3454390	CallExpression	"cff_blend_check_vector ( blend , priv -> vsindex , subFont -> lenNDV , subFont -> NDV )"		3454321	0					
ANR	3454391	Callee	cff_blend_check_vector		3454321	0					
ANR	3454392	Identifier	cff_blend_check_vector		3454321	0					
ANR	3454393	ArgumentList	blend		3454321	1					
ANR	3454394	Argument	blend		3454321	0					
ANR	3454395	Identifier	blend		3454321	0					
ANR	3454396	Argument	priv -> vsindex		3454321	1					
ANR	3454397	PtrMemberAccess	priv -> vsindex		3454321	0					
ANR	3454398	Identifier	priv		3454321	0					
ANR	3454399	Identifier	vsindex		3454321	1					
ANR	3454400	Argument	subFont -> lenNDV		3454321	2					
ANR	3454401	PtrMemberAccess	subFont -> lenNDV		3454321	0					
ANR	3454402	Identifier	subFont		3454321	0					
ANR	3454403	Identifier	lenNDV		3454321	1					
ANR	3454404	Argument	subFont -> NDV		3454321	3					
ANR	3454405	PtrMemberAccess	subFont -> NDV		3454321	0					
ANR	3454406	Identifier	subFont		3454321	0					
ANR	3454407	Identifier	NDV		3454321	1					
ANR	3454408	CompoundStatement		23:4:583:583	3454321	1					
ANR	3454409	ExpressionStatement	"error = cff_blend_build_vector ( blend , priv -> vsindex , subFont -> lenNDV , subFont -> NDV )"	936:6:24006:24205	3454321	0	True				
ANR	3454410	AssignmentExpression	"error = cff_blend_build_vector ( blend , priv -> vsindex , subFont -> lenNDV , subFont -> NDV )"		3454321	0		=			
ANR	3454411	Identifier	error		3454321	0					
ANR	3454412	CallExpression	"cff_blend_build_vector ( blend , priv -> vsindex , subFont -> lenNDV , subFont -> NDV )"		3454321	1					
ANR	3454413	Callee	cff_blend_build_vector		3454321	0					
ANR	3454414	Identifier	cff_blend_build_vector		3454321	0					
ANR	3454415	ArgumentList	blend		3454321	1					
ANR	3454416	Argument	blend		3454321	0					
ANR	3454417	Identifier	blend		3454321	0					
ANR	3454418	Argument	priv -> vsindex		3454321	1					
ANR	3454419	PtrMemberAccess	priv -> vsindex		3454321	0					
ANR	3454420	Identifier	priv		3454321	0					
ANR	3454421	Identifier	vsindex		3454321	1					
ANR	3454422	Argument	subFont -> lenNDV		3454321	2					
ANR	3454423	PtrMemberAccess	subFont -> lenNDV		3454321	0					
ANR	3454424	Identifier	subFont		3454321	0					
ANR	3454425	Identifier	lenNDV		3454321	1					
ANR	3454426	Argument	subFont -> NDV		3454321	3					
ANR	3454427	PtrMemberAccess	subFont -> NDV		3454321	0					
ANR	3454428	Identifier	subFont		3454321	0					
ANR	3454429	Identifier	NDV		3454321	1					
ANR	3454430	IfStatement	if ( error )		3454321	1					
ANR	3454431	Condition	error	940:11:24218:24222	3454321	0	True				
ANR	3454432	Identifier	error		3454321	0					
ANR	3454433	GotoStatement	goto Exit ;	941:8:24234:24243	3454321	1	True				
ANR	3454434	Identifier	Exit		3454321	0					
ANR	3454435	ExpressionStatement	"numBlends = ( FT_UInt ) cff_parse_num ( parser , parser -> top - 1 )"	944:4:24256:24317	3454321	9	True				
ANR	3454436	AssignmentExpression	"numBlends = ( FT_UInt ) cff_parse_num ( parser , parser -> top - 1 )"		3454321	0		=			
ANR	3454437	Identifier	numBlends		3454321	0					
ANR	3454438	CastExpression	"( FT_UInt ) cff_parse_num ( parser , parser -> top - 1 )"		3454321	1					
ANR	3454439	CastTarget	FT_UInt		3454321	0					
ANR	3454440	CallExpression	"cff_parse_num ( parser , parser -> top - 1 )"		3454321	1					
ANR	3454441	Callee	cff_parse_num		3454321	0					
ANR	3454442	Identifier	cff_parse_num		3454321	0					
ANR	3454443	ArgumentList	parser		3454321	1					
ANR	3454444	Argument	parser		3454321	0					
ANR	3454445	Identifier	parser		3454321	0					
ANR	3454446	Argument	parser -> top - 1		3454321	1					
ANR	3454447	AdditiveExpression	parser -> top - 1		3454321	0		-			
ANR	3454448	PtrMemberAccess	parser -> top		3454321	0					
ANR	3454449	Identifier	parser		3454321	0					
ANR	3454450	Identifier	top		3454321	1					
ANR	3454451	PrimaryExpression	1		3454321	1					
ANR	3454452	IfStatement	if ( numBlends > parser -> stackSize )		3454321	10					
ANR	3454453	Condition	numBlends > parser -> stackSize	945:9:24328:24356	3454321	0	True				
ANR	3454454	RelationalExpression	numBlends > parser -> stackSize		3454321	0		>			
ANR	3454455	Identifier	numBlends		3454321	0					
ANR	3454456	PtrMemberAccess	parser -> stackSize		3454321	1					
ANR	3454457	Identifier	parser		3454321	0					
ANR	3454458	Identifier	stackSize		3454321	1					
ANR	3454459	CompoundStatement		34:4:949:949	3454321	1					
ANR	3454460	ExpressionStatement	"FT_ERROR ( ( ""cff_parse_blend: Invalid number of blends\\n"" ) )"	947:6:24372:24431	3454321	0	True				
ANR	3454461	CallExpression	"FT_ERROR ( ( ""cff_parse_blend: Invalid number of blends\\n"" ) )"		3454321	0					
ANR	3454462	Callee	FT_ERROR		3454321	0					
ANR	3454463	Identifier	FT_ERROR		3454321	0					
ANR	3454464	ArgumentList	"""cff_parse_blend: Invalid number of blends\\n"""		3454321	1					
ANR	3454465	Argument	"""cff_parse_blend: Invalid number of blends\\n"""		3454321	0					
ANR	3454466	PrimaryExpression	"""cff_parse_blend: Invalid number of blends\\n"""		3454321	0					
ANR	3454467	ExpressionStatement	error = FT_THROW ( Invalid_File_Format )	948:6:24439:24478	3454321	1	True				
ANR	3454468	AssignmentExpression	error = FT_THROW ( Invalid_File_Format )		3454321	0		=			
ANR	3454469	Identifier	error		3454321	0					
ANR	3454470	CallExpression	FT_THROW ( Invalid_File_Format )		3454321	1					
ANR	3454471	Callee	FT_THROW		3454321	0					
ANR	3454472	Identifier	FT_THROW		3454321	0					
ANR	3454473	ArgumentList	Invalid_File_Format		3454321	1					
ANR	3454474	Argument	Invalid_File_Format		3454321	0					
ANR	3454475	Identifier	Invalid_File_Format		3454321	0					
ANR	3454476	GotoStatement	goto Exit ;	949:6:24486:24495	3454321	2	True				
ANR	3454477	Identifier	Exit		3454321	0					
ANR	3454478	ExpressionStatement	"FT_TRACE4 ( ( ""   %d value%s blended\\n"" , numBlends , numBlends == 1 ? """" : ""s"" ) )"	952:4:24508:24618	3454321	11	True				
ANR	3454479	CallExpression	"FT_TRACE4 ( ( ""   %d value%s blended\\n"" , numBlends , numBlends == 1 ? """" : ""s"" ) )"		3454321	0					
ANR	3454480	Callee	FT_TRACE4		3454321	0					
ANR	3454481	Identifier	FT_TRACE4		3454321	0					
ANR	3454482	ArgumentList	"""   %d value%s blended\\n"" , numBlends , numBlends == 1 ? """" : ""s"""		3454321	1					
ANR	3454483	Argument	"""   %d value%s blended\\n"" , numBlends , numBlends == 1 ? """" : ""s"""		3454321	0					
ANR	3454484	Expression	"""   %d value%s blended\\n"" , numBlends , numBlends == 1 ? """" : ""s"""		3454321	0					
ANR	3454485	PrimaryExpression	"""   %d value%s blended\\n"""		3454321	0					
ANR	3454486	Expression	"numBlends , numBlends == 1 ? """" : ""s"""		3454321	1					
ANR	3454487	Identifier	numBlends		3454321	0					
ANR	3454488	ConditionalExpression	"numBlends == 1 ? """" : ""s"""		3454321	1					
ANR	3454489	Condition	numBlends == 1		3454321	0					
ANR	3454490	EqualityExpression	numBlends == 1		3454321	0		==			
ANR	3454491	Identifier	numBlends		3454321	0					
ANR	3454492	PrimaryExpression	1		3454321	1					
ANR	3454493	PrimaryExpression	""""""		3454321	1					
ANR	3454494	PrimaryExpression	"""s"""		3454321	2					
ANR	3454495	ExpressionStatement	"error = cff_blend_doBlend ( subFont , parser , numBlends )"	956:4:24625:24680	3454321	12	True				
ANR	3454496	AssignmentExpression	"error = cff_blend_doBlend ( subFont , parser , numBlends )"		3454321	0		=			
ANR	3454497	Identifier	error		3454321	0					
ANR	3454498	CallExpression	"cff_blend_doBlend ( subFont , parser , numBlends )"		3454321	1					
ANR	3454499	Callee	cff_blend_doBlend		3454321	0					
ANR	3454500	Identifier	cff_blend_doBlend		3454321	0					
ANR	3454501	ArgumentList	subFont		3454321	1					
ANR	3454502	Argument	subFont		3454321	0					
ANR	3454503	Identifier	subFont		3454321	0					
ANR	3454504	Argument	parser		3454321	1					
ANR	3454505	Identifier	parser		3454321	0					
ANR	3454506	Argument	numBlends		3454321	2					
ANR	3454507	Identifier	numBlends		3454321	0					
ANR	3454508	ExpressionStatement	blend -> usedBV = TRUE	958:4:24687:24707	3454321	13	True				
ANR	3454509	AssignmentExpression	blend -> usedBV = TRUE		3454321	0		=			
ANR	3454510	PtrMemberAccess	blend -> usedBV		3454321	0					
ANR	3454511	Identifier	blend		3454321	0					
ANR	3454512	Identifier	usedBV		3454321	1					
ANR	3454513	Identifier	TRUE		3454321	1					
ANR	3454514	Label	Exit :	960:2:24712:24716	3454321	14	True				
ANR	3454515	Identifier	Exit		3454321	0					
ANR	3454516	ReturnStatement	return error ;	961:4:24722:24734	3454321	15	True				
ANR	3454517	Identifier	error		3454321	0					
ANR	3454518	ReturnType	static FT_Error		3454321	1					
ANR	3454519	Identifier	cff_parse_blend		3454321	2					
ANR	3454520	ParameterList	CFF_Parser parser		3454321	3					
ANR	3454521	Parameter	CFF_Parser parser	912:19:23391:23408	3454321	0	True				
ANR	3454522	ParameterType	CFF_Parser		3454321	0					
ANR	3454523	Identifier	parser		3454321	1					
ANR	3454524	CFGEntryNode	ENTRY		3454321		True				
ANR	3454525	CFGExitNode	EXIT		3454321		True				
ANR	3454526	Symbol	* subFont		3454321						
ANR	3454527	Symbol	parser -> object		3454321						
ANR	3454528	Symbol	cff_blend_build_vector		3454321						
ANR	3454529	Symbol	blend		3454321						
ANR	3454530	Symbol	* priv		3454321						
ANR	3454531	Symbol	cff_parse_num		3454321						
ANR	3454532	Symbol	error		3454321						
ANR	3454533	Symbol	blend -> usedBV		3454321						
ANR	3454534	Symbol	parser -> top		3454321						
ANR	3454535	Symbol	cff_blend_check_vector		3454321						
ANR	3454536	Symbol	cff_blend_doBlend		3454321						
ANR	3454537	Symbol	priv		3454321						
ANR	3454538	Symbol	parser -> stackSize		3454321						
ANR	3454539	Symbol	subFont -> NDV		3454321						
ANR	3454540	Symbol	* blend		3454321						
ANR	3454541	Symbol	priv -> vsindex		3454321						
ANR	3454542	Symbol	TRUE		3454321						
ANR	3454543	Symbol	FT_THROW		3454321						
ANR	3454544	Symbol	* parser		3454321						
ANR	3454545	Symbol	numBlends		3454321						
ANR	3454546	Symbol	priv -> subfont		3454321						
ANR	3454547	Symbol	parser		3454321						
ANR	3454548	Symbol	subFont		3454321						
ANR	3454549	Symbol	& subFont -> blend		3454321						
ANR	3454550	Symbol	Invalid_File_Format		3454321						
ANR	3454551	Symbol	subFont -> lenNDV		3454321						
ANR	3454552	Function	cff_parse_maxstack	966:2:24815:25488							
ANR	3454553	FunctionDef	cff_parse_maxstack (CFF_Parser parser)		3454552	0					
ANR	3454554	CompoundStatement		968:2:24876:25488	3454552	0					
ANR	3454555	IdentifierDeclStatement	CFF_FontRecDict dict = ( CFF_FontRecDict ) parser -> object ;	970:4:24941:24997	3454552	0	True				
ANR	3454556	IdentifierDecl	dict = ( CFF_FontRecDict ) parser -> object		3454552	0					
ANR	3454557	IdentifierDeclType	CFF_FontRecDict		3454552	0					
ANR	3454558	Identifier	dict		3454552	1					
ANR	3454559	AssignmentExpression	dict = ( CFF_FontRecDict ) parser -> object		3454552	2		=			
ANR	3454560	Identifier	dict		3454552	0					
ANR	3454561	CastExpression	( CFF_FontRecDict ) parser -> object		3454552	1					
ANR	3454562	CastTarget	CFF_FontRecDict		3454552	0					
ANR	3454563	PtrMemberAccess	parser -> object		3454552	1					
ANR	3454564	Identifier	parser		3454552	0					
ANR	3454565	Identifier	object		3454552	1					
ANR	3454566	IdentifierDeclStatement	FT_Byte * * data = parser -> stack ;	971:4:25003:25041	3454552	1	True				
ANR	3454567	IdentifierDecl	* * data = parser -> stack		3454552	0					
ANR	3454568	IdentifierDeclType	FT_Byte * *		3454552	0					
ANR	3454569	Identifier	data		3454552	1					
ANR	3454570	AssignmentExpression	* * data = parser -> stack		3454552	2		=			
ANR	3454571	Identifier	data		3454552	0					
ANR	3454572	PtrMemberAccess	parser -> stack		3454552	1					
ANR	3454573	Identifier	parser		3454552	0					
ANR	3454574	Identifier	stack		3454552	1					
ANR	3454575	IdentifierDeclStatement	FT_Error error = FT_Err_Ok ;	972:4:25047:25081	3454552	2	True				
ANR	3454576	IdentifierDecl	error = FT_Err_Ok		3454552	0					
ANR	3454577	IdentifierDeclType	FT_Error		3454552	0					
ANR	3454578	Identifier	error		3454552	1					
ANR	3454579	AssignmentExpression	error = FT_Err_Ok		3454552	2		=			
ANR	3454580	Identifier	FT_Err_Ok		3454552	0					
ANR	3454581	Identifier	FT_Err_Ok		3454552	1					
ANR	3454582	IfStatement	if ( ! dict )		3454552	3					
ANR	3454583	Condition	! dict	975:9:25094:25098	3454552	0	True				
ANR	3454584	UnaryOperationExpression	! dict		3454552	0					
ANR	3454585	UnaryOperator	!		3454552	0					
ANR	3454586	Identifier	dict		3454552	1					
ANR	3454587	CompoundStatement		9:4:229:229	3454552	1					
ANR	3454588	ExpressionStatement	error = FT_THROW ( Invalid_File_Format )	977:6:25114:25153	3454552	0	True				
ANR	3454589	AssignmentExpression	error = FT_THROW ( Invalid_File_Format )		3454552	0		=			
ANR	3454590	Identifier	error		3454552	0					
ANR	3454591	CallExpression	FT_THROW ( Invalid_File_Format )		3454552	1					
ANR	3454592	Callee	FT_THROW		3454552	0					
ANR	3454593	Identifier	FT_THROW		3454552	0					
ANR	3454594	ArgumentList	Invalid_File_Format		3454552	1					
ANR	3454595	Argument	Invalid_File_Format		3454552	0					
ANR	3454596	Identifier	Invalid_File_Format		3454552	0					
ANR	3454597	GotoStatement	goto Exit ;	978:6:25161:25170	3454552	1	True				
ANR	3454598	Identifier	Exit		3454552	0					
ANR	3454599	ExpressionStatement	"dict -> maxstack = ( FT_UInt ) cff_parse_num ( parser , data ++ )"	981:4:25183:25240	3454552	4	True				
ANR	3454600	AssignmentExpression	"dict -> maxstack = ( FT_UInt ) cff_parse_num ( parser , data ++ )"		3454552	0		=			
ANR	3454601	PtrMemberAccess	dict -> maxstack		3454552	0					
ANR	3454602	Identifier	dict		3454552	0					
ANR	3454603	Identifier	maxstack		3454552	1					
ANR	3454604	CastExpression	"( FT_UInt ) cff_parse_num ( parser , data ++ )"		3454552	1					
ANR	3454605	CastTarget	FT_UInt		3454552	0					
ANR	3454606	CallExpression	"cff_parse_num ( parser , data ++ )"		3454552	1					
ANR	3454607	Callee	cff_parse_num		3454552	0					
ANR	3454608	Identifier	cff_parse_num		3454552	0					
ANR	3454609	ArgumentList	parser		3454552	1					
ANR	3454610	Argument	parser		3454552	0					
ANR	3454611	Identifier	parser		3454552	0					
ANR	3454612	Argument	data ++		3454552	1					
ANR	3454613	PostIncDecOperationExpression	data ++		3454552	0					
ANR	3454614	Identifier	data		3454552	0					
ANR	3454615	IncDec	++		3454552	1					
ANR	3454616	IfStatement	if ( dict -> maxstack > CFF2_MAX_STACK )		3454552	5					
ANR	3454617	Condition	dict -> maxstack > CFF2_MAX_STACK	982:9:25251:25281	3454552	0	True				
ANR	3454618	RelationalExpression	dict -> maxstack > CFF2_MAX_STACK		3454552	0		>			
ANR	3454619	PtrMemberAccess	dict -> maxstack		3454552	0					
ANR	3454620	Identifier	dict		3454552	0					
ANR	3454621	Identifier	maxstack		3454552	1					
ANR	3454622	Identifier	CFF2_MAX_STACK		3454552	1					
ANR	3454623	ExpressionStatement	dict -> maxstack = CFF2_MAX_STACK	983:6:25291:25322	3454552	1	True				
ANR	3454624	AssignmentExpression	dict -> maxstack = CFF2_MAX_STACK		3454552	0		=			
ANR	3454625	PtrMemberAccess	dict -> maxstack		3454552	0					
ANR	3454626	Identifier	dict		3454552	0					
ANR	3454627	Identifier	maxstack		3454552	1					
ANR	3454628	Identifier	CFF2_MAX_STACK		3454552	1					
ANR	3454629	IfStatement	if ( dict -> maxstack < CFF2_DEFAULT_STACK )		3454552	6					
ANR	3454630	Condition	dict -> maxstack < CFF2_DEFAULT_STACK	984:9:25333:25367	3454552	0	True				
ANR	3454631	RelationalExpression	dict -> maxstack < CFF2_DEFAULT_STACK		3454552	0		<			
ANR	3454632	PtrMemberAccess	dict -> maxstack		3454552	0					
ANR	3454633	Identifier	dict		3454552	0					
ANR	3454634	Identifier	maxstack		3454552	1					
ANR	3454635	Identifier	CFF2_DEFAULT_STACK		3454552	1					
ANR	3454636	ExpressionStatement	dict -> maxstack = CFF2_DEFAULT_STACK	985:6:25377:25412	3454552	1	True				
ANR	3454637	AssignmentExpression	dict -> maxstack = CFF2_DEFAULT_STACK		3454552	0		=			
ANR	3454638	PtrMemberAccess	dict -> maxstack		3454552	0					
ANR	3454639	Identifier	dict		3454552	0					
ANR	3454640	Identifier	maxstack		3454552	1					
ANR	3454641	Identifier	CFF2_DEFAULT_STACK		3454552	1					
ANR	3454642	ExpressionStatement	"FT_TRACE4 ( ( "" %d\\n"" , dict -> maxstack ) )"	987:4:25419:25457	3454552	7	True				
ANR	3454643	CallExpression	"FT_TRACE4 ( ( "" %d\\n"" , dict -> maxstack ) )"		3454552	0					
ANR	3454644	Callee	FT_TRACE4		3454552	0					
ANR	3454645	Identifier	FT_TRACE4		3454552	0					
ANR	3454646	ArgumentList	""" %d\\n"" , dict -> maxstack"		3454552	1					
ANR	3454647	Argument	""" %d\\n"" , dict -> maxstack"		3454552	0					
ANR	3454648	Expression	""" %d\\n"" , dict -> maxstack"		3454552	0					
ANR	3454649	PrimaryExpression	""" %d\\n"""		3454552	0					
ANR	3454650	PtrMemberAccess	dict -> maxstack		3454552	1					
ANR	3454651	Identifier	dict		3454552	0					
ANR	3454652	Identifier	maxstack		3454552	1					
ANR	3454653	Label	Exit :	989:2:25462:25466	3454552	8	True				
ANR	3454654	Identifier	Exit		3454552	0					
ANR	3454655	ReturnStatement	return error ;	990:4:25472:25484	3454552	9	True				
ANR	3454656	Identifier	error		3454552	0					
ANR	3454657	ReturnType	static FT_Error		3454552	1					
ANR	3454658	Identifier	cff_parse_maxstack		3454552	2					
ANR	3454659	ParameterList	CFF_Parser parser		3454552	3					
ANR	3454660	Parameter	CFF_Parser parser	967:22:24853:24870	3454552	0	True				
ANR	3454661	ParameterType	CFF_Parser		3454552	0					
ANR	3454662	Identifier	parser		3454552	1					
ANR	3454663	CFGEntryNode	ENTRY		3454552		True				
ANR	3454664	CFGExitNode	EXIT		3454552		True				
ANR	3454665	Symbol	dict -> maxstack		3454552						
ANR	3454666	Symbol	data		3454552						
ANR	3454667	Symbol	FT_Err_Ok		3454552						
ANR	3454668	Symbol	CFF2_MAX_STACK		3454552						
ANR	3454669	Symbol	parser -> object		3454552						
ANR	3454670	Symbol	CFF2_DEFAULT_STACK		3454552						
ANR	3454671	Symbol	cff_parse_num		3454552						
ANR	3454672	Symbol	error		3454552						
ANR	3454673	Symbol	FT_THROW		3454552						
ANR	3454674	Symbol	* parser		3454552						
ANR	3454675	Symbol	* dict		3454552						
ANR	3454676	Symbol	parser		3454552						
ANR	3454677	Symbol	dict		3454552						
ANR	3454678	Symbol	parser -> stack		3454552						
ANR	3454679	Symbol	Invalid_File_Format		3454552						
ANR	3454680	DeclStmt									
ANR	3454681	Decl							const CFF_Field_Handler	const CFF_Field_Handler [ ]	cff_field_handlers
ANR	3454682	DeclStmt									
ANR	3454683	Decl							const CFF_Field_Handler	const CFF_Field_Handler [ ]	cff_field_handlers
ANR	3454684	Function	FT_Destroy_Class_cff_field_handlers	1124:2:29494:29724							
ANR	3454685	FunctionDef	"FT_Destroy_Class_cff_field_handlers (FT_Library library , CFF_Field_Handler * clazz)"		3454684	0					
ANR	3454686	CompoundStatement		1127:2:29636:29724	3454684	0					
ANR	3454687	IdentifierDeclStatement	FT_Memory memory = library -> memory ;	1128:4:29642:29677	3454684	0	True				
ANR	3454688	IdentifierDecl	memory = library -> memory		3454684	0					
ANR	3454689	IdentifierDeclType	FT_Memory		3454684	0					
ANR	3454690	Identifier	memory		3454684	1					
ANR	3454691	AssignmentExpression	memory = library -> memory		3454684	2		=			
ANR	3454692	Identifier	memory		3454684	0					
ANR	3454693	PtrMemberAccess	library -> memory		3454684	1					
ANR	3454694	Identifier	library		3454684	0					
ANR	3454695	Identifier	memory		3454684	1					
ANR	3454696	IfStatement	if ( clazz )		3454684	1					
ANR	3454697	Condition	clazz	1131:9:29690:29694	3454684	0	True				
ANR	3454698	Identifier	clazz		3454684	0					
ANR	3454699	ExpressionStatement	FT_FREE ( clazz )	1132:6:29704:29720	3454684	1	True				
ANR	3454700	CallExpression	FT_FREE ( clazz )		3454684	0					
ANR	3454701	Callee	FT_FREE		3454684	0					
ANR	3454702	Identifier	FT_FREE		3454684	0					
ANR	3454703	ArgumentList	clazz		3454684	1					
ANR	3454704	Argument	clazz		3454684	0					
ANR	3454705	Identifier	clazz		3454684	0					
ANR	3454706	ReturnType	void		3454684	1					
ANR	3454707	Identifier	FT_Destroy_Class_cff_field_handlers		3454684	2					
ANR	3454708	ParameterList	"FT_Library library , CFF_Field_Handler * clazz"		3454684	3					
ANR	3454709	Parameter	FT_Library library	1125:39:29538:29564	3454684	0	True				
ANR	3454710	ParameterType	FT_Library		3454684	0					
ANR	3454711	Identifier	library		3454684	1					
ANR	3454712	Parameter	CFF_Field_Handler * clazz	1126:39:29606:29630	3454684	1	True				
ANR	3454713	ParameterType	CFF_Field_Handler *		3454684	0					
ANR	3454714	Identifier	clazz		3454684	1					
ANR	3454715	CFGEntryNode	ENTRY		3454684		True				
ANR	3454716	CFGExitNode	EXIT		3454684		True				
ANR	3454717	Symbol	* library		3454684						
ANR	3454718	Symbol	library		3454684						
ANR	3454719	Symbol	memory		3454684						
ANR	3454720	Symbol	library -> memory		3454684						
ANR	3454721	Symbol	clazz		3454684						
ANR	3454722	Function	FT_Create_Class_cff_field_handlers	1136:2:29730:35653							
ANR	3454723	FunctionDef	"FT_Create_Class_cff_field_handlers (FT_Library library , CFF_Field_Handler * * output_class)"		3454722	0					
ANR	3454724	CompoundStatement		1139:2:29883:35653	3454722	0					
ANR	3454725	IdentifierDeclStatement	CFF_Field_Handler * clazz = NULL ;	1140:4:29889:29922	3454722	0	True				
ANR	3454726	IdentifierDecl	* clazz = NULL		3454722	0					
ANR	3454727	IdentifierDeclType	CFF_Field_Handler *		3454722	0					
ANR	3454728	Identifier	clazz		3454722	1					
ANR	3454729	AssignmentExpression	* clazz = NULL		3454722	2		=			
ANR	3454730	Identifier	NULL		3454722	0					
ANR	3454731	Identifier	NULL		3454722	1					
ANR	3454732	IdentifierDeclStatement	FT_Error error ;	1141:4:29928:29953	3454722	1	True				
ANR	3454733	IdentifierDecl	error		3454722	0					
ANR	3454734	IdentifierDeclType	FT_Error		3454722	0					
ANR	3454735	Identifier	error		3454722	1					
ANR	3454736	IdentifierDeclStatement	FT_Memory memory = library -> memory ;	1142:4:29959:30003	3454722	2	True				
ANR	3454737	IdentifierDecl	memory = library -> memory		3454722	0					
ANR	3454738	IdentifierDeclType	FT_Memory		3454722	0					
ANR	3454739	Identifier	memory		3454722	1					
ANR	3454740	AssignmentExpression	memory = library -> memory		3454722	2		=			
ANR	3454741	Identifier	memory		3454722	0					
ANR	3454742	PtrMemberAccess	library -> memory		3454722	1					
ANR	3454743	Identifier	library		3454722	0					
ANR	3454744	Identifier	memory		3454722	1					
ANR	3454745	IdentifierDeclStatement	int i = 0 ;	1144:4:30010:30020	3454722	3	True				
ANR	3454746	IdentifierDecl	i = 0		3454722	0					
ANR	3454747	IdentifierDeclType	int		3454722	0					
ANR	3454748	Identifier	i		3454722	1					
ANR	3454749	AssignmentExpression	i = 0		3454722	2		=			
ANR	3454750	Identifier	i		3454722	0					
ANR	3454751	PrimaryExpression	0		3454722	1					
ANR	3454752	Statement	undef	1147:1:30025:30029	3454722	4	True				
ANR	3454753	Statement	CFF_FIELD	1147:7:30031:30039	3454722	5	True				
ANR	3454754	Statement	define	1148:1:30042:30047	3454722	6	True				
ANR	3454755	Statement	CFF_FIELD	1148:8:30049:30057	3454722	7	True				
ANR	3454756	Statement	(	1148:17:30058:30058	3454722	8	True				
ANR	3454757	Statement	code	1148:19:30060:30063	3454722	9	True				
ANR	3454758	Statement	","	1148:23:30064:30064	3454722	10	True				
ANR	3454759	Statement	name	1148:25:30066:30069	3454722	11	True				
ANR	3454760	Statement	","	1148:29:30070:30070	3454722	12	True				
ANR	3454761	Statement	id	1148:31:30072:30073	3454722	13	True				
ANR	3454762	Statement	","	1148:33:30074:30074	3454722	14	True				
ANR	3454763	Statement	kind	1148:35:30076:30079	3454722	15	True				
ANR	3454764	Statement	)	1148:40:30081:30081	3454722	16	True				
ANR	3454765	ExpressionStatement	i ++	1148:42:30083:30086	3454722	17	True				
ANR	3454766	PostIncDecOperationExpression	i ++		3454722	0					
ANR	3454767	Identifier	i		3454722	0					
ANR	3454768	IncDec	++		3454722	1					
ANR	3454769	Statement	undef	1149:1:30089:30093	3454722	18	True				
ANR	3454770	Statement	CFF_FIELD_DELTA	1149:7:30095:30109	3454722	19	True				
ANR	3454771	Statement	define	1150:1:30112:30117	3454722	20	True				
ANR	3454772	Statement	CFF_FIELD_DELTA	1150:8:30119:30133	3454722	21	True				
ANR	3454773	Statement	(	1150:23:30134:30134	3454722	22	True				
ANR	3454774	Statement	code	1150:25:30136:30139	3454722	23	True				
ANR	3454775	Statement	","	1150:29:30140:30140	3454722	24	True				
ANR	3454776	Statement	name	1150:31:30142:30145	3454722	25	True				
ANR	3454777	Statement	","	1150:35:30146:30146	3454722	26	True				
ANR	3454778	Statement	max	1150:37:30148:30150	3454722	27	True				
ANR	3454779	Statement	","	1150:40:30151:30151	3454722	28	True				
ANR	3454780	Statement	id	1150:42:30153:30154	3454722	29	True				
ANR	3454781	Statement	)	1150:45:30156:30156	3454722	30	True				
ANR	3454782	ExpressionStatement	i ++	1150:47:30158:30161	3454722	31	True				
ANR	3454783	PostIncDecOperationExpression	i ++		3454722	0					
ANR	3454784	Identifier	i		3454722	0					
ANR	3454785	IncDec	++		3454722	1					
ANR	3454786	Statement	undef	1151:1:30164:30168	3454722	32	True				
ANR	3454787	Statement	CFF_FIELD_CALLBACK	1151:7:30170:30187	3454722	33	True				
ANR	3454788	Statement	define	1152:1:30190:30195	3454722	34	True				
ANR	3454789	Statement	CFF_FIELD_CALLBACK	1152:8:30197:30214	3454722	35	True				
ANR	3454790	Statement	(	1152:26:30215:30215	3454722	36	True				
ANR	3454791	Statement	code	1152:28:30217:30220	3454722	37	True				
ANR	3454792	Statement	","	1152:32:30221:30221	3454722	38	True				
ANR	3454793	Statement	name	1152:34:30223:30226	3454722	39	True				
ANR	3454794	Statement	","	1152:38:30227:30227	3454722	40	True				
ANR	3454795	Statement	id	1152:40:30229:30230	3454722	41	True				
ANR	3454796	Statement	)	1152:43:30232:30232	3454722	42	True				
ANR	3454797	ExpressionStatement	i ++	1152:45:30234:30237	3454722	43	True				
ANR	3454798	PostIncDecOperationExpression	i ++		3454722	0					
ANR	3454799	Identifier	i		3454722	0					
ANR	3454800	IncDec	++		3454722	1					
ANR	3454801	Statement	undef	1153:1:30240:30244	3454722	44	True				
ANR	3454802	Statement	CFF_FIELD_BLEND	1153:7:30246:30260	3454722	45	True				
ANR	3454803	Statement	define	1154:1:30263:30268	3454722	46	True				
ANR	3454804	Statement	CFF_FIELD_BLEND	1154:8:30270:30284	3454722	47	True				
ANR	3454805	Statement	(	1154:23:30285:30285	3454722	48	True				
ANR	3454806	Statement	code	1154:25:30287:30290	3454722	49	True				
ANR	3454807	Statement	","	1154:29:30291:30291	3454722	50	True				
ANR	3454808	Statement	id	1154:31:30293:30294	3454722	51	True				
ANR	3454809	Statement	)	1154:34:30296:30296	3454722	52	True				
ANR	3454810	ExpressionStatement	i ++	1154:36:30298:30301	3454722	53	True				
ANR	3454811	PostIncDecOperationExpression	i ++		3454722	0					
ANR	3454812	Identifier	i		3454722	0					
ANR	3454813	IncDec	++		3454722	1					
ANR	3454814	Statement	include	1156:1:30305:30311	3454722	54	True				
ANR	3454815	Statement	"""cfftoken.h"""	1156:9:30313:30324	3454722	55	True				
ANR	3454816	ExpressionStatement	i ++	1158:4:30331:30334	3454722	56	True				
ANR	3454817	PostIncDecOperationExpression	i ++		3454722	0					
ANR	3454818	Identifier	i		3454722	0					
ANR	3454819	IncDec	++		3454722	1					
ANR	3454820	IfStatement	"if ( FT_ALLOC ( clazz , sizeof ( CFF_Field_Handler ) * i ) )"		3454722	57					
ANR	3454821	Condition	"FT_ALLOC ( clazz , sizeof ( CFF_Field_Handler ) * i )"	1160:9:30376:30426	3454722	0	True				
ANR	3454822	CallExpression	"FT_ALLOC ( clazz , sizeof ( CFF_Field_Handler ) * i )"		3454722	0					
ANR	3454823	Callee	FT_ALLOC		3454722	0					
ANR	3454824	Identifier	FT_ALLOC		3454722	0					
ANR	3454825	ArgumentList	clazz		3454722	1					
ANR	3454826	Argument	clazz		3454722	0					
ANR	3454827	Identifier	clazz		3454722	0					
ANR	3454828	Argument	sizeof ( CFF_Field_Handler ) * i		3454722	1					
ANR	3454829	MultiplicativeExpression	sizeof ( CFF_Field_Handler ) * i		3454722	0		*			
ANR	3454830	SizeofExpression	sizeof ( CFF_Field_Handler )		3454722	0					
ANR	3454831	Sizeof	sizeof		3454722	0					
ANR	3454832	SizeofOperand	CFF_Field_Handler		3454722	1					
ANR	3454833	Identifier	i		3454722	1					
ANR	3454834	ReturnStatement	return error ;	1161:6:30436:30448	3454722	1	True				
ANR	3454835	Identifier	error		3454722	0					
ANR	3454836	ExpressionStatement	i = 0	1163:4:30455:30460	3454722	58	True				
ANR	3454837	AssignmentExpression	i = 0		3454722	0		=			
ANR	3454838	Identifier	i		3454722	0					
ANR	3454839	PrimaryExpression	0		3454722	1					
ANR	3454840	Statement	undef	1169:1:30496:30500	3454722	59	True				
ANR	3454841	Statement	CFF_FIELD_CALLBACK	1169:7:30502:30519	3454722	60	True				
ANR	3454842	Statement	define	1170:1:30522:30527	3454722	61	True				
ANR	3454843	Statement	CFF_FIELD_CALLBACK	1170:8:30529:30546	3454722	62	True				
ANR	3454844	Statement	(	1170:26:30547:30547	3454722	63	True				
ANR	3454845	Statement	code_	1170:28:30549:30553	3454722	64	True				
ANR	3454846	Statement	","	1170:33:30554:30554	3454722	65	True				
ANR	3454847	Statement	name_	1170:35:30556:30560	3454722	66	True				
ANR	3454848	Statement	","	1170:40:30561:30561	3454722	67	True				
ANR	3454849	Statement	id_	1170:42:30563:30565	3454722	68	True				
ANR	3454850	Statement	)	1170:46:30567:30567	3454722	69	True				
ANR	3454851	ExpressionStatement	clazz [ i ] . kind = cff_kind_callback	1171:10:30588:30629	3454722	70	True				
ANR	3454852	AssignmentExpression	clazz [ i ] . kind = cff_kind_callback		3454722	0		=			
ANR	3454853	MemberAccess	clazz [ i ] . kind		3454722	0					
ANR	3454854	ArrayIndexing	clazz [ i ]		3454722	0					
ANR	3454855	Identifier	clazz		3454722	0					
ANR	3454856	Identifier	i		3454722	1					
ANR	3454857	Identifier	kind		3454722	1					
ANR	3454858	Identifier	cff_kind_callback		3454722	1					
ANR	3454859	ExpressionStatement	clazz [ i ] . code = code_ | CFFCODE	1172:10:30645:30684	3454722	71	True				
ANR	3454860	AssignmentExpression	clazz [ i ] . code = code_ | CFFCODE		3454722	0		=			
ANR	3454861	MemberAccess	clazz [ i ] . code		3454722	0					
ANR	3454862	ArrayIndexing	clazz [ i ]		3454722	0					
ANR	3454863	Identifier	clazz		3454722	0					
ANR	3454864	Identifier	i		3454722	1					
ANR	3454865	Identifier	code		3454722	1					
ANR	3454866	InclusiveOrExpression	code_ | CFFCODE		3454722	1		|			
ANR	3454867	Identifier	code_		3454722	0					
ANR	3454868	Identifier	CFFCODE		3454722	1					
ANR	3454869	ExpressionStatement	clazz [ i ] . offset = 0	1173:10:30702:30727	3454722	72	True				
ANR	3454870	AssignmentExpression	clazz [ i ] . offset = 0		3454722	0		=			
ANR	3454871	MemberAccess	clazz [ i ] . offset		3454722	0					
ANR	3454872	ArrayIndexing	clazz [ i ]		3454722	0					
ANR	3454873	Identifier	clazz		3454722	0					
ANR	3454874	Identifier	i		3454722	1					
ANR	3454875	Identifier	offset		3454722	1					
ANR	3454876	PrimaryExpression	0		3454722	1					
ANR	3454877	ExpressionStatement	clazz [ i ] . size = 0	1174:10:30759:30784	3454722	73	True				
ANR	3454878	AssignmentExpression	clazz [ i ] . size = 0		3454722	0		=			
ANR	3454879	MemberAccess	clazz [ i ] . size		3454722	0					
ANR	3454880	ArrayIndexing	clazz [ i ]		3454722	0					
ANR	3454881	Identifier	clazz		3454722	0					
ANR	3454882	Identifier	i		3454722	1					
ANR	3454883	Identifier	size		3454722	1					
ANR	3454884	PrimaryExpression	0		3454722	1					
ANR	3454885	Statement	clazz	1175:10:30816:30820	3454722	74	True				
ANR	3454886	Statement	[	1175:15:30821:30821	3454722	75	True				
ANR	3454887	Statement	i	1175:16:30822:30822	3454722	76	True				
ANR	3454888	Statement	]	1175:17:30823:30823	3454722	77	True				
ANR	3454889	Statement	.	1175:18:30824:30824	3454722	78	True				
ANR	3454890	Statement	reader	1175:19:30825:30830	3454722	79	True				
ANR	3454891	Statement	=	1175:32:30838:30838	3454722	80	True				
ANR	3454892	IdentifierDeclStatement	cff_parse_ name_ ;	1175:34:30840:30859	3454722	81	True				
ANR	3454893	IdentifierDecl	name_		3454722	0					
ANR	3454894	IdentifierDeclType	cff_parse_		3454722	0					
ANR	3454895	Identifier	name_		3454722	1					
ANR	3454896	ExpressionStatement	clazz [ i ] . array_max = 0	1176:10:30873:30898	3454722	82	True				
ANR	3454897	AssignmentExpression	clazz [ i ] . array_max = 0		3454722	0		=			
ANR	3454898	MemberAccess	clazz [ i ] . array_max		3454722	0					
ANR	3454899	ArrayIndexing	clazz [ i ]		3454722	0					
ANR	3454900	Identifier	clazz		3454722	0					
ANR	3454901	Identifier	i		3454722	1					
ANR	3454902	Identifier	array_max		3454722	1					
ANR	3454903	PrimaryExpression	0		3454722	1					
ANR	3454904	ExpressionStatement	clazz [ i ] . count_offset = 0	1177:10:30930:30955	3454722	83	True				
ANR	3454905	AssignmentExpression	clazz [ i ] . count_offset = 0		3454722	0		=			
ANR	3454906	MemberAccess	clazz [ i ] . count_offset		3454722	0					
ANR	3454907	ArrayIndexing	clazz [ i ]		3454722	0					
ANR	3454908	Identifier	clazz		3454722	0					
ANR	3454909	Identifier	i		3454722	1					
ANR	3454910	Identifier	count_offset		3454722	1					
ANR	3454911	PrimaryExpression	0		3454722	1					
ANR	3454912	ExpressionStatement	i ++	1178:10:30987:30990	3454722	84	True				
ANR	3454913	PostIncDecOperationExpression	i ++		3454722	0					
ANR	3454914	Identifier	i		3454722	0					
ANR	3454915	IncDec	++		3454722	1					
ANR	3454916	Statement	undef	1180:1:30994:30998	3454722	85	True				
ANR	3454917	Statement	CFF_FIELD	1180:8:31001:31009	3454722	86	True				
ANR	3454918	Statement	define	1181:1:31012:31017	3454722	87	True				
ANR	3454919	Statement	CFF_FIELD	1181:8:31019:31027	3454722	88	True				
ANR	3454920	Statement	(	1181:17:31028:31028	3454722	89	True				
ANR	3454921	Statement	code_	1181:19:31030:31034	3454722	90	True				
ANR	3454922	Statement	","	1181:24:31035:31035	3454722	91	True				
ANR	3454923	Statement	name_	1181:26:31037:31041	3454722	92	True				
ANR	3454924	Statement	","	1181:31:31042:31042	3454722	93	True				
ANR	3454925	Statement	id_	1181:33:31044:31046	3454722	94	True				
ANR	3454926	Statement	","	1181:36:31047:31047	3454722	95	True				
ANR	3454927	Statement	kind_	1181:38:31049:31053	3454722	96	True				
ANR	3454928	Statement	)	1181:44:31055:31055	3454722	97	True				
ANR	3454929	ExpressionStatement	clazz [ i ] . kind = kind_	1182:10:31083:31112	3454722	98	True				
ANR	3454930	AssignmentExpression	clazz [ i ] . kind = kind_		3454722	0		=			
ANR	3454931	MemberAccess	clazz [ i ] . kind		3454722	0					
ANR	3454932	ArrayIndexing	clazz [ i ]		3454722	0					
ANR	3454933	Identifier	clazz		3454722	0					
ANR	3454934	Identifier	i		3454722	1					
ANR	3454935	Identifier	kind		3454722	1					
ANR	3454936	Identifier	kind_		3454722	1					
ANR	3454937	ExpressionStatement	clazz [ i ] . code = code_ | CFFCODE	1183:10:31145:31184	3454722	99	True				
ANR	3454938	AssignmentExpression	clazz [ i ] . code = code_ | CFFCODE		3454722	0		=			
ANR	3454939	MemberAccess	clazz [ i ] . code		3454722	0					
ANR	3454940	ArrayIndexing	clazz [ i ]		3454722	0					
ANR	3454941	Identifier	clazz		3454722	0					
ANR	3454942	Identifier	i		3454722	1					
ANR	3454943	Identifier	code		3454722	1					
ANR	3454944	InclusiveOrExpression	code_ | CFFCODE		3454722	1		|			
ANR	3454945	Identifier	code_		3454722	0					
ANR	3454946	Identifier	CFFCODE		3454722	1					
ANR	3454947	ExpressionStatement	clazz [ i ] . offset = FT_FIELD_OFFSET ( name_ )	1184:10:31207:31255	3454722	100	True				
ANR	3454948	AssignmentExpression	clazz [ i ] . offset = FT_FIELD_OFFSET ( name_ )		3454722	0		=			
ANR	3454949	MemberAccess	clazz [ i ] . offset		3454722	0					
ANR	3454950	ArrayIndexing	clazz [ i ]		3454722	0					
ANR	3454951	Identifier	clazz		3454722	0					
ANR	3454952	Identifier	i		3454722	1					
ANR	3454953	Identifier	offset		3454722	1					
ANR	3454954	CallExpression	FT_FIELD_OFFSET ( name_ )		3454722	1					
ANR	3454955	Callee	FT_FIELD_OFFSET		3454722	0					
ANR	3454956	Identifier	FT_FIELD_OFFSET		3454722	0					
ANR	3454957	ArgumentList	name_		3454722	1					
ANR	3454958	Argument	name_		3454722	0					
ANR	3454959	Identifier	name_		3454722	0					
ANR	3454960	ExpressionStatement	clazz [ i ] . size = FT_FIELD_SIZE ( name_ )	1185:10:31269:31315	3454722	101	True				
ANR	3454961	AssignmentExpression	clazz [ i ] . size = FT_FIELD_SIZE ( name_ )		3454722	0		=			
ANR	3454962	MemberAccess	clazz [ i ] . size		3454722	0					
ANR	3454963	ArrayIndexing	clazz [ i ]		3454722	0					
ANR	3454964	Identifier	clazz		3454722	0					
ANR	3454965	Identifier	i		3454722	1					
ANR	3454966	Identifier	size		3454722	1					
ANR	3454967	CallExpression	FT_FIELD_SIZE ( name_ )		3454722	1					
ANR	3454968	Callee	FT_FIELD_SIZE		3454722	0					
ANR	3454969	Identifier	FT_FIELD_SIZE		3454722	0					
ANR	3454970	ArgumentList	name_		3454722	1					
ANR	3454971	Argument	name_		3454722	0					
ANR	3454972	Identifier	name_		3454722	0					
ANR	3454973	ExpressionStatement	clazz [ i ] . reader = 0	1186:10:31331:31356	3454722	102	True				
ANR	3454974	AssignmentExpression	clazz [ i ] . reader = 0		3454722	0		=			
ANR	3454975	MemberAccess	clazz [ i ] . reader		3454722	0					
ANR	3454976	ArrayIndexing	clazz [ i ]		3454722	0					
ANR	3454977	Identifier	clazz		3454722	0					
ANR	3454978	Identifier	i		3454722	1					
ANR	3454979	Identifier	reader		3454722	1					
ANR	3454980	PrimaryExpression	0		3454722	1					
ANR	3454981	ExpressionStatement	clazz [ i ] . array_max = 0	1187:10:31393:31418	3454722	103	True				
ANR	3454982	AssignmentExpression	clazz [ i ] . array_max = 0		3454722	0		=			
ANR	3454983	MemberAccess	clazz [ i ] . array_max		3454722	0					
ANR	3454984	ArrayIndexing	clazz [ i ]		3454722	0					
ANR	3454985	Identifier	clazz		3454722	0					
ANR	3454986	Identifier	i		3454722	1					
ANR	3454987	Identifier	array_max		3454722	1					
ANR	3454988	PrimaryExpression	0		3454722	1					
ANR	3454989	ExpressionStatement	clazz [ i ] . count_offset = 0	1188:10:31455:31480	3454722	104	True				
ANR	3454990	AssignmentExpression	clazz [ i ] . count_offset = 0		3454722	0		=			
ANR	3454991	MemberAccess	clazz [ i ] . count_offset		3454722	0					
ANR	3454992	ArrayIndexing	clazz [ i ]		3454722	0					
ANR	3454993	Identifier	clazz		3454722	0					
ANR	3454994	Identifier	i		3454722	1					
ANR	3454995	Identifier	count_offset		3454722	1					
ANR	3454996	PrimaryExpression	0		3454722	1					
ANR	3454997	ExpressionStatement	i ++	1189:10:31517:31520	3454722	105	True				
ANR	3454998	PostIncDecOperationExpression	i ++		3454722	0					
ANR	3454999	Identifier	i		3454722	0					
ANR	3455000	IncDec	++		3454722	1					
ANR	3455001	Statement	undef	1191:1:31571:31575	3454722	106	True				
ANR	3455002	Statement	CFF_FIELD_DELTA	1191:8:31578:31592	3454722	107	True				
ANR	3455003	Statement	define	1192:1:31595:31600	3454722	108	True				
ANR	3455004	Statement	CFF_FIELD_DELTA	1192:8:31602:31616	3454722	109	True				
ANR	3455005	Statement	(	1192:23:31617:31617	3454722	110	True				
ANR	3455006	Statement	code_	1192:25:31619:31623	3454722	111	True				
ANR	3455007	Statement	","	1192:30:31624:31624	3454722	112	True				
ANR	3455008	Statement	name_	1192:32:31626:31630	3454722	113	True				
ANR	3455009	Statement	","	1192:37:31631:31631	3454722	114	True				
ANR	3455010	Statement	max_	1192:39:31633:31636	3454722	115	True				
ANR	3455011	Statement	","	1192:43:31637:31637	3454722	116	True				
ANR	3455012	Statement	id_	1192:45:31639:31641	3454722	117	True				
ANR	3455013	Statement	)	1192:49:31643:31643	3454722	118	True				
ANR	3455014	ExpressionStatement	clazz [ i ] . kind = cff_kind_delta	1193:10:31674:31712	3454722	119	True				
ANR	3455015	AssignmentExpression	clazz [ i ] . kind = cff_kind_delta		3454722	0		=			
ANR	3455016	MemberAccess	clazz [ i ] . kind		3454722	0					
ANR	3455017	ArrayIndexing	clazz [ i ]		3454722	0					
ANR	3455018	Identifier	clazz		3454722	0					
ANR	3455019	Identifier	i		3454722	1					
ANR	3455020	Identifier	kind		3454722	1					
ANR	3455021	Identifier	cff_kind_delta		3454722	1					
ANR	3455022	ExpressionStatement	clazz [ i ] . code = code_ | CFFCODE	1194:10:31744:31783	3454722	120	True				
ANR	3455023	AssignmentExpression	clazz [ i ] . code = code_ | CFFCODE		3454722	0		=			
ANR	3455024	MemberAccess	clazz [ i ] . code		3454722	0					
ANR	3455025	ArrayIndexing	clazz [ i ]		3454722	0					
ANR	3455026	Identifier	clazz		3454722	0					
ANR	3455027	Identifier	i		3454722	1					
ANR	3455028	Identifier	code		3454722	1					
ANR	3455029	InclusiveOrExpression	code_ | CFFCODE		3454722	1		|			
ANR	3455030	Identifier	code_		3454722	0					
ANR	3455031	Identifier	CFFCODE		3454722	1					
ANR	3455032	ExpressionStatement	clazz [ i ] . offset = FT_FIELD_OFFSET ( name_ )	1195:10:31814:31862	3454722	121	True				
ANR	3455033	AssignmentExpression	clazz [ i ] . offset = FT_FIELD_OFFSET ( name_ )		3454722	0		=			
ANR	3455034	MemberAccess	clazz [ i ] . offset		3454722	0					
ANR	3455035	ArrayIndexing	clazz [ i ]		3454722	0					
ANR	3455036	Identifier	clazz		3454722	0					
ANR	3455037	Identifier	i		3454722	1					
ANR	3455038	Identifier	offset		3454722	1					
ANR	3455039	CallExpression	FT_FIELD_OFFSET ( name_ )		3454722	1					
ANR	3455040	Callee	FT_FIELD_OFFSET		3454722	0					
ANR	3455041	Identifier	FT_FIELD_OFFSET		3454722	0					
ANR	3455042	ArgumentList	name_		3454722	1					
ANR	3455043	Argument	name_		3454722	0					
ANR	3455044	Identifier	name_		3454722	0					
ANR	3455045	ExpressionStatement	clazz [ i ] . size = FT_FIELD_SIZE_DELTA ( name_ )	1196:10:31884:31936	3454722	122	True				
ANR	3455046	AssignmentExpression	clazz [ i ] . size = FT_FIELD_SIZE_DELTA ( name_ )		3454722	0		=			
ANR	3455047	MemberAccess	clazz [ i ] . size		3454722	0					
ANR	3455048	ArrayIndexing	clazz [ i ]		3454722	0					
ANR	3455049	Identifier	clazz		3454722	0					
ANR	3455050	Identifier	i		3454722	1					
ANR	3455051	Identifier	size		3454722	1					
ANR	3455052	CallExpression	FT_FIELD_SIZE_DELTA ( name_ )		3454722	1					
ANR	3455053	Callee	FT_FIELD_SIZE_DELTA		3454722	0					
ANR	3455054	Identifier	FT_FIELD_SIZE_DELTA		3454722	0					
ANR	3455055	ArgumentList	name_		3454722	1					
ANR	3455056	Argument	name_		3454722	0					
ANR	3455057	Identifier	name_		3454722	0					
ANR	3455058	ExpressionStatement	clazz [ i ] . reader = 0	1197:10:31954:31979	3454722	123	True				
ANR	3455059	AssignmentExpression	clazz [ i ] . reader = 0		3454722	0		=			
ANR	3455060	MemberAccess	clazz [ i ] . reader		3454722	0					
ANR	3455061	ArrayIndexing	clazz [ i ]		3454722	0					
ANR	3455062	Identifier	clazz		3454722	0					
ANR	3455063	Identifier	i		3454722	1					
ANR	3455064	Identifier	reader		3454722	1					
ANR	3455065	PrimaryExpression	0		3454722	1					
ANR	3455066	ExpressionStatement	clazz [ i ] . array_max = max_	1198:10:32024:32052	3454722	124	True				
ANR	3455067	AssignmentExpression	clazz [ i ] . array_max = max_		3454722	0		=			
ANR	3455068	MemberAccess	clazz [ i ] . array_max		3454722	0					
ANR	3455069	ArrayIndexing	clazz [ i ]		3454722	0					
ANR	3455070	Identifier	clazz		3454722	0					
ANR	3455071	Identifier	i		3454722	1					
ANR	3455072	Identifier	array_max		3454722	1					
ANR	3455073	Identifier	max_		3454722	1					
ANR	3455074	Statement	clazz	1199:10:32094:32098	3454722	125	True				
ANR	3455075	Statement	[	1199:15:32099:32099	3454722	126	True				
ANR	3455076	Statement	i	1199:16:32100:32100	3454722	127	True				
ANR	3455077	Statement	]	1199:17:32101:32101	3454722	128	True				
ANR	3455078	Statement	.	1199:18:32102:32102	3454722	129	True				
ANR	3455079	Statement	count_offset	1199:19:32103:32114	3454722	130	True				
ANR	3455080	Statement	=	1199:32:32116:32116	3454722	131	True				
ANR	3455081	Statement	FT_FIELD_OFFSET	1199:34:32118:32132	3454722	132	True				
ANR	3455082	Statement	(	1199:49:32133:32133	3454722	133	True				
ANR	3455083	Statement	num_	1199:51:32135:32138	3454722	134	True				
ANR	3455084	Statement	name_	1199:59:32143:32147	3454722	135	True				
ANR	3455085	Statement	)	1199:65:32149:32149	3454722	136	True				
ANR	3455086	ExpressionStatement		1199:66:32150:32150	3454722	137	True				
ANR	3455087	ExpressionStatement	i ++	1200:10:32164:32167	3454722	138	True				
ANR	3455088	PostIncDecOperationExpression	i ++		3454722	0					
ANR	3455089	Identifier	i		3454722	0					
ANR	3455090	IncDec	++		3454722	1					
ANR	3455091	Statement	undef	1202:1:32171:32175	3454722	139	True				
ANR	3455092	Statement	CFF_FIELD_BLEND	1202:8:32178:32192	3454722	140	True				
ANR	3455093	Statement	define	1203:1:32195:32200	3454722	141	True				
ANR	3455094	Statement	CFF_FIELD_BLEND	1203:8:32202:32216	3454722	142	True				
ANR	3455095	Statement	(	1203:23:32217:32217	3454722	143	True				
ANR	3455096	Statement	code_	1203:25:32219:32223	3454722	144	True				
ANR	3455097	Statement	","	1203:30:32224:32224	3454722	145	True				
ANR	3455098	Statement	id_	1203:32:32226:32228	3454722	146	True				
ANR	3455099	Statement	)	1203:36:32230:32230	3454722	147	True				
ANR	3455100	ExpressionStatement	clazz [ i ] . kind = cff_kind_blend	1204:10:32257:32295	3454722	148	True				
ANR	3455101	AssignmentExpression	clazz [ i ] . kind = cff_kind_blend		3454722	0		=			
ANR	3455102	MemberAccess	clazz [ i ] . kind		3454722	0					
ANR	3455103	ArrayIndexing	clazz [ i ]		3454722	0					
ANR	3455104	Identifier	clazz		3454722	0					
ANR	3455105	Identifier	i		3454722	1					
ANR	3455106	Identifier	kind		3454722	1					
ANR	3455107	Identifier	cff_kind_blend		3454722	1					
ANR	3455108	ExpressionStatement	clazz [ i ] . code = code_ | CFFCODE	1205:10:32310:32349	3454722	149	True				
ANR	3455109	AssignmentExpression	clazz [ i ] . code = code_ | CFFCODE		3454722	0		=			
ANR	3455110	MemberAccess	clazz [ i ] . code		3454722	0					
ANR	3455111	ArrayIndexing	clazz [ i ]		3454722	0					
ANR	3455112	Identifier	clazz		3454722	0					
ANR	3455113	Identifier	i		3454722	1					
ANR	3455114	Identifier	code		3454722	1					
ANR	3455115	InclusiveOrExpression	code_ | CFFCODE		3454722	1		|			
ANR	3455116	Identifier	code_		3454722	0					
ANR	3455117	Identifier	CFFCODE		3454722	1					
ANR	3455118	ExpressionStatement	clazz [ i ] . offset = 0	1206:10:32363:32388	3454722	150	True				
ANR	3455119	AssignmentExpression	clazz [ i ] . offset = 0		3454722	0		=			
ANR	3455120	MemberAccess	clazz [ i ] . offset		3454722	0					
ANR	3455121	ArrayIndexing	clazz [ i ]		3454722	0					
ANR	3455122	Identifier	clazz		3454722	0					
ANR	3455123	Identifier	i		3454722	1					
ANR	3455124	Identifier	offset		3454722	1					
ANR	3455125	PrimaryExpression	0		3454722	1					
ANR	3455126	ExpressionStatement	clazz [ i ] . size = 0	1207:10:32416:32441	3454722	151	True				
ANR	3455127	AssignmentExpression	clazz [ i ] . size = 0		3454722	0		=			
ANR	3455128	MemberAccess	clazz [ i ] . size		3454722	0					
ANR	3455129	ArrayIndexing	clazz [ i ]		3454722	0					
ANR	3455130	Identifier	clazz		3454722	0					
ANR	3455131	Identifier	i		3454722	1					
ANR	3455132	Identifier	size		3454722	1					
ANR	3455133	PrimaryExpression	0		3454722	1					
ANR	3455134	ExpressionStatement	clazz [ i ] . reader = cff_parse_blend	1208:10:32469:32508	3454722	152	True				
ANR	3455135	AssignmentExpression	clazz [ i ] . reader = cff_parse_blend		3454722	0		=			
ANR	3455136	MemberAccess	clazz [ i ] . reader		3454722	0					
ANR	3455137	ArrayIndexing	clazz [ i ]		3454722	0					
ANR	3455138	Identifier	clazz		3454722	0					
ANR	3455139	Identifier	i		3454722	1					
ANR	3455140	Identifier	reader		3454722	1					
ANR	3455141	Identifier	cff_parse_blend		3454722	1					
ANR	3455142	ExpressionStatement	clazz [ i ] . array_max = 0	1209:10:32522:32547	3454722	153	True				
ANR	3455143	AssignmentExpression	clazz [ i ] . array_max = 0		3454722	0		=			
ANR	3455144	MemberAccess	clazz [ i ] . array_max		3454722	0					
ANR	3455145	ArrayIndexing	clazz [ i ]		3454722	0					
ANR	3455146	Identifier	clazz		3454722	0					
ANR	3455147	Identifier	i		3454722	1					
ANR	3455148	Identifier	array_max		3454722	1					
ANR	3455149	PrimaryExpression	0		3454722	1					
ANR	3455150	ExpressionStatement	clazz [ i ] . count_offset = 0	1210:10:32575:32600	3454722	154	True				
ANR	3455151	AssignmentExpression	clazz [ i ] . count_offset = 0		3454722	0		=			
ANR	3455152	MemberAccess	clazz [ i ] . count_offset		3454722	0					
ANR	3455153	ArrayIndexing	clazz [ i ]		3454722	0					
ANR	3455154	Identifier	clazz		3454722	0					
ANR	3455155	Identifier	i		3454722	1					
ANR	3455156	Identifier	count_offset		3454722	1					
ANR	3455157	PrimaryExpression	0		3454722	1					
ANR	3455158	ExpressionStatement	i ++	1211:10:32628:32631	3454722	155	True				
ANR	3455159	PostIncDecOperationExpression	i ++		3454722	0					
ANR	3455160	Identifier	i		3454722	0					
ANR	3455161	IncDec	++		3454722	1					
ANR	3455162	Statement	include	1213:1:32635:32641	3454722	156	True				
ANR	3455163	Statement	"""cfftoken.h"""	1213:9:32643:32654	3454722	157	True				
ANR	3455164	ExpressionStatement	clazz [ i ] . kind = 0	1215:4:32661:32686	3454722	158	True				
ANR	3455165	AssignmentExpression	clazz [ i ] . kind = 0		3454722	0		=			
ANR	3455166	MemberAccess	clazz [ i ] . kind		3454722	0					
ANR	3455167	ArrayIndexing	clazz [ i ]		3454722	0					
ANR	3455168	Identifier	clazz		3454722	0					
ANR	3455169	Identifier	i		3454722	1					
ANR	3455170	Identifier	kind		3454722	1					
ANR	3455171	PrimaryExpression	0		3454722	1					
ANR	3455172	ExpressionStatement	clazz [ i ] . code = 0	1216:4:32692:32717	3454722	159	True				
ANR	3455173	AssignmentExpression	clazz [ i ] . code = 0		3454722	0		=			
ANR	3455174	MemberAccess	clazz [ i ] . code		3454722	0					
ANR	3455175	ArrayIndexing	clazz [ i ]		3454722	0					
ANR	3455176	Identifier	clazz		3454722	0					
ANR	3455177	Identifier	i		3454722	1					
ANR	3455178	Identifier	code		3454722	1					
ANR	3455179	PrimaryExpression	0		3454722	1					
ANR	3455180	ExpressionStatement	clazz [ i ] . offset = 0	1217:4:32723:32748	3454722	160	True				
ANR	3455181	AssignmentExpression	clazz [ i ] . offset = 0		3454722	0		=			
ANR	3455182	MemberAccess	clazz [ i ] . offset		3454722	0					
ANR	3455183	ArrayIndexing	clazz [ i ]		3454722	0					
ANR	3455184	Identifier	clazz		3454722	0					
ANR	3455185	Identifier	i		3454722	1					
ANR	3455186	Identifier	offset		3454722	1					
ANR	3455187	PrimaryExpression	0		3454722	1					
ANR	3455188	ExpressionStatement	clazz [ i ] . size = 0	1218:4:32754:32779	3454722	161	True				
ANR	3455189	AssignmentExpression	clazz [ i ] . size = 0		3454722	0		=			
ANR	3455190	MemberAccess	clazz [ i ] . size		3454722	0					
ANR	3455191	ArrayIndexing	clazz [ i ]		3454722	0					
ANR	3455192	Identifier	clazz		3454722	0					
ANR	3455193	Identifier	i		3454722	1					
ANR	3455194	Identifier	size		3454722	1					
ANR	3455195	PrimaryExpression	0		3454722	1					
ANR	3455196	ExpressionStatement	clazz [ i ] . reader = 0	1219:4:32785:32810	3454722	162	True				
ANR	3455197	AssignmentExpression	clazz [ i ] . reader = 0		3454722	0		=			
ANR	3455198	MemberAccess	clazz [ i ] . reader		3454722	0					
ANR	3455199	ArrayIndexing	clazz [ i ]		3454722	0					
ANR	3455200	Identifier	clazz		3454722	0					
ANR	3455201	Identifier	i		3454722	1					
ANR	3455202	Identifier	reader		3454722	1					
ANR	3455203	PrimaryExpression	0		3454722	1					
ANR	3455204	ExpressionStatement	clazz [ i ] . array_max = 0	1220:4:32816:32841	3454722	163	True				
ANR	3455205	AssignmentExpression	clazz [ i ] . array_max = 0		3454722	0		=			
ANR	3455206	MemberAccess	clazz [ i ] . array_max		3454722	0					
ANR	3455207	ArrayIndexing	clazz [ i ]		3454722	0					
ANR	3455208	Identifier	clazz		3454722	0					
ANR	3455209	Identifier	i		3454722	1					
ANR	3455210	Identifier	array_max		3454722	1					
ANR	3455211	PrimaryExpression	0		3454722	1					
ANR	3455212	ExpressionStatement	clazz [ i ] . count_offset = 0	1221:4:32847:32872	3454722	164	True				
ANR	3455213	AssignmentExpression	clazz [ i ] . count_offset = 0		3454722	0		=			
ANR	3455214	MemberAccess	clazz [ i ] . count_offset		3454722	0					
ANR	3455215	ArrayIndexing	clazz [ i ]		3454722	0					
ANR	3455216	Identifier	clazz		3454722	0					
ANR	3455217	Identifier	i		3454722	1					
ANR	3455218	Identifier	count_offset		3454722	1					
ANR	3455219	PrimaryExpression	0		3454722	1					
ANR	3455220	ExpressionStatement	* output_class = clazz	1290:4:35605:35626	3454722	165	True				
ANR	3455221	AssignmentExpression	* output_class = clazz		3454722	0		=			
ANR	3455222	UnaryOperationExpression	* output_class		3454722	0					
ANR	3455223	UnaryOperator	*		3454722	0					
ANR	3455224	Identifier	output_class		3454722	1					
ANR	3455225	Identifier	clazz		3454722	1					
ANR	3455226	ReturnStatement	return FT_Err_Ok ;	1292:4:35633:35649	3454722	166	True				
ANR	3455227	Identifier	FT_Err_Ok		3454722	0					
ANR	3455228	ReturnType	FT_Error		3454722	1					
ANR	3455229	Identifier	FT_Create_Class_cff_field_handlers		3454722	2					
ANR	3455230	ParameterList	"FT_Library library , CFF_Field_Handler * * output_class"		3454722	3					
ANR	3455231	Parameter	FT_Library library	1137:38:29777:29804	3454722	0	True				
ANR	3455232	ParameterType	FT_Library		3454722	0					
ANR	3455233	Identifier	library		3454722	1					
ANR	3455234	Parameter	CFF_Field_Handler * * output_class	1138:38:29845:29877	3454722	1	True				
ANR	3455235	ParameterType	CFF_Field_Handler * *		3454722	0					
ANR	3455236	Identifier	output_class		3454722	1					
ANR	3455237	CFGEntryNode	ENTRY		3454722		True				
ANR	3455238	CFGExitNode	EXIT		3454722		True				
ANR	3455239	Symbol	* library		3454722						
ANR	3455240	Symbol	memory		3454722						
ANR	3455241	Symbol	clazz [ i ] . kind		3454722						
ANR	3455242	Symbol	FT_FIELD_SIZE_DELTA		3454722						
ANR	3455243	Symbol	FT_Err_Ok		3454722						
ANR	3455244	Symbol	cff_kind_delta		3454722						
ANR	3455245	Symbol	max_		3454722						
ANR	3455246	Symbol	library -> memory		3454722						
ANR	3455247	Symbol	cff_kind_blend		3454722						
ANR	3455248	Symbol	error		3454722						
ANR	3455249	Symbol	cff_parse_blend		3454722						
ANR	3455250	Symbol	name_		3454722						
ANR	3455251	Symbol	clazz [ i ] . reader		3454722						
ANR	3455252	Symbol	clazz [ i ] . offset		3454722						
ANR	3455253	Symbol	clazz [ i ] . count_offset		3454722						
ANR	3455254	Symbol	library		3454722						
ANR	3455255	Symbol	FT_ALLOC		3454722						
ANR	3455256	Symbol	clazz [ i ] . array_max		3454722						
ANR	3455257	Symbol	FT_FIELD_SIZE		3454722						
ANR	3455258	Symbol	CFFCODE		3454722						
ANR	3455259	Symbol	kind_		3454722						
ANR	3455260	Symbol	NULL		3454722						
ANR	3455261	Symbol	* clazz		3454722						
ANR	3455262	Symbol	clazz [ i ] . size		3454722						
ANR	3455263	Symbol	i		3454722						
ANR	3455264	Symbol	clazz [ i ] . code		3454722						
ANR	3455265	Symbol	* i		3454722						
ANR	3455266	Symbol	cff_kind_callback		3454722						
ANR	3455267	Symbol	code_		3454722						
ANR	3455268	Symbol	* output_class		3454722						
ANR	3455269	Symbol	output_class		3454722						
ANR	3455270	Symbol	FT_FIELD_OFFSET		3454722						
ANR	3455271	Symbol	clazz		3454722						
ANR	3455272	Function	cff_parser_run	1300:2:35722:46521							
ANR	3455273	FunctionDef	"cff_parser_run (CFF_Parser parser , FT_Byte * start , FT_Byte * limit)"		3455272	0					
ANR	3455274	CompoundStatement		1303:2:35835:46521	3455272	0					
ANR	3455275	IdentifierDeclStatement	PSAux_Service psaux ;	1305:4:35877:35897	3455272	0	True				
ANR	3455276	IdentifierDecl	psaux		3455272	0					
ANR	3455277	IdentifierDeclType	PSAux_Service		3455272	0					
ANR	3455278	Identifier	psaux		3455272	1					
ANR	3455279	IdentifierDeclStatement	FT_Byte * p = start ;	1308:4:35911:35938	3455272	1	True				
ANR	3455280	IdentifierDecl	* p = start		3455272	0					
ANR	3455281	IdentifierDeclType	FT_Byte *		3455272	0					
ANR	3455282	Identifier	p		3455272	1					
ANR	3455283	AssignmentExpression	* p = start		3455272	2		=			
ANR	3455284	Identifier	start		3455272	0					
ANR	3455285	Identifier	start		3455272	1					
ANR	3455286	IdentifierDeclStatement	FT_Error error = FT_Err_Ok ;	1309:4:35944:35975	3455272	2	True				
ANR	3455287	IdentifierDecl	error = FT_Err_Ok		3455272	0					
ANR	3455288	IdentifierDeclType	FT_Error		3455272	0					
ANR	3455289	Identifier	error		3455272	1					
ANR	3455290	AssignmentExpression	error = FT_Err_Ok		3455272	2		=			
ANR	3455291	Identifier	FT_Err_Ok		3455272	0					
ANR	3455292	Identifier	FT_Err_Ok		3455272	1					
ANR	3455293	IdentifierDeclStatement	FT_Library library = parser -> library ;	1310:4:35981:36018	3455272	3	True				
ANR	3455294	IdentifierDecl	library = parser -> library		3455272	0					
ANR	3455295	IdentifierDeclType	FT_Library		3455272	0					
ANR	3455296	Identifier	library		3455272	1					
ANR	3455297	AssignmentExpression	library = parser -> library		3455272	2		=			
ANR	3455298	Identifier	library		3455272	0					
ANR	3455299	PtrMemberAccess	parser -> library		3455272	1					
ANR	3455300	Identifier	parser		3455272	0					
ANR	3455301	Identifier	library		3455272	1					
ANR	3455302	ExpressionStatement	FT_UNUSED ( library )	1312:4:36025:36045	3455272	4	True				
ANR	3455303	CallExpression	FT_UNUSED ( library )		3455272	0					
ANR	3455304	Callee	FT_UNUSED		3455272	0					
ANR	3455305	Identifier	FT_UNUSED		3455272	0					
ANR	3455306	ArgumentList	library		3455272	1					
ANR	3455307	Argument	library		3455272	0					
ANR	3455308	Identifier	library		3455272	0					
ANR	3455309	ExpressionStatement	parser -> top = parser -> stack	1315:4:36053:36083	3455272	5	True				
ANR	3455310	AssignmentExpression	parser -> top = parser -> stack		3455272	0		=			
ANR	3455311	PtrMemberAccess	parser -> top		3455272	0					
ANR	3455312	Identifier	parser		3455272	0					
ANR	3455313	Identifier	top		3455272	1					
ANR	3455314	PtrMemberAccess	parser -> stack		3455272	1					
ANR	3455315	Identifier	parser		3455272	0					
ANR	3455316	Identifier	stack		3455272	1					
ANR	3455317	ExpressionStatement	parser -> start = start	1316:4:36089:36111	3455272	6	True				
ANR	3455318	AssignmentExpression	parser -> start = start		3455272	0		=			
ANR	3455319	PtrMemberAccess	parser -> start		3455272	0					
ANR	3455320	Identifier	parser		3455272	0					
ANR	3455321	Identifier	start		3455272	1					
ANR	3455322	Identifier	start		3455272	1					
ANR	3455323	ExpressionStatement	parser -> limit = limit	1317:4:36117:36139	3455272	7	True				
ANR	3455324	AssignmentExpression	parser -> limit = limit		3455272	0		=			
ANR	3455325	PtrMemberAccess	parser -> limit		3455272	0					
ANR	3455326	Identifier	parser		3455272	0					
ANR	3455327	Identifier	limit		3455272	1					
ANR	3455328	Identifier	limit		3455272	1					
ANR	3455329	ExpressionStatement	parser -> cursor = start	1318:4:36145:36167	3455272	8	True				
ANR	3455330	AssignmentExpression	parser -> cursor = start		3455272	0		=			
ANR	3455331	PtrMemberAccess	parser -> cursor		3455272	0					
ANR	3455332	Identifier	parser		3455272	0					
ANR	3455333	Identifier	cursor		3455272	1					
ANR	3455334	Identifier	start		3455272	1					
ANR	3455335	WhileStatement	while ( p < limit )		3455272	9					
ANR	3455336	Condition	p < limit	1320:12:36182:36190	3455272	0	True				
ANR	3455337	RelationalExpression	p < limit		3455272	0		<			
ANR	3455338	Identifier	p		3455272	0					
ANR	3455339	Identifier	limit		3455272	1					
ANR	3455340	CompoundStatement		20:6:370:385	3455272	1					
ANR	3455341	IdentifierDeclStatement	FT_UInt v = * p ;	1322:6:36206:36221	3455272	0	True				
ANR	3455342	IdentifierDecl	v = * p		3455272	0					
ANR	3455343	IdentifierDeclType	FT_UInt		3455272	0					
ANR	3455344	Identifier	v		3455272	1					
ANR	3455345	AssignmentExpression	v = * p		3455272	2		=			
ANR	3455346	Identifier	v		3455272	0					
ANR	3455347	UnaryOperationExpression	* p		3455272	1					
ANR	3455348	UnaryOperator	*		3455272	0					
ANR	3455349	Identifier	p		3455272	1					
ANR	3455350	IfStatement	if ( v >= 27 && v != 31 && v != 255 )		3455272	1					
ANR	3455351	Condition	v >= 27 && v != 31 && v != 255	1327:11:36436:36465	3455272	0	True				
ANR	3455352	AndExpression	v >= 27 && v != 31 && v != 255		3455272	0		&&			
ANR	3455353	RelationalExpression	v >= 27		3455272	0		>=			
ANR	3455354	Identifier	v		3455272	0					
ANR	3455355	PrimaryExpression	27		3455272	1					
ANR	3455356	AndExpression	v != 31 && v != 255		3455272	1		&&			
ANR	3455357	EqualityExpression	v != 31		3455272	0		!=			
ANR	3455358	Identifier	v		3455272	0					
ANR	3455359	PrimaryExpression	31		3455272	1					
ANR	3455360	EqualityExpression	v != 255		3455272	1		!=			
ANR	3455361	Identifier	v		3455272	0					
ANR	3455362	PrimaryExpression	255		3455272	1					
ANR	3455363	CompoundStatement		26:6:639:639	3455272	1					
ANR	3455364	IfStatement	if ( ( FT_UInt ) ( parser -> top - parser -> stack ) >= parser -> stackSize )		3455272	0					
ANR	3455365	Condition	( FT_UInt ) ( parser -> top - parser -> stack ) >= parser -> stackSize	1330:13:36558:36618	3455272	0	True				
ANR	3455366	RelationalExpression	( FT_UInt ) ( parser -> top - parser -> stack ) >= parser -> stackSize		3455272	0		>=			
ANR	3455367	CastExpression	( FT_UInt ) ( parser -> top - parser -> stack )		3455272	0					
ANR	3455368	CastTarget	FT_UInt		3455272	0					
ANR	3455369	AdditiveExpression	parser -> top - parser -> stack		3455272	1		-			
ANR	3455370	PtrMemberAccess	parser -> top		3455272	0					
ANR	3455371	Identifier	parser		3455272	0					
ANR	3455372	Identifier	top		3455272	1					
ANR	3455373	PtrMemberAccess	parser -> stack		3455272	1					
ANR	3455374	Identifier	parser		3455272	0					
ANR	3455375	Identifier	stack		3455272	1					
ANR	3455376	PtrMemberAccess	parser -> stackSize		3455272	1					
ANR	3455377	Identifier	parser		3455272	0					
ANR	3455378	Identifier	stackSize		3455272	1					
ANR	3455379	GotoStatement	goto Stack_Overflow ;	1331:10:36632:36651	3455272	1	True				
ANR	3455380	Identifier	Stack_Overflow		3455272	0					
ANR	3455381	ExpressionStatement	* parser -> top ++ = p	1333:8:36662:36680	3455272	1	True				
ANR	3455382	AssignmentExpression	* parser -> top ++ = p		3455272	0		=			
ANR	3455383	UnaryOperationExpression	* parser -> top ++		3455272	0					
ANR	3455384	UnaryOperator	*		3455272	0					
ANR	3455385	PostIncDecOperationExpression	parser -> top ++		3455272	1					
ANR	3455386	PtrMemberAccess	parser -> top		3455272	0					
ANR	3455387	Identifier	parser		3455272	0					
ANR	3455388	Identifier	top		3455272	1					
ANR	3455389	IncDec	++		3455272	1					
ANR	3455390	Identifier	p		3455272	1					
ANR	3455391	IfStatement	if ( v == 30 )		3455272	2					
ANR	3455392	Condition	v == 30	1336:13:36723:36729	3455272	0	True				
ANR	3455393	EqualityExpression	v == 30		3455272	0		==			
ANR	3455394	Identifier	v		3455272	0					
ANR	3455395	PrimaryExpression	30		3455272	1					
ANR	3455396	CompoundStatement		35:8:905:905	3455272	1					
ANR	3455397	ExpressionStatement	p ++	1339:10:36786:36789	3455272	0	True				
ANR	3455398	PostIncDecOperationExpression	p ++		3455272	0					
ANR	3455399	Identifier	p		3455272	0					
ANR	3455400	IncDec	++		3455272	1					
ANR	3455401	ForStatement	for ( ; ; )		3455272	1					
ANR	3455402	CompoundStatement		39:10:984:984	3455272	0					
ANR	3455403	IfStatement	if ( p >= limit )		3455272	0					
ANR	3455404	Condition	p >= limit	1344:17:36965:36974	3455272	0	True				
ANR	3455405	RelationalExpression	p >= limit		3455272	0		>=			
ANR	3455406	Identifier	p		3455272	0					
ANR	3455407	Identifier	limit		3455272	1					
ANR	3455408	GotoStatement	goto Exit ;	1345:14:36992:37001	3455272	1	True				
ANR	3455409	Identifier	Exit		3455272	0					
ANR	3455410	ExpressionStatement	v = p [ 0 ] >> 4	1346:12:37015:37028	3455272	1	True				
ANR	3455411	AssignmentExpression	v = p [ 0 ] >> 4		3455272	0		=			
ANR	3455412	Identifier	v		3455272	0					
ANR	3455413	ShiftExpression	p [ 0 ] >> 4		3455272	1		>>			
ANR	3455414	ArrayIndexing	p [ 0 ]		3455272	0					
ANR	3455415	Identifier	p		3455272	0					
ANR	3455416	PrimaryExpression	0		3455272	1					
ANR	3455417	PrimaryExpression	4		3455272	1					
ANR	3455418	IfStatement	if ( v == 15 )		3455272	2					
ANR	3455419	Condition	v == 15	1347:17:37047:37053	3455272	0	True				
ANR	3455420	EqualityExpression	v == 15		3455272	0		==			
ANR	3455421	Identifier	v		3455272	0					
ANR	3455422	PrimaryExpression	15		3455272	1					
ANR	3455423	BreakStatement	break ;	1348:14:37071:37076	3455272	1	True				
ANR	3455424	ExpressionStatement	v = p [ 0 ] & 0xF	1349:12:37090:37104	3455272	3	True				
ANR	3455425	AssignmentExpression	v = p [ 0 ] & 0xF		3455272	0		=			
ANR	3455426	Identifier	v		3455272	0					
ANR	3455427	BitAndExpression	p [ 0 ] & 0xF		3455272	1		&			
ANR	3455428	ArrayIndexing	p [ 0 ]		3455272	0					
ANR	3455429	Identifier	p		3455272	0					
ANR	3455430	PrimaryExpression	0		3455272	1					
ANR	3455431	PrimaryExpression	0xF		3455272	1					
ANR	3455432	IfStatement	if ( v == 15 )		3455272	4					
ANR	3455433	Condition	v == 15	1350:17:37123:37129	3455272	0	True				
ANR	3455434	EqualityExpression	v == 15		3455272	0		==			
ANR	3455435	Identifier	v		3455272	0					
ANR	3455436	PrimaryExpression	15		3455272	1					
ANR	3455437	BreakStatement	break ;	1351:14:37147:37152	3455272	1	True				
ANR	3455438	ExpressionStatement	p ++	1352:12:37166:37169	3455272	5	True				
ANR	3455439	PostIncDecOperationExpression	p ++		3455272	0					
ANR	3455440	Identifier	p		3455272	0					
ANR	3455441	IncDec	++		3455272	1					
ANR	3455442	ElseStatement	else		3455272	0					
ANR	3455443	IfStatement	if ( v == 28 )		3455272	0					
ANR	3455444	Condition	v == 28	1355:18:37211:37217	3455272	0	True				
ANR	3455445	EqualityExpression	v == 28		3455272	0		==			
ANR	3455446	Identifier	v		3455272	0					
ANR	3455447	PrimaryExpression	28		3455272	1					
ANR	3455448	ExpressionStatement	p += 2	1356:10:37231:37237	3455272	1	True				
ANR	3455449	AssignmentExpression	p += 2		3455272	0		+=			
ANR	3455450	Identifier	p		3455272	0					
ANR	3455451	PrimaryExpression	2		3455272	1					
ANR	3455452	ElseStatement	else		3455272	0					
ANR	3455453	IfStatement	if ( v == 29 )		3455272	0					
ANR	3455454	Condition	v == 29	1357:18:37257:37263	3455272	0	True				
ANR	3455455	EqualityExpression	v == 29		3455272	0		==			
ANR	3455456	Identifier	v		3455272	0					
ANR	3455457	PrimaryExpression	29		3455272	1					
ANR	3455458	ExpressionStatement	p += 4	1358:10:37277:37283	3455272	1	True				
ANR	3455459	AssignmentExpression	p += 4		3455272	0		+=			
ANR	3455460	Identifier	p		3455272	0					
ANR	3455461	PrimaryExpression	4		3455272	1					
ANR	3455462	ElseStatement	else		3455272	0					
ANR	3455463	IfStatement	if ( v > 246 )		3455272	0					
ANR	3455464	Condition	v > 246	1359:18:37303:37309	3455272	0	True				
ANR	3455465	RelationalExpression	v > 246		3455272	0		>			
ANR	3455466	Identifier	v		3455272	0					
ANR	3455467	PrimaryExpression	246		3455272	1					
ANR	3455468	ExpressionStatement	p += 1	1360:10:37323:37329	3455272	1	True				
ANR	3455469	AssignmentExpression	p += 1		3455272	0		+=			
ANR	3455470	Identifier	p		3455272	0					
ANR	3455471	PrimaryExpression	1		3455272	1					
ANR	3455472	ElseStatement	else		3455272	0					
ANR	3455473	IfStatement	if ( v == 31 )		3455272	0					
ANR	3455474	Condition	v == 31	1363:16:37391:37397	3455272	0	True				
ANR	3455475	EqualityExpression	v == 31		3455272	0		==			
ANR	3455476	Identifier	v		3455272	0					
ANR	3455477	PrimaryExpression	31		3455272	1					
ANR	3455478	CompoundStatement		71:8:1778:1790	3455272	1					
ANR	3455479	IdentifierDeclStatement	CFF_Decoder decoder ;	1367:8:37452:37472	3455272	0	True				
ANR	3455480	IdentifierDecl	decoder		3455272	0					
ANR	3455481	IdentifierDeclType	CFF_Decoder		3455272	0					
ANR	3455482	Identifier	decoder		3455272	1					
ANR	3455483	IdentifierDeclStatement	CFF_FontRec cff_rec ;	1368:8:37482:37502	3455272	1	True				
ANR	3455484	IdentifierDecl	cff_rec		3455272	0					
ANR	3455485	IdentifierDeclType	CFF_FontRec		3455272	0					
ANR	3455486	Identifier	cff_rec		3455272	1					
ANR	3455487	IdentifierDeclStatement	FT_Byte * charstring_base ;	1369:8:37512:37540	3455272	2	True				
ANR	3455488	IdentifierDecl	* charstring_base		3455272	0					
ANR	3455489	IdentifierDeclType	FT_Byte *		3455272	0					
ANR	3455490	Identifier	charstring_base		3455272	1					
ANR	3455491	IdentifierDeclStatement	FT_ULong charstring_len ;	1370:8:37550:37577	3455272	3	True				
ANR	3455492	IdentifierDecl	charstring_len		3455272	0					
ANR	3455493	IdentifierDeclType	FT_ULong		3455272	0					
ANR	3455494	Identifier	charstring_len		3455272	1					
ANR	3455495	IdentifierDeclStatement	FT_Fixed * stack ;	1372:8:37588:37604	3455272	4	True				
ANR	3455496	IdentifierDecl	* stack		3455272	0					
ANR	3455497	IdentifierDeclType	FT_Fixed *		3455272	0					
ANR	3455498	Identifier	stack		3455272	1					
ANR	3455499	IdentifierDeclStatement	FT_Byte * q ;	1373:8:37614:37626	3455272	5	True				
ANR	3455500	IdentifierDecl	* q		3455272	0					
ANR	3455501	IdentifierDeclType	FT_Byte *		3455272	0					
ANR	3455502	Identifier	q		3455272	1					
ANR	3455503	ExpressionStatement	charstring_base = ++ p	1376:8:37638:37659	3455272	6	True				
ANR	3455504	AssignmentExpression	charstring_base = ++ p		3455272	0		=			
ANR	3455505	Identifier	charstring_base		3455272	0					
ANR	3455506	UnaryExpression	++ p		3455272	1					
ANR	3455507	IncDec	++		3455272	0					
ANR	3455508	Identifier	p		3455272	1					
ANR	3455509	ForStatement	for ( ; ; )		3455272	7					
ANR	3455510	CompoundStatement		78:8:1891:1891	3455272	0					
ANR	3455511	IfStatement	if ( p >= limit )		3455272	0					
ANR	3455512	Condition	p >= limit	1381:15:37744:37753	3455272	0	True				
ANR	3455513	RelationalExpression	p >= limit		3455272	0		>=			
ANR	3455514	Identifier	p		3455272	0					
ANR	3455515	Identifier	limit		3455272	1					
ANR	3455516	GotoStatement	goto Exit ;	1382:12:37769:37778	3455272	1	True				
ANR	3455517	Identifier	Exit		3455272	0					
ANR	3455518	IfStatement	if ( * p == 14 )		3455272	1					
ANR	3455519	Condition	* p == 14	1383:15:37795:37802	3455272	0	True				
ANR	3455520	EqualityExpression	* p == 14		3455272	0		==			
ANR	3455521	UnaryOperationExpression	* p		3455272	0					
ANR	3455522	UnaryOperator	*		3455272	0					
ANR	3455523	Identifier	p		3455272	1					
ANR	3455524	PrimaryExpression	14		3455272	1					
ANR	3455525	BreakStatement	break ;	1384:12:37818:37823	3455272	1	True				
ANR	3455526	ExpressionStatement	p ++	1385:10:37835:37838	3455272	2	True				
ANR	3455527	PostIncDecOperationExpression	p ++		3455272	0					
ANR	3455528	Identifier	p		3455272	0					
ANR	3455529	IncDec	++		3455272	1					
ANR	3455530	ExpressionStatement	charstring_len = ( FT_ULong ) ( p - charstring_base ) + 1	1388:8:37859:37913	3455272	8	True				
ANR	3455531	AssignmentExpression	charstring_len = ( FT_ULong ) ( p - charstring_base ) + 1		3455272	0		=			
ANR	3455532	Identifier	charstring_len		3455272	0					
ANR	3455533	AdditiveExpression	( FT_ULong ) ( p - charstring_base ) + 1		3455272	1		+			
ANR	3455534	CastExpression	( FT_ULong ) ( p - charstring_base )		3455272	0					
ANR	3455535	CastTarget	FT_ULong		3455272	0					
ANR	3455536	AdditiveExpression	p - charstring_base		3455272	1		-			
ANR	3455537	Identifier	p		3455272	0					
ANR	3455538	Identifier	charstring_base		3455272	1					
ANR	3455539	PrimaryExpression	1		3455272	1					
ANR	3455540	ExpressionStatement	FT_ZERO ( & decoder )	1391:8:37967:37986	3455272	9	True				
ANR	3455541	CallExpression	FT_ZERO ( & decoder )		3455272	0					
ANR	3455542	Callee	FT_ZERO		3455272	0					
ANR	3455543	Identifier	FT_ZERO		3455272	0					
ANR	3455544	ArgumentList	& decoder		3455272	1					
ANR	3455545	Argument	& decoder		3455272	0					
ANR	3455546	UnaryOperationExpression	& decoder		3455272	0					
ANR	3455547	UnaryOperator	&		3455272	0					
ANR	3455548	Identifier	decoder		3455272	1					
ANR	3455549	ExpressionStatement	FT_ZERO ( & cff_rec )	1392:8:37996:38015	3455272	10	True				
ANR	3455550	CallExpression	FT_ZERO ( & cff_rec )		3455272	0					
ANR	3455551	Callee	FT_ZERO		3455272	0					
ANR	3455552	Identifier	FT_ZERO		3455272	0					
ANR	3455553	ArgumentList	& cff_rec		3455272	1					
ANR	3455554	Argument	& cff_rec		3455272	0					
ANR	3455555	UnaryOperationExpression	& cff_rec		3455272	0					
ANR	3455556	UnaryOperator	&		3455272	0					
ANR	3455557	Identifier	cff_rec		3455272	1					
ANR	3455558	ExpressionStatement	cff_rec . top_font . font_dict . num_designs = parser -> num_designs	1394:8:38026:38086	3455272	11	True				
ANR	3455559	AssignmentExpression	cff_rec . top_font . font_dict . num_designs = parser -> num_designs		3455272	0		=			
ANR	3455560	MemberAccess	cff_rec . top_font . font_dict . num_designs		3455272	0					
ANR	3455561	MemberAccess	cff_rec . top_font . font_dict		3455272	0					
ANR	3455562	MemberAccess	cff_rec . top_font		3455272	0					
ANR	3455563	Identifier	cff_rec		3455272	0					
ANR	3455564	Identifier	top_font		3455272	1					
ANR	3455565	Identifier	font_dict		3455272	1					
ANR	3455566	Identifier	num_designs		3455272	1					
ANR	3455567	PtrMemberAccess	parser -> num_designs		3455272	1					
ANR	3455568	Identifier	parser		3455272	0					
ANR	3455569	Identifier	num_designs		3455272	1					
ANR	3455570	ExpressionStatement	cff_rec . top_font . font_dict . num_axes = parser -> num_axes	1395:8:38096:38153	3455272	12	True				
ANR	3455571	AssignmentExpression	cff_rec . top_font . font_dict . num_axes = parser -> num_axes		3455272	0		=			
ANR	3455572	MemberAccess	cff_rec . top_font . font_dict . num_axes		3455272	0					
ANR	3455573	MemberAccess	cff_rec . top_font . font_dict		3455272	0					
ANR	3455574	MemberAccess	cff_rec . top_font		3455272	0					
ANR	3455575	Identifier	cff_rec		3455272	0					
ANR	3455576	Identifier	top_font		3455272	1					
ANR	3455577	Identifier	font_dict		3455272	1					
ANR	3455578	Identifier	num_axes		3455272	1					
ANR	3455579	PtrMemberAccess	parser -> num_axes		3455272	1					
ANR	3455580	Identifier	parser		3455272	0					
ANR	3455581	Identifier	num_axes		3455272	1					
ANR	3455582	ExpressionStatement	decoder . cff = & cff_rec	1396:8:38163:38212	3455272	13	True				
ANR	3455583	AssignmentExpression	decoder . cff = & cff_rec		3455272	0		=			
ANR	3455584	MemberAccess	decoder . cff		3455272	0					
ANR	3455585	Identifier	decoder		3455272	0					
ANR	3455586	Identifier	cff		3455272	1					
ANR	3455587	UnaryOperationExpression	& cff_rec		3455272	1					
ANR	3455588	UnaryOperator	&		3455272	0					
ANR	3455589	Identifier	cff_rec		3455272	1					
ANR	3455590	ExpressionStatement	"psaux = ( PSAux_Service ) FT_Get_Module_Interface ( library , ""psaux"" )"	1398:8:38223:38289	3455272	14	True				
ANR	3455591	AssignmentExpression	"psaux = ( PSAux_Service ) FT_Get_Module_Interface ( library , ""psaux"" )"		3455272	0		=			
ANR	3455592	Identifier	psaux		3455272	0					
ANR	3455593	CastExpression	"( PSAux_Service ) FT_Get_Module_Interface ( library , ""psaux"" )"		3455272	1					
ANR	3455594	CastTarget	PSAux_Service		3455272	0					
ANR	3455595	CallExpression	"FT_Get_Module_Interface ( library , ""psaux"" )"		3455272	1					
ANR	3455596	Callee	FT_Get_Module_Interface		3455272	0					
ANR	3455597	Identifier	FT_Get_Module_Interface		3455272	0					
ANR	3455598	ArgumentList	library		3455272	1					
ANR	3455599	Argument	library		3455272	0					
ANR	3455600	Identifier	library		3455272	0					
ANR	3455601	Argument	"""psaux"""		3455272	1					
ANR	3455602	PrimaryExpression	"""psaux"""		3455272	0					
ANR	3455603	IfStatement	if ( ! psaux )		3455272	15					
ANR	3455604	Condition	! psaux	1399:13:38304:38309	3455272	0	True				
ANR	3455605	UnaryOperationExpression	! psaux		3455272	0					
ANR	3455606	UnaryOperator	!		3455272	0					
ANR	3455607	Identifier	psaux		3455272	1					
ANR	3455608	CompoundStatement		98:8:2485:2485	3455272	1					
ANR	3455609	ExpressionStatement	"FT_ERROR ( ( ""cff_parser_run: cannot access `psaux' module\\n"" ) )"	1401:10:38333:38395	3455272	0	True				
ANR	3455610	CallExpression	"FT_ERROR ( ( ""cff_parser_run: cannot access `psaux' module\\n"" ) )"		3455272	0					
ANR	3455611	Callee	FT_ERROR		3455272	0					
ANR	3455612	Identifier	FT_ERROR		3455272	0					
ANR	3455613	ArgumentList	"""cff_parser_run: cannot access `psaux' module\\n"""		3455272	1					
ANR	3455614	Argument	"""cff_parser_run: cannot access `psaux' module\\n"""		3455272	0					
ANR	3455615	PrimaryExpression	"""cff_parser_run: cannot access `psaux' module\\n"""		3455272	0					
ANR	3455616	ExpressionStatement	error = FT_THROW ( Missing_Module )	1402:10:38407:38441	3455272	1	True				
ANR	3455617	AssignmentExpression	error = FT_THROW ( Missing_Module )		3455272	0		=			
ANR	3455618	Identifier	error		3455272	0					
ANR	3455619	CallExpression	FT_THROW ( Missing_Module )		3455272	1					
ANR	3455620	Callee	FT_THROW		3455272	0					
ANR	3455621	Identifier	FT_THROW		3455272	0					
ANR	3455622	ArgumentList	Missing_Module		3455272	1					
ANR	3455623	Argument	Missing_Module		3455272	0					
ANR	3455624	Identifier	Missing_Module		3455272	0					
ANR	3455625	GotoStatement	goto Exit ;	1403:10:38453:38462	3455272	2	True				
ANR	3455626	Identifier	Exit		3455272	0					
ANR	3455627	ExpressionStatement	"error = psaux -> cff_decoder_funcs -> parse_charstrings_old ( & decoder , charstring_base , charstring_len , 1 )"	1406:8:38483:38604	3455272	16	True				
ANR	3455628	AssignmentExpression	"error = psaux -> cff_decoder_funcs -> parse_charstrings_old ( & decoder , charstring_base , charstring_len , 1 )"		3455272	0		=			
ANR	3455629	Identifier	error		3455272	0					
ANR	3455630	CallExpression	"psaux -> cff_decoder_funcs -> parse_charstrings_old ( & decoder , charstring_base , charstring_len , 1 )"		3455272	1					
ANR	3455631	Callee	psaux -> cff_decoder_funcs -> parse_charstrings_old		3455272	0					
ANR	3455632	PtrMemberAccess	psaux -> cff_decoder_funcs -> parse_charstrings_old		3455272	0					
ANR	3455633	PtrMemberAccess	psaux -> cff_decoder_funcs		3455272	0					
ANR	3455634	Identifier	psaux		3455272	0					
ANR	3455635	Identifier	cff_decoder_funcs		3455272	1					
ANR	3455636	Identifier	parse_charstrings_old		3455272	1					
ANR	3455637	ArgumentList	& decoder		3455272	1					
ANR	3455638	Argument	& decoder		3455272	0					
ANR	3455639	UnaryOperationExpression	& decoder		3455272	0					
ANR	3455640	UnaryOperator	&		3455272	0					
ANR	3455641	Identifier	decoder		3455272	1					
ANR	3455642	Argument	charstring_base		3455272	1					
ANR	3455643	Identifier	charstring_base		3455272	0					
ANR	3455644	Argument	charstring_len		3455272	2					
ANR	3455645	Identifier	charstring_len		3455272	0					
ANR	3455646	Argument	1		3455272	3					
ANR	3455647	PrimaryExpression	1		3455272	0					
ANR	3455648	ExpressionStatement	q = charstring_base - 1	1418:8:39208:39235	3455272	17	True				
ANR	3455649	AssignmentExpression	q = charstring_base - 1		3455272	0		=			
ANR	3455650	Identifier	q		3455272	0					
ANR	3455651	AdditiveExpression	charstring_base - 1		3455272	1		-			
ANR	3455652	Identifier	charstring_base		3455272	0					
ANR	3455653	PrimaryExpression	1		3455272	1					
ANR	3455654	ExpressionStatement	stack = decoder . stack	1419:8:39245:39266	3455272	18	True				
ANR	3455655	AssignmentExpression	stack = decoder . stack		3455272	0		=			
ANR	3455656	Identifier	stack		3455272	0					
ANR	3455657	MemberAccess	decoder . stack		3455272	1					
ANR	3455658	Identifier	decoder		3455272	0					
ANR	3455659	Identifier	stack		3455272	1					
ANR	3455660	WhileStatement	while ( stack < decoder . top )		3455272	19					
ANR	3455661	Condition	stack < decoder . top	1421:16:39285:39303	3455272	0	True				
ANR	3455662	RelationalExpression	stack < decoder . top		3455272	0		<			
ANR	3455663	Identifier	stack		3455272	0					
ANR	3455664	MemberAccess	decoder . top		3455272	1					
ANR	3455665	Identifier	decoder		3455272	0					
ANR	3455666	Identifier	top		3455272	1					
ANR	3455667	CompoundStatement		122:10:3516:3529	3455272	1					
ANR	3455668	IdentifierDeclStatement	FT_ULong num ;	1423:10:39327:39340	3455272	0	True				
ANR	3455669	IdentifierDecl	num		3455272	0					
ANR	3455670	IdentifierDeclType	FT_ULong		3455272	0					
ANR	3455671	Identifier	num		3455272	1					
ANR	3455672	IdentifierDeclStatement	FT_Bool neg ;	1424:10:39352:39365	3455272	1	True				
ANR	3455673	IdentifierDecl	neg		3455272	0					
ANR	3455674	IdentifierDeclType	FT_Bool		3455272	0					
ANR	3455675	Identifier	neg		3455272	1					
ANR	3455676	IfStatement	if ( ( FT_UInt ) ( parser -> top - parser -> stack ) >= parser -> stackSize )		3455272	2					
ANR	3455677	Condition	( FT_UInt ) ( parser -> top - parser -> stack ) >= parser -> stackSize	1427:15:39384:39444	3455272	0	True				
ANR	3455678	RelationalExpression	( FT_UInt ) ( parser -> top - parser -> stack ) >= parser -> stackSize		3455272	0		>=			
ANR	3455679	CastExpression	( FT_UInt ) ( parser -> top - parser -> stack )		3455272	0					
ANR	3455680	CastTarget	FT_UInt		3455272	0					
ANR	3455681	AdditiveExpression	parser -> top - parser -> stack		3455272	1		-			
ANR	3455682	PtrMemberAccess	parser -> top		3455272	0					
ANR	3455683	Identifier	parser		3455272	0					
ANR	3455684	Identifier	top		3455272	1					
ANR	3455685	PtrMemberAccess	parser -> stack		3455272	1					
ANR	3455686	Identifier	parser		3455272	0					
ANR	3455687	Identifier	stack		3455272	1					
ANR	3455688	PtrMemberAccess	parser -> stackSize		3455272	1					
ANR	3455689	Identifier	parser		3455272	0					
ANR	3455690	Identifier	stackSize		3455272	1					
ANR	3455691	GotoStatement	goto Stack_Overflow ;	1428:12:39460:39479	3455272	1	True				
ANR	3455692	Identifier	Stack_Overflow		3455272	0					
ANR	3455693	ExpressionStatement	* parser -> top ++ = q	1430:10:39492:39510	3455272	3	True				
ANR	3455694	AssignmentExpression	* parser -> top ++ = q		3455272	0		=			
ANR	3455695	UnaryOperationExpression	* parser -> top ++		3455272	0					
ANR	3455696	UnaryOperator	*		3455272	0					
ANR	3455697	PostIncDecOperationExpression	parser -> top ++		3455272	1					
ANR	3455698	PtrMemberAccess	parser -> top		3455272	0					
ANR	3455699	Identifier	parser		3455272	0					
ANR	3455700	Identifier	top		3455272	1					
ANR	3455701	IncDec	++		3455272	1					
ANR	3455702	Identifier	q		3455272	1					
ANR	3455703	IfStatement	if ( * stack < 0 )		3455272	4					
ANR	3455704	Condition	* stack < 0	1432:15:39528:39537	3455272	0	True				
ANR	3455705	RelationalExpression	* stack < 0		3455272	0		<			
ANR	3455706	UnaryOperationExpression	* stack		3455272	0					
ANR	3455707	UnaryOperator	*		3455272	0					
ANR	3455708	Identifier	stack		3455272	1					
ANR	3455709	PrimaryExpression	0		3455272	1					
ANR	3455710	CompoundStatement		131:10:3715:3715	3455272	1					
ANR	3455711	ExpressionStatement	num = ( FT_ULong ) - * stack	1434:12:39565:39588	3455272	0	True				
ANR	3455712	AssignmentExpression	num = ( FT_ULong ) - * stack		3455272	0		=			
ANR	3455713	Identifier	num		3455272	0					
ANR	3455714	CastExpression	( FT_ULong ) - * stack		3455272	1					
ANR	3455715	CastTarget	FT_ULong		3455272	0					
ANR	3455716	UnaryOperationExpression	- * stack		3455272	1					
ANR	3455717	UnaryOperator	-		3455272	0					
ANR	3455718	UnaryOperationExpression	* stack		3455272	1					
ANR	3455719	UnaryOperator	*		3455272	0					
ANR	3455720	Identifier	stack		3455272	1					
ANR	3455721	ExpressionStatement	neg = 1	1435:12:39602:39609	3455272	1	True				
ANR	3455722	AssignmentExpression	neg = 1		3455272	0		=			
ANR	3455723	Identifier	neg		3455272	0					
ANR	3455724	PrimaryExpression	1		3455272	1					
ANR	3455725	ElseStatement	else		3455272	0					
ANR	3455726	CompoundStatement		136:10:3812:3812	3455272	0					
ANR	3455727	ExpressionStatement	num = ( FT_ULong ) * stack	1439:12:39662:39684	3455272	0	True				
ANR	3455728	AssignmentExpression	num = ( FT_ULong ) * stack		3455272	0		=			
ANR	3455729	Identifier	num		3455272	0					
ANR	3455730	CastExpression	( FT_ULong ) * stack		3455272	1					
ANR	3455731	CastTarget	FT_ULong		3455272	0					
ANR	3455732	UnaryOperationExpression	* stack		3455272	1					
ANR	3455733	UnaryOperator	*		3455272	0					
ANR	3455734	Identifier	stack		3455272	1					
ANR	3455735	ExpressionStatement	neg = 0	1440:12:39698:39705	3455272	1	True				
ANR	3455736	AssignmentExpression	neg = 0		3455272	0		=			
ANR	3455737	Identifier	neg		3455272	0					
ANR	3455738	PrimaryExpression	0		3455272	1					
ANR	3455739	IfStatement	if ( num & 0xFFFFU )		3455272	5					
ANR	3455740	Condition	num & 0xFFFFU	1443:15:39735:39747	3455272	0	True				
ANR	3455741	BitAndExpression	num & 0xFFFFU		3455272	0		&			
ANR	3455742	Identifier	num		3455272	0					
ANR	3455743	PrimaryExpression	0xFFFFU		3455272	1					
ANR	3455744	CompoundStatement		142:10:3925:3925	3455272	1					
ANR	3455745	IfStatement	if ( neg )		3455272	0					
ANR	3455746	Condition	neg	1445:17:39780:39782	3455272	0	True				
ANR	3455747	Identifier	neg		3455272	0					
ANR	3455748	ExpressionStatement	num = ( FT_ULong ) - num	1446:14:39800:39820	3455272	1	True				
ANR	3455749	AssignmentExpression	num = ( FT_ULong ) - num		3455272	0		=			
ANR	3455750	Identifier	num		3455272	0					
ANR	3455751	CastExpression	( FT_ULong ) - num		3455272	1					
ANR	3455752	CastTarget	FT_ULong		3455272	0					
ANR	3455753	UnaryOperationExpression	- num		3455272	1					
ANR	3455754	UnaryOperator	-		3455272	0					
ANR	3455755	Identifier	num		3455272	1					
ANR	3455756	ExpressionStatement	* q ++ = 255	1448:12:39835:39845	3455272	1	True				
ANR	3455757	AssignmentExpression	* q ++ = 255		3455272	0		=			
ANR	3455758	UnaryOperationExpression	* q ++		3455272	0					
ANR	3455759	UnaryOperator	*		3455272	0					
ANR	3455760	PostIncDecOperationExpression	q ++		3455272	1					
ANR	3455761	Identifier	q		3455272	0					
ANR	3455762	IncDec	++		3455272	1					
ANR	3455763	PrimaryExpression	255		3455272	1					
ANR	3455764	ExpressionStatement	* q ++ = ( num & 0xFF000000U ) >> 24	1449:12:39859:39893	3455272	2	True				
ANR	3455765	AssignmentExpression	* q ++ = ( num & 0xFF000000U ) >> 24		3455272	0		=			
ANR	3455766	UnaryOperationExpression	* q ++		3455272	0					
ANR	3455767	UnaryOperator	*		3455272	0					
ANR	3455768	PostIncDecOperationExpression	q ++		3455272	1					
ANR	3455769	Identifier	q		3455272	0					
ANR	3455770	IncDec	++		3455272	1					
ANR	3455771	ShiftExpression	( num & 0xFF000000U ) >> 24		3455272	1		>>			
ANR	3455772	BitAndExpression	num & 0xFF000000U		3455272	0		&			
ANR	3455773	Identifier	num		3455272	0					
ANR	3455774	PrimaryExpression	0xFF000000U		3455272	1					
ANR	3455775	PrimaryExpression	24		3455272	1					
ANR	3455776	ExpressionStatement	* q ++ = ( num & 0x00FF0000U ) >> 16	1450:12:39907:39941	3455272	3	True				
ANR	3455777	AssignmentExpression	* q ++ = ( num & 0x00FF0000U ) >> 16		3455272	0		=			
ANR	3455778	UnaryOperationExpression	* q ++		3455272	0					
ANR	3455779	UnaryOperator	*		3455272	0					
ANR	3455780	PostIncDecOperationExpression	q ++		3455272	1					
ANR	3455781	Identifier	q		3455272	0					
ANR	3455782	IncDec	++		3455272	1					
ANR	3455783	ShiftExpression	( num & 0x00FF0000U ) >> 16		3455272	1		>>			
ANR	3455784	BitAndExpression	num & 0x00FF0000U		3455272	0		&			
ANR	3455785	Identifier	num		3455272	0					
ANR	3455786	PrimaryExpression	0x00FF0000U		3455272	1					
ANR	3455787	PrimaryExpression	16		3455272	1					
ANR	3455788	ExpressionStatement	* q ++ = ( num & 0x0000FF00U ) >> 8	1451:12:39955:39989	3455272	4	True				
ANR	3455789	AssignmentExpression	* q ++ = ( num & 0x0000FF00U ) >> 8		3455272	0		=			
ANR	3455790	UnaryOperationExpression	* q ++		3455272	0					
ANR	3455791	UnaryOperator	*		3455272	0					
ANR	3455792	PostIncDecOperationExpression	q ++		3455272	1					
ANR	3455793	Identifier	q		3455272	0					
ANR	3455794	IncDec	++		3455272	1					
ANR	3455795	ShiftExpression	( num & 0x0000FF00U ) >> 8		3455272	1		>>			
ANR	3455796	BitAndExpression	num & 0x0000FF00U		3455272	0		&			
ANR	3455797	Identifier	num		3455272	0					
ANR	3455798	PrimaryExpression	0x0000FF00U		3455272	1					
ANR	3455799	PrimaryExpression	8		3455272	1					
ANR	3455800	ExpressionStatement	* q ++ = num & 0x000000FFU	1452:12:40003:40029	3455272	5	True				
ANR	3455801	AssignmentExpression	* q ++ = num & 0x000000FFU		3455272	0		=			
ANR	3455802	UnaryOperationExpression	* q ++		3455272	0					
ANR	3455803	UnaryOperator	*		3455272	0					
ANR	3455804	PostIncDecOperationExpression	q ++		3455272	1					
ANR	3455805	Identifier	q		3455272	0					
ANR	3455806	IncDec	++		3455272	1					
ANR	3455807	BitAndExpression	num & 0x000000FFU		3455272	1		&			
ANR	3455808	Identifier	num		3455272	0					
ANR	3455809	PrimaryExpression	0x000000FFU		3455272	1					
ANR	3455810	ElseStatement	else		3455272	0					
ANR	3455811	CompoundStatement		153:10:4232:4232	3455272	0					
ANR	3455812	ExpressionStatement	num >>= 16	1456:12:40082:40092	3455272	0	True				
ANR	3455813	AssignmentExpression	num >>= 16		3455272	0		>>=			
ANR	3455814	Identifier	num		3455272	0					
ANR	3455815	PrimaryExpression	16		3455272	1					
ANR	3455816	IfStatement	if ( neg )		3455272	1					
ANR	3455817	Condition	neg	1458:17:40112:40114	3455272	0	True				
ANR	3455818	Identifier	neg		3455272	0					
ANR	3455819	CompoundStatement		157:12:4294:4294	3455272	1					
ANR	3455820	IfStatement	if ( num <= 107 )		3455272	0					
ANR	3455821	Condition	num <= 107	1460:19:40151:40160	3455272	0	True				
ANR	3455822	RelationalExpression	num <= 107		3455272	0		<=			
ANR	3455823	Identifier	num		3455272	0					
ANR	3455824	PrimaryExpression	107		3455272	1					
ANR	3455825	ExpressionStatement	* q ++ = ( FT_Byte ) ( 139 - num )	1461:16:40180:40209	3455272	1	True				
ANR	3455826	AssignmentExpression	* q ++ = ( FT_Byte ) ( 139 - num )		3455272	0		=			
ANR	3455827	UnaryOperationExpression	* q ++		3455272	0					
ANR	3455828	UnaryOperator	*		3455272	0					
ANR	3455829	PostIncDecOperationExpression	q ++		3455272	1					
ANR	3455830	Identifier	q		3455272	0					
ANR	3455831	IncDec	++		3455272	1					
ANR	3455832	CastExpression	( FT_Byte ) ( 139 - num )		3455272	1					
ANR	3455833	CastTarget	FT_Byte		3455272	0					
ANR	3455834	AdditiveExpression	139 - num		3455272	1		-			
ANR	3455835	PrimaryExpression	139		3455272	0					
ANR	3455836	Identifier	num		3455272	1					
ANR	3455837	ElseStatement	else		3455272	0					
ANR	3455838	IfStatement	if ( num <= 1131 )		3455272	0					
ANR	3455839	Condition	num <= 1131	1462:24:40235:40245	3455272	0	True				
ANR	3455840	RelationalExpression	num <= 1131		3455272	0		<=			
ANR	3455841	Identifier	num		3455272	0					
ANR	3455842	PrimaryExpression	1131		3455272	1					
ANR	3455843	CompoundStatement		161:14:4427:4427	3455272	1					
ANR	3455844	ExpressionStatement	* q ++ = ( FT_Byte ) ( ( ( num - 108 ) >> 8 ) + 251 )	1464:16:40281:40329	3455272	0	True				
ANR	3455845	AssignmentExpression	* q ++ = ( FT_Byte ) ( ( ( num - 108 ) >> 8 ) + 251 )		3455272	0		=			
ANR	3455846	UnaryOperationExpression	* q ++		3455272	0					
ANR	3455847	UnaryOperator	*		3455272	0					
ANR	3455848	PostIncDecOperationExpression	q ++		3455272	1					
ANR	3455849	Identifier	q		3455272	0					
ANR	3455850	IncDec	++		3455272	1					
ANR	3455851	CastExpression	( FT_Byte ) ( ( ( num - 108 ) >> 8 ) + 251 )		3455272	1					
ANR	3455852	CastTarget	FT_Byte		3455272	0					
ANR	3455853	AdditiveExpression	( ( num - 108 ) >> 8 ) + 251		3455272	1		+			
ANR	3455854	ShiftExpression	( num - 108 ) >> 8		3455272	0		>>			
ANR	3455855	AdditiveExpression	num - 108		3455272	0		-			
ANR	3455856	Identifier	num		3455272	0					
ANR	3455857	PrimaryExpression	108		3455272	1					
ANR	3455858	PrimaryExpression	8		3455272	1					
ANR	3455859	PrimaryExpression	251		3455272	1					
ANR	3455860	ExpressionStatement	* q ++ = ( FT_Byte ) ( ( num - 108 ) & 0xFF )	1465:16:40347:40387	3455272	1	True				
ANR	3455861	AssignmentExpression	* q ++ = ( FT_Byte ) ( ( num - 108 ) & 0xFF )		3455272	0		=			
ANR	3455862	UnaryOperationExpression	* q ++		3455272	0					
ANR	3455863	UnaryOperator	*		3455272	0					
ANR	3455864	PostIncDecOperationExpression	q ++		3455272	1					
ANR	3455865	Identifier	q		3455272	0					
ANR	3455866	IncDec	++		3455272	1					
ANR	3455867	CastExpression	( FT_Byte ) ( ( num - 108 ) & 0xFF )		3455272	1					
ANR	3455868	CastTarget	FT_Byte		3455272	0					
ANR	3455869	BitAndExpression	( num - 108 ) & 0xFF		3455272	1		&			
ANR	3455870	AdditiveExpression	num - 108		3455272	0		-			
ANR	3455871	Identifier	num		3455272	0					
ANR	3455872	PrimaryExpression	108		3455272	1					
ANR	3455873	PrimaryExpression	0xFF		3455272	1					
ANR	3455874	ElseStatement	else		3455272	0					
ANR	3455875	CompoundStatement		166:14:4602:4602	3455272	0					
ANR	3455876	ExpressionStatement	num = ( FT_ULong ) - num	1469:16:40456:40476	3455272	0	True				
ANR	3455877	AssignmentExpression	num = ( FT_ULong ) - num		3455272	0		=			
ANR	3455878	Identifier	num		3455272	0					
ANR	3455879	CastExpression	( FT_ULong ) - num		3455272	1					
ANR	3455880	CastTarget	FT_ULong		3455272	0					
ANR	3455881	UnaryOperationExpression	- num		3455272	1					
ANR	3455882	UnaryOperator	-		3455272	0					
ANR	3455883	Identifier	num		3455272	1					
ANR	3455884	ExpressionStatement	* q ++ = 28	1471:16:40495:40504	3455272	1	True				
ANR	3455885	AssignmentExpression	* q ++ = 28		3455272	0		=			
ANR	3455886	UnaryOperationExpression	* q ++		3455272	0					
ANR	3455887	UnaryOperator	*		3455272	0					
ANR	3455888	PostIncDecOperationExpression	q ++		3455272	1					
ANR	3455889	Identifier	q		3455272	0					
ANR	3455890	IncDec	++		3455272	1					
ANR	3455891	PrimaryExpression	28		3455272	1					
ANR	3455892	ExpressionStatement	* q ++ = ( FT_Byte ) ( num >> 8 )	1472:16:40522:40550	3455272	2	True				
ANR	3455893	AssignmentExpression	* q ++ = ( FT_Byte ) ( num >> 8 )		3455272	0		=			
ANR	3455894	UnaryOperationExpression	* q ++		3455272	0					
ANR	3455895	UnaryOperator	*		3455272	0					
ANR	3455896	PostIncDecOperationExpression	q ++		3455272	1					
ANR	3455897	Identifier	q		3455272	0					
ANR	3455898	IncDec	++		3455272	1					
ANR	3455899	CastExpression	( FT_Byte ) ( num >> 8 )		3455272	1					
ANR	3455900	CastTarget	FT_Byte		3455272	0					
ANR	3455901	ShiftExpression	num >> 8		3455272	1		>>			
ANR	3455902	Identifier	num		3455272	0					
ANR	3455903	PrimaryExpression	8		3455272	1					
ANR	3455904	ExpressionStatement	* q ++ = ( FT_Byte ) ( num & 0xFF )	1473:16:40568:40598	3455272	3	True				
ANR	3455905	AssignmentExpression	* q ++ = ( FT_Byte ) ( num & 0xFF )		3455272	0		=			
ANR	3455906	UnaryOperationExpression	* q ++		3455272	0					
ANR	3455907	UnaryOperator	*		3455272	0					
ANR	3455908	PostIncDecOperationExpression	q ++		3455272	1					
ANR	3455909	Identifier	q		3455272	0					
ANR	3455910	IncDec	++		3455272	1					
ANR	3455911	CastExpression	( FT_Byte ) ( num & 0xFF )		3455272	1					
ANR	3455912	CastTarget	FT_Byte		3455272	0					
ANR	3455913	BitAndExpression	num & 0xFF		3455272	1		&			
ANR	3455914	Identifier	num		3455272	0					
ANR	3455915	PrimaryExpression	0xFF		3455272	1					
ANR	3455916	ElseStatement	else		3455272	0					
ANR	3455917	CompoundStatement		175:12:4823:4823	3455272	0					
ANR	3455918	IfStatement	if ( num <= 107 )		3455272	0					
ANR	3455919	Condition	num <= 107	1478:19:40680:40689	3455272	0	True				
ANR	3455920	RelationalExpression	num <= 107		3455272	0		<=			
ANR	3455921	Identifier	num		3455272	0					
ANR	3455922	PrimaryExpression	107		3455272	1					
ANR	3455923	ExpressionStatement	* q ++ = ( FT_Byte ) ( num + 139 )	1479:16:40709:40738	3455272	1	True				
ANR	3455924	AssignmentExpression	* q ++ = ( FT_Byte ) ( num + 139 )		3455272	0		=			
ANR	3455925	UnaryOperationExpression	* q ++		3455272	0					
ANR	3455926	UnaryOperator	*		3455272	0					
ANR	3455927	PostIncDecOperationExpression	q ++		3455272	1					
ANR	3455928	Identifier	q		3455272	0					
ANR	3455929	IncDec	++		3455272	1					
ANR	3455930	CastExpression	( FT_Byte ) ( num + 139 )		3455272	1					
ANR	3455931	CastTarget	FT_Byte		3455272	0					
ANR	3455932	AdditiveExpression	num + 139		3455272	1		+			
ANR	3455933	Identifier	num		3455272	0					
ANR	3455934	PrimaryExpression	139		3455272	1					
ANR	3455935	ElseStatement	else		3455272	0					
ANR	3455936	IfStatement	if ( num <= 1131 )		3455272	0					
ANR	3455937	Condition	num <= 1131	1480:24:40764:40774	3455272	0	True				
ANR	3455938	RelationalExpression	num <= 1131		3455272	0		<=			
ANR	3455939	Identifier	num		3455272	0					
ANR	3455940	PrimaryExpression	1131		3455272	1					
ANR	3455941	CompoundStatement		179:14:4956:4956	3455272	1					
ANR	3455942	ExpressionStatement	* q ++ = ( FT_Byte ) ( ( ( num - 108 ) >> 8 ) + 247 )	1482:16:40810:40858	3455272	0	True				
ANR	3455943	AssignmentExpression	* q ++ = ( FT_Byte ) ( ( ( num - 108 ) >> 8 ) + 247 )		3455272	0		=			
ANR	3455944	UnaryOperationExpression	* q ++		3455272	0					
ANR	3455945	UnaryOperator	*		3455272	0					
ANR	3455946	PostIncDecOperationExpression	q ++		3455272	1					
ANR	3455947	Identifier	q		3455272	0					
ANR	3455948	IncDec	++		3455272	1					
ANR	3455949	CastExpression	( FT_Byte ) ( ( ( num - 108 ) >> 8 ) + 247 )		3455272	1					
ANR	3455950	CastTarget	FT_Byte		3455272	0					
ANR	3455951	AdditiveExpression	( ( num - 108 ) >> 8 ) + 247		3455272	1		+			
ANR	3455952	ShiftExpression	( num - 108 ) >> 8		3455272	0		>>			
ANR	3455953	AdditiveExpression	num - 108		3455272	0		-			
ANR	3455954	Identifier	num		3455272	0					
ANR	3455955	PrimaryExpression	108		3455272	1					
ANR	3455956	PrimaryExpression	8		3455272	1					
ANR	3455957	PrimaryExpression	247		3455272	1					
ANR	3455958	ExpressionStatement	* q ++ = ( FT_Byte ) ( ( num - 108 ) & 0xFF )	1483:16:40876:40916	3455272	1	True				
ANR	3455959	AssignmentExpression	* q ++ = ( FT_Byte ) ( ( num - 108 ) & 0xFF )		3455272	0		=			
ANR	3455960	UnaryOperationExpression	* q ++		3455272	0					
ANR	3455961	UnaryOperator	*		3455272	0					
ANR	3455962	PostIncDecOperationExpression	q ++		3455272	1					
ANR	3455963	Identifier	q		3455272	0					
ANR	3455964	IncDec	++		3455272	1					
ANR	3455965	CastExpression	( FT_Byte ) ( ( num - 108 ) & 0xFF )		3455272	1					
ANR	3455966	CastTarget	FT_Byte		3455272	0					
ANR	3455967	BitAndExpression	( num - 108 ) & 0xFF		3455272	1		&			
ANR	3455968	AdditiveExpression	num - 108		3455272	0		-			
ANR	3455969	Identifier	num		3455272	0					
ANR	3455970	PrimaryExpression	108		3455272	1					
ANR	3455971	PrimaryExpression	0xFF		3455272	1					
ANR	3455972	ElseStatement	else		3455272	0					
ANR	3455973	CompoundStatement		184:14:5131:5131	3455272	0					
ANR	3455974	ExpressionStatement	* q ++ = 28	1487:16:40985:40994	3455272	0	True				
ANR	3455975	AssignmentExpression	* q ++ = 28		3455272	0		=			
ANR	3455976	UnaryOperationExpression	* q ++		3455272	0					
ANR	3455977	UnaryOperator	*		3455272	0					
ANR	3455978	PostIncDecOperationExpression	q ++		3455272	1					
ANR	3455979	Identifier	q		3455272	0					
ANR	3455980	IncDec	++		3455272	1					
ANR	3455981	PrimaryExpression	28		3455272	1					
ANR	3455982	ExpressionStatement	* q ++ = ( FT_Byte ) ( num >> 8 )	1488:16:41012:41040	3455272	1	True				
ANR	3455983	AssignmentExpression	* q ++ = ( FT_Byte ) ( num >> 8 )		3455272	0		=			
ANR	3455984	UnaryOperationExpression	* q ++		3455272	0					
ANR	3455985	UnaryOperator	*		3455272	0					
ANR	3455986	PostIncDecOperationExpression	q ++		3455272	1					
ANR	3455987	Identifier	q		3455272	0					
ANR	3455988	IncDec	++		3455272	1					
ANR	3455989	CastExpression	( FT_Byte ) ( num >> 8 )		3455272	1					
ANR	3455990	CastTarget	FT_Byte		3455272	0					
ANR	3455991	ShiftExpression	num >> 8		3455272	1		>>			
ANR	3455992	Identifier	num		3455272	0					
ANR	3455993	PrimaryExpression	8		3455272	1					
ANR	3455994	ExpressionStatement	* q ++ = ( FT_Byte ) ( num & 0xFF )	1489:16:41058:41088	3455272	2	True				
ANR	3455995	AssignmentExpression	* q ++ = ( FT_Byte ) ( num & 0xFF )		3455272	0		=			
ANR	3455996	UnaryOperationExpression	* q ++		3455272	0					
ANR	3455997	UnaryOperator	*		3455272	0					
ANR	3455998	PostIncDecOperationExpression	q ++		3455272	1					
ANR	3455999	Identifier	q		3455272	0					
ANR	3456000	IncDec	++		3455272	1					
ANR	3456001	CastExpression	( FT_Byte ) ( num & 0xFF )		3455272	1					
ANR	3456002	CastTarget	FT_Byte		3455272	0					
ANR	3456003	BitAndExpression	num & 0xFF		3455272	1		&			
ANR	3456004	Identifier	num		3455272	0					
ANR	3456005	PrimaryExpression	0xFF		3455272	1					
ANR	3456006	ExpressionStatement	stack ++	1494:10:41143:41150	3455272	6	True				
ANR	3456007	PostIncDecOperationExpression	stack ++		3455272	0					
ANR	3456008	Identifier	stack		3455272	0					
ANR	3456009	IncDec	++		3455272	1					
ANR	3456010	ElseStatement	else		3455272	0					
ANR	3456011	CompoundStatement		203:8:5644:5675	3455272	0					
ANR	3456012	IdentifierDeclStatement	FT_UInt code ;	1503:8:41396:41426	3455272	0	True				
ANR	3456013	IdentifierDecl	code		3455272	0					
ANR	3456014	IdentifierDeclType	FT_UInt		3455272	0					
ANR	3456015	Identifier	code		3455272	1					
ANR	3456016	IdentifierDeclStatement	FT_UInt num_args ;	1504:8:41436:41470	3455272	1	True				
ANR	3456017	IdentifierDecl	num_args		3455272	0					
ANR	3456018	IdentifierDeclType	FT_UInt		3455272	0					
ANR	3456019	Identifier	num_args		3455272	1					
ANR	3456020	IdentifierDeclStatement	const CFF_Field_Handler * field ;	1505:8:41480:41511	3455272	2	True				
ANR	3456021	IdentifierDecl	* field		3455272	0					
ANR	3456022	IdentifierDeclType	const CFF_Field_Handler *		3455272	0					
ANR	3456023	Identifier	field		3455272	1					
ANR	3456024	IfStatement	if ( ( FT_UInt ) ( parser -> top - parser -> stack ) >= parser -> stackSize )		3455272	3					
ANR	3456025	Condition	( FT_UInt ) ( parser -> top - parser -> stack ) >= parser -> stackSize	1508:13:41528:41588	3455272	0	True				
ANR	3456026	RelationalExpression	( FT_UInt ) ( parser -> top - parser -> stack ) >= parser -> stackSize		3455272	0		>=			
ANR	3456027	CastExpression	( FT_UInt ) ( parser -> top - parser -> stack )		3455272	0					
ANR	3456028	CastTarget	FT_UInt		3455272	0					
ANR	3456029	AdditiveExpression	parser -> top - parser -> stack		3455272	1		-			
ANR	3456030	PtrMemberAccess	parser -> top		3455272	0					
ANR	3456031	Identifier	parser		3455272	0					
ANR	3456032	Identifier	top		3455272	1					
ANR	3456033	PtrMemberAccess	parser -> stack		3455272	1					
ANR	3456034	Identifier	parser		3455272	0					
ANR	3456035	Identifier	stack		3455272	1					
ANR	3456036	PtrMemberAccess	parser -> stackSize		3455272	1					
ANR	3456037	Identifier	parser		3455272	0					
ANR	3456038	Identifier	stackSize		3455272	1					
ANR	3456039	GotoStatement	goto Stack_Overflow ;	1509:10:41602:41621	3455272	1	True				
ANR	3456040	Identifier	Stack_Overflow		3455272	0					
ANR	3456041	ExpressionStatement	num_args = ( FT_UInt ) ( parser -> top - parser -> stack )	1511:8:41632:41687	3455272	4	True				
ANR	3456042	AssignmentExpression	num_args = ( FT_UInt ) ( parser -> top - parser -> stack )		3455272	0		=			
ANR	3456043	Identifier	num_args		3455272	0					
ANR	3456044	CastExpression	( FT_UInt ) ( parser -> top - parser -> stack )		3455272	1					
ANR	3456045	CastTarget	FT_UInt		3455272	0					
ANR	3456046	AdditiveExpression	parser -> top - parser -> stack		3455272	1		-			
ANR	3456047	PtrMemberAccess	parser -> top		3455272	0					
ANR	3456048	Identifier	parser		3455272	0					
ANR	3456049	Identifier	top		3455272	1					
ANR	3456050	PtrMemberAccess	parser -> stack		3455272	1					
ANR	3456051	Identifier	parser		3455272	0					
ANR	3456052	Identifier	stack		3455272	1					
ANR	3456053	ExpressionStatement	* parser -> top = p	1512:8:41697:41713	3455272	5	True				
ANR	3456054	AssignmentExpression	* parser -> top = p		3455272	0		=			
ANR	3456055	UnaryOperationExpression	* parser -> top		3455272	0					
ANR	3456056	UnaryOperator	*		3455272	0					
ANR	3456057	PtrMemberAccess	parser -> top		3455272	1					
ANR	3456058	Identifier	parser		3455272	0					
ANR	3456059	Identifier	top		3455272	1					
ANR	3456060	Identifier	p		3455272	1					
ANR	3456061	ExpressionStatement	code = v	1513:8:41723:41739	3455272	6	True				
ANR	3456062	AssignmentExpression	code = v		3455272	0		=			
ANR	3456063	Identifier	code		3455272	0					
ANR	3456064	Identifier	v		3455272	1					
ANR	3456065	IfStatement	if ( v == 12 )		3455272	7					
ANR	3456066	Condition	v == 12	1515:13:41755:41761	3455272	0	True				
ANR	3456067	EqualityExpression	v == 12		3455272	0		==			
ANR	3456068	Identifier	v		3455272	0					
ANR	3456069	PrimaryExpression	12		3455272	1					
ANR	3456070	CompoundStatement		214:8:5937:5937	3455272	1					
ANR	3456071	ExpressionStatement	p ++	1518:10:41819:41822	3455272	0	True				
ANR	3456072	PostIncDecOperationExpression	p ++		3455272	0					
ANR	3456073	Identifier	p		3455272	0					
ANR	3456074	IncDec	++		3455272	1					
ANR	3456075	IfStatement	if ( p >= limit )		3455272	1					
ANR	3456076	Condition	p >= limit	1519:15:41839:41848	3455272	0	True				
ANR	3456077	RelationalExpression	p >= limit		3455272	0		>=			
ANR	3456078	Identifier	p		3455272	0					
ANR	3456079	Identifier	limit		3455272	1					
ANR	3456080	GotoStatement	goto Syntax_Error ;	1520:12:41864:41881	3455272	1	True				
ANR	3456081	Identifier	Syntax_Error		3455272	0					
ANR	3456082	ExpressionStatement	code = 0x100 | p [ 0 ]	1522:10:41894:41913	3455272	2	True				
ANR	3456083	AssignmentExpression	code = 0x100 | p [ 0 ]		3455272	0		=			
ANR	3456084	Identifier	code		3455272	0					
ANR	3456085	InclusiveOrExpression	0x100 | p [ 0 ]		3455272	1		|			
ANR	3456086	PrimaryExpression	0x100		3455272	0					
ANR	3456087	ArrayIndexing	p [ 0 ]		3455272	1					
ANR	3456088	Identifier	p		3455272	0					
ANR	3456089	PrimaryExpression	0		3455272	1					
ANR	3456090	ExpressionStatement	code = code | parser -> object_code	1524:8:41933:41966	3455272	8	True				
ANR	3456091	AssignmentExpression	code = code | parser -> object_code		3455272	0		=			
ANR	3456092	Identifier	code		3455272	0					
ANR	3456093	InclusiveOrExpression	code | parser -> object_code		3455272	1		|			
ANR	3456094	Identifier	code		3455272	0					
ANR	3456095	PtrMemberAccess	parser -> object_code		3455272	1					
ANR	3456096	Identifier	parser		3455272	0					
ANR	3456097	Identifier	object_code		3455272	1					
ANR	3456098	ForStatement	for ( field = CFF_FIELD_HANDLERS_GET ; field -> kind ; field ++ )		3455272	9					
ANR	3456099	ForInit	field = CFF_FIELD_HANDLERS_GET ;	1526:14:41983:42013	3455272	0	True				
ANR	3456100	AssignmentExpression	field = CFF_FIELD_HANDLERS_GET		3455272	0		=			
ANR	3456101	Identifier	field		3455272	0					
ANR	3456102	Identifier	CFF_FIELD_HANDLERS_GET		3455272	1					
ANR	3456103	Condition	field -> kind	1526:46:42015:42025	3455272	1	True				
ANR	3456104	PtrMemberAccess	field -> kind		3455272	0					
ANR	3456105	Identifier	field		3455272	0					
ANR	3456106	Identifier	kind		3455272	1					
ANR	3456107	PostIncDecOperationExpression	field ++	1526:59:42028:42034	3455272	2	True				
ANR	3456108	Identifier	field		3455272	0					
ANR	3456109	IncDec	++		3455272	1					
ANR	3456110	CompoundStatement		225:8:6210:6210	3455272	3					
ANR	3456111	IfStatement	if ( field -> code == ( FT_Int ) code )		3455272	0					
ANR	3456112	Condition	field -> code == ( FT_Int ) code	1528:15:42063:42089	3455272	0	True				
ANR	3456113	EqualityExpression	field -> code == ( FT_Int ) code		3455272	0		==			
ANR	3456114	PtrMemberAccess	field -> code		3455272	0					
ANR	3456115	Identifier	field		3455272	0					
ANR	3456116	Identifier	code		3455272	1					
ANR	3456117	CastExpression	( FT_Int ) code		3455272	1					
ANR	3456118	CastTarget	FT_Int		3455272	0					
ANR	3456119	Identifier	code		3455272	1					
ANR	3456120	CompoundStatement		230:12:6364:6418	3455272	1					
ANR	3456121	IdentifierDeclStatement	FT_Long val ;	1531:12:42173:42186	3455272	0	True				
ANR	3456122	IdentifierDecl	val		3455272	0					
ANR	3456123	IdentifierDeclType	FT_Long		3455272	0					
ANR	3456124	Identifier	val		3455272	1					
ANR	3456125	IdentifierDeclStatement	FT_Byte * q = ( FT_Byte * ) parser -> object + field -> offset ;	1532:12:42200:42254	3455272	1	True				
ANR	3456126	IdentifierDecl	* q = ( FT_Byte * ) parser -> object + field -> offset		3455272	0					
ANR	3456127	IdentifierDeclType	FT_Byte *		3455272	0					
ANR	3456128	Identifier	q		3455272	1					
ANR	3456129	AssignmentExpression	* q = ( FT_Byte * ) parser -> object + field -> offset		3455272	2		=			
ANR	3456130	Identifier	q		3455272	0					
ANR	3456131	AdditiveExpression	( FT_Byte * ) parser -> object + field -> offset		3455272	1		+			
ANR	3456132	CastExpression	( FT_Byte * ) parser -> object		3455272	0					
ANR	3456133	CastTarget	FT_Byte *		3455272	0					
ANR	3456134	PtrMemberAccess	parser -> object		3455272	1					
ANR	3456135	Identifier	parser		3455272	0					
ANR	3456136	Identifier	object		3455272	1					
ANR	3456137	PtrMemberAccess	field -> offset		3455272	1					
ANR	3456138	Identifier	field		3455272	0					
ANR	3456139	Identifier	offset		3455272	1					
ANR	3456140	ExpressionStatement	"FT_TRACE4 ( ( ""  %s"" , field -> id ) )"	1536:12:42298:42330	3455272	2	True				
ANR	3456141	CallExpression	"FT_TRACE4 ( ( ""  %s"" , field -> id ) )"		3455272	0					
ANR	3456142	Callee	FT_TRACE4		3455272	0					
ANR	3456143	Identifier	FT_TRACE4		3455272	0					
ANR	3456144	ArgumentList	"""  %s"" , field -> id"		3455272	1					
ANR	3456145	Argument	"""  %s"" , field -> id"		3455272	0					
ANR	3456146	Expression	"""  %s"" , field -> id"		3455272	0					
ANR	3456147	PrimaryExpression	"""  %s"""		3455272	0					
ANR	3456148	PtrMemberAccess	field -> id		3455272	1					
ANR	3456149	Identifier	field		3455272	0					
ANR	3456150	Identifier	id		3455272	1					
ANR	3456151	IfStatement	if ( field -> kind != cff_kind_delta && num_args < 1 )		3455272	3					
ANR	3456152	Condition	field -> kind != cff_kind_delta && num_args < 1	1541:17:42493:42537	3455272	0	True				
ANR	3456153	AndExpression	field -> kind != cff_kind_delta && num_args < 1		3455272	0		&&			
ANR	3456154	EqualityExpression	field -> kind != cff_kind_delta		3455272	0		!=			
ANR	3456155	PtrMemberAccess	field -> kind		3455272	0					
ANR	3456156	Identifier	field		3455272	0					
ANR	3456157	Identifier	kind		3455272	1					
ANR	3456158	Identifier	cff_kind_delta		3455272	1					
ANR	3456159	RelationalExpression	num_args < 1		3455272	1		<			
ANR	3456160	Identifier	num_args		3455272	0					
ANR	3456161	PrimaryExpression	1		3455272	1					
ANR	3456162	GotoStatement	goto Stack_Underflow ;	1542:14:42555:42575	3455272	1	True				
ANR	3456163	Identifier	Stack_Underflow		3455272	0					
ANR	3456164	SwitchStatement	switch ( field -> kind )		3455272	4					
ANR	3456165	Condition	field -> kind	1544:21:42599:42609	3455272	0	True				
ANR	3456166	PtrMemberAccess	field -> kind		3455272	0					
ANR	3456167	Identifier	field		3455272	0					
ANR	3456168	Identifier	kind		3455272	1					
ANR	3456169	CompoundStatement		243:12:6789:6789	3455272	1					
ANR	3456170	Label	case cff_kind_bool :	1546:12:42639:42657	3455272	0	True				
ANR	3456171	Identifier	cff_kind_bool		3455272	0					
ANR	3456172	Label	case cff_kind_string :	1547:12:42671:42691	3455272	1	True				
ANR	3456173	Identifier	cff_kind_string		3455272	0					
ANR	3456174	Label	case cff_kind_num :	1548:12:42705:42722	3455272	2	True				
ANR	3456175	Identifier	cff_kind_num		3455272	0					
ANR	3456176	ExpressionStatement	"val = cff_parse_num ( parser , parser -> stack )"	1549:14:42738:42782	3455272	3	True				
ANR	3456177	AssignmentExpression	"val = cff_parse_num ( parser , parser -> stack )"		3455272	0		=			
ANR	3456178	Identifier	val		3455272	0					
ANR	3456179	CallExpression	"cff_parse_num ( parser , parser -> stack )"		3455272	1					
ANR	3456180	Callee	cff_parse_num		3455272	0					
ANR	3456181	Identifier	cff_parse_num		3455272	0					
ANR	3456182	ArgumentList	parser		3455272	1					
ANR	3456183	Argument	parser		3455272	0					
ANR	3456184	Identifier	parser		3455272	0					
ANR	3456185	Argument	parser -> stack		3455272	1					
ANR	3456186	PtrMemberAccess	parser -> stack		3455272	0					
ANR	3456187	Identifier	parser		3455272	0					
ANR	3456188	Identifier	stack		3455272	1					
ANR	3456189	GotoStatement	goto Store_Number ;	1550:14:42798:42815	3455272	4	True				
ANR	3456190	Identifier	Store_Number		3455272	0					
ANR	3456191	Label	case cff_kind_fixed :	1552:12:42830:42849	3455272	5	True				
ANR	3456192	Identifier	cff_kind_fixed		3455272	0					
ANR	3456193	ExpressionStatement	"val = cff_parse_fixed ( parser , parser -> stack )"	1553:14:42865:42911	3455272	6	True				
ANR	3456194	AssignmentExpression	"val = cff_parse_fixed ( parser , parser -> stack )"		3455272	0		=			
ANR	3456195	Identifier	val		3455272	0					
ANR	3456196	CallExpression	"cff_parse_fixed ( parser , parser -> stack )"		3455272	1					
ANR	3456197	Callee	cff_parse_fixed		3455272	0					
ANR	3456198	Identifier	cff_parse_fixed		3455272	0					
ANR	3456199	ArgumentList	parser		3455272	1					
ANR	3456200	Argument	parser		3455272	0					
ANR	3456201	Identifier	parser		3455272	0					
ANR	3456202	Argument	parser -> stack		3455272	1					
ANR	3456203	PtrMemberAccess	parser -> stack		3455272	0					
ANR	3456204	Identifier	parser		3455272	0					
ANR	3456205	Identifier	stack		3455272	1					
ANR	3456206	GotoStatement	goto Store_Number ;	1554:14:42927:42944	3455272	7	True				
ANR	3456207	Identifier	Store_Number		3455272	0					
ANR	3456208	Label	case cff_kind_fixed_thousand :	1556:12:42959:42987	3455272	8	True				
ANR	3456209	Identifier	cff_kind_fixed_thousand		3455272	0					
ANR	3456210	ExpressionStatement	"val = cff_parse_fixed_scaled ( parser , parser -> stack , 3 )"	1557:14:43003:43059	3455272	9	True				
ANR	3456211	AssignmentExpression	"val = cff_parse_fixed_scaled ( parser , parser -> stack , 3 )"		3455272	0		=			
ANR	3456212	Identifier	val		3455272	0					
ANR	3456213	CallExpression	"cff_parse_fixed_scaled ( parser , parser -> stack , 3 )"		3455272	1					
ANR	3456214	Callee	cff_parse_fixed_scaled		3455272	0					
ANR	3456215	Identifier	cff_parse_fixed_scaled		3455272	0					
ANR	3456216	ArgumentList	parser		3455272	1					
ANR	3456217	Argument	parser		3455272	0					
ANR	3456218	Identifier	parser		3455272	0					
ANR	3456219	Argument	parser -> stack		3455272	1					
ANR	3456220	PtrMemberAccess	parser -> stack		3455272	0					
ANR	3456221	Identifier	parser		3455272	0					
ANR	3456222	Identifier	stack		3455272	1					
ANR	3456223	Argument	3		3455272	2					
ANR	3456224	PrimaryExpression	3		3455272	0					
ANR	3456225	Label	Store_Number :	1559:12:43074:43086	3455272	10	True				
ANR	3456226	Identifier	Store_Number		3455272	0					
ANR	3456227	SwitchStatement	switch ( field -> size )		3455272	11					
ANR	3456228	Condition	field -> size	1560:23:43111:43121	3455272	0	True				
ANR	3456229	PtrMemberAccess	field -> size		3455272	0					
ANR	3456230	Identifier	field		3455272	0					
ANR	3456231	Identifier	size		3455272	1					
ANR	3456232	CompoundStatement		259:14:7303:7303	3455272	1					
ANR	3456233	Statement	case	1562:14:43155:43158	3455272	0	True				
ANR	3456234	Statement	(	1562:19:43160:43160	3455272	1	True				
ANR	3456235	Statement	8	1562:20:43161:43161	3455272	2	True				
ANR	3456236	Statement	/	1562:22:43163:43163	3455272	3	True				
ANR	3456237	Statement	FT_CHAR_BIT	1562:24:43165:43175	3455272	4	True				
ANR	3456238	Statement	)	1562:35:43176:43176	3455272	5	True				
ANR	3456239	Statement	:	1562:36:43177:43177	3455272	6	True				
ANR	3456240	ExpressionStatement	* ( FT_Byte * ) q = ( FT_Byte ) val	1563:16:43195:43222	3455272	7	True				
ANR	3456241	AssignmentExpression	* ( FT_Byte * ) q = ( FT_Byte ) val		3455272	0		=			
ANR	3456242	UnaryOperationExpression	* ( FT_Byte * ) q		3455272	0					
ANR	3456243	UnaryOperator	*		3455272	0					
ANR	3456244	CastExpression	( FT_Byte * ) q		3455272	1					
ANR	3456245	CastTarget	FT_Byte *		3455272	0					
ANR	3456246	Identifier	q		3455272	1					
ANR	3456247	CastExpression	( FT_Byte ) val		3455272	1					
ANR	3456248	CastTarget	FT_Byte		3455272	0					
ANR	3456249	Identifier	val		3455272	1					
ANR	3456250	BreakStatement	break ;	1564:16:43240:43245	3455272	8	True				
ANR	3456251	Statement	case	1566:14:43262:43265	3455272	9	True				
ANR	3456252	Statement	(	1566:19:43267:43267	3455272	10	True				
ANR	3456253	Statement	16	1566:20:43268:43269	3455272	11	True				
ANR	3456254	Statement	/	1566:23:43271:43271	3455272	12	True				
ANR	3456255	Statement	FT_CHAR_BIT	1566:25:43273:43283	3455272	13	True				
ANR	3456256	Statement	)	1566:36:43284:43284	3455272	14	True				
ANR	3456257	Statement	:	1566:37:43285:43285	3455272	15	True				
ANR	3456258	ExpressionStatement	* ( FT_Short * ) q = ( FT_Short ) val	1567:16:43303:43332	3455272	16	True				
ANR	3456259	AssignmentExpression	* ( FT_Short * ) q = ( FT_Short ) val		3455272	0		=			
ANR	3456260	UnaryOperationExpression	* ( FT_Short * ) q		3455272	0					
ANR	3456261	UnaryOperator	*		3455272	0					
ANR	3456262	CastExpression	( FT_Short * ) q		3455272	1					
ANR	3456263	CastTarget	FT_Short *		3455272	0					
ANR	3456264	Identifier	q		3455272	1					
ANR	3456265	CastExpression	( FT_Short ) val		3455272	1					
ANR	3456266	CastTarget	FT_Short		3455272	0					
ANR	3456267	Identifier	val		3455272	1					
ANR	3456268	BreakStatement	break ;	1568:16:43350:43355	3455272	17	True				
ANR	3456269	Statement	case	1570:14:43372:43375	3455272	18	True				
ANR	3456270	Statement	(	1570:19:43377:43377	3455272	19	True				
ANR	3456271	Statement	32	1570:20:43378:43379	3455272	20	True				
ANR	3456272	Statement	/	1570:23:43381:43381	3455272	21	True				
ANR	3456273	Statement	FT_CHAR_BIT	1570:25:43383:43393	3455272	22	True				
ANR	3456274	Statement	)	1570:36:43394:43394	3455272	23	True				
ANR	3456275	Statement	:	1570:37:43395:43395	3455272	24	True				
ANR	3456276	ExpressionStatement	* ( FT_Int32 * ) q = ( FT_Int ) val	1571:16:43413:43440	3455272	25	True				
ANR	3456277	AssignmentExpression	* ( FT_Int32 * ) q = ( FT_Int ) val		3455272	0		=			
ANR	3456278	UnaryOperationExpression	* ( FT_Int32 * ) q		3455272	0					
ANR	3456279	UnaryOperator	*		3455272	0					
ANR	3456280	CastExpression	( FT_Int32 * ) q		3455272	1					
ANR	3456281	CastTarget	FT_Int32 *		3455272	0					
ANR	3456282	Identifier	q		3455272	1					
ANR	3456283	CastExpression	( FT_Int ) val		3455272	1					
ANR	3456284	CastTarget	FT_Int		3455272	0					
ANR	3456285	Identifier	val		3455272	1					
ANR	3456286	BreakStatement	break ;	1572:16:43458:43463	3455272	26	True				
ANR	3456287	Label	default :	1574:14:43480:43487	3455272	27	True				
ANR	3456288	Identifier	default		3455272	0					
ANR	3456289	ExpressionStatement	* ( FT_Long * ) q = val	1575:16:43531:43549	3455272	28	True				
ANR	3456290	AssignmentExpression	* ( FT_Long * ) q = val		3455272	0		=			
ANR	3456291	UnaryOperationExpression	* ( FT_Long * ) q		3455272	0					
ANR	3456292	UnaryOperator	*		3455272	0					
ANR	3456293	CastExpression	( FT_Long * ) q		3455272	1					
ANR	3456294	CastTarget	FT_Long *		3455272	0					
ANR	3456295	Identifier	q		3455272	1					
ANR	3456296	Identifier	val		3455272	1					
ANR	3456297	SwitchStatement	switch ( field -> kind )		3455272	12					
ANR	3456298	Condition	field -> kind	1579:23:43619:43629	3455272	0	True				
ANR	3456299	PtrMemberAccess	field -> kind		3455272	0					
ANR	3456300	Identifier	field		3455272	0					
ANR	3456301	Identifier	kind		3455272	1					
ANR	3456302	CompoundStatement		278:14:7811:7811	3455272	1					
ANR	3456303	Label	case cff_kind_bool :	1581:14:43663:43681	3455272	0	True				
ANR	3456304	Identifier	cff_kind_bool		3455272	0					
ANR	3456305	ExpressionStatement	"FT_TRACE4 ( ( "" %s\\n"" , val ? ""true"" : ""false"" ) )"	1582:16:43699:43745	3455272	1	True				
ANR	3456306	CallExpression	"FT_TRACE4 ( ( "" %s\\n"" , val ? ""true"" : ""false"" ) )"		3455272	0					
ANR	3456307	Callee	FT_TRACE4		3455272	0					
ANR	3456308	Identifier	FT_TRACE4		3455272	0					
ANR	3456309	ArgumentList	""" %s\\n"" , val ? ""true"" : ""false"""		3455272	1					
ANR	3456310	Argument	""" %s\\n"" , val ? ""true"" : ""false"""		3455272	0					
ANR	3456311	Expression	""" %s\\n"" , val ? ""true"" : ""false"""		3455272	0					
ANR	3456312	PrimaryExpression	""" %s\\n"""		3455272	0					
ANR	3456313	ConditionalExpression	"val ? ""true"" : ""false"""		3455272	1					
ANR	3456314	Condition	val		3455272	0					
ANR	3456315	Identifier	val		3455272	0					
ANR	3456316	PrimaryExpression	"""true"""		3455272	1					
ANR	3456317	PrimaryExpression	"""false"""		3455272	2					
ANR	3456318	BreakStatement	break ;	1583:16:43763:43768	3455272	2	True				
ANR	3456319	Label	case cff_kind_string :	1585:14:43785:43805	3455272	3	True				
ANR	3456320	Identifier	cff_kind_string		3455272	0					
ANR	3456321	ExpressionStatement	"FT_TRACE4 ( ( "" %ld (SID)\\n"" , val ) )"	1586:16:43823:43857	3455272	4	True				
ANR	3456322	CallExpression	"FT_TRACE4 ( ( "" %ld (SID)\\n"" , val ) )"		3455272	0					
ANR	3456323	Callee	FT_TRACE4		3455272	0					
ANR	3456324	Identifier	FT_TRACE4		3455272	0					
ANR	3456325	ArgumentList	""" %ld (SID)\\n"" , val"		3455272	1					
ANR	3456326	Argument	""" %ld (SID)\\n"" , val"		3455272	0					
ANR	3456327	Expression	""" %ld (SID)\\n"" , val"		3455272	0					
ANR	3456328	PrimaryExpression	""" %ld (SID)\\n"""		3455272	0					
ANR	3456329	Identifier	val		3455272	1					
ANR	3456330	BreakStatement	break ;	1587:16:43875:43880	3455272	5	True				
ANR	3456331	Label	case cff_kind_num :	1589:14:43897:43914	3455272	6	True				
ANR	3456332	Identifier	cff_kind_num		3455272	0					
ANR	3456333	ExpressionStatement	"FT_TRACE4 ( ( "" %ld\\n"" , val ) )"	1590:16:43932:43960	3455272	7	True				
ANR	3456334	CallExpression	"FT_TRACE4 ( ( "" %ld\\n"" , val ) )"		3455272	0					
ANR	3456335	Callee	FT_TRACE4		3455272	0					
ANR	3456336	Identifier	FT_TRACE4		3455272	0					
ANR	3456337	ArgumentList	""" %ld\\n"" , val"		3455272	1					
ANR	3456338	Argument	""" %ld\\n"" , val"		3455272	0					
ANR	3456339	Expression	""" %ld\\n"" , val"		3455272	0					
ANR	3456340	PrimaryExpression	""" %ld\\n"""		3455272	0					
ANR	3456341	Identifier	val		3455272	1					
ANR	3456342	BreakStatement	break ;	1591:16:43978:43983	3455272	8	True				
ANR	3456343	Label	case cff_kind_fixed :	1593:14:44000:44019	3455272	9	True				
ANR	3456344	Identifier	cff_kind_fixed		3455272	0					
ANR	3456345	ExpressionStatement	"FT_TRACE4 ( ( "" %f\\n"" , ( double ) val / 65536 ) )"	1594:16:44037:44080	3455272	10	True				
ANR	3456346	CallExpression	"FT_TRACE4 ( ( "" %f\\n"" , ( double ) val / 65536 ) )"		3455272	0					
ANR	3456347	Callee	FT_TRACE4		3455272	0					
ANR	3456348	Identifier	FT_TRACE4		3455272	0					
ANR	3456349	ArgumentList	""" %f\\n"" , ( double ) val / 65536"		3455272	1					
ANR	3456350	Argument	""" %f\\n"" , ( double ) val / 65536"		3455272	0					
ANR	3456351	Expression	""" %f\\n"" , ( double ) val / 65536"		3455272	0					
ANR	3456352	PrimaryExpression	""" %f\\n"""		3455272	0					
ANR	3456353	MultiplicativeExpression	( double ) val / 65536		3455272	1		/			
ANR	3456354	CastExpression	( double ) val		3455272	0					
ANR	3456355	CastTarget	double		3455272	0					
ANR	3456356	Identifier	val		3455272	1					
ANR	3456357	PrimaryExpression	65536		3455272	1					
ANR	3456358	BreakStatement	break ;	1595:16:44098:44103	3455272	11	True				
ANR	3456359	Label	case cff_kind_fixed_thousand :	1597:14:44120:44148	3455272	12	True				
ANR	3456360	Identifier	cff_kind_fixed_thousand		3455272	0					
ANR	3456361	ExpressionStatement	"FT_TRACE4 ( ( "" %f\\n"" , ( double ) val / 65536 / 1000 ) )"	1598:16:44166:44216	3455272	13	True				
ANR	3456362	CallExpression	"FT_TRACE4 ( ( "" %f\\n"" , ( double ) val / 65536 / 1000 ) )"		3455272	0					
ANR	3456363	Callee	FT_TRACE4		3455272	0					
ANR	3456364	Identifier	FT_TRACE4		3455272	0					
ANR	3456365	ArgumentList	""" %f\\n"" , ( double ) val / 65536 / 1000"		3455272	1					
ANR	3456366	Argument	""" %f\\n"" , ( double ) val / 65536 / 1000"		3455272	0					
ANR	3456367	Expression	""" %f\\n"" , ( double ) val / 65536 / 1000"		3455272	0					
ANR	3456368	PrimaryExpression	""" %f\\n"""		3455272	0					
ANR	3456369	MultiplicativeExpression	( double ) val / 65536 / 1000		3455272	1		/			
ANR	3456370	CastExpression	( double ) val		3455272	0					
ANR	3456371	CastTarget	double		3455272	0					
ANR	3456372	Identifier	val		3455272	1					
ANR	3456373	MultiplicativeExpression	65536 / 1000		3455272	1		/			
ANR	3456374	PrimaryExpression	65536		3455272	0					
ANR	3456375	PrimaryExpression	1000		3455272	1					
ANR	3456376	Label	default :	1600:14:44233:44240	3455272	14	True				
ANR	3456377	Identifier	default		3455272	0					
ANR	3456378	ExpressionStatement		1601:16:44258:44258	3455272	15	True				
ANR	3456379	BreakStatement	break ;	1605:14:44318:44323	3455272	13	True				
ANR	3456380	Label	case cff_kind_delta :	1607:12:44338:44357	3455272	14	True				
ANR	3456381	Identifier	cff_kind_delta		3455272	0					
ANR	3456382	CompoundStatement		310:16:8678:8709	3455272	15					
ANR	3456383	IdentifierDeclStatement	FT_Byte * qcount = ( FT_Byte * ) parser -> object + field -> count_offset ;	1609:16:44391:44495	3455272	0	True				
ANR	3456384	IdentifierDecl	* qcount = ( FT_Byte * ) parser -> object + field -> count_offset		3455272	0					
ANR	3456385	IdentifierDeclType	FT_Byte *		3455272	0					
ANR	3456386	Identifier	qcount		3455272	1					
ANR	3456387	AssignmentExpression	* qcount = ( FT_Byte * ) parser -> object + field -> count_offset		3455272	2		=			
ANR	3456388	Identifier	qcount		3455272	0					
ANR	3456389	AdditiveExpression	( FT_Byte * ) parser -> object + field -> count_offset		3455272	1		+			
ANR	3456390	CastExpression	( FT_Byte * ) parser -> object		3455272	0					
ANR	3456391	CastTarget	FT_Byte *		3455272	0					
ANR	3456392	PtrMemberAccess	parser -> object		3455272	1					
ANR	3456393	Identifier	parser		3455272	0					
ANR	3456394	Identifier	object		3455272	1					
ANR	3456395	PtrMemberAccess	field -> count_offset		3455272	1					
ANR	3456396	Identifier	field		3455272	0					
ANR	3456397	Identifier	count_offset		3455272	1					
ANR	3456398	IdentifierDeclStatement	FT_Byte * * data = parser -> stack ;	1612:16:44514:44545	3455272	1	True				
ANR	3456399	IdentifierDecl	* * data = parser -> stack		3455272	0					
ANR	3456400	IdentifierDeclType	FT_Byte * *		3455272	0					
ANR	3456401	Identifier	data		3455272	1					
ANR	3456402	AssignmentExpression	* * data = parser -> stack		3455272	2		=			
ANR	3456403	Identifier	data		3455272	0					
ANR	3456404	PtrMemberAccess	parser -> stack		3455272	1					
ANR	3456405	Identifier	parser		3455272	0					
ANR	3456406	Identifier	stack		3455272	1					
ANR	3456407	IfStatement	if ( num_args > field -> array_max )		3455272	2					
ANR	3456408	Condition	num_args > field -> array_max	1615:21:44570:44596	3455272	0	True				
ANR	3456409	RelationalExpression	num_args > field -> array_max		3455272	0		>			
ANR	3456410	Identifier	num_args		3455272	0					
ANR	3456411	PtrMemberAccess	field -> array_max		3455272	1					
ANR	3456412	Identifier	field		3455272	0					
ANR	3456413	Identifier	array_max		3455272	1					
ANR	3456414	ExpressionStatement	num_args = field -> array_max	1616:18:44618:44645	3455272	1	True				
ANR	3456415	AssignmentExpression	num_args = field -> array_max		3455272	0		=			
ANR	3456416	Identifier	num_args		3455272	0					
ANR	3456417	PtrMemberAccess	field -> array_max		3455272	1					
ANR	3456418	Identifier	field		3455272	0					
ANR	3456419	Identifier	array_max		3455272	1					
ANR	3456420	ExpressionStatement	"FT_TRACE4 ( ( "" ["" ) )"	1618:16:44664:44683	3455272	3	True				
ANR	3456421	CallExpression	"FT_TRACE4 ( ( "" ["" ) )"		3455272	0					
ANR	3456422	Callee	FT_TRACE4		3455272	0					
ANR	3456423	Identifier	FT_TRACE4		3455272	0					
ANR	3456424	ArgumentList	""" ["""		3455272	1					
ANR	3456425	Argument	""" ["""		3455272	0					
ANR	3456426	PrimaryExpression	""" ["""		3455272	0					
ANR	3456427	ExpressionStatement	* qcount = ( FT_Byte ) num_args	1621:16:44736:44763	3455272	4	True				
ANR	3456428	AssignmentExpression	* qcount = ( FT_Byte ) num_args		3455272	0		=			
ANR	3456429	UnaryOperationExpression	* qcount		3455272	0					
ANR	3456430	UnaryOperator	*		3455272	0					
ANR	3456431	Identifier	qcount		3455272	1					
ANR	3456432	CastExpression	( FT_Byte ) num_args		3455272	1					
ANR	3456433	CastTarget	FT_Byte		3455272	0					
ANR	3456434	Identifier	num_args		3455272	1					
ANR	3456435	ExpressionStatement	val = 0	1623:16:44782:44789	3455272	5	True				
ANR	3456436	AssignmentExpression	val = 0		3455272	0		=			
ANR	3456437	Identifier	val		3455272	0					
ANR	3456438	PrimaryExpression	0		3455272	1					
ANR	3456439	WhileStatement	while ( num_args > 0 )		3455272	6					
ANR	3456440	Condition	num_args > 0	1624:24:44815:44826	3455272	0	True				
ANR	3456441	RelationalExpression	num_args > 0		3455272	0		>			
ANR	3456442	Identifier	num_args		3455272	0					
ANR	3456443	PrimaryExpression	0		3455272	1					
ANR	3456444	CompoundStatement		323:16:9010:9010	3455272	1					
ANR	3456445	ExpressionStatement	"val = ADD_LONG ( val , cff_parse_num ( parser , data ++ ) )"	1626:18:44866:44920	3455272	0	True				
ANR	3456446	AssignmentExpression	"val = ADD_LONG ( val , cff_parse_num ( parser , data ++ ) )"		3455272	0		=			
ANR	3456447	Identifier	val		3455272	0					
ANR	3456448	CallExpression	"ADD_LONG ( val , cff_parse_num ( parser , data ++ ) )"		3455272	1					
ANR	3456449	Callee	ADD_LONG		3455272	0					
ANR	3456450	Identifier	ADD_LONG		3455272	0					
ANR	3456451	ArgumentList	val		3455272	1					
ANR	3456452	Argument	val		3455272	0					
ANR	3456453	Identifier	val		3455272	0					
ANR	3456454	Argument	"cff_parse_num ( parser , data ++ )"		3455272	1					
ANR	3456455	CallExpression	"cff_parse_num ( parser , data ++ )"		3455272	0					
ANR	3456456	Callee	cff_parse_num		3455272	0					
ANR	3456457	Identifier	cff_parse_num		3455272	0					
ANR	3456458	ArgumentList	parser		3455272	1					
ANR	3456459	Argument	parser		3455272	0					
ANR	3456460	Identifier	parser		3455272	0					
ANR	3456461	Argument	data ++		3455272	1					
ANR	3456462	PostIncDecOperationExpression	data ++		3455272	0					
ANR	3456463	Identifier	data		3455272	0					
ANR	3456464	IncDec	++		3455272	1					
ANR	3456465	SwitchStatement	switch ( field -> size )		3455272	1					
ANR	3456466	Condition	field -> size	1627:27:44949:44959	3455272	0	True				
ANR	3456467	PtrMemberAccess	field -> size		3455272	0					
ANR	3456468	Identifier	field		3455272	0					
ANR	3456469	Identifier	size		3455272	1					
ANR	3456470	CompoundStatement		326:18:9145:9145	3455272	1					
ANR	3456471	Statement	case	1629:18:45001:45004	3455272	0	True				
ANR	3456472	Statement	(	1629:23:45006:45006	3455272	1	True				
ANR	3456473	Statement	8	1629:24:45007:45007	3455272	2	True				
ANR	3456474	Statement	/	1629:26:45009:45009	3455272	3	True				
ANR	3456475	Statement	FT_CHAR_BIT	1629:28:45011:45021	3455272	4	True				
ANR	3456476	Statement	)	1629:39:45022:45022	3455272	5	True				
ANR	3456477	Statement	:	1629:40:45023:45023	3455272	6	True				
ANR	3456478	ExpressionStatement	* ( FT_Byte * ) q = ( FT_Byte ) val	1630:20:45045:45072	3455272	7	True				
ANR	3456479	AssignmentExpression	* ( FT_Byte * ) q = ( FT_Byte ) val		3455272	0		=			
ANR	3456480	UnaryOperationExpression	* ( FT_Byte * ) q		3455272	0					
ANR	3456481	UnaryOperator	*		3455272	0					
ANR	3456482	CastExpression	( FT_Byte * ) q		3455272	1					
ANR	3456483	CastTarget	FT_Byte *		3455272	0					
ANR	3456484	Identifier	q		3455272	1					
ANR	3456485	CastExpression	( FT_Byte ) val		3455272	1					
ANR	3456486	CastTarget	FT_Byte		3455272	0					
ANR	3456487	Identifier	val		3455272	1					
ANR	3456488	BreakStatement	break ;	1631:20:45094:45099	3455272	8	True				
ANR	3456489	Statement	case	1633:18:45120:45123	3455272	9	True				
ANR	3456490	Statement	(	1633:23:45125:45125	3455272	10	True				
ANR	3456491	Statement	16	1633:24:45126:45127	3455272	11	True				
ANR	3456492	Statement	/	1633:27:45129:45129	3455272	12	True				
ANR	3456493	Statement	FT_CHAR_BIT	1633:29:45131:45141	3455272	13	True				
ANR	3456494	Statement	)	1633:40:45142:45142	3455272	14	True				
ANR	3456495	Statement	:	1633:41:45143:45143	3455272	15	True				
ANR	3456496	ExpressionStatement	* ( FT_Short * ) q = ( FT_Short ) val	1634:20:45165:45194	3455272	16	True				
ANR	3456497	AssignmentExpression	* ( FT_Short * ) q = ( FT_Short ) val		3455272	0		=			
ANR	3456498	UnaryOperationExpression	* ( FT_Short * ) q		3455272	0					
ANR	3456499	UnaryOperator	*		3455272	0					
ANR	3456500	CastExpression	( FT_Short * ) q		3455272	1					
ANR	3456501	CastTarget	FT_Short *		3455272	0					
ANR	3456502	Identifier	q		3455272	1					
ANR	3456503	CastExpression	( FT_Short ) val		3455272	1					
ANR	3456504	CastTarget	FT_Short		3455272	0					
ANR	3456505	Identifier	val		3455272	1					
ANR	3456506	BreakStatement	break ;	1635:20:45216:45221	3455272	17	True				
ANR	3456507	Statement	case	1637:18:45242:45245	3455272	18	True				
ANR	3456508	Statement	(	1637:23:45247:45247	3455272	19	True				
ANR	3456509	Statement	32	1637:24:45248:45249	3455272	20	True				
ANR	3456510	Statement	/	1637:27:45251:45251	3455272	21	True				
ANR	3456511	Statement	FT_CHAR_BIT	1637:29:45253:45263	3455272	22	True				
ANR	3456512	Statement	)	1637:40:45264:45264	3455272	23	True				
ANR	3456513	Statement	:	1637:41:45265:45265	3455272	24	True				
ANR	3456514	ExpressionStatement	* ( FT_Int32 * ) q = ( FT_Int ) val	1638:20:45287:45314	3455272	25	True				
ANR	3456515	AssignmentExpression	* ( FT_Int32 * ) q = ( FT_Int ) val		3455272	0		=			
ANR	3456516	UnaryOperationExpression	* ( FT_Int32 * ) q		3455272	0					
ANR	3456517	UnaryOperator	*		3455272	0					
ANR	3456518	CastExpression	( FT_Int32 * ) q		3455272	1					
ANR	3456519	CastTarget	FT_Int32 *		3455272	0					
ANR	3456520	Identifier	q		3455272	1					
ANR	3456521	CastExpression	( FT_Int ) val		3455272	1					
ANR	3456522	CastTarget	FT_Int		3455272	0					
ANR	3456523	Identifier	val		3455272	1					
ANR	3456524	BreakStatement	break ;	1639:20:45336:45341	3455272	26	True				
ANR	3456525	Label	default :	1641:18:45362:45369	3455272	27	True				
ANR	3456526	Identifier	default		3455272	0					
ANR	3456527	ExpressionStatement	* ( FT_Long * ) q = val	1642:20:45417:45435	3455272	28	True				
ANR	3456528	AssignmentExpression	* ( FT_Long * ) q = val		3455272	0		=			
ANR	3456529	UnaryOperationExpression	* ( FT_Long * ) q		3455272	0					
ANR	3456530	UnaryOperator	*		3455272	0					
ANR	3456531	CastExpression	( FT_Long * ) q		3455272	1					
ANR	3456532	CastTarget	FT_Long *		3455272	0					
ANR	3456533	Identifier	q		3455272	1					
ANR	3456534	Identifier	val		3455272	1					
ANR	3456535	ExpressionStatement	"FT_TRACE4 ( ( "" %ld"" , val ) )"	1645:18:45476:45502	3455272	2	True				
ANR	3456536	CallExpression	"FT_TRACE4 ( ( "" %ld"" , val ) )"		3455272	0					
ANR	3456537	Callee	FT_TRACE4		3455272	0					
ANR	3456538	Identifier	FT_TRACE4		3455272	0					
ANR	3456539	ArgumentList	""" %ld"" , val"		3455272	1					
ANR	3456540	Argument	""" %ld"" , val"		3455272	0					
ANR	3456541	Expression	""" %ld"" , val"		3455272	0					
ANR	3456542	PrimaryExpression	""" %ld"""		3455272	0					
ANR	3456543	Identifier	val		3455272	1					
ANR	3456544	ExpressionStatement	q += field -> size	1647:18:45523:45539	3455272	3	True				
ANR	3456545	AssignmentExpression	q += field -> size		3455272	0		+=			
ANR	3456546	Identifier	q		3455272	0					
ANR	3456547	PtrMemberAccess	field -> size		3455272	1					
ANR	3456548	Identifier	field		3455272	0					
ANR	3456549	Identifier	size		3455272	1					
ANR	3456550	ExpressionStatement	num_args --	1648:18:45559:45569	3455272	4	True				
ANR	3456551	PostIncDecOperationExpression	num_args --		3455272	0					
ANR	3456552	Identifier	num_args		3455272	0					
ANR	3456553	IncDec	--		3455272	1					
ANR	3456554	ExpressionStatement	"FT_TRACE4 ( ( ""]\\n"" ) )"	1651:16:45606:45626	3455272	7	True				
ANR	3456555	CallExpression	"FT_TRACE4 ( ( ""]\\n"" ) )"		3455272	0					
ANR	3456556	Callee	FT_TRACE4		3455272	0					
ANR	3456557	Identifier	FT_TRACE4		3455272	0					
ANR	3456558	ArgumentList	"""]\\n"""		3455272	1					
ANR	3456559	Argument	"""]\\n"""		3455272	0					
ANR	3456560	PrimaryExpression	"""]\\n"""		3455272	0					
ANR	3456561	BreakStatement	break ;	1653:14:45658:45663	3455272	16	True				
ANR	3456562	Label	default :	1655:12:45678:45685	3455272	17	True				
ANR	3456563	Identifier	default		3455272	0					
ANR	3456564	ExpressionStatement	error = field -> reader ( parser )	1656:14:45726:45757	3455272	18	True				
ANR	3456565	AssignmentExpression	error = field -> reader ( parser )		3455272	0		=			
ANR	3456566	Identifier	error		3455272	0					
ANR	3456567	CallExpression	field -> reader ( parser )		3455272	1					
ANR	3456568	Callee	field -> reader		3455272	0					
ANR	3456569	PtrMemberAccess	field -> reader		3455272	0					
ANR	3456570	Identifier	field		3455272	0					
ANR	3456571	Identifier	reader		3455272	1					
ANR	3456572	ArgumentList	parser		3455272	1					
ANR	3456573	Argument	parser		3455272	0					
ANR	3456574	Identifier	parser		3455272	0					
ANR	3456575	IfStatement	if ( error )		3455272	19					
ANR	3456576	Condition	error	1657:19:45778:45782	3455272	0	True				
ANR	3456577	Identifier	error		3455272	0					
ANR	3456578	GotoStatement	goto Exit ;	1658:16:45802:45811	3455272	1	True				
ANR	3456579	Identifier	Exit		3455272	0					
ANR	3456580	GotoStatement	goto Found ;	1660:12:45839:45849	3455272	5	True				
ANR	3456581	Identifier	Found		3455272	0					
ANR	3456582	Label	Found :	1667:6:46011:46016	3455272	10	True				
ANR	3456583	Identifier	Found		3455272	0					
ANR	3456584	IfStatement	if ( field -> kind != cff_kind_blend )		3455272	11					
ANR	3456585	Condition	field -> kind != cff_kind_blend	1671:13:46169:46197	3455272	0	True				
ANR	3456586	EqualityExpression	field -> kind != cff_kind_blend		3455272	0		!=			
ANR	3456587	PtrMemberAccess	field -> kind		3455272	0					
ANR	3456588	Identifier	field		3455272	0					
ANR	3456589	Identifier	kind		3455272	1					
ANR	3456590	Identifier	cff_kind_blend		3455272	1					
ANR	3456591	ExpressionStatement	parser -> top = parser -> stack	1672:10:46211:46238	3455272	1	True				
ANR	3456592	AssignmentExpression	parser -> top = parser -> stack		3455272	0		=			
ANR	3456593	PtrMemberAccess	parser -> top		3455272	0					
ANR	3456594	Identifier	parser		3455272	0					
ANR	3456595	Identifier	top		3455272	1					
ANR	3456596	PtrMemberAccess	parser -> stack		3455272	1					
ANR	3456597	Identifier	parser		3455272	0					
ANR	3456598	Identifier	stack		3455272	1					
ANR	3456599	ExpressionStatement	p ++	1674:6:46254:46257	3455272	2	True				
ANR	3456600	PostIncDecOperationExpression	p ++		3455272	0					
ANR	3456601	Identifier	p		3455272	0					
ANR	3456602	IncDec	++		3455272	1					
ANR	3456603	Label	Exit :	1677:2:46268:46272	3455272	10	True				
ANR	3456604	Identifier	Exit		3455272	0					
ANR	3456605	ReturnStatement	return error ;	1678:4:46278:46290	3455272	11	True				
ANR	3456606	Identifier	error		3455272	0					
ANR	3456607	Label	Stack_Overflow :	1680:2:46295:46309	3455272	12	True				
ANR	3456608	Identifier	Stack_Overflow		3455272	0					
ANR	3456609	ExpressionStatement	error = FT_THROW ( Invalid_Argument )	1681:4:46315:46351	3455272	13	True				
ANR	3456610	AssignmentExpression	error = FT_THROW ( Invalid_Argument )		3455272	0		=			
ANR	3456611	Identifier	error		3455272	0					
ANR	3456612	CallExpression	FT_THROW ( Invalid_Argument )		3455272	1					
ANR	3456613	Callee	FT_THROW		3455272	0					
ANR	3456614	Identifier	FT_THROW		3455272	0					
ANR	3456615	ArgumentList	Invalid_Argument		3455272	1					
ANR	3456616	Argument	Invalid_Argument		3455272	0					
ANR	3456617	Identifier	Invalid_Argument		3455272	0					
ANR	3456618	GotoStatement	goto Exit ;	1682:4:46357:46366	3455272	14	True				
ANR	3456619	Identifier	Exit		3455272	0					
ANR	3456620	Label	Stack_Underflow :	1684:2:46371:46386	3455272	15	True				
ANR	3456621	Identifier	Stack_Underflow		3455272	0					
ANR	3456622	ExpressionStatement	error = FT_THROW ( Invalid_Argument )	1685:4:46392:46428	3455272	16	True				
ANR	3456623	AssignmentExpression	error = FT_THROW ( Invalid_Argument )		3455272	0		=			
ANR	3456624	Identifier	error		3455272	0					
ANR	3456625	CallExpression	FT_THROW ( Invalid_Argument )		3455272	1					
ANR	3456626	Callee	FT_THROW		3455272	0					
ANR	3456627	Identifier	FT_THROW		3455272	0					
ANR	3456628	ArgumentList	Invalid_Argument		3455272	1					
ANR	3456629	Argument	Invalid_Argument		3455272	0					
ANR	3456630	Identifier	Invalid_Argument		3455272	0					
ANR	3456631	GotoStatement	goto Exit ;	1686:4:46434:46443	3455272	17	True				
ANR	3456632	Identifier	Exit		3455272	0					
ANR	3456633	Label	Syntax_Error :	1688:2:46448:46460	3455272	18	True				
ANR	3456634	Identifier	Syntax_Error		3455272	0					
ANR	3456635	ExpressionStatement	error = FT_THROW ( Invalid_Argument )	1689:4:46466:46502	3455272	19	True				
ANR	3456636	AssignmentExpression	error = FT_THROW ( Invalid_Argument )		3455272	0		=			
ANR	3456637	Identifier	error		3455272	0					
ANR	3456638	CallExpression	FT_THROW ( Invalid_Argument )		3455272	1					
ANR	3456639	Callee	FT_THROW		3455272	0					
ANR	3456640	Identifier	FT_THROW		3455272	0					
ANR	3456641	ArgumentList	Invalid_Argument		3455272	1					
ANR	3456642	Argument	Invalid_Argument		3455272	0					
ANR	3456643	Identifier	Invalid_Argument		3455272	0					
ANR	3456644	GotoStatement	goto Exit ;	1690:4:46508:46517	3455272	20	True				
ANR	3456645	Identifier	Exit		3455272	0					
ANR	3456646	Identifier	cff_parser_run		3455272	1					
ANR	3456647	ParameterList	"CFF_Parser parser , FT_Byte * start , FT_Byte * limit"		3455272	2					
ANR	3456648	Parameter	CFF_Parser parser	1300:18:35738:35755	3455272	0	True				
ANR	3456649	ParameterType	CFF_Parser		3455272	0					
ANR	3456650	Identifier	parser		3455272	1					
ANR	3456651	Parameter	FT_Byte * start	1301:18:35776:35792	3455272	1	True				
ANR	3456652	ParameterType	FT_Byte *		3455272	0					
ANR	3456653	Identifier	start		3455272	1					
ANR	3456654	Parameter	FT_Byte * limit	1302:18:35813:35829	3455272	2	True				
ANR	3456655	ParameterType	FT_Byte *		3455272	0					
ANR	3456656	Identifier	limit		3455272	1					
ANR	3456657	CFGEntryNode	ENTRY		3455272		True				
ANR	3456658	CFGExitNode	EXIT		3455272		True				
ANR	3456659	InfiniteForNode	true		3455272		True				
ANR	3456660	InfiniteForNode	true		3455272		True				
ANR	3456661	Symbol	psaux		3455272						
ANR	3456662	Symbol	stack		3455272						
ANR	3456663	Symbol	psaux -> cff_decoder_funcs -> parse_charstrings_old		3455272						
ANR	3456664	Symbol	FT_Err_Ok		3455272						
ANR	3456665	Symbol	data		3455272						
ANR	3456666	Symbol	num		3455272						
ANR	3456667	Symbol	* q ++		3455272						
ANR	3456668	Symbol	field -> code		3455272						
ANR	3456669	Symbol	cff_kind_blend		3455272						
ANR	3456670	Symbol	cff_parse_num		3455272						
ANR	3456671	Symbol	field -> size		3455272						
ANR	3456672	Symbol	* ( FT_Long * ) q		3455272						
ANR	3456673	Symbol	charstring_base		3455272						
ANR	3456674	Symbol	* parser -> top		3455272						
ANR	3456675	Symbol	cff_parse_fixed		3455272						
ANR	3456676	Symbol	* ( FT_Short * ) q		3455272						
ANR	3456677	Symbol	neg		3455272						
ANR	3456678	Symbol	cff_parse_fixed_scaled		3455272						
ANR	3456679	Symbol	& cff_rec		3455272						
ANR	3456680	Symbol	num_args		3455272						
ANR	3456681	Symbol	limit		3455272						
ANR	3456682	Symbol	Missing_Module		3455272						
ANR	3456683	Symbol	field -> id		3455272						
ANR	3456684	Symbol	cff_rec . top_font . font_dict . num_axes		3455272						
ANR	3456685	Symbol	parser -> stack		3455272						
ANR	3456686	Symbol	cff_rec . top_font		3455272						
ANR	3456687	Symbol	field -> kind		3455272						
ANR	3456688	Symbol	parser -> stackSize		3455272						
ANR	3456689	Symbol	val		3455272						
ANR	3456690	Symbol	parser -> num_designs		3455272						
ANR	3456691	Symbol	psaux -> cff_decoder_funcs		3455272						
ANR	3456692	Symbol	field -> offset		3455272						
ANR	3456693	Symbol	* psaux -> cff_decoder_funcs		3455272						
ANR	3456694	Symbol	decoder		3455272						
ANR	3456695	Symbol	* psaux		3455272						
ANR	3456696	Symbol	* field		3455272						
ANR	3456697	Symbol	parser -> limit		3455272						
ANR	3456698	Symbol	FT_Get_Module_Interface		3455272						
ANR	3456699	Symbol	* parser		3455272						
ANR	3456700	Symbol	cff_rec . top_font . font_dict . num_designs		3455272						
ANR	3456701	Symbol	parser -> start		3455272						
ANR	3456702	Symbol	parser		3455272						
ANR	3456703	Symbol	field		3455272						
ANR	3456704	Symbol	parser -> library		3455272						
ANR	3456705	Symbol	* parser -> top ++		3455272						
ANR	3456706	Symbol	code		3455272						
ANR	3456707	Symbol	qcount		3455272						
ANR	3456708	Symbol	field -> reader		3455272						
ANR	3456709	Symbol	parser -> object		3455272						
ANR	3456710	Symbol	ADD_LONG		3455272						
ANR	3456711	Symbol	cff_rec . top_font . font_dict		3455272						
ANR	3456712	Symbol	* qcount		3455272						
ANR	3456713	Symbol	cff_kind_delta		3455272						
ANR	3456714	Symbol	* ( FT_Int32 * ) q		3455272						
ANR	3456715	Symbol	error		3455272						
ANR	3456716	Symbol	decoder . cff		3455272						
ANR	3456717	Symbol	parser -> top		3455272						
ANR	3456718	Symbol	parser -> object_code		3455272						
ANR	3456719	Symbol	library		3455272						
ANR	3456720	Symbol	cff_rec		3455272						
ANR	3456721	Symbol	charstring_len		3455272						
ANR	3456722	Symbol	* * psaux		3455272						
ANR	3456723	Symbol	* ( FT_Byte * ) q		3455272						
ANR	3456724	Symbol	decoder . top		3455272						
ANR	3456725	Symbol	decoder . stack		3455272						
ANR	3456726	Symbol	CFF_FIELD_HANDLERS_GET		3455272						
ANR	3456727	Symbol	start		3455272						
ANR	3456728	Symbol	Invalid_Argument		3455272						
ANR	3456729	Symbol	FT_THROW		3455272						
ANR	3456730	Symbol	p		3455272						
ANR	3456731	Symbol	q		3455272						
ANR	3456732	Symbol	* * parser		3455272						
ANR	3456733	Symbol	v		3455272						
ANR	3456734	Symbol	& decoder		3455272						
ANR	3456735	Symbol	field -> count_offset		3455272						
ANR	3456736	Symbol	parser -> cursor		3455272						
ANR	3456737	Symbol	* stack		3455272						
ANR	3456738	Symbol	* p		3455272						
ANR	3456739	Symbol	field -> array_max		3455272						
ANR	3456740	Symbol	* q		3455272						
ANR	3456741	Symbol	parser -> num_axes		3455272						
