command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1419145	File	data/converged/CVE-2018-16863_ghostpdl/base_srle.c								
ANR	1419146	Function	s_RLE_set_defaults	28:0:792:938							
ANR	1419147	FunctionDef	s_RLE_set_defaults (stream_state * st)		1419146	0					
ANR	1419148	CompoundStatement		30:0:842:938	1419146	0					
ANR	1419149	Statement	stream_RLE_state	31:4:848:863	1419146	0	True				
ANR	1419150	Statement	*	31:21:865:865	1419146	1	True				
ANR	1419151	Statement	const	31:22:866:870	1419146	2	True				
ANR	1419152	ExpressionStatement	ss = ( stream_RLE_state * ) st	31:28:872:900	1419146	3	True				
ANR	1419153	AssignmentExpression	ss = ( stream_RLE_state * ) st		1419146	0		=			
ANR	1419154	Identifier	ss		1419146	0					
ANR	1419155	CastExpression	( stream_RLE_state * ) st		1419146	1					
ANR	1419156	CastTarget	stream_RLE_state *		1419146	0					
ANR	1419157	Identifier	st		1419146	1					
ANR	1419158	ExpressionStatement	s_RLE_set_defaults_inline ( ss )	33:4:907:936	1419146	4	True				
ANR	1419159	CallExpression	s_RLE_set_defaults_inline ( ss )		1419146	0					
ANR	1419160	Callee	s_RLE_set_defaults_inline		1419146	0					
ANR	1419161	Identifier	s_RLE_set_defaults_inline		1419146	0					
ANR	1419162	ArgumentList	ss		1419146	1					
ANR	1419163	Argument	ss		1419146	0					
ANR	1419164	Identifier	ss		1419146	0					
ANR	1419165	ReturnType	static void		1419146	1					
ANR	1419166	Identifier	s_RLE_set_defaults		1419146	2					
ANR	1419167	ParameterList	stream_state * st		1419146	3					
ANR	1419168	Parameter	stream_state * st	29:19:823:839	1419146	0	True				
ANR	1419169	ParameterType	stream_state *		1419146	0					
ANR	1419170	Identifier	st		1419146	1					
ANR	1419171	CFGEntryNode	ENTRY		1419146		True				
ANR	1419172	CFGExitNode	EXIT		1419146		True				
ANR	1419173	Symbol	ss		1419146						
ANR	1419174	Symbol	st		1419146						
ANR	1419175	Function	s_RLE_init	37:0:958:1094							
ANR	1419176	FunctionDef	s_RLE_init (stream_state * st)		1419175	0					
ANR	1419177	CompoundStatement		39:0:999:1094	1419175	0					
ANR	1419178	Statement	stream_RLE_state	40:4:1005:1020	1419175	0	True				
ANR	1419179	Statement	*	40:21:1022:1022	1419175	1	True				
ANR	1419180	Statement	const	40:22:1023:1027	1419175	2	True				
ANR	1419181	ExpressionStatement	ss = ( stream_RLE_state * ) st	40:28:1029:1057	1419175	3	True				
ANR	1419182	AssignmentExpression	ss = ( stream_RLE_state * ) st		1419175	0		=			
ANR	1419183	Identifier	ss		1419175	0					
ANR	1419184	CastExpression	( stream_RLE_state * ) st		1419175	1					
ANR	1419185	CastTarget	stream_RLE_state *		1419175	0					
ANR	1419186	Identifier	st		1419175	1					
ANR	1419187	ReturnStatement	return s_RLE_init_inline ( ss ) ;	42:4:1064:1092	1419175	4	True				
ANR	1419188	CallExpression	s_RLE_init_inline ( ss )		1419175	0					
ANR	1419189	Callee	s_RLE_init_inline		1419175	0					
ANR	1419190	Identifier	s_RLE_init_inline		1419175	0					
ANR	1419191	ArgumentList	ss		1419175	1					
ANR	1419192	Argument	ss		1419175	0					
ANR	1419193	Identifier	ss		1419175	0					
ANR	1419194	ReturnType	static int		1419175	1					
ANR	1419195	Identifier	s_RLE_init		1419175	2					
ANR	1419196	ParameterList	stream_state * st		1419175	3					
ANR	1419197	Parameter	stream_state * st	38:11:980:996	1419175	0	True				
ANR	1419198	ParameterType	stream_state *		1419175	0					
ANR	1419199	Identifier	st		1419175	1					
ANR	1419200	CFGEntryNode	ENTRY		1419175		True				
ANR	1419201	CFGExitNode	EXIT		1419175		True				
ANR	1419202	Symbol	ss		1419175						
ANR	1419203	Symbol	st		1419175						
ANR	1419204	Symbol	s_RLE_init_inline		1419175						
ANR	1419205	Function	s_RLE_process	46:0:1120:5432							
ANR	1419206	FunctionDef	"s_RLE_process (stream_state * st , stream_cursor_read * pr , stream_cursor_write * pw , bool last)"		1419205	0					
ANR	1419207	CompoundStatement		49:0:1240:5432	1419205	0					
ANR	1419208	Statement	stream_RLE_state	50:4:1246:1261	1419205	0	True				
ANR	1419209	Statement	*	50:21:1263:1263	1419205	1	True				
ANR	1419210	Statement	const	50:22:1264:1268	1419205	2	True				
ANR	1419211	ExpressionStatement	ss = ( stream_RLE_state * ) st	50:28:1270:1298	1419205	3	True				
ANR	1419212	AssignmentExpression	ss = ( stream_RLE_state * ) st		1419205	0		=			
ANR	1419213	Identifier	ss		1419205	0					
ANR	1419214	CastExpression	( stream_RLE_state * ) st		1419205	1					
ANR	1419215	CastTarget	stream_RLE_state *		1419205	0					
ANR	1419216	Identifier	st		1419205	1					
ANR	1419217	Statement	register	51:4:1304:1311	1419205	4	True				
ANR	1419218	IdentifierDeclStatement	const byte * p = pr -> ptr ;	51:13:1313:1336	1419205	5	True				
ANR	1419219	IdentifierDecl	* p = pr -> ptr		1419205	0					
ANR	1419220	IdentifierDeclType	const byte *		1419205	0					
ANR	1419221	Identifier	p		1419205	1					
ANR	1419222	AssignmentExpression	* p = pr -> ptr		1419205	2		=			
ANR	1419223	Identifier	p		1419205	0					
ANR	1419224	PtrMemberAccess	pr -> ptr		1419205	1					
ANR	1419225	Identifier	pr		1419205	0					
ANR	1419226	Identifier	ptr		1419205	1					
ANR	1419227	Statement	register	52:4:1342:1349	1419205	6	True				
ANR	1419228	IdentifierDeclStatement	byte * q = pw -> ptr ;	52:13:1351:1368	1419205	7	True				
ANR	1419229	IdentifierDecl	* q = pw -> ptr		1419205	0					
ANR	1419230	IdentifierDeclType	byte *		1419205	0					
ANR	1419231	Identifier	q		1419205	1					
ANR	1419232	AssignmentExpression	* q = pw -> ptr		1419205	2		=			
ANR	1419233	Identifier	q		1419205	0					
ANR	1419234	PtrMemberAccess	pw -> ptr		1419205	1					
ANR	1419235	Identifier	pw		1419205	0					
ANR	1419236	Identifier	ptr		1419205	1					
ANR	1419237	IdentifierDeclStatement	const byte * rlimit = pr -> limit ;	53:4:1374:1404	1419205	8	True				
ANR	1419238	IdentifierDecl	* rlimit = pr -> limit		1419205	0					
ANR	1419239	IdentifierDeclType	const byte *		1419205	0					
ANR	1419240	Identifier	rlimit		1419205	1					
ANR	1419241	AssignmentExpression	* rlimit = pr -> limit		1419205	2		=			
ANR	1419242	Identifier	rlimit		1419205	0					
ANR	1419243	PtrMemberAccess	pr -> limit		1419205	1					
ANR	1419244	Identifier	pr		1419205	0					
ANR	1419245	Identifier	limit		1419205	1					
ANR	1419246	IdentifierDeclStatement	byte * wlimit = pw -> limit ;	54:4:1410:1434	1419205	9	True				
ANR	1419247	IdentifierDecl	* wlimit = pw -> limit		1419205	0					
ANR	1419248	IdentifierDeclType	byte *		1419205	0					
ANR	1419249	Identifier	wlimit		1419205	1					
ANR	1419250	AssignmentExpression	* wlimit = pw -> limit		1419205	2		=			
ANR	1419251	Identifier	wlimit		1419205	0					
ANR	1419252	PtrMemberAccess	pw -> limit		1419205	1					
ANR	1419253	Identifier	pw		1419205	0					
ANR	1419254	Identifier	limit		1419205	1					
ANR	1419255	IdentifierDeclStatement	int status = 0 ;	55:4:1440:1454	1419205	10	True				
ANR	1419256	IdentifierDecl	status = 0		1419205	0					
ANR	1419257	IdentifierDeclType	int		1419205	0					
ANR	1419258	Identifier	status		1419205	1					
ANR	1419259	AssignmentExpression	status = 0		1419205	2		=			
ANR	1419260	Identifier	status		1419205	0					
ANR	1419261	PrimaryExpression	0		1419205	1					
ANR	1419262	IdentifierDeclStatement	ulong rleft = ss -> record_left ;	56:4:1460:1489	1419205	11	True				
ANR	1419263	IdentifierDecl	rleft = ss -> record_left		1419205	0					
ANR	1419264	IdentifierDeclType	ulong		1419205	0					
ANR	1419265	Identifier	rleft		1419205	1					
ANR	1419266	AssignmentExpression	rleft = ss -> record_left		1419205	2		=			
ANR	1419267	Identifier	rleft		1419205	0					
ANR	1419268	PtrMemberAccess	ss -> record_left		1419205	1					
ANR	1419269	Identifier	ss		1419205	0					
ANR	1419270	Identifier	record_left		1419205	1					
ANR	1419271	Label	copy :	71:0:2059:2063	1419205	12	True				
ANR	1419272	Identifier	copy		1419205	0					
ANR	1419273	IfStatement	if ( ss -> copy_left )		1419205	13					
ANR	1419274	Condition	ss -> copy_left	72:8:2073:2085	1419205	0	True				
ANR	1419275	PtrMemberAccess	ss -> copy_left		1419205	0					
ANR	1419276	Identifier	ss		1419205	0					
ANR	1419277	Identifier	copy_left		1419205	1					
ANR	1419278	CompoundStatement		27:8:925:951	1419205	1					
ANR	1419279	IdentifierDeclStatement	uint rcount = rlimit - p ;	73:8:2098:2122	1419205	0	True				
ANR	1419280	IdentifierDecl	rcount = rlimit - p		1419205	0					
ANR	1419281	IdentifierDeclType	uint		1419205	0					
ANR	1419282	Identifier	rcount		1419205	1					
ANR	1419283	AssignmentExpression	rcount = rlimit - p		1419205	2		=			
ANR	1419284	Identifier	rcount		1419205	0					
ANR	1419285	AdditiveExpression	rlimit - p		1419205	1		-			
ANR	1419286	Identifier	rlimit		1419205	0					
ANR	1419287	Identifier	p		1419205	1					
ANR	1419288	IdentifierDeclStatement	uint wcount = wlimit - q ;	74:8:2132:2156	1419205	1	True				
ANR	1419289	IdentifierDecl	wcount = wlimit - q		1419205	0					
ANR	1419290	IdentifierDeclType	uint		1419205	0					
ANR	1419291	Identifier	wcount		1419205	1					
ANR	1419292	AssignmentExpression	wcount = wlimit - q		1419205	2		=			
ANR	1419293	Identifier	wcount		1419205	0					
ANR	1419294	AdditiveExpression	wlimit - q		1419205	1		-			
ANR	1419295	Identifier	wlimit		1419205	0					
ANR	1419296	Identifier	q		1419205	1					
ANR	1419297	IdentifierDeclStatement	uint count = ss -> copy_left ;	75:8:2166:2192	1419205	2	True				
ANR	1419298	IdentifierDecl	count = ss -> copy_left		1419205	0					
ANR	1419299	IdentifierDeclType	uint		1419205	0					
ANR	1419300	Identifier	count		1419205	1					
ANR	1419301	AssignmentExpression	count = ss -> copy_left		1419205	2		=			
ANR	1419302	Identifier	count		1419205	0					
ANR	1419303	PtrMemberAccess	ss -> copy_left		1419205	1					
ANR	1419304	Identifier	ss		1419205	0					
ANR	1419305	Identifier	copy_left		1419205	1					
ANR	1419306	IfStatement	if ( rcount < count )		1419205	3					
ANR	1419307	Condition	rcount < count	77:12:2207:2220	1419205	0	True				
ANR	1419308	RelationalExpression	rcount < count		1419205	0		<			
ANR	1419309	Identifier	rcount		1419205	0					
ANR	1419310	Identifier	count		1419205	1					
ANR	1419311	ExpressionStatement	count = rcount	78:12:2235:2249	1419205	1	True				
ANR	1419312	AssignmentExpression	count = rcount		1419205	0		=			
ANR	1419313	Identifier	count		1419205	0					
ANR	1419314	Identifier	rcount		1419205	1					
ANR	1419315	IfStatement	if ( wcount < count )		1419205	4					
ANR	1419316	Condition	wcount < count	79:12:2263:2276	1419205	0	True				
ANR	1419317	RelationalExpression	wcount < count		1419205	0		<			
ANR	1419318	Identifier	wcount		1419205	0					
ANR	1419319	Identifier	count		1419205	1					
ANR	1419320	ExpressionStatement	count = wcount	80:12:2291:2305	1419205	1	True				
ANR	1419321	AssignmentExpression	count = wcount		1419205	0		=			
ANR	1419322	Identifier	count		1419205	0					
ANR	1419323	Identifier	wcount		1419205	1					
ANR	1419324	IfStatement	if ( rleft < count )		1419205	5					
ANR	1419325	Condition	rleft < count	81:12:2319:2331	1419205	0	True				
ANR	1419326	RelationalExpression	rleft < count		1419205	0		<			
ANR	1419327	Identifier	rleft		1419205	0					
ANR	1419328	Identifier	count		1419205	1					
ANR	1419329	ExpressionStatement	count = rleft	82:12:2346:2359	1419205	1	True				
ANR	1419330	AssignmentExpression	count = rleft		1419205	0		=			
ANR	1419331	Identifier	count		1419205	0					
ANR	1419332	Identifier	rleft		1419205	1					
ANR	1419333	ExpressionStatement	"memcpy ( q + 1 , p + 1 , count )"	83:8:2369:2396	1419205	6	True				
ANR	1419334	CallExpression	"memcpy ( q + 1 , p + 1 , count )"		1419205	0					
ANR	1419335	Callee	memcpy		1419205	0					
ANR	1419336	Identifier	memcpy		1419205	0					
ANR	1419337	ArgumentList	q + 1		1419205	1					
ANR	1419338	Argument	q + 1		1419205	0					
ANR	1419339	AdditiveExpression	q + 1		1419205	0		+			
ANR	1419340	Identifier	q		1419205	0					
ANR	1419341	PrimaryExpression	1		1419205	1					
ANR	1419342	Argument	p + 1		1419205	1					
ANR	1419343	AdditiveExpression	p + 1		1419205	0		+			
ANR	1419344	Identifier	p		1419205	0					
ANR	1419345	PrimaryExpression	1		1419205	1					
ANR	1419346	Argument	count		1419205	2					
ANR	1419347	Identifier	count		1419205	0					
ANR	1419348	ExpressionStatement	pr -> ptr = p += count	84:8:2406:2426	1419205	7	True				
ANR	1419349	AssignmentExpression	pr -> ptr = p += count		1419205	0		=			
ANR	1419350	PtrMemberAccess	pr -> ptr		1419205	0					
ANR	1419351	Identifier	pr		1419205	0					
ANR	1419352	Identifier	ptr		1419205	1					
ANR	1419353	AssignmentExpression	p += count		1419205	1		+=			
ANR	1419354	Identifier	p		1419205	0					
ANR	1419355	Identifier	count		1419205	1					
ANR	1419356	ExpressionStatement	pw -> ptr = q += count	85:8:2436:2456	1419205	8	True				
ANR	1419357	AssignmentExpression	pw -> ptr = q += count		1419205	0		=			
ANR	1419358	PtrMemberAccess	pw -> ptr		1419205	0					
ANR	1419359	Identifier	pw		1419205	0					
ANR	1419360	Identifier	ptr		1419205	1					
ANR	1419361	AssignmentExpression	q += count		1419205	1		+=			
ANR	1419362	Identifier	q		1419205	0					
ANR	1419363	Identifier	count		1419205	1					
ANR	1419364	IfStatement	if ( ( ss -> record_left = rleft -= count ) == 0 )		1419205	9					
ANR	1419365	Condition	( ss -> record_left = rleft -= count ) == 0	86:12:2470:2508	1419205	0	True				
ANR	1419366	EqualityExpression	( ss -> record_left = rleft -= count ) == 0		1419205	0		==			
ANR	1419367	AssignmentExpression	ss -> record_left = rleft -= count		1419205	0		=			
ANR	1419368	PtrMemberAccess	ss -> record_left		1419205	0					
ANR	1419369	Identifier	ss		1419205	0					
ANR	1419370	Identifier	record_left		1419205	1					
ANR	1419371	AssignmentExpression	rleft -= count		1419205	1		-=			
ANR	1419372	Identifier	rleft		1419205	0					
ANR	1419373	Identifier	count		1419205	1					
ANR	1419374	PrimaryExpression	0		1419205	1					
ANR	1419375	ExpressionStatement	ss -> record_left = rleft = ss -> record_size	87:12:2523:2564	1419205	1	True				
ANR	1419376	AssignmentExpression	ss -> record_left = rleft = ss -> record_size		1419205	0		=			
ANR	1419377	PtrMemberAccess	ss -> record_left		1419205	0					
ANR	1419378	Identifier	ss		1419205	0					
ANR	1419379	Identifier	record_left		1419205	1					
ANR	1419380	AssignmentExpression	rleft = ss -> record_size		1419205	1		=			
ANR	1419381	Identifier	rleft		1419205	0					
ANR	1419382	PtrMemberAccess	ss -> record_size		1419205	1					
ANR	1419383	Identifier	ss		1419205	0					
ANR	1419384	Identifier	record_size		1419205	1					
ANR	1419385	IfStatement	if ( ( ss -> copy_left -= count ) != 0 )		1419205	10					
ANR	1419386	Condition	( ss -> copy_left -= count ) != 0	88:12:2578:2606	1419205	0	True				
ANR	1419387	EqualityExpression	( ss -> copy_left -= count ) != 0		1419205	0		!=			
ANR	1419388	AssignmentExpression	ss -> copy_left -= count		1419205	0		-=			
ANR	1419389	PtrMemberAccess	ss -> copy_left		1419205	0					
ANR	1419390	Identifier	ss		1419205	0					
ANR	1419391	Identifier	copy_left		1419205	1					
ANR	1419392	Identifier	count		1419205	1					
ANR	1419393	PrimaryExpression	0		1419205	1					
ANR	1419394	ReturnStatement	return ( rcount == 0 ? 0 : 1 ) ;	89:12:2621:2649	1419205	1	True				
ANR	1419395	ConditionalExpression	rcount == 0 ? 0 : 1		1419205	0					
ANR	1419396	Condition	rcount == 0		1419205	0					
ANR	1419397	EqualityExpression	rcount == 0		1419205	0		==			
ANR	1419398	Identifier	rcount		1419205	0					
ANR	1419399	PrimaryExpression	0		1419205	1					
ANR	1419400	PrimaryExpression	0		1419205	1					
ANR	1419401	PrimaryExpression	1		1419205	2					
ANR	1419402	WhileStatement	while ( p < rlimit )		1419205	14					
ANR	1419403	Condition	p < rlimit	91:11:2668:2677	1419205	0	True				
ANR	1419404	RelationalExpression	p < rlimit		1419205	0		<			
ANR	1419405	Identifier	p		1419205	0					
ANR	1419406	Identifier	rlimit		1419205	1					
ANR	1419407	CompoundStatement		48:8:1560:1569	1419205	1					
ANR	1419408	IdentifierDeclStatement	const byte * beg = p ;	92:8:2690:2709	1419205	0	True				
ANR	1419409	IdentifierDecl	* beg = p		1419205	0					
ANR	1419410	IdentifierDeclType	const byte *		1419205	0					
ANR	1419411	Identifier	beg		1419205	1					
ANR	1419412	AssignmentExpression	* beg = p		1419205	2		=			
ANR	1419413	Identifier	p		1419205	0					
ANR	1419414	Identifier	p		1419205	1					
ANR	1419415	IdentifierDeclStatement	const byte * p1 ;	93:8:2719:2733	1419205	1	True				
ANR	1419416	IdentifierDecl	* p1		1419205	0					
ANR	1419417	IdentifierDeclType	const byte *		1419205	0					
ANR	1419418	Identifier	p1		1419205	1					
ANR	1419419	IdentifierDeclStatement	uint count = rlimit - p ;	94:8:2743:2766	1419205	2	True				
ANR	1419420	IdentifierDecl	count = rlimit - p		1419205	0					
ANR	1419421	IdentifierDeclType	uint		1419205	0					
ANR	1419422	Identifier	count		1419205	1					
ANR	1419423	AssignmentExpression	count = rlimit - p		1419205	2		=			
ANR	1419424	Identifier	count		1419205	0					
ANR	1419425	AdditiveExpression	rlimit - p		1419205	1		-			
ANR	1419426	Identifier	rlimit		1419205	0					
ANR	1419427	Identifier	p		1419205	1					
ANR	1419428	IdentifierDeclStatement	bool end = last ;	95:8:2776:2791	1419205	3	True				
ANR	1419429	IdentifierDecl	end = last		1419205	0					
ANR	1419430	IdentifierDeclType	bool		1419205	0					
ANR	1419431	Identifier	end		1419205	1					
ANR	1419432	AssignmentExpression	end = last		1419205	2		=			
ANR	1419433	Identifier	last		1419205	0					
ANR	1419434	Identifier	last		1419205	1					
ANR	1419435	IdentifierDeclStatement	byte next ;	96:8:2801:2810	1419205	4	True				
ANR	1419436	IdentifierDecl	next		1419205	0					
ANR	1419437	IdentifierDeclType	byte		1419205	0					
ANR	1419438	Identifier	next		1419205	1					
ANR	1419439	IfStatement	if ( count > rleft )		1419205	5					
ANR	1419440	Condition	count > rleft	98:12:2825:2837	1419205	0	True				
ANR	1419441	RelationalExpression	count > rleft		1419205	0		>			
ANR	1419442	Identifier	count		1419205	0					
ANR	1419443	Identifier	rleft		1419205	1					
ANR	1419444	ExpressionStatement	"count = rleft , end = true"	99:12:2852:2877	1419205	1	True				
ANR	1419445	Expression	"count = rleft , end = true"		1419205	0					
ANR	1419446	AssignmentExpression	count = rleft		1419205	0		=			
ANR	1419447	Identifier	count		1419205	0					
ANR	1419448	Identifier	rleft		1419205	1					
ANR	1419449	AssignmentExpression	end = true		1419205	1		=			
ANR	1419450	Identifier	end		1419205	0					
ANR	1419451	Identifier	true		1419205	1					
ANR	1419452	IfStatement	if ( count > 128 )		1419205	6					
ANR	1419453	Condition	count > 128	100:12:2891:2901	1419205	0	True				
ANR	1419454	RelationalExpression	count > 128		1419205	0		>			
ANR	1419455	Identifier	count		1419205	0					
ANR	1419456	PrimaryExpression	128		1419205	1					
ANR	1419457	ExpressionStatement	"count = 128 , end = true"	101:12:2916:2939	1419205	1	True				
ANR	1419458	Expression	"count = 128 , end = true"		1419205	0					
ANR	1419459	AssignmentExpression	count = 128		1419205	0		=			
ANR	1419460	Identifier	count		1419205	0					
ANR	1419461	PrimaryExpression	128		1419205	1					
ANR	1419462	AssignmentExpression	end = true		1419205	1		=			
ANR	1419463	Identifier	end		1419205	0					
ANR	1419464	Identifier	true		1419205	1					
ANR	1419465	ExpressionStatement	p1 = p + count - 1	102:8:2949:2967	1419205	7	True				
ANR	1419466	AssignmentExpression	p1 = p + count - 1		1419205	0		=			
ANR	1419467	Identifier	p1		1419205	0					
ANR	1419468	AdditiveExpression	p + count - 1		1419205	1		+			
ANR	1419469	Identifier	p		1419205	0					
ANR	1419470	AdditiveExpression	count - 1		1419205	1		-			
ANR	1419471	Identifier	count		1419205	0					
ANR	1419472	PrimaryExpression	1		1419205	1					
ANR	1419473	IfStatement	if ( count < 3 )		1419205	8					
ANR	1419474	Condition	count < 3	103:12:2981:2989	1419205	0	True				
ANR	1419475	RelationalExpression	count < 3		1419205	0		<			
ANR	1419476	Identifier	count		1419205	0					
ANR	1419477	PrimaryExpression	3		1419205	1					
ANR	1419478	CompoundStatement		55:23:1751:1751	1419205	1					
ANR	1419479	IfStatement	if ( ! end || count == 0 )		1419205	0					
ANR	1419480	Condition	! end || count == 0	104:16:3010:3027	1419205	0	True				
ANR	1419481	OrExpression	! end || count == 0		1419205	0		||			
ANR	1419482	UnaryOperationExpression	! end		1419205	0					
ANR	1419483	UnaryOperator	!		1419205	0					
ANR	1419484	Identifier	end		1419205	1					
ANR	1419485	EqualityExpression	count == 0		1419205	1		==			
ANR	1419486	Identifier	count		1419205	0					
ANR	1419487	PrimaryExpression	0		1419205	1					
ANR	1419488	BreakStatement	break ;	105:16:3046:3051	1419205	1	True				
ANR	1419489	IfStatement	if ( count == 1 )		1419205	1					
ANR	1419490	Condition	count == 1	106:16:3104:3113	1419205	0	True				
ANR	1419491	EqualityExpression	count == 1		1419205	0		==			
ANR	1419492	Identifier	count		1419205	0					
ANR	1419493	PrimaryExpression	1		1419205	1					
ANR	1419494	CompoundStatement		58:28:1875:1875	1419205	1					
ANR	1419495	IfStatement	if ( wlimit - q < 2 )		1419205	0					
ANR	1419496	Condition	wlimit - q < 2	107:20:3138:3151	1419205	0	True				
ANR	1419497	RelationalExpression	wlimit - q < 2		1419205	0		<			
ANR	1419498	AdditiveExpression	wlimit - q		1419205	0		-			
ANR	1419499	Identifier	wlimit		1419205	0					
ANR	1419500	Identifier	q		1419205	1					
ANR	1419501	PrimaryExpression	2		1419205	1					
ANR	1419502	CompoundStatement		59:36:1913:1913	1419205	1					
ANR	1419503	ExpressionStatement	status = 1	108:20:3176:3186	1419205	0	True				
ANR	1419504	AssignmentExpression	status = 1		1419205	0		=			
ANR	1419505	Identifier	status		1419205	0					
ANR	1419506	PrimaryExpression	1		1419205	1					
ANR	1419507	BreakStatement	break ;	109:20:3208:3213	1419205	1	True				
ANR	1419508	ExpressionStatement	* ++ q = 0	111:16:3249:3257	1419205	1	True				
ANR	1419509	AssignmentExpression	* ++ q = 0		1419205	0		=			
ANR	1419510	UnaryOperationExpression	* ++ q		1419205	0					
ANR	1419511	UnaryOperator	*		1419205	0					
ANR	1419512	UnaryExpression	++ q		1419205	1					
ANR	1419513	IncDec	++		1419205	0					
ANR	1419514	Identifier	q		1419205	1					
ANR	1419515	PrimaryExpression	0		1419205	1					
ANR	1419516	ElseStatement	else		1419205	0					
ANR	1419517	CompoundStatement		64:19:2037:2037	1419205	0					
ANR	1419518	IfStatement	if ( p [ 1 ] == p [ 2 ] )		1419205	0					
ANR	1419519	Condition	p [ 1 ] == p [ 2 ]	113:20:3318:3329	1419205	0	True				
ANR	1419520	EqualityExpression	p [ 1 ] == p [ 2 ]		1419205	0		==			
ANR	1419521	ArrayIndexing	p [ 1 ]		1419205	0					
ANR	1419522	Identifier	p		1419205	0					
ANR	1419523	PrimaryExpression	1		1419205	1					
ANR	1419524	ArrayIndexing	p [ 2 ]		1419205	1					
ANR	1419525	Identifier	p		1419205	0					
ANR	1419526	PrimaryExpression	2		1419205	1					
ANR	1419527	CompoundStatement		65:34:2091:2091	1419205	1					
ANR	1419528	IfStatement	if ( wlimit - q < 2 )		1419205	0					
ANR	1419529	Condition	wlimit - q < 2	114:24:3358:3371	1419205	0	True				
ANR	1419530	RelationalExpression	wlimit - q < 2		1419205	0		<			
ANR	1419531	AdditiveExpression	wlimit - q		1419205	0		-			
ANR	1419532	Identifier	wlimit		1419205	0					
ANR	1419533	Identifier	q		1419205	1					
ANR	1419534	PrimaryExpression	2		1419205	1					
ANR	1419535	CompoundStatement		66:40:2133:2133	1419205	1					
ANR	1419536	ExpressionStatement	status = 1	115:24:3400:3410	1419205	0	True				
ANR	1419537	AssignmentExpression	status = 1		1419205	0		=			
ANR	1419538	Identifier	status		1419205	0					
ANR	1419539	PrimaryExpression	1		1419205	1					
ANR	1419540	BreakStatement	break ;	116:24:3436:3441	1419205	1	True				
ANR	1419541	ExpressionStatement	* ++ q = 255	118:20:3485:3495	1419205	1	True				
ANR	1419542	AssignmentExpression	* ++ q = 255		1419205	0		=			
ANR	1419543	UnaryOperationExpression	* ++ q		1419205	0					
ANR	1419544	UnaryOperator	*		1419205	0					
ANR	1419545	UnaryExpression	++ q		1419205	1					
ANR	1419546	IncDec	++		1419205	0					
ANR	1419547	Identifier	q		1419205	1					
ANR	1419548	PrimaryExpression	255		1419205	1					
ANR	1419549	ElseStatement	else		1419205	0					
ANR	1419550	CompoundStatement		71:23:2279:2279	1419205	0					
ANR	1419551	IfStatement	if ( wlimit - q < 3 )		1419205	0					
ANR	1419552	Condition	wlimit - q < 3	120:24:3546:3559	1419205	0	True				
ANR	1419553	RelationalExpression	wlimit - q < 3		1419205	0		<			
ANR	1419554	AdditiveExpression	wlimit - q		1419205	0		-			
ANR	1419555	Identifier	wlimit		1419205	0					
ANR	1419556	Identifier	q		1419205	1					
ANR	1419557	PrimaryExpression	3		1419205	1					
ANR	1419558	CompoundStatement		72:40:2321:2321	1419205	1					
ANR	1419559	ExpressionStatement	status = 1	121:24:3588:3598	1419205	0	True				
ANR	1419560	AssignmentExpression	status = 1		1419205	0		=			
ANR	1419561	Identifier	status		1419205	0					
ANR	1419562	PrimaryExpression	1		1419205	1					
ANR	1419563	BreakStatement	break ;	122:24:3624:3629	1419205	1	True				
ANR	1419564	ExpressionStatement	* ++ q = 1	124:20:3673:3681	1419205	1	True				
ANR	1419565	AssignmentExpression	* ++ q = 1		1419205	0		=			
ANR	1419566	UnaryOperationExpression	* ++ q		1419205	0					
ANR	1419567	UnaryOperator	*		1419205	0					
ANR	1419568	UnaryExpression	++ q		1419205	1					
ANR	1419569	IncDec	++		1419205	0					
ANR	1419570	Identifier	q		1419205	1					
ANR	1419571	PrimaryExpression	1		1419205	1					
ANR	1419572	ExpressionStatement	* ++ q = p [ 1 ]	125:20:3703:3714	1419205	2	True				
ANR	1419573	AssignmentExpression	* ++ q = p [ 1 ]		1419205	0		=			
ANR	1419574	UnaryOperationExpression	* ++ q		1419205	0					
ANR	1419575	UnaryOperator	*		1419205	0					
ANR	1419576	UnaryExpression	++ q		1419205	1					
ANR	1419577	IncDec	++		1419205	0					
ANR	1419578	Identifier	q		1419205	1					
ANR	1419579	ArrayIndexing	p [ 1 ]		1419205	1					
ANR	1419580	Identifier	p		1419205	0					
ANR	1419581	PrimaryExpression	1		1419205	1					
ANR	1419582	ExpressionStatement	* ++ q = p1 [ 1 ]	128:12:3760:3772	1419205	2	True				
ANR	1419583	AssignmentExpression	* ++ q = p1 [ 1 ]		1419205	0		=			
ANR	1419584	UnaryOperationExpression	* ++ q		1419205	0					
ANR	1419585	UnaryOperator	*		1419205	0					
ANR	1419586	UnaryExpression	++ q		1419205	1					
ANR	1419587	IncDec	++		1419205	0					
ANR	1419588	Identifier	q		1419205	1					
ANR	1419589	ArrayIndexing	p1 [ 1 ]		1419205	1					
ANR	1419590	Identifier	p1		1419205	0					
ANR	1419591	PrimaryExpression	1		1419205	1					
ANR	1419592	ExpressionStatement	p = p1 + 1	129:12:3786:3796	1419205	3	True				
ANR	1419593	AssignmentExpression	p = p1 + 1		1419205	0		=			
ANR	1419594	Identifier	p		1419205	0					
ANR	1419595	AdditiveExpression	p1 + 1		1419205	1		+			
ANR	1419596	Identifier	p1		1419205	0					
ANR	1419597	PrimaryExpression	1		1419205	1					
ANR	1419598	ElseStatement	else		1419205	0					
ANR	1419599	IfStatement	if ( ( next = p [ 1 ] ) == p [ 2 ] && next == p [ 3 ] )		1419205	0					
ANR	1419600	Condition	( next = p [ 1 ] ) == p [ 2 ] && next == p [ 3 ]	130:19:3817:3853	1419205	0	True				
ANR	1419601	AndExpression	( next = p [ 1 ] ) == p [ 2 ] && next == p [ 3 ]		1419205	0		&&			
ANR	1419602	EqualityExpression	( next = p [ 1 ] ) == p [ 2 ]		1419205	0		==			
ANR	1419603	AssignmentExpression	next = p [ 1 ]		1419205	0		=			
ANR	1419604	Identifier	next		1419205	0					
ANR	1419605	ArrayIndexing	p [ 1 ]		1419205	1					
ANR	1419606	Identifier	p		1419205	0					
ANR	1419607	PrimaryExpression	1		1419205	1					
ANR	1419608	ArrayIndexing	p [ 2 ]		1419205	1					
ANR	1419609	Identifier	p		1419205	0					
ANR	1419610	PrimaryExpression	2		1419205	1					
ANR	1419611	EqualityExpression	next == p [ 3 ]		1419205	1		==			
ANR	1419612	Identifier	next		1419205	0					
ANR	1419613	ArrayIndexing	p [ 3 ]		1419205	1					
ANR	1419614	Identifier	p		1419205	0					
ANR	1419615	PrimaryExpression	3		1419205	1					
ANR	1419616	CompoundStatement		82:58:2615:2615	1419205	1					
ANR	1419617	IfStatement	if ( wlimit - q < 2 )		1419205	0					
ANR	1419618	Condition	wlimit - q < 2	131:16:3874:3887	1419205	0	True				
ANR	1419619	RelationalExpression	wlimit - q < 2		1419205	0		<			
ANR	1419620	AdditiveExpression	wlimit - q		1419205	0		-			
ANR	1419621	Identifier	wlimit		1419205	0					
ANR	1419622	Identifier	q		1419205	1					
ANR	1419623	PrimaryExpression	2		1419205	1					
ANR	1419624	CompoundStatement		83:32:2649:2649	1419205	1					
ANR	1419625	ExpressionStatement	status = 1	132:16:3908:3918	1419205	0	True				
ANR	1419626	AssignmentExpression	status = 1		1419205	0		=			
ANR	1419627	Identifier	status		1419205	0					
ANR	1419628	PrimaryExpression	1		1419205	1					
ANR	1419629	BreakStatement	break ;	133:16:3936:3941	1419205	1	True				
ANR	1419630	DoStatement	do		1419205	1					
ANR	1419631	CompoundStatement		88:15:2781:2781	1419205	0					
ANR	1419632	ExpressionStatement	p ++	137:16:4040:4043	1419205	0	True				
ANR	1419633	PostIncDecOperationExpression	p ++		1419205	0					
ANR	1419634	Identifier	p		1419205	0					
ANR	1419635	IncDec	++		1419205	1					
ANR	1419636	Condition	p < p1 && p [ 2 ] == next	139:19:4078:4099	1419205	1	True				
ANR	1419637	AndExpression	p < p1 && p [ 2 ] == next		1419205	0		&&			
ANR	1419638	RelationalExpression	p < p1		1419205	0		<			
ANR	1419639	Identifier	p		1419205	0					
ANR	1419640	Identifier	p1		1419205	1					
ANR	1419641	EqualityExpression	p [ 2 ] == next		1419205	1		==			
ANR	1419642	ArrayIndexing	p [ 2 ]		1419205	0					
ANR	1419643	Identifier	p		1419205	0					
ANR	1419644	PrimaryExpression	2		1419205	1					
ANR	1419645	Identifier	next		1419205	1					
ANR	1419646	IfStatement	if ( p == p1 && ! end )		1419205	2					
ANR	1419647	Condition	p == p1 && ! end	140:16:4119:4133	1419205	0	True				
ANR	1419648	AndExpression	p == p1 && ! end		1419205	0		&&			
ANR	1419649	EqualityExpression	p == p1		1419205	0		==			
ANR	1419650	Identifier	p		1419205	0					
ANR	1419651	Identifier	p1		1419205	1					
ANR	1419652	UnaryOperationExpression	! end		1419205	1					
ANR	1419653	UnaryOperator	!		1419205	0					
ANR	1419654	Identifier	end		1419205	1					
ANR	1419655	CompoundStatement		92:33:2895:2895	1419205	1					
ANR	1419656	ExpressionStatement	p = beg	141:16:4154:4161	1419205	0	True				
ANR	1419657	AssignmentExpression	p = beg		1419205	0		=			
ANR	1419658	Identifier	p		1419205	0					
ANR	1419659	Identifier	beg		1419205	1					
ANR	1419660	BreakStatement	break ;	142:16:4212:4217	1419205	1	True				
ANR	1419661	ExpressionStatement	p ++	144:12:4245:4248	1419205	3	True				
ANR	1419662	PostIncDecOperationExpression	p ++		1419205	0					
ANR	1419663	Identifier	p		1419205	0					
ANR	1419664	IncDec	++		1419205	1					
ANR	1419665	ExpressionStatement	* ++ q = ( byte ) ( 257 - ( p - beg ) )	145:12:4262:4293	1419205	4	True				
ANR	1419666	AssignmentExpression	* ++ q = ( byte ) ( 257 - ( p - beg ) )		1419205	0		=			
ANR	1419667	UnaryOperationExpression	* ++ q		1419205	0					
ANR	1419668	UnaryOperator	*		1419205	0					
ANR	1419669	UnaryExpression	++ q		1419205	1					
ANR	1419670	IncDec	++		1419205	0					
ANR	1419671	Identifier	q		1419205	1					
ANR	1419672	CastExpression	( byte ) ( 257 - ( p - beg ) )		1419205	1					
ANR	1419673	CastTarget	byte		1419205	0					
ANR	1419674	AdditiveExpression	257 - ( p - beg )		1419205	1		-			
ANR	1419675	PrimaryExpression	257		1419205	0					
ANR	1419676	AdditiveExpression	p - beg		1419205	1		-			
ANR	1419677	Identifier	p		1419205	0					
ANR	1419678	Identifier	beg		1419205	1					
ANR	1419679	ExpressionStatement	* ++ q = next	146:12:4307:4318	1419205	5	True				
ANR	1419680	AssignmentExpression	* ++ q = next		1419205	0		=			
ANR	1419681	UnaryOperationExpression	* ++ q		1419205	0					
ANR	1419682	UnaryOperator	*		1419205	0					
ANR	1419683	UnaryExpression	++ q		1419205	1					
ANR	1419684	IncDec	++		1419205	0					
ANR	1419685	Identifier	q		1419205	1					
ANR	1419686	Identifier	next		1419205	1					
ANR	1419687	ElseStatement	else		1419205	0					
ANR	1419688	CompoundStatement		99:15:3094:3094	1419205	0					
ANR	1419689	ExpressionStatement	p1 --	148:12:4349:4353	1419205	0	True				
ANR	1419690	PostIncDecOperationExpression	p1 --		1419205	0					
ANR	1419691	Identifier	p1		1419205	0					
ANR	1419692	IncDec	--		1419205	1					
ANR	1419693	WhileStatement	while ( p < p1 && ( p [ 2 ] != p [ 1 ] || p [ 3 ] != p [ 1 ] ) )		1419205	1					
ANR	1419694	Condition	p < p1 && ( p [ 2 ] != p [ 1 ] || p [ 3 ] != p [ 1 ] )	149:19:4374:4413	1419205	0	True				
ANR	1419695	AndExpression	p < p1 && ( p [ 2 ] != p [ 1 ] || p [ 3 ] != p [ 1 ] )		1419205	0		&&			
ANR	1419696	RelationalExpression	p < p1		1419205	0		<			
ANR	1419697	Identifier	p		1419205	0					
ANR	1419698	Identifier	p1		1419205	1					
ANR	1419699	OrExpression	p [ 2 ] != p [ 1 ] || p [ 3 ] != p [ 1 ]		1419205	1		||			
ANR	1419700	EqualityExpression	p [ 2 ] != p [ 1 ]		1419205	0		!=			
ANR	1419701	ArrayIndexing	p [ 2 ]		1419205	0					
ANR	1419702	Identifier	p		1419205	0					
ANR	1419703	PrimaryExpression	2		1419205	1					
ANR	1419704	ArrayIndexing	p [ 1 ]		1419205	1					
ANR	1419705	Identifier	p		1419205	0					
ANR	1419706	PrimaryExpression	1		1419205	1					
ANR	1419707	EqualityExpression	p [ 3 ] != p [ 1 ]		1419205	1		!=			
ANR	1419708	ArrayIndexing	p [ 3 ]		1419205	0					
ANR	1419709	Identifier	p		1419205	0					
ANR	1419710	PrimaryExpression	3		1419205	1					
ANR	1419711	ArrayIndexing	p [ 1 ]		1419205	1					
ANR	1419712	Identifier	p		1419205	0					
ANR	1419713	PrimaryExpression	1		1419205	1					
ANR	1419714	ExpressionStatement	p ++	150:16:4432:4435	1419205	1	True				
ANR	1419715	PostIncDecOperationExpression	p ++		1419205	0					
ANR	1419716	Identifier	p		1419205	0					
ANR	1419717	IncDec	++		1419205	1					
ANR	1419718	IfStatement	if ( p == p1 )		1419205	2					
ANR	1419719	Condition	p == p1	151:16:4453:4459	1419205	0	True				
ANR	1419720	EqualityExpression	p == p1		1419205	0		==			
ANR	1419721	Identifier	p		1419205	0					
ANR	1419722	Identifier	p1		1419205	1					
ANR	1419723	CompoundStatement		103:25:3221:3221	1419205	1					
ANR	1419724	IfStatement	if ( ! end )		1419205	0					
ANR	1419725	Condition	! end	152:20:4484:4487	1419205	0	True				
ANR	1419726	UnaryOperationExpression	! end		1419205	0					
ANR	1419727	UnaryOperator	!		1419205	0					
ANR	1419728	Identifier	end		1419205	1					
ANR	1419729	CompoundStatement		104:26:3249:3249	1419205	1					
ANR	1419730	ExpressionStatement	p = beg	153:20:4512:4519	1419205	0	True				
ANR	1419731	AssignmentExpression	p = beg		1419205	0		=			
ANR	1419732	Identifier	p		1419205	0					
ANR	1419733	Identifier	beg		1419205	1					
ANR	1419734	BreakStatement	break ;	154:20:4574:4579	1419205	1	True				
ANR	1419735	ExpressionStatement	p += 2	156:16:4615:4621	1419205	1	True				
ANR	1419736	AssignmentExpression	p += 2		1419205	0		+=			
ANR	1419737	Identifier	p		1419205	0					
ANR	1419738	PrimaryExpression	2		1419205	1					
ANR	1419739	ExpressionStatement	count = p - beg	158:12:4649:4664	1419205	3	True				
ANR	1419740	AssignmentExpression	count = p - beg		1419205	0		=			
ANR	1419741	Identifier	count		1419205	0					
ANR	1419742	AdditiveExpression	p - beg		1419205	1		-			
ANR	1419743	Identifier	p		1419205	0					
ANR	1419744	Identifier	beg		1419205	1					
ANR	1419745	IfStatement	if ( wlimit - q < count + 1 )		1419205	4					
ANR	1419746	Condition	wlimit - q < count + 1	159:16:4682:4703	1419205	0	True				
ANR	1419747	RelationalExpression	wlimit - q < count + 1		1419205	0		<			
ANR	1419748	AdditiveExpression	wlimit - q		1419205	0		-			
ANR	1419749	Identifier	wlimit		1419205	0					
ANR	1419750	Identifier	q		1419205	1					
ANR	1419751	AdditiveExpression	count + 1		1419205	1		+			
ANR	1419752	Identifier	count		1419205	0					
ANR	1419753	PrimaryExpression	1		1419205	1					
ANR	1419754	CompoundStatement		111:40:3465:3465	1419205	1					
ANR	1419755	ExpressionStatement	p = beg	160:16:4724:4731	1419205	0	True				
ANR	1419756	AssignmentExpression	p = beg		1419205	0		=			
ANR	1419757	Identifier	p		1419205	0					
ANR	1419758	Identifier	beg		1419205	1					
ANR	1419759	IfStatement	if ( q >= wlimit )		1419205	1					
ANR	1419760	Condition	q >= wlimit	161:20:4753:4763	1419205	0	True				
ANR	1419761	RelationalExpression	q >= wlimit		1419205	0		>=			
ANR	1419762	Identifier	q		1419205	0					
ANR	1419763	Identifier	wlimit		1419205	1					
ANR	1419764	CompoundStatement		113:33:3525:3525	1419205	1					
ANR	1419765	ExpressionStatement	status = 1	162:20:4788:4798	1419205	0	True				
ANR	1419766	AssignmentExpression	status = 1		1419205	0		=			
ANR	1419767	Identifier	status		1419205	0					
ANR	1419768	PrimaryExpression	1		1419205	1					
ANR	1419769	BreakStatement	break ;	163:20:4820:4825	1419205	1	True				
ANR	1419770	ExpressionStatement	* ++ q = count - 1	166:16:4913:4929	1419205	2	True				
ANR	1419771	AssignmentExpression	* ++ q = count - 1		1419205	0		=			
ANR	1419772	UnaryOperationExpression	* ++ q		1419205	0					
ANR	1419773	UnaryOperator	*		1419205	0					
ANR	1419774	UnaryExpression	++ q		1419205	1					
ANR	1419775	IncDec	++		1419205	0					
ANR	1419776	Identifier	q		1419205	1					
ANR	1419777	AdditiveExpression	count - 1		1419205	1		-			
ANR	1419778	Identifier	count		1419205	0					
ANR	1419779	PrimaryExpression	1		1419205	1					
ANR	1419780	ExpressionStatement	ss -> copy_left = count	167:16:4947:4968	1419205	3	True				
ANR	1419781	AssignmentExpression	ss -> copy_left = count		1419205	0		=			
ANR	1419782	PtrMemberAccess	ss -> copy_left		1419205	0					
ANR	1419783	Identifier	ss		1419205	0					
ANR	1419784	Identifier	copy_left		1419205	1					
ANR	1419785	Identifier	count		1419205	1					
ANR	1419786	GotoStatement	goto copy ;	168:16:4986:4995	1419205	4	True				
ANR	1419787	Identifier	copy		1419205	0					
ANR	1419788	ExpressionStatement	* ++ q = count - 1	170:12:5023:5039	1419205	5	True				
ANR	1419789	AssignmentExpression	* ++ q = count - 1		1419205	0		=			
ANR	1419790	UnaryOperationExpression	* ++ q		1419205	0					
ANR	1419791	UnaryOperator	*		1419205	0					
ANR	1419792	UnaryExpression	++ q		1419205	1					
ANR	1419793	IncDec	++		1419205	0					
ANR	1419794	Identifier	q		1419205	1					
ANR	1419795	AdditiveExpression	count - 1		1419205	1		-			
ANR	1419796	Identifier	count		1419205	0					
ANR	1419797	PrimaryExpression	1		1419205	1					
ANR	1419798	ExpressionStatement	"memcpy ( q + 1 , beg + 1 , count )"	171:12:5053:5082	1419205	6	True				
ANR	1419799	CallExpression	"memcpy ( q + 1 , beg + 1 , count )"		1419205	0					
ANR	1419800	Callee	memcpy		1419205	0					
ANR	1419801	Identifier	memcpy		1419205	0					
ANR	1419802	ArgumentList	q + 1		1419205	1					
ANR	1419803	Argument	q + 1		1419205	0					
ANR	1419804	AdditiveExpression	q + 1		1419205	0		+			
ANR	1419805	Identifier	q		1419205	0					
ANR	1419806	PrimaryExpression	1		1419205	1					
ANR	1419807	Argument	beg + 1		1419205	1					
ANR	1419808	AdditiveExpression	beg + 1		1419205	0		+			
ANR	1419809	Identifier	beg		1419205	0					
ANR	1419810	PrimaryExpression	1		1419205	1					
ANR	1419811	Argument	count		1419205	2					
ANR	1419812	Identifier	count		1419205	0					
ANR	1419813	ExpressionStatement	q += count	172:12:5096:5106	1419205	7	True				
ANR	1419814	AssignmentExpression	q += count		1419205	0		+=			
ANR	1419815	Identifier	q		1419205	0					
ANR	1419816	Identifier	count		1419205	1					
ANR	1419817	ExpressionStatement	rleft -= p - beg	174:8:5126:5142	1419205	9	True				
ANR	1419818	AssignmentExpression	rleft -= p - beg		1419205	0		-=			
ANR	1419819	Identifier	rleft		1419205	0					
ANR	1419820	AdditiveExpression	p - beg		1419205	1		-			
ANR	1419821	Identifier	p		1419205	0					
ANR	1419822	Identifier	beg		1419205	1					
ANR	1419823	IfStatement	if ( rleft == 0 )		1419205	10					
ANR	1419824	Condition	rleft == 0	175:12:5156:5165	1419205	0	True				
ANR	1419825	EqualityExpression	rleft == 0		1419205	0		==			
ANR	1419826	Identifier	rleft		1419205	0					
ANR	1419827	PrimaryExpression	0		1419205	1					
ANR	1419828	ExpressionStatement	rleft = ss -> record_size	176:12:5180:5203	1419205	1	True				
ANR	1419829	AssignmentExpression	rleft = ss -> record_size		1419205	0		=			
ANR	1419830	Identifier	rleft		1419205	0					
ANR	1419831	PtrMemberAccess	ss -> record_size		1419205	1					
ANR	1419832	Identifier	ss		1419205	0					
ANR	1419833	Identifier	record_size		1419205	1					
ANR	1419834	IfStatement	if ( last && status == 0 && ss -> EndOfData )		1419205	15					
ANR	1419835	Condition	last && status == 0 && ss -> EndOfData	178:8:5219:5254	1419205	0	True				
ANR	1419836	AndExpression	last && status == 0 && ss -> EndOfData		1419205	0		&&			
ANR	1419837	Identifier	last		1419205	0					
ANR	1419838	AndExpression	status == 0 && ss -> EndOfData		1419205	1		&&			
ANR	1419839	EqualityExpression	status == 0		1419205	0		==			
ANR	1419840	Identifier	status		1419205	0					
ANR	1419841	PrimaryExpression	0		1419205	1					
ANR	1419842	PtrMemberAccess	ss -> EndOfData		1419205	1					
ANR	1419843	Identifier	ss		1419205	0					
ANR	1419844	Identifier	EndOfData		1419205	1					
ANR	1419845	CompoundStatement		130:46:4016:4016	1419205	1					
ANR	1419846	IfStatement	if ( q < wlimit )		1419205	0					
ANR	1419847	Condition	q < wlimit	179:12:5271:5280	1419205	0	True				
ANR	1419848	RelationalExpression	q < wlimit		1419205	0		<			
ANR	1419849	Identifier	q		1419205	0					
ANR	1419850	Identifier	wlimit		1419205	1					
ANR	1419851	ExpressionStatement	* ++ q = 128	180:12:5295:5305	1419205	1	True				
ANR	1419852	AssignmentExpression	* ++ q = 128		1419205	0		=			
ANR	1419853	UnaryOperationExpression	* ++ q		1419205	0					
ANR	1419854	UnaryOperator	*		1419205	0					
ANR	1419855	UnaryExpression	++ q		1419205	1					
ANR	1419856	IncDec	++		1419205	0					
ANR	1419857	Identifier	q		1419205	1					
ANR	1419858	PrimaryExpression	128		1419205	1					
ANR	1419859	ElseStatement	else		1419205	0					
ANR	1419860	ExpressionStatement	status = 1	182:12:5332:5342	1419205	0	True				
ANR	1419861	AssignmentExpression	status = 1		1419205	0		=			
ANR	1419862	Identifier	status		1419205	0					
ANR	1419863	PrimaryExpression	1		1419205	1					
ANR	1419864	ExpressionStatement	pr -> ptr = p	184:4:5354:5365	1419205	16	True				
ANR	1419865	AssignmentExpression	pr -> ptr = p		1419205	0		=			
ANR	1419866	PtrMemberAccess	pr -> ptr		1419205	0					
ANR	1419867	Identifier	pr		1419205	0					
ANR	1419868	Identifier	ptr		1419205	1					
ANR	1419869	Identifier	p		1419205	1					
ANR	1419870	ExpressionStatement	pw -> ptr = q	185:4:5371:5382	1419205	17	True				
ANR	1419871	AssignmentExpression	pw -> ptr = q		1419205	0		=			
ANR	1419872	PtrMemberAccess	pw -> ptr		1419205	0					
ANR	1419873	Identifier	pw		1419205	0					
ANR	1419874	Identifier	ptr		1419205	1					
ANR	1419875	Identifier	q		1419205	1					
ANR	1419876	ExpressionStatement	ss -> record_left = rleft	186:4:5388:5411	1419205	18	True				
ANR	1419877	AssignmentExpression	ss -> record_left = rleft		1419205	0		=			
ANR	1419878	PtrMemberAccess	ss -> record_left		1419205	0					
ANR	1419879	Identifier	ss		1419205	0					
ANR	1419880	Identifier	record_left		1419205	1					
ANR	1419881	Identifier	rleft		1419205	1					
ANR	1419882	ReturnStatement	return status ;	187:4:5417:5430	1419205	19	True				
ANR	1419883	Identifier	status		1419205	0					
ANR	1419884	ReturnType	static int		1419205	1					
ANR	1419885	Identifier	s_RLE_process		1419205	2					
ANR	1419886	ParameterList	"stream_state * st , stream_cursor_read * pr , stream_cursor_write * pw , bool last"		1419205	3					
ANR	1419887	Parameter	stream_state * st	47:14:1145:1161	1419205	0	True				
ANR	1419888	ParameterType	stream_state *		1419205	0					
ANR	1419889	Identifier	st		1419205	1					
ANR	1419890	Parameter	stream_cursor_read * pr	47:33:1164:1186	1419205	1	True				
ANR	1419891	ParameterType	stream_cursor_read *		1419205	0					
ANR	1419892	Identifier	pr		1419205	1					
ANR	1419893	Parameter	stream_cursor_write * pw	48:14:1203:1226	1419205	2	True				
ANR	1419894	ParameterType	stream_cursor_write *		1419205	0					
ANR	1419895	Identifier	pw		1419205	1					
ANR	1419896	Parameter	bool last	48:40:1229:1237	1419205	3	True				
ANR	1419897	ParameterType	bool		1419205	0					
ANR	1419898	Identifier	last		1419205	1					
ANR	1419899	CFGEntryNode	ENTRY		1419205		True				
ANR	1419900	CFGExitNode	EXIT		1419205		True				
ANR	1419901	Symbol	rleft		1419205						
ANR	1419902	Symbol	wcount		1419205						
ANR	1419903	Symbol	next		1419205						
ANR	1419904	Symbol	ss -> EndOfData		1419205						
ANR	1419905	Symbol	p1		1419205						
ANR	1419906	Symbol	pr		1419205						
ANR	1419907	Symbol	* ss		1419205						
ANR	1419908	Symbol	beg		1419205						
ANR	1419909	Symbol	pw		1419205						
ANR	1419910	Symbol	pr -> limit		1419205						
ANR	1419911	Symbol	pw -> limit		1419205						
ANR	1419912	Symbol	wlimit		1419205						
ANR	1419913	Symbol	end		1419205						
ANR	1419914	Symbol	pr -> ptr		1419205						
ANR	1419915	Symbol	pw -> ptr		1419205						
ANR	1419916	Symbol	ss		1419205						
ANR	1419917	Symbol	st		1419205						
ANR	1419918	Symbol	rlimit		1419205						
ANR	1419919	Symbol	last		1419205						
ANR	1419920	Symbol	* p1		1419205						
ANR	1419921	Symbol	* ++ q		1419205						
ANR	1419922	Symbol	count		1419205						
ANR	1419923	Symbol	* pr		1419205						
ANR	1419924	Symbol	* pw		1419205						
ANR	1419925	Symbol	p		1419205						
ANR	1419926	Symbol	q		1419205						
ANR	1419927	Symbol	rcount		1419205						
ANR	1419928	Symbol	ss -> record_left		1419205						
ANR	1419929	Symbol	ss -> record_size		1419205						
ANR	1419930	Symbol	true		1419205						
ANR	1419931	Symbol	* p		1419205						
ANR	1419932	Symbol	ss -> copy_left		1419205						
ANR	1419933	Symbol	* q		1419205						
ANR	1419934	Symbol	status		1419205						
ANR	1419935	DeclStmt									
ANR	1419936	Decl							const stream_template	const stream_template	s_RLE_template
