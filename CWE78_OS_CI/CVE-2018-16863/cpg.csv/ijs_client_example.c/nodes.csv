command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5995835	File	data/converged/CVE-2018-16863_ghostpdl/ijs_client_example.c								
ANR	5995836	Function	example_list_params	31:0:1241:2065							
ANR	5995837	FunctionDef	example_list_params (IjsClientCtx * ctx)		5995836	0					
ANR	5995838	CompoundStatement		33:0:1292:2065	5995836	0					
ANR	5995839	IdentifierDeclStatement	int status = 0 ;	34:2:1296:1310	5995836	0	True				
ANR	5995840	IdentifierDecl	status = 0		5995836	0					
ANR	5995841	IdentifierDeclType	int		5995836	0					
ANR	5995842	Identifier	status		5995836	1					
ANR	5995843	AssignmentExpression	status = 0		5995836	2		=			
ANR	5995844	Identifier	status		5995836	0					
ANR	5995845	PrimaryExpression	0		5995836	1					
ANR	5995846	IdentifierDeclStatement	char buf [ 4096 ] ;	35:2:1314:1328	5995836	1	True				
ANR	5995847	IdentifierDecl	buf [ 4096 ]		5995836	0					
ANR	5995848	IdentifierDeclType	char [ 4096 ]		5995836	0					
ANR	5995849	Identifier	buf		5995836	1					
ANR	5995850	PrimaryExpression	4096		5995836	2					
ANR	5995851	IdentifierDeclStatement	char ebuf [ 4096 ] ;	36:2:1332:1347	5995836	2	True				
ANR	5995852	IdentifierDecl	ebuf [ 4096 ]		5995836	0					
ANR	5995853	IdentifierDeclType	char [ 4096 ]		5995836	0					
ANR	5995854	Identifier	ebuf		5995836	1					
ANR	5995855	PrimaryExpression	4096		5995836	2					
ANR	5995856	IdentifierDeclStatement	char * p ;	37:2:1351:1358	5995836	3	True				
ANR	5995857	IdentifierDecl	* p		5995836	0					
ANR	5995858	IdentifierDeclType	char *		5995836	0					
ANR	5995859	Identifier	p		5995836	1					
ANR	5995860	ExpressionStatement	"status = ijs_client_list_params ( ctx , 0 , buf , sizeof ( buf ) - 1 )"	38:2:1362:1424	5995836	4	True				
ANR	5995861	AssignmentExpression	"status = ijs_client_list_params ( ctx , 0 , buf , sizeof ( buf ) - 1 )"		5995836	0		=			
ANR	5995862	Identifier	status		5995836	0					
ANR	5995863	CallExpression	"ijs_client_list_params ( ctx , 0 , buf , sizeof ( buf ) - 1 )"		5995836	1					
ANR	5995864	Callee	ijs_client_list_params		5995836	0					
ANR	5995865	Identifier	ijs_client_list_params		5995836	0					
ANR	5995866	ArgumentList	ctx		5995836	1					
ANR	5995867	Argument	ctx		5995836	0					
ANR	5995868	Identifier	ctx		5995836	0					
ANR	5995869	Argument	0		5995836	1					
ANR	5995870	PrimaryExpression	0		5995836	0					
ANR	5995871	Argument	buf		5995836	2					
ANR	5995872	Identifier	buf		5995836	0					
ANR	5995873	Argument	sizeof ( buf ) - 1		5995836	3					
ANR	5995874	AdditiveExpression	sizeof ( buf ) - 1		5995836	0		-			
ANR	5995875	SizeofExpression	sizeof ( buf )		5995836	0					
ANR	5995876	Sizeof	sizeof		5995836	0					
ANR	5995877	SizeofOperand	buf		5995836	1					
ANR	5995878	PrimaryExpression	1		5995836	1					
ANR	5995879	IfStatement	if ( status >= 0 )		5995836	5					
ANR	5995880	Condition	status >= 0	39:6:1432:1442	5995836	0	True				
ANR	5995881	RelationalExpression	status >= 0		5995836	0		>=			
ANR	5995882	Identifier	status		5995836	0					
ANR	5995883	PrimaryExpression	0		5995836	1					
ANR	5995884	CompoundStatement		8:4:156:156	5995836	1					
ANR	5995885	ExpressionStatement	buf [ status ] = 0	41:6:1457:1472	5995836	0	True				
ANR	5995886	AssignmentExpression	buf [ status ] = 0		5995836	0		=			
ANR	5995887	ArrayIndexing	buf [ status ]		5995836	0					
ANR	5995888	Identifier	buf		5995836	0					
ANR	5995889	Identifier	status		5995836	1					
ANR	5995890	PrimaryExpression	0		5995836	1					
ANR	5995891	ExpressionStatement	"fprintf ( stderr , ""settable params: %s\\n"" , buf )"	42:6:1480:1526	5995836	1	True				
ANR	5995892	CallExpression	"fprintf ( stderr , ""settable params: %s\\n"" , buf )"		5995836	0					
ANR	5995893	Callee	fprintf		5995836	0					
ANR	5995894	Identifier	fprintf		5995836	0					
ANR	5995895	ArgumentList	stderr		5995836	1					
ANR	5995896	Argument	stderr		5995836	0					
ANR	5995897	Identifier	stderr		5995836	0					
ANR	5995898	Argument	"""settable params: %s\\n"""		5995836	1					
ANR	5995899	PrimaryExpression	"""settable params: %s\\n"""		5995836	0					
ANR	5995900	Argument	buf		5995836	2					
ANR	5995901	Identifier	buf		5995836	0					
ANR	5995902	ExpressionStatement	"p = strtok ( buf , "","" )"	43:6:1534:1554	5995836	2	True				
ANR	5995903	AssignmentExpression	"p = strtok ( buf , "","" )"		5995836	0		=			
ANR	5995904	Identifier	p		5995836	0					
ANR	5995905	CallExpression	"strtok ( buf , "","" )"		5995836	1					
ANR	5995906	Callee	strtok		5995836	0					
ANR	5995907	Identifier	strtok		5995836	0					
ANR	5995908	ArgumentList	buf		5995836	1					
ANR	5995909	Argument	buf		5995836	0					
ANR	5995910	Identifier	buf		5995836	0					
ANR	5995911	Argument	""","""		5995836	1					
ANR	5995912	PrimaryExpression	""","""		5995836	0					
ANR	5995913	WhileStatement	while ( p )		5995836	3					
ANR	5995914	Condition	p	44:13:1569:1569	5995836	0	True				
ANR	5995915	Identifier	p		5995836	0					
ANR	5995916	CompoundStatement		13:8:287:287	5995836	1					
ANR	5995917	ExpressionStatement	"status = ijs_client_enum_param ( ctx , 0 , p , ebuf , sizeof ( ebuf ) - 1 )"	46:10:1592:1658	5995836	0	True				
ANR	5995918	AssignmentExpression	"status = ijs_client_enum_param ( ctx , 0 , p , ebuf , sizeof ( ebuf ) - 1 )"		5995836	0		=			
ANR	5995919	Identifier	status		5995836	0					
ANR	5995920	CallExpression	"ijs_client_enum_param ( ctx , 0 , p , ebuf , sizeof ( ebuf ) - 1 )"		5995836	1					
ANR	5995921	Callee	ijs_client_enum_param		5995836	0					
ANR	5995922	Identifier	ijs_client_enum_param		5995836	0					
ANR	5995923	ArgumentList	ctx		5995836	1					
ANR	5995924	Argument	ctx		5995836	0					
ANR	5995925	Identifier	ctx		5995836	0					
ANR	5995926	Argument	0		5995836	1					
ANR	5995927	PrimaryExpression	0		5995836	0					
ANR	5995928	Argument	p		5995836	2					
ANR	5995929	Identifier	p		5995836	0					
ANR	5995930	Argument	ebuf		5995836	3					
ANR	5995931	Identifier	ebuf		5995836	0					
ANR	5995932	Argument	sizeof ( ebuf ) - 1		5995836	4					
ANR	5995933	AdditiveExpression	sizeof ( ebuf ) - 1		5995836	0		-			
ANR	5995934	SizeofExpression	sizeof ( ebuf )		5995836	0					
ANR	5995935	Sizeof	sizeof		5995836	0					
ANR	5995936	SizeofOperand	ebuf		5995836	1					
ANR	5995937	PrimaryExpression	1		5995836	1					
ANR	5995938	IfStatement	if ( status >= 0 )		5995836	1					
ANR	5995939	Condition	status >= 0	47:14:1674:1684	5995836	0	True				
ANR	5995940	RelationalExpression	status >= 0		5995836	0		>=			
ANR	5995941	Identifier	status		5995836	0					
ANR	5995942	PrimaryExpression	0		5995836	1					
ANR	5995943	CompoundStatement		16:12:406:406	5995836	1					
ANR	5995944	ExpressionStatement	ebuf [ status ] = 0	49:14:1715:1731	5995836	0	True				
ANR	5995945	AssignmentExpression	ebuf [ status ] = 0		5995836	0		=			
ANR	5995946	ArrayIndexing	ebuf [ status ]		5995836	0					
ANR	5995947	Identifier	ebuf		5995836	0					
ANR	5995948	Identifier	status		5995836	1					
ANR	5995949	PrimaryExpression	0		5995836	1					
ANR	5995950	ExpressionStatement	"fprintf ( stderr , ""  %s: %s\\n"" , p , ebuf )"	50:14:1747:1786	5995836	1	True				
ANR	5995951	CallExpression	"fprintf ( stderr , ""  %s: %s\\n"" , p , ebuf )"		5995836	0					
ANR	5995952	Callee	fprintf		5995836	0					
ANR	5995953	Identifier	fprintf		5995836	0					
ANR	5995954	ArgumentList	stderr		5995836	1					
ANR	5995955	Argument	stderr		5995836	0					
ANR	5995956	Identifier	stderr		5995836	0					
ANR	5995957	Argument	"""  %s: %s\\n"""		5995836	1					
ANR	5995958	PrimaryExpression	"""  %s: %s\\n"""		5995836	0					
ANR	5995959	Argument	p		5995836	2					
ANR	5995960	Identifier	p		5995836	0					
ANR	5995961	Argument	ebuf		5995836	3					
ANR	5995962	Identifier	ebuf		5995836	0					
ANR	5995963	ElseStatement	else		5995836	0					
ANR	5995964	CompoundStatement		21:12:536:536	5995836	0					
ANR	5995965	ExpressionStatement	"fprintf ( stderr , ""Error %d getting param %s\\n"" , status , p )"	54:14:1845:1903	5995836	0	True				
ANR	5995966	CallExpression	"fprintf ( stderr , ""Error %d getting param %s\\n"" , status , p )"		5995836	0					
ANR	5995967	Callee	fprintf		5995836	0					
ANR	5995968	Identifier	fprintf		5995836	0					
ANR	5995969	ArgumentList	stderr		5995836	1					
ANR	5995970	Argument	stderr		5995836	0					
ANR	5995971	Identifier	stderr		5995836	0					
ANR	5995972	Argument	"""Error %d getting param %s\\n"""		5995836	1					
ANR	5995973	PrimaryExpression	"""Error %d getting param %s\\n"""		5995836	0					
ANR	5995974	Argument	status		5995836	2					
ANR	5995975	Identifier	status		5995836	0					
ANR	5995976	Argument	p		5995836	3					
ANR	5995977	Identifier	p		5995836	0					
ANR	5995978	ExpressionStatement	"p = strtok ( NULL , "","" )"	56:10:1929:1950	5995836	2	True				
ANR	5995979	AssignmentExpression	"p = strtok ( NULL , "","" )"		5995836	0		=			
ANR	5995980	Identifier	p		5995836	0					
ANR	5995981	CallExpression	"strtok ( NULL , "","" )"		5995836	1					
ANR	5995982	Callee	strtok		5995836	0					
ANR	5995983	Identifier	strtok		5995836	0					
ANR	5995984	ArgumentList	NULL		5995836	1					
ANR	5995985	Argument	NULL		5995836	0					
ANR	5995986	Identifier	NULL		5995836	0					
ANR	5995987	Argument	""","""		5995836	1					
ANR	5995988	PrimaryExpression	""","""		5995836	0					
ANR	5995989	ElseStatement	else		5995836	0					
ANR	5995990	CompoundStatement		28:4:686:686	5995836	0					
ANR	5995991	ExpressionStatement	"fprintf ( stderr , ""Error %d listing params\\n"" , status )"	61:6:1987:2040	5995836	0	True				
ANR	5995992	CallExpression	"fprintf ( stderr , ""Error %d listing params\\n"" , status )"		5995836	0					
ANR	5995993	Callee	fprintf		5995836	0					
ANR	5995994	Identifier	fprintf		5995836	0					
ANR	5995995	ArgumentList	stderr		5995836	1					
ANR	5995996	Argument	stderr		5995836	0					
ANR	5995997	Identifier	stderr		5995836	0					
ANR	5995998	Argument	"""Error %d listing params\\n"""		5995836	1					
ANR	5995999	PrimaryExpression	"""Error %d listing params\\n"""		5995836	0					
ANR	5996000	Argument	status		5995836	2					
ANR	5996001	Identifier	status		5995836	0					
ANR	5996002	ReturnStatement	return status ;	63:2:2050:2063	5995836	6	True				
ANR	5996003	Identifier	status		5995836	0					
ANR	5996004	ReturnType	static int		5995836	1					
ANR	5996005	Identifier	example_list_params		5995836	2					
ANR	5996006	ParameterList	IjsClientCtx * ctx		5995836	3					
ANR	5996007	Parameter	IjsClientCtx * ctx	32:21:1273:1289	5995836	0	True				
ANR	5996008	ParameterType	IjsClientCtx *		5995836	0					
ANR	5996009	Identifier	ctx		5995836	1					
ANR	5996010	CFGEntryNode	ENTRY		5995836		True				
ANR	5996011	CFGExitNode	EXIT		5995836		True				
ANR	5996012	Symbol	ijs_client_enum_param		5995836						
ANR	5996013	Symbol	ebuf		5995836						
ANR	5996014	Symbol	* buf		5995836						
ANR	5996015	Symbol	NULL		5995836						
ANR	5996016	Symbol	ctx		5995836						
ANR	5996017	Symbol	ijs_client_list_params		5995836						
ANR	5996018	Symbol	strtok		5995836						
ANR	5996019	Symbol	stderr		5995836						
ANR	5996020	Symbol	* status		5995836						
ANR	5996021	Symbol	p		5995836						
ANR	5996022	Symbol	buf		5995836						
ANR	5996023	Symbol	* ebuf		5995836						
ANR	5996024	Symbol	status		5995836						
ANR	5996025	Function	send_pnm_file	66:0:2068:4363							
ANR	5996026	FunctionDef	"send_pnm_file (IjsClientCtx * ctx , FILE * f , int xres , int yres)"		5996025	0					
ANR	5996027	CompoundStatement		68:0:2142:4363	5996025	0					
ANR	5996028	IdentifierDeclStatement	"int width , height ;"	69:2:2146:2163	5996025	0	True				
ANR	5996029	IdentifierDecl	width		5996025	0					
ANR	5996030	IdentifierDeclType	int		5996025	0					
ANR	5996031	Identifier	width		5996025	1					
ANR	5996032	IdentifierDecl	height		5996025	1					
ANR	5996033	IdentifierDeclType	int		5996025	0					
ANR	5996034	Identifier	height		5996025	1					
ANR	5996035	IdentifierDeclStatement	"char * lp , type ;"	70:2:2167:2181	5996025	1	True				
ANR	5996036	IdentifierDecl	* lp		5996025	0					
ANR	5996037	IdentifierDeclType	char *		5996025	0					
ANR	5996038	Identifier	lp		5996025	1					
ANR	5996039	IdentifierDecl	type		5996025	1					
ANR	5996040	IdentifierDeclType	char		5996025	0					
ANR	5996041	Identifier	type		5996025	1					
ANR	5996042	IdentifierDeclStatement	"int total_bytes , bytes_left ;"	71:2:2185:2212	5996025	2	True				
ANR	5996043	IdentifierDecl	total_bytes		5996025	0					
ANR	5996044	IdentifierDeclType	int		5996025	0					
ANR	5996045	Identifier	total_bytes		5996025	1					
ANR	5996046	IdentifierDecl	bytes_left		5996025	1					
ANR	5996047	IdentifierDeclType	int		5996025	0					
ANR	5996048	Identifier	bytes_left		5996025	1					
ANR	5996049	IdentifierDeclStatement	"int n_chan , bps ;"	72:2:2216:2231	5996025	3	True				
ANR	5996050	IdentifierDecl	n_chan		5996025	0					
ANR	5996051	IdentifierDeclType	int		5996025	0					
ANR	5996052	Identifier	n_chan		5996025	1					
ANR	5996053	IdentifierDecl	bps		5996025	1					
ANR	5996054	IdentifierDeclType	int		5996025	0					
ANR	5996055	Identifier	bps		5996025	1					
ANR	5996056	IdentifierDeclStatement	char buf [ 4096 ] ;	73:2:2235:2249	5996025	4	True				
ANR	5996057	IdentifierDecl	buf [ 4096 ]		5996025	0					
ANR	5996058	IdentifierDeclType	char [ 4096 ]		5996025	0					
ANR	5996059	Identifier	buf		5996025	1					
ANR	5996060	PrimaryExpression	4096		5996025	2					
ANR	5996061	IdentifierDeclStatement	int status = 0 ;	74:2:2253:2267	5996025	5	True				
ANR	5996062	IdentifierDecl	status = 0		5996025	0					
ANR	5996063	IdentifierDeclType	int		5996025	0					
ANR	5996064	Identifier	status		5996025	1					
ANR	5996065	AssignmentExpression	status = 0		5996025	2		=			
ANR	5996066	Identifier	status		5996025	0					
ANR	5996067	PrimaryExpression	0		5996025	1					
ANR	5996068	ExpressionStatement	"lp = fgets ( buf , sizeof ( buf ) , f )"	76:2:2272:2304	5996025	6	True				
ANR	5996069	AssignmentExpression	"lp = fgets ( buf , sizeof ( buf ) , f )"		5996025	0		=			
ANR	5996070	Identifier	lp		5996025	0					
ANR	5996071	CallExpression	"fgets ( buf , sizeof ( buf ) , f )"		5996025	1					
ANR	5996072	Callee	fgets		5996025	0					
ANR	5996073	Identifier	fgets		5996025	0					
ANR	5996074	ArgumentList	buf		5996025	1					
ANR	5996075	Argument	buf		5996025	0					
ANR	5996076	Identifier	buf		5996025	0					
ANR	5996077	Argument	sizeof ( buf )		5996025	1					
ANR	5996078	SizeofExpression	sizeof ( buf )		5996025	0					
ANR	5996079	Sizeof	sizeof		5996025	0					
ANR	5996080	SizeofOperand	buf		5996025	1					
ANR	5996081	Argument	f		5996025	2					
ANR	5996082	Identifier	f		5996025	0					
ANR	5996083	IfStatement	if ( lp == NULL )		5996025	7					
ANR	5996084	Condition	lp == NULL	77:6:2312:2321	5996025	0	True				
ANR	5996085	EqualityExpression	lp == NULL		5996025	0		==			
ANR	5996086	Identifier	lp		5996025	0					
ANR	5996087	Identifier	NULL		5996025	1					
ANR	5996088	CompoundStatement		11:4:185:185	5996025	1					
ANR	5996089	ExpressionStatement	"fprintf ( stderr , ""error reading file\\n"" )"	79:6:2336:2376	5996025	0	True				
ANR	5996090	CallExpression	"fprintf ( stderr , ""error reading file\\n"" )"		5996025	0					
ANR	5996091	Callee	fprintf		5996025	0					
ANR	5996092	Identifier	fprintf		5996025	0					
ANR	5996093	ArgumentList	stderr		5996025	1					
ANR	5996094	Argument	stderr		5996025	0					
ANR	5996095	Identifier	stderr		5996025	0					
ANR	5996096	Argument	"""error reading file\\n"""		5996025	1					
ANR	5996097	PrimaryExpression	"""error reading file\\n"""		5996025	0					
ANR	5996098	ReturnStatement	return 1 ;	80:6:2384:2392	5996025	1	True				
ANR	5996099	PrimaryExpression	1		5996025	0					
ANR	5996100	IfStatement	if ( lp [ 0 ] != 'P' || lp [ 1 ] < '4' || lp [ 1 ] > '6' )		5996025	8					
ANR	5996101	Condition	lp [ 0 ] != 'P' || lp [ 1 ] < '4' || lp [ 1 ] > '6'	82:6:2406:2447	5996025	0	True				
ANR	5996102	OrExpression	lp [ 0 ] != 'P' || lp [ 1 ] < '4' || lp [ 1 ] > '6'		5996025	0		||			
ANR	5996103	EqualityExpression	lp [ 0 ] != 'P'		5996025	0		!=			
ANR	5996104	ArrayIndexing	lp [ 0 ]		5996025	0					
ANR	5996105	Identifier	lp		5996025	0					
ANR	5996106	PrimaryExpression	0		5996025	1					
ANR	5996107	PrimaryExpression	'P'		5996025	1					
ANR	5996108	OrExpression	lp [ 1 ] < '4' || lp [ 1 ] > '6'		5996025	1		||			
ANR	5996109	RelationalExpression	lp [ 1 ] < '4'		5996025	0		<			
ANR	5996110	ArrayIndexing	lp [ 1 ]		5996025	0					
ANR	5996111	Identifier	lp		5996025	0					
ANR	5996112	PrimaryExpression	1		5996025	1					
ANR	5996113	PrimaryExpression	'4'		5996025	1					
ANR	5996114	RelationalExpression	lp [ 1 ] > '6'		5996025	1		>			
ANR	5996115	ArrayIndexing	lp [ 1 ]		5996025	0					
ANR	5996116	Identifier	lp		5996025	0					
ANR	5996117	PrimaryExpression	1		5996025	1					
ANR	5996118	PrimaryExpression	'6'		5996025	1					
ANR	5996119	CompoundStatement		16:4:311:311	5996025	1					
ANR	5996120	ExpressionStatement	"fprintf ( stderr , ""need pnmraw file\\n"" )"	84:6:2462:2500	5996025	0	True				
ANR	5996121	CallExpression	"fprintf ( stderr , ""need pnmraw file\\n"" )"		5996025	0					
ANR	5996122	Callee	fprintf		5996025	0					
ANR	5996123	Identifier	fprintf		5996025	0					
ANR	5996124	ArgumentList	stderr		5996025	1					
ANR	5996125	Argument	stderr		5996025	0					
ANR	5996126	Identifier	stderr		5996025	0					
ANR	5996127	Argument	"""need pnmraw file\\n"""		5996025	1					
ANR	5996128	PrimaryExpression	"""need pnmraw file\\n"""		5996025	0					
ANR	5996129	ReturnStatement	return 1 ;	85:6:2508:2516	5996025	1	True				
ANR	5996130	PrimaryExpression	1		5996025	0					
ANR	5996131	ExpressionStatement	type = lp [ 1 ]	87:2:2526:2538	5996025	9	True				
ANR	5996132	AssignmentExpression	type = lp [ 1 ]		5996025	0		=			
ANR	5996133	Identifier	type		5996025	0					
ANR	5996134	ArrayIndexing	lp [ 1 ]		5996025	1					
ANR	5996135	Identifier	lp		5996025	0					
ANR	5996136	PrimaryExpression	1		5996025	1					
ANR	5996137	DoStatement	do		5996025	10					
ANR	5996138	CompoundStatement		22:4:406:406	5996025	0					
ANR	5996139	ExpressionStatement	"lp = fgets ( buf , sizeof ( buf ) , f )"	90:6:2557:2589	5996025	0	True				
ANR	5996140	AssignmentExpression	"lp = fgets ( buf , sizeof ( buf ) , f )"		5996025	0		=			
ANR	5996141	Identifier	lp		5996025	0					
ANR	5996142	CallExpression	"fgets ( buf , sizeof ( buf ) , f )"		5996025	1					
ANR	5996143	Callee	fgets		5996025	0					
ANR	5996144	Identifier	fgets		5996025	0					
ANR	5996145	ArgumentList	buf		5996025	1					
ANR	5996146	Argument	buf		5996025	0					
ANR	5996147	Identifier	buf		5996025	0					
ANR	5996148	Argument	sizeof ( buf )		5996025	1					
ANR	5996149	SizeofExpression	sizeof ( buf )		5996025	0					
ANR	5996150	Sizeof	sizeof		5996025	0					
ANR	5996151	SizeofOperand	buf		5996025	1					
ANR	5996152	Argument	f		5996025	2					
ANR	5996153	Identifier	f		5996025	0					
ANR	5996154	Condition	lp != NULL && lp [ 0 ] == '#'	92:9:2606:2631	5996025	1	True				
ANR	5996155	AndExpression	lp != NULL && lp [ 0 ] == '#'		5996025	0		&&			
ANR	5996156	EqualityExpression	lp != NULL		5996025	0		!=			
ANR	5996157	Identifier	lp		5996025	0					
ANR	5996158	Identifier	NULL		5996025	1					
ANR	5996159	EqualityExpression	lp [ 0 ] == '#'		5996025	1		==			
ANR	5996160	ArrayIndexing	lp [ 0 ]		5996025	0					
ANR	5996161	Identifier	lp		5996025	0					
ANR	5996162	PrimaryExpression	0		5996025	1					
ANR	5996163	PrimaryExpression	'#'		5996025	1					
ANR	5996164	IfStatement	"if ( sscanf ( lp , ""%d %d"" , & width , & height ) != 2 )"		5996025	11					
ANR	5996165	Condition	"sscanf ( lp , ""%d %d"" , & width , & height ) != 2"	93:6:2641:2682	5996025	0	True				
ANR	5996166	EqualityExpression	"sscanf ( lp , ""%d %d"" , & width , & height ) != 2"		5996025	0		!=			
ANR	5996167	CallExpression	"sscanf ( lp , ""%d %d"" , & width , & height )"		5996025	0					
ANR	5996168	Callee	sscanf		5996025	0					
ANR	5996169	Identifier	sscanf		5996025	0					
ANR	5996170	ArgumentList	lp		5996025	1					
ANR	5996171	Argument	lp		5996025	0					
ANR	5996172	Identifier	lp		5996025	0					
ANR	5996173	Argument	"""%d %d"""		5996025	1					
ANR	5996174	PrimaryExpression	"""%d %d"""		5996025	0					
ANR	5996175	Argument	& width		5996025	2					
ANR	5996176	UnaryOperationExpression	& width		5996025	0					
ANR	5996177	UnaryOperator	&		5996025	0					
ANR	5996178	Identifier	width		5996025	1					
ANR	5996179	Argument	& height		5996025	3					
ANR	5996180	UnaryOperationExpression	& height		5996025	0					
ANR	5996181	UnaryOperator	&		5996025	0					
ANR	5996182	Identifier	height		5996025	1					
ANR	5996183	PrimaryExpression	2		5996025	1					
ANR	5996184	CompoundStatement		27:4:546:546	5996025	1					
ANR	5996185	ExpressionStatement	"fprintf ( stderr , ""format error\\n"" )"	95:6:2697:2731	5996025	0	True				
ANR	5996186	CallExpression	"fprintf ( stderr , ""format error\\n"" )"		5996025	0					
ANR	5996187	Callee	fprintf		5996025	0					
ANR	5996188	Identifier	fprintf		5996025	0					
ANR	5996189	ArgumentList	stderr		5996025	1					
ANR	5996190	Argument	stderr		5996025	0					
ANR	5996191	Identifier	stderr		5996025	0					
ANR	5996192	Argument	"""format error\\n"""		5996025	1					
ANR	5996193	PrimaryExpression	"""format error\\n"""		5996025	0					
ANR	5996194	ReturnStatement	return 1 ;	96:6:2739:2747	5996025	1	True				
ANR	5996195	PrimaryExpression	1		5996025	0					
ANR	5996196	IfStatement	if ( type >= '5' )		5996025	12					
ANR	5996197	Condition	type >= '5'	98:6:2761:2771	5996025	0	True				
ANR	5996198	RelationalExpression	type >= '5'		5996025	0		>=			
ANR	5996199	Identifier	type		5996025	0					
ANR	5996200	PrimaryExpression	'5'		5996025	1					
ANR	5996201	CompoundStatement		32:4:635:635	5996025	1					
ANR	5996202	DoStatement	do		5996025	0					
ANR	5996203	CompoundStatement		35:8:677:677	5996025	0					
ANR	5996204	ExpressionStatement	"lp = fgets ( buf , sizeof ( buf ) , f )"	103:10:2832:2864	5996025	0	True				
ANR	5996205	AssignmentExpression	"lp = fgets ( buf , sizeof ( buf ) , f )"		5996025	0		=			
ANR	5996206	Identifier	lp		5996025	0					
ANR	5996207	CallExpression	"fgets ( buf , sizeof ( buf ) , f )"		5996025	1					
ANR	5996208	Callee	fgets		5996025	0					
ANR	5996209	Identifier	fgets		5996025	0					
ANR	5996210	ArgumentList	buf		5996025	1					
ANR	5996211	Argument	buf		5996025	0					
ANR	5996212	Identifier	buf		5996025	0					
ANR	5996213	Argument	sizeof ( buf )		5996025	1					
ANR	5996214	SizeofExpression	sizeof ( buf )		5996025	0					
ANR	5996215	Sizeof	sizeof		5996025	0					
ANR	5996216	SizeofOperand	buf		5996025	1					
ANR	5996217	Argument	f		5996025	2					
ANR	5996218	Identifier	f		5996025	0					
ANR	5996219	Condition	lp != NULL && lp [ 0 ] == '#'	105:13:2889:2914	5996025	1	True				
ANR	5996220	AndExpression	lp != NULL && lp [ 0 ] == '#'		5996025	0		&&			
ANR	5996221	EqualityExpression	lp != NULL		5996025	0		!=			
ANR	5996222	Identifier	lp		5996025	0					
ANR	5996223	Identifier	NULL		5996025	1					
ANR	5996224	EqualityExpression	lp [ 0 ] == '#'		5996025	1		==			
ANR	5996225	ArrayIndexing	lp [ 0 ]		5996025	0					
ANR	5996226	Identifier	lp		5996025	0					
ANR	5996227	PrimaryExpression	0		5996025	1					
ANR	5996228	PrimaryExpression	'#'		5996025	1					
ANR	5996229	ExpressionStatement	n_chan = ( type == '6' ) ? 3 : 1	108:2:2927:2957	5996025	13	True				
ANR	5996230	AssignmentExpression	n_chan = ( type == '6' ) ? 3 : 1		5996025	0		=			
ANR	5996231	Identifier	n_chan		5996025	0					
ANR	5996232	ConditionalExpression	( type == '6' ) ? 3 : 1		5996025	1					
ANR	5996233	Condition	type == '6'		5996025	0					
ANR	5996234	EqualityExpression	type == '6'		5996025	0		==			
ANR	5996235	Identifier	type		5996025	0					
ANR	5996236	PrimaryExpression	'6'		5996025	1					
ANR	5996237	PrimaryExpression	3		5996025	1					
ANR	5996238	PrimaryExpression	1		5996025	2					
ANR	5996239	ExpressionStatement	bps = ( type == '4' ) ? 1 : 8	109:2:2961:2988	5996025	14	True				
ANR	5996240	AssignmentExpression	bps = ( type == '4' ) ? 1 : 8		5996025	0		=			
ANR	5996241	Identifier	bps		5996025	0					
ANR	5996242	ConditionalExpression	( type == '4' ) ? 1 : 8		5996025	1					
ANR	5996243	Condition	type == '4'		5996025	0					
ANR	5996244	EqualityExpression	type == '4'		5996025	0		==			
ANR	5996245	Identifier	type		5996025	0					
ANR	5996246	PrimaryExpression	'4'		5996025	1					
ANR	5996247	PrimaryExpression	1		5996025	1					
ANR	5996248	PrimaryExpression	8		5996025	2					
ANR	5996249	ExpressionStatement	"sprintf ( buf , ""%d"" , n_chan )"	113:2:3078:3105	5996025	15	True				
ANR	5996250	CallExpression	"sprintf ( buf , ""%d"" , n_chan )"		5996025	0					
ANR	5996251	Callee	sprintf		5996025	0					
ANR	5996252	Identifier	sprintf		5996025	0					
ANR	5996253	ArgumentList	buf		5996025	1					
ANR	5996254	Argument	buf		5996025	0					
ANR	5996255	Identifier	buf		5996025	0					
ANR	5996256	Argument	"""%d"""		5996025	1					
ANR	5996257	PrimaryExpression	"""%d"""		5996025	0					
ANR	5996258	Argument	n_chan		5996025	2					
ANR	5996259	Identifier	n_chan		5996025	0					
ANR	5996260	ExpressionStatement	"ijs_client_set_param ( ctx , 0 , ""NumChan"" , buf , strlen ( buf ) )"	114:2:3109:3168	5996025	16	True				
ANR	5996261	CallExpression	"ijs_client_set_param ( ctx , 0 , ""NumChan"" , buf , strlen ( buf ) )"		5996025	0					
ANR	5996262	Callee	ijs_client_set_param		5996025	0					
ANR	5996263	Identifier	ijs_client_set_param		5996025	0					
ANR	5996264	ArgumentList	ctx		5996025	1					
ANR	5996265	Argument	ctx		5996025	0					
ANR	5996266	Identifier	ctx		5996025	0					
ANR	5996267	Argument	0		5996025	1					
ANR	5996268	PrimaryExpression	0		5996025	0					
ANR	5996269	Argument	"""NumChan"""		5996025	2					
ANR	5996270	PrimaryExpression	"""NumChan"""		5996025	0					
ANR	5996271	Argument	buf		5996025	3					
ANR	5996272	Identifier	buf		5996025	0					
ANR	5996273	Argument	strlen ( buf )		5996025	4					
ANR	5996274	CallExpression	strlen ( buf )		5996025	0					
ANR	5996275	Callee	strlen		5996025	0					
ANR	5996276	Identifier	strlen		5996025	0					
ANR	5996277	ArgumentList	buf		5996025	1					
ANR	5996278	Argument	buf		5996025	0					
ANR	5996279	Identifier	buf		5996025	0					
ANR	5996280	ExpressionStatement	"sprintf ( buf , ""%d"" , bps )"	115:2:3172:3196	5996025	17	True				
ANR	5996281	CallExpression	"sprintf ( buf , ""%d"" , bps )"		5996025	0					
ANR	5996282	Callee	sprintf		5996025	0					
ANR	5996283	Identifier	sprintf		5996025	0					
ANR	5996284	ArgumentList	buf		5996025	1					
ANR	5996285	Argument	buf		5996025	0					
ANR	5996286	Identifier	buf		5996025	0					
ANR	5996287	Argument	"""%d"""		5996025	1					
ANR	5996288	PrimaryExpression	"""%d"""		5996025	0					
ANR	5996289	Argument	bps		5996025	2					
ANR	5996290	Identifier	bps		5996025	0					
ANR	5996291	ExpressionStatement	"ijs_client_set_param ( ctx , 0 , ""BitsPerSample"" , buf , strlen ( buf ) )"	116:2:3200:3265	5996025	18	True				
ANR	5996292	CallExpression	"ijs_client_set_param ( ctx , 0 , ""BitsPerSample"" , buf , strlen ( buf ) )"		5996025	0					
ANR	5996293	Callee	ijs_client_set_param		5996025	0					
ANR	5996294	Identifier	ijs_client_set_param		5996025	0					
ANR	5996295	ArgumentList	ctx		5996025	1					
ANR	5996296	Argument	ctx		5996025	0					
ANR	5996297	Identifier	ctx		5996025	0					
ANR	5996298	Argument	0		5996025	1					
ANR	5996299	PrimaryExpression	0		5996025	0					
ANR	5996300	Argument	"""BitsPerSample"""		5996025	2					
ANR	5996301	PrimaryExpression	"""BitsPerSample"""		5996025	0					
ANR	5996302	Argument	buf		5996025	3					
ANR	5996303	Identifier	buf		5996025	0					
ANR	5996304	Argument	strlen ( buf )		5996025	4					
ANR	5996305	CallExpression	strlen ( buf )		5996025	0					
ANR	5996306	Callee	strlen		5996025	0					
ANR	5996307	Identifier	strlen		5996025	0					
ANR	5996308	ArgumentList	buf		5996025	1					
ANR	5996309	Argument	buf		5996025	0					
ANR	5996310	Identifier	buf		5996025	0					
ANR	5996311	ExpressionStatement	"strcpy ( buf , ( n_chan == 3 ) ? ""DeviceRGB"" : ""DeviceGray"" )"	117:2:3269:3325	5996025	19	True				
ANR	5996312	CallExpression	"strcpy ( buf , ( n_chan == 3 ) ? ""DeviceRGB"" : ""DeviceGray"" )"		5996025	0					
ANR	5996313	Callee	strcpy		5996025	0					
ANR	5996314	Identifier	strcpy		5996025	0					
ANR	5996315	ArgumentList	buf		5996025	1					
ANR	5996316	Argument	buf		5996025	0					
ANR	5996317	Identifier	buf		5996025	0					
ANR	5996318	Argument	"( n_chan == 3 ) ? ""DeviceRGB"" : ""DeviceGray"""		5996025	1					
ANR	5996319	ConditionalExpression	"( n_chan == 3 ) ? ""DeviceRGB"" : ""DeviceGray"""		5996025	0					
ANR	5996320	Condition	n_chan == 3		5996025	0					
ANR	5996321	EqualityExpression	n_chan == 3		5996025	0		==			
ANR	5996322	Identifier	n_chan		5996025	0					
ANR	5996323	PrimaryExpression	3		5996025	1					
ANR	5996324	PrimaryExpression	"""DeviceRGB"""		5996025	1					
ANR	5996325	PrimaryExpression	"""DeviceGray"""		5996025	2					
ANR	5996326	ExpressionStatement	"ijs_client_set_param ( ctx , 0 , ""ColorSpace"" , buf , strlen ( buf ) )"	118:2:3329:3391	5996025	20	True				
ANR	5996327	CallExpression	"ijs_client_set_param ( ctx , 0 , ""ColorSpace"" , buf , strlen ( buf ) )"		5996025	0					
ANR	5996328	Callee	ijs_client_set_param		5996025	0					
ANR	5996329	Identifier	ijs_client_set_param		5996025	0					
ANR	5996330	ArgumentList	ctx		5996025	1					
ANR	5996331	Argument	ctx		5996025	0					
ANR	5996332	Identifier	ctx		5996025	0					
ANR	5996333	Argument	0		5996025	1					
ANR	5996334	PrimaryExpression	0		5996025	0					
ANR	5996335	Argument	"""ColorSpace"""		5996025	2					
ANR	5996336	PrimaryExpression	"""ColorSpace"""		5996025	0					
ANR	5996337	Argument	buf		5996025	3					
ANR	5996338	Identifier	buf		5996025	0					
ANR	5996339	Argument	strlen ( buf )		5996025	4					
ANR	5996340	CallExpression	strlen ( buf )		5996025	0					
ANR	5996341	Callee	strlen		5996025	0					
ANR	5996342	Identifier	strlen		5996025	0					
ANR	5996343	ArgumentList	buf		5996025	1					
ANR	5996344	Argument	buf		5996025	0					
ANR	5996345	Identifier	buf		5996025	0					
ANR	5996346	ExpressionStatement	"sprintf ( buf , ""%d"" , width )"	119:2:3395:3421	5996025	21	True				
ANR	5996347	CallExpression	"sprintf ( buf , ""%d"" , width )"		5996025	0					
ANR	5996348	Callee	sprintf		5996025	0					
ANR	5996349	Identifier	sprintf		5996025	0					
ANR	5996350	ArgumentList	buf		5996025	1					
ANR	5996351	Argument	buf		5996025	0					
ANR	5996352	Identifier	buf		5996025	0					
ANR	5996353	Argument	"""%d"""		5996025	1					
ANR	5996354	PrimaryExpression	"""%d"""		5996025	0					
ANR	5996355	Argument	width		5996025	2					
ANR	5996356	Identifier	width		5996025	0					
ANR	5996357	ExpressionStatement	"ijs_client_set_param ( ctx , 0 , ""Width"" , buf , strlen ( buf ) )"	120:2:3425:3482	5996025	22	True				
ANR	5996358	CallExpression	"ijs_client_set_param ( ctx , 0 , ""Width"" , buf , strlen ( buf ) )"		5996025	0					
ANR	5996359	Callee	ijs_client_set_param		5996025	0					
ANR	5996360	Identifier	ijs_client_set_param		5996025	0					
ANR	5996361	ArgumentList	ctx		5996025	1					
ANR	5996362	Argument	ctx		5996025	0					
ANR	5996363	Identifier	ctx		5996025	0					
ANR	5996364	Argument	0		5996025	1					
ANR	5996365	PrimaryExpression	0		5996025	0					
ANR	5996366	Argument	"""Width"""		5996025	2					
ANR	5996367	PrimaryExpression	"""Width"""		5996025	0					
ANR	5996368	Argument	buf		5996025	3					
ANR	5996369	Identifier	buf		5996025	0					
ANR	5996370	Argument	strlen ( buf )		5996025	4					
ANR	5996371	CallExpression	strlen ( buf )		5996025	0					
ANR	5996372	Callee	strlen		5996025	0					
ANR	5996373	Identifier	strlen		5996025	0					
ANR	5996374	ArgumentList	buf		5996025	1					
ANR	5996375	Argument	buf		5996025	0					
ANR	5996376	Identifier	buf		5996025	0					
ANR	5996377	ExpressionStatement	"sprintf ( buf , ""%d"" , height )"	121:2:3486:3513	5996025	23	True				
ANR	5996378	CallExpression	"sprintf ( buf , ""%d"" , height )"		5996025	0					
ANR	5996379	Callee	sprintf		5996025	0					
ANR	5996380	Identifier	sprintf		5996025	0					
ANR	5996381	ArgumentList	buf		5996025	1					
ANR	5996382	Argument	buf		5996025	0					
ANR	5996383	Identifier	buf		5996025	0					
ANR	5996384	Argument	"""%d"""		5996025	1					
ANR	5996385	PrimaryExpression	"""%d"""		5996025	0					
ANR	5996386	Argument	height		5996025	2					
ANR	5996387	Identifier	height		5996025	0					
ANR	5996388	ExpressionStatement	"ijs_client_set_param ( ctx , 0 , ""Height"" , buf , strlen ( buf ) )"	122:2:3517:3575	5996025	24	True				
ANR	5996389	CallExpression	"ijs_client_set_param ( ctx , 0 , ""Height"" , buf , strlen ( buf ) )"		5996025	0					
ANR	5996390	Callee	ijs_client_set_param		5996025	0					
ANR	5996391	Identifier	ijs_client_set_param		5996025	0					
ANR	5996392	ArgumentList	ctx		5996025	1					
ANR	5996393	Argument	ctx		5996025	0					
ANR	5996394	Identifier	ctx		5996025	0					
ANR	5996395	Argument	0		5996025	1					
ANR	5996396	PrimaryExpression	0		5996025	0					
ANR	5996397	Argument	"""Height"""		5996025	2					
ANR	5996398	PrimaryExpression	"""Height"""		5996025	0					
ANR	5996399	Argument	buf		5996025	3					
ANR	5996400	Identifier	buf		5996025	0					
ANR	5996401	Argument	strlen ( buf )		5996025	4					
ANR	5996402	CallExpression	strlen ( buf )		5996025	0					
ANR	5996403	Callee	strlen		5996025	0					
ANR	5996404	Identifier	strlen		5996025	0					
ANR	5996405	ArgumentList	buf		5996025	1					
ANR	5996406	Argument	buf		5996025	0					
ANR	5996407	Identifier	buf		5996025	0					
ANR	5996408	ExpressionStatement	"sprintf ( buf , ""%dx%d"" , xres , yres )"	123:2:3579:3613	5996025	25	True				
ANR	5996409	CallExpression	"sprintf ( buf , ""%dx%d"" , xres , yres )"		5996025	0					
ANR	5996410	Callee	sprintf		5996025	0					
ANR	5996411	Identifier	sprintf		5996025	0					
ANR	5996412	ArgumentList	buf		5996025	1					
ANR	5996413	Argument	buf		5996025	0					
ANR	5996414	Identifier	buf		5996025	0					
ANR	5996415	Argument	"""%dx%d"""		5996025	1					
ANR	5996416	PrimaryExpression	"""%dx%d"""		5996025	0					
ANR	5996417	Argument	xres		5996025	2					
ANR	5996418	Identifier	xres		5996025	0					
ANR	5996419	Argument	yres		5996025	3					
ANR	5996420	Identifier	yres		5996025	0					
ANR	5996421	ExpressionStatement	"ijs_client_set_param ( ctx , 0 , ""Dpi"" , buf , strlen ( buf ) )"	124:2:3617:3672	5996025	26	True				
ANR	5996422	CallExpression	"ijs_client_set_param ( ctx , 0 , ""Dpi"" , buf , strlen ( buf ) )"		5996025	0					
ANR	5996423	Callee	ijs_client_set_param		5996025	0					
ANR	5996424	Identifier	ijs_client_set_param		5996025	0					
ANR	5996425	ArgumentList	ctx		5996025	1					
ANR	5996426	Argument	ctx		5996025	0					
ANR	5996427	Identifier	ctx		5996025	0					
ANR	5996428	Argument	0		5996025	1					
ANR	5996429	PrimaryExpression	0		5996025	0					
ANR	5996430	Argument	"""Dpi"""		5996025	2					
ANR	5996431	PrimaryExpression	"""Dpi"""		5996025	0					
ANR	5996432	Argument	buf		5996025	3					
ANR	5996433	Identifier	buf		5996025	0					
ANR	5996434	Argument	strlen ( buf )		5996025	4					
ANR	5996435	CallExpression	strlen ( buf )		5996025	0					
ANR	5996436	Callee	strlen		5996025	0					
ANR	5996437	Identifier	strlen		5996025	0					
ANR	5996438	ArgumentList	buf		5996025	1					
ANR	5996439	Argument	buf		5996025	0					
ANR	5996440	Identifier	buf		5996025	0					
ANR	5996441	ExpressionStatement	"ijs_client_begin_page ( ctx , 0 )"	126:2:3677:3707	5996025	27	True				
ANR	5996442	CallExpression	"ijs_client_begin_page ( ctx , 0 )"		5996025	0					
ANR	5996443	Callee	ijs_client_begin_page		5996025	0					
ANR	5996444	Identifier	ijs_client_begin_page		5996025	0					
ANR	5996445	ArgumentList	ctx		5996025	1					
ANR	5996446	Argument	ctx		5996025	0					
ANR	5996447	Identifier	ctx		5996025	0					
ANR	5996448	Argument	0		5996025	1					
ANR	5996449	PrimaryExpression	0		5996025	0					
ANR	5996450	ExpressionStatement	total_bytes = ( ( n_chan * bps * width + 7 ) >> 3 ) * height	128:2:3712:3768	5996025	28	True				
ANR	5996451	AssignmentExpression	total_bytes = ( ( n_chan * bps * width + 7 ) >> 3 ) * height		5996025	0		=			
ANR	5996452	Identifier	total_bytes		5996025	0					
ANR	5996453	MultiplicativeExpression	( ( n_chan * bps * width + 7 ) >> 3 ) * height		5996025	1		*			
ANR	5996454	ShiftExpression	( n_chan * bps * width + 7 ) >> 3		5996025	0		>>			
ANR	5996455	AdditiveExpression	n_chan * bps * width + 7		5996025	0		+			
ANR	5996456	MultiplicativeExpression	n_chan * bps * width		5996025	0		*			
ANR	5996457	Identifier	n_chan		5996025	0					
ANR	5996458	MultiplicativeExpression	bps * width		5996025	1		*			
ANR	5996459	Identifier	bps		5996025	0					
ANR	5996460	Identifier	width		5996025	1					
ANR	5996461	PrimaryExpression	7		5996025	1					
ANR	5996462	PrimaryExpression	3		5996025	1					
ANR	5996463	Identifier	height		5996025	1					
ANR	5996464	ExpressionStatement	bytes_left = total_bytes	129:2:3772:3796	5996025	29	True				
ANR	5996465	AssignmentExpression	bytes_left = total_bytes		5996025	0		=			
ANR	5996466	Identifier	bytes_left		5996025	0					
ANR	5996467	Identifier	total_bytes		5996025	1					
ANR	5996468	WhileStatement	while ( bytes_left )		5996025	30					
ANR	5996469	Condition	bytes_left	130:9:3807:3816	5996025	0	True				
ANR	5996470	Identifier	bytes_left		5996025	0					
ANR	5996471	CompoundStatement		65:6:1688:1712	5996025	1					
ANR	5996472	IdentifierDeclStatement	int n_bytes = bytes_left ;	132:6:3831:3855	5996025	0	True				
ANR	5996473	IdentifierDecl	n_bytes = bytes_left		5996025	0					
ANR	5996474	IdentifierDeclType	int		5996025	0					
ANR	5996475	Identifier	n_bytes		5996025	1					
ANR	5996476	AssignmentExpression	n_bytes = bytes_left		5996025	2		=			
ANR	5996477	Identifier	bytes_left		5996025	0					
ANR	5996478	Identifier	bytes_left		5996025	1					
ANR	5996479	IfStatement	if ( n_bytes > sizeof ( buf ) )		5996025	1					
ANR	5996480	Condition	n_bytes > sizeof ( buf )	133:10:3867:3887	5996025	0	True				
ANR	5996481	RelationalExpression	n_bytes > sizeof ( buf )		5996025	0		>			
ANR	5996482	Identifier	n_bytes		5996025	0					
ANR	5996483	SizeofExpression	sizeof ( buf )		5996025	1					
ANR	5996484	Sizeof	sizeof		5996025	0					
ANR	5996485	SizeofOperand	buf		5996025	1					
ANR	5996486	ExpressionStatement	n_bytes = sizeof ( buf )	134:8:3898:3919	5996025	1	True				
ANR	5996487	AssignmentExpression	n_bytes = sizeof ( buf )		5996025	0		=			
ANR	5996488	Identifier	n_bytes		5996025	0					
ANR	5996489	SizeofExpression	sizeof ( buf )		5996025	1					
ANR	5996490	Sizeof	sizeof		5996025	0					
ANR	5996491	SizeofOperand	buf		5996025	1					
ANR	5996492	ExpressionStatement	"fread ( buf , 1 , n_bytes , f )"	135:6:3927:3953	5996025	2	True				
ANR	5996493	CallExpression	"fread ( buf , 1 , n_bytes , f )"		5996025	0					
ANR	5996494	Callee	fread		5996025	0					
ANR	5996495	Identifier	fread		5996025	0					
ANR	5996496	ArgumentList	buf		5996025	1					
ANR	5996497	Argument	buf		5996025	0					
ANR	5996498	Identifier	buf		5996025	0					
ANR	5996499	Argument	1		5996025	1					
ANR	5996500	PrimaryExpression	1		5996025	0					
ANR	5996501	Argument	n_bytes		5996025	2					
ANR	5996502	Identifier	n_bytes		5996025	0					
ANR	5996503	Argument	f		5996025	3					
ANR	5996504	Identifier	f		5996025	0					
ANR	5996505	IfStatement	if ( type == '4' )		5996025	3					
ANR	5996506	Condition	type == '4'	136:10:3989:3999	5996025	0	True				
ANR	5996507	EqualityExpression	type == '4'		5996025	0		==			
ANR	5996508	Identifier	type		5996025	0					
ANR	5996509	PrimaryExpression	'4'		5996025	1					
ANR	5996510	CompoundStatement		72:10:1951:1956	5996025	1					
ANR	5996511	IdentifierDeclStatement	int i ;	139:10:4094:4099	5996025	0	True				
ANR	5996512	IdentifierDecl	i		5996025	0					
ANR	5996513	IdentifierDeclType	int		5996025	0					
ANR	5996514	Identifier	i		5996025	1					
ANR	5996515	ForStatement	for ( i = 0 ; i < n_bytes ; i ++ )		5996025	1					
ANR	5996516	ForInit	i = 0 ;	140:15:4116:4121	5996025	0	True				
ANR	5996517	AssignmentExpression	i = 0		5996025	0		=			
ANR	5996518	Identifier	i		5996025	0					
ANR	5996519	PrimaryExpression	0		5996025	1					
ANR	5996520	Condition	i < n_bytes	140:22:4123:4133	5996025	1	True				
ANR	5996521	RelationalExpression	i < n_bytes		5996025	0		<			
ANR	5996522	Identifier	i		5996025	0					
ANR	5996523	Identifier	n_bytes		5996025	1					
ANR	5996524	PostIncDecOperationExpression	i ++	140:35:4136:4138	5996025	2	True				
ANR	5996525	Identifier	i		5996025	0					
ANR	5996526	IncDec	++		5996025	1					
ANR	5996527	ExpressionStatement	buf [ i ] ^= 0xff	141:12:4153:4167	5996025	3	True				
ANR	5996528	AssignmentExpression	buf [ i ] ^= 0xff		5996025	0		^=			
ANR	5996529	ArrayIndexing	buf [ i ]		5996025	0					
ANR	5996530	Identifier	buf		5996025	0					
ANR	5996531	Identifier	i		5996025	1					
ANR	5996532	PrimaryExpression	0xff		5996025	1					
ANR	5996533	ExpressionStatement	"status = ijs_client_send_data_wait ( ctx , 0 , buf , n_bytes )"	143:6:4185:4242	5996025	4	True				
ANR	5996534	AssignmentExpression	"status = ijs_client_send_data_wait ( ctx , 0 , buf , n_bytes )"		5996025	0		=			
ANR	5996535	Identifier	status		5996025	0					
ANR	5996536	CallExpression	"ijs_client_send_data_wait ( ctx , 0 , buf , n_bytes )"		5996025	1					
ANR	5996537	Callee	ijs_client_send_data_wait		5996025	0					
ANR	5996538	Identifier	ijs_client_send_data_wait		5996025	0					
ANR	5996539	ArgumentList	ctx		5996025	1					
ANR	5996540	Argument	ctx		5996025	0					
ANR	5996541	Identifier	ctx		5996025	0					
ANR	5996542	Argument	0		5996025	1					
ANR	5996543	PrimaryExpression	0		5996025	0					
ANR	5996544	Argument	buf		5996025	2					
ANR	5996545	Identifier	buf		5996025	0					
ANR	5996546	Argument	n_bytes		5996025	3					
ANR	5996547	Identifier	n_bytes		5996025	0					
ANR	5996548	IfStatement	if ( status )		5996025	5					
ANR	5996549	Condition	status	144:10:4254:4259	5996025	0	True				
ANR	5996550	Identifier	status		5996025	0					
ANR	5996551	BreakStatement	break ;	145:8:4270:4275	5996025	1	True				
ANR	5996552	ExpressionStatement	bytes_left -= n_bytes	146:6:4283:4304	5996025	6	True				
ANR	5996553	AssignmentExpression	bytes_left -= n_bytes		5996025	0		-=			
ANR	5996554	Identifier	bytes_left		5996025	0					
ANR	5996555	Identifier	n_bytes		5996025	1					
ANR	5996556	ExpressionStatement	"ijs_client_end_page ( ctx , 0 )"	149:2:4315:4343	5996025	31	True				
ANR	5996557	CallExpression	"ijs_client_end_page ( ctx , 0 )"		5996025	0					
ANR	5996558	Callee	ijs_client_end_page		5996025	0					
ANR	5996559	Identifier	ijs_client_end_page		5996025	0					
ANR	5996560	ArgumentList	ctx		5996025	1					
ANR	5996561	Argument	ctx		5996025	0					
ANR	5996562	Identifier	ctx		5996025	0					
ANR	5996563	Argument	0		5996025	1					
ANR	5996564	PrimaryExpression	0		5996025	0					
ANR	5996565	ReturnStatement	return status ;	151:2:4348:4361	5996025	32	True				
ANR	5996566	Identifier	status		5996025	0					
ANR	5996567	ReturnType	static int		5996025	1					
ANR	5996568	Identifier	send_pnm_file		5996025	2					
ANR	5996569	ParameterList	"IjsClientCtx * ctx , FILE * f , int xres , int yres"		5996025	3					
ANR	5996570	Parameter	IjsClientCtx * ctx	67:15:2094:2110	5996025	0	True				
ANR	5996571	ParameterType	IjsClientCtx *		5996025	0					
ANR	5996572	Identifier	ctx		5996025	1					
ANR	5996573	Parameter	FILE * f	67:34:2113:2119	5996025	1	True				
ANR	5996574	ParameterType	FILE *		5996025	0					
ANR	5996575	Identifier	f		5996025	1					
ANR	5996576	Parameter	int xres	67:43:2122:2129	5996025	2	True				
ANR	5996577	ParameterType	int		5996025	0					
ANR	5996578	Identifier	xres		5996025	1					
ANR	5996579	Parameter	int yres	67:53:2132:2139	5996025	3	True				
ANR	5996580	ParameterType	int		5996025	0					
ANR	5996581	Identifier	yres		5996025	1					
ANR	5996582	CFGEntryNode	ENTRY		5996025		True				
ANR	5996583	CFGExitNode	EXIT		5996025		True				
ANR	5996584	Symbol	lp		5996025						
ANR	5996585	Symbol	& width		5996025						
ANR	5996586	Symbol	type		5996025						
ANR	5996587	Symbol	& height		5996025						
ANR	5996588	Symbol	fgets		5996025						
ANR	5996589	Symbol	ijs_client_send_data_wait		5996025						
ANR	5996590	Symbol	xres		5996025						
ANR	5996591	Symbol	strlen		5996025						
ANR	5996592	Symbol	total_bytes		5996025						
ANR	5996593	Symbol	n_chan		5996025						
ANR	5996594	Symbol	height		5996025						
ANR	5996595	Symbol	* buf		5996025						
ANR	5996596	Symbol	NULL		5996025						
ANR	5996597	Symbol	bps		5996025						
ANR	5996598	Symbol	bytes_left		5996025						
ANR	5996599	Symbol	ctx		5996025						
ANR	5996600	Symbol	f		5996025						
ANR	5996601	Symbol	* lp		5996025						
ANR	5996602	Symbol	i		5996025						
ANR	5996603	Symbol	stderr		5996025						
ANR	5996604	Symbol	buf		5996025						
ANR	5996605	Symbol	* i		5996025						
ANR	5996606	Symbol	sscanf		5996025						
ANR	5996607	Symbol	width		5996025						
ANR	5996608	Symbol	n_bytes		5996025						
ANR	5996609	Symbol	yres		5996025						
ANR	5996610	Symbol	status		5996025						
ANR	5996611	Function	verify_context	154:0:4366:4530							
ANR	5996612	FunctionDef	verify_context (IjsClientCtx * ctx)		5996611	0					
ANR	5996613	CompoundStatement		156:0:4413:4530	5996611	0					
ANR	5996614	IfStatement	if ( ctx == NULL )		5996611	0					
ANR	5996615	Condition	ctx == NULL	157:6:4421:4431	5996611	0	True				
ANR	5996616	EqualityExpression	ctx == NULL		5996611	0		==			
ANR	5996617	Identifier	ctx		5996611	0					
ANR	5996618	Identifier	NULL		5996611	1					
ANR	5996619	CompoundStatement		3:4:24:24	5996611	1					
ANR	5996620	ExpressionStatement	"fprintf ( stderr , ""Must specify valid server with -s flag\\n"" )"	159:6:4446:4506	5996611	0	True				
ANR	5996621	CallExpression	"fprintf ( stderr , ""Must specify valid server with -s flag\\n"" )"		5996611	0					
ANR	5996622	Callee	fprintf		5996611	0					
ANR	5996623	Identifier	fprintf		5996611	0					
ANR	5996624	ArgumentList	stderr		5996611	1					
ANR	5996625	Argument	stderr		5996611	0					
ANR	5996626	Identifier	stderr		5996611	0					
ANR	5996627	Argument	"""Must specify valid server with -s flag\\n"""		5996611	1					
ANR	5996628	PrimaryExpression	"""Must specify valid server with -s flag\\n"""		5996611	0					
ANR	5996629	ExpressionStatement	exit ( 1 )	160:6:4514:4522	5996611	1	True				
ANR	5996630	CallExpression	exit ( 1 )		5996611	0					
ANR	5996631	Callee	exit		5996611	0					
ANR	5996632	Identifier	exit		5996611	0					
ANR	5996633	ArgumentList	1		5996611	1					
ANR	5996634	Argument	1		5996611	0					
ANR	5996635	PrimaryExpression	1		5996611	0					
ANR	5996636	ReturnType	static void		5996611	1					
ANR	5996637	Identifier	verify_context		5996611	2					
ANR	5996638	ParameterList	IjsClientCtx * ctx		5996611	3					
ANR	5996639	Parameter	IjsClientCtx * ctx	155:16:4394:4410	5996611	0	True				
ANR	5996640	ParameterType	IjsClientCtx *		5996611	0					
ANR	5996641	Identifier	ctx		5996611	1					
ANR	5996642	CFGEntryNode	ENTRY		5996611		True				
ANR	5996643	CFGExitNode	EXIT		5996611		True				
ANR	5996644	Symbol	NULL		5996611						
ANR	5996645	Symbol	ctx		5996611						
ANR	5996646	Symbol	stderr		5996611						
ANR	5996647	Function	param_usage	164:0:4533:4645							
ANR	5996648	FunctionDef	param_usage ()		5996647	0					
ANR	5996649	CompoundStatement		166:0:4564:4645	5996647	0					
ANR	5996650	ExpressionStatement	"fprintf ( stderr , ""parameter list must be in key=value, key=value format\\n"" )"	167:2:4568:4643	5996647	0	True				
ANR	5996651	CallExpression	"fprintf ( stderr , ""parameter list must be in key=value, key=value format\\n"" )"		5996647	0					
ANR	5996652	Callee	fprintf		5996647	0					
ANR	5996653	Identifier	fprintf		5996647	0					
ANR	5996654	ArgumentList	stderr		5996647	1					
ANR	5996655	Argument	stderr		5996647	0					
ANR	5996656	Identifier	stderr		5996647	0					
ANR	5996657	Argument	"""parameter list must be in key=value, key=value format\\n"""		5996647	1					
ANR	5996658	PrimaryExpression	"""parameter list must be in key=value, key=value format\\n"""		5996647	0					
ANR	5996659	ReturnType	static void		5996647	1					
ANR	5996660	Identifier	param_usage		5996647	2					
ANR	5996661	ParameterList			5996647	3					
ANR	5996662	CFGEntryNode	ENTRY		5996647		True				
ANR	5996663	CFGExitNode	EXIT		5996647		True				
ANR	5996664	Symbol	stderr		5996647						
ANR	5996665	Function	example_set_params	170:0:4648:6324							
ANR	5996666	FunctionDef	"example_set_params (IjsClientCtx * ctx , const char * arg)"		5996665	0					
ANR	5996667	CompoundStatement		172:0:4716:6324	5996665	0					
ANR	5996668	IdentifierDeclStatement	int code ;	173:2:4720:4728	5996665	0	True				
ANR	5996669	IdentifierDecl	code		5996665	0					
ANR	5996670	IdentifierDeclType	int		5996665	0					
ANR	5996671	Identifier	code		5996665	1					
ANR	5996672	IdentifierDeclStatement	"int i , inext ;"	174:2:4732:4744	5996665	1	True				
ANR	5996673	IdentifierDecl	i		5996665	0					
ANR	5996674	IdentifierDeclType	int		5996665	0					
ANR	5996675	Identifier	i		5996665	1					
ANR	5996676	IdentifierDecl	inext		5996665	1					
ANR	5996677	IdentifierDeclType	int		5996665	0					
ANR	5996678	Identifier	inext		5996665	1					
ANR	5996679	IdentifierDeclStatement	char key [ 256 ] ;	175:2:4748:4761	5996665	2	True				
ANR	5996680	IdentifierDecl	key [ 256 ]		5996665	0					
ANR	5996681	IdentifierDeclType	char [ 256 ]		5996665	0					
ANR	5996682	Identifier	key		5996665	1					
ANR	5996683	PrimaryExpression	256		5996665	2					
ANR	5996684	IdentifierDeclStatement	char buf [ 4096 ] ;	176:2:4765:4779	5996665	3	True				
ANR	5996685	IdentifierDecl	buf [ 4096 ]		5996665	0					
ANR	5996686	IdentifierDeclType	char [ 4096 ]		5996665	0					
ANR	5996687	Identifier	buf		5996665	1					
ANR	5996688	PrimaryExpression	4096		5996665	2					
ANR	5996689	IdentifierDeclStatement	int buf_ix ;	177:2:4783:4793	5996665	4	True				
ANR	5996690	IdentifierDecl	buf_ix		5996665	0					
ANR	5996691	IdentifierDeclType	int		5996665	0					
ANR	5996692	Identifier	buf_ix		5996665	1					
ANR	5996693	ForStatement	for ( i = 0 ; arg [ i ] != 0 ; i = inext )		5996665	5					
ANR	5996694	ForInit	i = 0 ;	179:7:4803:4808	5996665	0	True				
ANR	5996695	AssignmentExpression	i = 0		5996665	0		=			
ANR	5996696	Identifier	i		5996665	0					
ANR	5996697	PrimaryExpression	0		5996665	1					
ANR	5996698	Condition	arg [ i ] != 0	179:14:4810:4820	5996665	1	True				
ANR	5996699	EqualityExpression	arg [ i ] != 0		5996665	0		!=			
ANR	5996700	ArrayIndexing	arg [ i ]		5996665	0					
ANR	5996701	Identifier	arg		5996665	0					
ANR	5996702	Identifier	i		5996665	1					
ANR	5996703	PrimaryExpression	0		5996665	1					
ANR	5996704	AssignmentExpression	i = inext	179:27:4823:4831	5996665	2	True	=			
ANR	5996705	Identifier	i		5996665	0					
ANR	5996706	Identifier	inext		5996665	1					
ANR	5996707	CompoundStatement		11:6:156:168	5996665	3					
ANR	5996708	IdentifierDeclStatement	"int ibeg , ieq , iend ;"	181:6:4846:4865	5996665	0	True				
ANR	5996709	IdentifierDecl	ibeg		5996665	0					
ANR	5996710	IdentifierDeclType	int		5996665	0					
ANR	5996711	Identifier	ibeg		5996665	1					
ANR	5996712	IdentifierDecl	ieq		5996665	1					
ANR	5996713	IdentifierDeclType	int		5996665	0					
ANR	5996714	Identifier	ieq		5996665	1					
ANR	5996715	IdentifierDecl	iend		5996665	2					
ANR	5996716	IdentifierDeclType	int		5996665	0					
ANR	5996717	Identifier	iend		5996665	1					
ANR	5996718	IdentifierDeclStatement	int key_size ;	182:6:4873:4885	5996665	1	True				
ANR	5996719	IdentifierDecl	key_size		5996665	0					
ANR	5996720	IdentifierDeclType	int		5996665	0					
ANR	5996721	Identifier	key_size		5996665	1					
ANR	5996722	ForStatement	for ( ibeg = i ; arg [ ibeg ] == ' ' ; ibeg ++ )		5996665	2					
ANR	5996723	ForInit	ibeg = i ;	184:11:4899:4907	5996665	0	True				
ANR	5996724	AssignmentExpression	ibeg = i		5996665	0		=			
ANR	5996725	Identifier	ibeg		5996665	0					
ANR	5996726	Identifier	i		5996665	1					
ANR	5996727	Condition	arg [ ibeg ] == ' '	184:21:4909:4924	5996665	1	True				
ANR	5996728	EqualityExpression	arg [ ibeg ] == ' '		5996665	0		==			
ANR	5996729	ArrayIndexing	arg [ ibeg ]		5996665	0					
ANR	5996730	Identifier	arg		5996665	0					
ANR	5996731	Identifier	ibeg		5996665	1					
ANR	5996732	PrimaryExpression	' '		5996665	1					
ANR	5996733	PostIncDecOperationExpression	ibeg ++	184:39:4927:4932	5996665	2	True				
ANR	5996734	Identifier	ibeg		5996665	0					
ANR	5996735	IncDec	++		5996665	1					
ANR	5996736	ExpressionStatement		184:46:4934:4934	5996665	3	True				
ANR	5996737	ForStatement	for ( ieq = ibeg ; arg [ ieq ] != 0 ; ieq ++ )		5996665	3					
ANR	5996738	ForInit	ieq = ibeg ;	186:11:4948:4958	5996665	0	True				
ANR	5996739	AssignmentExpression	ieq = ibeg		5996665	0		=			
ANR	5996740	Identifier	ieq		5996665	0					
ANR	5996741	Identifier	ibeg		5996665	1					
ANR	5996742	Condition	arg [ ieq ] != 0	186:23:4960:4972	5996665	1	True				
ANR	5996743	EqualityExpression	arg [ ieq ] != 0		5996665	0		!=			
ANR	5996744	ArrayIndexing	arg [ ieq ]		5996665	0					
ANR	5996745	Identifier	arg		5996665	0					
ANR	5996746	Identifier	ieq		5996665	1					
ANR	5996747	PrimaryExpression	0		5996665	1					
ANR	5996748	PostIncDecOperationExpression	ieq ++	186:38:4975:4979	5996665	2	True				
ANR	5996749	Identifier	ieq		5996665	0					
ANR	5996750	IncDec	++		5996665	1					
ANR	5996751	CompoundStatement		16:8:273:273	5996665	3					
ANR	5996752	IfStatement	if ( arg [ ieq ] == '=' )		5996665	0					
ANR	5996753	Condition	arg [ ieq ] == '='	188:14:5006:5020	5996665	0	True				
ANR	5996754	EqualityExpression	arg [ ieq ] == '='		5996665	0		==			
ANR	5996755	ArrayIndexing	arg [ ieq ]		5996665	0					
ANR	5996756	Identifier	arg		5996665	0					
ANR	5996757	Identifier	ieq		5996665	1					
ANR	5996758	PrimaryExpression	'='		5996665	1					
ANR	5996759	BreakStatement	break ;	189:12:5035:5040	5996665	1	True				
ANR	5996760	IfStatement	if ( arg [ ieq ] == 0 )		5996665	4					
ANR	5996761	Condition	arg [ ieq ] == 0	191:10:5062:5074	5996665	0	True				
ANR	5996762	EqualityExpression	arg [ ieq ] == 0		5996665	0		==			
ANR	5996763	ArrayIndexing	arg [ ieq ]		5996665	0					
ANR	5996764	Identifier	arg		5996665	0					
ANR	5996765	Identifier	ieq		5996665	1					
ANR	5996766	PrimaryExpression	0		5996665	1					
ANR	5996767	CompoundStatement		21:8:368:368	5996665	1					
ANR	5996768	ExpressionStatement	param_usage ( )	193:10:5097:5111	5996665	0	True				
ANR	5996769	CallExpression	param_usage ( )		5996665	0					
ANR	5996770	Callee	param_usage		5996665	0					
ANR	5996771	Identifier	param_usage		5996665	0					
ANR	5996772	ArgumentList			5996665	1					
ANR	5996773	ReturnStatement	return ;	194:10:5123:5129	5996665	1	True				
ANR	5996774	ForStatement	for ( iend = ieq ; iend >= ibeg ; iend -- )		5996665	5					
ANR	5996775	ForInit	iend = ieq ;	196:11:5152:5162	5996665	0	True				
ANR	5996776	AssignmentExpression	iend = ieq		5996665	0		=			
ANR	5996777	Identifier	iend		5996665	0					
ANR	5996778	Identifier	ieq		5996665	1					
ANR	5996779	Condition	iend >= ibeg	196:23:5164:5175	5996665	1	True				
ANR	5996780	RelationalExpression	iend >= ibeg		5996665	0		>=			
ANR	5996781	Identifier	iend		5996665	0					
ANR	5996782	Identifier	ibeg		5996665	1					
ANR	5996783	PostIncDecOperationExpression	iend --	196:37:5178:5183	5996665	2	True				
ANR	5996784	Identifier	iend		5996665	0					
ANR	5996785	IncDec	--		5996665	1					
ANR	5996786	IfStatement	if ( arg [ iend - 1 ] != ' ' )		5996665	3					
ANR	5996787	Condition	arg [ iend - 1 ] != ' '	197:12:5198:5217	5996665	0	True				
ANR	5996788	EqualityExpression	arg [ iend - 1 ] != ' '		5996665	0		!=			
ANR	5996789	ArrayIndexing	arg [ iend - 1 ]		5996665	0					
ANR	5996790	Identifier	arg		5996665	0					
ANR	5996791	AdditiveExpression	iend - 1		5996665	1		-			
ANR	5996792	Identifier	iend		5996665	0					
ANR	5996793	PrimaryExpression	1		5996665	1					
ANR	5996794	PrimaryExpression	' '		5996665	1					
ANR	5996795	BreakStatement	break ;	198:10:5230:5235	5996665	1	True				
ANR	5996796	IfStatement	if ( iend == ibeg )		5996665	6					
ANR	5996797	Condition	iend == ibeg	199:10:5247:5258	5996665	0	True				
ANR	5996798	EqualityExpression	iend == ibeg		5996665	0		==			
ANR	5996799	Identifier	iend		5996665	0					
ANR	5996800	Identifier	ibeg		5996665	1					
ANR	5996801	CompoundStatement		29:8:552:552	5996665	1					
ANR	5996802	ExpressionStatement	param_usage ( )	201:10:5281:5295	5996665	0	True				
ANR	5996803	CallExpression	param_usage ( )		5996665	0					
ANR	5996804	Callee	param_usage		5996665	0					
ANR	5996805	Identifier	param_usage		5996665	0					
ANR	5996806	ArgumentList			5996665	1					
ANR	5996807	ReturnStatement	return ;	202:10:5307:5313	5996665	1	True				
ANR	5996808	ExpressionStatement	key_size = iend - ibeg	204:6:5331:5353	5996665	7	True				
ANR	5996809	AssignmentExpression	key_size = iend - ibeg		5996665	0		=			
ANR	5996810	Identifier	key_size		5996665	0					
ANR	5996811	AdditiveExpression	iend - ibeg		5996665	1		-			
ANR	5996812	Identifier	iend		5996665	0					
ANR	5996813	Identifier	ibeg		5996665	1					
ANR	5996814	IfStatement	if ( key_size + 1 > sizeof ( key ) )		5996665	8					
ANR	5996815	Condition	key_size + 1 > sizeof ( key )	205:10:5365:5390	5996665	0	True				
ANR	5996816	RelationalExpression	key_size + 1 > sizeof ( key )		5996665	0		>			
ANR	5996817	AdditiveExpression	key_size + 1		5996665	0		+			
ANR	5996818	Identifier	key_size		5996665	0					
ANR	5996819	PrimaryExpression	1		5996665	1					
ANR	5996820	SizeofExpression	sizeof ( key )		5996665	1					
ANR	5996821	Sizeof	sizeof		5996665	0					
ANR	5996822	SizeofOperand	key		5996665	1					
ANR	5996823	CompoundStatement		35:8:684:684	5996665	1					
ANR	5996824	ExpressionStatement	"fprintf ( stderr , ""Key exceeds %d bytes\\n"" , sizeof ( key ) )"	207:10:5413:5468	5996665	0	True				
ANR	5996825	CallExpression	"fprintf ( stderr , ""Key exceeds %d bytes\\n"" , sizeof ( key ) )"		5996665	0					
ANR	5996826	Callee	fprintf		5996665	0					
ANR	5996827	Identifier	fprintf		5996665	0					
ANR	5996828	ArgumentList	stderr		5996665	1					
ANR	5996829	Argument	stderr		5996665	0					
ANR	5996830	Identifier	stderr		5996665	0					
ANR	5996831	Argument	"""Key exceeds %d bytes\\n"""		5996665	1					
ANR	5996832	PrimaryExpression	"""Key exceeds %d bytes\\n"""		5996665	0					
ANR	5996833	Argument	sizeof ( key )		5996665	2					
ANR	5996834	SizeofExpression	sizeof ( key )		5996665	0					
ANR	5996835	Sizeof	sizeof		5996665	0					
ANR	5996836	SizeofOperand	key		5996665	1					
ANR	5996837	ReturnStatement	return ;	208:10:5480:5486	5996665	1	True				
ANR	5996838	ExpressionStatement	"memcpy ( key , arg + ibeg , key_size )"	210:6:5504:5538	5996665	9	True				
ANR	5996839	CallExpression	"memcpy ( key , arg + ibeg , key_size )"		5996665	0					
ANR	5996840	Callee	memcpy		5996665	0					
ANR	5996841	Identifier	memcpy		5996665	0					
ANR	5996842	ArgumentList	key		5996665	1					
ANR	5996843	Argument	key		5996665	0					
ANR	5996844	Identifier	key		5996665	0					
ANR	5996845	Argument	arg + ibeg		5996665	1					
ANR	5996846	AdditiveExpression	arg + ibeg		5996665	0		+			
ANR	5996847	Identifier	arg		5996665	0					
ANR	5996848	Identifier	ibeg		5996665	1					
ANR	5996849	Argument	key_size		5996665	2					
ANR	5996850	Identifier	key_size		5996665	0					
ANR	5996851	ExpressionStatement	key [ key_size ] = 0	211:6:5546:5563	5996665	10	True				
ANR	5996852	AssignmentExpression	key [ key_size ] = 0		5996665	0		=			
ANR	5996853	ArrayIndexing	key [ key_size ]		5996665	0					
ANR	5996854	Identifier	key		5996665	0					
ANR	5996855	Identifier	key_size		5996665	1					
ANR	5996856	PrimaryExpression	0		5996665	1					
ANR	5996857	ExpressionStatement	buf_ix = 0	212:6:5571:5581	5996665	11	True				
ANR	5996858	AssignmentExpression	buf_ix = 0		5996665	0		=			
ANR	5996859	Identifier	buf_ix		5996665	0					
ANR	5996860	PrimaryExpression	0		5996665	1					
ANR	5996861	ForStatement	for ( i = ieq + 1 ; arg [ i ] == ' ' ; i ++ )		5996665	12					
ANR	5996862	ForInit	i = ieq + 1 ;	213:11:5594:5605	5996665	0	True				
ANR	5996863	AssignmentExpression	i = ieq + 1		5996665	0		=			
ANR	5996864	Identifier	i		5996665	0					
ANR	5996865	AdditiveExpression	ieq + 1		5996665	1		+			
ANR	5996866	Identifier	ieq		5996665	0					
ANR	5996867	PrimaryExpression	1		5996665	1					
ANR	5996868	Condition	arg [ i ] == ' '	213:24:5607:5619	5996665	1	True				
ANR	5996869	EqualityExpression	arg [ i ] == ' '		5996665	0		==			
ANR	5996870	ArrayIndexing	arg [ i ]		5996665	0					
ANR	5996871	Identifier	arg		5996665	0					
ANR	5996872	Identifier	i		5996665	1					
ANR	5996873	PrimaryExpression	' '		5996665	1					
ANR	5996874	PostIncDecOperationExpression	i ++	213:39:5622:5624	5996665	2	True				
ANR	5996875	Identifier	i		5996665	0					
ANR	5996876	IncDec	++		5996665	1					
ANR	5996877	ExpressionStatement		213:43:5626:5626	5996665	3	True				
ANR	5996878	ForStatement	for ( ; arg [ i ] != 0 ; i ++ )		5996665	13					
ANR	5996879	Condition	arg [ i ] != 0	214:13:5641:5651	5996665	0	True				
ANR	5996880	EqualityExpression	arg [ i ] != 0		5996665	0		!=			
ANR	5996881	ArrayIndexing	arg [ i ]		5996665	0					
ANR	5996882	Identifier	arg		5996665	0					
ANR	5996883	Identifier	i		5996665	1					
ANR	5996884	PrimaryExpression	0		5996665	1					
ANR	5996885	PostIncDecOperationExpression	i ++	214:26:5654:5656	5996665	1	True				
ANR	5996886	Identifier	i		5996665	0					
ANR	5996887	IncDec	++		5996665	1					
ANR	5996888	CompoundStatement		44:8:950:950	5996665	2					
ANR	5996889	IfStatement	"if ( arg [ i ] == ',' )"		5996665	0					
ANR	5996890	Condition	"arg [ i ] == ','"	216:14:5683:5695	5996665	0	True				
ANR	5996891	EqualityExpression	"arg [ i ] == ','"		5996665	0		==			
ANR	5996892	ArrayIndexing	arg [ i ]		5996665	0					
ANR	5996893	Identifier	arg		5996665	0					
ANR	5996894	Identifier	i		5996665	1					
ANR	5996895	PrimaryExpression	"','"		5996665	1					
ANR	5996896	BreakStatement	break ;	217:12:5710:5715	5996665	1	True				
ANR	5996897	IfStatement	if ( buf_ix == sizeof ( buf ) )		5996665	1					
ANR	5996898	Condition	buf_ix == sizeof ( buf )	218:14:5731:5751	5996665	0	True				
ANR	5996899	EqualityExpression	buf_ix == sizeof ( buf )		5996665	0		==			
ANR	5996900	Identifier	buf_ix		5996665	0					
ANR	5996901	SizeofExpression	sizeof ( buf )		5996665	1					
ANR	5996902	Sizeof	sizeof		5996665	0					
ANR	5996903	SizeofOperand	buf		5996665	1					
ANR	5996904	CompoundStatement		48:12:1049:1049	5996665	1					
ANR	5996905	ExpressionStatement	"fprintf ( stderr , ""Value for %s exceeds %d bytes\\n"" , key , sizeof ( buf ) )"	220:14:5782:5874	5996665	0	True				
ANR	5996906	CallExpression	"fprintf ( stderr , ""Value for %s exceeds %d bytes\\n"" , key , sizeof ( buf ) )"		5996665	0					
ANR	5996907	Callee	fprintf		5996665	0					
ANR	5996908	Identifier	fprintf		5996665	0					
ANR	5996909	ArgumentList	stderr		5996665	1					
ANR	5996910	Argument	stderr		5996665	0					
ANR	5996911	Identifier	stderr		5996665	0					
ANR	5996912	Argument	"""Value for %s exceeds %d bytes\\n"""		5996665	1					
ANR	5996913	PrimaryExpression	"""Value for %s exceeds %d bytes\\n"""		5996665	0					
ANR	5996914	Argument	key		5996665	2					
ANR	5996915	Identifier	key		5996665	0					
ANR	5996916	Argument	sizeof ( buf )		5996665	3					
ANR	5996917	SizeofExpression	sizeof ( buf )		5996665	0					
ANR	5996918	Sizeof	sizeof		5996665	0					
ANR	5996919	SizeofOperand	buf		5996665	1					
ANR	5996920	ReturnStatement	return ;	222:14:5890:5896	5996665	1	True				
ANR	5996921	IfStatement	if ( arg [ i ] == '\\\\' && arg [ i + 1 ] != 0 )		5996665	2					
ANR	5996922	Condition	arg [ i ] == '\\\\' && arg [ i + 1 ] != 0	224:14:5926:5958	5996665	0	True				
ANR	5996923	AndExpression	arg [ i ] == '\\\\' && arg [ i + 1 ] != 0		5996665	0		&&			
ANR	5996924	EqualityExpression	arg [ i ] == '\\\\'		5996665	0		==			
ANR	5996925	ArrayIndexing	arg [ i ]		5996665	0					
ANR	5996926	Identifier	arg		5996665	0					
ANR	5996927	Identifier	i		5996665	1					
ANR	5996928	PrimaryExpression	'\\\\'		5996665	1					
ANR	5996929	EqualityExpression	arg [ i + 1 ] != 0		5996665	1		!=			
ANR	5996930	ArrayIndexing	arg [ i + 1 ]		5996665	0					
ANR	5996931	Identifier	arg		5996665	0					
ANR	5996932	AdditiveExpression	i + 1		5996665	1		+			
ANR	5996933	Identifier	i		5996665	0					
ANR	5996934	PrimaryExpression	1		5996665	1					
ANR	5996935	PrimaryExpression	0		5996665	1					
ANR	5996936	ExpressionStatement	buf [ buf_ix ++ ] = arg [ ++ i ]	225:12:5973:5997	5996665	1	True				
ANR	5996937	AssignmentExpression	buf [ buf_ix ++ ] = arg [ ++ i ]		5996665	0		=			
ANR	5996938	ArrayIndexing	buf [ buf_ix ++ ]		5996665	0					
ANR	5996939	Identifier	buf		5996665	0					
ANR	5996940	PostIncDecOperationExpression	buf_ix ++		5996665	1					
ANR	5996941	Identifier	buf_ix		5996665	0					
ANR	5996942	IncDec	++		5996665	1					
ANR	5996943	ArrayIndexing	arg [ ++ i ]		5996665	1					
ANR	5996944	Identifier	arg		5996665	0					
ANR	5996945	UnaryExpression	++ i		5996665	1					
ANR	5996946	IncDec	++		5996665	0					
ANR	5996947	Identifier	i		5996665	1					
ANR	5996948	ElseStatement	else		5996665	0					
ANR	5996949	ExpressionStatement	buf [ buf_ix ++ ] = arg [ i ]	227:12:6026:6048	5996665	0	True				
ANR	5996950	AssignmentExpression	buf [ buf_ix ++ ] = arg [ i ]		5996665	0		=			
ANR	5996951	ArrayIndexing	buf [ buf_ix ++ ]		5996665	0					
ANR	5996952	Identifier	buf		5996665	0					
ANR	5996953	PostIncDecOperationExpression	buf_ix ++		5996665	1					
ANR	5996954	Identifier	buf_ix		5996665	0					
ANR	5996955	IncDec	++		5996665	1					
ANR	5996956	ArrayIndexing	arg [ i ]		5996665	1					
ANR	5996957	Identifier	arg		5996665	0					
ANR	5996958	Identifier	i		5996665	1					
ANR	5996959	IfStatement	"if ( arg [ i ] == ',' )"		5996665	14					
ANR	5996960	Condition	"arg [ i ] == ','"	229:10:6070:6082	5996665	0	True				
ANR	5996961	EqualityExpression	"arg [ i ] == ','"		5996665	0		==			
ANR	5996962	ArrayIndexing	arg [ i ]		5996665	0					
ANR	5996963	Identifier	arg		5996665	0					
ANR	5996964	Identifier	i		5996665	1					
ANR	5996965	PrimaryExpression	"','"		5996665	1					
ANR	5996966	ExpressionStatement	inext = i + 1	230:8:6093:6106	5996665	1	True				
ANR	5996967	AssignmentExpression	inext = i + 1		5996665	0		=			
ANR	5996968	Identifier	inext		5996665	0					
ANR	5996969	AdditiveExpression	i + 1		5996665	1		+			
ANR	5996970	Identifier	i		5996665	0					
ANR	5996971	PrimaryExpression	1		5996665	1					
ANR	5996972	ElseStatement	else		5996665	0					
ANR	5996973	ExpressionStatement	inext = i	232:8:6127:6136	5996665	0	True				
ANR	5996974	AssignmentExpression	inext = i		5996665	0		=			
ANR	5996975	Identifier	inext		5996665	0					
ANR	5996976	Identifier	i		5996665	1					
ANR	5996977	ExpressionStatement	"code = ijs_client_set_param ( ctx , 0 , key , buf , buf_ix )"	233:6:6144:6198	5996665	15	True				
ANR	5996978	AssignmentExpression	"code = ijs_client_set_param ( ctx , 0 , key , buf , buf_ix )"		5996665	0		=			
ANR	5996979	Identifier	code		5996665	0					
ANR	5996980	CallExpression	"ijs_client_set_param ( ctx , 0 , key , buf , buf_ix )"		5996665	1					
ANR	5996981	Callee	ijs_client_set_param		5996665	0					
ANR	5996982	Identifier	ijs_client_set_param		5996665	0					
ANR	5996983	ArgumentList	ctx		5996665	1					
ANR	5996984	Argument	ctx		5996665	0					
ANR	5996985	Identifier	ctx		5996665	0					
ANR	5996986	Argument	0		5996665	1					
ANR	5996987	PrimaryExpression	0		5996665	0					
ANR	5996988	Argument	key		5996665	2					
ANR	5996989	Identifier	key		5996665	0					
ANR	5996990	Argument	buf		5996665	3					
ANR	5996991	Identifier	buf		5996665	0					
ANR	5996992	Argument	buf_ix		5996665	4					
ANR	5996993	Identifier	buf_ix		5996665	0					
ANR	5996994	IfStatement	if ( code < 0 )		5996665	16					
ANR	5996995	Condition	code < 0	234:10:6210:6217	5996665	0	True				
ANR	5996996	RelationalExpression	code < 0		5996665	0		<			
ANR	5996997	Identifier	code		5996665	0					
ANR	5996998	PrimaryExpression	0		5996665	1					
ANR	5996999	ExpressionStatement	"fprintf ( stderr , ""Warning: error %d setting parameter %s\\n"" , code , key )"	235:8:6228:6316	5996665	1	True				
ANR	5997000	CallExpression	"fprintf ( stderr , ""Warning: error %d setting parameter %s\\n"" , code , key )"		5996665	0					
ANR	5997001	Callee	fprintf		5996665	0					
ANR	5997002	Identifier	fprintf		5996665	0					
ANR	5997003	ArgumentList	stderr		5996665	1					
ANR	5997004	Argument	stderr		5996665	0					
ANR	5997005	Identifier	stderr		5996665	0					
ANR	5997006	Argument	"""Warning: error %d setting parameter %s\\n"""		5996665	1					
ANR	5997007	PrimaryExpression	"""Warning: error %d setting parameter %s\\n"""		5996665	0					
ANR	5997008	Argument	code		5996665	2					
ANR	5997009	Identifier	code		5996665	0					
ANR	5997010	Argument	key		5996665	3					
ANR	5997011	Identifier	key		5996665	0					
ANR	5997012	ReturnType	static void		5996665	1					
ANR	5997013	Identifier	example_set_params		5996665	2					
ANR	5997014	ParameterList	"IjsClientCtx * ctx , const char * arg"		5996665	3					
ANR	5997015	Parameter	IjsClientCtx * ctx	171:20:4680:4696	5996665	0	True				
ANR	5997016	ParameterType	IjsClientCtx *		5996665	0					
ANR	5997017	Identifier	ctx		5996665	1					
ANR	5997018	Parameter	const char * arg	171:39:4699:4713	5996665	1	True				
ANR	5997019	ParameterType	const char *		5996665	0					
ANR	5997020	Identifier	arg		5996665	1					
ANR	5997021	CFGEntryNode	ENTRY		5996665		True				
ANR	5997022	CFGExitNode	EXIT		5996665		True				
ANR	5997023	Symbol	buf_ix		5996665						
ANR	5997024	Symbol	* ieq		5996665						
ANR	5997025	Symbol	* buf		5996665						
ANR	5997026	Symbol	code		5996665						
ANR	5997027	Symbol	iend		5996665						
ANR	5997028	Symbol	ctx		5996665						
ANR	5997029	Symbol	inext		5996665						
ANR	5997030	Symbol	i		5996665						
ANR	5997031	Symbol	* key		5996665						
ANR	5997032	Symbol	ibeg		5996665						
ANR	5997033	Symbol	stderr		5996665						
ANR	5997034	Symbol	* ibeg		5996665						
ANR	5997035	Symbol	* key_size		5996665						
ANR	5997036	Symbol	buf		5996665						
ANR	5997037	Symbol	* i		5996665						
ANR	5997038	Symbol	ieq		5996665						
ANR	5997039	Symbol	arg		5996665						
ANR	5997040	Symbol	* iend		5996665						
ANR	5997041	Symbol	ijs_client_set_param		5996665						
ANR	5997042	Symbol	key		5996665						
ANR	5997043	Symbol	* arg		5996665						
ANR	5997044	Symbol	key_size		5996665						
ANR	5997045	Function	example_get_param	240:0:6327:6701							
ANR	5997046	FunctionDef	"example_get_param (IjsClientCtx * ctx , const char * arg)"		5997045	0					
ANR	5997047	CompoundStatement		242:0:6394:6701	5997045	0					
ANR	5997048	IdentifierDeclStatement	char buf [ 4096 ] ;	243:2:6398:6412	5997045	0	True				
ANR	5997049	IdentifierDecl	buf [ 4096 ]		5997045	0					
ANR	5997050	IdentifierDeclType	char [ 4096 ]		5997045	0					
ANR	5997051	Identifier	buf		5997045	1					
ANR	5997052	PrimaryExpression	4096		5997045	2					
ANR	5997053	IdentifierDeclStatement	int status ;	244:2:6416:6426	5997045	1	True				
ANR	5997054	IdentifierDecl	status		5997045	0					
ANR	5997055	IdentifierDeclType	int		5997045	0					
ANR	5997056	Identifier	status		5997045	1					
ANR	5997057	ExpressionStatement	"status = ijs_client_get_param ( ctx , 0 , arg , buf , sizeof ( buf ) - 1 )"	246:2:6431:6496	5997045	2	True				
ANR	5997058	AssignmentExpression	"status = ijs_client_get_param ( ctx , 0 , arg , buf , sizeof ( buf ) - 1 )"		5997045	0		=			
ANR	5997059	Identifier	status		5997045	0					
ANR	5997060	CallExpression	"ijs_client_get_param ( ctx , 0 , arg , buf , sizeof ( buf ) - 1 )"		5997045	1					
ANR	5997061	Callee	ijs_client_get_param		5997045	0					
ANR	5997062	Identifier	ijs_client_get_param		5997045	0					
ANR	5997063	ArgumentList	ctx		5997045	1					
ANR	5997064	Argument	ctx		5997045	0					
ANR	5997065	Identifier	ctx		5997045	0					
ANR	5997066	Argument	0		5997045	1					
ANR	5997067	PrimaryExpression	0		5997045	0					
ANR	5997068	Argument	arg		5997045	2					
ANR	5997069	Identifier	arg		5997045	0					
ANR	5997070	Argument	buf		5997045	3					
ANR	5997071	Identifier	buf		5997045	0					
ANR	5997072	Argument	sizeof ( buf ) - 1		5997045	4					
ANR	5997073	AdditiveExpression	sizeof ( buf ) - 1		5997045	0		-			
ANR	5997074	SizeofExpression	sizeof ( buf )		5997045	0					
ANR	5997075	Sizeof	sizeof		5997045	0					
ANR	5997076	SizeofOperand	buf		5997045	1					
ANR	5997077	PrimaryExpression	1		5997045	1					
ANR	5997078	IfStatement	if ( status >= 0 )		5997045	3					
ANR	5997079	Condition	status >= 0	247:6:6504:6514	5997045	0	True				
ANR	5997080	RelationalExpression	status >= 0		5997045	0		>=			
ANR	5997081	Identifier	status		5997045	0					
ANR	5997082	PrimaryExpression	0		5997045	1					
ANR	5997083	CompoundStatement		7:4:126:126	5997045	1					
ANR	5997084	ExpressionStatement	buf [ status ] = 0	249:6:6529:6544	5997045	0	True				
ANR	5997085	AssignmentExpression	buf [ status ] = 0		5997045	0		=			
ANR	5997086	ArrayIndexing	buf [ status ]		5997045	0					
ANR	5997087	Identifier	buf		5997045	0					
ANR	5997088	Identifier	status		5997045	1					
ANR	5997089	PrimaryExpression	0		5997045	1					
ANR	5997090	ExpressionStatement	"fprintf ( stderr , ""value of param %s = %s\\n"" , arg , buf )"	250:6:6552:6606	5997045	1	True				
ANR	5997091	CallExpression	"fprintf ( stderr , ""value of param %s = %s\\n"" , arg , buf )"		5997045	0					
ANR	5997092	Callee	fprintf		5997045	0					
ANR	5997093	Identifier	fprintf		5997045	0					
ANR	5997094	ArgumentList	stderr		5997045	1					
ANR	5997095	Argument	stderr		5997045	0					
ANR	5997096	Identifier	stderr		5997045	0					
ANR	5997097	Argument	"""value of param %s = %s\\n"""		5997045	1					
ANR	5997098	PrimaryExpression	"""value of param %s = %s\\n"""		5997045	0					
ANR	5997099	Argument	arg		5997045	2					
ANR	5997100	Identifier	arg		5997045	0					
ANR	5997101	Argument	buf		5997045	3					
ANR	5997102	Identifier	buf		5997045	0					
ANR	5997103	ElseStatement	else		5997045	0					
ANR	5997104	CompoundStatement		12:4:230:230	5997045	0					
ANR	5997105	ExpressionStatement	"fprintf ( stderr , ""Error %d getting param %s\\n"" , status , arg )"	254:6:6633:6693	5997045	0	True				
ANR	5997106	CallExpression	"fprintf ( stderr , ""Error %d getting param %s\\n"" , status , arg )"		5997045	0					
ANR	5997107	Callee	fprintf		5997045	0					
ANR	5997108	Identifier	fprintf		5997045	0					
ANR	5997109	ArgumentList	stderr		5997045	1					
ANR	5997110	Argument	stderr		5997045	0					
ANR	5997111	Identifier	stderr		5997045	0					
ANR	5997112	Argument	"""Error %d getting param %s\\n"""		5997045	1					
ANR	5997113	PrimaryExpression	"""Error %d getting param %s\\n"""		5997045	0					
ANR	5997114	Argument	status		5997045	2					
ANR	5997115	Identifier	status		5997045	0					
ANR	5997116	Argument	arg		5997045	3					
ANR	5997117	Identifier	arg		5997045	0					
ANR	5997118	ReturnType	static void		5997045	1					
ANR	5997119	Identifier	example_get_param		5997045	2					
ANR	5997120	ParameterList	"IjsClientCtx * ctx , const char * arg"		5997045	3					
ANR	5997121	Parameter	IjsClientCtx * ctx	241:19:6358:6374	5997045	0	True				
ANR	5997122	ParameterType	IjsClientCtx *		5997045	0					
ANR	5997123	Identifier	ctx		5997045	1					
ANR	5997124	Parameter	const char * arg	241:38:6377:6391	5997045	1	True				
ANR	5997125	ParameterType	const char *		5997045	0					
ANR	5997126	Identifier	arg		5997045	1					
ANR	5997127	CFGEntryNode	ENTRY		5997045		True				
ANR	5997128	CFGExitNode	EXIT		5997045		True				
ANR	5997129	Symbol	buf		5997045						
ANR	5997130	Symbol	ijs_client_get_param		5997045						
ANR	5997131	Symbol	* buf		5997045						
ANR	5997132	Symbol	ctx		5997045						
ANR	5997133	Symbol	arg		5997045						
ANR	5997134	Symbol	stderr		5997045						
ANR	5997135	Symbol	* status		5997045						
ANR	5997136	Symbol	status		5997045						
ANR	5997137	Function	example_enum_param	258:0:6704:7085							
ANR	5997138	FunctionDef	"example_enum_param (IjsClientCtx * ctx , const char * arg)"		5997137	0					
ANR	5997139	CompoundStatement		260:0:6772:7085	5997137	0					
ANR	5997140	IdentifierDeclStatement	char buf [ 4096 ] ;	261:2:6776:6790	5997137	0	True				
ANR	5997141	IdentifierDecl	buf [ 4096 ]		5997137	0					
ANR	5997142	IdentifierDeclType	char [ 4096 ]		5997137	0					
ANR	5997143	Identifier	buf		5997137	1					
ANR	5997144	PrimaryExpression	4096		5997137	2					
ANR	5997145	IdentifierDeclStatement	int status ;	262:2:6794:6804	5997137	1	True				
ANR	5997146	IdentifierDecl	status		5997137	0					
ANR	5997147	IdentifierDeclType	int		5997137	0					
ANR	5997148	Identifier	status		5997137	1					
ANR	5997149	ExpressionStatement	"status = ijs_client_enum_param ( ctx , 0 , arg , buf , sizeof ( buf ) - 1 )"	264:2:6809:6875	5997137	2	True				
ANR	5997150	AssignmentExpression	"status = ijs_client_enum_param ( ctx , 0 , arg , buf , sizeof ( buf ) - 1 )"		5997137	0		=			
ANR	5997151	Identifier	status		5997137	0					
ANR	5997152	CallExpression	"ijs_client_enum_param ( ctx , 0 , arg , buf , sizeof ( buf ) - 1 )"		5997137	1					
ANR	5997153	Callee	ijs_client_enum_param		5997137	0					
ANR	5997154	Identifier	ijs_client_enum_param		5997137	0					
ANR	5997155	ArgumentList	ctx		5997137	1					
ANR	5997156	Argument	ctx		5997137	0					
ANR	5997157	Identifier	ctx		5997137	0					
ANR	5997158	Argument	0		5997137	1					
ANR	5997159	PrimaryExpression	0		5997137	0					
ANR	5997160	Argument	arg		5997137	2					
ANR	5997161	Identifier	arg		5997137	0					
ANR	5997162	Argument	buf		5997137	3					
ANR	5997163	Identifier	buf		5997137	0					
ANR	5997164	Argument	sizeof ( buf ) - 1		5997137	4					
ANR	5997165	AdditiveExpression	sizeof ( buf ) - 1		5997137	0		-			
ANR	5997166	SizeofExpression	sizeof ( buf )		5997137	0					
ANR	5997167	Sizeof	sizeof		5997137	0					
ANR	5997168	SizeofOperand	buf		5997137	1					
ANR	5997169	PrimaryExpression	1		5997137	1					
ANR	5997170	IfStatement	if ( status >= 0 )		5997137	3					
ANR	5997171	Condition	status >= 0	265:6:6883:6893	5997137	0	True				
ANR	5997172	RelationalExpression	status >= 0		5997137	0		>=			
ANR	5997173	Identifier	status		5997137	0					
ANR	5997174	PrimaryExpression	0		5997137	1					
ANR	5997175	CompoundStatement		7:4:127:127	5997137	1					
ANR	5997176	ExpressionStatement	buf [ status ] = 0	267:6:6908:6923	5997137	0	True				
ANR	5997177	AssignmentExpression	buf [ status ] = 0		5997137	0		=			
ANR	5997178	ArrayIndexing	buf [ status ]		5997137	0					
ANR	5997179	Identifier	buf		5997137	0					
ANR	5997180	Identifier	status		5997137	1					
ANR	5997181	PrimaryExpression	0		5997137	1					
ANR	5997182	ExpressionStatement	"fprintf ( stderr , ""enumeration of param %s: %s\\n"" , arg , buf )"	268:6:6931:6990	5997137	1	True				
ANR	5997183	CallExpression	"fprintf ( stderr , ""enumeration of param %s: %s\\n"" , arg , buf )"		5997137	0					
ANR	5997184	Callee	fprintf		5997137	0					
ANR	5997185	Identifier	fprintf		5997137	0					
ANR	5997186	ArgumentList	stderr		5997137	1					
ANR	5997187	Argument	stderr		5997137	0					
ANR	5997188	Identifier	stderr		5997137	0					
ANR	5997189	Argument	"""enumeration of param %s: %s\\n"""		5997137	1					
ANR	5997190	PrimaryExpression	"""enumeration of param %s: %s\\n"""		5997137	0					
ANR	5997191	Argument	arg		5997137	2					
ANR	5997192	Identifier	arg		5997137	0					
ANR	5997193	Argument	buf		5997137	3					
ANR	5997194	Identifier	buf		5997137	0					
ANR	5997195	ElseStatement	else		5997137	0					
ANR	5997196	CompoundStatement		12:4:236:236	5997137	0					
ANR	5997197	ExpressionStatement	"fprintf ( stderr , ""Error %d getting param %s\\n"" , status , arg )"	272:6:7017:7077	5997137	0	True				
ANR	5997198	CallExpression	"fprintf ( stderr , ""Error %d getting param %s\\n"" , status , arg )"		5997137	0					
ANR	5997199	Callee	fprintf		5997137	0					
ANR	5997200	Identifier	fprintf		5997137	0					
ANR	5997201	ArgumentList	stderr		5997137	1					
ANR	5997202	Argument	stderr		5997137	0					
ANR	5997203	Identifier	stderr		5997137	0					
ANR	5997204	Argument	"""Error %d getting param %s\\n"""		5997137	1					
ANR	5997205	PrimaryExpression	"""Error %d getting param %s\\n"""		5997137	0					
ANR	5997206	Argument	status		5997137	2					
ANR	5997207	Identifier	status		5997137	0					
ANR	5997208	Argument	arg		5997137	3					
ANR	5997209	Identifier	arg		5997137	0					
ANR	5997210	ReturnType	static void		5997137	1					
ANR	5997211	Identifier	example_enum_param		5997137	2					
ANR	5997212	ParameterList	"IjsClientCtx * ctx , const char * arg"		5997137	3					
ANR	5997213	Parameter	IjsClientCtx * ctx	259:20:6736:6752	5997137	0	True				
ANR	5997214	ParameterType	IjsClientCtx *		5997137	0					
ANR	5997215	Identifier	ctx		5997137	1					
ANR	5997216	Parameter	const char * arg	259:39:6755:6769	5997137	1	True				
ANR	5997217	ParameterType	const char *		5997137	0					
ANR	5997218	Identifier	arg		5997137	1					
ANR	5997219	CFGEntryNode	ENTRY		5997137		True				
ANR	5997220	CFGExitNode	EXIT		5997137		True				
ANR	5997221	Symbol	ijs_client_enum_param		5997137						
ANR	5997222	Symbol	buf		5997137						
ANR	5997223	Symbol	* buf		5997137						
ANR	5997224	Symbol	ctx		5997137						
ANR	5997225	Symbol	arg		5997137						
ANR	5997226	Symbol	stderr		5997137						
ANR	5997227	Symbol	* status		5997137						
ANR	5997228	Symbol	status		5997137						
ANR	5997229	Function	get_arg	276:0:7088:7318							
ANR	5997230	FunctionDef	"get_arg (int argc , char * * argv , int * pi , const char * arg)"		5997229	0					
ANR	5997231	CompoundStatement		278:0:7166:7318	5997229	0					
ANR	5997232	IfStatement	if ( arg [ 0 ] != 0 )		5997229	0					
ANR	5997233	Condition	arg [ 0 ] != 0	279:6:7174:7184	5997229	0	True				
ANR	5997234	EqualityExpression	arg [ 0 ] != 0		5997229	0		!=			
ANR	5997235	ArrayIndexing	arg [ 0 ]		5997229	0					
ANR	5997236	Identifier	arg		5997229	0					
ANR	5997237	PrimaryExpression	0		5997229	1					
ANR	5997238	PrimaryExpression	0		5997229	1					
ANR	5997239	ReturnStatement	return arg ;	280:4:7191:7201	5997229	1	True				
ANR	5997240	Identifier	arg		5997229	0					
ANR	5997241	ElseStatement	else		5997229	0					
ANR	5997242	CompoundStatement		5:4:47:47	5997229	0					
ANR	5997243	ExpressionStatement	( * pi ) ++	283:6:7222:7229	5997229	0	True				
ANR	5997244	PostIncDecOperationExpression	( * pi ) ++		5997229	0					
ANR	5997245	UnaryOperationExpression	* pi		5997229	0					
ANR	5997246	UnaryOperator	*		5997229	0					
ANR	5997247	Identifier	pi		5997229	1					
ANR	5997248	IncDec	++		5997229	1					
ANR	5997249	IfStatement	if ( * pi == argc )		5997229	1					
ANR	5997250	Condition	* pi == argc	284:10:7241:7251	5997229	0	True				
ANR	5997251	EqualityExpression	* pi == argc		5997229	0		==			
ANR	5997252	UnaryOperationExpression	* pi		5997229	0					
ANR	5997253	UnaryOperator	*		5997229	0					
ANR	5997254	Identifier	pi		5997229	1					
ANR	5997255	Identifier	argc		5997229	1					
ANR	5997256	ReturnStatement	return NULL ;	285:8:7262:7273	5997229	1	True				
ANR	5997257	Identifier	NULL		5997229	0					
ANR	5997258	ElseStatement	else		5997229	0					
ANR	5997259	ReturnStatement	return argv [ * pi ] ;	287:8:7294:7310	5997229	0	True				
ANR	5997260	ArrayIndexing	argv [ * pi ]		5997229	0					
ANR	5997261	Identifier	argv		5997229	0					
ANR	5997262	UnaryOperationExpression	* pi		5997229	1					
ANR	5997263	UnaryOperator	*		5997229	0					
ANR	5997264	Identifier	pi		5997229	1					
ANR	5997265	ReturnType	static const char *		5997229	1					
ANR	5997266	Identifier	get_arg		5997229	2					
ANR	5997267	ParameterList	"int argc , char * * argv , int * pi , const char * arg"		5997229	3					
ANR	5997268	Parameter	int argc	277:9:7117:7124	5997229	0	True				
ANR	5997269	ParameterType	int		5997229	0					
ANR	5997270	Identifier	argc		5997229	1					
ANR	5997271	Parameter	char * * argv	277:19:7127:7137	5997229	1	True				
ANR	5997272	ParameterType	char * *		5997229	0					
ANR	5997273	Identifier	argv		5997229	1					
ANR	5997274	Parameter	int * pi	277:32:7140:7146	5997229	2	True				
ANR	5997275	ParameterType	int *		5997229	0					
ANR	5997276	Identifier	pi		5997229	1					
ANR	5997277	Parameter	const char * arg	277:41:7149:7163	5997229	3	True				
ANR	5997278	ParameterType	const char *		5997229	0					
ANR	5997279	Identifier	arg		5997229	1					
ANR	5997280	CFGEntryNode	ENTRY		5997229		True				
ANR	5997281	CFGExitNode	EXIT		5997229		True				
ANR	5997282	Symbol	argc		5997229						
ANR	5997283	Symbol	NULL		5997229						
ANR	5997284	Symbol	arg		5997229						
ANR	5997285	Symbol	* * pi		5997229						
ANR	5997286	Symbol	pi		5997229						
ANR	5997287	Symbol	* argv		5997229						
ANR	5997288	Symbol	* pi		5997229						
ANR	5997289	Symbol	argv		5997229						
ANR	5997290	Symbol	* arg		5997229						
ANR	5997291	Function	main	291:0:7321:9655							
ANR	5997292	FunctionDef	"main (int argc , char * * argv)"		5997291	0					
ANR	5997293	CompoundStatement		293:0:7354:9655	5997291	0					
ANR	5997294	IdentifierDeclStatement	IjsClientCtx * ctx ;	294:2:7358:7375	5997291	0	True				
ANR	5997295	IdentifierDecl	* ctx		5997291	0					
ANR	5997296	IdentifierDeclType	IjsClientCtx *		5997291	0					
ANR	5997297	Identifier	ctx		5997291	1					
ANR	5997298	IdentifierDeclStatement	int i ;	295:2:7379:7384	5997291	1	True				
ANR	5997299	IdentifierDecl	i		5997291	0					
ANR	5997300	IdentifierDeclType	int		5997291	0					
ANR	5997301	Identifier	i		5997291	1					
ANR	5997302	IdentifierDeclStatement	"int xres = 300 , yres = 300 ;"	296:2:7388:7414	5997291	2	True				
ANR	5997303	IdentifierDecl	xres = 300		5997291	0					
ANR	5997304	IdentifierDeclType	int		5997291	0					
ANR	5997305	Identifier	xres		5997291	1					
ANR	5997306	AssignmentExpression	xres = 300		5997291	2		=			
ANR	5997307	Identifier	xres		5997291	0					
ANR	5997308	PrimaryExpression	300		5997291	1					
ANR	5997309	IdentifierDecl	yres = 300		5997291	1					
ANR	5997310	IdentifierDeclType	int		5997291	0					
ANR	5997311	Identifier	yres		5997291	1					
ANR	5997312	AssignmentExpression	yres = 300		5997291	2		=			
ANR	5997313	Identifier	yres		5997291	0					
ANR	5997314	PrimaryExpression	300		5997291	1					
ANR	5997315	ExpressionStatement	ctx = NULL	298:2:7419:7429	5997291	3	True				
ANR	5997316	AssignmentExpression	ctx = NULL		5997291	0		=			
ANR	5997317	Identifier	ctx		5997291	0					
ANR	5997318	Identifier	NULL		5997291	1					
ANR	5997319	ForStatement	for ( i = 1 ; i < argc ; i ++ )		5997291	4					
ANR	5997320	ForInit	i = 1 ;	300:7:7439:7444	5997291	0	True				
ANR	5997321	AssignmentExpression	i = 1		5997291	0		=			
ANR	5997322	Identifier	i		5997291	0					
ANR	5997323	PrimaryExpression	1		5997291	1					
ANR	5997324	Condition	i < argc	300:14:7446:7453	5997291	1	True				
ANR	5997325	RelationalExpression	i < argc		5997291	0		<			
ANR	5997326	Identifier	i		5997291	0					
ANR	5997327	Identifier	argc		5997291	1					
ANR	5997328	PostIncDecOperationExpression	i ++	300:24:7456:7458	5997291	2	True				
ANR	5997329	Identifier	i		5997291	0					
ANR	5997330	IncDec	++		5997291	1					
ANR	5997331	CompoundStatement		10:6:118:143	5997291	3					
ANR	5997332	IdentifierDeclStatement	const char * arg = argv [ i ] ;	302:6:7473:7498	5997291	0	True				
ANR	5997333	IdentifierDecl	* arg = argv [ i ]		5997291	0					
ANR	5997334	IdentifierDeclType	const char *		5997291	0					
ANR	5997335	Identifier	arg		5997291	1					
ANR	5997336	AssignmentExpression	* arg = argv [ i ]		5997291	2		=			
ANR	5997337	Identifier	arg		5997291	0					
ANR	5997338	ArrayIndexing	argv [ i ]		5997291	1					
ANR	5997339	Identifier	argv		5997291	0					
ANR	5997340	Identifier	i		5997291	1					
ANR	5997341	IfStatement	if ( arg [ 0 ] == '-' )		5997291	1					
ANR	5997342	Condition	arg [ 0 ] == '-'	304:10:7511:7523	5997291	0	True				
ANR	5997343	EqualityExpression	arg [ 0 ] == '-'		5997291	0		==			
ANR	5997344	ArrayIndexing	arg [ 0 ]		5997291	0					
ANR	5997345	Identifier	arg		5997291	0					
ANR	5997346	PrimaryExpression	0		5997291	1					
ANR	5997347	PrimaryExpression	'-'		5997291	1					
ANR	5997348	CompoundStatement		13:8:179:179	5997291	1					
ANR	5997349	SwitchStatement	switch ( arg [ 1 ] )		5997291	0					
ANR	5997350	Condition	arg [ 1 ]	306:18:7554:7559	5997291	0	True				
ANR	5997351	ArrayIndexing	arg [ 1 ]		5997291	0					
ANR	5997352	Identifier	arg		5997291	0					
ANR	5997353	PrimaryExpression	1		5997291	1					
ANR	5997354	CompoundStatement		15:12:219:219	5997291	1					
ANR	5997355	Label	case 'r' :	308:12:7588:7597	5997291	0	True				
ANR	5997356	CompoundStatement		18:16:276:286	5997291	1					
ANR	5997357	IdentifierDeclStatement	char * tail ;	310:16:7631:7641	5997291	0	True				
ANR	5997358	IdentifierDecl	* tail		5997291	0					
ANR	5997359	IdentifierDeclType	char *		5997291	0					
ANR	5997360	Identifier	tail		5997291	1					
ANR	5997361	ExpressionStatement	"arg = get_arg ( argc , argv , & i , arg + 2 )"	312:16:7660:7699	5997291	1	True				
ANR	5997362	AssignmentExpression	"arg = get_arg ( argc , argv , & i , arg + 2 )"		5997291	0		=			
ANR	5997363	Identifier	arg		5997291	0					
ANR	5997364	CallExpression	"get_arg ( argc , argv , & i , arg + 2 )"		5997291	1					
ANR	5997365	Callee	get_arg		5997291	0					
ANR	5997366	Identifier	get_arg		5997291	0					
ANR	5997367	ArgumentList	argc		5997291	1					
ANR	5997368	Argument	argc		5997291	0					
ANR	5997369	Identifier	argc		5997291	0					
ANR	5997370	Argument	argv		5997291	1					
ANR	5997371	Identifier	argv		5997291	0					
ANR	5997372	Argument	& i		5997291	2					
ANR	5997373	UnaryOperationExpression	& i		5997291	0					
ANR	5997374	UnaryOperator	&		5997291	0					
ANR	5997375	Identifier	i		5997291	1					
ANR	5997376	Argument	arg + 2		5997291	3					
ANR	5997377	AdditiveExpression	arg + 2		5997291	0		+			
ANR	5997378	Identifier	arg		5997291	0					
ANR	5997379	PrimaryExpression	2		5997291	1					
ANR	5997380	ExpressionStatement	"xres = strtol ( arg , & tail , 10 )"	313:16:7717:7747	5997291	2	True				
ANR	5997381	AssignmentExpression	"xres = strtol ( arg , & tail , 10 )"		5997291	0		=			
ANR	5997382	Identifier	xres		5997291	0					
ANR	5997383	CallExpression	"strtol ( arg , & tail , 10 )"		5997291	1					
ANR	5997384	Callee	strtol		5997291	0					
ANR	5997385	Identifier	strtol		5997291	0					
ANR	5997386	ArgumentList	arg		5997291	1					
ANR	5997387	Argument	arg		5997291	0					
ANR	5997388	Identifier	arg		5997291	0					
ANR	5997389	Argument	& tail		5997291	1					
ANR	5997390	UnaryOperationExpression	& tail		5997291	0					
ANR	5997391	UnaryOperator	&		5997291	0					
ANR	5997392	Identifier	tail		5997291	1					
ANR	5997393	Argument	10		5997291	2					
ANR	5997394	PrimaryExpression	10		5997291	0					
ANR	5997395	IfStatement	if ( tail [ 0 ] == 0 )		5997291	3					
ANR	5997396	Condition	tail [ 0 ] == 0	314:20:7769:7780	5997291	0	True				
ANR	5997397	EqualityExpression	tail [ 0 ] == 0		5997291	0		==			
ANR	5997398	ArrayIndexing	tail [ 0 ]		5997291	0					
ANR	5997399	Identifier	tail		5997291	0					
ANR	5997400	PrimaryExpression	0		5997291	1					
ANR	5997401	PrimaryExpression	0		5997291	1					
ANR	5997402	ExpressionStatement	yres = xres	315:18:7801:7812	5997291	1	True				
ANR	5997403	AssignmentExpression	yres = xres		5997291	0		=			
ANR	5997404	Identifier	yres		5997291	0					
ANR	5997405	Identifier	xres		5997291	1					
ANR	5997406	ElseStatement	else		5997291	0					
ANR	5997407	IfStatement	if ( tail [ 0 ] == 'x' )		5997291	0					
ANR	5997408	Condition	tail [ 0 ] == 'x'	316:25:7839:7852	5997291	0	True				
ANR	5997409	EqualityExpression	tail [ 0 ] == 'x'		5997291	0		==			
ANR	5997410	ArrayIndexing	tail [ 0 ]		5997291	0					
ANR	5997411	Identifier	tail		5997291	0					
ANR	5997412	PrimaryExpression	0		5997291	1					
ANR	5997413	PrimaryExpression	'x'		5997291	1					
ANR	5997414	ExpressionStatement	"yres = strtol ( tail + 1 , & tail , 10 )"	317:18:7873:7908	5997291	1	True				
ANR	5997415	AssignmentExpression	"yres = strtol ( tail + 1 , & tail , 10 )"		5997291	0		=			
ANR	5997416	Identifier	yres		5997291	0					
ANR	5997417	CallExpression	"strtol ( tail + 1 , & tail , 10 )"		5997291	1					
ANR	5997418	Callee	strtol		5997291	0					
ANR	5997419	Identifier	strtol		5997291	0					
ANR	5997420	ArgumentList	tail + 1		5997291	1					
ANR	5997421	Argument	tail + 1		5997291	0					
ANR	5997422	AdditiveExpression	tail + 1		5997291	0		+			
ANR	5997423	Identifier	tail		5997291	0					
ANR	5997424	PrimaryExpression	1		5997291	1					
ANR	5997425	Argument	& tail		5997291	1					
ANR	5997426	UnaryOperationExpression	& tail		5997291	0					
ANR	5997427	UnaryOperator	&		5997291	0					
ANR	5997428	Identifier	tail		5997291	1					
ANR	5997429	Argument	10		5997291	2					
ANR	5997430	PrimaryExpression	10		5997291	0					
ANR	5997431	BreakStatement	break ;	319:14:7940:7945	5997291	2	True				
ANR	5997432	Label	case 's' :	320:12:7959:7967	5997291	3	True				
ANR	5997433	ExpressionStatement	"arg = get_arg ( argc , argv , & i , arg + 2 )"	321:14:7983:8022	5997291	4	True				
ANR	5997434	AssignmentExpression	"arg = get_arg ( argc , argv , & i , arg + 2 )"		5997291	0		=			
ANR	5997435	Identifier	arg		5997291	0					
ANR	5997436	CallExpression	"get_arg ( argc , argv , & i , arg + 2 )"		5997291	1					
ANR	5997437	Callee	get_arg		5997291	0					
ANR	5997438	Identifier	get_arg		5997291	0					
ANR	5997439	ArgumentList	argc		5997291	1					
ANR	5997440	Argument	argc		5997291	0					
ANR	5997441	Identifier	argc		5997291	0					
ANR	5997442	Argument	argv		5997291	1					
ANR	5997443	Identifier	argv		5997291	0					
ANR	5997444	Argument	& i		5997291	2					
ANR	5997445	UnaryOperationExpression	& i		5997291	0					
ANR	5997446	UnaryOperator	&		5997291	0					
ANR	5997447	Identifier	i		5997291	1					
ANR	5997448	Argument	arg + 2		5997291	3					
ANR	5997449	AdditiveExpression	arg + 2		5997291	0		+			
ANR	5997450	Identifier	arg		5997291	0					
ANR	5997451	PrimaryExpression	2		5997291	1					
ANR	5997452	ExpressionStatement	ctx = ijs_invoke_server ( arg )	322:14:8038:8067	5997291	5	True				
ANR	5997453	AssignmentExpression	ctx = ijs_invoke_server ( arg )		5997291	0		=			
ANR	5997454	Identifier	ctx		5997291	0					
ANR	5997455	CallExpression	ijs_invoke_server ( arg )		5997291	1					
ANR	5997456	Callee	ijs_invoke_server		5997291	0					
ANR	5997457	Identifier	ijs_invoke_server		5997291	0					
ANR	5997458	ArgumentList	arg		5997291	1					
ANR	5997459	Argument	arg		5997291	0					
ANR	5997460	Identifier	arg		5997291	0					
ANR	5997461	IfStatement	if ( ! ctx )		5997291	6					
ANR	5997462	Condition	! ctx	323:18:8087:8090	5997291	0	True				
ANR	5997463	UnaryOperationExpression	! ctx		5997291	0					
ANR	5997464	UnaryOperator	!		5997291	0					
ANR	5997465	Identifier	ctx		5997291	1					
ANR	5997466	CompoundStatement		31:24:738:738	5997291	1					
ANR	5997467	ExpressionStatement	"fprintf ( stderr , ""ijs_invoke_server %s failed\\n"" , arg )"	324:16:8111:8165	5997291	0	True				
ANR	5997468	CallExpression	"fprintf ( stderr , ""ijs_invoke_server %s failed\\n"" , arg )"		5997291	0					
ANR	5997469	Callee	fprintf		5997291	0					
ANR	5997470	Identifier	fprintf		5997291	0					
ANR	5997471	ArgumentList	stderr		5997291	1					
ANR	5997472	Argument	stderr		5997291	0					
ANR	5997473	Identifier	stderr		5997291	0					
ANR	5997474	Argument	"""ijs_invoke_server %s failed\\n"""		5997291	1					
ANR	5997475	PrimaryExpression	"""ijs_invoke_server %s failed\\n"""		5997291	0					
ANR	5997476	Argument	arg		5997291	2					
ANR	5997477	Identifier	arg		5997291	0					
ANR	5997478	ReturnStatement	return 1 ;	325:16:8183:8191	5997291	1	True				
ANR	5997479	PrimaryExpression	1		5997291	0					
ANR	5997480	ExpressionStatement	ijs_client_open ( ctx )	327:14:8223:8244	5997291	7	True				
ANR	5997481	CallExpression	ijs_client_open ( ctx )		5997291	0					
ANR	5997482	Callee	ijs_client_open		5997291	0					
ANR	5997483	Identifier	ijs_client_open		5997291	0					
ANR	5997484	ArgumentList	ctx		5997291	1					
ANR	5997485	Argument	ctx		5997291	0					
ANR	5997486	Identifier	ctx		5997291	0					
ANR	5997487	ExpressionStatement	"ijs_client_begin_job ( ctx , 0 )"	328:14:8260:8289	5997291	8	True				
ANR	5997488	CallExpression	"ijs_client_begin_job ( ctx , 0 )"		5997291	0					
ANR	5997489	Callee	ijs_client_begin_job		5997291	0					
ANR	5997490	Identifier	ijs_client_begin_job		5997291	0					
ANR	5997491	ArgumentList	ctx		5997291	1					
ANR	5997492	Argument	ctx		5997291	0					
ANR	5997493	Identifier	ctx		5997291	0					
ANR	5997494	Argument	0		5997291	1					
ANR	5997495	PrimaryExpression	0		5997291	0					
ANR	5997496	BreakStatement	break ;	329:14:8305:8310	5997291	9	True				
ANR	5997497	Label	case 'p' :	330:12:8324:8332	5997291	10	True				
ANR	5997498	ExpressionStatement	"arg = get_arg ( argc , argv , & i , arg + 2 )"	331:14:8348:8387	5997291	11	True				
ANR	5997499	AssignmentExpression	"arg = get_arg ( argc , argv , & i , arg + 2 )"		5997291	0		=			
ANR	5997500	Identifier	arg		5997291	0					
ANR	5997501	CallExpression	"get_arg ( argc , argv , & i , arg + 2 )"		5997291	1					
ANR	5997502	Callee	get_arg		5997291	0					
ANR	5997503	Identifier	get_arg		5997291	0					
ANR	5997504	ArgumentList	argc		5997291	1					
ANR	5997505	Argument	argc		5997291	0					
ANR	5997506	Identifier	argc		5997291	0					
ANR	5997507	Argument	argv		5997291	1					
ANR	5997508	Identifier	argv		5997291	0					
ANR	5997509	Argument	& i		5997291	2					
ANR	5997510	UnaryOperationExpression	& i		5997291	0					
ANR	5997511	UnaryOperator	&		5997291	0					
ANR	5997512	Identifier	i		5997291	1					
ANR	5997513	Argument	arg + 2		5997291	3					
ANR	5997514	AdditiveExpression	arg + 2		5997291	0		+			
ANR	5997515	Identifier	arg		5997291	0					
ANR	5997516	PrimaryExpression	2		5997291	1					
ANR	5997517	ExpressionStatement	verify_context ( ctx )	332:14:8403:8423	5997291	12	True				
ANR	5997518	CallExpression	verify_context ( ctx )		5997291	0					
ANR	5997519	Callee	verify_context		5997291	0					
ANR	5997520	Identifier	verify_context		5997291	0					
ANR	5997521	ArgumentList	ctx		5997291	1					
ANR	5997522	Argument	ctx		5997291	0					
ANR	5997523	Identifier	ctx		5997291	0					
ANR	5997524	ExpressionStatement	"example_set_params ( ctx , arg )"	333:14:8439:8468	5997291	13	True				
ANR	5997525	CallExpression	"example_set_params ( ctx , arg )"		5997291	0					
ANR	5997526	Callee	example_set_params		5997291	0					
ANR	5997527	Identifier	example_set_params		5997291	0					
ANR	5997528	ArgumentList	ctx		5997291	1					
ANR	5997529	Argument	ctx		5997291	0					
ANR	5997530	Identifier	ctx		5997291	0					
ANR	5997531	Argument	arg		5997291	1					
ANR	5997532	Identifier	arg		5997291	0					
ANR	5997533	BreakStatement	break ;	334:14:8484:8489	5997291	14	True				
ANR	5997534	Label	case 'g' :	335:12:8503:8511	5997291	15	True				
ANR	5997535	ExpressionStatement	"arg = get_arg ( argc , argv , & i , arg + 2 )"	336:14:8527:8566	5997291	16	True				
ANR	5997536	AssignmentExpression	"arg = get_arg ( argc , argv , & i , arg + 2 )"		5997291	0		=			
ANR	5997537	Identifier	arg		5997291	0					
ANR	5997538	CallExpression	"get_arg ( argc , argv , & i , arg + 2 )"		5997291	1					
ANR	5997539	Callee	get_arg		5997291	0					
ANR	5997540	Identifier	get_arg		5997291	0					
ANR	5997541	ArgumentList	argc		5997291	1					
ANR	5997542	Argument	argc		5997291	0					
ANR	5997543	Identifier	argc		5997291	0					
ANR	5997544	Argument	argv		5997291	1					
ANR	5997545	Identifier	argv		5997291	0					
ANR	5997546	Argument	& i		5997291	2					
ANR	5997547	UnaryOperationExpression	& i		5997291	0					
ANR	5997548	UnaryOperator	&		5997291	0					
ANR	5997549	Identifier	i		5997291	1					
ANR	5997550	Argument	arg + 2		5997291	3					
ANR	5997551	AdditiveExpression	arg + 2		5997291	0		+			
ANR	5997552	Identifier	arg		5997291	0					
ANR	5997553	PrimaryExpression	2		5997291	1					
ANR	5997554	ExpressionStatement	verify_context ( ctx )	337:14:8582:8602	5997291	17	True				
ANR	5997555	CallExpression	verify_context ( ctx )		5997291	0					
ANR	5997556	Callee	verify_context		5997291	0					
ANR	5997557	Identifier	verify_context		5997291	0					
ANR	5997558	ArgumentList	ctx		5997291	1					
ANR	5997559	Argument	ctx		5997291	0					
ANR	5997560	Identifier	ctx		5997291	0					
ANR	5997561	ExpressionStatement	"example_get_param ( ctx , arg )"	338:14:8618:8646	5997291	18	True				
ANR	5997562	CallExpression	"example_get_param ( ctx , arg )"		5997291	0					
ANR	5997563	Callee	example_get_param		5997291	0					
ANR	5997564	Identifier	example_get_param		5997291	0					
ANR	5997565	ArgumentList	ctx		5997291	1					
ANR	5997566	Argument	ctx		5997291	0					
ANR	5997567	Identifier	ctx		5997291	0					
ANR	5997568	Argument	arg		5997291	1					
ANR	5997569	Identifier	arg		5997291	0					
ANR	5997570	BreakStatement	break ;	339:14:8662:8667	5997291	19	True				
ANR	5997571	Label	case 'e' :	340:12:8681:8689	5997291	20	True				
ANR	5997572	ExpressionStatement	"arg = get_arg ( argc , argv , & i , arg + 2 )"	341:14:8705:8744	5997291	21	True				
ANR	5997573	AssignmentExpression	"arg = get_arg ( argc , argv , & i , arg + 2 )"		5997291	0		=			
ANR	5997574	Identifier	arg		5997291	0					
ANR	5997575	CallExpression	"get_arg ( argc , argv , & i , arg + 2 )"		5997291	1					
ANR	5997576	Callee	get_arg		5997291	0					
ANR	5997577	Identifier	get_arg		5997291	0					
ANR	5997578	ArgumentList	argc		5997291	1					
ANR	5997579	Argument	argc		5997291	0					
ANR	5997580	Identifier	argc		5997291	0					
ANR	5997581	Argument	argv		5997291	1					
ANR	5997582	Identifier	argv		5997291	0					
ANR	5997583	Argument	& i		5997291	2					
ANR	5997584	UnaryOperationExpression	& i		5997291	0					
ANR	5997585	UnaryOperator	&		5997291	0					
ANR	5997586	Identifier	i		5997291	1					
ANR	5997587	Argument	arg + 2		5997291	3					
ANR	5997588	AdditiveExpression	arg + 2		5997291	0		+			
ANR	5997589	Identifier	arg		5997291	0					
ANR	5997590	PrimaryExpression	2		5997291	1					
ANR	5997591	ExpressionStatement	verify_context ( ctx )	342:14:8760:8780	5997291	22	True				
ANR	5997592	CallExpression	verify_context ( ctx )		5997291	0					
ANR	5997593	Callee	verify_context		5997291	0					
ANR	5997594	Identifier	verify_context		5997291	0					
ANR	5997595	ArgumentList	ctx		5997291	1					
ANR	5997596	Argument	ctx		5997291	0					
ANR	5997597	Identifier	ctx		5997291	0					
ANR	5997598	ExpressionStatement	"example_enum_param ( ctx , arg )"	343:14:8796:8825	5997291	23	True				
ANR	5997599	CallExpression	"example_enum_param ( ctx , arg )"		5997291	0					
ANR	5997600	Callee	example_enum_param		5997291	0					
ANR	5997601	Identifier	example_enum_param		5997291	0					
ANR	5997602	ArgumentList	ctx		5997291	1					
ANR	5997603	Argument	ctx		5997291	0					
ANR	5997604	Identifier	ctx		5997291	0					
ANR	5997605	Argument	arg		5997291	1					
ANR	5997606	Identifier	arg		5997291	0					
ANR	5997607	BreakStatement	break ;	344:14:8841:8846	5997291	24	True				
ANR	5997608	Label	case 'l' :	345:12:8860:8868	5997291	25	True				
ANR	5997609	ExpressionStatement	verify_context ( ctx )	346:14:8884:8904	5997291	26	True				
ANR	5997610	CallExpression	verify_context ( ctx )		5997291	0					
ANR	5997611	Callee	verify_context		5997291	0					
ANR	5997612	Identifier	verify_context		5997291	0					
ANR	5997613	ArgumentList	ctx		5997291	1					
ANR	5997614	Argument	ctx		5997291	0					
ANR	5997615	Identifier	ctx		5997291	0					
ANR	5997616	ExpressionStatement	example_list_params ( ctx )	347:14:8920:8945	5997291	27	True				
ANR	5997617	CallExpression	example_list_params ( ctx )		5997291	0					
ANR	5997618	Callee	example_list_params		5997291	0					
ANR	5997619	Identifier	example_list_params		5997291	0					
ANR	5997620	ArgumentList	ctx		5997291	1					
ANR	5997621	Argument	ctx		5997291	0					
ANR	5997622	Identifier	ctx		5997291	0					
ANR	5997623	BreakStatement	break ;	348:14:8961:8966	5997291	28	True				
ANR	5997624	Label	case 0 :	349:12:8980:8986	5997291	29	True				
ANR	5997625	ExpressionStatement	verify_context ( ctx )	350:14:9002:9022	5997291	30	True				
ANR	5997626	CallExpression	verify_context ( ctx )		5997291	0					
ANR	5997627	Callee	verify_context		5997291	0					
ANR	5997628	Identifier	verify_context		5997291	0					
ANR	5997629	ArgumentList	ctx		5997291	1					
ANR	5997630	Argument	ctx		5997291	0					
ANR	5997631	Identifier	ctx		5997291	0					
ANR	5997632	ExpressionStatement	"send_pnm_file ( ctx , stdin , xres , yres )"	351:14:9038:9076	5997291	31	True				
ANR	5997633	CallExpression	"send_pnm_file ( ctx , stdin , xres , yres )"		5997291	0					
ANR	5997634	Callee	send_pnm_file		5997291	0					
ANR	5997635	Identifier	send_pnm_file		5997291	0					
ANR	5997636	ArgumentList	ctx		5997291	1					
ANR	5997637	Argument	ctx		5997291	0					
ANR	5997638	Identifier	ctx		5997291	0					
ANR	5997639	Argument	stdin		5997291	1					
ANR	5997640	Identifier	stdin		5997291	0					
ANR	5997641	Argument	xres		5997291	2					
ANR	5997642	Identifier	xres		5997291	0					
ANR	5997643	Argument	yres		5997291	3					
ANR	5997644	Identifier	yres		5997291	0					
ANR	5997645	BreakStatement	break ;	352:14:9092:9097	5997291	32	True				
ANR	5997646	ElseStatement	else		5997291	0					
ANR	5997647	CompoundStatement		65:10:1799:1826	5997291	0					
ANR	5997648	IdentifierDeclStatement	"FILE * f = fopen ( arg , ""rb"" ) ;"	357:10:9154:9181	5997291	0	True				
ANR	5997649	IdentifierDecl	"* f = fopen ( arg , ""rb"" )"		5997291	0					
ANR	5997650	IdentifierDeclType	FILE *		5997291	0					
ANR	5997651	Identifier	f		5997291	1					
ANR	5997652	AssignmentExpression	"* f = fopen ( arg , ""rb"" )"		5997291	2		=			
ANR	5997653	Identifier	f		5997291	0					
ANR	5997654	CallExpression	"fopen ( arg , ""rb"" )"		5997291	1					
ANR	5997655	Callee	fopen		5997291	0					
ANR	5997656	Identifier	fopen		5997291	0					
ANR	5997657	ArgumentList	arg		5997291	1					
ANR	5997658	Argument	arg		5997291	0					
ANR	5997659	Identifier	arg		5997291	0					
ANR	5997660	Argument	"""rb"""		5997291	1					
ANR	5997661	PrimaryExpression	"""rb"""		5997291	0					
ANR	5997662	IfStatement	if ( f == NULL )		5997291	1					
ANR	5997663	Condition	f == NULL	359:14:9198:9206	5997291	0	True				
ANR	5997664	EqualityExpression	f == NULL		5997291	0		==			
ANR	5997665	Identifier	f		5997291	0					
ANR	5997666	Identifier	NULL		5997291	1					
ANR	5997667	CompoundStatement		68:12:1866:1866	5997291	1					
ANR	5997668	ExpressionStatement	"fprintf ( stderr , ""error opening %s\\n"" , arg )"	361:14:9237:9280	5997291	0	True				
ANR	5997669	CallExpression	"fprintf ( stderr , ""error opening %s\\n"" , arg )"		5997291	0					
ANR	5997670	Callee	fprintf		5997291	0					
ANR	5997671	Identifier	fprintf		5997291	0					
ANR	5997672	ArgumentList	stderr		5997291	1					
ANR	5997673	Argument	stderr		5997291	0					
ANR	5997674	Identifier	stderr		5997291	0					
ANR	5997675	Argument	"""error opening %s\\n"""		5997291	1					
ANR	5997676	PrimaryExpression	"""error opening %s\\n"""		5997291	0					
ANR	5997677	Argument	arg		5997291	2					
ANR	5997678	Identifier	arg		5997291	0					
ANR	5997679	ReturnStatement	return 1 ;	362:14:9296:9304	5997291	1	True				
ANR	5997680	PrimaryExpression	1		5997291	0					
ANR	5997681	ExpressionStatement	verify_context ( ctx )	364:10:9330:9350	5997291	2	True				
ANR	5997682	CallExpression	verify_context ( ctx )		5997291	0					
ANR	5997683	Callee	verify_context		5997291	0					
ANR	5997684	Identifier	verify_context		5997291	0					
ANR	5997685	ArgumentList	ctx		5997291	1					
ANR	5997686	Argument	ctx		5997291	0					
ANR	5997687	Identifier	ctx		5997291	0					
ANR	5997688	ExpressionStatement	"send_pnm_file ( ctx , f , xres , yres )"	365:10:9362:9396	5997291	3	True				
ANR	5997689	CallExpression	"send_pnm_file ( ctx , f , xres , yres )"		5997291	0					
ANR	5997690	Callee	send_pnm_file		5997291	0					
ANR	5997691	Identifier	send_pnm_file		5997291	0					
ANR	5997692	ArgumentList	ctx		5997291	1					
ANR	5997693	Argument	ctx		5997291	0					
ANR	5997694	Identifier	ctx		5997291	0					
ANR	5997695	Argument	f		5997291	1					
ANR	5997696	Identifier	f		5997291	0					
ANR	5997697	Argument	xres		5997291	2					
ANR	5997698	Identifier	xres		5997291	0					
ANR	5997699	Argument	yres		5997291	3					
ANR	5997700	Identifier	yres		5997291	0					
ANR	5997701	ExpressionStatement	fclose ( f )	366:10:9408:9418	5997291	4	True				
ANR	5997702	CallExpression	fclose ( f )		5997291	0					
ANR	5997703	Callee	fclose		5997291	0					
ANR	5997704	Identifier	fclose		5997291	0					
ANR	5997705	ArgumentList	f		5997291	1					
ANR	5997706	Argument	f		5997291	0					
ANR	5997707	Identifier	f		5997291	0					
ANR	5997708	ExpressionStatement	verify_context ( ctx )	370:2:9439:9459	5997291	5	True				
ANR	5997709	CallExpression	verify_context ( ctx )		5997291	0					
ANR	5997710	Callee	verify_context		5997291	0					
ANR	5997711	Identifier	verify_context		5997291	0					
ANR	5997712	ArgumentList	ctx		5997291	1					
ANR	5997713	Argument	ctx		5997291	0					
ANR	5997714	Identifier	ctx		5997291	0					
ANR	5997715	ExpressionStatement	"ijs_client_end_job ( ctx , 0 )"	372:2:9464:9491	5997291	6	True				
ANR	5997716	CallExpression	"ijs_client_end_job ( ctx , 0 )"		5997291	0					
ANR	5997717	Callee	ijs_client_end_job		5997291	0					
ANR	5997718	Identifier	ijs_client_end_job		5997291	0					
ANR	5997719	ArgumentList	ctx		5997291	1					
ANR	5997720	Argument	ctx		5997291	0					
ANR	5997721	Identifier	ctx		5997291	0					
ANR	5997722	Argument	0		5997291	1					
ANR	5997723	PrimaryExpression	0		5997291	0					
ANR	5997724	ExpressionStatement	ijs_client_close ( ctx )	373:2:9495:9517	5997291	7	True				
ANR	5997725	CallExpression	ijs_client_close ( ctx )		5997291	0					
ANR	5997726	Callee	ijs_client_close		5997291	0					
ANR	5997727	Identifier	ijs_client_close		5997291	0					
ANR	5997728	ArgumentList	ctx		5997291	1					
ANR	5997729	Argument	ctx		5997291	0					
ANR	5997730	Identifier	ctx		5997291	0					
ANR	5997731	ExpressionStatement	"ijs_client_begin_cmd ( ctx , IJS_CMD_EXIT )"	376:2:9566:9606	5997291	8	True				
ANR	5997732	CallExpression	"ijs_client_begin_cmd ( ctx , IJS_CMD_EXIT )"		5997291	0					
ANR	5997733	Callee	ijs_client_begin_cmd		5997291	0					
ANR	5997734	Identifier	ijs_client_begin_cmd		5997291	0					
ANR	5997735	ArgumentList	ctx		5997291	1					
ANR	5997736	Argument	ctx		5997291	0					
ANR	5997737	Identifier	ctx		5997291	0					
ANR	5997738	Argument	IJS_CMD_EXIT		5997291	1					
ANR	5997739	Identifier	IJS_CMD_EXIT		5997291	0					
ANR	5997740	ExpressionStatement	ijs_client_send_cmd_wait ( ctx )	377:2:9610:9640	5997291	9	True				
ANR	5997741	CallExpression	ijs_client_send_cmd_wait ( ctx )		5997291	0					
ANR	5997742	Callee	ijs_client_send_cmd_wait		5997291	0					
ANR	5997743	Identifier	ijs_client_send_cmd_wait		5997291	0					
ANR	5997744	ArgumentList	ctx		5997291	1					
ANR	5997745	Argument	ctx		5997291	0					
ANR	5997746	Identifier	ctx		5997291	0					
ANR	5997747	ReturnStatement	return 0 ;	379:2:9645:9653	5997291	10	True				
ANR	5997748	PrimaryExpression	0		5997291	0					
ANR	5997749	ReturnType	int		5997291	1					
ANR	5997750	Identifier	main		5997291	2					
ANR	5997751	ParameterList	"int argc , char * * argv"		5997291	3					
ANR	5997752	Parameter	int argc	292:6:7331:7338	5997291	0	True				
ANR	5997753	ParameterType	int		5997291	0					
ANR	5997754	Identifier	argc		5997291	1					
ANR	5997755	Parameter	char * * argv	292:16:7341:7351	5997291	1	True				
ANR	5997756	ParameterType	char * *		5997291	0					
ANR	5997757	Identifier	argv		5997291	1					
ANR	5997758	CFGEntryNode	ENTRY		5997291		True				
ANR	5997759	CFGExitNode	EXIT		5997291		True				
ANR	5997760	Symbol	argc		5997291						
ANR	5997761	Symbol	fopen		5997291						
ANR	5997762	Symbol	* tail		5997291						
ANR	5997763	Symbol	stdin		5997291						
ANR	5997764	Symbol	NULL		5997291						
ANR	5997765	Symbol	ctx		5997291						
ANR	5997766	Symbol	tail		5997291						
ANR	5997767	Symbol	f		5997291						
ANR	5997768	Symbol	get_arg		5997291						
ANR	5997769	Symbol	i		5997291						
ANR	5997770	Symbol	* argv		5997291						
ANR	5997771	Symbol	stderr		5997291						
ANR	5997772	Symbol	argv		5997291						
ANR	5997773	Symbol	& i		5997291						
ANR	5997774	Symbol	xres		5997291						
ANR	5997775	Symbol	* i		5997291						
ANR	5997776	Symbol	strtol		5997291						
ANR	5997777	Symbol	ijs_invoke_server		5997291						
ANR	5997778	Symbol	arg		5997291						
ANR	5997779	Symbol	& tail		5997291						
ANR	5997780	Symbol	IJS_CMD_EXIT		5997291						
ANR	5997781	Symbol	yres		5997291						
ANR	5997782	Symbol	* arg		5997291						
