command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	7163070	File	data/converged/CVE-2018-16863_ghostpdl/lcms2mt_utils_common_xgetopt.c								
ANR	7163071	DeclStmt									
ANR	7163072	Decl							int	int	xoptind
ANR	7163073	DeclStmt									
ANR	7163074	Decl							char	char *	xoptarg
ANR	7163075	DeclStmt									
ANR	7163076	Decl							int	int	xopterr
ANR	7163077	DeclStmt									
ANR	7163078	Decl							char	char *	letP
ANR	7163079	DeclStmt									
ANR	7163080	Decl							char	char	SW
ANR	7163081	Function	xgetopt	26:0:554:1721							
ANR	7163082	FunctionDef	"xgetopt (int argc , char * argv [ ] , char * optionS)"		7163081	0					
ANR	7163083	CompoundStatement		27:0:605:1721	7163081	0					
ANR	7163084	IdentifierDeclStatement	unsigned char ch ;	28:4:611:627	7163081	0	True				
ANR	7163085	IdentifierDecl	ch		7163081	0					
ANR	7163086	IdentifierDeclType	unsigned char		7163081	0					
ANR	7163087	Identifier	ch		7163081	1					
ANR	7163088	IdentifierDeclStatement	char * optP ;	29:4:633:643	7163081	1	True				
ANR	7163089	IdentifierDecl	* optP		7163081	0					
ANR	7163090	IdentifierDeclType	char *		7163081	0					
ANR	7163091	Identifier	optP		7163081	1					
ANR	7163092	IfStatement	if ( SW == 0 )		7163081	2					
ANR	7163093	Condition	SW == 0	31:8:654:660	7163081	0	True				
ANR	7163094	EqualityExpression	SW == 0		7163081	0		==			
ANR	7163095	Identifier	SW		7163081	0					
ANR	7163096	PrimaryExpression	0		7163081	1					
ANR	7163097	CompoundStatement		5:17:57:57	7163081	1					
ANR	7163098	ExpressionStatement	SW = '/'	32:8:673:681	7163081	0	True				
ANR	7163099	AssignmentExpression	SW = '/'		7163081	0		=			
ANR	7163100	Identifier	SW		7163081	0					
ANR	7163101	PrimaryExpression	'/'		7163081	1					
ANR	7163102	IfStatement	if ( argc > xoptind )		7163081	3					
ANR	7163103	Condition	argc > xoptind	35:8:698:711	7163081	0	True				
ANR	7163104	RelationalExpression	argc > xoptind		7163081	0		>			
ANR	7163105	Identifier	argc		7163081	0					
ANR	7163106	Identifier	xoptind		7163081	1					
ANR	7163107	CompoundStatement		9:24:108:108	7163081	1					
ANR	7163108	IfStatement	if ( letP == NULL )		7163081	0					
ANR	7163109	Condition	letP == NULL	36:12:728:739	7163081	0	True				
ANR	7163110	EqualityExpression	letP == NULL		7163081	0		==			
ANR	7163111	Identifier	letP		7163081	0					
ANR	7163112	Identifier	NULL		7163081	1					
ANR	7163113	CompoundStatement		10:26:136:136	7163081	1					
ANR	7163114	IfStatement	if ( ( letP = argv [ xoptind ] ) == NULL || * ( letP ++ ) != SW )		7163081	0					
ANR	7163115	Condition	( letP = argv [ xoptind ] ) == NULL || * ( letP ++ ) != SW	37:16:760:824	7163081	0	True				
ANR	7163116	OrExpression	( letP = argv [ xoptind ] ) == NULL || * ( letP ++ ) != SW		7163081	0		||			
ANR	7163117	EqualityExpression	( letP = argv [ xoptind ] ) == NULL		7163081	0		==			
ANR	7163118	AssignmentExpression	letP = argv [ xoptind ]		7163081	0		=			
ANR	7163119	Identifier	letP		7163081	0					
ANR	7163120	ArrayIndexing	argv [ xoptind ]		7163081	1					
ANR	7163121	Identifier	argv		7163081	0					
ANR	7163122	Identifier	xoptind		7163081	1					
ANR	7163123	Identifier	NULL		7163081	1					
ANR	7163124	EqualityExpression	* ( letP ++ ) != SW		7163081	1		!=			
ANR	7163125	UnaryOperationExpression	* ( letP ++ )		7163081	0					
ANR	7163126	UnaryOperator	*		7163081	0					
ANR	7163127	PostIncDecOperationExpression	letP ++		7163081	1					
ANR	7163128	Identifier	letP		7163081	0					
ANR	7163129	IncDec	++		7163081	1					
ANR	7163130	Identifier	SW		7163081	1					
ANR	7163131	GotoStatement	goto gopEOF ;	38:34:828:839	7163081	1	True				
ANR	7163132	Identifier	gopEOF		7163081	0					
ANR	7163133	IfStatement	if ( * letP == SW )		7163081	1					
ANR	7163134	Condition	* letP == SW	39:16:857:867	7163081	0	True				
ANR	7163135	EqualityExpression	* letP == SW		7163081	0		==			
ANR	7163136	UnaryOperationExpression	* letP		7163081	0					
ANR	7163137	UnaryOperator	*		7163081	0					
ANR	7163138	Identifier	letP		7163081	1					
ANR	7163139	Identifier	SW		7163081	1					
ANR	7163140	CompoundStatement		13:29:264:264	7163081	1					
ANR	7163141	ExpressionStatement	xoptind ++	40:16:888:897	7163081	0	True				
ANR	7163142	PostIncDecOperationExpression	xoptind ++		7163081	0					
ANR	7163143	Identifier	xoptind		7163081	0					
ANR	7163144	IncDec	++		7163081	1					
ANR	7163145	GotoStatement	goto gopEOF ;	40:28:900:911	7163081	1	True				
ANR	7163146	Identifier	gopEOF		7163081	0					
ANR	7163147	IfStatement	if ( 0 == ( ch = * ( letP ++ ) ) )		7163081	1					
ANR	7163148	Condition	0 == ( ch = * ( letP ++ ) )	43:12:949:969	7163081	0	True				
ANR	7163149	EqualityExpression	0 == ( ch = * ( letP ++ ) )		7163081	0		==			
ANR	7163150	PrimaryExpression	0		7163081	0					
ANR	7163151	AssignmentExpression	ch = * ( letP ++ )		7163081	1		=			
ANR	7163152	Identifier	ch		7163081	0					
ANR	7163153	UnaryOperationExpression	* ( letP ++ )		7163081	1					
ANR	7163154	UnaryOperator	*		7163081	0					
ANR	7163155	PostIncDecOperationExpression	letP ++		7163081	1					
ANR	7163156	Identifier	letP		7163081	0					
ANR	7163157	IncDec	++		7163081	1					
ANR	7163158	CompoundStatement		17:35:366:366	7163081	1					
ANR	7163159	ExpressionStatement	xoptind ++	44:12:986:995	7163081	0	True				
ANR	7163160	PostIncDecOperationExpression	xoptind ++		7163081	0					
ANR	7163161	Identifier	xoptind		7163081	0					
ANR	7163162	IncDec	++		7163081	1					
ANR	7163163	GotoStatement	goto gopEOF ;	44:24:998:1009	7163081	1	True				
ANR	7163164	Identifier	gopEOF		7163081	0					
ANR	7163165	IfStatement	"if ( ':' == ch || ( optP = strchr ( optionS , ch ) ) == NULL )"		7163081	2					
ANR	7163166	Condition	"':' == ch || ( optP = strchr ( optionS , ch ) ) == NULL"	46:12:1033:1083	7163081	0	True				
ANR	7163167	OrExpression	"':' == ch || ( optP = strchr ( optionS , ch ) ) == NULL"		7163081	0		||			
ANR	7163168	EqualityExpression	':' == ch		7163081	0		==			
ANR	7163169	PrimaryExpression	':'		7163081	0					
ANR	7163170	Identifier	ch		7163081	1					
ANR	7163171	EqualityExpression	"( optP = strchr ( optionS , ch ) ) == NULL"		7163081	1		==			
ANR	7163172	AssignmentExpression	"optP = strchr ( optionS , ch )"		7163081	0		=			
ANR	7163173	Identifier	optP		7163081	0					
ANR	7163174	CallExpression	"strchr ( optionS , ch )"		7163081	1					
ANR	7163175	Callee	strchr		7163081	0					
ANR	7163176	Identifier	strchr		7163081	0					
ANR	7163177	ArgumentList	optionS		7163081	1					
ANR	7163178	Argument	optionS		7163081	0					
ANR	7163179	Identifier	optionS		7163081	0					
ANR	7163180	Argument	ch		7163081	1					
ANR	7163181	Identifier	ch		7163081	0					
ANR	7163182	Identifier	NULL		7163081	1					
ANR	7163183	GotoStatement	goto gopError ;	47:12:1098:1111	7163081	1	True				
ANR	7163184	Identifier	gopError		7163081	0					
ANR	7163185	IfStatement	if ( ':' == * ( ++ optP ) )		7163081	3					
ANR	7163186	Condition	':' == * ( ++ optP )	48:12:1125:1140	7163081	0	True				
ANR	7163187	EqualityExpression	':' == * ( ++ optP )		7163081	0		==			
ANR	7163188	PrimaryExpression	':'		7163081	0					
ANR	7163189	UnaryOperationExpression	* ( ++ optP )		7163081	1					
ANR	7163190	UnaryOperator	*		7163081	0					
ANR	7163191	UnaryExpression	++ optP		7163081	1					
ANR	7163192	IncDec	++		7163081	0					
ANR	7163193	Identifier	optP		7163081	1					
ANR	7163194	CompoundStatement		22:30:537:537	7163081	1					
ANR	7163195	ExpressionStatement	xoptind ++	49:12:1157:1166	7163081	0	True				
ANR	7163196	PostIncDecOperationExpression	xoptind ++		7163081	0					
ANR	7163197	Identifier	xoptind		7163081	0					
ANR	7163198	IncDec	++		7163081	1					
ANR	7163199	IfStatement	if ( 0 == * letP )		7163081	1					
ANR	7163200	Condition	0 == * letP	50:16:1184:1193	7163081	0	True				
ANR	7163201	EqualityExpression	0 == * letP		7163081	0		==			
ANR	7163202	PrimaryExpression	0		7163081	0					
ANR	7163203	UnaryOperationExpression	* letP		7163081	1					
ANR	7163204	UnaryOperator	*		7163081	0					
ANR	7163205	Identifier	letP		7163081	1					
ANR	7163206	CompoundStatement		24:28:590:590	7163081	1					
ANR	7163207	IfStatement	if ( argc <= xoptind )		7163081	0					
ANR	7163208	Condition	argc <= xoptind	51:20:1218:1232	7163081	0	True				
ANR	7163209	RelationalExpression	argc <= xoptind		7163081	0		<=			
ANR	7163210	Identifier	argc		7163081	0					
ANR	7163211	Identifier	xoptind		7163081	1					
ANR	7163212	GotoStatement	goto gopError ;	51:38:1236:1250	7163081	1	True				
ANR	7163213	Identifier	gopError		7163081	0					
ANR	7163214	ExpressionStatement	letP = argv [ xoptind ++ ]	52:16:1268:1290	7163081	1	True				
ANR	7163215	AssignmentExpression	letP = argv [ xoptind ++ ]		7163081	0		=			
ANR	7163216	Identifier	letP		7163081	0					
ANR	7163217	ArrayIndexing	argv [ xoptind ++ ]		7163081	1					
ANR	7163218	Identifier	argv		7163081	0					
ANR	7163219	PostIncDecOperationExpression	xoptind ++		7163081	1					
ANR	7163220	Identifier	xoptind		7163081	0					
ANR	7163221	IncDec	++		7163081	1					
ANR	7163222	ExpressionStatement	xoptarg = letP	54:12:1318:1332	7163081	2	True				
ANR	7163223	AssignmentExpression	xoptarg = letP		7163081	0		=			
ANR	7163224	Identifier	xoptarg		7163081	0					
ANR	7163225	Identifier	letP		7163081	1					
ANR	7163226	ExpressionStatement	letP = NULL	55:12:1346:1357	7163081	3	True				
ANR	7163227	AssignmentExpression	letP = NULL		7163081	0		=			
ANR	7163228	Identifier	letP		7163081	0					
ANR	7163229	Identifier	NULL		7163081	1					
ANR	7163230	ElseStatement	else		7163081	0					
ANR	7163231	CompoundStatement		30:15:768:768	7163081	0					
ANR	7163232	IfStatement	if ( 0 == * letP )		7163081	0					
ANR	7163233	Condition	0 == * letP	57:16:1392:1401	7163081	0	True				
ANR	7163234	EqualityExpression	0 == * letP		7163081	0		==			
ANR	7163235	PrimaryExpression	0		7163081	0					
ANR	7163236	UnaryOperationExpression	* letP		7163081	1					
ANR	7163237	UnaryOperator	*		7163081	0					
ANR	7163238	Identifier	letP		7163081	1					
ANR	7163239	CompoundStatement		31:28:798:798	7163081	1					
ANR	7163240	ExpressionStatement	xoptind ++	58:16:1422:1431	7163081	0	True				
ANR	7163241	PostIncDecOperationExpression	xoptind ++		7163081	0					
ANR	7163242	Identifier	xoptind		7163081	0					
ANR	7163243	IncDec	++		7163081	1					
ANR	7163244	ExpressionStatement	letP = NULL	59:16:1449:1460	7163081	1	True				
ANR	7163245	AssignmentExpression	letP = NULL		7163081	0		=			
ANR	7163246	Identifier	letP		7163081	0					
ANR	7163247	Identifier	NULL		7163081	1					
ANR	7163248	ExpressionStatement	xoptarg = NULL	61:12:1488:1502	7163081	1	True				
ANR	7163249	AssignmentExpression	xoptarg = NULL		7163081	0		=			
ANR	7163250	Identifier	xoptarg		7163081	0					
ANR	7163251	Identifier	NULL		7163081	1					
ANR	7163252	ReturnStatement	return ch ;	63:8:1522:1531	7163081	4	True				
ANR	7163253	Identifier	ch		7163081	0					
ANR	7163254	Label	gopEOF :	65:0:1539:1545	7163081	4	True				
ANR	7163255	Identifier	gopEOF		7163081	0					
ANR	7163256	ExpressionStatement	xoptarg = letP = NULL	66:4:1551:1572	7163081	5	True				
ANR	7163257	AssignmentExpression	xoptarg = letP = NULL		7163081	0		=			
ANR	7163258	Identifier	xoptarg		7163081	0					
ANR	7163259	AssignmentExpression	letP = NULL		7163081	1		=			
ANR	7163260	Identifier	letP		7163081	0					
ANR	7163261	Identifier	NULL		7163081	1					
ANR	7163262	ReturnStatement	return EOF ;	67:4:1578:1588	7163081	6	True				
ANR	7163263	Identifier	EOF		7163081	0					
ANR	7163264	Label	gopError :	69:0:1591:1599	7163081	7	True				
ANR	7163265	Identifier	gopError		7163081	0					
ANR	7163266	ExpressionStatement	xoptarg = NULL	70:4:1605:1619	7163081	8	True				
ANR	7163267	AssignmentExpression	xoptarg = NULL		7163081	0		=			
ANR	7163268	Identifier	xoptarg		7163081	0					
ANR	7163269	Identifier	NULL		7163081	1					
ANR	7163270	ExpressionStatement	errno = EINVAL	71:4:1625:1640	7163081	9	True				
ANR	7163271	AssignmentExpression	errno = EINVAL		7163081	0		=			
ANR	7163272	Identifier	errno		7163081	0					
ANR	7163273	Identifier	EINVAL		7163081	1					
ANR	7163274	IfStatement	if ( xopterr )		7163081	10					
ANR	7163275	Condition	xopterr	72:8:1650:1656	7163081	0	True				
ANR	7163276	Identifier	xopterr		7163081	0					
ANR	7163277	ExpressionStatement	"perror ( ""get command line option"" )"	73:8:1667:1701	7163081	1	True				
ANR	7163278	CallExpression	"perror ( ""get command line option"" )"		7163081	0					
ANR	7163279	Callee	perror		7163081	0					
ANR	7163280	Identifier	perror		7163081	0					
ANR	7163281	ArgumentList	"""get command line option"""		7163081	1					
ANR	7163282	Argument	"""get command line option"""		7163081	0					
ANR	7163283	PrimaryExpression	"""get command line option"""		7163081	0					
ANR	7163284	ReturnStatement	return ( '?' ) ;	74:4:1707:1719	7163081	11	True				
ANR	7163285	PrimaryExpression	'?'		7163081	0					
ANR	7163286	ReturnType	int		7163081	1					
ANR	7163287	Identifier	xgetopt		7163081	2					
ANR	7163288	ParameterList	"int argc , char * argv [ ] , char * optionS"		7163081	3					
ANR	7163289	Parameter	int argc	26:12:566:573	7163081	0	True				
ANR	7163290	ParameterType	int		7163081	0					
ANR	7163291	Identifier	argc		7163081	1					
ANR	7163292	Parameter	char * argv [ ]	26:22:576:587	7163081	1	True				
ANR	7163293	ParameterType	char * [ ]		7163081	0					
ANR	7163294	Identifier	argv		7163081	1					
ANR	7163295	Parameter	char * optionS	26:36:590:602	7163081	2	True				
ANR	7163296	ParameterType	char *		7163081	0					
ANR	7163297	Identifier	optionS		7163081	1					
ANR	7163298	CFGEntryNode	ENTRY		7163081		True				
ANR	7163299	CFGExitNode	EXIT		7163081		True				
ANR	7163300	Symbol	argc		7163081						
ANR	7163301	Symbol	errno		7163081						
ANR	7163302	Symbol	NULL		7163081						
ANR	7163303	Symbol	SW		7163081						
ANR	7163304	Symbol	ch		7163081						
ANR	7163305	Symbol	letP		7163081						
ANR	7163306	Symbol	* ( letP ++ )		7163081						
ANR	7163307	Symbol	optP		7163081						
ANR	7163308	Symbol	strchr		7163081						
ANR	7163309	Symbol	* argv		7163081						
ANR	7163310	Symbol	* letP		7163081						
ANR	7163311	Symbol	argv		7163081						
ANR	7163312	Symbol	xoptarg		7163081						
ANR	7163313	Symbol	EINVAL		7163081						
ANR	7163314	Symbol	* optP		7163081						
ANR	7163315	Symbol	xoptind		7163081						
ANR	7163316	Symbol	optionS		7163081						
ANR	7163317	Symbol	* xoptind		7163081						
ANR	7163318	Symbol	* ( ++ optP )		7163081						
ANR	7163319	Symbol	xopterr		7163081						
ANR	7163320	Symbol	EOF		7163081						
