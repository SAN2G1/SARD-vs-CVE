command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	9165015	File	data/converged/CVE-2018-16863_ghostpdl/psi_zpacked.c								
ANR	9165016	Function	zcurrentpacking	31:0:879:1015							
ANR	9165017	FunctionDef	zcurrentpacking (i_ctx_t * i_ctx_p)		9165016	0					
ANR	9165018	CompoundStatement		33:0:924:1015	9165016	0					
ANR	9165019	IdentifierDeclStatement	os_ptr op = osp ;	34:4:930:945	9165016	0	True				
ANR	9165020	IdentifierDecl	op = osp		9165016	0					
ANR	9165021	IdentifierDeclType	os_ptr		9165016	0					
ANR	9165022	Identifier	op		9165016	1					
ANR	9165023	AssignmentExpression	op = osp		9165016	2		=			
ANR	9165024	Identifier	osp		9165016	0					
ANR	9165025	Identifier	osp		9165016	1					
ANR	9165026	ExpressionStatement	push ( 1 )	36:4:952:959	9165016	1	True				
ANR	9165027	CallExpression	push ( 1 )		9165016	0					
ANR	9165028	Callee	push		9165016	0					
ANR	9165029	Identifier	push		9165016	0					
ANR	9165030	ArgumentList	1		9165016	1					
ANR	9165031	Argument	1		9165016	0					
ANR	9165032	PrimaryExpression	1		9165016	0					
ANR	9165033	ExpressionStatement	"ref_assign ( op , & ref_array_packing )"	37:4:965:999	9165016	2	True				
ANR	9165034	CallExpression	"ref_assign ( op , & ref_array_packing )"		9165016	0					
ANR	9165035	Callee	ref_assign		9165016	0					
ANR	9165036	Identifier	ref_assign		9165016	0					
ANR	9165037	ArgumentList	op		9165016	1					
ANR	9165038	Argument	op		9165016	0					
ANR	9165039	Identifier	op		9165016	0					
ANR	9165040	Argument	& ref_array_packing		9165016	1					
ANR	9165041	UnaryOperationExpression	& ref_array_packing		9165016	0					
ANR	9165042	UnaryOperator	&		9165016	0					
ANR	9165043	Identifier	ref_array_packing		9165016	1					
ANR	9165044	ReturnStatement	return 0 ;	38:4:1005:1013	9165016	3	True				
ANR	9165045	PrimaryExpression	0		9165016	0					
ANR	9165046	ReturnType	static int		9165016	1					
ANR	9165047	Identifier	zcurrentpacking		9165016	2					
ANR	9165048	ParameterList	i_ctx_t * i_ctx_p		9165016	3					
ANR	9165049	Parameter	i_ctx_t * i_ctx_p	32:16:906:921	9165016	0	True				
ANR	9165050	ParameterType	i_ctx_t *		9165016	0					
ANR	9165051	Identifier	i_ctx_p		9165016	1					
ANR	9165052	CFGEntryNode	ENTRY		9165016		True				
ANR	9165053	CFGExitNode	EXIT		9165016		True				
ANR	9165054	Symbol	op		9165016						
ANR	9165055	Symbol	& ref_array_packing		9165016						
ANR	9165056	Symbol	i_ctx_p		9165016						
ANR	9165057	Symbol	osp		9165016						
ANR	9165058	Function	zpackedarray	42:0:1076:1625							
ANR	9165059	FunctionDef	zpackedarray (i_ctx_t * i_ctx_p)		9165058	0					
ANR	9165060	CompoundStatement		44:0:1111:1625	9165058	0					
ANR	9165061	IdentifierDeclStatement	os_ptr op = osp ;	45:4:1117:1132	9165058	0	True				
ANR	9165062	IdentifierDecl	op = osp		9165058	0					
ANR	9165063	IdentifierDeclType	os_ptr		9165058	0					
ANR	9165064	Identifier	op		9165058	1					
ANR	9165065	AssignmentExpression	op = osp		9165058	2		=			
ANR	9165066	Identifier	osp		9165058	0					
ANR	9165067	Identifier	osp		9165058	1					
ANR	9165068	IdentifierDeclStatement	int code ;	46:4:1138:1146	9165058	1	True				
ANR	9165069	IdentifierDecl	code		9165058	0					
ANR	9165070	IdentifierDeclType	int		9165058	0					
ANR	9165071	Identifier	code		9165058	1					
ANR	9165072	IdentifierDeclStatement	ref parr ;	47:4:1152:1160	9165058	2	True				
ANR	9165073	IdentifierDecl	parr		9165058	0					
ANR	9165074	IdentifierDeclType	ref		9165058	0					
ANR	9165075	Identifier	parr		9165058	1					
ANR	9165076	ExpressionStatement	"check_type ( * op , t_integer )"	49:4:1167:1193	9165058	3	True				
ANR	9165077	CallExpression	"check_type ( * op , t_integer )"		9165058	0					
ANR	9165078	Callee	check_type		9165058	0					
ANR	9165079	Identifier	check_type		9165058	0					
ANR	9165080	ArgumentList	* op		9165058	1					
ANR	9165081	Argument	* op		9165058	0					
ANR	9165082	UnaryOperationExpression	* op		9165058	0					
ANR	9165083	UnaryOperator	*		9165058	0					
ANR	9165084	Identifier	op		9165058	1					
ANR	9165085	Argument	t_integer		9165058	1					
ANR	9165086	Identifier	t_integer		9165058	0					
ANR	9165087	IfStatement	if ( op -> value . intval < 0 )		9165058	4					
ANR	9165088	Condition	op -> value . intval < 0	50:8:1203:1222	9165058	0	True				
ANR	9165089	RelationalExpression	op -> value . intval < 0		9165058	0		<			
ANR	9165090	MemberAccess	op -> value . intval		9165058	0					
ANR	9165091	PtrMemberAccess	op -> value		9165058	0					
ANR	9165092	Identifier	op		9165058	0					
ANR	9165093	Identifier	value		9165058	1					
ANR	9165094	Identifier	intval		9165058	1					
ANR	9165095	PrimaryExpression	0		9165058	1					
ANR	9165096	ExpressionStatement	return_error ( gs_error_rangecheck )	51:8:1233:1266	9165058	1	True				
ANR	9165097	CallExpression	return_error ( gs_error_rangecheck )		9165058	0					
ANR	9165098	Callee	return_error		9165058	0					
ANR	9165099	Identifier	return_error		9165058	0					
ANR	9165100	ArgumentList	gs_error_rangecheck		9165058	1					
ANR	9165101	Argument	gs_error_rangecheck		9165058	0					
ANR	9165102	Identifier	gs_error_rangecheck		9165058	0					
ANR	9165103	IfStatement	if ( op -> value . intval > op - osbot && op -> value . intval >= ref_stack_count ( & o_stack ) )		9165058	5					
ANR	9165104	Condition	op -> value . intval > op - osbot && op -> value . intval >= ref_stack_count ( & o_stack )	52:8:1276:1361	9165058	0	True				
ANR	9165105	AndExpression	op -> value . intval > op - osbot && op -> value . intval >= ref_stack_count ( & o_stack )		9165058	0		&&			
ANR	9165106	RelationalExpression	op -> value . intval > op - osbot		9165058	0		>			
ANR	9165107	MemberAccess	op -> value . intval		9165058	0					
ANR	9165108	PtrMemberAccess	op -> value		9165058	0					
ANR	9165109	Identifier	op		9165058	0					
ANR	9165110	Identifier	value		9165058	1					
ANR	9165111	Identifier	intval		9165058	1					
ANR	9165112	AdditiveExpression	op - osbot		9165058	1		-			
ANR	9165113	Identifier	op		9165058	0					
ANR	9165114	Identifier	osbot		9165058	1					
ANR	9165115	RelationalExpression	op -> value . intval >= ref_stack_count ( & o_stack )		9165058	1		>=			
ANR	9165116	MemberAccess	op -> value . intval		9165058	0					
ANR	9165117	PtrMemberAccess	op -> value		9165058	0					
ANR	9165118	Identifier	op		9165058	0					
ANR	9165119	Identifier	value		9165058	1					
ANR	9165120	Identifier	intval		9165058	1					
ANR	9165121	CallExpression	ref_stack_count ( & o_stack )		9165058	1					
ANR	9165122	Callee	ref_stack_count		9165058	0					
ANR	9165123	Identifier	ref_stack_count		9165058	0					
ANR	9165124	ArgumentList	& o_stack		9165058	1					
ANR	9165125	Argument	& o_stack		9165058	0					
ANR	9165126	UnaryOperationExpression	& o_stack		9165058	0					
ANR	9165127	UnaryOperator	&		9165058	0					
ANR	9165128	Identifier	o_stack		9165058	1					
ANR	9165129	ExpressionStatement	return_error ( gs_error_stackunderflow )	55:8:1381:1418	9165058	1	True				
ANR	9165130	CallExpression	return_error ( gs_error_stackunderflow )		9165058	0					
ANR	9165131	Callee	return_error		9165058	0					
ANR	9165132	Identifier	return_error		9165058	0					
ANR	9165133	ArgumentList	gs_error_stackunderflow		9165058	1					
ANR	9165134	Argument	gs_error_stackunderflow		9165058	0					
ANR	9165135	Identifier	gs_error_stackunderflow		9165058	0					
ANR	9165136	ExpressionStatement	osp --	56:4:1424:1429	9165058	6	True				
ANR	9165137	PostIncDecOperationExpression	osp --		9165058	0					
ANR	9165138	Identifier	osp		9165058	0					
ANR	9165139	IncDec	--		9165058	1					
ANR	9165140	ExpressionStatement	"code = make_packed_array ( & parr , & o_stack , ( uint ) op -> value . intval , idmemory , ""packedarray"" )"	57:4:1435:1555	9165058	7	True				
ANR	9165141	AssignmentExpression	"code = make_packed_array ( & parr , & o_stack , ( uint ) op -> value . intval , idmemory , ""packedarray"" )"		9165058	0		=			
ANR	9165142	Identifier	code		9165058	0					
ANR	9165143	CallExpression	"make_packed_array ( & parr , & o_stack , ( uint ) op -> value . intval , idmemory , ""packedarray"" )"		9165058	1					
ANR	9165144	Callee	make_packed_array		9165058	0					
ANR	9165145	Identifier	make_packed_array		9165058	0					
ANR	9165146	ArgumentList	& parr		9165058	1					
ANR	9165147	Argument	& parr		9165058	0					
ANR	9165148	UnaryOperationExpression	& parr		9165058	0					
ANR	9165149	UnaryOperator	&		9165058	0					
ANR	9165150	Identifier	parr		9165058	1					
ANR	9165151	Argument	& o_stack		9165058	1					
ANR	9165152	UnaryOperationExpression	& o_stack		9165058	0					
ANR	9165153	UnaryOperator	&		9165058	0					
ANR	9165154	Identifier	o_stack		9165058	1					
ANR	9165155	Argument	( uint ) op -> value . intval		9165058	2					
ANR	9165156	CastExpression	( uint ) op -> value . intval		9165058	0					
ANR	9165157	CastTarget	uint		9165058	0					
ANR	9165158	MemberAccess	op -> value . intval		9165058	1					
ANR	9165159	PtrMemberAccess	op -> value		9165058	0					
ANR	9165160	Identifier	op		9165058	0					
ANR	9165161	Identifier	value		9165058	1					
ANR	9165162	Identifier	intval		9165058	1					
ANR	9165163	Argument	idmemory		9165058	3					
ANR	9165164	Identifier	idmemory		9165058	0					
ANR	9165165	Argument	"""packedarray"""		9165058	4					
ANR	9165166	PrimaryExpression	"""packedarray"""		9165058	0					
ANR	9165167	ExpressionStatement	osp ++	59:4:1561:1566	9165058	8	True				
ANR	9165168	PostIncDecOperationExpression	osp ++		9165058	0					
ANR	9165169	Identifier	osp		9165058	0					
ANR	9165170	IncDec	++		9165058	1					
ANR	9165171	IfStatement	if ( code >= 0 )		9165058	9					
ANR	9165172	Condition	code >= 0	60:8:1576:1584	9165058	0	True				
ANR	9165173	RelationalExpression	code >= 0		9165058	0		>=			
ANR	9165174	Identifier	code		9165058	0					
ANR	9165175	PrimaryExpression	0		9165058	1					
ANR	9165176	ExpressionStatement	* osp = parr	61:8:1595:1606	9165058	1	True				
ANR	9165177	AssignmentExpression	* osp = parr		9165058	0		=			
ANR	9165178	UnaryOperationExpression	* osp		9165058	0					
ANR	9165179	UnaryOperator	*		9165058	0					
ANR	9165180	Identifier	osp		9165058	1					
ANR	9165181	Identifier	parr		9165058	1					
ANR	9165182	ReturnStatement	return code ;	62:4:1612:1623	9165058	10	True				
ANR	9165183	Identifier	code		9165058	0					
ANR	9165184	ReturnType	int		9165058	1					
ANR	9165185	Identifier	zpackedarray		9165058	2					
ANR	9165186	ParameterList	i_ctx_t * i_ctx_p		9165058	3					
ANR	9165187	Parameter	i_ctx_t * i_ctx_p	43:13:1093:1108	9165058	0	True				
ANR	9165188	ParameterType	i_ctx_t *		9165058	0					
ANR	9165189	Identifier	i_ctx_p		9165058	1					
ANR	9165190	CFGEntryNode	ENTRY		9165058		True				
ANR	9165191	CFGExitNode	EXIT		9165058		True				
ANR	9165192	Symbol	op		9165058						
ANR	9165193	Symbol	code		9165058						
ANR	9165194	Symbol	* op		9165058						
ANR	9165195	Symbol	gs_error_rangecheck		9165058						
ANR	9165196	Symbol	& parr		9165058						
ANR	9165197	Symbol	parr		9165058						
ANR	9165198	Symbol	osp		9165058						
ANR	9165199	Symbol	idmemory		9165058						
ANR	9165200	Symbol	osbot		9165058						
ANR	9165201	Symbol	t_integer		9165058						
ANR	9165202	Symbol	gs_error_stackunderflow		9165058						
ANR	9165203	Symbol	i_ctx_p		9165058						
ANR	9165204	Symbol	op -> value		9165058						
ANR	9165205	Symbol	& o_stack		9165058						
ANR	9165206	Symbol	* osp		9165058						
ANR	9165207	Symbol	ref_stack_count		9165058						
ANR	9165208	Symbol	op -> value . intval		9165058						
ANR	9165209	Symbol	make_packed_array		9165058						
ANR	9165210	Function	zsetpacking	66:0:1654:1919							
ANR	9165211	FunctionDef	zsetpacking (i_ctx_t * i_ctx_p)		9165210	0					
ANR	9165212	CompoundStatement		68:0:1695:1919	9165210	0					
ANR	9165213	IdentifierDeclStatement	os_ptr op = osp ;	69:4:1701:1716	9165210	0	True				
ANR	9165214	IdentifierDecl	op = osp		9165210	0					
ANR	9165215	IdentifierDeclType	os_ptr		9165210	0					
ANR	9165216	Identifier	op		9165210	1					
ANR	9165217	AssignmentExpression	op = osp		9165210	2		=			
ANR	9165218	Identifier	osp		9165210	0					
ANR	9165219	Identifier	osp		9165210	1					
ANR	9165220	IdentifierDeclStatement	ref cont ;	70:4:1722:1730	9165210	1	True				
ANR	9165221	IdentifierDecl	cont		9165210	0					
ANR	9165222	IdentifierDeclType	ref		9165210	0					
ANR	9165223	Identifier	cont		9165210	1					
ANR	9165224	ExpressionStatement	"check_type ( * op , t_boolean )"	71:4:1736:1762	9165210	2	True				
ANR	9165225	CallExpression	"check_type ( * op , t_boolean )"		9165210	0					
ANR	9165226	Callee	check_type		9165210	0					
ANR	9165227	Identifier	check_type		9165210	0					
ANR	9165228	ArgumentList	* op		9165210	1					
ANR	9165229	Argument	* op		9165210	0					
ANR	9165230	UnaryOperationExpression	* op		9165210	0					
ANR	9165231	UnaryOperator	*		9165210	0					
ANR	9165232	Identifier	op		9165210	1					
ANR	9165233	Argument	t_boolean		9165210	1					
ANR	9165234	Identifier	t_boolean		9165210	0					
ANR	9165235	ExpressionStatement	"make_struct ( & cont , avm_local , ref_array_packing_container )"	72:4:1768:1826	9165210	3	True				
ANR	9165236	CallExpression	"make_struct ( & cont , avm_local , ref_array_packing_container )"		9165210	0					
ANR	9165237	Callee	make_struct		9165210	0					
ANR	9165238	Identifier	make_struct		9165210	0					
ANR	9165239	ArgumentList	& cont		9165210	1					
ANR	9165240	Argument	& cont		9165210	0					
ANR	9165241	UnaryOperationExpression	& cont		9165210	0					
ANR	9165242	UnaryOperator	&		9165210	0					
ANR	9165243	Identifier	cont		9165210	1					
ANR	9165244	Argument	avm_local		9165210	1					
ANR	9165245	Identifier	avm_local		9165210	0					
ANR	9165246	Argument	ref_array_packing_container		9165210	2					
ANR	9165247	Identifier	ref_array_packing_container		9165210	0					
ANR	9165248	ExpressionStatement	"ref_assign_old ( & cont , & ref_array_packing , op , ""setpacking"" )"	73:4:1832:1891	9165210	4	True				
ANR	9165249	CallExpression	"ref_assign_old ( & cont , & ref_array_packing , op , ""setpacking"" )"		9165210	0					
ANR	9165250	Callee	ref_assign_old		9165210	0					
ANR	9165251	Identifier	ref_assign_old		9165210	0					
ANR	9165252	ArgumentList	& cont		9165210	1					
ANR	9165253	Argument	& cont		9165210	0					
ANR	9165254	UnaryOperationExpression	& cont		9165210	0					
ANR	9165255	UnaryOperator	&		9165210	0					
ANR	9165256	Identifier	cont		9165210	1					
ANR	9165257	Argument	& ref_array_packing		9165210	1					
ANR	9165258	UnaryOperationExpression	& ref_array_packing		9165210	0					
ANR	9165259	UnaryOperator	&		9165210	0					
ANR	9165260	Identifier	ref_array_packing		9165210	1					
ANR	9165261	Argument	op		9165210	2					
ANR	9165262	Identifier	op		9165210	0					
ANR	9165263	Argument	"""setpacking"""		9165210	3					
ANR	9165264	PrimaryExpression	"""setpacking"""		9165210	0					
ANR	9165265	ExpressionStatement	pop ( 1 )	74:4:1897:1903	9165210	5	True				
ANR	9165266	CallExpression	pop ( 1 )		9165210	0					
ANR	9165267	Callee	pop		9165210	0					
ANR	9165268	Identifier	pop		9165210	0					
ANR	9165269	ArgumentList	1		9165210	1					
ANR	9165270	Argument	1		9165210	0					
ANR	9165271	PrimaryExpression	1		9165210	0					
ANR	9165272	ReturnStatement	return 0 ;	75:4:1909:1917	9165210	6	True				
ANR	9165273	PrimaryExpression	0		9165210	0					
ANR	9165274	ReturnType	static int		9165210	1					
ANR	9165275	Identifier	zsetpacking		9165210	2					
ANR	9165276	ParameterList	i_ctx_t * i_ctx_p		9165210	3					
ANR	9165277	Parameter	i_ctx_t * i_ctx_p	67:12:1677:1692	9165210	0	True				
ANR	9165278	ParameterType	i_ctx_t *		9165210	0					
ANR	9165279	Identifier	i_ctx_p		9165210	1					
ANR	9165280	CFGEntryNode	ENTRY		9165210		True				
ANR	9165281	CFGExitNode	EXIT		9165210		True				
ANR	9165282	Symbol	t_boolean		9165210						
ANR	9165283	Symbol	ref_array_packing_container		9165210						
ANR	9165284	Symbol	op		9165210						
ANR	9165285	Symbol	& ref_array_packing		9165210						
ANR	9165286	Symbol	* op		9165210						
ANR	9165287	Symbol	& cont		9165210						
ANR	9165288	Symbol	i_ctx_p		9165210						
ANR	9165289	Symbol	avm_local		9165210						
ANR	9165290	Symbol	cont		9165210						
ANR	9165291	Symbol	osp		9165210						
ANR	9165292	Function	make_packed_array	82:1:2091:7789							
ANR	9165293	FunctionDef	"make_packed_array (ref * parr , ref_stack_t * pstack , uint size , gs_dual_memory_t * idmemory , client_name_t cname)"		9165292	0					
ANR	9165294	CompoundStatement		86:0:2268:7789	9165292	0					
ANR	9165295	IdentifierDeclStatement	uint i ;	87:4:2274:2280	9165292	0	True				
ANR	9165296	IdentifierDecl	i		9165292	0					
ANR	9165297	IdentifierDeclType	uint		9165292	0					
ANR	9165298	Identifier	i		9165292	1					
ANR	9165299	IdentifierDeclStatement	const ref * pref ;	88:4:2286:2301	9165292	1	True				
ANR	9165300	IdentifierDecl	* pref		9165292	0					
ANR	9165301	IdentifierDeclType	const ref *		9165292	0					
ANR	9165302	Identifier	pref		9165292	1					
ANR	9165303	IdentifierDeclStatement	"uint idest = 0 , ishort = 0 ;"	89:4:2307:2333	9165292	2	True				
ANR	9165304	IdentifierDecl	idest = 0		9165292	0					
ANR	9165305	IdentifierDeclType	uint		9165292	0					
ANR	9165306	Identifier	idest		9165292	1					
ANR	9165307	AssignmentExpression	idest = 0		9165292	2		=			
ANR	9165308	Identifier	idest		9165292	0					
ANR	9165309	PrimaryExpression	0		9165292	1					
ANR	9165310	IdentifierDecl	ishort = 0		9165292	1					
ANR	9165311	IdentifierDeclType	uint		9165292	0					
ANR	9165312	Identifier	ishort		9165292	1					
ANR	9165313	AssignmentExpression	ishort = 0		9165292	2		=			
ANR	9165314	Identifier	ishort		9165292	0					
ANR	9165315	PrimaryExpression	0		9165292	1					
ANR	9165316	IdentifierDeclStatement	ref_packed * pbody ;	90:4:2339:2356	9165292	3	True				
ANR	9165317	IdentifierDecl	* pbody		9165292	0					
ANR	9165318	IdentifierDeclType	ref_packed *		9165292	0					
ANR	9165319	Identifier	pbody		9165292	1					
ANR	9165320	IdentifierDeclStatement	ref_packed * pdest ;	91:4:2362:2379	9165292	4	True				
ANR	9165321	IdentifierDecl	* pdest		9165292	0					
ANR	9165322	IdentifierDeclType	ref_packed *		9165292	0					
ANR	9165323	Identifier	pdest		9165292	1					
ANR	9165324	IdentifierDeclStatement	ref_packed * pshort ;	92:4:2385:2403	9165292	5	True				
ANR	9165325	IdentifierDecl	* pshort		9165292	0					
ANR	9165326	IdentifierDeclType	ref_packed *		9165292	0					
ANR	9165327	Identifier	pshort		9165292	1					
ANR	9165328	IdentifierDeclStatement	gs_ref_memory_t * imem = idmemory -> current ;	94:4:2500:2541	9165292	6	True				
ANR	9165329	IdentifierDecl	* imem = idmemory -> current		9165292	0					
ANR	9165330	IdentifierDeclType	gs_ref_memory_t *		9165292	0					
ANR	9165331	Identifier	imem		9165292	1					
ANR	9165332	AssignmentExpression	* imem = idmemory -> current		9165292	2		=			
ANR	9165333	Identifier	imem		9165292	0					
ANR	9165334	PtrMemberAccess	idmemory -> current		9165292	1					
ANR	9165335	Identifier	idmemory		9165292	0					
ANR	9165336	Identifier	current		9165292	1					
ANR	9165337	IdentifierDeclStatement	uint space = imemory_space ( imem ) ;	95:4:2547:2579	9165292	7	True				
ANR	9165338	IdentifierDecl	space = imemory_space ( imem )		9165292	0					
ANR	9165339	IdentifierDeclType	uint		9165292	0					
ANR	9165340	Identifier	space		9165292	1					
ANR	9165341	AssignmentExpression	space = imemory_space ( imem )		9165292	2		=			
ANR	9165342	Identifier	space		9165292	0					
ANR	9165343	CallExpression	imemory_space ( imem )		9165292	1					
ANR	9165344	Callee	imemory_space		9165292	0					
ANR	9165345	Identifier	imemory_space		9165292	0					
ANR	9165346	ArgumentList	imem		9165292	1					
ANR	9165347	Argument	imem		9165292	0					
ANR	9165348	Identifier	imem		9165292	0					
ANR	9165349	IdentifierDeclStatement	"int skip = 0 , pad ;"	96:4:2585:2602	9165292	8	True				
ANR	9165350	IdentifierDecl	skip = 0		9165292	0					
ANR	9165351	IdentifierDeclType	int		9165292	0					
ANR	9165352	Identifier	skip		9165292	1					
ANR	9165353	AssignmentExpression	skip = 0		9165292	2		=			
ANR	9165354	Identifier	skip		9165292	0					
ANR	9165355	PrimaryExpression	0		9165292	1					
ANR	9165356	IdentifierDecl	pad		9165292	1					
ANR	9165357	IdentifierDeclType	int		9165292	0					
ANR	9165358	Identifier	pad		9165292	1					
ANR	9165359	IdentifierDeclStatement	ref rtemp ;	97:4:2608:2617	9165292	9	True				
ANR	9165360	IdentifierDecl	rtemp		9165292	0					
ANR	9165361	IdentifierDeclType	ref		9165292	0					
ANR	9165362	Identifier	rtemp		9165292	1					
ANR	9165363	IdentifierDeclStatement	int code ;	98:4:2623:2631	9165292	10	True				
ANR	9165364	IdentifierDecl	code		9165292	0					
ANR	9165365	IdentifierDeclType	int		9165292	0					
ANR	9165366	Identifier	code		9165292	1					
ANR	9165367	ForStatement	for ( i = size ; i != 0 ; i -- )		9165292	11					
ANR	9165368	ForInit	i = size ;	103:9:2756:2764	9165292	0	True				
ANR	9165369	AssignmentExpression	i = size		9165292	0		=			
ANR	9165370	Identifier	i		9165292	0					
ANR	9165371	Identifier	size		9165292	1					
ANR	9165372	Condition	i != 0	103:19:2766:2771	9165292	1	True				
ANR	9165373	EqualityExpression	i != 0		9165292	0		!=			
ANR	9165374	Identifier	i		9165292	0					
ANR	9165375	PrimaryExpression	0		9165292	1					
ANR	9165376	PostIncDecOperationExpression	i --	103:27:2774:2776	9165292	2	True				
ANR	9165377	Identifier	i		9165292	0					
ANR	9165378	IncDec	--		9165292	1					
ANR	9165379	CompoundStatement		18:32:510:510	9165292	3					
ANR	9165380	ExpressionStatement	"pref = ref_stack_index ( pstack , i - 1 )"	104:8:2789:2826	9165292	0	True				
ANR	9165381	AssignmentExpression	"pref = ref_stack_index ( pstack , i - 1 )"		9165292	0		=			
ANR	9165382	Identifier	pref		9165292	0					
ANR	9165383	CallExpression	"ref_stack_index ( pstack , i - 1 )"		9165292	1					
ANR	9165384	Callee	ref_stack_index		9165292	0					
ANR	9165385	Identifier	ref_stack_index		9165292	0					
ANR	9165386	ArgumentList	pstack		9165292	1					
ANR	9165387	Argument	pstack		9165292	0					
ANR	9165388	Identifier	pstack		9165292	0					
ANR	9165389	Argument	i - 1		9165292	1					
ANR	9165390	AdditiveExpression	i - 1		9165292	0		-			
ANR	9165391	Identifier	i		9165292	0					
ANR	9165392	PrimaryExpression	1		9165292	1					
ANR	9165393	SwitchStatement	switch ( r_btype ( pref ) )		9165292	1					
ANR	9165394	Condition	r_btype ( pref )	105:16:2844:2856	9165292	0	True				
ANR	9165395	CallExpression	r_btype ( pref )		9165292	0					
ANR	9165396	Callee	r_btype		9165292	0					
ANR	9165397	Identifier	r_btype		9165292	0					
ANR	9165398	ArgumentList	pref		9165292	1					
ANR	9165399	Argument	pref		9165292	0					
ANR	9165400	Identifier	pref		9165292	0					
ANR	9165401	CompoundStatement		20:31:590:590	9165292	1					
ANR	9165402	Label	case t_name :	106:12:2909:2920	9165292	0	True				
ANR	9165403	Identifier	t_name		9165292	0					
ANR	9165404	IfStatement	"if ( name_index ( imem , pref ) >= packed_name_max_index )"		9165292	1					
ANR	9165405	Condition	"name_index ( imem , pref ) >= packed_name_max_index"	107:18:2940:2986	9165292	0	True				
ANR	9165406	RelationalExpression	"name_index ( imem , pref ) >= packed_name_max_index"		9165292	0		>=			
ANR	9165407	CallExpression	"name_index ( imem , pref )"		9165292	0					
ANR	9165408	Callee	name_index		9165292	0					
ANR	9165409	Identifier	name_index		9165292	0					
ANR	9165410	ArgumentList	imem		9165292	1					
ANR	9165411	Argument	imem		9165292	0					
ANR	9165412	Identifier	imem		9165292	0					
ANR	9165413	Argument	pref		9165292	1					
ANR	9165414	Identifier	pref		9165292	0					
ANR	9165415	Identifier	packed_name_max_index		9165292	1					
ANR	9165416	BreakStatement	break ;	108:20:3009:3014	9165292	1	True				
ANR	9165417	ExpressionStatement	idest ++	109:16:3049:3056	9165292	2	True				
ANR	9165418	PostIncDecOperationExpression	idest ++		9165292	0					
ANR	9165419	Identifier	idest		9165292	0					
ANR	9165420	IncDec	++		9165292	1					
ANR	9165421	ContinueStatement	continue ;	110:16:3074:3082	9165292	3	True				
ANR	9165422	Label	case t_integer :	111:12:3096:3110	9165292	4	True				
ANR	9165423	Identifier	t_integer		9165292	0					
ANR	9165424	IfStatement	if ( pref -> value . intval < packed_min_intval || pref -> value . intval > packed_max_intval )		9165292	5					
ANR	9165425	Condition	pref -> value . intval < packed_min_intval || pref -> value . intval > packed_max_intval	112:20:3132:3231	9165292	0	True				
ANR	9165426	OrExpression	pref -> value . intval < packed_min_intval || pref -> value . intval > packed_max_intval		9165292	0		||			
ANR	9165427	RelationalExpression	pref -> value . intval < packed_min_intval		9165292	0		<			
ANR	9165428	MemberAccess	pref -> value . intval		9165292	0					
ANR	9165429	PtrMemberAccess	pref -> value		9165292	0					
ANR	9165430	Identifier	pref		9165292	0					
ANR	9165431	Identifier	value		9165292	1					
ANR	9165432	Identifier	intval		9165292	1					
ANR	9165433	Identifier	packed_min_intval		9165292	1					
ANR	9165434	RelationalExpression	pref -> value . intval > packed_max_intval		9165292	1		>			
ANR	9165435	MemberAccess	pref -> value . intval		9165292	0					
ANR	9165436	PtrMemberAccess	pref -> value		9165292	0					
ANR	9165437	Identifier	pref		9165292	0					
ANR	9165438	Identifier	value		9165292	1					
ANR	9165439	Identifier	intval		9165292	1					
ANR	9165440	Identifier	packed_max_intval		9165292	1					
ANR	9165441	BreakStatement	break ;	115:20:3275:3280	9165292	1	True				
ANR	9165442	ExpressionStatement	idest ++	116:16:3298:3305	9165292	6	True				
ANR	9165443	PostIncDecOperationExpression	idest ++		9165292	0					
ANR	9165444	Identifier	idest		9165292	0					
ANR	9165445	IncDec	++		9165292	1					
ANR	9165446	ContinueStatement	continue ;	117:16:3323:3331	9165292	7	True				
ANR	9165447	Label	case t_oparray :	118:12:3345:3359	9165292	8	True				
ANR	9165448	Identifier	t_oparray		9165292	0					
ANR	9165449	ExpressionStatement	"store_check_space ( space , pref )"	120:16:3434:3464	9165292	9	True				
ANR	9165450	CallExpression	"store_check_space ( space , pref )"		9165292	0					
ANR	9165451	Callee	store_check_space		9165292	0					
ANR	9165452	Identifier	store_check_space		9165292	0					
ANR	9165453	ArgumentList	space		9165292	1					
ANR	9165454	Argument	space		9165292	0					
ANR	9165455	Identifier	space		9165292	0					
ANR	9165456	Argument	pref		9165292	1					
ANR	9165457	Identifier	pref		9165292	0					
ANR	9165458	Label	case t_operator :	122:12:3514:3529	9165292	10	True				
ANR	9165459	Identifier	t_operator		9165292	0					
ANR	9165460	CompoundStatement		39:20:1300:1309	9165292	11					
ANR	9165461	IdentifierDeclStatement	uint oidx ;	124:20:3569:3578	9165292	0	True				
ANR	9165462	IdentifierDecl	oidx		9165292	0					
ANR	9165463	IdentifierDeclType	uint		9165292	0					
ANR	9165464	Identifier	oidx		9165292	1					
ANR	9165465	IfStatement	"if ( ! r_has_attr ( pref , a_executable ) )"		9165292	1					
ANR	9165466	Condition	"! r_has_attr ( pref , a_executable )"	126:24:3605:3635	9165292	0	True				
ANR	9165467	UnaryOperationExpression	"! r_has_attr ( pref , a_executable )"		9165292	0					
ANR	9165468	UnaryOperator	!		9165292	0					
ANR	9165469	CallExpression	"r_has_attr ( pref , a_executable )"		9165292	1					
ANR	9165470	Callee	r_has_attr		9165292	0					
ANR	9165471	Identifier	r_has_attr		9165292	0					
ANR	9165472	ArgumentList	pref		9165292	1					
ANR	9165473	Argument	pref		9165292	0					
ANR	9165474	Identifier	pref		9165292	0					
ANR	9165475	Argument	a_executable		9165292	1					
ANR	9165476	Identifier	a_executable		9165292	0					
ANR	9165477	BreakStatement	break ;	127:24:3662:3667	9165292	1	True				
ANR	9165478	ExpressionStatement	oidx = op_index ( pref )	128:20:3689:3710	9165292	2	True				
ANR	9165479	AssignmentExpression	oidx = op_index ( pref )		9165292	0		=			
ANR	9165480	Identifier	oidx		9165292	0					
ANR	9165481	CallExpression	op_index ( pref )		9165292	1					
ANR	9165482	Callee	op_index		9165292	0					
ANR	9165483	Identifier	op_index		9165292	0					
ANR	9165484	ArgumentList	pref		9165292	1					
ANR	9165485	Argument	pref		9165292	0					
ANR	9165486	Identifier	pref		9165292	0					
ANR	9165487	IfStatement	if ( oidx == 0 || oidx > packed_int_mask )		9165292	3					
ANR	9165488	Condition	oidx == 0 || oidx > packed_int_mask	129:24:3736:3770	9165292	0	True				
ANR	9165489	OrExpression	oidx == 0 || oidx > packed_int_mask		9165292	0		||			
ANR	9165490	EqualityExpression	oidx == 0		9165292	0		==			
ANR	9165491	Identifier	oidx		9165292	0					
ANR	9165492	PrimaryExpression	0		9165292	1					
ANR	9165493	RelationalExpression	oidx > packed_int_mask		9165292	1		>			
ANR	9165494	Identifier	oidx		9165292	0					
ANR	9165495	Identifier	packed_int_mask		9165292	1					
ANR	9165496	BreakStatement	break ;	130:24:3797:3802	9165292	1	True				
ANR	9165497	ExpressionStatement	idest ++	132:16:3838:3845	9165292	12	True				
ANR	9165498	PostIncDecOperationExpression	idest ++		9165292	0					
ANR	9165499	Identifier	idest		9165292	0					
ANR	9165500	IncDec	++		9165292	1					
ANR	9165501	ContinueStatement	continue ;	133:16:3863:3871	9165292	13	True				
ANR	9165502	Label	default :	134:12:3885:3892	9165292	14	True				
ANR	9165503	Identifier	default		9165292	0					
ANR	9165504	ExpressionStatement	"store_check_space ( space , pref )"	136:16:3967:3997	9165292	15	True				
ANR	9165505	CallExpression	"store_check_space ( space , pref )"		9165292	0					
ANR	9165506	Callee	store_check_space		9165292	0					
ANR	9165507	Identifier	store_check_space		9165292	0					
ANR	9165508	ArgumentList	space		9165292	1					
ANR	9165509	Argument	space		9165292	0					
ANR	9165510	Identifier	space		9165292	0					
ANR	9165511	Argument	pref		9165292	1					
ANR	9165512	Identifier	pref		9165292	0					
ANR	9165513	CompoundStatement		59:12:2036:2089	9165292	2					
ANR	9165514	IdentifierDeclStatement	int i = ( idest - ishort ) & ( align_packed_per_ref - 1 ) ;	144:12:4305:4358	9165292	0	True				
ANR	9165515	IdentifierDecl	i = ( idest - ishort ) & ( align_packed_per_ref - 1 )		9165292	0					
ANR	9165516	IdentifierDeclType	int		9165292	0					
ANR	9165517	Identifier	i		9165292	1					
ANR	9165518	AssignmentExpression	i = ( idest - ishort ) & ( align_packed_per_ref - 1 )		9165292	2		=			
ANR	9165519	Identifier	i		9165292	0					
ANR	9165520	BitAndExpression	( idest - ishort ) & ( align_packed_per_ref - 1 )		9165292	1		&			
ANR	9165521	AdditiveExpression	idest - ishort		9165292	0		-			
ANR	9165522	Identifier	idest		9165292	0					
ANR	9165523	Identifier	ishort		9165292	1					
ANR	9165524	AdditiveExpression	align_packed_per_ref - 1		9165292	1		-			
ANR	9165525	Identifier	align_packed_per_ref		9165292	0					
ANR	9165526	PrimaryExpression	1		9165292	1					
ANR	9165527	IfStatement	if ( ishort == 0 )		9165292	1					
ANR	9165528	Condition	ishort == 0	146:16:4377:4387	9165292	0	True				
ANR	9165529	EqualityExpression	ishort == 0		9165292	0		==			
ANR	9165530	Identifier	ishort		9165292	0					
ANR	9165531	PrimaryExpression	0		9165292	1					
ANR	9165532	ExpressionStatement	idest += skip = - i & ( align_packed_per_ref - 1 )	147:16:4423:4470	9165292	1	True				
ANR	9165533	AssignmentExpression	idest += skip = - i & ( align_packed_per_ref - 1 )		9165292	0		+=			
ANR	9165534	Identifier	idest		9165292	0					
ANR	9165535	AssignmentExpression	skip = - i & ( align_packed_per_ref - 1 )		9165292	1		=			
ANR	9165536	Identifier	skip		9165292	0					
ANR	9165537	BitAndExpression	- i & ( align_packed_per_ref - 1 )		9165292	1		&			
ANR	9165538	UnaryOperationExpression	- i		9165292	0					
ANR	9165539	UnaryOperator	-		9165292	0					
ANR	9165540	Identifier	i		9165292	1					
ANR	9165541	AdditiveExpression	align_packed_per_ref - 1		9165292	1		-			
ANR	9165542	Identifier	align_packed_per_ref		9165292	0					
ANR	9165543	PrimaryExpression	1		9165292	1					
ANR	9165544	ElseStatement	else		9165292	0					
ANR	9165545	ExpressionStatement	idest += ( packed_per_ref - 1 ) * i	149:16:4505:4538	9165292	0	True				
ANR	9165546	AssignmentExpression	idest += ( packed_per_ref - 1 ) * i		9165292	0		+=			
ANR	9165547	Identifier	idest		9165292	0					
ANR	9165548	MultiplicativeExpression	( packed_per_ref - 1 ) * i		9165292	1		*			
ANR	9165549	AdditiveExpression	packed_per_ref - 1		9165292	0		-			
ANR	9165550	Identifier	packed_per_ref		9165292	0					
ANR	9165551	PrimaryExpression	1		9165292	1					
ANR	9165552	Identifier	i		9165292	1					
ANR	9165553	ExpressionStatement	ishort = idest += packed_per_ref	151:8:4558:4590	9165292	3	True				
ANR	9165554	AssignmentExpression	ishort = idest += packed_per_ref		9165292	0		=			
ANR	9165555	Identifier	ishort		9165292	0					
ANR	9165556	AssignmentExpression	idest += packed_per_ref		9165292	1		+=			
ANR	9165557	Identifier	idest		9165292	0					
ANR	9165558	Identifier	packed_per_ref		9165292	1					
ANR	9165559	ExpressionStatement	pad = ( packed_per_ref - idest % packed_per_ref ) % packed_per_ref	153:4:4602:4666	9165292	12	True				
ANR	9165560	AssignmentExpression	pad = ( packed_per_ref - idest % packed_per_ref ) % packed_per_ref		9165292	0		=			
ANR	9165561	Identifier	pad		9165292	0					
ANR	9165562	MultiplicativeExpression	( packed_per_ref - idest % packed_per_ref ) % packed_per_ref		9165292	1		%			
ANR	9165563	AdditiveExpression	packed_per_ref - idest % packed_per_ref		9165292	0		-			
ANR	9165564	Identifier	packed_per_ref		9165292	0					
ANR	9165565	MultiplicativeExpression	idest % packed_per_ref		9165292	1		%			
ANR	9165566	Identifier	idest		9165292	0					
ANR	9165567	Identifier	packed_per_ref		9165292	1					
ANR	9165568	Identifier	packed_per_ref		9165292	1					
ANR	9165569	ExpressionStatement	"code = gs_alloc_ref_array ( imem , & rtemp , 0 , ( idest + pad ) / packed_per_ref , cname )"	157:4:4736:4847	9165292	13	True				
ANR	9165570	AssignmentExpression	"code = gs_alloc_ref_array ( imem , & rtemp , 0 , ( idest + pad ) / packed_per_ref , cname )"		9165292	0		=			
ANR	9165571	Identifier	code		9165292	0					
ANR	9165572	CallExpression	"gs_alloc_ref_array ( imem , & rtemp , 0 , ( idest + pad ) / packed_per_ref , cname )"		9165292	1					
ANR	9165573	Callee	gs_alloc_ref_array		9165292	0					
ANR	9165574	Identifier	gs_alloc_ref_array		9165292	0					
ANR	9165575	ArgumentList	imem		9165292	1					
ANR	9165576	Argument	imem		9165292	0					
ANR	9165577	Identifier	imem		9165292	0					
ANR	9165578	Argument	& rtemp		9165292	1					
ANR	9165579	UnaryOperationExpression	& rtemp		9165292	0					
ANR	9165580	UnaryOperator	&		9165292	0					
ANR	9165581	Identifier	rtemp		9165292	1					
ANR	9165582	Argument	0		9165292	2					
ANR	9165583	PrimaryExpression	0		9165292	0					
ANR	9165584	Argument	( idest + pad ) / packed_per_ref		9165292	3					
ANR	9165585	MultiplicativeExpression	( idest + pad ) / packed_per_ref		9165292	0		/			
ANR	9165586	AdditiveExpression	idest + pad		9165292	0		+			
ANR	9165587	Identifier	idest		9165292	0					
ANR	9165588	Identifier	pad		9165292	1					
ANR	9165589	Identifier	packed_per_ref		9165292	1					
ANR	9165590	Argument	cname		9165292	4					
ANR	9165591	Identifier	cname		9165292	0					
ANR	9165592	IfStatement	if ( code < 0 )		9165292	14					
ANR	9165593	Condition	code < 0	159:8:4857:4864	9165292	0	True				
ANR	9165594	RelationalExpression	code < 0		9165292	0		<			
ANR	9165595	Identifier	code		9165292	0					
ANR	9165596	PrimaryExpression	0		9165292	1					
ANR	9165597	ReturnStatement	return code ;	160:8:4875:4886	9165292	1	True				
ANR	9165598	Identifier	code		9165292	0					
ANR	9165599	ExpressionStatement	pbody = ( ref_packed * ) rtemp . value . refs	161:4:4892:4931	9165292	15	True				
ANR	9165600	AssignmentExpression	pbody = ( ref_packed * ) rtemp . value . refs		9165292	0		=			
ANR	9165601	Identifier	pbody		9165292	0					
ANR	9165602	CastExpression	( ref_packed * ) rtemp . value . refs		9165292	1					
ANR	9165603	CastTarget	ref_packed *		9165292	0					
ANR	9165604	MemberAccess	rtemp . value . refs		9165292	1					
ANR	9165605	MemberAccess	rtemp . value		9165292	0					
ANR	9165606	Identifier	rtemp		9165292	0					
ANR	9165607	Identifier	value		9165292	1					
ANR	9165608	Identifier	refs		9165292	1					
ANR	9165609	ExpressionStatement	pshort = pbody	166:4:5073:5087	9165292	16	True				
ANR	9165610	AssignmentExpression	pshort = pbody		9165292	0		=			
ANR	9165611	Identifier	pshort		9165292	0					
ANR	9165612	Identifier	pbody		9165292	1					
ANR	9165613	ForStatement	for ( ; skip ; skip -- )		9165292	17					
ANR	9165614	Condition	skip	167:11:5100:5103	9165292	0	True				
ANR	9165615	Identifier	skip		9165292	0					
ANR	9165616	PostIncDecOperationExpression	skip --	167:17:5106:5111	9165292	1	True				
ANR	9165617	Identifier	skip		9165292	0					
ANR	9165618	IncDec	--		9165292	1					
ANR	9165619	ExpressionStatement	* pbody ++ = pt_tag ( pt_integer )	168:8:5122:5151	9165292	2	True				
ANR	9165620	AssignmentExpression	* pbody ++ = pt_tag ( pt_integer )		9165292	0		=			
ANR	9165621	UnaryOperationExpression	* pbody ++		9165292	0					
ANR	9165622	UnaryOperator	*		9165292	0					
ANR	9165623	PostIncDecOperationExpression	pbody ++		9165292	1					
ANR	9165624	Identifier	pbody		9165292	0					
ANR	9165625	IncDec	++		9165292	1					
ANR	9165626	CallExpression	pt_tag ( pt_integer )		9165292	1					
ANR	9165627	Callee	pt_tag		9165292	0					
ANR	9165628	Identifier	pt_tag		9165292	0					
ANR	9165629	ArgumentList	pt_integer		9165292	1					
ANR	9165630	Argument	pt_integer		9165292	0					
ANR	9165631	Identifier	pt_integer		9165292	0					
ANR	9165632	ExpressionStatement	pdest = pbody	169:4:5157:5170	9165292	18	True				
ANR	9165633	AssignmentExpression	pdest = pbody		9165292	0		=			
ANR	9165634	Identifier	pdest		9165292	0					
ANR	9165635	Identifier	pbody		9165292	1					
ANR	9165636	ForStatement	for ( i = size ; i != 0 ; i -- )		9165292	19					
ANR	9165637	ForInit	i = size ;	171:9:5182:5190	9165292	0	True				
ANR	9165638	AssignmentExpression	i = size		9165292	0		=			
ANR	9165639	Identifier	i		9165292	0					
ANR	9165640	Identifier	size		9165292	1					
ANR	9165641	Condition	i != 0	171:19:5192:5197	9165292	1	True				
ANR	9165642	EqualityExpression	i != 0		9165292	0		!=			
ANR	9165643	Identifier	i		9165292	0					
ANR	9165644	PrimaryExpression	0		9165292	1					
ANR	9165645	PostIncDecOperationExpression	i --	171:27:5200:5202	9165292	2	True				
ANR	9165646	Identifier	i		9165292	0					
ANR	9165647	IncDec	--		9165292	1					
ANR	9165648	CompoundStatement		86:32:2936:2936	9165292	3					
ANR	9165649	ExpressionStatement	"pref = ref_stack_index ( pstack , i - 1 )"	172:8:5215:5252	9165292	0	True				
ANR	9165650	AssignmentExpression	"pref = ref_stack_index ( pstack , i - 1 )"		9165292	0		=			
ANR	9165651	Identifier	pref		9165292	0					
ANR	9165652	CallExpression	"ref_stack_index ( pstack , i - 1 )"		9165292	1					
ANR	9165653	Callee	ref_stack_index		9165292	0					
ANR	9165654	Identifier	ref_stack_index		9165292	0					
ANR	9165655	ArgumentList	pstack		9165292	1					
ANR	9165656	Argument	pstack		9165292	0					
ANR	9165657	Identifier	pstack		9165292	0					
ANR	9165658	Argument	i - 1		9165292	1					
ANR	9165659	AdditiveExpression	i - 1		9165292	0		-			
ANR	9165660	Identifier	i		9165292	0					
ANR	9165661	PrimaryExpression	1		9165292	1					
ANR	9165662	SwitchStatement	switch ( r_btype ( pref ) )		9165292	1					
ANR	9165663	Condition	r_btype ( pref )	173:16:5270:5282	9165292	0	True				
ANR	9165664	CallExpression	r_btype ( pref )		9165292	0					
ANR	9165665	Callee	r_btype		9165292	0					
ANR	9165666	Identifier	r_btype		9165292	0					
ANR	9165667	ArgumentList	pref		9165292	1					
ANR	9165668	Argument	pref		9165292	0					
ANR	9165669	Identifier	pref		9165292	0					
ANR	9165670	CompoundStatement		88:31:3016:3016	9165292	1					
ANR	9165671	Label	case t_name :	174:12:5335:5346	9165292	0	True				
ANR	9165672	Identifier	t_name		9165292	0					
ANR	9165673	CompoundStatement		91:20:3117:3151	9165292	1					
ANR	9165674	IdentifierDeclStatement	"uint nidx = name_index ( imem , pref ) ;"	176:20:5386:5420	9165292	0	True				
ANR	9165675	IdentifierDecl	"nidx = name_index ( imem , pref )"		9165292	0					
ANR	9165676	IdentifierDeclType	uint		9165292	0					
ANR	9165677	Identifier	nidx		9165292	1					
ANR	9165678	AssignmentExpression	"nidx = name_index ( imem , pref )"		9165292	2		=			
ANR	9165679	Identifier	nidx		9165292	0					
ANR	9165680	CallExpression	"name_index ( imem , pref )"		9165292	1					
ANR	9165681	Callee	name_index		9165292	0					
ANR	9165682	Identifier	name_index		9165292	0					
ANR	9165683	ArgumentList	imem		9165292	1					
ANR	9165684	Argument	imem		9165292	0					
ANR	9165685	Identifier	imem		9165292	0					
ANR	9165686	Argument	pref		9165292	1					
ANR	9165687	Identifier	pref		9165292	0					
ANR	9165688	IfStatement	if ( nidx >= packed_name_max_index )		9165292	1					
ANR	9165689	Condition	nidx >= packed_name_max_index	178:24:5447:5475	9165292	0	True				
ANR	9165690	RelationalExpression	nidx >= packed_name_max_index		9165292	0		>=			
ANR	9165691	Identifier	nidx		9165292	0					
ANR	9165692	Identifier	packed_name_max_index		9165292	1					
ANR	9165693	BreakStatement	break ;	179:24:5502:5507	9165292	1	True				
ANR	9165694	ExpressionStatement	"* pdest ++ = nidx + ( r_has_attr ( pref , a_executable ) ? pt_tag ( pt_executable_name ) : pt_tag ( pt_literal_name ) )"	180:20:5546:5725	9165292	2	True				
ANR	9165695	AssignmentExpression	"* pdest ++ = nidx + ( r_has_attr ( pref , a_executable ) ? pt_tag ( pt_executable_name ) : pt_tag ( pt_literal_name ) )"		9165292	0		=			
ANR	9165696	UnaryOperationExpression	* pdest ++		9165292	0					
ANR	9165697	UnaryOperator	*		9165292	0					
ANR	9165698	PostIncDecOperationExpression	pdest ++		9165292	1					
ANR	9165699	Identifier	pdest		9165292	0					
ANR	9165700	IncDec	++		9165292	1					
ANR	9165701	AdditiveExpression	"nidx + ( r_has_attr ( pref , a_executable ) ? pt_tag ( pt_executable_name ) : pt_tag ( pt_literal_name ) )"		9165292	1		+			
ANR	9165702	Identifier	nidx		9165292	0					
ANR	9165703	ConditionalExpression	"r_has_attr ( pref , a_executable ) ? pt_tag ( pt_executable_name ) : pt_tag ( pt_literal_name )"		9165292	1					
ANR	9165704	Condition	"r_has_attr ( pref , a_executable )"		9165292	0					
ANR	9165705	CallExpression	"r_has_attr ( pref , a_executable )"		9165292	0					
ANR	9165706	Callee	r_has_attr		9165292	0					
ANR	9165707	Identifier	r_has_attr		9165292	0					
ANR	9165708	ArgumentList	pref		9165292	1					
ANR	9165709	Argument	pref		9165292	0					
ANR	9165710	Identifier	pref		9165292	0					
ANR	9165711	Argument	a_executable		9165292	1					
ANR	9165712	Identifier	a_executable		9165292	0					
ANR	9165713	CallExpression	pt_tag ( pt_executable_name )		9165292	1					
ANR	9165714	Callee	pt_tag		9165292	0					
ANR	9165715	Identifier	pt_tag		9165292	0					
ANR	9165716	ArgumentList	pt_executable_name		9165292	1					
ANR	9165717	Argument	pt_executable_name		9165292	0					
ANR	9165718	Identifier	pt_executable_name		9165292	0					
ANR	9165719	CallExpression	pt_tag ( pt_literal_name )		9165292	2					
ANR	9165720	Callee	pt_tag		9165292	0					
ANR	9165721	Identifier	pt_tag		9165292	0					
ANR	9165722	ArgumentList	pt_literal_name		9165292	1					
ANR	9165723	Argument	pt_literal_name		9165292	0					
ANR	9165724	Identifier	pt_literal_name		9165292	0					
ANR	9165725	ContinueStatement	continue ;	185:16:5761:5769	9165292	2	True				
ANR	9165726	Label	case t_integer :	186:12:5783:5797	9165292	3	True				
ANR	9165727	Identifier	t_integer		9165292	0					
ANR	9165728	IfStatement	if ( pref -> value . intval < packed_min_intval || pref -> value . intval > packed_max_intval )		9165292	4					
ANR	9165729	Condition	pref -> value . intval < packed_min_intval || pref -> value . intval > packed_max_intval	187:20:5819:5918	9165292	0	True				
ANR	9165730	OrExpression	pref -> value . intval < packed_min_intval || pref -> value . intval > packed_max_intval		9165292	0		||			
ANR	9165731	RelationalExpression	pref -> value . intval < packed_min_intval		9165292	0		<			
ANR	9165732	MemberAccess	pref -> value . intval		9165292	0					
ANR	9165733	PtrMemberAccess	pref -> value		9165292	0					
ANR	9165734	Identifier	pref		9165292	0					
ANR	9165735	Identifier	value		9165292	1					
ANR	9165736	Identifier	intval		9165292	1					
ANR	9165737	Identifier	packed_min_intval		9165292	1					
ANR	9165738	RelationalExpression	pref -> value . intval > packed_max_intval		9165292	1		>			
ANR	9165739	MemberAccess	pref -> value . intval		9165292	0					
ANR	9165740	PtrMemberAccess	pref -> value		9165292	0					
ANR	9165741	Identifier	pref		9165292	0					
ANR	9165742	Identifier	value		9165292	1					
ANR	9165743	Identifier	intval		9165292	1					
ANR	9165744	Identifier	packed_max_intval		9165292	1					
ANR	9165745	BreakStatement	break ;	190:20:5962:5967	9165292	1	True				
ANR	9165746	ExpressionStatement	* pdest ++ = pt_tag ( pt_integer ) + ( ( short ) pref -> value . intval - packed_min_intval )	191:16:5985:6084	9165292	5	True				
ANR	9165747	AssignmentExpression	* pdest ++ = pt_tag ( pt_integer ) + ( ( short ) pref -> value . intval - packed_min_intval )		9165292	0		=			
ANR	9165748	UnaryOperationExpression	* pdest ++		9165292	0					
ANR	9165749	UnaryOperator	*		9165292	0					
ANR	9165750	PostIncDecOperationExpression	pdest ++		9165292	1					
ANR	9165751	Identifier	pdest		9165292	0					
ANR	9165752	IncDec	++		9165292	1					
ANR	9165753	AdditiveExpression	pt_tag ( pt_integer ) + ( ( short ) pref -> value . intval - packed_min_intval )		9165292	1		+			
ANR	9165754	CallExpression	pt_tag ( pt_integer )		9165292	0					
ANR	9165755	Callee	pt_tag		9165292	0					
ANR	9165756	Identifier	pt_tag		9165292	0					
ANR	9165757	ArgumentList	pt_integer		9165292	1					
ANR	9165758	Argument	pt_integer		9165292	0					
ANR	9165759	Identifier	pt_integer		9165292	0					
ANR	9165760	AdditiveExpression	( short ) pref -> value . intval - packed_min_intval		9165292	1		-			
ANR	9165761	CastExpression	( short ) pref -> value . intval		9165292	0					
ANR	9165762	CastTarget	short		9165292	0					
ANR	9165763	MemberAccess	pref -> value . intval		9165292	1					
ANR	9165764	PtrMemberAccess	pref -> value		9165292	0					
ANR	9165765	Identifier	pref		9165292	0					
ANR	9165766	Identifier	value		9165292	1					
ANR	9165767	Identifier	intval		9165292	1					
ANR	9165768	Identifier	packed_min_intval		9165292	1					
ANR	9165769	ContinueStatement	continue ;	193:16:6102:6110	9165292	6	True				
ANR	9165770	Label	case t_oparray :	194:12:6124:6138	9165292	7	True				
ANR	9165771	Identifier	t_oparray		9165292	0					
ANR	9165772	Label	case t_operator :	195:12:6152:6167	9165292	8	True				
ANR	9165773	Identifier	t_operator		9165292	0					
ANR	9165774	CompoundStatement		112:20:3938:3947	9165292	9					
ANR	9165775	IdentifierDeclStatement	uint oidx ;	197:20:6207:6216	9165292	0	True				
ANR	9165776	IdentifierDecl	oidx		9165292	0					
ANR	9165777	IdentifierDeclType	uint		9165292	0					
ANR	9165778	Identifier	oidx		9165292	1					
ANR	9165779	IfStatement	"if ( ! r_has_attr ( pref , a_executable ) )"		9165292	1					
ANR	9165780	Condition	"! r_has_attr ( pref , a_executable )"	199:24:6243:6273	9165292	0	True				
ANR	9165781	UnaryOperationExpression	"! r_has_attr ( pref , a_executable )"		9165292	0					
ANR	9165782	UnaryOperator	!		9165292	0					
ANR	9165783	CallExpression	"r_has_attr ( pref , a_executable )"		9165292	1					
ANR	9165784	Callee	r_has_attr		9165292	0					
ANR	9165785	Identifier	r_has_attr		9165292	0					
ANR	9165786	ArgumentList	pref		9165292	1					
ANR	9165787	Argument	pref		9165292	0					
ANR	9165788	Identifier	pref		9165292	0					
ANR	9165789	Argument	a_executable		9165292	1					
ANR	9165790	Identifier	a_executable		9165292	0					
ANR	9165791	BreakStatement	break ;	200:24:6300:6305	9165292	1	True				
ANR	9165792	ExpressionStatement	oidx = op_index ( pref )	201:20:6327:6348	9165292	2	True				
ANR	9165793	AssignmentExpression	oidx = op_index ( pref )		9165292	0		=			
ANR	9165794	Identifier	oidx		9165292	0					
ANR	9165795	CallExpression	op_index ( pref )		9165292	1					
ANR	9165796	Callee	op_index		9165292	0					
ANR	9165797	Identifier	op_index		9165292	0					
ANR	9165798	ArgumentList	pref		9165292	1					
ANR	9165799	Argument	pref		9165292	0					
ANR	9165800	Identifier	pref		9165292	0					
ANR	9165801	IfStatement	if ( oidx == 0 || oidx > packed_int_mask )		9165292	3					
ANR	9165802	Condition	oidx == 0 || oidx > packed_int_mask	202:24:6374:6408	9165292	0	True				
ANR	9165803	OrExpression	oidx == 0 || oidx > packed_int_mask		9165292	0		||			
ANR	9165804	EqualityExpression	oidx == 0		9165292	0		==			
ANR	9165805	Identifier	oidx		9165292	0					
ANR	9165806	PrimaryExpression	0		9165292	1					
ANR	9165807	RelationalExpression	oidx > packed_int_mask		9165292	1		>			
ANR	9165808	Identifier	oidx		9165292	0					
ANR	9165809	Identifier	packed_int_mask		9165292	1					
ANR	9165810	BreakStatement	break ;	203:24:6435:6440	9165292	1	True				
ANR	9165811	ExpressionStatement	* pdest ++ = pt_tag ( pt_executable_operator ) + oidx	204:20:6462:6510	9165292	4	True				
ANR	9165812	AssignmentExpression	* pdest ++ = pt_tag ( pt_executable_operator ) + oidx		9165292	0		=			
ANR	9165813	UnaryOperationExpression	* pdest ++		9165292	0					
ANR	9165814	UnaryOperator	*		9165292	0					
ANR	9165815	PostIncDecOperationExpression	pdest ++		9165292	1					
ANR	9165816	Identifier	pdest		9165292	0					
ANR	9165817	IncDec	++		9165292	1					
ANR	9165818	AdditiveExpression	pt_tag ( pt_executable_operator ) + oidx		9165292	1		+			
ANR	9165819	CallExpression	pt_tag ( pt_executable_operator )		9165292	0					
ANR	9165820	Callee	pt_tag		9165292	0					
ANR	9165821	Identifier	pt_tag		9165292	0					
ANR	9165822	ArgumentList	pt_executable_operator		9165292	1					
ANR	9165823	Argument	pt_executable_operator		9165292	0					
ANR	9165824	Identifier	pt_executable_operator		9165292	0					
ANR	9165825	Identifier	oidx		9165292	1					
ANR	9165826	ContinueStatement	continue ;	206:16:6546:6554	9165292	10	True				
ANR	9165827	CompoundStatement		131:12:4725:4793	9165292	2					
ANR	9165828	IdentifierDeclStatement	int i = ( pdest - pshort ) & ( align_packed_per_ref - 1 ) ;	214:12:6883:6936	9165292	0	True				
ANR	9165829	IdentifierDecl	i = ( pdest - pshort ) & ( align_packed_per_ref - 1 )		9165292	0					
ANR	9165830	IdentifierDeclType	int		9165292	0					
ANR	9165831	Identifier	i		9165292	1					
ANR	9165832	AssignmentExpression	i = ( pdest - pshort ) & ( align_packed_per_ref - 1 )		9165292	2		=			
ANR	9165833	Identifier	i		9165292	0					
ANR	9165834	BitAndExpression	( pdest - pshort ) & ( align_packed_per_ref - 1 )		9165292	1		&			
ANR	9165835	AdditiveExpression	pdest - pshort		9165292	0		-			
ANR	9165836	Identifier	pdest		9165292	0					
ANR	9165837	Identifier	pshort		9165292	1					
ANR	9165838	AdditiveExpression	align_packed_per_ref - 1		9165292	1		-			
ANR	9165839	Identifier	align_packed_per_ref		9165292	0					
ANR	9165840	PrimaryExpression	1		9165292	1					
ANR	9165841	IdentifierDeclStatement	const ref_packed * psrc = pdest ;	215:12:6950:6980	9165292	1	True				
ANR	9165842	IdentifierDecl	* psrc = pdest		9165292	0					
ANR	9165843	IdentifierDeclType	const ref_packed *		9165292	0					
ANR	9165844	Identifier	psrc		9165292	1					
ANR	9165845	AssignmentExpression	* psrc = pdest		9165292	2		=			
ANR	9165846	Identifier	pdest		9165292	0					
ANR	9165847	Identifier	pdest		9165292	1					
ANR	9165848	IdentifierDeclStatement	ref * pmove = ( ref * ) ( pdest += ( packed_per_ref - 1 ) * i ) ;	216:12:6994:7062	9165292	2	True				
ANR	9165849	IdentifierDecl	* pmove = ( ref * ) ( pdest += ( packed_per_ref - 1 ) * i )		9165292	0					
ANR	9165850	IdentifierDeclType	ref *		9165292	0					
ANR	9165851	Identifier	pmove		9165292	1					
ANR	9165852	AssignmentExpression	* pmove = ( ref * ) ( pdest += ( packed_per_ref - 1 ) * i )		9165292	2		=			
ANR	9165853	Identifier	pmove		9165292	0					
ANR	9165854	CastExpression	( ref * ) ( pdest += ( packed_per_ref - 1 ) * i )		9165292	1					
ANR	9165855	CastTarget	ref *		9165292	0					
ANR	9165856	AssignmentExpression	pdest += ( packed_per_ref - 1 ) * i		9165292	1		+=			
ANR	9165857	Identifier	pdest		9165292	0					
ANR	9165858	MultiplicativeExpression	( packed_per_ref - 1 ) * i		9165292	1		*			
ANR	9165859	AdditiveExpression	packed_per_ref - 1		9165292	0		-			
ANR	9165860	Identifier	packed_per_ref		9165292	0					
ANR	9165861	PrimaryExpression	1		9165292	1					
ANR	9165862	Identifier	i		9165292	1					
ANR	9165863	ExpressionStatement	"ref_assign_new ( pmove , pref )"	219:12:7077:7104	9165292	3	True				
ANR	9165864	CallExpression	"ref_assign_new ( pmove , pref )"		9165292	0					
ANR	9165865	Callee	ref_assign_new		9165292	0					
ANR	9165866	Identifier	ref_assign_new		9165292	0					
ANR	9165867	ArgumentList	pmove		9165292	1					
ANR	9165868	Argument	pmove		9165292	0					
ANR	9165869	Identifier	pmove		9165292	0					
ANR	9165870	Argument	pref		9165292	1					
ANR	9165871	Identifier	pref		9165292	0					
ANR	9165872	WhileStatement	while ( -- i >= 0 )		9165292	4					
ANR	9165873	Condition	-- i >= 0	220:19:7125:7132	9165292	0	True				
ANR	9165874	RelationalExpression	-- i >= 0		9165292	0		>=			
ANR	9165875	UnaryExpression	-- i		9165292	0					
ANR	9165876	IncDec	--		9165292	0					
ANR	9165877	Identifier	i		9165292	1					
ANR	9165878	PrimaryExpression	0		9165292	1					
ANR	9165879	CompoundStatement		135:29:4866:4866	9165292	1					
ANR	9165880	ExpressionStatement	-- psrc	221:16:7153:7159	9165292	0	True				
ANR	9165881	UnaryExpression	-- psrc		9165292	0					
ANR	9165882	IncDec	--		9165292	0					
ANR	9165883	Identifier	psrc		9165292	1					
ANR	9165884	ExpressionStatement	-- pmove	222:16:7177:7184	9165292	1	True				
ANR	9165885	UnaryExpression	-- pmove		9165292	0					
ANR	9165886	IncDec	--		9165292	0					
ANR	9165887	Identifier	pmove		9165292	1					
ANR	9165888	ExpressionStatement	"packed_get ( imem -> non_gc_memory , psrc , pmove )"	223:16:7202:7246	9165292	2	True				
ANR	9165889	CallExpression	"packed_get ( imem -> non_gc_memory , psrc , pmove )"		9165292	0					
ANR	9165890	Callee	packed_get		9165292	0					
ANR	9165891	Identifier	packed_get		9165292	0					
ANR	9165892	ArgumentList	imem -> non_gc_memory		9165292	1					
ANR	9165893	Argument	imem -> non_gc_memory		9165292	0					
ANR	9165894	PtrMemberAccess	imem -> non_gc_memory		9165292	0					
ANR	9165895	Identifier	imem		9165292	0					
ANR	9165896	Identifier	non_gc_memory		9165292	1					
ANR	9165897	Argument	psrc		9165292	1					
ANR	9165898	Identifier	psrc		9165292	0					
ANR	9165899	Argument	pmove		9165292	2					
ANR	9165900	Identifier	pmove		9165292	0					
ANR	9165901	ExpressionStatement	pshort = pdest += packed_per_ref	226:8:7280:7312	9165292	3	True				
ANR	9165902	AssignmentExpression	pshort = pdest += packed_per_ref		9165292	0		=			
ANR	9165903	Identifier	pshort		9165292	0					
ANR	9165904	AssignmentExpression	pdest += packed_per_ref		9165292	1		+=			
ANR	9165905	Identifier	pdest		9165292	0					
ANR	9165906	Identifier	packed_per_ref		9165292	1					
ANR	9165907	CompoundStatement		145:8:5066:5139	9165292	20					
ANR	9165908	IdentifierDeclStatement	int atype = ( pdest == pbody + size ? t_shortarray : t_mixedarray ) ;	230:8:7335:7408	9165292	0	True				
ANR	9165909	IdentifierDecl	atype = ( pdest == pbody + size ? t_shortarray : t_mixedarray )		9165292	0					
ANR	9165910	IdentifierDeclType	int		9165292	0					
ANR	9165911	Identifier	atype		9165292	1					
ANR	9165912	AssignmentExpression	atype = ( pdest == pbody + size ? t_shortarray : t_mixedarray )		9165292	2		=			
ANR	9165913	Identifier	atype		9165292	0					
ANR	9165914	ConditionalExpression	pdest == pbody + size ? t_shortarray : t_mixedarray		9165292	1					
ANR	9165915	Condition	pdest == pbody + size		9165292	0					
ANR	9165916	EqualityExpression	pdest == pbody + size		9165292	0		==			
ANR	9165917	Identifier	pdest		9165292	0					
ANR	9165918	AdditiveExpression	pbody + size		9165292	1		+			
ANR	9165919	Identifier	pbody		9165292	0					
ANR	9165920	Identifier	size		9165292	1					
ANR	9165921	Identifier	t_shortarray		9165292	1					
ANR	9165922	Identifier	t_mixedarray		9165292	2					
ANR	9165923	ForStatement	for ( ; pad ; pad -- )		9165292	1					
ANR	9165924	Condition	pad	236:15:7530:7532	9165292	0	True				
ANR	9165925	Identifier	pad		9165292	0					
ANR	9165926	PostIncDecOperationExpression	pad --	236:20:7535:7539	9165292	1	True				
ANR	9165927	Identifier	pad		9165292	0					
ANR	9165928	IncDec	--		9165292	1					
ANR	9165929	ExpressionStatement	* pdest ++ = pt_tag ( pt_integer )	237:12:7554:7583	9165292	2	True				
ANR	9165930	AssignmentExpression	* pdest ++ = pt_tag ( pt_integer )		9165292	0		=			
ANR	9165931	UnaryOperationExpression	* pdest ++		9165292	0					
ANR	9165932	UnaryOperator	*		9165292	0					
ANR	9165933	PostIncDecOperationExpression	pdest ++		9165292	1					
ANR	9165934	Identifier	pdest		9165292	0					
ANR	9165935	IncDec	++		9165292	1					
ANR	9165936	CallExpression	pt_tag ( pt_integer )		9165292	1					
ANR	9165937	Callee	pt_tag		9165292	0					
ANR	9165938	Identifier	pt_tag		9165292	0					
ANR	9165939	ArgumentList	pt_integer		9165292	1					
ANR	9165940	Argument	pt_integer		9165292	0					
ANR	9165941	Identifier	pt_integer		9165292	0					
ANR	9165942	ExpressionStatement	"ref_stack_pop ( pstack , size )"	241:8:7634:7661	9165292	2	True				
ANR	9165943	CallExpression	"ref_stack_pop ( pstack , size )"		9165292	0					
ANR	9165944	Callee	ref_stack_pop		9165292	0					
ANR	9165945	Identifier	ref_stack_pop		9165292	0					
ANR	9165946	ArgumentList	pstack		9165292	1					
ANR	9165947	Argument	pstack		9165292	0					
ANR	9165948	Identifier	pstack		9165292	0					
ANR	9165949	Argument	size		9165292	1					
ANR	9165950	Identifier	size		9165292	0					
ANR	9165951	ExpressionStatement	"make_tasv_new ( parr , atype , a_readonly | space , size , packed , pbody + skip )"	242:8:7671:7767	9165292	3	True				
ANR	9165952	CallExpression	"make_tasv_new ( parr , atype , a_readonly | space , size , packed , pbody + skip )"		9165292	0					
ANR	9165953	Callee	make_tasv_new		9165292	0					
ANR	9165954	Identifier	make_tasv_new		9165292	0					
ANR	9165955	ArgumentList	parr		9165292	1					
ANR	9165956	Argument	parr		9165292	0					
ANR	9165957	Identifier	parr		9165292	0					
ANR	9165958	Argument	atype		9165292	1					
ANR	9165959	Identifier	atype		9165292	0					
ANR	9165960	Argument	a_readonly | space		9165292	2					
ANR	9165961	InclusiveOrExpression	a_readonly | space		9165292	0		|			
ANR	9165962	Identifier	a_readonly		9165292	0					
ANR	9165963	Identifier	space		9165292	1					
ANR	9165964	Argument	size		9165292	3					
ANR	9165965	Identifier	size		9165292	0					
ANR	9165966	Argument	packed		9165292	4					
ANR	9165967	Identifier	packed		9165292	0					
ANR	9165968	Argument	pbody + skip		9165292	5					
ANR	9165969	AdditiveExpression	pbody + skip		9165292	0		+			
ANR	9165970	Identifier	pbody		9165292	0					
ANR	9165971	Identifier	skip		9165292	1					
ANR	9165972	ReturnStatement	return 0 ;	245:4:7779:7787	9165292	21	True				
ANR	9165973	PrimaryExpression	0		9165292	0					
ANR	9165974	ReturnType	undef idmemory int		9165292	1					
ANR	9165975	Identifier	make_packed_array		9165292	2					
ANR	9165976	ParameterList	"ref * parr , ref_stack_t * pstack , uint size , gs_dual_memory_t * idmemory , client_name_t cname"		9165292	3					
ANR	9165977	Parameter	ref * parr	84:18:2156:2165	9165292	0	True				
ANR	9165978	ParameterType	ref *		9165292	0					
ANR	9165979	Identifier	parr		9165292	1					
ANR	9165980	Parameter	ref_stack_t * pstack	84:30:2168:2187	9165292	1	True				
ANR	9165981	ParameterType	ref_stack_t *		9165292	0					
ANR	9165982	Identifier	pstack		9165292	1					
ANR	9165983	Parameter	uint size	84:52:2190:2198	9165292	2	True				
ANR	9165984	ParameterType	uint		9165292	0					
ANR	9165985	Identifier	size		9165292	1					
ANR	9165986	Parameter	gs_dual_memory_t * idmemory	85:18:2219:2244	9165292	3	True				
ANR	9165987	ParameterType	gs_dual_memory_t *		9165292	0					
ANR	9165988	Identifier	idmemory		9165292	1					
ANR	9165989	Parameter	client_name_t cname	85:46:2247:2265	9165292	4	True				
ANR	9165990	ParameterType	client_name_t		9165292	0					
ANR	9165991	Identifier	cname		9165292	1					
ANR	9165992	CFGEntryNode	ENTRY		9165292		True				
ANR	9165993	CFGExitNode	EXIT		9165292		True				
ANR	9165994	Symbol	ref_stack_index		9165292						
ANR	9165995	Symbol	ishort		9165292						
ANR	9165996	Symbol	pref -> value		9165292						
ANR	9165997	Symbol	op_index		9165292						
ANR	9165998	Symbol	* pbody ++		9165292						
ANR	9165999	Symbol	& rtemp		9165292						
ANR	9166000	Symbol	pt_executable_name		9165292						
ANR	9166001	Symbol	packed_max_intval		9165292						
ANR	9166002	Symbol	space		9165292						
ANR	9166003	Symbol	pad		9165292						
ANR	9166004	Symbol	* pdest ++		9165292						
ANR	9166005	Symbol	atype		9165292						
ANR	9166006	Symbol	pref		9165292						
ANR	9166007	Symbol	packed_min_intval		9165292						
ANR	9166008	Symbol	imem -> non_gc_memory		9165292						
ANR	9166009	Symbol	align_packed_per_ref		9165292						
ANR	9166010	Symbol	pmove		9165292						
ANR	9166011	Symbol	* imem		9165292						
ANR	9166012	Symbol	pref -> value . intval		9165292						
ANR	9166013	Symbol	pshort		9165292						
ANR	9166014	Symbol	pt_literal_name		9165292						
ANR	9166015	Symbol	t_mixedarray		9165292						
ANR	9166016	Symbol	pstack		9165292						
ANR	9166017	Symbol	r_btype		9165292						
ANR	9166018	Symbol	size		9165292						
ANR	9166019	Symbol	* idmemory		9165292						
ANR	9166020	Symbol	rtemp . value		9165292						
ANR	9166021	Symbol	rtemp		9165292						
ANR	9166022	Symbol	packed_name_max_index		9165292						
ANR	9166023	Symbol	a_executable		9165292						
ANR	9166024	Symbol	nidx		9165292						
ANR	9166025	Symbol	psrc		9165292						
ANR	9166026	Symbol	code		9165292						
ANR	9166027	Symbol	parr		9165292						
ANR	9166028	Symbol	idmemory -> current		9165292						
ANR	9166029	Symbol	t_shortarray		9165292						
ANR	9166030	Symbol	cname		9165292						
ANR	9166031	Symbol	pbody		9165292						
ANR	9166032	Symbol	skip		9165292						
ANR	9166033	Symbol	pdest		9165292						
ANR	9166034	Symbol	packed_int_mask		9165292						
ANR	9166035	Symbol	rtemp . value . refs		9165292						
ANR	9166036	Symbol	idmemory		9165292						
ANR	9166037	Symbol	r_has_attr		9165292						
ANR	9166038	Symbol	name_index		9165292						
ANR	9166039	Symbol	oidx		9165292						
ANR	9166040	Symbol	gs_alloc_ref_array		9165292						
ANR	9166041	Symbol	packed		9165292						
ANR	9166042	Symbol	pt_executable_operator		9165292						
ANR	9166043	Symbol	packed_per_ref		9165292						
ANR	9166044	Symbol	i		9165292						
ANR	9166045	Symbol	pt_integer		9165292						
ANR	9166046	Symbol	a_readonly		9165292						
ANR	9166047	Symbol	pt_tag		9165292						
ANR	9166048	Symbol	* pref		9165292						
ANR	9166049	Symbol	imemory_space		9165292						
ANR	9166050	Symbol	idest		9165292						
ANR	9166051	Symbol	imem		9165292						
ANR	9166052	DeclStmt									
ANR	9166053	Decl							const op_def	const op_def [ ]	zpacked_op_defs
