command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	9160243	File	data/converged/CVE-2018-16863_ghostpdl/psi_zmisc.c								
ANR	9160244	Function	r_is_ex_oper	39:0:1097:1259							
ANR	9160245	FunctionDef	r_is_ex_oper (const ref * rp)		9160244	0					
ANR	9160246	CompoundStatement		41:0:1144:1259	9160244	0					
ANR	9160247	ReturnStatement	"return ( r_has_attr ( rp , a_executable ) && ( r_btype ( rp ) == t_operator || r_type ( rp ) == t_oparray ) ) ;"	42:4:1150:1257	9160244	0	True				
ANR	9160248	AndExpression	"r_has_attr ( rp , a_executable ) && ( r_btype ( rp ) == t_operator || r_type ( rp ) == t_oparray )"		9160244	0		&&			
ANR	9160249	CallExpression	"r_has_attr ( rp , a_executable )"		9160244	0					
ANR	9160250	Callee	r_has_attr		9160244	0					
ANR	9160251	Identifier	r_has_attr		9160244	0					
ANR	9160252	ArgumentList	rp		9160244	1					
ANR	9160253	Argument	rp		9160244	0					
ANR	9160254	Identifier	rp		9160244	0					
ANR	9160255	Argument	a_executable		9160244	1					
ANR	9160256	Identifier	a_executable		9160244	0					
ANR	9160257	OrExpression	r_btype ( rp ) == t_operator || r_type ( rp ) == t_oparray		9160244	1		||			
ANR	9160258	EqualityExpression	r_btype ( rp ) == t_operator		9160244	0		==			
ANR	9160259	CallExpression	r_btype ( rp )		9160244	0					
ANR	9160260	Callee	r_btype		9160244	0					
ANR	9160261	Identifier	r_btype		9160244	0					
ANR	9160262	ArgumentList	rp		9160244	1					
ANR	9160263	Argument	rp		9160244	0					
ANR	9160264	Identifier	rp		9160244	0					
ANR	9160265	Identifier	t_operator		9160244	1					
ANR	9160266	EqualityExpression	r_type ( rp ) == t_oparray		9160244	1		==			
ANR	9160267	CallExpression	r_type ( rp )		9160244	0					
ANR	9160268	Callee	r_type		9160244	0					
ANR	9160269	Identifier	r_type		9160244	0					
ANR	9160270	ArgumentList	rp		9160244	1					
ANR	9160271	Argument	rp		9160244	0					
ANR	9160272	Identifier	rp		9160244	0					
ANR	9160273	Identifier	t_oparray		9160244	1					
ANR	9160274	ReturnType	static inline bool		9160244	1					
ANR	9160275	Identifier	r_is_ex_oper		9160244	2					
ANR	9160276	ParameterList	const ref * rp		9160244	3					
ANR	9160277	Parameter	const ref * rp	40:13:1129:1141	9160244	0	True				
ANR	9160278	ParameterType	const ref *		9160244	0					
ANR	9160279	Identifier	rp		9160244	1					
ANR	9160280	CFGEntryNode	ENTRY		9160244		True				
ANR	9160281	CFGExitNode	EXIT		9160244		True				
ANR	9160282	Symbol	r_btype		9160244						
ANR	9160283	Symbol	r_has_attr		9160244						
ANR	9160284	Symbol	t_operator		9160244						
ANR	9160285	Symbol	a_executable		9160244						
ANR	9160286	Symbol	t_oparray		9160244						
ANR	9160287	Symbol	rp		9160244						
ANR	9160288	Symbol	r_type		9160244						
ANR	9160289	Function	zbind	45:0:1261:5456							
ANR	9160290	FunctionDef	zbind (i_ctx_t * i_ctx_p)		9160289	0					
ANR	9160291	CompoundStatement		47:0:1296:5456	9160289	0					
ANR	9160292	IdentifierDeclStatement	os_ptr op = osp ;	48:4:1302:1317	9160289	0	True				
ANR	9160293	IdentifierDecl	op = osp		9160289	0					
ANR	9160294	IdentifierDeclType	os_ptr		9160289	0					
ANR	9160295	Identifier	op		9160289	1					
ANR	9160296	AssignmentExpression	op = osp		9160289	2		=			
ANR	9160297	Identifier	osp		9160289	0					
ANR	9160298	Identifier	osp		9160289	1					
ANR	9160299	IdentifierDeclStatement	uint depth = 1 ;	49:4:1323:1337	9160289	1	True				
ANR	9160300	IdentifierDecl	depth = 1		9160289	0					
ANR	9160301	IdentifierDeclType	uint		9160289	0					
ANR	9160302	Identifier	depth		9160289	1					
ANR	9160303	AssignmentExpression	depth = 1		9160289	2		=			
ANR	9160304	Identifier	depth		9160289	0					
ANR	9160305	PrimaryExpression	1		9160289	1					
ANR	9160306	IdentifierDeclStatement	ref defn ;	50:4:1343:1351	9160289	2	True				
ANR	9160307	IdentifierDecl	defn		9160289	0					
ANR	9160308	IdentifierDeclType	ref		9160289	0					
ANR	9160309	Identifier	defn		9160289	1					
ANR	9160310	Statement	register	51:4:1357:1364	9160289	3	True				
ANR	9160311	IdentifierDeclStatement	os_ptr bsp ;	51:13:1366:1376	9160289	4	True				
ANR	9160312	IdentifierDecl	bsp		9160289	0					
ANR	9160313	IdentifierDeclType	os_ptr		9160289	0					
ANR	9160314	Identifier	bsp		9160289	1					
ANR	9160315	SwitchStatement	switch ( r_type ( op ) )		9160289	5					
ANR	9160316	Condition	r_type ( op )	53:12:1391:1400	9160289	0	True				
ANR	9160317	CallExpression	r_type ( op )		9160289	0					
ANR	9160318	Callee	r_type		9160289	0					
ANR	9160319	Identifier	r_type		9160289	0					
ANR	9160320	ArgumentList	op		9160289	1					
ANR	9160321	Argument	op		9160289	0					
ANR	9160322	Identifier	op		9160289	0					
ANR	9160323	CompoundStatement		7:24:106:106	9160289	1					
ANR	9160324	Label	case t_array :	54:8:1413:1425	9160289	0	True				
ANR	9160325	Identifier	t_array		9160289	0					
ANR	9160326	IfStatement	"if ( ! r_has_attr ( op , a_write ) )"		9160289	1					
ANR	9160327	Condition	"! r_has_attr ( op , a_write )"	55:16:1443:1466	9160289	0	True				
ANR	9160328	UnaryOperationExpression	"! r_has_attr ( op , a_write )"		9160289	0					
ANR	9160329	UnaryOperator	!		9160289	0					
ANR	9160330	CallExpression	"r_has_attr ( op , a_write )"		9160289	1					
ANR	9160331	Callee	r_has_attr		9160289	0					
ANR	9160332	Identifier	r_has_attr		9160289	0					
ANR	9160333	ArgumentList	op		9160289	1					
ANR	9160334	Argument	op		9160289	0					
ANR	9160335	Identifier	op		9160289	0					
ANR	9160336	Argument	a_write		9160289	1					
ANR	9160337	Identifier	a_write		9160289	0					
ANR	9160338	CompoundStatement		9:42:172:172	9160289	1					
ANR	9160339	ReturnStatement	return 0 ;	56:16:1487:1495	9160289	0	True				
ANR	9160340	PrimaryExpression	0		9160289	0					
ANR	9160341	Label	case t_mixedarray :	58:8:1535:1552	9160289	2	True				
ANR	9160342	Identifier	t_mixedarray		9160289	0					
ANR	9160343	Label	case t_shortarray :	59:8:1562:1579	9160289	3	True				
ANR	9160344	Identifier	t_shortarray		9160289	0					
ANR	9160345	ExpressionStatement	defn = * op	60:12:1593:1603	9160289	4	True				
ANR	9160346	AssignmentExpression	defn = * op		9160289	0		=			
ANR	9160347	Identifier	defn		9160289	0					
ANR	9160348	UnaryOperationExpression	* op		9160289	1					
ANR	9160349	UnaryOperator	*		9160289	0					
ANR	9160350	Identifier	op		9160289	1					
ANR	9160351	BreakStatement	break ;	61:12:1617:1622	9160289	5	True				
ANR	9160352	Label	case t_oparray :	62:8:1632:1646	9160289	6	True				
ANR	9160353	Identifier	t_oparray		9160289	0					
ANR	9160354	ExpressionStatement	defn = * op -> value . const_refs	63:12:1660:1688	9160289	7	True				
ANR	9160355	AssignmentExpression	defn = * op -> value . const_refs		9160289	0		=			
ANR	9160356	Identifier	defn		9160289	0					
ANR	9160357	UnaryOperationExpression	* op -> value . const_refs		9160289	1					
ANR	9160358	UnaryOperator	*		9160289	0					
ANR	9160359	MemberAccess	op -> value . const_refs		9160289	1					
ANR	9160360	PtrMemberAccess	op -> value		9160289	0					
ANR	9160361	Identifier	op		9160289	0					
ANR	9160362	Identifier	value		9160289	1					
ANR	9160363	Identifier	const_refs		9160289	1					
ANR	9160364	BreakStatement	break ;	64:12:1702:1707	9160289	8	True				
ANR	9160365	Label	default :	65:8:1717:1724	9160289	9	True				
ANR	9160366	Identifier	default		9160289	0					
ANR	9160367	ExpressionStatement	return_op_typecheck ( op )	66:12:1738:1761	9160289	10	True				
ANR	9160368	CallExpression	return_op_typecheck ( op )		9160289	0					
ANR	9160369	Callee	return_op_typecheck		9160289	0					
ANR	9160370	Identifier	return_op_typecheck		9160289	0					
ANR	9160371	ArgumentList	op		9160289	1					
ANR	9160372	Argument	op		9160289	0					
ANR	9160373	Identifier	op		9160289	0					
ANR	9160374	ExpressionStatement	push ( 1 )	68:4:1773:1780	9160289	6	True				
ANR	9160375	CallExpression	push ( 1 )		9160289	0					
ANR	9160376	Callee	push		9160289	0					
ANR	9160377	Identifier	push		9160289	0					
ANR	9160378	ArgumentList	1		9160289	1					
ANR	9160379	Argument	1		9160289	0					
ANR	9160380	PrimaryExpression	1		9160289	0					
ANR	9160381	ExpressionStatement	* op = defn	69:4:1786:1796	9160289	7	True				
ANR	9160382	AssignmentExpression	* op = defn		9160289	0		=			
ANR	9160383	UnaryOperationExpression	* op		9160289	0					
ANR	9160384	UnaryOperator	*		9160289	0					
ANR	9160385	Identifier	op		9160289	1					
ANR	9160386	Identifier	defn		9160289	1					
ANR	9160387	ExpressionStatement	bsp = op	70:4:1802:1810	9160289	8	True				
ANR	9160388	AssignmentExpression	bsp = op		9160289	0		=			
ANR	9160389	Identifier	bsp		9160289	0					
ANR	9160390	Identifier	op		9160289	1					
ANR	9160391	WhileStatement	while ( depth )		9160289	9					
ANR	9160392	Condition	depth	80:11:2192:2196	9160289	0	True				
ANR	9160393	Identifier	depth		9160289	0					
ANR	9160394	CompoundStatement		34:18:902:902	9160289	1					
ANR	9160395	WhileStatement	while ( r_size ( bsp ) )		9160289	0					
ANR	9160396	Condition	r_size ( bsp )	81:15:2216:2226	9160289	0	True				
ANR	9160397	CallExpression	r_size ( bsp )		9160289	0					
ANR	9160398	Callee	r_size		9160289	0					
ANR	9160399	Identifier	r_size		9160289	0					
ANR	9160400	ArgumentList	bsp		9160289	1					
ANR	9160401	Argument	bsp		9160289	0					
ANR	9160402	Identifier	bsp		9160289	0					
ANR	9160403	CompoundStatement		35:28:932:932	9160289	1					
ANR	9160404	Statement	ref_packed	82:12:2243:2252	9160289	0	True				
ANR	9160405	Statement	*	82:23:2254:2254	9160289	1	True				
ANR	9160406	Statement	const	82:24:2255:2259	9160289	2	True				
ANR	9160407	ExpressionStatement	tpp = ( ref_packed * ) bsp -> value . packed	82:30:2261:2298	9160289	3	True				
ANR	9160408	AssignmentExpression	tpp = ( ref_packed * ) bsp -> value . packed		9160289	0		=			
ANR	9160409	Identifier	tpp		9160289	0					
ANR	9160410	CastExpression	( ref_packed * ) bsp -> value . packed		9160289	1					
ANR	9160411	CastTarget	ref_packed *		9160289	0					
ANR	9160412	MemberAccess	bsp -> value . packed		9160289	1					
ANR	9160413	PtrMemberAccess	bsp -> value		9160289	0					
ANR	9160414	Identifier	bsp		9160289	0					
ANR	9160415	Identifier	value		9160289	1					
ANR	9160416	Identifier	packed		9160289	1					
ANR	9160417	ExpressionStatement	"r_dec_size ( bsp , 1 )"	84:12:2331:2349	9160289	4	True				
ANR	9160418	CallExpression	"r_dec_size ( bsp , 1 )"		9160289	0					
ANR	9160419	Callee	r_dec_size		9160289	0					
ANR	9160420	Identifier	r_dec_size		9160289	0					
ANR	9160421	ArgumentList	bsp		9160289	1					
ANR	9160422	Argument	bsp		9160289	0					
ANR	9160423	Identifier	bsp		9160289	0					
ANR	9160424	Argument	1		9160289	1					
ANR	9160425	PrimaryExpression	1		9160289	0					
ANR	9160426	IfStatement	if ( r_is_packed ( tpp ) )		9160289	5					
ANR	9160427	Condition	r_is_packed ( tpp )	85:16:2367:2382	9160289	0	True				
ANR	9160428	CallExpression	r_is_packed ( tpp )		9160289	0					
ANR	9160429	Callee	r_is_packed		9160289	0					
ANR	9160430	Identifier	r_is_packed		9160289	0					
ANR	9160431	ArgumentList	tpp		9160289	1					
ANR	9160432	Argument	tpp		9160289	0					
ANR	9160433	Identifier	tpp		9160289	0					
ANR	9160434	CompoundStatement		41:16:1163:1180	9160289	1					
ANR	9160435	IdentifierDeclStatement	ushort elt = * tpp ;	87:16:2460:2477	9160289	0	True				
ANR	9160436	IdentifierDecl	elt = * tpp		9160289	0					
ANR	9160437	IdentifierDeclType	ushort		9160289	0					
ANR	9160438	Identifier	elt		9160289	1					
ANR	9160439	AssignmentExpression	elt = * tpp		9160289	2		=			
ANR	9160440	Identifier	elt		9160289	0					
ANR	9160441	UnaryOperationExpression	* tpp		9160289	1					
ANR	9160442	UnaryOperator	*		9160289	0					
ANR	9160443	Identifier	tpp		9160289	1					
ANR	9160444	IfStatement	if ( r_packed_is_exec_name ( & elt ) )		9160289	1					
ANR	9160445	Condition	r_packed_is_exec_name ( & elt )	89:20:2500:2526	9160289	0	True				
ANR	9160446	CallExpression	r_packed_is_exec_name ( & elt )		9160289	0					
ANR	9160447	Callee	r_packed_is_exec_name		9160289	0					
ANR	9160448	Identifier	r_packed_is_exec_name		9160289	0					
ANR	9160449	ArgumentList	& elt		9160289	1					
ANR	9160450	Argument	& elt		9160289	0					
ANR	9160451	UnaryOperationExpression	& elt		9160289	0					
ANR	9160452	UnaryOperator	&		9160289	0					
ANR	9160453	Identifier	elt		9160289	1					
ANR	9160454	CompoundStatement		45:20:1284:1295	9160289	1					
ANR	9160455	IdentifierDeclStatement	ref nref ;	90:20:2551:2559	9160289	0	True				
ANR	9160456	IdentifierDecl	nref		9160289	0					
ANR	9160457	IdentifierDeclType	ref		9160289	0					
ANR	9160458	Identifier	nref		9160289	1					
ANR	9160459	IdentifierDeclStatement	ref * pvalue ;	91:20:2581:2592	9160289	1	True				
ANR	9160460	IdentifierDecl	* pvalue		9160289	0					
ANR	9160461	IdentifierDeclType	ref *		9160289	0					
ANR	9160462	Identifier	pvalue		9160289	1					
ANR	9160463	ExpressionStatement	"name_index_ref ( imemory , packed_name_index ( & elt ) , & nref )"	93:20:2615:2705	9160289	2	True				
ANR	9160464	CallExpression	"name_index_ref ( imemory , packed_name_index ( & elt ) , & nref )"		9160289	0					
ANR	9160465	Callee	name_index_ref		9160289	0					
ANR	9160466	Identifier	name_index_ref		9160289	0					
ANR	9160467	ArgumentList	imemory		9160289	1					
ANR	9160468	Argument	imemory		9160289	0					
ANR	9160469	Identifier	imemory		9160289	0					
ANR	9160470	Argument	packed_name_index ( & elt )		9160289	1					
ANR	9160471	CallExpression	packed_name_index ( & elt )		9160289	0					
ANR	9160472	Callee	packed_name_index		9160289	0					
ANR	9160473	Identifier	packed_name_index		9160289	0					
ANR	9160474	ArgumentList	& elt		9160289	1					
ANR	9160475	Argument	& elt		9160289	0					
ANR	9160476	UnaryOperationExpression	& elt		9160289	0					
ANR	9160477	UnaryOperator	&		9160289	0					
ANR	9160478	Identifier	elt		9160289	1					
ANR	9160479	Argument	& nref		9160289	2					
ANR	9160480	UnaryOperationExpression	& nref		9160289	0					
ANR	9160481	UnaryOperator	&		9160289	0					
ANR	9160482	Identifier	nref		9160289	1					
ANR	9160483	IfStatement	if ( ( pvalue = dict_find_name ( & nref ) ) != 0 && r_is_ex_oper ( pvalue ) )		9160289	3					
ANR	9160484	Condition	( pvalue = dict_find_name ( & nref ) ) != 0 && r_is_ex_oper ( pvalue )	95:24:2731:2815	9160289	0	True				
ANR	9160485	AndExpression	( pvalue = dict_find_name ( & nref ) ) != 0 && r_is_ex_oper ( pvalue )		9160289	0		&&			
ANR	9160486	EqualityExpression	( pvalue = dict_find_name ( & nref ) ) != 0		9160289	0		!=			
ANR	9160487	AssignmentExpression	pvalue = dict_find_name ( & nref )		9160289	0		=			
ANR	9160488	Identifier	pvalue		9160289	0					
ANR	9160489	CallExpression	dict_find_name ( & nref )		9160289	1					
ANR	9160490	Callee	dict_find_name		9160289	0					
ANR	9160491	Identifier	dict_find_name		9160289	0					
ANR	9160492	ArgumentList	& nref		9160289	1					
ANR	9160493	Argument	& nref		9160289	0					
ANR	9160494	UnaryOperationExpression	& nref		9160289	0					
ANR	9160495	UnaryOperator	&		9160289	0					
ANR	9160496	Identifier	nref		9160289	1					
ANR	9160497	PrimaryExpression	0		9160289	1					
ANR	9160498	CallExpression	r_is_ex_oper ( pvalue )		9160289	1					
ANR	9160499	Callee	r_is_ex_oper		9160289	0					
ANR	9160500	Identifier	r_is_ex_oper		9160289	0					
ANR	9160501	ArgumentList	pvalue		9160289	1					
ANR	9160502	Argument	pvalue		9160289	0					
ANR	9160503	Identifier	pvalue		9160289	0					
ANR	9160504	CompoundStatement		51:26:1546:1546	9160289	1					
ANR	9160505	ExpressionStatement	"store_check_dest ( bsp , pvalue )"	98:24:2869:2898	9160289	0	True				
ANR	9160506	CallExpression	"store_check_dest ( bsp , pvalue )"		9160289	0					
ANR	9160507	Callee	store_check_dest		9160289	0					
ANR	9160508	Identifier	store_check_dest		9160289	0					
ANR	9160509	ArgumentList	bsp		9160289	1					
ANR	9160510	Argument	bsp		9160289	0					
ANR	9160511	Identifier	bsp		9160289	0					
ANR	9160512	Argument	pvalue		9160289	1					
ANR	9160513	Identifier	pvalue		9160289	0					
ANR	9160514	ExpressionStatement	"ref_do_save ( bsp , tpp , ""bind"" )"	103:24:3090:3119	9160289	1	True				
ANR	9160515	CallExpression	"ref_do_save ( bsp , tpp , ""bind"" )"		9160289	0					
ANR	9160516	Callee	ref_do_save		9160289	0					
ANR	9160517	Identifier	ref_do_save		9160289	0					
ANR	9160518	ArgumentList	bsp		9160289	1					
ANR	9160519	Argument	bsp		9160289	0					
ANR	9160520	Identifier	bsp		9160289	0					
ANR	9160521	Argument	tpp		9160289	1					
ANR	9160522	Identifier	tpp		9160289	0					
ANR	9160523	Argument	"""bind"""		9160289	2					
ANR	9160524	PrimaryExpression	"""bind"""		9160289	0					
ANR	9160525	ExpressionStatement	* tpp = pt_tag ( pt_executable_operator ) + op_index ( pvalue )	104:24:3145:3229	9160289	2	True				
ANR	9160526	AssignmentExpression	* tpp = pt_tag ( pt_executable_operator ) + op_index ( pvalue )		9160289	0		=			
ANR	9160527	UnaryOperationExpression	* tpp		9160289	0					
ANR	9160528	UnaryOperator	*		9160289	0					
ANR	9160529	Identifier	tpp		9160289	1					
ANR	9160530	AdditiveExpression	pt_tag ( pt_executable_operator ) + op_index ( pvalue )		9160289	1		+			
ANR	9160531	CallExpression	pt_tag ( pt_executable_operator )		9160289	0					
ANR	9160532	Callee	pt_tag		9160289	0					
ANR	9160533	Identifier	pt_tag		9160289	0					
ANR	9160534	ArgumentList	pt_executable_operator		9160289	1					
ANR	9160535	Argument	pt_executable_operator		9160289	0					
ANR	9160536	Identifier	pt_executable_operator		9160289	0					
ANR	9160537	CallExpression	op_index ( pvalue )		9160289	1					
ANR	9160538	Callee	op_index		9160289	0					
ANR	9160539	Identifier	op_index		9160289	0					
ANR	9160540	ArgumentList	pvalue		9160289	1					
ANR	9160541	Argument	pvalue		9160289	0					
ANR	9160542	Identifier	pvalue		9160289	0					
ANR	9160543	ExpressionStatement	bsp -> value . packed = tpp + 1	108:16:3287:3314	9160289	2	True				
ANR	9160544	AssignmentExpression	bsp -> value . packed = tpp + 1		9160289	0		=			
ANR	9160545	MemberAccess	bsp -> value . packed		9160289	0					
ANR	9160546	PtrMemberAccess	bsp -> value		9160289	0					
ANR	9160547	Identifier	bsp		9160289	0					
ANR	9160548	Identifier	value		9160289	1					
ANR	9160549	Identifier	packed		9160289	1					
ANR	9160550	AdditiveExpression	tpp + 1		9160289	1		+			
ANR	9160551	Identifier	tpp		9160289	0					
ANR	9160552	PrimaryExpression	1		9160289	1					
ANR	9160553	ElseStatement	else		9160289	0					
ANR	9160554	CompoundStatement		63:19:2038:2038	9160289	0					
ANR	9160555	Statement	ref	110:16:3353:3355	9160289	0	True				
ANR	9160556	Statement	*	110:20:3357:3357	9160289	1	True				
ANR	9160557	Statement	const	110:21:3358:3362	9160289	2	True				
ANR	9160558	ExpressionStatement	tp = bsp -> value . refs ++	110:27:3364:3386	9160289	3	True				
ANR	9160559	AssignmentExpression	tp = bsp -> value . refs ++		9160289	0		=			
ANR	9160560	Identifier	tp		9160289	0					
ANR	9160561	PostIncDecOperationExpression	bsp -> value . refs ++		9160289	1					
ANR	9160562	MemberAccess	bsp -> value . refs		9160289	0					
ANR	9160563	PtrMemberAccess	bsp -> value		9160289	0					
ANR	9160564	Identifier	bsp		9160289	0					
ANR	9160565	Identifier	value		9160289	1					
ANR	9160566	Identifier	refs		9160289	1					
ANR	9160567	IncDec	++		9160289	1					
ANR	9160568	SwitchStatement	switch ( r_type ( tp ) )		9160289	4					
ANR	9160569	Condition	r_type ( tp )	112:24:3413:3422	9160289	0	True				
ANR	9160570	CallExpression	r_type ( tp )		9160289	0					
ANR	9160571	Callee	r_type		9160289	0					
ANR	9160572	Identifier	r_type		9160289	0					
ANR	9160573	ArgumentList	tp		9160289	1					
ANR	9160574	Argument	tp		9160289	0					
ANR	9160575	Identifier	tp		9160289	0					
ANR	9160576	CompoundStatement		66:36:2128:2128	9160289	1					
ANR	9160577	Label	case t_name :	113:20:3447:3458	9160289	0	True				
ANR	9160578	Identifier	t_name		9160289	0					
ANR	9160579	IfStatement	"if ( r_has_attr ( tp , a_executable ) )"		9160289	1					
ANR	9160580	Condition	"r_has_attr ( tp , a_executable )"	114:28:3523:3550	9160289	0	True				
ANR	9160581	CallExpression	"r_has_attr ( tp , a_executable )"		9160289	0					
ANR	9160582	Callee	r_has_attr		9160289	0					
ANR	9160583	Identifier	r_has_attr		9160289	0					
ANR	9160584	ArgumentList	tp		9160289	1					
ANR	9160585	Argument	tp		9160289	0					
ANR	9160586	Identifier	tp		9160289	0					
ANR	9160587	Argument	a_executable		9160289	1					
ANR	9160588	Identifier	a_executable		9160289	0					
ANR	9160589	CompoundStatement		69:28:2286:2297	9160289	1					
ANR	9160590	IdentifierDeclStatement	ref * pvalue ;	115:28:3583:3594	9160289	0	True				
ANR	9160591	IdentifierDecl	* pvalue		9160289	0					
ANR	9160592	IdentifierDeclType	ref *		9160289	0					
ANR	9160593	Identifier	pvalue		9160289	1					
ANR	9160594	IfStatement	if ( ( pvalue = dict_find_name ( tp ) ) != 0 && r_is_ex_oper ( pvalue ) )		9160289	1					
ANR	9160595	Condition	( pvalue = dict_find_name ( tp ) ) != 0 && r_is_ex_oper ( pvalue )	117:32:3629:3718	9160289	0	True				
ANR	9160596	AndExpression	( pvalue = dict_find_name ( tp ) ) != 0 && r_is_ex_oper ( pvalue )		9160289	0		&&			
ANR	9160597	EqualityExpression	( pvalue = dict_find_name ( tp ) ) != 0		9160289	0		!=			
ANR	9160598	AssignmentExpression	pvalue = dict_find_name ( tp )		9160289	0		=			
ANR	9160599	Identifier	pvalue		9160289	0					
ANR	9160600	CallExpression	dict_find_name ( tp )		9160289	1					
ANR	9160601	Callee	dict_find_name		9160289	0					
ANR	9160602	Identifier	dict_find_name		9160289	0					
ANR	9160603	ArgumentList	tp		9160289	1					
ANR	9160604	Argument	tp		9160289	0					
ANR	9160605	Identifier	tp		9160289	0					
ANR	9160606	PrimaryExpression	0		9160289	1					
ANR	9160607	CallExpression	r_is_ex_oper ( pvalue )		9160289	1					
ANR	9160608	Callee	r_is_ex_oper		9160289	0					
ANR	9160609	Identifier	r_is_ex_oper		9160289	0					
ANR	9160610	ArgumentList	pvalue		9160289	1					
ANR	9160611	Argument	pvalue		9160289	0					
ANR	9160612	Identifier	pvalue		9160289	0					
ANR	9160613	CompoundStatement		73:34:2457:2457	9160289	1					
ANR	9160614	ExpressionStatement	"store_check_dest ( bsp , pvalue )"	120:32:3788:3817	9160289	0	True				
ANR	9160615	CallExpression	"store_check_dest ( bsp , pvalue )"		9160289	0					
ANR	9160616	Callee	store_check_dest		9160289	0					
ANR	9160617	Identifier	store_check_dest		9160289	0					
ANR	9160618	ArgumentList	bsp		9160289	1					
ANR	9160619	Argument	bsp		9160289	0					
ANR	9160620	Identifier	bsp		9160289	0					
ANR	9160621	Argument	pvalue		9160289	1					
ANR	9160622	Identifier	pvalue		9160289	0					
ANR	9160623	ExpressionStatement	"ref_assign_old ( bsp , tp , pvalue , ""bind"" )"	121:32:3851:3890	9160289	1	True				
ANR	9160624	CallExpression	"ref_assign_old ( bsp , tp , pvalue , ""bind"" )"		9160289	0					
ANR	9160625	Callee	ref_assign_old		9160289	0					
ANR	9160626	Identifier	ref_assign_old		9160289	0					
ANR	9160627	ArgumentList	bsp		9160289	1					
ANR	9160628	Argument	bsp		9160289	0					
ANR	9160629	Identifier	bsp		9160289	0					
ANR	9160630	Argument	tp		9160289	1					
ANR	9160631	Identifier	tp		9160289	0					
ANR	9160632	Argument	pvalue		9160289	2					
ANR	9160633	Identifier	pvalue		9160289	0					
ANR	9160634	Argument	"""bind"""		9160289	3					
ANR	9160635	PrimaryExpression	"""bind"""		9160289	0					
ANR	9160636	BreakStatement	break ;	124:24:3972:3977	9160289	2	True				
ANR	9160637	Label	case t_array :	125:20:3999:4011	9160289	3	True				
ANR	9160638	Identifier	t_array		9160289	0					
ANR	9160639	IfStatement	"if ( ! r_has_attr ( tp , a_write ) )"		9160289	4					
ANR	9160640	Condition	"! r_has_attr ( tp , a_write )"	126:28:4075:4098	9160289	0	True				
ANR	9160641	UnaryOperationExpression	"! r_has_attr ( tp , a_write )"		9160289	0					
ANR	9160642	UnaryOperator	!		9160289	0					
ANR	9160643	CallExpression	"r_has_attr ( tp , a_write )"		9160289	1					
ANR	9160644	Callee	r_has_attr		9160289	0					
ANR	9160645	Identifier	r_has_attr		9160289	0					
ANR	9160646	ArgumentList	tp		9160289	1					
ANR	9160647	Argument	tp		9160289	0					
ANR	9160648	Identifier	tp		9160289	0					
ANR	9160649	Argument	a_write		9160289	1					
ANR	9160650	Identifier	a_write		9160289	0					
ANR	9160651	BreakStatement	break ;	127:28:4129:4134	9160289	1	True				
ANR	9160652	Label	case t_mixedarray :	128:20:4156:4173	9160289	5	True				
ANR	9160653	Identifier	t_mixedarray		9160289	0					
ANR	9160654	Label	case t_shortarray :	129:20:4195:4212	9160289	6	True				
ANR	9160655	Identifier	t_shortarray		9160289	0					
ANR	9160656	IfStatement	"if ( r_has_attr ( tp , a_executable ) )"		9160289	7					
ANR	9160657	Condition	"r_has_attr ( tp , a_executable )"	130:28:4242:4269	9160289	0	True				
ANR	9160658	CallExpression	"r_has_attr ( tp , a_executable )"		9160289	0					
ANR	9160659	Callee	r_has_attr		9160289	0					
ANR	9160660	Identifier	r_has_attr		9160289	0					
ANR	9160661	ArgumentList	tp		9160289	1					
ANR	9160662	Argument	tp		9160289	0					
ANR	9160663	Identifier	tp		9160289	0					
ANR	9160664	Argument	a_executable		9160289	1					
ANR	9160665	Identifier	a_executable		9160289	0					
ANR	9160666	CompoundStatement		84:58:2975:2975	9160289	1					
ANR	9160667	ExpressionStatement	"r_clear_attrs ( tp , a_write )"	132:28:4361:4387	9160289	0	True				
ANR	9160668	CallExpression	"r_clear_attrs ( tp , a_write )"		9160289	0					
ANR	9160669	Callee	r_clear_attrs		9160289	0					
ANR	9160670	Identifier	r_clear_attrs		9160289	0					
ANR	9160671	ArgumentList	tp		9160289	1					
ANR	9160672	Argument	tp		9160289	0					
ANR	9160673	Identifier	tp		9160289	0					
ANR	9160674	Argument	a_write		9160289	1					
ANR	9160675	Identifier	a_write		9160289	0					
ANR	9160676	IfStatement	if ( bsp >= ostop )		9160289	1					
ANR	9160677	Condition	bsp >= ostop	133:32:4421:4432	9160289	0	True				
ANR	9160678	RelationalExpression	bsp >= ostop		9160289	0		>=			
ANR	9160679	Identifier	bsp		9160289	0					
ANR	9160680	Identifier	ostop		9160289	1					
ANR	9160681	CompoundStatement		90:32:3276:3284	9160289	1					
ANR	9160682	IdentifierDeclStatement	ref temp ;	135:32:4531:4539	9160289	0	True				
ANR	9160683	IdentifierDecl	temp		9160289	0					
ANR	9160684	IdentifierDeclType	ref		9160289	0					
ANR	9160685	Identifier	temp		9160289	1					
ANR	9160686	IdentifierDeclStatement	int code ;	136:32:4573:4581	9160289	1	True				
ANR	9160687	IdentifierDecl	code		9160289	0					
ANR	9160688	IdentifierDeclType	int		9160289	0					
ANR	9160689	Identifier	code		9160289	1					
ANR	9160690	ExpressionStatement	temp = * tp	138:32:4616:4626	9160289	2	True				
ANR	9160691	AssignmentExpression	temp = * tp		9160289	0		=			
ANR	9160692	Identifier	temp		9160289	0					
ANR	9160693	UnaryOperationExpression	* tp		9160289	1					
ANR	9160694	UnaryOperator	*		9160289	0					
ANR	9160695	Identifier	tp		9160289	1					
ANR	9160696	ExpressionStatement	osp = bsp	139:32:4660:4669	9160289	3	True				
ANR	9160697	AssignmentExpression	osp = bsp		9160289	0		=			
ANR	9160698	Identifier	osp		9160289	0					
ANR	9160699	Identifier	bsp		9160289	1					
ANR	9160700	ExpressionStatement	"code = ref_stack_push ( & o_stack , 1 )"	140:32:4703:4737	9160289	4	True				
ANR	9160701	AssignmentExpression	"code = ref_stack_push ( & o_stack , 1 )"		9160289	0		=			
ANR	9160702	Identifier	code		9160289	0					
ANR	9160703	CallExpression	"ref_stack_push ( & o_stack , 1 )"		9160289	1					
ANR	9160704	Callee	ref_stack_push		9160289	0					
ANR	9160705	Identifier	ref_stack_push		9160289	0					
ANR	9160706	ArgumentList	& o_stack		9160289	1					
ANR	9160707	Argument	& o_stack		9160289	0					
ANR	9160708	UnaryOperationExpression	& o_stack		9160289	0					
ANR	9160709	UnaryOperator	&		9160289	0					
ANR	9160710	Identifier	o_stack		9160289	1					
ANR	9160711	Argument	1		9160289	1					
ANR	9160712	PrimaryExpression	1		9160289	0					
ANR	9160713	IfStatement	if ( code < 0 )		9160289	5					
ANR	9160714	Condition	code < 0	141:36:4775:4782	9160289	0	True				
ANR	9160715	RelationalExpression	code < 0		9160289	0		<			
ANR	9160716	Identifier	code		9160289	0					
ANR	9160717	PrimaryExpression	0		9160289	1					
ANR	9160718	CompoundStatement		95:46:3488:3488	9160289	1					
ANR	9160719	ExpressionStatement	"ref_stack_pop ( & o_stack , depth )"	142:36:4823:4853	9160289	0	True				
ANR	9160720	CallExpression	"ref_stack_pop ( & o_stack , depth )"		9160289	0					
ANR	9160721	Callee	ref_stack_pop		9160289	0					
ANR	9160722	Identifier	ref_stack_pop		9160289	0					
ANR	9160723	ArgumentList	& o_stack		9160289	1					
ANR	9160724	Argument	& o_stack		9160289	0					
ANR	9160725	UnaryOperationExpression	& o_stack		9160289	0					
ANR	9160726	UnaryOperator	&		9160289	0					
ANR	9160727	Identifier	o_stack		9160289	1					
ANR	9160728	Argument	depth		9160289	1					
ANR	9160729	Identifier	depth		9160289	0					
ANR	9160730	ExpressionStatement	return_error ( code )	143:36:4891:4909	9160289	1	True				
ANR	9160731	CallExpression	return_error ( code )		9160289	0					
ANR	9160732	Callee	return_error		9160289	0					
ANR	9160733	Identifier	return_error		9160289	0					
ANR	9160734	ArgumentList	code		9160289	1					
ANR	9160735	Argument	code		9160289	0					
ANR	9160736	Identifier	code		9160289	0					
ANR	9160737	ExpressionStatement	bsp = osp	145:32:4977:4986	9160289	6	True				
ANR	9160738	AssignmentExpression	bsp = osp		9160289	0		=			
ANR	9160739	Identifier	bsp		9160289	0					
ANR	9160740	Identifier	osp		9160289	1					
ANR	9160741	ExpressionStatement	* bsp = temp	146:32:5020:5031	9160289	7	True				
ANR	9160742	AssignmentExpression	* bsp = temp		9160289	0		=			
ANR	9160743	UnaryOperationExpression	* bsp		9160289	0					
ANR	9160744	UnaryOperator	*		9160289	0					
ANR	9160745	Identifier	bsp		9160289	1					
ANR	9160746	Identifier	temp		9160289	1					
ANR	9160747	ElseStatement	else		9160289	0					
ANR	9160748	ExpressionStatement	* ++ bsp = * tp	148:32:5100:5112	9160289	0	True				
ANR	9160749	AssignmentExpression	* ++ bsp = * tp		9160289	0		=			
ANR	9160750	UnaryOperationExpression	* ++ bsp		9160289	0					
ANR	9160751	UnaryOperator	*		9160289	0					
ANR	9160752	UnaryExpression	++ bsp		9160289	1					
ANR	9160753	IncDec	++		9160289	0					
ANR	9160754	Identifier	bsp		9160289	1					
ANR	9160755	UnaryOperationExpression	* tp		9160289	1					
ANR	9160756	UnaryOperator	*		9160289	0					
ANR	9160757	Identifier	tp		9160289	1					
ANR	9160758	ExpressionStatement	depth ++	149:28:5142:5149	9160289	2	True				
ANR	9160759	PostIncDecOperationExpression	depth ++		9160289	0					
ANR	9160760	Identifier	depth		9160289	0					
ANR	9160761	IncDec	++		9160289	1					
ANR	9160762	ExpressionStatement	bsp --	154:8:5227:5232	9160289	1	True				
ANR	9160763	PostIncDecOperationExpression	bsp --		9160289	0					
ANR	9160764	Identifier	bsp		9160289	0					
ANR	9160765	IncDec	--		9160289	1					
ANR	9160766	ExpressionStatement	depth --	155:8:5242:5249	9160289	2	True				
ANR	9160767	PostIncDecOperationExpression	depth --		9160289	0					
ANR	9160768	Identifier	depth		9160289	0					
ANR	9160769	IncDec	--		9160289	1					
ANR	9160770	IfStatement	if ( bsp < osbot )		9160289	3					
ANR	9160771	Condition	bsp < osbot	156:12:5263:5273	9160289	0	True				
ANR	9160772	RelationalExpression	bsp < osbot		9160289	0		<			
ANR	9160773	Identifier	bsp		9160289	0					
ANR	9160774	Identifier	osbot		9160289	1					
ANR	9160775	CompoundStatement		110:25:3979:3979	9160289	1					
ANR	9160776	ExpressionStatement	osp = bsp	157:12:5334:5343	9160289	0	True				
ANR	9160777	AssignmentExpression	osp = bsp		9160289	0		=			
ANR	9160778	Identifier	osp		9160289	0					
ANR	9160779	Identifier	bsp		9160289	1					
ANR	9160780	ExpressionStatement	ref_stack_pop_block ( & o_stack )	158:12:5357:5386	9160289	1	True				
ANR	9160781	CallExpression	ref_stack_pop_block ( & o_stack )		9160289	0					
ANR	9160782	Callee	ref_stack_pop_block		9160289	0					
ANR	9160783	Identifier	ref_stack_pop_block		9160289	0					
ANR	9160784	ArgumentList	& o_stack		9160289	1					
ANR	9160785	Argument	& o_stack		9160289	0					
ANR	9160786	UnaryOperationExpression	& o_stack		9160289	0					
ANR	9160787	UnaryOperator	&		9160289	0					
ANR	9160788	Identifier	o_stack		9160289	1					
ANR	9160789	ExpressionStatement	bsp = osp	159:12:5400:5409	9160289	2	True				
ANR	9160790	AssignmentExpression	bsp = osp		9160289	0		=			
ANR	9160791	Identifier	bsp		9160289	0					
ANR	9160792	Identifier	osp		9160289	1					
ANR	9160793	ExpressionStatement	osp = bsp	162:4:5431:5440	9160289	10	True				
ANR	9160794	AssignmentExpression	osp = bsp		9160289	0		=			
ANR	9160795	Identifier	osp		9160289	0					
ANR	9160796	Identifier	bsp		9160289	1					
ANR	9160797	ReturnStatement	return 0 ;	163:4:5446:5454	9160289	11	True				
ANR	9160798	PrimaryExpression	0		9160289	0					
ANR	9160799	ReturnType	static int		9160289	1					
ANR	9160800	Identifier	zbind		9160289	2					
ANR	9160801	ParameterList	i_ctx_t * i_ctx_p		9160289	3					
ANR	9160802	Parameter	i_ctx_t * i_ctx_p	46:6:1278:1293	9160289	0	True				
ANR	9160803	ParameterType	i_ctx_t *		9160289	0					
ANR	9160804	Identifier	i_ctx_p		9160289	1					
ANR	9160805	CFGEntryNode	ENTRY		9160289		True				
ANR	9160806	CFGExitNode	EXIT		9160289		True				
ANR	9160807	Symbol	* op -> value		9160289						
ANR	9160808	Symbol	bsp -> value . packed		9160289						
ANR	9160809	Symbol	r_is_ex_oper		9160289						
ANR	9160810	Symbol	code		9160289						
ANR	9160811	Symbol	* op		9160289						
ANR	9160812	Symbol	r_is_packed		9160289						
ANR	9160813	Symbol	op -> value . const_refs		9160289						
ANR	9160814	Symbol	op_index		9160289						
ANR	9160815	Symbol	bsp -> value		9160289						
ANR	9160816	Symbol	pvalue		9160289						
ANR	9160817	Symbol	osp		9160289						
ANR	9160818	Symbol	* * op		9160289						
ANR	9160819	Symbol	& nref		9160289						
ANR	9160820	Symbol	& elt		9160289						
ANR	9160821	Symbol	r_has_attr		9160289						
ANR	9160822	Symbol	op -> value		9160289						
ANR	9160823	Symbol	* bsp		9160289						
ANR	9160824	Symbol	nref		9160289						
ANR	9160825	Symbol	r_size		9160289						
ANR	9160826	Symbol	a_write		9160289						
ANR	9160827	Symbol	imemory		9160289						
ANR	9160828	Symbol	dict_find_name		9160289						
ANR	9160829	Symbol	r_type		9160289						
ANR	9160830	Symbol	* tpp		9160289						
ANR	9160831	Symbol	op		9160289						
ANR	9160832	Symbol	* tp		9160289						
ANR	9160833	Symbol	ref_stack_push		9160289						
ANR	9160834	Symbol	temp		9160289						
ANR	9160835	Symbol	ostop		9160289						
ANR	9160836	Symbol	packed_name_index		9160289						
ANR	9160837	Symbol	defn		9160289						
ANR	9160838	Symbol	pt_executable_operator		9160289						
ANR	9160839	Symbol	elt		9160289						
ANR	9160840	Symbol	r_packed_is_exec_name		9160289						
ANR	9160841	Symbol	pt_tag		9160289						
ANR	9160842	Symbol	* ++ bsp		9160289						
ANR	9160843	Symbol	osbot		9160289						
ANR	9160844	Symbol	depth		9160289						
ANR	9160845	Symbol	tpp		9160289						
ANR	9160846	Symbol	i_ctx_p		9160289						
ANR	9160847	Symbol	bsp -> value . refs		9160289						
ANR	9160848	Symbol	& o_stack		9160289						
ANR	9160849	Symbol	a_executable		9160289						
ANR	9160850	Symbol	tp		9160289						
ANR	9160851	Symbol	bsp		9160289						
ANR	9160852	Symbol	* op -> value . const_refs		9160289						
ANR	9160853	Function	zserialnumber	167:0:5486:5617							
ANR	9160854	FunctionDef	zserialnumber (i_ctx_t * i_ctx_p)		9160853	0					
ANR	9160855	CompoundStatement		169:0:5529:5617	9160853	0					
ANR	9160856	IdentifierDeclStatement	os_ptr op = osp ;	170:4:5535:5550	9160853	0	True				
ANR	9160857	IdentifierDecl	op = osp		9160853	0					
ANR	9160858	IdentifierDeclType	os_ptr		9160853	0					
ANR	9160859	Identifier	op		9160853	1					
ANR	9160860	AssignmentExpression	op = osp		9160853	2		=			
ANR	9160861	Identifier	osp		9160853	0					
ANR	9160862	Identifier	osp		9160853	1					
ANR	9160863	ExpressionStatement	push ( 1 )	172:4:5557:5564	9160853	1	True				
ANR	9160864	CallExpression	push ( 1 )		9160853	0					
ANR	9160865	Callee	push		9160853	0					
ANR	9160866	Identifier	push		9160853	0					
ANR	9160867	ArgumentList	1		9160853	1					
ANR	9160868	Argument	1		9160853	0					
ANR	9160869	PrimaryExpression	1		9160853	0					
ANR	9160870	ExpressionStatement	"make_int ( op , gp_serialnumber ( ) )"	173:4:5570:5601	9160853	2	True				
ANR	9160871	CallExpression	"make_int ( op , gp_serialnumber ( ) )"		9160853	0					
ANR	9160872	Callee	make_int		9160853	0					
ANR	9160873	Identifier	make_int		9160853	0					
ANR	9160874	ArgumentList	op		9160853	1					
ANR	9160875	Argument	op		9160853	0					
ANR	9160876	Identifier	op		9160853	0					
ANR	9160877	Argument	gp_serialnumber ( )		9160853	1					
ANR	9160878	CallExpression	gp_serialnumber ( )		9160853	0					
ANR	9160879	Callee	gp_serialnumber		9160853	0					
ANR	9160880	Identifier	gp_serialnumber		9160853	0					
ANR	9160881	ArgumentList			9160853	1					
ANR	9160882	ReturnStatement	return 0 ;	174:4:5607:5615	9160853	3	True				
ANR	9160883	PrimaryExpression	0		9160853	0					
ANR	9160884	ReturnType	static int		9160853	1					
ANR	9160885	Identifier	zserialnumber		9160853	2					
ANR	9160886	ParameterList	i_ctx_t * i_ctx_p		9160853	3					
ANR	9160887	Parameter	i_ctx_t * i_ctx_p	168:14:5511:5526	9160853	0	True				
ANR	9160888	ParameterType	i_ctx_t *		9160853	0					
ANR	9160889	Identifier	i_ctx_p		9160853	1					
ANR	9160890	CFGEntryNode	ENTRY		9160853		True				
ANR	9160891	CFGExitNode	EXIT		9160853		True				
ANR	9160892	Symbol	op		9160853						
ANR	9160893	Symbol	i_ctx_p		9160853						
ANR	9160894	Symbol	gp_serialnumber		9160853						
ANR	9160895	Symbol	osp		9160853						
ANR	9160896	Function	zrealtime	178:0:5643:5996							
ANR	9160897	FunctionDef	zrealtime (i_ctx_t * i_ctx_p)		9160896	0					
ANR	9160898	CompoundStatement		180:0:5682:5996	9160896	0					
ANR	9160899	IdentifierDeclStatement	os_ptr op = osp ;	181:4:5688:5703	9160896	0	True				
ANR	9160900	IdentifierDecl	op = osp		9160896	0					
ANR	9160901	IdentifierDeclType	os_ptr		9160896	0					
ANR	9160902	Identifier	op		9160896	1					
ANR	9160903	AssignmentExpression	op = osp		9160896	2		=			
ANR	9160904	Identifier	osp		9160896	0					
ANR	9160905	Identifier	osp		9160896	1					
ANR	9160906	IdentifierDeclStatement	long secs_ns [ 2 ] ;	182:4:5709:5724	9160896	1	True				
ANR	9160907	IdentifierDecl	secs_ns [ 2 ]		9160896	0					
ANR	9160908	IdentifierDeclType	long [ 2 ]		9160896	0					
ANR	9160909	Identifier	secs_ns		9160896	1					
ANR	9160910	PrimaryExpression	2		9160896	2					
ANR	9160911	IdentifierDeclStatement	gs_lib_ctx_t * libctx = gs_lib_ctx_get_interp_instance ( imemory ) ;	183:4:5730:5792	9160896	2	True				
ANR	9160912	IdentifierDecl	* libctx = gs_lib_ctx_get_interp_instance ( imemory )		9160896	0					
ANR	9160913	IdentifierDeclType	gs_lib_ctx_t *		9160896	0					
ANR	9160914	Identifier	libctx		9160896	1					
ANR	9160915	AssignmentExpression	* libctx = gs_lib_ctx_get_interp_instance ( imemory )		9160896	2		=			
ANR	9160916	Identifier	libctx		9160896	0					
ANR	9160917	CallExpression	gs_lib_ctx_get_interp_instance ( imemory )		9160896	1					
ANR	9160918	Callee	gs_lib_ctx_get_interp_instance		9160896	0					
ANR	9160919	Identifier	gs_lib_ctx_get_interp_instance		9160896	0					
ANR	9160920	ArgumentList	imemory		9160896	1					
ANR	9160921	Argument	imemory		9160896	0					
ANR	9160922	Identifier	imemory		9160896	0					
ANR	9160923	ExpressionStatement	gp_get_realtime ( secs_ns )	185:4:5799:5823	9160896	3	True				
ANR	9160924	CallExpression	gp_get_realtime ( secs_ns )		9160896	0					
ANR	9160925	Callee	gp_get_realtime		9160896	0					
ANR	9160926	Identifier	gp_get_realtime		9160896	0					
ANR	9160927	ArgumentList	secs_ns		9160896	1					
ANR	9160928	Argument	secs_ns		9160896	0					
ANR	9160929	Identifier	secs_ns		9160896	0					
ANR	9160930	ExpressionStatement	secs_ns [ 1 ] -= libctx -> real_time_0 [ 1 ]	186:4:5829:5865	9160896	4	True				
ANR	9160931	AssignmentExpression	secs_ns [ 1 ] -= libctx -> real_time_0 [ 1 ]		9160896	0		-=			
ANR	9160932	ArrayIndexing	secs_ns [ 1 ]		9160896	0					
ANR	9160933	Identifier	secs_ns		9160896	0					
ANR	9160934	PrimaryExpression	1		9160896	1					
ANR	9160935	ArrayIndexing	libctx -> real_time_0 [ 1 ]		9160896	1					
ANR	9160936	PtrMemberAccess	libctx -> real_time_0		9160896	0					
ANR	9160937	Identifier	libctx		9160896	0					
ANR	9160938	Identifier	real_time_0		9160896	1					
ANR	9160939	PrimaryExpression	1		9160896	1					
ANR	9160940	ExpressionStatement	secs_ns [ 0 ] -= libctx -> real_time_0 [ 0 ]	187:4:5871:5907	9160896	5	True				
ANR	9160941	AssignmentExpression	secs_ns [ 0 ] -= libctx -> real_time_0 [ 0 ]		9160896	0		-=			
ANR	9160942	ArrayIndexing	secs_ns [ 0 ]		9160896	0					
ANR	9160943	Identifier	secs_ns		9160896	0					
ANR	9160944	PrimaryExpression	0		9160896	1					
ANR	9160945	ArrayIndexing	libctx -> real_time_0 [ 0 ]		9160896	1					
ANR	9160946	PtrMemberAccess	libctx -> real_time_0		9160896	0					
ANR	9160947	Identifier	libctx		9160896	0					
ANR	9160948	Identifier	real_time_0		9160896	1					
ANR	9160949	PrimaryExpression	0		9160896	1					
ANR	9160950	ExpressionStatement	push ( 1 )	188:4:5913:5920	9160896	6	True				
ANR	9160951	CallExpression	push ( 1 )		9160896	0					
ANR	9160952	Callee	push		9160896	0					
ANR	9160953	Identifier	push		9160896	0					
ANR	9160954	ArgumentList	1		9160896	1					
ANR	9160955	Argument	1		9160896	0					
ANR	9160956	PrimaryExpression	1		9160896	0					
ANR	9160957	ExpressionStatement	"make_int ( op , secs_ns [ 0 ] * 1000 + secs_ns [ 1 ] / 1000000 )"	189:4:5926:5980	9160896	7	True				
ANR	9160958	CallExpression	"make_int ( op , secs_ns [ 0 ] * 1000 + secs_ns [ 1 ] / 1000000 )"		9160896	0					
ANR	9160959	Callee	make_int		9160896	0					
ANR	9160960	Identifier	make_int		9160896	0					
ANR	9160961	ArgumentList	op		9160896	1					
ANR	9160962	Argument	op		9160896	0					
ANR	9160963	Identifier	op		9160896	0					
ANR	9160964	Argument	secs_ns [ 0 ] * 1000 + secs_ns [ 1 ] / 1000000		9160896	1					
ANR	9160965	AdditiveExpression	secs_ns [ 0 ] * 1000 + secs_ns [ 1 ] / 1000000		9160896	0		+			
ANR	9160966	MultiplicativeExpression	secs_ns [ 0 ] * 1000		9160896	0		*			
ANR	9160967	ArrayIndexing	secs_ns [ 0 ]		9160896	0					
ANR	9160968	Identifier	secs_ns		9160896	0					
ANR	9160969	PrimaryExpression	0		9160896	1					
ANR	9160970	PrimaryExpression	1000		9160896	1					
ANR	9160971	MultiplicativeExpression	secs_ns [ 1 ] / 1000000		9160896	1		/			
ANR	9160972	ArrayIndexing	secs_ns [ 1 ]		9160896	0					
ANR	9160973	Identifier	secs_ns		9160896	0					
ANR	9160974	PrimaryExpression	1		9160896	1					
ANR	9160975	PrimaryExpression	1000000		9160896	1					
ANR	9160976	ReturnStatement	return 0 ;	190:4:5986:5994	9160896	8	True				
ANR	9160977	PrimaryExpression	0		9160896	0					
ANR	9160978	ReturnType	static int		9160896	1					
ANR	9160979	Identifier	zrealtime		9160896	2					
ANR	9160980	ParameterList	i_ctx_t * i_ctx_p		9160896	3					
ANR	9160981	Parameter	i_ctx_t * i_ctx_p	179:10:5664:5679	9160896	0	True				
ANR	9160982	ParameterType	i_ctx_t *		9160896	0					
ANR	9160983	Identifier	i_ctx_p		9160896	1					
ANR	9160984	CFGEntryNode	ENTRY		9160896		True				
ANR	9160985	CFGExitNode	EXIT		9160896		True				
ANR	9160986	Symbol	op		9160896						
ANR	9160987	Symbol	* libctx		9160896						
ANR	9160988	Symbol	* secs_ns		9160896						
ANR	9160989	Symbol	libctx		9160896						
ANR	9160990	Symbol	libctx -> real_time_0		9160896						
ANR	9160991	Symbol	i_ctx_p		9160896						
ANR	9160992	Symbol	* * libctx		9160896						
ANR	9160993	Symbol	gs_lib_ctx_get_interp_instance		9160896						
ANR	9160994	Symbol	imemory		9160896						
ANR	9160995	Symbol	secs_ns		9160896						
ANR	9160996	Symbol	* libctx -> real_time_0		9160896						
ANR	9160997	Symbol	osp		9160896						
ANR	9160998	Function	zusertime	194:0:6022:6223							
ANR	9160999	FunctionDef	zusertime (i_ctx_t * i_ctx_p)		9160998	0					
ANR	9161000	CompoundStatement		196:0:6061:6223	9160998	0					
ANR	9161001	IdentifierDeclStatement	os_ptr op = osp ;	197:4:6067:6082	9160998	0	True				
ANR	9161002	IdentifierDecl	op = osp		9160998	0					
ANR	9161003	IdentifierDeclType	os_ptr		9160998	0					
ANR	9161004	Identifier	op		9160998	1					
ANR	9161005	AssignmentExpression	op = osp		9160998	2		=			
ANR	9161006	Identifier	osp		9160998	0					
ANR	9161007	Identifier	osp		9160998	1					
ANR	9161008	IdentifierDeclStatement	long secs_ns [ 2 ] ;	198:4:6088:6103	9160998	1	True				
ANR	9161009	IdentifierDecl	secs_ns [ 2 ]		9160998	0					
ANR	9161010	IdentifierDeclType	long [ 2 ]		9160998	0					
ANR	9161011	Identifier	secs_ns		9160998	1					
ANR	9161012	PrimaryExpression	2		9160998	2					
ANR	9161013	ExpressionStatement	gp_get_usertime ( secs_ns )	200:4:6110:6134	9160998	2	True				
ANR	9161014	CallExpression	gp_get_usertime ( secs_ns )		9160998	0					
ANR	9161015	Callee	gp_get_usertime		9160998	0					
ANR	9161016	Identifier	gp_get_usertime		9160998	0					
ANR	9161017	ArgumentList	secs_ns		9160998	1					
ANR	9161018	Argument	secs_ns		9160998	0					
ANR	9161019	Identifier	secs_ns		9160998	0					
ANR	9161020	ExpressionStatement	push ( 1 )	201:4:6140:6147	9160998	3	True				
ANR	9161021	CallExpression	push ( 1 )		9160998	0					
ANR	9161022	Callee	push		9160998	0					
ANR	9161023	Identifier	push		9160998	0					
ANR	9161024	ArgumentList	1		9160998	1					
ANR	9161025	Argument	1		9160998	0					
ANR	9161026	PrimaryExpression	1		9160998	0					
ANR	9161027	ExpressionStatement	"make_int ( op , secs_ns [ 0 ] * 1000 + secs_ns [ 1 ] / 1000000 )"	202:4:6153:6207	9160998	4	True				
ANR	9161028	CallExpression	"make_int ( op , secs_ns [ 0 ] * 1000 + secs_ns [ 1 ] / 1000000 )"		9160998	0					
ANR	9161029	Callee	make_int		9160998	0					
ANR	9161030	Identifier	make_int		9160998	0					
ANR	9161031	ArgumentList	op		9160998	1					
ANR	9161032	Argument	op		9160998	0					
ANR	9161033	Identifier	op		9160998	0					
ANR	9161034	Argument	secs_ns [ 0 ] * 1000 + secs_ns [ 1 ] / 1000000		9160998	1					
ANR	9161035	AdditiveExpression	secs_ns [ 0 ] * 1000 + secs_ns [ 1 ] / 1000000		9160998	0		+			
ANR	9161036	MultiplicativeExpression	secs_ns [ 0 ] * 1000		9160998	0		*			
ANR	9161037	ArrayIndexing	secs_ns [ 0 ]		9160998	0					
ANR	9161038	Identifier	secs_ns		9160998	0					
ANR	9161039	PrimaryExpression	0		9160998	1					
ANR	9161040	PrimaryExpression	1000		9160998	1					
ANR	9161041	MultiplicativeExpression	secs_ns [ 1 ] / 1000000		9160998	1		/			
ANR	9161042	ArrayIndexing	secs_ns [ 1 ]		9160998	0					
ANR	9161043	Identifier	secs_ns		9160998	0					
ANR	9161044	PrimaryExpression	1		9160998	1					
ANR	9161045	PrimaryExpression	1000000		9160998	1					
ANR	9161046	ReturnStatement	return 0 ;	203:4:6213:6221	9160998	5	True				
ANR	9161047	PrimaryExpression	0		9160998	0					
ANR	9161048	ReturnType	static int		9160998	1					
ANR	9161049	Identifier	zusertime		9160998	2					
ANR	9161050	ParameterList	i_ctx_t * i_ctx_p		9160998	3					
ANR	9161051	Parameter	i_ctx_t * i_ctx_p	195:10:6043:6058	9160998	0	True				
ANR	9161052	ParameterType	i_ctx_t *		9160998	0					
ANR	9161053	Identifier	i_ctx_p		9160998	1					
ANR	9161054	CFGEntryNode	ENTRY		9160998		True				
ANR	9161055	CFGExitNode	EXIT		9160998		True				
ANR	9161056	Symbol	op		9160998						
ANR	9161057	Symbol	* secs_ns		9160998						
ANR	9161058	Symbol	i_ctx_p		9160998						
ANR	9161059	Symbol	secs_ns		9160998						
ANR	9161060	Symbol	osp		9160998						
ANR	9161061	Function	zgetenv	210:0:6360:7375							
ANR	9161062	FunctionDef	zgetenv (i_ctx_t * i_ctx_p)		9161061	0					
ANR	9161063	CompoundStatement		212:0:6397:7375	9161061	0					
ANR	9161064	IdentifierDeclStatement	os_ptr op = osp ;	213:4:6403:6418	9161061	0	True				
ANR	9161065	IdentifierDecl	op = osp		9161061	0					
ANR	9161066	IdentifierDeclType	os_ptr		9161061	0					
ANR	9161067	Identifier	op		9161061	1					
ANR	9161068	AssignmentExpression	op = osp		9161061	2		=			
ANR	9161069	Identifier	osp		9161061	0					
ANR	9161070	Identifier	osp		9161061	1					
ANR	9161071	IdentifierDeclStatement	char * str ;	214:4:6424:6433	9161061	1	True				
ANR	9161072	IdentifierDecl	* str		9161061	0					
ANR	9161073	IdentifierDeclType	char *		9161061	0					
ANR	9161074	Identifier	str		9161061	1					
ANR	9161075	IdentifierDeclStatement	byte * value ;	215:4:6439:6450	9161061	2	True				
ANR	9161076	IdentifierDecl	* value		9161061	0					
ANR	9161077	IdentifierDeclType	byte *		9161061	0					
ANR	9161078	Identifier	value		9161061	1					
ANR	9161079	IdentifierDeclStatement	int len = 0 ;	216:4:6456:6467	9161061	3	True				
ANR	9161080	IdentifierDecl	len = 0		9161061	0					
ANR	9161081	IdentifierDeclType	int		9161061	0					
ANR	9161082	Identifier	len		9161061	1					
ANR	9161083	AssignmentExpression	len = 0		9161061	2		=			
ANR	9161084	Identifier	len		9161061	0					
ANR	9161085	PrimaryExpression	0		9161061	1					
ANR	9161086	ExpressionStatement	"check_read_type ( * op , t_string )"	218:4:6474:6504	9161061	4	True				
ANR	9161087	CallExpression	"check_read_type ( * op , t_string )"		9161061	0					
ANR	9161088	Callee	check_read_type		9161061	0					
ANR	9161089	Identifier	check_read_type		9161061	0					
ANR	9161090	ArgumentList	* op		9161061	1					
ANR	9161091	Argument	* op		9161061	0					
ANR	9161092	UnaryOperationExpression	* op		9161061	0					
ANR	9161093	UnaryOperator	*		9161061	0					
ANR	9161094	Identifier	op		9161061	1					
ANR	9161095	Argument	t_string		9161061	1					
ANR	9161096	Identifier	t_string		9161061	0					
ANR	9161097	ExpressionStatement	"str = ref_to_string ( op , imemory , ""getenv key"" )"	219:4:6510:6556	9161061	5	True				
ANR	9161098	AssignmentExpression	"str = ref_to_string ( op , imemory , ""getenv key"" )"		9161061	0		=			
ANR	9161099	Identifier	str		9161061	0					
ANR	9161100	CallExpression	"ref_to_string ( op , imemory , ""getenv key"" )"		9161061	1					
ANR	9161101	Callee	ref_to_string		9161061	0					
ANR	9161102	Identifier	ref_to_string		9161061	0					
ANR	9161103	ArgumentList	op		9161061	1					
ANR	9161104	Argument	op		9161061	0					
ANR	9161105	Identifier	op		9161061	0					
ANR	9161106	Argument	imemory		9161061	1					
ANR	9161107	Identifier	imemory		9161061	0					
ANR	9161108	Argument	"""getenv key"""		9161061	2					
ANR	9161109	PrimaryExpression	"""getenv key"""		9161061	0					
ANR	9161110	IfStatement	if ( str == 0 )		9161061	6					
ANR	9161111	Condition	str == 0	220:8:6566:6573	9161061	0	True				
ANR	9161112	EqualityExpression	str == 0		9161061	0		==			
ANR	9161113	Identifier	str		9161061	0					
ANR	9161114	PrimaryExpression	0		9161061	1					
ANR	9161115	ExpressionStatement	return_error ( gs_error_VMerror )	221:8:6584:6614	9161061	1	True				
ANR	9161116	CallExpression	return_error ( gs_error_VMerror )		9161061	0					
ANR	9161117	Callee	return_error		9161061	0					
ANR	9161118	Identifier	return_error		9161061	0					
ANR	9161119	ArgumentList	gs_error_VMerror		9161061	1					
ANR	9161120	Argument	gs_error_VMerror		9161061	0					
ANR	9161121	Identifier	gs_error_VMerror		9161061	0					
ANR	9161122	IfStatement	"if ( gp_getenv ( str , ( char * ) 0 , & len ) > 0 )"		9161061	7					
ANR	9161123	Condition	"gp_getenv ( str , ( char * ) 0 , & len ) > 0"	222:8:6624:6658	9161061	0	True				
ANR	9161124	RelationalExpression	"gp_getenv ( str , ( char * ) 0 , & len ) > 0"		9161061	0		>			
ANR	9161125	CallExpression	"gp_getenv ( str , ( char * ) 0 , & len )"		9161061	0					
ANR	9161126	Callee	gp_getenv		9161061	0					
ANR	9161127	Identifier	gp_getenv		9161061	0					
ANR	9161128	ArgumentList	str		9161061	1					
ANR	9161129	Argument	str		9161061	0					
ANR	9161130	Identifier	str		9161061	0					
ANR	9161131	Argument	( char * ) 0		9161061	1					
ANR	9161132	CastExpression	( char * ) 0		9161061	0					
ANR	9161133	CastTarget	char *		9161061	0					
ANR	9161134	PrimaryExpression	0		9161061	1					
ANR	9161135	Argument	& len		9161061	2					
ANR	9161136	UnaryOperationExpression	& len		9161061	0					
ANR	9161137	UnaryOperator	&		9161061	0					
ANR	9161138	Identifier	len		9161061	1					
ANR	9161139	PrimaryExpression	0		9161061	1					
ANR	9161140	CompoundStatement		11:45:263:263	9161061	1					
ANR	9161141	ExpressionStatement	"ifree_string ( ( byte * ) str , r_size ( op ) + 1 , ""getenv key"" )"	223:8:6689:6745	9161061	0	True				
ANR	9161142	CallExpression	"ifree_string ( ( byte * ) str , r_size ( op ) + 1 , ""getenv key"" )"		9161061	0					
ANR	9161143	Callee	ifree_string		9161061	0					
ANR	9161144	Identifier	ifree_string		9161061	0					
ANR	9161145	ArgumentList	( byte * ) str		9161061	1					
ANR	9161146	Argument	( byte * ) str		9161061	0					
ANR	9161147	CastExpression	( byte * ) str		9161061	0					
ANR	9161148	CastTarget	byte *		9161061	0					
ANR	9161149	Identifier	str		9161061	1					
ANR	9161150	Argument	r_size ( op ) + 1		9161061	1					
ANR	9161151	AdditiveExpression	r_size ( op ) + 1		9161061	0		+			
ANR	9161152	CallExpression	r_size ( op )		9161061	0					
ANR	9161153	Callee	r_size		9161061	0					
ANR	9161154	Identifier	r_size		9161061	0					
ANR	9161155	ArgumentList	op		9161061	1					
ANR	9161156	Argument	op		9161061	0					
ANR	9161157	Identifier	op		9161061	0					
ANR	9161158	PrimaryExpression	1		9161061	1					
ANR	9161159	Argument	"""getenv key"""		9161061	2					
ANR	9161160	PrimaryExpression	"""getenv key"""		9161061	0					
ANR	9161161	ExpressionStatement	make_false ( op )	224:8:6755:6769	9161061	1	True				
ANR	9161162	CallExpression	make_false ( op )		9161061	0					
ANR	9161163	Callee	make_false		9161061	0					
ANR	9161164	Identifier	make_false		9161061	0					
ANR	9161165	ArgumentList	op		9161061	1					
ANR	9161166	Argument	op		9161061	0					
ANR	9161167	Identifier	op		9161061	0					
ANR	9161168	ReturnStatement	return 0 ;	225:8:6779:6787	9161061	2	True				
ANR	9161169	PrimaryExpression	0		9161061	0					
ANR	9161170	ExpressionStatement	"value = ialloc_string ( len , ""getenv value"" )"	227:4:6799:6841	9161061	8	True				
ANR	9161171	AssignmentExpression	"value = ialloc_string ( len , ""getenv value"" )"		9161061	0		=			
ANR	9161172	Identifier	value		9161061	0					
ANR	9161173	CallExpression	"ialloc_string ( len , ""getenv value"" )"		9161061	1					
ANR	9161174	Callee	ialloc_string		9161061	0					
ANR	9161175	Identifier	ialloc_string		9161061	0					
ANR	9161176	ArgumentList	len		9161061	1					
ANR	9161177	Argument	len		9161061	0					
ANR	9161178	Identifier	len		9161061	0					
ANR	9161179	Argument	"""getenv value"""		9161061	1					
ANR	9161180	PrimaryExpression	"""getenv value"""		9161061	0					
ANR	9161181	IfStatement	if ( value == 0 )		9161061	9					
ANR	9161182	Condition	value == 0	228:8:6851:6860	9161061	0	True				
ANR	9161183	EqualityExpression	value == 0		9161061	0		==			
ANR	9161184	Identifier	value		9161061	0					
ANR	9161185	PrimaryExpression	0		9161061	1					
ANR	9161186	CompoundStatement		17:20:465:465	9161061	1					
ANR	9161187	ExpressionStatement	"ifree_string ( ( byte * ) str , r_size ( op ) + 1 , ""getenv key"" )"	229:8:6873:6929	9161061	0	True				
ANR	9161188	CallExpression	"ifree_string ( ( byte * ) str , r_size ( op ) + 1 , ""getenv key"" )"		9161061	0					
ANR	9161189	Callee	ifree_string		9161061	0					
ANR	9161190	Identifier	ifree_string		9161061	0					
ANR	9161191	ArgumentList	( byte * ) str		9161061	1					
ANR	9161192	Argument	( byte * ) str		9161061	0					
ANR	9161193	CastExpression	( byte * ) str		9161061	0					
ANR	9161194	CastTarget	byte *		9161061	0					
ANR	9161195	Identifier	str		9161061	1					
ANR	9161196	Argument	r_size ( op ) + 1		9161061	1					
ANR	9161197	AdditiveExpression	r_size ( op ) + 1		9161061	0		+			
ANR	9161198	CallExpression	r_size ( op )		9161061	0					
ANR	9161199	Callee	r_size		9161061	0					
ANR	9161200	Identifier	r_size		9161061	0					
ANR	9161201	ArgumentList	op		9161061	1					
ANR	9161202	Argument	op		9161061	0					
ANR	9161203	Identifier	op		9161061	0					
ANR	9161204	PrimaryExpression	1		9161061	1					
ANR	9161205	Argument	"""getenv key"""		9161061	2					
ANR	9161206	PrimaryExpression	"""getenv key"""		9161061	0					
ANR	9161207	ExpressionStatement	return_error ( gs_error_VMerror )	230:8:6939:6969	9161061	1	True				
ANR	9161208	CallExpression	return_error ( gs_error_VMerror )		9161061	0					
ANR	9161209	Callee	return_error		9161061	0					
ANR	9161210	Identifier	return_error		9161061	0					
ANR	9161211	ArgumentList	gs_error_VMerror		9161061	1					
ANR	9161212	Argument	gs_error_VMerror		9161061	0					
ANR	9161213	Identifier	gs_error_VMerror		9161061	0					
ANR	9161214	ExpressionStatement	"DISCARD ( gp_getenv ( str , ( char * ) value , & len ) )"	232:4:6981:7025	9161061	10	True				
ANR	9161215	CallExpression	"DISCARD ( gp_getenv ( str , ( char * ) value , & len ) )"		9161061	0					
ANR	9161216	Callee	DISCARD		9161061	0					
ANR	9161217	Identifier	DISCARD		9161061	0					
ANR	9161218	ArgumentList	"gp_getenv ( str , ( char * ) value , & len )"		9161061	1					
ANR	9161219	Argument	"gp_getenv ( str , ( char * ) value , & len )"		9161061	0					
ANR	9161220	CallExpression	"gp_getenv ( str , ( char * ) value , & len )"		9161061	0					
ANR	9161221	Callee	gp_getenv		9161061	0					
ANR	9161222	Identifier	gp_getenv		9161061	0					
ANR	9161223	ArgumentList	str		9161061	1					
ANR	9161224	Argument	str		9161061	0					
ANR	9161225	Identifier	str		9161061	0					
ANR	9161226	Argument	( char * ) value		9161061	1					
ANR	9161227	CastExpression	( char * ) value		9161061	0					
ANR	9161228	CastTarget	char *		9161061	0					
ANR	9161229	Identifier	value		9161061	1					
ANR	9161230	Argument	& len		9161061	2					
ANR	9161231	UnaryOperationExpression	& len		9161061	0					
ANR	9161232	UnaryOperator	&		9161061	0					
ANR	9161233	Identifier	len		9161061	1					
ANR	9161234	ExpressionStatement	"ifree_string ( ( byte * ) str , r_size ( op ) + 1 , ""getenv key"" )"	233:4:7048:7104	9161061	11	True				
ANR	9161235	CallExpression	"ifree_string ( ( byte * ) str , r_size ( op ) + 1 , ""getenv key"" )"		9161061	0					
ANR	9161236	Callee	ifree_string		9161061	0					
ANR	9161237	Identifier	ifree_string		9161061	0					
ANR	9161238	ArgumentList	( byte * ) str		9161061	1					
ANR	9161239	Argument	( byte * ) str		9161061	0					
ANR	9161240	CastExpression	( byte * ) str		9161061	0					
ANR	9161241	CastTarget	byte *		9161061	0					
ANR	9161242	Identifier	str		9161061	1					
ANR	9161243	Argument	r_size ( op ) + 1		9161061	1					
ANR	9161244	AdditiveExpression	r_size ( op ) + 1		9161061	0		+			
ANR	9161245	CallExpression	r_size ( op )		9161061	0					
ANR	9161246	Callee	r_size		9161061	0					
ANR	9161247	Identifier	r_size		9161061	0					
ANR	9161248	ArgumentList	op		9161061	1					
ANR	9161249	Argument	op		9161061	0					
ANR	9161250	Identifier	op		9161061	0					
ANR	9161251	PrimaryExpression	1		9161061	1					
ANR	9161252	Argument	"""getenv key"""		9161061	2					
ANR	9161253	PrimaryExpression	"""getenv key"""		9161061	0					
ANR	9161254	ExpressionStatement	"value = iresize_string ( value , len , len - 1 , ""getenv value"" )"	235:4:7159:7245	9161061	12	True				
ANR	9161255	AssignmentExpression	"value = iresize_string ( value , len , len - 1 , ""getenv value"" )"		9161061	0		=			
ANR	9161256	Identifier	value		9161061	0					
ANR	9161257	CallExpression	"iresize_string ( value , len , len - 1 , ""getenv value"" )"		9161061	1					
ANR	9161258	Callee	iresize_string		9161061	0					
ANR	9161259	Identifier	iresize_string		9161061	0					
ANR	9161260	ArgumentList	value		9161061	1					
ANR	9161261	Argument	value		9161061	0					
ANR	9161262	Identifier	value		9161061	0					
ANR	9161263	Argument	len		9161061	1					
ANR	9161264	Identifier	len		9161061	0					
ANR	9161265	Argument	len - 1		9161061	2					
ANR	9161266	AdditiveExpression	len - 1		9161061	0		-			
ANR	9161267	Identifier	len		9161061	0					
ANR	9161268	PrimaryExpression	1		9161061	1					
ANR	9161269	Argument	"""getenv value"""		9161061	3					
ANR	9161270	PrimaryExpression	"""getenv value"""		9161061	0					
ANR	9161271	ExpressionStatement	push ( 1 )	237:4:7268:7275	9161061	13	True				
ANR	9161272	CallExpression	push ( 1 )		9161061	0					
ANR	9161273	Callee	push		9161061	0					
ANR	9161274	Identifier	push		9161061	0					
ANR	9161275	ArgumentList	1		9161061	1					
ANR	9161276	Argument	1		9161061	0					
ANR	9161277	PrimaryExpression	1		9161061	0					
ANR	9161278	ExpressionStatement	"make_string ( op - 1 , a_all | icurrent_space , len - 1 , value )"	238:4:7281:7340	9161061	14	True				
ANR	9161279	CallExpression	"make_string ( op - 1 , a_all | icurrent_space , len - 1 , value )"		9161061	0					
ANR	9161280	Callee	make_string		9161061	0					
ANR	9161281	Identifier	make_string		9161061	0					
ANR	9161282	ArgumentList	op - 1		9161061	1					
ANR	9161283	Argument	op - 1		9161061	0					
ANR	9161284	AdditiveExpression	op - 1		9161061	0		-			
ANR	9161285	Identifier	op		9161061	0					
ANR	9161286	PrimaryExpression	1		9161061	1					
ANR	9161287	Argument	a_all | icurrent_space		9161061	1					
ANR	9161288	InclusiveOrExpression	a_all | icurrent_space		9161061	0		|			
ANR	9161289	Identifier	a_all		9161061	0					
ANR	9161290	Identifier	icurrent_space		9161061	1					
ANR	9161291	Argument	len - 1		9161061	2					
ANR	9161292	AdditiveExpression	len - 1		9161061	0		-			
ANR	9161293	Identifier	len		9161061	0					
ANR	9161294	PrimaryExpression	1		9161061	1					
ANR	9161295	Argument	value		9161061	3					
ANR	9161296	Identifier	value		9161061	0					
ANR	9161297	ExpressionStatement	make_true ( op )	239:4:7346:7359	9161061	15	True				
ANR	9161298	CallExpression	make_true ( op )		9161061	0					
ANR	9161299	Callee	make_true		9161061	0					
ANR	9161300	Identifier	make_true		9161061	0					
ANR	9161301	ArgumentList	op		9161061	1					
ANR	9161302	Argument	op		9161061	0					
ANR	9161303	Identifier	op		9161061	0					
ANR	9161304	ReturnStatement	return 0 ;	240:4:7365:7373	9161061	16	True				
ANR	9161305	PrimaryExpression	0		9161061	0					
ANR	9161306	ReturnType	static int		9161061	1					
ANR	9161307	Identifier	zgetenv		9161061	2					
ANR	9161308	ParameterList	i_ctx_t * i_ctx_p		9161061	3					
ANR	9161309	Parameter	i_ctx_t * i_ctx_p	211:8:6379:6394	9161061	0	True				
ANR	9161310	ParameterType	i_ctx_t *		9161061	0					
ANR	9161311	Identifier	i_ctx_p		9161061	1					
ANR	9161312	CFGEntryNode	ENTRY		9161061		True				
ANR	9161313	CFGExitNode	EXIT		9161061		True				
ANR	9161314	Symbol	a_all		9161061						
ANR	9161315	Symbol	op		9161061						
ANR	9161316	Symbol	* op		9161061						
ANR	9161317	Symbol	iresize_string		9161061						
ANR	9161318	Symbol	gp_getenv		9161061						
ANR	9161319	Symbol	osp		9161061						
ANR	9161320	Symbol	ialloc_string		9161061						
ANR	9161321	Symbol	icurrent_space		9161061						
ANR	9161322	Symbol	str		9161061						
ANR	9161323	Symbol	ref_to_string		9161061						
ANR	9161324	Symbol	t_string		9161061						
ANR	9161325	Symbol	gs_error_VMerror		9161061						
ANR	9161326	Symbol	len		9161061						
ANR	9161327	Symbol	i_ctx_p		9161061						
ANR	9161328	Symbol	r_size		9161061						
ANR	9161329	Symbol	imemory		9161061						
ANR	9161330	Symbol	& len		9161061						
ANR	9161331	Symbol	value		9161061						
ANR	9161332	Function	zdefaultpapersize	245:0:7450:8186							
ANR	9161333	FunctionDef	zdefaultpapersize (i_ctx_t * i_ctx_p)		9161332	0					
ANR	9161334	CompoundStatement		247:0:7497:8186	9161332	0					
ANR	9161335	IdentifierDeclStatement	os_ptr op = osp ;	248:4:7503:7518	9161332	0	True				
ANR	9161336	IdentifierDecl	op = osp		9161332	0					
ANR	9161337	IdentifierDeclType	os_ptr		9161332	0					
ANR	9161338	Identifier	op		9161332	1					
ANR	9161339	AssignmentExpression	op = osp		9161332	2		=			
ANR	9161340	Identifier	osp		9161332	0					
ANR	9161341	Identifier	osp		9161332	1					
ANR	9161342	IdentifierDeclStatement	byte * value ;	249:4:7524:7535	9161332	1	True				
ANR	9161343	IdentifierDecl	* value		9161332	0					
ANR	9161344	IdentifierDeclType	byte *		9161332	0					
ANR	9161345	Identifier	value		9161332	1					
ANR	9161346	IdentifierDeclStatement	int len = 0 ;	250:4:7541:7552	9161332	2	True				
ANR	9161347	IdentifierDecl	len = 0		9161332	0					
ANR	9161348	IdentifierDeclType	int		9161332	0					
ANR	9161349	Identifier	len		9161332	1					
ANR	9161350	AssignmentExpression	len = 0		9161332	2		=			
ANR	9161351	Identifier	len		9161332	0					
ANR	9161352	PrimaryExpression	0		9161332	1					
ANR	9161353	IfStatement	"if ( gp_defaultpapersize ( ( char * ) 0 , & len ) > 0 )"		9161332	3					
ANR	9161354	Condition	"gp_defaultpapersize ( ( char * ) 0 , & len ) > 0"	252:8:7563:7602	9161332	0	True				
ANR	9161355	RelationalExpression	"gp_defaultpapersize ( ( char * ) 0 , & len ) > 0"		9161332	0		>			
ANR	9161356	CallExpression	"gp_defaultpapersize ( ( char * ) 0 , & len )"		9161332	0					
ANR	9161357	Callee	gp_defaultpapersize		9161332	0					
ANR	9161358	Identifier	gp_defaultpapersize		9161332	0					
ANR	9161359	ArgumentList	( char * ) 0		9161332	1					
ANR	9161360	Argument	( char * ) 0		9161332	0					
ANR	9161361	CastExpression	( char * ) 0		9161332	0					
ANR	9161362	CastTarget	char *		9161332	0					
ANR	9161363	PrimaryExpression	0		9161332	1					
ANR	9161364	Argument	& len		9161332	1					
ANR	9161365	UnaryOperationExpression	& len		9161332	0					
ANR	9161366	UnaryOperator	&		9161332	0					
ANR	9161367	Identifier	len		9161332	1					
ANR	9161368	PrimaryExpression	0		9161332	1					
ANR	9161369	CompoundStatement		6:50:107:107	9161332	1					
ANR	9161370	ExpressionStatement	push ( 1 )	254:8:7651:7658	9161332	0	True				
ANR	9161371	CallExpression	push ( 1 )		9161332	0					
ANR	9161372	Callee	push		9161332	0					
ANR	9161373	Identifier	push		9161332	0					
ANR	9161374	ArgumentList	1		9161332	1					
ANR	9161375	Argument	1		9161332	0					
ANR	9161376	PrimaryExpression	1		9161332	0					
ANR	9161377	ExpressionStatement	make_false ( op )	255:8:7668:7682	9161332	1	True				
ANR	9161378	CallExpression	make_false ( op )		9161332	0					
ANR	9161379	Callee	make_false		9161332	0					
ANR	9161380	Identifier	make_false		9161332	0					
ANR	9161381	ArgumentList	op		9161332	1					
ANR	9161382	Argument	op		9161332	0					
ANR	9161383	Identifier	op		9161332	0					
ANR	9161384	ReturnStatement	return 0 ;	256:8:7692:7700	9161332	2	True				
ANR	9161385	PrimaryExpression	0		9161332	0					
ANR	9161386	ExpressionStatement	"value = ialloc_string ( len , ""defaultpapersize value"" )"	259:4:7713:7765	9161332	4	True				
ANR	9161387	AssignmentExpression	"value = ialloc_string ( len , ""defaultpapersize value"" )"		9161332	0		=			
ANR	9161388	Identifier	value		9161332	0					
ANR	9161389	CallExpression	"ialloc_string ( len , ""defaultpapersize value"" )"		9161332	1					
ANR	9161390	Callee	ialloc_string		9161332	0					
ANR	9161391	Identifier	ialloc_string		9161332	0					
ANR	9161392	ArgumentList	len		9161332	1					
ANR	9161393	Argument	len		9161332	0					
ANR	9161394	Identifier	len		9161332	0					
ANR	9161395	Argument	"""defaultpapersize value"""		9161332	1					
ANR	9161396	PrimaryExpression	"""defaultpapersize value"""		9161332	0					
ANR	9161397	IfStatement	if ( value == 0 )		9161332	5					
ANR	9161398	Condition	value == 0	260:8:7775:7784	9161332	0	True				
ANR	9161399	EqualityExpression	value == 0		9161332	0		==			
ANR	9161400	Identifier	value		9161332	0					
ANR	9161401	PrimaryExpression	0		9161332	1					
ANR	9161402	CompoundStatement		14:20:289:289	9161332	1					
ANR	9161403	ExpressionStatement	return_error ( gs_error_VMerror )	261:8:7797:7827	9161332	0	True				
ANR	9161404	CallExpression	return_error ( gs_error_VMerror )		9161332	0					
ANR	9161405	Callee	return_error		9161332	0					
ANR	9161406	Identifier	return_error		9161332	0					
ANR	9161407	ArgumentList	gs_error_VMerror		9161332	1					
ANR	9161408	Argument	gs_error_VMerror		9161332	0					
ANR	9161409	Identifier	gs_error_VMerror		9161332	0					
ANR	9161410	ExpressionStatement	"DISCARD ( gp_defaultpapersize ( ( char * ) value , & len ) )"	263:4:7839:7888	9161332	6	True				
ANR	9161411	CallExpression	"DISCARD ( gp_defaultpapersize ( ( char * ) value , & len ) )"		9161332	0					
ANR	9161412	Callee	DISCARD		9161332	0					
ANR	9161413	Identifier	DISCARD		9161332	0					
ANR	9161414	ArgumentList	"gp_defaultpapersize ( ( char * ) value , & len )"		9161332	1					
ANR	9161415	Argument	"gp_defaultpapersize ( ( char * ) value , & len )"		9161332	0					
ANR	9161416	CallExpression	"gp_defaultpapersize ( ( char * ) value , & len )"		9161332	0					
ANR	9161417	Callee	gp_defaultpapersize		9161332	0					
ANR	9161418	Identifier	gp_defaultpapersize		9161332	0					
ANR	9161419	ArgumentList	( char * ) value		9161332	1					
ANR	9161420	Argument	( char * ) value		9161332	0					
ANR	9161421	CastExpression	( char * ) value		9161332	0					
ANR	9161422	CastTarget	char *		9161332	0					
ANR	9161423	Identifier	value		9161332	1					
ANR	9161424	Argument	& len		9161332	1					
ANR	9161425	UnaryOperationExpression	& len		9161332	0					
ANR	9161426	UnaryOperator	&		9161332	0					
ANR	9161427	Identifier	len		9161332	1					
ANR	9161428	ExpressionStatement	"value = iresize_string ( value , len , len - 1 , ""defaultpapersize value"" )"	265:4:7960:8056	9161332	7	True				
ANR	9161429	AssignmentExpression	"value = iresize_string ( value , len , len - 1 , ""defaultpapersize value"" )"		9161332	0		=			
ANR	9161430	Identifier	value		9161332	0					
ANR	9161431	CallExpression	"iresize_string ( value , len , len - 1 , ""defaultpapersize value"" )"		9161332	1					
ANR	9161432	Callee	iresize_string		9161332	0					
ANR	9161433	Identifier	iresize_string		9161332	0					
ANR	9161434	ArgumentList	value		9161332	1					
ANR	9161435	Argument	value		9161332	0					
ANR	9161436	Identifier	value		9161332	0					
ANR	9161437	Argument	len		9161332	1					
ANR	9161438	Identifier	len		9161332	0					
ANR	9161439	Argument	len - 1		9161332	2					
ANR	9161440	AdditiveExpression	len - 1		9161332	0		-			
ANR	9161441	Identifier	len		9161332	0					
ANR	9161442	PrimaryExpression	1		9161332	1					
ANR	9161443	Argument	"""defaultpapersize value"""		9161332	3					
ANR	9161444	PrimaryExpression	"""defaultpapersize value"""		9161332	0					
ANR	9161445	ExpressionStatement	push ( 2 )	267:4:8079:8086	9161332	8	True				
ANR	9161446	CallExpression	push ( 2 )		9161332	0					
ANR	9161447	Callee	push		9161332	0					
ANR	9161448	Identifier	push		9161332	0					
ANR	9161449	ArgumentList	2		9161332	1					
ANR	9161450	Argument	2		9161332	0					
ANR	9161451	PrimaryExpression	2		9161332	0					
ANR	9161452	ExpressionStatement	"make_string ( op - 1 , a_all | icurrent_space , len - 1 , value )"	268:4:8092:8151	9161332	9	True				
ANR	9161453	CallExpression	"make_string ( op - 1 , a_all | icurrent_space , len - 1 , value )"		9161332	0					
ANR	9161454	Callee	make_string		9161332	0					
ANR	9161455	Identifier	make_string		9161332	0					
ANR	9161456	ArgumentList	op - 1		9161332	1					
ANR	9161457	Argument	op - 1		9161332	0					
ANR	9161458	AdditiveExpression	op - 1		9161332	0		-			
ANR	9161459	Identifier	op		9161332	0					
ANR	9161460	PrimaryExpression	1		9161332	1					
ANR	9161461	Argument	a_all | icurrent_space		9161332	1					
ANR	9161462	InclusiveOrExpression	a_all | icurrent_space		9161332	0		|			
ANR	9161463	Identifier	a_all		9161332	0					
ANR	9161464	Identifier	icurrent_space		9161332	1					
ANR	9161465	Argument	len - 1		9161332	2					
ANR	9161466	AdditiveExpression	len - 1		9161332	0		-			
ANR	9161467	Identifier	len		9161332	0					
ANR	9161468	PrimaryExpression	1		9161332	1					
ANR	9161469	Argument	value		9161332	3					
ANR	9161470	Identifier	value		9161332	0					
ANR	9161471	ExpressionStatement	make_true ( op )	269:4:8157:8170	9161332	10	True				
ANR	9161472	CallExpression	make_true ( op )		9161332	0					
ANR	9161473	Callee	make_true		9161332	0					
ANR	9161474	Identifier	make_true		9161332	0					
ANR	9161475	ArgumentList	op		9161332	1					
ANR	9161476	Argument	op		9161332	0					
ANR	9161477	Identifier	op		9161332	0					
ANR	9161478	ReturnStatement	return 0 ;	270:4:8176:8184	9161332	11	True				
ANR	9161479	PrimaryExpression	0		9161332	0					
ANR	9161480	ReturnType	static int		9161332	1					
ANR	9161481	Identifier	zdefaultpapersize		9161332	2					
ANR	9161482	ParameterList	i_ctx_t * i_ctx_p		9161332	3					
ANR	9161483	Parameter	i_ctx_t * i_ctx_p	246:18:7479:7494	9161332	0	True				
ANR	9161484	ParameterType	i_ctx_t *		9161332	0					
ANR	9161485	Identifier	i_ctx_p		9161332	1					
ANR	9161486	CFGEntryNode	ENTRY		9161332		True				
ANR	9161487	CFGExitNode	EXIT		9161332		True				
ANR	9161488	Symbol	a_all		9161332						
ANR	9161489	Symbol	op		9161332						
ANR	9161490	Symbol	gs_error_VMerror		9161332						
ANR	9161491	Symbol	len		9161332						
ANR	9161492	Symbol	i_ctx_p		9161332						
ANR	9161493	Symbol	iresize_string		9161332						
ANR	9161494	Symbol	gp_defaultpapersize		9161332						
ANR	9161495	Symbol	& len		9161332						
ANR	9161496	Symbol	osp		9161332						
ANR	9161497	Symbol	value		9161332						
ANR	9161498	Symbol	ialloc_string		9161332						
ANR	9161499	Symbol	icurrent_space		9161332						
ANR	9161500	Function	zmakeoperator	274:0:8230:9534							
ANR	9161501	FunctionDef	zmakeoperator (i_ctx_t * i_ctx_p)		9161500	0					
ANR	9161502	CompoundStatement		276:0:8273:9534	9161500	0					
ANR	9161503	IdentifierDeclStatement	os_ptr op = osp ;	277:4:8279:8294	9161500	0	True				
ANR	9161504	IdentifierDecl	op = osp		9161500	0					
ANR	9161505	IdentifierDeclType	os_ptr		9161500	0					
ANR	9161506	Identifier	op		9161500	1					
ANR	9161507	AssignmentExpression	op = osp		9161500	2		=			
ANR	9161508	Identifier	osp		9161500	0					
ANR	9161509	Identifier	osp		9161500	1					
ANR	9161510	IdentifierDeclStatement	op_array_table * opt ;	278:4:8300:8319	9161500	1	True				
ANR	9161511	IdentifierDecl	* opt		9161500	0					
ANR	9161512	IdentifierDeclType	op_array_table *		9161500	0					
ANR	9161513	Identifier	opt		9161500	1					
ANR	9161514	IdentifierDeclStatement	uint count ;	279:4:8325:8335	9161500	2	True				
ANR	9161515	IdentifierDecl	count		9161500	0					
ANR	9161516	IdentifierDeclType	uint		9161500	0					
ANR	9161517	Identifier	count		9161500	1					
ANR	9161518	IdentifierDeclStatement	ref * tab ;	280:4:8341:8349	9161500	3	True				
ANR	9161519	IdentifierDecl	* tab		9161500	0					
ANR	9161520	IdentifierDeclType	ref *		9161500	0					
ANR	9161521	Identifier	tab		9161500	1					
ANR	9161522	ExpressionStatement	"check_type ( op [ - 1 ] , t_name )"	282:4:8356:8382	9161500	4	True				
ANR	9161523	CallExpression	"check_type ( op [ - 1 ] , t_name )"		9161500	0					
ANR	9161524	Callee	check_type		9161500	0					
ANR	9161525	Identifier	check_type		9161500	0					
ANR	9161526	ArgumentList	op [ - 1 ]		9161500	1					
ANR	9161527	Argument	op [ - 1 ]		9161500	0					
ANR	9161528	ArrayIndexing	op [ - 1 ]		9161500	0					
ANR	9161529	Identifier	op		9161500	0					
ANR	9161530	UnaryOperationExpression	- 1		9161500	1					
ANR	9161531	UnaryOperator	-		9161500	0					
ANR	9161532	PrimaryExpression	1		9161500	1					
ANR	9161533	Argument	t_name		9161500	1					
ANR	9161534	Identifier	t_name		9161500	0					
ANR	9161535	ExpressionStatement	check_proc ( * op )	283:4:8388:8403	9161500	5	True				
ANR	9161536	CallExpression	check_proc ( * op )		9161500	0					
ANR	9161537	Callee	check_proc		9161500	0					
ANR	9161538	Identifier	check_proc		9161500	0					
ANR	9161539	ArgumentList	* op		9161500	1					
ANR	9161540	Argument	* op		9161500	0					
ANR	9161541	UnaryOperationExpression	* op		9161500	0					
ANR	9161542	UnaryOperator	*		9161500	0					
ANR	9161543	Identifier	op		9161500	1					
ANR	9161544	SwitchStatement	switch ( r_space ( op ) )		9161500	6					
ANR	9161545	Condition	r_space ( op )	284:12:8417:8427	9161500	0	True				
ANR	9161546	CallExpression	r_space ( op )		9161500	0					
ANR	9161547	Callee	r_space		9161500	0					
ANR	9161548	Identifier	r_space		9161500	0					
ANR	9161549	ArgumentList	op		9161500	1					
ANR	9161550	Argument	op		9161500	0					
ANR	9161551	Identifier	op		9161500	0					
ANR	9161552	CompoundStatement		9:25:156:156	9161500	1					
ANR	9161553	Label	case avm_global :	285:8:8440:8455	9161500	0	True				
ANR	9161554	Identifier	avm_global		9161500	0					
ANR	9161555	ExpressionStatement	opt = & i_ctx_p -> op_array_table_global	286:12:8469:8506	9161500	1	True				
ANR	9161556	AssignmentExpression	opt = & i_ctx_p -> op_array_table_global		9161500	0		=			
ANR	9161557	Identifier	opt		9161500	0					
ANR	9161558	UnaryOperationExpression	& i_ctx_p -> op_array_table_global		9161500	1					
ANR	9161559	UnaryOperator	&		9161500	0					
ANR	9161560	PtrMemberAccess	i_ctx_p -> op_array_table_global		9161500	1					
ANR	9161561	Identifier	i_ctx_p		9161500	0					
ANR	9161562	Identifier	op_array_table_global		9161500	1					
ANR	9161563	BreakStatement	break ;	287:12:8520:8525	9161500	2	True				
ANR	9161564	Label	case avm_local :	288:8:8535:8549	9161500	3	True				
ANR	9161565	Identifier	avm_local		9161500	0					
ANR	9161566	ExpressionStatement	opt = & i_ctx_p -> op_array_table_local	289:12:8563:8599	9161500	4	True				
ANR	9161567	AssignmentExpression	opt = & i_ctx_p -> op_array_table_local		9161500	0		=			
ANR	9161568	Identifier	opt		9161500	0					
ANR	9161569	UnaryOperationExpression	& i_ctx_p -> op_array_table_local		9161500	1					
ANR	9161570	UnaryOperator	&		9161500	0					
ANR	9161571	PtrMemberAccess	i_ctx_p -> op_array_table_local		9161500	1					
ANR	9161572	Identifier	i_ctx_p		9161500	0					
ANR	9161573	Identifier	op_array_table_local		9161500	1					
ANR	9161574	BreakStatement	break ;	290:12:8613:8618	9161500	5	True				
ANR	9161575	Label	default :	291:8:8628:8635	9161500	6	True				
ANR	9161576	Identifier	default		9161500	0					
ANR	9161577	ExpressionStatement	return_error ( gs_error_invalidaccess )	292:12:8649:8685	9161500	7	True				
ANR	9161578	CallExpression	return_error ( gs_error_invalidaccess )		9161500	0					
ANR	9161579	Callee	return_error		9161500	0					
ANR	9161580	Identifier	return_error		9161500	0					
ANR	9161581	ArgumentList	gs_error_invalidaccess		9161500	1					
ANR	9161582	Argument	gs_error_invalidaccess		9161500	0					
ANR	9161583	Identifier	gs_error_invalidaccess		9161500	0					
ANR	9161584	ExpressionStatement	count = opt -> count	294:4:8697:8715	9161500	7	True				
ANR	9161585	AssignmentExpression	count = opt -> count		9161500	0		=			
ANR	9161586	Identifier	count		9161500	0					
ANR	9161587	PtrMemberAccess	opt -> count		9161500	1					
ANR	9161588	Identifier	opt		9161500	0					
ANR	9161589	Identifier	count		9161500	1					
ANR	9161590	ExpressionStatement	tab = opt -> table . value . refs	295:4:8721:8748	9161500	8	True				
ANR	9161591	AssignmentExpression	tab = opt -> table . value . refs		9161500	0		=			
ANR	9161592	Identifier	tab		9161500	0					
ANR	9161593	MemberAccess	opt -> table . value . refs		9161500	1					
ANR	9161594	MemberAccess	opt -> table . value		9161500	0					
ANR	9161595	PtrMemberAccess	opt -> table		9161500	0					
ANR	9161596	Identifier	opt		9161500	0					
ANR	9161597	Identifier	table		9161500	1					
ANR	9161598	Identifier	value		9161500	1					
ANR	9161599	Identifier	refs		9161500	1					
ANR	9161600	WhileStatement	"while ( count > 0 && r_has_type ( & tab [ count - 1 ] , t_null ) )"		9161500	9					
ANR	9161601	Condition	"count > 0 && r_has_type ( & tab [ count - 1 ] , t_null )"	304:11:9150:9197	9161500	0	True				
ANR	9161602	AndExpression	"count > 0 && r_has_type ( & tab [ count - 1 ] , t_null )"		9161500	0		&&			
ANR	9161603	RelationalExpression	count > 0		9161500	0		>			
ANR	9161604	Identifier	count		9161500	0					
ANR	9161605	PrimaryExpression	0		9161500	1					
ANR	9161606	CallExpression	"r_has_type ( & tab [ count - 1 ] , t_null )"		9161500	1					
ANR	9161607	Callee	r_has_type		9161500	0					
ANR	9161608	Identifier	r_has_type		9161500	0					
ANR	9161609	ArgumentList	& tab [ count - 1 ]		9161500	1					
ANR	9161610	Argument	& tab [ count - 1 ]		9161500	0					
ANR	9161611	UnaryOperationExpression	& tab [ count - 1 ]		9161500	0					
ANR	9161612	UnaryOperator	&		9161500	0					
ANR	9161613	ArrayIndexing	tab [ count - 1 ]		9161500	1					
ANR	9161614	Identifier	tab		9161500	0					
ANR	9161615	AdditiveExpression	count - 1		9161500	1		-			
ANR	9161616	Identifier	count		9161500	0					
ANR	9161617	PrimaryExpression	1		9161500	1					
ANR	9161618	Argument	t_null		9161500	1					
ANR	9161619	Identifier	t_null		9161500	0					
ANR	9161620	ExpressionStatement	-- count	305:8:9208:9215	9161500	1	True				
ANR	9161621	UnaryExpression	-- count		9161500	0					
ANR	9161622	IncDec	--		9161500	0					
ANR	9161623	Identifier	count		9161500	1					
ANR	9161624	IfStatement	if ( count == r_size ( & opt -> table ) )		9161500	10					
ANR	9161625	Condition	count == r_size ( & opt -> table )	306:8:9225:9252	9161500	0	True				
ANR	9161626	EqualityExpression	count == r_size ( & opt -> table )		9161500	0		==			
ANR	9161627	Identifier	count		9161500	0					
ANR	9161628	CallExpression	r_size ( & opt -> table )		9161500	1					
ANR	9161629	Callee	r_size		9161500	0					
ANR	9161630	Identifier	r_size		9161500	0					
ANR	9161631	ArgumentList	& opt -> table		9161500	1					
ANR	9161632	Argument	& opt -> table		9161500	0					
ANR	9161633	UnaryOperationExpression	& opt -> table		9161500	0					
ANR	9161634	UnaryOperator	&		9161500	0					
ANR	9161635	PtrMemberAccess	opt -> table		9161500	1					
ANR	9161636	Identifier	opt		9161500	0					
ANR	9161637	Identifier	table		9161500	1					
ANR	9161638	ExpressionStatement	return_error ( gs_error_limitcheck )	307:8:9263:9296	9161500	1	True				
ANR	9161639	CallExpression	return_error ( gs_error_limitcheck )		9161500	0					
ANR	9161640	Callee	return_error		9161500	0					
ANR	9161641	Identifier	return_error		9161500	0					
ANR	9161642	ArgumentList	gs_error_limitcheck		9161500	1					
ANR	9161643	Argument	gs_error_limitcheck		9161500	0					
ANR	9161644	Identifier	gs_error_limitcheck		9161500	0					
ANR	9161645	ExpressionStatement	"ref_assign_old ( & opt -> table , & tab [ count ] , op , ""makeoperator"" )"	308:4:9302:9362	9161500	11	True				
ANR	9161646	CallExpression	"ref_assign_old ( & opt -> table , & tab [ count ] , op , ""makeoperator"" )"		9161500	0					
ANR	9161647	Callee	ref_assign_old		9161500	0					
ANR	9161648	Identifier	ref_assign_old		9161500	0					
ANR	9161649	ArgumentList	& opt -> table		9161500	1					
ANR	9161650	Argument	& opt -> table		9161500	0					
ANR	9161651	UnaryOperationExpression	& opt -> table		9161500	0					
ANR	9161652	UnaryOperator	&		9161500	0					
ANR	9161653	PtrMemberAccess	opt -> table		9161500	1					
ANR	9161654	Identifier	opt		9161500	0					
ANR	9161655	Identifier	table		9161500	1					
ANR	9161656	Argument	& tab [ count ]		9161500	1					
ANR	9161657	UnaryOperationExpression	& tab [ count ]		9161500	0					
ANR	9161658	UnaryOperator	&		9161500	0					
ANR	9161659	ArrayIndexing	tab [ count ]		9161500	1					
ANR	9161660	Identifier	tab		9161500	0					
ANR	9161661	Identifier	count		9161500	1					
ANR	9161662	Argument	op		9161500	2					
ANR	9161663	Identifier	op		9161500	0					
ANR	9161664	Argument	"""makeoperator"""		9161500	3					
ANR	9161665	PrimaryExpression	"""makeoperator"""		9161500	0					
ANR	9161666	ExpressionStatement	"opt -> nx_table [ count ] = name_index ( imemory , op - 1 )"	309:4:9368:9418	9161500	12	True				
ANR	9161667	AssignmentExpression	"opt -> nx_table [ count ] = name_index ( imemory , op - 1 )"		9161500	0		=			
ANR	9161668	ArrayIndexing	opt -> nx_table [ count ]		9161500	0					
ANR	9161669	PtrMemberAccess	opt -> nx_table		9161500	0					
ANR	9161670	Identifier	opt		9161500	0					
ANR	9161671	Identifier	nx_table		9161500	1					
ANR	9161672	Identifier	count		9161500	1					
ANR	9161673	CallExpression	"name_index ( imemory , op - 1 )"		9161500	1					
ANR	9161674	Callee	name_index		9161500	0					
ANR	9161675	Identifier	name_index		9161500	0					
ANR	9161676	ArgumentList	imemory		9161500	1					
ANR	9161677	Argument	imemory		9161500	0					
ANR	9161678	Identifier	imemory		9161500	0					
ANR	9161679	Argument	op - 1		9161500	1					
ANR	9161680	AdditiveExpression	op - 1		9161500	0		-			
ANR	9161681	Identifier	op		9161500	0					
ANR	9161682	PrimaryExpression	1		9161500	1					
ANR	9161683	ExpressionStatement	"op_index_ref ( imemory , opt -> base_index + count , op - 1 )"	310:4:9424:9478	9161500	13	True				
ANR	9161684	CallExpression	"op_index_ref ( imemory , opt -> base_index + count , op - 1 )"		9161500	0					
ANR	9161685	Callee	op_index_ref		9161500	0					
ANR	9161686	Identifier	op_index_ref		9161500	0					
ANR	9161687	ArgumentList	imemory		9161500	1					
ANR	9161688	Argument	imemory		9161500	0					
ANR	9161689	Identifier	imemory		9161500	0					
ANR	9161690	Argument	opt -> base_index + count		9161500	1					
ANR	9161691	AdditiveExpression	opt -> base_index + count		9161500	0		+			
ANR	9161692	PtrMemberAccess	opt -> base_index		9161500	0					
ANR	9161693	Identifier	opt		9161500	0					
ANR	9161694	Identifier	base_index		9161500	1					
ANR	9161695	Identifier	count		9161500	1					
ANR	9161696	Argument	op - 1		9161500	2					
ANR	9161697	AdditiveExpression	op - 1		9161500	0		-			
ANR	9161698	Identifier	op		9161500	0					
ANR	9161699	PrimaryExpression	1		9161500	1					
ANR	9161700	ExpressionStatement	opt -> count = count + 1	311:4:9484:9506	9161500	14	True				
ANR	9161701	AssignmentExpression	opt -> count = count + 1		9161500	0		=			
ANR	9161702	PtrMemberAccess	opt -> count		9161500	0					
ANR	9161703	Identifier	opt		9161500	0					
ANR	9161704	Identifier	count		9161500	1					
ANR	9161705	AdditiveExpression	count + 1		9161500	1		+			
ANR	9161706	Identifier	count		9161500	0					
ANR	9161707	PrimaryExpression	1		9161500	1					
ANR	9161708	ExpressionStatement	pop ( 1 )	312:4:9512:9518	9161500	15	True				
ANR	9161709	CallExpression	pop ( 1 )		9161500	0					
ANR	9161710	Callee	pop		9161500	0					
ANR	9161711	Identifier	pop		9161500	0					
ANR	9161712	ArgumentList	1		9161500	1					
ANR	9161713	Argument	1		9161500	0					
ANR	9161714	PrimaryExpression	1		9161500	0					
ANR	9161715	ReturnStatement	return 0 ;	313:4:9524:9532	9161500	16	True				
ANR	9161716	PrimaryExpression	0		9161500	0					
ANR	9161717	ReturnType	static int		9161500	1					
ANR	9161718	Identifier	zmakeoperator		9161500	2					
ANR	9161719	ParameterList	i_ctx_t * i_ctx_p		9161500	3					
ANR	9161720	Parameter	i_ctx_t * i_ctx_p	275:14:8255:8270	9161500	0	True				
ANR	9161721	ParameterType	i_ctx_t *		9161500	0					
ANR	9161722	Identifier	i_ctx_p		9161500	1					
ANR	9161723	CFGEntryNode	ENTRY		9161500		True				
ANR	9161724	CFGExitNode	EXIT		9161500		True				
ANR	9161725	Symbol	opt -> table		9161500						
ANR	9161726	Symbol	& i_ctx_p -> op_array_table_local		9161500						
ANR	9161727	Symbol	* op		9161500						
ANR	9161728	Symbol	* * opt		9161500						
ANR	9161729	Symbol	& i_ctx_p -> op_array_table_global		9161500						
ANR	9161730	Symbol	osp		9161500						
ANR	9161731	Symbol	* count		9161500						
ANR	9161732	Symbol	r_space		9161500						
ANR	9161733	Symbol	r_has_type		9161500						
ANR	9161734	Symbol	t_null		9161500						
ANR	9161735	Symbol	tab		9161500						
ANR	9161736	Symbol	t_name		9161500						
ANR	9161737	Symbol	r_size		9161500						
ANR	9161738	Symbol	gs_error_limitcheck		9161500						
ANR	9161739	Symbol	name_index		9161500						
ANR	9161740	Symbol	opt -> nx_table		9161500						
ANR	9161741	Symbol	gs_error_invalidaccess		9161500						
ANR	9161742	Symbol	opt -> table . value		9161500						
ANR	9161743	Symbol	imemory		9161500						
ANR	9161744	Symbol	* opt		9161500						
ANR	9161745	Symbol	& opt -> table		9161500						
ANR	9161746	Symbol	op		9161500						
ANR	9161747	Symbol	opt -> table . value . refs		9161500						
ANR	9161748	Symbol	opt -> base_index		9161500						
ANR	9161749	Symbol	count		9161500						
ANR	9161750	Symbol	opt -> count		9161500						
ANR	9161751	Symbol	opt		9161500						
ANR	9161752	Symbol	i_ctx_p		9161500						
ANR	9161753	Symbol	* opt -> nx_table		9161500						
ANR	9161754	Function	zoserrno	317:0:9560:9674							
ANR	9161755	FunctionDef	zoserrno (i_ctx_t * i_ctx_p)		9161754	0					
ANR	9161756	CompoundStatement		319:0:9598:9674	9161754	0					
ANR	9161757	IdentifierDeclStatement	os_ptr op = osp ;	320:4:9604:9619	9161754	0	True				
ANR	9161758	IdentifierDecl	op = osp		9161754	0					
ANR	9161759	IdentifierDeclType	os_ptr		9161754	0					
ANR	9161760	Identifier	op		9161754	1					
ANR	9161761	AssignmentExpression	op = osp		9161754	2		=			
ANR	9161762	Identifier	osp		9161754	0					
ANR	9161763	Identifier	osp		9161754	1					
ANR	9161764	ExpressionStatement	push ( 1 )	322:4:9626:9633	9161754	1	True				
ANR	9161765	CallExpression	push ( 1 )		9161754	0					
ANR	9161766	Callee	push		9161754	0					
ANR	9161767	Identifier	push		9161754	0					
ANR	9161768	ArgumentList	1		9161754	1					
ANR	9161769	Argument	1		9161754	0					
ANR	9161770	PrimaryExpression	1		9161754	0					
ANR	9161771	ExpressionStatement	"make_int ( op , errno )"	323:4:9639:9658	9161754	2	True				
ANR	9161772	CallExpression	"make_int ( op , errno )"		9161754	0					
ANR	9161773	Callee	make_int		9161754	0					
ANR	9161774	Identifier	make_int		9161754	0					
ANR	9161775	ArgumentList	op		9161754	1					
ANR	9161776	Argument	op		9161754	0					
ANR	9161777	Identifier	op		9161754	0					
ANR	9161778	Argument	errno		9161754	1					
ANR	9161779	Identifier	errno		9161754	0					
ANR	9161780	ReturnStatement	return 0 ;	324:4:9664:9672	9161754	3	True				
ANR	9161781	PrimaryExpression	0		9161754	0					
ANR	9161782	ReturnType	static int		9161754	1					
ANR	9161783	Identifier	zoserrno		9161754	2					
ANR	9161784	ParameterList	i_ctx_t * i_ctx_p		9161754	3					
ANR	9161785	Parameter	i_ctx_t * i_ctx_p	318:9:9580:9595	9161754	0	True				
ANR	9161786	ParameterType	i_ctx_t *		9161754	0					
ANR	9161787	Identifier	i_ctx_p		9161754	1					
ANR	9161788	CFGEntryNode	ENTRY		9161754		True				
ANR	9161789	CFGExitNode	EXIT		9161754		True				
ANR	9161790	Symbol	op		9161754						
ANR	9161791	Symbol	errno		9161754						
ANR	9161792	Symbol	i_ctx_p		9161754						
ANR	9161793	Symbol	osp		9161754						
ANR	9161794	Function	zsetoserrno	328:0:9703:9856							
ANR	9161795	FunctionDef	zsetoserrno (i_ctx_t * i_ctx_p)		9161794	0					
ANR	9161796	CompoundStatement		330:0:9744:9856	9161794	0					
ANR	9161797	IdentifierDeclStatement	os_ptr op = osp ;	331:4:9750:9765	9161794	0	True				
ANR	9161798	IdentifierDecl	op = osp		9161794	0					
ANR	9161799	IdentifierDeclType	os_ptr		9161794	0					
ANR	9161800	Identifier	op		9161794	1					
ANR	9161801	AssignmentExpression	op = osp		9161794	2		=			
ANR	9161802	Identifier	osp		9161794	0					
ANR	9161803	Identifier	osp		9161794	1					
ANR	9161804	ExpressionStatement	"check_type ( * op , t_integer )"	333:4:9772:9798	9161794	1	True				
ANR	9161805	CallExpression	"check_type ( * op , t_integer )"		9161794	0					
ANR	9161806	Callee	check_type		9161794	0					
ANR	9161807	Identifier	check_type		9161794	0					
ANR	9161808	ArgumentList	* op		9161794	1					
ANR	9161809	Argument	* op		9161794	0					
ANR	9161810	UnaryOperationExpression	* op		9161794	0					
ANR	9161811	UnaryOperator	*		9161794	0					
ANR	9161812	Identifier	op		9161794	1					
ANR	9161813	Argument	t_integer		9161794	1					
ANR	9161814	Identifier	t_integer		9161794	0					
ANR	9161815	ExpressionStatement	errno = op -> value . intval	334:4:9804:9828	9161794	2	True				
ANR	9161816	AssignmentExpression	errno = op -> value . intval		9161794	0		=			
ANR	9161817	Identifier	errno		9161794	0					
ANR	9161818	MemberAccess	op -> value . intval		9161794	1					
ANR	9161819	PtrMemberAccess	op -> value		9161794	0					
ANR	9161820	Identifier	op		9161794	0					
ANR	9161821	Identifier	value		9161794	1					
ANR	9161822	Identifier	intval		9161794	1					
ANR	9161823	ExpressionStatement	pop ( 1 )	335:4:9834:9840	9161794	3	True				
ANR	9161824	CallExpression	pop ( 1 )		9161794	0					
ANR	9161825	Callee	pop		9161794	0					
ANR	9161826	Identifier	pop		9161794	0					
ANR	9161827	ArgumentList	1		9161794	1					
ANR	9161828	Argument	1		9161794	0					
ANR	9161829	PrimaryExpression	1		9161794	0					
ANR	9161830	ReturnStatement	return 0 ;	336:4:9846:9854	9161794	4	True				
ANR	9161831	PrimaryExpression	0		9161794	0					
ANR	9161832	ReturnType	static int		9161794	1					
ANR	9161833	Identifier	zsetoserrno		9161794	2					
ANR	9161834	ParameterList	i_ctx_t * i_ctx_p		9161794	3					
ANR	9161835	Parameter	i_ctx_t * i_ctx_p	329:12:9726:9741	9161794	0	True				
ANR	9161836	ParameterType	i_ctx_t *		9161794	0					
ANR	9161837	Identifier	i_ctx_p		9161794	1					
ANR	9161838	CFGEntryNode	ENTRY		9161794		True				
ANR	9161839	CFGExitNode	EXIT		9161794		True				
ANR	9161840	Symbol	op		9161794						
ANR	9161841	Symbol	errno		9161794						
ANR	9161842	Symbol	* op		9161794						
ANR	9161843	Symbol	t_integer		9161794						
ANR	9161844	Symbol	i_ctx_p		9161794						
ANR	9161845	Symbol	op -> value		9161794						
ANR	9161846	Symbol	osp		9161794						
ANR	9161847	Symbol	op -> value . intval		9161794						
ANR	9161848	Function	zoserrorstring	341:0:9933:10595							
ANR	9161849	FunctionDef	zoserrorstring (i_ctx_t * i_ctx_p)		9161848	0					
ANR	9161850	CompoundStatement		343:0:9977:10595	9161848	0					
ANR	9161851	IdentifierDeclStatement	os_ptr op = osp ;	344:4:9983:9998	9161848	0	True				
ANR	9161852	IdentifierDecl	op = osp		9161848	0					
ANR	9161853	IdentifierDeclType	os_ptr		9161848	0					
ANR	9161854	Identifier	op		9161848	1					
ANR	9161855	AssignmentExpression	op = osp		9161848	2		=			
ANR	9161856	Identifier	osp		9161848	0					
ANR	9161857	Identifier	osp		9161848	1					
ANR	9161858	IdentifierDeclStatement	const char * str ;	345:4:10004:10019	9161848	1	True				
ANR	9161859	IdentifierDecl	* str		9161848	0					
ANR	9161860	IdentifierDeclType	const char *		9161848	0					
ANR	9161861	Identifier	str		9161848	1					
ANR	9161862	IdentifierDeclStatement	int code ;	346:4:10025:10033	9161848	2	True				
ANR	9161863	IdentifierDecl	code		9161848	0					
ANR	9161864	IdentifierDeclType	int		9161848	0					
ANR	9161865	Identifier	code		9161848	1					
ANR	9161866	IdentifierDeclStatement	uint len ;	347:4:10039:10047	9161848	3	True				
ANR	9161867	IdentifierDecl	len		9161848	0					
ANR	9161868	IdentifierDeclType	uint		9161848	0					
ANR	9161869	Identifier	len		9161848	1					
ANR	9161870	IdentifierDeclStatement	byte ch ;	348:4:10053:10060	9161848	4	True				
ANR	9161871	IdentifierDecl	ch		9161848	0					
ANR	9161872	IdentifierDeclType	byte		9161848	0					
ANR	9161873	Identifier	ch		9161848	1					
ANR	9161874	ExpressionStatement	"check_type ( * op , t_integer )"	350:4:10067:10093	9161848	5	True				
ANR	9161875	CallExpression	"check_type ( * op , t_integer )"		9161848	0					
ANR	9161876	Callee	check_type		9161848	0					
ANR	9161877	Identifier	check_type		9161848	0					
ANR	9161878	ArgumentList	* op		9161848	1					
ANR	9161879	Argument	* op		9161848	0					
ANR	9161880	UnaryOperationExpression	* op		9161848	0					
ANR	9161881	UnaryOperator	*		9161848	0					
ANR	9161882	Identifier	op		9161848	1					
ANR	9161883	Argument	t_integer		9161848	1					
ANR	9161884	Identifier	t_integer		9161848	0					
ANR	9161885	ExpressionStatement	str = gp_strerror ( ( int ) op -> value . intval )	351:4:10099:10139	9161848	6	True				
ANR	9161886	AssignmentExpression	str = gp_strerror ( ( int ) op -> value . intval )		9161848	0		=			
ANR	9161887	Identifier	str		9161848	0					
ANR	9161888	CallExpression	gp_strerror ( ( int ) op -> value . intval )		9161848	1					
ANR	9161889	Callee	gp_strerror		9161848	0					
ANR	9161890	Identifier	gp_strerror		9161848	0					
ANR	9161891	ArgumentList	( int ) op -> value . intval		9161848	1					
ANR	9161892	Argument	( int ) op -> value . intval		9161848	0					
ANR	9161893	CastExpression	( int ) op -> value . intval		9161848	0					
ANR	9161894	CastTarget	int		9161848	0					
ANR	9161895	MemberAccess	op -> value . intval		9161848	1					
ANR	9161896	PtrMemberAccess	op -> value		9161848	0					
ANR	9161897	Identifier	op		9161848	0					
ANR	9161898	Identifier	value		9161848	1					
ANR	9161899	Identifier	intval		9161848	1					
ANR	9161900	IfStatement	if ( str == 0 || ( len = strlen ( str ) ) == 0 )		9161848	7					
ANR	9161901	Condition	str == 0 || ( len = strlen ( str ) ) == 0	352:8:10149:10184	9161848	0	True				
ANR	9161902	OrExpression	str == 0 || ( len = strlen ( str ) ) == 0		9161848	0		||			
ANR	9161903	EqualityExpression	str == 0		9161848	0		==			
ANR	9161904	Identifier	str		9161848	0					
ANR	9161905	PrimaryExpression	0		9161848	1					
ANR	9161906	EqualityExpression	( len = strlen ( str ) ) == 0		9161848	1		==			
ANR	9161907	AssignmentExpression	len = strlen ( str )		9161848	0		=			
ANR	9161908	Identifier	len		9161848	0					
ANR	9161909	CallExpression	strlen ( str )		9161848	1					
ANR	9161910	Callee	strlen		9161848	0					
ANR	9161911	Identifier	strlen		9161848	0					
ANR	9161912	ArgumentList	str		9161848	1					
ANR	9161913	Argument	str		9161848	0					
ANR	9161914	Identifier	str		9161848	0					
ANR	9161915	PrimaryExpression	0		9161848	1					
ANR	9161916	CompoundStatement		10:46:209:209	9161848	1					
ANR	9161917	ExpressionStatement	make_false ( op )	353:8:10197:10211	9161848	0	True				
ANR	9161918	CallExpression	make_false ( op )		9161848	0					
ANR	9161919	Callee	make_false		9161848	0					
ANR	9161920	Identifier	make_false		9161848	0					
ANR	9161921	ArgumentList	op		9161848	1					
ANR	9161922	Argument	op		9161848	0					
ANR	9161923	Identifier	op		9161848	0					
ANR	9161924	ReturnStatement	return 0 ;	354:8:10221:10229	9161848	1	True				
ANR	9161925	PrimaryExpression	0		9161848	0					
ANR	9161926	ExpressionStatement	check_ostack ( 1 )	356:4:10241:10256	9161848	8	True				
ANR	9161927	CallExpression	check_ostack ( 1 )		9161848	0					
ANR	9161928	Callee	check_ostack		9161848	0					
ANR	9161929	Identifier	check_ostack		9161848	0					
ANR	9161930	ArgumentList	1		9161848	1					
ANR	9161931	Argument	1		9161848	0					
ANR	9161932	PrimaryExpression	1		9161848	0					
ANR	9161933	ExpressionStatement	"code = string_to_ref ( str , op , iimemory , "".oserrorstring"" )"	357:4:10262:10319	9161848	9	True				
ANR	9161934	AssignmentExpression	"code = string_to_ref ( str , op , iimemory , "".oserrorstring"" )"		9161848	0		=			
ANR	9161935	Identifier	code		9161848	0					
ANR	9161936	CallExpression	"string_to_ref ( str , op , iimemory , "".oserrorstring"" )"		9161848	1					
ANR	9161937	Callee	string_to_ref		9161848	0					
ANR	9161938	Identifier	string_to_ref		9161848	0					
ANR	9161939	ArgumentList	str		9161848	1					
ANR	9161940	Argument	str		9161848	0					
ANR	9161941	Identifier	str		9161848	0					
ANR	9161942	Argument	op		9161848	1					
ANR	9161943	Identifier	op		9161848	0					
ANR	9161944	Argument	iimemory		9161848	2					
ANR	9161945	Identifier	iimemory		9161848	0					
ANR	9161946	Argument	""".oserrorstring"""		9161848	3					
ANR	9161947	PrimaryExpression	""".oserrorstring"""		9161848	0					
ANR	9161948	IfStatement	if ( code < 0 )		9161848	10					
ANR	9161949	Condition	code < 0	358:8:10329:10336	9161848	0	True				
ANR	9161950	RelationalExpression	code < 0		9161848	0		<			
ANR	9161951	Identifier	code		9161848	0					
ANR	9161952	PrimaryExpression	0		9161848	1					
ANR	9161953	ReturnStatement	return code ;	359:8:10347:10358	9161848	1	True				
ANR	9161954	Identifier	code		9161848	0					
ANR	9161955	WhileStatement	while ( ( len = r_size ( op ) ) != 0 && ( ( ch = op -> value . bytes [ -- len ] ) == '\\r' || ch == '\\n' ) )		9161848	11					
ANR	9161956	Condition	( len = r_size ( op ) ) != 0 && ( ( ch = op -> value . bytes [ -- len ] ) == '\\r' || ch == '\\n' )	361:11:10420:10510	9161848	0	True				
ANR	9161957	AndExpression	( len = r_size ( op ) ) != 0 && ( ( ch = op -> value . bytes [ -- len ] ) == '\\r' || ch == '\\n' )		9161848	0		&&			
ANR	9161958	EqualityExpression	( len = r_size ( op ) ) != 0		9161848	0		!=			
ANR	9161959	AssignmentExpression	len = r_size ( op )		9161848	0		=			
ANR	9161960	Identifier	len		9161848	0					
ANR	9161961	CallExpression	r_size ( op )		9161848	1					
ANR	9161962	Callee	r_size		9161848	0					
ANR	9161963	Identifier	r_size		9161848	0					
ANR	9161964	ArgumentList	op		9161848	1					
ANR	9161965	Argument	op		9161848	0					
ANR	9161966	Identifier	op		9161848	0					
ANR	9161967	PrimaryExpression	0		9161848	1					
ANR	9161968	OrExpression	( ch = op -> value . bytes [ -- len ] ) == '\\r' || ch == '\\n'		9161848	1		||			
ANR	9161969	EqualityExpression	( ch = op -> value . bytes [ -- len ] ) == '\\r'		9161848	0		==			
ANR	9161970	AssignmentExpression	ch = op -> value . bytes [ -- len ]		9161848	0		=			
ANR	9161971	Identifier	ch		9161848	0					
ANR	9161972	ArrayIndexing	op -> value . bytes [ -- len ]		9161848	1					
ANR	9161973	MemberAccess	op -> value . bytes		9161848	0					
ANR	9161974	PtrMemberAccess	op -> value		9161848	0					
ANR	9161975	Identifier	op		9161848	0					
ANR	9161976	Identifier	value		9161848	1					
ANR	9161977	Identifier	bytes		9161848	1					
ANR	9161978	UnaryExpression	-- len		9161848	1					
ANR	9161979	IncDec	--		9161848	0					
ANR	9161980	Identifier	len		9161848	1					
ANR	9161981	PrimaryExpression	'\\r'		9161848	1					
ANR	9161982	EqualityExpression	ch == '\\n'		9161848	1		==			
ANR	9161983	Identifier	ch		9161848	0					
ANR	9161984	PrimaryExpression	'\\n'		9161848	1					
ANR	9161985	ExpressionStatement	"r_dec_size ( op , 1 )"	364:8:10530:10547	9161848	1	True				
ANR	9161986	CallExpression	"r_dec_size ( op , 1 )"		9161848	0					
ANR	9161987	Callee	r_dec_size		9161848	0					
ANR	9161988	Identifier	r_dec_size		9161848	0					
ANR	9161989	ArgumentList	op		9161848	1					
ANR	9161990	Argument	op		9161848	0					
ANR	9161991	Identifier	op		9161848	0					
ANR	9161992	Argument	1		9161848	1					
ANR	9161993	PrimaryExpression	1		9161848	0					
ANR	9161994	ExpressionStatement	push ( 1 )	365:4:10553:10560	9161848	12	True				
ANR	9161995	CallExpression	push ( 1 )		9161848	0					
ANR	9161996	Callee	push		9161848	0					
ANR	9161997	Identifier	push		9161848	0					
ANR	9161998	ArgumentList	1		9161848	1					
ANR	9161999	Argument	1		9161848	0					
ANR	9162000	PrimaryExpression	1		9161848	0					
ANR	9162001	ExpressionStatement	make_true ( op )	366:4:10566:10579	9161848	13	True				
ANR	9162002	CallExpression	make_true ( op )		9161848	0					
ANR	9162003	Callee	make_true		9161848	0					
ANR	9162004	Identifier	make_true		9161848	0					
ANR	9162005	ArgumentList	op		9161848	1					
ANR	9162006	Argument	op		9161848	0					
ANR	9162007	Identifier	op		9161848	0					
ANR	9162008	ReturnStatement	return 0 ;	367:4:10585:10593	9161848	14	True				
ANR	9162009	PrimaryExpression	0		9161848	0					
ANR	9162010	ReturnType	static int		9161848	1					
ANR	9162011	Identifier	zoserrorstring		9161848	2					
ANR	9162012	ParameterList	i_ctx_t * i_ctx_p		9161848	3					
ANR	9162013	Parameter	i_ctx_t * i_ctx_p	342:15:9959:9974	9161848	0	True				
ANR	9162014	ParameterType	i_ctx_t *		9161848	0					
ANR	9162015	Identifier	i_ctx_p		9161848	1					
ANR	9162016	CFGEntryNode	ENTRY		9161848		True				
ANR	9162017	CFGExitNode	EXIT		9161848		True				
ANR	9162018	Symbol	string_to_ref		9161848						
ANR	9162019	Symbol	* op -> value		9161848						
ANR	9162020	Symbol	op		9161848						
ANR	9162021	Symbol	code		9161848						
ANR	9162022	Symbol	* op		9161848						
ANR	9162023	Symbol	* op -> value . bytes		9161848						
ANR	9162024	Symbol	ch		9161848						
ANR	9162025	Symbol	osp		9161848						
ANR	9162026	Symbol	iimemory		9161848						
ANR	9162027	Symbol	* * op		9161848						
ANR	9162028	Symbol	str		9161848						
ANR	9162029	Symbol	strlen		9161848						
ANR	9162030	Symbol	len		9161848						
ANR	9162031	Symbol	t_integer		9161848						
ANR	9162032	Symbol	i_ctx_p		9161848						
ANR	9162033	Symbol	op -> value		9161848						
ANR	9162034	Symbol	r_size		9161848						
ANR	9162035	Symbol	op -> value . bytes		9161848						
ANR	9162036	Symbol	gp_strerror		9161848						
ANR	9162037	Symbol	op -> value . intval		9161848						
ANR	9162038	Symbol	* len		9161848						
ANR	9162039	Function	zsetdebug	371:0:10632:10951							
ANR	9162040	FunctionDef	zsetdebug (i_ctx_t * i_ctx_p)		9162039	0					
ANR	9162041	CompoundStatement		373:0:10671:10951	9162039	0					
ANR	9162042	IdentifierDeclStatement	os_ptr op = osp ;	374:4:10677:10692	9162039	0	True				
ANR	9162043	IdentifierDecl	op = osp		9162039	0					
ANR	9162044	IdentifierDeclType	os_ptr		9162039	0					
ANR	9162045	Identifier	op		9162039	1					
ANR	9162046	AssignmentExpression	op = osp		9162039	2		=			
ANR	9162047	Identifier	osp		9162039	0					
ANR	9162048	Identifier	osp		9162039	1					
ANR	9162049	ExpressionStatement	"check_read_type ( op [ - 1 ] , t_string )"	375:4:10698:10731	9162039	1	True				
ANR	9162050	CallExpression	"check_read_type ( op [ - 1 ] , t_string )"		9162039	0					
ANR	9162051	Callee	check_read_type		9162039	0					
ANR	9162052	Identifier	check_read_type		9162039	0					
ANR	9162053	ArgumentList	op [ - 1 ]		9162039	1					
ANR	9162054	Argument	op [ - 1 ]		9162039	0					
ANR	9162055	ArrayIndexing	op [ - 1 ]		9162039	0					
ANR	9162056	Identifier	op		9162039	0					
ANR	9162057	UnaryOperationExpression	- 1		9162039	1					
ANR	9162058	UnaryOperator	-		9162039	0					
ANR	9162059	PrimaryExpression	1		9162039	1					
ANR	9162060	Argument	t_string		9162039	1					
ANR	9162061	Identifier	t_string		9162039	0					
ANR	9162062	ExpressionStatement	"check_type ( * op , t_boolean )"	376:4:10737:10763	9162039	2	True				
ANR	9162063	CallExpression	"check_type ( * op , t_boolean )"		9162039	0					
ANR	9162064	Callee	check_type		9162039	0					
ANR	9162065	Identifier	check_type		9162039	0					
ANR	9162066	ArgumentList	* op		9162039	1					
ANR	9162067	Argument	* op		9162039	0					
ANR	9162068	UnaryOperationExpression	* op		9162039	0					
ANR	9162069	UnaryOperator	*		9162039	0					
ANR	9162070	Identifier	op		9162039	1					
ANR	9162071	Argument	t_boolean		9162039	1					
ANR	9162072	Identifier	t_boolean		9162039	0					
ANR	9162073	CompoundStatement		6:8:107:112	9162039	3					
ANR	9162074	IdentifierDeclStatement	int i ;	378:8:10779:10784	9162039	0	True				
ANR	9162075	IdentifierDecl	i		9162039	0					
ANR	9162076	IdentifierDeclType	int		9162039	0					
ANR	9162077	Identifier	i		9162039	1					
ANR	9162078	ForStatement	for ( i = 0 ; i < r_size ( op - 1 ) ; i ++ )		9162039	1					
ANR	9162079	ForInit	i = 0 ;	380:13:10800:10805	9162039	0	True				
ANR	9162080	AssignmentExpression	i = 0		9162039	0		=			
ANR	9162081	Identifier	i		9162039	0					
ANR	9162082	PrimaryExpression	0		9162039	1					
ANR	9162083	Condition	i < r_size ( op - 1 )	380:20:10807:10824	9162039	1	True				
ANR	9162084	RelationalExpression	i < r_size ( op - 1 )		9162039	0		<			
ANR	9162085	Identifier	i		9162039	0					
ANR	9162086	CallExpression	r_size ( op - 1 )		9162039	1					
ANR	9162087	Callee	r_size		9162039	0					
ANR	9162088	Identifier	r_size		9162039	0					
ANR	9162089	ArgumentList	op - 1		9162039	1					
ANR	9162090	Argument	op - 1		9162039	0					
ANR	9162091	AdditiveExpression	op - 1		9162039	0		-			
ANR	9162092	Identifier	op		9162039	0					
ANR	9162093	PrimaryExpression	1		9162039	1					
ANR	9162094	PostIncDecOperationExpression	i ++	380:40:10827:10829	9162039	2	True				
ANR	9162095	Identifier	i		9162039	0					
ANR	9162096	IncDec	++		9162039	1					
ANR	9162097	ExpressionStatement	gs_debug [ op [ - 1 ] . value . bytes [ i ] & 127 ] = op -> value . boolval	381:12:10844:10917	9162039	3	True				
ANR	9162098	AssignmentExpression	gs_debug [ op [ - 1 ] . value . bytes [ i ] & 127 ] = op -> value . boolval		9162039	0		=			
ANR	9162099	ArrayIndexing	gs_debug [ op [ - 1 ] . value . bytes [ i ] & 127 ]		9162039	0					
ANR	9162100	Identifier	gs_debug		9162039	0					
ANR	9162101	BitAndExpression	op [ - 1 ] . value . bytes [ i ] & 127		9162039	1		&			
ANR	9162102	ArrayIndexing	op [ - 1 ] . value . bytes [ i ]		9162039	0					
ANR	9162103	MemberAccess	op [ - 1 ] . value . bytes		9162039	0					
ANR	9162104	MemberAccess	op [ - 1 ] . value		9162039	0					
ANR	9162105	ArrayIndexing	op [ - 1 ]		9162039	0					
ANR	9162106	Identifier	op		9162039	0					
ANR	9162107	UnaryOperationExpression	- 1		9162039	1					
ANR	9162108	UnaryOperator	-		9162039	0					
ANR	9162109	PrimaryExpression	1		9162039	1					
ANR	9162110	Identifier	value		9162039	1					
ANR	9162111	Identifier	bytes		9162039	1					
ANR	9162112	Identifier	i		9162039	1					
ANR	9162113	PrimaryExpression	127		9162039	1					
ANR	9162114	MemberAccess	op -> value . boolval		9162039	1					
ANR	9162115	PtrMemberAccess	op -> value		9162039	0					
ANR	9162116	Identifier	op		9162039	0					
ANR	9162117	Identifier	value		9162039	1					
ANR	9162118	Identifier	boolval		9162039	1					
ANR	9162119	ExpressionStatement	pop ( 2 )	384:4:10929:10935	9162039	4	True				
ANR	9162120	CallExpression	pop ( 2 )		9162039	0					
ANR	9162121	Callee	pop		9162039	0					
ANR	9162122	Identifier	pop		9162039	0					
ANR	9162123	ArgumentList	2		9162039	1					
ANR	9162124	Argument	2		9162039	0					
ANR	9162125	PrimaryExpression	2		9162039	0					
ANR	9162126	ReturnStatement	return 0 ;	385:4:10941:10949	9162039	5	True				
ANR	9162127	PrimaryExpression	0		9162039	0					
ANR	9162128	ReturnType	static int		9162039	1					
ANR	9162129	Identifier	zsetdebug		9162039	2					
ANR	9162130	ParameterList	i_ctx_t * i_ctx_p		9162039	3					
ANR	9162131	Parameter	i_ctx_t * i_ctx_p	372:10:10653:10668	9162039	0	True				
ANR	9162132	ParameterType	i_ctx_t *		9162039	0					
ANR	9162133	Identifier	i_ctx_p		9162039	1					
ANR	9162134	CFGEntryNode	ENTRY		9162039		True				
ANR	9162135	CFGExitNode	EXIT		9162039		True				
ANR	9162136	Symbol	op		9162039						
ANR	9162137	Symbol	* * i		9162039						
ANR	9162138	Symbol	* op		9162039						
ANR	9162139	Symbol	* op [ - 1 ] . value . bytes		9162039						
ANR	9162140	Symbol	* * op [ - 1 ] . value		9162039						
ANR	9162141	Symbol	i		9162039						
ANR	9162142	Symbol	op [ - 1 ] . value		9162039						
ANR	9162143	Symbol	* * op [ - 1 ] . value . bytes		9162039						
ANR	9162144	Symbol	op -> value . boolval		9162039						
ANR	9162145	Symbol	osp		9162039						
ANR	9162146	Symbol	* * op		9162039						
ANR	9162147	Symbol	t_boolean		9162039						
ANR	9162148	Symbol	t_string		9162039						
ANR	9162149	Symbol	gs_debug		9162039						
ANR	9162150	Symbol	* i		9162039						
ANR	9162151	Symbol	* op [ - 1 ] . value		9162039						
ANR	9162152	Symbol	i_ctx_p		9162039						
ANR	9162153	Symbol	op -> value		9162039						
ANR	9162154	Symbol	r_size		9162039						
ANR	9162155	Symbol	* * * op		9162039						
ANR	9162156	Symbol	* gs_debug		9162039						
ANR	9162157	Symbol	op [ - 1 ] . value . bytes		9162039						
ANR	9162158	Function	zmementolistnewblocks	389:0:10978:11074							
ANR	9162159	FunctionDef	zmementolistnewblocks (i_ctx_t * i_ctx_p)		9162158	0					
ANR	9162160	CompoundStatement		391:0:11029:11074	9162158	0					
ANR	9162161	ExpressionStatement	Memento_listNewBlocks ( )	392:4:11035:11058	9162158	0	True				
ANR	9162162	CallExpression	Memento_listNewBlocks ( )		9162158	0					
ANR	9162163	Callee	Memento_listNewBlocks		9162158	0					
ANR	9162164	Identifier	Memento_listNewBlocks		9162158	0					
ANR	9162165	ArgumentList			9162158	1					
ANR	9162166	ReturnStatement	return 0 ;	393:4:11064:11072	9162158	1	True				
ANR	9162167	PrimaryExpression	0		9162158	0					
ANR	9162168	ReturnType	static int		9162158	1					
ANR	9162169	Identifier	zmementolistnewblocks		9162158	2					
ANR	9162170	ParameterList	i_ctx_t * i_ctx_p		9162158	3					
ANR	9162171	Parameter	i_ctx_t * i_ctx_p	390:22:11011:11026	9162158	0	True				
ANR	9162172	ParameterType	i_ctx_t *		9162158	0					
ANR	9162173	Identifier	i_ctx_p		9162158	1					
ANR	9162174	CFGEntryNode	ENTRY		9162158		True				
ANR	9162175	CFGExitNode	EXIT		9162158		True				
ANR	9162176	Symbol	i_ctx_p		9162158						
ANR	9162177	Function	zsetCPSImode	402:0:11388:11721							
ANR	9162178	FunctionDef	zsetCPSImode (i_ctx_t * i_ctx_p)		9162177	0					
ANR	9162179	CompoundStatement		404:0:11430:11721	9162177	0					
ANR	9162180	IdentifierDeclStatement	os_ptr op = osp ;	405:4:11436:11451	9162177	0	True				
ANR	9162181	IdentifierDecl	op = osp		9162177	0					
ANR	9162182	IdentifierDeclType	os_ptr		9162177	0					
ANR	9162183	Identifier	op		9162177	1					
ANR	9162184	AssignmentExpression	op = osp		9162177	2		=			
ANR	9162185	Identifier	osp		9162177	0					
ANR	9162186	Identifier	osp		9162177	1					
ANR	9162187	ExpressionStatement	"check_type ( * op , t_boolean )"	406:4:11457:11483	9162177	1	True				
ANR	9162188	CallExpression	"check_type ( * op , t_boolean )"		9162177	0					
ANR	9162189	Callee	check_type		9162177	0					
ANR	9162190	Identifier	check_type		9162177	0					
ANR	9162191	ArgumentList	* op		9162177	1					
ANR	9162192	Argument	* op		9162177	0					
ANR	9162193	UnaryOperationExpression	* op		9162177	0					
ANR	9162194	UnaryOperator	*		9162177	0					
ANR	9162195	Identifier	op		9162177	1					
ANR	9162196	Argument	t_boolean		9162177	1					
ANR	9162197	Identifier	t_boolean		9162177	0					
ANR	9162198	ExpressionStatement	"gs_setcpsimode ( imemory , op -> value . boolval )"	407:4:11489:11531	9162177	2	True				
ANR	9162199	CallExpression	"gs_setcpsimode ( imemory , op -> value . boolval )"		9162177	0					
ANR	9162200	Callee	gs_setcpsimode		9162177	0					
ANR	9162201	Identifier	gs_setcpsimode		9162177	0					
ANR	9162202	ArgumentList	imemory		9162177	1					
ANR	9162203	Argument	imemory		9162177	0					
ANR	9162204	Identifier	imemory		9162177	0					
ANR	9162205	Argument	op -> value . boolval		9162177	1					
ANR	9162206	MemberAccess	op -> value . boolval		9162177	0					
ANR	9162207	PtrMemberAccess	op -> value		9162177	0					
ANR	9162208	Identifier	op		9162177	0					
ANR	9162209	Identifier	value		9162177	1					
ANR	9162210	Identifier	boolval		9162177	1					
ANR	9162211	IfStatement	if ( op -> value . boolval )		9162177	3					
ANR	9162212	Condition	op -> value . boolval	408:8:11541:11557	9162177	0	True				
ANR	9162213	MemberAccess	op -> value . boolval		9162177	0					
ANR	9162214	PtrMemberAccess	op -> value		9162177	0					
ANR	9162215	Identifier	op		9162177	0					
ANR	9162216	Identifier	value		9162177	1					
ANR	9162217	Identifier	boolval		9162177	1					
ANR	9162218	CompoundStatement		5:27:129:129	9162177	1					
ANR	9162219	ExpressionStatement	i_ctx_p -> scanner_options |= SCAN_CPSI_MODE	409:8:11570:11612	9162177	0	True				
ANR	9162220	AssignmentExpression	i_ctx_p -> scanner_options |= SCAN_CPSI_MODE		9162177	0		|=			
ANR	9162221	PtrMemberAccess	i_ctx_p -> scanner_options		9162177	0					
ANR	9162222	Identifier	i_ctx_p		9162177	0					
ANR	9162223	Identifier	scanner_options		9162177	1					
ANR	9162224	Identifier	SCAN_CPSI_MODE		9162177	1					
ANR	9162225	ElseStatement	else		9162177	0					
ANR	9162226	CompoundStatement		8:9:198:198	9162177	0					
ANR	9162227	ExpressionStatement	i_ctx_p -> scanner_options &= ~ ( int ) SCAN_CPSI_MODE	412:8:11639:11687	9162177	0	True				
ANR	9162228	AssignmentExpression	i_ctx_p -> scanner_options &= ~ ( int ) SCAN_CPSI_MODE		9162177	0		&=			
ANR	9162229	PtrMemberAccess	i_ctx_p -> scanner_options		9162177	0					
ANR	9162230	Identifier	i_ctx_p		9162177	0					
ANR	9162231	Identifier	scanner_options		9162177	1					
ANR	9162232	UnaryOperationExpression	~ ( int ) SCAN_CPSI_MODE		9162177	1					
ANR	9162233	UnaryOperator	~		9162177	0					
ANR	9162234	CastExpression	( int ) SCAN_CPSI_MODE		9162177	1					
ANR	9162235	CastTarget	int		9162177	0					
ANR	9162236	Identifier	SCAN_CPSI_MODE		9162177	1					
ANR	9162237	ExpressionStatement	pop ( 1 )	414:4:11699:11705	9162177	4	True				
ANR	9162238	CallExpression	pop ( 1 )		9162177	0					
ANR	9162239	Callee	pop		9162177	0					
ANR	9162240	Identifier	pop		9162177	0					
ANR	9162241	ArgumentList	1		9162177	1					
ANR	9162242	Argument	1		9162177	0					
ANR	9162243	PrimaryExpression	1		9162177	0					
ANR	9162244	ReturnStatement	return 0 ;	415:4:11711:11719	9162177	5	True				
ANR	9162245	PrimaryExpression	0		9162177	0					
ANR	9162246	ReturnType	static int		9162177	1					
ANR	9162247	Identifier	zsetCPSImode		9162177	2					
ANR	9162248	ParameterList	i_ctx_t * i_ctx_p		9162177	3					
ANR	9162249	Parameter	i_ctx_t * i_ctx_p	403:13:11412:11427	9162177	0	True				
ANR	9162250	ParameterType	i_ctx_t *		9162177	0					
ANR	9162251	Identifier	i_ctx_p		9162177	1					
ANR	9162252	CFGEntryNode	ENTRY		9162177		True				
ANR	9162253	CFGExitNode	EXIT		9162177		True				
ANR	9162254	Symbol	t_boolean		9162177						
ANR	9162255	Symbol	op		9162177						
ANR	9162256	Symbol	* op		9162177						
ANR	9162257	Symbol	i_ctx_p		9162177						
ANR	9162258	Symbol	op -> value		9162177						
ANR	9162259	Symbol	SCAN_CPSI_MODE		9162177						
ANR	9162260	Symbol	* i_ctx_p		9162177						
ANR	9162261	Symbol	imemory		9162177						
ANR	9162262	Symbol	op -> value . boolval		9162177						
ANR	9162263	Symbol	osp		9162177						
ANR	9162264	Symbol	i_ctx_p -> scanner_options		9162177						
ANR	9162265	Function	zgetCPSImode	419:0:11752:11893							
ANR	9162266	FunctionDef	zgetCPSImode (i_ctx_t * i_ctx_p)		9162265	0					
ANR	9162267	CompoundStatement		421:0:11794:11893	9162265	0					
ANR	9162268	IdentifierDeclStatement	os_ptr op = osp ;	422:4:11800:11815	9162265	0	True				
ANR	9162269	IdentifierDecl	op = osp		9162265	0					
ANR	9162270	IdentifierDeclType	os_ptr		9162265	0					
ANR	9162271	Identifier	op		9162265	1					
ANR	9162272	AssignmentExpression	op = osp		9162265	2		=			
ANR	9162273	Identifier	osp		9162265	0					
ANR	9162274	Identifier	osp		9162265	1					
ANR	9162275	ExpressionStatement	push ( 1 )	424:4:11822:11829	9162265	1	True				
ANR	9162276	CallExpression	push ( 1 )		9162265	0					
ANR	9162277	Callee	push		9162265	0					
ANR	9162278	Identifier	push		9162265	0					
ANR	9162279	ArgumentList	1		9162265	1					
ANR	9162280	Argument	1		9162265	0					
ANR	9162281	PrimaryExpression	1		9162265	0					
ANR	9162282	ExpressionStatement	"make_bool ( op , gs_currentcpsimode ( imemory ) )"	425:4:11835:11877	9162265	2	True				
ANR	9162283	CallExpression	"make_bool ( op , gs_currentcpsimode ( imemory ) )"		9162265	0					
ANR	9162284	Callee	make_bool		9162265	0					
ANR	9162285	Identifier	make_bool		9162265	0					
ANR	9162286	ArgumentList	op		9162265	1					
ANR	9162287	Argument	op		9162265	0					
ANR	9162288	Identifier	op		9162265	0					
ANR	9162289	Argument	gs_currentcpsimode ( imemory )		9162265	1					
ANR	9162290	CallExpression	gs_currentcpsimode ( imemory )		9162265	0					
ANR	9162291	Callee	gs_currentcpsimode		9162265	0					
ANR	9162292	Identifier	gs_currentcpsimode		9162265	0					
ANR	9162293	ArgumentList	imemory		9162265	1					
ANR	9162294	Argument	imemory		9162265	0					
ANR	9162295	Identifier	imemory		9162265	0					
ANR	9162296	ReturnStatement	return 0 ;	426:4:11883:11891	9162265	3	True				
ANR	9162297	PrimaryExpression	0		9162265	0					
ANR	9162298	ReturnType	static int		9162265	1					
ANR	9162299	Identifier	zgetCPSImode		9162265	2					
ANR	9162300	ParameterList	i_ctx_t * i_ctx_p		9162265	3					
ANR	9162301	Parameter	i_ctx_t * i_ctx_p	420:13:11776:11791	9162265	0	True				
ANR	9162302	ParameterType	i_ctx_t *		9162265	0					
ANR	9162303	Identifier	i_ctx_p		9162265	1					
ANR	9162304	CFGEntryNode	ENTRY		9162265		True				
ANR	9162305	CFGExitNode	EXIT		9162265		True				
ANR	9162306	Symbol	op		9162265						
ANR	9162307	Symbol	gs_currentcpsimode		9162265						
ANR	9162308	Symbol	i_ctx_p		9162265						
ANR	9162309	Symbol	imemory		9162265						
ANR	9162310	Symbol	osp		9162265						
ANR	9162311	Function	zsetscanconverter	430:0:11928:12261							
ANR	9162312	FunctionDef	zsetscanconverter (i_ctx_t * i_ctx_p)		9162311	0					
ANR	9162313	CompoundStatement		432:0:11975:12261	9162311	0					
ANR	9162314	IdentifierDeclStatement	int val ;	433:4:11981:11988	9162311	0	True				
ANR	9162315	IdentifierDecl	val		9162311	0					
ANR	9162316	IdentifierDeclType	int		9162311	0					
ANR	9162317	Identifier	val		9162311	1					
ANR	9162318	IdentifierDeclStatement	os_ptr op = osp ;	435:4:11995:12010	9162311	1	True				
ANR	9162319	IdentifierDecl	op = osp		9162311	0					
ANR	9162320	IdentifierDeclType	os_ptr		9162311	0					
ANR	9162321	Identifier	op		9162311	1					
ANR	9162322	AssignmentExpression	op = osp		9162311	2		=			
ANR	9162323	Identifier	osp		9162311	0					
ANR	9162324	Identifier	osp		9162311	1					
ANR	9162325	IfStatement	"if ( r_has_type ( op , t_boolean ) )"		9162311	2					
ANR	9162326	Condition	"r_has_type ( op , t_boolean )"	436:8:12020:12044	9162311	0	True				
ANR	9162327	CallExpression	"r_has_type ( op , t_boolean )"		9162311	0					
ANR	9162328	Callee	r_has_type		9162311	0					
ANR	9162329	Identifier	r_has_type		9162311	0					
ANR	9162330	ArgumentList	op		9162311	1					
ANR	9162331	Argument	op		9162311	0					
ANR	9162332	Identifier	op		9162311	0					
ANR	9162333	Argument	t_boolean		9162311	1					
ANR	9162334	Identifier	t_boolean		9162311	0					
ANR	9162335	ExpressionStatement	val = ( int ) op -> value . boolval	437:8:12055:12083	9162311	1	True				
ANR	9162336	AssignmentExpression	val = ( int ) op -> value . boolval		9162311	0		=			
ANR	9162337	Identifier	val		9162311	0					
ANR	9162338	CastExpression	( int ) op -> value . boolval		9162311	1					
ANR	9162339	CastTarget	int		9162311	0					
ANR	9162340	MemberAccess	op -> value . boolval		9162311	1					
ANR	9162341	PtrMemberAccess	op -> value		9162311	0					
ANR	9162342	Identifier	op		9162311	0					
ANR	9162343	Identifier	value		9162311	1					
ANR	9162344	Identifier	boolval		9162311	1					
ANR	9162345	ElseStatement	else		9162311	0					
ANR	9162346	IfStatement	"if ( r_has_type ( op , t_integer ) )"		9162311	0					
ANR	9162347	Condition	"r_has_type ( op , t_integer )"	438:13:12098:12122	9162311	0	True				
ANR	9162348	CallExpression	"r_has_type ( op , t_integer )"		9162311	0					
ANR	9162349	Callee	r_has_type		9162311	0					
ANR	9162350	Identifier	r_has_type		9162311	0					
ANR	9162351	ArgumentList	op		9162311	1					
ANR	9162352	Argument	op		9162311	0					
ANR	9162353	Identifier	op		9162311	0					
ANR	9162354	Argument	t_integer		9162311	1					
ANR	9162355	Identifier	t_integer		9162311	0					
ANR	9162356	ExpressionStatement	val = op -> value . intval	439:8:12133:12155	9162311	1	True				
ANR	9162357	AssignmentExpression	val = op -> value . intval		9162311	0		=			
ANR	9162358	Identifier	val		9162311	0					
ANR	9162359	MemberAccess	op -> value . intval		9162311	1					
ANR	9162360	PtrMemberAccess	op -> value		9162311	0					
ANR	9162361	Identifier	op		9162311	0					
ANR	9162362	Identifier	value		9162311	1					
ANR	9162363	Identifier	intval		9162311	1					
ANR	9162364	ElseStatement	else		9162311	0					
ANR	9162365	ExpressionStatement	return_op_typecheck ( op )	441:8:12174:12197	9162311	0	True				
ANR	9162366	CallExpression	return_op_typecheck ( op )		9162311	0					
ANR	9162367	Callee	return_op_typecheck		9162311	0					
ANR	9162368	Identifier	return_op_typecheck		9162311	0					
ANR	9162369	ArgumentList	op		9162311	1					
ANR	9162370	Argument	op		9162311	0					
ANR	9162371	Identifier	op		9162311	0					
ANR	9162372	ExpressionStatement	"gs_setscanconverter ( igs , val )"	443:4:12204:12233	9162311	3	True				
ANR	9162373	CallExpression	"gs_setscanconverter ( igs , val )"		9162311	0					
ANR	9162374	Callee	gs_setscanconverter		9162311	0					
ANR	9162375	Identifier	gs_setscanconverter		9162311	0					
ANR	9162376	ArgumentList	igs		9162311	1					
ANR	9162377	Argument	igs		9162311	0					
ANR	9162378	Identifier	igs		9162311	0					
ANR	9162379	Argument	val		9162311	1					
ANR	9162380	Identifier	val		9162311	0					
ANR	9162381	ExpressionStatement	pop ( 1 )	444:4:12239:12245	9162311	4	True				
ANR	9162382	CallExpression	pop ( 1 )		9162311	0					
ANR	9162383	Callee	pop		9162311	0					
ANR	9162384	Identifier	pop		9162311	0					
ANR	9162385	ArgumentList	1		9162311	1					
ANR	9162386	Argument	1		9162311	0					
ANR	9162387	PrimaryExpression	1		9162311	0					
ANR	9162388	ReturnStatement	return 0 ;	445:4:12251:12259	9162311	5	True				
ANR	9162389	PrimaryExpression	0		9162311	0					
ANR	9162390	ReturnType	static int		9162311	1					
ANR	9162391	Identifier	zsetscanconverter		9162311	2					
ANR	9162392	ParameterList	i_ctx_t * i_ctx_p		9162311	3					
ANR	9162393	Parameter	i_ctx_t * i_ctx_p	431:18:11957:11972	9162311	0	True				
ANR	9162394	ParameterType	i_ctx_t *		9162311	0					
ANR	9162395	Identifier	i_ctx_p		9162311	1					
ANR	9162396	CFGEntryNode	ENTRY		9162311		True				
ANR	9162397	CFGExitNode	EXIT		9162311		True				
ANR	9162398	Symbol	val		9162311						
ANR	9162399	Symbol	t_boolean		9162311						
ANR	9162400	Symbol	op		9162311						
ANR	9162401	Symbol	r_has_type		9162311						
ANR	9162402	Symbol	* op		9162311						
ANR	9162403	Symbol	t_integer		9162311						
ANR	9162404	Symbol	igs		9162311						
ANR	9162405	Symbol	i_ctx_p		9162311						
ANR	9162406	Symbol	op -> value		9162311						
ANR	9162407	Symbol	op -> value . boolval		9162311						
ANR	9162408	Symbol	osp		9162311						
ANR	9162409	Symbol	op -> value . intval		9162311						
ANR	9162410	Function	zgetscanconverter	449:0:12296:12442							
ANR	9162411	FunctionDef	zgetscanconverter (i_ctx_t * i_ctx_p)		9162410	0					
ANR	9162412	CompoundStatement		451:0:12343:12442	9162410	0					
ANR	9162413	IdentifierDeclStatement	os_ptr op = osp ;	452:4:12349:12364	9162410	0	True				
ANR	9162414	IdentifierDecl	op = osp		9162410	0					
ANR	9162415	IdentifierDeclType	os_ptr		9162410	0					
ANR	9162416	Identifier	op		9162410	1					
ANR	9162417	AssignmentExpression	op = osp		9162410	2		=			
ANR	9162418	Identifier	osp		9162410	0					
ANR	9162419	Identifier	osp		9162410	1					
ANR	9162420	ExpressionStatement	push ( 1 )	454:4:12371:12378	9162410	1	True				
ANR	9162421	CallExpression	push ( 1 )		9162410	0					
ANR	9162422	Callee	push		9162410	0					
ANR	9162423	Identifier	push		9162410	0					
ANR	9162424	ArgumentList	1		9162410	1					
ANR	9162425	Argument	1		9162410	0					
ANR	9162426	PrimaryExpression	1		9162410	0					
ANR	9162427	ExpressionStatement	"make_int ( op , gs_getscanconverter ( imemory ) )"	455:4:12384:12426	9162410	2	True				
ANR	9162428	CallExpression	"make_int ( op , gs_getscanconverter ( imemory ) )"		9162410	0					
ANR	9162429	Callee	make_int		9162410	0					
ANR	9162430	Identifier	make_int		9162410	0					
ANR	9162431	ArgumentList	op		9162410	1					
ANR	9162432	Argument	op		9162410	0					
ANR	9162433	Identifier	op		9162410	0					
ANR	9162434	Argument	gs_getscanconverter ( imemory )		9162410	1					
ANR	9162435	CallExpression	gs_getscanconverter ( imemory )		9162410	0					
ANR	9162436	Callee	gs_getscanconverter		9162410	0					
ANR	9162437	Identifier	gs_getscanconverter		9162410	0					
ANR	9162438	ArgumentList	imemory		9162410	1					
ANR	9162439	Argument	imemory		9162410	0					
ANR	9162440	Identifier	imemory		9162410	0					
ANR	9162441	ReturnStatement	return 0 ;	456:4:12432:12440	9162410	3	True				
ANR	9162442	PrimaryExpression	0		9162410	0					
ANR	9162443	ReturnType	static int		9162410	1					
ANR	9162444	Identifier	zgetscanconverter		9162410	2					
ANR	9162445	ParameterList	i_ctx_t * i_ctx_p		9162410	3					
ANR	9162446	Parameter	i_ctx_t * i_ctx_p	450:18:12325:12340	9162410	0	True				
ANR	9162447	ParameterType	i_ctx_t *		9162410	0					
ANR	9162448	Identifier	i_ctx_p		9162410	1					
ANR	9162449	CFGEntryNode	ENTRY		9162410		True				
ANR	9162450	CFGExitNode	EXIT		9162410		True				
ANR	9162451	Symbol	op		9162410						
ANR	9162452	Symbol	i_ctx_p		9162410						
ANR	9162453	Symbol	imemory		9162410						
ANR	9162454	Symbol	gs_getscanconverter		9162410						
ANR	9162455	Symbol	osp		9162410						
ANR	9162456	DeclStmt									
ANR	9162457	Decl							const op_def	const op_def [ ]	zmisc_a_op_defs
ANR	9162458	DeclStmt									
ANR	9162459	Decl							const op_def	const op_def [ ]	zmisc_b_op_defs
