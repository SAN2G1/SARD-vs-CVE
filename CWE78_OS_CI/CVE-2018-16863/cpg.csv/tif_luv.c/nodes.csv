command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	9864804	File	data/converged/CVE-2018-16863_ghostpdl/tif_luv.c								
ANR	9864805	DeclStmt									
ANR	9864806	Decl							struct logLuvState	struct logLuvState	LogLuvState
ANR	9864807	ClassDef	logLuvState	160:0:6987:7596							
ANR	9864808	DeclStmt									
ANR	9864809	Decl							int	int	encoder_state
ANR	9864810	DeclStmt									
ANR	9864811	Decl							int	int	user_datafmt
ANR	9864812	DeclStmt									
ANR	9864813	Decl							int	int	encode_meth
ANR	9864814	DeclStmt									
ANR	9864815	Decl							int	int	pixel_size
ANR	9864816	DeclStmt									
ANR	9864817	Decl							uint8	uint8 *	tbuf
ANR	9864818	DeclStmt									
ANR	9864819	Decl							tmsize_t	tmsize_t	tbuflen
ANR	9864820	DeclStmt									
ANR	9864821	Decl							"void ( * ) ( LogLuvState * , uint8 * , tmsize_t )"	"void ( * ) ( LogLuvState * , uint8 * , tmsize_t )"	tfunc
ANR	9864822	DeclStmt									
ANR	9864823	Decl							TIFFVSetMethod	TIFFVSetMethod	vgetparent
ANR	9864824	DeclStmt									
ANR	9864825	Decl							TIFFVSetMethod	TIFFVSetMethod	vsetparent
ANR	9864826	Function	LogL16Decode	184:0:7845:9632							
ANR	9864827	FunctionDef	"LogL16Decode (TIFF * tif , uint8 * op , tmsize_t occ , uint16 s)"		9864826	0					
ANR	9864828	CompoundStatement		186:0:7915:9632	9864826	0					
ANR	9864829	Statement	static	187:1:7918:7923	9864826	0	True				
ANR	9864830	IdentifierDeclStatement	"const char module [ ] = ""LogL16Decode"" ;"	187:8:7925:7961	9864826	1	True				
ANR	9864831	IdentifierDecl	"module [ ] = ""LogL16Decode"""		9864826	0					
ANR	9864832	IdentifierDeclType	const char [ ]		9864826	0					
ANR	9864833	Identifier	module		9864826	1					
ANR	9864834	AssignmentExpression	"module [ ] = ""LogL16Decode"""		9864826	2		=			
ANR	9864835	Identifier	module		9864826	0					
ANR	9864836	PrimaryExpression	"""LogL16Decode"""		9864826	1					
ANR	9864837	IdentifierDeclStatement	LogLuvState * sp = DecoderState ( tif ) ;	188:1:7964:7999	9864826	2	True				
ANR	9864838	IdentifierDecl	* sp = DecoderState ( tif )		9864826	0					
ANR	9864839	IdentifierDeclType	LogLuvState *		9864826	0					
ANR	9864840	Identifier	sp		9864826	1					
ANR	9864841	AssignmentExpression	* sp = DecoderState ( tif )		9864826	2		=			
ANR	9864842	Identifier	sp		9864826	0					
ANR	9864843	CallExpression	DecoderState ( tif )		9864826	1					
ANR	9864844	Callee	DecoderState		9864826	0					
ANR	9864845	Identifier	DecoderState		9864826	0					
ANR	9864846	ArgumentList	tif		9864826	1					
ANR	9864847	Argument	tif		9864826	0					
ANR	9864848	Identifier	tif		9864826	0					
ANR	9864849	IdentifierDeclStatement	int shft ;	189:1:8002:8010	9864826	3	True				
ANR	9864850	IdentifierDecl	shft		9864826	0					
ANR	9864851	IdentifierDeclType	int		9864826	0					
ANR	9864852	Identifier	shft		9864826	1					
ANR	9864853	IdentifierDeclStatement	tmsize_t i ;	190:1:8013:8023	9864826	4	True				
ANR	9864854	IdentifierDecl	i		9864826	0					
ANR	9864855	IdentifierDeclType	tmsize_t		9864826	0					
ANR	9864856	Identifier	i		9864826	1					
ANR	9864857	IdentifierDeclStatement	tmsize_t npixels ;	191:1:8026:8042	9864826	5	True				
ANR	9864858	IdentifierDecl	npixels		9864826	0					
ANR	9864859	IdentifierDeclType	tmsize_t		9864826	0					
ANR	9864860	Identifier	npixels		9864826	1					
ANR	9864861	IdentifierDeclStatement	unsigned char * bp ;	192:1:8045:8062	9864826	6	True				
ANR	9864862	IdentifierDecl	* bp		9864826	0					
ANR	9864863	IdentifierDeclType	unsigned char *		9864826	0					
ANR	9864864	Identifier	bp		9864826	1					
ANR	9864865	IdentifierDeclStatement	int16 * tp ;	193:1:8065:8074	9864826	7	True				
ANR	9864866	IdentifierDecl	* tp		9864826	0					
ANR	9864867	IdentifierDeclType	int16 *		9864826	0					
ANR	9864868	Identifier	tp		9864826	1					
ANR	9864869	IdentifierDeclStatement	int16 b ;	194:1:8077:8084	9864826	8	True				
ANR	9864870	IdentifierDecl	b		9864826	0					
ANR	9864871	IdentifierDeclType	int16		9864826	0					
ANR	9864872	Identifier	b		9864826	1					
ANR	9864873	IdentifierDeclStatement	tmsize_t cc ;	195:1:8087:8098	9864826	9	True				
ANR	9864874	IdentifierDecl	cc		9864826	0					
ANR	9864875	IdentifierDeclType	tmsize_t		9864826	0					
ANR	9864876	Identifier	cc		9864826	1					
ANR	9864877	IdentifierDeclStatement	int rc ;	196:1:8101:8107	9864826	10	True				
ANR	9864878	IdentifierDecl	rc		9864826	0					
ANR	9864879	IdentifierDeclType	int		9864826	0					
ANR	9864880	Identifier	rc		9864826	1					
ANR	9864881	ExpressionStatement	assert ( s == 0 )	198:1:8111:8125	9864826	11	True				
ANR	9864882	CallExpression	assert ( s == 0 )		9864826	0					
ANR	9864883	Callee	assert		9864826	0					
ANR	9864884	Identifier	assert		9864826	0					
ANR	9864885	ArgumentList	s == 0		9864826	1					
ANR	9864886	Argument	s == 0		9864826	0					
ANR	9864887	EqualityExpression	s == 0		9864826	0		==			
ANR	9864888	Identifier	s		9864826	0					
ANR	9864889	PrimaryExpression	0		9864826	1					
ANR	9864890	ExpressionStatement	assert ( sp != NULL )	199:1:8128:8146	9864826	12	True				
ANR	9864891	CallExpression	assert ( sp != NULL )		9864826	0					
ANR	9864892	Callee	assert		9864826	0					
ANR	9864893	Identifier	assert		9864826	0					
ANR	9864894	ArgumentList	sp != NULL		9864826	1					
ANR	9864895	Argument	sp != NULL		9864826	0					
ANR	9864896	EqualityExpression	sp != NULL		9864826	0		!=			
ANR	9864897	Identifier	sp		9864826	0					
ANR	9864898	Identifier	NULL		9864826	1					
ANR	9864899	ExpressionStatement	npixels = occ / sp -> pixel_size	201:1:8150:8180	9864826	13	True				
ANR	9864900	AssignmentExpression	npixels = occ / sp -> pixel_size		9864826	0		=			
ANR	9864901	Identifier	npixels		9864826	0					
ANR	9864902	MultiplicativeExpression	occ / sp -> pixel_size		9864826	1		/			
ANR	9864903	Identifier	occ		9864826	0					
ANR	9864904	PtrMemberAccess	sp -> pixel_size		9864826	1					
ANR	9864905	Identifier	sp		9864826	0					
ANR	9864906	Identifier	pixel_size		9864826	1					
ANR	9864907	IfStatement	if ( sp -> user_datafmt == SGILOGDATAFMT_16BIT )		9864826	14					
ANR	9864908	Condition	sp -> user_datafmt == SGILOGDATAFMT_16BIT	203:5:8188:8226	9864826	0	True				
ANR	9864909	EqualityExpression	sp -> user_datafmt == SGILOGDATAFMT_16BIT		9864826	0		==			
ANR	9864910	PtrMemberAccess	sp -> user_datafmt		9864826	0					
ANR	9864911	Identifier	sp		9864826	0					
ANR	9864912	Identifier	user_datafmt		9864826	1					
ANR	9864913	Identifier	SGILOGDATAFMT_16BIT		9864826	1					
ANR	9864914	ExpressionStatement	tp = ( int16 * ) op	204:2:8231:8247	9864826	1	True				
ANR	9864915	AssignmentExpression	tp = ( int16 * ) op		9864826	0		=			
ANR	9864916	Identifier	tp		9864826	0					
ANR	9864917	CastExpression	( int16 * ) op		9864826	1					
ANR	9864918	CastTarget	int16 *		9864826	0					
ANR	9864919	Identifier	op		9864826	1					
ANR	9864920	ElseStatement	else		9864826	0					
ANR	9864921	CompoundStatement		20:6:339:339	9864826	0					
ANR	9864922	IfStatement	if ( sp -> tbuflen < npixels )		9864826	0					
ANR	9864923	Condition	sp -> tbuflen < npixels	206:5:8262:8282	9864826	0	True				
ANR	9864924	RelationalExpression	sp -> tbuflen < npixels		9864826	0		<			
ANR	9864925	PtrMemberAccess	sp -> tbuflen		9864826	0					
ANR	9864926	Identifier	sp		9864826	0					
ANR	9864927	Identifier	tbuflen		9864826	1					
ANR	9864928	Identifier	npixels		9864826	1					
ANR	9864929	CompoundStatement		21:28:369:369	9864826	1					
ANR	9864930	ExpressionStatement	"TIFFErrorExt ( tif -> tif_clientdata , module , ""Translation buffer too short"" )"	207:3:8290:8370	9864826	0	True				
ANR	9864931	CallExpression	"TIFFErrorExt ( tif -> tif_clientdata , module , ""Translation buffer too short"" )"		9864826	0					
ANR	9864932	Callee	TIFFErrorExt		9864826	0					
ANR	9864933	Identifier	TIFFErrorExt		9864826	0					
ANR	9864934	ArgumentList	tif -> tif_clientdata		9864826	1					
ANR	9864935	Argument	tif -> tif_clientdata		9864826	0					
ANR	9864936	PtrMemberAccess	tif -> tif_clientdata		9864826	0					
ANR	9864937	Identifier	tif		9864826	0					
ANR	9864938	Identifier	tif_clientdata		9864826	1					
ANR	9864939	Argument	module		9864826	1					
ANR	9864940	Identifier	module		9864826	0					
ANR	9864941	Argument	"""Translation buffer too short"""		9864826	2					
ANR	9864942	PrimaryExpression	"""Translation buffer too short"""		9864826	0					
ANR	9864943	ReturnStatement	return ( 0 ) ;	209:3:8375:8385	9864826	1	True				
ANR	9864944	PrimaryExpression	0		9864826	0					
ANR	9864945	ExpressionStatement	tp = ( int16 * ) sp -> tbuf	211:2:8393:8415	9864826	1	True				
ANR	9864946	AssignmentExpression	tp = ( int16 * ) sp -> tbuf		9864826	0		=			
ANR	9864947	Identifier	tp		9864826	0					
ANR	9864948	CastExpression	( int16 * ) sp -> tbuf		9864826	1					
ANR	9864949	CastTarget	int16 *		9864826	0					
ANR	9864950	PtrMemberAccess	sp -> tbuf		9864826	1					
ANR	9864951	Identifier	sp		9864826	0					
ANR	9864952	Identifier	tbuf		9864826	1					
ANR	9864953	ExpressionStatement	"_TIFFmemset ( ( void * ) tp , 0 , npixels * sizeof ( tp [ 0 ] ) )"	213:1:8421:8471	9864826	15	True				
ANR	9864954	CallExpression	"_TIFFmemset ( ( void * ) tp , 0 , npixels * sizeof ( tp [ 0 ] ) )"		9864826	0					
ANR	9864955	Callee	_TIFFmemset		9864826	0					
ANR	9864956	Identifier	_TIFFmemset		9864826	0					
ANR	9864957	ArgumentList	( void * ) tp		9864826	1					
ANR	9864958	Argument	( void * ) tp		9864826	0					
ANR	9864959	CastExpression	( void * ) tp		9864826	0					
ANR	9864960	CastTarget	void *		9864826	0					
ANR	9864961	Identifier	tp		9864826	1					
ANR	9864962	Argument	0		9864826	1					
ANR	9864963	PrimaryExpression	0		9864826	0					
ANR	9864964	Argument	npixels * sizeof ( tp [ 0 ] )		9864826	2					
ANR	9864965	MultiplicativeExpression	npixels * sizeof ( tp [ 0 ] )		9864826	0		*			
ANR	9864966	Identifier	npixels		9864826	0					
ANR	9864967	SizeofExpression	sizeof ( tp [ 0 ] )		9864826	1					
ANR	9864968	Sizeof	sizeof		9864826	0					
ANR	9864969	ArrayIndexing	tp [ 0 ]		9864826	1					
ANR	9864970	Identifier	tp		9864826	0					
ANR	9864971	PrimaryExpression	0		9864826	1					
ANR	9864972	ExpressionStatement	bp = ( unsigned char * ) tif -> tif_rawcp	215:1:8475:8511	9864826	16	True				
ANR	9864973	AssignmentExpression	bp = ( unsigned char * ) tif -> tif_rawcp		9864826	0		=			
ANR	9864974	Identifier	bp		9864826	0					
ANR	9864975	CastExpression	( unsigned char * ) tif -> tif_rawcp		9864826	1					
ANR	9864976	CastTarget	unsigned char *		9864826	0					
ANR	9864977	PtrMemberAccess	tif -> tif_rawcp		9864826	1					
ANR	9864978	Identifier	tif		9864826	0					
ANR	9864979	Identifier	tif_rawcp		9864826	1					
ANR	9864980	ExpressionStatement	cc = tif -> tif_rawcc	216:1:8514:8533	9864826	17	True				
ANR	9864981	AssignmentExpression	cc = tif -> tif_rawcc		9864826	0		=			
ANR	9864982	Identifier	cc		9864826	0					
ANR	9864983	PtrMemberAccess	tif -> tif_rawcc		9864826	1					
ANR	9864984	Identifier	tif		9864826	0					
ANR	9864985	Identifier	tif_rawcc		9864826	1					
ANR	9864986	ForStatement	for ( shft = 2 * 8 ; ( shft -= 8 ) >= 0 ; )		9864826	18					
ANR	9864987	ForInit	shft = 2 * 8 ;	218:6:8569:8579	9864826	0	True				
ANR	9864988	AssignmentExpression	shft = 2 * 8		9864826	0		=			
ANR	9864989	Identifier	shft		9864826	0					
ANR	9864990	MultiplicativeExpression	2 * 8		9864826	1		*			
ANR	9864991	PrimaryExpression	2		9864826	0					
ANR	9864992	PrimaryExpression	8		9864826	1					
ANR	9864993	Condition	( shft -= 8 ) >= 0	218:18:8581:8596	9864826	1	True				
ANR	9864994	RelationalExpression	( shft -= 8 ) >= 0		9864826	0		>=			
ANR	9864995	AssignmentExpression	shft -= 8		9864826	0		-=			
ANR	9864996	Identifier	shft		9864826	0					
ANR	9864997	PrimaryExpression	8		9864826	1					
ANR	9864998	PrimaryExpression	0		9864826	1					
ANR	9864999	CompoundStatement		33:38:685:685	9864826	2					
ANR	9865000	ForStatement	for ( i = 0 ; i < npixels && cc > 0 ; )		9864826	0					
ANR	9865001	ForInit	i = 0 ;	219:7:8610:8615	9864826	0	True				
ANR	9865002	AssignmentExpression	i = 0		9864826	0		=			
ANR	9865003	Identifier	i		9864826	0					
ANR	9865004	PrimaryExpression	0		9864826	1					
ANR	9865005	Condition	i < npixels && cc > 0	219:14:8617:8637	9864826	1	True				
ANR	9865006	AndExpression	i < npixels && cc > 0		9864826	0		&&			
ANR	9865007	RelationalExpression	i < npixels		9864826	0		<			
ANR	9865008	Identifier	i		9864826	0					
ANR	9865009	Identifier	npixels		9864826	1					
ANR	9865010	RelationalExpression	cc > 0		9864826	1		>			
ANR	9865011	Identifier	cc		9864826	0					
ANR	9865012	PrimaryExpression	0		9864826	1					
ANR	9865013	CompoundStatement		34:39:726:726	9864826	2					
ANR	9865014	IfStatement	if ( * bp >= 128 )		9864826	0					
ANR	9865015	Condition	* bp >= 128	220:7:8651:8660	9864826	0	True				
ANR	9865016	RelationalExpression	* bp >= 128		9864826	0		>=			
ANR	9865017	UnaryOperationExpression	* bp		9864826	0					
ANR	9865018	UnaryOperator	*		9864826	0					
ANR	9865019	Identifier	bp		9864826	1					
ANR	9865020	PrimaryExpression	128		9864826	1					
ANR	9865021	CompoundStatement		35:19:747:747	9864826	1					
ANR	9865022	IfStatement	if ( cc < 2 )		9864826	0					
ANR	9865023	Condition	cc < 2	221:8:8684:8689	9864826	0	True				
ANR	9865024	RelationalExpression	cc < 2		9864826	0		<			
ANR	9865025	Identifier	cc		9864826	0					
ANR	9865026	PrimaryExpression	2		9864826	1					
ANR	9865027	BreakStatement	break ;	222:5:8698:8703	9864826	1	True				
ANR	9865028	ExpressionStatement	rc = * bp ++ + ( 2 - 128 )	223:4:8709:8729	9864826	1	True				
ANR	9865029	AssignmentExpression	rc = * bp ++ + ( 2 - 128 )		9864826	0		=			
ANR	9865030	Identifier	rc		9864826	0					
ANR	9865031	AdditiveExpression	* bp ++ + ( 2 - 128 )		9864826	1		+			
ANR	9865032	UnaryOperationExpression	* bp ++		9864826	0					
ANR	9865033	UnaryOperator	*		9864826	0					
ANR	9865034	PostIncDecOperationExpression	bp ++		9864826	1					
ANR	9865035	Identifier	bp		9864826	0					
ANR	9865036	IncDec	++		9864826	1					
ANR	9865037	AdditiveExpression	2 - 128		9864826	1		-			
ANR	9865038	PrimaryExpression	2		9864826	0					
ANR	9865039	PrimaryExpression	128		9864826	1					
ANR	9865040	ExpressionStatement	b = ( int16 ) ( * bp ++ << shft )	224:4:8735:8761	9864826	2	True				
ANR	9865041	AssignmentExpression	b = ( int16 ) ( * bp ++ << shft )		9864826	0		=			
ANR	9865042	Identifier	b		9864826	0					
ANR	9865043	CastExpression	( int16 ) ( * bp ++ << shft )		9864826	1					
ANR	9865044	CastTarget	int16		9864826	0					
ANR	9865045	ShiftExpression	* bp ++ << shft		9864826	1		<<			
ANR	9865046	UnaryOperationExpression	* bp ++		9864826	0					
ANR	9865047	UnaryOperator	*		9864826	0					
ANR	9865048	PostIncDecOperationExpression	bp ++		9864826	1					
ANR	9865049	Identifier	bp		9864826	0					
ANR	9865050	IncDec	++		9864826	1					
ANR	9865051	Identifier	shft		9864826	1					
ANR	9865052	ExpressionStatement	cc -= 2	225:4:8767:8774	9864826	3	True				
ANR	9865053	AssignmentExpression	cc -= 2		9864826	0		-=			
ANR	9865054	Identifier	cc		9864826	0					
ANR	9865055	PrimaryExpression	2		9864826	1					
ANR	9865056	WhileStatement	while ( rc -- && i < npixels )		9864826	4					
ANR	9865057	Condition	rc -- && i < npixels	226:11:8787:8805	9864826	0	True				
ANR	9865058	AndExpression	rc -- && i < npixels		9864826	0		&&			
ANR	9865059	PostIncDecOperationExpression	rc --		9864826	0					
ANR	9865060	Identifier	rc		9864826	0					
ANR	9865061	IncDec	--		9864826	1					
ANR	9865062	RelationalExpression	i < npixels		9864826	1		<			
ANR	9865063	Identifier	i		9864826	0					
ANR	9865064	Identifier	npixels		9864826	1					
ANR	9865065	ExpressionStatement	tp [ i ++ ] |= b	227:5:8813:8825	9864826	1	True				
ANR	9865066	AssignmentExpression	tp [ i ++ ] |= b		9864826	0		|=			
ANR	9865067	ArrayIndexing	tp [ i ++ ]		9864826	0					
ANR	9865068	Identifier	tp		9864826	0					
ANR	9865069	PostIncDecOperationExpression	i ++		9864826	1					
ANR	9865070	Identifier	i		9864826	0					
ANR	9865071	IncDec	++		9864826	1					
ANR	9865072	Identifier	b		9864826	1					
ANR	9865073	ElseStatement	else		9864826	0					
ANR	9865074	CompoundStatement		43:10:921:921	9864826	0					
ANR	9865075	ExpressionStatement	rc = * bp ++	229:4:8859:8869	9864826	0	True				
ANR	9865076	AssignmentExpression	rc = * bp ++		9864826	0		=			
ANR	9865077	Identifier	rc		9864826	0					
ANR	9865078	UnaryOperationExpression	* bp ++		9864826	1					
ANR	9865079	UnaryOperator	*		9864826	0					
ANR	9865080	PostIncDecOperationExpression	bp ++		9864826	1					
ANR	9865081	Identifier	bp		9864826	0					
ANR	9865082	IncDec	++		9864826	1					
ANR	9865083	WhileStatement	while ( -- cc && rc -- && i < npixels )		9864826	1					
ANR	9865084	Condition	-- cc && rc -- && i < npixels	230:11:8901:8927	9864826	0	True				
ANR	9865085	AndExpression	-- cc && rc -- && i < npixels		9864826	0		&&			
ANR	9865086	UnaryExpression	-- cc		9864826	0					
ANR	9865087	IncDec	--		9864826	0					
ANR	9865088	Identifier	cc		9864826	1					
ANR	9865089	AndExpression	rc -- && i < npixels		9864826	1		&&			
ANR	9865090	PostIncDecOperationExpression	rc --		9864826	0					
ANR	9865091	Identifier	rc		9864826	0					
ANR	9865092	IncDec	--		9864826	1					
ANR	9865093	RelationalExpression	i < npixels		9864826	1		<			
ANR	9865094	Identifier	i		9864826	0					
ANR	9865095	Identifier	npixels		9864826	1					
ANR	9865096	ExpressionStatement	tp [ i ++ ] |= ( int16 ) * bp ++ << shft	231:5:8935:8966	9864826	1	True				
ANR	9865097	AssignmentExpression	tp [ i ++ ] |= ( int16 ) * bp ++ << shft		9864826	0		|=			
ANR	9865098	ArrayIndexing	tp [ i ++ ]		9864826	0					
ANR	9865099	Identifier	tp		9864826	0					
ANR	9865100	PostIncDecOperationExpression	i ++		9864826	1					
ANR	9865101	Identifier	i		9864826	0					
ANR	9865102	IncDec	++		9864826	1					
ANR	9865103	ShiftExpression	( int16 ) * bp ++ << shft		9864826	1		<<			
ANR	9865104	CastExpression	( int16 ) * bp ++		9864826	0					
ANR	9865105	CastTarget	int16		9864826	0					
ANR	9865106	UnaryOperationExpression	* bp ++		9864826	1					
ANR	9865107	UnaryOperator	*		9864826	0					
ANR	9865108	PostIncDecOperationExpression	bp ++		9864826	1					
ANR	9865109	Identifier	bp		9864826	0					
ANR	9865110	IncDec	++		9864826	1					
ANR	9865111	Identifier	shft		9864826	1					
ANR	9865112	IfStatement	if ( i != npixels )		9864826	1					
ANR	9865113	Condition	i != npixels	234:6:8983:8994	9864826	0	True				
ANR	9865114	EqualityExpression	i != npixels		9864826	0		!=			
ANR	9865115	Identifier	i		9864826	0					
ANR	9865116	Identifier	npixels		9864826	1					
ANR	9865117	CompoundStatement		49:20:1081:1081	9864826	1					
ANR	9865118	ExpressionStatement	"TIFFErrorExt ( tif -> tif_clientdata , module , ""Not enough data at row %lu (short %I64d pixels)"" , ( unsigned long ) tif -> tif_row , ( unsigned __int64 ) ( npixels - i ) )"	236:3:9072:9253	9864826	0	True				
ANR	9865119	CallExpression	"TIFFErrorExt ( tif -> tif_clientdata , module , ""Not enough data at row %lu (short %I64d pixels)"" , ( unsigned long ) tif -> tif_row , ( unsigned __int64 ) ( npixels - i ) )"		9864826	0					
ANR	9865120	Callee	TIFFErrorExt		9864826	0					
ANR	9865121	Identifier	TIFFErrorExt		9864826	0					
ANR	9865122	ArgumentList	tif -> tif_clientdata		9864826	1					
ANR	9865123	Argument	tif -> tif_clientdata		9864826	0					
ANR	9865124	PtrMemberAccess	tif -> tif_clientdata		9864826	0					
ANR	9865125	Identifier	tif		9864826	0					
ANR	9865126	Identifier	tif_clientdata		9864826	1					
ANR	9865127	Argument	module		9864826	1					
ANR	9865128	Identifier	module		9864826	0					
ANR	9865129	Argument	"""Not enough data at row %lu (short %I64d pixels)"""		9864826	2					
ANR	9865130	PrimaryExpression	"""Not enough data at row %lu (short %I64d pixels)"""		9864826	0					
ANR	9865131	Argument	( unsigned long ) tif -> tif_row		9864826	3					
ANR	9865132	CastExpression	( unsigned long ) tif -> tif_row		9864826	0					
ANR	9865133	CastTarget	unsigned long		9864826	0					
ANR	9865134	PtrMemberAccess	tif -> tif_row		9864826	1					
ANR	9865135	Identifier	tif		9864826	0					
ANR	9865136	Identifier	tif_row		9864826	1					
ANR	9865137	Argument	( unsigned __int64 ) ( npixels - i )		9864826	4					
ANR	9865138	CastExpression	( unsigned __int64 ) ( npixels - i )		9864826	0					
ANR	9865139	CastTarget	unsigned __int64		9864826	0					
ANR	9865140	AdditiveExpression	npixels - i		9864826	1		-			
ANR	9865141	Identifier	npixels		9864826	0					
ANR	9865142	Identifier	i		9864826	1					
ANR	9865143	ExpressionStatement	tif -> tif_rawcp = ( uint8 * ) bp	246:3:9458:9486	9864826	1	True				
ANR	9865144	AssignmentExpression	tif -> tif_rawcp = ( uint8 * ) bp		9864826	0		=			
ANR	9865145	PtrMemberAccess	tif -> tif_rawcp		9864826	0					
ANR	9865146	Identifier	tif		9864826	0					
ANR	9865147	Identifier	tif_rawcp		9864826	1					
ANR	9865148	CastExpression	( uint8 * ) bp		9864826	1					
ANR	9865149	CastTarget	uint8 *		9864826	0					
ANR	9865150	Identifier	bp		9864826	1					
ANR	9865151	ExpressionStatement	tif -> tif_rawcc = cc	247:3:9491:9510	9864826	2	True				
ANR	9865152	AssignmentExpression	tif -> tif_rawcc = cc		9864826	0		=			
ANR	9865153	PtrMemberAccess	tif -> tif_rawcc		9864826	0					
ANR	9865154	Identifier	tif		9864826	0					
ANR	9865155	Identifier	tif_rawcc		9864826	1					
ANR	9865156	Identifier	cc		9864826	1					
ANR	9865157	ReturnStatement	return ( 0 ) ;	248:3:9515:9525	9864826	3	True				
ANR	9865158	PrimaryExpression	0		9864826	0					
ANR	9865159	ExpressionStatement	"( * sp -> tfunc ) ( sp , op , npixels )"	251:1:9535:9564	9864826	19	True				
ANR	9865160	CallExpression	"( * sp -> tfunc ) ( sp , op , npixels )"		9864826	0					
ANR	9865161	Callee	* sp -> tfunc		9864826	0					
ANR	9865162	UnaryOperationExpression	* sp -> tfunc		9864826	0					
ANR	9865163	UnaryOperator	*		9864826	0					
ANR	9865164	PtrMemberAccess	sp -> tfunc		9864826	1					
ANR	9865165	Identifier	sp		9864826	0					
ANR	9865166	Identifier	tfunc		9864826	1					
ANR	9865167	ArgumentList	sp		9864826	1					
ANR	9865168	Argument	sp		9864826	0					
ANR	9865169	Identifier	sp		9864826	0					
ANR	9865170	Argument	op		9864826	1					
ANR	9865171	Identifier	op		9864826	0					
ANR	9865172	Argument	npixels		9864826	2					
ANR	9865173	Identifier	npixels		9864826	0					
ANR	9865174	ExpressionStatement	tif -> tif_rawcp = ( uint8 * ) bp	252:1:9567:9595	9864826	20	True				
ANR	9865175	AssignmentExpression	tif -> tif_rawcp = ( uint8 * ) bp		9864826	0		=			
ANR	9865176	PtrMemberAccess	tif -> tif_rawcp		9864826	0					
ANR	9865177	Identifier	tif		9864826	0					
ANR	9865178	Identifier	tif_rawcp		9864826	1					
ANR	9865179	CastExpression	( uint8 * ) bp		9864826	1					
ANR	9865180	CastTarget	uint8 *		9864826	0					
ANR	9865181	Identifier	bp		9864826	1					
ANR	9865182	ExpressionStatement	tif -> tif_rawcc = cc	253:1:9598:9617	9864826	21	True				
ANR	9865183	AssignmentExpression	tif -> tif_rawcc = cc		9864826	0		=			
ANR	9865184	PtrMemberAccess	tif -> tif_rawcc		9864826	0					
ANR	9865185	Identifier	tif		9864826	0					
ANR	9865186	Identifier	tif_rawcc		9864826	1					
ANR	9865187	Identifier	cc		9864826	1					
ANR	9865188	ReturnStatement	return ( 1 ) ;	254:1:9620:9630	9864826	22	True				
ANR	9865189	PrimaryExpression	1		9864826	0					
ANR	9865190	ReturnType	static int		9864826	1					
ANR	9865191	Identifier	LogL16Decode		9864826	2					
ANR	9865192	ParameterList	"TIFF * tif , uint8 * op , tmsize_t occ , uint16 s"		9864826	3					
ANR	9865193	Parameter	TIFF * tif	185:13:7869:7877	9864826	0	True				
ANR	9865194	ParameterType	TIFF *		9864826	0					
ANR	9865195	Identifier	tif		9864826	1					
ANR	9865196	Parameter	uint8 * op	185:24:7880:7888	9864826	1	True				
ANR	9865197	ParameterType	uint8 *		9864826	0					
ANR	9865198	Identifier	op		9864826	1					
ANR	9865199	Parameter	tmsize_t occ	185:35:7891:7902	9864826	2	True				
ANR	9865200	ParameterType	tmsize_t		9864826	0					
ANR	9865201	Identifier	occ		9864826	1					
ANR	9865202	Parameter	uint16 s	185:49:7905:7912	9864826	3	True				
ANR	9865203	ParameterType	uint16		9864826	0					
ANR	9865204	Identifier	s		9864826	1					
ANR	9865205	CFGEntryNode	ENTRY		9864826		True				
ANR	9865206	CFGExitNode	EXIT		9864826		True				
ANR	9865207	Symbol	* sp		9864826						
ANR	9865208	Symbol	* bp ++		9864826						
ANR	9865209	Symbol	sp -> user_datafmt		9864826						
ANR	9865210	Symbol	occ		9864826						
ANR	9865211	Symbol	bp		9864826						
ANR	9865212	Symbol	tif		9864826						
ANR	9865213	Symbol	npixels		9864826						
ANR	9865214	Symbol	sp -> tbuflen		9864826						
ANR	9865215	Symbol	tif -> tif_rawcc		9864826						
ANR	9865216	Symbol	sp -> pixel_size		9864826						
ANR	9865217	Symbol	DecoderState		9864826						
ANR	9865218	Symbol	SGILOGDATAFMT_16BIT		9864826						
ANR	9865219	Symbol	shft		9864826						
ANR	9865220	Symbol	* bp		9864826						
ANR	9865221	Symbol	sp -> tbuf		9864826						
ANR	9865222	Symbol	sp -> tfunc		9864826						
ANR	9865223	Symbol	sp		9864826						
ANR	9865224	Symbol	cc		9864826						
ANR	9865225	Symbol	op		9864826						
ANR	9865226	Symbol	* tp		9864826						
ANR	9865227	Symbol	b		9864826						
ANR	9865228	Symbol	NULL		9864826						
ANR	9865229	Symbol	module		9864826						
ANR	9865230	Symbol	i		9864826						
ANR	9865231	Symbol	tif -> tif_row		9864826						
ANR	9865232	Symbol	tif -> tif_rawcp		9864826						
ANR	9865233	Symbol	tif -> tif_clientdata		9864826						
ANR	9865234	Symbol	rc		9864826						
ANR	9865235	Symbol	s		9864826						
ANR	9865236	Symbol	* tif		9864826						
ANR	9865237	Symbol	tp		9864826						
ANR	9865238	Function	LogLuvDecode24	260:0:9679:11013							
ANR	9865239	FunctionDef	"LogLuvDecode24 (TIFF * tif , uint8 * op , tmsize_t occ , uint16 s)"		9865238	0					
ANR	9865240	CompoundStatement		262:0:9751:11013	9865238	0					
ANR	9865241	Statement	static	263:1:9754:9759	9865238	0	True				
ANR	9865242	IdentifierDeclStatement	"const char module [ ] = ""LogLuvDecode24"" ;"	263:8:9761:9799	9865238	1	True				
ANR	9865243	IdentifierDecl	"module [ ] = ""LogLuvDecode24"""		9865238	0					
ANR	9865244	IdentifierDeclType	const char [ ]		9865238	0					
ANR	9865245	Identifier	module		9865238	1					
ANR	9865246	AssignmentExpression	"module [ ] = ""LogLuvDecode24"""		9865238	2		=			
ANR	9865247	Identifier	module		9865238	0					
ANR	9865248	PrimaryExpression	"""LogLuvDecode24"""		9865238	1					
ANR	9865249	IdentifierDeclStatement	LogLuvState * sp = DecoderState ( tif ) ;	264:1:9802:9837	9865238	2	True				
ANR	9865250	IdentifierDecl	* sp = DecoderState ( tif )		9865238	0					
ANR	9865251	IdentifierDeclType	LogLuvState *		9865238	0					
ANR	9865252	Identifier	sp		9865238	1					
ANR	9865253	AssignmentExpression	* sp = DecoderState ( tif )		9865238	2		=			
ANR	9865254	Identifier	sp		9865238	0					
ANR	9865255	CallExpression	DecoderState ( tif )		9865238	1					
ANR	9865256	Callee	DecoderState		9865238	0					
ANR	9865257	Identifier	DecoderState		9865238	0					
ANR	9865258	ArgumentList	tif		9865238	1					
ANR	9865259	Argument	tif		9865238	0					
ANR	9865260	Identifier	tif		9865238	0					
ANR	9865261	IdentifierDeclStatement	tmsize_t cc ;	265:1:9840:9851	9865238	3	True				
ANR	9865262	IdentifierDecl	cc		9865238	0					
ANR	9865263	IdentifierDeclType	tmsize_t		9865238	0					
ANR	9865264	Identifier	cc		9865238	1					
ANR	9865265	IdentifierDeclStatement	tmsize_t i ;	266:1:9854:9864	9865238	4	True				
ANR	9865266	IdentifierDecl	i		9865238	0					
ANR	9865267	IdentifierDeclType	tmsize_t		9865238	0					
ANR	9865268	Identifier	i		9865238	1					
ANR	9865269	IdentifierDeclStatement	tmsize_t npixels ;	267:1:9867:9883	9865238	5	True				
ANR	9865270	IdentifierDecl	npixels		9865238	0					
ANR	9865271	IdentifierDeclType	tmsize_t		9865238	0					
ANR	9865272	Identifier	npixels		9865238	1					
ANR	9865273	IdentifierDeclStatement	unsigned char * bp ;	268:1:9886:9903	9865238	6	True				
ANR	9865274	IdentifierDecl	* bp		9865238	0					
ANR	9865275	IdentifierDeclType	unsigned char *		9865238	0					
ANR	9865276	Identifier	bp		9865238	1					
ANR	9865277	IdentifierDeclStatement	uint32 * tp ;	269:1:9906:9916	9865238	7	True				
ANR	9865278	IdentifierDecl	* tp		9865238	0					
ANR	9865279	IdentifierDeclType	uint32 *		9865238	0					
ANR	9865280	Identifier	tp		9865238	1					
ANR	9865281	ExpressionStatement	assert ( s == 0 )	271:1:9920:9934	9865238	8	True				
ANR	9865282	CallExpression	assert ( s == 0 )		9865238	0					
ANR	9865283	Callee	assert		9865238	0					
ANR	9865284	Identifier	assert		9865238	0					
ANR	9865285	ArgumentList	s == 0		9865238	1					
ANR	9865286	Argument	s == 0		9865238	0					
ANR	9865287	EqualityExpression	s == 0		9865238	0		==			
ANR	9865288	Identifier	s		9865238	0					
ANR	9865289	PrimaryExpression	0		9865238	1					
ANR	9865290	ExpressionStatement	assert ( sp != NULL )	272:1:9937:9955	9865238	9	True				
ANR	9865291	CallExpression	assert ( sp != NULL )		9865238	0					
ANR	9865292	Callee	assert		9865238	0					
ANR	9865293	Identifier	assert		9865238	0					
ANR	9865294	ArgumentList	sp != NULL		9865238	1					
ANR	9865295	Argument	sp != NULL		9865238	0					
ANR	9865296	EqualityExpression	sp != NULL		9865238	0		!=			
ANR	9865297	Identifier	sp		9865238	0					
ANR	9865298	Identifier	NULL		9865238	1					
ANR	9865299	ExpressionStatement	npixels = occ / sp -> pixel_size	274:1:9959:9989	9865238	10	True				
ANR	9865300	AssignmentExpression	npixels = occ / sp -> pixel_size		9865238	0		=			
ANR	9865301	Identifier	npixels		9865238	0					
ANR	9865302	MultiplicativeExpression	occ / sp -> pixel_size		9865238	1		/			
ANR	9865303	Identifier	occ		9865238	0					
ANR	9865304	PtrMemberAccess	sp -> pixel_size		9865238	1					
ANR	9865305	Identifier	sp		9865238	0					
ANR	9865306	Identifier	pixel_size		9865238	1					
ANR	9865307	IfStatement	if ( sp -> user_datafmt == SGILOGDATAFMT_RAW )		9865238	11					
ANR	9865308	Condition	sp -> user_datafmt == SGILOGDATAFMT_RAW	276:5:9997:10033	9865238	0	True				
ANR	9865309	EqualityExpression	sp -> user_datafmt == SGILOGDATAFMT_RAW		9865238	0		==			
ANR	9865310	PtrMemberAccess	sp -> user_datafmt		9865238	0					
ANR	9865311	Identifier	sp		9865238	0					
ANR	9865312	Identifier	user_datafmt		9865238	1					
ANR	9865313	Identifier	SGILOGDATAFMT_RAW		9865238	1					
ANR	9865314	ExpressionStatement	tp = ( uint32 * ) op	277:2:10038:10055	9865238	1	True				
ANR	9865315	AssignmentExpression	tp = ( uint32 * ) op		9865238	0		=			
ANR	9865316	Identifier	tp		9865238	0					
ANR	9865317	CastExpression	( uint32 * ) op		9865238	1					
ANR	9865318	CastTarget	uint32 *		9865238	0					
ANR	9865319	Identifier	op		9865238	1					
ANR	9865320	ElseStatement	else		9865238	0					
ANR	9865321	CompoundStatement		17:6:311:311	9865238	0					
ANR	9865322	IfStatement	if ( sp -> tbuflen < npixels )		9865238	0					
ANR	9865323	Condition	sp -> tbuflen < npixels	279:5:10070:10090	9865238	0	True				
ANR	9865324	RelationalExpression	sp -> tbuflen < npixels		9865238	0		<			
ANR	9865325	PtrMemberAccess	sp -> tbuflen		9865238	0					
ANR	9865326	Identifier	sp		9865238	0					
ANR	9865327	Identifier	tbuflen		9865238	1					
ANR	9865328	Identifier	npixels		9865238	1					
ANR	9865329	CompoundStatement		18:28:341:341	9865238	1					
ANR	9865330	ExpressionStatement	"TIFFErrorExt ( tif -> tif_clientdata , module , ""Translation buffer too short"" )"	280:3:10098:10178	9865238	0	True				
ANR	9865331	CallExpression	"TIFFErrorExt ( tif -> tif_clientdata , module , ""Translation buffer too short"" )"		9865238	0					
ANR	9865332	Callee	TIFFErrorExt		9865238	0					
ANR	9865333	Identifier	TIFFErrorExt		9865238	0					
ANR	9865334	ArgumentList	tif -> tif_clientdata		9865238	1					
ANR	9865335	Argument	tif -> tif_clientdata		9865238	0					
ANR	9865336	PtrMemberAccess	tif -> tif_clientdata		9865238	0					
ANR	9865337	Identifier	tif		9865238	0					
ANR	9865338	Identifier	tif_clientdata		9865238	1					
ANR	9865339	Argument	module		9865238	1					
ANR	9865340	Identifier	module		9865238	0					
ANR	9865341	Argument	"""Translation buffer too short"""		9865238	2					
ANR	9865342	PrimaryExpression	"""Translation buffer too short"""		9865238	0					
ANR	9865343	ReturnStatement	return ( 0 ) ;	282:3:10183:10193	9865238	1	True				
ANR	9865344	PrimaryExpression	0		9865238	0					
ANR	9865345	ExpressionStatement	tp = ( uint32 * ) sp -> tbuf	284:2:10201:10225	9865238	1	True				
ANR	9865346	AssignmentExpression	tp = ( uint32 * ) sp -> tbuf		9865238	0		=			
ANR	9865347	Identifier	tp		9865238	0					
ANR	9865348	CastExpression	( uint32 * ) sp -> tbuf		9865238	1					
ANR	9865349	CastTarget	uint32 *		9865238	0					
ANR	9865350	PtrMemberAccess	sp -> tbuf		9865238	1					
ANR	9865351	Identifier	sp		9865238	0					
ANR	9865352	Identifier	tbuf		9865238	1					
ANR	9865353	ExpressionStatement	bp = ( unsigned char * ) tif -> tif_rawcp	287:1:10262:10298	9865238	12	True				
ANR	9865354	AssignmentExpression	bp = ( unsigned char * ) tif -> tif_rawcp		9865238	0		=			
ANR	9865355	Identifier	bp		9865238	0					
ANR	9865356	CastExpression	( unsigned char * ) tif -> tif_rawcp		9865238	1					
ANR	9865357	CastTarget	unsigned char *		9865238	0					
ANR	9865358	PtrMemberAccess	tif -> tif_rawcp		9865238	1					
ANR	9865359	Identifier	tif		9865238	0					
ANR	9865360	Identifier	tif_rawcp		9865238	1					
ANR	9865361	ExpressionStatement	cc = tif -> tif_rawcc	288:1:10301:10320	9865238	13	True				
ANR	9865362	AssignmentExpression	cc = tif -> tif_rawcc		9865238	0		=			
ANR	9865363	Identifier	cc		9865238	0					
ANR	9865364	PtrMemberAccess	tif -> tif_rawcc		9865238	1					
ANR	9865365	Identifier	tif		9865238	0					
ANR	9865366	Identifier	tif_rawcc		9865238	1					
ANR	9865367	ForStatement	for ( i = 0 ; i < npixels && cc >= 3 ; i ++ )		9865238	14					
ANR	9865368	ForInit	i = 0 ;	289:6:10328:10333	9865238	0	True				
ANR	9865369	AssignmentExpression	i = 0		9865238	0		=			
ANR	9865370	Identifier	i		9865238	0					
ANR	9865371	PrimaryExpression	0		9865238	1					
ANR	9865372	Condition	i < npixels && cc >= 3	289:13:10335:10356	9865238	1	True				
ANR	9865373	AndExpression	i < npixels && cc >= 3		9865238	0		&&			
ANR	9865374	RelationalExpression	i < npixels		9865238	0		<			
ANR	9865375	Identifier	i		9865238	0					
ANR	9865376	Identifier	npixels		9865238	1					
ANR	9865377	RelationalExpression	cc >= 3		9865238	1		>=			
ANR	9865378	Identifier	cc		9865238	0					
ANR	9865379	PrimaryExpression	3		9865238	1					
ANR	9865380	PostIncDecOperationExpression	i ++	289:37:10359:10361	9865238	2	True				
ANR	9865381	Identifier	i		9865238	0					
ANR	9865382	IncDec	++		9865238	1					
ANR	9865383	CompoundStatement		28:42:612:612	9865238	3					
ANR	9865384	ExpressionStatement	tp [ i ] = bp [ 0 ] << 16 | bp [ 1 ] << 8 | bp [ 2 ]	290:2:10368:10408	9865238	0	True				
ANR	9865385	AssignmentExpression	tp [ i ] = bp [ 0 ] << 16 | bp [ 1 ] << 8 | bp [ 2 ]		9865238	0		=			
ANR	9865386	ArrayIndexing	tp [ i ]		9865238	0					
ANR	9865387	Identifier	tp		9865238	0					
ANR	9865388	Identifier	i		9865238	1					
ANR	9865389	InclusiveOrExpression	bp [ 0 ] << 16 | bp [ 1 ] << 8 | bp [ 2 ]		9865238	1		|			
ANR	9865390	ShiftExpression	bp [ 0 ] << 16		9865238	0		<<			
ANR	9865391	ArrayIndexing	bp [ 0 ]		9865238	0					
ANR	9865392	Identifier	bp		9865238	0					
ANR	9865393	PrimaryExpression	0		9865238	1					
ANR	9865394	PrimaryExpression	16		9865238	1					
ANR	9865395	InclusiveOrExpression	bp [ 1 ] << 8 | bp [ 2 ]		9865238	1		|			
ANR	9865396	ShiftExpression	bp [ 1 ] << 8		9865238	0		<<			
ANR	9865397	ArrayIndexing	bp [ 1 ]		9865238	0					
ANR	9865398	Identifier	bp		9865238	0					
ANR	9865399	PrimaryExpression	1		9865238	1					
ANR	9865400	PrimaryExpression	8		9865238	1					
ANR	9865401	ArrayIndexing	bp [ 2 ]		9865238	1					
ANR	9865402	Identifier	bp		9865238	0					
ANR	9865403	PrimaryExpression	2		9865238	1					
ANR	9865404	ExpressionStatement	bp += 3	291:2:10412:10419	9865238	1	True				
ANR	9865405	AssignmentExpression	bp += 3		9865238	0		+=			
ANR	9865406	Identifier	bp		9865238	0					
ANR	9865407	PrimaryExpression	3		9865238	1					
ANR	9865408	ExpressionStatement	cc -= 3	292:2:10423:10430	9865238	2	True				
ANR	9865409	AssignmentExpression	cc -= 3		9865238	0		-=			
ANR	9865410	Identifier	cc		9865238	0					
ANR	9865411	PrimaryExpression	3		9865238	1					
ANR	9865412	ExpressionStatement	tif -> tif_rawcp = ( uint8 * ) bp	294:1:10436:10464	9865238	15	True				
ANR	9865413	AssignmentExpression	tif -> tif_rawcp = ( uint8 * ) bp		9865238	0		=			
ANR	9865414	PtrMemberAccess	tif -> tif_rawcp		9865238	0					
ANR	9865415	Identifier	tif		9865238	0					
ANR	9865416	Identifier	tif_rawcp		9865238	1					
ANR	9865417	CastExpression	( uint8 * ) bp		9865238	1					
ANR	9865418	CastTarget	uint8 *		9865238	0					
ANR	9865419	Identifier	bp		9865238	1					
ANR	9865420	ExpressionStatement	tif -> tif_rawcc = cc	295:1:10467:10486	9865238	16	True				
ANR	9865421	AssignmentExpression	tif -> tif_rawcc = cc		9865238	0		=			
ANR	9865422	PtrMemberAccess	tif -> tif_rawcc		9865238	0					
ANR	9865423	Identifier	tif		9865238	0					
ANR	9865424	Identifier	tif_rawcc		9865238	1					
ANR	9865425	Identifier	cc		9865238	1					
ANR	9865426	IfStatement	if ( i != npixels )		9865238	17					
ANR	9865427	Condition	i != npixels	296:5:10493:10504	9865238	0	True				
ANR	9865428	EqualityExpression	i != npixels		9865238	0		!=			
ANR	9865429	Identifier	i		9865238	0					
ANR	9865430	Identifier	npixels		9865238	1					
ANR	9865431	CompoundStatement		35:19:755:755	9865238	1					
ANR	9865432	ExpressionStatement	"TIFFErrorExt ( tif -> tif_clientdata , module , ""Not enough data at row %lu (short %I64d pixels)"" , ( unsigned long ) tif -> tif_row , ( unsigned __int64 ) ( npixels - i ) )"	298:2:10581:10756	9865238	0	True				
ANR	9865433	CallExpression	"TIFFErrorExt ( tif -> tif_clientdata , module , ""Not enough data at row %lu (short %I64d pixels)"" , ( unsigned long ) tif -> tif_row , ( unsigned __int64 ) ( npixels - i ) )"		9865238	0					
ANR	9865434	Callee	TIFFErrorExt		9865238	0					
ANR	9865435	Identifier	TIFFErrorExt		9865238	0					
ANR	9865436	ArgumentList	tif -> tif_clientdata		9865238	1					
ANR	9865437	Argument	tif -> tif_clientdata		9865238	0					
ANR	9865438	PtrMemberAccess	tif -> tif_clientdata		9865238	0					
ANR	9865439	Identifier	tif		9865238	0					
ANR	9865440	Identifier	tif_clientdata		9865238	1					
ANR	9865441	Argument	module		9865238	1					
ANR	9865442	Identifier	module		9865238	0					
ANR	9865443	Argument	"""Not enough data at row %lu (short %I64d pixels)"""		9865238	2					
ANR	9865444	PrimaryExpression	"""Not enough data at row %lu (short %I64d pixels)"""		9865238	0					
ANR	9865445	Argument	( unsigned long ) tif -> tif_row		9865238	3					
ANR	9865446	CastExpression	( unsigned long ) tif -> tif_row		9865238	0					
ANR	9865447	CastTarget	unsigned long		9865238	0					
ANR	9865448	PtrMemberAccess	tif -> tif_row		9865238	1					
ANR	9865449	Identifier	tif		9865238	0					
ANR	9865450	Identifier	tif_row		9865238	1					
ANR	9865451	Argument	( unsigned __int64 ) ( npixels - i )		9865238	4					
ANR	9865452	CastExpression	( unsigned __int64 ) ( npixels - i )		9865238	0					
ANR	9865453	CastTarget	unsigned __int64		9865238	0					
ANR	9865454	AdditiveExpression	npixels - i		9865238	1		-			
ANR	9865455	Identifier	npixels		9865238	0					
ANR	9865456	Identifier	i		9865238	1					
ANR	9865457	ReturnStatement	return ( 0 ) ;	308:2:10953:10963	9865238	1	True				
ANR	9865458	PrimaryExpression	0		9865238	0					
ANR	9865459	ExpressionStatement	"( * sp -> tfunc ) ( sp , op , npixels )"	310:1:10969:10998	9865238	18	True				
ANR	9865460	CallExpression	"( * sp -> tfunc ) ( sp , op , npixels )"		9865238	0					
ANR	9865461	Callee	* sp -> tfunc		9865238	0					
ANR	9865462	UnaryOperationExpression	* sp -> tfunc		9865238	0					
ANR	9865463	UnaryOperator	*		9865238	0					
ANR	9865464	PtrMemberAccess	sp -> tfunc		9865238	1					
ANR	9865465	Identifier	sp		9865238	0					
ANR	9865466	Identifier	tfunc		9865238	1					
ANR	9865467	ArgumentList	sp		9865238	1					
ANR	9865468	Argument	sp		9865238	0					
ANR	9865469	Identifier	sp		9865238	0					
ANR	9865470	Argument	op		9865238	1					
ANR	9865471	Identifier	op		9865238	0					
ANR	9865472	Argument	npixels		9865238	2					
ANR	9865473	Identifier	npixels		9865238	0					
ANR	9865474	ReturnStatement	return ( 1 ) ;	311:1:11001:11011	9865238	19	True				
ANR	9865475	PrimaryExpression	1		9865238	0					
ANR	9865476	ReturnType	static int		9865238	1					
ANR	9865477	Identifier	LogLuvDecode24		9865238	2					
ANR	9865478	ParameterList	"TIFF * tif , uint8 * op , tmsize_t occ , uint16 s"		9865238	3					
ANR	9865479	Parameter	TIFF * tif	261:15:9705:9713	9865238	0	True				
ANR	9865480	ParameterType	TIFF *		9865238	0					
ANR	9865481	Identifier	tif		9865238	1					
ANR	9865482	Parameter	uint8 * op	261:26:9716:9724	9865238	1	True				
ANR	9865483	ParameterType	uint8 *		9865238	0					
ANR	9865484	Identifier	op		9865238	1					
ANR	9865485	Parameter	tmsize_t occ	261:37:9727:9738	9865238	2	True				
ANR	9865486	ParameterType	tmsize_t		9865238	0					
ANR	9865487	Identifier	occ		9865238	1					
ANR	9865488	Parameter	uint16 s	261:51:9741:9748	9865238	3	True				
ANR	9865489	ParameterType	uint16		9865238	0					
ANR	9865490	Identifier	s		9865238	1					
ANR	9865491	CFGEntryNode	ENTRY		9865238		True				
ANR	9865492	CFGExitNode	EXIT		9865238		True				
ANR	9865493	Symbol	* sp		9865238						
ANR	9865494	Symbol	sp -> user_datafmt		9865238						
ANR	9865495	Symbol	SGILOGDATAFMT_RAW		9865238						
ANR	9865496	Symbol	occ		9865238						
ANR	9865497	Symbol	bp		9865238						
ANR	9865498	Symbol	tif		9865238						
ANR	9865499	Symbol	npixels		9865238						
ANR	9865500	Symbol	sp -> tbuflen		9865238						
ANR	9865501	Symbol	tif -> tif_rawcc		9865238						
ANR	9865502	Symbol	sp -> pixel_size		9865238						
ANR	9865503	Symbol	DecoderState		9865238						
ANR	9865504	Symbol	* bp		9865238						
ANR	9865505	Symbol	sp -> tbuf		9865238						
ANR	9865506	Symbol	sp -> tfunc		9865238						
ANR	9865507	Symbol	sp		9865238						
ANR	9865508	Symbol	cc		9865238						
ANR	9865509	Symbol	op		9865238						
ANR	9865510	Symbol	* tp		9865238						
ANR	9865511	Symbol	NULL		9865238						
ANR	9865512	Symbol	module		9865238						
ANR	9865513	Symbol	i		9865238						
ANR	9865514	Symbol	tif -> tif_row		9865238						
ANR	9865515	Symbol	tif -> tif_rawcp		9865238						
ANR	9865516	Symbol	tif -> tif_clientdata		9865238						
ANR	9865517	Symbol	s		9865238						
ANR	9865518	Symbol	* i		9865238						
ANR	9865519	Symbol	* tif		9865238						
ANR	9865520	Symbol	tp		9865238						
ANR	9865521	Function	LogLuvDecode32	317:0:11060:12850							
ANR	9865522	FunctionDef	"LogLuvDecode32 (TIFF * tif , uint8 * op , tmsize_t occ , uint16 s)"		9865521	0					
ANR	9865523	CompoundStatement		319:0:11132:12850	9865521	0					
ANR	9865524	Statement	static	320:1:11135:11140	9865521	0	True				
ANR	9865525	IdentifierDeclStatement	"const char module [ ] = ""LogLuvDecode32"" ;"	320:8:11142:11180	9865521	1	True				
ANR	9865526	IdentifierDecl	"module [ ] = ""LogLuvDecode32"""		9865521	0					
ANR	9865527	IdentifierDeclType	const char [ ]		9865521	0					
ANR	9865528	Identifier	module		9865521	1					
ANR	9865529	AssignmentExpression	"module [ ] = ""LogLuvDecode32"""		9865521	2		=			
ANR	9865530	Identifier	module		9865521	0					
ANR	9865531	PrimaryExpression	"""LogLuvDecode32"""		9865521	1					
ANR	9865532	IdentifierDeclStatement	LogLuvState * sp ;	321:1:11183:11198	9865521	2	True				
ANR	9865533	IdentifierDecl	* sp		9865521	0					
ANR	9865534	IdentifierDeclType	LogLuvState *		9865521	0					
ANR	9865535	Identifier	sp		9865521	1					
ANR	9865536	IdentifierDeclStatement	int shft ;	322:1:11201:11209	9865521	3	True				
ANR	9865537	IdentifierDecl	shft		9865521	0					
ANR	9865538	IdentifierDeclType	int		9865521	0					
ANR	9865539	Identifier	shft		9865521	1					
ANR	9865540	IdentifierDeclStatement	tmsize_t i ;	323:1:11212:11222	9865521	4	True				
ANR	9865541	IdentifierDecl	i		9865521	0					
ANR	9865542	IdentifierDeclType	tmsize_t		9865521	0					
ANR	9865543	Identifier	i		9865521	1					
ANR	9865544	IdentifierDeclStatement	tmsize_t npixels ;	324:1:11225:11241	9865521	5	True				
ANR	9865545	IdentifierDecl	npixels		9865521	0					
ANR	9865546	IdentifierDeclType	tmsize_t		9865521	0					
ANR	9865547	Identifier	npixels		9865521	1					
ANR	9865548	IdentifierDeclStatement	unsigned char * bp ;	325:1:11244:11261	9865521	6	True				
ANR	9865549	IdentifierDecl	* bp		9865521	0					
ANR	9865550	IdentifierDeclType	unsigned char *		9865521	0					
ANR	9865551	Identifier	bp		9865521	1					
ANR	9865552	IdentifierDeclStatement	uint32 * tp ;	326:1:11264:11274	9865521	7	True				
ANR	9865553	IdentifierDecl	* tp		9865521	0					
ANR	9865554	IdentifierDeclType	uint32 *		9865521	0					
ANR	9865555	Identifier	tp		9865521	1					
ANR	9865556	IdentifierDeclStatement	uint32 b ;	327:1:11277:11285	9865521	8	True				
ANR	9865557	IdentifierDecl	b		9865521	0					
ANR	9865558	IdentifierDeclType	uint32		9865521	0					
ANR	9865559	Identifier	b		9865521	1					
ANR	9865560	IdentifierDeclStatement	tmsize_t cc ;	328:1:11288:11299	9865521	9	True				
ANR	9865561	IdentifierDecl	cc		9865521	0					
ANR	9865562	IdentifierDeclType	tmsize_t		9865521	0					
ANR	9865563	Identifier	cc		9865521	1					
ANR	9865564	IdentifierDeclStatement	int rc ;	329:1:11302:11308	9865521	10	True				
ANR	9865565	IdentifierDecl	rc		9865521	0					
ANR	9865566	IdentifierDeclType	int		9865521	0					
ANR	9865567	Identifier	rc		9865521	1					
ANR	9865568	ExpressionStatement	assert ( s == 0 )	331:1:11312:11326	9865521	11	True				
ANR	9865569	CallExpression	assert ( s == 0 )		9865521	0					
ANR	9865570	Callee	assert		9865521	0					
ANR	9865571	Identifier	assert		9865521	0					
ANR	9865572	ArgumentList	s == 0		9865521	1					
ANR	9865573	Argument	s == 0		9865521	0					
ANR	9865574	EqualityExpression	s == 0		9865521	0		==			
ANR	9865575	Identifier	s		9865521	0					
ANR	9865576	PrimaryExpression	0		9865521	1					
ANR	9865577	ExpressionStatement	sp = DecoderState ( tif )	332:1:11329:11351	9865521	12	True				
ANR	9865578	AssignmentExpression	sp = DecoderState ( tif )		9865521	0		=			
ANR	9865579	Identifier	sp		9865521	0					
ANR	9865580	CallExpression	DecoderState ( tif )		9865521	1					
ANR	9865581	Callee	DecoderState		9865521	0					
ANR	9865582	Identifier	DecoderState		9865521	0					
ANR	9865583	ArgumentList	tif		9865521	1					
ANR	9865584	Argument	tif		9865521	0					
ANR	9865585	Identifier	tif		9865521	0					
ANR	9865586	ExpressionStatement	assert ( sp != NULL )	333:1:11354:11372	9865521	13	True				
ANR	9865587	CallExpression	assert ( sp != NULL )		9865521	0					
ANR	9865588	Callee	assert		9865521	0					
ANR	9865589	Identifier	assert		9865521	0					
ANR	9865590	ArgumentList	sp != NULL		9865521	1					
ANR	9865591	Argument	sp != NULL		9865521	0					
ANR	9865592	EqualityExpression	sp != NULL		9865521	0		!=			
ANR	9865593	Identifier	sp		9865521	0					
ANR	9865594	Identifier	NULL		9865521	1					
ANR	9865595	ExpressionStatement	npixels = occ / sp -> pixel_size	335:1:11376:11406	9865521	14	True				
ANR	9865596	AssignmentExpression	npixels = occ / sp -> pixel_size		9865521	0		=			
ANR	9865597	Identifier	npixels		9865521	0					
ANR	9865598	MultiplicativeExpression	occ / sp -> pixel_size		9865521	1		/			
ANR	9865599	Identifier	occ		9865521	0					
ANR	9865600	PtrMemberAccess	sp -> pixel_size		9865521	1					
ANR	9865601	Identifier	sp		9865521	0					
ANR	9865602	Identifier	pixel_size		9865521	1					
ANR	9865603	IfStatement	if ( sp -> user_datafmt == SGILOGDATAFMT_RAW )		9865521	15					
ANR	9865604	Condition	sp -> user_datafmt == SGILOGDATAFMT_RAW	337:5:11414:11450	9865521	0	True				
ANR	9865605	EqualityExpression	sp -> user_datafmt == SGILOGDATAFMT_RAW		9865521	0		==			
ANR	9865606	PtrMemberAccess	sp -> user_datafmt		9865521	0					
ANR	9865607	Identifier	sp		9865521	0					
ANR	9865608	Identifier	user_datafmt		9865521	1					
ANR	9865609	Identifier	SGILOGDATAFMT_RAW		9865521	1					
ANR	9865610	ExpressionStatement	tp = ( uint32 * ) op	338:2:11455:11472	9865521	1	True				
ANR	9865611	AssignmentExpression	tp = ( uint32 * ) op		9865521	0		=			
ANR	9865612	Identifier	tp		9865521	0					
ANR	9865613	CastExpression	( uint32 * ) op		9865521	1					
ANR	9865614	CastTarget	uint32 *		9865521	0					
ANR	9865615	Identifier	op		9865521	1					
ANR	9865616	ElseStatement	else		9865521	0					
ANR	9865617	CompoundStatement		21:6:347:347	9865521	0					
ANR	9865618	IfStatement	if ( sp -> tbuflen < npixels )		9865521	0					
ANR	9865619	Condition	sp -> tbuflen < npixels	340:5:11487:11507	9865521	0	True				
ANR	9865620	RelationalExpression	sp -> tbuflen < npixels		9865521	0		<			
ANR	9865621	PtrMemberAccess	sp -> tbuflen		9865521	0					
ANR	9865622	Identifier	sp		9865521	0					
ANR	9865623	Identifier	tbuflen		9865521	1					
ANR	9865624	Identifier	npixels		9865521	1					
ANR	9865625	CompoundStatement		22:28:377:377	9865521	1					
ANR	9865626	ExpressionStatement	"TIFFErrorExt ( tif -> tif_clientdata , module , ""Translation buffer too short"" )"	341:3:11515:11595	9865521	0	True				
ANR	9865627	CallExpression	"TIFFErrorExt ( tif -> tif_clientdata , module , ""Translation buffer too short"" )"		9865521	0					
ANR	9865628	Callee	TIFFErrorExt		9865521	0					
ANR	9865629	Identifier	TIFFErrorExt		9865521	0					
ANR	9865630	ArgumentList	tif -> tif_clientdata		9865521	1					
ANR	9865631	Argument	tif -> tif_clientdata		9865521	0					
ANR	9865632	PtrMemberAccess	tif -> tif_clientdata		9865521	0					
ANR	9865633	Identifier	tif		9865521	0					
ANR	9865634	Identifier	tif_clientdata		9865521	1					
ANR	9865635	Argument	module		9865521	1					
ANR	9865636	Identifier	module		9865521	0					
ANR	9865637	Argument	"""Translation buffer too short"""		9865521	2					
ANR	9865638	PrimaryExpression	"""Translation buffer too short"""		9865521	0					
ANR	9865639	ReturnStatement	return ( 0 ) ;	343:3:11600:11610	9865521	1	True				
ANR	9865640	PrimaryExpression	0		9865521	0					
ANR	9865641	ExpressionStatement	tp = ( uint32 * ) sp -> tbuf	345:2:11618:11641	9865521	1	True				
ANR	9865642	AssignmentExpression	tp = ( uint32 * ) sp -> tbuf		9865521	0		=			
ANR	9865643	Identifier	tp		9865521	0					
ANR	9865644	CastExpression	( uint32 * ) sp -> tbuf		9865521	1					
ANR	9865645	CastTarget	uint32 *		9865521	0					
ANR	9865646	PtrMemberAccess	sp -> tbuf		9865521	1					
ANR	9865647	Identifier	sp		9865521	0					
ANR	9865648	Identifier	tbuf		9865521	1					
ANR	9865649	ExpressionStatement	"_TIFFmemset ( ( void * ) tp , 0 , npixels * sizeof ( tp [ 0 ] ) )"	347:1:11647:11697	9865521	16	True				
ANR	9865650	CallExpression	"_TIFFmemset ( ( void * ) tp , 0 , npixels * sizeof ( tp [ 0 ] ) )"		9865521	0					
ANR	9865651	Callee	_TIFFmemset		9865521	0					
ANR	9865652	Identifier	_TIFFmemset		9865521	0					
ANR	9865653	ArgumentList	( void * ) tp		9865521	1					
ANR	9865654	Argument	( void * ) tp		9865521	0					
ANR	9865655	CastExpression	( void * ) tp		9865521	0					
ANR	9865656	CastTarget	void *		9865521	0					
ANR	9865657	Identifier	tp		9865521	1					
ANR	9865658	Argument	0		9865521	1					
ANR	9865659	PrimaryExpression	0		9865521	0					
ANR	9865660	Argument	npixels * sizeof ( tp [ 0 ] )		9865521	2					
ANR	9865661	MultiplicativeExpression	npixels * sizeof ( tp [ 0 ] )		9865521	0		*			
ANR	9865662	Identifier	npixels		9865521	0					
ANR	9865663	SizeofExpression	sizeof ( tp [ 0 ] )		9865521	1					
ANR	9865664	Sizeof	sizeof		9865521	0					
ANR	9865665	ArrayIndexing	tp [ 0 ]		9865521	1					
ANR	9865666	Identifier	tp		9865521	0					
ANR	9865667	PrimaryExpression	0		9865521	1					
ANR	9865668	ExpressionStatement	bp = ( unsigned char * ) tif -> tif_rawcp	349:1:11701:11737	9865521	17	True				
ANR	9865669	AssignmentExpression	bp = ( unsigned char * ) tif -> tif_rawcp		9865521	0		=			
ANR	9865670	Identifier	bp		9865521	0					
ANR	9865671	CastExpression	( unsigned char * ) tif -> tif_rawcp		9865521	1					
ANR	9865672	CastTarget	unsigned char *		9865521	0					
ANR	9865673	PtrMemberAccess	tif -> tif_rawcp		9865521	1					
ANR	9865674	Identifier	tif		9865521	0					
ANR	9865675	Identifier	tif_rawcp		9865521	1					
ANR	9865676	ExpressionStatement	cc = tif -> tif_rawcc	350:1:11740:11759	9865521	18	True				
ANR	9865677	AssignmentExpression	cc = tif -> tif_rawcc		9865521	0		=			
ANR	9865678	Identifier	cc		9865521	0					
ANR	9865679	PtrMemberAccess	tif -> tif_rawcc		9865521	1					
ANR	9865680	Identifier	tif		9865521	0					
ANR	9865681	Identifier	tif_rawcc		9865521	1					
ANR	9865682	ForStatement	for ( shft = 4 * 8 ; ( shft -= 8 ) >= 0 ; )		9865521	19					
ANR	9865683	ForInit	shft = 4 * 8 ;	352:6:11795:11805	9865521	0	True				
ANR	9865684	AssignmentExpression	shft = 4 * 8		9865521	0		=			
ANR	9865685	Identifier	shft		9865521	0					
ANR	9865686	MultiplicativeExpression	4 * 8		9865521	1		*			
ANR	9865687	PrimaryExpression	4		9865521	0					
ANR	9865688	PrimaryExpression	8		9865521	1					
ANR	9865689	Condition	( shft -= 8 ) >= 0	352:18:11807:11822	9865521	1	True				
ANR	9865690	RelationalExpression	( shft -= 8 ) >= 0		9865521	0		>=			
ANR	9865691	AssignmentExpression	shft -= 8		9865521	0		-=			
ANR	9865692	Identifier	shft		9865521	0					
ANR	9865693	PrimaryExpression	8		9865521	1					
ANR	9865694	PrimaryExpression	0		9865521	1					
ANR	9865695	CompoundStatement		34:38:694:694	9865521	2					
ANR	9865696	ForStatement	for ( i = 0 ; i < npixels && cc > 0 ; )		9865521	0					
ANR	9865697	ForInit	i = 0 ;	353:7:11836:11841	9865521	0	True				
ANR	9865698	AssignmentExpression	i = 0		9865521	0		=			
ANR	9865699	Identifier	i		9865521	0					
ANR	9865700	PrimaryExpression	0		9865521	1					
ANR	9865701	Condition	i < npixels && cc > 0	353:14:11843:11863	9865521	1	True				
ANR	9865702	AndExpression	i < npixels && cc > 0		9865521	0		&&			
ANR	9865703	RelationalExpression	i < npixels		9865521	0		<			
ANR	9865704	Identifier	i		9865521	0					
ANR	9865705	Identifier	npixels		9865521	1					
ANR	9865706	RelationalExpression	cc > 0		9865521	1		>			
ANR	9865707	Identifier	cc		9865521	0					
ANR	9865708	PrimaryExpression	0		9865521	1					
ANR	9865709	CompoundStatement		35:39:735:735	9865521	2					
ANR	9865710	IfStatement	if ( * bp >= 128 )		9865521	0					
ANR	9865711	Condition	* bp >= 128	354:7:11877:11886	9865521	0	True				
ANR	9865712	RelationalExpression	* bp >= 128		9865521	0		>=			
ANR	9865713	UnaryOperationExpression	* bp		9865521	0					
ANR	9865714	UnaryOperator	*		9865521	0					
ANR	9865715	Identifier	bp		9865521	1					
ANR	9865716	PrimaryExpression	128		9865521	1					
ANR	9865717	CompoundStatement		36:19:756:756	9865521	1					
ANR	9865718	IfStatement	if ( cc < 2 )		9865521	0					
ANR	9865719	Condition	cc < 2	355:8:11910:11915	9865521	0	True				
ANR	9865720	RelationalExpression	cc < 2		9865521	0		<			
ANR	9865721	Identifier	cc		9865521	0					
ANR	9865722	PrimaryExpression	2		9865521	1					
ANR	9865723	BreakStatement	break ;	356:5:11924:11929	9865521	1	True				
ANR	9865724	ExpressionStatement	rc = * bp ++ + ( 2 - 128 )	357:4:11935:11955	9865521	1	True				
ANR	9865725	AssignmentExpression	rc = * bp ++ + ( 2 - 128 )		9865521	0		=			
ANR	9865726	Identifier	rc		9865521	0					
ANR	9865727	AdditiveExpression	* bp ++ + ( 2 - 128 )		9865521	1		+			
ANR	9865728	UnaryOperationExpression	* bp ++		9865521	0					
ANR	9865729	UnaryOperator	*		9865521	0					
ANR	9865730	PostIncDecOperationExpression	bp ++		9865521	1					
ANR	9865731	Identifier	bp		9865521	0					
ANR	9865732	IncDec	++		9865521	1					
ANR	9865733	AdditiveExpression	2 - 128		9865521	1		-			
ANR	9865734	PrimaryExpression	2		9865521	0					
ANR	9865735	PrimaryExpression	128		9865521	1					
ANR	9865736	ExpressionStatement	b = ( uint32 ) * bp ++ << shft	358:4:11961:11986	9865521	2	True				
ANR	9865737	AssignmentExpression	b = ( uint32 ) * bp ++ << shft		9865521	0		=			
ANR	9865738	Identifier	b		9865521	0					
ANR	9865739	ShiftExpression	( uint32 ) * bp ++ << shft		9865521	1		<<			
ANR	9865740	CastExpression	( uint32 ) * bp ++		9865521	0					
ANR	9865741	CastTarget	uint32		9865521	0					
ANR	9865742	UnaryOperationExpression	* bp ++		9865521	1					
ANR	9865743	UnaryOperator	*		9865521	0					
ANR	9865744	PostIncDecOperationExpression	bp ++		9865521	1					
ANR	9865745	Identifier	bp		9865521	0					
ANR	9865746	IncDec	++		9865521	1					
ANR	9865747	Identifier	shft		9865521	1					
ANR	9865748	ExpressionStatement	cc -= 2	359:4:11992:11999	9865521	3	True				
ANR	9865749	AssignmentExpression	cc -= 2		9865521	0		-=			
ANR	9865750	Identifier	cc		9865521	0					
ANR	9865751	PrimaryExpression	2		9865521	1					
ANR	9865752	WhileStatement	while ( rc -- && i < npixels )		9865521	4					
ANR	9865753	Condition	rc -- && i < npixels	360:11:12012:12030	9865521	0	True				
ANR	9865754	AndExpression	rc -- && i < npixels		9865521	0		&&			
ANR	9865755	PostIncDecOperationExpression	rc --		9865521	0					
ANR	9865756	Identifier	rc		9865521	0					
ANR	9865757	IncDec	--		9865521	1					
ANR	9865758	RelationalExpression	i < npixels		9865521	1		<			
ANR	9865759	Identifier	i		9865521	0					
ANR	9865760	Identifier	npixels		9865521	1					
ANR	9865761	ExpressionStatement	tp [ i ++ ] |= b	361:5:12038:12050	9865521	1	True				
ANR	9865762	AssignmentExpression	tp [ i ++ ] |= b		9865521	0		|=			
ANR	9865763	ArrayIndexing	tp [ i ++ ]		9865521	0					
ANR	9865764	Identifier	tp		9865521	0					
ANR	9865765	PostIncDecOperationExpression	i ++		9865521	1					
ANR	9865766	Identifier	i		9865521	0					
ANR	9865767	IncDec	++		9865521	1					
ANR	9865768	Identifier	b		9865521	1					
ANR	9865769	ElseStatement	else		9865521	0					
ANR	9865770	CompoundStatement		44:10:929:929	9865521	0					
ANR	9865771	ExpressionStatement	rc = * bp ++	363:4:12084:12094	9865521	0	True				
ANR	9865772	AssignmentExpression	rc = * bp ++		9865521	0		=			
ANR	9865773	Identifier	rc		9865521	0					
ANR	9865774	UnaryOperationExpression	* bp ++		9865521	1					
ANR	9865775	UnaryOperator	*		9865521	0					
ANR	9865776	PostIncDecOperationExpression	bp ++		9865521	1					
ANR	9865777	Identifier	bp		9865521	0					
ANR	9865778	IncDec	++		9865521	1					
ANR	9865779	WhileStatement	while ( -- cc && rc -- && i < npixels )		9865521	1					
ANR	9865780	Condition	-- cc && rc -- && i < npixels	364:11:12126:12152	9865521	0	True				
ANR	9865781	AndExpression	-- cc && rc -- && i < npixels		9865521	0		&&			
ANR	9865782	UnaryExpression	-- cc		9865521	0					
ANR	9865783	IncDec	--		9865521	0					
ANR	9865784	Identifier	cc		9865521	1					
ANR	9865785	AndExpression	rc -- && i < npixels		9865521	1		&&			
ANR	9865786	PostIncDecOperationExpression	rc --		9865521	0					
ANR	9865787	Identifier	rc		9865521	0					
ANR	9865788	IncDec	--		9865521	1					
ANR	9865789	RelationalExpression	i < npixels		9865521	1		<			
ANR	9865790	Identifier	i		9865521	0					
ANR	9865791	Identifier	npixels		9865521	1					
ANR	9865792	ExpressionStatement	tp [ i ++ ] |= ( uint32 ) * bp ++ << shft	365:5:12160:12192	9865521	1	True				
ANR	9865793	AssignmentExpression	tp [ i ++ ] |= ( uint32 ) * bp ++ << shft		9865521	0		|=			
ANR	9865794	ArrayIndexing	tp [ i ++ ]		9865521	0					
ANR	9865795	Identifier	tp		9865521	0					
ANR	9865796	PostIncDecOperationExpression	i ++		9865521	1					
ANR	9865797	Identifier	i		9865521	0					
ANR	9865798	IncDec	++		9865521	1					
ANR	9865799	ShiftExpression	( uint32 ) * bp ++ << shft		9865521	1		<<			
ANR	9865800	CastExpression	( uint32 ) * bp ++		9865521	0					
ANR	9865801	CastTarget	uint32		9865521	0					
ANR	9865802	UnaryOperationExpression	* bp ++		9865521	1					
ANR	9865803	UnaryOperator	*		9865521	0					
ANR	9865804	PostIncDecOperationExpression	bp ++		9865521	1					
ANR	9865805	Identifier	bp		9865521	0					
ANR	9865806	IncDec	++		9865521	1					
ANR	9865807	Identifier	shft		9865521	1					
ANR	9865808	IfStatement	if ( i != npixels )		9865521	1					
ANR	9865809	Condition	i != npixels	368:6:12209:12220	9865521	0	True				
ANR	9865810	EqualityExpression	i != npixels		9865521	0		!=			
ANR	9865811	Identifier	i		9865521	0					
ANR	9865812	Identifier	npixels		9865521	1					
ANR	9865813	CompoundStatement		50:20:1090:1090	9865521	1					
ANR	9865814	ExpressionStatement	"TIFFErrorExt ( tif -> tif_clientdata , module , ""Not enough data at row %lu (short %I64d pixels)"" , ( unsigned long ) tif -> tif_row , ( unsigned __int64 ) ( npixels - i ) )"	370:3:12298:12475	9865521	0	True				
ANR	9865815	CallExpression	"TIFFErrorExt ( tif -> tif_clientdata , module , ""Not enough data at row %lu (short %I64d pixels)"" , ( unsigned long ) tif -> tif_row , ( unsigned __int64 ) ( npixels - i ) )"		9865521	0					
ANR	9865816	Callee	TIFFErrorExt		9865521	0					
ANR	9865817	Identifier	TIFFErrorExt		9865521	0					
ANR	9865818	ArgumentList	tif -> tif_clientdata		9865521	1					
ANR	9865819	Argument	tif -> tif_clientdata		9865521	0					
ANR	9865820	PtrMemberAccess	tif -> tif_clientdata		9865521	0					
ANR	9865821	Identifier	tif		9865521	0					
ANR	9865822	Identifier	tif_clientdata		9865521	1					
ANR	9865823	Argument	module		9865521	1					
ANR	9865824	Identifier	module		9865521	0					
ANR	9865825	Argument	"""Not enough data at row %lu (short %I64d pixels)"""		9865521	2					
ANR	9865826	PrimaryExpression	"""Not enough data at row %lu (short %I64d pixels)"""		9865521	0					
ANR	9865827	Argument	( unsigned long ) tif -> tif_row		9865521	3					
ANR	9865828	CastExpression	( unsigned long ) tif -> tif_row		9865521	0					
ANR	9865829	CastTarget	unsigned long		9865521	0					
ANR	9865830	PtrMemberAccess	tif -> tif_row		9865521	1					
ANR	9865831	Identifier	tif		9865521	0					
ANR	9865832	Identifier	tif_row		9865521	1					
ANR	9865833	Argument	( unsigned __int64 ) ( npixels - i )		9865521	4					
ANR	9865834	CastExpression	( unsigned __int64 ) ( npixels - i )		9865521	0					
ANR	9865835	CastTarget	unsigned __int64		9865521	0					
ANR	9865836	AdditiveExpression	npixels - i		9865521	1		-			
ANR	9865837	Identifier	npixels		9865521	0					
ANR	9865838	Identifier	i		9865521	1					
ANR	9865839	ExpressionStatement	tif -> tif_rawcp = ( uint8 * ) bp	380:3:12676:12704	9865521	1	True				
ANR	9865840	AssignmentExpression	tif -> tif_rawcp = ( uint8 * ) bp		9865521	0		=			
ANR	9865841	PtrMemberAccess	tif -> tif_rawcp		9865521	0					
ANR	9865842	Identifier	tif		9865521	0					
ANR	9865843	Identifier	tif_rawcp		9865521	1					
ANR	9865844	CastExpression	( uint8 * ) bp		9865521	1					
ANR	9865845	CastTarget	uint8 *		9865521	0					
ANR	9865846	Identifier	bp		9865521	1					
ANR	9865847	ExpressionStatement	tif -> tif_rawcc = cc	381:3:12709:12728	9865521	2	True				
ANR	9865848	AssignmentExpression	tif -> tif_rawcc = cc		9865521	0		=			
ANR	9865849	PtrMemberAccess	tif -> tif_rawcc		9865521	0					
ANR	9865850	Identifier	tif		9865521	0					
ANR	9865851	Identifier	tif_rawcc		9865521	1					
ANR	9865852	Identifier	cc		9865521	1					
ANR	9865853	ReturnStatement	return ( 0 ) ;	382:3:12733:12743	9865521	3	True				
ANR	9865854	PrimaryExpression	0		9865521	0					
ANR	9865855	ExpressionStatement	"( * sp -> tfunc ) ( sp , op , npixels )"	385:1:12753:12782	9865521	20	True				
ANR	9865856	CallExpression	"( * sp -> tfunc ) ( sp , op , npixels )"		9865521	0					
ANR	9865857	Callee	* sp -> tfunc		9865521	0					
ANR	9865858	UnaryOperationExpression	* sp -> tfunc		9865521	0					
ANR	9865859	UnaryOperator	*		9865521	0					
ANR	9865860	PtrMemberAccess	sp -> tfunc		9865521	1					
ANR	9865861	Identifier	sp		9865521	0					
ANR	9865862	Identifier	tfunc		9865521	1					
ANR	9865863	ArgumentList	sp		9865521	1					
ANR	9865864	Argument	sp		9865521	0					
ANR	9865865	Identifier	sp		9865521	0					
ANR	9865866	Argument	op		9865521	1					
ANR	9865867	Identifier	op		9865521	0					
ANR	9865868	Argument	npixels		9865521	2					
ANR	9865869	Identifier	npixels		9865521	0					
ANR	9865870	ExpressionStatement	tif -> tif_rawcp = ( uint8 * ) bp	386:1:12785:12813	9865521	21	True				
ANR	9865871	AssignmentExpression	tif -> tif_rawcp = ( uint8 * ) bp		9865521	0		=			
ANR	9865872	PtrMemberAccess	tif -> tif_rawcp		9865521	0					
ANR	9865873	Identifier	tif		9865521	0					
ANR	9865874	Identifier	tif_rawcp		9865521	1					
ANR	9865875	CastExpression	( uint8 * ) bp		9865521	1					
ANR	9865876	CastTarget	uint8 *		9865521	0					
ANR	9865877	Identifier	bp		9865521	1					
ANR	9865878	ExpressionStatement	tif -> tif_rawcc = cc	387:1:12816:12835	9865521	22	True				
ANR	9865879	AssignmentExpression	tif -> tif_rawcc = cc		9865521	0		=			
ANR	9865880	PtrMemberAccess	tif -> tif_rawcc		9865521	0					
ANR	9865881	Identifier	tif		9865521	0					
ANR	9865882	Identifier	tif_rawcc		9865521	1					
ANR	9865883	Identifier	cc		9865521	1					
ANR	9865884	ReturnStatement	return ( 1 ) ;	388:1:12838:12848	9865521	23	True				
ANR	9865885	PrimaryExpression	1		9865521	0					
ANR	9865886	ReturnType	static int		9865521	1					
ANR	9865887	Identifier	LogLuvDecode32		9865521	2					
ANR	9865888	ParameterList	"TIFF * tif , uint8 * op , tmsize_t occ , uint16 s"		9865521	3					
ANR	9865889	Parameter	TIFF * tif	318:15:11086:11094	9865521	0	True				
ANR	9865890	ParameterType	TIFF *		9865521	0					
ANR	9865891	Identifier	tif		9865521	1					
ANR	9865892	Parameter	uint8 * op	318:26:11097:11105	9865521	1	True				
ANR	9865893	ParameterType	uint8 *		9865521	0					
ANR	9865894	Identifier	op		9865521	1					
ANR	9865895	Parameter	tmsize_t occ	318:37:11108:11119	9865521	2	True				
ANR	9865896	ParameterType	tmsize_t		9865521	0					
ANR	9865897	Identifier	occ		9865521	1					
ANR	9865898	Parameter	uint16 s	318:51:11122:11129	9865521	3	True				
ANR	9865899	ParameterType	uint16		9865521	0					
ANR	9865900	Identifier	s		9865521	1					
ANR	9865901	CFGEntryNode	ENTRY		9865521		True				
ANR	9865902	CFGExitNode	EXIT		9865521		True				
ANR	9865903	Symbol	* sp		9865521						
ANR	9865904	Symbol	* bp ++		9865521						
ANR	9865905	Symbol	sp -> user_datafmt		9865521						
ANR	9865906	Symbol	SGILOGDATAFMT_RAW		9865521						
ANR	9865907	Symbol	occ		9865521						
ANR	9865908	Symbol	bp		9865521						
ANR	9865909	Symbol	tif		9865521						
ANR	9865910	Symbol	npixels		9865521						
ANR	9865911	Symbol	sp -> tbuflen		9865521						
ANR	9865912	Symbol	tif -> tif_rawcc		9865521						
ANR	9865913	Symbol	sp -> pixel_size		9865521						
ANR	9865914	Symbol	DecoderState		9865521						
ANR	9865915	Symbol	shft		9865521						
ANR	9865916	Symbol	* bp		9865521						
ANR	9865917	Symbol	sp -> tbuf		9865521						
ANR	9865918	Symbol	sp -> tfunc		9865521						
ANR	9865919	Symbol	sp		9865521						
ANR	9865920	Symbol	cc		9865521						
ANR	9865921	Symbol	op		9865521						
ANR	9865922	Symbol	* tp		9865521						
ANR	9865923	Symbol	b		9865521						
ANR	9865924	Symbol	NULL		9865521						
ANR	9865925	Symbol	module		9865521						
ANR	9865926	Symbol	i		9865521						
ANR	9865927	Symbol	tif -> tif_row		9865521						
ANR	9865928	Symbol	tif -> tif_rawcp		9865521						
ANR	9865929	Symbol	tif -> tif_clientdata		9865521						
ANR	9865930	Symbol	rc		9865521						
ANR	9865931	Symbol	s		9865521						
ANR	9865932	Symbol	* tif		9865521						
ANR	9865933	Symbol	tp		9865521						
ANR	9865934	Function	LogLuvDecodeStrip	396:0:12988:13297							
ANR	9865935	FunctionDef	"LogLuvDecodeStrip (TIFF * tif , uint8 * bp , tmsize_t cc , uint16 s)"		9865934	0					
ANR	9865936	CompoundStatement		398:0:13062:13297	9865934	0					
ANR	9865937	IdentifierDeclStatement	tmsize_t rowlen = TIFFScanlineSize ( tif ) ;	399:1:13065:13104	9865934	0	True				
ANR	9865938	IdentifierDecl	rowlen = TIFFScanlineSize ( tif )		9865934	0					
ANR	9865939	IdentifierDeclType	tmsize_t		9865934	0					
ANR	9865940	Identifier	rowlen		9865934	1					
ANR	9865941	AssignmentExpression	rowlen = TIFFScanlineSize ( tif )		9865934	2		=			
ANR	9865942	Identifier	rowlen		9865934	0					
ANR	9865943	CallExpression	TIFFScanlineSize ( tif )		9865934	1					
ANR	9865944	Callee	TIFFScanlineSize		9865934	0					
ANR	9865945	Identifier	TIFFScanlineSize		9865934	0					
ANR	9865946	ArgumentList	tif		9865934	1					
ANR	9865947	Argument	tif		9865934	0					
ANR	9865948	Identifier	tif		9865934	0					
ANR	9865949	IfStatement	if ( rowlen == 0 )		9865934	1					
ANR	9865950	Condition	rowlen == 0	401:12:13119:13129	9865934	0	True				
ANR	9865951	EqualityExpression	rowlen == 0		9865934	0		==			
ANR	9865952	Identifier	rowlen		9865934	0					
ANR	9865953	PrimaryExpression	0		9865934	1					
ANR	9865954	ReturnStatement	return 0 ;	402:16:13148:13156	9865934	1	True				
ANR	9865955	PrimaryExpression	0		9865934	0					
ANR	9865956	ExpressionStatement	assert ( cc % rowlen == 0 )	404:1:13160:13182	9865934	2	True				
ANR	9865957	CallExpression	assert ( cc % rowlen == 0 )		9865934	0					
ANR	9865958	Callee	assert		9865934	0					
ANR	9865959	Identifier	assert		9865934	0					
ANR	9865960	ArgumentList	cc % rowlen == 0		9865934	1					
ANR	9865961	Argument	cc % rowlen == 0		9865934	0					
ANR	9865962	EqualityExpression	cc % rowlen == 0		9865934	0		==			
ANR	9865963	MultiplicativeExpression	cc % rowlen		9865934	0		%			
ANR	9865964	Identifier	cc		9865934	0					
ANR	9865965	Identifier	rowlen		9865934	1					
ANR	9865966	PrimaryExpression	0		9865934	1					
ANR	9865967	WhileStatement	"while ( cc && ( * tif -> tif_decoderow ) ( tif , bp , rowlen , s ) )"		9865934	3					
ANR	9865968	Condition	"cc && ( * tif -> tif_decoderow ) ( tif , bp , rowlen , s )"	405:8:13192:13238	9865934	0	True				
ANR	9865969	AndExpression	"cc && ( * tif -> tif_decoderow ) ( tif , bp , rowlen , s )"		9865934	0		&&			
ANR	9865970	Identifier	cc		9865934	0					
ANR	9865971	CallExpression	"( * tif -> tif_decoderow ) ( tif , bp , rowlen , s )"		9865934	1					
ANR	9865972	Callee	* tif -> tif_decoderow		9865934	0					
ANR	9865973	UnaryOperationExpression	* tif -> tif_decoderow		9865934	0					
ANR	9865974	UnaryOperator	*		9865934	0					
ANR	9865975	PtrMemberAccess	tif -> tif_decoderow		9865934	1					
ANR	9865976	Identifier	tif		9865934	0					
ANR	9865977	Identifier	tif_decoderow		9865934	1					
ANR	9865978	ArgumentList	tif		9865934	1					
ANR	9865979	Argument	tif		9865934	0					
ANR	9865980	Identifier	tif		9865934	0					
ANR	9865981	Argument	bp		9865934	1					
ANR	9865982	Identifier	bp		9865934	0					
ANR	9865983	Argument	rowlen		9865934	2					
ANR	9865984	Identifier	rowlen		9865934	0					
ANR	9865985	Argument	s		9865934	3					
ANR	9865986	Identifier	s		9865934	0					
ANR	9865987	CompoundStatement		8:57:178:178	9865934	1					
ANR	9865988	ExpressionStatement	bp += rowlen	406:2:13245:13257	9865934	0	True				
ANR	9865989	AssignmentExpression	bp += rowlen		9865934	0		+=			
ANR	9865990	Identifier	bp		9865934	0					
ANR	9865991	Identifier	rowlen		9865934	1					
ANR	9865992	ExpressionStatement	cc -= rowlen	407:2:13261:13273	9865934	1	True				
ANR	9865993	AssignmentExpression	cc -= rowlen		9865934	0		-=			
ANR	9865994	Identifier	cc		9865934	0					
ANR	9865995	Identifier	rowlen		9865934	1					
ANR	9865996	ReturnStatement	return ( cc == 0 ) ;	409:1:13279:13295	9865934	4	True				
ANR	9865997	EqualityExpression	cc == 0		9865934	0		==			
ANR	9865998	Identifier	cc		9865934	0					
ANR	9865999	PrimaryExpression	0		9865934	1					
ANR	9866000	ReturnType	static int		9865934	1					
ANR	9866001	Identifier	LogLuvDecodeStrip		9865934	2					
ANR	9866002	ParameterList	"TIFF * tif , uint8 * bp , tmsize_t cc , uint16 s"		9865934	3					
ANR	9866003	Parameter	TIFF * tif	397:18:13017:13025	9865934	0	True				
ANR	9866004	ParameterType	TIFF *		9865934	0					
ANR	9866005	Identifier	tif		9865934	1					
ANR	9866006	Parameter	uint8 * bp	397:29:13028:13036	9865934	1	True				
ANR	9866007	ParameterType	uint8 *		9865934	0					
ANR	9866008	Identifier	bp		9865934	1					
ANR	9866009	Parameter	tmsize_t cc	397:40:13039:13049	9865934	2	True				
ANR	9866010	ParameterType	tmsize_t		9865934	0					
ANR	9866011	Identifier	cc		9865934	1					
ANR	9866012	Parameter	uint16 s	397:53:13052:13059	9865934	3	True				
ANR	9866013	ParameterType	uint16		9865934	0					
ANR	9866014	Identifier	s		9865934	1					
ANR	9866015	CFGEntryNode	ENTRY		9865934		True				
ANR	9866016	CFGExitNode	EXIT		9865934		True				
ANR	9866017	Symbol	tif		9865934						
ANR	9866018	Symbol	cc		9865934						
ANR	9866019	Symbol	* tif -> tif_decoderow		9865934						
ANR	9866020	Symbol	TIFFScanlineSize		9865934						
ANR	9866021	Symbol	s		9865934						
ANR	9866022	Symbol	* * tif		9865934						
ANR	9866023	Symbol	rowlen		9865934						
ANR	9866024	Symbol	* tif		9865934						
ANR	9866025	Symbol	tif -> tif_decoderow		9865934						
ANR	9866026	Symbol	bp		9865934						
ANR	9866027	Function	LogLuvDecodeTile	417:0:13434:13741							
ANR	9866028	FunctionDef	"LogLuvDecodeTile (TIFF * tif , uint8 * bp , tmsize_t cc , uint16 s)"		9866027	0					
ANR	9866029	CompoundStatement		419:0:13507:13741	9866027	0					
ANR	9866030	IdentifierDeclStatement	tmsize_t rowlen = TIFFTileRowSize ( tif ) ;	420:1:13510:13548	9866027	0	True				
ANR	9866031	IdentifierDecl	rowlen = TIFFTileRowSize ( tif )		9866027	0					
ANR	9866032	IdentifierDeclType	tmsize_t		9866027	0					
ANR	9866033	Identifier	rowlen		9866027	1					
ANR	9866034	AssignmentExpression	rowlen = TIFFTileRowSize ( tif )		9866027	2		=			
ANR	9866035	Identifier	rowlen		9866027	0					
ANR	9866036	CallExpression	TIFFTileRowSize ( tif )		9866027	1					
ANR	9866037	Callee	TIFFTileRowSize		9866027	0					
ANR	9866038	Identifier	TIFFTileRowSize		9866027	0					
ANR	9866039	ArgumentList	tif		9866027	1					
ANR	9866040	Argument	tif		9866027	0					
ANR	9866041	Identifier	tif		9866027	0					
ANR	9866042	IfStatement	if ( rowlen == 0 )		9866027	1					
ANR	9866043	Condition	rowlen == 0	422:12:13563:13573	9866027	0	True				
ANR	9866044	EqualityExpression	rowlen == 0		9866027	0		==			
ANR	9866045	Identifier	rowlen		9866027	0					
ANR	9866046	PrimaryExpression	0		9866027	1					
ANR	9866047	ReturnStatement	return 0 ;	423:16:13592:13600	9866027	1	True				
ANR	9866048	PrimaryExpression	0		9866027	0					
ANR	9866049	ExpressionStatement	assert ( cc % rowlen == 0 )	425:1:13604:13626	9866027	2	True				
ANR	9866050	CallExpression	assert ( cc % rowlen == 0 )		9866027	0					
ANR	9866051	Callee	assert		9866027	0					
ANR	9866052	Identifier	assert		9866027	0					
ANR	9866053	ArgumentList	cc % rowlen == 0		9866027	1					
ANR	9866054	Argument	cc % rowlen == 0		9866027	0					
ANR	9866055	EqualityExpression	cc % rowlen == 0		9866027	0		==			
ANR	9866056	MultiplicativeExpression	cc % rowlen		9866027	0		%			
ANR	9866057	Identifier	cc		9866027	0					
ANR	9866058	Identifier	rowlen		9866027	1					
ANR	9866059	PrimaryExpression	0		9866027	1					
ANR	9866060	WhileStatement	"while ( cc && ( * tif -> tif_decoderow ) ( tif , bp , rowlen , s ) )"		9866027	3					
ANR	9866061	Condition	"cc && ( * tif -> tif_decoderow ) ( tif , bp , rowlen , s )"	426:8:13636:13682	9866027	0	True				
ANR	9866062	AndExpression	"cc && ( * tif -> tif_decoderow ) ( tif , bp , rowlen , s )"		9866027	0		&&			
ANR	9866063	Identifier	cc		9866027	0					
ANR	9866064	CallExpression	"( * tif -> tif_decoderow ) ( tif , bp , rowlen , s )"		9866027	1					
ANR	9866065	Callee	* tif -> tif_decoderow		9866027	0					
ANR	9866066	UnaryOperationExpression	* tif -> tif_decoderow		9866027	0					
ANR	9866067	UnaryOperator	*		9866027	0					
ANR	9866068	PtrMemberAccess	tif -> tif_decoderow		9866027	1					
ANR	9866069	Identifier	tif		9866027	0					
ANR	9866070	Identifier	tif_decoderow		9866027	1					
ANR	9866071	ArgumentList	tif		9866027	1					
ANR	9866072	Argument	tif		9866027	0					
ANR	9866073	Identifier	tif		9866027	0					
ANR	9866074	Argument	bp		9866027	1					
ANR	9866075	Identifier	bp		9866027	0					
ANR	9866076	Argument	rowlen		9866027	2					
ANR	9866077	Identifier	rowlen		9866027	0					
ANR	9866078	Argument	s		9866027	3					
ANR	9866079	Identifier	s		9866027	0					
ANR	9866080	CompoundStatement		8:57:177:177	9866027	1					
ANR	9866081	ExpressionStatement	bp += rowlen	427:2:13689:13701	9866027	0	True				
ANR	9866082	AssignmentExpression	bp += rowlen		9866027	0		+=			
ANR	9866083	Identifier	bp		9866027	0					
ANR	9866084	Identifier	rowlen		9866027	1					
ANR	9866085	ExpressionStatement	cc -= rowlen	428:2:13705:13717	9866027	1	True				
ANR	9866086	AssignmentExpression	cc -= rowlen		9866027	0		-=			
ANR	9866087	Identifier	cc		9866027	0					
ANR	9866088	Identifier	rowlen		9866027	1					
ANR	9866089	ReturnStatement	return ( cc == 0 ) ;	430:1:13723:13739	9866027	4	True				
ANR	9866090	EqualityExpression	cc == 0		9866027	0		==			
ANR	9866091	Identifier	cc		9866027	0					
ANR	9866092	PrimaryExpression	0		9866027	1					
ANR	9866093	ReturnType	static int		9866027	1					
ANR	9866094	Identifier	LogLuvDecodeTile		9866027	2					
ANR	9866095	ParameterList	"TIFF * tif , uint8 * bp , tmsize_t cc , uint16 s"		9866027	3					
ANR	9866096	Parameter	TIFF * tif	418:17:13462:13470	9866027	0	True				
ANR	9866097	ParameterType	TIFF *		9866027	0					
ANR	9866098	Identifier	tif		9866027	1					
ANR	9866099	Parameter	uint8 * bp	418:28:13473:13481	9866027	1	True				
ANR	9866100	ParameterType	uint8 *		9866027	0					
ANR	9866101	Identifier	bp		9866027	1					
ANR	9866102	Parameter	tmsize_t cc	418:39:13484:13494	9866027	2	True				
ANR	9866103	ParameterType	tmsize_t		9866027	0					
ANR	9866104	Identifier	cc		9866027	1					
ANR	9866105	Parameter	uint16 s	418:52:13497:13504	9866027	3	True				
ANR	9866106	ParameterType	uint16		9866027	0					
ANR	9866107	Identifier	s		9866027	1					
ANR	9866108	CFGEntryNode	ENTRY		9866027		True				
ANR	9866109	CFGExitNode	EXIT		9866027		True				
ANR	9866110	Symbol	tif		9866027						
ANR	9866111	Symbol	cc		9866027						
ANR	9866112	Symbol	* tif -> tif_decoderow		9866027						
ANR	9866113	Symbol	s		9866027						
ANR	9866114	Symbol	* * tif		9866027						
ANR	9866115	Symbol	rowlen		9866027						
ANR	9866116	Symbol	TIFFTileRowSize		9866027						
ANR	9866117	Symbol	tif -> tif_decoderow		9866027						
ANR	9866118	Symbol	* tif		9866027						
ANR	9866119	Symbol	bp		9866027						
ANR	9866120	Function	LogL16Encode	436:0:13785:16052							
ANR	9866121	FunctionDef	"LogL16Encode (TIFF * tif , uint8 * bp , tmsize_t cc , uint16 s)"		9866120	0					
ANR	9866122	CompoundStatement		438:0:13854:16052	9866120	0					
ANR	9866123	Statement	static	439:1:13857:13862	9866120	0	True				
ANR	9866124	IdentifierDeclStatement	"const char module [ ] = ""LogL16Encode"" ;"	439:8:13864:13900	9866120	1	True				
ANR	9866125	IdentifierDecl	"module [ ] = ""LogL16Encode"""		9866120	0					
ANR	9866126	IdentifierDeclType	const char [ ]		9866120	0					
ANR	9866127	Identifier	module		9866120	1					
ANR	9866128	AssignmentExpression	"module [ ] = ""LogL16Encode"""		9866120	2		=			
ANR	9866129	Identifier	module		9866120	0					
ANR	9866130	PrimaryExpression	"""LogL16Encode"""		9866120	1					
ANR	9866131	IdentifierDeclStatement	LogLuvState * sp = EncoderState ( tif ) ;	440:1:13903:13938	9866120	2	True				
ANR	9866132	IdentifierDecl	* sp = EncoderState ( tif )		9866120	0					
ANR	9866133	IdentifierDeclType	LogLuvState *		9866120	0					
ANR	9866134	Identifier	sp		9866120	1					
ANR	9866135	AssignmentExpression	* sp = EncoderState ( tif )		9866120	2		=			
ANR	9866136	Identifier	sp		9866120	0					
ANR	9866137	CallExpression	EncoderState ( tif )		9866120	1					
ANR	9866138	Callee	EncoderState		9866120	0					
ANR	9866139	Identifier	EncoderState		9866120	0					
ANR	9866140	ArgumentList	tif		9866120	1					
ANR	9866141	Argument	tif		9866120	0					
ANR	9866142	Identifier	tif		9866120	0					
ANR	9866143	IdentifierDeclStatement	int shft ;	441:1:13941:13949	9866120	3	True				
ANR	9866144	IdentifierDecl	shft		9866120	0					
ANR	9866145	IdentifierDeclType	int		9866120	0					
ANR	9866146	Identifier	shft		9866120	1					
ANR	9866147	IdentifierDeclStatement	tmsize_t i ;	442:1:13952:13962	9866120	4	True				
ANR	9866148	IdentifierDecl	i		9866120	0					
ANR	9866149	IdentifierDeclType	tmsize_t		9866120	0					
ANR	9866150	Identifier	i		9866120	1					
ANR	9866151	IdentifierDeclStatement	tmsize_t j ;	443:1:13965:13975	9866120	5	True				
ANR	9866152	IdentifierDecl	j		9866120	0					
ANR	9866153	IdentifierDeclType	tmsize_t		9866120	0					
ANR	9866154	Identifier	j		9866120	1					
ANR	9866155	IdentifierDeclStatement	tmsize_t npixels ;	444:1:13978:13994	9866120	6	True				
ANR	9866156	IdentifierDecl	npixels		9866120	0					
ANR	9866157	IdentifierDeclType	tmsize_t		9866120	0					
ANR	9866158	Identifier	npixels		9866120	1					
ANR	9866159	IdentifierDeclStatement	uint8 * op ;	445:1:13997:14006	9866120	7	True				
ANR	9866160	IdentifierDecl	* op		9866120	0					
ANR	9866161	IdentifierDeclType	uint8 *		9866120	0					
ANR	9866162	Identifier	op		9866120	1					
ANR	9866163	IdentifierDeclStatement	int16 * tp ;	446:1:14009:14018	9866120	8	True				
ANR	9866164	IdentifierDecl	* tp		9866120	0					
ANR	9866165	IdentifierDeclType	int16 *		9866120	0					
ANR	9866166	Identifier	tp		9866120	1					
ANR	9866167	IdentifierDeclStatement	int16 b ;	447:1:14021:14028	9866120	9	True				
ANR	9866168	IdentifierDecl	b		9866120	0					
ANR	9866169	IdentifierDeclType	int16		9866120	0					
ANR	9866170	Identifier	b		9866120	1					
ANR	9866171	IdentifierDeclStatement	tmsize_t occ ;	448:1:14031:14043	9866120	10	True				
ANR	9866172	IdentifierDecl	occ		9866120	0					
ANR	9866173	IdentifierDeclType	tmsize_t		9866120	0					
ANR	9866174	Identifier	occ		9866120	1					
ANR	9866175	IdentifierDeclStatement	"int rc = 0 , mask ;"	449:1:14046:14060	9866120	11	True				
ANR	9866176	IdentifierDecl	rc = 0		9866120	0					
ANR	9866177	IdentifierDeclType	int		9866120	0					
ANR	9866178	Identifier	rc		9866120	1					
ANR	9866179	AssignmentExpression	rc = 0		9866120	2		=			
ANR	9866180	Identifier	rc		9866120	0					
ANR	9866181	PrimaryExpression	0		9866120	1					
ANR	9866182	IdentifierDecl	mask		9866120	1					
ANR	9866183	IdentifierDeclType	int		9866120	0					
ANR	9866184	Identifier	mask		9866120	1					
ANR	9866185	IdentifierDeclStatement	tmsize_t beg ;	450:1:14063:14075	9866120	12	True				
ANR	9866186	IdentifierDecl	beg		9866120	0					
ANR	9866187	IdentifierDeclType	tmsize_t		9866120	0					
ANR	9866188	Identifier	beg		9866120	1					
ANR	9866189	ExpressionStatement	assert ( s == 0 )	452:1:14079:14093	9866120	13	True				
ANR	9866190	CallExpression	assert ( s == 0 )		9866120	0					
ANR	9866191	Callee	assert		9866120	0					
ANR	9866192	Identifier	assert		9866120	0					
ANR	9866193	ArgumentList	s == 0		9866120	1					
ANR	9866194	Argument	s == 0		9866120	0					
ANR	9866195	EqualityExpression	s == 0		9866120	0		==			
ANR	9866196	Identifier	s		9866120	0					
ANR	9866197	PrimaryExpression	0		9866120	1					
ANR	9866198	ExpressionStatement	assert ( sp != NULL )	453:1:14096:14114	9866120	14	True				
ANR	9866199	CallExpression	assert ( sp != NULL )		9866120	0					
ANR	9866200	Callee	assert		9866120	0					
ANR	9866201	Identifier	assert		9866120	0					
ANR	9866202	ArgumentList	sp != NULL		9866120	1					
ANR	9866203	Argument	sp != NULL		9866120	0					
ANR	9866204	EqualityExpression	sp != NULL		9866120	0		!=			
ANR	9866205	Identifier	sp		9866120	0					
ANR	9866206	Identifier	NULL		9866120	1					
ANR	9866207	ExpressionStatement	npixels = cc / sp -> pixel_size	454:1:14117:14146	9866120	15	True				
ANR	9866208	AssignmentExpression	npixels = cc / sp -> pixel_size		9866120	0		=			
ANR	9866209	Identifier	npixels		9866120	0					
ANR	9866210	MultiplicativeExpression	cc / sp -> pixel_size		9866120	1		/			
ANR	9866211	Identifier	cc		9866120	0					
ANR	9866212	PtrMemberAccess	sp -> pixel_size		9866120	1					
ANR	9866213	Identifier	sp		9866120	0					
ANR	9866214	Identifier	pixel_size		9866120	1					
ANR	9866215	IfStatement	if ( sp -> user_datafmt == SGILOGDATAFMT_16BIT )		9866120	16					
ANR	9866216	Condition	sp -> user_datafmt == SGILOGDATAFMT_16BIT	456:5:14154:14192	9866120	0	True				
ANR	9866217	EqualityExpression	sp -> user_datafmt == SGILOGDATAFMT_16BIT		9866120	0		==			
ANR	9866218	PtrMemberAccess	sp -> user_datafmt		9866120	0					
ANR	9866219	Identifier	sp		9866120	0					
ANR	9866220	Identifier	user_datafmt		9866120	1					
ANR	9866221	Identifier	SGILOGDATAFMT_16BIT		9866120	1					
ANR	9866222	ExpressionStatement	tp = ( int16 * ) bp	457:2:14197:14213	9866120	1	True				
ANR	9866223	AssignmentExpression	tp = ( int16 * ) bp		9866120	0		=			
ANR	9866224	Identifier	tp		9866120	0					
ANR	9866225	CastExpression	( int16 * ) bp		9866120	1					
ANR	9866226	CastTarget	int16 *		9866120	0					
ANR	9866227	Identifier	bp		9866120	1					
ANR	9866228	ElseStatement	else		9866120	0					
ANR	9866229	CompoundStatement		21:6:366:366	9866120	0					
ANR	9866230	ExpressionStatement	tp = ( int16 * ) sp -> tbuf	459:2:14225:14247	9866120	0	True				
ANR	9866231	AssignmentExpression	tp = ( int16 * ) sp -> tbuf		9866120	0		=			
ANR	9866232	Identifier	tp		9866120	0					
ANR	9866233	CastExpression	( int16 * ) sp -> tbuf		9866120	1					
ANR	9866234	CastTarget	int16 *		9866120	0					
ANR	9866235	PtrMemberAccess	sp -> tbuf		9866120	1					
ANR	9866236	Identifier	sp		9866120	0					
ANR	9866237	Identifier	tbuf		9866120	1					
ANR	9866238	IfStatement	if ( sp -> tbuflen < npixels )		9866120	1					
ANR	9866239	Condition	sp -> tbuflen < npixels	460:5:14254:14274	9866120	0	True				
ANR	9866240	RelationalExpression	sp -> tbuflen < npixels		9866120	0		<			
ANR	9866241	PtrMemberAccess	sp -> tbuflen		9866120	0					
ANR	9866242	Identifier	sp		9866120	0					
ANR	9866243	Identifier	tbuflen		9866120	1					
ANR	9866244	Identifier	npixels		9866120	1					
ANR	9866245	CompoundStatement		23:28:422:422	9866120	1					
ANR	9866246	ExpressionStatement	"TIFFErrorExt ( tif -> tif_clientdata , module , ""Translation buffer too short"" )"	461:3:14282:14362	9866120	0	True				
ANR	9866247	CallExpression	"TIFFErrorExt ( tif -> tif_clientdata , module , ""Translation buffer too short"" )"		9866120	0					
ANR	9866248	Callee	TIFFErrorExt		9866120	0					
ANR	9866249	Identifier	TIFFErrorExt		9866120	0					
ANR	9866250	ArgumentList	tif -> tif_clientdata		9866120	1					
ANR	9866251	Argument	tif -> tif_clientdata		9866120	0					
ANR	9866252	PtrMemberAccess	tif -> tif_clientdata		9866120	0					
ANR	9866253	Identifier	tif		9866120	0					
ANR	9866254	Identifier	tif_clientdata		9866120	1					
ANR	9866255	Argument	module		9866120	1					
ANR	9866256	Identifier	module		9866120	0					
ANR	9866257	Argument	"""Translation buffer too short"""		9866120	2					
ANR	9866258	PrimaryExpression	"""Translation buffer too short"""		9866120	0					
ANR	9866259	ReturnStatement	return ( 0 ) ;	463:3:14367:14377	9866120	1	True				
ANR	9866260	PrimaryExpression	0		9866120	0					
ANR	9866261	ExpressionStatement	"( * sp -> tfunc ) ( sp , bp , npixels )"	465:2:14385:14414	9866120	2	True				
ANR	9866262	CallExpression	"( * sp -> tfunc ) ( sp , bp , npixels )"		9866120	0					
ANR	9866263	Callee	* sp -> tfunc		9866120	0					
ANR	9866264	UnaryOperationExpression	* sp -> tfunc		9866120	0					
ANR	9866265	UnaryOperator	*		9866120	0					
ANR	9866266	PtrMemberAccess	sp -> tfunc		9866120	1					
ANR	9866267	Identifier	sp		9866120	0					
ANR	9866268	Identifier	tfunc		9866120	1					
ANR	9866269	ArgumentList	sp		9866120	1					
ANR	9866270	Argument	sp		9866120	0					
ANR	9866271	Identifier	sp		9866120	0					
ANR	9866272	Argument	bp		9866120	1					
ANR	9866273	Identifier	bp		9866120	0					
ANR	9866274	Argument	npixels		9866120	2					
ANR	9866275	Identifier	npixels		9866120	0					
ANR	9866276	ExpressionStatement	op = tif -> tif_rawcp	468:1:14453:14472	9866120	17	True				
ANR	9866277	AssignmentExpression	op = tif -> tif_rawcp		9866120	0		=			
ANR	9866278	Identifier	op		9866120	0					
ANR	9866279	PtrMemberAccess	tif -> tif_rawcp		9866120	1					
ANR	9866280	Identifier	tif		9866120	0					
ANR	9866281	Identifier	tif_rawcp		9866120	1					
ANR	9866282	ExpressionStatement	occ = tif -> tif_rawdatasize - tif -> tif_rawcc	469:1:14475:14518	9866120	18	True				
ANR	9866283	AssignmentExpression	occ = tif -> tif_rawdatasize - tif -> tif_rawcc		9866120	0		=			
ANR	9866284	Identifier	occ		9866120	0					
ANR	9866285	AdditiveExpression	tif -> tif_rawdatasize - tif -> tif_rawcc		9866120	1		-			
ANR	9866286	PtrMemberAccess	tif -> tif_rawdatasize		9866120	0					
ANR	9866287	Identifier	tif		9866120	0					
ANR	9866288	Identifier	tif_rawdatasize		9866120	1					
ANR	9866289	PtrMemberAccess	tif -> tif_rawcc		9866120	1					
ANR	9866290	Identifier	tif		9866120	0					
ANR	9866291	Identifier	tif_rawcc		9866120	1					
ANR	9866292	ForStatement	for ( shft = 2 * 8 ; ( shft -= 8 ) >= 0 ; )		9866120	19					
ANR	9866293	ForInit	shft = 2 * 8 ;	470:6:14526:14536	9866120	0	True				
ANR	9866294	AssignmentExpression	shft = 2 * 8		9866120	0		=			
ANR	9866295	Identifier	shft		9866120	0					
ANR	9866296	MultiplicativeExpression	2 * 8		9866120	1		*			
ANR	9866297	PrimaryExpression	2		9866120	0					
ANR	9866298	PrimaryExpression	8		9866120	1					
ANR	9866299	Condition	( shft -= 8 ) >= 0	470:18:14538:14553	9866120	1	True				
ANR	9866300	RelationalExpression	( shft -= 8 ) >= 0		9866120	0		>=			
ANR	9866301	AssignmentExpression	shft -= 8		9866120	0		-=			
ANR	9866302	Identifier	shft		9866120	0					
ANR	9866303	PrimaryExpression	8		9866120	1					
ANR	9866304	PrimaryExpression	0		9866120	1					
ANR	9866305	ForStatement	for ( i = 0 ; i < npixels ; i += rc )		9866120	2					
ANR	9866306	ForInit	i = 0 ;	471:7:14565:14570	9866120	0	True				
ANR	9866307	AssignmentExpression	i = 0		9866120	0		=			
ANR	9866308	Identifier	i		9866120	0					
ANR	9866309	PrimaryExpression	0		9866120	1					
ANR	9866310	Condition	i < npixels	471:14:14572:14582	9866120	1	True				
ANR	9866311	RelationalExpression	i < npixels		9866120	0		<			
ANR	9866312	Identifier	i		9866120	0					
ANR	9866313	Identifier	npixels		9866120	1					
ANR	9866314	AssignmentExpression	i += rc	471:27:14585:14591	9866120	2	True	+=			
ANR	9866315	Identifier	i		9866120	0					
ANR	9866316	Identifier	rc		9866120	1					
ANR	9866317	CompoundStatement		34:36:739:739	9866120	3					
ANR	9866318	IfStatement	if ( occ < 4 )		9866120	0					
ANR	9866319	Condition	occ < 4	472:7:14603:14609	9866120	0	True				
ANR	9866320	RelationalExpression	occ < 4		9866120	0		<			
ANR	9866321	Identifier	occ		9866120	0					
ANR	9866322	PrimaryExpression	4		9866120	1					
ANR	9866323	CompoundStatement		35:16:757:757	9866120	1					
ANR	9866324	ExpressionStatement	tif -> tif_rawcp = op	473:4:14618:14637	9866120	0	True				
ANR	9866325	AssignmentExpression	tif -> tif_rawcp = op		9866120	0		=			
ANR	9866326	PtrMemberAccess	tif -> tif_rawcp		9866120	0					
ANR	9866327	Identifier	tif		9866120	0					
ANR	9866328	Identifier	tif_rawcp		9866120	1					
ANR	9866329	Identifier	op		9866120	1					
ANR	9866330	ExpressionStatement	tif -> tif_rawcc = tif -> tif_rawdatasize - occ	474:4:14643:14686	9866120	1	True				
ANR	9866331	AssignmentExpression	tif -> tif_rawcc = tif -> tif_rawdatasize - occ		9866120	0		=			
ANR	9866332	PtrMemberAccess	tif -> tif_rawcc		9866120	0					
ANR	9866333	Identifier	tif		9866120	0					
ANR	9866334	Identifier	tif_rawcc		9866120	1					
ANR	9866335	AdditiveExpression	tif -> tif_rawdatasize - occ		9866120	1		-			
ANR	9866336	PtrMemberAccess	tif -> tif_rawdatasize		9866120	0					
ANR	9866337	Identifier	tif		9866120	0					
ANR	9866338	Identifier	tif_rawdatasize		9866120	1					
ANR	9866339	Identifier	occ		9866120	1					
ANR	9866340	IfStatement	if ( ! TIFFFlushData1 ( tif ) )		9866120	2					
ANR	9866341	Condition	! TIFFFlushData1 ( tif )	475:8:14696:14715	9866120	0	True				
ANR	9866342	UnaryOperationExpression	! TIFFFlushData1 ( tif )		9866120	0					
ANR	9866343	UnaryOperator	!		9866120	0					
ANR	9866344	CallExpression	TIFFFlushData1 ( tif )		9866120	1					
ANR	9866345	Callee	TIFFFlushData1		9866120	0					
ANR	9866346	Identifier	TIFFFlushData1		9866120	0					
ANR	9866347	ArgumentList	tif		9866120	1					
ANR	9866348	Argument	tif		9866120	0					
ANR	9866349	Identifier	tif		9866120	0					
ANR	9866350	ReturnStatement	return ( 0 ) ;	476:5:14723:14733	9866120	1	True				
ANR	9866351	PrimaryExpression	0		9866120	0					
ANR	9866352	ExpressionStatement	op = tif -> tif_rawcp	477:4:14739:14758	9866120	3	True				
ANR	9866353	AssignmentExpression	op = tif -> tif_rawcp		9866120	0		=			
ANR	9866354	Identifier	op		9866120	0					
ANR	9866355	PtrMemberAccess	tif -> tif_rawcp		9866120	1					
ANR	9866356	Identifier	tif		9866120	0					
ANR	9866357	Identifier	tif_rawcp		9866120	1					
ANR	9866358	ExpressionStatement	occ = tif -> tif_rawdatasize - tif -> tif_rawcc	478:4:14764:14807	9866120	4	True				
ANR	9866359	AssignmentExpression	occ = tif -> tif_rawdatasize - tif -> tif_rawcc		9866120	0		=			
ANR	9866360	Identifier	occ		9866120	0					
ANR	9866361	AdditiveExpression	tif -> tif_rawdatasize - tif -> tif_rawcc		9866120	1		-			
ANR	9866362	PtrMemberAccess	tif -> tif_rawdatasize		9866120	0					
ANR	9866363	Identifier	tif		9866120	0					
ANR	9866364	Identifier	tif_rawdatasize		9866120	1					
ANR	9866365	PtrMemberAccess	tif -> tif_rawcc		9866120	1					
ANR	9866366	Identifier	tif		9866120	0					
ANR	9866367	Identifier	tif_rawcc		9866120	1					
ANR	9866368	ExpressionStatement	mask = 0xff << shft	480:3:14817:14836	9866120	1	True				
ANR	9866369	AssignmentExpression	mask = 0xff << shft		9866120	0		=			
ANR	9866370	Identifier	mask		9866120	0					
ANR	9866371	ShiftExpression	0xff << shft		9866120	1		<<			
ANR	9866372	PrimaryExpression	0xff		9866120	0					
ANR	9866373	Identifier	shft		9866120	1					
ANR	9866374	ForStatement	for ( beg = i ; beg < npixels ; beg += rc )		9866120	2					
ANR	9866375	ForInit	beg = i ;	481:8:14867:14874	9866120	0	True				
ANR	9866376	AssignmentExpression	beg = i		9866120	0		=			
ANR	9866377	Identifier	beg		9866120	0					
ANR	9866378	Identifier	i		9866120	1					
ANR	9866379	Condition	beg < npixels	481:17:14876:14888	9866120	1	True				
ANR	9866380	RelationalExpression	beg < npixels		9866120	0		<			
ANR	9866381	Identifier	beg		9866120	0					
ANR	9866382	Identifier	npixels		9866120	1					
ANR	9866383	AssignmentExpression	beg += rc	481:32:14891:14899	9866120	2	True	+=			
ANR	9866384	Identifier	beg		9866120	0					
ANR	9866385	Identifier	rc		9866120	1					
ANR	9866386	CompoundStatement		44:43:1047:1047	9866120	3					
ANR	9866387	ExpressionStatement	b = ( int16 ) ( tp [ beg ] & mask )	482:4:14908:14936	9866120	0	True				
ANR	9866388	AssignmentExpression	b = ( int16 ) ( tp [ beg ] & mask )		9866120	0		=			
ANR	9866389	Identifier	b		9866120	0					
ANR	9866390	CastExpression	( int16 ) ( tp [ beg ] & mask )		9866120	1					
ANR	9866391	CastTarget	int16		9866120	0					
ANR	9866392	BitAndExpression	tp [ beg ] & mask		9866120	1		&			
ANR	9866393	ArrayIndexing	tp [ beg ]		9866120	0					
ANR	9866394	Identifier	tp		9866120	0					
ANR	9866395	Identifier	beg		9866120	1					
ANR	9866396	Identifier	mask		9866120	1					
ANR	9866397	ExpressionStatement	rc = 1	483:4:14942:14948	9866120	1	True				
ANR	9866398	AssignmentExpression	rc = 1		9866120	0		=			
ANR	9866399	Identifier	rc		9866120	0					
ANR	9866400	PrimaryExpression	1		9866120	1					
ANR	9866401	WhileStatement	while ( rc < 127 + 2 && beg + rc < npixels && ( tp [ beg + rc ] & mask ) == b )		9866120	2					
ANR	9866402	Condition	rc < 127 + 2 && beg + rc < npixels && ( tp [ beg + rc ] & mask ) == b	484:11:14961:15026	9866120	0	True				
ANR	9866403	AndExpression	rc < 127 + 2 && beg + rc < npixels && ( tp [ beg + rc ] & mask ) == b		9866120	0		&&			
ANR	9866404	RelationalExpression	rc < 127 + 2		9866120	0		<			
ANR	9866405	Identifier	rc		9866120	0					
ANR	9866406	AdditiveExpression	127 + 2		9866120	1		+			
ANR	9866407	PrimaryExpression	127		9866120	0					
ANR	9866408	PrimaryExpression	2		9866120	1					
ANR	9866409	AndExpression	beg + rc < npixels && ( tp [ beg + rc ] & mask ) == b		9866120	1		&&			
ANR	9866410	RelationalExpression	beg + rc < npixels		9866120	0		<			
ANR	9866411	AdditiveExpression	beg + rc		9866120	0		+			
ANR	9866412	Identifier	beg		9866120	0					
ANR	9866413	Identifier	rc		9866120	1					
ANR	9866414	Identifier	npixels		9866120	1					
ANR	9866415	EqualityExpression	( tp [ beg + rc ] & mask ) == b		9866120	1		==			
ANR	9866416	BitAndExpression	tp [ beg + rc ] & mask		9866120	0		&			
ANR	9866417	ArrayIndexing	tp [ beg + rc ]		9866120	0					
ANR	9866418	Identifier	tp		9866120	0					
ANR	9866419	AdditiveExpression	beg + rc		9866120	1		+			
ANR	9866420	Identifier	beg		9866120	0					
ANR	9866421	Identifier	rc		9866120	1					
ANR	9866422	Identifier	mask		9866120	1					
ANR	9866423	Identifier	b		9866120	1					
ANR	9866424	ExpressionStatement	rc ++	486:5:15034:15038	9866120	1	True				
ANR	9866425	PostIncDecOperationExpression	rc ++		9866120	0					
ANR	9866426	Identifier	rc		9866120	0					
ANR	9866427	IncDec	++		9866120	1					
ANR	9866428	IfStatement	if ( rc >= MINRUN )		9866120	3					
ANR	9866429	Condition	rc >= MINRUN	487:8:15048:15059	9866120	0	True				
ANR	9866430	RelationalExpression	rc >= MINRUN		9866120	0		>=			
ANR	9866431	Identifier	rc		9866120	0					
ANR	9866432	Identifier	MINRUN		9866120	1					
ANR	9866433	BreakStatement	break ;	488:5:15067:15072	9866120	1	True				
ANR	9866434	IfStatement	if ( beg - i > 1 && beg - i < MINRUN )		9866120	3					
ANR	9866435	Condition	beg - i > 1 && beg - i < MINRUN	490:7:15105:15131	9866120	0	True				
ANR	9866436	AndExpression	beg - i > 1 && beg - i < MINRUN		9866120	0		&&			
ANR	9866437	RelationalExpression	beg - i > 1		9866120	0		>			
ANR	9866438	AdditiveExpression	beg - i		9866120	0		-			
ANR	9866439	Identifier	beg		9866120	0					
ANR	9866440	Identifier	i		9866120	1					
ANR	9866441	PrimaryExpression	1		9866120	1					
ANR	9866442	RelationalExpression	beg - i < MINRUN		9866120	1		<			
ANR	9866443	AdditiveExpression	beg - i		9866120	0		-			
ANR	9866444	Identifier	beg		9866120	0					
ANR	9866445	Identifier	i		9866120	1					
ANR	9866446	Identifier	MINRUN		9866120	1					
ANR	9866447	CompoundStatement		53:36:1279:1279	9866120	1					
ANR	9866448	ExpressionStatement	b = ( int16 ) ( tp [ i ] & mask )	491:4:15140:15166	9866120	0	True				
ANR	9866449	AssignmentExpression	b = ( int16 ) ( tp [ i ] & mask )		9866120	0		=			
ANR	9866450	Identifier	b		9866120	0					
ANR	9866451	CastExpression	( int16 ) ( tp [ i ] & mask )		9866120	1					
ANR	9866452	CastTarget	int16		9866120	0					
ANR	9866453	BitAndExpression	tp [ i ] & mask		9866120	1		&			
ANR	9866454	ArrayIndexing	tp [ i ]		9866120	0					
ANR	9866455	Identifier	tp		9866120	0					
ANR	9866456	Identifier	i		9866120	1					
ANR	9866457	Identifier	mask		9866120	1					
ANR	9866458	ExpressionStatement	j = i + 1	492:4:15192:15199	9866120	1	True				
ANR	9866459	AssignmentExpression	j = i + 1		9866120	0		=			
ANR	9866460	Identifier	j		9866120	0					
ANR	9866461	AdditiveExpression	i + 1		9866120	1		+			
ANR	9866462	Identifier	i		9866120	0					
ANR	9866463	PrimaryExpression	1		9866120	1					
ANR	9866464	WhileStatement	while ( ( tp [ j ++ ] & mask ) == b )		9866120	2					
ANR	9866465	Condition	( tp [ j ++ ] & mask ) == b	493:11:15212:15232	9866120	0	True				
ANR	9866466	EqualityExpression	( tp [ j ++ ] & mask ) == b		9866120	0		==			
ANR	9866467	BitAndExpression	tp [ j ++ ] & mask		9866120	0		&			
ANR	9866468	ArrayIndexing	tp [ j ++ ]		9866120	0					
ANR	9866469	Identifier	tp		9866120	0					
ANR	9866470	PostIncDecOperationExpression	j ++		9866120	1					
ANR	9866471	Identifier	j		9866120	0					
ANR	9866472	IncDec	++		9866120	1					
ANR	9866473	Identifier	mask		9866120	1					
ANR	9866474	Identifier	b		9866120	1					
ANR	9866475	IfStatement	if ( j == beg )		9866120	1					
ANR	9866476	Condition	j == beg	494:9:15244:15251	9866120	0	True				
ANR	9866477	EqualityExpression	j == beg		9866120	0		==			
ANR	9866478	Identifier	j		9866120	0					
ANR	9866479	Identifier	beg		9866120	1					
ANR	9866480	CompoundStatement		57:19:1399:1399	9866120	1					
ANR	9866481	ExpressionStatement	* op ++ = ( uint8 ) ( 128 - 2 + j - i )	495:6:15262:15288	9866120	0	True				
ANR	9866482	AssignmentExpression	* op ++ = ( uint8 ) ( 128 - 2 + j - i )		9866120	0		=			
ANR	9866483	UnaryOperationExpression	* op ++		9866120	0					
ANR	9866484	UnaryOperator	*		9866120	0					
ANR	9866485	PostIncDecOperationExpression	op ++		9866120	1					
ANR	9866486	Identifier	op		9866120	0					
ANR	9866487	IncDec	++		9866120	1					
ANR	9866488	CastExpression	( uint8 ) ( 128 - 2 + j - i )		9866120	1					
ANR	9866489	CastTarget	uint8		9866120	0					
ANR	9866490	AdditiveExpression	128 - 2 + j - i		9866120	1		-			
ANR	9866491	PrimaryExpression	128		9866120	0					
ANR	9866492	AdditiveExpression	2 + j - i		9866120	1		+			
ANR	9866493	PrimaryExpression	2		9866120	0					
ANR	9866494	AdditiveExpression	j - i		9866120	1		-			
ANR	9866495	Identifier	j		9866120	0					
ANR	9866496	Identifier	i		9866120	1					
ANR	9866497	ExpressionStatement	* op ++ = ( uint8 ) ( b >> shft )	496:6:15296:15322	9866120	1	True				
ANR	9866498	AssignmentExpression	* op ++ = ( uint8 ) ( b >> shft )		9866120	0		=			
ANR	9866499	UnaryOperationExpression	* op ++		9866120	0					
ANR	9866500	UnaryOperator	*		9866120	0					
ANR	9866501	PostIncDecOperationExpression	op ++		9866120	1					
ANR	9866502	Identifier	op		9866120	0					
ANR	9866503	IncDec	++		9866120	1					
ANR	9866504	CastExpression	( uint8 ) ( b >> shft )		9866120	1					
ANR	9866505	CastTarget	uint8		9866120	0					
ANR	9866506	ShiftExpression	b >> shft		9866120	1		>>			
ANR	9866507	Identifier	b		9866120	0					
ANR	9866508	Identifier	shft		9866120	1					
ANR	9866509	ExpressionStatement	occ -= 2	497:6:15330:15338	9866120	2	True				
ANR	9866510	AssignmentExpression	occ -= 2		9866120	0		-=			
ANR	9866511	Identifier	occ		9866120	0					
ANR	9866512	PrimaryExpression	2		9866120	1					
ANR	9866513	ExpressionStatement	i = beg	498:6:15346:15353	9866120	3	True				
ANR	9866514	AssignmentExpression	i = beg		9866120	0		=			
ANR	9866515	Identifier	i		9866120	0					
ANR	9866516	Identifier	beg		9866120	1					
ANR	9866517	BreakStatement	break ;	499:6:15361:15366	9866120	4	True				
ANR	9866518	WhileStatement	while ( i < beg )		9866120	4					
ANR	9866519	Condition	i < beg	502:10:15390:15396	9866120	0	True				
ANR	9866520	RelationalExpression	i < beg		9866120	0		<			
ANR	9866521	Identifier	i		9866120	0					
ANR	9866522	Identifier	beg		9866120	1					
ANR	9866523	CompoundStatement		65:19:1544:1544	9866120	1					
ANR	9866524	IfStatement	if ( ( j = beg - i ) > 127 )		9866120	0					
ANR	9866525	Condition	( j = beg - i ) > 127	503:8:15434:15450	9866120	0	True				
ANR	9866526	RelationalExpression	( j = beg - i ) > 127		9866120	0		>			
ANR	9866527	AssignmentExpression	j = beg - i		9866120	0		=			
ANR	9866528	Identifier	j		9866120	0					
ANR	9866529	AdditiveExpression	beg - i		9866120	1		-			
ANR	9866530	Identifier	beg		9866120	0					
ANR	9866531	Identifier	i		9866120	1					
ANR	9866532	PrimaryExpression	127		9866120	1					
ANR	9866533	ExpressionStatement	j = 127	503:27:15453:15460	9866120	1	True				
ANR	9866534	AssignmentExpression	j = 127		9866120	0		=			
ANR	9866535	Identifier	j		9866120	0					
ANR	9866536	PrimaryExpression	127		9866120	1					
ANR	9866537	IfStatement	if ( occ < j + 3 )		9866120	1					
ANR	9866538	Condition	occ < j + 3	504:8:15470:15478	9866120	0	True				
ANR	9866539	RelationalExpression	occ < j + 3		9866120	0		<			
ANR	9866540	Identifier	occ		9866120	0					
ANR	9866541	AdditiveExpression	j + 3		9866120	1		+			
ANR	9866542	Identifier	j		9866120	0					
ANR	9866543	PrimaryExpression	3		9866120	1					
ANR	9866544	CompoundStatement		67:19:1626:1626	9866120	1					
ANR	9866545	ExpressionStatement	tif -> tif_rawcp = op	505:5:15488:15507	9866120	0	True				
ANR	9866546	AssignmentExpression	tif -> tif_rawcp = op		9866120	0		=			
ANR	9866547	PtrMemberAccess	tif -> tif_rawcp		9866120	0					
ANR	9866548	Identifier	tif		9866120	0					
ANR	9866549	Identifier	tif_rawcp		9866120	1					
ANR	9866550	Identifier	op		9866120	1					
ANR	9866551	ExpressionStatement	tif -> tif_rawcc = tif -> tif_rawdatasize - occ	506:5:15514:15557	9866120	1	True				
ANR	9866552	AssignmentExpression	tif -> tif_rawcc = tif -> tif_rawdatasize - occ		9866120	0		=			
ANR	9866553	PtrMemberAccess	tif -> tif_rawcc		9866120	0					
ANR	9866554	Identifier	tif		9866120	0					
ANR	9866555	Identifier	tif_rawcc		9866120	1					
ANR	9866556	AdditiveExpression	tif -> tif_rawdatasize - occ		9866120	1		-			
ANR	9866557	PtrMemberAccess	tif -> tif_rawdatasize		9866120	0					
ANR	9866558	Identifier	tif		9866120	0					
ANR	9866559	Identifier	tif_rawdatasize		9866120	1					
ANR	9866560	Identifier	occ		9866120	1					
ANR	9866561	IfStatement	if ( ! TIFFFlushData1 ( tif ) )		9866120	2					
ANR	9866562	Condition	! TIFFFlushData1 ( tif )	507:9:15568:15587	9866120	0	True				
ANR	9866563	UnaryOperationExpression	! TIFFFlushData1 ( tif )		9866120	0					
ANR	9866564	UnaryOperator	!		9866120	0					
ANR	9866565	CallExpression	TIFFFlushData1 ( tif )		9866120	1					
ANR	9866566	Callee	TIFFFlushData1		9866120	0					
ANR	9866567	Identifier	TIFFFlushData1		9866120	0					
ANR	9866568	ArgumentList	tif		9866120	1					
ANR	9866569	Argument	tif		9866120	0					
ANR	9866570	Identifier	tif		9866120	0					
ANR	9866571	ReturnStatement	return ( 0 ) ;	508:6:15596:15606	9866120	1	True				
ANR	9866572	PrimaryExpression	0		9866120	0					
ANR	9866573	ExpressionStatement	op = tif -> tif_rawcp	509:5:15613:15632	9866120	3	True				
ANR	9866574	AssignmentExpression	op = tif -> tif_rawcp		9866120	0		=			
ANR	9866575	Identifier	op		9866120	0					
ANR	9866576	PtrMemberAccess	tif -> tif_rawcp		9866120	1					
ANR	9866577	Identifier	tif		9866120	0					
ANR	9866578	Identifier	tif_rawcp		9866120	1					
ANR	9866579	ExpressionStatement	occ = tif -> tif_rawdatasize - tif -> tif_rawcc	510:5:15639:15682	9866120	4	True				
ANR	9866580	AssignmentExpression	occ = tif -> tif_rawdatasize - tif -> tif_rawcc		9866120	0		=			
ANR	9866581	Identifier	occ		9866120	0					
ANR	9866582	AdditiveExpression	tif -> tif_rawdatasize - tif -> tif_rawcc		9866120	1		-			
ANR	9866583	PtrMemberAccess	tif -> tif_rawdatasize		9866120	0					
ANR	9866584	Identifier	tif		9866120	0					
ANR	9866585	Identifier	tif_rawdatasize		9866120	1					
ANR	9866586	PtrMemberAccess	tif -> tif_rawcc		9866120	1					
ANR	9866587	Identifier	tif		9866120	0					
ANR	9866588	Identifier	tif_rawcc		9866120	1					
ANR	9866589	ExpressionStatement	* op ++ = ( uint8 ) j	512:4:15694:15711	9866120	2	True				
ANR	9866590	AssignmentExpression	* op ++ = ( uint8 ) j		9866120	0		=			
ANR	9866591	UnaryOperationExpression	* op ++		9866120	0					
ANR	9866592	UnaryOperator	*		9866120	0					
ANR	9866593	PostIncDecOperationExpression	op ++		9866120	1					
ANR	9866594	Identifier	op		9866120	0					
ANR	9866595	IncDec	++		9866120	1					
ANR	9866596	CastExpression	( uint8 ) j		9866120	1					
ANR	9866597	CastTarget	uint8		9866120	0					
ANR	9866598	Identifier	j		9866120	1					
ANR	9866599	ExpressionStatement	occ --	512:23:15713:15718	9866120	3	True				
ANR	9866600	PostIncDecOperationExpression	occ --		9866120	0					
ANR	9866601	Identifier	occ		9866120	0					
ANR	9866602	IncDec	--		9866120	1					
ANR	9866603	WhileStatement	while ( j -- )		9866120	4					
ANR	9866604	Condition	j --	513:11:15731:15733	9866120	0	True				
ANR	9866605	PostIncDecOperationExpression	j --		9866120	0					
ANR	9866606	Identifier	j		9866120	0					
ANR	9866607	IncDec	--		9866120	1					
ANR	9866608	CompoundStatement		76:16:1881:1881	9866120	1					
ANR	9866609	ExpressionStatement	* op ++ = ( uint8 ) ( tp [ i ++ ] >> shft & 0xff )	514:5:15743:15783	9866120	0	True				
ANR	9866610	AssignmentExpression	* op ++ = ( uint8 ) ( tp [ i ++ ] >> shft & 0xff )		9866120	0		=			
ANR	9866611	UnaryOperationExpression	* op ++		9866120	0					
ANR	9866612	UnaryOperator	*		9866120	0					
ANR	9866613	PostIncDecOperationExpression	op ++		9866120	1					
ANR	9866614	Identifier	op		9866120	0					
ANR	9866615	IncDec	++		9866120	1					
ANR	9866616	CastExpression	( uint8 ) ( tp [ i ++ ] >> shft & 0xff )		9866120	1					
ANR	9866617	CastTarget	uint8		9866120	0					
ANR	9866618	BitAndExpression	tp [ i ++ ] >> shft & 0xff		9866120	1		&			
ANR	9866619	ShiftExpression	tp [ i ++ ] >> shft		9866120	0		>>			
ANR	9866620	ArrayIndexing	tp [ i ++ ]		9866120	0					
ANR	9866621	Identifier	tp		9866120	0					
ANR	9866622	PostIncDecOperationExpression	i ++		9866120	1					
ANR	9866623	Identifier	i		9866120	0					
ANR	9866624	IncDec	++		9866120	1					
ANR	9866625	Identifier	shft		9866120	1					
ANR	9866626	PrimaryExpression	0xff		9866120	1					
ANR	9866627	ExpressionStatement	occ --	515:5:15790:15795	9866120	1	True				
ANR	9866628	PostIncDecOperationExpression	occ --		9866120	0					
ANR	9866629	Identifier	occ		9866120	0					
ANR	9866630	IncDec	--		9866120	1					
ANR	9866631	IfStatement	if ( rc >= MINRUN )		9866120	5					
ANR	9866632	Condition	rc >= MINRUN	518:7:15815:15826	9866120	0	True				
ANR	9866633	RelationalExpression	rc >= MINRUN		9866120	0		>=			
ANR	9866634	Identifier	rc		9866120	0					
ANR	9866635	Identifier	MINRUN		9866120	1					
ANR	9866636	CompoundStatement		81:21:1974:1974	9866120	1					
ANR	9866637	ExpressionStatement	* op ++ = ( uint8 ) ( 128 - 2 + rc )	519:4:15856:15882	9866120	0	True				
ANR	9866638	AssignmentExpression	* op ++ = ( uint8 ) ( 128 - 2 + rc )		9866120	0		=			
ANR	9866639	UnaryOperationExpression	* op ++		9866120	0					
ANR	9866640	UnaryOperator	*		9866120	0					
ANR	9866641	PostIncDecOperationExpression	op ++		9866120	1					
ANR	9866642	Identifier	op		9866120	0					
ANR	9866643	IncDec	++		9866120	1					
ANR	9866644	CastExpression	( uint8 ) ( 128 - 2 + rc )		9866120	1					
ANR	9866645	CastTarget	uint8		9866120	0					
ANR	9866646	AdditiveExpression	128 - 2 + rc		9866120	1		-			
ANR	9866647	PrimaryExpression	128		9866120	0					
ANR	9866648	AdditiveExpression	2 + rc		9866120	1		+			
ANR	9866649	PrimaryExpression	2		9866120	0					
ANR	9866650	Identifier	rc		9866120	1					
ANR	9866651	ExpressionStatement	* op ++ = ( uint8 ) ( tp [ beg ] >> shft & 0xff )	520:4:15888:15928	9866120	1	True				
ANR	9866652	AssignmentExpression	* op ++ = ( uint8 ) ( tp [ beg ] >> shft & 0xff )		9866120	0		=			
ANR	9866653	UnaryOperationExpression	* op ++		9866120	0					
ANR	9866654	UnaryOperator	*		9866120	0					
ANR	9866655	PostIncDecOperationExpression	op ++		9866120	1					
ANR	9866656	Identifier	op		9866120	0					
ANR	9866657	IncDec	++		9866120	1					
ANR	9866658	CastExpression	( uint8 ) ( tp [ beg ] >> shft & 0xff )		9866120	1					
ANR	9866659	CastTarget	uint8		9866120	0					
ANR	9866660	BitAndExpression	tp [ beg ] >> shft & 0xff		9866120	1		&			
ANR	9866661	ShiftExpression	tp [ beg ] >> shft		9866120	0		>>			
ANR	9866662	ArrayIndexing	tp [ beg ]		9866120	0					
ANR	9866663	Identifier	tp		9866120	0					
ANR	9866664	Identifier	beg		9866120	1					
ANR	9866665	Identifier	shft		9866120	1					
ANR	9866666	PrimaryExpression	0xff		9866120	1					
ANR	9866667	ExpressionStatement	occ -= 2	521:4:15934:15942	9866120	2	True				
ANR	9866668	AssignmentExpression	occ -= 2		9866120	0		-=			
ANR	9866669	Identifier	occ		9866120	0					
ANR	9866670	PrimaryExpression	2		9866120	1					
ANR	9866671	ElseStatement	else		9866120	0					
ANR	9866672	ExpressionStatement	rc = 0	523:4:15958:15964	9866120	0	True				
ANR	9866673	AssignmentExpression	rc = 0		9866120	0		=			
ANR	9866674	Identifier	rc		9866120	0					
ANR	9866675	PrimaryExpression	0		9866120	1					
ANR	9866676	ExpressionStatement	tif -> tif_rawcp = op	525:1:15971:15990	9866120	20	True				
ANR	9866677	AssignmentExpression	tif -> tif_rawcp = op		9866120	0		=			
ANR	9866678	PtrMemberAccess	tif -> tif_rawcp		9866120	0					
ANR	9866679	Identifier	tif		9866120	0					
ANR	9866680	Identifier	tif_rawcp		9866120	1					
ANR	9866681	Identifier	op		9866120	1					
ANR	9866682	ExpressionStatement	tif -> tif_rawcc = tif -> tif_rawdatasize - occ	526:1:15993:16036	9866120	21	True				
ANR	9866683	AssignmentExpression	tif -> tif_rawcc = tif -> tif_rawdatasize - occ		9866120	0		=			
ANR	9866684	PtrMemberAccess	tif -> tif_rawcc		9866120	0					
ANR	9866685	Identifier	tif		9866120	0					
ANR	9866686	Identifier	tif_rawcc		9866120	1					
ANR	9866687	AdditiveExpression	tif -> tif_rawdatasize - occ		9866120	1		-			
ANR	9866688	PtrMemberAccess	tif -> tif_rawdatasize		9866120	0					
ANR	9866689	Identifier	tif		9866120	0					
ANR	9866690	Identifier	tif_rawdatasize		9866120	1					
ANR	9866691	Identifier	occ		9866120	1					
ANR	9866692	ReturnStatement	return ( 1 ) ;	528:1:16040:16050	9866120	22	True				
ANR	9866693	PrimaryExpression	1		9866120	0					
ANR	9866694	ReturnType	static int		9866120	1					
ANR	9866695	Identifier	LogL16Encode		9866120	2					
ANR	9866696	ParameterList	"TIFF * tif , uint8 * bp , tmsize_t cc , uint16 s"		9866120	3					
ANR	9866697	Parameter	TIFF * tif	437:13:13809:13817	9866120	0	True				
ANR	9866698	ParameterType	TIFF *		9866120	0					
ANR	9866699	Identifier	tif		9866120	1					
ANR	9866700	Parameter	uint8 * bp	437:24:13820:13828	9866120	1	True				
ANR	9866701	ParameterType	uint8 *		9866120	0					
ANR	9866702	Identifier	bp		9866120	1					
ANR	9866703	Parameter	tmsize_t cc	437:35:13831:13841	9866120	2	True				
ANR	9866704	ParameterType	tmsize_t		9866120	0					
ANR	9866705	Identifier	cc		9866120	1					
ANR	9866706	Parameter	uint16 s	437:48:13844:13851	9866120	3	True				
ANR	9866707	ParameterType	uint16		9866120	0					
ANR	9866708	Identifier	s		9866120	1					
ANR	9866709	CFGEntryNode	ENTRY		9866120		True				
ANR	9866710	CFGExitNode	EXIT		9866120		True				
ANR	9866711	Symbol	* sp		9866120						
ANR	9866712	Symbol	beg		9866120						
ANR	9866713	Symbol	sp -> user_datafmt		9866120						
ANR	9866714	Symbol	bp		9866120						
ANR	9866715	Symbol	occ		9866120						
ANR	9866716	Symbol	tif		9866120						
ANR	9866717	Symbol	npixels		9866120						
ANR	9866718	Symbol	sp -> tbuflen		9866120						
ANR	9866719	Symbol	tif -> tif_rawcc		9866120						
ANR	9866720	Symbol	* beg		9866120						
ANR	9866721	Symbol	sp -> pixel_size		9866120						
ANR	9866722	Symbol	SGILOGDATAFMT_16BIT		9866120						
ANR	9866723	Symbol	TIFFFlushData1		9866120						
ANR	9866724	Symbol	shft		9866120						
ANR	9866725	Symbol	sp -> tbuf		9866120						
ANR	9866726	Symbol	sp -> tfunc		9866120						
ANR	9866727	Symbol	sp		9866120						
ANR	9866728	Symbol	mask		9866120						
ANR	9866729	Symbol	cc		9866120						
ANR	9866730	Symbol	EncoderState		9866120						
ANR	9866731	Symbol	op		9866120						
ANR	9866732	Symbol	* tp		9866120						
ANR	9866733	Symbol	b		9866120						
ANR	9866734	Symbol	NULL		9866120						
ANR	9866735	Symbol	module		9866120						
ANR	9866736	Symbol	i		9866120						
ANR	9866737	Symbol	j		9866120						
ANR	9866738	Symbol	tif -> tif_rawcp		9866120						
ANR	9866739	Symbol	tif -> tif_clientdata		9866120						
ANR	9866740	Symbol	rc		9866120						
ANR	9866741	Symbol	s		9866120						
ANR	9866742	Symbol	* i		9866120						
ANR	9866743	Symbol	tif -> tif_rawdatasize		9866120						
ANR	9866744	Symbol	* rc		9866120						
ANR	9866745	Symbol	MINRUN		9866120						
ANR	9866746	Symbol	* op ++		9866120						
ANR	9866747	Symbol	* tif		9866120						
ANR	9866748	Symbol	tp		9866120						
ANR	9866749	Function	LogLuvEncode24	534:0:16096:17203							
ANR	9866750	FunctionDef	"LogLuvEncode24 (TIFF * tif , uint8 * bp , tmsize_t cc , uint16 s)"		9866749	0					
ANR	9866751	CompoundStatement		536:0:16167:17203	9866749	0					
ANR	9866752	Statement	static	537:1:16170:16175	9866749	0	True				
ANR	9866753	IdentifierDeclStatement	"const char module [ ] = ""LogLuvEncode24"" ;"	537:8:16177:16215	9866749	1	True				
ANR	9866754	IdentifierDecl	"module [ ] = ""LogLuvEncode24"""		9866749	0					
ANR	9866755	IdentifierDeclType	const char [ ]		9866749	0					
ANR	9866756	Identifier	module		9866749	1					
ANR	9866757	AssignmentExpression	"module [ ] = ""LogLuvEncode24"""		9866749	2		=			
ANR	9866758	Identifier	module		9866749	0					
ANR	9866759	PrimaryExpression	"""LogLuvEncode24"""		9866749	1					
ANR	9866760	IdentifierDeclStatement	LogLuvState * sp = EncoderState ( tif ) ;	538:1:16218:16253	9866749	2	True				
ANR	9866761	IdentifierDecl	* sp = EncoderState ( tif )		9866749	0					
ANR	9866762	IdentifierDeclType	LogLuvState *		9866749	0					
ANR	9866763	Identifier	sp		9866749	1					
ANR	9866764	AssignmentExpression	* sp = EncoderState ( tif )		9866749	2		=			
ANR	9866765	Identifier	sp		9866749	0					
ANR	9866766	CallExpression	EncoderState ( tif )		9866749	1					
ANR	9866767	Callee	EncoderState		9866749	0					
ANR	9866768	Identifier	EncoderState		9866749	0					
ANR	9866769	ArgumentList	tif		9866749	1					
ANR	9866770	Argument	tif		9866749	0					
ANR	9866771	Identifier	tif		9866749	0					
ANR	9866772	IdentifierDeclStatement	tmsize_t i ;	539:1:16256:16266	9866749	3	True				
ANR	9866773	IdentifierDecl	i		9866749	0					
ANR	9866774	IdentifierDeclType	tmsize_t		9866749	0					
ANR	9866775	Identifier	i		9866749	1					
ANR	9866776	IdentifierDeclStatement	tmsize_t npixels ;	540:1:16269:16285	9866749	4	True				
ANR	9866777	IdentifierDecl	npixels		9866749	0					
ANR	9866778	IdentifierDeclType	tmsize_t		9866749	0					
ANR	9866779	Identifier	npixels		9866749	1					
ANR	9866780	IdentifierDeclStatement	tmsize_t occ ;	541:1:16288:16300	9866749	5	True				
ANR	9866781	IdentifierDecl	occ		9866749	0					
ANR	9866782	IdentifierDeclType	tmsize_t		9866749	0					
ANR	9866783	Identifier	occ		9866749	1					
ANR	9866784	IdentifierDeclStatement	uint8 * op ;	542:1:16303:16312	9866749	6	True				
ANR	9866785	IdentifierDecl	* op		9866749	0					
ANR	9866786	IdentifierDeclType	uint8 *		9866749	0					
ANR	9866787	Identifier	op		9866749	1					
ANR	9866788	IdentifierDeclStatement	uint32 * tp ;	543:1:16315:16325	9866749	7	True				
ANR	9866789	IdentifierDecl	* tp		9866749	0					
ANR	9866790	IdentifierDeclType	uint32 *		9866749	0					
ANR	9866791	Identifier	tp		9866749	1					
ANR	9866792	ExpressionStatement	assert ( s == 0 )	545:1:16329:16343	9866749	8	True				
ANR	9866793	CallExpression	assert ( s == 0 )		9866749	0					
ANR	9866794	Callee	assert		9866749	0					
ANR	9866795	Identifier	assert		9866749	0					
ANR	9866796	ArgumentList	s == 0		9866749	1					
ANR	9866797	Argument	s == 0		9866749	0					
ANR	9866798	EqualityExpression	s == 0		9866749	0		==			
ANR	9866799	Identifier	s		9866749	0					
ANR	9866800	PrimaryExpression	0		9866749	1					
ANR	9866801	ExpressionStatement	assert ( sp != NULL )	546:1:16346:16364	9866749	9	True				
ANR	9866802	CallExpression	assert ( sp != NULL )		9866749	0					
ANR	9866803	Callee	assert		9866749	0					
ANR	9866804	Identifier	assert		9866749	0					
ANR	9866805	ArgumentList	sp != NULL		9866749	1					
ANR	9866806	Argument	sp != NULL		9866749	0					
ANR	9866807	EqualityExpression	sp != NULL		9866749	0		!=			
ANR	9866808	Identifier	sp		9866749	0					
ANR	9866809	Identifier	NULL		9866749	1					
ANR	9866810	ExpressionStatement	npixels = cc / sp -> pixel_size	547:1:16367:16396	9866749	10	True				
ANR	9866811	AssignmentExpression	npixels = cc / sp -> pixel_size		9866749	0		=			
ANR	9866812	Identifier	npixels		9866749	0					
ANR	9866813	MultiplicativeExpression	cc / sp -> pixel_size		9866749	1		/			
ANR	9866814	Identifier	cc		9866749	0					
ANR	9866815	PtrMemberAccess	sp -> pixel_size		9866749	1					
ANR	9866816	Identifier	sp		9866749	0					
ANR	9866817	Identifier	pixel_size		9866749	1					
ANR	9866818	IfStatement	if ( sp -> user_datafmt == SGILOGDATAFMT_RAW )		9866749	11					
ANR	9866819	Condition	sp -> user_datafmt == SGILOGDATAFMT_RAW	549:5:16404:16440	9866749	0	True				
ANR	9866820	EqualityExpression	sp -> user_datafmt == SGILOGDATAFMT_RAW		9866749	0		==			
ANR	9866821	PtrMemberAccess	sp -> user_datafmt		9866749	0					
ANR	9866822	Identifier	sp		9866749	0					
ANR	9866823	Identifier	user_datafmt		9866749	1					
ANR	9866824	Identifier	SGILOGDATAFMT_RAW		9866749	1					
ANR	9866825	ExpressionStatement	tp = ( uint32 * ) bp	550:2:16445:16462	9866749	1	True				
ANR	9866826	AssignmentExpression	tp = ( uint32 * ) bp		9866749	0		=			
ANR	9866827	Identifier	tp		9866749	0					
ANR	9866828	CastExpression	( uint32 * ) bp		9866749	1					
ANR	9866829	CastTarget	uint32 *		9866749	0					
ANR	9866830	Identifier	bp		9866749	1					
ANR	9866831	ElseStatement	else		9866749	0					
ANR	9866832	CompoundStatement		16:6:302:302	9866749	0					
ANR	9866833	ExpressionStatement	tp = ( uint32 * ) sp -> tbuf	552:2:16474:16497	9866749	0	True				
ANR	9866834	AssignmentExpression	tp = ( uint32 * ) sp -> tbuf		9866749	0		=			
ANR	9866835	Identifier	tp		9866749	0					
ANR	9866836	CastExpression	( uint32 * ) sp -> tbuf		9866749	1					
ANR	9866837	CastTarget	uint32 *		9866749	0					
ANR	9866838	PtrMemberAccess	sp -> tbuf		9866749	1					
ANR	9866839	Identifier	sp		9866749	0					
ANR	9866840	Identifier	tbuf		9866749	1					
ANR	9866841	IfStatement	if ( sp -> tbuflen < npixels )		9866749	1					
ANR	9866842	Condition	sp -> tbuflen < npixels	553:5:16504:16524	9866749	0	True				
ANR	9866843	RelationalExpression	sp -> tbuflen < npixels		9866749	0		<			
ANR	9866844	PtrMemberAccess	sp -> tbuflen		9866749	0					
ANR	9866845	Identifier	sp		9866749	0					
ANR	9866846	Identifier	tbuflen		9866749	1					
ANR	9866847	Identifier	npixels		9866749	1					
ANR	9866848	CompoundStatement		18:28:359:359	9866749	1					
ANR	9866849	ExpressionStatement	"TIFFErrorExt ( tif -> tif_clientdata , module , ""Translation buffer too short"" )"	554:3:16532:16612	9866749	0	True				
ANR	9866850	CallExpression	"TIFFErrorExt ( tif -> tif_clientdata , module , ""Translation buffer too short"" )"		9866749	0					
ANR	9866851	Callee	TIFFErrorExt		9866749	0					
ANR	9866852	Identifier	TIFFErrorExt		9866749	0					
ANR	9866853	ArgumentList	tif -> tif_clientdata		9866749	1					
ANR	9866854	Argument	tif -> tif_clientdata		9866749	0					
ANR	9866855	PtrMemberAccess	tif -> tif_clientdata		9866749	0					
ANR	9866856	Identifier	tif		9866749	0					
ANR	9866857	Identifier	tif_clientdata		9866749	1					
ANR	9866858	Argument	module		9866749	1					
ANR	9866859	Identifier	module		9866749	0					
ANR	9866860	Argument	"""Translation buffer too short"""		9866749	2					
ANR	9866861	PrimaryExpression	"""Translation buffer too short"""		9866749	0					
ANR	9866862	ReturnStatement	return ( 0 ) ;	556:3:16617:16627	9866749	1	True				
ANR	9866863	PrimaryExpression	0		9866749	0					
ANR	9866864	ExpressionStatement	"( * sp -> tfunc ) ( sp , bp , npixels )"	558:2:16635:16664	9866749	2	True				
ANR	9866865	CallExpression	"( * sp -> tfunc ) ( sp , bp , npixels )"		9866749	0					
ANR	9866866	Callee	* sp -> tfunc		9866749	0					
ANR	9866867	UnaryOperationExpression	* sp -> tfunc		9866749	0					
ANR	9866868	UnaryOperator	*		9866749	0					
ANR	9866869	PtrMemberAccess	sp -> tfunc		9866749	1					
ANR	9866870	Identifier	sp		9866749	0					
ANR	9866871	Identifier	tfunc		9866749	1					
ANR	9866872	ArgumentList	sp		9866749	1					
ANR	9866873	Argument	sp		9866749	0					
ANR	9866874	Identifier	sp		9866749	0					
ANR	9866875	Argument	bp		9866749	1					
ANR	9866876	Identifier	bp		9866749	0					
ANR	9866877	Argument	npixels		9866749	2					
ANR	9866878	Identifier	npixels		9866749	0					
ANR	9866879	ExpressionStatement	op = tif -> tif_rawcp	561:1:16702:16721	9866749	12	True				
ANR	9866880	AssignmentExpression	op = tif -> tif_rawcp		9866749	0		=			
ANR	9866881	Identifier	op		9866749	0					
ANR	9866882	PtrMemberAccess	tif -> tif_rawcp		9866749	1					
ANR	9866883	Identifier	tif		9866749	0					
ANR	9866884	Identifier	tif_rawcp		9866749	1					
ANR	9866885	ExpressionStatement	occ = tif -> tif_rawdatasize - tif -> tif_rawcc	562:1:16724:16767	9866749	13	True				
ANR	9866886	AssignmentExpression	occ = tif -> tif_rawdatasize - tif -> tif_rawcc		9866749	0		=			
ANR	9866887	Identifier	occ		9866749	0					
ANR	9866888	AdditiveExpression	tif -> tif_rawdatasize - tif -> tif_rawcc		9866749	1		-			
ANR	9866889	PtrMemberAccess	tif -> tif_rawdatasize		9866749	0					
ANR	9866890	Identifier	tif		9866749	0					
ANR	9866891	Identifier	tif_rawdatasize		9866749	1					
ANR	9866892	PtrMemberAccess	tif -> tif_rawcc		9866749	1					
ANR	9866893	Identifier	tif		9866749	0					
ANR	9866894	Identifier	tif_rawcc		9866749	1					
ANR	9866895	ForStatement	for ( i = npixels ; i -- ; )		9866749	14					
ANR	9866896	ForInit	i = npixels ;	563:6:16775:16786	9866749	0	True				
ANR	9866897	AssignmentExpression	i = npixels		9866749	0		=			
ANR	9866898	Identifier	i		9866749	0					
ANR	9866899	Identifier	npixels		9866749	1					
ANR	9866900	Condition	i --	563:19:16788:16790	9866749	1	True				
ANR	9866901	PostIncDecOperationExpression	i --		9866749	0					
ANR	9866902	Identifier	i		9866749	0					
ANR	9866903	IncDec	--		9866749	1					
ANR	9866904	CompoundStatement		28:26:627:627	9866749	2					
ANR	9866905	IfStatement	if ( occ < 3 )		9866749	0					
ANR	9866906	Condition	occ < 3	564:6:16803:16809	9866749	0	True				
ANR	9866907	RelationalExpression	occ < 3		9866749	0		<			
ANR	9866908	Identifier	occ		9866749	0					
ANR	9866909	PrimaryExpression	3		9866749	1					
ANR	9866910	CompoundStatement		29:15:644:644	9866749	1					
ANR	9866911	ExpressionStatement	tif -> tif_rawcp = op	565:3:16817:16836	9866749	0	True				
ANR	9866912	AssignmentExpression	tif -> tif_rawcp = op		9866749	0		=			
ANR	9866913	PtrMemberAccess	tif -> tif_rawcp		9866749	0					
ANR	9866914	Identifier	tif		9866749	0					
ANR	9866915	Identifier	tif_rawcp		9866749	1					
ANR	9866916	Identifier	op		9866749	1					
ANR	9866917	ExpressionStatement	tif -> tif_rawcc = tif -> tif_rawdatasize - occ	566:3:16841:16884	9866749	1	True				
ANR	9866918	AssignmentExpression	tif -> tif_rawcc = tif -> tif_rawdatasize - occ		9866749	0		=			
ANR	9866919	PtrMemberAccess	tif -> tif_rawcc		9866749	0					
ANR	9866920	Identifier	tif		9866749	0					
ANR	9866921	Identifier	tif_rawcc		9866749	1					
ANR	9866922	AdditiveExpression	tif -> tif_rawdatasize - occ		9866749	1		-			
ANR	9866923	PtrMemberAccess	tif -> tif_rawdatasize		9866749	0					
ANR	9866924	Identifier	tif		9866749	0					
ANR	9866925	Identifier	tif_rawdatasize		9866749	1					
ANR	9866926	Identifier	occ		9866749	1					
ANR	9866927	IfStatement	if ( ! TIFFFlushData1 ( tif ) )		9866749	2					
ANR	9866928	Condition	! TIFFFlushData1 ( tif )	567:7:16893:16912	9866749	0	True				
ANR	9866929	UnaryOperationExpression	! TIFFFlushData1 ( tif )		9866749	0					
ANR	9866930	UnaryOperator	!		9866749	0					
ANR	9866931	CallExpression	TIFFFlushData1 ( tif )		9866749	1					
ANR	9866932	Callee	TIFFFlushData1		9866749	0					
ANR	9866933	Identifier	TIFFFlushData1		9866749	0					
ANR	9866934	ArgumentList	tif		9866749	1					
ANR	9866935	Argument	tif		9866749	0					
ANR	9866936	Identifier	tif		9866749	0					
ANR	9866937	ReturnStatement	return ( 0 ) ;	568:4:16919:16929	9866749	1	True				
ANR	9866938	PrimaryExpression	0		9866749	0					
ANR	9866939	ExpressionStatement	op = tif -> tif_rawcp	569:3:16934:16953	9866749	3	True				
ANR	9866940	AssignmentExpression	op = tif -> tif_rawcp		9866749	0		=			
ANR	9866941	Identifier	op		9866749	0					
ANR	9866942	PtrMemberAccess	tif -> tif_rawcp		9866749	1					
ANR	9866943	Identifier	tif		9866749	0					
ANR	9866944	Identifier	tif_rawcp		9866749	1					
ANR	9866945	ExpressionStatement	occ = tif -> tif_rawdatasize - tif -> tif_rawcc	570:3:16958:17001	9866749	4	True				
ANR	9866946	AssignmentExpression	occ = tif -> tif_rawdatasize - tif -> tif_rawcc		9866749	0		=			
ANR	9866947	Identifier	occ		9866749	0					
ANR	9866948	AdditiveExpression	tif -> tif_rawdatasize - tif -> tif_rawcc		9866749	1		-			
ANR	9866949	PtrMemberAccess	tif -> tif_rawdatasize		9866749	0					
ANR	9866950	Identifier	tif		9866749	0					
ANR	9866951	Identifier	tif_rawdatasize		9866749	1					
ANR	9866952	PtrMemberAccess	tif -> tif_rawcc		9866749	1					
ANR	9866953	Identifier	tif		9866749	0					
ANR	9866954	Identifier	tif_rawcc		9866749	1					
ANR	9866955	ExpressionStatement	* op ++ = ( uint8 ) ( * tp >> 16 )	572:2:17009:17035	9866749	1	True				
ANR	9866956	AssignmentExpression	* op ++ = ( uint8 ) ( * tp >> 16 )		9866749	0		=			
ANR	9866957	UnaryOperationExpression	* op ++		9866749	0					
ANR	9866958	UnaryOperator	*		9866749	0					
ANR	9866959	PostIncDecOperationExpression	op ++		9866749	1					
ANR	9866960	Identifier	op		9866749	0					
ANR	9866961	IncDec	++		9866749	1					
ANR	9866962	CastExpression	( uint8 ) ( * tp >> 16 )		9866749	1					
ANR	9866963	CastTarget	uint8		9866749	0					
ANR	9866964	ShiftExpression	* tp >> 16		9866749	1		>>			
ANR	9866965	UnaryOperationExpression	* tp		9866749	0					
ANR	9866966	UnaryOperator	*		9866749	0					
ANR	9866967	Identifier	tp		9866749	1					
ANR	9866968	PrimaryExpression	16		9866749	1					
ANR	9866969	ExpressionStatement	* op ++ = ( uint8 ) ( * tp >> 8 & 0xff )	573:2:17039:17071	9866749	2	True				
ANR	9866970	AssignmentExpression	* op ++ = ( uint8 ) ( * tp >> 8 & 0xff )		9866749	0		=			
ANR	9866971	UnaryOperationExpression	* op ++		9866749	0					
ANR	9866972	UnaryOperator	*		9866749	0					
ANR	9866973	PostIncDecOperationExpression	op ++		9866749	1					
ANR	9866974	Identifier	op		9866749	0					
ANR	9866975	IncDec	++		9866749	1					
ANR	9866976	CastExpression	( uint8 ) ( * tp >> 8 & 0xff )		9866749	1					
ANR	9866977	CastTarget	uint8		9866749	0					
ANR	9866978	BitAndExpression	* tp >> 8 & 0xff		9866749	1		&			
ANR	9866979	ShiftExpression	* tp >> 8		9866749	0		>>			
ANR	9866980	UnaryOperationExpression	* tp		9866749	0					
ANR	9866981	UnaryOperator	*		9866749	0					
ANR	9866982	Identifier	tp		9866749	1					
ANR	9866983	PrimaryExpression	8		9866749	1					
ANR	9866984	PrimaryExpression	0xff		9866749	1					
ANR	9866985	ExpressionStatement	* op ++ = ( uint8 ) ( * tp ++ & 0xff )	574:2:17075:17104	9866749	3	True				
ANR	9866986	AssignmentExpression	* op ++ = ( uint8 ) ( * tp ++ & 0xff )		9866749	0		=			
ANR	9866987	UnaryOperationExpression	* op ++		9866749	0					
ANR	9866988	UnaryOperator	*		9866749	0					
ANR	9866989	PostIncDecOperationExpression	op ++		9866749	1					
ANR	9866990	Identifier	op		9866749	0					
ANR	9866991	IncDec	++		9866749	1					
ANR	9866992	CastExpression	( uint8 ) ( * tp ++ & 0xff )		9866749	1					
ANR	9866993	CastTarget	uint8		9866749	0					
ANR	9866994	BitAndExpression	* tp ++ & 0xff		9866749	1		&			
ANR	9866995	UnaryOperationExpression	* tp ++		9866749	0					
ANR	9866996	UnaryOperator	*		9866749	0					
ANR	9866997	PostIncDecOperationExpression	tp ++		9866749	1					
ANR	9866998	Identifier	tp		9866749	0					
ANR	9866999	IncDec	++		9866749	1					
ANR	9867000	PrimaryExpression	0xff		9866749	1					
ANR	9867001	ExpressionStatement	occ -= 3	575:2:17108:17116	9866749	4	True				
ANR	9867002	AssignmentExpression	occ -= 3		9866749	0		-=			
ANR	9867003	Identifier	occ		9866749	0					
ANR	9867004	PrimaryExpression	3		9866749	1					
ANR	9867005	ExpressionStatement	tif -> tif_rawcp = op	577:1:17122:17141	9866749	15	True				
ANR	9867006	AssignmentExpression	tif -> tif_rawcp = op		9866749	0		=			
ANR	9867007	PtrMemberAccess	tif -> tif_rawcp		9866749	0					
ANR	9867008	Identifier	tif		9866749	0					
ANR	9867009	Identifier	tif_rawcp		9866749	1					
ANR	9867010	Identifier	op		9866749	1					
ANR	9867011	ExpressionStatement	tif -> tif_rawcc = tif -> tif_rawdatasize - occ	578:1:17144:17187	9866749	16	True				
ANR	9867012	AssignmentExpression	tif -> tif_rawcc = tif -> tif_rawdatasize - occ		9866749	0		=			
ANR	9867013	PtrMemberAccess	tif -> tif_rawcc		9866749	0					
ANR	9867014	Identifier	tif		9866749	0					
ANR	9867015	Identifier	tif_rawcc		9866749	1					
ANR	9867016	AdditiveExpression	tif -> tif_rawdatasize - occ		9866749	1		-			
ANR	9867017	PtrMemberAccess	tif -> tif_rawdatasize		9866749	0					
ANR	9867018	Identifier	tif		9866749	0					
ANR	9867019	Identifier	tif_rawdatasize		9866749	1					
ANR	9867020	Identifier	occ		9866749	1					
ANR	9867021	ReturnStatement	return ( 1 ) ;	580:1:17191:17201	9866749	17	True				
ANR	9867022	PrimaryExpression	1		9866749	0					
ANR	9867023	ReturnType	static int		9866749	1					
ANR	9867024	Identifier	LogLuvEncode24		9866749	2					
ANR	9867025	ParameterList	"TIFF * tif , uint8 * bp , tmsize_t cc , uint16 s"		9866749	3					
ANR	9867026	Parameter	TIFF * tif	535:15:16122:16130	9866749	0	True				
ANR	9867027	ParameterType	TIFF *		9866749	0					
ANR	9867028	Identifier	tif		9866749	1					
ANR	9867029	Parameter	uint8 * bp	535:26:16133:16141	9866749	1	True				
ANR	9867030	ParameterType	uint8 *		9866749	0					
ANR	9867031	Identifier	bp		9866749	1					
ANR	9867032	Parameter	tmsize_t cc	535:37:16144:16154	9866749	2	True				
ANR	9867033	ParameterType	tmsize_t		9866749	0					
ANR	9867034	Identifier	cc		9866749	1					
ANR	9867035	Parameter	uint16 s	535:50:16157:16164	9866749	3	True				
ANR	9867036	ParameterType	uint16		9866749	0					
ANR	9867037	Identifier	s		9866749	1					
ANR	9867038	CFGEntryNode	ENTRY		9866749		True				
ANR	9867039	CFGExitNode	EXIT		9866749		True				
ANR	9867040	Symbol	* sp		9866749						
ANR	9867041	Symbol	sp -> user_datafmt		9866749						
ANR	9867042	Symbol	SGILOGDATAFMT_RAW		9866749						
ANR	9867043	Symbol	bp		9866749						
ANR	9867044	Symbol	occ		9866749						
ANR	9867045	Symbol	tif		9866749						
ANR	9867046	Symbol	npixels		9866749						
ANR	9867047	Symbol	sp -> tbuflen		9866749						
ANR	9867048	Symbol	tif -> tif_rawcc		9866749						
ANR	9867049	Symbol	sp -> pixel_size		9866749						
ANR	9867050	Symbol	TIFFFlushData1		9866749						
ANR	9867051	Symbol	sp -> tbuf		9866749						
ANR	9867052	Symbol	sp -> tfunc		9866749						
ANR	9867053	Symbol	sp		9866749						
ANR	9867054	Symbol	cc		9866749						
ANR	9867055	Symbol	EncoderState		9866749						
ANR	9867056	Symbol	op		9866749						
ANR	9867057	Symbol	* tp		9866749						
ANR	9867058	Symbol	NULL		9866749						
ANR	9867059	Symbol	module		9866749						
ANR	9867060	Symbol	i		9866749						
ANR	9867061	Symbol	tif -> tif_rawcp		9866749						
ANR	9867062	Symbol	tif -> tif_clientdata		9866749						
ANR	9867063	Symbol	s		9866749						
ANR	9867064	Symbol	tif -> tif_rawdatasize		9866749						
ANR	9867065	Symbol	* tp ++		9866749						
ANR	9867066	Symbol	* op ++		9866749						
ANR	9867067	Symbol	* tif		9866749						
ANR	9867068	Symbol	tp		9866749						
ANR	9867069	Function	LogLuvEncode32	586:0:17247:19499							
ANR	9867070	FunctionDef	"LogLuvEncode32 (TIFF * tif , uint8 * bp , tmsize_t cc , uint16 s)"		9867069	0					
ANR	9867071	CompoundStatement		588:0:17318:19499	9867069	0					
ANR	9867072	Statement	static	589:1:17321:17326	9867069	0	True				
ANR	9867073	IdentifierDeclStatement	"const char module [ ] = ""LogLuvEncode32"" ;"	589:8:17328:17366	9867069	1	True				
ANR	9867074	IdentifierDecl	"module [ ] = ""LogLuvEncode32"""		9867069	0					
ANR	9867075	IdentifierDeclType	const char [ ]		9867069	0					
ANR	9867076	Identifier	module		9867069	1					
ANR	9867077	AssignmentExpression	"module [ ] = ""LogLuvEncode32"""		9867069	2		=			
ANR	9867078	Identifier	module		9867069	0					
ANR	9867079	PrimaryExpression	"""LogLuvEncode32"""		9867069	1					
ANR	9867080	IdentifierDeclStatement	LogLuvState * sp = EncoderState ( tif ) ;	590:1:17369:17404	9867069	2	True				
ANR	9867081	IdentifierDecl	* sp = EncoderState ( tif )		9867069	0					
ANR	9867082	IdentifierDeclType	LogLuvState *		9867069	0					
ANR	9867083	Identifier	sp		9867069	1					
ANR	9867084	AssignmentExpression	* sp = EncoderState ( tif )		9867069	2		=			
ANR	9867085	Identifier	sp		9867069	0					
ANR	9867086	CallExpression	EncoderState ( tif )		9867069	1					
ANR	9867087	Callee	EncoderState		9867069	0					
ANR	9867088	Identifier	EncoderState		9867069	0					
ANR	9867089	ArgumentList	tif		9867069	1					
ANR	9867090	Argument	tif		9867069	0					
ANR	9867091	Identifier	tif		9867069	0					
ANR	9867092	IdentifierDeclStatement	int shft ;	591:1:17407:17415	9867069	3	True				
ANR	9867093	IdentifierDecl	shft		9867069	0					
ANR	9867094	IdentifierDeclType	int		9867069	0					
ANR	9867095	Identifier	shft		9867069	1					
ANR	9867096	IdentifierDeclStatement	tmsize_t i ;	592:1:17418:17428	9867069	4	True				
ANR	9867097	IdentifierDecl	i		9867069	0					
ANR	9867098	IdentifierDeclType	tmsize_t		9867069	0					
ANR	9867099	Identifier	i		9867069	1					
ANR	9867100	IdentifierDeclStatement	tmsize_t j ;	593:1:17431:17441	9867069	5	True				
ANR	9867101	IdentifierDecl	j		9867069	0					
ANR	9867102	IdentifierDeclType	tmsize_t		9867069	0					
ANR	9867103	Identifier	j		9867069	1					
ANR	9867104	IdentifierDeclStatement	tmsize_t npixels ;	594:1:17444:17460	9867069	6	True				
ANR	9867105	IdentifierDecl	npixels		9867069	0					
ANR	9867106	IdentifierDeclType	tmsize_t		9867069	0					
ANR	9867107	Identifier	npixels		9867069	1					
ANR	9867108	IdentifierDeclStatement	uint8 * op ;	595:1:17463:17472	9867069	7	True				
ANR	9867109	IdentifierDecl	* op		9867069	0					
ANR	9867110	IdentifierDeclType	uint8 *		9867069	0					
ANR	9867111	Identifier	op		9867069	1					
ANR	9867112	IdentifierDeclStatement	uint32 * tp ;	596:1:17475:17485	9867069	8	True				
ANR	9867113	IdentifierDecl	* tp		9867069	0					
ANR	9867114	IdentifierDeclType	uint32 *		9867069	0					
ANR	9867115	Identifier	tp		9867069	1					
ANR	9867116	IdentifierDeclStatement	uint32 b ;	597:1:17488:17496	9867069	9	True				
ANR	9867117	IdentifierDecl	b		9867069	0					
ANR	9867118	IdentifierDeclType	uint32		9867069	0					
ANR	9867119	Identifier	b		9867069	1					
ANR	9867120	IdentifierDeclStatement	tmsize_t occ ;	598:1:17499:17511	9867069	10	True				
ANR	9867121	IdentifierDecl	occ		9867069	0					
ANR	9867122	IdentifierDeclType	tmsize_t		9867069	0					
ANR	9867123	Identifier	occ		9867069	1					
ANR	9867124	IdentifierDeclStatement	"int rc = 0 , mask ;"	599:1:17514:17528	9867069	11	True				
ANR	9867125	IdentifierDecl	rc = 0		9867069	0					
ANR	9867126	IdentifierDeclType	int		9867069	0					
ANR	9867127	Identifier	rc		9867069	1					
ANR	9867128	AssignmentExpression	rc = 0		9867069	2		=			
ANR	9867129	Identifier	rc		9867069	0					
ANR	9867130	PrimaryExpression	0		9867069	1					
ANR	9867131	IdentifierDecl	mask		9867069	1					
ANR	9867132	IdentifierDeclType	int		9867069	0					
ANR	9867133	Identifier	mask		9867069	1					
ANR	9867134	IdentifierDeclStatement	tmsize_t beg ;	600:1:17531:17543	9867069	12	True				
ANR	9867135	IdentifierDecl	beg		9867069	0					
ANR	9867136	IdentifierDeclType	tmsize_t		9867069	0					
ANR	9867137	Identifier	beg		9867069	1					
ANR	9867138	ExpressionStatement	assert ( s == 0 )	602:1:17547:17561	9867069	13	True				
ANR	9867139	CallExpression	assert ( s == 0 )		9867069	0					
ANR	9867140	Callee	assert		9867069	0					
ANR	9867141	Identifier	assert		9867069	0					
ANR	9867142	ArgumentList	s == 0		9867069	1					
ANR	9867143	Argument	s == 0		9867069	0					
ANR	9867144	EqualityExpression	s == 0		9867069	0		==			
ANR	9867145	Identifier	s		9867069	0					
ANR	9867146	PrimaryExpression	0		9867069	1					
ANR	9867147	ExpressionStatement	assert ( sp != NULL )	603:1:17564:17582	9867069	14	True				
ANR	9867148	CallExpression	assert ( sp != NULL )		9867069	0					
ANR	9867149	Callee	assert		9867069	0					
ANR	9867150	Identifier	assert		9867069	0					
ANR	9867151	ArgumentList	sp != NULL		9867069	1					
ANR	9867152	Argument	sp != NULL		9867069	0					
ANR	9867153	EqualityExpression	sp != NULL		9867069	0		!=			
ANR	9867154	Identifier	sp		9867069	0					
ANR	9867155	Identifier	NULL		9867069	1					
ANR	9867156	ExpressionStatement	npixels = cc / sp -> pixel_size	605:1:17586:17615	9867069	15	True				
ANR	9867157	AssignmentExpression	npixels = cc / sp -> pixel_size		9867069	0		=			
ANR	9867158	Identifier	npixels		9867069	0					
ANR	9867159	MultiplicativeExpression	cc / sp -> pixel_size		9867069	1		/			
ANR	9867160	Identifier	cc		9867069	0					
ANR	9867161	PtrMemberAccess	sp -> pixel_size		9867069	1					
ANR	9867162	Identifier	sp		9867069	0					
ANR	9867163	Identifier	pixel_size		9867069	1					
ANR	9867164	IfStatement	if ( sp -> user_datafmt == SGILOGDATAFMT_RAW )		9867069	16					
ANR	9867165	Condition	sp -> user_datafmt == SGILOGDATAFMT_RAW	607:5:17623:17659	9867069	0	True				
ANR	9867166	EqualityExpression	sp -> user_datafmt == SGILOGDATAFMT_RAW		9867069	0		==			
ANR	9867167	PtrMemberAccess	sp -> user_datafmt		9867069	0					
ANR	9867168	Identifier	sp		9867069	0					
ANR	9867169	Identifier	user_datafmt		9867069	1					
ANR	9867170	Identifier	SGILOGDATAFMT_RAW		9867069	1					
ANR	9867171	ExpressionStatement	tp = ( uint32 * ) bp	608:2:17664:17681	9867069	1	True				
ANR	9867172	AssignmentExpression	tp = ( uint32 * ) bp		9867069	0		=			
ANR	9867173	Identifier	tp		9867069	0					
ANR	9867174	CastExpression	( uint32 * ) bp		9867069	1					
ANR	9867175	CastTarget	uint32 *		9867069	0					
ANR	9867176	Identifier	bp		9867069	1					
ANR	9867177	ElseStatement	else		9867069	0					
ANR	9867178	CompoundStatement		22:6:370:370	9867069	0					
ANR	9867179	ExpressionStatement	tp = ( uint32 * ) sp -> tbuf	610:2:17693:17716	9867069	0	True				
ANR	9867180	AssignmentExpression	tp = ( uint32 * ) sp -> tbuf		9867069	0		=			
ANR	9867181	Identifier	tp		9867069	0					
ANR	9867182	CastExpression	( uint32 * ) sp -> tbuf		9867069	1					
ANR	9867183	CastTarget	uint32 *		9867069	0					
ANR	9867184	PtrMemberAccess	sp -> tbuf		9867069	1					
ANR	9867185	Identifier	sp		9867069	0					
ANR	9867186	Identifier	tbuf		9867069	1					
ANR	9867187	IfStatement	if ( sp -> tbuflen < npixels )		9867069	1					
ANR	9867188	Condition	sp -> tbuflen < npixels	611:5:17723:17743	9867069	0	True				
ANR	9867189	RelationalExpression	sp -> tbuflen < npixels		9867069	0		<			
ANR	9867190	PtrMemberAccess	sp -> tbuflen		9867069	0					
ANR	9867191	Identifier	sp		9867069	0					
ANR	9867192	Identifier	tbuflen		9867069	1					
ANR	9867193	Identifier	npixels		9867069	1					
ANR	9867194	CompoundStatement		24:28:427:427	9867069	1					
ANR	9867195	ExpressionStatement	"TIFFErrorExt ( tif -> tif_clientdata , module , ""Translation buffer too short"" )"	612:3:17751:17831	9867069	0	True				
ANR	9867196	CallExpression	"TIFFErrorExt ( tif -> tif_clientdata , module , ""Translation buffer too short"" )"		9867069	0					
ANR	9867197	Callee	TIFFErrorExt		9867069	0					
ANR	9867198	Identifier	TIFFErrorExt		9867069	0					
ANR	9867199	ArgumentList	tif -> tif_clientdata		9867069	1					
ANR	9867200	Argument	tif -> tif_clientdata		9867069	0					
ANR	9867201	PtrMemberAccess	tif -> tif_clientdata		9867069	0					
ANR	9867202	Identifier	tif		9867069	0					
ANR	9867203	Identifier	tif_clientdata		9867069	1					
ANR	9867204	Argument	module		9867069	1					
ANR	9867205	Identifier	module		9867069	0					
ANR	9867206	Argument	"""Translation buffer too short"""		9867069	2					
ANR	9867207	PrimaryExpression	"""Translation buffer too short"""		9867069	0					
ANR	9867208	ReturnStatement	return ( 0 ) ;	614:3:17836:17846	9867069	1	True				
ANR	9867209	PrimaryExpression	0		9867069	0					
ANR	9867210	ExpressionStatement	"( * sp -> tfunc ) ( sp , bp , npixels )"	616:2:17854:17883	9867069	2	True				
ANR	9867211	CallExpression	"( * sp -> tfunc ) ( sp , bp , npixels )"		9867069	0					
ANR	9867212	Callee	* sp -> tfunc		9867069	0					
ANR	9867213	UnaryOperationExpression	* sp -> tfunc		9867069	0					
ANR	9867214	UnaryOperator	*		9867069	0					
ANR	9867215	PtrMemberAccess	sp -> tfunc		9867069	1					
ANR	9867216	Identifier	sp		9867069	0					
ANR	9867217	Identifier	tfunc		9867069	1					
ANR	9867218	ArgumentList	sp		9867069	1					
ANR	9867219	Argument	sp		9867069	0					
ANR	9867220	Identifier	sp		9867069	0					
ANR	9867221	Argument	bp		9867069	1					
ANR	9867222	Identifier	bp		9867069	0					
ANR	9867223	Argument	npixels		9867069	2					
ANR	9867224	Identifier	npixels		9867069	0					
ANR	9867225	ExpressionStatement	op = tif -> tif_rawcp	619:1:17922:17941	9867069	17	True				
ANR	9867226	AssignmentExpression	op = tif -> tif_rawcp		9867069	0		=			
ANR	9867227	Identifier	op		9867069	0					
ANR	9867228	PtrMemberAccess	tif -> tif_rawcp		9867069	1					
ANR	9867229	Identifier	tif		9867069	0					
ANR	9867230	Identifier	tif_rawcp		9867069	1					
ANR	9867231	ExpressionStatement	occ = tif -> tif_rawdatasize - tif -> tif_rawcc	620:1:17944:17987	9867069	18	True				
ANR	9867232	AssignmentExpression	occ = tif -> tif_rawdatasize - tif -> tif_rawcc		9867069	0		=			
ANR	9867233	Identifier	occ		9867069	0					
ANR	9867234	AdditiveExpression	tif -> tif_rawdatasize - tif -> tif_rawcc		9867069	1		-			
ANR	9867235	PtrMemberAccess	tif -> tif_rawdatasize		9867069	0					
ANR	9867236	Identifier	tif		9867069	0					
ANR	9867237	Identifier	tif_rawdatasize		9867069	1					
ANR	9867238	PtrMemberAccess	tif -> tif_rawcc		9867069	1					
ANR	9867239	Identifier	tif		9867069	0					
ANR	9867240	Identifier	tif_rawcc		9867069	1					
ANR	9867241	ForStatement	for ( shft = 4 * 8 ; ( shft -= 8 ) >= 0 ; )		9867069	19					
ANR	9867242	ForInit	shft = 4 * 8 ;	621:6:17995:18005	9867069	0	True				
ANR	9867243	AssignmentExpression	shft = 4 * 8		9867069	0		=			
ANR	9867244	Identifier	shft		9867069	0					
ANR	9867245	MultiplicativeExpression	4 * 8		9867069	1		*			
ANR	9867246	PrimaryExpression	4		9867069	0					
ANR	9867247	PrimaryExpression	8		9867069	1					
ANR	9867248	Condition	( shft -= 8 ) >= 0	621:18:18007:18022	9867069	1	True				
ANR	9867249	RelationalExpression	( shft -= 8 ) >= 0		9867069	0		>=			
ANR	9867250	AssignmentExpression	shft -= 8		9867069	0		-=			
ANR	9867251	Identifier	shft		9867069	0					
ANR	9867252	PrimaryExpression	8		9867069	1					
ANR	9867253	PrimaryExpression	0		9867069	1					
ANR	9867254	ForStatement	for ( i = 0 ; i < npixels ; i += rc )		9867069	2					
ANR	9867255	ForInit	i = 0 ;	622:7:18034:18039	9867069	0	True				
ANR	9867256	AssignmentExpression	i = 0		9867069	0		=			
ANR	9867257	Identifier	i		9867069	0					
ANR	9867258	PrimaryExpression	0		9867069	1					
ANR	9867259	Condition	i < npixels	622:14:18041:18051	9867069	1	True				
ANR	9867260	RelationalExpression	i < npixels		9867069	0		<			
ANR	9867261	Identifier	i		9867069	0					
ANR	9867262	Identifier	npixels		9867069	1					
ANR	9867263	AssignmentExpression	i += rc	622:27:18054:18060	9867069	2	True	+=			
ANR	9867264	Identifier	i		9867069	0					
ANR	9867265	Identifier	rc		9867069	1					
ANR	9867266	CompoundStatement		35:36:744:744	9867069	3					
ANR	9867267	IfStatement	if ( occ < 4 )		9867069	0					
ANR	9867268	Condition	occ < 4	623:7:18072:18078	9867069	0	True				
ANR	9867269	RelationalExpression	occ < 4		9867069	0		<			
ANR	9867270	Identifier	occ		9867069	0					
ANR	9867271	PrimaryExpression	4		9867069	1					
ANR	9867272	CompoundStatement		36:16:762:762	9867069	1					
ANR	9867273	ExpressionStatement	tif -> tif_rawcp = op	624:4:18087:18106	9867069	0	True				
ANR	9867274	AssignmentExpression	tif -> tif_rawcp = op		9867069	0		=			
ANR	9867275	PtrMemberAccess	tif -> tif_rawcp		9867069	0					
ANR	9867276	Identifier	tif		9867069	0					
ANR	9867277	Identifier	tif_rawcp		9867069	1					
ANR	9867278	Identifier	op		9867069	1					
ANR	9867279	ExpressionStatement	tif -> tif_rawcc = tif -> tif_rawdatasize - occ	625:4:18112:18155	9867069	1	True				
ANR	9867280	AssignmentExpression	tif -> tif_rawcc = tif -> tif_rawdatasize - occ		9867069	0		=			
ANR	9867281	PtrMemberAccess	tif -> tif_rawcc		9867069	0					
ANR	9867282	Identifier	tif		9867069	0					
ANR	9867283	Identifier	tif_rawcc		9867069	1					
ANR	9867284	AdditiveExpression	tif -> tif_rawdatasize - occ		9867069	1		-			
ANR	9867285	PtrMemberAccess	tif -> tif_rawdatasize		9867069	0					
ANR	9867286	Identifier	tif		9867069	0					
ANR	9867287	Identifier	tif_rawdatasize		9867069	1					
ANR	9867288	Identifier	occ		9867069	1					
ANR	9867289	IfStatement	if ( ! TIFFFlushData1 ( tif ) )		9867069	2					
ANR	9867290	Condition	! TIFFFlushData1 ( tif )	626:8:18165:18184	9867069	0	True				
ANR	9867291	UnaryOperationExpression	! TIFFFlushData1 ( tif )		9867069	0					
ANR	9867292	UnaryOperator	!		9867069	0					
ANR	9867293	CallExpression	TIFFFlushData1 ( tif )		9867069	1					
ANR	9867294	Callee	TIFFFlushData1		9867069	0					
ANR	9867295	Identifier	TIFFFlushData1		9867069	0					
ANR	9867296	ArgumentList	tif		9867069	1					
ANR	9867297	Argument	tif		9867069	0					
ANR	9867298	Identifier	tif		9867069	0					
ANR	9867299	ReturnStatement	return ( 0 ) ;	627:5:18192:18202	9867069	1	True				
ANR	9867300	PrimaryExpression	0		9867069	0					
ANR	9867301	ExpressionStatement	op = tif -> tif_rawcp	628:4:18208:18227	9867069	3	True				
ANR	9867302	AssignmentExpression	op = tif -> tif_rawcp		9867069	0		=			
ANR	9867303	Identifier	op		9867069	0					
ANR	9867304	PtrMemberAccess	tif -> tif_rawcp		9867069	1					
ANR	9867305	Identifier	tif		9867069	0					
ANR	9867306	Identifier	tif_rawcp		9867069	1					
ANR	9867307	ExpressionStatement	occ = tif -> tif_rawdatasize - tif -> tif_rawcc	629:4:18233:18276	9867069	4	True				
ANR	9867308	AssignmentExpression	occ = tif -> tif_rawdatasize - tif -> tif_rawcc		9867069	0		=			
ANR	9867309	Identifier	occ		9867069	0					
ANR	9867310	AdditiveExpression	tif -> tif_rawdatasize - tif -> tif_rawcc		9867069	1		-			
ANR	9867311	PtrMemberAccess	tif -> tif_rawdatasize		9867069	0					
ANR	9867312	Identifier	tif		9867069	0					
ANR	9867313	Identifier	tif_rawdatasize		9867069	1					
ANR	9867314	PtrMemberAccess	tif -> tif_rawcc		9867069	1					
ANR	9867315	Identifier	tif		9867069	0					
ANR	9867316	Identifier	tif_rawcc		9867069	1					
ANR	9867317	ExpressionStatement	mask = 0xff << shft	631:3:18286:18305	9867069	1	True				
ANR	9867318	AssignmentExpression	mask = 0xff << shft		9867069	0		=			
ANR	9867319	Identifier	mask		9867069	0					
ANR	9867320	ShiftExpression	0xff << shft		9867069	1		<<			
ANR	9867321	PrimaryExpression	0xff		9867069	0					
ANR	9867322	Identifier	shft		9867069	1					
ANR	9867323	ForStatement	for ( beg = i ; beg < npixels ; beg += rc )		9867069	2					
ANR	9867324	ForInit	beg = i ;	632:8:18336:18343	9867069	0	True				
ANR	9867325	AssignmentExpression	beg = i		9867069	0		=			
ANR	9867326	Identifier	beg		9867069	0					
ANR	9867327	Identifier	i		9867069	1					
ANR	9867328	Condition	beg < npixels	632:17:18345:18357	9867069	1	True				
ANR	9867329	RelationalExpression	beg < npixels		9867069	0		<			
ANR	9867330	Identifier	beg		9867069	0					
ANR	9867331	Identifier	npixels		9867069	1					
ANR	9867332	AssignmentExpression	beg += rc	632:32:18360:18368	9867069	2	True	+=			
ANR	9867333	Identifier	beg		9867069	0					
ANR	9867334	Identifier	rc		9867069	1					
ANR	9867335	CompoundStatement		45:43:1052:1052	9867069	3					
ANR	9867336	ExpressionStatement	b = tp [ beg ] & mask	633:4:18377:18395	9867069	0	True				
ANR	9867337	AssignmentExpression	b = tp [ beg ] & mask		9867069	0		=			
ANR	9867338	Identifier	b		9867069	0					
ANR	9867339	BitAndExpression	tp [ beg ] & mask		9867069	1		&			
ANR	9867340	ArrayIndexing	tp [ beg ]		9867069	0					
ANR	9867341	Identifier	tp		9867069	0					
ANR	9867342	Identifier	beg		9867069	1					
ANR	9867343	Identifier	mask		9867069	1					
ANR	9867344	ExpressionStatement	rc = 1	634:4:18401:18407	9867069	1	True				
ANR	9867345	AssignmentExpression	rc = 1		9867069	0		=			
ANR	9867346	Identifier	rc		9867069	0					
ANR	9867347	PrimaryExpression	1		9867069	1					
ANR	9867348	WhileStatement	while ( rc < 127 + 2 && beg + rc < npixels && ( tp [ beg + rc ] & mask ) == b )		9867069	2					
ANR	9867349	Condition	rc < 127 + 2 && beg + rc < npixels && ( tp [ beg + rc ] & mask ) == b	635:11:18420:18483	9867069	0	True				
ANR	9867350	AndExpression	rc < 127 + 2 && beg + rc < npixels && ( tp [ beg + rc ] & mask ) == b		9867069	0		&&			
ANR	9867351	RelationalExpression	rc < 127 + 2		9867069	0		<			
ANR	9867352	Identifier	rc		9867069	0					
ANR	9867353	AdditiveExpression	127 + 2		9867069	1		+			
ANR	9867354	PrimaryExpression	127		9867069	0					
ANR	9867355	PrimaryExpression	2		9867069	1					
ANR	9867356	AndExpression	beg + rc < npixels && ( tp [ beg + rc ] & mask ) == b		9867069	1		&&			
ANR	9867357	RelationalExpression	beg + rc < npixels		9867069	0		<			
ANR	9867358	AdditiveExpression	beg + rc		9867069	0		+			
ANR	9867359	Identifier	beg		9867069	0					
ANR	9867360	Identifier	rc		9867069	1					
ANR	9867361	Identifier	npixels		9867069	1					
ANR	9867362	EqualityExpression	( tp [ beg + rc ] & mask ) == b		9867069	1		==			
ANR	9867363	BitAndExpression	tp [ beg + rc ] & mask		9867069	0		&			
ANR	9867364	ArrayIndexing	tp [ beg + rc ]		9867069	0					
ANR	9867365	Identifier	tp		9867069	0					
ANR	9867366	AdditiveExpression	beg + rc		9867069	1		+			
ANR	9867367	Identifier	beg		9867069	0					
ANR	9867368	Identifier	rc		9867069	1					
ANR	9867369	Identifier	mask		9867069	1					
ANR	9867370	Identifier	b		9867069	1					
ANR	9867371	ExpressionStatement	rc ++	637:5:18491:18495	9867069	1	True				
ANR	9867372	PostIncDecOperationExpression	rc ++		9867069	0					
ANR	9867373	Identifier	rc		9867069	0					
ANR	9867374	IncDec	++		9867069	1					
ANR	9867375	IfStatement	if ( rc >= MINRUN )		9867069	3					
ANR	9867376	Condition	rc >= MINRUN	638:8:18505:18516	9867069	0	True				
ANR	9867377	RelationalExpression	rc >= MINRUN		9867069	0		>=			
ANR	9867378	Identifier	rc		9867069	0					
ANR	9867379	Identifier	MINRUN		9867069	1					
ANR	9867380	BreakStatement	break ;	639:5:18524:18529	9867069	1	True				
ANR	9867381	IfStatement	if ( beg - i > 1 && beg - i < MINRUN )		9867069	3					
ANR	9867382	Condition	beg - i > 1 && beg - i < MINRUN	641:7:18562:18588	9867069	0	True				
ANR	9867383	AndExpression	beg - i > 1 && beg - i < MINRUN		9867069	0		&&			
ANR	9867384	RelationalExpression	beg - i > 1		9867069	0		>			
ANR	9867385	AdditiveExpression	beg - i		9867069	0		-			
ANR	9867386	Identifier	beg		9867069	0					
ANR	9867387	Identifier	i		9867069	1					
ANR	9867388	PrimaryExpression	1		9867069	1					
ANR	9867389	RelationalExpression	beg - i < MINRUN		9867069	1		<			
ANR	9867390	AdditiveExpression	beg - i		9867069	0		-			
ANR	9867391	Identifier	beg		9867069	0					
ANR	9867392	Identifier	i		9867069	1					
ANR	9867393	Identifier	MINRUN		9867069	1					
ANR	9867394	CompoundStatement		54:36:1272:1272	9867069	1					
ANR	9867395	ExpressionStatement	b = tp [ i ] & mask	642:4:18597:18613	9867069	0	True				
ANR	9867396	AssignmentExpression	b = tp [ i ] & mask		9867069	0		=			
ANR	9867397	Identifier	b		9867069	0					
ANR	9867398	BitAndExpression	tp [ i ] & mask		9867069	1		&			
ANR	9867399	ArrayIndexing	tp [ i ]		9867069	0					
ANR	9867400	Identifier	tp		9867069	0					
ANR	9867401	Identifier	i		9867069	1					
ANR	9867402	Identifier	mask		9867069	1					
ANR	9867403	ExpressionStatement	j = i + 1	643:4:18641:18648	9867069	1	True				
ANR	9867404	AssignmentExpression	j = i + 1		9867069	0		=			
ANR	9867405	Identifier	j		9867069	0					
ANR	9867406	AdditiveExpression	i + 1		9867069	1		+			
ANR	9867407	Identifier	i		9867069	0					
ANR	9867408	PrimaryExpression	1		9867069	1					
ANR	9867409	WhileStatement	while ( ( tp [ j ++ ] & mask ) == b )		9867069	2					
ANR	9867410	Condition	( tp [ j ++ ] & mask ) == b	644:11:18661:18681	9867069	0	True				
ANR	9867411	EqualityExpression	( tp [ j ++ ] & mask ) == b		9867069	0		==			
ANR	9867412	BitAndExpression	tp [ j ++ ] & mask		9867069	0		&			
ANR	9867413	ArrayIndexing	tp [ j ++ ]		9867069	0					
ANR	9867414	Identifier	tp		9867069	0					
ANR	9867415	PostIncDecOperationExpression	j ++		9867069	1					
ANR	9867416	Identifier	j		9867069	0					
ANR	9867417	IncDec	++		9867069	1					
ANR	9867418	Identifier	mask		9867069	1					
ANR	9867419	Identifier	b		9867069	1					
ANR	9867420	IfStatement	if ( j == beg )		9867069	1					
ANR	9867421	Condition	j == beg	645:9:18693:18700	9867069	0	True				
ANR	9867422	EqualityExpression	j == beg		9867069	0		==			
ANR	9867423	Identifier	j		9867069	0					
ANR	9867424	Identifier	beg		9867069	1					
ANR	9867425	CompoundStatement		58:19:1384:1384	9867069	1					
ANR	9867426	ExpressionStatement	* op ++ = ( uint8 ) ( 128 - 2 + j - i )	646:6:18711:18737	9867069	0	True				
ANR	9867427	AssignmentExpression	* op ++ = ( uint8 ) ( 128 - 2 + j - i )		9867069	0		=			
ANR	9867428	UnaryOperationExpression	* op ++		9867069	0					
ANR	9867429	UnaryOperator	*		9867069	0					
ANR	9867430	PostIncDecOperationExpression	op ++		9867069	1					
ANR	9867431	Identifier	op		9867069	0					
ANR	9867432	IncDec	++		9867069	1					
ANR	9867433	CastExpression	( uint8 ) ( 128 - 2 + j - i )		9867069	1					
ANR	9867434	CastTarget	uint8		9867069	0					
ANR	9867435	AdditiveExpression	128 - 2 + j - i		9867069	1		-			
ANR	9867436	PrimaryExpression	128		9867069	0					
ANR	9867437	AdditiveExpression	2 + j - i		9867069	1		+			
ANR	9867438	PrimaryExpression	2		9867069	0					
ANR	9867439	AdditiveExpression	j - i		9867069	1		-			
ANR	9867440	Identifier	j		9867069	0					
ANR	9867441	Identifier	i		9867069	1					
ANR	9867442	ExpressionStatement	* op ++ = ( uint8 ) ( b >> shft )	647:6:18745:18771	9867069	1	True				
ANR	9867443	AssignmentExpression	* op ++ = ( uint8 ) ( b >> shft )		9867069	0		=			
ANR	9867444	UnaryOperationExpression	* op ++		9867069	0					
ANR	9867445	UnaryOperator	*		9867069	0					
ANR	9867446	PostIncDecOperationExpression	op ++		9867069	1					
ANR	9867447	Identifier	op		9867069	0					
ANR	9867448	IncDec	++		9867069	1					
ANR	9867449	CastExpression	( uint8 ) ( b >> shft )		9867069	1					
ANR	9867450	CastTarget	uint8		9867069	0					
ANR	9867451	ShiftExpression	b >> shft		9867069	1		>>			
ANR	9867452	Identifier	b		9867069	0					
ANR	9867453	Identifier	shft		9867069	1					
ANR	9867454	ExpressionStatement	occ -= 2	648:6:18779:18787	9867069	2	True				
ANR	9867455	AssignmentExpression	occ -= 2		9867069	0		-=			
ANR	9867456	Identifier	occ		9867069	0					
ANR	9867457	PrimaryExpression	2		9867069	1					
ANR	9867458	ExpressionStatement	i = beg	649:6:18795:18802	9867069	3	True				
ANR	9867459	AssignmentExpression	i = beg		9867069	0		=			
ANR	9867460	Identifier	i		9867069	0					
ANR	9867461	Identifier	beg		9867069	1					
ANR	9867462	BreakStatement	break ;	650:6:18810:18815	9867069	4	True				
ANR	9867463	WhileStatement	while ( i < beg )		9867069	4					
ANR	9867464	Condition	i < beg	653:10:18839:18845	9867069	0	True				
ANR	9867465	RelationalExpression	i < beg		9867069	0		<			
ANR	9867466	Identifier	i		9867069	0					
ANR	9867467	Identifier	beg		9867069	1					
ANR	9867468	CompoundStatement		66:19:1529:1529	9867069	1					
ANR	9867469	IfStatement	if ( ( j = beg - i ) > 127 )		9867069	0					
ANR	9867470	Condition	( j = beg - i ) > 127	654:8:18883:18899	9867069	0	True				
ANR	9867471	RelationalExpression	( j = beg - i ) > 127		9867069	0		>			
ANR	9867472	AssignmentExpression	j = beg - i		9867069	0		=			
ANR	9867473	Identifier	j		9867069	0					
ANR	9867474	AdditiveExpression	beg - i		9867069	1		-			
ANR	9867475	Identifier	beg		9867069	0					
ANR	9867476	Identifier	i		9867069	1					
ANR	9867477	PrimaryExpression	127		9867069	1					
ANR	9867478	ExpressionStatement	j = 127	654:27:18902:18909	9867069	1	True				
ANR	9867479	AssignmentExpression	j = 127		9867069	0		=			
ANR	9867480	Identifier	j		9867069	0					
ANR	9867481	PrimaryExpression	127		9867069	1					
ANR	9867482	IfStatement	if ( occ < j + 3 )		9867069	1					
ANR	9867483	Condition	occ < j + 3	655:8:18919:18927	9867069	0	True				
ANR	9867484	RelationalExpression	occ < j + 3		9867069	0		<			
ANR	9867485	Identifier	occ		9867069	0					
ANR	9867486	AdditiveExpression	j + 3		9867069	1		+			
ANR	9867487	Identifier	j		9867069	0					
ANR	9867488	PrimaryExpression	3		9867069	1					
ANR	9867489	CompoundStatement		68:19:1611:1611	9867069	1					
ANR	9867490	ExpressionStatement	tif -> tif_rawcp = op	656:5:18937:18956	9867069	0	True				
ANR	9867491	AssignmentExpression	tif -> tif_rawcp = op		9867069	0		=			
ANR	9867492	PtrMemberAccess	tif -> tif_rawcp		9867069	0					
ANR	9867493	Identifier	tif		9867069	0					
ANR	9867494	Identifier	tif_rawcp		9867069	1					
ANR	9867495	Identifier	op		9867069	1					
ANR	9867496	ExpressionStatement	tif -> tif_rawcc = tif -> tif_rawdatasize - occ	657:5:18963:19006	9867069	1	True				
ANR	9867497	AssignmentExpression	tif -> tif_rawcc = tif -> tif_rawdatasize - occ		9867069	0		=			
ANR	9867498	PtrMemberAccess	tif -> tif_rawcc		9867069	0					
ANR	9867499	Identifier	tif		9867069	0					
ANR	9867500	Identifier	tif_rawcc		9867069	1					
ANR	9867501	AdditiveExpression	tif -> tif_rawdatasize - occ		9867069	1		-			
ANR	9867502	PtrMemberAccess	tif -> tif_rawdatasize		9867069	0					
ANR	9867503	Identifier	tif		9867069	0					
ANR	9867504	Identifier	tif_rawdatasize		9867069	1					
ANR	9867505	Identifier	occ		9867069	1					
ANR	9867506	IfStatement	if ( ! TIFFFlushData1 ( tif ) )		9867069	2					
ANR	9867507	Condition	! TIFFFlushData1 ( tif )	658:9:19017:19036	9867069	0	True				
ANR	9867508	UnaryOperationExpression	! TIFFFlushData1 ( tif )		9867069	0					
ANR	9867509	UnaryOperator	!		9867069	0					
ANR	9867510	CallExpression	TIFFFlushData1 ( tif )		9867069	1					
ANR	9867511	Callee	TIFFFlushData1		9867069	0					
ANR	9867512	Identifier	TIFFFlushData1		9867069	0					
ANR	9867513	ArgumentList	tif		9867069	1					
ANR	9867514	Argument	tif		9867069	0					
ANR	9867515	Identifier	tif		9867069	0					
ANR	9867516	ReturnStatement	return ( 0 ) ;	659:6:19045:19055	9867069	1	True				
ANR	9867517	PrimaryExpression	0		9867069	0					
ANR	9867518	ExpressionStatement	op = tif -> tif_rawcp	660:5:19062:19081	9867069	3	True				
ANR	9867519	AssignmentExpression	op = tif -> tif_rawcp		9867069	0		=			
ANR	9867520	Identifier	op		9867069	0					
ANR	9867521	PtrMemberAccess	tif -> tif_rawcp		9867069	1					
ANR	9867522	Identifier	tif		9867069	0					
ANR	9867523	Identifier	tif_rawcp		9867069	1					
ANR	9867524	ExpressionStatement	occ = tif -> tif_rawdatasize - tif -> tif_rawcc	661:5:19088:19131	9867069	4	True				
ANR	9867525	AssignmentExpression	occ = tif -> tif_rawdatasize - tif -> tif_rawcc		9867069	0		=			
ANR	9867526	Identifier	occ		9867069	0					
ANR	9867527	AdditiveExpression	tif -> tif_rawdatasize - tif -> tif_rawcc		9867069	1		-			
ANR	9867528	PtrMemberAccess	tif -> tif_rawdatasize		9867069	0					
ANR	9867529	Identifier	tif		9867069	0					
ANR	9867530	Identifier	tif_rawdatasize		9867069	1					
ANR	9867531	PtrMemberAccess	tif -> tif_rawcc		9867069	1					
ANR	9867532	Identifier	tif		9867069	0					
ANR	9867533	Identifier	tif_rawcc		9867069	1					
ANR	9867534	ExpressionStatement	* op ++ = ( uint8 ) j	663:4:19143:19160	9867069	2	True				
ANR	9867535	AssignmentExpression	* op ++ = ( uint8 ) j		9867069	0		=			
ANR	9867536	UnaryOperationExpression	* op ++		9867069	0					
ANR	9867537	UnaryOperator	*		9867069	0					
ANR	9867538	PostIncDecOperationExpression	op ++		9867069	1					
ANR	9867539	Identifier	op		9867069	0					
ANR	9867540	IncDec	++		9867069	1					
ANR	9867541	CastExpression	( uint8 ) j		9867069	1					
ANR	9867542	CastTarget	uint8		9867069	0					
ANR	9867543	Identifier	j		9867069	1					
ANR	9867544	ExpressionStatement	occ --	663:23:19162:19167	9867069	3	True				
ANR	9867545	PostIncDecOperationExpression	occ --		9867069	0					
ANR	9867546	Identifier	occ		9867069	0					
ANR	9867547	IncDec	--		9867069	1					
ANR	9867548	WhileStatement	while ( j -- )		9867069	4					
ANR	9867549	Condition	j --	664:11:19180:19182	9867069	0	True				
ANR	9867550	PostIncDecOperationExpression	j --		9867069	0					
ANR	9867551	Identifier	j		9867069	0					
ANR	9867552	IncDec	--		9867069	1					
ANR	9867553	CompoundStatement		77:16:1866:1866	9867069	1					
ANR	9867554	ExpressionStatement	* op ++ = ( uint8 ) ( tp [ i ++ ] >> shft & 0xff )	665:5:19192:19231	9867069	0	True				
ANR	9867555	AssignmentExpression	* op ++ = ( uint8 ) ( tp [ i ++ ] >> shft & 0xff )		9867069	0		=			
ANR	9867556	UnaryOperationExpression	* op ++		9867069	0					
ANR	9867557	UnaryOperator	*		9867069	0					
ANR	9867558	PostIncDecOperationExpression	op ++		9867069	1					
ANR	9867559	Identifier	op		9867069	0					
ANR	9867560	IncDec	++		9867069	1					
ANR	9867561	CastExpression	( uint8 ) ( tp [ i ++ ] >> shft & 0xff )		9867069	1					
ANR	9867562	CastTarget	uint8		9867069	0					
ANR	9867563	BitAndExpression	tp [ i ++ ] >> shft & 0xff		9867069	1		&			
ANR	9867564	ShiftExpression	tp [ i ++ ] >> shft		9867069	0		>>			
ANR	9867565	ArrayIndexing	tp [ i ++ ]		9867069	0					
ANR	9867566	Identifier	tp		9867069	0					
ANR	9867567	PostIncDecOperationExpression	i ++		9867069	1					
ANR	9867568	Identifier	i		9867069	0					
ANR	9867569	IncDec	++		9867069	1					
ANR	9867570	Identifier	shft		9867069	1					
ANR	9867571	PrimaryExpression	0xff		9867069	1					
ANR	9867572	ExpressionStatement	occ --	666:5:19238:19243	9867069	1	True				
ANR	9867573	PostIncDecOperationExpression	occ --		9867069	0					
ANR	9867574	Identifier	occ		9867069	0					
ANR	9867575	IncDec	--		9867069	1					
ANR	9867576	IfStatement	if ( rc >= MINRUN )		9867069	5					
ANR	9867577	Condition	rc >= MINRUN	669:7:19263:19274	9867069	0	True				
ANR	9867578	RelationalExpression	rc >= MINRUN		9867069	0		>=			
ANR	9867579	Identifier	rc		9867069	0					
ANR	9867580	Identifier	MINRUN		9867069	1					
ANR	9867581	CompoundStatement		82:21:1958:1958	9867069	1					
ANR	9867582	ExpressionStatement	* op ++ = ( uint8 ) ( 128 - 2 + rc )	670:4:19304:19330	9867069	0	True				
ANR	9867583	AssignmentExpression	* op ++ = ( uint8 ) ( 128 - 2 + rc )		9867069	0		=			
ANR	9867584	UnaryOperationExpression	* op ++		9867069	0					
ANR	9867585	UnaryOperator	*		9867069	0					
ANR	9867586	PostIncDecOperationExpression	op ++		9867069	1					
ANR	9867587	Identifier	op		9867069	0					
ANR	9867588	IncDec	++		9867069	1					
ANR	9867589	CastExpression	( uint8 ) ( 128 - 2 + rc )		9867069	1					
ANR	9867590	CastTarget	uint8		9867069	0					
ANR	9867591	AdditiveExpression	128 - 2 + rc		9867069	1		-			
ANR	9867592	PrimaryExpression	128		9867069	0					
ANR	9867593	AdditiveExpression	2 + rc		9867069	1		+			
ANR	9867594	PrimaryExpression	2		9867069	0					
ANR	9867595	Identifier	rc		9867069	1					
ANR	9867596	ExpressionStatement	* op ++ = ( uint8 ) ( tp [ beg ] >> shft & 0xff )	671:4:19336:19375	9867069	1	True				
ANR	9867597	AssignmentExpression	* op ++ = ( uint8 ) ( tp [ beg ] >> shft & 0xff )		9867069	0		=			
ANR	9867598	UnaryOperationExpression	* op ++		9867069	0					
ANR	9867599	UnaryOperator	*		9867069	0					
ANR	9867600	PostIncDecOperationExpression	op ++		9867069	1					
ANR	9867601	Identifier	op		9867069	0					
ANR	9867602	IncDec	++		9867069	1					
ANR	9867603	CastExpression	( uint8 ) ( tp [ beg ] >> shft & 0xff )		9867069	1					
ANR	9867604	CastTarget	uint8		9867069	0					
ANR	9867605	BitAndExpression	tp [ beg ] >> shft & 0xff		9867069	1		&			
ANR	9867606	ShiftExpression	tp [ beg ] >> shft		9867069	0		>>			
ANR	9867607	ArrayIndexing	tp [ beg ]		9867069	0					
ANR	9867608	Identifier	tp		9867069	0					
ANR	9867609	Identifier	beg		9867069	1					
ANR	9867610	Identifier	shft		9867069	1					
ANR	9867611	PrimaryExpression	0xff		9867069	1					
ANR	9867612	ExpressionStatement	occ -= 2	672:4:19381:19389	9867069	2	True				
ANR	9867613	AssignmentExpression	occ -= 2		9867069	0		-=			
ANR	9867614	Identifier	occ		9867069	0					
ANR	9867615	PrimaryExpression	2		9867069	1					
ANR	9867616	ElseStatement	else		9867069	0					
ANR	9867617	ExpressionStatement	rc = 0	674:4:19405:19411	9867069	0	True				
ANR	9867618	AssignmentExpression	rc = 0		9867069	0		=			
ANR	9867619	Identifier	rc		9867069	0					
ANR	9867620	PrimaryExpression	0		9867069	1					
ANR	9867621	ExpressionStatement	tif -> tif_rawcp = op	676:1:19418:19437	9867069	20	True				
ANR	9867622	AssignmentExpression	tif -> tif_rawcp = op		9867069	0		=			
ANR	9867623	PtrMemberAccess	tif -> tif_rawcp		9867069	0					
ANR	9867624	Identifier	tif		9867069	0					
ANR	9867625	Identifier	tif_rawcp		9867069	1					
ANR	9867626	Identifier	op		9867069	1					
ANR	9867627	ExpressionStatement	tif -> tif_rawcc = tif -> tif_rawdatasize - occ	677:1:19440:19483	9867069	21	True				
ANR	9867628	AssignmentExpression	tif -> tif_rawcc = tif -> tif_rawdatasize - occ		9867069	0		=			
ANR	9867629	PtrMemberAccess	tif -> tif_rawcc		9867069	0					
ANR	9867630	Identifier	tif		9867069	0					
ANR	9867631	Identifier	tif_rawcc		9867069	1					
ANR	9867632	AdditiveExpression	tif -> tif_rawdatasize - occ		9867069	1		-			
ANR	9867633	PtrMemberAccess	tif -> tif_rawdatasize		9867069	0					
ANR	9867634	Identifier	tif		9867069	0					
ANR	9867635	Identifier	tif_rawdatasize		9867069	1					
ANR	9867636	Identifier	occ		9867069	1					
ANR	9867637	ReturnStatement	return ( 1 ) ;	679:1:19487:19497	9867069	22	True				
ANR	9867638	PrimaryExpression	1		9867069	0					
ANR	9867639	ReturnType	static int		9867069	1					
ANR	9867640	Identifier	LogLuvEncode32		9867069	2					
ANR	9867641	ParameterList	"TIFF * tif , uint8 * bp , tmsize_t cc , uint16 s"		9867069	3					
ANR	9867642	Parameter	TIFF * tif	587:15:17273:17281	9867069	0	True				
ANR	9867643	ParameterType	TIFF *		9867069	0					
ANR	9867644	Identifier	tif		9867069	1					
ANR	9867645	Parameter	uint8 * bp	587:26:17284:17292	9867069	1	True				
ANR	9867646	ParameterType	uint8 *		9867069	0					
ANR	9867647	Identifier	bp		9867069	1					
ANR	9867648	Parameter	tmsize_t cc	587:37:17295:17305	9867069	2	True				
ANR	9867649	ParameterType	tmsize_t		9867069	0					
ANR	9867650	Identifier	cc		9867069	1					
ANR	9867651	Parameter	uint16 s	587:50:17308:17315	9867069	3	True				
ANR	9867652	ParameterType	uint16		9867069	0					
ANR	9867653	Identifier	s		9867069	1					
ANR	9867654	CFGEntryNode	ENTRY		9867069		True				
ANR	9867655	CFGExitNode	EXIT		9867069		True				
ANR	9867656	Symbol	* sp		9867069						
ANR	9867657	Symbol	beg		9867069						
ANR	9867658	Symbol	sp -> user_datafmt		9867069						
ANR	9867659	Symbol	SGILOGDATAFMT_RAW		9867069						
ANR	9867660	Symbol	bp		9867069						
ANR	9867661	Symbol	occ		9867069						
ANR	9867662	Symbol	tif		9867069						
ANR	9867663	Symbol	npixels		9867069						
ANR	9867664	Symbol	sp -> tbuflen		9867069						
ANR	9867665	Symbol	tif -> tif_rawcc		9867069						
ANR	9867666	Symbol	* beg		9867069						
ANR	9867667	Symbol	sp -> pixel_size		9867069						
ANR	9867668	Symbol	TIFFFlushData1		9867069						
ANR	9867669	Symbol	shft		9867069						
ANR	9867670	Symbol	sp -> tbuf		9867069						
ANR	9867671	Symbol	sp -> tfunc		9867069						
ANR	9867672	Symbol	sp		9867069						
ANR	9867673	Symbol	mask		9867069						
ANR	9867674	Symbol	cc		9867069						
ANR	9867675	Symbol	EncoderState		9867069						
ANR	9867676	Symbol	op		9867069						
ANR	9867677	Symbol	* tp		9867069						
ANR	9867678	Symbol	b		9867069						
ANR	9867679	Symbol	NULL		9867069						
ANR	9867680	Symbol	module		9867069						
ANR	9867681	Symbol	i		9867069						
ANR	9867682	Symbol	j		9867069						
ANR	9867683	Symbol	tif -> tif_rawcp		9867069						
ANR	9867684	Symbol	tif -> tif_clientdata		9867069						
ANR	9867685	Symbol	rc		9867069						
ANR	9867686	Symbol	s		9867069						
ANR	9867687	Symbol	* i		9867069						
ANR	9867688	Symbol	tif -> tif_rawdatasize		9867069						
ANR	9867689	Symbol	* rc		9867069						
ANR	9867690	Symbol	MINRUN		9867069						
ANR	9867691	Symbol	* op ++		9867069						
ANR	9867692	Symbol	* tif		9867069						
ANR	9867693	Symbol	tp		9867069						
ANR	9867694	Function	LogLuvEncodeStrip	686:0:19610:19924							
ANR	9867695	FunctionDef	"LogLuvEncodeStrip (TIFF * tif , uint8 * bp , tmsize_t cc , uint16 s)"		9867694	0					
ANR	9867696	CompoundStatement		688:0:19684:19924	9867694	0					
ANR	9867697	IdentifierDeclStatement	tmsize_t rowlen = TIFFScanlineSize ( tif ) ;	689:1:19687:19726	9867694	0	True				
ANR	9867698	IdentifierDecl	rowlen = TIFFScanlineSize ( tif )		9867694	0					
ANR	9867699	IdentifierDeclType	tmsize_t		9867694	0					
ANR	9867700	Identifier	rowlen		9867694	1					
ANR	9867701	AssignmentExpression	rowlen = TIFFScanlineSize ( tif )		9867694	2		=			
ANR	9867702	Identifier	rowlen		9867694	0					
ANR	9867703	CallExpression	TIFFScanlineSize ( tif )		9867694	1					
ANR	9867704	Callee	TIFFScanlineSize		9867694	0					
ANR	9867705	Identifier	TIFFScanlineSize		9867694	0					
ANR	9867706	ArgumentList	tif		9867694	1					
ANR	9867707	Argument	tif		9867694	0					
ANR	9867708	Identifier	tif		9867694	0					
ANR	9867709	IfStatement	if ( rowlen == 0 )		9867694	1					
ANR	9867710	Condition	rowlen == 0	691:12:19741:19751	9867694	0	True				
ANR	9867711	EqualityExpression	rowlen == 0		9867694	0		==			
ANR	9867712	Identifier	rowlen		9867694	0					
ANR	9867713	PrimaryExpression	0		9867694	1					
ANR	9867714	ReturnStatement	return 0 ;	692:16:19770:19778	9867694	1	True				
ANR	9867715	PrimaryExpression	0		9867694	0					
ANR	9867716	ExpressionStatement	assert ( cc % rowlen == 0 )	694:1:19782:19804	9867694	2	True				
ANR	9867717	CallExpression	assert ( cc % rowlen == 0 )		9867694	0					
ANR	9867718	Callee	assert		9867694	0					
ANR	9867719	Identifier	assert		9867694	0					
ANR	9867720	ArgumentList	cc % rowlen == 0		9867694	1					
ANR	9867721	Argument	cc % rowlen == 0		9867694	0					
ANR	9867722	EqualityExpression	cc % rowlen == 0		9867694	0		==			
ANR	9867723	MultiplicativeExpression	cc % rowlen		9867694	0		%			
ANR	9867724	Identifier	cc		9867694	0					
ANR	9867725	Identifier	rowlen		9867694	1					
ANR	9867726	PrimaryExpression	0		9867694	1					
ANR	9867727	WhileStatement	"while ( cc && ( * tif -> tif_encoderow ) ( tif , bp , rowlen , s ) == 1 )"		9867694	3					
ANR	9867728	Condition	"cc && ( * tif -> tif_encoderow ) ( tif , bp , rowlen , s ) == 1"	695:8:19814:19865	9867694	0	True				
ANR	9867729	AndExpression	"cc && ( * tif -> tif_encoderow ) ( tif , bp , rowlen , s ) == 1"		9867694	0		&&			
ANR	9867730	Identifier	cc		9867694	0					
ANR	9867731	EqualityExpression	"( * tif -> tif_encoderow ) ( tif , bp , rowlen , s ) == 1"		9867694	1		==			
ANR	9867732	CallExpression	"( * tif -> tif_encoderow ) ( tif , bp , rowlen , s )"		9867694	0					
ANR	9867733	Callee	* tif -> tif_encoderow		9867694	0					
ANR	9867734	UnaryOperationExpression	* tif -> tif_encoderow		9867694	0					
ANR	9867735	UnaryOperator	*		9867694	0					
ANR	9867736	PtrMemberAccess	tif -> tif_encoderow		9867694	1					
ANR	9867737	Identifier	tif		9867694	0					
ANR	9867738	Identifier	tif_encoderow		9867694	1					
ANR	9867739	ArgumentList	tif		9867694	1					
ANR	9867740	Argument	tif		9867694	0					
ANR	9867741	Identifier	tif		9867694	0					
ANR	9867742	Argument	bp		9867694	1					
ANR	9867743	Identifier	bp		9867694	0					
ANR	9867744	Argument	rowlen		9867694	2					
ANR	9867745	Identifier	rowlen		9867694	0					
ANR	9867746	Argument	s		9867694	3					
ANR	9867747	Identifier	s		9867694	0					
ANR	9867748	PrimaryExpression	1		9867694	1					
ANR	9867749	CompoundStatement		8:62:183:183	9867694	1					
ANR	9867750	ExpressionStatement	bp += rowlen	696:2:19872:19884	9867694	0	True				
ANR	9867751	AssignmentExpression	bp += rowlen		9867694	0		+=			
ANR	9867752	Identifier	bp		9867694	0					
ANR	9867753	Identifier	rowlen		9867694	1					
ANR	9867754	ExpressionStatement	cc -= rowlen	697:2:19888:19900	9867694	1	True				
ANR	9867755	AssignmentExpression	cc -= rowlen		9867694	0		-=			
ANR	9867756	Identifier	cc		9867694	0					
ANR	9867757	Identifier	rowlen		9867694	1					
ANR	9867758	ReturnStatement	return ( cc == 0 ) ;	699:1:19906:19922	9867694	4	True				
ANR	9867759	EqualityExpression	cc == 0		9867694	0		==			
ANR	9867760	Identifier	cc		9867694	0					
ANR	9867761	PrimaryExpression	0		9867694	1					
ANR	9867762	ReturnType	static int		9867694	1					
ANR	9867763	Identifier	LogLuvEncodeStrip		9867694	2					
ANR	9867764	ParameterList	"TIFF * tif , uint8 * bp , tmsize_t cc , uint16 s"		9867694	3					
ANR	9867765	Parameter	TIFF * tif	687:18:19639:19647	9867694	0	True				
ANR	9867766	ParameterType	TIFF *		9867694	0					
ANR	9867767	Identifier	tif		9867694	1					
ANR	9867768	Parameter	uint8 * bp	687:29:19650:19658	9867694	1	True				
ANR	9867769	ParameterType	uint8 *		9867694	0					
ANR	9867770	Identifier	bp		9867694	1					
ANR	9867771	Parameter	tmsize_t cc	687:40:19661:19671	9867694	2	True				
ANR	9867772	ParameterType	tmsize_t		9867694	0					
ANR	9867773	Identifier	cc		9867694	1					
ANR	9867774	Parameter	uint16 s	687:53:19674:19681	9867694	3	True				
ANR	9867775	ParameterType	uint16		9867694	0					
ANR	9867776	Identifier	s		9867694	1					
ANR	9867777	CFGEntryNode	ENTRY		9867694		True				
ANR	9867778	CFGExitNode	EXIT		9867694		True				
ANR	9867779	Symbol	tif		9867694						
ANR	9867780	Symbol	cc		9867694						
ANR	9867781	Symbol	TIFFScanlineSize		9867694						
ANR	9867782	Symbol	tif -> tif_encoderow		9867694						
ANR	9867783	Symbol	s		9867694						
ANR	9867784	Symbol	* * tif		9867694						
ANR	9867785	Symbol	rowlen		9867694						
ANR	9867786	Symbol	* tif -> tif_encoderow		9867694						
ANR	9867787	Symbol	* tif		9867694						
ANR	9867788	Symbol	bp		9867694						
ANR	9867789	Function	LogLuvEncodeTile	706:0:20034:20346							
ANR	9867790	FunctionDef	"LogLuvEncodeTile (TIFF * tif , uint8 * bp , tmsize_t cc , uint16 s)"		9867789	0					
ANR	9867791	CompoundStatement		708:0:20107:20346	9867789	0					
ANR	9867792	IdentifierDeclStatement	tmsize_t rowlen = TIFFTileRowSize ( tif ) ;	709:1:20110:20148	9867789	0	True				
ANR	9867793	IdentifierDecl	rowlen = TIFFTileRowSize ( tif )		9867789	0					
ANR	9867794	IdentifierDeclType	tmsize_t		9867789	0					
ANR	9867795	Identifier	rowlen		9867789	1					
ANR	9867796	AssignmentExpression	rowlen = TIFFTileRowSize ( tif )		9867789	2		=			
ANR	9867797	Identifier	rowlen		9867789	0					
ANR	9867798	CallExpression	TIFFTileRowSize ( tif )		9867789	1					
ANR	9867799	Callee	TIFFTileRowSize		9867789	0					
ANR	9867800	Identifier	TIFFTileRowSize		9867789	0					
ANR	9867801	ArgumentList	tif		9867789	1					
ANR	9867802	Argument	tif		9867789	0					
ANR	9867803	Identifier	tif		9867789	0					
ANR	9867804	IfStatement	if ( rowlen == 0 )		9867789	1					
ANR	9867805	Condition	rowlen == 0	711:12:20163:20173	9867789	0	True				
ANR	9867806	EqualityExpression	rowlen == 0		9867789	0		==			
ANR	9867807	Identifier	rowlen		9867789	0					
ANR	9867808	PrimaryExpression	0		9867789	1					
ANR	9867809	ReturnStatement	return 0 ;	712:16:20192:20200	9867789	1	True				
ANR	9867810	PrimaryExpression	0		9867789	0					
ANR	9867811	ExpressionStatement	assert ( cc % rowlen == 0 )	714:1:20204:20226	9867789	2	True				
ANR	9867812	CallExpression	assert ( cc % rowlen == 0 )		9867789	0					
ANR	9867813	Callee	assert		9867789	0					
ANR	9867814	Identifier	assert		9867789	0					
ANR	9867815	ArgumentList	cc % rowlen == 0		9867789	1					
ANR	9867816	Argument	cc % rowlen == 0		9867789	0					
ANR	9867817	EqualityExpression	cc % rowlen == 0		9867789	0		==			
ANR	9867818	MultiplicativeExpression	cc % rowlen		9867789	0		%			
ANR	9867819	Identifier	cc		9867789	0					
ANR	9867820	Identifier	rowlen		9867789	1					
ANR	9867821	PrimaryExpression	0		9867789	1					
ANR	9867822	WhileStatement	"while ( cc && ( * tif -> tif_encoderow ) ( tif , bp , rowlen , s ) == 1 )"		9867789	3					
ANR	9867823	Condition	"cc && ( * tif -> tif_encoderow ) ( tif , bp , rowlen , s ) == 1"	715:8:20236:20287	9867789	0	True				
ANR	9867824	AndExpression	"cc && ( * tif -> tif_encoderow ) ( tif , bp , rowlen , s ) == 1"		9867789	0		&&			
ANR	9867825	Identifier	cc		9867789	0					
ANR	9867826	EqualityExpression	"( * tif -> tif_encoderow ) ( tif , bp , rowlen , s ) == 1"		9867789	1		==			
ANR	9867827	CallExpression	"( * tif -> tif_encoderow ) ( tif , bp , rowlen , s )"		9867789	0					
ANR	9867828	Callee	* tif -> tif_encoderow		9867789	0					
ANR	9867829	UnaryOperationExpression	* tif -> tif_encoderow		9867789	0					
ANR	9867830	UnaryOperator	*		9867789	0					
ANR	9867831	PtrMemberAccess	tif -> tif_encoderow		9867789	1					
ANR	9867832	Identifier	tif		9867789	0					
ANR	9867833	Identifier	tif_encoderow		9867789	1					
ANR	9867834	ArgumentList	tif		9867789	1					
ANR	9867835	Argument	tif		9867789	0					
ANR	9867836	Identifier	tif		9867789	0					
ANR	9867837	Argument	bp		9867789	1					
ANR	9867838	Identifier	bp		9867789	0					
ANR	9867839	Argument	rowlen		9867789	2					
ANR	9867840	Identifier	rowlen		9867789	0					
ANR	9867841	Argument	s		9867789	3					
ANR	9867842	Identifier	s		9867789	0					
ANR	9867843	PrimaryExpression	1		9867789	1					
ANR	9867844	CompoundStatement		8:62:182:182	9867789	1					
ANR	9867845	ExpressionStatement	bp += rowlen	716:2:20294:20306	9867789	0	True				
ANR	9867846	AssignmentExpression	bp += rowlen		9867789	0		+=			
ANR	9867847	Identifier	bp		9867789	0					
ANR	9867848	Identifier	rowlen		9867789	1					
ANR	9867849	ExpressionStatement	cc -= rowlen	717:2:20310:20322	9867789	1	True				
ANR	9867850	AssignmentExpression	cc -= rowlen		9867789	0		-=			
ANR	9867851	Identifier	cc		9867789	0					
ANR	9867852	Identifier	rowlen		9867789	1					
ANR	9867853	ReturnStatement	return ( cc == 0 ) ;	719:1:20328:20344	9867789	4	True				
ANR	9867854	EqualityExpression	cc == 0		9867789	0		==			
ANR	9867855	Identifier	cc		9867789	0					
ANR	9867856	PrimaryExpression	0		9867789	1					
ANR	9867857	ReturnType	static int		9867789	1					
ANR	9867858	Identifier	LogLuvEncodeTile		9867789	2					
ANR	9867859	ParameterList	"TIFF * tif , uint8 * bp , tmsize_t cc , uint16 s"		9867789	3					
ANR	9867860	Parameter	TIFF * tif	707:17:20062:20070	9867789	0	True				
ANR	9867861	ParameterType	TIFF *		9867789	0					
ANR	9867862	Identifier	tif		9867789	1					
ANR	9867863	Parameter	uint8 * bp	707:28:20073:20081	9867789	1	True				
ANR	9867864	ParameterType	uint8 *		9867789	0					
ANR	9867865	Identifier	bp		9867789	1					
ANR	9867866	Parameter	tmsize_t cc	707:39:20084:20094	9867789	2	True				
ANR	9867867	ParameterType	tmsize_t		9867789	0					
ANR	9867868	Identifier	cc		9867789	1					
ANR	9867869	Parameter	uint16 s	707:52:20097:20104	9867789	3	True				
ANR	9867870	ParameterType	uint16		9867789	0					
ANR	9867871	Identifier	s		9867789	1					
ANR	9867872	CFGEntryNode	ENTRY		9867789		True				
ANR	9867873	CFGExitNode	EXIT		9867789		True				
ANR	9867874	Symbol	tif		9867789						
ANR	9867875	Symbol	cc		9867789						
ANR	9867876	Symbol	tif -> tif_encoderow		9867789						
ANR	9867877	Symbol	s		9867789						
ANR	9867878	Symbol	* * tif		9867789						
ANR	9867879	Symbol	rowlen		9867789						
ANR	9867880	Symbol	* tif -> tif_encoderow		9867789						
ANR	9867881	Symbol	TIFFTileRowSize		9867789						
ANR	9867882	Symbol	* tif		9867789						
ANR	9867883	Symbol	bp		9867789						
ANR	9867884	Function	LogL16toY	752:0:20972:21181							
ANR	9867885	FunctionDef	LogL16toY (int p16)		9867884	0					
ANR	9867886	CompoundStatement		754:0:21040:21181	9867884	0					
ANR	9867887	IdentifierDeclStatement	int Le = p16 & 0x7fff ;	755:1:21043:21064	9867884	0	True				
ANR	9867888	IdentifierDecl	Le = p16 & 0x7fff		9867884	0					
ANR	9867889	IdentifierDeclType	int		9867884	0					
ANR	9867890	Identifier	Le		9867884	1					
ANR	9867891	AssignmentExpression	Le = p16 & 0x7fff		9867884	2		=			
ANR	9867892	Identifier	Le		9867884	0					
ANR	9867893	BitAndExpression	p16 & 0x7fff		9867884	1		&			
ANR	9867894	Identifier	p16		9867884	0					
ANR	9867895	PrimaryExpression	0x7fff		9867884	1					
ANR	9867896	IdentifierDeclStatement	double Y ;	756:1:21067:21075	9867884	1	True				
ANR	9867897	IdentifierDecl	Y		9867884	0					
ANR	9867898	IdentifierDeclType	double		9867884	0					
ANR	9867899	Identifier	Y		9867884	1					
ANR	9867900	IfStatement	if ( ! Le )		9867884	2					
ANR	9867901	Condition	! Le	758:5:21083:21085	9867884	0	True				
ANR	9867902	UnaryOperationExpression	! Le		9867884	0					
ANR	9867903	UnaryOperator	!		9867884	0					
ANR	9867904	Identifier	Le		9867884	1					
ANR	9867905	ReturnStatement	return ( 0. ) ;	759:2:21090:21101	9867884	1	True				
ANR	9867906	PrimaryExpression	0.		9867884	0					
ANR	9867907	ExpressionStatement	Y = exp ( M_LN2 / 256. * ( Le + .5 ) - M_LN2 * 64. )	760:1:21104:21143	9867884	3	True				
ANR	9867908	AssignmentExpression	Y = exp ( M_LN2 / 256. * ( Le + .5 ) - M_LN2 * 64. )		9867884	0		=			
ANR	9867909	Identifier	Y		9867884	0					
ANR	9867910	CallExpression	exp ( M_LN2 / 256. * ( Le + .5 ) - M_LN2 * 64. )		9867884	1					
ANR	9867911	Callee	exp		9867884	0					
ANR	9867912	Identifier	exp		9867884	0					
ANR	9867913	ArgumentList	M_LN2 / 256. * ( Le + .5 ) - M_LN2 * 64.		9867884	1					
ANR	9867914	Argument	M_LN2 / 256. * ( Le + .5 ) - M_LN2 * 64.		9867884	0					
ANR	9867915	AdditiveExpression	M_LN2 / 256. * ( Le + .5 ) - M_LN2 * 64.		9867884	0		-			
ANR	9867916	MultiplicativeExpression	M_LN2 / 256. * ( Le + .5 )		9867884	0		/			
ANR	9867917	Identifier	M_LN2		9867884	0					
ANR	9867918	MultiplicativeExpression	256. * ( Le + .5 )		9867884	1		*			
ANR	9867919	PrimaryExpression	256.		9867884	0					
ANR	9867920	AdditiveExpression	Le + .5		9867884	1		+			
ANR	9867921	Identifier	Le		9867884	0					
ANR	9867922	PrimaryExpression	.5		9867884	1					
ANR	9867923	MultiplicativeExpression	M_LN2 * 64.		9867884	1		*			
ANR	9867924	Identifier	M_LN2		9867884	0					
ANR	9867925	PrimaryExpression	64.		9867884	1					
ANR	9867926	ReturnStatement	return ( ! ( p16 & 0x8000 ) ? Y : - Y ) ;	761:1:21146:21179	9867884	4	True				
ANR	9867927	ConditionalExpression	! ( p16 & 0x8000 ) ? Y : - Y		9867884	0					
ANR	9867928	Condition	! ( p16 & 0x8000 )		9867884	0					
ANR	9867929	UnaryOperationExpression	! ( p16 & 0x8000 )		9867884	0					
ANR	9867930	UnaryOperator	!		9867884	0					
ANR	9867931	BitAndExpression	p16 & 0x8000		9867884	1		&			
ANR	9867932	Identifier	p16		9867884	0					
ANR	9867933	PrimaryExpression	0x8000		9867884	1					
ANR	9867934	Identifier	Y		9867884	1					
ANR	9867935	UnaryOperationExpression	- Y		9867884	2					
ANR	9867936	UnaryOperator	-		9867884	0					
ANR	9867937	Identifier	Y		9867884	1					
ANR	9867938	ReturnType	double		9867884	1					
ANR	9867939	Identifier	LogL16toY		9867884	2					
ANR	9867940	ParameterList	int p16		9867884	3					
ANR	9867941	Parameter	int p16	753:10:20989:20995	9867884	0	True				
ANR	9867942	ParameterType	int		9867884	0					
ANR	9867943	Identifier	p16		9867884	1					
ANR	9867944	CFGEntryNode	ENTRY		9867884		True				
ANR	9867945	CFGExitNode	EXIT		9867884		True				
ANR	9867946	Symbol	p16		9867884						
ANR	9867947	Symbol	M_LN2		9867884						
ANR	9867948	Symbol	Le		9867884						
ANR	9867949	Symbol	Y		9867884						
ANR	9867950	Symbol	exp		9867884						
ANR	9867951	Function	LogL16fromY	767:0:21217:21530							
ANR	9867952	FunctionDef	"LogL16fromY (double Y , int em)"		9867951	0					
ANR	9867953	CompoundStatement		769:0:21280:21530	9867951	0					
ANR	9867954	IfStatement	if ( Y >= 1.8371976e19 )		9867951	0					
ANR	9867955	Condition	Y >= 1.8371976e19	770:5:21287:21303	9867951	0	True				
ANR	9867956	RelationalExpression	Y >= 1.8371976e19		9867951	0		>=			
ANR	9867957	Identifier	Y		9867951	0					
ANR	9867958	PrimaryExpression	1.8371976e19		9867951	1					
ANR	9867959	ReturnStatement	return ( 0x7fff ) ;	771:2:21308:21323	9867951	1	True				
ANR	9867960	PrimaryExpression	0x7fff		9867951	0					
ANR	9867961	IfStatement	if ( Y <= - 1.8371976e19 )		9867951	1					
ANR	9867962	Condition	Y <= - 1.8371976e19	772:5:21330:21347	9867951	0	True				
ANR	9867963	RelationalExpression	Y <= - 1.8371976e19		9867951	0		<=			
ANR	9867964	Identifier	Y		9867951	0					
ANR	9867965	UnaryOperationExpression	- 1.8371976e19		9867951	1					
ANR	9867966	UnaryOperator	-		9867951	0					
ANR	9867967	PrimaryExpression	1.8371976e19		9867951	1					
ANR	9867968	ReturnStatement	return ( 0xffff ) ;	773:2:21352:21367	9867951	1	True				
ANR	9867969	PrimaryExpression	0xffff		9867951	0					
ANR	9867970	IfStatement	if ( Y > 5.4136769e-20 )		9867951	2					
ANR	9867971	Condition	Y > 5.4136769e-20	774:5:21374:21390	9867951	0	True				
ANR	9867972	RelationalExpression	Y > 5.4136769e-20		9867951	0		>			
ANR	9867973	Identifier	Y		9867951	0					
ANR	9867974	PrimaryExpression	5.4136769e-20		9867951	1					
ANR	9867975	ReturnStatement	"return itrunc ( 256. * ( log2 ( Y ) + 64. ) , em ) ;"	775:2:21395:21434	9867951	1	True				
ANR	9867976	CallExpression	"itrunc ( 256. * ( log2 ( Y ) + 64. ) , em )"		9867951	0					
ANR	9867977	Callee	itrunc		9867951	0					
ANR	9867978	Identifier	itrunc		9867951	0					
ANR	9867979	ArgumentList	256. * ( log2 ( Y ) + 64. )		9867951	1					
ANR	9867980	Argument	256. * ( log2 ( Y ) + 64. )		9867951	0					
ANR	9867981	MultiplicativeExpression	256. * ( log2 ( Y ) + 64. )		9867951	0		*			
ANR	9867982	PrimaryExpression	256.		9867951	0					
ANR	9867983	AdditiveExpression	log2 ( Y ) + 64.		9867951	1		+			
ANR	9867984	CallExpression	log2 ( Y )		9867951	0					
ANR	9867985	Callee	log2		9867951	0					
ANR	9867986	Identifier	log2		9867951	0					
ANR	9867987	ArgumentList	Y		9867951	1					
ANR	9867988	Argument	Y		9867951	0					
ANR	9867989	Identifier	Y		9867951	0					
ANR	9867990	PrimaryExpression	64.		9867951	1					
ANR	9867991	Argument	em		9867951	1					
ANR	9867992	Identifier	em		9867951	0					
ANR	9867993	IfStatement	if ( Y < - 5.4136769e-20 )		9867951	3					
ANR	9867994	Condition	Y < - 5.4136769e-20	776:5:21441:21458	9867951	0	True				
ANR	9867995	RelationalExpression	Y < - 5.4136769e-20		9867951	0		<			
ANR	9867996	Identifier	Y		9867951	0					
ANR	9867997	UnaryOperationExpression	- 5.4136769e-20		9867951	1					
ANR	9867998	UnaryOperator	-		9867951	0					
ANR	9867999	PrimaryExpression	5.4136769e-20		9867951	1					
ANR	9868000	ReturnStatement	"return ( ~0x7fff | itrunc ( 256. * ( log2 ( - Y ) + 64. ) , em ) ) ;"	777:2:21463:21515	9867951	1	True				
ANR	9868001	InclusiveOrExpression	"~0x7fff | itrunc ( 256. * ( log2 ( - Y ) + 64. ) , em )"		9867951	0		|			
ANR	9868002	Identifier	~0x7fff		9867951	0					
ANR	9868003	CallExpression	"itrunc ( 256. * ( log2 ( - Y ) + 64. ) , em )"		9867951	1					
ANR	9868004	Callee	itrunc		9867951	0					
ANR	9868005	Identifier	itrunc		9867951	0					
ANR	9868006	ArgumentList	256. * ( log2 ( - Y ) + 64. )		9867951	1					
ANR	9868007	Argument	256. * ( log2 ( - Y ) + 64. )		9867951	0					
ANR	9868008	MultiplicativeExpression	256. * ( log2 ( - Y ) + 64. )		9867951	0		*			
ANR	9868009	PrimaryExpression	256.		9867951	0					
ANR	9868010	AdditiveExpression	log2 ( - Y ) + 64.		9867951	1		+			
ANR	9868011	CallExpression	log2 ( - Y )		9867951	0					
ANR	9868012	Callee	log2		9867951	0					
ANR	9868013	Identifier	log2		9867951	0					
ANR	9868014	ArgumentList	- Y		9867951	1					
ANR	9868015	Argument	- Y		9867951	0					
ANR	9868016	UnaryOperationExpression	- Y		9867951	0					
ANR	9868017	UnaryOperator	-		9867951	0					
ANR	9868018	Identifier	Y		9867951	1					
ANR	9868019	PrimaryExpression	64.		9867951	1					
ANR	9868020	Argument	em		9867951	1					
ANR	9868021	Identifier	em		9867951	0					
ANR	9868022	ReturnStatement	return ( 0 ) ;	778:1:21518:21528	9867951	4	True				
ANR	9868023	PrimaryExpression	0		9867951	0					
ANR	9868024	ReturnType	int		9867951	1					
ANR	9868025	Identifier	LogL16fromY		9867951	2					
ANR	9868026	ParameterList	"double Y , int em"		9867951	3					
ANR	9868027	Parameter	double Y	768:12:21233:21240	9867951	0	True				
ANR	9868028	ParameterType	double		9867951	0					
ANR	9868029	Identifier	Y		9867951	1					
ANR	9868030	Parameter	int em	768:22:21243:21248	9867951	1	True				
ANR	9868031	ParameterType	int		9867951	0					
ANR	9868032	Identifier	em		9867951	1					
ANR	9868033	CFGEntryNode	ENTRY		9867951		True				
ANR	9868034	CFGExitNode	EXIT		9867951		True				
ANR	9868035	Symbol	itrunc		9867951						
ANR	9868036	Symbol	em		9867951						
ANR	9868037	Symbol	Y		9867951						
ANR	9868038	Symbol	~0x7fff		9867951						
ANR	9868039	Symbol	log2		9867951						
ANR	9868040	Function	L16toY	781:0:21533:21707							
ANR	9868041	FunctionDef	"L16toY (LogLuvState * sp , uint8 * op , tmsize_t n)"		9868040	0					
ANR	9868042	CompoundStatement		783:0:21592:21707	9868040	0					
ANR	9868043	IdentifierDeclStatement	int16 * l16 = ( int16 * ) sp -> tbuf ;	784:1:21595:21625	9868040	0	True				
ANR	9868044	IdentifierDecl	* l16 = ( int16 * ) sp -> tbuf		9868040	0					
ANR	9868045	IdentifierDeclType	int16 *		9868040	0					
ANR	9868046	Identifier	l16		9868040	1					
ANR	9868047	AssignmentExpression	* l16 = ( int16 * ) sp -> tbuf		9868040	2		=			
ANR	9868048	Identifier	l16		9868040	0					
ANR	9868049	CastExpression	( int16 * ) sp -> tbuf		9868040	1					
ANR	9868050	CastTarget	int16 *		9868040	0					
ANR	9868051	PtrMemberAccess	sp -> tbuf		9868040	1					
ANR	9868052	Identifier	sp		9868040	0					
ANR	9868053	Identifier	tbuf		9868040	1					
ANR	9868054	IdentifierDeclStatement	float * yp = ( float * ) op ;	785:1:21628:21651	9868040	1	True				
ANR	9868055	IdentifierDecl	* yp = ( float * ) op		9868040	0					
ANR	9868056	IdentifierDeclType	float *		9868040	0					
ANR	9868057	Identifier	yp		9868040	1					
ANR	9868058	AssignmentExpression	* yp = ( float * ) op		9868040	2		=			
ANR	9868059	Identifier	yp		9868040	0					
ANR	9868060	CastExpression	( float * ) op		9868040	1					
ANR	9868061	CastTarget	float *		9868040	0					
ANR	9868062	Identifier	op		9868040	1					
ANR	9868063	WhileStatement	while ( n -- > 0 )		9868040	2					
ANR	9868064	Condition	n -- > 0	787:8:21662:21668	9868040	0	True				
ANR	9868065	RelationalExpression	n -- > 0		9868040	0		>			
ANR	9868066	PostIncDecOperationExpression	n --		9868040	0					
ANR	9868067	Identifier	n		9868040	0					
ANR	9868068	IncDec	--		9868040	1					
ANR	9868069	PrimaryExpression	0		9868040	1					
ANR	9868070	ExpressionStatement	* yp ++ = ( float ) LogL16toY ( * l16 ++ )	788:2:21673:21705	9868040	1	True				
ANR	9868071	AssignmentExpression	* yp ++ = ( float ) LogL16toY ( * l16 ++ )		9868040	0		=			
ANR	9868072	UnaryOperationExpression	* yp ++		9868040	0					
ANR	9868073	UnaryOperator	*		9868040	0					
ANR	9868074	PostIncDecOperationExpression	yp ++		9868040	1					
ANR	9868075	Identifier	yp		9868040	0					
ANR	9868076	IncDec	++		9868040	1					
ANR	9868077	CastExpression	( float ) LogL16toY ( * l16 ++ )		9868040	1					
ANR	9868078	CastTarget	float		9868040	0					
ANR	9868079	CallExpression	LogL16toY ( * l16 ++ )		9868040	1					
ANR	9868080	Callee	LogL16toY		9868040	0					
ANR	9868081	Identifier	LogL16toY		9868040	0					
ANR	9868082	ArgumentList	* l16 ++		9868040	1					
ANR	9868083	Argument	* l16 ++		9868040	0					
ANR	9868084	UnaryOperationExpression	* l16 ++		9868040	0					
ANR	9868085	UnaryOperator	*		9868040	0					
ANR	9868086	PostIncDecOperationExpression	l16 ++		9868040	1					
ANR	9868087	Identifier	l16		9868040	0					
ANR	9868088	IncDec	++		9868040	1					
ANR	9868089	ReturnType	static void		9868040	1					
ANR	9868090	Identifier	L16toY		9868040	2					
ANR	9868091	ParameterList	"LogLuvState * sp , uint8 * op , tmsize_t n"		9868040	3					
ANR	9868092	Parameter	LogLuvState * sp	782:7:21552:21566	9868040	0	True				
ANR	9868093	ParameterType	LogLuvState *		9868040	0					
ANR	9868094	Identifier	sp		9868040	1					
ANR	9868095	Parameter	uint8 * op	782:24:21569:21577	9868040	1	True				
ANR	9868096	ParameterType	uint8 *		9868040	0					
ANR	9868097	Identifier	op		9868040	1					
ANR	9868098	Parameter	tmsize_t n	782:35:21580:21589	9868040	2	True				
ANR	9868099	ParameterType	tmsize_t		9868040	0					
ANR	9868100	Identifier	n		9868040	1					
ANR	9868101	CFGEntryNode	ENTRY		9868040		True				
ANR	9868102	CFGExitNode	EXIT		9868040		True				
ANR	9868103	Symbol	* sp		9868040						
ANR	9868104	Symbol	l16		9868040						
ANR	9868105	Symbol	op		9868040						
ANR	9868106	Symbol	LogL16toY		9868040						
ANR	9868107	Symbol	yp		9868040						
ANR	9868108	Symbol	sp -> tbuf		9868040						
ANR	9868109	Symbol	* l16 ++		9868040						
ANR	9868110	Symbol	sp		9868040						
ANR	9868111	Symbol	n		9868040						
ANR	9868112	Symbol	* yp ++		9868040						
ANR	9868113	Function	L16toGry	791:0:21710:21962							
ANR	9868114	FunctionDef	"L16toGry (LogLuvState * sp , uint8 * op , tmsize_t n)"		9868113	0					
ANR	9868115	CompoundStatement		793:0:21771:21962	9868113	0					
ANR	9868116	IdentifierDeclStatement	int16 * l16 = ( int16 * ) sp -> tbuf ;	794:1:21774:21804	9868113	0	True				
ANR	9868117	IdentifierDecl	* l16 = ( int16 * ) sp -> tbuf		9868113	0					
ANR	9868118	IdentifierDeclType	int16 *		9868113	0					
ANR	9868119	Identifier	l16		9868113	1					
ANR	9868120	AssignmentExpression	* l16 = ( int16 * ) sp -> tbuf		9868113	2		=			
ANR	9868121	Identifier	l16		9868113	0					
ANR	9868122	CastExpression	( int16 * ) sp -> tbuf		9868113	1					
ANR	9868123	CastTarget	int16 *		9868113	0					
ANR	9868124	PtrMemberAccess	sp -> tbuf		9868113	1					
ANR	9868125	Identifier	sp		9868113	0					
ANR	9868126	Identifier	tbuf		9868113	1					
ANR	9868127	IdentifierDeclStatement	uint8 * gp = ( uint8 * ) op ;	795:1:21807:21830	9868113	1	True				
ANR	9868128	IdentifierDecl	* gp = ( uint8 * ) op		9868113	0					
ANR	9868129	IdentifierDeclType	uint8 *		9868113	0					
ANR	9868130	Identifier	gp		9868113	1					
ANR	9868131	AssignmentExpression	* gp = ( uint8 * ) op		9868113	2		=			
ANR	9868132	Identifier	gp		9868113	0					
ANR	9868133	CastExpression	( uint8 * ) op		9868113	1					
ANR	9868134	CastTarget	uint8 *		9868113	0					
ANR	9868135	Identifier	op		9868113	1					
ANR	9868136	WhileStatement	while ( n -- > 0 )		9868113	2					
ANR	9868137	Condition	n -- > 0	797:8:21841:21847	9868113	0	True				
ANR	9868138	RelationalExpression	n -- > 0		9868113	0		>			
ANR	9868139	PostIncDecOperationExpression	n --		9868113	0					
ANR	9868140	Identifier	n		9868113	0					
ANR	9868141	IncDec	--		9868113	1					
ANR	9868142	PrimaryExpression	0		9868113	1					
ANR	9868143	CompoundStatement		6:2:82:110	9868113	1					
ANR	9868144	IdentifierDeclStatement	double Y = LogL16toY ( * l16 ++ ) ;	798:2:21854:21882	9868113	0	True				
ANR	9868145	IdentifierDecl	Y = LogL16toY ( * l16 ++ )		9868113	0					
ANR	9868146	IdentifierDeclType	double		9868113	0					
ANR	9868147	Identifier	Y		9868113	1					
ANR	9868148	AssignmentExpression	Y = LogL16toY ( * l16 ++ )		9868113	2		=			
ANR	9868149	Identifier	Y		9868113	0					
ANR	9868150	CallExpression	LogL16toY ( * l16 ++ )		9868113	1					
ANR	9868151	Callee	LogL16toY		9868113	0					
ANR	9868152	Identifier	LogL16toY		9868113	0					
ANR	9868153	ArgumentList	* l16 ++		9868113	1					
ANR	9868154	Argument	* l16 ++		9868113	0					
ANR	9868155	UnaryOperationExpression	* l16 ++		9868113	0					
ANR	9868156	UnaryOperator	*		9868113	0					
ANR	9868157	PostIncDecOperationExpression	l16 ++		9868113	1					
ANR	9868158	Identifier	l16		9868113	0					
ANR	9868159	IncDec	++		9868113	1					
ANR	9868160	ExpressionStatement	* gp ++ = ( uint8 ) ( ( Y <= 0. ) ? 0 : ( Y >= 1. ) ? 255 : ( int ) ( 256. * sqrt ( Y ) ) )	799:2:21886:21957	9868113	1	True				
ANR	9868161	AssignmentExpression	* gp ++ = ( uint8 ) ( ( Y <= 0. ) ? 0 : ( Y >= 1. ) ? 255 : ( int ) ( 256. * sqrt ( Y ) ) )		9868113	0		=			
ANR	9868162	UnaryOperationExpression	* gp ++		9868113	0					
ANR	9868163	UnaryOperator	*		9868113	0					
ANR	9868164	PostIncDecOperationExpression	gp ++		9868113	1					
ANR	9868165	Identifier	gp		9868113	0					
ANR	9868166	IncDec	++		9868113	1					
ANR	9868167	CastExpression	( uint8 ) ( ( Y <= 0. ) ? 0 : ( Y >= 1. ) ? 255 : ( int ) ( 256. * sqrt ( Y ) ) )		9868113	1					
ANR	9868168	CastTarget	uint8		9868113	0					
ANR	9868169	ConditionalExpression	( Y <= 0. ) ? 0 : ( Y >= 1. ) ? 255 : ( int ) ( 256. * sqrt ( Y ) )		9868113	1					
ANR	9868170	Condition	Y <= 0.		9868113	0					
ANR	9868171	RelationalExpression	Y <= 0.		9868113	0		<=			
ANR	9868172	Identifier	Y		9868113	0					
ANR	9868173	PrimaryExpression	0.		9868113	1					
ANR	9868174	PrimaryExpression	0		9868113	1					
ANR	9868175	ConditionalExpression	( Y >= 1. ) ? 255 : ( int ) ( 256. * sqrt ( Y ) )		9868113	2					
ANR	9868176	Condition	Y >= 1.		9868113	0					
ANR	9868177	RelationalExpression	Y >= 1.		9868113	0		>=			
ANR	9868178	Identifier	Y		9868113	0					
ANR	9868179	PrimaryExpression	1.		9868113	1					
ANR	9868180	PrimaryExpression	255		9868113	1					
ANR	9868181	CastExpression	( int ) ( 256. * sqrt ( Y ) )		9868113	2					
ANR	9868182	CastTarget	int		9868113	0					
ANR	9868183	MultiplicativeExpression	256. * sqrt ( Y )		9868113	1		*			
ANR	9868184	PrimaryExpression	256.		9868113	0					
ANR	9868185	CallExpression	sqrt ( Y )		9868113	1					
ANR	9868186	Callee	sqrt		9868113	0					
ANR	9868187	Identifier	sqrt		9868113	0					
ANR	9868188	ArgumentList	Y		9868113	1					
ANR	9868189	Argument	Y		9868113	0					
ANR	9868190	Identifier	Y		9868113	0					
ANR	9868191	ReturnType	static void		9868113	1					
ANR	9868192	Identifier	L16toGry		9868113	2					
ANR	9868193	ParameterList	"LogLuvState * sp , uint8 * op , tmsize_t n"		9868113	3					
ANR	9868194	Parameter	LogLuvState * sp	792:9:21731:21745	9868113	0	True				
ANR	9868195	ParameterType	LogLuvState *		9868113	0					
ANR	9868196	Identifier	sp		9868113	1					
ANR	9868197	Parameter	uint8 * op	792:26:21748:21756	9868113	1	True				
ANR	9868198	ParameterType	uint8 *		9868113	0					
ANR	9868199	Identifier	op		9868113	1					
ANR	9868200	Parameter	tmsize_t n	792:37:21759:21768	9868113	2	True				
ANR	9868201	ParameterType	tmsize_t		9868113	0					
ANR	9868202	Identifier	n		9868113	1					
ANR	9868203	CFGEntryNode	ENTRY		9868113		True				
ANR	9868204	CFGExitNode	EXIT		9868113		True				
ANR	9868205	Symbol	l16		9868113						
ANR	9868206	Symbol	* sp		9868113						
ANR	9868207	Symbol	op		9868113						
ANR	9868208	Symbol	LogL16toY		9868113						
ANR	9868209	Symbol	sqrt		9868113						
ANR	9868210	Symbol	sp -> tbuf		9868113						
ANR	9868211	Symbol	gp		9868113						
ANR	9868212	Symbol	Y		9868113						
ANR	9868213	Symbol	* l16 ++		9868113						
ANR	9868214	Symbol	sp		9868113						
ANR	9868215	Symbol	n		9868113						
ANR	9868216	Symbol	* gp ++		9868113						
ANR	9868217	Function	L16fromY	803:0:21965:22163							
ANR	9868218	FunctionDef	"L16fromY (LogLuvState * sp , uint8 * op , tmsize_t n)"		9868217	0					
ANR	9868219	CompoundStatement		805:0:22026:22163	9868217	0					
ANR	9868220	IdentifierDeclStatement	int16 * l16 = ( int16 * ) sp -> tbuf ;	806:1:22029:22059	9868217	0	True				
ANR	9868221	IdentifierDecl	* l16 = ( int16 * ) sp -> tbuf		9868217	0					
ANR	9868222	IdentifierDeclType	int16 *		9868217	0					
ANR	9868223	Identifier	l16		9868217	1					
ANR	9868224	AssignmentExpression	* l16 = ( int16 * ) sp -> tbuf		9868217	2		=			
ANR	9868225	Identifier	l16		9868217	0					
ANR	9868226	CastExpression	( int16 * ) sp -> tbuf		9868217	1					
ANR	9868227	CastTarget	int16 *		9868217	0					
ANR	9868228	PtrMemberAccess	sp -> tbuf		9868217	1					
ANR	9868229	Identifier	sp		9868217	0					
ANR	9868230	Identifier	tbuf		9868217	1					
ANR	9868231	IdentifierDeclStatement	float * yp = ( float * ) op ;	807:1:22062:22085	9868217	1	True				
ANR	9868232	IdentifierDecl	* yp = ( float * ) op		9868217	0					
ANR	9868233	IdentifierDeclType	float *		9868217	0					
ANR	9868234	Identifier	yp		9868217	1					
ANR	9868235	AssignmentExpression	* yp = ( float * ) op		9868217	2		=			
ANR	9868236	Identifier	yp		9868217	0					
ANR	9868237	CastExpression	( float * ) op		9868217	1					
ANR	9868238	CastTarget	float *		9868217	0					
ANR	9868239	Identifier	op		9868217	1					
ANR	9868240	WhileStatement	while ( n -- > 0 )		9868217	2					
ANR	9868241	Condition	n -- > 0	809:8:22096:22102	9868217	0	True				
ANR	9868242	RelationalExpression	n -- > 0		9868217	0		>			
ANR	9868243	PostIncDecOperationExpression	n --		9868217	0					
ANR	9868244	Identifier	n		9868217	0					
ANR	9868245	IncDec	--		9868217	1					
ANR	9868246	PrimaryExpression	0		9868217	1					
ANR	9868247	ExpressionStatement	"* l16 ++ = ( int16 ) ( LogL16fromY ( * yp ++ , sp -> encode_meth ) )"	810:2:22107:22161	9868217	1	True				
ANR	9868248	AssignmentExpression	"* l16 ++ = ( int16 ) ( LogL16fromY ( * yp ++ , sp -> encode_meth ) )"		9868217	0		=			
ANR	9868249	UnaryOperationExpression	* l16 ++		9868217	0					
ANR	9868250	UnaryOperator	*		9868217	0					
ANR	9868251	PostIncDecOperationExpression	l16 ++		9868217	1					
ANR	9868252	Identifier	l16		9868217	0					
ANR	9868253	IncDec	++		9868217	1					
ANR	9868254	CastExpression	"( int16 ) ( LogL16fromY ( * yp ++ , sp -> encode_meth ) )"		9868217	1					
ANR	9868255	CastTarget	int16		9868217	0					
ANR	9868256	CallExpression	"LogL16fromY ( * yp ++ , sp -> encode_meth )"		9868217	1					
ANR	9868257	Callee	LogL16fromY		9868217	0					
ANR	9868258	Identifier	LogL16fromY		9868217	0					
ANR	9868259	ArgumentList	* yp ++		9868217	1					
ANR	9868260	Argument	* yp ++		9868217	0					
ANR	9868261	UnaryOperationExpression	* yp ++		9868217	0					
ANR	9868262	UnaryOperator	*		9868217	0					
ANR	9868263	PostIncDecOperationExpression	yp ++		9868217	1					
ANR	9868264	Identifier	yp		9868217	0					
ANR	9868265	IncDec	++		9868217	1					
ANR	9868266	Argument	sp -> encode_meth		9868217	1					
ANR	9868267	PtrMemberAccess	sp -> encode_meth		9868217	0					
ANR	9868268	Identifier	sp		9868217	0					
ANR	9868269	Identifier	encode_meth		9868217	1					
ANR	9868270	ReturnType	static void		9868217	1					
ANR	9868271	Identifier	L16fromY		9868217	2					
ANR	9868272	ParameterList	"LogLuvState * sp , uint8 * op , tmsize_t n"		9868217	3					
ANR	9868273	Parameter	LogLuvState * sp	804:9:21986:22000	9868217	0	True				
ANR	9868274	ParameterType	LogLuvState *		9868217	0					
ANR	9868275	Identifier	sp		9868217	1					
ANR	9868276	Parameter	uint8 * op	804:26:22003:22011	9868217	1	True				
ANR	9868277	ParameterType	uint8 *		9868217	0					
ANR	9868278	Identifier	op		9868217	1					
ANR	9868279	Parameter	tmsize_t n	804:37:22014:22023	9868217	2	True				
ANR	9868280	ParameterType	tmsize_t		9868217	0					
ANR	9868281	Identifier	n		9868217	1					
ANR	9868282	CFGEntryNode	ENTRY		9868217		True				
ANR	9868283	CFGExitNode	EXIT		9868217		True				
ANR	9868284	Symbol	* sp		9868217						
ANR	9868285	Symbol	l16		9868217						
ANR	9868286	Symbol	op		9868217						
ANR	9868287	Symbol	yp		9868217						
ANR	9868288	Symbol	sp -> tbuf		9868217						
ANR	9868289	Symbol	* l16 ++		9868217						
ANR	9868290	Symbol	sp -> encode_meth		9868217						
ANR	9868291	Symbol	LogL16fromY		9868217						
ANR	9868292	Symbol	sp		9868217						
ANR	9868293	Symbol	n		9868217						
ANR	9868294	Symbol	* yp ++		9868217						
ANR	9868295	Function	XYZtoRGB24	816:0:22199:22776							
ANR	9868296	FunctionDef	"XYZtoRGB24 (float xyz [ 3 ] , uint8 rgb [ 3 ])"		9868295	0					
ANR	9868297	CompoundStatement		818:0:22243:22776	9868295	0					
ANR	9868298	IdentifierDeclStatement	"double r , g , b ;"	819:1:22246:22260	9868295	0	True				
ANR	9868299	IdentifierDecl	r		9868295	0					
ANR	9868300	IdentifierDeclType	double		9868295	0					
ANR	9868301	Identifier	r		9868295	1					
ANR	9868302	IdentifierDecl	g		9868295	1					
ANR	9868303	IdentifierDeclType	double		9868295	0					
ANR	9868304	Identifier	g		9868295	1					
ANR	9868305	IdentifierDecl	b		9868295	2					
ANR	9868306	IdentifierDeclType	double		9868295	0					
ANR	9868307	Identifier	b		9868295	1					
ANR	9868308	ExpressionStatement	r = 2.690 * xyz [ 0 ] + - 1.276 * xyz [ 1 ] + - 0.414 * xyz [ 2 ]	821:1:22300:22349	9868295	1	True				
ANR	9868309	AssignmentExpression	r = 2.690 * xyz [ 0 ] + - 1.276 * xyz [ 1 ] + - 0.414 * xyz [ 2 ]		9868295	0		=			
ANR	9868310	Identifier	r		9868295	0					
ANR	9868311	AdditiveExpression	2.690 * xyz [ 0 ] + - 1.276 * xyz [ 1 ] + - 0.414 * xyz [ 2 ]		9868295	1		+			
ANR	9868312	MultiplicativeExpression	2.690 * xyz [ 0 ]		9868295	0		*			
ANR	9868313	PrimaryExpression	2.690		9868295	0					
ANR	9868314	ArrayIndexing	xyz [ 0 ]		9868295	1					
ANR	9868315	Identifier	xyz		9868295	0					
ANR	9868316	PrimaryExpression	0		9868295	1					
ANR	9868317	AdditiveExpression	- 1.276 * xyz [ 1 ] + - 0.414 * xyz [ 2 ]		9868295	1		+			
ANR	9868318	MultiplicativeExpression	- 1.276 * xyz [ 1 ]		9868295	0		*			
ANR	9868319	UnaryOperationExpression	- 1.276		9868295	0					
ANR	9868320	UnaryOperator	-		9868295	0					
ANR	9868321	PrimaryExpression	1.276		9868295	1					
ANR	9868322	ArrayIndexing	xyz [ 1 ]		9868295	1					
ANR	9868323	Identifier	xyz		9868295	0					
ANR	9868324	PrimaryExpression	1		9868295	1					
ANR	9868325	MultiplicativeExpression	- 0.414 * xyz [ 2 ]		9868295	1		*			
ANR	9868326	UnaryOperationExpression	- 0.414		9868295	0					
ANR	9868327	UnaryOperator	-		9868295	0					
ANR	9868328	PrimaryExpression	0.414		9868295	1					
ANR	9868329	ArrayIndexing	xyz [ 2 ]		9868295	1					
ANR	9868330	Identifier	xyz		9868295	0					
ANR	9868331	PrimaryExpression	2		9868295	1					
ANR	9868332	ExpressionStatement	g = - 1.022 * xyz [ 0 ] + 1.978 * xyz [ 1 ] + 0.044 * xyz [ 2 ]	822:1:22352:22401	9868295	2	True				
ANR	9868333	AssignmentExpression	g = - 1.022 * xyz [ 0 ] + 1.978 * xyz [ 1 ] + 0.044 * xyz [ 2 ]		9868295	0		=			
ANR	9868334	Identifier	g		9868295	0					
ANR	9868335	AdditiveExpression	- 1.022 * xyz [ 0 ] + 1.978 * xyz [ 1 ] + 0.044 * xyz [ 2 ]		9868295	1		+			
ANR	9868336	MultiplicativeExpression	- 1.022 * xyz [ 0 ]		9868295	0		*			
ANR	9868337	UnaryOperationExpression	- 1.022		9868295	0					
ANR	9868338	UnaryOperator	-		9868295	0					
ANR	9868339	PrimaryExpression	1.022		9868295	1					
ANR	9868340	ArrayIndexing	xyz [ 0 ]		9868295	1					
ANR	9868341	Identifier	xyz		9868295	0					
ANR	9868342	PrimaryExpression	0		9868295	1					
ANR	9868343	AdditiveExpression	1.978 * xyz [ 1 ] + 0.044 * xyz [ 2 ]		9868295	1		+			
ANR	9868344	MultiplicativeExpression	1.978 * xyz [ 1 ]		9868295	0		*			
ANR	9868345	PrimaryExpression	1.978		9868295	0					
ANR	9868346	ArrayIndexing	xyz [ 1 ]		9868295	1					
ANR	9868347	Identifier	xyz		9868295	0					
ANR	9868348	PrimaryExpression	1		9868295	1					
ANR	9868349	MultiplicativeExpression	0.044 * xyz [ 2 ]		9868295	1		*			
ANR	9868350	PrimaryExpression	0.044		9868295	0					
ANR	9868351	ArrayIndexing	xyz [ 2 ]		9868295	1					
ANR	9868352	Identifier	xyz		9868295	0					
ANR	9868353	PrimaryExpression	2		9868295	1					
ANR	9868354	ExpressionStatement	b = 0.061 * xyz [ 0 ] + - 0.224 * xyz [ 1 ] + 1.163 * xyz [ 2 ]	823:1:22404:22453	9868295	3	True				
ANR	9868355	AssignmentExpression	b = 0.061 * xyz [ 0 ] + - 0.224 * xyz [ 1 ] + 1.163 * xyz [ 2 ]		9868295	0		=			
ANR	9868356	Identifier	b		9868295	0					
ANR	9868357	AdditiveExpression	0.061 * xyz [ 0 ] + - 0.224 * xyz [ 1 ] + 1.163 * xyz [ 2 ]		9868295	1		+			
ANR	9868358	MultiplicativeExpression	0.061 * xyz [ 0 ]		9868295	0		*			
ANR	9868359	PrimaryExpression	0.061		9868295	0					
ANR	9868360	ArrayIndexing	xyz [ 0 ]		9868295	1					
ANR	9868361	Identifier	xyz		9868295	0					
ANR	9868362	PrimaryExpression	0		9868295	1					
ANR	9868363	AdditiveExpression	- 0.224 * xyz [ 1 ] + 1.163 * xyz [ 2 ]		9868295	1		+			
ANR	9868364	MultiplicativeExpression	- 0.224 * xyz [ 1 ]		9868295	0		*			
ANR	9868365	UnaryOperationExpression	- 0.224		9868295	0					
ANR	9868366	UnaryOperator	-		9868295	0					
ANR	9868367	PrimaryExpression	0.224		9868295	1					
ANR	9868368	ArrayIndexing	xyz [ 1 ]		9868295	1					
ANR	9868369	Identifier	xyz		9868295	0					
ANR	9868370	PrimaryExpression	1		9868295	1					
ANR	9868371	MultiplicativeExpression	1.163 * xyz [ 2 ]		9868295	1		*			
ANR	9868372	PrimaryExpression	1.163		9868295	0					
ANR	9868373	ArrayIndexing	xyz [ 2 ]		9868295	1					
ANR	9868374	Identifier	xyz		9868295	0					
ANR	9868375	PrimaryExpression	2		9868295	1					
ANR	9868376	ExpressionStatement	rgb [ 0 ] = ( uint8 ) ( ( r <= 0. ) ? 0 : ( r >= 1. ) ? 255 : ( int ) ( 256. * sqrt ( r ) ) )	826:1:22561:22630	9868295	4	True				
ANR	9868377	AssignmentExpression	rgb [ 0 ] = ( uint8 ) ( ( r <= 0. ) ? 0 : ( r >= 1. ) ? 255 : ( int ) ( 256. * sqrt ( r ) ) )		9868295	0		=			
ANR	9868378	ArrayIndexing	rgb [ 0 ]		9868295	0					
ANR	9868379	Identifier	rgb		9868295	0					
ANR	9868380	PrimaryExpression	0		9868295	1					
ANR	9868381	CastExpression	( uint8 ) ( ( r <= 0. ) ? 0 : ( r >= 1. ) ? 255 : ( int ) ( 256. * sqrt ( r ) ) )		9868295	1					
ANR	9868382	CastTarget	uint8		9868295	0					
ANR	9868383	ConditionalExpression	( r <= 0. ) ? 0 : ( r >= 1. ) ? 255 : ( int ) ( 256. * sqrt ( r ) )		9868295	1					
ANR	9868384	Condition	r <= 0.		9868295	0					
ANR	9868385	RelationalExpression	r <= 0.		9868295	0		<=			
ANR	9868386	Identifier	r		9868295	0					
ANR	9868387	PrimaryExpression	0.		9868295	1					
ANR	9868388	PrimaryExpression	0		9868295	1					
ANR	9868389	ConditionalExpression	( r >= 1. ) ? 255 : ( int ) ( 256. * sqrt ( r ) )		9868295	2					
ANR	9868390	Condition	r >= 1.		9868295	0					
ANR	9868391	RelationalExpression	r >= 1.		9868295	0		>=			
ANR	9868392	Identifier	r		9868295	0					
ANR	9868393	PrimaryExpression	1.		9868295	1					
ANR	9868394	PrimaryExpression	255		9868295	1					
ANR	9868395	CastExpression	( int ) ( 256. * sqrt ( r ) )		9868295	2					
ANR	9868396	CastTarget	int		9868295	0					
ANR	9868397	MultiplicativeExpression	256. * sqrt ( r )		9868295	1		*			
ANR	9868398	PrimaryExpression	256.		9868295	0					
ANR	9868399	CallExpression	sqrt ( r )		9868295	1					
ANR	9868400	Callee	sqrt		9868295	0					
ANR	9868401	Identifier	sqrt		9868295	0					
ANR	9868402	ArgumentList	r		9868295	1					
ANR	9868403	Argument	r		9868295	0					
ANR	9868404	Identifier	r		9868295	0					
ANR	9868405	ExpressionStatement	rgb [ 1 ] = ( uint8 ) ( ( g <= 0. ) ? 0 : ( g >= 1. ) ? 255 : ( int ) ( 256. * sqrt ( g ) ) )	827:1:22633:22702	9868295	5	True				
ANR	9868406	AssignmentExpression	rgb [ 1 ] = ( uint8 ) ( ( g <= 0. ) ? 0 : ( g >= 1. ) ? 255 : ( int ) ( 256. * sqrt ( g ) ) )		9868295	0		=			
ANR	9868407	ArrayIndexing	rgb [ 1 ]		9868295	0					
ANR	9868408	Identifier	rgb		9868295	0					
ANR	9868409	PrimaryExpression	1		9868295	1					
ANR	9868410	CastExpression	( uint8 ) ( ( g <= 0. ) ? 0 : ( g >= 1. ) ? 255 : ( int ) ( 256. * sqrt ( g ) ) )		9868295	1					
ANR	9868411	CastTarget	uint8		9868295	0					
ANR	9868412	ConditionalExpression	( g <= 0. ) ? 0 : ( g >= 1. ) ? 255 : ( int ) ( 256. * sqrt ( g ) )		9868295	1					
ANR	9868413	Condition	g <= 0.		9868295	0					
ANR	9868414	RelationalExpression	g <= 0.		9868295	0		<=			
ANR	9868415	Identifier	g		9868295	0					
ANR	9868416	PrimaryExpression	0.		9868295	1					
ANR	9868417	PrimaryExpression	0		9868295	1					
ANR	9868418	ConditionalExpression	( g >= 1. ) ? 255 : ( int ) ( 256. * sqrt ( g ) )		9868295	2					
ANR	9868419	Condition	g >= 1.		9868295	0					
ANR	9868420	RelationalExpression	g >= 1.		9868295	0		>=			
ANR	9868421	Identifier	g		9868295	0					
ANR	9868422	PrimaryExpression	1.		9868295	1					
ANR	9868423	PrimaryExpression	255		9868295	1					
ANR	9868424	CastExpression	( int ) ( 256. * sqrt ( g ) )		9868295	2					
ANR	9868425	CastTarget	int		9868295	0					
ANR	9868426	MultiplicativeExpression	256. * sqrt ( g )		9868295	1		*			
ANR	9868427	PrimaryExpression	256.		9868295	0					
ANR	9868428	CallExpression	sqrt ( g )		9868295	1					
ANR	9868429	Callee	sqrt		9868295	0					
ANR	9868430	Identifier	sqrt		9868295	0					
ANR	9868431	ArgumentList	g		9868295	1					
ANR	9868432	Argument	g		9868295	0					
ANR	9868433	Identifier	g		9868295	0					
ANR	9868434	ExpressionStatement	rgb [ 2 ] = ( uint8 ) ( ( b <= 0. ) ? 0 : ( b >= 1. ) ? 255 : ( int ) ( 256. * sqrt ( b ) ) )	828:1:22705:22774	9868295	6	True				
ANR	9868435	AssignmentExpression	rgb [ 2 ] = ( uint8 ) ( ( b <= 0. ) ? 0 : ( b >= 1. ) ? 255 : ( int ) ( 256. * sqrt ( b ) ) )		9868295	0		=			
ANR	9868436	ArrayIndexing	rgb [ 2 ]		9868295	0					
ANR	9868437	Identifier	rgb		9868295	0					
ANR	9868438	PrimaryExpression	2		9868295	1					
ANR	9868439	CastExpression	( uint8 ) ( ( b <= 0. ) ? 0 : ( b >= 1. ) ? 255 : ( int ) ( 256. * sqrt ( b ) ) )		9868295	1					
ANR	9868440	CastTarget	uint8		9868295	0					
ANR	9868441	ConditionalExpression	( b <= 0. ) ? 0 : ( b >= 1. ) ? 255 : ( int ) ( 256. * sqrt ( b ) )		9868295	1					
ANR	9868442	Condition	b <= 0.		9868295	0					
ANR	9868443	RelationalExpression	b <= 0.		9868295	0		<=			
ANR	9868444	Identifier	b		9868295	0					
ANR	9868445	PrimaryExpression	0.		9868295	1					
ANR	9868446	PrimaryExpression	0		9868295	1					
ANR	9868447	ConditionalExpression	( b >= 1. ) ? 255 : ( int ) ( 256. * sqrt ( b ) )		9868295	2					
ANR	9868448	Condition	b >= 1.		9868295	0					
ANR	9868449	RelationalExpression	b >= 1.		9868295	0		>=			
ANR	9868450	Identifier	b		9868295	0					
ANR	9868451	PrimaryExpression	1.		9868295	1					
ANR	9868452	PrimaryExpression	255		9868295	1					
ANR	9868453	CastExpression	( int ) ( 256. * sqrt ( b ) )		9868295	2					
ANR	9868454	CastTarget	int		9868295	0					
ANR	9868455	MultiplicativeExpression	256. * sqrt ( b )		9868295	1		*			
ANR	9868456	PrimaryExpression	256.		9868295	0					
ANR	9868457	CallExpression	sqrt ( b )		9868295	1					
ANR	9868458	Callee	sqrt		9868295	0					
ANR	9868459	Identifier	sqrt		9868295	0					
ANR	9868460	ArgumentList	b		9868295	1					
ANR	9868461	Argument	b		9868295	0					
ANR	9868462	Identifier	b		9868295	0					
ANR	9868463	ReturnType	void		9868295	1					
ANR	9868464	Identifier	XYZtoRGB24		9868295	2					
ANR	9868465	ParameterList	"float xyz [ 3 ] , uint8 rgb [ 3 ]"		9868295	3					
ANR	9868466	Parameter	float xyz [ 3 ]	817:11:22215:22226	9868295	0	True				
ANR	9868467	ParameterType	float [ 3 ]		9868295	0					
ANR	9868468	Identifier	xyz		9868295	1					
ANR	9868469	Parameter	uint8 rgb [ 3 ]	817:25:22229:22240	9868295	1	True				
ANR	9868470	ParameterType	uint8 [ 3 ]		9868295	0					
ANR	9868471	Identifier	rgb		9868295	1					
ANR	9868472	CFGEntryNode	ENTRY		9868295		True				
ANR	9868473	CFGExitNode	EXIT		9868295		True				
ANR	9868474	Symbol	b		9868295						
ANR	9868475	Symbol	r		9868295						
ANR	9868476	Symbol	* xyz		9868295						
ANR	9868477	Symbol	sqrt		9868295						
ANR	9868478	Symbol	g		9868295						
ANR	9868479	Symbol	* rgb		9868295						
ANR	9868480	Symbol	xyz		9868295						
ANR	9868481	Symbol	rgb		9868295						
ANR	9868482	Function	LogL10toY	834:0:22812:22959							
ANR	9868483	FunctionDef	LogL10toY (int p10)		9868482	0					
ANR	9868484	CompoundStatement		836:0:22880:22959	9868482	0					
ANR	9868485	IfStatement	if ( p10 == 0 )		9868482	0					
ANR	9868486	Condition	p10 == 0	837:5:22887:22894	9868482	0	True				
ANR	9868487	EqualityExpression	p10 == 0		9868482	0		==			
ANR	9868488	Identifier	p10		9868482	0					
ANR	9868489	PrimaryExpression	0		9868482	1					
ANR	9868490	ReturnStatement	return ( 0. ) ;	838:2:22899:22910	9868482	1	True				
ANR	9868491	PrimaryExpression	0.		9868482	0					
ANR	9868492	ReturnStatement	return ( exp ( M_LN2 / 64. * ( p10 + .5 ) - M_LN2 * 12. ) ) ;	839:1:22913:22957	9868482	1	True				
ANR	9868493	CallExpression	exp ( M_LN2 / 64. * ( p10 + .5 ) - M_LN2 * 12. )		9868482	0					
ANR	9868494	Callee	exp		9868482	0					
ANR	9868495	Identifier	exp		9868482	0					
ANR	9868496	ArgumentList	M_LN2 / 64. * ( p10 + .5 ) - M_LN2 * 12.		9868482	1					
ANR	9868497	Argument	M_LN2 / 64. * ( p10 + .5 ) - M_LN2 * 12.		9868482	0					
ANR	9868498	AdditiveExpression	M_LN2 / 64. * ( p10 + .5 ) - M_LN2 * 12.		9868482	0		-			
ANR	9868499	MultiplicativeExpression	M_LN2 / 64. * ( p10 + .5 )		9868482	0		/			
ANR	9868500	Identifier	M_LN2		9868482	0					
ANR	9868501	MultiplicativeExpression	64. * ( p10 + .5 )		9868482	1		*			
ANR	9868502	PrimaryExpression	64.		9868482	0					
ANR	9868503	AdditiveExpression	p10 + .5		9868482	1		+			
ANR	9868504	Identifier	p10		9868482	0					
ANR	9868505	PrimaryExpression	.5		9868482	1					
ANR	9868506	MultiplicativeExpression	M_LN2 * 12.		9868482	1		*			
ANR	9868507	Identifier	M_LN2		9868482	0					
ANR	9868508	PrimaryExpression	12.		9868482	1					
ANR	9868509	ReturnType	double		9868482	1					
ANR	9868510	Identifier	LogL10toY		9868482	2					
ANR	9868511	ParameterList	int p10		9868482	3					
ANR	9868512	Parameter	int p10	835:10:22829:22835	9868482	0	True				
ANR	9868513	ParameterType	int		9868482	0					
ANR	9868514	Identifier	p10		9868482	1					
ANR	9868515	CFGEntryNode	ENTRY		9868482		True				
ANR	9868516	CFGExitNode	EXIT		9868482		True				
ANR	9868517	Symbol	M_LN2		9868482						
ANR	9868518	Symbol	exp		9868482						
ANR	9868519	Symbol	p10		9868482						
ANR	9868520	Function	LogL10fromY	845:0:22995:23184							
ANR	9868521	FunctionDef	"LogL10fromY (double Y , int em)"		9868520	0					
ANR	9868522	CompoundStatement		847:0:23058:23184	9868520	0					
ANR	9868523	IfStatement	if ( Y >= 15.742 )		9868520	0					
ANR	9868524	Condition	Y >= 15.742	848:5:23065:23075	9868520	0	True				
ANR	9868525	RelationalExpression	Y >= 15.742		9868520	0		>=			
ANR	9868526	Identifier	Y		9868520	0					
ANR	9868527	PrimaryExpression	15.742		9868520	1					
ANR	9868528	ReturnStatement	return ( 0x3ff ) ;	849:2:23080:23094	9868520	1	True				
ANR	9868529	PrimaryExpression	0x3ff		9868520	0					
ANR	9868530	ElseStatement	else		9868520	0					
ANR	9868531	IfStatement	if ( Y <= .00024283 )		9868520	0					
ANR	9868532	Condition	Y <= .00024283	850:10:23106:23119	9868520	0	True				
ANR	9868533	RelationalExpression	Y <= .00024283		9868520	0		<=			
ANR	9868534	Identifier	Y		9868520	0					
ANR	9868535	PrimaryExpression	.00024283		9868520	1					
ANR	9868536	ReturnStatement	return ( 0 ) ;	851:2:23124:23134	9868520	1	True				
ANR	9868537	PrimaryExpression	0		9868520	0					
ANR	9868538	ElseStatement	else		9868520	0					
ANR	9868539	ReturnStatement	"return itrunc ( 64. * ( log2 ( Y ) + 12. ) , em ) ;"	853:2:23144:23182	9868520	0	True				
ANR	9868540	CallExpression	"itrunc ( 64. * ( log2 ( Y ) + 12. ) , em )"		9868520	0					
ANR	9868541	Callee	itrunc		9868520	0					
ANR	9868542	Identifier	itrunc		9868520	0					
ANR	9868543	ArgumentList	64. * ( log2 ( Y ) + 12. )		9868520	1					
ANR	9868544	Argument	64. * ( log2 ( Y ) + 12. )		9868520	0					
ANR	9868545	MultiplicativeExpression	64. * ( log2 ( Y ) + 12. )		9868520	0		*			
ANR	9868546	PrimaryExpression	64.		9868520	0					
ANR	9868547	AdditiveExpression	log2 ( Y ) + 12.		9868520	1		+			
ANR	9868548	CallExpression	log2 ( Y )		9868520	0					
ANR	9868549	Callee	log2		9868520	0					
ANR	9868550	Identifier	log2		9868520	0					
ANR	9868551	ArgumentList	Y		9868520	1					
ANR	9868552	Argument	Y		9868520	0					
ANR	9868553	Identifier	Y		9868520	0					
ANR	9868554	PrimaryExpression	12.		9868520	1					
ANR	9868555	Argument	em		9868520	1					
ANR	9868556	Identifier	em		9868520	0					
ANR	9868557	ReturnType	int		9868520	1					
ANR	9868558	Identifier	LogL10fromY		9868520	2					
ANR	9868559	ParameterList	"double Y , int em"		9868520	3					
ANR	9868560	Parameter	double Y	846:12:23011:23018	9868520	0	True				
ANR	9868561	ParameterType	double		9868520	0					
ANR	9868562	Identifier	Y		9868520	1					
ANR	9868563	Parameter	int em	846:22:23021:23026	9868520	1	True				
ANR	9868564	ParameterType	int		9868520	0					
ANR	9868565	Identifier	em		9868520	1					
ANR	9868566	CFGEntryNode	ENTRY		9868520		True				
ANR	9868567	CFGExitNode	EXIT		9868520		True				
ANR	9868568	Symbol	itrunc		9868520						
ANR	9868569	Symbol	em		9868520						
ANR	9868570	Symbol	Y		9868520						
ANR	9868571	Symbol	log2		9868520						
ANR	9868572	Function	oog_encode	860:0:23308:24574							
ANR	9868573	FunctionDef	"oog_encode (double u , double v)"		9868572	0					
ANR	9868574	CompoundStatement		862:0:23384:24574	9868572	0					
ANR	9868575	Statement	static	863:1:23387:23392	9868572	0	True				
ANR	9868576	IdentifierDeclStatement	int oog_table [ NANGLES ] ;	863:8:23394:23416	9868572	1	True				
ANR	9868577	IdentifierDecl	oog_table [ NANGLES ]		9868572	0					
ANR	9868578	IdentifierDeclType	int [ NANGLES ]		9868572	0					
ANR	9868579	Identifier	oog_table		9868572	1					
ANR	9868580	Identifier	NANGLES		9868572	2					
ANR	9868581	Statement	static	864:1:23419:23424	9868572	2	True				
ANR	9868582	IdentifierDeclStatement	int initialized = 0 ;	864:8:23426:23445	9868572	3	True				
ANR	9868583	IdentifierDecl	initialized = 0		9868572	0					
ANR	9868584	IdentifierDeclType	int		9868572	0					
ANR	9868585	Identifier	initialized		9868572	1					
ANR	9868586	AssignmentExpression	initialized = 0		9868572	2		=			
ANR	9868587	Identifier	initialized		9868572	0					
ANR	9868588	PrimaryExpression	0		9868572	1					
ANR	9868589	Statement	register	865:1:23448:23455	9868572	4	True				
ANR	9868590	IdentifierDeclStatement	int i ;	865:10:23457:23462	9868572	5	True				
ANR	9868591	IdentifierDecl	i		9868572	0					
ANR	9868592	IdentifierDeclType	int		9868572	0					
ANR	9868593	Identifier	i		9868572	1					
ANR	9868594	IfStatement	if ( ! initialized )		9868572	6					
ANR	9868595	Condition	! initialized	867:5:23470:23481	9868572	0	True				
ANR	9868596	UnaryOperationExpression	! initialized		9868572	0					
ANR	9868597	UnaryOperator	!		9868572	0					
ANR	9868598	Identifier	initialized		9868572	1					
ANR	9868599	CompoundStatement		8:2:175:192	9868572	1					
ANR	9868600	IdentifierDeclStatement	"double eps [ NANGLES ] , ua , va , ang , epsa ;"	868:2:23518:23556	9868572	0	True				
ANR	9868601	IdentifierDecl	eps [ NANGLES ]		9868572	0					
ANR	9868602	IdentifierDeclType	double [ NANGLES ]		9868572	0					
ANR	9868603	Identifier	eps		9868572	1					
ANR	9868604	Identifier	NANGLES		9868572	2					
ANR	9868605	IdentifierDecl	ua		9868572	1					
ANR	9868606	IdentifierDeclType	double		9868572	0					
ANR	9868607	Identifier	ua		9868572	1					
ANR	9868608	IdentifierDecl	va		9868572	2					
ANR	9868609	IdentifierDeclType	double		9868572	0					
ANR	9868610	Identifier	va		9868572	1					
ANR	9868611	IdentifierDecl	ang		9868572	3					
ANR	9868612	IdentifierDeclType	double		9868572	0					
ANR	9868613	Identifier	ang		9868572	1					
ANR	9868614	IdentifierDecl	epsa		9868572	4					
ANR	9868615	IdentifierDeclType	double		9868572	0					
ANR	9868616	Identifier	epsa		9868572	1					
ANR	9868617	IdentifierDeclStatement	"int ui , vi , ustep ;"	869:2:23560:23577	9868572	1	True				
ANR	9868618	IdentifierDecl	ui		9868572	0					
ANR	9868619	IdentifierDeclType	int		9868572	0					
ANR	9868620	Identifier	ui		9868572	1					
ANR	9868621	IdentifierDecl	vi		9868572	1					
ANR	9868622	IdentifierDeclType	int		9868572	0					
ANR	9868623	Identifier	vi		9868572	1					
ANR	9868624	IdentifierDecl	ustep		9868572	2					
ANR	9868625	IdentifierDeclType	int		9868572	0					
ANR	9868626	Identifier	ustep		9868572	1					
ANR	9868627	ForStatement	for ( i = NANGLES ; i -- ; )		9868572	2					
ANR	9868628	ForInit	i = NANGLES ;	870:7:23586:23597	9868572	0	True				
ANR	9868629	AssignmentExpression	i = NANGLES		9868572	0		=			
ANR	9868630	Identifier	i		9868572	0					
ANR	9868631	Identifier	NANGLES		9868572	1					
ANR	9868632	Condition	i --	870:20:23599:23601	9868572	1	True				
ANR	9868633	PostIncDecOperationExpression	i --		9868572	0					
ANR	9868634	Identifier	i		9868572	0					
ANR	9868635	IncDec	--		9868572	1					
ANR	9868636	ExpressionStatement	eps [ i ] = 2.	871:3:23609:23620	9868572	2	True				
ANR	9868637	AssignmentExpression	eps [ i ] = 2.		9868572	0		=			
ANR	9868638	ArrayIndexing	eps [ i ]		9868572	0					
ANR	9868639	Identifier	eps		9868572	0					
ANR	9868640	Identifier	i		9868572	1					
ANR	9868641	PrimaryExpression	2.		9868572	1					
ANR	9868642	ForStatement	for ( vi = UV_NVS ; vi -- ; )		9868572	3					
ANR	9868643	ForInit	vi = UV_NVS ;	872:7:23629:23640	9868572	0	True				
ANR	9868644	AssignmentExpression	vi = UV_NVS		9868572	0		=			
ANR	9868645	Identifier	vi		9868572	0					
ANR	9868646	Identifier	UV_NVS		9868572	1					
ANR	9868647	Condition	vi --	872:20:23642:23645	9868572	1	True				
ANR	9868648	PostIncDecOperationExpression	vi --		9868572	0					
ANR	9868649	Identifier	vi		9868572	0					
ANR	9868650	IncDec	--		9868572	1					
ANR	9868651	CompoundStatement		11:28:265:265	9868572	2					
ANR	9868652	ExpressionStatement	va = UV_VSTART + ( vi + .5 ) * UV_SQSIZ	873:3:23655:23688	9868572	0	True				
ANR	9868653	AssignmentExpression	va = UV_VSTART + ( vi + .5 ) * UV_SQSIZ		9868572	0		=			
ANR	9868654	Identifier	va		9868572	0					
ANR	9868655	AdditiveExpression	UV_VSTART + ( vi + .5 ) * UV_SQSIZ		9868572	1		+			
ANR	9868656	Identifier	UV_VSTART		9868572	0					
ANR	9868657	MultiplicativeExpression	( vi + .5 ) * UV_SQSIZ		9868572	1		*			
ANR	9868658	AdditiveExpression	vi + .5		9868572	0		+			
ANR	9868659	Identifier	vi		9868572	0					
ANR	9868660	PrimaryExpression	.5		9868572	1					
ANR	9868661	Identifier	UV_SQSIZ		9868572	1					
ANR	9868662	ExpressionStatement	ustep = uv_row [ vi ] . nus - 1	874:3:23693:23717	9868572	1	True				
ANR	9868663	AssignmentExpression	ustep = uv_row [ vi ] . nus - 1		9868572	0		=			
ANR	9868664	Identifier	ustep		9868572	0					
ANR	9868665	AdditiveExpression	uv_row [ vi ] . nus - 1		9868572	1		-			
ANR	9868666	MemberAccess	uv_row [ vi ] . nus		9868572	0					
ANR	9868667	ArrayIndexing	uv_row [ vi ]		9868572	0					
ANR	9868668	Identifier	uv_row		9868572	0					
ANR	9868669	Identifier	vi		9868572	1					
ANR	9868670	Identifier	nus		9868572	1					
ANR	9868671	PrimaryExpression	1		9868572	1					
ANR	9868672	IfStatement	if ( vi == UV_NVS - 1 || vi == 0 || ustep <= 0 )		9868572	2					
ANR	9868673	Condition	vi == UV_NVS - 1 || vi == 0 || ustep <= 0	875:7:23726:23764	9868572	0	True				
ANR	9868674	OrExpression	vi == UV_NVS - 1 || vi == 0 || ustep <= 0		9868572	0		||			
ANR	9868675	EqualityExpression	vi == UV_NVS - 1		9868572	0		==			
ANR	9868676	Identifier	vi		9868572	0					
ANR	9868677	AdditiveExpression	UV_NVS - 1		9868572	1		-			
ANR	9868678	Identifier	UV_NVS		9868572	0					
ANR	9868679	PrimaryExpression	1		9868572	1					
ANR	9868680	OrExpression	vi == 0 || ustep <= 0		9868572	1		||			
ANR	9868681	EqualityExpression	vi == 0		9868572	0		==			
ANR	9868682	Identifier	vi		9868572	0					
ANR	9868683	PrimaryExpression	0		9868572	1					
ANR	9868684	RelationalExpression	ustep <= 0		9868572	1		<=			
ANR	9868685	Identifier	ustep		9868572	0					
ANR	9868686	PrimaryExpression	0		9868572	1					
ANR	9868687	ExpressionStatement	ustep = 1	876:4:23771:23780	9868572	1	True				
ANR	9868688	AssignmentExpression	ustep = 1		9868572	0		=			
ANR	9868689	Identifier	ustep		9868572	0					
ANR	9868690	PrimaryExpression	1		9868572	1					
ANR	9868691	ForStatement	for ( ui = uv_row [ vi ] . nus - 1 ; ui >= 0 ; ui -= ustep )		9868572	3					
ANR	9868692	ForInit	ui = uv_row [ vi ] . nus - 1 ;	877:8:23790:23811	9868572	0	True				
ANR	9868693	AssignmentExpression	ui = uv_row [ vi ] . nus - 1		9868572	0		=			
ANR	9868694	Identifier	ui		9868572	0					
ANR	9868695	AdditiveExpression	uv_row [ vi ] . nus - 1		9868572	1		-			
ANR	9868696	MemberAccess	uv_row [ vi ] . nus		9868572	0					
ANR	9868697	ArrayIndexing	uv_row [ vi ]		9868572	0					
ANR	9868698	Identifier	uv_row		9868572	0					
ANR	9868699	Identifier	vi		9868572	1					
ANR	9868700	Identifier	nus		9868572	1					
ANR	9868701	PrimaryExpression	1		9868572	1					
ANR	9868702	Condition	ui >= 0	877:31:23813:23819	9868572	1	True				
ANR	9868703	RelationalExpression	ui >= 0		9868572	0		>=			
ANR	9868704	Identifier	ui		9868572	0					
ANR	9868705	PrimaryExpression	0		9868572	1					
ANR	9868706	AssignmentExpression	ui -= ustep	877:40:23822:23832	9868572	2	True	-=			
ANR	9868707	Identifier	ui		9868572	0					
ANR	9868708	Identifier	ustep		9868572	1					
ANR	9868709	CompoundStatement		16:53:450:450	9868572	3					
ANR	9868710	ExpressionStatement	ua = uv_row [ vi ] . ustart + ( ui + .5 ) * UV_SQSIZ	878:4:23841:23882	9868572	0	True				
ANR	9868711	AssignmentExpression	ua = uv_row [ vi ] . ustart + ( ui + .5 ) * UV_SQSIZ		9868572	0		=			
ANR	9868712	Identifier	ua		9868572	0					
ANR	9868713	AdditiveExpression	uv_row [ vi ] . ustart + ( ui + .5 ) * UV_SQSIZ		9868572	1		+			
ANR	9868714	MemberAccess	uv_row [ vi ] . ustart		9868572	0					
ANR	9868715	ArrayIndexing	uv_row [ vi ]		9868572	0					
ANR	9868716	Identifier	uv_row		9868572	0					
ANR	9868717	Identifier	vi		9868572	1					
ANR	9868718	Identifier	ustart		9868572	1					
ANR	9868719	MultiplicativeExpression	( ui + .5 ) * UV_SQSIZ		9868572	1		*			
ANR	9868720	AdditiveExpression	ui + .5		9868572	0		+			
ANR	9868721	Identifier	ui		9868572	0					
ANR	9868722	PrimaryExpression	.5		9868572	1					
ANR	9868723	Identifier	UV_SQSIZ		9868572	1					
ANR	9868724	ExpressionStatement	"ang = uv2ang ( ua , va )"	879:4:23888:23908	9868572	1	True				
ANR	9868725	AssignmentExpression	"ang = uv2ang ( ua , va )"		9868572	0		=			
ANR	9868726	Identifier	ang		9868572	0					
ANR	9868727	CallExpression	"uv2ang ( ua , va )"		9868572	1					
ANR	9868728	Callee	uv2ang		9868572	0					
ANR	9868729	Identifier	uv2ang		9868572	0					
ANR	9868730	ArgumentList	ua		9868572	1					
ANR	9868731	Argument	ua		9868572	0					
ANR	9868732	Identifier	ua		9868572	0					
ANR	9868733	Argument	va		9868572	1					
ANR	9868734	Identifier	va		9868572	0					
ANR	9868735	ExpressionStatement	i = ( int ) ang	880:4:23914:23927	9868572	2	True				
ANR	9868736	AssignmentExpression	i = ( int ) ang		9868572	0		=			
ANR	9868737	Identifier	i		9868572	0					
ANR	9868738	CastExpression	( int ) ang		9868572	1					
ANR	9868739	CastTarget	int		9868572	0					
ANR	9868740	Identifier	ang		9868572	1					
ANR	9868741	ExpressionStatement	epsa = fabs ( ang - ( i + .5 ) )	881:4:23933:23958	9868572	3	True				
ANR	9868742	AssignmentExpression	epsa = fabs ( ang - ( i + .5 ) )		9868572	0		=			
ANR	9868743	Identifier	epsa		9868572	0					
ANR	9868744	CallExpression	fabs ( ang - ( i + .5 ) )		9868572	1					
ANR	9868745	Callee	fabs		9868572	0					
ANR	9868746	Identifier	fabs		9868572	0					
ANR	9868747	ArgumentList	ang - ( i + .5 )		9868572	1					
ANR	9868748	Argument	ang - ( i + .5 )		9868572	0					
ANR	9868749	AdditiveExpression	ang - ( i + .5 )		9868572	0		-			
ANR	9868750	Identifier	ang		9868572	0					
ANR	9868751	AdditiveExpression	i + .5		9868572	1		+			
ANR	9868752	Identifier	i		9868572	0					
ANR	9868753	PrimaryExpression	.5		9868572	1					
ANR	9868754	IfStatement	if ( epsa < eps [ i ] )		9868572	4					
ANR	9868755	Condition	epsa < eps [ i ]	882:8:23968:23980	9868572	0	True				
ANR	9868756	RelationalExpression	epsa < eps [ i ]		9868572	0		<			
ANR	9868757	Identifier	epsa		9868572	0					
ANR	9868758	ArrayIndexing	eps [ i ]		9868572	1					
ANR	9868759	Identifier	eps		9868572	0					
ANR	9868760	Identifier	i		9868572	1					
ANR	9868761	CompoundStatement		21:23:598:598	9868572	1					
ANR	9868762	ExpressionStatement	oog_table [ i ] = uv_row [ vi ] . ncum + ui	883:5:23990:24025	9868572	0	True				
ANR	9868763	AssignmentExpression	oog_table [ i ] = uv_row [ vi ] . ncum + ui		9868572	0		=			
ANR	9868764	ArrayIndexing	oog_table [ i ]		9868572	0					
ANR	9868765	Identifier	oog_table		9868572	0					
ANR	9868766	Identifier	i		9868572	1					
ANR	9868767	AdditiveExpression	uv_row [ vi ] . ncum + ui		9868572	1		+			
ANR	9868768	MemberAccess	uv_row [ vi ] . ncum		9868572	0					
ANR	9868769	ArrayIndexing	uv_row [ vi ]		9868572	0					
ANR	9868770	Identifier	uv_row		9868572	0					
ANR	9868771	Identifier	vi		9868572	1					
ANR	9868772	Identifier	ncum		9868572	1					
ANR	9868773	Identifier	ui		9868572	1					
ANR	9868774	ExpressionStatement	eps [ i ] = epsa	884:5:24032:24045	9868572	1	True				
ANR	9868775	AssignmentExpression	eps [ i ] = epsa		9868572	0		=			
ANR	9868776	ArrayIndexing	eps [ i ]		9868572	0					
ANR	9868777	Identifier	eps		9868572	0					
ANR	9868778	Identifier	i		9868572	1					
ANR	9868779	Identifier	epsa		9868572	1					
ANR	9868780	ForStatement	for ( i = NANGLES ; i -- ; )		9868572	4					
ANR	9868781	ForInit	i = NANGLES ;	888:7:24069:24080	9868572	0	True				
ANR	9868782	AssignmentExpression	i = NANGLES		9868572	0		=			
ANR	9868783	Identifier	i		9868572	0					
ANR	9868784	Identifier	NANGLES		9868572	1					
ANR	9868785	Condition	i --	888:20:24082:24084	9868572	1	True				
ANR	9868786	PostIncDecOperationExpression	i --		9868572	0					
ANR	9868787	Identifier	i		9868572	0					
ANR	9868788	IncDec	--		9868572	1					
ANR	9868789	IfStatement	if ( eps [ i ] > 1.5 )		9868572	2					
ANR	9868790	Condition	eps [ i ] > 1.5	889:7:24117:24128	9868572	0	True				
ANR	9868791	RelationalExpression	eps [ i ] > 1.5		9868572	0		>			
ANR	9868792	ArrayIndexing	eps [ i ]		9868572	0					
ANR	9868793	Identifier	eps		9868572	0					
ANR	9868794	Identifier	i		9868572	1					
ANR	9868795	PrimaryExpression	1.5		9868572	1					
ANR	9868796	CompoundStatement		29:4:752:762	9868572	1					
ANR	9868797	IdentifierDeclStatement	"int i1 , i2 ;"	890:4:24137:24147	9868572	0	True				
ANR	9868798	IdentifierDecl	i1		9868572	0					
ANR	9868799	IdentifierDeclType	int		9868572	0					
ANR	9868800	Identifier	i1		9868572	1					
ANR	9868801	IdentifierDecl	i2		9868572	1					
ANR	9868802	IdentifierDeclType	int		9868572	0					
ANR	9868803	Identifier	i2		9868572	1					
ANR	9868804	ForStatement	for ( i1 = 1 ; i1 < NANGLES / 2 ; i1 ++ )		9868572	1					
ANR	9868805	ForInit	i1 = 1 ;	891:9:24158:24164	9868572	0	True				
ANR	9868806	AssignmentExpression	i1 = 1		9868572	0		=			
ANR	9868807	Identifier	i1		9868572	0					
ANR	9868808	PrimaryExpression	1		9868572	1					
ANR	9868809	Condition	i1 < NANGLES / 2	891:17:24166:24179	9868572	1	True				
ANR	9868810	RelationalExpression	i1 < NANGLES / 2		9868572	0		<			
ANR	9868811	Identifier	i1		9868572	0					
ANR	9868812	MultiplicativeExpression	NANGLES / 2		9868572	1		/			
ANR	9868813	Identifier	NANGLES		9868572	0					
ANR	9868814	PrimaryExpression	2		9868572	1					
ANR	9868815	PostIncDecOperationExpression	i1 ++	891:33:24182:24185	9868572	2	True				
ANR	9868816	Identifier	i1		9868572	0					
ANR	9868817	IncDec	++		9868572	1					
ANR	9868818	IfStatement	if ( eps [ ( i + i1 ) % NANGLES ] < 1.5 )		9868572	3					
ANR	9868819	Condition	eps [ ( i + i1 ) % NANGLES ] < 1.5	892:9:24197:24221	9868572	0	True				
ANR	9868820	RelationalExpression	eps [ ( i + i1 ) % NANGLES ] < 1.5		9868572	0		<			
ANR	9868821	ArrayIndexing	eps [ ( i + i1 ) % NANGLES ]		9868572	0					
ANR	9868822	Identifier	eps		9868572	0					
ANR	9868823	MultiplicativeExpression	( i + i1 ) % NANGLES		9868572	1		%			
ANR	9868824	AdditiveExpression	i + i1		9868572	0		+			
ANR	9868825	Identifier	i		9868572	0					
ANR	9868826	Identifier	i1		9868572	1					
ANR	9868827	Identifier	NANGLES		9868572	1					
ANR	9868828	PrimaryExpression	1.5		9868572	1					
ANR	9868829	BreakStatement	break ;	893:6:24230:24235	9868572	1	True				
ANR	9868830	ForStatement	for ( i2 = 1 ; i2 < NANGLES / 2 ; i2 ++ )		9868572	2					
ANR	9868831	ForInit	i2 = 1 ;	894:9:24246:24252	9868572	0	True				
ANR	9868832	AssignmentExpression	i2 = 1		9868572	0		=			
ANR	9868833	Identifier	i2		9868572	0					
ANR	9868834	PrimaryExpression	1		9868572	1					
ANR	9868835	Condition	i2 < NANGLES / 2	894:17:24254:24267	9868572	1	True				
ANR	9868836	RelationalExpression	i2 < NANGLES / 2		9868572	0		<			
ANR	9868837	Identifier	i2		9868572	0					
ANR	9868838	MultiplicativeExpression	NANGLES / 2		9868572	1		/			
ANR	9868839	Identifier	NANGLES		9868572	0					
ANR	9868840	PrimaryExpression	2		9868572	1					
ANR	9868841	PostIncDecOperationExpression	i2 ++	894:33:24270:24273	9868572	2	True				
ANR	9868842	Identifier	i2		9868572	0					
ANR	9868843	IncDec	++		9868572	1					
ANR	9868844	IfStatement	if ( eps [ ( i + NANGLES - i2 ) % NANGLES ] < 1.5 )		9868572	3					
ANR	9868845	Condition	eps [ ( i + NANGLES - i2 ) % NANGLES ] < 1.5	895:9:24285:24317	9868572	0	True				
ANR	9868846	RelationalExpression	eps [ ( i + NANGLES - i2 ) % NANGLES ] < 1.5		9868572	0		<			
ANR	9868847	ArrayIndexing	eps [ ( i + NANGLES - i2 ) % NANGLES ]		9868572	0					
ANR	9868848	Identifier	eps		9868572	0					
ANR	9868849	MultiplicativeExpression	( i + NANGLES - i2 ) % NANGLES		9868572	1		%			
ANR	9868850	AdditiveExpression	i + NANGLES - i2		9868572	0		+			
ANR	9868851	Identifier	i		9868572	0					
ANR	9868852	AdditiveExpression	NANGLES - i2		9868572	1		-			
ANR	9868853	Identifier	NANGLES		9868572	0					
ANR	9868854	Identifier	i2		9868572	1					
ANR	9868855	Identifier	NANGLES		9868572	1					
ANR	9868856	PrimaryExpression	1.5		9868572	1					
ANR	9868857	BreakStatement	break ;	896:6:24326:24331	9868572	1	True				
ANR	9868858	IfStatement	if ( i1 < i2 )		9868572	3					
ANR	9868859	Condition	i1 < i2	897:8:24341:24347	9868572	0	True				
ANR	9868860	RelationalExpression	i1 < i2		9868572	0		<			
ANR	9868861	Identifier	i1		9868572	0					
ANR	9868862	Identifier	i2		9868572	1					
ANR	9868863	ExpressionStatement	oog_table [ i ] = oog_table [ ( i + i1 ) % NANGLES ]	898:5:24355:24401	9868572	1	True				
ANR	9868864	AssignmentExpression	oog_table [ i ] = oog_table [ ( i + i1 ) % NANGLES ]		9868572	0		=			
ANR	9868865	ArrayIndexing	oog_table [ i ]		9868572	0					
ANR	9868866	Identifier	oog_table		9868572	0					
ANR	9868867	Identifier	i		9868572	1					
ANR	9868868	ArrayIndexing	oog_table [ ( i + i1 ) % NANGLES ]		9868572	1					
ANR	9868869	Identifier	oog_table		9868572	0					
ANR	9868870	MultiplicativeExpression	( i + i1 ) % NANGLES		9868572	1		%			
ANR	9868871	AdditiveExpression	i + i1		9868572	0		+			
ANR	9868872	Identifier	i		9868572	0					
ANR	9868873	Identifier	i1		9868572	1					
ANR	9868874	Identifier	NANGLES		9868572	1					
ANR	9868875	ElseStatement	else		9868572	0					
ANR	9868876	ExpressionStatement	oog_table [ i ] = oog_table [ ( i + NANGLES - i2 ) % NANGLES ]	901:5:24417:24471	9868572	0	True				
ANR	9868877	AssignmentExpression	oog_table [ i ] = oog_table [ ( i + NANGLES - i2 ) % NANGLES ]		9868572	0		=			
ANR	9868878	ArrayIndexing	oog_table [ i ]		9868572	0					
ANR	9868879	Identifier	oog_table		9868572	0					
ANR	9868880	Identifier	i		9868572	1					
ANR	9868881	ArrayIndexing	oog_table [ ( i + NANGLES - i2 ) % NANGLES ]		9868572	1					
ANR	9868882	Identifier	oog_table		9868572	0					
ANR	9868883	MultiplicativeExpression	( i + NANGLES - i2 ) % NANGLES		9868572	1		%			
ANR	9868884	AdditiveExpression	i + NANGLES - i2		9868572	0		+			
ANR	9868885	Identifier	i		9868572	0					
ANR	9868886	AdditiveExpression	NANGLES - i2		9868572	1		-			
ANR	9868887	Identifier	NANGLES		9868572	0					
ANR	9868888	Identifier	i2		9868572	1					
ANR	9868889	Identifier	NANGLES		9868572	1					
ANR	9868890	ExpressionStatement	initialized = 1	904:2:24480:24495	9868572	5	True				
ANR	9868891	AssignmentExpression	initialized = 1		9868572	0		=			
ANR	9868892	Identifier	initialized		9868572	0					
ANR	9868893	PrimaryExpression	1		9868572	1					
ANR	9868894	ExpressionStatement	"i = ( int ) uv2ang ( u , v )"	906:1:24501:24523	9868572	7	True				
ANR	9868895	AssignmentExpression	"i = ( int ) uv2ang ( u , v )"		9868572	0		=			
ANR	9868896	Identifier	i		9868572	0					
ANR	9868897	CastExpression	"( int ) uv2ang ( u , v )"		9868572	1					
ANR	9868898	CastTarget	int		9868572	0					
ANR	9868899	CallExpression	"uv2ang ( u , v )"		9868572	1					
ANR	9868900	Callee	uv2ang		9868572	0					
ANR	9868901	Identifier	uv2ang		9868572	0					
ANR	9868902	ArgumentList	u		9868572	1					
ANR	9868903	Argument	u		9868572	0					
ANR	9868904	Identifier	u		9868572	0					
ANR	9868905	Argument	v		9868572	1					
ANR	9868906	Identifier	v		9868572	0					
ANR	9868907	ReturnStatement	return ( oog_table [ i ] ) ;	907:1:24551:24572	9868572	8	True				
ANR	9868908	ArrayIndexing	oog_table [ i ]		9868572	0					
ANR	9868909	Identifier	oog_table		9868572	0					
ANR	9868910	Identifier	i		9868572	1					
ANR	9868911	ReturnType	static int		9868572	1					
ANR	9868912	Identifier	oog_encode		9868572	2					
ANR	9868913	ParameterList	"double u , double v"		9868572	3					
ANR	9868914	Parameter	double u	861:11:23330:23337	9868572	0	True				
ANR	9868915	ParameterType	double		9868572	0					
ANR	9868916	Identifier	u		9868572	1					
ANR	9868917	Parameter	double v	861:21:23340:23347	9868572	1	True				
ANR	9868918	ParameterType	double		9868572	0					
ANR	9868919	Identifier	v		9868572	1					
ANR	9868920	CFGEntryNode	ENTRY		9868572		True				
ANR	9868921	CFGExitNode	EXIT		9868572		True				
ANR	9868922	Symbol	* NANGLES		9868572						
ANR	9868923	Symbol	oog_table		9868572						
ANR	9868924	Symbol	ua		9868572						
ANR	9868925	Symbol	* i2		9868572						
ANR	9868926	Symbol	UV_VSTART		9868572						
ANR	9868927	Symbol	* i1		9868572						
ANR	9868928	Symbol	ui		9868572						
ANR	9868929	Symbol	epsa		9868572						
ANR	9868930	Symbol	initialized		9868572						
ANR	9868931	Symbol	UV_NVS		9868572						
ANR	9868932	Symbol	ang		9868572						
ANR	9868933	Symbol	fabs		9868572						
ANR	9868934	Symbol	ustep		9868572						
ANR	9868935	Symbol	UV_SQSIZ		9868572						
ANR	9868936	Symbol	i1		9868572						
ANR	9868937	Symbol	i		9868572						
ANR	9868938	Symbol	eps		9868572						
ANR	9868939	Symbol	i2		9868572						
ANR	9868940	Symbol	va		9868572						
ANR	9868941	Symbol	* eps		9868572						
ANR	9868942	Symbol	uv_row		9868572						
ANR	9868943	Symbol	uv_row [ vi ] . ncum		9868572						
ANR	9868944	Symbol	uv_row [ vi ] . nus		9868572						
ANR	9868945	Symbol	* oog_table		9868572						
ANR	9868946	Symbol	vi		9868572						
ANR	9868947	Symbol	NANGLES		9868572						
ANR	9868948	Symbol	* i		9868572						
ANR	9868949	Symbol	u		9868572						
ANR	9868950	Symbol	v		9868572						
ANR	9868951	Symbol	uv2ang		9868572						
ANR	9868952	Symbol	* uv_row		9868572						
ANR	9868953	Symbol	* vi		9868572						
ANR	9868954	Symbol	uv_row [ vi ] . ustart		9868572						
ANR	9868955	Function	uv_encode	916:0:24640:25081							
ANR	9868956	FunctionDef	"uv_encode (double u , double v , int em)"		9868955	0					
ANR	9868957	CompoundStatement		918:0:24715:25081	9868955	0					
ANR	9868958	Statement	register	919:1:24718:24725	9868955	0	True				
ANR	9868959	IdentifierDeclStatement	"int vi , ui ;"	919:10:24727:24737	9868955	1	True				
ANR	9868960	IdentifierDecl	vi		9868955	0					
ANR	9868961	IdentifierDeclType	int		9868955	0					
ANR	9868962	Identifier	vi		9868955	1					
ANR	9868963	IdentifierDecl	ui		9868955	1					
ANR	9868964	IdentifierDeclType	int		9868955	0					
ANR	9868965	Identifier	ui		9868955	1					
ANR	9868966	IfStatement	if ( v < UV_VSTART )		9868955	2					
ANR	9868967	Condition	v < UV_VSTART	921:5:24745:24757	9868955	0	True				
ANR	9868968	RelationalExpression	v < UV_VSTART		9868955	0		<			
ANR	9868969	Identifier	v		9868955	0					
ANR	9868970	Identifier	UV_VSTART		9868955	1					
ANR	9868971	ReturnStatement	"return oog_encode ( u , v ) ;"	922:2:24762:24785	9868955	1	True				
ANR	9868972	CallExpression	"oog_encode ( u , v )"		9868955	0					
ANR	9868973	Callee	oog_encode		9868955	0					
ANR	9868974	Identifier	oog_encode		9868955	0					
ANR	9868975	ArgumentList	u		9868955	1					
ANR	9868976	Argument	u		9868955	0					
ANR	9868977	Identifier	u		9868955	0					
ANR	9868978	Argument	v		9868955	1					
ANR	9868979	Identifier	v		9868955	0					
ANR	9868980	ExpressionStatement	"vi = itrunc ( ( v - UV_VSTART ) * ( 1. / UV_SQSIZ ) , em )"	923:1:24788:24834	9868955	3	True				
ANR	9868981	AssignmentExpression	"vi = itrunc ( ( v - UV_VSTART ) * ( 1. / UV_SQSIZ ) , em )"		9868955	0		=			
ANR	9868982	Identifier	vi		9868955	0					
ANR	9868983	CallExpression	"itrunc ( ( v - UV_VSTART ) * ( 1. / UV_SQSIZ ) , em )"		9868955	1					
ANR	9868984	Callee	itrunc		9868955	0					
ANR	9868985	Identifier	itrunc		9868955	0					
ANR	9868986	ArgumentList	( v - UV_VSTART ) * ( 1. / UV_SQSIZ )		9868955	1					
ANR	9868987	Argument	( v - UV_VSTART ) * ( 1. / UV_SQSIZ )		9868955	0					
ANR	9868988	MultiplicativeExpression	( v - UV_VSTART ) * ( 1. / UV_SQSIZ )		9868955	0		*			
ANR	9868989	AdditiveExpression	v - UV_VSTART		9868955	0		-			
ANR	9868990	Identifier	v		9868955	0					
ANR	9868991	Identifier	UV_VSTART		9868955	1					
ANR	9868992	MultiplicativeExpression	1. / UV_SQSIZ		9868955	1		/			
ANR	9868993	PrimaryExpression	1.		9868955	0					
ANR	9868994	Identifier	UV_SQSIZ		9868955	1					
ANR	9868995	Argument	em		9868955	1					
ANR	9868996	Identifier	em		9868955	0					
ANR	9868997	IfStatement	if ( vi >= UV_NVS )		9868955	4					
ANR	9868998	Condition	vi >= UV_NVS	924:5:24841:24852	9868955	0	True				
ANR	9868999	RelationalExpression	vi >= UV_NVS		9868955	0		>=			
ANR	9869000	Identifier	vi		9868955	0					
ANR	9869001	Identifier	UV_NVS		9868955	1					
ANR	9869002	ReturnStatement	"return oog_encode ( u , v ) ;"	925:2:24857:24880	9868955	1	True				
ANR	9869003	CallExpression	"oog_encode ( u , v )"		9868955	0					
ANR	9869004	Callee	oog_encode		9868955	0					
ANR	9869005	Identifier	oog_encode		9868955	0					
ANR	9869006	ArgumentList	u		9868955	1					
ANR	9869007	Argument	u		9868955	0					
ANR	9869008	Identifier	u		9868955	0					
ANR	9869009	Argument	v		9868955	1					
ANR	9869010	Identifier	v		9868955	0					
ANR	9869011	IfStatement	if ( u < uv_row [ vi ] . ustart )		9868955	5					
ANR	9869012	Condition	u < uv_row [ vi ] . ustart	926:5:24887:24907	9868955	0	True				
ANR	9869013	RelationalExpression	u < uv_row [ vi ] . ustart		9868955	0		<			
ANR	9869014	Identifier	u		9868955	0					
ANR	9869015	MemberAccess	uv_row [ vi ] . ustart		9868955	1					
ANR	9869016	ArrayIndexing	uv_row [ vi ]		9868955	0					
ANR	9869017	Identifier	uv_row		9868955	0					
ANR	9869018	Identifier	vi		9868955	1					
ANR	9869019	Identifier	ustart		9868955	1					
ANR	9869020	ReturnStatement	"return oog_encode ( u , v ) ;"	927:2:24912:24935	9868955	1	True				
ANR	9869021	CallExpression	"oog_encode ( u , v )"		9868955	0					
ANR	9869022	Callee	oog_encode		9868955	0					
ANR	9869023	Identifier	oog_encode		9868955	0					
ANR	9869024	ArgumentList	u		9868955	1					
ANR	9869025	Argument	u		9868955	0					
ANR	9869026	Identifier	u		9868955	0					
ANR	9869027	Argument	v		9868955	1					
ANR	9869028	Identifier	v		9868955	0					
ANR	9869029	ExpressionStatement	"ui = itrunc ( ( u - uv_row [ vi ] . ustart ) * ( 1. / UV_SQSIZ ) , em )"	928:1:24938:24992	9868955	6	True				
ANR	9869030	AssignmentExpression	"ui = itrunc ( ( u - uv_row [ vi ] . ustart ) * ( 1. / UV_SQSIZ ) , em )"		9868955	0		=			
ANR	9869031	Identifier	ui		9868955	0					
ANR	9869032	CallExpression	"itrunc ( ( u - uv_row [ vi ] . ustart ) * ( 1. / UV_SQSIZ ) , em )"		9868955	1					
ANR	9869033	Callee	itrunc		9868955	0					
ANR	9869034	Identifier	itrunc		9868955	0					
ANR	9869035	ArgumentList	( u - uv_row [ vi ] . ustart ) * ( 1. / UV_SQSIZ )		9868955	1					
ANR	9869036	Argument	( u - uv_row [ vi ] . ustart ) * ( 1. / UV_SQSIZ )		9868955	0					
ANR	9869037	MultiplicativeExpression	( u - uv_row [ vi ] . ustart ) * ( 1. / UV_SQSIZ )		9868955	0		*			
ANR	9869038	AdditiveExpression	u - uv_row [ vi ] . ustart		9868955	0		-			
ANR	9869039	Identifier	u		9868955	0					
ANR	9869040	MemberAccess	uv_row [ vi ] . ustart		9868955	1					
ANR	9869041	ArrayIndexing	uv_row [ vi ]		9868955	0					
ANR	9869042	Identifier	uv_row		9868955	0					
ANR	9869043	Identifier	vi		9868955	1					
ANR	9869044	Identifier	ustart		9868955	1					
ANR	9869045	MultiplicativeExpression	1. / UV_SQSIZ		9868955	1		/			
ANR	9869046	PrimaryExpression	1.		9868955	0					
ANR	9869047	Identifier	UV_SQSIZ		9868955	1					
ANR	9869048	Argument	em		9868955	1					
ANR	9869049	Identifier	em		9868955	0					
ANR	9869050	IfStatement	if ( ui >= uv_row [ vi ] . nus )		9868955	7					
ANR	9869051	Condition	ui >= uv_row [ vi ] . nus	929:5:24999:25018	9868955	0	True				
ANR	9869052	RelationalExpression	ui >= uv_row [ vi ] . nus		9868955	0		>=			
ANR	9869053	Identifier	ui		9868955	0					
ANR	9869054	MemberAccess	uv_row [ vi ] . nus		9868955	1					
ANR	9869055	ArrayIndexing	uv_row [ vi ]		9868955	0					
ANR	9869056	Identifier	uv_row		9868955	0					
ANR	9869057	Identifier	vi		9868955	1					
ANR	9869058	Identifier	nus		9868955	1					
ANR	9869059	ReturnStatement	"return oog_encode ( u , v ) ;"	930:2:25023:25046	9868955	1	True				
ANR	9869060	CallExpression	"oog_encode ( u , v )"		9868955	0					
ANR	9869061	Callee	oog_encode		9868955	0					
ANR	9869062	Identifier	oog_encode		9868955	0					
ANR	9869063	ArgumentList	u		9868955	1					
ANR	9869064	Argument	u		9868955	0					
ANR	9869065	Identifier	u		9868955	0					
ANR	9869066	Argument	v		9868955	1					
ANR	9869067	Identifier	v		9868955	0					
ANR	9869068	ReturnStatement	return ( uv_row [ vi ] . ncum + ui ) ;	932:1:25050:25079	9868955	8	True				
ANR	9869069	AdditiveExpression	uv_row [ vi ] . ncum + ui		9868955	0		+			
ANR	9869070	MemberAccess	uv_row [ vi ] . ncum		9868955	0					
ANR	9869071	ArrayIndexing	uv_row [ vi ]		9868955	0					
ANR	9869072	Identifier	uv_row		9868955	0					
ANR	9869073	Identifier	vi		9868955	1					
ANR	9869074	Identifier	ncum		9868955	1					
ANR	9869075	Identifier	ui		9868955	1					
ANR	9869076	ReturnType	int		9868955	1					
ANR	9869077	Identifier	uv_encode		9868955	2					
ANR	9869078	ParameterList	"double u , double v , int em"		9868955	3					
ANR	9869079	Parameter	double u	917:10:24654:24661	9868955	0	True				
ANR	9869080	ParameterType	double		9868955	0					
ANR	9869081	Identifier	u		9868955	1					
ANR	9869082	Parameter	double v	917:20:24664:24671	9868955	1	True				
ANR	9869083	ParameterType	double		9868955	0					
ANR	9869084	Identifier	v		9868955	1					
ANR	9869085	Parameter	int em	917:30:24674:24679	9868955	2	True				
ANR	9869086	ParameterType	int		9868955	0					
ANR	9869087	Identifier	em		9868955	1					
ANR	9869088	CFGEntryNode	ENTRY		9868955		True				
ANR	9869089	CFGExitNode	EXIT		9868955		True				
ANR	9869090	Symbol	itrunc		9868955						
ANR	9869091	Symbol	UV_SQSIZ		9868955						
ANR	9869092	Symbol	em		9868955						
ANR	9869093	Symbol	UV_VSTART		9868955						
ANR	9869094	Symbol	oog_encode		9868955						
ANR	9869095	Symbol	uv_row		9868955						
ANR	9869096	Symbol	uv_row [ vi ] . ncum		9868955						
ANR	9869097	Symbol	uv_row [ vi ] . nus		9868955						
ANR	9869098	Symbol	vi		9868955						
ANR	9869099	Symbol	ui		9868955						
ANR	9869100	Symbol	u		9868955						
ANR	9869101	Symbol	v		9868955						
ANR	9869102	Symbol	UV_NVS		9868955						
ANR	9869103	Symbol	* uv_row		9868955						
ANR	9869104	Symbol	* vi		9868955						
ANR	9869105	Symbol	uv_row [ vi ] . ustart		9868955						
ANR	9869106	Function	uv_decode	938:0:25117:25654							
ANR	9869107	FunctionDef	"uv_decode (double * up , double * vp , int c)"		9869106	0					
ANR	9869108	CompoundStatement		940:0:25189:25654	9869106	0					
ANR	9869109	IdentifierDeclStatement	"int upper , lower ;"	941:1:25192:25208	9869106	0	True				
ANR	9869110	IdentifierDecl	upper		9869106	0					
ANR	9869111	IdentifierDeclType	int		9869106	0					
ANR	9869112	Identifier	upper		9869106	1					
ANR	9869113	IdentifierDecl	lower		9869106	1					
ANR	9869114	IdentifierDeclType	int		9869106	0					
ANR	9869115	Identifier	lower		9869106	1					
ANR	9869116	Statement	register	942:1:25211:25218	9869106	1	True				
ANR	9869117	IdentifierDeclStatement	"int ui , vi ;"	942:10:25220:25230	9869106	2	True				
ANR	9869118	IdentifierDecl	ui		9869106	0					
ANR	9869119	IdentifierDeclType	int		9869106	0					
ANR	9869120	Identifier	ui		9869106	1					
ANR	9869121	IdentifierDecl	vi		9869106	1					
ANR	9869122	IdentifierDeclType	int		9869106	0					
ANR	9869123	Identifier	vi		9869106	1					
ANR	9869124	IfStatement	if ( c < 0 || c >= UV_NDIVS )		9869106	3					
ANR	9869125	Condition	c < 0 || c >= UV_NDIVS	944:5:25238:25259	9869106	0	True				
ANR	9869126	OrExpression	c < 0 || c >= UV_NDIVS		9869106	0		||			
ANR	9869127	RelationalExpression	c < 0		9869106	0		<			
ANR	9869128	Identifier	c		9869106	0					
ANR	9869129	PrimaryExpression	0		9869106	1					
ANR	9869130	RelationalExpression	c >= UV_NDIVS		9869106	1		>=			
ANR	9869131	Identifier	c		9869106	0					
ANR	9869132	Identifier	UV_NDIVS		9869106	1					
ANR	9869133	ReturnStatement	return ( - 1 ) ;	945:2:25264:25275	9869106	1	True				
ANR	9869134	UnaryOperationExpression	- 1		9869106	0					
ANR	9869135	UnaryOperator	-		9869106	0					
ANR	9869136	PrimaryExpression	1		9869106	1					
ANR	9869137	ExpressionStatement	lower = 0	946:1:25278:25287	9869106	4	True				
ANR	9869138	AssignmentExpression	lower = 0		9869106	0		=			
ANR	9869139	Identifier	lower		9869106	0					
ANR	9869140	PrimaryExpression	0		9869106	1					
ANR	9869141	ExpressionStatement	upper = UV_NVS	947:1:25313:25327	9869106	5	True				
ANR	9869142	AssignmentExpression	upper = UV_NVS		9869106	0		=			
ANR	9869143	Identifier	upper		9869106	0					
ANR	9869144	Identifier	UV_NVS		9869106	1					
ANR	9869145	WhileStatement	while ( upper - lower > 1 )		9869106	6					
ANR	9869146	Condition	upper - lower > 1	948:8:25337:25353	9869106	0	True				
ANR	9869147	RelationalExpression	upper - lower > 1		9869106	0		>			
ANR	9869148	AdditiveExpression	upper - lower		9869106	0		-			
ANR	9869149	Identifier	upper		9869106	0					
ANR	9869150	Identifier	lower		9869106	1					
ANR	9869151	PrimaryExpression	1		9869106	1					
ANR	9869152	CompoundStatement		9:27:166:166	9869106	1					
ANR	9869153	ExpressionStatement	vi = ( lower + upper ) >> 1	949:2:25360:25385	9869106	0	True				
ANR	9869154	AssignmentExpression	vi = ( lower + upper ) >> 1		9869106	0		=			
ANR	9869155	Identifier	vi		9869106	0					
ANR	9869156	ShiftExpression	( lower + upper ) >> 1		9869106	1		>>			
ANR	9869157	AdditiveExpression	lower + upper		9869106	0		+			
ANR	9869158	Identifier	lower		9869106	0					
ANR	9869159	Identifier	upper		9869106	1					
ANR	9869160	PrimaryExpression	1		9869106	1					
ANR	9869161	ExpressionStatement	ui = c - uv_row [ vi ] . ncum	950:2:25389:25413	9869106	1	True				
ANR	9869162	AssignmentExpression	ui = c - uv_row [ vi ] . ncum		9869106	0		=			
ANR	9869163	Identifier	ui		9869106	0					
ANR	9869164	AdditiveExpression	c - uv_row [ vi ] . ncum		9869106	1		-			
ANR	9869165	Identifier	c		9869106	0					
ANR	9869166	MemberAccess	uv_row [ vi ] . ncum		9869106	1					
ANR	9869167	ArrayIndexing	uv_row [ vi ]		9869106	0					
ANR	9869168	Identifier	uv_row		9869106	0					
ANR	9869169	Identifier	vi		9869106	1					
ANR	9869170	Identifier	ncum		9869106	1					
ANR	9869171	IfStatement	if ( ui > 0 )		9869106	2					
ANR	9869172	Condition	ui > 0	951:6:25421:25426	9869106	0	True				
ANR	9869173	RelationalExpression	ui > 0		9869106	0		>			
ANR	9869174	Identifier	ui		9869106	0					
ANR	9869175	PrimaryExpression	0		9869106	1					
ANR	9869176	ExpressionStatement	lower = vi	952:3:25432:25442	9869106	1	True				
ANR	9869177	AssignmentExpression	lower = vi		9869106	0		=			
ANR	9869178	Identifier	lower		9869106	0					
ANR	9869179	Identifier	vi		9869106	1					
ANR	9869180	ElseStatement	else		9869106	0					
ANR	9869181	IfStatement	if ( ui < 0 )		9869106	0					
ANR	9869182	Condition	ui < 0	953:11:25455:25460	9869106	0	True				
ANR	9869183	RelationalExpression	ui < 0		9869106	0		<			
ANR	9869184	Identifier	ui		9869106	0					
ANR	9869185	PrimaryExpression	0		9869106	1					
ANR	9869186	ExpressionStatement	upper = vi	954:3:25466:25476	9869106	1	True				
ANR	9869187	AssignmentExpression	upper = vi		9869106	0		=			
ANR	9869188	Identifier	upper		9869106	0					
ANR	9869189	Identifier	vi		9869106	1					
ANR	9869190	ElseStatement	else		9869106	0					
ANR	9869191	CompoundStatement		16:7:295:295	9869106	0					
ANR	9869192	ExpressionStatement	lower = vi	956:3:25490:25500	9869106	0	True				
ANR	9869193	AssignmentExpression	lower = vi		9869106	0		=			
ANR	9869194	Identifier	lower		9869106	0					
ANR	9869195	Identifier	vi		9869106	1					
ANR	9869196	BreakStatement	break ;	957:3:25505:25510	9869106	1	True				
ANR	9869197	ExpressionStatement	vi = lower	960:1:25520:25530	9869106	7	True				
ANR	9869198	AssignmentExpression	vi = lower		9869106	0		=			
ANR	9869199	Identifier	vi		9869106	0					
ANR	9869200	Identifier	lower		9869106	1					
ANR	9869201	ExpressionStatement	ui = c - uv_row [ vi ] . ncum	961:1:25533:25557	9869106	8	True				
ANR	9869202	AssignmentExpression	ui = c - uv_row [ vi ] . ncum		9869106	0		=			
ANR	9869203	Identifier	ui		9869106	0					
ANR	9869204	AdditiveExpression	c - uv_row [ vi ] . ncum		9869106	1		-			
ANR	9869205	Identifier	c		9869106	0					
ANR	9869206	MemberAccess	uv_row [ vi ] . ncum		9869106	1					
ANR	9869207	ArrayIndexing	uv_row [ vi ]		9869106	0					
ANR	9869208	Identifier	uv_row		9869106	0					
ANR	9869209	Identifier	vi		9869106	1					
ANR	9869210	Identifier	ncum		9869106	1					
ANR	9869211	ExpressionStatement	* up = uv_row [ vi ] . ustart + ( ui + .5 ) * UV_SQSIZ	962:1:25560:25602	9869106	9	True				
ANR	9869212	AssignmentExpression	* up = uv_row [ vi ] . ustart + ( ui + .5 ) * UV_SQSIZ		9869106	0		=			
ANR	9869213	UnaryOperationExpression	* up		9869106	0					
ANR	9869214	UnaryOperator	*		9869106	0					
ANR	9869215	Identifier	up		9869106	1					
ANR	9869216	AdditiveExpression	uv_row [ vi ] . ustart + ( ui + .5 ) * UV_SQSIZ		9869106	1		+			
ANR	9869217	MemberAccess	uv_row [ vi ] . ustart		9869106	0					
ANR	9869218	ArrayIndexing	uv_row [ vi ]		9869106	0					
ANR	9869219	Identifier	uv_row		9869106	0					
ANR	9869220	Identifier	vi		9869106	1					
ANR	9869221	Identifier	ustart		9869106	1					
ANR	9869222	MultiplicativeExpression	( ui + .5 ) * UV_SQSIZ		9869106	1		*			
ANR	9869223	AdditiveExpression	ui + .5		9869106	0		+			
ANR	9869224	Identifier	ui		9869106	0					
ANR	9869225	PrimaryExpression	.5		9869106	1					
ANR	9869226	Identifier	UV_SQSIZ		9869106	1					
ANR	9869227	ExpressionStatement	* vp = UV_VSTART + ( vi + .5 ) * UV_SQSIZ	963:1:25605:25639	9869106	10	True				
ANR	9869228	AssignmentExpression	* vp = UV_VSTART + ( vi + .5 ) * UV_SQSIZ		9869106	0		=			
ANR	9869229	UnaryOperationExpression	* vp		9869106	0					
ANR	9869230	UnaryOperator	*		9869106	0					
ANR	9869231	Identifier	vp		9869106	1					
ANR	9869232	AdditiveExpression	UV_VSTART + ( vi + .5 ) * UV_SQSIZ		9869106	1		+			
ANR	9869233	Identifier	UV_VSTART		9869106	0					
ANR	9869234	MultiplicativeExpression	( vi + .5 ) * UV_SQSIZ		9869106	1		*			
ANR	9869235	AdditiveExpression	vi + .5		9869106	0		+			
ANR	9869236	Identifier	vi		9869106	0					
ANR	9869237	PrimaryExpression	.5		9869106	1					
ANR	9869238	Identifier	UV_SQSIZ		9869106	1					
ANR	9869239	ReturnStatement	return ( 0 ) ;	964:1:25642:25652	9869106	11	True				
ANR	9869240	PrimaryExpression	0		9869106	0					
ANR	9869241	ReturnType	int		9869106	1					
ANR	9869242	Identifier	uv_decode		9869106	2					
ANR	9869243	ParameterList	"double * up , double * vp , int c"		9869106	3					
ANR	9869244	Parameter	double * up	939:10:25131:25140	9869106	0	True				
ANR	9869245	ParameterType	double *		9869106	0					
ANR	9869246	Identifier	up		9869106	1					
ANR	9869247	Parameter	double * vp	939:22:25143:25152	9869106	1	True				
ANR	9869248	ParameterType	double *		9869106	0					
ANR	9869249	Identifier	vp		9869106	1					
ANR	9869250	Parameter	int c	939:34:25155:25159	9869106	2	True				
ANR	9869251	ParameterType	int		9869106	0					
ANR	9869252	Identifier	c		9869106	1					
ANR	9869253	CFGEntryNode	ENTRY		9869106		True				
ANR	9869254	CFGExitNode	EXIT		9869106		True				
ANR	9869255	Symbol	* up		9869106						
ANR	9869256	Symbol	c		9869106						
ANR	9869257	Symbol	* vp		9869106						
ANR	9869258	Symbol	lower		9869106						
ANR	9869259	Symbol	upper		9869106						
ANR	9869260	Symbol	UV_SQSIZ		9869106						
ANR	9869261	Symbol	UV_VSTART		9869106						
ANR	9869262	Symbol	uv_row		9869106						
ANR	9869263	Symbol	uv_row [ vi ] . ncum		9869106						
ANR	9869264	Symbol	UV_NDIVS		9869106						
ANR	9869265	Symbol	vi		9869106						
ANR	9869266	Symbol	ui		9869106						
ANR	9869267	Symbol	UV_NVS		9869106						
ANR	9869268	Symbol	* uv_row		9869106						
ANR	9869269	Symbol	vp		9869106						
ANR	9869270	Symbol	* vi		9869106						
ANR	9869271	Symbol	up		9869106						
ANR	9869272	Symbol	uv_row [ vi ] . ustart		9869106						
ANR	9869273	Function	LogLuv24toXYZ	970:0:25690:26163							
ANR	9869274	FunctionDef	"LogLuv24toXYZ (uint32 p , float XYZ [ 3 ])"		9869273	0					
ANR	9869275	CompoundStatement		972:0:25733:26163	9869273	0					
ANR	9869276	IdentifierDeclStatement	int Ce ;	973:1:25736:25742	9869273	0	True				
ANR	9869277	IdentifierDecl	Ce		9869273	0					
ANR	9869278	IdentifierDeclType	int		9869273	0					
ANR	9869279	Identifier	Ce		9869273	1					
ANR	9869280	IdentifierDeclStatement	"double L , u , v , s , x , y ;"	974:1:25745:25768	9869273	1	True				
ANR	9869281	IdentifierDecl	L		9869273	0					
ANR	9869282	IdentifierDeclType	double		9869273	0					
ANR	9869283	Identifier	L		9869273	1					
ANR	9869284	IdentifierDecl	u		9869273	1					
ANR	9869285	IdentifierDeclType	double		9869273	0					
ANR	9869286	Identifier	u		9869273	1					
ANR	9869287	IdentifierDecl	v		9869273	2					
ANR	9869288	IdentifierDeclType	double		9869273	0					
ANR	9869289	Identifier	v		9869273	1					
ANR	9869290	IdentifierDecl	s		9869273	3					
ANR	9869291	IdentifierDeclType	double		9869273	0					
ANR	9869292	Identifier	s		9869273	1					
ANR	9869293	IdentifierDecl	x		9869273	4					
ANR	9869294	IdentifierDeclType	double		9869273	0					
ANR	9869295	Identifier	x		9869273	1					
ANR	9869296	IdentifierDecl	y		9869273	5					
ANR	9869297	IdentifierDeclType	double		9869273	0					
ANR	9869298	Identifier	y		9869273	1					
ANR	9869299	ExpressionStatement	L = LogL10toY ( p >> 14 & 0x3ff )	976:1:25799:25827	9869273	2	True				
ANR	9869300	AssignmentExpression	L = LogL10toY ( p >> 14 & 0x3ff )		9869273	0		=			
ANR	9869301	Identifier	L		9869273	0					
ANR	9869302	CallExpression	LogL10toY ( p >> 14 & 0x3ff )		9869273	1					
ANR	9869303	Callee	LogL10toY		9869273	0					
ANR	9869304	Identifier	LogL10toY		9869273	0					
ANR	9869305	ArgumentList	p >> 14 & 0x3ff		9869273	1					
ANR	9869306	Argument	p >> 14 & 0x3ff		9869273	0					
ANR	9869307	BitAndExpression	p >> 14 & 0x3ff		9869273	0		&			
ANR	9869308	ShiftExpression	p >> 14		9869273	0		>>			
ANR	9869309	Identifier	p		9869273	0					
ANR	9869310	PrimaryExpression	14		9869273	1					
ANR	9869311	PrimaryExpression	0x3ff		9869273	1					
ANR	9869312	IfStatement	if ( L <= 0. )		9869273	3					
ANR	9869313	Condition	L <= 0.	977:5:25834:25840	9869273	0	True				
ANR	9869314	RelationalExpression	L <= 0.		9869273	0		<=			
ANR	9869315	Identifier	L		9869273	0					
ANR	9869316	PrimaryExpression	0.		9869273	1					
ANR	9869317	CompoundStatement		6:14:109:109	9869273	1					
ANR	9869318	ExpressionStatement	XYZ [ 0 ] = XYZ [ 1 ] = XYZ [ 2 ] = 0.	978:2:25847:25876	9869273	0	True				
ANR	9869319	AssignmentExpression	XYZ [ 0 ] = XYZ [ 1 ] = XYZ [ 2 ] = 0.		9869273	0		=			
ANR	9869320	ArrayIndexing	XYZ [ 0 ]		9869273	0					
ANR	9869321	Identifier	XYZ		9869273	0					
ANR	9869322	PrimaryExpression	0		9869273	1					
ANR	9869323	AssignmentExpression	XYZ [ 1 ] = XYZ [ 2 ] = 0.		9869273	1		=			
ANR	9869324	ArrayIndexing	XYZ [ 1 ]		9869273	0					
ANR	9869325	Identifier	XYZ		9869273	0					
ANR	9869326	PrimaryExpression	1		9869273	1					
ANR	9869327	AssignmentExpression	XYZ [ 2 ] = 0.		9869273	1		=			
ANR	9869328	ArrayIndexing	XYZ [ 2 ]		9869273	0					
ANR	9869329	Identifier	XYZ		9869273	0					
ANR	9869330	PrimaryExpression	2		9869273	1					
ANR	9869331	PrimaryExpression	0.		9869273	1					
ANR	9869332	ReturnStatement	return ;	979:2:25880:25886	9869273	1	True				
ANR	9869333	ExpressionStatement	Ce = p & 0x3fff	982:1:25916:25931	9869273	4	True				
ANR	9869334	AssignmentExpression	Ce = p & 0x3fff		9869273	0		=			
ANR	9869335	Identifier	Ce		9869273	0					
ANR	9869336	BitAndExpression	p & 0x3fff		9869273	1		&			
ANR	9869337	Identifier	p		9869273	0					
ANR	9869338	PrimaryExpression	0x3fff		9869273	1					
ANR	9869339	IfStatement	"if ( uv_decode ( & u , & v , Ce ) < 0 )"		9869273	5					
ANR	9869340	Condition	"uv_decode ( & u , & v , Ce ) < 0"	983:5:25938:25962	9869273	0	True				
ANR	9869341	RelationalExpression	"uv_decode ( & u , & v , Ce ) < 0"		9869273	0		<			
ANR	9869342	CallExpression	"uv_decode ( & u , & v , Ce )"		9869273	0					
ANR	9869343	Callee	uv_decode		9869273	0					
ANR	9869344	Identifier	uv_decode		9869273	0					
ANR	9869345	ArgumentList	& u		9869273	1					
ANR	9869346	Argument	& u		9869273	0					
ANR	9869347	UnaryOperationExpression	& u		9869273	0					
ANR	9869348	UnaryOperator	&		9869273	0					
ANR	9869349	Identifier	u		9869273	1					
ANR	9869350	Argument	& v		9869273	1					
ANR	9869351	UnaryOperationExpression	& v		9869273	0					
ANR	9869352	UnaryOperator	&		9869273	0					
ANR	9869353	Identifier	v		9869273	1					
ANR	9869354	Argument	Ce		9869273	2					
ANR	9869355	Identifier	Ce		9869273	0					
ANR	9869356	PrimaryExpression	0		9869273	1					
ANR	9869357	CompoundStatement		12:32:231:231	9869273	1					
ANR	9869358	ExpressionStatement	u = U_NEU	984:2:25969:25978	9869273	0	True				
ANR	9869359	AssignmentExpression	u = U_NEU		9869273	0		=			
ANR	9869360	Identifier	u		9869273	0					
ANR	9869361	Identifier	U_NEU		9869273	1					
ANR	9869362	ExpressionStatement	v = V_NEU	984:13:25980:25989	9869273	1	True				
ANR	9869363	AssignmentExpression	v = V_NEU		9869273	0		=			
ANR	9869364	Identifier	v		9869273	0					
ANR	9869365	Identifier	V_NEU		9869273	1					
ANR	9869366	ExpressionStatement	s = 1. / ( 6. * u - 16. * v + 12. )	986:1:25995:26022	9869273	6	True				
ANR	9869367	AssignmentExpression	s = 1. / ( 6. * u - 16. * v + 12. )		9869273	0		=			
ANR	9869368	Identifier	s		9869273	0					
ANR	9869369	MultiplicativeExpression	1. / ( 6. * u - 16. * v + 12. )		9869273	1		/			
ANR	9869370	PrimaryExpression	1.		9869273	0					
ANR	9869371	AdditiveExpression	6. * u - 16. * v + 12.		9869273	1		-			
ANR	9869372	MultiplicativeExpression	6. * u		9869273	0		*			
ANR	9869373	PrimaryExpression	6.		9869273	0					
ANR	9869374	Identifier	u		9869273	1					
ANR	9869375	AdditiveExpression	16. * v + 12.		9869273	1		+			
ANR	9869376	MultiplicativeExpression	16. * v		9869273	0		*			
ANR	9869377	PrimaryExpression	16.		9869273	0					
ANR	9869378	Identifier	v		9869273	1					
ANR	9869379	PrimaryExpression	12.		9869273	1					
ANR	9869380	ExpressionStatement	x = 9. * u * s	987:1:26025:26037	9869273	7	True				
ANR	9869381	AssignmentExpression	x = 9. * u * s		9869273	0		=			
ANR	9869382	Identifier	x		9869273	0					
ANR	9869383	MultiplicativeExpression	9. * u * s		9869273	1		*			
ANR	9869384	PrimaryExpression	9.		9869273	0					
ANR	9869385	MultiplicativeExpression	u * s		9869273	1		*			
ANR	9869386	Identifier	u		9869273	0					
ANR	9869387	Identifier	s		9869273	1					
ANR	9869388	ExpressionStatement	y = 4. * v * s	988:1:26040:26052	9869273	8	True				
ANR	9869389	AssignmentExpression	y = 4. * v * s		9869273	0		=			
ANR	9869390	Identifier	y		9869273	0					
ANR	9869391	MultiplicativeExpression	4. * v * s		9869273	1		*			
ANR	9869392	PrimaryExpression	4.		9869273	0					
ANR	9869393	MultiplicativeExpression	v * s		9869273	1		*			
ANR	9869394	Identifier	v		9869273	0					
ANR	9869395	Identifier	s		9869273	1					
ANR	9869396	ExpressionStatement	XYZ [ 0 ] = ( float ) ( x / y * L )	990:1:26081:26106	9869273	9	True				
ANR	9869397	AssignmentExpression	XYZ [ 0 ] = ( float ) ( x / y * L )		9869273	0		=			
ANR	9869398	ArrayIndexing	XYZ [ 0 ]		9869273	0					
ANR	9869399	Identifier	XYZ		9869273	0					
ANR	9869400	PrimaryExpression	0		9869273	1					
ANR	9869401	CastExpression	( float ) ( x / y * L )		9869273	1					
ANR	9869402	CastTarget	float		9869273	0					
ANR	9869403	MultiplicativeExpression	x / y * L		9869273	1		/			
ANR	9869404	Identifier	x		9869273	0					
ANR	9869405	MultiplicativeExpression	y * L		9869273	1		*			
ANR	9869406	Identifier	y		9869273	0					
ANR	9869407	Identifier	L		9869273	1					
ANR	9869408	ExpressionStatement	XYZ [ 1 ] = ( float ) L	991:1:26109:26126	9869273	10	True				
ANR	9869409	AssignmentExpression	XYZ [ 1 ] = ( float ) L		9869273	0		=			
ANR	9869410	ArrayIndexing	XYZ [ 1 ]		9869273	0					
ANR	9869411	Identifier	XYZ		9869273	0					
ANR	9869412	PrimaryExpression	1		9869273	1					
ANR	9869413	CastExpression	( float ) L		9869273	1					
ANR	9869414	CastTarget	float		9869273	0					
ANR	9869415	Identifier	L		9869273	1					
ANR	9869416	ExpressionStatement	XYZ [ 2 ] = ( float ) ( ( 1. - x - y ) / y * L )	992:1:26129:26161	9869273	11	True				
ANR	9869417	AssignmentExpression	XYZ [ 2 ] = ( float ) ( ( 1. - x - y ) / y * L )		9869273	0		=			
ANR	9869418	ArrayIndexing	XYZ [ 2 ]		9869273	0					
ANR	9869419	Identifier	XYZ		9869273	0					
ANR	9869420	PrimaryExpression	2		9869273	1					
ANR	9869421	CastExpression	( float ) ( ( 1. - x - y ) / y * L )		9869273	1					
ANR	9869422	CastTarget	float		9869273	0					
ANR	9869423	MultiplicativeExpression	( 1. - x - y ) / y * L		9869273	1		/			
ANR	9869424	AdditiveExpression	1. - x - y		9869273	0		-			
ANR	9869425	PrimaryExpression	1.		9869273	0					
ANR	9869426	AdditiveExpression	x - y		9869273	1		-			
ANR	9869427	Identifier	x		9869273	0					
ANR	9869428	Identifier	y		9869273	1					
ANR	9869429	MultiplicativeExpression	y * L		9869273	1		*			
ANR	9869430	Identifier	y		9869273	0					
ANR	9869431	Identifier	L		9869273	1					
ANR	9869432	ReturnType	void		9869273	1					
ANR	9869433	Identifier	LogLuv24toXYZ		9869273	2					
ANR	9869434	ParameterList	"uint32 p , float XYZ [ 3 ]"		9869273	3					
ANR	9869435	Parameter	uint32 p	971:14:25709:25716	9869273	0	True				
ANR	9869436	ParameterType	uint32		9869273	0					
ANR	9869437	Identifier	p		9869273	1					
ANR	9869438	Parameter	float XYZ [ 3 ]	971:24:25719:25730	9869273	1	True				
ANR	9869439	ParameterType	float [ 3 ]		9869273	0					
ANR	9869440	Identifier	XYZ		9869273	1					
ANR	9869441	CFGEntryNode	ENTRY		9869273		True				
ANR	9869442	CFGExitNode	EXIT		9869273		True				
ANR	9869443	Symbol	Ce		9869273						
ANR	9869444	Symbol	L		9869273						
ANR	9869445	Symbol	U_NEU		9869273						
ANR	9869446	Symbol	uv_decode		9869273						
ANR	9869447	Symbol	p		9869273						
ANR	9869448	Symbol	s		9869273						
ANR	9869449	Symbol	u		9869273						
ANR	9869450	Symbol	v		9869273						
ANR	9869451	Symbol	XYZ		9869273						
ANR	9869452	Symbol	x		9869273						
ANR	9869453	Symbol	LogL10toY		9869273						
ANR	9869454	Symbol	y		9869273						
ANR	9869455	Symbol	& u		9869273						
ANR	9869456	Symbol	* XYZ		9869273						
ANR	9869457	Symbol	& v		9869273						
ANR	9869458	Symbol	V_NEU		9869273						
ANR	9869459	Function	LogLuv24fromXYZ	998:0:26199:26672							
ANR	9869460	FunctionDef	"LogLuv24fromXYZ (float XYZ [ 3 ] , int em)"		9869459	0					
ANR	9869461	CompoundStatement		1000:0:26244:26672	9869459	0					
ANR	9869462	IdentifierDeclStatement	"int Le , Ce ;"	1001:1:26247:26257	9869459	0	True				
ANR	9869463	IdentifierDecl	Le		9869459	0					
ANR	9869464	IdentifierDeclType	int		9869459	0					
ANR	9869465	Identifier	Le		9869459	1					
ANR	9869466	IdentifierDecl	Ce		9869459	1					
ANR	9869467	IdentifierDeclType	int		9869459	0					
ANR	9869468	Identifier	Ce		9869459	1					
ANR	9869469	IdentifierDeclStatement	"double u , v , s ;"	1002:1:26260:26274	9869459	1	True				
ANR	9869470	IdentifierDecl	u		9869459	0					
ANR	9869471	IdentifierDeclType	double		9869459	0					
ANR	9869472	Identifier	u		9869459	1					
ANR	9869473	IdentifierDecl	v		9869459	1					
ANR	9869474	IdentifierDeclType	double		9869459	0					
ANR	9869475	Identifier	v		9869459	1					
ANR	9869476	IdentifierDecl	s		9869459	2					
ANR	9869477	IdentifierDeclType	double		9869459	0					
ANR	9869478	Identifier	s		9869459	1					
ANR	9869479	ExpressionStatement	"Le = LogL10fromY ( XYZ [ 1 ] , em )"	1004:1:26305:26333	9869459	2	True				
ANR	9869480	AssignmentExpression	"Le = LogL10fromY ( XYZ [ 1 ] , em )"		9869459	0		=			
ANR	9869481	Identifier	Le		9869459	0					
ANR	9869482	CallExpression	"LogL10fromY ( XYZ [ 1 ] , em )"		9869459	1					
ANR	9869483	Callee	LogL10fromY		9869459	0					
ANR	9869484	Identifier	LogL10fromY		9869459	0					
ANR	9869485	ArgumentList	XYZ [ 1 ]		9869459	1					
ANR	9869486	Argument	XYZ [ 1 ]		9869459	0					
ANR	9869487	ArrayIndexing	XYZ [ 1 ]		9869459	0					
ANR	9869488	Identifier	XYZ		9869459	0					
ANR	9869489	PrimaryExpression	1		9869459	1					
ANR	9869490	Argument	em		9869459	1					
ANR	9869491	Identifier	em		9869459	0					
ANR	9869492	ExpressionStatement	s = XYZ [ 0 ] + 15. * XYZ [ 1 ] + 3. * XYZ [ 2 ]	1006:1:26360:26395	9869459	3	True				
ANR	9869493	AssignmentExpression	s = XYZ [ 0 ] + 15. * XYZ [ 1 ] + 3. * XYZ [ 2 ]		9869459	0		=			
ANR	9869494	Identifier	s		9869459	0					
ANR	9869495	AdditiveExpression	XYZ [ 0 ] + 15. * XYZ [ 1 ] + 3. * XYZ [ 2 ]		9869459	1		+			
ANR	9869496	ArrayIndexing	XYZ [ 0 ]		9869459	0					
ANR	9869497	Identifier	XYZ		9869459	0					
ANR	9869498	PrimaryExpression	0		9869459	1					
ANR	9869499	AdditiveExpression	15. * XYZ [ 1 ] + 3. * XYZ [ 2 ]		9869459	1		+			
ANR	9869500	MultiplicativeExpression	15. * XYZ [ 1 ]		9869459	0		*			
ANR	9869501	PrimaryExpression	15.		9869459	0					
ANR	9869502	ArrayIndexing	XYZ [ 1 ]		9869459	1					
ANR	9869503	Identifier	XYZ		9869459	0					
ANR	9869504	PrimaryExpression	1		9869459	1					
ANR	9869505	MultiplicativeExpression	3. * XYZ [ 2 ]		9869459	1		*			
ANR	9869506	PrimaryExpression	3.		9869459	0					
ANR	9869507	ArrayIndexing	XYZ [ 2 ]		9869459	1					
ANR	9869508	Identifier	XYZ		9869459	0					
ANR	9869509	PrimaryExpression	2		9869459	1					
ANR	9869510	IfStatement	if ( ! Le || s <= 0. )		9869459	4					
ANR	9869511	Condition	! Le || s <= 0.	1007:5:26402:26415	9869459	0	True				
ANR	9869512	OrExpression	! Le || s <= 0.		9869459	0		||			
ANR	9869513	UnaryOperationExpression	! Le		9869459	0					
ANR	9869514	UnaryOperator	!		9869459	0					
ANR	9869515	Identifier	Le		9869459	1					
ANR	9869516	RelationalExpression	s <= 0.		9869459	1		<=			
ANR	9869517	Identifier	s		9869459	0					
ANR	9869518	PrimaryExpression	0.		9869459	1					
ANR	9869519	CompoundStatement		8:21:173:173	9869459	1					
ANR	9869520	ExpressionStatement	u = U_NEU	1008:2:26422:26431	9869459	0	True				
ANR	9869521	AssignmentExpression	u = U_NEU		9869459	0		=			
ANR	9869522	Identifier	u		9869459	0					
ANR	9869523	Identifier	U_NEU		9869459	1					
ANR	9869524	ExpressionStatement	v = V_NEU	1009:2:26435:26444	9869459	1	True				
ANR	9869525	AssignmentExpression	v = V_NEU		9869459	0		=			
ANR	9869526	Identifier	v		9869459	0					
ANR	9869527	Identifier	V_NEU		9869459	1					
ANR	9869528	ElseStatement	else		9869459	0					
ANR	9869529	CompoundStatement		11:8:209:209	9869459	0					
ANR	9869530	ExpressionStatement	u = 4. * XYZ [ 0 ] / s	1011:2:26458:26475	9869459	0	True				
ANR	9869531	AssignmentExpression	u = 4. * XYZ [ 0 ] / s		9869459	0		=			
ANR	9869532	Identifier	u		9869459	0					
ANR	9869533	MultiplicativeExpression	4. * XYZ [ 0 ] / s		9869459	1		*			
ANR	9869534	PrimaryExpression	4.		9869459	0					
ANR	9869535	MultiplicativeExpression	XYZ [ 0 ] / s		9869459	1		/			
ANR	9869536	ArrayIndexing	XYZ [ 0 ]		9869459	0					
ANR	9869537	Identifier	XYZ		9869459	0					
ANR	9869538	PrimaryExpression	0		9869459	1					
ANR	9869539	Identifier	s		9869459	1					
ANR	9869540	ExpressionStatement	v = 9. * XYZ [ 1 ] / s	1012:2:26479:26496	9869459	1	True				
ANR	9869541	AssignmentExpression	v = 9. * XYZ [ 1 ] / s		9869459	0		=			
ANR	9869542	Identifier	v		9869459	0					
ANR	9869543	MultiplicativeExpression	9. * XYZ [ 1 ] / s		9869459	1		*			
ANR	9869544	PrimaryExpression	9.		9869459	0					
ANR	9869545	MultiplicativeExpression	XYZ [ 1 ] / s		9869459	1		/			
ANR	9869546	ArrayIndexing	XYZ [ 1 ]		9869459	0					
ANR	9869547	Identifier	XYZ		9869459	0					
ANR	9869548	PrimaryExpression	1		9869459	1					
ANR	9869549	Identifier	s		9869459	1					
ANR	9869550	ExpressionStatement	"Ce = uv_encode ( u , v , em )"	1014:1:26502:26526	9869459	5	True				
ANR	9869551	AssignmentExpression	"Ce = uv_encode ( u , v , em )"		9869459	0		=			
ANR	9869552	Identifier	Ce		9869459	0					
ANR	9869553	CallExpression	"uv_encode ( u , v , em )"		9869459	1					
ANR	9869554	Callee	uv_encode		9869459	0					
ANR	9869555	Identifier	uv_encode		9869459	0					
ANR	9869556	ArgumentList	u		9869459	1					
ANR	9869557	Argument	u		9869459	0					
ANR	9869558	Identifier	u		9869459	0					
ANR	9869559	Argument	v		9869459	1					
ANR	9869560	Identifier	v		9869459	0					
ANR	9869561	Argument	em		9869459	2					
ANR	9869562	Identifier	em		9869459	0					
ANR	9869563	IfStatement	if ( Ce < 0 )		9869459	6					
ANR	9869564	Condition	Ce < 0	1015:5:26533:26538	9869459	0	True				
ANR	9869565	RelationalExpression	Ce < 0		9869459	0		<			
ANR	9869566	Identifier	Ce		9869459	0					
ANR	9869567	PrimaryExpression	0		9869459	1					
ANR	9869568	ExpressionStatement	"Ce = uv_encode ( U_NEU , V_NEU , SGILOGENCODE_NODITHER )"	1016:2:26565:26616	9869459	1	True				
ANR	9869569	AssignmentExpression	"Ce = uv_encode ( U_NEU , V_NEU , SGILOGENCODE_NODITHER )"		9869459	0		=			
ANR	9869570	Identifier	Ce		9869459	0					
ANR	9869571	CallExpression	"uv_encode ( U_NEU , V_NEU , SGILOGENCODE_NODITHER )"		9869459	1					
ANR	9869572	Callee	uv_encode		9869459	0					
ANR	9869573	Identifier	uv_encode		9869459	0					
ANR	9869574	ArgumentList	U_NEU		9869459	1					
ANR	9869575	Argument	U_NEU		9869459	0					
ANR	9869576	Identifier	U_NEU		9869459	0					
ANR	9869577	Argument	V_NEU		9869459	1					
ANR	9869578	Identifier	V_NEU		9869459	0					
ANR	9869579	Argument	SGILOGENCODE_NODITHER		9869459	2					
ANR	9869580	Identifier	SGILOGENCODE_NODITHER		9869459	0					
ANR	9869581	ReturnStatement	return ( Le << 14 | Ce ) ;	1018:1:26648:26670	9869459	7	True				
ANR	9869582	InclusiveOrExpression	Le << 14 | Ce		9869459	0		|			
ANR	9869583	ShiftExpression	Le << 14		9869459	0		<<			
ANR	9869584	Identifier	Le		9869459	0					
ANR	9869585	PrimaryExpression	14		9869459	1					
ANR	9869586	Identifier	Ce		9869459	1					
ANR	9869587	ReturnType	uint32		9869459	1					
ANR	9869588	Identifier	LogLuv24fromXYZ		9869459	2					
ANR	9869589	ParameterList	"float XYZ [ 3 ] , int em"		9869459	3					
ANR	9869590	Parameter	float XYZ [ 3 ]	999:16:26222:26233	9869459	0	True				
ANR	9869591	ParameterType	float [ 3 ]		9869459	0					
ANR	9869592	Identifier	XYZ		9869459	1					
ANR	9869593	Parameter	int em	999:30:26236:26241	9869459	1	True				
ANR	9869594	ParameterType	int		9869459	0					
ANR	9869595	Identifier	em		9869459	1					
ANR	9869596	CFGEntryNode	ENTRY		9869459		True				
ANR	9869597	CFGExitNode	EXIT		9869459		True				
ANR	9869598	Symbol	SGILOGENCODE_NODITHER		9869459						
ANR	9869599	Symbol	Ce		9869459						
ANR	9869600	Symbol	LogL10fromY		9869459						
ANR	9869601	Symbol	uv_encode		9869459						
ANR	9869602	Symbol	em		9869459						
ANR	9869603	Symbol	U_NEU		9869459						
ANR	9869604	Symbol	s		9869459						
ANR	9869605	Symbol	u		9869459						
ANR	9869606	Symbol	v		9869459						
ANR	9869607	Symbol	XYZ		9869459						
ANR	9869608	Symbol	Le		9869459						
ANR	9869609	Symbol	* XYZ		9869459						
ANR	9869610	Symbol	V_NEU		9869459						
ANR	9869611	Function	Luv24toXYZ	1021:0:26675:26876							
ANR	9869612	FunctionDef	"Luv24toXYZ (LogLuvState * sp , uint8 * op , tmsize_t n)"		9869611	0					
ANR	9869613	CompoundStatement		1023:0:26738:26876	9869611	0					
ANR	9869614	IdentifierDeclStatement	uint32 * luv = ( uint32 * ) sp -> tbuf ;	1024:1:26741:26773	9869611	0	True				
ANR	9869615	IdentifierDecl	* luv = ( uint32 * ) sp -> tbuf		9869611	0					
ANR	9869616	IdentifierDeclType	uint32 *		9869611	0					
ANR	9869617	Identifier	luv		9869611	1					
ANR	9869618	AssignmentExpression	* luv = ( uint32 * ) sp -> tbuf		9869611	2		=			
ANR	9869619	Identifier	luv		9869611	0					
ANR	9869620	CastExpression	( uint32 * ) sp -> tbuf		9869611	1					
ANR	9869621	CastTarget	uint32 *		9869611	0					
ANR	9869622	PtrMemberAccess	sp -> tbuf		9869611	1					
ANR	9869623	Identifier	sp		9869611	0					
ANR	9869624	Identifier	tbuf		9869611	1					
ANR	9869625	IdentifierDeclStatement	float * xyz = ( float * ) op ;	1025:1:26778:26802	9869611	1	True				
ANR	9869626	IdentifierDecl	* xyz = ( float * ) op		9869611	0					
ANR	9869627	IdentifierDeclType	float *		9869611	0					
ANR	9869628	Identifier	xyz		9869611	1					
ANR	9869629	AssignmentExpression	* xyz = ( float * ) op		9869611	2		=			
ANR	9869630	Identifier	xyz		9869611	0					
ANR	9869631	CastExpression	( float * ) op		9869611	1					
ANR	9869632	CastTarget	float *		9869611	0					
ANR	9869633	Identifier	op		9869611	1					
ANR	9869634	WhileStatement	while ( n -- > 0 )		9869611	2					
ANR	9869635	Condition	n -- > 0	1027:8:26813:26819	9869611	0	True				
ANR	9869636	RelationalExpression	n -- > 0		9869611	0		>			
ANR	9869637	PostIncDecOperationExpression	n --		9869611	0					
ANR	9869638	Identifier	n		9869611	0					
ANR	9869639	IncDec	--		9869611	1					
ANR	9869640	PrimaryExpression	0		9869611	1					
ANR	9869641	CompoundStatement		5:17:83:83	9869611	1					
ANR	9869642	ExpressionStatement	"LogLuv24toXYZ ( * luv , xyz )"	1028:2:26826:26850	9869611	0	True				
ANR	9869643	CallExpression	"LogLuv24toXYZ ( * luv , xyz )"		9869611	0					
ANR	9869644	Callee	LogLuv24toXYZ		9869611	0					
ANR	9869645	Identifier	LogLuv24toXYZ		9869611	0					
ANR	9869646	ArgumentList	* luv		9869611	1					
ANR	9869647	Argument	* luv		9869611	0					
ANR	9869648	UnaryOperationExpression	* luv		9869611	0					
ANR	9869649	UnaryOperator	*		9869611	0					
ANR	9869650	Identifier	luv		9869611	1					
ANR	9869651	Argument	xyz		9869611	1					
ANR	9869652	Identifier	xyz		9869611	0					
ANR	9869653	ExpressionStatement	xyz += 3	1029:2:26854:26862	9869611	1	True				
ANR	9869654	AssignmentExpression	xyz += 3		9869611	0		+=			
ANR	9869655	Identifier	xyz		9869611	0					
ANR	9869656	PrimaryExpression	3		9869611	1					
ANR	9869657	ExpressionStatement	luv ++	1030:2:26866:26871	9869611	2	True				
ANR	9869658	PostIncDecOperationExpression	luv ++		9869611	0					
ANR	9869659	Identifier	luv		9869611	0					
ANR	9869660	IncDec	++		9869611	1					
ANR	9869661	ReturnType	static void		9869611	1					
ANR	9869662	Identifier	Luv24toXYZ		9869611	2					
ANR	9869663	ParameterList	"LogLuvState * sp , uint8 * op , tmsize_t n"		9869611	3					
ANR	9869664	Parameter	LogLuvState * sp	1022:11:26698:26712	9869611	0	True				
ANR	9869665	ParameterType	LogLuvState *		9869611	0					
ANR	9869666	Identifier	sp		9869611	1					
ANR	9869667	Parameter	uint8 * op	1022:28:26715:26723	9869611	1	True				
ANR	9869668	ParameterType	uint8 *		9869611	0					
ANR	9869669	Identifier	op		9869611	1					
ANR	9869670	Parameter	tmsize_t n	1022:39:26726:26735	9869611	2	True				
ANR	9869671	ParameterType	tmsize_t		9869611	0					
ANR	9869672	Identifier	n		9869611	1					
ANR	9869673	CFGEntryNode	ENTRY		9869611		True				
ANR	9869674	CFGExitNode	EXIT		9869611		True				
ANR	9869675	Symbol	* sp		9869611						
ANR	9869676	Symbol	op		9869611						
ANR	9869677	Symbol	* luv		9869611						
ANR	9869678	Symbol	xyz		9869611						
ANR	9869679	Symbol	sp -> tbuf		9869611						
ANR	9869680	Symbol	luv		9869611						
ANR	9869681	Symbol	sp		9869611						
ANR	9869682	Symbol	n		9869611						
ANR	9869683	Function	Luv24toLuv48	1034:0:26879:27256							
ANR	9869684	FunctionDef	"Luv24toLuv48 (LogLuvState * sp , uint8 * op , tmsize_t n)"		9869683	0					
ANR	9869685	CompoundStatement		1036:0:26944:27256	9869683	0					
ANR	9869686	IdentifierDeclStatement	uint32 * luv = ( uint32 * ) sp -> tbuf ;	1037:1:26947:26979	9869683	0	True				
ANR	9869687	IdentifierDecl	* luv = ( uint32 * ) sp -> tbuf		9869683	0					
ANR	9869688	IdentifierDeclType	uint32 *		9869683	0					
ANR	9869689	Identifier	luv		9869683	1					
ANR	9869690	AssignmentExpression	* luv = ( uint32 * ) sp -> tbuf		9869683	2		=			
ANR	9869691	Identifier	luv		9869683	0					
ANR	9869692	CastExpression	( uint32 * ) sp -> tbuf		9869683	1					
ANR	9869693	CastTarget	uint32 *		9869683	0					
ANR	9869694	PtrMemberAccess	sp -> tbuf		9869683	1					
ANR	9869695	Identifier	sp		9869683	0					
ANR	9869696	Identifier	tbuf		9869683	1					
ANR	9869697	IdentifierDeclStatement	int16 * luv3 = ( int16 * ) op ;	1038:1:26984:27009	9869683	1	True				
ANR	9869698	IdentifierDecl	* luv3 = ( int16 * ) op		9869683	0					
ANR	9869699	IdentifierDeclType	int16 *		9869683	0					
ANR	9869700	Identifier	luv3		9869683	1					
ANR	9869701	AssignmentExpression	* luv3 = ( int16 * ) op		9869683	2		=			
ANR	9869702	Identifier	luv3		9869683	0					
ANR	9869703	CastExpression	( int16 * ) op		9869683	1					
ANR	9869704	CastTarget	int16 *		9869683	0					
ANR	9869705	Identifier	op		9869683	1					
ANR	9869706	WhileStatement	while ( n -- > 0 )		9869683	2					
ANR	9869707	Condition	n -- > 0	1040:8:27020:27026	9869683	0	True				
ANR	9869708	RelationalExpression	n -- > 0		9869683	0		>			
ANR	9869709	PostIncDecOperationExpression	n --		9869683	0					
ANR	9869710	Identifier	n		9869683	0					
ANR	9869711	IncDec	--		9869683	1					
ANR	9869712	PrimaryExpression	0		9869683	1					
ANR	9869713	CompoundStatement		6:2:88:99	9869683	1					
ANR	9869714	IdentifierDeclStatement	"double u , v ;"	1041:2:27033:27044	9869683	0	True				
ANR	9869715	IdentifierDecl	u		9869683	0					
ANR	9869716	IdentifierDeclType	double		9869683	0					
ANR	9869717	Identifier	u		9869683	1					
ANR	9869718	IdentifierDecl	v		9869683	1					
ANR	9869719	IdentifierDeclType	double		9869683	0					
ANR	9869720	Identifier	v		9869683	1					
ANR	9869721	ExpressionStatement	* luv3 ++ = ( int16 ) ( ( * luv >> 12 & 0xffd ) + 13314 )	1043:2:27049:27096	9869683	1	True				
ANR	9869722	AssignmentExpression	* luv3 ++ = ( int16 ) ( ( * luv >> 12 & 0xffd ) + 13314 )		9869683	0		=			
ANR	9869723	UnaryOperationExpression	* luv3 ++		9869683	0					
ANR	9869724	UnaryOperator	*		9869683	0					
ANR	9869725	PostIncDecOperationExpression	luv3 ++		9869683	1					
ANR	9869726	Identifier	luv3		9869683	0					
ANR	9869727	IncDec	++		9869683	1					
ANR	9869728	CastExpression	( int16 ) ( ( * luv >> 12 & 0xffd ) + 13314 )		9869683	1					
ANR	9869729	CastTarget	int16		9869683	0					
ANR	9869730	AdditiveExpression	( * luv >> 12 & 0xffd ) + 13314		9869683	1		+			
ANR	9869731	BitAndExpression	* luv >> 12 & 0xffd		9869683	0		&			
ANR	9869732	ShiftExpression	* luv >> 12		9869683	0		>>			
ANR	9869733	UnaryOperationExpression	* luv		9869683	0					
ANR	9869734	UnaryOperator	*		9869683	0					
ANR	9869735	Identifier	luv		9869683	1					
ANR	9869736	PrimaryExpression	12		9869683	1					
ANR	9869737	PrimaryExpression	0xffd		9869683	1					
ANR	9869738	PrimaryExpression	13314		9869683	1					
ANR	9869739	IfStatement	"if ( uv_decode ( & u , & v , * luv & 0x3fff ) < 0 )"		9869683	2					
ANR	9869740	Condition	"uv_decode ( & u , & v , * luv & 0x3fff ) < 0"	1044:6:27104:27137	9869683	0	True				
ANR	9869741	RelationalExpression	"uv_decode ( & u , & v , * luv & 0x3fff ) < 0"		9869683	0		<			
ANR	9869742	CallExpression	"uv_decode ( & u , & v , * luv & 0x3fff )"		9869683	0					
ANR	9869743	Callee	uv_decode		9869683	0					
ANR	9869744	Identifier	uv_decode		9869683	0					
ANR	9869745	ArgumentList	& u		9869683	1					
ANR	9869746	Argument	& u		9869683	0					
ANR	9869747	UnaryOperationExpression	& u		9869683	0					
ANR	9869748	UnaryOperator	&		9869683	0					
ANR	9869749	Identifier	u		9869683	1					
ANR	9869750	Argument	& v		9869683	1					
ANR	9869751	UnaryOperationExpression	& v		9869683	0					
ANR	9869752	UnaryOperator	&		9869683	0					
ANR	9869753	Identifier	v		9869683	1					
ANR	9869754	Argument	* luv & 0x3fff		9869683	2					
ANR	9869755	BitAndExpression	* luv & 0x3fff		9869683	0		&			
ANR	9869756	UnaryOperationExpression	* luv		9869683	0					
ANR	9869757	UnaryOperator	*		9869683	0					
ANR	9869758	Identifier	luv		9869683	1					
ANR	9869759	PrimaryExpression	0x3fff		9869683	1					
ANR	9869760	PrimaryExpression	0		9869683	1					
ANR	9869761	CompoundStatement		9:42:195:195	9869683	1					
ANR	9869762	ExpressionStatement	u = U_NEU	1045:3:27145:27154	9869683	0	True				
ANR	9869763	AssignmentExpression	u = U_NEU		9869683	0		=			
ANR	9869764	Identifier	u		9869683	0					
ANR	9869765	Identifier	U_NEU		9869683	1					
ANR	9869766	ExpressionStatement	v = V_NEU	1046:3:27159:27168	9869683	1	True				
ANR	9869767	AssignmentExpression	v = V_NEU		9869683	0		=			
ANR	9869768	Identifier	v		9869683	0					
ANR	9869769	Identifier	V_NEU		9869683	1					
ANR	9869770	ExpressionStatement	* luv3 ++ = ( int16 ) ( u * ( 1L << 15 ) )	1048:2:27176:27207	9869683	3	True				
ANR	9869771	AssignmentExpression	* luv3 ++ = ( int16 ) ( u * ( 1L << 15 ) )		9869683	0		=			
ANR	9869772	UnaryOperationExpression	* luv3 ++		9869683	0					
ANR	9869773	UnaryOperator	*		9869683	0					
ANR	9869774	PostIncDecOperationExpression	luv3 ++		9869683	1					
ANR	9869775	Identifier	luv3		9869683	0					
ANR	9869776	IncDec	++		9869683	1					
ANR	9869777	CastExpression	( int16 ) ( u * ( 1L << 15 ) )		9869683	1					
ANR	9869778	CastTarget	int16		9869683	0					
ANR	9869779	MultiplicativeExpression	u * ( 1L << 15 )		9869683	1		*			
ANR	9869780	Identifier	u		9869683	0					
ANR	9869781	ShiftExpression	1L << 15		9869683	1		<<			
ANR	9869782	PrimaryExpression	1L		9869683	0					
ANR	9869783	PrimaryExpression	15		9869683	1					
ANR	9869784	ExpressionStatement	* luv3 ++ = ( int16 ) ( v * ( 1L << 15 ) )	1049:2:27211:27242	9869683	4	True				
ANR	9869785	AssignmentExpression	* luv3 ++ = ( int16 ) ( v * ( 1L << 15 ) )		9869683	0		=			
ANR	9869786	UnaryOperationExpression	* luv3 ++		9869683	0					
ANR	9869787	UnaryOperator	*		9869683	0					
ANR	9869788	PostIncDecOperationExpression	luv3 ++		9869683	1					
ANR	9869789	Identifier	luv3		9869683	0					
ANR	9869790	IncDec	++		9869683	1					
ANR	9869791	CastExpression	( int16 ) ( v * ( 1L << 15 ) )		9869683	1					
ANR	9869792	CastTarget	int16		9869683	0					
ANR	9869793	MultiplicativeExpression	v * ( 1L << 15 )		9869683	1		*			
ANR	9869794	Identifier	v		9869683	0					
ANR	9869795	ShiftExpression	1L << 15		9869683	1		<<			
ANR	9869796	PrimaryExpression	1L		9869683	0					
ANR	9869797	PrimaryExpression	15		9869683	1					
ANR	9869798	ExpressionStatement	luv ++	1050:2:27246:27251	9869683	5	True				
ANR	9869799	PostIncDecOperationExpression	luv ++		9869683	0					
ANR	9869800	Identifier	luv		9869683	0					
ANR	9869801	IncDec	++		9869683	1					
ANR	9869802	ReturnType	static void		9869683	1					
ANR	9869803	Identifier	Luv24toLuv48		9869683	2					
ANR	9869804	ParameterList	"LogLuvState * sp , uint8 * op , tmsize_t n"		9869683	3					
ANR	9869805	Parameter	LogLuvState * sp	1035:13:26904:26918	9869683	0	True				
ANR	9869806	ParameterType	LogLuvState *		9869683	0					
ANR	9869807	Identifier	sp		9869683	1					
ANR	9869808	Parameter	uint8 * op	1035:30:26921:26929	9869683	1	True				
ANR	9869809	ParameterType	uint8 *		9869683	0					
ANR	9869810	Identifier	op		9869683	1					
ANR	9869811	Parameter	tmsize_t n	1035:41:26932:26941	9869683	2	True				
ANR	9869812	ParameterType	tmsize_t		9869683	0					
ANR	9869813	Identifier	n		9869683	1					
ANR	9869814	CFGEntryNode	ENTRY		9869683		True				
ANR	9869815	CFGExitNode	EXIT		9869683		True				
ANR	9869816	Symbol	* sp		9869683						
ANR	9869817	Symbol	op		9869683						
ANR	9869818	Symbol	luv		9869683						
ANR	9869819	Symbol	n		9869683						
ANR	9869820	Symbol	U_NEU		9869683						
ANR	9869821	Symbol	uv_decode		9869683						
ANR	9869822	Symbol	luv3		9869683						
ANR	9869823	Symbol	u		9869683						
ANR	9869824	Symbol	v		9869683						
ANR	9869825	Symbol	* luv		9869683						
ANR	9869826	Symbol	sp -> tbuf		9869683						
ANR	9869827	Symbol	* luv3 ++		9869683						
ANR	9869828	Symbol	& u		9869683						
ANR	9869829	Symbol	& v		9869683						
ANR	9869830	Symbol	sp		9869683						
ANR	9869831	Symbol	V_NEU		9869683						
ANR	9869832	Function	Luv24toRGB	1054:0:27259:27494							
ANR	9869833	FunctionDef	"Luv24toRGB (LogLuvState * sp , uint8 * op , tmsize_t n)"		9869832	0					
ANR	9869834	CompoundStatement		1056:0:27322:27494	9869832	0					
ANR	9869835	IdentifierDeclStatement	uint32 * luv = ( uint32 * ) sp -> tbuf ;	1057:1:27325:27357	9869832	0	True				
ANR	9869836	IdentifierDecl	* luv = ( uint32 * ) sp -> tbuf		9869832	0					
ANR	9869837	IdentifierDeclType	uint32 *		9869832	0					
ANR	9869838	Identifier	luv		9869832	1					
ANR	9869839	AssignmentExpression	* luv = ( uint32 * ) sp -> tbuf		9869832	2		=			
ANR	9869840	Identifier	luv		9869832	0					
ANR	9869841	CastExpression	( uint32 * ) sp -> tbuf		9869832	1					
ANR	9869842	CastTarget	uint32 *		9869832	0					
ANR	9869843	PtrMemberAccess	sp -> tbuf		9869832	1					
ANR	9869844	Identifier	sp		9869832	0					
ANR	9869845	Identifier	tbuf		9869832	1					
ANR	9869846	IdentifierDeclStatement	uint8 * rgb = ( uint8 * ) op ;	1058:1:27362:27386	9869832	1	True				
ANR	9869847	IdentifierDecl	* rgb = ( uint8 * ) op		9869832	0					
ANR	9869848	IdentifierDeclType	uint8 *		9869832	0					
ANR	9869849	Identifier	rgb		9869832	1					
ANR	9869850	AssignmentExpression	* rgb = ( uint8 * ) op		9869832	2		=			
ANR	9869851	Identifier	rgb		9869832	0					
ANR	9869852	CastExpression	( uint8 * ) op		9869832	1					
ANR	9869853	CastTarget	uint8 *		9869832	0					
ANR	9869854	Identifier	op		9869832	1					
ANR	9869855	WhileStatement	while ( n -- > 0 )		9869832	2					
ANR	9869856	Condition	n -- > 0	1060:8:27397:27403	9869832	0	True				
ANR	9869857	RelationalExpression	n -- > 0		9869832	0		>			
ANR	9869858	PostIncDecOperationExpression	n --		9869832	0					
ANR	9869859	Identifier	n		9869832	0					
ANR	9869860	IncDec	--		9869832	1					
ANR	9869861	PrimaryExpression	0		9869832	1					
ANR	9869862	CompoundStatement		6:2:87:99	9869832	1					
ANR	9869863	IdentifierDeclStatement	float xyz [ 3 ] ;	1061:2:27410:27422	9869832	0	True				
ANR	9869864	IdentifierDecl	xyz [ 3 ]		9869832	0					
ANR	9869865	IdentifierDeclType	float [ 3 ]		9869832	0					
ANR	9869866	Identifier	xyz		9869832	1					
ANR	9869867	PrimaryExpression	3		9869832	2					
ANR	9869868	ExpressionStatement	"LogLuv24toXYZ ( * luv ++ , xyz )"	1063:2:27427:27453	9869832	1	True				
ANR	9869869	CallExpression	"LogLuv24toXYZ ( * luv ++ , xyz )"		9869832	0					
ANR	9869870	Callee	LogLuv24toXYZ		9869832	0					
ANR	9869871	Identifier	LogLuv24toXYZ		9869832	0					
ANR	9869872	ArgumentList	* luv ++		9869832	1					
ANR	9869873	Argument	* luv ++		9869832	0					
ANR	9869874	UnaryOperationExpression	* luv ++		9869832	0					
ANR	9869875	UnaryOperator	*		9869832	0					
ANR	9869876	PostIncDecOperationExpression	luv ++		9869832	1					
ANR	9869877	Identifier	luv		9869832	0					
ANR	9869878	IncDec	++		9869832	1					
ANR	9869879	Argument	xyz		9869832	1					
ANR	9869880	Identifier	xyz		9869832	0					
ANR	9869881	ExpressionStatement	"XYZtoRGB24 ( xyz , rgb )"	1064:2:27457:27477	9869832	2	True				
ANR	9869882	CallExpression	"XYZtoRGB24 ( xyz , rgb )"		9869832	0					
ANR	9869883	Callee	XYZtoRGB24		9869832	0					
ANR	9869884	Identifier	XYZtoRGB24		9869832	0					
ANR	9869885	ArgumentList	xyz		9869832	1					
ANR	9869886	Argument	xyz		9869832	0					
ANR	9869887	Identifier	xyz		9869832	0					
ANR	9869888	Argument	rgb		9869832	1					
ANR	9869889	Identifier	rgb		9869832	0					
ANR	9869890	ExpressionStatement	rgb += 3	1065:2:27481:27489	9869832	3	True				
ANR	9869891	AssignmentExpression	rgb += 3		9869832	0		+=			
ANR	9869892	Identifier	rgb		9869832	0					
ANR	9869893	PrimaryExpression	3		9869832	1					
ANR	9869894	ReturnType	static void		9869832	1					
ANR	9869895	Identifier	Luv24toRGB		9869832	2					
ANR	9869896	ParameterList	"LogLuvState * sp , uint8 * op , tmsize_t n"		9869832	3					
ANR	9869897	Parameter	LogLuvState * sp	1055:11:27282:27296	9869832	0	True				
ANR	9869898	ParameterType	LogLuvState *		9869832	0					
ANR	9869899	Identifier	sp		9869832	1					
ANR	9869900	Parameter	uint8 * op	1055:28:27299:27307	9869832	1	True				
ANR	9869901	ParameterType	uint8 *		9869832	0					
ANR	9869902	Identifier	op		9869832	1					
ANR	9869903	Parameter	tmsize_t n	1055:39:27310:27319	9869832	2	True				
ANR	9869904	ParameterType	tmsize_t		9869832	0					
ANR	9869905	Identifier	n		9869832	1					
ANR	9869906	CFGEntryNode	ENTRY		9869832		True				
ANR	9869907	CFGExitNode	EXIT		9869832		True				
ANR	9869908	Symbol	* sp		9869832						
ANR	9869909	Symbol	op		9869832						
ANR	9869910	Symbol	* luv ++		9869832						
ANR	9869911	Symbol	xyz		9869832						
ANR	9869912	Symbol	sp -> tbuf		9869832						
ANR	9869913	Symbol	luv		9869832						
ANR	9869914	Symbol	rgb		9869832						
ANR	9869915	Symbol	sp		9869832						
ANR	9869916	Symbol	n		9869832						
ANR	9869917	Function	Luv24fromXYZ	1069:0:27497:27713							
ANR	9869918	FunctionDef	"Luv24fromXYZ (LogLuvState * sp , uint8 * op , tmsize_t n)"		9869917	0					
ANR	9869919	CompoundStatement		1071:0:27562:27713	9869917	0					
ANR	9869920	IdentifierDeclStatement	uint32 * luv = ( uint32 * ) sp -> tbuf ;	1072:1:27565:27597	9869917	0	True				
ANR	9869921	IdentifierDecl	* luv = ( uint32 * ) sp -> tbuf		9869917	0					
ANR	9869922	IdentifierDeclType	uint32 *		9869917	0					
ANR	9869923	Identifier	luv		9869917	1					
ANR	9869924	AssignmentExpression	* luv = ( uint32 * ) sp -> tbuf		9869917	2		=			
ANR	9869925	Identifier	luv		9869917	0					
ANR	9869926	CastExpression	( uint32 * ) sp -> tbuf		9869917	1					
ANR	9869927	CastTarget	uint32 *		9869917	0					
ANR	9869928	PtrMemberAccess	sp -> tbuf		9869917	1					
ANR	9869929	Identifier	sp		9869917	0					
ANR	9869930	Identifier	tbuf		9869917	1					
ANR	9869931	IdentifierDeclStatement	float * xyz = ( float * ) op ;	1073:1:27602:27626	9869917	1	True				
ANR	9869932	IdentifierDecl	* xyz = ( float * ) op		9869917	0					
ANR	9869933	IdentifierDeclType	float *		9869917	0					
ANR	9869934	Identifier	xyz		9869917	1					
ANR	9869935	AssignmentExpression	* xyz = ( float * ) op		9869917	2		=			
ANR	9869936	Identifier	xyz		9869917	0					
ANR	9869937	CastExpression	( float * ) op		9869917	1					
ANR	9869938	CastTarget	float *		9869917	0					
ANR	9869939	Identifier	op		9869917	1					
ANR	9869940	WhileStatement	while ( n -- > 0 )		9869917	2					
ANR	9869941	Condition	n -- > 0	1075:8:27637:27643	9869917	0	True				
ANR	9869942	RelationalExpression	n -- > 0		9869917	0		>			
ANR	9869943	PostIncDecOperationExpression	n --		9869917	0					
ANR	9869944	Identifier	n		9869917	0					
ANR	9869945	IncDec	--		9869917	1					
ANR	9869946	PrimaryExpression	0		9869917	1					
ANR	9869947	CompoundStatement		5:17:83:83	9869917	1					
ANR	9869948	ExpressionStatement	"* luv ++ = LogLuv24fromXYZ ( xyz , sp -> encode_meth )"	1076:2:27650:27696	9869917	0	True				
ANR	9869949	AssignmentExpression	"* luv ++ = LogLuv24fromXYZ ( xyz , sp -> encode_meth )"		9869917	0		=			
ANR	9869950	UnaryOperationExpression	* luv ++		9869917	0					
ANR	9869951	UnaryOperator	*		9869917	0					
ANR	9869952	PostIncDecOperationExpression	luv ++		9869917	1					
ANR	9869953	Identifier	luv		9869917	0					
ANR	9869954	IncDec	++		9869917	1					
ANR	9869955	CallExpression	"LogLuv24fromXYZ ( xyz , sp -> encode_meth )"		9869917	1					
ANR	9869956	Callee	LogLuv24fromXYZ		9869917	0					
ANR	9869957	Identifier	LogLuv24fromXYZ		9869917	0					
ANR	9869958	ArgumentList	xyz		9869917	1					
ANR	9869959	Argument	xyz		9869917	0					
ANR	9869960	Identifier	xyz		9869917	0					
ANR	9869961	Argument	sp -> encode_meth		9869917	1					
ANR	9869962	PtrMemberAccess	sp -> encode_meth		9869917	0					
ANR	9869963	Identifier	sp		9869917	0					
ANR	9869964	Identifier	encode_meth		9869917	1					
ANR	9869965	ExpressionStatement	xyz += 3	1077:2:27700:27708	9869917	1	True				
ANR	9869966	AssignmentExpression	xyz += 3		9869917	0		+=			
ANR	9869967	Identifier	xyz		9869917	0					
ANR	9869968	PrimaryExpression	3		9869917	1					
ANR	9869969	ReturnType	static void		9869917	1					
ANR	9869970	Identifier	Luv24fromXYZ		9869917	2					
ANR	9869971	ParameterList	"LogLuvState * sp , uint8 * op , tmsize_t n"		9869917	3					
ANR	9869972	Parameter	LogLuvState * sp	1070:13:27522:27536	9869917	0	True				
ANR	9869973	ParameterType	LogLuvState *		9869917	0					
ANR	9869974	Identifier	sp		9869917	1					
ANR	9869975	Parameter	uint8 * op	1070:30:27539:27547	9869917	1	True				
ANR	9869976	ParameterType	uint8 *		9869917	0					
ANR	9869977	Identifier	op		9869917	1					
ANR	9869978	Parameter	tmsize_t n	1070:41:27550:27559	9869917	2	True				
ANR	9869979	ParameterType	tmsize_t		9869917	0					
ANR	9869980	Identifier	n		9869917	1					
ANR	9869981	CFGEntryNode	ENTRY		9869917		True				
ANR	9869982	CFGExitNode	EXIT		9869917		True				
ANR	9869983	Symbol	* sp		9869917						
ANR	9869984	Symbol	op		9869917						
ANR	9869985	Symbol	* luv ++		9869917						
ANR	9869986	Symbol	LogLuv24fromXYZ		9869917						
ANR	9869987	Symbol	xyz		9869917						
ANR	9869988	Symbol	sp -> tbuf		9869917						
ANR	9869989	Symbol	sp -> encode_meth		9869917						
ANR	9869990	Symbol	luv		9869917						
ANR	9869991	Symbol	sp		9869917						
ANR	9869992	Symbol	n		9869917						
ANR	9869993	Function	Luv24fromLuv48	1081:0:27716:28341							
ANR	9869994	FunctionDef	"Luv24fromLuv48 (LogLuvState * sp , uint8 * op , tmsize_t n)"		9869993	0					
ANR	9869995	CompoundStatement		1083:0:27783:28341	9869993	0					
ANR	9869996	IdentifierDeclStatement	uint32 * luv = ( uint32 * ) sp -> tbuf ;	1084:1:27786:27818	9869993	0	True				
ANR	9869997	IdentifierDecl	* luv = ( uint32 * ) sp -> tbuf		9869993	0					
ANR	9869998	IdentifierDeclType	uint32 *		9869993	0					
ANR	9869999	Identifier	luv		9869993	1					
ANR	9870000	AssignmentExpression	* luv = ( uint32 * ) sp -> tbuf		9869993	2		=			
ANR	9870001	Identifier	luv		9869993	0					
ANR	9870002	CastExpression	( uint32 * ) sp -> tbuf		9869993	1					
ANR	9870003	CastTarget	uint32 *		9869993	0					
ANR	9870004	PtrMemberAccess	sp -> tbuf		9869993	1					
ANR	9870005	Identifier	sp		9869993	0					
ANR	9870006	Identifier	tbuf		9869993	1					
ANR	9870007	IdentifierDeclStatement	int16 * luv3 = ( int16 * ) op ;	1085:1:27823:27848	9869993	1	True				
ANR	9870008	IdentifierDecl	* luv3 = ( int16 * ) op		9869993	0					
ANR	9870009	IdentifierDeclType	int16 *		9869993	0					
ANR	9870010	Identifier	luv3		9869993	1					
ANR	9870011	AssignmentExpression	* luv3 = ( int16 * ) op		9869993	2		=			
ANR	9870012	Identifier	luv3		9869993	0					
ANR	9870013	CastExpression	( int16 * ) op		9869993	1					
ANR	9870014	CastTarget	int16 *		9869993	0					
ANR	9870015	Identifier	op		9869993	1					
ANR	9870016	WhileStatement	while ( n -- > 0 )		9869993	2					
ANR	9870017	Condition	n -- > 0	1087:8:27859:27865	9869993	0	True				
ANR	9870018	RelationalExpression	n -- > 0		9869993	0		>			
ANR	9870019	PostIncDecOperationExpression	n --		9869993	0					
ANR	9870020	Identifier	n		9869993	0					
ANR	9870021	IncDec	--		9869993	1					
ANR	9870022	PrimaryExpression	0		9869993	1					
ANR	9870023	CompoundStatement		6:2:88:98	9869993	1					
ANR	9870024	IdentifierDeclStatement	"int Le , Ce ;"	1088:2:27872:27882	9869993	0	True				
ANR	9870025	IdentifierDecl	Le		9869993	0					
ANR	9870026	IdentifierDeclType	int		9869993	0					
ANR	9870027	Identifier	Le		9869993	1					
ANR	9870028	IdentifierDecl	Ce		9869993	1					
ANR	9870029	IdentifierDeclType	int		9869993	0					
ANR	9870030	Identifier	Ce		9869993	1					
ANR	9870031	IfStatement	if ( luv3 [ 0 ] <= 0 )		9869993	1					
ANR	9870032	Condition	luv3 [ 0 ] <= 0	1090:6:27891:27902	9869993	0	True				
ANR	9870033	RelationalExpression	luv3 [ 0 ] <= 0		9869993	0		<=			
ANR	9870034	ArrayIndexing	luv3 [ 0 ]		9869993	0					
ANR	9870035	Identifier	luv3		9869993	0					
ANR	9870036	PrimaryExpression	0		9869993	1					
ANR	9870037	PrimaryExpression	0		9869993	1					
ANR	9870038	ExpressionStatement	Le = 0	1091:3:27908:27914	9869993	1	True				
ANR	9870039	AssignmentExpression	Le = 0		9869993	0		=			
ANR	9870040	Identifier	Le		9869993	0					
ANR	9870041	PrimaryExpression	0		9869993	1					
ANR	9870042	ElseStatement	else		9869993	0					
ANR	9870043	IfStatement	if ( luv3 [ 0 ] >= ( 1 << 12 ) + 3314 )		9869993	0					
ANR	9870044	Condition	luv3 [ 0 ] >= ( 1 << 12 ) + 3314	1092:11:27927:27949	9869993	0	True				
ANR	9870045	RelationalExpression	luv3 [ 0 ] >= ( 1 << 12 ) + 3314		9869993	0		>=			
ANR	9870046	ArrayIndexing	luv3 [ 0 ]		9869993	0					
ANR	9870047	Identifier	luv3		9869993	0					
ANR	9870048	PrimaryExpression	0		9869993	1					
ANR	9870049	AdditiveExpression	( 1 << 12 ) + 3314		9869993	1		+			
ANR	9870050	ShiftExpression	1 << 12		9869993	0		<<			
ANR	9870051	PrimaryExpression	1		9869993	0					
ANR	9870052	PrimaryExpression	12		9869993	1					
ANR	9870053	PrimaryExpression	3314		9869993	1					
ANR	9870054	ExpressionStatement	Le = ( 1 << 10 ) - 1	1093:3:27955:27971	9869993	1	True				
ANR	9870055	AssignmentExpression	Le = ( 1 << 10 ) - 1		9869993	0		=			
ANR	9870056	Identifier	Le		9869993	0					
ANR	9870057	AdditiveExpression	( 1 << 10 ) - 1		9869993	1		-			
ANR	9870058	ShiftExpression	1 << 10		9869993	0		<<			
ANR	9870059	PrimaryExpression	1		9869993	0					
ANR	9870060	PrimaryExpression	10		9869993	1					
ANR	9870061	PrimaryExpression	1		9869993	1					
ANR	9870062	ElseStatement	else		9869993	0					
ANR	9870063	IfStatement	if ( sp -> encode_meth == SGILOGENCODE_NODITHER )		9869993	0					
ANR	9870064	Condition	sp -> encode_meth == SGILOGENCODE_NODITHER	1094:11:27984:28023	9869993	0	True				
ANR	9870065	EqualityExpression	sp -> encode_meth == SGILOGENCODE_NODITHER		9869993	0		==			
ANR	9870066	PtrMemberAccess	sp -> encode_meth		9869993	0					
ANR	9870067	Identifier	sp		9869993	0					
ANR	9870068	Identifier	encode_meth		9869993	1					
ANR	9870069	Identifier	SGILOGENCODE_NODITHER		9869993	1					
ANR	9870070	ExpressionStatement	Le = ( luv3 [ 0 ] - 3314 ) >> 2	1095:3:28029:28053	9869993	1	True				
ANR	9870071	AssignmentExpression	Le = ( luv3 [ 0 ] - 3314 ) >> 2		9869993	0		=			
ANR	9870072	Identifier	Le		9869993	0					
ANR	9870073	ShiftExpression	( luv3 [ 0 ] - 3314 ) >> 2		9869993	1		>>			
ANR	9870074	AdditiveExpression	luv3 [ 0 ] - 3314		9869993	0		-			
ANR	9870075	ArrayIndexing	luv3 [ 0 ]		9869993	0					
ANR	9870076	Identifier	luv3		9869993	0					
ANR	9870077	PrimaryExpression	0		9869993	1					
ANR	9870078	PrimaryExpression	3314		9869993	1					
ANR	9870079	PrimaryExpression	2		9869993	1					
ANR	9870080	ElseStatement	else		9869993	0					
ANR	9870081	ExpressionStatement	"Le = itrunc ( .25 * ( luv3 [ 0 ] - 3314. ) , sp -> encode_meth )"	1097:3:28065:28114	9869993	0	True				
ANR	9870082	AssignmentExpression	"Le = itrunc ( .25 * ( luv3 [ 0 ] - 3314. ) , sp -> encode_meth )"		9869993	0		=			
ANR	9870083	Identifier	Le		9869993	0					
ANR	9870084	CallExpression	"itrunc ( .25 * ( luv3 [ 0 ] - 3314. ) , sp -> encode_meth )"		9869993	1					
ANR	9870085	Callee	itrunc		9869993	0					
ANR	9870086	Identifier	itrunc		9869993	0					
ANR	9870087	ArgumentList	.25 * ( luv3 [ 0 ] - 3314. )		9869993	1					
ANR	9870088	Argument	.25 * ( luv3 [ 0 ] - 3314. )		9869993	0					
ANR	9870089	MultiplicativeExpression	.25 * ( luv3 [ 0 ] - 3314. )		9869993	0		*			
ANR	9870090	PrimaryExpression	.25		9869993	0					
ANR	9870091	AdditiveExpression	luv3 [ 0 ] - 3314.		9869993	1		-			
ANR	9870092	ArrayIndexing	luv3 [ 0 ]		9869993	0					
ANR	9870093	Identifier	luv3		9869993	0					
ANR	9870094	PrimaryExpression	0		9869993	1					
ANR	9870095	PrimaryExpression	3314.		9869993	1					
ANR	9870096	Argument	sp -> encode_meth		9869993	1					
ANR	9870097	PtrMemberAccess	sp -> encode_meth		9869993	0					
ANR	9870098	Identifier	sp		9869993	0					
ANR	9870099	Identifier	encode_meth		9869993	1					
ANR	9870100	ExpressionStatement	"Ce = uv_encode ( ( luv3 [ 1 ] + .5 ) / ( 1 << 15 ) , ( luv3 [ 2 ] + .5 ) / ( 1 << 15 ) , sp -> encode_meth )"	1099:2:28119:28199	9869993	2	True				
ANR	9870101	AssignmentExpression	"Ce = uv_encode ( ( luv3 [ 1 ] + .5 ) / ( 1 << 15 ) , ( luv3 [ 2 ] + .5 ) / ( 1 << 15 ) , sp -> encode_meth )"		9869993	0		=			
ANR	9870102	Identifier	Ce		9869993	0					
ANR	9870103	CallExpression	"uv_encode ( ( luv3 [ 1 ] + .5 ) / ( 1 << 15 ) , ( luv3 [ 2 ] + .5 ) / ( 1 << 15 ) , sp -> encode_meth )"		9869993	1					
ANR	9870104	Callee	uv_encode		9869993	0					
ANR	9870105	Identifier	uv_encode		9869993	0					
ANR	9870106	ArgumentList	( luv3 [ 1 ] + .5 ) / ( 1 << 15 )		9869993	1					
ANR	9870107	Argument	( luv3 [ 1 ] + .5 ) / ( 1 << 15 )		9869993	0					
ANR	9870108	MultiplicativeExpression	( luv3 [ 1 ] + .5 ) / ( 1 << 15 )		9869993	0		/			
ANR	9870109	AdditiveExpression	luv3 [ 1 ] + .5		9869993	0		+			
ANR	9870110	ArrayIndexing	luv3 [ 1 ]		9869993	0					
ANR	9870111	Identifier	luv3		9869993	0					
ANR	9870112	PrimaryExpression	1		9869993	1					
ANR	9870113	PrimaryExpression	.5		9869993	1					
ANR	9870114	ShiftExpression	1 << 15		9869993	1		<<			
ANR	9870115	PrimaryExpression	1		9869993	0					
ANR	9870116	PrimaryExpression	15		9869993	1					
ANR	9870117	Argument	( luv3 [ 2 ] + .5 ) / ( 1 << 15 )		9869993	1					
ANR	9870118	MultiplicativeExpression	( luv3 [ 2 ] + .5 ) / ( 1 << 15 )		9869993	0		/			
ANR	9870119	AdditiveExpression	luv3 [ 2 ] + .5		9869993	0		+			
ANR	9870120	ArrayIndexing	luv3 [ 2 ]		9869993	0					
ANR	9870121	Identifier	luv3		9869993	0					
ANR	9870122	PrimaryExpression	2		9869993	1					
ANR	9870123	PrimaryExpression	.5		9869993	1					
ANR	9870124	ShiftExpression	1 << 15		9869993	1		<<			
ANR	9870125	PrimaryExpression	1		9869993	0					
ANR	9870126	PrimaryExpression	15		9869993	1					
ANR	9870127	Argument	sp -> encode_meth		9869993	2					
ANR	9870128	PtrMemberAccess	sp -> encode_meth		9869993	0					
ANR	9870129	Identifier	sp		9869993	0					
ANR	9870130	Identifier	encode_meth		9869993	1					
ANR	9870131	IfStatement	if ( Ce < 0 )		9869993	3					
ANR	9870132	Condition	Ce < 0	1101:6:28207:28212	9869993	0	True				
ANR	9870133	RelationalExpression	Ce < 0		9869993	0		<			
ANR	9870134	Identifier	Ce		9869993	0					
ANR	9870135	PrimaryExpression	0		9869993	1					
ANR	9870136	ExpressionStatement	"Ce = uv_encode ( U_NEU , V_NEU , SGILOGENCODE_NODITHER )"	1102:3:28238:28289	9869993	1	True				
ANR	9870137	AssignmentExpression	"Ce = uv_encode ( U_NEU , V_NEU , SGILOGENCODE_NODITHER )"		9869993	0		=			
ANR	9870138	Identifier	Ce		9869993	0					
ANR	9870139	CallExpression	"uv_encode ( U_NEU , V_NEU , SGILOGENCODE_NODITHER )"		9869993	1					
ANR	9870140	Callee	uv_encode		9869993	0					
ANR	9870141	Identifier	uv_encode		9869993	0					
ANR	9870142	ArgumentList	U_NEU		9869993	1					
ANR	9870143	Argument	U_NEU		9869993	0					
ANR	9870144	Identifier	U_NEU		9869993	0					
ANR	9870145	Argument	V_NEU		9869993	1					
ANR	9870146	Identifier	V_NEU		9869993	0					
ANR	9870147	Argument	SGILOGENCODE_NODITHER		9869993	2					
ANR	9870148	Identifier	SGILOGENCODE_NODITHER		9869993	0					
ANR	9870149	ExpressionStatement	* luv ++ = ( uint32 ) Le << 14 | Ce	1103:2:28293:28323	9869993	4	True				
ANR	9870150	AssignmentExpression	* luv ++ = ( uint32 ) Le << 14 | Ce		9869993	0		=			
ANR	9870151	UnaryOperationExpression	* luv ++		9869993	0					
ANR	9870152	UnaryOperator	*		9869993	0					
ANR	9870153	PostIncDecOperationExpression	luv ++		9869993	1					
ANR	9870154	Identifier	luv		9869993	0					
ANR	9870155	IncDec	++		9869993	1					
ANR	9870156	InclusiveOrExpression	( uint32 ) Le << 14 | Ce		9869993	1		|			
ANR	9870157	ShiftExpression	( uint32 ) Le << 14		9869993	0		<<			
ANR	9870158	CastExpression	( uint32 ) Le		9869993	0					
ANR	9870159	CastTarget	uint32		9869993	0					
ANR	9870160	Identifier	Le		9869993	1					
ANR	9870161	PrimaryExpression	14		9869993	1					
ANR	9870162	Identifier	Ce		9869993	1					
ANR	9870163	ExpressionStatement	luv3 += 3	1104:2:28327:28336	9869993	5	True				
ANR	9870164	AssignmentExpression	luv3 += 3		9869993	0		+=			
ANR	9870165	Identifier	luv3		9869993	0					
ANR	9870166	PrimaryExpression	3		9869993	1					
ANR	9870167	ReturnType	static void		9869993	1					
ANR	9870168	Identifier	Luv24fromLuv48		9869993	2					
ANR	9870169	ParameterList	"LogLuvState * sp , uint8 * op , tmsize_t n"		9869993	3					
ANR	9870170	Parameter	LogLuvState * sp	1082:15:27743:27757	9869993	0	True				
ANR	9870171	ParameterType	LogLuvState *		9869993	0					
ANR	9870172	Identifier	sp		9869993	1					
ANR	9870173	Parameter	uint8 * op	1082:32:27760:27768	9869993	1	True				
ANR	9870174	ParameterType	uint8 *		9869993	0					
ANR	9870175	Identifier	op		9869993	1					
ANR	9870176	Parameter	tmsize_t n	1082:43:27771:27780	9869993	2	True				
ANR	9870177	ParameterType	tmsize_t		9869993	0					
ANR	9870178	Identifier	n		9869993	1					
ANR	9870179	CFGEntryNode	ENTRY		9869993		True				
ANR	9870180	CFGExitNode	EXIT		9869993		True				
ANR	9870181	Symbol	* sp		9869993						
ANR	9870182	Symbol	op		9869993						
ANR	9870183	Symbol	SGILOGENCODE_NODITHER		9869993						
ANR	9870184	Symbol	Ce		9869993						
ANR	9870185	Symbol	* luv ++		9869993						
ANR	9870186	Symbol	uv_encode		9869993						
ANR	9870187	Symbol	itrunc		9869993						
ANR	9870188	Symbol	luv		9869993						
ANR	9870189	Symbol	n		9869993						
ANR	9870190	Symbol	U_NEU		9869993						
ANR	9870191	Symbol	luv3		9869993						
ANR	9870192	Symbol	sp -> tbuf		9869993						
ANR	9870193	Symbol	Le		9869993						
ANR	9870194	Symbol	sp -> encode_meth		9869993						
ANR	9870195	Symbol	sp		9869993						
ANR	9870196	Symbol	* luv3		9869993						
ANR	9870197	Symbol	V_NEU		9869993						
ANR	9870198	Function	LogLuv32toXYZ	1111:0:28377:28838							
ANR	9870199	FunctionDef	"LogLuv32toXYZ (uint32 p , float XYZ [ 3 ])"		9870198	0					
ANR	9870200	CompoundStatement		1113:0:28420:28838	9870198	0					
ANR	9870201	IdentifierDeclStatement	"double L , u , v , s , x , y ;"	1114:1:28423:28446	9870198	0	True				
ANR	9870202	IdentifierDecl	L		9870198	0					
ANR	9870203	IdentifierDeclType	double		9870198	0					
ANR	9870204	Identifier	L		9870198	1					
ANR	9870205	IdentifierDecl	u		9870198	1					
ANR	9870206	IdentifierDeclType	double		9870198	0					
ANR	9870207	Identifier	u		9870198	1					
ANR	9870208	IdentifierDecl	v		9870198	2					
ANR	9870209	IdentifierDeclType	double		9870198	0					
ANR	9870210	Identifier	v		9870198	1					
ANR	9870211	IdentifierDecl	s		9870198	3					
ANR	9870212	IdentifierDeclType	double		9870198	0					
ANR	9870213	Identifier	s		9870198	1					
ANR	9870214	IdentifierDecl	x		9870198	4					
ANR	9870215	IdentifierDeclType	double		9870198	0					
ANR	9870216	Identifier	x		9870198	1					
ANR	9870217	IdentifierDecl	y		9870198	5					
ANR	9870218	IdentifierDeclType	double		9870198	0					
ANR	9870219	Identifier	y		9870198	1					
ANR	9870220	ExpressionStatement	L = LogL16toY ( ( int ) p >> 16 )	1116:1:28477:28504	9870198	1	True				
ANR	9870221	AssignmentExpression	L = LogL16toY ( ( int ) p >> 16 )		9870198	0		=			
ANR	9870222	Identifier	L		9870198	0					
ANR	9870223	CallExpression	LogL16toY ( ( int ) p >> 16 )		9870198	1					
ANR	9870224	Callee	LogL16toY		9870198	0					
ANR	9870225	Identifier	LogL16toY		9870198	0					
ANR	9870226	ArgumentList	( int ) p >> 16		9870198	1					
ANR	9870227	Argument	( int ) p >> 16		9870198	0					
ANR	9870228	ShiftExpression	( int ) p >> 16		9870198	0		>>			
ANR	9870229	CastExpression	( int ) p		9870198	0					
ANR	9870230	CastTarget	int		9870198	0					
ANR	9870231	Identifier	p		9870198	1					
ANR	9870232	PrimaryExpression	16		9870198	1					
ANR	9870233	IfStatement	if ( L <= 0. )		9870198	2					
ANR	9870234	Condition	L <= 0.	1117:5:28511:28517	9870198	0	True				
ANR	9870235	RelationalExpression	L <= 0.		9870198	0		<=			
ANR	9870236	Identifier	L		9870198	0					
ANR	9870237	PrimaryExpression	0.		9870198	1					
ANR	9870238	CompoundStatement		5:14:99:99	9870198	1					
ANR	9870239	ExpressionStatement	XYZ [ 0 ] = XYZ [ 1 ] = XYZ [ 2 ] = 0.	1118:2:28524:28553	9870198	0	True				
ANR	9870240	AssignmentExpression	XYZ [ 0 ] = XYZ [ 1 ] = XYZ [ 2 ] = 0.		9870198	0		=			
ANR	9870241	ArrayIndexing	XYZ [ 0 ]		9870198	0					
ANR	9870242	Identifier	XYZ		9870198	0					
ANR	9870243	PrimaryExpression	0		9870198	1					
ANR	9870244	AssignmentExpression	XYZ [ 1 ] = XYZ [ 2 ] = 0.		9870198	1		=			
ANR	9870245	ArrayIndexing	XYZ [ 1 ]		9870198	0					
ANR	9870246	Identifier	XYZ		9870198	0					
ANR	9870247	PrimaryExpression	1		9870198	1					
ANR	9870248	AssignmentExpression	XYZ [ 2 ] = 0.		9870198	1		=			
ANR	9870249	ArrayIndexing	XYZ [ 2 ]		9870198	0					
ANR	9870250	Identifier	XYZ		9870198	0					
ANR	9870251	PrimaryExpression	2		9870198	1					
ANR	9870252	PrimaryExpression	0.		9870198	1					
ANR	9870253	ReturnStatement	return ;	1119:2:28557:28563	9870198	1	True				
ANR	9870254	ExpressionStatement	u = 1. / UVSCALE * ( ( p >> 8 & 0xff ) + .5 )	1122:1:28593:28630	9870198	3	True				
ANR	9870255	AssignmentExpression	u = 1. / UVSCALE * ( ( p >> 8 & 0xff ) + .5 )		9870198	0		=			
ANR	9870256	Identifier	u		9870198	0					
ANR	9870257	MultiplicativeExpression	1. / UVSCALE * ( ( p >> 8 & 0xff ) + .5 )		9870198	1		/			
ANR	9870258	PrimaryExpression	1.		9870198	0					
ANR	9870259	MultiplicativeExpression	UVSCALE * ( ( p >> 8 & 0xff ) + .5 )		9870198	1		*			
ANR	9870260	Identifier	UVSCALE		9870198	0					
ANR	9870261	AdditiveExpression	( p >> 8 & 0xff ) + .5		9870198	1		+			
ANR	9870262	BitAndExpression	p >> 8 & 0xff		9870198	0		&			
ANR	9870263	ShiftExpression	p >> 8		9870198	0		>>			
ANR	9870264	Identifier	p		9870198	0					
ANR	9870265	PrimaryExpression	8		9870198	1					
ANR	9870266	PrimaryExpression	0xff		9870198	1					
ANR	9870267	PrimaryExpression	.5		9870198	1					
ANR	9870268	ExpressionStatement	v = 1. / UVSCALE * ( ( p & 0xff ) + .5 )	1123:1:28633:28667	9870198	4	True				
ANR	9870269	AssignmentExpression	v = 1. / UVSCALE * ( ( p & 0xff ) + .5 )		9870198	0		=			
ANR	9870270	Identifier	v		9870198	0					
ANR	9870271	MultiplicativeExpression	1. / UVSCALE * ( ( p & 0xff ) + .5 )		9870198	1		/			
ANR	9870272	PrimaryExpression	1.		9870198	0					
ANR	9870273	MultiplicativeExpression	UVSCALE * ( ( p & 0xff ) + .5 )		9870198	1		*			
ANR	9870274	Identifier	UVSCALE		9870198	0					
ANR	9870275	AdditiveExpression	( p & 0xff ) + .5		9870198	1		+			
ANR	9870276	BitAndExpression	p & 0xff		9870198	0		&			
ANR	9870277	Identifier	p		9870198	0					
ANR	9870278	PrimaryExpression	0xff		9870198	1					
ANR	9870279	PrimaryExpression	.5		9870198	1					
ANR	9870280	ExpressionStatement	s = 1. / ( 6. * u - 16. * v + 12. )	1124:1:28670:28697	9870198	5	True				
ANR	9870281	AssignmentExpression	s = 1. / ( 6. * u - 16. * v + 12. )		9870198	0		=			
ANR	9870282	Identifier	s		9870198	0					
ANR	9870283	MultiplicativeExpression	1. / ( 6. * u - 16. * v + 12. )		9870198	1		/			
ANR	9870284	PrimaryExpression	1.		9870198	0					
ANR	9870285	AdditiveExpression	6. * u - 16. * v + 12.		9870198	1		-			
ANR	9870286	MultiplicativeExpression	6. * u		9870198	0		*			
ANR	9870287	PrimaryExpression	6.		9870198	0					
ANR	9870288	Identifier	u		9870198	1					
ANR	9870289	AdditiveExpression	16. * v + 12.		9870198	1		+			
ANR	9870290	MultiplicativeExpression	16. * v		9870198	0		*			
ANR	9870291	PrimaryExpression	16.		9870198	0					
ANR	9870292	Identifier	v		9870198	1					
ANR	9870293	PrimaryExpression	12.		9870198	1					
ANR	9870294	ExpressionStatement	x = 9. * u * s	1125:1:28700:28712	9870198	6	True				
ANR	9870295	AssignmentExpression	x = 9. * u * s		9870198	0		=			
ANR	9870296	Identifier	x		9870198	0					
ANR	9870297	MultiplicativeExpression	9. * u * s		9870198	1		*			
ANR	9870298	PrimaryExpression	9.		9870198	0					
ANR	9870299	MultiplicativeExpression	u * s		9870198	1		*			
ANR	9870300	Identifier	u		9870198	0					
ANR	9870301	Identifier	s		9870198	1					
ANR	9870302	ExpressionStatement	y = 4. * v * s	1126:1:28715:28727	9870198	7	True				
ANR	9870303	AssignmentExpression	y = 4. * v * s		9870198	0		=			
ANR	9870304	Identifier	y		9870198	0					
ANR	9870305	MultiplicativeExpression	4. * v * s		9870198	1		*			
ANR	9870306	PrimaryExpression	4.		9870198	0					
ANR	9870307	MultiplicativeExpression	v * s		9870198	1		*			
ANR	9870308	Identifier	v		9870198	0					
ANR	9870309	Identifier	s		9870198	1					
ANR	9870310	ExpressionStatement	XYZ [ 0 ] = ( float ) ( x / y * L )	1128:1:28756:28781	9870198	8	True				
ANR	9870311	AssignmentExpression	XYZ [ 0 ] = ( float ) ( x / y * L )		9870198	0		=			
ANR	9870312	ArrayIndexing	XYZ [ 0 ]		9870198	0					
ANR	9870313	Identifier	XYZ		9870198	0					
ANR	9870314	PrimaryExpression	0		9870198	1					
ANR	9870315	CastExpression	( float ) ( x / y * L )		9870198	1					
ANR	9870316	CastTarget	float		9870198	0					
ANR	9870317	MultiplicativeExpression	x / y * L		9870198	1		/			
ANR	9870318	Identifier	x		9870198	0					
ANR	9870319	MultiplicativeExpression	y * L		9870198	1		*			
ANR	9870320	Identifier	y		9870198	0					
ANR	9870321	Identifier	L		9870198	1					
ANR	9870322	ExpressionStatement	XYZ [ 1 ] = ( float ) L	1129:1:28784:28801	9870198	9	True				
ANR	9870323	AssignmentExpression	XYZ [ 1 ] = ( float ) L		9870198	0		=			
ANR	9870324	ArrayIndexing	XYZ [ 1 ]		9870198	0					
ANR	9870325	Identifier	XYZ		9870198	0					
ANR	9870326	PrimaryExpression	1		9870198	1					
ANR	9870327	CastExpression	( float ) L		9870198	1					
ANR	9870328	CastTarget	float		9870198	0					
ANR	9870329	Identifier	L		9870198	1					
ANR	9870330	ExpressionStatement	XYZ [ 2 ] = ( float ) ( ( 1. - x - y ) / y * L )	1130:1:28804:28836	9870198	10	True				
ANR	9870331	AssignmentExpression	XYZ [ 2 ] = ( float ) ( ( 1. - x - y ) / y * L )		9870198	0		=			
ANR	9870332	ArrayIndexing	XYZ [ 2 ]		9870198	0					
ANR	9870333	Identifier	XYZ		9870198	0					
ANR	9870334	PrimaryExpression	2		9870198	1					
ANR	9870335	CastExpression	( float ) ( ( 1. - x - y ) / y * L )		9870198	1					
ANR	9870336	CastTarget	float		9870198	0					
ANR	9870337	MultiplicativeExpression	( 1. - x - y ) / y * L		9870198	1		/			
ANR	9870338	AdditiveExpression	1. - x - y		9870198	0		-			
ANR	9870339	PrimaryExpression	1.		9870198	0					
ANR	9870340	AdditiveExpression	x - y		9870198	1		-			
ANR	9870341	Identifier	x		9870198	0					
ANR	9870342	Identifier	y		9870198	1					
ANR	9870343	MultiplicativeExpression	y * L		9870198	1		*			
ANR	9870344	Identifier	y		9870198	0					
ANR	9870345	Identifier	L		9870198	1					
ANR	9870346	ReturnType	void		9870198	1					
ANR	9870347	Identifier	LogLuv32toXYZ		9870198	2					
ANR	9870348	ParameterList	"uint32 p , float XYZ [ 3 ]"		9870198	3					
ANR	9870349	Parameter	uint32 p	1112:14:28396:28403	9870198	0	True				
ANR	9870350	ParameterType	uint32		9870198	0					
ANR	9870351	Identifier	p		9870198	1					
ANR	9870352	Parameter	float XYZ [ 3 ]	1112:24:28406:28417	9870198	1	True				
ANR	9870353	ParameterType	float [ 3 ]		9870198	0					
ANR	9870354	Identifier	XYZ		9870198	1					
ANR	9870355	CFGEntryNode	ENTRY		9870198		True				
ANR	9870356	CFGExitNode	EXIT		9870198		True				
ANR	9870357	Symbol	p		9870198						
ANR	9870358	Symbol	s		9870198						
ANR	9870359	Symbol	LogL16toY		9870198						
ANR	9870360	Symbol	u		9870198						
ANR	9870361	Symbol	v		9870198						
ANR	9870362	Symbol	XYZ		9870198						
ANR	9870363	Symbol	x		9870198						
ANR	9870364	Symbol	y		9870198						
ANR	9870365	Symbol	UVSCALE		9870198						
ANR	9870366	Symbol	L		9870198						
ANR	9870367	Symbol	* XYZ		9870198						
ANR	9870368	Function	LogLuv32fromXYZ	1136:0:28874:29429							
ANR	9870369	FunctionDef	"LogLuv32fromXYZ (float XYZ [ 3 ] , int em)"		9870368	0					
ANR	9870370	CompoundStatement		1138:0:28919:29429	9870368	0					
ANR	9870371	IdentifierDeclStatement	"unsigned int Le , ue , ve ;"	1139:1:28922:28945	9870368	0	True				
ANR	9870372	IdentifierDecl	Le		9870368	0					
ANR	9870373	IdentifierDeclType	unsigned int		9870368	0					
ANR	9870374	Identifier	Le		9870368	1					
ANR	9870375	IdentifierDecl	ue		9870368	1					
ANR	9870376	IdentifierDeclType	unsigned int		9870368	0					
ANR	9870377	Identifier	ue		9870368	1					
ANR	9870378	IdentifierDecl	ve		9870368	2					
ANR	9870379	IdentifierDeclType	unsigned int		9870368	0					
ANR	9870380	Identifier	ve		9870368	1					
ANR	9870381	IdentifierDeclStatement	"double u , v , s ;"	1140:1:28948:28962	9870368	1	True				
ANR	9870382	IdentifierDecl	u		9870368	0					
ANR	9870383	IdentifierDeclType	double		9870368	0					
ANR	9870384	Identifier	u		9870368	1					
ANR	9870385	IdentifierDecl	v		9870368	1					
ANR	9870386	IdentifierDeclType	double		9870368	0					
ANR	9870387	Identifier	v		9870368	1					
ANR	9870388	IdentifierDecl	s		9870368	2					
ANR	9870389	IdentifierDeclType	double		9870368	0					
ANR	9870390	Identifier	s		9870368	1					
ANR	9870391	ExpressionStatement	"Le = ( unsigned int ) LogL16fromY ( XYZ [ 1 ] , em )"	1142:1:28993:29035	9870368	2	True				
ANR	9870392	AssignmentExpression	"Le = ( unsigned int ) LogL16fromY ( XYZ [ 1 ] , em )"		9870368	0		=			
ANR	9870393	Identifier	Le		9870368	0					
ANR	9870394	CastExpression	"( unsigned int ) LogL16fromY ( XYZ [ 1 ] , em )"		9870368	1					
ANR	9870395	CastTarget	unsigned int		9870368	0					
ANR	9870396	CallExpression	"LogL16fromY ( XYZ [ 1 ] , em )"		9870368	1					
ANR	9870397	Callee	LogL16fromY		9870368	0					
ANR	9870398	Identifier	LogL16fromY		9870368	0					
ANR	9870399	ArgumentList	XYZ [ 1 ]		9870368	1					
ANR	9870400	Argument	XYZ [ 1 ]		9870368	0					
ANR	9870401	ArrayIndexing	XYZ [ 1 ]		9870368	0					
ANR	9870402	Identifier	XYZ		9870368	0					
ANR	9870403	PrimaryExpression	1		9870368	1					
ANR	9870404	Argument	em		9870368	1					
ANR	9870405	Identifier	em		9870368	0					
ANR	9870406	ExpressionStatement	s = XYZ [ 0 ] + 15. * XYZ [ 1 ] + 3. * XYZ [ 2 ]	1144:1:29062:29097	9870368	3	True				
ANR	9870407	AssignmentExpression	s = XYZ [ 0 ] + 15. * XYZ [ 1 ] + 3. * XYZ [ 2 ]		9870368	0		=			
ANR	9870408	Identifier	s		9870368	0					
ANR	9870409	AdditiveExpression	XYZ [ 0 ] + 15. * XYZ [ 1 ] + 3. * XYZ [ 2 ]		9870368	1		+			
ANR	9870410	ArrayIndexing	XYZ [ 0 ]		9870368	0					
ANR	9870411	Identifier	XYZ		9870368	0					
ANR	9870412	PrimaryExpression	0		9870368	1					
ANR	9870413	AdditiveExpression	15. * XYZ [ 1 ] + 3. * XYZ [ 2 ]		9870368	1		+			
ANR	9870414	MultiplicativeExpression	15. * XYZ [ 1 ]		9870368	0		*			
ANR	9870415	PrimaryExpression	15.		9870368	0					
ANR	9870416	ArrayIndexing	XYZ [ 1 ]		9870368	1					
ANR	9870417	Identifier	XYZ		9870368	0					
ANR	9870418	PrimaryExpression	1		9870368	1					
ANR	9870419	MultiplicativeExpression	3. * XYZ [ 2 ]		9870368	1		*			
ANR	9870420	PrimaryExpression	3.		9870368	0					
ANR	9870421	ArrayIndexing	XYZ [ 2 ]		9870368	1					
ANR	9870422	Identifier	XYZ		9870368	0					
ANR	9870423	PrimaryExpression	2		9870368	1					
ANR	9870424	IfStatement	if ( ! Le || s <= 0. )		9870368	4					
ANR	9870425	Condition	! Le || s <= 0.	1145:5:29104:29117	9870368	0	True				
ANR	9870426	OrExpression	! Le || s <= 0.		9870368	0		||			
ANR	9870427	UnaryOperationExpression	! Le		9870368	0					
ANR	9870428	UnaryOperator	!		9870368	0					
ANR	9870429	Identifier	Le		9870368	1					
ANR	9870430	RelationalExpression	s <= 0.		9870368	1		<=			
ANR	9870431	Identifier	s		9870368	0					
ANR	9870432	PrimaryExpression	0.		9870368	1					
ANR	9870433	CompoundStatement		8:21:200:200	9870368	1					
ANR	9870434	ExpressionStatement	u = U_NEU	1146:2:29124:29133	9870368	0	True				
ANR	9870435	AssignmentExpression	u = U_NEU		9870368	0		=			
ANR	9870436	Identifier	u		9870368	0					
ANR	9870437	Identifier	U_NEU		9870368	1					
ANR	9870438	ExpressionStatement	v = V_NEU	1147:2:29137:29146	9870368	1	True				
ANR	9870439	AssignmentExpression	v = V_NEU		9870368	0		=			
ANR	9870440	Identifier	v		9870368	0					
ANR	9870441	Identifier	V_NEU		9870368	1					
ANR	9870442	ElseStatement	else		9870368	0					
ANR	9870443	CompoundStatement		11:8:236:236	9870368	0					
ANR	9870444	ExpressionStatement	u = 4. * XYZ [ 0 ] / s	1149:2:29160:29177	9870368	0	True				
ANR	9870445	AssignmentExpression	u = 4. * XYZ [ 0 ] / s		9870368	0		=			
ANR	9870446	Identifier	u		9870368	0					
ANR	9870447	MultiplicativeExpression	4. * XYZ [ 0 ] / s		9870368	1		*			
ANR	9870448	PrimaryExpression	4.		9870368	0					
ANR	9870449	MultiplicativeExpression	XYZ [ 0 ] / s		9870368	1		/			
ANR	9870450	ArrayIndexing	XYZ [ 0 ]		9870368	0					
ANR	9870451	Identifier	XYZ		9870368	0					
ANR	9870452	PrimaryExpression	0		9870368	1					
ANR	9870453	Identifier	s		9870368	1					
ANR	9870454	ExpressionStatement	v = 9. * XYZ [ 1 ] / s	1150:2:29181:29198	9870368	1	True				
ANR	9870455	AssignmentExpression	v = 9. * XYZ [ 1 ] / s		9870368	0		=			
ANR	9870456	Identifier	v		9870368	0					
ANR	9870457	MultiplicativeExpression	9. * XYZ [ 1 ] / s		9870368	1		*			
ANR	9870458	PrimaryExpression	9.		9870368	0					
ANR	9870459	MultiplicativeExpression	XYZ [ 1 ] / s		9870368	1		/			
ANR	9870460	ArrayIndexing	XYZ [ 1 ]		9870368	0					
ANR	9870461	Identifier	XYZ		9870368	0					
ANR	9870462	PrimaryExpression	1		9870368	1					
ANR	9870463	Identifier	s		9870368	1					
ANR	9870464	IfStatement	if ( u <= 0. )		9870368	5					
ANR	9870465	Condition	u <= 0.	1152:5:29208:29214	9870368	0	True				
ANR	9870466	RelationalExpression	u <= 0.		9870368	0		<=			
ANR	9870467	Identifier	u		9870368	0					
ANR	9870468	PrimaryExpression	0.		9870368	1					
ANR	9870469	ExpressionStatement	ue = 0	1152:14:29217:29223	9870368	1	True				
ANR	9870470	AssignmentExpression	ue = 0		9870368	0		=			
ANR	9870471	Identifier	ue		9870368	0					
ANR	9870472	PrimaryExpression	0		9870368	1					
ANR	9870473	ElseStatement	else		9870368	0					
ANR	9870474	ExpressionStatement	"ue = itrunc ( UVSCALE * u , em )"	1153:6:29231:29257	9870368	0	True				
ANR	9870475	AssignmentExpression	"ue = itrunc ( UVSCALE * u , em )"		9870368	0		=			
ANR	9870476	Identifier	ue		9870368	0					
ANR	9870477	CallExpression	"itrunc ( UVSCALE * u , em )"		9870368	1					
ANR	9870478	Callee	itrunc		9870368	0					
ANR	9870479	Identifier	itrunc		9870368	0					
ANR	9870480	ArgumentList	UVSCALE * u		9870368	1					
ANR	9870481	Argument	UVSCALE * u		9870368	0					
ANR	9870482	MultiplicativeExpression	UVSCALE * u		9870368	0		*			
ANR	9870483	Identifier	UVSCALE		9870368	0					
ANR	9870484	Identifier	u		9870368	1					
ANR	9870485	Argument	em		9870368	1					
ANR	9870486	Identifier	em		9870368	0					
ANR	9870487	IfStatement	if ( ue > 255 )		9870368	6					
ANR	9870488	Condition	ue > 255	1154:5:29264:29271	9870368	0	True				
ANR	9870489	RelationalExpression	ue > 255		9870368	0		>			
ANR	9870490	Identifier	ue		9870368	0					
ANR	9870491	PrimaryExpression	255		9870368	1					
ANR	9870492	ExpressionStatement	ue = 255	1154:15:29274:29282	9870368	1	True				
ANR	9870493	AssignmentExpression	ue = 255		9870368	0		=			
ANR	9870494	Identifier	ue		9870368	0					
ANR	9870495	PrimaryExpression	255		9870368	1					
ANR	9870496	IfStatement	if ( v <= 0. )		9870368	7					
ANR	9870497	Condition	v <= 0.	1155:5:29289:29295	9870368	0	True				
ANR	9870498	RelationalExpression	v <= 0.		9870368	0		<=			
ANR	9870499	Identifier	v		9870368	0					
ANR	9870500	PrimaryExpression	0.		9870368	1					
ANR	9870501	ExpressionStatement	ve = 0	1155:14:29298:29304	9870368	1	True				
ANR	9870502	AssignmentExpression	ve = 0		9870368	0		=			
ANR	9870503	Identifier	ve		9870368	0					
ANR	9870504	PrimaryExpression	0		9870368	1					
ANR	9870505	ElseStatement	else		9870368	0					
ANR	9870506	ExpressionStatement	"ve = itrunc ( UVSCALE * v , em )"	1156:6:29312:29338	9870368	0	True				
ANR	9870507	AssignmentExpression	"ve = itrunc ( UVSCALE * v , em )"		9870368	0		=			
ANR	9870508	Identifier	ve		9870368	0					
ANR	9870509	CallExpression	"itrunc ( UVSCALE * v , em )"		9870368	1					
ANR	9870510	Callee	itrunc		9870368	0					
ANR	9870511	Identifier	itrunc		9870368	0					
ANR	9870512	ArgumentList	UVSCALE * v		9870368	1					
ANR	9870513	Argument	UVSCALE * v		9870368	0					
ANR	9870514	MultiplicativeExpression	UVSCALE * v		9870368	0		*			
ANR	9870515	Identifier	UVSCALE		9870368	0					
ANR	9870516	Identifier	v		9870368	1					
ANR	9870517	Argument	em		9870368	1					
ANR	9870518	Identifier	em		9870368	0					
ANR	9870519	IfStatement	if ( ve > 255 )		9870368	8					
ANR	9870520	Condition	ve > 255	1157:5:29345:29352	9870368	0	True				
ANR	9870521	RelationalExpression	ve > 255		9870368	0		>			
ANR	9870522	Identifier	ve		9870368	0					
ANR	9870523	PrimaryExpression	255		9870368	1					
ANR	9870524	ExpressionStatement	ve = 255	1157:15:29355:29363	9870368	1	True				
ANR	9870525	AssignmentExpression	ve = 255		9870368	0		=			
ANR	9870526	Identifier	ve		9870368	0					
ANR	9870527	PrimaryExpression	255		9870368	1					
ANR	9870528	ReturnStatement	return ( Le << 16 | ue << 8 | ve ) ;	1159:1:29395:29427	9870368	9	True				
ANR	9870529	InclusiveOrExpression	Le << 16 | ue << 8 | ve		9870368	0		|			
ANR	9870530	ShiftExpression	Le << 16		9870368	0		<<			
ANR	9870531	Identifier	Le		9870368	0					
ANR	9870532	PrimaryExpression	16		9870368	1					
ANR	9870533	InclusiveOrExpression	ue << 8 | ve		9870368	1		|			
ANR	9870534	ShiftExpression	ue << 8		9870368	0		<<			
ANR	9870535	Identifier	ue		9870368	0					
ANR	9870536	PrimaryExpression	8		9870368	1					
ANR	9870537	Identifier	ve		9870368	1					
ANR	9870538	ReturnType	uint32		9870368	1					
ANR	9870539	Identifier	LogLuv32fromXYZ		9870368	2					
ANR	9870540	ParameterList	"float XYZ [ 3 ] , int em"		9870368	3					
ANR	9870541	Parameter	float XYZ [ 3 ]	1137:16:28897:28908	9870368	0	True				
ANR	9870542	ParameterType	float [ 3 ]		9870368	0					
ANR	9870543	Identifier	XYZ		9870368	1					
ANR	9870544	Parameter	int em	1137:30:28911:28916	9870368	1	True				
ANR	9870545	ParameterType	int		9870368	0					
ANR	9870546	Identifier	em		9870368	1					
ANR	9870547	CFGEntryNode	ENTRY		9870368		True				
ANR	9870548	CFGExitNode	EXIT		9870368		True				
ANR	9870549	Symbol	itrunc		9870368						
ANR	9870550	Symbol	em		9870368						
ANR	9870551	Symbol	UVSCALE		9870368						
ANR	9870552	Symbol	LogL16fromY		9870368						
ANR	9870553	Symbol	U_NEU		9870368						
ANR	9870554	Symbol	ve		9870368						
ANR	9870555	Symbol	ue		9870368						
ANR	9870556	Symbol	s		9870368						
ANR	9870557	Symbol	u		9870368						
ANR	9870558	Symbol	v		9870368						
ANR	9870559	Symbol	XYZ		9870368						
ANR	9870560	Symbol	Le		9870368						
ANR	9870561	Symbol	* XYZ		9870368						
ANR	9870562	Symbol	V_NEU		9870368						
ANR	9870563	Function	Luv32toXYZ	1162:0:29432:29626							
ANR	9870564	FunctionDef	"Luv32toXYZ (LogLuvState * sp , uint8 * op , tmsize_t n)"		9870563	0					
ANR	9870565	CompoundStatement		1164:0:29495:29626	9870563	0					
ANR	9870566	IdentifierDeclStatement	uint32 * luv = ( uint32 * ) sp -> tbuf ;	1165:1:29498:29530	9870563	0	True				
ANR	9870567	IdentifierDecl	* luv = ( uint32 * ) sp -> tbuf		9870563	0					
ANR	9870568	IdentifierDeclType	uint32 *		9870563	0					
ANR	9870569	Identifier	luv		9870563	1					
ANR	9870570	AssignmentExpression	* luv = ( uint32 * ) sp -> tbuf		9870563	2		=			
ANR	9870571	Identifier	luv		9870563	0					
ANR	9870572	CastExpression	( uint32 * ) sp -> tbuf		9870563	1					
ANR	9870573	CastTarget	uint32 *		9870563	0					
ANR	9870574	PtrMemberAccess	sp -> tbuf		9870563	1					
ANR	9870575	Identifier	sp		9870563	0					
ANR	9870576	Identifier	tbuf		9870563	1					
ANR	9870577	IdentifierDeclStatement	float * xyz = ( float * ) op ;	1166:1:29535:29559	9870563	1	True				
ANR	9870578	IdentifierDecl	* xyz = ( float * ) op		9870563	0					
ANR	9870579	IdentifierDeclType	float *		9870563	0					
ANR	9870580	Identifier	xyz		9870563	1					
ANR	9870581	AssignmentExpression	* xyz = ( float * ) op		9870563	2		=			
ANR	9870582	Identifier	xyz		9870563	0					
ANR	9870583	CastExpression	( float * ) op		9870563	1					
ANR	9870584	CastTarget	float *		9870563	0					
ANR	9870585	Identifier	op		9870563	1					
ANR	9870586	WhileStatement	while ( n -- > 0 )		9870563	2					
ANR	9870587	Condition	n -- > 0	1168:8:29570:29576	9870563	0	True				
ANR	9870588	RelationalExpression	n -- > 0		9870563	0		>			
ANR	9870589	PostIncDecOperationExpression	n --		9870563	0					
ANR	9870590	Identifier	n		9870563	0					
ANR	9870591	IncDec	--		9870563	1					
ANR	9870592	PrimaryExpression	0		9870563	1					
ANR	9870593	CompoundStatement		5:17:83:83	9870563	1					
ANR	9870594	ExpressionStatement	"LogLuv32toXYZ ( * luv ++ , xyz )"	1169:2:29583:29609	9870563	0	True				
ANR	9870595	CallExpression	"LogLuv32toXYZ ( * luv ++ , xyz )"		9870563	0					
ANR	9870596	Callee	LogLuv32toXYZ		9870563	0					
ANR	9870597	Identifier	LogLuv32toXYZ		9870563	0					
ANR	9870598	ArgumentList	* luv ++		9870563	1					
ANR	9870599	Argument	* luv ++		9870563	0					
ANR	9870600	UnaryOperationExpression	* luv ++		9870563	0					
ANR	9870601	UnaryOperator	*		9870563	0					
ANR	9870602	PostIncDecOperationExpression	luv ++		9870563	1					
ANR	9870603	Identifier	luv		9870563	0					
ANR	9870604	IncDec	++		9870563	1					
ANR	9870605	Argument	xyz		9870563	1					
ANR	9870606	Identifier	xyz		9870563	0					
ANR	9870607	ExpressionStatement	xyz += 3	1170:2:29613:29621	9870563	1	True				
ANR	9870608	AssignmentExpression	xyz += 3		9870563	0		+=			
ANR	9870609	Identifier	xyz		9870563	0					
ANR	9870610	PrimaryExpression	3		9870563	1					
ANR	9870611	ReturnType	static void		9870563	1					
ANR	9870612	Identifier	Luv32toXYZ		9870563	2					
ANR	9870613	ParameterList	"LogLuvState * sp , uint8 * op , tmsize_t n"		9870563	3					
ANR	9870614	Parameter	LogLuvState * sp	1163:11:29455:29469	9870563	0	True				
ANR	9870615	ParameterType	LogLuvState *		9870563	0					
ANR	9870616	Identifier	sp		9870563	1					
ANR	9870617	Parameter	uint8 * op	1163:28:29472:29480	9870563	1	True				
ANR	9870618	ParameterType	uint8 *		9870563	0					
ANR	9870619	Identifier	op		9870563	1					
ANR	9870620	Parameter	tmsize_t n	1163:39:29483:29492	9870563	2	True				
ANR	9870621	ParameterType	tmsize_t		9870563	0					
ANR	9870622	Identifier	n		9870563	1					
ANR	9870623	CFGEntryNode	ENTRY		9870563		True				
ANR	9870624	CFGExitNode	EXIT		9870563		True				
ANR	9870625	Symbol	* sp		9870563						
ANR	9870626	Symbol	op		9870563						
ANR	9870627	Symbol	* luv ++		9870563						
ANR	9870628	Symbol	xyz		9870563						
ANR	9870629	Symbol	sp -> tbuf		9870563						
ANR	9870630	Symbol	luv		9870563						
ANR	9870631	Symbol	sp		9870563						
ANR	9870632	Symbol	n		9870563						
ANR	9870633	Function	Luv32toLuv48	1174:0:29629:29997							
ANR	9870634	FunctionDef	"Luv32toLuv48 (LogLuvState * sp , uint8 * op , tmsize_t n)"		9870633	0					
ANR	9870635	CompoundStatement		1176:0:29694:29997	9870633	0					
ANR	9870636	IdentifierDeclStatement	uint32 * luv = ( uint32 * ) sp -> tbuf ;	1177:1:29697:29729	9870633	0	True				
ANR	9870637	IdentifierDecl	* luv = ( uint32 * ) sp -> tbuf		9870633	0					
ANR	9870638	IdentifierDeclType	uint32 *		9870633	0					
ANR	9870639	Identifier	luv		9870633	1					
ANR	9870640	AssignmentExpression	* luv = ( uint32 * ) sp -> tbuf		9870633	2		=			
ANR	9870641	Identifier	luv		9870633	0					
ANR	9870642	CastExpression	( uint32 * ) sp -> tbuf		9870633	1					
ANR	9870643	CastTarget	uint32 *		9870633	0					
ANR	9870644	PtrMemberAccess	sp -> tbuf		9870633	1					
ANR	9870645	Identifier	sp		9870633	0					
ANR	9870646	Identifier	tbuf		9870633	1					
ANR	9870647	IdentifierDeclStatement	int16 * luv3 = ( int16 * ) op ;	1178:1:29734:29759	9870633	1	True				
ANR	9870648	IdentifierDecl	* luv3 = ( int16 * ) op		9870633	0					
ANR	9870649	IdentifierDeclType	int16 *		9870633	0					
ANR	9870650	Identifier	luv3		9870633	1					
ANR	9870651	AssignmentExpression	* luv3 = ( int16 * ) op		9870633	2		=			
ANR	9870652	Identifier	luv3		9870633	0					
ANR	9870653	CastExpression	( int16 * ) op		9870633	1					
ANR	9870654	CastTarget	int16 *		9870633	0					
ANR	9870655	Identifier	op		9870633	1					
ANR	9870656	WhileStatement	while ( n -- > 0 )		9870633	2					
ANR	9870657	Condition	n -- > 0	1180:8:29770:29776	9870633	0	True				
ANR	9870658	RelationalExpression	n -- > 0		9870633	0		>			
ANR	9870659	PostIncDecOperationExpression	n --		9870633	0					
ANR	9870660	Identifier	n		9870633	0					
ANR	9870661	IncDec	--		9870633	1					
ANR	9870662	PrimaryExpression	0		9870633	1					
ANR	9870663	CompoundStatement		6:2:88:99	9870633	1					
ANR	9870664	IdentifierDeclStatement	"double u , v ;"	1181:2:29783:29794	9870633	0	True				
ANR	9870665	IdentifierDecl	u		9870633	0					
ANR	9870666	IdentifierDeclType	double		9870633	0					
ANR	9870667	Identifier	u		9870633	1					
ANR	9870668	IdentifierDecl	v		9870633	1					
ANR	9870669	IdentifierDeclType	double		9870633	0					
ANR	9870670	Identifier	v		9870633	1					
ANR	9870671	ExpressionStatement	* luv3 ++ = ( int16 ) ( * luv >> 16 )	1183:2:29799:29828	9870633	1	True				
ANR	9870672	AssignmentExpression	* luv3 ++ = ( int16 ) ( * luv >> 16 )		9870633	0		=			
ANR	9870673	UnaryOperationExpression	* luv3 ++		9870633	0					
ANR	9870674	UnaryOperator	*		9870633	0					
ANR	9870675	PostIncDecOperationExpression	luv3 ++		9870633	1					
ANR	9870676	Identifier	luv3		9870633	0					
ANR	9870677	IncDec	++		9870633	1					
ANR	9870678	CastExpression	( int16 ) ( * luv >> 16 )		9870633	1					
ANR	9870679	CastTarget	int16		9870633	0					
ANR	9870680	ShiftExpression	* luv >> 16		9870633	1		>>			
ANR	9870681	UnaryOperationExpression	* luv		9870633	0					
ANR	9870682	UnaryOperator	*		9870633	0					
ANR	9870683	Identifier	luv		9870633	1					
ANR	9870684	PrimaryExpression	16		9870633	1					
ANR	9870685	ExpressionStatement	u = 1. / UVSCALE * ( ( * luv >> 8 & 0xff ) + .5 )	1184:2:29832:29872	9870633	2	True				
ANR	9870686	AssignmentExpression	u = 1. / UVSCALE * ( ( * luv >> 8 & 0xff ) + .5 )		9870633	0		=			
ANR	9870687	Identifier	u		9870633	0					
ANR	9870688	MultiplicativeExpression	1. / UVSCALE * ( ( * luv >> 8 & 0xff ) + .5 )		9870633	1		/			
ANR	9870689	PrimaryExpression	1.		9870633	0					
ANR	9870690	MultiplicativeExpression	UVSCALE * ( ( * luv >> 8 & 0xff ) + .5 )		9870633	1		*			
ANR	9870691	Identifier	UVSCALE		9870633	0					
ANR	9870692	AdditiveExpression	( * luv >> 8 & 0xff ) + .5		9870633	1		+			
ANR	9870693	BitAndExpression	* luv >> 8 & 0xff		9870633	0		&			
ANR	9870694	ShiftExpression	* luv >> 8		9870633	0		>>			
ANR	9870695	UnaryOperationExpression	* luv		9870633	0					
ANR	9870696	UnaryOperator	*		9870633	0					
ANR	9870697	Identifier	luv		9870633	1					
ANR	9870698	PrimaryExpression	8		9870633	1					
ANR	9870699	PrimaryExpression	0xff		9870633	1					
ANR	9870700	PrimaryExpression	.5		9870633	1					
ANR	9870701	ExpressionStatement	v = 1. / UVSCALE * ( ( * luv & 0xff ) + .5 )	1185:2:29876:29913	9870633	3	True				
ANR	9870702	AssignmentExpression	v = 1. / UVSCALE * ( ( * luv & 0xff ) + .5 )		9870633	0		=			
ANR	9870703	Identifier	v		9870633	0					
ANR	9870704	MultiplicativeExpression	1. / UVSCALE * ( ( * luv & 0xff ) + .5 )		9870633	1		/			
ANR	9870705	PrimaryExpression	1.		9870633	0					
ANR	9870706	MultiplicativeExpression	UVSCALE * ( ( * luv & 0xff ) + .5 )		9870633	1		*			
ANR	9870707	Identifier	UVSCALE		9870633	0					
ANR	9870708	AdditiveExpression	( * luv & 0xff ) + .5		9870633	1		+			
ANR	9870709	BitAndExpression	* luv & 0xff		9870633	0		&			
ANR	9870710	UnaryOperationExpression	* luv		9870633	0					
ANR	9870711	UnaryOperator	*		9870633	0					
ANR	9870712	Identifier	luv		9870633	1					
ANR	9870713	PrimaryExpression	0xff		9870633	1					
ANR	9870714	PrimaryExpression	.5		9870633	1					
ANR	9870715	ExpressionStatement	* luv3 ++ = ( int16 ) ( u * ( 1L << 15 ) )	1186:2:29917:29948	9870633	4	True				
ANR	9870716	AssignmentExpression	* luv3 ++ = ( int16 ) ( u * ( 1L << 15 ) )		9870633	0		=			
ANR	9870717	UnaryOperationExpression	* luv3 ++		9870633	0					
ANR	9870718	UnaryOperator	*		9870633	0					
ANR	9870719	PostIncDecOperationExpression	luv3 ++		9870633	1					
ANR	9870720	Identifier	luv3		9870633	0					
ANR	9870721	IncDec	++		9870633	1					
ANR	9870722	CastExpression	( int16 ) ( u * ( 1L << 15 ) )		9870633	1					
ANR	9870723	CastTarget	int16		9870633	0					
ANR	9870724	MultiplicativeExpression	u * ( 1L << 15 )		9870633	1		*			
ANR	9870725	Identifier	u		9870633	0					
ANR	9870726	ShiftExpression	1L << 15		9870633	1		<<			
ANR	9870727	PrimaryExpression	1L		9870633	0					
ANR	9870728	PrimaryExpression	15		9870633	1					
ANR	9870729	ExpressionStatement	* luv3 ++ = ( int16 ) ( v * ( 1L << 15 ) )	1187:2:29952:29983	9870633	5	True				
ANR	9870730	AssignmentExpression	* luv3 ++ = ( int16 ) ( v * ( 1L << 15 ) )		9870633	0		=			
ANR	9870731	UnaryOperationExpression	* luv3 ++		9870633	0					
ANR	9870732	UnaryOperator	*		9870633	0					
ANR	9870733	PostIncDecOperationExpression	luv3 ++		9870633	1					
ANR	9870734	Identifier	luv3		9870633	0					
ANR	9870735	IncDec	++		9870633	1					
ANR	9870736	CastExpression	( int16 ) ( v * ( 1L << 15 ) )		9870633	1					
ANR	9870737	CastTarget	int16		9870633	0					
ANR	9870738	MultiplicativeExpression	v * ( 1L << 15 )		9870633	1		*			
ANR	9870739	Identifier	v		9870633	0					
ANR	9870740	ShiftExpression	1L << 15		9870633	1		<<			
ANR	9870741	PrimaryExpression	1L		9870633	0					
ANR	9870742	PrimaryExpression	15		9870633	1					
ANR	9870743	ExpressionStatement	luv ++	1188:2:29987:29992	9870633	6	True				
ANR	9870744	PostIncDecOperationExpression	luv ++		9870633	0					
ANR	9870745	Identifier	luv		9870633	0					
ANR	9870746	IncDec	++		9870633	1					
ANR	9870747	ReturnType	static void		9870633	1					
ANR	9870748	Identifier	Luv32toLuv48		9870633	2					
ANR	9870749	ParameterList	"LogLuvState * sp , uint8 * op , tmsize_t n"		9870633	3					
ANR	9870750	Parameter	LogLuvState * sp	1175:13:29654:29668	9870633	0	True				
ANR	9870751	ParameterType	LogLuvState *		9870633	0					
ANR	9870752	Identifier	sp		9870633	1					
ANR	9870753	Parameter	uint8 * op	1175:30:29671:29679	9870633	1	True				
ANR	9870754	ParameterType	uint8 *		9870633	0					
ANR	9870755	Identifier	op		9870633	1					
ANR	9870756	Parameter	tmsize_t n	1175:41:29682:29691	9870633	2	True				
ANR	9870757	ParameterType	tmsize_t		9870633	0					
ANR	9870758	Identifier	n		9870633	1					
ANR	9870759	CFGEntryNode	ENTRY		9870633		True				
ANR	9870760	CFGExitNode	EXIT		9870633		True				
ANR	9870761	Symbol	* sp		9870633						
ANR	9870762	Symbol	op		9870633						
ANR	9870763	Symbol	luv3		9870633						
ANR	9870764	Symbol	u		9870633						
ANR	9870765	Symbol	v		9870633						
ANR	9870766	Symbol	* luv		9870633						
ANR	9870767	Symbol	sp -> tbuf		9870633						
ANR	9870768	Symbol	* luv3 ++		9870633						
ANR	9870769	Symbol	UVSCALE		9870633						
ANR	9870770	Symbol	luv		9870633						
ANR	9870771	Symbol	sp		9870633						
ANR	9870772	Symbol	n		9870633						
ANR	9870773	Function	Luv32toRGB	1192:0:30000:30235							
ANR	9870774	FunctionDef	"Luv32toRGB (LogLuvState * sp , uint8 * op , tmsize_t n)"		9870773	0					
ANR	9870775	CompoundStatement		1194:0:30063:30235	9870773	0					
ANR	9870776	IdentifierDeclStatement	uint32 * luv = ( uint32 * ) sp -> tbuf ;	1195:1:30066:30098	9870773	0	True				
ANR	9870777	IdentifierDecl	* luv = ( uint32 * ) sp -> tbuf		9870773	0					
ANR	9870778	IdentifierDeclType	uint32 *		9870773	0					
ANR	9870779	Identifier	luv		9870773	1					
ANR	9870780	AssignmentExpression	* luv = ( uint32 * ) sp -> tbuf		9870773	2		=			
ANR	9870781	Identifier	luv		9870773	0					
ANR	9870782	CastExpression	( uint32 * ) sp -> tbuf		9870773	1					
ANR	9870783	CastTarget	uint32 *		9870773	0					
ANR	9870784	PtrMemberAccess	sp -> tbuf		9870773	1					
ANR	9870785	Identifier	sp		9870773	0					
ANR	9870786	Identifier	tbuf		9870773	1					
ANR	9870787	IdentifierDeclStatement	uint8 * rgb = ( uint8 * ) op ;	1196:1:30103:30127	9870773	1	True				
ANR	9870788	IdentifierDecl	* rgb = ( uint8 * ) op		9870773	0					
ANR	9870789	IdentifierDeclType	uint8 *		9870773	0					
ANR	9870790	Identifier	rgb		9870773	1					
ANR	9870791	AssignmentExpression	* rgb = ( uint8 * ) op		9870773	2		=			
ANR	9870792	Identifier	rgb		9870773	0					
ANR	9870793	CastExpression	( uint8 * ) op		9870773	1					
ANR	9870794	CastTarget	uint8 *		9870773	0					
ANR	9870795	Identifier	op		9870773	1					
ANR	9870796	WhileStatement	while ( n -- > 0 )		9870773	2					
ANR	9870797	Condition	n -- > 0	1198:8:30138:30144	9870773	0	True				
ANR	9870798	RelationalExpression	n -- > 0		9870773	0		>			
ANR	9870799	PostIncDecOperationExpression	n --		9870773	0					
ANR	9870800	Identifier	n		9870773	0					
ANR	9870801	IncDec	--		9870773	1					
ANR	9870802	PrimaryExpression	0		9870773	1					
ANR	9870803	CompoundStatement		6:2:87:99	9870773	1					
ANR	9870804	IdentifierDeclStatement	float xyz [ 3 ] ;	1199:2:30151:30163	9870773	0	True				
ANR	9870805	IdentifierDecl	xyz [ 3 ]		9870773	0					
ANR	9870806	IdentifierDeclType	float [ 3 ]		9870773	0					
ANR	9870807	Identifier	xyz		9870773	1					
ANR	9870808	PrimaryExpression	3		9870773	2					
ANR	9870809	ExpressionStatement	"LogLuv32toXYZ ( * luv ++ , xyz )"	1201:2:30168:30194	9870773	1	True				
ANR	9870810	CallExpression	"LogLuv32toXYZ ( * luv ++ , xyz )"		9870773	0					
ANR	9870811	Callee	LogLuv32toXYZ		9870773	0					
ANR	9870812	Identifier	LogLuv32toXYZ		9870773	0					
ANR	9870813	ArgumentList	* luv ++		9870773	1					
ANR	9870814	Argument	* luv ++		9870773	0					
ANR	9870815	UnaryOperationExpression	* luv ++		9870773	0					
ANR	9870816	UnaryOperator	*		9870773	0					
ANR	9870817	PostIncDecOperationExpression	luv ++		9870773	1					
ANR	9870818	Identifier	luv		9870773	0					
ANR	9870819	IncDec	++		9870773	1					
ANR	9870820	Argument	xyz		9870773	1					
ANR	9870821	Identifier	xyz		9870773	0					
ANR	9870822	ExpressionStatement	"XYZtoRGB24 ( xyz , rgb )"	1202:2:30198:30218	9870773	2	True				
ANR	9870823	CallExpression	"XYZtoRGB24 ( xyz , rgb )"		9870773	0					
ANR	9870824	Callee	XYZtoRGB24		9870773	0					
ANR	9870825	Identifier	XYZtoRGB24		9870773	0					
ANR	9870826	ArgumentList	xyz		9870773	1					
ANR	9870827	Argument	xyz		9870773	0					
ANR	9870828	Identifier	xyz		9870773	0					
ANR	9870829	Argument	rgb		9870773	1					
ANR	9870830	Identifier	rgb		9870773	0					
ANR	9870831	ExpressionStatement	rgb += 3	1203:2:30222:30230	9870773	3	True				
ANR	9870832	AssignmentExpression	rgb += 3		9870773	0		+=			
ANR	9870833	Identifier	rgb		9870773	0					
ANR	9870834	PrimaryExpression	3		9870773	1					
ANR	9870835	ReturnType	static void		9870773	1					
ANR	9870836	Identifier	Luv32toRGB		9870773	2					
ANR	9870837	ParameterList	"LogLuvState * sp , uint8 * op , tmsize_t n"		9870773	3					
ANR	9870838	Parameter	LogLuvState * sp	1193:11:30023:30037	9870773	0	True				
ANR	9870839	ParameterType	LogLuvState *		9870773	0					
ANR	9870840	Identifier	sp		9870773	1					
ANR	9870841	Parameter	uint8 * op	1193:28:30040:30048	9870773	1	True				
ANR	9870842	ParameterType	uint8 *		9870773	0					
ANR	9870843	Identifier	op		9870773	1					
ANR	9870844	Parameter	tmsize_t n	1193:39:30051:30060	9870773	2	True				
ANR	9870845	ParameterType	tmsize_t		9870773	0					
ANR	9870846	Identifier	n		9870773	1					
ANR	9870847	CFGEntryNode	ENTRY		9870773		True				
ANR	9870848	CFGExitNode	EXIT		9870773		True				
ANR	9870849	Symbol	* sp		9870773						
ANR	9870850	Symbol	op		9870773						
ANR	9870851	Symbol	* luv ++		9870773						
ANR	9870852	Symbol	xyz		9870773						
ANR	9870853	Symbol	sp -> tbuf		9870773						
ANR	9870854	Symbol	luv		9870773						
ANR	9870855	Symbol	rgb		9870773						
ANR	9870856	Symbol	sp		9870773						
ANR	9870857	Symbol	n		9870773						
ANR	9870858	Function	Luv32fromXYZ	1207:0:30238:30454							
ANR	9870859	FunctionDef	"Luv32fromXYZ (LogLuvState * sp , uint8 * op , tmsize_t n)"		9870858	0					
ANR	9870860	CompoundStatement		1209:0:30303:30454	9870858	0					
ANR	9870861	IdentifierDeclStatement	uint32 * luv = ( uint32 * ) sp -> tbuf ;	1210:1:30306:30338	9870858	0	True				
ANR	9870862	IdentifierDecl	* luv = ( uint32 * ) sp -> tbuf		9870858	0					
ANR	9870863	IdentifierDeclType	uint32 *		9870858	0					
ANR	9870864	Identifier	luv		9870858	1					
ANR	9870865	AssignmentExpression	* luv = ( uint32 * ) sp -> tbuf		9870858	2		=			
ANR	9870866	Identifier	luv		9870858	0					
ANR	9870867	CastExpression	( uint32 * ) sp -> tbuf		9870858	1					
ANR	9870868	CastTarget	uint32 *		9870858	0					
ANR	9870869	PtrMemberAccess	sp -> tbuf		9870858	1					
ANR	9870870	Identifier	sp		9870858	0					
ANR	9870871	Identifier	tbuf		9870858	1					
ANR	9870872	IdentifierDeclStatement	float * xyz = ( float * ) op ;	1211:1:30343:30367	9870858	1	True				
ANR	9870873	IdentifierDecl	* xyz = ( float * ) op		9870858	0					
ANR	9870874	IdentifierDeclType	float *		9870858	0					
ANR	9870875	Identifier	xyz		9870858	1					
ANR	9870876	AssignmentExpression	* xyz = ( float * ) op		9870858	2		=			
ANR	9870877	Identifier	xyz		9870858	0					
ANR	9870878	CastExpression	( float * ) op		9870858	1					
ANR	9870879	CastTarget	float *		9870858	0					
ANR	9870880	Identifier	op		9870858	1					
ANR	9870881	WhileStatement	while ( n -- > 0 )		9870858	2					
ANR	9870882	Condition	n -- > 0	1213:8:30378:30384	9870858	0	True				
ANR	9870883	RelationalExpression	n -- > 0		9870858	0		>			
ANR	9870884	PostIncDecOperationExpression	n --		9870858	0					
ANR	9870885	Identifier	n		9870858	0					
ANR	9870886	IncDec	--		9870858	1					
ANR	9870887	PrimaryExpression	0		9870858	1					
ANR	9870888	CompoundStatement		5:17:83:83	9870858	1					
ANR	9870889	ExpressionStatement	"* luv ++ = LogLuv32fromXYZ ( xyz , sp -> encode_meth )"	1214:2:30391:30437	9870858	0	True				
ANR	9870890	AssignmentExpression	"* luv ++ = LogLuv32fromXYZ ( xyz , sp -> encode_meth )"		9870858	0		=			
ANR	9870891	UnaryOperationExpression	* luv ++		9870858	0					
ANR	9870892	UnaryOperator	*		9870858	0					
ANR	9870893	PostIncDecOperationExpression	luv ++		9870858	1					
ANR	9870894	Identifier	luv		9870858	0					
ANR	9870895	IncDec	++		9870858	1					
ANR	9870896	CallExpression	"LogLuv32fromXYZ ( xyz , sp -> encode_meth )"		9870858	1					
ANR	9870897	Callee	LogLuv32fromXYZ		9870858	0					
ANR	9870898	Identifier	LogLuv32fromXYZ		9870858	0					
ANR	9870899	ArgumentList	xyz		9870858	1					
ANR	9870900	Argument	xyz		9870858	0					
ANR	9870901	Identifier	xyz		9870858	0					
ANR	9870902	Argument	sp -> encode_meth		9870858	1					
ANR	9870903	PtrMemberAccess	sp -> encode_meth		9870858	0					
ANR	9870904	Identifier	sp		9870858	0					
ANR	9870905	Identifier	encode_meth		9870858	1					
ANR	9870906	ExpressionStatement	xyz += 3	1215:2:30441:30449	9870858	1	True				
ANR	9870907	AssignmentExpression	xyz += 3		9870858	0		+=			
ANR	9870908	Identifier	xyz		9870858	0					
ANR	9870909	PrimaryExpression	3		9870858	1					
ANR	9870910	ReturnType	static void		9870858	1					
ANR	9870911	Identifier	Luv32fromXYZ		9870858	2					
ANR	9870912	ParameterList	"LogLuvState * sp , uint8 * op , tmsize_t n"		9870858	3					
ANR	9870913	Parameter	LogLuvState * sp	1208:13:30263:30277	9870858	0	True				
ANR	9870914	ParameterType	LogLuvState *		9870858	0					
ANR	9870915	Identifier	sp		9870858	1					
ANR	9870916	Parameter	uint8 * op	1208:30:30280:30288	9870858	1	True				
ANR	9870917	ParameterType	uint8 *		9870858	0					
ANR	9870918	Identifier	op		9870858	1					
ANR	9870919	Parameter	tmsize_t n	1208:41:30291:30300	9870858	2	True				
ANR	9870920	ParameterType	tmsize_t		9870858	0					
ANR	9870921	Identifier	n		9870858	1					
ANR	9870922	CFGEntryNode	ENTRY		9870858		True				
ANR	9870923	CFGExitNode	EXIT		9870858		True				
ANR	9870924	Symbol	* sp		9870858						
ANR	9870925	Symbol	op		9870858						
ANR	9870926	Symbol	* luv ++		9870858						
ANR	9870927	Symbol	LogLuv32fromXYZ		9870858						
ANR	9870928	Symbol	xyz		9870858						
ANR	9870929	Symbol	sp -> tbuf		9870858						
ANR	9870930	Symbol	sp -> encode_meth		9870858						
ANR	9870931	Symbol	luv		9870858						
ANR	9870932	Symbol	sp		9870858						
ANR	9870933	Symbol	n		9870858						
ANR	9870934	Function	Luv32fromLuv48	1219:0:30457:31029							
ANR	9870935	FunctionDef	"Luv32fromLuv48 (LogLuvState * sp , uint8 * op , tmsize_t n)"		9870934	0					
ANR	9870936	CompoundStatement		1221:0:30524:31029	9870934	0					
ANR	9870937	IdentifierDeclStatement	uint32 * luv = ( uint32 * ) sp -> tbuf ;	1222:1:30527:30559	9870934	0	True				
ANR	9870938	IdentifierDecl	* luv = ( uint32 * ) sp -> tbuf		9870934	0					
ANR	9870939	IdentifierDeclType	uint32 *		9870934	0					
ANR	9870940	Identifier	luv		9870934	1					
ANR	9870941	AssignmentExpression	* luv = ( uint32 * ) sp -> tbuf		9870934	2		=			
ANR	9870942	Identifier	luv		9870934	0					
ANR	9870943	CastExpression	( uint32 * ) sp -> tbuf		9870934	1					
ANR	9870944	CastTarget	uint32 *		9870934	0					
ANR	9870945	PtrMemberAccess	sp -> tbuf		9870934	1					
ANR	9870946	Identifier	sp		9870934	0					
ANR	9870947	Identifier	tbuf		9870934	1					
ANR	9870948	IdentifierDeclStatement	int16 * luv3 = ( int16 * ) op ;	1223:1:30562:30587	9870934	1	True				
ANR	9870949	IdentifierDecl	* luv3 = ( int16 * ) op		9870934	0					
ANR	9870950	IdentifierDeclType	int16 *		9870934	0					
ANR	9870951	Identifier	luv3		9870934	1					
ANR	9870952	AssignmentExpression	* luv3 = ( int16 * ) op		9870934	2		=			
ANR	9870953	Identifier	luv3		9870934	0					
ANR	9870954	CastExpression	( int16 * ) op		9870934	1					
ANR	9870955	CastTarget	int16 *		9870934	0					
ANR	9870956	Identifier	op		9870934	1					
ANR	9870957	IfStatement	if ( sp -> encode_meth == SGILOGENCODE_NODITHER )		9870934	2					
ANR	9870958	Condition	sp -> encode_meth == SGILOGENCODE_NODITHER	1225:5:30595:30634	9870934	0	True				
ANR	9870959	EqualityExpression	sp -> encode_meth == SGILOGENCODE_NODITHER		9870934	0		==			
ANR	9870960	PtrMemberAccess	sp -> encode_meth		9870934	0					
ANR	9870961	Identifier	sp		9870934	0					
ANR	9870962	Identifier	encode_meth		9870934	1					
ANR	9870963	Identifier	SGILOGENCODE_NODITHER		9870934	1					
ANR	9870964	CompoundStatement		5:47:112:112	9870934	1					
ANR	9870965	WhileStatement	while ( n -- > 0 )		9870934	0					
ANR	9870966	Condition	n -- > 0	1226:9:30648:30654	9870934	0	True				
ANR	9870967	RelationalExpression	n -- > 0		9870934	0		>			
ANR	9870968	PostIncDecOperationExpression	n --		9870934	0					
ANR	9870969	Identifier	n		9870934	0					
ANR	9870970	IncDec	--		9870934	1					
ANR	9870971	PrimaryExpression	0		9870934	1					
ANR	9870972	CompoundStatement		6:18:132:132	9870934	1					
ANR	9870973	ExpressionStatement	* luv ++ = ( uint32 ) luv3 [ 0 ] << 16 | ( luv3 [ 1 ] * ( uint32 ) ( UVSCALE + .5 ) >> 7 & 0xff00 ) | ( luv3 [ 2 ] * ( uint32 ) ( UVSCALE + .5 ) >> 15 & 0xff )	1227:3:30662:30793	9870934	0	True				
ANR	9870974	AssignmentExpression	* luv ++ = ( uint32 ) luv3 [ 0 ] << 16 | ( luv3 [ 1 ] * ( uint32 ) ( UVSCALE + .5 ) >> 7 & 0xff00 ) | ( luv3 [ 2 ] * ( uint32 ) ( UVSCALE + .5 ) >> 15 & 0xff )		9870934	0		=			
ANR	9870975	UnaryOperationExpression	* luv ++		9870934	0					
ANR	9870976	UnaryOperator	*		9870934	0					
ANR	9870977	PostIncDecOperationExpression	luv ++		9870934	1					
ANR	9870978	Identifier	luv		9870934	0					
ANR	9870979	IncDec	++		9870934	1					
ANR	9870980	InclusiveOrExpression	( uint32 ) luv3 [ 0 ] << 16 | ( luv3 [ 1 ] * ( uint32 ) ( UVSCALE + .5 ) >> 7 & 0xff00 ) | ( luv3 [ 2 ] * ( uint32 ) ( UVSCALE + .5 ) >> 15 & 0xff )		9870934	1		|			
ANR	9870981	ShiftExpression	( uint32 ) luv3 [ 0 ] << 16		9870934	0		<<			
ANR	9870982	CastExpression	( uint32 ) luv3 [ 0 ]		9870934	0					
ANR	9870983	CastTarget	uint32		9870934	0					
ANR	9870984	ArrayIndexing	luv3 [ 0 ]		9870934	1					
ANR	9870985	Identifier	luv3		9870934	0					
ANR	9870986	PrimaryExpression	0		9870934	1					
ANR	9870987	PrimaryExpression	16		9870934	1					
ANR	9870988	InclusiveOrExpression	( luv3 [ 1 ] * ( uint32 ) ( UVSCALE + .5 ) >> 7 & 0xff00 ) | ( luv3 [ 2 ] * ( uint32 ) ( UVSCALE + .5 ) >> 15 & 0xff )		9870934	1		|			
ANR	9870989	BitAndExpression	luv3 [ 1 ] * ( uint32 ) ( UVSCALE + .5 ) >> 7 & 0xff00		9870934	0		&			
ANR	9870990	ShiftExpression	luv3 [ 1 ] * ( uint32 ) ( UVSCALE + .5 ) >> 7		9870934	0		>>			
ANR	9870991	MultiplicativeExpression	luv3 [ 1 ] * ( uint32 ) ( UVSCALE + .5 )		9870934	0		*			
ANR	9870992	ArrayIndexing	luv3 [ 1 ]		9870934	0					
ANR	9870993	Identifier	luv3		9870934	0					
ANR	9870994	PrimaryExpression	1		9870934	1					
ANR	9870995	CastExpression	( uint32 ) ( UVSCALE + .5 )		9870934	1					
ANR	9870996	CastTarget	uint32		9870934	0					
ANR	9870997	AdditiveExpression	UVSCALE + .5		9870934	1		+			
ANR	9870998	Identifier	UVSCALE		9870934	0					
ANR	9870999	PrimaryExpression	.5		9870934	1					
ANR	9871000	PrimaryExpression	7		9870934	1					
ANR	9871001	PrimaryExpression	0xff00		9870934	1					
ANR	9871002	BitAndExpression	luv3 [ 2 ] * ( uint32 ) ( UVSCALE + .5 ) >> 15 & 0xff		9870934	1		&			
ANR	9871003	ShiftExpression	luv3 [ 2 ] * ( uint32 ) ( UVSCALE + .5 ) >> 15		9870934	0		>>			
ANR	9871004	MultiplicativeExpression	luv3 [ 2 ] * ( uint32 ) ( UVSCALE + .5 )		9870934	0		*			
ANR	9871005	ArrayIndexing	luv3 [ 2 ]		9870934	0					
ANR	9871006	Identifier	luv3		9870934	0					
ANR	9871007	PrimaryExpression	2		9870934	1					
ANR	9871008	CastExpression	( uint32 ) ( UVSCALE + .5 )		9870934	1					
ANR	9871009	CastTarget	uint32		9870934	0					
ANR	9871010	AdditiveExpression	UVSCALE + .5		9870934	1		+			
ANR	9871011	Identifier	UVSCALE		9870934	0					
ANR	9871012	PrimaryExpression	.5		9870934	1					
ANR	9871013	PrimaryExpression	15		9870934	1					
ANR	9871014	PrimaryExpression	0xff		9870934	1					
ANR	9871015	ExpressionStatement	luv3 += 3	1230:3:30798:30807	9870934	1	True				
ANR	9871016	AssignmentExpression	luv3 += 3		9870934	0		+=			
ANR	9871017	Identifier	luv3		9870934	0					
ANR	9871018	PrimaryExpression	3		9870934	1					
ANR	9871019	ReturnStatement	return ;	1232:2:30815:30821	9870934	1	True				
ANR	9871020	WhileStatement	while ( n -- > 0 )		9870934	3					
ANR	9871021	Condition	n -- > 0	1234:8:30834:30840	9870934	0	True				
ANR	9871022	RelationalExpression	n -- > 0		9870934	0		>			
ANR	9871023	PostIncDecOperationExpression	n --		9870934	0					
ANR	9871024	Identifier	n		9870934	0					
ANR	9871025	IncDec	--		9870934	1					
ANR	9871026	PrimaryExpression	0		9870934	1					
ANR	9871027	CompoundStatement		14:17:318:318	9870934	1					
ANR	9871028	ExpressionStatement	"* luv ++ = ( uint32 ) luv3 [ 0 ] << 16 | ( itrunc ( luv3 [ 1 ] * ( UVSCALE / ( 1 << 15 ) ) , sp -> encode_meth ) << 8 & 0xff00 ) | ( itrunc ( luv3 [ 2 ] * ( UVSCALE / ( 1 << 15 ) ) , sp -> encode_meth ) & 0xff )"	1235:2:30847:31011	9870934	0	True				
ANR	9871029	AssignmentExpression	"* luv ++ = ( uint32 ) luv3 [ 0 ] << 16 | ( itrunc ( luv3 [ 1 ] * ( UVSCALE / ( 1 << 15 ) ) , sp -> encode_meth ) << 8 & 0xff00 ) | ( itrunc ( luv3 [ 2 ] * ( UVSCALE / ( 1 << 15 ) ) , sp -> encode_meth ) & 0xff )"		9870934	0		=			
ANR	9871030	UnaryOperationExpression	* luv ++		9870934	0					
ANR	9871031	UnaryOperator	*		9870934	0					
ANR	9871032	PostIncDecOperationExpression	luv ++		9870934	1					
ANR	9871033	Identifier	luv		9870934	0					
ANR	9871034	IncDec	++		9870934	1					
ANR	9871035	InclusiveOrExpression	"( uint32 ) luv3 [ 0 ] << 16 | ( itrunc ( luv3 [ 1 ] * ( UVSCALE / ( 1 << 15 ) ) , sp -> encode_meth ) << 8 & 0xff00 ) | ( itrunc ( luv3 [ 2 ] * ( UVSCALE / ( 1 << 15 ) ) , sp -> encode_meth ) & 0xff )"		9870934	1		|			
ANR	9871036	ShiftExpression	( uint32 ) luv3 [ 0 ] << 16		9870934	0		<<			
ANR	9871037	CastExpression	( uint32 ) luv3 [ 0 ]		9870934	0					
ANR	9871038	CastTarget	uint32		9870934	0					
ANR	9871039	ArrayIndexing	luv3 [ 0 ]		9870934	1					
ANR	9871040	Identifier	luv3		9870934	0					
ANR	9871041	PrimaryExpression	0		9870934	1					
ANR	9871042	PrimaryExpression	16		9870934	1					
ANR	9871043	InclusiveOrExpression	"( itrunc ( luv3 [ 1 ] * ( UVSCALE / ( 1 << 15 ) ) , sp -> encode_meth ) << 8 & 0xff00 ) | ( itrunc ( luv3 [ 2 ] * ( UVSCALE / ( 1 << 15 ) ) , sp -> encode_meth ) & 0xff )"		9870934	1		|			
ANR	9871044	BitAndExpression	"itrunc ( luv3 [ 1 ] * ( UVSCALE / ( 1 << 15 ) ) , sp -> encode_meth ) << 8 & 0xff00"		9870934	0		&			
ANR	9871045	ShiftExpression	"itrunc ( luv3 [ 1 ] * ( UVSCALE / ( 1 << 15 ) ) , sp -> encode_meth ) << 8"		9870934	0		<<			
ANR	9871046	CallExpression	"itrunc ( luv3 [ 1 ] * ( UVSCALE / ( 1 << 15 ) ) , sp -> encode_meth )"		9870934	0					
ANR	9871047	Callee	itrunc		9870934	0					
ANR	9871048	Identifier	itrunc		9870934	0					
ANR	9871049	ArgumentList	luv3 [ 1 ] * ( UVSCALE / ( 1 << 15 ) )		9870934	1					
ANR	9871050	Argument	luv3 [ 1 ] * ( UVSCALE / ( 1 << 15 ) )		9870934	0					
ANR	9871051	MultiplicativeExpression	luv3 [ 1 ] * ( UVSCALE / ( 1 << 15 ) )		9870934	0		*			
ANR	9871052	ArrayIndexing	luv3 [ 1 ]		9870934	0					
ANR	9871053	Identifier	luv3		9870934	0					
ANR	9871054	PrimaryExpression	1		9870934	1					
ANR	9871055	MultiplicativeExpression	UVSCALE / ( 1 << 15 )		9870934	1		/			
ANR	9871056	Identifier	UVSCALE		9870934	0					
ANR	9871057	ShiftExpression	1 << 15		9870934	1		<<			
ANR	9871058	PrimaryExpression	1		9870934	0					
ANR	9871059	PrimaryExpression	15		9870934	1					
ANR	9871060	Argument	sp -> encode_meth		9870934	1					
ANR	9871061	PtrMemberAccess	sp -> encode_meth		9870934	0					
ANR	9871062	Identifier	sp		9870934	0					
ANR	9871063	Identifier	encode_meth		9870934	1					
ANR	9871064	PrimaryExpression	8		9870934	1					
ANR	9871065	PrimaryExpression	0xff00		9870934	1					
ANR	9871066	BitAndExpression	"itrunc ( luv3 [ 2 ] * ( UVSCALE / ( 1 << 15 ) ) , sp -> encode_meth ) & 0xff"		9870934	1		&			
ANR	9871067	CallExpression	"itrunc ( luv3 [ 2 ] * ( UVSCALE / ( 1 << 15 ) ) , sp -> encode_meth )"		9870934	0					
ANR	9871068	Callee	itrunc		9870934	0					
ANR	9871069	Identifier	itrunc		9870934	0					
ANR	9871070	ArgumentList	luv3 [ 2 ] * ( UVSCALE / ( 1 << 15 ) )		9870934	1					
ANR	9871071	Argument	luv3 [ 2 ] * ( UVSCALE / ( 1 << 15 ) )		9870934	0					
ANR	9871072	MultiplicativeExpression	luv3 [ 2 ] * ( UVSCALE / ( 1 << 15 ) )		9870934	0		*			
ANR	9871073	ArrayIndexing	luv3 [ 2 ]		9870934	0					
ANR	9871074	Identifier	luv3		9870934	0					
ANR	9871075	PrimaryExpression	2		9870934	1					
ANR	9871076	MultiplicativeExpression	UVSCALE / ( 1 << 15 )		9870934	1		/			
ANR	9871077	Identifier	UVSCALE		9870934	0					
ANR	9871078	ShiftExpression	1 << 15		9870934	1		<<			
ANR	9871079	PrimaryExpression	1		9870934	0					
ANR	9871080	PrimaryExpression	15		9870934	1					
ANR	9871081	Argument	sp -> encode_meth		9870934	1					
ANR	9871082	PtrMemberAccess	sp -> encode_meth		9870934	0					
ANR	9871083	Identifier	sp		9870934	0					
ANR	9871084	Identifier	encode_meth		9870934	1					
ANR	9871085	PrimaryExpression	0xff		9870934	1					
ANR	9871086	ExpressionStatement	luv3 += 3	1238:2:31015:31024	9870934	1	True				
ANR	9871087	AssignmentExpression	luv3 += 3		9870934	0		+=			
ANR	9871088	Identifier	luv3		9870934	0					
ANR	9871089	PrimaryExpression	3		9870934	1					
ANR	9871090	ReturnType	static void		9870934	1					
ANR	9871091	Identifier	Luv32fromLuv48		9870934	2					
ANR	9871092	ParameterList	"LogLuvState * sp , uint8 * op , tmsize_t n"		9870934	3					
ANR	9871093	Parameter	LogLuvState * sp	1220:15:30484:30498	9870934	0	True				
ANR	9871094	ParameterType	LogLuvState *		9870934	0					
ANR	9871095	Identifier	sp		9870934	1					
ANR	9871096	Parameter	uint8 * op	1220:32:30501:30509	9870934	1	True				
ANR	9871097	ParameterType	uint8 *		9870934	0					
ANR	9871098	Identifier	op		9870934	1					
ANR	9871099	Parameter	tmsize_t n	1220:43:30512:30521	9870934	2	True				
ANR	9871100	ParameterType	tmsize_t		9870934	0					
ANR	9871101	Identifier	n		9870934	1					
ANR	9871102	CFGEntryNode	ENTRY		9870934		True				
ANR	9871103	CFGExitNode	EXIT		9870934		True				
ANR	9871104	Symbol	* sp		9870934						
ANR	9871105	Symbol	op		9870934						
ANR	9871106	Symbol	SGILOGENCODE_NODITHER		9870934						
ANR	9871107	Symbol	* luv ++		9870934						
ANR	9871108	Symbol	itrunc		9870934						
ANR	9871109	Symbol	UVSCALE		9870934						
ANR	9871110	Symbol	luv		9870934						
ANR	9871111	Symbol	n		9870934						
ANR	9871112	Symbol	luv3		9870934						
ANR	9871113	Symbol	sp -> tbuf		9870934						
ANR	9871114	Symbol	sp -> encode_meth		9870934						
ANR	9871115	Symbol	sp		9870934						
ANR	9871116	Symbol	* luv3		9870934						
ANR	9871117	Function	_logLuvNop	1242:0:31032:31130							
ANR	9871118	FunctionDef	"_logLuvNop (LogLuvState * sp , uint8 * op , tmsize_t n)"		9871117	0					
ANR	9871119	CompoundStatement		1244:0:31095:31130	9871117	0					
ANR	9871120	ExpressionStatement	( void ) sp	1245:1:31098:31107	9871117	0	True				
ANR	9871121	CastExpression	( void ) sp		9871117	0					
ANR	9871122	CastTarget	void		9871117	0					
ANR	9871123	Identifier	sp		9871117	1					
ANR	9871124	ExpressionStatement	( void ) op	1245:12:31109:31118	9871117	1	True				
ANR	9871125	CastExpression	( void ) op		9871117	0					
ANR	9871126	CastTarget	void		9871117	0					
ANR	9871127	Identifier	op		9871117	1					
ANR	9871128	ExpressionStatement	( void ) n	1245:23:31120:31128	9871117	2	True				
ANR	9871129	CastExpression	( void ) n		9871117	0					
ANR	9871130	CastTarget	void		9871117	0					
ANR	9871131	Identifier	n		9871117	1					
ANR	9871132	ReturnType	static void		9871117	1					
ANR	9871133	Identifier	_logLuvNop		9871117	2					
ANR	9871134	ParameterList	"LogLuvState * sp , uint8 * op , tmsize_t n"		9871117	3					
ANR	9871135	Parameter	LogLuvState * sp	1243:11:31055:31069	9871117	0	True				
ANR	9871136	ParameterType	LogLuvState *		9871117	0					
ANR	9871137	Identifier	sp		9871117	1					
ANR	9871138	Parameter	uint8 * op	1243:28:31072:31080	9871117	1	True				
ANR	9871139	ParameterType	uint8 *		9871117	0					
ANR	9871140	Identifier	op		9871117	1					
ANR	9871141	Parameter	tmsize_t n	1243:39:31083:31092	9871117	2	True				
ANR	9871142	ParameterType	tmsize_t		9871117	0					
ANR	9871143	Identifier	n		9871117	1					
ANR	9871144	CFGEntryNode	ENTRY		9871117		True				
ANR	9871145	CFGExitNode	EXIT		9871117		True				
ANR	9871146	Symbol	op		9871117						
ANR	9871147	Symbol	sp		9871117						
ANR	9871148	Symbol	n		9871117						
ANR	9871149	Function	LogL16GuessDataFmt	1248:0:31133:31684							
ANR	9871150	FunctionDef	LogL16GuessDataFmt (TIFFDirectory * td)		9871149	0					
ANR	9871151	CompoundStatement		1250:0:31182:31684	9871149	0					
ANR	9871152	Statement	define	1251:1:31185:31190	9871149	0	True				
ANR	9871153	Statement	PACK	1251:8:31192:31195	9871149	1	True				
ANR	9871154	Statement	(	1251:12:31196:31196	9871149	2	True				
ANR	9871155	Statement	s	1251:13:31197:31197	9871149	3	True				
ANR	9871156	Statement	","	1251:14:31198:31198	9871149	4	True				
ANR	9871157	Statement	b	1251:15:31199:31199	9871149	5	True				
ANR	9871158	Statement	","	1251:16:31200:31200	9871149	6	True				
ANR	9871159	Statement	f	1251:17:31201:31201	9871149	7	True				
ANR	9871160	Statement	)	1251:18:31202:31202	9871149	8	True				
ANR	9871161	Statement	(	1251:20:31204:31204	9871149	9	True				
ANR	9871162	Statement	(	1251:21:31205:31205	9871149	10	True				
ANR	9871163	Statement	(	1251:22:31206:31206	9871149	11	True				
ANR	9871164	Statement	b	1251:23:31207:31207	9871149	12	True				
ANR	9871165	Statement	)	1251:24:31208:31208	9871149	13	True				
ANR	9871166	Statement	<<	1251:25:31209:31210	9871149	14	True				
ANR	9871167	Statement	6	1251:27:31211:31211	9871149	15	True				
ANR	9871168	Statement	)	1251:28:31212:31212	9871149	16	True				
ANR	9871169	Statement	|	1251:29:31213:31213	9871149	17	True				
ANR	9871170	Statement	(	1251:30:31214:31214	9871149	18	True				
ANR	9871171	Statement	(	1251:31:31215:31215	9871149	19	True				
ANR	9871172	Statement	s	1251:32:31216:31216	9871149	20	True				
ANR	9871173	Statement	)	1251:33:31217:31217	9871149	21	True				
ANR	9871174	Statement	<<	1251:34:31218:31219	9871149	22	True				
ANR	9871175	Statement	3	1251:36:31220:31220	9871149	23	True				
ANR	9871176	Statement	)	1251:37:31221:31221	9871149	24	True				
ANR	9871177	Statement	|	1251:38:31222:31222	9871149	25	True				
ANR	9871178	Statement	(	1251:39:31223:31223	9871149	26	True				
ANR	9871179	Statement	f	1251:40:31224:31224	9871149	27	True				
ANR	9871180	Statement	)	1251:41:31225:31225	9871149	28	True				
ANR	9871181	Statement	)	1251:42:31226:31226	9871149	29	True				
ANR	9871182	SwitchStatement	"switch ( PACK ( td -> td_samplesperpixel , td -> td_bitspersample , td -> td_sampleformat ) )"		9871149	30					
ANR	9871183	Condition	"PACK ( td -> td_samplesperpixel , td -> td_bitspersample , td -> td_sampleformat )"	1252:9:31237:31307	9871149	0	True				
ANR	9871184	CallExpression	"PACK ( td -> td_samplesperpixel , td -> td_bitspersample , td -> td_sampleformat )"		9871149	0					
ANR	9871185	Callee	PACK		9871149	0					
ANR	9871186	Identifier	PACK		9871149	0					
ANR	9871187	ArgumentList	td -> td_samplesperpixel		9871149	1					
ANR	9871188	Argument	td -> td_samplesperpixel		9871149	0					
ANR	9871189	PtrMemberAccess	td -> td_samplesperpixel		9871149	0					
ANR	9871190	Identifier	td		9871149	0					
ANR	9871191	Identifier	td_samplesperpixel		9871149	1					
ANR	9871192	Argument	td -> td_bitspersample		9871149	1					
ANR	9871193	PtrMemberAccess	td -> td_bitspersample		9871149	0					
ANR	9871194	Identifier	td		9871149	0					
ANR	9871195	Identifier	td_bitspersample		9871149	1					
ANR	9871196	Argument	td -> td_sampleformat		9871149	2					
ANR	9871197	PtrMemberAccess	td -> td_sampleformat		9871149	0					
ANR	9871198	Identifier	td		9871149	0					
ANR	9871199	Identifier	td_sampleformat		9871149	1					
ANR	9871200	CompoundStatement		3:82:127:127	9871149	1					
ANR	9871201	Statement	case	1253:1:31313:31316	9871149	0	True				
ANR	9871202	Statement	PACK	1253:6:31318:31321	9871149	1	True				
ANR	9871203	Statement	(	1253:10:31322:31322	9871149	2	True				
ANR	9871204	Statement	1	1253:11:31323:31323	9871149	3	True				
ANR	9871205	Statement	","	1253:12:31324:31324	9871149	4	True				
ANR	9871206	Statement	32	1253:14:31326:31327	9871149	5	True				
ANR	9871207	Statement	","	1253:16:31328:31328	9871149	6	True				
ANR	9871208	Statement	SAMPLEFORMAT_IEEEFP	1253:18:31330:31348	9871149	7	True				
ANR	9871209	Statement	)	1253:37:31349:31349	9871149	8	True				
ANR	9871210	Statement	:	1253:38:31350:31350	9871149	9	True				
ANR	9871211	ReturnStatement	return ( SGILOGDATAFMT_FLOAT ) ;	1254:2:31354:31382	9871149	10	True				
ANR	9871212	Identifier	SGILOGDATAFMT_FLOAT		9871149	0					
ANR	9871213	Statement	case	1255:1:31385:31388	9871149	11	True				
ANR	9871214	Statement	PACK	1255:6:31390:31393	9871149	12	True				
ANR	9871215	Statement	(	1255:10:31394:31394	9871149	13	True				
ANR	9871216	Statement	1	1255:11:31395:31395	9871149	14	True				
ANR	9871217	Statement	","	1255:12:31396:31396	9871149	15	True				
ANR	9871218	Statement	16	1255:14:31398:31399	9871149	16	True				
ANR	9871219	Statement	","	1255:16:31400:31400	9871149	17	True				
ANR	9871220	Statement	SAMPLEFORMAT_VOID	1255:18:31402:31418	9871149	18	True				
ANR	9871221	Statement	)	1255:35:31419:31419	9871149	19	True				
ANR	9871222	Statement	:	1255:36:31420:31420	9871149	20	True				
ANR	9871223	Statement	case	1256:1:31423:31426	9871149	21	True				
ANR	9871224	Statement	PACK	1256:6:31428:31431	9871149	22	True				
ANR	9871225	Statement	(	1256:10:31432:31432	9871149	23	True				
ANR	9871226	Statement	1	1256:11:31433:31433	9871149	24	True				
ANR	9871227	Statement	","	1256:12:31434:31434	9871149	25	True				
ANR	9871228	Statement	16	1256:14:31436:31437	9871149	26	True				
ANR	9871229	Statement	","	1256:16:31438:31438	9871149	27	True				
ANR	9871230	Statement	SAMPLEFORMAT_INT	1256:18:31440:31455	9871149	28	True				
ANR	9871231	Statement	)	1256:34:31456:31456	9871149	29	True				
ANR	9871232	Statement	:	1256:35:31457:31457	9871149	30	True				
ANR	9871233	Statement	case	1257:1:31460:31463	9871149	31	True				
ANR	9871234	Statement	PACK	1257:6:31465:31468	9871149	32	True				
ANR	9871235	Statement	(	1257:10:31469:31469	9871149	33	True				
ANR	9871236	Statement	1	1257:11:31470:31470	9871149	34	True				
ANR	9871237	Statement	","	1257:12:31471:31471	9871149	35	True				
ANR	9871238	Statement	16	1257:14:31473:31474	9871149	36	True				
ANR	9871239	Statement	","	1257:16:31475:31475	9871149	37	True				
ANR	9871240	Statement	SAMPLEFORMAT_UINT	1257:18:31477:31493	9871149	38	True				
ANR	9871241	Statement	)	1257:35:31494:31494	9871149	39	True				
ANR	9871242	Statement	:	1257:36:31495:31495	9871149	40	True				
ANR	9871243	ReturnStatement	return ( SGILOGDATAFMT_16BIT ) ;	1258:2:31499:31527	9871149	41	True				
ANR	9871244	Identifier	SGILOGDATAFMT_16BIT		9871149	0					
ANR	9871245	Statement	case	1259:1:31530:31533	9871149	42	True				
ANR	9871246	Statement	PACK	1259:6:31535:31538	9871149	43	True				
ANR	9871247	Statement	(	1259:10:31539:31539	9871149	44	True				
ANR	9871248	Statement	1	1259:11:31540:31540	9871149	45	True				
ANR	9871249	Statement	","	1259:12:31541:31541	9871149	46	True				
ANR	9871250	Statement	8	1259:15:31544:31544	9871149	47	True				
ANR	9871251	Statement	","	1259:16:31545:31545	9871149	48	True				
ANR	9871252	Statement	SAMPLEFORMAT_VOID	1259:18:31547:31563	9871149	49	True				
ANR	9871253	Statement	)	1259:35:31564:31564	9871149	50	True				
ANR	9871254	Statement	:	1259:36:31565:31565	9871149	51	True				
ANR	9871255	Statement	case	1260:1:31568:31571	9871149	52	True				
ANR	9871256	Statement	PACK	1260:6:31573:31576	9871149	53	True				
ANR	9871257	Statement	(	1260:10:31577:31577	9871149	54	True				
ANR	9871258	Statement	1	1260:11:31578:31578	9871149	55	True				
ANR	9871259	Statement	","	1260:12:31579:31579	9871149	56	True				
ANR	9871260	Statement	8	1260:15:31582:31582	9871149	57	True				
ANR	9871261	Statement	","	1260:16:31583:31583	9871149	58	True				
ANR	9871262	Statement	SAMPLEFORMAT_UINT	1260:18:31585:31601	9871149	59	True				
ANR	9871263	Statement	)	1260:35:31602:31602	9871149	60	True				
ANR	9871264	Statement	:	1260:36:31603:31603	9871149	61	True				
ANR	9871265	ReturnStatement	return ( SGILOGDATAFMT_8BIT ) ;	1261:2:31607:31634	9871149	62	True				
ANR	9871266	Identifier	SGILOGDATAFMT_8BIT		9871149	0					
ANR	9871267	Statement	undef	1263:1:31640:31644	9871149	31	True				
ANR	9871268	Statement	PACK	1263:7:31646:31649	9871149	32	True				
ANR	9871269	ReturnStatement	return ( SGILOGDATAFMT_UNKNOWN ) ;	1264:1:31652:31682	9871149	33	True				
ANR	9871270	Identifier	SGILOGDATAFMT_UNKNOWN		9871149	0					
ANR	9871271	ReturnType	static int		9871149	1					
ANR	9871272	Identifier	LogL16GuessDataFmt		9871149	2					
ANR	9871273	ParameterList	TIFFDirectory * td		9871149	3					
ANR	9871274	Parameter	TIFFDirectory * td	1249:19:31163:31179	9871149	0	True				
ANR	9871275	ParameterType	TIFFDirectory *		9871149	0					
ANR	9871276	Identifier	td		9871149	1					
ANR	9871277	CFGEntryNode	ENTRY		9871149		True				
ANR	9871278	CFGExitNode	EXIT		9871149		True				
ANR	9871279	Symbol	td		9871149						
ANR	9871280	Symbol	td -> td_samplesperpixel		9871149						
ANR	9871281	Symbol	* td		9871149						
ANR	9871282	Symbol	td -> td_sampleformat		9871149						
ANR	9871283	Symbol	SGILOGDATAFMT_16BIT		9871149						
ANR	9871284	Symbol	SGILOGDATAFMT_8BIT		9871149						
ANR	9871285	Symbol	SGILOGDATAFMT_UNKNOWN		9871149						
ANR	9871286	Symbol	SGILOGDATAFMT_FLOAT		9871149						
ANR	9871287	Symbol	PACK		9871149						
ANR	9871288	Symbol	td -> td_bitspersample		9871149						
ANR	9871289	Function	multiply_ms	1271:0:31797:31952							
ANR	9871290	FunctionDef	"multiply_ms (tmsize_t m1 , tmsize_t m2)"		9871289	0					
ANR	9871291	CompoundStatement		1273:0:31851:31952	9871289	0					
ANR	9871292	IfStatement	if ( m1 == 0 || m2 > TIFF_TMSIZE_T_MAX / m1 )		9871289	0					
ANR	9871293	Condition	m1 == 0 || m2 > TIFF_TMSIZE_T_MAX / m1	1274:12:31865:31902	9871289	0	True				
ANR	9871294	OrExpression	m1 == 0 || m2 > TIFF_TMSIZE_T_MAX / m1		9871289	0		||			
ANR	9871295	EqualityExpression	m1 == 0		9871289	0		==			
ANR	9871296	Identifier	m1		9871289	0					
ANR	9871297	PrimaryExpression	0		9871289	1					
ANR	9871298	RelationalExpression	m2 > TIFF_TMSIZE_T_MAX / m1		9871289	1		>			
ANR	9871299	Identifier	m2		9871289	0					
ANR	9871300	MultiplicativeExpression	TIFF_TMSIZE_T_MAX / m1		9871289	1		/			
ANR	9871301	Identifier	TIFF_TMSIZE_T_MAX		9871289	0					
ANR	9871302	Identifier	m1		9871289	1					
ANR	9871303	ReturnStatement	return 0 ;	1275:12:31918:31926	9871289	1	True				
ANR	9871304	PrimaryExpression	0		9871289	0					
ANR	9871305	ReturnStatement	return m1 * m2 ;	1276:8:31936:31950	9871289	1	True				
ANR	9871306	MultiplicativeExpression	m1 * m2		9871289	0		*			
ANR	9871307	Identifier	m1		9871289	0					
ANR	9871308	Identifier	m2		9871289	1					
ANR	9871309	ReturnType	static tmsize_t		9871289	1					
ANR	9871310	Identifier	multiply_ms		9871289	2					
ANR	9871311	ParameterList	"tmsize_t m1 , tmsize_t m2"		9871289	3					
ANR	9871312	Parameter	tmsize_t m1	1272:12:31825:31835	9871289	0	True				
ANR	9871313	ParameterType	tmsize_t		9871289	0					
ANR	9871314	Identifier	m1		9871289	1					
ANR	9871315	Parameter	tmsize_t m2	1272:25:31838:31848	9871289	1	True				
ANR	9871316	ParameterType	tmsize_t		9871289	0					
ANR	9871317	Identifier	m2		9871289	1					
ANR	9871318	CFGEntryNode	ENTRY		9871289		True				
ANR	9871319	CFGExitNode	EXIT		9871289		True				
ANR	9871320	Symbol	m1		9871289						
ANR	9871321	Symbol	m2		9871289						
ANR	9871322	Symbol	TIFF_TMSIZE_T_MAX		9871289						
ANR	9871323	Function	LogL16InitState	1279:0:31955:33509							
ANR	9871324	FunctionDef	LogL16InitState (TIFF * tif)		9871323	0					
ANR	9871325	CompoundStatement		1281:0:31993:33509	9871323	0					
ANR	9871326	Statement	static	1282:1:31996:32001	9871323	0	True				
ANR	9871327	IdentifierDeclStatement	"const char module [ ] = ""LogL16InitState"" ;"	1282:8:32003:32042	9871323	1	True				
ANR	9871328	IdentifierDecl	"module [ ] = ""LogL16InitState"""		9871323	0					
ANR	9871329	IdentifierDeclType	const char [ ]		9871323	0					
ANR	9871330	Identifier	module		9871323	1					
ANR	9871331	AssignmentExpression	"module [ ] = ""LogL16InitState"""		9871323	2		=			
ANR	9871332	Identifier	module		9871323	0					
ANR	9871333	PrimaryExpression	"""LogL16InitState"""		9871323	1					
ANR	9871334	IdentifierDeclStatement	TIFFDirectory * td = & tif -> tif_dir ;	1283:1:32045:32078	9871323	2	True				
ANR	9871335	IdentifierDecl	* td = & tif -> tif_dir		9871323	0					
ANR	9871336	IdentifierDeclType	TIFFDirectory *		9871323	0					
ANR	9871337	Identifier	td		9871323	1					
ANR	9871338	AssignmentExpression	* td = & tif -> tif_dir		9871323	2		=			
ANR	9871339	Identifier	td		9871323	0					
ANR	9871340	UnaryOperationExpression	& tif -> tif_dir		9871323	1					
ANR	9871341	UnaryOperator	&		9871323	0					
ANR	9871342	PtrMemberAccess	tif -> tif_dir		9871323	1					
ANR	9871343	Identifier	tif		9871323	0					
ANR	9871344	Identifier	tif_dir		9871323	1					
ANR	9871345	IdentifierDeclStatement	LogLuvState * sp = DecoderState ( tif ) ;	1284:1:32081:32116	9871323	3	True				
ANR	9871346	IdentifierDecl	* sp = DecoderState ( tif )		9871323	0					
ANR	9871347	IdentifierDeclType	LogLuvState *		9871323	0					
ANR	9871348	Identifier	sp		9871323	1					
ANR	9871349	AssignmentExpression	* sp = DecoderState ( tif )		9871323	2		=			
ANR	9871350	Identifier	sp		9871323	0					
ANR	9871351	CallExpression	DecoderState ( tif )		9871323	1					
ANR	9871352	Callee	DecoderState		9871323	0					
ANR	9871353	Identifier	DecoderState		9871323	0					
ANR	9871354	ArgumentList	tif		9871323	1					
ANR	9871355	Argument	tif		9871323	0					
ANR	9871356	Identifier	tif		9871323	0					
ANR	9871357	ExpressionStatement	assert ( sp != NULL )	1286:1:32120:32138	9871323	4	True				
ANR	9871358	CallExpression	assert ( sp != NULL )		9871323	0					
ANR	9871359	Callee	assert		9871323	0					
ANR	9871360	Identifier	assert		9871323	0					
ANR	9871361	ArgumentList	sp != NULL		9871323	1					
ANR	9871362	Argument	sp != NULL		9871323	0					
ANR	9871363	EqualityExpression	sp != NULL		9871323	0		!=			
ANR	9871364	Identifier	sp		9871323	0					
ANR	9871365	Identifier	NULL		9871323	1					
ANR	9871366	ExpressionStatement	assert ( td -> td_photometric == PHOTOMETRIC_LOGL )	1287:1:32141:32187	9871323	5	True				
ANR	9871367	CallExpression	assert ( td -> td_photometric == PHOTOMETRIC_LOGL )		9871323	0					
ANR	9871368	Callee	assert		9871323	0					
ANR	9871369	Identifier	assert		9871323	0					
ANR	9871370	ArgumentList	td -> td_photometric == PHOTOMETRIC_LOGL		9871323	1					
ANR	9871371	Argument	td -> td_photometric == PHOTOMETRIC_LOGL		9871323	0					
ANR	9871372	EqualityExpression	td -> td_photometric == PHOTOMETRIC_LOGL		9871323	0		==			
ANR	9871373	PtrMemberAccess	td -> td_photometric		9871323	0					
ANR	9871374	Identifier	td		9871323	0					
ANR	9871375	Identifier	td_photometric		9871323	1					
ANR	9871376	Identifier	PHOTOMETRIC_LOGL		9871323	1					
ANR	9871377	IfStatement	if ( td -> td_samplesperpixel != 1 )		9871323	6					
ANR	9871378	Condition	td -> td_samplesperpixel != 1	1289:5:32195:32221	9871323	0	True				
ANR	9871379	EqualityExpression	td -> td_samplesperpixel != 1		9871323	0		!=			
ANR	9871380	PtrMemberAccess	td -> td_samplesperpixel		9871323	0					
ANR	9871381	Identifier	td		9871323	0					
ANR	9871382	Identifier	td_samplesperpixel		9871323	1					
ANR	9871383	PrimaryExpression	1		9871323	1					
ANR	9871384	CompoundStatement		10:1:232:232	9871323	1					
ANR	9871385	ExpressionStatement	"TIFFErrorExt ( tif -> tif_clientdata , module , ""Sorry, can not handle LogL image with %s=%d"" , ""Samples/pixel"" , td -> td_samplesperpixel )"	1291:2:32230:32382	9871323	0	True				
ANR	9871386	CallExpression	"TIFFErrorExt ( tif -> tif_clientdata , module , ""Sorry, can not handle LogL image with %s=%d"" , ""Samples/pixel"" , td -> td_samplesperpixel )"		9871323	0					
ANR	9871387	Callee	TIFFErrorExt		9871323	0					
ANR	9871388	Identifier	TIFFErrorExt		9871323	0					
ANR	9871389	ArgumentList	tif -> tif_clientdata		9871323	1					
ANR	9871390	Argument	tif -> tif_clientdata		9871323	0					
ANR	9871391	PtrMemberAccess	tif -> tif_clientdata		9871323	0					
ANR	9871392	Identifier	tif		9871323	0					
ANR	9871393	Identifier	tif_clientdata		9871323	1					
ANR	9871394	Argument	module		9871323	1					
ANR	9871395	Identifier	module		9871323	0					
ANR	9871396	Argument	"""Sorry, can not handle LogL image with %s=%d"""		9871323	2					
ANR	9871397	PrimaryExpression	"""Sorry, can not handle LogL image with %s=%d"""		9871323	0					
ANR	9871398	Argument	"""Samples/pixel"""		9871323	3					
ANR	9871399	PrimaryExpression	"""Samples/pixel"""		9871323	0					
ANR	9871400	Argument	td -> td_samplesperpixel		9871323	4					
ANR	9871401	PtrMemberAccess	td -> td_samplesperpixel		9871323	0					
ANR	9871402	Identifier	td		9871323	0					
ANR	9871403	Identifier	td_samplesperpixel		9871323	1					
ANR	9871404	ReturnStatement	return 0 ;	1294:2:32386:32394	9871323	1	True				
ANR	9871405	PrimaryExpression	0		9871323	0					
ANR	9871406	IfStatement	if ( sp -> user_datafmt == SGILOGDATAFMT_UNKNOWN )		9871323	7					
ANR	9871407	Condition	sp -> user_datafmt == SGILOGDATAFMT_UNKNOWN	1298:5:32464:32504	9871323	0	True				
ANR	9871408	EqualityExpression	sp -> user_datafmt == SGILOGDATAFMT_UNKNOWN		9871323	0		==			
ANR	9871409	PtrMemberAccess	sp -> user_datafmt		9871323	0					
ANR	9871410	Identifier	sp		9871323	0					
ANR	9871411	Identifier	user_datafmt		9871323	1					
ANR	9871412	Identifier	SGILOGDATAFMT_UNKNOWN		9871323	1					
ANR	9871413	ExpressionStatement	sp -> user_datafmt = LogL16GuessDataFmt ( td )	1299:2:32509:32550	9871323	1	True				
ANR	9871414	AssignmentExpression	sp -> user_datafmt = LogL16GuessDataFmt ( td )		9871323	0		=			
ANR	9871415	PtrMemberAccess	sp -> user_datafmt		9871323	0					
ANR	9871416	Identifier	sp		9871323	0					
ANR	9871417	Identifier	user_datafmt		9871323	1					
ANR	9871418	CallExpression	LogL16GuessDataFmt ( td )		9871323	1					
ANR	9871419	Callee	LogL16GuessDataFmt		9871323	0					
ANR	9871420	Identifier	LogL16GuessDataFmt		9871323	0					
ANR	9871421	ArgumentList	td		9871323	1					
ANR	9871422	Argument	td		9871323	0					
ANR	9871423	Identifier	td		9871323	0					
ANR	9871424	SwitchStatement	switch ( sp -> user_datafmt )		9871323	8					
ANR	9871425	Condition	sp -> user_datafmt	1300:9:32561:32576	9871323	0	True				
ANR	9871426	PtrMemberAccess	sp -> user_datafmt		9871323	0					
ANR	9871427	Identifier	sp		9871323	0					
ANR	9871428	Identifier	user_datafmt		9871323	1					
ANR	9871429	CompoundStatement		20:27:585:585	9871323	1					
ANR	9871430	Label	case SGILOGDATAFMT_FLOAT :	1301:1:32582:32606	9871323	0	True				
ANR	9871431	Identifier	SGILOGDATAFMT_FLOAT		9871323	0					
ANR	9871432	ExpressionStatement	sp -> pixel_size = sizeof ( float )	1302:2:32610:32641	9871323	1	True				
ANR	9871433	AssignmentExpression	sp -> pixel_size = sizeof ( float )		9871323	0		=			
ANR	9871434	PtrMemberAccess	sp -> pixel_size		9871323	0					
ANR	9871435	Identifier	sp		9871323	0					
ANR	9871436	Identifier	pixel_size		9871323	1					
ANR	9871437	SizeofExpression	sizeof ( float )		9871323	1					
ANR	9871438	Sizeof	sizeof		9871323	0					
ANR	9871439	SizeofOperand	float		9871323	1					
ANR	9871440	BreakStatement	break ;	1303:2:32645:32650	9871323	2	True				
ANR	9871441	Label	case SGILOGDATAFMT_16BIT :	1304:1:32653:32677	9871323	3	True				
ANR	9871442	Identifier	SGILOGDATAFMT_16BIT		9871323	0					
ANR	9871443	ExpressionStatement	sp -> pixel_size = sizeof ( int16 )	1305:2:32681:32712	9871323	4	True				
ANR	9871444	AssignmentExpression	sp -> pixel_size = sizeof ( int16 )		9871323	0		=			
ANR	9871445	PtrMemberAccess	sp -> pixel_size		9871323	0					
ANR	9871446	Identifier	sp		9871323	0					
ANR	9871447	Identifier	pixel_size		9871323	1					
ANR	9871448	SizeofExpression	sizeof ( int16 )		9871323	1					
ANR	9871449	Sizeof	sizeof		9871323	0					
ANR	9871450	SizeofOperand	int16		9871323	1					
ANR	9871451	BreakStatement	break ;	1306:2:32716:32721	9871323	5	True				
ANR	9871452	Label	case SGILOGDATAFMT_8BIT :	1307:1:32724:32747	9871323	6	True				
ANR	9871453	Identifier	SGILOGDATAFMT_8BIT		9871323	0					
ANR	9871454	ExpressionStatement	sp -> pixel_size = sizeof ( uint8 )	1308:2:32751:32782	9871323	7	True				
ANR	9871455	AssignmentExpression	sp -> pixel_size = sizeof ( uint8 )		9871323	0		=			
ANR	9871456	PtrMemberAccess	sp -> pixel_size		9871323	0					
ANR	9871457	Identifier	sp		9871323	0					
ANR	9871458	Identifier	pixel_size		9871323	1					
ANR	9871459	SizeofExpression	sizeof ( uint8 )		9871323	1					
ANR	9871460	Sizeof	sizeof		9871323	0					
ANR	9871461	SizeofOperand	uint8		9871323	1					
ANR	9871462	BreakStatement	break ;	1309:2:32786:32791	9871323	8	True				
ANR	9871463	Label	default :	1310:1:32794:32801	9871323	9	True				
ANR	9871464	Identifier	default		9871323	0					
ANR	9871465	ExpressionStatement	"TIFFErrorExt ( tif -> tif_clientdata , module , ""No support for converting user data format to LogL"" )"	1311:2:32805:32906	9871323	10	True				
ANR	9871466	CallExpression	"TIFFErrorExt ( tif -> tif_clientdata , module , ""No support for converting user data format to LogL"" )"		9871323	0					
ANR	9871467	Callee	TIFFErrorExt		9871323	0					
ANR	9871468	Identifier	TIFFErrorExt		9871323	0					
ANR	9871469	ArgumentList	tif -> tif_clientdata		9871323	1					
ANR	9871470	Argument	tif -> tif_clientdata		9871323	0					
ANR	9871471	PtrMemberAccess	tif -> tif_clientdata		9871323	0					
ANR	9871472	Identifier	tif		9871323	0					
ANR	9871473	Identifier	tif_clientdata		9871323	1					
ANR	9871474	Argument	module		9871323	1					
ANR	9871475	Identifier	module		9871323	0					
ANR	9871476	Argument	"""No support for converting user data format to LogL"""		9871323	2					
ANR	9871477	PrimaryExpression	"""No support for converting user data format to LogL"""		9871323	0					
ANR	9871478	ReturnStatement	return ( 0 ) ;	1313:2:32910:32920	9871323	11	True				
ANR	9871479	PrimaryExpression	0		9871323	0					
ANR	9871480	IfStatement	if ( isTiled ( tif ) )		9871323	9					
ANR	9871481	Condition	isTiled ( tif )	1315:12:32937:32948	9871323	0	True				
ANR	9871482	CallExpression	isTiled ( tif )		9871323	0					
ANR	9871483	Callee	isTiled		9871323	0					
ANR	9871484	Identifier	isTiled		9871323	0					
ANR	9871485	ArgumentList	tif		9871323	1					
ANR	9871486	Argument	tif		9871323	0					
ANR	9871487	Identifier	tif		9871323	0					
ANR	9871488	ExpressionStatement	"sp -> tbuflen = multiply_ms ( td -> td_tilewidth , td -> td_tilelength )"	1316:12:32964:33026	9871323	1	True				
ANR	9871489	AssignmentExpression	"sp -> tbuflen = multiply_ms ( td -> td_tilewidth , td -> td_tilelength )"		9871323	0		=			
ANR	9871490	PtrMemberAccess	sp -> tbuflen		9871323	0					
ANR	9871491	Identifier	sp		9871323	0					
ANR	9871492	Identifier	tbuflen		9871323	1					
ANR	9871493	CallExpression	"multiply_ms ( td -> td_tilewidth , td -> td_tilelength )"		9871323	1					
ANR	9871494	Callee	multiply_ms		9871323	0					
ANR	9871495	Identifier	multiply_ms		9871323	0					
ANR	9871496	ArgumentList	td -> td_tilewidth		9871323	1					
ANR	9871497	Argument	td -> td_tilewidth		9871323	0					
ANR	9871498	PtrMemberAccess	td -> td_tilewidth		9871323	0					
ANR	9871499	Identifier	td		9871323	0					
ANR	9871500	Identifier	td_tilewidth		9871323	1					
ANR	9871501	Argument	td -> td_tilelength		9871323	1					
ANR	9871502	PtrMemberAccess	td -> td_tilelength		9871323	0					
ANR	9871503	Identifier	td		9871323	0					
ANR	9871504	Identifier	td_tilelength		9871323	1					
ANR	9871505	ElseStatement	else		9871323	0					
ANR	9871506	IfStatement	if ( td -> td_rowsperstrip < td -> td_imagelength )		9871323	0					
ANR	9871507	Condition	td -> td_rowsperstrip < td -> td_imagelength	1317:17:33045:33084	9871323	0	True				
ANR	9871508	RelationalExpression	td -> td_rowsperstrip < td -> td_imagelength		9871323	0		<			
ANR	9871509	PtrMemberAccess	td -> td_rowsperstrip		9871323	0					
ANR	9871510	Identifier	td		9871323	0					
ANR	9871511	Identifier	td_rowsperstrip		9871323	1					
ANR	9871512	PtrMemberAccess	td -> td_imagelength		9871323	1					
ANR	9871513	Identifier	td		9871323	0					
ANR	9871514	Identifier	td_imagelength		9871323	1					
ANR	9871515	ExpressionStatement	"sp -> tbuflen = multiply_ms ( td -> td_imagewidth , td -> td_rowsperstrip )"	1318:12:33100:33165	9871323	1	True				
ANR	9871516	AssignmentExpression	"sp -> tbuflen = multiply_ms ( td -> td_imagewidth , td -> td_rowsperstrip )"		9871323	0		=			
ANR	9871517	PtrMemberAccess	sp -> tbuflen		9871323	0					
ANR	9871518	Identifier	sp		9871323	0					
ANR	9871519	Identifier	tbuflen		9871323	1					
ANR	9871520	CallExpression	"multiply_ms ( td -> td_imagewidth , td -> td_rowsperstrip )"		9871323	1					
ANR	9871521	Callee	multiply_ms		9871323	0					
ANR	9871522	Identifier	multiply_ms		9871323	0					
ANR	9871523	ArgumentList	td -> td_imagewidth		9871323	1					
ANR	9871524	Argument	td -> td_imagewidth		9871323	0					
ANR	9871525	PtrMemberAccess	td -> td_imagewidth		9871323	0					
ANR	9871526	Identifier	td		9871323	0					
ANR	9871527	Identifier	td_imagewidth		9871323	1					
ANR	9871528	Argument	td -> td_rowsperstrip		9871323	1					
ANR	9871529	PtrMemberAccess	td -> td_rowsperstrip		9871323	0					
ANR	9871530	Identifier	td		9871323	0					
ANR	9871531	Identifier	td_rowsperstrip		9871323	1					
ANR	9871532	ElseStatement	else		9871323	0					
ANR	9871533	ExpressionStatement	"sp -> tbuflen = multiply_ms ( td -> td_imagewidth , td -> td_imagelength )"	1320:12:33192:33256	9871323	0	True				
ANR	9871534	AssignmentExpression	"sp -> tbuflen = multiply_ms ( td -> td_imagewidth , td -> td_imagelength )"		9871323	0		=			
ANR	9871535	PtrMemberAccess	sp -> tbuflen		9871323	0					
ANR	9871536	Identifier	sp		9871323	0					
ANR	9871537	Identifier	tbuflen		9871323	1					
ANR	9871538	CallExpression	"multiply_ms ( td -> td_imagewidth , td -> td_imagelength )"		9871323	1					
ANR	9871539	Callee	multiply_ms		9871323	0					
ANR	9871540	Identifier	multiply_ms		9871323	0					
ANR	9871541	ArgumentList	td -> td_imagewidth		9871323	1					
ANR	9871542	Argument	td -> td_imagewidth		9871323	0					
ANR	9871543	PtrMemberAccess	td -> td_imagewidth		9871323	0					
ANR	9871544	Identifier	td		9871323	0					
ANR	9871545	Identifier	td_imagewidth		9871323	1					
ANR	9871546	Argument	td -> td_imagelength		9871323	1					
ANR	9871547	PtrMemberAccess	td -> td_imagelength		9871323	0					
ANR	9871548	Identifier	td		9871323	0					
ANR	9871549	Identifier	td_imagelength		9871323	1					
ANR	9871550	IfStatement	"if ( multiply_ms ( sp -> tbuflen , sizeof ( int16 ) ) == 0 || ( sp -> tbuf = ( uint8 * ) _TIFFmalloc ( sp -> tbuflen * sizeof ( int16 ) ) ) == NULL )"		9871323	10					
ANR	9871551	Condition	"multiply_ms ( sp -> tbuflen , sizeof ( int16 ) ) == 0 || ( sp -> tbuf = ( uint8 * ) _TIFFmalloc ( sp -> tbuflen * sizeof ( int16 ) ) ) == NULL"	1321:5:33263:33387	9871323	0	True				
ANR	9871552	OrExpression	"multiply_ms ( sp -> tbuflen , sizeof ( int16 ) ) == 0 || ( sp -> tbuf = ( uint8 * ) _TIFFmalloc ( sp -> tbuflen * sizeof ( int16 ) ) ) == NULL"		9871323	0		||			
ANR	9871553	EqualityExpression	"multiply_ms ( sp -> tbuflen , sizeof ( int16 ) ) == 0"		9871323	0		==			
ANR	9871554	CallExpression	"multiply_ms ( sp -> tbuflen , sizeof ( int16 ) )"		9871323	0					
ANR	9871555	Callee	multiply_ms		9871323	0					
ANR	9871556	Identifier	multiply_ms		9871323	0					
ANR	9871557	ArgumentList	sp -> tbuflen		9871323	1					
ANR	9871558	Argument	sp -> tbuflen		9871323	0					
ANR	9871559	PtrMemberAccess	sp -> tbuflen		9871323	0					
ANR	9871560	Identifier	sp		9871323	0					
ANR	9871561	Identifier	tbuflen		9871323	1					
ANR	9871562	Argument	sizeof ( int16 )		9871323	1					
ANR	9871563	SizeofExpression	sizeof ( int16 )		9871323	0					
ANR	9871564	Sizeof	sizeof		9871323	0					
ANR	9871565	SizeofOperand	int16		9871323	1					
ANR	9871566	PrimaryExpression	0		9871323	1					
ANR	9871567	EqualityExpression	( sp -> tbuf = ( uint8 * ) _TIFFmalloc ( sp -> tbuflen * sizeof ( int16 ) ) ) == NULL		9871323	1		==			
ANR	9871568	AssignmentExpression	sp -> tbuf = ( uint8 * ) _TIFFmalloc ( sp -> tbuflen * sizeof ( int16 ) )		9871323	0		=			
ANR	9871569	PtrMemberAccess	sp -> tbuf		9871323	0					
ANR	9871570	Identifier	sp		9871323	0					
ANR	9871571	Identifier	tbuf		9871323	1					
ANR	9871572	CastExpression	( uint8 * ) _TIFFmalloc ( sp -> tbuflen * sizeof ( int16 ) )		9871323	1					
ANR	9871573	CastTarget	uint8 *		9871323	0					
ANR	9871574	CallExpression	_TIFFmalloc ( sp -> tbuflen * sizeof ( int16 ) )		9871323	1					
ANR	9871575	Callee	_TIFFmalloc		9871323	0					
ANR	9871576	Identifier	_TIFFmalloc		9871323	0					
ANR	9871577	ArgumentList	sp -> tbuflen * sizeof ( int16 )		9871323	1					
ANR	9871578	Argument	sp -> tbuflen * sizeof ( int16 )		9871323	0					
ANR	9871579	MultiplicativeExpression	sp -> tbuflen * sizeof ( int16 )		9871323	0		*			
ANR	9871580	PtrMemberAccess	sp -> tbuflen		9871323	0					
ANR	9871581	Identifier	sp		9871323	0					
ANR	9871582	Identifier	tbuflen		9871323	1					
ANR	9871583	SizeofExpression	sizeof ( int16 )		9871323	1					
ANR	9871584	Sizeof	sizeof		9871323	0					
ANR	9871585	SizeofOperand	int16		9871323	1					
ANR	9871586	Identifier	NULL		9871323	1					
ANR	9871587	CompoundStatement		42:78:1396:1396	9871323	1					
ANR	9871588	ExpressionStatement	"TIFFErrorExt ( tif -> tif_clientdata , module , ""No space for SGILog translation buffer"" )"	1323:2:33394:33477	9871323	0	True				
ANR	9871589	CallExpression	"TIFFErrorExt ( tif -> tif_clientdata , module , ""No space for SGILog translation buffer"" )"		9871323	0					
ANR	9871590	Callee	TIFFErrorExt		9871323	0					
ANR	9871591	Identifier	TIFFErrorExt		9871323	0					
ANR	9871592	ArgumentList	tif -> tif_clientdata		9871323	1					
ANR	9871593	Argument	tif -> tif_clientdata		9871323	0					
ANR	9871594	PtrMemberAccess	tif -> tif_clientdata		9871323	0					
ANR	9871595	Identifier	tif		9871323	0					
ANR	9871596	Identifier	tif_clientdata		9871323	1					
ANR	9871597	Argument	module		9871323	1					
ANR	9871598	Identifier	module		9871323	0					
ANR	9871599	Argument	"""No space for SGILog translation buffer"""		9871323	2					
ANR	9871600	PrimaryExpression	"""No space for SGILog translation buffer"""		9871323	0					
ANR	9871601	ReturnStatement	return ( 0 ) ;	1324:2:33481:33491	9871323	1	True				
ANR	9871602	PrimaryExpression	0		9871323	0					
ANR	9871603	ReturnStatement	return ( 1 ) ;	1326:1:33497:33507	9871323	11	True				
ANR	9871604	PrimaryExpression	1		9871323	0					
ANR	9871605	ReturnType	static int		9871323	1					
ANR	9871606	Identifier	LogL16InitState		9871323	2					
ANR	9871607	ParameterList	TIFF * tif		9871323	3					
ANR	9871608	Parameter	TIFF * tif	1280:16:31982:31990	9871323	0	True				
ANR	9871609	ParameterType	TIFF *		9871323	0					
ANR	9871610	Identifier	tif		9871323	1					
ANR	9871611	CFGEntryNode	ENTRY		9871323		True				
ANR	9871612	CFGExitNode	EXIT		9871323		True				
ANR	9871613	Symbol	* sp		9871323						
ANR	9871614	Symbol	& tif -> tif_dir		9871323						
ANR	9871615	Symbol	td -> td_imagelength		9871323						
ANR	9871616	Symbol	sp -> user_datafmt		9871323						
ANR	9871617	Symbol	td -> td_tilelength		9871323						
ANR	9871618	Symbol	tif		9871323						
ANR	9871619	Symbol	isTiled		9871323						
ANR	9871620	Symbol	sp -> tbuflen		9871323						
ANR	9871621	Symbol	LogL16GuessDataFmt		9871323						
ANR	9871622	Symbol	sp -> pixel_size		9871323						
ANR	9871623	Symbol	DecoderState		9871323						
ANR	9871624	Symbol	PHOTOMETRIC_LOGL		9871323						
ANR	9871625	Symbol	sp -> tbuf		9871323						
ANR	9871626	Symbol	SGILOGDATAFMT_UNKNOWN		9871323						
ANR	9871627	Symbol	sp		9871323						
ANR	9871628	Symbol	NULL		9871323						
ANR	9871629	Symbol	td -> td_imagewidth		9871323						
ANR	9871630	Symbol	module		9871323						
ANR	9871631	Symbol	multiply_ms		9871323						
ANR	9871632	Symbol	td -> td_tilewidth		9871323						
ANR	9871633	Symbol	tif -> tif_clientdata		9871323						
ANR	9871634	Symbol	td		9871323						
ANR	9871635	Symbol	td -> td_samplesperpixel		9871323						
ANR	9871636	Symbol	* td		9871323						
ANR	9871637	Symbol	_TIFFmalloc		9871323						
ANR	9871638	Symbol	td -> td_photometric		9871323						
ANR	9871639	Symbol	* tif		9871323						
ANR	9871640	Symbol	td -> td_rowsperstrip		9871323						
ANR	9871641	Function	LogLuvGuessDataFmt	1329:0:33512:34635							
ANR	9871642	FunctionDef	LogLuvGuessDataFmt (TIFFDirectory * td)		9871641	0					
ANR	9871643	CompoundStatement		1331:0:33561:34635	9871641	0					
ANR	9871644	IdentifierDeclStatement	int guess ;	1332:1:33564:33573	9871641	0	True				
ANR	9871645	IdentifierDecl	guess		9871641	0					
ANR	9871646	IdentifierDeclType	int		9871641	0					
ANR	9871647	Identifier	guess		9871641	1					
ANR	9871648	Statement	define	1338:1:33680:33685	9871641	1	True				
ANR	9871649	Statement	PACK	1338:8:33687:33690	9871641	2	True				
ANR	9871650	Statement	(	1338:12:33691:33691	9871641	3	True				
ANR	9871651	Statement	a	1338:13:33692:33692	9871641	4	True				
ANR	9871652	Statement	","	1338:14:33693:33693	9871641	5	True				
ANR	9871653	Statement	b	1338:15:33694:33694	9871641	6	True				
ANR	9871654	Statement	)	1338:16:33695:33695	9871641	7	True				
ANR	9871655	Statement	(	1338:18:33697:33697	9871641	8	True				
ANR	9871656	Statement	(	1338:19:33698:33698	9871641	9	True				
ANR	9871657	Statement	(	1338:20:33699:33699	9871641	10	True				
ANR	9871658	Statement	a	1338:21:33700:33700	9871641	11	True				
ANR	9871659	Statement	)	1338:22:33701:33701	9871641	12	True				
ANR	9871660	Statement	<<	1338:23:33702:33703	9871641	13	True				
ANR	9871661	Statement	3	1338:25:33704:33704	9871641	14	True				
ANR	9871662	Statement	)	1338:26:33705:33705	9871641	15	True				
ANR	9871663	Statement	|	1338:27:33706:33706	9871641	16	True				
ANR	9871664	Statement	(	1338:28:33707:33707	9871641	17	True				
ANR	9871665	Statement	b	1338:29:33708:33708	9871641	18	True				
ANR	9871666	Statement	)	1338:30:33709:33709	9871641	19	True				
ANR	9871667	Statement	)	1338:31:33710:33710	9871641	20	True				
ANR	9871668	SwitchStatement	"switch ( PACK ( td -> td_bitspersample , td -> td_sampleformat ) )"		9871641	21					
ANR	9871669	Condition	"PACK ( td -> td_bitspersample , td -> td_sampleformat )"	1339:9:33721:33767	9871641	0	True				
ANR	9871670	CallExpression	"PACK ( td -> td_bitspersample , td -> td_sampleformat )"		9871641	0					
ANR	9871671	Callee	PACK		9871641	0					
ANR	9871672	Identifier	PACK		9871641	0					
ANR	9871673	ArgumentList	td -> td_bitspersample		9871641	1					
ANR	9871674	Argument	td -> td_bitspersample		9871641	0					
ANR	9871675	PtrMemberAccess	td -> td_bitspersample		9871641	0					
ANR	9871676	Identifier	td		9871641	0					
ANR	9871677	Identifier	td_bitspersample		9871641	1					
ANR	9871678	Argument	td -> td_sampleformat		9871641	1					
ANR	9871679	PtrMemberAccess	td -> td_sampleformat		9871641	0					
ANR	9871680	Identifier	td		9871641	0					
ANR	9871681	Identifier	td_sampleformat		9871641	1					
ANR	9871682	CompoundStatement		9:58:208:208	9871641	1					
ANR	9871683	Statement	case	1340:1:33773:33776	9871641	0	True				
ANR	9871684	Statement	PACK	1340:6:33778:33781	9871641	1	True				
ANR	9871685	Statement	(	1340:10:33782:33782	9871641	2	True				
ANR	9871686	Statement	32	1340:11:33783:33784	9871641	3	True				
ANR	9871687	Statement	","	1340:13:33785:33785	9871641	4	True				
ANR	9871688	Statement	SAMPLEFORMAT_IEEEFP	1340:15:33787:33805	9871641	5	True				
ANR	9871689	Statement	)	1340:34:33806:33806	9871641	6	True				
ANR	9871690	Statement	:	1340:35:33807:33807	9871641	7	True				
ANR	9871691	ExpressionStatement	guess = SGILOGDATAFMT_FLOAT	1341:2:33811:33838	9871641	8	True				
ANR	9871692	AssignmentExpression	guess = SGILOGDATAFMT_FLOAT		9871641	0		=			
ANR	9871693	Identifier	guess		9871641	0					
ANR	9871694	Identifier	SGILOGDATAFMT_FLOAT		9871641	1					
ANR	9871695	BreakStatement	break ;	1342:2:33842:33847	9871641	9	True				
ANR	9871696	Statement	case	1343:1:33850:33853	9871641	10	True				
ANR	9871697	Statement	PACK	1343:6:33855:33858	9871641	11	True				
ANR	9871698	Statement	(	1343:10:33859:33859	9871641	12	True				
ANR	9871699	Statement	32	1343:11:33860:33861	9871641	13	True				
ANR	9871700	Statement	","	1343:13:33862:33862	9871641	14	True				
ANR	9871701	Statement	SAMPLEFORMAT_VOID	1343:15:33864:33880	9871641	15	True				
ANR	9871702	Statement	)	1343:32:33881:33881	9871641	16	True				
ANR	9871703	Statement	:	1343:33:33882:33882	9871641	17	True				
ANR	9871704	Statement	case	1344:1:33885:33888	9871641	18	True				
ANR	9871705	Statement	PACK	1344:6:33890:33893	9871641	19	True				
ANR	9871706	Statement	(	1344:10:33894:33894	9871641	20	True				
ANR	9871707	Statement	32	1344:11:33895:33896	9871641	21	True				
ANR	9871708	Statement	","	1344:13:33897:33897	9871641	22	True				
ANR	9871709	Statement	SAMPLEFORMAT_UINT	1344:15:33899:33915	9871641	23	True				
ANR	9871710	Statement	)	1344:32:33916:33916	9871641	24	True				
ANR	9871711	Statement	:	1344:33:33917:33917	9871641	25	True				
ANR	9871712	Statement	case	1345:1:33920:33923	9871641	26	True				
ANR	9871713	Statement	PACK	1345:6:33925:33928	9871641	27	True				
ANR	9871714	Statement	(	1345:10:33929:33929	9871641	28	True				
ANR	9871715	Statement	32	1345:11:33930:33931	9871641	29	True				
ANR	9871716	Statement	","	1345:13:33932:33932	9871641	30	True				
ANR	9871717	Statement	SAMPLEFORMAT_INT	1345:15:33934:33949	9871641	31	True				
ANR	9871718	Statement	)	1345:31:33950:33950	9871641	32	True				
ANR	9871719	Statement	:	1345:32:33951:33951	9871641	33	True				
ANR	9871720	ExpressionStatement	guess = SGILOGDATAFMT_RAW	1346:2:33955:33980	9871641	34	True				
ANR	9871721	AssignmentExpression	guess = SGILOGDATAFMT_RAW		9871641	0		=			
ANR	9871722	Identifier	guess		9871641	0					
ANR	9871723	Identifier	SGILOGDATAFMT_RAW		9871641	1					
ANR	9871724	BreakStatement	break ;	1347:2:33984:33989	9871641	35	True				
ANR	9871725	Statement	case	1348:1:33992:33995	9871641	36	True				
ANR	9871726	Statement	PACK	1348:6:33997:34000	9871641	37	True				
ANR	9871727	Statement	(	1348:10:34001:34001	9871641	38	True				
ANR	9871728	Statement	16	1348:11:34002:34003	9871641	39	True				
ANR	9871729	Statement	","	1348:13:34004:34004	9871641	40	True				
ANR	9871730	Statement	SAMPLEFORMAT_VOID	1348:15:34006:34022	9871641	41	True				
ANR	9871731	Statement	)	1348:32:34023:34023	9871641	42	True				
ANR	9871732	Statement	:	1348:33:34024:34024	9871641	43	True				
ANR	9871733	Statement	case	1349:1:34027:34030	9871641	44	True				
ANR	9871734	Statement	PACK	1349:6:34032:34035	9871641	45	True				
ANR	9871735	Statement	(	1349:10:34036:34036	9871641	46	True				
ANR	9871736	Statement	16	1349:11:34037:34038	9871641	47	True				
ANR	9871737	Statement	","	1349:13:34039:34039	9871641	48	True				
ANR	9871738	Statement	SAMPLEFORMAT_INT	1349:15:34041:34056	9871641	49	True				
ANR	9871739	Statement	)	1349:31:34057:34057	9871641	50	True				
ANR	9871740	Statement	:	1349:32:34058:34058	9871641	51	True				
ANR	9871741	Statement	case	1350:1:34061:34064	9871641	52	True				
ANR	9871742	Statement	PACK	1350:6:34066:34069	9871641	53	True				
ANR	9871743	Statement	(	1350:10:34070:34070	9871641	54	True				
ANR	9871744	Statement	16	1350:11:34071:34072	9871641	55	True				
ANR	9871745	Statement	","	1350:13:34073:34073	9871641	56	True				
ANR	9871746	Statement	SAMPLEFORMAT_UINT	1350:15:34075:34091	9871641	57	True				
ANR	9871747	Statement	)	1350:32:34092:34092	9871641	58	True				
ANR	9871748	Statement	:	1350:33:34093:34093	9871641	59	True				
ANR	9871749	ExpressionStatement	guess = SGILOGDATAFMT_16BIT	1351:2:34097:34124	9871641	60	True				
ANR	9871750	AssignmentExpression	guess = SGILOGDATAFMT_16BIT		9871641	0		=			
ANR	9871751	Identifier	guess		9871641	0					
ANR	9871752	Identifier	SGILOGDATAFMT_16BIT		9871641	1					
ANR	9871753	BreakStatement	break ;	1352:2:34128:34133	9871641	61	True				
ANR	9871754	Statement	case	1353:1:34136:34139	9871641	62	True				
ANR	9871755	Statement	PACK	1353:6:34141:34144	9871641	63	True				
ANR	9871756	Statement	(	1353:10:34145:34145	9871641	64	True				
ANR	9871757	Statement	8	1353:12:34147:34147	9871641	65	True				
ANR	9871758	Statement	","	1353:13:34148:34148	9871641	66	True				
ANR	9871759	Statement	SAMPLEFORMAT_VOID	1353:15:34150:34166	9871641	67	True				
ANR	9871760	Statement	)	1353:32:34167:34167	9871641	68	True				
ANR	9871761	Statement	:	1353:33:34168:34168	9871641	69	True				
ANR	9871762	Statement	case	1354:1:34171:34174	9871641	70	True				
ANR	9871763	Statement	PACK	1354:6:34176:34179	9871641	71	True				
ANR	9871764	Statement	(	1354:10:34180:34180	9871641	72	True				
ANR	9871765	Statement	8	1354:12:34182:34182	9871641	73	True				
ANR	9871766	Statement	","	1354:13:34183:34183	9871641	74	True				
ANR	9871767	Statement	SAMPLEFORMAT_UINT	1354:15:34185:34201	9871641	75	True				
ANR	9871768	Statement	)	1354:32:34202:34202	9871641	76	True				
ANR	9871769	Statement	:	1354:33:34203:34203	9871641	77	True				
ANR	9871770	ExpressionStatement	guess = SGILOGDATAFMT_8BIT	1355:2:34207:34233	9871641	78	True				
ANR	9871771	AssignmentExpression	guess = SGILOGDATAFMT_8BIT		9871641	0		=			
ANR	9871772	Identifier	guess		9871641	0					
ANR	9871773	Identifier	SGILOGDATAFMT_8BIT		9871641	1					
ANR	9871774	BreakStatement	break ;	1356:2:34237:34242	9871641	79	True				
ANR	9871775	Label	default :	1357:1:34245:34252	9871641	80	True				
ANR	9871776	Identifier	default		9871641	0					
ANR	9871777	ExpressionStatement	guess = SGILOGDATAFMT_UNKNOWN	1358:2:34256:34285	9871641	81	True				
ANR	9871778	AssignmentExpression	guess = SGILOGDATAFMT_UNKNOWN		9871641	0		=			
ANR	9871779	Identifier	guess		9871641	0					
ANR	9871780	Identifier	SGILOGDATAFMT_UNKNOWN		9871641	1					
ANR	9871781	BreakStatement	break ;	1359:2:34289:34294	9871641	82	True				
ANR	9871782	Statement	undef	1360:1:34297:34301	9871641	83	True				
ANR	9871783	Statement	PACK	1360:7:34303:34306	9871641	84	True				
ANR	9871784	SwitchStatement	switch ( td -> td_samplesperpixel )		9871641	22					
ANR	9871785	Condition	td -> td_samplesperpixel	1365:9:34365:34386	9871641	0	True				
ANR	9871786	PtrMemberAccess	td -> td_samplesperpixel		9871641	0					
ANR	9871787	Identifier	td		9871641	0					
ANR	9871788	Identifier	td_samplesperpixel		9871641	1					
ANR	9871789	CompoundStatement		35:33:827:827	9871641	1					
ANR	9871790	Label	case 1 :	1366:1:34392:34398	9871641	0	True				
ANR	9871791	IfStatement	if ( guess != SGILOGDATAFMT_RAW )		9871641	1					
ANR	9871792	Condition	guess != SGILOGDATAFMT_RAW	1367:6:34406:34431	9871641	0	True				
ANR	9871793	EqualityExpression	guess != SGILOGDATAFMT_RAW		9871641	0		!=			
ANR	9871794	Identifier	guess		9871641	0					
ANR	9871795	Identifier	SGILOGDATAFMT_RAW		9871641	1					
ANR	9871796	ExpressionStatement	guess = SGILOGDATAFMT_UNKNOWN	1368:3:34437:34466	9871641	1	True				
ANR	9871797	AssignmentExpression	guess = SGILOGDATAFMT_UNKNOWN		9871641	0		=			
ANR	9871798	Identifier	guess		9871641	0					
ANR	9871799	Identifier	SGILOGDATAFMT_UNKNOWN		9871641	1					
ANR	9871800	BreakStatement	break ;	1369:2:34470:34475	9871641	2	True				
ANR	9871801	Label	case 3 :	1370:1:34478:34484	9871641	3	True				
ANR	9871802	IfStatement	if ( guess == SGILOGDATAFMT_RAW )		9871641	4					
ANR	9871803	Condition	guess == SGILOGDATAFMT_RAW	1371:6:34492:34517	9871641	0	True				
ANR	9871804	EqualityExpression	guess == SGILOGDATAFMT_RAW		9871641	0		==			
ANR	9871805	Identifier	guess		9871641	0					
ANR	9871806	Identifier	SGILOGDATAFMT_RAW		9871641	1					
ANR	9871807	ExpressionStatement	guess = SGILOGDATAFMT_UNKNOWN	1372:3:34523:34552	9871641	1	True				
ANR	9871808	AssignmentExpression	guess = SGILOGDATAFMT_UNKNOWN		9871641	0		=			
ANR	9871809	Identifier	guess		9871641	0					
ANR	9871810	Identifier	SGILOGDATAFMT_UNKNOWN		9871641	1					
ANR	9871811	BreakStatement	break ;	1373:2:34556:34561	9871641	5	True				
ANR	9871812	Label	default :	1374:1:34564:34571	9871641	6	True				
ANR	9871813	Identifier	default		9871641	0					
ANR	9871814	ExpressionStatement	guess = SGILOGDATAFMT_UNKNOWN	1375:2:34575:34604	9871641	7	True				
ANR	9871815	AssignmentExpression	guess = SGILOGDATAFMT_UNKNOWN		9871641	0		=			
ANR	9871816	Identifier	guess		9871641	0					
ANR	9871817	Identifier	SGILOGDATAFMT_UNKNOWN		9871641	1					
ANR	9871818	BreakStatement	break ;	1376:2:34608:34613	9871641	8	True				
ANR	9871819	ReturnStatement	return ( guess ) ;	1378:1:34619:34633	9871641	23	True				
ANR	9871820	Identifier	guess		9871641	0					
ANR	9871821	ReturnType	static int		9871641	1					
ANR	9871822	Identifier	LogLuvGuessDataFmt		9871641	2					
ANR	9871823	ParameterList	TIFFDirectory * td		9871641	3					
ANR	9871824	Parameter	TIFFDirectory * td	1330:19:33542:33558	9871641	0	True				
ANR	9871825	ParameterType	TIFFDirectory *		9871641	0					
ANR	9871826	Identifier	td		9871641	1					
ANR	9871827	CFGEntryNode	ENTRY		9871641		True				
ANR	9871828	CFGExitNode	EXIT		9871641		True				
ANR	9871829	Symbol	td		9871641						
ANR	9871830	Symbol	td -> td_samplesperpixel		9871641						
ANR	9871831	Symbol	guess		9871641						
ANR	9871832	Symbol	* td		9871641						
ANR	9871833	Symbol	td -> td_sampleformat		9871641						
ANR	9871834	Symbol	SGILOGDATAFMT_16BIT		9871641						
ANR	9871835	Symbol	SGILOGDATAFMT_8BIT		9871641						
ANR	9871836	Symbol	SGILOGDATAFMT_UNKNOWN		9871641						
ANR	9871837	Symbol	SGILOGDATAFMT_FLOAT		9871641						
ANR	9871838	Symbol	PACK		9871641						
ANR	9871839	Symbol	td -> td_bitspersample		9871641						
ANR	9871840	Symbol	SGILOGDATAFMT_RAW		9871641						
ANR	9871841	Function	LogLuvInitState	1381:0:34638:36239							
ANR	9871842	FunctionDef	LogLuvInitState (TIFF * tif)		9871841	0					
ANR	9871843	CompoundStatement		1383:0:34676:36239	9871841	0					
ANR	9871844	Statement	static	1384:1:34679:34684	9871841	0	True				
ANR	9871845	IdentifierDeclStatement	"const char module [ ] = ""LogLuvInitState"" ;"	1384:8:34686:34725	9871841	1	True				
ANR	9871846	IdentifierDecl	"module [ ] = ""LogLuvInitState"""		9871841	0					
ANR	9871847	IdentifierDeclType	const char [ ]		9871841	0					
ANR	9871848	Identifier	module		9871841	1					
ANR	9871849	AssignmentExpression	"module [ ] = ""LogLuvInitState"""		9871841	2		=			
ANR	9871850	Identifier	module		9871841	0					
ANR	9871851	PrimaryExpression	"""LogLuvInitState"""		9871841	1					
ANR	9871852	IdentifierDeclStatement	TIFFDirectory * td = & tif -> tif_dir ;	1385:1:34728:34761	9871841	2	True				
ANR	9871853	IdentifierDecl	* td = & tif -> tif_dir		9871841	0					
ANR	9871854	IdentifierDeclType	TIFFDirectory *		9871841	0					
ANR	9871855	Identifier	td		9871841	1					
ANR	9871856	AssignmentExpression	* td = & tif -> tif_dir		9871841	2		=			
ANR	9871857	Identifier	td		9871841	0					
ANR	9871858	UnaryOperationExpression	& tif -> tif_dir		9871841	1					
ANR	9871859	UnaryOperator	&		9871841	0					
ANR	9871860	PtrMemberAccess	tif -> tif_dir		9871841	1					
ANR	9871861	Identifier	tif		9871841	0					
ANR	9871862	Identifier	tif_dir		9871841	1					
ANR	9871863	IdentifierDeclStatement	LogLuvState * sp = DecoderState ( tif ) ;	1386:1:34764:34799	9871841	3	True				
ANR	9871864	IdentifierDecl	* sp = DecoderState ( tif )		9871841	0					
ANR	9871865	IdentifierDeclType	LogLuvState *		9871841	0					
ANR	9871866	Identifier	sp		9871841	1					
ANR	9871867	AssignmentExpression	* sp = DecoderState ( tif )		9871841	2		=			
ANR	9871868	Identifier	sp		9871841	0					
ANR	9871869	CallExpression	DecoderState ( tif )		9871841	1					
ANR	9871870	Callee	DecoderState		9871841	0					
ANR	9871871	Identifier	DecoderState		9871841	0					
ANR	9871872	ArgumentList	tif		9871841	1					
ANR	9871873	Argument	tif		9871841	0					
ANR	9871874	Identifier	tif		9871841	0					
ANR	9871875	ExpressionStatement	assert ( sp != NULL )	1388:1:34803:34821	9871841	4	True				
ANR	9871876	CallExpression	assert ( sp != NULL )		9871841	0					
ANR	9871877	Callee	assert		9871841	0					
ANR	9871878	Identifier	assert		9871841	0					
ANR	9871879	ArgumentList	sp != NULL		9871841	1					
ANR	9871880	Argument	sp != NULL		9871841	0					
ANR	9871881	EqualityExpression	sp != NULL		9871841	0		!=			
ANR	9871882	Identifier	sp		9871841	0					
ANR	9871883	Identifier	NULL		9871841	1					
ANR	9871884	ExpressionStatement	assert ( td -> td_photometric == PHOTOMETRIC_LOGLUV )	1389:1:34824:34872	9871841	5	True				
ANR	9871885	CallExpression	assert ( td -> td_photometric == PHOTOMETRIC_LOGLUV )		9871841	0					
ANR	9871886	Callee	assert		9871841	0					
ANR	9871887	Identifier	assert		9871841	0					
ANR	9871888	ArgumentList	td -> td_photometric == PHOTOMETRIC_LOGLUV		9871841	1					
ANR	9871889	Argument	td -> td_photometric == PHOTOMETRIC_LOGLUV		9871841	0					
ANR	9871890	EqualityExpression	td -> td_photometric == PHOTOMETRIC_LOGLUV		9871841	0		==			
ANR	9871891	PtrMemberAccess	td -> td_photometric		9871841	0					
ANR	9871892	Identifier	td		9871841	0					
ANR	9871893	Identifier	td_photometric		9871841	1					
ANR	9871894	Identifier	PHOTOMETRIC_LOGLUV		9871841	1					
ANR	9871895	IfStatement	if ( td -> td_planarconfig != PLANARCONFIG_CONTIG )		9871841	6					
ANR	9871896	Condition	td -> td_planarconfig != PLANARCONFIG_CONTIG	1392:5:34939:34980	9871841	0	True				
ANR	9871897	EqualityExpression	td -> td_planarconfig != PLANARCONFIG_CONTIG		9871841	0		!=			
ANR	9871898	PtrMemberAccess	td -> td_planarconfig		9871841	0					
ANR	9871899	Identifier	td		9871841	0					
ANR	9871900	Identifier	td_planarconfig		9871841	1					
ANR	9871901	Identifier	PLANARCONFIG_CONTIG		9871841	1					
ANR	9871902	CompoundStatement		10:49:306:306	9871841	1					
ANR	9871903	ExpressionStatement	"TIFFErrorExt ( tif -> tif_clientdata , module , ""SGILog compression cannot handle non-contiguous data"" )"	1393:2:34987:35090	9871841	0	True				
ANR	9871904	CallExpression	"TIFFErrorExt ( tif -> tif_clientdata , module , ""SGILog compression cannot handle non-contiguous data"" )"		9871841	0					
ANR	9871905	Callee	TIFFErrorExt		9871841	0					
ANR	9871906	Identifier	TIFFErrorExt		9871841	0					
ANR	9871907	ArgumentList	tif -> tif_clientdata		9871841	1					
ANR	9871908	Argument	tif -> tif_clientdata		9871841	0					
ANR	9871909	PtrMemberAccess	tif -> tif_clientdata		9871841	0					
ANR	9871910	Identifier	tif		9871841	0					
ANR	9871911	Identifier	tif_clientdata		9871841	1					
ANR	9871912	Argument	module		9871841	1					
ANR	9871913	Identifier	module		9871841	0					
ANR	9871914	Argument	"""SGILog compression cannot handle non-contiguous data"""		9871841	2					
ANR	9871915	PrimaryExpression	"""SGILog compression cannot handle non-contiguous data"""		9871841	0					
ANR	9871916	ReturnStatement	return ( 0 ) ;	1395:2:35094:35104	9871841	1	True				
ANR	9871917	PrimaryExpression	0		9871841	0					
ANR	9871918	IfStatement	if ( sp -> user_datafmt == SGILOGDATAFMT_UNKNOWN )		9871841	7					
ANR	9871919	Condition	sp -> user_datafmt == SGILOGDATAFMT_UNKNOWN	1397:5:35114:35154	9871841	0	True				
ANR	9871920	EqualityExpression	sp -> user_datafmt == SGILOGDATAFMT_UNKNOWN		9871841	0		==			
ANR	9871921	PtrMemberAccess	sp -> user_datafmt		9871841	0					
ANR	9871922	Identifier	sp		9871841	0					
ANR	9871923	Identifier	user_datafmt		9871841	1					
ANR	9871924	Identifier	SGILOGDATAFMT_UNKNOWN		9871841	1					
ANR	9871925	ExpressionStatement	sp -> user_datafmt = LogLuvGuessDataFmt ( td )	1398:2:35159:35200	9871841	1	True				
ANR	9871926	AssignmentExpression	sp -> user_datafmt = LogLuvGuessDataFmt ( td )		9871841	0		=			
ANR	9871927	PtrMemberAccess	sp -> user_datafmt		9871841	0					
ANR	9871928	Identifier	sp		9871841	0					
ANR	9871929	Identifier	user_datafmt		9871841	1					
ANR	9871930	CallExpression	LogLuvGuessDataFmt ( td )		9871841	1					
ANR	9871931	Callee	LogLuvGuessDataFmt		9871841	0					
ANR	9871932	Identifier	LogLuvGuessDataFmt		9871841	0					
ANR	9871933	ArgumentList	td		9871841	1					
ANR	9871934	Argument	td		9871841	0					
ANR	9871935	Identifier	td		9871841	0					
ANR	9871936	SwitchStatement	switch ( sp -> user_datafmt )		9871841	8					
ANR	9871937	Condition	sp -> user_datafmt	1399:9:35211:35226	9871841	0	True				
ANR	9871938	PtrMemberAccess	sp -> user_datafmt		9871841	0					
ANR	9871939	Identifier	sp		9871841	0					
ANR	9871940	Identifier	user_datafmt		9871841	1					
ANR	9871941	CompoundStatement		17:27:552:552	9871841	1					
ANR	9871942	Label	case SGILOGDATAFMT_FLOAT :	1400:1:35232:35256	9871841	0	True				
ANR	9871943	Identifier	SGILOGDATAFMT_FLOAT		9871841	0					
ANR	9871944	ExpressionStatement	sp -> pixel_size = 3 * sizeof ( float )	1401:2:35260:35293	9871841	1	True				
ANR	9871945	AssignmentExpression	sp -> pixel_size = 3 * sizeof ( float )		9871841	0		=			
ANR	9871946	PtrMemberAccess	sp -> pixel_size		9871841	0					
ANR	9871947	Identifier	sp		9871841	0					
ANR	9871948	Identifier	pixel_size		9871841	1					
ANR	9871949	MultiplicativeExpression	3 * sizeof ( float )		9871841	1		*			
ANR	9871950	PrimaryExpression	3		9871841	0					
ANR	9871951	SizeofExpression	sizeof ( float )		9871841	1					
ANR	9871952	Sizeof	sizeof		9871841	0					
ANR	9871953	SizeofOperand	float		9871841	1					
ANR	9871954	BreakStatement	break ;	1402:2:35297:35302	9871841	2	True				
ANR	9871955	Label	case SGILOGDATAFMT_16BIT :	1403:1:35305:35329	9871841	3	True				
ANR	9871956	Identifier	SGILOGDATAFMT_16BIT		9871841	0					
ANR	9871957	ExpressionStatement	sp -> pixel_size = 3 * sizeof ( int16 )	1404:2:35333:35366	9871841	4	True				
ANR	9871958	AssignmentExpression	sp -> pixel_size = 3 * sizeof ( int16 )		9871841	0		=			
ANR	9871959	PtrMemberAccess	sp -> pixel_size		9871841	0					
ANR	9871960	Identifier	sp		9871841	0					
ANR	9871961	Identifier	pixel_size		9871841	1					
ANR	9871962	MultiplicativeExpression	3 * sizeof ( int16 )		9871841	1		*			
ANR	9871963	PrimaryExpression	3		9871841	0					
ANR	9871964	SizeofExpression	sizeof ( int16 )		9871841	1					
ANR	9871965	Sizeof	sizeof		9871841	0					
ANR	9871966	SizeofOperand	int16		9871841	1					
ANR	9871967	BreakStatement	break ;	1405:2:35370:35375	9871841	5	True				
ANR	9871968	Label	case SGILOGDATAFMT_RAW :	1406:1:35378:35400	9871841	6	True				
ANR	9871969	Identifier	SGILOGDATAFMT_RAW		9871841	0					
ANR	9871970	ExpressionStatement	sp -> pixel_size = sizeof ( uint32 )	1407:2:35404:35436	9871841	7	True				
ANR	9871971	AssignmentExpression	sp -> pixel_size = sizeof ( uint32 )		9871841	0		=			
ANR	9871972	PtrMemberAccess	sp -> pixel_size		9871841	0					
ANR	9871973	Identifier	sp		9871841	0					
ANR	9871974	Identifier	pixel_size		9871841	1					
ANR	9871975	SizeofExpression	sizeof ( uint32 )		9871841	1					
ANR	9871976	Sizeof	sizeof		9871841	0					
ANR	9871977	SizeofOperand	uint32		9871841	1					
ANR	9871978	BreakStatement	break ;	1408:2:35440:35445	9871841	8	True				
ANR	9871979	Label	case SGILOGDATAFMT_8BIT :	1409:1:35448:35471	9871841	9	True				
ANR	9871980	Identifier	SGILOGDATAFMT_8BIT		9871841	0					
ANR	9871981	ExpressionStatement	sp -> pixel_size = 3 * sizeof ( uint8 )	1410:2:35475:35508	9871841	10	True				
ANR	9871982	AssignmentExpression	sp -> pixel_size = 3 * sizeof ( uint8 )		9871841	0		=			
ANR	9871983	PtrMemberAccess	sp -> pixel_size		9871841	0					
ANR	9871984	Identifier	sp		9871841	0					
ANR	9871985	Identifier	pixel_size		9871841	1					
ANR	9871986	MultiplicativeExpression	3 * sizeof ( uint8 )		9871841	1		*			
ANR	9871987	PrimaryExpression	3		9871841	0					
ANR	9871988	SizeofExpression	sizeof ( uint8 )		9871841	1					
ANR	9871989	Sizeof	sizeof		9871841	0					
ANR	9871990	SizeofOperand	uint8		9871841	1					
ANR	9871991	BreakStatement	break ;	1411:2:35512:35517	9871841	11	True				
ANR	9871992	Label	default :	1412:1:35520:35527	9871841	12	True				
ANR	9871993	Identifier	default		9871841	0					
ANR	9871994	ExpressionStatement	"TIFFErrorExt ( tif -> tif_clientdata , module , ""No support for converting user data format to LogLuv"" )"	1413:2:35531:35634	9871841	13	True				
ANR	9871995	CallExpression	"TIFFErrorExt ( tif -> tif_clientdata , module , ""No support for converting user data format to LogLuv"" )"		9871841	0					
ANR	9871996	Callee	TIFFErrorExt		9871841	0					
ANR	9871997	Identifier	TIFFErrorExt		9871841	0					
ANR	9871998	ArgumentList	tif -> tif_clientdata		9871841	1					
ANR	9871999	Argument	tif -> tif_clientdata		9871841	0					
ANR	9872000	PtrMemberAccess	tif -> tif_clientdata		9871841	0					
ANR	9872001	Identifier	tif		9871841	0					
ANR	9872002	Identifier	tif_clientdata		9871841	1					
ANR	9872003	Argument	module		9871841	1					
ANR	9872004	Identifier	module		9871841	0					
ANR	9872005	Argument	"""No support for converting user data format to LogLuv"""		9871841	2					
ANR	9872006	PrimaryExpression	"""No support for converting user data format to LogLuv"""		9871841	0					
ANR	9872007	ReturnStatement	return ( 0 ) ;	1415:2:35638:35648	9871841	14	True				
ANR	9872008	PrimaryExpression	0		9871841	0					
ANR	9872009	IfStatement	if ( isTiled ( tif ) )		9871841	9					
ANR	9872010	Condition	isTiled ( tif )	1417:12:35665:35676	9871841	0	True				
ANR	9872011	CallExpression	isTiled ( tif )		9871841	0					
ANR	9872012	Callee	isTiled		9871841	0					
ANR	9872013	Identifier	isTiled		9871841	0					
ANR	9872014	ArgumentList	tif		9871841	1					
ANR	9872015	Argument	tif		9871841	0					
ANR	9872016	Identifier	tif		9871841	0					
ANR	9872017	ExpressionStatement	"sp -> tbuflen = multiply_ms ( td -> td_tilewidth , td -> td_tilelength )"	1418:12:35692:35754	9871841	1	True				
ANR	9872018	AssignmentExpression	"sp -> tbuflen = multiply_ms ( td -> td_tilewidth , td -> td_tilelength )"		9871841	0		=			
ANR	9872019	PtrMemberAccess	sp -> tbuflen		9871841	0					
ANR	9872020	Identifier	sp		9871841	0					
ANR	9872021	Identifier	tbuflen		9871841	1					
ANR	9872022	CallExpression	"multiply_ms ( td -> td_tilewidth , td -> td_tilelength )"		9871841	1					
ANR	9872023	Callee	multiply_ms		9871841	0					
ANR	9872024	Identifier	multiply_ms		9871841	0					
ANR	9872025	ArgumentList	td -> td_tilewidth		9871841	1					
ANR	9872026	Argument	td -> td_tilewidth		9871841	0					
ANR	9872027	PtrMemberAccess	td -> td_tilewidth		9871841	0					
ANR	9872028	Identifier	td		9871841	0					
ANR	9872029	Identifier	td_tilewidth		9871841	1					
ANR	9872030	Argument	td -> td_tilelength		9871841	1					
ANR	9872031	PtrMemberAccess	td -> td_tilelength		9871841	0					
ANR	9872032	Identifier	td		9871841	0					
ANR	9872033	Identifier	td_tilelength		9871841	1					
ANR	9872034	ElseStatement	else		9871841	0					
ANR	9872035	IfStatement	if ( td -> td_rowsperstrip < td -> td_imagelength )		9871841	0					
ANR	9872036	Condition	td -> td_rowsperstrip < td -> td_imagelength	1419:17:35773:35812	9871841	0	True				
ANR	9872037	RelationalExpression	td -> td_rowsperstrip < td -> td_imagelength		9871841	0		<			
ANR	9872038	PtrMemberAccess	td -> td_rowsperstrip		9871841	0					
ANR	9872039	Identifier	td		9871841	0					
ANR	9872040	Identifier	td_rowsperstrip		9871841	1					
ANR	9872041	PtrMemberAccess	td -> td_imagelength		9871841	1					
ANR	9872042	Identifier	td		9871841	0					
ANR	9872043	Identifier	td_imagelength		9871841	1					
ANR	9872044	ExpressionStatement	"sp -> tbuflen = multiply_ms ( td -> td_imagewidth , td -> td_rowsperstrip )"	1420:12:35828:35893	9871841	1	True				
ANR	9872045	AssignmentExpression	"sp -> tbuflen = multiply_ms ( td -> td_imagewidth , td -> td_rowsperstrip )"		9871841	0		=			
ANR	9872046	PtrMemberAccess	sp -> tbuflen		9871841	0					
ANR	9872047	Identifier	sp		9871841	0					
ANR	9872048	Identifier	tbuflen		9871841	1					
ANR	9872049	CallExpression	"multiply_ms ( td -> td_imagewidth , td -> td_rowsperstrip )"		9871841	1					
ANR	9872050	Callee	multiply_ms		9871841	0					
ANR	9872051	Identifier	multiply_ms		9871841	0					
ANR	9872052	ArgumentList	td -> td_imagewidth		9871841	1					
ANR	9872053	Argument	td -> td_imagewidth		9871841	0					
ANR	9872054	PtrMemberAccess	td -> td_imagewidth		9871841	0					
ANR	9872055	Identifier	td		9871841	0					
ANR	9872056	Identifier	td_imagewidth		9871841	1					
ANR	9872057	Argument	td -> td_rowsperstrip		9871841	1					
ANR	9872058	PtrMemberAccess	td -> td_rowsperstrip		9871841	0					
ANR	9872059	Identifier	td		9871841	0					
ANR	9872060	Identifier	td_rowsperstrip		9871841	1					
ANR	9872061	ElseStatement	else		9871841	0					
ANR	9872062	ExpressionStatement	"sp -> tbuflen = multiply_ms ( td -> td_imagewidth , td -> td_imagelength )"	1422:12:35920:35984	9871841	0	True				
ANR	9872063	AssignmentExpression	"sp -> tbuflen = multiply_ms ( td -> td_imagewidth , td -> td_imagelength )"		9871841	0		=			
ANR	9872064	PtrMemberAccess	sp -> tbuflen		9871841	0					
ANR	9872065	Identifier	sp		9871841	0					
ANR	9872066	Identifier	tbuflen		9871841	1					
ANR	9872067	CallExpression	"multiply_ms ( td -> td_imagewidth , td -> td_imagelength )"		9871841	1					
ANR	9872068	Callee	multiply_ms		9871841	0					
ANR	9872069	Identifier	multiply_ms		9871841	0					
ANR	9872070	ArgumentList	td -> td_imagewidth		9871841	1					
ANR	9872071	Argument	td -> td_imagewidth		9871841	0					
ANR	9872072	PtrMemberAccess	td -> td_imagewidth		9871841	0					
ANR	9872073	Identifier	td		9871841	0					
ANR	9872074	Identifier	td_imagewidth		9871841	1					
ANR	9872075	Argument	td -> td_imagelength		9871841	1					
ANR	9872076	PtrMemberAccess	td -> td_imagelength		9871841	0					
ANR	9872077	Identifier	td		9871841	0					
ANR	9872078	Identifier	td_imagelength		9871841	1					
ANR	9872079	IfStatement	"if ( multiply_ms ( sp -> tbuflen , sizeof ( uint32 ) ) == 0 || ( sp -> tbuf = ( uint8 * ) _TIFFmalloc ( sp -> tbuflen * sizeof ( uint32 ) ) ) == NULL )"		9871841	10					
ANR	9872080	Condition	"multiply_ms ( sp -> tbuflen , sizeof ( uint32 ) ) == 0 || ( sp -> tbuf = ( uint8 * ) _TIFFmalloc ( sp -> tbuflen * sizeof ( uint32 ) ) ) == NULL"	1423:5:35991:36117	9871841	0	True				
ANR	9872081	OrExpression	"multiply_ms ( sp -> tbuflen , sizeof ( uint32 ) ) == 0 || ( sp -> tbuf = ( uint8 * ) _TIFFmalloc ( sp -> tbuflen * sizeof ( uint32 ) ) ) == NULL"		9871841	0		||			
ANR	9872082	EqualityExpression	"multiply_ms ( sp -> tbuflen , sizeof ( uint32 ) ) == 0"		9871841	0		==			
ANR	9872083	CallExpression	"multiply_ms ( sp -> tbuflen , sizeof ( uint32 ) )"		9871841	0					
ANR	9872084	Callee	multiply_ms		9871841	0					
ANR	9872085	Identifier	multiply_ms		9871841	0					
ANR	9872086	ArgumentList	sp -> tbuflen		9871841	1					
ANR	9872087	Argument	sp -> tbuflen		9871841	0					
ANR	9872088	PtrMemberAccess	sp -> tbuflen		9871841	0					
ANR	9872089	Identifier	sp		9871841	0					
ANR	9872090	Identifier	tbuflen		9871841	1					
ANR	9872091	Argument	sizeof ( uint32 )		9871841	1					
ANR	9872092	SizeofExpression	sizeof ( uint32 )		9871841	0					
ANR	9872093	Sizeof	sizeof		9871841	0					
ANR	9872094	SizeofOperand	uint32		9871841	1					
ANR	9872095	PrimaryExpression	0		9871841	1					
ANR	9872096	EqualityExpression	( sp -> tbuf = ( uint8 * ) _TIFFmalloc ( sp -> tbuflen * sizeof ( uint32 ) ) ) == NULL		9871841	1		==			
ANR	9872097	AssignmentExpression	sp -> tbuf = ( uint8 * ) _TIFFmalloc ( sp -> tbuflen * sizeof ( uint32 ) )		9871841	0		=			
ANR	9872098	PtrMemberAccess	sp -> tbuf		9871841	0					
ANR	9872099	Identifier	sp		9871841	0					
ANR	9872100	Identifier	tbuf		9871841	1					
ANR	9872101	CastExpression	( uint8 * ) _TIFFmalloc ( sp -> tbuflen * sizeof ( uint32 ) )		9871841	1					
ANR	9872102	CastTarget	uint8 *		9871841	0					
ANR	9872103	CallExpression	_TIFFmalloc ( sp -> tbuflen * sizeof ( uint32 ) )		9871841	1					
ANR	9872104	Callee	_TIFFmalloc		9871841	0					
ANR	9872105	Identifier	_TIFFmalloc		9871841	0					
ANR	9872106	ArgumentList	sp -> tbuflen * sizeof ( uint32 )		9871841	1					
ANR	9872107	Argument	sp -> tbuflen * sizeof ( uint32 )		9871841	0					
ANR	9872108	MultiplicativeExpression	sp -> tbuflen * sizeof ( uint32 )		9871841	0		*			
ANR	9872109	PtrMemberAccess	sp -> tbuflen		9871841	0					
ANR	9872110	Identifier	sp		9871841	0					
ANR	9872111	Identifier	tbuflen		9871841	1					
ANR	9872112	SizeofExpression	sizeof ( uint32 )		9871841	1					
ANR	9872113	Sizeof	sizeof		9871841	0					
ANR	9872114	SizeofOperand	uint32		9871841	1					
ANR	9872115	Identifier	NULL		9871841	1					
ANR	9872116	CompoundStatement		42:79:1443:1443	9871841	1					
ANR	9872117	ExpressionStatement	"TIFFErrorExt ( tif -> tif_clientdata , module , ""No space for SGILog translation buffer"" )"	1425:2:36124:36207	9871841	0	True				
ANR	9872118	CallExpression	"TIFFErrorExt ( tif -> tif_clientdata , module , ""No space for SGILog translation buffer"" )"		9871841	0					
ANR	9872119	Callee	TIFFErrorExt		9871841	0					
ANR	9872120	Identifier	TIFFErrorExt		9871841	0					
ANR	9872121	ArgumentList	tif -> tif_clientdata		9871841	1					
ANR	9872122	Argument	tif -> tif_clientdata		9871841	0					
ANR	9872123	PtrMemberAccess	tif -> tif_clientdata		9871841	0					
ANR	9872124	Identifier	tif		9871841	0					
ANR	9872125	Identifier	tif_clientdata		9871841	1					
ANR	9872126	Argument	module		9871841	1					
ANR	9872127	Identifier	module		9871841	0					
ANR	9872128	Argument	"""No space for SGILog translation buffer"""		9871841	2					
ANR	9872129	PrimaryExpression	"""No space for SGILog translation buffer"""		9871841	0					
ANR	9872130	ReturnStatement	return ( 0 ) ;	1426:2:36211:36221	9871841	1	True				
ANR	9872131	PrimaryExpression	0		9871841	0					
ANR	9872132	ReturnStatement	return ( 1 ) ;	1428:1:36227:36237	9871841	11	True				
ANR	9872133	PrimaryExpression	1		9871841	0					
ANR	9872134	ReturnType	static int		9871841	1					
ANR	9872135	Identifier	LogLuvInitState		9871841	2					
ANR	9872136	ParameterList	TIFF * tif		9871841	3					
ANR	9872137	Parameter	TIFF * tif	1382:16:34665:34673	9871841	0	True				
ANR	9872138	ParameterType	TIFF *		9871841	0					
ANR	9872139	Identifier	tif		9871841	1					
ANR	9872140	CFGEntryNode	ENTRY		9871841		True				
ANR	9872141	CFGExitNode	EXIT		9871841		True				
ANR	9872142	Symbol	td -> td_planarconfig		9871841						
ANR	9872143	Symbol	* sp		9871841						
ANR	9872144	Symbol	& tif -> tif_dir		9871841						
ANR	9872145	Symbol	td -> td_imagelength		9871841						
ANR	9872146	Symbol	sp -> user_datafmt		9871841						
ANR	9872147	Symbol	td -> td_tilelength		9871841						
ANR	9872148	Symbol	tif		9871841						
ANR	9872149	Symbol	isTiled		9871841						
ANR	9872150	Symbol	sp -> tbuflen		9871841						
ANR	9872151	Symbol	sp -> pixel_size		9871841						
ANR	9872152	Symbol	DecoderState		9871841						
ANR	9872153	Symbol	sp -> tbuf		9871841						
ANR	9872154	Symbol	SGILOGDATAFMT_UNKNOWN		9871841						
ANR	9872155	Symbol	sp		9871841						
ANR	9872156	Symbol	PHOTOMETRIC_LOGLUV		9871841						
ANR	9872157	Symbol	NULL		9871841						
ANR	9872158	Symbol	LogLuvGuessDataFmt		9871841						
ANR	9872159	Symbol	td -> td_imagewidth		9871841						
ANR	9872160	Symbol	module		9871841						
ANR	9872161	Symbol	PLANARCONFIG_CONTIG		9871841						
ANR	9872162	Symbol	td -> td_tilewidth		9871841						
ANR	9872163	Symbol	multiply_ms		9871841						
ANR	9872164	Symbol	tif -> tif_clientdata		9871841						
ANR	9872165	Symbol	td		9871841						
ANR	9872166	Symbol	* td		9871841						
ANR	9872167	Symbol	_TIFFmalloc		9871841						
ANR	9872168	Symbol	td -> td_photometric		9871841						
ANR	9872169	Symbol	* tif		9871841						
ANR	9872170	Symbol	td -> td_rowsperstrip		9871841						
ANR	9872171	Function	LogLuvFixupTags	1431:0:36242:36308							
ANR	9872172	FunctionDef	LogLuvFixupTags (TIFF * tif)		9872171	0					
ANR	9872173	CompoundStatement		1433:0:36280:36308	9872171	0					
ANR	9872174	ExpressionStatement	( void ) tif	1434:1:36283:36293	9872171	0	True				
ANR	9872175	CastExpression	( void ) tif		9872171	0					
ANR	9872176	CastTarget	void		9872171	0					
ANR	9872177	Identifier	tif		9872171	1					
ANR	9872178	ReturnStatement	return ( 1 ) ;	1435:1:36296:36306	9872171	1	True				
ANR	9872179	PrimaryExpression	1		9872171	0					
ANR	9872180	ReturnType	static int		9872171	1					
ANR	9872181	Identifier	LogLuvFixupTags		9872171	2					
ANR	9872182	ParameterList	TIFF * tif		9872171	3					
ANR	9872183	Parameter	TIFF * tif	1432:16:36269:36277	9872171	0	True				
ANR	9872184	ParameterType	TIFF *		9872171	0					
ANR	9872185	Identifier	tif		9872171	1					
ANR	9872186	CFGEntryNode	ENTRY		9872171		True				
ANR	9872187	CFGExitNode	EXIT		9872171		True				
ANR	9872188	Symbol	tif		9872171						
ANR	9872189	Function	LogLuvSetupDecode	1438:0:36311:37754							
ANR	9872190	FunctionDef	LogLuvSetupDecode (TIFF * tif)		9872189	0					
ANR	9872191	CompoundStatement		1440:0:36351:37754	9872189	0					
ANR	9872192	Statement	static	1441:1:36354:36359	9872189	0	True				
ANR	9872193	IdentifierDeclStatement	"const char module [ ] = ""LogLuvSetupDecode"" ;"	1441:8:36361:36402	9872189	1	True				
ANR	9872194	IdentifierDecl	"module [ ] = ""LogLuvSetupDecode"""		9872189	0					
ANR	9872195	IdentifierDeclType	const char [ ]		9872189	0					
ANR	9872196	Identifier	module		9872189	1					
ANR	9872197	AssignmentExpression	"module [ ] = ""LogLuvSetupDecode"""		9872189	2		=			
ANR	9872198	Identifier	module		9872189	0					
ANR	9872199	PrimaryExpression	"""LogLuvSetupDecode"""		9872189	1					
ANR	9872200	IdentifierDeclStatement	LogLuvState * sp = DecoderState ( tif ) ;	1442:1:36405:36440	9872189	2	True				
ANR	9872201	IdentifierDecl	* sp = DecoderState ( tif )		9872189	0					
ANR	9872202	IdentifierDeclType	LogLuvState *		9872189	0					
ANR	9872203	Identifier	sp		9872189	1					
ANR	9872204	AssignmentExpression	* sp = DecoderState ( tif )		9872189	2		=			
ANR	9872205	Identifier	sp		9872189	0					
ANR	9872206	CallExpression	DecoderState ( tif )		9872189	1					
ANR	9872207	Callee	DecoderState		9872189	0					
ANR	9872208	Identifier	DecoderState		9872189	0					
ANR	9872209	ArgumentList	tif		9872189	1					
ANR	9872210	Argument	tif		9872189	0					
ANR	9872211	Identifier	tif		9872189	0					
ANR	9872212	IdentifierDeclStatement	TIFFDirectory * td = & tif -> tif_dir ;	1443:1:36443:36476	9872189	3	True				
ANR	9872213	IdentifierDecl	* td = & tif -> tif_dir		9872189	0					
ANR	9872214	IdentifierDeclType	TIFFDirectory *		9872189	0					
ANR	9872215	Identifier	td		9872189	1					
ANR	9872216	AssignmentExpression	* td = & tif -> tif_dir		9872189	2		=			
ANR	9872217	Identifier	td		9872189	0					
ANR	9872218	UnaryOperationExpression	& tif -> tif_dir		9872189	1					
ANR	9872219	UnaryOperator	&		9872189	0					
ANR	9872220	PtrMemberAccess	tif -> tif_dir		9872189	1					
ANR	9872221	Identifier	tif		9872189	0					
ANR	9872222	Identifier	tif_dir		9872189	1					
ANR	9872223	ExpressionStatement	tif -> tif_postdecode = _TIFFNoPostDecode	1445:1:36480:36519	9872189	4	True				
ANR	9872224	AssignmentExpression	tif -> tif_postdecode = _TIFFNoPostDecode		9872189	0		=			
ANR	9872225	PtrMemberAccess	tif -> tif_postdecode		9872189	0					
ANR	9872226	Identifier	tif		9872189	0					
ANR	9872227	Identifier	tif_postdecode		9872189	1					
ANR	9872228	Identifier	_TIFFNoPostDecode		9872189	1					
ANR	9872229	SwitchStatement	switch ( td -> td_photometric )		9872189	5					
ANR	9872230	Condition	td -> td_photometric	1446:9:36530:36547	9872189	0	True				
ANR	9872231	PtrMemberAccess	td -> td_photometric		9872189	0					
ANR	9872232	Identifier	td		9872189	0					
ANR	9872233	Identifier	td_photometric		9872189	1					
ANR	9872234	CompoundStatement		7:29:198:198	9872189	1					
ANR	9872235	Label	case PHOTOMETRIC_LOGLUV :	1447:1:36553:36576	9872189	0	True				
ANR	9872236	Identifier	PHOTOMETRIC_LOGLUV		9872189	0					
ANR	9872237	IfStatement	if ( ! LogLuvInitState ( tif ) )		9872189	1					
ANR	9872238	Condition	! LogLuvInitState ( tif )	1448:6:36584:36604	9872189	0	True				
ANR	9872239	UnaryOperationExpression	! LogLuvInitState ( tif )		9872189	0					
ANR	9872240	UnaryOperator	!		9872189	0					
ANR	9872241	CallExpression	LogLuvInitState ( tif )		9872189	1					
ANR	9872242	Callee	LogLuvInitState		9872189	0					
ANR	9872243	Identifier	LogLuvInitState		9872189	0					
ANR	9872244	ArgumentList	tif		9872189	1					
ANR	9872245	Argument	tif		9872189	0					
ANR	9872246	Identifier	tif		9872189	0					
ANR	9872247	BreakStatement	break ;	1449:3:36610:36615	9872189	1	True				
ANR	9872248	IfStatement	if ( td -> td_compression == COMPRESSION_SGILOG24 )		9872189	2					
ANR	9872249	Condition	td -> td_compression == COMPRESSION_SGILOG24	1450:6:36623:36664	9872189	0	True				
ANR	9872250	EqualityExpression	td -> td_compression == COMPRESSION_SGILOG24		9872189	0		==			
ANR	9872251	PtrMemberAccess	td -> td_compression		9872189	0					
ANR	9872252	Identifier	td		9872189	0					
ANR	9872253	Identifier	td_compression		9872189	1					
ANR	9872254	Identifier	COMPRESSION_SGILOG24		9872189	1					
ANR	9872255	CompoundStatement		11:50:315:315	9872189	1					
ANR	9872256	ExpressionStatement	tif -> tif_decoderow = LogLuvDecode24	1451:3:36672:36707	9872189	0	True				
ANR	9872257	AssignmentExpression	tif -> tif_decoderow = LogLuvDecode24		9872189	0		=			
ANR	9872258	PtrMemberAccess	tif -> tif_decoderow		9872189	0					
ANR	9872259	Identifier	tif		9872189	0					
ANR	9872260	Identifier	tif_decoderow		9872189	1					
ANR	9872261	Identifier	LogLuvDecode24		9872189	1					
ANR	9872262	SwitchStatement	switch ( sp -> user_datafmt )		9872189	1					
ANR	9872263	Condition	sp -> user_datafmt	1452:11:36720:36735	9872189	0	True				
ANR	9872264	PtrMemberAccess	sp -> user_datafmt		9872189	0					
ANR	9872265	Identifier	sp		9872189	0					
ANR	9872266	Identifier	user_datafmt		9872189	1					
ANR	9872267	CompoundStatement		13:29:386:386	9872189	1					
ANR	9872268	Label	case SGILOGDATAFMT_FLOAT :	1453:3:36743:36767	9872189	0	True				
ANR	9872269	Identifier	SGILOGDATAFMT_FLOAT		9872189	0					
ANR	9872270	ExpressionStatement	sp -> tfunc = Luv24toXYZ	1454:4:36773:36795	9872189	1	True				
ANR	9872271	AssignmentExpression	sp -> tfunc = Luv24toXYZ		9872189	0		=			
ANR	9872272	PtrMemberAccess	sp -> tfunc		9872189	0					
ANR	9872273	Identifier	sp		9872189	0					
ANR	9872274	Identifier	tfunc		9872189	1					
ANR	9872275	Identifier	Luv24toXYZ		9872189	1					
ANR	9872276	BreakStatement	break ;	1455:4:36803:36808	9872189	2	True				
ANR	9872277	Label	case SGILOGDATAFMT_16BIT :	1456:3:36813:36837	9872189	3	True				
ANR	9872278	Identifier	SGILOGDATAFMT_16BIT		9872189	0					
ANR	9872279	ExpressionStatement	sp -> tfunc = Luv24toLuv48	1457:4:36843:36867	9872189	4	True				
ANR	9872280	AssignmentExpression	sp -> tfunc = Luv24toLuv48		9872189	0		=			
ANR	9872281	PtrMemberAccess	sp -> tfunc		9872189	0					
ANR	9872282	Identifier	sp		9872189	0					
ANR	9872283	Identifier	tfunc		9872189	1					
ANR	9872284	Identifier	Luv24toLuv48		9872189	1					
ANR	9872285	BreakStatement	break ;	1458:4:36875:36880	9872189	5	True				
ANR	9872286	Label	case SGILOGDATAFMT_8BIT :	1459:3:36885:36908	9872189	6	True				
ANR	9872287	Identifier	SGILOGDATAFMT_8BIT		9872189	0					
ANR	9872288	ExpressionStatement	sp -> tfunc = Luv24toRGB	1460:4:36914:36936	9872189	7	True				
ANR	9872289	AssignmentExpression	sp -> tfunc = Luv24toRGB		9872189	0		=			
ANR	9872290	PtrMemberAccess	sp -> tfunc		9872189	0					
ANR	9872291	Identifier	sp		9872189	0					
ANR	9872292	Identifier	tfunc		9872189	1					
ANR	9872293	Identifier	Luv24toRGB		9872189	1					
ANR	9872294	BreakStatement	break ;	1461:4:36942:36947	9872189	8	True				
ANR	9872295	ElseStatement	else		9872189	0					
ANR	9872296	CompoundStatement		24:9:611:611	9872189	0					
ANR	9872297	ExpressionStatement	tif -> tif_decoderow = LogLuvDecode32	1464:3:36968:37003	9872189	0	True				
ANR	9872298	AssignmentExpression	tif -> tif_decoderow = LogLuvDecode32		9872189	0		=			
ANR	9872299	PtrMemberAccess	tif -> tif_decoderow		9872189	0					
ANR	9872300	Identifier	tif		9872189	0					
ANR	9872301	Identifier	tif_decoderow		9872189	1					
ANR	9872302	Identifier	LogLuvDecode32		9872189	1					
ANR	9872303	SwitchStatement	switch ( sp -> user_datafmt )		9872189	1					
ANR	9872304	Condition	sp -> user_datafmt	1465:11:37016:37031	9872189	0	True				
ANR	9872305	PtrMemberAccess	sp -> user_datafmt		9872189	0					
ANR	9872306	Identifier	sp		9872189	0					
ANR	9872307	Identifier	user_datafmt		9872189	1					
ANR	9872308	CompoundStatement		26:29:682:682	9872189	1					
ANR	9872309	Label	case SGILOGDATAFMT_FLOAT :	1466:3:37039:37063	9872189	0	True				
ANR	9872310	Identifier	SGILOGDATAFMT_FLOAT		9872189	0					
ANR	9872311	ExpressionStatement	sp -> tfunc = Luv32toXYZ	1467:4:37069:37091	9872189	1	True				
ANR	9872312	AssignmentExpression	sp -> tfunc = Luv32toXYZ		9872189	0		=			
ANR	9872313	PtrMemberAccess	sp -> tfunc		9872189	0					
ANR	9872314	Identifier	sp		9872189	0					
ANR	9872315	Identifier	tfunc		9872189	1					
ANR	9872316	Identifier	Luv32toXYZ		9872189	1					
ANR	9872317	BreakStatement	break ;	1468:4:37097:37102	9872189	2	True				
ANR	9872318	Label	case SGILOGDATAFMT_16BIT :	1469:3:37107:37131	9872189	3	True				
ANR	9872319	Identifier	SGILOGDATAFMT_16BIT		9872189	0					
ANR	9872320	ExpressionStatement	sp -> tfunc = Luv32toLuv48	1470:4:37137:37161	9872189	4	True				
ANR	9872321	AssignmentExpression	sp -> tfunc = Luv32toLuv48		9872189	0		=			
ANR	9872322	PtrMemberAccess	sp -> tfunc		9872189	0					
ANR	9872323	Identifier	sp		9872189	0					
ANR	9872324	Identifier	tfunc		9872189	1					
ANR	9872325	Identifier	Luv32toLuv48		9872189	1					
ANR	9872326	BreakStatement	break ;	1471:4:37167:37172	9872189	5	True				
ANR	9872327	Label	case SGILOGDATAFMT_8BIT :	1472:3:37177:37200	9872189	6	True				
ANR	9872328	Identifier	SGILOGDATAFMT_8BIT		9872189	0					
ANR	9872329	ExpressionStatement	sp -> tfunc = Luv32toRGB	1473:4:37206:37228	9872189	7	True				
ANR	9872330	AssignmentExpression	sp -> tfunc = Luv32toRGB		9872189	0		=			
ANR	9872331	PtrMemberAccess	sp -> tfunc		9872189	0					
ANR	9872332	Identifier	sp		9872189	0					
ANR	9872333	Identifier	tfunc		9872189	1					
ANR	9872334	Identifier	Luv32toRGB		9872189	1					
ANR	9872335	BreakStatement	break ;	1474:4:37234:37239	9872189	8	True				
ANR	9872336	ReturnStatement	return ( 1 ) ;	1477:2:37252:37262	9872189	3	True				
ANR	9872337	PrimaryExpression	1		9872189	0					
ANR	9872338	Label	case PHOTOMETRIC_LOGL :	1478:1:37265:37286	9872189	4	True				
ANR	9872339	Identifier	PHOTOMETRIC_LOGL		9872189	0					
ANR	9872340	IfStatement	if ( ! LogL16InitState ( tif ) )		9872189	5					
ANR	9872341	Condition	! LogL16InitState ( tif )	1479:6:37294:37314	9872189	0	True				
ANR	9872342	UnaryOperationExpression	! LogL16InitState ( tif )		9872189	0					
ANR	9872343	UnaryOperator	!		9872189	0					
ANR	9872344	CallExpression	LogL16InitState ( tif )		9872189	1					
ANR	9872345	Callee	LogL16InitState		9872189	0					
ANR	9872346	Identifier	LogL16InitState		9872189	0					
ANR	9872347	ArgumentList	tif		9872189	1					
ANR	9872348	Argument	tif		9872189	0					
ANR	9872349	Identifier	tif		9872189	0					
ANR	9872350	BreakStatement	break ;	1480:3:37320:37325	9872189	1	True				
ANR	9872351	ExpressionStatement	tif -> tif_decoderow = LogL16Decode	1481:2:37329:37362	9872189	6	True				
ANR	9872352	AssignmentExpression	tif -> tif_decoderow = LogL16Decode		9872189	0		=			
ANR	9872353	PtrMemberAccess	tif -> tif_decoderow		9872189	0					
ANR	9872354	Identifier	tif		9872189	0					
ANR	9872355	Identifier	tif_decoderow		9872189	1					
ANR	9872356	Identifier	LogL16Decode		9872189	1					
ANR	9872357	SwitchStatement	switch ( sp -> user_datafmt )		9872189	7					
ANR	9872358	Condition	sp -> user_datafmt	1482:10:37374:37389	9872189	0	True				
ANR	9872359	PtrMemberAccess	sp -> user_datafmt		9872189	0					
ANR	9872360	Identifier	sp		9872189	0					
ANR	9872361	Identifier	user_datafmt		9872189	1					
ANR	9872362	CompoundStatement		43:28:1040:1040	9872189	1					
ANR	9872363	Label	case SGILOGDATAFMT_FLOAT :	1483:2:37396:37420	9872189	0	True				
ANR	9872364	Identifier	SGILOGDATAFMT_FLOAT		9872189	0					
ANR	9872365	ExpressionStatement	sp -> tfunc = L16toY	1484:3:37425:37443	9872189	1	True				
ANR	9872366	AssignmentExpression	sp -> tfunc = L16toY		9872189	0		=			
ANR	9872367	PtrMemberAccess	sp -> tfunc		9872189	0					
ANR	9872368	Identifier	sp		9872189	0					
ANR	9872369	Identifier	tfunc		9872189	1					
ANR	9872370	Identifier	L16toY		9872189	1					
ANR	9872371	BreakStatement	break ;	1485:3:37448:37453	9872189	2	True				
ANR	9872372	Label	case SGILOGDATAFMT_8BIT :	1486:2:37457:37480	9872189	3	True				
ANR	9872373	Identifier	SGILOGDATAFMT_8BIT		9872189	0					
ANR	9872374	ExpressionStatement	sp -> tfunc = L16toGry	1487:3:37485:37505	9872189	4	True				
ANR	9872375	AssignmentExpression	sp -> tfunc = L16toGry		9872189	0		=			
ANR	9872376	PtrMemberAccess	sp -> tfunc		9872189	0					
ANR	9872377	Identifier	sp		9872189	0					
ANR	9872378	Identifier	tfunc		9872189	1					
ANR	9872379	Identifier	L16toGry		9872189	1					
ANR	9872380	BreakStatement	break ;	1488:3:37510:37515	9872189	5	True				
ANR	9872381	ReturnStatement	return ( 1 ) ;	1490:2:37523:37533	9872189	8	True				
ANR	9872382	PrimaryExpression	1		9872189	0					
ANR	9872383	Label	default :	1491:1:37536:37543	9872189	9	True				
ANR	9872384	Identifier	default		9872189	0					
ANR	9872385	ExpressionStatement	"TIFFErrorExt ( tif -> tif_clientdata , module , ""Inappropriate photometric interpretation %d for SGILog compression; %s"" , td -> td_photometric , ""must be either LogLUV or LogL"" )"	1492:2:37547:37727	9872189	10	True				
ANR	9872386	CallExpression	"TIFFErrorExt ( tif -> tif_clientdata , module , ""Inappropriate photometric interpretation %d for SGILog compression; %s"" , td -> td_photometric , ""must be either LogLUV or LogL"" )"		9872189	0					
ANR	9872387	Callee	TIFFErrorExt		9872189	0					
ANR	9872388	Identifier	TIFFErrorExt		9872189	0					
ANR	9872389	ArgumentList	tif -> tif_clientdata		9872189	1					
ANR	9872390	Argument	tif -> tif_clientdata		9872189	0					
ANR	9872391	PtrMemberAccess	tif -> tif_clientdata		9872189	0					
ANR	9872392	Identifier	tif		9872189	0					
ANR	9872393	Identifier	tif_clientdata		9872189	1					
ANR	9872394	Argument	module		9872189	1					
ANR	9872395	Identifier	module		9872189	0					
ANR	9872396	Argument	"""Inappropriate photometric interpretation %d for SGILog compression; %s"""		9872189	2					
ANR	9872397	PrimaryExpression	"""Inappropriate photometric interpretation %d for SGILog compression; %s"""		9872189	0					
ANR	9872398	Argument	td -> td_photometric		9872189	3					
ANR	9872399	PtrMemberAccess	td -> td_photometric		9872189	0					
ANR	9872400	Identifier	td		9872189	0					
ANR	9872401	Identifier	td_photometric		9872189	1					
ANR	9872402	Argument	"""must be either LogLUV or LogL"""		9872189	4					
ANR	9872403	PrimaryExpression	"""must be either LogLUV or LogL"""		9872189	0					
ANR	9872404	BreakStatement	break ;	1495:2:37731:37736	9872189	11	True				
ANR	9872405	ReturnStatement	return ( 0 ) ;	1497:1:37742:37752	9872189	6	True				
ANR	9872406	PrimaryExpression	0		9872189	0					
ANR	9872407	ReturnType	static int		9872189	1					
ANR	9872408	Identifier	LogLuvSetupDecode		9872189	2					
ANR	9872409	ParameterList	TIFF * tif		9872189	3					
ANR	9872410	Parameter	TIFF * tif	1439:18:36340:36348	9872189	0	True				
ANR	9872411	ParameterType	TIFF *		9872189	0					
ANR	9872412	Identifier	tif		9872189	1					
ANR	9872413	CFGEntryNode	ENTRY		9872189		True				
ANR	9872414	CFGExitNode	EXIT		9872189		True				
ANR	9872415	Symbol	* sp		9872189						
ANR	9872416	Symbol	COMPRESSION_SGILOG24		9872189						
ANR	9872417	Symbol	& tif -> tif_dir		9872189						
ANR	9872418	Symbol	L16toGry		9872189						
ANR	9872419	Symbol	tif -> tif_postdecode		9872189						
ANR	9872420	Symbol	td -> td_compression		9872189						
ANR	9872421	Symbol	sp -> user_datafmt		9872189						
ANR	9872422	Symbol	tif		9872189						
ANR	9872423	Symbol	L16toY		9872189						
ANR	9872424	Symbol	DecoderState		9872189						
ANR	9872425	Symbol	Luv32toLuv48		9872189						
ANR	9872426	Symbol	LogLuvInitState		9872189						
ANR	9872427	Symbol	_TIFFNoPostDecode		9872189						
ANR	9872428	Symbol	tif -> tif_decoderow		9872189						
ANR	9872429	Symbol	LogLuvDecode24		9872189						
ANR	9872430	Symbol	sp -> tfunc		9872189						
ANR	9872431	Symbol	sp		9872189						
ANR	9872432	Symbol	Luv24toLuv48		9872189						
ANR	9872433	Symbol	Luv32toRGB		9872189						
ANR	9872434	Symbol	Luv24toXYZ		9872189						
ANR	9872435	Symbol	module		9872189						
ANR	9872436	Symbol	LogL16InitState		9872189						
ANR	9872437	Symbol	Luv24toRGB		9872189						
ANR	9872438	Symbol	LogL16Decode		9872189						
ANR	9872439	Symbol	tif -> tif_clientdata		9872189						
ANR	9872440	Symbol	td		9872189						
ANR	9872441	Symbol	LogLuvDecode32		9872189						
ANR	9872442	Symbol	* td		9872189						
ANR	9872443	Symbol	Luv32toXYZ		9872189						
ANR	9872444	Symbol	* tif		9872189						
ANR	9872445	Symbol	td -> td_photometric		9872189						
ANR	9872446	Function	LogLuvSetupEncode	1500:0:37757:39409							
ANR	9872447	FunctionDef	LogLuvSetupEncode (TIFF * tif)		9872446	0					
ANR	9872448	CompoundStatement		1502:0:37797:39409	9872446	0					
ANR	9872449	Statement	static	1503:1:37800:37805	9872446	0	True				
ANR	9872450	IdentifierDeclStatement	"const char module [ ] = ""LogLuvSetupEncode"" ;"	1503:8:37807:37848	9872446	1	True				
ANR	9872451	IdentifierDecl	"module [ ] = ""LogLuvSetupEncode"""		9872446	0					
ANR	9872452	IdentifierDeclType	const char [ ]		9872446	0					
ANR	9872453	Identifier	module		9872446	1					
ANR	9872454	AssignmentExpression	"module [ ] = ""LogLuvSetupEncode"""		9872446	2		=			
ANR	9872455	Identifier	module		9872446	0					
ANR	9872456	PrimaryExpression	"""LogLuvSetupEncode"""		9872446	1					
ANR	9872457	IdentifierDeclStatement	LogLuvState * sp = EncoderState ( tif ) ;	1504:1:37851:37886	9872446	2	True				
ANR	9872458	IdentifierDecl	* sp = EncoderState ( tif )		9872446	0					
ANR	9872459	IdentifierDeclType	LogLuvState *		9872446	0					
ANR	9872460	Identifier	sp		9872446	1					
ANR	9872461	AssignmentExpression	* sp = EncoderState ( tif )		9872446	2		=			
ANR	9872462	Identifier	sp		9872446	0					
ANR	9872463	CallExpression	EncoderState ( tif )		9872446	1					
ANR	9872464	Callee	EncoderState		9872446	0					
ANR	9872465	Identifier	EncoderState		9872446	0					
ANR	9872466	ArgumentList	tif		9872446	1					
ANR	9872467	Argument	tif		9872446	0					
ANR	9872468	Identifier	tif		9872446	0					
ANR	9872469	IdentifierDeclStatement	TIFFDirectory * td = & tif -> tif_dir ;	1505:1:37889:37922	9872446	3	True				
ANR	9872470	IdentifierDecl	* td = & tif -> tif_dir		9872446	0					
ANR	9872471	IdentifierDeclType	TIFFDirectory *		9872446	0					
ANR	9872472	Identifier	td		9872446	1					
ANR	9872473	AssignmentExpression	* td = & tif -> tif_dir		9872446	2		=			
ANR	9872474	Identifier	td		9872446	0					
ANR	9872475	UnaryOperationExpression	& tif -> tif_dir		9872446	1					
ANR	9872476	UnaryOperator	&		9872446	0					
ANR	9872477	PtrMemberAccess	tif -> tif_dir		9872446	1					
ANR	9872478	Identifier	tif		9872446	0					
ANR	9872479	Identifier	tif_dir		9872446	1					
ANR	9872480	SwitchStatement	switch ( td -> td_photometric )		9872446	4					
ANR	9872481	Condition	td -> td_photometric	1507:9:37934:37951	9872446	0	True				
ANR	9872482	PtrMemberAccess	td -> td_photometric		9872446	0					
ANR	9872483	Identifier	td		9872446	0					
ANR	9872484	Identifier	td_photometric		9872446	1					
ANR	9872485	CompoundStatement		6:29:156:156	9872446	1					
ANR	9872486	Label	case PHOTOMETRIC_LOGLUV :	1508:1:37957:37980	9872446	0	True				
ANR	9872487	Identifier	PHOTOMETRIC_LOGLUV		9872446	0					
ANR	9872488	IfStatement	if ( ! LogLuvInitState ( tif ) )		9872446	1					
ANR	9872489	Condition	! LogLuvInitState ( tif )	1509:6:37988:38008	9872446	0	True				
ANR	9872490	UnaryOperationExpression	! LogLuvInitState ( tif )		9872446	0					
ANR	9872491	UnaryOperator	!		9872446	0					
ANR	9872492	CallExpression	LogLuvInitState ( tif )		9872446	1					
ANR	9872493	Callee	LogLuvInitState		9872446	0					
ANR	9872494	Identifier	LogLuvInitState		9872446	0					
ANR	9872495	ArgumentList	tif		9872446	1					
ANR	9872496	Argument	tif		9872446	0					
ANR	9872497	Identifier	tif		9872446	0					
ANR	9872498	BreakStatement	break ;	1510:3:38014:38019	9872446	1	True				
ANR	9872499	IfStatement	if ( td -> td_compression == COMPRESSION_SGILOG24 )		9872446	2					
ANR	9872500	Condition	td -> td_compression == COMPRESSION_SGILOG24	1511:6:38027:38068	9872446	0	True				
ANR	9872501	EqualityExpression	td -> td_compression == COMPRESSION_SGILOG24		9872446	0		==			
ANR	9872502	PtrMemberAccess	td -> td_compression		9872446	0					
ANR	9872503	Identifier	td		9872446	0					
ANR	9872504	Identifier	td_compression		9872446	1					
ANR	9872505	Identifier	COMPRESSION_SGILOG24		9872446	1					
ANR	9872506	CompoundStatement		10:50:273:273	9872446	1					
ANR	9872507	ExpressionStatement	tif -> tif_encoderow = LogLuvEncode24	1512:3:38076:38111	9872446	0	True				
ANR	9872508	AssignmentExpression	tif -> tif_encoderow = LogLuvEncode24		9872446	0		=			
ANR	9872509	PtrMemberAccess	tif -> tif_encoderow		9872446	0					
ANR	9872510	Identifier	tif		9872446	0					
ANR	9872511	Identifier	tif_encoderow		9872446	1					
ANR	9872512	Identifier	LogLuvEncode24		9872446	1					
ANR	9872513	SwitchStatement	switch ( sp -> user_datafmt )		9872446	1					
ANR	9872514	Condition	sp -> user_datafmt	1513:11:38124:38139	9872446	0	True				
ANR	9872515	PtrMemberAccess	sp -> user_datafmt		9872446	0					
ANR	9872516	Identifier	sp		9872446	0					
ANR	9872517	Identifier	user_datafmt		9872446	1					
ANR	9872518	CompoundStatement		12:29:344:344	9872446	1					
ANR	9872519	Label	case SGILOGDATAFMT_FLOAT :	1514:3:38147:38171	9872446	0	True				
ANR	9872520	Identifier	SGILOGDATAFMT_FLOAT		9872446	0					
ANR	9872521	ExpressionStatement	sp -> tfunc = Luv24fromXYZ	1515:4:38177:38201	9872446	1	True				
ANR	9872522	AssignmentExpression	sp -> tfunc = Luv24fromXYZ		9872446	0		=			
ANR	9872523	PtrMemberAccess	sp -> tfunc		9872446	0					
ANR	9872524	Identifier	sp		9872446	0					
ANR	9872525	Identifier	tfunc		9872446	1					
ANR	9872526	Identifier	Luv24fromXYZ		9872446	1					
ANR	9872527	BreakStatement	break ;	1516:4:38207:38212	9872446	2	True				
ANR	9872528	Label	case SGILOGDATAFMT_16BIT :	1517:3:38217:38241	9872446	3	True				
ANR	9872529	Identifier	SGILOGDATAFMT_16BIT		9872446	0					
ANR	9872530	ExpressionStatement	sp -> tfunc = Luv24fromLuv48	1518:4:38247:38273	9872446	4	True				
ANR	9872531	AssignmentExpression	sp -> tfunc = Luv24fromLuv48		9872446	0		=			
ANR	9872532	PtrMemberAccess	sp -> tfunc		9872446	0					
ANR	9872533	Identifier	sp		9872446	0					
ANR	9872534	Identifier	tfunc		9872446	1					
ANR	9872535	Identifier	Luv24fromLuv48		9872446	1					
ANR	9872536	BreakStatement	break ;	1519:4:38281:38286	9872446	5	True				
ANR	9872537	Label	case SGILOGDATAFMT_RAW :	1520:3:38291:38313	9872446	6	True				
ANR	9872538	Identifier	SGILOGDATAFMT_RAW		9872446	0					
ANR	9872539	BreakStatement	break ;	1521:4:38319:38324	9872446	7	True				
ANR	9872540	Label	default :	1522:3:38329:38336	9872446	8	True				
ANR	9872541	Identifier	default		9872446	0					
ANR	9872542	GotoStatement	goto notsupported ;	1523:4:38342:38359	9872446	9	True				
ANR	9872543	Identifier	notsupported		9872446	0					
ANR	9872544	ElseStatement	else		9872446	0					
ANR	9872545	CompoundStatement		24:9:577:577	9872446	0					
ANR	9872546	ExpressionStatement	tif -> tif_encoderow = LogLuvEncode32	1526:3:38380:38415	9872446	0	True				
ANR	9872547	AssignmentExpression	tif -> tif_encoderow = LogLuvEncode32		9872446	0		=			
ANR	9872548	PtrMemberAccess	tif -> tif_encoderow		9872446	0					
ANR	9872549	Identifier	tif		9872446	0					
ANR	9872550	Identifier	tif_encoderow		9872446	1					
ANR	9872551	Identifier	LogLuvEncode32		9872446	1					
ANR	9872552	SwitchStatement	switch ( sp -> user_datafmt )		9872446	1					
ANR	9872553	Condition	sp -> user_datafmt	1527:11:38430:38445	9872446	0	True				
ANR	9872554	PtrMemberAccess	sp -> user_datafmt		9872446	0					
ANR	9872555	Identifier	sp		9872446	0					
ANR	9872556	Identifier	user_datafmt		9872446	1					
ANR	9872557	CompoundStatement		26:29:650:650	9872446	1					
ANR	9872558	Label	case SGILOGDATAFMT_FLOAT :	1528:3:38453:38477	9872446	0	True				
ANR	9872559	Identifier	SGILOGDATAFMT_FLOAT		9872446	0					
ANR	9872560	ExpressionStatement	sp -> tfunc = Luv32fromXYZ	1529:4:38483:38507	9872446	1	True				
ANR	9872561	AssignmentExpression	sp -> tfunc = Luv32fromXYZ		9872446	0		=			
ANR	9872562	PtrMemberAccess	sp -> tfunc		9872446	0					
ANR	9872563	Identifier	sp		9872446	0					
ANR	9872564	Identifier	tfunc		9872446	1					
ANR	9872565	Identifier	Luv32fromXYZ		9872446	1					
ANR	9872566	BreakStatement	break ;	1530:4:38515:38520	9872446	2	True				
ANR	9872567	Label	case SGILOGDATAFMT_16BIT :	1531:3:38525:38549	9872446	3	True				
ANR	9872568	Identifier	SGILOGDATAFMT_16BIT		9872446	0					
ANR	9872569	ExpressionStatement	sp -> tfunc = Luv32fromLuv48	1532:4:38555:38581	9872446	4	True				
ANR	9872570	AssignmentExpression	sp -> tfunc = Luv32fromLuv48		9872446	0		=			
ANR	9872571	PtrMemberAccess	sp -> tfunc		9872446	0					
ANR	9872572	Identifier	sp		9872446	0					
ANR	9872573	Identifier	tfunc		9872446	1					
ANR	9872574	Identifier	Luv32fromLuv48		9872446	1					
ANR	9872575	BreakStatement	break ;	1533:4:38589:38594	9872446	5	True				
ANR	9872576	Label	case SGILOGDATAFMT_RAW :	1534:3:38599:38621	9872446	6	True				
ANR	9872577	Identifier	SGILOGDATAFMT_RAW		9872446	0					
ANR	9872578	BreakStatement	break ;	1535:4:38627:38632	9872446	7	True				
ANR	9872579	Label	default :	1536:3:38637:38644	9872446	8	True				
ANR	9872580	Identifier	default		9872446	0					
ANR	9872581	GotoStatement	goto notsupported ;	1537:4:38650:38667	9872446	9	True				
ANR	9872582	Identifier	notsupported		9872446	0					
ANR	9872583	BreakStatement	break ;	1540:2:38680:38685	9872446	3	True				
ANR	9872584	Label	case PHOTOMETRIC_LOGL :	1541:1:38688:38709	9872446	4	True				
ANR	9872585	Identifier	PHOTOMETRIC_LOGL		9872446	0					
ANR	9872586	IfStatement	if ( ! LogL16InitState ( tif ) )		9872446	5					
ANR	9872587	Condition	! LogL16InitState ( tif )	1542:6:38717:38737	9872446	0	True				
ANR	9872588	UnaryOperationExpression	! LogL16InitState ( tif )		9872446	0					
ANR	9872589	UnaryOperator	!		9872446	0					
ANR	9872590	CallExpression	LogL16InitState ( tif )		9872446	1					
ANR	9872591	Callee	LogL16InitState		9872446	0					
ANR	9872592	Identifier	LogL16InitState		9872446	0					
ANR	9872593	ArgumentList	tif		9872446	1					
ANR	9872594	Argument	tif		9872446	0					
ANR	9872595	Identifier	tif		9872446	0					
ANR	9872596	BreakStatement	break ;	1543:3:38743:38748	9872446	1	True				
ANR	9872597	ExpressionStatement	tif -> tif_encoderow = LogL16Encode	1544:2:38752:38785	9872446	6	True				
ANR	9872598	AssignmentExpression	tif -> tif_encoderow = LogL16Encode		9872446	0		=			
ANR	9872599	PtrMemberAccess	tif -> tif_encoderow		9872446	0					
ANR	9872600	Identifier	tif		9872446	0					
ANR	9872601	Identifier	tif_encoderow		9872446	1					
ANR	9872602	Identifier	LogL16Encode		9872446	1					
ANR	9872603	SwitchStatement	switch ( sp -> user_datafmt )		9872446	7					
ANR	9872604	Condition	sp -> user_datafmt	1545:10:38799:38814	9872446	0	True				
ANR	9872605	PtrMemberAccess	sp -> user_datafmt		9872446	0					
ANR	9872606	Identifier	sp		9872446	0					
ANR	9872607	Identifier	user_datafmt		9872446	1					
ANR	9872608	CompoundStatement		44:28:1019:1019	9872446	1					
ANR	9872609	Label	case SGILOGDATAFMT_FLOAT :	1546:2:38821:38845	9872446	0	True				
ANR	9872610	Identifier	SGILOGDATAFMT_FLOAT		9872446	0					
ANR	9872611	ExpressionStatement	sp -> tfunc = L16fromY	1547:3:38850:38870	9872446	1	True				
ANR	9872612	AssignmentExpression	sp -> tfunc = L16fromY		9872446	0		=			
ANR	9872613	PtrMemberAccess	sp -> tfunc		9872446	0					
ANR	9872614	Identifier	sp		9872446	0					
ANR	9872615	Identifier	tfunc		9872446	1					
ANR	9872616	Identifier	L16fromY		9872446	1					
ANR	9872617	BreakStatement	break ;	1548:3:38875:38880	9872446	2	True				
ANR	9872618	Label	case SGILOGDATAFMT_16BIT :	1549:2:38884:38908	9872446	3	True				
ANR	9872619	Identifier	SGILOGDATAFMT_16BIT		9872446	0					
ANR	9872620	BreakStatement	break ;	1550:3:38913:38918	9872446	4	True				
ANR	9872621	Label	default :	1551:2:38922:38929	9872446	5	True				
ANR	9872622	Identifier	default		9872446	0					
ANR	9872623	GotoStatement	goto notsupported ;	1552:3:38934:38951	9872446	6	True				
ANR	9872624	Identifier	notsupported		9872446	0					
ANR	9872625	BreakStatement	break ;	1554:2:38959:38964	9872446	8	True				
ANR	9872626	Label	default :	1555:1:38967:38974	9872446	9	True				
ANR	9872627	Identifier	default		9872446	0					
ANR	9872628	ExpressionStatement	"TIFFErrorExt ( tif -> tif_clientdata , module , ""Inappropriate photometric interpretation %d for SGILog compression; %s"" , td -> td_photometric , ""must be either LogLUV or LogL"" )"	1556:2:38978:39158	9872446	10	True				
ANR	9872629	CallExpression	"TIFFErrorExt ( tif -> tif_clientdata , module , ""Inappropriate photometric interpretation %d for SGILog compression; %s"" , td -> td_photometric , ""must be either LogLUV or LogL"" )"		9872446	0					
ANR	9872630	Callee	TIFFErrorExt		9872446	0					
ANR	9872631	Identifier	TIFFErrorExt		9872446	0					
ANR	9872632	ArgumentList	tif -> tif_clientdata		9872446	1					
ANR	9872633	Argument	tif -> tif_clientdata		9872446	0					
ANR	9872634	PtrMemberAccess	tif -> tif_clientdata		9872446	0					
ANR	9872635	Identifier	tif		9872446	0					
ANR	9872636	Identifier	tif_clientdata		9872446	1					
ANR	9872637	Argument	module		9872446	1					
ANR	9872638	Identifier	module		9872446	0					
ANR	9872639	Argument	"""Inappropriate photometric interpretation %d for SGILog compression; %s"""		9872446	2					
ANR	9872640	PrimaryExpression	"""Inappropriate photometric interpretation %d for SGILog compression; %s"""		9872446	0					
ANR	9872641	Argument	td -> td_photometric		9872446	3					
ANR	9872642	PtrMemberAccess	td -> td_photometric		9872446	0					
ANR	9872643	Identifier	td		9872446	0					
ANR	9872644	Identifier	td_photometric		9872446	1					
ANR	9872645	Argument	"""must be either LogLUV or LogL"""		9872446	4					
ANR	9872646	PrimaryExpression	"""must be either LogLUV or LogL"""		9872446	0					
ANR	9872647	BreakStatement	break ;	1559:2:39162:39167	9872446	11	True				
ANR	9872648	ExpressionStatement	sp -> encoder_state = 1	1561:1:39173:39194	9872446	5	True				
ANR	9872649	AssignmentExpression	sp -> encoder_state = 1		9872446	0		=			
ANR	9872650	PtrMemberAccess	sp -> encoder_state		9872446	0					
ANR	9872651	Identifier	sp		9872446	0					
ANR	9872652	Identifier	encoder_state		9872446	1					
ANR	9872653	PrimaryExpression	1		9872446	1					
ANR	9872654	ReturnStatement	return ( 1 ) ;	1562:1:39197:39207	9872446	6	True				
ANR	9872655	PrimaryExpression	1		9872446	0					
ANR	9872656	Label	notsupported :	1563:0:39209:39221	9872446	7	True				
ANR	9872657	Identifier	notsupported		9872446	0					
ANR	9872658	ExpressionStatement	"TIFFErrorExt ( tif -> tif_clientdata , module , ""SGILog compression supported only for %s, or raw data"" , td -> td_photometric == PHOTOMETRIC_LOGL ? ""Y, L"" : ""XYZ, Luv"" )"	1564:1:39224:39394	9872446	8	True				
ANR	9872659	CallExpression	"TIFFErrorExt ( tif -> tif_clientdata , module , ""SGILog compression supported only for %s, or raw data"" , td -> td_photometric == PHOTOMETRIC_LOGL ? ""Y, L"" : ""XYZ, Luv"" )"		9872446	0					
ANR	9872660	Callee	TIFFErrorExt		9872446	0					
ANR	9872661	Identifier	TIFFErrorExt		9872446	0					
ANR	9872662	ArgumentList	tif -> tif_clientdata		9872446	1					
ANR	9872663	Argument	tif -> tif_clientdata		9872446	0					
ANR	9872664	PtrMemberAccess	tif -> tif_clientdata		9872446	0					
ANR	9872665	Identifier	tif		9872446	0					
ANR	9872666	Identifier	tif_clientdata		9872446	1					
ANR	9872667	Argument	module		9872446	1					
ANR	9872668	Identifier	module		9872446	0					
ANR	9872669	Argument	"""SGILog compression supported only for %s, or raw data"""		9872446	2					
ANR	9872670	PrimaryExpression	"""SGILog compression supported only for %s, or raw data"""		9872446	0					
ANR	9872671	Argument	"td -> td_photometric == PHOTOMETRIC_LOGL ? ""Y, L"" : ""XYZ, Luv"""		9872446	3					
ANR	9872672	ConditionalExpression	"td -> td_photometric == PHOTOMETRIC_LOGL ? ""Y, L"" : ""XYZ, Luv"""		9872446	0					
ANR	9872673	Condition	td -> td_photometric == PHOTOMETRIC_LOGL		9872446	0					
ANR	9872674	EqualityExpression	td -> td_photometric == PHOTOMETRIC_LOGL		9872446	0		==			
ANR	9872675	PtrMemberAccess	td -> td_photometric		9872446	0					
ANR	9872676	Identifier	td		9872446	0					
ANR	9872677	Identifier	td_photometric		9872446	1					
ANR	9872678	Identifier	PHOTOMETRIC_LOGL		9872446	1					
ANR	9872679	PrimaryExpression	"""Y, L"""		9872446	1					
ANR	9872680	PrimaryExpression	"""XYZ, Luv"""		9872446	2					
ANR	9872681	ReturnStatement	return ( 0 ) ;	1567:1:39397:39407	9872446	9	True				
ANR	9872682	PrimaryExpression	0		9872446	0					
ANR	9872683	ReturnType	static int		9872446	1					
ANR	9872684	Identifier	LogLuvSetupEncode		9872446	2					
ANR	9872685	ParameterList	TIFF * tif		9872446	3					
ANR	9872686	Parameter	TIFF * tif	1501:18:37786:37794	9872446	0	True				
ANR	9872687	ParameterType	TIFF *		9872446	0					
ANR	9872688	Identifier	tif		9872446	1					
ANR	9872689	CFGEntryNode	ENTRY		9872446		True				
ANR	9872690	CFGExitNode	EXIT		9872446		True				
ANR	9872691	Symbol	* sp		9872446						
ANR	9872692	Symbol	COMPRESSION_SGILOG24		9872446						
ANR	9872693	Symbol	tif -> tif_encoderow		9872446						
ANR	9872694	Symbol	& tif -> tif_dir		9872446						
ANR	9872695	Symbol	td -> td_compression		9872446						
ANR	9872696	Symbol	sp -> user_datafmt		9872446						
ANR	9872697	Symbol	Luv24fromXYZ		9872446						
ANR	9872698	Symbol	sp -> encoder_state		9872446						
ANR	9872699	Symbol	Luv24fromLuv48		9872446						
ANR	9872700	Symbol	Luv32fromXYZ		9872446						
ANR	9872701	Symbol	tif		9872446						
ANR	9872702	Symbol	PHOTOMETRIC_LOGL		9872446						
ANR	9872703	Symbol	LogLuvInitState		9872446						
ANR	9872704	Symbol	sp -> tfunc		9872446						
ANR	9872705	Symbol	sp		9872446						
ANR	9872706	Symbol	EncoderState		9872446						
ANR	9872707	Symbol	LogLuvEncode32		9872446						
ANR	9872708	Symbol	module		9872446						
ANR	9872709	Symbol	LogL16InitState		9872446						
ANR	9872710	Symbol	LogL16Encode		9872446						
ANR	9872711	Symbol	tif -> tif_clientdata		9872446						
ANR	9872712	Symbol	td		9872446						
ANR	9872713	Symbol	* td		9872446						
ANR	9872714	Symbol	LogLuvEncode24		9872446						
ANR	9872715	Symbol	td -> td_photometric		9872446						
ANR	9872716	Symbol	* tif		9872446						
ANR	9872717	Symbol	Luv32fromLuv48		9872446						
ANR	9872718	Symbol	L16fromY		9872446						
ANR	9872719	Function	LogLuvClose	1570:0:39412:40346							
ANR	9872720	FunctionDef	LogLuvClose (TIFF * tif)		9872719	0					
ANR	9872721	CompoundStatement		1572:0:39447:40346	9872719	0					
ANR	9872722	IdentifierDeclStatement	LogLuvState * sp = ( LogLuvState * ) tif -> tif_data ;	1573:8:39457:39503	9872719	0	True				
ANR	9872723	IdentifierDecl	* sp = ( LogLuvState * ) tif -> tif_data		9872719	0					
ANR	9872724	IdentifierDeclType	LogLuvState *		9872719	0					
ANR	9872725	Identifier	sp		9872719	1					
ANR	9872726	AssignmentExpression	* sp = ( LogLuvState * ) tif -> tif_data		9872719	2		=			
ANR	9872727	Identifier	sp		9872719	0					
ANR	9872728	CastExpression	( LogLuvState * ) tif -> tif_data		9872719	1					
ANR	9872729	CastTarget	LogLuvState *		9872719	0					
ANR	9872730	PtrMemberAccess	tif -> tif_data		9872719	1					
ANR	9872731	Identifier	tif		9872719	0					
ANR	9872732	Identifier	tif_data		9872719	1					
ANR	9872733	IdentifierDeclStatement	TIFFDirectory * td = & tif -> tif_dir ;	1574:1:39506:39539	9872719	1	True				
ANR	9872734	IdentifierDecl	* td = & tif -> tif_dir		9872719	0					
ANR	9872735	IdentifierDeclType	TIFFDirectory *		9872719	0					
ANR	9872736	Identifier	td		9872719	1					
ANR	9872737	AssignmentExpression	* td = & tif -> tif_dir		9872719	2		=			
ANR	9872738	Identifier	td		9872719	0					
ANR	9872739	UnaryOperationExpression	& tif -> tif_dir		9872719	1					
ANR	9872740	UnaryOperator	&		9872719	0					
ANR	9872741	PtrMemberAccess	tif -> tif_dir		9872719	1					
ANR	9872742	Identifier	tif		9872719	0					
ANR	9872743	Identifier	tif_dir		9872719	1					
ANR	9872744	ExpressionStatement	assert ( sp != 0 )	1576:1:39543:39558	9872719	2	True				
ANR	9872745	CallExpression	assert ( sp != 0 )		9872719	0					
ANR	9872746	Callee	assert		9872719	0					
ANR	9872747	Identifier	assert		9872719	0					
ANR	9872748	ArgumentList	sp != 0		9872719	1					
ANR	9872749	Argument	sp != 0		9872719	0					
ANR	9872750	EqualityExpression	sp != 0		9872719	0		!=			
ANR	9872751	Identifier	sp		9872719	0					
ANR	9872752	PrimaryExpression	0		9872719	1					
ANR	9872753	IfStatement	if ( sp -> encoder_state )		9872719	3					
ANR	9872754	Condition	sp -> encoder_state	1585:12:39956:39972	9872719	0	True				
ANR	9872755	PtrMemberAccess	sp -> encoder_state		9872719	0					
ANR	9872756	Identifier	sp		9872719	0					
ANR	9872757	Identifier	encoder_state		9872719	1					
ANR	9872758	CompoundStatement		15:8:536:536	9872719	1					
ANR	9872759	ExpressionStatement	td -> td_samplesperpixel = ( td -> td_photometric == PHOTOMETRIC_LOGL ) ? 1 : 3	1589:12:40154:40243	9872719	0	True				
ANR	9872760	AssignmentExpression	td -> td_samplesperpixel = ( td -> td_photometric == PHOTOMETRIC_LOGL ) ? 1 : 3		9872719	0		=			
ANR	9872761	PtrMemberAccess	td -> td_samplesperpixel		9872719	0					
ANR	9872762	Identifier	td		9872719	0					
ANR	9872763	Identifier	td_samplesperpixel		9872719	1					
ANR	9872764	ConditionalExpression	( td -> td_photometric == PHOTOMETRIC_LOGL ) ? 1 : 3		9872719	1					
ANR	9872765	Condition	td -> td_photometric == PHOTOMETRIC_LOGL		9872719	0					
ANR	9872766	EqualityExpression	td -> td_photometric == PHOTOMETRIC_LOGL		9872719	0		==			
ANR	9872767	PtrMemberAccess	td -> td_photometric		9872719	0					
ANR	9872768	Identifier	td		9872719	0					
ANR	9872769	Identifier	td_photometric		9872719	1					
ANR	9872770	Identifier	PHOTOMETRIC_LOGL		9872719	1					
ANR	9872771	PrimaryExpression	1		9872719	1					
ANR	9872772	PrimaryExpression	3		9872719	2					
ANR	9872773	ExpressionStatement	td -> td_bitspersample = 16	1591:12:40257:40282	9872719	1	True				
ANR	9872774	AssignmentExpression	td -> td_bitspersample = 16		9872719	0		=			
ANR	9872775	PtrMemberAccess	td -> td_bitspersample		9872719	0					
ANR	9872776	Identifier	td		9872719	0					
ANR	9872777	Identifier	td_bitspersample		9872719	1					
ANR	9872778	PrimaryExpression	16		9872719	1					
ANR	9872779	ExpressionStatement	td -> td_sampleformat = SAMPLEFORMAT_INT	1592:12:40296:40334	9872719	2	True				
ANR	9872780	AssignmentExpression	td -> td_sampleformat = SAMPLEFORMAT_INT		9872719	0		=			
ANR	9872781	PtrMemberAccess	td -> td_sampleformat		9872719	0					
ANR	9872782	Identifier	td		9872719	0					
ANR	9872783	Identifier	td_sampleformat		9872719	1					
ANR	9872784	Identifier	SAMPLEFORMAT_INT		9872719	1					
ANR	9872785	ReturnType	static void		9872719	1					
ANR	9872786	Identifier	LogLuvClose		9872719	2					
ANR	9872787	ParameterList	TIFF * tif		9872719	3					
ANR	9872788	Parameter	TIFF * tif	1571:12:39436:39444	9872719	0	True				
ANR	9872789	ParameterType	TIFF *		9872719	0					
ANR	9872790	Identifier	tif		9872719	1					
ANR	9872791	CFGEntryNode	ENTRY		9872719		True				
ANR	9872792	CFGExitNode	EXIT		9872719		True				
ANR	9872793	Symbol	* sp		9872719						
ANR	9872794	Symbol	& tif -> tif_dir		9872719						
ANR	9872795	Symbol	SAMPLEFORMAT_INT		9872719						
ANR	9872796	Symbol	sp -> encoder_state		9872719						
ANR	9872797	Symbol	tif		9872719						
ANR	9872798	Symbol	td		9872719						
ANR	9872799	Symbol	td -> td_samplesperpixel		9872719						
ANR	9872800	Symbol	* td		9872719						
ANR	9872801	Symbol	PHOTOMETRIC_LOGL		9872719						
ANR	9872802	Symbol	td -> td_sampleformat		9872719						
ANR	9872803	Symbol	* tif		9872719						
ANR	9872804	Symbol	td -> td_photometric		9872719						
ANR	9872805	Symbol	sp		9872719						
ANR	9872806	Symbol	td -> td_bitspersample		9872719						
ANR	9872807	Symbol	tif -> tif_data		9872719						
ANR	9872808	Function	LogLuvCleanup	1596:0:40349:40673							
ANR	9872809	FunctionDef	LogLuvCleanup (TIFF * tif)		9872808	0					
ANR	9872810	CompoundStatement		1598:0:40386:40673	9872808	0					
ANR	9872811	IdentifierDeclStatement	LogLuvState * sp = ( LogLuvState * ) tif -> tif_data ;	1599:1:40389:40435	9872808	0	True				
ANR	9872812	IdentifierDecl	* sp = ( LogLuvState * ) tif -> tif_data		9872808	0					
ANR	9872813	IdentifierDeclType	LogLuvState *		9872808	0					
ANR	9872814	Identifier	sp		9872808	1					
ANR	9872815	AssignmentExpression	* sp = ( LogLuvState * ) tif -> tif_data		9872808	2		=			
ANR	9872816	Identifier	sp		9872808	0					
ANR	9872817	CastExpression	( LogLuvState * ) tif -> tif_data		9872808	1					
ANR	9872818	CastTarget	LogLuvState *		9872808	0					
ANR	9872819	PtrMemberAccess	tif -> tif_data		9872808	1					
ANR	9872820	Identifier	tif		9872808	0					
ANR	9872821	Identifier	tif_data		9872808	1					
ANR	9872822	ExpressionStatement	assert ( sp != 0 )	1601:1:40439:40454	9872808	1	True				
ANR	9872823	CallExpression	assert ( sp != 0 )		9872808	0					
ANR	9872824	Callee	assert		9872808	0					
ANR	9872825	Identifier	assert		9872808	0					
ANR	9872826	ArgumentList	sp != 0		9872808	1					
ANR	9872827	Argument	sp != 0		9872808	0					
ANR	9872828	EqualityExpression	sp != 0		9872808	0		!=			
ANR	9872829	Identifier	sp		9872808	0					
ANR	9872830	PrimaryExpression	0		9872808	1					
ANR	9872831	ExpressionStatement	tif -> tif_tagmethods . vgetfield = sp -> vgetparent	1603:1:40458:40504	9872808	2	True				
ANR	9872832	AssignmentExpression	tif -> tif_tagmethods . vgetfield = sp -> vgetparent		9872808	0		=			
ANR	9872833	MemberAccess	tif -> tif_tagmethods . vgetfield		9872808	0					
ANR	9872834	PtrMemberAccess	tif -> tif_tagmethods		9872808	0					
ANR	9872835	Identifier	tif		9872808	0					
ANR	9872836	Identifier	tif_tagmethods		9872808	1					
ANR	9872837	Identifier	vgetfield		9872808	1					
ANR	9872838	PtrMemberAccess	sp -> vgetparent		9872808	1					
ANR	9872839	Identifier	sp		9872808	0					
ANR	9872840	Identifier	vgetparent		9872808	1					
ANR	9872841	ExpressionStatement	tif -> tif_tagmethods . vsetfield = sp -> vsetparent	1604:1:40507:40553	9872808	3	True				
ANR	9872842	AssignmentExpression	tif -> tif_tagmethods . vsetfield = sp -> vsetparent		9872808	0		=			
ANR	9872843	MemberAccess	tif -> tif_tagmethods . vsetfield		9872808	0					
ANR	9872844	PtrMemberAccess	tif -> tif_tagmethods		9872808	0					
ANR	9872845	Identifier	tif		9872808	0					
ANR	9872846	Identifier	tif_tagmethods		9872808	1					
ANR	9872847	Identifier	vsetfield		9872808	1					
ANR	9872848	PtrMemberAccess	sp -> vsetparent		9872808	1					
ANR	9872849	Identifier	sp		9872808	0					
ANR	9872850	Identifier	vsetparent		9872808	1					
ANR	9872851	IfStatement	if ( sp -> tbuf )		9872808	4					
ANR	9872852	Condition	sp -> tbuf	1606:5:40561:40568	9872808	0	True				
ANR	9872853	PtrMemberAccess	sp -> tbuf		9872808	0					
ANR	9872854	Identifier	sp		9872808	0					
ANR	9872855	Identifier	tbuf		9872808	1					
ANR	9872856	ExpressionStatement	_TIFFfree ( sp -> tbuf )	1607:2:40573:40592	9872808	1	True				
ANR	9872857	CallExpression	_TIFFfree ( sp -> tbuf )		9872808	0					
ANR	9872858	Callee	_TIFFfree		9872808	0					
ANR	9872859	Identifier	_TIFFfree		9872808	0					
ANR	9872860	ArgumentList	sp -> tbuf		9872808	1					
ANR	9872861	Argument	sp -> tbuf		9872808	0					
ANR	9872862	PtrMemberAccess	sp -> tbuf		9872808	0					
ANR	9872863	Identifier	sp		9872808	0					
ANR	9872864	Identifier	tbuf		9872808	1					
ANR	9872865	ExpressionStatement	_TIFFfree ( sp )	1608:1:40595:40608	9872808	5	True				
ANR	9872866	CallExpression	_TIFFfree ( sp )		9872808	0					
ANR	9872867	Callee	_TIFFfree		9872808	0					
ANR	9872868	Identifier	_TIFFfree		9872808	0					
ANR	9872869	ArgumentList	sp		9872808	1					
ANR	9872870	Argument	sp		9872808	0					
ANR	9872871	Identifier	sp		9872808	0					
ANR	9872872	ExpressionStatement	tif -> tif_data = NULL	1609:1:40611:40631	9872808	6	True				
ANR	9872873	AssignmentExpression	tif -> tif_data = NULL		9872808	0		=			
ANR	9872874	PtrMemberAccess	tif -> tif_data		9872808	0					
ANR	9872875	Identifier	tif		9872808	0					
ANR	9872876	Identifier	tif_data		9872808	1					
ANR	9872877	Identifier	NULL		9872808	1					
ANR	9872878	ExpressionStatement	_TIFFSetDefaultCompressionState ( tif )	1611:1:40635:40671	9872808	7	True				
ANR	9872879	CallExpression	_TIFFSetDefaultCompressionState ( tif )		9872808	0					
ANR	9872880	Callee	_TIFFSetDefaultCompressionState		9872808	0					
ANR	9872881	Identifier	_TIFFSetDefaultCompressionState		9872808	0					
ANR	9872882	ArgumentList	tif		9872808	1					
ANR	9872883	Argument	tif		9872808	0					
ANR	9872884	Identifier	tif		9872808	0					
ANR	9872885	ReturnType	static void		9872808	1					
ANR	9872886	Identifier	LogLuvCleanup		9872808	2					
ANR	9872887	ParameterList	TIFF * tif		9872808	3					
ANR	9872888	Parameter	TIFF * tif	1597:14:40375:40383	9872808	0	True				
ANR	9872889	ParameterType	TIFF *		9872808	0					
ANR	9872890	Identifier	tif		9872808	1					
ANR	9872891	CFGEntryNode	ENTRY		9872808		True				
ANR	9872892	CFGExitNode	EXIT		9872808		True				
ANR	9872893	Symbol	tif		9872808						
ANR	9872894	Symbol	* sp		9872808						
ANR	9872895	Symbol	tif -> tif_tagmethods . vsetfield		9872808						
ANR	9872896	Symbol	NULL		9872808						
ANR	9872897	Symbol	tif -> tif_tagmethods		9872808						
ANR	9872898	Symbol	sp -> tbuf		9872808						
ANR	9872899	Symbol	tif -> tif_tagmethods . vgetfield		9872808						
ANR	9872900	Symbol	* tif		9872808						
ANR	9872901	Symbol	sp -> vgetparent		9872808						
ANR	9872902	Symbol	sp		9872808						
ANR	9872903	Symbol	sp -> vsetparent		9872808						
ANR	9872904	Symbol	tif -> tif_data		9872808						
ANR	9872905	Function	LogLuvVSetField	1614:0:40676:42415							
ANR	9872906	FunctionDef	"LogLuvVSetField (TIFF * tif , uint32 tag , va_list ap)"		9872905	0					
ANR	9872907	CompoundStatement		1616:0:40738:42415	9872905	0					
ANR	9872908	Statement	static	1617:1:40741:40746	9872905	0	True				
ANR	9872909	IdentifierDeclStatement	"const char module [ ] = ""LogLuvVSetField"" ;"	1617:8:40748:40787	9872905	1	True				
ANR	9872910	IdentifierDecl	"module [ ] = ""LogLuvVSetField"""		9872905	0					
ANR	9872911	IdentifierDeclType	const char [ ]		9872905	0					
ANR	9872912	Identifier	module		9872905	1					
ANR	9872913	AssignmentExpression	"module [ ] = ""LogLuvVSetField"""		9872905	2		=			
ANR	9872914	Identifier	module		9872905	0					
ANR	9872915	PrimaryExpression	"""LogLuvVSetField"""		9872905	1					
ANR	9872916	IdentifierDeclStatement	LogLuvState * sp = DecoderState ( tif ) ;	1618:1:40790:40825	9872905	2	True				
ANR	9872917	IdentifierDecl	* sp = DecoderState ( tif )		9872905	0					
ANR	9872918	IdentifierDeclType	LogLuvState *		9872905	0					
ANR	9872919	Identifier	sp		9872905	1					
ANR	9872920	AssignmentExpression	* sp = DecoderState ( tif )		9872905	2		=			
ANR	9872921	Identifier	sp		9872905	0					
ANR	9872922	CallExpression	DecoderState ( tif )		9872905	1					
ANR	9872923	Callee	DecoderState		9872905	0					
ANR	9872924	Identifier	DecoderState		9872905	0					
ANR	9872925	ArgumentList	tif		9872905	1					
ANR	9872926	Argument	tif		9872905	0					
ANR	9872927	Identifier	tif		9872905	0					
ANR	9872928	IdentifierDeclStatement	"int bps , fmt ;"	1619:1:40828:40840	9872905	3	True				
ANR	9872929	IdentifierDecl	bps		9872905	0					
ANR	9872930	IdentifierDeclType	int		9872905	0					
ANR	9872931	Identifier	bps		9872905	1					
ANR	9872932	IdentifierDecl	fmt		9872905	1					
ANR	9872933	IdentifierDeclType	int		9872905	0					
ANR	9872934	Identifier	fmt		9872905	1					
ANR	9872935	SwitchStatement	switch ( tag )		9872905	4					
ANR	9872936	Condition	tag	1621:9:40852:40854	9872905	0	True				
ANR	9872937	Identifier	tag		9872905	0					
ANR	9872938	CompoundStatement		6:14:118:118	9872905	1					
ANR	9872939	Label	case TIFFTAG_SGILOGDATAFMT :	1622:1:40860:40886	9872905	0	True				
ANR	9872940	Identifier	TIFFTAG_SGILOGDATAFMT		9872905	0					
ANR	9872941	ExpressionStatement	"sp -> user_datafmt = ( int ) va_arg ( ap , int )"	1623:2:40890:40930	9872905	1	True				
ANR	9872942	AssignmentExpression	"sp -> user_datafmt = ( int ) va_arg ( ap , int )"		9872905	0		=			
ANR	9872943	PtrMemberAccess	sp -> user_datafmt		9872905	0					
ANR	9872944	Identifier	sp		9872905	0					
ANR	9872945	Identifier	user_datafmt		9872905	1					
ANR	9872946	CastExpression	"( int ) va_arg ( ap , int )"		9872905	1					
ANR	9872947	CastTarget	int		9872905	0					
ANR	9872948	CallExpression	"va_arg ( ap , int )"		9872905	1					
ANR	9872949	Callee	va_arg		9872905	0					
ANR	9872950	Identifier	va_arg		9872905	0					
ANR	9872951	ArgumentList	ap		9872905	1					
ANR	9872952	Argument	ap		9872905	0					
ANR	9872953	Identifier	ap		9872905	0					
ANR	9872954	Argument	int		9872905	1					
ANR	9872955	Identifier	int		9872905	0					
ANR	9872956	SwitchStatement	switch ( sp -> user_datafmt )		9872905	2					
ANR	9872957	Condition	sp -> user_datafmt	1630:10:41187:41202	9872905	0	True				
ANR	9872958	PtrMemberAccess	sp -> user_datafmt		9872905	0					
ANR	9872959	Identifier	sp		9872905	0					
ANR	9872960	Identifier	user_datafmt		9872905	1					
ANR	9872961	CompoundStatement		15:28:466:466	9872905	1					
ANR	9872962	Label	case SGILOGDATAFMT_FLOAT :	1631:2:41209:41233	9872905	0	True				
ANR	9872963	Identifier	SGILOGDATAFMT_FLOAT		9872905	0					
ANR	9872964	ExpressionStatement	bps = 32	1632:3:41238:41246	9872905	1	True				
ANR	9872965	AssignmentExpression	bps = 32		9872905	0		=			
ANR	9872966	Identifier	bps		9872905	0					
ANR	9872967	PrimaryExpression	32		9872905	1					
ANR	9872968	ExpressionStatement	fmt = SAMPLEFORMAT_IEEEFP	1633:3:41251:41276	9872905	2	True				
ANR	9872969	AssignmentExpression	fmt = SAMPLEFORMAT_IEEEFP		9872905	0		=			
ANR	9872970	Identifier	fmt		9872905	0					
ANR	9872971	Identifier	SAMPLEFORMAT_IEEEFP		9872905	1					
ANR	9872972	BreakStatement	break ;	1634:3:41281:41286	9872905	3	True				
ANR	9872973	Label	case SGILOGDATAFMT_16BIT :	1635:2:41290:41314	9872905	4	True				
ANR	9872974	Identifier	SGILOGDATAFMT_16BIT		9872905	0					
ANR	9872975	ExpressionStatement	bps = 16	1636:3:41319:41327	9872905	5	True				
ANR	9872976	AssignmentExpression	bps = 16		9872905	0		=			
ANR	9872977	Identifier	bps		9872905	0					
ANR	9872978	PrimaryExpression	16		9872905	1					
ANR	9872979	ExpressionStatement	fmt = SAMPLEFORMAT_INT	1637:3:41332:41354	9872905	6	True				
ANR	9872980	AssignmentExpression	fmt = SAMPLEFORMAT_INT		9872905	0		=			
ANR	9872981	Identifier	fmt		9872905	0					
ANR	9872982	Identifier	SAMPLEFORMAT_INT		9872905	1					
ANR	9872983	BreakStatement	break ;	1638:3:41359:41364	9872905	7	True				
ANR	9872984	Label	case SGILOGDATAFMT_RAW :	1639:2:41368:41390	9872905	8	True				
ANR	9872985	Identifier	SGILOGDATAFMT_RAW		9872905	0					
ANR	9872986	ExpressionStatement	bps = 32	1640:3:41395:41403	9872905	9	True				
ANR	9872987	AssignmentExpression	bps = 32		9872905	0		=			
ANR	9872988	Identifier	bps		9872905	0					
ANR	9872989	PrimaryExpression	32		9872905	1					
ANR	9872990	ExpressionStatement	fmt = SAMPLEFORMAT_UINT	1641:3:41408:41431	9872905	10	True				
ANR	9872991	AssignmentExpression	fmt = SAMPLEFORMAT_UINT		9872905	0		=			
ANR	9872992	Identifier	fmt		9872905	0					
ANR	9872993	Identifier	SAMPLEFORMAT_UINT		9872905	1					
ANR	9872994	ExpressionStatement	"TIFFSetField ( tif , TIFFTAG_SAMPLESPERPIXEL , 1 )"	1642:3:41436:41481	9872905	11	True				
ANR	9872995	CallExpression	"TIFFSetField ( tif , TIFFTAG_SAMPLESPERPIXEL , 1 )"		9872905	0					
ANR	9872996	Callee	TIFFSetField		9872905	0					
ANR	9872997	Identifier	TIFFSetField		9872905	0					
ANR	9872998	ArgumentList	tif		9872905	1					
ANR	9872999	Argument	tif		9872905	0					
ANR	9873000	Identifier	tif		9872905	0					
ANR	9873001	Argument	TIFFTAG_SAMPLESPERPIXEL		9872905	1					
ANR	9873002	Identifier	TIFFTAG_SAMPLESPERPIXEL		9872905	0					
ANR	9873003	Argument	1		9872905	2					
ANR	9873004	PrimaryExpression	1		9872905	0					
ANR	9873005	BreakStatement	break ;	1643:3:41486:41491	9872905	12	True				
ANR	9873006	Label	case SGILOGDATAFMT_8BIT :	1644:2:41495:41518	9872905	13	True				
ANR	9873007	Identifier	SGILOGDATAFMT_8BIT		9872905	0					
ANR	9873008	ExpressionStatement	bps = 8	1645:3:41523:41530	9872905	14	True				
ANR	9873009	AssignmentExpression	bps = 8		9872905	0		=			
ANR	9873010	Identifier	bps		9872905	0					
ANR	9873011	PrimaryExpression	8		9872905	1					
ANR	9873012	ExpressionStatement	fmt = SAMPLEFORMAT_UINT	1646:3:41535:41558	9872905	15	True				
ANR	9873013	AssignmentExpression	fmt = SAMPLEFORMAT_UINT		9872905	0		=			
ANR	9873014	Identifier	fmt		9872905	0					
ANR	9873015	Identifier	SAMPLEFORMAT_UINT		9872905	1					
ANR	9873016	BreakStatement	break ;	1647:3:41563:41568	9872905	16	True				
ANR	9873017	Label	default :	1648:2:41572:41579	9872905	17	True				
ANR	9873018	Identifier	default		9872905	0					
ANR	9873019	ExpressionStatement	"TIFFErrorExt ( tif -> tif_clientdata , tif -> tif_name , ""Unknown data format %d for LogLuv compression"" , sp -> user_datafmt )"	1649:3:41584:41713	9872905	18	True				
ANR	9873020	CallExpression	"TIFFErrorExt ( tif -> tif_clientdata , tif -> tif_name , ""Unknown data format %d for LogLuv compression"" , sp -> user_datafmt )"		9872905	0					
ANR	9873021	Callee	TIFFErrorExt		9872905	0					
ANR	9873022	Identifier	TIFFErrorExt		9872905	0					
ANR	9873023	ArgumentList	tif -> tif_clientdata		9872905	1					
ANR	9873024	Argument	tif -> tif_clientdata		9872905	0					
ANR	9873025	PtrMemberAccess	tif -> tif_clientdata		9872905	0					
ANR	9873026	Identifier	tif		9872905	0					
ANR	9873027	Identifier	tif_clientdata		9872905	1					
ANR	9873028	Argument	tif -> tif_name		9872905	1					
ANR	9873029	PtrMemberAccess	tif -> tif_name		9872905	0					
ANR	9873030	Identifier	tif		9872905	0					
ANR	9873031	Identifier	tif_name		9872905	1					
ANR	9873032	Argument	"""Unknown data format %d for LogLuv compression"""		9872905	2					
ANR	9873033	PrimaryExpression	"""Unknown data format %d for LogLuv compression"""		9872905	0					
ANR	9873034	Argument	sp -> user_datafmt		9872905	3					
ANR	9873035	PtrMemberAccess	sp -> user_datafmt		9872905	0					
ANR	9873036	Identifier	sp		9872905	0					
ANR	9873037	Identifier	user_datafmt		9872905	1					
ANR	9873038	ReturnStatement	return ( 0 ) ;	1652:3:41718:41728	9872905	19	True				
ANR	9873039	PrimaryExpression	0		9872905	0					
ANR	9873040	ExpressionStatement	"TIFFSetField ( tif , TIFFTAG_BITSPERSAMPLE , bps )"	1654:2:41736:41781	9872905	3	True				
ANR	9873041	CallExpression	"TIFFSetField ( tif , TIFFTAG_BITSPERSAMPLE , bps )"		9872905	0					
ANR	9873042	Callee	TIFFSetField		9872905	0					
ANR	9873043	Identifier	TIFFSetField		9872905	0					
ANR	9873044	ArgumentList	tif		9872905	1					
ANR	9873045	Argument	tif		9872905	0					
ANR	9873046	Identifier	tif		9872905	0					
ANR	9873047	Argument	TIFFTAG_BITSPERSAMPLE		9872905	1					
ANR	9873048	Identifier	TIFFTAG_BITSPERSAMPLE		9872905	0					
ANR	9873049	Argument	bps		9872905	2					
ANR	9873050	Identifier	bps		9872905	0					
ANR	9873051	ExpressionStatement	"TIFFSetField ( tif , TIFFTAG_SAMPLEFORMAT , fmt )"	1655:2:41785:41829	9872905	4	True				
ANR	9873052	CallExpression	"TIFFSetField ( tif , TIFFTAG_SAMPLEFORMAT , fmt )"		9872905	0					
ANR	9873053	Callee	TIFFSetField		9872905	0					
ANR	9873054	Identifier	TIFFSetField		9872905	0					
ANR	9873055	ArgumentList	tif		9872905	1					
ANR	9873056	Argument	tif		9872905	0					
ANR	9873057	Identifier	tif		9872905	0					
ANR	9873058	Argument	TIFFTAG_SAMPLEFORMAT		9872905	1					
ANR	9873059	Identifier	TIFFTAG_SAMPLEFORMAT		9872905	0					
ANR	9873060	Argument	fmt		9872905	2					
ANR	9873061	Identifier	fmt		9872905	0					
ANR	9873062	ExpressionStatement	tif -> tif_tilesize = isTiled ( tif ) ? TIFFTileSize ( tif ) : ( tmsize_t ) - 1	1659:2:41899:41967	9872905	5	True				
ANR	9873063	AssignmentExpression	tif -> tif_tilesize = isTiled ( tif ) ? TIFFTileSize ( tif ) : ( tmsize_t ) - 1		9872905	0		=			
ANR	9873064	PtrMemberAccess	tif -> tif_tilesize		9872905	0					
ANR	9873065	Identifier	tif		9872905	0					
ANR	9873066	Identifier	tif_tilesize		9872905	1					
ANR	9873067	ConditionalExpression	isTiled ( tif ) ? TIFFTileSize ( tif ) : ( tmsize_t ) - 1		9872905	1					
ANR	9873068	Condition	isTiled ( tif )		9872905	0					
ANR	9873069	CallExpression	isTiled ( tif )		9872905	0					
ANR	9873070	Callee	isTiled		9872905	0					
ANR	9873071	Identifier	isTiled		9872905	0					
ANR	9873072	ArgumentList	tif		9872905	1					
ANR	9873073	Argument	tif		9872905	0					
ANR	9873074	Identifier	tif		9872905	0					
ANR	9873075	CallExpression	TIFFTileSize ( tif )		9872905	1					
ANR	9873076	Callee	TIFFTileSize		9872905	0					
ANR	9873077	Identifier	TIFFTileSize		9872905	0					
ANR	9873078	ArgumentList	tif		9872905	1					
ANR	9873079	Argument	tif		9872905	0					
ANR	9873080	Identifier	tif		9872905	0					
ANR	9873081	CastExpression	( tmsize_t ) - 1		9872905	2					
ANR	9873082	CastTarget	tmsize_t		9872905	0					
ANR	9873083	UnaryOperationExpression	- 1		9872905	1					
ANR	9873084	UnaryOperator	-		9872905	0					
ANR	9873085	PrimaryExpression	1		9872905	1					
ANR	9873086	ExpressionStatement	tif -> tif_scanlinesize = TIFFScanlineSize ( tif )	1660:2:41971:42016	9872905	6	True				
ANR	9873087	AssignmentExpression	tif -> tif_scanlinesize = TIFFScanlineSize ( tif )		9872905	0		=			
ANR	9873088	PtrMemberAccess	tif -> tif_scanlinesize		9872905	0					
ANR	9873089	Identifier	tif		9872905	0					
ANR	9873090	Identifier	tif_scanlinesize		9872905	1					
ANR	9873091	CallExpression	TIFFScanlineSize ( tif )		9872905	1					
ANR	9873092	Callee	TIFFScanlineSize		9872905	0					
ANR	9873093	Identifier	TIFFScanlineSize		9872905	0					
ANR	9873094	ArgumentList	tif		9872905	1					
ANR	9873095	Argument	tif		9872905	0					
ANR	9873096	Identifier	tif		9872905	0					
ANR	9873097	ReturnStatement	return ( 1 ) ;	1661:2:42020:42030	9872905	7	True				
ANR	9873098	PrimaryExpression	1		9872905	0					
ANR	9873099	Label	case TIFFTAG_SGILOGENCODE :	1662:1:42033:42058	9872905	8	True				
ANR	9873100	Identifier	TIFFTAG_SGILOGENCODE		9872905	0					
ANR	9873101	ExpressionStatement	"sp -> encode_meth = ( int ) va_arg ( ap , int )"	1663:2:42062:42101	9872905	9	True				
ANR	9873102	AssignmentExpression	"sp -> encode_meth = ( int ) va_arg ( ap , int )"		9872905	0		=			
ANR	9873103	PtrMemberAccess	sp -> encode_meth		9872905	0					
ANR	9873104	Identifier	sp		9872905	0					
ANR	9873105	Identifier	encode_meth		9872905	1					
ANR	9873106	CastExpression	"( int ) va_arg ( ap , int )"		9872905	1					
ANR	9873107	CastTarget	int		9872905	0					
ANR	9873108	CallExpression	"va_arg ( ap , int )"		9872905	1					
ANR	9873109	Callee	va_arg		9872905	0					
ANR	9873110	Identifier	va_arg		9872905	0					
ANR	9873111	ArgumentList	ap		9872905	1					
ANR	9873112	Argument	ap		9872905	0					
ANR	9873113	Identifier	ap		9872905	0					
ANR	9873114	Argument	int		9872905	1					
ANR	9873115	Identifier	int		9872905	0					
ANR	9873116	IfStatement	if ( sp -> encode_meth != SGILOGENCODE_NODITHER && sp -> encode_meth != SGILOGENCODE_RANDITHER )		9872905	10					
ANR	9873117	Condition	sp -> encode_meth != SGILOGENCODE_NODITHER && sp -> encode_meth != SGILOGENCODE_RANDITHER	1664:6:42109:42199	9872905	0	True				
ANR	9873118	AndExpression	sp -> encode_meth != SGILOGENCODE_NODITHER && sp -> encode_meth != SGILOGENCODE_RANDITHER		9872905	0		&&			
ANR	9873119	EqualityExpression	sp -> encode_meth != SGILOGENCODE_NODITHER		9872905	0		!=			
ANR	9873120	PtrMemberAccess	sp -> encode_meth		9872905	0					
ANR	9873121	Identifier	sp		9872905	0					
ANR	9873122	Identifier	encode_meth		9872905	1					
ANR	9873123	Identifier	SGILOGENCODE_NODITHER		9872905	1					
ANR	9873124	EqualityExpression	sp -> encode_meth != SGILOGENCODE_RANDITHER		9872905	1		!=			
ANR	9873125	PtrMemberAccess	sp -> encode_meth		9872905	0					
ANR	9873126	Identifier	sp		9872905	0					
ANR	9873127	Identifier	encode_meth		9872905	1					
ANR	9873128	Identifier	SGILOGENCODE_RANDITHER		9872905	1					
ANR	9873129	CompoundStatement		50:49:1463:1463	9872905	1					
ANR	9873130	ExpressionStatement	"TIFFErrorExt ( tif -> tif_clientdata , module , ""Unknown encoding %d for LogLuv compression"" , sp -> encode_meth )"	1666:3:42207:42325	9872905	0	True				
ANR	9873131	CallExpression	"TIFFErrorExt ( tif -> tif_clientdata , module , ""Unknown encoding %d for LogLuv compression"" , sp -> encode_meth )"		9872905	0					
ANR	9873132	Callee	TIFFErrorExt		9872905	0					
ANR	9873133	Identifier	TIFFErrorExt		9872905	0					
ANR	9873134	ArgumentList	tif -> tif_clientdata		9872905	1					
ANR	9873135	Argument	tif -> tif_clientdata		9872905	0					
ANR	9873136	PtrMemberAccess	tif -> tif_clientdata		9872905	0					
ANR	9873137	Identifier	tif		9872905	0					
ANR	9873138	Identifier	tif_clientdata		9872905	1					
ANR	9873139	Argument	module		9872905	1					
ANR	9873140	Identifier	module		9872905	0					
ANR	9873141	Argument	"""Unknown encoding %d for LogLuv compression"""		9872905	2					
ANR	9873142	PrimaryExpression	"""Unknown encoding %d for LogLuv compression"""		9872905	0					
ANR	9873143	Argument	sp -> encode_meth		9872905	3					
ANR	9873144	PtrMemberAccess	sp -> encode_meth		9872905	0					
ANR	9873145	Identifier	sp		9872905	0					
ANR	9873146	Identifier	encode_meth		9872905	1					
ANR	9873147	ReturnStatement	return ( 0 ) ;	1669:3:42330:42340	9872905	1	True				
ANR	9873148	PrimaryExpression	0		9872905	0					
ANR	9873149	ReturnStatement	return ( 1 ) ;	1671:2:42348:42358	9872905	11	True				
ANR	9873150	PrimaryExpression	1		9872905	0					
ANR	9873151	Label	default :	1672:1:42361:42368	9872905	12	True				
ANR	9873152	Identifier	default		9872905	0					
ANR	9873153	ReturnStatement	"return ( * sp -> vsetparent ) ( tif , tag , ap ) ;"	1673:2:42372:42410	9872905	13	True				
ANR	9873154	CallExpression	"( * sp -> vsetparent ) ( tif , tag , ap )"		9872905	0					
ANR	9873155	Callee	* sp -> vsetparent		9872905	0					
ANR	9873156	UnaryOperationExpression	* sp -> vsetparent		9872905	0					
ANR	9873157	UnaryOperator	*		9872905	0					
ANR	9873158	PtrMemberAccess	sp -> vsetparent		9872905	1					
ANR	9873159	Identifier	sp		9872905	0					
ANR	9873160	Identifier	vsetparent		9872905	1					
ANR	9873161	ArgumentList	tif		9872905	1					
ANR	9873162	Argument	tif		9872905	0					
ANR	9873163	Identifier	tif		9872905	0					
ANR	9873164	Argument	tag		9872905	1					
ANR	9873165	Identifier	tag		9872905	0					
ANR	9873166	Argument	ap		9872905	2					
ANR	9873167	Identifier	ap		9872905	0					
ANR	9873168	ReturnType	static int		9872905	1					
ANR	9873169	Identifier	LogLuvVSetField		9872905	2					
ANR	9873170	ParameterList	"TIFF * tif , uint32 tag , va_list ap"		9872905	3					
ANR	9873171	Parameter	TIFF * tif	1615:16:40703:40711	9872905	0	True				
ANR	9873172	ParameterType	TIFF *		9872905	0					
ANR	9873173	Identifier	tif		9872905	1					
ANR	9873174	Parameter	uint32 tag	1615:27:40714:40723	9872905	1	True				
ANR	9873175	ParameterType	uint32		9872905	0					
ANR	9873176	Identifier	tag		9872905	1					
ANR	9873177	Parameter	va_list ap	1615:39:40726:40735	9872905	2	True				
ANR	9873178	ParameterType	va_list		9872905	0					
ANR	9873179	Identifier	ap		9872905	1					
ANR	9873180	CFGEntryNode	ENTRY		9872905		True				
ANR	9873181	CFGExitNode	EXIT		9872905		True				
ANR	9873182	Symbol	* sp		9872905						
ANR	9873183	Symbol	SAMPLEFORMAT_UINT		9872905						
ANR	9873184	Symbol	TIFFTAG_SAMPLEFORMAT		9872905						
ANR	9873185	Symbol	tif -> tif_tilesize		9872905						
ANR	9873186	Symbol	sp -> user_datafmt		9872905						
ANR	9873187	Symbol	TIFFTAG_SAMPLESPERPIXEL		9872905						
ANR	9873188	Symbol	* * sp		9872905						
ANR	9873189	Symbol	fmt		9872905						
ANR	9873190	Symbol	tif		9872905						
ANR	9873191	Symbol	isTiled		9872905						
ANR	9873192	Symbol	DecoderState		9872905						
ANR	9873193	Symbol	tif -> tif_scanlinesize		9872905						
ANR	9873194	Symbol	SGILOGENCODE_RANDITHER		9872905						
ANR	9873195	Symbol	tag		9872905						
ANR	9873196	Symbol	sp -> encode_meth		9872905						
ANR	9873197	Symbol	sp		9872905						
ANR	9873198	Symbol	va_arg		9872905						
ANR	9873199	Symbol	SGILOGENCODE_NODITHER		9872905						
ANR	9873200	Symbol	TIFFScanlineSize		9872905						
ANR	9873201	Symbol	* sp -> vsetparent		9872905						
ANR	9873202	Symbol	bps		9872905						
ANR	9873203	Symbol	SAMPLEFORMAT_INT		9872905						
ANR	9873204	Symbol	module		9872905						
ANR	9873205	Symbol	SAMPLEFORMAT_IEEEFP		9872905						
ANR	9873206	Symbol	sp -> vsetparent		9872905						
ANR	9873207	Symbol	int		9872905						
ANR	9873208	Symbol	ap		9872905						
ANR	9873209	Symbol	tif -> tif_clientdata		9872905						
ANR	9873210	Symbol	TIFFTAG_BITSPERSAMPLE		9872905						
ANR	9873211	Symbol	tif -> tif_name		9872905						
ANR	9873212	Symbol	* tif		9872905						
ANR	9873213	Symbol	TIFFTileSize		9872905						
ANR	9873214	Function	LogLuvVGetField	1677:0:42418:42686							
ANR	9873215	FunctionDef	"LogLuvVGetField (TIFF * tif , uint32 tag , va_list ap)"		9873214	0					
ANR	9873216	CompoundStatement		1679:0:42480:42686	9873214	0					
ANR	9873217	IdentifierDeclStatement	LogLuvState * sp = ( LogLuvState * ) tif -> tif_data ;	1680:1:42483:42529	9873214	0	True				
ANR	9873218	IdentifierDecl	* sp = ( LogLuvState * ) tif -> tif_data		9873214	0					
ANR	9873219	IdentifierDeclType	LogLuvState *		9873214	0					
ANR	9873220	Identifier	sp		9873214	1					
ANR	9873221	AssignmentExpression	* sp = ( LogLuvState * ) tif -> tif_data		9873214	2		=			
ANR	9873222	Identifier	sp		9873214	0					
ANR	9873223	CastExpression	( LogLuvState * ) tif -> tif_data		9873214	1					
ANR	9873224	CastTarget	LogLuvState *		9873214	0					
ANR	9873225	PtrMemberAccess	tif -> tif_data		9873214	1					
ANR	9873226	Identifier	tif		9873214	0					
ANR	9873227	Identifier	tif_data		9873214	1					
ANR	9873228	SwitchStatement	switch ( tag )		9873214	1					
ANR	9873229	Condition	tag	1682:9:42541:42543	9873214	0	True				
ANR	9873230	Identifier	tag		9873214	0					
ANR	9873231	CompoundStatement		4:14:65:65	9873214	1					
ANR	9873232	Label	case TIFFTAG_SGILOGDATAFMT :	1683:1:42549:42575	9873214	0	True				
ANR	9873233	Identifier	TIFFTAG_SGILOGDATAFMT		9873214	0					
ANR	9873234	Statement	*	1684:2:42579:42579	9873214	1	True				
ANR	9873235	Statement	va_arg	1684:3:42580:42585	9873214	2	True				
ANR	9873236	Statement	(	1684:9:42586:42586	9873214	3	True				
ANR	9873237	Statement	ap	1684:10:42587:42588	9873214	4	True				
ANR	9873238	Statement	","	1684:12:42589:42589	9873214	5	True				
ANR	9873239	Statement	int	1684:14:42591:42593	9873214	6	True				
ANR	9873240	Statement	*	1684:17:42594:42594	9873214	7	True				
ANR	9873241	Statement	)	1684:18:42595:42595	9873214	8	True				
ANR	9873242	Statement	=	1684:20:42597:42597	9873214	9	True				
ANR	9873243	ExpressionStatement	sp -> user_datafmt	1684:22:42599:42615	9873214	10	True				
ANR	9873244	PtrMemberAccess	sp -> user_datafmt		9873214	0					
ANR	9873245	Identifier	sp		9873214	0					
ANR	9873246	Identifier	user_datafmt		9873214	1					
ANR	9873247	ReturnStatement	return ( 1 ) ;	1685:2:42619:42629	9873214	11	True				
ANR	9873248	PrimaryExpression	1		9873214	0					
ANR	9873249	Label	default :	1686:1:42632:42639	9873214	12	True				
ANR	9873250	Identifier	default		9873214	0					
ANR	9873251	ReturnStatement	"return ( * sp -> vgetparent ) ( tif , tag , ap ) ;"	1687:2:42643:42681	9873214	13	True				
ANR	9873252	CallExpression	"( * sp -> vgetparent ) ( tif , tag , ap )"		9873214	0					
ANR	9873253	Callee	* sp -> vgetparent		9873214	0					
ANR	9873254	UnaryOperationExpression	* sp -> vgetparent		9873214	0					
ANR	9873255	UnaryOperator	*		9873214	0					
ANR	9873256	PtrMemberAccess	sp -> vgetparent		9873214	1					
ANR	9873257	Identifier	sp		9873214	0					
ANR	9873258	Identifier	vgetparent		9873214	1					
ANR	9873259	ArgumentList	tif		9873214	1					
ANR	9873260	Argument	tif		9873214	0					
ANR	9873261	Identifier	tif		9873214	0					
ANR	9873262	Argument	tag		9873214	1					
ANR	9873263	Identifier	tag		9873214	0					
ANR	9873264	Argument	ap		9873214	2					
ANR	9873265	Identifier	ap		9873214	0					
ANR	9873266	ReturnType	static int		9873214	1					
ANR	9873267	Identifier	LogLuvVGetField		9873214	2					
ANR	9873268	ParameterList	"TIFF * tif , uint32 tag , va_list ap"		9873214	3					
ANR	9873269	Parameter	TIFF * tif	1678:16:42445:42453	9873214	0	True				
ANR	9873270	ParameterType	TIFF *		9873214	0					
ANR	9873271	Identifier	tif		9873214	1					
ANR	9873272	Parameter	uint32 tag	1678:27:42456:42465	9873214	1	True				
ANR	9873273	ParameterType	uint32		9873214	0					
ANR	9873274	Identifier	tag		9873214	1					
ANR	9873275	Parameter	va_list ap	1678:39:42468:42477	9873214	2	True				
ANR	9873276	ParameterType	va_list		9873214	0					
ANR	9873277	Identifier	ap		9873214	1					
ANR	9873278	CFGEntryNode	ENTRY		9873214		True				
ANR	9873279	CFGExitNode	EXIT		9873214		True				
ANR	9873280	Symbol	tif		9873214						
ANR	9873281	Symbol	* sp		9873214						
ANR	9873282	Symbol	* sp -> vgetparent		9873214						
ANR	9873283	Symbol	tag		9873214						
ANR	9873284	Symbol	* tif		9873214						
ANR	9873285	Symbol	* * sp		9873214						
ANR	9873286	Symbol	sp -> vgetparent		9873214						
ANR	9873287	Symbol	sp		9873214						
ANR	9873288	Symbol	tif -> tif_data		9873214						
ANR	9873289	Symbol	ap		9873214						
ANR	9873290	DeclStmt									
ANR	9873291	Decl							const TIFFField	const TIFFField [ ]	LogLuvFields
ANR	9873292	Function	TIFFInitSGILog	1696:0:43014:44799							
ANR	9873293	FunctionDef	"TIFFInitSGILog (TIFF * tif , int scheme)"		9873292	0					
ANR	9873294	CompoundStatement		1698:0:43056:44799	9873292	0					
ANR	9873295	Statement	static	1699:1:43059:43064	9873292	0	True				
ANR	9873296	IdentifierDeclStatement	"const char module [ ] = ""TIFFInitSGILog"" ;"	1699:8:43066:43104	9873292	1	True				
ANR	9873297	IdentifierDecl	"module [ ] = ""TIFFInitSGILog"""		9873292	0					
ANR	9873298	IdentifierDeclType	const char [ ]		9873292	0					
ANR	9873299	Identifier	module		9873292	1					
ANR	9873300	AssignmentExpression	"module [ ] = ""TIFFInitSGILog"""		9873292	2		=			
ANR	9873301	Identifier	module		9873292	0					
ANR	9873302	PrimaryExpression	"""TIFFInitSGILog"""		9873292	1					
ANR	9873303	IdentifierDeclStatement	LogLuvState * sp ;	1700:1:43107:43122	9873292	2	True				
ANR	9873304	IdentifierDecl	* sp		9873292	0					
ANR	9873305	IdentifierDeclType	LogLuvState *		9873292	0					
ANR	9873306	Identifier	sp		9873292	1					
ANR	9873307	ExpressionStatement	assert ( scheme == COMPRESSION_SGILOG24 || scheme == COMPRESSION_SGILOG )	1702:1:43126:43196	9873292	3	True				
ANR	9873308	CallExpression	assert ( scheme == COMPRESSION_SGILOG24 || scheme == COMPRESSION_SGILOG )		9873292	0					
ANR	9873309	Callee	assert		9873292	0					
ANR	9873310	Identifier	assert		9873292	0					
ANR	9873311	ArgumentList	scheme == COMPRESSION_SGILOG24 || scheme == COMPRESSION_SGILOG		9873292	1					
ANR	9873312	Argument	scheme == COMPRESSION_SGILOG24 || scheme == COMPRESSION_SGILOG		9873292	0					
ANR	9873313	OrExpression	scheme == COMPRESSION_SGILOG24 || scheme == COMPRESSION_SGILOG		9873292	0		||			
ANR	9873314	EqualityExpression	scheme == COMPRESSION_SGILOG24		9873292	0		==			
ANR	9873315	Identifier	scheme		9873292	0					
ANR	9873316	Identifier	COMPRESSION_SGILOG24		9873292	1					
ANR	9873317	EqualityExpression	scheme == COMPRESSION_SGILOG		9873292	1		==			
ANR	9873318	Identifier	scheme		9873292	0					
ANR	9873319	Identifier	COMPRESSION_SGILOG		9873292	1					
ANR	9873320	IfStatement	"if ( ! _TIFFMergeFields ( tif , LogLuvFields , TIFFArrayCount ( LogLuvFields ) ) )"		9873292	4					
ANR	9873321	Condition	"! _TIFFMergeFields ( tif , LogLuvFields , TIFFArrayCount ( LogLuvFields ) )"	1707:5:43255:43329	9873292	0	True				
ANR	9873322	UnaryOperationExpression	"! _TIFFMergeFields ( tif , LogLuvFields , TIFFArrayCount ( LogLuvFields ) )"		9873292	0					
ANR	9873323	UnaryOperator	!		9873292	0					
ANR	9873324	CallExpression	"_TIFFMergeFields ( tif , LogLuvFields , TIFFArrayCount ( LogLuvFields ) )"		9873292	1					
ANR	9873325	Callee	_TIFFMergeFields		9873292	0					
ANR	9873326	Identifier	_TIFFMergeFields		9873292	0					
ANR	9873327	ArgumentList	tif		9873292	1					
ANR	9873328	Argument	tif		9873292	0					
ANR	9873329	Identifier	tif		9873292	0					
ANR	9873330	Argument	LogLuvFields		9873292	1					
ANR	9873331	Identifier	LogLuvFields		9873292	0					
ANR	9873332	Argument	TIFFArrayCount ( LogLuvFields )		9873292	2					
ANR	9873333	CallExpression	TIFFArrayCount ( LogLuvFields )		9873292	0					
ANR	9873334	Callee	TIFFArrayCount		9873292	0					
ANR	9873335	Identifier	TIFFArrayCount		9873292	0					
ANR	9873336	ArgumentList	LogLuvFields		9873292	1					
ANR	9873337	Argument	LogLuvFields		9873292	0					
ANR	9873338	Identifier	LogLuvFields		9873292	0					
ANR	9873339	CompoundStatement		11:40:275:275	9873292	1					
ANR	9873340	ExpressionStatement	"TIFFErrorExt ( tif -> tif_clientdata , module , ""Merging SGILog codec-specific tags failed"" )"	1709:2:43336:43428	9873292	0	True				
ANR	9873341	CallExpression	"TIFFErrorExt ( tif -> tif_clientdata , module , ""Merging SGILog codec-specific tags failed"" )"		9873292	0					
ANR	9873342	Callee	TIFFErrorExt		9873292	0					
ANR	9873343	Identifier	TIFFErrorExt		9873292	0					
ANR	9873344	ArgumentList	tif -> tif_clientdata		9873292	1					
ANR	9873345	Argument	tif -> tif_clientdata		9873292	0					
ANR	9873346	PtrMemberAccess	tif -> tif_clientdata		9873292	0					
ANR	9873347	Identifier	tif		9873292	0					
ANR	9873348	Identifier	tif_clientdata		9873292	1					
ANR	9873349	Argument	module		9873292	1					
ANR	9873350	Identifier	module		9873292	0					
ANR	9873351	Argument	"""Merging SGILog codec-specific tags failed"""		9873292	2					
ANR	9873352	PrimaryExpression	"""Merging SGILog codec-specific tags failed"""		9873292	0					
ANR	9873353	ReturnStatement	return 0 ;	1711:2:43432:43440	9873292	1	True				
ANR	9873354	PrimaryExpression	0		9873292	0					
ANR	9873355	ExpressionStatement	tif -> tif_data = ( uint8 * ) _TIFFmalloc ( sizeof ( LogLuvState ) )	1717:1:43527:43585	9873292	5	True				
ANR	9873356	AssignmentExpression	tif -> tif_data = ( uint8 * ) _TIFFmalloc ( sizeof ( LogLuvState ) )		9873292	0		=			
ANR	9873357	PtrMemberAccess	tif -> tif_data		9873292	0					
ANR	9873358	Identifier	tif		9873292	0					
ANR	9873359	Identifier	tif_data		9873292	1					
ANR	9873360	CastExpression	( uint8 * ) _TIFFmalloc ( sizeof ( LogLuvState ) )		9873292	1					
ANR	9873361	CastTarget	uint8 *		9873292	0					
ANR	9873362	CallExpression	_TIFFmalloc ( sizeof ( LogLuvState ) )		9873292	1					
ANR	9873363	Callee	_TIFFmalloc		9873292	0					
ANR	9873364	Identifier	_TIFFmalloc		9873292	0					
ANR	9873365	ArgumentList	sizeof ( LogLuvState )		9873292	1					
ANR	9873366	Argument	sizeof ( LogLuvState )		9873292	0					
ANR	9873367	SizeofExpression	sizeof ( LogLuvState )		9873292	0					
ANR	9873368	Sizeof	sizeof		9873292	0					
ANR	9873369	SizeofOperand	LogLuvState		9873292	1					
ANR	9873370	IfStatement	if ( tif -> tif_data == NULL )		9873292	6					
ANR	9873371	Condition	tif -> tif_data == NULL	1718:5:43592:43612	9873292	0	True				
ANR	9873372	EqualityExpression	tif -> tif_data == NULL		9873292	0		==			
ANR	9873373	PtrMemberAccess	tif -> tif_data		9873292	0					
ANR	9873374	Identifier	tif		9873292	0					
ANR	9873375	Identifier	tif_data		9873292	1					
ANR	9873376	Identifier	NULL		9873292	1					
ANR	9873377	GotoStatement	goto bad ;	1719:2:43617:43625	9873292	1	True				
ANR	9873378	Identifier	bad		9873292	0					
ANR	9873379	ExpressionStatement	sp = ( LogLuvState * ) tif -> tif_data	1720:1:43628:43661	9873292	7	True				
ANR	9873380	AssignmentExpression	sp = ( LogLuvState * ) tif -> tif_data		9873292	0		=			
ANR	9873381	Identifier	sp		9873292	0					
ANR	9873382	CastExpression	( LogLuvState * ) tif -> tif_data		9873292	1					
ANR	9873383	CastTarget	LogLuvState *		9873292	0					
ANR	9873384	PtrMemberAccess	tif -> tif_data		9873292	1					
ANR	9873385	Identifier	tif		9873292	0					
ANR	9873386	Identifier	tif_data		9873292	1					
ANR	9873387	ExpressionStatement	"_TIFFmemset ( ( void * ) sp , 0 , sizeof ( * sp ) )"	1721:1:43664:43703	9873292	8	True				
ANR	9873388	CallExpression	"_TIFFmemset ( ( void * ) sp , 0 , sizeof ( * sp ) )"		9873292	0					
ANR	9873389	Callee	_TIFFmemset		9873292	0					
ANR	9873390	Identifier	_TIFFmemset		9873292	0					
ANR	9873391	ArgumentList	( void * ) sp		9873292	1					
ANR	9873392	Argument	( void * ) sp		9873292	0					
ANR	9873393	CastExpression	( void * ) sp		9873292	0					
ANR	9873394	CastTarget	void *		9873292	0					
ANR	9873395	Identifier	sp		9873292	1					
ANR	9873396	Argument	0		9873292	1					
ANR	9873397	PrimaryExpression	0		9873292	0					
ANR	9873398	Argument	sizeof ( * sp )		9873292	2					
ANR	9873399	SizeofExpression	sizeof ( * sp )		9873292	0					
ANR	9873400	Sizeof	sizeof		9873292	0					
ANR	9873401	UnaryOperationExpression	* sp		9873292	1					
ANR	9873402	UnaryOperator	*		9873292	0					
ANR	9873403	Identifier	sp		9873292	1					
ANR	9873404	ExpressionStatement	sp -> user_datafmt = SGILOGDATAFMT_UNKNOWN	1722:1:43706:43746	9873292	9	True				
ANR	9873405	AssignmentExpression	sp -> user_datafmt = SGILOGDATAFMT_UNKNOWN		9873292	0		=			
ANR	9873406	PtrMemberAccess	sp -> user_datafmt		9873292	0					
ANR	9873407	Identifier	sp		9873292	0					
ANR	9873408	Identifier	user_datafmt		9873292	1					
ANR	9873409	Identifier	SGILOGDATAFMT_UNKNOWN		9873292	1					
ANR	9873410	ExpressionStatement	sp -> encode_meth = ( scheme == COMPRESSION_SGILOG24 ) ? SGILOGENCODE_RANDITHER : SGILOGENCODE_NODITHER	1723:1:43749:43853	9873292	10	True				
ANR	9873411	AssignmentExpression	sp -> encode_meth = ( scheme == COMPRESSION_SGILOG24 ) ? SGILOGENCODE_RANDITHER : SGILOGENCODE_NODITHER		9873292	0		=			
ANR	9873412	PtrMemberAccess	sp -> encode_meth		9873292	0					
ANR	9873413	Identifier	sp		9873292	0					
ANR	9873414	Identifier	encode_meth		9873292	1					
ANR	9873415	ConditionalExpression	( scheme == COMPRESSION_SGILOG24 ) ? SGILOGENCODE_RANDITHER : SGILOGENCODE_NODITHER		9873292	1					
ANR	9873416	Condition	scheme == COMPRESSION_SGILOG24		9873292	0					
ANR	9873417	EqualityExpression	scheme == COMPRESSION_SGILOG24		9873292	0		==			
ANR	9873418	Identifier	scheme		9873292	0					
ANR	9873419	Identifier	COMPRESSION_SGILOG24		9873292	1					
ANR	9873420	Identifier	SGILOGENCODE_RANDITHER		9873292	1					
ANR	9873421	Identifier	SGILOGENCODE_NODITHER		9873292	2					
ANR	9873422	ExpressionStatement	sp -> tfunc = _logLuvNop	1725:1:43856:43878	9873292	11	True				
ANR	9873423	AssignmentExpression	sp -> tfunc = _logLuvNop		9873292	0		=			
ANR	9873424	PtrMemberAccess	sp -> tfunc		9873292	0					
ANR	9873425	Identifier	sp		9873292	0					
ANR	9873426	Identifier	tfunc		9873292	1					
ANR	9873427	Identifier	_logLuvNop		9873292	1					
ANR	9873428	ExpressionStatement	tif -> tif_fixuptags = LogLuvFixupTags	1732:1:43993:44029	9873292	12	True				
ANR	9873429	AssignmentExpression	tif -> tif_fixuptags = LogLuvFixupTags		9873292	0		=			
ANR	9873430	PtrMemberAccess	tif -> tif_fixuptags		9873292	0					
ANR	9873431	Identifier	tif		9873292	0					
ANR	9873432	Identifier	tif_fixuptags		9873292	1					
ANR	9873433	Identifier	LogLuvFixupTags		9873292	1					
ANR	9873434	ExpressionStatement	tif -> tif_setupdecode = LogLuvSetupDecode	1733:1:44034:44074	9873292	13	True				
ANR	9873435	AssignmentExpression	tif -> tif_setupdecode = LogLuvSetupDecode		9873292	0		=			
ANR	9873436	PtrMemberAccess	tif -> tif_setupdecode		9873292	0					
ANR	9873437	Identifier	tif		9873292	0					
ANR	9873438	Identifier	tif_setupdecode		9873292	1					
ANR	9873439	Identifier	LogLuvSetupDecode		9873292	1					
ANR	9873440	ExpressionStatement	tif -> tif_decodestrip = LogLuvDecodeStrip	1734:1:44077:44117	9873292	14	True				
ANR	9873441	AssignmentExpression	tif -> tif_decodestrip = LogLuvDecodeStrip		9873292	0		=			
ANR	9873442	PtrMemberAccess	tif -> tif_decodestrip		9873292	0					
ANR	9873443	Identifier	tif		9873292	0					
ANR	9873444	Identifier	tif_decodestrip		9873292	1					
ANR	9873445	Identifier	LogLuvDecodeStrip		9873292	1					
ANR	9873446	ExpressionStatement	tif -> tif_decodetile = LogLuvDecodeTile	1735:1:44120:44158	9873292	15	True				
ANR	9873447	AssignmentExpression	tif -> tif_decodetile = LogLuvDecodeTile		9873292	0		=			
ANR	9873448	PtrMemberAccess	tif -> tif_decodetile		9873292	0					
ANR	9873449	Identifier	tif		9873292	0					
ANR	9873450	Identifier	tif_decodetile		9873292	1					
ANR	9873451	Identifier	LogLuvDecodeTile		9873292	1					
ANR	9873452	ExpressionStatement	tif -> tif_setupencode = LogLuvSetupEncode	1736:1:44161:44201	9873292	16	True				
ANR	9873453	AssignmentExpression	tif -> tif_setupencode = LogLuvSetupEncode		9873292	0		=			
ANR	9873454	PtrMemberAccess	tif -> tif_setupencode		9873292	0					
ANR	9873455	Identifier	tif		9873292	0					
ANR	9873456	Identifier	tif_setupencode		9873292	1					
ANR	9873457	Identifier	LogLuvSetupEncode		9873292	1					
ANR	9873458	ExpressionStatement	tif -> tif_encodestrip = LogLuvEncodeStrip	1737:1:44204:44244	9873292	17	True				
ANR	9873459	AssignmentExpression	tif -> tif_encodestrip = LogLuvEncodeStrip		9873292	0		=			
ANR	9873460	PtrMemberAccess	tif -> tif_encodestrip		9873292	0					
ANR	9873461	Identifier	tif		9873292	0					
ANR	9873462	Identifier	tif_encodestrip		9873292	1					
ANR	9873463	Identifier	LogLuvEncodeStrip		9873292	1					
ANR	9873464	ExpressionStatement	tif -> tif_encodetile = LogLuvEncodeTile	1738:1:44249:44287	9873292	18	True				
ANR	9873465	AssignmentExpression	tif -> tif_encodetile = LogLuvEncodeTile		9873292	0		=			
ANR	9873466	PtrMemberAccess	tif -> tif_encodetile		9873292	0					
ANR	9873467	Identifier	tif		9873292	0					
ANR	9873468	Identifier	tif_encodetile		9873292	1					
ANR	9873469	Identifier	LogLuvEncodeTile		9873292	1					
ANR	9873470	ExpressionStatement	tif -> tif_close = LogLuvClose	1739:1:44290:44318	9873292	19	True				
ANR	9873471	AssignmentExpression	tif -> tif_close = LogLuvClose		9873292	0		=			
ANR	9873472	PtrMemberAccess	tif -> tif_close		9873292	0					
ANR	9873473	Identifier	tif		9873292	0					
ANR	9873474	Identifier	tif_close		9873292	1					
ANR	9873475	Identifier	LogLuvClose		9873292	1					
ANR	9873476	ExpressionStatement	tif -> tif_cleanup = LogLuvCleanup	1740:1:44321:44353	9873292	20	True				
ANR	9873477	AssignmentExpression	tif -> tif_cleanup = LogLuvCleanup		9873292	0		=			
ANR	9873478	PtrMemberAccess	tif -> tif_cleanup		9873292	0					
ANR	9873479	Identifier	tif		9873292	0					
ANR	9873480	Identifier	tif_cleanup		9873292	1					
ANR	9873481	Identifier	LogLuvCleanup		9873292	1					
ANR	9873482	ExpressionStatement	sp -> vgetparent = tif -> tif_tagmethods . vgetfield	1745:1:44409:44455	9873292	21	True				
ANR	9873483	AssignmentExpression	sp -> vgetparent = tif -> tif_tagmethods . vgetfield		9873292	0		=			
ANR	9873484	PtrMemberAccess	sp -> vgetparent		9873292	0					
ANR	9873485	Identifier	sp		9873292	0					
ANR	9873486	Identifier	vgetparent		9873292	1					
ANR	9873487	MemberAccess	tif -> tif_tagmethods . vgetfield		9873292	1					
ANR	9873488	PtrMemberAccess	tif -> tif_tagmethods		9873292	0					
ANR	9873489	Identifier	tif		9873292	0					
ANR	9873490	Identifier	tif_tagmethods		9873292	1					
ANR	9873491	Identifier	vgetfield		9873292	1					
ANR	9873492	ExpressionStatement	tif -> tif_tagmethods . vgetfield = LogLuvVGetField	1746:1:44458:44505	9873292	22	True				
ANR	9873493	AssignmentExpression	tif -> tif_tagmethods . vgetfield = LogLuvVGetField		9873292	0		=			
ANR	9873494	MemberAccess	tif -> tif_tagmethods . vgetfield		9873292	0					
ANR	9873495	PtrMemberAccess	tif -> tif_tagmethods		9873292	0					
ANR	9873496	Identifier	tif		9873292	0					
ANR	9873497	Identifier	tif_tagmethods		9873292	1					
ANR	9873498	Identifier	vgetfield		9873292	1					
ANR	9873499	Identifier	LogLuvVGetField		9873292	1					
ANR	9873500	ExpressionStatement	sp -> vsetparent = tif -> tif_tagmethods . vsetfield	1747:1:44536:44582	9873292	23	True				
ANR	9873501	AssignmentExpression	sp -> vsetparent = tif -> tif_tagmethods . vsetfield		9873292	0		=			
ANR	9873502	PtrMemberAccess	sp -> vsetparent		9873292	0					
ANR	9873503	Identifier	sp		9873292	0					
ANR	9873504	Identifier	vsetparent		9873292	1					
ANR	9873505	MemberAccess	tif -> tif_tagmethods . vsetfield		9873292	1					
ANR	9873506	PtrMemberAccess	tif -> tif_tagmethods		9873292	0					
ANR	9873507	Identifier	tif		9873292	0					
ANR	9873508	Identifier	tif_tagmethods		9873292	1					
ANR	9873509	Identifier	vsetfield		9873292	1					
ANR	9873510	ExpressionStatement	tif -> tif_tagmethods . vsetfield = LogLuvVSetField	1748:1:44585:44632	9873292	24	True				
ANR	9873511	AssignmentExpression	tif -> tif_tagmethods . vsetfield = LogLuvVSetField		9873292	0		=			
ANR	9873512	MemberAccess	tif -> tif_tagmethods . vsetfield		9873292	0					
ANR	9873513	PtrMemberAccess	tif -> tif_tagmethods		9873292	0					
ANR	9873514	Identifier	tif		9873292	0					
ANR	9873515	Identifier	tif_tagmethods		9873292	1					
ANR	9873516	Identifier	vsetfield		9873292	1					
ANR	9873517	Identifier	LogLuvVSetField		9873292	1					
ANR	9873518	ReturnStatement	return ( 1 ) ;	1750:1:44664:44674	9873292	25	True				
ANR	9873519	PrimaryExpression	1		9873292	0					
ANR	9873520	Label	bad :	1751:0:44676:44679	9873292	26	True				
ANR	9873521	Identifier	bad		9873292	0					
ANR	9873522	ExpressionStatement	"TIFFErrorExt ( tif -> tif_clientdata , module , ""%s: No space for LogLuv state block"" , tif -> tif_name )"	1752:1:44682:44784	9873292	27	True				
ANR	9873523	CallExpression	"TIFFErrorExt ( tif -> tif_clientdata , module , ""%s: No space for LogLuv state block"" , tif -> tif_name )"		9873292	0					
ANR	9873524	Callee	TIFFErrorExt		9873292	0					
ANR	9873525	Identifier	TIFFErrorExt		9873292	0					
ANR	9873526	ArgumentList	tif -> tif_clientdata		9873292	1					
ANR	9873527	Argument	tif -> tif_clientdata		9873292	0					
ANR	9873528	PtrMemberAccess	tif -> tif_clientdata		9873292	0					
ANR	9873529	Identifier	tif		9873292	0					
ANR	9873530	Identifier	tif_clientdata		9873292	1					
ANR	9873531	Argument	module		9873292	1					
ANR	9873532	Identifier	module		9873292	0					
ANR	9873533	Argument	"""%s: No space for LogLuv state block"""		9873292	2					
ANR	9873534	PrimaryExpression	"""%s: No space for LogLuv state block"""		9873292	0					
ANR	9873535	Argument	tif -> tif_name		9873292	3					
ANR	9873536	PtrMemberAccess	tif -> tif_name		9873292	0					
ANR	9873537	Identifier	tif		9873292	0					
ANR	9873538	Identifier	tif_name		9873292	1					
ANR	9873539	ReturnStatement	return ( 0 ) ;	1754:1:44787:44797	9873292	28	True				
ANR	9873540	PrimaryExpression	0		9873292	0					
ANR	9873541	ReturnType	int		9873292	1					
ANR	9873542	Identifier	TIFFInitSGILog		9873292	2					
ANR	9873543	ParameterList	"TIFF * tif , int scheme"		9873292	3					
ANR	9873544	Parameter	TIFF * tif	1697:15:43033:43041	9873292	0	True				
ANR	9873545	ParameterType	TIFF *		9873292	0					
ANR	9873546	Identifier	tif		9873292	1					
ANR	9873547	Parameter	int scheme	1697:26:43044:43053	9873292	1	True				
ANR	9873548	ParameterType	int		9873292	0					
ANR	9873549	Identifier	scheme		9873292	1					
ANR	9873550	CFGEntryNode	ENTRY		9873292		True				
ANR	9873551	CFGExitNode	EXIT		9873292		True				
ANR	9873552	Symbol	* sp		9873292						
ANR	9873553	Symbol	COMPRESSION_SGILOG24		9873292						
ANR	9873554	Symbol	LogLuvCleanup		9873292						
ANR	9873555	Symbol	scheme		9873292						
ANR	9873556	Symbol	COMPRESSION_SGILOG		9873292						
ANR	9873557	Symbol	_TIFFMergeFields		9873292						
ANR	9873558	Symbol	sp -> user_datafmt		9873292						
ANR	9873559	Symbol	tif -> tif_encodestrip		9873292						
ANR	9873560	Symbol	sp -> vgetparent		9873292						
ANR	9873561	Symbol	tif		9873292						
ANR	9873562	Symbol	tif -> tif_cleanup		9873292						
ANR	9873563	Symbol	tif -> tif_tagmethods		9873292						
ANR	9873564	Symbol	LogLuvFields		9873292						
ANR	9873565	Symbol	LogLuvDecodeTile		9873292						
ANR	9873566	Symbol	SGILOGENCODE_RANDITHER		9873292						
ANR	9873567	Symbol	tif -> tif_fixuptags		9873292						
ANR	9873568	Symbol	tif -> tif_setupdecode		9873292						
ANR	9873569	Symbol	SGILOGDATAFMT_UNKNOWN		9873292						
ANR	9873570	Symbol	tif -> tif_tagmethods . vgetfield		9873292						
ANR	9873571	Symbol	sp -> encode_meth		9873292						
ANR	9873572	Symbol	tif -> tif_decodetile		9873292						
ANR	9873573	Symbol	sp -> tfunc		9873292						
ANR	9873574	Symbol	_logLuvNop		9873292						
ANR	9873575	Symbol	sp		9873292						
ANR	9873576	Symbol	tif -> tif_data		9873292						
ANR	9873577	Symbol	tif -> tif_decodestrip		9873292						
ANR	9873578	Symbol	LogLuvSetupDecode		9873292						
ANR	9873579	Symbol	tif -> tif_tagmethods . vsetfield		9873292						
ANR	9873580	Symbol	SGILOGENCODE_NODITHER		9873292						
ANR	9873581	Symbol	NULL		9873292						
ANR	9873582	Symbol	module		9873292						
ANR	9873583	Symbol	LogLuvEncodeTile		9873292						
ANR	9873584	Symbol	sp -> vsetparent		9873292						
ANR	9873585	Symbol	tif -> tif_clientdata		9873292						
ANR	9873586	Symbol	tif -> tif_encodetile		9873292						
ANR	9873587	Symbol	LogLuvVSetField		9873292						
ANR	9873588	Symbol	tif -> tif_setupencode		9873292						
ANR	9873589	Symbol	tif -> tif_name		9873292						
ANR	9873590	Symbol	TIFFArrayCount		9873292						
ANR	9873591	Symbol	LogLuvEncodeStrip		9873292						
ANR	9873592	Symbol	LogLuvDecodeStrip		9873292						
ANR	9873593	Symbol	_TIFFmalloc		9873292						
ANR	9873594	Symbol	tif -> tif_close		9873292						
ANR	9873595	Symbol	LogLuvVGetField		9873292						
ANR	9873596	Symbol	LogLuvFixupTags		9873292						
ANR	9873597	Symbol	LogLuvClose		9873292						
ANR	9873598	Symbol	* tif		9873292						
ANR	9873599	Symbol	LogLuvSetupEncode		9873292						
