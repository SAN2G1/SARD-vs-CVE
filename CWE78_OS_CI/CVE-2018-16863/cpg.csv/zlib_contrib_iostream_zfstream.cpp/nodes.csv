command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	11182485	File	data/converged/CVE-2018-16863_ghostpdl/zlib_contrib_iostream_zfstream.cpp								
ANR	11182486	Function	gzfilebuf :: gzfilebuf	4:0:24:101							
ANR	11182487	FunctionDef	gzfilebuf :: gzfilebuf ()		11182486	0					
ANR	11182488	CompoundStatement		8:0:99:101	11182486	0					
ANR	11182489	Identifier	gzfilebuf :: gzfilebuf		11182486	1					
ANR	11182490	ParameterList			11182486	2					
ANR	11182491	CFGEntryNode	ENTRY		11182486		True				
ANR	11182492	CFGExitNode	EXIT		11182486		True				
ANR	11182493	Function	gzfilebuf :: ~gzfilebuf	10:0:104:184							
ANR	11182494	FunctionDef	gzfilebuf :: ~gzfilebuf ()		11182493	0					
ANR	11182495	CompoundStatement		10:24:128:184	11182493	0					
ANR	11182496	ExpressionStatement	sync ( )	12:2:133:139	11182493	0	True				
ANR	11182497	CallExpression	sync ( )		11182493	0					
ANR	11182498	Callee	sync		11182493	0					
ANR	11182499	Identifier	sync		11182493	0					
ANR	11182500	ArgumentList			11182493	1					
ANR	11182501	IfStatement	if ( own_file_descriptor )		11182493	1					
ANR	11182502	Condition	own_file_descriptor	13:7:148:166	11182493	0	True				
ANR	11182503	Identifier	own_file_descriptor		11182493	0					
ANR	11182504	ExpressionStatement	close ( )	14:4:174:181	11182493	1	True				
ANR	11182505	CallExpression	close ( )		11182493	0					
ANR	11182506	Callee	close		11182493	0					
ANR	11182507	Identifier	close		11182493	0					
ANR	11182508	ArgumentList			11182493	1					
ANR	11182509	Identifier	gzfilebuf :: ~gzfilebuf		11182493	1					
ANR	11182510	ParameterList			11182493	2					
ANR	11182511	CFGEntryNode	ENTRY		11182493		True				
ANR	11182512	CFGExitNode	EXIT		11182493		True				
ANR	11182513	Symbol	own_file_descriptor		11182493						
ANR	11182514	Function	gzfilebuf :: open	18:0:187:894							
ANR	11182515	FunctionDef	"gzfilebuf :: open (const char * name , int io_mode)"		11182514	0					
ANR	11182516	CompoundStatement		19:42:275:894	11182514	0					
ANR	11182517	IfStatement	if ( is_open ( ) )		11182514	0					
ANR	11182518	Condition	is_open ( )	21:7:285:293	11182514	0	True				
ANR	11182519	CallExpression	is_open ( )		11182514	0					
ANR	11182520	Callee	is_open		11182514	0					
ANR	11182521	Identifier	is_open		11182514	0					
ANR	11182522	ArgumentList			11182514	1					
ANR	11182523	ReturnStatement	return NULL ;	22:4:301:312	11182514	1	True				
ANR	11182524	Identifier	NULL		11182514	0					
ANR	11182525	IdentifierDeclStatement	char char_mode [ 10 ] ;	24:2:317:335	11182514	1	True				
ANR	11182526	IdentifierDecl	char_mode [ 10 ]		11182514	0					
ANR	11182527	IdentifierDeclType	char [ 10 ]		11182514	0					
ANR	11182528	Identifier	char_mode		11182514	1					
ANR	11182529	PrimaryExpression	10		11182514	2					
ANR	11182530	IdentifierDeclStatement	char * p = char_mode ;	25:2:339:358	11182514	2	True				
ANR	11182531	IdentifierDecl	* p = char_mode		11182514	0					
ANR	11182532	IdentifierDeclType	char *		11182514	0					
ANR	11182533	Identifier	p		11182514	1					
ANR	11182534	AssignmentExpression	* p = char_mode		11182514	2		=			
ANR	11182535	Identifier	char_mode		11182514	0					
ANR	11182536	Identifier	char_mode		11182514	1					
ANR	11182537	IfStatement	if ( io_mode & ios :: in )		11182514	3					
ANR	11182538	Condition	io_mode & ios :: in	27:7:368:384	11182514	0	True				
ANR	11182539	BitAndExpression	io_mode & ios :: in		11182514	0		&			
ANR	11182540	Identifier	io_mode		11182514	0					
ANR	11182541	Identifier	ios :: in		11182514	1					
ANR	11182542	CompoundStatement		9:27:112:112	11182514	1					
ANR	11182543	ExpressionStatement	mode = ios :: in	28:4:394:408	11182514	0	True				
ANR	11182544	AssignmentExpression	mode = ios :: in		11182514	0		=			
ANR	11182545	Identifier	mode		11182514	0					
ANR	11182546	Identifier	ios :: in		11182514	1					
ANR	11182547	ExpressionStatement	* p ++ = 'r'	29:4:414:424	11182514	1	True				
ANR	11182548	AssignmentExpression	* p ++ = 'r'		11182514	0		=			
ANR	11182549	UnaryOperationExpression	* p ++		11182514	0					
ANR	11182550	UnaryOperator	*		11182514	0					
ANR	11182551	PostIncDecOperationExpression	p ++		11182514	1					
ANR	11182552	Identifier	p		11182514	0					
ANR	11182553	IncDec	++		11182514	1					
ANR	11182554	PrimaryExpression	'r'		11182514	1					
ANR	11182555	ElseStatement	else		11182514	0					
ANR	11182556	IfStatement	if ( io_mode & ios :: app )		11182514	0					
ANR	11182557	Condition	io_mode & ios :: app	30:14:440:457	11182514	0	True				
ANR	11182558	BitAndExpression	io_mode & ios :: app		11182514	0		&			
ANR	11182559	Identifier	io_mode		11182514	0					
ANR	11182560	Identifier	ios :: app		11182514	1					
ANR	11182561	CompoundStatement		12:35:185:185	11182514	1					
ANR	11182562	ExpressionStatement	mode = ios :: app	31:4:467:482	11182514	0	True				
ANR	11182563	AssignmentExpression	mode = ios :: app		11182514	0		=			
ANR	11182564	Identifier	mode		11182514	0					
ANR	11182565	Identifier	ios :: app		11182514	1					
ANR	11182566	ExpressionStatement	* p ++ = 'a'	32:4:488:498	11182514	1	True				
ANR	11182567	AssignmentExpression	* p ++ = 'a'		11182514	0		=			
ANR	11182568	UnaryOperationExpression	* p ++		11182514	0					
ANR	11182569	UnaryOperator	*		11182514	0					
ANR	11182570	PostIncDecOperationExpression	p ++		11182514	1					
ANR	11182571	Identifier	p		11182514	0					
ANR	11182572	IncDec	++		11182514	1					
ANR	11182573	PrimaryExpression	'a'		11182514	1					
ANR	11182574	ElseStatement	else		11182514	0					
ANR	11182575	CompoundStatement		15:9:233:233	11182514	0					
ANR	11182576	ExpressionStatement	mode = ios :: out	34:4:515:530	11182514	0	True				
ANR	11182577	AssignmentExpression	mode = ios :: out		11182514	0		=			
ANR	11182578	Identifier	mode		11182514	0					
ANR	11182579	Identifier	ios :: out		11182514	1					
ANR	11182580	ExpressionStatement	* p ++ = 'w'	35:4:536:546	11182514	1	True				
ANR	11182581	AssignmentExpression	* p ++ = 'w'		11182514	0		=			
ANR	11182582	UnaryOperationExpression	* p ++		11182514	0					
ANR	11182583	UnaryOperator	*		11182514	0					
ANR	11182584	PostIncDecOperationExpression	p ++		11182514	1					
ANR	11182585	Identifier	p		11182514	0					
ANR	11182586	IncDec	++		11182514	1					
ANR	11182587	PrimaryExpression	'w'		11182514	1					
ANR	11182588	IfStatement	if ( io_mode & ios :: binary )		11182514	4					
ANR	11182589	Condition	io_mode & ios :: binary	38:7:560:580	11182514	0	True				
ANR	11182590	BitAndExpression	io_mode & ios :: binary		11182514	0		&			
ANR	11182591	Identifier	io_mode		11182514	0					
ANR	11182592	Identifier	ios :: binary		11182514	1					
ANR	11182593	CompoundStatement		20:31:308:308	11182514	1					
ANR	11182594	ExpressionStatement	mode |= ios :: binary	39:4:590:609	11182514	0	True				
ANR	11182595	AssignmentExpression	mode |= ios :: binary		11182514	0		|=			
ANR	11182596	Identifier	mode		11182514	0					
ANR	11182597	Identifier	ios :: binary		11182514	1					
ANR	11182598	ExpressionStatement	* p ++ = 'b'	40:4:615:625	11182514	1	True				
ANR	11182599	AssignmentExpression	* p ++ = 'b'		11182514	0		=			
ANR	11182600	UnaryOperationExpression	* p ++		11182514	0					
ANR	11182601	UnaryOperator	*		11182514	0					
ANR	11182602	PostIncDecOperationExpression	p ++		11182514	1					
ANR	11182603	Identifier	p		11182514	0					
ANR	11182604	IncDec	++		11182514	1					
ANR	11182605	PrimaryExpression	'b'		11182514	1					
ANR	11182606	IfStatement	if ( io_mode & ( ios :: out | ios :: app ) )		11182514	5					
ANR	11182607	Condition	io_mode & ( ios :: out | ios :: app )	44:7:676:705	11182514	0	True				
ANR	11182608	BitAndExpression	io_mode & ( ios :: out | ios :: app )		11182514	0		&			
ANR	11182609	Identifier	io_mode		11182514	0					
ANR	11182610	InclusiveOrExpression	ios :: out | ios :: app		11182514	1		|			
ANR	11182611	Identifier	ios :: out		11182514	0					
ANR	11182612	Identifier	ios :: app		11182514	1					
ANR	11182613	CompoundStatement		26:39:432:432	11182514	1					
ANR	11182614	ExpressionStatement	* p ++ = '9'	45:4:714:724	11182514	0	True				
ANR	11182615	AssignmentExpression	* p ++ = '9'		11182514	0		=			
ANR	11182616	UnaryOperationExpression	* p ++		11182514	0					
ANR	11182617	UnaryOperator	*		11182514	0					
ANR	11182618	PostIncDecOperationExpression	p ++		11182514	1					
ANR	11182619	Identifier	p		11182514	0					
ANR	11182620	IncDec	++		11182514	1					
ANR	11182621	PrimaryExpression	'9'		11182514	1					
ANR	11182622	ExpressionStatement	* p = '\\0'	49:2:770:779	11182514	6	True				
ANR	11182623	AssignmentExpression	* p = '\\0'		11182514	0		=			
ANR	11182624	UnaryOperationExpression	* p		11182514	0					
ANR	11182625	UnaryOperator	*		11182514	0					
ANR	11182626	Identifier	p		11182514	1					
ANR	11182627	PrimaryExpression	'\\0'		11182514	1					
ANR	11182628	IfStatement	"if ( ( file = gzopen ( name , char_mode ) ) == NULL )"		11182514	7					
ANR	11182629	Condition	"( file = gzopen ( name , char_mode ) ) == NULL"	51:7:789:828	11182514	0	True				
ANR	11182630	EqualityExpression	"( file = gzopen ( name , char_mode ) ) == NULL"		11182514	0		==			
ANR	11182631	AssignmentExpression	"file = gzopen ( name , char_mode )"		11182514	0		=			
ANR	11182632	Identifier	file		11182514	0					
ANR	11182633	CallExpression	"gzopen ( name , char_mode )"		11182514	1					
ANR	11182634	Callee	gzopen		11182514	0					
ANR	11182635	Identifier	gzopen		11182514	0					
ANR	11182636	ArgumentList	name		11182514	1					
ANR	11182637	Argument	name		11182514	0					
ANR	11182638	Identifier	name		11182514	0					
ANR	11182639	Argument	char_mode		11182514	1					
ANR	11182640	Identifier	char_mode		11182514	0					
ANR	11182641	Identifier	NULL		11182514	1					
ANR	11182642	ReturnStatement	return NULL ;	52:4:836:847	11182514	1	True				
ANR	11182643	Identifier	NULL		11182514	0					
ANR	11182644	ExpressionStatement	own_file_descriptor = 1	54:2:852:875	11182514	8	True				
ANR	11182645	AssignmentExpression	own_file_descriptor = 1		11182514	0		=			
ANR	11182646	Identifier	own_file_descriptor		11182514	0					
ANR	11182647	PrimaryExpression	1		11182514	1					
ANR	11182648	ReturnStatement	return this ;	56:2:880:891	11182514	9	True				
ANR	11182649	Identifier	this		11182514	0					
ANR	11182650	ReturnType	gzfilebuf *		11182514	1					
ANR	11182651	Identifier	gzfilebuf :: open		11182514	2					
ANR	11182652	ParameterList	"const char * name , int io_mode"		11182514	3					
ANR	11182653	Parameter	const char * name	18:28:215:230	11182514	0	True				
ANR	11182654	ParameterType	const char *		11182514	0					
ANR	11182655	Identifier	name		11182514	1					
ANR	11182656	Parameter	int io_mode	19:28:261:271	11182514	1	True				
ANR	11182657	ParameterType	int		11182514	0					
ANR	11182658	Identifier	io_mode		11182514	1					
ANR	11182659	CFGEntryNode	ENTRY		11182514		True				
ANR	11182660	CFGExitNode	EXIT		11182514		True				
ANR	11182661	Symbol	ios :: app		11182514						
ANR	11182662	Symbol	NULL		11182514						
ANR	11182663	Symbol	is_open		11182514						
ANR	11182664	Symbol	* p ++		11182514						
ANR	11182665	Symbol	char_mode		11182514						
ANR	11182666	Symbol	this		11182514						
ANR	11182667	Symbol	own_file_descriptor		11182514						
ANR	11182668	Symbol	p		11182514						
ANR	11182669	Symbol	mode		11182514						
ANR	11182670	Symbol	gzopen		11182514						
ANR	11182671	Symbol	file		11182514						
ANR	11182672	Symbol	ios :: in		11182514						
ANR	11182673	Symbol	ios :: out		11182514						
ANR	11182674	Symbol	name		11182514						
ANR	11182675	Symbol	io_mode		11182514						
ANR	11182676	Symbol	* p		11182514						
ANR	11182677	Symbol	ios :: binary		11182514						
ANR	11182678	Function	gzfilebuf :: attach	60:0:897:1623							
ANR	11182679	FunctionDef	"gzfilebuf :: attach (int file_descriptor , int io_mode)"		11182678	0					
ANR	11182680	CompoundStatement		61:44:992:1623	11182678	0					
ANR	11182681	IfStatement	if ( is_open ( ) )		11182678	0					
ANR	11182682	Condition	is_open ( )	63:7:1002:1010	11182678	0	True				
ANR	11182683	CallExpression	is_open ( )		11182678	0					
ANR	11182684	Callee	is_open		11182678	0					
ANR	11182685	Identifier	is_open		11182678	0					
ANR	11182686	ArgumentList			11182678	1					
ANR	11182687	ReturnStatement	return NULL ;	64:4:1018:1029	11182678	1	True				
ANR	11182688	Identifier	NULL		11182678	0					
ANR	11182689	IdentifierDeclStatement	char char_mode [ 10 ] ;	66:2:1034:1052	11182678	1	True				
ANR	11182690	IdentifierDecl	char_mode [ 10 ]		11182678	0					
ANR	11182691	IdentifierDeclType	char [ 10 ]		11182678	0					
ANR	11182692	Identifier	char_mode		11182678	1					
ANR	11182693	PrimaryExpression	10		11182678	2					
ANR	11182694	IdentifierDeclStatement	char * p = char_mode ;	67:2:1056:1075	11182678	2	True				
ANR	11182695	IdentifierDecl	* p = char_mode		11182678	0					
ANR	11182696	IdentifierDeclType	char *		11182678	0					
ANR	11182697	Identifier	p		11182678	1					
ANR	11182698	AssignmentExpression	* p = char_mode		11182678	2		=			
ANR	11182699	Identifier	char_mode		11182678	0					
ANR	11182700	Identifier	char_mode		11182678	1					
ANR	11182701	IfStatement	if ( io_mode & ios :: in )		11182678	3					
ANR	11182702	Condition	io_mode & ios :: in	69:7:1085:1101	11182678	0	True				
ANR	11182703	BitAndExpression	io_mode & ios :: in		11182678	0		&			
ANR	11182704	Identifier	io_mode		11182678	0					
ANR	11182705	Identifier	ios :: in		11182678	1					
ANR	11182706	CompoundStatement		9:27:112:112	11182678	1					
ANR	11182707	ExpressionStatement	mode = ios :: in	70:4:1111:1125	11182678	0	True				
ANR	11182708	AssignmentExpression	mode = ios :: in		11182678	0		=			
ANR	11182709	Identifier	mode		11182678	0					
ANR	11182710	Identifier	ios :: in		11182678	1					
ANR	11182711	ExpressionStatement	* p ++ = 'r'	71:4:1131:1141	11182678	1	True				
ANR	11182712	AssignmentExpression	* p ++ = 'r'		11182678	0		=			
ANR	11182713	UnaryOperationExpression	* p ++		11182678	0					
ANR	11182714	UnaryOperator	*		11182678	0					
ANR	11182715	PostIncDecOperationExpression	p ++		11182678	1					
ANR	11182716	Identifier	p		11182678	0					
ANR	11182717	IncDec	++		11182678	1					
ANR	11182718	PrimaryExpression	'r'		11182678	1					
ANR	11182719	ElseStatement	else		11182678	0					
ANR	11182720	IfStatement	if ( io_mode & ios :: app )		11182678	0					
ANR	11182721	Condition	io_mode & ios :: app	72:14:1157:1174	11182678	0	True				
ANR	11182722	BitAndExpression	io_mode & ios :: app		11182678	0		&			
ANR	11182723	Identifier	io_mode		11182678	0					
ANR	11182724	Identifier	ios :: app		11182678	1					
ANR	11182725	CompoundStatement		12:35:185:185	11182678	1					
ANR	11182726	ExpressionStatement	mode = ios :: app	73:4:1184:1199	11182678	0	True				
ANR	11182727	AssignmentExpression	mode = ios :: app		11182678	0		=			
ANR	11182728	Identifier	mode		11182678	0					
ANR	11182729	Identifier	ios :: app		11182678	1					
ANR	11182730	ExpressionStatement	* p ++ = 'a'	74:4:1205:1215	11182678	1	True				
ANR	11182731	AssignmentExpression	* p ++ = 'a'		11182678	0		=			
ANR	11182732	UnaryOperationExpression	* p ++		11182678	0					
ANR	11182733	UnaryOperator	*		11182678	0					
ANR	11182734	PostIncDecOperationExpression	p ++		11182678	1					
ANR	11182735	Identifier	p		11182678	0					
ANR	11182736	IncDec	++		11182678	1					
ANR	11182737	PrimaryExpression	'a'		11182678	1					
ANR	11182738	ElseStatement	else		11182678	0					
ANR	11182739	CompoundStatement		15:9:233:233	11182678	0					
ANR	11182740	ExpressionStatement	mode = ios :: out	76:4:1232:1247	11182678	0	True				
ANR	11182741	AssignmentExpression	mode = ios :: out		11182678	0		=			
ANR	11182742	Identifier	mode		11182678	0					
ANR	11182743	Identifier	ios :: out		11182678	1					
ANR	11182744	ExpressionStatement	* p ++ = 'w'	77:4:1253:1263	11182678	1	True				
ANR	11182745	AssignmentExpression	* p ++ = 'w'		11182678	0		=			
ANR	11182746	UnaryOperationExpression	* p ++		11182678	0					
ANR	11182747	UnaryOperator	*		11182678	0					
ANR	11182748	PostIncDecOperationExpression	p ++		11182678	1					
ANR	11182749	Identifier	p		11182678	0					
ANR	11182750	IncDec	++		11182678	1					
ANR	11182751	PrimaryExpression	'w'		11182678	1					
ANR	11182752	IfStatement	if ( io_mode & ios :: binary )		11182678	4					
ANR	11182753	Condition	io_mode & ios :: binary	80:7:1277:1297	11182678	0	True				
ANR	11182754	BitAndExpression	io_mode & ios :: binary		11182678	0		&			
ANR	11182755	Identifier	io_mode		11182678	0					
ANR	11182756	Identifier	ios :: binary		11182678	1					
ANR	11182757	CompoundStatement		20:31:308:308	11182678	1					
ANR	11182758	ExpressionStatement	mode |= ios :: binary	81:4:1307:1326	11182678	0	True				
ANR	11182759	AssignmentExpression	mode |= ios :: binary		11182678	0		|=			
ANR	11182760	Identifier	mode		11182678	0					
ANR	11182761	Identifier	ios :: binary		11182678	1					
ANR	11182762	ExpressionStatement	* p ++ = 'b'	82:4:1332:1342	11182678	1	True				
ANR	11182763	AssignmentExpression	* p ++ = 'b'		11182678	0		=			
ANR	11182764	UnaryOperationExpression	* p ++		11182678	0					
ANR	11182765	UnaryOperator	*		11182678	0					
ANR	11182766	PostIncDecOperationExpression	p ++		11182678	1					
ANR	11182767	Identifier	p		11182678	0					
ANR	11182768	IncDec	++		11182678	1					
ANR	11182769	PrimaryExpression	'b'		11182678	1					
ANR	11182770	IfStatement	if ( io_mode & ( ios :: out | ios :: app ) )		11182678	5					
ANR	11182771	Condition	io_mode & ( ios :: out | ios :: app )	86:7:1393:1422	11182678	0	True				
ANR	11182772	BitAndExpression	io_mode & ( ios :: out | ios :: app )		11182678	0		&			
ANR	11182773	Identifier	io_mode		11182678	0					
ANR	11182774	InclusiveOrExpression	ios :: out | ios :: app		11182678	1		|			
ANR	11182775	Identifier	ios :: out		11182678	0					
ANR	11182776	Identifier	ios :: app		11182678	1					
ANR	11182777	CompoundStatement		26:39:432:432	11182678	1					
ANR	11182778	ExpressionStatement	* p ++ = '9'	87:4:1431:1441	11182678	0	True				
ANR	11182779	AssignmentExpression	* p ++ = '9'		11182678	0		=			
ANR	11182780	UnaryOperationExpression	* p ++		11182678	0					
ANR	11182781	UnaryOperator	*		11182678	0					
ANR	11182782	PostIncDecOperationExpression	p ++		11182678	1					
ANR	11182783	Identifier	p		11182678	0					
ANR	11182784	IncDec	++		11182678	1					
ANR	11182785	PrimaryExpression	'9'		11182678	1					
ANR	11182786	ExpressionStatement	* p = '\\0'	91:2:1487:1496	11182678	6	True				
ANR	11182787	AssignmentExpression	* p = '\\0'		11182678	0		=			
ANR	11182788	UnaryOperationExpression	* p		11182678	0					
ANR	11182789	UnaryOperator	*		11182678	0					
ANR	11182790	Identifier	p		11182678	1					
ANR	11182791	PrimaryExpression	'\\0'		11182678	1					
ANR	11182792	IfStatement	"if ( ( file = gzdopen ( file_descriptor , char_mode ) ) == NULL )"		11182678	7					
ANR	11182793	Condition	"( file = gzdopen ( file_descriptor , char_mode ) ) == NULL"	93:7:1506:1557	11182678	0	True				
ANR	11182794	EqualityExpression	"( file = gzdopen ( file_descriptor , char_mode ) ) == NULL"		11182678	0		==			
ANR	11182795	AssignmentExpression	"file = gzdopen ( file_descriptor , char_mode )"		11182678	0		=			
ANR	11182796	Identifier	file		11182678	0					
ANR	11182797	CallExpression	"gzdopen ( file_descriptor , char_mode )"		11182678	1					
ANR	11182798	Callee	gzdopen		11182678	0					
ANR	11182799	Identifier	gzdopen		11182678	0					
ANR	11182800	ArgumentList	file_descriptor		11182678	1					
ANR	11182801	Argument	file_descriptor		11182678	0					
ANR	11182802	Identifier	file_descriptor		11182678	0					
ANR	11182803	Argument	char_mode		11182678	1					
ANR	11182804	Identifier	char_mode		11182678	0					
ANR	11182805	Identifier	NULL		11182678	1					
ANR	11182806	ReturnStatement	return NULL ;	94:4:1565:1576	11182678	1	True				
ANR	11182807	Identifier	NULL		11182678	0					
ANR	11182808	ExpressionStatement	own_file_descriptor = 0	96:2:1581:1604	11182678	8	True				
ANR	11182809	AssignmentExpression	own_file_descriptor = 0		11182678	0		=			
ANR	11182810	Identifier	own_file_descriptor		11182678	0					
ANR	11182811	PrimaryExpression	0		11182678	1					
ANR	11182812	ReturnStatement	return this ;	98:2:1609:1620	11182678	9	True				
ANR	11182813	Identifier	this		11182678	0					
ANR	11182814	ReturnType	gzfilebuf *		11182678	1					
ANR	11182815	Identifier	gzfilebuf :: attach		11182678	2					
ANR	11182816	ParameterList	"int file_descriptor , int io_mode"		11182678	3					
ANR	11182817	Parameter	int file_descriptor	60:30:927:945	11182678	0	True				
ANR	11182818	ParameterType	int		11182678	0					
ANR	11182819	Identifier	file_descriptor		11182678	1					
ANR	11182820	Parameter	int io_mode	61:30:978:988	11182678	1	True				
ANR	11182821	ParameterType	int		11182678	0					
ANR	11182822	Identifier	io_mode		11182678	1					
ANR	11182823	CFGEntryNode	ENTRY		11182678		True				
ANR	11182824	CFGExitNode	EXIT		11182678		True				
ANR	11182825	Symbol	ios :: app		11182678						
ANR	11182826	Symbol	NULL		11182678						
ANR	11182827	Symbol	is_open		11182678						
ANR	11182828	Symbol	* p ++		11182678						
ANR	11182829	Symbol	char_mode		11182678						
ANR	11182830	Symbol	this		11182678						
ANR	11182831	Symbol	own_file_descriptor		11182678						
ANR	11182832	Symbol	p		11182678						
ANR	11182833	Symbol	mode		11182678						
ANR	11182834	Symbol	file		11182678						
ANR	11182835	Symbol	ios :: in		11182678						
ANR	11182836	Symbol	ios :: out		11182678						
ANR	11182837	Symbol	file_descriptor		11182678						
ANR	11182838	Symbol	io_mode		11182678						
ANR	11182839	Symbol	* p		11182678						
ANR	11182840	Symbol	gzdopen		11182678						
ANR	11182841	Symbol	ios :: binary		11182678						
ANR	11182842	Function	gzfilebuf :: close	102:0:1626:1753							
ANR	11182843	FunctionDef	gzfilebuf :: close ()		11182842	0					
ANR	11182844	CompoundStatement		102:30:1656:1753	11182842	0					
ANR	11182845	IfStatement	if ( is_open ( ) )		11182842	0					
ANR	11182846	Condition	is_open ( )	104:7:1666:1674	11182842	0	True				
ANR	11182847	CallExpression	is_open ( )		11182842	0					
ANR	11182848	Callee	is_open		11182842	0					
ANR	11182849	Identifier	is_open		11182842	0					
ANR	11182850	ArgumentList			11182842	1					
ANR	11182851	CompoundStatement		3:19:21:21	11182842	1					
ANR	11182852	ExpressionStatement	sync ( )	106:4:1685:1691	11182842	0	True				
ANR	11182853	CallExpression	sync ( )		11182842	0					
ANR	11182854	Callee	sync		11182842	0					
ANR	11182855	Identifier	sync		11182842	0					
ANR	11182856	ArgumentList			11182842	1					
ANR	11182857	ExpressionStatement	gzclose ( file )	107:4:1697:1712	11182842	1	True				
ANR	11182858	CallExpression	gzclose ( file )		11182842	0					
ANR	11182859	Callee	gzclose		11182842	0					
ANR	11182860	Identifier	gzclose		11182842	0					
ANR	11182861	ArgumentList	file		11182842	1					
ANR	11182862	Argument	file		11182842	0					
ANR	11182863	Identifier	file		11182842	0					
ANR	11182864	ExpressionStatement	file = NULL	108:4:1718:1729	11182842	2	True				
ANR	11182865	AssignmentExpression	file = NULL		11182842	0		=			
ANR	11182866	Identifier	file		11182842	0					
ANR	11182867	Identifier	NULL		11182842	1					
ANR	11182868	ReturnStatement	return this ;	112:2:1739:1750	11182842	1	True				
ANR	11182869	Identifier	this		11182842	0					
ANR	11182870	ReturnType	gzfilebuf *		11182842	1					
ANR	11182871	Identifier	gzfilebuf :: close		11182842	2					
ANR	11182872	ParameterList			11182842	3					
ANR	11182873	CFGEntryNode	ENTRY		11182842		True				
ANR	11182874	CFGExitNode	EXIT		11182842		True				
ANR	11182875	Symbol	file		11182842						
ANR	11182876	Symbol	NULL		11182842						
ANR	11182877	Symbol	is_open		11182842						
ANR	11182878	Symbol	this		11182842						
ANR	11182879	Function	gzfilebuf :: setcompressionlevel	116:0:1756:1857							
ANR	11182880	FunctionDef	gzfilebuf :: setcompressionlevel (int comp_level)		11182879	0					
ANR	11182881	CompoundStatement		116:53:1809:1857	11182879	0					
ANR	11182882	ReturnStatement	"return gzsetparams ( file , comp_level , - 2 ) ;"	118:2:1814:1854	11182879	0	True				
ANR	11182883	CallExpression	"gzsetparams ( file , comp_level , - 2 )"		11182879	0					
ANR	11182884	Callee	gzsetparams		11182879	0					
ANR	11182885	Identifier	gzsetparams		11182879	0					
ANR	11182886	ArgumentList	file		11182879	1					
ANR	11182887	Argument	file		11182879	0					
ANR	11182888	Identifier	file		11182879	0					
ANR	11182889	Argument	comp_level		11182879	1					
ANR	11182890	Identifier	comp_level		11182879	0					
ANR	11182891	Argument	- 2		11182879	2					
ANR	11182892	UnaryOperationExpression	- 2		11182879	0					
ANR	11182893	UnaryOperator	-		11182879	0					
ANR	11182894	PrimaryExpression	2		11182879	1					
ANR	11182895	ReturnType	int		11182879	1					
ANR	11182896	Identifier	gzfilebuf :: setcompressionlevel		11182879	2					
ANR	11182897	ParameterList	int comp_level		11182879	3					
ANR	11182898	Parameter	int comp_level	116:36:1792:1805	11182879	0	True				
ANR	11182899	ParameterType	int		11182879	0					
ANR	11182900	Identifier	comp_level		11182879	1					
ANR	11182901	CFGEntryNode	ENTRY		11182879		True				
ANR	11182902	CFGExitNode	EXIT		11182879		True				
ANR	11182903	Symbol	gzsetparams		11182879						
ANR	11182904	Symbol	file		11182879						
ANR	11182905	Symbol	comp_level		11182879						
ANR	11182906	Function	gzfilebuf :: setcompressionstrategy	122:0:1860:1970							
ANR	11182907	FunctionDef	gzfilebuf :: setcompressionstrategy (int comp_strategy)		11182906	0					
ANR	11182908	CompoundStatement		122:59:1919:1970	11182906	0					
ANR	11182909	ReturnStatement	"return gzsetparams ( file , - 2 , comp_strategy ) ;"	124:2:1924:1967	11182906	0	True				
ANR	11182910	CallExpression	"gzsetparams ( file , - 2 , comp_strategy )"		11182906	0					
ANR	11182911	Callee	gzsetparams		11182906	0					
ANR	11182912	Identifier	gzsetparams		11182906	0					
ANR	11182913	ArgumentList	file		11182906	1					
ANR	11182914	Argument	file		11182906	0					
ANR	11182915	Identifier	file		11182906	0					
ANR	11182916	Argument	- 2		11182906	1					
ANR	11182917	UnaryOperationExpression	- 2		11182906	0					
ANR	11182918	UnaryOperator	-		11182906	0					
ANR	11182919	PrimaryExpression	2		11182906	1					
ANR	11182920	Argument	comp_strategy		11182906	2					
ANR	11182921	Identifier	comp_strategy		11182906	0					
ANR	11182922	ReturnType	int		11182906	1					
ANR	11182923	Identifier	gzfilebuf :: setcompressionstrategy		11182906	2					
ANR	11182924	ParameterList	int comp_strategy		11182906	3					
ANR	11182925	Parameter	int comp_strategy	122:39:1899:1915	11182906	0	True				
ANR	11182926	ParameterType	int		11182906	0					
ANR	11182927	Identifier	comp_strategy		11182906	1					
ANR	11182928	CFGEntryNode	ENTRY		11182906		True				
ANR	11182929	CFGExitNode	EXIT		11182906		True				
ANR	11182930	Symbol	file		11182906						
ANR	11182931	Symbol	gzsetparams		11182906						
ANR	11182932	Symbol	comp_strategy		11182906						
ANR	11182933	Function	gzfilebuf :: seekoff	129:0:1974:2079							
ANR	11182934	FunctionDef	"gzfilebuf :: seekoff (streamoff off , ios :: seek_dir dir , int which)"		11182933	0					
ANR	11182935	CompoundStatement		129:76:2050:2079	11182933	0					
ANR	11182936	ReturnStatement	return streampos ( EOF ) ;	131:2:2055:2076	11182933	0	True				
ANR	11182937	CallExpression	streampos ( EOF )		11182933	0					
ANR	11182938	Callee	streampos		11182933	0					
ANR	11182939	Identifier	streampos		11182933	0					
ANR	11182940	ArgumentList	EOF		11182933	1					
ANR	11182941	Argument	EOF		11182933	0					
ANR	11182942	Identifier	EOF		11182933	0					
ANR	11182943	ReturnType	streampos		11182933	1					
ANR	11182944	Identifier	gzfilebuf :: seekoff		11182933	2					
ANR	11182945	ParameterList	"streamoff off , ios :: seek_dir dir , int which"		11182933	3					
ANR	11182946	Parameter	streamoff off	129:30:2004:2016	11182933	0	True				
ANR	11182947	ParameterType	streamoff		11182933	0					
ANR	11182948	Identifier	off		11182933	1					
ANR	11182949	Parameter	ios :: seek_dir dir	129:45:2019:2035	11182933	1	True				
ANR	11182950	ParameterType	ios :: seek_dir		11182933	0					
ANR	11182951	Identifier	dir		11182933	1					
ANR	11182952	Parameter	int which	129:64:2038:2046	11182933	2	True				
ANR	11182953	ParameterType	int		11182933	0					
ANR	11182954	Identifier	which		11182933	1					
ANR	11182955	CFGEntryNode	ENTRY		11182933		True				
ANR	11182956	CFGExitNode	EXIT		11182933		True				
ANR	11182957	Symbol	which		11182933						
ANR	11182958	Symbol	streampos		11182933						
ANR	11182959	Symbol	dir		11182933						
ANR	11182960	Symbol	EOF		11182933						
ANR	11182961	Symbol	off		11182933						
ANR	11182962	Function	gzfilebuf :: underflow	135:0:2082:2703							
ANR	11182963	FunctionDef	gzfilebuf :: underflow ()		11182962	0					
ANR	11182964	CompoundStatement		135:27:2109:2703	11182962	0					
ANR	11182965	IfStatement	if ( ! is_open ( ) || ! ( mode & ios :: in ) )		11182962	0					
ANR	11182966	Condition	! is_open ( ) || ! ( mode & ios :: in )	138:7:2175:2205	11182962	0	True				
ANR	11182967	OrExpression	! is_open ( ) || ! ( mode & ios :: in )		11182962	0		||			
ANR	11182968	UnaryOperationExpression	! is_open ( )		11182962	0					
ANR	11182969	UnaryOperator	!		11182962	0					
ANR	11182970	CallExpression	is_open ( )		11182962	1					
ANR	11182971	Callee	is_open		11182962	0					
ANR	11182972	Identifier	is_open		11182962	0					
ANR	11182973	ArgumentList			11182962	1					
ANR	11182974	UnaryOperationExpression	! ( mode & ios :: in )		11182962	1					
ANR	11182975	UnaryOperator	!		11182962	0					
ANR	11182976	BitAndExpression	mode & ios :: in		11182962	1		&			
ANR	11182977	Identifier	mode		11182962	0					
ANR	11182978	Identifier	ios :: in		11182962	1					
ANR	11182979	ReturnStatement	return EOF ;	139:4:2213:2223	11182962	1	True				
ANR	11182980	Identifier	EOF		11182962	0					
ANR	11182981	IfStatement	if ( ! base ( ) )		11182962	1					
ANR	11182982	Condition	! base ( )	142:7:2280:2286	11182962	0	True				
ANR	11182983	UnaryOperationExpression	! base ( )		11182962	0					
ANR	11182984	UnaryOperator	!		11182962	0					
ANR	11182985	CallExpression	base ( )		11182962	1					
ANR	11182986	Callee	base		11182962	0					
ANR	11182987	Identifier	base		11182962	0					
ANR	11182988	ArgumentList			11182962	1					
ANR	11182989	CompoundStatement		8:17:180:180	11182962	1					
ANR	11182990	IfStatement	if ( ( allocate ( ) ) == EOF )		11182962	0					
ANR	11182991	Condition	( allocate ( ) ) == EOF	144:9:2302:2320	11182962	0	True				
ANR	11182992	EqualityExpression	( allocate ( ) ) == EOF		11182962	0		==			
ANR	11182993	CallExpression	allocate ( )		11182962	0					
ANR	11182994	Callee	allocate		11182962	0					
ANR	11182995	Identifier	allocate		11182962	0					
ANR	11182996	ArgumentList			11182962	1					
ANR	11182997	Identifier	EOF		11182962	1					
ANR	11182998	ReturnStatement	return EOF ;	145:6:2330:2340	11182962	1	True				
ANR	11182999	Identifier	EOF		11182962	0					
ANR	11183000	ExpressionStatement	"setp ( 0 , 0 )"	146:4:2346:2355	11182962	1	True				
ANR	11183001	CallExpression	"setp ( 0 , 0 )"		11182962	0					
ANR	11183002	Callee	setp		11182962	0					
ANR	11183003	Identifier	setp		11182962	0					
ANR	11183004	ArgumentList	0		11182962	1					
ANR	11183005	Argument	0		11182962	0					
ANR	11183006	PrimaryExpression	0		11182962	0					
ANR	11183007	Argument	0		11182962	1					
ANR	11183008	PrimaryExpression	0		11182962	0					
ANR	11183009	ElseStatement	else		11182962	0					
ANR	11183010	CompoundStatement		14:9:257:257	11182962	0					
ANR	11183011	IfStatement	if ( in_avail ( ) )		11182962	0					
ANR	11183012	Condition	in_avail ( )	150:9:2379:2388	11182962	0	True				
ANR	11183013	CallExpression	in_avail ( )		11182962	0					
ANR	11183014	Callee	in_avail		11182962	0					
ANR	11183015	Identifier	in_avail		11182962	0					
ANR	11183016	ArgumentList			11182962	1					
ANR	11183017	ReturnStatement	return ( unsigned char ) * gptr ( ) ;	151:6:2398:2428	11182962	1	True				
ANR	11183018	CastExpression	( unsigned char ) * gptr ( )		11182962	0					
ANR	11183019	CastTarget	unsigned char		11182962	0					
ANR	11183020	UnaryOperationExpression	* gptr ( )		11182962	1					
ANR	11183021	UnaryOperator	*		11182962	0					
ANR	11183022	CallExpression	gptr ( )		11182962	1					
ANR	11183023	Callee	gptr		11182962	0					
ANR	11183024	Identifier	gptr		11182962	0					
ANR	11183025	ArgumentList			11182962	1					
ANR	11183026	IfStatement	if ( out_waiting ( ) )		11182962	1					
ANR	11183027	Condition	out_waiting ( )	153:9:2440:2452	11182962	0	True				
ANR	11183028	CallExpression	out_waiting ( )		11182962	0					
ANR	11183029	Callee	out_waiting		11182962	0					
ANR	11183030	Identifier	out_waiting		11182962	0					
ANR	11183031	ArgumentList			11182962	1					
ANR	11183032	CompoundStatement		19:25:346:346	11182962	1					
ANR	11183033	IfStatement	if ( flushbuf ( ) == EOF )		11182962	0					
ANR	11183034	Condition	flushbuf ( ) == EOF	154:11:2469:2485	11182962	0	True				
ANR	11183035	EqualityExpression	flushbuf ( ) == EOF		11182962	0		==			
ANR	11183036	CallExpression	flushbuf ( )		11182962	0					
ANR	11183037	Callee	flushbuf		11182962	0					
ANR	11183038	Identifier	flushbuf		11182962	0					
ANR	11183039	ArgumentList			11182962	1					
ANR	11183040	Identifier	EOF		11182962	1					
ANR	11183041	ReturnStatement	return EOF ;	155:8:2497:2507	11182962	1	True				
ANR	11183042	Identifier	EOF		11182962	0					
ANR	11183043	IdentifierDeclStatement	int result = fillbuf ( ) ;	162:2:2557:2579	11182962	2	True				
ANR	11183044	IdentifierDecl	result = fillbuf ( )		11182962	0					
ANR	11183045	IdentifierDeclType	int		11182962	0					
ANR	11183046	Identifier	result		11182962	1					
ANR	11183047	AssignmentExpression	result = fillbuf ( )		11182962	2		=			
ANR	11183048	Identifier	result		11182962	0					
ANR	11183049	CallExpression	fillbuf ( )		11182962	1					
ANR	11183050	Callee	fillbuf		11182962	0					
ANR	11183051	Identifier	fillbuf		11182962	0					
ANR	11183052	ArgumentList			11182962	1					
ANR	11183053	IfStatement	if ( result == EOF )		11182962	3					
ANR	11183054	Condition	result == EOF	163:7:2588:2600	11182962	0	True				
ANR	11183055	EqualityExpression	result == EOF		11182962	0		==			
ANR	11183056	Identifier	result		11182962	0					
ANR	11183057	Identifier	EOF		11182962	1					
ANR	11183058	CompoundStatement		29:23:494:494	11182962	1					
ANR	11183059	ExpressionStatement	"setg ( 0 , 0 , 0 )"	165:4:2634:2645	11182962	0	True				
ANR	11183060	CallExpression	"setg ( 0 , 0 , 0 )"		11182962	0					
ANR	11183061	Callee	setg		11182962	0					
ANR	11183062	Identifier	setg		11182962	0					
ANR	11183063	ArgumentList	0		11182962	1					
ANR	11183064	Argument	0		11182962	0					
ANR	11183065	PrimaryExpression	0		11182962	0					
ANR	11183066	Argument	0		11182962	1					
ANR	11183067	PrimaryExpression	0		11182962	0					
ANR	11183068	Argument	0		11182962	2					
ANR	11183069	PrimaryExpression	0		11182962	0					
ANR	11183070	ReturnStatement	return EOF ;	166:4:2651:2661	11182962	1	True				
ANR	11183071	Identifier	EOF		11182962	0					
ANR	11183072	ReturnStatement	return ( unsigned char ) * gptr ( ) ;	169:2:2670:2700	11182962	4	True				
ANR	11183073	CastExpression	( unsigned char ) * gptr ( )		11182962	0					
ANR	11183074	CastTarget	unsigned char		11182962	0					
ANR	11183075	UnaryOperationExpression	* gptr ( )		11182962	1					
ANR	11183076	UnaryOperator	*		11182962	0					
ANR	11183077	CallExpression	gptr ( )		11182962	1					
ANR	11183078	Callee	gptr		11182962	0					
ANR	11183079	Identifier	gptr		11182962	0					
ANR	11183080	ArgumentList			11182962	1					
ANR	11183081	ReturnType	int		11182962	1					
ANR	11183082	Identifier	gzfilebuf :: underflow		11182962	2					
ANR	11183083	ParameterList			11182962	3					
ANR	11183084	CFGEntryNode	ENTRY		11182962		True				
ANR	11183085	CFGExitNode	EXIT		11182962		True				
ANR	11183086	Symbol	* gptr		11182962						
ANR	11183087	Symbol	is_open		11182962						
ANR	11183088	Symbol	in_avail		11182962						
ANR	11183089	Symbol	out_waiting		11182962						
ANR	11183090	Symbol	flushbuf		11182962						
ANR	11183091	Symbol	mode		11182962						
ANR	11183092	Symbol	result		11182962						
ANR	11183093	Symbol	allocate		11182962						
ANR	11183094	Symbol	ios :: in		11182962						
ANR	11183095	Symbol	gptr		11182962						
ANR	11183096	Symbol	* gptr ( )		11182962						
ANR	11183097	Symbol	fillbuf		11182962						
ANR	11183098	Symbol	EOF		11182962						
ANR	11183099	Symbol	base		11182962						
ANR	11183100	Function	gzfilebuf :: overflow	173:0:2706:3149							
ANR	11183101	FunctionDef	gzfilebuf :: overflow (int c)		11183100	0					
ANR	11183102	CompoundStatement		173:33:2739:3149	11183100	0					
ANR	11183103	IfStatement	if ( ! is_open ( ) || ! ( mode & ios :: out ) )		11183100	0					
ANR	11183104	Condition	! is_open ( ) || ! ( mode & ios :: out )	175:7:2749:2780	11183100	0	True				
ANR	11183105	OrExpression	! is_open ( ) || ! ( mode & ios :: out )		11183100	0		||			
ANR	11183106	UnaryOperationExpression	! is_open ( )		11183100	0					
ANR	11183107	UnaryOperator	!		11183100	0					
ANR	11183108	CallExpression	is_open ( )		11183100	1					
ANR	11183109	Callee	is_open		11183100	0					
ANR	11183110	Identifier	is_open		11183100	0					
ANR	11183111	ArgumentList			11183100	1					
ANR	11183112	UnaryOperationExpression	! ( mode & ios :: out )		11183100	1					
ANR	11183113	UnaryOperator	!		11183100	0					
ANR	11183114	BitAndExpression	mode & ios :: out		11183100	1		&			
ANR	11183115	Identifier	mode		11183100	0					
ANR	11183116	Identifier	ios :: out		11183100	1					
ANR	11183117	ReturnStatement	return EOF ;	176:4:2788:2798	11183100	1	True				
ANR	11183118	Identifier	EOF		11183100	0					
ANR	11183119	IfStatement	if ( ! base ( ) )		11183100	1					
ANR	11183120	Condition	! base ( )	178:7:2808:2814	11183100	0	True				
ANR	11183121	UnaryOperationExpression	! base ( )		11183100	0					
ANR	11183122	UnaryOperator	!		11183100	0					
ANR	11183123	CallExpression	base ( )		11183100	1					
ANR	11183124	Callee	base		11183100	0					
ANR	11183125	Identifier	base		11183100	0					
ANR	11183126	ArgumentList			11183100	1					
ANR	11183127	CompoundStatement		6:17:78:78	11183100	1					
ANR	11183128	IfStatement	if ( allocate ( ) == EOF )		11183100	0					
ANR	11183129	Condition	allocate ( ) == EOF	179:9:2829:2845	11183100	0	True				
ANR	11183130	EqualityExpression	allocate ( ) == EOF		11183100	0		==			
ANR	11183131	CallExpression	allocate ( )		11183100	0					
ANR	11183132	Callee	allocate		11183100	0					
ANR	11183133	Identifier	allocate		11183100	0					
ANR	11183134	ArgumentList			11183100	1					
ANR	11183135	Identifier	EOF		11183100	1					
ANR	11183136	ReturnStatement	return EOF ;	180:6:2855:2865	11183100	1	True				
ANR	11183137	Identifier	EOF		11183100	0					
ANR	11183138	ExpressionStatement	"setg ( 0 , 0 , 0 )"	181:4:2871:2882	11183100	1	True				
ANR	11183139	CallExpression	"setg ( 0 , 0 , 0 )"		11183100	0					
ANR	11183140	Callee	setg		11183100	0					
ANR	11183141	Identifier	setg		11183100	0					
ANR	11183142	ArgumentList	0		11183100	1					
ANR	11183143	Argument	0		11183100	0					
ANR	11183144	PrimaryExpression	0		11183100	0					
ANR	11183145	Argument	0		11183100	1					
ANR	11183146	PrimaryExpression	0		11183100	0					
ANR	11183147	Argument	0		11183100	2					
ANR	11183148	PrimaryExpression	0		11183100	0					
ANR	11183149	ElseStatement	else		11183100	0					
ANR	11183150	CompoundStatement		10:9:153:153	11183100	0					
ANR	11183151	IfStatement	if ( in_avail ( ) )		11183100	0					
ANR	11183152	Condition	in_avail ( )	183:8:2903:2912	11183100	0	True				
ANR	11183153	CallExpression	in_avail ( )		11183100	0					
ANR	11183154	Callee	in_avail		11183100	0					
ANR	11183155	Identifier	in_avail		11183100	0					
ANR	11183156	ArgumentList			11183100	1					
ANR	11183157	CompoundStatement		11:20:175:175	11183100	1					
ANR	11183158	ReturnStatement	return EOF ;	184:8:2925:2935	11183100	0	True				
ANR	11183159	Identifier	EOF		11183100	0					
ANR	11183160	IfStatement	if ( out_waiting ( ) )		11183100	1					
ANR	11183161	Condition	out_waiting ( )	186:8:2951:2963	11183100	0	True				
ANR	11183162	CallExpression	out_waiting ( )		11183100	0					
ANR	11183163	Callee	out_waiting		11183100	0					
ANR	11183164	Identifier	out_waiting		11183100	0					
ANR	11183165	ArgumentList			11183100	1					
ANR	11183166	CompoundStatement		14:23:226:226	11183100	1					
ANR	11183167	IfStatement	if ( flushbuf ( ) == EOF )		11183100	0					
ANR	11183168	Condition	flushbuf ( ) == EOF	187:10:2978:2994	11183100	0	True				
ANR	11183169	EqualityExpression	flushbuf ( ) == EOF		11183100	0		==			
ANR	11183170	CallExpression	flushbuf ( )		11183100	0					
ANR	11183171	Callee	flushbuf		11183100	0					
ANR	11183172	Identifier	flushbuf		11183100	0					
ANR	11183173	ArgumentList			11183100	1					
ANR	11183174	Identifier	EOF		11183100	1					
ANR	11183175	ReturnStatement	return EOF ;	188:8:3005:3015	11183100	1	True				
ANR	11183176	Identifier	EOF		11183100	0					
ANR	11183177	IdentifierDeclStatement	int bl = blen ( ) ;	192:2:3030:3045	11183100	2	True				
ANR	11183178	IdentifierDecl	bl = blen ( )		11183100	0					
ANR	11183179	IdentifierDeclType	int		11183100	0					
ANR	11183180	Identifier	bl		11183100	1					
ANR	11183181	AssignmentExpression	bl = blen ( )		11183100	2		=			
ANR	11183182	Identifier	bl		11183100	0					
ANR	11183183	CallExpression	blen ( )		11183100	1					
ANR	11183184	Callee	blen		11183100	0					
ANR	11183185	Identifier	blen		11183100	0					
ANR	11183186	ArgumentList			11183100	1					
ANR	11183187	ExpressionStatement	"setp ( base ( ) , base ( ) + bl )"	193:2:3049:3075	11183100	3	True				
ANR	11183188	CallExpression	"setp ( base ( ) , base ( ) + bl )"		11183100	0					
ANR	11183189	Callee	setp		11183100	0					
ANR	11183190	Identifier	setp		11183100	0					
ANR	11183191	ArgumentList	base ( )		11183100	1					
ANR	11183192	Argument	base ( )		11183100	0					
ANR	11183193	CallExpression	base ( )		11183100	0					
ANR	11183194	Callee	base		11183100	0					
ANR	11183195	Identifier	base		11183100	0					
ANR	11183196	ArgumentList			11183100	1					
ANR	11183197	Argument	base ( ) + bl		11183100	1					
ANR	11183198	AdditiveExpression	base ( ) + bl		11183100	0		+			
ANR	11183199	CallExpression	base ( )		11183100	0					
ANR	11183200	Callee	base		11183100	0					
ANR	11183201	Identifier	base		11183100	0					
ANR	11183202	ArgumentList			11183100	1					
ANR	11183203	Identifier	bl		11183100	1					
ANR	11183204	IfStatement	if ( c != EOF )		11183100	4					
ANR	11183205	Condition	c != EOF	195:7:3085:3092	11183100	0	True				
ANR	11183206	EqualityExpression	c != EOF		11183100	0		!=			
ANR	11183207	Identifier	c		11183100	0					
ANR	11183208	Identifier	EOF		11183100	1					
ANR	11183209	CompoundStatement		23:18:356:356	11183100	1					
ANR	11183210	ExpressionStatement	* pptr ( ) = c	197:4:3103:3114	11183100	0	True				
ANR	11183211	AssignmentExpression	* pptr ( ) = c		11183100	0		=			
ANR	11183212	UnaryOperationExpression	* pptr ( )		11183100	0					
ANR	11183213	UnaryOperator	*		11183100	0					
ANR	11183214	CallExpression	pptr ( )		11183100	1					
ANR	11183215	Callee	pptr		11183100	0					
ANR	11183216	Identifier	pptr		11183100	0					
ANR	11183217	ArgumentList			11183100	1					
ANR	11183218	Identifier	c		11183100	1					
ANR	11183219	ExpressionStatement	pbump ( 1 )	198:4:3120:3128	11183100	1	True				
ANR	11183220	CallExpression	pbump ( 1 )		11183100	0					
ANR	11183221	Callee	pbump		11183100	0					
ANR	11183222	Identifier	pbump		11183100	0					
ANR	11183223	ArgumentList	1		11183100	1					
ANR	11183224	Argument	1		11183100	0					
ANR	11183225	PrimaryExpression	1		11183100	0					
ANR	11183226	ReturnStatement	return 0 ;	202:2:3138:3146	11183100	5	True				
ANR	11183227	PrimaryExpression	0		11183100	0					
ANR	11183228	ReturnType	int		11183100	1					
ANR	11183229	Identifier	gzfilebuf :: overflow		11183100	2					
ANR	11183230	ParameterList	int c		11183100	3					
ANR	11183231	Parameter	int c	173:25:2731:2735	11183100	0	True				
ANR	11183232	ParameterType	int		11183100	0					
ANR	11183233	Identifier	c		11183100	1					
ANR	11183234	CFGEntryNode	ENTRY		11183100		True				
ANR	11183235	CFGExitNode	EXIT		11183100		True				
ANR	11183236	Symbol	c		11183100						
ANR	11183237	Symbol	is_open		11183100						
ANR	11183238	Symbol	in_avail		11183100						
ANR	11183239	Symbol	out_waiting		11183100						
ANR	11183240	Symbol	flushbuf		11183100						
ANR	11183241	Symbol	bl		11183100						
ANR	11183242	Symbol	pptr		11183100						
ANR	11183243	Symbol	mode		11183100						
ANR	11183244	Symbol	allocate		11183100						
ANR	11183245	Symbol	ios :: out		11183100						
ANR	11183246	Symbol	* pptr		11183100						
ANR	11183247	Symbol	* pptr ( )		11183100						
ANR	11183248	Symbol	EOF		11183100						
ANR	11183249	Symbol	blen		11183100						
ANR	11183250	Symbol	base		11183100						
ANR	11183251	Function	gzfilebuf :: sync	206:0:3152:3274							
ANR	11183252	FunctionDef	gzfilebuf :: sync ()		11183251	0					
ANR	11183253	CompoundStatement		206:22:3174:3274	11183251	0					
ANR	11183254	IfStatement	if ( ! is_open ( ) )		11183251	0					
ANR	11183255	Condition	! is_open ( )	208:7:3184:3193	11183251	0	True				
ANR	11183256	UnaryOperationExpression	! is_open ( )		11183251	0					
ANR	11183257	UnaryOperator	!		11183251	0					
ANR	11183258	CallExpression	is_open ( )		11183251	1					
ANR	11183259	Callee	is_open		11183251	0					
ANR	11183260	Identifier	is_open		11183251	0					
ANR	11183261	ArgumentList			11183251	1					
ANR	11183262	ReturnStatement	return EOF ;	209:4:3201:3211	11183251	1	True				
ANR	11183263	Identifier	EOF		11183251	0					
ANR	11183264	IfStatement	if ( out_waiting ( ) )		11183251	1					
ANR	11183265	Condition	out_waiting ( )	211:7:3221:3233	11183251	0	True				
ANR	11183266	CallExpression	out_waiting ( )		11183251	0					
ANR	11183267	Callee	out_waiting		11183251	0					
ANR	11183268	Identifier	out_waiting		11183251	0					
ANR	11183269	ArgumentList			11183251	1					
ANR	11183270	ReturnStatement	return flushbuf ( ) ;	212:4:3241:3258	11183251	1	True				
ANR	11183271	CallExpression	flushbuf ( )		11183251	0					
ANR	11183272	Callee	flushbuf		11183251	0					
ANR	11183273	Identifier	flushbuf		11183251	0					
ANR	11183274	ArgumentList			11183251	1					
ANR	11183275	ReturnStatement	return 0 ;	214:2:3263:3271	11183251	2	True				
ANR	11183276	PrimaryExpression	0		11183251	0					
ANR	11183277	ReturnType	int		11183251	1					
ANR	11183278	Identifier	gzfilebuf :: sync		11183251	2					
ANR	11183279	ParameterList			11183251	3					
ANR	11183280	CFGEntryNode	ENTRY		11183251		True				
ANR	11183281	CFGExitNode	EXIT		11183251		True				
ANR	11183282	Symbol	is_open		11183251						
ANR	11183283	Symbol	out_waiting		11183251						
ANR	11183284	Symbol	flushbuf		11183251						
ANR	11183285	Symbol	EOF		11183251						
ANR	11183286	Function	gzfilebuf :: flushbuf	218:0:3277:3439							
ANR	11183287	FunctionDef	gzfilebuf :: flushbuf ()		11183286	0					
ANR	11183288	CompoundStatement		218:26:3303:3439	11183286	0					
ANR	11183289	IdentifierDeclStatement	int n ;	220:2:3308:3313	11183286	0	True				
ANR	11183290	IdentifierDecl	n		11183286	0					
ANR	11183291	IdentifierDeclType	int		11183286	0					
ANR	11183292	Identifier	n		11183286	1					
ANR	11183293	IdentifierDeclStatement	char * q ;	221:2:3317:3324	11183286	1	True				
ANR	11183294	IdentifierDecl	* q		11183286	0					
ANR	11183295	IdentifierDeclType	char *		11183286	0					
ANR	11183296	Identifier	q		11183286	1					
ANR	11183297	ExpressionStatement	q = pbase ( )	223:2:3329:3340	11183286	2	True				
ANR	11183298	AssignmentExpression	q = pbase ( )		11183286	0		=			
ANR	11183299	Identifier	q		11183286	0					
ANR	11183300	CallExpression	pbase ( )		11183286	1					
ANR	11183301	Callee	pbase		11183286	0					
ANR	11183302	Identifier	pbase		11183286	0					
ANR	11183303	ArgumentList			11183286	1					
ANR	11183304	ExpressionStatement	n = pptr ( ) - q	224:2:3344:3358	11183286	3	True				
ANR	11183305	AssignmentExpression	n = pptr ( ) - q		11183286	0		=			
ANR	11183306	Identifier	n		11183286	0					
ANR	11183307	AdditiveExpression	pptr ( ) - q		11183286	1		-			
ANR	11183308	CallExpression	pptr ( )		11183286	0					
ANR	11183309	Callee	pptr		11183286	0					
ANR	11183310	Identifier	pptr		11183286	0					
ANR	11183311	ArgumentList			11183286	1					
ANR	11183312	Identifier	q		11183286	1					
ANR	11183313	IfStatement	"if ( gzwrite ( file , q , n ) < n )"		11183286	4					
ANR	11183314	Condition	"gzwrite ( file , q , n ) < n"	226:7:3368:3391	11183286	0	True				
ANR	11183315	RelationalExpression	"gzwrite ( file , q , n ) < n"		11183286	0		<			
ANR	11183316	CallExpression	"gzwrite ( file , q , n )"		11183286	0					
ANR	11183317	Callee	gzwrite		11183286	0					
ANR	11183318	Identifier	gzwrite		11183286	0					
ANR	11183319	ArgumentList	file		11183286	1					
ANR	11183320	Argument	file		11183286	0					
ANR	11183321	Identifier	file		11183286	0					
ANR	11183322	Argument	q		11183286	1					
ANR	11183323	Identifier	q		11183286	0					
ANR	11183324	Argument	n		11183286	2					
ANR	11183325	Identifier	n		11183286	0					
ANR	11183326	Identifier	n		11183286	1					
ANR	11183327	ReturnStatement	return EOF ;	227:4:3399:3409	11183286	1	True				
ANR	11183328	Identifier	EOF		11183286	0					
ANR	11183329	ExpressionStatement	"setp ( 0 , 0 )"	229:2:3414:3423	11183286	5	True				
ANR	11183330	CallExpression	"setp ( 0 , 0 )"		11183286	0					
ANR	11183331	Callee	setp		11183286	0					
ANR	11183332	Identifier	setp		11183286	0					
ANR	11183333	ArgumentList	0		11183286	1					
ANR	11183334	Argument	0		11183286	0					
ANR	11183335	PrimaryExpression	0		11183286	0					
ANR	11183336	Argument	0		11183286	1					
ANR	11183337	PrimaryExpression	0		11183286	0					
ANR	11183338	ReturnStatement	return 0 ;	231:2:3428:3436	11183286	6	True				
ANR	11183339	PrimaryExpression	0		11183286	0					
ANR	11183340	ReturnType	int		11183286	1					
ANR	11183341	Identifier	gzfilebuf :: flushbuf		11183286	2					
ANR	11183342	ParameterList			11183286	3					
ANR	11183343	CFGEntryNode	ENTRY		11183286		True				
ANR	11183344	CFGExitNode	EXIT		11183286		True				
ANR	11183345	Symbol	q		11183286						
ANR	11183346	Symbol	file		11183286						
ANR	11183347	Symbol	pbase		11183286						
ANR	11183348	Symbol	pptr		11183286						
ANR	11183349	Symbol	EOF		11183286						
ANR	11183350	Symbol	n		11183286						
ANR	11183351	Symbol	gzwrite		11183286						
ANR	11183352	Function	gzfilebuf :: fillbuf	235:0:3442:3652							
ANR	11183353	FunctionDef	gzfilebuf :: fillbuf ()		11183352	0					
ANR	11183354	CompoundStatement		235:25:3467:3652	11183352	0					
ANR	11183355	IdentifierDeclStatement	int required ;	237:2:3472:3484	11183352	0	True				
ANR	11183356	IdentifierDecl	required		11183352	0					
ANR	11183357	IdentifierDeclType	int		11183352	0					
ANR	11183358	Identifier	required		11183352	1					
ANR	11183359	IdentifierDeclStatement	char * p ;	238:2:3488:3495	11183352	1	True				
ANR	11183360	IdentifierDecl	* p		11183352	0					
ANR	11183361	IdentifierDeclType	char *		11183352	0					
ANR	11183362	Identifier	p		11183352	1					
ANR	11183363	ExpressionStatement	p = base ( )	240:2:3500:3510	11183352	2	True				
ANR	11183364	AssignmentExpression	p = base ( )		11183352	0		=			
ANR	11183365	Identifier	p		11183352	0					
ANR	11183366	CallExpression	base ( )		11183352	1					
ANR	11183367	Callee	base		11183352	0					
ANR	11183368	Identifier	base		11183352	0					
ANR	11183369	ArgumentList			11183352	1					
ANR	11183370	ExpressionStatement	required = blen ( )	242:2:3515:3532	11183352	3	True				
ANR	11183371	AssignmentExpression	required = blen ( )		11183352	0		=			
ANR	11183372	Identifier	required		11183352	0					
ANR	11183373	CallExpression	blen ( )		11183352	1					
ANR	11183374	Callee	blen		11183352	0					
ANR	11183375	Identifier	blen		11183352	0					
ANR	11183376	ArgumentList			11183352	1					
ANR	11183377	IdentifierDeclStatement	"int t = gzread ( file , p , required ) ;"	244:2:3537:3572	11183352	4	True				
ANR	11183378	IdentifierDecl	"t = gzread ( file , p , required )"		11183352	0					
ANR	11183379	IdentifierDeclType	int		11183352	0					
ANR	11183380	Identifier	t		11183352	1					
ANR	11183381	AssignmentExpression	"t = gzread ( file , p , required )"		11183352	2		=			
ANR	11183382	Identifier	t		11183352	0					
ANR	11183383	CallExpression	"gzread ( file , p , required )"		11183352	1					
ANR	11183384	Callee	gzread		11183352	0					
ANR	11183385	Identifier	gzread		11183352	0					
ANR	11183386	ArgumentList	file		11183352	1					
ANR	11183387	Argument	file		11183352	0					
ANR	11183388	Identifier	file		11183352	0					
ANR	11183389	Argument	p		11183352	1					
ANR	11183390	Identifier	p		11183352	0					
ANR	11183391	Argument	required		11183352	2					
ANR	11183392	Identifier	required		11183352	0					
ANR	11183393	IfStatement	if ( t <= 0 )		11183352	5					
ANR	11183394	Condition	t <= 0	246:7:3582:3587	11183352	0	True				
ANR	11183395	RelationalExpression	t <= 0		11183352	0		<=			
ANR	11183396	Identifier	t		11183352	0					
ANR	11183397	PrimaryExpression	0		11183352	1					
ANR	11183398	ReturnStatement	return EOF ;	246:15:3590:3600	11183352	1	True				
ANR	11183399	Identifier	EOF		11183352	0					
ANR	11183400	ExpressionStatement	"setg ( base ( ) , base ( ) , base ( ) + t )"	248:2:3605:3636	11183352	6	True				
ANR	11183401	CallExpression	"setg ( base ( ) , base ( ) , base ( ) + t )"		11183352	0					
ANR	11183402	Callee	setg		11183352	0					
ANR	11183403	Identifier	setg		11183352	0					
ANR	11183404	ArgumentList	base ( )		11183352	1					
ANR	11183405	Argument	base ( )		11183352	0					
ANR	11183406	CallExpression	base ( )		11183352	0					
ANR	11183407	Callee	base		11183352	0					
ANR	11183408	Identifier	base		11183352	0					
ANR	11183409	ArgumentList			11183352	1					
ANR	11183410	Argument	base ( )		11183352	1					
ANR	11183411	CallExpression	base ( )		11183352	0					
ANR	11183412	Callee	base		11183352	0					
ANR	11183413	Identifier	base		11183352	0					
ANR	11183414	ArgumentList			11183352	1					
ANR	11183415	Argument	base ( ) + t		11183352	2					
ANR	11183416	AdditiveExpression	base ( ) + t		11183352	0		+			
ANR	11183417	CallExpression	base ( )		11183352	0					
ANR	11183418	Callee	base		11183352	0					
ANR	11183419	Identifier	base		11183352	0					
ANR	11183420	ArgumentList			11183352	1					
ANR	11183421	Identifier	t		11183352	1					
ANR	11183422	ReturnStatement	return t ;	250:2:3641:3649	11183352	7	True				
ANR	11183423	Identifier	t		11183352	0					
ANR	11183424	ReturnType	int		11183352	1					
ANR	11183425	Identifier	gzfilebuf :: fillbuf		11183352	2					
ANR	11183426	ParameterList			11183352	3					
ANR	11183427	CFGEntryNode	ENTRY		11183352		True				
ANR	11183428	CFGExitNode	EXIT		11183352		True				
ANR	11183429	Symbol	p		11183352						
ANR	11183430	Symbol	file		11183352						
ANR	11183431	Symbol	t		11183352						
ANR	11183432	Symbol	gzread		11183352						
ANR	11183433	Symbol	blen		11183352						
ANR	11183434	Symbol	EOF		11183352						
ANR	11183435	Symbol	required		11183352						
ANR	11183436	Symbol	base		11183352						
ANR	11183437	Function	gzfilestream_common :: gzfilestream_common	254:0:3655:3740							
ANR	11183438	FunctionDef	gzfilestream_common :: gzfilestream_common ()		11183437	0					
ANR	11183439	CompoundStatement		256:0:3738:3740	11183437	0					
ANR	11183440	Identifier	gzfilestream_common :: gzfilestream_common		11183437	1					
ANR	11183441	ParameterList			11183437	2					
ANR	11183442	CFGEntryNode	ENTRY		11183437		True				
ANR	11183443	CFGExitNode	EXIT		11183437		True				
ANR	11183444	Function	gzfilestream_common :: ~gzfilestream_common	258:0:3743:3789							
ANR	11183445	FunctionDef	gzfilestream_common :: ~gzfilestream_common ()		11183444	0					
ANR	11183446	CompoundStatement		259:0:3787:3789	11183444	0					
ANR	11183447	Identifier	gzfilestream_common :: ~gzfilestream_common		11183444	1					
ANR	11183448	ParameterList			11183444	2					
ANR	11183449	CFGEntryNode	ENTRY		11183444		True				
ANR	11183450	CFGExitNode	EXIT		11183444		True				
ANR	11183451	Function	gzfilestream_common :: attach	261:0:3792:3951							
ANR	11183452	FunctionDef	"gzfilestream_common :: attach (int fd , int io_mode)"		11183451	0					
ANR	11183453	CompoundStatement		261:56:3848:3951	11183451	0					
ANR	11183454	IfStatement	"if ( ! buffer . attach ( fd , io_mode ) )"		11183451	0					
ANR	11183455	Condition	"! buffer . attach ( fd , io_mode )"	263:7:3858:3885	11183451	0	True				
ANR	11183456	UnaryOperationExpression	"! buffer . attach ( fd , io_mode )"		11183451	0					
ANR	11183457	UnaryOperator	!		11183451	0					
ANR	11183458	CallExpression	"buffer . attach ( fd , io_mode )"		11183451	1					
ANR	11183459	Callee	buffer . attach		11183451	0					
ANR	11183460	MemberAccess	buffer . attach		11183451	0					
ANR	11183461	Identifier	buffer		11183451	0					
ANR	11183462	Identifier	attach		11183451	1					
ANR	11183463	ArgumentList	fd		11183451	1					
ANR	11183464	Argument	fd		11183451	0					
ANR	11183465	Identifier	fd		11183451	0					
ANR	11183466	Argument	io_mode		11183451	1					
ANR	11183467	Identifier	io_mode		11183451	0					
ANR	11183468	ExpressionStatement	clear ( ios :: failbit | ios :: badbit )	264:4:3893:3928	11183451	1	True				
ANR	11183469	CallExpression	clear ( ios :: failbit | ios :: badbit )		11183451	0					
ANR	11183470	Callee	clear		11183451	0					
ANR	11183471	Identifier	clear		11183451	0					
ANR	11183472	ArgumentList	ios :: failbit | ios :: badbit		11183451	1					
ANR	11183473	Argument	ios :: failbit | ios :: badbit		11183451	0					
ANR	11183474	InclusiveOrExpression	ios :: failbit | ios :: badbit		11183451	0		|			
ANR	11183475	Identifier	ios :: failbit		11183451	0					
ANR	11183476	Identifier	ios :: badbit		11183451	1					
ANR	11183477	ElseStatement	else		11183451	0					
ANR	11183478	ExpressionStatement	clear ( )	266:4:3941:3948	11183451	0	True				
ANR	11183479	CallExpression	clear ( )		11183451	0					
ANR	11183480	Callee	clear		11183451	0					
ANR	11183481	Identifier	clear		11183451	0					
ANR	11183482	ArgumentList			11183451	1					
ANR	11183483	ReturnType	void		11183451	1					
ANR	11183484	Identifier	gzfilestream_common :: attach		11183451	2					
ANR	11183485	ParameterList	"int fd , int io_mode"		11183451	3					
ANR	11183486	Parameter	int fd	261:34:3826:3831	11183451	0	True				
ANR	11183487	ParameterType	int		11183451	0					
ANR	11183488	Identifier	fd		11183451	1					
ANR	11183489	Parameter	int io_mode	261:42:3834:3844	11183451	1	True				
ANR	11183490	ParameterType	int		11183451	0					
ANR	11183491	Identifier	io_mode		11183451	1					
ANR	11183492	CFGEntryNode	ENTRY		11183451		True				
ANR	11183493	CFGExitNode	EXIT		11183451		True				
ANR	11183494	Symbol	ios :: failbit		11183451						
ANR	11183495	Symbol	buffer . attach		11183451						
ANR	11183496	Symbol	ios :: badbit		11183451						
ANR	11183497	Symbol	io_mode		11183451						
ANR	11183498	Symbol	buffer		11183451						
ANR	11183499	Symbol	fd		11183451						
ANR	11183500	Function	gzfilestream_common :: open	270:0:3954:4122							
ANR	11183501	FunctionDef	"gzfilestream_common :: open (const char * name , int io_mode)"		11183500	0					
ANR	11183502	CompoundStatement		270:64:4018:4122	11183500	0					
ANR	11183503	IfStatement	"if ( ! buffer . open ( name , io_mode ) )"		11183500	0					
ANR	11183504	Condition	"! buffer . open ( name , io_mode )"	272:7:4028:4056	11183500	0	True				
ANR	11183505	UnaryOperationExpression	"! buffer . open ( name , io_mode )"		11183500	0					
ANR	11183506	UnaryOperator	!		11183500	0					
ANR	11183507	CallExpression	"buffer . open ( name , io_mode )"		11183500	1					
ANR	11183508	Callee	buffer . open		11183500	0					
ANR	11183509	MemberAccess	buffer . open		11183500	0					
ANR	11183510	Identifier	buffer		11183500	0					
ANR	11183511	Identifier	open		11183500	1					
ANR	11183512	ArgumentList	name		11183500	1					
ANR	11183513	Argument	name		11183500	0					
ANR	11183514	Identifier	name		11183500	0					
ANR	11183515	Argument	io_mode		11183500	1					
ANR	11183516	Identifier	io_mode		11183500	0					
ANR	11183517	ExpressionStatement	clear ( ios :: failbit | ios :: badbit )	273:4:4064:4099	11183500	1	True				
ANR	11183518	CallExpression	clear ( ios :: failbit | ios :: badbit )		11183500	0					
ANR	11183519	Callee	clear		11183500	0					
ANR	11183520	Identifier	clear		11183500	0					
ANR	11183521	ArgumentList	ios :: failbit | ios :: badbit		11183500	1					
ANR	11183522	Argument	ios :: failbit | ios :: badbit		11183500	0					
ANR	11183523	InclusiveOrExpression	ios :: failbit | ios :: badbit		11183500	0		|			
ANR	11183524	Identifier	ios :: failbit		11183500	0					
ANR	11183525	Identifier	ios :: badbit		11183500	1					
ANR	11183526	ElseStatement	else		11183500	0					
ANR	11183527	ExpressionStatement	clear ( )	275:4:4112:4119	11183500	0	True				
ANR	11183528	CallExpression	clear ( )		11183500	0					
ANR	11183529	Callee	clear		11183500	0					
ANR	11183530	Identifier	clear		11183500	0					
ANR	11183531	ArgumentList			11183500	1					
ANR	11183532	ReturnType	void		11183500	1					
ANR	11183533	Identifier	gzfilestream_common :: open		11183500	2					
ANR	11183534	ParameterList	"const char * name , int io_mode"		11183500	3					
ANR	11183535	Parameter	const char * name	270:32:3986:4001	11183500	0	True				
ANR	11183536	ParameterType	const char *		11183500	0					
ANR	11183537	Identifier	name		11183500	1					
ANR	11183538	Parameter	int io_mode	270:50:4004:4014	11183500	1	True				
ANR	11183539	ParameterType	int		11183500	0					
ANR	11183540	Identifier	io_mode		11183500	1					
ANR	11183541	CFGEntryNode	ENTRY		11183500		True				
ANR	11183542	CFGExitNode	EXIT		11183500		True				
ANR	11183543	Symbol	buffer . open		11183500						
ANR	11183544	Symbol	ios :: failbit		11183500						
ANR	11183545	Symbol	name		11183500						
ANR	11183546	Symbol	ios :: badbit		11183500						
ANR	11183547	Symbol	io_mode		11183500						
ANR	11183548	Symbol	buffer		11183500						
ANR	11183549	Function	gzfilestream_common :: close	279:0:4125:4229							
ANR	11183550	FunctionDef	gzfilestream_common :: close ()		11183549	0					
ANR	11183551	CompoundStatement		279:34:4159:4229	11183549	0					
ANR	11183552	IfStatement	if ( ! buffer . close ( ) )		11183549	0					
ANR	11183553	Condition	! buffer . close ( )	281:7:4169:4183	11183549	0	True				
ANR	11183554	UnaryOperationExpression	! buffer . close ( )		11183549	0					
ANR	11183555	UnaryOperator	!		11183549	0					
ANR	11183556	CallExpression	buffer . close ( )		11183549	1					
ANR	11183557	Callee	buffer . close		11183549	0					
ANR	11183558	MemberAccess	buffer . close		11183549	0					
ANR	11183559	Identifier	buffer		11183549	0					
ANR	11183560	Identifier	close		11183549	1					
ANR	11183561	ArgumentList			11183549	1					
ANR	11183562	ExpressionStatement	clear ( ios :: failbit | ios :: badbit )	282:4:4191:4226	11183549	1	True				
ANR	11183563	CallExpression	clear ( ios :: failbit | ios :: badbit )		11183549	0					
ANR	11183564	Callee	clear		11183549	0					
ANR	11183565	Identifier	clear		11183549	0					
ANR	11183566	ArgumentList	ios :: failbit | ios :: badbit		11183549	1					
ANR	11183567	Argument	ios :: failbit | ios :: badbit		11183549	0					
ANR	11183568	InclusiveOrExpression	ios :: failbit | ios :: badbit		11183549	0		|			
ANR	11183569	Identifier	ios :: failbit		11183549	0					
ANR	11183570	Identifier	ios :: badbit		11183549	1					
ANR	11183571	ReturnType	void		11183549	1					
ANR	11183572	Identifier	gzfilestream_common :: close		11183549	2					
ANR	11183573	ParameterList			11183549	3					
ANR	11183574	CFGEntryNode	ENTRY		11183549		True				
ANR	11183575	CFGExitNode	EXIT		11183549		True				
ANR	11183576	Symbol	ios :: failbit		11183549						
ANR	11183577	Symbol	ios :: badbit		11183549						
ANR	11183578	Symbol	buffer		11183549						
ANR	11183579	Symbol	buffer . close		11183549						
ANR	11183580	Function	gzfilestream_common :: rdbuf	286:0:4232:4292							
ANR	11183581	FunctionDef	gzfilestream_common :: rdbuf ()		11183580	0					
ANR	11183582	CompoundStatement		287:0:4272:4292	11183580	0					
ANR	11183583	ReturnStatement	return & buffer ;	288:2:4276:4290	11183580	0	True				
ANR	11183584	UnaryOperationExpression	& buffer		11183580	0					
ANR	11183585	UnaryOperator	&		11183580	0					
ANR	11183586	Identifier	buffer		11183580	1					
ANR	11183587	ReturnType	gzfilebuf *		11183580	1					
ANR	11183588	Identifier	gzfilestream_common :: rdbuf		11183580	2					
ANR	11183589	ParameterList			11183580	3					
ANR	11183590	CFGEntryNode	ENTRY		11183580		True				
ANR	11183591	CFGExitNode	EXIT		11183580		True				
ANR	11183592	Symbol	& buffer		11183580						
ANR	11183593	Function	gzifstream :: gzifstream	291:0:4295:4386							
ANR	11183594	FunctionDef	gzifstream :: gzifstream ()		11183593	0					
ANR	11183595	CompoundStatement		293:0:4360:4386	11183593	0					
ANR	11183596	ExpressionStatement	clear ( ios :: badbit )	294:2:4364:4384	11183593	0	True				
ANR	11183597	CallExpression	clear ( ios :: badbit )		11183593	0					
ANR	11183598	Callee	clear		11183593	0					
ANR	11183599	Identifier	clear		11183593	0					
ANR	11183600	ArgumentList	ios :: badbit		11183593	1					
ANR	11183601	Argument	ios :: badbit		11183593	0					
ANR	11183602	Identifier	ios :: badbit		11183593	0					
ANR	11183603	Identifier	gzifstream :: gzifstream		11183593	1					
ANR	11183604	ParameterList			11183593	2					
ANR	11183605	CFGEntryNode	ENTRY		11183593		True				
ANR	11183606	CFGExitNode	EXIT		11183593		True				
ANR	11183607	Symbol	ios :: badbit		11183593						
ANR	11183608	Function	gzifstream :: gzifstream	297:0:4389:4533							
ANR	11183609	FunctionDef	"gzifstream :: gzifstream (const char * name , int io_mode)"		11183608	0					
ANR	11183610	CompoundStatement		299:0:4485:4533	11183608	0					
ANR	11183611	ExpressionStatement	"gzfilestream_common :: open ( name , io_mode )"	300:2:4489:4531	11183608	0	True				
ANR	11183612	CallExpression	"gzfilestream_common :: open ( name , io_mode )"		11183608	0					
ANR	11183613	Callee	gzfilestream_common :: open		11183608	0					
ANR	11183614	Identifier	gzfilestream_common :: open		11183608	0					
ANR	11183615	ArgumentList	name		11183608	1					
ANR	11183616	Argument	name		11183608	0					
ANR	11183617	Identifier	name		11183608	0					
ANR	11183618	Argument	io_mode		11183608	1					
ANR	11183619	Identifier	io_mode		11183608	0					
ANR	11183620	Identifier	gzifstream :: gzifstream		11183608	1					
ANR	11183621	ParameterList	"const char * name , int io_mode"		11183608	2					
ANR	11183622	Parameter	const char * name	297:24:4413:4428	11183608	0	True				
ANR	11183623	ParameterType	const char *		11183608	0					
ANR	11183624	Identifier	name		11183608	1					
ANR	11183625	Parameter	int io_mode	297:42:4431:4441	11183608	1	True				
ANR	11183626	ParameterType	int		11183608	0					
ANR	11183627	Identifier	io_mode		11183608	1					
ANR	11183628	CFGEntryNode	ENTRY		11183608		True				
ANR	11183629	CFGExitNode	EXIT		11183608		True				
ANR	11183630	Symbol	name		11183608						
ANR	11183631	Symbol	io_mode		11183608						
ANR	11183632	Function	gzifstream :: gzifstream	303:0:4536:4670							
ANR	11183633	FunctionDef	"gzifstream :: gzifstream (int fd , int io_mode)"		11183632	0					
ANR	11183634	CompoundStatement		305:0:4622:4670	11183632	0					
ANR	11183635	ExpressionStatement	"gzfilestream_common :: attach ( fd , io_mode )"	306:2:4626:4668	11183632	0	True				
ANR	11183636	CallExpression	"gzfilestream_common :: attach ( fd , io_mode )"		11183632	0					
ANR	11183637	Callee	gzfilestream_common :: attach		11183632	0					
ANR	11183638	Identifier	gzfilestream_common :: attach		11183632	0					
ANR	11183639	ArgumentList	fd		11183632	1					
ANR	11183640	Argument	fd		11183632	0					
ANR	11183641	Identifier	fd		11183632	0					
ANR	11183642	Argument	io_mode		11183632	1					
ANR	11183643	Identifier	io_mode		11183632	0					
ANR	11183644	Identifier	gzifstream :: gzifstream		11183632	1					
ANR	11183645	ParameterList	"int fd , int io_mode"		11183632	2					
ANR	11183646	Parameter	int fd	303:24:4560:4565	11183632	0	True				
ANR	11183647	ParameterType	int		11183632	0					
ANR	11183648	Identifier	fd		11183632	1					
ANR	11183649	Parameter	int io_mode	303:32:4568:4578	11183632	1	True				
ANR	11183650	ParameterType	int		11183632	0					
ANR	11183651	Identifier	io_mode		11183632	1					
ANR	11183652	CFGEntryNode	ENTRY		11183632		True				
ANR	11183653	CFGExitNode	EXIT		11183632		True				
ANR	11183654	Symbol	io_mode		11183632						
ANR	11183655	Symbol	fd		11183632						
ANR	11183656	Function	gzifstream :: ~gzifstream	309:0:4673:4701							
ANR	11183657	FunctionDef	gzifstream :: ~gzifstream ()		11183656	0					
ANR	11183658	CompoundStatement		309:26:4699:4701	11183656	0					
ANR	11183659	Identifier	gzifstream :: ~gzifstream		11183656	1					
ANR	11183660	ParameterList			11183656	2					
ANR	11183661	CFGEntryNode	ENTRY		11183656		True				
ANR	11183662	CFGExitNode	EXIT		11183656		True				
ANR	11183663	Function	gzofstream :: gzofstream	311:0:4704:4795							
ANR	11183664	FunctionDef	gzofstream :: gzofstream ()		11183663	0					
ANR	11183665	CompoundStatement		313:0:4769:4795	11183663	0					
ANR	11183666	ExpressionStatement	clear ( ios :: badbit )	314:2:4773:4793	11183663	0	True				
ANR	11183667	CallExpression	clear ( ios :: badbit )		11183663	0					
ANR	11183668	Callee	clear		11183663	0					
ANR	11183669	Identifier	clear		11183663	0					
ANR	11183670	ArgumentList	ios :: badbit		11183663	1					
ANR	11183671	Argument	ios :: badbit		11183663	0					
ANR	11183672	Identifier	ios :: badbit		11183663	0					
ANR	11183673	Identifier	gzofstream :: gzofstream		11183663	1					
ANR	11183674	ParameterList			11183663	2					
ANR	11183675	CFGEntryNode	ENTRY		11183663		True				
ANR	11183676	CFGExitNode	EXIT		11183663		True				
ANR	11183677	Symbol	ios :: badbit		11183663						
ANR	11183678	Function	gzofstream :: gzofstream	317:0:4798:4942							
ANR	11183679	FunctionDef	"gzofstream :: gzofstream (const char * name , int io_mode)"		11183678	0					
ANR	11183680	CompoundStatement		319:0:4894:4942	11183678	0					
ANR	11183681	ExpressionStatement	"gzfilestream_common :: open ( name , io_mode )"	320:2:4898:4940	11183678	0	True				
ANR	11183682	CallExpression	"gzfilestream_common :: open ( name , io_mode )"		11183678	0					
ANR	11183683	Callee	gzfilestream_common :: open		11183678	0					
ANR	11183684	Identifier	gzfilestream_common :: open		11183678	0					
ANR	11183685	ArgumentList	name		11183678	1					
ANR	11183686	Argument	name		11183678	0					
ANR	11183687	Identifier	name		11183678	0					
ANR	11183688	Argument	io_mode		11183678	1					
ANR	11183689	Identifier	io_mode		11183678	0					
ANR	11183690	Identifier	gzofstream :: gzofstream		11183678	1					
ANR	11183691	ParameterList	"const char * name , int io_mode"		11183678	2					
ANR	11183692	Parameter	const char * name	317:24:4822:4837	11183678	0	True				
ANR	11183693	ParameterType	const char *		11183678	0					
ANR	11183694	Identifier	name		11183678	1					
ANR	11183695	Parameter	int io_mode	317:42:4840:4850	11183678	1	True				
ANR	11183696	ParameterType	int		11183678	0					
ANR	11183697	Identifier	io_mode		11183678	1					
ANR	11183698	CFGEntryNode	ENTRY		11183678		True				
ANR	11183699	CFGExitNode	EXIT		11183678		True				
ANR	11183700	Symbol	name		11183678						
ANR	11183701	Symbol	io_mode		11183678						
ANR	11183702	Function	gzofstream :: gzofstream	323:0:4945:5079							
ANR	11183703	FunctionDef	"gzofstream :: gzofstream (int fd , int io_mode)"		11183702	0					
ANR	11183704	CompoundStatement		325:0:5031:5079	11183702	0					
ANR	11183705	ExpressionStatement	"gzfilestream_common :: attach ( fd , io_mode )"	326:2:5035:5077	11183702	0	True				
ANR	11183706	CallExpression	"gzfilestream_common :: attach ( fd , io_mode )"		11183702	0					
ANR	11183707	Callee	gzfilestream_common :: attach		11183702	0					
ANR	11183708	Identifier	gzfilestream_common :: attach		11183702	0					
ANR	11183709	ArgumentList	fd		11183702	1					
ANR	11183710	Argument	fd		11183702	0					
ANR	11183711	Identifier	fd		11183702	0					
ANR	11183712	Argument	io_mode		11183702	1					
ANR	11183713	Identifier	io_mode		11183702	0					
ANR	11183714	Identifier	gzofstream :: gzofstream		11183702	1					
ANR	11183715	ParameterList	"int fd , int io_mode"		11183702	2					
ANR	11183716	Parameter	int fd	323:24:4969:4974	11183702	0	True				
ANR	11183717	ParameterType	int		11183702	0					
ANR	11183718	Identifier	fd		11183702	1					
ANR	11183719	Parameter	int io_mode	323:32:4977:4987	11183702	1	True				
ANR	11183720	ParameterType	int		11183702	0					
ANR	11183721	Identifier	io_mode		11183702	1					
ANR	11183722	CFGEntryNode	ENTRY		11183702		True				
ANR	11183723	CFGExitNode	EXIT		11183702		True				
ANR	11183724	Symbol	io_mode		11183702						
ANR	11183725	Symbol	fd		11183702						
ANR	11183726	Function	gzofstream :: ~gzofstream	329:0:5082:5110							
ANR	11183727	FunctionDef	gzofstream :: ~gzofstream ()		11183726	0					
ANR	11183728	CompoundStatement		329:26:5108:5110	11183726	0					
ANR	11183729	Identifier	gzofstream :: ~gzofstream		11183726	1					
ANR	11183730	ParameterList			11183726	2					
ANR	11183731	CFGEntryNode	ENTRY		11183726		True				
ANR	11183732	CFGExitNode	EXIT		11183726		True				
