command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8489629	File	data/converged/CVE-2018-16863_ghostpdl/plwmainc.c								
ANR	8489630	DeclStmt									
ANR	8489631	Decl							GS_PL_DLL_CALLBACK	GS_PL_DLL_CALLBACK	pgsdll_callback
ANR	8489632	DeclStmt									
ANR	8489633	Decl							void	void *	instance
ANR	8489634	DeclStmt									
ANR	8489635	Decl							BOOL	BOOL	quitnow
ANR	8489636	DeclStmt									
ANR	8489637	Decl							HANDLE	HANDLE	hthread
ANR	8489638	DeclStmt									
ANR	8489639	Decl							DWORD	DWORD	thread_id
ANR	8489640	DeclStmt									
ANR	8489641	Decl							HWND	HWND	hwndforeground
ANR	8489642	Function	winthread	86:0:2557:3682							
ANR	8489643	FunctionDef	winthread (void * arg)		8489642	0					
ANR	8489644	CompoundStatement		87:0:2590:3682	8489642	0					
ANR	8489645	IdentifierDeclStatement	MSG msg ;	88:4:2596:2603	8489642	0	True				
ANR	8489646	IdentifierDecl	msg		8489642	0					
ANR	8489647	IdentifierDeclType	MSG		8489642	0					
ANR	8489648	Identifier	msg		8489642	1					
ANR	8489649	ExpressionStatement	thread_id = GetCurrentThreadId ( )	89:4:2609:2641	8489642	1	True				
ANR	8489650	AssignmentExpression	thread_id = GetCurrentThreadId ( )		8489642	0		=			
ANR	8489651	Identifier	thread_id		8489642	0					
ANR	8489652	CallExpression	GetCurrentThreadId ( )		8489642	1					
ANR	8489653	Callee	GetCurrentThreadId		8489642	0					
ANR	8489654	Identifier	GetCurrentThreadId		8489642	0					
ANR	8489655	ArgumentList			8489642	1					
ANR	8489656	ExpressionStatement	hthread = GetCurrentThread ( )	90:4:2647:2675	8489642	2	True				
ANR	8489657	AssignmentExpression	hthread = GetCurrentThread ( )		8489642	0		=			
ANR	8489658	Identifier	hthread		8489642	0					
ANR	8489659	CallExpression	GetCurrentThread ( )		8489642	1					
ANR	8489660	Callee	GetCurrentThread		8489642	0					
ANR	8489661	Identifier	GetCurrentThread		8489642	0					
ANR	8489662	ArgumentList			8489642	1					
ANR	8489663	WhileStatement	"while ( ! quitnow && GetMessage ( & msg , ( HWND ) NULL , 0 , 0 ) )"		8489642	3					
ANR	8489664	Condition	"! quitnow && GetMessage ( & msg , ( HWND ) NULL , 0 , 0 )"	92:11:2689:2734	8489642	0	True				
ANR	8489665	AndExpression	"! quitnow && GetMessage ( & msg , ( HWND ) NULL , 0 , 0 )"		8489642	0		&&			
ANR	8489666	UnaryOperationExpression	! quitnow		8489642	0					
ANR	8489667	UnaryOperator	!		8489642	0					
ANR	8489668	Identifier	quitnow		8489642	1					
ANR	8489669	CallExpression	"GetMessage ( & msg , ( HWND ) NULL , 0 , 0 )"		8489642	1					
ANR	8489670	Callee	GetMessage		8489642	0					
ANR	8489671	Identifier	GetMessage		8489642	0					
ANR	8489672	ArgumentList	& msg		8489642	1					
ANR	8489673	Argument	& msg		8489642	0					
ANR	8489674	UnaryOperationExpression	& msg		8489642	0					
ANR	8489675	UnaryOperator	&		8489642	0					
ANR	8489676	Identifier	msg		8489642	1					
ANR	8489677	Argument	( HWND ) NULL		8489642	1					
ANR	8489678	CastExpression	( HWND ) NULL		8489642	0					
ANR	8489679	CastTarget	HWND		8489642	0					
ANR	8489680	Identifier	NULL		8489642	1					
ANR	8489681	Argument	0		8489642	2					
ANR	8489682	PrimaryExpression	0		8489642	0					
ANR	8489683	Argument	0		8489642	3					
ANR	8489684	PrimaryExpression	0		8489642	0					
ANR	8489685	CompoundStatement		6:59:146:146	8489642	1					
ANR	8489686	SwitchStatement	switch ( msg . message )		8489642	0					
ANR	8489687	Condition	msg . message	93:16:2755:2765	8489642	0	True				
ANR	8489688	MemberAccess	msg . message		8489642	0					
ANR	8489689	Identifier	msg		8489642	0					
ANR	8489690	Identifier	message		8489642	1					
ANR	8489691	CompoundStatement		7:29:177:177	8489642	1					
ANR	8489692	Label	case DISPLAY_OPEN :	94:12:2782:2799	8489642	0	True				
ANR	8489693	Identifier	DISPLAY_OPEN		8489642	0					
ANR	8489694	ExpressionStatement	image_open ( ( IMAGE * ) msg . lParam )	95:16:2817:2848	8489642	1	True				
ANR	8489695	CallExpression	image_open ( ( IMAGE * ) msg . lParam )		8489642	0					
ANR	8489696	Callee	image_open		8489642	0					
ANR	8489697	Identifier	image_open		8489642	0					
ANR	8489698	ArgumentList	( IMAGE * ) msg . lParam		8489642	1					
ANR	8489699	Argument	( IMAGE * ) msg . lParam		8489642	0					
ANR	8489700	CastExpression	( IMAGE * ) msg . lParam		8489642	0					
ANR	8489701	CastTarget	IMAGE *		8489642	0					
ANR	8489702	MemberAccess	msg . lParam		8489642	1					
ANR	8489703	Identifier	msg		8489642	0					
ANR	8489704	Identifier	lParam		8489642	1					
ANR	8489705	BreakStatement	break ;	96:16:2866:2871	8489642	2	True				
ANR	8489706	Label	case DISPLAY_CLOSE :	97:12:2885:2903	8489642	3	True				
ANR	8489707	Identifier	DISPLAY_CLOSE		8489642	0					
ANR	8489708	CompoundStatement		14:20:406:433	8489642	4					
ANR	8489709	IdentifierDeclStatement	IMAGE * img = ( IMAGE * ) msg . lParam ;	99:20:2943:2975	8489642	0	True				
ANR	8489710	IdentifierDecl	* img = ( IMAGE * ) msg . lParam		8489642	0					
ANR	8489711	IdentifierDeclType	IMAGE *		8489642	0					
ANR	8489712	Identifier	img		8489642	1					
ANR	8489713	AssignmentExpression	* img = ( IMAGE * ) msg . lParam		8489642	2		=			
ANR	8489714	Identifier	img		8489642	0					
ANR	8489715	CastExpression	( IMAGE * ) msg . lParam		8489642	1					
ANR	8489716	CastTarget	IMAGE *		8489642	0					
ANR	8489717	MemberAccess	msg . lParam		8489642	1					
ANR	8489718	Identifier	msg		8489642	0					
ANR	8489719	Identifier	lParam		8489642	1					
ANR	8489720	IdentifierDeclStatement	HANDLE hmutex = img -> hmutex ;	100:20:2997:3024	8489642	1	True				
ANR	8489721	IdentifierDecl	hmutex = img -> hmutex		8489642	0					
ANR	8489722	IdentifierDeclType	HANDLE		8489642	0					
ANR	8489723	Identifier	hmutex		8489642	1					
ANR	8489724	AssignmentExpression	hmutex = img -> hmutex		8489642	2		=			
ANR	8489725	Identifier	hmutex		8489642	0					
ANR	8489726	PtrMemberAccess	img -> hmutex		8489642	1					
ANR	8489727	Identifier	img		8489642	0					
ANR	8489728	Identifier	hmutex		8489642	1					
ANR	8489729	ExpressionStatement	image_close ( img )	101:20:3046:3062	8489642	2	True				
ANR	8489730	CallExpression	image_close ( img )		8489642	0					
ANR	8489731	Callee	image_close		8489642	0					
ANR	8489732	Identifier	image_close		8489642	0					
ANR	8489733	ArgumentList	img		8489642	1					
ANR	8489734	Argument	img		8489642	0					
ANR	8489735	Identifier	img		8489642	0					
ANR	8489736	ExpressionStatement	CloseHandle ( hmutex )	102:20:3084:3103	8489642	3	True				
ANR	8489737	CallExpression	CloseHandle ( hmutex )		8489642	0					
ANR	8489738	Callee	CloseHandle		8489642	0					
ANR	8489739	Identifier	CloseHandle		8489642	0					
ANR	8489740	ArgumentList	hmutex		8489642	1					
ANR	8489741	Argument	hmutex		8489642	0					
ANR	8489742	Identifier	hmutex		8489642	0					
ANR	8489743	BreakStatement	break ;	104:16:3139:3144	8489642	5	True				
ANR	8489744	Label	case DISPLAY_SIZE :	105:12:3158:3175	8489642	6	True				
ANR	8489745	Identifier	DISPLAY_SIZE		8489642	0					
ANR	8489746	ExpressionStatement	image_updatesize ( ( IMAGE * ) msg . lParam )	106:16:3193:3230	8489642	7	True				
ANR	8489747	CallExpression	image_updatesize ( ( IMAGE * ) msg . lParam )		8489642	0					
ANR	8489748	Callee	image_updatesize		8489642	0					
ANR	8489749	Identifier	image_updatesize		8489642	0					
ANR	8489750	ArgumentList	( IMAGE * ) msg . lParam		8489642	1					
ANR	8489751	Argument	( IMAGE * ) msg . lParam		8489642	0					
ANR	8489752	CastExpression	( IMAGE * ) msg . lParam		8489642	0					
ANR	8489753	CastTarget	IMAGE *		8489642	0					
ANR	8489754	MemberAccess	msg . lParam		8489642	1					
ANR	8489755	Identifier	msg		8489642	0					
ANR	8489756	Identifier	lParam		8489642	1					
ANR	8489757	BreakStatement	break ;	107:16:3248:3253	8489642	8	True				
ANR	8489758	Label	case DISPLAY_SYNC :	108:12:3267:3284	8489642	9	True				
ANR	8489759	Identifier	DISPLAY_SYNC		8489642	0					
ANR	8489760	ExpressionStatement	image_sync ( ( IMAGE * ) msg . lParam )	109:16:3302:3333	8489642	10	True				
ANR	8489761	CallExpression	image_sync ( ( IMAGE * ) msg . lParam )		8489642	0					
ANR	8489762	Callee	image_sync		8489642	0					
ANR	8489763	Identifier	image_sync		8489642	0					
ANR	8489764	ArgumentList	( IMAGE * ) msg . lParam		8489642	1					
ANR	8489765	Argument	( IMAGE * ) msg . lParam		8489642	0					
ANR	8489766	CastExpression	( IMAGE * ) msg . lParam		8489642	0					
ANR	8489767	CastTarget	IMAGE *		8489642	0					
ANR	8489768	MemberAccess	msg . lParam		8489642	1					
ANR	8489769	Identifier	msg		8489642	0					
ANR	8489770	Identifier	lParam		8489642	1					
ANR	8489771	BreakStatement	break ;	110:16:3351:3356	8489642	11	True				
ANR	8489772	Label	case DISPLAY_PAGE :	111:12:3370:3387	8489642	12	True				
ANR	8489773	Identifier	DISPLAY_PAGE		8489642	0					
ANR	8489774	ExpressionStatement	image_page ( ( IMAGE * ) msg . lParam )	112:16:3405:3436	8489642	13	True				
ANR	8489775	CallExpression	image_page ( ( IMAGE * ) msg . lParam )		8489642	0					
ANR	8489776	Callee	image_page		8489642	0					
ANR	8489777	Identifier	image_page		8489642	0					
ANR	8489778	ArgumentList	( IMAGE * ) msg . lParam		8489642	1					
ANR	8489779	Argument	( IMAGE * ) msg . lParam		8489642	0					
ANR	8489780	CastExpression	( IMAGE * ) msg . lParam		8489642	0					
ANR	8489781	CastTarget	IMAGE *		8489642	0					
ANR	8489782	MemberAccess	msg . lParam		8489642	1					
ANR	8489783	Identifier	msg		8489642	0					
ANR	8489784	Identifier	lParam		8489642	1					
ANR	8489785	BreakStatement	break ;	113:16:3454:3459	8489642	14	True				
ANR	8489786	Label	case DISPLAY_UPDATE :	114:12:3473:3492	8489642	15	True				
ANR	8489787	Identifier	DISPLAY_UPDATE		8489642	0					
ANR	8489788	ExpressionStatement	image_poll ( ( IMAGE * ) msg . lParam )	115:16:3510:3541	8489642	16	True				
ANR	8489789	CallExpression	image_poll ( ( IMAGE * ) msg . lParam )		8489642	0					
ANR	8489790	Callee	image_poll		8489642	0					
ANR	8489791	Identifier	image_poll		8489642	0					
ANR	8489792	ArgumentList	( IMAGE * ) msg . lParam		8489642	1					
ANR	8489793	Argument	( IMAGE * ) msg . lParam		8489642	0					
ANR	8489794	CastExpression	( IMAGE * ) msg . lParam		8489642	0					
ANR	8489795	CastTarget	IMAGE *		8489642	0					
ANR	8489796	MemberAccess	msg . lParam		8489642	1					
ANR	8489797	Identifier	msg		8489642	0					
ANR	8489798	Identifier	lParam		8489642	1					
ANR	8489799	BreakStatement	break ;	116:16:3559:3564	8489642	17	True				
ANR	8489800	Label	default :	117:12:3578:3585	8489642	18	True				
ANR	8489801	Identifier	default		8489642	0					
ANR	8489802	ExpressionStatement	TranslateMessage ( & msg )	118:16:3603:3625	8489642	19	True				
ANR	8489803	CallExpression	TranslateMessage ( & msg )		8489642	0					
ANR	8489804	Callee	TranslateMessage		8489642	0					
ANR	8489805	Identifier	TranslateMessage		8489642	0					
ANR	8489806	ArgumentList	& msg		8489642	1					
ANR	8489807	Argument	& msg		8489642	0					
ANR	8489808	UnaryOperationExpression	& msg		8489642	0					
ANR	8489809	UnaryOperator	&		8489642	0					
ANR	8489810	Identifier	msg		8489642	1					
ANR	8489811	ExpressionStatement	DispatchMessage ( & msg )	119:16:3643:3664	8489642	20	True				
ANR	8489812	CallExpression	DispatchMessage ( & msg )		8489642	0					
ANR	8489813	Callee	DispatchMessage		8489642	0					
ANR	8489814	Identifier	DispatchMessage		8489642	0					
ANR	8489815	ArgumentList	& msg		8489642	1					
ANR	8489816	Argument	& msg		8489642	0					
ANR	8489817	UnaryOperationExpression	& msg		8489642	0					
ANR	8489818	UnaryOperator	&		8489642	0					
ANR	8489819	Identifier	msg		8489642	1					
ANR	8489820	ReturnType	static void		8489642	1					
ANR	8489821	Identifier	winthread		8489642	2					
ANR	8489822	ParameterList	void * arg		8489642	3					
ANR	8489823	Parameter	void * arg	86:22:2579:2587	8489642	0	True				
ANR	8489824	ParameterType	void *		8489642	0					
ANR	8489825	Identifier	arg		8489642	1					
ANR	8489826	CFGEntryNode	ENTRY		8489642		True				
ANR	8489827	CFGExitNode	EXIT		8489642		True				
ANR	8489828	Symbol	msg		8489642						
ANR	8489829	Symbol	& msg		8489642						
ANR	8489830	Symbol	quitnow		8489642						
ANR	8489831	Symbol	img		8489642						
ANR	8489832	Symbol	NULL		8489642						
ANR	8489833	Symbol	GetCurrentThreadId		8489642						
ANR	8489834	Symbol	GetCurrentThread		8489642						
ANR	8489835	Symbol	msg . lParam		8489642						
ANR	8489836	Symbol	img -> hmutex		8489642						
ANR	8489837	Symbol	thread_id		8489642						
ANR	8489838	Symbol	* img		8489642						
ANR	8489839	Symbol	msg . message		8489642						
ANR	8489840	Symbol	arg		8489642						
ANR	8489841	Symbol	hmutex		8489642						
ANR	8489842	Symbol	hthread		8489642						
ANR	8489843	Symbol	GetMessage		8489642						
ANR	8489844	Function	display_open	126:0:3756:4140							
ANR	8489845	FunctionDef	"display_open (void * handle , void * device)"		8489844	0					
ANR	8489846	CompoundStatement		127:0:3801:4140	8489844	0					
ANR	8489847	IdentifierDeclStatement	IMAGE * img ;	128:4:3807:3817	8489844	0	True				
ANR	8489848	IdentifierDecl	* img		8489844	0					
ANR	8489849	IdentifierDeclType	IMAGE *		8489844	0					
ANR	8489850	Identifier	img		8489844	1					
ANR	8489851	ExpressionStatement	"fprintf ( stdout , ""display_open(0x%x, 0x%x)\\n"" , handle , device )"	130:4:3844:3905	8489844	1	True				
ANR	8489852	CallExpression	"fprintf ( stdout , ""display_open(0x%x, 0x%x)\\n"" , handle , device )"		8489844	0					
ANR	8489853	Callee	fprintf		8489844	0					
ANR	8489854	Identifier	fprintf		8489844	0					
ANR	8489855	ArgumentList	stdout		8489844	1					
ANR	8489856	Argument	stdout		8489844	0					
ANR	8489857	Identifier	stdout		8489844	0					
ANR	8489858	Argument	"""display_open(0x%x, 0x%x)\\n"""		8489844	1					
ANR	8489859	PrimaryExpression	"""display_open(0x%x, 0x%x)\\n"""		8489844	0					
ANR	8489860	Argument	handle		8489844	2					
ANR	8489861	Identifier	handle		8489844	0					
ANR	8489862	Argument	device		8489844	3					
ANR	8489863	Identifier	device		8489844	0					
ANR	8489864	ExpressionStatement	"img = image_new ( handle , device )"	132:4:3918:3949	8489844	2	True				
ANR	8489865	AssignmentExpression	"img = image_new ( handle , device )"		8489844	0		=			
ANR	8489866	Identifier	img		8489844	0					
ANR	8489867	CallExpression	"image_new ( handle , device )"		8489844	1					
ANR	8489868	Callee	image_new		8489844	0					
ANR	8489869	Identifier	image_new		8489844	0					
ANR	8489870	ArgumentList	handle		8489844	1					
ANR	8489871	Argument	handle		8489844	0					
ANR	8489872	Identifier	handle		8489844	0					
ANR	8489873	Argument	device		8489844	1					
ANR	8489874	Identifier	device		8489844	0					
ANR	8489875	IfStatement	if ( img )		8489844	3					
ANR	8489876	Condition	img	133:8:3991:3993	8489844	0	True				
ANR	8489877	Identifier	img		8489844	0					
ANR	8489878	CompoundStatement		7:13:194:194	8489844	1					
ANR	8489879	ExpressionStatement	"img -> hmutex = CreateMutex ( NULL , FALSE , NULL )"	134:8:4006:4050	8489844	0	True				
ANR	8489880	AssignmentExpression	"img -> hmutex = CreateMutex ( NULL , FALSE , NULL )"		8489844	0		=			
ANR	8489881	PtrMemberAccess	img -> hmutex		8489844	0					
ANR	8489882	Identifier	img		8489844	0					
ANR	8489883	Identifier	hmutex		8489844	1					
ANR	8489884	CallExpression	"CreateMutex ( NULL , FALSE , NULL )"		8489844	1					
ANR	8489885	Callee	CreateMutex		8489844	0					
ANR	8489886	Identifier	CreateMutex		8489844	0					
ANR	8489887	ArgumentList	NULL		8489844	1					
ANR	8489888	Argument	NULL		8489844	0					
ANR	8489889	Identifier	NULL		8489844	0					
ANR	8489890	Argument	FALSE		8489844	1					
ANR	8489891	Identifier	FALSE		8489844	0					
ANR	8489892	Argument	NULL		8489844	2					
ANR	8489893	Identifier	NULL		8489844	0					
ANR	8489894	ExpressionStatement	"PostThreadMessage ( thread_id , DISPLAY_OPEN , 0 , ( LPARAM ) img )"	135:8:4060:4118	8489844	1	True				
ANR	8489895	CallExpression	"PostThreadMessage ( thread_id , DISPLAY_OPEN , 0 , ( LPARAM ) img )"		8489844	0					
ANR	8489896	Callee	PostThreadMessage		8489844	0					
ANR	8489897	Identifier	PostThreadMessage		8489844	0					
ANR	8489898	ArgumentList	thread_id		8489844	1					
ANR	8489899	Argument	thread_id		8489844	0					
ANR	8489900	Identifier	thread_id		8489844	0					
ANR	8489901	Argument	DISPLAY_OPEN		8489844	1					
ANR	8489902	Identifier	DISPLAY_OPEN		8489844	0					
ANR	8489903	Argument	0		8489844	2					
ANR	8489904	PrimaryExpression	0		8489844	0					
ANR	8489905	Argument	( LPARAM ) img		8489844	3					
ANR	8489906	CastExpression	( LPARAM ) img		8489844	0					
ANR	8489907	CastTarget	LPARAM		8489844	0					
ANR	8489908	Identifier	img		8489844	1					
ANR	8489909	ReturnStatement	return 0 ;	137:4:4130:4138	8489844	4	True				
ANR	8489910	PrimaryExpression	0		8489844	0					
ANR	8489911	ReturnType	int		8489844	1					
ANR	8489912	Identifier	display_open		8489844	2					
ANR	8489913	ParameterList	"void * handle , void * device"		8489844	3					
ANR	8489914	Parameter	void * handle	126:17:3773:3784	8489844	0	True				
ANR	8489915	ParameterType	void *		8489844	0					
ANR	8489916	Identifier	handle		8489844	1					
ANR	8489917	Parameter	void * device	126:31:3787:3798	8489844	1	True				
ANR	8489918	ParameterType	void *		8489844	0					
ANR	8489919	Identifier	device		8489844	1					
ANR	8489920	CFGEntryNode	ENTRY		8489844		True				
ANR	8489921	CFGExitNode	EXIT		8489844		True				
ANR	8489922	Symbol	img -> hmutex		8489844						
ANR	8489923	Symbol	image_new		8489844						
ANR	8489924	Symbol	DISPLAY_OPEN		8489844						
ANR	8489925	Symbol	img		8489844						
ANR	8489926	Symbol	CreateMutex		8489844						
ANR	8489927	Symbol	* img		8489844						
ANR	8489928	Symbol	thread_id		8489844						
ANR	8489929	Symbol	NULL		8489844						
ANR	8489930	Symbol	stdout		8489844						
ANR	8489931	Symbol	handle		8489844						
ANR	8489932	Symbol	FALSE		8489844						
ANR	8489933	Symbol	device		8489844						
ANR	8489934	Function	display_preclose	140:0:4143:4491							
ANR	8489935	FunctionDef	"display_preclose (void * handle , void * device)"		8489934	0					
ANR	8489936	CompoundStatement		141:0:4192:4491	8489934	0					
ANR	8489937	IdentifierDeclStatement	IMAGE * img ;	142:4:4198:4208	8489934	0	True				
ANR	8489938	IdentifierDecl	* img		8489934	0					
ANR	8489939	IdentifierDeclType	IMAGE *		8489934	0					
ANR	8489940	Identifier	img		8489934	1					
ANR	8489941	ExpressionStatement	"fprintf ( stdout , ""display_preclose(0x%x, 0x%x)\\n"" , handle , device )"	144:4:4235:4300	8489934	1	True				
ANR	8489942	CallExpression	"fprintf ( stdout , ""display_preclose(0x%x, 0x%x)\\n"" , handle , device )"		8489934	0					
ANR	8489943	Callee	fprintf		8489934	0					
ANR	8489944	Identifier	fprintf		8489934	0					
ANR	8489945	ArgumentList	stdout		8489934	1					
ANR	8489946	Argument	stdout		8489934	0					
ANR	8489947	Identifier	stdout		8489934	0					
ANR	8489948	Argument	"""display_preclose(0x%x, 0x%x)\\n"""		8489934	1					
ANR	8489949	PrimaryExpression	"""display_preclose(0x%x, 0x%x)\\n"""		8489934	0					
ANR	8489950	Argument	handle		8489934	2					
ANR	8489951	Identifier	handle		8489934	0					
ANR	8489952	Argument	device		8489934	3					
ANR	8489953	Identifier	device		8489934	0					
ANR	8489954	ExpressionStatement	"img = image_find ( handle , device )"	146:4:4313:4345	8489934	2	True				
ANR	8489955	AssignmentExpression	"img = image_find ( handle , device )"		8489934	0		=			
ANR	8489956	Identifier	img		8489934	0					
ANR	8489957	CallExpression	"image_find ( handle , device )"		8489934	1					
ANR	8489958	Callee	image_find		8489934	0					
ANR	8489959	Identifier	image_find		8489934	0					
ANR	8489960	ArgumentList	handle		8489934	1					
ANR	8489961	Argument	handle		8489934	0					
ANR	8489962	Identifier	handle		8489934	0					
ANR	8489963	Argument	device		8489934	1					
ANR	8489964	Identifier	device		8489934	0					
ANR	8489965	IfStatement	if ( img )		8489934	3					
ANR	8489966	Condition	img	147:8:4355:4357	8489934	0	True				
ANR	8489967	Identifier	img		8489934	0					
ANR	8489968	CompoundStatement		7:13:167:167	8489934	1					
ANR	8489969	ExpressionStatement	"WaitForSingleObject ( img -> hmutex , 120000 )"	149:8:4429:4469	8489934	0	True				
ANR	8489970	CallExpression	"WaitForSingleObject ( img -> hmutex , 120000 )"		8489934	0					
ANR	8489971	Callee	WaitForSingleObject		8489934	0					
ANR	8489972	Identifier	WaitForSingleObject		8489934	0					
ANR	8489973	ArgumentList	img -> hmutex		8489934	1					
ANR	8489974	Argument	img -> hmutex		8489934	0					
ANR	8489975	PtrMemberAccess	img -> hmutex		8489934	0					
ANR	8489976	Identifier	img		8489934	0					
ANR	8489977	Identifier	hmutex		8489934	1					
ANR	8489978	Argument	120000		8489934	1					
ANR	8489979	PrimaryExpression	120000		8489934	0					
ANR	8489980	ReturnStatement	return 0 ;	151:4:4481:4489	8489934	4	True				
ANR	8489981	PrimaryExpression	0		8489934	0					
ANR	8489982	ReturnType	int		8489934	1					
ANR	8489983	Identifier	display_preclose		8489934	2					
ANR	8489984	ParameterList	"void * handle , void * device"		8489934	3					
ANR	8489985	Parameter	void * handle	140:21:4164:4175	8489934	0	True				
ANR	8489986	ParameterType	void *		8489934	0					
ANR	8489987	Identifier	handle		8489934	1					
ANR	8489988	Parameter	void * device	140:35:4178:4189	8489934	1	True				
ANR	8489989	ParameterType	void *		8489934	0					
ANR	8489990	Identifier	device		8489934	1					
ANR	8489991	CFGEntryNode	ENTRY		8489934		True				
ANR	8489992	CFGExitNode	EXIT		8489934		True				
ANR	8489993	Symbol	img -> hmutex		8489934						
ANR	8489994	Symbol	img		8489934						
ANR	8489995	Symbol	* img		8489934						
ANR	8489996	Symbol	stdout		8489934						
ANR	8489997	Symbol	image_find		8489934						
ANR	8489998	Symbol	handle		8489934						
ANR	8489999	Symbol	device		8489934						
ANR	8490000	Function	display_close	154:0:4494:5037							
ANR	8490001	FunctionDef	"display_close (void * handle , void * device)"		8490000	0					
ANR	8490002	CompoundStatement		155:0:4540:5037	8490000	0					
ANR	8490003	IdentifierDeclStatement	IMAGE * img ;	156:4:4546:4556	8490000	0	True				
ANR	8490004	IdentifierDecl	* img		8490000	0					
ANR	8490005	IdentifierDeclType	IMAGE *		8490000	0					
ANR	8490006	Identifier	img		8490000	1					
ANR	8490007	ExpressionStatement	"fprintf ( stdout , ""display_close(0x%x, 0x%x)\\n"" , handle , device )"	158:4:4583:4645	8490000	1	True				
ANR	8490008	CallExpression	"fprintf ( stdout , ""display_close(0x%x, 0x%x)\\n"" , handle , device )"		8490000	0					
ANR	8490009	Callee	fprintf		8490000	0					
ANR	8490010	Identifier	fprintf		8490000	0					
ANR	8490011	ArgumentList	stdout		8490000	1					
ANR	8490012	Argument	stdout		8490000	0					
ANR	8490013	Identifier	stdout		8490000	0					
ANR	8490014	Argument	"""display_close(0x%x, 0x%x)\\n"""		8490000	1					
ANR	8490015	PrimaryExpression	"""display_close(0x%x, 0x%x)\\n"""		8490000	0					
ANR	8490016	Argument	handle		8490000	2					
ANR	8490017	Identifier	handle		8490000	0					
ANR	8490018	Argument	device		8490000	3					
ANR	8490019	Identifier	device		8490000	0					
ANR	8490020	ExpressionStatement	"img = image_find ( handle , device )"	160:4:4658:4690	8490000	2	True				
ANR	8490021	AssignmentExpression	"img = image_find ( handle , device )"		8490000	0		=			
ANR	8490022	Identifier	img		8490000	0					
ANR	8490023	CallExpression	"image_find ( handle , device )"		8490000	1					
ANR	8490024	Callee	image_find		8490000	0					
ANR	8490025	Identifier	image_find		8490000	0					
ANR	8490026	ArgumentList	handle		8490000	1					
ANR	8490027	Argument	handle		8490000	0					
ANR	8490028	Identifier	handle		8490000	0					
ANR	8490029	Argument	device		8490000	1					
ANR	8490030	Identifier	device		8490000	0					
ANR	8490031	IfStatement	if ( img )		8490000	3					
ANR	8490032	Condition	img	161:8:4700:4702	8490000	0	True				
ANR	8490033	Identifier	img		8490000	0					
ANR	8490034	CompoundStatement		7:13:164:164	8490000	1					
ANR	8490035	IfStatement	if ( GetForegroundWindow ( ) == img -> hwnd )		8490000	0					
ANR	8490036	Condition	GetForegroundWindow ( ) == img -> hwnd	163:12:4791:4824	8490000	0	True				
ANR	8490037	EqualityExpression	GetForegroundWindow ( ) == img -> hwnd		8490000	0		==			
ANR	8490038	CallExpression	GetForegroundWindow ( )		8490000	0					
ANR	8490039	Callee	GetForegroundWindow		8490000	0					
ANR	8490040	Identifier	GetForegroundWindow		8490000	0					
ANR	8490041	ArgumentList			8490000	1					
ANR	8490042	PtrMemberAccess	img -> hwnd		8490000	1					
ANR	8490043	Identifier	img		8490000	0					
ANR	8490044	Identifier	hwnd		8490000	1					
ANR	8490045	ExpressionStatement	SetForegroundWindow ( hwndforeground )	164:12:4839:4874	8490000	1	True				
ANR	8490046	CallExpression	SetForegroundWindow ( hwndforeground )		8490000	0					
ANR	8490047	Callee	SetForegroundWindow		8490000	0					
ANR	8490048	Identifier	SetForegroundWindow		8490000	0					
ANR	8490049	ArgumentList	hwndforeground		8490000	1					
ANR	8490050	Argument	hwndforeground		8490000	0					
ANR	8490051	Identifier	hwndforeground		8490000	0					
ANR	8490052	ExpressionStatement	image_delete ( img )	166:8:4885:4902	8490000	1	True				
ANR	8490053	CallExpression	image_delete ( img )		8490000	0					
ANR	8490054	Callee	image_delete		8490000	0					
ANR	8490055	Identifier	image_delete		8490000	0					
ANR	8490056	ArgumentList	img		8490000	1					
ANR	8490057	Argument	img		8490000	0					
ANR	8490058	Identifier	img		8490000	0					
ANR	8490059	ExpressionStatement	"PostThreadMessage ( thread_id , DISPLAY_CLOSE , 0 , ( LPARAM ) img )"	167:8:4956:5015	8490000	2	True				
ANR	8490060	CallExpression	"PostThreadMessage ( thread_id , DISPLAY_CLOSE , 0 , ( LPARAM ) img )"		8490000	0					
ANR	8490061	Callee	PostThreadMessage		8490000	0					
ANR	8490062	Identifier	PostThreadMessage		8490000	0					
ANR	8490063	ArgumentList	thread_id		8490000	1					
ANR	8490064	Argument	thread_id		8490000	0					
ANR	8490065	Identifier	thread_id		8490000	0					
ANR	8490066	Argument	DISPLAY_CLOSE		8490000	1					
ANR	8490067	Identifier	DISPLAY_CLOSE		8490000	0					
ANR	8490068	Argument	0		8490000	2					
ANR	8490069	PrimaryExpression	0		8490000	0					
ANR	8490070	Argument	( LPARAM ) img		8490000	3					
ANR	8490071	CastExpression	( LPARAM ) img		8490000	0					
ANR	8490072	CastTarget	LPARAM		8490000	0					
ANR	8490073	Identifier	img		8490000	1					
ANR	8490074	ReturnStatement	return 0 ;	169:4:5027:5035	8490000	4	True				
ANR	8490075	PrimaryExpression	0		8490000	0					
ANR	8490076	ReturnType	int		8490000	1					
ANR	8490077	Identifier	display_close		8490000	2					
ANR	8490078	ParameterList	"void * handle , void * device"		8490000	3					
ANR	8490079	Parameter	void * handle	154:18:4512:4523	8490000	0	True				
ANR	8490080	ParameterType	void *		8490000	0					
ANR	8490081	Identifier	handle		8490000	1					
ANR	8490082	Parameter	void * device	154:32:4526:4537	8490000	1	True				
ANR	8490083	ParameterType	void *		8490000	0					
ANR	8490084	Identifier	device		8490000	1					
ANR	8490085	CFGEntryNode	ENTRY		8490000		True				
ANR	8490086	CFGExitNode	EXIT		8490000		True				
ANR	8490087	Symbol	img		8490000						
ANR	8490088	Symbol	* img		8490000						
ANR	8490089	Symbol	thread_id		8490000						
ANR	8490090	Symbol	stdout		8490000						
ANR	8490091	Symbol	image_find		8490000						
ANR	8490092	Symbol	handle		8490000						
ANR	8490093	Symbol	DISPLAY_CLOSE		8490000						
ANR	8490094	Symbol	device		8490000						
ANR	8490095	Symbol	GetForegroundWindow		8490000						
ANR	8490096	Symbol	hwndforeground		8490000						
ANR	8490097	Symbol	img -> hwnd		8490000						
ANR	8490098	Function	display_presize	172:0:5040:5509							
ANR	8490099	FunctionDef	"display_presize (void * handle , void * device , int width , int height , int raster , unsigned int format)"		8490098	0					
ANR	8490100	CompoundStatement		174:0:5152:5509	8490098	0					
ANR	8490101	IdentifierDeclStatement	IMAGE * img ;	175:4:5158:5168	8490098	0	True				
ANR	8490102	IdentifierDecl	* img		8490098	0					
ANR	8490103	IdentifierDeclType	IMAGE *		8490098	0					
ANR	8490104	Identifier	img		8490098	1					
ANR	8490105	ExpressionStatement	"fprintf ( stdout , ""display_presize(0x%x 0x%x, %d, %d, %d, %d, %ld)\\n"" , handle , device , width , height , raster , format )"	177:4:5195:5318	8490098	1	True				
ANR	8490106	CallExpression	"fprintf ( stdout , ""display_presize(0x%x 0x%x, %d, %d, %d, %d, %ld)\\n"" , handle , device , width , height , raster , format )"		8490098	0					
ANR	8490107	Callee	fprintf		8490098	0					
ANR	8490108	Identifier	fprintf		8490098	0					
ANR	8490109	ArgumentList	stdout		8490098	1					
ANR	8490110	Argument	stdout		8490098	0					
ANR	8490111	Identifier	stdout		8490098	0					
ANR	8490112	Argument	"""display_presize(0x%x 0x%x, %d, %d, %d, %d, %ld)\\n"""		8490098	1					
ANR	8490113	PrimaryExpression	"""display_presize(0x%x 0x%x, %d, %d, %d, %d, %ld)\\n"""		8490098	0					
ANR	8490114	Argument	handle		8490098	2					
ANR	8490115	Identifier	handle		8490098	0					
ANR	8490116	Argument	device		8490098	3					
ANR	8490117	Identifier	device		8490098	0					
ANR	8490118	Argument	width		8490098	4					
ANR	8490119	Identifier	width		8490098	0					
ANR	8490120	Argument	height		8490098	5					
ANR	8490121	Identifier	height		8490098	0					
ANR	8490122	Argument	raster		8490098	6					
ANR	8490123	Identifier	raster		8490098	0					
ANR	8490124	Argument	format		8490098	7					
ANR	8490125	Identifier	format		8490098	0					
ANR	8490126	ExpressionStatement	"img = image_find ( handle , device )"	180:4:5331:5363	8490098	2	True				
ANR	8490127	AssignmentExpression	"img = image_find ( handle , device )"		8490098	0		=			
ANR	8490128	Identifier	img		8490098	0					
ANR	8490129	CallExpression	"image_find ( handle , device )"		8490098	1					
ANR	8490130	Callee	image_find		8490098	0					
ANR	8490131	Identifier	image_find		8490098	0					
ANR	8490132	ArgumentList	handle		8490098	1					
ANR	8490133	Argument	handle		8490098	0					
ANR	8490134	Identifier	handle		8490098	0					
ANR	8490135	Argument	device		8490098	1					
ANR	8490136	Identifier	device		8490098	0					
ANR	8490137	IfStatement	if ( img )		8490098	3					
ANR	8490138	Condition	img	181:8:5373:5375	8490098	0	True				
ANR	8490139	Identifier	img		8490098	0					
ANR	8490140	CompoundStatement		8:13:225:225	8490098	1					
ANR	8490141	ExpressionStatement	"WaitForSingleObject ( img -> hmutex , 120000 )"	183:8:5447:5487	8490098	0	True				
ANR	8490142	CallExpression	"WaitForSingleObject ( img -> hmutex , 120000 )"		8490098	0					
ANR	8490143	Callee	WaitForSingleObject		8490098	0					
ANR	8490144	Identifier	WaitForSingleObject		8490098	0					
ANR	8490145	ArgumentList	img -> hmutex		8490098	1					
ANR	8490146	Argument	img -> hmutex		8490098	0					
ANR	8490147	PtrMemberAccess	img -> hmutex		8490098	0					
ANR	8490148	Identifier	img		8490098	0					
ANR	8490149	Identifier	hmutex		8490098	1					
ANR	8490150	Argument	120000		8490098	1					
ANR	8490151	PrimaryExpression	120000		8490098	0					
ANR	8490152	ReturnStatement	return 0 ;	185:4:5499:5507	8490098	4	True				
ANR	8490153	PrimaryExpression	0		8490098	0					
ANR	8490154	ReturnType	int		8490098	1					
ANR	8490155	Identifier	display_presize		8490098	2					
ANR	8490156	ParameterList	"void * handle , void * device , int width , int height , int raster , unsigned int format"		8490098	3					
ANR	8490157	Parameter	void * handle	172:20:5060:5071	8490098	0	True				
ANR	8490158	ParameterType	void *		8490098	0					
ANR	8490159	Identifier	handle		8490098	1					
ANR	8490160	Parameter	void * device	172:34:5074:5085	8490098	1	True				
ANR	8490161	ParameterType	void *		8490098	0					
ANR	8490162	Identifier	device		8490098	1					
ANR	8490163	Parameter	int width	172:48:5088:5096	8490098	2	True				
ANR	8490164	ParameterType	int		8490098	0					
ANR	8490165	Identifier	width		8490098	1					
ANR	8490166	Parameter	int height	172:59:5099:5108	8490098	3	True				
ANR	8490167	ParameterType	int		8490098	0					
ANR	8490168	Identifier	height		8490098	1					
ANR	8490169	Parameter	int raster	173:8:5119:5128	8490098	4	True				
ANR	8490170	ParameterType	int		8490098	0					
ANR	8490171	Identifier	raster		8490098	1					
ANR	8490172	Parameter	unsigned int format	173:20:5131:5149	8490098	5	True				
ANR	8490173	ParameterType	unsigned int		8490098	0					
ANR	8490174	Identifier	format		8490098	1					
ANR	8490175	CFGEntryNode	ENTRY		8490098		True				
ANR	8490176	CFGExitNode	EXIT		8490098		True				
ANR	8490177	Symbol	img -> hmutex		8490098						
ANR	8490178	Symbol	img		8490098						
ANR	8490179	Symbol	* img		8490098						
ANR	8490180	Symbol	stdout		8490098						
ANR	8490181	Symbol	image_find		8490098						
ANR	8490182	Symbol	width		8490098						
ANR	8490183	Symbol	raster		8490098						
ANR	8490184	Symbol	format		8490098						
ANR	8490185	Symbol	handle		8490098						
ANR	8490186	Symbol	device		8490098						
ANR	8490187	Symbol	height		8490098						
ANR	8490188	Function	display_size	188:0:5512:6134							
ANR	8490189	FunctionDef	"display_size (void * handle , void * device , int width , int height , int raster , unsigned int format , unsigned char * pimage)"		8490188	0					
ANR	8490190	CompoundStatement		190:0:5644:6134	8490188	0					
ANR	8490191	IdentifierDeclStatement	IMAGE * img ;	191:4:5650:5660	8490188	0	True				
ANR	8490192	IdentifierDecl	* img		8490188	0					
ANR	8490193	IdentifierDeclType	IMAGE *		8490188	0					
ANR	8490194	Identifier	img		8490188	1					
ANR	8490195	ExpressionStatement	"fprintf ( stdout , ""display_size(0x%x 0x%x, %d, %d, %d, %d, %ld, 0x%x)\\n"" , handle , device , width , height , raster , format , pimage )"	193:4:5687:5821	8490188	1	True				
ANR	8490196	CallExpression	"fprintf ( stdout , ""display_size(0x%x 0x%x, %d, %d, %d, %d, %ld, 0x%x)\\n"" , handle , device , width , height , raster , format , pimage )"		8490188	0					
ANR	8490197	Callee	fprintf		8490188	0					
ANR	8490198	Identifier	fprintf		8490188	0					
ANR	8490199	ArgumentList	stdout		8490188	1					
ANR	8490200	Argument	stdout		8490188	0					
ANR	8490201	Identifier	stdout		8490188	0					
ANR	8490202	Argument	"""display_size(0x%x 0x%x, %d, %d, %d, %d, %ld, 0x%x)\\n"""		8490188	1					
ANR	8490203	PrimaryExpression	"""display_size(0x%x 0x%x, %d, %d, %d, %d, %ld, 0x%x)\\n"""		8490188	0					
ANR	8490204	Argument	handle		8490188	2					
ANR	8490205	Identifier	handle		8490188	0					
ANR	8490206	Argument	device		8490188	3					
ANR	8490207	Identifier	device		8490188	0					
ANR	8490208	Argument	width		8490188	4					
ANR	8490209	Identifier	width		8490188	0					
ANR	8490210	Argument	height		8490188	5					
ANR	8490211	Identifier	height		8490188	0					
ANR	8490212	Argument	raster		8490188	6					
ANR	8490213	Identifier	raster		8490188	0					
ANR	8490214	Argument	format		8490188	7					
ANR	8490215	Identifier	format		8490188	0					
ANR	8490216	Argument	pimage		8490188	8					
ANR	8490217	Identifier	pimage		8490188	0					
ANR	8490218	ExpressionStatement	"img = image_find ( handle , device )"	196:4:5834:5866	8490188	2	True				
ANR	8490219	AssignmentExpression	"img = image_find ( handle , device )"		8490188	0		=			
ANR	8490220	Identifier	img		8490188	0					
ANR	8490221	CallExpression	"image_find ( handle , device )"		8490188	1					
ANR	8490222	Callee	image_find		8490188	0					
ANR	8490223	Identifier	image_find		8490188	0					
ANR	8490224	ArgumentList	handle		8490188	1					
ANR	8490225	Argument	handle		8490188	0					
ANR	8490226	Identifier	handle		8490188	0					
ANR	8490227	Argument	device		8490188	1					
ANR	8490228	Identifier	device		8490188	0					
ANR	8490229	IfStatement	if ( img )		8490188	3					
ANR	8490230	Condition	img	197:8:5876:5878	8490188	0	True				
ANR	8490231	Identifier	img		8490188	0					
ANR	8490232	CompoundStatement		8:13:236:236	8490188	1					
ANR	8490233	ExpressionStatement	"image_size ( img , width , height , raster , format , pimage )"	198:8:5891:5945	8490188	0	True				
ANR	8490234	CallExpression	"image_size ( img , width , height , raster , format , pimage )"		8490188	0					
ANR	8490235	Callee	image_size		8490188	0					
ANR	8490236	Identifier	image_size		8490188	0					
ANR	8490237	ArgumentList	img		8490188	1					
ANR	8490238	Argument	img		8490188	0					
ANR	8490239	Identifier	img		8490188	0					
ANR	8490240	Argument	width		8490188	1					
ANR	8490241	Identifier	width		8490188	0					
ANR	8490242	Argument	height		8490188	2					
ANR	8490243	Identifier	height		8490188	0					
ANR	8490244	Argument	raster		8490188	3					
ANR	8490245	Identifier	raster		8490188	0					
ANR	8490246	Argument	format		8490188	4					
ANR	8490247	Identifier	format		8490188	0					
ANR	8490248	Argument	pimage		8490188	5					
ANR	8490249	Identifier	pimage		8490188	0					
ANR	8490250	ExpressionStatement	ReleaseMutex ( img -> hmutex )	200:8:6019:6044	8490188	1	True				
ANR	8490251	CallExpression	ReleaseMutex ( img -> hmutex )		8490188	0					
ANR	8490252	Callee	ReleaseMutex		8490188	0					
ANR	8490253	Identifier	ReleaseMutex		8490188	0					
ANR	8490254	ArgumentList	img -> hmutex		8490188	1					
ANR	8490255	Argument	img -> hmutex		8490188	0					
ANR	8490256	PtrMemberAccess	img -> hmutex		8490188	0					
ANR	8490257	Identifier	img		8490188	0					
ANR	8490258	Identifier	hmutex		8490188	1					
ANR	8490259	ExpressionStatement	"PostThreadMessage ( thread_id , DISPLAY_SIZE , 0 , ( LPARAM ) img )"	201:8:6054:6112	8490188	2	True				
ANR	8490260	CallExpression	"PostThreadMessage ( thread_id , DISPLAY_SIZE , 0 , ( LPARAM ) img )"		8490188	0					
ANR	8490261	Callee	PostThreadMessage		8490188	0					
ANR	8490262	Identifier	PostThreadMessage		8490188	0					
ANR	8490263	ArgumentList	thread_id		8490188	1					
ANR	8490264	Argument	thread_id		8490188	0					
ANR	8490265	Identifier	thread_id		8490188	0					
ANR	8490266	Argument	DISPLAY_SIZE		8490188	1					
ANR	8490267	Identifier	DISPLAY_SIZE		8490188	0					
ANR	8490268	Argument	0		8490188	2					
ANR	8490269	PrimaryExpression	0		8490188	0					
ANR	8490270	Argument	( LPARAM ) img		8490188	3					
ANR	8490271	CastExpression	( LPARAM ) img		8490188	0					
ANR	8490272	CastTarget	LPARAM		8490188	0					
ANR	8490273	Identifier	img		8490188	1					
ANR	8490274	ReturnStatement	return 0 ;	203:4:6124:6132	8490188	4	True				
ANR	8490275	PrimaryExpression	0		8490188	0					
ANR	8490276	ReturnType	int		8490188	1					
ANR	8490277	Identifier	display_size		8490188	2					
ANR	8490278	ParameterList	"void * handle , void * device , int width , int height , int raster , unsigned int format , unsigned char * pimage"		8490188	3					
ANR	8490279	Parameter	void * handle	188:17:5529:5540	8490188	0	True				
ANR	8490280	ParameterType	void *		8490188	0					
ANR	8490281	Identifier	handle		8490188	1					
ANR	8490282	Parameter	void * device	188:31:5543:5554	8490188	1	True				
ANR	8490283	ParameterType	void *		8490188	0					
ANR	8490284	Identifier	device		8490188	1					
ANR	8490285	Parameter	int width	188:45:5557:5565	8490188	2	True				
ANR	8490286	ParameterType	int		8490188	0					
ANR	8490287	Identifier	width		8490188	1					
ANR	8490288	Parameter	int height	188:56:5568:5577	8490188	3	True				
ANR	8490289	ParameterType	int		8490188	0					
ANR	8490290	Identifier	height		8490188	1					
ANR	8490291	Parameter	int raster	189:8:5588:5597	8490188	4	True				
ANR	8490292	ParameterType	int		8490188	0					
ANR	8490293	Identifier	raster		8490188	1					
ANR	8490294	Parameter	unsigned int format	189:20:5600:5618	8490188	5	True				
ANR	8490295	ParameterType	unsigned int		8490188	0					
ANR	8490296	Identifier	format		8490188	1					
ANR	8490297	Parameter	unsigned char * pimage	189:41:5621:5641	8490188	6	True				
ANR	8490298	ParameterType	unsigned char *		8490188	0					
ANR	8490299	Identifier	pimage		8490188	1					
ANR	8490300	CFGEntryNode	ENTRY		8490188		True				
ANR	8490301	CFGExitNode	EXIT		8490188		True				
ANR	8490302	Symbol	img		8490188						
ANR	8490303	Symbol	stdout		8490188						
ANR	8490304	Symbol	image_find		8490188						
ANR	8490305	Symbol	raster		8490188						
ANR	8490306	Symbol	format		8490188						
ANR	8490307	Symbol	handle		8490188						
ANR	8490308	Symbol	img -> hmutex		8490188						
ANR	8490309	Symbol	pimage		8490188						
ANR	8490310	Symbol	* img		8490188						
ANR	8490311	Symbol	thread_id		8490188						
ANR	8490312	Symbol	DISPLAY_SIZE		8490188						
ANR	8490313	Symbol	width		8490188						
ANR	8490314	Symbol	device		8490188						
ANR	8490315	Symbol	height		8490188						
ANR	8490316	Function	display_sync	206:0:6137:6489							
ANR	8490317	FunctionDef	"display_sync (void * handle , void * device)"		8490316	0					
ANR	8490318	CompoundStatement		207:0:6182:6489	8490316	0					
ANR	8490319	IdentifierDeclStatement	IMAGE * img ;	208:4:6188:6198	8490316	0	True				
ANR	8490320	IdentifierDecl	* img		8490316	0					
ANR	8490321	IdentifierDeclType	IMAGE *		8490316	0					
ANR	8490322	Identifier	img		8490316	1					
ANR	8490323	ExpressionStatement	"fprintf ( stdout , ""display_sync(0x%x, 0x%x)\\n"" , handle , device )"	210:4:6225:6286	8490316	1	True				
ANR	8490324	CallExpression	"fprintf ( stdout , ""display_sync(0x%x, 0x%x)\\n"" , handle , device )"		8490316	0					
ANR	8490325	Callee	fprintf		8490316	0					
ANR	8490326	Identifier	fprintf		8490316	0					
ANR	8490327	ArgumentList	stdout		8490316	1					
ANR	8490328	Argument	stdout		8490316	0					
ANR	8490329	Identifier	stdout		8490316	0					
ANR	8490330	Argument	"""display_sync(0x%x, 0x%x)\\n"""		8490316	1					
ANR	8490331	PrimaryExpression	"""display_sync(0x%x, 0x%x)\\n"""		8490316	0					
ANR	8490332	Argument	handle		8490316	2					
ANR	8490333	Identifier	handle		8490316	0					
ANR	8490334	Argument	device		8490316	3					
ANR	8490335	Identifier	device		8490316	0					
ANR	8490336	ExpressionStatement	"img = image_find ( handle , device )"	212:4:6299:6331	8490316	2	True				
ANR	8490337	AssignmentExpression	"img = image_find ( handle , device )"		8490316	0		=			
ANR	8490338	Identifier	img		8490316	0					
ANR	8490339	CallExpression	"image_find ( handle , device )"		8490316	1					
ANR	8490340	Callee	image_find		8490316	0					
ANR	8490341	Identifier	image_find		8490316	0					
ANR	8490342	ArgumentList	handle		8490316	1					
ANR	8490343	Argument	handle		8490316	0					
ANR	8490344	Identifier	handle		8490316	0					
ANR	8490345	Argument	device		8490316	1					
ANR	8490346	Identifier	device		8490316	0					
ANR	8490347	IfStatement	if ( img && ! img -> pending_sync )		8490316	3					
ANR	8490348	Condition	img && ! img -> pending_sync	213:8:6341:6365	8490316	0	True				
ANR	8490349	AndExpression	img && ! img -> pending_sync		8490316	0		&&			
ANR	8490350	Identifier	img		8490316	0					
ANR	8490351	UnaryOperationExpression	! img -> pending_sync		8490316	1					
ANR	8490352	UnaryOperator	!		8490316	0					
ANR	8490353	PtrMemberAccess	img -> pending_sync		8490316	1					
ANR	8490354	Identifier	img		8490316	0					
ANR	8490355	Identifier	pending_sync		8490316	1					
ANR	8490356	CompoundStatement		7:35:185:185	8490316	1					
ANR	8490357	ExpressionStatement	img -> pending_sync = 1	214:8:6378:6399	8490316	0	True				
ANR	8490358	AssignmentExpression	img -> pending_sync = 1		8490316	0		=			
ANR	8490359	PtrMemberAccess	img -> pending_sync		8490316	0					
ANR	8490360	Identifier	img		8490316	0					
ANR	8490361	Identifier	pending_sync		8490316	1					
ANR	8490362	PrimaryExpression	1		8490316	1					
ANR	8490363	ExpressionStatement	"PostThreadMessage ( thread_id , DISPLAY_SYNC , 0 , ( LPARAM ) img )"	215:8:6409:6467	8490316	1	True				
ANR	8490364	CallExpression	"PostThreadMessage ( thread_id , DISPLAY_SYNC , 0 , ( LPARAM ) img )"		8490316	0					
ANR	8490365	Callee	PostThreadMessage		8490316	0					
ANR	8490366	Identifier	PostThreadMessage		8490316	0					
ANR	8490367	ArgumentList	thread_id		8490316	1					
ANR	8490368	Argument	thread_id		8490316	0					
ANR	8490369	Identifier	thread_id		8490316	0					
ANR	8490370	Argument	DISPLAY_SYNC		8490316	1					
ANR	8490371	Identifier	DISPLAY_SYNC		8490316	0					
ANR	8490372	Argument	0		8490316	2					
ANR	8490373	PrimaryExpression	0		8490316	0					
ANR	8490374	Argument	( LPARAM ) img		8490316	3					
ANR	8490375	CastExpression	( LPARAM ) img		8490316	0					
ANR	8490376	CastTarget	LPARAM		8490316	0					
ANR	8490377	Identifier	img		8490316	1					
ANR	8490378	ReturnStatement	return 0 ;	217:4:6479:6487	8490316	4	True				
ANR	8490379	PrimaryExpression	0		8490316	0					
ANR	8490380	ReturnType	int		8490316	1					
ANR	8490381	Identifier	display_sync		8490316	2					
ANR	8490382	ParameterList	"void * handle , void * device"		8490316	3					
ANR	8490383	Parameter	void * handle	206:17:6154:6165	8490316	0	True				
ANR	8490384	ParameterType	void *		8490316	0					
ANR	8490385	Identifier	handle		8490316	1					
ANR	8490386	Parameter	void * device	206:31:6168:6179	8490316	1	True				
ANR	8490387	ParameterType	void *		8490316	0					
ANR	8490388	Identifier	device		8490316	1					
ANR	8490389	CFGEntryNode	ENTRY		8490316		True				
ANR	8490390	CFGExitNode	EXIT		8490316		True				
ANR	8490391	Symbol	DISPLAY_SYNC		8490316						
ANR	8490392	Symbol	img		8490316						
ANR	8490393	Symbol	* img		8490316						
ANR	8490394	Symbol	thread_id		8490316						
ANR	8490395	Symbol	img -> pending_sync		8490316						
ANR	8490396	Symbol	stdout		8490316						
ANR	8490397	Symbol	image_find		8490316						
ANR	8490398	Symbol	handle		8490316						
ANR	8490399	Symbol	device		8490316						
ANR	8490400	Function	display_page	220:0:6492:6850							
ANR	8490401	FunctionDef	"display_page (void * handle , void * device , int copies , int flush)"		8490400	0					
ANR	8490402	CompoundStatement		221:0:6560:6850	8490400	0					
ANR	8490403	IdentifierDeclStatement	IMAGE * img ;	222:4:6566:6576	8490400	0	True				
ANR	8490404	IdentifierDecl	* img		8490400	0					
ANR	8490405	IdentifierDeclType	IMAGE *		8490400	0					
ANR	8490406	Identifier	img		8490400	1					
ANR	8490407	ExpressionStatement	"fprintf ( stdout , ""display_page(0x%x, 0x%x, copies=%d, flush=%d)\\n"" , handle , device , copies , flush )"	224:4:6603:6708	8490400	1	True				
ANR	8490408	CallExpression	"fprintf ( stdout , ""display_page(0x%x, 0x%x, copies=%d, flush=%d)\\n"" , handle , device , copies , flush )"		8490400	0					
ANR	8490409	Callee	fprintf		8490400	0					
ANR	8490410	Identifier	fprintf		8490400	0					
ANR	8490411	ArgumentList	stdout		8490400	1					
ANR	8490412	Argument	stdout		8490400	0					
ANR	8490413	Identifier	stdout		8490400	0					
ANR	8490414	Argument	"""display_page(0x%x, 0x%x, copies=%d, flush=%d)\\n"""		8490400	1					
ANR	8490415	PrimaryExpression	"""display_page(0x%x, 0x%x, copies=%d, flush=%d)\\n"""		8490400	0					
ANR	8490416	Argument	handle		8490400	2					
ANR	8490417	Identifier	handle		8490400	0					
ANR	8490418	Argument	device		8490400	3					
ANR	8490419	Identifier	device		8490400	0					
ANR	8490420	Argument	copies		8490400	4					
ANR	8490421	Identifier	copies		8490400	0					
ANR	8490422	Argument	flush		8490400	5					
ANR	8490423	Identifier	flush		8490400	0					
ANR	8490424	ExpressionStatement	"img = image_find ( handle , device )"	227:4:6721:6753	8490400	2	True				
ANR	8490425	AssignmentExpression	"img = image_find ( handle , device )"		8490400	0		=			
ANR	8490426	Identifier	img		8490400	0					
ANR	8490427	CallExpression	"image_find ( handle , device )"		8490400	1					
ANR	8490428	Callee	image_find		8490400	0					
ANR	8490429	Identifier	image_find		8490400	0					
ANR	8490430	ArgumentList	handle		8490400	1					
ANR	8490431	Argument	handle		8490400	0					
ANR	8490432	Identifier	handle		8490400	0					
ANR	8490433	Argument	device		8490400	1					
ANR	8490434	Identifier	device		8490400	0					
ANR	8490435	IfStatement	if ( img )		8490400	3					
ANR	8490436	Condition	img	228:8:6763:6765	8490400	0	True				
ANR	8490437	Identifier	img		8490400	0					
ANR	8490438	ExpressionStatement	"PostThreadMessage ( thread_id , DISPLAY_PAGE , 0 , ( LPARAM ) img )"	229:8:6776:6834	8490400	1	True				
ANR	8490439	CallExpression	"PostThreadMessage ( thread_id , DISPLAY_PAGE , 0 , ( LPARAM ) img )"		8490400	0					
ANR	8490440	Callee	PostThreadMessage		8490400	0					
ANR	8490441	Identifier	PostThreadMessage		8490400	0					
ANR	8490442	ArgumentList	thread_id		8490400	1					
ANR	8490443	Argument	thread_id		8490400	0					
ANR	8490444	Identifier	thread_id		8490400	0					
ANR	8490445	Argument	DISPLAY_PAGE		8490400	1					
ANR	8490446	Identifier	DISPLAY_PAGE		8490400	0					
ANR	8490447	Argument	0		8490400	2					
ANR	8490448	PrimaryExpression	0		8490400	0					
ANR	8490449	Argument	( LPARAM ) img		8490400	3					
ANR	8490450	CastExpression	( LPARAM ) img		8490400	0					
ANR	8490451	CastTarget	LPARAM		8490400	0					
ANR	8490452	Identifier	img		8490400	1					
ANR	8490453	ReturnStatement	return 0 ;	230:4:6840:6848	8490400	4	True				
ANR	8490454	PrimaryExpression	0		8490400	0					
ANR	8490455	ReturnType	int		8490400	1					
ANR	8490456	Identifier	display_page		8490400	2					
ANR	8490457	ParameterList	"void * handle , void * device , int copies , int flush"		8490400	3					
ANR	8490458	Parameter	void * handle	220:17:6509:6520	8490400	0	True				
ANR	8490459	ParameterType	void *		8490400	0					
ANR	8490460	Identifier	handle		8490400	1					
ANR	8490461	Parameter	void * device	220:31:6523:6534	8490400	1	True				
ANR	8490462	ParameterType	void *		8490400	0					
ANR	8490463	Identifier	device		8490400	1					
ANR	8490464	Parameter	int copies	220:45:6537:6546	8490400	2	True				
ANR	8490465	ParameterType	int		8490400	0					
ANR	8490466	Identifier	copies		8490400	1					
ANR	8490467	Parameter	int flush	220:57:6549:6557	8490400	3	True				
ANR	8490468	ParameterType	int		8490400	0					
ANR	8490469	Identifier	flush		8490400	1					
ANR	8490470	CFGEntryNode	ENTRY		8490400		True				
ANR	8490471	CFGExitNode	EXIT		8490400		True				
ANR	8490472	Symbol	img		8490400						
ANR	8490473	Symbol	thread_id		8490400						
ANR	8490474	Symbol	copies		8490400						
ANR	8490475	Symbol	flush		8490400						
ANR	8490476	Symbol	stdout		8490400						
ANR	8490477	Symbol	image_find		8490400						
ANR	8490478	Symbol	handle		8490400						
ANR	8490479	Symbol	DISPLAY_PAGE		8490400						
ANR	8490480	Symbol	device		8490400						
ANR	8490481	Function	display_update	233:0:6853:7172							
ANR	8490482	FunctionDef	"display_update (void * handle , void * device , int x , int y , int w , int h)"		8490481	0					
ANR	8490483	CompoundStatement		235:0:6932:7172	8490481	0					
ANR	8490484	IdentifierDeclStatement	IMAGE * img ;	236:4:6938:6948	8490481	0	True				
ANR	8490485	IdentifierDecl	* img		8490481	0					
ANR	8490486	IdentifierDeclType	IMAGE *		8490481	0					
ANR	8490487	Identifier	img		8490481	1					
ANR	8490488	ExpressionStatement	"img = image_find ( handle , device )"	237:4:6954:6986	8490481	1	True				
ANR	8490489	AssignmentExpression	"img = image_find ( handle , device )"		8490481	0		=			
ANR	8490490	Identifier	img		8490481	0					
ANR	8490491	CallExpression	"image_find ( handle , device )"		8490481	1					
ANR	8490492	Callee	image_find		8490481	0					
ANR	8490493	Identifier	image_find		8490481	0					
ANR	8490494	ArgumentList	handle		8490481	1					
ANR	8490495	Argument	handle		8490481	0					
ANR	8490496	Identifier	handle		8490481	0					
ANR	8490497	Argument	device		8490481	1					
ANR	8490498	Identifier	device		8490481	0					
ANR	8490499	IfStatement	if ( img && ! img -> pending_update && ! img -> pending_sync )		8490481	2					
ANR	8490500	Condition	img && ! img -> pending_update && ! img -> pending_sync	238:8:6996:7044	8490481	0	True				
ANR	8490501	AndExpression	img && ! img -> pending_update && ! img -> pending_sync		8490481	0		&&			
ANR	8490502	Identifier	img		8490481	0					
ANR	8490503	AndExpression	! img -> pending_update && ! img -> pending_sync		8490481	1		&&			
ANR	8490504	UnaryOperationExpression	! img -> pending_update		8490481	0					
ANR	8490505	UnaryOperator	!		8490481	0					
ANR	8490506	PtrMemberAccess	img -> pending_update		8490481	1					
ANR	8490507	Identifier	img		8490481	0					
ANR	8490508	Identifier	pending_update		8490481	1					
ANR	8490509	UnaryOperationExpression	! img -> pending_sync		8490481	1					
ANR	8490510	UnaryOperator	!		8490481	0					
ANR	8490511	PtrMemberAccess	img -> pending_sync		8490481	1					
ANR	8490512	Identifier	img		8490481	0					
ANR	8490513	Identifier	pending_sync		8490481	1					
ANR	8490514	CompoundStatement		4:59:114:114	8490481	1					
ANR	8490515	ExpressionStatement	img -> pending_update = 1	239:8:7057:7080	8490481	0	True				
ANR	8490516	AssignmentExpression	img -> pending_update = 1		8490481	0		=			
ANR	8490517	PtrMemberAccess	img -> pending_update		8490481	0					
ANR	8490518	Identifier	img		8490481	0					
ANR	8490519	Identifier	pending_update		8490481	1					
ANR	8490520	PrimaryExpression	1		8490481	1					
ANR	8490521	ExpressionStatement	"PostThreadMessage ( thread_id , DISPLAY_UPDATE , 0 , ( LPARAM ) img )"	240:8:7090:7150	8490481	1	True				
ANR	8490522	CallExpression	"PostThreadMessage ( thread_id , DISPLAY_UPDATE , 0 , ( LPARAM ) img )"		8490481	0					
ANR	8490523	Callee	PostThreadMessage		8490481	0					
ANR	8490524	Identifier	PostThreadMessage		8490481	0					
ANR	8490525	ArgumentList	thread_id		8490481	1					
ANR	8490526	Argument	thread_id		8490481	0					
ANR	8490527	Identifier	thread_id		8490481	0					
ANR	8490528	Argument	DISPLAY_UPDATE		8490481	1					
ANR	8490529	Identifier	DISPLAY_UPDATE		8490481	0					
ANR	8490530	Argument	0		8490481	2					
ANR	8490531	PrimaryExpression	0		8490481	0					
ANR	8490532	Argument	( LPARAM ) img		8490481	3					
ANR	8490533	CastExpression	( LPARAM ) img		8490481	0					
ANR	8490534	CastTarget	LPARAM		8490481	0					
ANR	8490535	Identifier	img		8490481	1					
ANR	8490536	ReturnStatement	return 0 ;	242:4:7162:7170	8490481	3	True				
ANR	8490537	PrimaryExpression	0		8490481	0					
ANR	8490538	ReturnType	int		8490481	1					
ANR	8490539	Identifier	display_update		8490481	2					
ANR	8490540	ParameterList	"void * handle , void * device , int x , int y , int w , int h"		8490481	3					
ANR	8490541	Parameter	void * handle	233:19:6872:6883	8490481	0	True				
ANR	8490542	ParameterType	void *		8490481	0					
ANR	8490543	Identifier	handle		8490481	1					
ANR	8490544	Parameter	void * device	233:33:6886:6897	8490481	1	True				
ANR	8490545	ParameterType	void *		8490481	0					
ANR	8490546	Identifier	device		8490481	1					
ANR	8490547	Parameter	int x	234:4:6904:6908	8490481	2	True				
ANR	8490548	ParameterType	int		8490481	0					
ANR	8490549	Identifier	x		8490481	1					
ANR	8490550	Parameter	int y	234:11:6911:6915	8490481	3	True				
ANR	8490551	ParameterType	int		8490481	0					
ANR	8490552	Identifier	y		8490481	1					
ANR	8490553	Parameter	int w	234:18:6918:6922	8490481	4	True				
ANR	8490554	ParameterType	int		8490481	0					
ANR	8490555	Identifier	w		8490481	1					
ANR	8490556	Parameter	int h	234:25:6925:6929	8490481	5	True				
ANR	8490557	ParameterType	int		8490481	0					
ANR	8490558	Identifier	h		8490481	1					
ANR	8490559	CFGEntryNode	ENTRY		8490481		True				
ANR	8490560	CFGExitNode	EXIT		8490481		True				
ANR	8490561	Symbol	img		8490481						
ANR	8490562	Symbol	img -> pending_update		8490481						
ANR	8490563	Symbol	img -> pending_sync		8490481						
ANR	8490564	Symbol	image_find		8490481						
ANR	8490565	Symbol	h		8490481						
ANR	8490566	Symbol	handle		8490481						
ANR	8490567	Symbol	* img		8490481						
ANR	8490568	Symbol	thread_id		8490481						
ANR	8490569	Symbol	DISPLAY_UPDATE		8490481						
ANR	8490570	Symbol	w		8490481						
ANR	8490571	Symbol	x		8490481						
ANR	8490572	Symbol	y		8490481						
ANR	8490573	Symbol	device		8490481						
ANR	8490574	Function	display_memalloc	250:0:7307:7631							
ANR	8490575	FunctionDef	"display_memalloc (void * handle , void * device , unsigned long size)"		8490574	0					
ANR	8490576	CompoundStatement		251:0:7378:7631	8490574	0					
ANR	8490577	IdentifierDeclStatement	void * mem ;	252:4:7384:7393	8490574	0	True				
ANR	8490578	IdentifierDecl	* mem		8490574	0					
ANR	8490579	IdentifierDeclType	void *		8490574	0					
ANR	8490580	Identifier	mem		8490574	1					
ANR	8490581	ExpressionStatement	"fprintf ( stdout , ""display_memalloc(0x%x 0x%x %d)\\n"" , handle , device , size )"	254:4:7420:7501	8490574	1	True				
ANR	8490582	CallExpression	"fprintf ( stdout , ""display_memalloc(0x%x 0x%x %d)\\n"" , handle , device , size )"		8490574	0					
ANR	8490583	Callee	fprintf		8490574	0					
ANR	8490584	Identifier	fprintf		8490574	0					
ANR	8490585	ArgumentList	stdout		8490574	1					
ANR	8490586	Argument	stdout		8490574	0					
ANR	8490587	Identifier	stdout		8490574	0					
ANR	8490588	Argument	"""display_memalloc(0x%x 0x%x %d)\\n"""		8490574	1					
ANR	8490589	PrimaryExpression	"""display_memalloc(0x%x 0x%x %d)\\n"""		8490574	0					
ANR	8490590	Argument	handle		8490574	2					
ANR	8490591	Identifier	handle		8490574	0					
ANR	8490592	Argument	device		8490574	3					
ANR	8490593	Identifier	device		8490574	0					
ANR	8490594	Argument	size		8490574	4					
ANR	8490595	Identifier	size		8490574	0					
ANR	8490596	ExpressionStatement	mem = malloc ( size )	257:4:7514:7532	8490574	2	True				
ANR	8490597	AssignmentExpression	mem = malloc ( size )		8490574	0		=			
ANR	8490598	Identifier	mem		8490574	0					
ANR	8490599	CallExpression	malloc ( size )		8490574	1					
ANR	8490600	Callee	malloc		8490574	0					
ANR	8490601	Identifier	malloc		8490574	0					
ANR	8490602	ArgumentList	size		8490574	1					
ANR	8490603	Argument	size		8490574	0					
ANR	8490604	Identifier	size		8490574	0					
ANR	8490605	ExpressionStatement	"fprintf ( stdout , ""  returning 0x%x\\n"" , ( int ) mem )"	259:4:7559:7606	8490574	3	True				
ANR	8490606	CallExpression	"fprintf ( stdout , ""  returning 0x%x\\n"" , ( int ) mem )"		8490574	0					
ANR	8490607	Callee	fprintf		8490574	0					
ANR	8490608	Identifier	fprintf		8490574	0					
ANR	8490609	ArgumentList	stdout		8490574	1					
ANR	8490610	Argument	stdout		8490574	0					
ANR	8490611	Identifier	stdout		8490574	0					
ANR	8490612	Argument	"""  returning 0x%x\\n"""		8490574	1					
ANR	8490613	PrimaryExpression	"""  returning 0x%x\\n"""		8490574	0					
ANR	8490614	Argument	( int ) mem		8490574	2					
ANR	8490615	CastExpression	( int ) mem		8490574	0					
ANR	8490616	CastTarget	int		8490574	0					
ANR	8490617	Identifier	mem		8490574	1					
ANR	8490618	ReturnStatement	return mem ;	261:4:7619:7629	8490574	4	True				
ANR	8490619	Identifier	mem		8490574	0					
ANR	8490620	ReturnType	void *		8490574	1					
ANR	8490621	Identifier	display_memalloc		8490574	2					
ANR	8490622	ParameterList	"void * handle , void * device , unsigned long size"		8490574	3					
ANR	8490623	Parameter	void * handle	250:23:7330:7341	8490574	0	True				
ANR	8490624	ParameterType	void *		8490574	0					
ANR	8490625	Identifier	handle		8490574	1					
ANR	8490626	Parameter	void * device	250:37:7344:7355	8490574	1	True				
ANR	8490627	ParameterType	void *		8490574	0					
ANR	8490628	Identifier	device		8490574	1					
ANR	8490629	Parameter	unsigned long size	250:51:7358:7375	8490574	2	True				
ANR	8490630	ParameterType	unsigned long		8490574	0					
ANR	8490631	Identifier	size		8490574	1					
ANR	8490632	CFGEntryNode	ENTRY		8490574		True				
ANR	8490633	CFGExitNode	EXIT		8490574		True				
ANR	8490634	Symbol	malloc		8490574						
ANR	8490635	Symbol	size		8490574						
ANR	8490636	Symbol	mem		8490574						
ANR	8490637	Symbol	stdout		8490574						
ANR	8490638	Symbol	handle		8490574						
ANR	8490639	Symbol	device		8490574						
ANR	8490640	Function	display_memfree	264:0:7634:7841							
ANR	8490641	FunctionDef	"display_memfree (void * handle , void * device , void * mem)"		8490640	0					
ANR	8490642	CompoundStatement		265:0:7693:7841	8490640	0					
ANR	8490643	ExpressionStatement	"fprintf ( stdout , ""display_memfree(0x%x, 0x%x, 0x%x)\\n"" , handle , device , mem )"	267:4:7720:7803	8490640	0	True				
ANR	8490644	CallExpression	"fprintf ( stdout , ""display_memfree(0x%x, 0x%x, 0x%x)\\n"" , handle , device , mem )"		8490640	0					
ANR	8490645	Callee	fprintf		8490640	0					
ANR	8490646	Identifier	fprintf		8490640	0					
ANR	8490647	ArgumentList	stdout		8490640	1					
ANR	8490648	Argument	stdout		8490640	0					
ANR	8490649	Identifier	stdout		8490640	0					
ANR	8490650	Argument	"""display_memfree(0x%x, 0x%x, 0x%x)\\n"""		8490640	1					
ANR	8490651	PrimaryExpression	"""display_memfree(0x%x, 0x%x, 0x%x)\\n"""		8490640	0					
ANR	8490652	Argument	handle		8490640	2					
ANR	8490653	Identifier	handle		8490640	0					
ANR	8490654	Argument	device		8490640	3					
ANR	8490655	Identifier	device		8490640	0					
ANR	8490656	Argument	mem		8490640	4					
ANR	8490657	Identifier	mem		8490640	0					
ANR	8490658	ExpressionStatement	free ( mem )	270:4:7816:7825	8490640	1	True				
ANR	8490659	CallExpression	free ( mem )		8490640	0					
ANR	8490660	Callee	free		8490640	0					
ANR	8490661	Identifier	free		8490640	0					
ANR	8490662	ArgumentList	mem		8490640	1					
ANR	8490663	Argument	mem		8490640	0					
ANR	8490664	Identifier	mem		8490640	0					
ANR	8490665	ReturnStatement	return 0 ;	271:4:7831:7839	8490640	2	True				
ANR	8490666	PrimaryExpression	0		8490640	0					
ANR	8490667	ReturnType	int		8490640	1					
ANR	8490668	Identifier	display_memfree		8490640	2					
ANR	8490669	ParameterList	"void * handle , void * device , void * mem"		8490640	3					
ANR	8490670	Parameter	void * handle	264:20:7654:7665	8490640	0	True				
ANR	8490671	ParameterType	void *		8490640	0					
ANR	8490672	Identifier	handle		8490640	1					
ANR	8490673	Parameter	void * device	264:34:7668:7679	8490640	1	True				
ANR	8490674	ParameterType	void *		8490640	0					
ANR	8490675	Identifier	device		8490640	1					
ANR	8490676	Parameter	void * mem	264:48:7682:7690	8490640	2	True				
ANR	8490677	ParameterType	void *		8490640	0					
ANR	8490678	Identifier	mem		8490640	1					
ANR	8490679	CFGEntryNode	ENTRY		8490640		True				
ANR	8490680	CFGExitNode	EXIT		8490640		True				
ANR	8490681	Symbol	mem		8490640						
ANR	8490682	Symbol	stdout		8490640						
ANR	8490683	Symbol	handle		8490640						
ANR	8490684	Symbol	device		8490640						
ANR	8490685	Function	display_separation	275:0:7851:8335							
ANR	8490686	FunctionDef	"display_separation (void * handle , void * device , int comp_num , const char * name , unsigned short c , unsigned short m , unsigned short y , unsigned short k)"		8490685	0					
ANR	8490687	CompoundStatement		279:0:8015:8335	8490685	0					
ANR	8490688	IdentifierDeclStatement	IMAGE * img ;	280:4:8021:8031	8490685	0	True				
ANR	8490689	IdentifierDecl	* img		8490685	0					
ANR	8490690	IdentifierDeclType	IMAGE *		8490685	0					
ANR	8490691	Identifier	img		8490685	1					
ANR	8490692	ExpressionStatement	"fprintf ( stdout , ""display_separation(0x%x, 0x%x, %d '%s' %d,%d,%d,%d)\\n"" , handle , device , comp_num , name , ( int ) c , ( int ) m , ( int ) y , ( int ) k )"	282:4:8058:8202	8490685	1	True				
ANR	8490693	CallExpression	"fprintf ( stdout , ""display_separation(0x%x, 0x%x, %d '%s' %d,%d,%d,%d)\\n"" , handle , device , comp_num , name , ( int ) c , ( int ) m , ( int ) y , ( int ) k )"		8490685	0					
ANR	8490694	Callee	fprintf		8490685	0					
ANR	8490695	Identifier	fprintf		8490685	0					
ANR	8490696	ArgumentList	stdout		8490685	1					
ANR	8490697	Argument	stdout		8490685	0					
ANR	8490698	Identifier	stdout		8490685	0					
ANR	8490699	Argument	"""display_separation(0x%x, 0x%x, %d '%s' %d,%d,%d,%d)\\n"""		8490685	1					
ANR	8490700	PrimaryExpression	"""display_separation(0x%x, 0x%x, %d '%s' %d,%d,%d,%d)\\n"""		8490685	0					
ANR	8490701	Argument	handle		8490685	2					
ANR	8490702	Identifier	handle		8490685	0					
ANR	8490703	Argument	device		8490685	3					
ANR	8490704	Identifier	device		8490685	0					
ANR	8490705	Argument	comp_num		8490685	4					
ANR	8490706	Identifier	comp_num		8490685	0					
ANR	8490707	Argument	name		8490685	5					
ANR	8490708	Identifier	name		8490685	0					
ANR	8490709	Argument	( int ) c		8490685	6					
ANR	8490710	CastExpression	( int ) c		8490685	0					
ANR	8490711	CastTarget	int		8490685	0					
ANR	8490712	Identifier	c		8490685	1					
ANR	8490713	Argument	( int ) m		8490685	7					
ANR	8490714	CastExpression	( int ) m		8490685	0					
ANR	8490715	CastTarget	int		8490685	0					
ANR	8490716	Identifier	m		8490685	1					
ANR	8490717	Argument	( int ) y		8490685	8					
ANR	8490718	CastExpression	( int ) y		8490685	0					
ANR	8490719	CastTarget	int		8490685	0					
ANR	8490720	Identifier	y		8490685	1					
ANR	8490721	Argument	( int ) k		8490685	9					
ANR	8490722	CastExpression	( int ) k		8490685	0					
ANR	8490723	CastTarget	int		8490685	0					
ANR	8490724	Identifier	k		8490685	1					
ANR	8490725	ExpressionStatement	"img = image_find ( handle , device )"	285:4:8215:8247	8490685	2	True				
ANR	8490726	AssignmentExpression	"img = image_find ( handle , device )"		8490685	0		=			
ANR	8490727	Identifier	img		8490685	0					
ANR	8490728	CallExpression	"image_find ( handle , device )"		8490685	1					
ANR	8490729	Callee	image_find		8490685	0					
ANR	8490730	Identifier	image_find		8490685	0					
ANR	8490731	ArgumentList	handle		8490685	1					
ANR	8490732	Argument	handle		8490685	0					
ANR	8490733	Identifier	handle		8490685	0					
ANR	8490734	Argument	device		8490685	1					
ANR	8490735	Identifier	device		8490685	0					
ANR	8490736	IfStatement	if ( img )		8490685	3					
ANR	8490737	Condition	img	286:8:8257:8259	8490685	0	True				
ANR	8490738	Identifier	img		8490685	0					
ANR	8490739	ExpressionStatement	"image_separation ( img , comp_num , name , c , m , y , k )"	287:8:8270:8319	8490685	1	True				
ANR	8490740	CallExpression	"image_separation ( img , comp_num , name , c , m , y , k )"		8490685	0					
ANR	8490741	Callee	image_separation		8490685	0					
ANR	8490742	Identifier	image_separation		8490685	0					
ANR	8490743	ArgumentList	img		8490685	1					
ANR	8490744	Argument	img		8490685	0					
ANR	8490745	Identifier	img		8490685	0					
ANR	8490746	Argument	comp_num		8490685	1					
ANR	8490747	Identifier	comp_num		8490685	0					
ANR	8490748	Argument	name		8490685	2					
ANR	8490749	Identifier	name		8490685	0					
ANR	8490750	Argument	c		8490685	3					
ANR	8490751	Identifier	c		8490685	0					
ANR	8490752	Argument	m		8490685	4					
ANR	8490753	Identifier	m		8490685	0					
ANR	8490754	Argument	y		8490685	5					
ANR	8490755	Identifier	y		8490685	0					
ANR	8490756	Argument	k		8490685	6					
ANR	8490757	Identifier	k		8490685	0					
ANR	8490758	ReturnStatement	return 0 ;	288:4:8325:8333	8490685	4	True				
ANR	8490759	PrimaryExpression	0		8490685	0					
ANR	8490760	ReturnType	int		8490685	1					
ANR	8490761	Identifier	display_separation		8490685	2					
ANR	8490762	ParameterList	"void * handle , void * device , int comp_num , const char * name , unsigned short c , unsigned short m , unsigned short y , unsigned short k"		8490685	3					
ANR	8490763	Parameter	void * handle	275:23:7874:7885	8490685	0	True				
ANR	8490764	ParameterType	void *		8490685	0					
ANR	8490765	Identifier	handle		8490685	1					
ANR	8490766	Parameter	void * device	275:37:7888:7899	8490685	1	True				
ANR	8490767	ParameterType	void *		8490685	0					
ANR	8490768	Identifier	device		8490685	1					
ANR	8490769	Parameter	int comp_num	276:3:7905:7916	8490685	2	True				
ANR	8490770	ParameterType	int		8490685	0					
ANR	8490771	Identifier	comp_num		8490685	1					
ANR	8490772	Parameter	const char * name	276:17:7919:7934	8490685	3	True				
ANR	8490773	ParameterType	const char *		8490685	0					
ANR	8490774	Identifier	name		8490685	1					
ANR	8490775	Parameter	unsigned short c	277:3:7940:7955	8490685	4	True				
ANR	8490776	ParameterType	unsigned short		8490685	0					
ANR	8490777	Identifier	c		8490685	1					
ANR	8490778	Parameter	unsigned short m	277:21:7958:7973	8490685	5	True				
ANR	8490779	ParameterType	unsigned short		8490685	0					
ANR	8490780	Identifier	m		8490685	1					
ANR	8490781	Parameter	unsigned short y	278:3:7979:7994	8490685	6	True				
ANR	8490782	ParameterType	unsigned short		8490685	0					
ANR	8490783	Identifier	y		8490685	1					
ANR	8490784	Parameter	unsigned short k	278:21:7997:8012	8490685	7	True				
ANR	8490785	ParameterType	unsigned short		8490685	0					
ANR	8490786	Identifier	k		8490685	1					
ANR	8490787	CFGEntryNode	ENTRY		8490685		True				
ANR	8490788	CFGExitNode	EXIT		8490685		True				
ANR	8490789	Symbol	img		8490685						
ANR	8490790	Symbol	c		8490685						
ANR	8490791	Symbol	stdout		8490685						
ANR	8490792	Symbol	image_find		8490685						
ANR	8490793	Symbol	name		8490685						
ANR	8490794	Symbol	comp_num		8490685						
ANR	8490795	Symbol	y		8490685						
ANR	8490796	Symbol	handle		8490685						
ANR	8490797	Symbol	k		8490685						
ANR	8490798	Symbol	device		8490685						
ANR	8490799	Symbol	m		8490685						
ANR	8490800	DeclStmt									
ANR	8490801	Decl							display_callback	display_callback	display
ANR	8490802	Function	avoid_windows_scale	315:0:8877:9268							
ANR	8490803	FunctionDef	avoid_windows_scale ()		8490802	0					
ANR	8490804	CompoundStatement		317:0:8915:9268	8490802	0					
ANR	8490805	IdentifierDeclStatement	"HMODULE hUser32 = LoadLibrary ( TEXT ( ""user32.dll"" ) ) ;"	320:4:9042:9091	8490802	0	True				
ANR	8490806	IdentifierDecl	"hUser32 = LoadLibrary ( TEXT ( ""user32.dll"" ) )"		8490802	0					
ANR	8490807	IdentifierDeclType	HMODULE		8490802	0					
ANR	8490808	Identifier	hUser32		8490802	1					
ANR	8490809	AssignmentExpression	"hUser32 = LoadLibrary ( TEXT ( ""user32.dll"" ) )"		8490802	2		=			
ANR	8490810	Identifier	hUser32		8490802	0					
ANR	8490811	CallExpression	"LoadLibrary ( TEXT ( ""user32.dll"" ) )"		8490802	1					
ANR	8490812	Callee	LoadLibrary		8490802	0					
ANR	8490813	Identifier	LoadLibrary		8490802	0					
ANR	8490814	ArgumentList	"TEXT ( ""user32.dll"" )"		8490802	1					
ANR	8490815	Argument	"TEXT ( ""user32.dll"" )"		8490802	0					
ANR	8490816	CallExpression	"TEXT ( ""user32.dll"" )"		8490802	0					
ANR	8490817	Callee	TEXT		8490802	0					
ANR	8490818	Identifier	TEXT		8490802	0					
ANR	8490819	ArgumentList	"""user32.dll"""		8490802	1					
ANR	8490820	Argument	"""user32.dll"""		8490802	0					
ANR	8490821	PrimaryExpression	"""user32.dll"""		8490802	0					
ANR	8490822	IdentifierDeclStatement	SetProcessDPIAwareFn * ptr ;	321:4:9097:9122	8490802	1	True				
ANR	8490823	IdentifierDecl	* ptr		8490802	0					
ANR	8490824	IdentifierDeclType	SetProcessDPIAwareFn *		8490802	0					
ANR	8490825	Identifier	ptr		8490802	1					
ANR	8490826	ExpressionStatement	"ptr = ( SetProcessDPIAwareFn * ) GetProcAddress ( hUser32 , ""SetProcessDPIAware"" )"	323:4:9129:9204	8490802	2	True				
ANR	8490827	AssignmentExpression	"ptr = ( SetProcessDPIAwareFn * ) GetProcAddress ( hUser32 , ""SetProcessDPIAware"" )"		8490802	0		=			
ANR	8490828	Identifier	ptr		8490802	0					
ANR	8490829	CastExpression	"( SetProcessDPIAwareFn * ) GetProcAddress ( hUser32 , ""SetProcessDPIAware"" )"		8490802	1					
ANR	8490830	CastTarget	SetProcessDPIAwareFn *		8490802	0					
ANR	8490831	CallExpression	"GetProcAddress ( hUser32 , ""SetProcessDPIAware"" )"		8490802	1					
ANR	8490832	Callee	GetProcAddress		8490802	0					
ANR	8490833	Identifier	GetProcAddress		8490802	0					
ANR	8490834	ArgumentList	hUser32		8490802	1					
ANR	8490835	Argument	hUser32		8490802	0					
ANR	8490836	Identifier	hUser32		8490802	0					
ANR	8490837	Argument	"""SetProcessDPIAware"""		8490802	1					
ANR	8490838	PrimaryExpression	"""SetProcessDPIAware"""		8490802	0					
ANR	8490839	IfStatement	if ( ptr != NULL )		8490802	3					
ANR	8490840	Condition	ptr != NULL	324:8:9214:9224	8490802	0	True				
ANR	8490841	EqualityExpression	ptr != NULL		8490802	0		!=			
ANR	8490842	Identifier	ptr		8490802	0					
ANR	8490843	Identifier	NULL		8490802	1					
ANR	8490844	ExpressionStatement	ptr ( )	325:8:9235:9240	8490802	1	True				
ANR	8490845	CallExpression	ptr ( )		8490802	0					
ANR	8490846	Callee	ptr		8490802	0					
ANR	8490847	Identifier	ptr		8490802	0					
ANR	8490848	ArgumentList			8490802	1					
ANR	8490849	ExpressionStatement	FreeLibrary ( hUser32 )	326:4:9246:9266	8490802	4	True				
ANR	8490850	CallExpression	FreeLibrary ( hUser32 )		8490802	0					
ANR	8490851	Callee	FreeLibrary		8490802	0					
ANR	8490852	Identifier	FreeLibrary		8490802	0					
ANR	8490853	ArgumentList	hUser32		8490802	1					
ANR	8490854	Argument	hUser32		8490802	0					
ANR	8490855	Identifier	hUser32		8490802	0					
ANR	8490856	ReturnType	static void		8490802	1					
ANR	8490857	Identifier	avoid_windows_scale		8490802	2					
ANR	8490858	ParameterList			8490802	3					
ANR	8490859	CFGEntryNode	ENTRY		8490802		True				
ANR	8490860	CFGExitNode	EXIT		8490802		True				
ANR	8490861	Symbol	NULL		8490802						
ANR	8490862	Symbol	LoadLibrary		8490802						
ANR	8490863	Symbol	GetProcAddress		8490802						
ANR	8490864	Symbol	hUser32		8490802						
ANR	8490865	Symbol	TEXT		8490802						
ANR	8490866	Symbol	ptr		8490802						
ANR	8490867	DeclStmt									
ANR	8490868	Decl							int	int	code
ANR	8490869	Decl							int	int	code1
ANR	8490870	DeclStmt									
ANR	8490871	Decl							int	int	exit_code
ANR	8490872	DeclStmt									
ANR	8490873	Decl							int	int	exit_status
ANR	8490874	DeclStmt									
ANR	8490875	Decl							int	int	nargc
ANR	8490876	DeclStmt									
ANR	8490877	Decl							char	char * *	nargv
ANR	8490878	DeclStmt									
ANR	8490879	Decl							char	char [ 64 ]	dformat
ANR	8490880	DeclStmt									
ANR	8490881	Decl							char	char [ 64 ]	ddpi
ANR	8490882	DeclStmt									
ANR	8490883	Decl							int	int	n
ANR	8490884	DeclStmt									
ANR	8490885	Decl							int	int	format
ANR	8490886	DeclStmt									
ANR	8490887	Decl							HDC	HDC	hdc
ANR	8490888	DeclStmt									
ANR	8490889	Decl							int	int	depth
ANR	8490890	Function	wmain	462:0:13300:14229							
ANR	8490891	FunctionDef	"wmain (int argc , wchar_t * argv [ ] , wchar_t * envp [ ])"		8490890	0					
ANR	8490892	CompoundStatement		462:54:13354:14229	8490890	0					
ANR	8490893	IdentifierDeclStatement	char * * nargv ;	464:4:13393:13405	8490890	0	True				
ANR	8490894	IdentifierDecl	* * nargv		8490890	0					
ANR	8490895	IdentifierDeclType	char * *		8490890	0					
ANR	8490896	Identifier	nargv		8490890	1					
ANR	8490897	IdentifierDeclStatement	"int i , code , cp ;"	465:4:13411:13426	8490890	1	True				
ANR	8490898	IdentifierDecl	i		8490890	0					
ANR	8490899	IdentifierDeclType	int		8490890	0					
ANR	8490900	Identifier	i		8490890	1					
ANR	8490901	IdentifierDecl	code		8490890	1					
ANR	8490902	IdentifierDeclType	int		8490890	0					
ANR	8490903	Identifier	code		8490890	1					
ANR	8490904	IdentifierDecl	cp		8490890	2					
ANR	8490905	IdentifierDeclType	int		8490890	0					
ANR	8490906	Identifier	cp		8490890	1					
ANR	8490907	ExpressionStatement	"nargv = calloc ( argc , sizeof ( nargv [ 0 ] ) )"	467:4:13433:13471	8490890	2	True				
ANR	8490908	AssignmentExpression	"nargv = calloc ( argc , sizeof ( nargv [ 0 ] ) )"		8490890	0		=			
ANR	8490909	Identifier	nargv		8490890	0					
ANR	8490910	CallExpression	"calloc ( argc , sizeof ( nargv [ 0 ] ) )"		8490890	1					
ANR	8490911	Callee	calloc		8490890	0					
ANR	8490912	Identifier	calloc		8490890	0					
ANR	8490913	ArgumentList	argc		8490890	1					
ANR	8490914	Argument	argc		8490890	0					
ANR	8490915	Identifier	argc		8490890	0					
ANR	8490916	Argument	sizeof ( nargv [ 0 ] )		8490890	1					
ANR	8490917	SizeofExpression	sizeof ( nargv [ 0 ] )		8490890	0					
ANR	8490918	Sizeof	sizeof		8490890	0					
ANR	8490919	ArrayIndexing	nargv [ 0 ]		8490890	1					
ANR	8490920	Identifier	nargv		8490890	0					
ANR	8490921	PrimaryExpression	0		8490890	1					
ANR	8490922	IfStatement	if ( nargv == NULL )		8490890	3					
ANR	8490923	Condition	nargv == NULL	468:8:13481:13493	8490890	0	True				
ANR	8490924	EqualityExpression	nargv == NULL		8490890	0		==			
ANR	8490925	Identifier	nargv		8490890	0					
ANR	8490926	Identifier	NULL		8490890	1					
ANR	8490927	GotoStatement	goto err ;	469:8:13504:13512	8490890	1	True				
ANR	8490928	Identifier	err		8490890	0					
ANR	8490929	ForStatement	for ( i = 0 ; i < argc ; i ++ )		8490890	4					
ANR	8490930	ForInit	i = 0 ;	470:9:13523:13526	8490890	0	True				
ANR	8490931	AssignmentExpression	i = 0		8490890	0		=			
ANR	8490932	Identifier	i		8490890	0					
ANR	8490933	PrimaryExpression	0		8490890	1					
ANR	8490934	Condition	i < argc	470:14:13528:13535	8490890	1	True				
ANR	8490935	RelationalExpression	i < argc		8490890	0		<			
ANR	8490936	Identifier	i		8490890	0					
ANR	8490937	Identifier	argc		8490890	1					
ANR	8490938	PostIncDecOperationExpression	i ++	470:24:13538:13540	8490890	2	True				
ANR	8490939	Identifier	i		8490890	0					
ANR	8490940	IncDec	++		8490890	1					
ANR	8490941	CompoundStatement		9:29:188:188	8490890	3					
ANR	8490942	ExpressionStatement	"nargv [ i ] = malloc ( wchar_to_utf8 ( NULL , argv [ i ] ) )"	471:8:13553:13600	8490890	0	True				
ANR	8490943	AssignmentExpression	"nargv [ i ] = malloc ( wchar_to_utf8 ( NULL , argv [ i ] ) )"		8490890	0		=			
ANR	8490944	ArrayIndexing	nargv [ i ]		8490890	0					
ANR	8490945	Identifier	nargv		8490890	0					
ANR	8490946	Identifier	i		8490890	1					
ANR	8490947	CallExpression	"malloc ( wchar_to_utf8 ( NULL , argv [ i ] ) )"		8490890	1					
ANR	8490948	Callee	malloc		8490890	0					
ANR	8490949	Identifier	malloc		8490890	0					
ANR	8490950	ArgumentList	"wchar_to_utf8 ( NULL , argv [ i ] )"		8490890	1					
ANR	8490951	Argument	"wchar_to_utf8 ( NULL , argv [ i ] )"		8490890	0					
ANR	8490952	CallExpression	"wchar_to_utf8 ( NULL , argv [ i ] )"		8490890	0					
ANR	8490953	Callee	wchar_to_utf8		8490890	0					
ANR	8490954	Identifier	wchar_to_utf8		8490890	0					
ANR	8490955	ArgumentList	NULL		8490890	1					
ANR	8490956	Argument	NULL		8490890	0					
ANR	8490957	Identifier	NULL		8490890	0					
ANR	8490958	Argument	argv [ i ]		8490890	1					
ANR	8490959	ArrayIndexing	argv [ i ]		8490890	0					
ANR	8490960	Identifier	argv		8490890	0					
ANR	8490961	Identifier	i		8490890	1					
ANR	8490962	IfStatement	if ( nargv [ i ] == NULL )		8490890	1					
ANR	8490963	Condition	nargv [ i ] == NULL	472:12:13614:13629	8490890	0	True				
ANR	8490964	EqualityExpression	nargv [ i ] == NULL		8490890	0		==			
ANR	8490965	ArrayIndexing	nargv [ i ]		8490890	0					
ANR	8490966	Identifier	nargv		8490890	0					
ANR	8490967	Identifier	i		8490890	1					
ANR	8490968	Identifier	NULL		8490890	1					
ANR	8490969	GotoStatement	goto err ;	473:12:13644:13652	8490890	1	True				
ANR	8490970	Identifier	err		8490890	0					
ANR	8490971	ExpressionStatement	"( void ) wchar_to_utf8 ( nargv [ i ] , argv [ i ] )"	474:8:13662:13700	8490890	2	True				
ANR	8490972	CastExpression	"( void ) wchar_to_utf8 ( nargv [ i ] , argv [ i ] )"		8490890	0					
ANR	8490973	CastTarget	void		8490890	0					
ANR	8490974	CallExpression	"wchar_to_utf8 ( nargv [ i ] , argv [ i ] )"		8490890	1					
ANR	8490975	Callee	wchar_to_utf8		8490890	0					
ANR	8490976	Identifier	wchar_to_utf8		8490890	0					
ANR	8490977	ArgumentList	nargv [ i ]		8490890	1					
ANR	8490978	Argument	nargv [ i ]		8490890	0					
ANR	8490979	ArrayIndexing	nargv [ i ]		8490890	0					
ANR	8490980	Identifier	nargv		8490890	0					
ANR	8490981	Identifier	i		8490890	1					
ANR	8490982	Argument	argv [ i ]		8490890	1					
ANR	8490983	ArrayIndexing	argv [ i ]		8490890	0					
ANR	8490984	Identifier	argv		8490890	0					
ANR	8490985	Identifier	i		8490890	1					
ANR	8490986	ExpressionStatement	cp = GetConsoleOutputCP ( )	480:4:13825:13850	8490890	5	True				
ANR	8490987	AssignmentExpression	cp = GetConsoleOutputCP ( )		8490890	0		=			
ANR	8490988	Identifier	cp		8490890	0					
ANR	8490989	CallExpression	GetConsoleOutputCP ( )		8490890	1					
ANR	8490990	Callee	GetConsoleOutputCP		8490890	0					
ANR	8490991	Identifier	GetConsoleOutputCP		8490890	0					
ANR	8490992	ArgumentList			8490890	1					
ANR	8490993	ExpressionStatement	SetConsoleOutputCP ( CP_UTF8 )	481:4:13856:13883	8490890	6	True				
ANR	8490994	CallExpression	SetConsoleOutputCP ( CP_UTF8 )		8490890	0					
ANR	8490995	Callee	SetConsoleOutputCP		8490890	0					
ANR	8490996	Identifier	SetConsoleOutputCP		8490890	0					
ANR	8490997	ArgumentList	CP_UTF8		8490890	1					
ANR	8490998	Argument	CP_UTF8		8490890	0					
ANR	8490999	Identifier	CP_UTF8		8490890	0					
ANR	8491000	ExpressionStatement	"code = main_utf8 ( argc , nargv )"	483:4:13890:13919	8490890	7	True				
ANR	8491001	AssignmentExpression	"code = main_utf8 ( argc , nargv )"		8490890	0		=			
ANR	8491002	Identifier	code		8490890	0					
ANR	8491003	CallExpression	"main_utf8 ( argc , nargv )"		8490890	1					
ANR	8491004	Callee	main_utf8		8490890	0					
ANR	8491005	Identifier	main_utf8		8490890	0					
ANR	8491006	ArgumentList	argc		8490890	1					
ANR	8491007	Argument	argc		8490890	0					
ANR	8491008	Identifier	argc		8490890	0					
ANR	8491009	Argument	nargv		8490890	1					
ANR	8491010	Identifier	nargv		8490890	0					
ANR	8491011	ExpressionStatement	SetConsoleOutputCP ( cp )	485:4:13926:13948	8490890	8	True				
ANR	8491012	CallExpression	SetConsoleOutputCP ( cp )		8490890	0					
ANR	8491013	Callee	SetConsoleOutputCP		8490890	0					
ANR	8491014	Identifier	SetConsoleOutputCP		8490890	0					
ANR	8491015	ArgumentList	cp		8490890	1					
ANR	8491016	Argument	cp		8490890	0					
ANR	8491017	Identifier	cp		8490890	0					
ANR	8491018	IfStatement	if ( 0 )		8490890	9					
ANR	8491019	Condition	0	487:8:13959:13959	8490890	0	True				
ANR	8491020	PrimaryExpression	0		8490890	0					
ANR	8491021	CompoundStatement		26:11:607:607	8490890	1					
ANR	8491022	Label	err :	488:0:13964:13967	8490890	0	True				
ANR	8491023	Identifier	err		8490890	0					
ANR	8491024	ExpressionStatement	"fprintf ( stderr , ""Ghostscript failed to initialise due to malloc failure\\n"" )"	489:8:13977:14068	8490890	1	True				
ANR	8491025	CallExpression	"fprintf ( stderr , ""Ghostscript failed to initialise due to malloc failure\\n"" )"		8490890	0					
ANR	8491026	Callee	fprintf		8490890	0					
ANR	8491027	Identifier	fprintf		8490890	0					
ANR	8491028	ArgumentList	stderr		8490890	1					
ANR	8491029	Argument	stderr		8490890	0					
ANR	8491030	Identifier	stderr		8490890	0					
ANR	8491031	Argument	"""Ghostscript failed to initialise due to malloc failure\\n"""		8490890	1					
ANR	8491032	PrimaryExpression	"""Ghostscript failed to initialise due to malloc failure\\n"""		8490890	0					
ANR	8491033	ExpressionStatement	code = - 1	491:8:14078:14087	8490890	2	True				
ANR	8491034	AssignmentExpression	code = - 1		8490890	0		=			
ANR	8491035	Identifier	code		8490890	0					
ANR	8491036	UnaryOperationExpression	- 1		8490890	1					
ANR	8491037	UnaryOperator	-		8490890	0					
ANR	8491038	PrimaryExpression	1		8490890	1					
ANR	8491039	IfStatement	if ( nargv )		8490890	10					
ANR	8491040	Condition	nargv	494:8:14104:14108	8490890	0	True				
ANR	8491041	Identifier	nargv		8490890	0					
ANR	8491042	CompoundStatement		33:15:756:756	8490890	1					
ANR	8491043	ForStatement	for ( i = 0 ; i < argc ; i ++ )		8490890	0					
ANR	8491044	ForInit	i = 0 ;	495:13:14126:14129	8490890	0	True				
ANR	8491045	AssignmentExpression	i = 0		8490890	0		=			
ANR	8491046	Identifier	i		8490890	0					
ANR	8491047	PrimaryExpression	0		8490890	1					
ANR	8491048	Condition	i < argc	495:18:14131:14136	8490890	1	True				
ANR	8491049	RelationalExpression	i < argc		8490890	0		<			
ANR	8491050	Identifier	i		8490890	0					
ANR	8491051	Identifier	argc		8490890	1					
ANR	8491052	PostIncDecOperationExpression	i ++	495:26:14139:14141	8490890	2	True				
ANR	8491053	Identifier	i		8490890	0					
ANR	8491054	IncDec	++		8490890	1					
ANR	8491055	CompoundStatement		34:31:789:789	8490890	3					
ANR	8491056	ExpressionStatement	free ( nargv [ i ] )	496:12:14158:14172	8490890	0	True				
ANR	8491057	CallExpression	free ( nargv [ i ] )		8490890	0					
ANR	8491058	Callee	free		8490890	0					
ANR	8491059	Identifier	free		8490890	0					
ANR	8491060	ArgumentList	nargv [ i ]		8490890	1					
ANR	8491061	Argument	nargv [ i ]		8490890	0					
ANR	8491062	ArrayIndexing	nargv [ i ]		8490890	0					
ANR	8491063	Identifier	nargv		8490890	0					
ANR	8491064	Identifier	i		8490890	1					
ANR	8491065	ExpressionStatement	free ( nargv )	498:8:14192:14203	8490890	1	True				
ANR	8491066	CallExpression	free ( nargv )		8490890	0					
ANR	8491067	Callee	free		8490890	0					
ANR	8491068	Identifier	free		8490890	0					
ANR	8491069	ArgumentList	nargv		8490890	1					
ANR	8491070	Argument	nargv		8490890	0					
ANR	8491071	Identifier	nargv		8490890	0					
ANR	8491072	ReturnStatement	return code ;	501:4:14216:14227	8490890	11	True				
ANR	8491073	Identifier	code		8490890	0					
ANR	8491074	ReturnType	int		8490890	1					
ANR	8491075	Identifier	wmain		8490890	2					
ANR	8491076	ParameterList	"int argc , wchar_t * argv [ ] , wchar_t * envp [ ]"		8490890	3					
ANR	8491077	Parameter	int argc	462:10:13310:13317	8490890	0	True				
ANR	8491078	ParameterType	int		8490890	0					
ANR	8491079	Identifier	argc		8490890	1					
ANR	8491080	Parameter	wchar_t * argv [ ]	462:20:13320:13334	8490890	1	True				
ANR	8491081	ParameterType	wchar_t * [ ]		8490890	0					
ANR	8491082	Identifier	argv		8490890	1					
ANR	8491083	Parameter	wchar_t * envp [ ]	462:37:13337:13351	8490890	2	True				
ANR	8491084	ParameterType	wchar_t * [ ]		8490890	0					
ANR	8491085	Identifier	envp		8490890	1					
ANR	8491086	CFGEntryNode	ENTRY		8490890		True				
ANR	8491087	CFGExitNode	EXIT		8490890		True				
ANR	8491088	Symbol	argc		8490890						
ANR	8491089	Symbol	malloc		8490890						
ANR	8491090	Symbol	code		8490890						
ANR	8491091	Symbol	NULL		8490890						
ANR	8491092	Symbol	* nargv		8490890						
ANR	8491093	Symbol	CP_UTF8		8490890						
ANR	8491094	Symbol	i		8490890						
ANR	8491095	Symbol	* argv		8490890						
ANR	8491096	Symbol	calloc		8490890						
ANR	8491097	Symbol	envp		8490890						
ANR	8491098	Symbol	stderr		8490890						
ANR	8491099	Symbol	argv		8490890						
ANR	8491100	Symbol	cp		8490890						
ANR	8491101	Symbol	wchar_to_utf8		8490890						
ANR	8491102	Symbol	* i		8490890						
ANR	8491103	Symbol	nargv		8490890						
ANR	8491104	Symbol	GetConsoleOutputCP		8490890						
ANR	8491105	Symbol	main_utf8		8490890						
