command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6015193	File	data/converged/CVE-2018-16863_ghostpdl/ijs_server_example.c								
ANR	6015194	DeclStmt									
ANR	6015195	Decl							struct _ExampleParamList	struct _ExampleParamList	ExampleParamList
ANR	6015196	ClassDef	_ExampleParamList	35:0:1316:1415							
ANR	6015197	DeclStmt									
ANR	6015198	Decl							ExampleParamList	ExampleParamList *	next
ANR	6015199	DeclStmt									
ANR	6015200	Decl							char	char *	key
ANR	6015201	DeclStmt									
ANR	6015202	Decl							char	char *	value
ANR	6015203	DeclStmt									
ANR	6015204	Decl							int	int	value_size
ANR	6015205	Function	example_status_cb	42:0:1419:1557							
ANR	6015206	FunctionDef	"example_status_cb (void * status_cb_data , IjsServerCtx * ctx , IjsJobId job_id)"		6015205	0					
ANR	6015207	CompoundStatement		46:0:1543:1557	6015205	0					
ANR	6015208	ReturnStatement	return 0 ;	47:2:1547:1555	6015205	0	True				
ANR	6015209	PrimaryExpression	0		6015205	0					
ANR	6015210	ReturnType	static int		6015205	1					
ANR	6015211	Identifier	example_status_cb		6015205	2					
ANR	6015212	ParameterList	"void * status_cb_data , IjsServerCtx * ctx , IjsJobId job_id"		6015205	3					
ANR	6015213	Parameter	void * status_cb_data	43:19:1449:1468	6015205	0	True				
ANR	6015214	ParameterType	void *		6015205	0					
ANR	6015215	Identifier	status_cb_data		6015205	1					
ANR	6015216	Parameter	IjsServerCtx * ctx	44:18:1489:1505	6015205	1	True				
ANR	6015217	ParameterType	IjsServerCtx *		6015205	0					
ANR	6015218	Identifier	ctx		6015205	1					
ANR	6015219	Parameter	IjsJobId job_id	45:18:1526:1540	6015205	2	True				
ANR	6015220	ParameterType	IjsJobId		6015205	0					
ANR	6015221	Identifier	job_id		6015205	1					
ANR	6015222	CFGEntryNode	ENTRY		6015205		True				
ANR	6015223	CFGExitNode	EXIT		6015205		True				
ANR	6015224	Symbol	status_cb_data		6015205						
ANR	6015225	Symbol	ctx		6015205						
ANR	6015226	Symbol	job_id		6015205						
ANR	6015227	Function	example_list_cb	50:0:1560:2105							
ANR	6015228	FunctionDef	"example_list_cb (void * list_cb_data , IjsServerCtx * ctx , IjsJobId job_id , char * val_buf , int val_size)"		6015227	0					
ANR	6015229	CompoundStatement		56:0:1741:2105	6015227	0					
ANR	6015230	IdentifierDeclStatement	"const char * param_list = ""OutputFile,DeviceManufacturer,DeviceModel,PageImageFormat,Dpi,Width,Height,BitsPerSample,ColorSpace,NumChan,PaperSize,PrintableArea,PrintableTopLeft,TopLeft"" ;"	57:2:1745:1928	6015227	0	True				
ANR	6015231	IdentifierDecl	"* param_list = ""OutputFile,DeviceManufacturer,DeviceModel,PageImageFormat,Dpi,Width,Height,BitsPerSample,ColorSpace,NumChan,PaperSize,PrintableArea,PrintableTopLeft,TopLeft"""		6015227	0					
ANR	6015232	IdentifierDeclType	const char *		6015227	0					
ANR	6015233	Identifier	param_list		6015227	1					
ANR	6015234	AssignmentExpression	"* param_list = ""OutputFile,DeviceManufacturer,DeviceModel,PageImageFormat,Dpi,Width,Height,BitsPerSample,ColorSpace,NumChan,PaperSize,PrintableArea,PrintableTopLeft,TopLeft"""		6015227	2		=			
ANR	6015235	Identifier	param_list		6015227	0					
ANR	6015236	PrimaryExpression	"""OutputFile,DeviceManufacturer,DeviceModel,PageImageFormat,Dpi,Width,Height,BitsPerSample,ColorSpace,NumChan,PaperSize,PrintableArea,PrintableTopLeft,TopLeft"""		6015227	1					
ANR	6015237	IdentifierDeclStatement	int size = strlen ( param_list ) ;	58:2:1932:1962	6015227	1	True				
ANR	6015238	IdentifierDecl	size = strlen ( param_list )		6015227	0					
ANR	6015239	IdentifierDeclType	int		6015227	0					
ANR	6015240	Identifier	size		6015227	1					
ANR	6015241	AssignmentExpression	size = strlen ( param_list )		6015227	2		=			
ANR	6015242	Identifier	size		6015227	0					
ANR	6015243	CallExpression	strlen ( param_list )		6015227	1					
ANR	6015244	Callee	strlen		6015227	0					
ANR	6015245	Identifier	strlen		6015227	0					
ANR	6015246	ArgumentList	param_list		6015227	1					
ANR	6015247	Argument	param_list		6015227	0					
ANR	6015248	Identifier	param_list		6015227	0					
ANR	6015249	ExpressionStatement	"fprintf ( stderr , ""example_list_cb\\n"" )"	60:2:1967:2004	6015227	2	True				
ANR	6015250	CallExpression	"fprintf ( stderr , ""example_list_cb\\n"" )"		6015227	0					
ANR	6015251	Callee	fprintf		6015227	0					
ANR	6015252	Identifier	fprintf		6015227	0					
ANR	6015253	ArgumentList	stderr		6015227	1					
ANR	6015254	Argument	stderr		6015227	0					
ANR	6015255	Identifier	stderr		6015227	0					
ANR	6015256	Argument	"""example_list_cb\\n"""		6015227	1					
ANR	6015257	PrimaryExpression	"""example_list_cb\\n"""		6015227	0					
ANR	6015258	IfStatement	if ( size > val_size )		6015227	3					
ANR	6015259	Condition	size > val_size	62:6:2013:2027	6015227	0	True				
ANR	6015260	RelationalExpression	size > val_size		6015227	0		>			
ANR	6015261	Identifier	size		6015227	0					
ANR	6015262	Identifier	val_size		6015227	1					
ANR	6015263	ReturnStatement	return IJS_EBUF ;	63:4:2034:2049	6015227	1	True				
ANR	6015264	Identifier	IJS_EBUF		6015227	0					
ANR	6015265	ExpressionStatement	"memcpy ( val_buf , param_list , size )"	65:2:2054:2088	6015227	4	True				
ANR	6015266	CallExpression	"memcpy ( val_buf , param_list , size )"		6015227	0					
ANR	6015267	Callee	memcpy		6015227	0					
ANR	6015268	Identifier	memcpy		6015227	0					
ANR	6015269	ArgumentList	val_buf		6015227	1					
ANR	6015270	Argument	val_buf		6015227	0					
ANR	6015271	Identifier	val_buf		6015227	0					
ANR	6015272	Argument	param_list		6015227	1					
ANR	6015273	Identifier	param_list		6015227	0					
ANR	6015274	Argument	size		6015227	2					
ANR	6015275	Identifier	size		6015227	0					
ANR	6015276	ReturnStatement	return size ;	66:2:2092:2103	6015227	5	True				
ANR	6015277	Identifier	size		6015227	0					
ANR	6015278	ReturnType	static int		6015227	1					
ANR	6015279	Identifier	example_list_cb		6015227	2					
ANR	6015280	ParameterList	"void * list_cb_data , IjsServerCtx * ctx , IjsJobId job_id , char * val_buf , int val_size"		6015227	3					
ANR	6015281	Parameter	void * list_cb_data	51:17:1588:1605	6015227	0	True				
ANR	6015282	ParameterType	void *		6015227	0					
ANR	6015283	Identifier	list_cb_data		6015227	1					
ANR	6015284	Parameter	IjsServerCtx * ctx	52:17:1625:1641	6015227	1	True				
ANR	6015285	ParameterType	IjsServerCtx *		6015227	0					
ANR	6015286	Identifier	ctx		6015227	1					
ANR	6015287	Parameter	IjsJobId job_id	53:17:1661:1675	6015227	2	True				
ANR	6015288	ParameterType	IjsJobId		6015227	0					
ANR	6015289	Identifier	job_id		6015227	1					
ANR	6015290	Parameter	char * val_buf	54:17:1695:1707	6015227	3	True				
ANR	6015291	ParameterType	char *		6015227	0					
ANR	6015292	Identifier	val_buf		6015227	1					
ANR	6015293	Parameter	int val_size	55:17:1727:1738	6015227	4	True				
ANR	6015294	ParameterType	int		6015227	0					
ANR	6015295	Identifier	val_size		6015227	1					
ANR	6015296	CFGEntryNode	ENTRY		6015227		True				
ANR	6015297	CFGExitNode	EXIT		6015227		True				
ANR	6015298	Symbol	strlen		6015227						
ANR	6015299	Symbol	size		6015227						
ANR	6015300	Symbol	list_cb_data		6015227						
ANR	6015301	Symbol	ctx		6015227						
ANR	6015302	Symbol	job_id		6015227						
ANR	6015303	Symbol	val_buf		6015227						
ANR	6015304	Symbol	IJS_EBUF		6015227						
ANR	6015305	Symbol	val_size		6015227						
ANR	6015306	Symbol	stderr		6015227						
ANR	6015307	Symbol	param_list		6015227						
ANR	6015308	Function	example_enum_cb	69:0:2108:2850							
ANR	6015309	FunctionDef	"example_enum_cb (void * enum_cb_data , IjsServerCtx * ctx , IjsJobId job_id , const char * key , char * val_buf , int val_size)"		6015308	0					
ANR	6015310	CompoundStatement		76:0:2323:2850	6015308	0					
ANR	6015311	IdentifierDeclStatement	const char * val = NULL ;	77:2:2327:2349	6015308	0	True				
ANR	6015312	IdentifierDecl	* val = NULL		6015308	0					
ANR	6015313	IdentifierDeclType	const char *		6015308	0					
ANR	6015314	Identifier	val		6015308	1					
ANR	6015315	AssignmentExpression	* val = NULL		6015308	2		=			
ANR	6015316	Identifier	NULL		6015308	0					
ANR	6015317	Identifier	NULL		6015308	1					
ANR	6015318	IfStatement	"if ( ! strcmp ( key , ""ColorSpace"" ) )"		6015308	1					
ANR	6015319	Condition	"! strcmp ( key , ""ColorSpace"" )"	78:6:2357:2383	6015308	0	True				
ANR	6015320	UnaryOperationExpression	"! strcmp ( key , ""ColorSpace"" )"		6015308	0					
ANR	6015321	UnaryOperator	!		6015308	0					
ANR	6015322	CallExpression	"strcmp ( key , ""ColorSpace"" )"		6015308	1					
ANR	6015323	Callee	strcmp		6015308	0					
ANR	6015324	Identifier	strcmp		6015308	0					
ANR	6015325	ArgumentList	key		6015308	1					
ANR	6015326	Argument	key		6015308	0					
ANR	6015327	Identifier	key		6015308	0					
ANR	6015328	Argument	"""ColorSpace"""		6015308	1					
ANR	6015329	PrimaryExpression	"""ColorSpace"""		6015308	0					
ANR	6015330	ExpressionStatement	"val = ""DeviceRGB,DeviceGray,DeviceCMYK"""	79:4:2390:2429	6015308	1	True				
ANR	6015331	AssignmentExpression	"val = ""DeviceRGB,DeviceGray,DeviceCMYK"""		6015308	0		=			
ANR	6015332	Identifier	val		6015308	0					
ANR	6015333	PrimaryExpression	"""DeviceRGB,DeviceGray,DeviceCMYK"""		6015308	1					
ANR	6015334	ElseStatement	else		6015308	0					
ANR	6015335	IfStatement	"if ( ! strcmp ( key , ""DeviceManufacturer"" ) )"		6015308	0					
ANR	6015336	Condition	"! strcmp ( key , ""DeviceManufacturer"" )"	80:11:2442:2476	6015308	0	True				
ANR	6015337	UnaryOperationExpression	"! strcmp ( key , ""DeviceManufacturer"" )"		6015308	0					
ANR	6015338	UnaryOperator	!		6015308	0					
ANR	6015339	CallExpression	"strcmp ( key , ""DeviceManufacturer"" )"		6015308	1					
ANR	6015340	Callee	strcmp		6015308	0					
ANR	6015341	Identifier	strcmp		6015308	0					
ANR	6015342	ArgumentList	key		6015308	1					
ANR	6015343	Argument	key		6015308	0					
ANR	6015344	Identifier	key		6015308	0					
ANR	6015345	Argument	"""DeviceManufacturer"""		6015308	1					
ANR	6015346	PrimaryExpression	"""DeviceManufacturer"""		6015308	0					
ANR	6015347	ExpressionStatement	"val = ""IJS Distribution"""	81:4:2483:2507	6015308	1	True				
ANR	6015348	AssignmentExpression	"val = ""IJS Distribution"""		6015308	0		=			
ANR	6015349	Identifier	val		6015308	0					
ANR	6015350	PrimaryExpression	"""IJS Distribution"""		6015308	1					
ANR	6015351	ElseStatement	else		6015308	0					
ANR	6015352	IfStatement	"if ( ! strcmp ( key , ""DeviceModel"" ) )"		6015308	0					
ANR	6015353	Condition	"! strcmp ( key , ""DeviceModel"" )"	82:11:2520:2547	6015308	0	True				
ANR	6015354	UnaryOperationExpression	"! strcmp ( key , ""DeviceModel"" )"		6015308	0					
ANR	6015355	UnaryOperator	!		6015308	0					
ANR	6015356	CallExpression	"strcmp ( key , ""DeviceModel"" )"		6015308	1					
ANR	6015357	Callee	strcmp		6015308	0					
ANR	6015358	Identifier	strcmp		6015308	0					
ANR	6015359	ArgumentList	key		6015308	1					
ANR	6015360	Argument	key		6015308	0					
ANR	6015361	Identifier	key		6015308	0					
ANR	6015362	Argument	"""DeviceModel"""		6015308	1					
ANR	6015363	PrimaryExpression	"""DeviceModel"""		6015308	0					
ANR	6015364	ExpressionStatement	"val = ""ijs_server_example"""	83:4:2554:2580	6015308	1	True				
ANR	6015365	AssignmentExpression	"val = ""ijs_server_example"""		6015308	0		=			
ANR	6015366	Identifier	val		6015308	0					
ANR	6015367	PrimaryExpression	"""ijs_server_example"""		6015308	1					
ANR	6015368	ElseStatement	else		6015308	0					
ANR	6015369	IfStatement	"if ( ! strcmp ( key , ""PageImageFormat"" ) )"		6015308	0					
ANR	6015370	Condition	"! strcmp ( key , ""PageImageFormat"" )"	84:11:2593:2624	6015308	0	True				
ANR	6015371	UnaryOperationExpression	"! strcmp ( key , ""PageImageFormat"" )"		6015308	0					
ANR	6015372	UnaryOperator	!		6015308	0					
ANR	6015373	CallExpression	"strcmp ( key , ""PageImageFormat"" )"		6015308	1					
ANR	6015374	Callee	strcmp		6015308	0					
ANR	6015375	Identifier	strcmp		6015308	0					
ANR	6015376	ArgumentList	key		6015308	1					
ANR	6015377	Argument	key		6015308	0					
ANR	6015378	Identifier	key		6015308	0					
ANR	6015379	Argument	"""PageImageFormat"""		6015308	1					
ANR	6015380	PrimaryExpression	"""PageImageFormat"""		6015308	0					
ANR	6015381	ExpressionStatement	"val = ""Raster"""	85:4:2631:2645	6015308	1	True				
ANR	6015382	AssignmentExpression	"val = ""Raster"""		6015308	0		=			
ANR	6015383	Identifier	val		6015308	0					
ANR	6015384	PrimaryExpression	"""Raster"""		6015308	1					
ANR	6015385	IfStatement	if ( val == NULL )		6015308	2					
ANR	6015386	Condition	val == NULL	87:6:2654:2664	6015308	0	True				
ANR	6015387	EqualityExpression	val == NULL		6015308	0		==			
ANR	6015388	Identifier	val		6015308	0					
ANR	6015389	Identifier	NULL		6015308	1					
ANR	6015390	ReturnStatement	return IJS_EUNKPARAM ;	88:4:2671:2691	6015308	1	True				
ANR	6015391	Identifier	IJS_EUNKPARAM		6015308	0					
ANR	6015392	ElseStatement	else		6015308	0					
ANR	6015393	CompoundStatement		16:6:388:411	6015308	0					
ANR	6015394	IdentifierDeclStatement	int size = strlen ( val ) ;	91:6:2712:2735	6015308	0	True				
ANR	6015395	IdentifierDecl	size = strlen ( val )		6015308	0					
ANR	6015396	IdentifierDeclType	int		6015308	0					
ANR	6015397	Identifier	size		6015308	1					
ANR	6015398	AssignmentExpression	size = strlen ( val )		6015308	2		=			
ANR	6015399	Identifier	size		6015308	0					
ANR	6015400	CallExpression	strlen ( val )		6015308	1					
ANR	6015401	Callee	strlen		6015308	0					
ANR	6015402	Identifier	strlen		6015308	0					
ANR	6015403	ArgumentList	val		6015308	1					
ANR	6015404	Argument	val		6015308	0					
ANR	6015405	Identifier	val		6015308	0					
ANR	6015406	IfStatement	if ( size > val_size )		6015308	1					
ANR	6015407	Condition	size > val_size	93:10:2748:2762	6015308	0	True				
ANR	6015408	RelationalExpression	size > val_size		6015308	0		>			
ANR	6015409	Identifier	size		6015308	0					
ANR	6015410	Identifier	val_size		6015308	1					
ANR	6015411	ReturnStatement	return IJS_EBUF ;	94:8:2773:2788	6015308	1	True				
ANR	6015412	Identifier	IJS_EBUF		6015308	0					
ANR	6015413	ExpressionStatement	"memcpy ( val_buf , val , size )"	95:6:2796:2823	6015308	2	True				
ANR	6015414	CallExpression	"memcpy ( val_buf , val , size )"		6015308	0					
ANR	6015415	Callee	memcpy		6015308	0					
ANR	6015416	Identifier	memcpy		6015308	0					
ANR	6015417	ArgumentList	val_buf		6015308	1					
ANR	6015418	Argument	val_buf		6015308	0					
ANR	6015419	Identifier	val_buf		6015308	0					
ANR	6015420	Argument	val		6015308	1					
ANR	6015421	Identifier	val		6015308	0					
ANR	6015422	Argument	size		6015308	2					
ANR	6015423	Identifier	size		6015308	0					
ANR	6015424	ReturnStatement	return size ;	96:6:2831:2842	6015308	3	True				
ANR	6015425	Identifier	size		6015308	0					
ANR	6015426	ReturnType	static int		6015308	1					
ANR	6015427	Identifier	example_enum_cb		6015308	2					
ANR	6015428	ParameterList	"void * enum_cb_data , IjsServerCtx * ctx , IjsJobId job_id , const char * key , char * val_buf , int val_size"		6015308	3					
ANR	6015429	Parameter	void * enum_cb_data	70:17:2136:2153	6015308	0	True				
ANR	6015430	ParameterType	void *		6015308	0					
ANR	6015431	Identifier	enum_cb_data		6015308	1					
ANR	6015432	Parameter	IjsServerCtx * ctx	71:17:2173:2189	6015308	1	True				
ANR	6015433	ParameterType	IjsServerCtx *		6015308	0					
ANR	6015434	Identifier	ctx		6015308	1					
ANR	6015435	Parameter	IjsJobId job_id	72:17:2209:2223	6015308	2	True				
ANR	6015436	ParameterType	IjsJobId		6015308	0					
ANR	6015437	Identifier	job_id		6015308	1					
ANR	6015438	Parameter	const char * key	73:17:2243:2257	6015308	3	True				
ANR	6015439	ParameterType	const char *		6015308	0					
ANR	6015440	Identifier	key		6015308	1					
ANR	6015441	Parameter	char * val_buf	74:17:2277:2289	6015308	4	True				
ANR	6015442	ParameterType	char *		6015308	0					
ANR	6015443	Identifier	val_buf		6015308	1					
ANR	6015444	Parameter	int val_size	75:17:2309:2320	6015308	5	True				
ANR	6015445	ParameterType	int		6015308	0					
ANR	6015446	Identifier	val_size		6015308	1					
ANR	6015447	CFGEntryNode	ENTRY		6015308		True				
ANR	6015448	CFGExitNode	EXIT		6015308		True				
ANR	6015449	Symbol	enum_cb_data		6015308						
ANR	6015450	Symbol	val		6015308						
ANR	6015451	Symbol	strcmp		6015308						
ANR	6015452	Symbol	NULL		6015308						
ANR	6015453	Symbol	ctx		6015308						
ANR	6015454	Symbol	IJS_EUNKPARAM		6015308						
ANR	6015455	Symbol	strlen		6015308						
ANR	6015456	Symbol	size		6015308						
ANR	6015457	Symbol	job_id		6015308						
ANR	6015458	Symbol	val_buf		6015308						
ANR	6015459	Symbol	IJS_EBUF		6015308						
ANR	6015460	Symbol	val_size		6015308						
ANR	6015461	Symbol	key		6015308						
ANR	6015462	Function	example_parse_wxh	101:0:2911:3528							
ANR	6015463	FunctionDef	"example_parse_wxh (const char * val , int size , double * pw , double * ph)"		6015462	0					
ANR	6015464	CompoundStatement		104:0:3011:3528	6015462	0					
ANR	6015465	IdentifierDeclStatement	char buf [ 256 ] ;	105:2:3015:3028	6015462	0	True				
ANR	6015466	IdentifierDecl	buf [ 256 ]		6015462	0					
ANR	6015467	IdentifierDeclType	char [ 256 ]		6015462	0					
ANR	6015468	Identifier	buf		6015462	1					
ANR	6015469	PrimaryExpression	256		6015462	2					
ANR	6015470	IdentifierDeclStatement	char * tail ;	106:2:3032:3042	6015462	1	True				
ANR	6015471	IdentifierDecl	* tail		6015462	0					
ANR	6015472	IdentifierDeclType	char *		6015462	0					
ANR	6015473	Identifier	tail		6015462	1					
ANR	6015474	IdentifierDeclStatement	int i ;	107:2:3046:3051	6015462	2	True				
ANR	6015475	IdentifierDecl	i		6015462	0					
ANR	6015476	IdentifierDeclType	int		6015462	0					
ANR	6015477	Identifier	i		6015462	1					
ANR	6015478	ForStatement	for ( i = 0 ; i < size ; i ++ )		6015462	3					
ANR	6015479	ForInit	i = 0 ;	109:7:3061:3066	6015462	0	True				
ANR	6015480	AssignmentExpression	i = 0		6015462	0		=			
ANR	6015481	Identifier	i		6015462	0					
ANR	6015482	PrimaryExpression	0		6015462	1					
ANR	6015483	Condition	i < size	109:14:3068:3075	6015462	1	True				
ANR	6015484	RelationalExpression	i < size		6015462	0		<			
ANR	6015485	Identifier	i		6015462	0					
ANR	6015486	Identifier	size		6015462	1					
ANR	6015487	PostIncDecOperationExpression	i ++	109:24:3078:3080	6015462	2	True				
ANR	6015488	Identifier	i		6015462	0					
ANR	6015489	IncDec	++		6015462	1					
ANR	6015490	IfStatement	if ( val [ i ] == 'x' )		6015462	3					
ANR	6015491	Condition	val [ i ] == 'x'	110:8:3091:3103	6015462	0	True				
ANR	6015492	EqualityExpression	val [ i ] == 'x'		6015462	0		==			
ANR	6015493	ArrayIndexing	val [ i ]		6015462	0					
ANR	6015494	Identifier	val		6015462	0					
ANR	6015495	Identifier	i		6015462	1					
ANR	6015496	PrimaryExpression	'x'		6015462	1					
ANR	6015497	BreakStatement	break ;	111:6:3112:3117	6015462	1	True				
ANR	6015498	IfStatement	if ( i + 1 >= size )		6015462	4					
ANR	6015499	Condition	i + 1 >= size	113:6:3126:3138	6015462	0	True				
ANR	6015500	RelationalExpression	i + 1 >= size		6015462	0		>=			
ANR	6015501	AdditiveExpression	i + 1		6015462	0		+			
ANR	6015502	Identifier	i		6015462	0					
ANR	6015503	PrimaryExpression	1		6015462	1					
ANR	6015504	Identifier	size		6015462	1					
ANR	6015505	ReturnStatement	return IJS_ESYNTAX ;	114:4:3145:3163	6015462	1	True				
ANR	6015506	Identifier	IJS_ESYNTAX		6015462	0					
ANR	6015507	IfStatement	if ( i >= sizeof ( buf ) )		6015462	5					
ANR	6015508	Condition	i >= sizeof ( buf )	116:6:3172:3187	6015462	0	True				
ANR	6015509	RelationalExpression	i >= sizeof ( buf )		6015462	0		>=			
ANR	6015510	Identifier	i		6015462	0					
ANR	6015511	SizeofExpression	sizeof ( buf )		6015462	1					
ANR	6015512	Sizeof	sizeof		6015462	0					
ANR	6015513	SizeofOperand	buf		6015462	1					
ANR	6015514	ReturnStatement	return IJS_EBUF ;	117:4:3194:3209	6015462	1	True				
ANR	6015515	Identifier	IJS_EBUF		6015462	0					
ANR	6015516	ExpressionStatement	"memcpy ( buf , val , i )"	119:2:3214:3234	6015462	6	True				
ANR	6015517	CallExpression	"memcpy ( buf , val , i )"		6015462	0					
ANR	6015518	Callee	memcpy		6015462	0					
ANR	6015519	Identifier	memcpy		6015462	0					
ANR	6015520	ArgumentList	buf		6015462	1					
ANR	6015521	Argument	buf		6015462	0					
ANR	6015522	Identifier	buf		6015462	0					
ANR	6015523	Argument	val		6015462	1					
ANR	6015524	Identifier	val		6015462	0					
ANR	6015525	Argument	i		6015462	2					
ANR	6015526	Identifier	i		6015462	0					
ANR	6015527	ExpressionStatement	buf [ i ] = 0	120:2:3238:3248	6015462	7	True				
ANR	6015528	AssignmentExpression	buf [ i ] = 0		6015462	0		=			
ANR	6015529	ArrayIndexing	buf [ i ]		6015462	0					
ANR	6015530	Identifier	buf		6015462	0					
ANR	6015531	Identifier	i		6015462	1					
ANR	6015532	PrimaryExpression	0		6015462	1					
ANR	6015533	ExpressionStatement	"* pw = strtod ( buf , & tail )"	121:2:3252:3277	6015462	8	True				
ANR	6015534	AssignmentExpression	"* pw = strtod ( buf , & tail )"		6015462	0		=			
ANR	6015535	UnaryOperationExpression	* pw		6015462	0					
ANR	6015536	UnaryOperator	*		6015462	0					
ANR	6015537	Identifier	pw		6015462	1					
ANR	6015538	CallExpression	"strtod ( buf , & tail )"		6015462	1					
ANR	6015539	Callee	strtod		6015462	0					
ANR	6015540	Identifier	strtod		6015462	0					
ANR	6015541	ArgumentList	buf		6015462	1					
ANR	6015542	Argument	buf		6015462	0					
ANR	6015543	Identifier	buf		6015462	0					
ANR	6015544	Argument	& tail		6015462	1					
ANR	6015545	UnaryOperationExpression	& tail		6015462	0					
ANR	6015546	UnaryOperator	&		6015462	0					
ANR	6015547	Identifier	tail		6015462	1					
ANR	6015548	IfStatement	if ( tail == buf )		6015462	9					
ANR	6015549	Condition	tail == buf	122:6:3285:3295	6015462	0	True				
ANR	6015550	EqualityExpression	tail == buf		6015462	0		==			
ANR	6015551	Identifier	tail		6015462	0					
ANR	6015552	Identifier	buf		6015462	1					
ANR	6015553	ReturnStatement	return IJS_ESYNTAX ;	123:4:3302:3320	6015462	1	True				
ANR	6015554	Identifier	IJS_ESYNTAX		6015462	0					
ANR	6015555	IfStatement	if ( size - i > sizeof ( buf ) )		6015462	10					
ANR	6015556	Condition	size - i > sizeof ( buf )	125:6:3329:3350	6015462	0	True				
ANR	6015557	RelationalExpression	size - i > sizeof ( buf )		6015462	0		>			
ANR	6015558	AdditiveExpression	size - i		6015462	0		-			
ANR	6015559	Identifier	size		6015462	0					
ANR	6015560	Identifier	i		6015462	1					
ANR	6015561	SizeofExpression	sizeof ( buf )		6015462	1					
ANR	6015562	Sizeof	sizeof		6015462	0					
ANR	6015563	SizeofOperand	buf		6015462	1					
ANR	6015564	ReturnStatement	return IJS_EBUF ;	126:4:3357:3372	6015462	1	True				
ANR	6015565	Identifier	IJS_EBUF		6015462	0					
ANR	6015566	ExpressionStatement	"memcpy ( buf , val + i + 1 , size - i - 1 )"	128:2:3377:3416	6015462	11	True				
ANR	6015567	CallExpression	"memcpy ( buf , val + i + 1 , size - i - 1 )"		6015462	0					
ANR	6015568	Callee	memcpy		6015462	0					
ANR	6015569	Identifier	memcpy		6015462	0					
ANR	6015570	ArgumentList	buf		6015462	1					
ANR	6015571	Argument	buf		6015462	0					
ANR	6015572	Identifier	buf		6015462	0					
ANR	6015573	Argument	val + i + 1		6015462	1					
ANR	6015574	AdditiveExpression	val + i + 1		6015462	0		+			
ANR	6015575	Identifier	val		6015462	0					
ANR	6015576	AdditiveExpression	i + 1		6015462	1		+			
ANR	6015577	Identifier	i		6015462	0					
ANR	6015578	PrimaryExpression	1		6015462	1					
ANR	6015579	Argument	size - i - 1		6015462	2					
ANR	6015580	AdditiveExpression	size - i - 1		6015462	0		-			
ANR	6015581	Identifier	size		6015462	0					
ANR	6015582	AdditiveExpression	i - 1		6015462	1		-			
ANR	6015583	Identifier	i		6015462	0					
ANR	6015584	PrimaryExpression	1		6015462	1					
ANR	6015585	ExpressionStatement	buf [ size - i - 1 ] = 0	129:2:3420:3441	6015462	12	True				
ANR	6015586	AssignmentExpression	buf [ size - i - 1 ] = 0		6015462	0		=			
ANR	6015587	ArrayIndexing	buf [ size - i - 1 ]		6015462	0					
ANR	6015588	Identifier	buf		6015462	0					
ANR	6015589	AdditiveExpression	size - i - 1		6015462	1		-			
ANR	6015590	Identifier	size		6015462	0					
ANR	6015591	AdditiveExpression	i - 1		6015462	1		-			
ANR	6015592	Identifier	i		6015462	0					
ANR	6015593	PrimaryExpression	1		6015462	1					
ANR	6015594	PrimaryExpression	0		6015462	1					
ANR	6015595	ExpressionStatement	"* ph = strtod ( buf , & tail )"	130:2:3445:3470	6015462	13	True				
ANR	6015596	AssignmentExpression	"* ph = strtod ( buf , & tail )"		6015462	0		=			
ANR	6015597	UnaryOperationExpression	* ph		6015462	0					
ANR	6015598	UnaryOperator	*		6015462	0					
ANR	6015599	Identifier	ph		6015462	1					
ANR	6015600	CallExpression	"strtod ( buf , & tail )"		6015462	1					
ANR	6015601	Callee	strtod		6015462	0					
ANR	6015602	Identifier	strtod		6015462	0					
ANR	6015603	ArgumentList	buf		6015462	1					
ANR	6015604	Argument	buf		6015462	0					
ANR	6015605	Identifier	buf		6015462	0					
ANR	6015606	Argument	& tail		6015462	1					
ANR	6015607	UnaryOperationExpression	& tail		6015462	0					
ANR	6015608	UnaryOperator	&		6015462	0					
ANR	6015609	Identifier	tail		6015462	1					
ANR	6015610	IfStatement	if ( tail == buf )		6015462	14					
ANR	6015611	Condition	tail == buf	131:6:3478:3488	6015462	0	True				
ANR	6015612	EqualityExpression	tail == buf		6015462	0		==			
ANR	6015613	Identifier	tail		6015462	0					
ANR	6015614	Identifier	buf		6015462	1					
ANR	6015615	ReturnStatement	return IJS_ESYNTAX ;	132:4:3495:3513	6015462	1	True				
ANR	6015616	Identifier	IJS_ESYNTAX		6015462	0					
ANR	6015617	ReturnStatement	return 0 ;	134:2:3518:3526	6015462	15	True				
ANR	6015618	PrimaryExpression	0		6015462	0					
ANR	6015619	ReturnType	static int		6015462	1					
ANR	6015620	Identifier	example_parse_wxh		6015462	2					
ANR	6015621	ParameterList	"const char * val , int size , double * pw , double * ph"		6015462	3					
ANR	6015622	Parameter	const char * val	102:19:2941:2955	6015462	0	True				
ANR	6015623	ParameterType	const char *		6015462	0					
ANR	6015624	Identifier	val		6015462	1					
ANR	6015625	Parameter	int size	102:36:2958:2965	6015462	1	True				
ANR	6015626	ParameterType	int		6015462	0					
ANR	6015627	Identifier	size		6015462	1					
ANR	6015628	Parameter	double * pw	103:19:2987:2996	6015462	2	True				
ANR	6015629	ParameterType	double *		6015462	0					
ANR	6015630	Identifier	pw		6015462	1					
ANR	6015631	Parameter	double * ph	103:31:2999:3008	6015462	3	True				
ANR	6015632	ParameterType	double *		6015462	0					
ANR	6015633	Identifier	ph		6015462	1					
ANR	6015634	CFGEntryNode	ENTRY		6015462		True				
ANR	6015635	CFGExitNode	EXIT		6015462		True				
ANR	6015636	Symbol	val		6015462						
ANR	6015637	Symbol	* buf		6015462						
ANR	6015638	Symbol	tail		6015462						
ANR	6015639	Symbol	pw		6015462						
ANR	6015640	Symbol	i		6015462						
ANR	6015641	Symbol	* val		6015462						
ANR	6015642	Symbol	strtod		6015462						
ANR	6015643	Symbol	* pw		6015462						
ANR	6015644	Symbol	buf		6015462						
ANR	6015645	Symbol	* i		6015462						
ANR	6015646	Symbol	* size		6015462						
ANR	6015647	Symbol	size		6015462						
ANR	6015648	Symbol	IJS_ESYNTAX		6015462						
ANR	6015649	Symbol	ph		6015462						
ANR	6015650	Symbol	IJS_EBUF		6015462						
ANR	6015651	Symbol	& tail		6015462						
ANR	6015652	Symbol	* ph		6015462						
ANR	6015653	Function	example_find_key	144:0:3686:3933							
ANR	6015654	FunctionDef	"example_find_key (ExampleParamList * pl , const char * key)"		6015653	0					
ANR	6015655	CompoundStatement		146:0:3769:3933	6015653	0					
ANR	6015656	IdentifierDeclStatement	ExampleParamList * curs ;	147:2:3773:3795	6015653	0	True				
ANR	6015657	IdentifierDecl	* curs		6015653	0					
ANR	6015658	IdentifierDeclType	ExampleParamList *		6015653	0					
ANR	6015659	Identifier	curs		6015653	1					
ANR	6015660	ForStatement	for ( curs = pl ; curs != NULL ; curs = curs -> next )		6015653	1					
ANR	6015661	ForInit	curs = pl ;	149:7:3805:3814	6015653	0	True				
ANR	6015662	AssignmentExpression	curs = pl		6015653	0		=			
ANR	6015663	Identifier	curs		6015653	0					
ANR	6015664	Identifier	pl		6015653	1					
ANR	6015665	Condition	curs != NULL	149:18:3816:3827	6015653	1	True				
ANR	6015666	EqualityExpression	curs != NULL		6015653	0		!=			
ANR	6015667	Identifier	curs		6015653	0					
ANR	6015668	Identifier	NULL		6015653	1					
ANR	6015669	AssignmentExpression	curs = curs -> next	149:32:3830:3846	6015653	2	True	=			
ANR	6015670	Identifier	curs		6015653	0					
ANR	6015671	PtrMemberAccess	curs -> next		6015653	1					
ANR	6015672	Identifier	curs		6015653	0					
ANR	6015673	Identifier	next		6015653	1					
ANR	6015674	CompoundStatement		5:4:83:83	6015653	3					
ANR	6015675	IfStatement	"if ( ! strcmp ( curs -> key , key ) )"		6015653	0					
ANR	6015676	Condition	"! strcmp ( curs -> key , key )"	151:10:3865:3888	6015653	0	True				
ANR	6015677	UnaryOperationExpression	"! strcmp ( curs -> key , key )"		6015653	0					
ANR	6015678	UnaryOperator	!		6015653	0					
ANR	6015679	CallExpression	"strcmp ( curs -> key , key )"		6015653	1					
ANR	6015680	Callee	strcmp		6015653	0					
ANR	6015681	Identifier	strcmp		6015653	0					
ANR	6015682	ArgumentList	curs -> key		6015653	1					
ANR	6015683	Argument	curs -> key		6015653	0					
ANR	6015684	PtrMemberAccess	curs -> key		6015653	0					
ANR	6015685	Identifier	curs		6015653	0					
ANR	6015686	Identifier	key		6015653	1					
ANR	6015687	Argument	key		6015653	1					
ANR	6015688	Identifier	key		6015653	0					
ANR	6015689	ReturnStatement	return curs ;	152:8:3899:3910	6015653	1	True				
ANR	6015690	Identifier	curs		6015653	0					
ANR	6015691	ReturnStatement	return NULL ;	154:2:3920:3931	6015653	2	True				
ANR	6015692	Identifier	NULL		6015653	0					
ANR	6015693	ReturnType	static ExampleParamList *		6015653	1					
ANR	6015694	Identifier	example_find_key		6015653	2					
ANR	6015695	ParameterList	"ExampleParamList * pl , const char * key"		6015653	3					
ANR	6015696	Parameter	ExampleParamList * pl	145:18:3730:3749	6015653	0	True				
ANR	6015697	ParameterType	ExampleParamList *		6015653	0					
ANR	6015698	Identifier	pl		6015653	1					
ANR	6015699	Parameter	const char * key	145:40:3752:3766	6015653	1	True				
ANR	6015700	ParameterType	const char *		6015653	0					
ANR	6015701	Identifier	key		6015653	1					
ANR	6015702	CFGEntryNode	ENTRY		6015653		True				
ANR	6015703	CFGExitNode	EXIT		6015653		True				
ANR	6015704	Symbol	strcmp		6015653						
ANR	6015705	Symbol	curs -> key		6015653						
ANR	6015706	Symbol	NULL		6015653						
ANR	6015707	Symbol	* curs		6015653						
ANR	6015708	Symbol	pl		6015653						
ANR	6015709	Symbol	curs		6015653						
ANR	6015710	Symbol	key		6015653						
ANR	6015711	Symbol	curs -> next		6015653						
ANR	6015712	Function	example_compute_printable	162:0:4071:4584							
ANR	6015713	FunctionDef	"example_compute_printable (ExampleParamList * pl , double printable [ 4 ])"		6015712	0					
ANR	6015714	CompoundStatement		164:0:4152:4584	6015712	0					
ANR	6015715	IdentifierDeclStatement	ExampleParamList * curs ;	165:2:4156:4178	6015712	0	True				
ANR	6015716	IdentifierDecl	* curs		6015712	0					
ANR	6015717	IdentifierDeclType	ExampleParamList *		6015712	0					
ANR	6015718	Identifier	curs		6015712	1					
ANR	6015719	IdentifierDeclStatement	"double width , height ;"	166:2:4182:4202	6015712	1	True				
ANR	6015720	IdentifierDecl	width		6015712	0					
ANR	6015721	IdentifierDeclType	double		6015712	0					
ANR	6015722	Identifier	width		6015712	1					
ANR	6015723	IdentifierDecl	height		6015712	1					
ANR	6015724	IdentifierDeclType	double		6015712	0					
ANR	6015725	Identifier	height		6015712	1					
ANR	6015726	IdentifierDeclStatement	int code ;	167:2:4206:4214	6015712	2	True				
ANR	6015727	IdentifierDecl	code		6015712	0					
ANR	6015728	IdentifierDeclType	int		6015712	0					
ANR	6015729	Identifier	code		6015712	1					
ANR	6015730	IdentifierDeclStatement	double margin = 0.5 ;	168:2:4218:4237	6015712	3	True				
ANR	6015731	IdentifierDecl	margin = 0.5		6015712	0					
ANR	6015732	IdentifierDeclType	double		6015712	0					
ANR	6015733	Identifier	margin		6015712	1					
ANR	6015734	AssignmentExpression	margin = 0.5		6015712	2		=			
ANR	6015735	Identifier	margin		6015712	0					
ANR	6015736	PrimaryExpression	0.5		6015712	1					
ANR	6015737	ExpressionStatement	"curs = example_find_key ( pl , ""PaperSize"" )"	170:2:4242:4283	6015712	4	True				
ANR	6015738	AssignmentExpression	"curs = example_find_key ( pl , ""PaperSize"" )"		6015712	0		=			
ANR	6015739	Identifier	curs		6015712	0					
ANR	6015740	CallExpression	"example_find_key ( pl , ""PaperSize"" )"		6015712	1					
ANR	6015741	Callee	example_find_key		6015712	0					
ANR	6015742	Identifier	example_find_key		6015712	0					
ANR	6015743	ArgumentList	pl		6015712	1					
ANR	6015744	Argument	pl		6015712	0					
ANR	6015745	Identifier	pl		6015712	0					
ANR	6015746	Argument	"""PaperSize"""		6015712	1					
ANR	6015747	PrimaryExpression	"""PaperSize"""		6015712	0					
ANR	6015748	IfStatement	if ( curs == NULL )		6015712	5					
ANR	6015749	Condition	curs == NULL	171:6:4291:4302	6015712	0	True				
ANR	6015750	EqualityExpression	curs == NULL		6015712	0		==			
ANR	6015751	Identifier	curs		6015712	0					
ANR	6015752	Identifier	NULL		6015712	1					
ANR	6015753	ReturnStatement	return - 1 ;	172:4:4309:4318	6015712	1	True				
ANR	6015754	UnaryOperationExpression	- 1		6015712	0					
ANR	6015755	UnaryOperator	-		6015712	0					
ANR	6015756	PrimaryExpression	1		6015712	1					
ANR	6015757	ExpressionStatement	"code = example_parse_wxh ( curs -> value , curs -> value_size , & width , & height )"	173:2:4322:4395	6015712	6	True				
ANR	6015758	AssignmentExpression	"code = example_parse_wxh ( curs -> value , curs -> value_size , & width , & height )"		6015712	0		=			
ANR	6015759	Identifier	code		6015712	0					
ANR	6015760	CallExpression	"example_parse_wxh ( curs -> value , curs -> value_size , & width , & height )"		6015712	1					
ANR	6015761	Callee	example_parse_wxh		6015712	0					
ANR	6015762	Identifier	example_parse_wxh		6015712	0					
ANR	6015763	ArgumentList	curs -> value		6015712	1					
ANR	6015764	Argument	curs -> value		6015712	0					
ANR	6015765	PtrMemberAccess	curs -> value		6015712	0					
ANR	6015766	Identifier	curs		6015712	0					
ANR	6015767	Identifier	value		6015712	1					
ANR	6015768	Argument	curs -> value_size		6015712	1					
ANR	6015769	PtrMemberAccess	curs -> value_size		6015712	0					
ANR	6015770	Identifier	curs		6015712	0					
ANR	6015771	Identifier	value_size		6015712	1					
ANR	6015772	Argument	& width		6015712	2					
ANR	6015773	UnaryOperationExpression	& width		6015712	0					
ANR	6015774	UnaryOperator	&		6015712	0					
ANR	6015775	Identifier	width		6015712	1					
ANR	6015776	Argument	& height		6015712	3					
ANR	6015777	UnaryOperationExpression	& height		6015712	0					
ANR	6015778	UnaryOperator	&		6015712	0					
ANR	6015779	Identifier	height		6015712	1					
ANR	6015780	IfStatement	if ( code == 0 )		6015712	7					
ANR	6015781	Condition	code == 0	175:6:4404:4412	6015712	0	True				
ANR	6015782	EqualityExpression	code == 0		6015712	0		==			
ANR	6015783	Identifier	code		6015712	0					
ANR	6015784	PrimaryExpression	0		6015712	1					
ANR	6015785	CompoundStatement		13:4:266:266	6015712	1					
ANR	6015786	ExpressionStatement	printable [ 0 ] = width - 2 * margin	177:6:4427:4460	6015712	0	True				
ANR	6015787	AssignmentExpression	printable [ 0 ] = width - 2 * margin		6015712	0		=			
ANR	6015788	ArrayIndexing	printable [ 0 ]		6015712	0					
ANR	6015789	Identifier	printable		6015712	0					
ANR	6015790	PrimaryExpression	0		6015712	1					
ANR	6015791	AdditiveExpression	width - 2 * margin		6015712	1		-			
ANR	6015792	Identifier	width		6015712	0					
ANR	6015793	MultiplicativeExpression	2 * margin		6015712	1		*			
ANR	6015794	PrimaryExpression	2		6015712	0					
ANR	6015795	Identifier	margin		6015712	1					
ANR	6015796	ExpressionStatement	printable [ 1 ] = height - 2 * margin	178:6:4468:4502	6015712	1	True				
ANR	6015797	AssignmentExpression	printable [ 1 ] = height - 2 * margin		6015712	0		=			
ANR	6015798	ArrayIndexing	printable [ 1 ]		6015712	0					
ANR	6015799	Identifier	printable		6015712	0					
ANR	6015800	PrimaryExpression	1		6015712	1					
ANR	6015801	AdditiveExpression	height - 2 * margin		6015712	1		-			
ANR	6015802	Identifier	height		6015712	0					
ANR	6015803	MultiplicativeExpression	2 * margin		6015712	1		*			
ANR	6015804	PrimaryExpression	2		6015712	0					
ANR	6015805	Identifier	margin		6015712	1					
ANR	6015806	ExpressionStatement	printable [ 2 ] = margin	179:6:4510:4531	6015712	2	True				
ANR	6015807	AssignmentExpression	printable [ 2 ] = margin		6015712	0		=			
ANR	6015808	ArrayIndexing	printable [ 2 ]		6015712	0					
ANR	6015809	Identifier	printable		6015712	0					
ANR	6015810	PrimaryExpression	2		6015712	1					
ANR	6015811	Identifier	margin		6015712	1					
ANR	6015812	ExpressionStatement	printable [ 3 ] = margin	180:6:4539:4560	6015712	3	True				
ANR	6015813	AssignmentExpression	printable [ 3 ] = margin		6015712	0		=			
ANR	6015814	ArrayIndexing	printable [ 3 ]		6015712	0					
ANR	6015815	Identifier	printable		6015712	0					
ANR	6015816	PrimaryExpression	3		6015712	1					
ANR	6015817	Identifier	margin		6015712	1					
ANR	6015818	ReturnStatement	return code ;	183:2:4571:4582	6015712	8	True				
ANR	6015819	Identifier	code		6015712	0					
ANR	6015820	ReturnType	static int		6015712	1					
ANR	6015821	Identifier	example_compute_printable		6015712	2					
ANR	6015822	ParameterList	"ExampleParamList * pl , double printable [ 4 ]"		6015712	3					
ANR	6015823	Parameter	ExampleParamList * pl	163:27:4109:4128	6015712	0	True				
ANR	6015824	ParameterType	ExampleParamList *		6015712	0					
ANR	6015825	Identifier	pl		6015712	1					
ANR	6015826	Parameter	double printable [ 4 ]	163:49:4131:4149	6015712	1	True				
ANR	6015827	ParameterType	double [ 4 ]		6015712	0					
ANR	6015828	Identifier	printable		6015712	1					
ANR	6015829	CFGEntryNode	ENTRY		6015712		True				
ANR	6015830	CFGExitNode	EXIT		6015712		True				
ANR	6015831	Symbol	margin		6015712						
ANR	6015832	Symbol	code		6015712						
ANR	6015833	Symbol	NULL		6015712						
ANR	6015834	Symbol	& width		6015712						
ANR	6015835	Symbol	curs -> value_size		6015712						
ANR	6015836	Symbol	* printable		6015712						
ANR	6015837	Symbol	printable		6015712						
ANR	6015838	Symbol	& height		6015712						
ANR	6015839	Symbol	curs -> value		6015712						
ANR	6015840	Symbol	* curs		6015712						
ANR	6015841	Symbol	width		6015712						
ANR	6015842	Symbol	example_find_key		6015712						
ANR	6015843	Symbol	pl		6015712						
ANR	6015844	Symbol	curs		6015712						
ANR	6015845	Symbol	height		6015712						
ANR	6015846	Symbol	example_parse_wxh		6015712						
ANR	6015847	Function	example_compute_offset	186:0:4587:5580							
ANR	6015848	FunctionDef	"example_compute_offset (ExampleParamList * pl , IjsPageHeader * ph , double * px0 , double * py0)"		6015847	0					
ANR	6015849	CompoundStatement		189:0:4713:5580	6015847	0					
ANR	6015850	IdentifierDeclStatement	ExampleParamList * curs ;	190:2:4717:4739	6015847	0	True				
ANR	6015851	IdentifierDecl	* curs		6015847	0					
ANR	6015852	IdentifierDeclType	ExampleParamList *		6015847	0					
ANR	6015853	Identifier	curs		6015847	1					
ANR	6015854	IdentifierDeclStatement	"double width , height ;"	191:2:4743:4763	6015847	1	True				
ANR	6015855	IdentifierDecl	width		6015847	0					
ANR	6015856	IdentifierDeclType	double		6015847	0					
ANR	6015857	Identifier	width		6015847	1					
ANR	6015858	IdentifierDecl	height		6015847	1					
ANR	6015859	IdentifierDeclType	double		6015847	0					
ANR	6015860	Identifier	height		6015847	1					
ANR	6015861	IdentifierDeclStatement	"double top , left ;"	192:2:4767:4783	6015847	2	True				
ANR	6015862	IdentifierDecl	top		6015847	0					
ANR	6015863	IdentifierDeclType	double		6015847	0					
ANR	6015864	Identifier	top		6015847	1					
ANR	6015865	IdentifierDecl	left		6015847	1					
ANR	6015866	IdentifierDeclType	double		6015847	0					
ANR	6015867	Identifier	left		6015847	1					
ANR	6015868	IdentifierDeclStatement	int code ;	193:2:4787:4795	6015847	3	True				
ANR	6015869	IdentifierDecl	code		6015847	0					
ANR	6015870	IdentifierDeclType	int		6015847	0					
ANR	6015871	Identifier	code		6015847	1					
ANR	6015872	ExpressionStatement	* px0 = 0	195:2:4800:4808	6015847	4	True				
ANR	6015873	AssignmentExpression	* px0 = 0		6015847	0		=			
ANR	6015874	UnaryOperationExpression	* px0		6015847	0					
ANR	6015875	UnaryOperator	*		6015847	0					
ANR	6015876	Identifier	px0		6015847	1					
ANR	6015877	PrimaryExpression	0		6015847	1					
ANR	6015878	ExpressionStatement	* py0 = 0	196:2:4812:4820	6015847	5	True				
ANR	6015879	AssignmentExpression	* py0 = 0		6015847	0		=			
ANR	6015880	UnaryOperationExpression	* py0		6015847	0					
ANR	6015881	UnaryOperator	*		6015847	0					
ANR	6015882	Identifier	py0		6015847	1					
ANR	6015883	PrimaryExpression	0		6015847	1					
ANR	6015884	ExpressionStatement	"curs = example_find_key ( pl , ""PaperSize"" )"	198:2:4825:4866	6015847	6	True				
ANR	6015885	AssignmentExpression	"curs = example_find_key ( pl , ""PaperSize"" )"		6015847	0		=			
ANR	6015886	Identifier	curs		6015847	0					
ANR	6015887	CallExpression	"example_find_key ( pl , ""PaperSize"" )"		6015847	1					
ANR	6015888	Callee	example_find_key		6015847	0					
ANR	6015889	Identifier	example_find_key		6015847	0					
ANR	6015890	ArgumentList	pl		6015847	1					
ANR	6015891	Argument	pl		6015847	0					
ANR	6015892	Identifier	pl		6015847	0					
ANR	6015893	Argument	"""PaperSize"""		6015847	1					
ANR	6015894	PrimaryExpression	"""PaperSize"""		6015847	0					
ANR	6015895	IfStatement	if ( curs == NULL )		6015847	7					
ANR	6015896	Condition	curs == NULL	199:6:4874:4885	6015847	0	True				
ANR	6015897	EqualityExpression	curs == NULL		6015847	0		==			
ANR	6015898	Identifier	curs		6015847	0					
ANR	6015899	Identifier	NULL		6015847	1					
ANR	6015900	ReturnStatement	return - 1 ;	200:4:4892:4901	6015847	1	True				
ANR	6015901	UnaryOperationExpression	- 1		6015847	0					
ANR	6015902	UnaryOperator	-		6015847	0					
ANR	6015903	PrimaryExpression	1		6015847	1					
ANR	6015904	ExpressionStatement	"code = example_parse_wxh ( curs -> value , curs -> value_size , & width , & height )"	202:2:4906:4979	6015847	8	True				
ANR	6015905	AssignmentExpression	"code = example_parse_wxh ( curs -> value , curs -> value_size , & width , & height )"		6015847	0		=			
ANR	6015906	Identifier	code		6015847	0					
ANR	6015907	CallExpression	"example_parse_wxh ( curs -> value , curs -> value_size , & width , & height )"		6015847	1					
ANR	6015908	Callee	example_parse_wxh		6015847	0					
ANR	6015909	Identifier	example_parse_wxh		6015847	0					
ANR	6015910	ArgumentList	curs -> value		6015847	1					
ANR	6015911	Argument	curs -> value		6015847	0					
ANR	6015912	PtrMemberAccess	curs -> value		6015847	0					
ANR	6015913	Identifier	curs		6015847	0					
ANR	6015914	Identifier	value		6015847	1					
ANR	6015915	Argument	curs -> value_size		6015847	1					
ANR	6015916	PtrMemberAccess	curs -> value_size		6015847	0					
ANR	6015917	Identifier	curs		6015847	0					
ANR	6015918	Identifier	value_size		6015847	1					
ANR	6015919	Argument	& width		6015847	2					
ANR	6015920	UnaryOperationExpression	& width		6015847	0					
ANR	6015921	UnaryOperator	&		6015847	0					
ANR	6015922	Identifier	width		6015847	1					
ANR	6015923	Argument	& height		6015847	3					
ANR	6015924	UnaryOperationExpression	& height		6015847	0					
ANR	6015925	UnaryOperator	&		6015847	0					
ANR	6015926	Identifier	height		6015847	1					
ANR	6015927	IfStatement	if ( code == 0 )		6015847	9					
ANR	6015928	Condition	code == 0	204:6:4988:4996	6015847	0	True				
ANR	6015929	EqualityExpression	code == 0		6015847	0		==			
ANR	6015930	Identifier	code		6015847	0					
ANR	6015931	PrimaryExpression	0		6015847	1					
ANR	6015932	CompoundStatement		17:4:289:289	6015847	1					
ANR	6015933	ExpressionStatement	"curs = example_find_key ( pl , ""TopLeft"" )"	206:6:5011:5050	6015847	0	True				
ANR	6015934	AssignmentExpression	"curs = example_find_key ( pl , ""TopLeft"" )"		6015847	0		=			
ANR	6015935	Identifier	curs		6015847	0					
ANR	6015936	CallExpression	"example_find_key ( pl , ""TopLeft"" )"		6015847	1					
ANR	6015937	Callee	example_find_key		6015847	0					
ANR	6015938	Identifier	example_find_key		6015847	0					
ANR	6015939	ArgumentList	pl		6015847	1					
ANR	6015940	Argument	pl		6015847	0					
ANR	6015941	Identifier	pl		6015847	0					
ANR	6015942	Argument	"""TopLeft"""		6015847	1					
ANR	6015943	PrimaryExpression	"""TopLeft"""		6015847	0					
ANR	6015944	IfStatement	if ( curs != NULL )		6015847	1					
ANR	6015945	Condition	curs != NULL	207:10:5062:5073	6015847	0	True				
ANR	6015946	EqualityExpression	curs != NULL		6015847	0		!=			
ANR	6015947	Identifier	curs		6015847	0					
ANR	6015948	Identifier	NULL		6015847	1					
ANR	6015949	CompoundStatement		20:8:370:370	6015847	1					
ANR	6015950	ExpressionStatement	"code = example_parse_wxh ( curs -> value , curs -> value_size , & top , & left )"	209:10:5096:5201	6015847	0	True				
ANR	6015951	AssignmentExpression	"code = example_parse_wxh ( curs -> value , curs -> value_size , & top , & left )"		6015847	0		=			
ANR	6015952	Identifier	code		6015847	0					
ANR	6015953	CallExpression	"example_parse_wxh ( curs -> value , curs -> value_size , & top , & left )"		6015847	1					
ANR	6015954	Callee	example_parse_wxh		6015847	0					
ANR	6015955	Identifier	example_parse_wxh		6015847	0					
ANR	6015956	ArgumentList	curs -> value		6015847	1					
ANR	6015957	Argument	curs -> value		6015847	0					
ANR	6015958	PtrMemberAccess	curs -> value		6015847	0					
ANR	6015959	Identifier	curs		6015847	0					
ANR	6015960	Identifier	value		6015847	1					
ANR	6015961	Argument	curs -> value_size		6015847	1					
ANR	6015962	PtrMemberAccess	curs -> value_size		6015847	0					
ANR	6015963	Identifier	curs		6015847	0					
ANR	6015964	Identifier	value_size		6015847	1					
ANR	6015965	Argument	& top		6015847	2					
ANR	6015966	UnaryOperationExpression	& top		6015847	0					
ANR	6015967	UnaryOperator	&		6015847	0					
ANR	6015968	Identifier	top		6015847	1					
ANR	6015969	Argument	& left		6015847	3					
ANR	6015970	UnaryOperationExpression	& left		6015847	0					
ANR	6015971	UnaryOperator	&		6015847	0					
ANR	6015972	Identifier	left		6015847	1					
ANR	6015973	ElseStatement	else		6015847	0					
ANR	6015974	CompoundStatement		26:10:530:549	6015847	0					
ANR	6015975	IdentifierDeclStatement	double printable [ 4 ] ;	214:10:5244:5263	6015847	0	True				
ANR	6015976	IdentifierDecl	printable [ 4 ]		6015847	0					
ANR	6015977	IdentifierDeclType	double [ 4 ]		6015847	0					
ANR	6015978	Identifier	printable		6015847	1					
ANR	6015979	PrimaryExpression	4		6015847	2					
ANR	6015980	ExpressionStatement	"code = example_compute_printable ( pl , printable )"	216:10:5276:5324	6015847	1	True				
ANR	6015981	AssignmentExpression	"code = example_compute_printable ( pl , printable )"		6015847	0		=			
ANR	6015982	Identifier	code		6015847	0					
ANR	6015983	CallExpression	"example_compute_printable ( pl , printable )"		6015847	1					
ANR	6015984	Callee	example_compute_printable		6015847	0					
ANR	6015985	Identifier	example_compute_printable		6015847	0					
ANR	6015986	ArgumentList	pl		6015847	1					
ANR	6015987	Argument	pl		6015847	0					
ANR	6015988	Identifier	pl		6015847	0					
ANR	6015989	Argument	printable		6015847	1					
ANR	6015990	Identifier	printable		6015847	0					
ANR	6015991	IfStatement	if ( code == 0 )		6015847	2					
ANR	6015992	Condition	code == 0	217:14:5340:5348	6015847	0	True				
ANR	6015993	EqualityExpression	code == 0		6015847	0		==			
ANR	6015994	Identifier	code		6015847	0					
ANR	6015995	PrimaryExpression	0		6015847	1					
ANR	6015996	CompoundStatement		30:12:649:649	6015847	1					
ANR	6015997	ExpressionStatement	top = printable [ 2 ]	219:14:5379:5397	6015847	0	True				
ANR	6015998	AssignmentExpression	top = printable [ 2 ]		6015847	0		=			
ANR	6015999	Identifier	top		6015847	0					
ANR	6016000	ArrayIndexing	printable [ 2 ]		6015847	1					
ANR	6016001	Identifier	printable		6015847	0					
ANR	6016002	PrimaryExpression	2		6015847	1					
ANR	6016003	ExpressionStatement	left = printable [ 3 ]	220:14:5413:5432	6015847	1	True				
ANR	6016004	AssignmentExpression	left = printable [ 3 ]		6015847	0		=			
ANR	6016005	Identifier	left		6015847	0					
ANR	6016006	ArrayIndexing	printable [ 3 ]		6015847	1					
ANR	6016007	Identifier	printable		6015847	0					
ANR	6016008	PrimaryExpression	3		6015847	1					
ANR	6016009	IfStatement	if ( code == 0 )		6015847	10					
ANR	6016010	Condition	code == 0	225:6:5471:5479	6015847	0	True				
ANR	6016011	EqualityExpression	code == 0		6015847	0		==			
ANR	6016012	Identifier	code		6015847	0					
ANR	6016013	PrimaryExpression	0		6015847	1					
ANR	6016014	CompoundStatement		38:4:772:772	6015847	1					
ANR	6016015	ExpressionStatement	* px0 = left	227:6:5494:5505	6015847	0	True				
ANR	6016016	AssignmentExpression	* px0 = left		6015847	0		=			
ANR	6016017	UnaryOperationExpression	* px0		6015847	0					
ANR	6016018	UnaryOperator	*		6015847	0					
ANR	6016019	Identifier	px0		6015847	1					
ANR	6016020	Identifier	left		6015847	1					
ANR	6016021	ExpressionStatement	* py0 = height - ph -> height / ph -> yres - top	228:6:5513:5556	6015847	1	True				
ANR	6016022	AssignmentExpression	* py0 = height - ph -> height / ph -> yres - top		6015847	0		=			
ANR	6016023	UnaryOperationExpression	* py0		6015847	0					
ANR	6016024	UnaryOperator	*		6015847	0					
ANR	6016025	Identifier	py0		6015847	1					
ANR	6016026	AdditiveExpression	height - ph -> height / ph -> yres - top		6015847	1		-			
ANR	6016027	Identifier	height		6015847	0					
ANR	6016028	AdditiveExpression	ph -> height / ph -> yres - top		6015847	1		-			
ANR	6016029	MultiplicativeExpression	ph -> height / ph -> yres		6015847	0		/			
ANR	6016030	PtrMemberAccess	ph -> height		6015847	0					
ANR	6016031	Identifier	ph		6015847	0					
ANR	6016032	Identifier	height		6015847	1					
ANR	6016033	PtrMemberAccess	ph -> yres		6015847	1					
ANR	6016034	Identifier	ph		6015847	0					
ANR	6016035	Identifier	yres		6015847	1					
ANR	6016036	Identifier	top		6015847	1					
ANR	6016037	ReturnStatement	return code ;	231:2:5567:5578	6015847	11	True				
ANR	6016038	Identifier	code		6015847	0					
ANR	6016039	ReturnType	static int		6015847	1					
ANR	6016040	Identifier	example_compute_offset		6015847	2					
ANR	6016041	ParameterList	"ExampleParamList * pl , IjsPageHeader * ph , double * px0 , double * py0"		6015847	3					
ANR	6016042	Parameter	ExampleParamList * pl	187:24:4622:4641	6015847	0	True				
ANR	6016043	ParameterType	ExampleParamList *		6015847	0					
ANR	6016044	Identifier	pl		6015847	1					
ANR	6016045	Parameter	IjsPageHeader * ph	187:46:4644:4660	6015847	1	True				
ANR	6016046	ParameterType	IjsPageHeader *		6015847	0					
ANR	6016047	Identifier	ph		6015847	1					
ANR	6016048	Parameter	double * px0	188:24:4687:4697	6015847	2	True				
ANR	6016049	ParameterType	double *		6015847	0					
ANR	6016050	Identifier	px0		6015847	1					
ANR	6016051	Parameter	double * py0	188:37:4700:4710	6015847	3	True				
ANR	6016052	ParameterType	double *		6015847	0					
ANR	6016053	Identifier	py0		6015847	1					
ANR	6016054	CFGEntryNode	ENTRY		6015847		True				
ANR	6016055	CFGExitNode	EXIT		6015847		True				
ANR	6016056	Symbol	code		6015847						
ANR	6016057	Symbol	py0		6015847						
ANR	6016058	Symbol	& width		6015847						
ANR	6016059	Symbol	curs -> value_size		6015847						
ANR	6016060	Symbol	& left		6015847						
ANR	6016061	Symbol	* printable		6015847						
ANR	6016062	Symbol	& height		6015847						
ANR	6016063	Symbol	curs -> value		6015847						
ANR	6016064	Symbol	ph -> height		6015847						
ANR	6016065	Symbol	* px0		6015847						
ANR	6016066	Symbol	top		6015847						
ANR	6016067	Symbol	example_compute_printable		6015847						
ANR	6016068	Symbol	example_find_key		6015847						
ANR	6016069	Symbol	curs		6015847						
ANR	6016070	Symbol	height		6015847						
ANR	6016071	Symbol	NULL		6015847						
ANR	6016072	Symbol	px0		6015847						
ANR	6016073	Symbol	printable		6015847						
ANR	6016074	Symbol	* py0		6015847						
ANR	6016075	Symbol	* curs		6015847						
ANR	6016076	Symbol	left		6015847						
ANR	6016077	Symbol	ph		6015847						
ANR	6016078	Symbol	width		6015847						
ANR	6016079	Symbol	ph -> yres		6015847						
ANR	6016080	Symbol	pl		6015847						
ANR	6016081	Symbol	& top		6015847						
ANR	6016082	Symbol	* ph		6015847						
ANR	6016083	Symbol	example_parse_wxh		6015847						
ANR	6016084	Function	example_get_cb	234:0:5583:6980							
ANR	6016085	FunctionDef	"example_get_cb (void * get_cb_data , IjsServerCtx * ctx , IjsJobId job_id , const char * key , char * val_buf , int val_size)"		6016084	0					
ANR	6016086	CompoundStatement		241:0:5796:6980	6016084	0					
ANR	6016087	IdentifierDeclStatement	ExampleParamList * pl = * ( ExampleParamList * * ) get_cb_data ;	242:2:5800:5856	6016084	0	True				
ANR	6016088	IdentifierDecl	* pl = * ( ExampleParamList * * ) get_cb_data		6016084	0					
ANR	6016089	IdentifierDeclType	ExampleParamList *		6016084	0					
ANR	6016090	Identifier	pl		6016084	1					
ANR	6016091	AssignmentExpression	* pl = * ( ExampleParamList * * ) get_cb_data		6016084	2		=			
ANR	6016092	Identifier	pl		6016084	0					
ANR	6016093	UnaryOperationExpression	* ( ExampleParamList * * ) get_cb_data		6016084	1					
ANR	6016094	UnaryOperator	*		6016084	0					
ANR	6016095	CastExpression	( ExampleParamList * * ) get_cb_data		6016084	1					
ANR	6016096	CastTarget	ExampleParamList * *		6016084	0					
ANR	6016097	Identifier	get_cb_data		6016084	1					
ANR	6016098	IdentifierDeclStatement	ExampleParamList * curs ;	243:2:5860:5882	6016084	1	True				
ANR	6016099	IdentifierDecl	* curs		6016084	0					
ANR	6016100	IdentifierDeclType	ExampleParamList *		6016084	0					
ANR	6016101	Identifier	curs		6016084	1					
ANR	6016102	IdentifierDeclStatement	const char * val ;	244:2:5886:5901	6016084	2	True				
ANR	6016103	IdentifierDecl	* val		6016084	0					
ANR	6016104	IdentifierDeclType	const char *		6016084	0					
ANR	6016105	Identifier	val		6016084	1					
ANR	6016106	IdentifierDeclStatement	char buf [ 256 ] ;	245:2:5905:5918	6016084	3	True				
ANR	6016107	IdentifierDecl	buf [ 256 ]		6016084	0					
ANR	6016108	IdentifierDeclType	char [ 256 ]		6016084	0					
ANR	6016109	Identifier	buf		6016084	1					
ANR	6016110	PrimaryExpression	256		6016084	2					
ANR	6016111	IdentifierDeclStatement	int code ;	246:2:5922:5930	6016084	4	True				
ANR	6016112	IdentifierDecl	code		6016084	0					
ANR	6016113	IdentifierDeclType	int		6016084	0					
ANR	6016114	Identifier	code		6016084	1					
ANR	6016115	ExpressionStatement	"fprintf ( stderr , ""example_get_cb: %s\\n"" , key )"	248:2:5935:5980	6016084	5	True				
ANR	6016116	CallExpression	"fprintf ( stderr , ""example_get_cb: %s\\n"" , key )"		6016084	0					
ANR	6016117	Callee	fprintf		6016084	0					
ANR	6016118	Identifier	fprintf		6016084	0					
ANR	6016119	ArgumentList	stderr		6016084	1					
ANR	6016120	Argument	stderr		6016084	0					
ANR	6016121	Identifier	stderr		6016084	0					
ANR	6016122	Argument	"""example_get_cb: %s\\n"""		6016084	1					
ANR	6016123	PrimaryExpression	"""example_get_cb: %s\\n"""		6016084	0					
ANR	6016124	Argument	key		6016084	2					
ANR	6016125	Identifier	key		6016084	0					
ANR	6016126	ExpressionStatement	"curs = example_find_key ( pl , key )"	249:2:5984:6017	6016084	6	True				
ANR	6016127	AssignmentExpression	"curs = example_find_key ( pl , key )"		6016084	0		=			
ANR	6016128	Identifier	curs		6016084	0					
ANR	6016129	CallExpression	"example_find_key ( pl , key )"		6016084	1					
ANR	6016130	Callee	example_find_key		6016084	0					
ANR	6016131	Identifier	example_find_key		6016084	0					
ANR	6016132	ArgumentList	pl		6016084	1					
ANR	6016133	Argument	pl		6016084	0					
ANR	6016134	Identifier	pl		6016084	0					
ANR	6016135	Argument	key		6016084	1					
ANR	6016136	Identifier	key		6016084	0					
ANR	6016137	IfStatement	if ( curs != NULL )		6016084	7					
ANR	6016138	Condition	curs != NULL	250:6:6025:6036	6016084	0	True				
ANR	6016139	EqualityExpression	curs != NULL		6016084	0		!=			
ANR	6016140	Identifier	curs		6016084	0					
ANR	6016141	Identifier	NULL		6016084	1					
ANR	6016142	CompoundStatement		11:4:246:246	6016084	1					
ANR	6016143	IfStatement	if ( curs -> value_size > val_size )		6016084	0					
ANR	6016144	Condition	curs -> value_size > val_size	252:10:6055:6081	6016084	0	True				
ANR	6016145	RelationalExpression	curs -> value_size > val_size		6016084	0		>			
ANR	6016146	PtrMemberAccess	curs -> value_size		6016084	0					
ANR	6016147	Identifier	curs		6016084	0					
ANR	6016148	Identifier	value_size		6016084	1					
ANR	6016149	Identifier	val_size		6016084	1					
ANR	6016150	ReturnStatement	return IJS_EBUF ;	253:8:6092:6107	6016084	1	True				
ANR	6016151	Identifier	IJS_EBUF		6016084	0					
ANR	6016152	ExpressionStatement	"memcpy ( val_buf , curs -> value , curs -> value_size )"	254:6:6115:6162	6016084	1	True				
ANR	6016153	CallExpression	"memcpy ( val_buf , curs -> value , curs -> value_size )"		6016084	0					
ANR	6016154	Callee	memcpy		6016084	0					
ANR	6016155	Identifier	memcpy		6016084	0					
ANR	6016156	ArgumentList	val_buf		6016084	1					
ANR	6016157	Argument	val_buf		6016084	0					
ANR	6016158	Identifier	val_buf		6016084	0					
ANR	6016159	Argument	curs -> value		6016084	1					
ANR	6016160	PtrMemberAccess	curs -> value		6016084	0					
ANR	6016161	Identifier	curs		6016084	0					
ANR	6016162	Identifier	value		6016084	1					
ANR	6016163	Argument	curs -> value_size		6016084	2					
ANR	6016164	PtrMemberAccess	curs -> value_size		6016084	0					
ANR	6016165	Identifier	curs		6016084	0					
ANR	6016166	Identifier	value_size		6016084	1					
ANR	6016167	ReturnStatement	return curs -> value_size ;	255:6:6170:6193	6016084	2	True				
ANR	6016168	PtrMemberAccess	curs -> value_size		6016084	0					
ANR	6016169	Identifier	curs		6016084	0					
ANR	6016170	Identifier	value_size		6016084	1					
ANR	6016171	IfStatement	"if ( ! strcmp ( key , ""PrintableArea"" ) || ! strcmp ( key , ""PrintableTopLeft"" ) )"		6016084	8					
ANR	6016172	Condition	"! strcmp ( key , ""PrintableArea"" ) || ! strcmp ( key , ""PrintableTopLeft"" )"	258:6:6208:6274	6016084	0	True				
ANR	6016173	OrExpression	"! strcmp ( key , ""PrintableArea"" ) || ! strcmp ( key , ""PrintableTopLeft"" )"		6016084	0		||			
ANR	6016174	UnaryOperationExpression	"! strcmp ( key , ""PrintableArea"" )"		6016084	0					
ANR	6016175	UnaryOperator	!		6016084	0					
ANR	6016176	CallExpression	"strcmp ( key , ""PrintableArea"" )"		6016084	1					
ANR	6016177	Callee	strcmp		6016084	0					
ANR	6016178	Identifier	strcmp		6016084	0					
ANR	6016179	ArgumentList	key		6016084	1					
ANR	6016180	Argument	key		6016084	0					
ANR	6016181	Identifier	key		6016084	0					
ANR	6016182	Argument	"""PrintableArea"""		6016084	1					
ANR	6016183	PrimaryExpression	"""PrintableArea"""		6016084	0					
ANR	6016184	UnaryOperationExpression	"! strcmp ( key , ""PrintableTopLeft"" )"		6016084	1					
ANR	6016185	UnaryOperator	!		6016084	0					
ANR	6016186	CallExpression	"strcmp ( key , ""PrintableTopLeft"" )"		6016084	1					
ANR	6016187	Callee	strcmp		6016084	0					
ANR	6016188	Identifier	strcmp		6016084	0					
ANR	6016189	ArgumentList	key		6016084	1					
ANR	6016190	Argument	key		6016084	0					
ANR	6016191	Identifier	key		6016084	0					
ANR	6016192	Argument	"""PrintableTopLeft"""		6016084	1					
ANR	6016193	PrimaryExpression	"""PrintableTopLeft"""		6016084	0					
ANR	6016194	CompoundStatement		21:6:519:567	6016084	1					
ANR	6016195	IdentifierDeclStatement	double printable [ 4 ] ;	260:6:6289:6308	6016084	0	True				
ANR	6016196	IdentifierDecl	printable [ 4 ]		6016084	0					
ANR	6016197	IdentifierDeclType	double [ 4 ]		6016084	0					
ANR	6016198	Identifier	printable		6016084	1					
ANR	6016199	PrimaryExpression	4		6016084	2					
ANR	6016200	IdentifierDeclStatement	"int off = ! strcmp ( key , ""PrintableArea"" ) ? 0 : 2 ;"	261:6:6316:6364	6016084	1	True				
ANR	6016201	IdentifierDecl	"off = ! strcmp ( key , ""PrintableArea"" ) ? 0 : 2"		6016084	0					
ANR	6016202	IdentifierDeclType	int		6016084	0					
ANR	6016203	Identifier	off		6016084	1					
ANR	6016204	AssignmentExpression	"off = ! strcmp ( key , ""PrintableArea"" ) ? 0 : 2"		6016084	2		=			
ANR	6016205	Identifier	off		6016084	0					
ANR	6016206	ConditionalExpression	"! strcmp ( key , ""PrintableArea"" ) ? 0 : 2"		6016084	1					
ANR	6016207	Condition	"! strcmp ( key , ""PrintableArea"" )"		6016084	0					
ANR	6016208	UnaryOperationExpression	"! strcmp ( key , ""PrintableArea"" )"		6016084	0					
ANR	6016209	UnaryOperator	!		6016084	0					
ANR	6016210	CallExpression	"strcmp ( key , ""PrintableArea"" )"		6016084	1					
ANR	6016211	Callee	strcmp		6016084	0					
ANR	6016212	Identifier	strcmp		6016084	0					
ANR	6016213	ArgumentList	key		6016084	1					
ANR	6016214	Argument	key		6016084	0					
ANR	6016215	Identifier	key		6016084	0					
ANR	6016216	Argument	"""PrintableArea"""		6016084	1					
ANR	6016217	PrimaryExpression	"""PrintableArea"""		6016084	0					
ANR	6016218	PrimaryExpression	0		6016084	1					
ANR	6016219	PrimaryExpression	2		6016084	2					
ANR	6016220	ExpressionStatement	"code = example_compute_printable ( pl , printable )"	263:6:6373:6421	6016084	2	True				
ANR	6016221	AssignmentExpression	"code = example_compute_printable ( pl , printable )"		6016084	0		=			
ANR	6016222	Identifier	code		6016084	0					
ANR	6016223	CallExpression	"example_compute_printable ( pl , printable )"		6016084	1					
ANR	6016224	Callee	example_compute_printable		6016084	0					
ANR	6016225	Identifier	example_compute_printable		6016084	0					
ANR	6016226	ArgumentList	pl		6016084	1					
ANR	6016227	Argument	pl		6016084	0					
ANR	6016228	Identifier	pl		6016084	0					
ANR	6016229	Argument	printable		6016084	1					
ANR	6016230	Identifier	printable		6016084	0					
ANR	6016231	IfStatement	if ( code == 0 )		6016084	3					
ANR	6016232	Condition	code == 0	264:10:6433:6441	6016084	0	True				
ANR	6016233	EqualityExpression	code == 0		6016084	0		==			
ANR	6016234	Identifier	code		6016084	0					
ANR	6016235	PrimaryExpression	0		6016084	1					
ANR	6016236	CompoundStatement		25:8:655:655	6016084	1					
ANR	6016237	ExpressionStatement	"sprintf ( buf , ""%gx%g"" , printable [ off + 0 ] , printable [ off + 1 ] )"	266:10:6464:6526	6016084	0	True				
ANR	6016238	CallExpression	"sprintf ( buf , ""%gx%g"" , printable [ off + 0 ] , printable [ off + 1 ] )"		6016084	0					
ANR	6016239	Callee	sprintf		6016084	0					
ANR	6016240	Identifier	sprintf		6016084	0					
ANR	6016241	ArgumentList	buf		6016084	1					
ANR	6016242	Argument	buf		6016084	0					
ANR	6016243	Identifier	buf		6016084	0					
ANR	6016244	Argument	"""%gx%g"""		6016084	1					
ANR	6016245	PrimaryExpression	"""%gx%g"""		6016084	0					
ANR	6016246	Argument	printable [ off + 0 ]		6016084	2					
ANR	6016247	ArrayIndexing	printable [ off + 0 ]		6016084	0					
ANR	6016248	Identifier	printable		6016084	0					
ANR	6016249	AdditiveExpression	off + 0		6016084	1		+			
ANR	6016250	Identifier	off		6016084	0					
ANR	6016251	PrimaryExpression	0		6016084	1					
ANR	6016252	Argument	printable [ off + 1 ]		6016084	3					
ANR	6016253	ArrayIndexing	printable [ off + 1 ]		6016084	0					
ANR	6016254	Identifier	printable		6016084	0					
ANR	6016255	AdditiveExpression	off + 1		6016084	1		+			
ANR	6016256	Identifier	off		6016084	0					
ANR	6016257	PrimaryExpression	1		6016084	1					
ANR	6016258	ExpressionStatement	val = buf	267:10:6538:6547	6016084	1	True				
ANR	6016259	AssignmentExpression	val = buf		6016084	0		=			
ANR	6016260	Identifier	val		6016084	0					
ANR	6016261	Identifier	buf		6016084	1					
ANR	6016262	IfStatement	"if ( ! strcmp ( key , ""DeviceManufacturer"" ) )"		6016084	9					
ANR	6016263	Condition	"! strcmp ( key , ""DeviceManufacturer"" )"	271:6:6572:6606	6016084	0	True				
ANR	6016264	UnaryOperationExpression	"! strcmp ( key , ""DeviceManufacturer"" )"		6016084	0					
ANR	6016265	UnaryOperator	!		6016084	0					
ANR	6016266	CallExpression	"strcmp ( key , ""DeviceManufacturer"" )"		6016084	1					
ANR	6016267	Callee	strcmp		6016084	0					
ANR	6016268	Identifier	strcmp		6016084	0					
ANR	6016269	ArgumentList	key		6016084	1					
ANR	6016270	Argument	key		6016084	0					
ANR	6016271	Identifier	key		6016084	0					
ANR	6016272	Argument	"""DeviceManufacturer"""		6016084	1					
ANR	6016273	PrimaryExpression	"""DeviceManufacturer"""		6016084	0					
ANR	6016274	ExpressionStatement	"val = ""IJS Distribution"""	272:4:6613:6637	6016084	1	True				
ANR	6016275	AssignmentExpression	"val = ""IJS Distribution"""		6016084	0		=			
ANR	6016276	Identifier	val		6016084	0					
ANR	6016277	PrimaryExpression	"""IJS Distribution"""		6016084	1					
ANR	6016278	ElseStatement	else		6016084	0					
ANR	6016279	IfStatement	"if ( ! strcmp ( key , ""DeviceModel"" ) )"		6016084	0					
ANR	6016280	Condition	"! strcmp ( key , ""DeviceModel"" )"	273:11:6650:6677	6016084	0	True				
ANR	6016281	UnaryOperationExpression	"! strcmp ( key , ""DeviceModel"" )"		6016084	0					
ANR	6016282	UnaryOperator	!		6016084	0					
ANR	6016283	CallExpression	"strcmp ( key , ""DeviceModel"" )"		6016084	1					
ANR	6016284	Callee	strcmp		6016084	0					
ANR	6016285	Identifier	strcmp		6016084	0					
ANR	6016286	ArgumentList	key		6016084	1					
ANR	6016287	Argument	key		6016084	0					
ANR	6016288	Identifier	key		6016084	0					
ANR	6016289	Argument	"""DeviceModel"""		6016084	1					
ANR	6016290	PrimaryExpression	"""DeviceModel"""		6016084	0					
ANR	6016291	ExpressionStatement	"val = ""ijs_server_example"""	274:4:6684:6710	6016084	1	True				
ANR	6016292	AssignmentExpression	"val = ""ijs_server_example"""		6016084	0		=			
ANR	6016293	Identifier	val		6016084	0					
ANR	6016294	PrimaryExpression	"""ijs_server_example"""		6016084	1					
ANR	6016295	ElseStatement	else		6016084	0					
ANR	6016296	IfStatement	"if ( ! strcmp ( key , ""PageImageFormat"" ) )"		6016084	0					
ANR	6016297	Condition	"! strcmp ( key , ""PageImageFormat"" )"	275:11:6723:6754	6016084	0	True				
ANR	6016298	UnaryOperationExpression	"! strcmp ( key , ""PageImageFormat"" )"		6016084	0					
ANR	6016299	UnaryOperator	!		6016084	0					
ANR	6016300	CallExpression	"strcmp ( key , ""PageImageFormat"" )"		6016084	1					
ANR	6016301	Callee	strcmp		6016084	0					
ANR	6016302	Identifier	strcmp		6016084	0					
ANR	6016303	ArgumentList	key		6016084	1					
ANR	6016304	Argument	key		6016084	0					
ANR	6016305	Identifier	key		6016084	0					
ANR	6016306	Argument	"""PageImageFormat"""		6016084	1					
ANR	6016307	PrimaryExpression	"""PageImageFormat"""		6016084	0					
ANR	6016308	ExpressionStatement	"val = ""Raster"""	276:4:6761:6775	6016084	1	True				
ANR	6016309	AssignmentExpression	"val = ""Raster"""		6016084	0		=			
ANR	6016310	Identifier	val		6016084	0					
ANR	6016311	PrimaryExpression	"""Raster"""		6016084	1					
ANR	6016312	IfStatement	if ( val == NULL )		6016084	10					
ANR	6016313	Condition	val == NULL	278:6:6784:6794	6016084	0	True				
ANR	6016314	EqualityExpression	val == NULL		6016084	0		==			
ANR	6016315	Identifier	val		6016084	0					
ANR	6016316	Identifier	NULL		6016084	1					
ANR	6016317	ReturnStatement	return IJS_EUNKPARAM ;	279:4:6801:6821	6016084	1	True				
ANR	6016318	Identifier	IJS_EUNKPARAM		6016084	0					
ANR	6016319	ElseStatement	else		6016084	0					
ANR	6016320	CompoundStatement		42:6:1045:1068	6016084	0					
ANR	6016321	IdentifierDeclStatement	int size = strlen ( val ) ;	282:6:6842:6865	6016084	0	True				
ANR	6016322	IdentifierDecl	size = strlen ( val )		6016084	0					
ANR	6016323	IdentifierDeclType	int		6016084	0					
ANR	6016324	Identifier	size		6016084	1					
ANR	6016325	AssignmentExpression	size = strlen ( val )		6016084	2		=			
ANR	6016326	Identifier	size		6016084	0					
ANR	6016327	CallExpression	strlen ( val )		6016084	1					
ANR	6016328	Callee	strlen		6016084	0					
ANR	6016329	Identifier	strlen		6016084	0					
ANR	6016330	ArgumentList	val		6016084	1					
ANR	6016331	Argument	val		6016084	0					
ANR	6016332	Identifier	val		6016084	0					
ANR	6016333	IfStatement	if ( size > val_size )		6016084	1					
ANR	6016334	Condition	size > val_size	284:10:6878:6892	6016084	0	True				
ANR	6016335	RelationalExpression	size > val_size		6016084	0		>			
ANR	6016336	Identifier	size		6016084	0					
ANR	6016337	Identifier	val_size		6016084	1					
ANR	6016338	ReturnStatement	return IJS_EBUF ;	285:8:6903:6918	6016084	1	True				
ANR	6016339	Identifier	IJS_EBUF		6016084	0					
ANR	6016340	ExpressionStatement	"memcpy ( val_buf , val , size )"	286:6:6926:6953	6016084	2	True				
ANR	6016341	CallExpression	"memcpy ( val_buf , val , size )"		6016084	0					
ANR	6016342	Callee	memcpy		6016084	0					
ANR	6016343	Identifier	memcpy		6016084	0					
ANR	6016344	ArgumentList	val_buf		6016084	1					
ANR	6016345	Argument	val_buf		6016084	0					
ANR	6016346	Identifier	val_buf		6016084	0					
ANR	6016347	Argument	val		6016084	1					
ANR	6016348	Identifier	val		6016084	0					
ANR	6016349	Argument	size		6016084	2					
ANR	6016350	Identifier	size		6016084	0					
ANR	6016351	ReturnStatement	return size ;	287:6:6961:6972	6016084	3	True				
ANR	6016352	Identifier	size		6016084	0					
ANR	6016353	ReturnType	static int		6016084	1					
ANR	6016354	Identifier	example_get_cb		6016084	2					
ANR	6016355	ParameterList	"void * get_cb_data , IjsServerCtx * ctx , IjsJobId job_id , const char * key , char * val_buf , int val_size"		6016084	3					
ANR	6016356	Parameter	void * get_cb_data	235:16:5610:5626	6016084	0	True				
ANR	6016357	ParameterType	void *		6016084	0					
ANR	6016358	Identifier	get_cb_data		6016084	1					
ANR	6016359	Parameter	IjsServerCtx * ctx	236:17:5646:5662	6016084	1	True				
ANR	6016360	ParameterType	IjsServerCtx *		6016084	0					
ANR	6016361	Identifier	ctx		6016084	1					
ANR	6016362	Parameter	IjsJobId job_id	237:17:5682:5696	6016084	2	True				
ANR	6016363	ParameterType	IjsJobId		6016084	0					
ANR	6016364	Identifier	job_id		6016084	1					
ANR	6016365	Parameter	const char * key	238:17:5716:5730	6016084	3	True				
ANR	6016366	ParameterType	const char *		6016084	0					
ANR	6016367	Identifier	key		6016084	1					
ANR	6016368	Parameter	char * val_buf	239:17:5750:5762	6016084	4	True				
ANR	6016369	ParameterType	char *		6016084	0					
ANR	6016370	Identifier	val_buf		6016084	1					
ANR	6016371	Parameter	int val_size	240:17:5782:5793	6016084	5	True				
ANR	6016372	ParameterType	int		6016084	0					
ANR	6016373	Identifier	val_size		6016084	1					
ANR	6016374	CFGEntryNode	ENTRY		6016084		True				
ANR	6016375	CFGExitNode	EXIT		6016084		True				
ANR	6016376	Symbol	code		6016084						
ANR	6016377	Symbol	IJS_EUNKPARAM		6016084						
ANR	6016378	Symbol	curs -> value_size		6016084						
ANR	6016379	Symbol	* printable		6016084						
ANR	6016380	Symbol	curs -> value		6016084						
ANR	6016381	Symbol	strlen		6016084						
ANR	6016382	Symbol	val_buf		6016084						
ANR	6016383	Symbol	example_compute_printable		6016084						
ANR	6016384	Symbol	* off		6016084						
ANR	6016385	Symbol	* get_cb_data		6016084						
ANR	6016386	Symbol	example_find_key		6016084						
ANR	6016387	Symbol	val_size		6016084						
ANR	6016388	Symbol	get_cb_data		6016084						
ANR	6016389	Symbol	curs		6016084						
ANR	6016390	Symbol	key		6016084						
ANR	6016391	Symbol	val		6016084						
ANR	6016392	Symbol	strcmp		6016084						
ANR	6016393	Symbol	NULL		6016084						
ANR	6016394	Symbol	ctx		6016084						
ANR	6016395	Symbol	* ( ExampleParamList * * ) get_cb_data		6016084						
ANR	6016396	Symbol	stderr		6016084						
ANR	6016397	Symbol	printable		6016084						
ANR	6016398	Symbol	off		6016084						
ANR	6016399	Symbol	buf		6016084						
ANR	6016400	Symbol	* curs		6016084						
ANR	6016401	Symbol	size		6016084						
ANR	6016402	Symbol	job_id		6016084						
ANR	6016403	Symbol	IJS_EBUF		6016084						
ANR	6016404	Symbol	pl		6016084						
ANR	6016405	Function	example_set_cb	291:0:6983:7982							
ANR	6016406	FunctionDef	"example_set_cb (void * set_cb_data , IjsServerCtx * ctx , IjsJobId job_id , const char * key , const char * value , int value_size)"		6016405	0					
ANR	6016407	CompoundStatement		294:0:7133:7982	6016405	0					
ANR	6016408	IdentifierDeclStatement	ExampleParamList * * ppl = ( ExampleParamList * * ) set_cb_data ;	295:2:7137:7194	6016405	0	True				
ANR	6016409	IdentifierDecl	* * ppl = ( ExampleParamList * * ) set_cb_data		6016405	0					
ANR	6016410	IdentifierDeclType	ExampleParamList * *		6016405	0					
ANR	6016411	Identifier	ppl		6016405	1					
ANR	6016412	AssignmentExpression	* * ppl = ( ExampleParamList * * ) set_cb_data		6016405	2		=			
ANR	6016413	Identifier	ppl		6016405	0					
ANR	6016414	CastExpression	( ExampleParamList * * ) set_cb_data		6016405	1					
ANR	6016415	CastTarget	ExampleParamList * *		6016405	0					
ANR	6016416	Identifier	set_cb_data		6016405	1					
ANR	6016417	IdentifierDeclStatement	ExampleParamList * pl ;	296:2:7198:7218	6016405	1	True				
ANR	6016418	IdentifierDecl	* pl		6016405	0					
ANR	6016419	IdentifierDeclType	ExampleParamList *		6016405	0					
ANR	6016420	Identifier	pl		6016405	1					
ANR	6016421	IdentifierDeclStatement	int key_len = strlen ( key ) ;	297:2:7222:7248	6016405	2	True				
ANR	6016422	IdentifierDecl	key_len = strlen ( key )		6016405	0					
ANR	6016423	IdentifierDeclType	int		6016405	0					
ANR	6016424	Identifier	key_len		6016405	1					
ANR	6016425	AssignmentExpression	key_len = strlen ( key )		6016405	2		=			
ANR	6016426	Identifier	key_len		6016405	0					
ANR	6016427	CallExpression	strlen ( key )		6016405	1					
ANR	6016428	Callee	strlen		6016405	0					
ANR	6016429	Identifier	strlen		6016405	0					
ANR	6016430	ArgumentList	key		6016405	1					
ANR	6016431	Argument	key		6016405	0					
ANR	6016432	Identifier	key		6016405	0					
ANR	6016433	IdentifierDeclStatement	int code ;	298:2:7252:7260	6016405	3	True				
ANR	6016434	IdentifierDecl	code		6016405	0					
ANR	6016435	IdentifierDeclType	int		6016405	0					
ANR	6016436	Identifier	code		6016405	1					
ANR	6016437	ExpressionStatement	"fprintf ( stderr , ""example_set_cb: %s="" , key )"	300:2:7265:7309	6016405	4	True				
ANR	6016438	CallExpression	"fprintf ( stderr , ""example_set_cb: %s="" , key )"		6016405	0					
ANR	6016439	Callee	fprintf		6016405	0					
ANR	6016440	Identifier	fprintf		6016405	0					
ANR	6016441	ArgumentList	stderr		6016405	1					
ANR	6016442	Argument	stderr		6016405	0					
ANR	6016443	Identifier	stderr		6016405	0					
ANR	6016444	Argument	"""example_set_cb: %s="""		6016405	1					
ANR	6016445	PrimaryExpression	"""example_set_cb: %s="""		6016405	0					
ANR	6016446	Argument	key		6016405	2					
ANR	6016447	Identifier	key		6016405	0					
ANR	6016448	IfStatement	"if ( ! strcmp ( key , ""PaperSize"" ) )"		6016405	5					
ANR	6016449	Condition	"! strcmp ( key , ""PaperSize"" )"	302:6:7318:7343	6016405	0	True				
ANR	6016450	UnaryOperationExpression	"! strcmp ( key , ""PaperSize"" )"		6016405	0					
ANR	6016451	UnaryOperator	!		6016405	0					
ANR	6016452	CallExpression	"strcmp ( key , ""PaperSize"" )"		6016405	1					
ANR	6016453	Callee	strcmp		6016405	0					
ANR	6016454	Identifier	strcmp		6016405	0					
ANR	6016455	ArgumentList	key		6016405	1					
ANR	6016456	Argument	key		6016405	0					
ANR	6016457	Identifier	key		6016405	0					
ANR	6016458	Argument	"""PaperSize"""		6016405	1					
ANR	6016459	PrimaryExpression	"""PaperSize"""		6016405	0					
ANR	6016460	CompoundStatement		11:6:224:244	6016405	1					
ANR	6016461	IdentifierDeclStatement	"double width , height ;"	304:6:7358:7378	6016405	0	True				
ANR	6016462	IdentifierDecl	width		6016405	0					
ANR	6016463	IdentifierDeclType	double		6016405	0					
ANR	6016464	Identifier	width		6016405	1					
ANR	6016465	IdentifierDecl	height		6016405	1					
ANR	6016466	IdentifierDeclType	double		6016405	0					
ANR	6016467	Identifier	height		6016405	1					
ANR	6016468	ExpressionStatement	"code = example_parse_wxh ( value , value_size , & width , & height )"	306:6:7387:7448	6016405	1	True				
ANR	6016469	AssignmentExpression	"code = example_parse_wxh ( value , value_size , & width , & height )"		6016405	0		=			
ANR	6016470	Identifier	code		6016405	0					
ANR	6016471	CallExpression	"example_parse_wxh ( value , value_size , & width , & height )"		6016405	1					
ANR	6016472	Callee	example_parse_wxh		6016405	0					
ANR	6016473	Identifier	example_parse_wxh		6016405	0					
ANR	6016474	ArgumentList	value		6016405	1					
ANR	6016475	Argument	value		6016405	0					
ANR	6016476	Identifier	value		6016405	0					
ANR	6016477	Argument	value_size		6016405	1					
ANR	6016478	Identifier	value_size		6016405	0					
ANR	6016479	Argument	& width		6016405	2					
ANR	6016480	UnaryOperationExpression	& width		6016405	0					
ANR	6016481	UnaryOperator	&		6016405	0					
ANR	6016482	Identifier	width		6016405	1					
ANR	6016483	Argument	& height		6016405	3					
ANR	6016484	UnaryOperationExpression	& height		6016405	0					
ANR	6016485	UnaryOperator	&		6016405	0					
ANR	6016486	Identifier	height		6016405	1					
ANR	6016487	IfStatement	if ( code < 0 )		6016405	2					
ANR	6016488	Condition	code < 0	307:10:7460:7467	6016405	0	True				
ANR	6016489	RelationalExpression	code < 0		6016405	0		<			
ANR	6016490	Identifier	code		6016405	0					
ANR	6016491	PrimaryExpression	0		6016405	1					
ANR	6016492	ReturnStatement	return code ;	308:8:7478:7489	6016405	1	True				
ANR	6016493	Identifier	code		6016405	0					
ANR	6016494	ExpressionStatement	"fwrite ( value , 1 , value_size , stderr )"	311:2:7500:7537	6016405	6	True				
ANR	6016495	CallExpression	"fwrite ( value , 1 , value_size , stderr )"		6016405	0					
ANR	6016496	Callee	fwrite		6016405	0					
ANR	6016497	Identifier	fwrite		6016405	0					
ANR	6016498	ArgumentList	value		6016405	1					
ANR	6016499	Argument	value		6016405	0					
ANR	6016500	Identifier	value		6016405	0					
ANR	6016501	Argument	1		6016405	1					
ANR	6016502	PrimaryExpression	1		6016405	0					
ANR	6016503	Argument	value_size		6016405	2					
ANR	6016504	Identifier	value_size		6016405	0					
ANR	6016505	Argument	stderr		6016405	3					
ANR	6016506	Identifier	stderr		6016405	0					
ANR	6016507	ExpressionStatement	"fputs ( ""\\n"" , stderr )"	312:2:7541:7561	6016405	7	True				
ANR	6016508	CallExpression	"fputs ( ""\\n"" , stderr )"		6016405	0					
ANR	6016509	Callee	fputs		6016405	0					
ANR	6016510	Identifier	fputs		6016405	0					
ANR	6016511	ArgumentList	"""\\n"""		6016405	1					
ANR	6016512	Argument	"""\\n"""		6016405	0					
ANR	6016513	PrimaryExpression	"""\\n"""		6016405	0					
ANR	6016514	Argument	stderr		6016405	1					
ANR	6016515	Identifier	stderr		6016405	0					
ANR	6016516	ExpressionStatement	"pl = example_find_key ( * ppl , key )"	314:2:7566:7599	6016405	8	True				
ANR	6016517	AssignmentExpression	"pl = example_find_key ( * ppl , key )"		6016405	0		=			
ANR	6016518	Identifier	pl		6016405	0					
ANR	6016519	CallExpression	"example_find_key ( * ppl , key )"		6016405	1					
ANR	6016520	Callee	example_find_key		6016405	0					
ANR	6016521	Identifier	example_find_key		6016405	0					
ANR	6016522	ArgumentList	* ppl		6016405	1					
ANR	6016523	Argument	* ppl		6016405	0					
ANR	6016524	UnaryOperationExpression	* ppl		6016405	0					
ANR	6016525	UnaryOperator	*		6016405	0					
ANR	6016526	Identifier	ppl		6016405	1					
ANR	6016527	Argument	key		6016405	1					
ANR	6016528	Identifier	key		6016405	0					
ANR	6016529	IfStatement	if ( pl == NULL )		6016405	9					
ANR	6016530	Condition	pl == NULL	316:6:7608:7617	6016405	0	True				
ANR	6016531	EqualityExpression	pl == NULL		6016405	0		==			
ANR	6016532	Identifier	pl		6016405	0					
ANR	6016533	Identifier	NULL		6016405	1					
ANR	6016534	CompoundStatement		24:4:490:490	6016405	1					
ANR	6016535	ExpressionStatement	pl = ( ExampleParamList * ) malloc ( sizeof ( ExampleParamList ) )	318:6:7632:7691	6016405	0	True				
ANR	6016536	AssignmentExpression	pl = ( ExampleParamList * ) malloc ( sizeof ( ExampleParamList ) )		6016405	0		=			
ANR	6016537	Identifier	pl		6016405	0					
ANR	6016538	CastExpression	( ExampleParamList * ) malloc ( sizeof ( ExampleParamList ) )		6016405	1					
ANR	6016539	CastTarget	ExampleParamList *		6016405	0					
ANR	6016540	CallExpression	malloc ( sizeof ( ExampleParamList ) )		6016405	1					
ANR	6016541	Callee	malloc		6016405	0					
ANR	6016542	Identifier	malloc		6016405	0					
ANR	6016543	ArgumentList	sizeof ( ExampleParamList )		6016405	1					
ANR	6016544	Argument	sizeof ( ExampleParamList )		6016405	0					
ANR	6016545	SizeofExpression	sizeof ( ExampleParamList )		6016405	0					
ANR	6016546	Sizeof	sizeof		6016405	0					
ANR	6016547	SizeofOperand	ExampleParamList		6016405	1					
ANR	6016548	ExpressionStatement	pl -> next = * ppl	319:6:7699:7714	6016405	1	True				
ANR	6016549	AssignmentExpression	pl -> next = * ppl		6016405	0		=			
ANR	6016550	PtrMemberAccess	pl -> next		6016405	0					
ANR	6016551	Identifier	pl		6016405	0					
ANR	6016552	Identifier	next		6016405	1					
ANR	6016553	UnaryOperationExpression	* ppl		6016405	1					
ANR	6016554	UnaryOperator	*		6016405	0					
ANR	6016555	Identifier	ppl		6016405	1					
ANR	6016556	ExpressionStatement	pl -> key = malloc ( key_len + 1 )	320:6:7722:7752	6016405	2	True				
ANR	6016557	AssignmentExpression	pl -> key = malloc ( key_len + 1 )		6016405	0		=			
ANR	6016558	PtrMemberAccess	pl -> key		6016405	0					
ANR	6016559	Identifier	pl		6016405	0					
ANR	6016560	Identifier	key		6016405	1					
ANR	6016561	CallExpression	malloc ( key_len + 1 )		6016405	1					
ANR	6016562	Callee	malloc		6016405	0					
ANR	6016563	Identifier	malloc		6016405	0					
ANR	6016564	ArgumentList	key_len + 1		6016405	1					
ANR	6016565	Argument	key_len + 1		6016405	0					
ANR	6016566	AdditiveExpression	key_len + 1		6016405	0		+			
ANR	6016567	Identifier	key_len		6016405	0					
ANR	6016568	PrimaryExpression	1		6016405	1					
ANR	6016569	ExpressionStatement	"memcpy ( pl -> key , key , key_len + 1 )"	321:6:7760:7794	6016405	3	True				
ANR	6016570	CallExpression	"memcpy ( pl -> key , key , key_len + 1 )"		6016405	0					
ANR	6016571	Callee	memcpy		6016405	0					
ANR	6016572	Identifier	memcpy		6016405	0					
ANR	6016573	ArgumentList	pl -> key		6016405	1					
ANR	6016574	Argument	pl -> key		6016405	0					
ANR	6016575	PtrMemberAccess	pl -> key		6016405	0					
ANR	6016576	Identifier	pl		6016405	0					
ANR	6016577	Identifier	key		6016405	1					
ANR	6016578	Argument	key		6016405	1					
ANR	6016579	Identifier	key		6016405	0					
ANR	6016580	Argument	key_len + 1		6016405	2					
ANR	6016581	AdditiveExpression	key_len + 1		6016405	0		+			
ANR	6016582	Identifier	key_len		6016405	0					
ANR	6016583	PrimaryExpression	1		6016405	1					
ANR	6016584	ExpressionStatement	* ppl = pl	322:6:7802:7811	6016405	4	True				
ANR	6016585	AssignmentExpression	* ppl = pl		6016405	0		=			
ANR	6016586	UnaryOperationExpression	* ppl		6016405	0					
ANR	6016587	UnaryOperator	*		6016405	0					
ANR	6016588	Identifier	ppl		6016405	1					
ANR	6016589	Identifier	pl		6016405	1					
ANR	6016590	ElseStatement	else		6016405	0					
ANR	6016591	CompoundStatement		32:4:696:696	6016405	0					
ANR	6016592	ExpressionStatement	free ( pl -> value )	326:6:7838:7854	6016405	0	True				
ANR	6016593	CallExpression	free ( pl -> value )		6016405	0					
ANR	6016594	Callee	free		6016405	0					
ANR	6016595	Identifier	free		6016405	0					
ANR	6016596	ArgumentList	pl -> value		6016405	1					
ANR	6016597	Argument	pl -> value		6016405	0					
ANR	6016598	PtrMemberAccess	pl -> value		6016405	0					
ANR	6016599	Identifier	pl		6016405	0					
ANR	6016600	Identifier	value		6016405	1					
ANR	6016601	ExpressionStatement	pl -> value = malloc ( value_size )	329:2:7865:7896	6016405	10	True				
ANR	6016602	AssignmentExpression	pl -> value = malloc ( value_size )		6016405	0		=			
ANR	6016603	PtrMemberAccess	pl -> value		6016405	0					
ANR	6016604	Identifier	pl		6016405	0					
ANR	6016605	Identifier	value		6016405	1					
ANR	6016606	CallExpression	malloc ( value_size )		6016405	1					
ANR	6016607	Callee	malloc		6016405	0					
ANR	6016608	Identifier	malloc		6016405	0					
ANR	6016609	ArgumentList	value_size		6016405	1					
ANR	6016610	Argument	value_size		6016405	0					
ANR	6016611	Identifier	value_size		6016405	0					
ANR	6016612	ExpressionStatement	"memcpy ( pl -> value , value , value_size )"	330:2:7900:7937	6016405	11	True				
ANR	6016613	CallExpression	"memcpy ( pl -> value , value , value_size )"		6016405	0					
ANR	6016614	Callee	memcpy		6016405	0					
ANR	6016615	Identifier	memcpy		6016405	0					
ANR	6016616	ArgumentList	pl -> value		6016405	1					
ANR	6016617	Argument	pl -> value		6016405	0					
ANR	6016618	PtrMemberAccess	pl -> value		6016405	0					
ANR	6016619	Identifier	pl		6016405	0					
ANR	6016620	Identifier	value		6016405	1					
ANR	6016621	Argument	value		6016405	1					
ANR	6016622	Identifier	value		6016405	0					
ANR	6016623	Argument	value_size		6016405	2					
ANR	6016624	Identifier	value_size		6016405	0					
ANR	6016625	ExpressionStatement	pl -> value_size = value_size	331:2:7941:7968	6016405	12	True				
ANR	6016626	AssignmentExpression	pl -> value_size = value_size		6016405	0		=			
ANR	6016627	PtrMemberAccess	pl -> value_size		6016405	0					
ANR	6016628	Identifier	pl		6016405	0					
ANR	6016629	Identifier	value_size		6016405	1					
ANR	6016630	Identifier	value_size		6016405	1					
ANR	6016631	ReturnStatement	return 0 ;	332:2:7972:7980	6016405	13	True				
ANR	6016632	PrimaryExpression	0		6016405	0					
ANR	6016633	ReturnType	static int		6016405	1					
ANR	6016634	Identifier	example_set_cb		6016405	2					
ANR	6016635	ParameterList	"void * set_cb_data , IjsServerCtx * ctx , IjsJobId job_id , const char * key , const char * value , int value_size"		6016405	3					
ANR	6016636	Parameter	void * set_cb_data	292:16:7010:7026	6016405	0	True				
ANR	6016637	ParameterType	void *		6016405	0					
ANR	6016638	Identifier	set_cb_data		6016405	1					
ANR	6016639	Parameter	IjsServerCtx * ctx	292:35:7029:7045	6016405	1	True				
ANR	6016640	ParameterType	IjsServerCtx *		6016405	0					
ANR	6016641	Identifier	ctx		6016405	1					
ANR	6016642	Parameter	IjsJobId job_id	292:54:7048:7062	6016405	2	True				
ANR	6016643	ParameterType	IjsJobId		6016405	0					
ANR	6016644	Identifier	job_id		6016405	1					
ANR	6016645	Parameter	const char * key	293:16:7081:7095	6016405	3	True				
ANR	6016646	ParameterType	const char *		6016405	0					
ANR	6016647	Identifier	key		6016405	1					
ANR	6016648	Parameter	const char * value	293:33:7098:7114	6016405	4	True				
ANR	6016649	ParameterType	const char *		6016405	0					
ANR	6016650	Identifier	value		6016405	1					
ANR	6016651	Parameter	int value_size	293:52:7117:7130	6016405	5	True				
ANR	6016652	ParameterType	int		6016405	0					
ANR	6016653	Identifier	value_size		6016405	1					
ANR	6016654	CFGEntryNode	ENTRY		6016405		True				
ANR	6016655	CFGExitNode	EXIT		6016405		True				
ANR	6016656	Symbol	code		6016405						
ANR	6016657	Symbol	value_size		6016405						
ANR	6016658	Symbol	& width		6016405						
ANR	6016659	Symbol	& height		6016405						
ANR	6016660	Symbol	pl -> value		6016405						
ANR	6016661	Symbol	strlen		6016405						
ANR	6016662	Symbol	* ppl		6016405						
ANR	6016663	Symbol	set_cb_data		6016405						
ANR	6016664	Symbol	example_find_key		6016405						
ANR	6016665	Symbol	value		6016405						
ANR	6016666	Symbol	key		6016405						
ANR	6016667	Symbol	key_len		6016405						
ANR	6016668	Symbol	height		6016405						
ANR	6016669	Symbol	strcmp		6016405						
ANR	6016670	Symbol	malloc		6016405						
ANR	6016671	Symbol	* pl		6016405						
ANR	6016672	Symbol	NULL		6016405						
ANR	6016673	Symbol	ctx		6016405						
ANR	6016674	Symbol	stderr		6016405						
ANR	6016675	Symbol	ppl		6016405						
ANR	6016676	Symbol	pl -> key		6016405						
ANR	6016677	Symbol	pl -> value_size		6016405						
ANR	6016678	Symbol	job_id		6016405						
ANR	6016679	Symbol	width		6016405						
ANR	6016680	Symbol	pl		6016405						
ANR	6016681	Symbol	example_parse_wxh		6016405						
ANR	6016682	Symbol	pl -> next		6016405						
ANR	6016683	Function	find_param	339:0:8092:8418							
ANR	6016684	FunctionDef	"find_param (ExampleParamList * pl , const char * key)"		6016683	0					
ANR	6016685	CompoundStatement		341:0:8157:8418	6016683	0					
ANR	6016686	IdentifierDeclStatement	ExampleParamList * curs ;	342:2:8161:8183	6016683	0	True				
ANR	6016687	IdentifierDecl	* curs		6016683	0					
ANR	6016688	IdentifierDeclType	ExampleParamList *		6016683	0					
ANR	6016689	Identifier	curs		6016683	1					
ANR	6016690	IdentifierDeclStatement	char * result ;	343:2:8187:8199	6016683	1	True				
ANR	6016691	IdentifierDecl	* result		6016683	0					
ANR	6016692	IdentifierDeclType	char *		6016683	0					
ANR	6016693	Identifier	result		6016683	1					
ANR	6016694	ExpressionStatement	"curs = example_find_key ( pl , key )"	345:2:8204:8237	6016683	2	True				
ANR	6016695	AssignmentExpression	"curs = example_find_key ( pl , key )"		6016683	0		=			
ANR	6016696	Identifier	curs		6016683	0					
ANR	6016697	CallExpression	"example_find_key ( pl , key )"		6016683	1					
ANR	6016698	Callee	example_find_key		6016683	0					
ANR	6016699	Identifier	example_find_key		6016683	0					
ANR	6016700	ArgumentList	pl		6016683	1					
ANR	6016701	Argument	pl		6016683	0					
ANR	6016702	Identifier	pl		6016683	0					
ANR	6016703	Argument	key		6016683	1					
ANR	6016704	Identifier	key		6016683	0					
ANR	6016705	IfStatement	if ( curs == NULL )		6016683	3					
ANR	6016706	Condition	curs == NULL	346:6:8245:8256	6016683	0	True				
ANR	6016707	EqualityExpression	curs == NULL		6016683	0		==			
ANR	6016708	Identifier	curs		6016683	0					
ANR	6016709	Identifier	NULL		6016683	1					
ANR	6016710	ReturnStatement	return NULL ;	347:4:8263:8274	6016683	1	True				
ANR	6016711	Identifier	NULL		6016683	0					
ANR	6016712	ExpressionStatement	result = malloc ( curs -> value_size + 1 )	349:2:8279:8317	6016683	4	True				
ANR	6016713	AssignmentExpression	result = malloc ( curs -> value_size + 1 )		6016683	0		=			
ANR	6016714	Identifier	result		6016683	0					
ANR	6016715	CallExpression	malloc ( curs -> value_size + 1 )		6016683	1					
ANR	6016716	Callee	malloc		6016683	0					
ANR	6016717	Identifier	malloc		6016683	0					
ANR	6016718	ArgumentList	curs -> value_size + 1		6016683	1					
ANR	6016719	Argument	curs -> value_size + 1		6016683	0					
ANR	6016720	AdditiveExpression	curs -> value_size + 1		6016683	0		+			
ANR	6016721	PtrMemberAccess	curs -> value_size		6016683	0					
ANR	6016722	Identifier	curs		6016683	0					
ANR	6016723	Identifier	value_size		6016683	1					
ANR	6016724	PrimaryExpression	1		6016683	1					
ANR	6016725	ExpressionStatement	"memcpy ( result , curs -> value , curs -> value_size )"	350:2:8321:8367	6016683	5	True				
ANR	6016726	CallExpression	"memcpy ( result , curs -> value , curs -> value_size )"		6016683	0					
ANR	6016727	Callee	memcpy		6016683	0					
ANR	6016728	Identifier	memcpy		6016683	0					
ANR	6016729	ArgumentList	result		6016683	1					
ANR	6016730	Argument	result		6016683	0					
ANR	6016731	Identifier	result		6016683	0					
ANR	6016732	Argument	curs -> value		6016683	1					
ANR	6016733	PtrMemberAccess	curs -> value		6016683	0					
ANR	6016734	Identifier	curs		6016683	0					
ANR	6016735	Identifier	value		6016683	1					
ANR	6016736	Argument	curs -> value_size		6016683	2					
ANR	6016737	PtrMemberAccess	curs -> value_size		6016683	0					
ANR	6016738	Identifier	curs		6016683	0					
ANR	6016739	Identifier	value_size		6016683	1					
ANR	6016740	ExpressionStatement	result [ curs -> value_size ] = 0	351:2:8371:8399	6016683	6	True				
ANR	6016741	AssignmentExpression	result [ curs -> value_size ] = 0		6016683	0		=			
ANR	6016742	ArrayIndexing	result [ curs -> value_size ]		6016683	0					
ANR	6016743	Identifier	result		6016683	0					
ANR	6016744	PtrMemberAccess	curs -> value_size		6016683	1					
ANR	6016745	Identifier	curs		6016683	0					
ANR	6016746	Identifier	value_size		6016683	1					
ANR	6016747	PrimaryExpression	0		6016683	1					
ANR	6016748	ReturnStatement	return result ;	352:2:8403:8416	6016683	7	True				
ANR	6016749	Identifier	result		6016683	0					
ANR	6016750	ReturnType	static char *		6016683	1					
ANR	6016751	Identifier	find_param		6016683	2					
ANR	6016752	ParameterList	"ExampleParamList * pl , const char * key"		6016683	3					
ANR	6016753	Parameter	ExampleParamList * pl	340:12:8118:8137	6016683	0	True				
ANR	6016754	ParameterType	ExampleParamList *		6016683	0					
ANR	6016755	Identifier	pl		6016683	1					
ANR	6016756	Parameter	const char * key	340:34:8140:8154	6016683	1	True				
ANR	6016757	ParameterType	const char *		6016683	0					
ANR	6016758	Identifier	key		6016683	1					
ANR	6016759	CFGEntryNode	ENTRY		6016683		True				
ANR	6016760	CFGExitNode	EXIT		6016683		True				
ANR	6016761	Symbol	malloc		6016683						
ANR	6016762	Symbol	NULL		6016683						
ANR	6016763	Symbol	* * curs		6016683						
ANR	6016764	Symbol	curs -> value_size		6016683						
ANR	6016765	Symbol	result		6016683						
ANR	6016766	Symbol	curs -> value		6016683						
ANR	6016767	Symbol	* curs		6016683						
ANR	6016768	Symbol	* curs -> value_size		6016683						
ANR	6016769	Symbol	* result		6016683						
ANR	6016770	Symbol	example_find_key		6016683						
ANR	6016771	Symbol	pl		6016683						
ANR	6016772	Symbol	curs		6016683						
ANR	6016773	Symbol	key		6016683						
ANR	6016774	Function	free_param_list	355:0:8421:8631							
ANR	6016775	FunctionDef	free_param_list (ExampleParamList * pl)		6016774	0					
ANR	6016776	CompoundStatement		357:0:8472:8631	6016774	0					
ANR	6016777	IdentifierDeclStatement	ExampleParamList * next ;	358:2:8476:8498	6016774	0	True				
ANR	6016778	IdentifierDecl	* next		6016774	0					
ANR	6016779	IdentifierDeclType	ExampleParamList *		6016774	0					
ANR	6016780	Identifier	next		6016774	1					
ANR	6016781	ForStatement	for ( ; pl != NULL ; pl = next )		6016774	1					
ANR	6016782	Condition	pl != NULL	360:9:8510:8519	6016774	0	True				
ANR	6016783	EqualityExpression	pl != NULL		6016774	0		!=			
ANR	6016784	Identifier	pl		6016774	0					
ANR	6016785	Identifier	NULL		6016774	1					
ANR	6016786	AssignmentExpression	pl = next	360:21:8522:8530	6016774	1	True	=			
ANR	6016787	Identifier	pl		6016774	0					
ANR	6016788	Identifier	next		6016774	1					
ANR	6016789	CompoundStatement		5:4:64:64	6016774	2					
ANR	6016790	ExpressionStatement	next = pl -> next	362:6:8545:8560	6016774	0	True				
ANR	6016791	AssignmentExpression	next = pl -> next		6016774	0		=			
ANR	6016792	Identifier	next		6016774	0					
ANR	6016793	PtrMemberAccess	pl -> next		6016774	1					
ANR	6016794	Identifier	pl		6016774	0					
ANR	6016795	Identifier	next		6016774	1					
ANR	6016796	ExpressionStatement	free ( pl -> key )	363:6:8568:8582	6016774	1	True				
ANR	6016797	CallExpression	free ( pl -> key )		6016774	0					
ANR	6016798	Callee	free		6016774	0					
ANR	6016799	Identifier	free		6016774	0					
ANR	6016800	ArgumentList	pl -> key		6016774	1					
ANR	6016801	Argument	pl -> key		6016774	0					
ANR	6016802	PtrMemberAccess	pl -> key		6016774	0					
ANR	6016803	Identifier	pl		6016774	0					
ANR	6016804	Identifier	key		6016774	1					
ANR	6016805	ExpressionStatement	free ( pl -> value )	364:6:8590:8606	6016774	2	True				
ANR	6016806	CallExpression	free ( pl -> value )		6016774	0					
ANR	6016807	Callee	free		6016774	0					
ANR	6016808	Identifier	free		6016774	0					
ANR	6016809	ArgumentList	pl -> value		6016774	1					
ANR	6016810	Argument	pl -> value		6016774	0					
ANR	6016811	PtrMemberAccess	pl -> value		6016774	0					
ANR	6016812	Identifier	pl		6016774	0					
ANR	6016813	Identifier	value		6016774	1					
ANR	6016814	ExpressionStatement	free ( pl )	365:6:8614:8623	6016774	3	True				
ANR	6016815	CallExpression	free ( pl )		6016774	0					
ANR	6016816	Callee	free		6016774	0					
ANR	6016817	Identifier	free		6016774	0					
ANR	6016818	ArgumentList	pl		6016774	1					
ANR	6016819	Argument	pl		6016774	0					
ANR	6016820	Identifier	pl		6016774	0					
ANR	6016821	ReturnType	static void		6016774	1					
ANR	6016822	Identifier	free_param_list		6016774	2					
ANR	6016823	ParameterList	ExampleParamList * pl		6016774	3					
ANR	6016824	Parameter	ExampleParamList * pl	356:17:8450:8469	6016774	0	True				
ANR	6016825	ParameterType	ExampleParamList *		6016774	0					
ANR	6016826	Identifier	pl		6016774	1					
ANR	6016827	CFGEntryNode	ENTRY		6016774		True				
ANR	6016828	CFGExitNode	EXIT		6016774		True				
ANR	6016829	Symbol	next		6016774						
ANR	6016830	Symbol	pl -> value		6016774						
ANR	6016831	Symbol	* pl		6016774						
ANR	6016832	Symbol	NULL		6016774						
ANR	6016833	Symbol	pl		6016774						
ANR	6016834	Symbol	pl -> key		6016774						
ANR	6016835	Symbol	pl -> next		6016774						
ANR	6016836	Function	main	369:0:8634:12793							
ANR	6016837	FunctionDef	"main (int argc , char * * argv)"		6016836	0					
ANR	6016838	CompoundStatement		371:0:8667:12793	6016836	0					
ANR	6016839	IdentifierDeclStatement	IjsServerCtx * ctx ;	372:2:8671:8688	6016836	0	True				
ANR	6016840	IdentifierDecl	* ctx		6016836	0					
ANR	6016841	IdentifierDeclType	IjsServerCtx *		6016836	0					
ANR	6016842	Identifier	ctx		6016836	1					
ANR	6016843	IdentifierDeclStatement	IjsPageHeader ph ;	373:2:8692:8708	6016836	1	True				
ANR	6016844	IdentifierDecl	ph		6016836	0					
ANR	6016845	IdentifierDeclType	IjsPageHeader		6016836	0					
ANR	6016846	Identifier	ph		6016836	1					
ANR	6016847	IdentifierDeclStatement	int status ;	374:2:8712:8722	6016836	2	True				
ANR	6016848	IdentifierDecl	status		6016836	0					
ANR	6016849	IdentifierDeclType	int		6016836	0					
ANR	6016850	Identifier	status		6016836	1					
ANR	6016851	IdentifierDeclStatement	char buf [ BUF_SIZE ] ;	375:2:8726:8744	6016836	3	True				
ANR	6016852	IdentifierDecl	buf [ BUF_SIZE ]		6016836	0					
ANR	6016853	IdentifierDeclType	char [ BUF_SIZE ]		6016836	0					
ANR	6016854	Identifier	buf		6016836	1					
ANR	6016855	Identifier	BUF_SIZE		6016836	2					
ANR	6016856	IdentifierDeclStatement	char hexbuf [ BUF_SIZE * 3 ] ;	376:2:8748:8773	6016836	4	True				
ANR	6016857	IdentifierDecl	hexbuf [ BUF_SIZE * 3 ]		6016836	0					
ANR	6016858	IdentifierDeclType	char [ BUF_SIZE * 3 ]		6016836	0					
ANR	6016859	Identifier	hexbuf		6016836	1					
ANR	6016860	MultiplicativeExpression	BUF_SIZE * 3		6016836	2		*			
ANR	6016861	Identifier	BUF_SIZE		6016836	0					
ANR	6016862	PrimaryExpression	3		6016836	1					
ANR	6016863	IdentifierDeclStatement	char * fn ;	377:2:8777:8785	6016836	5	True				
ANR	6016864	IdentifierDecl	* fn		6016836	0					
ANR	6016865	IdentifierDeclType	char *		6016836	0					
ANR	6016866	Identifier	fn		6016836	1					
ANR	6016867	IdentifierDeclStatement	FILE * f = NULL ;	378:2:8789:8803	6016836	6	True				
ANR	6016868	IdentifierDecl	* f = NULL		6016836	0					
ANR	6016869	IdentifierDeclType	FILE *		6016836	0					
ANR	6016870	Identifier	f		6016836	1					
ANR	6016871	AssignmentExpression	* f = NULL		6016836	2		=			
ANR	6016872	Identifier	NULL		6016836	0					
ANR	6016873	Identifier	NULL		6016836	1					
ANR	6016874	IdentifierDeclStatement	"double xscale , yscale ;"	379:2:8807:8828	6016836	7	True				
ANR	6016875	IdentifierDecl	xscale		6016836	0					
ANR	6016876	IdentifierDeclType	double		6016836	0					
ANR	6016877	Identifier	xscale		6016836	1					
ANR	6016878	IdentifierDecl	yscale		6016836	1					
ANR	6016879	IdentifierDeclType	double		6016836	0					
ANR	6016880	Identifier	yscale		6016836	1					
ANR	6016881	IdentifierDeclStatement	"double x0 , y0 ;"	380:2:8832:8845	6016836	8	True				
ANR	6016882	IdentifierDecl	x0		6016836	0					
ANR	6016883	IdentifierDeclType	double		6016836	0					
ANR	6016884	Identifier	x0		6016836	1					
ANR	6016885	IdentifierDecl	y0		6016836	1					
ANR	6016886	IdentifierDeclType	double		6016836	0					
ANR	6016887	Identifier	y0		6016836	1					
ANR	6016888	IdentifierDeclStatement	ExampleParamList * pl = NULL ;	381:2:8849:8876	6016836	9	True				
ANR	6016889	IdentifierDecl	* pl = NULL		6016836	0					
ANR	6016890	IdentifierDeclType	ExampleParamList *		6016836	0					
ANR	6016891	Identifier	pl		6016836	1					
ANR	6016892	AssignmentExpression	* pl = NULL		6016836	2		=			
ANR	6016893	Identifier	NULL		6016836	0					
ANR	6016894	Identifier	NULL		6016836	1					
ANR	6016895	ExpressionStatement	ctx = ijs_server_init ( )	383:2:8881:8905	6016836	10	True				
ANR	6016896	AssignmentExpression	ctx = ijs_server_init ( )		6016836	0		=			
ANR	6016897	Identifier	ctx		6016836	0					
ANR	6016898	CallExpression	ijs_server_init ( )		6016836	1					
ANR	6016899	Callee	ijs_server_init		6016836	0					
ANR	6016900	Identifier	ijs_server_init		6016836	0					
ANR	6016901	ArgumentList			6016836	1					
ANR	6016902	IfStatement	if ( ctx == NULL )		6016836	11					
ANR	6016903	Condition	ctx == NULL	384:6:8913:8923	6016836	0	True				
ANR	6016904	EqualityExpression	ctx == NULL		6016836	0		==			
ANR	6016905	Identifier	ctx		6016836	0					
ANR	6016906	Identifier	NULL		6016836	1					
ANR	6016907	ReturnStatement	return ( 1 ) ;	385:4:8930:8940	6016836	1	True				
ANR	6016908	PrimaryExpression	1		6016836	0					
ANR	6016909	ExpressionStatement	"ijs_server_install_status_cb ( ctx , example_status_cb , & pl )"	386:2:8944:9002	6016836	12	True				
ANR	6016910	CallExpression	"ijs_server_install_status_cb ( ctx , example_status_cb , & pl )"		6016836	0					
ANR	6016911	Callee	ijs_server_install_status_cb		6016836	0					
ANR	6016912	Identifier	ijs_server_install_status_cb		6016836	0					
ANR	6016913	ArgumentList	ctx		6016836	1					
ANR	6016914	Argument	ctx		6016836	0					
ANR	6016915	Identifier	ctx		6016836	0					
ANR	6016916	Argument	example_status_cb		6016836	1					
ANR	6016917	Identifier	example_status_cb		6016836	0					
ANR	6016918	Argument	& pl		6016836	2					
ANR	6016919	UnaryOperationExpression	& pl		6016836	0					
ANR	6016920	UnaryOperator	&		6016836	0					
ANR	6016921	Identifier	pl		6016836	1					
ANR	6016922	ExpressionStatement	"ijs_server_install_list_cb ( ctx , example_list_cb , & pl )"	387:2:9006:9060	6016836	13	True				
ANR	6016923	CallExpression	"ijs_server_install_list_cb ( ctx , example_list_cb , & pl )"		6016836	0					
ANR	6016924	Callee	ijs_server_install_list_cb		6016836	0					
ANR	6016925	Identifier	ijs_server_install_list_cb		6016836	0					
ANR	6016926	ArgumentList	ctx		6016836	1					
ANR	6016927	Argument	ctx		6016836	0					
ANR	6016928	Identifier	ctx		6016836	0					
ANR	6016929	Argument	example_list_cb		6016836	1					
ANR	6016930	Identifier	example_list_cb		6016836	0					
ANR	6016931	Argument	& pl		6016836	2					
ANR	6016932	UnaryOperationExpression	& pl		6016836	0					
ANR	6016933	UnaryOperator	&		6016836	0					
ANR	6016934	Identifier	pl		6016836	1					
ANR	6016935	ExpressionStatement	"ijs_server_install_enum_cb ( ctx , example_enum_cb , & pl )"	388:2:9064:9118	6016836	14	True				
ANR	6016936	CallExpression	"ijs_server_install_enum_cb ( ctx , example_enum_cb , & pl )"		6016836	0					
ANR	6016937	Callee	ijs_server_install_enum_cb		6016836	0					
ANR	6016938	Identifier	ijs_server_install_enum_cb		6016836	0					
ANR	6016939	ArgumentList	ctx		6016836	1					
ANR	6016940	Argument	ctx		6016836	0					
ANR	6016941	Identifier	ctx		6016836	0					
ANR	6016942	Argument	example_enum_cb		6016836	1					
ANR	6016943	Identifier	example_enum_cb		6016836	0					
ANR	6016944	Argument	& pl		6016836	2					
ANR	6016945	UnaryOperationExpression	& pl		6016836	0					
ANR	6016946	UnaryOperator	&		6016836	0					
ANR	6016947	Identifier	pl		6016836	1					
ANR	6016948	ExpressionStatement	"ijs_server_install_set_cb ( ctx , example_set_cb , & pl )"	389:2:9122:9174	6016836	15	True				
ANR	6016949	CallExpression	"ijs_server_install_set_cb ( ctx , example_set_cb , & pl )"		6016836	0					
ANR	6016950	Callee	ijs_server_install_set_cb		6016836	0					
ANR	6016951	Identifier	ijs_server_install_set_cb		6016836	0					
ANR	6016952	ArgumentList	ctx		6016836	1					
ANR	6016953	Argument	ctx		6016836	0					
ANR	6016954	Identifier	ctx		6016836	0					
ANR	6016955	Argument	example_set_cb		6016836	1					
ANR	6016956	Identifier	example_set_cb		6016836	0					
ANR	6016957	Argument	& pl		6016836	2					
ANR	6016958	UnaryOperationExpression	& pl		6016836	0					
ANR	6016959	UnaryOperator	&		6016836	0					
ANR	6016960	Identifier	pl		6016836	1					
ANR	6016961	ExpressionStatement	"ijs_server_install_get_cb ( ctx , example_get_cb , & pl )"	390:2:9178:9230	6016836	16	True				
ANR	6016962	CallExpression	"ijs_server_install_get_cb ( ctx , example_get_cb , & pl )"		6016836	0					
ANR	6016963	Callee	ijs_server_install_get_cb		6016836	0					
ANR	6016964	Identifier	ijs_server_install_get_cb		6016836	0					
ANR	6016965	ArgumentList	ctx		6016836	1					
ANR	6016966	Argument	ctx		6016836	0					
ANR	6016967	Identifier	ctx		6016836	0					
ANR	6016968	Argument	example_get_cb		6016836	1					
ANR	6016969	Identifier	example_get_cb		6016836	0					
ANR	6016970	Argument	& pl		6016836	2					
ANR	6016971	UnaryOperationExpression	& pl		6016836	0					
ANR	6016972	UnaryOperator	&		6016836	0					
ANR	6016973	Identifier	pl		6016836	1					
ANR	6016974	DoStatement	do		6016836	17					
ANR	6016975	CompoundStatement		25:6:617:639	6016836	0					
ANR	6016976	IdentifierDeclStatement	"int total_bytes , bytes_left ;"	394:6:9250:9277	6016836	0	True				
ANR	6016977	IdentifierDecl	total_bytes		6016836	0					
ANR	6016978	IdentifierDeclType	int		6016836	0					
ANR	6016979	Identifier	total_bytes		6016836	1					
ANR	6016980	IdentifierDecl	bytes_left		6016836	1					
ANR	6016981	IdentifierDeclType	int		6016836	0					
ANR	6016982	Identifier	bytes_left		6016836	1					
ANR	6016983	IdentifierDeclStatement	ExampleParamList * curs ;	395:6:9285:9307	6016836	1	True				
ANR	6016984	IdentifierDecl	* curs		6016836	0					
ANR	6016985	IdentifierDeclType	ExampleParamList *		6016836	0					
ANR	6016986	Identifier	curs		6016836	1					
ANR	6016987	ExpressionStatement	"status = ijs_server_get_page_header ( ctx , & ph )"	397:6:9316:9362	6016836	2	True				
ANR	6016988	AssignmentExpression	"status = ijs_server_get_page_header ( ctx , & ph )"		6016836	0		=			
ANR	6016989	Identifier	status		6016836	0					
ANR	6016990	CallExpression	"ijs_server_get_page_header ( ctx , & ph )"		6016836	1					
ANR	6016991	Callee	ijs_server_get_page_header		6016836	0					
ANR	6016992	Identifier	ijs_server_get_page_header		6016836	0					
ANR	6016993	ArgumentList	ctx		6016836	1					
ANR	6016994	Argument	ctx		6016836	0					
ANR	6016995	Identifier	ctx		6016836	0					
ANR	6016996	Argument	& ph		6016836	1					
ANR	6016997	UnaryOperationExpression	& ph		6016836	0					
ANR	6016998	UnaryOperator	&		6016836	0					
ANR	6016999	Identifier	ph		6016836	1					
ANR	6017000	IfStatement	if ( status )		6016836	3					
ANR	6017001	Condition	status	398:10:9374:9379	6016836	0	True				
ANR	6017002	Identifier	status		6016836	0					
ANR	6017003	BreakStatement	break ;	398:18:9382:9387	6016836	1	True				
ANR	6017004	ExpressionStatement	"fprintf ( stderr , ""got page header, %d x %d\\n"" , ph . width , ph . height )"	399:6:9395:9476	6016836	4	True				
ANR	6017005	CallExpression	"fprintf ( stderr , ""got page header, %d x %d\\n"" , ph . width , ph . height )"		6016836	0					
ANR	6017006	Callee	fprintf		6016836	0					
ANR	6017007	Identifier	fprintf		6016836	0					
ANR	6017008	ArgumentList	stderr		6016836	1					
ANR	6017009	Argument	stderr		6016836	0					
ANR	6017010	Identifier	stderr		6016836	0					
ANR	6017011	Argument	"""got page header, %d x %d\\n"""		6016836	1					
ANR	6017012	PrimaryExpression	"""got page header, %d x %d\\n"""		6016836	0					
ANR	6017013	Argument	ph . width		6016836	2					
ANR	6017014	MemberAccess	ph . width		6016836	0					
ANR	6017015	Identifier	ph		6016836	0					
ANR	6017016	Identifier	width		6016836	1					
ANR	6017017	Argument	ph . height		6016836	3					
ANR	6017018	MemberAccess	ph . height		6016836	0					
ANR	6017019	Identifier	ph		6016836	0					
ANR	6017020	Identifier	height		6016836	1					
ANR	6017021	IfStatement	if ( f == NULL )		6016836	5					
ANR	6017022	Condition	f == NULL	402:10:9489:9497	6016836	0	True				
ANR	6017023	EqualityExpression	f == NULL		6016836	0		==			
ANR	6017024	Identifier	f		6016836	0					
ANR	6017025	Identifier	NULL		6016836	1					
ANR	6017026	CompoundStatement		33:8:840:840	6016836	1					
ANR	6017027	ExpressionStatement	"fn = find_param ( pl , ""OutputFile"" )"	404:10:9520:9554	6016836	0	True				
ANR	6017028	AssignmentExpression	"fn = find_param ( pl , ""OutputFile"" )"		6016836	0		=			
ANR	6017029	Identifier	fn		6016836	0					
ANR	6017030	CallExpression	"find_param ( pl , ""OutputFile"" )"		6016836	1					
ANR	6017031	Callee	find_param		6016836	0					
ANR	6017032	Identifier	find_param		6016836	0					
ANR	6017033	ArgumentList	pl		6016836	1					
ANR	6017034	Argument	pl		6016836	0					
ANR	6017035	Identifier	pl		6016836	0					
ANR	6017036	Argument	"""OutputFile"""		6016836	1					
ANR	6017037	PrimaryExpression	"""OutputFile"""		6016836	0					
ANR	6017038	IfStatement	if ( fn == NULL )		6016836	1					
ANR	6017039	Condition	fn == NULL	407:14:9606:9615	6016836	0	True				
ANR	6017040	EqualityExpression	fn == NULL		6016836	0		==			
ANR	6017041	Identifier	fn		6016836	0					
ANR	6017042	Identifier	NULL		6016836	1					
ANR	6017043	CompoundStatement		38:12:962:962	6016836	1					
ANR	6017044	ExpressionStatement	"fn = find_param ( pl , ""OutputFD"" )"	409:14:9646:9678	6016836	0	True				
ANR	6017045	AssignmentExpression	"fn = find_param ( pl , ""OutputFD"" )"		6016836	0		=			
ANR	6017046	Identifier	fn		6016836	0					
ANR	6017047	CallExpression	"find_param ( pl , ""OutputFD"" )"		6016836	1					
ANR	6017048	Callee	find_param		6016836	0					
ANR	6017049	Identifier	find_param		6016836	0					
ANR	6017050	ArgumentList	pl		6016836	1					
ANR	6017051	Argument	pl		6016836	0					
ANR	6017052	Identifier	pl		6016836	0					
ANR	6017053	Argument	"""OutputFD"""		6016836	1					
ANR	6017054	PrimaryExpression	"""OutputFD"""		6016836	0					
ANR	6017055	IfStatement	if ( fn != NULL )		6016836	1					
ANR	6017056	Condition	fn != NULL	410:18:9698:9707	6016836	0	True				
ANR	6017057	EqualityExpression	fn != NULL		6016836	0		!=			
ANR	6017058	Identifier	fn		6016836	0					
ANR	6017059	Identifier	NULL		6016836	1					
ANR	6017060	CompoundStatement		41:16:1058:1058	6016836	1					
ANR	6017061	ExpressionStatement	"f = fdopen ( atoi ( fn ) , ""wb"" )"	412:18:9746:9774	6016836	0	True				
ANR	6017062	AssignmentExpression	"f = fdopen ( atoi ( fn ) , ""wb"" )"		6016836	0		=			
ANR	6017063	Identifier	f		6016836	0					
ANR	6017064	CallExpression	"fdopen ( atoi ( fn ) , ""wb"" )"		6016836	1					
ANR	6017065	Callee	fdopen		6016836	0					
ANR	6017066	Identifier	fdopen		6016836	0					
ANR	6017067	ArgumentList	atoi ( fn )		6016836	1					
ANR	6017068	Argument	atoi ( fn )		6016836	0					
ANR	6017069	CallExpression	atoi ( fn )		6016836	0					
ANR	6017070	Callee	atoi		6016836	0					
ANR	6017071	Identifier	atoi		6016836	0					
ANR	6017072	ArgumentList	fn		6016836	1					
ANR	6017073	Argument	fn		6016836	0					
ANR	6017074	Identifier	fn		6016836	0					
ANR	6017075	Argument	"""wb"""		6016836	1					
ANR	6017076	PrimaryExpression	"""wb"""		6016836	0					
ANR	6017077	ElseStatement	else		6016836	0					
ANR	6017078	CompoundStatement		46:12:1167:1167	6016836	0					
ANR	6017079	ExpressionStatement	"f = fopen ( fn , ""wb"" )"	417:14:9851:9871	6016836	0	True				
ANR	6017080	AssignmentExpression	"f = fopen ( fn , ""wb"" )"		6016836	0		=			
ANR	6017081	Identifier	f		6016836	0					
ANR	6017082	CallExpression	"fopen ( fn , ""wb"" )"		6016836	1					
ANR	6017083	Callee	fopen		6016836	0					
ANR	6017084	Identifier	fopen		6016836	0					
ANR	6017085	ArgumentList	fn		6016836	1					
ANR	6017086	Argument	fn		6016836	0					
ANR	6017087	Identifier	fn		6016836	0					
ANR	6017088	Argument	"""wb"""		6016836	1					
ANR	6017089	PrimaryExpression	"""wb"""		6016836	0					
ANR	6017090	IfStatement	if ( f == NULL )		6016836	2					
ANR	6017091	Condition	f == NULL	419:14:9901:9909	6016836	0	True				
ANR	6017092	EqualityExpression	f == NULL		6016836	0		==			
ANR	6017093	Identifier	f		6016836	0					
ANR	6017094	Identifier	NULL		6016836	1					
ANR	6017095	CompoundStatement		50:12:1256:1256	6016836	1					
ANR	6017096	ExpressionStatement	"fprintf ( stderr , ""can't open output file %s\\n"" , fn )"	421:14:9940:9991	6016836	0	True				
ANR	6017097	CallExpression	"fprintf ( stderr , ""can't open output file %s\\n"" , fn )"		6016836	0					
ANR	6017098	Callee	fprintf		6016836	0					
ANR	6017099	Identifier	fprintf		6016836	0					
ANR	6017100	ArgumentList	stderr		6016836	1					
ANR	6017101	Argument	stderr		6016836	0					
ANR	6017102	Identifier	stderr		6016836	0					
ANR	6017103	Argument	"""can't open output file %s\\n"""		6016836	1					
ANR	6017104	PrimaryExpression	"""can't open output file %s\\n"""		6016836	0					
ANR	6017105	Argument	fn		6016836	2					
ANR	6017106	Identifier	fn		6016836	0					
ANR	6017107	ExpressionStatement	fclose ( stdin )	422:14:10007:10021	6016836	1	True				
ANR	6017108	CallExpression	fclose ( stdin )		6016836	0					
ANR	6017109	Callee	fclose		6016836	0					
ANR	6017110	Identifier	fclose		6016836	0					
ANR	6017111	ArgumentList	stdin		6016836	1					
ANR	6017112	Argument	stdin		6016836	0					
ANR	6017113	Identifier	stdin		6016836	0					
ANR	6017114	ExpressionStatement	fclose ( stdout )	423:14:10037:10052	6016836	2	True				
ANR	6017115	CallExpression	fclose ( stdout )		6016836	0					
ANR	6017116	Callee	fclose		6016836	0					
ANR	6017117	Identifier	fclose		6016836	0					
ANR	6017118	ArgumentList	stdout		6016836	1					
ANR	6017119	Argument	stdout		6016836	0					
ANR	6017120	Identifier	stdout		6016836	0					
ANR	6017121	BreakStatement	break ;	424:14:10068:10073	6016836	3	True				
ANR	6017122	IfStatement	if ( fn != NULL )		6016836	3					
ANR	6017123	Condition	fn != NULL	426:14:10103:10112	6016836	0	True				
ANR	6017124	EqualityExpression	fn != NULL		6016836	0		!=			
ANR	6017125	Identifier	fn		6016836	0					
ANR	6017126	Identifier	NULL		6016836	1					
ANR	6017127	ExpressionStatement	free ( fn )	427:12:10127:10136	6016836	1	True				
ANR	6017128	CallExpression	free ( fn )		6016836	0					
ANR	6017129	Callee	free		6016836	0					
ANR	6017130	Identifier	free		6016836	0					
ANR	6017131	ArgumentList	fn		6016836	1					
ANR	6017132	Argument	fn		6016836	0					
ANR	6017133	Identifier	fn		6016836	0					
ANR	6017134	ExpressionStatement	"fprintf ( f , ""%%!PS-Adobe-2.0\\n"" )"	430:6:10155:10187	6016836	6	True				
ANR	6017135	CallExpression	"fprintf ( f , ""%%!PS-Adobe-2.0\\n"" )"		6016836	0					
ANR	6017136	Callee	fprintf		6016836	0					
ANR	6017137	Identifier	fprintf		6016836	0					
ANR	6017138	ArgumentList	f		6016836	1					
ANR	6017139	Argument	f		6016836	0					
ANR	6017140	Identifier	f		6016836	0					
ANR	6017141	Argument	"""%%!PS-Adobe-2.0\\n"""		6016836	1					
ANR	6017142	PrimaryExpression	"""%%!PS-Adobe-2.0\\n"""		6016836	0					
ANR	6017143	ExpressionStatement	"example_compute_offset ( pl , & ph , & x0 , & y0 )"	432:6:10196:10238	6016836	7	True				
ANR	6017144	CallExpression	"example_compute_offset ( pl , & ph , & x0 , & y0 )"		6016836	0					
ANR	6017145	Callee	example_compute_offset		6016836	0					
ANR	6017146	Identifier	example_compute_offset		6016836	0					
ANR	6017147	ArgumentList	pl		6016836	1					
ANR	6017148	Argument	pl		6016836	0					
ANR	6017149	Identifier	pl		6016836	0					
ANR	6017150	Argument	& ph		6016836	1					
ANR	6017151	UnaryOperationExpression	& ph		6016836	0					
ANR	6017152	UnaryOperator	&		6016836	0					
ANR	6017153	Identifier	ph		6016836	1					
ANR	6017154	Argument	& x0		6016836	2					
ANR	6017155	UnaryOperationExpression	& x0		6016836	0					
ANR	6017156	UnaryOperator	&		6016836	0					
ANR	6017157	Identifier	x0		6016836	1					
ANR	6017158	Argument	& y0		6016836	3					
ANR	6017159	UnaryOperationExpression	& y0		6016836	0					
ANR	6017160	UnaryOperator	&		6016836	0					
ANR	6017161	Identifier	y0		6016836	1					
ANR	6017162	ExpressionStatement	xscale = 72.0 / ph . xres	434:6:10247:10270	6016836	8	True				
ANR	6017163	AssignmentExpression	xscale = 72.0 / ph . xres		6016836	0		=			
ANR	6017164	Identifier	xscale		6016836	0					
ANR	6017165	MultiplicativeExpression	72.0 / ph . xres		6016836	1		/			
ANR	6017166	PrimaryExpression	72.0		6016836	0					
ANR	6017167	MemberAccess	ph . xres		6016836	1					
ANR	6017168	Identifier	ph		6016836	0					
ANR	6017169	Identifier	xres		6016836	1					
ANR	6017170	ExpressionStatement	yscale = 72.0 / ph . yres	435:6:10278:10301	6016836	9	True				
ANR	6017171	AssignmentExpression	yscale = 72.0 / ph . yres		6016836	0		=			
ANR	6017172	Identifier	yscale		6016836	0					
ANR	6017173	MultiplicativeExpression	72.0 / ph . yres		6016836	1		/			
ANR	6017174	PrimaryExpression	72.0		6016836	0					
ANR	6017175	MemberAccess	ph . yres		6016836	1					
ANR	6017176	Identifier	ph		6016836	0					
ANR	6017177	Identifier	yres		6016836	1					
ANR	6017178	ExpressionStatement	"fprintf ( f , ""%%%%BoundingBox: %d %d %d %d\\n"" , ( int ) ( x0 * 72 ) , ( int ) ( y0 * 72 ) , ( int ) ( x0 * 72 + xscale * ph . width + 0.999 ) , ( int ) ( y0 * 72 + yscale * ph . height + 0.999 ) )"	437:6:10310:10521	6016836	10	True				
ANR	6017179	CallExpression	"fprintf ( f , ""%%%%BoundingBox: %d %d %d %d\\n"" , ( int ) ( x0 * 72 ) , ( int ) ( y0 * 72 ) , ( int ) ( x0 * 72 + xscale * ph . width + 0.999 ) , ( int ) ( y0 * 72 + yscale * ph . height + 0.999 ) )"		6016836	0					
ANR	6017180	Callee	fprintf		6016836	0					
ANR	6017181	Identifier	fprintf		6016836	0					
ANR	6017182	ArgumentList	f		6016836	1					
ANR	6017183	Argument	f		6016836	0					
ANR	6017184	Identifier	f		6016836	0					
ANR	6017185	Argument	"""%%%%BoundingBox: %d %d %d %d\\n"""		6016836	1					
ANR	6017186	PrimaryExpression	"""%%%%BoundingBox: %d %d %d %d\\n"""		6016836	0					
ANR	6017187	Argument	( int ) ( x0 * 72 )		6016836	2					
ANR	6017188	CastExpression	( int ) ( x0 * 72 )		6016836	0					
ANR	6017189	CastTarget	int		6016836	0					
ANR	6017190	MultiplicativeExpression	x0 * 72		6016836	1		*			
ANR	6017191	Identifier	x0		6016836	0					
ANR	6017192	PrimaryExpression	72		6016836	1					
ANR	6017193	Argument	( int ) ( y0 * 72 )		6016836	3					
ANR	6017194	CastExpression	( int ) ( y0 * 72 )		6016836	0					
ANR	6017195	CastTarget	int		6016836	0					
ANR	6017196	MultiplicativeExpression	y0 * 72		6016836	1		*			
ANR	6017197	Identifier	y0		6016836	0					
ANR	6017198	PrimaryExpression	72		6016836	1					
ANR	6017199	Argument	( int ) ( x0 * 72 + xscale * ph . width + 0.999 )		6016836	4					
ANR	6017200	CastExpression	( int ) ( x0 * 72 + xscale * ph . width + 0.999 )		6016836	0					
ANR	6017201	CastTarget	int		6016836	0					
ANR	6017202	AdditiveExpression	x0 * 72 + xscale * ph . width + 0.999		6016836	1		+			
ANR	6017203	MultiplicativeExpression	x0 * 72		6016836	0		*			
ANR	6017204	Identifier	x0		6016836	0					
ANR	6017205	PrimaryExpression	72		6016836	1					
ANR	6017206	AdditiveExpression	xscale * ph . width + 0.999		6016836	1		+			
ANR	6017207	MultiplicativeExpression	xscale * ph . width		6016836	0		*			
ANR	6017208	Identifier	xscale		6016836	0					
ANR	6017209	MemberAccess	ph . width		6016836	1					
ANR	6017210	Identifier	ph		6016836	0					
ANR	6017211	Identifier	width		6016836	1					
ANR	6017212	PrimaryExpression	0.999		6016836	1					
ANR	6017213	Argument	( int ) ( y0 * 72 + yscale * ph . height + 0.999 )		6016836	5					
ANR	6017214	CastExpression	( int ) ( y0 * 72 + yscale * ph . height + 0.999 )		6016836	0					
ANR	6017215	CastTarget	int		6016836	0					
ANR	6017216	AdditiveExpression	y0 * 72 + yscale * ph . height + 0.999		6016836	1		+			
ANR	6017217	MultiplicativeExpression	y0 * 72		6016836	0		*			
ANR	6017218	Identifier	y0		6016836	0					
ANR	6017219	PrimaryExpression	72		6016836	1					
ANR	6017220	AdditiveExpression	yscale * ph . height + 0.999		6016836	1		+			
ANR	6017221	MultiplicativeExpression	yscale * ph . height		6016836	0		*			
ANR	6017222	Identifier	yscale		6016836	0					
ANR	6017223	MemberAccess	ph . height		6016836	1					
ANR	6017224	Identifier	ph		6016836	0					
ANR	6017225	Identifier	height		6016836	1					
ANR	6017226	PrimaryExpression	0.999		6016836	1					
ANR	6017227	ExpressionStatement	"fprintf ( f , ""/rhex { currentfile exch readhexstring pop } bind def\\n"" )"	442:6:10530:10600	6016836	11	True				
ANR	6017228	CallExpression	"fprintf ( f , ""/rhex { currentfile exch readhexstring pop } bind def\\n"" )"		6016836	0					
ANR	6017229	Callee	fprintf		6016836	0					
ANR	6017230	Identifier	fprintf		6016836	0					
ANR	6017231	ArgumentList	f		6016836	1					
ANR	6017232	Argument	f		6016836	0					
ANR	6017233	Identifier	f		6016836	0					
ANR	6017234	Argument	"""/rhex { currentfile exch readhexstring pop } bind def\\n"""		6016836	1					
ANR	6017235	PrimaryExpression	"""/rhex { currentfile exch readhexstring pop } bind def\\n"""		6016836	0					
ANR	6017236	ExpressionStatement	"fprintf ( f , ""/picstr %d string def\\n"" , ph . width )"	443:6:10608:10656	6016836	12	True				
ANR	6017237	CallExpression	"fprintf ( f , ""/picstr %d string def\\n"" , ph . width )"		6016836	0					
ANR	6017238	Callee	fprintf		6016836	0					
ANR	6017239	Identifier	fprintf		6016836	0					
ANR	6017240	ArgumentList	f		6016836	1					
ANR	6017241	Argument	f		6016836	0					
ANR	6017242	Identifier	f		6016836	0					
ANR	6017243	Argument	"""/picstr %d string def\\n"""		6016836	1					
ANR	6017244	PrimaryExpression	"""/picstr %d string def\\n"""		6016836	0					
ANR	6017245	Argument	ph . width		6016836	2					
ANR	6017246	MemberAccess	ph . width		6016836	0					
ANR	6017247	Identifier	ph		6016836	0					
ANR	6017248	Identifier	width		6016836	1					
ANR	6017249	ForStatement	for ( curs = pl ; curs != NULL ; curs = curs -> next )		6016836	13					
ANR	6017250	ForInit	curs = pl ;	445:11:10670:10679	6016836	0	True				
ANR	6017251	AssignmentExpression	curs = pl		6016836	0		=			
ANR	6017252	Identifier	curs		6016836	0					
ANR	6017253	Identifier	pl		6016836	1					
ANR	6017254	Condition	curs != NULL	445:22:10681:10692	6016836	1	True				
ANR	6017255	EqualityExpression	curs != NULL		6016836	0		!=			
ANR	6017256	Identifier	curs		6016836	0					
ANR	6017257	Identifier	NULL		6016836	1					
ANR	6017258	AssignmentExpression	curs = curs -> next	445:36:10695:10711	6016836	2	True	=			
ANR	6017259	Identifier	curs		6016836	0					
ANR	6017260	PtrMemberAccess	curs -> next		6016836	1					
ANR	6017261	Identifier	curs		6016836	0					
ANR	6017262	Identifier	next		6016836	1					
ANR	6017263	CompoundStatement		76:8:2054:2054	6016836	3					
ANR	6017264	ExpressionStatement	"fprintf ( f , ""%% IJS parameter: %s = "" , curs -> key )"	447:10:10734:10783	6016836	0	True				
ANR	6017265	CallExpression	"fprintf ( f , ""%% IJS parameter: %s = "" , curs -> key )"		6016836	0					
ANR	6017266	Callee	fprintf		6016836	0					
ANR	6017267	Identifier	fprintf		6016836	0					
ANR	6017268	ArgumentList	f		6016836	1					
ANR	6017269	Argument	f		6016836	0					
ANR	6017270	Identifier	f		6016836	0					
ANR	6017271	Argument	"""%% IJS parameter: %s = """		6016836	1					
ANR	6017272	PrimaryExpression	"""%% IJS parameter: %s = """		6016836	0					
ANR	6017273	Argument	curs -> key		6016836	2					
ANR	6017274	PtrMemberAccess	curs -> key		6016836	0					
ANR	6017275	Identifier	curs		6016836	0					
ANR	6017276	Identifier	key		6016836	1					
ANR	6017277	ExpressionStatement	"fwrite ( curs -> value , 1 , curs -> value_size , f )"	448:10:10795:10839	6016836	1	True				
ANR	6017278	CallExpression	"fwrite ( curs -> value , 1 , curs -> value_size , f )"		6016836	0					
ANR	6017279	Callee	fwrite		6016836	0					
ANR	6017280	Identifier	fwrite		6016836	0					
ANR	6017281	ArgumentList	curs -> value		6016836	1					
ANR	6017282	Argument	curs -> value		6016836	0					
ANR	6017283	PtrMemberAccess	curs -> value		6016836	0					
ANR	6017284	Identifier	curs		6016836	0					
ANR	6017285	Identifier	value		6016836	1					
ANR	6017286	Argument	1		6016836	1					
ANR	6017287	PrimaryExpression	1		6016836	0					
ANR	6017288	Argument	curs -> value_size		6016836	2					
ANR	6017289	PtrMemberAccess	curs -> value_size		6016836	0					
ANR	6017290	Identifier	curs		6016836	0					
ANR	6017291	Identifier	value_size		6016836	1					
ANR	6017292	Argument	f		6016836	3					
ANR	6017293	Identifier	f		6016836	0					
ANR	6017294	ExpressionStatement	"fputs ( ""\\n"" , f )"	449:10:10851:10866	6016836	2	True				
ANR	6017295	CallExpression	"fputs ( ""\\n"" , f )"		6016836	0					
ANR	6017296	Callee	fputs		6016836	0					
ANR	6017297	Identifier	fputs		6016836	0					
ANR	6017298	ArgumentList	"""\\n"""		6016836	1					
ANR	6017299	Argument	"""\\n"""		6016836	0					
ANR	6017300	PrimaryExpression	"""\\n"""		6016836	0					
ANR	6017301	Argument	f		6016836	1					
ANR	6017302	Identifier	f		6016836	0					
ANR	6017303	Statement	fprintf	452:6:10885:10891	6016836	14	True				
ANR	6017304	Statement	(	452:14:10893:10893	6016836	15	True				
ANR	6017305	Statement	f	452:15:10894:10894	6016836	16	True				
ANR	6017306	Statement	","	452:16:10895:10895	6016836	17	True				
ANR	6017307	Statement	"""gsave\\n"""	453:15:10912:10920	6016836	18	True				
ANR	6017308	Statement	"""%f %f translate\\n"""	454:15:10937:10955	6016836	19	True				
ANR	6017309	Statement	"""%f %f scale\\n"""	455:15:10972:10986	6016836	20	True				
ANR	6017310	Statement	"""%d %d %d\\n"""	456:15:11003:11014	6016836	21	True				
ANR	6017311	Statement	"""[ %d 0 0 %d 0 %d ]\\n"""	457:15:11031:11052	6016836	22	True				
ANR	6017312	Statement	","	457:37:11053:11053	6016836	23	True				
ANR	6017313	Statement	x0	458:15:11070:11071	6016836	24	True				
ANR	6017314	Statement	*	458:18:11073:11073	6016836	25	True				
ANR	6017315	Statement	72	458:20:11075:11076	6016836	26	True				
ANR	6017316	Statement	","	458:22:11077:11077	6016836	27	True				
ANR	6017317	Statement	y0	458:24:11079:11080	6016836	28	True				
ANR	6017318	Statement	*	458:27:11082:11082	6016836	29	True				
ANR	6017319	Statement	72	458:29:11084:11085	6016836	30	True				
ANR	6017320	Statement	","	458:31:11086:11086	6016836	31	True				
ANR	6017321	Statement	xscale	459:15:11103:11108	6016836	32	True				
ANR	6017322	Statement	*	459:22:11110:11110	6016836	33	True				
ANR	6017323	Statement	ph	459:24:11112:11113	6016836	34	True				
ANR	6017324	Statement	.	459:26:11114:11114	6016836	35	True				
ANR	6017325	Statement	width	459:27:11115:11119	6016836	36	True				
ANR	6017326	Statement	","	459:32:11120:11120	6016836	37	True				
ANR	6017327	Statement	yscale	459:34:11122:11127	6016836	38	True				
ANR	6017328	Statement	*	459:41:11129:11129	6016836	39	True				
ANR	6017329	Statement	ph	459:43:11131:11132	6016836	40	True				
ANR	6017330	Statement	.	459:45:11133:11133	6016836	41	True				
ANR	6017331	Statement	height	459:46:11134:11139	6016836	42	True				
ANR	6017332	Statement	","	459:52:11140:11140	6016836	43	True				
ANR	6017333	Statement	ph	460:15:11157:11158	6016836	44	True				
ANR	6017334	Statement	.	460:17:11159:11159	6016836	45	True				
ANR	6017335	Statement	width	460:18:11160:11164	6016836	46	True				
ANR	6017336	Statement	","	460:23:11165:11165	6016836	47	True				
ANR	6017337	Statement	ph	460:25:11167:11168	6016836	48	True				
ANR	6017338	Statement	.	460:27:11169:11169	6016836	49	True				
ANR	6017339	Statement	height	460:28:11170:11175	6016836	50	True				
ANR	6017340	Statement	","	460:34:11176:11176	6016836	51	True				
ANR	6017341	Statement	ph	460:36:11178:11179	6016836	52	True				
ANR	6017342	Statement	.	460:38:11180:11180	6016836	53	True				
ANR	6017343	Statement	bps	460:39:11181:11183	6016836	54	True				
ANR	6017344	Statement	","	460:42:11184:11184	6016836	55	True				
ANR	6017345	Statement	ph	461:15:11201:11202	6016836	56	True				
ANR	6017346	Statement	.	461:17:11203:11203	6016836	57	True				
ANR	6017347	Statement	width	461:18:11204:11208	6016836	58	True				
ANR	6017348	Statement	","	461:23:11209:11209	6016836	59	True				
ANR	6017349	Statement	-	461:25:11211:11211	6016836	60	True				
ANR	6017350	Statement	ph	461:26:11212:11213	6016836	61	True				
ANR	6017351	Statement	.	461:28:11214:11214	6016836	62	True				
ANR	6017352	Statement	height	461:29:11215:11220	6016836	63	True				
ANR	6017353	Statement	","	461:35:11221:11221	6016836	64	True				
ANR	6017354	Statement	ph	461:37:11223:11224	6016836	65	True				
ANR	6017355	Statement	.	461:39:11225:11225	6016836	66	True				
ANR	6017356	Statement	height	461:40:11226:11231	6016836	67	True				
ANR	6017357	Statement	)	461:46:11232:11232	6016836	68	True				
ANR	6017358	ExpressionStatement		461:47:11233:11233	6016836	69	True				
ANR	6017359	IfStatement	if ( ph . n_chan == 1 )		6016836	70					
ANR	6017360	Condition	ph . n_chan == 1	462:10:11245:11258	6016836	0	True				
ANR	6017361	EqualityExpression	ph . n_chan == 1		6016836	0		==			
ANR	6017362	MemberAccess	ph . n_chan		6016836	0					
ANR	6017363	Identifier	ph		6016836	0					
ANR	6017364	Identifier	n_chan		6016836	1					
ANR	6017365	PrimaryExpression	1		6016836	1					
ANR	6017366	ExpressionStatement	"fprintf ( f , ""{ picstr rhex } image\\n"" )"	463:8:11269:11307	6016836	1	True				
ANR	6017367	CallExpression	"fprintf ( f , ""{ picstr rhex } image\\n"" )"		6016836	0					
ANR	6017368	Callee	fprintf		6016836	0					
ANR	6017369	Identifier	fprintf		6016836	0					
ANR	6017370	ArgumentList	f		6016836	1					
ANR	6017371	Argument	f		6016836	0					
ANR	6017372	Identifier	f		6016836	0					
ANR	6017373	Argument	"""{ picstr rhex } image\\n"""		6016836	1					
ANR	6017374	PrimaryExpression	"""{ picstr rhex } image\\n"""		6016836	0					
ANR	6017375	ElseStatement	else		6016836	0					
ANR	6017376	CompoundStatement		95:8:2660:2660	6016836	0					
ANR	6017377	Statement	fprintf	466:10:11340:11346	6016836	0	True				
ANR	6017378	Statement	(	466:18:11348:11348	6016836	1	True				
ANR	6017379	Statement	f	466:19:11349:11349	6016836	2	True				
ANR	6017380	Statement	","	466:20:11350:11350	6016836	3	True				
ANR	6017381	Statement	"""{ picstr rhex }\\n"""	466:22:11352:11370	6016836	4	True				
ANR	6017382	Statement	"""false %d colorimage\\n"""	467:19:11391:11413	6016836	5	True				
ANR	6017383	Statement	","	467:42:11414:11414	6016836	6	True				
ANR	6017384	Statement	ph	467:44:11416:11417	6016836	7	True				
ANR	6017385	Statement	.	467:46:11418:11418	6016836	8	True				
ANR	6017386	Statement	n_chan	467:47:11419:11424	6016836	9	True				
ANR	6017387	Statement	)	467:53:11425:11425	6016836	10	True				
ANR	6017388	ExpressionStatement		467:54:11426:11426	6016836	11	True				
ANR	6017389	ExpressionStatement	total_bytes = ( ( ph . n_chan * ph . bps * ph . width + 7 ) >> 3 ) * ph . height	469:6:11444:11512	6016836	71	True				
ANR	6017390	AssignmentExpression	total_bytes = ( ( ph . n_chan * ph . bps * ph . width + 7 ) >> 3 ) * ph . height		6016836	0		=			
ANR	6017391	Identifier	total_bytes		6016836	0					
ANR	6017392	MultiplicativeExpression	( ( ph . n_chan * ph . bps * ph . width + 7 ) >> 3 ) * ph . height		6016836	1		*			
ANR	6017393	ShiftExpression	( ph . n_chan * ph . bps * ph . width + 7 ) >> 3		6016836	0		>>			
ANR	6017394	AdditiveExpression	ph . n_chan * ph . bps * ph . width + 7		6016836	0		+			
ANR	6017395	MultiplicativeExpression	ph . n_chan * ph . bps * ph . width		6016836	0		*			
ANR	6017396	MemberAccess	ph . n_chan		6016836	0					
ANR	6017397	Identifier	ph		6016836	0					
ANR	6017398	Identifier	n_chan		6016836	1					
ANR	6017399	MultiplicativeExpression	ph . bps * ph . width		6016836	1		*			
ANR	6017400	MemberAccess	ph . bps		6016836	0					
ANR	6017401	Identifier	ph		6016836	0					
ANR	6017402	Identifier	bps		6016836	1					
ANR	6017403	MemberAccess	ph . width		6016836	1					
ANR	6017404	Identifier	ph		6016836	0					
ANR	6017405	Identifier	width		6016836	1					
ANR	6017406	PrimaryExpression	7		6016836	1					
ANR	6017407	PrimaryExpression	3		6016836	1					
ANR	6017408	MemberAccess	ph . height		6016836	1					
ANR	6017409	Identifier	ph		6016836	0					
ANR	6017410	Identifier	height		6016836	1					
ANR	6017411	ExpressionStatement	bytes_left = total_bytes	470:6:11520:11544	6016836	72	True				
ANR	6017412	AssignmentExpression	bytes_left = total_bytes		6016836	0		=			
ANR	6017413	Identifier	bytes_left		6016836	0					
ANR	6017414	Identifier	total_bytes		6016836	1					
ANR	6017415	WhileStatement	while ( bytes_left )		6016836	73					
ANR	6017416	Condition	bytes_left	471:13:11559:11568	6016836	0	True				
ANR	6017417	Identifier	bytes_left		6016836	0					
ANR	6017418	CompoundStatement		104:10:2959:2967	6016836	1					
ANR	6017419	IdentifierDeclStatement	int n_bytes = bytes_left ;	473:10:11591:11615	6016836	0	True				
ANR	6017420	IdentifierDecl	n_bytes = bytes_left		6016836	0					
ANR	6017421	IdentifierDeclType	int		6016836	0					
ANR	6017422	Identifier	n_bytes		6016836	1					
ANR	6017423	AssignmentExpression	n_bytes = bytes_left		6016836	2		=			
ANR	6017424	Identifier	bytes_left		6016836	0					
ANR	6017425	Identifier	bytes_left		6016836	1					
ANR	6017426	IdentifierDeclStatement	"int i , j ;"	474:10:11627:11635	6016836	1	True				
ANR	6017427	IdentifierDecl	i		6016836	0					
ANR	6017428	IdentifierDeclType	int		6016836	0					
ANR	6017429	Identifier	i		6016836	1					
ANR	6017430	IdentifierDecl	j		6016836	1					
ANR	6017431	IdentifierDeclType	int		6016836	0					
ANR	6017432	Identifier	j		6016836	1					
ANR	6017433	IfStatement	if ( n_bytes > sizeof ( buf ) )		6016836	2					
ANR	6017434	Condition	n_bytes > sizeof ( buf )	476:14:11652:11672	6016836	0	True				
ANR	6017435	RelationalExpression	n_bytes > sizeof ( buf )		6016836	0		>			
ANR	6017436	Identifier	n_bytes		6016836	0					
ANR	6017437	SizeofExpression	sizeof ( buf )		6016836	1					
ANR	6017438	Sizeof	sizeof		6016836	0					
ANR	6017439	SizeofOperand	buf		6016836	1					
ANR	6017440	ExpressionStatement	n_bytes = sizeof ( buf )	477:12:11687:11708	6016836	1	True				
ANR	6017441	AssignmentExpression	n_bytes = sizeof ( buf )		6016836	0		=			
ANR	6017442	Identifier	n_bytes		6016836	0					
ANR	6017443	SizeofExpression	sizeof ( buf )		6016836	1					
ANR	6017444	Sizeof	sizeof		6016836	0					
ANR	6017445	SizeofOperand	buf		6016836	1					
ANR	6017446	ExpressionStatement	"fprintf ( stderr , ""%d bytes left, reading %d\\n"" , bytes_left , n_bytes )"	479:10:11735:11803	6016836	3	True				
ANR	6017447	CallExpression	"fprintf ( stderr , ""%d bytes left, reading %d\\n"" , bytes_left , n_bytes )"		6016836	0					
ANR	6017448	Callee	fprintf		6016836	0					
ANR	6017449	Identifier	fprintf		6016836	0					
ANR	6017450	ArgumentList	stderr		6016836	1					
ANR	6017451	Argument	stderr		6016836	0					
ANR	6017452	Identifier	stderr		6016836	0					
ANR	6017453	Argument	"""%d bytes left, reading %d\\n"""		6016836	1					
ANR	6017454	PrimaryExpression	"""%d bytes left, reading %d\\n"""		6016836	0					
ANR	6017455	Argument	bytes_left		6016836	2					
ANR	6017456	Identifier	bytes_left		6016836	0					
ANR	6017457	Argument	n_bytes		6016836	3					
ANR	6017458	Identifier	n_bytes		6016836	0					
ANR	6017459	ExpressionStatement	"status = ijs_server_get_data ( ctx , buf , n_bytes )"	481:10:11822:11870	6016836	4	True				
ANR	6017460	AssignmentExpression	"status = ijs_server_get_data ( ctx , buf , n_bytes )"		6016836	0		=			
ANR	6017461	Identifier	status		6016836	0					
ANR	6017462	CallExpression	"ijs_server_get_data ( ctx , buf , n_bytes )"		6016836	1					
ANR	6017463	Callee	ijs_server_get_data		6016836	0					
ANR	6017464	Identifier	ijs_server_get_data		6016836	0					
ANR	6017465	ArgumentList	ctx		6016836	1					
ANR	6017466	Argument	ctx		6016836	0					
ANR	6017467	Identifier	ctx		6016836	0					
ANR	6017468	Argument	buf		6016836	1					
ANR	6017469	Identifier	buf		6016836	0					
ANR	6017470	Argument	n_bytes		6016836	2					
ANR	6017471	Identifier	n_bytes		6016836	0					
ANR	6017472	IfStatement	if ( status )		6016836	5					
ANR	6017473	Condition	status	482:14:11886:11891	6016836	0	True				
ANR	6017474	Identifier	status		6016836	0					
ANR	6017475	CompoundStatement		113:12:3238:3238	6016836	1					
ANR	6017476	ExpressionStatement	"fprintf ( stderr , ""page aborted!\\n"" )"	484:14:11922:11957	6016836	0	True				
ANR	6017477	CallExpression	"fprintf ( stderr , ""page aborted!\\n"" )"		6016836	0					
ANR	6017478	Callee	fprintf		6016836	0					
ANR	6017479	Identifier	fprintf		6016836	0					
ANR	6017480	ArgumentList	stderr		6016836	1					
ANR	6017481	Argument	stderr		6016836	0					
ANR	6017482	Identifier	stderr		6016836	0					
ANR	6017483	Argument	"""page aborted!\\n"""		6016836	1					
ANR	6017484	PrimaryExpression	"""page aborted!\\n"""		6016836	0					
ANR	6017485	BreakStatement	break ;	485:14:11973:11978	6016836	1	True				
ANR	6017486	ExpressionStatement	j = 0	487:10:12004:12009	6016836	6	True				
ANR	6017487	AssignmentExpression	j = 0		6016836	0		=			
ANR	6017488	Identifier	j		6016836	0					
ANR	6017489	PrimaryExpression	0		6016836	1					
ANR	6017490	ForStatement	for ( i = 0 ; i < n_bytes ; i ++ )		6016836	7					
ANR	6017491	ForInit	i = 0 ;	488:15:12026:12031	6016836	0	True				
ANR	6017492	AssignmentExpression	i = 0		6016836	0		=			
ANR	6017493	Identifier	i		6016836	0					
ANR	6017494	PrimaryExpression	0		6016836	1					
ANR	6017495	Condition	i < n_bytes	488:22:12033:12043	6016836	1	True				
ANR	6017496	RelationalExpression	i < n_bytes		6016836	0		<			
ANR	6017497	Identifier	i		6016836	0					
ANR	6017498	Identifier	n_bytes		6016836	1					
ANR	6017499	PostIncDecOperationExpression	i ++	488:35:12046:12048	6016836	2	True				
ANR	6017500	Identifier	i		6016836	0					
ANR	6017501	IncDec	++		6016836	1					
ANR	6017502	CompoundStatement		121:14:3466:3509	6016836	3					
ANR	6017503	IdentifierDeclStatement	"const char hex [ 16 ] = ""0123456789AbCdEf"" ;"	490:14:12079:12118	6016836	0	True				
ANR	6017504	IdentifierDecl	"hex [ 16 ] = ""0123456789AbCdEf"""		6016836	0					
ANR	6017505	IdentifierDeclType	const char [ 16 ]		6016836	0					
ANR	6017506	Identifier	hex		6016836	1					
ANR	6017507	PrimaryExpression	16		6016836	2					
ANR	6017508	AssignmentExpression	"hex [ 16 ] = ""0123456789AbCdEf"""		6016836	3		=			
ANR	6017509	Identifier	hex		6016836	0					
ANR	6017510	PrimaryExpression	"""0123456789AbCdEf"""		6016836	1					
ANR	6017511	IdentifierDeclStatement	unsigned char c = ( ( unsigned char * ) buf ) [ i ] ;	491:14:12134:12177	6016836	1	True				
ANR	6017512	IdentifierDecl	c = ( ( unsigned char * ) buf ) [ i ]		6016836	0					
ANR	6017513	IdentifierDeclType	unsigned char		6016836	0					
ANR	6017514	Identifier	c		6016836	1					
ANR	6017515	AssignmentExpression	c = ( ( unsigned char * ) buf ) [ i ]		6016836	2		=			
ANR	6017516	Identifier	c		6016836	0					
ANR	6017517	ArrayIndexing	( ( unsigned char * ) buf ) [ i ]		6016836	1					
ANR	6017518	CastExpression	( unsigned char * ) buf		6016836	0					
ANR	6017519	CastTarget	unsigned char *		6016836	0					
ANR	6017520	Identifier	buf		6016836	1					
ANR	6017521	Identifier	i		6016836	1					
ANR	6017522	ExpressionStatement	hexbuf [ j ++ ] = hex [ c >> 4 ]	493:14:12194:12219	6016836	2	True				
ANR	6017523	AssignmentExpression	hexbuf [ j ++ ] = hex [ c >> 4 ]		6016836	0		=			
ANR	6017524	ArrayIndexing	hexbuf [ j ++ ]		6016836	0					
ANR	6017525	Identifier	hexbuf		6016836	0					
ANR	6017526	PostIncDecOperationExpression	j ++		6016836	1					
ANR	6017527	Identifier	j		6016836	0					
ANR	6017528	IncDec	++		6016836	1					
ANR	6017529	ArrayIndexing	hex [ c >> 4 ]		6016836	1					
ANR	6017530	Identifier	hex		6016836	0					
ANR	6017531	ShiftExpression	c >> 4		6016836	1		>>			
ANR	6017532	Identifier	c		6016836	0					
ANR	6017533	PrimaryExpression	4		6016836	1					
ANR	6017534	ExpressionStatement	hexbuf [ j ++ ] = hex [ c & 0xf ]	494:14:12235:12261	6016836	3	True				
ANR	6017535	AssignmentExpression	hexbuf [ j ++ ] = hex [ c & 0xf ]		6016836	0		=			
ANR	6017536	ArrayIndexing	hexbuf [ j ++ ]		6016836	0					
ANR	6017537	Identifier	hexbuf		6016836	0					
ANR	6017538	PostIncDecOperationExpression	j ++		6016836	1					
ANR	6017539	Identifier	j		6016836	0					
ANR	6017540	IncDec	++		6016836	1					
ANR	6017541	ArrayIndexing	hex [ c & 0xf ]		6016836	1					
ANR	6017542	Identifier	hex		6016836	0					
ANR	6017543	BitAndExpression	c & 0xf		6016836	1		&			
ANR	6017544	Identifier	c		6016836	0					
ANR	6017545	PrimaryExpression	0xf		6016836	1					
ANR	6017546	IfStatement	if ( ( i & 31 ) == 31 )		6016836	4					
ANR	6017547	Condition	( i & 31 ) == 31	495:18:12281:12294	6016836	0	True				
ANR	6017548	EqualityExpression	( i & 31 ) == 31		6016836	0		==			
ANR	6017549	BitAndExpression	i & 31		6016836	0		&			
ANR	6017550	Identifier	i		6016836	0					
ANR	6017551	PrimaryExpression	31		6016836	1					
ANR	6017552	PrimaryExpression	31		6016836	1					
ANR	6017553	ExpressionStatement	hexbuf [ j ++ ] = '\\n'	496:16:12313:12331	6016836	1	True				
ANR	6017554	AssignmentExpression	hexbuf [ j ++ ] = '\\n'		6016836	0		=			
ANR	6017555	ArrayIndexing	hexbuf [ j ++ ]		6016836	0					
ANR	6017556	Identifier	hexbuf		6016836	0					
ANR	6017557	PostIncDecOperationExpression	j ++		6016836	1					
ANR	6017558	Identifier	j		6016836	0					
ANR	6017559	IncDec	++		6016836	1					
ANR	6017560	PrimaryExpression	'\\n'		6016836	1					
ANR	6017561	IfStatement	if ( ( n_bytes & 31 ) != 0 )		6016836	8					
ANR	6017562	Condition	( n_bytes & 31 ) != 0	498:14:12361:12379	6016836	0	True				
ANR	6017563	EqualityExpression	( n_bytes & 31 ) != 0		6016836	0		!=			
ANR	6017564	BitAndExpression	n_bytes & 31		6016836	0		&			
ANR	6017565	Identifier	n_bytes		6016836	0					
ANR	6017566	PrimaryExpression	31		6016836	1					
ANR	6017567	PrimaryExpression	0		6016836	1					
ANR	6017568	ExpressionStatement	hexbuf [ j ++ ] = '\\n'	499:12:12394:12412	6016836	1	True				
ANR	6017569	AssignmentExpression	hexbuf [ j ++ ] = '\\n'		6016836	0		=			
ANR	6017570	ArrayIndexing	hexbuf [ j ++ ]		6016836	0					
ANR	6017571	Identifier	hexbuf		6016836	0					
ANR	6017572	PostIncDecOperationExpression	j ++		6016836	1					
ANR	6017573	Identifier	j		6016836	0					
ANR	6017574	IncDec	++		6016836	1					
ANR	6017575	PrimaryExpression	'\\n'		6016836	1					
ANR	6017576	ExpressionStatement	"fwrite ( hexbuf , 1 , j , f )"	500:10:12424:12448	6016836	9	True				
ANR	6017577	CallExpression	"fwrite ( hexbuf , 1 , j , f )"		6016836	0					
ANR	6017578	Callee	fwrite		6016836	0					
ANR	6017579	Identifier	fwrite		6016836	0					
ANR	6017580	ArgumentList	hexbuf		6016836	1					
ANR	6017581	Argument	hexbuf		6016836	0					
ANR	6017582	Identifier	hexbuf		6016836	0					
ANR	6017583	Argument	1		6016836	1					
ANR	6017584	PrimaryExpression	1		6016836	0					
ANR	6017585	Argument	j		6016836	2					
ANR	6017586	Identifier	j		6016836	0					
ANR	6017587	Argument	f		6016836	3					
ANR	6017588	Identifier	f		6016836	0					
ANR	6017589	ExpressionStatement	bytes_left -= n_bytes	501:10:12460:12481	6016836	10	True				
ANR	6017590	AssignmentExpression	bytes_left -= n_bytes		6016836	0		-=			
ANR	6017591	Identifier	bytes_left		6016836	0					
ANR	6017592	Identifier	n_bytes		6016836	1					
ANR	6017593	ExpressionStatement	"fprintf ( f , ""grestore\\nshowpage\\n"" )"	503:6:12499:12534	6016836	74	True				
ANR	6017594	CallExpression	"fprintf ( f , ""grestore\\nshowpage\\n"" )"		6016836	0					
ANR	6017595	Callee	fprintf		6016836	0					
ANR	6017596	Identifier	fprintf		6016836	0					
ANR	6017597	ArgumentList	f		6016836	1					
ANR	6017598	Argument	f		6016836	0					
ANR	6017599	Identifier	f		6016836	0					
ANR	6017600	Argument	"""grestore\\nshowpage\\n"""		6016836	1					
ANR	6017601	PrimaryExpression	"""grestore\\nshowpage\\n"""		6016836	0					
ANR	6017602	Condition	status == 0	505:9:12551:12561	6016836	1	True				
ANR	6017603	EqualityExpression	status == 0		6016836	0		==			
ANR	6017604	Identifier	status		6016836	0					
ANR	6017605	PrimaryExpression	0		6016836	1					
ANR	6017606	IfStatement	if ( status > 0 )		6016836	18					
ANR	6017607	Condition	status > 0	507:6:12572:12581	6016836	0	True				
ANR	6017608	RelationalExpression	status > 0		6016836	0		>			
ANR	6017609	Identifier	status		6016836	0					
ANR	6017610	PrimaryExpression	0		6016836	1					
ANR	6017611	ExpressionStatement	status = 0	507:18:12584:12594	6016836	1	True				
ANR	6017612	AssignmentExpression	status = 0		6016836	0		=			
ANR	6017613	Identifier	status		6016836	0					
ANR	6017614	PrimaryExpression	0		6016836	1					
ANR	6017615	IfStatement	if ( f )		6016836	19					
ANR	6017616	Condition	f	509:6:12621:12621	6016836	0	True				
ANR	6017617	Identifier	f		6016836	0					
ANR	6017618	ExpressionStatement	fclose ( f )	510:4:12628:12638	6016836	1	True				
ANR	6017619	CallExpression	fclose ( f )		6016836	0					
ANR	6017620	Callee	fclose		6016836	0					
ANR	6017621	Identifier	fclose		6016836	0					
ANR	6017622	ArgumentList	f		6016836	1					
ANR	6017623	Argument	f		6016836	0					
ANR	6017624	Identifier	f		6016836	0					
ANR	6017625	ExpressionStatement	ijs_server_done ( ctx )	511:2:12642:12663	6016836	20	True				
ANR	6017626	CallExpression	ijs_server_done ( ctx )		6016836	0					
ANR	6017627	Callee	ijs_server_done		6016836	0					
ANR	6017628	Identifier	ijs_server_done		6016836	0					
ANR	6017629	ArgumentList	ctx		6016836	1					
ANR	6017630	Argument	ctx		6016836	0					
ANR	6017631	Identifier	ctx		6016836	0					
ANR	6017632	ExpressionStatement	free_param_list ( pl )	513:2:12668:12688	6016836	21	True				
ANR	6017633	CallExpression	free_param_list ( pl )		6016836	0					
ANR	6017634	Callee	free_param_list		6016836	0					
ANR	6017635	Identifier	free_param_list		6016836	0					
ANR	6017636	ArgumentList	pl		6016836	1					
ANR	6017637	Argument	pl		6016836	0					
ANR	6017638	Identifier	pl		6016836	0					
ANR	6017639	ExpressionStatement	"fprintf ( stderr , ""server exiting with status %d\\n"" , status )"	516:2:12708:12767	6016836	22	True				
ANR	6017640	CallExpression	"fprintf ( stderr , ""server exiting with status %d\\n"" , status )"		6016836	0					
ANR	6017641	Callee	fprintf		6016836	0					
ANR	6017642	Identifier	fprintf		6016836	0					
ANR	6017643	ArgumentList	stderr		6016836	1					
ANR	6017644	Argument	stderr		6016836	0					
ANR	6017645	Identifier	stderr		6016836	0					
ANR	6017646	Argument	"""server exiting with status %d\\n"""		6016836	1					
ANR	6017647	PrimaryExpression	"""server exiting with status %d\\n"""		6016836	0					
ANR	6017648	Argument	status		6016836	2					
ANR	6017649	Identifier	status		6016836	0					
ANR	6017650	ReturnStatement	return status ;	518:2:12778:12791	6016836	23	True				
ANR	6017651	Identifier	status		6016836	0					
ANR	6017652	ReturnType	int		6016836	1					
ANR	6017653	Identifier	main		6016836	2					
ANR	6017654	ParameterList	"int argc , char * * argv"		6016836	3					
ANR	6017655	Parameter	int argc	370:6:8644:8651	6016836	0	True				
ANR	6017656	ParameterType	int		6016836	0					
ANR	6017657	Identifier	argc		6016836	1					
ANR	6017658	Parameter	char * * argv	370:16:8654:8664	6016836	1	True				
ANR	6017659	ParameterType	char * *		6016836	0					
ANR	6017660	Identifier	argv		6016836	1					
ANR	6017661	CFGEntryNode	ENTRY		6016836		True				
ANR	6017662	CFGExitNode	EXIT		6016836		True				
ANR	6017663	Symbol	& y0		6016836						
ANR	6017664	Symbol	stdin		6016836						
ANR	6017665	Symbol	stdout		6016836						
ANR	6017666	Symbol	ijs_server_get_data		6016836						
ANR	6017667	Symbol	example_list_cb		6016836						
ANR	6017668	Symbol	curs -> value_size		6016836						
ANR	6017669	Symbol	yscale		6016836						
ANR	6017670	Symbol	ph . n_chan		6016836						
ANR	6017671	Symbol	total_bytes		6016836						
ANR	6017672	Symbol	xscale		6016836						
ANR	6017673	Symbol	hex		6016836						
ANR	6017674	Symbol	curs		6016836						
ANR	6017675	Symbol	curs -> next		6016836						
ANR	6017676	Symbol	example_enum_cb		6016836						
ANR	6017677	Symbol	* buf		6016836						
ANR	6017678	Symbol	NULL		6016836						
ANR	6017679	Symbol	& ph		6016836						
ANR	6017680	Symbol	bytes_left		6016836						
ANR	6017681	Symbol	ctx		6016836						
ANR	6017682	Symbol	& pl		6016836						
ANR	6017683	Symbol	stderr		6016836						
ANR	6017684	Symbol	ph . xres		6016836						
ANR	6017685	Symbol	example_set_cb		6016836						
ANR	6017686	Symbol	example_get_cb		6016836						
ANR	6017687	Symbol	x0		6016836						
ANR	6017688	Symbol	status		6016836						
ANR	6017689	Symbol	hexbuf		6016836						
ANR	6017690	Symbol	fn		6016836						
ANR	6017691	Symbol	fdopen		6016836						
ANR	6017692	Symbol	argv		6016836						
ANR	6017693	Symbol	ph . yres		6016836						
ANR	6017694	Symbol	curs -> key		6016836						
ANR	6017695	Symbol	curs -> value		6016836						
ANR	6017696	Symbol	* hexbuf		6016836						
ANR	6017697	Symbol	y0		6016836						
ANR	6017698	Symbol	ijs_server_get_page_header		6016836						
ANR	6017699	Symbol	ijs_server_init		6016836						
ANR	6017700	Symbol	argc		6016836						
ANR	6017701	Symbol	ph . width		6016836						
ANR	6017702	Symbol	atoi		6016836						
ANR	6017703	Symbol	fopen		6016836						
ANR	6017704	Symbol	& x0		6016836						
ANR	6017705	Symbol	c		6016836						
ANR	6017706	Symbol	example_status_cb		6016836						
ANR	6017707	Symbol	f		6016836						
ANR	6017708	Symbol	ph . height		6016836						
ANR	6017709	Symbol	i		6016836						
ANR	6017710	Symbol	j		6016836						
ANR	6017711	Symbol	* c		6016836						
ANR	6017712	Symbol	buf		6016836						
ANR	6017713	Symbol	* i		6016836						
ANR	6017714	Symbol	* curs		6016836						
ANR	6017715	Symbol	ph . bps		6016836						
ANR	6017716	Symbol	ph		6016836						
ANR	6017717	Symbol	* hex		6016836						
ANR	6017718	Symbol	pl		6016836						
ANR	6017719	Symbol	n_bytes		6016836						
ANR	6017720	Symbol	find_param		6016836						
