command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3430840	File	data/converged/CVE-2018-16863_ghostpdl/freetype_src_cff_cffdrivr.c								
ANR	3430841	Function	cff_get_kerning	109:2:5969:6409							
ANR	3430842	FunctionDef	"cff_get_kerning (FT_Face ttface , FT_UInt left_glyph , FT_UInt right_glyph , FT_Vector * kerning)"		3430841	0					
ANR	3430843	CompoundStatement		113:2:6159:6409	3430841	0					
ANR	3430844	IdentifierDeclStatement	TT_Face face = ( TT_Face ) ttface ;	114:4:6165:6201	3430841	0	True				
ANR	3430845	IdentifierDecl	face = ( TT_Face ) ttface		3430841	0					
ANR	3430846	IdentifierDeclType	TT_Face		3430841	0					
ANR	3430847	Identifier	face		3430841	1					
ANR	3430848	AssignmentExpression	face = ( TT_Face ) ttface		3430841	2		=			
ANR	3430849	Identifier	face		3430841	0					
ANR	3430850	CastExpression	( TT_Face ) ttface		3430841	1					
ANR	3430851	CastTarget	TT_Face		3430841	0					
ANR	3430852	Identifier	ttface		3430841	1					
ANR	3430853	IdentifierDeclStatement	SFNT_Service sfnt = ( SFNT_Service ) face -> sfnt ;	115:4:6207:6252	3430841	1	True				
ANR	3430854	IdentifierDecl	sfnt = ( SFNT_Service ) face -> sfnt		3430841	0					
ANR	3430855	IdentifierDeclType	SFNT_Service		3430841	0					
ANR	3430856	Identifier	sfnt		3430841	1					
ANR	3430857	AssignmentExpression	sfnt = ( SFNT_Service ) face -> sfnt		3430841	2		=			
ANR	3430858	Identifier	sfnt		3430841	0					
ANR	3430859	CastExpression	( SFNT_Service ) face -> sfnt		3430841	1					
ANR	3430860	CastTarget	SFNT_Service		3430841	0					
ANR	3430861	PtrMemberAccess	face -> sfnt		3430841	1					
ANR	3430862	Identifier	face		3430841	0					
ANR	3430863	Identifier	sfnt		3430841	1					
ANR	3430864	ExpressionStatement	kerning -> x = 0	118:4:6260:6274	3430841	2	True				
ANR	3430865	AssignmentExpression	kerning -> x = 0		3430841	0		=			
ANR	3430866	PtrMemberAccess	kerning -> x		3430841	0					
ANR	3430867	Identifier	kerning		3430841	0					
ANR	3430868	Identifier	x		3430841	1					
ANR	3430869	PrimaryExpression	0		3430841	1					
ANR	3430870	ExpressionStatement	kerning -> y = 0	119:4:6280:6294	3430841	3	True				
ANR	3430871	AssignmentExpression	kerning -> y = 0		3430841	0		=			
ANR	3430872	PtrMemberAccess	kerning -> y		3430841	0					
ANR	3430873	Identifier	kerning		3430841	0					
ANR	3430874	Identifier	y		3430841	1					
ANR	3430875	PrimaryExpression	0		3430841	1					
ANR	3430876	IfStatement	if ( sfnt )		3430841	4					
ANR	3430877	Condition	sfnt	121:9:6306:6309	3430841	0	True				
ANR	3430878	Identifier	sfnt		3430841	0					
ANR	3430879	ExpressionStatement	"kerning -> x = sfnt -> get_kerning ( face , left_glyph , right_glyph )"	122:6:6319:6382	3430841	1	True				
ANR	3430880	AssignmentExpression	"kerning -> x = sfnt -> get_kerning ( face , left_glyph , right_glyph )"		3430841	0		=			
ANR	3430881	PtrMemberAccess	kerning -> x		3430841	0					
ANR	3430882	Identifier	kerning		3430841	0					
ANR	3430883	Identifier	x		3430841	1					
ANR	3430884	CallExpression	"sfnt -> get_kerning ( face , left_glyph , right_glyph )"		3430841	1					
ANR	3430885	Callee	sfnt -> get_kerning		3430841	0					
ANR	3430886	PtrMemberAccess	sfnt -> get_kerning		3430841	0					
ANR	3430887	Identifier	sfnt		3430841	0					
ANR	3430888	Identifier	get_kerning		3430841	1					
ANR	3430889	ArgumentList	face		3430841	1					
ANR	3430890	Argument	face		3430841	0					
ANR	3430891	Identifier	face		3430841	0					
ANR	3430892	Argument	left_glyph		3430841	1					
ANR	3430893	Identifier	left_glyph		3430841	0					
ANR	3430894	Argument	right_glyph		3430841	2					
ANR	3430895	Identifier	right_glyph		3430841	0					
ANR	3430896	ReturnStatement	return FT_Err_Ok ;	124:4:6389:6405	3430841	5	True				
ANR	3430897	Identifier	FT_Err_Ok		3430841	0					
ANR	3430898	Identifier	cff_get_kerning		3430841	1					
ANR	3430899	ParameterList	"FT_Face ttface , FT_UInt left_glyph , FT_UInt right_glyph , FT_Vector * kerning"		3430841	2					
ANR	3430900	Parameter	FT_Face ttface	109:19:5986:6003	3430841	0	True				
ANR	3430901	ParameterType	FT_Face		3430841	0					
ANR	3430902	Identifier	ttface		3430841	1					
ANR	3430903	Parameter	FT_UInt left_glyph	110:19:6048:6069	3430841	1	True				
ANR	3430904	ParameterType	FT_UInt		3430841	0					
ANR	3430905	Identifier	left_glyph		3430841	1					
ANR	3430906	Parameter	FT_UInt right_glyph	111:19:6091:6113	3430841	2	True				
ANR	3430907	ParameterType	FT_UInt		3430841	0					
ANR	3430908	Identifier	right_glyph		3430841	1					
ANR	3430909	Parameter	FT_Vector * kerning	112:19:6135:6153	3430841	3	True				
ANR	3430910	ParameterType	FT_Vector *		3430841	0					
ANR	3430911	Identifier	kerning		3430841	1					
ANR	3430912	CFGEntryNode	ENTRY		3430841		True				
ANR	3430913	CFGExitNode	EXIT		3430841		True				
ANR	3430914	Symbol	kerning		3430841						
ANR	3430915	Symbol	FT_Err_Ok		3430841						
ANR	3430916	Symbol	kerning -> y		3430841						
ANR	3430917	Symbol	kerning -> x		3430841						
ANR	3430918	Symbol	* sfnt		3430841						
ANR	3430919	Symbol	sfnt		3430841						
ANR	3430920	Symbol	sfnt -> get_kerning		3430841						
ANR	3430921	Symbol	* face		3430841						
ANR	3430922	Symbol	right_glyph		3430841						
ANR	3430923	Symbol	face		3430841						
ANR	3430924	Symbol	left_glyph		3430841						
ANR	3430925	Symbol	* kerning		3430841						
ANR	3430926	Symbol	ttface		3430841						
ANR	3430927	Symbol	face -> sfnt		3430841						
ANR	3430928	Function	cff_glyph_load	155:2:8473:9604							
ANR	3430929	FunctionDef	"cff_glyph_load (FT_GlyphSlot cffslot , FT_Size cffsize , FT_UInt glyph_index , FT_Int32 load_flags)"		3430928	0					
ANR	3430930	CompoundStatement		159:2:8695:9604	3430928	0					
ANR	3430931	IdentifierDeclStatement	FT_Error error ;	160:4:8701:8721	3430928	0	True				
ANR	3430932	IdentifierDecl	error		3430928	0					
ANR	3430933	IdentifierDeclType	FT_Error		3430928	0					
ANR	3430934	Identifier	error		3430928	1					
ANR	3430935	IdentifierDeclStatement	CFF_GlyphSlot slot = ( CFF_GlyphSlot ) cffslot ;	161:4:8727:8771	3430928	1	True				
ANR	3430936	IdentifierDecl	slot = ( CFF_GlyphSlot ) cffslot		3430928	0					
ANR	3430937	IdentifierDeclType	CFF_GlyphSlot		3430928	0					
ANR	3430938	Identifier	slot		3430928	1					
ANR	3430939	AssignmentExpression	slot = ( CFF_GlyphSlot ) cffslot		3430928	2		=			
ANR	3430940	Identifier	slot		3430928	0					
ANR	3430941	CastExpression	( CFF_GlyphSlot ) cffslot		3430928	1					
ANR	3430942	CastTarget	CFF_GlyphSlot		3430928	0					
ANR	3430943	Identifier	cffslot		3430928	1					
ANR	3430944	IdentifierDeclStatement	CFF_Size size = ( CFF_Size ) cffsize ;	162:4:8777:8816	3430928	2	True				
ANR	3430945	IdentifierDecl	size = ( CFF_Size ) cffsize		3430928	0					
ANR	3430946	IdentifierDeclType	CFF_Size		3430928	0					
ANR	3430947	Identifier	size		3430928	1					
ANR	3430948	AssignmentExpression	size = ( CFF_Size ) cffsize		3430928	2		=			
ANR	3430949	Identifier	size		3430928	0					
ANR	3430950	CastExpression	( CFF_Size ) cffsize		3430928	1					
ANR	3430951	CastTarget	CFF_Size		3430928	0					
ANR	3430952	Identifier	cffsize		3430928	1					
ANR	3430953	IfStatement	if ( ! slot )		3430928	3					
ANR	3430954	Condition	! slot	165:9:8829:8833	3430928	0	True				
ANR	3430955	UnaryOperationExpression	! slot		3430928	0					
ANR	3430956	UnaryOperator	!		3430928	0					
ANR	3430957	Identifier	slot		3430928	1					
ANR	3430958	ReturnStatement	return FT_THROW ( Invalid_Slot_Handle ) ;	166:6:8843:8881	3430928	1	True				
ANR	3430959	CallExpression	FT_THROW ( Invalid_Slot_Handle )		3430928	0					
ANR	3430960	Callee	FT_THROW		3430928	0					
ANR	3430961	Identifier	FT_THROW		3430928	0					
ANR	3430962	ArgumentList	Invalid_Slot_Handle		3430928	1					
ANR	3430963	Argument	Invalid_Slot_Handle		3430928	0					
ANR	3430964	Identifier	Invalid_Slot_Handle		3430928	0					
ANR	3430965	ExpressionStatement	"FT_TRACE1 ( ( ""cff_glyph_load: glyph index %d\\n"" , glyph_index ) )"	168:4:8888:8950	3430928	4	True				
ANR	3430966	CallExpression	"FT_TRACE1 ( ( ""cff_glyph_load: glyph index %d\\n"" , glyph_index ) )"		3430928	0					
ANR	3430967	Callee	FT_TRACE1		3430928	0					
ANR	3430968	Identifier	FT_TRACE1		3430928	0					
ANR	3430969	ArgumentList	"""cff_glyph_load: glyph index %d\\n"" , glyph_index"		3430928	1					
ANR	3430970	Argument	"""cff_glyph_load: glyph index %d\\n"" , glyph_index"		3430928	0					
ANR	3430971	Expression	"""cff_glyph_load: glyph index %d\\n"" , glyph_index"		3430928	0					
ANR	3430972	PrimaryExpression	"""cff_glyph_load: glyph index %d\\n"""		3430928	0					
ANR	3430973	Identifier	glyph_index		3430928	1					
ANR	3430974	IfStatement	if ( ! size )		3430928	5					
ANR	3430975	Condition	! size	171:9:9021:9025	3430928	0	True				
ANR	3430976	UnaryOperationExpression	! size		3430928	0					
ANR	3430977	UnaryOperator	!		3430928	0					
ANR	3430978	Identifier	size		3430928	1					
ANR	3430979	ExpressionStatement	load_flags |= FT_LOAD_NO_SCALE | FT_LOAD_NO_HINTING	172:6:9035:9086	3430928	1	True				
ANR	3430980	AssignmentExpression	load_flags |= FT_LOAD_NO_SCALE | FT_LOAD_NO_HINTING		3430928	0		|=			
ANR	3430981	Identifier	load_flags		3430928	0					
ANR	3430982	InclusiveOrExpression	FT_LOAD_NO_SCALE | FT_LOAD_NO_HINTING		3430928	1		|			
ANR	3430983	Identifier	FT_LOAD_NO_SCALE		3430928	0					
ANR	3430984	Identifier	FT_LOAD_NO_HINTING		3430928	1					
ANR	3430985	IfStatement	if ( load_flags & FT_LOAD_NO_SCALE )		3430928	6					
ANR	3430986	Condition	load_flags & FT_LOAD_NO_SCALE	175:9:9143:9171	3430928	0	True				
ANR	3430987	BitAndExpression	load_flags & FT_LOAD_NO_SCALE		3430928	0		&			
ANR	3430988	Identifier	load_flags		3430928	0					
ANR	3430989	Identifier	FT_LOAD_NO_SCALE		3430928	1					
ANR	3430990	ExpressionStatement	size = NULL	176:6:9181:9192	3430928	1	True				
ANR	3430991	AssignmentExpression	size = NULL		3430928	0		=			
ANR	3430992	Identifier	size		3430928	0					
ANR	3430993	Identifier	NULL		3430928	1					
ANR	3430994	IfStatement	if ( size )		3430928	7					
ANR	3430995	Condition	size	178:9:9204:9207	3430928	0	True				
ANR	3430996	Identifier	size		3430928	0					
ANR	3430997	CompoundStatement		21:4:519:519	3430928	1					
ANR	3430998	IfStatement	if ( cffsize -> face != cffslot -> face )		3430928	0					
ANR	3430999	Condition	cffsize -> face != cffslot -> face	181:11:9284:9313	3430928	0	True				
ANR	3431000	EqualityExpression	cffsize -> face != cffslot -> face		3430928	0		!=			
ANR	3431001	PtrMemberAccess	cffsize -> face		3430928	0					
ANR	3431002	Identifier	cffsize		3430928	0					
ANR	3431003	Identifier	face		3430928	1					
ANR	3431004	PtrMemberAccess	cffslot -> face		3430928	1					
ANR	3431005	Identifier	cffslot		3430928	0					
ANR	3431006	Identifier	face		3430928	1					
ANR	3431007	ReturnStatement	return FT_THROW ( Invalid_Face_Handle ) ;	182:8:9325:9363	3430928	1	True				
ANR	3431008	CallExpression	FT_THROW ( Invalid_Face_Handle )		3430928	0					
ANR	3431009	Callee	FT_THROW		3430928	0					
ANR	3431010	Identifier	FT_THROW		3430928	0					
ANR	3431011	ArgumentList	Invalid_Face_Handle		3430928	1					
ANR	3431012	Argument	Invalid_Face_Handle		3430928	0					
ANR	3431013	Identifier	Invalid_Face_Handle		3430928	0					
ANR	3431014	ExpressionStatement	"error = cff_slot_load ( slot , size , glyph_index , load_flags )"	186:4:9426:9486	3430928	8	True				
ANR	3431015	AssignmentExpression	"error = cff_slot_load ( slot , size , glyph_index , load_flags )"		3430928	0		=			
ANR	3431016	Identifier	error		3430928	0					
ANR	3431017	CallExpression	"cff_slot_load ( slot , size , glyph_index , load_flags )"		3430928	1					
ANR	3431018	Callee	cff_slot_load		3430928	0					
ANR	3431019	Identifier	cff_slot_load		3430928	0					
ANR	3431020	ArgumentList	slot		3430928	1					
ANR	3431021	Argument	slot		3430928	0					
ANR	3431022	Identifier	slot		3430928	0					
ANR	3431023	Argument	size		3430928	1					
ANR	3431024	Identifier	size		3430928	0					
ANR	3431025	Argument	glyph_index		3430928	2					
ANR	3431026	Identifier	glyph_index		3430928	0					
ANR	3431027	Argument	load_flags		3430928	3					
ANR	3431028	Identifier	load_flags		3430928	0					
ANR	3431029	ReturnStatement	return error ;	191:4:9588:9600	3430928	9	True				
ANR	3431030	Identifier	error		3430928	0					
ANR	3431031	Identifier	cff_glyph_load		3430928	1					
ANR	3431032	ParameterList	"FT_GlyphSlot cffslot , FT_Size cffsize , FT_UInt glyph_index , FT_Int32 load_flags"		3430928	2					
ANR	3431033	Parameter	FT_GlyphSlot cffslot	155:18:8489:8509	3430928	0	True				
ANR	3431034	ParameterType	FT_GlyphSlot		3430928	0					
ANR	3431035	Identifier	cffslot		3430928	1					
ANR	3431036	Parameter	FT_Size cffsize	156:18:8555:8575	3430928	1	True				
ANR	3431037	ParameterType	FT_Size		3430928	0					
ANR	3431038	Identifier	cffsize		3430928	1					
ANR	3431039	Parameter	FT_UInt glyph_index	157:18:8621:8645	3430928	2	True				
ANR	3431040	ParameterType	FT_UInt		3430928	0					
ANR	3431041	Identifier	glyph_index		3430928	1					
ANR	3431042	Parameter	FT_Int32 load_flags	158:18:8666:8689	3430928	3	True				
ANR	3431043	ParameterType	FT_Int32		3430928	0					
ANR	3431044	Identifier	load_flags		3430928	1					
ANR	3431045	CFGEntryNode	ENTRY		3430928		True				
ANR	3431046	CFGExitNode	EXIT		3430928		True				
ANR	3431047	Symbol	cffslot -> face		3430928						
ANR	3431048	Symbol	FT_LOAD_NO_SCALE		3430928						
ANR	3431049	Symbol	* cffslot		3430928						
ANR	3431050	Symbol	NULL		3430928						
ANR	3431051	Symbol	glyph_index		3430928						
ANR	3431052	Symbol	* cffsize		3430928						
ANR	3431053	Symbol	Invalid_Slot_Handle		3430928						
ANR	3431054	Symbol	cff_slot_load		3430928						
ANR	3431055	Symbol	cffslot		3430928						
ANR	3431056	Symbol	slot		3430928						
ANR	3431057	Symbol	error		3430928						
ANR	3431058	Symbol	cffsize		3430928						
ANR	3431059	Symbol	FT_THROW		3430928						
ANR	3431060	Symbol	size		3430928						
ANR	3431061	Symbol	cffsize -> face		3430928						
ANR	3431062	Symbol	FT_LOAD_NO_HINTING		3430928						
ANR	3431063	Symbol	Invalid_Face_Handle		3430928						
ANR	3431064	Symbol	load_flags		3430928						
ANR	3431065	Function	cff_get_advances	196:2:9640:13125							
ANR	3431066	FunctionDef	"cff_get_advances (FT_Face face , FT_UInt start , FT_UInt count , FT_Int32 flags , FT_Fixed * advances)"		3431065	0					
ANR	3431067	CompoundStatement		201:2:9833:13125	3431065	0					
ANR	3431068	IdentifierDeclStatement	FT_UInt nn ;	202:4:9839:9855	3431065	0	True				
ANR	3431069	IdentifierDecl	nn		3431065	0					
ANR	3431070	IdentifierDeclType	FT_UInt		3431065	0					
ANR	3431071	Identifier	nn		3431065	1					
ANR	3431072	IdentifierDeclStatement	FT_Error error = FT_Err_Ok ;	203:4:9861:9892	3431065	1	True				
ANR	3431073	IdentifierDecl	error = FT_Err_Ok		3431065	0					
ANR	3431074	IdentifierDeclType	FT_Error		3431065	0					
ANR	3431075	Identifier	error		3431065	1					
ANR	3431076	AssignmentExpression	error = FT_Err_Ok		3431065	2		=			
ANR	3431077	Identifier	FT_Err_Ok		3431065	0					
ANR	3431078	Identifier	FT_Err_Ok		3431065	1					
ANR	3431079	IdentifierDeclStatement	FT_GlyphSlot slot = face -> glyph ;	204:4:9898:9931	3431065	2	True				
ANR	3431080	IdentifierDecl	slot = face -> glyph		3431065	0					
ANR	3431081	IdentifierDeclType	FT_GlyphSlot		3431065	0					
ANR	3431082	Identifier	slot		3431065	1					
ANR	3431083	AssignmentExpression	slot = face -> glyph		3431065	2		=			
ANR	3431084	Identifier	slot		3431065	0					
ANR	3431085	PtrMemberAccess	face -> glyph		3431065	1					
ANR	3431086	Identifier	face		3431065	0					
ANR	3431087	Identifier	glyph		3431065	1					
ANR	3431088	IfStatement	if ( FT_IS_SFNT ( face ) )		3431065	3					
ANR	3431089	Condition	FT_IS_SFNT ( face )	207:9:9944:9961	3431065	0	True				
ANR	3431090	CallExpression	FT_IS_SFNT ( face )		3431065	0					
ANR	3431091	Callee	FT_IS_SFNT		3431065	0					
ANR	3431092	Identifier	FT_IS_SFNT		3431065	0					
ANR	3431093	ArgumentList	face		3431065	1					
ANR	3431094	Argument	face		3431065	0					
ANR	3431095	Identifier	face		3431065	0					
ANR	3431096	CompoundStatement		14:6:409:424	3431065	1					
ANR	3431097	IdentifierDeclStatement	TT_Face ttface = ( TT_Face ) face ;	213:6:10203:10235	3431065	0	True				
ANR	3431098	IdentifierDecl	ttface = ( TT_Face ) face		3431065	0					
ANR	3431099	IdentifierDeclType	TT_Face		3431065	0					
ANR	3431100	Identifier	ttface		3431065	1					
ANR	3431101	AssignmentExpression	ttface = ( TT_Face ) face		3431065	2		=			
ANR	3431102	Identifier	ttface		3431065	0					
ANR	3431103	CastExpression	( TT_Face ) face		3431065	1					
ANR	3431104	CastTarget	TT_Face		3431065	0					
ANR	3431105	Identifier	face		3431065	1					
ANR	3431106	IdentifierDeclStatement	FT_Short dummy ;	214:6:10243:10258	3431065	1	True				
ANR	3431107	IdentifierDecl	dummy		3431065	0					
ANR	3431108	IdentifierDeclType	FT_Short		3431065	0					
ANR	3431109	Identifier	dummy		3431065	1					
ANR	3431110	IfStatement	if ( flags & FT_LOAD_VERTICAL_LAYOUT )		3431065	2					
ANR	3431111	Condition	flags & FT_LOAD_VERTICAL_LAYOUT	217:11:10273:10303	3431065	0	True				
ANR	3431112	BitAndExpression	flags & FT_LOAD_VERTICAL_LAYOUT		3431065	0		&			
ANR	3431113	Identifier	flags		3431065	0					
ANR	3431114	Identifier	FT_LOAD_VERTICAL_LAYOUT		3431065	1					
ANR	3431115	CompoundStatement		18:6:479:479	3431065	1					
ANR	3431116	IfStatement	if ( ( FT_IS_NAMED_INSTANCE ( face ) || FT_IS_VARIATION ( face ) ) && ! ( ttface -> variation_support & TT_FACE_FLAG_VAR_VADVANCE ) )		3431065	0					
ANR	3431117	Condition	( FT_IS_NAMED_INSTANCE ( face ) || FT_IS_VARIATION ( face ) ) && ! ( ttface -> variation_support & TT_FACE_FLAG_VAR_VADVANCE )	221:13:10439:10572	3431065	0	True				
ANR	3431118	AndExpression	( FT_IS_NAMED_INSTANCE ( face ) || FT_IS_VARIATION ( face ) ) && ! ( ttface -> variation_support & TT_FACE_FLAG_VAR_VADVANCE )		3431065	0		&&			
ANR	3431119	OrExpression	FT_IS_NAMED_INSTANCE ( face ) || FT_IS_VARIATION ( face )		3431065	0		||			
ANR	3431120	CallExpression	FT_IS_NAMED_INSTANCE ( face )		3431065	0					
ANR	3431121	Callee	FT_IS_NAMED_INSTANCE		3431065	0					
ANR	3431122	Identifier	FT_IS_NAMED_INSTANCE		3431065	0					
ANR	3431123	ArgumentList	face		3431065	1					
ANR	3431124	Argument	face		3431065	0					
ANR	3431125	Identifier	face		3431065	0					
ANR	3431126	CallExpression	FT_IS_VARIATION ( face )		3431065	1					
ANR	3431127	Callee	FT_IS_VARIATION		3431065	0					
ANR	3431128	Identifier	FT_IS_VARIATION		3431065	0					
ANR	3431129	ArgumentList	face		3431065	1					
ANR	3431130	Argument	face		3431065	0					
ANR	3431131	Identifier	face		3431065	0					
ANR	3431132	UnaryOperationExpression	! ( ttface -> variation_support & TT_FACE_FLAG_VAR_VADVANCE )		3431065	1					
ANR	3431133	UnaryOperator	!		3431065	0					
ANR	3431134	BitAndExpression	ttface -> variation_support & TT_FACE_FLAG_VAR_VADVANCE		3431065	1		&			
ANR	3431135	PtrMemberAccess	ttface -> variation_support		3431065	0					
ANR	3431136	Identifier	ttface		3431065	0					
ANR	3431137	Identifier	variation_support		3431065	1					
ANR	3431138	Identifier	TT_FACE_FLAG_VAR_VADVANCE		3431065	1					
ANR	3431139	ReturnStatement	return FT_THROW ( Unimplemented_Feature ) ;	223:10:10587:10627	3431065	1	True				
ANR	3431140	CallExpression	FT_THROW ( Unimplemented_Feature )		3431065	0					
ANR	3431141	Callee	FT_THROW		3431065	0					
ANR	3431142	Identifier	FT_THROW		3431065	0					
ANR	3431143	ArgumentList	Unimplemented_Feature		3431065	1					
ANR	3431144	Argument	Unimplemented_Feature		3431065	0					
ANR	3431145	Identifier	Unimplemented_Feature		3431065	0					
ANR	3431146	IfStatement	if ( ! ttface -> vertical_info )		3431065	1					
ANR	3431147	Condition	! ttface -> vertical_info	230:13:10934:10955	3431065	0	True				
ANR	3431148	UnaryOperationExpression	! ttface -> vertical_info		3431065	0					
ANR	3431149	UnaryOperator	!		3431065	0					
ANR	3431150	PtrMemberAccess	ttface -> vertical_info		3431065	1					
ANR	3431151	Identifier	ttface		3431065	0					
ANR	3431152	Identifier	vertical_info		3431065	1					
ANR	3431153	GotoStatement	goto Missing_Table ;	231:10:10969:10987	3431065	1	True				
ANR	3431154	Identifier	Missing_Table		3431065	0					
ANR	3431155	ForStatement	for ( nn = 0 ; nn < count ; nn ++ )		3431065	2					
ANR	3431156	ForInit	nn = 0 ;	233:14:11004:11010	3431065	0	True				
ANR	3431157	AssignmentExpression	nn = 0		3431065	0		=			
ANR	3431158	Identifier	nn		3431065	0					
ANR	3431159	PrimaryExpression	0		3431065	1					
ANR	3431160	Condition	nn < count	233:22:11012:11021	3431065	1	True				
ANR	3431161	RelationalExpression	nn < count		3431065	0		<			
ANR	3431162	Identifier	nn		3431065	0					
ANR	3431163	Identifier	count		3431065	1					
ANR	3431164	PostIncDecOperationExpression	nn ++	233:34:11024:11027	3431065	2	True				
ANR	3431165	Identifier	nn		3431065	0					
ANR	3431166	IncDec	++		3431065	1					
ANR	3431167	CompoundStatement		35:10:1217:1230	3431065	3					
ANR	3431168	IdentifierDeclStatement	FT_UShort ah ;	235:10:11051:11064	3431065	0	True				
ANR	3431169	IdentifierDecl	ah		3431065	0					
ANR	3431170	IdentifierDeclType	FT_UShort		3431065	0					
ANR	3431171	Identifier	ah		3431065	1					
ANR	3431172	ExpressionStatement	"( ( SFNT_Service ) ttface -> sfnt ) -> get_metrics ( ttface , 1 , start + nn , & dummy , & ah )"	238:10:11078:11379	3431065	1	True				
ANR	3431173	CallExpression	"( ( SFNT_Service ) ttface -> sfnt ) -> get_metrics ( ttface , 1 , start + nn , & dummy , & ah )"		3431065	0					
ANR	3431174	Callee	( ( SFNT_Service ) ttface -> sfnt ) -> get_metrics		3431065	0					
ANR	3431175	PtrMemberAccess	( ( SFNT_Service ) ttface -> sfnt ) -> get_metrics		3431065	0					
ANR	3431176	CastExpression	( SFNT_Service ) ttface -> sfnt		3431065	0					
ANR	3431177	CastTarget	SFNT_Service		3431065	0					
ANR	3431178	PtrMemberAccess	ttface -> sfnt		3431065	1					
ANR	3431179	Identifier	ttface		3431065	0					
ANR	3431180	Identifier	sfnt		3431065	1					
ANR	3431181	Identifier	get_metrics		3431065	1					
ANR	3431182	ArgumentList	ttface		3431065	1					
ANR	3431183	Argument	ttface		3431065	0					
ANR	3431184	Identifier	ttface		3431065	0					
ANR	3431185	Argument	1		3431065	1					
ANR	3431186	PrimaryExpression	1		3431065	0					
ANR	3431187	Argument	start + nn		3431065	2					
ANR	3431188	AdditiveExpression	start + nn		3431065	0		+			
ANR	3431189	Identifier	start		3431065	0					
ANR	3431190	Identifier	nn		3431065	1					
ANR	3431191	Argument	& dummy		3431065	3					
ANR	3431192	UnaryOperationExpression	& dummy		3431065	0					
ANR	3431193	UnaryOperator	&		3431065	0					
ANR	3431194	Identifier	dummy		3431065	1					
ANR	3431195	Argument	& ah		3431065	4					
ANR	3431196	UnaryOperationExpression	& ah		3431065	0					
ANR	3431197	UnaryOperator	&		3431065	0					
ANR	3431198	Identifier	ah		3431065	1					
ANR	3431199	ExpressionStatement	"FT_TRACE5 ( ( ""  idx %d: advance height %d font unit%s\\n"" , start + nn , ah , ah == 1 ? """" : ""s"" ) )"	244:10:11392:11552	3431065	2	True				
ANR	3431200	CallExpression	"FT_TRACE5 ( ( ""  idx %d: advance height %d font unit%s\\n"" , start + nn , ah , ah == 1 ? """" : ""s"" ) )"		3431065	0					
ANR	3431201	Callee	FT_TRACE5		3431065	0					
ANR	3431202	Identifier	FT_TRACE5		3431065	0					
ANR	3431203	ArgumentList	"""  idx %d: advance height %d font unit%s\\n"" , start + nn , ah , ah == 1 ? """" : ""s"""		3431065	1					
ANR	3431204	Argument	"""  idx %d: advance height %d font unit%s\\n"" , start + nn , ah , ah == 1 ? """" : ""s"""		3431065	0					
ANR	3431205	Expression	"""  idx %d: advance height %d font unit%s\\n"" , start + nn , ah , ah == 1 ? """" : ""s"""		3431065	0					
ANR	3431206	PrimaryExpression	"""  idx %d: advance height %d font unit%s\\n"""		3431065	0					
ANR	3431207	Expression	"start + nn , ah , ah == 1 ? """" : ""s"""		3431065	1					
ANR	3431208	AdditiveExpression	start + nn		3431065	0		+			
ANR	3431209	Identifier	start		3431065	0					
ANR	3431210	Identifier	nn		3431065	1					
ANR	3431211	Expression	"ah , ah == 1 ? """" : ""s"""		3431065	1					
ANR	3431212	Identifier	ah		3431065	0					
ANR	3431213	ConditionalExpression	"ah == 1 ? """" : ""s"""		3431065	1					
ANR	3431214	Condition	ah == 1		3431065	0					
ANR	3431215	EqualityExpression	ah == 1		3431065	0		==			
ANR	3431216	Identifier	ah		3431065	0					
ANR	3431217	PrimaryExpression	1		3431065	1					
ANR	3431218	PrimaryExpression	""""""		3431065	1					
ANR	3431219	PrimaryExpression	"""s"""		3431065	2					
ANR	3431220	ExpressionStatement	advances [ nn ] = ah	248:10:11564:11581	3431065	3	True				
ANR	3431221	AssignmentExpression	advances [ nn ] = ah		3431065	0		=			
ANR	3431222	ArrayIndexing	advances [ nn ]		3431065	0					
ANR	3431223	Identifier	advances		3431065	0					
ANR	3431224	Identifier	nn		3431065	1					
ANR	3431225	Identifier	ah		3431065	1					
ANR	3431226	ElseStatement	else		3431065	0					
ANR	3431227	CompoundStatement		52:6:1784:1784	3431065	0					
ANR	3431228	IfStatement	if ( ( FT_IS_NAMED_INSTANCE ( face ) || FT_IS_VARIATION ( face ) ) && ! ( ttface -> variation_support & TT_FACE_FLAG_VAR_HADVANCE ) )		3431065	0					
ANR	3431229	Condition	( FT_IS_NAMED_INSTANCE ( face ) || FT_IS_VARIATION ( face ) ) && ! ( ttface -> variation_support & TT_FACE_FLAG_VAR_HADVANCE )	255:13:11744:11877	3431065	0	True				
ANR	3431230	AndExpression	( FT_IS_NAMED_INSTANCE ( face ) || FT_IS_VARIATION ( face ) ) && ! ( ttface -> variation_support & TT_FACE_FLAG_VAR_HADVANCE )		3431065	0		&&			
ANR	3431231	OrExpression	FT_IS_NAMED_INSTANCE ( face ) || FT_IS_VARIATION ( face )		3431065	0		||			
ANR	3431232	CallExpression	FT_IS_NAMED_INSTANCE ( face )		3431065	0					
ANR	3431233	Callee	FT_IS_NAMED_INSTANCE		3431065	0					
ANR	3431234	Identifier	FT_IS_NAMED_INSTANCE		3431065	0					
ANR	3431235	ArgumentList	face		3431065	1					
ANR	3431236	Argument	face		3431065	0					
ANR	3431237	Identifier	face		3431065	0					
ANR	3431238	CallExpression	FT_IS_VARIATION ( face )		3431065	1					
ANR	3431239	Callee	FT_IS_VARIATION		3431065	0					
ANR	3431240	Identifier	FT_IS_VARIATION		3431065	0					
ANR	3431241	ArgumentList	face		3431065	1					
ANR	3431242	Argument	face		3431065	0					
ANR	3431243	Identifier	face		3431065	0					
ANR	3431244	UnaryOperationExpression	! ( ttface -> variation_support & TT_FACE_FLAG_VAR_HADVANCE )		3431065	1					
ANR	3431245	UnaryOperator	!		3431065	0					
ANR	3431246	BitAndExpression	ttface -> variation_support & TT_FACE_FLAG_VAR_HADVANCE		3431065	1		&			
ANR	3431247	PtrMemberAccess	ttface -> variation_support		3431065	0					
ANR	3431248	Identifier	ttface		3431065	0					
ANR	3431249	Identifier	variation_support		3431065	1					
ANR	3431250	Identifier	TT_FACE_FLAG_VAR_HADVANCE		3431065	1					
ANR	3431251	ReturnStatement	return FT_THROW ( Unimplemented_Feature ) ;	257:10:11892:11932	3431065	1	True				
ANR	3431252	CallExpression	FT_THROW ( Unimplemented_Feature )		3431065	0					
ANR	3431253	Callee	FT_THROW		3431065	0					
ANR	3431254	Identifier	FT_THROW		3431065	0					
ANR	3431255	ArgumentList	Unimplemented_Feature		3431065	1					
ANR	3431256	Argument	Unimplemented_Feature		3431065	0					
ANR	3431257	Identifier	Unimplemented_Feature		3431065	0					
ANR	3431258	IfStatement	if ( ! ttface -> horizontal . number_Of_HMetrics )		3431065	1					
ANR	3431259	Condition	! ttface -> horizontal . number_Of_HMetrics	261:13:12025:12062	3431065	0	True				
ANR	3431260	UnaryOperationExpression	! ttface -> horizontal . number_Of_HMetrics		3431065	0					
ANR	3431261	UnaryOperator	!		3431065	0					
ANR	3431262	MemberAccess	ttface -> horizontal . number_Of_HMetrics		3431065	1					
ANR	3431263	PtrMemberAccess	ttface -> horizontal		3431065	0					
ANR	3431264	Identifier	ttface		3431065	0					
ANR	3431265	Identifier	horizontal		3431065	1					
ANR	3431266	Identifier	number_Of_HMetrics		3431065	1					
ANR	3431267	GotoStatement	goto Missing_Table ;	262:10:12076:12094	3431065	1	True				
ANR	3431268	Identifier	Missing_Table		3431065	0					
ANR	3431269	ForStatement	for ( nn = 0 ; nn < count ; nn ++ )		3431065	2					
ANR	3431270	ForInit	nn = 0 ;	264:14:12111:12117	3431065	0	True				
ANR	3431271	AssignmentExpression	nn = 0		3431065	0		=			
ANR	3431272	Identifier	nn		3431065	0					
ANR	3431273	PrimaryExpression	0		3431065	1					
ANR	3431274	Condition	nn < count	264:22:12119:12128	3431065	1	True				
ANR	3431275	RelationalExpression	nn < count		3431065	0		<			
ANR	3431276	Identifier	nn		3431065	0					
ANR	3431277	Identifier	count		3431065	1					
ANR	3431278	PostIncDecOperationExpression	nn ++	264:34:12131:12134	3431065	2	True				
ANR	3431279	Identifier	nn		3431065	0					
ANR	3431280	IncDec	++		3431065	1					
ANR	3431281	CompoundStatement		66:10:2324:2337	3431065	3					
ANR	3431282	IdentifierDeclStatement	FT_UShort aw ;	266:10:12158:12171	3431065	0	True				
ANR	3431283	IdentifierDecl	aw		3431065	0					
ANR	3431284	IdentifierDeclType	FT_UShort		3431065	0					
ANR	3431285	Identifier	aw		3431065	1					
ANR	3431286	ExpressionStatement	"( ( SFNT_Service ) ttface -> sfnt ) -> get_metrics ( ttface , 0 , start + nn , & dummy , & aw )"	269:10:12185:12486	3431065	1	True				
ANR	3431287	CallExpression	"( ( SFNT_Service ) ttface -> sfnt ) -> get_metrics ( ttface , 0 , start + nn , & dummy , & aw )"		3431065	0					
ANR	3431288	Callee	( ( SFNT_Service ) ttface -> sfnt ) -> get_metrics		3431065	0					
ANR	3431289	PtrMemberAccess	( ( SFNT_Service ) ttface -> sfnt ) -> get_metrics		3431065	0					
ANR	3431290	CastExpression	( SFNT_Service ) ttface -> sfnt		3431065	0					
ANR	3431291	CastTarget	SFNT_Service		3431065	0					
ANR	3431292	PtrMemberAccess	ttface -> sfnt		3431065	1					
ANR	3431293	Identifier	ttface		3431065	0					
ANR	3431294	Identifier	sfnt		3431065	1					
ANR	3431295	Identifier	get_metrics		3431065	1					
ANR	3431296	ArgumentList	ttface		3431065	1					
ANR	3431297	Argument	ttface		3431065	0					
ANR	3431298	Identifier	ttface		3431065	0					
ANR	3431299	Argument	0		3431065	1					
ANR	3431300	PrimaryExpression	0		3431065	0					
ANR	3431301	Argument	start + nn		3431065	2					
ANR	3431302	AdditiveExpression	start + nn		3431065	0		+			
ANR	3431303	Identifier	start		3431065	0					
ANR	3431304	Identifier	nn		3431065	1					
ANR	3431305	Argument	& dummy		3431065	3					
ANR	3431306	UnaryOperationExpression	& dummy		3431065	0					
ANR	3431307	UnaryOperator	&		3431065	0					
ANR	3431308	Identifier	dummy		3431065	1					
ANR	3431309	Argument	& aw		3431065	4					
ANR	3431310	UnaryOperationExpression	& aw		3431065	0					
ANR	3431311	UnaryOperator	&		3431065	0					
ANR	3431312	Identifier	aw		3431065	1					
ANR	3431313	ExpressionStatement	"FT_TRACE5 ( ( ""  idx %d: advance width %d font unit%s\\n"" , start + nn , aw , aw == 1 ? """" : ""s"" ) )"	275:10:12499:12658	3431065	2	True				
ANR	3431314	CallExpression	"FT_TRACE5 ( ( ""  idx %d: advance width %d font unit%s\\n"" , start + nn , aw , aw == 1 ? """" : ""s"" ) )"		3431065	0					
ANR	3431315	Callee	FT_TRACE5		3431065	0					
ANR	3431316	Identifier	FT_TRACE5		3431065	0					
ANR	3431317	ArgumentList	"""  idx %d: advance width %d font unit%s\\n"" , start + nn , aw , aw == 1 ? """" : ""s"""		3431065	1					
ANR	3431318	Argument	"""  idx %d: advance width %d font unit%s\\n"" , start + nn , aw , aw == 1 ? """" : ""s"""		3431065	0					
ANR	3431319	Expression	"""  idx %d: advance width %d font unit%s\\n"" , start + nn , aw , aw == 1 ? """" : ""s"""		3431065	0					
ANR	3431320	PrimaryExpression	"""  idx %d: advance width %d font unit%s\\n"""		3431065	0					
ANR	3431321	Expression	"start + nn , aw , aw == 1 ? """" : ""s"""		3431065	1					
ANR	3431322	AdditiveExpression	start + nn		3431065	0		+			
ANR	3431323	Identifier	start		3431065	0					
ANR	3431324	Identifier	nn		3431065	1					
ANR	3431325	Expression	"aw , aw == 1 ? """" : ""s"""		3431065	1					
ANR	3431326	Identifier	aw		3431065	0					
ANR	3431327	ConditionalExpression	"aw == 1 ? """" : ""s"""		3431065	1					
ANR	3431328	Condition	aw == 1		3431065	0					
ANR	3431329	EqualityExpression	aw == 1		3431065	0		==			
ANR	3431330	Identifier	aw		3431065	0					
ANR	3431331	PrimaryExpression	1		3431065	1					
ANR	3431332	PrimaryExpression	""""""		3431065	1					
ANR	3431333	PrimaryExpression	"""s"""		3431065	2					
ANR	3431334	ExpressionStatement	advances [ nn ] = aw	279:10:12670:12687	3431065	3	True				
ANR	3431335	AssignmentExpression	advances [ nn ] = aw		3431065	0		=			
ANR	3431336	ArrayIndexing	advances [ nn ]		3431065	0					
ANR	3431337	Identifier	advances		3431065	0					
ANR	3431338	Identifier	nn		3431065	1					
ANR	3431339	Identifier	aw		3431065	1					
ANR	3431340	ReturnStatement	return error ;	283:6:12714:12726	3431065	3	True				
ANR	3431341	Identifier	error		3431065	0					
ANR	3431342	Label	Missing_Table :	286:2:12737:12750	3431065	4	True				
ANR	3431343	Identifier	Missing_Table		3431065	0					
ANR	3431344	ExpressionStatement	flags |= ( FT_UInt32 ) FT_LOAD_ADVANCE_ONLY	287:4:12756:12796	3431065	5	True				
ANR	3431345	AssignmentExpression	flags |= ( FT_UInt32 ) FT_LOAD_ADVANCE_ONLY		3431065	0		|=			
ANR	3431346	Identifier	flags		3431065	0					
ANR	3431347	CastExpression	( FT_UInt32 ) FT_LOAD_ADVANCE_ONLY		3431065	1					
ANR	3431348	CastTarget	FT_UInt32		3431065	0					
ANR	3431349	Identifier	FT_LOAD_ADVANCE_ONLY		3431065	1					
ANR	3431350	ForStatement	for ( nn = 0 ; nn < count ; nn ++ )		3431065	6					
ANR	3431351	ForInit	nn = 0 ;	289:10:12809:12815	3431065	0	True				
ANR	3431352	AssignmentExpression	nn = 0		3431065	0		=			
ANR	3431353	Identifier	nn		3431065	0					
ANR	3431354	PrimaryExpression	0		3431065	1					
ANR	3431355	Condition	nn < count	289:18:12817:12826	3431065	1	True				
ANR	3431356	RelationalExpression	nn < count		3431065	0		<			
ANR	3431357	Identifier	nn		3431065	0					
ANR	3431358	Identifier	count		3431065	1					
ANR	3431359	PostIncDecOperationExpression	nn ++	289:30:12829:12832	3431065	2	True				
ANR	3431360	Identifier	nn		3431065	0					
ANR	3431361	IncDec	++		3431065	1					
ANR	3431362	CompoundStatement		90:4:3006:3006	3431065	3					
ANR	3431363	ExpressionStatement	"error = cff_glyph_load ( slot , face -> size , start + nn , flags )"	291:6:12848:12909	3431065	0	True				
ANR	3431364	AssignmentExpression	"error = cff_glyph_load ( slot , face -> size , start + nn , flags )"		3431065	0		=			
ANR	3431365	Identifier	error		3431065	0					
ANR	3431366	CallExpression	"cff_glyph_load ( slot , face -> size , start + nn , flags )"		3431065	1					
ANR	3431367	Callee	cff_glyph_load		3431065	0					
ANR	3431368	Identifier	cff_glyph_load		3431065	0					
ANR	3431369	ArgumentList	slot		3431065	1					
ANR	3431370	Argument	slot		3431065	0					
ANR	3431371	Identifier	slot		3431065	0					
ANR	3431372	Argument	face -> size		3431065	1					
ANR	3431373	PtrMemberAccess	face -> size		3431065	0					
ANR	3431374	Identifier	face		3431065	0					
ANR	3431375	Identifier	size		3431065	1					
ANR	3431376	Argument	start + nn		3431065	2					
ANR	3431377	AdditiveExpression	start + nn		3431065	0		+			
ANR	3431378	Identifier	start		3431065	0					
ANR	3431379	Identifier	nn		3431065	1					
ANR	3431380	Argument	flags		3431065	3					
ANR	3431381	Identifier	flags		3431065	0					
ANR	3431382	IfStatement	if ( error )		3431065	1					
ANR	3431383	Condition	error	292:11:12922:12926	3431065	0	True				
ANR	3431384	Identifier	error		3431065	0					
ANR	3431385	BreakStatement	break ;	293:8:12938:12943	3431065	1	True				
ANR	3431386	ExpressionStatement	advances [ nn ] = ( flags & FT_LOAD_VERTICAL_LAYOUT ) ? slot -> linearVertAdvance : slot -> linearHoriAdvance	295:6:12952:13096	3431065	2	True				
ANR	3431387	AssignmentExpression	advances [ nn ] = ( flags & FT_LOAD_VERTICAL_LAYOUT ) ? slot -> linearVertAdvance : slot -> linearHoriAdvance		3431065	0		=			
ANR	3431388	ArrayIndexing	advances [ nn ]		3431065	0					
ANR	3431389	Identifier	advances		3431065	0					
ANR	3431390	Identifier	nn		3431065	1					
ANR	3431391	ConditionalExpression	( flags & FT_LOAD_VERTICAL_LAYOUT ) ? slot -> linearVertAdvance : slot -> linearHoriAdvance		3431065	1					
ANR	3431392	Condition	flags & FT_LOAD_VERTICAL_LAYOUT		3431065	0					
ANR	3431393	BitAndExpression	flags & FT_LOAD_VERTICAL_LAYOUT		3431065	0		&			
ANR	3431394	Identifier	flags		3431065	0					
ANR	3431395	Identifier	FT_LOAD_VERTICAL_LAYOUT		3431065	1					
ANR	3431396	PtrMemberAccess	slot -> linearVertAdvance		3431065	1					
ANR	3431397	Identifier	slot		3431065	0					
ANR	3431398	Identifier	linearVertAdvance		3431065	1					
ANR	3431399	PtrMemberAccess	slot -> linearHoriAdvance		3431065	2					
ANR	3431400	Identifier	slot		3431065	0					
ANR	3431401	Identifier	linearHoriAdvance		3431065	1					
ANR	3431402	ReturnStatement	return error ;	300:4:13109:13121	3431065	7	True				
ANR	3431403	Identifier	error		3431065	0					
ANR	3431404	Identifier	cff_get_advances		3431065	1					
ANR	3431405	ParameterList	"FT_Face face , FT_UInt start , FT_UInt count , FT_Int32 flags , FT_Fixed * advances"		3431065	2					
ANR	3431406	Parameter	FT_Face face	196:20:9658:9672	3431065	0	True				
ANR	3431407	ParameterType	FT_Face		3431065	0					
ANR	3431408	Identifier	face		3431065	1					
ANR	3431409	Parameter	FT_UInt start	197:20:9695:9710	3431065	1	True				
ANR	3431410	ParameterType	FT_UInt		3431065	0					
ANR	3431411	Identifier	start		3431065	1					
ANR	3431412	Parameter	FT_UInt count	198:20:9733:9748	3431065	2	True				
ANR	3431413	ParameterType	FT_UInt		3431065	0					
ANR	3431414	Identifier	count		3431065	1					
ANR	3431415	Parameter	FT_Int32 flags	199:20:9771:9786	3431065	3	True				
ANR	3431416	ParameterType	FT_Int32		3431065	0					
ANR	3431417	Identifier	flags		3431065	1					
ANR	3431418	Parameter	FT_Fixed * advances	200:20:9809:9827	3431065	4	True				
ANR	3431419	ParameterType	FT_Fixed *		3431065	0					
ANR	3431420	Identifier	advances		3431065	1					
ANR	3431421	CFGEntryNode	ENTRY		3431065		True				
ANR	3431422	CFGExitNode	EXIT		3431065		True				
ANR	3431423	Symbol	nn		3431065						
ANR	3431424	Symbol	FT_Err_Ok		3431065						
ANR	3431425	Symbol	TT_FACE_FLAG_VAR_HADVANCE		3431065						
ANR	3431426	Symbol	FT_IS_VARIATION		3431065						
ANR	3431427	Symbol	flags		3431065						
ANR	3431428	Symbol	slot		3431065						
ANR	3431429	Symbol	error		3431065						
ANR	3431430	Symbol	* face		3431065						
ANR	3431431	Symbol	dummy		3431065						
ANR	3431432	Symbol	* slot		3431065						
ANR	3431433	Symbol	& dummy		3431065						
ANR	3431434	Symbol	ttface -> horizontal . number_Of_HMetrics		3431065						
ANR	3431435	Symbol	advances		3431065						
ANR	3431436	Symbol	ttface		3431065						
ANR	3431437	Symbol	FT_IS_SFNT		3431065						
ANR	3431438	Symbol	slot -> linearHoriAdvance		3431065						
ANR	3431439	Symbol	& aw		3431065						
ANR	3431440	Symbol	TT_FACE_FLAG_VAR_VADVANCE		3431065						
ANR	3431441	Symbol	ttface -> horizontal		3431065						
ANR	3431442	Symbol	* nn		3431065						
ANR	3431443	Symbol	* advances		3431065						
ANR	3431444	Symbol	ah		3431065						
ANR	3431445	Symbol	start		3431065						
ANR	3431446	Symbol	count		3431065						
ANR	3431447	Symbol	ttface -> variation_support		3431065						
ANR	3431448	Symbol	FT_LOAD_ADVANCE_ONLY		3431065						
ANR	3431449	Symbol	face -> glyph		3431065						
ANR	3431450	Symbol	cff_glyph_load		3431065						
ANR	3431451	Symbol	FT_LOAD_VERTICAL_LAYOUT		3431065						
ANR	3431452	Symbol	* ttface		3431065						
ANR	3431453	Symbol	FT_THROW		3431065						
ANR	3431454	Symbol	& ah		3431065						
ANR	3431455	Symbol	face		3431065						
ANR	3431456	Symbol	ttface -> sfnt		3431065						
ANR	3431457	Symbol	ttface -> vertical_info		3431065						
ANR	3431458	Symbol	Unimplemented_Feature		3431065						
ANR	3431459	Symbol	face -> size		3431065						
ANR	3431460	Symbol	aw		3431065						
ANR	3431461	Symbol	FT_IS_NAMED_INSTANCE		3431065						
ANR	3431462	Symbol	slot -> linearVertAdvance		3431065						
ANR	3431463	Function	cff_get_glyph_name	309:2:13173:15141							
ANR	3431464	FunctionDef	"cff_get_glyph_name (CFF_Face face , FT_UInt glyph_index , FT_Pointer buffer , FT_UInt buffer_max)"		3431463	0					
ANR	3431465	CompoundStatement		314:2:13367:15141	3431463	0					
ANR	3431466	IdentifierDeclStatement	CFF_Font font = ( CFF_Font ) face -> extra . data ;	315:4:13373:13420	3431463	0	True				
ANR	3431467	IdentifierDecl	font = ( CFF_Font ) face -> extra . data		3431463	0					
ANR	3431468	IdentifierDeclType	CFF_Font		3431463	0					
ANR	3431469	Identifier	font		3431463	1					
ANR	3431470	AssignmentExpression	font = ( CFF_Font ) face -> extra . data		3431463	2		=			
ANR	3431471	Identifier	font		3431463	0					
ANR	3431472	CastExpression	( CFF_Font ) face -> extra . data		3431463	1					
ANR	3431473	CastTarget	CFF_Font		3431463	0					
ANR	3431474	MemberAccess	face -> extra . data		3431463	1					
ANR	3431475	PtrMemberAccess	face -> extra		3431463	0					
ANR	3431476	Identifier	face		3431463	0					
ANR	3431477	Identifier	extra		3431463	1					
ANR	3431478	Identifier	data		3431463	1					
ANR	3431479	IdentifierDeclStatement	FT_String * gname ;	316:4:13426:13443	3431463	1	True				
ANR	3431480	IdentifierDecl	* gname		3431463	0					
ANR	3431481	IdentifierDeclType	FT_String *		3431463	0					
ANR	3431482	Identifier	gname		3431463	1					
ANR	3431483	IdentifierDeclStatement	FT_UShort sid ;	317:4:13449:13464	3431463	2	True				
ANR	3431484	IdentifierDecl	sid		3431463	0					
ANR	3431485	IdentifierDeclType	FT_UShort		3431463	0					
ANR	3431486	Identifier	sid		3431463	1					
ANR	3431487	IdentifierDeclStatement	FT_Error error ;	318:4:13470:13487	3431463	3	True				
ANR	3431488	IdentifierDecl	error		3431463	0					
ANR	3431489	IdentifierDeclType	FT_Error		3431463	0					
ANR	3431490	Identifier	error		3431463	1					
ANR	3431491	IfStatement	if ( font -> version_major == 2 )		3431463	4					
ANR	3431492	Condition	font -> version_major == 2	323:9:13596:13619	3431463	0	True				
ANR	3431493	EqualityExpression	font -> version_major == 2		3431463	0		==			
ANR	3431494	PtrMemberAccess	font -> version_major		3431463	0					
ANR	3431495	Identifier	font		3431463	0					
ANR	3431496	Identifier	version_major		3431463	1					
ANR	3431497	PrimaryExpression	2		3431463	1					
ANR	3431498	CompoundStatement		14:6:410:640	3431463	1					
ANR	3431499	IdentifierDeclStatement	FT_Library library = FT_FACE_LIBRARY ( face ) ;	325:6:13635:13694	3431463	0	True				
ANR	3431500	IdentifierDecl	library = FT_FACE_LIBRARY ( face )		3431463	0					
ANR	3431501	IdentifierDeclType	FT_Library		3431463	0					
ANR	3431502	Identifier	library		3431463	1					
ANR	3431503	AssignmentExpression	library = FT_FACE_LIBRARY ( face )		3431463	2		=			
ANR	3431504	Identifier	library		3431463	0					
ANR	3431505	CallExpression	FT_FACE_LIBRARY ( face )		3431463	1					
ANR	3431506	Callee	FT_FACE_LIBRARY		3431463	0					
ANR	3431507	Identifier	FT_FACE_LIBRARY		3431463	0					
ANR	3431508	ArgumentList	face		3431463	1					
ANR	3431509	Argument	face		3431463	0					
ANR	3431510	Identifier	face		3431463	0					
ANR	3431511	IdentifierDeclStatement	"FT_Module sfnt_module = FT_Get_Module ( library , ""sfnt"" ) ;"	326:6:13702:13770	3431463	1	True				
ANR	3431512	IdentifierDecl	"sfnt_module = FT_Get_Module ( library , ""sfnt"" )"		3431463	0					
ANR	3431513	IdentifierDeclType	FT_Module		3431463	0					
ANR	3431514	Identifier	sfnt_module		3431463	1					
ANR	3431515	AssignmentExpression	"sfnt_module = FT_Get_Module ( library , ""sfnt"" )"		3431463	2		=			
ANR	3431516	Identifier	sfnt_module		3431463	0					
ANR	3431517	CallExpression	"FT_Get_Module ( library , ""sfnt"" )"		3431463	1					
ANR	3431518	Callee	FT_Get_Module		3431463	0					
ANR	3431519	Identifier	FT_Get_Module		3431463	0					
ANR	3431520	ArgumentList	library		3431463	1					
ANR	3431521	Argument	library		3431463	0					
ANR	3431522	Identifier	library		3431463	0					
ANR	3431523	Argument	"""sfnt"""		3431463	1					
ANR	3431524	PrimaryExpression	"""sfnt"""		3431463	0					
ANR	3431525	IdentifierDeclStatement	"FT_Service_GlyphDict service = ( FT_Service_GlyphDict ) ft_module_get_service ( sfnt_module , FT_SERVICE_ID_GLYPH_DICT , 0 ) ;"	327:6:13778:14008	3431463	2	True				
ANR	3431526	IdentifierDecl	"service = ( FT_Service_GlyphDict ) ft_module_get_service ( sfnt_module , FT_SERVICE_ID_GLYPH_DICT , 0 )"		3431463	0					
ANR	3431527	IdentifierDeclType	FT_Service_GlyphDict		3431463	0					
ANR	3431528	Identifier	service		3431463	1					
ANR	3431529	AssignmentExpression	"service = ( FT_Service_GlyphDict ) ft_module_get_service ( sfnt_module , FT_SERVICE_ID_GLYPH_DICT , 0 )"		3431463	2		=			
ANR	3431530	Identifier	service		3431463	0					
ANR	3431531	CastExpression	"( FT_Service_GlyphDict ) ft_module_get_service ( sfnt_module , FT_SERVICE_ID_GLYPH_DICT , 0 )"		3431463	1					
ANR	3431532	CastTarget	FT_Service_GlyphDict		3431463	0					
ANR	3431533	CallExpression	"ft_module_get_service ( sfnt_module , FT_SERVICE_ID_GLYPH_DICT , 0 )"		3431463	1					
ANR	3431534	Callee	ft_module_get_service		3431463	0					
ANR	3431535	Identifier	ft_module_get_service		3431463	0					
ANR	3431536	ArgumentList	sfnt_module		3431463	1					
ANR	3431537	Argument	sfnt_module		3431463	0					
ANR	3431538	Identifier	sfnt_module		3431463	0					
ANR	3431539	Argument	FT_SERVICE_ID_GLYPH_DICT		3431463	1					
ANR	3431540	Identifier	FT_SERVICE_ID_GLYPH_DICT		3431463	0					
ANR	3431541	Argument	0		3431463	2					
ANR	3431542	PrimaryExpression	0		3431463	0					
ANR	3431543	IfStatement	if ( service && service -> get_name )		3431463	3					
ANR	3431544	Condition	service && service -> get_name	334:11:14023:14050	3431463	0	True				
ANR	3431545	AndExpression	service && service -> get_name		3431463	0		&&			
ANR	3431546	Identifier	service		3431463	0					
ANR	3431547	PtrMemberAccess	service -> get_name		3431463	1					
ANR	3431548	Identifier	service		3431463	0					
ANR	3431549	Identifier	get_name		3431463	1					
ANR	3431550	ReturnStatement	"return service -> get_name ( FT_FACE ( face ) , glyph_index , buffer , buffer_max ) ;"	335:8:14062:14240	3431463	1	True				
ANR	3431551	CallExpression	"service -> get_name ( FT_FACE ( face ) , glyph_index , buffer , buffer_max )"		3431463	0					
ANR	3431552	Callee	service -> get_name		3431463	0					
ANR	3431553	PtrMemberAccess	service -> get_name		3431463	0					
ANR	3431554	Identifier	service		3431463	0					
ANR	3431555	Identifier	get_name		3431463	1					
ANR	3431556	ArgumentList	FT_FACE ( face )		3431463	1					
ANR	3431557	Argument	FT_FACE ( face )		3431463	0					
ANR	3431558	CallExpression	FT_FACE ( face )		3431463	0					
ANR	3431559	Callee	FT_FACE		3431463	0					
ANR	3431560	Identifier	FT_FACE		3431463	0					
ANR	3431561	ArgumentList	face		3431463	1					
ANR	3431562	Argument	face		3431463	0					
ANR	3431563	Identifier	face		3431463	0					
ANR	3431564	Argument	glyph_index		3431463	1					
ANR	3431565	Identifier	glyph_index		3431463	0					
ANR	3431566	Argument	buffer		3431463	2					
ANR	3431567	Identifier	buffer		3431463	0					
ANR	3431568	Argument	buffer_max		3431463	3					
ANR	3431569	Identifier	buffer_max		3431463	0					
ANR	3431570	ElseStatement	else		3431463	0					
ANR	3431571	CompoundStatement		27:6:891:891	3431463	0					
ANR	3431572	Statement	FT_ERROR	341:8:14269:14276	3431463	0	True				
ANR	3431573	Statement	(	341:16:14277:14277	3431463	1	True				
ANR	3431574	Statement	(	341:17:14278:14278	3431463	2	True				
ANR	3431575	Statement	"""cff_get_glyph_name:"""	341:19:14280:14300	3431463	3	True				
ANR	3431576	Statement	""" cannot get glyph name from a CFF2 font\\n"""	342:19:14321:14363	3431463	4	True				
ANR	3431577	Statement	"""                   """	343:19:14384:14404	3431463	5	True				
ANR	3431578	Statement	""" without the `PSNames' module\\n"""	344:19:14425:14457	3431463	6	True				
ANR	3431579	Statement	)	344:53:14459:14459	3431463	7	True				
ANR	3431580	Statement	)	344:54:14460:14460	3431463	8	True				
ANR	3431581	ExpressionStatement		344:55:14461:14461	3431463	9	True				
ANR	3431582	ExpressionStatement	error = FT_THROW ( Missing_Module )	345:8:14471:14505	3431463	10	True				
ANR	3431583	AssignmentExpression	error = FT_THROW ( Missing_Module )		3431463	0		=			
ANR	3431584	Identifier	error		3431463	0					
ANR	3431585	CallExpression	FT_THROW ( Missing_Module )		3431463	1					
ANR	3431586	Callee	FT_THROW		3431463	0					
ANR	3431587	Identifier	FT_THROW		3431463	0					
ANR	3431588	ArgumentList	Missing_Module		3431463	1					
ANR	3431589	Argument	Missing_Module		3431463	0					
ANR	3431590	Identifier	Missing_Module		3431463	0					
ANR	3431591	GotoStatement	goto Exit ;	346:8:14515:14524	3431463	11	True				
ANR	3431592	Identifier	Exit		3431463	0					
ANR	3431593	IfStatement	if ( ! font -> psnames )		3431463	5					
ANR	3431594	Condition	! font -> psnames	350:9:14550:14563	3431463	0	True				
ANR	3431595	UnaryOperationExpression	! font -> psnames		3431463	0					
ANR	3431596	UnaryOperator	!		3431463	0					
ANR	3431597	PtrMemberAccess	font -> psnames		3431463	1					
ANR	3431598	Identifier	font		3431463	0					
ANR	3431599	Identifier	psnames		3431463	1					
ANR	3431600	CompoundStatement		38:4:1203:1203	3431463	1					
ANR	3431601	Statement	FT_ERROR	352:6:14579:14586	3431463	0	True				
ANR	3431602	Statement	(	352:14:14587:14587	3431463	1	True				
ANR	3431603	Statement	(	352:15:14588:14588	3431463	2	True				
ANR	3431604	Statement	"""cff_get_glyph_name:"""	352:17:14590:14610	3431463	3	True				
ANR	3431605	Statement	""" cannot get glyph name from CFF & CEF fonts\\n"""	353:17:14629:14675	3431463	4	True				
ANR	3431606	Statement	"""                   """	354:17:14694:14714	3431463	5	True				
ANR	3431607	Statement	""" without the `PSNames' module\\n"""	355:17:14733:14765	3431463	6	True				
ANR	3431608	Statement	)	355:51:14767:14767	3431463	7	True				
ANR	3431609	Statement	)	355:52:14768:14768	3431463	8	True				
ANR	3431610	ExpressionStatement		355:53:14769:14769	3431463	9	True				
ANR	3431611	ExpressionStatement	error = FT_THROW ( Missing_Module )	356:6:14777:14811	3431463	10	True				
ANR	3431612	AssignmentExpression	error = FT_THROW ( Missing_Module )		3431463	0		=			
ANR	3431613	Identifier	error		3431463	0					
ANR	3431614	CallExpression	FT_THROW ( Missing_Module )		3431463	1					
ANR	3431615	Callee	FT_THROW		3431463	0					
ANR	3431616	Identifier	FT_THROW		3431463	0					
ANR	3431617	ArgumentList	Missing_Module		3431463	1					
ANR	3431618	Argument	Missing_Module		3431463	0					
ANR	3431619	Identifier	Missing_Module		3431463	0					
ANR	3431620	GotoStatement	goto Exit ;	357:6:14819:14828	3431463	11	True				
ANR	3431621	Identifier	Exit		3431463	0					
ANR	3431622	ExpressionStatement	sid = font -> charset . sids [ glyph_index ]	361:4:14894:14931	3431463	6	True				
ANR	3431623	AssignmentExpression	sid = font -> charset . sids [ glyph_index ]		3431463	0		=			
ANR	3431624	Identifier	sid		3431463	0					
ANR	3431625	ArrayIndexing	font -> charset . sids [ glyph_index ]		3431463	1					
ANR	3431626	MemberAccess	font -> charset . sids		3431463	0					
ANR	3431627	PtrMemberAccess	font -> charset		3431463	0					
ANR	3431628	Identifier	font		3431463	0					
ANR	3431629	Identifier	charset		3431463	1					
ANR	3431630	Identifier	sids		3431463	1					
ANR	3431631	Identifier	glyph_index		3431463	1					
ANR	3431632	ExpressionStatement	"gname = cff_index_get_sid_string ( font , sid )"	364:4:14976:15021	3431463	7	True				
ANR	3431633	AssignmentExpression	"gname = cff_index_get_sid_string ( font , sid )"		3431463	0		=			
ANR	3431634	Identifier	gname		3431463	0					
ANR	3431635	CallExpression	"cff_index_get_sid_string ( font , sid )"		3431463	1					
ANR	3431636	Callee	cff_index_get_sid_string		3431463	0					
ANR	3431637	Identifier	cff_index_get_sid_string		3431463	0					
ANR	3431638	ArgumentList	font		3431463	1					
ANR	3431639	Argument	font		3431463	0					
ANR	3431640	Identifier	font		3431463	0					
ANR	3431641	Argument	sid		3431463	1					
ANR	3431642	Identifier	sid		3431463	0					
ANR	3431643	IfStatement	if ( gname )		3431463	8					
ANR	3431644	Condition	gname	366:9:15033:15037	3431463	0	True				
ANR	3431645	Identifier	gname		3431463	0					
ANR	3431646	ExpressionStatement	"FT_STRCPYN ( buffer , gname , buffer_max )"	367:6:15047:15086	3431463	1	True				
ANR	3431647	CallExpression	"FT_STRCPYN ( buffer , gname , buffer_max )"		3431463	0					
ANR	3431648	Callee	FT_STRCPYN		3431463	0					
ANR	3431649	Identifier	FT_STRCPYN		3431463	0					
ANR	3431650	ArgumentList	buffer		3431463	1					
ANR	3431651	Argument	buffer		3431463	0					
ANR	3431652	Identifier	buffer		3431463	0					
ANR	3431653	Argument	gname		3431463	1					
ANR	3431654	Identifier	gname		3431463	0					
ANR	3431655	Argument	buffer_max		3431463	2					
ANR	3431656	Identifier	buffer_max		3431463	0					
ANR	3431657	ExpressionStatement	error = FT_Err_Ok	369:4:15093:15110	3431463	9	True				
ANR	3431658	AssignmentExpression	error = FT_Err_Ok		3431463	0		=			
ANR	3431659	Identifier	error		3431463	0					
ANR	3431660	Identifier	FT_Err_Ok		3431463	1					
ANR	3431661	Label	Exit :	371:2:15115:15119	3431463	10	True				
ANR	3431662	Identifier	Exit		3431463	0					
ANR	3431663	ReturnStatement	return error ;	372:4:15125:15137	3431463	11	True				
ANR	3431664	Identifier	error		3431463	0					
ANR	3431665	ReturnType	static FT_Error		3431463	1					
ANR	3431666	Identifier	cff_get_glyph_name		3431463	2					
ANR	3431667	ParameterList	"CFF_Face face , FT_UInt glyph_index , FT_Pointer buffer , FT_UInt buffer_max"		3431463	3					
ANR	3431668	Parameter	CFF_Face face	310:22:13211:13226	3431463	0	True				
ANR	3431669	ParameterType	CFF_Face		3431463	0					
ANR	3431670	Identifier	face		3431463	1					
ANR	3431671	Parameter	FT_UInt glyph_index	311:22:13251:13273	3431463	1	True				
ANR	3431672	ParameterType	FT_UInt		3431463	0					
ANR	3431673	Identifier	glyph_index		3431463	1					
ANR	3431674	Parameter	FT_Pointer buffer	312:22:13298:13315	3431463	2	True				
ANR	3431675	ParameterType	FT_Pointer		3431463	0					
ANR	3431676	Identifier	buffer		3431463	1					
ANR	3431677	Parameter	FT_UInt buffer_max	313:22:13340:13361	3431463	3	True				
ANR	3431678	ParameterType	FT_UInt		3431463	0					
ANR	3431679	Identifier	buffer_max		3431463	1					
ANR	3431680	CFGEntryNode	ENTRY		3431463		True				
ANR	3431681	CFGExitNode	EXIT		3431463		True				
ANR	3431682	Symbol	ft_module_get_service		3431463						
ANR	3431683	Symbol	buffer_max		3431463						
ANR	3431684	Symbol	glyph_index		3431463						
ANR	3431685	Symbol	service -> get_name		3431463						
ANR	3431686	Symbol	FT_Err_Ok		3431463						
ANR	3431687	Symbol	FT_Get_Module		3431463						
ANR	3431688	Symbol	FT_FACE		3431463						
ANR	3431689	Symbol	face -> extra . data		3431463						
ANR	3431690	Symbol	error		3431463						
ANR	3431691	Symbol	* font -> charset . sids		3431463						
ANR	3431692	Symbol	* face		3431463						
ANR	3431693	Symbol	sid		3431463						
ANR	3431694	Symbol	library		3431463						
ANR	3431695	Symbol	Missing_Module		3431463						
ANR	3431696	Symbol	* font -> charset		3431463						
ANR	3431697	Symbol	buffer		3431463						
ANR	3431698	Symbol	* font		3431463						
ANR	3431699	Symbol	* service		3431463						
ANR	3431700	Symbol	* glyph_index		3431463						
ANR	3431701	Symbol	FT_SERVICE_ID_GLYPH_DICT		3431463						
ANR	3431702	Symbol	font -> charset		3431463						
ANR	3431703	Symbol	font -> psnames		3431463						
ANR	3431704	Symbol	gname		3431463						
ANR	3431705	Symbol	* * font		3431463						
ANR	3431706	Symbol	FT_THROW		3431463						
ANR	3431707	Symbol	face		3431463						
ANR	3431708	Symbol	face -> extra		3431463						
ANR	3431709	Symbol	font -> version_major		3431463						
ANR	3431710	Symbol	service		3431463						
ANR	3431711	Symbol	cff_index_get_sid_string		3431463						
ANR	3431712	Symbol	font -> charset . sids		3431463						
ANR	3431713	Symbol	sfnt_module		3431463						
ANR	3431714	Symbol	FT_FACE_LIBRARY		3431463						
ANR	3431715	Symbol	font		3431463						
ANR	3431716	Function	cff_get_name_index	376:2:15147:16861							
ANR	3431717	FunctionDef	"cff_get_name_index (CFF_Face face , FT_String * glyph_name)"		3431716	0					
ANR	3431718	CompoundStatement		379:2:15251:16861	3431716	0					
ANR	3431719	IdentifierDeclStatement	CFF_Font cff ;	380:4:15257:15280	3431716	0	True				
ANR	3431720	IdentifierDecl	cff		3431716	0					
ANR	3431721	IdentifierDeclType	CFF_Font		3431716	0					
ANR	3431722	Identifier	cff		3431716	1					
ANR	3431723	IdentifierDeclStatement	CFF_Charset charset ;	381:4:15286:15313	3431716	1	True				
ANR	3431724	IdentifierDecl	charset		3431716	0					
ANR	3431725	IdentifierDeclType	CFF_Charset		3431716	0					
ANR	3431726	Identifier	charset		3431716	1					
ANR	3431727	IdentifierDeclStatement	FT_Service_PsCMaps psnames ;	382:4:15319:15346	3431716	2	True				
ANR	3431728	IdentifierDecl	psnames		3431716	0					
ANR	3431729	IdentifierDeclType	FT_Service_PsCMaps		3431716	0					
ANR	3431730	Identifier	psnames		3431716	1					
ANR	3431731	IdentifierDeclStatement	FT_String * name ;	383:4:15352:15376	3431716	3	True				
ANR	3431732	IdentifierDecl	* name		3431716	0					
ANR	3431733	IdentifierDeclType	FT_String *		3431716	0					
ANR	3431734	Identifier	name		3431716	1					
ANR	3431735	IdentifierDeclStatement	FT_UShort sid ;	384:4:15382:15405	3431716	4	True				
ANR	3431736	IdentifierDecl	sid		3431716	0					
ANR	3431737	IdentifierDeclType	FT_UShort		3431716	0					
ANR	3431738	Identifier	sid		3431716	1					
ANR	3431739	IdentifierDeclStatement	FT_UInt i ;	385:4:15411:15432	3431716	5	True				
ANR	3431740	IdentifierDecl	i		3431716	0					
ANR	3431741	IdentifierDeclType	FT_UInt		3431716	0					
ANR	3431742	Identifier	i		3431716	1					
ANR	3431743	ExpressionStatement	cff = ( CFF_FontRec * ) face -> extra . data	388:4:15440:15481	3431716	6	True				
ANR	3431744	AssignmentExpression	cff = ( CFF_FontRec * ) face -> extra . data		3431716	0		=			
ANR	3431745	Identifier	cff		3431716	0					
ANR	3431746	CastExpression	( CFF_FontRec * ) face -> extra . data		3431716	1					
ANR	3431747	CastTarget	CFF_FontRec *		3431716	0					
ANR	3431748	MemberAccess	face -> extra . data		3431716	1					
ANR	3431749	PtrMemberAccess	face -> extra		3431716	0					
ANR	3431750	Identifier	face		3431716	0					
ANR	3431751	Identifier	extra		3431716	1					
ANR	3431752	Identifier	data		3431716	1					
ANR	3431753	ExpressionStatement	charset = & cff -> charset	389:4:15487:15510	3431716	7	True				
ANR	3431754	AssignmentExpression	charset = & cff -> charset		3431716	0		=			
ANR	3431755	Identifier	charset		3431716	0					
ANR	3431756	UnaryOperationExpression	& cff -> charset		3431716	1					
ANR	3431757	UnaryOperator	&		3431716	0					
ANR	3431758	PtrMemberAccess	cff -> charset		3431716	1					
ANR	3431759	Identifier	cff		3431716	0					
ANR	3431760	Identifier	charset		3431716	1					
ANR	3431761	IfStatement	if ( cff -> version_major == 2 )		3431716	8					
ANR	3431762	Condition	cff -> version_major == 2	393:9:15618:15640	3431716	0	True				
ANR	3431763	EqualityExpression	cff -> version_major == 2		3431716	0		==			
ANR	3431764	PtrMemberAccess	cff -> version_major		3431716	0					
ANR	3431765	Identifier	cff		3431716	0					
ANR	3431766	Identifier	version_major		3431716	1					
ANR	3431767	PrimaryExpression	2		3431716	1					
ANR	3431768	CompoundStatement		19:6:547:777	3431716	1					
ANR	3431769	IdentifierDeclStatement	FT_Library library = FT_FACE_LIBRARY ( face ) ;	395:6:15656:15715	3431716	0	True				
ANR	3431770	IdentifierDecl	library = FT_FACE_LIBRARY ( face )		3431716	0					
ANR	3431771	IdentifierDeclType	FT_Library		3431716	0					
ANR	3431772	Identifier	library		3431716	1					
ANR	3431773	AssignmentExpression	library = FT_FACE_LIBRARY ( face )		3431716	2		=			
ANR	3431774	Identifier	library		3431716	0					
ANR	3431775	CallExpression	FT_FACE_LIBRARY ( face )		3431716	1					
ANR	3431776	Callee	FT_FACE_LIBRARY		3431716	0					
ANR	3431777	Identifier	FT_FACE_LIBRARY		3431716	0					
ANR	3431778	ArgumentList	face		3431716	1					
ANR	3431779	Argument	face		3431716	0					
ANR	3431780	Identifier	face		3431716	0					
ANR	3431781	IdentifierDeclStatement	"FT_Module sfnt_module = FT_Get_Module ( library , ""sfnt"" ) ;"	396:6:15723:15791	3431716	1	True				
ANR	3431782	IdentifierDecl	"sfnt_module = FT_Get_Module ( library , ""sfnt"" )"		3431716	0					
ANR	3431783	IdentifierDeclType	FT_Module		3431716	0					
ANR	3431784	Identifier	sfnt_module		3431716	1					
ANR	3431785	AssignmentExpression	"sfnt_module = FT_Get_Module ( library , ""sfnt"" )"		3431716	2		=			
ANR	3431786	Identifier	sfnt_module		3431716	0					
ANR	3431787	CallExpression	"FT_Get_Module ( library , ""sfnt"" )"		3431716	1					
ANR	3431788	Callee	FT_Get_Module		3431716	0					
ANR	3431789	Identifier	FT_Get_Module		3431716	0					
ANR	3431790	ArgumentList	library		3431716	1					
ANR	3431791	Argument	library		3431716	0					
ANR	3431792	Identifier	library		3431716	0					
ANR	3431793	Argument	"""sfnt"""		3431716	1					
ANR	3431794	PrimaryExpression	"""sfnt"""		3431716	0					
ANR	3431795	IdentifierDeclStatement	"FT_Service_GlyphDict service = ( FT_Service_GlyphDict ) ft_module_get_service ( sfnt_module , FT_SERVICE_ID_GLYPH_DICT , 0 ) ;"	397:6:15799:16029	3431716	2	True				
ANR	3431796	IdentifierDecl	"service = ( FT_Service_GlyphDict ) ft_module_get_service ( sfnt_module , FT_SERVICE_ID_GLYPH_DICT , 0 )"		3431716	0					
ANR	3431797	IdentifierDeclType	FT_Service_GlyphDict		3431716	0					
ANR	3431798	Identifier	service		3431716	1					
ANR	3431799	AssignmentExpression	"service = ( FT_Service_GlyphDict ) ft_module_get_service ( sfnt_module , FT_SERVICE_ID_GLYPH_DICT , 0 )"		3431716	2		=			
ANR	3431800	Identifier	service		3431716	0					
ANR	3431801	CastExpression	"( FT_Service_GlyphDict ) ft_module_get_service ( sfnt_module , FT_SERVICE_ID_GLYPH_DICT , 0 )"		3431716	1					
ANR	3431802	CastTarget	FT_Service_GlyphDict		3431716	0					
ANR	3431803	CallExpression	"ft_module_get_service ( sfnt_module , FT_SERVICE_ID_GLYPH_DICT , 0 )"		3431716	1					
ANR	3431804	Callee	ft_module_get_service		3431716	0					
ANR	3431805	Identifier	ft_module_get_service		3431716	0					
ANR	3431806	ArgumentList	sfnt_module		3431716	1					
ANR	3431807	Argument	sfnt_module		3431716	0					
ANR	3431808	Identifier	sfnt_module		3431716	0					
ANR	3431809	Argument	FT_SERVICE_ID_GLYPH_DICT		3431716	1					
ANR	3431810	Identifier	FT_SERVICE_ID_GLYPH_DICT		3431716	0					
ANR	3431811	Argument	0		3431716	2					
ANR	3431812	PrimaryExpression	0		3431716	0					
ANR	3431813	IfStatement	if ( service && service -> name_index )		3431716	3					
ANR	3431814	Condition	service && service -> name_index	404:11:16044:16073	3431716	0	True				
ANR	3431815	AndExpression	service && service -> name_index		3431716	0		&&			
ANR	3431816	Identifier	service		3431716	0					
ANR	3431817	PtrMemberAccess	service -> name_index		3431716	1					
ANR	3431818	Identifier	service		3431716	0					
ANR	3431819	Identifier	name_index		3431716	1					
ANR	3431820	ReturnStatement	"return service -> name_index ( FT_FACE ( face ) , glyph_name ) ;"	405:8:16085:16142	3431716	1	True				
ANR	3431821	CallExpression	"service -> name_index ( FT_FACE ( face ) , glyph_name )"		3431716	0					
ANR	3431822	Callee	service -> name_index		3431716	0					
ANR	3431823	PtrMemberAccess	service -> name_index		3431716	0					
ANR	3431824	Identifier	service		3431716	0					
ANR	3431825	Identifier	name_index		3431716	1					
ANR	3431826	ArgumentList	FT_FACE ( face )		3431716	1					
ANR	3431827	Argument	FT_FACE ( face )		3431716	0					
ANR	3431828	CallExpression	FT_FACE ( face )		3431716	0					
ANR	3431829	Callee	FT_FACE		3431716	0					
ANR	3431830	Identifier	FT_FACE		3431716	0					
ANR	3431831	ArgumentList	face		3431716	1					
ANR	3431832	Argument	face		3431716	0					
ANR	3431833	Identifier	face		3431716	0					
ANR	3431834	Argument	glyph_name		3431716	1					
ANR	3431835	Identifier	glyph_name		3431716	0					
ANR	3431836	ElseStatement	else		3431716	0					
ANR	3431837	CompoundStatement		29:6:909:909	3431716	0					
ANR	3431838	Statement	FT_ERROR	408:8:16171:16178	3431716	0	True				
ANR	3431839	Statement	(	408:16:16179:16179	3431716	1	True				
ANR	3431840	Statement	(	408:17:16180:16180	3431716	2	True				
ANR	3431841	Statement	"""cff_get_name_index:"""	408:19:16182:16202	3431716	3	True				
ANR	3431842	Statement	""" cannot get glyph index from a CFF2 font\\n"""	409:19:16223:16266	3431716	4	True				
ANR	3431843	Statement	"""                   """	410:19:16287:16307	3431716	5	True				
ANR	3431844	Statement	""" without the `PSNames' module\\n"""	411:19:16328:16360	3431716	6	True				
ANR	3431845	Statement	)	411:53:16362:16362	3431716	7	True				
ANR	3431846	Statement	)	411:54:16363:16363	3431716	8	True				
ANR	3431847	ExpressionStatement		411:55:16364:16364	3431716	9	True				
ANR	3431848	ReturnStatement	return 0 ;	412:8:16374:16382	3431716	10	True				
ANR	3431849	PrimaryExpression	0		3431716	0					
ANR	3431850	ExpressionStatement	"FT_FACE_FIND_GLOBAL_SERVICE ( face , psnames , POSTSCRIPT_CMAPS )"	416:4:16403:16465	3431716	9	True				
ANR	3431851	CallExpression	"FT_FACE_FIND_GLOBAL_SERVICE ( face , psnames , POSTSCRIPT_CMAPS )"		3431716	0					
ANR	3431852	Callee	FT_FACE_FIND_GLOBAL_SERVICE		3431716	0					
ANR	3431853	Identifier	FT_FACE_FIND_GLOBAL_SERVICE		3431716	0					
ANR	3431854	ArgumentList	face		3431716	1					
ANR	3431855	Argument	face		3431716	0					
ANR	3431856	Identifier	face		3431716	0					
ANR	3431857	Argument	psnames		3431716	1					
ANR	3431858	Identifier	psnames		3431716	0					
ANR	3431859	Argument	POSTSCRIPT_CMAPS		3431716	2					
ANR	3431860	Identifier	POSTSCRIPT_CMAPS		3431716	0					
ANR	3431861	IfStatement	if ( ! psnames )		3431716	10					
ANR	3431862	Condition	! psnames	417:9:16476:16483	3431716	0	True				
ANR	3431863	UnaryOperationExpression	! psnames		3431716	0					
ANR	3431864	UnaryOperator	!		3431716	0					
ANR	3431865	Identifier	psnames		3431716	1					
ANR	3431866	ReturnStatement	return 0 ;	418:6:16493:16501	3431716	1	True				
ANR	3431867	PrimaryExpression	0		3431716	0					
ANR	3431868	ForStatement	for ( i = 0 ; i < cff -> num_glyphs ; i ++ )		3431716	11					
ANR	3431869	ForInit	i = 0 ;	420:10:16514:16519	3431716	0	True				
ANR	3431870	AssignmentExpression	i = 0		3431716	0		=			
ANR	3431871	Identifier	i		3431716	0					
ANR	3431872	PrimaryExpression	0		3431716	1					
ANR	3431873	Condition	i < cff -> num_glyphs	420:17:16521:16539	3431716	1	True				
ANR	3431874	RelationalExpression	i < cff -> num_glyphs		3431716	0		<			
ANR	3431875	Identifier	i		3431716	0					
ANR	3431876	PtrMemberAccess	cff -> num_glyphs		3431716	1					
ANR	3431877	Identifier	cff		3431716	0					
ANR	3431878	Identifier	num_glyphs		3431716	1					
ANR	3431879	PostIncDecOperationExpression	i ++	420:38:16542:16544	3431716	2	True				
ANR	3431880	Identifier	i		3431716	0					
ANR	3431881	IncDec	++		3431716	1					
ANR	3431882	CompoundStatement		43:4:1300:1300	3431716	3					
ANR	3431883	ExpressionStatement	sid = charset -> sids [ i ]	422:6:16560:16582	3431716	0	True				
ANR	3431884	AssignmentExpression	sid = charset -> sids [ i ]		3431716	0		=			
ANR	3431885	Identifier	sid		3431716	0					
ANR	3431886	ArrayIndexing	charset -> sids [ i ]		3431716	1					
ANR	3431887	PtrMemberAccess	charset -> sids		3431716	0					
ANR	3431888	Identifier	charset		3431716	0					
ANR	3431889	Identifier	sids		3431716	1					
ANR	3431890	Identifier	i		3431716	1					
ANR	3431891	IfStatement	if ( sid > 390 )		3431716	1					
ANR	3431892	Condition	sid > 390	424:11:16596:16604	3431716	0	True				
ANR	3431893	RelationalExpression	sid > 390		3431716	0		>			
ANR	3431894	Identifier	sid		3431716	0					
ANR	3431895	PrimaryExpression	390		3431716	1					
ANR	3431896	ExpressionStatement	"name = cff_index_get_string ( cff , sid - 391 )"	425:8:16616:16661	3431716	1	True				
ANR	3431897	AssignmentExpression	"name = cff_index_get_string ( cff , sid - 391 )"		3431716	0		=			
ANR	3431898	Identifier	name		3431716	0					
ANR	3431899	CallExpression	"cff_index_get_string ( cff , sid - 391 )"		3431716	1					
ANR	3431900	Callee	cff_index_get_string		3431716	0					
ANR	3431901	Identifier	cff_index_get_string		3431716	0					
ANR	3431902	ArgumentList	cff		3431716	1					
ANR	3431903	Argument	cff		3431716	0					
ANR	3431904	Identifier	cff		3431716	0					
ANR	3431905	Argument	sid - 391		3431716	1					
ANR	3431906	AdditiveExpression	sid - 391		3431716	0		-			
ANR	3431907	Identifier	sid		3431716	0					
ANR	3431908	PrimaryExpression	391		3431716	1					
ANR	3431909	ElseStatement	else		3431716	0					
ANR	3431910	ExpressionStatement	name = ( FT_String * ) psnames -> adobe_std_strings ( sid )	427:8:16682:16735	3431716	0	True				
ANR	3431911	AssignmentExpression	name = ( FT_String * ) psnames -> adobe_std_strings ( sid )		3431716	0		=			
ANR	3431912	Identifier	name		3431716	0					
ANR	3431913	CastExpression	( FT_String * ) psnames -> adobe_std_strings ( sid )		3431716	1					
ANR	3431914	CastTarget	FT_String *		3431716	0					
ANR	3431915	CallExpression	psnames -> adobe_std_strings ( sid )		3431716	1					
ANR	3431916	Callee	psnames -> adobe_std_strings		3431716	0					
ANR	3431917	PtrMemberAccess	psnames -> adobe_std_strings		3431716	0					
ANR	3431918	Identifier	psnames		3431716	0					
ANR	3431919	Identifier	adobe_std_strings		3431716	1					
ANR	3431920	ArgumentList	sid		3431716	1					
ANR	3431921	Argument	sid		3431716	0					
ANR	3431922	Identifier	sid		3431716	0					
ANR	3431923	IfStatement	if ( ! name )		3431716	2					
ANR	3431924	Condition	! name	429:11:16749:16753	3431716	0	True				
ANR	3431925	UnaryOperationExpression	! name		3431716	0					
ANR	3431926	UnaryOperator	!		3431716	0					
ANR	3431927	Identifier	name		3431716	1					
ANR	3431928	ContinueStatement	continue ;	430:8:16765:16773	3431716	1	True				
ANR	3431929	IfStatement	"if ( ! ft_strcmp ( glyph_name , name ) )"		3431716	3					
ANR	3431930	Condition	"! ft_strcmp ( glyph_name , name )"	432:11:16787:16816	3431716	0	True				
ANR	3431931	UnaryOperationExpression	"! ft_strcmp ( glyph_name , name )"		3431716	0					
ANR	3431932	UnaryOperator	!		3431716	0					
ANR	3431933	CallExpression	"ft_strcmp ( glyph_name , name )"		3431716	1					
ANR	3431934	Callee	ft_strcmp		3431716	0					
ANR	3431935	Identifier	ft_strcmp		3431716	0					
ANR	3431936	ArgumentList	glyph_name		3431716	1					
ANR	3431937	Argument	glyph_name		3431716	0					
ANR	3431938	Identifier	glyph_name		3431716	0					
ANR	3431939	Argument	name		3431716	1					
ANR	3431940	Identifier	name		3431716	0					
ANR	3431941	ReturnStatement	return i ;	433:8:16828:16836	3431716	1	True				
ANR	3431942	Identifier	i		3431716	0					
ANR	3431943	ReturnStatement	return 0 ;	436:4:16849:16857	3431716	12	True				
ANR	3431944	PrimaryExpression	0		3431716	0					
ANR	3431945	ReturnType	static FT_UInt		3431716	1					
ANR	3431946	Identifier	cff_get_name_index		3431716	2					
ANR	3431947	ParameterList	"CFF_Face face , FT_String * glyph_name"		3431716	3					
ANR	3431948	Parameter	CFF_Face face	377:22:15184:15199	3431716	0	True				
ANR	3431949	ParameterType	CFF_Face		3431716	0					
ANR	3431950	Identifier	face		3431716	1					
ANR	3431951	Parameter	FT_String * glyph_name	378:22:15224:15245	3431716	1	True				
ANR	3431952	ParameterType	FT_String *		3431716	0					
ANR	3431953	Identifier	glyph_name		3431716	1					
ANR	3431954	CFGEntryNode	ENTRY		3431716		True				
ANR	3431955	CFGExitNode	EXIT		3431716		True				
ANR	3431956	Symbol	ft_module_get_service		3431716						
ANR	3431957	Symbol	* * charset		3431716						
ANR	3431958	Symbol	* charset -> sids		3431716						
ANR	3431959	Symbol	charset		3431716						
ANR	3431960	Symbol	FT_Get_Module		3431716						
ANR	3431961	Symbol	glyph_name		3431716						
ANR	3431962	Symbol	FT_FACE		3431716						
ANR	3431963	Symbol	face -> extra . data		3431716						
ANR	3431964	Symbol	* face		3431716						
ANR	3431965	Symbol	POSTSCRIPT_CMAPS		3431716						
ANR	3431966	Symbol	sid		3431716						
ANR	3431967	Symbol	cff -> version_major		3431716						
ANR	3431968	Symbol	library		3431716						
ANR	3431969	Symbol	cff_index_get_string		3431716						
ANR	3431970	Symbol	psnames -> adobe_std_strings		3431716						
ANR	3431971	Symbol	psnames		3431716						
ANR	3431972	Symbol	ft_strcmp		3431716						
ANR	3431973	Symbol	* service		3431716						
ANR	3431974	Symbol	cff -> num_glyphs		3431716						
ANR	3431975	Symbol	cff		3431716						
ANR	3431976	Symbol	i		3431716						
ANR	3431977	Symbol	FT_SERVICE_ID_GLYPH_DICT		3431716						
ANR	3431978	Symbol	& cff -> charset		3431716						
ANR	3431979	Symbol	charset -> sids		3431716						
ANR	3431980	Symbol	face		3431716						
ANR	3431981	Symbol	face -> extra		3431716						
ANR	3431982	Symbol	* cff		3431716						
ANR	3431983	Symbol	* i		3431716						
ANR	3431984	Symbol	service		3431716						
ANR	3431985	Symbol	name		3431716						
ANR	3431986	Symbol	service -> name_index		3431716						
ANR	3431987	Symbol	sfnt_module		3431716						
ANR	3431988	Symbol	* charset		3431716						
ANR	3431989	Symbol	FT_FACE_LIBRARY		3431716						
ANR	3431990	Symbol	* psnames		3431716						
ANR	3431991	Function	cff_ps_has_glyph_names	453:2:17131:17257							
ANR	3431992	FunctionDef	cff_ps_has_glyph_names (FT_Face face)		3431991	0					
ANR	3431993	CompoundStatement		455:2:17189:17257	3431991	0					
ANR	3431994	ReturnStatement	return ( face -> face_flags & FT_FACE_FLAG_GLYPH_NAMES ) > 0 ;	456:4:17195:17253	3431991	0	True				
ANR	3431995	RelationalExpression	( face -> face_flags & FT_FACE_FLAG_GLYPH_NAMES ) > 0		3431991	0		>			
ANR	3431996	BitAndExpression	face -> face_flags & FT_FACE_FLAG_GLYPH_NAMES		3431991	0		&			
ANR	3431997	PtrMemberAccess	face -> face_flags		3431991	0					
ANR	3431998	Identifier	face		3431991	0					
ANR	3431999	Identifier	face_flags		3431991	1					
ANR	3432000	Identifier	FT_FACE_FLAG_GLYPH_NAMES		3431991	1					
ANR	3432001	PrimaryExpression	0		3431991	1					
ANR	3432002	ReturnType	static FT_Int		3431991	1					
ANR	3432003	Identifier	cff_ps_has_glyph_names		3431991	2					
ANR	3432004	ParameterList	FT_Face face		3431991	3					
ANR	3432005	Parameter	FT_Face face	454:26:17171:17183	3431991	0	True				
ANR	3432006	ParameterType	FT_Face		3431991	0					
ANR	3432007	Identifier	face		3431991	1					
ANR	3432008	CFGEntryNode	ENTRY		3431991		True				
ANR	3432009	CFGExitNode	EXIT		3431991		True				
ANR	3432010	Symbol	face		3431991						
ANR	3432011	Symbol	FT_FACE_FLAG_GLYPH_NAMES		3431991						
ANR	3432012	Symbol	face -> face_flags		3431991						
ANR	3432013	Symbol	* face		3431991						
ANR	3432014	Function	cff_ps_get_font_info	460:2:17263:18824							
ANR	3432015	FunctionDef	"cff_ps_get_font_info (CFF_Face face , PS_FontInfoRec * afont_info)"		3432014	0					
ANR	3432016	CompoundStatement		463:2:17382:18824	3432014	0					
ANR	3432017	IdentifierDeclStatement	CFF_Font cff = ( CFF_Font ) face -> extra . data ;	464:4:17388:17432	3432014	0	True				
ANR	3432018	IdentifierDecl	cff = ( CFF_Font ) face -> extra . data		3432014	0					
ANR	3432019	IdentifierDeclType	CFF_Font		3432014	0					
ANR	3432020	Identifier	cff		3432014	1					
ANR	3432021	AssignmentExpression	cff = ( CFF_Font ) face -> extra . data		3432014	2		=			
ANR	3432022	Identifier	cff		3432014	0					
ANR	3432023	CastExpression	( CFF_Font ) face -> extra . data		3432014	1					
ANR	3432024	CastTarget	CFF_Font		3432014	0					
ANR	3432025	MemberAccess	face -> extra . data		3432014	1					
ANR	3432026	PtrMemberAccess	face -> extra		3432014	0					
ANR	3432027	Identifier	face		3432014	0					
ANR	3432028	Identifier	extra		3432014	1					
ANR	3432029	Identifier	data		3432014	1					
ANR	3432030	IdentifierDeclStatement	FT_Error error = FT_Err_Ok ;	465:4:17438:17465	3432014	1	True				
ANR	3432031	IdentifierDecl	error = FT_Err_Ok		3432014	0					
ANR	3432032	IdentifierDeclType	FT_Error		3432014	0					
ANR	3432033	Identifier	error		3432014	1					
ANR	3432034	AssignmentExpression	error = FT_Err_Ok		3432014	2		=			
ANR	3432035	Identifier	FT_Err_Ok		3432014	0					
ANR	3432036	Identifier	FT_Err_Ok		3432014	1					
ANR	3432037	IfStatement	if ( cff && ! cff -> font_info )		3432014	2					
ANR	3432038	Condition	cff && ! cff -> font_info	468:9:17478:17499	3432014	0	True				
ANR	3432039	AndExpression	cff && ! cff -> font_info		3432014	0		&&			
ANR	3432040	Identifier	cff		3432014	0					
ANR	3432041	UnaryOperationExpression	! cff -> font_info		3432014	1					
ANR	3432042	UnaryOperator	!		3432014	0					
ANR	3432043	PtrMemberAccess	cff -> font_info		3432014	1					
ANR	3432044	Identifier	cff		3432014	0					
ANR	3432045	Identifier	font_info		3432014	1					
ANR	3432046	CompoundStatement		10:6:234:280	3432014	1					
ANR	3432047	IdentifierDeclStatement	CFF_FontRecDict dict = & cff -> top_font . font_dict ;	470:6:17515:17568	3432014	0	True				
ANR	3432048	IdentifierDecl	dict = & cff -> top_font . font_dict		3432014	0					
ANR	3432049	IdentifierDeclType	CFF_FontRecDict		3432014	0					
ANR	3432050	Identifier	dict		3432014	1					
ANR	3432051	AssignmentExpression	dict = & cff -> top_font . font_dict		3432014	2		=			
ANR	3432052	Identifier	dict		3432014	0					
ANR	3432053	UnaryOperationExpression	& cff -> top_font . font_dict		3432014	1					
ANR	3432054	UnaryOperator	&		3432014	0					
ANR	3432055	MemberAccess	cff -> top_font . font_dict		3432014	1					
ANR	3432056	PtrMemberAccess	cff -> top_font		3432014	0					
ANR	3432057	Identifier	cff		3432014	0					
ANR	3432058	Identifier	top_font		3432014	1					
ANR	3432059	Identifier	font_dict		3432014	1					
ANR	3432060	IdentifierDeclStatement	PS_FontInfoRec * font_info = NULL ;	471:6:17576:17609	3432014	1	True				
ANR	3432061	IdentifierDecl	* font_info = NULL		3432014	0					
ANR	3432062	IdentifierDeclType	PS_FontInfoRec *		3432014	0					
ANR	3432063	Identifier	font_info		3432014	1					
ANR	3432064	AssignmentExpression	* font_info = NULL		3432014	2		=			
ANR	3432065	Identifier	NULL		3432014	0					
ANR	3432066	Identifier	NULL		3432014	1					
ANR	3432067	IdentifierDeclStatement	FT_Memory memory = face -> root . memory ;	472:6:17617:17663	3432014	2	True				
ANR	3432068	IdentifierDecl	memory = face -> root . memory		3432014	0					
ANR	3432069	IdentifierDeclType	FT_Memory		3432014	0					
ANR	3432070	Identifier	memory		3432014	1					
ANR	3432071	AssignmentExpression	memory = face -> root . memory		3432014	2		=			
ANR	3432072	Identifier	memory		3432014	0					
ANR	3432073	MemberAccess	face -> root . memory		3432014	1					
ANR	3432074	PtrMemberAccess	face -> root		3432014	0					
ANR	3432075	Identifier	face		3432014	0					
ANR	3432076	Identifier	root		3432014	1					
ANR	3432077	Identifier	memory		3432014	1					
ANR	3432078	IfStatement	"if ( FT_ALLOC ( font_info , sizeof ( * font_info ) ) )"		3432014	3					
ANR	3432079	Condition	"FT_ALLOC ( font_info , sizeof ( * font_info ) )"	475:11:17678:17721	3432014	0	True				
ANR	3432080	CallExpression	"FT_ALLOC ( font_info , sizeof ( * font_info ) )"		3432014	0					
ANR	3432081	Callee	FT_ALLOC		3432014	0					
ANR	3432082	Identifier	FT_ALLOC		3432014	0					
ANR	3432083	ArgumentList	font_info		3432014	1					
ANR	3432084	Argument	font_info		3432014	0					
ANR	3432085	Identifier	font_info		3432014	0					
ANR	3432086	Argument	sizeof ( * font_info )		3432014	1					
ANR	3432087	SizeofExpression	sizeof ( * font_info )		3432014	0					
ANR	3432088	Sizeof	sizeof		3432014	0					
ANR	3432089	UnaryOperationExpression	* font_info		3432014	1					
ANR	3432090	UnaryOperator	*		3432014	0					
ANR	3432091	Identifier	font_info		3432014	1					
ANR	3432092	GotoStatement	goto Fail ;	476:8:17733:17742	3432014	1	True				
ANR	3432093	Identifier	Fail		3432014	0					
ANR	3432094	ExpressionStatement	"font_info -> version = cff_index_get_sid_string ( cff , dict -> version )"	478:6:17751:17879	3432014	4	True				
ANR	3432095	AssignmentExpression	"font_info -> version = cff_index_get_sid_string ( cff , dict -> version )"		3432014	0		=			
ANR	3432096	PtrMemberAccess	font_info -> version		3432014	0					
ANR	3432097	Identifier	font_info		3432014	0					
ANR	3432098	Identifier	version		3432014	1					
ANR	3432099	CallExpression	"cff_index_get_sid_string ( cff , dict -> version )"		3432014	1					
ANR	3432100	Callee	cff_index_get_sid_string		3432014	0					
ANR	3432101	Identifier	cff_index_get_sid_string		3432014	0					
ANR	3432102	ArgumentList	cff		3432014	1					
ANR	3432103	Argument	cff		3432014	0					
ANR	3432104	Identifier	cff		3432014	0					
ANR	3432105	Argument	dict -> version		3432014	1					
ANR	3432106	PtrMemberAccess	dict -> version		3432014	0					
ANR	3432107	Identifier	dict		3432014	0					
ANR	3432108	Identifier	version		3432014	1					
ANR	3432109	ExpressionStatement	"font_info -> notice = cff_index_get_sid_string ( cff , dict -> notice )"	480:6:17887:18014	3432014	5	True				
ANR	3432110	AssignmentExpression	"font_info -> notice = cff_index_get_sid_string ( cff , dict -> notice )"		3432014	0		=			
ANR	3432111	PtrMemberAccess	font_info -> notice		3432014	0					
ANR	3432112	Identifier	font_info		3432014	0					
ANR	3432113	Identifier	notice		3432014	1					
ANR	3432114	CallExpression	"cff_index_get_sid_string ( cff , dict -> notice )"		3432014	1					
ANR	3432115	Callee	cff_index_get_sid_string		3432014	0					
ANR	3432116	Identifier	cff_index_get_sid_string		3432014	0					
ANR	3432117	ArgumentList	cff		3432014	1					
ANR	3432118	Argument	cff		3432014	0					
ANR	3432119	Identifier	cff		3432014	0					
ANR	3432120	Argument	dict -> notice		3432014	1					
ANR	3432121	PtrMemberAccess	dict -> notice		3432014	0					
ANR	3432122	Identifier	dict		3432014	0					
ANR	3432123	Identifier	notice		3432014	1					
ANR	3432124	ExpressionStatement	"font_info -> full_name = cff_index_get_sid_string ( cff , dict -> full_name )"	482:6:18022:18152	3432014	6	True				
ANR	3432125	AssignmentExpression	"font_info -> full_name = cff_index_get_sid_string ( cff , dict -> full_name )"		3432014	0		=			
ANR	3432126	PtrMemberAccess	font_info -> full_name		3432014	0					
ANR	3432127	Identifier	font_info		3432014	0					
ANR	3432128	Identifier	full_name		3432014	1					
ANR	3432129	CallExpression	"cff_index_get_sid_string ( cff , dict -> full_name )"		3432014	1					
ANR	3432130	Callee	cff_index_get_sid_string		3432014	0					
ANR	3432131	Identifier	cff_index_get_sid_string		3432014	0					
ANR	3432132	ArgumentList	cff		3432014	1					
ANR	3432133	Argument	cff		3432014	0					
ANR	3432134	Identifier	cff		3432014	0					
ANR	3432135	Argument	dict -> full_name		3432014	1					
ANR	3432136	PtrMemberAccess	dict -> full_name		3432014	0					
ANR	3432137	Identifier	dict		3432014	0					
ANR	3432138	Identifier	full_name		3432014	1					
ANR	3432139	ExpressionStatement	"font_info -> family_name = cff_index_get_sid_string ( cff , dict -> family_name )"	484:6:18160:18292	3432014	7	True				
ANR	3432140	AssignmentExpression	"font_info -> family_name = cff_index_get_sid_string ( cff , dict -> family_name )"		3432014	0		=			
ANR	3432141	PtrMemberAccess	font_info -> family_name		3432014	0					
ANR	3432142	Identifier	font_info		3432014	0					
ANR	3432143	Identifier	family_name		3432014	1					
ANR	3432144	CallExpression	"cff_index_get_sid_string ( cff , dict -> family_name )"		3432014	1					
ANR	3432145	Callee	cff_index_get_sid_string		3432014	0					
ANR	3432146	Identifier	cff_index_get_sid_string		3432014	0					
ANR	3432147	ArgumentList	cff		3432014	1					
ANR	3432148	Argument	cff		3432014	0					
ANR	3432149	Identifier	cff		3432014	0					
ANR	3432150	Argument	dict -> family_name		3432014	1					
ANR	3432151	PtrMemberAccess	dict -> family_name		3432014	0					
ANR	3432152	Identifier	dict		3432014	0					
ANR	3432153	Identifier	family_name		3432014	1					
ANR	3432154	ExpressionStatement	"font_info -> weight = cff_index_get_sid_string ( cff , dict -> weight )"	486:6:18300:18427	3432014	8	True				
ANR	3432155	AssignmentExpression	"font_info -> weight = cff_index_get_sid_string ( cff , dict -> weight )"		3432014	0		=			
ANR	3432156	PtrMemberAccess	font_info -> weight		3432014	0					
ANR	3432157	Identifier	font_info		3432014	0					
ANR	3432158	Identifier	weight		3432014	1					
ANR	3432159	CallExpression	"cff_index_get_sid_string ( cff , dict -> weight )"		3432014	1					
ANR	3432160	Callee	cff_index_get_sid_string		3432014	0					
ANR	3432161	Identifier	cff_index_get_sid_string		3432014	0					
ANR	3432162	ArgumentList	cff		3432014	1					
ANR	3432163	Argument	cff		3432014	0					
ANR	3432164	Identifier	cff		3432014	0					
ANR	3432165	Argument	dict -> weight		3432014	1					
ANR	3432166	PtrMemberAccess	dict -> weight		3432014	0					
ANR	3432167	Identifier	dict		3432014	0					
ANR	3432168	Identifier	weight		3432014	1					
ANR	3432169	ExpressionStatement	font_info -> italic_angle = dict -> italic_angle	488:6:18435:18486	3432014	9	True				
ANR	3432170	AssignmentExpression	font_info -> italic_angle = dict -> italic_angle		3432014	0		=			
ANR	3432171	PtrMemberAccess	font_info -> italic_angle		3432014	0					
ANR	3432172	Identifier	font_info		3432014	0					
ANR	3432173	Identifier	italic_angle		3432014	1					
ANR	3432174	PtrMemberAccess	dict -> italic_angle		3432014	1					
ANR	3432175	Identifier	dict		3432014	0					
ANR	3432176	Identifier	italic_angle		3432014	1					
ANR	3432177	ExpressionStatement	font_info -> is_fixed_pitch = dict -> is_fixed_pitch	489:6:18494:18547	3432014	10	True				
ANR	3432178	AssignmentExpression	font_info -> is_fixed_pitch = dict -> is_fixed_pitch		3432014	0		=			
ANR	3432179	PtrMemberAccess	font_info -> is_fixed_pitch		3432014	0					
ANR	3432180	Identifier	font_info		3432014	0					
ANR	3432181	Identifier	is_fixed_pitch		3432014	1					
ANR	3432182	PtrMemberAccess	dict -> is_fixed_pitch		3432014	1					
ANR	3432183	Identifier	dict		3432014	0					
ANR	3432184	Identifier	is_fixed_pitch		3432014	1					
ANR	3432185	ExpressionStatement	font_info -> underline_position = ( FT_Short ) dict -> underline_position	490:6:18555:18622	3432014	11	True				
ANR	3432186	AssignmentExpression	font_info -> underline_position = ( FT_Short ) dict -> underline_position		3432014	0		=			
ANR	3432187	PtrMemberAccess	font_info -> underline_position		3432014	0					
ANR	3432188	Identifier	font_info		3432014	0					
ANR	3432189	Identifier	underline_position		3432014	1					
ANR	3432190	CastExpression	( FT_Short ) dict -> underline_position		3432014	1					
ANR	3432191	CastTarget	FT_Short		3432014	0					
ANR	3432192	PtrMemberAccess	dict -> underline_position		3432014	1					
ANR	3432193	Identifier	dict		3432014	0					
ANR	3432194	Identifier	underline_position		3432014	1					
ANR	3432195	ExpressionStatement	font_info -> underline_thickness = ( FT_UShort ) dict -> underline_thickness	491:6:18630:18699	3432014	12	True				
ANR	3432196	AssignmentExpression	font_info -> underline_thickness = ( FT_UShort ) dict -> underline_thickness		3432014	0		=			
ANR	3432197	PtrMemberAccess	font_info -> underline_thickness		3432014	0					
ANR	3432198	Identifier	font_info		3432014	0					
ANR	3432199	Identifier	underline_thickness		3432014	1					
ANR	3432200	CastExpression	( FT_UShort ) dict -> underline_thickness		3432014	1					
ANR	3432201	CastTarget	FT_UShort		3432014	0					
ANR	3432202	PtrMemberAccess	dict -> underline_thickness		3432014	1					
ANR	3432203	Identifier	dict		3432014	0					
ANR	3432204	Identifier	underline_thickness		3432014	1					
ANR	3432205	ExpressionStatement	cff -> font_info = font_info	493:6:18708:18734	3432014	13	True				
ANR	3432206	AssignmentExpression	cff -> font_info = font_info		3432014	0		=			
ANR	3432207	PtrMemberAccess	cff -> font_info		3432014	0					
ANR	3432208	Identifier	cff		3432014	0					
ANR	3432209	Identifier	font_info		3432014	1					
ANR	3432210	Identifier	font_info		3432014	1					
ANR	3432211	IfStatement	if ( cff )		3432014	3					
ANR	3432212	Condition	cff	496:9:18752:18754	3432014	0	True				
ANR	3432213	Identifier	cff		3432014	0					
ANR	3432214	ExpressionStatement	* afont_info = * cff -> font_info	497:6:18764:18793	3432014	1	True				
ANR	3432215	AssignmentExpression	* afont_info = * cff -> font_info		3432014	0		=			
ANR	3432216	UnaryOperationExpression	* afont_info		3432014	0					
ANR	3432217	UnaryOperator	*		3432014	0					
ANR	3432218	Identifier	afont_info		3432014	1					
ANR	3432219	UnaryOperationExpression	* cff -> font_info		3432014	1					
ANR	3432220	UnaryOperator	*		3432014	0					
ANR	3432221	PtrMemberAccess	cff -> font_info		3432014	1					
ANR	3432222	Identifier	cff		3432014	0					
ANR	3432223	Identifier	font_info		3432014	1					
ANR	3432224	Label	Fail :	499:2:18798:18802	3432014	4	True				
ANR	3432225	Identifier	Fail		3432014	0					
ANR	3432226	ReturnStatement	return error ;	500:4:18808:18820	3432014	5	True				
ANR	3432227	Identifier	error		3432014	0					
ANR	3432228	ReturnType	static FT_Error		3432014	1					
ANR	3432229	Identifier	cff_ps_get_font_info		3432014	2					
ANR	3432230	ParameterList	"CFF_Face face , PS_FontInfoRec * afont_info"		3432014	3					
ANR	3432231	Parameter	CFF_Face face	461:24:17303:17323	3432014	0	True				
ANR	3432232	ParameterType	CFF_Face		3432014	0					
ANR	3432233	Identifier	face		3432014	1					
ANR	3432234	Parameter	PS_FontInfoRec * afont_info	462:24:17350:17376	3432014	1	True				
ANR	3432235	ParameterType	PS_FontInfoRec *		3432014	0					
ANR	3432236	Identifier	afont_info		3432014	1					
ANR	3432237	CFGEntryNode	ENTRY		3432014		True				
ANR	3432238	CFGExitNode	EXIT		3432014		True				
ANR	3432239	Symbol	memory		3432014						
ANR	3432240	Symbol	dict -> family_name		3432014						
ANR	3432241	Symbol	FT_Err_Ok		3432014						
ANR	3432242	Symbol	font_info -> italic_angle		3432014						
ANR	3432243	Symbol	dict -> full_name		3432014						
ANR	3432244	Symbol	face -> extra . data		3432014						
ANR	3432245	Symbol	error		3432014						
ANR	3432246	Symbol	font_info -> notice		3432014						
ANR	3432247	Symbol	* face		3432014						
ANR	3432248	Symbol	* font_info		3432014						
ANR	3432249	Symbol	font_info -> family_name		3432014						
ANR	3432250	Symbol	dict -> underline_position		3432014						
ANR	3432251	Symbol	* afont_info		3432014						
ANR	3432252	Symbol	font_info -> is_fixed_pitch		3432014						
ANR	3432253	Symbol	& cff -> top_font		3432014						
ANR	3432254	Symbol	FT_ALLOC		3432014						
ANR	3432255	Symbol	dict -> weight		3432014						
ANR	3432256	Symbol	face -> root		3432014						
ANR	3432257	Symbol	dict -> version		3432014						
ANR	3432258	Symbol	dict		3432014						
ANR	3432259	Symbol	cff -> top_font		3432014						
ANR	3432260	Symbol	afont_info		3432014						
ANR	3432261	Symbol	dict -> underline_thickness		3432014						
ANR	3432262	Symbol	cff -> font_info		3432014						
ANR	3432263	Symbol	cff		3432014						
ANR	3432264	Symbol	NULL		3432014						
ANR	3432265	Symbol	& cff -> top_font . font_dict		3432014						
ANR	3432266	Symbol	font_info -> underline_position		3432014						
ANR	3432267	Symbol	dict -> is_fixed_pitch		3432014						
ANR	3432268	Symbol	font_info		3432014						
ANR	3432269	Symbol	font_info -> full_name		3432014						
ANR	3432270	Symbol	* dict		3432014						
ANR	3432271	Symbol	face		3432014						
ANR	3432272	Symbol	face -> extra		3432014						
ANR	3432273	Symbol	* cff		3432014						
ANR	3432274	Symbol	font_info -> version		3432014						
ANR	3432275	Symbol	face -> root . memory		3432014						
ANR	3432276	Symbol	dict -> italic_angle		3432014						
ANR	3432277	Symbol	cff_index_get_sid_string		3432014						
ANR	3432278	Symbol	font_info -> weight		3432014						
ANR	3432279	Symbol	font_info -> underline_thickness		3432014						
ANR	3432280	Symbol	* * cff		3432014						
ANR	3432281	Symbol	dict -> notice		3432014						
ANR	3432282	Symbol	* cff -> font_info		3432014						
ANR	3432283	Function	cff_ps_get_font_extra	504:2:18830:21085							
ANR	3432284	FunctionDef	"cff_ps_get_font_extra (CFF_Face face , PS_FontExtraRec * afont_extra)"		3432283	0					
ANR	3432285	CompoundStatement		507:2:18954:21085	3432283	0					
ANR	3432286	IdentifierDeclStatement	CFF_Font cff = ( CFF_Font ) face -> extra . data ;	508:4:18960:19004	3432283	0	True				
ANR	3432287	IdentifierDecl	cff = ( CFF_Font ) face -> extra . data		3432283	0					
ANR	3432288	IdentifierDeclType	CFF_Font		3432283	0					
ANR	3432289	Identifier	cff		3432283	1					
ANR	3432290	AssignmentExpression	cff = ( CFF_Font ) face -> extra . data		3432283	2		=			
ANR	3432291	Identifier	cff		3432283	0					
ANR	3432292	CastExpression	( CFF_Font ) face -> extra . data		3432283	1					
ANR	3432293	CastTarget	CFF_Font		3432283	0					
ANR	3432294	MemberAccess	face -> extra . data		3432283	1					
ANR	3432295	PtrMemberAccess	face -> extra		3432283	0					
ANR	3432296	Identifier	face		3432283	0					
ANR	3432297	Identifier	extra		3432283	1					
ANR	3432298	Identifier	data		3432283	1					
ANR	3432299	IdentifierDeclStatement	FT_Error error = FT_Err_Ok ;	509:4:19010:19037	3432283	1	True				
ANR	3432300	IdentifierDecl	error = FT_Err_Ok		3432283	0					
ANR	3432301	IdentifierDeclType	FT_Error		3432283	0					
ANR	3432302	Identifier	error		3432283	1					
ANR	3432303	AssignmentExpression	error = FT_Err_Ok		3432283	2		=			
ANR	3432304	Identifier	FT_Err_Ok		3432283	0					
ANR	3432305	Identifier	FT_Err_Ok		3432283	1					
ANR	3432306	IfStatement	if ( cff && cff -> font_extra == NULL )		3432283	2					
ANR	3432307	Condition	cff && cff -> font_extra == NULL	512:9:19050:19079	3432283	0	True				
ANR	3432308	AndExpression	cff && cff -> font_extra == NULL		3432283	0		&&			
ANR	3432309	Identifier	cff		3432283	0					
ANR	3432310	EqualityExpression	cff -> font_extra == NULL		3432283	1		==			
ANR	3432311	PtrMemberAccess	cff -> font_extra		3432283	0					
ANR	3432312	Identifier	cff		3432283	0					
ANR	3432313	Identifier	font_extra		3432283	1					
ANR	3432314	Identifier	NULL		3432283	1					
ANR	3432315	CompoundStatement		11:6:302:339	3432283	1					
ANR	3432316	IdentifierDeclStatement	CFF_FontRecDict dict = & cff -> top_font . font_dict ;	514:6:19095:19150	3432283	0	True				
ANR	3432317	IdentifierDecl	dict = & cff -> top_font . font_dict		3432283	0					
ANR	3432318	IdentifierDeclType	CFF_FontRecDict		3432283	0					
ANR	3432319	Identifier	dict		3432283	1					
ANR	3432320	AssignmentExpression	dict = & cff -> top_font . font_dict		3432283	2		=			
ANR	3432321	Identifier	dict		3432283	0					
ANR	3432322	UnaryOperationExpression	& cff -> top_font . font_dict		3432283	1					
ANR	3432323	UnaryOperator	&		3432283	0					
ANR	3432324	MemberAccess	cff -> top_font . font_dict		3432283	1					
ANR	3432325	PtrMemberAccess	cff -> top_font		3432283	0					
ANR	3432326	Identifier	cff		3432283	0					
ANR	3432327	Identifier	top_font		3432283	1					
ANR	3432328	Identifier	font_dict		3432283	1					
ANR	3432329	IdentifierDeclStatement	PS_FontExtraRec * font_extra = NULL ;	515:6:19158:19193	3432283	1	True				
ANR	3432330	IdentifierDecl	* font_extra = NULL		3432283	0					
ANR	3432331	IdentifierDeclType	PS_FontExtraRec *		3432283	0					
ANR	3432332	Identifier	font_extra		3432283	1					
ANR	3432333	AssignmentExpression	* font_extra = NULL		3432283	2		=			
ANR	3432334	Identifier	NULL		3432283	0					
ANR	3432335	Identifier	NULL		3432283	1					
ANR	3432336	IdentifierDeclStatement	FT_Memory memory = face -> root . memory ;	516:6:19201:19249	3432283	2	True				
ANR	3432337	IdentifierDecl	memory = face -> root . memory		3432283	0					
ANR	3432338	IdentifierDeclType	FT_Memory		3432283	0					
ANR	3432339	Identifier	memory		3432283	1					
ANR	3432340	AssignmentExpression	memory = face -> root . memory		3432283	2		=			
ANR	3432341	Identifier	memory		3432283	0					
ANR	3432342	MemberAccess	face -> root . memory		3432283	1					
ANR	3432343	PtrMemberAccess	face -> root		3432283	0					
ANR	3432344	Identifier	face		3432283	0					
ANR	3432345	Identifier	root		3432283	1					
ANR	3432346	Identifier	memory		3432283	1					
ANR	3432347	IdentifierDeclStatement	FT_String * embedded_postscript ;	517:6:19257:19294	3432283	3	True				
ANR	3432348	IdentifierDecl	* embedded_postscript		3432283	0					
ANR	3432349	IdentifierDeclType	FT_String *		3432283	0					
ANR	3432350	Identifier	embedded_postscript		3432283	1					
ANR	3432351	IfStatement	"if ( FT_ALLOC ( font_extra , sizeof ( * font_extra ) ) )"		3432283	4					
ANR	3432352	Condition	"FT_ALLOC ( font_extra , sizeof ( * font_extra ) )"	520:11:19309:19354	3432283	0	True				
ANR	3432353	CallExpression	"FT_ALLOC ( font_extra , sizeof ( * font_extra ) )"		3432283	0					
ANR	3432354	Callee	FT_ALLOC		3432283	0					
ANR	3432355	Identifier	FT_ALLOC		3432283	0					
ANR	3432356	ArgumentList	font_extra		3432283	1					
ANR	3432357	Argument	font_extra		3432283	0					
ANR	3432358	Identifier	font_extra		3432283	0					
ANR	3432359	Argument	sizeof ( * font_extra )		3432283	1					
ANR	3432360	SizeofExpression	sizeof ( * font_extra )		3432283	0					
ANR	3432361	Sizeof	sizeof		3432283	0					
ANR	3432362	UnaryOperationExpression	* font_extra		3432283	1					
ANR	3432363	UnaryOperator	*		3432283	0					
ANR	3432364	Identifier	font_extra		3432283	1					
ANR	3432365	GotoStatement	goto Fail ;	521:8:19366:19375	3432283	1	True				
ANR	3432366	Identifier	Fail		3432283	0					
ANR	3432367	ExpressionStatement	font_extra -> fs_type = 0U	523:6:19384:19408	3432283	5	True				
ANR	3432368	AssignmentExpression	font_extra -> fs_type = 0U		3432283	0		=			
ANR	3432369	PtrMemberAccess	font_extra -> fs_type		3432283	0					
ANR	3432370	Identifier	font_extra		3432283	0					
ANR	3432371	Identifier	fs_type		3432283	1					
ANR	3432372	PrimaryExpression	0U		3432283	1					
ANR	3432373	ExpressionStatement	"embedded_postscript = cff_index_get_sid_string ( cff , dict -> embedded_postscript )"	525:6:19417:19557	3432283	6	True				
ANR	3432374	AssignmentExpression	"embedded_postscript = cff_index_get_sid_string ( cff , dict -> embedded_postscript )"		3432283	0		=			
ANR	3432375	Identifier	embedded_postscript		3432283	0					
ANR	3432376	CallExpression	"cff_index_get_sid_string ( cff , dict -> embedded_postscript )"		3432283	1					
ANR	3432377	Callee	cff_index_get_sid_string		3432283	0					
ANR	3432378	Identifier	cff_index_get_sid_string		3432283	0					
ANR	3432379	ArgumentList	cff		3432283	1					
ANR	3432380	Argument	cff		3432283	0					
ANR	3432381	Identifier	cff		3432283	0					
ANR	3432382	Argument	dict -> embedded_postscript		3432283	1					
ANR	3432383	PtrMemberAccess	dict -> embedded_postscript		3432283	0					
ANR	3432384	Identifier	dict		3432283	0					
ANR	3432385	Identifier	embedded_postscript		3432283	1					
ANR	3432386	IfStatement	if ( embedded_postscript )		3432283	7					
ANR	3432387	Condition	embedded_postscript	528:11:19570:19588	3432283	0	True				
ANR	3432388	Identifier	embedded_postscript		3432283	0					
ANR	3432389	CompoundStatement		25:8:687:708	3432283	1					
ANR	3432390	IdentifierDeclStatement	FT_String * start_fstype ;	530:8:19608:19632	3432283	0	True				
ANR	3432391	IdentifierDecl	* start_fstype		3432283	0					
ANR	3432392	IdentifierDeclType	FT_String *		3432283	0					
ANR	3432393	Identifier	start_fstype		3432283	1					
ANR	3432394	IdentifierDeclStatement	FT_String * start_def ;	531:8:19642:19663	3432283	1	True				
ANR	3432395	IdentifierDecl	* start_def		3432283	0					
ANR	3432396	IdentifierDeclType	FT_String *		3432283	0					
ANR	3432397	Identifier	start_def		3432283	1					
ANR	3432398	IfStatement	"if ( ( start_fstype = ft_strstr ( embedded_postscript , ""/FSType"" ) ) != NULL && ( start_def = ft_strstr ( start_fstype + sizeof ( ""/FSType"" ) - 1 , ""def"" ) ) != NULL )"		3432283	2					
ANR	3432399	Condition	"( start_fstype = ft_strstr ( embedded_postscript , ""/FSType"" ) ) != NULL && ( start_def = ft_strstr ( start_fstype + sizeof ( ""/FSType"" ) - 1 , ""def"" ) ) != NULL"	535:13:19751:20042	3432283	0	True				
ANR	3432400	AndExpression	"( start_fstype = ft_strstr ( embedded_postscript , ""/FSType"" ) ) != NULL && ( start_def = ft_strstr ( start_fstype + sizeof ( ""/FSType"" ) - 1 , ""def"" ) ) != NULL"		3432283	0		&&			
ANR	3432401	EqualityExpression	"( start_fstype = ft_strstr ( embedded_postscript , ""/FSType"" ) ) != NULL"		3432283	0		!=			
ANR	3432402	AssignmentExpression	"start_fstype = ft_strstr ( embedded_postscript , ""/FSType"" )"		3432283	0		=			
ANR	3432403	Identifier	start_fstype		3432283	0					
ANR	3432404	CallExpression	"ft_strstr ( embedded_postscript , ""/FSType"" )"		3432283	1					
ANR	3432405	Callee	ft_strstr		3432283	0					
ANR	3432406	Identifier	ft_strstr		3432283	0					
ANR	3432407	ArgumentList	embedded_postscript		3432283	1					
ANR	3432408	Argument	embedded_postscript		3432283	0					
ANR	3432409	Identifier	embedded_postscript		3432283	0					
ANR	3432410	Argument	"""/FSType"""		3432283	1					
ANR	3432411	PrimaryExpression	"""/FSType"""		3432283	0					
ANR	3432412	Identifier	NULL		3432283	1					
ANR	3432413	EqualityExpression	"( start_def = ft_strstr ( start_fstype + sizeof ( ""/FSType"" ) - 1 , ""def"" ) ) != NULL"		3432283	1		!=			
ANR	3432414	AssignmentExpression	"start_def = ft_strstr ( start_fstype + sizeof ( ""/FSType"" ) - 1 , ""def"" )"		3432283	0		=			
ANR	3432415	Identifier	start_def		3432283	0					
ANR	3432416	CallExpression	"ft_strstr ( start_fstype + sizeof ( ""/FSType"" ) - 1 , ""def"" )"		3432283	1					
ANR	3432417	Callee	ft_strstr		3432283	0					
ANR	3432418	Identifier	ft_strstr		3432283	0					
ANR	3432419	ArgumentList	"start_fstype + sizeof ( ""/FSType"" ) - 1"		3432283	1					
ANR	3432420	Argument	"start_fstype + sizeof ( ""/FSType"" ) - 1"		3432283	0					
ANR	3432421	AdditiveExpression	"start_fstype + sizeof ( ""/FSType"" ) - 1"		3432283	0		+			
ANR	3432422	Identifier	start_fstype		3432283	0					
ANR	3432423	AdditiveExpression	"sizeof ( ""/FSType"" ) - 1"		3432283	1		-			
ANR	3432424	SizeofExpression	"sizeof ( ""/FSType"" )"		3432283	0					
ANR	3432425	Sizeof	sizeof		3432283	0					
ANR	3432426	PrimaryExpression	"""/FSType"""		3432283	1					
ANR	3432427	PrimaryExpression	1		3432283	1					
ANR	3432428	Argument	"""def"""		3432283	1					
ANR	3432429	PrimaryExpression	"""def"""		3432283	0					
ANR	3432430	Identifier	NULL		3432283	1					
ANR	3432431	CompoundStatement		35:10:1121:1134	3432283	1					
ANR	3432432	IdentifierDeclStatement	FT_String * s ;	541:10:20076:20089	3432283	0	True				
ANR	3432433	IdentifierDecl	* s		3432283	0					
ANR	3432434	IdentifierDeclType	FT_String *		3432283	0					
ANR	3432435	Identifier	s		3432283	1					
ANR	3432436	ForStatement	"for ( s = start_fstype + sizeof ( ""/FSType"" ) - 1 ; s != start_def ; s ++ )"		3432283	1					
ANR	3432437	ForInit	"s = start_fstype + sizeof ( ""/FSType"" ) - 1 ;"	544:16:20109:20152	3432283	0	True				
ANR	3432438	AssignmentExpression	"s = start_fstype + sizeof ( ""/FSType"" ) - 1"		3432283	0		=			
ANR	3432439	Identifier	s		3432283	0					
ANR	3432440	AdditiveExpression	"start_fstype + sizeof ( ""/FSType"" ) - 1"		3432283	1		+			
ANR	3432441	Identifier	start_fstype		3432283	0					
ANR	3432442	AdditiveExpression	"sizeof ( ""/FSType"" ) - 1"		3432283	1		-			
ANR	3432443	SizeofExpression	"sizeof ( ""/FSType"" )"		3432283	0					
ANR	3432444	Sizeof	sizeof		3432283	0					
ANR	3432445	PrimaryExpression	"""/FSType"""		3432283	1					
ANR	3432446	PrimaryExpression	1		3432283	1					
ANR	3432447	Condition	s != start_def	545:16:20170:20183	3432283	1	True				
ANR	3432448	EqualityExpression	s != start_def		3432283	0		!=			
ANR	3432449	Identifier	s		3432283	0					
ANR	3432450	Identifier	start_def		3432283	1					
ANR	3432451	PostIncDecOperationExpression	s ++	546:16:20202:20204	3432283	2	True				
ANR	3432452	Identifier	s		3432283	0					
ANR	3432453	IncDec	++		3432283	1					
ANR	3432454	CompoundStatement		41:10:1263:1263	3432283	3					
ANR	3432455	IfStatement	if ( * s >= '0' && * s <= '9' )		3432283	0					
ANR	3432456	Condition	* s >= '0' && * s <= '9'	548:17:20237:20258	3432283	0	True				
ANR	3432457	AndExpression	* s >= '0' && * s <= '9'		3432283	0		&&			
ANR	3432458	RelationalExpression	* s >= '0'		3432283	0		>=			
ANR	3432459	UnaryOperationExpression	* s		3432283	0					
ANR	3432460	UnaryOperator	*		3432283	0					
ANR	3432461	Identifier	s		3432283	1					
ANR	3432462	PrimaryExpression	'0'		3432283	1					
ANR	3432463	RelationalExpression	* s <= '9'		3432283	1		<=			
ANR	3432464	UnaryOperationExpression	* s		3432283	0					
ANR	3432465	UnaryOperator	*		3432283	0					
ANR	3432466	Identifier	s		3432283	1					
ANR	3432467	PrimaryExpression	'9'		3432283	1					
ANR	3432468	CompoundStatement		43:12:1319:1319	3432283	1					
ANR	3432469	IfStatement	if ( font_extra -> fs_type >= ( FT_USHORT_MAX - 9 ) / 10 )		3432283	0					
ANR	3432470	Condition	font_extra -> fs_type >= ( FT_USHORT_MAX - 9 ) / 10	550:19:20295:20343	3432283	0	True				
ANR	3432471	RelationalExpression	font_extra -> fs_type >= ( FT_USHORT_MAX - 9 ) / 10		3432283	0		>=			
ANR	3432472	PtrMemberAccess	font_extra -> fs_type		3432283	0					
ANR	3432473	Identifier	font_extra		3432283	0					
ANR	3432474	Identifier	fs_type		3432283	1					
ANR	3432475	MultiplicativeExpression	( FT_USHORT_MAX - 9 ) / 10		3432283	1		/			
ANR	3432476	AdditiveExpression	FT_USHORT_MAX - 9		3432283	0		-			
ANR	3432477	Identifier	FT_USHORT_MAX		3432283	0					
ANR	3432478	PrimaryExpression	9		3432283	1					
ANR	3432479	PrimaryExpression	10		3432283	1					
ANR	3432480	CompoundStatement		45:14:1406:1406	3432283	1					
ANR	3432481	ExpressionStatement	font_extra -> fs_type = 0U	553:16:20438:20462	3432283	0	True				
ANR	3432482	AssignmentExpression	font_extra -> fs_type = 0U		3432283	0		=			
ANR	3432483	PtrMemberAccess	font_extra -> fs_type		3432283	0					
ANR	3432484	Identifier	font_extra		3432283	0					
ANR	3432485	Identifier	fs_type		3432283	1					
ANR	3432486	PrimaryExpression	0U		3432283	1					
ANR	3432487	BreakStatement	break ;	554:16:20480:20485	3432283	1	True				
ANR	3432488	ExpressionStatement	font_extra -> fs_type *= 10	557:14:20518:20543	3432283	1	True				
ANR	3432489	AssignmentExpression	font_extra -> fs_type *= 10		3432283	0		*=			
ANR	3432490	PtrMemberAccess	font_extra -> fs_type		3432283	0					
ANR	3432491	Identifier	font_extra		3432283	0					
ANR	3432492	Identifier	fs_type		3432283	1					
ANR	3432493	PrimaryExpression	10		3432283	1					
ANR	3432494	ExpressionStatement	font_extra -> fs_type += ( FT_UShort ) ( * s - '0' )	558:14:20559:20605	3432283	2	True				
ANR	3432495	AssignmentExpression	font_extra -> fs_type += ( FT_UShort ) ( * s - '0' )		3432283	0		+=			
ANR	3432496	PtrMemberAccess	font_extra -> fs_type		3432283	0					
ANR	3432497	Identifier	font_extra		3432283	0					
ANR	3432498	Identifier	fs_type		3432283	1					
ANR	3432499	CastExpression	( FT_UShort ) ( * s - '0' )		3432283	1					
ANR	3432500	CastTarget	FT_UShort		3432283	0					
ANR	3432501	AdditiveExpression	* s - '0'		3432283	1		-			
ANR	3432502	UnaryOperationExpression	* s		3432283	0					
ANR	3432503	UnaryOperator	*		3432283	0					
ANR	3432504	Identifier	s		3432283	1					
ANR	3432505	PrimaryExpression	'0'		3432283	1					
ANR	3432506	ElseStatement	else		3432283	0					
ANR	3432507	IfStatement	if ( * s != ' ' && * s != '\\n' && * s != '\\r' )		3432283	0					
ANR	3432508	Condition	* s != ' ' && * s != '\\n' && * s != '\\r'	560:22:20643:20679	3432283	0	True				
ANR	3432509	AndExpression	* s != ' ' && * s != '\\n' && * s != '\\r'		3432283	0		&&			
ANR	3432510	EqualityExpression	* s != ' '		3432283	0		!=			
ANR	3432511	UnaryOperationExpression	* s		3432283	0					
ANR	3432512	UnaryOperator	*		3432283	0					
ANR	3432513	Identifier	s		3432283	1					
ANR	3432514	PrimaryExpression	' '		3432283	1					
ANR	3432515	AndExpression	* s != '\\n' && * s != '\\r'		3432283	1		&&			
ANR	3432516	EqualityExpression	* s != '\\n'		3432283	0		!=			
ANR	3432517	UnaryOperationExpression	* s		3432283	0					
ANR	3432518	UnaryOperator	*		3432283	0					
ANR	3432519	Identifier	s		3432283	1					
ANR	3432520	PrimaryExpression	'\\n'		3432283	1					
ANR	3432521	EqualityExpression	* s != '\\r'		3432283	1		!=			
ANR	3432522	UnaryOperationExpression	* s		3432283	0					
ANR	3432523	UnaryOperator	*		3432283	0					
ANR	3432524	Identifier	s		3432283	1					
ANR	3432525	PrimaryExpression	'\\r'		3432283	1					
ANR	3432526	CompoundStatement		55:12:1740:1740	3432283	1					
ANR	3432527	ExpressionStatement	font_extra -> fs_type = 0U	564:14:20867:20891	3432283	0	True				
ANR	3432528	AssignmentExpression	font_extra -> fs_type = 0U		3432283	0		=			
ANR	3432529	PtrMemberAccess	font_extra -> fs_type		3432283	0					
ANR	3432530	Identifier	font_extra		3432283	0					
ANR	3432531	Identifier	fs_type		3432283	1					
ANR	3432532	PrimaryExpression	0U		3432283	1					
ANR	3432533	BreakStatement	break ;	565:14:20907:20912	3432283	1	True				
ANR	3432534	ExpressionStatement	cff -> font_extra = font_extra	571:6:20965:20993	3432283	8	True				
ANR	3432535	AssignmentExpression	cff -> font_extra = font_extra		3432283	0		=			
ANR	3432536	PtrMemberAccess	cff -> font_extra		3432283	0					
ANR	3432537	Identifier	cff		3432283	0					
ANR	3432538	Identifier	font_extra		3432283	1					
ANR	3432539	Identifier	font_extra		3432283	1					
ANR	3432540	IfStatement	if ( cff )		3432283	3					
ANR	3432541	Condition	cff	574:9:21011:21013	3432283	0	True				
ANR	3432542	Identifier	cff		3432283	0					
ANR	3432543	ExpressionStatement	* afont_extra = * cff -> font_extra	575:6:21023:21054	3432283	1	True				
ANR	3432544	AssignmentExpression	* afont_extra = * cff -> font_extra		3432283	0		=			
ANR	3432545	UnaryOperationExpression	* afont_extra		3432283	0					
ANR	3432546	UnaryOperator	*		3432283	0					
ANR	3432547	Identifier	afont_extra		3432283	1					
ANR	3432548	UnaryOperationExpression	* cff -> font_extra		3432283	1					
ANR	3432549	UnaryOperator	*		3432283	0					
ANR	3432550	PtrMemberAccess	cff -> font_extra		3432283	1					
ANR	3432551	Identifier	cff		3432283	0					
ANR	3432552	Identifier	font_extra		3432283	1					
ANR	3432553	Label	Fail :	577:2:21059:21063	3432283	4	True				
ANR	3432554	Identifier	Fail		3432283	0					
ANR	3432555	ReturnStatement	return error ;	578:4:21069:21081	3432283	5	True				
ANR	3432556	Identifier	error		3432283	0					
ANR	3432557	ReturnType	static FT_Error		3432283	1					
ANR	3432558	Identifier	cff_ps_get_font_extra		3432283	2					
ANR	3432559	ParameterList	"CFF_Face face , PS_FontExtraRec * afont_extra"		3432283	3					
ANR	3432560	Parameter	CFF_Face face	505:25:18871:18892	3432283	0	True				
ANR	3432561	ParameterType	CFF_Face		3432283	0					
ANR	3432562	Identifier	face		3432283	1					
ANR	3432563	Parameter	PS_FontExtraRec * afont_extra	506:25:18920:18948	3432283	1	True				
ANR	3432564	ParameterType	PS_FontExtraRec *		3432283	0					
ANR	3432565	Identifier	afont_extra		3432283	1					
ANR	3432566	CFGEntryNode	ENTRY		3432283		True				
ANR	3432567	CFGExitNode	EXIT		3432283		True				
ANR	3432568	Symbol	memory		3432283						
ANR	3432569	Symbol	FT_Err_Ok		3432283						
ANR	3432570	Symbol	font_extra		3432283						
ANR	3432571	Symbol	start_fstype		3432283						
ANR	3432572	Symbol	* afont_extra		3432283						
ANR	3432573	Symbol	face -> extra . data		3432283						
ANR	3432574	Symbol	error		3432283						
ANR	3432575	Symbol	* cff -> font_extra		3432283						
ANR	3432576	Symbol	* face		3432283						
ANR	3432577	Symbol	afont_extra		3432283						
ANR	3432578	Symbol	FT_USHORT_MAX		3432283						
ANR	3432579	Symbol	& cff -> top_font		3432283						
ANR	3432580	Symbol	FT_ALLOC		3432283						
ANR	3432581	Symbol	face -> root		3432283						
ANR	3432582	Symbol	dict		3432283						
ANR	3432583	Symbol	cff -> top_font		3432283						
ANR	3432584	Symbol	font_extra -> fs_type		3432283						
ANR	3432585	Symbol	cff		3432283						
ANR	3432586	Symbol	NULL		3432283						
ANR	3432587	Symbol	embedded_postscript		3432283						
ANR	3432588	Symbol	ft_strstr		3432283						
ANR	3432589	Symbol	& cff -> top_font . font_dict		3432283						
ANR	3432590	Symbol	* dict		3432283						
ANR	3432591	Symbol	face		3432283						
ANR	3432592	Symbol	face -> extra		3432283						
ANR	3432593	Symbol	cff -> font_extra		3432283						
ANR	3432594	Symbol	* cff		3432283						
ANR	3432595	Symbol	start_def		3432283						
ANR	3432596	Symbol	s		3432283						
ANR	3432597	Symbol	face -> root . memory		3432283						
ANR	3432598	Symbol	* font_extra		3432283						
ANR	3432599	Symbol	dict -> embedded_postscript		3432283						
ANR	3432600	Symbol	cff_index_get_sid_string		3432283						
ANR	3432601	Symbol	* * cff		3432283						
ANR	3432602	Symbol	* s		3432283						
ANR	3432603	Function	cff_get_ps_name	600:2:21665:22599							
ANR	3432604	FunctionDef	cff_get_ps_name (CFF_Face face)		3432603	0					
ANR	3432605	CompoundStatement		602:2:21722:22599	3432603	0					
ANR	3432606	IdentifierDeclStatement	CFF_Font cff = ( CFF_Font ) face -> extra . data ;	603:4:21728:21775	3432603	0	True				
ANR	3432607	IdentifierDecl	cff = ( CFF_Font ) face -> extra . data		3432603	0					
ANR	3432608	IdentifierDeclType	CFF_Font		3432603	0					
ANR	3432609	Identifier	cff		3432603	1					
ANR	3432610	AssignmentExpression	cff = ( CFF_Font ) face -> extra . data		3432603	2		=			
ANR	3432611	Identifier	cff		3432603	0					
ANR	3432612	CastExpression	( CFF_Font ) face -> extra . data		3432603	1					
ANR	3432613	CastTarget	CFF_Font		3432603	0					
ANR	3432614	MemberAccess	face -> extra . data		3432603	1					
ANR	3432615	PtrMemberAccess	face -> extra		3432603	0					
ANR	3432616	Identifier	face		3432603	0					
ANR	3432617	Identifier	extra		3432603	1					
ANR	3432618	Identifier	data		3432603	1					
ANR	3432619	IdentifierDeclStatement	SFNT_Service sfnt = ( SFNT_Service ) face -> sfnt ;	604:4:21781:21826	3432603	1	True				
ANR	3432620	IdentifierDecl	sfnt = ( SFNT_Service ) face -> sfnt		3432603	0					
ANR	3432621	IdentifierDeclType	SFNT_Service		3432603	0					
ANR	3432622	Identifier	sfnt		3432603	1					
ANR	3432623	AssignmentExpression	sfnt = ( SFNT_Service ) face -> sfnt		3432603	2		=			
ANR	3432624	Identifier	sfnt		3432603	0					
ANR	3432625	CastExpression	( SFNT_Service ) face -> sfnt		3432603	1					
ANR	3432626	CastTarget	SFNT_Service		3432603	0					
ANR	3432627	PtrMemberAccess	face -> sfnt		3432603	1					
ANR	3432628	Identifier	face		3432603	0					
ANR	3432629	Identifier	sfnt		3432603	1					
ANR	3432630	IfStatement	if ( FT_IS_SFNT ( FT_FACE ( face ) ) && sfnt )		3432603	2					
ANR	3432631	Condition	FT_IS_SFNT ( FT_FACE ( face ) ) && sfnt	610:9:21996:22032	3432603	0	True				
ANR	3432632	AndExpression	FT_IS_SFNT ( FT_FACE ( face ) ) && sfnt		3432603	0		&&			
ANR	3432633	CallExpression	FT_IS_SFNT ( FT_FACE ( face ) )		3432603	0					
ANR	3432634	Callee	FT_IS_SFNT		3432603	0					
ANR	3432635	Identifier	FT_IS_SFNT		3432603	0					
ANR	3432636	ArgumentList	FT_FACE ( face )		3432603	1					
ANR	3432637	Argument	FT_FACE ( face )		3432603	0					
ANR	3432638	CallExpression	FT_FACE ( face )		3432603	0					
ANR	3432639	Callee	FT_FACE		3432603	0					
ANR	3432640	Identifier	FT_FACE		3432603	0					
ANR	3432641	ArgumentList	face		3432603	1					
ANR	3432642	Argument	face		3432603	0					
ANR	3432643	Identifier	face		3432603	0					
ANR	3432644	Identifier	sfnt		3432603	1					
ANR	3432645	CompoundStatement		13:6:470:712	3432603	1					
ANR	3432646	IdentifierDeclStatement	FT_Library library = FT_FACE_LIBRARY ( face ) ;	612:6:22048:22108	3432603	0	True				
ANR	3432647	IdentifierDecl	library = FT_FACE_LIBRARY ( face )		3432603	0					
ANR	3432648	IdentifierDeclType	FT_Library		3432603	0					
ANR	3432649	Identifier	library		3432603	1					
ANR	3432650	AssignmentExpression	library = FT_FACE_LIBRARY ( face )		3432603	2		=			
ANR	3432651	Identifier	library		3432603	0					
ANR	3432652	CallExpression	FT_FACE_LIBRARY ( face )		3432603	1					
ANR	3432653	Callee	FT_FACE_LIBRARY		3432603	0					
ANR	3432654	Identifier	FT_FACE_LIBRARY		3432603	0					
ANR	3432655	ArgumentList	face		3432603	1					
ANR	3432656	Argument	face		3432603	0					
ANR	3432657	Identifier	face		3432603	0					
ANR	3432658	IdentifierDeclStatement	"FT_Module sfnt_module = FT_Get_Module ( library , ""sfnt"" ) ;"	613:6:22116:22185	3432603	1	True				
ANR	3432659	IdentifierDecl	"sfnt_module = FT_Get_Module ( library , ""sfnt"" )"		3432603	0					
ANR	3432660	IdentifierDeclType	FT_Module		3432603	0					
ANR	3432661	Identifier	sfnt_module		3432603	1					
ANR	3432662	AssignmentExpression	"sfnt_module = FT_Get_Module ( library , ""sfnt"" )"		3432603	2		=			
ANR	3432663	Identifier	sfnt_module		3432603	0					
ANR	3432664	CallExpression	"FT_Get_Module ( library , ""sfnt"" )"		3432603	1					
ANR	3432665	Callee	FT_Get_Module		3432603	0					
ANR	3432666	Identifier	FT_Get_Module		3432603	0					
ANR	3432667	ArgumentList	library		3432603	1					
ANR	3432668	Argument	library		3432603	0					
ANR	3432669	Identifier	library		3432603	0					
ANR	3432670	Argument	"""sfnt"""		3432603	1					
ANR	3432671	PrimaryExpression	"""sfnt"""		3432603	0					
ANR	3432672	IdentifierDeclStatement	"FT_Service_PsFontName service = ( FT_Service_PsFontName ) ft_module_get_service ( sfnt_module , FT_SERVICE_ID_POSTSCRIPT_FONT_NAME , 0 ) ;"	614:6:22193:22435	3432603	2	True				
ANR	3432673	IdentifierDecl	"service = ( FT_Service_PsFontName ) ft_module_get_service ( sfnt_module , FT_SERVICE_ID_POSTSCRIPT_FONT_NAME , 0 )"		3432603	0					
ANR	3432674	IdentifierDeclType	FT_Service_PsFontName		3432603	0					
ANR	3432675	Identifier	service		3432603	1					
ANR	3432676	AssignmentExpression	"service = ( FT_Service_PsFontName ) ft_module_get_service ( sfnt_module , FT_SERVICE_ID_POSTSCRIPT_FONT_NAME , 0 )"		3432603	2		=			
ANR	3432677	Identifier	service		3432603	0					
ANR	3432678	CastExpression	"( FT_Service_PsFontName ) ft_module_get_service ( sfnt_module , FT_SERVICE_ID_POSTSCRIPT_FONT_NAME , 0 )"		3432603	1					
ANR	3432679	CastTarget	FT_Service_PsFontName		3432603	0					
ANR	3432680	CallExpression	"ft_module_get_service ( sfnt_module , FT_SERVICE_ID_POSTSCRIPT_FONT_NAME , 0 )"		3432603	1					
ANR	3432681	Callee	ft_module_get_service		3432603	0					
ANR	3432682	Identifier	ft_module_get_service		3432603	0					
ANR	3432683	ArgumentList	sfnt_module		3432603	1					
ANR	3432684	Argument	sfnt_module		3432603	0					
ANR	3432685	Identifier	sfnt_module		3432603	0					
ANR	3432686	Argument	FT_SERVICE_ID_POSTSCRIPT_FONT_NAME		3432603	1					
ANR	3432687	Identifier	FT_SERVICE_ID_POSTSCRIPT_FONT_NAME		3432603	0					
ANR	3432688	Argument	0		3432603	2					
ANR	3432689	PrimaryExpression	0		3432603	0					
ANR	3432690	IfStatement	if ( service && service -> get_ps_font_name )		3432603	3					
ANR	3432691	Condition	service && service -> get_ps_font_name	621:11:22450:22485	3432603	0	True				
ANR	3432692	AndExpression	service && service -> get_ps_font_name		3432603	0		&&			
ANR	3432693	Identifier	service		3432603	0					
ANR	3432694	PtrMemberAccess	service -> get_ps_font_name		3432603	1					
ANR	3432695	Identifier	service		3432603	0					
ANR	3432696	Identifier	get_ps_font_name		3432603	1					
ANR	3432697	ReturnStatement	return service -> get_ps_font_name ( FT_FACE ( face ) ) ;	622:8:22497:22548	3432603	1	True				
ANR	3432698	CallExpression	service -> get_ps_font_name ( FT_FACE ( face ) )		3432603	0					
ANR	3432699	Callee	service -> get_ps_font_name		3432603	0					
ANR	3432700	PtrMemberAccess	service -> get_ps_font_name		3432603	0					
ANR	3432701	Identifier	service		3432603	0					
ANR	3432702	Identifier	get_ps_font_name		3432603	1					
ANR	3432703	ArgumentList	FT_FACE ( face )		3432603	1					
ANR	3432704	Argument	FT_FACE ( face )		3432603	0					
ANR	3432705	CallExpression	FT_FACE ( face )		3432603	0					
ANR	3432706	Callee	FT_FACE		3432603	0					
ANR	3432707	Identifier	FT_FACE		3432603	0					
ANR	3432708	ArgumentList	face		3432603	1					
ANR	3432709	Argument	face		3432603	0					
ANR	3432710	Identifier	face		3432603	0					
ANR	3432711	ReturnStatement	return ( const char * ) cff -> font_name ;	625:4:22561:22595	3432603	3	True				
ANR	3432712	CastExpression	( const char * ) cff -> font_name		3432603	0					
ANR	3432713	CastTarget	const char *		3432603	0					
ANR	3432714	PtrMemberAccess	cff -> font_name		3432603	1					
ANR	3432715	Identifier	cff		3432603	0					
ANR	3432716	Identifier	font_name		3432603	1					
ANR	3432717	ReturnType	static const char *		3432603	1					
ANR	3432718	Identifier	cff_get_ps_name		3432603	2					
ANR	3432719	ParameterList	CFF_Face face		3432603	3					
ANR	3432720	Parameter	CFF_Face face	601:19:21703:21716	3432603	0	True				
ANR	3432721	ParameterType	CFF_Face		3432603	0					
ANR	3432722	Identifier	face		3432603	1					
ANR	3432723	CFGEntryNode	ENTRY		3432603		True				
ANR	3432724	CFGExitNode	EXIT		3432603		True				
ANR	3432725	Symbol	ft_module_get_service		3432603						
ANR	3432726	Symbol	cff		3432603						
ANR	3432727	Symbol	FT_Get_Module		3432603						
ANR	3432728	Symbol	FT_FACE		3432603						
ANR	3432729	Symbol	face -> extra . data		3432603						
ANR	3432730	Symbol	sfnt		3432603						
ANR	3432731	Symbol	* face		3432603						
ANR	3432732	Symbol	face		3432603						
ANR	3432733	Symbol	face -> extra		3432603						
ANR	3432734	Symbol	* cff		3432603						
ANR	3432735	Symbol	library		3432603						
ANR	3432736	Symbol	service		3432603						
ANR	3432737	Symbol	FT_SERVICE_ID_POSTSCRIPT_FONT_NAME		3432603						
ANR	3432738	Symbol	sfnt_module		3432603						
ANR	3432739	Symbol	face -> sfnt		3432603						
ANR	3432740	Symbol	* service		3432603						
ANR	3432741	Symbol	FT_FACE_LIBRARY		3432603						
ANR	3432742	Symbol	cff -> font_name		3432603						
ANR	3432743	Symbol	FT_IS_SFNT		3432603						
ANR	3432744	Symbol	service -> get_ps_font_name		3432603						
ANR	3432745	Function	cff_get_cmap_info	646:2:23009:23912							
ANR	3432746	FunctionDef	"cff_get_cmap_info (FT_CharMap charmap , TT_CMapInfo * cmap_info)"		3432745	0					
ANR	3432747	CompoundStatement		649:2:23118:23912	3432745	0					
ANR	3432748	IdentifierDeclStatement	FT_CMap cmap = FT_CMAP ( charmap ) ;	650:4:23124:23160	3432745	0	True				
ANR	3432749	IdentifierDecl	cmap = FT_CMAP ( charmap )		3432745	0					
ANR	3432750	IdentifierDeclType	FT_CMap		3432745	0					
ANR	3432751	Identifier	cmap		3432745	1					
ANR	3432752	AssignmentExpression	cmap = FT_CMAP ( charmap )		3432745	2		=			
ANR	3432753	Identifier	cmap		3432745	0					
ANR	3432754	CallExpression	FT_CMAP ( charmap )		3432745	1					
ANR	3432755	Callee	FT_CMAP		3432745	0					
ANR	3432756	Identifier	FT_CMAP		3432745	0					
ANR	3432757	ArgumentList	charmap		3432745	1					
ANR	3432758	Argument	charmap		3432745	0					
ANR	3432759	Identifier	charmap		3432745	0					
ANR	3432760	IdentifierDeclStatement	FT_Error error = FT_Err_Ok ;	651:4:23166:23193	3432745	1	True				
ANR	3432761	IdentifierDecl	error = FT_Err_Ok		3432745	0					
ANR	3432762	IdentifierDeclType	FT_Error		3432745	0					
ANR	3432763	Identifier	error		3432745	1					
ANR	3432764	AssignmentExpression	error = FT_Err_Ok		3432745	2		=			
ANR	3432765	Identifier	FT_Err_Ok		3432745	0					
ANR	3432766	Identifier	FT_Err_Ok		3432745	1					
ANR	3432767	IdentifierDeclStatement	FT_Face face = FT_CMAP_FACE ( cmap ) ;	653:4:23200:23242	3432745	2	True				
ANR	3432768	IdentifierDecl	face = FT_CMAP_FACE ( cmap )		3432745	0					
ANR	3432769	IdentifierDeclType	FT_Face		3432745	0					
ANR	3432770	Identifier	face		3432745	1					
ANR	3432771	AssignmentExpression	face = FT_CMAP_FACE ( cmap )		3432745	2		=			
ANR	3432772	Identifier	face		3432745	0					
ANR	3432773	CallExpression	FT_CMAP_FACE ( cmap )		3432745	1					
ANR	3432774	Callee	FT_CMAP_FACE		3432745	0					
ANR	3432775	Identifier	FT_CMAP_FACE		3432745	0					
ANR	3432776	ArgumentList	cmap		3432745	1					
ANR	3432777	Argument	cmap		3432745	0					
ANR	3432778	Identifier	cmap		3432745	0					
ANR	3432779	IdentifierDeclStatement	FT_Library library = FT_FACE_LIBRARY ( face ) ;	654:4:23248:23293	3432745	3	True				
ANR	3432780	IdentifierDecl	library = FT_FACE_LIBRARY ( face )		3432745	0					
ANR	3432781	IdentifierDeclType	FT_Library		3432745	0					
ANR	3432782	Identifier	library		3432745	1					
ANR	3432783	AssignmentExpression	library = FT_FACE_LIBRARY ( face )		3432745	2		=			
ANR	3432784	Identifier	library		3432745	0					
ANR	3432785	CallExpression	FT_FACE_LIBRARY ( face )		3432745	1					
ANR	3432786	Callee	FT_FACE_LIBRARY		3432745	0					
ANR	3432787	Identifier	FT_FACE_LIBRARY		3432745	0					
ANR	3432788	ArgumentList	face		3432745	1					
ANR	3432789	Argument	face		3432745	0					
ANR	3432790	Identifier	face		3432745	0					
ANR	3432791	IfStatement	if ( cmap -> clazz != & CFF_CMAP_ENCODING_CLASS_REC_GET && cmap -> clazz != & CFF_CMAP_UNICODE_CLASS_REC_GET )		3432745	4					
ANR	3432792	Condition	cmap -> clazz != & CFF_CMAP_ENCODING_CLASS_REC_GET && cmap -> clazz != & CFF_CMAP_UNICODE_CLASS_REC_GET	657:9:23306:23411	3432745	0	True				
ANR	3432793	AndExpression	cmap -> clazz != & CFF_CMAP_ENCODING_CLASS_REC_GET && cmap -> clazz != & CFF_CMAP_UNICODE_CLASS_REC_GET		3432745	0		&&			
ANR	3432794	EqualityExpression	cmap -> clazz != & CFF_CMAP_ENCODING_CLASS_REC_GET		3432745	0		!=			
ANR	3432795	PtrMemberAccess	cmap -> clazz		3432745	0					
ANR	3432796	Identifier	cmap		3432745	0					
ANR	3432797	Identifier	clazz		3432745	1					
ANR	3432798	UnaryOperationExpression	& CFF_CMAP_ENCODING_CLASS_REC_GET		3432745	1					
ANR	3432799	UnaryOperator	&		3432745	0					
ANR	3432800	Identifier	CFF_CMAP_ENCODING_CLASS_REC_GET		3432745	1					
ANR	3432801	EqualityExpression	cmap -> clazz != & CFF_CMAP_UNICODE_CLASS_REC_GET		3432745	1		!=			
ANR	3432802	PtrMemberAccess	cmap -> clazz		3432745	0					
ANR	3432803	Identifier	cmap		3432745	0					
ANR	3432804	Identifier	clazz		3432745	1					
ANR	3432805	UnaryOperationExpression	& CFF_CMAP_UNICODE_CLASS_REC_GET		3432745	1					
ANR	3432806	UnaryOperator	&		3432745	0					
ANR	3432807	Identifier	CFF_CMAP_UNICODE_CLASS_REC_GET		3432745	1					
ANR	3432808	CompoundStatement		13:6:379:594	3432745	1					
ANR	3432809	IdentifierDeclStatement	"FT_Module sfnt = FT_Get_Module ( library , ""sfnt"" ) ;"	660:6:23428:23490	3432745	0	True				
ANR	3432810	IdentifierDecl	"sfnt = FT_Get_Module ( library , ""sfnt"" )"		3432745	0					
ANR	3432811	IdentifierDeclType	FT_Module		3432745	0					
ANR	3432812	Identifier	sfnt		3432745	1					
ANR	3432813	AssignmentExpression	"sfnt = FT_Get_Module ( library , ""sfnt"" )"		3432745	2		=			
ANR	3432814	Identifier	sfnt		3432745	0					
ANR	3432815	CallExpression	"FT_Get_Module ( library , ""sfnt"" )"		3432745	1					
ANR	3432816	Callee	FT_Get_Module		3432745	0					
ANR	3432817	Identifier	FT_Get_Module		3432745	0					
ANR	3432818	ArgumentList	library		3432745	1					
ANR	3432819	Argument	library		3432745	0					
ANR	3432820	Identifier	library		3432745	0					
ANR	3432821	Argument	"""sfnt"""		3432745	1					
ANR	3432822	PrimaryExpression	"""sfnt"""		3432745	0					
ANR	3432823	IdentifierDeclStatement	"FT_Service_TTCMaps service = ( FT_Service_TTCMaps ) ft_module_get_service ( sfnt , FT_SERVICE_ID_TT_CMAP , 0 ) ;"	661:6:23498:23713	3432745	1	True				
ANR	3432824	IdentifierDecl	"service = ( FT_Service_TTCMaps ) ft_module_get_service ( sfnt , FT_SERVICE_ID_TT_CMAP , 0 )"		3432745	0					
ANR	3432825	IdentifierDeclType	FT_Service_TTCMaps		3432745	0					
ANR	3432826	Identifier	service		3432745	1					
ANR	3432827	AssignmentExpression	"service = ( FT_Service_TTCMaps ) ft_module_get_service ( sfnt , FT_SERVICE_ID_TT_CMAP , 0 )"		3432745	2		=			
ANR	3432828	Identifier	service		3432745	0					
ANR	3432829	CastExpression	"( FT_Service_TTCMaps ) ft_module_get_service ( sfnt , FT_SERVICE_ID_TT_CMAP , 0 )"		3432745	1					
ANR	3432830	CastTarget	FT_Service_TTCMaps		3432745	0					
ANR	3432831	CallExpression	"ft_module_get_service ( sfnt , FT_SERVICE_ID_TT_CMAP , 0 )"		3432745	1					
ANR	3432832	Callee	ft_module_get_service		3432745	0					
ANR	3432833	Identifier	ft_module_get_service		3432745	0					
ANR	3432834	ArgumentList	sfnt		3432745	1					
ANR	3432835	Argument	sfnt		3432745	0					
ANR	3432836	Identifier	sfnt		3432745	0					
ANR	3432837	Argument	FT_SERVICE_ID_TT_CMAP		3432745	1					
ANR	3432838	Identifier	FT_SERVICE_ID_TT_CMAP		3432745	0					
ANR	3432839	Argument	0		3432745	2					
ANR	3432840	PrimaryExpression	0		3432745	0					
ANR	3432841	IfStatement	if ( service && service -> get_cmap_info )		3432745	2					
ANR	3432842	Condition	service && service -> get_cmap_info	667:11:23728:23760	3432745	0	True				
ANR	3432843	AndExpression	service && service -> get_cmap_info		3432745	0		&&			
ANR	3432844	Identifier	service		3432745	0					
ANR	3432845	PtrMemberAccess	service -> get_cmap_info		3432745	1					
ANR	3432846	Identifier	service		3432745	0					
ANR	3432847	Identifier	get_cmap_info		3432745	1					
ANR	3432848	ExpressionStatement	"error = service -> get_cmap_info ( charmap , cmap_info )"	668:8:23772:23824	3432745	1	True				
ANR	3432849	AssignmentExpression	"error = service -> get_cmap_info ( charmap , cmap_info )"		3432745	0		=			
ANR	3432850	Identifier	error		3432745	0					
ANR	3432851	CallExpression	"service -> get_cmap_info ( charmap , cmap_info )"		3432745	1					
ANR	3432852	Callee	service -> get_cmap_info		3432745	0					
ANR	3432853	PtrMemberAccess	service -> get_cmap_info		3432745	0					
ANR	3432854	Identifier	service		3432745	0					
ANR	3432855	Identifier	get_cmap_info		3432745	1					
ANR	3432856	ArgumentList	charmap		3432745	1					
ANR	3432857	Argument	charmap		3432745	0					
ANR	3432858	Identifier	charmap		3432745	0					
ANR	3432859	Argument	cmap_info		3432745	1					
ANR	3432860	Identifier	cmap_info		3432745	0					
ANR	3432861	ElseStatement	else		3432745	0					
ANR	3432862	ExpressionStatement	error = FT_THROW ( Invalid_CharMap_Format )	671:6:23847:23889	3432745	0	True				
ANR	3432863	AssignmentExpression	error = FT_THROW ( Invalid_CharMap_Format )		3432745	0		=			
ANR	3432864	Identifier	error		3432745	0					
ANR	3432865	CallExpression	FT_THROW ( Invalid_CharMap_Format )		3432745	1					
ANR	3432866	Callee	FT_THROW		3432745	0					
ANR	3432867	Identifier	FT_THROW		3432745	0					
ANR	3432868	ArgumentList	Invalid_CharMap_Format		3432745	1					
ANR	3432869	Argument	Invalid_CharMap_Format		3432745	0					
ANR	3432870	Identifier	Invalid_CharMap_Format		3432745	0					
ANR	3432871	ReturnStatement	return error ;	673:4:23896:23908	3432745	5	True				
ANR	3432872	Identifier	error		3432745	0					
ANR	3432873	ReturnType	static FT_Error		3432745	1					
ANR	3432874	Identifier	cff_get_cmap_info		3432745	2					
ANR	3432875	ParameterList	"FT_CharMap charmap , TT_CMapInfo * cmap_info"		3432745	3					
ANR	3432876	Parameter	FT_CharMap charmap	647:21:23046:23066	3432745	0	True				
ANR	3432877	ParameterType	FT_CharMap		3432745	0					
ANR	3432878	Identifier	charmap		3432745	1					
ANR	3432879	Parameter	TT_CMapInfo * cmap_info	648:21:23090:23112	3432745	1	True				
ANR	3432880	ParameterType	TT_CMapInfo *		3432745	0					
ANR	3432881	Identifier	cmap_info		3432745	1					
ANR	3432882	CFGEntryNode	ENTRY		3432745		True				
ANR	3432883	CFGExitNode	EXIT		3432745		True				
ANR	3432884	Symbol	ft_module_get_service		3432745						
ANR	3432885	Symbol	FT_Err_Ok		3432745						
ANR	3432886	Symbol	FT_CMAP_FACE		3432745						
ANR	3432887	Symbol	FT_Get_Module		3432745						
ANR	3432888	Symbol	cmap_info		3432745						
ANR	3432889	Symbol	charmap		3432745						
ANR	3432890	Symbol	error		3432745						
ANR	3432891	Symbol	sfnt		3432745						
ANR	3432892	Symbol	cmap -> clazz		3432745						
ANR	3432893	Symbol	FT_THROW		3432745						
ANR	3432894	Symbol	FT_CMAP		3432745						
ANR	3432895	Symbol	FT_SERVICE_ID_TT_CMAP		3432745						
ANR	3432896	Symbol	face		3432745						
ANR	3432897	Symbol	* cmap		3432745						
ANR	3432898	Symbol	library		3432745						
ANR	3432899	Symbol	Invalid_CharMap_Format		3432745						
ANR	3432900	Symbol	service		3432745						
ANR	3432901	Symbol	cmap		3432745						
ANR	3432902	Symbol	service -> get_cmap_info		3432745						
ANR	3432903	Symbol	* service		3432745						
ANR	3432904	Symbol	FT_FACE_LIBRARY		3432745						
ANR	3432905	Symbol	& CFF_CMAP_ENCODING_CLASS_REC_GET		3432745						
ANR	3432906	Symbol	& CFF_CMAP_UNICODE_CLASS_REC_GET		3432745						
ANR	3432907	Function	cff_get_ros	688:2:24094:25573							
ANR	3432908	FunctionDef	"cff_get_ros (CFF_Face face , const char * * registry , const char * * ordering , FT_Int * supplement)"		3432907	0					
ANR	3432909	CompoundStatement		693:2:24267:25573	3432907	0					
ANR	3432910	IdentifierDeclStatement	FT_Error error = FT_Err_Ok ;	694:4:24273:24300	3432907	0	True				
ANR	3432911	IdentifierDecl	error = FT_Err_Ok		3432907	0					
ANR	3432912	IdentifierDeclType	FT_Error		3432907	0					
ANR	3432913	Identifier	error		3432907	1					
ANR	3432914	AssignmentExpression	error = FT_Err_Ok		3432907	2		=			
ANR	3432915	Identifier	FT_Err_Ok		3432907	0					
ANR	3432916	Identifier	FT_Err_Ok		3432907	1					
ANR	3432917	IdentifierDeclStatement	CFF_Font cff = ( CFF_Font ) face -> extra . data ;	695:4:24306:24350	3432907	1	True				
ANR	3432918	IdentifierDecl	cff = ( CFF_Font ) face -> extra . data		3432907	0					
ANR	3432919	IdentifierDeclType	CFF_Font		3432907	0					
ANR	3432920	Identifier	cff		3432907	1					
ANR	3432921	AssignmentExpression	cff = ( CFF_Font ) face -> extra . data		3432907	2		=			
ANR	3432922	Identifier	cff		3432907	0					
ANR	3432923	CastExpression	( CFF_Font ) face -> extra . data		3432907	1					
ANR	3432924	CastTarget	CFF_Font		3432907	0					
ANR	3432925	MemberAccess	face -> extra . data		3432907	1					
ANR	3432926	PtrMemberAccess	face -> extra		3432907	0					
ANR	3432927	Identifier	face		3432907	0					
ANR	3432928	Identifier	extra		3432907	1					
ANR	3432929	Identifier	data		3432907	1					
ANR	3432930	IfStatement	if ( cff )		3432907	2					
ANR	3432931	Condition	cff	698:9:24363:24365	3432907	0	True				
ANR	3432932	Identifier	cff		3432907	0					
ANR	3432933	CompoundStatement		8:6:113:161	3432907	1					
ANR	3432934	IdentifierDeclStatement	CFF_FontRecDict dict = & cff -> top_font . font_dict ;	700:6:24381:24429	3432907	0	True				
ANR	3432935	IdentifierDecl	dict = & cff -> top_font . font_dict		3432907	0					
ANR	3432936	IdentifierDeclType	CFF_FontRecDict		3432907	0					
ANR	3432937	Identifier	dict		3432907	1					
ANR	3432938	AssignmentExpression	dict = & cff -> top_font . font_dict		3432907	2		=			
ANR	3432939	Identifier	dict		3432907	0					
ANR	3432940	UnaryOperationExpression	& cff -> top_font . font_dict		3432907	1					
ANR	3432941	UnaryOperator	&		3432907	0					
ANR	3432942	MemberAccess	cff -> top_font . font_dict		3432907	1					
ANR	3432943	PtrMemberAccess	cff -> top_font		3432907	0					
ANR	3432944	Identifier	cff		3432907	0					
ANR	3432945	Identifier	top_font		3432907	1					
ANR	3432946	Identifier	font_dict		3432907	1					
ANR	3432947	IfStatement	if ( dict -> cid_registry == 0xFFFFU )		3432907	1					
ANR	3432948	Condition	dict -> cid_registry == 0xFFFFU	703:11:24444:24472	3432907	0	True				
ANR	3432949	EqualityExpression	dict -> cid_registry == 0xFFFFU		3432907	0		==			
ANR	3432950	PtrMemberAccess	dict -> cid_registry		3432907	0					
ANR	3432951	Identifier	dict		3432907	0					
ANR	3432952	Identifier	cid_registry		3432907	1					
ANR	3432953	PrimaryExpression	0xFFFFU		3432907	1					
ANR	3432954	CompoundStatement		12:6:214:214	3432907	1					
ANR	3432955	ExpressionStatement	error = FT_THROW ( Invalid_Argument )	705:8:24492:24528	3432907	0	True				
ANR	3432956	AssignmentExpression	error = FT_THROW ( Invalid_Argument )		3432907	0		=			
ANR	3432957	Identifier	error		3432907	0					
ANR	3432958	CallExpression	FT_THROW ( Invalid_Argument )		3432907	1					
ANR	3432959	Callee	FT_THROW		3432907	0					
ANR	3432960	Identifier	FT_THROW		3432907	0					
ANR	3432961	ArgumentList	Invalid_Argument		3432907	1					
ANR	3432962	Argument	Invalid_Argument		3432907	0					
ANR	3432963	Identifier	Invalid_Argument		3432907	0					
ANR	3432964	GotoStatement	goto Fail ;	706:8:24538:24547	3432907	1	True				
ANR	3432965	Identifier	Fail		3432907	0					
ANR	3432966	IfStatement	if ( registry )		3432907	2					
ANR	3432967	Condition	registry	709:11:24569:24576	3432907	0	True				
ANR	3432968	Identifier	registry		3432907	0					
ANR	3432969	CompoundStatement		18:6:318:318	3432907	1					
ANR	3432970	IfStatement	if ( ! cff -> registry )		3432907	0					
ANR	3432971	Condition	! cff -> registry	711:13:24601:24614	3432907	0	True				
ANR	3432972	UnaryOperationExpression	! cff -> registry		3432907	0					
ANR	3432973	UnaryOperator	!		3432907	0					
ANR	3432974	PtrMemberAccess	cff -> registry		3432907	1					
ANR	3432975	Identifier	cff		3432907	0					
ANR	3432976	Identifier	registry		3432907	1					
ANR	3432977	ExpressionStatement	"cff -> registry = cff_index_get_sid_string ( cff , dict -> cid_registry )"	712:10:24628:24747	3432907	1	True				
ANR	3432978	AssignmentExpression	"cff -> registry = cff_index_get_sid_string ( cff , dict -> cid_registry )"		3432907	0		=			
ANR	3432979	PtrMemberAccess	cff -> registry		3432907	0					
ANR	3432980	Identifier	cff		3432907	0					
ANR	3432981	Identifier	registry		3432907	1					
ANR	3432982	CallExpression	"cff_index_get_sid_string ( cff , dict -> cid_registry )"		3432907	1					
ANR	3432983	Callee	cff_index_get_sid_string		3432907	0					
ANR	3432984	Identifier	cff_index_get_sid_string		3432907	0					
ANR	3432985	ArgumentList	cff		3432907	1					
ANR	3432986	Argument	cff		3432907	0					
ANR	3432987	Identifier	cff		3432907	0					
ANR	3432988	Argument	dict -> cid_registry		3432907	1					
ANR	3432989	PtrMemberAccess	dict -> cid_registry		3432907	0					
ANR	3432990	Identifier	dict		3432907	0					
ANR	3432991	Identifier	cid_registry		3432907	1					
ANR	3432992	ExpressionStatement	* registry = cff -> registry	714:8:24757:24782	3432907	1	True				
ANR	3432993	AssignmentExpression	* registry = cff -> registry		3432907	0		=			
ANR	3432994	UnaryOperationExpression	* registry		3432907	0					
ANR	3432995	UnaryOperator	*		3432907	0					
ANR	3432996	Identifier	registry		3432907	1					
ANR	3432997	PtrMemberAccess	cff -> registry		3432907	1					
ANR	3432998	Identifier	cff		3432907	0					
ANR	3432999	Identifier	registry		3432907	1					
ANR	3433000	IfStatement	if ( ordering )		3432907	3					
ANR	3433001	Condition	ordering	717:11:24804:24811	3432907	0	True				
ANR	3433002	Identifier	ordering		3432907	0					
ANR	3433003	CompoundStatement		26:6:553:553	3432907	1					
ANR	3433004	IfStatement	if ( ! cff -> ordering )		3432907	0					
ANR	3433005	Condition	! cff -> ordering	719:13:24836:24849	3432907	0	True				
ANR	3433006	UnaryOperationExpression	! cff -> ordering		3432907	0					
ANR	3433007	UnaryOperator	!		3432907	0					
ANR	3433008	PtrMemberAccess	cff -> ordering		3432907	1					
ANR	3433009	Identifier	cff		3432907	0					
ANR	3433010	Identifier	ordering		3432907	1					
ANR	3433011	ExpressionStatement	"cff -> ordering = cff_index_get_sid_string ( cff , dict -> cid_ordering )"	720:10:24863:24982	3432907	1	True				
ANR	3433012	AssignmentExpression	"cff -> ordering = cff_index_get_sid_string ( cff , dict -> cid_ordering )"		3432907	0		=			
ANR	3433013	PtrMemberAccess	cff -> ordering		3432907	0					
ANR	3433014	Identifier	cff		3432907	0					
ANR	3433015	Identifier	ordering		3432907	1					
ANR	3433016	CallExpression	"cff_index_get_sid_string ( cff , dict -> cid_ordering )"		3432907	1					
ANR	3433017	Callee	cff_index_get_sid_string		3432907	0					
ANR	3433018	Identifier	cff_index_get_sid_string		3432907	0					
ANR	3433019	ArgumentList	cff		3432907	1					
ANR	3433020	Argument	cff		3432907	0					
ANR	3433021	Identifier	cff		3432907	0					
ANR	3433022	Argument	dict -> cid_ordering		3432907	1					
ANR	3433023	PtrMemberAccess	dict -> cid_ordering		3432907	0					
ANR	3433024	Identifier	dict		3432907	0					
ANR	3433025	Identifier	cid_ordering		3432907	1					
ANR	3433026	ExpressionStatement	* ordering = cff -> ordering	722:8:24992:25017	3432907	1	True				
ANR	3433027	AssignmentExpression	* ordering = cff -> ordering		3432907	0		=			
ANR	3433028	UnaryOperationExpression	* ordering		3432907	0					
ANR	3433029	UnaryOperator	*		3432907	0					
ANR	3433030	Identifier	ordering		3432907	1					
ANR	3433031	PtrMemberAccess	cff -> ordering		3432907	1					
ANR	3433032	Identifier	cff		3432907	0					
ANR	3433033	Identifier	ordering		3432907	1					
ANR	3433034	IfStatement	if ( supplement )		3432907	4					
ANR	3433035	Condition	supplement	730:11:25234:25243	3432907	0	True				
ANR	3433036	Identifier	supplement		3432907	0					
ANR	3433037	CompoundStatement		39:6:985:985	3432907	1					
ANR	3433038	IfStatement	if ( dict -> cid_supplement < FT_INT_MIN || dict -> cid_supplement > FT_INT_MAX )		3432907	0					
ANR	3433039	Condition	dict -> cid_supplement < FT_INT_MIN || dict -> cid_supplement > FT_INT_MAX	732:13:25268:25350	3432907	0	True				
ANR	3433040	OrExpression	dict -> cid_supplement < FT_INT_MIN || dict -> cid_supplement > FT_INT_MAX		3432907	0		||			
ANR	3433041	RelationalExpression	dict -> cid_supplement < FT_INT_MIN		3432907	0		<			
ANR	3433042	PtrMemberAccess	dict -> cid_supplement		3432907	0					
ANR	3433043	Identifier	dict		3432907	0					
ANR	3433044	Identifier	cid_supplement		3432907	1					
ANR	3433045	Identifier	FT_INT_MIN		3432907	1					
ANR	3433046	RelationalExpression	dict -> cid_supplement > FT_INT_MAX		3432907	1		>			
ANR	3433047	PtrMemberAccess	dict -> cid_supplement		3432907	0					
ANR	3433048	Identifier	dict		3432907	0					
ANR	3433049	Identifier	cid_supplement		3432907	1					
ANR	3433050	Identifier	FT_INT_MAX		3432907	1					
ANR	3433051	ExpressionStatement	"FT_TRACE1 ( ( ""cff_get_ros: too large supplement %d is truncated\\n"" , dict -> cid_supplement ) )"	734:10:25364:25476	3432907	1	True				
ANR	3433052	CallExpression	"FT_TRACE1 ( ( ""cff_get_ros: too large supplement %d is truncated\\n"" , dict -> cid_supplement ) )"		3432907	0					
ANR	3433053	Callee	FT_TRACE1		3432907	0					
ANR	3433054	Identifier	FT_TRACE1		3432907	0					
ANR	3433055	ArgumentList	"""cff_get_ros: too large supplement %d is truncated\\n"" , dict -> cid_supplement"		3432907	1					
ANR	3433056	Argument	"""cff_get_ros: too large supplement %d is truncated\\n"" , dict -> cid_supplement"		3432907	0					
ANR	3433057	Expression	"""cff_get_ros: too large supplement %d is truncated\\n"" , dict -> cid_supplement"		3432907	0					
ANR	3433058	PrimaryExpression	"""cff_get_ros: too large supplement %d is truncated\\n"""		3432907	0					
ANR	3433059	PtrMemberAccess	dict -> cid_supplement		3432907	1					
ANR	3433060	Identifier	dict		3432907	0					
ANR	3433061	Identifier	cid_supplement		3432907	1					
ANR	3433062	ExpressionStatement	* supplement = ( FT_Int ) dict -> cid_supplement	736:8:25486:25528	3432907	1	True				
ANR	3433063	AssignmentExpression	* supplement = ( FT_Int ) dict -> cid_supplement		3432907	0		=			
ANR	3433064	UnaryOperationExpression	* supplement		3432907	0					
ANR	3433065	UnaryOperator	*		3432907	0					
ANR	3433066	Identifier	supplement		3432907	1					
ANR	3433067	CastExpression	( FT_Int ) dict -> cid_supplement		3432907	1					
ANR	3433068	CastTarget	FT_Int		3432907	0					
ANR	3433069	PtrMemberAccess	dict -> cid_supplement		3432907	1					
ANR	3433070	Identifier	dict		3432907	0					
ANR	3433071	Identifier	cid_supplement		3432907	1					
ANR	3433072	Label	Fail :	740:2:25547:25551	3432907	3	True				
ANR	3433073	Identifier	Fail		3432907	0					
ANR	3433074	ReturnStatement	return error ;	741:4:25557:25569	3432907	4	True				
ANR	3433075	Identifier	error		3432907	0					
ANR	3433076	ReturnType	static FT_Error		3432907	1					
ANR	3433077	Identifier	cff_get_ros		3432907	2					
ANR	3433078	ParameterList	"CFF_Face face , const char * * registry , const char * * ordering , FT_Int * supplement"		3432907	3					
ANR	3433079	Parameter	CFF_Face face	689:15:24125:24142	3432907	0	True				
ANR	3433080	ParameterType	CFF_Face		3432907	0					
ANR	3433081	Identifier	face		3432907	1					
ANR	3433082	Parameter	const char * * registry	690:15:24160:24181	3432907	1	True				
ANR	3433083	ParameterType	const char * *		3432907	0					
ANR	3433084	Identifier	registry		3432907	1					
ANR	3433085	Parameter	const char * * ordering	691:15:24199:24220	3432907	2	True				
ANR	3433086	ParameterType	const char * *		3432907	0					
ANR	3433087	Identifier	ordering		3432907	1					
ANR	3433088	Parameter	FT_Int * supplement	692:15:24238:24261	3432907	3	True				
ANR	3433089	ParameterType	FT_Int *		3432907	0					
ANR	3433090	Identifier	supplement		3432907	1					
ANR	3433091	CFGEntryNode	ENTRY		3432907		True				
ANR	3433092	CFGExitNode	EXIT		3432907		True				
ANR	3433093	Symbol	FT_Err_Ok		3432907						
ANR	3433094	Symbol	* registry		3432907						
ANR	3433095	Symbol	ordering		3432907						
ANR	3433096	Symbol	FT_INT_MAX		3432907						
ANR	3433097	Symbol	cff -> registry		3432907						
ANR	3433098	Symbol	face -> extra . data		3432907						
ANR	3433099	Symbol	error		3432907						
ANR	3433100	Symbol	* face		3432907						
ANR	3433101	Symbol	dict -> cid_supplement		3432907						
ANR	3433102	Symbol	dict -> cid_registry		3432907						
ANR	3433103	Symbol	dict -> cid_ordering		3432907						
ANR	3433104	Symbol	& cff -> top_font		3432907						
ANR	3433105	Symbol	cff -> ordering		3432907						
ANR	3433106	Symbol	dict		3432907						
ANR	3433107	Symbol	cff -> top_font		3432907						
ANR	3433108	Symbol	registry		3432907						
ANR	3433109	Symbol	cff		3432907						
ANR	3433110	Symbol	& cff -> top_font . font_dict		3432907						
ANR	3433111	Symbol	* supplement		3432907						
ANR	3433112	Symbol	* ordering		3432907						
ANR	3433113	Symbol	Invalid_Argument		3432907						
ANR	3433114	Symbol	FT_THROW		3432907						
ANR	3433115	Symbol	* dict		3432907						
ANR	3433116	Symbol	face		3432907						
ANR	3433117	Symbol	face -> extra		3432907						
ANR	3433118	Symbol	* cff		3432907						
ANR	3433119	Symbol	FT_INT_MIN		3432907						
ANR	3433120	Symbol	supplement		3432907						
ANR	3433121	Symbol	cff_index_get_sid_string		3432907						
ANR	3433122	Function	cff_get_is_cid	745:2:25579:25943							
ANR	3433123	FunctionDef	"cff_get_is_cid (CFF_Face face , FT_Bool * is_cid)"		3433122	0					
ANR	3433124	CompoundStatement		748:2:25668:25943	3433122	0					
ANR	3433125	IdentifierDeclStatement	FT_Error error = FT_Err_Ok ;	749:4:25674:25701	3433122	0	True				
ANR	3433126	IdentifierDecl	error = FT_Err_Ok		3433122	0					
ANR	3433127	IdentifierDeclType	FT_Error		3433122	0					
ANR	3433128	Identifier	error		3433122	1					
ANR	3433129	AssignmentExpression	error = FT_Err_Ok		3433122	2		=			
ANR	3433130	Identifier	FT_Err_Ok		3433122	0					
ANR	3433131	Identifier	FT_Err_Ok		3433122	1					
ANR	3433132	IdentifierDeclStatement	CFF_Font cff = ( CFF_Font ) face -> extra . data ;	750:4:25707:25751	3433122	1	True				
ANR	3433133	IdentifierDecl	cff = ( CFF_Font ) face -> extra . data		3433122	0					
ANR	3433134	IdentifierDeclType	CFF_Font		3433122	0					
ANR	3433135	Identifier	cff		3433122	1					
ANR	3433136	AssignmentExpression	cff = ( CFF_Font ) face -> extra . data		3433122	2		=			
ANR	3433137	Identifier	cff		3433122	0					
ANR	3433138	CastExpression	( CFF_Font ) face -> extra . data		3433122	1					
ANR	3433139	CastTarget	CFF_Font		3433122	0					
ANR	3433140	MemberAccess	face -> extra . data		3433122	1					
ANR	3433141	PtrMemberAccess	face -> extra		3433122	0					
ANR	3433142	Identifier	face		3433122	0					
ANR	3433143	Identifier	extra		3433122	1					
ANR	3433144	Identifier	data		3433122	1					
ANR	3433145	ExpressionStatement	* is_cid = 0	753:4:25759:25770	3433122	2	True				
ANR	3433146	AssignmentExpression	* is_cid = 0		3433122	0		=			
ANR	3433147	UnaryOperationExpression	* is_cid		3433122	0					
ANR	3433148	UnaryOperator	*		3433122	0					
ANR	3433149	Identifier	is_cid		3433122	1					
ANR	3433150	PrimaryExpression	0		3433122	1					
ANR	3433151	IfStatement	if ( cff )		3433122	3					
ANR	3433152	Condition	cff	755:9:25782:25784	3433122	0	True				
ANR	3433153	Identifier	cff		3433122	0					
ANR	3433154	CompoundStatement		10:6:131:179	3433122	1					
ANR	3433155	IdentifierDeclStatement	CFF_FontRecDict dict = & cff -> top_font . font_dict ;	757:6:25800:25848	3433122	0	True				
ANR	3433156	IdentifierDecl	dict = & cff -> top_font . font_dict		3433122	0					
ANR	3433157	IdentifierDeclType	CFF_FontRecDict		3433122	0					
ANR	3433158	Identifier	dict		3433122	1					
ANR	3433159	AssignmentExpression	dict = & cff -> top_font . font_dict		3433122	2		=			
ANR	3433160	Identifier	dict		3433122	0					
ANR	3433161	UnaryOperationExpression	& cff -> top_font . font_dict		3433122	1					
ANR	3433162	UnaryOperator	&		3433122	0					
ANR	3433163	MemberAccess	cff -> top_font . font_dict		3433122	1					
ANR	3433164	PtrMemberAccess	cff -> top_font		3433122	0					
ANR	3433165	Identifier	cff		3433122	0					
ANR	3433166	Identifier	top_font		3433122	1					
ANR	3433167	Identifier	font_dict		3433122	1					
ANR	3433168	IfStatement	if ( dict -> cid_registry != 0xFFFFU )		3433122	1					
ANR	3433169	Condition	dict -> cid_registry != 0xFFFFU	760:11:25863:25891	3433122	0	True				
ANR	3433170	EqualityExpression	dict -> cid_registry != 0xFFFFU		3433122	0		!=			
ANR	3433171	PtrMemberAccess	dict -> cid_registry		3433122	0					
ANR	3433172	Identifier	dict		3433122	0					
ANR	3433173	Identifier	cid_registry		3433122	1					
ANR	3433174	PrimaryExpression	0xFFFFU		3433122	1					
ANR	3433175	ExpressionStatement	* is_cid = 1	761:8:25903:25914	3433122	1	True				
ANR	3433176	AssignmentExpression	* is_cid = 1		3433122	0		=			
ANR	3433177	UnaryOperationExpression	* is_cid		3433122	0					
ANR	3433178	UnaryOperator	*		3433122	0					
ANR	3433179	Identifier	is_cid		3433122	1					
ANR	3433180	PrimaryExpression	1		3433122	1					
ANR	3433181	ReturnStatement	return error ;	764:4:25927:25939	3433122	4	True				
ANR	3433182	Identifier	error		3433122	0					
ANR	3433183	ReturnType	static FT_Error		3433122	1					
ANR	3433184	Identifier	cff_get_is_cid		3433122	2					
ANR	3433185	ParameterList	"CFF_Face face , FT_Bool * is_cid"		3433122	3					
ANR	3433186	Parameter	CFF_Face face	746:18:25613:25626	3433122	0	True				
ANR	3433187	ParameterType	CFF_Face		3433122	0					
ANR	3433188	Identifier	face		3433122	1					
ANR	3433189	Parameter	FT_Bool * is_cid	747:18:25647:25662	3433122	1	True				
ANR	3433190	ParameterType	FT_Bool *		3433122	0					
ANR	3433191	Identifier	is_cid		3433122	1					
ANR	3433192	CFGEntryNode	ENTRY		3433122		True				
ANR	3433193	CFGExitNode	EXIT		3433122		True				
ANR	3433194	Symbol	cff		3433122						
ANR	3433195	Symbol	FT_Err_Ok		3433122						
ANR	3433196	Symbol	& cff -> top_font . font_dict		3433122						
ANR	3433197	Symbol	is_cid		3433122						
ANR	3433198	Symbol	face -> extra . data		3433122						
ANR	3433199	Symbol	error		3433122						
ANR	3433200	Symbol	* face		3433122						
ANR	3433201	Symbol	dict -> cid_registry		3433122						
ANR	3433202	Symbol	* dict		3433122						
ANR	3433203	Symbol	face		3433122						
ANR	3433204	Symbol	face -> extra		3433122						
ANR	3433205	Symbol	* cff		3433122						
ANR	3433206	Symbol	& cff -> top_font		3433122						
ANR	3433207	Symbol	* is_cid		3433122						
ANR	3433208	Symbol	dict		3433122						
ANR	3433209	Symbol	cff -> top_font		3433122						
ANR	3433210	Function	cff_get_cid_from_glyph_index	768:2:25949:26681							
ANR	3433211	FunctionDef	"cff_get_cid_from_glyph_index (CFF_Face face , FT_UInt glyph_index , FT_UInt * cid)"		3433210	0					
ANR	3433212	CompoundStatement		772:2:26118:26681	3433210	0					
ANR	3433213	IdentifierDeclStatement	FT_Error error = FT_Err_Ok ;	773:4:26124:26151	3433210	0	True				
ANR	3433214	IdentifierDecl	error = FT_Err_Ok		3433210	0					
ANR	3433215	IdentifierDeclType	FT_Error		3433210	0					
ANR	3433216	Identifier	error		3433210	1					
ANR	3433217	AssignmentExpression	error = FT_Err_Ok		3433210	2		=			
ANR	3433218	Identifier	FT_Err_Ok		3433210	0					
ANR	3433219	Identifier	FT_Err_Ok		3433210	1					
ANR	3433220	IdentifierDeclStatement	CFF_Font cff ;	774:4:26157:26170	3433210	1	True				
ANR	3433221	IdentifierDecl	cff		3433210	0					
ANR	3433222	IdentifierDeclType	CFF_Font		3433210	0					
ANR	3433223	Identifier	cff		3433210	1					
ANR	3433224	ExpressionStatement	cff = ( CFF_Font ) face -> extra . data	777:4:26178:26210	3433210	2	True				
ANR	3433225	AssignmentExpression	cff = ( CFF_Font ) face -> extra . data		3433210	0		=			
ANR	3433226	Identifier	cff		3433210	0					
ANR	3433227	CastExpression	( CFF_Font ) face -> extra . data		3433210	1					
ANR	3433228	CastTarget	CFF_Font		3433210	0					
ANR	3433229	MemberAccess	face -> extra . data		3433210	1					
ANR	3433230	PtrMemberAccess	face -> extra		3433210	0					
ANR	3433231	Identifier	face		3433210	0					
ANR	3433232	Identifier	extra		3433210	1					
ANR	3433233	Identifier	data		3433210	1					
ANR	3433234	IfStatement	if ( cff )		3433210	3					
ANR	3433235	Condition	cff	779:9:26222:26224	3433210	0	True				
ANR	3433236	Identifier	cff		3433210	0					
ANR	3433237	CompoundStatement		11:6:147:195	3433210	1					
ANR	3433238	IdentifierDeclStatement	FT_UInt c ;	781:6:26240:26258	3433210	0	True				
ANR	3433239	IdentifierDecl	c		3433210	0					
ANR	3433240	IdentifierDeclType	FT_UInt		3433210	0					
ANR	3433241	Identifier	c		3433210	1					
ANR	3433242	IdentifierDeclStatement	CFF_FontRecDict dict = & cff -> top_font . font_dict ;	782:6:26266:26314	3433210	1	True				
ANR	3433243	IdentifierDecl	dict = & cff -> top_font . font_dict		3433210	0					
ANR	3433244	IdentifierDeclType	CFF_FontRecDict		3433210	0					
ANR	3433245	Identifier	dict		3433210	1					
ANR	3433246	AssignmentExpression	dict = & cff -> top_font . font_dict		3433210	2		=			
ANR	3433247	Identifier	dict		3433210	0					
ANR	3433248	UnaryOperationExpression	& cff -> top_font . font_dict		3433210	1					
ANR	3433249	UnaryOperator	&		3433210	0					
ANR	3433250	MemberAccess	cff -> top_font . font_dict		3433210	1					
ANR	3433251	PtrMemberAccess	cff -> top_font		3433210	0					
ANR	3433252	Identifier	cff		3433210	0					
ANR	3433253	Identifier	top_font		3433210	1					
ANR	3433254	Identifier	font_dict		3433210	1					
ANR	3433255	IfStatement	if ( dict -> cid_registry == 0xFFFFU )		3433210	2					
ANR	3433256	Condition	dict -> cid_registry == 0xFFFFU	785:11:26329:26357	3433210	0	True				
ANR	3433257	EqualityExpression	dict -> cid_registry == 0xFFFFU		3433210	0		==			
ANR	3433258	PtrMemberAccess	dict -> cid_registry		3433210	0					
ANR	3433259	Identifier	dict		3433210	0					
ANR	3433260	Identifier	cid_registry		3433210	1					
ANR	3433261	PrimaryExpression	0xFFFFU		3433210	1					
ANR	3433262	CompoundStatement		15:6:248:248	3433210	1					
ANR	3433263	ExpressionStatement	error = FT_THROW ( Invalid_Argument )	787:8:26377:26413	3433210	0	True				
ANR	3433264	AssignmentExpression	error = FT_THROW ( Invalid_Argument )		3433210	0		=			
ANR	3433265	Identifier	error		3433210	0					
ANR	3433266	CallExpression	FT_THROW ( Invalid_Argument )		3433210	1					
ANR	3433267	Callee	FT_THROW		3433210	0					
ANR	3433268	Identifier	FT_THROW		3433210	0					
ANR	3433269	ArgumentList	Invalid_Argument		3433210	1					
ANR	3433270	Argument	Invalid_Argument		3433210	0					
ANR	3433271	Identifier	Invalid_Argument		3433210	0					
ANR	3433272	GotoStatement	goto Fail ;	788:8:26423:26432	3433210	1	True				
ANR	3433273	Identifier	Fail		3433210	0					
ANR	3433274	IfStatement	if ( glyph_index > cff -> num_glyphs )		3433210	3					
ANR	3433275	Condition	glyph_index > cff -> num_glyphs	791:11:26454:26482	3433210	0	True				
ANR	3433276	RelationalExpression	glyph_index > cff -> num_glyphs		3433210	0		>			
ANR	3433277	Identifier	glyph_index		3433210	0					
ANR	3433278	PtrMemberAccess	cff -> num_glyphs		3433210	1					
ANR	3433279	Identifier	cff		3433210	0					
ANR	3433280	Identifier	num_glyphs		3433210	1					
ANR	3433281	CompoundStatement		21:6:373:373	3433210	1					
ANR	3433282	ExpressionStatement	error = FT_THROW ( Invalid_Argument )	793:8:26502:26538	3433210	0	True				
ANR	3433283	AssignmentExpression	error = FT_THROW ( Invalid_Argument )		3433210	0		=			
ANR	3433284	Identifier	error		3433210	0					
ANR	3433285	CallExpression	FT_THROW ( Invalid_Argument )		3433210	1					
ANR	3433286	Callee	FT_THROW		3433210	0					
ANR	3433287	Identifier	FT_THROW		3433210	0					
ANR	3433288	ArgumentList	Invalid_Argument		3433210	1					
ANR	3433289	Argument	Invalid_Argument		3433210	0					
ANR	3433290	Identifier	Invalid_Argument		3433210	0					
ANR	3433291	GotoStatement	goto Fail ;	794:8:26548:26557	3433210	1	True				
ANR	3433292	Identifier	Fail		3433210	0					
ANR	3433293	ExpressionStatement	c = cff -> charset . sids [ glyph_index ]	797:6:26574:26608	3433210	4	True				
ANR	3433294	AssignmentExpression	c = cff -> charset . sids [ glyph_index ]		3433210	0		=			
ANR	3433295	Identifier	c		3433210	0					
ANR	3433296	ArrayIndexing	cff -> charset . sids [ glyph_index ]		3433210	1					
ANR	3433297	MemberAccess	cff -> charset . sids		3433210	0					
ANR	3433298	PtrMemberAccess	cff -> charset		3433210	0					
ANR	3433299	Identifier	cff		3433210	0					
ANR	3433300	Identifier	charset		3433210	1					
ANR	3433301	Identifier	sids		3433210	1					
ANR	3433302	Identifier	glyph_index		3433210	1					
ANR	3433303	IfStatement	if ( cid )		3433210	5					
ANR	3433304	Condition	cid	799:11:26622:26624	3433210	0	True				
ANR	3433305	Identifier	cid		3433210	0					
ANR	3433306	ExpressionStatement	* cid = c	800:8:26636:26644	3433210	1	True				
ANR	3433307	AssignmentExpression	* cid = c		3433210	0		=			
ANR	3433308	UnaryOperationExpression	* cid		3433210	0					
ANR	3433309	UnaryOperator	*		3433210	0					
ANR	3433310	Identifier	cid		3433210	1					
ANR	3433311	Identifier	c		3433210	1					
ANR	3433312	Label	Fail :	803:2:26655:26659	3433210	4	True				
ANR	3433313	Identifier	Fail		3433210	0					
ANR	3433314	ReturnStatement	return error ;	804:4:26665:26677	3433210	5	True				
ANR	3433315	Identifier	error		3433210	0					
ANR	3433316	ReturnType	static FT_Error		3433210	1					
ANR	3433317	Identifier	cff_get_cid_from_glyph_index		3433210	2					
ANR	3433318	ParameterList	"CFF_Face face , FT_UInt glyph_index , FT_UInt * cid"		3433210	3					
ANR	3433319	Parameter	CFF_Face face	769:32:25997:26010	3433210	0	True				
ANR	3433320	ParameterType	CFF_Face		3433210	0					
ANR	3433321	Identifier	face		3433210	1					
ANR	3433322	Parameter	FT_UInt glyph_index	770:32:26045:26065	3433210	1	True				
ANR	3433323	ParameterType	FT_UInt		3433210	0					
ANR	3433324	Identifier	glyph_index		3433210	1					
ANR	3433325	Parameter	FT_UInt * cid	771:32:26100:26112	3433210	2	True				
ANR	3433326	ParameterType	FT_UInt *		3433210	0					
ANR	3433327	Identifier	cid		3433210	1					
ANR	3433328	CFGEntryNode	ENTRY		3433210		True				
ANR	3433329	CFGExitNode	EXIT		3433210		True				
ANR	3433330	Symbol	glyph_index		3433210						
ANR	3433331	Symbol	FT_Err_Ok		3433210						
ANR	3433332	Symbol	face -> extra . data		3433210						
ANR	3433333	Symbol	error		3433210						
ANR	3433334	Symbol	* face		3433210						
ANR	3433335	Symbol	dict -> cid_registry		3433210						
ANR	3433336	Symbol	* cff -> charset		3433210						
ANR	3433337	Symbol	& cff -> top_font		3433210						
ANR	3433338	Symbol	* cid		3433210						
ANR	3433339	Symbol	dict		3433210						
ANR	3433340	Symbol	cff -> top_font		3433210						
ANR	3433341	Symbol	cff -> num_glyphs		3433210						
ANR	3433342	Symbol	cff		3433210						
ANR	3433343	Symbol	* cff -> charset . sids		3433210						
ANR	3433344	Symbol	c		3433210						
ANR	3433345	Symbol	& cff -> top_font . font_dict		3433210						
ANR	3433346	Symbol	* glyph_index		3433210						
ANR	3433347	Symbol	Invalid_Argument		3433210						
ANR	3433348	Symbol	FT_THROW		3433210						
ANR	3433349	Symbol	* dict		3433210						
ANR	3433350	Symbol	face		3433210						
ANR	3433351	Symbol	face -> extra		3433210						
ANR	3433352	Symbol	* cff		3433210						
ANR	3433353	Symbol	cff -> charset . sids		3433210						
ANR	3433354	Symbol	* * cff		3433210						
ANR	3433355	Symbol	cff -> charset		3433210						
ANR	3433356	Symbol	cid		3433210						
ANR	3433357	Function	cff_set_mm_blend	839:2:27437:27718							
ANR	3433358	FunctionDef	"cff_set_mm_blend (CFF_Face face , FT_UInt num_coords , FT_Fixed * coords)"		3433357	0					
ANR	3433359	CompoundStatement		843:2:27575:27718	3433357	0					
ANR	3433360	IdentifierDeclStatement	FT_Service_MultiMasters mm = ( FT_Service_MultiMasters ) face -> mm ;	844:4:27581:27644	3433357	0	True				
ANR	3433361	IdentifierDecl	mm = ( FT_Service_MultiMasters ) face -> mm		3433357	0					
ANR	3433362	IdentifierDeclType	FT_Service_MultiMasters		3433357	0					
ANR	3433363	Identifier	mm		3433357	1					
ANR	3433364	AssignmentExpression	mm = ( FT_Service_MultiMasters ) face -> mm		3433357	2		=			
ANR	3433365	Identifier	mm		3433357	0					
ANR	3433366	CastExpression	( FT_Service_MultiMasters ) face -> mm		3433357	1					
ANR	3433367	CastTarget	FT_Service_MultiMasters		3433357	0					
ANR	3433368	PtrMemberAccess	face -> mm		3433357	1					
ANR	3433369	Identifier	face		3433357	0					
ANR	3433370	Identifier	mm		3433357	1					
ANR	3433371	ReturnStatement	"return mm -> set_mm_blend ( FT_FACE ( face ) , num_coords , coords ) ;"	847:4:27652:27714	3433357	1	True				
ANR	3433372	CallExpression	"mm -> set_mm_blend ( FT_FACE ( face ) , num_coords , coords )"		3433357	0					
ANR	3433373	Callee	mm -> set_mm_blend		3433357	0					
ANR	3433374	PtrMemberAccess	mm -> set_mm_blend		3433357	0					
ANR	3433375	Identifier	mm		3433357	0					
ANR	3433376	Identifier	set_mm_blend		3433357	1					
ANR	3433377	ArgumentList	FT_FACE ( face )		3433357	1					
ANR	3433378	Argument	FT_FACE ( face )		3433357	0					
ANR	3433379	CallExpression	FT_FACE ( face )		3433357	0					
ANR	3433380	Callee	FT_FACE		3433357	0					
ANR	3433381	Identifier	FT_FACE		3433357	0					
ANR	3433382	ArgumentList	face		3433357	1					
ANR	3433383	Argument	face		3433357	0					
ANR	3433384	Identifier	face		3433357	0					
ANR	3433385	Argument	num_coords		3433357	1					
ANR	3433386	Identifier	num_coords		3433357	0					
ANR	3433387	Argument	coords		3433357	2					
ANR	3433388	Identifier	coords		3433357	0					
ANR	3433389	ReturnType	static FT_Error		3433357	1					
ANR	3433390	Identifier	cff_set_mm_blend		3433357	2					
ANR	3433391	ParameterList	"CFF_Face face , FT_UInt num_coords , FT_Fixed * coords"		3433357	3					
ANR	3433392	Parameter	CFF_Face face	840:20:27473:27487	3433357	0	True				
ANR	3433393	ParameterType	CFF_Face		3433357	0					
ANR	3433394	Identifier	face		3433357	1					
ANR	3433395	Parameter	FT_UInt num_coords	841:20:27510:27530	3433357	1	True				
ANR	3433396	ParameterType	FT_UInt		3433357	0					
ANR	3433397	Identifier	num_coords		3433357	1					
ANR	3433398	Parameter	FT_Fixed * coords	842:20:27553:27569	3433357	2	True				
ANR	3433399	ParameterType	FT_Fixed *		3433357	0					
ANR	3433400	Identifier	coords		3433357	1					
ANR	3433401	CFGEntryNode	ENTRY		3433357		True				
ANR	3433402	CFGExitNode	EXIT		3433357		True				
ANR	3433403	Symbol	mm		3433357						
ANR	3433404	Symbol	face -> mm		3433357						
ANR	3433405	Symbol	face		3433357						
ANR	3433406	Symbol	num_coords		3433357						
ANR	3433407	Symbol	* mm		3433357						
ANR	3433408	Symbol	FT_FACE		3433357						
ANR	3433409	Symbol	mm -> set_mm_blend		3433357						
ANR	3433410	Symbol	* face		3433357						
ANR	3433411	Symbol	coords		3433357						
ANR	3433412	Function	cff_get_mm_blend	851:2:27724:28005							
ANR	3433413	FunctionDef	"cff_get_mm_blend (CFF_Face face , FT_UInt num_coords , FT_Fixed * coords)"		3433412	0					
ANR	3433414	CompoundStatement		855:2:27862:28005	3433412	0					
ANR	3433415	IdentifierDeclStatement	FT_Service_MultiMasters mm = ( FT_Service_MultiMasters ) face -> mm ;	856:4:27868:27931	3433412	0	True				
ANR	3433416	IdentifierDecl	mm = ( FT_Service_MultiMasters ) face -> mm		3433412	0					
ANR	3433417	IdentifierDeclType	FT_Service_MultiMasters		3433412	0					
ANR	3433418	Identifier	mm		3433412	1					
ANR	3433419	AssignmentExpression	mm = ( FT_Service_MultiMasters ) face -> mm		3433412	2		=			
ANR	3433420	Identifier	mm		3433412	0					
ANR	3433421	CastExpression	( FT_Service_MultiMasters ) face -> mm		3433412	1					
ANR	3433422	CastTarget	FT_Service_MultiMasters		3433412	0					
ANR	3433423	PtrMemberAccess	face -> mm		3433412	1					
ANR	3433424	Identifier	face		3433412	0					
ANR	3433425	Identifier	mm		3433412	1					
ANR	3433426	ReturnStatement	"return mm -> get_mm_blend ( FT_FACE ( face ) , num_coords , coords ) ;"	859:4:27939:28001	3433412	1	True				
ANR	3433427	CallExpression	"mm -> get_mm_blend ( FT_FACE ( face ) , num_coords , coords )"		3433412	0					
ANR	3433428	Callee	mm -> get_mm_blend		3433412	0					
ANR	3433429	PtrMemberAccess	mm -> get_mm_blend		3433412	0					
ANR	3433430	Identifier	mm		3433412	0					
ANR	3433431	Identifier	get_mm_blend		3433412	1					
ANR	3433432	ArgumentList	FT_FACE ( face )		3433412	1					
ANR	3433433	Argument	FT_FACE ( face )		3433412	0					
ANR	3433434	CallExpression	FT_FACE ( face )		3433412	0					
ANR	3433435	Callee	FT_FACE		3433412	0					
ANR	3433436	Identifier	FT_FACE		3433412	0					
ANR	3433437	ArgumentList	face		3433412	1					
ANR	3433438	Argument	face		3433412	0					
ANR	3433439	Identifier	face		3433412	0					
ANR	3433440	Argument	num_coords		3433412	1					
ANR	3433441	Identifier	num_coords		3433412	0					
ANR	3433442	Argument	coords		3433412	2					
ANR	3433443	Identifier	coords		3433412	0					
ANR	3433444	ReturnType	static FT_Error		3433412	1					
ANR	3433445	Identifier	cff_get_mm_blend		3433412	2					
ANR	3433446	ParameterList	"CFF_Face face , FT_UInt num_coords , FT_Fixed * coords"		3433412	3					
ANR	3433447	Parameter	CFF_Face face	852:20:27760:27774	3433412	0	True				
ANR	3433448	ParameterType	CFF_Face		3433412	0					
ANR	3433449	Identifier	face		3433412	1					
ANR	3433450	Parameter	FT_UInt num_coords	853:20:27797:27817	3433412	1	True				
ANR	3433451	ParameterType	FT_UInt		3433412	0					
ANR	3433452	Identifier	num_coords		3433412	1					
ANR	3433453	Parameter	FT_Fixed * coords	854:20:27840:27856	3433412	2	True				
ANR	3433454	ParameterType	FT_Fixed *		3433412	0					
ANR	3433455	Identifier	coords		3433412	1					
ANR	3433456	CFGEntryNode	ENTRY		3433412		True				
ANR	3433457	CFGExitNode	EXIT		3433412		True				
ANR	3433458	Symbol	face -> mm		3433412						
ANR	3433459	Symbol	mm		3433412						
ANR	3433460	Symbol	face		3433412						
ANR	3433461	Symbol	num_coords		3433412						
ANR	3433462	Symbol	* mm		3433412						
ANR	3433463	Symbol	FT_FACE		3433412						
ANR	3433464	Symbol	mm -> get_mm_blend		3433412						
ANR	3433465	Symbol	* face		3433412						
ANR	3433466	Symbol	coords		3433412						
ANR	3433467	Function	cff_get_mm_var	863:2:28011:28235							
ANR	3433468	FunctionDef	"cff_get_mm_var (CFF_Face face , FT_MM_Var * * master)"		3433467	0					
ANR	3433469	CompoundStatement		866:2:28106:28235	3433467	0					
ANR	3433470	IdentifierDeclStatement	FT_Service_MultiMasters mm = ( FT_Service_MultiMasters ) face -> mm ;	867:4:28112:28175	3433467	0	True				
ANR	3433471	IdentifierDecl	mm = ( FT_Service_MultiMasters ) face -> mm		3433467	0					
ANR	3433472	IdentifierDeclType	FT_Service_MultiMasters		3433467	0					
ANR	3433473	Identifier	mm		3433467	1					
ANR	3433474	AssignmentExpression	mm = ( FT_Service_MultiMasters ) face -> mm		3433467	2		=			
ANR	3433475	Identifier	mm		3433467	0					
ANR	3433476	CastExpression	( FT_Service_MultiMasters ) face -> mm		3433467	1					
ANR	3433477	CastTarget	FT_Service_MultiMasters		3433467	0					
ANR	3433478	PtrMemberAccess	face -> mm		3433467	1					
ANR	3433479	Identifier	face		3433467	0					
ANR	3433480	Identifier	mm		3433467	1					
ANR	3433481	ReturnStatement	"return mm -> get_mm_var ( FT_FACE ( face ) , master ) ;"	870:4:28183:28231	3433467	1	True				
ANR	3433482	CallExpression	"mm -> get_mm_var ( FT_FACE ( face ) , master )"		3433467	0					
ANR	3433483	Callee	mm -> get_mm_var		3433467	0					
ANR	3433484	PtrMemberAccess	mm -> get_mm_var		3433467	0					
ANR	3433485	Identifier	mm		3433467	0					
ANR	3433486	Identifier	get_mm_var		3433467	1					
ANR	3433487	ArgumentList	FT_FACE ( face )		3433467	1					
ANR	3433488	Argument	FT_FACE ( face )		3433467	0					
ANR	3433489	CallExpression	FT_FACE ( face )		3433467	0					
ANR	3433490	Callee	FT_FACE		3433467	0					
ANR	3433491	Identifier	FT_FACE		3433467	0					
ANR	3433492	ArgumentList	face		3433467	1					
ANR	3433493	Argument	face		3433467	0					
ANR	3433494	Identifier	face		3433467	0					
ANR	3433495	Argument	master		3433467	1					
ANR	3433496	Identifier	master		3433467	0					
ANR	3433497	ReturnType	static FT_Error		3433467	1					
ANR	3433498	Identifier	cff_get_mm_var		3433467	2					
ANR	3433499	ParameterList	"CFF_Face face , FT_MM_Var * * master"		3433467	3					
ANR	3433500	Parameter	CFF_Face face	864:18:28045:28061	3433467	0	True				
ANR	3433501	ParameterType	CFF_Face		3433467	0					
ANR	3433502	Identifier	face		3433467	1					
ANR	3433503	Parameter	FT_MM_Var * * master	865:18:28082:28100	3433467	1	True				
ANR	3433504	ParameterType	FT_MM_Var * *		3433467	0					
ANR	3433505	Identifier	master		3433467	1					
ANR	3433506	CFGEntryNode	ENTRY		3433467		True				
ANR	3433507	CFGExitNode	EXIT		3433467		True				
ANR	3433508	Symbol	mm		3433467						
ANR	3433509	Symbol	face -> mm		3433467						
ANR	3433510	Symbol	face		3433467						
ANR	3433511	Symbol	* mm		3433467						
ANR	3433512	Symbol	mm -> get_mm_var		3433467						
ANR	3433513	Symbol	FT_FACE		3433467						
ANR	3433514	Symbol	* face		3433467						
ANR	3433515	Symbol	master		3433467						
ANR	3433516	Function	cff_set_var_design	874:2:28241:28530							
ANR	3433517	FunctionDef	"cff_set_var_design (CFF_Face face , FT_UInt num_coords , FT_Fixed * coords)"		3433516	0					
ANR	3433518	CompoundStatement		878:2:28385:28530	3433516	0					
ANR	3433519	IdentifierDeclStatement	FT_Service_MultiMasters mm = ( FT_Service_MultiMasters ) face -> mm ;	879:4:28391:28454	3433516	0	True				
ANR	3433520	IdentifierDecl	mm = ( FT_Service_MultiMasters ) face -> mm		3433516	0					
ANR	3433521	IdentifierDeclType	FT_Service_MultiMasters		3433516	0					
ANR	3433522	Identifier	mm		3433516	1					
ANR	3433523	AssignmentExpression	mm = ( FT_Service_MultiMasters ) face -> mm		3433516	2		=			
ANR	3433524	Identifier	mm		3433516	0					
ANR	3433525	CastExpression	( FT_Service_MultiMasters ) face -> mm		3433516	1					
ANR	3433526	CastTarget	FT_Service_MultiMasters		3433516	0					
ANR	3433527	PtrMemberAccess	face -> mm		3433516	1					
ANR	3433528	Identifier	face		3433516	0					
ANR	3433529	Identifier	mm		3433516	1					
ANR	3433530	ReturnStatement	"return mm -> set_var_design ( FT_FACE ( face ) , num_coords , coords ) ;"	882:4:28462:28526	3433516	1	True				
ANR	3433531	CallExpression	"mm -> set_var_design ( FT_FACE ( face ) , num_coords , coords )"		3433516	0					
ANR	3433532	Callee	mm -> set_var_design		3433516	0					
ANR	3433533	PtrMemberAccess	mm -> set_var_design		3433516	0					
ANR	3433534	Identifier	mm		3433516	0					
ANR	3433535	Identifier	set_var_design		3433516	1					
ANR	3433536	ArgumentList	FT_FACE ( face )		3433516	1					
ANR	3433537	Argument	FT_FACE ( face )		3433516	0					
ANR	3433538	CallExpression	FT_FACE ( face )		3433516	0					
ANR	3433539	Callee	FT_FACE		3433516	0					
ANR	3433540	Identifier	FT_FACE		3433516	0					
ANR	3433541	ArgumentList	face		3433516	1					
ANR	3433542	Argument	face		3433516	0					
ANR	3433543	Identifier	face		3433516	0					
ANR	3433544	Argument	num_coords		3433516	1					
ANR	3433545	Identifier	num_coords		3433516	0					
ANR	3433546	Argument	coords		3433516	2					
ANR	3433547	Identifier	coords		3433516	0					
ANR	3433548	ReturnType	static FT_Error		3433516	1					
ANR	3433549	Identifier	cff_set_var_design		3433516	2					
ANR	3433550	ParameterList	"CFF_Face face , FT_UInt num_coords , FT_Fixed * coords"		3433516	3					
ANR	3433551	Parameter	CFF_Face face	875:22:28279:28293	3433516	0	True				
ANR	3433552	ParameterType	CFF_Face		3433516	0					
ANR	3433553	Identifier	face		3433516	1					
ANR	3433554	Parameter	FT_UInt num_coords	876:22:28318:28338	3433516	1	True				
ANR	3433555	ParameterType	FT_UInt		3433516	0					
ANR	3433556	Identifier	num_coords		3433516	1					
ANR	3433557	Parameter	FT_Fixed * coords	877:22:28363:28379	3433516	2	True				
ANR	3433558	ParameterType	FT_Fixed *		3433516	0					
ANR	3433559	Identifier	coords		3433516	1					
ANR	3433560	CFGEntryNode	ENTRY		3433516		True				
ANR	3433561	CFGExitNode	EXIT		3433516		True				
ANR	3433562	Symbol	face -> mm		3433516						
ANR	3433563	Symbol	mm		3433516						
ANR	3433564	Symbol	face		3433516						
ANR	3433565	Symbol	num_coords		3433516						
ANR	3433566	Symbol	* mm		3433516						
ANR	3433567	Symbol	mm -> set_var_design		3433516						
ANR	3433568	Symbol	FT_FACE		3433516						
ANR	3433569	Symbol	* face		3433516						
ANR	3433570	Symbol	coords		3433516						
ANR	3433571	Function	cff_get_var_design	886:2:28536:28825							
ANR	3433572	FunctionDef	"cff_get_var_design (CFF_Face face , FT_UInt num_coords , FT_Fixed * coords)"		3433571	0					
ANR	3433573	CompoundStatement		890:2:28680:28825	3433571	0					
ANR	3433574	IdentifierDeclStatement	FT_Service_MultiMasters mm = ( FT_Service_MultiMasters ) face -> mm ;	891:4:28686:28749	3433571	0	True				
ANR	3433575	IdentifierDecl	mm = ( FT_Service_MultiMasters ) face -> mm		3433571	0					
ANR	3433576	IdentifierDeclType	FT_Service_MultiMasters		3433571	0					
ANR	3433577	Identifier	mm		3433571	1					
ANR	3433578	AssignmentExpression	mm = ( FT_Service_MultiMasters ) face -> mm		3433571	2		=			
ANR	3433579	Identifier	mm		3433571	0					
ANR	3433580	CastExpression	( FT_Service_MultiMasters ) face -> mm		3433571	1					
ANR	3433581	CastTarget	FT_Service_MultiMasters		3433571	0					
ANR	3433582	PtrMemberAccess	face -> mm		3433571	1					
ANR	3433583	Identifier	face		3433571	0					
ANR	3433584	Identifier	mm		3433571	1					
ANR	3433585	ReturnStatement	"return mm -> get_var_design ( FT_FACE ( face ) , num_coords , coords ) ;"	894:4:28757:28821	3433571	1	True				
ANR	3433586	CallExpression	"mm -> get_var_design ( FT_FACE ( face ) , num_coords , coords )"		3433571	0					
ANR	3433587	Callee	mm -> get_var_design		3433571	0					
ANR	3433588	PtrMemberAccess	mm -> get_var_design		3433571	0					
ANR	3433589	Identifier	mm		3433571	0					
ANR	3433590	Identifier	get_var_design		3433571	1					
ANR	3433591	ArgumentList	FT_FACE ( face )		3433571	1					
ANR	3433592	Argument	FT_FACE ( face )		3433571	0					
ANR	3433593	CallExpression	FT_FACE ( face )		3433571	0					
ANR	3433594	Callee	FT_FACE		3433571	0					
ANR	3433595	Identifier	FT_FACE		3433571	0					
ANR	3433596	ArgumentList	face		3433571	1					
ANR	3433597	Argument	face		3433571	0					
ANR	3433598	Identifier	face		3433571	0					
ANR	3433599	Argument	num_coords		3433571	1					
ANR	3433600	Identifier	num_coords		3433571	0					
ANR	3433601	Argument	coords		3433571	2					
ANR	3433602	Identifier	coords		3433571	0					
ANR	3433603	ReturnType	static FT_Error		3433571	1					
ANR	3433604	Identifier	cff_get_var_design		3433571	2					
ANR	3433605	ParameterList	"CFF_Face face , FT_UInt num_coords , FT_Fixed * coords"		3433571	3					
ANR	3433606	Parameter	CFF_Face face	887:22:28574:28588	3433571	0	True				
ANR	3433607	ParameterType	CFF_Face		3433571	0					
ANR	3433608	Identifier	face		3433571	1					
ANR	3433609	Parameter	FT_UInt num_coords	888:22:28613:28633	3433571	1	True				
ANR	3433610	ParameterType	FT_UInt		3433571	0					
ANR	3433611	Identifier	num_coords		3433571	1					
ANR	3433612	Parameter	FT_Fixed * coords	889:22:28658:28674	3433571	2	True				
ANR	3433613	ParameterType	FT_Fixed *		3433571	0					
ANR	3433614	Identifier	coords		3433571	1					
ANR	3433615	CFGEntryNode	ENTRY		3433571		True				
ANR	3433616	CFGExitNode	EXIT		3433571		True				
ANR	3433617	Symbol	face -> mm		3433571						
ANR	3433618	Symbol	mm		3433571						
ANR	3433619	Symbol	face		3433571						
ANR	3433620	Symbol	num_coords		3433571						
ANR	3433621	Symbol	* mm		3433571						
ANR	3433622	Symbol	FT_FACE		3433571						
ANR	3433623	Symbol	* face		3433571						
ANR	3433624	Symbol	coords		3433571						
ANR	3433625	Symbol	mm -> get_var_design		3433571						
ANR	3433626	Function	cff_set_instance	898:2:28831:29071							
ANR	3433627	FunctionDef	"cff_set_instance (CFF_Face face , FT_UInt instance_index)"		3433626	0					
ANR	3433628	CompoundStatement		901:2:28932:29071	3433626	0					
ANR	3433629	IdentifierDeclStatement	FT_Service_MultiMasters mm = ( FT_Service_MultiMasters ) face -> mm ;	902:4:28938:29001	3433626	0	True				
ANR	3433630	IdentifierDecl	mm = ( FT_Service_MultiMasters ) face -> mm		3433626	0					
ANR	3433631	IdentifierDeclType	FT_Service_MultiMasters		3433626	0					
ANR	3433632	Identifier	mm		3433626	1					
ANR	3433633	AssignmentExpression	mm = ( FT_Service_MultiMasters ) face -> mm		3433626	2		=			
ANR	3433634	Identifier	mm		3433626	0					
ANR	3433635	CastExpression	( FT_Service_MultiMasters ) face -> mm		3433626	1					
ANR	3433636	CastTarget	FT_Service_MultiMasters		3433626	0					
ANR	3433637	PtrMemberAccess	face -> mm		3433626	1					
ANR	3433638	Identifier	face		3433626	0					
ANR	3433639	Identifier	mm		3433626	1					
ANR	3433640	ReturnStatement	"return mm -> set_instance ( FT_FACE ( face ) , instance_index ) ;"	905:4:29009:29067	3433626	1	True				
ANR	3433641	CallExpression	"mm -> set_instance ( FT_FACE ( face ) , instance_index )"		3433626	0					
ANR	3433642	Callee	mm -> set_instance		3433626	0					
ANR	3433643	PtrMemberAccess	mm -> set_instance		3433626	0					
ANR	3433644	Identifier	mm		3433626	0					
ANR	3433645	Identifier	set_instance		3433626	1					
ANR	3433646	ArgumentList	FT_FACE ( face )		3433626	1					
ANR	3433647	Argument	FT_FACE ( face )		3433626	0					
ANR	3433648	CallExpression	FT_FACE ( face )		3433626	0					
ANR	3433649	Callee	FT_FACE		3433626	0					
ANR	3433650	Identifier	FT_FACE		3433626	0					
ANR	3433651	ArgumentList	face		3433626	1					
ANR	3433652	Argument	face		3433626	0					
ANR	3433653	Identifier	face		3433626	0					
ANR	3433654	Argument	instance_index		3433626	1					
ANR	3433655	Identifier	instance_index		3433626	0					
ANR	3433656	ReturnType	static FT_Error		3433626	1					
ANR	3433657	Identifier	cff_set_instance		3433626	2					
ANR	3433658	ParameterList	"CFF_Face face , FT_UInt instance_index"		3433626	3					
ANR	3433659	Parameter	CFF_Face face	899:20:28867:28880	3433626	0	True				
ANR	3433660	ParameterType	CFF_Face		3433626	0					
ANR	3433661	Identifier	face		3433626	1					
ANR	3433662	Parameter	FT_UInt instance_index	900:20:28903:28926	3433626	1	True				
ANR	3433663	ParameterType	FT_UInt		3433626	0					
ANR	3433664	Identifier	instance_index		3433626	1					
ANR	3433665	CFGEntryNode	ENTRY		3433626		True				
ANR	3433666	CFGExitNode	EXIT		3433626		True				
ANR	3433667	Symbol	face -> mm		3433626						
ANR	3433668	Symbol	mm		3433626						
ANR	3433669	Symbol	mm -> set_instance		3433626						
ANR	3433670	Symbol	face		3433626						
ANR	3433671	Symbol	* mm		3433626						
ANR	3433672	Symbol	instance_index		3433626						
ANR	3433673	Symbol	FT_FACE		3433626						
ANR	3433674	Symbol	* face		3433626						
ANR	3433675	Function	cff_hadvance_adjust	931:2:29933:30228							
ANR	3433676	FunctionDef	"cff_hadvance_adjust (CFF_Face face , FT_UInt gindex , FT_Int * avalue)"		3433675	0					
ANR	3433677	CompoundStatement		935:2:30073:30228	3433675	0					
ANR	3433678	IdentifierDeclStatement	FT_Service_MetricsVariations var = ( FT_Service_MetricsVariations ) face -> var ;	936:4:30079:30154	3433675	0	True				
ANR	3433679	IdentifierDecl	var = ( FT_Service_MetricsVariations ) face -> var		3433675	0					
ANR	3433680	IdentifierDeclType	FT_Service_MetricsVariations		3433675	0					
ANR	3433681	Identifier	var		3433675	1					
ANR	3433682	AssignmentExpression	var = ( FT_Service_MetricsVariations ) face -> var		3433675	2		=			
ANR	3433683	Identifier	var		3433675	0					
ANR	3433684	CastExpression	( FT_Service_MetricsVariations ) face -> var		3433675	1					
ANR	3433685	CastTarget	FT_Service_MetricsVariations		3433675	0					
ANR	3433686	PtrMemberAccess	face -> var		3433675	1					
ANR	3433687	Identifier	face		3433675	0					
ANR	3433688	Identifier	var		3433675	1					
ANR	3433689	ReturnStatement	"return var -> hadvance_adjust ( FT_FACE ( face ) , gindex , avalue ) ;"	939:4:30162:30224	3433675	1	True				
ANR	3433690	CallExpression	"var -> hadvance_adjust ( FT_FACE ( face ) , gindex , avalue )"		3433675	0					
ANR	3433691	Callee	var -> hadvance_adjust		3433675	0					
ANR	3433692	PtrMemberAccess	var -> hadvance_adjust		3433675	0					
ANR	3433693	Identifier	var		3433675	0					
ANR	3433694	Identifier	hadvance_adjust		3433675	1					
ANR	3433695	ArgumentList	FT_FACE ( face )		3433675	1					
ANR	3433696	Argument	FT_FACE ( face )		3433675	0					
ANR	3433697	CallExpression	FT_FACE ( face )		3433675	0					
ANR	3433698	Callee	FT_FACE		3433675	0					
ANR	3433699	Identifier	FT_FACE		3433675	0					
ANR	3433700	ArgumentList	face		3433675	1					
ANR	3433701	Argument	face		3433675	0					
ANR	3433702	Identifier	face		3433675	0					
ANR	3433703	Argument	gindex		3433675	1					
ANR	3433704	Identifier	gindex		3433675	0					
ANR	3433705	Argument	avalue		3433675	2					
ANR	3433706	Identifier	avalue		3433675	0					
ANR	3433707	ReturnType	static FT_Error		3433675	1					
ANR	3433708	Identifier	cff_hadvance_adjust		3433675	2					
ANR	3433709	ParameterList	"CFF_Face face , FT_UInt gindex , FT_Int * avalue"		3433675	3					
ANR	3433710	Parameter	CFF_Face face	932:23:29972:29985	3433675	0	True				
ANR	3433711	ParameterType	CFF_Face		3433675	0					
ANR	3433712	Identifier	face		3433675	1					
ANR	3433713	Parameter	FT_UInt gindex	933:23:30011:30026	3433675	1	True				
ANR	3433714	ParameterType	FT_UInt		3433675	0					
ANR	3433715	Identifier	gindex		3433675	1					
ANR	3433716	Parameter	FT_Int * avalue	934:23:30052:30067	3433675	2	True				
ANR	3433717	ParameterType	FT_Int *		3433675	0					
ANR	3433718	Identifier	avalue		3433675	1					
ANR	3433719	CFGEntryNode	ENTRY		3433675		True				
ANR	3433720	CFGExitNode	EXIT		3433675		True				
ANR	3433721	Symbol	* var		3433675						
ANR	3433722	Symbol	face		3433675						
ANR	3433723	Symbol	avalue		3433675						
ANR	3433724	Symbol	gindex		3433675						
ANR	3433725	Symbol	var		3433675						
ANR	3433726	Symbol	face -> var		3433675						
ANR	3433727	Symbol	FT_FACE		3433675						
ANR	3433728	Symbol	var -> hadvance_adjust		3433675						
ANR	3433729	Symbol	* face		3433675						
ANR	3433730	Function	cff_metrics_adjust	943:2:30234:30418							
ANR	3433731	FunctionDef	cff_metrics_adjust (CFF_Face face)		3433730	0					
ANR	3433732	CompoundStatement		945:2:30287:30418	3433730	0					
ANR	3433733	IdentifierDeclStatement	FT_Service_MetricsVariations var = ( FT_Service_MetricsVariations ) face -> var ;	946:4:30293:30368	3433730	0	True				
ANR	3433734	IdentifierDecl	var = ( FT_Service_MetricsVariations ) face -> var		3433730	0					
ANR	3433735	IdentifierDeclType	FT_Service_MetricsVariations		3433730	0					
ANR	3433736	Identifier	var		3433730	1					
ANR	3433737	AssignmentExpression	var = ( FT_Service_MetricsVariations ) face -> var		3433730	2		=			
ANR	3433738	Identifier	var		3433730	0					
ANR	3433739	CastExpression	( FT_Service_MetricsVariations ) face -> var		3433730	1					
ANR	3433740	CastTarget	FT_Service_MetricsVariations		3433730	0					
ANR	3433741	PtrMemberAccess	face -> var		3433730	1					
ANR	3433742	Identifier	face		3433730	0					
ANR	3433743	Identifier	var		3433730	1					
ANR	3433744	ExpressionStatement	var -> metrics_adjust ( FT_FACE ( face ) )	949:4:30376:30414	3433730	1	True				
ANR	3433745	CallExpression	var -> metrics_adjust ( FT_FACE ( face ) )		3433730	0					
ANR	3433746	Callee	var -> metrics_adjust		3433730	0					
ANR	3433747	PtrMemberAccess	var -> metrics_adjust		3433730	0					
ANR	3433748	Identifier	var		3433730	0					
ANR	3433749	Identifier	metrics_adjust		3433730	1					
ANR	3433750	ArgumentList	FT_FACE ( face )		3433730	1					
ANR	3433751	Argument	FT_FACE ( face )		3433730	0					
ANR	3433752	CallExpression	FT_FACE ( face )		3433730	0					
ANR	3433753	Callee	FT_FACE		3433730	0					
ANR	3433754	Identifier	FT_FACE		3433730	0					
ANR	3433755	ArgumentList	face		3433730	1					
ANR	3433756	Argument	face		3433730	0					
ANR	3433757	Identifier	face		3433730	0					
ANR	3433758	ReturnType	static void		3433730	1					
ANR	3433759	Identifier	cff_metrics_adjust		3433730	2					
ANR	3433760	ParameterList	CFF_Face face		3433730	3					
ANR	3433761	Parameter	CFF_Face face	944:22:30268:30281	3433730	0	True				
ANR	3433762	ParameterType	CFF_Face		3433730	0					
ANR	3433763	Identifier	face		3433730	1					
ANR	3433764	CFGEntryNode	ENTRY		3433730		True				
ANR	3433765	CFGExitNode	EXIT		3433730		True				
ANR	3433766	Symbol	face		3433730						
ANR	3433767	Symbol	var		3433730						
ANR	3433768	Symbol	face -> var		3433730						
ANR	3433769	Symbol	FT_FACE		3433730						
ANR	3433770	Symbol	* face		3433730						
ANR	3433771	Function	cff_get_interface	1057:2:35111:36028							
ANR	3433772	FunctionDef	"cff_get_interface (FT_Module driver , const char * module_interface)"		3433771	0					
ANR	3433773	CompoundStatement		1059:2:35229:36028	3433771	0					
ANR	3433774	IdentifierDeclStatement	FT_Library library ;	1060:4:35235:35263	3433771	0	True				
ANR	3433775	IdentifierDecl	library		3433771	0					
ANR	3433776	IdentifierDeclType	FT_Library		3433771	0					
ANR	3433777	Identifier	library		3433771	1					
ANR	3433778	IdentifierDeclStatement	FT_Module sfnt ;	1061:4:35269:35294	3433771	1	True				
ANR	3433779	IdentifierDecl	sfnt		3433771	0					
ANR	3433780	IdentifierDeclType	FT_Module		3433771	0					
ANR	3433781	Identifier	sfnt		3433771	1					
ANR	3433782	IdentifierDeclStatement	FT_Module_Interface result ;	1062:4:35300:35327	3433771	2	True				
ANR	3433783	IdentifierDecl	result		3433771	0					
ANR	3433784	IdentifierDeclType	FT_Module_Interface		3433771	0					
ANR	3433785	Identifier	result		3433771	1					
ANR	3433786	IfStatement	if ( ! driver )		3433771	3					
ANR	3433787	Condition	! driver	1067:9:35430:35436	3433771	0	True				
ANR	3433788	UnaryOperationExpression	! driver		3433771	0					
ANR	3433789	UnaryOperator	!		3433771	0					
ANR	3433790	Identifier	driver		3433771	1					
ANR	3433791	ReturnStatement	return NULL ;	1068:6:35446:35457	3433771	1	True				
ANR	3433792	Identifier	NULL		3433771	0					
ANR	3433793	ExpressionStatement	library = driver -> library	1069:4:35463:35488	3433771	4	True				
ANR	3433794	AssignmentExpression	library = driver -> library		3433771	0		=			
ANR	3433795	Identifier	library		3433771	0					
ANR	3433796	PtrMemberAccess	driver -> library		3433771	1					
ANR	3433797	Identifier	driver		3433771	0					
ANR	3433798	Identifier	library		3433771	1					
ANR	3433799	IfStatement	if ( ! library )		3433771	5					
ANR	3433800	Condition	! library	1070:9:35499:35506	3433771	0	True				
ANR	3433801	UnaryOperationExpression	! library		3433771	0					
ANR	3433802	UnaryOperator	!		3433771	0					
ANR	3433803	Identifier	library		3433771	1					
ANR	3433804	ReturnStatement	return NULL ;	1071:6:35516:35527	3433771	1	True				
ANR	3433805	Identifier	NULL		3433771	0					
ANR	3433806	ExpressionStatement	"result = ft_service_list_lookup ( CFF_SERVICES_GET , module_interface )"	1074:4:35541:35610	3433771	6	True				
ANR	3433807	AssignmentExpression	"result = ft_service_list_lookup ( CFF_SERVICES_GET , module_interface )"		3433771	0		=			
ANR	3433808	Identifier	result		3433771	0					
ANR	3433809	CallExpression	"ft_service_list_lookup ( CFF_SERVICES_GET , module_interface )"		3433771	1					
ANR	3433810	Callee	ft_service_list_lookup		3433771	0					
ANR	3433811	Identifier	ft_service_list_lookup		3433771	0					
ANR	3433812	ArgumentList	CFF_SERVICES_GET		3433771	1					
ANR	3433813	Argument	CFF_SERVICES_GET		3433771	0					
ANR	3433814	Identifier	CFF_SERVICES_GET		3433771	0					
ANR	3433815	Argument	module_interface		3433771	1					
ANR	3433816	Identifier	module_interface		3433771	0					
ANR	3433817	IfStatement	if ( result )		3433771	7					
ANR	3433818	Condition	result	1075:9:35621:35626	3433771	0	True				
ANR	3433819	Identifier	result		3433771	0					
ANR	3433820	ReturnStatement	return result ;	1076:6:35636:35649	3433771	1	True				
ANR	3433821	Identifier	result		3433771	0					
ANR	3433822	IfStatement	if ( ! driver )		3433771	8					
ANR	3433823	Condition	! driver	1080:9:35746:35752	3433771	0	True				
ANR	3433824	UnaryOperationExpression	! driver		3433771	0					
ANR	3433825	UnaryOperator	!		3433771	0					
ANR	3433826	Identifier	driver		3433771	1					
ANR	3433827	ReturnStatement	return NULL ;	1081:6:35762:35773	3433771	1	True				
ANR	3433828	Identifier	NULL		3433771	0					
ANR	3433829	ExpressionStatement	library = driver -> library	1082:4:35779:35804	3433771	9	True				
ANR	3433830	AssignmentExpression	library = driver -> library		3433771	0		=			
ANR	3433831	Identifier	library		3433771	0					
ANR	3433832	PtrMemberAccess	driver -> library		3433771	1					
ANR	3433833	Identifier	driver		3433771	0					
ANR	3433834	Identifier	library		3433771	1					
ANR	3433835	IfStatement	if ( ! library )		3433771	10					
ANR	3433836	Condition	! library	1083:9:35815:35822	3433771	0	True				
ANR	3433837	UnaryOperationExpression	! library		3433771	0					
ANR	3433838	UnaryOperator	!		3433771	0					
ANR	3433839	Identifier	library		3433771	1					
ANR	3433840	ReturnStatement	return NULL ;	1084:6:35832:35843	3433771	1	True				
ANR	3433841	Identifier	NULL		3433771	0					
ANR	3433842	ExpressionStatement	"sfnt = FT_Get_Module ( library , ""sfnt"" )"	1088:4:35908:35947	3433771	11	True				
ANR	3433843	AssignmentExpression	"sfnt = FT_Get_Module ( library , ""sfnt"" )"		3433771	0		=			
ANR	3433844	Identifier	sfnt		3433771	0					
ANR	3433845	CallExpression	"FT_Get_Module ( library , ""sfnt"" )"		3433771	1					
ANR	3433846	Callee	FT_Get_Module		3433771	0					
ANR	3433847	Identifier	FT_Get_Module		3433771	0					
ANR	3433848	ArgumentList	library		3433771	1					
ANR	3433849	Argument	library		3433771	0					
ANR	3433850	Identifier	library		3433771	0					
ANR	3433851	Argument	"""sfnt"""		3433771	1					
ANR	3433852	PrimaryExpression	"""sfnt"""		3433771	0					
ANR	3433853	ReturnStatement	"return sfnt ? sfnt -> clazz -> get_interface ( sfnt , module_interface ) : 0 ;"	1090:4:35954:36024	3433771	12	True				
ANR	3433854	ConditionalExpression	"sfnt ? sfnt -> clazz -> get_interface ( sfnt , module_interface ) : 0"		3433771	0					
ANR	3433855	Condition	sfnt		3433771	0					
ANR	3433856	Identifier	sfnt		3433771	0					
ANR	3433857	CallExpression	"sfnt -> clazz -> get_interface ( sfnt , module_interface )"		3433771	1					
ANR	3433858	Callee	sfnt -> clazz -> get_interface		3433771	0					
ANR	3433859	PtrMemberAccess	sfnt -> clazz -> get_interface		3433771	0					
ANR	3433860	PtrMemberAccess	sfnt -> clazz		3433771	0					
ANR	3433861	Identifier	sfnt		3433771	0					
ANR	3433862	Identifier	clazz		3433771	1					
ANR	3433863	Identifier	get_interface		3433771	1					
ANR	3433864	ArgumentList	sfnt		3433771	1					
ANR	3433865	Argument	sfnt		3433771	0					
ANR	3433866	Identifier	sfnt		3433771	0					
ANR	3433867	Argument	module_interface		3433771	1					
ANR	3433868	Identifier	module_interface		3433771	0					
ANR	3433869	PrimaryExpression	0		3433771	2					
ANR	3433870	Identifier	cff_get_interface		3433771	1					
ANR	3433871	ParameterList	"FT_Module driver , const char * module_interface"		3433771	2					
ANR	3433872	Parameter	FT_Module driver	1057:21:35130:35148	3433771	0	True				
ANR	3433873	ParameterType	FT_Module		3433771	0					
ANR	3433874	Identifier	driver		3433771	1					
ANR	3433875	Parameter	const char * module_interface	1058:21:35195:35223	3433771	1	True				
ANR	3433876	ParameterType	const char *		3433771	0					
ANR	3433877	Identifier	module_interface		3433771	1					
ANR	3433878	CFGEntryNode	ENTRY		3433771		True				
ANR	3433879	CFGExitNode	EXIT		3433771		True				
ANR	3433880	Symbol	module_interface		3433771						
ANR	3433881	Symbol	NULL		3433771						
ANR	3433882	Symbol	FT_Get_Module		3433771						
ANR	3433883	Symbol	sfnt -> clazz		3433771						
ANR	3433884	Symbol	sfnt -> clazz -> get_interface		3433771						
ANR	3433885	Symbol	* driver		3433771						
ANR	3433886	Symbol	* sfnt		3433771						
ANR	3433887	Symbol	sfnt		3433771						
ANR	3433888	Symbol	ft_service_list_lookup		3433771						
ANR	3433889	Symbol	result		3433771						
ANR	3433890	Symbol	driver -> library		3433771						
ANR	3433891	Symbol	library		3433771						
ANR	3433892	Symbol	driver		3433771						
ANR	3433893	Symbol	* sfnt -> clazz		3433771						
ANR	3433894	Symbol	CFF_SERVICES_GET		3433771						
ANR	3433895	Symbol	* * sfnt		3433771						
