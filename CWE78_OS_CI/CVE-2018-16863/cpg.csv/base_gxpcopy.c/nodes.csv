command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1204715	File	data/converged/CVE-2018-16863_ghostpdl/base_gxpcopy.c								
ANR	1204716	DeclStmt									
ANR	1204717	Decl							void	"void ( segment * , const segment * , const gs_fixed_point * )"	adjust_point_to_tangent
ANR	1204718	Function	break_line_if_long	30:0:943:1831							
ANR	1204719	FunctionDef	"break_line_if_long (gx_path * ppath , const segment * pseg)"		1204718	0					
ANR	1204720	CompoundStatement		32:0:1017:1831	1204718	0					
ANR	1204721	IdentifierDeclStatement	fixed x0 = ppath -> position . x ;	33:4:1023:1051	1204718	0	True				
ANR	1204722	IdentifierDecl	x0 = ppath -> position . x		1204718	0					
ANR	1204723	IdentifierDeclType	fixed		1204718	0					
ANR	1204724	Identifier	x0		1204718	1					
ANR	1204725	AssignmentExpression	x0 = ppath -> position . x		1204718	2		=			
ANR	1204726	Identifier	x0		1204718	0					
ANR	1204727	MemberAccess	ppath -> position . x		1204718	1					
ANR	1204728	PtrMemberAccess	ppath -> position		1204718	0					
ANR	1204729	Identifier	ppath		1204718	0					
ANR	1204730	Identifier	position		1204718	1					
ANR	1204731	Identifier	x		1204718	1					
ANR	1204732	IdentifierDeclStatement	fixed y0 = ppath -> position . y ;	34:4:1057:1085	1204718	1	True				
ANR	1204733	IdentifierDecl	y0 = ppath -> position . y		1204718	0					
ANR	1204734	IdentifierDeclType	fixed		1204718	0					
ANR	1204735	Identifier	y0		1204718	1					
ANR	1204736	AssignmentExpression	y0 = ppath -> position . y		1204718	2		=			
ANR	1204737	Identifier	y0		1204718	0					
ANR	1204738	MemberAccess	ppath -> position . y		1204718	1					
ANR	1204739	PtrMemberAccess	ppath -> position		1204718	0					
ANR	1204740	Identifier	ppath		1204718	0					
ANR	1204741	Identifier	position		1204718	1					
ANR	1204742	Identifier	y		1204718	1					
ANR	1204743	IfStatement	"if ( gx_check_fixed_diff_overflow ( pseg -> pt . x , x0 ) || gx_check_fixed_diff_overflow ( pseg -> pt . y , y0 ) )"		1204718	2					
ANR	1204744	Condition	"gx_check_fixed_diff_overflow ( pseg -> pt . x , x0 ) || gx_check_fixed_diff_overflow ( pseg -> pt . y , y0 )"	36:8:1096:1195	1204718	0	True				
ANR	1204745	OrExpression	"gx_check_fixed_diff_overflow ( pseg -> pt . x , x0 ) || gx_check_fixed_diff_overflow ( pseg -> pt . y , y0 )"		1204718	0		||			
ANR	1204746	CallExpression	"gx_check_fixed_diff_overflow ( pseg -> pt . x , x0 )"		1204718	0					
ANR	1204747	Callee	gx_check_fixed_diff_overflow		1204718	0					
ANR	1204748	Identifier	gx_check_fixed_diff_overflow		1204718	0					
ANR	1204749	ArgumentList	pseg -> pt . x		1204718	1					
ANR	1204750	Argument	pseg -> pt . x		1204718	0					
ANR	1204751	MemberAccess	pseg -> pt . x		1204718	0					
ANR	1204752	PtrMemberAccess	pseg -> pt		1204718	0					
ANR	1204753	Identifier	pseg		1204718	0					
ANR	1204754	Identifier	pt		1204718	1					
ANR	1204755	Identifier	x		1204718	1					
ANR	1204756	Argument	x0		1204718	1					
ANR	1204757	Identifier	x0		1204718	0					
ANR	1204758	CallExpression	"gx_check_fixed_diff_overflow ( pseg -> pt . y , y0 )"		1204718	1					
ANR	1204759	Callee	gx_check_fixed_diff_overflow		1204718	0					
ANR	1204760	Identifier	gx_check_fixed_diff_overflow		1204718	0					
ANR	1204761	ArgumentList	pseg -> pt . y		1204718	1					
ANR	1204762	Argument	pseg -> pt . y		1204718	0					
ANR	1204763	MemberAccess	pseg -> pt . y		1204718	0					
ANR	1204764	PtrMemberAccess	pseg -> pt		1204718	0					
ANR	1204765	Identifier	pseg		1204718	0					
ANR	1204766	Identifier	pt		1204718	1					
ANR	1204767	Identifier	y		1204718	1					
ANR	1204768	Argument	y0		1204718	1					
ANR	1204769	Identifier	y0		1204718	0					
ANR	1204770	CompoundStatement		7:8:190:200	1204718	1					
ANR	1204771	IdentifierDeclStatement	"fixed x , y ;"	38:8:1208:1218	1204718	0	True				
ANR	1204772	IdentifierDecl	x		1204718	0					
ANR	1204773	IdentifierDeclType	fixed		1204718	0					
ANR	1204774	Identifier	x		1204718	1					
ANR	1204775	IdentifierDecl	y		1204718	1					
ANR	1204776	IdentifierDeclType	fixed		1204718	0					
ANR	1204777	Identifier	y		1204718	1					
ANR	1204778	IfStatement	"if ( gx_check_fixed_sum_overflow ( pseg -> pt . x , x0 ) )"		1204718	1					
ANR	1204779	Condition	"gx_check_fixed_sum_overflow ( pseg -> pt . x , x0 )"	40:12:1233:1275	1204718	0	True				
ANR	1204780	CallExpression	"gx_check_fixed_sum_overflow ( pseg -> pt . x , x0 )"		1204718	0					
ANR	1204781	Callee	gx_check_fixed_sum_overflow		1204718	0					
ANR	1204782	Identifier	gx_check_fixed_sum_overflow		1204718	0					
ANR	1204783	ArgumentList	pseg -> pt . x		1204718	1					
ANR	1204784	Argument	pseg -> pt . x		1204718	0					
ANR	1204785	MemberAccess	pseg -> pt . x		1204718	0					
ANR	1204786	PtrMemberAccess	pseg -> pt		1204718	0					
ANR	1204787	Identifier	pseg		1204718	0					
ANR	1204788	Identifier	pt		1204718	1					
ANR	1204789	Identifier	x		1204718	1					
ANR	1204790	Argument	x0		1204718	1					
ANR	1204791	Identifier	x0		1204718	0					
ANR	1204792	ExpressionStatement	x = ( pseg -> pt . x >> 1 ) + ( x0 >> 1 )	41:12:1290:1323	1204718	1	True				
ANR	1204793	AssignmentExpression	x = ( pseg -> pt . x >> 1 ) + ( x0 >> 1 )		1204718	0		=			
ANR	1204794	Identifier	x		1204718	0					
ANR	1204795	AdditiveExpression	( pseg -> pt . x >> 1 ) + ( x0 >> 1 )		1204718	1		+			
ANR	1204796	ShiftExpression	pseg -> pt . x >> 1		1204718	0		>>			
ANR	1204797	MemberAccess	pseg -> pt . x		1204718	0					
ANR	1204798	PtrMemberAccess	pseg -> pt		1204718	0					
ANR	1204799	Identifier	pseg		1204718	0					
ANR	1204800	Identifier	pt		1204718	1					
ANR	1204801	Identifier	x		1204718	1					
ANR	1204802	PrimaryExpression	1		1204718	1					
ANR	1204803	ShiftExpression	x0 >> 1		1204718	1		>>			
ANR	1204804	Identifier	x0		1204718	0					
ANR	1204805	PrimaryExpression	1		1204718	1					
ANR	1204806	ElseStatement	else		1204718	0					
ANR	1204807	ExpressionStatement	x = ( pseg -> pt . x + x0 ) >> 1	43:12:1350:1376	1204718	0	True				
ANR	1204808	AssignmentExpression	x = ( pseg -> pt . x + x0 ) >> 1		1204718	0		=			
ANR	1204809	Identifier	x		1204718	0					
ANR	1204810	ShiftExpression	( pseg -> pt . x + x0 ) >> 1		1204718	1		>>			
ANR	1204811	AdditiveExpression	pseg -> pt . x + x0		1204718	0		+			
ANR	1204812	MemberAccess	pseg -> pt . x		1204718	0					
ANR	1204813	PtrMemberAccess	pseg -> pt		1204718	0					
ANR	1204814	Identifier	pseg		1204718	0					
ANR	1204815	Identifier	pt		1204718	1					
ANR	1204816	Identifier	x		1204718	1					
ANR	1204817	Identifier	x0		1204718	1					
ANR	1204818	PrimaryExpression	1		1204718	1					
ANR	1204819	IfStatement	"if ( gx_check_fixed_sum_overflow ( pseg -> pt . y , y0 ) )"		1204718	2					
ANR	1204820	Condition	"gx_check_fixed_sum_overflow ( pseg -> pt . y , y0 )"	44:12:1390:1432	1204718	0	True				
ANR	1204821	CallExpression	"gx_check_fixed_sum_overflow ( pseg -> pt . y , y0 )"		1204718	0					
ANR	1204822	Callee	gx_check_fixed_sum_overflow		1204718	0					
ANR	1204823	Identifier	gx_check_fixed_sum_overflow		1204718	0					
ANR	1204824	ArgumentList	pseg -> pt . y		1204718	1					
ANR	1204825	Argument	pseg -> pt . y		1204718	0					
ANR	1204826	MemberAccess	pseg -> pt . y		1204718	0					
ANR	1204827	PtrMemberAccess	pseg -> pt		1204718	0					
ANR	1204828	Identifier	pseg		1204718	0					
ANR	1204829	Identifier	pt		1204718	1					
ANR	1204830	Identifier	y		1204718	1					
ANR	1204831	Argument	y0		1204718	1					
ANR	1204832	Identifier	y0		1204718	0					
ANR	1204833	ExpressionStatement	y = ( pseg -> pt . y >> 1 ) + ( y0 >> 1 )	45:12:1447:1480	1204718	1	True				
ANR	1204834	AssignmentExpression	y = ( pseg -> pt . y >> 1 ) + ( y0 >> 1 )		1204718	0		=			
ANR	1204835	Identifier	y		1204718	0					
ANR	1204836	AdditiveExpression	( pseg -> pt . y >> 1 ) + ( y0 >> 1 )		1204718	1		+			
ANR	1204837	ShiftExpression	pseg -> pt . y >> 1		1204718	0		>>			
ANR	1204838	MemberAccess	pseg -> pt . y		1204718	0					
ANR	1204839	PtrMemberAccess	pseg -> pt		1204718	0					
ANR	1204840	Identifier	pseg		1204718	0					
ANR	1204841	Identifier	pt		1204718	1					
ANR	1204842	Identifier	y		1204718	1					
ANR	1204843	PrimaryExpression	1		1204718	1					
ANR	1204844	ShiftExpression	y0 >> 1		1204718	1		>>			
ANR	1204845	Identifier	y0		1204718	0					
ANR	1204846	PrimaryExpression	1		1204718	1					
ANR	1204847	ElseStatement	else		1204718	0					
ANR	1204848	ExpressionStatement	y = ( pseg -> pt . y + y0 ) >> 1	47:12:1507:1533	1204718	0	True				
ANR	1204849	AssignmentExpression	y = ( pseg -> pt . y + y0 ) >> 1		1204718	0		=			
ANR	1204850	Identifier	y		1204718	0					
ANR	1204851	ShiftExpression	( pseg -> pt . y + y0 ) >> 1		1204718	1		>>			
ANR	1204852	AdditiveExpression	pseg -> pt . y + y0		1204718	0		+			
ANR	1204853	MemberAccess	pseg -> pt . y		1204718	0					
ANR	1204854	PtrMemberAccess	pseg -> pt		1204718	0					
ANR	1204855	Identifier	pseg		1204718	0					
ANR	1204856	Identifier	pt		1204718	1					
ANR	1204857	Identifier	y		1204718	1					
ANR	1204858	Identifier	y0		1204718	1					
ANR	1204859	PrimaryExpression	1		1204718	1					
ANR	1204860	ReturnStatement	"return gx_path_add_line_notes ( ppath , x , y , pseg -> notes ) ;"	48:8:1543:1598	1204718	3	True				
ANR	1204861	CallExpression	"gx_path_add_line_notes ( ppath , x , y , pseg -> notes )"		1204718	0					
ANR	1204862	Callee	gx_path_add_line_notes		1204718	0					
ANR	1204863	Identifier	gx_path_add_line_notes		1204718	0					
ANR	1204864	ArgumentList	ppath		1204718	1					
ANR	1204865	Argument	ppath		1204718	0					
ANR	1204866	Identifier	ppath		1204718	0					
ANR	1204867	Argument	x		1204718	1					
ANR	1204868	Identifier	x		1204718	0					
ANR	1204869	Argument	y		1204718	2					
ANR	1204870	Identifier	y		1204718	0					
ANR	1204871	Argument	pseg -> notes		1204718	3					
ANR	1204872	PtrMemberAccess	pseg -> notes		1204718	0					
ANR	1204873	Identifier	pseg		1204718	0					
ANR	1204874	Identifier	notes		1204718	1					
ANR	1204875	ReturnStatement	return 0 ;	54:4:1821:1829	1204718	3	True				
ANR	1204876	PrimaryExpression	0		1204718	0					
ANR	1204877	ReturnType	static inline int		1204718	1					
ANR	1204878	Identifier	break_line_if_long		1204718	2					
ANR	1204879	ParameterList	"gx_path * ppath , const segment * pseg"		1204718	3					
ANR	1204880	Parameter	gx_path * ppath	31:19:980:993	1204718	0	True				
ANR	1204881	ParameterType	gx_path *		1204718	0					
ANR	1204882	Identifier	ppath		1204718	1					
ANR	1204883	Parameter	const segment * pseg	31:35:996:1014	1204718	1	True				
ANR	1204884	ParameterType	const segment *		1204718	0					
ANR	1204885	Identifier	pseg		1204718	1					
ANR	1204886	CFGEntryNode	ENTRY		1204718		True				
ANR	1204887	CFGExitNode	EXIT		1204718		True				
ANR	1204888	Symbol	* ppath		1204718						
ANR	1204889	Symbol	pseg -> notes		1204718						
ANR	1204890	Symbol	gx_path_add_line_notes		1204718						
ANR	1204891	Symbol	gx_check_fixed_sum_overflow		1204718						
ANR	1204892	Symbol	ppath -> position . x		1204718						
ANR	1204893	Symbol	pseg -> pt . x		1204718						
ANR	1204894	Symbol	ppath		1204718						
ANR	1204895	Symbol	pseg -> pt . y		1204718						
ANR	1204896	Symbol	ppath -> position . y		1204718						
ANR	1204897	Symbol	gx_check_fixed_diff_overflow		1204718						
ANR	1204898	Symbol	pseg		1204718						
ANR	1204899	Symbol	pseg -> pt		1204718						
ANR	1204900	Symbol	y0		1204718						
ANR	1204901	Symbol	x0		1204718						
ANR	1204902	Symbol	* pseg		1204718						
ANR	1204903	Symbol	x		1204718						
ANR	1204904	Symbol	y		1204718						
ANR	1204905	Symbol	ppath -> position		1204718						
ANR	1204906	Function	break_gap_if_long	56:0:1833:2719							
ANR	1204907	FunctionDef	"break_gap_if_long (gx_path * ppath , const segment * pseg)"		1204906	0					
ANR	1204908	CompoundStatement		58:0:1906:2719	1204906	0					
ANR	1204909	IdentifierDeclStatement	fixed x0 = ppath -> position . x ;	59:4:1912:1940	1204906	0	True				
ANR	1204910	IdentifierDecl	x0 = ppath -> position . x		1204906	0					
ANR	1204911	IdentifierDeclType	fixed		1204906	0					
ANR	1204912	Identifier	x0		1204906	1					
ANR	1204913	AssignmentExpression	x0 = ppath -> position . x		1204906	2		=			
ANR	1204914	Identifier	x0		1204906	0					
ANR	1204915	MemberAccess	ppath -> position . x		1204906	1					
ANR	1204916	PtrMemberAccess	ppath -> position		1204906	0					
ANR	1204917	Identifier	ppath		1204906	0					
ANR	1204918	Identifier	position		1204906	1					
ANR	1204919	Identifier	x		1204906	1					
ANR	1204920	IdentifierDeclStatement	fixed y0 = ppath -> position . y ;	60:4:1946:1974	1204906	1	True				
ANR	1204921	IdentifierDecl	y0 = ppath -> position . y		1204906	0					
ANR	1204922	IdentifierDeclType	fixed		1204906	0					
ANR	1204923	Identifier	y0		1204906	1					
ANR	1204924	AssignmentExpression	y0 = ppath -> position . y		1204906	2		=			
ANR	1204925	Identifier	y0		1204906	0					
ANR	1204926	MemberAccess	ppath -> position . y		1204906	1					
ANR	1204927	PtrMemberAccess	ppath -> position		1204906	0					
ANR	1204928	Identifier	ppath		1204906	0					
ANR	1204929	Identifier	position		1204906	1					
ANR	1204930	Identifier	y		1204906	1					
ANR	1204931	IfStatement	"if ( gx_check_fixed_diff_overflow ( pseg -> pt . x , x0 ) || gx_check_fixed_diff_overflow ( pseg -> pt . y , y0 ) )"		1204906	2					
ANR	1204932	Condition	"gx_check_fixed_diff_overflow ( pseg -> pt . x , x0 ) || gx_check_fixed_diff_overflow ( pseg -> pt . y , y0 )"	62:8:1985:2084	1204906	0	True				
ANR	1204933	OrExpression	"gx_check_fixed_diff_overflow ( pseg -> pt . x , x0 ) || gx_check_fixed_diff_overflow ( pseg -> pt . y , y0 )"		1204906	0		||			
ANR	1204934	CallExpression	"gx_check_fixed_diff_overflow ( pseg -> pt . x , x0 )"		1204906	0					
ANR	1204935	Callee	gx_check_fixed_diff_overflow		1204906	0					
ANR	1204936	Identifier	gx_check_fixed_diff_overflow		1204906	0					
ANR	1204937	ArgumentList	pseg -> pt . x		1204906	1					
ANR	1204938	Argument	pseg -> pt . x		1204906	0					
ANR	1204939	MemberAccess	pseg -> pt . x		1204906	0					
ANR	1204940	PtrMemberAccess	pseg -> pt		1204906	0					
ANR	1204941	Identifier	pseg		1204906	0					
ANR	1204942	Identifier	pt		1204906	1					
ANR	1204943	Identifier	x		1204906	1					
ANR	1204944	Argument	x0		1204906	1					
ANR	1204945	Identifier	x0		1204906	0					
ANR	1204946	CallExpression	"gx_check_fixed_diff_overflow ( pseg -> pt . y , y0 )"		1204906	1					
ANR	1204947	Callee	gx_check_fixed_diff_overflow		1204906	0					
ANR	1204948	Identifier	gx_check_fixed_diff_overflow		1204906	0					
ANR	1204949	ArgumentList	pseg -> pt . y		1204906	1					
ANR	1204950	Argument	pseg -> pt . y		1204906	0					
ANR	1204951	MemberAccess	pseg -> pt . y		1204906	0					
ANR	1204952	PtrMemberAccess	pseg -> pt		1204906	0					
ANR	1204953	Identifier	pseg		1204906	0					
ANR	1204954	Identifier	pt		1204906	1					
ANR	1204955	Identifier	y		1204906	1					
ANR	1204956	Argument	y0		1204906	1					
ANR	1204957	Identifier	y0		1204906	0					
ANR	1204958	CompoundStatement		7:8:190:200	1204906	1					
ANR	1204959	IdentifierDeclStatement	"fixed x , y ;"	64:8:2097:2107	1204906	0	True				
ANR	1204960	IdentifierDecl	x		1204906	0					
ANR	1204961	IdentifierDeclType	fixed		1204906	0					
ANR	1204962	Identifier	x		1204906	1					
ANR	1204963	IdentifierDecl	y		1204906	1					
ANR	1204964	IdentifierDeclType	fixed		1204906	0					
ANR	1204965	Identifier	y		1204906	1					
ANR	1204966	IfStatement	"if ( gx_check_fixed_sum_overflow ( pseg -> pt . x , x0 ) )"		1204906	1					
ANR	1204967	Condition	"gx_check_fixed_sum_overflow ( pseg -> pt . x , x0 )"	66:12:2122:2164	1204906	0	True				
ANR	1204968	CallExpression	"gx_check_fixed_sum_overflow ( pseg -> pt . x , x0 )"		1204906	0					
ANR	1204969	Callee	gx_check_fixed_sum_overflow		1204906	0					
ANR	1204970	Identifier	gx_check_fixed_sum_overflow		1204906	0					
ANR	1204971	ArgumentList	pseg -> pt . x		1204906	1					
ANR	1204972	Argument	pseg -> pt . x		1204906	0					
ANR	1204973	MemberAccess	pseg -> pt . x		1204906	0					
ANR	1204974	PtrMemberAccess	pseg -> pt		1204906	0					
ANR	1204975	Identifier	pseg		1204906	0					
ANR	1204976	Identifier	pt		1204906	1					
ANR	1204977	Identifier	x		1204906	1					
ANR	1204978	Argument	x0		1204906	1					
ANR	1204979	Identifier	x0		1204906	0					
ANR	1204980	ExpressionStatement	x = ( pseg -> pt . x >> 1 ) + ( x0 >> 1 )	67:12:2179:2212	1204906	1	True				
ANR	1204981	AssignmentExpression	x = ( pseg -> pt . x >> 1 ) + ( x0 >> 1 )		1204906	0		=			
ANR	1204982	Identifier	x		1204906	0					
ANR	1204983	AdditiveExpression	( pseg -> pt . x >> 1 ) + ( x0 >> 1 )		1204906	1		+			
ANR	1204984	ShiftExpression	pseg -> pt . x >> 1		1204906	0		>>			
ANR	1204985	MemberAccess	pseg -> pt . x		1204906	0					
ANR	1204986	PtrMemberAccess	pseg -> pt		1204906	0					
ANR	1204987	Identifier	pseg		1204906	0					
ANR	1204988	Identifier	pt		1204906	1					
ANR	1204989	Identifier	x		1204906	1					
ANR	1204990	PrimaryExpression	1		1204906	1					
ANR	1204991	ShiftExpression	x0 >> 1		1204906	1		>>			
ANR	1204992	Identifier	x0		1204906	0					
ANR	1204993	PrimaryExpression	1		1204906	1					
ANR	1204994	ElseStatement	else		1204906	0					
ANR	1204995	ExpressionStatement	x = ( pseg -> pt . x + x0 ) >> 1	69:12:2239:2265	1204906	0	True				
ANR	1204996	AssignmentExpression	x = ( pseg -> pt . x + x0 ) >> 1		1204906	0		=			
ANR	1204997	Identifier	x		1204906	0					
ANR	1204998	ShiftExpression	( pseg -> pt . x + x0 ) >> 1		1204906	1		>>			
ANR	1204999	AdditiveExpression	pseg -> pt . x + x0		1204906	0		+			
ANR	1205000	MemberAccess	pseg -> pt . x		1204906	0					
ANR	1205001	PtrMemberAccess	pseg -> pt		1204906	0					
ANR	1205002	Identifier	pseg		1204906	0					
ANR	1205003	Identifier	pt		1204906	1					
ANR	1205004	Identifier	x		1204906	1					
ANR	1205005	Identifier	x0		1204906	1					
ANR	1205006	PrimaryExpression	1		1204906	1					
ANR	1205007	IfStatement	"if ( gx_check_fixed_sum_overflow ( pseg -> pt . y , y0 ) )"		1204906	2					
ANR	1205008	Condition	"gx_check_fixed_sum_overflow ( pseg -> pt . y , y0 )"	70:12:2279:2321	1204906	0	True				
ANR	1205009	CallExpression	"gx_check_fixed_sum_overflow ( pseg -> pt . y , y0 )"		1204906	0					
ANR	1205010	Callee	gx_check_fixed_sum_overflow		1204906	0					
ANR	1205011	Identifier	gx_check_fixed_sum_overflow		1204906	0					
ANR	1205012	ArgumentList	pseg -> pt . y		1204906	1					
ANR	1205013	Argument	pseg -> pt . y		1204906	0					
ANR	1205014	MemberAccess	pseg -> pt . y		1204906	0					
ANR	1205015	PtrMemberAccess	pseg -> pt		1204906	0					
ANR	1205016	Identifier	pseg		1204906	0					
ANR	1205017	Identifier	pt		1204906	1					
ANR	1205018	Identifier	y		1204906	1					
ANR	1205019	Argument	y0		1204906	1					
ANR	1205020	Identifier	y0		1204906	0					
ANR	1205021	ExpressionStatement	y = ( pseg -> pt . y >> 1 ) + ( y0 >> 1 )	71:12:2336:2369	1204906	1	True				
ANR	1205022	AssignmentExpression	y = ( pseg -> pt . y >> 1 ) + ( y0 >> 1 )		1204906	0		=			
ANR	1205023	Identifier	y		1204906	0					
ANR	1205024	AdditiveExpression	( pseg -> pt . y >> 1 ) + ( y0 >> 1 )		1204906	1		+			
ANR	1205025	ShiftExpression	pseg -> pt . y >> 1		1204906	0		>>			
ANR	1205026	MemberAccess	pseg -> pt . y		1204906	0					
ANR	1205027	PtrMemberAccess	pseg -> pt		1204906	0					
ANR	1205028	Identifier	pseg		1204906	0					
ANR	1205029	Identifier	pt		1204906	1					
ANR	1205030	Identifier	y		1204906	1					
ANR	1205031	PrimaryExpression	1		1204906	1					
ANR	1205032	ShiftExpression	y0 >> 1		1204906	1		>>			
ANR	1205033	Identifier	y0		1204906	0					
ANR	1205034	PrimaryExpression	1		1204906	1					
ANR	1205035	ElseStatement	else		1204906	0					
ANR	1205036	ExpressionStatement	y = ( pseg -> pt . y + y0 ) >> 1	73:12:2396:2422	1204906	0	True				
ANR	1205037	AssignmentExpression	y = ( pseg -> pt . y + y0 ) >> 1		1204906	0		=			
ANR	1205038	Identifier	y		1204906	0					
ANR	1205039	ShiftExpression	( pseg -> pt . y + y0 ) >> 1		1204906	1		>>			
ANR	1205040	AdditiveExpression	pseg -> pt . y + y0		1204906	0		+			
ANR	1205041	MemberAccess	pseg -> pt . y		1204906	0					
ANR	1205042	PtrMemberAccess	pseg -> pt		1204906	0					
ANR	1205043	Identifier	pseg		1204906	0					
ANR	1205044	Identifier	pt		1204906	1					
ANR	1205045	Identifier	y		1204906	1					
ANR	1205046	Identifier	y0		1204906	1					
ANR	1205047	PrimaryExpression	1		1204906	1					
ANR	1205048	ReturnStatement	"return gx_path_add_gap_notes ( ppath , x , y , pseg -> notes ) ;"	74:8:2432:2486	1204906	3	True				
ANR	1205049	CallExpression	"gx_path_add_gap_notes ( ppath , x , y , pseg -> notes )"		1204906	0					
ANR	1205050	Callee	gx_path_add_gap_notes		1204906	0					
ANR	1205051	Identifier	gx_path_add_gap_notes		1204906	0					
ANR	1205052	ArgumentList	ppath		1204906	1					
ANR	1205053	Argument	ppath		1204906	0					
ANR	1205054	Identifier	ppath		1204906	0					
ANR	1205055	Argument	x		1204906	1					
ANR	1205056	Identifier	x		1204906	0					
ANR	1205057	Argument	y		1204906	2					
ANR	1205058	Identifier	y		1204906	0					
ANR	1205059	Argument	pseg -> notes		1204906	3					
ANR	1205060	PtrMemberAccess	pseg -> notes		1204906	0					
ANR	1205061	Identifier	pseg		1204906	0					
ANR	1205062	Identifier	notes		1204906	1					
ANR	1205063	ReturnStatement	return 0 ;	80:4:2709:2717	1204906	3	True				
ANR	1205064	PrimaryExpression	0		1204906	0					
ANR	1205065	ReturnType	static inline int		1204906	1					
ANR	1205066	Identifier	break_gap_if_long		1204906	2					
ANR	1205067	ParameterList	"gx_path * ppath , const segment * pseg"		1204906	3					
ANR	1205068	Parameter	gx_path * ppath	57:18:1869:1882	1204906	0	True				
ANR	1205069	ParameterType	gx_path *		1204906	0					
ANR	1205070	Identifier	ppath		1204906	1					
ANR	1205071	Parameter	const segment * pseg	57:34:1885:1903	1204906	1	True				
ANR	1205072	ParameterType	const segment *		1204906	0					
ANR	1205073	Identifier	pseg		1204906	1					
ANR	1205074	CFGEntryNode	ENTRY		1204906		True				
ANR	1205075	CFGExitNode	EXIT		1204906		True				
ANR	1205076	Symbol	* ppath		1204906						
ANR	1205077	Symbol	gx_path_add_gap_notes		1204906						
ANR	1205078	Symbol	pseg -> notes		1204906						
ANR	1205079	Symbol	gx_check_fixed_sum_overflow		1204906						
ANR	1205080	Symbol	ppath -> position . x		1204906						
ANR	1205081	Symbol	pseg -> pt . x		1204906						
ANR	1205082	Symbol	ppath		1204906						
ANR	1205083	Symbol	pseg -> pt . y		1204906						
ANR	1205084	Symbol	ppath -> position . y		1204906						
ANR	1205085	Symbol	gx_check_fixed_diff_overflow		1204906						
ANR	1205086	Symbol	pseg		1204906						
ANR	1205087	Symbol	pseg -> pt		1204906						
ANR	1205088	Symbol	y0		1204906						
ANR	1205089	Symbol	x0		1204906						
ANR	1205090	Symbol	* pseg		1204906						
ANR	1205091	Symbol	x		1204906						
ANR	1205092	Symbol	y		1204906						
ANR	1205093	Symbol	ppath -> position		1204906						
ANR	1205094	Function	gx_path_copy_reducing	85:0:2827:12605							
ANR	1205095	FunctionDef	"gx_path_copy_reducing (const gx_path * ppath_old , gx_path * ppath , fixed fixed_flatness , const gs_gstate * pgs , gx_path_copy_options options)"		1205094	0					
ANR	1205096	CompoundStatement		89:0:3013:12605	1205094	0					
ANR	1205097	IdentifierDeclStatement	const segment * pseg ;	90:4:3019:3038	1205094	0	True				
ANR	1205098	IdentifierDecl	* pseg		1205094	0					
ANR	1205099	IdentifierDeclType	const segment *		1205094	0					
ANR	1205100	Identifier	pseg		1205094	1					
ANR	1205101	IdentifierDeclStatement	fixed flat = fixed_flatness ;	91:4:3044:3071	1205094	1	True				
ANR	1205102	IdentifierDecl	flat = fixed_flatness		1205094	0					
ANR	1205103	IdentifierDeclType	fixed		1205094	0					
ANR	1205104	Identifier	flat		1205094	1					
ANR	1205105	AssignmentExpression	flat = fixed_flatness		1205094	2		=			
ANR	1205106	Identifier	fixed_flatness		1205094	0					
ANR	1205107	Identifier	fixed_flatness		1205094	1					
ANR	1205108	IdentifierDeclStatement	gs_fixed_point expansion ;	92:4:3077:3101	1205094	2	True				
ANR	1205109	IdentifierDecl	expansion		1205094	0					
ANR	1205110	IdentifierDeclType	gs_fixed_point		1205094	0					
ANR	1205111	Identifier	expansion		1205094	1					
ANR	1205112	IdentifierDeclStatement	int code = gx_path_unshare ( ppath ) ;	97:4:3208:3241	1205094	3	True				
ANR	1205113	IdentifierDecl	code = gx_path_unshare ( ppath )		1205094	0					
ANR	1205114	IdentifierDeclType	int		1205094	0					
ANR	1205115	Identifier	code		1205094	1					
ANR	1205116	AssignmentExpression	code = gx_path_unshare ( ppath )		1205094	2		=			
ANR	1205117	Identifier	code		1205094	0					
ANR	1205118	CallExpression	gx_path_unshare ( ppath )		1205094	1					
ANR	1205119	Callee	gx_path_unshare		1205094	0					
ANR	1205120	Identifier	gx_path_unshare		1205094	0					
ANR	1205121	ArgumentList	ppath		1205094	1					
ANR	1205122	Argument	ppath		1205094	0					
ANR	1205123	Identifier	ppath		1205094	0					
ANR	1205124	IfStatement	if ( code < 0 )		1205094	4					
ANR	1205125	Condition	code < 0	99:8:3252:3259	1205094	0	True				
ANR	1205126	RelationalExpression	code < 0		1205094	0		<			
ANR	1205127	Identifier	code		1205094	0					
ANR	1205128	PrimaryExpression	0		1205094	1					
ANR	1205129	ReturnStatement	return code ;	100:8:3270:3281	1205094	1	True				
ANR	1205130	Identifier	code		1205094	0					
ANR	1205131	IfStatement	if ( gs_debug_c ( 'P' ) )		1205094	5					
ANR	1205132	Condition	gs_debug_c ( 'P' )	102:8:3304:3318	1205094	0	True				
ANR	1205133	CallExpression	gs_debug_c ( 'P' )		1205094	0					
ANR	1205134	Callee	gs_debug_c		1205094	0					
ANR	1205135	Identifier	gs_debug_c		1205094	0					
ANR	1205136	ArgumentList	'P'		1205094	1					
ANR	1205137	Argument	'P'		1205094	0					
ANR	1205138	PrimaryExpression	'P'		1205094	0					
ANR	1205139	ExpressionStatement	"gx_dump_path ( ppath_old , ""before reducing"" )"	103:8:3329:3371	1205094	1	True				
ANR	1205140	CallExpression	"gx_dump_path ( ppath_old , ""before reducing"" )"		1205094	0					
ANR	1205141	Callee	gx_dump_path		1205094	0					
ANR	1205142	Identifier	gx_dump_path		1205094	0					
ANR	1205143	ArgumentList	ppath_old		1205094	1					
ANR	1205144	Argument	ppath_old		1205094	0					
ANR	1205145	Identifier	ppath_old		1205094	0					
ANR	1205146	Argument	"""before reducing"""		1205094	1					
ANR	1205147	PrimaryExpression	"""before reducing"""		1205094	0					
ANR	1205148	IfStatement	if ( options & pco_for_stroke )		1205094	6					
ANR	1205149	Condition	options & pco_for_stroke	105:8:3388:3411	1205094	0	True				
ANR	1205150	BitAndExpression	options & pco_for_stroke		1205094	0		&			
ANR	1205151	Identifier	options		1205094	0					
ANR	1205152	Identifier	pco_for_stroke		1205094	1					
ANR	1205153	CompoundStatement		19:8:478:520	1205094	1					
ANR	1205154	IdentifierDeclStatement	double width = pgs -> line_params . half_width ;	107:8:3492:3534	1205094	0	True				
ANR	1205155	IdentifierDecl	width = pgs -> line_params . half_width		1205094	0					
ANR	1205156	IdentifierDeclType	double		1205094	0					
ANR	1205157	Identifier	width		1205094	1					
ANR	1205158	AssignmentExpression	width = pgs -> line_params . half_width		1205094	2		=			
ANR	1205159	Identifier	width		1205094	0					
ANR	1205160	MemberAccess	pgs -> line_params . half_width		1205094	1					
ANR	1205161	PtrMemberAccess	pgs -> line_params		1205094	0					
ANR	1205162	Identifier	pgs		1205094	0					
ANR	1205163	Identifier	line_params		1205094	1					
ANR	1205164	Identifier	half_width		1205094	1					
ANR	1205165	ExpressionStatement	expansion . x = float2fixed ( ( fabs ( pgs -> ctm . xx ) + fabs ( pgs -> ctm . yx ) ) * width ) * 2	109:8:3545:3635	1205094	1	True				
ANR	1205166	AssignmentExpression	expansion . x = float2fixed ( ( fabs ( pgs -> ctm . xx ) + fabs ( pgs -> ctm . yx ) ) * width ) * 2		1205094	0		=			
ANR	1205167	MemberAccess	expansion . x		1205094	0					
ANR	1205168	Identifier	expansion		1205094	0					
ANR	1205169	Identifier	x		1205094	1					
ANR	1205170	MultiplicativeExpression	float2fixed ( ( fabs ( pgs -> ctm . xx ) + fabs ( pgs -> ctm . yx ) ) * width ) * 2		1205094	1		*			
ANR	1205171	CallExpression	float2fixed ( ( fabs ( pgs -> ctm . xx ) + fabs ( pgs -> ctm . yx ) ) * width )		1205094	0					
ANR	1205172	Callee	float2fixed		1205094	0					
ANR	1205173	Identifier	float2fixed		1205094	0					
ANR	1205174	ArgumentList	( fabs ( pgs -> ctm . xx ) + fabs ( pgs -> ctm . yx ) ) * width		1205094	1					
ANR	1205175	Argument	( fabs ( pgs -> ctm . xx ) + fabs ( pgs -> ctm . yx ) ) * width		1205094	0					
ANR	1205176	MultiplicativeExpression	( fabs ( pgs -> ctm . xx ) + fabs ( pgs -> ctm . yx ) ) * width		1205094	0		*			
ANR	1205177	AdditiveExpression	fabs ( pgs -> ctm . xx ) + fabs ( pgs -> ctm . yx )		1205094	0		+			
ANR	1205178	CallExpression	fabs ( pgs -> ctm . xx )		1205094	0					
ANR	1205179	Callee	fabs		1205094	0					
ANR	1205180	Identifier	fabs		1205094	0					
ANR	1205181	ArgumentList	pgs -> ctm . xx		1205094	1					
ANR	1205182	Argument	pgs -> ctm . xx		1205094	0					
ANR	1205183	MemberAccess	pgs -> ctm . xx		1205094	0					
ANR	1205184	PtrMemberAccess	pgs -> ctm		1205094	0					
ANR	1205185	Identifier	pgs		1205094	0					
ANR	1205186	Identifier	ctm		1205094	1					
ANR	1205187	Identifier	xx		1205094	1					
ANR	1205188	CallExpression	fabs ( pgs -> ctm . yx )		1205094	1					
ANR	1205189	Callee	fabs		1205094	0					
ANR	1205190	Identifier	fabs		1205094	0					
ANR	1205191	ArgumentList	pgs -> ctm . yx		1205094	1					
ANR	1205192	Argument	pgs -> ctm . yx		1205094	0					
ANR	1205193	MemberAccess	pgs -> ctm . yx		1205094	0					
ANR	1205194	PtrMemberAccess	pgs -> ctm		1205094	0					
ANR	1205195	Identifier	pgs		1205094	0					
ANR	1205196	Identifier	ctm		1205094	1					
ANR	1205197	Identifier	yx		1205094	1					
ANR	1205198	Identifier	width		1205094	1					
ANR	1205199	PrimaryExpression	2		1205094	1					
ANR	1205200	ExpressionStatement	expansion . y = float2fixed ( ( fabs ( pgs -> ctm . xy ) + fabs ( pgs -> ctm . yy ) ) * width ) * 2	111:8:3645:3735	1205094	2	True				
ANR	1205201	AssignmentExpression	expansion . y = float2fixed ( ( fabs ( pgs -> ctm . xy ) + fabs ( pgs -> ctm . yy ) ) * width ) * 2		1205094	0		=			
ANR	1205202	MemberAccess	expansion . y		1205094	0					
ANR	1205203	Identifier	expansion		1205094	0					
ANR	1205204	Identifier	y		1205094	1					
ANR	1205205	MultiplicativeExpression	float2fixed ( ( fabs ( pgs -> ctm . xy ) + fabs ( pgs -> ctm . yy ) ) * width ) * 2		1205094	1		*			
ANR	1205206	CallExpression	float2fixed ( ( fabs ( pgs -> ctm . xy ) + fabs ( pgs -> ctm . yy ) ) * width )		1205094	0					
ANR	1205207	Callee	float2fixed		1205094	0					
ANR	1205208	Identifier	float2fixed		1205094	0					
ANR	1205209	ArgumentList	( fabs ( pgs -> ctm . xy ) + fabs ( pgs -> ctm . yy ) ) * width		1205094	1					
ANR	1205210	Argument	( fabs ( pgs -> ctm . xy ) + fabs ( pgs -> ctm . yy ) ) * width		1205094	0					
ANR	1205211	MultiplicativeExpression	( fabs ( pgs -> ctm . xy ) + fabs ( pgs -> ctm . yy ) ) * width		1205094	0		*			
ANR	1205212	AdditiveExpression	fabs ( pgs -> ctm . xy ) + fabs ( pgs -> ctm . yy )		1205094	0		+			
ANR	1205213	CallExpression	fabs ( pgs -> ctm . xy )		1205094	0					
ANR	1205214	Callee	fabs		1205094	0					
ANR	1205215	Identifier	fabs		1205094	0					
ANR	1205216	ArgumentList	pgs -> ctm . xy		1205094	1					
ANR	1205217	Argument	pgs -> ctm . xy		1205094	0					
ANR	1205218	MemberAccess	pgs -> ctm . xy		1205094	0					
ANR	1205219	PtrMemberAccess	pgs -> ctm		1205094	0					
ANR	1205220	Identifier	pgs		1205094	0					
ANR	1205221	Identifier	ctm		1205094	1					
ANR	1205222	Identifier	xy		1205094	1					
ANR	1205223	CallExpression	fabs ( pgs -> ctm . yy )		1205094	1					
ANR	1205224	Callee	fabs		1205094	0					
ANR	1205225	Identifier	fabs		1205094	0					
ANR	1205226	ArgumentList	pgs -> ctm . yy		1205094	1					
ANR	1205227	Argument	pgs -> ctm . yy		1205094	0					
ANR	1205228	MemberAccess	pgs -> ctm . yy		1205094	0					
ANR	1205229	PtrMemberAccess	pgs -> ctm		1205094	0					
ANR	1205230	Identifier	pgs		1205094	0					
ANR	1205231	Identifier	ctm		1205094	1					
ANR	1205232	Identifier	yy		1205094	1					
ANR	1205233	Identifier	width		1205094	1					
ANR	1205234	PrimaryExpression	2		1205094	1					
ANR	1205235	ElseStatement	else		1205094	0					
ANR	1205236	ExpressionStatement	expansion . x = expansion . y = 0	114:8:3756:3785	1205094	0	True				
ANR	1205237	AssignmentExpression	expansion . x = expansion . y = 0		1205094	0		=			
ANR	1205238	MemberAccess	expansion . x		1205094	0					
ANR	1205239	Identifier	expansion		1205094	0					
ANR	1205240	Identifier	x		1205094	1					
ANR	1205241	AssignmentExpression	expansion . y = 0		1205094	1		=			
ANR	1205242	MemberAccess	expansion . y		1205094	0					
ANR	1205243	Identifier	expansion		1205094	0					
ANR	1205244	Identifier	y		1205094	1					
ANR	1205245	PrimaryExpression	0		1205094	1					
ANR	1205246	ExpressionStatement	pseg = ( const segment * ) ( ppath_old -> first_subpath )	115:4:3816:3866	1205094	7	True				
ANR	1205247	AssignmentExpression	pseg = ( const segment * ) ( ppath_old -> first_subpath )		1205094	0		=			
ANR	1205248	Identifier	pseg		1205094	0					
ANR	1205249	CastExpression	( const segment * ) ( ppath_old -> first_subpath )		1205094	1					
ANR	1205250	CastTarget	const segment *		1205094	0					
ANR	1205251	PtrMemberAccess	ppath_old -> first_subpath		1205094	1					
ANR	1205252	Identifier	ppath_old		1205094	0					
ANR	1205253	Identifier	first_subpath		1205094	1					
ANR	1205254	WhileStatement	while ( pseg )		1205094	8					
ANR	1205255	Condition	pseg	116:11:3879:3882	1205094	0	True				
ANR	1205256	Identifier	pseg		1205094	0					
ANR	1205257	CompoundStatement		28:17:871:871	1205094	1					
ANR	1205258	SwitchStatement	switch ( pseg -> type )		1205094	0					
ANR	1205259	Condition	pseg -> type	117:16:3903:3912	1205094	0	True				
ANR	1205260	PtrMemberAccess	pseg -> type		1205094	0					
ANR	1205261	Identifier	pseg		1205094	0					
ANR	1205262	Identifier	type		1205094	1					
ANR	1205263	CompoundStatement		29:28:901:901	1205094	1					
ANR	1205264	Label	case s_start :	118:12:3929:3941	1205094	0	True				
ANR	1205265	Identifier	s_start		1205094	0					
ANR	1205266	ExpressionStatement	"code = gx_path_add_point ( ppath , pseg -> pt . x , pseg -> pt . y )"	119:16:3959:4055	1205094	1	True				
ANR	1205267	AssignmentExpression	"code = gx_path_add_point ( ppath , pseg -> pt . x , pseg -> pt . y )"		1205094	0		=			
ANR	1205268	Identifier	code		1205094	0					
ANR	1205269	CallExpression	"gx_path_add_point ( ppath , pseg -> pt . x , pseg -> pt . y )"		1205094	1					
ANR	1205270	Callee	gx_path_add_point		1205094	0					
ANR	1205271	Identifier	gx_path_add_point		1205094	0					
ANR	1205272	ArgumentList	ppath		1205094	1					
ANR	1205273	Argument	ppath		1205094	0					
ANR	1205274	Identifier	ppath		1205094	0					
ANR	1205275	Argument	pseg -> pt . x		1205094	1					
ANR	1205276	MemberAccess	pseg -> pt . x		1205094	0					
ANR	1205277	PtrMemberAccess	pseg -> pt		1205094	0					
ANR	1205278	Identifier	pseg		1205094	0					
ANR	1205279	Identifier	pt		1205094	1					
ANR	1205280	Identifier	x		1205094	1					
ANR	1205281	Argument	pseg -> pt . y		1205094	2					
ANR	1205282	MemberAccess	pseg -> pt . y		1205094	0					
ANR	1205283	PtrMemberAccess	pseg -> pt		1205094	0					
ANR	1205284	Identifier	pseg		1205094	0					
ANR	1205285	Identifier	pt		1205094	1					
ANR	1205286	Identifier	y		1205094	1					
ANR	1205287	BreakStatement	break ;	121:16:4073:4078	1205094	2	True				
ANR	1205288	Label	case s_curve :	122:12:4092:4104	1205094	3	True				
ANR	1205289	Identifier	s_curve		1205094	0					
ANR	1205290	CompoundStatement		36:20:1130:1183	1205094	4					
ANR	1205291	IdentifierDeclStatement	const curve_segment * pc = ( const curve_segment * ) pseg ;	124:20:4144:4197	1205094	0	True				
ANR	1205292	IdentifierDecl	* pc = ( const curve_segment * ) pseg		1205094	0					
ANR	1205293	IdentifierDeclType	const curve_segment *		1205094	0					
ANR	1205294	Identifier	pc		1205094	1					
ANR	1205295	AssignmentExpression	* pc = ( const curve_segment * ) pseg		1205094	2		=			
ANR	1205296	Identifier	pc		1205094	0					
ANR	1205297	CastExpression	( const curve_segment * ) pseg		1205094	1					
ANR	1205298	CastTarget	const curve_segment *		1205094	0					
ANR	1205299	Identifier	pseg		1205094	1					
ANR	1205300	IfStatement	if ( fixed_flatness == max_fixed )		1205094	1					
ANR	1205301	Condition	fixed_flatness == max_fixed	126:24:4224:4250	1205094	0	True				
ANR	1205302	EqualityExpression	fixed_flatness == max_fixed		1205094	0		==			
ANR	1205303	Identifier	fixed_flatness		1205094	0					
ANR	1205304	Identifier	max_fixed		1205094	1					
ANR	1205305	CompoundStatement		38:53:1239:1239	1205094	1					
ANR	1205306	IfStatement	if ( options & pco_monotonize )		1205094	0					
ANR	1205307	Condition	options & pco_monotonize	127:28:4303:4326	1205094	0	True				
ANR	1205308	BitAndExpression	options & pco_monotonize		1205094	0		&			
ANR	1205309	Identifier	options		1205094	0					
ANR	1205310	Identifier	pco_monotonize		1205094	1					
ANR	1205311	ExpressionStatement	"code = gx_curve_monotonize ( ppath , pc )"	128:28:4357:4394	1205094	1	True				
ANR	1205312	AssignmentExpression	"code = gx_curve_monotonize ( ppath , pc )"		1205094	0		=			
ANR	1205313	Identifier	code		1205094	0					
ANR	1205314	CallExpression	"gx_curve_monotonize ( ppath , pc )"		1205094	1					
ANR	1205315	Callee	gx_curve_monotonize		1205094	0					
ANR	1205316	Identifier	gx_curve_monotonize		1205094	0					
ANR	1205317	ArgumentList	ppath		1205094	1					
ANR	1205318	Argument	ppath		1205094	0					
ANR	1205319	Identifier	ppath		1205094	0					
ANR	1205320	Argument	pc		1205094	1					
ANR	1205321	Identifier	pc		1205094	0					
ANR	1205322	ElseStatement	else		1205094	0					
ANR	1205323	ExpressionStatement	"code = gx_path_add_curve_notes ( ppath , pc -> p1 . x , pc -> p1 . y , pc -> p2 . x , pc -> p2 . y , pc -> pt . x , pc -> pt . y , pseg -> notes )"	130:28:4453:4643	1205094	0	True				
ANR	1205324	AssignmentExpression	"code = gx_path_add_curve_notes ( ppath , pc -> p1 . x , pc -> p1 . y , pc -> p2 . x , pc -> p2 . y , pc -> pt . x , pc -> pt . y , pseg -> notes )"		1205094	0		=			
ANR	1205325	Identifier	code		1205094	0					
ANR	1205326	CallExpression	"gx_path_add_curve_notes ( ppath , pc -> p1 . x , pc -> p1 . y , pc -> p2 . x , pc -> p2 . y , pc -> pt . x , pc -> pt . y , pseg -> notes )"		1205094	1					
ANR	1205327	Callee	gx_path_add_curve_notes		1205094	0					
ANR	1205328	Identifier	gx_path_add_curve_notes		1205094	0					
ANR	1205329	ArgumentList	ppath		1205094	1					
ANR	1205330	Argument	ppath		1205094	0					
ANR	1205331	Identifier	ppath		1205094	0					
ANR	1205332	Argument	pc -> p1 . x		1205094	1					
ANR	1205333	MemberAccess	pc -> p1 . x		1205094	0					
ANR	1205334	PtrMemberAccess	pc -> p1		1205094	0					
ANR	1205335	Identifier	pc		1205094	0					
ANR	1205336	Identifier	p1		1205094	1					
ANR	1205337	Identifier	x		1205094	1					
ANR	1205338	Argument	pc -> p1 . y		1205094	2					
ANR	1205339	MemberAccess	pc -> p1 . y		1205094	0					
ANR	1205340	PtrMemberAccess	pc -> p1		1205094	0					
ANR	1205341	Identifier	pc		1205094	0					
ANR	1205342	Identifier	p1		1205094	1					
ANR	1205343	Identifier	y		1205094	1					
ANR	1205344	Argument	pc -> p2 . x		1205094	3					
ANR	1205345	MemberAccess	pc -> p2 . x		1205094	0					
ANR	1205346	PtrMemberAccess	pc -> p2		1205094	0					
ANR	1205347	Identifier	pc		1205094	0					
ANR	1205348	Identifier	p2		1205094	1					
ANR	1205349	Identifier	x		1205094	1					
ANR	1205350	Argument	pc -> p2 . y		1205094	4					
ANR	1205351	MemberAccess	pc -> p2 . y		1205094	0					
ANR	1205352	PtrMemberAccess	pc -> p2		1205094	0					
ANR	1205353	Identifier	pc		1205094	0					
ANR	1205354	Identifier	p2		1205094	1					
ANR	1205355	Identifier	y		1205094	1					
ANR	1205356	Argument	pc -> pt . x		1205094	5					
ANR	1205357	MemberAccess	pc -> pt . x		1205094	0					
ANR	1205358	PtrMemberAccess	pc -> pt		1205094	0					
ANR	1205359	Identifier	pc		1205094	0					
ANR	1205360	Identifier	pt		1205094	1					
ANR	1205361	Identifier	x		1205094	1					
ANR	1205362	Argument	pc -> pt . y		1205094	6					
ANR	1205363	MemberAccess	pc -> pt . y		1205094	0					
ANR	1205364	PtrMemberAccess	pc -> pt		1205094	0					
ANR	1205365	Identifier	pc		1205094	0					
ANR	1205366	Identifier	pt		1205094	1					
ANR	1205367	Identifier	y		1205094	1					
ANR	1205368	Argument	pseg -> notes		1205094	7					
ANR	1205369	PtrMemberAccess	pseg -> notes		1205094	0					
ANR	1205370	Identifier	pseg		1205094	0					
ANR	1205371	Identifier	notes		1205094	1					
ANR	1205372	ElseStatement	else		1205094	0					
ANR	1205373	CompoundStatement		50:24:1895:1900	1205094	0					
ANR	1205374	IdentifierDeclStatement	fixed x0 = ppath -> position . x ;	134:24:4698:4726	1205094	0	True				
ANR	1205375	IdentifierDecl	x0 = ppath -> position . x		1205094	0					
ANR	1205376	IdentifierDeclType	fixed		1205094	0					
ANR	1205377	Identifier	x0		1205094	1					
ANR	1205378	AssignmentExpression	x0 = ppath -> position . x		1205094	2		=			
ANR	1205379	Identifier	x0		1205094	0					
ANR	1205380	MemberAccess	ppath -> position . x		1205094	1					
ANR	1205381	PtrMemberAccess	ppath -> position		1205094	0					
ANR	1205382	Identifier	ppath		1205094	0					
ANR	1205383	Identifier	position		1205094	1					
ANR	1205384	Identifier	x		1205094	1					
ANR	1205385	IdentifierDeclStatement	fixed y0 = ppath -> position . y ;	135:24:4752:4780	1205094	1	True				
ANR	1205386	IdentifierDecl	y0 = ppath -> position . y		1205094	0					
ANR	1205387	IdentifierDeclType	fixed		1205094	0					
ANR	1205388	Identifier	y0		1205094	1					
ANR	1205389	AssignmentExpression	y0 = ppath -> position . y		1205094	2		=			
ANR	1205390	Identifier	y0		1205094	0					
ANR	1205391	MemberAccess	ppath -> position . y		1205094	1					
ANR	1205392	PtrMemberAccess	ppath -> position		1205094	0					
ANR	1205393	Identifier	ppath		1205094	0					
ANR	1205394	Identifier	position		1205094	1					
ANR	1205395	Identifier	y		1205094	1					
ANR	1205396	IdentifierDeclStatement	segment_notes notes = pseg -> notes ;	136:24:4806:4839	1205094	2	True				
ANR	1205397	IdentifierDecl	notes = pseg -> notes		1205094	0					
ANR	1205398	IdentifierDeclType	segment_notes		1205094	0					
ANR	1205399	Identifier	notes		1205094	1					
ANR	1205400	AssignmentExpression	notes = pseg -> notes		1205094	2		=			
ANR	1205401	Identifier	notes		1205094	0					
ANR	1205402	PtrMemberAccess	pseg -> notes		1205094	1					
ANR	1205403	Identifier	pseg		1205094	0					
ANR	1205404	Identifier	notes		1205094	1					
ANR	1205405	IdentifierDeclStatement	curve_segment cseg ;	137:24:4865:4883	1205094	3	True				
ANR	1205406	IdentifierDecl	cseg		1205094	0					
ANR	1205407	IdentifierDeclType	curve_segment		1205094	0					
ANR	1205408	Identifier	cseg		1205094	1					
ANR	1205409	IdentifierDeclStatement	int k ;	138:24:4909:4914	1205094	4	True				
ANR	1205410	IdentifierDecl	k		1205094	0					
ANR	1205411	IdentifierDeclType	int		1205094	0					
ANR	1205412	Identifier	k		1205094	1					
ANR	1205413	IfStatement	if ( options & pco_for_stroke )		1205094	5					
ANR	1205414	Condition	options & pco_for_stroke	140:28:4945:4968	1205094	0	True				
ANR	1205415	BitAndExpression	options & pco_for_stroke		1205094	0		&			
ANR	1205416	Identifier	options		1205094	0					
ANR	1205417	Identifier	pco_for_stroke		1205094	1					
ANR	1205418	CompoundStatement		73:4:2987:3067	1205094	1					
ANR	1205419	IdentifierDeclStatement	"fixed min01 , max01 , min23 , max23 ;"	151:28:5618:5650	1205094	0	True				
ANR	1205420	IdentifierDecl	min01		1205094	0					
ANR	1205421	IdentifierDeclType	fixed		1205094	0					
ANR	1205422	Identifier	min01		1205094	1					
ANR	1205423	IdentifierDecl	max01		1205094	1					
ANR	1205424	IdentifierDeclType	fixed		1205094	0					
ANR	1205425	Identifier	max01		1205094	1					
ANR	1205426	IdentifierDecl	min23		1205094	2					
ANR	1205427	IdentifierDeclType	fixed		1205094	0					
ANR	1205428	Identifier	min23		1205094	1					
ANR	1205429	IdentifierDecl	max23		1205094	3					
ANR	1205430	IdentifierDeclType	fixed		1205094	0					
ANR	1205431	Identifier	max23		1205094	1					
ANR	1205432	IdentifierDeclStatement	"fixed ex , ey , flat_x , flat_y ;"	152:28:5680:5708	1205094	1	True				
ANR	1205433	IdentifierDecl	ex		1205094	0					
ANR	1205434	IdentifierDeclType	fixed		1205094	0					
ANR	1205435	Identifier	ex		1205094	1					
ANR	1205436	IdentifierDecl	ey		1205094	1					
ANR	1205437	IdentifierDeclType	fixed		1205094	0					
ANR	1205438	Identifier	ey		1205094	1					
ANR	1205439	IdentifierDecl	flat_x		1205094	2					
ANR	1205440	IdentifierDeclType	fixed		1205094	0					
ANR	1205441	Identifier	flat_x		1205094	1					
ANR	1205442	IdentifierDecl	flat_y		1205094	3					
ANR	1205443	IdentifierDeclType	fixed		1205094	0					
ANR	1205444	Identifier	flat_y		1205094	1					
ANR	1205445	Statement	define	154:1:5712:5717	1205094	2	True				
ANR	1205446	Statement	SET_EXTENT	154:8:5719:5728	1205094	3	True				
ANR	1205447	Statement	(	154:18:5729:5729	1205094	4	True				
ANR	1205448	Statement	r	154:19:5730:5730	1205094	5	True				
ANR	1205449	Statement	","	154:20:5731:5731	1205094	6	True				
ANR	1205450	Statement	c0	154:22:5733:5734	1205094	7	True				
ANR	1205451	Statement	","	154:24:5735:5735	1205094	8	True				
ANR	1205452	Statement	c1	154:26:5737:5738	1205094	9	True				
ANR	1205453	Statement	","	154:28:5739:5739	1205094	10	True				
ANR	1205454	Statement	c2	154:30:5741:5742	1205094	11	True				
ANR	1205455	Statement	","	154:32:5743:5743	1205094	12	True				
ANR	1205456	Statement	c3	154:34:5745:5746	1205094	13	True				
ANR	1205457	Statement	)	154:36:5747:5747	1205094	14	True				
ANR	1205458	Statement	BEGIN	155:4:5754:5758	1205094	15	True				
ANR	1205459	IfStatement	if ( c0 < c1 )		1205094	16					
ANR	1205460	Condition	c0 < c1	156:12:5773:5779	1205094	0	True				
ANR	1205461	RelationalExpression	c0 < c1		1205094	0		<			
ANR	1205462	Identifier	c0		1205094	0					
ANR	1205463	Identifier	c1		1205094	1					
ANR	1205464	ExpressionStatement	"min01 = c0 , max01 = c1"	156:21:5782:5804	1205094	1	True				
ANR	1205465	Expression	"min01 = c0 , max01 = c1"		1205094	0					
ANR	1205466	AssignmentExpression	min01 = c0		1205094	0		=			
ANR	1205467	Identifier	min01		1205094	0					
ANR	1205468	Identifier	c0		1205094	1					
ANR	1205469	AssignmentExpression	max01 = c1		1205094	1		=			
ANR	1205470	Identifier	max01		1205094	0					
ANR	1205471	Identifier	c1		1205094	1					
ANR	1205472	ElseStatement	else		1205094	0					
ANR	1205473	ExpressionStatement	"min01 = c1 , max01 = c0"	157:21:5828:5850	1205094	0	True				
ANR	1205474	Expression	"min01 = c1 , max01 = c0"		1205094	0					
ANR	1205475	AssignmentExpression	min01 = c1		1205094	0		=			
ANR	1205476	Identifier	min01		1205094	0					
ANR	1205477	Identifier	c1		1205094	1					
ANR	1205478	AssignmentExpression	max01 = c0		1205094	1		=			
ANR	1205479	Identifier	max01		1205094	0					
ANR	1205480	Identifier	c0		1205094	1					
ANR	1205481	IfStatement	if ( c2 < c3 )		1205094	17					
ANR	1205482	Condition	c2 < c3	158:12:5865:5871	1205094	0	True				
ANR	1205483	RelationalExpression	c2 < c3		1205094	0		<			
ANR	1205484	Identifier	c2		1205094	0					
ANR	1205485	Identifier	c3		1205094	1					
ANR	1205486	ExpressionStatement	"min23 = c2 , max23 = c3"	158:21:5874:5896	1205094	1	True				
ANR	1205487	Expression	"min23 = c2 , max23 = c3"		1205094	0					
ANR	1205488	AssignmentExpression	min23 = c2		1205094	0		=			
ANR	1205489	Identifier	min23		1205094	0					
ANR	1205490	Identifier	c2		1205094	1					
ANR	1205491	AssignmentExpression	max23 = c3		1205094	1		=			
ANR	1205492	Identifier	max23		1205094	0					
ANR	1205493	Identifier	c3		1205094	1					
ANR	1205494	ElseStatement	else		1205094	0					
ANR	1205495	ExpressionStatement	"min23 = c3 , max23 = c2"	159:21:5920:5942	1205094	0	True				
ANR	1205496	Expression	"min23 = c3 , max23 = c2"		1205094	0					
ANR	1205497	AssignmentExpression	min23 = c3		1205094	0		=			
ANR	1205498	Identifier	min23		1205094	0					
ANR	1205499	Identifier	c3		1205094	1					
ANR	1205500	AssignmentExpression	max23 = c2		1205094	1		=			
ANR	1205501	Identifier	max23		1205094	0					
ANR	1205502	Identifier	c2		1205094	1					
ANR	1205503	ExpressionStatement	"r = max ( max01 , max23 ) - min ( min01 , min23 )"	160:8:5953:5994	1205094	18	True				
ANR	1205504	AssignmentExpression	"r = max ( max01 , max23 ) - min ( min01 , min23 )"		1205094	0		=			
ANR	1205505	Identifier	r		1205094	0					
ANR	1205506	AdditiveExpression	"max ( max01 , max23 ) - min ( min01 , min23 )"		1205094	1		-			
ANR	1205507	CallExpression	"max ( max01 , max23 )"		1205094	0					
ANR	1205508	Callee	max		1205094	0					
ANR	1205509	Identifier	max		1205094	0					
ANR	1205510	ArgumentList	max01		1205094	1					
ANR	1205511	Argument	max01		1205094	0					
ANR	1205512	Identifier	max01		1205094	0					
ANR	1205513	Argument	max23		1205094	1					
ANR	1205514	Identifier	max23		1205094	0					
ANR	1205515	CallExpression	"min ( min01 , min23 )"		1205094	1					
ANR	1205516	Callee	min		1205094	0					
ANR	1205517	Identifier	min		1205094	0					
ANR	1205518	ArgumentList	min01		1205094	1					
ANR	1205519	Argument	min01		1205094	0					
ANR	1205520	Identifier	min01		1205094	0					
ANR	1205521	Argument	min23		1205094	1					
ANR	1205522	Identifier	min23		1205094	0					
ANR	1205523	IdentifierDeclStatement	"END SET_EXTENT ( ex , x0 , pc -> p1 . x , pc -> p2 . x , pc -> pt . x ) ;"	161:4:6001:6081	1205094	19	True				
ANR	1205524	IdentifierDecl	"SET_EXTENT ( ex , x0 , pc -> p1 . x , pc -> p2 . x , pc -> pt . x )"		1205094	0					
ANR	1205525	IdentifierDeclType	END		1205094	0					
ANR	1205526	Identifier	SET_EXTENT		1205094	1					
ANR	1205527	Expression	"ex , x0 , pc -> p1 . x , pc -> p2 . x , pc -> pt . x"		1205094	2					
ANR	1205528	Identifier	ex		1205094	0					
ANR	1205529	Expression	"x0 , pc -> p1 . x , pc -> p2 . x , pc -> pt . x"		1205094	1					
ANR	1205530	Identifier	x0		1205094	0					
ANR	1205531	Expression	"pc -> p1 . x , pc -> p2 . x , pc -> pt . x"		1205094	1					
ANR	1205532	MemberAccess	pc -> p1 . x		1205094	0					
ANR	1205533	PtrMemberAccess	pc -> p1		1205094	0					
ANR	1205534	Identifier	pc		1205094	0					
ANR	1205535	Identifier	p1		1205094	1					
ANR	1205536	Identifier	x		1205094	1					
ANR	1205537	Expression	"pc -> p2 . x , pc -> pt . x"		1205094	1					
ANR	1205538	MemberAccess	pc -> p2 . x		1205094	0					
ANR	1205539	PtrMemberAccess	pc -> p2		1205094	0					
ANR	1205540	Identifier	pc		1205094	0					
ANR	1205541	Identifier	p2		1205094	1					
ANR	1205542	Identifier	x		1205094	1					
ANR	1205543	MemberAccess	pc -> pt . x		1205094	1					
ANR	1205544	PtrMemberAccess	pc -> pt		1205094	0					
ANR	1205545	Identifier	pc		1205094	0					
ANR	1205546	Identifier	pt		1205094	1					
ANR	1205547	Identifier	x		1205094	1					
ANR	1205548	ExpressionStatement	"SET_EXTENT ( ey , y0 , pc -> p1 . y , pc -> p2 . y , pc -> pt . y )"	163:28:6111:6159	1205094	20	True				
ANR	1205549	CallExpression	"SET_EXTENT ( ey , y0 , pc -> p1 . y , pc -> p2 . y , pc -> pt . y )"		1205094	0					
ANR	1205550	Callee	SET_EXTENT		1205094	0					
ANR	1205551	Identifier	SET_EXTENT		1205094	0					
ANR	1205552	ArgumentList	ey		1205094	1					
ANR	1205553	Argument	ey		1205094	0					
ANR	1205554	Identifier	ey		1205094	0					
ANR	1205555	Argument	y0		1205094	1					
ANR	1205556	Identifier	y0		1205094	0					
ANR	1205557	Argument	pc -> p1 . y		1205094	2					
ANR	1205558	MemberAccess	pc -> p1 . y		1205094	0					
ANR	1205559	PtrMemberAccess	pc -> p1		1205094	0					
ANR	1205560	Identifier	pc		1205094	0					
ANR	1205561	Identifier	p1		1205094	1					
ANR	1205562	Identifier	y		1205094	1					
ANR	1205563	Argument	pc -> p2 . y		1205094	3					
ANR	1205564	MemberAccess	pc -> p2 . y		1205094	0					
ANR	1205565	PtrMemberAccess	pc -> p2		1205094	0					
ANR	1205566	Identifier	pc		1205094	0					
ANR	1205567	Identifier	p2		1205094	1					
ANR	1205568	Identifier	y		1205094	1					
ANR	1205569	Argument	pc -> pt . y		1205094	4					
ANR	1205570	MemberAccess	pc -> pt . y		1205094	0					
ANR	1205571	PtrMemberAccess	pc -> pt		1205094	0					
ANR	1205572	Identifier	pc		1205094	0					
ANR	1205573	Identifier	pt		1205094	1					
ANR	1205574	Identifier	y		1205094	1					
ANR	1205575	Statement	undef	164:1:6162:6166	1205094	21	True				
ANR	1205576	Statement	SET_EXTENT	164:7:6168:6177	1205094	22	True				
ANR	1205577	IfStatement	if ( ex == 0 || ey == 0 )		1205094	23					
ANR	1205578	Condition	ex == 0 || ey == 0	169:32:6408:6425	1205094	0	True				
ANR	1205579	OrExpression	ex == 0 || ey == 0		1205094	0		||			
ANR	1205580	EqualityExpression	ex == 0		1205094	0		==			
ANR	1205581	Identifier	ex		1205094	0					
ANR	1205582	PrimaryExpression	0		1205094	1					
ANR	1205583	EqualityExpression	ey == 0		1205094	1		==			
ANR	1205584	Identifier	ey		1205094	0					
ANR	1205585	PrimaryExpression	0		1205094	1					
ANR	1205586	IfStatement	if ( ex != 0 )		1205094	1					
ANR	1205587	Condition	ex != 0	170:36:6464:6470	1205094	0	True				
ANR	1205588	EqualityExpression	ex != 0		1205094	0		!=			
ANR	1205589	Identifier	ex		1205094	0					
ANR	1205590	PrimaryExpression	0		1205094	1					
ANR	1205591	CompoundStatement		82:45:3459:3459	1205094	1					
ANR	1205592	ExpressionStatement	"flat = fixed_mult_quo ( fixed_flatness , ex , ex + expansion . x )"	171:36:6511:6628	1205094	0	True				
ANR	1205593	AssignmentExpression	"flat = fixed_mult_quo ( fixed_flatness , ex , ex + expansion . x )"		1205094	0		=			
ANR	1205594	Identifier	flat		1205094	0					
ANR	1205595	CallExpression	"fixed_mult_quo ( fixed_flatness , ex , ex + expansion . x )"		1205094	1					
ANR	1205596	Callee	fixed_mult_quo		1205094	0					
ANR	1205597	Identifier	fixed_mult_quo		1205094	0					
ANR	1205598	ArgumentList	fixed_flatness		1205094	1					
ANR	1205599	Argument	fixed_flatness		1205094	0					
ANR	1205600	Identifier	fixed_flatness		1205094	0					
ANR	1205601	Argument	ex		1205094	1					
ANR	1205602	Identifier	ex		1205094	0					
ANR	1205603	Argument	ex + expansion . x		1205094	2					
ANR	1205604	AdditiveExpression	ex + expansion . x		1205094	0		+			
ANR	1205605	Identifier	ex		1205094	0					
ANR	1205606	MemberAccess	expansion . x		1205094	1					
ANR	1205607	Identifier	expansion		1205094	0					
ANR	1205608	Identifier	x		1205094	1					
ANR	1205609	ExpressionStatement	"k = gx_curve_log2_samples ( x0 , y0 , pc , flat )"	173:36:6666:6706	1205094	1	True				
ANR	1205610	AssignmentExpression	"k = gx_curve_log2_samples ( x0 , y0 , pc , flat )"		1205094	0		=			
ANR	1205611	Identifier	k		1205094	0					
ANR	1205612	CallExpression	"gx_curve_log2_samples ( x0 , y0 , pc , flat )"		1205094	1					
ANR	1205613	Callee	gx_curve_log2_samples		1205094	0					
ANR	1205614	Identifier	gx_curve_log2_samples		1205094	0					
ANR	1205615	ArgumentList	x0		1205094	1					
ANR	1205616	Argument	x0		1205094	0					
ANR	1205617	Identifier	x0		1205094	0					
ANR	1205618	Argument	y0		1205094	1					
ANR	1205619	Identifier	y0		1205094	0					
ANR	1205620	Argument	pc		1205094	2					
ANR	1205621	Identifier	pc		1205094	0					
ANR	1205622	Argument	flat		1205094	3					
ANR	1205623	Identifier	flat		1205094	0					
ANR	1205624	ElseStatement	else		1205094	0					
ANR	1205625	IfStatement	if ( ey != 0 )		1205094	0					
ANR	1205626	Condition	ey != 0	174:43:6751:6757	1205094	0	True				
ANR	1205627	EqualityExpression	ey != 0		1205094	0		!=			
ANR	1205628	Identifier	ey		1205094	0					
ANR	1205629	PrimaryExpression	0		1205094	1					
ANR	1205630	CompoundStatement		86:52:3746:3746	1205094	1					
ANR	1205631	ExpressionStatement	"flat = fixed_mult_quo ( fixed_flatness , ey , ey + expansion . y )"	175:36:6798:6915	1205094	0	True				
ANR	1205632	AssignmentExpression	"flat = fixed_mult_quo ( fixed_flatness , ey , ey + expansion . y )"		1205094	0		=			
ANR	1205633	Identifier	flat		1205094	0					
ANR	1205634	CallExpression	"fixed_mult_quo ( fixed_flatness , ey , ey + expansion . y )"		1205094	1					
ANR	1205635	Callee	fixed_mult_quo		1205094	0					
ANR	1205636	Identifier	fixed_mult_quo		1205094	0					
ANR	1205637	ArgumentList	fixed_flatness		1205094	1					
ANR	1205638	Argument	fixed_flatness		1205094	0					
ANR	1205639	Identifier	fixed_flatness		1205094	0					
ANR	1205640	Argument	ey		1205094	1					
ANR	1205641	Identifier	ey		1205094	0					
ANR	1205642	Argument	ey + expansion . y		1205094	2					
ANR	1205643	AdditiveExpression	ey + expansion . y		1205094	0		+			
ANR	1205644	Identifier	ey		1205094	0					
ANR	1205645	MemberAccess	expansion . y		1205094	1					
ANR	1205646	Identifier	expansion		1205094	0					
ANR	1205647	Identifier	y		1205094	1					
ANR	1205648	ExpressionStatement	"k = gx_curve_log2_samples ( x0 , y0 , pc , flat )"	177:36:6953:6993	1205094	1	True				
ANR	1205649	AssignmentExpression	"k = gx_curve_log2_samples ( x0 , y0 , pc , flat )"		1205094	0		=			
ANR	1205650	Identifier	k		1205094	0					
ANR	1205651	CallExpression	"gx_curve_log2_samples ( x0 , y0 , pc , flat )"		1205094	1					
ANR	1205652	Callee	gx_curve_log2_samples		1205094	0					
ANR	1205653	Identifier	gx_curve_log2_samples		1205094	0					
ANR	1205654	ArgumentList	x0		1205094	1					
ANR	1205655	Argument	x0		1205094	0					
ANR	1205656	Identifier	x0		1205094	0					
ANR	1205657	Argument	y0		1205094	1					
ANR	1205658	Identifier	y0		1205094	0					
ANR	1205659	Argument	pc		1205094	2					
ANR	1205660	Identifier	pc		1205094	0					
ANR	1205661	Argument	flat		1205094	3					
ANR	1205662	Identifier	flat		1205094	0					
ANR	1205663	ElseStatement	else		1205094	0					
ANR	1205664	ExpressionStatement	k = 0	179:36:7070:7075	1205094	0	True				
ANR	1205665	AssignmentExpression	k = 0		1205094	0		=			
ANR	1205666	Identifier	k		1205094	0					
ANR	1205667	PrimaryExpression	0		1205094	1					
ANR	1205668	ElseStatement	else		1205094	0					
ANR	1205669	CompoundStatement		92:33:4096:4096	1205094	0					
ANR	1205670	ExpressionStatement	"flat_x = fixed_mult_quo ( fixed_flatness , ex , ex + expansion . x )"	181:32:7144:7292	1205094	0	True				
ANR	1205671	AssignmentExpression	"flat_x = fixed_mult_quo ( fixed_flatness , ex , ex + expansion . x )"		1205094	0		=			
ANR	1205672	Identifier	flat_x		1205094	0					
ANR	1205673	CallExpression	"fixed_mult_quo ( fixed_flatness , ex , ex + expansion . x )"		1205094	1					
ANR	1205674	Callee	fixed_mult_quo		1205094	0					
ANR	1205675	Identifier	fixed_mult_quo		1205094	0					
ANR	1205676	ArgumentList	fixed_flatness		1205094	1					
ANR	1205677	Argument	fixed_flatness		1205094	0					
ANR	1205678	Identifier	fixed_flatness		1205094	0					
ANR	1205679	Argument	ex		1205094	1					
ANR	1205680	Identifier	ex		1205094	0					
ANR	1205681	Argument	ex + expansion . x		1205094	2					
ANR	1205682	AdditiveExpression	ex + expansion . x		1205094	0		+			
ANR	1205683	Identifier	ex		1205094	0					
ANR	1205684	MemberAccess	expansion . x		1205094	1					
ANR	1205685	Identifier	expansion		1205094	0					
ANR	1205686	Identifier	x		1205094	1					
ANR	1205687	ExpressionStatement	"flat_y = fixed_mult_quo ( fixed_flatness , ey , ey + expansion . y )"	184:32:7326:7474	1205094	1	True				
ANR	1205688	AssignmentExpression	"flat_y = fixed_mult_quo ( fixed_flatness , ey , ey + expansion . y )"		1205094	0		=			
ANR	1205689	Identifier	flat_y		1205094	0					
ANR	1205690	CallExpression	"fixed_mult_quo ( fixed_flatness , ey , ey + expansion . y )"		1205094	1					
ANR	1205691	Callee	fixed_mult_quo		1205094	0					
ANR	1205692	Identifier	fixed_mult_quo		1205094	0					
ANR	1205693	ArgumentList	fixed_flatness		1205094	1					
ANR	1205694	Argument	fixed_flatness		1205094	0					
ANR	1205695	Identifier	fixed_flatness		1205094	0					
ANR	1205696	Argument	ey		1205094	1					
ANR	1205697	Identifier	ey		1205094	0					
ANR	1205698	Argument	ey + expansion . y		1205094	2					
ANR	1205699	AdditiveExpression	ey + expansion . y		1205094	0		+			
ANR	1205700	Identifier	ey		1205094	0					
ANR	1205701	MemberAccess	expansion . y		1205094	1					
ANR	1205702	Identifier	expansion		1205094	0					
ANR	1205703	Identifier	y		1205094	1					
ANR	1205704	ExpressionStatement	"flat = min ( flat_x , flat_y )"	187:32:7508:7534	1205094	2	True				
ANR	1205705	AssignmentExpression	"flat = min ( flat_x , flat_y )"		1205094	0		=			
ANR	1205706	Identifier	flat		1205094	0					
ANR	1205707	CallExpression	"min ( flat_x , flat_y )"		1205094	1					
ANR	1205708	Callee	min		1205094	0					
ANR	1205709	Identifier	min		1205094	0					
ANR	1205710	ArgumentList	flat_x		1205094	1					
ANR	1205711	Argument	flat_x		1205094	0					
ANR	1205712	Identifier	flat_x		1205094	0					
ANR	1205713	Argument	flat_y		1205094	1					
ANR	1205714	Identifier	flat_y		1205094	0					
ANR	1205715	ExpressionStatement	"k = gx_curve_log2_samples ( x0 , y0 , pc , flat )"	188:32:7568:7611	1205094	3	True				
ANR	1205716	AssignmentExpression	"k = gx_curve_log2_samples ( x0 , y0 , pc , flat )"		1205094	0		=			
ANR	1205717	Identifier	k		1205094	0					
ANR	1205718	CallExpression	"gx_curve_log2_samples ( x0 , y0 , pc , flat )"		1205094	1					
ANR	1205719	Callee	gx_curve_log2_samples		1205094	0					
ANR	1205720	Identifier	gx_curve_log2_samples		1205094	0					
ANR	1205721	ArgumentList	x0		1205094	1					
ANR	1205722	Argument	x0		1205094	0					
ANR	1205723	Identifier	x0		1205094	0					
ANR	1205724	Argument	y0		1205094	1					
ANR	1205725	Identifier	y0		1205094	0					
ANR	1205726	Argument	pc		1205094	2					
ANR	1205727	Identifier	pc		1205094	0					
ANR	1205728	Argument	flat		1205094	3					
ANR	1205729	Identifier	flat		1205094	0					
ANR	1205730	ElseStatement	else		1205094	0					
ANR	1205731	ExpressionStatement	"k = gx_curve_log2_samples ( x0 , y0 , pc , flat )"	191:28:7702:7745	1205094	0	True				
ANR	1205732	AssignmentExpression	"k = gx_curve_log2_samples ( x0 , y0 , pc , flat )"		1205094	0		=			
ANR	1205733	Identifier	k		1205094	0					
ANR	1205734	CallExpression	"gx_curve_log2_samples ( x0 , y0 , pc , flat )"		1205094	1					
ANR	1205735	Callee	gx_curve_log2_samples		1205094	0					
ANR	1205736	Identifier	gx_curve_log2_samples		1205094	0					
ANR	1205737	ArgumentList	x0		1205094	1					
ANR	1205738	Argument	x0		1205094	0					
ANR	1205739	Identifier	x0		1205094	0					
ANR	1205740	Argument	y0		1205094	1					
ANR	1205741	Identifier	y0		1205094	0					
ANR	1205742	Argument	pc		1205094	2					
ANR	1205743	Identifier	pc		1205094	0					
ANR	1205744	Argument	flat		1205094	3					
ANR	1205745	Identifier	flat		1205094	0					
ANR	1205746	IfStatement	if ( options & pco_accurate )		1205094	6					
ANR	1205747	Condition	options & pco_accurate	192:28:7775:7796	1205094	0	True				
ANR	1205748	BitAndExpression	options & pco_accurate		1205094	0		&			
ANR	1205749	Identifier	options		1205094	0					
ANR	1205750	Identifier	pco_accurate		1205094	1					
ANR	1205751	CompoundStatement		106:28:4859:4871	1205094	1					
ANR	1205752	IdentifierDeclStatement	segment * start ;	193:28:7829:7843	1205094	0	True				
ANR	1205753	IdentifierDecl	* start		1205094	0					
ANR	1205754	IdentifierDeclType	segment *		1205094	0					
ANR	1205755	Identifier	start		1205094	1					
ANR	1205756	IdentifierDeclStatement	segment * end ;	194:28:7873:7885	1205094	1	True				
ANR	1205757	IdentifierDecl	* end		1205094	0					
ANR	1205758	IdentifierDeclType	segment *		1205094	0					
ANR	1205759	Identifier	end		1205094	1					
ANR	1205760	ExpressionStatement	"code = gx_path_add_line_notes ( ppath , x0 , y0 , notes )"	200:28:8099:8208	1205094	2	True				
ANR	1205761	AssignmentExpression	"code = gx_path_add_line_notes ( ppath , x0 , y0 , notes )"		1205094	0		=			
ANR	1205762	Identifier	code		1205094	0					
ANR	1205763	CallExpression	"gx_path_add_line_notes ( ppath , x0 , y0 , notes )"		1205094	1					
ANR	1205764	Callee	gx_path_add_line_notes		1205094	0					
ANR	1205765	Identifier	gx_path_add_line_notes		1205094	0					
ANR	1205766	ArgumentList	ppath		1205094	1					
ANR	1205767	Argument	ppath		1205094	0					
ANR	1205768	Identifier	ppath		1205094	0					
ANR	1205769	Argument	x0		1205094	1					
ANR	1205770	Identifier	x0		1205094	0					
ANR	1205771	Argument	y0		1205094	2					
ANR	1205772	Identifier	y0		1205094	0					
ANR	1205773	Argument	notes		1205094	3					
ANR	1205774	Identifier	notes		1205094	0					
ANR	1205775	IfStatement	if ( code < 0 )		1205094	3					
ANR	1205776	Condition	code < 0	202:32:8242:8249	1205094	0	True				
ANR	1205777	RelationalExpression	code < 0		1205094	0		<			
ANR	1205778	Identifier	code		1205094	0					
ANR	1205779	PrimaryExpression	0		1205094	1					
ANR	1205780	BreakStatement	break ;	203:32:8284:8289	1205094	1	True				
ANR	1205781	ExpressionStatement	start = ppath -> current_subpath -> last	204:28:8319:8355	1205094	4	True				
ANR	1205782	AssignmentExpression	start = ppath -> current_subpath -> last		1205094	0		=			
ANR	1205783	Identifier	start		1205094	0					
ANR	1205784	PtrMemberAccess	ppath -> current_subpath -> last		1205094	1					
ANR	1205785	PtrMemberAccess	ppath -> current_subpath		1205094	0					
ANR	1205786	Identifier	ppath		1205094	0					
ANR	1205787	Identifier	current_subpath		1205094	1					
ANR	1205788	Identifier	last		1205094	1					
ANR	1205789	ExpressionStatement	notes |= sn_not_first	205:28:8385:8406	1205094	5	True				
ANR	1205790	AssignmentExpression	notes |= sn_not_first		1205094	0		|=			
ANR	1205791	Identifier	notes		1205094	0					
ANR	1205792	Identifier	sn_not_first		1205094	1					
ANR	1205793	ExpressionStatement	cseg = * pc	206:28:8436:8446	1205094	6	True				
ANR	1205794	AssignmentExpression	cseg = * pc		1205094	0		=			
ANR	1205795	Identifier	cseg		1205094	0					
ANR	1205796	UnaryOperationExpression	* pc		1205094	1					
ANR	1205797	UnaryOperator	*		1205094	0					
ANR	1205798	Identifier	pc		1205094	1					
ANR	1205799	ExpressionStatement	"code = gx_subdivide_curve ( ppath , k , & cseg , notes )"	207:28:8476:8525	1205094	7	True				
ANR	1205800	AssignmentExpression	"code = gx_subdivide_curve ( ppath , k , & cseg , notes )"		1205094	0		=			
ANR	1205801	Identifier	code		1205094	0					
ANR	1205802	CallExpression	"gx_subdivide_curve ( ppath , k , & cseg , notes )"		1205094	1					
ANR	1205803	Callee	gx_subdivide_curve		1205094	0					
ANR	1205804	Identifier	gx_subdivide_curve		1205094	0					
ANR	1205805	ArgumentList	ppath		1205094	1					
ANR	1205806	Argument	ppath		1205094	0					
ANR	1205807	Identifier	ppath		1205094	0					
ANR	1205808	Argument	k		1205094	1					
ANR	1205809	Identifier	k		1205094	0					
ANR	1205810	Argument	& cseg		1205094	2					
ANR	1205811	UnaryOperationExpression	& cseg		1205094	0					
ANR	1205812	UnaryOperator	&		1205094	0					
ANR	1205813	Identifier	cseg		1205094	1					
ANR	1205814	Argument	notes		1205094	3					
ANR	1205815	Identifier	notes		1205094	0					
ANR	1205816	IfStatement	if ( code < 0 )		1205094	8					
ANR	1205817	Condition	code < 0	208:32:8559:8566	1205094	0	True				
ANR	1205818	RelationalExpression	code < 0		1205094	0		<			
ANR	1205819	Identifier	code		1205094	0					
ANR	1205820	PrimaryExpression	0		1205094	1					
ANR	1205821	BreakStatement	break ;	209:32:8601:8606	1205094	1	True				
ANR	1205822	ExpressionStatement	end = ppath -> current_subpath -> last	214:28:8836:8870	1205094	9	True				
ANR	1205823	AssignmentExpression	end = ppath -> current_subpath -> last		1205094	0		=			
ANR	1205824	Identifier	end		1205094	0					
ANR	1205825	PtrMemberAccess	ppath -> current_subpath -> last		1205094	1					
ANR	1205826	PtrMemberAccess	ppath -> current_subpath		1205094	0					
ANR	1205827	Identifier	ppath		1205094	0					
ANR	1205828	Identifier	current_subpath		1205094	1					
ANR	1205829	Identifier	last		1205094	1					
ANR	1205830	IfStatement	"if ( ( code = gx_path_add_line_notes ( ppath , ppath -> position . x , ppath -> position . y , pseg -> notes | sn_not_first ) ) < 0 )"		1205094	10					
ANR	1205831	Condition	"( code = gx_path_add_line_notes ( ppath , ppath -> position . x , ppath -> position . y , pseg -> notes | sn_not_first ) ) < 0"	215:32:8904:9171	1205094	0	True				
ANR	1205832	RelationalExpression	"( code = gx_path_add_line_notes ( ppath , ppath -> position . x , ppath -> position . y , pseg -> notes | sn_not_first ) ) < 0"		1205094	0		<			
ANR	1205833	AssignmentExpression	"code = gx_path_add_line_notes ( ppath , ppath -> position . x , ppath -> position . y , pseg -> notes | sn_not_first )"		1205094	0		=			
ANR	1205834	Identifier	code		1205094	0					
ANR	1205835	CallExpression	"gx_path_add_line_notes ( ppath , ppath -> position . x , ppath -> position . y , pseg -> notes | sn_not_first )"		1205094	1					
ANR	1205836	Callee	gx_path_add_line_notes		1205094	0					
ANR	1205837	Identifier	gx_path_add_line_notes		1205094	0					
ANR	1205838	ArgumentList	ppath		1205094	1					
ANR	1205839	Argument	ppath		1205094	0					
ANR	1205840	Identifier	ppath		1205094	0					
ANR	1205841	Argument	ppath -> position . x		1205094	1					
ANR	1205842	MemberAccess	ppath -> position . x		1205094	0					
ANR	1205843	PtrMemberAccess	ppath -> position		1205094	0					
ANR	1205844	Identifier	ppath		1205094	0					
ANR	1205845	Identifier	position		1205094	1					
ANR	1205846	Identifier	x		1205094	1					
ANR	1205847	Argument	ppath -> position . y		1205094	2					
ANR	1205848	MemberAccess	ppath -> position . y		1205094	0					
ANR	1205849	PtrMemberAccess	ppath -> position		1205094	0					
ANR	1205850	Identifier	ppath		1205094	0					
ANR	1205851	Identifier	position		1205094	1					
ANR	1205852	Identifier	y		1205094	1					
ANR	1205853	Argument	pseg -> notes | sn_not_first		1205094	3					
ANR	1205854	InclusiveOrExpression	pseg -> notes | sn_not_first		1205094	0		|			
ANR	1205855	PtrMemberAccess	pseg -> notes		1205094	0					
ANR	1205856	Identifier	pseg		1205094	0					
ANR	1205857	Identifier	notes		1205094	1					
ANR	1205858	Identifier	sn_not_first		1205094	1					
ANR	1205859	PrimaryExpression	0		1205094	1					
ANR	1205860	BreakStatement	break ;	219:32:9206:9211	1205094	1	True				
ANR	1205861	IfStatement	if ( start -> next -> pt . x != pc -> p1 . x || start -> next -> pt . y != pc -> p1 . y )		1205094	11					
ANR	1205862	Condition	start -> next -> pt . x != pc -> p1 . x || start -> next -> pt . y != pc -> p1 . y	220:32:9245:9306	1205094	0	True				
ANR	1205863	OrExpression	start -> next -> pt . x != pc -> p1 . x || start -> next -> pt . y != pc -> p1 . y		1205094	0		||			
ANR	1205864	EqualityExpression	start -> next -> pt . x != pc -> p1 . x		1205094	0		!=			
ANR	1205865	MemberAccess	start -> next -> pt . x		1205094	0					
ANR	1205866	PtrMemberAccess	start -> next -> pt		1205094	0					
ANR	1205867	PtrMemberAccess	start -> next		1205094	0					
ANR	1205868	Identifier	start		1205094	0					
ANR	1205869	Identifier	next		1205094	1					
ANR	1205870	Identifier	pt		1205094	1					
ANR	1205871	Identifier	x		1205094	1					
ANR	1205872	MemberAccess	pc -> p1 . x		1205094	1					
ANR	1205873	PtrMemberAccess	pc -> p1		1205094	0					
ANR	1205874	Identifier	pc		1205094	0					
ANR	1205875	Identifier	p1		1205094	1					
ANR	1205876	Identifier	x		1205094	1					
ANR	1205877	EqualityExpression	start -> next -> pt . y != pc -> p1 . y		1205094	1		!=			
ANR	1205878	MemberAccess	start -> next -> pt . y		1205094	0					
ANR	1205879	PtrMemberAccess	start -> next -> pt		1205094	0					
ANR	1205880	PtrMemberAccess	start -> next		1205094	0					
ANR	1205881	Identifier	start		1205094	0					
ANR	1205882	Identifier	next		1205094	1					
ANR	1205883	Identifier	pt		1205094	1					
ANR	1205884	Identifier	y		1205094	1					
ANR	1205885	MemberAccess	pc -> p1 . y		1205094	1					
ANR	1205886	PtrMemberAccess	pc -> p1		1205094	0					
ANR	1205887	Identifier	pc		1205094	0					
ANR	1205888	Identifier	p1		1205094	1					
ANR	1205889	Identifier	y		1205094	1					
ANR	1205890	ExpressionStatement	"adjust_point_to_tangent ( start , start -> next , & pc -> p1 )"	221:32:9341:9393	1205094	1	True				
ANR	1205891	CallExpression	"adjust_point_to_tangent ( start , start -> next , & pc -> p1 )"		1205094	0					
ANR	1205892	Callee	adjust_point_to_tangent		1205094	0					
ANR	1205893	Identifier	adjust_point_to_tangent		1205094	0					
ANR	1205894	ArgumentList	start		1205094	1					
ANR	1205895	Argument	start		1205094	0					
ANR	1205896	Identifier	start		1205094	0					
ANR	1205897	Argument	start -> next		1205094	1					
ANR	1205898	PtrMemberAccess	start -> next		1205094	0					
ANR	1205899	Identifier	start		1205094	0					
ANR	1205900	Identifier	next		1205094	1					
ANR	1205901	Argument	& pc -> p1		1205094	2					
ANR	1205902	UnaryOperationExpression	& pc -> p1		1205094	0					
ANR	1205903	UnaryOperator	&		1205094	0					
ANR	1205904	PtrMemberAccess	pc -> p1		1205094	1					
ANR	1205905	Identifier	pc		1205094	0					
ANR	1205906	Identifier	p1		1205094	1					
ANR	1205907	ElseStatement	else		1205094	0					
ANR	1205908	IfStatement	if ( start -> next -> pt . x != pc -> p2 . x || start -> next -> pt . y != pc -> p2 . y )		1205094	0					
ANR	1205909	Condition	start -> next -> pt . x != pc -> p2 . x || start -> next -> pt . y != pc -> p2 . y	222:37:9432:9493	1205094	0	True				
ANR	1205910	OrExpression	start -> next -> pt . x != pc -> p2 . x || start -> next -> pt . y != pc -> p2 . y		1205094	0		||			
ANR	1205911	EqualityExpression	start -> next -> pt . x != pc -> p2 . x		1205094	0		!=			
ANR	1205912	MemberAccess	start -> next -> pt . x		1205094	0					
ANR	1205913	PtrMemberAccess	start -> next -> pt		1205094	0					
ANR	1205914	PtrMemberAccess	start -> next		1205094	0					
ANR	1205915	Identifier	start		1205094	0					
ANR	1205916	Identifier	next		1205094	1					
ANR	1205917	Identifier	pt		1205094	1					
ANR	1205918	Identifier	x		1205094	1					
ANR	1205919	MemberAccess	pc -> p2 . x		1205094	1					
ANR	1205920	PtrMemberAccess	pc -> p2		1205094	0					
ANR	1205921	Identifier	pc		1205094	0					
ANR	1205922	Identifier	p2		1205094	1					
ANR	1205923	Identifier	x		1205094	1					
ANR	1205924	EqualityExpression	start -> next -> pt . y != pc -> p2 . y		1205094	1		!=			
ANR	1205925	MemberAccess	start -> next -> pt . y		1205094	0					
ANR	1205926	PtrMemberAccess	start -> next -> pt		1205094	0					
ANR	1205927	PtrMemberAccess	start -> next		1205094	0					
ANR	1205928	Identifier	start		1205094	0					
ANR	1205929	Identifier	next		1205094	1					
ANR	1205930	Identifier	pt		1205094	1					
ANR	1205931	Identifier	y		1205094	1					
ANR	1205932	MemberAccess	pc -> p2 . y		1205094	1					
ANR	1205933	PtrMemberAccess	pc -> p2		1205094	0					
ANR	1205934	Identifier	pc		1205094	0					
ANR	1205935	Identifier	p2		1205094	1					
ANR	1205936	Identifier	y		1205094	1					
ANR	1205937	ExpressionStatement	"adjust_point_to_tangent ( start , start -> next , & pc -> p2 )"	223:32:9528:9580	1205094	1	True				
ANR	1205938	CallExpression	"adjust_point_to_tangent ( start , start -> next , & pc -> p2 )"		1205094	0					
ANR	1205939	Callee	adjust_point_to_tangent		1205094	0					
ANR	1205940	Identifier	adjust_point_to_tangent		1205094	0					
ANR	1205941	ArgumentList	start		1205094	1					
ANR	1205942	Argument	start		1205094	0					
ANR	1205943	Identifier	start		1205094	0					
ANR	1205944	Argument	start -> next		1205094	1					
ANR	1205945	PtrMemberAccess	start -> next		1205094	0					
ANR	1205946	Identifier	start		1205094	0					
ANR	1205947	Identifier	next		1205094	1					
ANR	1205948	Argument	& pc -> p2		1205094	2					
ANR	1205949	UnaryOperationExpression	& pc -> p2		1205094	0					
ANR	1205950	UnaryOperator	&		1205094	0					
ANR	1205951	PtrMemberAccess	pc -> p2		1205094	1					
ANR	1205952	Identifier	pc		1205094	0					
ANR	1205953	Identifier	p2		1205094	1					
ANR	1205954	ElseStatement	else		1205094	0					
ANR	1205955	ExpressionStatement	"adjust_point_to_tangent ( start , start -> next , & end -> prev -> pt )"	225:32:9647:9706	1205094	0	True				
ANR	1205956	CallExpression	"adjust_point_to_tangent ( start , start -> next , & end -> prev -> pt )"		1205094	0					
ANR	1205957	Callee	adjust_point_to_tangent		1205094	0					
ANR	1205958	Identifier	adjust_point_to_tangent		1205094	0					
ANR	1205959	ArgumentList	start		1205094	1					
ANR	1205960	Argument	start		1205094	0					
ANR	1205961	Identifier	start		1205094	0					
ANR	1205962	Argument	start -> next		1205094	1					
ANR	1205963	PtrMemberAccess	start -> next		1205094	0					
ANR	1205964	Identifier	start		1205094	0					
ANR	1205965	Identifier	next		1205094	1					
ANR	1205966	Argument	& end -> prev -> pt		1205094	2					
ANR	1205967	UnaryOperationExpression	& end -> prev -> pt		1205094	0					
ANR	1205968	UnaryOperator	&		1205094	0					
ANR	1205969	PtrMemberAccess	end -> prev -> pt		1205094	1					
ANR	1205970	PtrMemberAccess	end -> prev		1205094	0					
ANR	1205971	Identifier	end		1205094	0					
ANR	1205972	Identifier	prev		1205094	1					
ANR	1205973	Identifier	pt		1205094	1					
ANR	1205974	IfStatement	if ( end -> prev -> pt . x != pc -> p2 . x || end -> prev -> pt . y != pc -> p2 . y )		1205094	12					
ANR	1205975	Condition	end -> prev -> pt . x != pc -> p2 . x || end -> prev -> pt . y != pc -> p2 . y	226:32:9740:9797	1205094	0	True				
ANR	1205976	OrExpression	end -> prev -> pt . x != pc -> p2 . x || end -> prev -> pt . y != pc -> p2 . y		1205094	0		||			
ANR	1205977	EqualityExpression	end -> prev -> pt . x != pc -> p2 . x		1205094	0		!=			
ANR	1205978	MemberAccess	end -> prev -> pt . x		1205094	0					
ANR	1205979	PtrMemberAccess	end -> prev -> pt		1205094	0					
ANR	1205980	PtrMemberAccess	end -> prev		1205094	0					
ANR	1205981	Identifier	end		1205094	0					
ANR	1205982	Identifier	prev		1205094	1					
ANR	1205983	Identifier	pt		1205094	1					
ANR	1205984	Identifier	x		1205094	1					
ANR	1205985	MemberAccess	pc -> p2 . x		1205094	1					
ANR	1205986	PtrMemberAccess	pc -> p2		1205094	0					
ANR	1205987	Identifier	pc		1205094	0					
ANR	1205988	Identifier	p2		1205094	1					
ANR	1205989	Identifier	x		1205094	1					
ANR	1205990	EqualityExpression	end -> prev -> pt . y != pc -> p2 . y		1205094	1		!=			
ANR	1205991	MemberAccess	end -> prev -> pt . y		1205094	0					
ANR	1205992	PtrMemberAccess	end -> prev -> pt		1205094	0					
ANR	1205993	PtrMemberAccess	end -> prev		1205094	0					
ANR	1205994	Identifier	end		1205094	0					
ANR	1205995	Identifier	prev		1205094	1					
ANR	1205996	Identifier	pt		1205094	1					
ANR	1205997	Identifier	y		1205094	1					
ANR	1205998	MemberAccess	pc -> p2 . y		1205094	1					
ANR	1205999	PtrMemberAccess	pc -> p2		1205094	0					
ANR	1206000	Identifier	pc		1205094	0					
ANR	1206001	Identifier	p2		1205094	1					
ANR	1206002	Identifier	y		1205094	1					
ANR	1206003	ExpressionStatement	"adjust_point_to_tangent ( end , end -> prev , & pc -> p2 )"	227:32:9832:9880	1205094	1	True				
ANR	1206004	CallExpression	"adjust_point_to_tangent ( end , end -> prev , & pc -> p2 )"		1205094	0					
ANR	1206005	Callee	adjust_point_to_tangent		1205094	0					
ANR	1206006	Identifier	adjust_point_to_tangent		1205094	0					
ANR	1206007	ArgumentList	end		1205094	1					
ANR	1206008	Argument	end		1205094	0					
ANR	1206009	Identifier	end		1205094	0					
ANR	1206010	Argument	end -> prev		1205094	1					
ANR	1206011	PtrMemberAccess	end -> prev		1205094	0					
ANR	1206012	Identifier	end		1205094	0					
ANR	1206013	Identifier	prev		1205094	1					
ANR	1206014	Argument	& pc -> p2		1205094	2					
ANR	1206015	UnaryOperationExpression	& pc -> p2		1205094	0					
ANR	1206016	UnaryOperator	&		1205094	0					
ANR	1206017	PtrMemberAccess	pc -> p2		1205094	1					
ANR	1206018	Identifier	pc		1205094	0					
ANR	1206019	Identifier	p2		1205094	1					
ANR	1206020	ElseStatement	else		1205094	0					
ANR	1206021	IfStatement	if ( end -> prev -> pt . x != pc -> p1 . x || end -> prev -> pt . y != pc -> p1 . y )		1205094	0					
ANR	1206022	Condition	end -> prev -> pt . x != pc -> p1 . x || end -> prev -> pt . y != pc -> p1 . y	228:37:9919:9976	1205094	0	True				
ANR	1206023	OrExpression	end -> prev -> pt . x != pc -> p1 . x || end -> prev -> pt . y != pc -> p1 . y		1205094	0		||			
ANR	1206024	EqualityExpression	end -> prev -> pt . x != pc -> p1 . x		1205094	0		!=			
ANR	1206025	MemberAccess	end -> prev -> pt . x		1205094	0					
ANR	1206026	PtrMemberAccess	end -> prev -> pt		1205094	0					
ANR	1206027	PtrMemberAccess	end -> prev		1205094	0					
ANR	1206028	Identifier	end		1205094	0					
ANR	1206029	Identifier	prev		1205094	1					
ANR	1206030	Identifier	pt		1205094	1					
ANR	1206031	Identifier	x		1205094	1					
ANR	1206032	MemberAccess	pc -> p1 . x		1205094	1					
ANR	1206033	PtrMemberAccess	pc -> p1		1205094	0					
ANR	1206034	Identifier	pc		1205094	0					
ANR	1206035	Identifier	p1		1205094	1					
ANR	1206036	Identifier	x		1205094	1					
ANR	1206037	EqualityExpression	end -> prev -> pt . y != pc -> p1 . y		1205094	1		!=			
ANR	1206038	MemberAccess	end -> prev -> pt . y		1205094	0					
ANR	1206039	PtrMemberAccess	end -> prev -> pt		1205094	0					
ANR	1206040	PtrMemberAccess	end -> prev		1205094	0					
ANR	1206041	Identifier	end		1205094	0					
ANR	1206042	Identifier	prev		1205094	1					
ANR	1206043	Identifier	pt		1205094	1					
ANR	1206044	Identifier	y		1205094	1					
ANR	1206045	MemberAccess	pc -> p1 . y		1205094	1					
ANR	1206046	PtrMemberAccess	pc -> p1		1205094	0					
ANR	1206047	Identifier	pc		1205094	0					
ANR	1206048	Identifier	p1		1205094	1					
ANR	1206049	Identifier	y		1205094	1					
ANR	1206050	ExpressionStatement	"adjust_point_to_tangent ( end , end -> prev , & pc -> p1 )"	229:32:10011:10059	1205094	1	True				
ANR	1206051	CallExpression	"adjust_point_to_tangent ( end , end -> prev , & pc -> p1 )"		1205094	0					
ANR	1206052	Callee	adjust_point_to_tangent		1205094	0					
ANR	1206053	Identifier	adjust_point_to_tangent		1205094	0					
ANR	1206054	ArgumentList	end		1205094	1					
ANR	1206055	Argument	end		1205094	0					
ANR	1206056	Identifier	end		1205094	0					
ANR	1206057	Argument	end -> prev		1205094	1					
ANR	1206058	PtrMemberAccess	end -> prev		1205094	0					
ANR	1206059	Identifier	end		1205094	0					
ANR	1206060	Identifier	prev		1205094	1					
ANR	1206061	Argument	& pc -> p1		1205094	2					
ANR	1206062	UnaryOperationExpression	& pc -> p1		1205094	0					
ANR	1206063	UnaryOperator	&		1205094	0					
ANR	1206064	PtrMemberAccess	pc -> p1		1205094	1					
ANR	1206065	Identifier	pc		1205094	0					
ANR	1206066	Identifier	p1		1205094	1					
ANR	1206067	ElseStatement	else		1205094	0					
ANR	1206068	ExpressionStatement	"adjust_point_to_tangent ( end , end -> prev , & start -> pt )"	231:32:10126:10177	1205094	0	True				
ANR	1206069	CallExpression	"adjust_point_to_tangent ( end , end -> prev , & start -> pt )"		1205094	0					
ANR	1206070	Callee	adjust_point_to_tangent		1205094	0					
ANR	1206071	Identifier	adjust_point_to_tangent		1205094	0					
ANR	1206072	ArgumentList	end		1205094	1					
ANR	1206073	Argument	end		1205094	0					
ANR	1206074	Identifier	end		1205094	0					
ANR	1206075	Argument	end -> prev		1205094	1					
ANR	1206076	PtrMemberAccess	end -> prev		1205094	0					
ANR	1206077	Identifier	end		1205094	0					
ANR	1206078	Identifier	prev		1205094	1					
ANR	1206079	Argument	& start -> pt		1205094	2					
ANR	1206080	UnaryOperationExpression	& start -> pt		1205094	0					
ANR	1206081	UnaryOperator	&		1205094	0					
ANR	1206082	PtrMemberAccess	start -> pt		1205094	1					
ANR	1206083	Identifier	start		1205094	0					
ANR	1206084	Identifier	pt		1205094	1					
ANR	1206085	ElseStatement	else		1205094	0					
ANR	1206086	CompoundStatement		144:31:7196:7196	1205094	0					
ANR	1206087	ExpressionStatement	cseg = * pc	233:28:10240:10250	1205094	0	True				
ANR	1206088	AssignmentExpression	cseg = * pc		1205094	0		=			
ANR	1206089	Identifier	cseg		1205094	0					
ANR	1206090	UnaryOperationExpression	* pc		1205094	1					
ANR	1206091	UnaryOperator	*		1205094	0					
ANR	1206092	Identifier	pc		1205094	1					
ANR	1206093	ExpressionStatement	"code = gx_subdivide_curve ( ppath , k , & cseg , notes )"	234:28:10280:10329	1205094	1	True				
ANR	1206094	AssignmentExpression	"code = gx_subdivide_curve ( ppath , k , & cseg , notes )"		1205094	0		=			
ANR	1206095	Identifier	code		1205094	0					
ANR	1206096	CallExpression	"gx_subdivide_curve ( ppath , k , & cseg , notes )"		1205094	1					
ANR	1206097	Callee	gx_subdivide_curve		1205094	0					
ANR	1206098	Identifier	gx_subdivide_curve		1205094	0					
ANR	1206099	ArgumentList	ppath		1205094	1					
ANR	1206100	Argument	ppath		1205094	0					
ANR	1206101	Identifier	ppath		1205094	0					
ANR	1206102	Argument	k		1205094	1					
ANR	1206103	Identifier	k		1205094	0					
ANR	1206104	Argument	& cseg		1205094	2					
ANR	1206105	UnaryOperationExpression	& cseg		1205094	0					
ANR	1206106	UnaryOperator	&		1205094	0					
ANR	1206107	Identifier	cseg		1205094	1					
ANR	1206108	Argument	notes		1205094	3					
ANR	1206109	Identifier	notes		1205094	0					
ANR	1206110	BreakStatement	break ;	237:20:10399:10404	1205094	2	True				
ANR	1206111	Label	case s_line :	239:12:10436:10447	1205094	5	True				
ANR	1206112	Identifier	s_line		1205094	0					
ANR	1206113	ExpressionStatement	"code = break_line_if_long ( ppath , pseg )"	240:16:10465:10503	1205094	6	True				
ANR	1206114	AssignmentExpression	"code = break_line_if_long ( ppath , pseg )"		1205094	0		=			
ANR	1206115	Identifier	code		1205094	0					
ANR	1206116	CallExpression	"break_line_if_long ( ppath , pseg )"		1205094	1					
ANR	1206117	Callee	break_line_if_long		1205094	0					
ANR	1206118	Identifier	break_line_if_long		1205094	0					
ANR	1206119	ArgumentList	ppath		1205094	1					
ANR	1206120	Argument	ppath		1205094	0					
ANR	1206121	Identifier	ppath		1205094	0					
ANR	1206122	Argument	pseg		1205094	1					
ANR	1206123	Identifier	pseg		1205094	0					
ANR	1206124	IfStatement	if ( code < 0 )		1205094	7					
ANR	1206125	Condition	code < 0	241:20:10525:10532	1205094	0	True				
ANR	1206126	RelationalExpression	code < 0		1205094	0		<			
ANR	1206127	Identifier	code		1205094	0					
ANR	1206128	PrimaryExpression	0		1205094	1					
ANR	1206129	BreakStatement	break ;	242:20:10555:10560	1205094	1	True				
ANR	1206130	ExpressionStatement	"code = gx_path_add_line_notes ( ppath , pseg -> pt . x , pseg -> pt . y , pseg -> notes )"	243:16:10578:10690	1205094	8	True				
ANR	1206131	AssignmentExpression	"code = gx_path_add_line_notes ( ppath , pseg -> pt . x , pseg -> pt . y , pseg -> notes )"		1205094	0		=			
ANR	1206132	Identifier	code		1205094	0					
ANR	1206133	CallExpression	"gx_path_add_line_notes ( ppath , pseg -> pt . x , pseg -> pt . y , pseg -> notes )"		1205094	1					
ANR	1206134	Callee	gx_path_add_line_notes		1205094	0					
ANR	1206135	Identifier	gx_path_add_line_notes		1205094	0					
ANR	1206136	ArgumentList	ppath		1205094	1					
ANR	1206137	Argument	ppath		1205094	0					
ANR	1206138	Identifier	ppath		1205094	0					
ANR	1206139	Argument	pseg -> pt . x		1205094	1					
ANR	1206140	MemberAccess	pseg -> pt . x		1205094	0					
ANR	1206141	PtrMemberAccess	pseg -> pt		1205094	0					
ANR	1206142	Identifier	pseg		1205094	0					
ANR	1206143	Identifier	pt		1205094	1					
ANR	1206144	Identifier	x		1205094	1					
ANR	1206145	Argument	pseg -> pt . y		1205094	2					
ANR	1206146	MemberAccess	pseg -> pt . y		1205094	0					
ANR	1206147	PtrMemberAccess	pseg -> pt		1205094	0					
ANR	1206148	Identifier	pseg		1205094	0					
ANR	1206149	Identifier	pt		1205094	1					
ANR	1206150	Identifier	y		1205094	1					
ANR	1206151	Argument	pseg -> notes		1205094	3					
ANR	1206152	PtrMemberAccess	pseg -> notes		1205094	0					
ANR	1206153	Identifier	pseg		1205094	0					
ANR	1206154	Identifier	notes		1205094	1					
ANR	1206155	BreakStatement	break ;	245:16:10708:10713	1205094	9	True				
ANR	1206156	Label	case s_gap :	246:12:10727:10737	1205094	10	True				
ANR	1206157	Identifier	s_gap		1205094	0					
ANR	1206158	ExpressionStatement	"code = break_gap_if_long ( ppath , pseg )"	247:16:10755:10792	1205094	11	True				
ANR	1206159	AssignmentExpression	"code = break_gap_if_long ( ppath , pseg )"		1205094	0		=			
ANR	1206160	Identifier	code		1205094	0					
ANR	1206161	CallExpression	"break_gap_if_long ( ppath , pseg )"		1205094	1					
ANR	1206162	Callee	break_gap_if_long		1205094	0					
ANR	1206163	Identifier	break_gap_if_long		1205094	0					
ANR	1206164	ArgumentList	ppath		1205094	1					
ANR	1206165	Argument	ppath		1205094	0					
ANR	1206166	Identifier	ppath		1205094	0					
ANR	1206167	Argument	pseg		1205094	1					
ANR	1206168	Identifier	pseg		1205094	0					
ANR	1206169	IfStatement	if ( code < 0 )		1205094	12					
ANR	1206170	Condition	code < 0	248:20:10814:10821	1205094	0	True				
ANR	1206171	RelationalExpression	code < 0		1205094	0		<			
ANR	1206172	Identifier	code		1205094	0					
ANR	1206173	PrimaryExpression	0		1205094	1					
ANR	1206174	BreakStatement	break ;	249:20:10844:10849	1205094	1	True				
ANR	1206175	ExpressionStatement	"code = gx_path_add_gap_notes ( ppath , pseg -> pt . x , pseg -> pt . y , pseg -> notes )"	250:16:10867:10978	1205094	13	True				
ANR	1206176	AssignmentExpression	"code = gx_path_add_gap_notes ( ppath , pseg -> pt . x , pseg -> pt . y , pseg -> notes )"		1205094	0		=			
ANR	1206177	Identifier	code		1205094	0					
ANR	1206178	CallExpression	"gx_path_add_gap_notes ( ppath , pseg -> pt . x , pseg -> pt . y , pseg -> notes )"		1205094	1					
ANR	1206179	Callee	gx_path_add_gap_notes		1205094	0					
ANR	1206180	Identifier	gx_path_add_gap_notes		1205094	0					
ANR	1206181	ArgumentList	ppath		1205094	1					
ANR	1206182	Argument	ppath		1205094	0					
ANR	1206183	Identifier	ppath		1205094	0					
ANR	1206184	Argument	pseg -> pt . x		1205094	1					
ANR	1206185	MemberAccess	pseg -> pt . x		1205094	0					
ANR	1206186	PtrMemberAccess	pseg -> pt		1205094	0					
ANR	1206187	Identifier	pseg		1205094	0					
ANR	1206188	Identifier	pt		1205094	1					
ANR	1206189	Identifier	x		1205094	1					
ANR	1206190	Argument	pseg -> pt . y		1205094	2					
ANR	1206191	MemberAccess	pseg -> pt . y		1205094	0					
ANR	1206192	PtrMemberAccess	pseg -> pt		1205094	0					
ANR	1206193	Identifier	pseg		1205094	0					
ANR	1206194	Identifier	pt		1205094	1					
ANR	1206195	Identifier	y		1205094	1					
ANR	1206196	Argument	pseg -> notes		1205094	3					
ANR	1206197	PtrMemberAccess	pseg -> notes		1205094	0					
ANR	1206198	Identifier	pseg		1205094	0					
ANR	1206199	Identifier	notes		1205094	1					
ANR	1206200	BreakStatement	break ;	252:16:10996:11001	1205094	14	True				
ANR	1206201	Label	case s_dash :	253:12:11015:11026	1205094	15	True				
ANR	1206202	Identifier	s_dash		1205094	0					
ANR	1206203	CompoundStatement		167:20:8052:8103	1205094	16					
ANR	1206204	IdentifierDeclStatement	const dash_segment * pd = ( const dash_segment * ) pseg ;	255:20:11066:11117	1205094	0	True				
ANR	1206205	IdentifierDecl	* pd = ( const dash_segment * ) pseg		1205094	0					
ANR	1206206	IdentifierDeclType	const dash_segment *		1205094	0					
ANR	1206207	Identifier	pd		1205094	1					
ANR	1206208	AssignmentExpression	* pd = ( const dash_segment * ) pseg		1205094	2		=			
ANR	1206209	Identifier	pd		1205094	0					
ANR	1206210	CastExpression	( const dash_segment * ) pseg		1205094	1					
ANR	1206211	CastTarget	const dash_segment *		1205094	0					
ANR	1206212	Identifier	pseg		1205094	1					
ANR	1206213	ExpressionStatement	"code = gx_path_add_dash_notes ( ppath , pd -> pt . x , pd -> pt . y , pd -> tangent . x , pd -> tangent . y , pseg -> notes )"	257:20:11140:11278	1205094	1	True				
ANR	1206214	AssignmentExpression	"code = gx_path_add_dash_notes ( ppath , pd -> pt . x , pd -> pt . y , pd -> tangent . x , pd -> tangent . y , pseg -> notes )"		1205094	0		=			
ANR	1206215	Identifier	code		1205094	0					
ANR	1206216	CallExpression	"gx_path_add_dash_notes ( ppath , pd -> pt . x , pd -> pt . y , pd -> tangent . x , pd -> tangent . y , pseg -> notes )"		1205094	1					
ANR	1206217	Callee	gx_path_add_dash_notes		1205094	0					
ANR	1206218	Identifier	gx_path_add_dash_notes		1205094	0					
ANR	1206219	ArgumentList	ppath		1205094	1					
ANR	1206220	Argument	ppath		1205094	0					
ANR	1206221	Identifier	ppath		1205094	0					
ANR	1206222	Argument	pd -> pt . x		1205094	1					
ANR	1206223	MemberAccess	pd -> pt . x		1205094	0					
ANR	1206224	PtrMemberAccess	pd -> pt		1205094	0					
ANR	1206225	Identifier	pd		1205094	0					
ANR	1206226	Identifier	pt		1205094	1					
ANR	1206227	Identifier	x		1205094	1					
ANR	1206228	Argument	pd -> pt . y		1205094	2					
ANR	1206229	MemberAccess	pd -> pt . y		1205094	0					
ANR	1206230	PtrMemberAccess	pd -> pt		1205094	0					
ANR	1206231	Identifier	pd		1205094	0					
ANR	1206232	Identifier	pt		1205094	1					
ANR	1206233	Identifier	y		1205094	1					
ANR	1206234	Argument	pd -> tangent . x		1205094	3					
ANR	1206235	MemberAccess	pd -> tangent . x		1205094	0					
ANR	1206236	PtrMemberAccess	pd -> tangent		1205094	0					
ANR	1206237	Identifier	pd		1205094	0					
ANR	1206238	Identifier	tangent		1205094	1					
ANR	1206239	Identifier	x		1205094	1					
ANR	1206240	Argument	pd -> tangent . y		1205094	4					
ANR	1206241	MemberAccess	pd -> tangent . y		1205094	0					
ANR	1206242	PtrMemberAccess	pd -> tangent		1205094	0					
ANR	1206243	Identifier	pd		1205094	0					
ANR	1206244	Identifier	tangent		1205094	1					
ANR	1206245	Identifier	y		1205094	1					
ANR	1206246	Argument	pseg -> notes		1205094	5					
ANR	1206247	PtrMemberAccess	pseg -> notes		1205094	0					
ANR	1206248	Identifier	pseg		1205094	0					
ANR	1206249	Identifier	notes		1205094	1					
ANR	1206250	BreakStatement	break ;	259:20:11300:11305	1205094	2	True				
ANR	1206251	Label	case s_line_close :	261:12:11337:11354	1205094	17	True				
ANR	1206252	Identifier	s_line_close		1205094	0					
ANR	1206253	ExpressionStatement	"code = break_line_if_long ( ppath , pseg )"	262:16:11372:11410	1205094	18	True				
ANR	1206254	AssignmentExpression	"code = break_line_if_long ( ppath , pseg )"		1205094	0		=			
ANR	1206255	Identifier	code		1205094	0					
ANR	1206256	CallExpression	"break_line_if_long ( ppath , pseg )"		1205094	1					
ANR	1206257	Callee	break_line_if_long		1205094	0					
ANR	1206258	Identifier	break_line_if_long		1205094	0					
ANR	1206259	ArgumentList	ppath		1205094	1					
ANR	1206260	Argument	ppath		1205094	0					
ANR	1206261	Identifier	ppath		1205094	0					
ANR	1206262	Argument	pseg		1205094	1					
ANR	1206263	Identifier	pseg		1205094	0					
ANR	1206264	IfStatement	if ( code < 0 )		1205094	19					
ANR	1206265	Condition	code < 0	263:20:11432:11439	1205094	0	True				
ANR	1206266	RelationalExpression	code < 0		1205094	0		<			
ANR	1206267	Identifier	code		1205094	0					
ANR	1206268	PrimaryExpression	0		1205094	1					
ANR	1206269	BreakStatement	break ;	264:20:11462:11467	1205094	1	True				
ANR	1206270	ExpressionStatement	code = gx_path_close_subpath ( ppath )	265:16:11485:11520	1205094	20	True				
ANR	1206271	AssignmentExpression	code = gx_path_close_subpath ( ppath )		1205094	0		=			
ANR	1206272	Identifier	code		1205094	0					
ANR	1206273	CallExpression	gx_path_close_subpath ( ppath )		1205094	1					
ANR	1206274	Callee	gx_path_close_subpath		1205094	0					
ANR	1206275	Identifier	gx_path_close_subpath		1205094	0					
ANR	1206276	ArgumentList	ppath		1205094	1					
ANR	1206277	Argument	ppath		1205094	0					
ANR	1206278	Identifier	ppath		1205094	0					
ANR	1206279	BreakStatement	break ;	266:16:11538:11543	1205094	21	True				
ANR	1206280	Label	default :	267:12:11557:11564	1205094	22	True				
ANR	1206281	Identifier	default		1205094	0					
ANR	1206282	ExpressionStatement	code = gs_note_error ( gs_error_unregistered )	268:16:11602:11645	1205094	23	True				
ANR	1206283	AssignmentExpression	code = gs_note_error ( gs_error_unregistered )		1205094	0		=			
ANR	1206284	Identifier	code		1205094	0					
ANR	1206285	CallExpression	gs_note_error ( gs_error_unregistered )		1205094	1					
ANR	1206286	Callee	gs_note_error		1205094	0					
ANR	1206287	Identifier	gs_note_error		1205094	0					
ANR	1206288	ArgumentList	gs_error_unregistered		1205094	1					
ANR	1206289	Argument	gs_error_unregistered		1205094	0					
ANR	1206290	Identifier	gs_error_unregistered		1205094	0					
ANR	1206291	IfStatement	if ( code < 0 )		1205094	1					
ANR	1206292	Condition	code < 0	270:12:11669:11676	1205094	0	True				
ANR	1206293	RelationalExpression	code < 0		1205094	0		<			
ANR	1206294	Identifier	code		1205094	0					
ANR	1206295	PrimaryExpression	0		1205094	1					
ANR	1206296	CompoundStatement		182:22:8665:8665	1205094	1					
ANR	1206297	ExpressionStatement	gx_path_new ( ppath )	271:12:11693:11711	1205094	0	True				
ANR	1206298	CallExpression	gx_path_new ( ppath )		1205094	0					
ANR	1206299	Callee	gx_path_new		1205094	0					
ANR	1206300	Identifier	gx_path_new		1205094	0					
ANR	1206301	ArgumentList	ppath		1205094	1					
ANR	1206302	Argument	ppath		1205094	0					
ANR	1206303	Identifier	ppath		1205094	0					
ANR	1206304	ReturnStatement	return code ;	272:12:11725:11736	1205094	1	True				
ANR	1206305	Identifier	code		1205094	0					
ANR	1206306	ExpressionStatement	pseg = pseg -> next	274:8:11756:11773	1205094	2	True				
ANR	1206307	AssignmentExpression	pseg = pseg -> next		1205094	0		=			
ANR	1206308	Identifier	pseg		1205094	0					
ANR	1206309	PtrMemberAccess	pseg -> next		1205094	1					
ANR	1206310	Identifier	pseg		1205094	0					
ANR	1206311	Identifier	next		1205094	1					
ANR	1206312	IfStatement	if ( path_last_is_moveto ( ppath_old ) )		1205094	9					
ANR	1206313	Condition	path_last_is_moveto ( ppath_old )	276:8:11789:11818	1205094	0	True				
ANR	1206314	CallExpression	path_last_is_moveto ( ppath_old )		1205094	0					
ANR	1206315	Callee	path_last_is_moveto		1205094	0					
ANR	1206316	Identifier	path_last_is_moveto		1205094	0					
ANR	1206317	ArgumentList	ppath_old		1205094	1					
ANR	1206318	Argument	ppath_old		1205094	0					
ANR	1206319	Identifier	ppath_old		1205094	0					
ANR	1206320	CompoundStatement		188:40:8807:8807	1205094	1					
ANR	1206321	ExpressionStatement	"code = gx_path_add_point ( ppath , ppath_old -> position . x , ppath_old -> position . y )"	277:8:11831:11934	1205094	0	True				
ANR	1206322	AssignmentExpression	"code = gx_path_add_point ( ppath , ppath_old -> position . x , ppath_old -> position . y )"		1205094	0		=			
ANR	1206323	Identifier	code		1205094	0					
ANR	1206324	CallExpression	"gx_path_add_point ( ppath , ppath_old -> position . x , ppath_old -> position . y )"		1205094	1					
ANR	1206325	Callee	gx_path_add_point		1205094	0					
ANR	1206326	Identifier	gx_path_add_point		1205094	0					
ANR	1206327	ArgumentList	ppath		1205094	1					
ANR	1206328	Argument	ppath		1205094	0					
ANR	1206329	Identifier	ppath		1205094	0					
ANR	1206330	Argument	ppath_old -> position . x		1205094	1					
ANR	1206331	MemberAccess	ppath_old -> position . x		1205094	0					
ANR	1206332	PtrMemberAccess	ppath_old -> position		1205094	0					
ANR	1206333	Identifier	ppath_old		1205094	0					
ANR	1206334	Identifier	position		1205094	1					
ANR	1206335	Identifier	x		1205094	1					
ANR	1206336	Argument	ppath_old -> position . y		1205094	2					
ANR	1206337	MemberAccess	ppath_old -> position . y		1205094	0					
ANR	1206338	PtrMemberAccess	ppath_old -> position		1205094	0					
ANR	1206339	Identifier	ppath_old		1205094	0					
ANR	1206340	Identifier	position		1205094	1					
ANR	1206341	Identifier	y		1205094	1					
ANR	1206342	IfStatement	if ( code < 0 )		1205094	1					
ANR	1206343	Condition	code < 0	279:12:11948:11955	1205094	0	True				
ANR	1206344	RelationalExpression	code < 0		1205094	0		<			
ANR	1206345	Identifier	code		1205094	0					
ANR	1206346	PrimaryExpression	0		1205094	1					
ANR	1206347	CompoundStatement		191:22:8944:8944	1205094	1					
ANR	1206348	ExpressionStatement	gx_path_new ( ppath )	280:12:11972:11990	1205094	0	True				
ANR	1206349	CallExpression	gx_path_new ( ppath )		1205094	0					
ANR	1206350	Callee	gx_path_new		1205094	0					
ANR	1206351	Identifier	gx_path_new		1205094	0					
ANR	1206352	ArgumentList	ppath		1205094	1					
ANR	1206353	Argument	ppath		1205094	0					
ANR	1206354	Identifier	ppath		1205094	0					
ANR	1206355	ReturnStatement	return code ;	281:12:12004:12015	1205094	1	True				
ANR	1206356	Identifier	code		1205094	0					
ANR	1206357	IfStatement	if ( ppath_old -> bbox_set )		1205094	10					
ANR	1206358	Condition	ppath_old -> bbox_set	284:8:12041:12059	1205094	0	True				
ANR	1206359	PtrMemberAccess	ppath_old -> bbox_set		1205094	0					
ANR	1206360	Identifier	ppath_old		1205094	0					
ANR	1206361	Identifier	bbox_set		1205094	1					
ANR	1206362	CompoundStatement		196:29:9048:9048	1205094	1					
ANR	1206363	IfStatement	if ( ppath -> bbox_set )		1205094	0					
ANR	1206364	Condition	ppath -> bbox_set	285:12:12076:12090	1205094	0	True				
ANR	1206365	PtrMemberAccess	ppath -> bbox_set		1205094	0					
ANR	1206366	Identifier	ppath		1205094	0					
ANR	1206367	Identifier	bbox_set		1205094	1					
ANR	1206368	CompoundStatement		197:29:9079:9079	1205094	1					
ANR	1206369	ExpressionStatement	"ppath -> bbox . p . x = min ( ppath_old -> bbox . p . x , ppath -> bbox . p . x )"	286:12:12107:12166	1205094	0	True				
ANR	1206370	AssignmentExpression	"ppath -> bbox . p . x = min ( ppath_old -> bbox . p . x , ppath -> bbox . p . x )"		1205094	0		=			
ANR	1206371	MemberAccess	ppath -> bbox . p . x		1205094	0					
ANR	1206372	MemberAccess	ppath -> bbox . p		1205094	0					
ANR	1206373	PtrMemberAccess	ppath -> bbox		1205094	0					
ANR	1206374	Identifier	ppath		1205094	0					
ANR	1206375	Identifier	bbox		1205094	1					
ANR	1206376	Identifier	p		1205094	1					
ANR	1206377	Identifier	x		1205094	1					
ANR	1206378	CallExpression	"min ( ppath_old -> bbox . p . x , ppath -> bbox . p . x )"		1205094	1					
ANR	1206379	Callee	min		1205094	0					
ANR	1206380	Identifier	min		1205094	0					
ANR	1206381	ArgumentList	ppath_old -> bbox . p . x		1205094	1					
ANR	1206382	Argument	ppath_old -> bbox . p . x		1205094	0					
ANR	1206383	MemberAccess	ppath_old -> bbox . p . x		1205094	0					
ANR	1206384	MemberAccess	ppath_old -> bbox . p		1205094	0					
ANR	1206385	PtrMemberAccess	ppath_old -> bbox		1205094	0					
ANR	1206386	Identifier	ppath_old		1205094	0					
ANR	1206387	Identifier	bbox		1205094	1					
ANR	1206388	Identifier	p		1205094	1					
ANR	1206389	Identifier	x		1205094	1					
ANR	1206390	Argument	ppath -> bbox . p . x		1205094	1					
ANR	1206391	MemberAccess	ppath -> bbox . p . x		1205094	0					
ANR	1206392	MemberAccess	ppath -> bbox . p		1205094	0					
ANR	1206393	PtrMemberAccess	ppath -> bbox		1205094	0					
ANR	1206394	Identifier	ppath		1205094	0					
ANR	1206395	Identifier	bbox		1205094	1					
ANR	1206396	Identifier	p		1205094	1					
ANR	1206397	Identifier	x		1205094	1					
ANR	1206398	ExpressionStatement	"ppath -> bbox . p . y = min ( ppath_old -> bbox . p . y , ppath -> bbox . p . y )"	287:12:12180:12239	1205094	1	True				
ANR	1206399	AssignmentExpression	"ppath -> bbox . p . y = min ( ppath_old -> bbox . p . y , ppath -> bbox . p . y )"		1205094	0		=			
ANR	1206400	MemberAccess	ppath -> bbox . p . y		1205094	0					
ANR	1206401	MemberAccess	ppath -> bbox . p		1205094	0					
ANR	1206402	PtrMemberAccess	ppath -> bbox		1205094	0					
ANR	1206403	Identifier	ppath		1205094	0					
ANR	1206404	Identifier	bbox		1205094	1					
ANR	1206405	Identifier	p		1205094	1					
ANR	1206406	Identifier	y		1205094	1					
ANR	1206407	CallExpression	"min ( ppath_old -> bbox . p . y , ppath -> bbox . p . y )"		1205094	1					
ANR	1206408	Callee	min		1205094	0					
ANR	1206409	Identifier	min		1205094	0					
ANR	1206410	ArgumentList	ppath_old -> bbox . p . y		1205094	1					
ANR	1206411	Argument	ppath_old -> bbox . p . y		1205094	0					
ANR	1206412	MemberAccess	ppath_old -> bbox . p . y		1205094	0					
ANR	1206413	MemberAccess	ppath_old -> bbox . p		1205094	0					
ANR	1206414	PtrMemberAccess	ppath_old -> bbox		1205094	0					
ANR	1206415	Identifier	ppath_old		1205094	0					
ANR	1206416	Identifier	bbox		1205094	1					
ANR	1206417	Identifier	p		1205094	1					
ANR	1206418	Identifier	y		1205094	1					
ANR	1206419	Argument	ppath -> bbox . p . y		1205094	1					
ANR	1206420	MemberAccess	ppath -> bbox . p . y		1205094	0					
ANR	1206421	MemberAccess	ppath -> bbox . p		1205094	0					
ANR	1206422	PtrMemberAccess	ppath -> bbox		1205094	0					
ANR	1206423	Identifier	ppath		1205094	0					
ANR	1206424	Identifier	bbox		1205094	1					
ANR	1206425	Identifier	p		1205094	1					
ANR	1206426	Identifier	y		1205094	1					
ANR	1206427	ExpressionStatement	"ppath -> bbox . q . x = max ( ppath_old -> bbox . q . x , ppath -> bbox . q . x )"	288:12:12253:12312	1205094	2	True				
ANR	1206428	AssignmentExpression	"ppath -> bbox . q . x = max ( ppath_old -> bbox . q . x , ppath -> bbox . q . x )"		1205094	0		=			
ANR	1206429	MemberAccess	ppath -> bbox . q . x		1205094	0					
ANR	1206430	MemberAccess	ppath -> bbox . q		1205094	0					
ANR	1206431	PtrMemberAccess	ppath -> bbox		1205094	0					
ANR	1206432	Identifier	ppath		1205094	0					
ANR	1206433	Identifier	bbox		1205094	1					
ANR	1206434	Identifier	q		1205094	1					
ANR	1206435	Identifier	x		1205094	1					
ANR	1206436	CallExpression	"max ( ppath_old -> bbox . q . x , ppath -> bbox . q . x )"		1205094	1					
ANR	1206437	Callee	max		1205094	0					
ANR	1206438	Identifier	max		1205094	0					
ANR	1206439	ArgumentList	ppath_old -> bbox . q . x		1205094	1					
ANR	1206440	Argument	ppath_old -> bbox . q . x		1205094	0					
ANR	1206441	MemberAccess	ppath_old -> bbox . q . x		1205094	0					
ANR	1206442	MemberAccess	ppath_old -> bbox . q		1205094	0					
ANR	1206443	PtrMemberAccess	ppath_old -> bbox		1205094	0					
ANR	1206444	Identifier	ppath_old		1205094	0					
ANR	1206445	Identifier	bbox		1205094	1					
ANR	1206446	Identifier	q		1205094	1					
ANR	1206447	Identifier	x		1205094	1					
ANR	1206448	Argument	ppath -> bbox . q . x		1205094	1					
ANR	1206449	MemberAccess	ppath -> bbox . q . x		1205094	0					
ANR	1206450	MemberAccess	ppath -> bbox . q		1205094	0					
ANR	1206451	PtrMemberAccess	ppath -> bbox		1205094	0					
ANR	1206452	Identifier	ppath		1205094	0					
ANR	1206453	Identifier	bbox		1205094	1					
ANR	1206454	Identifier	q		1205094	1					
ANR	1206455	Identifier	x		1205094	1					
ANR	1206456	ExpressionStatement	"ppath -> bbox . q . y = max ( ppath_old -> bbox . q . y , ppath -> bbox . q . y )"	289:12:12326:12385	1205094	3	True				
ANR	1206457	AssignmentExpression	"ppath -> bbox . q . y = max ( ppath_old -> bbox . q . y , ppath -> bbox . q . y )"		1205094	0		=			
ANR	1206458	MemberAccess	ppath -> bbox . q . y		1205094	0					
ANR	1206459	MemberAccess	ppath -> bbox . q		1205094	0					
ANR	1206460	PtrMemberAccess	ppath -> bbox		1205094	0					
ANR	1206461	Identifier	ppath		1205094	0					
ANR	1206462	Identifier	bbox		1205094	1					
ANR	1206463	Identifier	q		1205094	1					
ANR	1206464	Identifier	y		1205094	1					
ANR	1206465	CallExpression	"max ( ppath_old -> bbox . q . y , ppath -> bbox . q . y )"		1205094	1					
ANR	1206466	Callee	max		1205094	0					
ANR	1206467	Identifier	max		1205094	0					
ANR	1206468	ArgumentList	ppath_old -> bbox . q . y		1205094	1					
ANR	1206469	Argument	ppath_old -> bbox . q . y		1205094	0					
ANR	1206470	MemberAccess	ppath_old -> bbox . q . y		1205094	0					
ANR	1206471	MemberAccess	ppath_old -> bbox . q		1205094	0					
ANR	1206472	PtrMemberAccess	ppath_old -> bbox		1205094	0					
ANR	1206473	Identifier	ppath_old		1205094	0					
ANR	1206474	Identifier	bbox		1205094	1					
ANR	1206475	Identifier	q		1205094	1					
ANR	1206476	Identifier	y		1205094	1					
ANR	1206477	Argument	ppath -> bbox . q . y		1205094	1					
ANR	1206478	MemberAccess	ppath -> bbox . q . y		1205094	0					
ANR	1206479	MemberAccess	ppath -> bbox . q		1205094	0					
ANR	1206480	PtrMemberAccess	ppath -> bbox		1205094	0					
ANR	1206481	Identifier	ppath		1205094	0					
ANR	1206482	Identifier	bbox		1205094	1					
ANR	1206483	Identifier	q		1205094	1					
ANR	1206484	Identifier	y		1205094	1					
ANR	1206485	ElseStatement	else		1205094	0					
ANR	1206486	CompoundStatement		202:15:9388:9388	1205094	0					
ANR	1206487	ExpressionStatement	ppath -> bbox_set = true	291:12:12416:12438	1205094	0	True				
ANR	1206488	AssignmentExpression	ppath -> bbox_set = true		1205094	0		=			
ANR	1206489	PtrMemberAccess	ppath -> bbox_set		1205094	0					
ANR	1206490	Identifier	ppath		1205094	0					
ANR	1206491	Identifier	bbox_set		1205094	1					
ANR	1206492	Identifier	true		1205094	1					
ANR	1206493	ExpressionStatement	ppath -> bbox = ppath_old -> bbox	292:12:12452:12481	1205094	1	True				
ANR	1206494	AssignmentExpression	ppath -> bbox = ppath_old -> bbox		1205094	0		=			
ANR	1206495	PtrMemberAccess	ppath -> bbox		1205094	0					
ANR	1206496	Identifier	ppath		1205094	0					
ANR	1206497	Identifier	bbox		1205094	1					
ANR	1206498	PtrMemberAccess	ppath_old -> bbox		1205094	1					
ANR	1206499	Identifier	ppath_old		1205094	0					
ANR	1206500	Identifier	bbox		1205094	1					
ANR	1206501	IfStatement	if ( gs_debug_c ( 'P' ) )		1205094	11					
ANR	1206502	Condition	gs_debug_c ( 'P' )	296:8:12520:12534	1205094	0	True				
ANR	1206503	CallExpression	gs_debug_c ( 'P' )		1205094	0					
ANR	1206504	Callee	gs_debug_c		1205094	0					
ANR	1206505	Identifier	gs_debug_c		1205094	0					
ANR	1206506	ArgumentList	'P'		1205094	1					
ANR	1206507	Argument	'P'		1205094	0					
ANR	1206508	PrimaryExpression	'P'		1205094	0					
ANR	1206509	ExpressionStatement	"gx_dump_path ( ppath , ""after reducing"" )"	297:8:12545:12582	1205094	1	True				
ANR	1206510	CallExpression	"gx_dump_path ( ppath , ""after reducing"" )"		1205094	0					
ANR	1206511	Callee	gx_dump_path		1205094	0					
ANR	1206512	Identifier	gx_dump_path		1205094	0					
ANR	1206513	ArgumentList	ppath		1205094	1					
ANR	1206514	Argument	ppath		1205094	0					
ANR	1206515	Identifier	ppath		1205094	0					
ANR	1206516	Argument	"""after reducing"""		1205094	1					
ANR	1206517	PrimaryExpression	"""after reducing"""		1205094	0					
ANR	1206518	ReturnStatement	return 0 ;	299:4:12595:12603	1205094	12	True				
ANR	1206519	PrimaryExpression	0		1205094	0					
ANR	1206520	ReturnType	int		1205094	1					
ANR	1206521	Identifier	gx_path_copy_reducing		1205094	2					
ANR	1206522	ParameterList	"const gx_path * ppath_old , gx_path * ppath , fixed fixed_flatness , const gs_gstate * pgs , gx_path_copy_options options"		1205094	3					
ANR	1206523	Parameter	const gx_path * ppath_old	86:22:2853:2876	1205094	0	True				
ANR	1206524	ParameterType	const gx_path *		1205094	0					
ANR	1206525	Identifier	ppath_old		1205094	1					
ANR	1206526	Parameter	gx_path * ppath	86:48:2879:2892	1205094	1	True				
ANR	1206527	ParameterType	gx_path *		1205094	0					
ANR	1206528	Identifier	ppath		1205094	1					
ANR	1206529	Parameter	fixed fixed_flatness	87:22:2917:2936	1205094	2	True				
ANR	1206530	ParameterType	fixed		1205094	0					
ANR	1206531	Identifier	fixed_flatness		1205094	1					
ANR	1206532	Parameter	const gs_gstate * pgs	87:44:2939:2958	1205094	3	True				
ANR	1206533	ParameterType	const gs_gstate *		1205094	0					
ANR	1206534	Identifier	pgs		1205094	1					
ANR	1206535	Parameter	gx_path_copy_options options	88:22:2983:3010	1205094	4	True				
ANR	1206536	ParameterType	gx_path_copy_options		1205094	0					
ANR	1206537	Identifier	options		1205094	1					
ANR	1206538	CFGEntryNode	ENTRY		1205094		True				
ANR	1206539	CFGExitNode	EXIT		1205094		True				
ANR	1206540	Symbol	* ppath -> current_subpath		1205094						
ANR	1206541	Symbol	ppath -> current_subpath -> last		1205094						
ANR	1206542	Symbol	fixed_mult_quo		1205094						
ANR	1206543	Symbol	pd -> pt		1205094						
ANR	1206544	Symbol	pc -> p1 . y		1205094						
ANR	1206545	Symbol	& cseg		1205094						
ANR	1206546	Symbol	* pgs		1205094						
ANR	1206547	Symbol	pc -> p1 . x		1205094						
ANR	1206548	Symbol	* start		1205094						
ANR	1206549	Symbol	pc -> pt . x		1205094						
ANR	1206550	Symbol	pc -> pt . y		1205094						
ANR	1206551	Symbol	gx_path_unshare		1205094						
ANR	1206552	Symbol	gx_path_add_dash_notes		1205094						
ANR	1206553	Symbol	break_line_if_long		1205094						
ANR	1206554	Symbol	ppath_old -> bbox_set		1205094						
ANR	1206555	Symbol	options		1205094						
ANR	1206556	Symbol	gx_path_add_curve_notes		1205094						
ANR	1206557	Symbol	end -> prev		1205094						
ANR	1206558	Symbol	flat_x		1205094						
ANR	1206559	Symbol	* start -> next		1205094						
ANR	1206560	Symbol	fixed_flatness		1205094						
ANR	1206561	Symbol	flat_y		1205094						
ANR	1206562	Symbol	min23		1205094						
ANR	1206563	Symbol	ppath -> bbox . p		1205094						
ANR	1206564	Symbol	ppath -> bbox . q		1205094						
ANR	1206565	Symbol	ppath_old -> bbox . q . x		1205094						
ANR	1206566	Symbol	pd -> pt . x		1205094						
ANR	1206567	Symbol	ppath_old -> bbox . q . y		1205094						
ANR	1206568	Symbol	ppath -> position . x		1205094						
ANR	1206569	Symbol	pd -> pt . y		1205094						
ANR	1206570	Symbol	gx_curve_monotonize		1205094						
ANR	1206571	Symbol	ppath -> position . y		1205094						
ANR	1206572	Symbol	c0		1205094						
ANR	1206573	Symbol	gx_path_add_point		1205094						
ANR	1206574	Symbol	c1		1205094						
ANR	1206575	Symbol	c2		1205094						
ANR	1206576	Symbol	ppath_old -> position		1205094						
ANR	1206577	Symbol	c3		1205094						
ANR	1206578	Symbol	gx_curve_log2_samples		1205094						
ANR	1206579	Symbol	* * ppath		1205094						
ANR	1206580	Symbol	* ppath_old		1205094						
ANR	1206581	Symbol	cseg		1205094						
ANR	1206582	Symbol	break_gap_if_long		1205094						
ANR	1206583	Symbol	max01		1205094						
ANR	1206584	Symbol	pseg -> pt		1205094						
ANR	1206585	Symbol	float2fixed		1205094						
ANR	1206586	Symbol	min		1205094						
ANR	1206587	Symbol	pseg -> type		1205094						
ANR	1206588	Symbol	flat		1205094						
ANR	1206589	Symbol	pgs		1205094						
ANR	1206590	Symbol	start -> next		1205094						
ANR	1206591	Symbol	ppath_old -> bbox . p		1205094						
ANR	1206592	Symbol	fabs		1205094						
ANR	1206593	Symbol	pgs -> line_params . half_width		1205094						
ANR	1206594	Symbol	max		1205094						
ANR	1206595	Symbol	ppath_old -> bbox . q		1205094						
ANR	1206596	Symbol	pco_monotonize		1205094						
ANR	1206597	Symbol	k		1205094						
ANR	1206598	Symbol	ppath -> bbox . p . x		1205094						
ANR	1206599	Symbol	ppath -> bbox . p . y		1205094						
ANR	1206600	Symbol	r		1205094						
ANR	1206601	Symbol	width		1205094						
ANR	1206602	Symbol	expansion . x		1205094						
ANR	1206603	Symbol	& end -> prev -> pt		1205094						
ANR	1206604	Symbol	end -> prev -> pt		1205094						
ANR	1206605	Symbol	expansion . y		1205094						
ANR	1206606	Symbol	pd -> tangent . y		1205094						
ANR	1206607	Symbol	pd -> tangent . x		1205094						
ANR	1206608	Symbol	gx_path_add_gap_notes		1205094						
ANR	1206609	Symbol	notes		1205094						
ANR	1206610	Symbol	ppath -> current_subpath		1205094						
ANR	1206611	Symbol	pd -> tangent		1205094						
ANR	1206612	Symbol	pgs -> line_params		1205094						
ANR	1206613	Symbol	max23		1205094						
ANR	1206614	Symbol	ppath -> bbox		1205094						
ANR	1206615	Symbol	pseg -> next		1205094						
ANR	1206616	Symbol	pgs -> ctm . xx		1205094						
ANR	1206617	Symbol	pc -> p2 . x		1205094						
ANR	1206618	Symbol	end -> prev -> pt . x		1205094						
ANR	1206619	Symbol	max_fixed		1205094						
ANR	1206620	Symbol	pc -> p2 . y		1205094						
ANR	1206621	Symbol	SET_EXTENT		1205094						
ANR	1206622	Symbol	end -> prev -> pt . y		1205094						
ANR	1206623	Symbol	ppath -> bbox_set		1205094						
ANR	1206624	Symbol	pgs -> ctm . xy		1205094						
ANR	1206625	Symbol	start -> next -> pt		1205094						
ANR	1206626	Symbol	gs_debug_c		1205094						
ANR	1206627	Symbol	pc -> p2		1205094						
ANR	1206628	Symbol	pc -> p1		1205094						
ANR	1206629	Symbol	* end -> prev		1205094						
ANR	1206630	Symbol	* ppath		1205094						
ANR	1206631	Symbol	pco_accurate		1205094						
ANR	1206632	Symbol	pco_for_stroke		1205094						
ANR	1206633	Symbol	ppath_old -> first_subpath		1205094						
ANR	1206634	Symbol	gx_subdivide_curve		1205094						
ANR	1206635	Symbol	gx_path_add_line_notes		1205094						
ANR	1206636	Symbol	pseg -> pt . x		1205094						
ANR	1206637	Symbol	pseg -> pt . y		1205094						
ANR	1206638	Symbol	pgs -> ctm		1205094						
ANR	1206639	Symbol	expansion		1205094						
ANR	1206640	Symbol	* * end		1205094						
ANR	1206641	Symbol	start -> next -> pt . y		1205094						
ANR	1206642	Symbol	start -> next -> pt . x		1205094						
ANR	1206643	Symbol	ppath_old -> bbox		1205094						
ANR	1206644	Symbol	ex		1205094						
ANR	1206645	Symbol	pgs -> ctm . yy		1205094						
ANR	1206646	Symbol	ey		1205094						
ANR	1206647	Symbol	pgs -> ctm . yx		1205094						
ANR	1206648	Symbol	* pseg		1205094						
ANR	1206649	Symbol	x0		1205094						
ANR	1206650	Symbol	true		1205094						
ANR	1206651	Symbol	* pd		1205094						
ANR	1206652	Symbol	* pc		1205094						
ANR	1206653	Symbol	* end		1205094						
ANR	1206654	Symbol	* * start		1205094						
ANR	1206655	Symbol	ppath_old -> bbox . p . x		1205094						
ANR	1206656	Symbol	ppath_old -> bbox . p . y		1205094						
ANR	1206657	Symbol	gs_error_unregistered		1205094						
ANR	1206658	Symbol	code		1205094						
ANR	1206659	Symbol	pseg -> notes		1205094						
ANR	1206660	Symbol	ppath		1205094						
ANR	1206661	Symbol	gx_path_close_subpath		1205094						
ANR	1206662	Symbol	pseg		1205094						
ANR	1206663	Symbol	y0		1205094						
ANR	1206664	Symbol	pc -> pt		1205094						
ANR	1206665	Symbol	ppath -> bbox . q . x		1205094						
ANR	1206666	Symbol	ppath -> bbox . q . y		1205094						
ANR	1206667	Symbol	end		1205094						
ANR	1206668	Symbol	min01		1205094						
ANR	1206669	Symbol	start		1205094						
ANR	1206670	Symbol	path_last_is_moveto		1205094						
ANR	1206671	Symbol	& pc -> p2		1205094						
ANR	1206672	Symbol	& pc -> p1		1205094						
ANR	1206673	Symbol	gs_note_error		1205094						
ANR	1206674	Symbol	pc		1205094						
ANR	1206675	Symbol	ppath_old		1205094						
ANR	1206676	Symbol	pd		1205094						
ANR	1206677	Symbol	sn_not_first		1205094						
ANR	1206678	Symbol	ppath_old -> position . x		1205094						
ANR	1206679	Symbol	ppath -> position		1205094						
ANR	1206680	Symbol	ppath_old -> position . y		1205094						
ANR	1206681	Symbol	& start -> pt		1205094						
ANR	1206682	Function	adjust_point_to_tangent	313:0:13168:14774							
ANR	1206683	FunctionDef	"adjust_point_to_tangent (segment * pseg , const segment * next , const gs_fixed_point * p1)"		1206682	0					
ANR	1206684	CompoundStatement		316:0:13293:14774	1206682	0					
ANR	1206685	IdentifierDeclStatement	"const fixed x0 = pseg -> pt . x , y0 = pseg -> pt . y ;"	317:4:13299:13343	1206682	0	True				
ANR	1206686	IdentifierDecl	x0 = pseg -> pt . x		1206682	0					
ANR	1206687	IdentifierDeclType	const fixed		1206682	0					
ANR	1206688	Identifier	x0		1206682	1					
ANR	1206689	AssignmentExpression	x0 = pseg -> pt . x		1206682	2		=			
ANR	1206690	Identifier	x0		1206682	0					
ANR	1206691	MemberAccess	pseg -> pt . x		1206682	1					
ANR	1206692	PtrMemberAccess	pseg -> pt		1206682	0					
ANR	1206693	Identifier	pseg		1206682	0					
ANR	1206694	Identifier	pt		1206682	1					
ANR	1206695	Identifier	x		1206682	1					
ANR	1206696	IdentifierDecl	y0 = pseg -> pt . y		1206682	1					
ANR	1206697	IdentifierDeclType	const fixed		1206682	0					
ANR	1206698	Identifier	y0		1206682	1					
ANR	1206699	AssignmentExpression	y0 = pseg -> pt . y		1206682	2		=			
ANR	1206700	Identifier	y0		1206682	0					
ANR	1206701	MemberAccess	pseg -> pt . y		1206682	1					
ANR	1206702	PtrMemberAccess	pseg -> pt		1206682	0					
ANR	1206703	Identifier	pseg		1206682	0					
ANR	1206704	Identifier	pt		1206682	1					
ANR	1206705	Identifier	y		1206682	1					
ANR	1206706	IdentifierDeclStatement	"const fixed fC = p1 -> x - x0 , fD = p1 -> y - y0 ;"	318:4:13349:13393	1206682	1	True				
ANR	1206707	IdentifierDecl	fC = p1 -> x - x0		1206682	0					
ANR	1206708	IdentifierDeclType	const fixed		1206682	0					
ANR	1206709	Identifier	fC		1206682	1					
ANR	1206710	AssignmentExpression	fC = p1 -> x - x0		1206682	2		=			
ANR	1206711	Identifier	fC		1206682	0					
ANR	1206712	AdditiveExpression	p1 -> x - x0		1206682	1		-			
ANR	1206713	PtrMemberAccess	p1 -> x		1206682	0					
ANR	1206714	Identifier	p1		1206682	0					
ANR	1206715	Identifier	x		1206682	1					
ANR	1206716	Identifier	x0		1206682	1					
ANR	1206717	IdentifierDecl	fD = p1 -> y - y0		1206682	1					
ANR	1206718	IdentifierDeclType	const fixed		1206682	0					
ANR	1206719	Identifier	fD		1206682	1					
ANR	1206720	AssignmentExpression	fD = p1 -> y - y0		1206682	2		=			
ANR	1206721	Identifier	fD		1206682	0					
ANR	1206722	AdditiveExpression	p1 -> y - y0		1206682	1		-			
ANR	1206723	PtrMemberAccess	p1 -> y		1206682	0					
ANR	1206724	Identifier	p1		1206682	0					
ANR	1206725	Identifier	y		1206682	1					
ANR	1206726	Identifier	y0		1206682	1					
ANR	1206727	IfStatement	if ( fC == 0 )		1206682	2					
ANR	1206728	Condition	fC == 0	325:8:13618:13624	1206682	0	True				
ANR	1206729	EqualityExpression	fC == 0		1206682	0		==			
ANR	1206730	Identifier	fC		1206682	0					
ANR	1206731	PrimaryExpression	0		1206682	1					
ANR	1206732	CompoundStatement		12:8:375:424	1206682	1					
ANR	1206733	IdentifierDeclStatement	"const fixed DT = arith_rshift ( next -> pt . y - y0 , 2 ) ;"	327:8:13669:13718	1206682	0	True				
ANR	1206734	IdentifierDecl	"DT = arith_rshift ( next -> pt . y - y0 , 2 )"		1206682	0					
ANR	1206735	IdentifierDeclType	const fixed		1206682	0					
ANR	1206736	Identifier	DT		1206682	1					
ANR	1206737	AssignmentExpression	"DT = arith_rshift ( next -> pt . y - y0 , 2 )"		1206682	2		=			
ANR	1206738	Identifier	DT		1206682	0					
ANR	1206739	CallExpression	"arith_rshift ( next -> pt . y - y0 , 2 )"		1206682	1					
ANR	1206740	Callee	arith_rshift		1206682	0					
ANR	1206741	Identifier	arith_rshift		1206682	0					
ANR	1206742	ArgumentList	next -> pt . y - y0		1206682	1					
ANR	1206743	Argument	next -> pt . y - y0		1206682	0					
ANR	1206744	AdditiveExpression	next -> pt . y - y0		1206682	0		-			
ANR	1206745	MemberAccess	next -> pt . y		1206682	0					
ANR	1206746	PtrMemberAccess	next -> pt		1206682	0					
ANR	1206747	Identifier	next		1206682	0					
ANR	1206748	Identifier	pt		1206682	1					
ANR	1206749	Identifier	y		1206682	1					
ANR	1206750	Identifier	y0		1206682	1					
ANR	1206751	Argument	2		1206682	1					
ANR	1206752	PrimaryExpression	2		1206682	0					
ANR	1206753	IfStatement	if ( fD == 0 )		1206682	1					
ANR	1206754	Condition	fD == 0	329:12:13733:13739	1206682	0	True				
ANR	1206755	EqualityExpression	fD == 0		1206682	0		==			
ANR	1206756	Identifier	fD		1206682	0					
ANR	1206757	PrimaryExpression	0		1206682	1					
ANR	1206758	ReturnStatement	return ;	330:12:13754:13760	1206682	1	True				
ANR	1206759	ExpressionStatement	"if_debug1 ( '2' , ""[2]adjusting vertical: DT = %g\\n"" , fixed2float ( DT ) )"	331:8:13792:13877	1206682	2	True				
ANR	1206760	CallExpression	"if_debug1 ( '2' , ""[2]adjusting vertical: DT = %g\\n"" , fixed2float ( DT ) )"		1206682	0					
ANR	1206761	Callee	if_debug1		1206682	0					
ANR	1206762	Identifier	if_debug1		1206682	0					
ANR	1206763	ArgumentList	'2'		1206682	1					
ANR	1206764	Argument	'2'		1206682	0					
ANR	1206765	PrimaryExpression	'2'		1206682	0					
ANR	1206766	Argument	"""[2]adjusting vertical: DT = %g\\n"""		1206682	1					
ANR	1206767	PrimaryExpression	"""[2]adjusting vertical: DT = %g\\n"""		1206682	0					
ANR	1206768	Argument	fixed2float ( DT )		1206682	2					
ANR	1206769	CallExpression	fixed2float ( DT )		1206682	0					
ANR	1206770	Callee	fixed2float		1206682	0					
ANR	1206771	Identifier	fixed2float		1206682	0					
ANR	1206772	ArgumentList	DT		1206682	1					
ANR	1206773	Argument	DT		1206682	0					
ANR	1206774	Identifier	DT		1206682	0					
ANR	1206775	IfStatement	if ( ( DT ^ fD ) > 0 )		1206682	3					
ANR	1206776	Condition	( DT ^ fD ) > 0	333:12:13891:13903	1206682	0	True				
ANR	1206777	RelationalExpression	( DT ^ fD ) > 0		1206682	0		>			
ANR	1206778	ExclusiveOrExpression	DT ^ fD		1206682	0		^			
ANR	1206779	Identifier	DT		1206682	0					
ANR	1206780	Identifier	fD		1206682	1					
ANR	1206781	PrimaryExpression	0		1206682	1					
ANR	1206782	ExpressionStatement	pseg -> pt . y = DT + y0	334:12:13918:13938	1206682	1	True				
ANR	1206783	AssignmentExpression	pseg -> pt . y = DT + y0		1206682	0		=			
ANR	1206784	MemberAccess	pseg -> pt . y		1206682	0					
ANR	1206785	PtrMemberAccess	pseg -> pt		1206682	0					
ANR	1206786	Identifier	pseg		1206682	0					
ANR	1206787	Identifier	pt		1206682	1					
ANR	1206788	Identifier	y		1206682	1					
ANR	1206789	AdditiveExpression	DT + y0		1206682	1		+			
ANR	1206790	Identifier	DT		1206682	0					
ANR	1206791	Identifier	y0		1206682	1					
ANR	1206792	ElseStatement	else		1206682	0					
ANR	1206793	IfStatement	if ( fD == 0 )		1206682	0					
ANR	1206794	Condition	fD == 0	335:15:13955:13961	1206682	0	True				
ANR	1206795	EqualityExpression	fD == 0		1206682	0		==			
ANR	1206796	Identifier	fD		1206682	0					
ANR	1206797	PrimaryExpression	0		1206682	1					
ANR	1206798	CompoundStatement		22:8:714:763	1206682	1					
ANR	1206799	IdentifierDeclStatement	"const fixed CT = arith_rshift ( next -> pt . x - x0 , 2 ) ;"	337:8:14008:14057	1206682	0	True				
ANR	1206800	IdentifierDecl	"CT = arith_rshift ( next -> pt . x - x0 , 2 )"		1206682	0					
ANR	1206801	IdentifierDeclType	const fixed		1206682	0					
ANR	1206802	Identifier	CT		1206682	1					
ANR	1206803	AssignmentExpression	"CT = arith_rshift ( next -> pt . x - x0 , 2 )"		1206682	2		=			
ANR	1206804	Identifier	CT		1206682	0					
ANR	1206805	CallExpression	"arith_rshift ( next -> pt . x - x0 , 2 )"		1206682	1					
ANR	1206806	Callee	arith_rshift		1206682	0					
ANR	1206807	Identifier	arith_rshift		1206682	0					
ANR	1206808	ArgumentList	next -> pt . x - x0		1206682	1					
ANR	1206809	Argument	next -> pt . x - x0		1206682	0					
ANR	1206810	AdditiveExpression	next -> pt . x - x0		1206682	0		-			
ANR	1206811	MemberAccess	next -> pt . x		1206682	0					
ANR	1206812	PtrMemberAccess	next -> pt		1206682	0					
ANR	1206813	Identifier	next		1206682	0					
ANR	1206814	Identifier	pt		1206682	1					
ANR	1206815	Identifier	x		1206682	1					
ANR	1206816	Identifier	x0		1206682	1					
ANR	1206817	Argument	2		1206682	1					
ANR	1206818	PrimaryExpression	2		1206682	0					
ANR	1206819	ExpressionStatement	"if_debug1 ( '2' , ""[2]adjusting horizontal: CT = %g\\n"" , fixed2float ( CT ) )"	339:8:14068:14155	1206682	1	True				
ANR	1206820	CallExpression	"if_debug1 ( '2' , ""[2]adjusting horizontal: CT = %g\\n"" , fixed2float ( CT ) )"		1206682	0					
ANR	1206821	Callee	if_debug1		1206682	0					
ANR	1206822	Identifier	if_debug1		1206682	0					
ANR	1206823	ArgumentList	'2'		1206682	1					
ANR	1206824	Argument	'2'		1206682	0					
ANR	1206825	PrimaryExpression	'2'		1206682	0					
ANR	1206826	Argument	"""[2]adjusting horizontal: CT = %g\\n"""		1206682	1					
ANR	1206827	PrimaryExpression	"""[2]adjusting horizontal: CT = %g\\n"""		1206682	0					
ANR	1206828	Argument	fixed2float ( CT )		1206682	2					
ANR	1206829	CallExpression	fixed2float ( CT )		1206682	0					
ANR	1206830	Callee	fixed2float		1206682	0					
ANR	1206831	Identifier	fixed2float		1206682	0					
ANR	1206832	ArgumentList	CT		1206682	1					
ANR	1206833	Argument	CT		1206682	0					
ANR	1206834	Identifier	CT		1206682	0					
ANR	1206835	IfStatement	if ( ( CT ^ fC ) > 0 )		1206682	2					
ANR	1206836	Condition	( CT ^ fC ) > 0	341:12:14169:14181	1206682	0	True				
ANR	1206837	RelationalExpression	( CT ^ fC ) > 0		1206682	0		>			
ANR	1206838	ExclusiveOrExpression	CT ^ fC		1206682	0		^			
ANR	1206839	Identifier	CT		1206682	0					
ANR	1206840	Identifier	fC		1206682	1					
ANR	1206841	PrimaryExpression	0		1206682	1					
ANR	1206842	ExpressionStatement	pseg -> pt . x = CT + x0	342:12:14196:14216	1206682	1	True				
ANR	1206843	AssignmentExpression	pseg -> pt . x = CT + x0		1206682	0		=			
ANR	1206844	MemberAccess	pseg -> pt . x		1206682	0					
ANR	1206845	PtrMemberAccess	pseg -> pt		1206682	0					
ANR	1206846	Identifier	pseg		1206682	0					
ANR	1206847	Identifier	pt		1206682	1					
ANR	1206848	Identifier	x		1206682	1					
ANR	1206849	AdditiveExpression	CT + x0		1206682	1		+			
ANR	1206850	Identifier	CT		1206682	0					
ANR	1206851	Identifier	x0		1206682	1					
ANR	1206852	ElseStatement	else		1206682	0					
ANR	1206853	CompoundStatement		31:8:1010:1094	1206682	0					
ANR	1206854	IdentifierDeclStatement	"const double C = fC , D = fD ;"	345:8:14267:14294	1206682	0	True				
ANR	1206855	IdentifierDecl	C = fC		1206682	0					
ANR	1206856	IdentifierDeclType	const double		1206682	0					
ANR	1206857	Identifier	C		1206682	1					
ANR	1206858	AssignmentExpression	C = fC		1206682	2		=			
ANR	1206859	Identifier	fC		1206682	0					
ANR	1206860	Identifier	fC		1206682	1					
ANR	1206861	IdentifierDecl	D = fD		1206682	1					
ANR	1206862	IdentifierDeclType	const double		1206682	0					
ANR	1206863	Identifier	D		1206682	1					
ANR	1206864	AssignmentExpression	D = fD		1206682	2		=			
ANR	1206865	Identifier	fD		1206682	0					
ANR	1206866	Identifier	fD		1206682	1					
ANR	1206867	IdentifierDeclStatement	double T = ( C * ( next -> pt . x - x0 ) + D * ( next -> pt . y - y0 ) ) / ( C * C + D * D ) ;	346:8:14304:14388	1206682	1	True				
ANR	1206868	IdentifierDecl	T = ( C * ( next -> pt . x - x0 ) + D * ( next -> pt . y - y0 ) ) / ( C * C + D * D )		1206682	0					
ANR	1206869	IdentifierDeclType	double		1206682	0					
ANR	1206870	Identifier	T		1206682	1					
ANR	1206871	AssignmentExpression	T = ( C * ( next -> pt . x - x0 ) + D * ( next -> pt . y - y0 ) ) / ( C * C + D * D )		1206682	2		=			
ANR	1206872	Identifier	T		1206682	0					
ANR	1206873	MultiplicativeExpression	( C * ( next -> pt . x - x0 ) + D * ( next -> pt . y - y0 ) ) / ( C * C + D * D )		1206682	1		/			
ANR	1206874	AdditiveExpression	C * ( next -> pt . x - x0 ) + D * ( next -> pt . y - y0 )		1206682	0		+			
ANR	1206875	MultiplicativeExpression	C * ( next -> pt . x - x0 )		1206682	0		*			
ANR	1206876	Identifier	C		1206682	0					
ANR	1206877	AdditiveExpression	next -> pt . x - x0		1206682	1		-			
ANR	1206878	MemberAccess	next -> pt . x		1206682	0					
ANR	1206879	PtrMemberAccess	next -> pt		1206682	0					
ANR	1206880	Identifier	next		1206682	0					
ANR	1206881	Identifier	pt		1206682	1					
ANR	1206882	Identifier	x		1206682	1					
ANR	1206883	Identifier	x0		1206682	1					
ANR	1206884	MultiplicativeExpression	D * ( next -> pt . y - y0 )		1206682	1		*			
ANR	1206885	Identifier	D		1206682	0					
ANR	1206886	AdditiveExpression	next -> pt . y - y0		1206682	1		-			
ANR	1206887	MemberAccess	next -> pt . y		1206682	0					
ANR	1206888	PtrMemberAccess	next -> pt		1206682	0					
ANR	1206889	Identifier	next		1206682	0					
ANR	1206890	Identifier	pt		1206682	1					
ANR	1206891	Identifier	y		1206682	1					
ANR	1206892	Identifier	y0		1206682	1					
ANR	1206893	AdditiveExpression	C * C + D * D		1206682	1		+			
ANR	1206894	MultiplicativeExpression	C * C		1206682	0		*			
ANR	1206895	Identifier	C		1206682	0					
ANR	1206896	Identifier	C		1206682	1					
ANR	1206897	MultiplicativeExpression	D * D		1206682	1		*			
ANR	1206898	Identifier	D		1206682	0					
ANR	1206899	Identifier	D		1206682	1					
ANR	1206900	ExpressionStatement	"if_debug3 ( '2' , ""[2]adjusting: C = %g, D = %g, T = %g\\n"" , C , D , T )"	349:8:14399:14482	1206682	2	True				
ANR	1206901	CallExpression	"if_debug3 ( '2' , ""[2]adjusting: C = %g, D = %g, T = %g\\n"" , C , D , T )"		1206682	0					
ANR	1206902	Callee	if_debug3		1206682	0					
ANR	1206903	Identifier	if_debug3		1206682	0					
ANR	1206904	ArgumentList	'2'		1206682	1					
ANR	1206905	Argument	'2'		1206682	0					
ANR	1206906	PrimaryExpression	'2'		1206682	0					
ANR	1206907	Argument	"""[2]adjusting: C = %g, D = %g, T = %g\\n"""		1206682	1					
ANR	1206908	PrimaryExpression	"""[2]adjusting: C = %g, D = %g, T = %g\\n"""		1206682	0					
ANR	1206909	Argument	C		1206682	2					
ANR	1206910	Identifier	C		1206682	0					
ANR	1206911	Argument	D		1206682	3					
ANR	1206912	Identifier	D		1206682	0					
ANR	1206913	Argument	T		1206682	4					
ANR	1206914	Identifier	T		1206682	0					
ANR	1206915	IfStatement	if ( T > 0 )		1206682	3					
ANR	1206916	Condition	T > 0	351:12:14496:14500	1206682	0	True				
ANR	1206917	RelationalExpression	T > 0		1206682	0		>			
ANR	1206918	Identifier	T		1206682	0					
ANR	1206919	PrimaryExpression	0		1206682	1					
ANR	1206920	CompoundStatement		36:19:1209:1209	1206682	1					
ANR	1206921	IfStatement	if ( T > 1 )		1206682	0					
ANR	1206922	Condition	T > 1	352:16:14521:14525	1206682	0	True				
ANR	1206923	RelationalExpression	T > 1		1206682	0		>			
ANR	1206924	Identifier	T		1206682	0					
ANR	1206925	PrimaryExpression	1		1206682	1					
ANR	1206926	CompoundStatement		37:23:1234:1234	1206682	1					
ANR	1206927	ExpressionStatement	T = 1	354:16:14609:14614	1206682	0	True				
ANR	1206928	AssignmentExpression	T = 1		1206682	0		=			
ANR	1206929	Identifier	T		1206682	0					
ANR	1206930	PrimaryExpression	1		1206682	1					
ANR	1206931	ExpressionStatement	"pseg -> pt . x = arith_rshift ( ( fixed ) ( C * T ) , 2 ) + x0"	356:12:14642:14692	1206682	1	True				
ANR	1206932	AssignmentExpression	"pseg -> pt . x = arith_rshift ( ( fixed ) ( C * T ) , 2 ) + x0"		1206682	0		=			
ANR	1206933	MemberAccess	pseg -> pt . x		1206682	0					
ANR	1206934	PtrMemberAccess	pseg -> pt		1206682	0					
ANR	1206935	Identifier	pseg		1206682	0					
ANR	1206936	Identifier	pt		1206682	1					
ANR	1206937	Identifier	x		1206682	1					
ANR	1206938	AdditiveExpression	"arith_rshift ( ( fixed ) ( C * T ) , 2 ) + x0"		1206682	1		+			
ANR	1206939	CallExpression	"arith_rshift ( ( fixed ) ( C * T ) , 2 )"		1206682	0					
ANR	1206940	Callee	arith_rshift		1206682	0					
ANR	1206941	Identifier	arith_rshift		1206682	0					
ANR	1206942	ArgumentList	( fixed ) ( C * T )		1206682	1					
ANR	1206943	Argument	( fixed ) ( C * T )		1206682	0					
ANR	1206944	CastExpression	( fixed ) ( C * T )		1206682	0					
ANR	1206945	CastTarget	fixed		1206682	0					
ANR	1206946	MultiplicativeExpression	C * T		1206682	1		*			
ANR	1206947	Identifier	C		1206682	0					
ANR	1206948	Identifier	T		1206682	1					
ANR	1206949	Argument	2		1206682	1					
ANR	1206950	PrimaryExpression	2		1206682	0					
ANR	1206951	Identifier	x0		1206682	1					
ANR	1206952	ExpressionStatement	"pseg -> pt . y = arith_rshift ( ( fixed ) ( D * T ) , 2 ) + y0"	357:12:14706:14756	1206682	2	True				
ANR	1206953	AssignmentExpression	"pseg -> pt . y = arith_rshift ( ( fixed ) ( D * T ) , 2 ) + y0"		1206682	0		=			
ANR	1206954	MemberAccess	pseg -> pt . y		1206682	0					
ANR	1206955	PtrMemberAccess	pseg -> pt		1206682	0					
ANR	1206956	Identifier	pseg		1206682	0					
ANR	1206957	Identifier	pt		1206682	1					
ANR	1206958	Identifier	y		1206682	1					
ANR	1206959	AdditiveExpression	"arith_rshift ( ( fixed ) ( D * T ) , 2 ) + y0"		1206682	1		+			
ANR	1206960	CallExpression	"arith_rshift ( ( fixed ) ( D * T ) , 2 )"		1206682	0					
ANR	1206961	Callee	arith_rshift		1206682	0					
ANR	1206962	Identifier	arith_rshift		1206682	0					
ANR	1206963	ArgumentList	( fixed ) ( D * T )		1206682	1					
ANR	1206964	Argument	( fixed ) ( D * T )		1206682	0					
ANR	1206965	CastExpression	( fixed ) ( D * T )		1206682	0					
ANR	1206966	CastTarget	fixed		1206682	0					
ANR	1206967	MultiplicativeExpression	D * T		1206682	1		*			
ANR	1206968	Identifier	D		1206682	0					
ANR	1206969	Identifier	T		1206682	1					
ANR	1206970	Argument	2		1206682	1					
ANR	1206971	PrimaryExpression	2		1206682	0					
ANR	1206972	Identifier	y0		1206682	1					
ANR	1206973	ReturnType	static void		1206682	1					
ANR	1206974	Identifier	adjust_point_to_tangent		1206682	2					
ANR	1206975	ParameterList	"segment * pseg , const segment * next , const gs_fixed_point * p1"		1206682	3					
ANR	1206976	Parameter	segment * pseg	314:24:13204:13217	1206682	0	True				
ANR	1206977	ParameterType	segment *		1206682	0					
ANR	1206978	Identifier	pseg		1206682	1					
ANR	1206979	Parameter	const segment * next	314:40:13220:13239	1206682	1	True				
ANR	1206980	ParameterType	const segment *		1206682	0					
ANR	1206981	Identifier	next		1206682	1					
ANR	1206982	Parameter	const gs_fixed_point * p1	315:24:13266:13290	1206682	2	True				
ANR	1206983	ParameterType	const gs_fixed_point *		1206682	0					
ANR	1206984	Identifier	p1		1206682	1					
ANR	1206985	CFGEntryNode	ENTRY		1206682		True				
ANR	1206986	CFGExitNode	EXIT		1206682		True				
ANR	1206987	Symbol	next		1206682						
ANR	1206988	Symbol	p1		1206682						
ANR	1206989	Symbol	C		1206682						
ANR	1206990	Symbol	D		1206682						
ANR	1206991	Symbol	next -> pt		1206682						
ANR	1206992	Symbol	* next		1206682						
ANR	1206993	Symbol	DT		1206682						
ANR	1206994	Symbol	pseg		1206682						
ANR	1206995	Symbol	pseg -> pt		1206682						
ANR	1206996	Symbol	T		1206682						
ANR	1206997	Symbol	y0		1206682						
ANR	1206998	Symbol	fC		1206682						
ANR	1206999	Symbol	fD		1206682						
ANR	1207000	Symbol	arith_rshift		1206682						
ANR	1207001	Symbol	* p1		1206682						
ANR	1207002	Symbol	fixed2float		1206682						
ANR	1207003	Symbol	p1 -> y		1206682						
ANR	1207004	Symbol	p1 -> x		1206682						
ANR	1207005	Symbol	pseg -> pt . x		1206682						
ANR	1207006	Symbol	pseg -> pt . y		1206682						
ANR	1207007	Symbol	CT		1206682						
ANR	1207008	Symbol	next -> pt . y		1206682						
ANR	1207009	Symbol	next -> pt . x		1206682						
ANR	1207010	Symbol	* pseg		1206682						
ANR	1207011	Symbol	x0		1206682						
ANR	1207012	Function	gx_path__check_curves	365:0:14894:17231							
ANR	1207013	FunctionDef	"gx_path__check_curves (const gx_path * ppath , gx_path_copy_options options , fixed fixed_flat)"		1207012	0					
ANR	1207014	CompoundStatement		367:0:14992:17231	1207012	0					
ANR	1207015	IdentifierDeclStatement	const segment * pseg = ( const segment * ) ( ppath -> first_subpath ) ;	368:4:14998:15059	1207012	0	True				
ANR	1207016	IdentifierDecl	* pseg = ( const segment * ) ( ppath -> first_subpath )		1207012	0					
ANR	1207017	IdentifierDeclType	const segment *		1207012	0					
ANR	1207018	Identifier	pseg		1207012	1					
ANR	1207019	AssignmentExpression	* pseg = ( const segment * ) ( ppath -> first_subpath )		1207012	2		=			
ANR	1207020	Identifier	pseg		1207012	0					
ANR	1207021	CastExpression	( const segment * ) ( ppath -> first_subpath )		1207012	1					
ANR	1207022	CastTarget	const segment *		1207012	0					
ANR	1207023	PtrMemberAccess	ppath -> first_subpath		1207012	1					
ANR	1207024	Identifier	ppath		1207012	0					
ANR	1207025	Identifier	first_subpath		1207012	1					
ANR	1207026	IdentifierDeclStatement	gs_fixed_point pt0 ;	369:4:15065:15083	1207012	1	True				
ANR	1207027	IdentifierDecl	pt0		1207012	0					
ANR	1207028	IdentifierDeclType	gs_fixed_point		1207012	0					
ANR	1207029	Identifier	pt0		1207012	1					
ANR	1207030	ExpressionStatement	pt0 . x = pt0 . y = 0	371:4:15090:15107	1207012	2	True				
ANR	1207031	AssignmentExpression	pt0 . x = pt0 . y = 0		1207012	0		=			
ANR	1207032	MemberAccess	pt0 . x		1207012	0					
ANR	1207033	Identifier	pt0		1207012	0					
ANR	1207034	Identifier	x		1207012	1					
ANR	1207035	AssignmentExpression	pt0 . y = 0		1207012	1		=			
ANR	1207036	MemberAccess	pt0 . y		1207012	0					
ANR	1207037	Identifier	pt0		1207012	0					
ANR	1207038	Identifier	y		1207012	1					
ANR	1207039	PrimaryExpression	0		1207012	1					
ANR	1207040	WhileStatement	while ( pseg )		1207012	3					
ANR	1207041	Condition	pseg	372:11:15145:15148	1207012	0	True				
ANR	1207042	Identifier	pseg		1207012	0					
ANR	1207043	CompoundStatement		6:17:158:158	1207012	1					
ANR	1207044	SwitchStatement	switch ( pseg -> type )		1207012	0					
ANR	1207045	Condition	pseg -> type	373:16:15169:15178	1207012	0	True				
ANR	1207046	PtrMemberAccess	pseg -> type		1207012	0					
ANR	1207047	Identifier	pseg		1207012	0					
ANR	1207048	Identifier	type		1207012	1					
ANR	1207049	CompoundStatement		7:28:188:188	1207012	1					
ANR	1207050	Label	case s_start :	374:12:15195:15207	1207012	0	True				
ANR	1207051	Identifier	s_start		1207012	0					
ANR	1207052	CompoundStatement		10:20:254:297	1207012	1					
ANR	1207053	IdentifierDeclStatement	const subpath * psub = ( const subpath * ) pseg ;	376:20:15247:15290	1207012	0	True				
ANR	1207054	IdentifierDecl	* psub = ( const subpath * ) pseg		1207012	0					
ANR	1207055	IdentifierDeclType	const subpath *		1207012	0					
ANR	1207056	Identifier	psub		1207012	1					
ANR	1207057	AssignmentExpression	* psub = ( const subpath * ) pseg		1207012	2		=			
ANR	1207058	Identifier	psub		1207012	0					
ANR	1207059	CastExpression	( const subpath * ) pseg		1207012	1					
ANR	1207060	CastTarget	const subpath *		1207012	0					
ANR	1207061	Identifier	pseg		1207012	1					
ANR	1207062	IfStatement	if ( ! psub -> curve_count )		1207012	1					
ANR	1207063	Condition	! psub -> curve_count	379:24:15373:15390	1207012	0	True				
ANR	1207064	UnaryOperationExpression	! psub -> curve_count		1207012	0					
ANR	1207065	UnaryOperator	!		1207012	0					
ANR	1207066	PtrMemberAccess	psub -> curve_count		1207012	1					
ANR	1207067	Identifier	psub		1207012	0					
ANR	1207068	Identifier	curve_count		1207012	1					
ANR	1207069	ExpressionStatement	pseg = psub -> last	380:24:15417:15434	1207012	1	True				
ANR	1207070	AssignmentExpression	pseg = psub -> last		1207012	0		=			
ANR	1207071	Identifier	pseg		1207012	0					
ANR	1207072	PtrMemberAccess	psub -> last		1207012	1					
ANR	1207073	Identifier	psub		1207012	0					
ANR	1207074	Identifier	last		1207012	1					
ANR	1207075	BreakStatement	break ;	382:16:15470:15475	1207012	2	True				
ANR	1207076	Label	case s_line :	383:12:15489:15500	1207012	3	True				
ANR	1207077	Identifier	s_line		1207012	0					
ANR	1207078	Label	case s_gap :	384:12:15514:15524	1207012	4	True				
ANR	1207079	Identifier	s_gap		1207012	0					
ANR	1207080	IfStatement	"if ( gx_check_fixed_diff_overflow ( pseg -> pt . x , pt0 . x ) || gx_check_fixed_diff_overflow ( pseg -> pt . y , pt0 . y ) )"		1207012	5					
ANR	1207081	Condition	"gx_check_fixed_diff_overflow ( pseg -> pt . x , pt0 . x ) || gx_check_fixed_diff_overflow ( pseg -> pt . y , pt0 . y )"	385:20:15546:15663	1207012	0	True				
ANR	1207082	OrExpression	"gx_check_fixed_diff_overflow ( pseg -> pt . x , pt0 . x ) || gx_check_fixed_diff_overflow ( pseg -> pt . y , pt0 . y )"		1207012	0		||			
ANR	1207083	CallExpression	"gx_check_fixed_diff_overflow ( pseg -> pt . x , pt0 . x )"		1207012	0					
ANR	1207084	Callee	gx_check_fixed_diff_overflow		1207012	0					
ANR	1207085	Identifier	gx_check_fixed_diff_overflow		1207012	0					
ANR	1207086	ArgumentList	pseg -> pt . x		1207012	1					
ANR	1207087	Argument	pseg -> pt . x		1207012	0					
ANR	1207088	MemberAccess	pseg -> pt . x		1207012	0					
ANR	1207089	PtrMemberAccess	pseg -> pt		1207012	0					
ANR	1207090	Identifier	pseg		1207012	0					
ANR	1207091	Identifier	pt		1207012	1					
ANR	1207092	Identifier	x		1207012	1					
ANR	1207093	Argument	pt0 . x		1207012	1					
ANR	1207094	MemberAccess	pt0 . x		1207012	0					
ANR	1207095	Identifier	pt0		1207012	0					
ANR	1207096	Identifier	x		1207012	1					
ANR	1207097	CallExpression	"gx_check_fixed_diff_overflow ( pseg -> pt . y , pt0 . y )"		1207012	1					
ANR	1207098	Callee	gx_check_fixed_diff_overflow		1207012	0					
ANR	1207099	Identifier	gx_check_fixed_diff_overflow		1207012	0					
ANR	1207100	ArgumentList	pseg -> pt . y		1207012	1					
ANR	1207101	Argument	pseg -> pt . y		1207012	0					
ANR	1207102	MemberAccess	pseg -> pt . y		1207012	0					
ANR	1207103	PtrMemberAccess	pseg -> pt		1207012	0					
ANR	1207104	Identifier	pseg		1207012	0					
ANR	1207105	Identifier	pt		1207012	1					
ANR	1207106	Identifier	y		1207012	1					
ANR	1207107	Argument	pt0 . y		1207012	1					
ANR	1207108	MemberAccess	pt0 . y		1207012	0					
ANR	1207109	Identifier	pt0		1207012	0					
ANR	1207110	Identifier	y		1207012	1					
ANR	1207111	ReturnStatement	return false ;	387:20:15686:15698	1207012	1	True				
ANR	1207112	Identifier	false		1207012	0					
ANR	1207113	BreakStatement	break ;	388:16:15716:15721	1207012	6	True				
ANR	1207114	Label	case s_curve :	389:12:15735:15747	1207012	7	True				
ANR	1207115	Identifier	s_curve		1207012	0					
ANR	1207116	CompoundStatement		25:20:794:847	1207012	8					
ANR	1207117	IdentifierDeclStatement	const curve_segment * pc = ( const curve_segment * ) pseg ;	391:20:15787:15840	1207012	0	True				
ANR	1207118	IdentifierDecl	* pc = ( const curve_segment * ) pseg		1207012	0					
ANR	1207119	IdentifierDeclType	const curve_segment *		1207012	0					
ANR	1207120	Identifier	pc		1207012	1					
ANR	1207121	AssignmentExpression	* pc = ( const curve_segment * ) pseg		1207012	2		=			
ANR	1207122	Identifier	pc		1207012	0					
ANR	1207123	CastExpression	( const curve_segment * ) pseg		1207012	1					
ANR	1207124	CastTarget	const curve_segment *		1207012	0					
ANR	1207125	Identifier	pseg		1207012	1					
ANR	1207126	IfStatement	if ( options & pco_monotonize )		1207012	1					
ANR	1207127	Condition	options & pco_monotonize	393:24:15867:15890	1207012	0	True				
ANR	1207128	BitAndExpression	options & pco_monotonize		1207012	0		&			
ANR	1207129	Identifier	options		1207012	0					
ANR	1207130	Identifier	pco_monotonize		1207012	1					
ANR	1207131	CompoundStatement		29:24:963:1084	1207012	1					
ANR	1207132	IdentifierDeclStatement	double t [ 2 ] ;	394:24:15919:15930	1207012	0	True				
ANR	1207133	IdentifierDecl	t [ 2 ]		1207012	0					
ANR	1207134	IdentifierDeclType	double [ 2 ]		1207012	0					
ANR	1207135	Identifier	t		1207012	1					
ANR	1207136	PrimaryExpression	2		1207012	2					
ANR	1207137	IdentifierDeclStatement	"int nz = gx_curve_monotonic_points ( pt0 . y , pc -> p1 . y , pc -> p2 . y , pc -> pt . y , t ) ;"	395:24:15956:16077	1207012	1	True				
ANR	1207138	IdentifierDecl	"nz = gx_curve_monotonic_points ( pt0 . y , pc -> p1 . y , pc -> p2 . y , pc -> pt . y , t )"		1207012	0					
ANR	1207139	IdentifierDeclType	int		1207012	0					
ANR	1207140	Identifier	nz		1207012	1					
ANR	1207141	AssignmentExpression	"nz = gx_curve_monotonic_points ( pt0 . y , pc -> p1 . y , pc -> p2 . y , pc -> pt . y , t )"		1207012	2		=			
ANR	1207142	Identifier	nz		1207012	0					
ANR	1207143	CallExpression	"gx_curve_monotonic_points ( pt0 . y , pc -> p1 . y , pc -> p2 . y , pc -> pt . y , t )"		1207012	1					
ANR	1207144	Callee	gx_curve_monotonic_points		1207012	0					
ANR	1207145	Identifier	gx_curve_monotonic_points		1207012	0					
ANR	1207146	ArgumentList	pt0 . y		1207012	1					
ANR	1207147	Argument	pt0 . y		1207012	0					
ANR	1207148	MemberAccess	pt0 . y		1207012	0					
ANR	1207149	Identifier	pt0		1207012	0					
ANR	1207150	Identifier	y		1207012	1					
ANR	1207151	Argument	pc -> p1 . y		1207012	1					
ANR	1207152	MemberAccess	pc -> p1 . y		1207012	0					
ANR	1207153	PtrMemberAccess	pc -> p1		1207012	0					
ANR	1207154	Identifier	pc		1207012	0					
ANR	1207155	Identifier	p1		1207012	1					
ANR	1207156	Identifier	y		1207012	1					
ANR	1207157	Argument	pc -> p2 . y		1207012	2					
ANR	1207158	MemberAccess	pc -> p2 . y		1207012	0					
ANR	1207159	PtrMemberAccess	pc -> p2		1207012	0					
ANR	1207160	Identifier	pc		1207012	0					
ANR	1207161	Identifier	p2		1207012	1					
ANR	1207162	Identifier	y		1207012	1					
ANR	1207163	Argument	pc -> pt . y		1207012	3					
ANR	1207164	MemberAccess	pc -> pt . y		1207012	0					
ANR	1207165	PtrMemberAccess	pc -> pt		1207012	0					
ANR	1207166	Identifier	pc		1207012	0					
ANR	1207167	Identifier	pt		1207012	1					
ANR	1207168	Identifier	y		1207012	1					
ANR	1207169	Argument	t		1207012	4					
ANR	1207170	Identifier	t		1207012	0					
ANR	1207171	IfStatement	if ( nz != 0 )		1207012	2					
ANR	1207172	Condition	nz != 0	398:28:16108:16114	1207012	0	True				
ANR	1207173	EqualityExpression	nz != 0		1207012	0		!=			
ANR	1207174	Identifier	nz		1207012	0					
ANR	1207175	PrimaryExpression	0		1207012	1					
ANR	1207176	ReturnStatement	return false ;	399:28:16145:16157	1207012	1	True				
ANR	1207177	Identifier	false		1207012	0					
ANR	1207178	ExpressionStatement	"nz = gx_curve_monotonic_points ( pt0 . x , pc -> p1 . x , pc -> p2 . x , pc -> pt . x , t )"	400:24:16183:16300	1207012	3	True				
ANR	1207179	AssignmentExpression	"nz = gx_curve_monotonic_points ( pt0 . x , pc -> p1 . x , pc -> p2 . x , pc -> pt . x , t )"		1207012	0		=			
ANR	1207180	Identifier	nz		1207012	0					
ANR	1207181	CallExpression	"gx_curve_monotonic_points ( pt0 . x , pc -> p1 . x , pc -> p2 . x , pc -> pt . x , t )"		1207012	1					
ANR	1207182	Callee	gx_curve_monotonic_points		1207012	0					
ANR	1207183	Identifier	gx_curve_monotonic_points		1207012	0					
ANR	1207184	ArgumentList	pt0 . x		1207012	1					
ANR	1207185	Argument	pt0 . x		1207012	0					
ANR	1207186	MemberAccess	pt0 . x		1207012	0					
ANR	1207187	Identifier	pt0		1207012	0					
ANR	1207188	Identifier	x		1207012	1					
ANR	1207189	Argument	pc -> p1 . x		1207012	1					
ANR	1207190	MemberAccess	pc -> p1 . x		1207012	0					
ANR	1207191	PtrMemberAccess	pc -> p1		1207012	0					
ANR	1207192	Identifier	pc		1207012	0					
ANR	1207193	Identifier	p1		1207012	1					
ANR	1207194	Identifier	x		1207012	1					
ANR	1207195	Argument	pc -> p2 . x		1207012	2					
ANR	1207196	MemberAccess	pc -> p2 . x		1207012	0					
ANR	1207197	PtrMemberAccess	pc -> p2		1207012	0					
ANR	1207198	Identifier	pc		1207012	0					
ANR	1207199	Identifier	p2		1207012	1					
ANR	1207200	Identifier	x		1207012	1					
ANR	1207201	Argument	pc -> pt . x		1207012	3					
ANR	1207202	MemberAccess	pc -> pt . x		1207012	0					
ANR	1207203	PtrMemberAccess	pc -> pt		1207012	0					
ANR	1207204	Identifier	pc		1207012	0					
ANR	1207205	Identifier	pt		1207012	1					
ANR	1207206	Identifier	x		1207012	1					
ANR	1207207	Argument	t		1207012	4					
ANR	1207208	Identifier	t		1207012	0					
ANR	1207209	IfStatement	if ( nz != 0 )		1207012	4					
ANR	1207210	Condition	nz != 0	402:28:16330:16336	1207012	0	True				
ANR	1207211	EqualityExpression	nz != 0		1207012	0		!=			
ANR	1207212	Identifier	nz		1207012	0					
ANR	1207213	PrimaryExpression	0		1207012	1					
ANR	1207214	ReturnStatement	return false ;	403:28:16367:16379	1207012	1	True				
ANR	1207215	Identifier	false		1207012	0					
ANR	1207216	IfStatement	if ( options & pco_small_curves )		1207012	2					
ANR	1207217	Condition	options & pco_small_curves	405:24:16427:16452	1207012	0	True				
ANR	1207218	BitAndExpression	options & pco_small_curves		1207012	0		&			
ANR	1207219	Identifier	options		1207012	0					
ANR	1207220	Identifier	pco_small_curves		1207012	1					
ANR	1207221	CompoundStatement		41:24:1542:1601	1207012	1					
ANR	1207222	IdentifierDeclStatement	"fixed ax , bx , cx , ay , by , cy ;"	406:24:16481:16509	1207012	0	True				
ANR	1207223	IdentifierDecl	ax		1207012	0					
ANR	1207224	IdentifierDeclType	fixed		1207012	0					
ANR	1207225	Identifier	ax		1207012	1					
ANR	1207226	IdentifierDecl	bx		1207012	1					
ANR	1207227	IdentifierDeclType	fixed		1207012	0					
ANR	1207228	Identifier	bx		1207012	1					
ANR	1207229	IdentifierDecl	cx		1207012	2					
ANR	1207230	IdentifierDeclType	fixed		1207012	0					
ANR	1207231	Identifier	cx		1207012	1					
ANR	1207232	IdentifierDecl	ay		1207012	3					
ANR	1207233	IdentifierDeclType	fixed		1207012	0					
ANR	1207234	Identifier	ay		1207012	1					
ANR	1207235	IdentifierDecl	by		1207012	4					
ANR	1207236	IdentifierDeclType	fixed		1207012	0					
ANR	1207237	Identifier	by		1207012	1					
ANR	1207238	IdentifierDecl	cy		1207012	5					
ANR	1207239	IdentifierDeclType	fixed		1207012	0					
ANR	1207240	Identifier	cy		1207012	1					
ANR	1207241	IdentifierDeclStatement	"int k = gx_curve_log2_samples ( pt0 . x , pt0 . y , pc , fixed_flat ) ;"	407:24:16535:16594	1207012	1	True				
ANR	1207242	IdentifierDecl	"k = gx_curve_log2_samples ( pt0 . x , pt0 . y , pc , fixed_flat )"		1207012	0					
ANR	1207243	IdentifierDeclType	int		1207012	0					
ANR	1207244	Identifier	k		1207012	1					
ANR	1207245	AssignmentExpression	"k = gx_curve_log2_samples ( pt0 . x , pt0 . y , pc , fixed_flat )"		1207012	2		=			
ANR	1207246	Identifier	k		1207012	0					
ANR	1207247	CallExpression	"gx_curve_log2_samples ( pt0 . x , pt0 . y , pc , fixed_flat )"		1207012	1					
ANR	1207248	Callee	gx_curve_log2_samples		1207012	0					
ANR	1207249	Identifier	gx_curve_log2_samples		1207012	0					
ANR	1207250	ArgumentList	pt0 . x		1207012	1					
ANR	1207251	Argument	pt0 . x		1207012	0					
ANR	1207252	MemberAccess	pt0 . x		1207012	0					
ANR	1207253	Identifier	pt0		1207012	0					
ANR	1207254	Identifier	x		1207012	1					
ANR	1207255	Argument	pt0 . y		1207012	1					
ANR	1207256	MemberAccess	pt0 . y		1207012	0					
ANR	1207257	Identifier	pt0		1207012	0					
ANR	1207258	Identifier	y		1207012	1					
ANR	1207259	Argument	pc		1207012	2					
ANR	1207260	Identifier	pc		1207012	0					
ANR	1207261	Argument	fixed_flat		1207012	3					
ANR	1207262	Identifier	fixed_flat		1207012	0					
ANR	1207263	IfStatement	"if ( ! curve_coeffs_ranged ( pt0 . x , pc -> p1 . x , pc -> p2 . x , pc -> pt . x , pt0 . y , pc -> p1 . y , pc -> p2 . y , pc -> pt . y , & ax , & bx , & cx , & ay , & by , & cy , k ) )"		1207012	2					
ANR	1207264	Condition	"! curve_coeffs_ranged ( pt0 . x , pc -> p1 . x , pc -> p2 . x , pc -> pt . x , pt0 . y , pc -> p1 . y , pc -> p2 . y , pc -> pt . y , & ax , & bx , & cx , & ay , & by , & cy , k )"	409:27:16624:16814	1207012	0	True				
ANR	1207265	UnaryOperationExpression	"! curve_coeffs_ranged ( pt0 . x , pc -> p1 . x , pc -> p2 . x , pc -> pt . x , pt0 . y , pc -> p1 . y , pc -> p2 . y , pc -> pt . y , & ax , & bx , & cx , & ay , & by , & cy , k )"		1207012	0					
ANR	1207266	UnaryOperator	!		1207012	0					
ANR	1207267	CallExpression	"curve_coeffs_ranged ( pt0 . x , pc -> p1 . x , pc -> p2 . x , pc -> pt . x , pt0 . y , pc -> p1 . y , pc -> p2 . y , pc -> pt . y , & ax , & bx , & cx , & ay , & by , & cy , k )"		1207012	1					
ANR	1207268	Callee	curve_coeffs_ranged		1207012	0					
ANR	1207269	Identifier	curve_coeffs_ranged		1207012	0					
ANR	1207270	ArgumentList	pt0 . x		1207012	1					
ANR	1207271	Argument	pt0 . x		1207012	0					
ANR	1207272	MemberAccess	pt0 . x		1207012	0					
ANR	1207273	Identifier	pt0		1207012	0					
ANR	1207274	Identifier	x		1207012	1					
ANR	1207275	Argument	pc -> p1 . x		1207012	1					
ANR	1207276	MemberAccess	pc -> p1 . x		1207012	0					
ANR	1207277	PtrMemberAccess	pc -> p1		1207012	0					
ANR	1207278	Identifier	pc		1207012	0					
ANR	1207279	Identifier	p1		1207012	1					
ANR	1207280	Identifier	x		1207012	1					
ANR	1207281	Argument	pc -> p2 . x		1207012	2					
ANR	1207282	MemberAccess	pc -> p2 . x		1207012	0					
ANR	1207283	PtrMemberAccess	pc -> p2		1207012	0					
ANR	1207284	Identifier	pc		1207012	0					
ANR	1207285	Identifier	p2		1207012	1					
ANR	1207286	Identifier	x		1207012	1					
ANR	1207287	Argument	pc -> pt . x		1207012	3					
ANR	1207288	MemberAccess	pc -> pt . x		1207012	0					
ANR	1207289	PtrMemberAccess	pc -> pt		1207012	0					
ANR	1207290	Identifier	pc		1207012	0					
ANR	1207291	Identifier	pt		1207012	1					
ANR	1207292	Identifier	x		1207012	1					
ANR	1207293	Argument	pt0 . y		1207012	4					
ANR	1207294	MemberAccess	pt0 . y		1207012	0					
ANR	1207295	Identifier	pt0		1207012	0					
ANR	1207296	Identifier	y		1207012	1					
ANR	1207297	Argument	pc -> p1 . y		1207012	5					
ANR	1207298	MemberAccess	pc -> p1 . y		1207012	0					
ANR	1207299	PtrMemberAccess	pc -> p1		1207012	0					
ANR	1207300	Identifier	pc		1207012	0					
ANR	1207301	Identifier	p1		1207012	1					
ANR	1207302	Identifier	y		1207012	1					
ANR	1207303	Argument	pc -> p2 . y		1207012	6					
ANR	1207304	MemberAccess	pc -> p2 . y		1207012	0					
ANR	1207305	PtrMemberAccess	pc -> p2		1207012	0					
ANR	1207306	Identifier	pc		1207012	0					
ANR	1207307	Identifier	p2		1207012	1					
ANR	1207308	Identifier	y		1207012	1					
ANR	1207309	Argument	pc -> pt . y		1207012	7					
ANR	1207310	MemberAccess	pc -> pt . y		1207012	0					
ANR	1207311	PtrMemberAccess	pc -> pt		1207012	0					
ANR	1207312	Identifier	pc		1207012	0					
ANR	1207313	Identifier	pt		1207012	1					
ANR	1207314	Identifier	y		1207012	1					
ANR	1207315	Argument	& ax		1207012	8					
ANR	1207316	UnaryOperationExpression	& ax		1207012	0					
ANR	1207317	UnaryOperator	&		1207012	0					
ANR	1207318	Identifier	ax		1207012	1					
ANR	1207319	Argument	& bx		1207012	9					
ANR	1207320	UnaryOperationExpression	& bx		1207012	0					
ANR	1207321	UnaryOperator	&		1207012	0					
ANR	1207322	Identifier	bx		1207012	1					
ANR	1207323	Argument	& cx		1207012	10					
ANR	1207324	UnaryOperationExpression	& cx		1207012	0					
ANR	1207325	UnaryOperator	&		1207012	0					
ANR	1207326	Identifier	cx		1207012	1					
ANR	1207327	Argument	& ay		1207012	11					
ANR	1207328	UnaryOperationExpression	& ay		1207012	0					
ANR	1207329	UnaryOperator	&		1207012	0					
ANR	1207330	Identifier	ay		1207012	1					
ANR	1207331	Argument	& by		1207012	12					
ANR	1207332	UnaryOperationExpression	& by		1207012	0					
ANR	1207333	UnaryOperator	&		1207012	0					
ANR	1207334	Identifier	by		1207012	1					
ANR	1207335	Argument	& cy		1207012	13					
ANR	1207336	UnaryOperationExpression	& cy		1207012	0					
ANR	1207337	UnaryOperator	&		1207012	0					
ANR	1207338	Identifier	cy		1207012	1					
ANR	1207339	Argument	k		1207012	14					
ANR	1207340	Identifier	k		1207012	0					
ANR	1207341	ReturnStatement	return false ;	412:28:16845:16857	1207012	1	True				
ANR	1207342	Identifier	false		1207012	0					
ANR	1207343	IfStatement	"if ( gx_check_fixed_diff_overflow ( pseg -> pt . x , pt0 . x ) || gx_check_fixed_diff_overflow ( pseg -> pt . y , pt0 . y ) )"		1207012	3					
ANR	1207344	Condition	"gx_check_fixed_diff_overflow ( pseg -> pt . x , pt0 . x ) || gx_check_fixed_diff_overflow ( pseg -> pt . y , pt0 . y )"	413:24:16883:17004	1207012	0	True				
ANR	1207345	OrExpression	"gx_check_fixed_diff_overflow ( pseg -> pt . x , pt0 . x ) || gx_check_fixed_diff_overflow ( pseg -> pt . y , pt0 . y )"		1207012	0		||			
ANR	1207346	CallExpression	"gx_check_fixed_diff_overflow ( pseg -> pt . x , pt0 . x )"		1207012	0					
ANR	1207347	Callee	gx_check_fixed_diff_overflow		1207012	0					
ANR	1207348	Identifier	gx_check_fixed_diff_overflow		1207012	0					
ANR	1207349	ArgumentList	pseg -> pt . x		1207012	1					
ANR	1207350	Argument	pseg -> pt . x		1207012	0					
ANR	1207351	MemberAccess	pseg -> pt . x		1207012	0					
ANR	1207352	PtrMemberAccess	pseg -> pt		1207012	0					
ANR	1207353	Identifier	pseg		1207012	0					
ANR	1207354	Identifier	pt		1207012	1					
ANR	1207355	Identifier	x		1207012	1					
ANR	1207356	Argument	pt0 . x		1207012	1					
ANR	1207357	MemberAccess	pt0 . x		1207012	0					
ANR	1207358	Identifier	pt0		1207012	0					
ANR	1207359	Identifier	x		1207012	1					
ANR	1207360	CallExpression	"gx_check_fixed_diff_overflow ( pseg -> pt . y , pt0 . y )"		1207012	1					
ANR	1207361	Callee	gx_check_fixed_diff_overflow		1207012	0					
ANR	1207362	Identifier	gx_check_fixed_diff_overflow		1207012	0					
ANR	1207363	ArgumentList	pseg -> pt . y		1207012	1					
ANR	1207364	Argument	pseg -> pt . y		1207012	0					
ANR	1207365	MemberAccess	pseg -> pt . y		1207012	0					
ANR	1207366	PtrMemberAccess	pseg -> pt		1207012	0					
ANR	1207367	Identifier	pseg		1207012	0					
ANR	1207368	Identifier	pt		1207012	1					
ANR	1207369	Identifier	y		1207012	1					
ANR	1207370	Argument	pt0 . y		1207012	1					
ANR	1207371	MemberAccess	pt0 . y		1207012	0					
ANR	1207372	Identifier	pt0		1207012	0					
ANR	1207373	Identifier	y		1207012	1					
ANR	1207374	ReturnStatement	return false ;	415:24:17031:17043	1207012	1	True				
ANR	1207375	Identifier	false		1207012	0					
ANR	1207376	BreakStatement	break ;	418:16:17101:17106	1207012	9	True				
ANR	1207377	Label	default :	419:12:17120:17127	1207012	10	True				
ANR	1207378	Identifier	default		1207012	0					
ANR	1207379	ExpressionStatement		420:16:17145:17145	1207012	11	True				
ANR	1207380	ExpressionStatement	pt0 = pseg -> pt	422:8:17165:17179	1207012	1	True				
ANR	1207381	AssignmentExpression	pt0 = pseg -> pt		1207012	0		=			
ANR	1207382	Identifier	pt0		1207012	0					
ANR	1207383	PtrMemberAccess	pseg -> pt		1207012	1					
ANR	1207384	Identifier	pseg		1207012	0					
ANR	1207385	Identifier	pt		1207012	1					
ANR	1207386	ExpressionStatement	pseg = pseg -> next	423:8:17189:17206	1207012	2	True				
ANR	1207387	AssignmentExpression	pseg = pseg -> next		1207012	0		=			
ANR	1207388	Identifier	pseg		1207012	0					
ANR	1207389	PtrMemberAccess	pseg -> next		1207012	1					
ANR	1207390	Identifier	pseg		1207012	0					
ANR	1207391	Identifier	next		1207012	1					
ANR	1207392	ReturnStatement	return true ;	425:4:17218:17229	1207012	4	True				
ANR	1207393	Identifier	true		1207012	0					
ANR	1207394	ReturnType	bool		1207012	1					
ANR	1207395	Identifier	gx_path__check_curves		1207012	2					
ANR	1207396	ParameterList	"const gx_path * ppath , gx_path_copy_options options , fixed fixed_flat"		1207012	3					
ANR	1207397	Parameter	const gx_path * ppath	366:22:14921:14941	1207012	0	True				
ANR	1207398	ParameterType	const gx_path *		1207012	0					
ANR	1207399	Identifier	ppath		1207012	1					
ANR	1207400	Parameter	gx_path_copy_options options	366:45:14944:14971	1207012	1	True				
ANR	1207401	ParameterType	gx_path_copy_options		1207012	0					
ANR	1207402	Identifier	options		1207012	1					
ANR	1207403	Parameter	fixed fixed_flat	366:75:14974:14989	1207012	2	True				
ANR	1207404	ParameterType	fixed		1207012	0					
ANR	1207405	Identifier	fixed_flat		1207012	1					
ANR	1207406	CFGEntryNode	ENTRY		1207012		True				
ANR	1207407	CFGExitNode	EXIT		1207012		True				
ANR	1207408	Symbol	& by		1207012						
ANR	1207409	Symbol	gx_curve_monotonic_points		1207012						
ANR	1207410	Symbol	& bx		1207012						
ANR	1207411	Symbol	pc -> p1 . y		1207012						
ANR	1207412	Symbol	pc -> p1 . x		1207012						
ANR	1207413	Symbol	pc -> pt . x		1207012						
ANR	1207414	Symbol	pc -> pt . y		1207012						
ANR	1207415	Symbol	pseg -> next		1207012						
ANR	1207416	Symbol	pc -> p2 . x		1207012						
ANR	1207417	Symbol	pc -> p2 . y		1207012						
ANR	1207418	Symbol	options		1207012						
ANR	1207419	Symbol	pc -> p2		1207012						
ANR	1207420	Symbol	pc -> p1		1207012						
ANR	1207421	Symbol	* ppath		1207012						
ANR	1207422	Symbol	& cy		1207012						
ANR	1207423	Symbol	fixed_flat		1207012						
ANR	1207424	Symbol	* psub		1207012						
ANR	1207425	Symbol	pseg -> pt . x		1207012						
ANR	1207426	Symbol	pseg -> pt . y		1207012						
ANR	1207427	Symbol	pt0		1207012						
ANR	1207428	Symbol	gx_curve_log2_samples		1207012						
ANR	1207429	Symbol	ax		1207012						
ANR	1207430	Symbol	* pseg		1207012						
ANR	1207431	Symbol	ay		1207012						
ANR	1207432	Symbol	true		1207012						
ANR	1207433	Symbol	* pc		1207012						
ANR	1207434	Symbol	& cx		1207012						
ANR	1207435	Symbol	psub -> last		1207012						
ANR	1207436	Symbol	pco_small_curves		1207012						
ANR	1207437	Symbol	ppath		1207012						
ANR	1207438	Symbol	ppath -> first_subpath		1207012						
ANR	1207439	Symbol	pt0 . y		1207012						
ANR	1207440	Symbol	nz		1207012						
ANR	1207441	Symbol	pt0 . x		1207012						
ANR	1207442	Symbol	gx_check_fixed_diff_overflow		1207012						
ANR	1207443	Symbol	pseg		1207012						
ANR	1207444	Symbol	pseg -> pt		1207012						
ANR	1207445	Symbol	curve_coeffs_ranged		1207012						
ANR	1207446	Symbol	pseg -> type		1207012						
ANR	1207447	Symbol	bx		1207012						
ANR	1207448	Symbol	by		1207012						
ANR	1207449	Symbol	pc -> pt		1207012						
ANR	1207450	Symbol	& ax		1207012						
ANR	1207451	Symbol	& ay		1207012						
ANR	1207452	Symbol	psub		1207012						
ANR	1207453	Symbol	psub -> curve_count		1207012						
ANR	1207454	Symbol	pco_monotonize		1207012						
ANR	1207455	Symbol	false		1207012						
ANR	1207456	Symbol	k		1207012						
ANR	1207457	Symbol	pc		1207012						
ANR	1207458	Symbol	t		1207012						
ANR	1207459	Symbol	cx		1207012						
ANR	1207460	Symbol	cy		1207012						
ANR	1207461	Function	gx_path_has_long_segments	435:0:17581:18177							
ANR	1207462	FunctionDef	gx_path_has_long_segments (const gx_path * ppath)		1207461	0					
ANR	1207463	CompoundStatement		437:0:17635:18177	1207461	0					
ANR	1207464	IdentifierDeclStatement	const segment * pseg = ( const segment * ) ( ppath -> first_subpath ) ;	438:4:17641:17702	1207461	0	True				
ANR	1207465	IdentifierDecl	* pseg = ( const segment * ) ( ppath -> first_subpath )		1207461	0					
ANR	1207466	IdentifierDeclType	const segment *		1207461	0					
ANR	1207467	Identifier	pseg		1207461	1					
ANR	1207468	AssignmentExpression	* pseg = ( const segment * ) ( ppath -> first_subpath )		1207461	2		=			
ANR	1207469	Identifier	pseg		1207461	0					
ANR	1207470	CastExpression	( const segment * ) ( ppath -> first_subpath )		1207461	1					
ANR	1207471	CastTarget	const segment *		1207461	0					
ANR	1207472	PtrMemberAccess	ppath -> first_subpath		1207461	1					
ANR	1207473	Identifier	ppath		1207461	0					
ANR	1207474	Identifier	first_subpath		1207461	1					
ANR	1207475	IdentifierDeclStatement	gs_fixed_point pt0 ;	439:4:17708:17726	1207461	1	True				
ANR	1207476	IdentifierDecl	pt0		1207461	0					
ANR	1207477	IdentifierDeclType	gs_fixed_point		1207461	0					
ANR	1207478	Identifier	pt0		1207461	1					
ANR	1207479	ExpressionStatement	pt0 . x = pt0 . y = 0	441:4:17733:17750	1207461	2	True				
ANR	1207480	AssignmentExpression	pt0 . x = pt0 . y = 0		1207461	0		=			
ANR	1207481	MemberAccess	pt0 . x		1207461	0					
ANR	1207482	Identifier	pt0		1207461	0					
ANR	1207483	Identifier	x		1207461	1					
ANR	1207484	AssignmentExpression	pt0 . y = 0		1207461	1		=			
ANR	1207485	MemberAccess	pt0 . y		1207461	0					
ANR	1207486	Identifier	pt0		1207461	0					
ANR	1207487	Identifier	y		1207461	1					
ANR	1207488	PrimaryExpression	0		1207461	1					
ANR	1207489	WhileStatement	while ( pseg )		1207461	3					
ANR	1207490	Condition	pseg	442:11:17788:17791	1207461	0	True				
ANR	1207491	Identifier	pseg		1207461	0					
ANR	1207492	CompoundStatement		6:17:158:158	1207461	1					
ANR	1207493	SwitchStatement	switch ( pseg -> type )		1207461	0					
ANR	1207494	Condition	pseg -> type	443:16:17812:17821	1207461	0	True				
ANR	1207495	PtrMemberAccess	pseg -> type		1207461	0					
ANR	1207496	Identifier	pseg		1207461	0					
ANR	1207497	Identifier	type		1207461	1					
ANR	1207498	CompoundStatement		7:28:188:188	1207461	1					
ANR	1207499	Label	case s_start :	444:12:17838:17850	1207461	0	True				
ANR	1207500	Identifier	s_start		1207461	0					
ANR	1207501	BreakStatement	break ;	445:16:17868:17873	1207461	1	True				
ANR	1207502	Label	default :	446:12:17887:17894	1207461	2	True				
ANR	1207503	Identifier	default		1207461	0					
ANR	1207504	IfStatement	"if ( gx_check_fixed_diff_overflow ( pseg -> pt . x , pt0 . x ) || gx_check_fixed_diff_overflow ( pseg -> pt . y , pt0 . y ) )"		1207461	3					
ANR	1207505	Condition	"gx_check_fixed_diff_overflow ( pseg -> pt . x , pt0 . x ) || gx_check_fixed_diff_overflow ( pseg -> pt . y , pt0 . y )"	447:20:17916:18033	1207461	0	True				
ANR	1207506	OrExpression	"gx_check_fixed_diff_overflow ( pseg -> pt . x , pt0 . x ) || gx_check_fixed_diff_overflow ( pseg -> pt . y , pt0 . y )"		1207461	0		||			
ANR	1207507	CallExpression	"gx_check_fixed_diff_overflow ( pseg -> pt . x , pt0 . x )"		1207461	0					
ANR	1207508	Callee	gx_check_fixed_diff_overflow		1207461	0					
ANR	1207509	Identifier	gx_check_fixed_diff_overflow		1207461	0					
ANR	1207510	ArgumentList	pseg -> pt . x		1207461	1					
ANR	1207511	Argument	pseg -> pt . x		1207461	0					
ANR	1207512	MemberAccess	pseg -> pt . x		1207461	0					
ANR	1207513	PtrMemberAccess	pseg -> pt		1207461	0					
ANR	1207514	Identifier	pseg		1207461	0					
ANR	1207515	Identifier	pt		1207461	1					
ANR	1207516	Identifier	x		1207461	1					
ANR	1207517	Argument	pt0 . x		1207461	1					
ANR	1207518	MemberAccess	pt0 . x		1207461	0					
ANR	1207519	Identifier	pt0		1207461	0					
ANR	1207520	Identifier	x		1207461	1					
ANR	1207521	CallExpression	"gx_check_fixed_diff_overflow ( pseg -> pt . y , pt0 . y )"		1207461	1					
ANR	1207522	Callee	gx_check_fixed_diff_overflow		1207461	0					
ANR	1207523	Identifier	gx_check_fixed_diff_overflow		1207461	0					
ANR	1207524	ArgumentList	pseg -> pt . y		1207461	1					
ANR	1207525	Argument	pseg -> pt . y		1207461	0					
ANR	1207526	MemberAccess	pseg -> pt . y		1207461	0					
ANR	1207527	PtrMemberAccess	pseg -> pt		1207461	0					
ANR	1207528	Identifier	pseg		1207461	0					
ANR	1207529	Identifier	pt		1207461	1					
ANR	1207530	Identifier	y		1207461	1					
ANR	1207531	Argument	pt0 . y		1207461	1					
ANR	1207532	MemberAccess	pt0 . y		1207461	0					
ANR	1207533	Identifier	pt0		1207461	0					
ANR	1207534	Identifier	y		1207461	1					
ANR	1207535	ReturnStatement	return true ;	449:20:18056:18067	1207461	1	True				
ANR	1207536	Identifier	true		1207461	0					
ANR	1207537	BreakStatement	break ;	450:16:18085:18090	1207461	4	True				
ANR	1207538	ExpressionStatement	pt0 = pseg -> pt	452:8:18110:18124	1207461	1	True				
ANR	1207539	AssignmentExpression	pt0 = pseg -> pt		1207461	0		=			
ANR	1207540	Identifier	pt0		1207461	0					
ANR	1207541	PtrMemberAccess	pseg -> pt		1207461	1					
ANR	1207542	Identifier	pseg		1207461	0					
ANR	1207543	Identifier	pt		1207461	1					
ANR	1207544	ExpressionStatement	pseg = pseg -> next	453:8:18134:18151	1207461	2	True				
ANR	1207545	AssignmentExpression	pseg = pseg -> next		1207461	0		=			
ANR	1207546	Identifier	pseg		1207461	0					
ANR	1207547	PtrMemberAccess	pseg -> next		1207461	1					
ANR	1207548	Identifier	pseg		1207461	0					
ANR	1207549	Identifier	next		1207461	1					
ANR	1207550	ReturnStatement	return false ;	455:4:18163:18175	1207461	4	True				
ANR	1207551	Identifier	false		1207461	0					
ANR	1207552	ReturnType	bool		1207461	1					
ANR	1207553	Identifier	gx_path_has_long_segments		1207461	2					
ANR	1207554	ParameterList	const gx_path * ppath		1207461	3					
ANR	1207555	Parameter	const gx_path * ppath	436:26:17612:17632	1207461	0	True				
ANR	1207556	ParameterType	const gx_path *		1207461	0					
ANR	1207557	Identifier	ppath		1207461	1					
ANR	1207558	CFGEntryNode	ENTRY		1207461		True				
ANR	1207559	CFGExitNode	EXIT		1207461		True				
ANR	1207560	Symbol	* ppath		1207461						
ANR	1207561	Symbol	false		1207461						
ANR	1207562	Symbol	pseg -> pt . x		1207461						
ANR	1207563	Symbol	ppath		1207461						
ANR	1207564	Symbol	ppath -> first_subpath		1207461						
ANR	1207565	Symbol	pseg -> pt . y		1207461						
ANR	1207566	Symbol	pt0 . y		1207461						
ANR	1207567	Symbol	pt0		1207461						
ANR	1207568	Symbol	pt0 . x		1207461						
ANR	1207569	Symbol	gx_check_fixed_diff_overflow		1207461						
ANR	1207570	Symbol	pseg -> next		1207461						
ANR	1207571	Symbol	pseg		1207461						
ANR	1207572	Symbol	pseg -> pt		1207461						
ANR	1207573	Symbol	pseg -> type		1207461						
ANR	1207574	Symbol	* pseg		1207461						
ANR	1207575	Symbol	true		1207461						
ANR	1207576	Function	gx_curve_monotonize	460:0:18303:22229							
ANR	1207577	FunctionDef	"gx_curve_monotonize (gx_path * ppath , const curve_segment * pc)"		1207576	0					
ANR	1207578	CompoundStatement		462:0:18370:22229	1207576	0					
ANR	1207579	IdentifierDeclStatement	"fixed x0 = ppath -> position . x , y0 = ppath -> position . y ;"	463:4:18376:18428	1207576	0	True				
ANR	1207580	IdentifierDecl	x0 = ppath -> position . x		1207576	0					
ANR	1207581	IdentifierDeclType	fixed		1207576	0					
ANR	1207582	Identifier	x0		1207576	1					
ANR	1207583	AssignmentExpression	x0 = ppath -> position . x		1207576	2		=			
ANR	1207584	Identifier	x0		1207576	0					
ANR	1207585	MemberAccess	ppath -> position . x		1207576	1					
ANR	1207586	PtrMemberAccess	ppath -> position		1207576	0					
ANR	1207587	Identifier	ppath		1207576	0					
ANR	1207588	Identifier	position		1207576	1					
ANR	1207589	Identifier	x		1207576	1					
ANR	1207590	IdentifierDecl	y0 = ppath -> position . y		1207576	1					
ANR	1207591	IdentifierDeclType	fixed		1207576	0					
ANR	1207592	Identifier	y0		1207576	1					
ANR	1207593	AssignmentExpression	y0 = ppath -> position . y		1207576	2		=			
ANR	1207594	Identifier	y0		1207576	0					
ANR	1207595	MemberAccess	ppath -> position . y		1207576	1					
ANR	1207596	PtrMemberAccess	ppath -> position		1207576	0					
ANR	1207597	Identifier	ppath		1207576	0					
ANR	1207598	Identifier	position		1207576	1					
ANR	1207599	Identifier	y		1207576	1					
ANR	1207600	IdentifierDeclStatement	segment_notes notes = pc -> notes ;	464:4:18434:18465	1207576	1	True				
ANR	1207601	IdentifierDecl	notes = pc -> notes		1207576	0					
ANR	1207602	IdentifierDeclType	segment_notes		1207576	0					
ANR	1207603	Identifier	notes		1207576	1					
ANR	1207604	AssignmentExpression	notes = pc -> notes		1207576	2		=			
ANR	1207605	Identifier	notes		1207576	0					
ANR	1207606	PtrMemberAccess	pc -> notes		1207576	1					
ANR	1207607	Identifier	pc		1207576	0					
ANR	1207608	Identifier	notes		1207576	1					
ANR	1207609	IdentifierDeclStatement	"double t [ 5 ] , tt = 1 , tp ;"	465:4:18471:18494	1207576	2	True				
ANR	1207610	IdentifierDecl	t [ 5 ]		1207576	0					
ANR	1207611	IdentifierDeclType	double [ 5 ]		1207576	0					
ANR	1207612	Identifier	t		1207576	1					
ANR	1207613	PrimaryExpression	5		1207576	2					
ANR	1207614	IdentifierDecl	tt = 1		1207576	1					
ANR	1207615	IdentifierDeclType	double		1207576	0					
ANR	1207616	Identifier	tt		1207576	1					
ANR	1207617	AssignmentExpression	tt = 1		1207576	2		=			
ANR	1207618	Identifier	tt		1207576	0					
ANR	1207619	PrimaryExpression	1		1207576	1					
ANR	1207620	IdentifierDecl	tp		1207576	2					
ANR	1207621	IdentifierDeclType	double		1207576	0					
ANR	1207622	Identifier	tp		1207576	1					
ANR	1207623	IdentifierDeclStatement	int c [ 5 ] ;	466:4:18500:18508	1207576	3	True				
ANR	1207624	IdentifierDecl	c [ 5 ]		1207576	0					
ANR	1207625	IdentifierDeclType	int [ 5 ]		1207576	0					
ANR	1207626	Identifier	c		1207576	1					
ANR	1207627	PrimaryExpression	5		1207576	2					
ANR	1207628	IdentifierDeclStatement	"int n0 , n1 , n , i , j , k = 0 ;"	467:4:18514:18540	1207576	4	True				
ANR	1207629	IdentifierDecl	n0		1207576	0					
ANR	1207630	IdentifierDeclType	int		1207576	0					
ANR	1207631	Identifier	n0		1207576	1					
ANR	1207632	IdentifierDecl	n1		1207576	1					
ANR	1207633	IdentifierDeclType	int		1207576	0					
ANR	1207634	Identifier	n1		1207576	1					
ANR	1207635	IdentifierDecl	n		1207576	2					
ANR	1207636	IdentifierDeclType	int		1207576	0					
ANR	1207637	Identifier	n		1207576	1					
ANR	1207638	IdentifierDecl	i		1207576	3					
ANR	1207639	IdentifierDeclType	int		1207576	0					
ANR	1207640	Identifier	i		1207576	1					
ANR	1207641	IdentifierDecl	j		1207576	4					
ANR	1207642	IdentifierDeclType	int		1207576	0					
ANR	1207643	Identifier	j		1207576	1					
ANR	1207644	IdentifierDecl	k = 0		1207576	5					
ANR	1207645	IdentifierDeclType	int		1207576	0					
ANR	1207646	Identifier	k		1207576	1					
ANR	1207647	AssignmentExpression	k = 0		1207576	2		=			
ANR	1207648	Identifier	k		1207576	0					
ANR	1207649	PrimaryExpression	0		1207576	1					
ANR	1207650	IdentifierDeclStatement	"fixed ax , bx , cx , ay , by , cy , v01 , v12 ;"	468:4:18546:18584	1207576	5	True				
ANR	1207651	IdentifierDecl	ax		1207576	0					
ANR	1207652	IdentifierDeclType	fixed		1207576	0					
ANR	1207653	Identifier	ax		1207576	1					
ANR	1207654	IdentifierDecl	bx		1207576	1					
ANR	1207655	IdentifierDeclType	fixed		1207576	0					
ANR	1207656	Identifier	bx		1207576	1					
ANR	1207657	IdentifierDecl	cx		1207576	2					
ANR	1207658	IdentifierDeclType	fixed		1207576	0					
ANR	1207659	Identifier	cx		1207576	1					
ANR	1207660	IdentifierDecl	ay		1207576	3					
ANR	1207661	IdentifierDeclType	fixed		1207576	0					
ANR	1207662	Identifier	ay		1207576	1					
ANR	1207663	IdentifierDecl	by		1207576	4					
ANR	1207664	IdentifierDeclType	fixed		1207576	0					
ANR	1207665	Identifier	by		1207576	1					
ANR	1207666	IdentifierDecl	cy		1207576	5					
ANR	1207667	IdentifierDeclType	fixed		1207576	0					
ANR	1207668	Identifier	cy		1207576	1					
ANR	1207669	IdentifierDecl	v01		1207576	6					
ANR	1207670	IdentifierDeclType	fixed		1207576	0					
ANR	1207671	Identifier	v01		1207576	1					
ANR	1207672	IdentifierDecl	v12		1207576	7					
ANR	1207673	IdentifierDeclType	fixed		1207576	0					
ANR	1207674	Identifier	v12		1207576	1					
ANR	1207675	IdentifierDeclStatement	"fixed px , py , qx , qy , rx , ry , sx , sy ;"	469:4:18590:18626	1207576	6	True				
ANR	1207676	IdentifierDecl	px		1207576	0					
ANR	1207677	IdentifierDeclType	fixed		1207576	0					
ANR	1207678	Identifier	px		1207576	1					
ANR	1207679	IdentifierDecl	py		1207576	1					
ANR	1207680	IdentifierDeclType	fixed		1207576	0					
ANR	1207681	Identifier	py		1207576	1					
ANR	1207682	IdentifierDecl	qx		1207576	2					
ANR	1207683	IdentifierDeclType	fixed		1207576	0					
ANR	1207684	Identifier	qx		1207576	1					
ANR	1207685	IdentifierDecl	qy		1207576	3					
ANR	1207686	IdentifierDeclType	fixed		1207576	0					
ANR	1207687	Identifier	qy		1207576	1					
ANR	1207688	IdentifierDecl	rx		1207576	4					
ANR	1207689	IdentifierDeclType	fixed		1207576	0					
ANR	1207690	Identifier	rx		1207576	1					
ANR	1207691	IdentifierDecl	ry		1207576	5					
ANR	1207692	IdentifierDeclType	fixed		1207576	0					
ANR	1207693	Identifier	ry		1207576	1					
ANR	1207694	IdentifierDecl	sx		1207576	6					
ANR	1207695	IdentifierDeclType	fixed		1207576	0					
ANR	1207696	Identifier	sx		1207576	1					
ANR	1207697	IdentifierDecl	sy		1207576	7					
ANR	1207698	IdentifierDeclType	fixed		1207576	0					
ANR	1207699	Identifier	sy		1207576	1					
ANR	1207700	IdentifierDeclStatement	const double delta = 0.0000001 ;	470:4:18632:18662	1207576	7	True				
ANR	1207701	IdentifierDecl	delta = 0.0000001		1207576	0					
ANR	1207702	IdentifierDeclType	const double		1207576	0					
ANR	1207703	Identifier	delta		1207576	1					
ANR	1207704	AssignmentExpression	delta = 0.0000001		1207576	2		=			
ANR	1207705	Identifier	delta		1207576	0					
ANR	1207706	PrimaryExpression	0.0000001		1207576	1					
ANR	1207707	ExpressionStatement	"n0 = gx_curve_monotonic_points ( x0 , pc -> p1 . x , pc -> p2 . x , pc -> pt . x , t )"	473:4:18705:18772	1207576	8	True				
ANR	1207708	AssignmentExpression	"n0 = gx_curve_monotonic_points ( x0 , pc -> p1 . x , pc -> p2 . x , pc -> pt . x , t )"		1207576	0		=			
ANR	1207709	Identifier	n0		1207576	0					
ANR	1207710	CallExpression	"gx_curve_monotonic_points ( x0 , pc -> p1 . x , pc -> p2 . x , pc -> pt . x , t )"		1207576	1					
ANR	1207711	Callee	gx_curve_monotonic_points		1207576	0					
ANR	1207712	Identifier	gx_curve_monotonic_points		1207576	0					
ANR	1207713	ArgumentList	x0		1207576	1					
ANR	1207714	Argument	x0		1207576	0					
ANR	1207715	Identifier	x0		1207576	0					
ANR	1207716	Argument	pc -> p1 . x		1207576	1					
ANR	1207717	MemberAccess	pc -> p1 . x		1207576	0					
ANR	1207718	PtrMemberAccess	pc -> p1		1207576	0					
ANR	1207719	Identifier	pc		1207576	0					
ANR	1207720	Identifier	p1		1207576	1					
ANR	1207721	Identifier	x		1207576	1					
ANR	1207722	Argument	pc -> p2 . x		1207576	2					
ANR	1207723	MemberAccess	pc -> p2 . x		1207576	0					
ANR	1207724	PtrMemberAccess	pc -> p2		1207576	0					
ANR	1207725	Identifier	pc		1207576	0					
ANR	1207726	Identifier	p2		1207576	1					
ANR	1207727	Identifier	x		1207576	1					
ANR	1207728	Argument	pc -> pt . x		1207576	3					
ANR	1207729	MemberAccess	pc -> pt . x		1207576	0					
ANR	1207730	PtrMemberAccess	pc -> pt		1207576	0					
ANR	1207731	Identifier	pc		1207576	0					
ANR	1207732	Identifier	pt		1207576	1					
ANR	1207733	Identifier	x		1207576	1					
ANR	1207734	Argument	t		1207576	4					
ANR	1207735	Identifier	t		1207576	0					
ANR	1207736	ExpressionStatement	"n1 = gx_curve_monotonic_points ( y0 , pc -> p1 . y , pc -> p2 . y , pc -> pt . y , t + n0 )"	474:4:18778:18850	1207576	9	True				
ANR	1207737	AssignmentExpression	"n1 = gx_curve_monotonic_points ( y0 , pc -> p1 . y , pc -> p2 . y , pc -> pt . y , t + n0 )"		1207576	0		=			
ANR	1207738	Identifier	n1		1207576	0					
ANR	1207739	CallExpression	"gx_curve_monotonic_points ( y0 , pc -> p1 . y , pc -> p2 . y , pc -> pt . y , t + n0 )"		1207576	1					
ANR	1207740	Callee	gx_curve_monotonic_points		1207576	0					
ANR	1207741	Identifier	gx_curve_monotonic_points		1207576	0					
ANR	1207742	ArgumentList	y0		1207576	1					
ANR	1207743	Argument	y0		1207576	0					
ANR	1207744	Identifier	y0		1207576	0					
ANR	1207745	Argument	pc -> p1 . y		1207576	1					
ANR	1207746	MemberAccess	pc -> p1 . y		1207576	0					
ANR	1207747	PtrMemberAccess	pc -> p1		1207576	0					
ANR	1207748	Identifier	pc		1207576	0					
ANR	1207749	Identifier	p1		1207576	1					
ANR	1207750	Identifier	y		1207576	1					
ANR	1207751	Argument	pc -> p2 . y		1207576	2					
ANR	1207752	MemberAccess	pc -> p2 . y		1207576	0					
ANR	1207753	PtrMemberAccess	pc -> p2		1207576	0					
ANR	1207754	Identifier	pc		1207576	0					
ANR	1207755	Identifier	p2		1207576	1					
ANR	1207756	Identifier	y		1207576	1					
ANR	1207757	Argument	pc -> pt . y		1207576	3					
ANR	1207758	MemberAccess	pc -> pt . y		1207576	0					
ANR	1207759	PtrMemberAccess	pc -> pt		1207576	0					
ANR	1207760	Identifier	pc		1207576	0					
ANR	1207761	Identifier	pt		1207576	1					
ANR	1207762	Identifier	y		1207576	1					
ANR	1207763	Argument	t + n0		1207576	4					
ANR	1207764	AdditiveExpression	t + n0		1207576	0		+			
ANR	1207765	Identifier	t		1207576	0					
ANR	1207766	Identifier	n0		1207576	1					
ANR	1207767	ExpressionStatement	n = n0 + n1	475:4:18856:18867	1207576	10	True				
ANR	1207768	AssignmentExpression	n = n0 + n1		1207576	0		=			
ANR	1207769	Identifier	n		1207576	0					
ANR	1207770	AdditiveExpression	n0 + n1		1207576	1		+			
ANR	1207771	Identifier	n0		1207576	0					
ANR	1207772	Identifier	n1		1207576	1					
ANR	1207773	IfStatement	if ( n == 0 )		1207576	11					
ANR	1207774	Condition	n == 0	476:8:18877:18882	1207576	0	True				
ANR	1207775	EqualityExpression	n == 0		1207576	0		==			
ANR	1207776	Identifier	n		1207576	0					
ANR	1207777	PrimaryExpression	0		1207576	1					
ANR	1207778	ReturnStatement	"return gx_path_add_curve_notes ( ppath , pc -> p1 . x , pc -> p1 . y , pc -> p2 . x , pc -> p2 . y , pc -> pt . x , pc -> pt . y , notes ) ;"	477:8:18893:19013	1207576	1	True				
ANR	1207779	CallExpression	"gx_path_add_curve_notes ( ppath , pc -> p1 . x , pc -> p1 . y , pc -> p2 . x , pc -> p2 . y , pc -> pt . x , pc -> pt . y , notes )"		1207576	0					
ANR	1207780	Callee	gx_path_add_curve_notes		1207576	0					
ANR	1207781	Identifier	gx_path_add_curve_notes		1207576	0					
ANR	1207782	ArgumentList	ppath		1207576	1					
ANR	1207783	Argument	ppath		1207576	0					
ANR	1207784	Identifier	ppath		1207576	0					
ANR	1207785	Argument	pc -> p1 . x		1207576	1					
ANR	1207786	MemberAccess	pc -> p1 . x		1207576	0					
ANR	1207787	PtrMemberAccess	pc -> p1		1207576	0					
ANR	1207788	Identifier	pc		1207576	0					
ANR	1207789	Identifier	p1		1207576	1					
ANR	1207790	Identifier	x		1207576	1					
ANR	1207791	Argument	pc -> p1 . y		1207576	2					
ANR	1207792	MemberAccess	pc -> p1 . y		1207576	0					
ANR	1207793	PtrMemberAccess	pc -> p1		1207576	0					
ANR	1207794	Identifier	pc		1207576	0					
ANR	1207795	Identifier	p1		1207576	1					
ANR	1207796	Identifier	y		1207576	1					
ANR	1207797	Argument	pc -> p2 . x		1207576	3					
ANR	1207798	MemberAccess	pc -> p2 . x		1207576	0					
ANR	1207799	PtrMemberAccess	pc -> p2		1207576	0					
ANR	1207800	Identifier	pc		1207576	0					
ANR	1207801	Identifier	p2		1207576	1					
ANR	1207802	Identifier	x		1207576	1					
ANR	1207803	Argument	pc -> p2 . y		1207576	4					
ANR	1207804	MemberAccess	pc -> p2 . y		1207576	0					
ANR	1207805	PtrMemberAccess	pc -> p2		1207576	0					
ANR	1207806	Identifier	pc		1207576	0					
ANR	1207807	Identifier	p2		1207576	1					
ANR	1207808	Identifier	y		1207576	1					
ANR	1207809	Argument	pc -> pt . x		1207576	5					
ANR	1207810	MemberAccess	pc -> pt . x		1207576	0					
ANR	1207811	PtrMemberAccess	pc -> pt		1207576	0					
ANR	1207812	Identifier	pc		1207576	0					
ANR	1207813	Identifier	pt		1207576	1					
ANR	1207814	Identifier	x		1207576	1					
ANR	1207815	Argument	pc -> pt . y		1207576	6					
ANR	1207816	MemberAccess	pc -> pt . y		1207576	0					
ANR	1207817	PtrMemberAccess	pc -> pt		1207576	0					
ANR	1207818	Identifier	pc		1207576	0					
ANR	1207819	Identifier	pt		1207576	1					
ANR	1207820	Identifier	y		1207576	1					
ANR	1207821	Argument	notes		1207576	7					
ANR	1207822	Identifier	notes		1207576	0					
ANR	1207823	IfStatement	if ( n0 > 0 )		1207576	12					
ANR	1207824	Condition	n0 > 0	479:8:19023:19028	1207576	0	True				
ANR	1207825	RelationalExpression	n0 > 0		1207576	0		>			
ANR	1207826	Identifier	n0		1207576	0					
ANR	1207827	PrimaryExpression	0		1207576	1					
ANR	1207828	ExpressionStatement	c [ 0 ] = 1	480:8:19039:19047	1207576	1	True				
ANR	1207829	AssignmentExpression	c [ 0 ] = 1		1207576	0		=			
ANR	1207830	ArrayIndexing	c [ 0 ]		1207576	0					
ANR	1207831	Identifier	c		1207576	0					
ANR	1207832	PrimaryExpression	0		1207576	1					
ANR	1207833	PrimaryExpression	1		1207576	1					
ANR	1207834	IfStatement	if ( n0 > 1 )		1207576	13					
ANR	1207835	Condition	n0 > 1	481:8:19057:19062	1207576	0	True				
ANR	1207836	RelationalExpression	n0 > 1		1207576	0		>			
ANR	1207837	Identifier	n0		1207576	0					
ANR	1207838	PrimaryExpression	1		1207576	1					
ANR	1207839	ExpressionStatement	c [ 1 ] = 1	482:8:19073:19081	1207576	1	True				
ANR	1207840	AssignmentExpression	c [ 1 ] = 1		1207576	0		=			
ANR	1207841	ArrayIndexing	c [ 1 ]		1207576	0					
ANR	1207842	Identifier	c		1207576	0					
ANR	1207843	PrimaryExpression	1		1207576	1					
ANR	1207844	PrimaryExpression	1		1207576	1					
ANR	1207845	IfStatement	if ( n1 > 0 )		1207576	14					
ANR	1207846	Condition	n1 > 0	483:8:19091:19096	1207576	0	True				
ANR	1207847	RelationalExpression	n1 > 0		1207576	0		>			
ANR	1207848	Identifier	n1		1207576	0					
ANR	1207849	PrimaryExpression	0		1207576	1					
ANR	1207850	ExpressionStatement	c [ n0 ] = 2	484:8:19107:19116	1207576	1	True				
ANR	1207851	AssignmentExpression	c [ n0 ] = 2		1207576	0		=			
ANR	1207852	ArrayIndexing	c [ n0 ]		1207576	0					
ANR	1207853	Identifier	c		1207576	0					
ANR	1207854	Identifier	n0		1207576	1					
ANR	1207855	PrimaryExpression	2		1207576	1					
ANR	1207856	IfStatement	if ( n1 > 1 )		1207576	15					
ANR	1207857	Condition	n1 > 1	485:8:19126:19131	1207576	0	True				
ANR	1207858	RelationalExpression	n1 > 1		1207576	0		>			
ANR	1207859	Identifier	n1		1207576	0					
ANR	1207860	PrimaryExpression	1		1207576	1					
ANR	1207861	ExpressionStatement	c [ n0 + 1 ] = 2	486:8:19142:19155	1207576	1	True				
ANR	1207862	AssignmentExpression	c [ n0 + 1 ] = 2		1207576	0		=			
ANR	1207863	ArrayIndexing	c [ n0 + 1 ]		1207576	0					
ANR	1207864	Identifier	c		1207576	0					
ANR	1207865	AdditiveExpression	n0 + 1		1207576	1		+			
ANR	1207866	Identifier	n0		1207576	0					
ANR	1207867	PrimaryExpression	1		1207576	1					
ANR	1207868	PrimaryExpression	2		1207576	1					
ANR	1207869	ForStatement	for ( i = 0 ; i < n ; i ++ )		1207576	16					
ANR	1207870	ForInit	i = 0 ;	488:9:19190:19195	1207576	0	True				
ANR	1207871	AssignmentExpression	i = 0		1207576	0		=			
ANR	1207872	Identifier	i		1207576	0					
ANR	1207873	PrimaryExpression	0		1207576	1					
ANR	1207874	Condition	i < n	488:16:19197:19201	1207576	1	True				
ANR	1207875	RelationalExpression	i < n		1207576	0		<			
ANR	1207876	Identifier	i		1207576	0					
ANR	1207877	Identifier	n		1207576	1					
ANR	1207878	PostIncDecOperationExpression	i ++	488:23:19204:19206	1207576	2	True				
ANR	1207879	Identifier	i		1207576	0					
ANR	1207880	IncDec	++		1207576	1					
ANR	1207881	ForStatement	for ( j = i + 1 ; j < n ; j ++ )		1207576	3					
ANR	1207882	ForInit	j = i + 1 ;	489:13:19222:19231	1207576	0	True				
ANR	1207883	AssignmentExpression	j = i + 1		1207576	0		=			
ANR	1207884	Identifier	j		1207576	0					
ANR	1207885	AdditiveExpression	i + 1		1207576	1		+			
ANR	1207886	Identifier	i		1207576	0					
ANR	1207887	PrimaryExpression	1		1207576	1					
ANR	1207888	Condition	j < n	489:24:19233:19237	1207576	1	True				
ANR	1207889	RelationalExpression	j < n		1207576	0		<			
ANR	1207890	Identifier	j		1207576	0					
ANR	1207891	Identifier	n		1207576	1					
ANR	1207892	PostIncDecOperationExpression	j ++	489:31:19240:19242	1207576	2	True				
ANR	1207893	Identifier	j		1207576	0					
ANR	1207894	IncDec	++		1207576	1					
ANR	1207895	IfStatement	if ( t [ i ] > t [ j ] )		1207576	3					
ANR	1207896	Condition	t [ i ] > t [ j ]	490:16:19261:19271	1207576	0	True				
ANR	1207897	RelationalExpression	t [ i ] > t [ j ]		1207576	0		>			
ANR	1207898	ArrayIndexing	t [ i ]		1207576	0					
ANR	1207899	Identifier	t		1207576	0					
ANR	1207900	Identifier	i		1207576	1					
ANR	1207901	ArrayIndexing	t [ j ]		1207576	1					
ANR	1207902	Identifier	t		1207576	0					
ANR	1207903	Identifier	j		1207576	1					
ANR	1207904	CompoundStatement		31:16:944:959	1207576	1					
ANR	1207905	IdentifierDeclStatement	int w ;	491:16:19292:19297	1207576	0	True				
ANR	1207906	IdentifierDecl	w		1207576	0					
ANR	1207907	IdentifierDeclType	int		1207576	0					
ANR	1207908	Identifier	w		1207576	1					
ANR	1207909	IdentifierDeclStatement	double v = t [ i ] ;	492:16:19315:19330	1207576	1	True				
ANR	1207910	IdentifierDecl	v = t [ i ]		1207576	0					
ANR	1207911	IdentifierDeclType	double		1207576	0					
ANR	1207912	Identifier	v		1207576	1					
ANR	1207913	AssignmentExpression	v = t [ i ]		1207576	2		=			
ANR	1207914	Identifier	v		1207576	0					
ANR	1207915	ArrayIndexing	t [ i ]		1207576	1					
ANR	1207916	Identifier	t		1207576	0					
ANR	1207917	Identifier	i		1207576	1					
ANR	1207918	ExpressionStatement	t [ i ] = t [ j ]	492:33:19332:19343	1207576	2	True				
ANR	1207919	AssignmentExpression	t [ i ] = t [ j ]		1207576	0		=			
ANR	1207920	ArrayIndexing	t [ i ]		1207576	0					
ANR	1207921	Identifier	t		1207576	0					
ANR	1207922	Identifier	i		1207576	1					
ANR	1207923	ArrayIndexing	t [ j ]		1207576	1					
ANR	1207924	Identifier	t		1207576	0					
ANR	1207925	Identifier	j		1207576	1					
ANR	1207926	ExpressionStatement	t [ j ] = v	492:46:19345:19353	1207576	3	True				
ANR	1207927	AssignmentExpression	t [ j ] = v		1207576	0		=			
ANR	1207928	ArrayIndexing	t [ j ]		1207576	0					
ANR	1207929	Identifier	t		1207576	0					
ANR	1207930	Identifier	j		1207576	1					
ANR	1207931	Identifier	v		1207576	1					
ANR	1207932	ExpressionStatement	w = c [ i ]	493:16:19371:19379	1207576	4	True				
ANR	1207933	AssignmentExpression	w = c [ i ]		1207576	0		=			
ANR	1207934	Identifier	w		1207576	0					
ANR	1207935	ArrayIndexing	c [ i ]		1207576	1					
ANR	1207936	Identifier	c		1207576	0					
ANR	1207937	Identifier	i		1207576	1					
ANR	1207938	ExpressionStatement	c [ i ] = c [ j ]	493:26:19381:19392	1207576	5	True				
ANR	1207939	AssignmentExpression	c [ i ] = c [ j ]		1207576	0		=			
ANR	1207940	ArrayIndexing	c [ i ]		1207576	0					
ANR	1207941	Identifier	c		1207576	0					
ANR	1207942	Identifier	i		1207576	1					
ANR	1207943	ArrayIndexing	c [ j ]		1207576	1					
ANR	1207944	Identifier	c		1207576	0					
ANR	1207945	Identifier	j		1207576	1					
ANR	1207946	ExpressionStatement	c [ j ] = w	493:39:19394:19402	1207576	6	True				
ANR	1207947	AssignmentExpression	c [ j ] = w		1207576	0		=			
ANR	1207948	ArrayIndexing	c [ j ]		1207576	0					
ANR	1207949	Identifier	c		1207576	0					
ANR	1207950	Identifier	j		1207576	1					
ANR	1207951	Identifier	w		1207576	1					
ANR	1207952	ForStatement	for ( k = 0 ; k < n ; k ++ )		1207576	17					
ANR	1207953	ForInit	k = 0 ;	496:9:19460:19465	1207576	0	True				
ANR	1207954	AssignmentExpression	k = 0		1207576	0		=			
ANR	1207955	Identifier	k		1207576	0					
ANR	1207956	PrimaryExpression	0		1207576	1					
ANR	1207957	Condition	k < n	496:16:19467:19471	1207576	1	True				
ANR	1207958	RelationalExpression	k < n		1207576	0		<			
ANR	1207959	Identifier	k		1207576	0					
ANR	1207960	Identifier	n		1207576	1					
ANR	1207961	PostIncDecOperationExpression	k ++	496:23:19474:19476	1207576	2	True				
ANR	1207962	Identifier	k		1207576	0					
ANR	1207963	IncDec	++		1207576	1					
ANR	1207964	IfStatement	if ( t [ k ] >= delta )		1207576	3					
ANR	1207965	Condition	t [ k ] >= delta	497:12:19491:19503	1207576	0	True				
ANR	1207966	RelationalExpression	t [ k ] >= delta		1207576	0		>=			
ANR	1207967	ArrayIndexing	t [ k ]		1207576	0					
ANR	1207968	Identifier	t		1207576	0					
ANR	1207969	Identifier	k		1207576	1					
ANR	1207970	Identifier	delta		1207576	1					
ANR	1207971	BreakStatement	break ;	498:12:19518:19523	1207576	1	True				
ANR	1207972	IfStatement	if ( t [ n - 1 ] > 1 - delta )		1207576	18					
ANR	1207973	Condition	t [ n - 1 ] > 1 - delta	500:8:19584:19603	1207576	0	True				
ANR	1207974	RelationalExpression	t [ n - 1 ] > 1 - delta		1207576	0		>			
ANR	1207975	ArrayIndexing	t [ n - 1 ]		1207576	0					
ANR	1207976	Identifier	t		1207576	0					
ANR	1207977	AdditiveExpression	n - 1		1207576	1		-			
ANR	1207978	Identifier	n		1207576	0					
ANR	1207979	PrimaryExpression	1		1207576	1					
ANR	1207980	AdditiveExpression	1 - delta		1207576	1		-			
ANR	1207981	PrimaryExpression	1		1207576	0					
ANR	1207982	Identifier	delta		1207576	1					
ANR	1207983	ExpressionStatement	n --	501:8:19614:19617	1207576	1	True				
ANR	1207984	PostIncDecOperationExpression	n --		1207576	0					
ANR	1207985	Identifier	n		1207576	0					
ANR	1207986	IncDec	--		1207576	1					
ANR	1207987	ForStatement	"for ( i = k + 1 , j = k ; i < n && t [ k ] < 1 - delta ; i ++ )"		1207576	19					
ANR	1207988	ForInit	"i = k + 1 , j = k ;"	502:9:19628:19644	1207576	0	True				
ANR	1207989	Expression	"i = k + 1 , j = k"		1207576	0					
ANR	1207990	AssignmentExpression	i = k + 1		1207576	0		=			
ANR	1207991	Identifier	i		1207576	0					
ANR	1207992	AdditiveExpression	k + 1		1207576	1		+			
ANR	1207993	Identifier	k		1207576	0					
ANR	1207994	PrimaryExpression	1		1207576	1					
ANR	1207995	AssignmentExpression	j = k		1207576	1		=			
ANR	1207996	Identifier	j		1207576	0					
ANR	1207997	Identifier	k		1207576	1					
ANR	1207998	Condition	i < n && t [ k ] < 1 - delta	502:27:19646:19670	1207576	1	True				
ANR	1207999	AndExpression	i < n && t [ k ] < 1 - delta		1207576	0		&&			
ANR	1208000	RelationalExpression	i < n		1207576	0		<			
ANR	1208001	Identifier	i		1207576	0					
ANR	1208002	Identifier	n		1207576	1					
ANR	1208003	RelationalExpression	t [ k ] < 1 - delta		1207576	1		<			
ANR	1208004	ArrayIndexing	t [ k ]		1207576	0					
ANR	1208005	Identifier	t		1207576	0					
ANR	1208006	Identifier	k		1207576	1					
ANR	1208007	AdditiveExpression	1 - delta		1207576	1		-			
ANR	1208008	PrimaryExpression	1		1207576	0					
ANR	1208009	Identifier	delta		1207576	1					
ANR	1208010	PostIncDecOperationExpression	i ++	502:54:19673:19675	1207576	2	True				
ANR	1208011	Identifier	i		1207576	0					
ANR	1208012	IncDec	++		1207576	1					
ANR	1208013	IfStatement	if ( any_abs ( t [ i ] - t [ j ] ) < delta )		1207576	3					
ANR	1208014	Condition	any_abs ( t [ i ] - t [ j ] ) < delta	503:12:19690:19717	1207576	0	True				
ANR	1208015	RelationalExpression	any_abs ( t [ i ] - t [ j ] ) < delta		1207576	0		<			
ANR	1208016	CallExpression	any_abs ( t [ i ] - t [ j ] )		1207576	0					
ANR	1208017	Callee	any_abs		1207576	0					
ANR	1208018	Identifier	any_abs		1207576	0					
ANR	1208019	ArgumentList	t [ i ] - t [ j ]		1207576	1					
ANR	1208020	Argument	t [ i ] - t [ j ]		1207576	0					
ANR	1208021	AdditiveExpression	t [ i ] - t [ j ]		1207576	0		-			
ANR	1208022	ArrayIndexing	t [ i ]		1207576	0					
ANR	1208023	Identifier	t		1207576	0					
ANR	1208024	Identifier	i		1207576	1					
ANR	1208025	ArrayIndexing	t [ j ]		1207576	1					
ANR	1208026	Identifier	t		1207576	0					
ANR	1208027	Identifier	j		1207576	1					
ANR	1208028	Identifier	delta		1207576	1					
ANR	1208029	CompoundStatement		42:42:1349:1349	1207576	1					
ANR	1208030	ExpressionStatement	t [ j ] = ( t [ j ] + t [ i ] ) / 2	504:12:19734:19758	1207576	0	True				
ANR	1208031	AssignmentExpression	t [ j ] = ( t [ j ] + t [ i ] ) / 2		1207576	0		=			
ANR	1208032	ArrayIndexing	t [ j ]		1207576	0					
ANR	1208033	Identifier	t		1207576	0					
ANR	1208034	Identifier	j		1207576	1					
ANR	1208035	MultiplicativeExpression	( t [ j ] + t [ i ] ) / 2		1207576	1		/			
ANR	1208036	AdditiveExpression	t [ j ] + t [ i ]		1207576	0		+			
ANR	1208037	ArrayIndexing	t [ j ]		1207576	0					
ANR	1208038	Identifier	t		1207576	0					
ANR	1208039	Identifier	j		1207576	1					
ANR	1208040	ArrayIndexing	t [ i ]		1207576	1					
ANR	1208041	Identifier	t		1207576	0					
ANR	1208042	Identifier	i		1207576	1					
ANR	1208043	PrimaryExpression	2		1207576	1					
ANR	1208044	ExpressionStatement	c [ j ] |= c [ i ]	505:12:19806:19818	1207576	1	True				
ANR	1208045	AssignmentExpression	c [ j ] |= c [ i ]		1207576	0		|=			
ANR	1208046	ArrayIndexing	c [ j ]		1207576	0					
ANR	1208047	Identifier	c		1207576	0					
ANR	1208048	Identifier	j		1207576	1					
ANR	1208049	ArrayIndexing	c [ i ]		1207576	1					
ANR	1208050	Identifier	c		1207576	0					
ANR	1208051	Identifier	i		1207576	1					
ANR	1208052	ElseStatement	else		1207576	0					
ANR	1208053	CompoundStatement		45:15:1464:1464	1207576	0					
ANR	1208054	ExpressionStatement	j ++	507:12:19849:19852	1207576	0	True				
ANR	1208055	PostIncDecOperationExpression	j ++		1207576	0					
ANR	1208056	Identifier	j		1207576	0					
ANR	1208057	IncDec	++		1207576	1					
ANR	1208058	ExpressionStatement	t [ j ] = t [ i ]	508:12:19866:19877	1207576	1	True				
ANR	1208059	AssignmentExpression	t [ j ] = t [ i ]		1207576	0		=			
ANR	1208060	ArrayIndexing	t [ j ]		1207576	0					
ANR	1208061	Identifier	t		1207576	0					
ANR	1208062	Identifier	j		1207576	1					
ANR	1208063	ArrayIndexing	t [ i ]		1207576	1					
ANR	1208064	Identifier	t		1207576	0					
ANR	1208065	Identifier	i		1207576	1					
ANR	1208066	ExpressionStatement	c [ j ] = c [ i ]	509:12:19891:19902	1207576	2	True				
ANR	1208067	AssignmentExpression	c [ j ] = c [ i ]		1207576	0		=			
ANR	1208068	ArrayIndexing	c [ j ]		1207576	0					
ANR	1208069	Identifier	c		1207576	0					
ANR	1208070	Identifier	j		1207576	1					
ANR	1208071	ArrayIndexing	c [ i ]		1207576	1					
ANR	1208072	Identifier	c		1207576	0					
ANR	1208073	Identifier	i		1207576	1					
ANR	1208074	ExpressionStatement	n = j + 1	511:4:19918:19927	1207576	20	True				
ANR	1208075	AssignmentExpression	n = j + 1		1207576	0		=			
ANR	1208076	Identifier	n		1207576	0					
ANR	1208077	AdditiveExpression	j + 1		1207576	1		+			
ANR	1208078	Identifier	j		1207576	0					
ANR	1208079	PrimaryExpression	1		1207576	1					
ANR	1208080	ExpressionStatement	"curve_points_to_coefficients ( x0 , pc -> p1 . x , pc -> p2 . x , pc -> pt . x , ax , bx , cx , v01 , v12 )"	513:4:19954:20038	1207576	21	True				
ANR	1208081	CallExpression	"curve_points_to_coefficients ( x0 , pc -> p1 . x , pc -> p2 . x , pc -> pt . x , ax , bx , cx , v01 , v12 )"		1207576	0					
ANR	1208082	Callee	curve_points_to_coefficients		1207576	0					
ANR	1208083	Identifier	curve_points_to_coefficients		1207576	0					
ANR	1208084	ArgumentList	x0		1207576	1					
ANR	1208085	Argument	x0		1207576	0					
ANR	1208086	Identifier	x0		1207576	0					
ANR	1208087	Argument	pc -> p1 . x		1207576	1					
ANR	1208088	MemberAccess	pc -> p1 . x		1207576	0					
ANR	1208089	PtrMemberAccess	pc -> p1		1207576	0					
ANR	1208090	Identifier	pc		1207576	0					
ANR	1208091	Identifier	p1		1207576	1					
ANR	1208092	Identifier	x		1207576	1					
ANR	1208093	Argument	pc -> p2 . x		1207576	2					
ANR	1208094	MemberAccess	pc -> p2 . x		1207576	0					
ANR	1208095	PtrMemberAccess	pc -> p2		1207576	0					
ANR	1208096	Identifier	pc		1207576	0					
ANR	1208097	Identifier	p2		1207576	1					
ANR	1208098	Identifier	x		1207576	1					
ANR	1208099	Argument	pc -> pt . x		1207576	3					
ANR	1208100	MemberAccess	pc -> pt . x		1207576	0					
ANR	1208101	PtrMemberAccess	pc -> pt		1207576	0					
ANR	1208102	Identifier	pc		1207576	0					
ANR	1208103	Identifier	pt		1207576	1					
ANR	1208104	Identifier	x		1207576	1					
ANR	1208105	Argument	ax		1207576	4					
ANR	1208106	Identifier	ax		1207576	0					
ANR	1208107	Argument	bx		1207576	5					
ANR	1208108	Identifier	bx		1207576	0					
ANR	1208109	Argument	cx		1207576	6					
ANR	1208110	Identifier	cx		1207576	0					
ANR	1208111	Argument	v01		1207576	7					
ANR	1208112	Identifier	v01		1207576	0					
ANR	1208113	Argument	v12		1207576	8					
ANR	1208114	Identifier	v12		1207576	0					
ANR	1208115	ExpressionStatement	"curve_points_to_coefficients ( y0 , pc -> p1 . y , pc -> p2 . y , pc -> pt . y , ay , by , cy , v01 , v12 )"	514:4:20044:20128	1207576	22	True				
ANR	1208116	CallExpression	"curve_points_to_coefficients ( y0 , pc -> p1 . y , pc -> p2 . y , pc -> pt . y , ay , by , cy , v01 , v12 )"		1207576	0					
ANR	1208117	Callee	curve_points_to_coefficients		1207576	0					
ANR	1208118	Identifier	curve_points_to_coefficients		1207576	0					
ANR	1208119	ArgumentList	y0		1207576	1					
ANR	1208120	Argument	y0		1207576	0					
ANR	1208121	Identifier	y0		1207576	0					
ANR	1208122	Argument	pc -> p1 . y		1207576	1					
ANR	1208123	MemberAccess	pc -> p1 . y		1207576	0					
ANR	1208124	PtrMemberAccess	pc -> p1		1207576	0					
ANR	1208125	Identifier	pc		1207576	0					
ANR	1208126	Identifier	p1		1207576	1					
ANR	1208127	Identifier	y		1207576	1					
ANR	1208128	Argument	pc -> p2 . y		1207576	2					
ANR	1208129	MemberAccess	pc -> p2 . y		1207576	0					
ANR	1208130	PtrMemberAccess	pc -> p2		1207576	0					
ANR	1208131	Identifier	pc		1207576	0					
ANR	1208132	Identifier	p2		1207576	1					
ANR	1208133	Identifier	y		1207576	1					
ANR	1208134	Argument	pc -> pt . y		1207576	3					
ANR	1208135	MemberAccess	pc -> pt . y		1207576	0					
ANR	1208136	PtrMemberAccess	pc -> pt		1207576	0					
ANR	1208137	Identifier	pc		1207576	0					
ANR	1208138	Identifier	pt		1207576	1					
ANR	1208139	Identifier	y		1207576	1					
ANR	1208140	Argument	ay		1207576	4					
ANR	1208141	Identifier	ay		1207576	0					
ANR	1208142	Argument	by		1207576	5					
ANR	1208143	Identifier	by		1207576	0					
ANR	1208144	Argument	cy		1207576	6					
ANR	1208145	Identifier	cy		1207576	0					
ANR	1208146	Argument	v01		1207576	7					
ANR	1208147	Identifier	v01		1207576	0					
ANR	1208148	Argument	v12		1207576	8					
ANR	1208149	Identifier	v12		1207576	0					
ANR	1208150	ExpressionStatement	"ax *= 3 , bx *= 2"	515:4:20134:20150	1207576	23	True				
ANR	1208151	Expression	"ax *= 3 , bx *= 2"		1207576	0					
ANR	1208152	AssignmentExpression	ax *= 3		1207576	0		*=			
ANR	1208153	Identifier	ax		1207576	0					
ANR	1208154	PrimaryExpression	3		1207576	1					
ANR	1208155	AssignmentExpression	bx *= 2		1207576	1		*=			
ANR	1208156	Identifier	bx		1207576	0					
ANR	1208157	PrimaryExpression	2		1207576	1					
ANR	1208158	ExpressionStatement	"ay *= 3 , by *= 2"	516:4:20194:20210	1207576	24	True				
ANR	1208159	Expression	"ay *= 3 , by *= 2"		1207576	0					
ANR	1208160	AssignmentExpression	ay *= 3		1207576	0		*=			
ANR	1208161	Identifier	ay		1207576	0					
ANR	1208162	PrimaryExpression	3		1207576	1					
ANR	1208163	AssignmentExpression	by *= 2		1207576	1		*=			
ANR	1208164	Identifier	by		1207576	0					
ANR	1208165	PrimaryExpression	2		1207576	1					
ANR	1208166	ExpressionStatement	px = x0	517:4:20216:20223	1207576	25	True				
ANR	1208167	AssignmentExpression	px = x0		1207576	0		=			
ANR	1208168	Identifier	px		1207576	0					
ANR	1208169	Identifier	x0		1207576	1					
ANR	1208170	ExpressionStatement	py = y0	518:4:20229:20236	1207576	26	True				
ANR	1208171	AssignmentExpression	py = y0		1207576	0		=			
ANR	1208172	Identifier	py		1207576	0					
ANR	1208173	Identifier	y0		1207576	1					
ANR	1208174	ExpressionStatement	qx = ( fixed ) ( ( pc -> p1 . x - px ) * t [ 0 ] + 0.5 )	519:4:20242:20284	1207576	27	True				
ANR	1208175	AssignmentExpression	qx = ( fixed ) ( ( pc -> p1 . x - px ) * t [ 0 ] + 0.5 )		1207576	0		=			
ANR	1208176	Identifier	qx		1207576	0					
ANR	1208177	CastExpression	( fixed ) ( ( pc -> p1 . x - px ) * t [ 0 ] + 0.5 )		1207576	1					
ANR	1208178	CastTarget	fixed		1207576	0					
ANR	1208179	AdditiveExpression	( pc -> p1 . x - px ) * t [ 0 ] + 0.5		1207576	1		+			
ANR	1208180	MultiplicativeExpression	( pc -> p1 . x - px ) * t [ 0 ]		1207576	0		*			
ANR	1208181	AdditiveExpression	pc -> p1 . x - px		1207576	0		-			
ANR	1208182	MemberAccess	pc -> p1 . x		1207576	0					
ANR	1208183	PtrMemberAccess	pc -> p1		1207576	0					
ANR	1208184	Identifier	pc		1207576	0					
ANR	1208185	Identifier	p1		1207576	1					
ANR	1208186	Identifier	x		1207576	1					
ANR	1208187	Identifier	px		1207576	1					
ANR	1208188	ArrayIndexing	t [ 0 ]		1207576	1					
ANR	1208189	Identifier	t		1207576	0					
ANR	1208190	PrimaryExpression	0		1207576	1					
ANR	1208191	PrimaryExpression	0.5		1207576	1					
ANR	1208192	ExpressionStatement	qy = ( fixed ) ( ( pc -> p1 . y - py ) * t [ 0 ] + 0.5 )	520:4:20290:20332	1207576	28	True				
ANR	1208193	AssignmentExpression	qy = ( fixed ) ( ( pc -> p1 . y - py ) * t [ 0 ] + 0.5 )		1207576	0		=			
ANR	1208194	Identifier	qy		1207576	0					
ANR	1208195	CastExpression	( fixed ) ( ( pc -> p1 . y - py ) * t [ 0 ] + 0.5 )		1207576	1					
ANR	1208196	CastTarget	fixed		1207576	0					
ANR	1208197	AdditiveExpression	( pc -> p1 . y - py ) * t [ 0 ] + 0.5		1207576	1		+			
ANR	1208198	MultiplicativeExpression	( pc -> p1 . y - py ) * t [ 0 ]		1207576	0		*			
ANR	1208199	AdditiveExpression	pc -> p1 . y - py		1207576	0		-			
ANR	1208200	MemberAccess	pc -> p1 . y		1207576	0					
ANR	1208201	PtrMemberAccess	pc -> p1		1207576	0					
ANR	1208202	Identifier	pc		1207576	0					
ANR	1208203	Identifier	p1		1207576	1					
ANR	1208204	Identifier	y		1207576	1					
ANR	1208205	Identifier	py		1207576	1					
ANR	1208206	ArrayIndexing	t [ 0 ]		1207576	1					
ANR	1208207	Identifier	t		1207576	0					
ANR	1208208	PrimaryExpression	0		1207576	1					
ANR	1208209	PrimaryExpression	0.5		1207576	1					
ANR	1208210	ExpressionStatement	tp = 0	521:4:20338:20344	1207576	29	True				
ANR	1208211	AssignmentExpression	tp = 0		1207576	0		=			
ANR	1208212	Identifier	tp		1207576	0					
ANR	1208213	PrimaryExpression	0		1207576	1					
ANR	1208214	ForStatement	for ( i = k ; i < n ; i ++ )		1207576	30					
ANR	1208215	ForInit	i = k ;	522:9:20355:20360	1207576	0	True				
ANR	1208216	AssignmentExpression	i = k		1207576	0		=			
ANR	1208217	Identifier	i		1207576	0					
ANR	1208218	Identifier	k		1207576	1					
ANR	1208219	Condition	i < n	522:16:20362:20366	1207576	1	True				
ANR	1208220	RelationalExpression	i < n		1207576	0		<			
ANR	1208221	Identifier	i		1207576	0					
ANR	1208222	Identifier	n		1207576	1					
ANR	1208223	PostIncDecOperationExpression	i ++	522:23:20369:20371	1207576	2	True				
ANR	1208224	Identifier	i		1207576	0					
ANR	1208225	IncDec	++		1207576	1					
ANR	1208226	CompoundStatement		71:8:2570:2578	1207576	3					
ANR	1208227	IdentifierDeclStatement	double ti = t [ i ] ;	523:8:20384:20400	1207576	0	True				
ANR	1208228	IdentifierDecl	ti = t [ i ]		1207576	0					
ANR	1208229	IdentifierDeclType	double		1207576	0					
ANR	1208230	Identifier	ti		1207576	1					
ANR	1208231	AssignmentExpression	ti = t [ i ]		1207576	2		=			
ANR	1208232	Identifier	ti		1207576	0					
ANR	1208233	ArrayIndexing	t [ i ]		1207576	1					
ANR	1208234	Identifier	t		1207576	0					
ANR	1208235	Identifier	i		1207576	1					
ANR	1208236	IdentifierDeclStatement	"double t2 = ti * ti , t3 = t2 * ti ;"	524:8:20410:20443	1207576	1	True				
ANR	1208237	IdentifierDecl	t2 = ti * ti		1207576	0					
ANR	1208238	IdentifierDeclType	double		1207576	0					
ANR	1208239	Identifier	t2		1207576	1					
ANR	1208240	AssignmentExpression	t2 = ti * ti		1207576	2		=			
ANR	1208241	Identifier	t2		1207576	0					
ANR	1208242	MultiplicativeExpression	ti * ti		1207576	1		*			
ANR	1208243	Identifier	ti		1207576	0					
ANR	1208244	Identifier	ti		1207576	1					
ANR	1208245	IdentifierDecl	t3 = t2 * ti		1207576	1					
ANR	1208246	IdentifierDeclType	double		1207576	0					
ANR	1208247	Identifier	t3		1207576	1					
ANR	1208248	AssignmentExpression	t3 = t2 * ti		1207576	2		=			
ANR	1208249	Identifier	t3		1207576	0					
ANR	1208250	MultiplicativeExpression	t2 * ti		1207576	1		*			
ANR	1208251	Identifier	t2		1207576	0					
ANR	1208252	Identifier	ti		1207576	1					
ANR	1208253	IdentifierDeclStatement	"double omt = 1 - ti , omt2 = omt * omt , omt3 = omt2 * omt ;"	525:8:20453:20509	1207576	2	True				
ANR	1208254	IdentifierDecl	omt = 1 - ti		1207576	0					
ANR	1208255	IdentifierDeclType	double		1207576	0					
ANR	1208256	Identifier	omt		1207576	1					
ANR	1208257	AssignmentExpression	omt = 1 - ti		1207576	2		=			
ANR	1208258	Identifier	omt		1207576	0					
ANR	1208259	AdditiveExpression	1 - ti		1207576	1		-			
ANR	1208260	PrimaryExpression	1		1207576	0					
ANR	1208261	Identifier	ti		1207576	1					
ANR	1208262	IdentifierDecl	omt2 = omt * omt		1207576	1					
ANR	1208263	IdentifierDeclType	double		1207576	0					
ANR	1208264	Identifier	omt2		1207576	1					
ANR	1208265	AssignmentExpression	omt2 = omt * omt		1207576	2		=			
ANR	1208266	Identifier	omt2		1207576	0					
ANR	1208267	MultiplicativeExpression	omt * omt		1207576	1		*			
ANR	1208268	Identifier	omt		1207576	0					
ANR	1208269	Identifier	omt		1207576	1					
ANR	1208270	IdentifierDecl	omt3 = omt2 * omt		1207576	2					
ANR	1208271	IdentifierDeclType	double		1207576	0					
ANR	1208272	Identifier	omt3		1207576	1					
ANR	1208273	AssignmentExpression	omt3 = omt2 * omt		1207576	2		=			
ANR	1208274	Identifier	omt3		1207576	0					
ANR	1208275	MultiplicativeExpression	omt2 * omt		1207576	1		*			
ANR	1208276	Identifier	omt2		1207576	0					
ANR	1208277	Identifier	omt		1207576	1					
ANR	1208278	IdentifierDeclStatement	double x = x0 * omt3 + 3 * pc -> p1 . x * omt2 * ti + 3 * pc -> p2 . x * omt * t2 + pc -> pt . x * t3 ;	526:8:20519:20608	1207576	3	True				
ANR	1208279	IdentifierDecl	x = x0 * omt3 + 3 * pc -> p1 . x * omt2 * ti + 3 * pc -> p2 . x * omt * t2 + pc -> pt . x * t3		1207576	0					
ANR	1208280	IdentifierDeclType	double		1207576	0					
ANR	1208281	Identifier	x		1207576	1					
ANR	1208282	AssignmentExpression	x = x0 * omt3 + 3 * pc -> p1 . x * omt2 * ti + 3 * pc -> p2 . x * omt * t2 + pc -> pt . x * t3		1207576	2		=			
ANR	1208283	Identifier	x		1207576	0					
ANR	1208284	AdditiveExpression	x0 * omt3 + 3 * pc -> p1 . x * omt2 * ti + 3 * pc -> p2 . x * omt * t2 + pc -> pt . x * t3		1207576	1		+			
ANR	1208285	MultiplicativeExpression	x0 * omt3		1207576	0		*			
ANR	1208286	Identifier	x0		1207576	0					
ANR	1208287	Identifier	omt3		1207576	1					
ANR	1208288	AdditiveExpression	3 * pc -> p1 . x * omt2 * ti + 3 * pc -> p2 . x * omt * t2 + pc -> pt . x * t3		1207576	1		+			
ANR	1208289	MultiplicativeExpression	3 * pc -> p1 . x * omt2 * ti		1207576	0		*			
ANR	1208290	PrimaryExpression	3		1207576	0					
ANR	1208291	MultiplicativeExpression	pc -> p1 . x * omt2 * ti		1207576	1		*			
ANR	1208292	MemberAccess	pc -> p1 . x		1207576	0					
ANR	1208293	PtrMemberAccess	pc -> p1		1207576	0					
ANR	1208294	Identifier	pc		1207576	0					
ANR	1208295	Identifier	p1		1207576	1					
ANR	1208296	Identifier	x		1207576	1					
ANR	1208297	MultiplicativeExpression	omt2 * ti		1207576	1		*			
ANR	1208298	Identifier	omt2		1207576	0					
ANR	1208299	Identifier	ti		1207576	1					
ANR	1208300	AdditiveExpression	3 * pc -> p2 . x * omt * t2 + pc -> pt . x * t3		1207576	1		+			
ANR	1208301	MultiplicativeExpression	3 * pc -> p2 . x * omt * t2		1207576	0		*			
ANR	1208302	PrimaryExpression	3		1207576	0					
ANR	1208303	MultiplicativeExpression	pc -> p2 . x * omt * t2		1207576	1		*			
ANR	1208304	MemberAccess	pc -> p2 . x		1207576	0					
ANR	1208305	PtrMemberAccess	pc -> p2		1207576	0					
ANR	1208306	Identifier	pc		1207576	0					
ANR	1208307	Identifier	p2		1207576	1					
ANR	1208308	Identifier	x		1207576	1					
ANR	1208309	MultiplicativeExpression	omt * t2		1207576	1		*			
ANR	1208310	Identifier	omt		1207576	0					
ANR	1208311	Identifier	t2		1207576	1					
ANR	1208312	MultiplicativeExpression	pc -> pt . x * t3		1207576	1		*			
ANR	1208313	MemberAccess	pc -> pt . x		1207576	0					
ANR	1208314	PtrMemberAccess	pc -> pt		1207576	0					
ANR	1208315	Identifier	pc		1207576	0					
ANR	1208316	Identifier	pt		1207576	1					
ANR	1208317	Identifier	x		1207576	1					
ANR	1208318	Identifier	t3		1207576	1					
ANR	1208319	IdentifierDeclStatement	double y = y0 * omt3 + 3 * pc -> p1 . y * omt2 * ti + 3 * pc -> p2 . y * omt * t2 + pc -> pt . y * t3 ;	527:8:20618:20707	1207576	4	True				
ANR	1208320	IdentifierDecl	y = y0 * omt3 + 3 * pc -> p1 . y * omt2 * ti + 3 * pc -> p2 . y * omt * t2 + pc -> pt . y * t3		1207576	0					
ANR	1208321	IdentifierDeclType	double		1207576	0					
ANR	1208322	Identifier	y		1207576	1					
ANR	1208323	AssignmentExpression	y = y0 * omt3 + 3 * pc -> p1 . y * omt2 * ti + 3 * pc -> p2 . y * omt * t2 + pc -> pt . y * t3		1207576	2		=			
ANR	1208324	Identifier	y		1207576	0					
ANR	1208325	AdditiveExpression	y0 * omt3 + 3 * pc -> p1 . y * omt2 * ti + 3 * pc -> p2 . y * omt * t2 + pc -> pt . y * t3		1207576	1		+			
ANR	1208326	MultiplicativeExpression	y0 * omt3		1207576	0		*			
ANR	1208327	Identifier	y0		1207576	0					
ANR	1208328	Identifier	omt3		1207576	1					
ANR	1208329	AdditiveExpression	3 * pc -> p1 . y * omt2 * ti + 3 * pc -> p2 . y * omt * t2 + pc -> pt . y * t3		1207576	1		+			
ANR	1208330	MultiplicativeExpression	3 * pc -> p1 . y * omt2 * ti		1207576	0		*			
ANR	1208331	PrimaryExpression	3		1207576	0					
ANR	1208332	MultiplicativeExpression	pc -> p1 . y * omt2 * ti		1207576	1		*			
ANR	1208333	MemberAccess	pc -> p1 . y		1207576	0					
ANR	1208334	PtrMemberAccess	pc -> p1		1207576	0					
ANR	1208335	Identifier	pc		1207576	0					
ANR	1208336	Identifier	p1		1207576	1					
ANR	1208337	Identifier	y		1207576	1					
ANR	1208338	MultiplicativeExpression	omt2 * ti		1207576	1		*			
ANR	1208339	Identifier	omt2		1207576	0					
ANR	1208340	Identifier	ti		1207576	1					
ANR	1208341	AdditiveExpression	3 * pc -> p2 . y * omt * t2 + pc -> pt . y * t3		1207576	1		+			
ANR	1208342	MultiplicativeExpression	3 * pc -> p2 . y * omt * t2		1207576	0		*			
ANR	1208343	PrimaryExpression	3		1207576	0					
ANR	1208344	MultiplicativeExpression	pc -> p2 . y * omt * t2		1207576	1		*			
ANR	1208345	MemberAccess	pc -> p2 . y		1207576	0					
ANR	1208346	PtrMemberAccess	pc -> p2		1207576	0					
ANR	1208347	Identifier	pc		1207576	0					
ANR	1208348	Identifier	p2		1207576	1					
ANR	1208349	Identifier	y		1207576	1					
ANR	1208350	MultiplicativeExpression	omt * t2		1207576	1		*			
ANR	1208351	Identifier	omt		1207576	0					
ANR	1208352	Identifier	t2		1207576	1					
ANR	1208353	MultiplicativeExpression	pc -> pt . y * t3		1207576	1		*			
ANR	1208354	MemberAccess	pc -> pt . y		1207576	0					
ANR	1208355	PtrMemberAccess	pc -> pt		1207576	0					
ANR	1208356	Identifier	pc		1207576	0					
ANR	1208357	Identifier	pt		1207576	1					
ANR	1208358	Identifier	y		1207576	1					
ANR	1208359	Identifier	t3		1207576	1					
ANR	1208360	IdentifierDeclStatement	double ddx = ( c [ i ] & 1 ? 0 : ax * t2 + bx * ti + cx ) ;	528:8:20717:20769	1207576	5	True				
ANR	1208361	IdentifierDecl	ddx = ( c [ i ] & 1 ? 0 : ax * t2 + bx * ti + cx )		1207576	0					
ANR	1208362	IdentifierDeclType	double		1207576	0					
ANR	1208363	Identifier	ddx		1207576	1					
ANR	1208364	AssignmentExpression	ddx = ( c [ i ] & 1 ? 0 : ax * t2 + bx * ti + cx )		1207576	2		=			
ANR	1208365	Identifier	ddx		1207576	0					
ANR	1208366	ConditionalExpression	c [ i ] & 1 ? 0 : ax * t2 + bx * ti + cx		1207576	1					
ANR	1208367	Condition	c [ i ] & 1		1207576	0					
ANR	1208368	BitAndExpression	c [ i ] & 1		1207576	0		&			
ANR	1208369	ArrayIndexing	c [ i ]		1207576	0					
ANR	1208370	Identifier	c		1207576	0					
ANR	1208371	Identifier	i		1207576	1					
ANR	1208372	PrimaryExpression	1		1207576	1					
ANR	1208373	PrimaryExpression	0		1207576	1					
ANR	1208374	AdditiveExpression	ax * t2 + bx * ti + cx		1207576	2		+			
ANR	1208375	MultiplicativeExpression	ax * t2		1207576	0		*			
ANR	1208376	Identifier	ax		1207576	0					
ANR	1208377	Identifier	t2		1207576	1					
ANR	1208378	AdditiveExpression	bx * ti + cx		1207576	1		+			
ANR	1208379	MultiplicativeExpression	bx * ti		1207576	0		*			
ANR	1208380	Identifier	bx		1207576	0					
ANR	1208381	Identifier	ti		1207576	1					
ANR	1208382	Identifier	cx		1207576	1					
ANR	1208383	IdentifierDeclStatement	double ddy = ( c [ i ] & 2 ? 0 : ay * t2 + by * ti + cy ) ;	529:8:20801:20853	1207576	6	True				
ANR	1208384	IdentifierDecl	ddy = ( c [ i ] & 2 ? 0 : ay * t2 + by * ti + cy )		1207576	0					
ANR	1208385	IdentifierDeclType	double		1207576	0					
ANR	1208386	Identifier	ddy		1207576	1					
ANR	1208387	AssignmentExpression	ddy = ( c [ i ] & 2 ? 0 : ay * t2 + by * ti + cy )		1207576	2		=			
ANR	1208388	Identifier	ddy		1207576	0					
ANR	1208389	ConditionalExpression	c [ i ] & 2 ? 0 : ay * t2 + by * ti + cy		1207576	1					
ANR	1208390	Condition	c [ i ] & 2		1207576	0					
ANR	1208391	BitAndExpression	c [ i ] & 2		1207576	0		&			
ANR	1208392	ArrayIndexing	c [ i ]		1207576	0					
ANR	1208393	Identifier	c		1207576	0					
ANR	1208394	Identifier	i		1207576	1					
ANR	1208395	PrimaryExpression	2		1207576	1					
ANR	1208396	PrimaryExpression	0		1207576	1					
ANR	1208397	AdditiveExpression	ay * t2 + by * ti + cy		1207576	2		+			
ANR	1208398	MultiplicativeExpression	ay * t2		1207576	0		*			
ANR	1208399	Identifier	ay		1207576	0					
ANR	1208400	Identifier	t2		1207576	1					
ANR	1208401	AdditiveExpression	by * ti + cy		1207576	1		+			
ANR	1208402	MultiplicativeExpression	by * ti		1207576	0		*			
ANR	1208403	Identifier	by		1207576	0					
ANR	1208404	Identifier	ti		1207576	1					
ANR	1208405	Identifier	cy		1207576	1					
ANR	1208406	IdentifierDeclStatement	fixed dx = ( fixed ) ( ddx + 0.5 ) ;	530:8:20863:20892	1207576	7	True				
ANR	1208407	IdentifierDecl	dx = ( fixed ) ( ddx + 0.5 )		1207576	0					
ANR	1208408	IdentifierDeclType	fixed		1207576	0					
ANR	1208409	Identifier	dx		1207576	1					
ANR	1208410	AssignmentExpression	dx = ( fixed ) ( ddx + 0.5 )		1207576	2		=			
ANR	1208411	Identifier	dx		1207576	0					
ANR	1208412	CastExpression	( fixed ) ( ddx + 0.5 )		1207576	1					
ANR	1208413	CastTarget	fixed		1207576	0					
ANR	1208414	AdditiveExpression	ddx + 0.5		1207576	1		+			
ANR	1208415	Identifier	ddx		1207576	0					
ANR	1208416	PrimaryExpression	0.5		1207576	1					
ANR	1208417	IdentifierDeclStatement	fixed dy = ( fixed ) ( ddy + 0.5 ) ;	531:8:20902:20931	1207576	8	True				
ANR	1208418	IdentifierDecl	dy = ( fixed ) ( ddy + 0.5 )		1207576	0					
ANR	1208419	IdentifierDeclType	fixed		1207576	0					
ANR	1208420	Identifier	dy		1207576	1					
ANR	1208421	AssignmentExpression	dy = ( fixed ) ( ddy + 0.5 )		1207576	2		=			
ANR	1208422	Identifier	dy		1207576	0					
ANR	1208423	CastExpression	( fixed ) ( ddy + 0.5 )		1207576	1					
ANR	1208424	CastTarget	fixed		1207576	0					
ANR	1208425	AdditiveExpression	ddy + 0.5		1207576	1		+			
ANR	1208426	Identifier	ddy		1207576	0					
ANR	1208427	PrimaryExpression	0.5		1207576	1					
ANR	1208428	IdentifierDeclStatement	int code ;	532:8:20941:20949	1207576	9	True				
ANR	1208429	IdentifierDecl	code		1207576	0					
ANR	1208430	IdentifierDeclType	int		1207576	0					
ANR	1208431	Identifier	code		1207576	1					
ANR	1208432	ExpressionStatement	tt = ( i + 1 < n ? t [ i + 1 ] : 1 ) - ti	534:8:20960:20996	1207576	10	True				
ANR	1208433	AssignmentExpression	tt = ( i + 1 < n ? t [ i + 1 ] : 1 ) - ti		1207576	0		=			
ANR	1208434	Identifier	tt		1207576	0					
ANR	1208435	AdditiveExpression	( i + 1 < n ? t [ i + 1 ] : 1 ) - ti		1207576	1		-			
ANR	1208436	ConditionalExpression	i + 1 < n ? t [ i + 1 ] : 1		1207576	0					
ANR	1208437	Condition	i + 1 < n		1207576	0					
ANR	1208438	RelationalExpression	i + 1 < n		1207576	0		<			
ANR	1208439	AdditiveExpression	i + 1		1207576	0		+			
ANR	1208440	Identifier	i		1207576	0					
ANR	1208441	PrimaryExpression	1		1207576	1					
ANR	1208442	Identifier	n		1207576	1					
ANR	1208443	ArrayIndexing	t [ i + 1 ]		1207576	1					
ANR	1208444	Identifier	t		1207576	0					
ANR	1208445	AdditiveExpression	i + 1		1207576	1		+			
ANR	1208446	Identifier	i		1207576	0					
ANR	1208447	PrimaryExpression	1		1207576	1					
ANR	1208448	PrimaryExpression	1		1207576	2					
ANR	1208449	Identifier	ti		1207576	1					
ANR	1208450	ExpressionStatement	rx = ( fixed ) ( dx * ( t [ i ] - tp ) / 3 + 0.5 )	535:8:21006:21046	1207576	11	True				
ANR	1208451	AssignmentExpression	rx = ( fixed ) ( dx * ( t [ i ] - tp ) / 3 + 0.5 )		1207576	0		=			
ANR	1208452	Identifier	rx		1207576	0					
ANR	1208453	CastExpression	( fixed ) ( dx * ( t [ i ] - tp ) / 3 + 0.5 )		1207576	1					
ANR	1208454	CastTarget	fixed		1207576	0					
ANR	1208455	AdditiveExpression	dx * ( t [ i ] - tp ) / 3 + 0.5		1207576	1		+			
ANR	1208456	MultiplicativeExpression	dx * ( t [ i ] - tp ) / 3		1207576	0		*			
ANR	1208457	Identifier	dx		1207576	0					
ANR	1208458	MultiplicativeExpression	( t [ i ] - tp ) / 3		1207576	1		/			
ANR	1208459	AdditiveExpression	t [ i ] - tp		1207576	0		-			
ANR	1208460	ArrayIndexing	t [ i ]		1207576	0					
ANR	1208461	Identifier	t		1207576	0					
ANR	1208462	Identifier	i		1207576	1					
ANR	1208463	Identifier	tp		1207576	1					
ANR	1208464	PrimaryExpression	3		1207576	1					
ANR	1208465	PrimaryExpression	0.5		1207576	1					
ANR	1208466	ExpressionStatement	ry = ( fixed ) ( dy * ( t [ i ] - tp ) / 3 + 0.5 )	536:8:21056:21096	1207576	12	True				
ANR	1208467	AssignmentExpression	ry = ( fixed ) ( dy * ( t [ i ] - tp ) / 3 + 0.5 )		1207576	0		=			
ANR	1208468	Identifier	ry		1207576	0					
ANR	1208469	CastExpression	( fixed ) ( dy * ( t [ i ] - tp ) / 3 + 0.5 )		1207576	1					
ANR	1208470	CastTarget	fixed		1207576	0					
ANR	1208471	AdditiveExpression	dy * ( t [ i ] - tp ) / 3 + 0.5		1207576	1		+			
ANR	1208472	MultiplicativeExpression	dy * ( t [ i ] - tp ) / 3		1207576	0		*			
ANR	1208473	Identifier	dy		1207576	0					
ANR	1208474	MultiplicativeExpression	( t [ i ] - tp ) / 3		1207576	1		/			
ANR	1208475	AdditiveExpression	t [ i ] - tp		1207576	0		-			
ANR	1208476	ArrayIndexing	t [ i ]		1207576	0					
ANR	1208477	Identifier	t		1207576	0					
ANR	1208478	Identifier	i		1207576	1					
ANR	1208479	Identifier	tp		1207576	1					
ANR	1208480	PrimaryExpression	3		1207576	1					
ANR	1208481	PrimaryExpression	0.5		1207576	1					
ANR	1208482	ExpressionStatement	sx = ( fixed ) ( x + 0.5 )	537:8:21106:21127	1207576	13	True				
ANR	1208483	AssignmentExpression	sx = ( fixed ) ( x + 0.5 )		1207576	0		=			
ANR	1208484	Identifier	sx		1207576	0					
ANR	1208485	CastExpression	( fixed ) ( x + 0.5 )		1207576	1					
ANR	1208486	CastTarget	fixed		1207576	0					
ANR	1208487	AdditiveExpression	x + 0.5		1207576	1		+			
ANR	1208488	Identifier	x		1207576	0					
ANR	1208489	PrimaryExpression	0.5		1207576	1					
ANR	1208490	ExpressionStatement	sy = ( fixed ) ( y + 0.5 )	538:8:21137:21158	1207576	14	True				
ANR	1208491	AssignmentExpression	sy = ( fixed ) ( y + 0.5 )		1207576	0		=			
ANR	1208492	Identifier	sy		1207576	0					
ANR	1208493	CastExpression	( fixed ) ( y + 0.5 )		1207576	1					
ANR	1208494	CastTarget	fixed		1207576	0					
ANR	1208495	AdditiveExpression	y + 0.5		1207576	1		+			
ANR	1208496	Identifier	y		1207576	0					
ANR	1208497	PrimaryExpression	0.5		1207576	1					
ANR	1208498	IfStatement	if ( ( double ) ( sx - px ) * qx + ( double ) ( sy - py ) * qy < 0 )		1207576	15					
ANR	1208499	Condition	( double ) ( sx - px ) * qx + ( double ) ( sy - py ) * qy < 0	540:12:21235:21285	1207576	0	True				
ANR	1208500	RelationalExpression	( double ) ( sx - px ) * qx + ( double ) ( sy - py ) * qy < 0		1207576	0		<			
ANR	1208501	AdditiveExpression	( double ) ( sx - px ) * qx + ( double ) ( sy - py ) * qy		1207576	0		+			
ANR	1208502	MultiplicativeExpression	( double ) ( sx - px ) * qx		1207576	0		*			
ANR	1208503	CastExpression	( double ) ( sx - px )		1207576	0					
ANR	1208504	CastTarget	double		1207576	0					
ANR	1208505	AdditiveExpression	sx - px		1207576	1		-			
ANR	1208506	Identifier	sx		1207576	0					
ANR	1208507	Identifier	px		1207576	1					
ANR	1208508	Identifier	qx		1207576	1					
ANR	1208509	MultiplicativeExpression	( double ) ( sy - py ) * qy		1207576	1		*			
ANR	1208510	CastExpression	( double ) ( sy - py )		1207576	0					
ANR	1208511	CastTarget	double		1207576	0					
ANR	1208512	AdditiveExpression	sy - py		1207576	1		-			
ANR	1208513	Identifier	sy		1207576	0					
ANR	1208514	Identifier	py		1207576	1					
ANR	1208515	Identifier	qy		1207576	1					
ANR	1208516	PrimaryExpression	0		1207576	1					
ANR	1208517	ExpressionStatement	"qx = - qx , qy = - qy"	541:12:21300:21318	1207576	1	True				
ANR	1208518	Expression	"qx = - qx , qy = - qy"		1207576	0					
ANR	1208519	AssignmentExpression	qx = - qx		1207576	0		=			
ANR	1208520	Identifier	qx		1207576	0					
ANR	1208521	UnaryOperationExpression	- qx		1207576	1					
ANR	1208522	UnaryOperator	-		1207576	0					
ANR	1208523	Identifier	qx		1207576	1					
ANR	1208524	AssignmentExpression	qy = - qy		1207576	1		=			
ANR	1208525	Identifier	qy		1207576	0					
ANR	1208526	UnaryOperationExpression	- qy		1207576	1					
ANR	1208527	UnaryOperator	-		1207576	0					
ANR	1208528	Identifier	qy		1207576	1					
ANR	1208529	IfStatement	if ( ( double ) ( sx - px ) * rx + ( double ) ( sy - py ) * ry < 0 )		1207576	16					
ANR	1208530	Condition	( double ) ( sx - px ) * rx + ( double ) ( sy - py ) * ry < 0	542:12:21332:21382	1207576	0	True				
ANR	1208531	RelationalExpression	( double ) ( sx - px ) * rx + ( double ) ( sy - py ) * ry < 0		1207576	0		<			
ANR	1208532	AdditiveExpression	( double ) ( sx - px ) * rx + ( double ) ( sy - py ) * ry		1207576	0		+			
ANR	1208533	MultiplicativeExpression	( double ) ( sx - px ) * rx		1207576	0		*			
ANR	1208534	CastExpression	( double ) ( sx - px )		1207576	0					
ANR	1208535	CastTarget	double		1207576	0					
ANR	1208536	AdditiveExpression	sx - px		1207576	1		-			
ANR	1208537	Identifier	sx		1207576	0					
ANR	1208538	Identifier	px		1207576	1					
ANR	1208539	Identifier	rx		1207576	1					
ANR	1208540	MultiplicativeExpression	( double ) ( sy - py ) * ry		1207576	1		*			
ANR	1208541	CastExpression	( double ) ( sy - py )		1207576	0					
ANR	1208542	CastTarget	double		1207576	0					
ANR	1208543	AdditiveExpression	sy - py		1207576	1		-			
ANR	1208544	Identifier	sy		1207576	0					
ANR	1208545	Identifier	py		1207576	1					
ANR	1208546	Identifier	ry		1207576	1					
ANR	1208547	PrimaryExpression	0		1207576	1					
ANR	1208548	ExpressionStatement	"rx = - rx , ry = - qy"	543:12:21397:21415	1207576	1	True				
ANR	1208549	Expression	"rx = - rx , ry = - qy"		1207576	0					
ANR	1208550	AssignmentExpression	rx = - rx		1207576	0		=			
ANR	1208551	Identifier	rx		1207576	0					
ANR	1208552	UnaryOperationExpression	- rx		1207576	1					
ANR	1208553	UnaryOperator	-		1207576	0					
ANR	1208554	Identifier	rx		1207576	1					
ANR	1208555	AssignmentExpression	ry = - qy		1207576	1		=			
ANR	1208556	Identifier	ry		1207576	0					
ANR	1208557	UnaryOperationExpression	- qy		1207576	1					
ANR	1208558	UnaryOperator	-		1207576	0					
ANR	1208559	Identifier	qy		1207576	1					
ANR	1208560	ExpressionStatement	"code = gx_path_add_curve_notes ( ppath , px + qx , py + qy , sx - rx , sy - ry , sx , sy , notes )"	545:8:21448:21536	1207576	17	True				
ANR	1208561	AssignmentExpression	"code = gx_path_add_curve_notes ( ppath , px + qx , py + qy , sx - rx , sy - ry , sx , sy , notes )"		1207576	0		=			
ANR	1208562	Identifier	code		1207576	0					
ANR	1208563	CallExpression	"gx_path_add_curve_notes ( ppath , px + qx , py + qy , sx - rx , sy - ry , sx , sy , notes )"		1207576	1					
ANR	1208564	Callee	gx_path_add_curve_notes		1207576	0					
ANR	1208565	Identifier	gx_path_add_curve_notes		1207576	0					
ANR	1208566	ArgumentList	ppath		1207576	1					
ANR	1208567	Argument	ppath		1207576	0					
ANR	1208568	Identifier	ppath		1207576	0					
ANR	1208569	Argument	px + qx		1207576	1					
ANR	1208570	AdditiveExpression	px + qx		1207576	0		+			
ANR	1208571	Identifier	px		1207576	0					
ANR	1208572	Identifier	qx		1207576	1					
ANR	1208573	Argument	py + qy		1207576	2					
ANR	1208574	AdditiveExpression	py + qy		1207576	0		+			
ANR	1208575	Identifier	py		1207576	0					
ANR	1208576	Identifier	qy		1207576	1					
ANR	1208577	Argument	sx - rx		1207576	3					
ANR	1208578	AdditiveExpression	sx - rx		1207576	0		-			
ANR	1208579	Identifier	sx		1207576	0					
ANR	1208580	Identifier	rx		1207576	1					
ANR	1208581	Argument	sy - ry		1207576	4					
ANR	1208582	AdditiveExpression	sy - ry		1207576	0		-			
ANR	1208583	Identifier	sy		1207576	0					
ANR	1208584	Identifier	ry		1207576	1					
ANR	1208585	Argument	sx		1207576	5					
ANR	1208586	Identifier	sx		1207576	0					
ANR	1208587	Argument	sy		1207576	6					
ANR	1208588	Identifier	sy		1207576	0					
ANR	1208589	Argument	notes		1207576	7					
ANR	1208590	Identifier	notes		1207576	0					
ANR	1208591	IfStatement	if ( code < 0 )		1207576	18					
ANR	1208592	Condition	code < 0	546:12:21550:21557	1207576	0	True				
ANR	1208593	RelationalExpression	code < 0		1207576	0		<			
ANR	1208594	Identifier	code		1207576	0					
ANR	1208595	PrimaryExpression	0		1207576	1					
ANR	1208596	ReturnStatement	return code ;	547:12:21572:21583	1207576	1	True				
ANR	1208597	Identifier	code		1207576	0					
ANR	1208598	ExpressionStatement	notes |= sn_not_first	548:8:21593:21614	1207576	19	True				
ANR	1208599	AssignmentExpression	notes |= sn_not_first		1207576	0		|=			
ANR	1208600	Identifier	notes		1207576	0					
ANR	1208601	Identifier	sn_not_first		1207576	1					
ANR	1208602	ExpressionStatement	px = sx	549:8:21624:21631	1207576	20	True				
ANR	1208603	AssignmentExpression	px = sx		1207576	0		=			
ANR	1208604	Identifier	px		1207576	0					
ANR	1208605	Identifier	sx		1207576	1					
ANR	1208606	ExpressionStatement	py = sy	550:8:21641:21648	1207576	21	True				
ANR	1208607	AssignmentExpression	py = sy		1207576	0		=			
ANR	1208608	Identifier	py		1207576	0					
ANR	1208609	Identifier	sy		1207576	1					
ANR	1208610	ExpressionStatement	qx = ( fixed ) ( dx * tt / 3 + 0.5 )	551:8:21658:21689	1207576	22	True				
ANR	1208611	AssignmentExpression	qx = ( fixed ) ( dx * tt / 3 + 0.5 )		1207576	0		=			
ANR	1208612	Identifier	qx		1207576	0					
ANR	1208613	CastExpression	( fixed ) ( dx * tt / 3 + 0.5 )		1207576	1					
ANR	1208614	CastTarget	fixed		1207576	0					
ANR	1208615	AdditiveExpression	dx * tt / 3 + 0.5		1207576	1		+			
ANR	1208616	MultiplicativeExpression	dx * tt / 3		1207576	0		*			
ANR	1208617	Identifier	dx		1207576	0					
ANR	1208618	MultiplicativeExpression	tt / 3		1207576	1		/			
ANR	1208619	Identifier	tt		1207576	0					
ANR	1208620	PrimaryExpression	3		1207576	1					
ANR	1208621	PrimaryExpression	0.5		1207576	1					
ANR	1208622	ExpressionStatement	qy = ( fixed ) ( dy * tt / 3 + 0.5 )	552:8:21699:21730	1207576	23	True				
ANR	1208623	AssignmentExpression	qy = ( fixed ) ( dy * tt / 3 + 0.5 )		1207576	0		=			
ANR	1208624	Identifier	qy		1207576	0					
ANR	1208625	CastExpression	( fixed ) ( dy * tt / 3 + 0.5 )		1207576	1					
ANR	1208626	CastTarget	fixed		1207576	0					
ANR	1208627	AdditiveExpression	dy * tt / 3 + 0.5		1207576	1		+			
ANR	1208628	MultiplicativeExpression	dy * tt / 3		1207576	0		*			
ANR	1208629	Identifier	dy		1207576	0					
ANR	1208630	MultiplicativeExpression	tt / 3		1207576	1		/			
ANR	1208631	Identifier	tt		1207576	0					
ANR	1208632	PrimaryExpression	3		1207576	1					
ANR	1208633	PrimaryExpression	0.5		1207576	1					
ANR	1208634	ExpressionStatement	tp = t [ i ]	553:8:21740:21749	1207576	24	True				
ANR	1208635	AssignmentExpression	tp = t [ i ]		1207576	0		=			
ANR	1208636	Identifier	tp		1207576	0					
ANR	1208637	ArrayIndexing	t [ i ]		1207576	1					
ANR	1208638	Identifier	t		1207576	0					
ANR	1208639	Identifier	i		1207576	1					
ANR	1208640	ExpressionStatement	sx = pc -> pt . x	555:4:21761:21774	1207576	31	True				
ANR	1208641	AssignmentExpression	sx = pc -> pt . x		1207576	0		=			
ANR	1208642	Identifier	sx		1207576	0					
ANR	1208643	MemberAccess	pc -> pt . x		1207576	1					
ANR	1208644	PtrMemberAccess	pc -> pt		1207576	0					
ANR	1208645	Identifier	pc		1207576	0					
ANR	1208646	Identifier	pt		1207576	1					
ANR	1208647	Identifier	x		1207576	1					
ANR	1208648	ExpressionStatement	sy = pc -> pt . y	556:4:21780:21793	1207576	32	True				
ANR	1208649	AssignmentExpression	sy = pc -> pt . y		1207576	0		=			
ANR	1208650	Identifier	sy		1207576	0					
ANR	1208651	MemberAccess	pc -> pt . y		1207576	1					
ANR	1208652	PtrMemberAccess	pc -> pt		1207576	0					
ANR	1208653	Identifier	pc		1207576	0					
ANR	1208654	Identifier	pt		1207576	1					
ANR	1208655	Identifier	y		1207576	1					
ANR	1208656	ExpressionStatement	rx = ( fixed ) ( ( pc -> pt . x - pc -> p2 . x ) * tt + 0.5 )	557:4:21799:21845	1207576	33	True				
ANR	1208657	AssignmentExpression	rx = ( fixed ) ( ( pc -> pt . x - pc -> p2 . x ) * tt + 0.5 )		1207576	0		=			
ANR	1208658	Identifier	rx		1207576	0					
ANR	1208659	CastExpression	( fixed ) ( ( pc -> pt . x - pc -> p2 . x ) * tt + 0.5 )		1207576	1					
ANR	1208660	CastTarget	fixed		1207576	0					
ANR	1208661	AdditiveExpression	( pc -> pt . x - pc -> p2 . x ) * tt + 0.5		1207576	1		+			
ANR	1208662	MultiplicativeExpression	( pc -> pt . x - pc -> p2 . x ) * tt		1207576	0		*			
ANR	1208663	AdditiveExpression	pc -> pt . x - pc -> p2 . x		1207576	0		-			
ANR	1208664	MemberAccess	pc -> pt . x		1207576	0					
ANR	1208665	PtrMemberAccess	pc -> pt		1207576	0					
ANR	1208666	Identifier	pc		1207576	0					
ANR	1208667	Identifier	pt		1207576	1					
ANR	1208668	Identifier	x		1207576	1					
ANR	1208669	MemberAccess	pc -> p2 . x		1207576	1					
ANR	1208670	PtrMemberAccess	pc -> p2		1207576	0					
ANR	1208671	Identifier	pc		1207576	0					
ANR	1208672	Identifier	p2		1207576	1					
ANR	1208673	Identifier	x		1207576	1					
ANR	1208674	Identifier	tt		1207576	1					
ANR	1208675	PrimaryExpression	0.5		1207576	1					
ANR	1208676	ExpressionStatement	ry = ( fixed ) ( ( pc -> pt . y - pc -> p2 . y ) * tt + 0.5 )	558:4:21851:21897	1207576	34	True				
ANR	1208677	AssignmentExpression	ry = ( fixed ) ( ( pc -> pt . y - pc -> p2 . y ) * tt + 0.5 )		1207576	0		=			
ANR	1208678	Identifier	ry		1207576	0					
ANR	1208679	CastExpression	( fixed ) ( ( pc -> pt . y - pc -> p2 . y ) * tt + 0.5 )		1207576	1					
ANR	1208680	CastTarget	fixed		1207576	0					
ANR	1208681	AdditiveExpression	( pc -> pt . y - pc -> p2 . y ) * tt + 0.5		1207576	1		+			
ANR	1208682	MultiplicativeExpression	( pc -> pt . y - pc -> p2 . y ) * tt		1207576	0		*			
ANR	1208683	AdditiveExpression	pc -> pt . y - pc -> p2 . y		1207576	0		-			
ANR	1208684	MemberAccess	pc -> pt . y		1207576	0					
ANR	1208685	PtrMemberAccess	pc -> pt		1207576	0					
ANR	1208686	Identifier	pc		1207576	0					
ANR	1208687	Identifier	pt		1207576	1					
ANR	1208688	Identifier	y		1207576	1					
ANR	1208689	MemberAccess	pc -> p2 . y		1207576	1					
ANR	1208690	PtrMemberAccess	pc -> p2		1207576	0					
ANR	1208691	Identifier	pc		1207576	0					
ANR	1208692	Identifier	p2		1207576	1					
ANR	1208693	Identifier	y		1207576	1					
ANR	1208694	Identifier	tt		1207576	1					
ANR	1208695	PrimaryExpression	0.5		1207576	1					
ANR	1208696	IfStatement	if ( ( double ) ( sx - px ) * qx + ( double ) ( sy - py ) * qy < 0 )		1207576	35					
ANR	1208697	Condition	( double ) ( sx - px ) * qx + ( double ) ( sy - py ) * qy < 0	560:8:21965:22015	1207576	0	True				
ANR	1208698	RelationalExpression	( double ) ( sx - px ) * qx + ( double ) ( sy - py ) * qy < 0		1207576	0		<			
ANR	1208699	AdditiveExpression	( double ) ( sx - px ) * qx + ( double ) ( sy - py ) * qy		1207576	0		+			
ANR	1208700	MultiplicativeExpression	( double ) ( sx - px ) * qx		1207576	0		*			
ANR	1208701	CastExpression	( double ) ( sx - px )		1207576	0					
ANR	1208702	CastTarget	double		1207576	0					
ANR	1208703	AdditiveExpression	sx - px		1207576	1		-			
ANR	1208704	Identifier	sx		1207576	0					
ANR	1208705	Identifier	px		1207576	1					
ANR	1208706	Identifier	qx		1207576	1					
ANR	1208707	MultiplicativeExpression	( double ) ( sy - py ) * qy		1207576	1		*			
ANR	1208708	CastExpression	( double ) ( sy - py )		1207576	0					
ANR	1208709	CastTarget	double		1207576	0					
ANR	1208710	AdditiveExpression	sy - py		1207576	1		-			
ANR	1208711	Identifier	sy		1207576	0					
ANR	1208712	Identifier	py		1207576	1					
ANR	1208713	Identifier	qy		1207576	1					
ANR	1208714	PrimaryExpression	0		1207576	1					
ANR	1208715	ExpressionStatement	"qx = - qx , qy = - qy"	561:8:22026:22044	1207576	1	True				
ANR	1208716	Expression	"qx = - qx , qy = - qy"		1207576	0					
ANR	1208717	AssignmentExpression	qx = - qx		1207576	0		=			
ANR	1208718	Identifier	qx		1207576	0					
ANR	1208719	UnaryOperationExpression	- qx		1207576	1					
ANR	1208720	UnaryOperator	-		1207576	0					
ANR	1208721	Identifier	qx		1207576	1					
ANR	1208722	AssignmentExpression	qy = - qy		1207576	1		=			
ANR	1208723	Identifier	qy		1207576	0					
ANR	1208724	UnaryOperationExpression	- qy		1207576	1					
ANR	1208725	UnaryOperator	-		1207576	0					
ANR	1208726	Identifier	qy		1207576	1					
ANR	1208727	IfStatement	if ( ( double ) ( sx - px ) * rx + ( double ) ( sy - py ) * ry < 0 )		1207576	36					
ANR	1208728	Condition	( double ) ( sx - px ) * rx + ( double ) ( sy - py ) * ry < 0	562:8:22054:22104	1207576	0	True				
ANR	1208729	RelationalExpression	( double ) ( sx - px ) * rx + ( double ) ( sy - py ) * ry < 0		1207576	0		<			
ANR	1208730	AdditiveExpression	( double ) ( sx - px ) * rx + ( double ) ( sy - py ) * ry		1207576	0		+			
ANR	1208731	MultiplicativeExpression	( double ) ( sx - px ) * rx		1207576	0		*			
ANR	1208732	CastExpression	( double ) ( sx - px )		1207576	0					
ANR	1208733	CastTarget	double		1207576	0					
ANR	1208734	AdditiveExpression	sx - px		1207576	1		-			
ANR	1208735	Identifier	sx		1207576	0					
ANR	1208736	Identifier	px		1207576	1					
ANR	1208737	Identifier	rx		1207576	1					
ANR	1208738	MultiplicativeExpression	( double ) ( sy - py ) * ry		1207576	1		*			
ANR	1208739	CastExpression	( double ) ( sy - py )		1207576	0					
ANR	1208740	CastTarget	double		1207576	0					
ANR	1208741	AdditiveExpression	sy - py		1207576	1		-			
ANR	1208742	Identifier	sy		1207576	0					
ANR	1208743	Identifier	py		1207576	1					
ANR	1208744	Identifier	ry		1207576	1					
ANR	1208745	PrimaryExpression	0		1207576	1					
ANR	1208746	ExpressionStatement	"rx = - rx , ry = - qy"	563:8:22115:22133	1207576	1	True				
ANR	1208747	Expression	"rx = - rx , ry = - qy"		1207576	0					
ANR	1208748	AssignmentExpression	rx = - rx		1207576	0		=			
ANR	1208749	Identifier	rx		1207576	0					
ANR	1208750	UnaryOperationExpression	- rx		1207576	1					
ANR	1208751	UnaryOperator	-		1207576	0					
ANR	1208752	Identifier	rx		1207576	1					
ANR	1208753	AssignmentExpression	ry = - qy		1207576	1		=			
ANR	1208754	Identifier	ry		1207576	0					
ANR	1208755	UnaryOperationExpression	- qy		1207576	1					
ANR	1208756	UnaryOperator	-		1207576	0					
ANR	1208757	Identifier	qy		1207576	1					
ANR	1208758	ReturnStatement	"return gx_path_add_curve_notes ( ppath , px + qx , py + qy , sx - rx , sy - ry , sx , sy , notes ) ;"	564:4:22139:22227	1207576	37	True				
ANR	1208759	CallExpression	"gx_path_add_curve_notes ( ppath , px + qx , py + qy , sx - rx , sy - ry , sx , sy , notes )"		1207576	0					
ANR	1208760	Callee	gx_path_add_curve_notes		1207576	0					
ANR	1208761	Identifier	gx_path_add_curve_notes		1207576	0					
ANR	1208762	ArgumentList	ppath		1207576	1					
ANR	1208763	Argument	ppath		1207576	0					
ANR	1208764	Identifier	ppath		1207576	0					
ANR	1208765	Argument	px + qx		1207576	1					
ANR	1208766	AdditiveExpression	px + qx		1207576	0		+			
ANR	1208767	Identifier	px		1207576	0					
ANR	1208768	Identifier	qx		1207576	1					
ANR	1208769	Argument	py + qy		1207576	2					
ANR	1208770	AdditiveExpression	py + qy		1207576	0		+			
ANR	1208771	Identifier	py		1207576	0					
ANR	1208772	Identifier	qy		1207576	1					
ANR	1208773	Argument	sx - rx		1207576	3					
ANR	1208774	AdditiveExpression	sx - rx		1207576	0		-			
ANR	1208775	Identifier	sx		1207576	0					
ANR	1208776	Identifier	rx		1207576	1					
ANR	1208777	Argument	sy - ry		1207576	4					
ANR	1208778	AdditiveExpression	sy - ry		1207576	0		-			
ANR	1208779	Identifier	sy		1207576	0					
ANR	1208780	Identifier	ry		1207576	1					
ANR	1208781	Argument	sx		1207576	5					
ANR	1208782	Identifier	sx		1207576	0					
ANR	1208783	Argument	sy		1207576	6					
ANR	1208784	Identifier	sy		1207576	0					
ANR	1208785	Argument	notes		1207576	7					
ANR	1208786	Identifier	notes		1207576	0					
ANR	1208787	ReturnType	int		1207576	1					
ANR	1208788	Identifier	gx_curve_monotonize		1207576	2					
ANR	1208789	ParameterList	"gx_path * ppath , const curve_segment * pc"		1207576	3					
ANR	1208790	Parameter	gx_path * ppath	461:20:18327:18341	1207576	0	True				
ANR	1208791	ParameterType	gx_path *		1207576	0					
ANR	1208792	Identifier	ppath		1207576	1					
ANR	1208793	Parameter	const curve_segment * pc	461:37:18344:18367	1207576	1	True				
ANR	1208794	ParameterType	const curve_segment *		1207576	0					
ANR	1208795	Identifier	pc		1207576	1					
ANR	1208796	CFGEntryNode	ENTRY		1207576		True				
ANR	1208797	CFGExitNode	EXIT		1207576		True				
ANR	1208798	Symbol	tt		1207576						
ANR	1208799	Symbol	gx_curve_monotonic_points		1207576						
ANR	1208800	Symbol	n0		1207576						
ANR	1208801	Symbol	notes		1207576						
ANR	1208802	Symbol	n1		1207576						
ANR	1208803	Symbol	pc -> p1 . y		1207576						
ANR	1208804	Symbol	pc -> p1 . x		1207576						
ANR	1208805	Symbol	px		1207576						
ANR	1208806	Symbol	delta		1207576						
ANR	1208807	Symbol	py		1207576						
ANR	1208808	Symbol	pc -> pt . x		1207576						
ANR	1208809	Symbol	pc -> pt . y		1207576						
ANR	1208810	Symbol	pc -> p2 . x		1207576						
ANR	1208811	Symbol	dx		1207576						
ANR	1208812	Symbol	pc -> p2 . y		1207576						
ANR	1208813	Symbol	dy		1207576						
ANR	1208814	Symbol	v12		1207576						
ANR	1208815	Symbol	pc -> p2		1207576						
ANR	1208816	Symbol	gx_path_add_curve_notes		1207576						
ANR	1208817	Symbol	pc -> p1		1207576						
ANR	1208818	Symbol	* ppath		1207576						
ANR	1208819	Symbol	qx		1207576						
ANR	1208820	Symbol	pc -> notes		1207576						
ANR	1208821	Symbol	qy		1207576						
ANR	1208822	Symbol	omt2		1207576						
ANR	1208823	Symbol	omt3		1207576						
ANR	1208824	Symbol	ppath -> position . x		1207576						
ANR	1208825	Symbol	* n0		1207576						
ANR	1208826	Symbol	ppath -> position . y		1207576						
ANR	1208827	Symbol	ax		1207576						
ANR	1208828	Symbol	x0		1207576						
ANR	1208829	Symbol	ay		1207576						
ANR	1208830	Symbol	* pc		1207576						
ANR	1208831	Symbol	t2		1207576						
ANR	1208832	Symbol	t3		1207576						
ANR	1208833	Symbol	code		1207576						
ANR	1208834	Symbol	rx		1207576						
ANR	1208835	Symbol	ry		1207576						
ANR	1208836	Symbol	ppath		1207576						
ANR	1208837	Symbol	bx		1207576						
ANR	1208838	Symbol	y0		1207576						
ANR	1208839	Symbol	by		1207576						
ANR	1208840	Symbol	omt		1207576						
ANR	1208841	Symbol	pc -> pt		1207576						
ANR	1208842	Symbol	any_abs		1207576						
ANR	1208843	Symbol	c		1207576						
ANR	1208844	Symbol	sx		1207576						
ANR	1208845	Symbol	sy		1207576						
ANR	1208846	Symbol	i		1207576						
ANR	1208847	Symbol	j		1207576						
ANR	1208848	Symbol	k		1207576						
ANR	1208849	Symbol	* c		1207576						
ANR	1208850	Symbol	n		1207576						
ANR	1208851	Symbol	pc		1207576						
ANR	1208852	Symbol	* i		1207576						
ANR	1208853	Symbol	t		1207576						
ANR	1208854	Symbol	* j		1207576						
ANR	1208855	Symbol	cx		1207576						
ANR	1208856	Symbol	* k		1207576						
ANR	1208857	Symbol	ti		1207576						
ANR	1208858	Symbol	v01		1207576						
ANR	1208859	Symbol	cy		1207576						
ANR	1208860	Symbol	v		1207576						
ANR	1208861	Symbol	w		1207576						
ANR	1208862	Symbol	* n		1207576						
ANR	1208863	Symbol	x		1207576						
ANR	1208864	Symbol	ddy		1207576						
ANR	1208865	Symbol	y		1207576						
ANR	1208866	Symbol	ddx		1207576						
ANR	1208867	Symbol	sn_not_first		1207576						
ANR	1208868	Symbol	ppath -> position		1207576						
ANR	1208869	Symbol	tp		1207576						
ANR	1208870	Symbol	* t		1207576						
ANR	1208871	Function	gx_curve_monotonic_points	574:0:22586:27450							
ANR	1208872	FunctionDef	"gx_curve_monotonic_points (fixed v0 , fixed v1 , fixed v2 , fixed v3 , double pst [ 2 ])"		1208871	0					
ANR	1208873	CompoundStatement		577:0:22697:27450	1208871	0					
ANR	1208874	IdentifierDeclStatement	"fixed v01 , v12 , a , b , c , b2 , a3 ;"	595:4:23466:23497	1208871	0	True				
ANR	1208875	IdentifierDecl	v01		1208871	0					
ANR	1208876	IdentifierDeclType	fixed		1208871	0					
ANR	1208877	Identifier	v01		1208871	1					
ANR	1208878	IdentifierDecl	v12		1208871	1					
ANR	1208879	IdentifierDeclType	fixed		1208871	0					
ANR	1208880	Identifier	v12		1208871	1					
ANR	1208881	IdentifierDecl	a		1208871	2					
ANR	1208882	IdentifierDeclType	fixed		1208871	0					
ANR	1208883	Identifier	a		1208871	1					
ANR	1208884	IdentifierDecl	b		1208871	3					
ANR	1208885	IdentifierDeclType	fixed		1208871	0					
ANR	1208886	Identifier	b		1208871	1					
ANR	1208887	IdentifierDecl	c		1208871	4					
ANR	1208888	IdentifierDeclType	fixed		1208871	0					
ANR	1208889	Identifier	c		1208871	1					
ANR	1208890	IdentifierDecl	b2		1208871	5					
ANR	1208891	IdentifierDeclType	fixed		1208871	0					
ANR	1208892	Identifier	b2		1208871	1					
ANR	1208893	IdentifierDecl	a3		1208871	6					
ANR	1208894	IdentifierDeclType	fixed		1208871	0					
ANR	1208895	Identifier	a3		1208871	1					
ANR	1208896	IdentifierDeclStatement	"fixed dv_end , b2abs , a3abs ;"	596:4:23503:23529	1208871	1	True				
ANR	1208897	IdentifierDecl	dv_end		1208871	0					
ANR	1208898	IdentifierDeclType	fixed		1208871	0					
ANR	1208899	Identifier	dv_end		1208871	1					
ANR	1208900	IdentifierDecl	b2abs		1208871	1					
ANR	1208901	IdentifierDeclType	fixed		1208871	0					
ANR	1208902	Identifier	b2abs		1208871	1					
ANR	1208903	IdentifierDecl	a3abs		1208871	2					
ANR	1208904	IdentifierDeclType	fixed		1208871	0					
ANR	1208905	Identifier	a3abs		1208871	1					
ANR	1208906	ExpressionStatement	"curve_points_to_coefficients ( v0 , v1 , v2 , v3 , a , b , c , v01 , v12 )"	598:4:23536:23599	1208871	2	True				
ANR	1208907	CallExpression	"curve_points_to_coefficients ( v0 , v1 , v2 , v3 , a , b , c , v01 , v12 )"		1208871	0					
ANR	1208908	Callee	curve_points_to_coefficients		1208871	0					
ANR	1208909	Identifier	curve_points_to_coefficients		1208871	0					
ANR	1208910	ArgumentList	v0		1208871	1					
ANR	1208911	Argument	v0		1208871	0					
ANR	1208912	Identifier	v0		1208871	0					
ANR	1208913	Argument	v1		1208871	1					
ANR	1208914	Identifier	v1		1208871	0					
ANR	1208915	Argument	v2		1208871	2					
ANR	1208916	Identifier	v2		1208871	0					
ANR	1208917	Argument	v3		1208871	3					
ANR	1208918	Identifier	v3		1208871	0					
ANR	1208919	Argument	a		1208871	4					
ANR	1208920	Identifier	a		1208871	0					
ANR	1208921	Argument	b		1208871	5					
ANR	1208922	Identifier	b		1208871	0					
ANR	1208923	Argument	c		1208871	6					
ANR	1208924	Identifier	c		1208871	0					
ANR	1208925	Argument	v01		1208871	7					
ANR	1208926	Identifier	v01		1208871	0					
ANR	1208927	Argument	v12		1208871	8					
ANR	1208928	Identifier	v12		1208871	0					
ANR	1208929	ExpressionStatement	b2 = b << 1	599:4:23605:23616	1208871	3	True				
ANR	1208930	AssignmentExpression	b2 = b << 1		1208871	0		=			
ANR	1208931	Identifier	b2		1208871	0					
ANR	1208932	ShiftExpression	b << 1		1208871	1		<<			
ANR	1208933	Identifier	b		1208871	0					
ANR	1208934	PrimaryExpression	1		1208871	1					
ANR	1208935	ExpressionStatement	a3 = ( a << 1 ) + a	600:4:23622:23639	1208871	4	True				
ANR	1208936	AssignmentExpression	a3 = ( a << 1 ) + a		1208871	0		=			
ANR	1208937	Identifier	a3		1208871	0					
ANR	1208938	AdditiveExpression	( a << 1 ) + a		1208871	1		+			
ANR	1208939	ShiftExpression	a << 1		1208871	0		<<			
ANR	1208940	Identifier	a		1208871	0					
ANR	1208941	PrimaryExpression	1		1208871	1					
ANR	1208942	Identifier	a		1208871	1					
ANR	1208943	IfStatement	if ( a == 0 )		1208871	5					
ANR	1208944	Condition	a == 0	605:8:23791:23796	1208871	0	True				
ANR	1208945	EqualityExpression	a == 0		1208871	0		==			
ANR	1208946	Identifier	a		1208871	0					
ANR	1208947	PrimaryExpression	0		1208871	1					
ANR	1208948	CompoundStatement		29:16:1101:1101	1208871	1					
ANR	1208949	IfStatement	if ( ( b ^ c ) < 0 && any_abs ( c ) < any_abs ( b2 ) && c != 0 )		1208871	0					
ANR	1208950	Condition	( b ^ c ) < 0 && any_abs ( c ) < any_abs ( b2 ) && c != 0	606:12:23813:23861	1208871	0	True				
ANR	1208951	AndExpression	( b ^ c ) < 0 && any_abs ( c ) < any_abs ( b2 ) && c != 0		1208871	0		&&			
ANR	1208952	RelationalExpression	( b ^ c ) < 0		1208871	0		<			
ANR	1208953	ExclusiveOrExpression	b ^ c		1208871	0		^			
ANR	1208954	Identifier	b		1208871	0					
ANR	1208955	Identifier	c		1208871	1					
ANR	1208956	PrimaryExpression	0		1208871	1					
ANR	1208957	AndExpression	any_abs ( c ) < any_abs ( b2 ) && c != 0		1208871	1		&&			
ANR	1208958	RelationalExpression	any_abs ( c ) < any_abs ( b2 )		1208871	0		<			
ANR	1208959	CallExpression	any_abs ( c )		1208871	0					
ANR	1208960	Callee	any_abs		1208871	0					
ANR	1208961	Identifier	any_abs		1208871	0					
ANR	1208962	ArgumentList	c		1208871	1					
ANR	1208963	Argument	c		1208871	0					
ANR	1208964	Identifier	c		1208871	0					
ANR	1208965	CallExpression	any_abs ( b2 )		1208871	1					
ANR	1208966	Callee	any_abs		1208871	0					
ANR	1208967	Identifier	any_abs		1208871	0					
ANR	1208968	ArgumentList	b2		1208871	1					
ANR	1208969	Argument	b2		1208871	0					
ANR	1208970	Identifier	b2		1208871	0					
ANR	1208971	EqualityExpression	c != 0		1208871	1		!=			
ANR	1208972	Identifier	c		1208871	0					
ANR	1208973	PrimaryExpression	0		1208871	1					
ANR	1208974	CompoundStatement		30:63:1166:1166	1208871	1					
ANR	1208975	ExpressionStatement	* pst = ( double ) ( - c ) / b2	607:12:23878:23902	1208871	0	True				
ANR	1208976	AssignmentExpression	* pst = ( double ) ( - c ) / b2		1208871	0		=			
ANR	1208977	UnaryOperationExpression	* pst		1208871	0					
ANR	1208978	UnaryOperator	*		1208871	0					
ANR	1208979	Identifier	pst		1208871	1					
ANR	1208980	MultiplicativeExpression	( double ) ( - c ) / b2		1208871	1		/			
ANR	1208981	CastExpression	( double ) ( - c )		1208871	0					
ANR	1208982	CastTarget	double		1208871	0					
ANR	1208983	UnaryOperationExpression	- c		1208871	1					
ANR	1208984	UnaryOperator	-		1208871	0					
ANR	1208985	Identifier	c		1208871	1					
ANR	1208986	Identifier	b2		1208871	1					
ANR	1208987	ReturnStatement	return 1 ;	608:12:23916:23924	1208871	1	True				
ANR	1208988	PrimaryExpression	1		1208871	0					
ANR	1208989	ElseStatement	else		1208871	0					
ANR	1208990	ReturnStatement	return 0 ;	610:12:23953:23961	1208871	0	True				
ANR	1208991	PrimaryExpression	0		1208871	0					
ANR	1208992	IfStatement	if ( c == 0 )		1208871	6					
ANR	1208993	Condition	c == 0	617:8:24188:24193	1208871	0	True				
ANR	1208994	EqualityExpression	c == 0		1208871	0		==			
ANR	1208995	Identifier	c		1208871	0					
ANR	1208996	PrimaryExpression	0		1208871	1					
ANR	1208997	CompoundStatement		41:16:1498:1498	1208871	1					
ANR	1208998	IfStatement	if ( ( a ^ b ) < 0 && any_abs ( b2 ) < any_abs ( a3 ) && b != 0 )		1208871	0					
ANR	1208999	Condition	( a ^ b ) < 0 && any_abs ( b2 ) < any_abs ( a3 ) && b != 0	618:12:24210:24259	1208871	0	True				
ANR	1209000	AndExpression	( a ^ b ) < 0 && any_abs ( b2 ) < any_abs ( a3 ) && b != 0		1208871	0		&&			
ANR	1209001	RelationalExpression	( a ^ b ) < 0		1208871	0		<			
ANR	1209002	ExclusiveOrExpression	a ^ b		1208871	0		^			
ANR	1209003	Identifier	a		1208871	0					
ANR	1209004	Identifier	b		1208871	1					
ANR	1209005	PrimaryExpression	0		1208871	1					
ANR	1209006	AndExpression	any_abs ( b2 ) < any_abs ( a3 ) && b != 0		1208871	1		&&			
ANR	1209007	RelationalExpression	any_abs ( b2 ) < any_abs ( a3 )		1208871	0		<			
ANR	1209008	CallExpression	any_abs ( b2 )		1208871	0					
ANR	1209009	Callee	any_abs		1208871	0					
ANR	1209010	Identifier	any_abs		1208871	0					
ANR	1209011	ArgumentList	b2		1208871	1					
ANR	1209012	Argument	b2		1208871	0					
ANR	1209013	Identifier	b2		1208871	0					
ANR	1209014	CallExpression	any_abs ( a3 )		1208871	1					
ANR	1209015	Callee	any_abs		1208871	0					
ANR	1209016	Identifier	any_abs		1208871	0					
ANR	1209017	ArgumentList	a3		1208871	1					
ANR	1209018	Argument	a3		1208871	0					
ANR	1209019	Identifier	a3		1208871	0					
ANR	1209020	EqualityExpression	b != 0		1208871	1		!=			
ANR	1209021	Identifier	b		1208871	0					
ANR	1209022	PrimaryExpression	0		1208871	1					
ANR	1209023	CompoundStatement		42:64:1564:1564	1208871	1					
ANR	1209024	ExpressionStatement	* pst = ( double ) ( - b2 ) / a3	619:12:24276:24301	1208871	0	True				
ANR	1209025	AssignmentExpression	* pst = ( double ) ( - b2 ) / a3		1208871	0		=			
ANR	1209026	UnaryOperationExpression	* pst		1208871	0					
ANR	1209027	UnaryOperator	*		1208871	0					
ANR	1209028	Identifier	pst		1208871	1					
ANR	1209029	MultiplicativeExpression	( double ) ( - b2 ) / a3		1208871	1		/			
ANR	1209030	CastExpression	( double ) ( - b2 )		1208871	0					
ANR	1209031	CastTarget	double		1208871	0					
ANR	1209032	UnaryOperationExpression	- b2		1208871	1					
ANR	1209033	UnaryOperator	-		1208871	0					
ANR	1209034	Identifier	b2		1208871	1					
ANR	1209035	Identifier	a3		1208871	1					
ANR	1209036	ReturnStatement	return 1 ;	620:12:24315:24323	1208871	1	True				
ANR	1209037	PrimaryExpression	1		1208871	0					
ANR	1209038	ElseStatement	else		1208871	0					
ANR	1209039	ReturnStatement	return 0 ;	622:12:24352:24360	1208871	0	True				
ANR	1209040	PrimaryExpression	0		1208871	0					
ANR	1209041	ElseStatement	else		1208871	0					
ANR	1209042	IfStatement	if ( ( dv_end = a3 + b2 + c ) == 0 )		1208871	0					
ANR	1209043	Condition	( dv_end = a3 + b2 + c ) == 0	630:13:24636:24662	1208871	0	True				
ANR	1209044	EqualityExpression	( dv_end = a3 + b2 + c ) == 0		1208871	0		==			
ANR	1209045	AssignmentExpression	dv_end = a3 + b2 + c		1208871	0		=			
ANR	1209046	Identifier	dv_end		1208871	0					
ANR	1209047	AdditiveExpression	a3 + b2 + c		1208871	1		+			
ANR	1209048	Identifier	a3		1208871	0					
ANR	1209049	AdditiveExpression	b2 + c		1208871	1		+			
ANR	1209050	Identifier	b2		1208871	0					
ANR	1209051	Identifier	c		1208871	1					
ANR	1209052	PrimaryExpression	0		1208871	1					
ANR	1209053	CompoundStatement		54:42:1967:1967	1208871	1					
ANR	1209054	IfStatement	if ( ( a ^ b ) < 0 && ( b2abs = any_abs ( b2 ) ) > ( a3abs = any_abs ( a3 ) ) && b2abs < a3abs << 1 )		1208871	0					
ANR	1209055	Condition	( a ^ b ) < 0 && ( b2abs = any_abs ( b2 ) ) > ( a3abs = any_abs ( a3 ) ) && b2abs < a3abs << 1	631:12:24679:24784	1208871	0	True				
ANR	1209056	AndExpression	( a ^ b ) < 0 && ( b2abs = any_abs ( b2 ) ) > ( a3abs = any_abs ( a3 ) ) && b2abs < a3abs << 1		1208871	0		&&			
ANR	1209057	RelationalExpression	( a ^ b ) < 0		1208871	0		<			
ANR	1209058	ExclusiveOrExpression	a ^ b		1208871	0		^			
ANR	1209059	Identifier	a		1208871	0					
ANR	1209060	Identifier	b		1208871	1					
ANR	1209061	PrimaryExpression	0		1208871	1					
ANR	1209062	AndExpression	( b2abs = any_abs ( b2 ) ) > ( a3abs = any_abs ( a3 ) ) && b2abs < a3abs << 1		1208871	1		&&			
ANR	1209063	RelationalExpression	( b2abs = any_abs ( b2 ) ) > ( a3abs = any_abs ( a3 ) )		1208871	0		>			
ANR	1209064	AssignmentExpression	b2abs = any_abs ( b2 )		1208871	0		=			
ANR	1209065	Identifier	b2abs		1208871	0					
ANR	1209066	CallExpression	any_abs ( b2 )		1208871	1					
ANR	1209067	Callee	any_abs		1208871	0					
ANR	1209068	Identifier	any_abs		1208871	0					
ANR	1209069	ArgumentList	b2		1208871	1					
ANR	1209070	Argument	b2		1208871	0					
ANR	1209071	Identifier	b2		1208871	0					
ANR	1209072	AssignmentExpression	a3abs = any_abs ( a3 )		1208871	1		=			
ANR	1209073	Identifier	a3abs		1208871	0					
ANR	1209074	CallExpression	any_abs ( a3 )		1208871	1					
ANR	1209075	Callee	any_abs		1208871	0					
ANR	1209076	Identifier	any_abs		1208871	0					
ANR	1209077	ArgumentList	a3		1208871	1					
ANR	1209078	Argument	a3		1208871	0					
ANR	1209079	Identifier	a3		1208871	0					
ANR	1209080	RelationalExpression	b2abs < a3abs << 1		1208871	1		<			
ANR	1209081	Identifier	b2abs		1208871	0					
ANR	1209082	ShiftExpression	a3abs << 1		1208871	1		<<			
ANR	1209083	Identifier	a3abs		1208871	0					
ANR	1209084	PrimaryExpression	1		1208871	1					
ANR	1209085	CompoundStatement		58:14:2102:2102	1208871	1					
ANR	1209086	ExpressionStatement	* pst = ( double ) ( - b2 - a3 ) / a3	635:12:24814:24844	1208871	0	True				
ANR	1209087	AssignmentExpression	* pst = ( double ) ( - b2 - a3 ) / a3		1208871	0		=			
ANR	1209088	UnaryOperationExpression	* pst		1208871	0					
ANR	1209089	UnaryOperator	*		1208871	0					
ANR	1209090	Identifier	pst		1208871	1					
ANR	1209091	MultiplicativeExpression	( double ) ( - b2 - a3 ) / a3		1208871	1		/			
ANR	1209092	CastExpression	( double ) ( - b2 - a3 )		1208871	0					
ANR	1209093	CastTarget	double		1208871	0					
ANR	1209094	AdditiveExpression	- b2 - a3		1208871	1		-			
ANR	1209095	UnaryOperationExpression	- b2		1208871	0					
ANR	1209096	UnaryOperator	-		1208871	0					
ANR	1209097	Identifier	b2		1208871	1					
ANR	1209098	Identifier	a3		1208871	1					
ANR	1209099	Identifier	a3		1208871	1					
ANR	1209100	ReturnStatement	return 1 ;	636:12:24858:24866	1208871	1	True				
ANR	1209101	PrimaryExpression	1		1208871	0					
ANR	1209102	ElseStatement	else		1208871	0					
ANR	1209103	ReturnStatement	return 0 ;	638:12:24895:24903	1208871	0	True				
ANR	1209104	PrimaryExpression	0		1208871	0					
ANR	1209105	ElseStatement	else		1208871	0					
ANR	1209106	IfStatement	if ( ( dv_end ^ c ) < 0 )		1208871	0					
ANR	1209107	Condition	( dv_end ^ c ) < 0	645:13:25125:25140	1208871	0	True				
ANR	1209108	RelationalExpression	( dv_end ^ c ) < 0		1208871	0		<			
ANR	1209109	ExclusiveOrExpression	dv_end ^ c		1208871	0		^			
ANR	1209110	Identifier	dv_end		1208871	0					
ANR	1209111	Identifier	c		1208871	1					
ANR	1209112	PrimaryExpression	0		1208871	1					
ANR	1209113	ExpressionStatement		645:30:25142:25142	1208871	1	True				
ANR	1209114	ElseStatement	else		1208871	0					
ANR	1209115	IfStatement	if ( ( a ^ b ) >= 0 )		1208871	0					
ANR	1209116	Condition	( a ^ b ) >= 0	651:13:25310:25321	1208871	0	True				
ANR	1209117	RelationalExpression	( a ^ b ) >= 0		1208871	0		>=			
ANR	1209118	ExclusiveOrExpression	a ^ b		1208871	0		^			
ANR	1209119	Identifier	a		1208871	0					
ANR	1209120	Identifier	b		1208871	1					
ANR	1209121	PrimaryExpression	0		1208871	1					
ANR	1209122	ReturnStatement	return 0 ;	652:8:25332:25340	1208871	1	True				
ANR	1209123	PrimaryExpression	0		1208871	0					
ANR	1209124	ElseStatement	else		1208871	0					
ANR	1209125	IfStatement	if ( any_abs ( b ) >= any_abs ( a3 ) )		1208871	0					
ANR	1209126	Condition	any_abs ( b ) >= any_abs ( a3 )	666:13:25954:25978	1208871	0	True				
ANR	1209127	RelationalExpression	any_abs ( b ) >= any_abs ( a3 )		1208871	0		>=			
ANR	1209128	CallExpression	any_abs ( b )		1208871	0					
ANR	1209129	Callee	any_abs		1208871	0					
ANR	1209130	Identifier	any_abs		1208871	0					
ANR	1209131	ArgumentList	b		1208871	1					
ANR	1209132	Argument	b		1208871	0					
ANR	1209133	Identifier	b		1208871	0					
ANR	1209134	CallExpression	any_abs ( a3 )		1208871	1					
ANR	1209135	Callee	any_abs		1208871	0					
ANR	1209136	Identifier	any_abs		1208871	0					
ANR	1209137	ArgumentList	a3		1208871	1					
ANR	1209138	Argument	a3		1208871	0					
ANR	1209139	Identifier	a3		1208871	0					
ANR	1209140	ReturnStatement	return 0 ;	667:8:25989:25997	1208871	1	True				
ANR	1209141	PrimaryExpression	0		1208871	0					
ANR	1209142	CompoundStatement		101:8:3663:3700	1208871	7					
ANR	1209143	IdentifierDeclStatement	double nbf = ( double ) ( - b ) ;	675:8:26293:26318	1208871	0	True				
ANR	1209144	IdentifierDecl	nbf = ( double ) ( - b )		1208871	0					
ANR	1209145	IdentifierDeclType	double		1208871	0					
ANR	1209146	Identifier	nbf		1208871	1					
ANR	1209147	AssignmentExpression	nbf = ( double ) ( - b )		1208871	2		=			
ANR	1209148	Identifier	nbf		1208871	0					
ANR	1209149	CastExpression	( double ) ( - b )		1208871	1					
ANR	1209150	CastTarget	double		1208871	0					
ANR	1209151	UnaryOperationExpression	- b		1208871	1					
ANR	1209152	UnaryOperator	-		1208871	0					
ANR	1209153	Identifier	b		1208871	1					
ANR	1209154	IdentifierDeclStatement	double a3f = ( double ) a3 ;	676:8:26328:26351	1208871	1	True				
ANR	1209155	IdentifierDecl	a3f = ( double ) a3		1208871	0					
ANR	1209156	IdentifierDeclType	double		1208871	0					
ANR	1209157	Identifier	a3f		1208871	1					
ANR	1209158	AssignmentExpression	a3f = ( double ) a3		1208871	2		=			
ANR	1209159	Identifier	a3f		1208871	0					
ANR	1209160	CastExpression	( double ) a3		1208871	1					
ANR	1209161	CastTarget	double		1208871	0					
ANR	1209162	Identifier	a3		1208871	1					
ANR	1209163	IdentifierDeclStatement	double radicand = nbf * nbf - a3f * c ;	677:8:26361:26398	1208871	2	True				
ANR	1209164	IdentifierDecl	radicand = nbf * nbf - a3f * c		1208871	0					
ANR	1209165	IdentifierDeclType	double		1208871	0					
ANR	1209166	Identifier	radicand		1208871	1					
ANR	1209167	AssignmentExpression	radicand = nbf * nbf - a3f * c		1208871	2		=			
ANR	1209168	Identifier	radicand		1208871	0					
ANR	1209169	AdditiveExpression	nbf * nbf - a3f * c		1208871	1		-			
ANR	1209170	MultiplicativeExpression	nbf * nbf		1208871	0		*			
ANR	1209171	Identifier	nbf		1208871	0					
ANR	1209172	Identifier	nbf		1208871	1					
ANR	1209173	MultiplicativeExpression	a3f * c		1208871	1		*			
ANR	1209174	Identifier	a3f		1208871	0					
ANR	1209175	Identifier	c		1208871	1					
ANR	1209176	IfStatement	if ( radicand < 0 )		1208871	3					
ANR	1209177	Condition	radicand < 0	679:12:26413:26424	1208871	0	True				
ANR	1209178	RelationalExpression	radicand < 0		1208871	0		<			
ANR	1209179	Identifier	radicand		1208871	0					
ANR	1209180	PrimaryExpression	0		1208871	1					
ANR	1209181	CompoundStatement		103:26:3729:3729	1208871	1					
ANR	1209182	ExpressionStatement	"if_debug1 ( '2' , ""[2]negative radicand = %g\\n"" , radicand )"	680:12:26441:26496	1208871	0	True				
ANR	1209183	CallExpression	"if_debug1 ( '2' , ""[2]negative radicand = %g\\n"" , radicand )"		1208871	0					
ANR	1209184	Callee	if_debug1		1208871	0					
ANR	1209185	Identifier	if_debug1		1208871	0					
ANR	1209186	ArgumentList	'2'		1208871	1					
ANR	1209187	Argument	'2'		1208871	0					
ANR	1209188	PrimaryExpression	'2'		1208871	0					
ANR	1209189	Argument	"""[2]negative radicand = %g\\n"""		1208871	1					
ANR	1209190	PrimaryExpression	"""[2]negative radicand = %g\\n"""		1208871	0					
ANR	1209191	Argument	radicand		1208871	2					
ANR	1209192	Identifier	radicand		1208871	0					
ANR	1209193	ReturnStatement	return 0 ;	681:12:26510:26518	1208871	1	True				
ANR	1209194	PrimaryExpression	0		1208871	0					
ANR	1209195	CompoundStatement		109:12:3916:3945	1208871	4					
ANR	1209196	IdentifierDeclStatement	double root = sqrt ( radicand ) ;	683:12:26544:26572	1208871	0	True				
ANR	1209197	IdentifierDecl	root = sqrt ( radicand )		1208871	0					
ANR	1209198	IdentifierDeclType	double		1208871	0					
ANR	1209199	Identifier	root		1208871	1					
ANR	1209200	AssignmentExpression	root = sqrt ( radicand )		1208871	2		=			
ANR	1209201	Identifier	root		1208871	0					
ANR	1209202	CallExpression	sqrt ( radicand )		1208871	1					
ANR	1209203	Callee	sqrt		1208871	0					
ANR	1209204	Identifier	sqrt		1208871	0					
ANR	1209205	ArgumentList	radicand		1208871	1					
ANR	1209206	Argument	radicand		1208871	0					
ANR	1209207	Identifier	radicand		1208871	0					
ANR	1209208	IdentifierDeclStatement	int nzeros = 0 ;	684:12:26586:26600	1208871	1	True				
ANR	1209209	IdentifierDecl	nzeros = 0		1208871	0					
ANR	1209210	IdentifierDeclType	int		1208871	0					
ANR	1209211	Identifier	nzeros		1208871	1					
ANR	1209212	AssignmentExpression	nzeros = 0		1208871	2		=			
ANR	1209213	Identifier	nzeros		1208871	0					
ANR	1209214	PrimaryExpression	0		1208871	1					
ANR	1209215	IdentifierDeclStatement	double z = ( nbf - root ) / a3f ;	685:12:26614:26643	1208871	2	True				
ANR	1209216	IdentifierDecl	z = ( nbf - root ) / a3f		1208871	0					
ANR	1209217	IdentifierDeclType	double		1208871	0					
ANR	1209218	Identifier	z		1208871	1					
ANR	1209219	AssignmentExpression	z = ( nbf - root ) / a3f		1208871	2		=			
ANR	1209220	Identifier	z		1208871	0					
ANR	1209221	MultiplicativeExpression	( nbf - root ) / a3f		1208871	1		/			
ANR	1209222	AdditiveExpression	nbf - root		1208871	0		-			
ANR	1209223	Identifier	nbf		1208871	0					
ANR	1209224	Identifier	root		1208871	1					
ANR	1209225	Identifier	a3f		1208871	1					
ANR	1209226	ExpressionStatement	"if_debug2 ( '2' , ""[2]zeros at %g, %g\\n"" , z , ( nbf + root ) / a3f )"	693:12:26923:26984	1208871	3	True				
ANR	1209227	CallExpression	"if_debug2 ( '2' , ""[2]zeros at %g, %g\\n"" , z , ( nbf + root ) / a3f )"		1208871	0					
ANR	1209228	Callee	if_debug2		1208871	0					
ANR	1209229	Identifier	if_debug2		1208871	0					
ANR	1209230	ArgumentList	'2'		1208871	1					
ANR	1209231	Argument	'2'		1208871	0					
ANR	1209232	PrimaryExpression	'2'		1208871	0					
ANR	1209233	Argument	"""[2]zeros at %g, %g\\n"""		1208871	1					
ANR	1209234	PrimaryExpression	"""[2]zeros at %g, %g\\n"""		1208871	0					
ANR	1209235	Argument	z		1208871	2					
ANR	1209236	Identifier	z		1208871	0					
ANR	1209237	Argument	( nbf + root ) / a3f		1208871	3					
ANR	1209238	MultiplicativeExpression	( nbf + root ) / a3f		1208871	0		/			
ANR	1209239	AdditiveExpression	nbf + root		1208871	0		+			
ANR	1209240	Identifier	nbf		1208871	0					
ANR	1209241	Identifier	root		1208871	1					
ANR	1209242	Identifier	a3f		1208871	1					
ANR	1209243	IfStatement	if ( z > 0 && z < 1 )		1208871	4					
ANR	1209244	Condition	z > 0 && z < 1	694:16:27002:27015	1208871	0	True				
ANR	1209245	AndExpression	z > 0 && z < 1		1208871	0		&&			
ANR	1209246	RelationalExpression	z > 0		1208871	0		>			
ANR	1209247	Identifier	z		1208871	0					
ANR	1209248	PrimaryExpression	0		1208871	1					
ANR	1209249	RelationalExpression	z < 1		1208871	1		<			
ANR	1209250	Identifier	z		1208871	0					
ANR	1209251	PrimaryExpression	1		1208871	1					
ANR	1209252	ExpressionStatement	"* pst = z , nzeros = 1"	695:16:27034:27054	1208871	1	True				
ANR	1209253	Expression	"* pst = z , nzeros = 1"		1208871	0					
ANR	1209254	AssignmentExpression	* pst = z		1208871	0		=			
ANR	1209255	UnaryOperationExpression	* pst		1208871	0					
ANR	1209256	UnaryOperator	*		1208871	0					
ANR	1209257	Identifier	pst		1208871	1					
ANR	1209258	Identifier	z		1208871	1					
ANR	1209259	AssignmentExpression	nzeros = 1		1208871	1		=			
ANR	1209260	Identifier	nzeros		1208871	0					
ANR	1209261	PrimaryExpression	1		1208871	1					
ANR	1209262	IfStatement	if ( root != 0 )		1208871	5					
ANR	1209263	Condition	root != 0	696:16:27072:27080	1208871	0	True				
ANR	1209264	EqualityExpression	root != 0		1208871	0		!=			
ANR	1209265	Identifier	root		1208871	0					
ANR	1209266	PrimaryExpression	0		1208871	1					
ANR	1209267	CompoundStatement		120:27:4385:4385	1208871	1					
ANR	1209268	ExpressionStatement	z = ( nbf + root ) / a3f	697:16:27101:27123	1208871	0	True				
ANR	1209269	AssignmentExpression	z = ( nbf + root ) / a3f		1208871	0		=			
ANR	1209270	Identifier	z		1208871	0					
ANR	1209271	MultiplicativeExpression	( nbf + root ) / a3f		1208871	1		/			
ANR	1209272	AdditiveExpression	nbf + root		1208871	0		+			
ANR	1209273	Identifier	nbf		1208871	0					
ANR	1209274	Identifier	root		1208871	1					
ANR	1209275	Identifier	a3f		1208871	1					
ANR	1209276	IfStatement	if ( z > 0 && z < 1 )		1208871	1					
ANR	1209277	Condition	z > 0 && z < 1	698:20:27145:27158	1208871	0	True				
ANR	1209278	AndExpression	z > 0 && z < 1		1208871	0		&&			
ANR	1209279	RelationalExpression	z > 0		1208871	0		>			
ANR	1209280	Identifier	z		1208871	0					
ANR	1209281	PrimaryExpression	0		1208871	1					
ANR	1209282	RelationalExpression	z < 1		1208871	1		<			
ANR	1209283	Identifier	z		1208871	0					
ANR	1209284	PrimaryExpression	1		1208871	1					
ANR	1209285	CompoundStatement		122:36:4463:4463	1208871	1					
ANR	1209286	IfStatement	if ( nzeros && a3f < 0 )		1208871	0					
ANR	1209287	Condition	nzeros && a3f < 0	699:24:27187:27203	1208871	0	True				
ANR	1209288	AndExpression	nzeros && a3f < 0		1208871	0		&&			
ANR	1209289	Identifier	nzeros		1208871	0					
ANR	1209290	RelationalExpression	a3f < 0		1208871	1		<			
ANR	1209291	Identifier	a3f		1208871	0					
ANR	1209292	PrimaryExpression	0		1208871	1					
ANR	1209293	ExpressionStatement	"pst [ 1 ] = * pst , * pst = z"	700:24:27254:27277	1208871	1	True				
ANR	1209294	Expression	"pst [ 1 ] = * pst , * pst = z"		1208871	0					
ANR	1209295	AssignmentExpression	pst [ 1 ] = * pst		1208871	0		=			
ANR	1209296	ArrayIndexing	pst [ 1 ]		1208871	0					
ANR	1209297	Identifier	pst		1208871	0					
ANR	1209298	PrimaryExpression	1		1208871	1					
ANR	1209299	UnaryOperationExpression	* pst		1208871	1					
ANR	1209300	UnaryOperator	*		1208871	0					
ANR	1209301	Identifier	pst		1208871	1					
ANR	1209302	AssignmentExpression	* pst = z		1208871	1		=			
ANR	1209303	UnaryOperationExpression	* pst		1208871	0					
ANR	1209304	UnaryOperator	*		1208871	0					
ANR	1209305	Identifier	pst		1208871	1					
ANR	1209306	Identifier	z		1208871	1					
ANR	1209307	ElseStatement	else		1208871	0					
ANR	1209308	ExpressionStatement	pst [ nzeros ] = z	702:24:27328:27343	1208871	0	True				
ANR	1209309	AssignmentExpression	pst [ nzeros ] = z		1208871	0		=			
ANR	1209310	ArrayIndexing	pst [ nzeros ]		1208871	0					
ANR	1209311	Identifier	pst		1208871	0					
ANR	1209312	Identifier	nzeros		1208871	1					
ANR	1209313	Identifier	z		1208871	1					
ANR	1209314	ExpressionStatement	nzeros ++	703:20:27365:27373	1208871	1	True				
ANR	1209315	PostIncDecOperationExpression	nzeros ++		1208871	0					
ANR	1209316	Identifier	nzeros		1208871	0					
ANR	1209317	IncDec	++		1208871	1					
ANR	1209318	ReturnStatement	return nzeros ;	706:12:27419:27432	1208871	6	True				
ANR	1209319	Identifier	nzeros		1208871	0					
ANR	1209320	ReturnType	int		1208871	1					
ANR	1209321	Identifier	gx_curve_monotonic_points		1208871	2					
ANR	1209322	ParameterList	"fixed v0 , fixed v1 , fixed v2 , fixed v3 , double pst [ 2 ]"		1208871	3					
ANR	1209323	Parameter	fixed v0	575:26:22616:22623	1208871	0	True				
ANR	1209324	ParameterType	fixed		1208871	0					
ANR	1209325	Identifier	v0		1208871	1					
ANR	1209326	Parameter	fixed v1	575:36:22626:22633	1208871	1	True				
ANR	1209327	ParameterType	fixed		1208871	0					
ANR	1209328	Identifier	v1		1208871	1					
ANR	1209329	Parameter	fixed v2	575:46:22636:22643	1208871	2	True				
ANR	1209330	ParameterType	fixed		1208871	0					
ANR	1209331	Identifier	v2		1208871	1					
ANR	1209332	Parameter	fixed v3	575:56:22646:22653	1208871	3	True				
ANR	1209333	ParameterType	fixed		1208871	0					
ANR	1209334	Identifier	v3		1208871	1					
ANR	1209335	Parameter	double pst [ 2 ]	576:26:22682:22694	1208871	4	True				
ANR	1209336	ParameterType	double [ 2 ]		1208871	0					
ANR	1209337	Identifier	pst		1208871	1					
ANR	1209338	CFGEntryNode	ENTRY		1208871		True				
ANR	1209339	CFGExitNode	EXIT		1208871		True				
ANR	1209340	Symbol	nzeros		1208871						
ANR	1209341	Symbol	* nzeros		1208871						
ANR	1209342	Symbol	pst		1208871						
ANR	1209343	Symbol	b2		1208871						
ANR	1209344	Symbol	radicand		1208871						
ANR	1209345	Symbol	sqrt		1208871						
ANR	1209346	Symbol	v12		1208871						
ANR	1209347	Symbol	root		1208871						
ANR	1209348	Symbol	any_abs		1208871						
ANR	1209349	Symbol	b2abs		1208871						
ANR	1209350	Symbol	a		1208871						
ANR	1209351	Symbol	b		1208871						
ANR	1209352	Symbol	c		1208871						
ANR	1209353	Symbol	a3abs		1208871						
ANR	1209354	Symbol	a3		1208871						
ANR	1209355	Symbol	nbf		1208871						
ANR	1209356	Symbol	a3f		1208871						
ANR	1209357	Symbol	v01		1208871						
ANR	1209358	Symbol	v0		1208871						
ANR	1209359	Symbol	z		1208871						
ANR	1209360	Symbol	v1		1208871						
ANR	1209361	Symbol	* pst		1208871						
ANR	1209362	Symbol	v2		1208871						
ANR	1209363	Symbol	v3		1208871						
ANR	1209364	Symbol	dv_end		1208871						
ANR	1209365	Function	find_contacting_segments	713:0:27539:30236							
ANR	1209366	FunctionDef	"find_contacting_segments (const subpath * sp0 , segment * sp0last , const subpath * sp1 , segment * sp1last , segment * * sc0 , segment * * sc1)"		1209365	0					
ANR	1209367	CompoundStatement		717:0:27732:30236	1209365	0					
ANR	1209368	IdentifierDeclStatement	"segment * s0 , * s1 ;"	718:4:27738:27754	1209365	0	True				
ANR	1209369	IdentifierDecl	* s0		1209365	0					
ANR	1209370	IdentifierDeclType	segment *		1209365	0					
ANR	1209371	Identifier	s0		1209365	1					
ANR	1209372	IdentifierDecl	* s1		1209365	1					
ANR	1209373	IdentifierDeclType	segment *		1209365	0					
ANR	1209374	Identifier	s1		1209365	1					
ANR	1209375	IdentifierDeclStatement	"const segment * s0s , * s1s ;"	719:4:27760:27784	1209365	1	True				
ANR	1209376	IdentifierDecl	* s0s		1209365	0					
ANR	1209377	IdentifierDeclType	const segment *		1209365	0					
ANR	1209378	Identifier	s0s		1209365	1					
ANR	1209379	IdentifierDecl	* s1s		1209365	1					
ANR	1209380	IdentifierDeclType	const segment *		1209365	0					
ANR	1209381	Identifier	s1s		1209365	1					
ANR	1209382	IdentifierDeclStatement	"int count0 , count1 , search_limit = 50 ;"	720:4:27790:27827	1209365	2	True				
ANR	1209383	IdentifierDecl	count0		1209365	0					
ANR	1209384	IdentifierDeclType	int		1209365	0					
ANR	1209385	Identifier	count0		1209365	1					
ANR	1209386	IdentifierDecl	count1		1209365	1					
ANR	1209387	IdentifierDeclType	int		1209365	0					
ANR	1209388	Identifier	count1		1209365	1					
ANR	1209389	IdentifierDecl	search_limit = 50		1209365	2					
ANR	1209390	IdentifierDeclType	int		1209365	0					
ANR	1209391	Identifier	search_limit		1209365	1					
ANR	1209392	AssignmentExpression	search_limit = 50		1209365	2		=			
ANR	1209393	Identifier	search_limit		1209365	0					
ANR	1209394	PrimaryExpression	50		1209365	1					
ANR	1209395	IdentifierDeclStatement	int min_length = fixed_1 * 1 ;	721:4:27833:27861	1209365	3	True				
ANR	1209396	IdentifierDecl	min_length = fixed_1 * 1		1209365	0					
ANR	1209397	IdentifierDeclType	int		1209365	0					
ANR	1209398	Identifier	min_length		1209365	1					
ANR	1209399	AssignmentExpression	min_length = fixed_1 * 1		1209365	2		=			
ANR	1209400	Identifier	min_length		1209365	0					
ANR	1209401	MultiplicativeExpression	fixed_1 * 1		1209365	1		*			
ANR	1209402	Identifier	fixed_1		1209365	0					
ANR	1209403	PrimaryExpression	1		1209365	1					
ANR	1209404	ForStatement	"for ( s0 = sp0last , count0 = 0 ; count0 < search_limit && s0 != ( segment * ) sp0 ; s0 = s0 -> prev , count0 ++ )"		1209365	4					
ANR	1209405	ForInit	"s0 = sp0last , count0 = 0 ;"	732:9:28447:28471	1209365	0	True				
ANR	1209406	Expression	"s0 = sp0last , count0 = 0"		1209365	0					
ANR	1209407	AssignmentExpression	s0 = sp0last		1209365	0		=			
ANR	1209408	Identifier	s0		1209365	0					
ANR	1209409	Identifier	sp0last		1209365	1					
ANR	1209410	AssignmentExpression	count0 = 0		1209365	1		=			
ANR	1209411	Identifier	count0		1209365	0					
ANR	1209412	PrimaryExpression	0		1209365	1					
ANR	1209413	Condition	count0 < search_limit && s0 != ( segment * ) sp0	732:35:28473:28517	1209365	1	True				
ANR	1209414	AndExpression	count0 < search_limit && s0 != ( segment * ) sp0		1209365	0		&&			
ANR	1209415	RelationalExpression	count0 < search_limit		1209365	0		<			
ANR	1209416	Identifier	count0		1209365	0					
ANR	1209417	Identifier	search_limit		1209365	1					
ANR	1209418	EqualityExpression	s0 != ( segment * ) sp0		1209365	1		!=			
ANR	1209419	Identifier	s0		1209365	0					
ANR	1209420	CastExpression	( segment * ) sp0		1209365	1					
ANR	1209421	CastTarget	segment *		1209365	0					
ANR	1209422	Identifier	sp0		1209365	1					
ANR	1209423	Expression	"s0 = s0 -> prev , count0 ++"	732:82:28520:28542	1209365	2	True				
ANR	1209424	AssignmentExpression	s0 = s0 -> prev		1209365	0		=			
ANR	1209425	Identifier	s0		1209365	0					
ANR	1209426	PtrMemberAccess	s0 -> prev		1209365	1					
ANR	1209427	Identifier	s0		1209365	0					
ANR	1209428	Identifier	prev		1209365	1					
ANR	1209429	PostIncDecOperationExpression	count0 ++		1209365	1					
ANR	1209430	Identifier	count0		1209365	0					
ANR	1209431	IncDec	++		1209365	1					
ANR	1209432	CompoundStatement		16:107:812:812	1209365	3					
ANR	1209433	ExpressionStatement	s0s = s0 -> prev	733:8:28555:28569	1209365	0	True				
ANR	1209434	AssignmentExpression	s0s = s0 -> prev		1209365	0		=			
ANR	1209435	Identifier	s0s		1209365	0					
ANR	1209436	PtrMemberAccess	s0 -> prev		1209365	1					
ANR	1209437	Identifier	s0		1209365	0					
ANR	1209438	Identifier	prev		1209365	1					
ANR	1209439	IfStatement	if ( ( s0 -> type == s_line || s0 -> type == s_gap ) && ( s0s -> pt . x == s0 -> pt . x || ( any_abs ( s0s -> pt . x - s0 -> pt . x ) == 1 && any_abs ( s0s -> pt . y - s0 -> pt . y ) > min_length ) ) )		1209365	1					
ANR	1209440	Condition	( s0 -> type == s_line || s0 -> type == s_gap ) && ( s0s -> pt . x == s0 -> pt . x || ( any_abs ( s0s -> pt . x - s0 -> pt . x ) == 1 && any_abs ( s0s -> pt . y - s0 -> pt . y ) > min_length ) )	734:12:28583:28775	1209365	0	True				
ANR	1209441	AndExpression	( s0 -> type == s_line || s0 -> type == s_gap ) && ( s0s -> pt . x == s0 -> pt . x || ( any_abs ( s0s -> pt . x - s0 -> pt . x ) == 1 && any_abs ( s0s -> pt . y - s0 -> pt . y ) > min_length ) )		1209365	0		&&			
ANR	1209442	OrExpression	s0 -> type == s_line || s0 -> type == s_gap		1209365	0		||			
ANR	1209443	EqualityExpression	s0 -> type == s_line		1209365	0		==			
ANR	1209444	PtrMemberAccess	s0 -> type		1209365	0					
ANR	1209445	Identifier	s0		1209365	0					
ANR	1209446	Identifier	type		1209365	1					
ANR	1209447	Identifier	s_line		1209365	1					
ANR	1209448	EqualityExpression	s0 -> type == s_gap		1209365	1		==			
ANR	1209449	PtrMemberAccess	s0 -> type		1209365	0					
ANR	1209450	Identifier	s0		1209365	0					
ANR	1209451	Identifier	type		1209365	1					
ANR	1209452	Identifier	s_gap		1209365	1					
ANR	1209453	OrExpression	s0s -> pt . x == s0 -> pt . x || ( any_abs ( s0s -> pt . x - s0 -> pt . x ) == 1 && any_abs ( s0s -> pt . y - s0 -> pt . y ) > min_length )		1209365	1		||			
ANR	1209454	EqualityExpression	s0s -> pt . x == s0 -> pt . x		1209365	0		==			
ANR	1209455	MemberAccess	s0s -> pt . x		1209365	0					
ANR	1209456	PtrMemberAccess	s0s -> pt		1209365	0					
ANR	1209457	Identifier	s0s		1209365	0					
ANR	1209458	Identifier	pt		1209365	1					
ANR	1209459	Identifier	x		1209365	1					
ANR	1209460	MemberAccess	s0 -> pt . x		1209365	1					
ANR	1209461	PtrMemberAccess	s0 -> pt		1209365	0					
ANR	1209462	Identifier	s0		1209365	0					
ANR	1209463	Identifier	pt		1209365	1					
ANR	1209464	Identifier	x		1209365	1					
ANR	1209465	AndExpression	any_abs ( s0s -> pt . x - s0 -> pt . x ) == 1 && any_abs ( s0s -> pt . y - s0 -> pt . y ) > min_length		1209365	1		&&			
ANR	1209466	EqualityExpression	any_abs ( s0s -> pt . x - s0 -> pt . x ) == 1		1209365	0		==			
ANR	1209467	CallExpression	any_abs ( s0s -> pt . x - s0 -> pt . x )		1209365	0					
ANR	1209468	Callee	any_abs		1209365	0					
ANR	1209469	Identifier	any_abs		1209365	0					
ANR	1209470	ArgumentList	s0s -> pt . x - s0 -> pt . x		1209365	1					
ANR	1209471	Argument	s0s -> pt . x - s0 -> pt . x		1209365	0					
ANR	1209472	AdditiveExpression	s0s -> pt . x - s0 -> pt . x		1209365	0		-			
ANR	1209473	MemberAccess	s0s -> pt . x		1209365	0					
ANR	1209474	PtrMemberAccess	s0s -> pt		1209365	0					
ANR	1209475	Identifier	s0s		1209365	0					
ANR	1209476	Identifier	pt		1209365	1					
ANR	1209477	Identifier	x		1209365	1					
ANR	1209478	MemberAccess	s0 -> pt . x		1209365	1					
ANR	1209479	PtrMemberAccess	s0 -> pt		1209365	0					
ANR	1209480	Identifier	s0		1209365	0					
ANR	1209481	Identifier	pt		1209365	1					
ANR	1209482	Identifier	x		1209365	1					
ANR	1209483	PrimaryExpression	1		1209365	1					
ANR	1209484	RelationalExpression	any_abs ( s0s -> pt . y - s0 -> pt . y ) > min_length		1209365	1		>			
ANR	1209485	CallExpression	any_abs ( s0s -> pt . y - s0 -> pt . y )		1209365	0					
ANR	1209486	Callee	any_abs		1209365	0					
ANR	1209487	Identifier	any_abs		1209365	0					
ANR	1209488	ArgumentList	s0s -> pt . y - s0 -> pt . y		1209365	1					
ANR	1209489	Argument	s0s -> pt . y - s0 -> pt . y		1209365	0					
ANR	1209490	AdditiveExpression	s0s -> pt . y - s0 -> pt . y		1209365	0		-			
ANR	1209491	MemberAccess	s0s -> pt . y		1209365	0					
ANR	1209492	PtrMemberAccess	s0s -> pt		1209365	0					
ANR	1209493	Identifier	s0s		1209365	0					
ANR	1209494	Identifier	pt		1209365	1					
ANR	1209495	Identifier	y		1209365	1					
ANR	1209496	MemberAccess	s0 -> pt . y		1209365	1					
ANR	1209497	PtrMemberAccess	s0 -> pt		1209365	0					
ANR	1209498	Identifier	s0		1209365	0					
ANR	1209499	Identifier	pt		1209365	1					
ANR	1209500	Identifier	y		1209365	1					
ANR	1209501	Identifier	min_length		1209365	1					
ANR	1209502	CompoundStatement		21:60:1045:1045	1209365	1					
ANR	1209503	ForStatement	"for ( s1 = sp1last , count1 = 0 ; count1 < search_limit && s1 != ( segment * ) sp1 ; s1 = s1 -> prev , count1 ++ )"		1209365	0					
ANR	1209504	ForInit	"s1 = sp1last , count1 = 0 ;"	738:17:28797:28821	1209365	0	True				
ANR	1209505	Expression	"s1 = sp1last , count1 = 0"		1209365	0					
ANR	1209506	AssignmentExpression	s1 = sp1last		1209365	0		=			
ANR	1209507	Identifier	s1		1209365	0					
ANR	1209508	Identifier	sp1last		1209365	1					
ANR	1209509	AssignmentExpression	count1 = 0		1209365	1		=			
ANR	1209510	Identifier	count1		1209365	0					
ANR	1209511	PrimaryExpression	0		1209365	1					
ANR	1209512	Condition	count1 < search_limit && s1 != ( segment * ) sp1	738:43:28823:28867	1209365	1	True				
ANR	1209513	AndExpression	count1 < search_limit && s1 != ( segment * ) sp1		1209365	0		&&			
ANR	1209514	RelationalExpression	count1 < search_limit		1209365	0		<			
ANR	1209515	Identifier	count1		1209365	0					
ANR	1209516	Identifier	search_limit		1209365	1					
ANR	1209517	EqualityExpression	s1 != ( segment * ) sp1		1209365	1		!=			
ANR	1209518	Identifier	s1		1209365	0					
ANR	1209519	CastExpression	( segment * ) sp1		1209365	1					
ANR	1209520	CastTarget	segment *		1209365	0					
ANR	1209521	Identifier	sp1		1209365	1					
ANR	1209522	Expression	"s1 = s1 -> prev , count1 ++"	738:90:28870:28892	1209365	2	True				
ANR	1209523	AssignmentExpression	s1 = s1 -> prev		1209365	0		=			
ANR	1209524	Identifier	s1		1209365	0					
ANR	1209525	PtrMemberAccess	s1 -> prev		1209365	1					
ANR	1209526	Identifier	s1		1209365	0					
ANR	1209527	Identifier	prev		1209365	1					
ANR	1209528	PostIncDecOperationExpression	count1 ++		1209365	1					
ANR	1209529	Identifier	count1		1209365	0					
ANR	1209530	IncDec	++		1209365	1					
ANR	1209531	CompoundStatement		22:115:1162:1162	1209365	3					
ANR	1209532	ExpressionStatement	s1s = s1 -> prev	739:16:28913:28927	1209365	0	True				
ANR	1209533	AssignmentExpression	s1s = s1 -> prev		1209365	0		=			
ANR	1209534	Identifier	s1s		1209365	0					
ANR	1209535	PtrMemberAccess	s1 -> prev		1209365	1					
ANR	1209536	Identifier	s1		1209365	0					
ANR	1209537	Identifier	prev		1209365	1					
ANR	1209538	IfStatement	if ( ( s1 -> type == s_line || s1 -> type == s_gap ) && ( s1s -> pt . x == s1 -> pt . x || ( any_abs ( s1s -> pt . x - s1 -> pt . x ) == 1 && any_abs ( s1s -> pt . y - s1 -> pt . y ) > min_length ) ) )		1209365	1					
ANR	1209539	Condition	( s1 -> type == s_line || s1 -> type == s_gap ) && ( s1s -> pt . x == s1 -> pt . x || ( any_abs ( s1s -> pt . x - s1 -> pt . x ) == 1 && any_abs ( s1s -> pt . y - s1 -> pt . y ) > min_length ) )	740:20:28949:29143	1209365	0	True				
ANR	1209540	AndExpression	( s1 -> type == s_line || s1 -> type == s_gap ) && ( s1s -> pt . x == s1 -> pt . x || ( any_abs ( s1s -> pt . x - s1 -> pt . x ) == 1 && any_abs ( s1s -> pt . y - s1 -> pt . y ) > min_length ) )		1209365	0		&&			
ANR	1209541	OrExpression	s1 -> type == s_line || s1 -> type == s_gap		1209365	0		||			
ANR	1209542	EqualityExpression	s1 -> type == s_line		1209365	0		==			
ANR	1209543	PtrMemberAccess	s1 -> type		1209365	0					
ANR	1209544	Identifier	s1		1209365	0					
ANR	1209545	Identifier	type		1209365	1					
ANR	1209546	Identifier	s_line		1209365	1					
ANR	1209547	EqualityExpression	s1 -> type == s_gap		1209365	1		==			
ANR	1209548	PtrMemberAccess	s1 -> type		1209365	0					
ANR	1209549	Identifier	s1		1209365	0					
ANR	1209550	Identifier	type		1209365	1					
ANR	1209551	Identifier	s_gap		1209365	1					
ANR	1209552	OrExpression	s1s -> pt . x == s1 -> pt . x || ( any_abs ( s1s -> pt . x - s1 -> pt . x ) == 1 && any_abs ( s1s -> pt . y - s1 -> pt . y ) > min_length )		1209365	1		||			
ANR	1209553	EqualityExpression	s1s -> pt . x == s1 -> pt . x		1209365	0		==			
ANR	1209554	MemberAccess	s1s -> pt . x		1209365	0					
ANR	1209555	PtrMemberAccess	s1s -> pt		1209365	0					
ANR	1209556	Identifier	s1s		1209365	0					
ANR	1209557	Identifier	pt		1209365	1					
ANR	1209558	Identifier	x		1209365	1					
ANR	1209559	MemberAccess	s1 -> pt . x		1209365	1					
ANR	1209560	PtrMemberAccess	s1 -> pt		1209365	0					
ANR	1209561	Identifier	s1		1209365	0					
ANR	1209562	Identifier	pt		1209365	1					
ANR	1209563	Identifier	x		1209365	1					
ANR	1209564	AndExpression	any_abs ( s1s -> pt . x - s1 -> pt . x ) == 1 && any_abs ( s1s -> pt . y - s1 -> pt . y ) > min_length		1209365	1		&&			
ANR	1209565	EqualityExpression	any_abs ( s1s -> pt . x - s1 -> pt . x ) == 1		1209365	0		==			
ANR	1209566	CallExpression	any_abs ( s1s -> pt . x - s1 -> pt . x )		1209365	0					
ANR	1209567	Callee	any_abs		1209365	0					
ANR	1209568	Identifier	any_abs		1209365	0					
ANR	1209569	ArgumentList	s1s -> pt . x - s1 -> pt . x		1209365	1					
ANR	1209570	Argument	s1s -> pt . x - s1 -> pt . x		1209365	0					
ANR	1209571	AdditiveExpression	s1s -> pt . x - s1 -> pt . x		1209365	0		-			
ANR	1209572	MemberAccess	s1s -> pt . x		1209365	0					
ANR	1209573	PtrMemberAccess	s1s -> pt		1209365	0					
ANR	1209574	Identifier	s1s		1209365	0					
ANR	1209575	Identifier	pt		1209365	1					
ANR	1209576	Identifier	x		1209365	1					
ANR	1209577	MemberAccess	s1 -> pt . x		1209365	1					
ANR	1209578	PtrMemberAccess	s1 -> pt		1209365	0					
ANR	1209579	Identifier	s1		1209365	0					
ANR	1209580	Identifier	pt		1209365	1					
ANR	1209581	Identifier	x		1209365	1					
ANR	1209582	PrimaryExpression	1		1209365	1					
ANR	1209583	RelationalExpression	any_abs ( s1s -> pt . y - s1 -> pt . y ) > min_length		1209365	1		>			
ANR	1209584	CallExpression	any_abs ( s1s -> pt . y - s1 -> pt . y )		1209365	0					
ANR	1209585	Callee	any_abs		1209365	0					
ANR	1209586	Identifier	any_abs		1209365	0					
ANR	1209587	ArgumentList	s1s -> pt . y - s1 -> pt . y		1209365	1					
ANR	1209588	Argument	s1s -> pt . y - s1 -> pt . y		1209365	0					
ANR	1209589	AdditiveExpression	s1s -> pt . y - s1 -> pt . y		1209365	0		-			
ANR	1209590	MemberAccess	s1s -> pt . y		1209365	0					
ANR	1209591	PtrMemberAccess	s1s -> pt		1209365	0					
ANR	1209592	Identifier	s1s		1209365	0					
ANR	1209593	Identifier	pt		1209365	1					
ANR	1209594	Identifier	y		1209365	1					
ANR	1209595	MemberAccess	s1 -> pt . y		1209365	1					
ANR	1209596	PtrMemberAccess	s1 -> pt		1209365	0					
ANR	1209597	Identifier	s1		1209365	0					
ANR	1209598	Identifier	pt		1209365	1					
ANR	1209599	Identifier	y		1209365	1					
ANR	1209600	Identifier	min_length		1209365	1					
ANR	1209601	CompoundStatement		26:106:1413:1413	1209365	1					
ANR	1209602	IfStatement	if ( s0s -> pt . x == s1s -> pt . x || s0 -> pt . x == s1 -> pt . x || s0 -> pt . x == s1s -> pt . x || s0s -> pt . x == s1 -> pt . x )		1209365	0					
ANR	1209603	Condition	s0s -> pt . x == s1s -> pt . x || s0 -> pt . x == s1 -> pt . x || s0 -> pt . x == s1s -> pt . x || s0s -> pt . x == s1 -> pt . x	743:24:29172:29267	1209365	0	True				
ANR	1209604	OrExpression	s0s -> pt . x == s1s -> pt . x || s0 -> pt . x == s1 -> pt . x || s0 -> pt . x == s1s -> pt . x || s0s -> pt . x == s1 -> pt . x		1209365	0		||			
ANR	1209605	EqualityExpression	s0s -> pt . x == s1s -> pt . x		1209365	0		==			
ANR	1209606	MemberAccess	s0s -> pt . x		1209365	0					
ANR	1209607	PtrMemberAccess	s0s -> pt		1209365	0					
ANR	1209608	Identifier	s0s		1209365	0					
ANR	1209609	Identifier	pt		1209365	1					
ANR	1209610	Identifier	x		1209365	1					
ANR	1209611	MemberAccess	s1s -> pt . x		1209365	1					
ANR	1209612	PtrMemberAccess	s1s -> pt		1209365	0					
ANR	1209613	Identifier	s1s		1209365	0					
ANR	1209614	Identifier	pt		1209365	1					
ANR	1209615	Identifier	x		1209365	1					
ANR	1209616	OrExpression	s0 -> pt . x == s1 -> pt . x || s0 -> pt . x == s1s -> pt . x || s0s -> pt . x == s1 -> pt . x		1209365	1		||			
ANR	1209617	EqualityExpression	s0 -> pt . x == s1 -> pt . x		1209365	0		==			
ANR	1209618	MemberAccess	s0 -> pt . x		1209365	0					
ANR	1209619	PtrMemberAccess	s0 -> pt		1209365	0					
ANR	1209620	Identifier	s0		1209365	0					
ANR	1209621	Identifier	pt		1209365	1					
ANR	1209622	Identifier	x		1209365	1					
ANR	1209623	MemberAccess	s1 -> pt . x		1209365	1					
ANR	1209624	PtrMemberAccess	s1 -> pt		1209365	0					
ANR	1209625	Identifier	s1		1209365	0					
ANR	1209626	Identifier	pt		1209365	1					
ANR	1209627	Identifier	x		1209365	1					
ANR	1209628	OrExpression	s0 -> pt . x == s1s -> pt . x || s0s -> pt . x == s1 -> pt . x		1209365	1		||			
ANR	1209629	EqualityExpression	s0 -> pt . x == s1s -> pt . x		1209365	0		==			
ANR	1209630	MemberAccess	s0 -> pt . x		1209365	0					
ANR	1209631	PtrMemberAccess	s0 -> pt		1209365	0					
ANR	1209632	Identifier	s0		1209365	0					
ANR	1209633	Identifier	pt		1209365	1					
ANR	1209634	Identifier	x		1209365	1					
ANR	1209635	MemberAccess	s1s -> pt . x		1209365	1					
ANR	1209636	PtrMemberAccess	s1s -> pt		1209365	0					
ANR	1209637	Identifier	s1s		1209365	0					
ANR	1209638	Identifier	pt		1209365	1					
ANR	1209639	Identifier	x		1209365	1					
ANR	1209640	EqualityExpression	s0s -> pt . x == s1 -> pt . x		1209365	1		==			
ANR	1209641	MemberAccess	s0s -> pt . x		1209365	0					
ANR	1209642	PtrMemberAccess	s0s -> pt		1209365	0					
ANR	1209643	Identifier	s0s		1209365	0					
ANR	1209644	Identifier	pt		1209365	1					
ANR	1209645	Identifier	x		1209365	1					
ANR	1209646	MemberAccess	s1 -> pt . x		1209365	1					
ANR	1209647	PtrMemberAccess	s1 -> pt		1209365	0					
ANR	1209648	Identifier	s1		1209365	0					
ANR	1209649	Identifier	pt		1209365	1					
ANR	1209650	Identifier	x		1209365	1					
ANR	1209651	CompoundStatement		27:122:1537:1537	1209365	1					
ANR	1209652	IfStatement	if ( s0s -> pt . y < s0 -> pt . y && s1s -> pt . y > s1 -> pt . y )		1209365	0					
ANR	1209653	Condition	s0s -> pt . y < s0 -> pt . y && s1s -> pt . y > s1 -> pt . y	744:28:29300:29343	1209365	0	True				
ANR	1209654	AndExpression	s0s -> pt . y < s0 -> pt . y && s1s -> pt . y > s1 -> pt . y		1209365	0		&&			
ANR	1209655	RelationalExpression	s0s -> pt . y < s0 -> pt . y		1209365	0		<			
ANR	1209656	MemberAccess	s0s -> pt . y		1209365	0					
ANR	1209657	PtrMemberAccess	s0s -> pt		1209365	0					
ANR	1209658	Identifier	s0s		1209365	0					
ANR	1209659	Identifier	pt		1209365	1					
ANR	1209660	Identifier	y		1209365	1					
ANR	1209661	MemberAccess	s0 -> pt . y		1209365	1					
ANR	1209662	PtrMemberAccess	s0 -> pt		1209365	0					
ANR	1209663	Identifier	s0		1209365	0					
ANR	1209664	Identifier	pt		1209365	1					
ANR	1209665	Identifier	y		1209365	1					
ANR	1209666	RelationalExpression	s1s -> pt . y > s1 -> pt . y		1209365	1		>			
ANR	1209667	MemberAccess	s1s -> pt . y		1209365	0					
ANR	1209668	PtrMemberAccess	s1s -> pt		1209365	0					
ANR	1209669	Identifier	s1s		1209365	0					
ANR	1209670	Identifier	pt		1209365	1					
ANR	1209671	Identifier	y		1209365	1					
ANR	1209672	MemberAccess	s1 -> pt . y		1209365	1					
ANR	1209673	PtrMemberAccess	s1 -> pt		1209365	0					
ANR	1209674	Identifier	s1		1209365	0					
ANR	1209675	Identifier	pt		1209365	1					
ANR	1209676	Identifier	y		1209365	1					
ANR	1209677	CompoundStatement		30:28:1708:1743	1209365	1					
ANR	1209678	IdentifierDeclStatement	"fixed y0 = max ( s0s -> pt . y , s1 -> pt . y ) ;"	745:28:29376:29411	1209365	0	True				
ANR	1209679	IdentifierDecl	"y0 = max ( s0s -> pt . y , s1 -> pt . y )"		1209365	0					
ANR	1209680	IdentifierDeclType	fixed		1209365	0					
ANR	1209681	Identifier	y0		1209365	1					
ANR	1209682	AssignmentExpression	"y0 = max ( s0s -> pt . y , s1 -> pt . y )"		1209365	2		=			
ANR	1209683	Identifier	y0		1209365	0					
ANR	1209684	CallExpression	"max ( s0s -> pt . y , s1 -> pt . y )"		1209365	1					
ANR	1209685	Callee	max		1209365	0					
ANR	1209686	Identifier	max		1209365	0					
ANR	1209687	ArgumentList	s0s -> pt . y		1209365	1					
ANR	1209688	Argument	s0s -> pt . y		1209365	0					
ANR	1209689	MemberAccess	s0s -> pt . y		1209365	0					
ANR	1209690	PtrMemberAccess	s0s -> pt		1209365	0					
ANR	1209691	Identifier	s0s		1209365	0					
ANR	1209692	Identifier	pt		1209365	1					
ANR	1209693	Identifier	y		1209365	1					
ANR	1209694	Argument	s1 -> pt . y		1209365	1					
ANR	1209695	MemberAccess	s1 -> pt . y		1209365	0					
ANR	1209696	PtrMemberAccess	s1 -> pt		1209365	0					
ANR	1209697	Identifier	s1		1209365	0					
ANR	1209698	Identifier	pt		1209365	1					
ANR	1209699	Identifier	y		1209365	1					
ANR	1209700	IdentifierDeclStatement	"fixed y1 = min ( s0 -> pt . y , s1s -> pt . y ) ;"	746:28:29441:29476	1209365	1	True				
ANR	1209701	IdentifierDecl	"y1 = min ( s0 -> pt . y , s1s -> pt . y )"		1209365	0					
ANR	1209702	IdentifierDeclType	fixed		1209365	0					
ANR	1209703	Identifier	y1		1209365	1					
ANR	1209704	AssignmentExpression	"y1 = min ( s0 -> pt . y , s1s -> pt . y )"		1209365	2		=			
ANR	1209705	Identifier	y1		1209365	0					
ANR	1209706	CallExpression	"min ( s0 -> pt . y , s1s -> pt . y )"		1209365	1					
ANR	1209707	Callee	min		1209365	0					
ANR	1209708	Identifier	min		1209365	0					
ANR	1209709	ArgumentList	s0 -> pt . y		1209365	1					
ANR	1209710	Argument	s0 -> pt . y		1209365	0					
ANR	1209711	MemberAccess	s0 -> pt . y		1209365	0					
ANR	1209712	PtrMemberAccess	s0 -> pt		1209365	0					
ANR	1209713	Identifier	s0		1209365	0					
ANR	1209714	Identifier	pt		1209365	1					
ANR	1209715	Identifier	y		1209365	1					
ANR	1209716	Argument	s1s -> pt . y		1209365	1					
ANR	1209717	MemberAccess	s1s -> pt . y		1209365	0					
ANR	1209718	PtrMemberAccess	s1s -> pt		1209365	0					
ANR	1209719	Identifier	s1s		1209365	0					
ANR	1209720	Identifier	pt		1209365	1					
ANR	1209721	Identifier	y		1209365	1					
ANR	1209722	IfStatement	if ( y0 <= y1 )		1209365	2					
ANR	1209723	Condition	y0 <= y1	748:32:29511:29518	1209365	0	True				
ANR	1209724	RelationalExpression	y0 <= y1		1209365	0		<=			
ANR	1209725	Identifier	y0		1209365	0					
ANR	1209726	Identifier	y1		1209365	1					
ANR	1209727	CompoundStatement		32:42:1788:1788	1209365	1					
ANR	1209728	ExpressionStatement	* sc0 = s0	749:32:29555:29564	1209365	0	True				
ANR	1209729	AssignmentExpression	* sc0 = s0		1209365	0		=			
ANR	1209730	UnaryOperationExpression	* sc0		1209365	0					
ANR	1209731	UnaryOperator	*		1209365	0					
ANR	1209732	Identifier	sc0		1209365	1					
ANR	1209733	Identifier	s0		1209365	1					
ANR	1209734	ExpressionStatement	* sc1 = s1	750:32:29598:29607	1209365	1	True				
ANR	1209735	AssignmentExpression	* sc1 = s1		1209365	0		=			
ANR	1209736	UnaryOperationExpression	* sc1		1209365	0					
ANR	1209737	UnaryOperator	*		1209365	0					
ANR	1209738	Identifier	sc1		1209365	1					
ANR	1209739	Identifier	s1		1209365	1					
ANR	1209740	ReturnStatement	return true ;	751:32:29641:29652	1209365	2	True				
ANR	1209741	Identifier	true		1209365	0					
ANR	1209742	IfStatement	if ( s0s -> pt . y > s0 -> pt . y && s1s -> pt . y < s1 -> pt . y )		1209365	1					
ANR	1209743	Condition	s0s -> pt . y > s0 -> pt . y && s1s -> pt . y < s1 -> pt . y	754:28:29738:29781	1209365	0	True				
ANR	1209744	AndExpression	s0s -> pt . y > s0 -> pt . y && s1s -> pt . y < s1 -> pt . y		1209365	0		&&			
ANR	1209745	RelationalExpression	s0s -> pt . y > s0 -> pt . y		1209365	0		>			
ANR	1209746	MemberAccess	s0s -> pt . y		1209365	0					
ANR	1209747	PtrMemberAccess	s0s -> pt		1209365	0					
ANR	1209748	Identifier	s0s		1209365	0					
ANR	1209749	Identifier	pt		1209365	1					
ANR	1209750	Identifier	y		1209365	1					
ANR	1209751	MemberAccess	s0 -> pt . y		1209365	1					
ANR	1209752	PtrMemberAccess	s0 -> pt		1209365	0					
ANR	1209753	Identifier	s0		1209365	0					
ANR	1209754	Identifier	pt		1209365	1					
ANR	1209755	Identifier	y		1209365	1					
ANR	1209756	RelationalExpression	s1s -> pt . y < s1 -> pt . y		1209365	1		<			
ANR	1209757	MemberAccess	s1s -> pt . y		1209365	0					
ANR	1209758	PtrMemberAccess	s1s -> pt		1209365	0					
ANR	1209759	Identifier	s1s		1209365	0					
ANR	1209760	Identifier	pt		1209365	1					
ANR	1209761	Identifier	y		1209365	1					
ANR	1209762	MemberAccess	s1 -> pt . y		1209365	1					
ANR	1209763	PtrMemberAccess	s1 -> pt		1209365	0					
ANR	1209764	Identifier	s1		1209365	0					
ANR	1209765	Identifier	pt		1209365	1					
ANR	1209766	Identifier	y		1209365	1					
ANR	1209767	CompoundStatement		40:28:2146:2181	1209365	1					
ANR	1209768	IdentifierDeclStatement	"fixed y0 = max ( s0 -> pt . y , s1s -> pt . y ) ;"	755:28:29814:29849	1209365	0	True				
ANR	1209769	IdentifierDecl	"y0 = max ( s0 -> pt . y , s1s -> pt . y )"		1209365	0					
ANR	1209770	IdentifierDeclType	fixed		1209365	0					
ANR	1209771	Identifier	y0		1209365	1					
ANR	1209772	AssignmentExpression	"y0 = max ( s0 -> pt . y , s1s -> pt . y )"		1209365	2		=			
ANR	1209773	Identifier	y0		1209365	0					
ANR	1209774	CallExpression	"max ( s0 -> pt . y , s1s -> pt . y )"		1209365	1					
ANR	1209775	Callee	max		1209365	0					
ANR	1209776	Identifier	max		1209365	0					
ANR	1209777	ArgumentList	s0 -> pt . y		1209365	1					
ANR	1209778	Argument	s0 -> pt . y		1209365	0					
ANR	1209779	MemberAccess	s0 -> pt . y		1209365	0					
ANR	1209780	PtrMemberAccess	s0 -> pt		1209365	0					
ANR	1209781	Identifier	s0		1209365	0					
ANR	1209782	Identifier	pt		1209365	1					
ANR	1209783	Identifier	y		1209365	1					
ANR	1209784	Argument	s1s -> pt . y		1209365	1					
ANR	1209785	MemberAccess	s1s -> pt . y		1209365	0					
ANR	1209786	PtrMemberAccess	s1s -> pt		1209365	0					
ANR	1209787	Identifier	s1s		1209365	0					
ANR	1209788	Identifier	pt		1209365	1					
ANR	1209789	Identifier	y		1209365	1					
ANR	1209790	IdentifierDeclStatement	"fixed y1 = min ( s0s -> pt . y , s1 -> pt . y ) ;"	756:28:29879:29914	1209365	1	True				
ANR	1209791	IdentifierDecl	"y1 = min ( s0s -> pt . y , s1 -> pt . y )"		1209365	0					
ANR	1209792	IdentifierDeclType	fixed		1209365	0					
ANR	1209793	Identifier	y1		1209365	1					
ANR	1209794	AssignmentExpression	"y1 = min ( s0s -> pt . y , s1 -> pt . y )"		1209365	2		=			
ANR	1209795	Identifier	y1		1209365	0					
ANR	1209796	CallExpression	"min ( s0s -> pt . y , s1 -> pt . y )"		1209365	1					
ANR	1209797	Callee	min		1209365	0					
ANR	1209798	Identifier	min		1209365	0					
ANR	1209799	ArgumentList	s0s -> pt . y		1209365	1					
ANR	1209800	Argument	s0s -> pt . y		1209365	0					
ANR	1209801	MemberAccess	s0s -> pt . y		1209365	0					
ANR	1209802	PtrMemberAccess	s0s -> pt		1209365	0					
ANR	1209803	Identifier	s0s		1209365	0					
ANR	1209804	Identifier	pt		1209365	1					
ANR	1209805	Identifier	y		1209365	1					
ANR	1209806	Argument	s1 -> pt . y		1209365	1					
ANR	1209807	MemberAccess	s1 -> pt . y		1209365	0					
ANR	1209808	PtrMemberAccess	s1 -> pt		1209365	0					
ANR	1209809	Identifier	s1		1209365	0					
ANR	1209810	Identifier	pt		1209365	1					
ANR	1209811	Identifier	y		1209365	1					
ANR	1209812	IfStatement	if ( y0 <= y1 )		1209365	2					
ANR	1209813	Condition	y0 <= y1	758:32:29949:29956	1209365	0	True				
ANR	1209814	RelationalExpression	y0 <= y1		1209365	0		<=			
ANR	1209815	Identifier	y0		1209365	0					
ANR	1209816	Identifier	y1		1209365	1					
ANR	1209817	CompoundStatement		42:42:2226:2226	1209365	1					
ANR	1209818	ExpressionStatement	* sc0 = s0	759:32:29993:30002	1209365	0	True				
ANR	1209819	AssignmentExpression	* sc0 = s0		1209365	0		=			
ANR	1209820	UnaryOperationExpression	* sc0		1209365	0					
ANR	1209821	UnaryOperator	*		1209365	0					
ANR	1209822	Identifier	sc0		1209365	1					
ANR	1209823	Identifier	s0		1209365	1					
ANR	1209824	ExpressionStatement	* sc1 = s1	760:32:30036:30045	1209365	1	True				
ANR	1209825	AssignmentExpression	* sc1 = s1		1209365	0		=			
ANR	1209826	UnaryOperationExpression	* sc1		1209365	0					
ANR	1209827	UnaryOperator	*		1209365	0					
ANR	1209828	Identifier	sc1		1209365	1					
ANR	1209829	Identifier	s1		1209365	1					
ANR	1209830	ReturnStatement	return true ;	761:32:30079:30090	1209365	2	True				
ANR	1209831	Identifier	true		1209365	0					
ANR	1209832	ReturnStatement	return false ;	769:4:30222:30234	1209365	5	True				
ANR	1209833	Identifier	false		1209365	0					
ANR	1209834	ReturnType	static bool		1209365	1					
ANR	1209835	Identifier	find_contacting_segments		1209365	2					
ANR	1209836	ParameterList	"const subpath * sp0 , segment * sp0last , const subpath * sp1 , segment * sp1last , segment * * sc0 , segment * * sc1"		1209365	3					
ANR	1209837	Parameter	const subpath * sp0	714:25:27576:27593	1209365	0	True				
ANR	1209838	ParameterType	const subpath *		1209365	0					
ANR	1209839	Identifier	sp0		1209365	1					
ANR	1209840	Parameter	segment * sp0last	714:45:27596:27611	1209365	1	True				
ANR	1209841	ParameterType	segment *		1209365	0					
ANR	1209842	Identifier	sp0last		1209365	1					
ANR	1209843	Parameter	const subpath * sp1	715:25:27639:27656	1209365	2	True				
ANR	1209844	ParameterType	const subpath *		1209365	0					
ANR	1209845	Identifier	sp1		1209365	1					
ANR	1209846	Parameter	segment * sp1last	715:45:27659:27674	1209365	3	True				
ANR	1209847	ParameterType	segment *		1209365	0					
ANR	1209848	Identifier	sp1last		1209365	1					
ANR	1209849	Parameter	segment * * sc0	716:25:27702:27714	1209365	4	True				
ANR	1209850	ParameterType	segment * *		1209365	0					
ANR	1209851	Identifier	sc0		1209365	1					
ANR	1209852	Parameter	segment * * sc1	716:40:27717:27729	1209365	5	True				
ANR	1209853	ParameterType	segment * *		1209365	0					
ANR	1209854	Identifier	sc1		1209365	1					
ANR	1209855	CFGEntryNode	ENTRY		1209365		True				
ANR	1209856	CFGExitNode	EXIT		1209365		True				
ANR	1209857	Symbol	count1		1209365						
ANR	1209858	Symbol	* s0		1209365						
ANR	1209859	Symbol	s1s -> pt . y		1209365						
ANR	1209860	Symbol	s1s -> pt . x		1209365						
ANR	1209861	Symbol	count0		1209365						
ANR	1209862	Symbol	* s1		1209365						
ANR	1209863	Symbol	* sc0		1209365						
ANR	1209864	Symbol	s0 -> prev		1209365						
ANR	1209865	Symbol	s_gap		1209365						
ANR	1209866	Symbol	* sc1		1209365						
ANR	1209867	Symbol	s1 -> pt . y		1209365						
ANR	1209868	Symbol	min		1209365						
ANR	1209869	Symbol	s1s		1209365						
ANR	1209870	Symbol	fixed_1		1209365						
ANR	1209871	Symbol	s0 -> pt		1209365						
ANR	1209872	Symbol	search_limit		1209365						
ANR	1209873	Symbol	y0		1209365						
ANR	1209874	Symbol	any_abs		1209365						
ANR	1209875	Symbol	y1		1209365						
ANR	1209876	Symbol	s0		1209365						
ANR	1209877	Symbol	s1 -> pt . x		1209365						
ANR	1209878	Symbol	s1		1209365						
ANR	1209879	Symbol	sc1		1209365						
ANR	1209880	Symbol	* s0s		1209365						
ANR	1209881	Symbol	sc0		1209365						
ANR	1209882	Symbol	min_length		1209365						
ANR	1209883	Symbol	max		1209365						
ANR	1209884	Symbol	false		1209365						
ANR	1209885	Symbol	s_line		1209365						
ANR	1209886	Symbol	sp0last		1209365						
ANR	1209887	Symbol	s0s -> pt . y		1209365						
ANR	1209888	Symbol	s0 -> type		1209365						
ANR	1209889	Symbol	sp0		1209365						
ANR	1209890	Symbol	s0 -> pt . y		1209365						
ANR	1209891	Symbol	s0s -> pt . x		1209365						
ANR	1209892	Symbol	s0 -> pt . x		1209365						
ANR	1209893	Symbol	sp1		1209365						
ANR	1209894	Symbol	s0s		1209365						
ANR	1209895	Symbol	true		1209365						
ANR	1209896	Symbol	s1 -> prev		1209365						
ANR	1209897	Symbol	sp1last		1209365						
ANR	1209898	Symbol	s1 -> pt		1209365						
ANR	1209899	Symbol	s1 -> type		1209365						
ANR	1209900	Symbol	s0s -> pt		1209365						
ANR	1209901	Symbol	s1s -> pt		1209365						
ANR	1209902	Symbol	* s1s		1209365						
ANR	1209903	Function	gx_path_merge_contacting_contours	772:0:30239:34262							
ANR	1209904	FunctionDef	gx_path_merge_contacting_contours (gx_path * ppath)		1209903	0					
ANR	1209905	CompoundStatement		774:0:30293:34262	1209903	0					
ANR	1209906	IdentifierDeclStatement	int window = 5 * 6 ;	779:4:30568:30632	1209903	0	True				
ANR	1209907	IdentifierDecl	window = 5 * 6		1209903	0					
ANR	1209908	IdentifierDeclType	int		1209903	0					
ANR	1209909	Identifier	window		1209903	1					
ANR	1209910	AssignmentExpression	window = 5 * 6		1209903	2		=			
ANR	1209911	Identifier	window		1209903	0					
ANR	1209912	MultiplicativeExpression	5 * 6		1209903	1		*			
ANR	1209913	PrimaryExpression	5		1209903	0					
ANR	1209914	PrimaryExpression	6		1209903	1					
ANR	1209915	IdentifierDeclStatement	subpath * sp0 = ppath -> segments -> contents . subpath_first ;	780:4:30638:30692	1209903	1	True				
ANR	1209916	IdentifierDecl	* sp0 = ppath -> segments -> contents . subpath_first		1209903	0					
ANR	1209917	IdentifierDeclType	subpath *		1209903	0					
ANR	1209918	Identifier	sp0		1209903	1					
ANR	1209919	AssignmentExpression	* sp0 = ppath -> segments -> contents . subpath_first		1209903	2		=			
ANR	1209920	Identifier	sp0		1209903	0					
ANR	1209921	MemberAccess	ppath -> segments -> contents . subpath_first		1209903	1					
ANR	1209922	PtrMemberAccess	ppath -> segments -> contents		1209903	0					
ANR	1209923	PtrMemberAccess	ppath -> segments		1209903	0					
ANR	1209924	Identifier	ppath		1209903	0					
ANR	1209925	Identifier	segments		1209903	1					
ANR	1209926	Identifier	contents		1209903	1					
ANR	1209927	Identifier	subpath_first		1209903	1					
ANR	1209928	ForStatement	for ( ; sp0 != NULL ; sp0 = ( subpath * ) sp0 -> last -> next )		1209903	2					
ANR	1209929	Condition	sp0 != NULL	782:11:30706:30716	1209903	0	True				
ANR	1209930	EqualityExpression	sp0 != NULL		1209903	0		!=			
ANR	1209931	Identifier	sp0		1209903	0					
ANR	1209932	Identifier	NULL		1209903	1					
ANR	1209933	AssignmentExpression	sp0 = ( subpath * ) sp0 -> last -> next	782:24:30719:30750	1209903	1	True	=			
ANR	1209934	Identifier	sp0		1209903	0					
ANR	1209935	CastExpression	( subpath * ) sp0 -> last -> next		1209903	1					
ANR	1209936	CastTarget	subpath *		1209903	0					
ANR	1209937	PtrMemberAccess	sp0 -> last -> next		1209903	1					
ANR	1209938	PtrMemberAccess	sp0 -> last		1209903	0					
ANR	1209939	Identifier	sp0		1209903	0					
ANR	1209940	Identifier	last		1209903	1					
ANR	1209941	Identifier	next		1209903	1					
ANR	1209942	CompoundStatement		13:8:594:603	1209903	2					
ANR	1209943	IdentifierDeclStatement	segment * sp0last = sp0 -> last ;	783:8:30763:30791	1209903	0	True				
ANR	1209944	IdentifierDecl	* sp0last = sp0 -> last		1209903	0					
ANR	1209945	IdentifierDeclType	segment *		1209903	0					
ANR	1209946	Identifier	sp0last		1209903	1					
ANR	1209947	AssignmentExpression	* sp0last = sp0 -> last		1209903	2		=			
ANR	1209948	Identifier	sp0last		1209903	0					
ANR	1209949	PtrMemberAccess	sp0 -> last		1209903	1					
ANR	1209950	Identifier	sp0		1209903	0					
ANR	1209951	Identifier	last		1209903	1					
ANR	1209952	IdentifierDeclStatement	"subpath * sp1 = ( subpath * ) sp0last -> next , * spnext ;"	784:8:30801:30849	1209903	1	True				
ANR	1209953	IdentifierDecl	* sp1 = ( subpath * ) sp0last -> next		1209903	0					
ANR	1209954	IdentifierDeclType	subpath *		1209903	0					
ANR	1209955	Identifier	sp1		1209903	1					
ANR	1209956	AssignmentExpression	* sp1 = ( subpath * ) sp0last -> next		1209903	2		=			
ANR	1209957	Identifier	sp1		1209903	0					
ANR	1209958	CastExpression	( subpath * ) sp0last -> next		1209903	1					
ANR	1209959	CastTarget	subpath *		1209903	0					
ANR	1209960	PtrMemberAccess	sp0last -> next		1209903	1					
ANR	1209961	Identifier	sp0last		1209903	0					
ANR	1209962	Identifier	next		1209903	1					
ANR	1209963	IdentifierDecl	* spnext		1209903	1					
ANR	1209964	IdentifierDeclType	subpath *		1209903	0					
ANR	1209965	Identifier	spnext		1209903	1					
ANR	1209966	IdentifierDeclStatement	subpath * sp1p = sp0 ;	785:8:30859:30878	1209903	2	True				
ANR	1209967	IdentifierDecl	* sp1p = sp0		1209903	0					
ANR	1209968	IdentifierDeclType	subpath *		1209903	0					
ANR	1209969	Identifier	sp1p		1209903	1					
ANR	1209970	AssignmentExpression	* sp1p = sp0		1209903	2		=			
ANR	1209971	Identifier	sp0		1209903	0					
ANR	1209972	Identifier	sp0		1209903	1					
ANR	1209973	IdentifierDeclStatement	int count ;	786:8:30888:30897	1209903	3	True				
ANR	1209974	IdentifierDecl	count		1209903	0					
ANR	1209975	IdentifierDeclType	int		1209903	0					
ANR	1209976	Identifier	count		1209903	1					
ANR	1209977	ForStatement	"for ( count = 0 ; sp1 != NULL && count < window ; sp1 = spnext , count ++ )"		1209903	4					
ANR	1209978	ForInit	count = 0 ;	788:13:30913:30922	1209903	0	True				
ANR	1209979	AssignmentExpression	count = 0		1209903	0		=			
ANR	1209980	Identifier	count		1209903	0					
ANR	1209981	PrimaryExpression	0		1209903	1					
ANR	1209982	Condition	sp1 != NULL && count < window	788:24:30924:30952	1209903	1	True				
ANR	1209983	AndExpression	sp1 != NULL && count < window		1209903	0		&&			
ANR	1209984	EqualityExpression	sp1 != NULL		1209903	0		!=			
ANR	1209985	Identifier	sp1		1209903	0					
ANR	1209986	Identifier	NULL		1209903	1					
ANR	1209987	RelationalExpression	count < window		1209903	1		<			
ANR	1209988	Identifier	count		1209903	0					
ANR	1209989	Identifier	window		1209903	1					
ANR	1209990	Expression	"sp1 = spnext , count ++"	788:55:30955:30975	1209903	2	True				
ANR	1209991	AssignmentExpression	sp1 = spnext		1209903	0		=			
ANR	1209992	Identifier	sp1		1209903	0					
ANR	1209993	Identifier	spnext		1209903	1					
ANR	1209994	PostIncDecOperationExpression	count ++		1209903	1					
ANR	1209995	Identifier	count		1209903	0					
ANR	1209996	IncDec	++		1209903	1					
ANR	1209997	CompoundStatement		17:12:740:770	1209903	3					
ANR	1209998	IdentifierDeclStatement	segment * sp1last = sp1 -> last ;	789:12:30992:31020	1209903	0	True				
ANR	1209999	IdentifierDecl	* sp1last = sp1 -> last		1209903	0					
ANR	1210000	IdentifierDeclType	segment *		1209903	0					
ANR	1210001	Identifier	sp1last		1209903	1					
ANR	1210002	AssignmentExpression	* sp1last = sp1 -> last		1209903	2		=			
ANR	1210003	Identifier	sp1last		1209903	0					
ANR	1210004	PtrMemberAccess	sp1 -> last		1209903	1					
ANR	1210005	Identifier	sp1		1209903	0					
ANR	1210006	Identifier	last		1209903	1					
ANR	1210007	IdentifierDeclStatement	"segment * sc0 , * sc1 , * old_first ;"	790:12:31034:31064	1209903	1	True				
ANR	1210008	IdentifierDecl	* sc0		1209903	0					
ANR	1210009	IdentifierDeclType	segment *		1209903	0					
ANR	1210010	Identifier	sc0		1209903	1					
ANR	1210011	IdentifierDecl	* sc1		1209903	1					
ANR	1210012	IdentifierDeclType	segment *		1209903	0					
ANR	1210013	Identifier	sc1		1209903	1					
ANR	1210014	IdentifierDecl	* old_first		1209903	2					
ANR	1210015	IdentifierDeclType	segment *		1209903	0					
ANR	1210016	Identifier	old_first		1209903	1					
ANR	1210017	ExpressionStatement	spnext = ( subpath * ) sp1last -> next	792:12:31079:31112	1209903	2	True				
ANR	1210018	AssignmentExpression	spnext = ( subpath * ) sp1last -> next		1209903	0		=			
ANR	1210019	Identifier	spnext		1209903	0					
ANR	1210020	CastExpression	( subpath * ) sp1last -> next		1209903	1					
ANR	1210021	CastTarget	subpath *		1209903	0					
ANR	1210022	PtrMemberAccess	sp1last -> next		1209903	1					
ANR	1210023	Identifier	sp1last		1209903	0					
ANR	1210024	Identifier	next		1209903	1					
ANR	1210025	IfStatement	"if ( find_contacting_segments ( sp0 , sp0last , sp1 , sp1last , & sc0 , & sc1 ) )"		1209903	3					
ANR	1210026	Condition	"find_contacting_segments ( sp0 , sp0last , sp1 , sp1last , & sc0 , & sc1 )"	793:16:31130:31193	1209903	0	True				
ANR	1210027	CallExpression	"find_contacting_segments ( sp0 , sp0last , sp1 , sp1last , & sc0 , & sc1 )"		1209903	0					
ANR	1210028	Callee	find_contacting_segments		1209903	0					
ANR	1210029	Identifier	find_contacting_segments		1209903	0					
ANR	1210030	ArgumentList	sp0		1209903	1					
ANR	1210031	Argument	sp0		1209903	0					
ANR	1210032	Identifier	sp0		1209903	0					
ANR	1210033	Argument	sp0last		1209903	1					
ANR	1210034	Identifier	sp0last		1209903	0					
ANR	1210035	Argument	sp1		1209903	2					
ANR	1210036	Identifier	sp1		1209903	0					
ANR	1210037	Argument	sp1last		1209903	3					
ANR	1210038	Identifier	sp1last		1209903	0					
ANR	1210039	Argument	& sc0		1209903	4					
ANR	1210040	UnaryOperationExpression	& sc0		1209903	0					
ANR	1210041	UnaryOperator	&		1209903	0					
ANR	1210042	Identifier	sc0		1209903	1					
ANR	1210043	Argument	& sc1		1209903	5					
ANR	1210044	UnaryOperationExpression	& sc1		1209903	0					
ANR	1210045	UnaryOperator	&		1209903	0					
ANR	1210046	Identifier	sc1		1209903	1					
ANR	1210047	CompoundStatement		20:82:902:902	1209903	1					
ANR	1210048	ExpressionStatement	sp1 -> prev -> next = sp1last -> next	795:16:31272:31303	1209903	0	True				
ANR	1210049	AssignmentExpression	sp1 -> prev -> next = sp1last -> next		1209903	0		=			
ANR	1210050	PtrMemberAccess	sp1 -> prev -> next		1209903	0					
ANR	1210051	PtrMemberAccess	sp1 -> prev		1209903	0					
ANR	1210052	Identifier	sp1		1209903	0					
ANR	1210053	Identifier	prev		1209903	1					
ANR	1210054	Identifier	next		1209903	1					
ANR	1210055	PtrMemberAccess	sp1last -> next		1209903	1					
ANR	1210056	Identifier	sp1last		1209903	0					
ANR	1210057	Identifier	next		1209903	1					
ANR	1210058	IfStatement	if ( sp1last -> next != NULL )		1209903	1					
ANR	1210059	Condition	sp1last -> next != NULL	796:20:31325:31345	1209903	0	True				
ANR	1210060	EqualityExpression	sp1last -> next != NULL		1209903	0		!=			
ANR	1210061	PtrMemberAccess	sp1last -> next		1209903	0					
ANR	1210062	Identifier	sp1last		1209903	0					
ANR	1210063	Identifier	next		1209903	1					
ANR	1210064	Identifier	NULL		1209903	1					
ANR	1210065	ExpressionStatement	sp1last -> next -> prev = sp1 -> prev	797:20:31368:31399	1209903	1	True				
ANR	1210066	AssignmentExpression	sp1last -> next -> prev = sp1 -> prev		1209903	0		=			
ANR	1210067	PtrMemberAccess	sp1last -> next -> prev		1209903	0					
ANR	1210068	PtrMemberAccess	sp1last -> next		1209903	0					
ANR	1210069	Identifier	sp1last		1209903	0					
ANR	1210070	Identifier	next		1209903	1					
ANR	1210071	Identifier	prev		1209903	1					
ANR	1210072	PtrMemberAccess	sp1 -> prev		1209903	1					
ANR	1210073	Identifier	sp1		1209903	0					
ANR	1210074	Identifier	prev		1209903	1					
ANR	1210075	ExpressionStatement	sp1 -> prev = 0	798:16:31417:31430	1209903	2	True				
ANR	1210076	AssignmentExpression	sp1 -> prev = 0		1209903	0		=			
ANR	1210077	PtrMemberAccess	sp1 -> prev		1209903	0					
ANR	1210078	Identifier	sp1		1209903	0					
ANR	1210079	Identifier	prev		1209903	1					
ANR	1210080	PrimaryExpression	0		1209903	1					
ANR	1210081	ExpressionStatement	sp1last -> next = 0	799:16:31448:31465	1209903	3	True				
ANR	1210082	AssignmentExpression	sp1last -> next = 0		1209903	0		=			
ANR	1210083	PtrMemberAccess	sp1last -> next		1209903	0					
ANR	1210084	Identifier	sp1last		1209903	0					
ANR	1210085	Identifier	next		1209903	1					
ANR	1210086	PrimaryExpression	0		1209903	1					
ANR	1210087	ExpressionStatement	old_first = sp1 -> next	800:16:31483:31504	1209903	4	True				
ANR	1210088	AssignmentExpression	old_first = sp1 -> next		1209903	0		=			
ANR	1210089	Identifier	old_first		1209903	0					
ANR	1210090	PtrMemberAccess	sp1 -> next		1209903	1					
ANR	1210091	Identifier	sp1		1209903	0					
ANR	1210092	Identifier	next		1209903	1					
ANR	1210093	IfStatement	if ( ppath -> segments -> contents . subpath_current == sp1 )		1209903	5					
ANR	1210094	Condition	ppath -> segments -> contents . subpath_current == sp1	802:20:31623:31670	1209903	0	True				
ANR	1210095	EqualityExpression	ppath -> segments -> contents . subpath_current == sp1		1209903	0		==			
ANR	1210096	MemberAccess	ppath -> segments -> contents . subpath_current		1209903	0					
ANR	1210097	PtrMemberAccess	ppath -> segments -> contents		1209903	0					
ANR	1210098	PtrMemberAccess	ppath -> segments		1209903	0					
ANR	1210099	Identifier	ppath		1209903	0					
ANR	1210100	Identifier	segments		1209903	1					
ANR	1210101	Identifier	contents		1209903	1					
ANR	1210102	Identifier	subpath_current		1209903	1					
ANR	1210103	Identifier	sp1		1209903	1					
ANR	1210104	CompoundStatement		29:70:1379:1379	1209903	1					
ANR	1210105	ExpressionStatement	ppath -> segments -> contents . subpath_current = sp1p	803:20:31695:31743	1209903	0	True				
ANR	1210106	AssignmentExpression	ppath -> segments -> contents . subpath_current = sp1p		1209903	0		=			
ANR	1210107	MemberAccess	ppath -> segments -> contents . subpath_current		1209903	0					
ANR	1210108	PtrMemberAccess	ppath -> segments -> contents		1209903	0					
ANR	1210109	PtrMemberAccess	ppath -> segments		1209903	0					
ANR	1210110	Identifier	ppath		1209903	0					
ANR	1210111	Identifier	segments		1209903	1					
ANR	1210112	Identifier	contents		1209903	1					
ANR	1210113	Identifier	subpath_current		1209903	1					
ANR	1210114	Identifier	sp1p		1209903	1					
ANR	1210115	IfStatement	if ( sp1last -> type == s_line_close )		1209903	6					
ANR	1210116	Condition	sp1last -> type == s_line_close	805:20:31783:31811	1209903	0	True				
ANR	1210117	EqualityExpression	sp1last -> type == s_line_close		1209903	0		==			
ANR	1210118	PtrMemberAccess	sp1last -> type		1209903	0					
ANR	1210119	Identifier	sp1last		1209903	0					
ANR	1210120	Identifier	type		1209903	1					
ANR	1210121	Identifier	s_line_close		1209903	1					
ANR	1210122	CompoundStatement		32:51:1520:1520	1209903	1					
ANR	1210123	ExpressionStatement	sp1last -> type = s_line	807:20:31929:31951	1209903	0	True				
ANR	1210124	AssignmentExpression	sp1last -> type = s_line		1209903	0		=			
ANR	1210125	PtrMemberAccess	sp1last -> type		1209903	0					
ANR	1210126	Identifier	sp1last		1209903	0					
ANR	1210127	Identifier	type		1209903	1					
ANR	1210128	Identifier	s_line		1209903	1					
ANR	1210129	ExpressionStatement	"gs_free_object ( gs_memory_stable ( ppath -> memory ) , sp1 , ""gx_path_merge_contacting_contours"" )"	809:20:32035:32124	1209903	1	True				
ANR	1210130	CallExpression	"gs_free_object ( gs_memory_stable ( ppath -> memory ) , sp1 , ""gx_path_merge_contacting_contours"" )"		1209903	0					
ANR	1210131	Callee	gs_free_object		1209903	0					
ANR	1210132	Identifier	gs_free_object		1209903	0					
ANR	1210133	ArgumentList	gs_memory_stable ( ppath -> memory )		1209903	1					
ANR	1210134	Argument	gs_memory_stable ( ppath -> memory )		1209903	0					
ANR	1210135	CallExpression	gs_memory_stable ( ppath -> memory )		1209903	0					
ANR	1210136	Callee	gs_memory_stable		1209903	0					
ANR	1210137	Identifier	gs_memory_stable		1209903	0					
ANR	1210138	ArgumentList	ppath -> memory		1209903	1					
ANR	1210139	Argument	ppath -> memory		1209903	0					
ANR	1210140	PtrMemberAccess	ppath -> memory		1209903	0					
ANR	1210141	Identifier	ppath		1209903	0					
ANR	1210142	Identifier	memory		1209903	1					
ANR	1210143	Argument	sp1		1209903	1					
ANR	1210144	Identifier	sp1		1209903	0					
ANR	1210145	Argument	"""gx_path_merge_contacting_contours"""		1209903	2					
ANR	1210146	PrimaryExpression	"""gx_path_merge_contacting_contours"""		1209903	0					
ANR	1210147	ElseStatement	else		1209903	0					
ANR	1210148	IfStatement	if ( sp1last -> pt . x == sp1 -> pt . x && sp1last -> pt . y == sp1 -> pt . y )		1209903	0					
ANR	1210149	Condition	sp1last -> pt . x == sp1 -> pt . x && sp1last -> pt . y == sp1 -> pt . y	810:27:32153:32208	1209903	0	True				
ANR	1210150	AndExpression	sp1last -> pt . x == sp1 -> pt . x && sp1last -> pt . y == sp1 -> pt . y		1209903	0		&&			
ANR	1210151	EqualityExpression	sp1last -> pt . x == sp1 -> pt . x		1209903	0		==			
ANR	1210152	MemberAccess	sp1last -> pt . x		1209903	0					
ANR	1210153	PtrMemberAccess	sp1last -> pt		1209903	0					
ANR	1210154	Identifier	sp1last		1209903	0					
ANR	1210155	Identifier	pt		1209903	1					
ANR	1210156	Identifier	x		1209903	1					
ANR	1210157	MemberAccess	sp1 -> pt . x		1209903	1					
ANR	1210158	PtrMemberAccess	sp1 -> pt		1209903	0					
ANR	1210159	Identifier	sp1		1209903	0					
ANR	1210160	Identifier	pt		1209903	1					
ANR	1210161	Identifier	x		1209903	1					
ANR	1210162	EqualityExpression	sp1last -> pt . y == sp1 -> pt . y		1209903	1		==			
ANR	1210163	MemberAccess	sp1last -> pt . y		1209903	0					
ANR	1210164	PtrMemberAccess	sp1last -> pt		1209903	0					
ANR	1210165	Identifier	sp1last		1209903	0					
ANR	1210166	Identifier	pt		1209903	1					
ANR	1210167	Identifier	y		1209903	1					
ANR	1210168	MemberAccess	sp1 -> pt . y		1209903	1					
ANR	1210169	PtrMemberAccess	sp1 -> pt		1209903	0					
ANR	1210170	Identifier	sp1		1209903	0					
ANR	1210171	Identifier	pt		1209903	1					
ANR	1210172	Identifier	y		1209903	1					
ANR	1210173	CompoundStatement		37:85:1917:1917	1209903	1					
ANR	1210174	ExpressionStatement	"gs_free_object ( gs_memory_stable ( ppath -> memory ) , sp1 , ""gx_path_merge_contacting_contours"" )"	813:20:32384:32473	1209903	0	True				
ANR	1210175	CallExpression	"gs_free_object ( gs_memory_stable ( ppath -> memory ) , sp1 , ""gx_path_merge_contacting_contours"" )"		1209903	0					
ANR	1210176	Callee	gs_free_object		1209903	0					
ANR	1210177	Identifier	gs_free_object		1209903	0					
ANR	1210178	ArgumentList	gs_memory_stable ( ppath -> memory )		1209903	1					
ANR	1210179	Argument	gs_memory_stable ( ppath -> memory )		1209903	0					
ANR	1210180	CallExpression	gs_memory_stable ( ppath -> memory )		1209903	0					
ANR	1210181	Callee	gs_memory_stable		1209903	0					
ANR	1210182	Identifier	gs_memory_stable		1209903	0					
ANR	1210183	ArgumentList	ppath -> memory		1209903	1					
ANR	1210184	Argument	ppath -> memory		1209903	0					
ANR	1210185	PtrMemberAccess	ppath -> memory		1209903	0					
ANR	1210186	Identifier	ppath		1209903	0					
ANR	1210187	Identifier	memory		1209903	1					
ANR	1210188	Argument	sp1		1209903	1					
ANR	1210189	Identifier	sp1		1209903	0					
ANR	1210190	Argument	"""gx_path_merge_contacting_contours"""		1209903	2					
ANR	1210191	PrimaryExpression	"""gx_path_merge_contacting_contours"""		1209903	0					
ANR	1210192	ElseStatement	else		1209903	0					
ANR	1210193	CompoundStatement		41:23:2204:2204	1209903	0					
ANR	1210194	ExpressionStatement	sp1 -> type = s_line	817:20:32664:32682	1209903	0	True				
ANR	1210195	AssignmentExpression	sp1 -> type = s_line		1209903	0		=			
ANR	1210196	PtrMemberAccess	sp1 -> type		1209903	0					
ANR	1210197	Identifier	sp1		1209903	0					
ANR	1210198	Identifier	type		1209903	1					
ANR	1210199	Identifier	s_line		1209903	1					
ANR	1210200	ExpressionStatement	sp1last -> next = ( segment * ) sp1	818:20:32704:32734	1209903	1	True				
ANR	1210201	AssignmentExpression	sp1last -> next = ( segment * ) sp1		1209903	0		=			
ANR	1210202	PtrMemberAccess	sp1last -> next		1209903	0					
ANR	1210203	Identifier	sp1last		1209903	0					
ANR	1210204	Identifier	next		1209903	1					
ANR	1210205	CastExpression	( segment * ) sp1		1209903	1					
ANR	1210206	CastTarget	segment *		1209903	0					
ANR	1210207	Identifier	sp1		1209903	1					
ANR	1210208	ExpressionStatement	sp1 -> next = NULL	819:20:32756:32772	1209903	2	True				
ANR	1210209	AssignmentExpression	sp1 -> next = NULL		1209903	0		=			
ANR	1210210	PtrMemberAccess	sp1 -> next		1209903	0					
ANR	1210211	Identifier	sp1		1209903	0					
ANR	1210212	Identifier	next		1209903	1					
ANR	1210213	Identifier	NULL		1209903	1					
ANR	1210214	ExpressionStatement	sp1 -> prev = sp1last	820:20:32794:32813	1209903	3	True				
ANR	1210215	AssignmentExpression	sp1 -> prev = sp1last		1209903	0		=			
ANR	1210216	PtrMemberAccess	sp1 -> prev		1209903	0					
ANR	1210217	Identifier	sp1		1209903	0					
ANR	1210218	Identifier	prev		1209903	1					
ANR	1210219	Identifier	sp1last		1209903	1					
ANR	1210220	ExpressionStatement	sp1 -> last = NULL	821:20:32835:32851	1209903	4	True				
ANR	1210221	AssignmentExpression	sp1 -> last = NULL		1209903	0		=			
ANR	1210222	PtrMemberAccess	sp1 -> last		1209903	0					
ANR	1210223	Identifier	sp1		1209903	0					
ANR	1210224	Identifier	last		1209903	1					
ANR	1210225	Identifier	NULL		1209903	1					
ANR	1210226	ExpressionStatement	sp1last = ( segment * ) sp1	822:20:32900:32924	1209903	5	True				
ANR	1210227	AssignmentExpression	sp1last = ( segment * ) sp1		1209903	0		=			
ANR	1210228	Identifier	sp1last		1209903	0					
ANR	1210229	CastExpression	( segment * ) sp1		1209903	1					
ANR	1210230	CastTarget	segment *		1209903	0					
ANR	1210231	Identifier	sp1		1209903	1					
ANR	1210232	ExpressionStatement	sp1 = 0	824:16:32960:32967	1209903	7	True				
ANR	1210233	AssignmentExpression	sp1 = 0		1209903	0		=			
ANR	1210234	Identifier	sp1		1209903	0					
ANR	1210235	PrimaryExpression	0		1209903	1					
ANR	1210236	CompoundStatement		53:16:2757:2757	1209903	8					
ANR	1210237	ExpressionStatement	sp1last -> next = old_first	827:20:33114:33139	1209903	0	True				
ANR	1210238	AssignmentExpression	sp1last -> next = old_first		1209903	0		=			
ANR	1210239	PtrMemberAccess	sp1last -> next		1209903	0					
ANR	1210240	Identifier	sp1last		1209903	0					
ANR	1210241	Identifier	next		1209903	1					
ANR	1210242	Identifier	old_first		1209903	1					
ANR	1210243	ExpressionStatement	old_first -> prev = sp1last	828:20:33161:33186	1209903	1	True				
ANR	1210244	AssignmentExpression	old_first -> prev = sp1last		1209903	0		=			
ANR	1210245	PtrMemberAccess	old_first -> prev		1209903	0					
ANR	1210246	Identifier	old_first		1209903	0					
ANR	1210247	Identifier	prev		1209903	1					
ANR	1210248	Identifier	sp1last		1209903	1					
ANR	1210249	ExpressionStatement	sp1last = sc1 -> prev	830:20:33254:33273	1209903	2	True				
ANR	1210250	AssignmentExpression	sp1last = sc1 -> prev		1209903	0		=			
ANR	1210251	Identifier	sp1last		1209903	0					
ANR	1210252	PtrMemberAccess	sc1 -> prev		1209903	1					
ANR	1210253	Identifier	sc1		1209903	0					
ANR	1210254	Identifier	prev		1209903	1					
ANR	1210255	ExpressionStatement	sc1 -> prev -> next = 0	831:20:33295:33314	1209903	3	True				
ANR	1210256	AssignmentExpression	sc1 -> prev -> next = 0		1209903	0		=			
ANR	1210257	PtrMemberAccess	sc1 -> prev -> next		1209903	0					
ANR	1210258	PtrMemberAccess	sc1 -> prev		1209903	0					
ANR	1210259	Identifier	sc1		1209903	0					
ANR	1210260	Identifier	prev		1209903	1					
ANR	1210261	Identifier	next		1209903	1					
ANR	1210262	PrimaryExpression	0		1209903	1					
ANR	1210263	ExpressionStatement	sc1 -> prev = 0	832:20:33336:33349	1209903	4	True				
ANR	1210264	AssignmentExpression	sc1 -> prev = 0		1209903	0		=			
ANR	1210265	PtrMemberAccess	sc1 -> prev		1209903	0					
ANR	1210266	Identifier	sc1		1209903	0					
ANR	1210267	Identifier	prev		1209903	1					
ANR	1210268	PrimaryExpression	0		1209903	1					
ANR	1210269	IfStatement	if ( ppath -> segments -> contents . subpath_current == sp1 )		1209903	5					
ANR	1210270	Condition	ppath -> segments -> contents . subpath_current == sp1	834:24:33451:33498	1209903	0	True				
ANR	1210271	EqualityExpression	ppath -> segments -> contents . subpath_current == sp1		1209903	0		==			
ANR	1210272	MemberAccess	ppath -> segments -> contents . subpath_current		1209903	0					
ANR	1210273	PtrMemberAccess	ppath -> segments -> contents		1209903	0					
ANR	1210274	PtrMemberAccess	ppath -> segments		1209903	0					
ANR	1210275	Identifier	ppath		1209903	0					
ANR	1210276	Identifier	segments		1209903	1					
ANR	1210277	Identifier	contents		1209903	1					
ANR	1210278	Identifier	subpath_current		1209903	1					
ANR	1210279	Identifier	sp1		1209903	1					
ANR	1210280	CompoundStatement		61:74:3207:3207	1209903	1					
ANR	1210281	ExpressionStatement	ppath -> segments -> contents . subpath_current = sp1p	835:24:33527:33575	1209903	0	True				
ANR	1210282	AssignmentExpression	ppath -> segments -> contents . subpath_current = sp1p		1209903	0		=			
ANR	1210283	MemberAccess	ppath -> segments -> contents . subpath_current		1209903	0					
ANR	1210284	PtrMemberAccess	ppath -> segments -> contents		1209903	0					
ANR	1210285	PtrMemberAccess	ppath -> segments		1209903	0					
ANR	1210286	Identifier	ppath		1209903	0					
ANR	1210287	Identifier	segments		1209903	1					
ANR	1210288	Identifier	contents		1209903	1					
ANR	1210289	Identifier	subpath_current		1209903	1					
ANR	1210290	Identifier	sp1p		1209903	1					
ANR	1210291	ExpressionStatement	"gs_free_object ( gs_memory_stable ( ppath -> memory ) , sp1 , ""gx_path_merge_contacting_contours"" )"	837:20:33619:33708	1209903	6	True				
ANR	1210292	CallExpression	"gs_free_object ( gs_memory_stable ( ppath -> memory ) , sp1 , ""gx_path_merge_contacting_contours"" )"		1209903	0					
ANR	1210293	Callee	gs_free_object		1209903	0					
ANR	1210294	Identifier	gs_free_object		1209903	0					
ANR	1210295	ArgumentList	gs_memory_stable ( ppath -> memory )		1209903	1					
ANR	1210296	Argument	gs_memory_stable ( ppath -> memory )		1209903	0					
ANR	1210297	CallExpression	gs_memory_stable ( ppath -> memory )		1209903	0					
ANR	1210298	Callee	gs_memory_stable		1209903	0					
ANR	1210299	Identifier	gs_memory_stable		1209903	0					
ANR	1210300	ArgumentList	ppath -> memory		1209903	1					
ANR	1210301	Argument	ppath -> memory		1209903	0					
ANR	1210302	PtrMemberAccess	ppath -> memory		1209903	0					
ANR	1210303	Identifier	ppath		1209903	0					
ANR	1210304	Identifier	memory		1209903	1					
ANR	1210305	Argument	sp1		1209903	1					
ANR	1210306	Identifier	sp1		1209903	0					
ANR	1210307	Argument	"""gx_path_merge_contacting_contours"""		1209903	2					
ANR	1210308	PrimaryExpression	"""gx_path_merge_contacting_contours"""		1209903	0					
ANR	1210309	ExpressionStatement	sp1 = 0	838:20:33730:33737	1209903	7	True				
ANR	1210310	AssignmentExpression	sp1 = 0		1209903	0		=			
ANR	1210311	Identifier	sp1		1209903	0					
ANR	1210312	PrimaryExpression	0		1209903	1					
ANR	1210313	ExpressionStatement	sc0 -> prev -> next = sc1	841:16:33861:33882	1209903	9	True				
ANR	1210314	AssignmentExpression	sc0 -> prev -> next = sc1		1209903	0		=			
ANR	1210315	PtrMemberAccess	sc0 -> prev -> next		1209903	0					
ANR	1210316	PtrMemberAccess	sc0 -> prev		1209903	0					
ANR	1210317	Identifier	sc0		1209903	0					
ANR	1210318	Identifier	prev		1209903	1					
ANR	1210319	Identifier	next		1209903	1					
ANR	1210320	Identifier	sc1		1209903	1					
ANR	1210321	ExpressionStatement	sc1 -> prev = sc0 -> prev	842:16:33900:33921	1209903	10	True				
ANR	1210322	AssignmentExpression	sc1 -> prev = sc0 -> prev		1209903	0		=			
ANR	1210323	PtrMemberAccess	sc1 -> prev		1209903	0					
ANR	1210324	Identifier	sc1		1209903	0					
ANR	1210325	Identifier	prev		1209903	1					
ANR	1210326	PtrMemberAccess	sc0 -> prev		1209903	1					
ANR	1210327	Identifier	sc0		1209903	0					
ANR	1210328	Identifier	prev		1209903	1					
ANR	1210329	ExpressionStatement	sp1last -> next = sc0	843:16:33939:33958	1209903	11	True				
ANR	1210330	AssignmentExpression	sp1last -> next = sc0		1209903	0		=			
ANR	1210331	PtrMemberAccess	sp1last -> next		1209903	0					
ANR	1210332	Identifier	sp1last		1209903	0					
ANR	1210333	Identifier	next		1209903	1					
ANR	1210334	Identifier	sc0		1209903	1					
ANR	1210335	ExpressionStatement	sc0 -> prev = sp1last	844:16:33976:33995	1209903	12	True				
ANR	1210336	AssignmentExpression	sc0 -> prev = sp1last		1209903	0		=			
ANR	1210337	PtrMemberAccess	sc0 -> prev		1209903	0					
ANR	1210338	Identifier	sc0		1209903	0					
ANR	1210339	Identifier	prev		1209903	1					
ANR	1210340	Identifier	sp1last		1209903	1					
ANR	1210341	ExpressionStatement	ppath -> subpath_count --	847:16:34161:34183	1209903	13	True				
ANR	1210342	PostIncDecOperationExpression	ppath -> subpath_count --		1209903	0					
ANR	1210343	PtrMemberAccess	ppath -> subpath_count		1209903	0					
ANR	1210344	Identifier	ppath		1209903	0					
ANR	1210345	Identifier	subpath_count		1209903	1					
ANR	1210346	IncDec	--		1209903	1					
ANR	1210347	ElseStatement	else		1209903	0					
ANR	1210348	ExpressionStatement	sp1p = sp1	849:16:34220:34230	1209903	0	True				
ANR	1210349	AssignmentExpression	sp1p = sp1		1209903	0		=			
ANR	1210350	Identifier	sp1p		1209903	0					
ANR	1210351	Identifier	sp1		1209903	1					
ANR	1210352	ReturnStatement	return 0 ;	852:4:34252:34260	1209903	3	True				
ANR	1210353	PrimaryExpression	0		1209903	0					
ANR	1210354	ReturnType	int		1209903	1					
ANR	1210355	Identifier	gx_path_merge_contacting_contours		1209903	2					
ANR	1210356	ParameterList	gx_path * ppath		1209903	3					
ANR	1210357	Parameter	gx_path * ppath	773:34:30277:30290	1209903	0	True				
ANR	1210358	ParameterType	gx_path *		1209903	0					
ANR	1210359	Identifier	ppath		1209903	1					
ANR	1210360	CFGEntryNode	ENTRY		1209903		True				
ANR	1210361	CFGExitNode	EXIT		1209903		True				
ANR	1210362	Symbol	* sc0 -> prev		1209903						
ANR	1210363	Symbol	ppath -> segments		1209903						
ANR	1210364	Symbol	* sc0		1209903						
ANR	1210365	Symbol	* sc1		1209903						
ANR	1210366	Symbol	sp1 -> next		1209903						
ANR	1210367	Symbol	ppath -> segments -> contents . subpath_current		1209903						
ANR	1210368	Symbol	sp1last -> type		1209903						
ANR	1210369	Symbol	* old_first		1209903						
ANR	1210370	Symbol	* sp0		1209903						
ANR	1210371	Symbol	old_first		1209903						
ANR	1210372	Symbol	* * sp1last		1209903						
ANR	1210373	Symbol	sc1 -> prev		1209903						
ANR	1210374	Symbol	* sp1		1209903						
ANR	1210375	Symbol	ppath -> segments -> contents		1209903						
ANR	1210376	Symbol	* ppath		1209903						
ANR	1210377	Symbol	NULL		1209903						
ANR	1210378	Symbol	sp1last -> next -> prev		1209903						
ANR	1210379	Symbol	sp1 -> pt		1209903						
ANR	1210380	Symbol	count		1209903						
ANR	1210381	Symbol	s_line_close		1209903						
ANR	1210382	Symbol	* sp1 -> prev		1209903						
ANR	1210383	Symbol	sp1 -> last		1209903						
ANR	1210384	Symbol	* * sc0		1209903						
ANR	1210385	Symbol	* * sc1		1209903						
ANR	1210386	Symbol	* * ppath		1209903						
ANR	1210387	Symbol	* sp1last -> next		1209903						
ANR	1210388	Symbol	sc1 -> prev -> next		1209903						
ANR	1210389	Symbol	& sc1		1209903						
ANR	1210390	Symbol	& sc0		1209903						
ANR	1210391	Symbol	ppath -> subpath_count		1209903						
ANR	1210392	Symbol	sp1 -> prev -> next		1209903						
ANR	1210393	Symbol	* sp0 -> last		1209903						
ANR	1210394	Symbol	* sp1last		1209903						
ANR	1210395	Symbol	old_first -> prev		1209903						
ANR	1210396	Symbol	sp1 -> type		1209903						
ANR	1210397	Symbol	* * sp0		1209903						
ANR	1210398	Symbol	find_contacting_segments		1209903						
ANR	1210399	Symbol	* * sp1		1209903						
ANR	1210400	Symbol	sp1p		1209903						
ANR	1210401	Symbol	ppath		1209903						
ANR	1210402	Symbol	spnext		1209903						
ANR	1210403	Symbol	sp1last -> next		1209903						
ANR	1210404	Symbol	sp0 -> last -> next		1209903						
ANR	1210405	Symbol	sc0 -> prev -> next		1209903						
ANR	1210406	Symbol	sp1last -> pt		1209903						
ANR	1210407	Symbol	sp0last -> next		1209903						
ANR	1210408	Symbol	sp1 -> prev		1209903						
ANR	1210409	Symbol	* sp0last		1209903						
ANR	1210410	Symbol	ppath -> memory		1209903						
ANR	1210411	Symbol	sc0 -> prev		1209903						
ANR	1210412	Symbol	* sc1 -> prev		1209903						
ANR	1210413	Symbol	sc1		1209903						
ANR	1210414	Symbol	sc0		1209903						
ANR	1210415	Symbol	sp0 -> last		1209903						
ANR	1210416	Symbol	s_line		1209903						
ANR	1210417	Symbol	gs_memory_stable		1209903						
ANR	1210418	Symbol	sp0last		1209903						
ANR	1210419	Symbol	* ppath -> segments		1209903						
ANR	1210420	Symbol	sp0		1209903						
ANR	1210421	Symbol	sp1		1209903						
ANR	1210422	Symbol	sp1last -> pt . x		1209903						
ANR	1210423	Symbol	ppath -> segments -> contents . subpath_first		1209903						
ANR	1210424	Symbol	sp1last		1209903						
ANR	1210425	Symbol	window		1209903						
ANR	1210426	Symbol	sp1 -> pt . x		1209903						
ANR	1210427	Symbol	sp1last -> pt . y		1209903						
ANR	1210428	Symbol	sp1 -> pt . y		1209903						
