command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	127873	File	data/converged/CVE-2018-16863_ghostpdl/backend.c								
ANR	127874	DeclStmt									
ANR	127875	Decl							void	void ( const char * s )	quote_string
ANR	127876	Function	cupsBackendDeviceURI	50:0:1348:2466							
ANR	127877	FunctionDef	cupsBackendDeviceURI (char * * argv)		127876	0					
ANR	127878	CompoundStatement		52:0:1467:2466	127876	0					
ANR	127879	IdentifierDeclStatement	"const char * device_uri , * auth_info_required ;"	53:2:1471:1534	127876	0	True				
ANR	127880	IdentifierDecl	* device_uri		127876	0					
ANR	127881	IdentifierDeclType	const char *		127876	0					
ANR	127882	Identifier	device_uri		127876	1					
ANR	127883	IdentifierDecl	* auth_info_required		127876	1					
ANR	127884	IdentifierDeclType	const char *		127876	0					
ANR	127885	Identifier	auth_info_required		127876	1					
ANR	127886	IdentifierDeclStatement	_cups_globals_t * cg = _cupsGlobals ( ) ;	55:2:1571:1607	127876	1	True				
ANR	127887	IdentifierDecl	* cg = _cupsGlobals ( )		127876	0					
ANR	127888	IdentifierDeclType	_cups_globals_t *		127876	0					
ANR	127889	Identifier	cg		127876	1					
ANR	127890	AssignmentExpression	* cg = _cupsGlobals ( )		127876	2		=			
ANR	127891	Identifier	cg		127876	0					
ANR	127892	CallExpression	_cupsGlobals ( )		127876	1					
ANR	127893	Callee	_cupsGlobals		127876	0					
ANR	127894	Identifier	_cupsGlobals		127876	0					
ANR	127895	ArgumentList			127876	1					
ANR	127896	IdentifierDeclStatement	int options ;	56:2:1629:1641	127876	2	True				
ANR	127897	IdentifierDecl	options		127876	0					
ANR	127898	IdentifierDeclType	int		127876	0					
ANR	127899	Identifier	options		127876	1					
ANR	127900	IdentifierDeclStatement	ppd_file_t * ppd ;	57:2:1668:1683	127876	3	True				
ANR	127901	IdentifierDecl	* ppd		127876	0					
ANR	127902	IdentifierDeclType	ppd_file_t *		127876	0					
ANR	127903	Identifier	ppd		127876	1					
ANR	127904	IdentifierDeclStatement	ppd_attr_t * ppdattr ;	58:2:1704:1723	127876	4	True				
ANR	127905	IdentifierDecl	* ppdattr		127876	0					
ANR	127906	IdentifierDeclType	ppd_attr_t *		127876	0					
ANR	127907	Identifier	ppdattr		127876	1					
ANR	127908	IfStatement	"if ( ( device_uri = getenv ( ""DEVICE_URI"" ) ) == NULL )"		127876	5					
ANR	127909	Condition	"( device_uri = getenv ( ""DEVICE_URI"" ) ) == NULL"	61:6:1754:1796	127876	0	True				
ANR	127910	EqualityExpression	"( device_uri = getenv ( ""DEVICE_URI"" ) ) == NULL"		127876	0		==			
ANR	127911	AssignmentExpression	"device_uri = getenv ( ""DEVICE_URI"" )"		127876	0		=			
ANR	127912	Identifier	device_uri		127876	0					
ANR	127913	CallExpression	"getenv ( ""DEVICE_URI"" )"		127876	1					
ANR	127914	Callee	getenv		127876	0					
ANR	127915	Identifier	getenv		127876	0					
ANR	127916	ArgumentList	"""DEVICE_URI"""		127876	1					
ANR	127917	Argument	"""DEVICE_URI"""		127876	0					
ANR	127918	PrimaryExpression	"""DEVICE_URI"""		127876	0					
ANR	127919	Identifier	NULL		127876	1					
ANR	127920	CompoundStatement		11:2:333:333	127876	1					
ANR	127921	IfStatement	"if ( ! argv || ! argv [ 0 ] || ! strchr ( argv [ 0 ] , ':' ) )"		127876	0					
ANR	127922	Condition	"! argv || ! argv [ 0 ] || ! strchr ( argv [ 0 ] , ':' )"	63:8:1811:1852	127876	0	True				
ANR	127923	OrExpression	"! argv || ! argv [ 0 ] || ! strchr ( argv [ 0 ] , ':' )"		127876	0		||			
ANR	127924	UnaryOperationExpression	! argv		127876	0					
ANR	127925	UnaryOperator	!		127876	0					
ANR	127926	Identifier	argv		127876	1					
ANR	127927	OrExpression	"! argv [ 0 ] || ! strchr ( argv [ 0 ] , ':' )"		127876	1		||			
ANR	127928	UnaryOperationExpression	! argv [ 0 ]		127876	0					
ANR	127929	UnaryOperator	!		127876	0					
ANR	127930	ArrayIndexing	argv [ 0 ]		127876	1					
ANR	127931	Identifier	argv		127876	0					
ANR	127932	PrimaryExpression	0		127876	1					
ANR	127933	UnaryOperationExpression	"! strchr ( argv [ 0 ] , ':' )"		127876	1					
ANR	127934	UnaryOperator	!		127876	0					
ANR	127935	CallExpression	"strchr ( argv [ 0 ] , ':' )"		127876	1					
ANR	127936	Callee	strchr		127876	0					
ANR	127937	Identifier	strchr		127876	0					
ANR	127938	ArgumentList	argv [ 0 ]		127876	1					
ANR	127939	Argument	argv [ 0 ]		127876	0					
ANR	127940	ArrayIndexing	argv [ 0 ]		127876	0					
ANR	127941	Identifier	argv		127876	0					
ANR	127942	PrimaryExpression	0		127876	1					
ANR	127943	Argument	':'		127876	1					
ANR	127944	PrimaryExpression	':'		127876	0					
ANR	127945	ReturnStatement	return ( NULL ) ;	64:6:1861:1874	127876	1	True				
ANR	127946	Identifier	NULL		127876	0					
ANR	127947	ExpressionStatement	device_uri = argv [ 0 ]	66:4:1881:1901	127876	1	True				
ANR	127948	AssignmentExpression	device_uri = argv [ 0 ]		127876	0		=			
ANR	127949	Identifier	device_uri		127876	0					
ANR	127950	ArrayIndexing	argv [ 0 ]		127876	1					
ANR	127951	Identifier	argv		127876	0					
ANR	127952	PrimaryExpression	0		127876	1					
ANR	127953	ExpressionStatement	options = _HTTP_RESOLVE_STDERR	69:2:1910:1940	127876	6	True				
ANR	127954	AssignmentExpression	options = _HTTP_RESOLVE_STDERR		127876	0		=			
ANR	127955	Identifier	options		127876	0					
ANR	127956	Identifier	_HTTP_RESOLVE_STDERR		127876	1					
ANR	127957	IfStatement	"if ( ( auth_info_required = getenv ( ""AUTH_INFO_REQUIRED"" ) ) != NULL && ! strcmp ( auth_info_required , ""negotiate"" ) )"		127876	7					
ANR	127958	Condition	"( auth_info_required = getenv ( ""AUTH_INFO_REQUIRED"" ) ) != NULL && ! strcmp ( auth_info_required , ""negotiate"" )"	70:6:1948:2056	127876	0	True				
ANR	127959	AndExpression	"( auth_info_required = getenv ( ""AUTH_INFO_REQUIRED"" ) ) != NULL && ! strcmp ( auth_info_required , ""negotiate"" )"		127876	0		&&			
ANR	127960	EqualityExpression	"( auth_info_required = getenv ( ""AUTH_INFO_REQUIRED"" ) ) != NULL"		127876	0		!=			
ANR	127961	AssignmentExpression	"auth_info_required = getenv ( ""AUTH_INFO_REQUIRED"" )"		127876	0		=			
ANR	127962	Identifier	auth_info_required		127876	0					
ANR	127963	CallExpression	"getenv ( ""AUTH_INFO_REQUIRED"" )"		127876	1					
ANR	127964	Callee	getenv		127876	0					
ANR	127965	Identifier	getenv		127876	0					
ANR	127966	ArgumentList	"""AUTH_INFO_REQUIRED"""		127876	1					
ANR	127967	Argument	"""AUTH_INFO_REQUIRED"""		127876	0					
ANR	127968	PrimaryExpression	"""AUTH_INFO_REQUIRED"""		127876	0					
ANR	127969	Identifier	NULL		127876	1					
ANR	127970	UnaryOperationExpression	"! strcmp ( auth_info_required , ""negotiate"" )"		127876	1					
ANR	127971	UnaryOperator	!		127876	0					
ANR	127972	CallExpression	"strcmp ( auth_info_required , ""negotiate"" )"		127876	1					
ANR	127973	Callee	strcmp		127876	0					
ANR	127974	Identifier	strcmp		127876	0					
ANR	127975	ArgumentList	auth_info_required		127876	1					
ANR	127976	Argument	auth_info_required		127876	0					
ANR	127977	Identifier	auth_info_required		127876	0					
ANR	127978	Argument	"""negotiate"""		127876	1					
ANR	127979	PrimaryExpression	"""negotiate"""		127876	0					
ANR	127980	ExpressionStatement	options |= _HTTP_RESOLVE_FQDN	72:4:2063:2092	127876	1	True				
ANR	127981	AssignmentExpression	options |= _HTTP_RESOLVE_FQDN		127876	0		|=			
ANR	127982	Identifier	options		127876	0					
ANR	127983	Identifier	_HTTP_RESOLVE_FQDN		127876	1					
ANR	127984	IfStatement	"if ( ( ppd = ppdOpenFile ( getenv ( ""PPD"" ) ) ) != NULL )"		127876	8					
ANR	127985	Condition	"( ppd = ppdOpenFile ( getenv ( ""PPD"" ) ) ) != NULL"	74:6:2101:2142	127876	0	True				
ANR	127986	EqualityExpression	"( ppd = ppdOpenFile ( getenv ( ""PPD"" ) ) ) != NULL"		127876	0		!=			
ANR	127987	AssignmentExpression	"ppd = ppdOpenFile ( getenv ( ""PPD"" ) )"		127876	0		=			
ANR	127988	Identifier	ppd		127876	0					
ANR	127989	CallExpression	"ppdOpenFile ( getenv ( ""PPD"" ) )"		127876	1					
ANR	127990	Callee	ppdOpenFile		127876	0					
ANR	127991	Identifier	ppdOpenFile		127876	0					
ANR	127992	ArgumentList	"getenv ( ""PPD"" )"		127876	1					
ANR	127993	Argument	"getenv ( ""PPD"" )"		127876	0					
ANR	127994	CallExpression	"getenv ( ""PPD"" )"		127876	0					
ANR	127995	Callee	getenv		127876	0					
ANR	127996	Identifier	getenv		127876	0					
ANR	127997	ArgumentList	"""PPD"""		127876	1					
ANR	127998	Argument	"""PPD"""		127876	0					
ANR	127999	PrimaryExpression	"""PPD"""		127876	0					
ANR	128000	Identifier	NULL		127876	1					
ANR	128001	CompoundStatement		24:2:679:679	127876	1					
ANR	128002	IfStatement	"if ( ( ppdattr = ppdFindAttr ( ppd , ""cupsIPPFaxOut"" , NULL ) ) != NULL && ! _cups_strcasecmp ( ppdattr -> value , ""true"" ) )"		127876	0					
ANR	128003	Condition	"( ppdattr = ppdFindAttr ( ppd , ""cupsIPPFaxOut"" , NULL ) ) != NULL && ! _cups_strcasecmp ( ppdattr -> value , ""true"" )"	76:8:2157:2268	127876	0	True				
ANR	128004	AndExpression	"( ppdattr = ppdFindAttr ( ppd , ""cupsIPPFaxOut"" , NULL ) ) != NULL && ! _cups_strcasecmp ( ppdattr -> value , ""true"" )"		127876	0		&&			
ANR	128005	EqualityExpression	"( ppdattr = ppdFindAttr ( ppd , ""cupsIPPFaxOut"" , NULL ) ) != NULL"		127876	0		!=			
ANR	128006	AssignmentExpression	"ppdattr = ppdFindAttr ( ppd , ""cupsIPPFaxOut"" , NULL )"		127876	0		=			
ANR	128007	Identifier	ppdattr		127876	0					
ANR	128008	CallExpression	"ppdFindAttr ( ppd , ""cupsIPPFaxOut"" , NULL )"		127876	1					
ANR	128009	Callee	ppdFindAttr		127876	0					
ANR	128010	Identifier	ppdFindAttr		127876	0					
ANR	128011	ArgumentList	ppd		127876	1					
ANR	128012	Argument	ppd		127876	0					
ANR	128013	Identifier	ppd		127876	0					
ANR	128014	Argument	"""cupsIPPFaxOut"""		127876	1					
ANR	128015	PrimaryExpression	"""cupsIPPFaxOut"""		127876	0					
ANR	128016	Argument	NULL		127876	2					
ANR	128017	Identifier	NULL		127876	0					
ANR	128018	Identifier	NULL		127876	1					
ANR	128019	UnaryOperationExpression	"! _cups_strcasecmp ( ppdattr -> value , ""true"" )"		127876	1					
ANR	128020	UnaryOperator	!		127876	0					
ANR	128021	CallExpression	"_cups_strcasecmp ( ppdattr -> value , ""true"" )"		127876	1					
ANR	128022	Callee	_cups_strcasecmp		127876	0					
ANR	128023	Identifier	_cups_strcasecmp		127876	0					
ANR	128024	ArgumentList	ppdattr -> value		127876	1					
ANR	128025	Argument	ppdattr -> value		127876	0					
ANR	128026	PtrMemberAccess	ppdattr -> value		127876	0					
ANR	128027	Identifier	ppdattr		127876	0					
ANR	128028	Identifier	value		127876	1					
ANR	128029	Argument	"""true"""		127876	1					
ANR	128030	PrimaryExpression	"""true"""		127876	0					
ANR	128031	ExpressionStatement	options |= _HTTP_RESOLVE_FAXOUT	78:6:2277:2308	127876	1	True				
ANR	128032	AssignmentExpression	options |= _HTTP_RESOLVE_FAXOUT		127876	0		|=			
ANR	128033	Identifier	options		127876	0					
ANR	128034	Identifier	_HTTP_RESOLVE_FAXOUT		127876	1					
ANR	128035	ExpressionStatement	ppdClose ( ppd )	80:4:2315:2328	127876	1	True				
ANR	128036	CallExpression	ppdClose ( ppd )		127876	0					
ANR	128037	Callee	ppdClose		127876	0					
ANR	128038	Identifier	ppdClose		127876	0					
ANR	128039	ArgumentList	ppd		127876	1					
ANR	128040	Argument	ppd		127876	0					
ANR	128041	Identifier	ppd		127876	0					
ANR	128042	ReturnStatement	"return ( _httpResolveURI ( device_uri , cg -> resolved_uri , sizeof ( cg -> resolved_uri ) , options , NULL , NULL ) ) ;"	83:2:2337:2464	127876	9	True				
ANR	128043	CallExpression	"_httpResolveURI ( device_uri , cg -> resolved_uri , sizeof ( cg -> resolved_uri ) , options , NULL , NULL )"		127876	0					
ANR	128044	Callee	_httpResolveURI		127876	0					
ANR	128045	Identifier	_httpResolveURI		127876	0					
ANR	128046	ArgumentList	device_uri		127876	1					
ANR	128047	Argument	device_uri		127876	0					
ANR	128048	Identifier	device_uri		127876	0					
ANR	128049	Argument	cg -> resolved_uri		127876	1					
ANR	128050	PtrMemberAccess	cg -> resolved_uri		127876	0					
ANR	128051	Identifier	cg		127876	0					
ANR	128052	Identifier	resolved_uri		127876	1					
ANR	128053	Argument	sizeof ( cg -> resolved_uri )		127876	2					
ANR	128054	SizeofExpression	sizeof ( cg -> resolved_uri )		127876	0					
ANR	128055	Sizeof	sizeof		127876	0					
ANR	128056	PtrMemberAccess	cg -> resolved_uri		127876	1					
ANR	128057	Identifier	cg		127876	0					
ANR	128058	Identifier	resolved_uri		127876	1					
ANR	128059	Argument	options		127876	3					
ANR	128060	Identifier	options		127876	0					
ANR	128061	Argument	NULL		127876	4					
ANR	128062	Identifier	NULL		127876	0					
ANR	128063	Argument	NULL		127876	5					
ANR	128064	Identifier	NULL		127876	0					
ANR	128065	ReturnType	const char *		127876	1					
ANR	128066	Identifier	cupsBackendDeviceURI		127876	2					
ANR	128067	ParameterList	char * * argv		127876	3					
ANR	128068	Parameter	char * * argv	51:21:1421:1431	127876	0	True				
ANR	128069	ParameterType	char * *		127876	0					
ANR	128070	Identifier	argv		127876	1					
ANR	128071	CFGEntryNode	ENTRY		127876		True				
ANR	128072	CFGExitNode	EXIT		127876		True				
ANR	128073	Symbol	strcmp		127876						
ANR	128074	Symbol	ppdOpenFile		127876						
ANR	128075	Symbol	_cups_strcasecmp		127876						
ANR	128076	Symbol	NULL		127876						
ANR	128077	Symbol	cg		127876						
ANR	128078	Symbol	ppd		127876						
ANR	128079	Symbol	_HTTP_RESOLVE_STDERR		127876						
ANR	128080	Symbol	_HTTP_RESOLVE_FAXOUT		127876						
ANR	128081	Symbol	_cupsGlobals		127876						
ANR	128082	Symbol	strchr		127876						
ANR	128083	Symbol	* cg		127876						
ANR	128084	Symbol	auth_info_required		127876						
ANR	128085	Symbol	* argv		127876						
ANR	128086	Symbol	_httpResolveURI		127876						
ANR	128087	Symbol	argv		127876						
ANR	128088	Symbol	ppdFindAttr		127876						
ANR	128089	Symbol	ppdattr		127876						
ANR	128090	Symbol	ppdattr -> value		127876						
ANR	128091	Symbol	cg -> resolved_uri		127876						
ANR	128092	Symbol	device_uri		127876						
ANR	128093	Symbol	_HTTP_RESOLVE_FQDN		127876						
ANR	128094	Symbol	options		127876						
ANR	128095	Symbol	* ppdattr		127876						
ANR	128096	Symbol	getenv		127876						
ANR	128097	Function	cupsBackendReport	98:0:2777:3593							
ANR	128098	FunctionDef	"cupsBackendReport (const char * device_scheme , const char * device_uri , const char * device_make_and_model , const char * device_info , const char * device_id , const char * device_location)"		128097	0					
ANR	128099	CompoundStatement		106:0:3239:3593	128097	0					
ANR	128100	IfStatement	if ( ! device_scheme || ! device_uri )		128097	0					
ANR	128101	Condition	! device_scheme || ! device_uri	107:6:3247:3275	128097	0	True				
ANR	128102	OrExpression	! device_scheme || ! device_uri		128097	0		||			
ANR	128103	UnaryOperationExpression	! device_scheme		128097	0					
ANR	128104	UnaryOperator	!		128097	0					
ANR	128105	Identifier	device_scheme		128097	1					
ANR	128106	UnaryOperationExpression	! device_uri		128097	1					
ANR	128107	UnaryOperator	!		128097	0					
ANR	128108	Identifier	device_uri		128097	1					
ANR	128109	ReturnStatement	return ;	108:4:3282:3288	128097	1	True				
ANR	128110	ExpressionStatement	"printf ( ""%s %s"" , device_scheme , device_uri )"	110:2:3293:3335	128097	1	True				
ANR	128111	CallExpression	"printf ( ""%s %s"" , device_scheme , device_uri )"		128097	0					
ANR	128112	Callee	printf		128097	0					
ANR	128113	Identifier	printf		128097	0					
ANR	128114	ArgumentList	"""%s %s"""		128097	1					
ANR	128115	Argument	"""%s %s"""		128097	0					
ANR	128116	PrimaryExpression	"""%s %s"""		128097	0					
ANR	128117	Argument	device_scheme		128097	1					
ANR	128118	Identifier	device_scheme		128097	0					
ANR	128119	Argument	device_uri		128097	2					
ANR	128120	Identifier	device_uri		128097	0					
ANR	128121	IfStatement	if ( device_make_and_model && * device_make_and_model )		128097	2					
ANR	128122	Condition	device_make_and_model && * device_make_and_model	111:6:3343:3389	128097	0	True				
ANR	128123	AndExpression	device_make_and_model && * device_make_and_model		128097	0		&&			
ANR	128124	Identifier	device_make_and_model		128097	0					
ANR	128125	UnaryOperationExpression	* device_make_and_model		128097	1					
ANR	128126	UnaryOperator	*		128097	0					
ANR	128127	Identifier	device_make_and_model		128097	1					
ANR	128128	ExpressionStatement	quote_string ( device_make_and_model )	112:4:3396:3431	128097	1	True				
ANR	128129	CallExpression	quote_string ( device_make_and_model )		128097	0					
ANR	128130	Callee	quote_string		128097	0					
ANR	128131	Identifier	quote_string		128097	0					
ANR	128132	ArgumentList	device_make_and_model		128097	1					
ANR	128133	Argument	device_make_and_model		128097	0					
ANR	128134	Identifier	device_make_and_model		128097	0					
ANR	128135	ElseStatement	else		128097	0					
ANR	128136	ExpressionStatement	"quote_string ( ""unknown"" )"	114:4:3444:3467	128097	0	True				
ANR	128137	CallExpression	"quote_string ( ""unknown"" )"		128097	0					
ANR	128138	Callee	quote_string		128097	0					
ANR	128139	Identifier	quote_string		128097	0					
ANR	128140	ArgumentList	"""unknown"""		128097	1					
ANR	128141	Argument	"""unknown"""		128097	0					
ANR	128142	PrimaryExpression	"""unknown"""		128097	0					
ANR	128143	ExpressionStatement	quote_string ( device_info )	115:2:3471:3496	128097	3	True				
ANR	128144	CallExpression	quote_string ( device_info )		128097	0					
ANR	128145	Callee	quote_string		128097	0					
ANR	128146	Identifier	quote_string		128097	0					
ANR	128147	ArgumentList	device_info		128097	1					
ANR	128148	Argument	device_info		128097	0					
ANR	128149	Identifier	device_info		128097	0					
ANR	128150	ExpressionStatement	quote_string ( device_id )	116:2:3500:3523	128097	4	True				
ANR	128151	CallExpression	quote_string ( device_id )		128097	0					
ANR	128152	Callee	quote_string		128097	0					
ANR	128153	Identifier	quote_string		128097	0					
ANR	128154	ArgumentList	device_id		128097	1					
ANR	128155	Argument	device_id		128097	0					
ANR	128156	Identifier	device_id		128097	0					
ANR	128157	ExpressionStatement	quote_string ( device_location )	117:2:3527:3556	128097	5	True				
ANR	128158	CallExpression	quote_string ( device_location )		128097	0					
ANR	128159	Callee	quote_string		128097	0					
ANR	128160	Identifier	quote_string		128097	0					
ANR	128161	ArgumentList	device_location		128097	1					
ANR	128162	Argument	device_location		128097	0					
ANR	128163	Identifier	device_location		128097	0					
ANR	128164	ExpressionStatement	putchar ( '\\n' )	118:2:3560:3573	128097	6	True				
ANR	128165	CallExpression	putchar ( '\\n' )		128097	0					
ANR	128166	Callee	putchar		128097	0					
ANR	128167	Identifier	putchar		128097	0					
ANR	128168	ArgumentList	'\\n'		128097	1					
ANR	128169	Argument	'\\n'		128097	0					
ANR	128170	PrimaryExpression	'\\n'		128097	0					
ANR	128171	ExpressionStatement	fflush ( stdout )	119:2:3577:3591	128097	7	True				
ANR	128172	CallExpression	fflush ( stdout )		128097	0					
ANR	128173	Callee	fflush		128097	0					
ANR	128174	Identifier	fflush		128097	0					
ANR	128175	ArgumentList	stdout		128097	1					
ANR	128176	Argument	stdout		128097	0					
ANR	128177	Identifier	stdout		128097	0					
ANR	128178	ReturnType	void		128097	1					
ANR	128179	Identifier	cupsBackendReport		128097	2					
ANR	128180	ParameterList	"const char * device_scheme , const char * device_uri , const char * device_make_and_model , const char * device_info , const char * device_id , const char * device_location"		128097	3					
ANR	128181	Parameter	const char * device_scheme	100:4:2805:2829	128097	0	True				
ANR	128182	ParameterType	const char *		128097	0					
ANR	128183	Identifier	device_scheme		128097	1					
ANR	128184	Parameter	const char * device_uri	101:4:2868:2889	128097	1	True				
ANR	128185	ParameterType	const char *		128097	0					
ANR	128186	Identifier	device_uri		128097	1					
ANR	128187	Parameter	const char * device_make_and_model	102:4:2925:2957	128097	2	True				
ANR	128188	ParameterType	const char *		128097	0					
ANR	128189	Identifier	device_make_and_model		128097	1					
ANR	128190	Parameter	const char * device_info	103:4:3018:3040	128097	3	True				
ANR	128191	ParameterType	const char *		128097	0					
ANR	128192	Identifier	device_info		128097	1					
ANR	128193	Parameter	const char * device_id	104:4:3092:3112	128097	4	True				
ANR	128194	ParameterType	const char *		128097	0					
ANR	128195	Identifier	device_id		128097	1					
ANR	128196	Parameter	const char * device_location	105:4:3162:3188	128097	5	True				
ANR	128197	ParameterType	const char *		128097	0					
ANR	128198	Identifier	device_location		128097	1					
ANR	128199	CFGEntryNode	ENTRY		128097		True				
ANR	128200	CFGExitNode	EXIT		128097		True				
ANR	128201	Symbol	device_scheme		128097						
ANR	128202	Symbol	device_info		128097						
ANR	128203	Symbol	device_id		128097						
ANR	128204	Symbol	stdout		128097						
ANR	128205	Symbol	device_uri		128097						
ANR	128206	Symbol	* device_make_and_model		128097						
ANR	128207	Symbol	device_make_and_model		128097						
ANR	128208	Symbol	device_location		128097						
ANR	128209	Function	quote_string	127:0:3678:4012							
ANR	128210	FunctionDef	quote_string (const char * s)		128209	0					
ANR	128211	CompoundStatement		129:0:3745:4012	128209	0					
ANR	128212	ExpressionStatement	"fputs ( "" \\"""" , stdout )"	130:2:3749:3769	128209	0	True				
ANR	128213	CallExpression	"fputs ( "" \\"""" , stdout )"		128209	0					
ANR	128214	Callee	fputs		128209	0					
ANR	128215	Identifier	fputs		128209	0					
ANR	128216	ArgumentList	""" \\"""""		128209	1					
ANR	128217	Argument	""" \\"""""		128209	0					
ANR	128218	PrimaryExpression	""" \\"""""		128209	0					
ANR	128219	Argument	stdout		128209	1					
ANR	128220	Identifier	stdout		128209	0					
ANR	128221	IfStatement	if ( s )		128209	1					
ANR	128222	Condition	s	132:6:3778:3778	128209	0	True				
ANR	128223	Identifier	s		128209	0					
ANR	128224	CompoundStatement		5:2:37:37	128209	1					
ANR	128225	WhileStatement	while ( * s )		128209	0					
ANR	128226	Condition	* s	134:11:3796:3797	128209	0	True				
ANR	128227	UnaryOperationExpression	* s		128209	0					
ANR	128228	UnaryOperator	*		128209	0					
ANR	128229	Identifier	s		128209	1					
ANR	128230	CompoundStatement		7:4:58:58	128209	1					
ANR	128231	IfStatement	"if ( * s == '\\\\' || * s == '\\""' )"		128209	0					
ANR	128232	Condition	"* s == '\\\\' || * s == '\\""'"	136:10:3816:3839	128209	0	True				
ANR	128233	OrExpression	"* s == '\\\\' || * s == '\\""'"		128209	0		||			
ANR	128234	EqualityExpression	* s == '\\\\'		128209	0		==			
ANR	128235	UnaryOperationExpression	* s		128209	0					
ANR	128236	UnaryOperator	*		128209	0					
ANR	128237	Identifier	s		128209	1					
ANR	128238	PrimaryExpression	'\\\\'		128209	1					
ANR	128239	EqualityExpression	"* s == '\\""'"		128209	1		==			
ANR	128240	UnaryOperationExpression	* s		128209	0					
ANR	128241	UnaryOperator	*		128209	0					
ANR	128242	Identifier	s		128209	1					
ANR	128243	PrimaryExpression	"'\\""'"		128209	1					
ANR	128244	ExpressionStatement	putchar ( '\\\\' )	137:1:3843:3856	128209	1	True				
ANR	128245	CallExpression	putchar ( '\\\\' )		128209	0					
ANR	128246	Callee	putchar		128209	0					
ANR	128247	Identifier	putchar		128209	0					
ANR	128248	ArgumentList	'\\\\'		128209	1					
ANR	128249	Argument	'\\\\'		128209	0					
ANR	128250	PrimaryExpression	'\\\\'		128209	0					
ANR	128251	IfStatement	if ( ( ( * s & 255 ) < ' ' && * s != '\\t' ) || * s == 0x7f )		128209	1					
ANR	128252	Condition	( ( * s & 255 ) < ' ' && * s != '\\t' ) || * s == 0x7f	139:10:3869:3914	128209	0	True				
ANR	128253	OrExpression	( ( * s & 255 ) < ' ' && * s != '\\t' ) || * s == 0x7f		128209	0		||			
ANR	128254	AndExpression	( * s & 255 ) < ' ' && * s != '\\t'		128209	0		&&			
ANR	128255	RelationalExpression	( * s & 255 ) < ' '		128209	0		<			
ANR	128256	BitAndExpression	* s & 255		128209	0		&			
ANR	128257	UnaryOperationExpression	* s		128209	0					
ANR	128258	UnaryOperator	*		128209	0					
ANR	128259	Identifier	s		128209	1					
ANR	128260	PrimaryExpression	255		128209	1					
ANR	128261	PrimaryExpression	' '		128209	1					
ANR	128262	EqualityExpression	* s != '\\t'		128209	1		!=			
ANR	128263	UnaryOperationExpression	* s		128209	0					
ANR	128264	UnaryOperator	*		128209	0					
ANR	128265	Identifier	s		128209	1					
ANR	128266	PrimaryExpression	'\\t'		128209	1					
ANR	128267	EqualityExpression	* s == 0x7f		128209	1		==			
ANR	128268	UnaryOperationExpression	* s		128209	0					
ANR	128269	UnaryOperator	*		128209	0					
ANR	128270	Identifier	s		128209	1					
ANR	128271	PrimaryExpression	0x7f		128209	1					
ANR	128272	ExpressionStatement	putchar ( ' ' )	140:8:3925:3937	128209	1	True				
ANR	128273	CallExpression	putchar ( ' ' )		128209	0					
ANR	128274	Callee	putchar		128209	0					
ANR	128275	Identifier	putchar		128209	0					
ANR	128276	ArgumentList	' '		128209	1					
ANR	128277	Argument	' '		128209	0					
ANR	128278	PrimaryExpression	' '		128209	0					
ANR	128279	ElseStatement	else		128209	0					
ANR	128280	ExpressionStatement	putchar ( * s )	142:8:3958:3969	128209	0	True				
ANR	128281	CallExpression	putchar ( * s )		128209	0					
ANR	128282	Callee	putchar		128209	0					
ANR	128283	Identifier	putchar		128209	0					
ANR	128284	ArgumentList	* s		128209	1					
ANR	128285	Argument	* s		128209	0					
ANR	128286	UnaryOperationExpression	* s		128209	0					
ANR	128287	UnaryOperator	*		128209	0					
ANR	128288	Identifier	s		128209	1					
ANR	128289	ExpressionStatement	s ++	144:6:3978:3982	128209	2	True				
ANR	128290	PostIncDecOperationExpression	s ++		128209	0					
ANR	128291	Identifier	s		128209	0					
ANR	128292	IncDec	++		128209	1					
ANR	128293	ExpressionStatement	"putchar ( '\\""' )"	148:2:3997:4010	128209	2	True				
ANR	128294	CallExpression	"putchar ( '\\""' )"		128209	0					
ANR	128295	Callee	putchar		128209	0					
ANR	128296	Identifier	putchar		128209	0					
ANR	128297	ArgumentList	"'\\""'"		128209	1					
ANR	128298	Argument	"'\\""'"		128209	0					
ANR	128299	PrimaryExpression	"'\\""'"		128209	0					
ANR	128300	ReturnType	static void		128209	1					
ANR	128301	Identifier	quote_string		128209	2					
ANR	128302	ParameterList	const char * s		128209	3					
ANR	128303	Parameter	const char * s	128:13:3703:3715	128209	0	True				
ANR	128304	ParameterType	const char *		128209	0					
ANR	128305	Identifier	s		128209	1					
ANR	128306	CFGEntryNode	ENTRY		128209		True				
ANR	128307	CFGExitNode	EXIT		128209		True				
ANR	128308	Symbol	s		128209						
ANR	128309	Symbol	stdout		128209						
ANR	128310	Symbol	* s		128209						
