command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5049872	File	data/converged/CVE-2018-16863_ghostpdl/gsdll.c								
ANR	5049873	DeclStmt									
ANR	5049874	Decl							extern HWND	extern HWND	hwndtext
ANR	5049875	DeclStmt									
ANR	5049876	Decl							GSDLL_CALLBACK	GSDLL_CALLBACK	pgsdll_callback
ANR	5049877	DeclStmt									
ANR	5049878	Decl							gs_main_instance	gs_main_instance *	pgs_minst
ANR	5049879	DeclStmt									
ANR	5049880	Decl							int GSDLLCALL	"int GSDLLCALL ( void * caller_handle , char * buf , int len )"	gsdll_old_stdin
ANR	5049881	DeclStmt									
ANR	5049882	Decl							int GSDLLCALL	"int GSDLLCALL ( void * caller_handle , const char * str , int len )"	gsdll_old_stdout
ANR	5049883	DeclStmt									
ANR	5049884	Decl							int GSDLLCALL	"int GSDLLCALL ( void * caller_handle , const char * str , int len )"	gsdll_old_stderr
ANR	5049885	DeclStmt									
ANR	5049886	Decl							int GSDLLCALL	int GSDLLCALL ( void * caller_handle )	gsdll_old_poll
ANR	5049887	Function	gsdll_init_with_encoding	73:0:2217:3057							
ANR	5049888	FunctionDef	"gsdll_init_with_encoding (GSDLL_CALLBACK callback , HWND hwnd , int argc , char * argv [ ] , int encoding)"		5049887	0					
ANR	5049889	CompoundStatement		75:0:2342:3057	5049887	0					
ANR	5049890	IdentifierDeclStatement	int code ;	76:4:2348:2356	5049887	0	True				
ANR	5049891	IdentifierDecl	code		5049887	0					
ANR	5049892	IdentifierDeclType	int		5049887	0					
ANR	5049893	Identifier	code		5049887	1					
ANR	5049894	IfStatement	"if ( ( code = gsapi_new_instance ( & pgs_minst , ( void * ) 1 ) ) < 0 )"		5049887	1					
ANR	5049895	Condition	"( code = gsapi_new_instance ( & pgs_minst , ( void * ) 1 ) ) < 0"	78:8:2367:2420	5049887	0	True				
ANR	5049896	RelationalExpression	"( code = gsapi_new_instance ( & pgs_minst , ( void * ) 1 ) ) < 0"		5049887	0		<			
ANR	5049897	AssignmentExpression	"code = gsapi_new_instance ( & pgs_minst , ( void * ) 1 )"		5049887	0		=			
ANR	5049898	Identifier	code		5049887	0					
ANR	5049899	CallExpression	"gsapi_new_instance ( & pgs_minst , ( void * ) 1 )"		5049887	1					
ANR	5049900	Callee	gsapi_new_instance		5049887	0					
ANR	5049901	Identifier	gsapi_new_instance		5049887	0					
ANR	5049902	ArgumentList	& pgs_minst		5049887	1					
ANR	5049903	Argument	& pgs_minst		5049887	0					
ANR	5049904	UnaryOperationExpression	& pgs_minst		5049887	0					
ANR	5049905	UnaryOperator	&		5049887	0					
ANR	5049906	Identifier	pgs_minst		5049887	1					
ANR	5049907	Argument	( void * ) 1		5049887	1					
ANR	5049908	CastExpression	( void * ) 1		5049887	0					
ANR	5049909	CastTarget	void *		5049887	0					
ANR	5049910	PrimaryExpression	1		5049887	1					
ANR	5049911	PrimaryExpression	0		5049887	1					
ANR	5049912	ReturnStatement	return - 1 ;	79:8:2431:2440	5049887	1	True				
ANR	5049913	UnaryOperationExpression	- 1		5049887	0					
ANR	5049914	UnaryOperator	-		5049887	0					
ANR	5049915	PrimaryExpression	1		5049887	1					
ANR	5049916	ExpressionStatement	"gsapi_set_stdio ( pgs_minst , gsdll_old_stdin , gsdll_old_stdout , gsdll_old_stderr )"	81:4:2447:2534	5049887	2	True				
ANR	5049917	CallExpression	"gsapi_set_stdio ( pgs_minst , gsdll_old_stdin , gsdll_old_stdout , gsdll_old_stderr )"		5049887	0					
ANR	5049918	Callee	gsapi_set_stdio		5049887	0					
ANR	5049919	Identifier	gsapi_set_stdio		5049887	0					
ANR	5049920	ArgumentList	pgs_minst		5049887	1					
ANR	5049921	Argument	pgs_minst		5049887	0					
ANR	5049922	Identifier	pgs_minst		5049887	0					
ANR	5049923	Argument	gsdll_old_stdin		5049887	1					
ANR	5049924	Identifier	gsdll_old_stdin		5049887	0					
ANR	5049925	Argument	gsdll_old_stdout		5049887	2					
ANR	5049926	Identifier	gsdll_old_stdout		5049887	0					
ANR	5049927	Argument	gsdll_old_stderr		5049887	3					
ANR	5049928	Identifier	gsdll_old_stderr		5049887	0					
ANR	5049929	ExpressionStatement	"gsapi_set_poll ( pgs_minst , gsdll_old_poll )"	83:4:2540:2581	5049887	3	True				
ANR	5049930	CallExpression	"gsapi_set_poll ( pgs_minst , gsdll_old_poll )"		5049887	0					
ANR	5049931	Callee	gsapi_set_poll		5049887	0					
ANR	5049932	Identifier	gsapi_set_poll		5049887	0					
ANR	5049933	ArgumentList	pgs_minst		5049887	1					
ANR	5049934	Argument	pgs_minst		5049887	0					
ANR	5049935	Identifier	pgs_minst		5049887	0					
ANR	5049936	Argument	gsdll_old_poll		5049887	1					
ANR	5049937	Identifier	gsdll_old_poll		5049887	0					
ANR	5049938	ExpressionStatement	hwndtext = hwnd	88:8:2673:2686	5049887	4	True				
ANR	5049939	AssignmentExpression	hwndtext = hwnd		5049887	0		=			
ANR	5049940	Identifier	hwndtext		5049887	0					
ANR	5049941	Identifier	hwnd		5049887	1					
ANR	5049942	ExpressionStatement	pgsdll_callback = callback	92:4:2737:2763	5049887	5	True				
ANR	5049943	AssignmentExpression	pgsdll_callback = callback		5049887	0		=			
ANR	5049944	Identifier	pgsdll_callback		5049887	0					
ANR	5049945	Identifier	callback		5049887	1					
ANR	5049946	ExpressionStatement	"code = gsapi_set_arg_encoding ( pgs_minst , encoding )"	95:4:2807:2857	5049887	6	True				
ANR	5049947	AssignmentExpression	"code = gsapi_set_arg_encoding ( pgs_minst , encoding )"		5049887	0		=			
ANR	5049948	Identifier	code		5049887	0					
ANR	5049949	CallExpression	"gsapi_set_arg_encoding ( pgs_minst , encoding )"		5049887	1					
ANR	5049950	Callee	gsapi_set_arg_encoding		5049887	0					
ANR	5049951	Identifier	gsapi_set_arg_encoding		5049887	0					
ANR	5049952	ArgumentList	pgs_minst		5049887	1					
ANR	5049953	Argument	pgs_minst		5049887	0					
ANR	5049954	Identifier	pgs_minst		5049887	0					
ANR	5049955	Argument	encoding		5049887	1					
ANR	5049956	Identifier	encoding		5049887	0					
ANR	5049957	IfStatement	if ( code >= 0 )		5049887	7					
ANR	5049958	Condition	code >= 0	96:8:2867:2875	5049887	0	True				
ANR	5049959	RelationalExpression	code >= 0		5049887	0		>=			
ANR	5049960	Identifier	code		5049887	0					
ANR	5049961	PrimaryExpression	0		5049887	1					
ANR	5049962	ExpressionStatement	"code = gsapi_init_with_args ( pgs_minst , argc , argv )"	97:8:2886:2936	5049887	1	True				
ANR	5049963	AssignmentExpression	"code = gsapi_init_with_args ( pgs_minst , argc , argv )"		5049887	0		=			
ANR	5049964	Identifier	code		5049887	0					
ANR	5049965	CallExpression	"gsapi_init_with_args ( pgs_minst , argc , argv )"		5049887	1					
ANR	5049966	Callee	gsapi_init_with_args		5049887	0					
ANR	5049967	Identifier	gsapi_init_with_args		5049887	0					
ANR	5049968	ArgumentList	pgs_minst		5049887	1					
ANR	5049969	Argument	pgs_minst		5049887	0					
ANR	5049970	Identifier	pgs_minst		5049887	0					
ANR	5049971	Argument	argc		5049887	1					
ANR	5049972	Identifier	argc		5049887	0					
ANR	5049973	Argument	argv		5049887	2					
ANR	5049974	Identifier	argv		5049887	0					
ANR	5049975	IfStatement	if ( code == gs_error_Quit )		5049887	8					
ANR	5049976	Condition	code == gs_error_Quit	98:8:2946:2966	5049887	0	True				
ANR	5049977	EqualityExpression	code == gs_error_Quit		5049887	0		==			
ANR	5049978	Identifier	code		5049887	0					
ANR	5049979	Identifier	gs_error_Quit		5049887	1					
ANR	5049980	CompoundStatement		24:31:626:626	5049887	1					
ANR	5049981	ExpressionStatement	gsapi_exit ( pgs_minst )	99:8:2979:3000	5049887	0	True				
ANR	5049982	CallExpression	gsapi_exit ( pgs_minst )		5049887	0					
ANR	5049983	Callee	gsapi_exit		5049887	0					
ANR	5049984	Identifier	gsapi_exit		5049887	0					
ANR	5049985	ArgumentList	pgs_minst		5049887	1					
ANR	5049986	Argument	pgs_minst		5049887	0					
ANR	5049987	Identifier	pgs_minst		5049887	0					
ANR	5049988	ReturnStatement	return GSDLL_INIT_QUIT ;	100:8:3010:3032	5049887	1	True				
ANR	5049989	Identifier	GSDLL_INIT_QUIT		5049887	0					
ANR	5049990	ReturnStatement	return code ;	102:4:3044:3055	5049887	9	True				
ANR	5049991	Identifier	code		5049887	0					
ANR	5049992	ReturnType	int GSDLLEXPORT GSDLLAPI		5049887	1					
ANR	5049993	Identifier	gsdll_init_with_encoding		5049887	2					
ANR	5049994	ParameterList	"GSDLL_CALLBACK callback , HWND hwnd , int argc , char * argv [ ] , int encoding"		5049887	3					
ANR	5049995	Parameter	GSDLL_CALLBACK callback	74:25:2267:2289	5049887	0	True				
ANR	5049996	ParameterType	GSDLL_CALLBACK		5049887	0					
ANR	5049997	Identifier	callback		5049887	1					
ANR	5049998	Parameter	HWND hwnd	74:50:2292:2300	5049887	1	True				
ANR	5049999	ParameterType	HWND		5049887	0					
ANR	5050000	Identifier	hwnd		5049887	1					
ANR	5050001	Parameter	int argc	74:61:2303:2310	5049887	2	True				
ANR	5050002	ParameterType	int		5049887	0					
ANR	5050003	Identifier	argc		5049887	1					
ANR	5050004	Parameter	char * argv [ ]	74:71:2313:2325	5049887	3	True				
ANR	5050005	ParameterType	char * [ ]		5049887	0					
ANR	5050006	Identifier	argv		5049887	1					
ANR	5050007	Parameter	int encoding	74:86:2328:2339	5049887	4	True				
ANR	5050008	ParameterType	int		5049887	0					
ANR	5050009	Identifier	encoding		5049887	1					
ANR	5050010	CFGEntryNode	ENTRY		5049887		True				
ANR	5050011	CFGExitNode	EXIT		5049887		True				
ANR	5050012	Symbol	argc		5049887						
ANR	5050013	Symbol	gs_error_Quit		5049887						
ANR	5050014	Symbol	code		5049887						
ANR	5050015	Symbol	gsdll_old_stderr		5049887						
ANR	5050016	Symbol	gsapi_set_arg_encoding		5049887						
ANR	5050017	Symbol	GSDLL_INIT_QUIT		5049887						
ANR	5050018	Symbol	encoding		5049887						
ANR	5050019	Symbol	gsdll_old_stdout		5049887						
ANR	5050020	Symbol	argv		5049887						
ANR	5050021	Symbol	gsdll_old_stdin		5049887						
ANR	5050022	Symbol	gsdll_old_poll		5049887						
ANR	5050023	Symbol	gsapi_new_instance		5049887						
ANR	5050024	Symbol	pgsdll_callback		5049887						
ANR	5050025	Symbol	& pgs_minst		5049887						
ANR	5050026	Symbol	hwnd		5049887						
ANR	5050027	Symbol	pgs_minst		5049887						
ANR	5050028	Symbol	callback		5049887						
ANR	5050029	Symbol	gsapi_init_with_args		5049887						
ANR	5050030	Symbol	hwndtext		5049887						
ANR	5050031	Function	gsdll_init	105:0:3060:3247							
ANR	5050032	FunctionDef	"gsdll_init (GSDLL_CALLBACK callback , HWND hwnd , int argc , char * argv [ ])"		5050031	0					
ANR	5050033	CompoundStatement		107:0:3157:3247	5050031	0					
ANR	5050034	ReturnStatement	"return gsdll_init_with_encoding ( callback , hwnd , argc , argv , GS_ARG_ENCODING_LOCAL ) ;"	108:4:3163:3245	5050031	0	True				
ANR	5050035	CallExpression	"gsdll_init_with_encoding ( callback , hwnd , argc , argv , GS_ARG_ENCODING_LOCAL )"		5050031	0					
ANR	5050036	Callee	gsdll_init_with_encoding		5050031	0					
ANR	5050037	Identifier	gsdll_init_with_encoding		5050031	0					
ANR	5050038	ArgumentList	callback		5050031	1					
ANR	5050039	Argument	callback		5050031	0					
ANR	5050040	Identifier	callback		5050031	0					
ANR	5050041	Argument	hwnd		5050031	1					
ANR	5050042	Identifier	hwnd		5050031	0					
ANR	5050043	Argument	argc		5050031	2					
ANR	5050044	Identifier	argc		5050031	0					
ANR	5050045	Argument	argv		5050031	3					
ANR	5050046	Identifier	argv		5050031	0					
ANR	5050047	Argument	GS_ARG_ENCODING_LOCAL		5050031	4					
ANR	5050048	Identifier	GS_ARG_ENCODING_LOCAL		5050031	0					
ANR	5050049	ReturnType	int GSDLLEXPORT GSDLLAPI		5050031	1					
ANR	5050050	Identifier	gsdll_init		5050031	2					
ANR	5050051	ParameterList	"GSDLL_CALLBACK callback , HWND hwnd , int argc , char * argv [ ]"		5050031	3					
ANR	5050052	Parameter	GSDLL_CALLBACK callback	106:11:3096:3118	5050031	0	True				
ANR	5050053	ParameterType	GSDLL_CALLBACK		5050031	0					
ANR	5050054	Identifier	callback		5050031	1					
ANR	5050055	Parameter	HWND hwnd	106:36:3121:3129	5050031	1	True				
ANR	5050056	ParameterType	HWND		5050031	0					
ANR	5050057	Identifier	hwnd		5050031	1					
ANR	5050058	Parameter	int argc	106:47:3132:3139	5050031	2	True				
ANR	5050059	ParameterType	int		5050031	0					
ANR	5050060	Identifier	argc		5050031	1					
ANR	5050061	Parameter	char * argv [ ]	106:57:3142:3154	5050031	3	True				
ANR	5050062	ParameterType	char * [ ]		5050031	0					
ANR	5050063	Identifier	argv		5050031	1					
ANR	5050064	CFGEntryNode	ENTRY		5050031		True				
ANR	5050065	CFGExitNode	EXIT		5050031		True				
ANR	5050066	Symbol	argc		5050031						
ANR	5050067	Symbol	hwnd		5050031						
ANR	5050068	Symbol	callback		5050031						
ANR	5050069	Symbol	gsdll_init_with_encoding		5050031						
ANR	5050070	Symbol	argv		5050031						
ANR	5050071	Symbol	GS_ARG_ENCODING_LOCAL		5050031						
ANR	5050072	Function	gsdll_initW	112:0:3267:3469							
ANR	5050073	FunctionDef	"gsdll_initW (GSDLL_CALLBACK callback , HWND hwnd , int argc , wchar_t * argv [ ])"		5050072	0					
ANR	5050074	CompoundStatement		114:0:3368:3469	5050072	0					
ANR	5050075	ReturnStatement	"return gsdll_init_with_encoding ( callback , hwnd , argc , ( char * * ) argv , GS_ARG_ENCODING_UTF16LE ) ;"	115:4:3374:3467	5050072	0	True				
ANR	5050076	CallExpression	"gsdll_init_with_encoding ( callback , hwnd , argc , ( char * * ) argv , GS_ARG_ENCODING_UTF16LE )"		5050072	0					
ANR	5050077	Callee	gsdll_init_with_encoding		5050072	0					
ANR	5050078	Identifier	gsdll_init_with_encoding		5050072	0					
ANR	5050079	ArgumentList	callback		5050072	1					
ANR	5050080	Argument	callback		5050072	0					
ANR	5050081	Identifier	callback		5050072	0					
ANR	5050082	Argument	hwnd		5050072	1					
ANR	5050083	Identifier	hwnd		5050072	0					
ANR	5050084	Argument	argc		5050072	2					
ANR	5050085	Identifier	argc		5050072	0					
ANR	5050086	Argument	( char * * ) argv		5050072	3					
ANR	5050087	CastExpression	( char * * ) argv		5050072	0					
ANR	5050088	CastTarget	char * *		5050072	0					
ANR	5050089	Identifier	argv		5050072	1					
ANR	5050090	Argument	GS_ARG_ENCODING_UTF16LE		5050072	4					
ANR	5050091	Identifier	GS_ARG_ENCODING_UTF16LE		5050072	0					
ANR	5050092	ReturnType	int GSDLLEXPORT GSDLLAPI		5050072	1					
ANR	5050093	Identifier	gsdll_initW		5050072	2					
ANR	5050094	ParameterList	"GSDLL_CALLBACK callback , HWND hwnd , int argc , wchar_t * argv [ ]"		5050072	3					
ANR	5050095	Parameter	GSDLL_CALLBACK callback	113:12:3304:3326	5050072	0	True				
ANR	5050096	ParameterType	GSDLL_CALLBACK		5050072	0					
ANR	5050097	Identifier	callback		5050072	1					
ANR	5050098	Parameter	HWND hwnd	113:37:3329:3337	5050072	1	True				
ANR	5050099	ParameterType	HWND		5050072	0					
ANR	5050100	Identifier	hwnd		5050072	1					
ANR	5050101	Parameter	int argc	113:48:3340:3347	5050072	2	True				
ANR	5050102	ParameterType	int		5050072	0					
ANR	5050103	Identifier	argc		5050072	1					
ANR	5050104	Parameter	wchar_t * argv [ ]	113:58:3350:3365	5050072	3	True				
ANR	5050105	ParameterType	wchar_t * [ ]		5050072	0					
ANR	5050106	Identifier	argv		5050072	1					
ANR	5050107	CFGEntryNode	ENTRY		5050072		True				
ANR	5050108	CFGExitNode	EXIT		5050072		True				
ANR	5050109	Symbol	argc		5050072						
ANR	5050110	Symbol	hwnd		5050072						
ANR	5050111	Symbol	callback		5050072						
ANR	5050112	Symbol	gsdll_init_with_encoding		5050072						
ANR	5050113	Symbol	argv		5050072						
ANR	5050114	Symbol	GS_ARG_ENCODING_UTF16LE		5050072						
ANR	5050115	Function	gsdll_initA	117:0:3471:3659							
ANR	5050116	FunctionDef	"gsdll_initA (GSDLL_CALLBACK callback , HWND hwnd , int argc , char * argv [ ])"		5050115	0					
ANR	5050117	CompoundStatement		119:0:3569:3659	5050115	0					
ANR	5050118	ReturnStatement	"return gsdll_init_with_encoding ( callback , hwnd , argc , argv , GS_ARG_ENCODING_LOCAL ) ;"	120:4:3575:3657	5050115	0	True				
ANR	5050119	CallExpression	"gsdll_init_with_encoding ( callback , hwnd , argc , argv , GS_ARG_ENCODING_LOCAL )"		5050115	0					
ANR	5050120	Callee	gsdll_init_with_encoding		5050115	0					
ANR	5050121	Identifier	gsdll_init_with_encoding		5050115	0					
ANR	5050122	ArgumentList	callback		5050115	1					
ANR	5050123	Argument	callback		5050115	0					
ANR	5050124	Identifier	callback		5050115	0					
ANR	5050125	Argument	hwnd		5050115	1					
ANR	5050126	Identifier	hwnd		5050115	0					
ANR	5050127	Argument	argc		5050115	2					
ANR	5050128	Identifier	argc		5050115	0					
ANR	5050129	Argument	argv		5050115	3					
ANR	5050130	Identifier	argv		5050115	0					
ANR	5050131	Argument	GS_ARG_ENCODING_LOCAL		5050115	4					
ANR	5050132	Identifier	GS_ARG_ENCODING_LOCAL		5050115	0					
ANR	5050133	ReturnType	int GSDLLEXPORT GSDLLAPI		5050115	1					
ANR	5050134	Identifier	gsdll_initA		5050115	2					
ANR	5050135	ParameterList	"GSDLL_CALLBACK callback , HWND hwnd , int argc , char * argv [ ]"		5050115	3					
ANR	5050136	Parameter	GSDLL_CALLBACK callback	118:12:3508:3530	5050115	0	True				
ANR	5050137	ParameterType	GSDLL_CALLBACK		5050115	0					
ANR	5050138	Identifier	callback		5050115	1					
ANR	5050139	Parameter	HWND hwnd	118:37:3533:3541	5050115	1	True				
ANR	5050140	ParameterType	HWND		5050115	0					
ANR	5050141	Identifier	hwnd		5050115	1					
ANR	5050142	Parameter	int argc	118:48:3544:3551	5050115	2	True				
ANR	5050143	ParameterType	int		5050115	0					
ANR	5050144	Identifier	argc		5050115	1					
ANR	5050145	Parameter	char * argv [ ]	118:58:3554:3566	5050115	3	True				
ANR	5050146	ParameterType	char * [ ]		5050115	0					
ANR	5050147	Identifier	argv		5050115	1					
ANR	5050148	CFGEntryNode	ENTRY		5050115		True				
ANR	5050149	CFGExitNode	EXIT		5050115		True				
ANR	5050150	Symbol	argc		5050115						
ANR	5050151	Symbol	hwnd		5050115						
ANR	5050152	Symbol	callback		5050115						
ANR	5050153	Symbol	gsdll_init_with_encoding		5050115						
ANR	5050154	Symbol	argv		5050115						
ANR	5050155	Symbol	GS_ARG_ENCODING_LOCAL		5050115						
ANR	5050156	Function	gsdll_execute_begin	126:0:3776:3909							
ANR	5050157	FunctionDef	gsdll_execute_begin ()		5050156	0					
ANR	5050158	CompoundStatement		128:0:3827:3909	5050156	0					
ANR	5050159	IdentifierDeclStatement	int exit_code ;	129:4:3833:3846	5050156	0	True				
ANR	5050160	IdentifierDecl	exit_code		5050156	0					
ANR	5050161	IdentifierDeclType	int		5050156	0					
ANR	5050162	Identifier	exit_code		5050156	1					
ANR	5050163	ReturnStatement	"return gsapi_run_string_begin ( pgs_minst , 0 , & exit_code ) ;"	130:4:3852:3907	5050156	1	True				
ANR	5050164	CallExpression	"gsapi_run_string_begin ( pgs_minst , 0 , & exit_code )"		5050156	0					
ANR	5050165	Callee	gsapi_run_string_begin		5050156	0					
ANR	5050166	Identifier	gsapi_run_string_begin		5050156	0					
ANR	5050167	ArgumentList	pgs_minst		5050156	1					
ANR	5050168	Argument	pgs_minst		5050156	0					
ANR	5050169	Identifier	pgs_minst		5050156	0					
ANR	5050170	Argument	0		5050156	1					
ANR	5050171	PrimaryExpression	0		5050156	0					
ANR	5050172	Argument	& exit_code		5050156	2					
ANR	5050173	UnaryOperationExpression	& exit_code		5050156	0					
ANR	5050174	UnaryOperator	&		5050156	0					
ANR	5050175	Identifier	exit_code		5050156	1					
ANR	5050176	ReturnType	int GSDLLEXPORT GSDLLAPI		5050156	1					
ANR	5050177	Identifier	gsdll_execute_begin		5050156	2					
ANR	5050178	ParameterList			5050156	3					
ANR	5050179	CFGEntryNode	ENTRY		5050156		True				
ANR	5050180	CFGExitNode	EXIT		5050156		True				
ANR	5050181	Symbol	gsapi_run_string_begin		5050156						
ANR	5050182	Symbol	& exit_code		5050156						
ANR	5050183	Symbol	pgs_minst		5050156						
ANR	5050184	Symbol	exit_code		5050156						
ANR	5050185	Function	gsdll_execute_cont	135:0:4043:4320							
ANR	5050186	FunctionDef	"gsdll_execute_cont (const char * str , int len)"		5050185	0					
ANR	5050187	CompoundStatement		137:0:4114:4320	5050185	0					
ANR	5050188	IdentifierDeclStatement	int exit_code ;	138:4:4120:4133	5050185	0	True				
ANR	5050189	IdentifierDecl	exit_code		5050185	0					
ANR	5050190	IdentifierDeclType	int		5050185	0					
ANR	5050191	Identifier	exit_code		5050185	1					
ANR	5050192	IdentifierDeclStatement	"int code = gsapi_run_string_continue ( pgs_minst , str , len , 0 , & exit_code ) ;"	139:4:4139:4219	5050185	1	True				
ANR	5050193	IdentifierDecl	"code = gsapi_run_string_continue ( pgs_minst , str , len , 0 , & exit_code )"		5050185	0					
ANR	5050194	IdentifierDeclType	int		5050185	0					
ANR	5050195	Identifier	code		5050185	1					
ANR	5050196	AssignmentExpression	"code = gsapi_run_string_continue ( pgs_minst , str , len , 0 , & exit_code )"		5050185	2		=			
ANR	5050197	Identifier	code		5050185	0					
ANR	5050198	CallExpression	"gsapi_run_string_continue ( pgs_minst , str , len , 0 , & exit_code )"		5050185	1					
ANR	5050199	Callee	gsapi_run_string_continue		5050185	0					
ANR	5050200	Identifier	gsapi_run_string_continue		5050185	0					
ANR	5050201	ArgumentList	pgs_minst		5050185	1					
ANR	5050202	Argument	pgs_minst		5050185	0					
ANR	5050203	Identifier	pgs_minst		5050185	0					
ANR	5050204	Argument	str		5050185	1					
ANR	5050205	Identifier	str		5050185	0					
ANR	5050206	Argument	len		5050185	2					
ANR	5050207	Identifier	len		5050185	0					
ANR	5050208	Argument	0		5050185	3					
ANR	5050209	PrimaryExpression	0		5050185	0					
ANR	5050210	Argument	& exit_code		5050185	4					
ANR	5050211	UnaryOperationExpression	& exit_code		5050185	0					
ANR	5050212	UnaryOperator	&		5050185	0					
ANR	5050213	Identifier	exit_code		5050185	1					
ANR	5050214	IfStatement	if ( code == gs_error_NeedInput )		5050185	2					
ANR	5050215	Condition	code == gs_error_NeedInput	141:8:4229:4254	5050185	0	True				
ANR	5050216	EqualityExpression	code == gs_error_NeedInput		5050185	0		==			
ANR	5050217	Identifier	code		5050185	0					
ANR	5050218	Identifier	gs_error_NeedInput		5050185	1					
ANR	5050219	ExpressionStatement	code = 0	142:8:4265:4273	5050185	1	True				
ANR	5050220	AssignmentExpression	code = 0		5050185	0		=			
ANR	5050221	Identifier	code		5050185	0					
ANR	5050222	PrimaryExpression	0		5050185	1					
ANR	5050223	ReturnStatement	return code ;	143:4:4307:4318	5050185	3	True				
ANR	5050224	Identifier	code		5050185	0					
ANR	5050225	ReturnType	int GSDLLEXPORT GSDLLAPI		5050185	1					
ANR	5050226	Identifier	gsdll_execute_cont		5050185	2					
ANR	5050227	ParameterList	"const char * str , int len"		5050185	3					
ANR	5050228	Parameter	const char * str	136:19:4087:4102	5050185	0	True				
ANR	5050229	ParameterType	const char *		5050185	0					
ANR	5050230	Identifier	str		5050185	1					
ANR	5050231	Parameter	int len	136:37:4105:4111	5050185	1	True				
ANR	5050232	ParameterType	int		5050185	0					
ANR	5050233	Identifier	len		5050185	1					
ANR	5050234	CFGEntryNode	ENTRY		5050185		True				
ANR	5050235	CFGExitNode	EXIT		5050185		True				
ANR	5050236	Symbol	str		5050185						
ANR	5050237	Symbol	gsapi_run_string_continue		5050185						
ANR	5050238	Symbol	& exit_code		5050185						
ANR	5050239	Symbol	code		5050185						
ANR	5050240	Symbol	len		5050185						
ANR	5050241	Symbol	pgs_minst		5050185						
ANR	5050242	Symbol	exit_code		5050185						
ANR	5050243	Symbol	gs_error_NeedInput		5050185						
ANR	5050244	Function	gsdll_execute_end	148:0:4430:4559							
ANR	5050245	FunctionDef	gsdll_execute_end ()		5050244	0					
ANR	5050246	CompoundStatement		150:0:4479:4559	5050244	0					
ANR	5050247	IdentifierDeclStatement	int exit_code ;	151:4:4485:4498	5050244	0	True				
ANR	5050248	IdentifierDecl	exit_code		5050244	0					
ANR	5050249	IdentifierDeclType	int		5050244	0					
ANR	5050250	Identifier	exit_code		5050244	1					
ANR	5050251	ReturnStatement	"return gsapi_run_string_end ( pgs_minst , 0 , & exit_code ) ;"	152:4:4504:4557	5050244	1	True				
ANR	5050252	CallExpression	"gsapi_run_string_end ( pgs_minst , 0 , & exit_code )"		5050244	0					
ANR	5050253	Callee	gsapi_run_string_end		5050244	0					
ANR	5050254	Identifier	gsapi_run_string_end		5050244	0					
ANR	5050255	ArgumentList	pgs_minst		5050244	1					
ANR	5050256	Argument	pgs_minst		5050244	0					
ANR	5050257	Identifier	pgs_minst		5050244	0					
ANR	5050258	Argument	0		5050244	1					
ANR	5050259	PrimaryExpression	0		5050244	0					
ANR	5050260	Argument	& exit_code		5050244	2					
ANR	5050261	UnaryOperationExpression	& exit_code		5050244	0					
ANR	5050262	UnaryOperator	&		5050244	0					
ANR	5050263	Identifier	exit_code		5050244	1					
ANR	5050264	ReturnType	int GSDLLEXPORT GSDLLAPI		5050244	1					
ANR	5050265	Identifier	gsdll_execute_end		5050244	2					
ANR	5050266	ParameterList			5050244	3					
ANR	5050267	CFGEntryNode	ENTRY		5050244		True				
ANR	5050268	CFGExitNode	EXIT		5050244		True				
ANR	5050269	Symbol	& exit_code		5050244						
ANR	5050270	Symbol	pgs_minst		5050244						
ANR	5050271	Symbol	exit_code		5050244						
ANR	5050272	Symbol	gsapi_run_string_end		5050244						
ANR	5050273	Function	gsdll_exit	155:0:4562:4700							
ANR	5050274	FunctionDef	gsdll_exit ()		5050273	0					
ANR	5050275	CompoundStatement		157:0:4604:4700	5050273	0					
ANR	5050276	IdentifierDeclStatement	int code = gsapi_exit ( pgs_minst ) ;	158:4:4610:4642	5050273	0	True				
ANR	5050277	IdentifierDecl	code = gsapi_exit ( pgs_minst )		5050273	0					
ANR	5050278	IdentifierDeclType	int		5050273	0					
ANR	5050279	Identifier	code		5050273	1					
ANR	5050280	AssignmentExpression	code = gsapi_exit ( pgs_minst )		5050273	2		=			
ANR	5050281	Identifier	code		5050273	0					
ANR	5050282	CallExpression	gsapi_exit ( pgs_minst )		5050273	1					
ANR	5050283	Callee	gsapi_exit		5050273	0					
ANR	5050284	Identifier	gsapi_exit		5050273	0					
ANR	5050285	ArgumentList	pgs_minst		5050273	1					
ANR	5050286	Argument	pgs_minst		5050273	0					
ANR	5050287	Identifier	pgs_minst		5050273	0					
ANR	5050288	ExpressionStatement	gsapi_delete_instance ( pgs_minst )	160:4:4649:4681	5050273	1	True				
ANR	5050289	CallExpression	gsapi_delete_instance ( pgs_minst )		5050273	0					
ANR	5050290	Callee	gsapi_delete_instance		5050273	0					
ANR	5050291	Identifier	gsapi_delete_instance		5050273	0					
ANR	5050292	ArgumentList	pgs_minst		5050273	1					
ANR	5050293	Argument	pgs_minst		5050273	0					
ANR	5050294	Identifier	pgs_minst		5050273	0					
ANR	5050295	ReturnStatement	return code ;	161:4:4687:4698	5050273	2	True				
ANR	5050296	Identifier	code		5050273	0					
ANR	5050297	ReturnType	int GSDLLEXPORT GSDLLAPI		5050273	1					
ANR	5050298	Identifier	gsdll_exit		5050273	2					
ANR	5050299	ParameterList			5050273	3					
ANR	5050300	CFGEntryNode	ENTRY		5050273		True				
ANR	5050301	CFGExitNode	EXIT		5050273		True				
ANR	5050302	Symbol	gsapi_exit		5050273						
ANR	5050303	Symbol	code		5050273						
ANR	5050304	Symbol	pgs_minst		5050273						
ANR	5050305	Function	gsdll_revision	167:0:4863:5236							
ANR	5050306	FunctionDef	"gsdll_revision (const char * * product , const char * * copyright , long * revision , long * revisiondate)"		5050305	0					
ANR	5050307	CompoundStatement		170:0:5004:5236	5050305	0					
ANR	5050308	IfStatement	if ( product )		5050305	0					
ANR	5050309	Condition	product	171:8:5014:5020	5050305	0	True				
ANR	5050310	Identifier	product		5050305	0					
ANR	5050311	ExpressionStatement	* product = gs_product	172:8:5031:5052	5050305	1	True				
ANR	5050312	AssignmentExpression	* product = gs_product		5050305	0		=			
ANR	5050313	UnaryOperationExpression	* product		5050305	0					
ANR	5050314	UnaryOperator	*		5050305	0					
ANR	5050315	Identifier	product		5050305	1					
ANR	5050316	Identifier	gs_product		5050305	1					
ANR	5050317	IfStatement	if ( copyright )		5050305	1					
ANR	5050318	Condition	copyright	173:8:5062:5070	5050305	0	True				
ANR	5050319	Identifier	copyright		5050305	0					
ANR	5050320	ExpressionStatement	* copyright = gs_copyright	174:8:5081:5106	5050305	1	True				
ANR	5050321	AssignmentExpression	* copyright = gs_copyright		5050305	0		=			
ANR	5050322	UnaryOperationExpression	* copyright		5050305	0					
ANR	5050323	UnaryOperator	*		5050305	0					
ANR	5050324	Identifier	copyright		5050305	1					
ANR	5050325	Identifier	gs_copyright		5050305	1					
ANR	5050326	IfStatement	if ( revision )		5050305	2					
ANR	5050327	Condition	revision	175:8:5116:5123	5050305	0	True				
ANR	5050328	Identifier	revision		5050305	0					
ANR	5050329	ExpressionStatement	* revision = gs_revision	176:8:5134:5157	5050305	1	True				
ANR	5050330	AssignmentExpression	* revision = gs_revision		5050305	0		=			
ANR	5050331	UnaryOperationExpression	* revision		5050305	0					
ANR	5050332	UnaryOperator	*		5050305	0					
ANR	5050333	Identifier	revision		5050305	1					
ANR	5050334	Identifier	gs_revision		5050305	1					
ANR	5050335	IfStatement	if ( revisiondate )		5050305	3					
ANR	5050336	Condition	revisiondate	177:8:5167:5178	5050305	0	True				
ANR	5050337	Identifier	revisiondate		5050305	0					
ANR	5050338	ExpressionStatement	* revisiondate = gs_revisiondate	178:8:5189:5220	5050305	1	True				
ANR	5050339	AssignmentExpression	* revisiondate = gs_revisiondate		5050305	0		=			
ANR	5050340	UnaryOperationExpression	* revisiondate		5050305	0					
ANR	5050341	UnaryOperator	*		5050305	0					
ANR	5050342	Identifier	revisiondate		5050305	1					
ANR	5050343	Identifier	gs_revisiondate		5050305	1					
ANR	5050344	ReturnStatement	return 0 ;	179:4:5226:5234	5050305	4	True				
ANR	5050345	PrimaryExpression	0		5050305	0					
ANR	5050346	ReturnType	int GSDLLEXPORT GSDLLAPI		5050305	1					
ANR	5050347	Identifier	gsdll_revision		5050305	2					
ANR	5050348	ParameterList	"const char * * product , const char * * copyright , long * revision , long * revisiondate"		5050305	3					
ANR	5050349	Parameter	const char * * product	168:15:4903:4923	5050305	0	True				
ANR	5050350	ParameterType	const char * *		5050305	0					
ANR	5050351	Identifier	product		5050305	1					
ANR	5050352	Parameter	const char * * copyright	168:38:4926:4948	5050305	1	True				
ANR	5050353	ParameterType	const char * *		5050305	0					
ANR	5050354	Identifier	copyright		5050305	1					
ANR	5050355	Parameter	long * revision	169:15:4966:4980	5050305	2	True				
ANR	5050356	ParameterType	long *		5050305	0					
ANR	5050357	Identifier	revision		5050305	1					
ANR	5050358	Parameter	long * revisiondate	169:32:4983:5001	5050305	3	True				
ANR	5050359	ParameterType	long *		5050305	0					
ANR	5050360	Identifier	revisiondate		5050305	1					
ANR	5050361	CFGEntryNode	ENTRY		5050305		True				
ANR	5050362	CFGExitNode	EXIT		5050305		True				
ANR	5050363	Symbol	product		5050305						
ANR	5050364	Symbol	copyright		5050305						
ANR	5050365	Symbol	* product		5050305						
ANR	5050366	Symbol	gs_revision		5050305						
ANR	5050367	Symbol	revisiondate		5050305						
ANR	5050368	Symbol	gs_copyright		5050305						
ANR	5050369	Symbol	* copyright		5050305						
ANR	5050370	Symbol	gs_revisiondate		5050305						
ANR	5050371	Symbol	gs_product		5050305						
ANR	5050372	Symbol	* revisiondate		5050305						
ANR	5050373	Symbol	* revision		5050305						
ANR	5050374	Symbol	revision		5050305						
ANR	5050375	Function	gsdll_old_stdin	182:0:5239:5373							
ANR	5050376	FunctionDef	"gsdll_old_stdin (void * caller_handle , char * buf , int len)"		5050375	0					
ANR	5050377	CompoundStatement		184:0:5317:5373	5050375	0					
ANR	5050378	ReturnStatement	"return ( * pgsdll_callback ) ( GSDLL_STDIN , buf , len ) ;"	185:4:5323:5371	5050375	0	True				
ANR	5050379	CallExpression	"( * pgsdll_callback ) ( GSDLL_STDIN , buf , len )"		5050375	0					
ANR	5050380	Callee	* pgsdll_callback		5050375	0					
ANR	5050381	UnaryOperationExpression	* pgsdll_callback		5050375	0					
ANR	5050382	UnaryOperator	*		5050375	0					
ANR	5050383	Identifier	pgsdll_callback		5050375	1					
ANR	5050384	ArgumentList	GSDLL_STDIN		5050375	1					
ANR	5050385	Argument	GSDLL_STDIN		5050375	0					
ANR	5050386	Identifier	GSDLL_STDIN		5050375	0					
ANR	5050387	Argument	buf		5050375	1					
ANR	5050388	Identifier	buf		5050375	0					
ANR	5050389	Argument	len		5050375	2					
ANR	5050390	Identifier	len		5050375	0					
ANR	5050391	ReturnType	static int GSDLLCALL		5050375	1					
ANR	5050392	Identifier	gsdll_old_stdin		5050375	2					
ANR	5050393	ParameterList	"void * caller_handle , char * buf , int len"		5050375	3					
ANR	5050394	Parameter	void * caller_handle	183:16:5276:5294	5050375	0	True				
ANR	5050395	ParameterType	void *		5050375	0					
ANR	5050396	Identifier	caller_handle		5050375	1					
ANR	5050397	Parameter	char * buf	183:37:5297:5305	5050375	1	True				
ANR	5050398	ParameterType	char *		5050375	0					
ANR	5050399	Identifier	buf		5050375	1					
ANR	5050400	Parameter	int len	183:48:5308:5314	5050375	2	True				
ANR	5050401	ParameterType	int		5050375	0					
ANR	5050402	Identifier	len		5050375	1					
ANR	5050403	CFGEntryNode	ENTRY		5050375		True				
ANR	5050404	CFGExitNode	EXIT		5050375		True				
ANR	5050405	Symbol	buf		5050375						
ANR	5050406	Symbol	GSDLL_STDIN		5050375						
ANR	5050407	Symbol	len		5050375						
ANR	5050408	Symbol	caller_handle		5050375						
ANR	5050409	Symbol	* pgsdll_callback		5050375						
ANR	5050410	Symbol	pgsdll_callback		5050375						
ANR	5050411	Function	gsdll_old_stdout	187:0:5375:5525							
ANR	5050412	FunctionDef	"gsdll_old_stdout (void * caller_handle , const char * str , int len)"		5050411	0					
ANR	5050413	CompoundStatement		189:0:5460:5525	5050411	0					
ANR	5050414	ReturnStatement	"return ( * pgsdll_callback ) ( GSDLL_STDOUT , ( char * ) str , len ) ;"	190:4:5466:5523	5050411	0	True				
ANR	5050415	CallExpression	"( * pgsdll_callback ) ( GSDLL_STDOUT , ( char * ) str , len )"		5050411	0					
ANR	5050416	Callee	* pgsdll_callback		5050411	0					
ANR	5050417	UnaryOperationExpression	* pgsdll_callback		5050411	0					
ANR	5050418	UnaryOperator	*		5050411	0					
ANR	5050419	Identifier	pgsdll_callback		5050411	1					
ANR	5050420	ArgumentList	GSDLL_STDOUT		5050411	1					
ANR	5050421	Argument	GSDLL_STDOUT		5050411	0					
ANR	5050422	Identifier	GSDLL_STDOUT		5050411	0					
ANR	5050423	Argument	( char * ) str		5050411	1					
ANR	5050424	CastExpression	( char * ) str		5050411	0					
ANR	5050425	CastTarget	char *		5050411	0					
ANR	5050426	Identifier	str		5050411	1					
ANR	5050427	Argument	len		5050411	2					
ANR	5050428	Identifier	len		5050411	0					
ANR	5050429	ReturnType	static int GSDLLCALL		5050411	1					
ANR	5050430	Identifier	gsdll_old_stdout		5050411	2					
ANR	5050431	ParameterList	"void * caller_handle , const char * str , int len"		5050411	3					
ANR	5050432	Parameter	void * caller_handle	188:17:5413:5431	5050411	0	True				
ANR	5050433	ParameterType	void *		5050411	0					
ANR	5050434	Identifier	caller_handle		5050411	1					
ANR	5050435	Parameter	const char * str	188:38:5434:5448	5050411	1	True				
ANR	5050436	ParameterType	const char *		5050411	0					
ANR	5050437	Identifier	str		5050411	1					
ANR	5050438	Parameter	int len	188:55:5451:5457	5050411	2	True				
ANR	5050439	ParameterType	int		5050411	0					
ANR	5050440	Identifier	len		5050411	1					
ANR	5050441	CFGEntryNode	ENTRY		5050411		True				
ANR	5050442	CFGExitNode	EXIT		5050411		True				
ANR	5050443	Symbol	str		5050411						
ANR	5050444	Symbol	len		5050411						
ANR	5050445	Symbol	caller_handle		5050411						
ANR	5050446	Symbol	GSDLL_STDOUT		5050411						
ANR	5050447	Symbol	* pgsdll_callback		5050411						
ANR	5050448	Symbol	pgsdll_callback		5050411						
ANR	5050449	Function	gsdll_old_stderr	193:0:5528:5678							
ANR	5050450	FunctionDef	"gsdll_old_stderr (void * caller_handle , const char * str , int len)"		5050449	0					
ANR	5050451	CompoundStatement		195:0:5613:5678	5050449	0					
ANR	5050452	ReturnStatement	"return ( * pgsdll_callback ) ( GSDLL_STDOUT , ( char * ) str , len ) ;"	196:4:5619:5676	5050449	0	True				
ANR	5050453	CallExpression	"( * pgsdll_callback ) ( GSDLL_STDOUT , ( char * ) str , len )"		5050449	0					
ANR	5050454	Callee	* pgsdll_callback		5050449	0					
ANR	5050455	UnaryOperationExpression	* pgsdll_callback		5050449	0					
ANR	5050456	UnaryOperator	*		5050449	0					
ANR	5050457	Identifier	pgsdll_callback		5050449	1					
ANR	5050458	ArgumentList	GSDLL_STDOUT		5050449	1					
ANR	5050459	Argument	GSDLL_STDOUT		5050449	0					
ANR	5050460	Identifier	GSDLL_STDOUT		5050449	0					
ANR	5050461	Argument	( char * ) str		5050449	1					
ANR	5050462	CastExpression	( char * ) str		5050449	0					
ANR	5050463	CastTarget	char *		5050449	0					
ANR	5050464	Identifier	str		5050449	1					
ANR	5050465	Argument	len		5050449	2					
ANR	5050466	Identifier	len		5050449	0					
ANR	5050467	ReturnType	static int GSDLLCALL		5050449	1					
ANR	5050468	Identifier	gsdll_old_stderr		5050449	2					
ANR	5050469	ParameterList	"void * caller_handle , const char * str , int len"		5050449	3					
ANR	5050470	Parameter	void * caller_handle	194:17:5566:5584	5050449	0	True				
ANR	5050471	ParameterType	void *		5050449	0					
ANR	5050472	Identifier	caller_handle		5050449	1					
ANR	5050473	Parameter	const char * str	194:38:5587:5601	5050449	1	True				
ANR	5050474	ParameterType	const char *		5050449	0					
ANR	5050475	Identifier	str		5050449	1					
ANR	5050476	Parameter	int len	194:55:5604:5610	5050449	2	True				
ANR	5050477	ParameterType	int		5050449	0					
ANR	5050478	Identifier	len		5050449	1					
ANR	5050479	CFGEntryNode	ENTRY		5050449		True				
ANR	5050480	CFGExitNode	EXIT		5050449		True				
ANR	5050481	Symbol	str		5050449						
ANR	5050482	Symbol	len		5050449						
ANR	5050483	Symbol	caller_handle		5050449						
ANR	5050484	Symbol	GSDLL_STDOUT		5050449						
ANR	5050485	Symbol	* pgsdll_callback		5050449						
ANR	5050486	Symbol	pgsdll_callback		5050449						
ANR	5050487	Function	gsdll_old_poll	199:0:5681:5792							
ANR	5050488	FunctionDef	gsdll_old_poll (void * caller_handle)		5050487	0					
ANR	5050489	CompoundStatement		201:0:5738:5792	5050487	0					
ANR	5050490	ReturnStatement	"return ( * pgsdll_callback ) ( GSDLL_POLL , NULL , 0 ) ;"	202:4:5744:5790	5050487	0	True				
ANR	5050491	CallExpression	"( * pgsdll_callback ) ( GSDLL_POLL , NULL , 0 )"		5050487	0					
ANR	5050492	Callee	* pgsdll_callback		5050487	0					
ANR	5050493	UnaryOperationExpression	* pgsdll_callback		5050487	0					
ANR	5050494	UnaryOperator	*		5050487	0					
ANR	5050495	Identifier	pgsdll_callback		5050487	1					
ANR	5050496	ArgumentList	GSDLL_POLL		5050487	1					
ANR	5050497	Argument	GSDLL_POLL		5050487	0					
ANR	5050498	Identifier	GSDLL_POLL		5050487	0					
ANR	5050499	Argument	NULL		5050487	1					
ANR	5050500	Identifier	NULL		5050487	0					
ANR	5050501	Argument	0		5050487	2					
ANR	5050502	PrimaryExpression	0		5050487	0					
ANR	5050503	ReturnType	static int GSDLLCALL		5050487	1					
ANR	5050504	Identifier	gsdll_old_poll		5050487	2					
ANR	5050505	ParameterList	void * caller_handle		5050487	3					
ANR	5050506	Parameter	void * caller_handle	200:15:5717:5735	5050487	0	True				
ANR	5050507	ParameterType	void *		5050487	0					
ANR	5050508	Identifier	caller_handle		5050487	1					
ANR	5050509	CFGEntryNode	ENTRY		5050487		True				
ANR	5050510	CFGExitNode	EXIT		5050487		True				
ANR	5050511	Symbol	NULL		5050487						
ANR	5050512	Symbol	caller_handle		5050487						
ANR	5050513	Symbol	* pgsdll_callback		5050487						
ANR	5050514	Symbol	GSDLL_POLL		5050487						
ANR	5050515	Symbol	pgsdll_callback		5050487						
