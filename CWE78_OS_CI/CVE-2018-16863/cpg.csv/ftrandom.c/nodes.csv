command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3849289	File	data/converged/CVE-2018-16863_ghostpdl/ftrandom.c								
ANR	3849290	DeclStmt									
ANR	3849291	Decl							int	int	check_outlines
ANR	3849292	DeclStmt									
ANR	3849293	Decl							int	int	nohints
ANR	3849294	DeclStmt									
ANR	3849295	Decl							int	int	rasterize
ANR	3849296	DeclStmt									
ANR	3849297	Decl							char	char *	results_dir
ANR	3849298	DeclStmt									
ANR	3849299	Decl							char	char * [ ]	default_dir_list
ANR	3849300	DeclStmt									
ANR	3849301	Decl							char	char * [ ]	default_ext_list
ANR	3849302	DeclStmt									
ANR	3849303	Decl							unsigned int	unsigned int	error_count
ANR	3849304	DeclStmt									
ANR	3849305	Decl							double	double	error_fraction
ANR	3849306	DeclStmt									
ANR	3849307	Decl							FT_F26Dot6	FT_F26Dot6	font_size
ANR	3849308	ClassDef	fontlist	91:9:2612:2782							
ANR	3849309	DeclStmt									
ANR	3849310	Decl							char	char *	name
ANR	3849311	DeclStmt									
ANR	3849312	Decl							long	long	len
ANR	3849313	DeclStmt									
ANR	3849314	Decl							fontlist	fontlist *	fontlist
ANR	3849315	DeclStmt									
ANR	3849316	Decl							unsigned int	unsigned int	fcnt
ANR	3849317	Function	FT_MoveTo	104:2:2818:2967							
ANR	3849318	FunctionDef	"FT_MoveTo (const FT_Vector * to , void * user)"		3849317	0					
ANR	3849319	CompoundStatement		107:2:2904:2967	3849317	0					
ANR	3849320	ExpressionStatement	FT_UNUSED ( to )	108:4:2910:2925	3849317	0	True				
ANR	3849321	CallExpression	FT_UNUSED ( to )		3849317	0					
ANR	3849322	Callee	FT_UNUSED		3849317	0					
ANR	3849323	Identifier	FT_UNUSED		3849317	0					
ANR	3849324	ArgumentList	to		3849317	1					
ANR	3849325	Argument	to		3849317	0					
ANR	3849326	Identifier	to		3849317	0					
ANR	3849327	ExpressionStatement	FT_UNUSED ( user )	109:4:2931:2948	3849317	1	True				
ANR	3849328	CallExpression	FT_UNUSED ( user )		3849317	0					
ANR	3849329	Callee	FT_UNUSED		3849317	0					
ANR	3849330	Identifier	FT_UNUSED		3849317	0					
ANR	3849331	ArgumentList	user		3849317	1					
ANR	3849332	Argument	user		3849317	0					
ANR	3849333	Identifier	user		3849317	0					
ANR	3849334	ReturnStatement	return 0 ;	111:4:2955:2963	3849317	2	True				
ANR	3849335	PrimaryExpression	0		3849317	0					
ANR	3849336	ReturnType	static int		3849317	1					
ANR	3849337	Identifier	FT_MoveTo		3849317	2					
ANR	3849338	ParameterList	"const FT_Vector * to , void * user"		3849317	3					
ANR	3849339	Parameter	const FT_Vector * to	105:13:2842:2861	3849317	0	True				
ANR	3849340	ParameterType	const FT_Vector *		3849317	0					
ANR	3849341	Identifier	to		3849317	1					
ANR	3849342	Parameter	void * user	106:13:2877:2898	3849317	1	True				
ANR	3849343	ParameterType	void *		3849317	0					
ANR	3849344	Identifier	user		3849317	1					
ANR	3849345	CFGEntryNode	ENTRY		3849317		True				
ANR	3849346	CFGExitNode	EXIT		3849317		True				
ANR	3849347	Symbol	to		3849317						
ANR	3849348	Symbol	user		3849317						
ANR	3849349	Function	FT_LineTo	115:2:2973:3122							
ANR	3849350	FunctionDef	"FT_LineTo (const FT_Vector * to , void * user)"		3849349	0					
ANR	3849351	CompoundStatement		118:2:3059:3122	3849349	0					
ANR	3849352	ExpressionStatement	FT_UNUSED ( to )	119:4:3065:3080	3849349	0	True				
ANR	3849353	CallExpression	FT_UNUSED ( to )		3849349	0					
ANR	3849354	Callee	FT_UNUSED		3849349	0					
ANR	3849355	Identifier	FT_UNUSED		3849349	0					
ANR	3849356	ArgumentList	to		3849349	1					
ANR	3849357	Argument	to		3849349	0					
ANR	3849358	Identifier	to		3849349	0					
ANR	3849359	ExpressionStatement	FT_UNUSED ( user )	120:4:3086:3103	3849349	1	True				
ANR	3849360	CallExpression	FT_UNUSED ( user )		3849349	0					
ANR	3849361	Callee	FT_UNUSED		3849349	0					
ANR	3849362	Identifier	FT_UNUSED		3849349	0					
ANR	3849363	ArgumentList	user		3849349	1					
ANR	3849364	Argument	user		3849349	0					
ANR	3849365	Identifier	user		3849349	0					
ANR	3849366	ReturnStatement	return 0 ;	122:4:3110:3118	3849349	2	True				
ANR	3849367	PrimaryExpression	0		3849349	0					
ANR	3849368	ReturnType	static int		3849349	1					
ANR	3849369	Identifier	FT_LineTo		3849349	2					
ANR	3849370	ParameterList	"const FT_Vector * to , void * user"		3849349	3					
ANR	3849371	Parameter	const FT_Vector * to	116:13:2997:3016	3849349	0	True				
ANR	3849372	ParameterType	const FT_Vector *		3849349	0					
ANR	3849373	Identifier	to		3849349	1					
ANR	3849374	Parameter	void * user	117:13:3032:3053	3849349	1	True				
ANR	3849375	ParameterType	void *		3849349	0					
ANR	3849376	Identifier	user		3849349	1					
ANR	3849377	CFGEntryNode	ENTRY		3849349		True				
ANR	3849378	CFGExitNode	EXIT		3849349		True				
ANR	3849379	Symbol	to		3849349						
ANR	3849380	Symbol	user		3849349						
ANR	3849381	Function	FT_ConicTo	126:2:3128:3338							
ANR	3849382	FunctionDef	"FT_ConicTo (const FT_Vector * _cp , const FT_Vector * to , void * user)"		3849381	0					
ANR	3849383	CompoundStatement		130:2:3253:3338	3849381	0					
ANR	3849384	ExpressionStatement	FT_UNUSED ( _cp )	131:4:3259:3275	3849381	0	True				
ANR	3849385	CallExpression	FT_UNUSED ( _cp )		3849381	0					
ANR	3849386	Callee	FT_UNUSED		3849381	0					
ANR	3849387	Identifier	FT_UNUSED		3849381	0					
ANR	3849388	ArgumentList	_cp		3849381	1					
ANR	3849389	Argument	_cp		3849381	0					
ANR	3849390	Identifier	_cp		3849381	0					
ANR	3849391	ExpressionStatement	FT_UNUSED ( to )	132:4:3281:3296	3849381	1	True				
ANR	3849392	CallExpression	FT_UNUSED ( to )		3849381	0					
ANR	3849393	Callee	FT_UNUSED		3849381	0					
ANR	3849394	Identifier	FT_UNUSED		3849381	0					
ANR	3849395	ArgumentList	to		3849381	1					
ANR	3849396	Argument	to		3849381	0					
ANR	3849397	Identifier	to		3849381	0					
ANR	3849398	ExpressionStatement	FT_UNUSED ( user )	133:4:3302:3319	3849381	2	True				
ANR	3849399	CallExpression	FT_UNUSED ( user )		3849381	0					
ANR	3849400	Callee	FT_UNUSED		3849381	0					
ANR	3849401	Identifier	FT_UNUSED		3849381	0					
ANR	3849402	ArgumentList	user		3849381	1					
ANR	3849403	Argument	user		3849381	0					
ANR	3849404	Identifier	user		3849381	0					
ANR	3849405	ReturnStatement	return 0 ;	135:4:3326:3334	3849381	3	True				
ANR	3849406	PrimaryExpression	0		3849381	0					
ANR	3849407	ReturnType	static int		3849381	1					
ANR	3849408	Identifier	FT_ConicTo		3849381	2					
ANR	3849409	ParameterList	"const FT_Vector * _cp , const FT_Vector * to , void * user"		3849381	3					
ANR	3849410	Parameter	const FT_Vector * _cp	127:14:3153:3173	3849381	0	True				
ANR	3849411	ParameterType	const FT_Vector *		3849381	0					
ANR	3849412	Identifier	_cp		3849381	1					
ANR	3849413	Parameter	const FT_Vector * to	128:14:3190:3209	3849381	1	True				
ANR	3849414	ParameterType	const FT_Vector *		3849381	0					
ANR	3849415	Identifier	to		3849381	1					
ANR	3849416	Parameter	void * user	129:14:3226:3247	3849381	2	True				
ANR	3849417	ParameterType	void *		3849381	0					
ANR	3849418	Identifier	user		3849381	1					
ANR	3849419	CFGEntryNode	ENTRY		3849381		True				
ANR	3849420	CFGExitNode	EXIT		3849381		True				
ANR	3849421	Symbol	to		3849381						
ANR	3849422	Symbol	_cp		3849381						
ANR	3849423	Symbol	user		3849381						
ANR	3849424	Function	FT_CubicTo	139:2:3344:3613							
ANR	3849425	FunctionDef	"FT_CubicTo (const FT_Vector * cp1 , const FT_Vector * cp2 , const FT_Vector * to , void * user)"		3849424	0					
ANR	3849426	CompoundStatement		144:2:3506:3613	3849424	0					
ANR	3849427	ExpressionStatement	FT_UNUSED ( cp1 )	145:4:3512:3528	3849424	0	True				
ANR	3849428	CallExpression	FT_UNUSED ( cp1 )		3849424	0					
ANR	3849429	Callee	FT_UNUSED		3849424	0					
ANR	3849430	Identifier	FT_UNUSED		3849424	0					
ANR	3849431	ArgumentList	cp1		3849424	1					
ANR	3849432	Argument	cp1		3849424	0					
ANR	3849433	Identifier	cp1		3849424	0					
ANR	3849434	ExpressionStatement	FT_UNUSED ( cp2 )	146:4:3534:3550	3849424	1	True				
ANR	3849435	CallExpression	FT_UNUSED ( cp2 )		3849424	0					
ANR	3849436	Callee	FT_UNUSED		3849424	0					
ANR	3849437	Identifier	FT_UNUSED		3849424	0					
ANR	3849438	ArgumentList	cp2		3849424	1					
ANR	3849439	Argument	cp2		3849424	0					
ANR	3849440	Identifier	cp2		3849424	0					
ANR	3849441	ExpressionStatement	FT_UNUSED ( to )	147:4:3556:3571	3849424	2	True				
ANR	3849442	CallExpression	FT_UNUSED ( to )		3849424	0					
ANR	3849443	Callee	FT_UNUSED		3849424	0					
ANR	3849444	Identifier	FT_UNUSED		3849424	0					
ANR	3849445	ArgumentList	to		3849424	1					
ANR	3849446	Argument	to		3849424	0					
ANR	3849447	Identifier	to		3849424	0					
ANR	3849448	ExpressionStatement	FT_UNUSED ( user )	148:4:3577:3594	3849424	3	True				
ANR	3849449	CallExpression	FT_UNUSED ( user )		3849424	0					
ANR	3849450	Callee	FT_UNUSED		3849424	0					
ANR	3849451	Identifier	FT_UNUSED		3849424	0					
ANR	3849452	ArgumentList	user		3849424	1					
ANR	3849453	Argument	user		3849424	0					
ANR	3849454	Identifier	user		3849424	0					
ANR	3849455	ReturnStatement	return 0 ;	150:4:3601:3609	3849424	4	True				
ANR	3849456	PrimaryExpression	0		3849424	0					
ANR	3849457	ReturnType	static int		3849424	1					
ANR	3849458	Identifier	FT_CubicTo		3849424	2					
ANR	3849459	ParameterList	"const FT_Vector * cp1 , const FT_Vector * cp2 , const FT_Vector * to , void * user"		3849424	3					
ANR	3849460	Parameter	const FT_Vector * cp1	140:14:3369:3389	3849424	0	True				
ANR	3849461	ParameterType	const FT_Vector *		3849424	0					
ANR	3849462	Identifier	cp1		3849424	1					
ANR	3849463	Parameter	const FT_Vector * cp2	141:14:3406:3426	3849424	1	True				
ANR	3849464	ParameterType	const FT_Vector *		3849424	0					
ANR	3849465	Identifier	cp2		3849424	1					
ANR	3849466	Parameter	const FT_Vector * to	142:14:3443:3462	3849424	2	True				
ANR	3849467	ParameterType	const FT_Vector *		3849424	0					
ANR	3849468	Identifier	to		3849424	1					
ANR	3849469	Parameter	void * user	143:14:3479:3500	3849424	3	True				
ANR	3849470	ParameterType	void *		3849424	0					
ANR	3849471	Identifier	user		3849424	1					
ANR	3849472	CFGEntryNode	ENTRY		3849424		True				
ANR	3849473	CFGExitNode	EXIT		3849424		True				
ANR	3849474	Symbol	cp2		3849424						
ANR	3849475	Symbol	cp1		3849424						
ANR	3849476	Symbol	to		3849424						
ANR	3849477	Symbol	user		3849424						
ANR	3849478	DeclStmt									
ANR	3849479	Decl							FT_Outline_Funcs	FT_Outline_Funcs	outlinefuncs
ANR	3849480	Function	TestFace	164:2:3776:4574							
ANR	3849481	FunctionDef	TestFace (FT_Face face)		3849480	0					
ANR	3849482	CompoundStatement		166:2:3818:4574	3849480	0					
ANR	3849483	IdentifierDeclStatement	unsigned int gid ;	167:4:3824:3841	3849480	0	True				
ANR	3849484	IdentifierDecl	gid		3849480	0					
ANR	3849485	IdentifierDeclType	unsigned int		3849480	0					
ANR	3849486	Identifier	gid		3849480	1					
ANR	3849487	IdentifierDeclStatement	int load_flags = FT_LOAD_DEFAULT ;	168:4:3847:3889	3849480	1	True				
ANR	3849488	IdentifierDecl	load_flags = FT_LOAD_DEFAULT		3849480	0					
ANR	3849489	IdentifierDeclType	int		3849480	0					
ANR	3849490	Identifier	load_flags		3849480	1					
ANR	3849491	AssignmentExpression	load_flags = FT_LOAD_DEFAULT		3849480	2		=			
ANR	3849492	Identifier	FT_LOAD_DEFAULT		3849480	0					
ANR	3849493	Identifier	FT_LOAD_DEFAULT		3849480	1					
ANR	3849494	IfStatement	if ( check_outlines && FT_IS_SCALABLE ( face ) )		3849480	2					
ANR	3849495	Condition	check_outlines && FT_IS_SCALABLE ( face )	171:9:3902:3958	3849480	0	True				
ANR	3849496	AndExpression	check_outlines && FT_IS_SCALABLE ( face )		3849480	0		&&			
ANR	3849497	Identifier	check_outlines		3849480	0					
ANR	3849498	CallExpression	FT_IS_SCALABLE ( face )		3849480	1					
ANR	3849499	Callee	FT_IS_SCALABLE		3849480	0					
ANR	3849500	Identifier	FT_IS_SCALABLE		3849480	0					
ANR	3849501	ArgumentList	face		3849480	1					
ANR	3849502	Argument	face		3849480	0					
ANR	3849503	Identifier	face		3849480	0					
ANR	3849504	ExpressionStatement	load_flags = FT_LOAD_NO_BITMAP	173:6:3968:3998	3849480	1	True				
ANR	3849505	AssignmentExpression	load_flags = FT_LOAD_NO_BITMAP		3849480	0		=			
ANR	3849506	Identifier	load_flags		3849480	0					
ANR	3849507	Identifier	FT_LOAD_NO_BITMAP		3849480	1					
ANR	3849508	IfStatement	if ( nohints )		3849480	3					
ANR	3849509	Condition	nohints	175:9:4010:4016	3849480	0	True				
ANR	3849510	Identifier	nohints		3849480	0					
ANR	3849511	ExpressionStatement	load_flags |= FT_LOAD_NO_HINTING	176:6:4026:4058	3849480	1	True				
ANR	3849512	AssignmentExpression	load_flags |= FT_LOAD_NO_HINTING		3849480	0		|=			
ANR	3849513	Identifier	load_flags		3849480	0					
ANR	3849514	Identifier	FT_LOAD_NO_HINTING		3849480	1					
ANR	3849515	ExpressionStatement	"FT_Set_Char_Size ( face , 0 , font_size , 72 , 72 )"	178:4:4065:4111	3849480	4	True				
ANR	3849516	CallExpression	"FT_Set_Char_Size ( face , 0 , font_size , 72 , 72 )"		3849480	0					
ANR	3849517	Callee	FT_Set_Char_Size		3849480	0					
ANR	3849518	Identifier	FT_Set_Char_Size		3849480	0					
ANR	3849519	ArgumentList	face		3849480	1					
ANR	3849520	Argument	face		3849480	0					
ANR	3849521	Identifier	face		3849480	0					
ANR	3849522	Argument	0		3849480	1					
ANR	3849523	PrimaryExpression	0		3849480	0					
ANR	3849524	Argument	font_size		3849480	2					
ANR	3849525	Identifier	font_size		3849480	0					
ANR	3849526	Argument	72		3849480	3					
ANR	3849527	PrimaryExpression	72		3849480	0					
ANR	3849528	Argument	72		3849480	4					
ANR	3849529	PrimaryExpression	72		3849480	0					
ANR	3849530	ForStatement	for ( gid = 0 ; gid < face -> num_glyphs ; gid ++ )		3849480	5					
ANR	3849531	ForInit	gid = 0 ;	180:10:4124:4131	3849480	0	True				
ANR	3849532	AssignmentExpression	gid = 0		3849480	0		=			
ANR	3849533	Identifier	gid		3849480	0					
ANR	3849534	PrimaryExpression	0		3849480	1					
ANR	3849535	Condition	gid < face -> num_glyphs	180:19:4133:4154	3849480	1	True				
ANR	3849536	RelationalExpression	gid < face -> num_glyphs		3849480	0		<			
ANR	3849537	Identifier	gid		3849480	0					
ANR	3849538	PtrMemberAccess	face -> num_glyphs		3849480	1					
ANR	3849539	Identifier	face		3849480	0					
ANR	3849540	Identifier	num_glyphs		3849480	1					
ANR	3849541	PostIncDecOperationExpression	gid ++	180:43:4157:4161	3849480	2	True				
ANR	3849542	Identifier	gid		3849480	0					
ANR	3849543	IncDec	++		3849480	1					
ANR	3849544	CompoundStatement		16:4:350:350	3849480	3					
ANR	3849545	IfStatement	if ( check_outlines && FT_IS_SCALABLE ( face ) )		3849480	0					
ANR	3849546	Condition	check_outlines && FT_IS_SCALABLE ( face )	182:11:4182:4240	3849480	0	True				
ANR	3849547	AndExpression	check_outlines && FT_IS_SCALABLE ( face )		3849480	0		&&			
ANR	3849548	Identifier	check_outlines		3849480	0					
ANR	3849549	CallExpression	FT_IS_SCALABLE ( face )		3849480	1					
ANR	3849550	Callee	FT_IS_SCALABLE		3849480	0					
ANR	3849551	Identifier	FT_IS_SCALABLE		3849480	0					
ANR	3849552	ArgumentList	face		3849480	1					
ANR	3849553	Argument	face		3849480	0					
ANR	3849554	Identifier	face		3849480	0					
ANR	3849555	CompoundStatement		19:6:431:431	3849480	1					
ANR	3849556	IfStatement	"if ( ! FT_Load_Glyph ( face , gid , load_flags ) )"		3849480	0					
ANR	3849557	Condition	"! FT_Load_Glyph ( face , gid , load_flags )"	185:13:4265:4303	3849480	0	True				
ANR	3849558	UnaryOperationExpression	"! FT_Load_Glyph ( face , gid , load_flags )"		3849480	0					
ANR	3849559	UnaryOperator	!		3849480	0					
ANR	3849560	CallExpression	"FT_Load_Glyph ( face , gid , load_flags )"		3849480	1					
ANR	3849561	Callee	FT_Load_Glyph		3849480	0					
ANR	3849562	Identifier	FT_Load_Glyph		3849480	0					
ANR	3849563	ArgumentList	face		3849480	1					
ANR	3849564	Argument	face		3849480	0					
ANR	3849565	Identifier	face		3849480	0					
ANR	3849566	Argument	gid		3849480	1					
ANR	3849567	Identifier	gid		3849480	0					
ANR	3849568	Argument	load_flags		3849480	2					
ANR	3849569	Identifier	load_flags		3849480	0					
ANR	3849570	ExpressionStatement	"FT_Outline_Decompose ( & face -> glyph -> outline , & outlinefuncs , NULL )"	186:10:4317:4383	3849480	1	True				
ANR	3849571	CallExpression	"FT_Outline_Decompose ( & face -> glyph -> outline , & outlinefuncs , NULL )"		3849480	0					
ANR	3849572	Callee	FT_Outline_Decompose		3849480	0					
ANR	3849573	Identifier	FT_Outline_Decompose		3849480	0					
ANR	3849574	ArgumentList	& face -> glyph -> outline		3849480	1					
ANR	3849575	Argument	& face -> glyph -> outline		3849480	0					
ANR	3849576	UnaryOperationExpression	& face -> glyph -> outline		3849480	0					
ANR	3849577	UnaryOperator	&		3849480	0					
ANR	3849578	PtrMemberAccess	face -> glyph -> outline		3849480	1					
ANR	3849579	PtrMemberAccess	face -> glyph		3849480	0					
ANR	3849580	Identifier	face		3849480	0					
ANR	3849581	Identifier	glyph		3849480	1					
ANR	3849582	Identifier	outline		3849480	1					
ANR	3849583	Argument	& outlinefuncs		3849480	1					
ANR	3849584	UnaryOperationExpression	& outlinefuncs		3849480	0					
ANR	3849585	UnaryOperator	&		3849480	0					
ANR	3849586	Identifier	outlinefuncs		3849480	1					
ANR	3849587	Argument	NULL		3849480	2					
ANR	3849588	Identifier	NULL		3849480	0					
ANR	3849589	ElseStatement	else		3849480	0					
ANR	3849590	ExpressionStatement	"FT_Load_Glyph ( face , gid , load_flags )"	189:8:4412:4450	3849480	0	True				
ANR	3849591	CallExpression	"FT_Load_Glyph ( face , gid , load_flags )"		3849480	0					
ANR	3849592	Callee	FT_Load_Glyph		3849480	0					
ANR	3849593	Identifier	FT_Load_Glyph		3849480	0					
ANR	3849594	ArgumentList	face		3849480	1					
ANR	3849595	Argument	face		3849480	0					
ANR	3849596	Identifier	face		3849480	0					
ANR	3849597	Argument	gid		3849480	1					
ANR	3849598	Identifier	gid		3849480	0					
ANR	3849599	Argument	load_flags		3849480	2					
ANR	3849600	Identifier	load_flags		3849480	0					
ANR	3849601	IfStatement	if ( rasterize )		3849480	1					
ANR	3849602	Condition	rasterize	191:11:4464:4472	3849480	0	True				
ANR	3849603	Identifier	rasterize		3849480	0					
ANR	3849604	ExpressionStatement	"FT_Render_Glyph ( face -> glyph , ft_render_mode_normal )"	192:8:4484:4537	3849480	1	True				
ANR	3849605	CallExpression	"FT_Render_Glyph ( face -> glyph , ft_render_mode_normal )"		3849480	0					
ANR	3849606	Callee	FT_Render_Glyph		3849480	0					
ANR	3849607	Identifier	FT_Render_Glyph		3849480	0					
ANR	3849608	ArgumentList	face -> glyph		3849480	1					
ANR	3849609	Argument	face -> glyph		3849480	0					
ANR	3849610	PtrMemberAccess	face -> glyph		3849480	0					
ANR	3849611	Identifier	face		3849480	0					
ANR	3849612	Identifier	glyph		3849480	1					
ANR	3849613	Argument	ft_render_mode_normal		3849480	1					
ANR	3849614	Identifier	ft_render_mode_normal		3849480	0					
ANR	3849615	ExpressionStatement	FT_Done_Face ( face )	195:4:4550:4570	3849480	6	True				
ANR	3849616	CallExpression	FT_Done_Face ( face )		3849480	0					
ANR	3849617	Callee	FT_Done_Face		3849480	0					
ANR	3849618	Identifier	FT_Done_Face		3849480	0					
ANR	3849619	ArgumentList	face		3849480	1					
ANR	3849620	Argument	face		3849480	0					
ANR	3849621	Identifier	face		3849480	0					
ANR	3849622	ReturnType	static void		3849480	1					
ANR	3849623	Identifier	TestFace		3849480	2					
ANR	3849624	ParameterList	FT_Face face		3849480	3					
ANR	3849625	Parameter	FT_Face face	165:12:3800:3812	3849480	0	True				
ANR	3849626	ParameterType	FT_Face		3849480	0					
ANR	3849627	Identifier	face		3849480	1					
ANR	3849628	CFGEntryNode	ENTRY		3849480		True				
ANR	3849629	CFGExitNode	EXIT		3849480		True				
ANR	3849630	Symbol	gid		3849480						
ANR	3849631	Symbol	NULL		3849480						
ANR	3849632	Symbol	check_outlines		3849480						
ANR	3849633	Symbol	font_size		3849480						
ANR	3849634	Symbol	nohints		3849480						
ANR	3849635	Symbol	face -> num_glyphs		3849480						
ANR	3849636	Symbol	FT_Load_Glyph		3849480						
ANR	3849637	Symbol	* face		3849480						
ANR	3849638	Symbol	face -> glyph		3849480						
ANR	3849639	Symbol	ft_render_mode_normal		3849480						
ANR	3849640	Symbol	FT_LOAD_DEFAULT		3849480						
ANR	3849641	Symbol	FT_IS_SCALABLE		3849480						
ANR	3849642	Symbol	face		3849480						
ANR	3849643	Symbol	& face -> glyph -> outline		3849480						
ANR	3849644	Symbol	& outlinefuncs		3849480						
ANR	3849645	Symbol	FT_LOAD_NO_BITMAP		3849480						
ANR	3849646	Symbol	FT_LOAD_NO_HINTING		3849480						
ANR	3849647	Symbol	rasterize		3849480						
ANR	3849648	Symbol	load_flags		3849480						
ANR	3849649	Function	ExecuteTest	199:2:4580:5298							
ANR	3849650	FunctionDef	ExecuteTest (char * testfont)		3849649	0					
ANR	3849651	CompoundStatement		201:2:4627:5298	3849649	0					
ANR	3849652	IdentifierDeclStatement	FT_Library context ;	202:4:4633:4652	3849649	0	True				
ANR	3849653	IdentifierDecl	context		3849649	0					
ANR	3849654	IdentifierDeclType	FT_Library		3849649	0					
ANR	3849655	Identifier	context		3849649	1					
ANR	3849656	IdentifierDeclStatement	FT_Face face ;	203:4:4658:4674	3849649	1	True				
ANR	3849657	IdentifierDecl	face		3849649	0					
ANR	3849658	IdentifierDeclType	FT_Face		3849649	0					
ANR	3849659	Identifier	face		3849649	1					
ANR	3849660	IfStatement	if ( FT_Init_FreeType ( & context ) )		3849649	2					
ANR	3849661	Condition	FT_Init_FreeType ( & context )	206:9:4687:4714	3849649	0	True				
ANR	3849662	CallExpression	FT_Init_FreeType ( & context )		3849649	0					
ANR	3849663	Callee	FT_Init_FreeType		3849649	0					
ANR	3849664	Identifier	FT_Init_FreeType		3849649	0					
ANR	3849665	ArgumentList	& context		3849649	1					
ANR	3849666	Argument	& context		3849649	0					
ANR	3849667	UnaryOperationExpression	& context		3849649	0					
ANR	3849668	UnaryOperator	&		3849649	0					
ANR	3849669	Identifier	context		3849649	1					
ANR	3849670	CompoundStatement		7:4:94:94	3849649	1					
ANR	3849671	ExpressionStatement	"fprintf ( stderr , ""Can't initialize FreeType.\\n"" )"	208:6:4730:4779	3849649	0	True				
ANR	3849672	CallExpression	"fprintf ( stderr , ""Can't initialize FreeType.\\n"" )"		3849649	0					
ANR	3849673	Callee	fprintf		3849649	0					
ANR	3849674	Identifier	fprintf		3849649	0					
ANR	3849675	ArgumentList	stderr		3849649	1					
ANR	3849676	Argument	stderr		3849649	0					
ANR	3849677	Identifier	stderr		3849649	0					
ANR	3849678	Argument	"""Can't initialize FreeType.\\n"""		3849649	1					
ANR	3849679	PrimaryExpression	"""Can't initialize FreeType.\\n"""		3849649	0					
ANR	3849680	ExpressionStatement	exit ( 1 )	209:6:4787:4796	3849649	1	True				
ANR	3849681	CallExpression	exit ( 1 )		3849649	0					
ANR	3849682	Callee	exit		3849649	0					
ANR	3849683	Identifier	exit		3849649	0					
ANR	3849684	ArgumentList	1		3849649	1					
ANR	3849685	Argument	1		3849649	0					
ANR	3849686	PrimaryExpression	1		3849649	0					
ANR	3849687	IfStatement	"if ( FT_New_Face ( context , testfont , 0 , & face ) )"		3849649	3					
ANR	3849688	Condition	"FT_New_Face ( context , testfont , 0 , & face )"	212:9:4814:4855	3849649	0	True				
ANR	3849689	CallExpression	"FT_New_Face ( context , testfont , 0 , & face )"		3849649	0					
ANR	3849690	Callee	FT_New_Face		3849649	0					
ANR	3849691	Identifier	FT_New_Face		3849649	0					
ANR	3849692	ArgumentList	context		3849649	1					
ANR	3849693	Argument	context		3849649	0					
ANR	3849694	Identifier	context		3849649	0					
ANR	3849695	Argument	testfont		3849649	1					
ANR	3849696	Identifier	testfont		3849649	0					
ANR	3849697	Argument	0		3849649	2					
ANR	3849698	PrimaryExpression	0		3849649	0					
ANR	3849699	Argument	& face		3849649	3					
ANR	3849700	UnaryOperationExpression	& face		3849649	0					
ANR	3849701	UnaryOperator	&		3849649	0					
ANR	3849702	Identifier	face		3849649	1					
ANR	3849703	CompoundStatement		13:4:235:235	3849649	1					
ANR	3849704	ExpressionStatement	exit ( 0 )	215:6:4934:4943	3849649	0	True				
ANR	3849705	CallExpression	exit ( 0 )		3849649	0					
ANR	3849706	Callee	exit		3849649	0					
ANR	3849707	Identifier	exit		3849649	0					
ANR	3849708	ArgumentList	0		3849649	1					
ANR	3849709	Argument	0		3849649	0					
ANR	3849710	PrimaryExpression	0		3849649	0					
ANR	3849711	IfStatement	if ( face -> num_faces == 1 )		3849649	4					
ANR	3849712	Condition	face -> num_faces == 1	218:9:4961:4980	3849649	0	True				
ANR	3849713	EqualityExpression	face -> num_faces == 1		3849649	0		==			
ANR	3849714	PtrMemberAccess	face -> num_faces		3849649	0					
ANR	3849715	Identifier	face		3849649	0					
ANR	3849716	Identifier	num_faces		3849649	1					
ANR	3849717	PrimaryExpression	1		3849649	1					
ANR	3849718	ExpressionStatement	TestFace ( face )	219:6:4990:5006	3849649	1	True				
ANR	3849719	CallExpression	TestFace ( face )		3849649	0					
ANR	3849720	Callee	TestFace		3849649	0					
ANR	3849721	Identifier	TestFace		3849649	0					
ANR	3849722	ArgumentList	face		3849649	1					
ANR	3849723	Argument	face		3849649	0					
ANR	3849724	Identifier	face		3849649	0					
ANR	3849725	ElseStatement	else		3849649	0					
ANR	3849726	CompoundStatement		22:6:401:413	3849649	0					
ANR	3849727	IdentifierDeclStatement	"long i , num ;"	222:6:5029:5041	3849649	0	True				
ANR	3849728	IdentifierDecl	i		3849649	0					
ANR	3849729	IdentifierDeclType	long		3849649	0					
ANR	3849730	Identifier	i		3849649	1					
ANR	3849731	IdentifierDecl	num		3849649	1					
ANR	3849732	IdentifierDeclType	long		3849649	0					
ANR	3849733	Identifier	num		3849649	1					
ANR	3849734	ExpressionStatement	num = face -> num_faces	225:6:5051:5072	3849649	1	True				
ANR	3849735	AssignmentExpression	num = face -> num_faces		3849649	0		=			
ANR	3849736	Identifier	num		3849649	0					
ANR	3849737	PtrMemberAccess	face -> num_faces		3849649	1					
ANR	3849738	Identifier	face		3849649	0					
ANR	3849739	Identifier	num_faces		3849649	1					
ANR	3849740	ExpressionStatement	FT_Done_Face ( face )	226:6:5080:5100	3849649	2	True				
ANR	3849741	CallExpression	FT_Done_Face ( face )		3849649	0					
ANR	3849742	Callee	FT_Done_Face		3849649	0					
ANR	3849743	Identifier	FT_Done_Face		3849649	0					
ANR	3849744	ArgumentList	face		3849649	1					
ANR	3849745	Argument	face		3849649	0					
ANR	3849746	Identifier	face		3849649	0					
ANR	3849747	ForStatement	for ( i = 0 ; i < num ; i ++ )		3849649	3					
ANR	3849748	ForInit	i = 0 ;	228:12:5115:5120	3849649	0	True				
ANR	3849749	AssignmentExpression	i = 0		3849649	0		=			
ANR	3849750	Identifier	i		3849649	0					
ANR	3849751	PrimaryExpression	0		3849649	1					
ANR	3849752	Condition	i < num	228:19:5122:5128	3849649	1	True				
ANR	3849753	RelationalExpression	i < num		3849649	0		<			
ANR	3849754	Identifier	i		3849649	0					
ANR	3849755	Identifier	num		3849649	1					
ANR	3849756	PostIncDecOperationExpression	i ++	228:28:5131:5133	3849649	2	True				
ANR	3849757	Identifier	i		3849649	0					
ANR	3849758	IncDec	++		3849649	1					
ANR	3849759	CompoundStatement		29:6:515:515	3849649	3					
ANR	3849760	IfStatement	"if ( ! FT_New_Face ( context , testfont , i , & face ) )"		3849649	0					
ANR	3849761	Condition	"! FT_New_Face ( context , testfont , i , & face )"	230:13:5158:5200	3849649	0	True				
ANR	3849762	UnaryOperationExpression	"! FT_New_Face ( context , testfont , i , & face )"		3849649	0					
ANR	3849763	UnaryOperator	!		3849649	0					
ANR	3849764	CallExpression	"FT_New_Face ( context , testfont , i , & face )"		3849649	1					
ANR	3849765	Callee	FT_New_Face		3849649	0					
ANR	3849766	Identifier	FT_New_Face		3849649	0					
ANR	3849767	ArgumentList	context		3849649	1					
ANR	3849768	Argument	context		3849649	0					
ANR	3849769	Identifier	context		3849649	0					
ANR	3849770	Argument	testfont		3849649	1					
ANR	3849771	Identifier	testfont		3849649	0					
ANR	3849772	Argument	i		3849649	2					
ANR	3849773	Identifier	i		3849649	0					
ANR	3849774	Argument	& face		3849649	3					
ANR	3849775	UnaryOperationExpression	& face		3849649	0					
ANR	3849776	UnaryOperator	&		3849649	0					
ANR	3849777	Identifier	face		3849649	1					
ANR	3849778	ExpressionStatement	TestFace ( face )	231:10:5214:5230	3849649	1	True				
ANR	3849779	CallExpression	TestFace ( face )		3849649	0					
ANR	3849780	Callee	TestFace		3849649	0					
ANR	3849781	Identifier	TestFace		3849649	0					
ANR	3849782	ArgumentList	face		3849649	1					
ANR	3849783	Argument	face		3849649	0					
ANR	3849784	Identifier	face		3849649	0					
ANR	3849785	ExpressionStatement	FT_Done_FreeType ( context )	235:4:5251:5278	3849649	5	True				
ANR	3849786	CallExpression	FT_Done_FreeType ( context )		3849649	0					
ANR	3849787	Callee	FT_Done_FreeType		3849649	0					
ANR	3849788	Identifier	FT_Done_FreeType		3849649	0					
ANR	3849789	ArgumentList	context		3849649	1					
ANR	3849790	Argument	context		3849649	0					
ANR	3849791	Identifier	context		3849649	0					
ANR	3849792	ExpressionStatement	exit ( 0 )	237:4:5285:5294	3849649	6	True				
ANR	3849793	CallExpression	exit ( 0 )		3849649	0					
ANR	3849794	Callee	exit		3849649	0					
ANR	3849795	Identifier	exit		3849649	0					
ANR	3849796	ArgumentList	0		3849649	1					
ANR	3849797	Argument	0		3849649	0					
ANR	3849798	PrimaryExpression	0		3849649	0					
ANR	3849799	ReturnType	static void		3849649	1					
ANR	3849800	Identifier	ExecuteTest		3849649	2					
ANR	3849801	ParameterList	char * testfont		3849649	3					
ANR	3849802	Parameter	char * testfont	200:15:4607:4621	3849649	0	True				
ANR	3849803	ParameterType	char *		3849649	0					
ANR	3849804	Identifier	testfont		3849649	1					
ANR	3849805	CFGEntryNode	ENTRY		3849649		True				
ANR	3849806	CFGExitNode	EXIT		3849649		True				
ANR	3849807	Symbol	FT_Init_FreeType		3849649						
ANR	3849808	Symbol	& context		3849649						
ANR	3849809	Symbol	face		3849649						
ANR	3849810	Symbol	num		3849649						
ANR	3849811	Symbol	context		3849649						
ANR	3849812	Symbol	FT_New_Face		3849649						
ANR	3849813	Symbol	i		3849649						
ANR	3849814	Symbol	face -> num_faces		3849649						
ANR	3849815	Symbol	testfont		3849649						
ANR	3849816	Symbol	stderr		3849649						
ANR	3849817	Symbol	& face		3849649						
ANR	3849818	Symbol	* face		3849649						
ANR	3849819	Function	extmatch	241:2:5304:5785							
ANR	3849820	FunctionDef	"extmatch (char * filename , char * * extensions)"		3849819	0					
ANR	3849821	CompoundStatement		244:2:5380:5785	3849819	0					
ANR	3849822	IdentifierDeclStatement	int i ;	245:4:5386:5394	3849819	0	True				
ANR	3849823	IdentifierDecl	i		3849819	0					
ANR	3849824	IdentifierDeclType	int		3849819	0					
ANR	3849825	Identifier	i		3849819	1					
ANR	3849826	IdentifierDeclStatement	char * pt ;	246:4:5400:5409	3849819	1	True				
ANR	3849827	IdentifierDecl	* pt		3849819	0					
ANR	3849828	IdentifierDeclType	char *		3849819	0					
ANR	3849829	Identifier	pt		3849819	1					
ANR	3849830	IfStatement	if ( ! extensions )		3849819	2					
ANR	3849831	Condition	! extensions	249:9:5422:5432	3849819	0	True				
ANR	3849832	UnaryOperationExpression	! extensions		3849819	0					
ANR	3849833	UnaryOperator	!		3849819	0					
ANR	3849834	Identifier	extensions		3849819	1					
ANR	3849835	ReturnStatement	return true ;	250:6:5442:5453	3849819	1	True				
ANR	3849836	Identifier	true		3849819	0					
ANR	3849837	ExpressionStatement	"pt = strrchr ( filename , '.' )"	252:4:5460:5489	3849819	3	True				
ANR	3849838	AssignmentExpression	"pt = strrchr ( filename , '.' )"		3849819	0		=			
ANR	3849839	Identifier	pt		3849819	0					
ANR	3849840	CallExpression	"strrchr ( filename , '.' )"		3849819	1					
ANR	3849841	Callee	strrchr		3849819	0					
ANR	3849842	Identifier	strrchr		3849819	0					
ANR	3849843	ArgumentList	filename		3849819	1					
ANR	3849844	Argument	filename		3849819	0					
ANR	3849845	Identifier	filename		3849819	0					
ANR	3849846	Argument	'.'		3849819	1					
ANR	3849847	PrimaryExpression	'.'		3849819	0					
ANR	3849848	IfStatement	if ( ! pt )		3849819	4					
ANR	3849849	Condition	! pt	253:9:5500:5502	3849819	0	True				
ANR	3849850	UnaryOperationExpression	! pt		3849819	0					
ANR	3849851	UnaryOperator	!		3849819	0					
ANR	3849852	Identifier	pt		3849819	1					
ANR	3849853	ReturnStatement	return false ;	254:6:5512:5524	3849819	1	True				
ANR	3849854	Identifier	false		3849819	0					
ANR	3849855	IfStatement	"if ( pt < strrchr ( filename , '/' ) )"		3849819	5					
ANR	3849856	Condition	"pt < strrchr ( filename , '/' )"	255:9:5535:5563	3849819	0	True				
ANR	3849857	RelationalExpression	"pt < strrchr ( filename , '/' )"		3849819	0		<			
ANR	3849858	Identifier	pt		3849819	0					
ANR	3849859	CallExpression	"strrchr ( filename , '/' )"		3849819	1					
ANR	3849860	Callee	strrchr		3849819	0					
ANR	3849861	Identifier	strrchr		3849819	0					
ANR	3849862	ArgumentList	filename		3849819	1					
ANR	3849863	Argument	filename		3849819	0					
ANR	3849864	Identifier	filename		3849819	0					
ANR	3849865	Argument	'/'		3849819	1					
ANR	3849866	PrimaryExpression	'/'		3849819	0					
ANR	3849867	ReturnStatement	return false ;	256:6:5573:5585	3849819	1	True				
ANR	3849868	Identifier	false		3849819	0					
ANR	3849869	ForStatement	for ( i = 0 ; extensions [ i ] != NULL ; i ++ )		3849819	6					
ANR	3849870	ForInit	i = 0 ;	258:10:5598:5603	3849819	0	True				
ANR	3849871	AssignmentExpression	i = 0		3849819	0		=			
ANR	3849872	Identifier	i		3849819	0					
ANR	3849873	PrimaryExpression	0		3849819	1					
ANR	3849874	Condition	extensions [ i ] != NULL	258:17:5605:5625	3849819	1	True				
ANR	3849875	EqualityExpression	extensions [ i ] != NULL		3849819	0		!=			
ANR	3849876	ArrayIndexing	extensions [ i ]		3849819	0					
ANR	3849877	Identifier	extensions		3849819	0					
ANR	3849878	Identifier	i		3849819	1					
ANR	3849879	Identifier	NULL		3849819	1					
ANR	3849880	PostIncDecOperationExpression	i ++	258:40:5628:5630	3849819	2	True				
ANR	3849881	Identifier	i		3849819	0					
ANR	3849882	IncDec	++		3849819	1					
ANR	3849883	IfStatement	"if ( strcasecmp ( pt + 1 , extensions [ i ] ) == 0 || strcasecmp ( pt , extensions [ i ] ) == 0 )"		3849819	3					
ANR	3849884	Condition	"strcasecmp ( pt + 1 , extensions [ i ] ) == 0 || strcasecmp ( pt , extensions [ i ] ) == 0"	259:11:5645:5739	3849819	0	True				
ANR	3849885	OrExpression	"strcasecmp ( pt + 1 , extensions [ i ] ) == 0 || strcasecmp ( pt , extensions [ i ] ) == 0"		3849819	0		||			
ANR	3849886	EqualityExpression	"strcasecmp ( pt + 1 , extensions [ i ] ) == 0"		3849819	0		==			
ANR	3849887	CallExpression	"strcasecmp ( pt + 1 , extensions [ i ] )"		3849819	0					
ANR	3849888	Callee	strcasecmp		3849819	0					
ANR	3849889	Identifier	strcasecmp		3849819	0					
ANR	3849890	ArgumentList	pt + 1		3849819	1					
ANR	3849891	Argument	pt + 1		3849819	0					
ANR	3849892	AdditiveExpression	pt + 1		3849819	0		+			
ANR	3849893	Identifier	pt		3849819	0					
ANR	3849894	PrimaryExpression	1		3849819	1					
ANR	3849895	Argument	extensions [ i ]		3849819	1					
ANR	3849896	ArrayIndexing	extensions [ i ]		3849819	0					
ANR	3849897	Identifier	extensions		3849819	0					
ANR	3849898	Identifier	i		3849819	1					
ANR	3849899	PrimaryExpression	0		3849819	1					
ANR	3849900	EqualityExpression	"strcasecmp ( pt , extensions [ i ] ) == 0"		3849819	1		==			
ANR	3849901	CallExpression	"strcasecmp ( pt , extensions [ i ] )"		3849819	0					
ANR	3849902	Callee	strcasecmp		3849819	0					
ANR	3849903	Identifier	strcasecmp		3849819	0					
ANR	3849904	ArgumentList	pt		3849819	1					
ANR	3849905	Argument	pt		3849819	0					
ANR	3849906	Identifier	pt		3849819	0					
ANR	3849907	Argument	extensions [ i ]		3849819	1					
ANR	3849908	ArrayIndexing	extensions [ i ]		3849819	0					
ANR	3849909	Identifier	extensions		3849819	0					
ANR	3849910	Identifier	i		3849819	1					
ANR	3849911	PrimaryExpression	0		3849819	1					
ANR	3849912	ReturnStatement	return true ;	261:8:5751:5762	3849819	1	True				
ANR	3849913	Identifier	true		3849819	0					
ANR	3849914	ReturnStatement	return false ;	263:4:5769:5781	3849819	7	True				
ANR	3849915	Identifier	false		3849819	0					
ANR	3849916	ReturnType	static int		3849819	1					
ANR	3849917	Identifier	extmatch		3849819	2					
ANR	3849918	ParameterList	"char * filename , char * * extensions"		3849819	3					
ANR	3849919	Parameter	char * filename	242:12:5327:5342	3849819	0	True				
ANR	3849920	ParameterType	char *		3849819	0					
ANR	3849921	Identifier	filename		3849819	1					
ANR	3849922	Parameter	char * * extensions	243:12:5357:5374	3849819	1	True				
ANR	3849923	ParameterType	char * *		3849819	0					
ANR	3849924	Identifier	extensions		3849819	1					
ANR	3849925	CFGEntryNode	ENTRY		3849819		True				
ANR	3849926	CFGExitNode	EXIT		3849819		True				
ANR	3849927	Symbol	extensions		3849819						
ANR	3849928	Symbol	filename		3849819						
ANR	3849929	Symbol	* i		3849819						
ANR	3849930	Symbol	NULL		3849819						
ANR	3849931	Symbol	pt		3849819						
ANR	3849932	Symbol	strrchr		3849819						
ANR	3849933	Symbol	true		3849819						
ANR	3849934	Symbol	false		3849819						
ANR	3849935	Symbol	i		3849819						
ANR	3849936	Symbol	* extensions		3849819						
ANR	3849937	Symbol	strcasecmp		3849819						
ANR	3849938	Function	figurefiletype	267:2:5791:7893							
ANR	3849939	FunctionDef	figurefiletype (struct fontlist * item)		3849938	0					
ANR	3849940	CompoundStatement		269:2:5848:7893	3849938	0					
ANR	3849941	IdentifierDeclStatement	FILE * foo ;	270:4:5854:5864	3849938	0	True				
ANR	3849942	IdentifierDecl	* foo		3849938	0					
ANR	3849943	IdentifierDeclType	FILE *		3849938	0					
ANR	3849944	Identifier	foo		3849938	1					
ANR	3849945	ExpressionStatement	item -> isbinary = item -> isascii = item -> ishex = false	273:4:5872:5924	3849938	1	True				
ANR	3849946	AssignmentExpression	item -> isbinary = item -> isascii = item -> ishex = false		3849938	0		=			
ANR	3849947	PtrMemberAccess	item -> isbinary		3849938	0					
ANR	3849948	Identifier	item		3849938	0					
ANR	3849949	Identifier	isbinary		3849938	1					
ANR	3849950	AssignmentExpression	item -> isascii = item -> ishex = false		3849938	1		=			
ANR	3849951	PtrMemberAccess	item -> isascii		3849938	0					
ANR	3849952	Identifier	item		3849938	0					
ANR	3849953	Identifier	isascii		3849938	1					
ANR	3849954	AssignmentExpression	item -> ishex = false		3849938	1		=			
ANR	3849955	PtrMemberAccess	item -> ishex		3849938	0					
ANR	3849956	Identifier	item		3849938	0					
ANR	3849957	Identifier	ishex		3849938	1					
ANR	3849958	Identifier	false		3849938	1					
ANR	3849959	ExpressionStatement	"foo = fopen ( item -> name , ""rb"" )"	275:4:5931:5962	3849938	2	True				
ANR	3849960	AssignmentExpression	"foo = fopen ( item -> name , ""rb"" )"		3849938	0		=			
ANR	3849961	Identifier	foo		3849938	0					
ANR	3849962	CallExpression	"fopen ( item -> name , ""rb"" )"		3849938	1					
ANR	3849963	Callee	fopen		3849938	0					
ANR	3849964	Identifier	fopen		3849938	0					
ANR	3849965	ArgumentList	item -> name		3849938	1					
ANR	3849966	Argument	item -> name		3849938	0					
ANR	3849967	PtrMemberAccess	item -> name		3849938	0					
ANR	3849968	Identifier	item		3849938	0					
ANR	3849969	Identifier	name		3849938	1					
ANR	3849970	Argument	"""rb"""		3849938	1					
ANR	3849971	PrimaryExpression	"""rb"""		3849938	0					
ANR	3849972	IfStatement	if ( foo )		3849938	3					
ANR	3849973	Condition	foo	276:9:5973:5975	3849938	0	True				
ANR	3849974	Identifier	foo		3849938	0					
ANR	3849975	CompoundStatement		14:6:304:326	3849938	1					
ANR	3849976	IdentifierDeclStatement	int ch1 = getc ( foo ) ;	279:6:6063:6085	3849938	0	True				
ANR	3849977	IdentifierDecl	ch1 = getc ( foo )		3849938	0					
ANR	3849978	IdentifierDeclType	int		3849938	0					
ANR	3849979	Identifier	ch1		3849938	1					
ANR	3849980	AssignmentExpression	ch1 = getc ( foo )		3849938	2		=			
ANR	3849981	Identifier	ch1		3849938	0					
ANR	3849982	CallExpression	getc ( foo )		3849938	1					
ANR	3849983	Callee	getc		3849938	0					
ANR	3849984	Identifier	getc		3849938	0					
ANR	3849985	ArgumentList	foo		3849938	1					
ANR	3849986	Argument	foo		3849938	0					
ANR	3849987	Identifier	foo		3849938	0					
ANR	3849988	IdentifierDeclStatement	int ch2 = getc ( foo ) ;	280:6:6093:6115	3849938	1	True				
ANR	3849989	IdentifierDecl	ch2 = getc ( foo )		3849938	0					
ANR	3849990	IdentifierDeclType	int		3849938	0					
ANR	3849991	Identifier	ch2		3849938	1					
ANR	3849992	AssignmentExpression	ch2 = getc ( foo )		3849938	2		=			
ANR	3849993	Identifier	ch2		3849938	0					
ANR	3849994	CallExpression	getc ( foo )		3849938	1					
ANR	3849995	Callee	getc		3849938	0					
ANR	3849996	Identifier	getc		3849938	0					
ANR	3849997	ArgumentList	foo		3849938	1					
ANR	3849998	Argument	foo		3849938	0					
ANR	3849999	Identifier	foo		3849938	0					
ANR	3850000	IdentifierDeclStatement	int ch3 = getc ( foo ) ;	281:6:6123:6145	3849938	2	True				
ANR	3850001	IdentifierDecl	ch3 = getc ( foo )		3849938	0					
ANR	3850002	IdentifierDeclType	int		3849938	0					
ANR	3850003	Identifier	ch3		3849938	1					
ANR	3850004	AssignmentExpression	ch3 = getc ( foo )		3849938	2		=			
ANR	3850005	Identifier	ch3		3849938	0					
ANR	3850006	CallExpression	getc ( foo )		3849938	1					
ANR	3850007	Callee	getc		3849938	0					
ANR	3850008	Identifier	getc		3849938	0					
ANR	3850009	ArgumentList	foo		3849938	1					
ANR	3850010	Argument	foo		3849938	0					
ANR	3850011	Identifier	foo		3849938	0					
ANR	3850012	IdentifierDeclStatement	int ch4 = getc ( foo ) ;	282:6:6153:6175	3849938	3	True				
ANR	3850013	IdentifierDecl	ch4 = getc ( foo )		3849938	0					
ANR	3850014	IdentifierDeclType	int		3849938	0					
ANR	3850015	Identifier	ch4		3849938	1					
ANR	3850016	AssignmentExpression	ch4 = getc ( foo )		3849938	2		=			
ANR	3850017	Identifier	ch4		3849938	0					
ANR	3850018	CallExpression	getc ( foo )		3849938	1					
ANR	3850019	Callee	getc		3849938	0					
ANR	3850020	Identifier	getc		3849938	0					
ANR	3850021	ArgumentList	foo		3849938	1					
ANR	3850022	Argument	foo		3849938	0					
ANR	3850023	Identifier	foo		3849938	0					
ANR	3850024	ExpressionStatement	fclose ( foo )	285:6:6185:6198	3849938	4	True				
ANR	3850025	CallExpression	fclose ( foo )		3849938	0					
ANR	3850026	Callee	fclose		3849938	0					
ANR	3850027	Identifier	fclose		3849938	0					
ANR	3850028	ArgumentList	foo		3849938	1					
ANR	3850029	Argument	foo		3849938	0					
ANR	3850030	Identifier	foo		3849938	0					
ANR	3850031	IfStatement	if ( ( ch1 == 0 && ch2 == 1 && ch3 == 0 && ch4 == 0 ) || ( ch1 == 'O' && ch2 == 'T' && ch3 == 'T' && ch4 == 'O' ) || ( ch1 == 't' && ch2 == 'r' && ch3 == 'u' && ch4 == 'e' ) || ( ch1 == 't' && ch2 == 't' && ch3 == 'c' && ch4 == 'f' ) )		3849938	5					
ANR	3850032	Condition	( ch1 == 0 && ch2 == 1 && ch3 == 0 && ch4 == 0 ) || ( ch1 == 'O' && ch2 == 'T' && ch3 == 'T' && ch4 == 'O' ) || ( ch1 == 't' && ch2 == 'r' && ch3 == 'u' && ch4 == 'e' ) || ( ch1 == 't' && ch2 == 't' && ch3 == 'c' && ch4 == 'f' )	287:11:6212:6480	3849938	0	True				
ANR	3850033	OrExpression	( ch1 == 0 && ch2 == 1 && ch3 == 0 && ch4 == 0 ) || ( ch1 == 'O' && ch2 == 'T' && ch3 == 'T' && ch4 == 'O' ) || ( ch1 == 't' && ch2 == 'r' && ch3 == 'u' && ch4 == 'e' ) || ( ch1 == 't' && ch2 == 't' && ch3 == 'c' && ch4 == 'f' )		3849938	0		||			
ANR	3850034	AndExpression	ch1 == 0 && ch2 == 1 && ch3 == 0 && ch4 == 0		3849938	0		&&			
ANR	3850035	EqualityExpression	ch1 == 0		3849938	0		==			
ANR	3850036	Identifier	ch1		3849938	0					
ANR	3850037	PrimaryExpression	0		3849938	1					
ANR	3850038	AndExpression	ch2 == 1 && ch3 == 0 && ch4 == 0		3849938	1		&&			
ANR	3850039	EqualityExpression	ch2 == 1		3849938	0		==			
ANR	3850040	Identifier	ch2		3849938	0					
ANR	3850041	PrimaryExpression	1		3849938	1					
ANR	3850042	AndExpression	ch3 == 0 && ch4 == 0		3849938	1		&&			
ANR	3850043	EqualityExpression	ch3 == 0		3849938	0		==			
ANR	3850044	Identifier	ch3		3849938	0					
ANR	3850045	PrimaryExpression	0		3849938	1					
ANR	3850046	EqualityExpression	ch4 == 0		3849938	1		==			
ANR	3850047	Identifier	ch4		3849938	0					
ANR	3850048	PrimaryExpression	0		3849938	1					
ANR	3850049	OrExpression	( ch1 == 'O' && ch2 == 'T' && ch3 == 'T' && ch4 == 'O' ) || ( ch1 == 't' && ch2 == 'r' && ch3 == 'u' && ch4 == 'e' ) || ( ch1 == 't' && ch2 == 't' && ch3 == 'c' && ch4 == 'f' )		3849938	1		||			
ANR	3850050	AndExpression	ch1 == 'O' && ch2 == 'T' && ch3 == 'T' && ch4 == 'O'		3849938	0		&&			
ANR	3850051	EqualityExpression	ch1 == 'O'		3849938	0		==			
ANR	3850052	Identifier	ch1		3849938	0					
ANR	3850053	PrimaryExpression	'O'		3849938	1					
ANR	3850054	AndExpression	ch2 == 'T' && ch3 == 'T' && ch4 == 'O'		3849938	1		&&			
ANR	3850055	EqualityExpression	ch2 == 'T'		3849938	0		==			
ANR	3850056	Identifier	ch2		3849938	0					
ANR	3850057	PrimaryExpression	'T'		3849938	1					
ANR	3850058	AndExpression	ch3 == 'T' && ch4 == 'O'		3849938	1		&&			
ANR	3850059	EqualityExpression	ch3 == 'T'		3849938	0		==			
ANR	3850060	Identifier	ch3		3849938	0					
ANR	3850061	PrimaryExpression	'T'		3849938	1					
ANR	3850062	EqualityExpression	ch4 == 'O'		3849938	1		==			
ANR	3850063	Identifier	ch4		3849938	0					
ANR	3850064	PrimaryExpression	'O'		3849938	1					
ANR	3850065	OrExpression	( ch1 == 't' && ch2 == 'r' && ch3 == 'u' && ch4 == 'e' ) || ( ch1 == 't' && ch2 == 't' && ch3 == 'c' && ch4 == 'f' )		3849938	1		||			
ANR	3850066	AndExpression	ch1 == 't' && ch2 == 'r' && ch3 == 'u' && ch4 == 'e'		3849938	0		&&			
ANR	3850067	EqualityExpression	ch1 == 't'		3849938	0		==			
ANR	3850068	Identifier	ch1		3849938	0					
ANR	3850069	PrimaryExpression	't'		3849938	1					
ANR	3850070	AndExpression	ch2 == 'r' && ch3 == 'u' && ch4 == 'e'		3849938	1		&&			
ANR	3850071	EqualityExpression	ch2 == 'r'		3849938	0		==			
ANR	3850072	Identifier	ch2		3849938	0					
ANR	3850073	PrimaryExpression	'r'		3849938	1					
ANR	3850074	AndExpression	ch3 == 'u' && ch4 == 'e'		3849938	1		&&			
ANR	3850075	EqualityExpression	ch3 == 'u'		3849938	0		==			
ANR	3850076	Identifier	ch3		3849938	0					
ANR	3850077	PrimaryExpression	'u'		3849938	1					
ANR	3850078	EqualityExpression	ch4 == 'e'		3849938	1		==			
ANR	3850079	Identifier	ch4		3849938	0					
ANR	3850080	PrimaryExpression	'e'		3849938	1					
ANR	3850081	AndExpression	ch1 == 't' && ch2 == 't' && ch3 == 'c' && ch4 == 'f'		3849938	1		&&			
ANR	3850082	EqualityExpression	ch1 == 't'		3849938	0		==			
ANR	3850083	Identifier	ch1		3849938	0					
ANR	3850084	PrimaryExpression	't'		3849938	1					
ANR	3850085	AndExpression	ch2 == 't' && ch3 == 'c' && ch4 == 'f'		3849938	1		&&			
ANR	3850086	EqualityExpression	ch2 == 't'		3849938	0		==			
ANR	3850087	Identifier	ch2		3849938	0					
ANR	3850088	PrimaryExpression	't'		3849938	1					
ANR	3850089	AndExpression	ch3 == 'c' && ch4 == 'f'		3849938	1		&&			
ANR	3850090	EqualityExpression	ch3 == 'c'		3849938	0		==			
ANR	3850091	Identifier	ch3		3849938	0					
ANR	3850092	PrimaryExpression	'c'		3849938	1					
ANR	3850093	EqualityExpression	ch4 == 'f'		3849938	1		==			
ANR	3850094	Identifier	ch4		3849938	0					
ANR	3850095	PrimaryExpression	'f'		3849938	1					
ANR	3850096	CompoundStatement		23:6:641:641	3849938	1					
ANR	3850097	ExpressionStatement	item -> isbinary = true	293:8:6534:6555	3849938	0	True				
ANR	3850098	AssignmentExpression	item -> isbinary = true		3849938	0		=			
ANR	3850099	PtrMemberAccess	item -> isbinary		3849938	0					
ANR	3850100	Identifier	item		3849938	0					
ANR	3850101	Identifier	isbinary		3849938	1					
ANR	3850102	Identifier	true		3849938	1					
ANR	3850103	ElseStatement	else		3849938	0					
ANR	3850104	IfStatement	if ( ch1 == 0x80 && ch2 == '\\01' )		3849938	0					
ANR	3850105	Condition	ch1 == 0x80 && ch2 == '\\01'	295:16:6581:6607	3849938	0	True				
ANR	3850106	AndExpression	ch1 == 0x80 && ch2 == '\\01'		3849938	0		&&			
ANR	3850107	EqualityExpression	ch1 == 0x80		3849938	0		==			
ANR	3850108	Identifier	ch1		3849938	0					
ANR	3850109	PrimaryExpression	0x80		3849938	1					
ANR	3850110	EqualityExpression	ch2 == '\\01'		3849938	1		==			
ANR	3850111	Identifier	ch2		3849938	0					
ANR	3850112	PrimaryExpression	'\\01'		3849938	1					
ANR	3850113	CompoundStatement		28:6:768:768	3849938	1					
ANR	3850114	ExpressionStatement	item -> isbinary = true	298:8:6652:6673	3849938	0	True				
ANR	3850115	AssignmentExpression	item -> isbinary = true		3849938	0		=			
ANR	3850116	PtrMemberAccess	item -> isbinary		3849938	0					
ANR	3850117	Identifier	item		3849938	0					
ANR	3850118	Identifier	isbinary		3849938	1					
ANR	3850119	Identifier	true		3849938	1					
ANR	3850120	ElseStatement	else		3849938	0					
ANR	3850121	IfStatement	if ( ch1 == '%' && ch2 == '!' )		3849938	0					
ANR	3850122	Condition	ch1 == '%' && ch2 == '!'	300:16:6699:6722	3849938	0	True				
ANR	3850123	AndExpression	ch1 == '%' && ch2 == '!'		3849938	0		&&			
ANR	3850124	EqualityExpression	ch1 == '%'		3849938	0		==			
ANR	3850125	Identifier	ch1		3849938	0					
ANR	3850126	PrimaryExpression	'%'		3849938	1					
ANR	3850127	EqualityExpression	ch2 == '!'		3849938	1		==			
ANR	3850128	Identifier	ch2		3849938	0					
ANR	3850129	PrimaryExpression	'!'		3849938	1					
ANR	3850130	CompoundStatement		33:6:883:883	3849938	1					
ANR	3850131	IfStatement	"if ( strstr ( item -> name , "".pfa"" ) || strstr ( item -> name , "".PFA"" ) )"		3849938	0					
ANR	3850132	Condition	"strstr ( item -> name , "".pfa"" ) || strstr ( item -> name , "".PFA"" )"	303:13:6779:6851	3849938	0	True				
ANR	3850133	OrExpression	"strstr ( item -> name , "".pfa"" ) || strstr ( item -> name , "".PFA"" )"		3849938	0		||			
ANR	3850134	CallExpression	"strstr ( item -> name , "".pfa"" )"		3849938	0					
ANR	3850135	Callee	strstr		3849938	0					
ANR	3850136	Identifier	strstr		3849938	0					
ANR	3850137	ArgumentList	item -> name		3849938	1					
ANR	3850138	Argument	item -> name		3849938	0					
ANR	3850139	PtrMemberAccess	item -> name		3849938	0					
ANR	3850140	Identifier	item		3849938	0					
ANR	3850141	Identifier	name		3849938	1					
ANR	3850142	Argument	""".pfa"""		3849938	1					
ANR	3850143	PrimaryExpression	""".pfa"""		3849938	0					
ANR	3850144	CallExpression	"strstr ( item -> name , "".PFA"" )"		3849938	1					
ANR	3850145	Callee	strstr		3849938	0					
ANR	3850146	Identifier	strstr		3849938	0					
ANR	3850147	ArgumentList	item -> name		3849938	1					
ANR	3850148	Argument	item -> name		3849938	0					
ANR	3850149	PtrMemberAccess	item -> name		3849938	0					
ANR	3850150	Identifier	item		3849938	0					
ANR	3850151	Identifier	name		3849938	1					
ANR	3850152	Argument	""".PFA"""		3849938	1					
ANR	3850153	PrimaryExpression	""".PFA"""		3849938	0					
ANR	3850154	ExpressionStatement	item -> ishex = true	305:10:6865:6883	3849938	1	True				
ANR	3850155	AssignmentExpression	item -> ishex = true		3849938	0		=			
ANR	3850156	PtrMemberAccess	item -> ishex		3849938	0					
ANR	3850157	Identifier	item		3849938	0					
ANR	3850158	Identifier	ishex		3849938	1					
ANR	3850159	Identifier	true		3849938	1					
ANR	3850160	ElseStatement	else		3849938	0					
ANR	3850161	ExpressionStatement	item -> isascii = true	307:10:6908:6928	3849938	0	True				
ANR	3850162	AssignmentExpression	item -> isascii = true		3849938	0		=			
ANR	3850163	PtrMemberAccess	item -> isascii		3849938	0					
ANR	3850164	Identifier	item		3849938	0					
ANR	3850165	Identifier	isascii		3849938	1					
ANR	3850166	Identifier	true		3849938	1					
ANR	3850167	ElseStatement	else		3849938	0					
ANR	3850168	IfStatement	if ( ch1 == 1 && ch2 == 0 && ch3 == 4 )		3849938	0					
ANR	3850169	Condition	ch1 == 1 && ch2 == 0 && ch3 == 4	309:16:6954:6985	3849938	0	True				
ANR	3850170	AndExpression	ch1 == 1 && ch2 == 0 && ch3 == 4		3849938	0		&&			
ANR	3850171	EqualityExpression	ch1 == 1		3849938	0		==			
ANR	3850172	Identifier	ch1		3849938	0					
ANR	3850173	PrimaryExpression	1		3849938	1					
ANR	3850174	AndExpression	ch2 == 0 && ch3 == 4		3849938	1		&&			
ANR	3850175	EqualityExpression	ch2 == 0		3849938	0		==			
ANR	3850176	Identifier	ch2		3849938	0					
ANR	3850177	PrimaryExpression	0		3849938	1					
ANR	3850178	EqualityExpression	ch3 == 4		3849938	1		==			
ANR	3850179	Identifier	ch3		3849938	0					
ANR	3850180	PrimaryExpression	4		3849938	1					
ANR	3850181	CompoundStatement		42:6:1146:1146	3849938	1					
ANR	3850182	ExpressionStatement	item -> isbinary = true	312:8:7028:7049	3849938	0	True				
ANR	3850183	AssignmentExpression	item -> isbinary = true		3849938	0		=			
ANR	3850184	PtrMemberAccess	item -> isbinary		3849938	0					
ANR	3850185	Identifier	item		3849938	0					
ANR	3850186	Identifier	isbinary		3849938	1					
ANR	3850187	Identifier	true		3849938	1					
ANR	3850188	ElseStatement	else		3849938	0					
ANR	3850189	IfStatement	if ( ch1 == 'S' && ch2 == 'T' && ch3 == 'A' && ch4 == 'R' )		3849938	0					
ANR	3850190	Condition	ch1 == 'S' && ch2 == 'T' && ch3 == 'A' && ch4 == 'R'	314:16:7075:7126	3849938	0	True				
ANR	3850191	AndExpression	ch1 == 'S' && ch2 == 'T' && ch3 == 'A' && ch4 == 'R'		3849938	0		&&			
ANR	3850192	EqualityExpression	ch1 == 'S'		3849938	0		==			
ANR	3850193	Identifier	ch1		3849938	0					
ANR	3850194	PrimaryExpression	'S'		3849938	1					
ANR	3850195	AndExpression	ch2 == 'T' && ch3 == 'A' && ch4 == 'R'		3849938	1		&&			
ANR	3850196	EqualityExpression	ch2 == 'T'		3849938	0		==			
ANR	3850197	Identifier	ch2		3849938	0					
ANR	3850198	PrimaryExpression	'T'		3849938	1					
ANR	3850199	AndExpression	ch3 == 'A' && ch4 == 'R'		3849938	1		&&			
ANR	3850200	EqualityExpression	ch3 == 'A'		3849938	0		==			
ANR	3850201	Identifier	ch3		3849938	0					
ANR	3850202	PrimaryExpression	'A'		3849938	1					
ANR	3850203	EqualityExpression	ch4 == 'R'		3849938	1		==			
ANR	3850204	Identifier	ch4		3849938	0					
ANR	3850205	PrimaryExpression	'R'		3849938	1					
ANR	3850206	CompoundStatement		47:6:1287:1287	3849938	1					
ANR	3850207	ExpressionStatement	item -> ishex = true	317:8:7164:7182	3849938	0	True				
ANR	3850208	AssignmentExpression	item -> ishex = true		3849938	0		=			
ANR	3850209	PtrMemberAccess	item -> ishex		3849938	0					
ANR	3850210	Identifier	item		3849938	0					
ANR	3850211	Identifier	ishex		3849938	1					
ANR	3850212	Identifier	true		3849938	1					
ANR	3850213	ElseStatement	else		3849938	0					
ANR	3850214	IfStatement	if ( ch1 == 'P' && ch2 == 'F' && ch3 == 'R' && ch4 == '0' )		3849938	0					
ANR	3850215	Condition	ch1 == 'P' && ch2 == 'F' && ch3 == 'R' && ch4 == '0'	319:16:7208:7259	3849938	0	True				
ANR	3850216	AndExpression	ch1 == 'P' && ch2 == 'F' && ch3 == 'R' && ch4 == '0'		3849938	0		&&			
ANR	3850217	EqualityExpression	ch1 == 'P'		3849938	0		==			
ANR	3850218	Identifier	ch1		3849938	0					
ANR	3850219	PrimaryExpression	'P'		3849938	1					
ANR	3850220	AndExpression	ch2 == 'F' && ch3 == 'R' && ch4 == '0'		3849938	1		&&			
ANR	3850221	EqualityExpression	ch2 == 'F'		3849938	0		==			
ANR	3850222	Identifier	ch2		3849938	0					
ANR	3850223	PrimaryExpression	'F'		3849938	1					
ANR	3850224	AndExpression	ch3 == 'R' && ch4 == '0'		3849938	1		&&			
ANR	3850225	EqualityExpression	ch3 == 'R'		3849938	0		==			
ANR	3850226	Identifier	ch3		3849938	0					
ANR	3850227	PrimaryExpression	'R'		3849938	1					
ANR	3850228	EqualityExpression	ch4 == '0'		3849938	1		==			
ANR	3850229	Identifier	ch4		3849938	0					
ANR	3850230	PrimaryExpression	'0'		3849938	1					
ANR	3850231	CompoundStatement		52:6:1420:1420	3849938	1					
ANR	3850232	ExpressionStatement	item -> isbinary = true	322:8:7297:7318	3849938	0	True				
ANR	3850233	AssignmentExpression	item -> isbinary = true		3849938	0		=			
ANR	3850234	PtrMemberAccess	item -> isbinary		3849938	0					
ANR	3850235	Identifier	item		3849938	0					
ANR	3850236	Identifier	isbinary		3849938	1					
ANR	3850237	Identifier	true		3849938	1					
ANR	3850238	ElseStatement	else		3849938	0					
ANR	3850239	IfStatement	if ( ( ch1 == '\\1' && ch2 == 'f' && ch3 == 'c' && ch4 == 'p' ) || ( ch1 == 'M' && ch2 == 'Z' ) )		3849938	0					
ANR	3850240	Condition	( ch1 == '\\1' && ch2 == 'f' && ch3 == 'c' && ch4 == 'p' ) || ( ch1 == 'M' && ch2 == 'Z' )	324:16:7344:7449	3849938	0	True				
ANR	3850241	OrExpression	( ch1 == '\\1' && ch2 == 'f' && ch3 == 'c' && ch4 == 'p' ) || ( ch1 == 'M' && ch2 == 'Z' )		3849938	0		||			
ANR	3850242	AndExpression	ch1 == '\\1' && ch2 == 'f' && ch3 == 'c' && ch4 == 'p'		3849938	0		&&			
ANR	3850243	EqualityExpression	ch1 == '\\1'		3849938	0		==			
ANR	3850244	Identifier	ch1		3849938	0					
ANR	3850245	PrimaryExpression	'\\1'		3849938	1					
ANR	3850246	AndExpression	ch2 == 'f' && ch3 == 'c' && ch4 == 'p'		3849938	1		&&			
ANR	3850247	EqualityExpression	ch2 == 'f'		3849938	0		==			
ANR	3850248	Identifier	ch2		3849938	0					
ANR	3850249	PrimaryExpression	'f'		3849938	1					
ANR	3850250	AndExpression	ch3 == 'c' && ch4 == 'p'		3849938	1		&&			
ANR	3850251	EqualityExpression	ch3 == 'c'		3849938	0		==			
ANR	3850252	Identifier	ch3		3849938	0					
ANR	3850253	PrimaryExpression	'c'		3849938	1					
ANR	3850254	EqualityExpression	ch4 == 'p'		3849938	1		==			
ANR	3850255	Identifier	ch4		3849938	0					
ANR	3850256	PrimaryExpression	'p'		3849938	1					
ANR	3850257	AndExpression	ch1 == 'M' && ch2 == 'Z'		3849938	1		&&			
ANR	3850258	EqualityExpression	ch1 == 'M'		3849938	0		==			
ANR	3850259	Identifier	ch1		3849938	0					
ANR	3850260	PrimaryExpression	'M'		3849938	1					
ANR	3850261	EqualityExpression	ch2 == 'Z'		3849938	1		==			
ANR	3850262	Identifier	ch2		3849938	0					
ANR	3850263	PrimaryExpression	'Z'		3849938	1					
ANR	3850264	CompoundStatement		58:6:1638:1638	3849938	1					
ANR	3850265	ExpressionStatement	item -> isbinary = true	328:8:7523:7544	3849938	0	True				
ANR	3850266	AssignmentExpression	item -> isbinary = true		3849938	0		=			
ANR	3850267	PtrMemberAccess	item -> isbinary		3849938	0					
ANR	3850268	Identifier	item		3849938	0					
ANR	3850269	Identifier	isbinary		3849938	1					
ANR	3850270	Identifier	true		3849938	1					
ANR	3850271	ElseStatement	else		3849938	0					
ANR	3850272	CompoundStatement		63:6:1722:1722	3849938	0					
ANR	3850273	ExpressionStatement	"fprintf ( stderr , ""Can't recognize file type of `%s', assuming binary\\n"" , item -> name )"	332:8:7581:7700	3849938	0	True				
ANR	3850274	CallExpression	"fprintf ( stderr , ""Can't recognize file type of `%s', assuming binary\\n"" , item -> name )"		3849938	0					
ANR	3850275	Callee	fprintf		3849938	0					
ANR	3850276	Identifier	fprintf		3849938	0					
ANR	3850277	ArgumentList	stderr		3849938	1					
ANR	3850278	Argument	stderr		3849938	0					
ANR	3850279	Identifier	stderr		3849938	0					
ANR	3850280	Argument	"""Can't recognize file type of `%s', assuming binary\\n"""		3849938	1					
ANR	3850281	PrimaryExpression	"""Can't recognize file type of `%s', assuming binary\\n"""		3849938	0					
ANR	3850282	Argument	item -> name		3849938	2					
ANR	3850283	PtrMemberAccess	item -> name		3849938	0					
ANR	3850284	Identifier	item		3849938	0					
ANR	3850285	Identifier	name		3849938	1					
ANR	3850286	ExpressionStatement	item -> isbinary = true	335:8:7710:7731	3849938	1	True				
ANR	3850287	AssignmentExpression	item -> isbinary = true		3849938	0		=			
ANR	3850288	PtrMemberAccess	item -> isbinary		3849938	0					
ANR	3850289	Identifier	item		3849938	0					
ANR	3850290	Identifier	isbinary		3849938	1					
ANR	3850291	Identifier	true		3849938	1					
ANR	3850292	ElseStatement	else		3849938	0					
ANR	3850293	CompoundStatement		71:4:1911:1911	3849938	0					
ANR	3850294	ExpressionStatement	"fprintf ( stderr , ""Can't open `%s' for typing the file.\\n"" , item -> name )"	340:6:7768:7854	3849938	0	True				
ANR	3850295	CallExpression	"fprintf ( stderr , ""Can't open `%s' for typing the file.\\n"" , item -> name )"		3849938	0					
ANR	3850296	Callee	fprintf		3849938	0					
ANR	3850297	Identifier	fprintf		3849938	0					
ANR	3850298	ArgumentList	stderr		3849938	1					
ANR	3850299	Argument	stderr		3849938	0					
ANR	3850300	Identifier	stderr		3849938	0					
ANR	3850301	Argument	"""Can't open `%s' for typing the file.\\n"""		3849938	1					
ANR	3850302	PrimaryExpression	"""Can't open `%s' for typing the file.\\n"""		3849938	0					
ANR	3850303	Argument	item -> name		3849938	2					
ANR	3850304	PtrMemberAccess	item -> name		3849938	0					
ANR	3850305	Identifier	item		3849938	0					
ANR	3850306	Identifier	name		3849938	1					
ANR	3850307	ExpressionStatement	item -> isbinary = true	342:6:7862:7883	3849938	1	True				
ANR	3850308	AssignmentExpression	item -> isbinary = true		3849938	0		=			
ANR	3850309	PtrMemberAccess	item -> isbinary		3849938	0					
ANR	3850310	Identifier	item		3849938	0					
ANR	3850311	Identifier	isbinary		3849938	1					
ANR	3850312	Identifier	true		3849938	1					
ANR	3850313	ReturnType	static void		3849938	1					
ANR	3850314	Identifier	figurefiletype		3849938	2					
ANR	3850315	ParameterList	struct fontlist * item		3849938	3					
ANR	3850316	Parameter	struct fontlist * item	268:18:5821:5842	3849938	0	True				
ANR	3850317	ParameterType	struct fontlist *		3849938	0					
ANR	3850318	Identifier	item		3849938	1					
ANR	3850319	CFGEntryNode	ENTRY		3849938		True				
ANR	3850320	CFGExitNode	EXIT		3849938		True				
ANR	3850321	Symbol	fopen		3849938						
ANR	3850322	Symbol	item		3849938						
ANR	3850323	Symbol	foo		3849938						
ANR	3850324	Symbol	item -> isascii		3849938						
ANR	3850325	Symbol	false		3849938						
ANR	3850326	Symbol	item -> isbinary		3849938						
ANR	3850327	Symbol	ch2		3849938						
ANR	3850328	Symbol	stderr		3849938						
ANR	3850329	Symbol	ch1		3849938						
ANR	3850330	Symbol	ch4		3849938						
ANR	3850331	Symbol	ch3		3849938						
ANR	3850332	Symbol	strstr		3849938						
ANR	3850333	Symbol	* item		3849938						
ANR	3850334	Symbol	item -> ishex		3849938						
ANR	3850335	Symbol	item -> name		3849938						
ANR	3850336	Symbol	true		3849938						
ANR	3850337	Symbol	getc		3849938						
ANR	3850338	Function	FindFonts	347:2:7899:9426							
ANR	3850339	FunctionDef	"FindFonts (char * * fontdirs , char * * extensions)"		3850338	0					
ANR	3850340	CompoundStatement		350:2:7978:9426	3850338	0					
ANR	3850341	IdentifierDeclStatement	int i ;	351:4:7984:7999	3850338	0	True				
ANR	3850342	IdentifierDecl	i		3850338	0					
ANR	3850343	IdentifierDeclType	int		3850338	0					
ANR	3850344	Identifier	i		3850338	1					
ANR	3850345	IdentifierDeclStatement	unsigned int max ;	352:4:8005:8022	3850338	1	True				
ANR	3850346	IdentifierDecl	max		3850338	0					
ANR	3850347	IdentifierDeclType	unsigned int		3850338	0					
ANR	3850348	Identifier	max		3850338	1					
ANR	3850349	IdentifierDeclStatement	char buffer [ 1025 ] ;	353:4:8028:8054	3850338	2	True				
ANR	3850350	IdentifierDecl	buffer [ 1025 ]		3850338	0					
ANR	3850351	IdentifierDeclType	char [ 1025 ]		3850338	0					
ANR	3850352	Identifier	buffer		3850338	1					
ANR	3850353	PrimaryExpression	1025		3850338	2					
ANR	3850354	IdentifierDeclStatement	struct stat statb ;	354:4:8060:8079	3850338	3	True				
ANR	3850355	IdentifierDecl	statb		3850338	0					
ANR	3850356	IdentifierDeclType	struct stat		3850338	0					
ANR	3850357	Identifier	statb		3850338	1					
ANR	3850358	ExpressionStatement	max = 0	357:4:8087:8095	3850338	4	True				
ANR	3850359	AssignmentExpression	max = 0		3850338	0		=			
ANR	3850360	Identifier	max		3850338	0					
ANR	3850361	PrimaryExpression	0		3850338	1					
ANR	3850362	ExpressionStatement	fcnt = 0	358:4:8101:8109	3850338	5	True				
ANR	3850363	AssignmentExpression	fcnt = 0		3850338	0		=			
ANR	3850364	Identifier	fcnt		3850338	0					
ANR	3850365	PrimaryExpression	0		3850338	1					
ANR	3850366	ForStatement	for ( i = 0 ; fontdirs [ i ] != NULL ; i ++ )		3850338	6					
ANR	3850367	ForInit	i = 0 ;	360:10:8122:8127	3850338	0	True				
ANR	3850368	AssignmentExpression	i = 0		3850338	0		=			
ANR	3850369	Identifier	i		3850338	0					
ANR	3850370	PrimaryExpression	0		3850338	1					
ANR	3850371	Condition	fontdirs [ i ] != NULL	360:17:8129:8147	3850338	1	True				
ANR	3850372	EqualityExpression	fontdirs [ i ] != NULL		3850338	0		!=			
ANR	3850373	ArrayIndexing	fontdirs [ i ]		3850338	0					
ANR	3850374	Identifier	fontdirs		3850338	0					
ANR	3850375	Identifier	i		3850338	1					
ANR	3850376	Identifier	NULL		3850338	1					
ANR	3850377	PostIncDecOperationExpression	i ++	360:38:8150:8152	3850338	2	True				
ANR	3850378	Identifier	i		3850338	0					
ANR	3850379	IncDec	++		3850338	1					
ANR	3850380	CompoundStatement		14:6:221:240	3850338	3					
ANR	3850381	IdentifierDeclStatement	DIR * examples ;	362:6:8168:8192	3850338	0	True				
ANR	3850382	IdentifierDecl	* examples		3850338	0					
ANR	3850383	IdentifierDeclType	DIR *		3850338	0					
ANR	3850384	Identifier	examples		3850338	1					
ANR	3850385	IdentifierDeclStatement	struct dirent * ent ;	363:6:8200:8219	3850338	1	True				
ANR	3850386	IdentifierDecl	* ent		3850338	0					
ANR	3850387	IdentifierDeclType	struct dirent *		3850338	0					
ANR	3850388	Identifier	ent		3850338	1					
ANR	3850389	ExpressionStatement	examples = opendir ( fontdirs [ i ] )	366:6:8229:8262	3850338	2	True				
ANR	3850390	AssignmentExpression	examples = opendir ( fontdirs [ i ] )		3850338	0		=			
ANR	3850391	Identifier	examples		3850338	0					
ANR	3850392	CallExpression	opendir ( fontdirs [ i ] )		3850338	1					
ANR	3850393	Callee	opendir		3850338	0					
ANR	3850394	Identifier	opendir		3850338	0					
ANR	3850395	ArgumentList	fontdirs [ i ]		3850338	1					
ANR	3850396	Argument	fontdirs [ i ]		3850338	0					
ANR	3850397	ArrayIndexing	fontdirs [ i ]		3850338	0					
ANR	3850398	Identifier	fontdirs		3850338	0					
ANR	3850399	Identifier	i		3850338	1					
ANR	3850400	IfStatement	if ( ! examples )		3850338	3					
ANR	3850401	Condition	! examples	367:11:8275:8283	3850338	0	True				
ANR	3850402	UnaryOperationExpression	! examples		3850338	0					
ANR	3850403	UnaryOperator	!		3850338	0					
ANR	3850404	Identifier	examples		3850338	1					
ANR	3850405	CompoundStatement		19:6:314:314	3850338	1					
ANR	3850406	ExpressionStatement	"fprintf ( stderr , ""Can't open example font directory `%s'\\n"" , fontdirs [ i ] )"	369:8:8303:8411	3850338	0	True				
ANR	3850407	CallExpression	"fprintf ( stderr , ""Can't open example font directory `%s'\\n"" , fontdirs [ i ] )"		3850338	0					
ANR	3850408	Callee	fprintf		3850338	0					
ANR	3850409	Identifier	fprintf		3850338	0					
ANR	3850410	ArgumentList	stderr		3850338	1					
ANR	3850411	Argument	stderr		3850338	0					
ANR	3850412	Identifier	stderr		3850338	0					
ANR	3850413	Argument	"""Can't open example font directory `%s'\\n"""		3850338	1					
ANR	3850414	PrimaryExpression	"""Can't open example font directory `%s'\\n"""		3850338	0					
ANR	3850415	Argument	fontdirs [ i ]		3850338	2					
ANR	3850416	ArrayIndexing	fontdirs [ i ]		3850338	0					
ANR	3850417	Identifier	fontdirs		3850338	0					
ANR	3850418	Identifier	i		3850338	1					
ANR	3850419	ExpressionStatement	exit ( 1 )	372:8:8421:8430	3850338	1	True				
ANR	3850420	CallExpression	exit ( 1 )		3850338	0					
ANR	3850421	Callee	exit		3850338	0					
ANR	3850422	Identifier	exit		3850338	0					
ANR	3850423	ArgumentList	1		3850338	1					
ANR	3850424	Argument	1		3850338	0					
ANR	3850425	PrimaryExpression	1		3850338	0					
ANR	3850426	WhileStatement	while ( ( ent = readdir ( examples ) ) != NULL )		3850338	4					
ANR	3850427	Condition	( ent = readdir ( examples ) ) != NULL	375:14:8455:8491	3850338	0	True				
ANR	3850428	EqualityExpression	( ent = readdir ( examples ) ) != NULL		3850338	0		!=			
ANR	3850429	AssignmentExpression	ent = readdir ( examples )		3850338	0		=			
ANR	3850430	Identifier	ent		3850338	0					
ANR	3850431	CallExpression	readdir ( examples )		3850338	1					
ANR	3850432	Callee	readdir		3850338	0					
ANR	3850433	Identifier	readdir		3850338	0					
ANR	3850434	ArgumentList	examples		3850338	1					
ANR	3850435	Argument	examples		3850338	0					
ANR	3850436	Identifier	examples		3850338	0					
ANR	3850437	Identifier	NULL		3850338	1					
ANR	3850438	CompoundStatement		27:6:522:522	3850338	1					
ANR	3850439	ExpressionStatement	"snprintf ( buffer , sizeof ( buffer ) , ""%s/%s"" , fontdirs [ i ] , ent -> d_name )"	377:8:8511:8601	3850338	0	True				
ANR	3850440	CallExpression	"snprintf ( buffer , sizeof ( buffer ) , ""%s/%s"" , fontdirs [ i ] , ent -> d_name )"		3850338	0					
ANR	3850441	Callee	snprintf		3850338	0					
ANR	3850442	Identifier	snprintf		3850338	0					
ANR	3850443	ArgumentList	buffer		3850338	1					
ANR	3850444	Argument	buffer		3850338	0					
ANR	3850445	Identifier	buffer		3850338	0					
ANR	3850446	Argument	sizeof ( buffer )		3850338	1					
ANR	3850447	SizeofExpression	sizeof ( buffer )		3850338	0					
ANR	3850448	Sizeof	sizeof		3850338	0					
ANR	3850449	SizeofOperand	buffer		3850338	1					
ANR	3850450	Argument	"""%s/%s"""		3850338	2					
ANR	3850451	PrimaryExpression	"""%s/%s"""		3850338	0					
ANR	3850452	Argument	fontdirs [ i ]		3850338	3					
ANR	3850453	ArrayIndexing	fontdirs [ i ]		3850338	0					
ANR	3850454	Identifier	fontdirs		3850338	0					
ANR	3850455	Identifier	i		3850338	1					
ANR	3850456	Argument	ent -> d_name		3850338	4					
ANR	3850457	PtrMemberAccess	ent -> d_name		3850338	0					
ANR	3850458	Identifier	ent		3850338	0					
ANR	3850459	Identifier	d_name		3850338	1					
ANR	3850460	IfStatement	"if ( stat ( buffer , & statb ) == - 1 || S_ISDIR ( statb . st_mode ) )"		3850338	1					
ANR	3850461	Condition	"stat ( buffer , & statb ) == - 1 || S_ISDIR ( statb . st_mode )"	379:13:8616:8671	3850338	0	True				
ANR	3850462	OrExpression	"stat ( buffer , & statb ) == - 1 || S_ISDIR ( statb . st_mode )"		3850338	0		||			
ANR	3850463	EqualityExpression	"stat ( buffer , & statb ) == - 1"		3850338	0		==			
ANR	3850464	CallExpression	"stat ( buffer , & statb )"		3850338	0					
ANR	3850465	Callee	stat		3850338	0					
ANR	3850466	Identifier	stat		3850338	0					
ANR	3850467	ArgumentList	buffer		3850338	1					
ANR	3850468	Argument	buffer		3850338	0					
ANR	3850469	Identifier	buffer		3850338	0					
ANR	3850470	Argument	& statb		3850338	1					
ANR	3850471	UnaryOperationExpression	& statb		3850338	0					
ANR	3850472	UnaryOperator	&		3850338	0					
ANR	3850473	Identifier	statb		3850338	1					
ANR	3850474	UnaryOperationExpression	- 1		3850338	1					
ANR	3850475	UnaryOperator	-		3850338	0					
ANR	3850476	PrimaryExpression	1		3850338	1					
ANR	3850477	CallExpression	S_ISDIR ( statb . st_mode )		3850338	1					
ANR	3850478	Callee	S_ISDIR		3850338	0					
ANR	3850479	Identifier	S_ISDIR		3850338	0					
ANR	3850480	ArgumentList	statb . st_mode		3850338	1					
ANR	3850481	Argument	statb . st_mode		3850338	0					
ANR	3850482	MemberAccess	statb . st_mode		3850338	0					
ANR	3850483	Identifier	statb		3850338	0					
ANR	3850484	Identifier	st_mode		3850338	1					
ANR	3850485	ContinueStatement	continue ;	380:10:8685:8693	3850338	1	True				
ANR	3850486	IfStatement	"if ( ! extensions || extmatch ( buffer , extensions ) )"		3850338	2					
ANR	3850487	Condition	"! extensions || extmatch ( buffer , extensions )"	381:13:8708:8752	3850338	0	True				
ANR	3850488	OrExpression	"! extensions || extmatch ( buffer , extensions )"		3850338	0		||			
ANR	3850489	UnaryOperationExpression	! extensions		3850338	0					
ANR	3850490	UnaryOperator	!		3850338	0					
ANR	3850491	Identifier	extensions		3850338	1					
ANR	3850492	CallExpression	"extmatch ( buffer , extensions )"		3850338	1					
ANR	3850493	Callee	extmatch		3850338	0					
ANR	3850494	Identifier	extmatch		3850338	0					
ANR	3850495	ArgumentList	buffer		3850338	1					
ANR	3850496	Argument	buffer		3850338	0					
ANR	3850497	Identifier	buffer		3850338	0					
ANR	3850498	Argument	extensions		3850338	1					
ANR	3850499	Identifier	extensions		3850338	0					
ANR	3850500	CompoundStatement		33:8:785:785	3850338	1					
ANR	3850501	IfStatement	if ( fcnt >= max )		3850338	0					
ANR	3850502	Condition	fcnt >= max	383:15:8781:8791	3850338	0	True				
ANR	3850503	RelationalExpression	fcnt >= max		3850338	0		>=			
ANR	3850504	Identifier	fcnt		3850338	0					
ANR	3850505	Identifier	max		3850338	1					
ANR	3850506	CompoundStatement		35:10:826:826	3850338	1					
ANR	3850507	ExpressionStatement	max += 100	385:12:8819:8829	3850338	0	True				
ANR	3850508	AssignmentExpression	max += 100		3850338	0		+=			
ANR	3850509	Identifier	max		3850338	0					
ANR	3850510	PrimaryExpression	100		3850338	1					
ANR	3850511	ExpressionStatement	"fontlist = realloc ( fontlist , max * sizeof ( struct fontlist ) )"	386:12:8843:8907	3850338	1	True				
ANR	3850512	AssignmentExpression	"fontlist = realloc ( fontlist , max * sizeof ( struct fontlist ) )"		3850338	0		=			
ANR	3850513	Identifier	fontlist		3850338	0					
ANR	3850514	CallExpression	"realloc ( fontlist , max * sizeof ( struct fontlist ) )"		3850338	1					
ANR	3850515	Callee	realloc		3850338	0					
ANR	3850516	Identifier	realloc		3850338	0					
ANR	3850517	ArgumentList	fontlist		3850338	1					
ANR	3850518	Argument	fontlist		3850338	0					
ANR	3850519	Identifier	fontlist		3850338	0					
ANR	3850520	Argument	max * sizeof ( struct fontlist )		3850338	1					
ANR	3850521	MultiplicativeExpression	max * sizeof ( struct fontlist )		3850338	0		*			
ANR	3850522	Identifier	max		3850338	0					
ANR	3850523	SizeofExpression	sizeof ( struct fontlist )		3850338	1					
ANR	3850524	Sizeof	sizeof		3850338	0					
ANR	3850525	SizeofOperand	struct fontlist		3850338	1					
ANR	3850526	IfStatement	if ( ! fontlist )		3850338	2					
ANR	3850527	Condition	! fontlist	387:17:8926:8934	3850338	0	True				
ANR	3850528	UnaryOperationExpression	! fontlist		3850338	0					
ANR	3850529	UnaryOperator	!		3850338	0					
ANR	3850530	Identifier	fontlist		3850338	1					
ANR	3850531	CompoundStatement		39:12:971:971	3850338	1					
ANR	3850532	ExpressionStatement	"fprintf ( stderr , ""Can't allocate memory\\n"" )"	389:14:8966:9010	3850338	0	True				
ANR	3850533	CallExpression	"fprintf ( stderr , ""Can't allocate memory\\n"" )"		3850338	0					
ANR	3850534	Callee	fprintf		3850338	0					
ANR	3850535	Identifier	fprintf		3850338	0					
ANR	3850536	ArgumentList	stderr		3850338	1					
ANR	3850537	Argument	stderr		3850338	0					
ANR	3850538	Identifier	stderr		3850338	0					
ANR	3850539	Argument	"""Can't allocate memory\\n"""		3850338	1					
ANR	3850540	PrimaryExpression	"""Can't allocate memory\\n"""		3850338	0					
ANR	3850541	ExpressionStatement	exit ( 1 )	390:14:9026:9035	3850338	1	True				
ANR	3850542	CallExpression	exit ( 1 )		3850338	0					
ANR	3850543	Callee	exit		3850338	0					
ANR	3850544	Identifier	exit		3850338	0					
ANR	3850545	ArgumentList	1		3850338	1					
ANR	3850546	Argument	1		3850338	0					
ANR	3850547	PrimaryExpression	1		3850338	0					
ANR	3850548	ExpressionStatement	fontlist [ fcnt ] . name = strdup ( buffer )	394:10:9074:9112	3850338	1	True				
ANR	3850549	AssignmentExpression	fontlist [ fcnt ] . name = strdup ( buffer )		3850338	0		=			
ANR	3850550	MemberAccess	fontlist [ fcnt ] . name		3850338	0					
ANR	3850551	ArrayIndexing	fontlist [ fcnt ]		3850338	0					
ANR	3850552	Identifier	fontlist		3850338	0					
ANR	3850553	Identifier	fcnt		3850338	1					
ANR	3850554	Identifier	name		3850338	1					
ANR	3850555	CallExpression	strdup ( buffer )		3850338	1					
ANR	3850556	Callee	strdup		3850338	0					
ANR	3850557	Identifier	strdup		3850338	0					
ANR	3850558	ArgumentList	buffer		3850338	1					
ANR	3850559	Argument	buffer		3850338	0					
ANR	3850560	Identifier	buffer		3850338	0					
ANR	3850561	ExpressionStatement	fontlist [ fcnt ] . len = statb . st_size	395:10:9124:9159	3850338	2	True				
ANR	3850562	AssignmentExpression	fontlist [ fcnt ] . len = statb . st_size		3850338	0		=			
ANR	3850563	MemberAccess	fontlist [ fcnt ] . len		3850338	0					
ANR	3850564	ArrayIndexing	fontlist [ fcnt ]		3850338	0					
ANR	3850565	Identifier	fontlist		3850338	0					
ANR	3850566	Identifier	fcnt		3850338	1					
ANR	3850567	Identifier	len		3850338	1					
ANR	3850568	MemberAccess	statb . st_size		3850338	1					
ANR	3850569	Identifier	statb		3850338	0					
ANR	3850570	Identifier	st_size		3850338	1					
ANR	3850571	ExpressionStatement	figurefiletype ( & fontlist [ fcnt ] )	397:10:9172:9205	3850338	3	True				
ANR	3850572	CallExpression	figurefiletype ( & fontlist [ fcnt ] )		3850338	0					
ANR	3850573	Callee	figurefiletype		3850338	0					
ANR	3850574	Identifier	figurefiletype		3850338	0					
ANR	3850575	ArgumentList	& fontlist [ fcnt ]		3850338	1					
ANR	3850576	Argument	& fontlist [ fcnt ]		3850338	0					
ANR	3850577	UnaryOperationExpression	& fontlist [ fcnt ]		3850338	0					
ANR	3850578	UnaryOperator	&		3850338	0					
ANR	3850579	ArrayIndexing	fontlist [ fcnt ]		3850338	1					
ANR	3850580	Identifier	fontlist		3850338	0					
ANR	3850581	Identifier	fcnt		3850338	1					
ANR	3850582	ExpressionStatement	fcnt ++	398:10:9217:9223	3850338	4	True				
ANR	3850583	PostIncDecOperationExpression	fcnt ++		3850338	0					
ANR	3850584	Identifier	fcnt		3850338	0					
ANR	3850585	IncDec	++		3850338	1					
ANR	3850586	ExpressionStatement	closedir ( examples )	402:6:9250:9270	3850338	5	True				
ANR	3850587	CallExpression	closedir ( examples )		3850338	0					
ANR	3850588	Callee	closedir		3850338	0					
ANR	3850589	Identifier	closedir		3850338	0					
ANR	3850590	ArgumentList	examples		3850338	1					
ANR	3850591	Argument	examples		3850338	0					
ANR	3850592	Identifier	examples		3850338	0					
ANR	3850593	IfStatement	if ( fcnt == 0 )		3850338	7					
ANR	3850594	Condition	fcnt == 0	405:9:9288:9296	3850338	0	True				
ANR	3850595	EqualityExpression	fcnt == 0		3850338	0		==			
ANR	3850596	Identifier	fcnt		3850338	0					
ANR	3850597	PrimaryExpression	0		3850338	1					
ANR	3850598	CompoundStatement		57:4:1325:1325	3850338	1					
ANR	3850599	ExpressionStatement	"fprintf ( stderr , ""Can't find matching font files.\\n"" )"	407:6:9312:9366	3850338	0	True				
ANR	3850600	CallExpression	"fprintf ( stderr , ""Can't find matching font files.\\n"" )"		3850338	0					
ANR	3850601	Callee	fprintf		3850338	0					
ANR	3850602	Identifier	fprintf		3850338	0					
ANR	3850603	ArgumentList	stderr		3850338	1					
ANR	3850604	Argument	stderr		3850338	0					
ANR	3850605	Identifier	stderr		3850338	0					
ANR	3850606	Argument	"""Can't find matching font files.\\n"""		3850338	1					
ANR	3850607	PrimaryExpression	"""Can't find matching font files.\\n"""		3850338	0					
ANR	3850608	ExpressionStatement	exit ( 1 )	408:6:9374:9383	3850338	1	True				
ANR	3850609	CallExpression	exit ( 1 )		3850338	0					
ANR	3850610	Callee	exit		3850338	0					
ANR	3850611	Identifier	exit		3850338	0					
ANR	3850612	ArgumentList	1		3850338	1					
ANR	3850613	Argument	1		3850338	0					
ANR	3850614	PrimaryExpression	1		3850338	0					
ANR	3850615	ExpressionStatement	fontlist [ fcnt ] . name = NULL	411:4:9396:9422	3850338	8	True				
ANR	3850616	AssignmentExpression	fontlist [ fcnt ] . name = NULL		3850338	0		=			
ANR	3850617	MemberAccess	fontlist [ fcnt ] . name		3850338	0					
ANR	3850618	ArrayIndexing	fontlist [ fcnt ]		3850338	0					
ANR	3850619	Identifier	fontlist		3850338	0					
ANR	3850620	Identifier	fcnt		3850338	1					
ANR	3850621	Identifier	name		3850338	1					
ANR	3850622	Identifier	NULL		3850338	1					
ANR	3850623	ReturnType	static void		3850338	1					
ANR	3850624	Identifier	FindFonts		3850338	2					
ANR	3850625	ParameterList	"char * * fontdirs , char * * extensions"		3850338	3					
ANR	3850626	Parameter	char * * fontdirs	348:13:7924:7939	3850338	0	True				
ANR	3850627	ParameterType	char * *		3850338	0					
ANR	3850628	Identifier	fontdirs		3850338	1					
ANR	3850629	Parameter	char * * extensions	349:13:7955:7972	3850338	1	True				
ANR	3850630	ParameterType	char * *		3850338	0					
ANR	3850631	Identifier	extensions		3850338	1					
ANR	3850632	CFGEntryNode	ENTRY		3850338		True				
ANR	3850633	CFGExitNode	EXIT		3850338		True				
ANR	3850634	Symbol	statb		3850338						
ANR	3850635	Symbol	& statb		3850338						
ANR	3850636	Symbol	fontdirs		3850338						
ANR	3850637	Symbol	realloc		3850338						
ANR	3850638	Symbol	statb . st_mode		3850338						
ANR	3850639	Symbol	readdir		3850338						
ANR	3850640	Symbol	* fontlist		3850338						
ANR	3850641	Symbol	buffer		3850338						
ANR	3850642	Symbol	ent -> d_name		3850338						
ANR	3850643	Symbol	stat		3850338						
ANR	3850644	Symbol	NULL		3850338						
ANR	3850645	Symbol	max		3850338						
ANR	3850646	Symbol	extmatch		3850338						
ANR	3850647	Symbol	* fontdirs		3850338						
ANR	3850648	Symbol	* fcnt		3850338						
ANR	3850649	Symbol	i		3850338						
ANR	3850650	Symbol	ent		3850338						
ANR	3850651	Symbol	* ent		3850338						
ANR	3850652	Symbol	fontlist [ fcnt ] . name		3850338						
ANR	3850653	Symbol	fcnt		3850338						
ANR	3850654	Symbol	stderr		3850338						
ANR	3850655	Symbol	fontlist [ fcnt ] . len		3850338						
ANR	3850656	Symbol	extensions		3850338						
ANR	3850657	Symbol	* i		3850338						
ANR	3850658	Symbol	examples		3850338						
ANR	3850659	Symbol	statb . st_size		3850338						
ANR	3850660	Symbol	opendir		3850338						
ANR	3850661	Symbol	fontlist		3850338						
ANR	3850662	Symbol	S_ISDIR		3850338						
ANR	3850663	Symbol	strdup		3850338						
ANR	3850664	Function	getErrorCnt	415:2:9432:9639							
ANR	3850665	FunctionDef	getErrorCnt (struct fontlist * item)		3850664	0					
ANR	3850666	CompoundStatement		417:2:9494:9639	3850664	0					
ANR	3850667	IfStatement	if ( error_count == 0 && error_fraction == 0.0 )		3850664	0					
ANR	3850668	Condition	error_count == 0 && error_fraction == 0.0	418:9:9505:9545	3850664	0	True				
ANR	3850669	AndExpression	error_count == 0 && error_fraction == 0.0		3850664	0		&&			
ANR	3850670	EqualityExpression	error_count == 0		3850664	0		==			
ANR	3850671	Identifier	error_count		3850664	0					
ANR	3850672	PrimaryExpression	0		3850664	1					
ANR	3850673	EqualityExpression	error_fraction == 0.0		3850664	1		==			
ANR	3850674	Identifier	error_fraction		3850664	0					
ANR	3850675	PrimaryExpression	0.0		3850664	1					
ANR	3850676	ReturnStatement	return 0 ;	419:6:9555:9563	3850664	1	True				
ANR	3850677	PrimaryExpression	0		3850664	0					
ANR	3850678	ReturnStatement	return error_count + ( unsigned int ) ( error_fraction * item -> len ) ;	421:4:9570:9635	3850664	1	True				
ANR	3850679	AdditiveExpression	error_count + ( unsigned int ) ( error_fraction * item -> len )		3850664	0		+			
ANR	3850680	Identifier	error_count		3850664	0					
ANR	3850681	CastExpression	( unsigned int ) ( error_fraction * item -> len )		3850664	1					
ANR	3850682	CastTarget	unsigned int		3850664	0					
ANR	3850683	MultiplicativeExpression	error_fraction * item -> len		3850664	1		*			
ANR	3850684	Identifier	error_fraction		3850664	0					
ANR	3850685	PtrMemberAccess	item -> len		3850664	1					
ANR	3850686	Identifier	item		3850664	0					
ANR	3850687	Identifier	len		3850664	1					
ANR	3850688	ReturnType	static unsigned int		3850664	1					
ANR	3850689	Identifier	getErrorCnt		3850664	2					
ANR	3850690	ParameterList	struct fontlist * item		3850664	3					
ANR	3850691	Parameter	struct fontlist * item	416:15:9467:9488	3850664	0	True				
ANR	3850692	ParameterType	struct fontlist *		3850664	0					
ANR	3850693	Identifier	item		3850664	1					
ANR	3850694	CFGEntryNode	ENTRY		3850664		True				
ANR	3850695	CFGExitNode	EXIT		3850664		True				
ANR	3850696	Symbol	item		3850664						
ANR	3850697	Symbol	* item		3850664						
ANR	3850698	Symbol	error_count		3850664						
ANR	3850699	Symbol	error_fraction		3850664						
ANR	3850700	Symbol	item -> len		3850664						
ANR	3850701	Function	getRandom	425:2:9645:9859							
ANR	3850702	FunctionDef	"getRandom (int low , int high)"		3850701	0					
ANR	3850703	CompoundStatement		428:2:9706:9859	3850701	0					
ANR	3850704	IfStatement	if ( low - high < 0x10000L )		3850701	0					
ANR	3850705	Condition	low - high < 0x10000L	429:9:9717:9737	3850701	0	True				
ANR	3850706	RelationalExpression	low - high < 0x10000L		3850701	0		<			
ANR	3850707	AdditiveExpression	low - high		3850701	0		-			
ANR	3850708	Identifier	low		3850701	0					
ANR	3850709	Identifier	high		3850701	1					
ANR	3850710	PrimaryExpression	0x10000L		3850701	1					
ANR	3850711	ReturnStatement	return low + ( ( random ( ) >> 8 ) % ( high + 1 - low ) ) ;	430:6:9747:9802	3850701	1	True				
ANR	3850712	AdditiveExpression	low + ( ( random ( ) >> 8 ) % ( high + 1 - low ) )		3850701	0		+			
ANR	3850713	Identifier	low		3850701	0					
ANR	3850714	MultiplicativeExpression	( random ( ) >> 8 ) % ( high + 1 - low )		3850701	1		%			
ANR	3850715	ShiftExpression	random ( ) >> 8		3850701	0		>>			
ANR	3850716	CallExpression	random ( )		3850701	0					
ANR	3850717	Callee	random		3850701	0					
ANR	3850718	Identifier	random		3850701	0					
ANR	3850719	ArgumentList			3850701	1					
ANR	3850720	PrimaryExpression	8		3850701	1					
ANR	3850721	AdditiveExpression	high + 1 - low		3850701	1		+			
ANR	3850722	Identifier	high		3850701	0					
ANR	3850723	AdditiveExpression	1 - low		3850701	1		-			
ANR	3850724	PrimaryExpression	1		3850701	0					
ANR	3850725	Identifier	low		3850701	1					
ANR	3850726	ReturnStatement	return low + ( random ( ) % ( high + 1 - low ) ) ;	432:4:9809:9855	3850701	1	True				
ANR	3850727	AdditiveExpression	low + ( random ( ) % ( high + 1 - low ) )		3850701	0		+			
ANR	3850728	Identifier	low		3850701	0					
ANR	3850729	MultiplicativeExpression	random ( ) % ( high + 1 - low )		3850701	1		%			
ANR	3850730	CallExpression	random ( )		3850701	0					
ANR	3850731	Callee	random		3850701	0					
ANR	3850732	Identifier	random		3850701	0					
ANR	3850733	ArgumentList			3850701	1					
ANR	3850734	AdditiveExpression	high + 1 - low		3850701	1		+			
ANR	3850735	Identifier	high		3850701	0					
ANR	3850736	AdditiveExpression	1 - low		3850701	1		-			
ANR	3850737	PrimaryExpression	1		3850701	0					
ANR	3850738	Identifier	low		3850701	1					
ANR	3850739	ReturnType	static int		3850701	1					
ANR	3850740	Identifier	getRandom		3850701	2					
ANR	3850741	ParameterList	"int low , int high"		3850701	3					
ANR	3850742	Parameter	int low	426:13:9669:9676	3850701	0	True				
ANR	3850743	ParameterType	int		3850701	0					
ANR	3850744	Identifier	low		3850701	1					
ANR	3850745	Parameter	int high	427:13:9692:9700	3850701	1	True				
ANR	3850746	ParameterType	int		3850701	0					
ANR	3850747	Identifier	high		3850701	1					
ANR	3850748	CFGEntryNode	ENTRY		3850701		True				
ANR	3850749	CFGExitNode	EXIT		3850701		True				
ANR	3850750	Symbol	random		3850701						
ANR	3850751	Symbol	high		3850701						
ANR	3850752	Symbol	low		3850701						
ANR	3850753	Function	copyfont	436:2:9865:11163							
ANR	3850754	FunctionDef	"copyfont (struct fontlist * item , char * newfont)"		3850753	0					
ANR	3850755	CompoundStatement		439:2:9954:11163	3850753	0					
ANR	3850756	Statement	static	440:4:9960:9965	3850753	0	True				
ANR	3850757	IdentifierDeclStatement	char buffer [ 8096 ] ;	440:11:9967:9986	3850753	1	True				
ANR	3850758	IdentifierDecl	buffer [ 8096 ]		3850753	0					
ANR	3850759	IdentifierDeclType	char [ 8096 ]		3850753	0					
ANR	3850760	Identifier	buffer		3850753	1					
ANR	3850761	PrimaryExpression	8096		3850753	2					
ANR	3850762	IdentifierDeclStatement	"FILE * good , * newf ;"	441:4:9992:10018	3850753	2	True				
ANR	3850763	IdentifierDecl	* good		3850753	0					
ANR	3850764	IdentifierDeclType	FILE *		3850753	0					
ANR	3850765	Identifier	good		3850753	1					
ANR	3850766	IdentifierDecl	* newf		3850753	1					
ANR	3850767	IdentifierDeclType	FILE *		3850753	0					
ANR	3850768	Identifier	newf		3850753	1					
ANR	3850769	IdentifierDeclStatement	size_t len ;	442:4:10024:10041	3850753	3	True				
ANR	3850770	IdentifierDecl	len		3850753	0					
ANR	3850771	IdentifierDeclType	size_t		3850753	0					
ANR	3850772	Identifier	len		3850753	1					
ANR	3850773	IdentifierDeclStatement	"unsigned int i , err_cnt ;"	443:4:10047:10071	3850753	4	True				
ANR	3850774	IdentifierDecl	i		3850753	0					
ANR	3850775	IdentifierDeclType	unsigned int		3850753	0					
ANR	3850776	Identifier	i		3850753	1					
ANR	3850777	IdentifierDecl	err_cnt		3850753	1					
ANR	3850778	IdentifierDeclType	unsigned int		3850753	0					
ANR	3850779	Identifier	err_cnt		3850753	1					
ANR	3850780	ExpressionStatement	"good = fopen ( item -> name , ""r"" )"	446:4:10079:10110	3850753	5	True				
ANR	3850781	AssignmentExpression	"good = fopen ( item -> name , ""r"" )"		3850753	0		=			
ANR	3850782	Identifier	good		3850753	0					
ANR	3850783	CallExpression	"fopen ( item -> name , ""r"" )"		3850753	1					
ANR	3850784	Callee	fopen		3850753	0					
ANR	3850785	Identifier	fopen		3850753	0					
ANR	3850786	ArgumentList	item -> name		3850753	1					
ANR	3850787	Argument	item -> name		3850753	0					
ANR	3850788	PtrMemberAccess	item -> name		3850753	0					
ANR	3850789	Identifier	item		3850753	0					
ANR	3850790	Identifier	name		3850753	1					
ANR	3850791	Argument	"""r"""		3850753	1					
ANR	3850792	PrimaryExpression	"""r"""		3850753	0					
ANR	3850793	IfStatement	if ( ! good )		3850753	6					
ANR	3850794	Condition	! good	447:9:10121:10125	3850753	0	True				
ANR	3850795	UnaryOperationExpression	! good		3850753	0					
ANR	3850796	UnaryOperator	!		3850753	0					
ANR	3850797	Identifier	good		3850753	1					
ANR	3850798	CompoundStatement		10:4:178:178	3850753	1					
ANR	3850799	ExpressionStatement	"fprintf ( stderr , ""Can't open `%s'\\n"" , item -> name )"	449:6:10141:10191	3850753	0	True				
ANR	3850800	CallExpression	"fprintf ( stderr , ""Can't open `%s'\\n"" , item -> name )"		3850753	0					
ANR	3850801	Callee	fprintf		3850753	0					
ANR	3850802	Identifier	fprintf		3850753	0					
ANR	3850803	ArgumentList	stderr		3850753	1					
ANR	3850804	Argument	stderr		3850753	0					
ANR	3850805	Identifier	stderr		3850753	0					
ANR	3850806	Argument	"""Can't open `%s'\\n"""		3850753	1					
ANR	3850807	PrimaryExpression	"""Can't open `%s'\\n"""		3850753	0					
ANR	3850808	Argument	item -> name		3850753	2					
ANR	3850809	PtrMemberAccess	item -> name		3850753	0					
ANR	3850810	Identifier	item		3850753	0					
ANR	3850811	Identifier	name		3850753	1					
ANR	3850812	ReturnStatement	return false ;	450:6:10199:10211	3850753	1	True				
ANR	3850813	Identifier	false		3850753	0					
ANR	3850814	ExpressionStatement	"newf = fopen ( newfont , ""w+"" )"	453:4:10224:10253	3850753	7	True				
ANR	3850815	AssignmentExpression	"newf = fopen ( newfont , ""w+"" )"		3850753	0		=			
ANR	3850816	Identifier	newf		3850753	0					
ANR	3850817	CallExpression	"fopen ( newfont , ""w+"" )"		3850753	1					
ANR	3850818	Callee	fopen		3850753	0					
ANR	3850819	Identifier	fopen		3850753	0					
ANR	3850820	ArgumentList	newfont		3850753	1					
ANR	3850821	Argument	newfont		3850753	0					
ANR	3850822	Identifier	newfont		3850753	0					
ANR	3850823	Argument	"""w+"""		3850753	1					
ANR	3850824	PrimaryExpression	"""w+"""		3850753	0					
ANR	3850825	IfStatement	if ( ! newf )		3850753	8					
ANR	3850826	Condition	! newf	454:9:10264:10268	3850753	0	True				
ANR	3850827	UnaryOperationExpression	! newf		3850753	0					
ANR	3850828	UnaryOperator	!		3850753	0					
ANR	3850829	Identifier	newf		3850753	1					
ANR	3850830	CompoundStatement		17:4:321:321	3850753	1					
ANR	3850831	ExpressionStatement	"fprintf ( stderr , ""Can't create temporary output file `%s'\\n"" , newfont )"	456:6:10284:10370	3850753	0	True				
ANR	3850832	CallExpression	"fprintf ( stderr , ""Can't create temporary output file `%s'\\n"" , newfont )"		3850753	0					
ANR	3850833	Callee	fprintf		3850753	0					
ANR	3850834	Identifier	fprintf		3850753	0					
ANR	3850835	ArgumentList	stderr		3850753	1					
ANR	3850836	Argument	stderr		3850753	0					
ANR	3850837	Identifier	stderr		3850753	0					
ANR	3850838	Argument	"""Can't create temporary output file `%s'\\n"""		3850753	1					
ANR	3850839	PrimaryExpression	"""Can't create temporary output file `%s'\\n"""		3850753	0					
ANR	3850840	Argument	newfont		3850753	2					
ANR	3850841	Identifier	newfont		3850753	0					
ANR	3850842	ExpressionStatement	exit ( 1 )	458:6:10378:10387	3850753	1	True				
ANR	3850843	CallExpression	exit ( 1 )		3850753	0					
ANR	3850844	Callee	exit		3850753	0					
ANR	3850845	Identifier	exit		3850753	0					
ANR	3850846	ArgumentList	1		3850753	1					
ANR	3850847	Argument	1		3850753	0					
ANR	3850848	PrimaryExpression	1		3850753	0					
ANR	3850849	WhileStatement	"while ( ( len = fread ( buffer , 1 , sizeof ( buffer ) , good ) ) > 0 )"		3850753	9					
ANR	3850850	Condition	"( len = fread ( buffer , 1 , sizeof ( buffer ) , good ) ) > 0"	461:12:10408:10464	3850753	0	True				
ANR	3850851	RelationalExpression	"( len = fread ( buffer , 1 , sizeof ( buffer ) , good ) ) > 0"		3850753	0		>			
ANR	3850852	AssignmentExpression	"len = fread ( buffer , 1 , sizeof ( buffer ) , good )"		3850753	0		=			
ANR	3850853	Identifier	len		3850753	0					
ANR	3850854	CallExpression	"fread ( buffer , 1 , sizeof ( buffer ) , good )"		3850753	1					
ANR	3850855	Callee	fread		3850753	0					
ANR	3850856	Identifier	fread		3850753	0					
ANR	3850857	ArgumentList	buffer		3850753	1					
ANR	3850858	Argument	buffer		3850753	0					
ANR	3850859	Identifier	buffer		3850753	0					
ANR	3850860	Argument	1		3850753	1					
ANR	3850861	PrimaryExpression	1		3850753	0					
ANR	3850862	Argument	sizeof ( buffer )		3850753	2					
ANR	3850863	SizeofExpression	sizeof ( buffer )		3850753	0					
ANR	3850864	Sizeof	sizeof		3850753	0					
ANR	3850865	SizeofOperand	buffer		3850753	1					
ANR	3850866	Argument	good		3850753	3					
ANR	3850867	Identifier	good		3850753	0					
ANR	3850868	PrimaryExpression	0		3850753	1					
ANR	3850869	ExpressionStatement	"fwrite ( buffer , 1 , len , newf )"	462:6:10474:10504	3850753	1	True				
ANR	3850870	CallExpression	"fwrite ( buffer , 1 , len , newf )"		3850753	0					
ANR	3850871	Callee	fwrite		3850753	0					
ANR	3850872	Identifier	fwrite		3850753	0					
ANR	3850873	ArgumentList	buffer		3850753	1					
ANR	3850874	Argument	buffer		3850753	0					
ANR	3850875	Identifier	buffer		3850753	0					
ANR	3850876	Argument	1		3850753	1					
ANR	3850877	PrimaryExpression	1		3850753	0					
ANR	3850878	Argument	len		3850753	2					
ANR	3850879	Identifier	len		3850753	0					
ANR	3850880	Argument	newf		3850753	3					
ANR	3850881	Identifier	newf		3850753	0					
ANR	3850882	ExpressionStatement	fclose ( good )	464:4:10511:10525	3850753	10	True				
ANR	3850883	CallExpression	fclose ( good )		3850753	0					
ANR	3850884	Callee	fclose		3850753	0					
ANR	3850885	Identifier	fclose		3850753	0					
ANR	3850886	ArgumentList	good		3850753	1					
ANR	3850887	Argument	good		3850753	0					
ANR	3850888	Identifier	good		3850753	0					
ANR	3850889	ExpressionStatement	err_cnt = getErrorCnt ( item )	466:4:10532:10561	3850753	11	True				
ANR	3850890	AssignmentExpression	err_cnt = getErrorCnt ( item )		3850753	0		=			
ANR	3850891	Identifier	err_cnt		3850753	0					
ANR	3850892	CallExpression	getErrorCnt ( item )		3850753	1					
ANR	3850893	Callee	getErrorCnt		3850753	0					
ANR	3850894	Identifier	getErrorCnt		3850753	0					
ANR	3850895	ArgumentList	item		3850753	1					
ANR	3850896	Argument	item		3850753	0					
ANR	3850897	Identifier	item		3850753	0					
ANR	3850898	ForStatement	for ( i = 0 ; i < err_cnt ; i ++ )		3850753	12					
ANR	3850899	ForInit	i = 0 ;	467:10:10573:10578	3850753	0	True				
ANR	3850900	AssignmentExpression	i = 0		3850753	0		=			
ANR	3850901	Identifier	i		3850753	0					
ANR	3850902	PrimaryExpression	0		3850753	1					
ANR	3850903	Condition	i < err_cnt	467:17:10580:10590	3850753	1	True				
ANR	3850904	RelationalExpression	i < err_cnt		3850753	0		<			
ANR	3850905	Identifier	i		3850753	0					
ANR	3850906	Identifier	err_cnt		3850753	1					
ANR	3850907	PostIncDecOperationExpression	i ++	467:30:10593:10595	3850753	2	True				
ANR	3850908	Identifier	i		3850753	0					
ANR	3850909	IncDec	++		3850753	1					
ANR	3850910	CompoundStatement		30:4:648:648	3850753	3					
ANR	3850911	ExpressionStatement	"fseek ( newf , getRandom ( 0 , ( int ) ( item -> len - 1 ) ) , SEEK_SET )"	469:6:10611:10674	3850753	0	True				
ANR	3850912	CallExpression	"fseek ( newf , getRandom ( 0 , ( int ) ( item -> len - 1 ) ) , SEEK_SET )"		3850753	0					
ANR	3850913	Callee	fseek		3850753	0					
ANR	3850914	Identifier	fseek		3850753	0					
ANR	3850915	ArgumentList	newf		3850753	1					
ANR	3850916	Argument	newf		3850753	0					
ANR	3850917	Identifier	newf		3850753	0					
ANR	3850918	Argument	"getRandom ( 0 , ( int ) ( item -> len - 1 ) )"		3850753	1					
ANR	3850919	CallExpression	"getRandom ( 0 , ( int ) ( item -> len - 1 ) )"		3850753	0					
ANR	3850920	Callee	getRandom		3850753	0					
ANR	3850921	Identifier	getRandom		3850753	0					
ANR	3850922	ArgumentList	0		3850753	1					
ANR	3850923	Argument	0		3850753	0					
ANR	3850924	PrimaryExpression	0		3850753	0					
ANR	3850925	Argument	( int ) ( item -> len - 1 )		3850753	1					
ANR	3850926	CastExpression	( int ) ( item -> len - 1 )		3850753	0					
ANR	3850927	CastTarget	int		3850753	0					
ANR	3850928	AdditiveExpression	item -> len - 1		3850753	1		-			
ANR	3850929	PtrMemberAccess	item -> len		3850753	0					
ANR	3850930	Identifier	item		3850753	0					
ANR	3850931	Identifier	len		3850753	1					
ANR	3850932	PrimaryExpression	1		3850753	1					
ANR	3850933	Argument	SEEK_SET		3850753	2					
ANR	3850934	Identifier	SEEK_SET		3850753	0					
ANR	3850935	IfStatement	if ( item -> isbinary )		3850753	1					
ANR	3850936	Condition	item -> isbinary	471:11:10688:10701	3850753	0	True				
ANR	3850937	PtrMemberAccess	item -> isbinary		3850753	0					
ANR	3850938	Identifier	item		3850753	0					
ANR	3850939	Identifier	isbinary		3850753	1					
ANR	3850940	ExpressionStatement	"putc ( getRandom ( 0 , 0xFF ) , newf )"	472:8:10713:10747	3850753	1	True				
ANR	3850941	CallExpression	"putc ( getRandom ( 0 , 0xFF ) , newf )"		3850753	0					
ANR	3850942	Callee	putc		3850753	0					
ANR	3850943	Identifier	putc		3850753	0					
ANR	3850944	ArgumentList	"getRandom ( 0 , 0xFF )"		3850753	1					
ANR	3850945	Argument	"getRandom ( 0 , 0xFF )"		3850753	0					
ANR	3850946	CallExpression	"getRandom ( 0 , 0xFF )"		3850753	0					
ANR	3850947	Callee	getRandom		3850753	0					
ANR	3850948	Identifier	getRandom		3850753	0					
ANR	3850949	ArgumentList	0		3850753	1					
ANR	3850950	Argument	0		3850753	0					
ANR	3850951	PrimaryExpression	0		3850753	0					
ANR	3850952	Argument	0xFF		3850753	1					
ANR	3850953	PrimaryExpression	0xFF		3850753	0					
ANR	3850954	Argument	newf		3850753	1					
ANR	3850955	Identifier	newf		3850753	0					
ANR	3850956	ElseStatement	else		3850753	0					
ANR	3850957	IfStatement	if ( item -> isascii )		3850753	0					
ANR	3850958	Condition	item -> isascii	473:16:10765:10777	3850753	0	True				
ANR	3850959	PtrMemberAccess	item -> isascii		3850753	0					
ANR	3850960	Identifier	item		3850753	0					
ANR	3850961	Identifier	isascii		3850753	1					
ANR	3850962	ExpressionStatement	"putc ( getRandom ( 0x20 , 0x7E ) , newf )"	474:8:10789:10826	3850753	1	True				
ANR	3850963	CallExpression	"putc ( getRandom ( 0x20 , 0x7E ) , newf )"		3850753	0					
ANR	3850964	Callee	putc		3850753	0					
ANR	3850965	Identifier	putc		3850753	0					
ANR	3850966	ArgumentList	"getRandom ( 0x20 , 0x7E )"		3850753	1					
ANR	3850967	Argument	"getRandom ( 0x20 , 0x7E )"		3850753	0					
ANR	3850968	CallExpression	"getRandom ( 0x20 , 0x7E )"		3850753	0					
ANR	3850969	Callee	getRandom		3850753	0					
ANR	3850970	Identifier	getRandom		3850753	0					
ANR	3850971	ArgumentList	0x20		3850753	1					
ANR	3850972	Argument	0x20		3850753	0					
ANR	3850973	PrimaryExpression	0x20		3850753	0					
ANR	3850974	Argument	0x7E		3850753	1					
ANR	3850975	PrimaryExpression	0x7E		3850753	0					
ANR	3850976	Argument	newf		3850753	1					
ANR	3850977	Identifier	newf		3850753	0					
ANR	3850978	ElseStatement	else		3850753	0					
ANR	3850979	CompoundStatement		39:8:900:929	3850753	0					
ANR	3850980	IdentifierDeclStatement	"int hex = getRandom ( 0 , 15 ) ;"	477:8:10855:10884	3850753	0	True				
ANR	3850981	IdentifierDecl	"hex = getRandom ( 0 , 15 )"		3850753	0					
ANR	3850982	IdentifierDeclType	int		3850753	0					
ANR	3850983	Identifier	hex		3850753	1					
ANR	3850984	AssignmentExpression	"hex = getRandom ( 0 , 15 )"		3850753	2		=			
ANR	3850985	Identifier	hex		3850753	0					
ANR	3850986	CallExpression	"getRandom ( 0 , 15 )"		3850753	1					
ANR	3850987	Callee	getRandom		3850753	0					
ANR	3850988	Identifier	getRandom		3850753	0					
ANR	3850989	ArgumentList	0		3850753	1					
ANR	3850990	Argument	0		3850753	0					
ANR	3850991	PrimaryExpression	0		3850753	0					
ANR	3850992	Argument	15		3850753	1					
ANR	3850993	PrimaryExpression	15		3850753	0					
ANR	3850994	IfStatement	if ( hex < 10 )		3850753	1					
ANR	3850995	Condition	hex < 10	480:13:10901:10908	3850753	0	True				
ANR	3850996	RelationalExpression	hex < 10		3850753	0		<			
ANR	3850997	Identifier	hex		3850753	0					
ANR	3850998	PrimaryExpression	10		3850753	1					
ANR	3850999	ExpressionStatement	hex += '0'	481:10:10922:10932	3850753	1	True				
ANR	3851000	AssignmentExpression	hex += '0'		3850753	0		+=			
ANR	3851001	Identifier	hex		3850753	0					
ANR	3851002	PrimaryExpression	'0'		3850753	1					
ANR	3851003	ElseStatement	else		3850753	0					
ANR	3851004	ExpressionStatement	hex += 'A' - 10	483:10:10957:10972	3850753	0	True				
ANR	3851005	AssignmentExpression	hex += 'A' - 10		3850753	0		+=			
ANR	3851006	Identifier	hex		3850753	0					
ANR	3851007	AdditiveExpression	'A' - 10		3850753	1		-			
ANR	3851008	PrimaryExpression	'A'		3850753	0					
ANR	3851009	PrimaryExpression	10		3850753	1					
ANR	3851010	ExpressionStatement	"putc ( hex , newf )"	485:8:10983:11000	3850753	2	True				
ANR	3851011	CallExpression	"putc ( hex , newf )"		3850753	0					
ANR	3851012	Callee	putc		3850753	0					
ANR	3851013	Identifier	putc		3850753	0					
ANR	3851014	ArgumentList	hex		3850753	1					
ANR	3851015	Argument	hex		3850753	0					
ANR	3851016	Identifier	hex		3850753	0					
ANR	3851017	Argument	newf		3850753	1					
ANR	3851018	Identifier	newf		3850753	0					
ANR	3851019	IfStatement	if ( ferror ( newf ) )		3850753	13					
ANR	3851020	Condition	ferror ( newf )	489:9:11026:11039	3850753	0	True				
ANR	3851021	CallExpression	ferror ( newf )		3850753	0					
ANR	3851022	Callee	ferror		3850753	0					
ANR	3851023	Identifier	ferror		3850753	0					
ANR	3851024	ArgumentList	newf		3850753	1					
ANR	3851025	Argument	newf		3850753	0					
ANR	3851026	Identifier	newf		3850753	0					
ANR	3851027	CompoundStatement		52:4:1092:1092	3850753	1					
ANR	3851028	ExpressionStatement	fclose ( newf )	491:6:11055:11069	3850753	0	True				
ANR	3851029	CallExpression	fclose ( newf )		3850753	0					
ANR	3851030	Callee	fclose		3850753	0					
ANR	3851031	Identifier	fclose		3850753	0					
ANR	3851032	ArgumentList	newf		3850753	1					
ANR	3851033	Argument	newf		3850753	0					
ANR	3851034	Identifier	newf		3850753	0					
ANR	3851035	ExpressionStatement	unlink ( newfont )	492:6:11077:11094	3850753	1	True				
ANR	3851036	CallExpression	unlink ( newfont )		3850753	0					
ANR	3851037	Callee	unlink		3850753	0					
ANR	3851038	Identifier	unlink		3850753	0					
ANR	3851039	ArgumentList	newfont		3850753	1					
ANR	3851040	Argument	newfont		3850753	0					
ANR	3851041	Identifier	newfont		3850753	0					
ANR	3851042	ReturnStatement	return false ;	493:6:11102:11114	3850753	2	True				
ANR	3851043	Identifier	false		3850753	0					
ANR	3851044	ExpressionStatement	fclose ( newf )	496:4:11127:11141	3850753	14	True				
ANR	3851045	CallExpression	fclose ( newf )		3850753	0					
ANR	3851046	Callee	fclose		3850753	0					
ANR	3851047	Identifier	fclose		3850753	0					
ANR	3851048	ArgumentList	newf		3850753	1					
ANR	3851049	Argument	newf		3850753	0					
ANR	3851050	Identifier	newf		3850753	0					
ANR	3851051	ReturnStatement	return true ;	498:4:11148:11159	3850753	15	True				
ANR	3851052	Identifier	true		3850753	0					
ANR	3851053	ReturnType	static int		3850753	1					
ANR	3851054	Identifier	copyfont		3850753	2					
ANR	3851055	ParameterList	"struct fontlist * item , char * newfont"		3850753	3					
ANR	3851056	Parameter	struct fontlist * item	437:12:9888:9909	3850753	0	True				
ANR	3851057	ParameterType	struct fontlist *		3850753	0					
ANR	3851058	Identifier	item		3850753	1					
ANR	3851059	Parameter	char * newfont	438:12:9924:9948	3850753	1	True				
ANR	3851060	ParameterType	char *		3850753	0					
ANR	3851061	Identifier	newfont		3850753	1					
ANR	3851062	CFGEntryNode	ENTRY		3850753		True				
ANR	3851063	CFGExitNode	EXIT		3850753		True				
ANR	3851064	Symbol	SEEK_SET		3850753						
ANR	3851065	Symbol	fopen		3850753						
ANR	3851066	Symbol	item		3850753						
ANR	3851067	Symbol	getErrorCnt		3850753						
ANR	3851068	Symbol	item -> isascii		3850753						
ANR	3851069	Symbol	false		3850753						
ANR	3851070	Symbol	i		3850753						
ANR	3851071	Symbol	item -> isbinary		3850753						
ANR	3851072	Symbol	newfont		3850753						
ANR	3851073	Symbol	stderr		3850753						
ANR	3851074	Symbol	item -> len		3850753						
ANR	3851075	Symbol	good		3850753						
ANR	3851076	Symbol	fread		3850753						
ANR	3851077	Symbol	ferror		3850753						
ANR	3851078	Symbol	getRandom		3850753						
ANR	3851079	Symbol	len		3850753						
ANR	3851080	Symbol	newf		3850753						
ANR	3851081	Symbol	item -> name		3850753						
ANR	3851082	Symbol	* item		3850753						
ANR	3851083	Symbol	true		3850753						
ANR	3851084	Symbol	hex		3850753						
ANR	3851085	Symbol	buffer		3850753						
ANR	3851086	Symbol	err_cnt		3850753						
ANR	3851087	DeclStmt									
ANR	3851088	Decl							int	int	child_pid
ANR	3851089	Function	abort_test	504:2:11195:11380							
ANR	3851090	FunctionDef	abort_test (int sig)		3851089	0					
ANR	3851091	CompoundStatement		506:2:11234:11380	3851089	0					
ANR	3851092	ExpressionStatement	FT_UNUSED ( sig )	507:4:11240:11256	3851089	0	True				
ANR	3851093	CallExpression	FT_UNUSED ( sig )		3851089	0					
ANR	3851094	Callee	FT_UNUSED		3851089	0					
ANR	3851095	Identifier	FT_UNUSED		3851089	0					
ANR	3851096	ArgumentList	sig		3851089	1					
ANR	3851097	Argument	sig		3851089	0					
ANR	3851098	Identifier	sig		3851089	0					
ANR	3851099	ExpressionStatement	"kill ( child_pid , SIGFPE )"	510:4:11316:11341	3851089	1	True				
ANR	3851100	CallExpression	"kill ( child_pid , SIGFPE )"		3851089	0					
ANR	3851101	Callee	kill		3851089	0					
ANR	3851102	Identifier	kill		3851089	0					
ANR	3851103	ArgumentList	child_pid		3851089	1					
ANR	3851104	Argument	child_pid		3851089	0					
ANR	3851105	Identifier	child_pid		3851089	0					
ANR	3851106	Argument	SIGFPE		3851089	1					
ANR	3851107	Identifier	SIGFPE		3851089	0					
ANR	3851108	ExpressionStatement	"write ( 2 , ""Timeout... "" , 11 )"	511:4:11347:11376	3851089	2	True				
ANR	3851109	CallExpression	"write ( 2 , ""Timeout... "" , 11 )"		3851089	0					
ANR	3851110	Callee	write		3851089	0					
ANR	3851111	Identifier	write		3851089	0					
ANR	3851112	ArgumentList	2		3851089	1					
ANR	3851113	Argument	2		3851089	0					
ANR	3851114	PrimaryExpression	2		3851089	0					
ANR	3851115	Argument	"""Timeout... """		3851089	1					
ANR	3851116	PrimaryExpression	"""Timeout... """		3851089	0					
ANR	3851117	Argument	11		3851089	2					
ANR	3851118	PrimaryExpression	11		3851089	0					
ANR	3851119	ReturnType	static void		3851089	1					
ANR	3851120	Identifier	abort_test		3851089	2					
ANR	3851121	ParameterList	int sig		3851089	3					
ANR	3851122	Parameter	int sig	505:14:11221:11228	3851089	0	True				
ANR	3851123	ParameterType	int		3851089	0					
ANR	3851124	Identifier	sig		3851089	1					
ANR	3851125	CFGEntryNode	ENTRY		3851089		True				
ANR	3851126	CFGExitNode	EXIT		3851089		True				
ANR	3851127	Symbol	sig		3851089						
ANR	3851128	Symbol	child_pid		3851089						
ANR	3851129	Symbol	SIGFPE		3851089						
ANR	3851130	Function	do_test	515:2:11386:12289							
ANR	3851131	FunctionDef	do_test ()		3851130	0					
ANR	3851132	CompoundStatement		517:2:11418:12289	3851130	0					
ANR	3851133	IdentifierDeclStatement	"int i = getRandom ( 0 , ( int ) ( fcnt - 1 ) ) ;"	518:4:11424:11480	3851130	0	True				
ANR	3851134	IdentifierDecl	"i = getRandom ( 0 , ( int ) ( fcnt - 1 ) )"		3851130	0					
ANR	3851135	IdentifierDeclType	int		3851130	0					
ANR	3851136	Identifier	i		3851130	1					
ANR	3851137	AssignmentExpression	"i = getRandom ( 0 , ( int ) ( fcnt - 1 ) )"		3851130	2		=			
ANR	3851138	Identifier	i		3851130	0					
ANR	3851139	CallExpression	"getRandom ( 0 , ( int ) ( fcnt - 1 ) )"		3851130	1					
ANR	3851140	Callee	getRandom		3851130	0					
ANR	3851141	Identifier	getRandom		3851130	0					
ANR	3851142	ArgumentList	0		3851130	1					
ANR	3851143	Argument	0		3851130	0					
ANR	3851144	PrimaryExpression	0		3851130	0					
ANR	3851145	Argument	( int ) ( fcnt - 1 )		3851130	1					
ANR	3851146	CastExpression	( int ) ( fcnt - 1 )		3851130	0					
ANR	3851147	CastTarget	int		3851130	0					
ANR	3851148	AdditiveExpression	fcnt - 1		3851130	1		-			
ANR	3851149	Identifier	fcnt		3851130	0					
ANR	3851150	PrimaryExpression	1		3851130	1					
ANR	3851151	Statement	static	519:4:11486:11491	3851130	1	True				
ANR	3851152	IdentifierDeclStatement	int test_num = 0 ;	519:11:11493:11510	3851130	2	True				
ANR	3851153	IdentifierDecl	test_num = 0		3851130	0					
ANR	3851154	IdentifierDeclType	int		3851130	0					
ANR	3851155	Identifier	test_num		3851130	1					
ANR	3851156	AssignmentExpression	test_num = 0		3851130	2		=			
ANR	3851157	Identifier	test_num		3851130	0					
ANR	3851158	PrimaryExpression	0		3851130	1					
ANR	3851159	IdentifierDeclStatement	char buffer [ 1024 ] ;	520:4:11516:11540	3851130	3	True				
ANR	3851160	IdentifierDecl	buffer [ 1024 ]		3851130	0					
ANR	3851161	IdentifierDeclType	char [ 1024 ]		3851130	0					
ANR	3851162	Identifier	buffer		3851130	1					
ANR	3851163	PrimaryExpression	1024		3851130	2					
ANR	3851164	ExpressionStatement	"sprintf ( buffer , ""%s/test%d"" , results_dir , test_num ++ )"	523:4:11548:11603	3851130	4	True				
ANR	3851165	CallExpression	"sprintf ( buffer , ""%s/test%d"" , results_dir , test_num ++ )"		3851130	0					
ANR	3851166	Callee	sprintf		3851130	0					
ANR	3851167	Identifier	sprintf		3851130	0					
ANR	3851168	ArgumentList	buffer		3851130	1					
ANR	3851169	Argument	buffer		3851130	0					
ANR	3851170	Identifier	buffer		3851130	0					
ANR	3851171	Argument	"""%s/test%d"""		3851130	1					
ANR	3851172	PrimaryExpression	"""%s/test%d"""		3851130	0					
ANR	3851173	Argument	results_dir		3851130	2					
ANR	3851174	Identifier	results_dir		3851130	0					
ANR	3851175	Argument	test_num ++		3851130	3					
ANR	3851176	PostIncDecOperationExpression	test_num ++		3851130	0					
ANR	3851177	Identifier	test_num		3851130	0					
ANR	3851178	IncDec	++		3851130	1					
ANR	3851179	IfStatement	"if ( copyfont ( & fontlist [ i ] , buffer ) )"		3851130	5					
ANR	3851180	Condition	"copyfont ( & fontlist [ i ] , buffer )"	525:9:11615:11647	3851130	0	True				
ANR	3851181	CallExpression	"copyfont ( & fontlist [ i ] , buffer )"		3851130	0					
ANR	3851182	Callee	copyfont		3851130	0					
ANR	3851183	Identifier	copyfont		3851130	0					
ANR	3851184	ArgumentList	& fontlist [ i ]		3851130	1					
ANR	3851185	Argument	& fontlist [ i ]		3851130	0					
ANR	3851186	UnaryOperationExpression	& fontlist [ i ]		3851130	0					
ANR	3851187	UnaryOperator	&		3851130	0					
ANR	3851188	ArrayIndexing	fontlist [ i ]		3851130	1					
ANR	3851189	Identifier	fontlist		3851130	0					
ANR	3851190	Identifier	i		3851130	1					
ANR	3851191	Argument	buffer		3851130	1					
ANR	3851192	Identifier	buffer		3851130	0					
ANR	3851193	CompoundStatement		10:4:236:236	3851130	1					
ANR	3851194	ExpressionStatement	"signal ( SIGALRM , abort_test )"	527:6:11663:11692	3851130	0	True				
ANR	3851195	CallExpression	"signal ( SIGALRM , abort_test )"		3851130	0					
ANR	3851196	Callee	signal		3851130	0					
ANR	3851197	Identifier	signal		3851130	0					
ANR	3851198	ArgumentList	SIGALRM		3851130	1					
ANR	3851199	Argument	SIGALRM		3851130	0					
ANR	3851200	Identifier	SIGALRM		3851130	0					
ANR	3851201	Argument	abort_test		3851130	1					
ANR	3851202	Identifier	abort_test		3851130	0					
ANR	3851203	ExpressionStatement	alarm ( 20 )	530:6:11806:11817	3851130	1	True				
ANR	3851204	CallExpression	alarm ( 20 )		3851130	0					
ANR	3851205	Callee	alarm		3851130	0					
ANR	3851206	Identifier	alarm		3851130	0					
ANR	3851207	ArgumentList	20		3851130	1					
ANR	3851208	Argument	20		3851130	0					
ANR	3851209	PrimaryExpression	20		3851130	0					
ANR	3851210	IfStatement	if ( ( child_pid = fork ( ) ) == 0 )		3851130	2					
ANR	3851211	Condition	( child_pid = fork ( ) ) == 0	531:11:11830:11856	3851130	0	True				
ANR	3851212	EqualityExpression	( child_pid = fork ( ) ) == 0		3851130	0		==			
ANR	3851213	AssignmentExpression	child_pid = fork ( )		3851130	0		=			
ANR	3851214	Identifier	child_pid		3851130	0					
ANR	3851215	CallExpression	fork ( )		3851130	1					
ANR	3851216	Callee	fork		3851130	0					
ANR	3851217	Identifier	fork		3851130	0					
ANR	3851218	ArgumentList			3851130	1					
ANR	3851219	PrimaryExpression	0		3851130	1					
ANR	3851220	ExpressionStatement	ExecuteTest ( buffer )	532:8:11868:11889	3851130	1	True				
ANR	3851221	CallExpression	ExecuteTest ( buffer )		3851130	0					
ANR	3851222	Callee	ExecuteTest		3851130	0					
ANR	3851223	Identifier	ExecuteTest		3851130	0					
ANR	3851224	ArgumentList	buffer		3851130	1					
ANR	3851225	Argument	buffer		3851130	0					
ANR	3851226	Identifier	buffer		3851130	0					
ANR	3851227	ElseStatement	else		3851130	0					
ANR	3851228	IfStatement	if ( child_pid != - 1 )		3851130	0					
ANR	3851229	Condition	child_pid != - 1	533:16:11907:11921	3851130	0	True				
ANR	3851230	EqualityExpression	child_pid != - 1		3851130	0		!=			
ANR	3851231	Identifier	child_pid		3851130	0					
ANR	3851232	UnaryOperationExpression	- 1		3851130	1					
ANR	3851233	UnaryOperator	-		3851130	0					
ANR	3851234	PrimaryExpression	1		3851130	1					
ANR	3851235	CompoundStatement		19:8:522:533	3851130	1					
ANR	3851236	IdentifierDeclStatement	int status ;	535:8:11941:11952	3851130	0	True				
ANR	3851237	IdentifierDecl	status		3851130	0					
ANR	3851238	IdentifierDeclType	int		3851130	0					
ANR	3851239	Identifier	status		3851130	1					
ANR	3851240	ExpressionStatement	"waitpid ( child_pid , & status , 0 )"	538:8:11964:11996	3851130	1	True				
ANR	3851241	CallExpression	"waitpid ( child_pid , & status , 0 )"		3851130	0					
ANR	3851242	Callee	waitpid		3851130	0					
ANR	3851243	Identifier	waitpid		3851130	0					
ANR	3851244	ArgumentList	child_pid		3851130	1					
ANR	3851245	Argument	child_pid		3851130	0					
ANR	3851246	Identifier	child_pid		3851130	0					
ANR	3851247	Argument	& status		3851130	1					
ANR	3851248	UnaryOperationExpression	& status		3851130	0					
ANR	3851249	UnaryOperator	&		3851130	0					
ANR	3851250	Identifier	status		3851130	1					
ANR	3851251	Argument	0		3851130	2					
ANR	3851252	PrimaryExpression	0		3851130	0					
ANR	3851253	ExpressionStatement	alarm ( 0 )	539:8:12006:12016	3851130	2	True				
ANR	3851254	CallExpression	alarm ( 0 )		3851130	0					
ANR	3851255	Callee	alarm		3851130	0					
ANR	3851256	Identifier	alarm		3851130	0					
ANR	3851257	ArgumentList	0		3851130	1					
ANR	3851258	Argument	0		3851130	0					
ANR	3851259	PrimaryExpression	0		3851130	0					
ANR	3851260	IfStatement	if ( WIFSIGNALED ( status ) )		3851130	3					
ANR	3851261	Condition	WIFSIGNALED ( status )	540:13:12031:12052	3851130	0	True				
ANR	3851262	CallExpression	WIFSIGNALED ( status )		3851130	0					
ANR	3851263	Callee	WIFSIGNALED		3851130	0					
ANR	3851264	Identifier	WIFSIGNALED		3851130	0					
ANR	3851265	ArgumentList	status		3851130	1					
ANR	3851266	Argument	status		3851130	0					
ANR	3851267	Identifier	status		3851130	0					
ANR	3851268	ExpressionStatement	"printf ( ""Error found in file `%s'\\n"" , buffer )"	541:10:12066:12112	3851130	1	True				
ANR	3851269	CallExpression	"printf ( ""Error found in file `%s'\\n"" , buffer )"		3851130	0					
ANR	3851270	Callee	printf		3851130	0					
ANR	3851271	Identifier	printf		3851130	0					
ANR	3851272	ArgumentList	"""Error found in file `%s'\\n"""		3851130	1					
ANR	3851273	Argument	"""Error found in file `%s'\\n"""		3851130	0					
ANR	3851274	PrimaryExpression	"""Error found in file `%s'\\n"""		3851130	0					
ANR	3851275	Argument	buffer		3851130	1					
ANR	3851276	Identifier	buffer		3851130	0					
ANR	3851277	ElseStatement	else		3851130	0					
ANR	3851278	ExpressionStatement	unlink ( buffer )	543:10:12137:12153	3851130	0	True				
ANR	3851279	CallExpression	unlink ( buffer )		3851130	0					
ANR	3851280	Callee	unlink		3851130	0					
ANR	3851281	Identifier	unlink		3851130	0					
ANR	3851282	ArgumentList	buffer		3851130	1					
ANR	3851283	Argument	buffer		3851130	0					
ANR	3851284	Identifier	buffer		3851130	0					
ANR	3851285	ElseStatement	else		3851130	0					
ANR	3851286	CompoundStatement		30:6:761:761	3851130	0					
ANR	3851287	ExpressionStatement	"fprintf ( stderr , ""Can't fork test case.\\n"" )"	547:8:12190:12234	3851130	0	True				
ANR	3851288	CallExpression	"fprintf ( stderr , ""Can't fork test case.\\n"" )"		3851130	0					
ANR	3851289	Callee	fprintf		3851130	0					
ANR	3851290	Identifier	fprintf		3851130	0					
ANR	3851291	ArgumentList	stderr		3851130	1					
ANR	3851292	Argument	stderr		3851130	0					
ANR	3851293	Identifier	stderr		3851130	0					
ANR	3851294	Argument	"""Can't fork test case.\\n"""		3851130	1					
ANR	3851295	PrimaryExpression	"""Can't fork test case.\\n"""		3851130	0					
ANR	3851296	ExpressionStatement	exit ( 1 )	548:8:12244:12253	3851130	1	True				
ANR	3851297	CallExpression	exit ( 1 )		3851130	0					
ANR	3851298	Callee	exit		3851130	0					
ANR	3851299	Identifier	exit		3851130	0					
ANR	3851300	ArgumentList	1		3851130	1					
ANR	3851301	Argument	1		3851130	0					
ANR	3851302	PrimaryExpression	1		3851130	0					
ANR	3851303	ExpressionStatement	alarm ( 0 )	550:6:12269:12279	3851130	3	True				
ANR	3851304	CallExpression	alarm ( 0 )		3851130	0					
ANR	3851305	Callee	alarm		3851130	0					
ANR	3851306	Identifier	alarm		3851130	0					
ANR	3851307	ArgumentList	0		3851130	1					
ANR	3851308	Argument	0		3851130	0					
ANR	3851309	PrimaryExpression	0		3851130	0					
ANR	3851310	ReturnType	static void		3851130	1					
ANR	3851311	Identifier	do_test		3851130	2					
ANR	3851312	ParameterList			3851130	3					
ANR	3851313	CFGEntryNode	ENTRY		3851130		True				
ANR	3851314	CFGExitNode	EXIT		3851130		True				
ANR	3851315	Symbol	WIFSIGNALED		3851130						
ANR	3851316	Symbol	i		3851130						
ANR	3851317	Symbol	results_dir		3851130						
ANR	3851318	Symbol	SIGALRM		3851130						
ANR	3851319	Symbol	fcnt		3851130						
ANR	3851320	Symbol	stderr		3851130						
ANR	3851321	Symbol	& status		3851130						
ANR	3851322	Symbol	child_pid		3851130						
ANR	3851323	Symbol	fork		3851130						
ANR	3851324	Symbol	getRandom		3851130						
ANR	3851325	Symbol	test_num		3851130						
ANR	3851326	Symbol	abort_test		3851130						
ANR	3851327	Symbol	fontlist		3851130						
ANR	3851328	Symbol	buffer		3851130						
ANR	3851329	Symbol	copyfont		3851130						
ANR	3851330	Symbol	status		3851130						
ANR	3851331	Function	usage	555:2:12295:14302							
ANR	3851332	FunctionDef	"usage (FILE * out , char * name)"		3851331	0					
ANR	3851333	CompoundStatement		558:2:12353:14302	3851331	0					
ANR	3851334	IdentifierDeclStatement	char * * d = default_dir_list ;	559:4:12359:12387	3851331	0	True				
ANR	3851335	IdentifierDecl	* * d = default_dir_list		3851331	0					
ANR	3851336	IdentifierDeclType	char * *		3851331	0					
ANR	3851337	Identifier	d		3851331	1					
ANR	3851338	AssignmentExpression	* * d = default_dir_list		3851331	2		=			
ANR	3851339	Identifier	default_dir_list		3851331	0					
ANR	3851340	Identifier	default_dir_list		3851331	1					
ANR	3851341	IdentifierDeclStatement	char * * e = default_ext_list ;	560:4:12393:12421	3851331	1	True				
ANR	3851342	IdentifierDecl	* * e = default_ext_list		3851331	0					
ANR	3851343	IdentifierDeclType	char * *		3851331	0					
ANR	3851344	Identifier	e		3851331	1					
ANR	3851345	AssignmentExpression	* * e = default_ext_list		3851331	2		=			
ANR	3851346	Identifier	default_ext_list		3851331	0					
ANR	3851347	Identifier	default_ext_list		3851331	1					
ANR	3851348	Statement	fprintf	563:4:12429:12435	3851331	2	True				
ANR	3851349	Statement	(	563:11:12436:12436	3851331	3	True				
ANR	3851350	Statement	out	563:13:12438:12440	3851331	4	True				
ANR	3851351	Statement	","	563:16:12441:12441	3851331	5	True				
ANR	3851352	Statement	"""%s [options] -- Generate random erroneous fonts\\n"""	563:18:12443:12493	3851331	6	True				
ANR	3851353	Statement	"""  and attempt to parse them with FreeType.\\n\\n"""	564:18:12513:12560	3851331	7	True				
ANR	3851354	Statement	","	564:66:12561:12561	3851331	8	True				
ANR	3851355	Statement	name	564:68:12563:12566	3851331	9	True				
ANR	3851356	Statement	)	564:73:12568:12568	3851331	10	True				
ANR	3851357	ExpressionStatement		564:74:12569:12569	3851331	11	True				
ANR	3851358	ExpressionStatement	"fprintf ( out , ""  --all                    All non-directory files are assumed to be fonts.\\n"" )"	566:4:12576:12671	3851331	12	True				
ANR	3851359	CallExpression	"fprintf ( out , ""  --all                    All non-directory files are assumed to be fonts.\\n"" )"		3851331	0					
ANR	3851360	Callee	fprintf		3851331	0					
ANR	3851361	Identifier	fprintf		3851331	0					
ANR	3851362	ArgumentList	out		3851331	1					
ANR	3851363	Argument	out		3851331	0					
ANR	3851364	Identifier	out		3851331	0					
ANR	3851365	Argument	"""  --all                    All non-directory files are assumed to be fonts.\\n"""		3851331	1					
ANR	3851366	PrimaryExpression	"""  --all                    All non-directory files are assumed to be fonts.\\n"""		3851331	0					
ANR	3851367	ExpressionStatement	"fprintf ( out , ""  --check-outlines         Make sure we can parse the outlines of each glyph.\\n"" )"	567:4:12677:12774	3851331	13	True				
ANR	3851368	CallExpression	"fprintf ( out , ""  --check-outlines         Make sure we can parse the outlines of each glyph.\\n"" )"		3851331	0					
ANR	3851369	Callee	fprintf		3851331	0					
ANR	3851370	Identifier	fprintf		3851331	0					
ANR	3851371	ArgumentList	out		3851331	1					
ANR	3851372	Argument	out		3851331	0					
ANR	3851373	Identifier	out		3851331	0					
ANR	3851374	Argument	"""  --check-outlines         Make sure we can parse the outlines of each glyph.\\n"""		3851331	1					
ANR	3851375	PrimaryExpression	"""  --check-outlines         Make sure we can parse the outlines of each glyph.\\n"""		3851331	0					
ANR	3851376	Statement	fprintf	568:4:12780:12786	3851331	14	True				
ANR	3851377	Statement	(	568:11:12787:12787	3851331	15	True				
ANR	3851378	Statement	out	568:13:12789:12791	3851331	16	True				
ANR	3851379	Statement	","	568:16:12792:12792	3851331	17	True				
ANR	3851380	Statement	"""  --dir <path>             Append <path> to list of font search directories\\n"""	568:18:12794:12872	3851331	18	True				
ANR	3851381	Statement	"""                           (no recursive search).\\n"""	569:18:12892:12944	3851331	19	True				
ANR	3851382	Statement	)	569:72:12946:12946	3851331	20	True				
ANR	3851383	ExpressionStatement		569:73:12947:12947	3851331	21	True				
ANR	3851384	Statement	fprintf	570:4:12953:12959	3851331	22	True				
ANR	3851385	Statement	(	570:11:12960:12960	3851331	23	True				
ANR	3851386	Statement	out	570:13:12962:12964	3851331	24	True				
ANR	3851387	Statement	","	570:16:12965:12965	3851331	25	True				
ANR	3851388	Statement	"""  --error-count <cnt>      Introduce <cnt> single byte errors into each font\\n"""	570:18:12967:13046	3851331	26	True				
ANR	3851389	Statement	"""                           (default: 1)\\n"""	571:18:13066:13108	3851331	27	True				
ANR	3851390	Statement	)	571:62:13110:13110	3851331	28	True				
ANR	3851391	ExpressionStatement		571:63:13111:13111	3851331	29	True				
ANR	3851392	Statement	fprintf	572:4:13117:13123	3851331	30	True				
ANR	3851393	Statement	(	572:11:13124:13124	3851331	31	True				
ANR	3851394	Statement	out	572:13:13126:13128	3851331	32	True				
ANR	3851395	Statement	","	572:16:13129:13129	3851331	33	True				
ANR	3851396	Statement	"""  --error-fraction <frac>  Introduce <frac>*filesize single byte errors\\n"""	572:18:13131:13205	3851331	34	True				
ANR	3851397	Statement	"""                           into each font (default: 0.0).\\n"""	573:18:13225:13285	3851331	35	True				
ANR	3851398	Statement	)	573:80:13287:13287	3851331	36	True				
ANR	3851399	ExpressionStatement		573:81:13288:13288	3851331	37	True				
ANR	3851400	ExpressionStatement	"fprintf ( out , ""  --ext <ext>              Add <ext> to list of extensions indicating fonts.\\n"" )"	574:4:13294:13390	3851331	38	True				
ANR	3851401	CallExpression	"fprintf ( out , ""  --ext <ext>              Add <ext> to list of extensions indicating fonts.\\n"" )"		3851331	0					
ANR	3851402	Callee	fprintf		3851331	0					
ANR	3851403	Identifier	fprintf		3851331	0					
ANR	3851404	ArgumentList	out		3851331	1					
ANR	3851405	Argument	out		3851331	0					
ANR	3851406	Identifier	out		3851331	0					
ANR	3851407	Argument	"""  --ext <ext>              Add <ext> to list of extensions indicating fonts.\\n"""		3851331	1					
ANR	3851408	PrimaryExpression	"""  --ext <ext>              Add <ext> to list of extensions indicating fonts.\\n"""		3851331	0					
ANR	3851409	ExpressionStatement	"fprintf ( out , ""  --help                   Print this.\\n"" )"	575:4:13396:13454	3851331	39	True				
ANR	3851410	CallExpression	"fprintf ( out , ""  --help                   Print this.\\n"" )"		3851331	0					
ANR	3851411	Callee	fprintf		3851331	0					
ANR	3851412	Identifier	fprintf		3851331	0					
ANR	3851413	ArgumentList	out		3851331	1					
ANR	3851414	Argument	out		3851331	0					
ANR	3851415	Identifier	out		3851331	0					
ANR	3851416	Argument	"""  --help                   Print this.\\n"""		3851331	1					
ANR	3851417	PrimaryExpression	"""  --help                   Print this.\\n"""		3851331	0					
ANR	3851418	ExpressionStatement	"fprintf ( out , ""  --nohints                Turn off hinting.\\n"" )"	576:4:13460:13524	3851331	40	True				
ANR	3851419	CallExpression	"fprintf ( out , ""  --nohints                Turn off hinting.\\n"" )"		3851331	0					
ANR	3851420	Callee	fprintf		3851331	0					
ANR	3851421	Identifier	fprintf		3851331	0					
ANR	3851422	ArgumentList	out		3851331	1					
ANR	3851423	Argument	out		3851331	0					
ANR	3851424	Identifier	out		3851331	0					
ANR	3851425	Argument	"""  --nohints                Turn off hinting.\\n"""		3851331	1					
ANR	3851426	PrimaryExpression	"""  --nohints                Turn off hinting.\\n"""		3851331	0					
ANR	3851427	ExpressionStatement	"fprintf ( out , ""  --rasterize              Attempt to rasterize each glyph.\\n"" )"	577:4:13530:13609	3851331	41	True				
ANR	3851428	CallExpression	"fprintf ( out , ""  --rasterize              Attempt to rasterize each glyph.\\n"" )"		3851331	0					
ANR	3851429	Callee	fprintf		3851331	0					
ANR	3851430	Identifier	fprintf		3851331	0					
ANR	3851431	ArgumentList	out		3851331	1					
ANR	3851432	Argument	out		3851331	0					
ANR	3851433	Identifier	out		3851331	0					
ANR	3851434	Argument	"""  --rasterize              Attempt to rasterize each glyph.\\n"""		3851331	1					
ANR	3851435	PrimaryExpression	"""  --rasterize              Attempt to rasterize each glyph.\\n"""		3851331	0					
ANR	3851436	Statement	fprintf	578:4:13615:13621	3851331	42	True				
ANR	3851437	Statement	(	578:11:13622:13622	3851331	43	True				
ANR	3851438	Statement	out	578:13:13624:13626	3851331	44	True				
ANR	3851439	Statement	","	578:16:13627:13627	3851331	45	True				
ANR	3851440	Statement	"""  --results <path>         Place the created test fonts into <path>\\n"""	578:18:13629:13699	3851331	46	True				
ANR	3851441	Statement	"""                           (default: `results')\\n"""	579:18:13719:13769	3851331	47	True				
ANR	3851442	Statement	)	579:70:13771:13771	3851331	48	True				
ANR	3851443	ExpressionStatement		579:71:13772:13772	3851331	49	True				
ANR	3851444	ExpressionStatement	"fprintf ( out , ""  --size <float>           Use the given font size for the tests.\\n"" )"	580:4:13778:13863	3851331	50	True				
ANR	3851445	CallExpression	"fprintf ( out , ""  --size <float>           Use the given font size for the tests.\\n"" )"		3851331	0					
ANR	3851446	Callee	fprintf		3851331	0					
ANR	3851447	Identifier	fprintf		3851331	0					
ANR	3851448	ArgumentList	out		3851331	1					
ANR	3851449	Argument	out		3851331	0					
ANR	3851450	Identifier	out		3851331	0					
ANR	3851451	Argument	"""  --size <float>           Use the given font size for the tests.\\n"""		3851331	1					
ANR	3851452	PrimaryExpression	"""  --size <float>           Use the given font size for the tests.\\n"""		3851331	0					
ANR	3851453	ExpressionStatement	"fprintf ( out , ""  --test <file>            Run a single test on an already existing file.\\n"" )"	581:4:13869:13962	3851331	51	True				
ANR	3851454	CallExpression	"fprintf ( out , ""  --test <file>            Run a single test on an already existing file.\\n"" )"		3851331	0					
ANR	3851455	Callee	fprintf		3851331	0					
ANR	3851456	Identifier	fprintf		3851331	0					
ANR	3851457	ArgumentList	out		3851331	1					
ANR	3851458	Argument	out		3851331	0					
ANR	3851459	Identifier	out		3851331	0					
ANR	3851460	Argument	"""  --test <file>            Run a single test on an already existing file.\\n"""		3851331	1					
ANR	3851461	PrimaryExpression	"""  --test <file>            Run a single test on an already existing file.\\n"""		3851331	0					
ANR	3851462	ExpressionStatement	"fprintf ( out , ""\\n"" )"	582:4:13968:13988	3851331	52	True				
ANR	3851463	CallExpression	"fprintf ( out , ""\\n"" )"		3851331	0					
ANR	3851464	Callee	fprintf		3851331	0					
ANR	3851465	Identifier	fprintf		3851331	0					
ANR	3851466	ArgumentList	out		3851331	1					
ANR	3851467	Argument	out		3851331	0					
ANR	3851468	Identifier	out		3851331	0					
ANR	3851469	Argument	"""\\n"""		3851331	1					
ANR	3851470	PrimaryExpression	"""\\n"""		3851331	0					
ANR	3851471	ExpressionStatement	"fprintf ( out , ""Default font extensions:\\n"" )"	584:4:13995:14039	3851331	53	True				
ANR	3851472	CallExpression	"fprintf ( out , ""Default font extensions:\\n"" )"		3851331	0					
ANR	3851473	Callee	fprintf		3851331	0					
ANR	3851474	Identifier	fprintf		3851331	0					
ANR	3851475	ArgumentList	out		3851331	1					
ANR	3851476	Argument	out		3851331	0					
ANR	3851477	Identifier	out		3851331	0					
ANR	3851478	Argument	"""Default font extensions:\\n"""		3851331	1					
ANR	3851479	PrimaryExpression	"""Default font extensions:\\n"""		3851331	0					
ANR	3851480	ExpressionStatement	"fprintf ( out , "" "" )"	585:4:14045:14064	3851331	54	True				
ANR	3851481	CallExpression	"fprintf ( out , "" "" )"		3851331	0					
ANR	3851482	Callee	fprintf		3851331	0					
ANR	3851483	Identifier	fprintf		3851331	0					
ANR	3851484	ArgumentList	out		3851331	1					
ANR	3851485	Argument	out		3851331	0					
ANR	3851486	Identifier	out		3851331	0					
ANR	3851487	Argument	""" """		3851331	1					
ANR	3851488	PrimaryExpression	""" """		3851331	0					
ANR	3851489	WhileStatement	while ( * e )		3851331	55					
ANR	3851490	Condition	* e	586:12:14078:14079	3851331	0	True				
ANR	3851491	UnaryOperationExpression	* e		3851331	0					
ANR	3851492	UnaryOperator	*		3851331	0					
ANR	3851493	Identifier	e		3851331	1					
ANR	3851494	ExpressionStatement	"fprintf ( out , "" .%s"" , * e ++ )"	587:6:14089:14117	3851331	1	True				
ANR	3851495	CallExpression	"fprintf ( out , "" .%s"" , * e ++ )"		3851331	0					
ANR	3851496	Callee	fprintf		3851331	0					
ANR	3851497	Identifier	fprintf		3851331	0					
ANR	3851498	ArgumentList	out		3851331	1					
ANR	3851499	Argument	out		3851331	0					
ANR	3851500	Identifier	out		3851331	0					
ANR	3851501	Argument	""" .%s"""		3851331	1					
ANR	3851502	PrimaryExpression	""" .%s"""		3851331	0					
ANR	3851503	Argument	* e ++		3851331	2					
ANR	3851504	UnaryOperationExpression	* e ++		3851331	0					
ANR	3851505	UnaryOperator	*		3851331	0					
ANR	3851506	PostIncDecOperationExpression	e ++		3851331	1					
ANR	3851507	Identifier	e		3851331	0					
ANR	3851508	IncDec	++		3851331	1					
ANR	3851509	ExpressionStatement	"fprintf ( out , ""\\n"" )"	588:4:14123:14143	3851331	56	True				
ANR	3851510	CallExpression	"fprintf ( out , ""\\n"" )"		3851331	0					
ANR	3851511	Callee	fprintf		3851331	0					
ANR	3851512	Identifier	fprintf		3851331	0					
ANR	3851513	ArgumentList	out		3851331	1					
ANR	3851514	Argument	out		3851331	0					
ANR	3851515	Identifier	out		3851331	0					
ANR	3851516	Argument	"""\\n"""		3851331	1					
ANR	3851517	PrimaryExpression	"""\\n"""		3851331	0					
ANR	3851518	ExpressionStatement	"fprintf ( out , ""Default font directories:\\n"" )"	590:4:14150:14195	3851331	57	True				
ANR	3851519	CallExpression	"fprintf ( out , ""Default font directories:\\n"" )"		3851331	0					
ANR	3851520	Callee	fprintf		3851331	0					
ANR	3851521	Identifier	fprintf		3851331	0					
ANR	3851522	ArgumentList	out		3851331	1					
ANR	3851523	Argument	out		3851331	0					
ANR	3851524	Identifier	out		3851331	0					
ANR	3851525	Argument	"""Default font directories:\\n"""		3851331	1					
ANR	3851526	PrimaryExpression	"""Default font directories:\\n"""		3851331	0					
ANR	3851527	ExpressionStatement	"fprintf ( out , "" "" )"	591:4:14201:14220	3851331	58	True				
ANR	3851528	CallExpression	"fprintf ( out , "" "" )"		3851331	0					
ANR	3851529	Callee	fprintf		3851331	0					
ANR	3851530	Identifier	fprintf		3851331	0					
ANR	3851531	ArgumentList	out		3851331	1					
ANR	3851532	Argument	out		3851331	0					
ANR	3851533	Identifier	out		3851331	0					
ANR	3851534	Argument	""" """		3851331	1					
ANR	3851535	PrimaryExpression	""" """		3851331	0					
ANR	3851536	WhileStatement	while ( * d )		3851331	59					
ANR	3851537	Condition	* d	592:12:14234:14235	3851331	0	True				
ANR	3851538	UnaryOperationExpression	* d		3851331	0					
ANR	3851539	UnaryOperator	*		3851331	0					
ANR	3851540	Identifier	d		3851331	1					
ANR	3851541	ExpressionStatement	"fprintf ( out , "" %s"" , * d ++ )"	593:6:14245:14272	3851331	1	True				
ANR	3851542	CallExpression	"fprintf ( out , "" %s"" , * d ++ )"		3851331	0					
ANR	3851543	Callee	fprintf		3851331	0					
ANR	3851544	Identifier	fprintf		3851331	0					
ANR	3851545	ArgumentList	out		3851331	1					
ANR	3851546	Argument	out		3851331	0					
ANR	3851547	Identifier	out		3851331	0					
ANR	3851548	Argument	""" %s"""		3851331	1					
ANR	3851549	PrimaryExpression	""" %s"""		3851331	0					
ANR	3851550	Argument	* d ++		3851331	2					
ANR	3851551	UnaryOperationExpression	* d ++		3851331	0					
ANR	3851552	UnaryOperator	*		3851331	0					
ANR	3851553	PostIncDecOperationExpression	d ++		3851331	1					
ANR	3851554	Identifier	d		3851331	0					
ANR	3851555	IncDec	++		3851331	1					
ANR	3851556	ExpressionStatement	"fprintf ( out , ""\\n"" )"	594:4:14278:14298	3851331	60	True				
ANR	3851557	CallExpression	"fprintf ( out , ""\\n"" )"		3851331	0					
ANR	3851558	Callee	fprintf		3851331	0					
ANR	3851559	Identifier	fprintf		3851331	0					
ANR	3851560	ArgumentList	out		3851331	1					
ANR	3851561	Argument	out		3851331	0					
ANR	3851562	Identifier	out		3851331	0					
ANR	3851563	Argument	"""\\n"""		3851331	1					
ANR	3851564	PrimaryExpression	"""\\n"""		3851331	0					
ANR	3851565	ReturnType	static void		3851331	1					
ANR	3851566	Identifier	usage		3851331	2					
ANR	3851567	ParameterList	"FILE * out , char * name"		3851331	3					
ANR	3851568	Parameter	FILE * out	556:9:12316:12325	3851331	0	True				
ANR	3851569	ParameterType	FILE *		3851331	0					
ANR	3851570	Identifier	out		3851331	1					
ANR	3851571	Parameter	char * name	557:9:12337:12347	3851331	1	True				
ANR	3851572	ParameterType	char *		3851331	0					
ANR	3851573	Identifier	name		3851331	1					
ANR	3851574	CFGEntryNode	ENTRY		3851331		True				
ANR	3851575	CFGExitNode	EXIT		3851331		True				
ANR	3851576	Symbol	default_ext_list		3851331						
ANR	3851577	Symbol	d		3851331						
ANR	3851578	Symbol	e		3851331						
ANR	3851579	Symbol	name		3851331						
ANR	3851580	Symbol	* e ++		3851331						
ANR	3851581	Symbol	* d		3851331						
ANR	3851582	Symbol	* d ++		3851331						
ANR	3851583	Symbol	out		3851331						
ANR	3851584	Symbol	default_dir_list		3851331						
ANR	3851585	Symbol	* e		3851331						
ANR	3851586	Function	main	598:2:14308:17240							
ANR	3851587	FunctionDef	"main (int argc , char * * argv)"		3851586	0					
ANR	3851588	CompoundStatement		601:2:14359:17240	3851586	0					
ANR	3851589	IdentifierDeclStatement	"char * * dirs , * * exts ;"	602:4:14365:14387	3851586	0	True				
ANR	3851590	IdentifierDecl	* * dirs		3851586	0					
ANR	3851591	IdentifierDeclType	char * *		3851586	0					
ANR	3851592	Identifier	dirs		3851586	1					
ANR	3851593	IdentifierDecl	* * exts		3851586	1					
ANR	3851594	IdentifierDeclType	char * *		3851586	0					
ANR	3851595	Identifier	exts		3851586	1					
ANR	3851596	IdentifierDeclStatement	"int dcnt = 0 , ecnt = 0 , rset = false , allexts = false ;"	603:4:14393:14450	3851586	1	True				
ANR	3851597	IdentifierDecl	dcnt = 0		3851586	0					
ANR	3851598	IdentifierDeclType	int		3851586	0					
ANR	3851599	Identifier	dcnt		3851586	1					
ANR	3851600	AssignmentExpression	dcnt = 0		3851586	2		=			
ANR	3851601	Identifier	dcnt		3851586	0					
ANR	3851602	PrimaryExpression	0		3851586	1					
ANR	3851603	IdentifierDecl	ecnt = 0		3851586	1					
ANR	3851604	IdentifierDeclType	int		3851586	0					
ANR	3851605	Identifier	ecnt		3851586	1					
ANR	3851606	AssignmentExpression	ecnt = 0		3851586	2		=			
ANR	3851607	Identifier	ecnt		3851586	0					
ANR	3851608	PrimaryExpression	0		3851586	1					
ANR	3851609	IdentifierDecl	rset = false		3851586	2					
ANR	3851610	IdentifierDeclType	int		3851586	0					
ANR	3851611	Identifier	rset		3851586	1					
ANR	3851612	AssignmentExpression	rset = false		3851586	2		=			
ANR	3851613	Identifier	false		3851586	0					
ANR	3851614	Identifier	false		3851586	1					
ANR	3851615	IdentifierDecl	allexts = false		3851586	3					
ANR	3851616	IdentifierDeclType	int		3851586	0					
ANR	3851617	Identifier	allexts		3851586	1					
ANR	3851618	AssignmentExpression	allexts = false		3851586	2		=			
ANR	3851619	Identifier	false		3851586	0					
ANR	3851620	Identifier	false		3851586	1					
ANR	3851621	IdentifierDeclStatement	int i ;	604:4:14456:14465	3851586	2	True				
ANR	3851622	IdentifierDecl	i		3851586	0					
ANR	3851623	IdentifierDeclType	int		3851586	0					
ANR	3851624	Identifier	i		3851586	1					
ANR	3851625	IdentifierDeclStatement	time_t now ;	605:4:14471:14482	3851586	3	True				
ANR	3851626	IdentifierDecl	now		3851586	0					
ANR	3851627	IdentifierDeclType	time_t		3851586	0					
ANR	3851628	Identifier	now		3851586	1					
ANR	3851629	IdentifierDeclStatement	char * testfile = NULL ;	606:4:14488:14511	3851586	4	True				
ANR	3851630	IdentifierDecl	* testfile = NULL		3851586	0					
ANR	3851631	IdentifierDeclType	char *		3851586	0					
ANR	3851632	Identifier	testfile		3851586	1					
ANR	3851633	AssignmentExpression	* testfile = NULL		3851586	2		=			
ANR	3851634	Identifier	NULL		3851586	0					
ANR	3851635	Identifier	NULL		3851586	1					
ANR	3851636	ExpressionStatement	"dirs = calloc ( ( size_t ) ( argc + 1 ) , sizeof ( char * * ) )"	609:4:14519:14576	3851586	5	True				
ANR	3851637	AssignmentExpression	"dirs = calloc ( ( size_t ) ( argc + 1 ) , sizeof ( char * * ) )"		3851586	0		=			
ANR	3851638	Identifier	dirs		3851586	0					
ANR	3851639	CallExpression	"calloc ( ( size_t ) ( argc + 1 ) , sizeof ( char * * ) )"		3851586	1					
ANR	3851640	Callee	calloc		3851586	0					
ANR	3851641	Identifier	calloc		3851586	0					
ANR	3851642	ArgumentList	( size_t ) ( argc + 1 )		3851586	1					
ANR	3851643	Argument	( size_t ) ( argc + 1 )		3851586	0					
ANR	3851644	CastExpression	( size_t ) ( argc + 1 )		3851586	0					
ANR	3851645	CastTarget	size_t		3851586	0					
ANR	3851646	AdditiveExpression	argc + 1		3851586	1		+			
ANR	3851647	Identifier	argc		3851586	0					
ANR	3851648	PrimaryExpression	1		3851586	1					
ANR	3851649	Argument	sizeof ( char * * )		3851586	1					
ANR	3851650	SizeofExpression	sizeof ( char * * )		3851586	0					
ANR	3851651	Sizeof	sizeof		3851586	0					
ANR	3851652	SizeofOperand	char * *		3851586	1					
ANR	3851653	ExpressionStatement	"exts = calloc ( ( size_t ) ( argc + 1 ) , sizeof ( char * * ) )"	610:4:14582:14639	3851586	6	True				
ANR	3851654	AssignmentExpression	"exts = calloc ( ( size_t ) ( argc + 1 ) , sizeof ( char * * ) )"		3851586	0		=			
ANR	3851655	Identifier	exts		3851586	0					
ANR	3851656	CallExpression	"calloc ( ( size_t ) ( argc + 1 ) , sizeof ( char * * ) )"		3851586	1					
ANR	3851657	Callee	calloc		3851586	0					
ANR	3851658	Identifier	calloc		3851586	0					
ANR	3851659	ArgumentList	( size_t ) ( argc + 1 )		3851586	1					
ANR	3851660	Argument	( size_t ) ( argc + 1 )		3851586	0					
ANR	3851661	CastExpression	( size_t ) ( argc + 1 )		3851586	0					
ANR	3851662	CastTarget	size_t		3851586	0					
ANR	3851663	AdditiveExpression	argc + 1		3851586	1		+			
ANR	3851664	Identifier	argc		3851586	0					
ANR	3851665	PrimaryExpression	1		3851586	1					
ANR	3851666	Argument	sizeof ( char * * )		3851586	1					
ANR	3851667	SizeofExpression	sizeof ( char * * )		3851586	0					
ANR	3851668	Sizeof	sizeof		3851586	0					
ANR	3851669	SizeofOperand	char * *		3851586	1					
ANR	3851670	ForStatement	for ( i = 1 ; i < argc ; i ++ )		3851586	7					
ANR	3851671	ForInit	i = 1 ;	612:10:14652:14657	3851586	0	True				
ANR	3851672	AssignmentExpression	i = 1		3851586	0		=			
ANR	3851673	Identifier	i		3851586	0					
ANR	3851674	PrimaryExpression	1		3851586	1					
ANR	3851675	Condition	i < argc	612:17:14659:14666	3851586	1	True				
ANR	3851676	RelationalExpression	i < argc		3851586	0		<			
ANR	3851677	Identifier	i		3851586	0					
ANR	3851678	Identifier	argc		3851586	1					
ANR	3851679	PostIncDecOperationExpression	i ++	612:27:14669:14671	3851586	2	True				
ANR	3851680	Identifier	i		3851586	0					
ANR	3851681	IncDec	++		3851586	1					
ANR	3851682	CompoundStatement		15:6:354:364	3851586	3					
ANR	3851683	IdentifierDeclStatement	char * pt = argv [ i ] ;	614:6:14687:14706	3851586	0	True				
ANR	3851684	IdentifierDecl	* pt = argv [ i ]		3851586	0					
ANR	3851685	IdentifierDeclType	char *		3851586	0					
ANR	3851686	Identifier	pt		3851586	1					
ANR	3851687	AssignmentExpression	* pt = argv [ i ]		3851586	2		=			
ANR	3851688	Identifier	pt		3851586	0					
ANR	3851689	ArrayIndexing	argv [ i ]		3851586	1					
ANR	3851690	Identifier	argv		3851586	0					
ANR	3851691	Identifier	i		3851586	1					
ANR	3851692	IdentifierDeclStatement	char * end ;	615:6:14714:14724	3851586	1	True				
ANR	3851693	IdentifierDecl	* end		3851586	0					
ANR	3851694	IdentifierDeclType	char *		3851586	0					
ANR	3851695	Identifier	end		3851586	1					
ANR	3851696	IfStatement	if ( pt [ 0 ] == '-' && pt [ 1 ] == '-' )		3851586	2					
ANR	3851697	Condition	pt [ 0 ] == '-' && pt [ 1 ] == '-'	618:11:14739:14766	3851586	0	True				
ANR	3851698	AndExpression	pt [ 0 ] == '-' && pt [ 1 ] == '-'		3851586	0		&&			
ANR	3851699	EqualityExpression	pt [ 0 ] == '-'		3851586	0		==			
ANR	3851700	ArrayIndexing	pt [ 0 ]		3851586	0					
ANR	3851701	Identifier	pt		3851586	0					
ANR	3851702	PrimaryExpression	0		3851586	1					
ANR	3851703	PrimaryExpression	'-'		3851586	1					
ANR	3851704	EqualityExpression	pt [ 1 ] == '-'		3851586	1		==			
ANR	3851705	ArrayIndexing	pt [ 1 ]		3851586	0					
ANR	3851706	Identifier	pt		3851586	0					
ANR	3851707	PrimaryExpression	1		3851586	1					
ANR	3851708	PrimaryExpression	'-'		3851586	1					
ANR	3851709	ExpressionStatement	pt ++	619:8:14778:14782	3851586	1	True				
ANR	3851710	PostIncDecOperationExpression	pt ++		3851586	0					
ANR	3851711	Identifier	pt		3851586	0					
ANR	3851712	IncDec	++		3851586	1					
ANR	3851713	IfStatement	"if ( strcmp ( pt , ""-all"" ) == 0 )"		3851586	3					
ANR	3851714	Condition	"strcmp ( pt , ""-all"" ) == 0"	621:11:14796:14820	3851586	0	True				
ANR	3851715	EqualityExpression	"strcmp ( pt , ""-all"" ) == 0"		3851586	0		==			
ANR	3851716	CallExpression	"strcmp ( pt , ""-all"" )"		3851586	0					
ANR	3851717	Callee	strcmp		3851586	0					
ANR	3851718	Identifier	strcmp		3851586	0					
ANR	3851719	ArgumentList	pt		3851586	1					
ANR	3851720	Argument	pt		3851586	0					
ANR	3851721	Identifier	pt		3851586	0					
ANR	3851722	Argument	"""-all"""		3851586	1					
ANR	3851723	PrimaryExpression	"""-all"""		3851586	0					
ANR	3851724	PrimaryExpression	0		3851586	1					
ANR	3851725	ExpressionStatement	allexts = true	622:8:14832:14846	3851586	1	True				
ANR	3851726	AssignmentExpression	allexts = true		3851586	0		=			
ANR	3851727	Identifier	allexts		3851586	0					
ANR	3851728	Identifier	true		3851586	1					
ANR	3851729	ElseStatement	else		3851586	0					
ANR	3851730	IfStatement	"if ( strcmp ( pt , ""-check-outlines"" ) == 0 )"		3851586	0					
ANR	3851731	Condition	"strcmp ( pt , ""-check-outlines"" ) == 0"	623:16:14864:14899	3851586	0	True				
ANR	3851732	EqualityExpression	"strcmp ( pt , ""-check-outlines"" ) == 0"		3851586	0		==			
ANR	3851733	CallExpression	"strcmp ( pt , ""-check-outlines"" )"		3851586	0					
ANR	3851734	Callee	strcmp		3851586	0					
ANR	3851735	Identifier	strcmp		3851586	0					
ANR	3851736	ArgumentList	pt		3851586	1					
ANR	3851737	Argument	pt		3851586	0					
ANR	3851738	Identifier	pt		3851586	0					
ANR	3851739	Argument	"""-check-outlines"""		3851586	1					
ANR	3851740	PrimaryExpression	"""-check-outlines"""		3851586	0					
ANR	3851741	PrimaryExpression	0		3851586	1					
ANR	3851742	ExpressionStatement	check_outlines = true	624:8:14911:14932	3851586	1	True				
ANR	3851743	AssignmentExpression	check_outlines = true		3851586	0		=			
ANR	3851744	Identifier	check_outlines		3851586	0					
ANR	3851745	Identifier	true		3851586	1					
ANR	3851746	ElseStatement	else		3851586	0					
ANR	3851747	IfStatement	"if ( strcmp ( pt , ""-dir"" ) == 0 )"		3851586	0					
ANR	3851748	Condition	"strcmp ( pt , ""-dir"" ) == 0"	625:16:14950:14974	3851586	0	True				
ANR	3851749	EqualityExpression	"strcmp ( pt , ""-dir"" ) == 0"		3851586	0		==			
ANR	3851750	CallExpression	"strcmp ( pt , ""-dir"" )"		3851586	0					
ANR	3851751	Callee	strcmp		3851586	0					
ANR	3851752	Identifier	strcmp		3851586	0					
ANR	3851753	ArgumentList	pt		3851586	1					
ANR	3851754	Argument	pt		3851586	0					
ANR	3851755	Identifier	pt		3851586	0					
ANR	3851756	Argument	"""-dir"""		3851586	1					
ANR	3851757	PrimaryExpression	"""-dir"""		3851586	0					
ANR	3851758	PrimaryExpression	0		3851586	1					
ANR	3851759	ExpressionStatement	dirs [ dcnt ++ ] = argv [ ++ i ]	626:8:14986:15010	3851586	1	True				
ANR	3851760	AssignmentExpression	dirs [ dcnt ++ ] = argv [ ++ i ]		3851586	0		=			
ANR	3851761	ArrayIndexing	dirs [ dcnt ++ ]		3851586	0					
ANR	3851762	Identifier	dirs		3851586	0					
ANR	3851763	PostIncDecOperationExpression	dcnt ++		3851586	1					
ANR	3851764	Identifier	dcnt		3851586	0					
ANR	3851765	IncDec	++		3851586	1					
ANR	3851766	ArrayIndexing	argv [ ++ i ]		3851586	1					
ANR	3851767	Identifier	argv		3851586	0					
ANR	3851768	UnaryExpression	++ i		3851586	1					
ANR	3851769	IncDec	++		3851586	0					
ANR	3851770	Identifier	i		3851586	1					
ANR	3851771	ElseStatement	else		3851586	0					
ANR	3851772	IfStatement	"if ( strcmp ( pt , ""-error-count"" ) == 0 )"		3851586	0					
ANR	3851773	Condition	"strcmp ( pt , ""-error-count"" ) == 0"	627:16:15028:15060	3851586	0	True				
ANR	3851774	EqualityExpression	"strcmp ( pt , ""-error-count"" ) == 0"		3851586	0		==			
ANR	3851775	CallExpression	"strcmp ( pt , ""-error-count"" )"		3851586	0					
ANR	3851776	Callee	strcmp		3851586	0					
ANR	3851777	Identifier	strcmp		3851586	0					
ANR	3851778	ArgumentList	pt		3851586	1					
ANR	3851779	Argument	pt		3851586	0					
ANR	3851780	Identifier	pt		3851586	0					
ANR	3851781	Argument	"""-error-count"""		3851586	1					
ANR	3851782	PrimaryExpression	"""-error-count"""		3851586	0					
ANR	3851783	PrimaryExpression	0		3851586	1					
ANR	3851784	CompoundStatement		28:6:710:710	3851586	1					
ANR	3851785	IfStatement	if ( ! rset )		3851586	0					
ANR	3851786	Condition	! rset	629:13:15085:15089	3851586	0	True				
ANR	3851787	UnaryOperationExpression	! rset		3851586	0					
ANR	3851788	UnaryOperator	!		3851586	0					
ANR	3851789	Identifier	rset		3851586	1					
ANR	3851790	ExpressionStatement	error_fraction = 0.0	630:10:15103:15123	3851586	1	True				
ANR	3851791	AssignmentExpression	error_fraction = 0.0		3851586	0		=			
ANR	3851792	Identifier	error_fraction		3851586	0					
ANR	3851793	PrimaryExpression	0.0		3851586	1					
ANR	3851794	ExpressionStatement	rset = true	631:8:15133:15144	3851586	1	True				
ANR	3851795	AssignmentExpression	rset = true		3851586	0		=			
ANR	3851796	Identifier	rset		3851586	0					
ANR	3851797	Identifier	true		3851586	1					
ANR	3851798	ExpressionStatement	"error_count = ( unsigned int ) strtoul ( argv [ ++ i ] , & end , 10 )"	632:8:15154:15212	3851586	2	True				
ANR	3851799	AssignmentExpression	"error_count = ( unsigned int ) strtoul ( argv [ ++ i ] , & end , 10 )"		3851586	0		=			
ANR	3851800	Identifier	error_count		3851586	0					
ANR	3851801	CastExpression	"( unsigned int ) strtoul ( argv [ ++ i ] , & end , 10 )"		3851586	1					
ANR	3851802	CastTarget	unsigned int		3851586	0					
ANR	3851803	CallExpression	"strtoul ( argv [ ++ i ] , & end , 10 )"		3851586	1					
ANR	3851804	Callee	strtoul		3851586	0					
ANR	3851805	Identifier	strtoul		3851586	0					
ANR	3851806	ArgumentList	argv [ ++ i ]		3851586	1					
ANR	3851807	Argument	argv [ ++ i ]		3851586	0					
ANR	3851808	ArrayIndexing	argv [ ++ i ]		3851586	0					
ANR	3851809	Identifier	argv		3851586	0					
ANR	3851810	UnaryExpression	++ i		3851586	1					
ANR	3851811	IncDec	++		3851586	0					
ANR	3851812	Identifier	i		3851586	1					
ANR	3851813	Argument	& end		3851586	1					
ANR	3851814	UnaryOperationExpression	& end		3851586	0					
ANR	3851815	UnaryOperator	&		3851586	0					
ANR	3851816	Identifier	end		3851586	1					
ANR	3851817	Argument	10		3851586	2					
ANR	3851818	PrimaryExpression	10		3851586	0					
ANR	3851819	IfStatement	if ( * end != '\\0' )		3851586	3					
ANR	3851820	Condition	* end != '\\0'	633:13:15227:15238	3851586	0	True				
ANR	3851821	EqualityExpression	* end != '\\0'		3851586	0		!=			
ANR	3851822	UnaryOperationExpression	* end		3851586	0					
ANR	3851823	UnaryOperator	*		3851586	0					
ANR	3851824	Identifier	end		3851586	1					
ANR	3851825	PrimaryExpression	'\\0'		3851586	1					
ANR	3851826	CompoundStatement		34:8:890:890	3851586	1					
ANR	3851827	ExpressionStatement	"fprintf ( stderr , ""Bad value for error-count: %s\\n"" , argv [ i ] )"	635:10:15262:15323	3851586	0	True				
ANR	3851828	CallExpression	"fprintf ( stderr , ""Bad value for error-count: %s\\n"" , argv [ i ] )"		3851586	0					
ANR	3851829	Callee	fprintf		3851586	0					
ANR	3851830	Identifier	fprintf		3851586	0					
ANR	3851831	ArgumentList	stderr		3851586	1					
ANR	3851832	Argument	stderr		3851586	0					
ANR	3851833	Identifier	stderr		3851586	0					
ANR	3851834	Argument	"""Bad value for error-count: %s\\n"""		3851586	1					
ANR	3851835	PrimaryExpression	"""Bad value for error-count: %s\\n"""		3851586	0					
ANR	3851836	Argument	argv [ i ]		3851586	2					
ANR	3851837	ArrayIndexing	argv [ i ]		3851586	0					
ANR	3851838	Identifier	argv		3851586	0					
ANR	3851839	Identifier	i		3851586	1					
ANR	3851840	ExpressionStatement	exit ( 1 )	636:10:15335:15344	3851586	1	True				
ANR	3851841	CallExpression	exit ( 1 )		3851586	0					
ANR	3851842	Callee	exit		3851586	0					
ANR	3851843	Identifier	exit		3851586	0					
ANR	3851844	ArgumentList	1		3851586	1					
ANR	3851845	Argument	1		3851586	0					
ANR	3851846	PrimaryExpression	1		3851586	0					
ANR	3851847	ElseStatement	else		3851586	0					
ANR	3851848	IfStatement	"if ( strcmp ( pt , ""-error-fraction"" ) == 0 )"		3851586	0					
ANR	3851849	Condition	"strcmp ( pt , ""-error-fraction"" ) == 0"	639:16:15380:15415	3851586	0	True				
ANR	3851850	EqualityExpression	"strcmp ( pt , ""-error-fraction"" ) == 0"		3851586	0		==			
ANR	3851851	CallExpression	"strcmp ( pt , ""-error-fraction"" )"		3851586	0					
ANR	3851852	Callee	strcmp		3851586	0					
ANR	3851853	Identifier	strcmp		3851586	0					
ANR	3851854	ArgumentList	pt		3851586	1					
ANR	3851855	Argument	pt		3851586	0					
ANR	3851856	Identifier	pt		3851586	0					
ANR	3851857	Argument	"""-error-fraction"""		3851586	1					
ANR	3851858	PrimaryExpression	"""-error-fraction"""		3851586	0					
ANR	3851859	PrimaryExpression	0		3851586	1					
ANR	3851860	CompoundStatement		40:6:1065:1065	3851586	1					
ANR	3851861	IfStatement	if ( ! rset )		3851586	0					
ANR	3851862	Condition	! rset	641:13:15440:15444	3851586	0	True				
ANR	3851863	UnaryOperationExpression	! rset		3851586	0					
ANR	3851864	UnaryOperator	!		3851586	0					
ANR	3851865	Identifier	rset		3851586	1					
ANR	3851866	ExpressionStatement	error_count = 0	642:10:15458:15473	3851586	1	True				
ANR	3851867	AssignmentExpression	error_count = 0		3851586	0		=			
ANR	3851868	Identifier	error_count		3851586	0					
ANR	3851869	PrimaryExpression	0		3851586	1					
ANR	3851870	ExpressionStatement	rset = true	643:8:15483:15494	3851586	1	True				
ANR	3851871	AssignmentExpression	rset = true		3851586	0		=			
ANR	3851872	Identifier	rset		3851586	0					
ANR	3851873	Identifier	true		3851586	1					
ANR	3851874	ExpressionStatement	"error_fraction = strtod ( argv [ ++ i ] , & end )"	644:8:15504:15546	3851586	2	True				
ANR	3851875	AssignmentExpression	"error_fraction = strtod ( argv [ ++ i ] , & end )"		3851586	0		=			
ANR	3851876	Identifier	error_fraction		3851586	0					
ANR	3851877	CallExpression	"strtod ( argv [ ++ i ] , & end )"		3851586	1					
ANR	3851878	Callee	strtod		3851586	0					
ANR	3851879	Identifier	strtod		3851586	0					
ANR	3851880	ArgumentList	argv [ ++ i ]		3851586	1					
ANR	3851881	Argument	argv [ ++ i ]		3851586	0					
ANR	3851882	ArrayIndexing	argv [ ++ i ]		3851586	0					
ANR	3851883	Identifier	argv		3851586	0					
ANR	3851884	UnaryExpression	++ i		3851586	1					
ANR	3851885	IncDec	++		3851586	0					
ANR	3851886	Identifier	i		3851586	1					
ANR	3851887	Argument	& end		3851586	1					
ANR	3851888	UnaryOperationExpression	& end		3851586	0					
ANR	3851889	UnaryOperator	&		3851586	0					
ANR	3851890	Identifier	end		3851586	1					
ANR	3851891	IfStatement	if ( * end != '\\0' )		3851586	3					
ANR	3851892	Condition	* end != '\\0'	645:13:15561:15572	3851586	0	True				
ANR	3851893	EqualityExpression	* end != '\\0'		3851586	0		!=			
ANR	3851894	UnaryOperationExpression	* end		3851586	0					
ANR	3851895	UnaryOperator	*		3851586	0					
ANR	3851896	Identifier	end		3851586	1					
ANR	3851897	PrimaryExpression	'\\0'		3851586	1					
ANR	3851898	CompoundStatement		46:8:1224:1224	3851586	1					
ANR	3851899	ExpressionStatement	"fprintf ( stderr , ""Bad value for error-fraction: %s\\n"" , argv [ i ] )"	647:10:15596:15660	3851586	0	True				
ANR	3851900	CallExpression	"fprintf ( stderr , ""Bad value for error-fraction: %s\\n"" , argv [ i ] )"		3851586	0					
ANR	3851901	Callee	fprintf		3851586	0					
ANR	3851902	Identifier	fprintf		3851586	0					
ANR	3851903	ArgumentList	stderr		3851586	1					
ANR	3851904	Argument	stderr		3851586	0					
ANR	3851905	Identifier	stderr		3851586	0					
ANR	3851906	Argument	"""Bad value for error-fraction: %s\\n"""		3851586	1					
ANR	3851907	PrimaryExpression	"""Bad value for error-fraction: %s\\n"""		3851586	0					
ANR	3851908	Argument	argv [ i ]		3851586	2					
ANR	3851909	ArrayIndexing	argv [ i ]		3851586	0					
ANR	3851910	Identifier	argv		3851586	0					
ANR	3851911	Identifier	i		3851586	1					
ANR	3851912	ExpressionStatement	exit ( 1 )	648:10:15672:15681	3851586	1	True				
ANR	3851913	CallExpression	exit ( 1 )		3851586	0					
ANR	3851914	Callee	exit		3851586	0					
ANR	3851915	Identifier	exit		3851586	0					
ANR	3851916	ArgumentList	1		3851586	1					
ANR	3851917	Argument	1		3851586	0					
ANR	3851918	PrimaryExpression	1		3851586	0					
ANR	3851919	IfStatement	if ( error_fraction < 0.0 || error_fraction > 1.0 )		3851586	4					
ANR	3851920	Condition	error_fraction < 0.0 || error_fraction > 1.0	650:13:15706:15749	3851586	0	True				
ANR	3851921	OrExpression	error_fraction < 0.0 || error_fraction > 1.0		3851586	0		||			
ANR	3851922	RelationalExpression	error_fraction < 0.0		3851586	0		<			
ANR	3851923	Identifier	error_fraction		3851586	0					
ANR	3851924	PrimaryExpression	0.0		3851586	1					
ANR	3851925	RelationalExpression	error_fraction > 1.0		3851586	1		>			
ANR	3851926	Identifier	error_fraction		3851586	0					
ANR	3851927	PrimaryExpression	1.0		3851586	1					
ANR	3851928	CompoundStatement		51:8:1401:1401	3851586	1					
ANR	3851929	ExpressionStatement	"fprintf ( stderr , ""error-fraction must be in the range [0;1]\\n"" )"	652:10:15773:15837	3851586	0	True				
ANR	3851930	CallExpression	"fprintf ( stderr , ""error-fraction must be in the range [0;1]\\n"" )"		3851586	0					
ANR	3851931	Callee	fprintf		3851586	0					
ANR	3851932	Identifier	fprintf		3851586	0					
ANR	3851933	ArgumentList	stderr		3851586	1					
ANR	3851934	Argument	stderr		3851586	0					
ANR	3851935	Identifier	stderr		3851586	0					
ANR	3851936	Argument	"""error-fraction must be in the range [0;1]\\n"""		3851586	1					
ANR	3851937	PrimaryExpression	"""error-fraction must be in the range [0;1]\\n"""		3851586	0					
ANR	3851938	ExpressionStatement	exit ( 1 )	653:10:15849:15858	3851586	1	True				
ANR	3851939	CallExpression	exit ( 1 )		3851586	0					
ANR	3851940	Callee	exit		3851586	0					
ANR	3851941	Identifier	exit		3851586	0					
ANR	3851942	ArgumentList	1		3851586	1					
ANR	3851943	Argument	1		3851586	0					
ANR	3851944	PrimaryExpression	1		3851586	0					
ANR	3851945	ElseStatement	else		3851586	0					
ANR	3851946	IfStatement	"if ( strcmp ( pt , ""-ext"" ) == 0 )"		3851586	0					
ANR	3851947	Condition	"strcmp ( pt , ""-ext"" ) == 0"	656:16:15894:15918	3851586	0	True				
ANR	3851948	EqualityExpression	"strcmp ( pt , ""-ext"" ) == 0"		3851586	0		==			
ANR	3851949	CallExpression	"strcmp ( pt , ""-ext"" )"		3851586	0					
ANR	3851950	Callee	strcmp		3851586	0					
ANR	3851951	Identifier	strcmp		3851586	0					
ANR	3851952	ArgumentList	pt		3851586	1					
ANR	3851953	Argument	pt		3851586	0					
ANR	3851954	Identifier	pt		3851586	0					
ANR	3851955	Argument	"""-ext"""		3851586	1					
ANR	3851956	PrimaryExpression	"""-ext"""		3851586	0					
ANR	3851957	PrimaryExpression	0		3851586	1					
ANR	3851958	ExpressionStatement	exts [ ecnt ++ ] = argv [ ++ i ]	657:8:15930:15954	3851586	1	True				
ANR	3851959	AssignmentExpression	exts [ ecnt ++ ] = argv [ ++ i ]		3851586	0		=			
ANR	3851960	ArrayIndexing	exts [ ecnt ++ ]		3851586	0					
ANR	3851961	Identifier	exts		3851586	0					
ANR	3851962	PostIncDecOperationExpression	ecnt ++		3851586	1					
ANR	3851963	Identifier	ecnt		3851586	0					
ANR	3851964	IncDec	++		3851586	1					
ANR	3851965	ArrayIndexing	argv [ ++ i ]		3851586	1					
ANR	3851966	Identifier	argv		3851586	0					
ANR	3851967	UnaryExpression	++ i		3851586	1					
ANR	3851968	IncDec	++		3851586	0					
ANR	3851969	Identifier	i		3851586	1					
ANR	3851970	ElseStatement	else		3851586	0					
ANR	3851971	IfStatement	"if ( strcmp ( pt , ""-help"" ) == 0 )"		3851586	0					
ANR	3851972	Condition	"strcmp ( pt , ""-help"" ) == 0"	658:16:15972:15997	3851586	0	True				
ANR	3851973	EqualityExpression	"strcmp ( pt , ""-help"" ) == 0"		3851586	0		==			
ANR	3851974	CallExpression	"strcmp ( pt , ""-help"" )"		3851586	0					
ANR	3851975	Callee	strcmp		3851586	0					
ANR	3851976	Identifier	strcmp		3851586	0					
ANR	3851977	ArgumentList	pt		3851586	1					
ANR	3851978	Argument	pt		3851586	0					
ANR	3851979	Identifier	pt		3851586	0					
ANR	3851980	Argument	"""-help"""		3851586	1					
ANR	3851981	PrimaryExpression	"""-help"""		3851586	0					
ANR	3851982	PrimaryExpression	0		3851586	1					
ANR	3851983	CompoundStatement		59:6:1647:1647	3851586	1					
ANR	3851984	ExpressionStatement	"usage ( stdout , argv [ 0 ] )"	660:8:16017:16041	3851586	0	True				
ANR	3851985	CallExpression	"usage ( stdout , argv [ 0 ] )"		3851586	0					
ANR	3851986	Callee	usage		3851586	0					
ANR	3851987	Identifier	usage		3851586	0					
ANR	3851988	ArgumentList	stdout		3851586	1					
ANR	3851989	Argument	stdout		3851586	0					
ANR	3851990	Identifier	stdout		3851586	0					
ANR	3851991	Argument	argv [ 0 ]		3851586	1					
ANR	3851992	ArrayIndexing	argv [ 0 ]		3851586	0					
ANR	3851993	Identifier	argv		3851586	0					
ANR	3851994	PrimaryExpression	0		3851586	1					
ANR	3851995	ExpressionStatement	exit ( 0 )	661:8:16051:16060	3851586	1	True				
ANR	3851996	CallExpression	exit ( 0 )		3851586	0					
ANR	3851997	Callee	exit		3851586	0					
ANR	3851998	Identifier	exit		3851586	0					
ANR	3851999	ArgumentList	0		3851586	1					
ANR	3852000	Argument	0		3851586	0					
ANR	3852001	PrimaryExpression	0		3851586	0					
ANR	3852002	ElseStatement	else		3851586	0					
ANR	3852003	IfStatement	"if ( strcmp ( pt , ""-nohints"" ) == 0 )"		3851586	0					
ANR	3852004	Condition	"strcmp ( pt , ""-nohints"" ) == 0"	663:16:16086:16114	3851586	0	True				
ANR	3852005	EqualityExpression	"strcmp ( pt , ""-nohints"" ) == 0"		3851586	0		==			
ANR	3852006	CallExpression	"strcmp ( pt , ""-nohints"" )"		3851586	0					
ANR	3852007	Callee	strcmp		3851586	0					
ANR	3852008	Identifier	strcmp		3851586	0					
ANR	3852009	ArgumentList	pt		3851586	1					
ANR	3852010	Argument	pt		3851586	0					
ANR	3852011	Identifier	pt		3851586	0					
ANR	3852012	Argument	"""-nohints"""		3851586	1					
ANR	3852013	PrimaryExpression	"""-nohints"""		3851586	0					
ANR	3852014	PrimaryExpression	0		3851586	1					
ANR	3852015	ExpressionStatement	nohints = true	664:8:16126:16140	3851586	1	True				
ANR	3852016	AssignmentExpression	nohints = true		3851586	0		=			
ANR	3852017	Identifier	nohints		3851586	0					
ANR	3852018	Identifier	true		3851586	1					
ANR	3852019	ElseStatement	else		3851586	0					
ANR	3852020	IfStatement	"if ( strcmp ( pt , ""-rasterize"" ) == 0 )"		3851586	0					
ANR	3852021	Condition	"strcmp ( pt , ""-rasterize"" ) == 0"	665:16:16158:16188	3851586	0	True				
ANR	3852022	EqualityExpression	"strcmp ( pt , ""-rasterize"" ) == 0"		3851586	0		==			
ANR	3852023	CallExpression	"strcmp ( pt , ""-rasterize"" )"		3851586	0					
ANR	3852024	Callee	strcmp		3851586	0					
ANR	3852025	Identifier	strcmp		3851586	0					
ANR	3852026	ArgumentList	pt		3851586	1					
ANR	3852027	Argument	pt		3851586	0					
ANR	3852028	Identifier	pt		3851586	0					
ANR	3852029	Argument	"""-rasterize"""		3851586	1					
ANR	3852030	PrimaryExpression	"""-rasterize"""		3851586	0					
ANR	3852031	PrimaryExpression	0		3851586	1					
ANR	3852032	ExpressionStatement	rasterize = true	666:8:16200:16216	3851586	1	True				
ANR	3852033	AssignmentExpression	rasterize = true		3851586	0		=			
ANR	3852034	Identifier	rasterize		3851586	0					
ANR	3852035	Identifier	true		3851586	1					
ANR	3852036	ElseStatement	else		3851586	0					
ANR	3852037	IfStatement	"if ( strcmp ( pt , ""-results"" ) == 0 )"		3851586	0					
ANR	3852038	Condition	"strcmp ( pt , ""-results"" ) == 0"	667:16:16234:16262	3851586	0	True				
ANR	3852039	EqualityExpression	"strcmp ( pt , ""-results"" ) == 0"		3851586	0		==			
ANR	3852040	CallExpression	"strcmp ( pt , ""-results"" )"		3851586	0					
ANR	3852041	Callee	strcmp		3851586	0					
ANR	3852042	Identifier	strcmp		3851586	0					
ANR	3852043	ArgumentList	pt		3851586	1					
ANR	3852044	Argument	pt		3851586	0					
ANR	3852045	Identifier	pt		3851586	0					
ANR	3852046	Argument	"""-results"""		3851586	1					
ANR	3852047	PrimaryExpression	"""-results"""		3851586	0					
ANR	3852048	PrimaryExpression	0		3851586	1					
ANR	3852049	ExpressionStatement	results_dir = argv [ ++ i ]	668:8:16274:16297	3851586	1	True				
ANR	3852050	AssignmentExpression	results_dir = argv [ ++ i ]		3851586	0		=			
ANR	3852051	Identifier	results_dir		3851586	0					
ANR	3852052	ArrayIndexing	argv [ ++ i ]		3851586	1					
ANR	3852053	Identifier	argv		3851586	0					
ANR	3852054	UnaryExpression	++ i		3851586	1					
ANR	3852055	IncDec	++		3851586	0					
ANR	3852056	Identifier	i		3851586	1					
ANR	3852057	ElseStatement	else		3851586	0					
ANR	3852058	IfStatement	"if ( strcmp ( pt , ""-size"" ) == 0 )"		3851586	0					
ANR	3852059	Condition	"strcmp ( pt , ""-size"" ) == 0"	669:16:16315:16340	3851586	0	True				
ANR	3852060	EqualityExpression	"strcmp ( pt , ""-size"" ) == 0"		3851586	0		==			
ANR	3852061	CallExpression	"strcmp ( pt , ""-size"" )"		3851586	0					
ANR	3852062	Callee	strcmp		3851586	0					
ANR	3852063	Identifier	strcmp		3851586	0					
ANR	3852064	ArgumentList	pt		3851586	1					
ANR	3852065	Argument	pt		3851586	0					
ANR	3852066	Identifier	pt		3851586	0					
ANR	3852067	Argument	"""-size"""		3851586	1					
ANR	3852068	PrimaryExpression	"""-size"""		3851586	0					
ANR	3852069	PrimaryExpression	0		3851586	1					
ANR	3852070	CompoundStatement		70:6:1990:1990	3851586	1					
ANR	3852071	ExpressionStatement	"font_size = ( FT_F26Dot6 ) ( strtod ( argv [ ++ i ] , & end ) * 64 )"	671:8:16360:16418	3851586	0	True				
ANR	3852072	AssignmentExpression	"font_size = ( FT_F26Dot6 ) ( strtod ( argv [ ++ i ] , & end ) * 64 )"		3851586	0		=			
ANR	3852073	Identifier	font_size		3851586	0					
ANR	3852074	CastExpression	"( FT_F26Dot6 ) ( strtod ( argv [ ++ i ] , & end ) * 64 )"		3851586	1					
ANR	3852075	CastTarget	FT_F26Dot6		3851586	0					
ANR	3852076	MultiplicativeExpression	"strtod ( argv [ ++ i ] , & end ) * 64"		3851586	1		*			
ANR	3852077	CallExpression	"strtod ( argv [ ++ i ] , & end )"		3851586	0					
ANR	3852078	Callee	strtod		3851586	0					
ANR	3852079	Identifier	strtod		3851586	0					
ANR	3852080	ArgumentList	argv [ ++ i ]		3851586	1					
ANR	3852081	Argument	argv [ ++ i ]		3851586	0					
ANR	3852082	ArrayIndexing	argv [ ++ i ]		3851586	0					
ANR	3852083	Identifier	argv		3851586	0					
ANR	3852084	UnaryExpression	++ i		3851586	1					
ANR	3852085	IncDec	++		3851586	0					
ANR	3852086	Identifier	i		3851586	1					
ANR	3852087	Argument	& end		3851586	1					
ANR	3852088	UnaryOperationExpression	& end		3851586	0					
ANR	3852089	UnaryOperator	&		3851586	0					
ANR	3852090	Identifier	end		3851586	1					
ANR	3852091	PrimaryExpression	64		3851586	1					
ANR	3852092	IfStatement	if ( * end != '\\0' || font_size < 64 )		3851586	1					
ANR	3852093	Condition	* end != '\\0' || font_size < 64	672:13:16433:16462	3851586	0	True				
ANR	3852094	OrExpression	* end != '\\0' || font_size < 64		3851586	0		||			
ANR	3852095	EqualityExpression	* end != '\\0'		3851586	0		!=			
ANR	3852096	UnaryOperationExpression	* end		3851586	0					
ANR	3852097	UnaryOperator	*		3851586	0					
ANR	3852098	Identifier	end		3851586	1					
ANR	3852099	PrimaryExpression	'\\0'		3851586	1					
ANR	3852100	RelationalExpression	font_size < 64		3851586	1		<			
ANR	3852101	Identifier	font_size		3851586	0					
ANR	3852102	PrimaryExpression	64		3851586	1					
ANR	3852103	CompoundStatement		73:8:2114:2114	3851586	1					
ANR	3852104	ExpressionStatement	"fprintf ( stderr , ""Bad value for size: %s\\n"" , argv [ i ] )"	674:10:16486:16540	3851586	0	True				
ANR	3852105	CallExpression	"fprintf ( stderr , ""Bad value for size: %s\\n"" , argv [ i ] )"		3851586	0					
ANR	3852106	Callee	fprintf		3851586	0					
ANR	3852107	Identifier	fprintf		3851586	0					
ANR	3852108	ArgumentList	stderr		3851586	1					
ANR	3852109	Argument	stderr		3851586	0					
ANR	3852110	Identifier	stderr		3851586	0					
ANR	3852111	Argument	"""Bad value for size: %s\\n"""		3851586	1					
ANR	3852112	PrimaryExpression	"""Bad value for size: %s\\n"""		3851586	0					
ANR	3852113	Argument	argv [ i ]		3851586	2					
ANR	3852114	ArrayIndexing	argv [ i ]		3851586	0					
ANR	3852115	Identifier	argv		3851586	0					
ANR	3852116	Identifier	i		3851586	1					
ANR	3852117	ExpressionStatement	exit ( 1 )	675:10:16552:16561	3851586	1	True				
ANR	3852118	CallExpression	exit ( 1 )		3851586	0					
ANR	3852119	Callee	exit		3851586	0					
ANR	3852120	Identifier	exit		3851586	0					
ANR	3852121	ArgumentList	1		3851586	1					
ANR	3852122	Argument	1		3851586	0					
ANR	3852123	PrimaryExpression	1		3851586	0					
ANR	3852124	ElseStatement	else		3851586	0					
ANR	3852125	IfStatement	"if ( strcmp ( pt , ""-test"" ) == 0 )"		3851586	0					
ANR	3852126	Condition	"strcmp ( pt , ""-test"" ) == 0"	678:16:16597:16622	3851586	0	True				
ANR	3852127	EqualityExpression	"strcmp ( pt , ""-test"" ) == 0"		3851586	0		==			
ANR	3852128	CallExpression	"strcmp ( pt , ""-test"" )"		3851586	0					
ANR	3852129	Callee	strcmp		3851586	0					
ANR	3852130	Identifier	strcmp		3851586	0					
ANR	3852131	ArgumentList	pt		3851586	1					
ANR	3852132	Argument	pt		3851586	0					
ANR	3852133	Identifier	pt		3851586	0					
ANR	3852134	Argument	"""-test"""		3851586	1					
ANR	3852135	PrimaryExpression	"""-test"""		3851586	0					
ANR	3852136	PrimaryExpression	0		3851586	1					
ANR	3852137	ExpressionStatement	testfile = argv [ ++ i ]	679:8:16634:16654	3851586	1	True				
ANR	3852138	AssignmentExpression	testfile = argv [ ++ i ]		3851586	0		=			
ANR	3852139	Identifier	testfile		3851586	0					
ANR	3852140	ArrayIndexing	argv [ ++ i ]		3851586	1					
ANR	3852141	Identifier	argv		3851586	0					
ANR	3852142	UnaryExpression	++ i		3851586	1					
ANR	3852143	IncDec	++		3851586	0					
ANR	3852144	Identifier	i		3851586	1					
ANR	3852145	ElseStatement	else		3851586	0					
ANR	3852146	CompoundStatement		81:6:2313:2313	3851586	0					
ANR	3852147	ExpressionStatement	"usage ( stderr , argv [ 0 ] )"	682:8:16683:16707	3851586	0	True				
ANR	3852148	CallExpression	"usage ( stderr , argv [ 0 ] )"		3851586	0					
ANR	3852149	Callee	usage		3851586	0					
ANR	3852150	Identifier	usage		3851586	0					
ANR	3852151	ArgumentList	stderr		3851586	1					
ANR	3852152	Argument	stderr		3851586	0					
ANR	3852153	Identifier	stderr		3851586	0					
ANR	3852154	Argument	argv [ 0 ]		3851586	1					
ANR	3852155	ArrayIndexing	argv [ 0 ]		3851586	0					
ANR	3852156	Identifier	argv		3851586	0					
ANR	3852157	PrimaryExpression	0		3851586	1					
ANR	3852158	ExpressionStatement	exit ( 1 )	683:8:16717:16726	3851586	1	True				
ANR	3852159	CallExpression	exit ( 1 )		3851586	0					
ANR	3852160	Callee	exit		3851586	0					
ANR	3852161	Identifier	exit		3851586	0					
ANR	3852162	ArgumentList	1		3851586	1					
ANR	3852163	Argument	1		3851586	0					
ANR	3852164	PrimaryExpression	1		3851586	0					
ANR	3852165	IfStatement	if ( allexts )		3851586	8					
ANR	3852166	Condition	allexts	687:9:16752:16758	3851586	0	True				
ANR	3852167	Identifier	allexts		3851586	0					
ANR	3852168	CompoundStatement		88:4:2406:2406	3851586	1					
ANR	3852169	ExpressionStatement	free ( exts )	689:6:16774:16786	3851586	0	True				
ANR	3852170	CallExpression	free ( exts )		3851586	0					
ANR	3852171	Callee	free		3851586	0					
ANR	3852172	Identifier	free		3851586	0					
ANR	3852173	ArgumentList	exts		3851586	1					
ANR	3852174	Argument	exts		3851586	0					
ANR	3852175	Identifier	exts		3851586	0					
ANR	3852176	ExpressionStatement	exts = NULL	690:6:16794:16805	3851586	1	True				
ANR	3852177	AssignmentExpression	exts = NULL		3851586	0		=			
ANR	3852178	Identifier	exts		3851586	0					
ANR	3852179	Identifier	NULL		3851586	1					
ANR	3852180	ElseStatement	else		3851586	0					
ANR	3852181	IfStatement	if ( ecnt == 0 )		3851586	0					
ANR	3852182	Condition	ecnt == 0	692:14:16827:16835	3851586	0	True				
ANR	3852183	EqualityExpression	ecnt == 0		3851586	0		==			
ANR	3852184	Identifier	ecnt		3851586	0					
ANR	3852185	PrimaryExpression	0		3851586	1					
ANR	3852186	CompoundStatement		93:4:2483:2483	3851586	1					
ANR	3852187	ExpressionStatement	free ( exts )	694:6:16851:16863	3851586	0	True				
ANR	3852188	CallExpression	free ( exts )		3851586	0					
ANR	3852189	Callee	free		3851586	0					
ANR	3852190	Identifier	free		3851586	0					
ANR	3852191	ArgumentList	exts		3851586	1					
ANR	3852192	Argument	exts		3851586	0					
ANR	3852193	Identifier	exts		3851586	0					
ANR	3852194	ExpressionStatement	exts = default_ext_list	695:6:16871:16894	3851586	1	True				
ANR	3852195	AssignmentExpression	exts = default_ext_list		3851586	0		=			
ANR	3852196	Identifier	exts		3851586	0					
ANR	3852197	Identifier	default_ext_list		3851586	1					
ANR	3852198	IfStatement	if ( dcnt == 0 )		3851586	9					
ANR	3852199	Condition	dcnt == 0	698:9:16912:16920	3851586	0	True				
ANR	3852200	EqualityExpression	dcnt == 0		3851586	0		==			
ANR	3852201	Identifier	dcnt		3851586	0					
ANR	3852202	PrimaryExpression	0		3851586	1					
ANR	3852203	CompoundStatement		99:4:2568:2568	3851586	1					
ANR	3852204	ExpressionStatement	free ( dirs )	700:6:16936:16948	3851586	0	True				
ANR	3852205	CallExpression	free ( dirs )		3851586	0					
ANR	3852206	Callee	free		3851586	0					
ANR	3852207	Identifier	free		3851586	0					
ANR	3852208	ArgumentList	dirs		3851586	1					
ANR	3852209	Argument	dirs		3851586	0					
ANR	3852210	Identifier	dirs		3851586	0					
ANR	3852211	ExpressionStatement	dirs = default_dir_list	701:6:16956:16979	3851586	1	True				
ANR	3852212	AssignmentExpression	dirs = default_dir_list		3851586	0		=			
ANR	3852213	Identifier	dirs		3851586	0					
ANR	3852214	Identifier	default_dir_list		3851586	1					
ANR	3852215	IfStatement	if ( testfile )		3851586	10					
ANR	3852216	Condition	testfile	704:9:16997:17004	3851586	0	True				
ANR	3852217	Identifier	testfile		3851586	0					
ANR	3852218	ExpressionStatement	ExecuteTest ( testfile )	705:6:17014:17037	3851586	1	True				
ANR	3852219	CallExpression	ExecuteTest ( testfile )		3851586	0					
ANR	3852220	Callee	ExecuteTest		3851586	0					
ANR	3852221	Identifier	ExecuteTest		3851586	0					
ANR	3852222	ArgumentList	testfile		3851586	1					
ANR	3852223	Argument	testfile		3851586	0					
ANR	3852224	Identifier	testfile		3851586	0					
ANR	3852225	ExpressionStatement	time ( & now )	707:4:17083:17095	3851586	11	True				
ANR	3852226	CallExpression	time ( & now )		3851586	0					
ANR	3852227	Callee	time		3851586	0					
ANR	3852228	Identifier	time		3851586	0					
ANR	3852229	ArgumentList	& now		3851586	1					
ANR	3852230	Argument	& now		3851586	0					
ANR	3852231	UnaryOperationExpression	& now		3851586	0					
ANR	3852232	UnaryOperator	&		3851586	0					
ANR	3852233	Identifier	now		3851586	1					
ANR	3852234	ExpressionStatement	srandom ( ( unsigned int ) now )	708:4:17101:17129	3851586	12	True				
ANR	3852235	CallExpression	srandom ( ( unsigned int ) now )		3851586	0					
ANR	3852236	Callee	srandom		3851586	0					
ANR	3852237	Identifier	srandom		3851586	0					
ANR	3852238	ArgumentList	( unsigned int ) now		3851586	1					
ANR	3852239	Argument	( unsigned int ) now		3851586	0					
ANR	3852240	CastExpression	( unsigned int ) now		3851586	0					
ANR	3852241	CastTarget	unsigned int		3851586	0					
ANR	3852242	Identifier	now		3851586	1					
ANR	3852243	ExpressionStatement	"FindFonts ( dirs , exts )"	710:4:17136:17159	3851586	13	True				
ANR	3852244	CallExpression	"FindFonts ( dirs , exts )"		3851586	0					
ANR	3852245	Callee	FindFonts		3851586	0					
ANR	3852246	Identifier	FindFonts		3851586	0					
ANR	3852247	ArgumentList	dirs		3851586	1					
ANR	3852248	Argument	dirs		3851586	0					
ANR	3852249	Identifier	dirs		3851586	0					
ANR	3852250	Argument	exts		3851586	1					
ANR	3852251	Identifier	exts		3851586	0					
ANR	3852252	ExpressionStatement	"mkdir ( results_dir , 0755 )"	711:4:17165:17191	3851586	14	True				
ANR	3852253	CallExpression	"mkdir ( results_dir , 0755 )"		3851586	0					
ANR	3852254	Callee	mkdir		3851586	0					
ANR	3852255	Identifier	mkdir		3851586	0					
ANR	3852256	ArgumentList	results_dir		3851586	1					
ANR	3852257	Argument	results_dir		3851586	0					
ANR	3852258	Identifier	results_dir		3851586	0					
ANR	3852259	Argument	0755		3851586	1					
ANR	3852260	PrimaryExpression	0755		3851586	0					
ANR	3852261	IdentifierDeclStatement	forever do_test ( ) ;	713:4:17198:17221	3851586	15	True				
ANR	3852262	IdentifierDecl	do_test ( )		3851586	0					
ANR	3852263	IdentifierDeclType	forever		3851586	0					
ANR	3852264	Identifier	do_test		3851586	1					
ANR	3852265	ReturnStatement	return 0 ;	716:4:17228:17236	3851586	16	True				
ANR	3852266	PrimaryExpression	0		3851586	0					
ANR	3852267	ReturnType	int		3851586	1					
ANR	3852268	Identifier	main		3851586	2					
ANR	3852269	ParameterList	"int argc , char * * argv"		3851586	3					
ANR	3852270	Parameter	int argc	599:8:14320:14331	3851586	0	True				
ANR	3852271	ParameterType	int		3851586	0					
ANR	3852272	Identifier	argc		3851586	1					
ANR	3852273	Parameter	char * * argv	600:8:14342:14353	3851586	1	True				
ANR	3852274	ParameterType	char * *		3851586	0					
ANR	3852275	Identifier	argv		3851586	1					
ANR	3852276	CFGEntryNode	ENTRY		3851586		True				
ANR	3852277	CFGExitNode	EXIT		3851586		True				
ANR	3852278	Symbol	pt		3851586						
ANR	3852279	Symbol	stdout		3851586						
ANR	3852280	Symbol	rset		3851586						
ANR	3852281	Symbol	& end		3851586						
ANR	3852282	Symbol	check_outlines		3851586						
ANR	3852283	Symbol	font_size		3851586						
ANR	3852284	Symbol	results_dir		3851586						
ANR	3852285	Symbol	* argv		3851586						
ANR	3852286	Symbol	ecnt		3851586						
ANR	3852287	Symbol	calloc		3851586						
ANR	3852288	Symbol	error_count		3851586						
ANR	3852289	Symbol	do_test		3851586						
ANR	3852290	Symbol	argv		3851586						
ANR	3852291	Symbol	default_dir_list		3851586						
ANR	3852292	Symbol	now		3851586						
ANR	3852293	Symbol	strtoul		3851586						
ANR	3852294	Symbol	rasterize		3851586						
ANR	3852295	Symbol	end		3851586						
ANR	3852296	Symbol	exts		3851586						
ANR	3852297	Symbol	argc		3851586						
ANR	3852298	Symbol	strcmp		3851586						
ANR	3852299	Symbol	* dirs		3851586						
ANR	3852300	Symbol	testfile		3851586						
ANR	3852301	Symbol	NULL		3851586						
ANR	3852302	Symbol	false		3851586						
ANR	3852303	Symbol	dirs		3851586						
ANR	3852304	Symbol	i		3851586						
ANR	3852305	Symbol	* pt		3851586						
ANR	3852306	Symbol	nohints		3851586						
ANR	3852307	Symbol	dcnt		3851586						
ANR	3852308	Symbol	stderr		3851586						
ANR	3852309	Symbol	strtod		3851586						
ANR	3852310	Symbol	* i		3851586						
ANR	3852311	Symbol	default_ext_list		3851586						
ANR	3852312	Symbol	* exts		3851586						
ANR	3852313	Symbol	true		3851586						
ANR	3852314	Symbol	allexts		3851586						
ANR	3852315	Symbol	* end		3851586						
ANR	3852316	Symbol	& now		3851586						
ANR	3852317	Symbol	error_fraction		3851586						
