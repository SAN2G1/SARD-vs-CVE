command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8213686	File	data/converged/CVE-2018-16863_ghostpdl/pcl_pl_plparams.c								
ANR	8213687	DeclStmt									
ANR	8213688	Decl							int	"int ( gs_memory_t * mem , gs_c_param_list * plist , gs_param_name key , char * * p )"	pjl_dist_process_dict
ANR	8213689	DeclStmt									
ANR	8213690	Decl							int	int ( char * p )	count_tokens
ANR	8213691	DeclStmt									
ANR	8213692	Decl							int	"int ( gs_memory_t * mem , gs_c_param_list * plist , gs_param_name key , char * * p )"	pjl_dist_process_dict_or_hexstring
ANR	8213693	DeclStmt									
ANR	8213694	Decl							int	"int ( gs_memory_t * mem , gs_c_param_list * plist , gs_param_name key , char * * p )"	pjl_dist_process_string
ANR	8213695	DeclStmt									
ANR	8213696	Decl							int	"int ( gs_param_list * , char * * )"	pjl_dist_add_tokens_to_list
ANR	8213697	DeclStmt									
ANR	8213698	Decl							int	"int ( gs_memory_t * mem , gs_c_param_list * plist , gs_param_name key , char * * p )"	pjl_dist_process_number
ANR	8213699	DeclStmt									
ANR	8213700	Decl							int	"int ( gs_memory_t * mem , gs_c_param_list * plist , gs_param_name key , char * * p )"	pjl_dist_process_array
ANR	8213701	DeclStmt									
ANR	8213702	Decl							int	"int ( gs_memory_t * mem , gs_c_param_list * plist , gs_param_name * key , char * * p )"	pjl_dist_process_name
ANR	8213703	Function	pdfmark_write_list	44:0:1873:2842							
ANR	8213704	FunctionDef	"pdfmark_write_list (gs_memory_t * mem , gx_device * device , gs_param_string_array * array_list)"		8213703	0					
ANR	8213705	CompoundStatement		45:0:1975:2842	8213703	0					
ANR	8213706	IdentifierDeclStatement	gs_c_param_list list ;	46:4:1981:2001	8213703	0	True				
ANR	8213707	IdentifierDecl	list		8213703	0					
ANR	8213708	IdentifierDeclType	gs_c_param_list		8213703	0					
ANR	8213709	Identifier	list		8213703	1					
ANR	8213710	IdentifierDeclStatement	int code ;	47:4:2007:2015	8213703	1	True				
ANR	8213711	IdentifierDecl	code		8213703	0					
ANR	8213712	IdentifierDeclType	int		8213703	0					
ANR	8213713	Identifier	code		8213703	1					
ANR	8213714	ExpressionStatement	"gs_c_param_list_write ( & list , mem )"	50:4:2077:2110	8213703	2	True				
ANR	8213715	CallExpression	"gs_c_param_list_write ( & list , mem )"		8213703	0					
ANR	8213716	Callee	gs_c_param_list_write		8213703	0					
ANR	8213717	Identifier	gs_c_param_list_write		8213703	0					
ANR	8213718	ArgumentList	& list		8213703	1					
ANR	8213719	Argument	& list		8213703	0					
ANR	8213720	UnaryOperationExpression	& list		8213703	0					
ANR	8213721	UnaryOperator	&		8213703	0					
ANR	8213722	Identifier	list		8213703	1					
ANR	8213723	Argument	mem		8213703	1					
ANR	8213724	Identifier	mem		8213703	0					
ANR	8213725	ExpressionStatement	"gs_param_list_set_persistent_keys ( ( gs_param_list * ) & list , false )"	54:4:2240:2305	8213703	3	True				
ANR	8213726	CallExpression	"gs_param_list_set_persistent_keys ( ( gs_param_list * ) & list , false )"		8213703	0					
ANR	8213727	Callee	gs_param_list_set_persistent_keys		8213703	0					
ANR	8213728	Identifier	gs_param_list_set_persistent_keys		8213703	0					
ANR	8213729	ArgumentList	( gs_param_list * ) & list		8213703	1					
ANR	8213730	Argument	( gs_param_list * ) & list		8213703	0					
ANR	8213731	CastExpression	( gs_param_list * ) & list		8213703	0					
ANR	8213732	CastTarget	gs_param_list *		8213703	0					
ANR	8213733	UnaryOperationExpression	& list		8213703	1					
ANR	8213734	UnaryOperator	&		8213703	0					
ANR	8213735	Identifier	list		8213703	1					
ANR	8213736	Argument	false		8213703	1					
ANR	8213737	Identifier	false		8213703	0					
ANR	8213738	ExpressionStatement	gs_c_param_list_write_more ( & list )	57:4:2385:2418	8213703	4	True				
ANR	8213739	CallExpression	gs_c_param_list_write_more ( & list )		8213703	0					
ANR	8213740	Callee	gs_c_param_list_write_more		8213703	0					
ANR	8213741	Identifier	gs_c_param_list_write_more		8213703	0					
ANR	8213742	ArgumentList	& list		8213703	1					
ANR	8213743	Argument	& list		8213703	0					
ANR	8213744	UnaryOperationExpression	& list		8213703	0					
ANR	8213745	UnaryOperator	&		8213703	0					
ANR	8213746	Identifier	list		8213703	1					
ANR	8213747	ExpressionStatement	"code = param_write_string_array ( ( gs_param_list * ) & list , ""pdfmark"" , array_list )"	60:4:2474:2552	8213703	5	True				
ANR	8213748	AssignmentExpression	"code = param_write_string_array ( ( gs_param_list * ) & list , ""pdfmark"" , array_list )"		8213703	0		=			
ANR	8213749	Identifier	code		8213703	0					
ANR	8213750	CallExpression	"param_write_string_array ( ( gs_param_list * ) & list , ""pdfmark"" , array_list )"		8213703	1					
ANR	8213751	Callee	param_write_string_array		8213703	0					
ANR	8213752	Identifier	param_write_string_array		8213703	0					
ANR	8213753	ArgumentList	( gs_param_list * ) & list		8213703	1					
ANR	8213754	Argument	( gs_param_list * ) & list		8213703	0					
ANR	8213755	CastExpression	( gs_param_list * ) & list		8213703	0					
ANR	8213756	CastTarget	gs_param_list *		8213703	0					
ANR	8213757	UnaryOperationExpression	& list		8213703	1					
ANR	8213758	UnaryOperator	&		8213703	0					
ANR	8213759	Identifier	list		8213703	1					
ANR	8213760	Argument	"""pdfmark"""		8213703	1					
ANR	8213761	PrimaryExpression	"""pdfmark"""		8213703	0					
ANR	8213762	Argument	array_list		8213703	2					
ANR	8213763	Identifier	array_list		8213703	0					
ANR	8213764	IfStatement	if ( code < 0 )		8213703	6					
ANR	8213765	Condition	code < 0	61:8:2562:2569	8213703	0	True				
ANR	8213766	RelationalExpression	code < 0		8213703	0		<			
ANR	8213767	Identifier	code		8213703	0					
ANR	8213768	PrimaryExpression	0		8213703	1					
ANR	8213769	ReturnStatement	return code ;	62:8:2580:2591	8213703	1	True				
ANR	8213770	Identifier	code		8213703	0					
ANR	8213771	ExpressionStatement	gs_c_param_list_read ( & list )	65:4:2684:2711	8213703	7	True				
ANR	8213772	CallExpression	gs_c_param_list_read ( & list )		8213703	0					
ANR	8213773	Callee	gs_c_param_list_read		8213703	0					
ANR	8213774	Identifier	gs_c_param_list_read		8213703	0					
ANR	8213775	ArgumentList	& list		8213703	1					
ANR	8213776	Argument	& list		8213703	0					
ANR	8213777	UnaryOperationExpression	& list		8213703	0					
ANR	8213778	UnaryOperator	&		8213703	0					
ANR	8213779	Identifier	list		8213703	1					
ANR	8213780	ExpressionStatement	"code = gs_putdeviceparams ( device , ( gs_param_list * ) & list )"	68:4:2765:2822	8213703	8	True				
ANR	8213781	AssignmentExpression	"code = gs_putdeviceparams ( device , ( gs_param_list * ) & list )"		8213703	0		=			
ANR	8213782	Identifier	code		8213703	0					
ANR	8213783	CallExpression	"gs_putdeviceparams ( device , ( gs_param_list * ) & list )"		8213703	1					
ANR	8213784	Callee	gs_putdeviceparams		8213703	0					
ANR	8213785	Identifier	gs_putdeviceparams		8213703	0					
ANR	8213786	ArgumentList	device		8213703	1					
ANR	8213787	Argument	device		8213703	0					
ANR	8213788	Identifier	device		8213703	0					
ANR	8213789	Argument	( gs_param_list * ) & list		8213703	1					
ANR	8213790	CastExpression	( gs_param_list * ) & list		8213703	0					
ANR	8213791	CastTarget	gs_param_list *		8213703	0					
ANR	8213792	UnaryOperationExpression	& list		8213703	1					
ANR	8213793	UnaryOperator	&		8213703	0					
ANR	8213794	Identifier	list		8213703	1					
ANR	8213795	ReturnStatement	return code ;	70:4:2829:2840	8213703	9	True				
ANR	8213796	Identifier	code		8213703	0					
ANR	8213797	ReturnType	static int		8213703	1					
ANR	8213798	Identifier	pdfmark_write_list		8213703	2					
ANR	8213799	ParameterList	"gs_memory_t * mem , gx_device * device , gs_param_string_array * array_list"		8213703	3					
ANR	8213800	Parameter	gs_memory_t * mem	44:30:1903:1918	8213703	0	True				
ANR	8213801	ParameterType	gs_memory_t *		8213703	0					
ANR	8213802	Identifier	mem		8213703	1					
ANR	8213803	Parameter	gx_device * device	44:48:1921:1937	8213703	1	True				
ANR	8213804	ParameterType	gx_device *		8213703	0					
ANR	8213805	Identifier	device		8213703	1					
ANR	8213806	Parameter	gs_param_string_array * array_list	44:67:1940:1972	8213703	2	True				
ANR	8213807	ParameterType	gs_param_string_array *		8213703	0					
ANR	8213808	Identifier	array_list		8213703	1					
ANR	8213809	CFGEntryNode	ENTRY		8213703		True				
ANR	8213810	CFGExitNode	EXIT		8213703		True				
ANR	8213811	Symbol	array_list		8213703						
ANR	8213812	Symbol	code		8213703						
ANR	8213813	Symbol	mem		8213703						
ANR	8213814	Symbol	gs_putdeviceparams		8213703						
ANR	8213815	Symbol	& list		8213703						
ANR	8213816	Symbol	false		8213703						
ANR	8213817	Symbol	list		8213703						
ANR	8213818	Symbol	device		8213703						
ANR	8213819	Symbol	param_write_string_array		8213703						
ANR	8213820	Function	process_pdfmark	77:0:3025:10049							
ANR	8213821	FunctionDef	"process_pdfmark (gs_memory_t * mem , gx_device * device , char * pdfmark)"		8213820	0					
ANR	8213822	CompoundStatement		78:0:3104:10049	8213820	0					
ANR	8213823	IdentifierDeclStatement	"char * p , * start , * copy , * stream_data = 0L ;"	79:4:3110:3151	8213820	0	True				
ANR	8213824	IdentifierDecl	* p		8213820	0					
ANR	8213825	IdentifierDeclType	char *		8213820	0					
ANR	8213826	Identifier	p		8213820	1					
ANR	8213827	IdentifierDecl	* start		8213820	1					
ANR	8213828	IdentifierDeclType	char *		8213820	0					
ANR	8213829	Identifier	start		8213820	1					
ANR	8213830	IdentifierDecl	* copy		8213820	2					
ANR	8213831	IdentifierDeclType	char *		8213820	0					
ANR	8213832	Identifier	copy		8213820	1					
ANR	8213833	IdentifierDecl	* stream_data = 0L		8213820	3					
ANR	8213834	IdentifierDeclType	char *		8213820	0					
ANR	8213835	Identifier	stream_data		8213820	1					
ANR	8213836	AssignmentExpression	* stream_data = 0L		8213820	2		=			
ANR	8213837	Identifier	stream_data		8213820	0					
ANR	8213838	PrimaryExpression	0L		8213820	1					
ANR	8213839	IdentifierDeclStatement	"int tokens = 0 , code = 0 ;"	80:4:3157:3181	8213820	1	True				
ANR	8213840	IdentifierDecl	tokens = 0		8213820	0					
ANR	8213841	IdentifierDeclType	int		8213820	0					
ANR	8213842	Identifier	tokens		8213820	1					
ANR	8213843	AssignmentExpression	tokens = 0		8213820	2		=			
ANR	8213844	Identifier	tokens		8213820	0					
ANR	8213845	PrimaryExpression	0		8213820	1					
ANR	8213846	IdentifierDecl	code = 0		8213820	1					
ANR	8213847	IdentifierDeclType	int		8213820	0					
ANR	8213848	Identifier	code		8213820	1					
ANR	8213849	AssignmentExpression	code = 0		8213820	2		=			
ANR	8213850	Identifier	code		8213820	0					
ANR	8213851	PrimaryExpression	0		8213820	1					
ANR	8213852	IdentifierDeclStatement	gs_param_string * parray ;	81:4:3187:3210	8213820	2	True				
ANR	8213853	IdentifierDecl	* parray		8213820	0					
ANR	8213854	IdentifierDeclType	gs_param_string *		8213820	0					
ANR	8213855	Identifier	parray		8213820	1					
ANR	8213856	IdentifierDeclStatement	gs_param_string_array array_list ;	82:4:3216:3248	8213820	3	True				
ANR	8213857	IdentifierDecl	array_list		8213820	0					
ANR	8213858	IdentifierDeclType	gs_param_string_array		8213820	0					
ANR	8213859	Identifier	array_list		8213820	1					
ANR	8213860	IdentifierDeclStatement	bool putdict = false ;	83:4:3254:3274	8213820	4	True				
ANR	8213861	IdentifierDecl	putdict = false		8213820	0					
ANR	8213862	IdentifierDeclType	bool		8213820	0					
ANR	8213863	Identifier	putdict		8213820	1					
ANR	8213864	AssignmentExpression	putdict = false		8213820	2		=			
ANR	8213865	Identifier	false		8213820	0					
ANR	8213866	Identifier	false		8213820	1					
ANR	8213867	ExpressionStatement	"copy = ( char * ) gs_alloc_bytes ( mem , strlen ( pdfmark ) + 1 , ""working buffer for pdfmark processing"" )"	86:4:3382:3478	8213820	5	True				
ANR	8213868	AssignmentExpression	"copy = ( char * ) gs_alloc_bytes ( mem , strlen ( pdfmark ) + 1 , ""working buffer for pdfmark processing"" )"		8213820	0		=			
ANR	8213869	Identifier	copy		8213820	0					
ANR	8213870	CastExpression	"( char * ) gs_alloc_bytes ( mem , strlen ( pdfmark ) + 1 , ""working buffer for pdfmark processing"" )"		8213820	1					
ANR	8213871	CastTarget	char *		8213820	0					
ANR	8213872	CallExpression	"gs_alloc_bytes ( mem , strlen ( pdfmark ) + 1 , ""working buffer for pdfmark processing"" )"		8213820	1					
ANR	8213873	Callee	gs_alloc_bytes		8213820	0					
ANR	8213874	Identifier	gs_alloc_bytes		8213820	0					
ANR	8213875	ArgumentList	mem		8213820	1					
ANR	8213876	Argument	mem		8213820	0					
ANR	8213877	Identifier	mem		8213820	0					
ANR	8213878	Argument	strlen ( pdfmark ) + 1		8213820	1					
ANR	8213879	AdditiveExpression	strlen ( pdfmark ) + 1		8213820	0		+			
ANR	8213880	CallExpression	strlen ( pdfmark )		8213820	0					
ANR	8213881	Callee	strlen		8213820	0					
ANR	8213882	Identifier	strlen		8213820	0					
ANR	8213883	ArgumentList	pdfmark		8213820	1					
ANR	8213884	Argument	pdfmark		8213820	0					
ANR	8213885	Identifier	pdfmark		8213820	0					
ANR	8213886	PrimaryExpression	1		8213820	1					
ANR	8213887	Argument	"""working buffer for pdfmark processing"""		8213820	2					
ANR	8213888	PrimaryExpression	"""working buffer for pdfmark processing"""		8213820	0					
ANR	8213889	IfStatement	if ( copy == 0 )		8213820	6					
ANR	8213890	Condition	copy == 0	87:8:3488:3496	8213820	0	True				
ANR	8213891	EqualityExpression	copy == 0		8213820	0		==			
ANR	8213892	Identifier	copy		8213820	0					
ANR	8213893	PrimaryExpression	0		8213820	1					
ANR	8213894	ReturnStatement	return - 1 ;	88:8:3507:3516	8213820	1	True				
ANR	8213895	UnaryOperationExpression	- 1		8213820	0					
ANR	8213896	UnaryOperator	-		8213820	0					
ANR	8213897	PrimaryExpression	1		8213820	1					
ANR	8213898	ExpressionStatement	"strcpy ( copy , pdfmark )"	89:4:3522:3543	8213820	7	True				
ANR	8213899	CallExpression	"strcpy ( copy , pdfmark )"		8213820	0					
ANR	8213900	Callee	strcpy		8213820	0					
ANR	8213901	Identifier	strcpy		8213820	0					
ANR	8213902	ArgumentList	copy		8213820	1					
ANR	8213903	Argument	copy		8213820	0					
ANR	8213904	Identifier	copy		8213820	0					
ANR	8213905	Argument	pdfmark		8213820	1					
ANR	8213906	Identifier	pdfmark		8213820	0					
ANR	8213907	ExpressionStatement	start = copy + 1	91:4:3550:3566	8213820	8	True				
ANR	8213908	AssignmentExpression	start = copy + 1		8213820	0		=			
ANR	8213909	Identifier	start		8213820	0					
ANR	8213910	AdditiveExpression	copy + 1		8213820	1		+			
ANR	8213911	Identifier	copy		8213820	0					
ANR	8213912	PrimaryExpression	1		8213820	1					
ANR	8213913	IfStatement	if ( * pdfmark != '[' )		8213820	9					
ANR	8213914	Condition	* pdfmark != '['	92:8:3576:3590	8213820	0	True				
ANR	8213915	EqualityExpression	* pdfmark != '['		8213820	0		!=			
ANR	8213916	UnaryOperationExpression	* pdfmark		8213820	0					
ANR	8213917	UnaryOperator	*		8213820	0					
ANR	8213918	Identifier	pdfmark		8213820	1					
ANR	8213919	PrimaryExpression	'['		8213820	1					
ANR	8213920	CompoundStatement		15:25:488:488	8213820	1					
ANR	8213921	ExpressionStatement	"gs_free_object ( mem , copy , ""working buffer for pdfmark processing"" )"	93:8:3603:3669	8213820	0	True				
ANR	8213922	CallExpression	"gs_free_object ( mem , copy , ""working buffer for pdfmark processing"" )"		8213820	0					
ANR	8213923	Callee	gs_free_object		8213820	0					
ANR	8213924	Identifier	gs_free_object		8213820	0					
ANR	8213925	ArgumentList	mem		8213820	1					
ANR	8213926	Argument	mem		8213820	0					
ANR	8213927	Identifier	mem		8213820	0					
ANR	8213928	Argument	copy		8213820	1					
ANR	8213929	Identifier	copy		8213820	0					
ANR	8213930	Argument	"""working buffer for pdfmark processing"""		8213820	2					
ANR	8213931	PrimaryExpression	"""working buffer for pdfmark processing"""		8213820	0					
ANR	8213932	ReturnStatement	return - 1 ;	94:8:3679:3688	8213820	1	True				
ANR	8213933	UnaryOperationExpression	- 1		8213820	0					
ANR	8213934	UnaryOperator	-		8213820	0					
ANR	8213935	PrimaryExpression	1		8213820	1					
ANR	8213936	ExpressionStatement	p = start	97:4:3701:3710	8213820	10	True				
ANR	8213937	AssignmentExpression	p = start		8213820	0		=			
ANR	8213938	Identifier	p		8213820	0					
ANR	8213939	Identifier	start		8213820	1					
ANR	8213940	WhileStatement	while ( * p != 0x00 )		8213820	11					
ANR	8213941	Condition	* p != 0x00	98:11:3723:3732	8213820	0	True				
ANR	8213942	EqualityExpression	* p != 0x00		8213820	0		!=			
ANR	8213943	UnaryOperationExpression	* p		8213820	0					
ANR	8213944	UnaryOperator	*		8213820	0					
ANR	8213945	Identifier	p		8213820	1					
ANR	8213946	PrimaryExpression	0x00		8213820	1					
ANR	8213947	CompoundStatement		21:22:629:629	8213820	1					
ANR	8213948	IfStatement	if ( * p == '(' )		8213820	0					
ANR	8213949	Condition	* p == '('	99:11:3747:3755	8213820	0	True				
ANR	8213950	EqualityExpression	* p == '('		8213820	0		==			
ANR	8213951	UnaryOperationExpression	* p		8213820	0					
ANR	8213952	UnaryOperator	*		8213820	0					
ANR	8213953	Identifier	p		8213820	1					
ANR	8213954	PrimaryExpression	'('		8213820	1					
ANR	8213955	CompoundStatement		22:22:653:653	8213820	1					
ANR	8213956	WhileStatement	while ( * p != ')' && * p != 0x00 )		8213820	0					
ANR	8213957	Condition	* p != ')' && * p != 0x00	100:19:3779:3801	8213820	0	True				
ANR	8213958	AndExpression	* p != ')' && * p != 0x00		8213820	0		&&			
ANR	8213959	EqualityExpression	* p != ')'		8213820	0		!=			
ANR	8213960	UnaryOperationExpression	* p		8213820	0					
ANR	8213961	UnaryOperator	*		8213820	0					
ANR	8213962	Identifier	p		8213820	1					
ANR	8213963	PrimaryExpression	')'		8213820	1					
ANR	8213964	EqualityExpression	* p != 0x00		8213820	1		!=			
ANR	8213965	UnaryOperationExpression	* p		8213820	0					
ANR	8213966	UnaryOperator	*		8213820	0					
ANR	8213967	Identifier	p		8213820	1					
ANR	8213968	PrimaryExpression	0x00		8213820	1					
ANR	8213969	CompoundStatement		23:44:699:699	8213820	1					
ANR	8213970	IfStatement	if ( * p == '\\\\' )		8213820	0					
ANR	8213971	Condition	* p == '\\\\'	101:20:3826:3835	8213820	0	True				
ANR	8213972	EqualityExpression	* p == '\\\\'		8213820	0		==			
ANR	8213973	UnaryOperationExpression	* p		8213820	0					
ANR	8213974	UnaryOperator	*		8213820	0					
ANR	8213975	Identifier	p		8213820	1					
ANR	8213976	PrimaryExpression	'\\\\'		8213820	1					
ANR	8213977	ExpressionStatement	p ++	102:20:3858:3861	8213820	1	True				
ANR	8213978	PostIncDecOperationExpression	p ++		8213820	0					
ANR	8213979	Identifier	p		8213820	0					
ANR	8213980	IncDec	++		8213820	1					
ANR	8213981	ExpressionStatement	p ++	103:16:3879:3882	8213820	1	True				
ANR	8213982	PostIncDecOperationExpression	p ++		8213820	0					
ANR	8213983	Identifier	p		8213820	0					
ANR	8213984	IncDec	++		8213820	1					
ANR	8213985	IfStatement	if ( * p != ')' )		8213820	1					
ANR	8213986	Condition	* p != ')'	105:16:3914:3922	8213820	0	True				
ANR	8213987	EqualityExpression	* p != ')'		8213820	0		!=			
ANR	8213988	UnaryOperationExpression	* p		8213820	0					
ANR	8213989	UnaryOperator	*		8213820	0					
ANR	8213990	Identifier	p		8213820	1					
ANR	8213991	PrimaryExpression	')'		8213820	1					
ANR	8213992	CompoundStatement		28:27:820:820	8213820	1					
ANR	8213993	ExpressionStatement	"gs_free_object ( mem , copy , ""working buffer for pdfmark processing"" )"	106:16:3943:4009	8213820	0	True				
ANR	8213994	CallExpression	"gs_free_object ( mem , copy , ""working buffer for pdfmark processing"" )"		8213820	0					
ANR	8213995	Callee	gs_free_object		8213820	0					
ANR	8213996	Identifier	gs_free_object		8213820	0					
ANR	8213997	ArgumentList	mem		8213820	1					
ANR	8213998	Argument	mem		8213820	0					
ANR	8213999	Identifier	mem		8213820	0					
ANR	8214000	Argument	copy		8213820	1					
ANR	8214001	Identifier	copy		8213820	0					
ANR	8214002	Argument	"""working buffer for pdfmark processing"""		8213820	2					
ANR	8214003	PrimaryExpression	"""working buffer for pdfmark processing"""		8213820	0					
ANR	8214004	ReturnStatement	return - 1 ;	107:16:4027:4036	8213820	1	True				
ANR	8214005	UnaryOperationExpression	- 1		8213820	0					
ANR	8214006	UnaryOperator	-		8213820	0					
ANR	8214007	PrimaryExpression	1		8213820	1					
ANR	8214008	ElseStatement	else		8213820	0					
ANR	8214009	CompoundStatement		32:15:962:962	8213820	0					
ANR	8214010	IfStatement	if ( * p == ' ' )		8213820	0					
ANR	8214011	Condition	* p == ' '	110:16:4085:4093	8213820	0	True				
ANR	8214012	EqualityExpression	* p == ' '		8213820	0		==			
ANR	8214013	UnaryOperationExpression	* p		8213820	0					
ANR	8214014	UnaryOperator	*		8213820	0					
ANR	8214015	Identifier	p		8213820	1					
ANR	8214016	PrimaryExpression	' '		8213820	1					
ANR	8214017	CompoundStatement		33:27:991:991	8213820	1					
ANR	8214018	ExpressionStatement	tokens ++	111:16:4114:4122	8213820	0	True				
ANR	8214019	PostIncDecOperationExpression	tokens ++		8213820	0					
ANR	8214020	Identifier	tokens		8213820	0					
ANR	8214021	IncDec	++		8213820	1					
ANR	8214022	ExpressionStatement	p ++	114:8:4156:4159	8213820	1	True				
ANR	8214023	PostIncDecOperationExpression	p ++		8213820	0					
ANR	8214024	Identifier	p		8213820	0					
ANR	8214025	IncDec	++		8213820	1					
ANR	8214026	IfStatement	if ( * ( p - 1 ) != ' ' )		8213820	12					
ANR	8214027	Condition	* ( p - 1 ) != ' '	117:8:4176:4188	8213820	0	True				
ANR	8214028	EqualityExpression	* ( p - 1 ) != ' '		8213820	0		!=			
ANR	8214029	UnaryOperationExpression	* ( p - 1 )		8213820	0					
ANR	8214030	UnaryOperator	*		8213820	0					
ANR	8214031	AdditiveExpression	p - 1		8213820	1		-			
ANR	8214032	Identifier	p		8213820	0					
ANR	8214033	PrimaryExpression	1		8213820	1					
ANR	8214034	PrimaryExpression	' '		8213820	1					
ANR	8214035	ExpressionStatement	tokens ++	118:8:4199:4207	8213820	1	True				
ANR	8214036	PostIncDecOperationExpression	tokens ++		8213820	0					
ANR	8214037	Identifier	tokens		8213820	0					
ANR	8214038	IncDec	++		8213820	1					
ANR	8214039	ExpressionStatement	tokens ++	121:4:4261:4269	8213820	13	True				
ANR	8214040	PostIncDecOperationExpression	tokens ++		8213820	0					
ANR	8214041	Identifier	tokens		8213820	0					
ANR	8214042	IncDec	++		8213820	1					
ANR	8214043	ExpressionStatement	"parray = ( gs_param_string * ) gs_alloc_bytes ( mem , tokens * sizeof ( gs_param_string ) , ""temporary pdfmark array"" )"	123:4:4276:4384	8213820	14	True				
ANR	8214044	AssignmentExpression	"parray = ( gs_param_string * ) gs_alloc_bytes ( mem , tokens * sizeof ( gs_param_string ) , ""temporary pdfmark array"" )"		8213820	0		=			
ANR	8214045	Identifier	parray		8213820	0					
ANR	8214046	CastExpression	"( gs_param_string * ) gs_alloc_bytes ( mem , tokens * sizeof ( gs_param_string ) , ""temporary pdfmark array"" )"		8213820	1					
ANR	8214047	CastTarget	gs_param_string *		8213820	0					
ANR	8214048	CallExpression	"gs_alloc_bytes ( mem , tokens * sizeof ( gs_param_string ) , ""temporary pdfmark array"" )"		8213820	1					
ANR	8214049	Callee	gs_alloc_bytes		8213820	0					
ANR	8214050	Identifier	gs_alloc_bytes		8213820	0					
ANR	8214051	ArgumentList	mem		8213820	1					
ANR	8214052	Argument	mem		8213820	0					
ANR	8214053	Identifier	mem		8213820	0					
ANR	8214054	Argument	tokens * sizeof ( gs_param_string )		8213820	1					
ANR	8214055	MultiplicativeExpression	tokens * sizeof ( gs_param_string )		8213820	0		*			
ANR	8214056	Identifier	tokens		8213820	0					
ANR	8214057	SizeofExpression	sizeof ( gs_param_string )		8213820	1					
ANR	8214058	Sizeof	sizeof		8213820	0					
ANR	8214059	SizeofOperand	gs_param_string		8213820	1					
ANR	8214060	Argument	"""temporary pdfmark array"""		8213820	2					
ANR	8214061	PrimaryExpression	"""temporary pdfmark array"""		8213820	0					
ANR	8214062	IfStatement	if ( ! parray )		8213820	15					
ANR	8214063	Condition	! parray	124:8:4394:4400	8213820	0	True				
ANR	8214064	UnaryOperationExpression	! parray		8213820	0					
ANR	8214065	UnaryOperator	!		8213820	0					
ANR	8214066	Identifier	parray		8213820	1					
ANR	8214067	CompoundStatement		47:17:1298:1298	8213820	1					
ANR	8214068	ExpressionStatement	"gs_free_object ( mem , copy , ""working buffer for pdfmark processing"" )"	125:8:4413:4479	8213820	0	True				
ANR	8214069	CallExpression	"gs_free_object ( mem , copy , ""working buffer for pdfmark processing"" )"		8213820	0					
ANR	8214070	Callee	gs_free_object		8213820	0					
ANR	8214071	Identifier	gs_free_object		8213820	0					
ANR	8214072	ArgumentList	mem		8213820	1					
ANR	8214073	Argument	mem		8213820	0					
ANR	8214074	Identifier	mem		8213820	0					
ANR	8214075	Argument	copy		8213820	1					
ANR	8214076	Identifier	copy		8213820	0					
ANR	8214077	Argument	"""working buffer for pdfmark processing"""		8213820	2					
ANR	8214078	PrimaryExpression	"""working buffer for pdfmark processing"""		8213820	0					
ANR	8214079	ReturnStatement	return - 1 ;	126:8:4489:4498	8213820	1	True				
ANR	8214080	UnaryOperationExpression	- 1		8213820	0					
ANR	8214081	UnaryOperator	-		8213820	0					
ANR	8214082	PrimaryExpression	1		8213820	1					
ANR	8214083	ExpressionStatement	tokens = 0	129:4:4511:4521	8213820	16	True				
ANR	8214084	AssignmentExpression	tokens = 0		8213820	0		=			
ANR	8214085	Identifier	tokens		8213820	0					
ANR	8214086	PrimaryExpression	0		8213820	1					
ANR	8214087	WhileStatement	while ( * start == ' ' )		8213820	17					
ANR	8214088	Condition	* start == ' '	130:11:4534:4546	8213820	0	True				
ANR	8214089	EqualityExpression	* start == ' '		8213820	0		==			
ANR	8214090	UnaryOperationExpression	* start		8213820	0					
ANR	8214091	UnaryOperator	*		8213820	0					
ANR	8214092	Identifier	start		8213820	1					
ANR	8214093	PrimaryExpression	' '		8213820	1					
ANR	8214094	ExpressionStatement	start ++	131:8:4557:4564	8213820	1	True				
ANR	8214095	PostIncDecOperationExpression	start ++		8213820	0					
ANR	8214096	Identifier	start		8213820	0					
ANR	8214097	IncDec	++		8213820	1					
ANR	8214098	ExpressionStatement	p = start	132:4:4570:4579	8213820	18	True				
ANR	8214099	AssignmentExpression	p = start		8213820	0		=			
ANR	8214100	Identifier	p		8213820	0					
ANR	8214101	Identifier	start		8213820	1					
ANR	8214102	WhileStatement	while ( * p != 0x00 )		8213820	19					
ANR	8214103	Condition	* p != 0x00	134:11:4593:4602	8213820	0	True				
ANR	8214104	EqualityExpression	* p != 0x00		8213820	0		!=			
ANR	8214105	UnaryOperationExpression	* p		8213820	0					
ANR	8214106	UnaryOperator	*		8213820	0					
ANR	8214107	Identifier	p		8213820	1					
ANR	8214108	PrimaryExpression	0x00		8213820	1					
ANR	8214109	CompoundStatement		57:22:1499:1499	8213820	1					
ANR	8214110	IfStatement	if ( * p == '(' )		8213820	0					
ANR	8214111	Condition	* p == '('	135:11:4617:4625	8213820	0	True				
ANR	8214112	EqualityExpression	* p == '('		8213820	0		==			
ANR	8214113	UnaryOperationExpression	* p		8213820	0					
ANR	8214114	UnaryOperator	*		8213820	0					
ANR	8214115	Identifier	p		8213820	1					
ANR	8214116	PrimaryExpression	'('		8213820	1					
ANR	8214117	CompoundStatement		58:22:1523:1523	8213820	1					
ANR	8214118	WhileStatement	while ( * p != ')' && * p != 0x00 )		8213820	0					
ANR	8214119	Condition	* p != ')' && * p != 0x00	136:19:4649:4671	8213820	0	True				
ANR	8214120	AndExpression	* p != ')' && * p != 0x00		8213820	0		&&			
ANR	8214121	EqualityExpression	* p != ')'		8213820	0		!=			
ANR	8214122	UnaryOperationExpression	* p		8213820	0					
ANR	8214123	UnaryOperator	*		8213820	0					
ANR	8214124	Identifier	p		8213820	1					
ANR	8214125	PrimaryExpression	')'		8213820	1					
ANR	8214126	EqualityExpression	* p != 0x00		8213820	1		!=			
ANR	8214127	UnaryOperationExpression	* p		8213820	0					
ANR	8214128	UnaryOperator	*		8213820	0					
ANR	8214129	Identifier	p		8213820	1					
ANR	8214130	PrimaryExpression	0x00		8213820	1					
ANR	8214131	CompoundStatement		59:44:1569:1569	8213820	1					
ANR	8214132	IfStatement	if ( * p == '\\\\' )		8213820	0					
ANR	8214133	Condition	* p == '\\\\'	137:20:4696:4705	8213820	0	True				
ANR	8214134	EqualityExpression	* p == '\\\\'		8213820	0		==			
ANR	8214135	UnaryOperationExpression	* p		8213820	0					
ANR	8214136	UnaryOperator	*		8213820	0					
ANR	8214137	Identifier	p		8213820	1					
ANR	8214138	PrimaryExpression	'\\\\'		8213820	1					
ANR	8214139	ExpressionStatement	p ++	138:20:4728:4731	8213820	1	True				
ANR	8214140	PostIncDecOperationExpression	p ++		8213820	0					
ANR	8214141	Identifier	p		8213820	0					
ANR	8214142	IncDec	++		8213820	1					
ANR	8214143	ExpressionStatement	p ++	139:16:4749:4752	8213820	1	True				
ANR	8214144	PostIncDecOperationExpression	p ++		8213820	0					
ANR	8214145	Identifier	p		8213820	0					
ANR	8214146	IncDec	++		8213820	1					
ANR	8214147	IfStatement	if ( * p != ')' )		8213820	1					
ANR	8214148	Condition	* p != ')'	141:16:4784:4792	8213820	0	True				
ANR	8214149	EqualityExpression	* p != ')'		8213820	0		!=			
ANR	8214150	UnaryOperationExpression	* p		8213820	0					
ANR	8214151	UnaryOperator	*		8213820	0					
ANR	8214152	Identifier	p		8213820	1					
ANR	8214153	PrimaryExpression	')'		8213820	1					
ANR	8214154	CompoundStatement		64:27:1690:1690	8213820	1					
ANR	8214155	ExpressionStatement	"gs_free_object ( mem , copy , ""working buffer for pdfmark processing"" )"	142:16:4813:4879	8213820	0	True				
ANR	8214156	CallExpression	"gs_free_object ( mem , copy , ""working buffer for pdfmark processing"" )"		8213820	0					
ANR	8214157	Callee	gs_free_object		8213820	0					
ANR	8214158	Identifier	gs_free_object		8213820	0					
ANR	8214159	ArgumentList	mem		8213820	1					
ANR	8214160	Argument	mem		8213820	0					
ANR	8214161	Identifier	mem		8213820	0					
ANR	8214162	Argument	copy		8213820	1					
ANR	8214163	Identifier	copy		8213820	0					
ANR	8214164	Argument	"""working buffer for pdfmark processing"""		8213820	2					
ANR	8214165	PrimaryExpression	"""working buffer for pdfmark processing"""		8213820	0					
ANR	8214166	ReturnStatement	return - 1 ;	143:16:4897:4906	8213820	1	True				
ANR	8214167	UnaryOperationExpression	- 1		8213820	0					
ANR	8214168	UnaryOperator	-		8213820	0					
ANR	8214169	PrimaryExpression	1		8213820	1					
ANR	8214170	ElseStatement	else		8213820	0					
ANR	8214171	CompoundStatement		68:15:1832:1832	8213820	0					
ANR	8214172	IfStatement	if ( * p == ' ' )		8213820	0					
ANR	8214173	Condition	* p == ' '	146:16:4955:4963	8213820	0	True				
ANR	8214174	EqualityExpression	* p == ' '		8213820	0		==			
ANR	8214175	UnaryOperationExpression	* p		8213820	0					
ANR	8214176	UnaryOperator	*		8213820	0					
ANR	8214177	Identifier	p		8213820	1					
ANR	8214178	PrimaryExpression	' '		8213820	1					
ANR	8214179	CompoundStatement		69:27:1861:1861	8213820	1					
ANR	8214180	IfStatement	"if ( strncmp ( start , ""<<"" , 2 ) == 0 )"		8213820	0					
ANR	8214181	Condition	"strncmp ( start , ""<<"" , 2 ) == 0"	147:20:4988:5015	8213820	0	True				
ANR	8214182	EqualityExpression	"strncmp ( start , ""<<"" , 2 ) == 0"		8213820	0		==			
ANR	8214183	CallExpression	"strncmp ( start , ""<<"" , 2 )"		8213820	0					
ANR	8214184	Callee	strncmp		8213820	0					
ANR	8214185	Identifier	strncmp		8213820	0					
ANR	8214186	ArgumentList	start		8213820	1					
ANR	8214187	Argument	start		8213820	0					
ANR	8214188	Identifier	start		8213820	0					
ANR	8214189	Argument	"""<<"""		8213820	1					
ANR	8214190	PrimaryExpression	"""<<"""		8213820	0					
ANR	8214191	Argument	2		8213820	2					
ANR	8214192	PrimaryExpression	2		8213820	0					
ANR	8214193	PrimaryExpression	0		8213820	1					
ANR	8214194	CompoundStatement		70:50:1913:1913	8213820	1					
ANR	8214195	ExpressionStatement	putdict = true	148:20:5040:5054	8213820	0	True				
ANR	8214196	AssignmentExpression	putdict = true		8213820	0		=			
ANR	8214197	Identifier	putdict		8213820	0					
ANR	8214198	Identifier	true		8213820	1					
ANR	8214199	ElseStatement	else		8213820	0					
ANR	8214200	CompoundStatement		72:23:1974:1974	8213820	0					
ANR	8214201	IfStatement	"if ( strncmp ( start , "">>"" , 2 ) != 0 )"		8213820	0					
ANR	8214202	Condition	"strncmp ( start , "">>"" , 2 ) != 0"	150:24:5105:5132	8213820	0	True				
ANR	8214203	EqualityExpression	"strncmp ( start , "">>"" , 2 ) != 0"		8213820	0		!=			
ANR	8214204	CallExpression	"strncmp ( start , "">>"" , 2 )"		8213820	0					
ANR	8214205	Callee	strncmp		8213820	0					
ANR	8214206	Identifier	strncmp		8213820	0					
ANR	8214207	ArgumentList	start		8213820	1					
ANR	8214208	Argument	start		8213820	0					
ANR	8214209	Identifier	start		8213820	0					
ANR	8214210	Argument	""">>"""		8213820	1					
ANR	8214211	PrimaryExpression	""">>"""		8213820	0					
ANR	8214212	Argument	2		8213820	2					
ANR	8214213	PrimaryExpression	2		8213820	0					
ANR	8214214	PrimaryExpression	0		8213820	1					
ANR	8214215	CompoundStatement		73:54:2030:2030	8213820	1					
ANR	8214216	ExpressionStatement	* p = 0x00	151:24:5161:5170	8213820	0	True				
ANR	8214217	AssignmentExpression	* p = 0x00		8213820	0		=			
ANR	8214218	UnaryOperationExpression	* p		8213820	0					
ANR	8214219	UnaryOperator	*		8213820	0					
ANR	8214220	Identifier	p		8213820	1					
ANR	8214221	PrimaryExpression	0x00		8213820	1					
ANR	8214222	ExpressionStatement	parray [ tokens ] . data = ( const byte * ) start	152:24:5196:5237	8213820	1	True				
ANR	8214223	AssignmentExpression	parray [ tokens ] . data = ( const byte * ) start		8213820	0		=			
ANR	8214224	MemberAccess	parray [ tokens ] . data		8213820	0					
ANR	8214225	ArrayIndexing	parray [ tokens ]		8213820	0					
ANR	8214226	Identifier	parray		8213820	0					
ANR	8214227	Identifier	tokens		8213820	1					
ANR	8214228	Identifier	data		8213820	1					
ANR	8214229	CastExpression	( const byte * ) start		8213820	1					
ANR	8214230	CastTarget	const byte *		8213820	0					
ANR	8214231	Identifier	start		8213820	1					
ANR	8214232	ExpressionStatement	parray [ tokens ] . size = strlen ( start )	153:24:5263:5298	8213820	2	True				
ANR	8214233	AssignmentExpression	parray [ tokens ] . size = strlen ( start )		8213820	0		=			
ANR	8214234	MemberAccess	parray [ tokens ] . size		8213820	0					
ANR	8214235	ArrayIndexing	parray [ tokens ]		8213820	0					
ANR	8214236	Identifier	parray		8213820	0					
ANR	8214237	Identifier	tokens		8213820	1					
ANR	8214238	Identifier	size		8213820	1					
ANR	8214239	CallExpression	strlen ( start )		8213820	1					
ANR	8214240	Callee	strlen		8213820	0					
ANR	8214241	Identifier	strlen		8213820	0					
ANR	8214242	ArgumentList	start		8213820	1					
ANR	8214243	Argument	start		8213820	0					
ANR	8214244	Identifier	start		8213820	0					
ANR	8214245	ExpressionStatement	parray [ tokens ++ ] . persistent = false	154:24:5324:5359	8213820	3	True				
ANR	8214246	AssignmentExpression	parray [ tokens ++ ] . persistent = false		8213820	0		=			
ANR	8214247	MemberAccess	parray [ tokens ++ ] . persistent		8213820	0					
ANR	8214248	ArrayIndexing	parray [ tokens ++ ]		8213820	0					
ANR	8214249	Identifier	parray		8213820	0					
ANR	8214250	PostIncDecOperationExpression	tokens ++		8213820	1					
ANR	8214251	Identifier	tokens		8213820	0					
ANR	8214252	IncDec	++		8213820	1					
ANR	8214253	Identifier	persistent		8213820	1					
ANR	8214254	Identifier	false		8213820	1					
ANR	8214255	ExpressionStatement	start = ++ p	157:16:5417:5428	8213820	1	True				
ANR	8214256	AssignmentExpression	start = ++ p		8213820	0		=			
ANR	8214257	Identifier	start		8213820	0					
ANR	8214258	UnaryExpression	++ p		8213820	1					
ANR	8214259	IncDec	++		8213820	0					
ANR	8214260	Identifier	p		8213820	1					
ANR	8214261	ElseStatement	else		8213820	0					
ANR	8214262	ExpressionStatement	p ++	159:16:5465:5468	8213820	0	True				
ANR	8214263	PostIncDecOperationExpression	p ++		8213820	0					
ANR	8214264	Identifier	p		8213820	0					
ANR	8214265	IncDec	++		8213820	1					
ANR	8214266	IfStatement	if ( * ( p - 1 ) != ' ' )		8213820	20					
ANR	8214267	Condition	* ( p - 1 ) != ' '	162:8:5494:5506	8213820	0	True				
ANR	8214268	EqualityExpression	* ( p - 1 ) != ' '		8213820	0		!=			
ANR	8214269	UnaryOperationExpression	* ( p - 1 )		8213820	0					
ANR	8214270	UnaryOperator	*		8213820	0					
ANR	8214271	AdditiveExpression	p - 1		8213820	1		-			
ANR	8214272	Identifier	p		8213820	0					
ANR	8214273	PrimaryExpression	1		8213820	1					
ANR	8214274	PrimaryExpression	' '		8213820	1					
ANR	8214275	CompoundStatement		85:23:2404:2404	8213820	1					
ANR	8214276	ExpressionStatement	parray [ tokens ] . data = ( const byte * ) start	163:8:5519:5560	8213820	0	True				
ANR	8214277	AssignmentExpression	parray [ tokens ] . data = ( const byte * ) start		8213820	0		=			
ANR	8214278	MemberAccess	parray [ tokens ] . data		8213820	0					
ANR	8214279	ArrayIndexing	parray [ tokens ]		8213820	0					
ANR	8214280	Identifier	parray		8213820	0					
ANR	8214281	Identifier	tokens		8213820	1					
ANR	8214282	Identifier	data		8213820	1					
ANR	8214283	CastExpression	( const byte * ) start		8213820	1					
ANR	8214284	CastTarget	const byte *		8213820	0					
ANR	8214285	Identifier	start		8213820	1					
ANR	8214286	ExpressionStatement	parray [ tokens ] . size = strlen ( start )	164:8:5570:5605	8213820	1	True				
ANR	8214287	AssignmentExpression	parray [ tokens ] . size = strlen ( start )		8213820	0		=			
ANR	8214288	MemberAccess	parray [ tokens ] . size		8213820	0					
ANR	8214289	ArrayIndexing	parray [ tokens ]		8213820	0					
ANR	8214290	Identifier	parray		8213820	0					
ANR	8214291	Identifier	tokens		8213820	1					
ANR	8214292	Identifier	size		8213820	1					
ANR	8214293	CallExpression	strlen ( start )		8213820	1					
ANR	8214294	Callee	strlen		8213820	0					
ANR	8214295	Identifier	strlen		8213820	0					
ANR	8214296	ArgumentList	start		8213820	1					
ANR	8214297	Argument	start		8213820	0					
ANR	8214298	Identifier	start		8213820	0					
ANR	8214299	ExpressionStatement	parray [ tokens ++ ] . persistent = false	165:8:5615:5650	8213820	2	True				
ANR	8214300	AssignmentExpression	parray [ tokens ++ ] . persistent = false		8213820	0		=			
ANR	8214301	MemberAccess	parray [ tokens ++ ] . persistent		8213820	0					
ANR	8214302	ArrayIndexing	parray [ tokens ++ ]		8213820	0					
ANR	8214303	Identifier	parray		8213820	0					
ANR	8214304	PostIncDecOperationExpression	tokens ++		8213820	1					
ANR	8214305	Identifier	tokens		8213820	0					
ANR	8214306	IncDec	++		8213820	1					
ANR	8214307	Identifier	persistent		8213820	1					
ANR	8214308	Identifier	false		8213820	1					
ANR	8214309	ExpressionStatement	parray [ tokens ] . data = parray [ tokens - 1 ] . data	169:4:5736:5781	8213820	21	True				
ANR	8214310	AssignmentExpression	parray [ tokens ] . data = parray [ tokens - 1 ] . data		8213820	0		=			
ANR	8214311	MemberAccess	parray [ tokens ] . data		8213820	0					
ANR	8214312	ArrayIndexing	parray [ tokens ]		8213820	0					
ANR	8214313	Identifier	parray		8213820	0					
ANR	8214314	Identifier	tokens		8213820	1					
ANR	8214315	Identifier	data		8213820	1					
ANR	8214316	MemberAccess	parray [ tokens - 1 ] . data		8213820	1					
ANR	8214317	ArrayIndexing	parray [ tokens - 1 ]		8213820	0					
ANR	8214318	Identifier	parray		8213820	0					
ANR	8214319	AdditiveExpression	tokens - 1		8213820	1		-			
ANR	8214320	Identifier	tokens		8213820	0					
ANR	8214321	PrimaryExpression	1		8213820	1					
ANR	8214322	Identifier	data		8213820	1					
ANR	8214323	ExpressionStatement	parray [ tokens ] . size = parray [ tokens - 1 ] . size	170:4:5787:5832	8213820	22	True				
ANR	8214324	AssignmentExpression	parray [ tokens ] . size = parray [ tokens - 1 ] . size		8213820	0		=			
ANR	8214325	MemberAccess	parray [ tokens ] . size		8213820	0					
ANR	8214326	ArrayIndexing	parray [ tokens ]		8213820	0					
ANR	8214327	Identifier	parray		8213820	0					
ANR	8214328	Identifier	tokens		8213820	1					
ANR	8214329	Identifier	size		8213820	1					
ANR	8214330	MemberAccess	parray [ tokens - 1 ] . size		8213820	1					
ANR	8214331	ArrayIndexing	parray [ tokens - 1 ]		8213820	0					
ANR	8214332	Identifier	parray		8213820	0					
ANR	8214333	AdditiveExpression	tokens - 1		8213820	1		-			
ANR	8214334	Identifier	tokens		8213820	0					
ANR	8214335	PrimaryExpression	1		8213820	1					
ANR	8214336	Identifier	size		8213820	1					
ANR	8214337	ExpressionStatement	parray [ tokens ] . persistent = parray [ tokens - 1 ] . persistent	171:4:5838:5895	8213820	23	True				
ANR	8214338	AssignmentExpression	parray [ tokens ] . persistent = parray [ tokens - 1 ] . persistent		8213820	0		=			
ANR	8214339	MemberAccess	parray [ tokens ] . persistent		8213820	0					
ANR	8214340	ArrayIndexing	parray [ tokens ]		8213820	0					
ANR	8214341	Identifier	parray		8213820	0					
ANR	8214342	Identifier	tokens		8213820	1					
ANR	8214343	Identifier	persistent		8213820	1					
ANR	8214344	MemberAccess	parray [ tokens - 1 ] . persistent		8213820	1					
ANR	8214345	ArrayIndexing	parray [ tokens - 1 ]		8213820	0					
ANR	8214346	Identifier	parray		8213820	0					
ANR	8214347	AdditiveExpression	tokens - 1		8213820	1		-			
ANR	8214348	Identifier	tokens		8213820	0					
ANR	8214349	PrimaryExpression	1		8213820	1					
ANR	8214350	Identifier	persistent		8213820	1					
ANR	8214351	ExpressionStatement	"parray [ tokens - 1 ] . data = ( const byte * ) ""[0 0 0 0 0 0]"""	172:4:5901:5956	8213820	24	True				
ANR	8214352	AssignmentExpression	"parray [ tokens - 1 ] . data = ( const byte * ) ""[0 0 0 0 0 0]"""		8213820	0		=			
ANR	8214353	MemberAccess	parray [ tokens - 1 ] . data		8213820	0					
ANR	8214354	ArrayIndexing	parray [ tokens - 1 ]		8213820	0					
ANR	8214355	Identifier	parray		8213820	0					
ANR	8214356	AdditiveExpression	tokens - 1		8213820	1		-			
ANR	8214357	Identifier	tokens		8213820	0					
ANR	8214358	PrimaryExpression	1		8213820	1					
ANR	8214359	Identifier	data		8213820	1					
ANR	8214360	CastExpression	"( const byte * ) ""[0 0 0 0 0 0]"""		8213820	1					
ANR	8214361	CastTarget	const byte *		8213820	0					
ANR	8214362	PrimaryExpression	"""[0 0 0 0 0 0]"""		8213820	1					
ANR	8214363	ExpressionStatement	parray [ tokens - 1 ] . size = 13	173:4:5962:5990	8213820	25	True				
ANR	8214364	AssignmentExpression	parray [ tokens - 1 ] . size = 13		8213820	0		=			
ANR	8214365	MemberAccess	parray [ tokens - 1 ] . size		8213820	0					
ANR	8214366	ArrayIndexing	parray [ tokens - 1 ]		8213820	0					
ANR	8214367	Identifier	parray		8213820	0					
ANR	8214368	AdditiveExpression	tokens - 1		8213820	1		-			
ANR	8214369	Identifier	tokens		8213820	0					
ANR	8214370	PrimaryExpression	1		8213820	1					
ANR	8214371	Identifier	size		8213820	1					
ANR	8214372	PrimaryExpression	13		8213820	1					
ANR	8214373	ExpressionStatement	parray [ tokens - 1 ] . persistent = false	174:4:5996:6033	8213820	26	True				
ANR	8214374	AssignmentExpression	parray [ tokens - 1 ] . persistent = false		8213820	0		=			
ANR	8214375	MemberAccess	parray [ tokens - 1 ] . persistent		8213820	0					
ANR	8214376	ArrayIndexing	parray [ tokens - 1 ]		8213820	0					
ANR	8214377	Identifier	parray		8213820	0					
ANR	8214378	AdditiveExpression	tokens - 1		8213820	1		-			
ANR	8214379	Identifier	tokens		8213820	0					
ANR	8214380	PrimaryExpression	1		8213820	1					
ANR	8214381	Identifier	persistent		8213820	1					
ANR	8214382	Identifier	false		8213820	1					
ANR	8214383	IfStatement	if ( parray [ tokens ] . data [ 0 ] != '/' )		8213820	27					
ANR	8214384	Condition	parray [ tokens ] . data [ 0 ] != '/'	179:8:6209:6237	8213820	0	True				
ANR	8214385	EqualityExpression	parray [ tokens ] . data [ 0 ] != '/'		8213820	0		!=			
ANR	8214386	ArrayIndexing	parray [ tokens ] . data [ 0 ]		8213820	0					
ANR	8214387	MemberAccess	parray [ tokens ] . data		8213820	0					
ANR	8214388	ArrayIndexing	parray [ tokens ]		8213820	0					
ANR	8214389	Identifier	parray		8213820	0					
ANR	8214390	Identifier	tokens		8213820	1					
ANR	8214391	Identifier	data		8213820	1					
ANR	8214392	PrimaryExpression	0		8213820	1					
ANR	8214393	PrimaryExpression	'/'		8213820	1					
ANR	8214394	CompoundStatement		102:39:3135:3135	8213820	1					
ANR	8214395	ExpressionStatement	"gs_free_object ( mem , copy , ""working buffer for pdfmark processing"" )"	180:8:6250:6316	8213820	0	True				
ANR	8214396	CallExpression	"gs_free_object ( mem , copy , ""working buffer for pdfmark processing"" )"		8213820	0					
ANR	8214397	Callee	gs_free_object		8213820	0					
ANR	8214398	Identifier	gs_free_object		8213820	0					
ANR	8214399	ArgumentList	mem		8213820	1					
ANR	8214400	Argument	mem		8213820	0					
ANR	8214401	Identifier	mem		8213820	0					
ANR	8214402	Argument	copy		8213820	1					
ANR	8214403	Identifier	copy		8213820	0					
ANR	8214404	Argument	"""working buffer for pdfmark processing"""		8213820	2					
ANR	8214405	PrimaryExpression	"""working buffer for pdfmark processing"""		8213820	0					
ANR	8214406	ExpressionStatement	"gs_free_object ( mem , parray , ""temporary pdfmark array"" )"	181:8:6326:6380	8213820	1	True				
ANR	8214407	CallExpression	"gs_free_object ( mem , parray , ""temporary pdfmark array"" )"		8213820	0					
ANR	8214408	Callee	gs_free_object		8213820	0					
ANR	8214409	Identifier	gs_free_object		8213820	0					
ANR	8214410	ArgumentList	mem		8213820	1					
ANR	8214411	Argument	mem		8213820	0					
ANR	8214412	Identifier	mem		8213820	0					
ANR	8214413	Argument	parray		8213820	1					
ANR	8214414	Identifier	parray		8213820	0					
ANR	8214415	Argument	"""temporary pdfmark array"""		8213820	2					
ANR	8214416	PrimaryExpression	"""temporary pdfmark array"""		8213820	0					
ANR	8214417	ReturnStatement	return - 1 ;	182:8:6390:6399	8213820	2	True				
ANR	8214418	UnaryOperationExpression	- 1		8213820	0					
ANR	8214419	UnaryOperator	-		8213820	0					
ANR	8214420	PrimaryExpression	1		8213820	1					
ANR	8214421	ElseStatement	else		8213820	0					
ANR	8214422	CompoundStatement		106:11:3307:3307	8213820	0					
ANR	8214423	ExpressionStatement	parray [ tokens ] . data ++	184:8:6422:6443	8213820	0	True				
ANR	8214424	PostIncDecOperationExpression	parray [ tokens ] . data ++		8213820	0					
ANR	8214425	MemberAccess	parray [ tokens ] . data		8213820	0					
ANR	8214426	ArrayIndexing	parray [ tokens ]		8213820	0					
ANR	8214427	Identifier	parray		8213820	0					
ANR	8214428	Identifier	tokens		8213820	1					
ANR	8214429	Identifier	data		8213820	1					
ANR	8214430	IncDec	++		8213820	1					
ANR	8214431	ExpressionStatement	parray [ tokens ] . size --	185:8:6453:6474	8213820	1	True				
ANR	8214432	PostIncDecOperationExpression	parray [ tokens ] . size --		8213820	0					
ANR	8214433	MemberAccess	parray [ tokens ] . size		8213820	0					
ANR	8214434	ArrayIndexing	parray [ tokens ]		8213820	0					
ANR	8214435	Identifier	parray		8213820	0					
ANR	8214436	Identifier	tokens		8213820	1					
ANR	8214437	Identifier	size		8213820	1					
ANR	8214438	IncDec	--		8213820	1					
ANR	8214439	IfStatement	"if ( putdict && strncmp ( ( const char * ) ( parray [ tokens ] . data ) , ""PUT"" , 3 ) == 0 )"		8213820	28					
ANR	8214440	Condition	"putdict && strncmp ( ( const char * ) ( parray [ tokens ] . data ) , ""PUT"" , 3 ) == 0"	191:8:6611:6680	8213820	0	True				
ANR	8214441	AndExpression	"putdict && strncmp ( ( const char * ) ( parray [ tokens ] . data ) , ""PUT"" , 3 ) == 0"		8213820	0		&&			
ANR	8214442	Identifier	putdict		8213820	0					
ANR	8214443	EqualityExpression	"strncmp ( ( const char * ) ( parray [ tokens ] . data ) , ""PUT"" , 3 ) == 0"		8213820	1		==			
ANR	8214444	CallExpression	"strncmp ( ( const char * ) ( parray [ tokens ] . data ) , ""PUT"" , 3 )"		8213820	0					
ANR	8214445	Callee	strncmp		8213820	0					
ANR	8214446	Identifier	strncmp		8213820	0					
ANR	8214447	ArgumentList	( const char * ) ( parray [ tokens ] . data )		8213820	1					
ANR	8214448	Argument	( const char * ) ( parray [ tokens ] . data )		8213820	0					
ANR	8214449	CastExpression	( const char * ) ( parray [ tokens ] . data )		8213820	0					
ANR	8214450	CastTarget	const char *		8213820	0					
ANR	8214451	MemberAccess	parray [ tokens ] . data		8213820	1					
ANR	8214452	ArrayIndexing	parray [ tokens ]		8213820	0					
ANR	8214453	Identifier	parray		8213820	0					
ANR	8214454	Identifier	tokens		8213820	1					
ANR	8214455	Identifier	data		8213820	1					
ANR	8214456	Argument	"""PUT"""		8213820	1					
ANR	8214457	PrimaryExpression	"""PUT"""		8213820	0					
ANR	8214458	Argument	3		8213820	2					
ANR	8214459	PrimaryExpression	3		8213820	0					
ANR	8214460	PrimaryExpression	0		8213820	1					
ANR	8214461	CompoundStatement		114:80:3578:3578	8213820	1					
ANR	8214462	ExpressionStatement	"parray [ tokens ] . data = ( const byte * ) "".PUTDICT"""	192:8:6693:6739	8213820	0	True				
ANR	8214463	AssignmentExpression	"parray [ tokens ] . data = ( const byte * ) "".PUTDICT"""		8213820	0		=			
ANR	8214464	MemberAccess	parray [ tokens ] . data		8213820	0					
ANR	8214465	ArrayIndexing	parray [ tokens ]		8213820	0					
ANR	8214466	Identifier	parray		8213820	0					
ANR	8214467	Identifier	tokens		8213820	1					
ANR	8214468	Identifier	data		8213820	1					
ANR	8214469	CastExpression	"( const byte * ) "".PUTDICT"""		8213820	1					
ANR	8214470	CastTarget	const byte *		8213820	0					
ANR	8214471	PrimaryExpression	""".PUTDICT"""		8213820	1					
ANR	8214472	ExpressionStatement	parray [ tokens ] . size = 8	193:8:6749:6772	8213820	1	True				
ANR	8214473	AssignmentExpression	parray [ tokens ] . size = 8		8213820	0		=			
ANR	8214474	MemberAccess	parray [ tokens ] . size		8213820	0					
ANR	8214475	ArrayIndexing	parray [ tokens ]		8213820	0					
ANR	8214476	Identifier	parray		8213820	0					
ANR	8214477	Identifier	tokens		8213820	1					
ANR	8214478	Identifier	size		8213820	1					
ANR	8214479	PrimaryExpression	8		8213820	1					
ANR	8214480	ExpressionStatement	parray [ tokens ] . persistent = false	194:8:6782:6815	8213820	2	True				
ANR	8214481	AssignmentExpression	parray [ tokens ] . persistent = false		8213820	0		=			
ANR	8214482	MemberAccess	parray [ tokens ] . persistent		8213820	0					
ANR	8214483	ArrayIndexing	parray [ tokens ]		8213820	0					
ANR	8214484	Identifier	parray		8213820	0					
ANR	8214485	Identifier	tokens		8213820	1					
ANR	8214486	Identifier	persistent		8213820	1					
ANR	8214487	Identifier	false		8213820	1					
ANR	8214488	IfStatement	"if ( strncmp ( ( const char * ) ( parray [ tokens ] . data ) , ""PUTFILE"" , 7 ) == 0 )"		8213820	29					
ANR	8214489	Condition	"strncmp ( ( const char * ) ( parray [ tokens ] . data ) , ""PUTFILE"" , 7 ) == 0"	200:8:7086:7148	8213820	0	True				
ANR	8214490	EqualityExpression	"strncmp ( ( const char * ) ( parray [ tokens ] . data ) , ""PUTFILE"" , 7 ) == 0"		8213820	0		==			
ANR	8214491	CallExpression	"strncmp ( ( const char * ) ( parray [ tokens ] . data ) , ""PUTFILE"" , 7 )"		8213820	0					
ANR	8214492	Callee	strncmp		8213820	0					
ANR	8214493	Identifier	strncmp		8213820	0					
ANR	8214494	ArgumentList	( const char * ) ( parray [ tokens ] . data )		8213820	1					
ANR	8214495	Argument	( const char * ) ( parray [ tokens ] . data )		8213820	0					
ANR	8214496	CastExpression	( const char * ) ( parray [ tokens ] . data )		8213820	0					
ANR	8214497	CastTarget	const char *		8213820	0					
ANR	8214498	MemberAccess	parray [ tokens ] . data		8213820	1					
ANR	8214499	ArrayIndexing	parray [ tokens ]		8213820	0					
ANR	8214500	Identifier	parray		8213820	0					
ANR	8214501	Identifier	tokens		8213820	1					
ANR	8214502	Identifier	data		8213820	1					
ANR	8214503	Argument	"""PUTFILE"""		8213820	1					
ANR	8214504	PrimaryExpression	"""PUTFILE"""		8213820	0					
ANR	8214505	Argument	7		8213820	2					
ANR	8214506	PrimaryExpression	7		8213820	0					
ANR	8214507	PrimaryExpression	0		8213820	1					
ANR	8214508	CompoundStatement		126:8:4097:4106	8213820	1					
ANR	8214509	IdentifierDeclStatement	FILE * f ;	201:8:7161:7168	8213820	0	True				
ANR	8214510	IdentifierDecl	* f		8213820	0					
ANR	8214511	IdentifierDeclType	FILE *		8213820	0					
ANR	8214512	Identifier	f		8213820	1					
ANR	8214513	IdentifierDeclStatement	char * filename ;	202:8:7178:7192	8213820	1	True				
ANR	8214514	IdentifierDecl	* filename		8213820	0					
ANR	8214515	IdentifierDeclType	char *		8213820	0					
ANR	8214516	Identifier	filename		8213820	1					
ANR	8214517	IdentifierDeclStatement	int bytes ;	203:8:7202:7211	8213820	2	True				
ANR	8214518	IdentifierDecl	bytes		8213820	0					
ANR	8214519	IdentifierDeclType	int		8213820	0					
ANR	8214520	Identifier	bytes		8213820	1					
ANR	8214521	IfStatement	if ( parray [ tokens - 2 ] . data [ 0 ] != '(' )		8213820	3					
ANR	8214522	Condition	parray [ tokens - 2 ] . data [ 0 ] != '('	205:12:7226:7258	8213820	0	True				
ANR	8214523	EqualityExpression	parray [ tokens - 2 ] . data [ 0 ] != '('		8213820	0		!=			
ANR	8214524	ArrayIndexing	parray [ tokens - 2 ] . data [ 0 ]		8213820	0					
ANR	8214525	MemberAccess	parray [ tokens - 2 ] . data		8213820	0					
ANR	8214526	ArrayIndexing	parray [ tokens - 2 ]		8213820	0					
ANR	8214527	Identifier	parray		8213820	0					
ANR	8214528	AdditiveExpression	tokens - 2		8213820	1		-			
ANR	8214529	Identifier	tokens		8213820	0					
ANR	8214530	PrimaryExpression	2		8213820	1					
ANR	8214531	Identifier	data		8213820	1					
ANR	8214532	PrimaryExpression	0		8213820	1					
ANR	8214533	PrimaryExpression	'('		8213820	1					
ANR	8214534	CompoundStatement		128:47:4156:4156	8213820	1					
ANR	8214535	ExpressionStatement	"gs_free_object ( mem , copy , ""working buffer for pdfmark processing"" )"	206:12:7275:7341	8213820	0	True				
ANR	8214536	CallExpression	"gs_free_object ( mem , copy , ""working buffer for pdfmark processing"" )"		8213820	0					
ANR	8214537	Callee	gs_free_object		8213820	0					
ANR	8214538	Identifier	gs_free_object		8213820	0					
ANR	8214539	ArgumentList	mem		8213820	1					
ANR	8214540	Argument	mem		8213820	0					
ANR	8214541	Identifier	mem		8213820	0					
ANR	8214542	Argument	copy		8213820	1					
ANR	8214543	Identifier	copy		8213820	0					
ANR	8214544	Argument	"""working buffer for pdfmark processing"""		8213820	2					
ANR	8214545	PrimaryExpression	"""working buffer for pdfmark processing"""		8213820	0					
ANR	8214546	ExpressionStatement	"gs_free_object ( mem , parray , ""temporary pdfmark array"" )"	207:12:7355:7409	8213820	1	True				
ANR	8214547	CallExpression	"gs_free_object ( mem , parray , ""temporary pdfmark array"" )"		8213820	0					
ANR	8214548	Callee	gs_free_object		8213820	0					
ANR	8214549	Identifier	gs_free_object		8213820	0					
ANR	8214550	ArgumentList	mem		8213820	1					
ANR	8214551	Argument	mem		8213820	0					
ANR	8214552	Identifier	mem		8213820	0					
ANR	8214553	Argument	parray		8213820	1					
ANR	8214554	Identifier	parray		8213820	0					
ANR	8214555	Argument	"""temporary pdfmark array"""		8213820	2					
ANR	8214556	PrimaryExpression	"""temporary pdfmark array"""		8213820	0					
ANR	8214557	ReturnStatement	return - 1 ;	208:12:7423:7432	8213820	2	True				
ANR	8214558	UnaryOperationExpression	- 1		8213820	0					
ANR	8214559	UnaryOperator	-		8213820	0					
ANR	8214560	PrimaryExpression	1		8213820	1					
ANR	8214561	ExpressionStatement	filename = ( char * ) & ( parray [ tokens - 2 ] . data [ 1 ] )	210:8:7452:7500	8213820	4	True				
ANR	8214562	AssignmentExpression	filename = ( char * ) & ( parray [ tokens - 2 ] . data [ 1 ] )		8213820	0		=			
ANR	8214563	Identifier	filename		8213820	0					
ANR	8214564	CastExpression	( char * ) & ( parray [ tokens - 2 ] . data [ 1 ] )		8213820	1					
ANR	8214565	CastTarget	char *		8213820	0					
ANR	8214566	UnaryOperationExpression	& ( parray [ tokens - 2 ] . data [ 1 ] )		8213820	1					
ANR	8214567	UnaryOperator	&		8213820	0					
ANR	8214568	ArrayIndexing	parray [ tokens - 2 ] . data [ 1 ]		8213820	1					
ANR	8214569	MemberAccess	parray [ tokens - 2 ] . data		8213820	0					
ANR	8214570	ArrayIndexing	parray [ tokens - 2 ]		8213820	0					
ANR	8214571	Identifier	parray		8213820	0					
ANR	8214572	AdditiveExpression	tokens - 2		8213820	1		-			
ANR	8214573	Identifier	tokens		8213820	0					
ANR	8214574	PrimaryExpression	2		8213820	1					
ANR	8214575	Identifier	data		8213820	1					
ANR	8214576	PrimaryExpression	1		8213820	1					
ANR	8214577	ExpressionStatement	filename [ strlen ( filename ) - 1 ] = 0x00	211:8:7510:7547	8213820	5	True				
ANR	8214578	AssignmentExpression	filename [ strlen ( filename ) - 1 ] = 0x00		8213820	0		=			
ANR	8214579	ArrayIndexing	filename [ strlen ( filename ) - 1 ]		8213820	0					
ANR	8214580	Identifier	filename		8213820	0					
ANR	8214581	AdditiveExpression	strlen ( filename ) - 1		8213820	1		-			
ANR	8214582	CallExpression	strlen ( filename )		8213820	0					
ANR	8214583	Callee	strlen		8213820	0					
ANR	8214584	Identifier	strlen		8213820	0					
ANR	8214585	ArgumentList	filename		8213820	1					
ANR	8214586	Argument	filename		8213820	0					
ANR	8214587	Identifier	filename		8213820	0					
ANR	8214588	PrimaryExpression	1		8213820	1					
ANR	8214589	PrimaryExpression	0x00		8213820	1					
ANR	8214590	ExpressionStatement	"f = gp_fopen ( ( const char * ) filename , ""rb"" )"	213:8:7558:7600	8213820	6	True				
ANR	8214591	AssignmentExpression	"f = gp_fopen ( ( const char * ) filename , ""rb"" )"		8213820	0		=			
ANR	8214592	Identifier	f		8213820	0					
ANR	8214593	CallExpression	"gp_fopen ( ( const char * ) filename , ""rb"" )"		8213820	1					
ANR	8214594	Callee	gp_fopen		8213820	0					
ANR	8214595	Identifier	gp_fopen		8213820	0					
ANR	8214596	ArgumentList	( const char * ) filename		8213820	1					
ANR	8214597	Argument	( const char * ) filename		8213820	0					
ANR	8214598	CastExpression	( const char * ) filename		8213820	0					
ANR	8214599	CastTarget	const char *		8213820	0					
ANR	8214600	Identifier	filename		8213820	1					
ANR	8214601	Argument	"""rb"""		8213820	1					
ANR	8214602	PrimaryExpression	"""rb"""		8213820	0					
ANR	8214603	IfStatement	if ( ! f )		8213820	7					
ANR	8214604	Condition	! f	214:12:7614:7615	8213820	0	True				
ANR	8214605	UnaryOperationExpression	! f		8213820	0					
ANR	8214606	UnaryOperator	!		8213820	0					
ANR	8214607	Identifier	f		8213820	1					
ANR	8214608	CompoundStatement		137:16:4513:4513	8213820	1					
ANR	8214609	ExpressionStatement	"gs_free_object ( mem , copy , ""working buffer for pdfmark processing"" )"	215:12:7632:7698	8213820	0	True				
ANR	8214610	CallExpression	"gs_free_object ( mem , copy , ""working buffer for pdfmark processing"" )"		8213820	0					
ANR	8214611	Callee	gs_free_object		8213820	0					
ANR	8214612	Identifier	gs_free_object		8213820	0					
ANR	8214613	ArgumentList	mem		8213820	1					
ANR	8214614	Argument	mem		8213820	0					
ANR	8214615	Identifier	mem		8213820	0					
ANR	8214616	Argument	copy		8213820	1					
ANR	8214617	Identifier	copy		8213820	0					
ANR	8214618	Argument	"""working buffer for pdfmark processing"""		8213820	2					
ANR	8214619	PrimaryExpression	"""working buffer for pdfmark processing"""		8213820	0					
ANR	8214620	ExpressionStatement	"gs_free_object ( mem , parray , ""temporary pdfmark array"" )"	216:12:7712:7766	8213820	1	True				
ANR	8214621	CallExpression	"gs_free_object ( mem , parray , ""temporary pdfmark array"" )"		8213820	0					
ANR	8214622	Callee	gs_free_object		8213820	0					
ANR	8214623	Identifier	gs_free_object		8213820	0					
ANR	8214624	ArgumentList	mem		8213820	1					
ANR	8214625	Argument	mem		8213820	0					
ANR	8214626	Identifier	mem		8213820	0					
ANR	8214627	Argument	parray		8213820	1					
ANR	8214628	Identifier	parray		8213820	0					
ANR	8214629	Argument	"""temporary pdfmark array"""		8213820	2					
ANR	8214630	PrimaryExpression	"""temporary pdfmark array"""		8213820	0					
ANR	8214631	ReturnStatement	return - 1 ;	217:12:7780:7789	8213820	2	True				
ANR	8214632	UnaryOperationExpression	- 1		8213820	0					
ANR	8214633	UnaryOperator	-		8213820	0					
ANR	8214634	PrimaryExpression	1		8213820	1					
ANR	8214635	IfStatement	"if ( gp_fseek_64 ( f , 0 , SEEK_END ) != 0 )"		8213820	8					
ANR	8214636	Condition	"gp_fseek_64 ( f , 0 , SEEK_END ) != 0"	220:12:7814:7845	8213820	0	True				
ANR	8214637	EqualityExpression	"gp_fseek_64 ( f , 0 , SEEK_END ) != 0"		8213820	0		!=			
ANR	8214638	CallExpression	"gp_fseek_64 ( f , 0 , SEEK_END )"		8213820	0					
ANR	8214639	Callee	gp_fseek_64		8213820	0					
ANR	8214640	Identifier	gp_fseek_64		8213820	0					
ANR	8214641	ArgumentList	f		8213820	1					
ANR	8214642	Argument	f		8213820	0					
ANR	8214643	Identifier	f		8213820	0					
ANR	8214644	Argument	0		8213820	1					
ANR	8214645	PrimaryExpression	0		8213820	0					
ANR	8214646	Argument	SEEK_END		8213820	2					
ANR	8214647	Identifier	SEEK_END		8213820	0					
ANR	8214648	PrimaryExpression	0		8213820	1					
ANR	8214649	CompoundStatement		143:46:4743:4743	8213820	1					
ANR	8214650	ExpressionStatement	"gs_free_object ( mem , copy , ""working buffer for pdfmark processing"" )"	221:12:7862:7928	8213820	0	True				
ANR	8214651	CallExpression	"gs_free_object ( mem , copy , ""working buffer for pdfmark processing"" )"		8213820	0					
ANR	8214652	Callee	gs_free_object		8213820	0					
ANR	8214653	Identifier	gs_free_object		8213820	0					
ANR	8214654	ArgumentList	mem		8213820	1					
ANR	8214655	Argument	mem		8213820	0					
ANR	8214656	Identifier	mem		8213820	0					
ANR	8214657	Argument	copy		8213820	1					
ANR	8214658	Identifier	copy		8213820	0					
ANR	8214659	Argument	"""working buffer for pdfmark processing"""		8213820	2					
ANR	8214660	PrimaryExpression	"""working buffer for pdfmark processing"""		8213820	0					
ANR	8214661	ExpressionStatement	"gs_free_object ( mem , parray , ""temporary pdfmark array"" )"	222:12:7942:7996	8213820	1	True				
ANR	8214662	CallExpression	"gs_free_object ( mem , parray , ""temporary pdfmark array"" )"		8213820	0					
ANR	8214663	Callee	gs_free_object		8213820	0					
ANR	8214664	Identifier	gs_free_object		8213820	0					
ANR	8214665	ArgumentList	mem		8213820	1					
ANR	8214666	Argument	mem		8213820	0					
ANR	8214667	Identifier	mem		8213820	0					
ANR	8214668	Argument	parray		8213820	1					
ANR	8214669	Identifier	parray		8213820	0					
ANR	8214670	Argument	"""temporary pdfmark array"""		8213820	2					
ANR	8214671	PrimaryExpression	"""temporary pdfmark array"""		8213820	0					
ANR	8214672	ExpressionStatement	fclose ( f )	223:12:8010:8019	8213820	2	True				
ANR	8214673	CallExpression	fclose ( f )		8213820	0					
ANR	8214674	Callee	fclose		8213820	0					
ANR	8214675	Identifier	fclose		8213820	0					
ANR	8214676	ArgumentList	f		8213820	1					
ANR	8214677	Argument	f		8213820	0					
ANR	8214678	Identifier	f		8213820	0					
ANR	8214679	ReturnStatement	return - 1 ;	224:12:8033:8042	8213820	3	True				
ANR	8214680	UnaryOperationExpression	- 1		8213820	0					
ANR	8214681	UnaryOperator	-		8213820	0					
ANR	8214682	PrimaryExpression	1		8213820	1					
ANR	8214683	ExpressionStatement	bytes = gp_ftell_64 ( f )	226:8:8062:8084	8213820	9	True				
ANR	8214684	AssignmentExpression	bytes = gp_ftell_64 ( f )		8213820	0		=			
ANR	8214685	Identifier	bytes		8213820	0					
ANR	8214686	CallExpression	gp_ftell_64 ( f )		8213820	1					
ANR	8214687	Callee	gp_ftell_64		8213820	0					
ANR	8214688	Identifier	gp_ftell_64		8213820	0					
ANR	8214689	ArgumentList	f		8213820	1					
ANR	8214690	Argument	f		8213820	0					
ANR	8214691	Identifier	f		8213820	0					
ANR	8214692	IfStatement	if ( bytes < 0 )		8213820	10					
ANR	8214693	Condition	bytes < 0	227:12:8098:8106	8213820	0	True				
ANR	8214694	RelationalExpression	bytes < 0		8213820	0		<			
ANR	8214695	Identifier	bytes		8213820	0					
ANR	8214696	PrimaryExpression	0		8213820	1					
ANR	8214697	CompoundStatement		150:23:5004:5004	8213820	1					
ANR	8214698	ExpressionStatement	"gs_free_object ( mem , copy , ""working buffer for pdfmark processing"" )"	228:12:8123:8189	8213820	0	True				
ANR	8214699	CallExpression	"gs_free_object ( mem , copy , ""working buffer for pdfmark processing"" )"		8213820	0					
ANR	8214700	Callee	gs_free_object		8213820	0					
ANR	8214701	Identifier	gs_free_object		8213820	0					
ANR	8214702	ArgumentList	mem		8213820	1					
ANR	8214703	Argument	mem		8213820	0					
ANR	8214704	Identifier	mem		8213820	0					
ANR	8214705	Argument	copy		8213820	1					
ANR	8214706	Identifier	copy		8213820	0					
ANR	8214707	Argument	"""working buffer for pdfmark processing"""		8213820	2					
ANR	8214708	PrimaryExpression	"""working buffer for pdfmark processing"""		8213820	0					
ANR	8214709	ExpressionStatement	"gs_free_object ( mem , parray , ""temporary pdfmark array"" )"	229:12:8203:8257	8213820	1	True				
ANR	8214710	CallExpression	"gs_free_object ( mem , parray , ""temporary pdfmark array"" )"		8213820	0					
ANR	8214711	Callee	gs_free_object		8213820	0					
ANR	8214712	Identifier	gs_free_object		8213820	0					
ANR	8214713	ArgumentList	mem		8213820	1					
ANR	8214714	Argument	mem		8213820	0					
ANR	8214715	Identifier	mem		8213820	0					
ANR	8214716	Argument	parray		8213820	1					
ANR	8214717	Identifier	parray		8213820	0					
ANR	8214718	Argument	"""temporary pdfmark array"""		8213820	2					
ANR	8214719	PrimaryExpression	"""temporary pdfmark array"""		8213820	0					
ANR	8214720	ExpressionStatement	fclose ( f )	230:12:8271:8280	8213820	2	True				
ANR	8214721	CallExpression	fclose ( f )		8213820	0					
ANR	8214722	Callee	fclose		8213820	0					
ANR	8214723	Identifier	fclose		8213820	0					
ANR	8214724	ArgumentList	f		8213820	1					
ANR	8214725	Argument	f		8213820	0					
ANR	8214726	Identifier	f		8213820	0					
ANR	8214727	ReturnStatement	return - 1 ;	231:12:8294:8303	8213820	3	True				
ANR	8214728	UnaryOperationExpression	- 1		8213820	0					
ANR	8214729	UnaryOperator	-		8213820	0					
ANR	8214730	PrimaryExpression	1		8213820	1					
ANR	8214731	ExpressionStatement	"parray [ tokens - 2 ] . data = ( const byte * ) gs_alloc_bytes ( mem , bytes , ""PJL pdfmark, stream"" )"	234:8:8336:8425	8213820	11	True				
ANR	8214732	AssignmentExpression	"parray [ tokens - 2 ] . data = ( const byte * ) gs_alloc_bytes ( mem , bytes , ""PJL pdfmark, stream"" )"		8213820	0		=			
ANR	8214733	MemberAccess	parray [ tokens - 2 ] . data		8213820	0					
ANR	8214734	ArrayIndexing	parray [ tokens - 2 ]		8213820	0					
ANR	8214735	Identifier	parray		8213820	0					
ANR	8214736	AdditiveExpression	tokens - 2		8213820	1		-			
ANR	8214737	Identifier	tokens		8213820	0					
ANR	8214738	PrimaryExpression	2		8213820	1					
ANR	8214739	Identifier	data		8213820	1					
ANR	8214740	CastExpression	"( const byte * ) gs_alloc_bytes ( mem , bytes , ""PJL pdfmark, stream"" )"		8213820	1					
ANR	8214741	CastTarget	const byte *		8213820	0					
ANR	8214742	CallExpression	"gs_alloc_bytes ( mem , bytes , ""PJL pdfmark, stream"" )"		8213820	1					
ANR	8214743	Callee	gs_alloc_bytes		8213820	0					
ANR	8214744	Identifier	gs_alloc_bytes		8213820	0					
ANR	8214745	ArgumentList	mem		8213820	1					
ANR	8214746	Argument	mem		8213820	0					
ANR	8214747	Identifier	mem		8213820	0					
ANR	8214748	Argument	bytes		8213820	1					
ANR	8214749	Identifier	bytes		8213820	0					
ANR	8214750	Argument	"""PJL pdfmark, stream"""		8213820	2					
ANR	8214751	PrimaryExpression	"""PJL pdfmark, stream"""		8213820	0					
ANR	8214752	IfStatement	if ( ! parray [ tokens - 2 ] . data )		8213820	12					
ANR	8214753	Condition	! parray [ tokens - 2 ] . data	235:12:8439:8462	8213820	0	True				
ANR	8214754	UnaryOperationExpression	! parray [ tokens - 2 ] . data		8213820	0					
ANR	8214755	UnaryOperator	!		8213820	0					
ANR	8214756	MemberAccess	parray [ tokens - 2 ] . data		8213820	1					
ANR	8214757	ArrayIndexing	parray [ tokens - 2 ]		8213820	0					
ANR	8214758	Identifier	parray		8213820	0					
ANR	8214759	AdditiveExpression	tokens - 2		8213820	1		-			
ANR	8214760	Identifier	tokens		8213820	0					
ANR	8214761	PrimaryExpression	2		8213820	1					
ANR	8214762	Identifier	data		8213820	1					
ANR	8214763	CompoundStatement		158:38:5360:5360	8213820	1					
ANR	8214764	ExpressionStatement	"gs_free_object ( mem , copy , ""working buffer for pdfmark processing"" )"	236:12:8479:8545	8213820	0	True				
ANR	8214765	CallExpression	"gs_free_object ( mem , copy , ""working buffer for pdfmark processing"" )"		8213820	0					
ANR	8214766	Callee	gs_free_object		8213820	0					
ANR	8214767	Identifier	gs_free_object		8213820	0					
ANR	8214768	ArgumentList	mem		8213820	1					
ANR	8214769	Argument	mem		8213820	0					
ANR	8214770	Identifier	mem		8213820	0					
ANR	8214771	Argument	copy		8213820	1					
ANR	8214772	Identifier	copy		8213820	0					
ANR	8214773	Argument	"""working buffer for pdfmark processing"""		8213820	2					
ANR	8214774	PrimaryExpression	"""working buffer for pdfmark processing"""		8213820	0					
ANR	8214775	ExpressionStatement	"gs_free_object ( mem , parray , ""temporary pdfmark array"" )"	237:12:8559:8613	8213820	1	True				
ANR	8214776	CallExpression	"gs_free_object ( mem , parray , ""temporary pdfmark array"" )"		8213820	0					
ANR	8214777	Callee	gs_free_object		8213820	0					
ANR	8214778	Identifier	gs_free_object		8213820	0					
ANR	8214779	ArgumentList	mem		8213820	1					
ANR	8214780	Argument	mem		8213820	0					
ANR	8214781	Identifier	mem		8213820	0					
ANR	8214782	Argument	parray		8213820	1					
ANR	8214783	Identifier	parray		8213820	0					
ANR	8214784	Argument	"""temporary pdfmark array"""		8213820	2					
ANR	8214785	PrimaryExpression	"""temporary pdfmark array"""		8213820	0					
ANR	8214786	ExpressionStatement	fclose ( f )	238:12:8627:8636	8213820	2	True				
ANR	8214787	CallExpression	fclose ( f )		8213820	0					
ANR	8214788	Callee	fclose		8213820	0					
ANR	8214789	Identifier	fclose		8213820	0					
ANR	8214790	ArgumentList	f		8213820	1					
ANR	8214791	Argument	f		8213820	0					
ANR	8214792	Identifier	f		8213820	0					
ANR	8214793	ReturnStatement	return - 1 ;	239:12:8650:8659	8213820	3	True				
ANR	8214794	UnaryOperationExpression	- 1		8213820	0					
ANR	8214795	UnaryOperator	-		8213820	0					
ANR	8214796	PrimaryExpression	1		8213820	1					
ANR	8214797	ExpressionStatement	stream_data = ( char * ) ( parray [ tokens - 2 ] . data )	241:8:8679:8726	8213820	13	True				
ANR	8214798	AssignmentExpression	stream_data = ( char * ) ( parray [ tokens - 2 ] . data )		8213820	0		=			
ANR	8214799	Identifier	stream_data		8213820	0					
ANR	8214800	CastExpression	( char * ) ( parray [ tokens - 2 ] . data )		8213820	1					
ANR	8214801	CastTarget	char *		8213820	0					
ANR	8214802	MemberAccess	parray [ tokens - 2 ] . data		8213820	1					
ANR	8214803	ArrayIndexing	parray [ tokens - 2 ]		8213820	0					
ANR	8214804	Identifier	parray		8213820	0					
ANR	8214805	AdditiveExpression	tokens - 2		8213820	1		-			
ANR	8214806	Identifier	tokens		8213820	0					
ANR	8214807	PrimaryExpression	2		8213820	1					
ANR	8214808	Identifier	data		8213820	1					
ANR	8214809	IfStatement	"if ( gp_fseek_64 ( f , 0 , SEEK_SET ) != 0 )"		8213820	14					
ANR	8214810	Condition	"gp_fseek_64 ( f , 0 , SEEK_SET ) != 0"	243:12:8741:8772	8213820	0	True				
ANR	8214811	EqualityExpression	"gp_fseek_64 ( f , 0 , SEEK_SET ) != 0"		8213820	0		!=			
ANR	8214812	CallExpression	"gp_fseek_64 ( f , 0 , SEEK_SET )"		8213820	0					
ANR	8214813	Callee	gp_fseek_64		8213820	0					
ANR	8214814	Identifier	gp_fseek_64		8213820	0					
ANR	8214815	ArgumentList	f		8213820	1					
ANR	8214816	Argument	f		8213820	0					
ANR	8214817	Identifier	f		8213820	0					
ANR	8214818	Argument	0		8213820	1					
ANR	8214819	PrimaryExpression	0		8213820	0					
ANR	8214820	Argument	SEEK_SET		8213820	2					
ANR	8214821	Identifier	SEEK_SET		8213820	0					
ANR	8214822	PrimaryExpression	0		8213820	1					
ANR	8214823	CompoundStatement		166:46:5670:5670	8213820	1					
ANR	8214824	ExpressionStatement	"gs_free_object ( mem , stream_data , ""PJL pdfmark, stream"" )"	244:12:8789:8844	8213820	0	True				
ANR	8214825	CallExpression	"gs_free_object ( mem , stream_data , ""PJL pdfmark, stream"" )"		8213820	0					
ANR	8214826	Callee	gs_free_object		8213820	0					
ANR	8214827	Identifier	gs_free_object		8213820	0					
ANR	8214828	ArgumentList	mem		8213820	1					
ANR	8214829	Argument	mem		8213820	0					
ANR	8214830	Identifier	mem		8213820	0					
ANR	8214831	Argument	stream_data		8213820	1					
ANR	8214832	Identifier	stream_data		8213820	0					
ANR	8214833	Argument	"""PJL pdfmark, stream"""		8213820	2					
ANR	8214834	PrimaryExpression	"""PJL pdfmark, stream"""		8213820	0					
ANR	8214835	ExpressionStatement	"gs_free_object ( mem , copy , ""working buffer for pdfmark processing"" )"	245:12:8858:8924	8213820	1	True				
ANR	8214836	CallExpression	"gs_free_object ( mem , copy , ""working buffer for pdfmark processing"" )"		8213820	0					
ANR	8214837	Callee	gs_free_object		8213820	0					
ANR	8214838	Identifier	gs_free_object		8213820	0					
ANR	8214839	ArgumentList	mem		8213820	1					
ANR	8214840	Argument	mem		8213820	0					
ANR	8214841	Identifier	mem		8213820	0					
ANR	8214842	Argument	copy		8213820	1					
ANR	8214843	Identifier	copy		8213820	0					
ANR	8214844	Argument	"""working buffer for pdfmark processing"""		8213820	2					
ANR	8214845	PrimaryExpression	"""working buffer for pdfmark processing"""		8213820	0					
ANR	8214846	ExpressionStatement	"gs_free_object ( mem , parray , ""temporary pdfmark array"" )"	246:12:8938:8992	8213820	2	True				
ANR	8214847	CallExpression	"gs_free_object ( mem , parray , ""temporary pdfmark array"" )"		8213820	0					
ANR	8214848	Callee	gs_free_object		8213820	0					
ANR	8214849	Identifier	gs_free_object		8213820	0					
ANR	8214850	ArgumentList	mem		8213820	1					
ANR	8214851	Argument	mem		8213820	0					
ANR	8214852	Identifier	mem		8213820	0					
ANR	8214853	Argument	parray		8213820	1					
ANR	8214854	Identifier	parray		8213820	0					
ANR	8214855	Argument	"""temporary pdfmark array"""		8213820	2					
ANR	8214856	PrimaryExpression	"""temporary pdfmark array"""		8213820	0					
ANR	8214857	ExpressionStatement	fclose ( f )	247:12:9006:9015	8213820	3	True				
ANR	8214858	CallExpression	fclose ( f )		8213820	0					
ANR	8214859	Callee	fclose		8213820	0					
ANR	8214860	Identifier	fclose		8213820	0					
ANR	8214861	ArgumentList	f		8213820	1					
ANR	8214862	Argument	f		8213820	0					
ANR	8214863	Identifier	f		8213820	0					
ANR	8214864	ReturnStatement	return gs_note_error ( gs_error_ioerror ) ;	248:12:9029:9067	8213820	4	True				
ANR	8214865	CallExpression	gs_note_error ( gs_error_ioerror )		8213820	0					
ANR	8214866	Callee	gs_note_error		8213820	0					
ANR	8214867	Identifier	gs_note_error		8213820	0					
ANR	8214868	ArgumentList	gs_error_ioerror		8213820	1					
ANR	8214869	Argument	gs_error_ioerror		8213820	0					
ANR	8214870	Identifier	gs_error_ioerror		8213820	0					
ANR	8214871	ExpressionStatement	"code = fread ( stream_data , 1 , bytes , f )"	250:8:9087:9125	8213820	15	True				
ANR	8214872	AssignmentExpression	"code = fread ( stream_data , 1 , bytes , f )"		8213820	0		=			
ANR	8214873	Identifier	code		8213820	0					
ANR	8214874	CallExpression	"fread ( stream_data , 1 , bytes , f )"		8213820	1					
ANR	8214875	Callee	fread		8213820	0					
ANR	8214876	Identifier	fread		8213820	0					
ANR	8214877	ArgumentList	stream_data		8213820	1					
ANR	8214878	Argument	stream_data		8213820	0					
ANR	8214879	Identifier	stream_data		8213820	0					
ANR	8214880	Argument	1		8213820	1					
ANR	8214881	PrimaryExpression	1		8213820	0					
ANR	8214882	Argument	bytes		8213820	2					
ANR	8214883	Identifier	bytes		8213820	0					
ANR	8214884	Argument	f		8213820	3					
ANR	8214885	Identifier	f		8213820	0					
ANR	8214886	IfStatement	if ( code != bytes )		8213820	16					
ANR	8214887	Condition	code != bytes	251:12:9139:9151	8213820	0	True				
ANR	8214888	EqualityExpression	code != bytes		8213820	0		!=			
ANR	8214889	Identifier	code		8213820	0					
ANR	8214890	Identifier	bytes		8213820	1					
ANR	8214891	CompoundStatement		174:27:6049:6049	8213820	1					
ANR	8214892	ExpressionStatement	"gs_free_object ( mem , stream_data , ""PJL pdfmark, stream"" )"	252:12:9168:9223	8213820	0	True				
ANR	8214893	CallExpression	"gs_free_object ( mem , stream_data , ""PJL pdfmark, stream"" )"		8213820	0					
ANR	8214894	Callee	gs_free_object		8213820	0					
ANR	8214895	Identifier	gs_free_object		8213820	0					
ANR	8214896	ArgumentList	mem		8213820	1					
ANR	8214897	Argument	mem		8213820	0					
ANR	8214898	Identifier	mem		8213820	0					
ANR	8214899	Argument	stream_data		8213820	1					
ANR	8214900	Identifier	stream_data		8213820	0					
ANR	8214901	Argument	"""PJL pdfmark, stream"""		8213820	2					
ANR	8214902	PrimaryExpression	"""PJL pdfmark, stream"""		8213820	0					
ANR	8214903	ExpressionStatement	"gs_free_object ( mem , copy , ""working buffer for pdfmark processing"" )"	253:12:9237:9303	8213820	1	True				
ANR	8214904	CallExpression	"gs_free_object ( mem , copy , ""working buffer for pdfmark processing"" )"		8213820	0					
ANR	8214905	Callee	gs_free_object		8213820	0					
ANR	8214906	Identifier	gs_free_object		8213820	0					
ANR	8214907	ArgumentList	mem		8213820	1					
ANR	8214908	Argument	mem		8213820	0					
ANR	8214909	Identifier	mem		8213820	0					
ANR	8214910	Argument	copy		8213820	1					
ANR	8214911	Identifier	copy		8213820	0					
ANR	8214912	Argument	"""working buffer for pdfmark processing"""		8213820	2					
ANR	8214913	PrimaryExpression	"""working buffer for pdfmark processing"""		8213820	0					
ANR	8214914	ExpressionStatement	"gs_free_object ( mem , parray , ""temporary pdfmark array"" )"	254:12:9317:9371	8213820	2	True				
ANR	8214915	CallExpression	"gs_free_object ( mem , parray , ""temporary pdfmark array"" )"		8213820	0					
ANR	8214916	Callee	gs_free_object		8213820	0					
ANR	8214917	Identifier	gs_free_object		8213820	0					
ANR	8214918	ArgumentList	mem		8213820	1					
ANR	8214919	Argument	mem		8213820	0					
ANR	8214920	Identifier	mem		8213820	0					
ANR	8214921	Argument	parray		8213820	1					
ANR	8214922	Identifier	parray		8213820	0					
ANR	8214923	Argument	"""temporary pdfmark array"""		8213820	2					
ANR	8214924	PrimaryExpression	"""temporary pdfmark array"""		8213820	0					
ANR	8214925	ExpressionStatement	fclose ( f )	255:12:9385:9394	8213820	3	True				
ANR	8214926	CallExpression	fclose ( f )		8213820	0					
ANR	8214927	Callee	fclose		8213820	0					
ANR	8214928	Identifier	fclose		8213820	0					
ANR	8214929	ArgumentList	f		8213820	1					
ANR	8214930	Argument	f		8213820	0					
ANR	8214931	Identifier	f		8213820	0					
ANR	8214932	ReturnStatement	return gs_note_error ( gs_error_ioerror ) ;	256:12:9408:9446	8213820	4	True				
ANR	8214933	CallExpression	gs_note_error ( gs_error_ioerror )		8213820	0					
ANR	8214934	Callee	gs_note_error		8213820	0					
ANR	8214935	Identifier	gs_note_error		8213820	0					
ANR	8214936	ArgumentList	gs_error_ioerror		8213820	1					
ANR	8214937	Argument	gs_error_ioerror		8213820	0					
ANR	8214938	Identifier	gs_error_ioerror		8213820	0					
ANR	8214939	ExpressionStatement	fclose ( f )	258:8:9466:9475	8213820	17	True				
ANR	8214940	CallExpression	fclose ( f )		8213820	0					
ANR	8214941	Callee	fclose		8213820	0					
ANR	8214942	Identifier	fclose		8213820	0					
ANR	8214943	ArgumentList	f		8213820	1					
ANR	8214944	Argument	f		8213820	0					
ANR	8214945	Identifier	f		8213820	0					
ANR	8214946	ExpressionStatement	parray [ tokens - 2 ] . size = bytes	259:8:9485:9516	8213820	18	True				
ANR	8214947	AssignmentExpression	parray [ tokens - 2 ] . size = bytes		8213820	0		=			
ANR	8214948	MemberAccess	parray [ tokens - 2 ] . size		8213820	0					
ANR	8214949	ArrayIndexing	parray [ tokens - 2 ]		8213820	0					
ANR	8214950	Identifier	parray		8213820	0					
ANR	8214951	AdditiveExpression	tokens - 2		8213820	1		-			
ANR	8214952	Identifier	tokens		8213820	0					
ANR	8214953	PrimaryExpression	2		8213820	1					
ANR	8214954	Identifier	size		8213820	1					
ANR	8214955	Identifier	bytes		8213820	1					
ANR	8214956	ExpressionStatement	"parray [ tokens ] . data = ( const byte * ) "".PUTSTREAM"""	261:8:9527:9575	8213820	19	True				
ANR	8214957	AssignmentExpression	"parray [ tokens ] . data = ( const byte * ) "".PUTSTREAM"""		8213820	0		=			
ANR	8214958	MemberAccess	parray [ tokens ] . data		8213820	0					
ANR	8214959	ArrayIndexing	parray [ tokens ]		8213820	0					
ANR	8214960	Identifier	parray		8213820	0					
ANR	8214961	Identifier	tokens		8213820	1					
ANR	8214962	Identifier	data		8213820	1					
ANR	8214963	CastExpression	"( const byte * ) "".PUTSTREAM"""		8213820	1					
ANR	8214964	CastTarget	const byte *		8213820	0					
ANR	8214965	PrimaryExpression	""".PUTSTREAM"""		8213820	1					
ANR	8214966	ExpressionStatement	parray [ tokens ] . size = 10	262:8:9585:9609	8213820	20	True				
ANR	8214967	AssignmentExpression	parray [ tokens ] . size = 10		8213820	0		=			
ANR	8214968	MemberAccess	parray [ tokens ] . size		8213820	0					
ANR	8214969	ArrayIndexing	parray [ tokens ]		8213820	0					
ANR	8214970	Identifier	parray		8213820	0					
ANR	8214971	Identifier	tokens		8213820	1					
ANR	8214972	Identifier	size		8213820	1					
ANR	8214973	PrimaryExpression	10		8213820	1					
ANR	8214974	ExpressionStatement	parray [ tokens ] . persistent = false	263:8:9619:9652	8213820	21	True				
ANR	8214975	AssignmentExpression	parray [ tokens ] . persistent = false		8213820	0		=			
ANR	8214976	MemberAccess	parray [ tokens ] . persistent		8213820	0					
ANR	8214977	ArrayIndexing	parray [ tokens ]		8213820	0					
ANR	8214978	Identifier	parray		8213820	0					
ANR	8214979	Identifier	tokens		8213820	1					
ANR	8214980	Identifier	persistent		8213820	1					
ANR	8214981	Identifier	false		8213820	1					
ANR	8214982	ExpressionStatement	array_list . data = parray	266:4:9665:9689	8213820	30	True				
ANR	8214983	AssignmentExpression	array_list . data = parray		8213820	0		=			
ANR	8214984	MemberAccess	array_list . data		8213820	0					
ANR	8214985	Identifier	array_list		8213820	0					
ANR	8214986	Identifier	data		8213820	1					
ANR	8214987	Identifier	parray		8213820	1					
ANR	8214988	ExpressionStatement	array_list . persistent = 0	267:4:9695:9720	8213820	31	True				
ANR	8214989	AssignmentExpression	array_list . persistent = 0		8213820	0		=			
ANR	8214990	MemberAccess	array_list . persistent		8213820	0					
ANR	8214991	Identifier	array_list		8213820	0					
ANR	8214992	Identifier	persistent		8213820	1					
ANR	8214993	PrimaryExpression	0		8213820	1					
ANR	8214994	ExpressionStatement	array_list . size = ++ tokens	268:4:9726:9752	8213820	32	True				
ANR	8214995	AssignmentExpression	array_list . size = ++ tokens		8213820	0		=			
ANR	8214996	MemberAccess	array_list . size		8213820	0					
ANR	8214997	Identifier	array_list		8213820	0					
ANR	8214998	Identifier	size		8213820	1					
ANR	8214999	UnaryExpression	++ tokens		8213820	1					
ANR	8215000	IncDec	++		8213820	0					
ANR	8215001	Identifier	tokens		8213820	1					
ANR	8215002	ExpressionStatement	"code = pdfmark_write_list ( mem , device , & array_list )"	270:4:9759:9810	8213820	33	True				
ANR	8215003	AssignmentExpression	"code = pdfmark_write_list ( mem , device , & array_list )"		8213820	0		=			
ANR	8215004	Identifier	code		8213820	0					
ANR	8215005	CallExpression	"pdfmark_write_list ( mem , device , & array_list )"		8213820	1					
ANR	8215006	Callee	pdfmark_write_list		8213820	0					
ANR	8215007	Identifier	pdfmark_write_list		8213820	0					
ANR	8215008	ArgumentList	mem		8213820	1					
ANR	8215009	Argument	mem		8213820	0					
ANR	8215010	Identifier	mem		8213820	0					
ANR	8215011	Argument	device		8213820	1					
ANR	8215012	Identifier	device		8213820	0					
ANR	8215013	Argument	& array_list		8213820	2					
ANR	8215014	UnaryOperationExpression	& array_list		8213820	0					
ANR	8215015	UnaryOperator	&		8213820	0					
ANR	8215016	Identifier	array_list		8213820	1					
ANR	8215017	IfStatement	if ( stream_data )		8213820	34					
ANR	8215018	Condition	stream_data	272:8:9821:9831	8213820	0	True				
ANR	8215019	Identifier	stream_data		8213820	0					
ANR	8215020	ExpressionStatement	"gs_free_object ( mem , stream_data , ""PJL pdfmark, stream"" )"	273:8:9842:9897	8213820	1	True				
ANR	8215021	CallExpression	"gs_free_object ( mem , stream_data , ""PJL pdfmark, stream"" )"		8213820	0					
ANR	8215022	Callee	gs_free_object		8213820	0					
ANR	8215023	Identifier	gs_free_object		8213820	0					
ANR	8215024	ArgumentList	mem		8213820	1					
ANR	8215025	Argument	mem		8213820	0					
ANR	8215026	Identifier	mem		8213820	0					
ANR	8215027	Argument	stream_data		8213820	1					
ANR	8215028	Identifier	stream_data		8213820	0					
ANR	8215029	Argument	"""PJL pdfmark, stream"""		8213820	2					
ANR	8215030	PrimaryExpression	"""PJL pdfmark, stream"""		8213820	0					
ANR	8215031	ExpressionStatement	"gs_free_object ( mem , copy , ""working buffer for pdfmark processing"" )"	274:4:9903:9969	8213820	35	True				
ANR	8215032	CallExpression	"gs_free_object ( mem , copy , ""working buffer for pdfmark processing"" )"		8213820	0					
ANR	8215033	Callee	gs_free_object		8213820	0					
ANR	8215034	Identifier	gs_free_object		8213820	0					
ANR	8215035	ArgumentList	mem		8213820	1					
ANR	8215036	Argument	mem		8213820	0					
ANR	8215037	Identifier	mem		8213820	0					
ANR	8215038	Argument	copy		8213820	1					
ANR	8215039	Identifier	copy		8213820	0					
ANR	8215040	Argument	"""working buffer for pdfmark processing"""		8213820	2					
ANR	8215041	PrimaryExpression	"""working buffer for pdfmark processing"""		8213820	0					
ANR	8215042	ExpressionStatement	"gs_free_object ( mem , parray , ""temporary pdfmark array"" )"	275:4:9975:10029	8213820	36	True				
ANR	8215043	CallExpression	"gs_free_object ( mem , parray , ""temporary pdfmark array"" )"		8213820	0					
ANR	8215044	Callee	gs_free_object		8213820	0					
ANR	8215045	Identifier	gs_free_object		8213820	0					
ANR	8215046	ArgumentList	mem		8213820	1					
ANR	8215047	Argument	mem		8213820	0					
ANR	8215048	Identifier	mem		8213820	0					
ANR	8215049	Argument	parray		8213820	1					
ANR	8215050	Identifier	parray		8213820	0					
ANR	8215051	Argument	"""temporary pdfmark array"""		8213820	2					
ANR	8215052	PrimaryExpression	"""temporary pdfmark array"""		8213820	0					
ANR	8215053	ReturnStatement	return code ;	277:4:10036:10047	8213820	37	True				
ANR	8215054	Identifier	code		8213820	0					
ANR	8215055	ReturnType	static int		8213820	1					
ANR	8215056	Identifier	process_pdfmark		8213820	2					
ANR	8215057	ParameterList	"gs_memory_t * mem , gx_device * device , char * pdfmark"		8213820	3					
ANR	8215058	Parameter	gs_memory_t * mem	77:27:3052:3067	8213820	0	True				
ANR	8215059	ParameterType	gs_memory_t *		8213820	0					
ANR	8215060	Identifier	mem		8213820	1					
ANR	8215061	Parameter	gx_device * device	77:45:3070:3086	8213820	1	True				
ANR	8215062	ParameterType	gx_device *		8213820	0					
ANR	8215063	Identifier	device		8213820	1					
ANR	8215064	Parameter	char * pdfmark	77:64:3089:3101	8213820	2	True				
ANR	8215065	ParameterType	char *		8213820	0					
ANR	8215066	Identifier	pdfmark		8213820	1					
ANR	8215067	CFGEntryNode	ENTRY		8213820		True				
ANR	8215068	CFGExitNode	EXIT		8213820		True				
ANR	8215069	Symbol	* ( p - 1 )		8213820						
ANR	8215070	Symbol	array_list . size		8213820						
ANR	8215071	Symbol	* start		8213820						
ANR	8215072	Symbol	parray [ tokens - 1 ] . persistent		8213820						
ANR	8215073	Symbol	pdfmark		8213820						
ANR	8215074	Symbol	strlen		8213820						
ANR	8215075	Symbol	strncmp		8213820						
ANR	8215076	Symbol	* * tokens		8213820						
ANR	8215077	Symbol	parray [ tokens ] . data		8213820						
ANR	8215078	Symbol	gp_fopen		8213820						
ANR	8215079	Symbol	gp_fseek_64		8213820						
ANR	8215080	Symbol	* tokens		8213820						
ANR	8215081	Symbol	* * parray		8213820						
ANR	8215082	Symbol	fread		8213820						
ANR	8215083	Symbol	filename		8213820						
ANR	8215084	Symbol	pdfmark_write_list		8213820						
ANR	8215085	Symbol	putdict		8213820						
ANR	8215086	Symbol	true		8213820						
ANR	8215087	Symbol	array_list . data		8213820						
ANR	8215088	Symbol	device		8213820						
ANR	8215089	Symbol	parray [ tokens - 2 ] . size		8213820						
ANR	8215090	Symbol	parray		8213820						
ANR	8215091	Symbol	code		8213820						
ANR	8215092	Symbol	parray [ tokens ] . size		8213820						
ANR	8215093	Symbol	* pdfmark		8213820						
ANR	8215094	Symbol	array_list . persistent		8213820						
ANR	8215095	Symbol	parray [ tokens - 1 ] . size		8213820						
ANR	8215096	Symbol	& array_list		8213820						
ANR	8215097	Symbol	parray [ tokens ++ ] . persistent		8213820						
ANR	8215098	Symbol	mem		8213820						
ANR	8215099	Symbol	tokens		8213820						
ANR	8215100	Symbol	copy		8213820						
ANR	8215101	Symbol	parray [ tokens ] . persistent		8213820						
ANR	8215102	Symbol	parray [ tokens - 2 ] . data		8213820						
ANR	8215103	Symbol	parray [ tokens - 1 ] . data		8213820						
ANR	8215104	Symbol	SEEK_SET		8213820						
ANR	8215105	Symbol	gs_alloc_bytes		8213820						
ANR	8215106	Symbol	f		8213820						
ANR	8215107	Symbol	* parray [ tokens - 2 ] . data		8213820						
ANR	8215108	Symbol	start		8213820						
ANR	8215109	Symbol	false		8213820						
ANR	8215110	Symbol	gs_error_ioerror		8213820						
ANR	8215111	Symbol	* parray [ tokens ] . data		8213820						
ANR	8215112	Symbol	SEEK_END		8213820						
ANR	8215113	Symbol	gp_ftell_64		8213820						
ANR	8215114	Symbol	p		8213820						
ANR	8215115	Symbol	gs_note_error		8213820						
ANR	8215116	Symbol	stream_data		8213820						
ANR	8215117	Symbol	array_list		8213820						
ANR	8215118	Symbol	* filename		8213820						
ANR	8215119	Symbol	* strlen		8213820						
ANR	8215120	Symbol	bytes		8213820						
ANR	8215121	Symbol	* p		8213820						
ANR	8215122	Symbol	* parray		8213820						
ANR	8215123	Function	pcl_pjl_pdfmark	280:0:10052:10860							
ANR	8215124	FunctionDef	"pcl_pjl_pdfmark (gs_memory_t * mem , gx_device * device , char * pdfmark)"		8215123	0					
ANR	8215125	CompoundStatement		281:0:10124:10860	8215123	0					
ANR	8215126	IdentifierDeclStatement	"char * pdfmark_start , * token_start , end , * p ;"	282:4:10130:10172	8215123	0	True				
ANR	8215127	IdentifierDecl	* pdfmark_start		8215123	0					
ANR	8215128	IdentifierDeclType	char *		8215123	0					
ANR	8215129	Identifier	pdfmark_start		8215123	1					
ANR	8215130	IdentifierDecl	* token_start		8215123	1					
ANR	8215131	IdentifierDeclType	char *		8215123	0					
ANR	8215132	Identifier	token_start		8215123	1					
ANR	8215133	IdentifierDecl	end		8215123	2					
ANR	8215134	IdentifierDeclType	char		8215123	0					
ANR	8215135	Identifier	end		8215123	1					
ANR	8215136	IdentifierDecl	* p		8215123	3					
ANR	8215137	IdentifierDeclType	char *		8215123	0					
ANR	8215138	Identifier	p		8215123	1					
ANR	8215139	IdentifierDeclStatement	int code ;	283:4:10178:10186	8215123	1	True				
ANR	8215140	IdentifierDecl	code		8215123	0					
ANR	8215141	IdentifierDeclType	int		8215123	0					
ANR	8215142	Identifier	code		8215123	1					
ANR	8215143	ExpressionStatement	p = token_start = pdfmark_start = pdfmark + 1	285:4:10193:10238	8215123	2	True				
ANR	8215144	AssignmentExpression	p = token_start = pdfmark_start = pdfmark + 1		8215123	0		=			
ANR	8215145	Identifier	p		8215123	0					
ANR	8215146	AssignmentExpression	token_start = pdfmark_start = pdfmark + 1		8215123	1		=			
ANR	8215147	Identifier	token_start		8215123	0					
ANR	8215148	AssignmentExpression	pdfmark_start = pdfmark + 1		8215123	1		=			
ANR	8215149	Identifier	pdfmark_start		8215123	0					
ANR	8215150	AdditiveExpression	pdfmark + 1		8215123	1		+			
ANR	8215151	Identifier	pdfmark		8215123	0					
ANR	8215152	PrimaryExpression	1		8215123	1					
ANR	8215153	DoStatement	do		8215123	3					
ANR	8215154	CompoundStatement		7:7:123:123	8215123	0					
ANR	8215155	WhileStatement	"while ( * p != ' ' && * p != '""' && * p != 0x00 )"		8215123	0					
ANR	8215156	Condition	"* p != ' ' && * p != '""' && * p != 0x00"	288:15:10265:10300	8215123	0	True				
ANR	8215157	AndExpression	"* p != ' ' && * p != '""' && * p != 0x00"		8215123	0		&&			
ANR	8215158	EqualityExpression	* p != ' '		8215123	0		!=			
ANR	8215159	UnaryOperationExpression	* p		8215123	0					
ANR	8215160	UnaryOperator	*		8215123	0					
ANR	8215161	Identifier	p		8215123	1					
ANR	8215162	PrimaryExpression	' '		8215123	1					
ANR	8215163	AndExpression	"* p != '""' && * p != 0x00"		8215123	1		&&			
ANR	8215164	EqualityExpression	"* p != '""'"		8215123	0		!=			
ANR	8215165	UnaryOperationExpression	* p		8215123	0					
ANR	8215166	UnaryOperator	*		8215123	0					
ANR	8215167	Identifier	p		8215123	1					
ANR	8215168	PrimaryExpression	"'""'"		8215123	1					
ANR	8215169	EqualityExpression	* p != 0x00		8215123	1		!=			
ANR	8215170	UnaryOperationExpression	* p		8215123	0					
ANR	8215171	UnaryOperator	*		8215123	0					
ANR	8215172	Identifier	p		8215123	1					
ANR	8215173	PrimaryExpression	0x00		8215123	1					
ANR	8215174	ExpressionStatement	p ++	289:12:10315:10318	8215123	1	True				
ANR	8215175	PostIncDecOperationExpression	p ++		8215123	0					
ANR	8215176	Identifier	p		8215123	0					
ANR	8215177	IncDec	++		8215123	1					
ANR	8215178	IfStatement	"if ( ( p - token_start ) != 7 || strncmp ( token_start , ""pdfmark"" , 7 ) != 0 )"		8215123	1					
ANR	8215179	Condition	"( p - token_start ) != 7 || strncmp ( token_start , ""pdfmark"" , 7 ) != 0"	290:11:10331:10395	8215123	0	True				
ANR	8215180	OrExpression	"( p - token_start ) != 7 || strncmp ( token_start , ""pdfmark"" , 7 ) != 0"		8215123	0		||			
ANR	8215181	EqualityExpression	( p - token_start ) != 7		8215123	0		!=			
ANR	8215182	AdditiveExpression	p - token_start		8215123	0		-			
ANR	8215183	Identifier	p		8215123	0					
ANR	8215184	Identifier	token_start		8215123	1					
ANR	8215185	PrimaryExpression	7		8215123	1					
ANR	8215186	EqualityExpression	"strncmp ( token_start , ""pdfmark"" , 7 ) != 0"		8215123	1		!=			
ANR	8215187	CallExpression	"strncmp ( token_start , ""pdfmark"" , 7 )"		8215123	0					
ANR	8215188	Callee	strncmp		8215123	0					
ANR	8215189	Identifier	strncmp		8215123	0					
ANR	8215190	ArgumentList	token_start		8215123	1					
ANR	8215191	Argument	token_start		8215123	0					
ANR	8215192	Identifier	token_start		8215123	0					
ANR	8215193	Argument	"""pdfmark"""		8215123	1					
ANR	8215194	PrimaryExpression	"""pdfmark"""		8215123	0					
ANR	8215195	Argument	7		8215123	2					
ANR	8215196	PrimaryExpression	7		8215123	0					
ANR	8215197	PrimaryExpression	0		8215123	1					
ANR	8215198	CompoundStatement		10:77:272:272	8215123	1					
ANR	8215199	IfStatement	if ( * p != 0x00 )		8215123	0					
ANR	8215200	Condition	* p != 0x00	291:16:10415:10424	8215123	0	True				
ANR	8215201	EqualityExpression	* p != 0x00		8215123	0		!=			
ANR	8215202	UnaryOperationExpression	* p		8215123	0					
ANR	8215203	UnaryOperator	*		8215123	0					
ANR	8215204	Identifier	p		8215123	1					
ANR	8215205	PrimaryExpression	0x00		8215123	1					
ANR	8215206	ExpressionStatement	token_start = ++ p	292:16:10443:10460	8215123	1	True				
ANR	8215207	AssignmentExpression	token_start = ++ p		8215123	0		=			
ANR	8215208	Identifier	token_start		8215123	0					
ANR	8215209	UnaryExpression	++ p		8215123	1					
ANR	8215210	IncDec	++		8215123	0					
ANR	8215211	Identifier	p		8215123	1					
ANR	8215212	ElseStatement	else		8215123	0					
ANR	8215213	BreakStatement	break ;	294:16:10495:10500	8215123	0	True				
ANR	8215214	ElseStatement	else		8215123	0					
ANR	8215215	CompoundStatement		15:15:392:392	8215123	0					
ANR	8215216	ExpressionStatement	token_start --	296:12:10531:10544	8215123	0	True				
ANR	8215217	PostIncDecOperationExpression	token_start --		8215123	0					
ANR	8215218	Identifier	token_start		8215123	0					
ANR	8215219	IncDec	--		8215123	1					
ANR	8215220	ExpressionStatement	end = * token_start	297:12:10558:10576	8215123	1	True				
ANR	8215221	AssignmentExpression	end = * token_start		8215123	0		=			
ANR	8215222	Identifier	end		8215123	0					
ANR	8215223	UnaryOperationExpression	* token_start		8215123	1					
ANR	8215224	UnaryOperator	*		8215123	0					
ANR	8215225	Identifier	token_start		8215123	1					
ANR	8215226	ExpressionStatement	* token_start = 0x00	298:12:10590:10609	8215123	2	True				
ANR	8215227	AssignmentExpression	* token_start = 0x00		8215123	0		=			
ANR	8215228	UnaryOperationExpression	* token_start		8215123	0					
ANR	8215229	UnaryOperator	*		8215123	0					
ANR	8215230	Identifier	token_start		8215123	1					
ANR	8215231	PrimaryExpression	0x00		8215123	1					
ANR	8215232	ExpressionStatement	"code = process_pdfmark ( mem , device , pdfmark_start )"	299:12:10623:10673	8215123	3	True				
ANR	8215233	AssignmentExpression	"code = process_pdfmark ( mem , device , pdfmark_start )"		8215123	0		=			
ANR	8215234	Identifier	code		8215123	0					
ANR	8215235	CallExpression	"process_pdfmark ( mem , device , pdfmark_start )"		8215123	1					
ANR	8215236	Callee	process_pdfmark		8215123	0					
ANR	8215237	Identifier	process_pdfmark		8215123	0					
ANR	8215238	ArgumentList	mem		8215123	1					
ANR	8215239	Argument	mem		8215123	0					
ANR	8215240	Identifier	mem		8215123	0					
ANR	8215241	Argument	device		8215123	1					
ANR	8215242	Identifier	device		8215123	0					
ANR	8215243	Argument	pdfmark_start		8215123	2					
ANR	8215244	Identifier	pdfmark_start		8215123	0					
ANR	8215245	IfStatement	if ( code < 0 )		8215123	4					
ANR	8215246	Condition	code < 0	300:16:10691:10698	8215123	0	True				
ANR	8215247	RelationalExpression	code < 0		8215123	0		<			
ANR	8215248	Identifier	code		8215123	0					
ANR	8215249	PrimaryExpression	0		8215123	1					
ANR	8215250	ReturnStatement	return code ;	301:16:10717:10728	8215123	1	True				
ANR	8215251	Identifier	code		8215123	0					
ANR	8215252	ExpressionStatement	* token_start = end	303:12:10743:10761	8215123	5	True				
ANR	8215253	AssignmentExpression	* token_start = end		8215123	0		=			
ANR	8215254	UnaryOperationExpression	* token_start		8215123	0					
ANR	8215255	UnaryOperator	*		8215123	0					
ANR	8215256	Identifier	token_start		8215123	1					
ANR	8215257	Identifier	end		8215123	1					
ANR	8215258	ExpressionStatement	token_start = pdfmark_start = ++ p	304:12:10775:10808	8215123	6	True				
ANR	8215259	AssignmentExpression	token_start = pdfmark_start = ++ p		8215123	0		=			
ANR	8215260	Identifier	token_start		8215123	0					
ANR	8215261	AssignmentExpression	pdfmark_start = ++ p		8215123	1		=			
ANR	8215262	Identifier	pdfmark_start		8215123	0					
ANR	8215263	UnaryExpression	++ p		8215123	1					
ANR	8215264	IncDec	++		8215123	0					
ANR	8215265	Identifier	p		8215123	1					
ANR	8215266	Condition	* p != 0x00	306:13:10833:10842	8215123	1	True				
ANR	8215267	EqualityExpression	* p != 0x00		8215123	0		!=			
ANR	8215268	UnaryOperationExpression	* p		8215123	0					
ANR	8215269	UnaryOperator	*		8215123	0					
ANR	8215270	Identifier	p		8215123	1					
ANR	8215271	PrimaryExpression	0x00		8215123	1					
ANR	8215272	ReturnStatement	return 0 ;	307:4:10850:10858	8215123	4	True				
ANR	8215273	PrimaryExpression	0		8215123	0					
ANR	8215274	ReturnType	int		8215123	1					
ANR	8215275	Identifier	pcl_pjl_pdfmark		8215123	2					
ANR	8215276	ParameterList	"gs_memory_t * mem , gx_device * device , char * pdfmark"		8215123	3					
ANR	8215277	Parameter	gs_memory_t * mem	280:20:10072:10087	8215123	0	True				
ANR	8215278	ParameterType	gs_memory_t *		8215123	0					
ANR	8215279	Identifier	mem		8215123	1					
ANR	8215280	Parameter	gx_device * device	280:38:10090:10106	8215123	1	True				
ANR	8215281	ParameterType	gx_device *		8215123	0					
ANR	8215282	Identifier	device		8215123	1					
ANR	8215283	Parameter	char * pdfmark	280:57:10109:10121	8215123	2	True				
ANR	8215284	ParameterType	char *		8215123	0					
ANR	8215285	Identifier	pdfmark		8215123	1					
ANR	8215286	CFGEntryNode	ENTRY		8215123		True				
ANR	8215287	CFGExitNode	EXIT		8215123		True				
ANR	8215288	Symbol	p		8215123						
ANR	8215289	Symbol	pdfmark		8215123						
ANR	8215290	Symbol	strncmp		8215123						
ANR	8215291	Symbol	token_start		8215123						
ANR	8215292	Symbol	pdfmark_start		8215123						
ANR	8215293	Symbol	code		8215123						
ANR	8215294	Symbol	mem		8215123						
ANR	8215295	Symbol	* token_start		8215123						
ANR	8215296	Symbol	process_pdfmark		8215123						
ANR	8215297	Symbol	end		8215123						
ANR	8215298	Symbol	* p		8215123						
ANR	8215299	Symbol	device		8215123						
ANR	8215300	Function	pjl_dist_process_dict	316:0:11170:12621							
ANR	8215301	FunctionDef	"pjl_dist_process_dict (gs_memory_t * mem , gs_c_param_list * plist , gs_param_name key , char * * p)"		8215300	0					
ANR	8215302	CompoundStatement		317:0:11274:12621	8215300	0					
ANR	8215303	IdentifierDeclStatement	gs_param_dict dict ;	318:4:11280:11298	8215300	0	True				
ANR	8215304	IdentifierDecl	dict		8215300	0					
ANR	8215305	IdentifierDeclType	gs_param_dict		8215300	0					
ANR	8215306	Identifier	dict		8215300	1					
ANR	8215307	IdentifierDeclStatement	"int code , tokens , nested = 0 ;"	319:4:11304:11332	8215300	1	True				
ANR	8215308	IdentifierDecl	code		8215300	0					
ANR	8215309	IdentifierDeclType	int		8215300	0					
ANR	8215310	Identifier	code		8215300	1					
ANR	8215311	IdentifierDecl	tokens		8215300	1					
ANR	8215312	IdentifierDeclType	int		8215300	0					
ANR	8215313	Identifier	tokens		8215300	1					
ANR	8215314	IdentifierDecl	nested = 0		8215300	2					
ANR	8215315	IdentifierDeclType	int		8215300	0					
ANR	8215316	Identifier	nested		8215300	1					
ANR	8215317	AssignmentExpression	nested = 0		8215300	2		=			
ANR	8215318	Identifier	nested		8215300	0					
ANR	8215319	PrimaryExpression	0		8215300	1					
ANR	8215320	IdentifierDeclStatement	"char * p1 = * p , * start = * p ;"	320:4:11338:11364	8215300	2	True				
ANR	8215321	IdentifierDecl	* p1 = * p		8215300	0					
ANR	8215322	IdentifierDeclType	char *		8215300	0					
ANR	8215323	Identifier	p1		8215300	1					
ANR	8215324	AssignmentExpression	* p1 = * p		8215300	2		=			
ANR	8215325	Identifier	p1		8215300	0					
ANR	8215326	UnaryOperationExpression	* p		8215300	1					
ANR	8215327	UnaryOperator	*		8215300	0					
ANR	8215328	Identifier	p		8215300	1					
ANR	8215329	IdentifierDecl	* start = * p		8215300	1					
ANR	8215330	IdentifierDeclType	char *		8215300	0					
ANR	8215331	Identifier	start		8215300	1					
ANR	8215332	AssignmentExpression	* start = * p		8215300	2		=			
ANR	8215333	Identifier	start		8215300	0					
ANR	8215334	UnaryOperationExpression	* p		8215300	1					
ANR	8215335	UnaryOperator	*		8215300	0					
ANR	8215336	Identifier	p		8215300	1					
ANR	8215337	DoStatement	do		8215300	3					
ANR	8215338	CompoundStatement		7:7:146:146	8215300	0					
ANR	8215339	IfStatement	if ( * p1 != '>' && * p1 != 0x00 )		8215300	0					
ANR	8215340	Condition	* p1 != '>' && * p1 != 0x00	324:12:11435:11459	8215300	0	True				
ANR	8215341	AndExpression	* p1 != '>' && * p1 != 0x00		8215300	0		&&			
ANR	8215342	EqualityExpression	* p1 != '>'		8215300	0		!=			
ANR	8215343	UnaryOperationExpression	* p1		8215300	0					
ANR	8215344	UnaryOperator	*		8215300	0					
ANR	8215345	Identifier	p1		8215300	1					
ANR	8215346	PrimaryExpression	'>'		8215300	1					
ANR	8215347	EqualityExpression	* p1 != 0x00		8215300	1		!=			
ANR	8215348	UnaryOperationExpression	* p1		8215300	0					
ANR	8215349	UnaryOperator	*		8215300	0					
ANR	8215350	Identifier	p1		8215300	1					
ANR	8215351	PrimaryExpression	0x00		8215300	1					
ANR	8215352	CompoundStatement		8:39:187:187	8215300	1					
ANR	8215353	IfStatement	if ( * p1 == '<' && * ( p1 + 1 ) == '<' )		8215300	0					
ANR	8215354	Condition	* p1 == '<' && * ( p1 + 1 ) == '<'	325:16:11480:11509	8215300	0	True				
ANR	8215355	AndExpression	* p1 == '<' && * ( p1 + 1 ) == '<'		8215300	0		&&			
ANR	8215356	EqualityExpression	* p1 == '<'		8215300	0		==			
ANR	8215357	UnaryOperationExpression	* p1		8215300	0					
ANR	8215358	UnaryOperator	*		8215300	0					
ANR	8215359	Identifier	p1		8215300	1					
ANR	8215360	PrimaryExpression	'<'		8215300	1					
ANR	8215361	EqualityExpression	* ( p1 + 1 ) == '<'		8215300	1		==			
ANR	8215362	UnaryOperationExpression	* ( p1 + 1 )		8215300	0					
ANR	8215363	UnaryOperator	*		8215300	0					
ANR	8215364	AdditiveExpression	p1 + 1		8215300	1		+			
ANR	8215365	Identifier	p1		8215300	0					
ANR	8215366	PrimaryExpression	1		8215300	1					
ANR	8215367	PrimaryExpression	'<'		8215300	1					
ANR	8215368	CompoundStatement		9:48:237:237	8215300	1					
ANR	8215369	ExpressionStatement	nested ++	326:16:11530:11538	8215300	0	True				
ANR	8215370	PostIncDecOperationExpression	nested ++		8215300	0					
ANR	8215371	Identifier	nested		8215300	0					
ANR	8215372	IncDec	++		8215300	1					
ANR	8215373	ExpressionStatement	p1 += 2	327:16:11556:11563	8215300	1	True				
ANR	8215374	AssignmentExpression	p1 += 2		8215300	0		+=			
ANR	8215375	Identifier	p1		8215300	0					
ANR	8215376	PrimaryExpression	2		8215300	1					
ANR	8215377	ElseStatement	else		8215300	0					
ANR	8215378	ExpressionStatement	p1 ++	329:16:11600:11604	8215300	0	True				
ANR	8215379	PostIncDecOperationExpression	p1 ++		8215300	0					
ANR	8215380	Identifier	p1		8215300	0					
ANR	8215381	IncDec	++		8215300	1					
ANR	8215382	ElseStatement	else		8215300	0					
ANR	8215383	CompoundStatement		14:15:346:346	8215300	0					
ANR	8215384	IfStatement	if ( * ( p1 + 1 ) != '>' && * ( p1 + 1 ) != 0x00 )		8215300	0					
ANR	8215385	Condition	* ( p1 + 1 ) != '>' && * ( p1 + 1 ) != 0x00	331:16:11639:11675	8215300	0	True				
ANR	8215386	AndExpression	* ( p1 + 1 ) != '>' && * ( p1 + 1 ) != 0x00		8215300	0		&&			
ANR	8215387	EqualityExpression	* ( p1 + 1 ) != '>'		8215300	0		!=			
ANR	8215388	UnaryOperationExpression	* ( p1 + 1 )		8215300	0					
ANR	8215389	UnaryOperator	*		8215300	0					
ANR	8215390	AdditiveExpression	p1 + 1		8215300	1		+			
ANR	8215391	Identifier	p1		8215300	0					
ANR	8215392	PrimaryExpression	1		8215300	1					
ANR	8215393	PrimaryExpression	'>'		8215300	1					
ANR	8215394	EqualityExpression	* ( p1 + 1 ) != 0x00		8215300	1		!=			
ANR	8215395	UnaryOperationExpression	* ( p1 + 1 )		8215300	0					
ANR	8215396	UnaryOperator	*		8215300	0					
ANR	8215397	AdditiveExpression	p1 + 1		8215300	1		+			
ANR	8215398	Identifier	p1		8215300	0					
ANR	8215399	PrimaryExpression	1		8215300	1					
ANR	8215400	PrimaryExpression	0x00		8215300	1					
ANR	8215401	CompoundStatement		15:55:403:403	8215300	1					
ANR	8215402	ExpressionStatement	p1 ++	332:16:11696:11700	8215300	0	True				
ANR	8215403	PostIncDecOperationExpression	p1 ++		8215300	0					
ANR	8215404	Identifier	p1		8215300	0					
ANR	8215405	IncDec	++		8215300	1					
ANR	8215406	ElseStatement	else		8215300	0					
ANR	8215407	CompoundStatement		17:19:446:446	8215300	0					
ANR	8215408	IfStatement	if ( nested )		8215300	0					
ANR	8215409	Condition	nested	334:20:11743:11748	8215300	0	True				
ANR	8215410	Identifier	nested		8215300	0					
ANR	8215411	ExpressionStatement	nested --	335:20:11771:11779	8215300	1	True				
ANR	8215412	PostIncDecOperationExpression	nested --		8215300	0					
ANR	8215413	Identifier	nested		8215300	0					
ANR	8215414	IncDec	--		8215300	1					
ANR	8215415	ElseStatement	else		8215300	0					
ANR	8215416	BreakStatement	break ;	337:20:11822:11827	8215300	0	True				
ANR	8215417	ExpressionStatement	p1 += 2	338:16:11845:11852	8215300	1	True				
ANR	8215418	AssignmentExpression	p1 += 2		8215300	0		+=			
ANR	8215419	Identifier	p1		8215300	0					
ANR	8215420	PrimaryExpression	2		8215300	1					
ANR	8215421	Condition	1	341:12:11890:11890	8215300	1	True				
ANR	8215422	PrimaryExpression	1		8215300	0					
ANR	8215423	IfStatement	if ( * p1 == 0x00 )		8215300	4					
ANR	8215424	Condition	* p1 == 0x00	343:8:11903:11913	8215300	0	True				
ANR	8215425	EqualityExpression	* p1 == 0x00		8215300	0		==			
ANR	8215426	UnaryOperationExpression	* p1		8215300	0					
ANR	8215427	UnaryOperator	*		8215300	0					
ANR	8215428	Identifier	p1		8215300	1					
ANR	8215429	PrimaryExpression	0x00		8215300	1					
ANR	8215430	ReturnStatement	return - 1 ;	344:8:11924:11933	8215300	1	True				
ANR	8215431	UnaryOperationExpression	- 1		8215300	0					
ANR	8215432	UnaryOperator	-		8215300	0					
ANR	8215433	PrimaryExpression	1		8215300	1					
ANR	8215434	ExpressionStatement	* p1 ++ = 0x00	347:4:11984:11996	8215300	5	True				
ANR	8215435	AssignmentExpression	* p1 ++ = 0x00		8215300	0		=			
ANR	8215436	UnaryOperationExpression	* p1 ++		8215300	0					
ANR	8215437	UnaryOperator	*		8215300	0					
ANR	8215438	PostIncDecOperationExpression	p1 ++		8215300	1					
ANR	8215439	Identifier	p1		8215300	0					
ANR	8215440	IncDec	++		8215300	1					
ANR	8215441	PrimaryExpression	0x00		8215300	1					
ANR	8215442	IfStatement	if ( * p1 == 0x00 )		8215300	6					
ANR	8215443	Condition	* p1 == 0x00	348:8:12006:12016	8215300	0	True				
ANR	8215444	EqualityExpression	* p1 == 0x00		8215300	0		==			
ANR	8215445	UnaryOperationExpression	* p1		8215300	0					
ANR	8215446	UnaryOperator	*		8215300	0					
ANR	8215447	Identifier	p1		8215300	1					
ANR	8215448	PrimaryExpression	0x00		8215300	1					
ANR	8215449	ReturnStatement	return - 1 ;	349:8:12027:12036	8215300	1	True				
ANR	8215450	UnaryOperationExpression	- 1		8215300	0					
ANR	8215451	UnaryOperator	-		8215300	0					
ANR	8215452	PrimaryExpression	1		8215300	1					
ANR	8215453	ExpressionStatement	* p1 = 0x00	350:4:12042:12052	8215300	7	True				
ANR	8215454	AssignmentExpression	* p1 = 0x00		8215300	0		=			
ANR	8215455	UnaryOperationExpression	* p1		8215300	0					
ANR	8215456	UnaryOperator	*		8215300	0					
ANR	8215457	Identifier	p1		8215300	1					
ANR	8215458	PrimaryExpression	0x00		8215300	1					
ANR	8215459	ExpressionStatement	* p = p1 + 1	355:4:12176:12187	8215300	8	True				
ANR	8215460	AssignmentExpression	* p = p1 + 1		8215300	0		=			
ANR	8215461	UnaryOperationExpression	* p		8215300	0					
ANR	8215462	UnaryOperator	*		8215300	0					
ANR	8215463	Identifier	p		8215300	1					
ANR	8215464	AdditiveExpression	p1 + 1		8215300	1		+			
ANR	8215465	Identifier	p1		8215300	0					
ANR	8215466	PrimaryExpression	1		8215300	1					
ANR	8215467	ExpressionStatement	p1 = start	357:4:12194:12204	8215300	9	True				
ANR	8215468	AssignmentExpression	p1 = start		8215300	0		=			
ANR	8215469	Identifier	p1		8215300	0					
ANR	8215470	Identifier	start		8215300	1					
ANR	8215471	ExpressionStatement	tokens = count_tokens ( p1 )	359:4:12211:12236	8215300	10	True				
ANR	8215472	AssignmentExpression	tokens = count_tokens ( p1 )		8215300	0		=			
ANR	8215473	Identifier	tokens		8215300	0					
ANR	8215474	CallExpression	count_tokens ( p1 )		8215300	1					
ANR	8215475	Callee	count_tokens		8215300	0					
ANR	8215476	Identifier	count_tokens		8215300	0					
ANR	8215477	ArgumentList	p1		8215300	1					
ANR	8215478	Argument	p1		8215300	0					
ANR	8215479	Identifier	p1		8215300	0					
ANR	8215480	ExpressionStatement	dict . size = tokens	360:4:12242:12260	8215300	11	True				
ANR	8215481	AssignmentExpression	dict . size = tokens		8215300	0		=			
ANR	8215482	MemberAccess	dict . size		8215300	0					
ANR	8215483	Identifier	dict		8215300	0					
ANR	8215484	Identifier	size		8215300	1					
ANR	8215485	Identifier	tokens		8215300	1					
ANR	8215486	ExpressionStatement	"code = param_begin_write_dict ( ( gs_param_list * ) plist , key , & dict , false )"	362:4:12267:12339	8215300	12	True				
ANR	8215487	AssignmentExpression	"code = param_begin_write_dict ( ( gs_param_list * ) plist , key , & dict , false )"		8215300	0		=			
ANR	8215488	Identifier	code		8215300	0					
ANR	8215489	CallExpression	"param_begin_write_dict ( ( gs_param_list * ) plist , key , & dict , false )"		8215300	1					
ANR	8215490	Callee	param_begin_write_dict		8215300	0					
ANR	8215491	Identifier	param_begin_write_dict		8215300	0					
ANR	8215492	ArgumentList	( gs_param_list * ) plist		8215300	1					
ANR	8215493	Argument	( gs_param_list * ) plist		8215300	0					
ANR	8215494	CastExpression	( gs_param_list * ) plist		8215300	0					
ANR	8215495	CastTarget	gs_param_list *		8215300	0					
ANR	8215496	Identifier	plist		8215300	1					
ANR	8215497	Argument	key		8215300	1					
ANR	8215498	Identifier	key		8215300	0					
ANR	8215499	Argument	& dict		8215300	2					
ANR	8215500	UnaryOperationExpression	& dict		8215300	0					
ANR	8215501	UnaryOperator	&		8215300	0					
ANR	8215502	Identifier	dict		8215300	1					
ANR	8215503	Argument	false		8215300	3					
ANR	8215504	Identifier	false		8215300	0					
ANR	8215505	IfStatement	if ( code < 0 )		8215300	13					
ANR	8215506	Condition	code < 0	363:8:12349:12356	8215300	0	True				
ANR	8215507	RelationalExpression	code < 0		8215300	0		<			
ANR	8215508	Identifier	code		8215300	0					
ANR	8215509	PrimaryExpression	0		8215300	1					
ANR	8215510	ReturnStatement	return code ;	364:8:12367:12378	8215300	1	True				
ANR	8215511	Identifier	code		8215300	0					
ANR	8215512	ExpressionStatement	"gs_param_list_set_persistent_keys ( dict . list , false )"	366:4:12385:12436	8215300	14	True				
ANR	8215513	CallExpression	"gs_param_list_set_persistent_keys ( dict . list , false )"		8215300	0					
ANR	8215514	Callee	gs_param_list_set_persistent_keys		8215300	0					
ANR	8215515	Identifier	gs_param_list_set_persistent_keys		8215300	0					
ANR	8215516	ArgumentList	dict . list		8215300	1					
ANR	8215517	Argument	dict . list		8215300	0					
ANR	8215518	MemberAccess	dict . list		8215300	0					
ANR	8215519	Identifier	dict		8215300	0					
ANR	8215520	Identifier	list		8215300	1					
ANR	8215521	Argument	false		8215300	1					
ANR	8215522	Identifier	false		8215300	0					
ANR	8215523	ExpressionStatement	"code = pjl_dist_add_tokens_to_list ( dict . list , & p1 )"	368:4:12443:12493	8215300	15	True				
ANR	8215524	AssignmentExpression	"code = pjl_dist_add_tokens_to_list ( dict . list , & p1 )"		8215300	0		=			
ANR	8215525	Identifier	code		8215300	0					
ANR	8215526	CallExpression	"pjl_dist_add_tokens_to_list ( dict . list , & p1 )"		8215300	1					
ANR	8215527	Callee	pjl_dist_add_tokens_to_list		8215300	0					
ANR	8215528	Identifier	pjl_dist_add_tokens_to_list		8215300	0					
ANR	8215529	ArgumentList	dict . list		8215300	1					
ANR	8215530	Argument	dict . list		8215300	0					
ANR	8215531	MemberAccess	dict . list		8215300	0					
ANR	8215532	Identifier	dict		8215300	0					
ANR	8215533	Identifier	list		8215300	1					
ANR	8215534	Argument	& p1		8215300	1					
ANR	8215535	UnaryOperationExpression	& p1		8215300	0					
ANR	8215536	UnaryOperator	&		8215300	0					
ANR	8215537	Identifier	p1		8215300	1					
ANR	8215538	IfStatement	if ( code < 0 )		8215300	16					
ANR	8215539	Condition	code < 0	369:8:12503:12510	8215300	0	True				
ANR	8215540	RelationalExpression	code < 0		8215300	0		<			
ANR	8215541	Identifier	code		8215300	0					
ANR	8215542	PrimaryExpression	0		8215300	1					
ANR	8215543	ReturnStatement	return code ;	370:8:12521:12532	8215300	1	True				
ANR	8215544	Identifier	code		8215300	0					
ANR	8215545	ExpressionStatement	"code = param_end_write_dict ( ( gs_param_list * ) plist , key , & dict )"	372:4:12539:12602	8215300	17	True				
ANR	8215546	AssignmentExpression	"code = param_end_write_dict ( ( gs_param_list * ) plist , key , & dict )"		8215300	0		=			
ANR	8215547	Identifier	code		8215300	0					
ANR	8215548	CallExpression	"param_end_write_dict ( ( gs_param_list * ) plist , key , & dict )"		8215300	1					
ANR	8215549	Callee	param_end_write_dict		8215300	0					
ANR	8215550	Identifier	param_end_write_dict		8215300	0					
ANR	8215551	ArgumentList	( gs_param_list * ) plist		8215300	1					
ANR	8215552	Argument	( gs_param_list * ) plist		8215300	0					
ANR	8215553	CastExpression	( gs_param_list * ) plist		8215300	0					
ANR	8215554	CastTarget	gs_param_list *		8215300	0					
ANR	8215555	Identifier	plist		8215300	1					
ANR	8215556	Argument	key		8215300	1					
ANR	8215557	Identifier	key		8215300	0					
ANR	8215558	Argument	& dict		8215300	2					
ANR	8215559	UnaryOperationExpression	& dict		8215300	0					
ANR	8215560	UnaryOperator	&		8215300	0					
ANR	8215561	Identifier	dict		8215300	1					
ANR	8215562	ReturnStatement	return code ;	373:4:12608:12619	8215300	18	True				
ANR	8215563	Identifier	code		8215300	0					
ANR	8215564	ReturnType	static int		8215300	1					
ANR	8215565	Identifier	pjl_dist_process_dict		8215300	2					
ANR	8215566	ParameterList	"gs_memory_t * mem , gs_c_param_list * plist , gs_param_name key , char * * p"		8215300	3					
ANR	8215567	Parameter	gs_memory_t * mem	316:33:11203:11218	8215300	0	True				
ANR	8215568	ParameterType	gs_memory_t *		8215300	0					
ANR	8215569	Identifier	mem		8215300	1					
ANR	8215570	Parameter	gs_c_param_list * plist	316:51:11221:11242	8215300	1	True				
ANR	8215571	ParameterType	gs_c_param_list *		8215300	0					
ANR	8215572	Identifier	plist		8215300	1					
ANR	8215573	Parameter	gs_param_name key	316:75:11245:11261	8215300	2	True				
ANR	8215574	ParameterType	gs_param_name		8215300	0					
ANR	8215575	Identifier	key		8215300	1					
ANR	8215576	Parameter	char * * p	316:94:11264:11271	8215300	3	True				
ANR	8215577	ParameterType	char * *		8215300	0					
ANR	8215578	Identifier	p		8215300	1					
ANR	8215579	CFGEntryNode	ENTRY		8215300		True				
ANR	8215580	CFGExitNode	EXIT		8215300		True				
ANR	8215581	Symbol	p1		8215300						
ANR	8215582	Symbol	code		8215300						
ANR	8215583	Symbol	* p1		8215300						
ANR	8215584	Symbol	count_tokens		8215300						
ANR	8215585	Symbol	start		8215300						
ANR	8215586	Symbol	* p1 ++		8215300						
ANR	8215587	Symbol	false		8215300						
ANR	8215588	Symbol	dict . list		8215300						
ANR	8215589	Symbol	& p1		8215300						
ANR	8215590	Symbol	nested		8215300						
ANR	8215591	Symbol	dict . size		8215300						
ANR	8215592	Symbol	p		8215300						
ANR	8215593	Symbol	plist		8215300						
ANR	8215594	Symbol	mem		8215300						
ANR	8215595	Symbol	* ( p1 + 1 )		8215300						
ANR	8215596	Symbol	pjl_dist_add_tokens_to_list		8215300						
ANR	8215597	Symbol	dict		8215300						
ANR	8215598	Symbol	tokens		8215300						
ANR	8215599	Symbol	* p		8215300						
ANR	8215600	Symbol	& dict		8215300						
ANR	8215601	Symbol	param_end_write_dict		8215300						
ANR	8215602	Symbol	key		8215300						
ANR	8215603	Symbol	param_begin_write_dict		8215300						
ANR	8215604	Function	pjl_dist_process_dict_or_hexstring	376:0:12624:13849							
ANR	8215605	FunctionDef	"pjl_dist_process_dict_or_hexstring (gs_memory_t * mem , gs_c_param_list * plist , gs_param_name key , char * * p)"		8215604	0					
ANR	8215606	CompoundStatement		377:0:12741:13849	8215604	0					
ANR	8215607	IdentifierDeclStatement	"char * p1 = * p , * src , * dest , data ;"	378:4:12747:12779	8215604	0	True				
ANR	8215608	IdentifierDecl	* p1 = * p		8215604	0					
ANR	8215609	IdentifierDeclType	char *		8215604	0					
ANR	8215610	Identifier	p1		8215604	1					
ANR	8215611	AssignmentExpression	* p1 = * p		8215604	2		=			
ANR	8215612	Identifier	p1		8215604	0					
ANR	8215613	UnaryOperationExpression	* p		8215604	1					
ANR	8215614	UnaryOperator	*		8215604	0					
ANR	8215615	Identifier	p		8215604	1					
ANR	8215616	IdentifierDecl	* src		8215604	1					
ANR	8215617	IdentifierDeclType	char *		8215604	0					
ANR	8215618	Identifier	src		8215604	1					
ANR	8215619	IdentifierDecl	* dest		8215604	2					
ANR	8215620	IdentifierDeclType	char *		8215604	0					
ANR	8215621	Identifier	dest		8215604	1					
ANR	8215622	IdentifierDecl	data		8215604	3					
ANR	8215623	IdentifierDeclType	char		8215604	0					
ANR	8215624	Identifier	data		8215604	1					
ANR	8215625	IdentifierDeclStatement	int i ;	379:4:12785:12790	8215604	1	True				
ANR	8215626	IdentifierDecl	i		8215604	0					
ANR	8215627	IdentifierDeclType	int		8215604	0					
ANR	8215628	Identifier	i		8215604	1					
ANR	8215629	IdentifierDeclStatement	gs_param_string ps ;	380:4:12796:12814	8215604	2	True				
ANR	8215630	IdentifierDecl	ps		8215604	0					
ANR	8215631	IdentifierDeclType	gs_param_string		8215604	0					
ANR	8215632	Identifier	ps		8215604	1					
ANR	8215633	IfStatement	if ( p1 [ 1 ] == '<' )		8215604	3					
ANR	8215634	Condition	p1 [ 1 ] == '<'	382:8:12825:12836	8215604	0	True				
ANR	8215635	EqualityExpression	p1 [ 1 ] == '<'		8215604	0		==			
ANR	8215636	ArrayIndexing	p1 [ 1 ]		8215604	0					
ANR	8215637	Identifier	p1		8215604	0					
ANR	8215638	PrimaryExpression	1		8215604	1					
ANR	8215639	PrimaryExpression	'<'		8215604	1					
ANR	8215640	CompoundStatement		6:22:97:97	8215604	1					
ANR	8215641	ExpressionStatement	* p += 2	383:8:12849:12856	8215604	0	True				
ANR	8215642	AssignmentExpression	* p += 2		8215604	0		+=			
ANR	8215643	UnaryOperationExpression	* p		8215604	0					
ANR	8215644	UnaryOperator	*		8215604	0					
ANR	8215645	Identifier	p		8215604	1					
ANR	8215646	PrimaryExpression	2		8215604	1					
ANR	8215647	ReturnStatement	"return pjl_dist_process_dict ( mem , plist , key , p ) ;"	384:8:12866:12914	8215604	1	True				
ANR	8215648	CallExpression	"pjl_dist_process_dict ( mem , plist , key , p )"		8215604	0					
ANR	8215649	Callee	pjl_dist_process_dict		8215604	0					
ANR	8215650	Identifier	pjl_dist_process_dict		8215604	0					
ANR	8215651	ArgumentList	mem		8215604	1					
ANR	8215652	Argument	mem		8215604	0					
ANR	8215653	Identifier	mem		8215604	0					
ANR	8215654	Argument	plist		8215604	1					
ANR	8215655	Identifier	plist		8215604	0					
ANR	8215656	Argument	key		8215604	2					
ANR	8215657	Identifier	key		8215604	0					
ANR	8215658	Argument	p		8215604	3					
ANR	8215659	Identifier	p		8215604	0					
ANR	8215660	ExpressionStatement	src = dest = p1	387:4:12927:12942	8215604	4	True				
ANR	8215661	AssignmentExpression	src = dest = p1		8215604	0		=			
ANR	8215662	Identifier	src		8215604	0					
ANR	8215663	AssignmentExpression	dest = p1		8215604	1		=			
ANR	8215664	Identifier	dest		8215604	0					
ANR	8215665	Identifier	p1		8215604	1					
ANR	8215666	WhileStatement	while ( * src != 0x00 && * src != '>' )		8215604	5					
ANR	8215667	Condition	* src != 0x00 && * src != '>'	388:11:12955:12981	8215604	0	True				
ANR	8215668	AndExpression	* src != 0x00 && * src != '>'		8215604	0		&&			
ANR	8215669	EqualityExpression	* src != 0x00		8215604	0		!=			
ANR	8215670	UnaryOperationExpression	* src		8215604	0					
ANR	8215671	UnaryOperator	*		8215604	0					
ANR	8215672	Identifier	src		8215604	1					
ANR	8215673	PrimaryExpression	0x00		8215604	1					
ANR	8215674	EqualityExpression	* src != '>'		8215604	1		!=			
ANR	8215675	UnaryOperationExpression	* src		8215604	0					
ANR	8215676	UnaryOperator	*		8215604	0					
ANR	8215677	Identifier	src		8215604	1					
ANR	8215678	PrimaryExpression	'>'		8215604	1					
ANR	8215679	CompoundStatement		12:40:242:242	8215604	1					
ANR	8215680	ExpressionStatement	data = 0	389:8:12994:13002	8215604	0	True				
ANR	8215681	AssignmentExpression	data = 0		8215604	0		=			
ANR	8215682	Identifier	data		8215604	0					
ANR	8215683	PrimaryExpression	0		8215604	1					
ANR	8215684	ForStatement	for ( i = 0 ; i < 2 ; i ++ )		8215604	1					
ANR	8215685	ForInit	i = 0 ;	390:13:13017:13020	8215604	0	True				
ANR	8215686	AssignmentExpression	i = 0		8215604	0		=			
ANR	8215687	Identifier	i		8215604	0					
ANR	8215688	PrimaryExpression	0		8215604	1					
ANR	8215689	Condition	i < 2	390:17:13021:13023	8215604	1	True				
ANR	8215690	RelationalExpression	i < 2		8215604	0		<			
ANR	8215691	Identifier	i		8215604	0					
ANR	8215692	PrimaryExpression	2		8215604	1					
ANR	8215693	PostIncDecOperationExpression	i ++	390:21:13025:13027	8215604	2	True				
ANR	8215694	Identifier	i		8215604	0					
ANR	8215695	IncDec	++		8215604	1					
ANR	8215696	CompoundStatement		14:26:288:288	8215604	3					
ANR	8215697	IfStatement	if ( * src >= '0' && * src <= '9' )		8215604	0					
ANR	8215698	Condition	* src >= '0' && * src <= '9'	391:15:13047:13072	8215604	0	True				
ANR	8215699	AndExpression	* src >= '0' && * src <= '9'		8215604	0		&&			
ANR	8215700	RelationalExpression	* src >= '0'		8215604	0		>=			
ANR	8215701	UnaryOperationExpression	* src		8215604	0					
ANR	8215702	UnaryOperator	*		8215604	0					
ANR	8215703	Identifier	src		8215604	1					
ANR	8215704	PrimaryExpression	'0'		8215604	1					
ANR	8215705	RelationalExpression	* src <= '9'		8215604	1		<=			
ANR	8215706	UnaryOperationExpression	* src		8215604	0					
ANR	8215707	UnaryOperator	*		8215604	0					
ANR	8215708	Identifier	src		8215604	1					
ANR	8215709	PrimaryExpression	'9'		8215604	1					
ANR	8215710	CompoundStatement		15:43:333:333	8215604	1					
ANR	8215711	ExpressionStatement	data = ( data << 4 )	392:16:13093:13111	8215604	0	True				
ANR	8215712	AssignmentExpression	data = ( data << 4 )		8215604	0		=			
ANR	8215713	Identifier	data		8215604	0					
ANR	8215714	ShiftExpression	data << 4		8215604	1		<<			
ANR	8215715	Identifier	data		8215604	0					
ANR	8215716	PrimaryExpression	4		8215604	1					
ANR	8215717	ExpressionStatement	data += ( * src - '0' )	393:16:13129:13149	8215604	1	True				
ANR	8215718	AssignmentExpression	data += ( * src - '0' )		8215604	0		+=			
ANR	8215719	Identifier	data		8215604	0					
ANR	8215720	AdditiveExpression	* src - '0'		8215604	1		-			
ANR	8215721	UnaryOperationExpression	* src		8215604	0					
ANR	8215722	UnaryOperator	*		8215604	0					
ANR	8215723	Identifier	src		8215604	1					
ANR	8215724	PrimaryExpression	'0'		8215604	1					
ANR	8215725	ElseStatement	else		8215604	0					
ANR	8215726	CompoundStatement		18:19:428:428	8215604	0					
ANR	8215727	IfStatement	if ( * src >= 'A' && * src <= 'F' )		8215604	0					
ANR	8215728	Condition	* src >= 'A' && * src <= 'F'	395:20:13192:13217	8215604	0	True				
ANR	8215729	AndExpression	* src >= 'A' && * src <= 'F'		8215604	0		&&			
ANR	8215730	RelationalExpression	* src >= 'A'		8215604	0		>=			
ANR	8215731	UnaryOperationExpression	* src		8215604	0					
ANR	8215732	UnaryOperator	*		8215604	0					
ANR	8215733	Identifier	src		8215604	1					
ANR	8215734	PrimaryExpression	'A'		8215604	1					
ANR	8215735	RelationalExpression	* src <= 'F'		8215604	1		<=			
ANR	8215736	UnaryOperationExpression	* src		8215604	0					
ANR	8215737	UnaryOperator	*		8215604	0					
ANR	8215738	Identifier	src		8215604	1					
ANR	8215739	PrimaryExpression	'F'		8215604	1					
ANR	8215740	CompoundStatement		19:48:478:478	8215604	1					
ANR	8215741	ExpressionStatement	data = ( data << 4 )	396:20:13242:13260	8215604	0	True				
ANR	8215742	AssignmentExpression	data = ( data << 4 )		8215604	0		=			
ANR	8215743	Identifier	data		8215604	0					
ANR	8215744	ShiftExpression	data << 4		8215604	1		<<			
ANR	8215745	Identifier	data		8215604	0					
ANR	8215746	PrimaryExpression	4		8215604	1					
ANR	8215747	ExpressionStatement	data += ( * src - 'A' + 10 )	397:20:13282:13307	8215604	1	True				
ANR	8215748	AssignmentExpression	data += ( * src - 'A' + 10 )		8215604	0		+=			
ANR	8215749	Identifier	data		8215604	0					
ANR	8215750	AdditiveExpression	* src - 'A' + 10		8215604	1		-			
ANR	8215751	UnaryOperationExpression	* src		8215604	0					
ANR	8215752	UnaryOperator	*		8215604	0					
ANR	8215753	Identifier	src		8215604	1					
ANR	8215754	AdditiveExpression	'A' + 10		8215604	1		+			
ANR	8215755	PrimaryExpression	'A'		8215604	0					
ANR	8215756	PrimaryExpression	10		8215604	1					
ANR	8215757	ElseStatement	else		8215604	0					
ANR	8215758	CompoundStatement		22:23:590:590	8215604	0					
ANR	8215759	IfStatement	if ( * src >= 'a' && * src <= 'f' )		8215604	0					
ANR	8215760	Condition	* src >= 'a' && * src <= 'f'	399:24:13358:13383	8215604	0	True				
ANR	8215761	AndExpression	* src >= 'a' && * src <= 'f'		8215604	0		&&			
ANR	8215762	RelationalExpression	* src >= 'a'		8215604	0		>=			
ANR	8215763	UnaryOperationExpression	* src		8215604	0					
ANR	8215764	UnaryOperator	*		8215604	0					
ANR	8215765	Identifier	src		8215604	1					
ANR	8215766	PrimaryExpression	'a'		8215604	1					
ANR	8215767	RelationalExpression	* src <= 'f'		8215604	1		<=			
ANR	8215768	UnaryOperationExpression	* src		8215604	0					
ANR	8215769	UnaryOperator	*		8215604	0					
ANR	8215770	Identifier	src		8215604	1					
ANR	8215771	PrimaryExpression	'f'		8215604	1					
ANR	8215772	CompoundStatement		23:52:644:644	8215604	1					
ANR	8215773	ExpressionStatement	data = ( data << 4 )	400:24:13412:13430	8215604	0	True				
ANR	8215774	AssignmentExpression	data = ( data << 4 )		8215604	0		=			
ANR	8215775	Identifier	data		8215604	0					
ANR	8215776	ShiftExpression	data << 4		8215604	1		<<			
ANR	8215777	Identifier	data		8215604	0					
ANR	8215778	PrimaryExpression	4		8215604	1					
ANR	8215779	ExpressionStatement	data += ( * src - 'a' + 10 )	401:24:13456:13481	8215604	1	True				
ANR	8215780	AssignmentExpression	data += ( * src - 'a' + 10 )		8215604	0		+=			
ANR	8215781	Identifier	data		8215604	0					
ANR	8215782	AdditiveExpression	* src - 'a' + 10		8215604	1		-			
ANR	8215783	UnaryOperationExpression	* src		8215604	0					
ANR	8215784	UnaryOperator	*		8215604	0					
ANR	8215785	Identifier	src		8215604	1					
ANR	8215786	AdditiveExpression	'a' + 10		8215604	1		+			
ANR	8215787	PrimaryExpression	'a'		8215604	0					
ANR	8215788	PrimaryExpression	10		8215604	1					
ANR	8215789	ElseStatement	else		8215604	0					
ANR	8215790	CompoundStatement		26:27:768:768	8215604	0					
ANR	8215791	ReturnStatement	return - 1 ;	403:24:13536:13545	8215604	0	True				
ANR	8215792	UnaryOperationExpression	- 1		8215604	0					
ANR	8215793	UnaryOperator	-		8215604	0					
ANR	8215794	PrimaryExpression	1		8215604	1					
ANR	8215795	ExpressionStatement	src ++	407:12:13613:13618	8215604	1	True				
ANR	8215796	PostIncDecOperationExpression	src ++		8215604	0					
ANR	8215797	Identifier	src		8215604	0					
ANR	8215798	IncDec	++		8215604	1					
ANR	8215799	ExpressionStatement	* dest ++ = data	409:8:13638:13652	8215604	2	True				
ANR	8215800	AssignmentExpression	* dest ++ = data		8215604	0		=			
ANR	8215801	UnaryOperationExpression	* dest ++		8215604	0					
ANR	8215802	UnaryOperator	*		8215604	0					
ANR	8215803	PostIncDecOperationExpression	dest ++		8215604	1					
ANR	8215804	Identifier	dest		8215604	0					
ANR	8215805	IncDec	++		8215604	1					
ANR	8215806	Identifier	data		8215604	1					
ANR	8215807	ExpressionStatement	* dest = 0x00	411:4:13664:13676	8215604	6	True				
ANR	8215808	AssignmentExpression	* dest = 0x00		8215604	0		=			
ANR	8215809	UnaryOperationExpression	* dest		8215604	0					
ANR	8215810	UnaryOperator	*		8215604	0					
ANR	8215811	Identifier	dest		8215604	1					
ANR	8215812	PrimaryExpression	0x00		8215604	1					
ANR	8215813	ExpressionStatement	* p = dest + 1	413:4:13683:13696	8215604	7	True				
ANR	8215814	AssignmentExpression	* p = dest + 1		8215604	0		=			
ANR	8215815	UnaryOperationExpression	* p		8215604	0					
ANR	8215816	UnaryOperator	*		8215604	0					
ANR	8215817	Identifier	p		8215604	1					
ANR	8215818	AdditiveExpression	dest + 1		8215604	1		+			
ANR	8215819	Identifier	dest		8215604	0					
ANR	8215820	PrimaryExpression	1		8215604	1					
ANR	8215821	ExpressionStatement	ps . data = ( const byte * ) p1	415:4:13703:13729	8215604	8	True				
ANR	8215822	AssignmentExpression	ps . data = ( const byte * ) p1		8215604	0		=			
ANR	8215823	MemberAccess	ps . data		8215604	0					
ANR	8215824	Identifier	ps		8215604	0					
ANR	8215825	Identifier	data		8215604	1					
ANR	8215826	CastExpression	( const byte * ) p1		8215604	1					
ANR	8215827	CastTarget	const byte *		8215604	0					
ANR	8215828	Identifier	p1		8215604	1					
ANR	8215829	ExpressionStatement	ps . size = strlen ( p1 )	416:4:13735:13755	8215604	9	True				
ANR	8215830	AssignmentExpression	ps . size = strlen ( p1 )		8215604	0		=			
ANR	8215831	MemberAccess	ps . size		8215604	0					
ANR	8215832	Identifier	ps		8215604	0					
ANR	8215833	Identifier	size		8215604	1					
ANR	8215834	CallExpression	strlen ( p1 )		8215604	1					
ANR	8215835	Callee	strlen		8215604	0					
ANR	8215836	Identifier	strlen		8215604	0					
ANR	8215837	ArgumentList	p1		8215604	1					
ANR	8215838	Argument	p1		8215604	0					
ANR	8215839	Identifier	p1		8215604	0					
ANR	8215840	ExpressionStatement	ps . persistent = false	417:4:13761:13782	8215604	10	True				
ANR	8215841	AssignmentExpression	ps . persistent = false		8215604	0		=			
ANR	8215842	MemberAccess	ps . persistent		8215604	0					
ANR	8215843	Identifier	ps		8215604	0					
ANR	8215844	Identifier	persistent		8215604	1					
ANR	8215845	Identifier	false		8215604	1					
ANR	8215846	ReturnStatement	"return param_write_string ( ( gs_param_list * ) plist , key , & ps ) ;"	418:4:13788:13847	8215604	11	True				
ANR	8215847	CallExpression	"param_write_string ( ( gs_param_list * ) plist , key , & ps )"		8215604	0					
ANR	8215848	Callee	param_write_string		8215604	0					
ANR	8215849	Identifier	param_write_string		8215604	0					
ANR	8215850	ArgumentList	( gs_param_list * ) plist		8215604	1					
ANR	8215851	Argument	( gs_param_list * ) plist		8215604	0					
ANR	8215852	CastExpression	( gs_param_list * ) plist		8215604	0					
ANR	8215853	CastTarget	gs_param_list *		8215604	0					
ANR	8215854	Identifier	plist		8215604	1					
ANR	8215855	Argument	key		8215604	1					
ANR	8215856	Identifier	key		8215604	0					
ANR	8215857	Argument	& ps		8215604	2					
ANR	8215858	UnaryOperationExpression	& ps		8215604	0					
ANR	8215859	UnaryOperator	&		8215604	0					
ANR	8215860	Identifier	ps		8215604	1					
ANR	8215861	ReturnType	static int		8215604	1					
ANR	8215862	Identifier	pjl_dist_process_dict_or_hexstring		8215604	2					
ANR	8215863	ParameterList	"gs_memory_t * mem , gs_c_param_list * plist , gs_param_name key , char * * p"		8215604	3					
ANR	8215864	Parameter	gs_memory_t * mem	376:46:12670:12685	8215604	0	True				
ANR	8215865	ParameterType	gs_memory_t *		8215604	0					
ANR	8215866	Identifier	mem		8215604	1					
ANR	8215867	Parameter	gs_c_param_list * plist	376:64:12688:12709	8215604	1	True				
ANR	8215868	ParameterType	gs_c_param_list *		8215604	0					
ANR	8215869	Identifier	plist		8215604	1					
ANR	8215870	Parameter	gs_param_name key	376:88:12712:12728	8215604	2	True				
ANR	8215871	ParameterType	gs_param_name		8215604	0					
ANR	8215872	Identifier	key		8215604	1					
ANR	8215873	Parameter	char * * p	376:107:12731:12738	8215604	3	True				
ANR	8215874	ParameterType	char * *		8215604	0					
ANR	8215875	Identifier	p		8215604	1					
ANR	8215876	CFGEntryNode	ENTRY		8215604		True				
ANR	8215877	CFGExitNode	EXIT		8215604		True				
ANR	8215878	Symbol	p1		8215604						
ANR	8215879	Symbol	ps		8215604						
ANR	8215880	Symbol	data		8215604						
ANR	8215881	Symbol	* p1		8215604						
ANR	8215882	Symbol	src		8215604						
ANR	8215883	Symbol	* dest		8215604						
ANR	8215884	Symbol	ps . size		8215604						
ANR	8215885	Symbol	false		8215604						
ANR	8215886	Symbol	ps . persistent		8215604						
ANR	8215887	Symbol	i		8215604						
ANR	8215888	Symbol	pjl_dist_process_dict		8215604						
ANR	8215889	Symbol	dest		8215604						
ANR	8215890	Symbol	& ps		8215604						
ANR	8215891	Symbol	* src		8215604						
ANR	8215892	Symbol	p		8215604						
ANR	8215893	Symbol	strlen		8215604						
ANR	8215894	Symbol	plist		8215604						
ANR	8215895	Symbol	mem		8215604						
ANR	8215896	Symbol	ps . data		8215604						
ANR	8215897	Symbol	* p		8215604						
ANR	8215898	Symbol	* dest ++		8215604						
ANR	8215899	Symbol	param_write_string		8215604						
ANR	8215900	Symbol	key		8215604						
ANR	8215901	Function	pjl_dist_process_name	421:0:13852:14406							
ANR	8215902	FunctionDef	"pjl_dist_process_name (gs_memory_t * mem , gs_c_param_list * plist , gs_param_name * key , char * * p)"		8215901	0					
ANR	8215903	CompoundStatement		422:0:13957:14406	8215901	0					
ANR	8215904	IdentifierDeclStatement	char * start = * p + 1 ;	423:4:13963:13983	8215901	0	True				
ANR	8215905	IdentifierDecl	* start = * p + 1		8215901	0					
ANR	8215906	IdentifierDeclType	char *		8215901	0					
ANR	8215907	Identifier	start		8215901	1					
ANR	8215908	AssignmentExpression	* start = * p + 1		8215901	2		=			
ANR	8215909	Identifier	start		8215901	0					
ANR	8215910	AdditiveExpression	* p + 1		8215901	1		+			
ANR	8215911	UnaryOperationExpression	* p		8215901	0					
ANR	8215912	UnaryOperator	*		8215901	0					
ANR	8215913	Identifier	p		8215901	1					
ANR	8215914	PrimaryExpression	1		8215901	1					
ANR	8215915	IdentifierDeclStatement	gs_param_string ps ;	424:4:13989:14007	8215901	1	True				
ANR	8215916	IdentifierDecl	ps		8215901	0					
ANR	8215917	IdentifierDeclType	gs_param_string		8215901	0					
ANR	8215918	Identifier	ps		8215901	1					
ANR	8215919	WhileStatement	while ( * * p != ' ' && * * p != 0x00 )		8215901	2					
ANR	8215920	Condition	* * p != ' ' && * * p != 0x00	426:11:14021:14045	8215901	0	True				
ANR	8215921	AndExpression	* * p != ' ' && * * p != 0x00		8215901	0		&&			
ANR	8215922	EqualityExpression	* * p != ' '		8215901	0		!=			
ANR	8215923	UnaryOperationExpression	* * p		8215901	0					
ANR	8215924	UnaryOperator	*		8215901	0					
ANR	8215925	UnaryOperationExpression	* p		8215901	1					
ANR	8215926	UnaryOperator	*		8215901	0					
ANR	8215927	Identifier	p		8215901	1					
ANR	8215928	PrimaryExpression	' '		8215901	1					
ANR	8215929	EqualityExpression	* * p != 0x00		8215901	1		!=			
ANR	8215930	UnaryOperationExpression	* * p		8215901	0					
ANR	8215931	UnaryOperator	*		8215901	0					
ANR	8215932	UnaryOperationExpression	* p		8215901	1					
ANR	8215933	UnaryOperator	*		8215901	0					
ANR	8215934	Identifier	p		8215901	1					
ANR	8215935	PrimaryExpression	0x00		8215901	1					
ANR	8215936	ExpressionStatement	( * p ) ++	427:8:14056:14062	8215901	1	True				
ANR	8215937	PostIncDecOperationExpression	( * p ) ++		8215901	0					
ANR	8215938	UnaryOperationExpression	* p		8215901	0					
ANR	8215939	UnaryOperator	*		8215901	0					
ANR	8215940	Identifier	p		8215901	1					
ANR	8215941	IncDec	++		8215901	1					
ANR	8215942	IfStatement	if ( * * p != 0x00 )		8215901	3					
ANR	8215943	Condition	* * p != 0x00	429:8:14073:14083	8215901	0	True				
ANR	8215944	EqualityExpression	* * p != 0x00		8215901	0		!=			
ANR	8215945	UnaryOperationExpression	* * p		8215901	0					
ANR	8215946	UnaryOperator	*		8215901	0					
ANR	8215947	UnaryOperationExpression	* p		8215901	1					
ANR	8215948	UnaryOperator	*		8215901	0					
ANR	8215949	Identifier	p		8215901	1					
ANR	8215950	PrimaryExpression	0x00		8215901	1					
ANR	8215951	CompoundStatement		8:21:128:128	8215901	1					
ANR	8215952	ExpressionStatement	* * p = 0x00	430:8:14096:14106	8215901	0	True				
ANR	8215953	AssignmentExpression	* * p = 0x00		8215901	0		=			
ANR	8215954	UnaryOperationExpression	* * p		8215901	0					
ANR	8215955	UnaryOperator	*		8215901	0					
ANR	8215956	UnaryOperationExpression	* p		8215901	1					
ANR	8215957	UnaryOperator	*		8215901	0					
ANR	8215958	Identifier	p		8215901	1					
ANR	8215959	PrimaryExpression	0x00		8215901	1					
ANR	8215960	ExpressionStatement	( * p ) ++	431:8:14116:14122	8215901	1	True				
ANR	8215961	PostIncDecOperationExpression	( * p ) ++		8215901	0					
ANR	8215962	UnaryOperationExpression	* p		8215901	0					
ANR	8215963	UnaryOperator	*		8215901	0					
ANR	8215964	Identifier	p		8215901	1					
ANR	8215965	IncDec	++		8215901	1					
ANR	8215966	IfStatement	if ( * key == NULL )		8215901	4					
ANR	8215967	Condition	* key == NULL	434:8:14139:14150	8215901	0	True				
ANR	8215968	EqualityExpression	* key == NULL		8215901	0		==			
ANR	8215969	UnaryOperationExpression	* key		8215901	0					
ANR	8215970	UnaryOperator	*		8215901	0					
ANR	8215971	Identifier	key		8215901	1					
ANR	8215972	Identifier	NULL		8215901	1					
ANR	8215973	ExpressionStatement	* key = ( gs_param_name ) start	435:8:14161:14188	8215901	1	True				
ANR	8215974	AssignmentExpression	* key = ( gs_param_name ) start		8215901	0		=			
ANR	8215975	UnaryOperationExpression	* key		8215901	0					
ANR	8215976	UnaryOperator	*		8215901	0					
ANR	8215977	Identifier	key		8215901	1					
ANR	8215978	CastExpression	( gs_param_name ) start		8215901	1					
ANR	8215979	CastTarget	gs_param_name		8215901	0					
ANR	8215980	Identifier	start		8215901	1					
ANR	8215981	ElseStatement	else		8215901	0					
ANR	8215982	CompoundStatement		15:9:241:241	8215901	0					
ANR	8215983	ExpressionStatement	ps . data = ( const byte * ) start	437:8:14209:14238	8215901	0	True				
ANR	8215984	AssignmentExpression	ps . data = ( const byte * ) start		8215901	0		=			
ANR	8215985	MemberAccess	ps . data		8215901	0					
ANR	8215986	Identifier	ps		8215901	0					
ANR	8215987	Identifier	data		8215901	1					
ANR	8215988	CastExpression	( const byte * ) start		8215901	1					
ANR	8215989	CastTarget	const byte *		8215901	0					
ANR	8215990	Identifier	start		8215901	1					
ANR	8215991	ExpressionStatement	ps . size = strlen ( start )	438:8:14248:14271	8215901	1	True				
ANR	8215992	AssignmentExpression	ps . size = strlen ( start )		8215901	0		=			
ANR	8215993	MemberAccess	ps . size		8215901	0					
ANR	8215994	Identifier	ps		8215901	0					
ANR	8215995	Identifier	size		8215901	1					
ANR	8215996	CallExpression	strlen ( start )		8215901	1					
ANR	8215997	Callee	strlen		8215901	0					
ANR	8215998	Identifier	strlen		8215901	0					
ANR	8215999	ArgumentList	start		8215901	1					
ANR	8216000	Argument	start		8215901	0					
ANR	8216001	Identifier	start		8215901	0					
ANR	8216002	ExpressionStatement	ps . persistent = false	439:8:14281:14302	8215901	2	True				
ANR	8216003	AssignmentExpression	ps . persistent = false		8215901	0		=			
ANR	8216004	MemberAccess	ps . persistent		8215901	0					
ANR	8216005	Identifier	ps		8215901	0					
ANR	8216006	Identifier	persistent		8215901	1					
ANR	8216007	Identifier	false		8215901	1					
ANR	8216008	ExpressionStatement	"param_write_name ( ( gs_param_list * ) plist , * key , & ps )"	440:8:14312:14363	8215901	3	True				
ANR	8216009	CallExpression	"param_write_name ( ( gs_param_list * ) plist , * key , & ps )"		8215901	0					
ANR	8216010	Callee	param_write_name		8215901	0					
ANR	8216011	Identifier	param_write_name		8215901	0					
ANR	8216012	ArgumentList	( gs_param_list * ) plist		8215901	1					
ANR	8216013	Argument	( gs_param_list * ) plist		8215901	0					
ANR	8216014	CastExpression	( gs_param_list * ) plist		8215901	0					
ANR	8216015	CastTarget	gs_param_list *		8215901	0					
ANR	8216016	Identifier	plist		8215901	1					
ANR	8216017	Argument	* key		8215901	1					
ANR	8216018	UnaryOperationExpression	* key		8215901	0					
ANR	8216019	UnaryOperator	*		8215901	0					
ANR	8216020	Identifier	key		8215901	1					
ANR	8216021	Argument	& ps		8215901	2					
ANR	8216022	UnaryOperationExpression	& ps		8215901	0					
ANR	8216023	UnaryOperator	&		8215901	0					
ANR	8216024	Identifier	ps		8215901	1					
ANR	8216025	ExpressionStatement	* key = NULL	441:8:14373:14384	8215901	4	True				
ANR	8216026	AssignmentExpression	* key = NULL		8215901	0		=			
ANR	8216027	UnaryOperationExpression	* key		8215901	0					
ANR	8216028	UnaryOperator	*		8215901	0					
ANR	8216029	Identifier	key		8215901	1					
ANR	8216030	Identifier	NULL		8215901	1					
ANR	8216031	ReturnStatement	return 0 ;	443:4:14396:14404	8215901	5	True				
ANR	8216032	PrimaryExpression	0		8215901	0					
ANR	8216033	ReturnType	static int		8215901	1					
ANR	8216034	Identifier	pjl_dist_process_name		8215901	2					
ANR	8216035	ParameterList	"gs_memory_t * mem , gs_c_param_list * plist , gs_param_name * key , char * * p"		8215901	3					
ANR	8216036	Parameter	gs_memory_t * mem	421:33:13885:13900	8215901	0	True				
ANR	8216037	ParameterType	gs_memory_t *		8215901	0					
ANR	8216038	Identifier	mem		8215901	1					
ANR	8216039	Parameter	gs_c_param_list * plist	421:51:13903:13924	8215901	1	True				
ANR	8216040	ParameterType	gs_c_param_list *		8215901	0					
ANR	8216041	Identifier	plist		8215901	1					
ANR	8216042	Parameter	gs_param_name * key	421:75:13927:13944	8215901	2	True				
ANR	8216043	ParameterType	gs_param_name *		8215901	0					
ANR	8216044	Identifier	key		8215901	1					
ANR	8216045	Parameter	char * * p	421:95:13947:13954	8215901	3	True				
ANR	8216046	ParameterType	char * *		8215901	0					
ANR	8216047	Identifier	p		8215901	1					
ANR	8216048	CFGEntryNode	ENTRY		8215901		True				
ANR	8216049	CFGExitNode	EXIT		8215901		True				
ANR	8216050	Symbol	ps		8215901						
ANR	8216051	Symbol	NULL		8215901						
ANR	8216052	Symbol	ps . size		8215901						
ANR	8216053	Symbol	start		8215901						
ANR	8216054	Symbol	ps . persistent		8215901						
ANR	8216055	Symbol	false		8215901						
ANR	8216056	Symbol	* key		8215901						
ANR	8216057	Symbol	& ps		8215901						
ANR	8216058	Symbol	p		8215901						
ANR	8216059	Symbol	strlen		8215901						
ANR	8216060	Symbol	plist		8215901						
ANR	8216061	Symbol	mem		8215901						
ANR	8216062	Symbol	ps . data		8215901						
ANR	8216063	Symbol	* p		8215901						
ANR	8216064	Symbol	* * p		8215901						
ANR	8216065	Symbol	key		8215901						
ANR	8216066	Function	pjl_dist_process_string	446:0:14409:14847							
ANR	8216067	FunctionDef	"pjl_dist_process_string (gs_memory_t * mem , gs_c_param_list * plist , gs_param_name key , char * * p)"		8216066	0					
ANR	8216068	CompoundStatement		447:0:14515:14847	8216066	0					
ANR	8216069	IdentifierDeclStatement	char * start = * p + 1 ;	448:4:14521:14541	8216066	0	True				
ANR	8216070	IdentifierDecl	* start = * p + 1		8216066	0					
ANR	8216071	IdentifierDeclType	char *		8216066	0					
ANR	8216072	Identifier	start		8216066	1					
ANR	8216073	AssignmentExpression	* start = * p + 1		8216066	2		=			
ANR	8216074	Identifier	start		8216066	0					
ANR	8216075	AdditiveExpression	* p + 1		8216066	1		+			
ANR	8216076	UnaryOperationExpression	* p		8216066	0					
ANR	8216077	UnaryOperator	*		8216066	0					
ANR	8216078	Identifier	p		8216066	1					
ANR	8216079	PrimaryExpression	1		8216066	1					
ANR	8216080	IdentifierDeclStatement	gs_param_string ps ;	449:4:14547:14565	8216066	1	True				
ANR	8216081	IdentifierDecl	ps		8216066	0					
ANR	8216082	IdentifierDeclType	gs_param_string		8216066	0					
ANR	8216083	Identifier	ps		8216066	1					
ANR	8216084	WhileStatement	while ( * * p != ')' && * * p != 0x00 )		8216066	2					
ANR	8216085	Condition	* * p != ')' && * * p != 0x00	451:11:14579:14603	8216066	0	True				
ANR	8216086	AndExpression	* * p != ')' && * * p != 0x00		8216066	0		&&			
ANR	8216087	EqualityExpression	* * p != ')'		8216066	0		!=			
ANR	8216088	UnaryOperationExpression	* * p		8216066	0					
ANR	8216089	UnaryOperator	*		8216066	0					
ANR	8216090	UnaryOperationExpression	* p		8216066	1					
ANR	8216091	UnaryOperator	*		8216066	0					
ANR	8216092	Identifier	p		8216066	1					
ANR	8216093	PrimaryExpression	')'		8216066	1					
ANR	8216094	EqualityExpression	* * p != 0x00		8216066	1		!=			
ANR	8216095	UnaryOperationExpression	* * p		8216066	0					
ANR	8216096	UnaryOperator	*		8216066	0					
ANR	8216097	UnaryOperationExpression	* p		8216066	1					
ANR	8216098	UnaryOperator	*		8216066	0					
ANR	8216099	Identifier	p		8216066	1					
ANR	8216100	PrimaryExpression	0x00		8216066	1					
ANR	8216101	ExpressionStatement	( * p ) ++	452:8:14614:14620	8216066	1	True				
ANR	8216102	PostIncDecOperationExpression	( * p ) ++		8216066	0					
ANR	8216103	UnaryOperationExpression	* p		8216066	0					
ANR	8216104	UnaryOperator	*		8216066	0					
ANR	8216105	Identifier	p		8216066	1					
ANR	8216106	IncDec	++		8216066	1					
ANR	8216107	IfStatement	if ( * * p != ')' )		8216066	3					
ANR	8216108	Condition	* * p != ')'	454:8:14631:14640	8216066	0	True				
ANR	8216109	EqualityExpression	* * p != ')'		8216066	0		!=			
ANR	8216110	UnaryOperationExpression	* * p		8216066	0					
ANR	8216111	UnaryOperator	*		8216066	0					
ANR	8216112	UnaryOperationExpression	* p		8216066	1					
ANR	8216113	UnaryOperator	*		8216066	0					
ANR	8216114	Identifier	p		8216066	1					
ANR	8216115	PrimaryExpression	')'		8216066	1					
ANR	8216116	ReturnStatement	return - 1 ;	455:8:14651:14660	8216066	1	True				
ANR	8216117	UnaryOperationExpression	- 1		8216066	0					
ANR	8216118	UnaryOperator	-		8216066	0					
ANR	8216119	PrimaryExpression	1		8216066	1					
ANR	8216120	ExpressionStatement	* * p = 0x00	457:4:14667:14676	8216066	4	True				
ANR	8216121	AssignmentExpression	* * p = 0x00		8216066	0		=			
ANR	8216122	UnaryOperationExpression	* * p		8216066	0					
ANR	8216123	UnaryOperator	*		8216066	0					
ANR	8216124	UnaryOperationExpression	* p		8216066	1					
ANR	8216125	UnaryOperator	*		8216066	0					
ANR	8216126	Identifier	p		8216066	1					
ANR	8216127	PrimaryExpression	0x00		8216066	1					
ANR	8216128	ExpressionStatement	( * p ) ++	458:4:14682:14688	8216066	5	True				
ANR	8216129	PostIncDecOperationExpression	( * p ) ++		8216066	0					
ANR	8216130	UnaryOperationExpression	* p		8216066	0					
ANR	8216131	UnaryOperator	*		8216066	0					
ANR	8216132	Identifier	p		8216066	1					
ANR	8216133	IncDec	++		8216066	1					
ANR	8216134	ExpressionStatement	ps . data = ( const byte * ) start	460:4:14695:14724	8216066	6	True				
ANR	8216135	AssignmentExpression	ps . data = ( const byte * ) start		8216066	0		=			
ANR	8216136	MemberAccess	ps . data		8216066	0					
ANR	8216137	Identifier	ps		8216066	0					
ANR	8216138	Identifier	data		8216066	1					
ANR	8216139	CastExpression	( const byte * ) start		8216066	1					
ANR	8216140	CastTarget	const byte *		8216066	0					
ANR	8216141	Identifier	start		8216066	1					
ANR	8216142	ExpressionStatement	ps . size = strlen ( start )	461:4:14730:14753	8216066	7	True				
ANR	8216143	AssignmentExpression	ps . size = strlen ( start )		8216066	0		=			
ANR	8216144	MemberAccess	ps . size		8216066	0					
ANR	8216145	Identifier	ps		8216066	0					
ANR	8216146	Identifier	size		8216066	1					
ANR	8216147	CallExpression	strlen ( start )		8216066	1					
ANR	8216148	Callee	strlen		8216066	0					
ANR	8216149	Identifier	strlen		8216066	0					
ANR	8216150	ArgumentList	start		8216066	1					
ANR	8216151	Argument	start		8216066	0					
ANR	8216152	Identifier	start		8216066	0					
ANR	8216153	ExpressionStatement	ps . persistent = false	462:4:14759:14780	8216066	8	True				
ANR	8216154	AssignmentExpression	ps . persistent = false		8216066	0		=			
ANR	8216155	MemberAccess	ps . persistent		8216066	0					
ANR	8216156	Identifier	ps		8216066	0					
ANR	8216157	Identifier	persistent		8216066	1					
ANR	8216158	Identifier	false		8216066	1					
ANR	8216159	ReturnStatement	"return param_write_string ( ( gs_param_list * ) plist , key , & ps ) ;"	463:4:14786:14845	8216066	9	True				
ANR	8216160	CallExpression	"param_write_string ( ( gs_param_list * ) plist , key , & ps )"		8216066	0					
ANR	8216161	Callee	param_write_string		8216066	0					
ANR	8216162	Identifier	param_write_string		8216066	0					
ANR	8216163	ArgumentList	( gs_param_list * ) plist		8216066	1					
ANR	8216164	Argument	( gs_param_list * ) plist		8216066	0					
ANR	8216165	CastExpression	( gs_param_list * ) plist		8216066	0					
ANR	8216166	CastTarget	gs_param_list *		8216066	0					
ANR	8216167	Identifier	plist		8216066	1					
ANR	8216168	Argument	key		8216066	1					
ANR	8216169	Identifier	key		8216066	0					
ANR	8216170	Argument	& ps		8216066	2					
ANR	8216171	UnaryOperationExpression	& ps		8216066	0					
ANR	8216172	UnaryOperator	&		8216066	0					
ANR	8216173	Identifier	ps		8216066	1					
ANR	8216174	ReturnType	static int		8216066	1					
ANR	8216175	Identifier	pjl_dist_process_string		8216066	2					
ANR	8216176	ParameterList	"gs_memory_t * mem , gs_c_param_list * plist , gs_param_name key , char * * p"		8216066	3					
ANR	8216177	Parameter	gs_memory_t * mem	446:35:14444:14459	8216066	0	True				
ANR	8216178	ParameterType	gs_memory_t *		8216066	0					
ANR	8216179	Identifier	mem		8216066	1					
ANR	8216180	Parameter	gs_c_param_list * plist	446:53:14462:14483	8216066	1	True				
ANR	8216181	ParameterType	gs_c_param_list *		8216066	0					
ANR	8216182	Identifier	plist		8216066	1					
ANR	8216183	Parameter	gs_param_name key	446:77:14486:14502	8216066	2	True				
ANR	8216184	ParameterType	gs_param_name		8216066	0					
ANR	8216185	Identifier	key		8216066	1					
ANR	8216186	Parameter	char * * p	446:96:14505:14512	8216066	3	True				
ANR	8216187	ParameterType	char * *		8216066	0					
ANR	8216188	Identifier	p		8216066	1					
ANR	8216189	CFGEntryNode	ENTRY		8216066		True				
ANR	8216190	CFGExitNode	EXIT		8216066		True				
ANR	8216191	Symbol	ps		8216066						
ANR	8216192	Symbol	ps . size		8216066						
ANR	8216193	Symbol	start		8216066						
ANR	8216194	Symbol	false		8216066						
ANR	8216195	Symbol	ps . persistent		8216066						
ANR	8216196	Symbol	& ps		8216066						
ANR	8216197	Symbol	p		8216066						
ANR	8216198	Symbol	strlen		8216066						
ANR	8216199	Symbol	plist		8216066						
ANR	8216200	Symbol	mem		8216066						
ANR	8216201	Symbol	ps . data		8216066						
ANR	8216202	Symbol	* p		8216066						
ANR	8216203	Symbol	* * p		8216066						
ANR	8216204	Symbol	param_write_string		8216066						
ANR	8216205	Symbol	key		8216066						
ANR	8216206	Function	count_tokens	467:0:14917:17884							
ANR	8216207	FunctionDef	count_tokens (char * p)		8216206	0					
ANR	8216208	CompoundStatement		468:0:14950:17884	8216206	0					
ANR	8216209	IdentifierDeclStatement	int tokens = 0 ;	469:4:14956:14970	8216206	0	True				
ANR	8216210	IdentifierDecl	tokens = 0		8216206	0					
ANR	8216211	IdentifierDeclType	int		8216206	0					
ANR	8216212	Identifier	tokens		8216206	1					
ANR	8216213	AssignmentExpression	tokens = 0		8216206	2		=			
ANR	8216214	Identifier	tokens		8216206	0					
ANR	8216215	PrimaryExpression	0		8216206	1					
ANR	8216216	WhileStatement	while ( * p != 0x00 )		8216206	1					
ANR	8216217	Condition	* p != 0x00	471:11:14984:14993	8216206	0	True				
ANR	8216218	EqualityExpression	* p != 0x00		8216206	0		!=			
ANR	8216219	UnaryOperationExpression	* p		8216206	0					
ANR	8216220	UnaryOperator	*		8216206	0					
ANR	8216221	Identifier	p		8216206	1					
ANR	8216222	PrimaryExpression	0x00		8216206	1					
ANR	8216223	CompoundStatement		4:22:44:44	8216206	1					
ANR	8216224	SwitchStatement	switch ( * p )		8216206	0					
ANR	8216225	Condition	* p	472:16:15013:15014	8216206	0	True				
ANR	8216226	UnaryOperationExpression	* p		8216206	0					
ANR	8216227	UnaryOperator	*		8216206	0					
ANR	8216228	Identifier	p		8216206	1					
ANR	8216229	CompoundStatement		5:20:66:66	8216206	1					
ANR	8216230	Label	case ' ' :	473:12:15031:15039	8216206	0	True				
ANR	8216231	ExpressionStatement	p ++	474:16:15057:15060	8216206	1	True				
ANR	8216232	PostIncDecOperationExpression	p ++		8216206	0					
ANR	8216233	Identifier	p		8216206	0					
ANR	8216234	IncDec	++		8216206	1					
ANR	8216235	BreakStatement	break ;	475:16:15078:15083	8216206	2	True				
ANR	8216236	Label	case 'f' :	476:12:15097:15105	8216206	3	True				
ANR	8216237	IfStatement	"if ( strncmp ( p , ""false"" , 5 ) == 0 )"		8216206	4					
ANR	8216238	Condition	"strncmp ( p , ""false"" , 5 ) == 0"	477:20:15127:15153	8216206	0	True				
ANR	8216239	EqualityExpression	"strncmp ( p , ""false"" , 5 ) == 0"		8216206	0		==			
ANR	8216240	CallExpression	"strncmp ( p , ""false"" , 5 )"		8216206	0					
ANR	8216241	Callee	strncmp		8216206	0					
ANR	8216242	Identifier	strncmp		8216206	0					
ANR	8216243	ArgumentList	p		8216206	1					
ANR	8216244	Argument	p		8216206	0					
ANR	8216245	Identifier	p		8216206	0					
ANR	8216246	Argument	"""false"""		8216206	1					
ANR	8216247	PrimaryExpression	"""false"""		8216206	0					
ANR	8216248	Argument	5		8216206	2					
ANR	8216249	PrimaryExpression	5		8216206	0					
ANR	8216250	PrimaryExpression	0		8216206	1					
ANR	8216251	CompoundStatement		10:49:205:205	8216206	1					
ANR	8216252	ExpressionStatement	p += 5	478:20:15178:15184	8216206	0	True				
ANR	8216253	AssignmentExpression	p += 5		8216206	0		+=			
ANR	8216254	Identifier	p		8216206	0					
ANR	8216255	PrimaryExpression	5		8216206	1					
ANR	8216256	ExpressionStatement	tokens ++	479:20:15206:15214	8216206	1	True				
ANR	8216257	PostIncDecOperationExpression	tokens ++		8216206	0					
ANR	8216258	Identifier	tokens		8216206	0					
ANR	8216259	IncDec	++		8216206	1					
ANR	8216260	ElseStatement	else		8216206	0					
ANR	8216261	CompoundStatement		13:23:288:288	8216206	0					
ANR	8216262	ReturnStatement	return - 1 ;	481:20:15261:15270	8216206	0	True				
ANR	8216263	UnaryOperationExpression	- 1		8216206	0					
ANR	8216264	UnaryOperator	-		8216206	0					
ANR	8216265	PrimaryExpression	1		8216206	1					
ANR	8216266	BreakStatement	break ;	483:16:15306:15311	8216206	5	True				
ANR	8216267	Label	case 't' :	484:12:15325:15333	8216206	6	True				
ANR	8216268	IfStatement	"if ( strncmp ( p , ""true"" , 4 ) == 0 )"		8216206	7					
ANR	8216269	Condition	"strncmp ( p , ""true"" , 4 ) == 0"	485:20:15355:15380	8216206	0	True				
ANR	8216270	EqualityExpression	"strncmp ( p , ""true"" , 4 ) == 0"		8216206	0		==			
ANR	8216271	CallExpression	"strncmp ( p , ""true"" , 4 )"		8216206	0					
ANR	8216272	Callee	strncmp		8216206	0					
ANR	8216273	Identifier	strncmp		8216206	0					
ANR	8216274	ArgumentList	p		8216206	1					
ANR	8216275	Argument	p		8216206	0					
ANR	8216276	Identifier	p		8216206	0					
ANR	8216277	Argument	"""true"""		8216206	1					
ANR	8216278	PrimaryExpression	"""true"""		8216206	0					
ANR	8216279	Argument	4		8216206	2					
ANR	8216280	PrimaryExpression	4		8216206	0					
ANR	8216281	PrimaryExpression	0		8216206	1					
ANR	8216282	CompoundStatement		18:48:432:432	8216206	1					
ANR	8216283	ExpressionStatement	p += 4	486:20:15405:15411	8216206	0	True				
ANR	8216284	AssignmentExpression	p += 4		8216206	0		+=			
ANR	8216285	Identifier	p		8216206	0					
ANR	8216286	PrimaryExpression	4		8216206	1					
ANR	8216287	ExpressionStatement	tokens ++	487:20:15433:15441	8216206	1	True				
ANR	8216288	PostIncDecOperationExpression	tokens ++		8216206	0					
ANR	8216289	Identifier	tokens		8216206	0					
ANR	8216290	IncDec	++		8216206	1					
ANR	8216291	ElseStatement	else		8216206	0					
ANR	8216292	CompoundStatement		21:23:515:515	8216206	0					
ANR	8216293	ReturnStatement	return - 1 ;	489:20:15488:15497	8216206	0	True				
ANR	8216294	UnaryOperationExpression	- 1		8216206	0					
ANR	8216295	UnaryOperator	-		8216206	0					
ANR	8216296	PrimaryExpression	1		8216206	1					
ANR	8216297	BreakStatement	break ;	491:16:15533:15538	8216206	8	True				
ANR	8216298	Label	case '<' :	492:12:15552:15560	8216206	9	True				
ANR	8216299	IfStatement	if ( p [ 1 ] == '>' )		8216206	10					
ANR	8216300	Condition	p [ 1 ] == '>'	493:20:15582:15592	8216206	0	True				
ANR	8216301	EqualityExpression	p [ 1 ] == '>'		8216206	0		==			
ANR	8216302	ArrayIndexing	p [ 1 ]		8216206	0					
ANR	8216303	Identifier	p		8216206	0					
ANR	8216304	PrimaryExpression	1		8216206	1					
ANR	8216305	PrimaryExpression	'>'		8216206	1					
ANR	8216306	CompoundStatement		27:20:666:681	8216206	1					
ANR	8216307	IdentifierDeclStatement	int nesting = 0 ;	494:20:15617:15632	8216206	0	True				
ANR	8216308	IdentifierDecl	nesting = 0		8216206	0					
ANR	8216309	IdentifierDeclType	int		8216206	0					
ANR	8216310	Identifier	nesting		8216206	1					
ANR	8216311	AssignmentExpression	nesting = 0		8216206	2		=			
ANR	8216312	Identifier	nesting		8216206	0					
ANR	8216313	PrimaryExpression	0		8216206	1					
ANR	8216314	ExpressionStatement	p += 2	496:20:15655:15659	8216206	1	True				
ANR	8216315	AssignmentExpression	p += 2		8216206	0		+=			
ANR	8216316	Identifier	p		8216206	0					
ANR	8216317	PrimaryExpression	2		8216206	1					
ANR	8216318	WhileStatement	while ( * p != 0x00 )		8216206	2					
ANR	8216319	Condition	* p != 0x00	497:27:15688:15697	8216206	0	True				
ANR	8216320	EqualityExpression	* p != 0x00		8216206	0		!=			
ANR	8216321	UnaryOperationExpression	* p		8216206	0					
ANR	8216322	UnaryOperator	*		8216206	0					
ANR	8216323	Identifier	p		8216206	1					
ANR	8216324	PrimaryExpression	0x00		8216206	1					
ANR	8216325	CompoundStatement		30:39:749:749	8216206	1					
ANR	8216326	IfStatement	if ( * p == '>' && p [ 1 ] == '>' )		8216206	0					
ANR	8216327	Condition	* p == '>' && p [ 1 ] == '>'	498:28:15730:15753	8216206	0	True				
ANR	8216328	AndExpression	* p == '>' && p [ 1 ] == '>'		8216206	0		&&			
ANR	8216329	EqualityExpression	* p == '>'		8216206	0		==			
ANR	8216330	UnaryOperationExpression	* p		8216206	0					
ANR	8216331	UnaryOperator	*		8216206	0					
ANR	8216332	Identifier	p		8216206	1					
ANR	8216333	PrimaryExpression	'>'		8216206	1					
ANR	8216334	EqualityExpression	p [ 1 ] == '>'		8216206	1		==			
ANR	8216335	ArrayIndexing	p [ 1 ]		8216206	0					
ANR	8216336	Identifier	p		8216206	0					
ANR	8216337	PrimaryExpression	1		8216206	1					
ANR	8216338	PrimaryExpression	'>'		8216206	1					
ANR	8216339	CompoundStatement		31:54:805:805	8216206	1					
ANR	8216340	IfStatement	if ( nesting == 0 )		8216206	0					
ANR	8216341	Condition	nesting == 0	499:32:15790:15801	8216206	0	True				
ANR	8216342	EqualityExpression	nesting == 0		8216206	0		==			
ANR	8216343	Identifier	nesting		8216206	0					
ANR	8216344	PrimaryExpression	0		8216206	1					
ANR	8216345	CompoundStatement		32:46:853:853	8216206	1					
ANR	8216346	ExpressionStatement	p ++	500:32:15838:15841	8216206	0	True				
ANR	8216347	PostIncDecOperationExpression	p ++		8216206	0					
ANR	8216348	Identifier	p		8216206	0					
ANR	8216349	IncDec	++		8216206	1					
ANR	8216350	BreakStatement	break ;	501:32:15875:15880	8216206	1	True				
ANR	8216351	ExpressionStatement	p ++	503:28:15940:15943	8216206	1	True				
ANR	8216352	PostIncDecOperationExpression	p ++		8216206	0					
ANR	8216353	Identifier	p		8216206	0					
ANR	8216354	IncDec	++		8216206	1					
ANR	8216355	ElseStatement	else		8216206	0					
ANR	8216356	IfStatement	if ( * p == '<' && p [ 1 ] == '<' )		8216206	0					
ANR	8216357	Condition	* p == '<' && p [ 1 ] == '<'	505:32:16008:16031	8216206	0	True				
ANR	8216358	AndExpression	* p == '<' && p [ 1 ] == '<'		8216206	0		&&			
ANR	8216359	EqualityExpression	* p == '<'		8216206	0		==			
ANR	8216360	UnaryOperationExpression	* p		8216206	0					
ANR	8216361	UnaryOperator	*		8216206	0					
ANR	8216362	Identifier	p		8216206	1					
ANR	8216363	PrimaryExpression	'<'		8216206	1					
ANR	8216364	EqualityExpression	p [ 1 ] == '<'		8216206	1		==			
ANR	8216365	ArrayIndexing	p [ 1 ]		8216206	0					
ANR	8216366	Identifier	p		8216206	0					
ANR	8216367	PrimaryExpression	1		8216206	1					
ANR	8216368	PrimaryExpression	'<'		8216206	1					
ANR	8216369	CompoundStatement		38:58:1083:1083	8216206	1					
ANR	8216370	ExpressionStatement	p += 2	506:32:16068:16074	8216206	0	True				
ANR	8216371	AssignmentExpression	p += 2		8216206	0		+=			
ANR	8216372	Identifier	p		8216206	0					
ANR	8216373	PrimaryExpression	2		8216206	1					
ANR	8216374	ExpressionStatement	nesting ++	507:32:16108:16117	8216206	1	True				
ANR	8216375	PostIncDecOperationExpression	nesting ++		8216206	0					
ANR	8216376	Identifier	nesting		8216206	0					
ANR	8216377	IncDec	++		8216206	1					
ANR	8216378	ElseStatement	else		8216206	0					
ANR	8216379	ExpressionStatement	p ++	509:32:16186:16189	8216206	0	True				
ANR	8216380	PostIncDecOperationExpression	p ++		8216206	0					
ANR	8216381	Identifier	p		8216206	0					
ANR	8216382	IncDec	++		8216206	1					
ANR	8216383	IfStatement	if ( * p == 0x00 )		8216206	3					
ANR	8216384	Condition	* p == 0x00	511:24:16237:16246	8216206	0	True				
ANR	8216385	EqualityExpression	* p == 0x00		8216206	0		==			
ANR	8216386	UnaryOperationExpression	* p		8216206	0					
ANR	8216387	UnaryOperator	*		8216206	0					
ANR	8216388	Identifier	p		8216206	1					
ANR	8216389	PrimaryExpression	0x00		8216206	1					
ANR	8216390	ReturnStatement	return - 1 ;	512:24:16273:16282	8216206	1	True				
ANR	8216391	UnaryOperationExpression	- 1		8216206	0					
ANR	8216392	UnaryOperator	-		8216206	0					
ANR	8216393	PrimaryExpression	1		8216206	1					
ANR	8216394	ExpressionStatement	tokens ++	513:20:16304:16312	8216206	4	True				
ANR	8216395	PostIncDecOperationExpression	tokens ++		8216206	0					
ANR	8216396	Identifier	tokens		8216206	0					
ANR	8216397	IncDec	++		8216206	1					
ANR	8216398	ExpressionStatement	p ++	514:20:16334:16337	8216206	5	True				
ANR	8216399	PostIncDecOperationExpression	p ++		8216206	0					
ANR	8216400	Identifier	p		8216206	0					
ANR	8216401	IncDec	++		8216206	1					
ANR	8216402	ElseStatement	else		8216206	0					
ANR	8216403	CompoundStatement		48:23:1411:1411	8216206	0					
ANR	8216404	WhileStatement	while ( * p != 0x00 && * p != '>' )		8216206	0					
ANR	8216405	Condition	* p != 0x00 && * p != '>'	516:27:16391:16413	8216206	0	True				
ANR	8216406	AndExpression	* p != 0x00 && * p != '>'		8216206	0		&&			
ANR	8216407	EqualityExpression	* p != 0x00		8216206	0		!=			
ANR	8216408	UnaryOperationExpression	* p		8216206	0					
ANR	8216409	UnaryOperator	*		8216206	0					
ANR	8216410	Identifier	p		8216206	1					
ANR	8216411	PrimaryExpression	0x00		8216206	1					
ANR	8216412	EqualityExpression	* p != '>'		8216206	1		!=			
ANR	8216413	UnaryOperationExpression	* p		8216206	0					
ANR	8216414	UnaryOperator	*		8216206	0					
ANR	8216415	Identifier	p		8216206	1					
ANR	8216416	PrimaryExpression	'>'		8216206	1					
ANR	8216417	CompoundStatement		49:52:1465:1465	8216206	1					
ANR	8216418	ExpressionStatement	p ++	517:24:16442:16445	8216206	0	True				
ANR	8216419	PostIncDecOperationExpression	p ++		8216206	0					
ANR	8216420	Identifier	p		8216206	0					
ANR	8216421	IncDec	++		8216206	1					
ANR	8216422	IfStatement	if ( * p == 0x00 )		8216206	1					
ANR	8216423	Condition	* p == 0x00	519:24:16493:16502	8216206	0	True				
ANR	8216424	EqualityExpression	* p == 0x00		8216206	0		==			
ANR	8216425	UnaryOperationExpression	* p		8216206	0					
ANR	8216426	UnaryOperator	*		8216206	0					
ANR	8216427	Identifier	p		8216206	1					
ANR	8216428	PrimaryExpression	0x00		8216206	1					
ANR	8216429	ReturnStatement	return - 1 ;	520:24:16529:16538	8216206	1	True				
ANR	8216430	UnaryOperationExpression	- 1		8216206	0					
ANR	8216431	UnaryOperator	-		8216206	0					
ANR	8216432	PrimaryExpression	1		8216206	1					
ANR	8216433	ExpressionStatement	tokens ++	521:20:16560:16568	8216206	2	True				
ANR	8216434	PostIncDecOperationExpression	tokens ++		8216206	0					
ANR	8216435	Identifier	tokens		8216206	0					
ANR	8216436	IncDec	++		8216206	1					
ANR	8216437	ExpressionStatement	p ++	522:20:16590:16593	8216206	3	True				
ANR	8216438	PostIncDecOperationExpression	p ++		8216206	0					
ANR	8216439	Identifier	p		8216206	0					
ANR	8216440	IncDec	++		8216206	1					
ANR	8216441	BreakStatement	break ;	524:16:16629:16634	8216206	11	True				
ANR	8216442	Label	case '/' :	525:12:16648:16656	8216206	12	True				
ANR	8216443	WhileStatement	while ( * p != 0x00 && * p != ' ' )		8216206	13					
ANR	8216444	Condition	* p != 0x00 && * p != ' '	526:23:16681:16703	8216206	0	True				
ANR	8216445	AndExpression	* p != 0x00 && * p != ' '		8216206	0		&&			
ANR	8216446	EqualityExpression	* p != 0x00		8216206	0		!=			
ANR	8216447	UnaryOperationExpression	* p		8216206	0					
ANR	8216448	UnaryOperator	*		8216206	0					
ANR	8216449	Identifier	p		8216206	1					
ANR	8216450	PrimaryExpression	0x00		8216206	1					
ANR	8216451	EqualityExpression	* p != ' '		8216206	1		!=			
ANR	8216452	UnaryOperationExpression	* p		8216206	0					
ANR	8216453	UnaryOperator	*		8216206	0					
ANR	8216454	Identifier	p		8216206	1					
ANR	8216455	PrimaryExpression	' '		8216206	1					
ANR	8216456	CompoundStatement		59:48:1755:1755	8216206	1					
ANR	8216457	ExpressionStatement	p ++	527:20:16728:16731	8216206	0	True				
ANR	8216458	PostIncDecOperationExpression	p ++		8216206	0					
ANR	8216459	Identifier	p		8216206	0					
ANR	8216460	IncDec	++		8216206	1					
ANR	8216461	ExpressionStatement	tokens ++	529:16:16767:16775	8216206	14	True				
ANR	8216462	PostIncDecOperationExpression	tokens ++		8216206	0					
ANR	8216463	Identifier	tokens		8216206	0					
ANR	8216464	IncDec	++		8216206	1					
ANR	8216465	BreakStatement	break ;	530:16:16793:16798	8216206	15	True				
ANR	8216466	Label	case '(' :	531:12:16812:16820	8216206	16	True				
ANR	8216467	WhileStatement	while ( * p != 0x00 && * p != ')' )		8216206	17					
ANR	8216468	Condition	* p != 0x00 && * p != ')'	532:23:16845:16867	8216206	0	True				
ANR	8216469	AndExpression	* p != 0x00 && * p != ')'		8216206	0		&&			
ANR	8216470	EqualityExpression	* p != 0x00		8216206	0		!=			
ANR	8216471	UnaryOperationExpression	* p		8216206	0					
ANR	8216472	UnaryOperator	*		8216206	0					
ANR	8216473	Identifier	p		8216206	1					
ANR	8216474	PrimaryExpression	0x00		8216206	1					
ANR	8216475	EqualityExpression	* p != ')'		8216206	1		!=			
ANR	8216476	UnaryOperationExpression	* p		8216206	0					
ANR	8216477	UnaryOperator	*		8216206	0					
ANR	8216478	Identifier	p		8216206	1					
ANR	8216479	PrimaryExpression	')'		8216206	1					
ANR	8216480	CompoundStatement		65:48:1919:1919	8216206	1					
ANR	8216481	ExpressionStatement	p ++	533:20:16892:16895	8216206	0	True				
ANR	8216482	PostIncDecOperationExpression	p ++		8216206	0					
ANR	8216483	Identifier	p		8216206	0					
ANR	8216484	IncDec	++		8216206	1					
ANR	8216485	IfStatement	if ( * p == 0x00 )		8216206	18					
ANR	8216486	Condition	* p == 0x00	535:20:16935:16944	8216206	0	True				
ANR	8216487	EqualityExpression	* p == 0x00		8216206	0		==			
ANR	8216488	UnaryOperationExpression	* p		8216206	0					
ANR	8216489	UnaryOperator	*		8216206	0					
ANR	8216490	Identifier	p		8216206	1					
ANR	8216491	PrimaryExpression	0x00		8216206	1					
ANR	8216492	ReturnStatement	return - 1 ;	536:20:16967:16976	8216206	1	True				
ANR	8216493	UnaryOperationExpression	- 1		8216206	0					
ANR	8216494	UnaryOperator	-		8216206	0					
ANR	8216495	PrimaryExpression	1		8216206	1					
ANR	8216496	ExpressionStatement	p ++	537:16:16994:16997	8216206	19	True				
ANR	8216497	PostIncDecOperationExpression	p ++		8216206	0					
ANR	8216498	Identifier	p		8216206	0					
ANR	8216499	IncDec	++		8216206	1					
ANR	8216500	ExpressionStatement	tokens ++	538:16:17015:17023	8216206	20	True				
ANR	8216501	PostIncDecOperationExpression	tokens ++		8216206	0					
ANR	8216502	Identifier	tokens		8216206	0					
ANR	8216503	IncDec	++		8216206	1					
ANR	8216504	BreakStatement	break ;	539:16:17041:17046	8216206	21	True				
ANR	8216505	Label	case '[' :	540:12:17060:17068	8216206	22	True				
ANR	8216506	WhileStatement	while ( * p != 0x00 && * p != ']' )		8216206	23					
ANR	8216507	Condition	* p != 0x00 && * p != ']'	541:23:17093:17115	8216206	0	True				
ANR	8216508	AndExpression	* p != 0x00 && * p != ']'		8216206	0		&&			
ANR	8216509	EqualityExpression	* p != 0x00		8216206	0		!=			
ANR	8216510	UnaryOperationExpression	* p		8216206	0					
ANR	8216511	UnaryOperator	*		8216206	0					
ANR	8216512	Identifier	p		8216206	1					
ANR	8216513	PrimaryExpression	0x00		8216206	1					
ANR	8216514	EqualityExpression	* p != ']'		8216206	1		!=			
ANR	8216515	UnaryOperationExpression	* p		8216206	0					
ANR	8216516	UnaryOperator	*		8216206	0					
ANR	8216517	Identifier	p		8216206	1					
ANR	8216518	PrimaryExpression	']'		8216206	1					
ANR	8216519	CompoundStatement		74:48:2167:2167	8216206	1					
ANR	8216520	ExpressionStatement	p ++	542:20:17140:17143	8216206	0	True				
ANR	8216521	PostIncDecOperationExpression	p ++		8216206	0					
ANR	8216522	Identifier	p		8216206	0					
ANR	8216523	IncDec	++		8216206	1					
ANR	8216524	IfStatement	if ( * p == 0x00 )		8216206	24					
ANR	8216525	Condition	* p == 0x00	544:20:17183:17192	8216206	0	True				
ANR	8216526	EqualityExpression	* p == 0x00		8216206	0		==			
ANR	8216527	UnaryOperationExpression	* p		8216206	0					
ANR	8216528	UnaryOperator	*		8216206	0					
ANR	8216529	Identifier	p		8216206	1					
ANR	8216530	PrimaryExpression	0x00		8216206	1					
ANR	8216531	ReturnStatement	return - 1 ;	545:20:17215:17224	8216206	1	True				
ANR	8216532	UnaryOperationExpression	- 1		8216206	0					
ANR	8216533	UnaryOperator	-		8216206	0					
ANR	8216534	PrimaryExpression	1		8216206	1					
ANR	8216535	ExpressionStatement	p ++	546:16:17242:17245	8216206	25	True				
ANR	8216536	PostIncDecOperationExpression	p ++		8216206	0					
ANR	8216537	Identifier	p		8216206	0					
ANR	8216538	IncDec	++		8216206	1					
ANR	8216539	ExpressionStatement	tokens ++	547:16:17263:17271	8216206	26	True				
ANR	8216540	PostIncDecOperationExpression	tokens ++		8216206	0					
ANR	8216541	Identifier	tokens		8216206	0					
ANR	8216542	IncDec	++		8216206	1					
ANR	8216543	BreakStatement	break ;	548:16:17289:17294	8216206	27	True				
ANR	8216544	Label	case '0' :	549:12:17308:17316	8216206	28	True				
ANR	8216545	Label	case '1' :	550:12:17330:17338	8216206	29	True				
ANR	8216546	Label	case '2' :	551:12:17352:17360	8216206	30	True				
ANR	8216547	Label	case '3' :	552:12:17374:17382	8216206	31	True				
ANR	8216548	Label	case '4' :	553:12:17396:17404	8216206	32	True				
ANR	8216549	Label	case '5' :	554:12:17418:17426	8216206	33	True				
ANR	8216550	Label	case '6' :	555:12:17440:17448	8216206	34	True				
ANR	8216551	Label	case '7' :	556:12:17462:17470	8216206	35	True				
ANR	8216552	Label	case '8' :	557:12:17484:17492	8216206	36	True				
ANR	8216553	Label	case '9' :	558:12:17506:17514	8216206	37	True				
ANR	8216554	Label	case '.' :	559:12:17528:17536	8216206	38	True				
ANR	8216555	WhileStatement	while ( * p != 0x00 && * p != ' ' )		8216206	39					
ANR	8216556	Condition	* p != 0x00 && * p != ' '	560:23:17561:17583	8216206	0	True				
ANR	8216557	AndExpression	* p != 0x00 && * p != ' '		8216206	0		&&			
ANR	8216558	EqualityExpression	* p != 0x00		8216206	0		!=			
ANR	8216559	UnaryOperationExpression	* p		8216206	0					
ANR	8216560	UnaryOperator	*		8216206	0					
ANR	8216561	Identifier	p		8216206	1					
ANR	8216562	PrimaryExpression	0x00		8216206	1					
ANR	8216563	EqualityExpression	* p != ' '		8216206	1		!=			
ANR	8216564	UnaryOperationExpression	* p		8216206	0					
ANR	8216565	UnaryOperator	*		8216206	0					
ANR	8216566	Identifier	p		8216206	1					
ANR	8216567	PrimaryExpression	' '		8216206	1					
ANR	8216568	CompoundStatement		93:48:2635:2635	8216206	1					
ANR	8216569	IfStatement	if ( ( * p < 0x30 || * p > 0x39 ) && * p != '.' )		8216206	0					
ANR	8216570	Condition	( * p < 0x30 || * p > 0x39 ) && * p != '.'	561:24:17612:17648	8216206	0	True				
ANR	8216571	AndExpression	( * p < 0x30 || * p > 0x39 ) && * p != '.'		8216206	0		&&			
ANR	8216572	OrExpression	* p < 0x30 || * p > 0x39		8216206	0		||			
ANR	8216573	RelationalExpression	* p < 0x30		8216206	0		<			
ANR	8216574	UnaryOperationExpression	* p		8216206	0					
ANR	8216575	UnaryOperator	*		8216206	0					
ANR	8216576	Identifier	p		8216206	1					
ANR	8216577	PrimaryExpression	0x30		8216206	1					
ANR	8216578	RelationalExpression	* p > 0x39		8216206	1		>			
ANR	8216579	UnaryOperationExpression	* p		8216206	0					
ANR	8216580	UnaryOperator	*		8216206	0					
ANR	8216581	Identifier	p		8216206	1					
ANR	8216582	PrimaryExpression	0x39		8216206	1					
ANR	8216583	EqualityExpression	* p != '.'		8216206	1		!=			
ANR	8216584	UnaryOperationExpression	* p		8216206	0					
ANR	8216585	UnaryOperator	*		8216206	0					
ANR	8216586	Identifier	p		8216206	1					
ANR	8216587	PrimaryExpression	'.'		8216206	1					
ANR	8216588	ReturnStatement	return - 1 ;	562:24:17675:17684	8216206	1	True				
ANR	8216589	UnaryOperationExpression	- 1		8216206	0					
ANR	8216590	UnaryOperator	-		8216206	0					
ANR	8216591	PrimaryExpression	1		8216206	1					
ANR	8216592	ExpressionStatement	p ++	563:20:17706:17709	8216206	1	True				
ANR	8216593	PostIncDecOperationExpression	p ++		8216206	0					
ANR	8216594	Identifier	p		8216206	0					
ANR	8216595	IncDec	++		8216206	1					
ANR	8216596	ExpressionStatement	tokens ++	565:16:17745:17753	8216206	40	True				
ANR	8216597	PostIncDecOperationExpression	tokens ++		8216206	0					
ANR	8216598	Identifier	tokens		8216206	0					
ANR	8216599	IncDec	++		8216206	1					
ANR	8216600	BreakStatement	break ;	566:16:17771:17776	8216206	41	True				
ANR	8216601	Label	default :	567:12:17790:17797	8216206	42	True				
ANR	8216602	Identifier	default		8216206	0					
ANR	8216603	ReturnStatement	return - 1 ;	568:16:17815:17824	8216206	43	True				
ANR	8216604	UnaryOperationExpression	- 1		8216206	0					
ANR	8216605	UnaryOperator	-		8216206	0					
ANR	8216606	PrimaryExpression	1		8216206	1					
ANR	8216607	BreakStatement	break ;	569:16:17842:17847	8216206	44	True				
ANR	8216608	ReturnStatement	return tokens ;	572:4:17869:17882	8216206	2	True				
ANR	8216609	Identifier	tokens		8216206	0					
ANR	8216610	ReturnType	static int		8216206	1					
ANR	8216611	Identifier	count_tokens		8216206	2					
ANR	8216612	ParameterList	char * p		8216206	3					
ANR	8216613	Parameter	char * p	467:24:14941:14947	8216206	0	True				
ANR	8216614	ParameterType	char *		8216206	0					
ANR	8216615	Identifier	p		8216206	1					
ANR	8216616	CFGEntryNode	ENTRY		8216206		True				
ANR	8216617	CFGExitNode	EXIT		8216206		True				
ANR	8216618	Symbol	p		8216206						
ANR	8216619	Symbol	strncmp		8216206						
ANR	8216620	Symbol	tokens		8216206						
ANR	8216621	Symbol	* p		8216206						
ANR	8216622	Symbol	nesting		8216206						
ANR	8216623	Function	pjl_dist_process_array	593:0:18795:31089							
ANR	8216624	FunctionDef	"pjl_dist_process_array (gs_memory_t * mem , gs_c_param_list * plist , gs_param_name key , char * * p)"		8216623	0					
ANR	8216625	CompoundStatement		594:0:18900:31089	8216623	0					
ANR	8216626	IdentifierDeclStatement	"int tokens = 0 , nested = 0 , index = 0 , code = 0 ;"	595:4:18906:18953	8216623	0	True				
ANR	8216627	IdentifierDecl	tokens = 0		8216623	0					
ANR	8216628	IdentifierDeclType	int		8216623	0					
ANR	8216629	Identifier	tokens		8216623	1					
ANR	8216630	AssignmentExpression	tokens = 0		8216623	2		=			
ANR	8216631	Identifier	tokens		8216623	0					
ANR	8216632	PrimaryExpression	0		8216623	1					
ANR	8216633	IdentifierDecl	nested = 0		8216623	1					
ANR	8216634	IdentifierDeclType	int		8216623	0					
ANR	8216635	Identifier	nested		8216623	1					
ANR	8216636	AssignmentExpression	nested = 0		8216623	2		=			
ANR	8216637	Identifier	nested		8216623	0					
ANR	8216638	PrimaryExpression	0		8216623	1					
ANR	8216639	IdentifierDecl	index = 0		8216623	2					
ANR	8216640	IdentifierDeclType	int		8216623	0					
ANR	8216641	Identifier	index		8216623	1					
ANR	8216642	AssignmentExpression	index = 0		8216623	2		=			
ANR	8216643	Identifier	index		8216623	0					
ANR	8216644	PrimaryExpression	0		8216623	1					
ANR	8216645	IdentifierDecl	code = 0		8216623	3					
ANR	8216646	IdentifierDeclType	int		8216623	0					
ANR	8216647	Identifier	code		8216623	1					
ANR	8216648	AssignmentExpression	code = 0		8216623	2		=			
ANR	8216649	Identifier	code		8216623	0					
ANR	8216650	PrimaryExpression	0		8216623	1					
ANR	8216651	IdentifierDeclStatement	gs_param_type array_type = gs_param_type_null ;	596:4:18959:19004	8216623	1	True				
ANR	8216652	IdentifierDecl	array_type = gs_param_type_null		8216623	0					
ANR	8216653	IdentifierDeclType	gs_param_type		8216623	0					
ANR	8216654	Identifier	array_type		8216623	1					
ANR	8216655	AssignmentExpression	array_type = gs_param_type_null		8216623	2		=			
ANR	8216656	Identifier	gs_param_type_null		8216623	0					
ANR	8216657	Identifier	gs_param_type_null		8216623	1					
ANR	8216658	IdentifierDeclStatement	"char * start = * p + 1 , * p1 = start ;"	597:4:19010:19043	8216623	2	True				
ANR	8216659	IdentifierDecl	* start = * p + 1		8216623	0					
ANR	8216660	IdentifierDeclType	char *		8216623	0					
ANR	8216661	Identifier	start		8216623	1					
ANR	8216662	AssignmentExpression	* start = * p + 1		8216623	2		=			
ANR	8216663	Identifier	start		8216623	0					
ANR	8216664	AdditiveExpression	* p + 1		8216623	1		+			
ANR	8216665	UnaryOperationExpression	* p		8216623	0					
ANR	8216666	UnaryOperator	*		8216623	0					
ANR	8216667	Identifier	p		8216623	1					
ANR	8216668	PrimaryExpression	1		8216623	1					
ANR	8216669	IdentifierDecl	* p1 = start		8216623	1					
ANR	8216670	IdentifierDeclType	char *		8216623	0					
ANR	8216671	Identifier	p1		8216623	1					
ANR	8216672	AssignmentExpression	* p1 = start		8216623	2		=			
ANR	8216673	Identifier	start		8216623	0					
ANR	8216674	Identifier	start		8216623	1					
ANR	8216675	IdentifierDeclStatement	gs_param_string * parray = 0L ;	598:4:19049:19077	8216623	3	True				
ANR	8216676	IdentifierDecl	* parray = 0L		8216623	0					
ANR	8216677	IdentifierDeclType	gs_param_string *		8216623	0					
ANR	8216678	Identifier	parray		8216623	1					
ANR	8216679	AssignmentExpression	* parray = 0L		8216623	2		=			
ANR	8216680	Identifier	parray		8216623	0					
ANR	8216681	PrimaryExpression	0L		8216623	1					
ANR	8216682	IdentifierDeclStatement	char * array_data = 0x00 ;	599:4:19083:19106	8216623	4	True				
ANR	8216683	IdentifierDecl	* array_data = 0x00		8216623	0					
ANR	8216684	IdentifierDeclType	char *		8216623	0					
ANR	8216685	Identifier	array_data		8216623	1					
ANR	8216686	AssignmentExpression	* array_data = 0x00		8216623	2		=			
ANR	8216687	Identifier	array_data		8216623	0					
ANR	8216688	PrimaryExpression	0x00		8216623	1					
ANR	8216689	IdentifierDeclStatement	gs_param_string_array string_array ;	600:4:19112:19146	8216623	5	True				
ANR	8216690	IdentifierDecl	string_array		8216623	0					
ANR	8216691	IdentifierDeclType	gs_param_string_array		8216623	0					
ANR	8216692	Identifier	string_array		8216623	1					
ANR	8216693	IdentifierDeclStatement	gs_param_int_array int_array ;	601:4:19152:19180	8216623	6	True				
ANR	8216694	IdentifierDecl	int_array		8216623	0					
ANR	8216695	IdentifierDeclType	gs_param_int_array		8216623	0					
ANR	8216696	Identifier	int_array		8216623	1					
ANR	8216697	IdentifierDeclStatement	gs_param_float_array float_array ;	602:4:19186:19218	8216623	7	True				
ANR	8216698	IdentifierDecl	float_array		8216623	0					
ANR	8216699	IdentifierDeclType	gs_param_float_array		8216623	0					
ANR	8216700	Identifier	float_array		8216623	1					
ANR	8216701	DoStatement	do		8216623	8					
ANR	8216702	CompoundStatement		12:7:375:375	8216623	0					
ANR	8216703	WhileStatement	while ( * p1 != ']' && * p1 != 0x00 )		8216623	0					
ANR	8216704	Condition	* p1 != ']' && * p1 != 0x00	606:15:19293:19317	8216623	0	True				
ANR	8216705	AndExpression	* p1 != ']' && * p1 != 0x00		8216623	0		&&			
ANR	8216706	EqualityExpression	* p1 != ']'		8216623	0		!=			
ANR	8216707	UnaryOperationExpression	* p1		8216623	0					
ANR	8216708	UnaryOperator	*		8216623	0					
ANR	8216709	Identifier	p1		8216623	1					
ANR	8216710	PrimaryExpression	']'		8216623	1					
ANR	8216711	EqualityExpression	* p1 != 0x00		8216623	1		!=			
ANR	8216712	UnaryOperationExpression	* p1		8216623	0					
ANR	8216713	UnaryOperator	*		8216623	0					
ANR	8216714	Identifier	p1		8216623	1					
ANR	8216715	PrimaryExpression	0x00		8216623	1					
ANR	8216716	CompoundStatement		13:42:419:419	8216623	1					
ANR	8216717	IfStatement	if ( * p1 == '[' )		8216623	0					
ANR	8216718	Condition	* p1 == '['	607:16:19338:19347	8216623	0	True				
ANR	8216719	EqualityExpression	* p1 == '['		8216623	0		==			
ANR	8216720	UnaryOperationExpression	* p1		8216623	0					
ANR	8216721	UnaryOperator	*		8216623	0					
ANR	8216722	Identifier	p1		8216623	1					
ANR	8216723	PrimaryExpression	'['		8216623	1					
ANR	8216724	ExpressionStatement	nested ++	608:16:19366:19374	8216623	1	True				
ANR	8216725	PostIncDecOperationExpression	nested ++		8216623	0					
ANR	8216726	Identifier	nested		8216623	0					
ANR	8216727	IncDec	++		8216623	1					
ANR	8216728	ExpressionStatement	p1 ++	609:12:19388:19392	8216623	1	True				
ANR	8216729	PostIncDecOperationExpression	p1 ++		8216623	0					
ANR	8216730	Identifier	p1		8216623	0					
ANR	8216731	IncDec	++		8216623	1					
ANR	8216732	Condition	nested --	611:12:19416:19423	8216623	1	True				
ANR	8216733	PostIncDecOperationExpression	nested --		8216623	0					
ANR	8216734	Identifier	nested		8216623	0					
ANR	8216735	IncDec	--		8216623	1					
ANR	8216736	IfStatement	if ( * p1 == 0x00 )		8216623	9					
ANR	8216737	Condition	* p1 == 0x00	613:8:19436:19446	8216623	0	True				
ANR	8216738	EqualityExpression	* p1 == 0x00		8216623	0		==			
ANR	8216739	UnaryOperationExpression	* p1		8216623	0					
ANR	8216740	UnaryOperator	*		8216623	0					
ANR	8216741	Identifier	p1		8216623	1					
ANR	8216742	PrimaryExpression	0x00		8216623	1					
ANR	8216743	ReturnStatement	return - 1 ;	614:8:19457:19466	8216623	1	True				
ANR	8216744	UnaryOperationExpression	- 1		8216623	0					
ANR	8216745	UnaryOperator	-		8216623	0					
ANR	8216746	PrimaryExpression	1		8216623	1					
ANR	8216747	ExpressionStatement	* p1 = 0x00	616:4:19473:19483	8216623	10	True				
ANR	8216748	AssignmentExpression	* p1 = 0x00		8216623	0		=			
ANR	8216749	UnaryOperationExpression	* p1		8216623	0					
ANR	8216750	UnaryOperator	*		8216623	0					
ANR	8216751	Identifier	p1		8216623	1					
ANR	8216752	PrimaryExpression	0x00		8216623	1					
ANR	8216753	ExpressionStatement	p1 = start	617:4:19489:19499	8216623	11	True				
ANR	8216754	AssignmentExpression	p1 = start		8216623	0		=			
ANR	8216755	Identifier	p1		8216623	0					
ANR	8216756	Identifier	start		8216623	1					
ANR	8216757	ExpressionStatement	tokens = count_tokens ( start )	619:4:19506:19534	8216623	12	True				
ANR	8216758	AssignmentExpression	tokens = count_tokens ( start )		8216623	0		=			
ANR	8216759	Identifier	tokens		8216623	0					
ANR	8216760	CallExpression	count_tokens ( start )		8216623	1					
ANR	8216761	Callee	count_tokens		8216623	0					
ANR	8216762	Identifier	count_tokens		8216623	0					
ANR	8216763	ArgumentList	start		8216623	1					
ANR	8216764	Argument	start		8216623	0					
ANR	8216765	Identifier	start		8216623	0					
ANR	8216766	WhileStatement	while ( * p1 != 0x00 && code == 0 )		8216623	13					
ANR	8216767	Condition	* p1 != 0x00 && code == 0	621:11:19548:19571	8216623	0	True				
ANR	8216768	AndExpression	* p1 != 0x00 && code == 0		8216623	0		&&			
ANR	8216769	EqualityExpression	* p1 != 0x00		8216623	0		!=			
ANR	8216770	UnaryOperationExpression	* p1		8216623	0					
ANR	8216771	UnaryOperator	*		8216623	0					
ANR	8216772	Identifier	p1		8216623	1					
ANR	8216773	PrimaryExpression	0x00		8216623	1					
ANR	8216774	EqualityExpression	code == 0		8216623	1		==			
ANR	8216775	Identifier	code		8216623	0					
ANR	8216776	PrimaryExpression	0		8216623	1					
ANR	8216777	CompoundStatement		28:36:672:672	8216623	1					
ANR	8216778	SwitchStatement	switch ( * p1 )		8216623	0					
ANR	8216779	Condition	* p1	622:16:19591:19593	8216623	0	True				
ANR	8216780	UnaryOperationExpression	* p1		8216623	0					
ANR	8216781	UnaryOperator	*		8216623	0					
ANR	8216782	Identifier	p1		8216623	1					
ANR	8216783	CompoundStatement		29:21:695:695	8216623	1					
ANR	8216784	Label	case ' ' :	623:12:19610:19618	8216623	0	True				
ANR	8216785	ExpressionStatement	p1 ++	624:16:19636:19640	8216623	1	True				
ANR	8216786	PostIncDecOperationExpression	p1 ++		8216623	0					
ANR	8216787	Identifier	p1		8216623	0					
ANR	8216788	IncDec	++		8216623	1					
ANR	8216789	BreakStatement	break ;	625:16:19658:19663	8216623	2	True				
ANR	8216790	Label	case 'f' :	627:12:19678:19686	8216623	3	True				
ANR	8216791	IfStatement	if ( array_type != gs_param_type_null && array_type != gs_param_type_string_array )		8216623	4					
ANR	8216792	Condition	array_type != gs_param_type_null && array_type != gs_param_type_string_array	628:20:19708:19783	8216623	0	True				
ANR	8216793	AndExpression	array_type != gs_param_type_null && array_type != gs_param_type_string_array		8216623	0		&&			
ANR	8216794	EqualityExpression	array_type != gs_param_type_null		8216623	0		!=			
ANR	8216795	Identifier	array_type		8216623	0					
ANR	8216796	Identifier	gs_param_type_null		8216623	1					
ANR	8216797	EqualityExpression	array_type != gs_param_type_string_array		8216623	1		!=			
ANR	8216798	Identifier	array_type		8216623	0					
ANR	8216799	Identifier	gs_param_type_string_array		8216623	1					
ANR	8216800	CompoundStatement		35:98:885:885	8216623	1					
ANR	8216801	ExpressionStatement	code = gs_error_typecheck	629:20:19808:19833	8216623	0	True				
ANR	8216802	AssignmentExpression	code = gs_error_typecheck		8216623	0		=			
ANR	8216803	Identifier	code		8216623	0					
ANR	8216804	Identifier	gs_error_typecheck		8216623	1					
ANR	8216805	BreakStatement	break ;	630:20:19855:19860	8216623	1	True				
ANR	8216806	IfStatement	if ( array_type == gs_param_type_null )		8216623	5					
ANR	8216807	Condition	array_type == gs_param_type_null	632:20:19900:19931	8216623	0	True				
ANR	8216808	EqualityExpression	array_type == gs_param_type_null		8216623	0		==			
ANR	8216809	Identifier	array_type		8216623	0					
ANR	8216810	Identifier	gs_param_type_null		8216623	1					
ANR	8216811	CompoundStatement		39:54:1033:1033	8216623	1					
ANR	8216812	ExpressionStatement	"array_data = ( char * ) gs_alloc_bytes ( mem , sizeof ( gs_param_string ) * tokens , ""param string array in distillerparams"" )"	633:20:19956:20071	8216623	0	True				
ANR	8216813	AssignmentExpression	"array_data = ( char * ) gs_alloc_bytes ( mem , sizeof ( gs_param_string ) * tokens , ""param string array in distillerparams"" )"		8216623	0		=			
ANR	8216814	Identifier	array_data		8216623	0					
ANR	8216815	CastExpression	"( char * ) gs_alloc_bytes ( mem , sizeof ( gs_param_string ) * tokens , ""param string array in distillerparams"" )"		8216623	1					
ANR	8216816	CastTarget	char *		8216623	0					
ANR	8216817	CallExpression	"gs_alloc_bytes ( mem , sizeof ( gs_param_string ) * tokens , ""param string array in distillerparams"" )"		8216623	1					
ANR	8216818	Callee	gs_alloc_bytes		8216623	0					
ANR	8216819	Identifier	gs_alloc_bytes		8216623	0					
ANR	8216820	ArgumentList	mem		8216623	1					
ANR	8216821	Argument	mem		8216623	0					
ANR	8216822	Identifier	mem		8216623	0					
ANR	8216823	Argument	sizeof ( gs_param_string ) * tokens		8216623	1					
ANR	8216824	MultiplicativeExpression	sizeof ( gs_param_string ) * tokens		8216623	0		*			
ANR	8216825	SizeofExpression	sizeof ( gs_param_string )		8216623	0					
ANR	8216826	Sizeof	sizeof		8216623	0					
ANR	8216827	SizeofOperand	gs_param_string		8216623	1					
ANR	8216828	Identifier	tokens		8216623	1					
ANR	8216829	Argument	"""param string array in distillerparams"""		8216623	2					
ANR	8216830	PrimaryExpression	"""param string array in distillerparams"""		8216623	0					
ANR	8216831	IfStatement	if ( array_data == NULL )		8216623	1					
ANR	8216832	Condition	array_data == NULL	634:24:20097:20114	8216623	0	True				
ANR	8216833	EqualityExpression	array_data == NULL		8216623	0		==			
ANR	8216834	Identifier	array_data		8216623	0					
ANR	8216835	Identifier	NULL		8216623	1					
ANR	8216836	CompoundStatement		41:43:1215:1215	8216623	1					
ANR	8216837	ExpressionStatement	code = gs_error_VMerror	635:24:20142:20165	8216623	0	True				
ANR	8216838	AssignmentExpression	code = gs_error_VMerror		8216623	0		=			
ANR	8216839	Identifier	code		8216623	0					
ANR	8216840	Identifier	gs_error_VMerror		8216623	1					
ANR	8216841	BreakStatement	break ;	636:24:20191:20196	8216623	1	True				
ANR	8216842	ExpressionStatement	array_type = gs_param_type_string_array	638:20:20240:20279	8216623	2	True				
ANR	8216843	AssignmentExpression	array_type = gs_param_type_string_array		8216623	0		=			
ANR	8216844	Identifier	array_type		8216623	0					
ANR	8216845	Identifier	gs_param_type_string_array		8216623	1					
ANR	8216846	IfStatement	"if ( strncmp ( p1 , ""false"" , 5 ) == 0 )"		8216623	6					
ANR	8216847	Condition	"strncmp ( p1 , ""false"" , 5 ) == 0"	640:20:20319:20346	8216623	0	True				
ANR	8216848	EqualityExpression	"strncmp ( p1 , ""false"" , 5 ) == 0"		8216623	0		==			
ANR	8216849	CallExpression	"strncmp ( p1 , ""false"" , 5 )"		8216623	0					
ANR	8216850	Callee	strncmp		8216623	0					
ANR	8216851	Identifier	strncmp		8216623	0					
ANR	8216852	ArgumentList	p1		8216623	1					
ANR	8216853	Argument	p1		8216623	0					
ANR	8216854	Identifier	p1		8216623	0					
ANR	8216855	Argument	"""false"""		8216623	1					
ANR	8216856	PrimaryExpression	"""false"""		8216623	0					
ANR	8216857	Argument	5		8216623	2					
ANR	8216858	PrimaryExpression	5		8216623	0					
ANR	8216859	PrimaryExpression	0		8216623	1					
ANR	8216860	CompoundStatement		47:50:1448:1448	8216623	1					
ANR	8216861	ExpressionStatement	parray = ( gs_param_string * ) array_data	641:20:20371:20409	8216623	0	True				
ANR	8216862	AssignmentExpression	parray = ( gs_param_string * ) array_data		8216623	0		=			
ANR	8216863	Identifier	parray		8216623	0					
ANR	8216864	CastExpression	( gs_param_string * ) array_data		8216623	1					
ANR	8216865	CastTarget	gs_param_string *		8216623	0					
ANR	8216866	Identifier	array_data		8216623	1					
ANR	8216867	ExpressionStatement	parray [ index ] . data = ( const byte * ) p1	642:20:20431:20468	8216623	1	True				
ANR	8216868	AssignmentExpression	parray [ index ] . data = ( const byte * ) p1		8216623	0		=			
ANR	8216869	MemberAccess	parray [ index ] . data		8216623	0					
ANR	8216870	ArrayIndexing	parray [ index ]		8216623	0					
ANR	8216871	Identifier	parray		8216623	0					
ANR	8216872	Identifier	index		8216623	1					
ANR	8216873	Identifier	data		8216623	1					
ANR	8216874	CastExpression	( const byte * ) p1		8216623	1					
ANR	8216875	CastTarget	const byte *		8216623	0					
ANR	8216876	Identifier	p1		8216623	1					
ANR	8216877	ExpressionStatement	p1 += 5	643:20:20490:20497	8216623	2	True				
ANR	8216878	AssignmentExpression	p1 += 5		8216623	0		+=			
ANR	8216879	Identifier	p1		8216623	0					
ANR	8216880	PrimaryExpression	5		8216623	1					
ANR	8216881	ExpressionStatement	* p1 ++ = 0x00	644:20:20519:20531	8216623	3	True				
ANR	8216882	AssignmentExpression	* p1 ++ = 0x00		8216623	0		=			
ANR	8216883	UnaryOperationExpression	* p1 ++		8216623	0					
ANR	8216884	UnaryOperator	*		8216623	0					
ANR	8216885	PostIncDecOperationExpression	p1 ++		8216623	1					
ANR	8216886	Identifier	p1		8216623	0					
ANR	8216887	IncDec	++		8216623	1					
ANR	8216888	PrimaryExpression	0x00		8216623	1					
ANR	8216889	ExpressionStatement	parray [ index ] . size = 5	645:20:20553:20575	8216623	4	True				
ANR	8216890	AssignmentExpression	parray [ index ] . size = 5		8216623	0		=			
ANR	8216891	MemberAccess	parray [ index ] . size		8216623	0					
ANR	8216892	ArrayIndexing	parray [ index ]		8216623	0					
ANR	8216893	Identifier	parray		8216623	0					
ANR	8216894	Identifier	index		8216623	1					
ANR	8216895	Identifier	size		8216623	1					
ANR	8216896	PrimaryExpression	5		8216623	1					
ANR	8216897	ExpressionStatement	parray [ index ++ ] . persistent = false	646:20:20597:20631	8216623	5	True				
ANR	8216898	AssignmentExpression	parray [ index ++ ] . persistent = false		8216623	0		=			
ANR	8216899	MemberAccess	parray [ index ++ ] . persistent		8216623	0					
ANR	8216900	ArrayIndexing	parray [ index ++ ]		8216623	0					
ANR	8216901	Identifier	parray		8216623	0					
ANR	8216902	PostIncDecOperationExpression	index ++		8216623	1					
ANR	8216903	Identifier	index		8216623	0					
ANR	8216904	IncDec	++		8216623	1					
ANR	8216905	Identifier	persistent		8216623	1					
ANR	8216906	Identifier	false		8216623	1					
ANR	8216907	ElseStatement	else		8216623	0					
ANR	8216908	CompoundStatement		54:23:1755:1755	8216623	0					
ANR	8216909	ExpressionStatement	code = gs_error_typecheck	648:20:20678:20703	8216623	0	True				
ANR	8216910	AssignmentExpression	code = gs_error_typecheck		8216623	0		=			
ANR	8216911	Identifier	code		8216623	0					
ANR	8216912	Identifier	gs_error_typecheck		8216623	1					
ANR	8216913	BreakStatement	break ;	649:20:20725:20730	8216623	1	True				
ANR	8216914	BreakStatement	break ;	651:16:20766:20771	8216623	7	True				
ANR	8216915	Label	case 't' :	653:12:20786:20794	8216623	8	True				
ANR	8216916	IfStatement	if ( array_type != gs_param_type_null && array_type != gs_param_type_string_array )		8216623	9					
ANR	8216917	Condition	array_type != gs_param_type_null && array_type != gs_param_type_string_array	654:20:20816:20891	8216623	0	True				
ANR	8216918	AndExpression	array_type != gs_param_type_null && array_type != gs_param_type_string_array		8216623	0		&&			
ANR	8216919	EqualityExpression	array_type != gs_param_type_null		8216623	0		!=			
ANR	8216920	Identifier	array_type		8216623	0					
ANR	8216921	Identifier	gs_param_type_null		8216623	1					
ANR	8216922	EqualityExpression	array_type != gs_param_type_string_array		8216623	1		!=			
ANR	8216923	Identifier	array_type		8216623	0					
ANR	8216924	Identifier	gs_param_type_string_array		8216623	1					
ANR	8216925	CompoundStatement		61:98:1993:1993	8216623	1					
ANR	8216926	ExpressionStatement	code = gs_error_typecheck	655:20:20916:20941	8216623	0	True				
ANR	8216927	AssignmentExpression	code = gs_error_typecheck		8216623	0		=			
ANR	8216928	Identifier	code		8216623	0					
ANR	8216929	Identifier	gs_error_typecheck		8216623	1					
ANR	8216930	BreakStatement	break ;	656:20:20963:20968	8216623	1	True				
ANR	8216931	IfStatement	if ( array_type == gs_param_type_null )		8216623	10					
ANR	8216932	Condition	array_type == gs_param_type_null	658:20:21008:21039	8216623	0	True				
ANR	8216933	EqualityExpression	array_type == gs_param_type_null		8216623	0		==			
ANR	8216934	Identifier	array_type		8216623	0					
ANR	8216935	Identifier	gs_param_type_null		8216623	1					
ANR	8216936	CompoundStatement		65:54:2141:2141	8216623	1					
ANR	8216937	ExpressionStatement	"array_data = ( char * ) gs_alloc_bytes ( mem , sizeof ( gs_param_string ) * tokens , ""param string array in distillerparams"" )"	659:20:21064:21179	8216623	0	True				
ANR	8216938	AssignmentExpression	"array_data = ( char * ) gs_alloc_bytes ( mem , sizeof ( gs_param_string ) * tokens , ""param string array in distillerparams"" )"		8216623	0		=			
ANR	8216939	Identifier	array_data		8216623	0					
ANR	8216940	CastExpression	"( char * ) gs_alloc_bytes ( mem , sizeof ( gs_param_string ) * tokens , ""param string array in distillerparams"" )"		8216623	1					
ANR	8216941	CastTarget	char *		8216623	0					
ANR	8216942	CallExpression	"gs_alloc_bytes ( mem , sizeof ( gs_param_string ) * tokens , ""param string array in distillerparams"" )"		8216623	1					
ANR	8216943	Callee	gs_alloc_bytes		8216623	0					
ANR	8216944	Identifier	gs_alloc_bytes		8216623	0					
ANR	8216945	ArgumentList	mem		8216623	1					
ANR	8216946	Argument	mem		8216623	0					
ANR	8216947	Identifier	mem		8216623	0					
ANR	8216948	Argument	sizeof ( gs_param_string ) * tokens		8216623	1					
ANR	8216949	MultiplicativeExpression	sizeof ( gs_param_string ) * tokens		8216623	0		*			
ANR	8216950	SizeofExpression	sizeof ( gs_param_string )		8216623	0					
ANR	8216951	Sizeof	sizeof		8216623	0					
ANR	8216952	SizeofOperand	gs_param_string		8216623	1					
ANR	8216953	Identifier	tokens		8216623	1					
ANR	8216954	Argument	"""param string array in distillerparams"""		8216623	2					
ANR	8216955	PrimaryExpression	"""param string array in distillerparams"""		8216623	0					
ANR	8216956	IfStatement	if ( array_data == NULL )		8216623	1					
ANR	8216957	Condition	array_data == NULL	660:24:21205:21222	8216623	0	True				
ANR	8216958	EqualityExpression	array_data == NULL		8216623	0		==			
ANR	8216959	Identifier	array_data		8216623	0					
ANR	8216960	Identifier	NULL		8216623	1					
ANR	8216961	CompoundStatement		67:43:2323:2323	8216623	1					
ANR	8216962	ExpressionStatement	code = gs_error_VMerror	661:24:21250:21273	8216623	0	True				
ANR	8216963	AssignmentExpression	code = gs_error_VMerror		8216623	0		=			
ANR	8216964	Identifier	code		8216623	0					
ANR	8216965	Identifier	gs_error_VMerror		8216623	1					
ANR	8216966	BreakStatement	break ;	662:24:21299:21304	8216623	1	True				
ANR	8216967	ExpressionStatement	array_type = gs_param_type_string_array	664:20:21348:21387	8216623	2	True				
ANR	8216968	AssignmentExpression	array_type = gs_param_type_string_array		8216623	0		=			
ANR	8216969	Identifier	array_type		8216623	0					
ANR	8216970	Identifier	gs_param_type_string_array		8216623	1					
ANR	8216971	IfStatement	"if ( strncmp ( p1 , ""true"" , 4 ) == 0 )"		8216623	11					
ANR	8216972	Condition	"strncmp ( p1 , ""true"" , 4 ) == 0"	666:20:21427:21453	8216623	0	True				
ANR	8216973	EqualityExpression	"strncmp ( p1 , ""true"" , 4 ) == 0"		8216623	0		==			
ANR	8216974	CallExpression	"strncmp ( p1 , ""true"" , 4 )"		8216623	0					
ANR	8216975	Callee	strncmp		8216623	0					
ANR	8216976	Identifier	strncmp		8216623	0					
ANR	8216977	ArgumentList	p1		8216623	1					
ANR	8216978	Argument	p1		8216623	0					
ANR	8216979	Identifier	p1		8216623	0					
ANR	8216980	Argument	"""true"""		8216623	1					
ANR	8216981	PrimaryExpression	"""true"""		8216623	0					
ANR	8216982	Argument	4		8216623	2					
ANR	8216983	PrimaryExpression	4		8216623	0					
ANR	8216984	PrimaryExpression	0		8216623	1					
ANR	8216985	CompoundStatement		73:49:2555:2555	8216623	1					
ANR	8216986	ExpressionStatement	parray = ( gs_param_string * ) array_data	667:20:21478:21516	8216623	0	True				
ANR	8216987	AssignmentExpression	parray = ( gs_param_string * ) array_data		8216623	0		=			
ANR	8216988	Identifier	parray		8216623	0					
ANR	8216989	CastExpression	( gs_param_string * ) array_data		8216623	1					
ANR	8216990	CastTarget	gs_param_string *		8216623	0					
ANR	8216991	Identifier	array_data		8216623	1					
ANR	8216992	ExpressionStatement	parray [ index ] . data = ( const byte * ) p1	668:20:21538:21575	8216623	1	True				
ANR	8216993	AssignmentExpression	parray [ index ] . data = ( const byte * ) p1		8216623	0		=			
ANR	8216994	MemberAccess	parray [ index ] . data		8216623	0					
ANR	8216995	ArrayIndexing	parray [ index ]		8216623	0					
ANR	8216996	Identifier	parray		8216623	0					
ANR	8216997	Identifier	index		8216623	1					
ANR	8216998	Identifier	data		8216623	1					
ANR	8216999	CastExpression	( const byte * ) p1		8216623	1					
ANR	8217000	CastTarget	const byte *		8216623	0					
ANR	8217001	Identifier	p1		8216623	1					
ANR	8217002	ExpressionStatement	p1 += 4	669:20:21597:21604	8216623	2	True				
ANR	8217003	AssignmentExpression	p1 += 4		8216623	0		+=			
ANR	8217004	Identifier	p1		8216623	0					
ANR	8217005	PrimaryExpression	4		8216623	1					
ANR	8217006	ExpressionStatement	* p1 ++ = 0x00	670:20:21626:21638	8216623	3	True				
ANR	8217007	AssignmentExpression	* p1 ++ = 0x00		8216623	0		=			
ANR	8217008	UnaryOperationExpression	* p1 ++		8216623	0					
ANR	8217009	UnaryOperator	*		8216623	0					
ANR	8217010	PostIncDecOperationExpression	p1 ++		8216623	1					
ANR	8217011	Identifier	p1		8216623	0					
ANR	8217012	IncDec	++		8216623	1					
ANR	8217013	PrimaryExpression	0x00		8216623	1					
ANR	8217014	ExpressionStatement	parray [ index ] . size = 4	671:20:21660:21682	8216623	4	True				
ANR	8217015	AssignmentExpression	parray [ index ] . size = 4		8216623	0		=			
ANR	8217016	MemberAccess	parray [ index ] . size		8216623	0					
ANR	8217017	ArrayIndexing	parray [ index ]		8216623	0					
ANR	8217018	Identifier	parray		8216623	0					
ANR	8217019	Identifier	index		8216623	1					
ANR	8217020	Identifier	size		8216623	1					
ANR	8217021	PrimaryExpression	4		8216623	1					
ANR	8217022	ExpressionStatement	parray [ index ++ ] . persistent = false	672:20:21704:21738	8216623	5	True				
ANR	8217023	AssignmentExpression	parray [ index ++ ] . persistent = false		8216623	0		=			
ANR	8217024	MemberAccess	parray [ index ++ ] . persistent		8216623	0					
ANR	8217025	ArrayIndexing	parray [ index ++ ]		8216623	0					
ANR	8217026	Identifier	parray		8216623	0					
ANR	8217027	PostIncDecOperationExpression	index ++		8216623	1					
ANR	8217028	Identifier	index		8216623	0					
ANR	8217029	IncDec	++		8216623	1					
ANR	8217030	Identifier	persistent		8216623	1					
ANR	8217031	Identifier	false		8216623	1					
ANR	8217032	ElseStatement	else		8216623	0					
ANR	8217033	CompoundStatement		80:23:2862:2862	8216623	0					
ANR	8217034	ExpressionStatement	code = gs_error_typecheck	674:20:21785:21810	8216623	0	True				
ANR	8217035	AssignmentExpression	code = gs_error_typecheck		8216623	0		=			
ANR	8217036	Identifier	code		8216623	0					
ANR	8217037	Identifier	gs_error_typecheck		8216623	1					
ANR	8217038	BreakStatement	break ;	675:20:21832:21837	8216623	1	True				
ANR	8217039	BreakStatement	break ;	677:16:21873:21878	8216623	12	True				
ANR	8217040	Label	case '<' :	679:12:21893:21901	8216623	13	True				
ANR	8217041	IfStatement	if ( array_type != gs_param_type_null && array_type != gs_param_type_string_array )		8216623	14					
ANR	8217042	Condition	array_type != gs_param_type_null && array_type != gs_param_type_string_array	680:20:21923:21998	8216623	0	True				
ANR	8217043	AndExpression	array_type != gs_param_type_null && array_type != gs_param_type_string_array		8216623	0		&&			
ANR	8217044	EqualityExpression	array_type != gs_param_type_null		8216623	0		!=			
ANR	8217045	Identifier	array_type		8216623	0					
ANR	8217046	Identifier	gs_param_type_null		8216623	1					
ANR	8217047	EqualityExpression	array_type != gs_param_type_string_array		8216623	1		!=			
ANR	8217048	Identifier	array_type		8216623	0					
ANR	8217049	Identifier	gs_param_type_string_array		8216623	1					
ANR	8217050	CompoundStatement		87:98:3100:3100	8216623	1					
ANR	8217051	ExpressionStatement	code = gs_error_typecheck	681:20:22023:22048	8216623	0	True				
ANR	8217052	AssignmentExpression	code = gs_error_typecheck		8216623	0		=			
ANR	8217053	Identifier	code		8216623	0					
ANR	8217054	Identifier	gs_error_typecheck		8216623	1					
ANR	8217055	BreakStatement	break ;	682:20:22070:22075	8216623	1	True				
ANR	8217056	IfStatement	if ( array_type == gs_param_type_null )		8216623	15					
ANR	8217057	Condition	array_type == gs_param_type_null	684:20:22115:22146	8216623	0	True				
ANR	8217058	EqualityExpression	array_type == gs_param_type_null		8216623	0		==			
ANR	8217059	Identifier	array_type		8216623	0					
ANR	8217060	Identifier	gs_param_type_null		8216623	1					
ANR	8217061	CompoundStatement		91:54:3248:3248	8216623	1					
ANR	8217062	ExpressionStatement	"array_data = ( char * ) gs_alloc_bytes ( mem , sizeof ( gs_param_string ) * tokens , ""param string array in distillerparams"" )"	685:20:22171:22286	8216623	0	True				
ANR	8217063	AssignmentExpression	"array_data = ( char * ) gs_alloc_bytes ( mem , sizeof ( gs_param_string ) * tokens , ""param string array in distillerparams"" )"		8216623	0		=			
ANR	8217064	Identifier	array_data		8216623	0					
ANR	8217065	CastExpression	"( char * ) gs_alloc_bytes ( mem , sizeof ( gs_param_string ) * tokens , ""param string array in distillerparams"" )"		8216623	1					
ANR	8217066	CastTarget	char *		8216623	0					
ANR	8217067	CallExpression	"gs_alloc_bytes ( mem , sizeof ( gs_param_string ) * tokens , ""param string array in distillerparams"" )"		8216623	1					
ANR	8217068	Callee	gs_alloc_bytes		8216623	0					
ANR	8217069	Identifier	gs_alloc_bytes		8216623	0					
ANR	8217070	ArgumentList	mem		8216623	1					
ANR	8217071	Argument	mem		8216623	0					
ANR	8217072	Identifier	mem		8216623	0					
ANR	8217073	Argument	sizeof ( gs_param_string ) * tokens		8216623	1					
ANR	8217074	MultiplicativeExpression	sizeof ( gs_param_string ) * tokens		8216623	0		*			
ANR	8217075	SizeofExpression	sizeof ( gs_param_string )		8216623	0					
ANR	8217076	Sizeof	sizeof		8216623	0					
ANR	8217077	SizeofOperand	gs_param_string		8216623	1					
ANR	8217078	Identifier	tokens		8216623	1					
ANR	8217079	Argument	"""param string array in distillerparams"""		8216623	2					
ANR	8217080	PrimaryExpression	"""param string array in distillerparams"""		8216623	0					
ANR	8217081	IfStatement	if ( array_data == NULL )		8216623	1					
ANR	8217082	Condition	array_data == NULL	686:24:22312:22329	8216623	0	True				
ANR	8217083	EqualityExpression	array_data == NULL		8216623	0		==			
ANR	8217084	Identifier	array_data		8216623	0					
ANR	8217085	Identifier	NULL		8216623	1					
ANR	8217086	CompoundStatement		93:43:3430:3430	8216623	1					
ANR	8217087	ExpressionStatement	code = gs_error_VMerror	687:24:22357:22380	8216623	0	True				
ANR	8217088	AssignmentExpression	code = gs_error_VMerror		8216623	0		=			
ANR	8217089	Identifier	code		8216623	0					
ANR	8217090	Identifier	gs_error_VMerror		8216623	1					
ANR	8217091	BreakStatement	break ;	688:24:22406:22411	8216623	1	True				
ANR	8217092	ExpressionStatement	array_type = gs_param_type_string_array	690:20:22455:22494	8216623	2	True				
ANR	8217093	AssignmentExpression	array_type = gs_param_type_string_array		8216623	0		=			
ANR	8217094	Identifier	array_type		8216623	0					
ANR	8217095	Identifier	gs_param_type_string_array		8216623	1					
ANR	8217096	IfStatement	if ( * ( p1 + 1 ) == '<' )		8216623	16					
ANR	8217097	Condition	* ( p1 + 1 ) == '<'	692:20:22534:22547	8216623	0	True				
ANR	8217098	EqualityExpression	* ( p1 + 1 ) == '<'		8216623	0		==			
ANR	8217099	UnaryOperationExpression	* ( p1 + 1 )		8216623	0					
ANR	8217100	UnaryOperator	*		8216623	0					
ANR	8217101	AdditiveExpression	p1 + 1		8216623	1		+			
ANR	8217102	Identifier	p1		8216623	0					
ANR	8217103	PrimaryExpression	1		8216623	1					
ANR	8217104	PrimaryExpression	'<'		8216623	1					
ANR	8217105	CompoundStatement		99:36:3649:3649	8216623	1					
ANR	8217106	ExpressionStatement	code = gs_error_typecheck	693:20:22572:22597	8216623	0	True				
ANR	8217107	AssignmentExpression	code = gs_error_typecheck		8216623	0		=			
ANR	8217108	Identifier	code		8216623	0					
ANR	8217109	Identifier	gs_error_typecheck		8216623	1					
ANR	8217110	BreakStatement	break ;	694:20:22619:22624	8216623	1	True				
ANR	8217111	ElseStatement	else		8216623	0					
ANR	8217112	CompoundStatement		106:20:3911:3916	8216623	0					
ANR	8217113	IdentifierDeclStatement	"char * src , * dest ;"	697:20:22739:22755	8216623	0	True				
ANR	8217114	IdentifierDecl	* src		8216623	0					
ANR	8217115	IdentifierDeclType	char *		8216623	0					
ANR	8217116	Identifier	src		8216623	1					
ANR	8217117	IdentifierDecl	* dest		8216623	1					
ANR	8217118	IdentifierDeclType	char *		8216623	0					
ANR	8217119	Identifier	dest		8216623	1					
ANR	8217120	IdentifierDeclStatement	char data = 0 ;	698:20:22777:22790	8216623	1	True				
ANR	8217121	IdentifierDecl	data = 0		8216623	0					
ANR	8217122	IdentifierDeclType	char		8216623	0					
ANR	8217123	Identifier	data		8216623	1					
ANR	8217124	AssignmentExpression	data = 0		8216623	2		=			
ANR	8217125	Identifier	data		8216623	0					
ANR	8217126	PrimaryExpression	0		8216623	1					
ANR	8217127	IdentifierDeclStatement	int i ;	699:20:22812:22817	8216623	2	True				
ANR	8217128	IdentifierDecl	i		8216623	0					
ANR	8217129	IdentifierDeclType	int		8216623	0					
ANR	8217130	Identifier	i		8216623	1					
ANR	8217131	ExpressionStatement	parray = ( gs_param_string * ) array_data	701:20:22840:22878	8216623	3	True				
ANR	8217132	AssignmentExpression	parray = ( gs_param_string * ) array_data		8216623	0		=			
ANR	8217133	Identifier	parray		8216623	0					
ANR	8217134	CastExpression	( gs_param_string * ) array_data		8216623	1					
ANR	8217135	CastTarget	gs_param_string *		8216623	0					
ANR	8217136	Identifier	array_data		8216623	1					
ANR	8217137	ExpressionStatement	src = dest = ++ p1	702:20:22900:22917	8216623	4	True				
ANR	8217138	AssignmentExpression	src = dest = ++ p1		8216623	0		=			
ANR	8217139	Identifier	src		8216623	0					
ANR	8217140	AssignmentExpression	dest = ++ p1		8216623	1		=			
ANR	8217141	Identifier	dest		8216623	0					
ANR	8217142	UnaryExpression	++ p1		8216623	1					
ANR	8217143	IncDec	++		8216623	0					
ANR	8217144	Identifier	p1		8216623	1					
ANR	8217145	ExpressionStatement	parray [ index ] . data = ( const byte * ) p1	703:20:22939:22976	8216623	5	True				
ANR	8217146	AssignmentExpression	parray [ index ] . data = ( const byte * ) p1		8216623	0		=			
ANR	8217147	MemberAccess	parray [ index ] . data		8216623	0					
ANR	8217148	ArrayIndexing	parray [ index ]		8216623	0					
ANR	8217149	Identifier	parray		8216623	0					
ANR	8217150	Identifier	index		8216623	1					
ANR	8217151	Identifier	data		8216623	1					
ANR	8217152	CastExpression	( const byte * ) p1		8216623	1					
ANR	8217153	CastTarget	const byte *		8216623	0					
ANR	8217154	Identifier	p1		8216623	1					
ANR	8217155	WhileStatement	while ( * src != 0x00 && * src != '>' )		8216623	6					
ANR	8217156	Condition	* src != 0x00 && * src != '>'	704:27:23005:23031	8216623	0	True				
ANR	8217157	AndExpression	* src != 0x00 && * src != '>'		8216623	0		&&			
ANR	8217158	EqualityExpression	* src != 0x00		8216623	0		!=			
ANR	8217159	UnaryOperationExpression	* src		8216623	0					
ANR	8217160	UnaryOperator	*		8216623	0					
ANR	8217161	Identifier	src		8216623	1					
ANR	8217162	PrimaryExpression	0x00		8216623	1					
ANR	8217163	EqualityExpression	* src != '>'		8216623	1		!=			
ANR	8217164	UnaryOperationExpression	* src		8216623	0					
ANR	8217165	UnaryOperator	*		8216623	0					
ANR	8217166	Identifier	src		8216623	1					
ANR	8217167	PrimaryExpression	'>'		8216623	1					
ANR	8217168	CompoundStatement		111:56:4133:4133	8216623	1					
ANR	8217169	ExpressionStatement	data = 0	705:24:23060:23068	8216623	0	True				
ANR	8217170	AssignmentExpression	data = 0		8216623	0		=			
ANR	8217171	Identifier	data		8216623	0					
ANR	8217172	PrimaryExpression	0		8216623	1					
ANR	8217173	ForStatement	for ( i = 0 ; i < 2 ; i ++ )		8216623	1					
ANR	8217174	ForInit	i = 0 ;	706:29:23099:23102	8216623	0	True				
ANR	8217175	AssignmentExpression	i = 0		8216623	0		=			
ANR	8217176	Identifier	i		8216623	0					
ANR	8217177	PrimaryExpression	0		8216623	1					
ANR	8217178	Condition	i < 2	706:33:23103:23105	8216623	1	True				
ANR	8217179	RelationalExpression	i < 2		8216623	0		<			
ANR	8217180	Identifier	i		8216623	0					
ANR	8217181	PrimaryExpression	2		8216623	1					
ANR	8217182	PostIncDecOperationExpression	i ++	706:37:23107:23109	8216623	2	True				
ANR	8217183	Identifier	i		8216623	0					
ANR	8217184	IncDec	++		8216623	1					
ANR	8217185	CompoundStatement		113:42:4211:4211	8216623	3					
ANR	8217186	IfStatement	if ( * src >= '0' && * src <= '9' )		8216623	0					
ANR	8217187	Condition	* src >= '0' && * src <= '9'	707:31:23145:23170	8216623	0	True				
ANR	8217188	AndExpression	* src >= '0' && * src <= '9'		8216623	0		&&			
ANR	8217189	RelationalExpression	* src >= '0'		8216623	0		>=			
ANR	8217190	UnaryOperationExpression	* src		8216623	0					
ANR	8217191	UnaryOperator	*		8216623	0					
ANR	8217192	Identifier	src		8216623	1					
ANR	8217193	PrimaryExpression	'0'		8216623	1					
ANR	8217194	RelationalExpression	* src <= '9'		8216623	1		<=			
ANR	8217195	UnaryOperationExpression	* src		8216623	0					
ANR	8217196	UnaryOperator	*		8216623	0					
ANR	8217197	Identifier	src		8216623	1					
ANR	8217198	PrimaryExpression	'9'		8216623	1					
ANR	8217199	CompoundStatement		114:59:4272:4272	8216623	1					
ANR	8217200	ExpressionStatement	data = ( data << 4 )	708:32:23207:23225	8216623	0	True				
ANR	8217201	AssignmentExpression	data = ( data << 4 )		8216623	0		=			
ANR	8217202	Identifier	data		8216623	0					
ANR	8217203	ShiftExpression	data << 4		8216623	1		<<			
ANR	8217204	Identifier	data		8216623	0					
ANR	8217205	PrimaryExpression	4		8216623	1					
ANR	8217206	ExpressionStatement	data += ( * src - '0' )	709:32:23259:23279	8216623	1	True				
ANR	8217207	AssignmentExpression	data += ( * src - '0' )		8216623	0		+=			
ANR	8217208	Identifier	data		8216623	0					
ANR	8217209	AdditiveExpression	* src - '0'		8216623	1		-			
ANR	8217210	UnaryOperationExpression	* src		8216623	0					
ANR	8217211	UnaryOperator	*		8216623	0					
ANR	8217212	Identifier	src		8216623	1					
ANR	8217213	PrimaryExpression	'0'		8216623	1					
ANR	8217214	ElseStatement	else		8216623	0					
ANR	8217215	CompoundStatement		117:35:4415:4415	8216623	0					
ANR	8217216	IfStatement	if ( * src >= 'A' && * src <= 'F' )		8216623	0					
ANR	8217217	Condition	* src >= 'A' && * src <= 'F'	711:36:23354:23379	8216623	0	True				
ANR	8217218	AndExpression	* src >= 'A' && * src <= 'F'		8216623	0		&&			
ANR	8217219	RelationalExpression	* src >= 'A'		8216623	0		>=			
ANR	8217220	UnaryOperationExpression	* src		8216623	0					
ANR	8217221	UnaryOperator	*		8216623	0					
ANR	8217222	Identifier	src		8216623	1					
ANR	8217223	PrimaryExpression	'A'		8216623	1					
ANR	8217224	RelationalExpression	* src <= 'F'		8216623	1		<=			
ANR	8217225	UnaryOperationExpression	* src		8216623	0					
ANR	8217226	UnaryOperator	*		8216623	0					
ANR	8217227	Identifier	src		8216623	1					
ANR	8217228	PrimaryExpression	'F'		8216623	1					
ANR	8217229	CompoundStatement		118:64:4481:4481	8216623	1					
ANR	8217230	ExpressionStatement	data = ( data << 4 )	712:36:23420:23438	8216623	0	True				
ANR	8217231	AssignmentExpression	data = ( data << 4 )		8216623	0		=			
ANR	8217232	Identifier	data		8216623	0					
ANR	8217233	ShiftExpression	data << 4		8216623	1		<<			
ANR	8217234	Identifier	data		8216623	0					
ANR	8217235	PrimaryExpression	4		8216623	1					
ANR	8217236	ExpressionStatement	data += ( * src - 'A' + 10 )	713:36:23476:23501	8216623	1	True				
ANR	8217237	AssignmentExpression	data += ( * src - 'A' + 10 )		8216623	0		+=			
ANR	8217238	Identifier	data		8216623	0					
ANR	8217239	AdditiveExpression	* src - 'A' + 10		8216623	1		-			
ANR	8217240	UnaryOperationExpression	* src		8216623	0					
ANR	8217241	UnaryOperator	*		8216623	0					
ANR	8217242	Identifier	src		8216623	1					
ANR	8217243	AdditiveExpression	'A' + 10		8216623	1		+			
ANR	8217244	PrimaryExpression	'A'		8216623	0					
ANR	8217245	PrimaryExpression	10		8216623	1					
ANR	8217246	ElseStatement	else		8216623	0					
ANR	8217247	CompoundStatement		121:39:4641:4641	8216623	0					
ANR	8217248	IfStatement	if ( * src >= 'a' && * src <= 'f' )		8216623	0					
ANR	8217249	Condition	* src >= 'a' && * src <= 'f'	715:40:23584:23609	8216623	0	True				
ANR	8217250	AndExpression	* src >= 'a' && * src <= 'f'		8216623	0		&&			
ANR	8217251	RelationalExpression	* src >= 'a'		8216623	0		>=			
ANR	8217252	UnaryOperationExpression	* src		8216623	0					
ANR	8217253	UnaryOperator	*		8216623	0					
ANR	8217254	Identifier	src		8216623	1					
ANR	8217255	PrimaryExpression	'a'		8216623	1					
ANR	8217256	RelationalExpression	* src <= 'f'		8216623	1		<=			
ANR	8217257	UnaryOperationExpression	* src		8216623	0					
ANR	8217258	UnaryOperator	*		8216623	0					
ANR	8217259	Identifier	src		8216623	1					
ANR	8217260	PrimaryExpression	'f'		8216623	1					
ANR	8217261	CompoundStatement		122:68:4711:4711	8216623	1					
ANR	8217262	ExpressionStatement	data = ( data << 4 )	716:40:23654:23672	8216623	0	True				
ANR	8217263	AssignmentExpression	data = ( data << 4 )		8216623	0		=			
ANR	8217264	Identifier	data		8216623	0					
ANR	8217265	ShiftExpression	data << 4		8216623	1		<<			
ANR	8217266	Identifier	data		8216623	0					
ANR	8217267	PrimaryExpression	4		8216623	1					
ANR	8217268	ExpressionStatement	data += ( * src - 'a' + 10 )	717:40:23714:23739	8216623	1	True				
ANR	8217269	AssignmentExpression	data += ( * src - 'a' + 10 )		8216623	0		+=			
ANR	8217270	Identifier	data		8216623	0					
ANR	8217271	AdditiveExpression	* src - 'a' + 10		8216623	1		-			
ANR	8217272	UnaryOperationExpression	* src		8216623	0					
ANR	8217273	UnaryOperator	*		8216623	0					
ANR	8217274	Identifier	src		8216623	1					
ANR	8217275	AdditiveExpression	'a' + 10		8216623	1		+			
ANR	8217276	PrimaryExpression	'a'		8216623	0					
ANR	8217277	PrimaryExpression	10		8216623	1					
ANR	8217278	ElseStatement	else		8216623	0					
ANR	8217279	CompoundStatement		125:43:4883:4883	8216623	0					
ANR	8217280	ReturnStatement	return - 1 ;	719:40:23826:23835	8216623	0	True				
ANR	8217281	UnaryOperationExpression	- 1		8216623	0					
ANR	8217282	UnaryOperator	-		8216623	0					
ANR	8217283	PrimaryExpression	1		8216623	1					
ANR	8217284	ExpressionStatement	src ++	723:28:23967:23972	8216623	1	True				
ANR	8217285	PostIncDecOperationExpression	src ++		8216623	0					
ANR	8217286	Identifier	src		8216623	0					
ANR	8217287	IncDec	++		8216623	1					
ANR	8217288	ExpressionStatement	* dest ++ = data	725:24:24024:24038	8216623	2	True				
ANR	8217289	AssignmentExpression	* dest ++ = data		8216623	0		=			
ANR	8217290	UnaryOperationExpression	* dest ++		8216623	0					
ANR	8217291	UnaryOperator	*		8216623	0					
ANR	8217292	PostIncDecOperationExpression	dest ++		8216623	1					
ANR	8217293	Identifier	dest		8216623	0					
ANR	8217294	IncDec	++		8216623	1					
ANR	8217295	Identifier	data		8216623	1					
ANR	8217296	ExpressionStatement	* dest = 0x00	727:20:24082:24094	8216623	7	True				
ANR	8217297	AssignmentExpression	* dest = 0x00		8216623	0		=			
ANR	8217298	UnaryOperationExpression	* dest		8216623	0					
ANR	8217299	UnaryOperator	*		8216623	0					
ANR	8217300	Identifier	dest		8216623	1					
ANR	8217301	PrimaryExpression	0x00		8216623	1					
ANR	8217302	ExpressionStatement	parray [ index ] . size = strlen ( ( char * ) ( parray [ index ] . data ) )	728:20:24116:24173	8216623	8	True				
ANR	8217303	AssignmentExpression	parray [ index ] . size = strlen ( ( char * ) ( parray [ index ] . data ) )		8216623	0		=			
ANR	8217304	MemberAccess	parray [ index ] . size		8216623	0					
ANR	8217305	ArrayIndexing	parray [ index ]		8216623	0					
ANR	8217306	Identifier	parray		8216623	0					
ANR	8217307	Identifier	index		8216623	1					
ANR	8217308	Identifier	size		8216623	1					
ANR	8217309	CallExpression	strlen ( ( char * ) ( parray [ index ] . data ) )		8216623	1					
ANR	8217310	Callee	strlen		8216623	0					
ANR	8217311	Identifier	strlen		8216623	0					
ANR	8217312	ArgumentList	( char * ) ( parray [ index ] . data )		8216623	1					
ANR	8217313	Argument	( char * ) ( parray [ index ] . data )		8216623	0					
ANR	8217314	CastExpression	( char * ) ( parray [ index ] . data )		8216623	0					
ANR	8217315	CastTarget	char *		8216623	0					
ANR	8217316	MemberAccess	parray [ index ] . data		8216623	1					
ANR	8217317	ArrayIndexing	parray [ index ]		8216623	0					
ANR	8217318	Identifier	parray		8216623	0					
ANR	8217319	Identifier	index		8216623	1					
ANR	8217320	Identifier	data		8216623	1					
ANR	8217321	ExpressionStatement	parray [ index ++ ] . persistent = false	729:20:24195:24229	8216623	9	True				
ANR	8217322	AssignmentExpression	parray [ index ++ ] . persistent = false		8216623	0		=			
ANR	8217323	MemberAccess	parray [ index ++ ] . persistent		8216623	0					
ANR	8217324	ArrayIndexing	parray [ index ++ ]		8216623	0					
ANR	8217325	Identifier	parray		8216623	0					
ANR	8217326	PostIncDecOperationExpression	index ++		8216623	1					
ANR	8217327	Identifier	index		8216623	0					
ANR	8217328	IncDec	++		8216623	1					
ANR	8217329	Identifier	persistent		8216623	1					
ANR	8217330	Identifier	false		8216623	1					
ANR	8217331	BreakStatement	break ;	731:16:24265:24270	8216623	17	True				
ANR	8217332	Label	case '/' :	733:12:24285:24293	8216623	18	True				
ANR	8217333	IfStatement	if ( array_type != gs_param_type_null && array_type != gs_param_type_string_array )		8216623	19					
ANR	8217334	Condition	array_type != gs_param_type_null && array_type != gs_param_type_string_array	734:20:24315:24390	8216623	0	True				
ANR	8217335	AndExpression	array_type != gs_param_type_null && array_type != gs_param_type_string_array		8216623	0		&&			
ANR	8217336	EqualityExpression	array_type != gs_param_type_null		8216623	0		!=			
ANR	8217337	Identifier	array_type		8216623	0					
ANR	8217338	Identifier	gs_param_type_null		8216623	1					
ANR	8217339	EqualityExpression	array_type != gs_param_type_string_array		8216623	1		!=			
ANR	8217340	Identifier	array_type		8216623	0					
ANR	8217341	Identifier	gs_param_type_string_array		8216623	1					
ANR	8217342	CompoundStatement		141:98:5492:5492	8216623	1					
ANR	8217343	ExpressionStatement	code = gs_error_typecheck	735:20:24415:24440	8216623	0	True				
ANR	8217344	AssignmentExpression	code = gs_error_typecheck		8216623	0		=			
ANR	8217345	Identifier	code		8216623	0					
ANR	8217346	Identifier	gs_error_typecheck		8216623	1					
ANR	8217347	BreakStatement	break ;	736:20:24462:24467	8216623	1	True				
ANR	8217348	IfStatement	if ( array_type == gs_param_type_null )		8216623	20					
ANR	8217349	Condition	array_type == gs_param_type_null	738:20:24507:24538	8216623	0	True				
ANR	8217350	EqualityExpression	array_type == gs_param_type_null		8216623	0		==			
ANR	8217351	Identifier	array_type		8216623	0					
ANR	8217352	Identifier	gs_param_type_null		8216623	1					
ANR	8217353	CompoundStatement		145:54:5640:5640	8216623	1					
ANR	8217354	ExpressionStatement	"array_data = ( char * ) gs_alloc_bytes ( mem , sizeof ( gs_param_string ) * tokens , ""param string array in distillerparams"" )"	739:20:24563:24678	8216623	0	True				
ANR	8217355	AssignmentExpression	"array_data = ( char * ) gs_alloc_bytes ( mem , sizeof ( gs_param_string ) * tokens , ""param string array in distillerparams"" )"		8216623	0		=			
ANR	8217356	Identifier	array_data		8216623	0					
ANR	8217357	CastExpression	"( char * ) gs_alloc_bytes ( mem , sizeof ( gs_param_string ) * tokens , ""param string array in distillerparams"" )"		8216623	1					
ANR	8217358	CastTarget	char *		8216623	0					
ANR	8217359	CallExpression	"gs_alloc_bytes ( mem , sizeof ( gs_param_string ) * tokens , ""param string array in distillerparams"" )"		8216623	1					
ANR	8217360	Callee	gs_alloc_bytes		8216623	0					
ANR	8217361	Identifier	gs_alloc_bytes		8216623	0					
ANR	8217362	ArgumentList	mem		8216623	1					
ANR	8217363	Argument	mem		8216623	0					
ANR	8217364	Identifier	mem		8216623	0					
ANR	8217365	Argument	sizeof ( gs_param_string ) * tokens		8216623	1					
ANR	8217366	MultiplicativeExpression	sizeof ( gs_param_string ) * tokens		8216623	0		*			
ANR	8217367	SizeofExpression	sizeof ( gs_param_string )		8216623	0					
ANR	8217368	Sizeof	sizeof		8216623	0					
ANR	8217369	SizeofOperand	gs_param_string		8216623	1					
ANR	8217370	Identifier	tokens		8216623	1					
ANR	8217371	Argument	"""param string array in distillerparams"""		8216623	2					
ANR	8217372	PrimaryExpression	"""param string array in distillerparams"""		8216623	0					
ANR	8217373	IfStatement	if ( array_data == NULL )		8216623	1					
ANR	8217374	Condition	array_data == NULL	740:24:24704:24721	8216623	0	True				
ANR	8217375	EqualityExpression	array_data == NULL		8216623	0		==			
ANR	8217376	Identifier	array_data		8216623	0					
ANR	8217377	Identifier	NULL		8216623	1					
ANR	8217378	CompoundStatement		147:43:5822:5822	8216623	1					
ANR	8217379	ExpressionStatement	code = gs_error_VMerror	741:24:24749:24772	8216623	0	True				
ANR	8217380	AssignmentExpression	code = gs_error_VMerror		8216623	0		=			
ANR	8217381	Identifier	code		8216623	0					
ANR	8217382	Identifier	gs_error_VMerror		8216623	1					
ANR	8217383	BreakStatement	break ;	742:24:24798:24803	8216623	1	True				
ANR	8217384	ExpressionStatement	array_type = gs_param_type_string_array	744:20:24847:24886	8216623	2	True				
ANR	8217385	AssignmentExpression	array_type = gs_param_type_string_array		8216623	0		=			
ANR	8217386	Identifier	array_type		8216623	0					
ANR	8217387	Identifier	gs_param_type_string_array		8216623	1					
ANR	8217388	ExpressionStatement	parray = ( gs_param_string * ) array_data	746:16:24922:24960	8216623	21	True				
ANR	8217389	AssignmentExpression	parray = ( gs_param_string * ) array_data		8216623	0		=			
ANR	8217390	Identifier	parray		8216623	0					
ANR	8217391	CastExpression	( gs_param_string * ) array_data		8216623	1					
ANR	8217392	CastTarget	gs_param_string *		8216623	0					
ANR	8217393	Identifier	array_data		8216623	1					
ANR	8217394	ExpressionStatement	parray [ index ] . data = ( const byte * ) p1	747:16:24978:25015	8216623	22	True				
ANR	8217395	AssignmentExpression	parray [ index ] . data = ( const byte * ) p1		8216623	0		=			
ANR	8217396	MemberAccess	parray [ index ] . data		8216623	0					
ANR	8217397	ArrayIndexing	parray [ index ]		8216623	0					
ANR	8217398	Identifier	parray		8216623	0					
ANR	8217399	Identifier	index		8216623	1					
ANR	8217400	Identifier	data		8216623	1					
ANR	8217401	CastExpression	( const byte * ) p1		8216623	1					
ANR	8217402	CastTarget	const byte *		8216623	0					
ANR	8217403	Identifier	p1		8216623	1					
ANR	8217404	WhileStatement	while ( * p1 != ' ' && * p1 != 0x00 )		8216623	23					
ANR	8217405	Condition	* p1 != ' ' && * p1 != 0x00	748:23:25040:25064	8216623	0	True				
ANR	8217406	AndExpression	* p1 != ' ' && * p1 != 0x00		8216623	0		&&			
ANR	8217407	EqualityExpression	* p1 != ' '		8216623	0		!=			
ANR	8217408	UnaryOperationExpression	* p1		8216623	0					
ANR	8217409	UnaryOperator	*		8216623	0					
ANR	8217410	Identifier	p1		8216623	1					
ANR	8217411	PrimaryExpression	' '		8216623	1					
ANR	8217412	EqualityExpression	* p1 != 0x00		8216623	1		!=			
ANR	8217413	UnaryOperationExpression	* p1		8216623	0					
ANR	8217414	UnaryOperator	*		8216623	0					
ANR	8217415	Identifier	p1		8216623	1					
ANR	8217416	PrimaryExpression	0x00		8216623	1					
ANR	8217417	ExpressionStatement	p1 ++	749:20:25087:25091	8216623	1	True				
ANR	8217418	PostIncDecOperationExpression	p1 ++		8216623	0					
ANR	8217419	Identifier	p1		8216623	0					
ANR	8217420	IncDec	++		8216623	1					
ANR	8217421	IfStatement	if ( * p1 == 0x00 )		8216623	24					
ANR	8217422	Condition	* p1 == 0x00	750:20:25113:25123	8216623	0	True				
ANR	8217423	EqualityExpression	* p1 == 0x00		8216623	0		==			
ANR	8217424	UnaryOperationExpression	* p1		8216623	0					
ANR	8217425	UnaryOperator	*		8216623	0					
ANR	8217426	Identifier	p1		8216623	1					
ANR	8217427	PrimaryExpression	0x00		8216623	1					
ANR	8217428	ReturnStatement	return - 1 ;	751:20:25146:25155	8216623	1	True				
ANR	8217429	UnaryOperationExpression	- 1		8216623	0					
ANR	8217430	UnaryOperator	-		8216623	0					
ANR	8217431	PrimaryExpression	1		8216623	1					
ANR	8217432	ExpressionStatement	* p1 ++ = 0x00	752:16:25173:25185	8216623	25	True				
ANR	8217433	AssignmentExpression	* p1 ++ = 0x00		8216623	0		=			
ANR	8217434	UnaryOperationExpression	* p1 ++		8216623	0					
ANR	8217435	UnaryOperator	*		8216623	0					
ANR	8217436	PostIncDecOperationExpression	p1 ++		8216623	1					
ANR	8217437	Identifier	p1		8216623	0					
ANR	8217438	IncDec	++		8216623	1					
ANR	8217439	PrimaryExpression	0x00		8216623	1					
ANR	8217440	ExpressionStatement	parray [ index ] . size = strlen ( ( char * ) ( parray [ index ] . data ) )	753:16:25203:25260	8216623	26	True				
ANR	8217441	AssignmentExpression	parray [ index ] . size = strlen ( ( char * ) ( parray [ index ] . data ) )		8216623	0		=			
ANR	8217442	MemberAccess	parray [ index ] . size		8216623	0					
ANR	8217443	ArrayIndexing	parray [ index ]		8216623	0					
ANR	8217444	Identifier	parray		8216623	0					
ANR	8217445	Identifier	index		8216623	1					
ANR	8217446	Identifier	size		8216623	1					
ANR	8217447	CallExpression	strlen ( ( char * ) ( parray [ index ] . data ) )		8216623	1					
ANR	8217448	Callee	strlen		8216623	0					
ANR	8217449	Identifier	strlen		8216623	0					
ANR	8217450	ArgumentList	( char * ) ( parray [ index ] . data )		8216623	1					
ANR	8217451	Argument	( char * ) ( parray [ index ] . data )		8216623	0					
ANR	8217452	CastExpression	( char * ) ( parray [ index ] . data )		8216623	0					
ANR	8217453	CastTarget	char *		8216623	0					
ANR	8217454	MemberAccess	parray [ index ] . data		8216623	1					
ANR	8217455	ArrayIndexing	parray [ index ]		8216623	0					
ANR	8217456	Identifier	parray		8216623	0					
ANR	8217457	Identifier	index		8216623	1					
ANR	8217458	Identifier	data		8216623	1					
ANR	8217459	ExpressionStatement	parray [ index ++ ] . persistent = false	754:16:25278:25312	8216623	27	True				
ANR	8217460	AssignmentExpression	parray [ index ++ ] . persistent = false		8216623	0		=			
ANR	8217461	MemberAccess	parray [ index ++ ] . persistent		8216623	0					
ANR	8217462	ArrayIndexing	parray [ index ++ ]		8216623	0					
ANR	8217463	Identifier	parray		8216623	0					
ANR	8217464	PostIncDecOperationExpression	index ++		8216623	1					
ANR	8217465	Identifier	index		8216623	0					
ANR	8217466	IncDec	++		8216623	1					
ANR	8217467	Identifier	persistent		8216623	1					
ANR	8217468	Identifier	false		8216623	1					
ANR	8217469	BreakStatement	break ;	755:16:25330:25335	8216623	28	True				
ANR	8217470	Label	case '(' :	757:12:25350:25358	8216623	29	True				
ANR	8217471	IfStatement	if ( array_type != gs_param_type_null && array_type != gs_param_type_string_array )		8216623	30					
ANR	8217472	Condition	array_type != gs_param_type_null && array_type != gs_param_type_string_array	758:20:25380:25455	8216623	0	True				
ANR	8217473	AndExpression	array_type != gs_param_type_null && array_type != gs_param_type_string_array		8216623	0		&&			
ANR	8217474	EqualityExpression	array_type != gs_param_type_null		8216623	0		!=			
ANR	8217475	Identifier	array_type		8216623	0					
ANR	8217476	Identifier	gs_param_type_null		8216623	1					
ANR	8217477	EqualityExpression	array_type != gs_param_type_string_array		8216623	1		!=			
ANR	8217478	Identifier	array_type		8216623	0					
ANR	8217479	Identifier	gs_param_type_string_array		8216623	1					
ANR	8217480	CompoundStatement		165:98:6557:6557	8216623	1					
ANR	8217481	ExpressionStatement	code = gs_error_typecheck	759:20:25480:25505	8216623	0	True				
ANR	8217482	AssignmentExpression	code = gs_error_typecheck		8216623	0		=			
ANR	8217483	Identifier	code		8216623	0					
ANR	8217484	Identifier	gs_error_typecheck		8216623	1					
ANR	8217485	BreakStatement	break ;	760:20:25527:25532	8216623	1	True				
ANR	8217486	IfStatement	if ( array_type == gs_param_type_null )		8216623	31					
ANR	8217487	Condition	array_type == gs_param_type_null	762:20:25572:25603	8216623	0	True				
ANR	8217488	EqualityExpression	array_type == gs_param_type_null		8216623	0		==			
ANR	8217489	Identifier	array_type		8216623	0					
ANR	8217490	Identifier	gs_param_type_null		8216623	1					
ANR	8217491	CompoundStatement		169:54:6705:6705	8216623	1					
ANR	8217492	ExpressionStatement	"array_data = ( char * ) gs_alloc_bytes ( mem , sizeof ( gs_param_string ) * tokens , ""param string array in distillerparams"" )"	763:20:25628:25743	8216623	0	True				
ANR	8217493	AssignmentExpression	"array_data = ( char * ) gs_alloc_bytes ( mem , sizeof ( gs_param_string ) * tokens , ""param string array in distillerparams"" )"		8216623	0		=			
ANR	8217494	Identifier	array_data		8216623	0					
ANR	8217495	CastExpression	"( char * ) gs_alloc_bytes ( mem , sizeof ( gs_param_string ) * tokens , ""param string array in distillerparams"" )"		8216623	1					
ANR	8217496	CastTarget	char *		8216623	0					
ANR	8217497	CallExpression	"gs_alloc_bytes ( mem , sizeof ( gs_param_string ) * tokens , ""param string array in distillerparams"" )"		8216623	1					
ANR	8217498	Callee	gs_alloc_bytes		8216623	0					
ANR	8217499	Identifier	gs_alloc_bytes		8216623	0					
ANR	8217500	ArgumentList	mem		8216623	1					
ANR	8217501	Argument	mem		8216623	0					
ANR	8217502	Identifier	mem		8216623	0					
ANR	8217503	Argument	sizeof ( gs_param_string ) * tokens		8216623	1					
ANR	8217504	MultiplicativeExpression	sizeof ( gs_param_string ) * tokens		8216623	0		*			
ANR	8217505	SizeofExpression	sizeof ( gs_param_string )		8216623	0					
ANR	8217506	Sizeof	sizeof		8216623	0					
ANR	8217507	SizeofOperand	gs_param_string		8216623	1					
ANR	8217508	Identifier	tokens		8216623	1					
ANR	8217509	Argument	"""param string array in distillerparams"""		8216623	2					
ANR	8217510	PrimaryExpression	"""param string array in distillerparams"""		8216623	0					
ANR	8217511	IfStatement	if ( array_data == NULL )		8216623	1					
ANR	8217512	Condition	array_data == NULL	764:24:25769:25786	8216623	0	True				
ANR	8217513	EqualityExpression	array_data == NULL		8216623	0		==			
ANR	8217514	Identifier	array_data		8216623	0					
ANR	8217515	Identifier	NULL		8216623	1					
ANR	8217516	CompoundStatement		171:43:6887:6887	8216623	1					
ANR	8217517	ExpressionStatement	code = gs_error_VMerror	765:24:25814:25837	8216623	0	True				
ANR	8217518	AssignmentExpression	code = gs_error_VMerror		8216623	0		=			
ANR	8217519	Identifier	code		8216623	0					
ANR	8217520	Identifier	gs_error_VMerror		8216623	1					
ANR	8217521	BreakStatement	break ;	766:24:25863:25868	8216623	1	True				
ANR	8217522	ExpressionStatement	array_type = gs_param_type_string_array	768:20:25912:25951	8216623	2	True				
ANR	8217523	AssignmentExpression	array_type = gs_param_type_string_array		8216623	0		=			
ANR	8217524	Identifier	array_type		8216623	0					
ANR	8217525	Identifier	gs_param_type_string_array		8216623	1					
ANR	8217526	ExpressionStatement	parray = ( gs_param_string * ) array_data	770:16:25987:26025	8216623	32	True				
ANR	8217527	AssignmentExpression	parray = ( gs_param_string * ) array_data		8216623	0		=			
ANR	8217528	Identifier	parray		8216623	0					
ANR	8217529	CastExpression	( gs_param_string * ) array_data		8216623	1					
ANR	8217530	CastTarget	gs_param_string *		8216623	0					
ANR	8217531	Identifier	array_data		8216623	1					
ANR	8217532	ExpressionStatement	parray [ index ] . data = ( const byte * ) p1	771:16:26043:26080	8216623	33	True				
ANR	8217533	AssignmentExpression	parray [ index ] . data = ( const byte * ) p1		8216623	0		=			
ANR	8217534	MemberAccess	parray [ index ] . data		8216623	0					
ANR	8217535	ArrayIndexing	parray [ index ]		8216623	0					
ANR	8217536	Identifier	parray		8216623	0					
ANR	8217537	Identifier	index		8216623	1					
ANR	8217538	Identifier	data		8216623	1					
ANR	8217539	CastExpression	( const byte * ) p1		8216623	1					
ANR	8217540	CastTarget	const byte *		8216623	0					
ANR	8217541	Identifier	p1		8216623	1					
ANR	8217542	WhileStatement	while ( * p1 != ')' && * p1 != 0x00 )		8216623	34					
ANR	8217543	Condition	* p1 != ')' && * p1 != 0x00	772:23:26105:26129	8216623	0	True				
ANR	8217544	AndExpression	* p1 != ')' && * p1 != 0x00		8216623	0		&&			
ANR	8217545	EqualityExpression	* p1 != ')'		8216623	0		!=			
ANR	8217546	UnaryOperationExpression	* p1		8216623	0					
ANR	8217547	UnaryOperator	*		8216623	0					
ANR	8217548	Identifier	p1		8216623	1					
ANR	8217549	PrimaryExpression	')'		8216623	1					
ANR	8217550	EqualityExpression	* p1 != 0x00		8216623	1		!=			
ANR	8217551	UnaryOperationExpression	* p1		8216623	0					
ANR	8217552	UnaryOperator	*		8216623	0					
ANR	8217553	Identifier	p1		8216623	1					
ANR	8217554	PrimaryExpression	0x00		8216623	1					
ANR	8217555	ExpressionStatement	p1 ++	773:20:26152:26156	8216623	1	True				
ANR	8217556	PostIncDecOperationExpression	p1 ++		8216623	0					
ANR	8217557	Identifier	p1		8216623	0					
ANR	8217558	IncDec	++		8216623	1					
ANR	8217559	IfStatement	if ( * p1 == 0x00 )		8216623	35					
ANR	8217560	Condition	* p1 == 0x00	774:20:26178:26188	8216623	0	True				
ANR	8217561	EqualityExpression	* p1 == 0x00		8216623	0		==			
ANR	8217562	UnaryOperationExpression	* p1		8216623	0					
ANR	8217563	UnaryOperator	*		8216623	0					
ANR	8217564	Identifier	p1		8216623	1					
ANR	8217565	PrimaryExpression	0x00		8216623	1					
ANR	8217566	ReturnStatement	return - 1 ;	775:20:26211:26220	8216623	1	True				
ANR	8217567	UnaryOperationExpression	- 1		8216623	0					
ANR	8217568	UnaryOperator	-		8216623	0					
ANR	8217569	PrimaryExpression	1		8216623	1					
ANR	8217570	ExpressionStatement	* p1 ++ = 0x00	776:16:26238:26250	8216623	36	True				
ANR	8217571	AssignmentExpression	* p1 ++ = 0x00		8216623	0		=			
ANR	8217572	UnaryOperationExpression	* p1 ++		8216623	0					
ANR	8217573	UnaryOperator	*		8216623	0					
ANR	8217574	PostIncDecOperationExpression	p1 ++		8216623	1					
ANR	8217575	Identifier	p1		8216623	0					
ANR	8217576	IncDec	++		8216623	1					
ANR	8217577	PrimaryExpression	0x00		8216623	1					
ANR	8217578	ExpressionStatement	parray [ index ] . size = strlen ( ( char * ) ( parray [ index ] . data ) )	777:16:26268:26325	8216623	37	True				
ANR	8217579	AssignmentExpression	parray [ index ] . size = strlen ( ( char * ) ( parray [ index ] . data ) )		8216623	0		=			
ANR	8217580	MemberAccess	parray [ index ] . size		8216623	0					
ANR	8217581	ArrayIndexing	parray [ index ]		8216623	0					
ANR	8217582	Identifier	parray		8216623	0					
ANR	8217583	Identifier	index		8216623	1					
ANR	8217584	Identifier	size		8216623	1					
ANR	8217585	CallExpression	strlen ( ( char * ) ( parray [ index ] . data ) )		8216623	1					
ANR	8217586	Callee	strlen		8216623	0					
ANR	8217587	Identifier	strlen		8216623	0					
ANR	8217588	ArgumentList	( char * ) ( parray [ index ] . data )		8216623	1					
ANR	8217589	Argument	( char * ) ( parray [ index ] . data )		8216623	0					
ANR	8217590	CastExpression	( char * ) ( parray [ index ] . data )		8216623	0					
ANR	8217591	CastTarget	char *		8216623	0					
ANR	8217592	MemberAccess	parray [ index ] . data		8216623	1					
ANR	8217593	ArrayIndexing	parray [ index ]		8216623	0					
ANR	8217594	Identifier	parray		8216623	0					
ANR	8217595	Identifier	index		8216623	1					
ANR	8217596	Identifier	data		8216623	1					
ANR	8217597	ExpressionStatement	parray [ index ++ ] . persistent = false	778:16:26343:26377	8216623	38	True				
ANR	8217598	AssignmentExpression	parray [ index ++ ] . persistent = false		8216623	0		=			
ANR	8217599	MemberAccess	parray [ index ++ ] . persistent		8216623	0					
ANR	8217600	ArrayIndexing	parray [ index ++ ]		8216623	0					
ANR	8217601	Identifier	parray		8216623	0					
ANR	8217602	PostIncDecOperationExpression	index ++		8216623	1					
ANR	8217603	Identifier	index		8216623	0					
ANR	8217604	IncDec	++		8216623	1					
ANR	8217605	Identifier	persistent		8216623	1					
ANR	8217606	Identifier	false		8216623	1					
ANR	8217607	BreakStatement	break ;	779:16:26395:26400	8216623	39	True				
ANR	8217608	Label	case '[' :	780:12:26414:26422	8216623	40	True				
ANR	8217609	ExpressionStatement	code = gs_error_typecheck	782:16:26491:26516	8216623	41	True				
ANR	8217610	AssignmentExpression	code = gs_error_typecheck		8216623	0		=			
ANR	8217611	Identifier	code		8216623	0					
ANR	8217612	Identifier	gs_error_typecheck		8216623	1					
ANR	8217613	BreakStatement	break ;	783:16:26534:26539	8216623	42	True				
ANR	8217614	Label	case '0' :	784:12:26553:26561	8216623	43	True				
ANR	8217615	Label	case '1' :	785:12:26575:26583	8216623	44	True				
ANR	8217616	Label	case '2' :	786:12:26597:26605	8216623	45	True				
ANR	8217617	Label	case '3' :	787:12:26619:26627	8216623	46	True				
ANR	8217618	Label	case '4' :	788:12:26641:26649	8216623	47	True				
ANR	8217619	Label	case '5' :	789:12:26663:26671	8216623	48	True				
ANR	8217620	Label	case '6' :	790:12:26685:26693	8216623	49	True				
ANR	8217621	Label	case '7' :	791:12:26707:26715	8216623	50	True				
ANR	8217622	Label	case '8' :	792:12:26729:26737	8216623	51	True				
ANR	8217623	Label	case '9' :	793:12:26751:26759	8216623	52	True				
ANR	8217624	Label	case '.' :	794:12:26773:26781	8216623	53	True				
ANR	8217625	IfStatement	if ( array_type == gs_param_type_string_array )		8216623	54					
ANR	8217626	Condition	array_type == gs_param_type_string_array	795:20:26803:26842	8216623	0	True				
ANR	8217627	EqualityExpression	array_type == gs_param_type_string_array		8216623	0		==			
ANR	8217628	Identifier	array_type		8216623	0					
ANR	8217629	Identifier	gs_param_type_string_array		8216623	1					
ANR	8217630	CompoundStatement		202:62:7944:7944	8216623	1					
ANR	8217631	ExpressionStatement	code = gs_error_typecheck	796:20:26867:26892	8216623	0	True				
ANR	8217632	AssignmentExpression	code = gs_error_typecheck		8216623	0		=			
ANR	8217633	Identifier	code		8216623	0					
ANR	8217634	Identifier	gs_error_typecheck		8216623	1					
ANR	8217635	BreakStatement	break ;	797:20:26914:26919	8216623	1	True				
ANR	8217636	ElseStatement	else		8216623	0					
ANR	8217637	CompoundStatement		209:20:8171:8183	8216623	0					
ANR	8217638	IdentifierDeclStatement	int integer = 1 ;	799:20:26966:26981	8216623	0	True				
ANR	8217639	IdentifierDecl	integer = 1		8216623	0					
ANR	8217640	IdentifierDeclType	int		8216623	0					
ANR	8217641	Identifier	integer		8216623	1					
ANR	8217642	AssignmentExpression	integer = 1		8216623	2		=			
ANR	8217643	Identifier	integer		8216623	0					
ANR	8217644	PrimaryExpression	1		8216623	1					
ANR	8217645	IdentifierDeclStatement	char * c = p1 ;	800:20:27003:27015	8216623	1	True				
ANR	8217646	IdentifierDecl	* c = p1		8216623	0					
ANR	8217647	IdentifierDeclType	char *		8216623	0					
ANR	8217648	Identifier	c		8216623	1					
ANR	8217649	AssignmentExpression	* c = p1		8216623	2		=			
ANR	8217650	Identifier	p1		8216623	0					
ANR	8217651	Identifier	p1		8216623	1					
ANR	8217652	IdentifierDeclStatement	float * floats ;	801:20:27037:27050	8216623	2	True				
ANR	8217653	IdentifierDecl	* floats		8216623	0					
ANR	8217654	IdentifierDeclType	float *		8216623	0					
ANR	8217655	Identifier	floats		8216623	1					
ANR	8217656	IdentifierDeclStatement	"int * ints , i ;"	802:20:27072:27084	8216623	3	True				
ANR	8217657	IdentifierDecl	* ints		8216623	0					
ANR	8217658	IdentifierDeclType	int *		8216623	0					
ANR	8217659	Identifier	ints		8216623	1					
ANR	8217660	IdentifierDecl	i		8216623	1					
ANR	8217661	IdentifierDeclType	int		8216623	0					
ANR	8217662	Identifier	i		8216623	1					
ANR	8217663	ExpressionStatement	integer = 1	804:20:27107:27118	8216623	4	True				
ANR	8217664	AssignmentExpression	integer = 1		8216623	0		=			
ANR	8217665	Identifier	integer		8216623	0					
ANR	8217666	PrimaryExpression	1		8216623	1					
ANR	8217667	WhileStatement	while ( * p1 != 0x00 && ( ( * p1 >= '0' && * p1 <= '9' ) || * p1 == '.' ) )		8216623	5					
ANR	8217668	Condition	* p1 != 0x00 && ( ( * p1 >= '0' && * p1 <= '9' ) || * p1 == '.' )	805:27:27147:27203	8216623	0	True				
ANR	8217669	AndExpression	* p1 != 0x00 && ( ( * p1 >= '0' && * p1 <= '9' ) || * p1 == '.' )		8216623	0		&&			
ANR	8217670	EqualityExpression	* p1 != 0x00		8216623	0		!=			
ANR	8217671	UnaryOperationExpression	* p1		8216623	0					
ANR	8217672	UnaryOperator	*		8216623	0					
ANR	8217673	Identifier	p1		8216623	1					
ANR	8217674	PrimaryExpression	0x00		8216623	1					
ANR	8217675	OrExpression	( * p1 >= '0' && * p1 <= '9' ) || * p1 == '.'		8216623	1		||			
ANR	8217676	AndExpression	* p1 >= '0' && * p1 <= '9'		8216623	0		&&			
ANR	8217677	RelationalExpression	* p1 >= '0'		8216623	0		>=			
ANR	8217678	UnaryOperationExpression	* p1		8216623	0					
ANR	8217679	UnaryOperator	*		8216623	0					
ANR	8217680	Identifier	p1		8216623	1					
ANR	8217681	PrimaryExpression	'0'		8216623	1					
ANR	8217682	RelationalExpression	* p1 <= '9'		8216623	1		<=			
ANR	8217683	UnaryOperationExpression	* p1		8216623	0					
ANR	8217684	UnaryOperator	*		8216623	0					
ANR	8217685	Identifier	p1		8216623	1					
ANR	8217686	PrimaryExpression	'9'		8216623	1					
ANR	8217687	EqualityExpression	* p1 == '.'		8216623	1		==			
ANR	8217688	UnaryOperationExpression	* p1		8216623	0					
ANR	8217689	UnaryOperator	*		8216623	0					
ANR	8217690	Identifier	p1		8216623	1					
ANR	8217691	PrimaryExpression	'.'		8216623	1					
ANR	8217692	CompoundStatement		212:86:8305:8305	8216623	1					
ANR	8217693	IfStatement	if ( * p1 == '.' )		8216623	0					
ANR	8217694	Condition	* p1 == '.'	806:28:27236:27245	8216623	0	True				
ANR	8217695	EqualityExpression	* p1 == '.'		8216623	0		==			
ANR	8217696	UnaryOperationExpression	* p1		8216623	0					
ANR	8217697	UnaryOperator	*		8216623	0					
ANR	8217698	Identifier	p1		8216623	1					
ANR	8217699	PrimaryExpression	'.'		8216623	1					
ANR	8217700	ExpressionStatement	integer = 0	807:28:27276:27287	8216623	1	True				
ANR	8217701	AssignmentExpression	integer = 0		8216623	0		=			
ANR	8217702	Identifier	integer		8216623	0					
ANR	8217703	PrimaryExpression	0		8216623	1					
ANR	8217704	ExpressionStatement	p1 ++	808:24:27313:27317	8216623	1	True				
ANR	8217705	PostIncDecOperationExpression	p1 ++		8216623	0					
ANR	8217706	Identifier	p1		8216623	0					
ANR	8217707	IncDec	++		8216623	1					
ANR	8217708	IfStatement	if ( * p1 == 0x00 )		8216623	6					
ANR	8217709	Condition	* p1 == 0x00	810:24:27365:27375	8216623	0	True				
ANR	8217710	EqualityExpression	* p1 == 0x00		8216623	0		==			
ANR	8217711	UnaryOperationExpression	* p1		8216623	0					
ANR	8217712	UnaryOperator	*		8216623	0					
ANR	8217713	Identifier	p1		8216623	1					
ANR	8217714	PrimaryExpression	0x00		8216623	1					
ANR	8217715	ReturnStatement	return - 1 ;	811:24:27402:27411	8216623	1	True				
ANR	8217716	UnaryOperationExpression	- 1		8216623	0					
ANR	8217717	UnaryOperator	-		8216623	0					
ANR	8217718	PrimaryExpression	1		8216623	1					
ANR	8217719	ExpressionStatement	* p1 ++ = 0x00	812:20:27433:27445	8216623	7	True				
ANR	8217720	AssignmentExpression	* p1 ++ = 0x00		8216623	0		=			
ANR	8217721	UnaryOperationExpression	* p1 ++		8216623	0					
ANR	8217722	UnaryOperator	*		8216623	0					
ANR	8217723	PostIncDecOperationExpression	p1 ++		8216623	1					
ANR	8217724	Identifier	p1		8216623	0					
ANR	8217725	IncDec	++		8216623	1					
ANR	8217726	PrimaryExpression	0x00		8216623	1					
ANR	8217727	IfStatement	if ( array_type == gs_param_type_null )		8216623	8					
ANR	8217728	Condition	array_type == gs_param_type_null	814:24:27472:27503	8216623	0	True				
ANR	8217729	EqualityExpression	array_type == gs_param_type_null		8216623	0		==			
ANR	8217730	Identifier	array_type		8216623	0					
ANR	8217731	Identifier	gs_param_type_null		8216623	1					
ANR	8217732	CompoundStatement		221:58:8605:8605	8216623	1					
ANR	8217733	IfStatement	if ( integer )		8216623	0					
ANR	8217734	Condition	integer	815:28:27536:27542	8216623	0	True				
ANR	8217735	Identifier	integer		8216623	0					
ANR	8217736	CompoundStatement		222:37:8644:8644	8216623	1					
ANR	8217737	ExpressionStatement	"ints = ( int * ) gs_alloc_bytes ( mem , sizeof ( int ) * tokens , ""param string array in distillerparams"" )"	816:28:27575:27671	8216623	0	True				
ANR	8217738	AssignmentExpression	"ints = ( int * ) gs_alloc_bytes ( mem , sizeof ( int ) * tokens , ""param string array in distillerparams"" )"		8216623	0		=			
ANR	8217739	Identifier	ints		8216623	0					
ANR	8217740	CastExpression	"( int * ) gs_alloc_bytes ( mem , sizeof ( int ) * tokens , ""param string array in distillerparams"" )"		8216623	1					
ANR	8217741	CastTarget	int *		8216623	0					
ANR	8217742	CallExpression	"gs_alloc_bytes ( mem , sizeof ( int ) * tokens , ""param string array in distillerparams"" )"		8216623	1					
ANR	8217743	Callee	gs_alloc_bytes		8216623	0					
ANR	8217744	Identifier	gs_alloc_bytes		8216623	0					
ANR	8217745	ArgumentList	mem		8216623	1					
ANR	8217746	Argument	mem		8216623	0					
ANR	8217747	Identifier	mem		8216623	0					
ANR	8217748	Argument	sizeof ( int ) * tokens		8216623	1					
ANR	8217749	MultiplicativeExpression	sizeof ( int ) * tokens		8216623	0		*			
ANR	8217750	SizeofExpression	sizeof ( int )		8216623	0					
ANR	8217751	Sizeof	sizeof		8216623	0					
ANR	8217752	SizeofOperand	int		8216623	1					
ANR	8217753	Identifier	tokens		8216623	1					
ANR	8217754	Argument	"""param string array in distillerparams"""		8216623	2					
ANR	8217755	PrimaryExpression	"""param string array in distillerparams"""		8216623	0					
ANR	8217756	IfStatement	if ( ints == NULL )		8216623	1					
ANR	8217757	Condition	ints == NULL	817:32:27705:27716	8216623	0	True				
ANR	8217758	EqualityExpression	ints == NULL		8216623	0		==			
ANR	8217759	Identifier	ints		8216623	0					
ANR	8217760	Identifier	NULL		8216623	1					
ANR	8217761	CompoundStatement		224:45:8817:8817	8216623	1					
ANR	8217762	ExpressionStatement	code = gs_error_VMerror	818:32:27752:27775	8216623	0	True				
ANR	8217763	AssignmentExpression	code = gs_error_VMerror		8216623	0		=			
ANR	8217764	Identifier	code		8216623	0					
ANR	8217765	Identifier	gs_error_VMerror		8216623	1					
ANR	8217766	BreakStatement	break ;	819:32:27809:27814	8216623	1	True				
ANR	8217767	ExpressionStatement	array_type = gs_param_type_int_array	821:28:27874:27910	8216623	2	True				
ANR	8217768	AssignmentExpression	array_type = gs_param_type_int_array		8216623	0		=			
ANR	8217769	Identifier	array_type		8216623	0					
ANR	8217770	Identifier	gs_param_type_int_array		8216623	1					
ANR	8217771	ExpressionStatement	array_data = ( char * ) ints	822:28:27940:27965	8216623	3	True				
ANR	8217772	AssignmentExpression	array_data = ( char * ) ints		8216623	0		=			
ANR	8217773	Identifier	array_data		8216623	0					
ANR	8217774	CastExpression	( char * ) ints		8216623	1					
ANR	8217775	CastTarget	char *		8216623	0					
ANR	8217776	Identifier	ints		8216623	1					
ANR	8217777	ElseStatement	else		8216623	0					
ANR	8217778	CompoundStatement		230:31:9097:9097	8216623	0					
ANR	8217779	ExpressionStatement	"floats = ( float * ) gs_alloc_bytes ( mem , sizeof ( float ) * tokens , ""param string array in distillerparams"" )"	824:28:28028:28130	8216623	0	True				
ANR	8217780	AssignmentExpression	"floats = ( float * ) gs_alloc_bytes ( mem , sizeof ( float ) * tokens , ""param string array in distillerparams"" )"		8216623	0		=			
ANR	8217781	Identifier	floats		8216623	0					
ANR	8217782	CastExpression	"( float * ) gs_alloc_bytes ( mem , sizeof ( float ) * tokens , ""param string array in distillerparams"" )"		8216623	1					
ANR	8217783	CastTarget	float *		8216623	0					
ANR	8217784	CallExpression	"gs_alloc_bytes ( mem , sizeof ( float ) * tokens , ""param string array in distillerparams"" )"		8216623	1					
ANR	8217785	Callee	gs_alloc_bytes		8216623	0					
ANR	8217786	Identifier	gs_alloc_bytes		8216623	0					
ANR	8217787	ArgumentList	mem		8216623	1					
ANR	8217788	Argument	mem		8216623	0					
ANR	8217789	Identifier	mem		8216623	0					
ANR	8217790	Argument	sizeof ( float ) * tokens		8216623	1					
ANR	8217791	MultiplicativeExpression	sizeof ( float ) * tokens		8216623	0		*			
ANR	8217792	SizeofExpression	sizeof ( float )		8216623	0					
ANR	8217793	Sizeof	sizeof		8216623	0					
ANR	8217794	SizeofOperand	float		8216623	1					
ANR	8217795	Identifier	tokens		8216623	1					
ANR	8217796	Argument	"""param string array in distillerparams"""		8216623	2					
ANR	8217797	PrimaryExpression	"""param string array in distillerparams"""		8216623	0					
ANR	8217798	IfStatement	if ( floats == NULL )		8216623	1					
ANR	8217799	Condition	floats == NULL	825:32:28164:28177	8216623	0	True				
ANR	8217800	EqualityExpression	floats == NULL		8216623	0		==			
ANR	8217801	Identifier	floats		8216623	0					
ANR	8217802	Identifier	NULL		8216623	1					
ANR	8217803	CompoundStatement		232:47:9278:9278	8216623	1					
ANR	8217804	ExpressionStatement	code = gs_error_VMerror	826:32:28213:28236	8216623	0	True				
ANR	8217805	AssignmentExpression	code = gs_error_VMerror		8216623	0		=			
ANR	8217806	Identifier	code		8216623	0					
ANR	8217807	Identifier	gs_error_VMerror		8216623	1					
ANR	8217808	BreakStatement	break ;	827:32:28270:28275	8216623	1	True				
ANR	8217809	ExpressionStatement	array_type = gs_param_type_float_array	829:28:28335:28373	8216623	2	True				
ANR	8217810	AssignmentExpression	array_type = gs_param_type_float_array		8216623	0		=			
ANR	8217811	Identifier	array_type		8216623	0					
ANR	8217812	Identifier	gs_param_type_float_array		8216623	1					
ANR	8217813	ExpressionStatement	array_data = ( char * ) floats	830:28:28403:28430	8216623	3	True				
ANR	8217814	AssignmentExpression	array_data = ( char * ) floats		8216623	0		=			
ANR	8217815	Identifier	array_data		8216623	0					
ANR	8217816	CastExpression	( char * ) floats		8216623	1					
ANR	8217817	CastTarget	char *		8216623	0					
ANR	8217818	Identifier	floats		8216623	1					
ANR	8217819	IfStatement	if ( array_type == gs_param_type_int_array && ! integer )		8216623	9					
ANR	8217820	Condition	array_type == gs_param_type_int_array && ! integer	833:24:28504:28552	8216623	0	True				
ANR	8217821	AndExpression	array_type == gs_param_type_int_array && ! integer		8216623	0		&&			
ANR	8217822	EqualityExpression	array_type == gs_param_type_int_array		8216623	0		==			
ANR	8217823	Identifier	array_type		8216623	0					
ANR	8217824	Identifier	gs_param_type_int_array		8216623	1					
ANR	8217825	UnaryOperationExpression	! integer		8216623	1					
ANR	8217826	UnaryOperator	!		8216623	0					
ANR	8217827	Identifier	integer		8216623	1					
ANR	8217828	CompoundStatement		240:75:9654:9654	8216623	1					
ANR	8217829	ExpressionStatement	ints = ( int * ) array_data	834:24:28581:28605	8216623	0	True				
ANR	8217830	AssignmentExpression	ints = ( int * ) array_data		8216623	0		=			
ANR	8217831	Identifier	ints		8216623	0					
ANR	8217832	CastExpression	( int * ) array_data		8216623	1					
ANR	8217833	CastTarget	int *		8216623	0					
ANR	8217834	Identifier	array_data		8216623	1					
ANR	8217835	ExpressionStatement	"floats = ( float * ) gs_alloc_bytes ( mem , sizeof ( float ) * tokens , ""param string array in distillerparams"" )"	835:24:28631:28733	8216623	1	True				
ANR	8217836	AssignmentExpression	"floats = ( float * ) gs_alloc_bytes ( mem , sizeof ( float ) * tokens , ""param string array in distillerparams"" )"		8216623	0		=			
ANR	8217837	Identifier	floats		8216623	0					
ANR	8217838	CastExpression	"( float * ) gs_alloc_bytes ( mem , sizeof ( float ) * tokens , ""param string array in distillerparams"" )"		8216623	1					
ANR	8217839	CastTarget	float *		8216623	0					
ANR	8217840	CallExpression	"gs_alloc_bytes ( mem , sizeof ( float ) * tokens , ""param string array in distillerparams"" )"		8216623	1					
ANR	8217841	Callee	gs_alloc_bytes		8216623	0					
ANR	8217842	Identifier	gs_alloc_bytes		8216623	0					
ANR	8217843	ArgumentList	mem		8216623	1					
ANR	8217844	Argument	mem		8216623	0					
ANR	8217845	Identifier	mem		8216623	0					
ANR	8217846	Argument	sizeof ( float ) * tokens		8216623	1					
ANR	8217847	MultiplicativeExpression	sizeof ( float ) * tokens		8216623	0		*			
ANR	8217848	SizeofExpression	sizeof ( float )		8216623	0					
ANR	8217849	Sizeof	sizeof		8216623	0					
ANR	8217850	SizeofOperand	float		8216623	1					
ANR	8217851	Identifier	tokens		8216623	1					
ANR	8217852	Argument	"""param string array in distillerparams"""		8216623	2					
ANR	8217853	PrimaryExpression	"""param string array in distillerparams"""		8216623	0					
ANR	8217854	IfStatement	if ( floats == NULL )		8216623	2					
ANR	8217855	Condition	floats == NULL	836:28:28763:28776	8216623	0	True				
ANR	8217856	EqualityExpression	floats == NULL		8216623	0		==			
ANR	8217857	Identifier	floats		8216623	0					
ANR	8217858	Identifier	NULL		8216623	1					
ANR	8217859	CompoundStatement		243:43:9877:9877	8216623	1					
ANR	8217860	ExpressionStatement	code = gs_error_VMerror	837:28:28808:28831	8216623	0	True				
ANR	8217861	AssignmentExpression	code = gs_error_VMerror		8216623	0		=			
ANR	8217862	Identifier	code		8216623	0					
ANR	8217863	Identifier	gs_error_VMerror		8216623	1					
ANR	8217864	BreakStatement	break ;	838:28:28861:28866	8216623	1	True				
ANR	8217865	ExpressionStatement	array_type = gs_param_type_float_array	840:24:28918:28956	8216623	3	True				
ANR	8217866	AssignmentExpression	array_type = gs_param_type_float_array		8216623	0		=			
ANR	8217867	Identifier	array_type		8216623	0					
ANR	8217868	Identifier	gs_param_type_float_array		8216623	1					
ANR	8217869	ForStatement	for ( i = 0 ; i < index ; i ++ )		8216623	4					
ANR	8217870	ForInit	i = 0 ;	841:29:28987:28990	8216623	0	True				
ANR	8217871	AssignmentExpression	i = 0		8216623	0		=			
ANR	8217872	Identifier	i		8216623	0					
ANR	8217873	PrimaryExpression	0		8216623	1					
ANR	8217874	Condition	i < index	841:33:28991:28997	8216623	1	True				
ANR	8217875	RelationalExpression	i < index		8216623	0		<			
ANR	8217876	Identifier	i		8216623	0					
ANR	8217877	Identifier	index		8216623	1					
ANR	8217878	PostIncDecOperationExpression	i ++	841:41:28999:29001	8216623	2	True				
ANR	8217879	Identifier	i		8216623	0					
ANR	8217880	IncDec	++		8216623	1					
ANR	8217881	CompoundStatement		248:45:10102:10102	8216623	3					
ANR	8217882	ExpressionStatement	floats [ i ] = ( float ) ( ints [ i ] )	842:28:29033:29061	8216623	0	True				
ANR	8217883	AssignmentExpression	floats [ i ] = ( float ) ( ints [ i ] )		8216623	0		=			
ANR	8217884	ArrayIndexing	floats [ i ]		8216623	0					
ANR	8217885	Identifier	floats		8216623	0					
ANR	8217886	Identifier	i		8216623	1					
ANR	8217887	CastExpression	( float ) ( ints [ i ] )		8216623	1					
ANR	8217888	CastTarget	float		8216623	0					
ANR	8217889	ArrayIndexing	ints [ i ]		8216623	1					
ANR	8217890	Identifier	ints		8216623	0					
ANR	8217891	Identifier	i		8216623	1					
ANR	8217892	ExpressionStatement	"gs_free_object ( mem , ints , ""param string array in distillerparams"" )"	844:24:29113:29179	8216623	5	True				
ANR	8217893	CallExpression	"gs_free_object ( mem , ints , ""param string array in distillerparams"" )"		8216623	0					
ANR	8217894	Callee	gs_free_object		8216623	0					
ANR	8217895	Identifier	gs_free_object		8216623	0					
ANR	8217896	ArgumentList	mem		8216623	1					
ANR	8217897	Argument	mem		8216623	0					
ANR	8217898	Identifier	mem		8216623	0					
ANR	8217899	Argument	ints		8216623	1					
ANR	8217900	Identifier	ints		8216623	0					
ANR	8217901	Argument	"""param string array in distillerparams"""		8216623	2					
ANR	8217902	PrimaryExpression	"""param string array in distillerparams"""		8216623	0					
ANR	8217903	ExpressionStatement	array_data = ( char * ) floats	845:24:29205:29232	8216623	6	True				
ANR	8217904	AssignmentExpression	array_data = ( char * ) floats		8216623	0		=			
ANR	8217905	Identifier	array_data		8216623	0					
ANR	8217906	CastExpression	( char * ) floats		8216623	1					
ANR	8217907	CastTarget	char *		8216623	0					
ANR	8217908	Identifier	floats		8216623	1					
ANR	8217909	IfStatement	if ( array_type == gs_param_type_int_array )		8216623	10					
ANR	8217910	Condition	array_type == gs_param_type_int_array	847:24:29280:29316	8216623	0	True				
ANR	8217911	EqualityExpression	array_type == gs_param_type_int_array		8216623	0		==			
ANR	8217912	Identifier	array_type		8216623	0					
ANR	8217913	Identifier	gs_param_type_int_array		8216623	1					
ANR	8217914	CompoundStatement		254:63:10418:10418	8216623	1					
ANR	8217915	ExpressionStatement	ints = ( int * ) array_data	848:24:29345:29369	8216623	0	True				
ANR	8217916	AssignmentExpression	ints = ( int * ) array_data		8216623	0		=			
ANR	8217917	Identifier	ints		8216623	0					
ANR	8217918	CastExpression	( int * ) array_data		8216623	1					
ANR	8217919	CastTarget	int *		8216623	0					
ANR	8217920	Identifier	array_data		8216623	1					
ANR	8217921	ExpressionStatement	ints [ index ++ ] = ( int ) atoi ( c )	849:24:29395:29423	8216623	1	True				
ANR	8217922	AssignmentExpression	ints [ index ++ ] = ( int ) atoi ( c )		8216623	0		=			
ANR	8217923	ArrayIndexing	ints [ index ++ ]		8216623	0					
ANR	8217924	Identifier	ints		8216623	0					
ANR	8217925	PostIncDecOperationExpression	index ++		8216623	1					
ANR	8217926	Identifier	index		8216623	0					
ANR	8217927	IncDec	++		8216623	1					
ANR	8217928	CastExpression	( int ) atoi ( c )		8216623	1					
ANR	8217929	CastTarget	int		8216623	0					
ANR	8217930	CallExpression	atoi ( c )		8216623	1					
ANR	8217931	Callee	atoi		8216623	0					
ANR	8217932	Identifier	atoi		8216623	0					
ANR	8217933	ArgumentList	c		8216623	1					
ANR	8217934	Argument	c		8216623	0					
ANR	8217935	Identifier	c		8216623	0					
ANR	8217936	ElseStatement	else		8216623	0					
ANR	8217937	CompoundStatement		257:27:10551:10551	8216623	0					
ANR	8217938	ExpressionStatement	floats = ( float * ) array_data	851:24:29478:29506	8216623	0	True				
ANR	8217939	AssignmentExpression	floats = ( float * ) array_data		8216623	0		=			
ANR	8217940	Identifier	floats		8216623	0					
ANR	8217941	CastExpression	( float * ) array_data		8216623	1					
ANR	8217942	CastTarget	float *		8216623	0					
ANR	8217943	Identifier	array_data		8216623	1					
ANR	8217944	ExpressionStatement	floats [ index ++ ] = ( float ) atof ( c )	852:24:29532:29564	8216623	1	True				
ANR	8217945	AssignmentExpression	floats [ index ++ ] = ( float ) atof ( c )		8216623	0		=			
ANR	8217946	ArrayIndexing	floats [ index ++ ]		8216623	0					
ANR	8217947	Identifier	floats		8216623	0					
ANR	8217948	PostIncDecOperationExpression	index ++		8216623	1					
ANR	8217949	Identifier	index		8216623	0					
ANR	8217950	IncDec	++		8216623	1					
ANR	8217951	CastExpression	( float ) atof ( c )		8216623	1					
ANR	8217952	CastTarget	float		8216623	0					
ANR	8217953	CallExpression	atof ( c )		8216623	1					
ANR	8217954	Callee	atof		8216623	0					
ANR	8217955	Identifier	atof		8216623	0					
ANR	8217956	ArgumentList	c		8216623	1					
ANR	8217957	Argument	c		8216623	0					
ANR	8217958	Identifier	c		8216623	0					
ANR	8217959	BreakStatement	break ;	855:16:29622:29627	8216623	55	True				
ANR	8217960	Label	default :	856:12:29641:29648	8216623	56	True				
ANR	8217961	Identifier	default		8216623	0					
ANR	8217962	ExpressionStatement	code = gs_error_typecheck	857:16:29666:29691	8216623	57	True				
ANR	8217963	AssignmentExpression	code = gs_error_typecheck		8216623	0		=			
ANR	8217964	Identifier	code		8216623	0					
ANR	8217965	Identifier	gs_error_typecheck		8216623	1					
ANR	8217966	BreakStatement	break ;	858:16:29709:29714	8216623	58	True				
ANR	8217967	SwitchStatement	switch ( array_type )		8216623	14					
ANR	8217968	Condition	array_type	865:11:29889:29898	8216623	0	True				
ANR	8217969	Identifier	array_type		8216623	0					
ANR	8217970	CompoundStatement		272:23:11000:11000	8216623	1					
ANR	8217971	Label	case gs_param_type_string_array :	866:8:29911:29942	8216623	0	True				
ANR	8217972	Identifier	gs_param_type_string_array		8216623	0					
ANR	8217973	ExpressionStatement	string_array . data = ( const gs_param_string * ) array_data	867:12:29956:30011	8216623	1	True				
ANR	8217974	AssignmentExpression	string_array . data = ( const gs_param_string * ) array_data		8216623	0		=			
ANR	8217975	MemberAccess	string_array . data		8216623	0					
ANR	8217976	Identifier	string_array		8216623	0					
ANR	8217977	Identifier	data		8216623	1					
ANR	8217978	CastExpression	( const gs_param_string * ) array_data		8216623	1					
ANR	8217979	CastTarget	const gs_param_string *		8216623	0					
ANR	8217980	Identifier	array_data		8216623	1					
ANR	8217981	ExpressionStatement	string_array . persistent = 0	868:12:30025:30052	8216623	2	True				
ANR	8217982	AssignmentExpression	string_array . persistent = 0		8216623	0		=			
ANR	8217983	MemberAccess	string_array . persistent		8216623	0					
ANR	8217984	Identifier	string_array		8216623	0					
ANR	8217985	Identifier	persistent		8216623	1					
ANR	8217986	PrimaryExpression	0		8216623	1					
ANR	8217987	ExpressionStatement	string_array . size = tokens	869:12:30066:30092	8216623	3	True				
ANR	8217988	AssignmentExpression	string_array . size = tokens		8216623	0		=			
ANR	8217989	MemberAccess	string_array . size		8216623	0					
ANR	8217990	Identifier	string_array		8216623	0					
ANR	8217991	Identifier	size		8216623	1					
ANR	8217992	Identifier	tokens		8216623	1					
ANR	8217993	ExpressionStatement	"code = param_write_string_array ( ( gs_param_list * ) plist , key , & string_array )"	870:12:30106:30181	8216623	4	True				
ANR	8217994	AssignmentExpression	"code = param_write_string_array ( ( gs_param_list * ) plist , key , & string_array )"		8216623	0		=			
ANR	8217995	Identifier	code		8216623	0					
ANR	8217996	CallExpression	"param_write_string_array ( ( gs_param_list * ) plist , key , & string_array )"		8216623	1					
ANR	8217997	Callee	param_write_string_array		8216623	0					
ANR	8217998	Identifier	param_write_string_array		8216623	0					
ANR	8217999	ArgumentList	( gs_param_list * ) plist		8216623	1					
ANR	8218000	Argument	( gs_param_list * ) plist		8216623	0					
ANR	8218001	CastExpression	( gs_param_list * ) plist		8216623	0					
ANR	8218002	CastTarget	gs_param_list *		8216623	0					
ANR	8218003	Identifier	plist		8216623	1					
ANR	8218004	Argument	key		8216623	1					
ANR	8218005	Identifier	key		8216623	0					
ANR	8218006	Argument	& string_array		8216623	2					
ANR	8218007	UnaryOperationExpression	& string_array		8216623	0					
ANR	8218008	UnaryOperator	&		8216623	0					
ANR	8218009	Identifier	string_array		8216623	1					
ANR	8218010	BreakStatement	break ;	871:12:30195:30200	8216623	5	True				
ANR	8218011	Label	case gs_param_type_int_array :	872:8:30210:30238	8216623	6	True				
ANR	8218012	Identifier	gs_param_type_int_array		8216623	0					
ANR	8218013	ExpressionStatement	int_array . data = ( const int * ) array_data	873:12:30252:30292	8216623	7	True				
ANR	8218014	AssignmentExpression	int_array . data = ( const int * ) array_data		8216623	0		=			
ANR	8218015	MemberAccess	int_array . data		8216623	0					
ANR	8218016	Identifier	int_array		8216623	0					
ANR	8218017	Identifier	data		8216623	1					
ANR	8218018	CastExpression	( const int * ) array_data		8216623	1					
ANR	8218019	CastTarget	const int *		8216623	0					
ANR	8218020	Identifier	array_data		8216623	1					
ANR	8218021	ExpressionStatement	int_array . persistent = 0	874:12:30306:30330	8216623	8	True				
ANR	8218022	AssignmentExpression	int_array . persistent = 0		8216623	0		=			
ANR	8218023	MemberAccess	int_array . persistent		8216623	0					
ANR	8218024	Identifier	int_array		8216623	0					
ANR	8218025	Identifier	persistent		8216623	1					
ANR	8218026	PrimaryExpression	0		8216623	1					
ANR	8218027	ExpressionStatement	int_array . size = tokens	875:12:30344:30367	8216623	9	True				
ANR	8218028	AssignmentExpression	int_array . size = tokens		8216623	0		=			
ANR	8218029	MemberAccess	int_array . size		8216623	0					
ANR	8218030	Identifier	int_array		8216623	0					
ANR	8218031	Identifier	size		8216623	1					
ANR	8218032	Identifier	tokens		8216623	1					
ANR	8218033	ExpressionStatement	"code = param_write_int_array ( ( gs_param_list * ) plist , key , & int_array )"	876:12:30381:30450	8216623	10	True				
ANR	8218034	AssignmentExpression	"code = param_write_int_array ( ( gs_param_list * ) plist , key , & int_array )"		8216623	0		=			
ANR	8218035	Identifier	code		8216623	0					
ANR	8218036	CallExpression	"param_write_int_array ( ( gs_param_list * ) plist , key , & int_array )"		8216623	1					
ANR	8218037	Callee	param_write_int_array		8216623	0					
ANR	8218038	Identifier	param_write_int_array		8216623	0					
ANR	8218039	ArgumentList	( gs_param_list * ) plist		8216623	1					
ANR	8218040	Argument	( gs_param_list * ) plist		8216623	0					
ANR	8218041	CastExpression	( gs_param_list * ) plist		8216623	0					
ANR	8218042	CastTarget	gs_param_list *		8216623	0					
ANR	8218043	Identifier	plist		8216623	1					
ANR	8218044	Argument	key		8216623	1					
ANR	8218045	Identifier	key		8216623	0					
ANR	8218046	Argument	& int_array		8216623	2					
ANR	8218047	UnaryOperationExpression	& int_array		8216623	0					
ANR	8218048	UnaryOperator	&		8216623	0					
ANR	8218049	Identifier	int_array		8216623	1					
ANR	8218050	BreakStatement	break ;	877:12:30464:30469	8216623	11	True				
ANR	8218051	Label	case gs_param_type_float_array :	878:8:30479:30509	8216623	12	True				
ANR	8218052	Identifier	gs_param_type_float_array		8216623	0					
ANR	8218053	ExpressionStatement	float_array . data = ( const float * ) array_data	879:12:30523:30567	8216623	13	True				
ANR	8218054	AssignmentExpression	float_array . data = ( const float * ) array_data		8216623	0		=			
ANR	8218055	MemberAccess	float_array . data		8216623	0					
ANR	8218056	Identifier	float_array		8216623	0					
ANR	8218057	Identifier	data		8216623	1					
ANR	8218058	CastExpression	( const float * ) array_data		8216623	1					
ANR	8218059	CastTarget	const float *		8216623	0					
ANR	8218060	Identifier	array_data		8216623	1					
ANR	8218061	ExpressionStatement	float_array . persistent = 0	880:12:30581:30607	8216623	14	True				
ANR	8218062	AssignmentExpression	float_array . persistent = 0		8216623	0		=			
ANR	8218063	MemberAccess	float_array . persistent		8216623	0					
ANR	8218064	Identifier	float_array		8216623	0					
ANR	8218065	Identifier	persistent		8216623	1					
ANR	8218066	PrimaryExpression	0		8216623	1					
ANR	8218067	ExpressionStatement	float_array . size = tokens	881:12:30621:30646	8216623	15	True				
ANR	8218068	AssignmentExpression	float_array . size = tokens		8216623	0		=			
ANR	8218069	MemberAccess	float_array . size		8216623	0					
ANR	8218070	Identifier	float_array		8216623	0					
ANR	8218071	Identifier	size		8216623	1					
ANR	8218072	Identifier	tokens		8216623	1					
ANR	8218073	ExpressionStatement	"code = param_write_float_array ( ( gs_param_list * ) plist , key , & float_array )"	882:12:30660:30733	8216623	16	True				
ANR	8218074	AssignmentExpression	"code = param_write_float_array ( ( gs_param_list * ) plist , key , & float_array )"		8216623	0		=			
ANR	8218075	Identifier	code		8216623	0					
ANR	8218076	CallExpression	"param_write_float_array ( ( gs_param_list * ) plist , key , & float_array )"		8216623	1					
ANR	8218077	Callee	param_write_float_array		8216623	0					
ANR	8218078	Identifier	param_write_float_array		8216623	0					
ANR	8218079	ArgumentList	( gs_param_list * ) plist		8216623	1					
ANR	8218080	Argument	( gs_param_list * ) plist		8216623	0					
ANR	8218081	CastExpression	( gs_param_list * ) plist		8216623	0					
ANR	8218082	CastTarget	gs_param_list *		8216623	0					
ANR	8218083	Identifier	plist		8216623	1					
ANR	8218084	Argument	key		8216623	1					
ANR	8218085	Identifier	key		8216623	0					
ANR	8218086	Argument	& float_array		8216623	2					
ANR	8218087	UnaryOperationExpression	& float_array		8216623	0					
ANR	8218088	UnaryOperator	&		8216623	0					
ANR	8218089	Identifier	float_array		8216623	1					
ANR	8218090	BreakStatement	break ;	883:12:30747:30752	8216623	17	True				
ANR	8218091	Label	default :	885:8:30763:30770	8216623	18	True				
ANR	8218092	Identifier	default		8216623	0					
ANR	8218093	BreakStatement	break ;	886:12:30784:30789	8216623	19	True				
ANR	8218094	ExpressionStatement	"gs_free_object ( mem , array_data , ""param string array in distillerparams"" )"	890:4:30886:30958	8216623	15	True				
ANR	8218095	CallExpression	"gs_free_object ( mem , array_data , ""param string array in distillerparams"" )"		8216623	0					
ANR	8218096	Callee	gs_free_object		8216623	0					
ANR	8218097	Identifier	gs_free_object		8216623	0					
ANR	8218098	ArgumentList	mem		8216623	1					
ANR	8218099	Argument	mem		8216623	0					
ANR	8218100	Identifier	mem		8216623	0					
ANR	8218101	Argument	array_data		8216623	1					
ANR	8218102	Identifier	array_data		8216623	0					
ANR	8218103	Argument	"""param string array in distillerparams"""		8216623	2					
ANR	8218104	PrimaryExpression	"""param string array in distillerparams"""		8216623	0					
ANR	8218105	ExpressionStatement	* p = p1 + 1	893:4:31058:31069	8216623	16	True				
ANR	8218106	AssignmentExpression	* p = p1 + 1		8216623	0		=			
ANR	8218107	UnaryOperationExpression	* p		8216623	0					
ANR	8218108	UnaryOperator	*		8216623	0					
ANR	8218109	Identifier	p		8216623	1					
ANR	8218110	AdditiveExpression	p1 + 1		8216623	1		+			
ANR	8218111	Identifier	p1		8216623	0					
ANR	8218112	PrimaryExpression	1		8216623	1					
ANR	8218113	ReturnStatement	return code ;	895:4:31076:31087	8216623	17	True				
ANR	8218114	Identifier	code		8216623	0					
ANR	8218115	ReturnType	static int		8216623	1					
ANR	8218116	Identifier	pjl_dist_process_array		8216623	2					
ANR	8218117	ParameterList	"gs_memory_t * mem , gs_c_param_list * plist , gs_param_name key , char * * p"		8216623	3					
ANR	8218118	Parameter	gs_memory_t * mem	593:34:18829:18844	8216623	0	True				
ANR	8218119	ParameterType	gs_memory_t *		8216623	0					
ANR	8218120	Identifier	mem		8216623	1					
ANR	8218121	Parameter	gs_c_param_list * plist	593:52:18847:18868	8216623	1	True				
ANR	8218122	ParameterType	gs_c_param_list *		8216623	0					
ANR	8218123	Identifier	plist		8216623	1					
ANR	8218124	Parameter	gs_param_name key	593:76:18871:18887	8216623	2	True				
ANR	8218125	ParameterType	gs_param_name		8216623	0					
ANR	8218126	Identifier	key		8216623	1					
ANR	8218127	Parameter	char * * p	593:95:18890:18897	8216623	3	True				
ANR	8218128	ParameterType	char * *		8216623	0					
ANR	8218129	Identifier	p		8216623	1					
ANR	8218130	CFGEntryNode	ENTRY		8216623		True				
ANR	8218131	CFGExitNode	EXIT		8216623		True				
ANR	8218132	Symbol	& float_array		8216623						
ANR	8218133	Symbol	gs_param_type_null		8216623						
ANR	8218134	Symbol	data		8216623						
ANR	8218135	Symbol	* ints		8216623						
ANR	8218136	Symbol	gs_param_type_float_array		8216623						
ANR	8218137	Symbol	* index		8216623						
ANR	8218138	Symbol	* p1 ++		8216623						
ANR	8218139	Symbol	integer		8216623						
ANR	8218140	Symbol	dest		8216623						
ANR	8218141	Symbol	nested		8216623						
ANR	8218142	Symbol	* src		8216623						
ANR	8218143	Symbol	strncmp		8216623						
ANR	8218144	Symbol	strlen		8216623						
ANR	8218145	Symbol	* dest ++		8216623						
ANR	8218146	Symbol	int_array . size		8216623						
ANR	8218147	Symbol	float_array . size		8216623						
ANR	8218148	Symbol	* floats		8216623						
ANR	8218149	Symbol	float_array . persistent		8216623						
ANR	8218150	Symbol	float_array		8216623						
ANR	8218151	Symbol	NULL		8216623						
ANR	8218152	Symbol	floats		8216623						
ANR	8218153	Symbol	index		8216623						
ANR	8218154	Symbol	parray [ index ++ ] . persistent		8216623						
ANR	8218155	Symbol	string_array . persistent		8216623						
ANR	8218156	Symbol	param_write_float_array		8216623						
ANR	8218157	Symbol	float_array . data		8216623						
ANR	8218158	Symbol	parray [ index ] . data		8216623						
ANR	8218159	Symbol	p1		8216623						
ANR	8218160	Symbol	string_array . data		8216623						
ANR	8218161	Symbol	parray		8216623						
ANR	8218162	Symbol	code		8216623						
ANR	8218163	Symbol	* dest		8216623						
ANR	8218164	Symbol	int_array		8216623						
ANR	8218165	Symbol	count_tokens		8216623						
ANR	8218166	Symbol	param_write_string_array		8216623						
ANR	8218167	Symbol	plist		8216623						
ANR	8218168	Symbol	gs_error_typecheck		8216623						
ANR	8218169	Symbol	mem		8216623						
ANR	8218170	Symbol	ints		8216623						
ANR	8218171	Symbol	param_write_int_array		8216623						
ANR	8218172	Symbol	tokens		8216623						
ANR	8218173	Symbol	array_type		8216623						
ANR	8218174	Symbol	gs_param_type_int_array		8216623						
ANR	8218175	Symbol	key		8216623						
ANR	8218176	Symbol	parray [ index ] . size		8216623						
ANR	8218177	Symbol	atoi		8216623						
ANR	8218178	Symbol	& int_array		8216623						
ANR	8218179	Symbol	gs_alloc_bytes		8216623						
ANR	8218180	Symbol	array_data		8216623						
ANR	8218181	Symbol	c		8216623						
ANR	8218182	Symbol	* p1		8216623						
ANR	8218183	Symbol	src		8216623						
ANR	8218184	Symbol	atof		8216623						
ANR	8218185	Symbol	start		8216623						
ANR	8218186	Symbol	false		8216623						
ANR	8218187	Symbol	int_array . persistent		8216623						
ANR	8218188	Symbol	i		8216623						
ANR	8218189	Symbol	& string_array		8216623						
ANR	8218190	Symbol	string_array		8216623						
ANR	8218191	Symbol	p		8216623						
ANR	8218192	Symbol	gs_error_VMerror		8216623						
ANR	8218193	Symbol	* i		8216623						
ANR	8218194	Symbol	* ( p1 + 1 )		8216623						
ANR	8218195	Symbol	gs_param_type_string_array		8216623						
ANR	8218196	Symbol	int_array . data		8216623						
ANR	8218197	Symbol	* p		8216623						
ANR	8218198	Symbol	* parray		8216623						
ANR	8218199	Symbol	string_array . size		8216623						
ANR	8218200	Function	pjl_dist_process_number	898:0:31092:31716							
ANR	8218201	FunctionDef	"pjl_dist_process_number (gs_memory_t * mem , gs_c_param_list * plist , gs_param_name key , char * * p)"		8218200	0					
ANR	8218202	CompoundStatement		899:0:31198:31716	8218200	0					
ANR	8218203	IdentifierDeclStatement	char * start = * p ;	900:4:31204:31220	8218200	0	True				
ANR	8218204	IdentifierDecl	* start = * p		8218200	0					
ANR	8218205	IdentifierDeclType	char *		8218200	0					
ANR	8218206	Identifier	start		8218200	1					
ANR	8218207	AssignmentExpression	* start = * p		8218200	2		=			
ANR	8218208	Identifier	start		8218200	0					
ANR	8218209	UnaryOperationExpression	* p		8218200	1					
ANR	8218210	UnaryOperator	*		8218200	0					
ANR	8218211	Identifier	p		8218200	1					
ANR	8218212	IdentifierDeclStatement	bool integer = true ;	901:4:31226:31245	8218200	1	True				
ANR	8218213	IdentifierDecl	integer = true		8218200	0					
ANR	8218214	IdentifierDeclType	bool		8218200	0					
ANR	8218215	Identifier	integer		8218200	1					
ANR	8218216	AssignmentExpression	integer = true		8218200	2		=			
ANR	8218217	Identifier	true		8218200	0					
ANR	8218218	Identifier	true		8218200	1					
ANR	8218219	IdentifierDeclStatement	int code = 0 ;	902:4:31251:31263	8218200	2	True				
ANR	8218220	IdentifierDecl	code = 0		8218200	0					
ANR	8218221	IdentifierDeclType	int		8218200	0					
ANR	8218222	Identifier	code		8218200	1					
ANR	8218223	AssignmentExpression	code = 0		8218200	2		=			
ANR	8218224	Identifier	code		8218200	0					
ANR	8218225	PrimaryExpression	0		8218200	1					
ANR	8218226	WhileStatement	while ( * * p != ' ' && * * p != 0x00 )		8218200	3					
ANR	8218227	Condition	* * p != ' ' && * * p != 0x00	904:11:31277:31301	8218200	0	True				
ANR	8218228	AndExpression	* * p != ' ' && * * p != 0x00		8218200	0		&&			
ANR	8218229	EqualityExpression	* * p != ' '		8218200	0		!=			
ANR	8218230	UnaryOperationExpression	* * p		8218200	0					
ANR	8218231	UnaryOperator	*		8218200	0					
ANR	8218232	UnaryOperationExpression	* p		8218200	1					
ANR	8218233	UnaryOperator	*		8218200	0					
ANR	8218234	Identifier	p		8218200	1					
ANR	8218235	PrimaryExpression	' '		8218200	1					
ANR	8218236	EqualityExpression	* * p != 0x00		8218200	1		!=			
ANR	8218237	UnaryOperationExpression	* * p		8218200	0					
ANR	8218238	UnaryOperator	*		8218200	0					
ANR	8218239	UnaryOperationExpression	* p		8218200	1					
ANR	8218240	UnaryOperator	*		8218200	0					
ANR	8218241	Identifier	p		8218200	1					
ANR	8218242	PrimaryExpression	0x00		8218200	1					
ANR	8218243	CompoundStatement		6:38:105:105	8218200	1					
ANR	8218244	IfStatement	if ( * * p == '.' )		8218200	0					
ANR	8218245	Condition	* * p == '.'	905:12:31318:31327	8218200	0	True				
ANR	8218246	EqualityExpression	* * p == '.'		8218200	0		==			
ANR	8218247	UnaryOperationExpression	* * p		8218200	0					
ANR	8218248	UnaryOperator	*		8218200	0					
ANR	8218249	UnaryOperationExpression	* p		8218200	1					
ANR	8218250	UnaryOperator	*		8218200	0					
ANR	8218251	Identifier	p		8218200	1					
ANR	8218252	PrimaryExpression	'.'		8218200	1					
ANR	8218253	ExpressionStatement	integer = false	906:12:31342:31357	8218200	1	True				
ANR	8218254	AssignmentExpression	integer = false		8218200	0		=			
ANR	8218255	Identifier	integer		8218200	0					
ANR	8218256	Identifier	false		8218200	1					
ANR	8218257	ExpressionStatement	( * p ) ++	908:8:31368:31374	8218200	1	True				
ANR	8218258	PostIncDecOperationExpression	( * p ) ++		8218200	0					
ANR	8218259	UnaryOperationExpression	* p		8218200	0					
ANR	8218260	UnaryOperator	*		8218200	0					
ANR	8218261	Identifier	p		8218200	1					
ANR	8218262	IncDec	++		8218200	1					
ANR	8218263	IfStatement	if ( * * p != 0x00 )		8218200	4					
ANR	8218264	Condition	* * p != 0x00	911:8:31391:31401	8218200	0	True				
ANR	8218265	EqualityExpression	* * p != 0x00		8218200	0		!=			
ANR	8218266	UnaryOperationExpression	* * p		8218200	0					
ANR	8218267	UnaryOperator	*		8218200	0					
ANR	8218268	UnaryOperationExpression	* p		8218200	1					
ANR	8218269	UnaryOperator	*		8218200	0					
ANR	8218270	Identifier	p		8218200	1					
ANR	8218271	PrimaryExpression	0x00		8218200	1					
ANR	8218272	CompoundStatement		13:21:205:205	8218200	1					
ANR	8218273	ExpressionStatement	* * p = 0x00	912:8:31414:31424	8218200	0	True				
ANR	8218274	AssignmentExpression	* * p = 0x00		8218200	0		=			
ANR	8218275	UnaryOperationExpression	* * p		8218200	0					
ANR	8218276	UnaryOperator	*		8218200	0					
ANR	8218277	UnaryOperationExpression	* p		8218200	1					
ANR	8218278	UnaryOperator	*		8218200	0					
ANR	8218279	Identifier	p		8218200	1					
ANR	8218280	PrimaryExpression	0x00		8218200	1					
ANR	8218281	ExpressionStatement	( * p ) ++	913:8:31434:31440	8218200	1	True				
ANR	8218282	PostIncDecOperationExpression	( * p ) ++		8218200	0					
ANR	8218283	UnaryOperationExpression	* p		8218200	0					
ANR	8218284	UnaryOperator	*		8218200	0					
ANR	8218285	Identifier	p		8218200	1					
ANR	8218286	IncDec	++		8218200	1					
ANR	8218287	IfStatement	if ( ! integer )		8218200	5					
ANR	8218288	Condition	! integer	916:8:31457:31464	8218200	0	True				
ANR	8218289	UnaryOperationExpression	! integer		8218200	0					
ANR	8218290	UnaryOperator	!		8218200	0					
ANR	8218291	Identifier	integer		8218200	1					
ANR	8218292	CompoundStatement		19:8:278:306	8218200	1					
ANR	8218293	IdentifierDeclStatement	float f = ( float ) atof ( start ) ;	917:8:31477:31505	8218200	0	True				
ANR	8218294	IdentifierDecl	f = ( float ) atof ( start )		8218200	0					
ANR	8218295	IdentifierDeclType	float		8218200	0					
ANR	8218296	Identifier	f		8218200	1					
ANR	8218297	AssignmentExpression	f = ( float ) atof ( start )		8218200	2		=			
ANR	8218298	Identifier	f		8218200	0					
ANR	8218299	CastExpression	( float ) atof ( start )		8218200	1					
ANR	8218300	CastTarget	float		8218200	0					
ANR	8218301	CallExpression	atof ( start )		8218200	1					
ANR	8218302	Callee	atof		8218200	0					
ANR	8218303	Identifier	atof		8218200	0					
ANR	8218304	ArgumentList	start		8218200	1					
ANR	8218305	Argument	start		8218200	0					
ANR	8218306	Identifier	start		8218200	0					
ANR	8218307	ExpressionStatement	"code = param_write_float ( ( gs_param_list * ) plist , key , ( float * ) & f )"	918:8:31515:31581	8218200	1	True				
ANR	8218308	AssignmentExpression	"code = param_write_float ( ( gs_param_list * ) plist , key , ( float * ) & f )"		8218200	0		=			
ANR	8218309	Identifier	code		8218200	0					
ANR	8218310	CallExpression	"param_write_float ( ( gs_param_list * ) plist , key , ( float * ) & f )"		8218200	1					
ANR	8218311	Callee	param_write_float		8218200	0					
ANR	8218312	Identifier	param_write_float		8218200	0					
ANR	8218313	ArgumentList	( gs_param_list * ) plist		8218200	1					
ANR	8218314	Argument	( gs_param_list * ) plist		8218200	0					
ANR	8218315	CastExpression	( gs_param_list * ) plist		8218200	0					
ANR	8218316	CastTarget	gs_param_list *		8218200	0					
ANR	8218317	Identifier	plist		8218200	1					
ANR	8218318	Argument	key		8218200	1					
ANR	8218319	Identifier	key		8218200	0					
ANR	8218320	Argument	( float * ) & f		8218200	2					
ANR	8218321	CastExpression	( float * ) & f		8218200	0					
ANR	8218322	CastTarget	float *		8218200	0					
ANR	8218323	UnaryOperationExpression	& f		8218200	1					
ANR	8218324	UnaryOperator	&		8218200	0					
ANR	8218325	Identifier	f		8218200	1					
ANR	8218326	ElseStatement	else		8218200	0					
ANR	8218327	CompoundStatement		22:8:405:425	8218200	0					
ANR	8218328	IdentifierDeclStatement	long i = atol ( start ) ;	920:8:31604:31624	8218200	0	True				
ANR	8218329	IdentifierDecl	i = atol ( start )		8218200	0					
ANR	8218330	IdentifierDeclType	long		8218200	0					
ANR	8218331	Identifier	i		8218200	1					
ANR	8218332	AssignmentExpression	i = atol ( start )		8218200	2		=			
ANR	8218333	Identifier	i		8218200	0					
ANR	8218334	CallExpression	atol ( start )		8218200	1					
ANR	8218335	Callee	atol		8218200	0					
ANR	8218336	Identifier	atol		8218200	0					
ANR	8218337	ArgumentList	start		8218200	1					
ANR	8218338	Argument	start		8218200	0					
ANR	8218339	Identifier	start		8218200	0					
ANR	8218340	ExpressionStatement	"code = param_write_long ( ( gs_param_list * ) plist , key , & i )"	921:8:31634:31690	8218200	1	True				
ANR	8218341	AssignmentExpression	"code = param_write_long ( ( gs_param_list * ) plist , key , & i )"		8218200	0		=			
ANR	8218342	Identifier	code		8218200	0					
ANR	8218343	CallExpression	"param_write_long ( ( gs_param_list * ) plist , key , & i )"		8218200	1					
ANR	8218344	Callee	param_write_long		8218200	0					
ANR	8218345	Identifier	param_write_long		8218200	0					
ANR	8218346	ArgumentList	( gs_param_list * ) plist		8218200	1					
ANR	8218347	Argument	( gs_param_list * ) plist		8218200	0					
ANR	8218348	CastExpression	( gs_param_list * ) plist		8218200	0					
ANR	8218349	CastTarget	gs_param_list *		8218200	0					
ANR	8218350	Identifier	plist		8218200	1					
ANR	8218351	Argument	key		8218200	1					
ANR	8218352	Identifier	key		8218200	0					
ANR	8218353	Argument	& i		8218200	2					
ANR	8218354	UnaryOperationExpression	& i		8218200	0					
ANR	8218355	UnaryOperator	&		8218200	0					
ANR	8218356	Identifier	i		8218200	1					
ANR	8218357	ReturnStatement	return code ;	924:4:31703:31714	8218200	6	True				
ANR	8218358	Identifier	code		8218200	0					
ANR	8218359	ReturnType	static int		8218200	1					
ANR	8218360	Identifier	pjl_dist_process_number		8218200	2					
ANR	8218361	ParameterList	"gs_memory_t * mem , gs_c_param_list * plist , gs_param_name key , char * * p"		8218200	3					
ANR	8218362	Parameter	gs_memory_t * mem	898:35:31127:31142	8218200	0	True				
ANR	8218363	ParameterType	gs_memory_t *		8218200	0					
ANR	8218364	Identifier	mem		8218200	1					
ANR	8218365	Parameter	gs_c_param_list * plist	898:53:31145:31166	8218200	1	True				
ANR	8218366	ParameterType	gs_c_param_list *		8218200	0					
ANR	8218367	Identifier	plist		8218200	1					
ANR	8218368	Parameter	gs_param_name key	898:77:31169:31185	8218200	2	True				
ANR	8218369	ParameterType	gs_param_name		8218200	0					
ANR	8218370	Identifier	key		8218200	1					
ANR	8218371	Parameter	char * * p	898:96:31188:31195	8218200	3	True				
ANR	8218372	ParameterType	char * *		8218200	0					
ANR	8218373	Identifier	p		8218200	1					
ANR	8218374	CFGEntryNode	ENTRY		8218200		True				
ANR	8218375	CFGExitNode	EXIT		8218200		True				
ANR	8218376	Symbol	param_write_float		8218200						
ANR	8218377	Symbol	code		8218200						
ANR	8218378	Symbol	f		8218200						
ANR	8218379	Symbol	atof		8218200						
ANR	8218380	Symbol	start		8218200						
ANR	8218381	Symbol	false		8218200						
ANR	8218382	Symbol	i		8218200						
ANR	8218383	Symbol	integer		8218200						
ANR	8218384	Symbol	& f		8218200						
ANR	8218385	Symbol	& i		8218200						
ANR	8218386	Symbol	p		8218200						
ANR	8218387	Symbol	plist		8218200						
ANR	8218388	Symbol	mem		8218200						
ANR	8218389	Symbol	true		8218200						
ANR	8218390	Symbol	* p		8218200						
ANR	8218391	Symbol	* * p		8218200						
ANR	8218392	Symbol	atol		8218200						
ANR	8218393	Symbol	key		8218200						
ANR	8218394	Symbol	param_write_long		8218200						
ANR	8218395	Function	pjl_dist_add_tokens_to_list	930:0:31812:34316							
ANR	8218396	FunctionDef	"pjl_dist_add_tokens_to_list (gs_param_list * plist , char * * p)"		8218395	0					
ANR	8218397	CompoundStatement		931:0:31883:34316	8218395	0					
ANR	8218398	IdentifierDeclStatement	char * p1 = * p ;	932:4:31889:31902	8218395	0	True				
ANR	8218399	IdentifierDecl	* p1 = * p		8218395	0					
ANR	8218400	IdentifierDeclType	char *		8218395	0					
ANR	8218401	Identifier	p1		8218395	1					
ANR	8218402	AssignmentExpression	* p1 = * p		8218395	2		=			
ANR	8218403	Identifier	p1		8218395	0					
ANR	8218404	UnaryOperationExpression	* p		8218395	1					
ANR	8218405	UnaryOperator	*		8218395	0					
ANR	8218406	Identifier	p		8218395	1					
ANR	8218407	IdentifierDeclStatement	int code = 0 ;	933:4:31908:31920	8218395	1	True				
ANR	8218408	IdentifierDecl	code = 0		8218395	0					
ANR	8218409	IdentifierDeclType	int		8218395	0					
ANR	8218410	Identifier	code		8218395	1					
ANR	8218411	AssignmentExpression	code = 0		8218395	2		=			
ANR	8218412	Identifier	code		8218395	0					
ANR	8218413	PrimaryExpression	0		8218395	1					
ANR	8218414	IdentifierDeclStatement	gs_param_name key = NULL ;	934:4:31926:31950	8218395	2	True				
ANR	8218415	IdentifierDecl	key = NULL		8218395	0					
ANR	8218416	IdentifierDeclType	gs_param_name		8218395	0					
ANR	8218417	Identifier	key		8218395	1					
ANR	8218418	AssignmentExpression	key = NULL		8218395	2		=			
ANR	8218419	Identifier	NULL		8218395	0					
ANR	8218420	Identifier	NULL		8218395	1					
ANR	8218421	WhileStatement	while ( * p1 != 0x00 )		8218395	3					
ANR	8218422	Condition	* p1 != 0x00	936:11:31964:31974	8218395	0	True				
ANR	8218423	EqualityExpression	* p1 != 0x00		8218395	0		!=			
ANR	8218424	UnaryOperationExpression	* p1		8218395	0					
ANR	8218425	UnaryOperator	*		8218395	0					
ANR	8218426	Identifier	p1		8218395	1					
ANR	8218427	PrimaryExpression	0x00		8218395	1					
ANR	8218428	CompoundStatement		6:23:92:92	8218395	1					
ANR	8218429	SwitchStatement	switch ( * p1 )		8218395	0					
ANR	8218430	Condition	* p1	937:16:31994:31996	8218395	0	True				
ANR	8218431	UnaryOperationExpression	* p1		8218395	0					
ANR	8218432	UnaryOperator	*		8218395	0					
ANR	8218433	Identifier	p1		8218395	1					
ANR	8218434	CompoundStatement		7:21:115:115	8218395	1					
ANR	8218435	Label	case ' ' :	938:12:32013:32021	8218395	0	True				
ANR	8218436	ExpressionStatement	p1 ++	939:16:32039:32043	8218395	1	True				
ANR	8218437	PostIncDecOperationExpression	p1 ++		8218395	0					
ANR	8218438	Identifier	p1		8218395	0					
ANR	8218439	IncDec	++		8218395	1					
ANR	8218440	BreakStatement	break ;	940:16:32061:32066	8218395	2	True				
ANR	8218441	Label	case 'f' :	941:12:32080:32088	8218395	3	True				
ANR	8218442	IfStatement	"if ( strncmp ( p1 , ""false"" , 5 ) == 0 )"		8218395	4					
ANR	8218443	Condition	"strncmp ( p1 , ""false"" , 5 ) == 0"	942:20:32110:32137	8218395	0	True				
ANR	8218444	EqualityExpression	"strncmp ( p1 , ""false"" , 5 ) == 0"		8218395	0		==			
ANR	8218445	CallExpression	"strncmp ( p1 , ""false"" , 5 )"		8218395	0					
ANR	8218446	Callee	strncmp		8218395	0					
ANR	8218447	Identifier	strncmp		8218395	0					
ANR	8218448	ArgumentList	p1		8218395	1					
ANR	8218449	Argument	p1		8218395	0					
ANR	8218450	Identifier	p1		8218395	0					
ANR	8218451	Argument	"""false"""		8218395	1					
ANR	8218452	PrimaryExpression	"""false"""		8218395	0					
ANR	8218453	Argument	5		8218395	2					
ANR	8218454	PrimaryExpression	5		8218395	0					
ANR	8218455	PrimaryExpression	0		8218395	1					
ANR	8218456	CompoundStatement		13:20:278:292	8218395	1					
ANR	8218457	IdentifierDeclStatement	bool t = false ;	943:20:32162:32176	8218395	0	True				
ANR	8218458	IdentifierDecl	t = false		8218395	0					
ANR	8218459	IdentifierDeclType	bool		8218395	0					
ANR	8218460	Identifier	t		8218395	1					
ANR	8218461	AssignmentExpression	t = false		8218395	2		=			
ANR	8218462	Identifier	false		8218395	0					
ANR	8218463	Identifier	false		8218395	1					
ANR	8218464	ExpressionStatement	"code = param_write_bool ( ( gs_param_list * ) plist , key , & t )"	944:20:32198:32254	8218395	1	True				
ANR	8218465	AssignmentExpression	"code = param_write_bool ( ( gs_param_list * ) plist , key , & t )"		8218395	0		=			
ANR	8218466	Identifier	code		8218395	0					
ANR	8218467	CallExpression	"param_write_bool ( ( gs_param_list * ) plist , key , & t )"		8218395	1					
ANR	8218468	Callee	param_write_bool		8218395	0					
ANR	8218469	Identifier	param_write_bool		8218395	0					
ANR	8218470	ArgumentList	( gs_param_list * ) plist		8218395	1					
ANR	8218471	Argument	( gs_param_list * ) plist		8218395	0					
ANR	8218472	CastExpression	( gs_param_list * ) plist		8218395	0					
ANR	8218473	CastTarget	gs_param_list *		8218395	0					
ANR	8218474	Identifier	plist		8218395	1					
ANR	8218475	Argument	key		8218395	1					
ANR	8218476	Identifier	key		8218395	0					
ANR	8218477	Argument	& t		8218395	2					
ANR	8218478	UnaryOperationExpression	& t		8218395	0					
ANR	8218479	UnaryOperator	&		8218395	0					
ANR	8218480	Identifier	t		8218395	1					
ANR	8218481	ExpressionStatement	p1 += 5	945:20:32276:32283	8218395	2	True				
ANR	8218482	AssignmentExpression	p1 += 5		8218395	0		+=			
ANR	8218483	Identifier	p1		8218395	0					
ANR	8218484	PrimaryExpression	5		8218395	1					
ANR	8218485	ExpressionStatement	key = NULL	946:20:32305:32315	8218395	3	True				
ANR	8218486	AssignmentExpression	key = NULL		8218395	0		=			
ANR	8218487	Identifier	key		8218395	0					
ANR	8218488	Identifier	NULL		8218395	1					
ANR	8218489	ElseStatement	else		8218395	0					
ANR	8218490	CompoundStatement		17:23:456:456	8218395	0					
ANR	8218491	ReturnStatement	return - 1 ;	948:20:32362:32371	8218395	0	True				
ANR	8218492	UnaryOperationExpression	- 1		8218395	0					
ANR	8218493	UnaryOperator	-		8218395	0					
ANR	8218494	PrimaryExpression	1		8218395	1					
ANR	8218495	BreakStatement	break ;	950:16:32407:32412	8218395	5	True				
ANR	8218496	Label	case 't' :	951:12:32426:32434	8218395	6	True				
ANR	8218497	IfStatement	"if ( strncmp ( p1 , ""true"" , 4 ) == 0 )"		8218395	7					
ANR	8218498	Condition	"strncmp ( p1 , ""true"" , 4 ) == 0"	952:20:32456:32482	8218395	0	True				
ANR	8218499	EqualityExpression	"strncmp ( p1 , ""true"" , 4 ) == 0"		8218395	0		==			
ANR	8218500	CallExpression	"strncmp ( p1 , ""true"" , 4 )"		8218395	0					
ANR	8218501	Callee	strncmp		8218395	0					
ANR	8218502	Identifier	strncmp		8218395	0					
ANR	8218503	ArgumentList	p1		8218395	1					
ANR	8218504	Argument	p1		8218395	0					
ANR	8218505	Identifier	p1		8218395	0					
ANR	8218506	Argument	"""true"""		8218395	1					
ANR	8218507	PrimaryExpression	"""true"""		8218395	0					
ANR	8218508	Argument	4		8218395	2					
ANR	8218509	PrimaryExpression	4		8218395	0					
ANR	8218510	PrimaryExpression	0		8218395	1					
ANR	8218511	CompoundStatement		23:20:623:636	8218395	1					
ANR	8218512	IdentifierDeclStatement	bool t = true ;	953:20:32507:32520	8218395	0	True				
ANR	8218513	IdentifierDecl	t = true		8218395	0					
ANR	8218514	IdentifierDeclType	bool		8218395	0					
ANR	8218515	Identifier	t		8218395	1					
ANR	8218516	AssignmentExpression	t = true		8218395	2		=			
ANR	8218517	Identifier	true		8218395	0					
ANR	8218518	Identifier	true		8218395	1					
ANR	8218519	ExpressionStatement	"code = param_write_bool ( ( gs_param_list * ) plist , key , & t )"	954:20:32542:32598	8218395	1	True				
ANR	8218520	AssignmentExpression	"code = param_write_bool ( ( gs_param_list * ) plist , key , & t )"		8218395	0		=			
ANR	8218521	Identifier	code		8218395	0					
ANR	8218522	CallExpression	"param_write_bool ( ( gs_param_list * ) plist , key , & t )"		8218395	1					
ANR	8218523	Callee	param_write_bool		8218395	0					
ANR	8218524	Identifier	param_write_bool		8218395	0					
ANR	8218525	ArgumentList	( gs_param_list * ) plist		8218395	1					
ANR	8218526	Argument	( gs_param_list * ) plist		8218395	0					
ANR	8218527	CastExpression	( gs_param_list * ) plist		8218395	0					
ANR	8218528	CastTarget	gs_param_list *		8218395	0					
ANR	8218529	Identifier	plist		8218395	1					
ANR	8218530	Argument	key		8218395	1					
ANR	8218531	Identifier	key		8218395	0					
ANR	8218532	Argument	& t		8218395	2					
ANR	8218533	UnaryOperationExpression	& t		8218395	0					
ANR	8218534	UnaryOperator	&		8218395	0					
ANR	8218535	Identifier	t		8218395	1					
ANR	8218536	ExpressionStatement	p1 += 4	955:20:32620:32627	8218395	2	True				
ANR	8218537	AssignmentExpression	p1 += 4		8218395	0		+=			
ANR	8218538	Identifier	p1		8218395	0					
ANR	8218539	PrimaryExpression	4		8218395	1					
ANR	8218540	ExpressionStatement	key = NULL	956:20:32649:32659	8218395	3	True				
ANR	8218541	AssignmentExpression	key = NULL		8218395	0		=			
ANR	8218542	Identifier	key		8218395	0					
ANR	8218543	Identifier	NULL		8218395	1					
ANR	8218544	ElseStatement	else		8218395	0					
ANR	8218545	CompoundStatement		27:23:800:800	8218395	0					
ANR	8218546	ReturnStatement	return - 1 ;	958:20:32706:32715	8218395	0	True				
ANR	8218547	UnaryOperationExpression	- 1		8218395	0					
ANR	8218548	UnaryOperator	-		8218395	0					
ANR	8218549	PrimaryExpression	1		8218395	1					
ANR	8218550	BreakStatement	break ;	960:16:32751:32756	8218395	8	True				
ANR	8218551	Label	case '<' :	961:12:32770:32778	8218395	9	True				
ANR	8218552	IfStatement	if ( key == NULL )		8218395	10					
ANR	8218553	Condition	key == NULL	962:20:32800:32810	8218395	0	True				
ANR	8218554	EqualityExpression	key == NULL		8218395	0		==			
ANR	8218555	Identifier	key		8218395	0					
ANR	8218556	Identifier	NULL		8218395	1					
ANR	8218557	CompoundStatement		32:33:929:929	8218395	1					
ANR	8218558	ReturnStatement	return - 1 ;	963:20:32835:32844	8218395	0	True				
ANR	8218559	UnaryOperationExpression	- 1		8218395	0					
ANR	8218560	UnaryOperator	-		8218395	0					
ANR	8218561	PrimaryExpression	1		8218395	1					
ANR	8218562	ExpressionStatement	"code = pjl_dist_process_dict_or_hexstring ( plist -> memory , ( gs_c_param_list * ) plist , key , & p1 )"	965:16:32880:32972	8218395	11	True				
ANR	8218563	AssignmentExpression	"code = pjl_dist_process_dict_or_hexstring ( plist -> memory , ( gs_c_param_list * ) plist , key , & p1 )"		8218395	0		=			
ANR	8218564	Identifier	code		8218395	0					
ANR	8218565	CallExpression	"pjl_dist_process_dict_or_hexstring ( plist -> memory , ( gs_c_param_list * ) plist , key , & p1 )"		8218395	1					
ANR	8218566	Callee	pjl_dist_process_dict_or_hexstring		8218395	0					
ANR	8218567	Identifier	pjl_dist_process_dict_or_hexstring		8218395	0					
ANR	8218568	ArgumentList	plist -> memory		8218395	1					
ANR	8218569	Argument	plist -> memory		8218395	0					
ANR	8218570	PtrMemberAccess	plist -> memory		8218395	0					
ANR	8218571	Identifier	plist		8218395	0					
ANR	8218572	Identifier	memory		8218395	1					
ANR	8218573	Argument	( gs_c_param_list * ) plist		8218395	1					
ANR	8218574	CastExpression	( gs_c_param_list * ) plist		8218395	0					
ANR	8218575	CastTarget	gs_c_param_list *		8218395	0					
ANR	8218576	Identifier	plist		8218395	1					
ANR	8218577	Argument	key		8218395	2					
ANR	8218578	Identifier	key		8218395	0					
ANR	8218579	Argument	& p1		8218395	3					
ANR	8218580	UnaryOperationExpression	& p1		8218395	0					
ANR	8218581	UnaryOperator	&		8218395	0					
ANR	8218582	Identifier	p1		8218395	1					
ANR	8218583	ExpressionStatement	key = NULL	966:16:32990:33000	8218395	12	True				
ANR	8218584	AssignmentExpression	key = NULL		8218395	0		=			
ANR	8218585	Identifier	key		8218395	0					
ANR	8218586	Identifier	NULL		8218395	1					
ANR	8218587	BreakStatement	break ;	967:16:33018:33023	8218395	13	True				
ANR	8218588	Label	case '/' :	968:12:33037:33045	8218395	14	True				
ANR	8218589	ExpressionStatement	"code = pjl_dist_process_name ( plist -> memory , ( gs_c_param_list * ) plist , & key , & p1 )"	969:16:33063:33143	8218395	15	True				
ANR	8218590	AssignmentExpression	"code = pjl_dist_process_name ( plist -> memory , ( gs_c_param_list * ) plist , & key , & p1 )"		8218395	0		=			
ANR	8218591	Identifier	code		8218395	0					
ANR	8218592	CallExpression	"pjl_dist_process_name ( plist -> memory , ( gs_c_param_list * ) plist , & key , & p1 )"		8218395	1					
ANR	8218593	Callee	pjl_dist_process_name		8218395	0					
ANR	8218594	Identifier	pjl_dist_process_name		8218395	0					
ANR	8218595	ArgumentList	plist -> memory		8218395	1					
ANR	8218596	Argument	plist -> memory		8218395	0					
ANR	8218597	PtrMemberAccess	plist -> memory		8218395	0					
ANR	8218598	Identifier	plist		8218395	0					
ANR	8218599	Identifier	memory		8218395	1					
ANR	8218600	Argument	( gs_c_param_list * ) plist		8218395	1					
ANR	8218601	CastExpression	( gs_c_param_list * ) plist		8218395	0					
ANR	8218602	CastTarget	gs_c_param_list *		8218395	0					
ANR	8218603	Identifier	plist		8218395	1					
ANR	8218604	Argument	& key		8218395	2					
ANR	8218605	UnaryOperationExpression	& key		8218395	0					
ANR	8218606	UnaryOperator	&		8218395	0					
ANR	8218607	Identifier	key		8218395	1					
ANR	8218608	Argument	& p1		8218395	3					
ANR	8218609	UnaryOperationExpression	& p1		8218395	0					
ANR	8218610	UnaryOperator	&		8218395	0					
ANR	8218611	Identifier	p1		8218395	1					
ANR	8218612	BreakStatement	break ;	970:16:33161:33166	8218395	16	True				
ANR	8218613	Label	case '(' :	971:12:33180:33188	8218395	17	True				
ANR	8218614	IfStatement	if ( key == NULL )		8218395	18					
ANR	8218615	Condition	key == NULL	972:20:33210:33220	8218395	0	True				
ANR	8218616	EqualityExpression	key == NULL		8218395	0		==			
ANR	8218617	Identifier	key		8218395	0					
ANR	8218618	Identifier	NULL		8218395	1					
ANR	8218619	CompoundStatement		42:33:1339:1339	8218395	1					
ANR	8218620	ReturnStatement	return - 1 ;	973:20:33245:33254	8218395	0	True				
ANR	8218621	UnaryOperationExpression	- 1		8218395	0					
ANR	8218622	UnaryOperator	-		8218395	0					
ANR	8218623	PrimaryExpression	1		8218395	1					
ANR	8218624	ExpressionStatement	"code = pjl_dist_process_string ( plist -> memory , ( gs_c_param_list * ) plist , key , & p1 )"	975:16:33290:33371	8218395	19	True				
ANR	8218625	AssignmentExpression	"code = pjl_dist_process_string ( plist -> memory , ( gs_c_param_list * ) plist , key , & p1 )"		8218395	0		=			
ANR	8218626	Identifier	code		8218395	0					
ANR	8218627	CallExpression	"pjl_dist_process_string ( plist -> memory , ( gs_c_param_list * ) plist , key , & p1 )"		8218395	1					
ANR	8218628	Callee	pjl_dist_process_string		8218395	0					
ANR	8218629	Identifier	pjl_dist_process_string		8218395	0					
ANR	8218630	ArgumentList	plist -> memory		8218395	1					
ANR	8218631	Argument	plist -> memory		8218395	0					
ANR	8218632	PtrMemberAccess	plist -> memory		8218395	0					
ANR	8218633	Identifier	plist		8218395	0					
ANR	8218634	Identifier	memory		8218395	1					
ANR	8218635	Argument	( gs_c_param_list * ) plist		8218395	1					
ANR	8218636	CastExpression	( gs_c_param_list * ) plist		8218395	0					
ANR	8218637	CastTarget	gs_c_param_list *		8218395	0					
ANR	8218638	Identifier	plist		8218395	1					
ANR	8218639	Argument	key		8218395	2					
ANR	8218640	Identifier	key		8218395	0					
ANR	8218641	Argument	& p1		8218395	3					
ANR	8218642	UnaryOperationExpression	& p1		8218395	0					
ANR	8218643	UnaryOperator	&		8218395	0					
ANR	8218644	Identifier	p1		8218395	1					
ANR	8218645	ExpressionStatement	key = NULL	976:16:33389:33399	8218395	20	True				
ANR	8218646	AssignmentExpression	key = NULL		8218395	0		=			
ANR	8218647	Identifier	key		8218395	0					
ANR	8218648	Identifier	NULL		8218395	1					
ANR	8218649	BreakStatement	break ;	977:16:33417:33422	8218395	21	True				
ANR	8218650	Label	case '[' :	978:12:33436:33444	8218395	22	True				
ANR	8218651	IfStatement	if ( key == NULL )		8218395	23					
ANR	8218652	Condition	key == NULL	979:20:33466:33476	8218395	0	True				
ANR	8218653	EqualityExpression	key == NULL		8218395	0		==			
ANR	8218654	Identifier	key		8218395	0					
ANR	8218655	Identifier	NULL		8218395	1					
ANR	8218656	CompoundStatement		49:33:1595:1595	8218395	1					
ANR	8218657	ReturnStatement	return - 1 ;	980:20:33501:33510	8218395	0	True				
ANR	8218658	UnaryOperationExpression	- 1		8218395	0					
ANR	8218659	UnaryOperator	-		8218395	0					
ANR	8218660	PrimaryExpression	1		8218395	1					
ANR	8218661	ExpressionStatement	"code = pjl_dist_process_array ( plist -> memory , ( gs_c_param_list * ) plist , key , & p1 )"	982:16:33546:33626	8218395	24	True				
ANR	8218662	AssignmentExpression	"code = pjl_dist_process_array ( plist -> memory , ( gs_c_param_list * ) plist , key , & p1 )"		8218395	0		=			
ANR	8218663	Identifier	code		8218395	0					
ANR	8218664	CallExpression	"pjl_dist_process_array ( plist -> memory , ( gs_c_param_list * ) plist , key , & p1 )"		8218395	1					
ANR	8218665	Callee	pjl_dist_process_array		8218395	0					
ANR	8218666	Identifier	pjl_dist_process_array		8218395	0					
ANR	8218667	ArgumentList	plist -> memory		8218395	1					
ANR	8218668	Argument	plist -> memory		8218395	0					
ANR	8218669	PtrMemberAccess	plist -> memory		8218395	0					
ANR	8218670	Identifier	plist		8218395	0					
ANR	8218671	Identifier	memory		8218395	1					
ANR	8218672	Argument	( gs_c_param_list * ) plist		8218395	1					
ANR	8218673	CastExpression	( gs_c_param_list * ) plist		8218395	0					
ANR	8218674	CastTarget	gs_c_param_list *		8218395	0					
ANR	8218675	Identifier	plist		8218395	1					
ANR	8218676	Argument	key		8218395	2					
ANR	8218677	Identifier	key		8218395	0					
ANR	8218678	Argument	& p1		8218395	3					
ANR	8218679	UnaryOperationExpression	& p1		8218395	0					
ANR	8218680	UnaryOperator	&		8218395	0					
ANR	8218681	Identifier	p1		8218395	1					
ANR	8218682	ExpressionStatement	key = NULL	983:16:33644:33654	8218395	25	True				
ANR	8218683	AssignmentExpression	key = NULL		8218395	0		=			
ANR	8218684	Identifier	key		8218395	0					
ANR	8218685	Identifier	NULL		8218395	1					
ANR	8218686	BreakStatement	break ;	984:16:33672:33677	8218395	26	True				
ANR	8218687	Label	case '0' :	985:12:33691:33699	8218395	27	True				
ANR	8218688	Label	case '1' :	986:12:33713:33721	8218395	28	True				
ANR	8218689	Label	case '2' :	987:12:33735:33743	8218395	29	True				
ANR	8218690	Label	case '3' :	988:12:33757:33765	8218395	30	True				
ANR	8218691	Label	case '4' :	989:12:33779:33787	8218395	31	True				
ANR	8218692	Label	case '5' :	990:12:33801:33809	8218395	32	True				
ANR	8218693	Label	case '6' :	991:12:33823:33831	8218395	33	True				
ANR	8218694	Label	case '7' :	992:12:33845:33853	8218395	34	True				
ANR	8218695	Label	case '8' :	993:12:33867:33875	8218395	35	True				
ANR	8218696	Label	case '9' :	994:12:33889:33897	8218395	36	True				
ANR	8218697	Label	case '.' :	995:12:33911:33919	8218395	37	True				
ANR	8218698	IfStatement	if ( key == NULL )		8218395	38					
ANR	8218699	Condition	key == NULL	996:20:33941:33951	8218395	0	True				
ANR	8218700	EqualityExpression	key == NULL		8218395	0		==			
ANR	8218701	Identifier	key		8218395	0					
ANR	8218702	Identifier	NULL		8218395	1					
ANR	8218703	CompoundStatement		66:33:2070:2070	8218395	1					
ANR	8218704	ReturnStatement	return - 1 ;	997:20:33976:33985	8218395	0	True				
ANR	8218705	UnaryOperationExpression	- 1		8218395	0					
ANR	8218706	UnaryOperator	-		8218395	0					
ANR	8218707	PrimaryExpression	1		8218395	1					
ANR	8218708	ExpressionStatement	"code = pjl_dist_process_number ( plist -> memory , ( gs_c_param_list * ) plist , key , & p1 )"	999:16:34021:34102	8218395	39	True				
ANR	8218709	AssignmentExpression	"code = pjl_dist_process_number ( plist -> memory , ( gs_c_param_list * ) plist , key , & p1 )"		8218395	0		=			
ANR	8218710	Identifier	code		8218395	0					
ANR	8218711	CallExpression	"pjl_dist_process_number ( plist -> memory , ( gs_c_param_list * ) plist , key , & p1 )"		8218395	1					
ANR	8218712	Callee	pjl_dist_process_number		8218395	0					
ANR	8218713	Identifier	pjl_dist_process_number		8218395	0					
ANR	8218714	ArgumentList	plist -> memory		8218395	1					
ANR	8218715	Argument	plist -> memory		8218395	0					
ANR	8218716	PtrMemberAccess	plist -> memory		8218395	0					
ANR	8218717	Identifier	plist		8218395	0					
ANR	8218718	Identifier	memory		8218395	1					
ANR	8218719	Argument	( gs_c_param_list * ) plist		8218395	1					
ANR	8218720	CastExpression	( gs_c_param_list * ) plist		8218395	0					
ANR	8218721	CastTarget	gs_c_param_list *		8218395	0					
ANR	8218722	Identifier	plist		8218395	1					
ANR	8218723	Argument	key		8218395	2					
ANR	8218724	Identifier	key		8218395	0					
ANR	8218725	Argument	& p1		8218395	3					
ANR	8218726	UnaryOperationExpression	& p1		8218395	0					
ANR	8218727	UnaryOperator	&		8218395	0					
ANR	8218728	Identifier	p1		8218395	1					
ANR	8218729	ExpressionStatement	key = NULL	1000:16:34120:34130	8218395	40	True				
ANR	8218730	AssignmentExpression	key = NULL		8218395	0		=			
ANR	8218731	Identifier	key		8218395	0					
ANR	8218732	Identifier	NULL		8218395	1					
ANR	8218733	BreakStatement	break ;	1001:16:34148:34153	8218395	41	True				
ANR	8218734	Label	default :	1002:12:34167:34174	8218395	42	True				
ANR	8218735	Identifier	default		8218395	0					
ANR	8218736	ReturnStatement	return - 1 ;	1003:16:34192:34201	8218395	43	True				
ANR	8218737	UnaryOperationExpression	- 1		8218395	0					
ANR	8218738	UnaryOperator	-		8218395	0					
ANR	8218739	PrimaryExpression	1		8218395	1					
ANR	8218740	BreakStatement	break ;	1004:16:34219:34224	8218395	44	True				
ANR	8218741	IfStatement	if ( code < 0 )		8218395	1					
ANR	8218742	Condition	code < 0	1006:12:34248:34255	8218395	0	True				
ANR	8218743	RelationalExpression	code < 0		8218395	0		<			
ANR	8218744	Identifier	code		8218395	0					
ANR	8218745	PrimaryExpression	0		8218395	1					
ANR	8218746	CompoundStatement		76:22:2374:2374	8218395	1					
ANR	8218747	ReturnStatement	return code ;	1007:12:34272:34283	8218395	0	True				
ANR	8218748	Identifier	code		8218395	0					
ANR	8218749	ReturnStatement	return 0 ;	1011:4:34306:34314	8218395	4	True				
ANR	8218750	PrimaryExpression	0		8218395	0					
ANR	8218751	ReturnType	static int		8218395	1					
ANR	8218752	Identifier	pjl_dist_add_tokens_to_list		8218395	2					
ANR	8218753	ParameterList	"gs_param_list * plist , char * * p"		8218395	3					
ANR	8218754	Parameter	gs_param_list * plist	930:39:31851:31870	8218395	0	True				
ANR	8218755	ParameterType	gs_param_list *		8218395	0					
ANR	8218756	Identifier	plist		8218395	1					
ANR	8218757	Parameter	char * * p	930:61:31873:31880	8218395	1	True				
ANR	8218758	ParameterType	char * *		8218395	0					
ANR	8218759	Identifier	p		8218395	1					
ANR	8218760	CFGEntryNode	ENTRY		8218395		True				
ANR	8218761	CFGExitNode	EXIT		8218395		True				
ANR	8218762	Symbol	p1		8218395						
ANR	8218763	Symbol	pjl_dist_process_array		8218395						
ANR	8218764	Symbol	& key		8218395						
ANR	8218765	Symbol	code		8218395						
ANR	8218766	Symbol	NULL		8218395						
ANR	8218767	Symbol	* p1		8218395						
ANR	8218768	Symbol	* plist		8218395						
ANR	8218769	Symbol	pjl_dist_process_number		8218395						
ANR	8218770	Symbol	false		8218395						
ANR	8218771	Symbol	& p1		8218395						
ANR	8218772	Symbol	p		8218395						
ANR	8218773	Symbol	pjl_dist_process_string		8218395						
ANR	8218774	Symbol	strncmp		8218395						
ANR	8218775	Symbol	param_write_bool		8218395						
ANR	8218776	Symbol	plist		8218395						
ANR	8218777	Symbol	t		8218395						
ANR	8218778	Symbol	true		8218395						
ANR	8218779	Symbol	pjl_dist_process_name		8218395						
ANR	8218780	Symbol	* p		8218395						
ANR	8218781	Symbol	& t		8218395						
ANR	8218782	Symbol	plist -> memory		8218395						
ANR	8218783	Symbol	pjl_dist_process_dict_or_hexstring		8218395						
ANR	8218784	Symbol	key		8218395						
ANR	8218785	Function	pcl_pjl_setdistillerparams	1014:0:34319:36290							
ANR	8218786	FunctionDef	"pcl_pjl_setdistillerparams (gs_memory_t * mem , gx_device * device , char * distillerparams)"		8218785	0					
ANR	8218787	CompoundStatement		1015:0:34410:36290	8218785	0					
ANR	8218788	IdentifierDeclStatement	"char * p , * start , * copy ;"	1016:4:34416:34438	8218785	0	True				
ANR	8218789	IdentifierDecl	* p		8218785	0					
ANR	8218790	IdentifierDeclType	char *		8218785	0					
ANR	8218791	Identifier	p		8218785	1					
ANR	8218792	IdentifierDecl	* start		8218785	1					
ANR	8218793	IdentifierDeclType	char *		8218785	0					
ANR	8218794	Identifier	start		8218785	1					
ANR	8218795	IdentifierDecl	* copy		8218785	2					
ANR	8218796	IdentifierDeclType	char *		8218785	0					
ANR	8218797	Identifier	copy		8218785	1					
ANR	8218798	IdentifierDeclStatement	int code = 0 ;	1017:4:34444:34456	8218785	1	True				
ANR	8218799	IdentifierDecl	code = 0		8218785	0					
ANR	8218800	IdentifierDeclType	int		8218785	0					
ANR	8218801	Identifier	code		8218785	1					
ANR	8218802	AssignmentExpression	code = 0		8218785	2		=			
ANR	8218803	Identifier	code		8218785	0					
ANR	8218804	PrimaryExpression	0		8218785	1					
ANR	8218805	IdentifierDeclStatement	gs_c_param_list * plist ;	1018:4:34462:34484	8218785	2	True				
ANR	8218806	IdentifierDecl	* plist		8218785	0					
ANR	8218807	IdentifierDeclType	gs_c_param_list *		8218785	0					
ANR	8218808	Identifier	plist		8218785	1					
ANR	8218809	ExpressionStatement	"plist = gs_c_param_list_alloc ( mem , ""temp C param list for PJL distillerparams"" )"	1020:4:34491:34570	8218785	3	True				
ANR	8218810	AssignmentExpression	"plist = gs_c_param_list_alloc ( mem , ""temp C param list for PJL distillerparams"" )"		8218785	0		=			
ANR	8218811	Identifier	plist		8218785	0					
ANR	8218812	CallExpression	"gs_c_param_list_alloc ( mem , ""temp C param list for PJL distillerparams"" )"		8218785	1					
ANR	8218813	Callee	gs_c_param_list_alloc		8218785	0					
ANR	8218814	Identifier	gs_c_param_list_alloc		8218785	0					
ANR	8218815	ArgumentList	mem		8218785	1					
ANR	8218816	Argument	mem		8218785	0					
ANR	8218817	Identifier	mem		8218785	0					
ANR	8218818	Argument	"""temp C param list for PJL distillerparams"""		8218785	1					
ANR	8218819	PrimaryExpression	"""temp C param list for PJL distillerparams"""		8218785	0					
ANR	8218820	IfStatement	if ( plist == NULL )		8218785	4					
ANR	8218821	Condition	plist == NULL	1021:8:34580:34592	8218785	0	True				
ANR	8218822	EqualityExpression	plist == NULL		8218785	0		==			
ANR	8218823	Identifier	plist		8218785	0					
ANR	8218824	Identifier	NULL		8218785	1					
ANR	8218825	ReturnStatement	return - 1 ;	1022:8:34603:34612	8218785	1	True				
ANR	8218826	UnaryOperationExpression	- 1		8218785	0					
ANR	8218827	UnaryOperator	-		8218785	0					
ANR	8218828	PrimaryExpression	1		8218785	1					
ANR	8218829	ExpressionStatement	"gs_c_param_list_write ( plist , mem )"	1023:4:34618:34651	8218785	5	True				
ANR	8218830	CallExpression	"gs_c_param_list_write ( plist , mem )"		8218785	0					
ANR	8218831	Callee	gs_c_param_list_write		8218785	0					
ANR	8218832	Identifier	gs_c_param_list_write		8218785	0					
ANR	8218833	ArgumentList	plist		8218785	1					
ANR	8218834	Argument	plist		8218785	0					
ANR	8218835	Identifier	plist		8218785	0					
ANR	8218836	Argument	mem		8218785	1					
ANR	8218837	Identifier	mem		8218785	0					
ANR	8218838	ExpressionStatement	"gs_param_list_set_persistent_keys ( ( gs_param_list * ) plist , false )"	1024:4:34657:34722	8218785	6	True				
ANR	8218839	CallExpression	"gs_param_list_set_persistent_keys ( ( gs_param_list * ) plist , false )"		8218785	0					
ANR	8218840	Callee	gs_param_list_set_persistent_keys		8218785	0					
ANR	8218841	Identifier	gs_param_list_set_persistent_keys		8218785	0					
ANR	8218842	ArgumentList	( gs_param_list * ) plist		8218785	1					
ANR	8218843	Argument	( gs_param_list * ) plist		8218785	0					
ANR	8218844	CastExpression	( gs_param_list * ) plist		8218785	0					
ANR	8218845	CastTarget	gs_param_list *		8218785	0					
ANR	8218846	Identifier	plist		8218785	1					
ANR	8218847	Argument	false		8218785	1					
ANR	8218848	Identifier	false		8218785	0					
ANR	8218849	ExpressionStatement	gs_c_param_list_write_more ( plist )	1025:4:34728:34761	8218785	7	True				
ANR	8218850	CallExpression	gs_c_param_list_write_more ( plist )		8218785	0					
ANR	8218851	Callee	gs_c_param_list_write_more		8218785	0					
ANR	8218852	Identifier	gs_c_param_list_write_more		8218785	0					
ANR	8218853	ArgumentList	plist		8218785	1					
ANR	8218854	Argument	plist		8218785	0					
ANR	8218855	Identifier	plist		8218785	0					
ANR	8218856	ExpressionStatement	"copy = ( char * ) gs_alloc_bytes ( mem , strlen ( distillerparams ) + 1 , ""working buffer for distillerparams processing"" )"	1028:4:34869:34981	8218785	8	True				
ANR	8218857	AssignmentExpression	"copy = ( char * ) gs_alloc_bytes ( mem , strlen ( distillerparams ) + 1 , ""working buffer for distillerparams processing"" )"		8218785	0		=			
ANR	8218858	Identifier	copy		8218785	0					
ANR	8218859	CastExpression	"( char * ) gs_alloc_bytes ( mem , strlen ( distillerparams ) + 1 , ""working buffer for distillerparams processing"" )"		8218785	1					
ANR	8218860	CastTarget	char *		8218785	0					
ANR	8218861	CallExpression	"gs_alloc_bytes ( mem , strlen ( distillerparams ) + 1 , ""working buffer for distillerparams processing"" )"		8218785	1					
ANR	8218862	Callee	gs_alloc_bytes		8218785	0					
ANR	8218863	Identifier	gs_alloc_bytes		8218785	0					
ANR	8218864	ArgumentList	mem		8218785	1					
ANR	8218865	Argument	mem		8218785	0					
ANR	8218866	Identifier	mem		8218785	0					
ANR	8218867	Argument	strlen ( distillerparams ) + 1		8218785	1					
ANR	8218868	AdditiveExpression	strlen ( distillerparams ) + 1		8218785	0		+			
ANR	8218869	CallExpression	strlen ( distillerparams )		8218785	0					
ANR	8218870	Callee	strlen		8218785	0					
ANR	8218871	Identifier	strlen		8218785	0					
ANR	8218872	ArgumentList	distillerparams		8218785	1					
ANR	8218873	Argument	distillerparams		8218785	0					
ANR	8218874	Identifier	distillerparams		8218785	0					
ANR	8218875	PrimaryExpression	1		8218785	1					
ANR	8218876	Argument	"""working buffer for distillerparams processing"""		8218785	2					
ANR	8218877	PrimaryExpression	"""working buffer for distillerparams processing"""		8218785	0					
ANR	8218878	IfStatement	if ( copy == 0 )		8218785	9					
ANR	8218879	Condition	copy == 0	1029:8:34991:34999	8218785	0	True				
ANR	8218880	EqualityExpression	copy == 0		8218785	0		==			
ANR	8218881	Identifier	copy		8218785	0					
ANR	8218882	PrimaryExpression	0		8218785	1					
ANR	8218883	ReturnStatement	return - 1 ;	1030:8:35010:35019	8218785	1	True				
ANR	8218884	UnaryOperationExpression	- 1		8218785	0					
ANR	8218885	UnaryOperator	-		8218785	0					
ANR	8218886	PrimaryExpression	1		8218785	1					
ANR	8218887	ExpressionStatement	"strcpy ( copy , distillerparams )"	1031:4:35025:35054	8218785	10	True				
ANR	8218888	CallExpression	"strcpy ( copy , distillerparams )"		8218785	0					
ANR	8218889	Callee	strcpy		8218785	0					
ANR	8218890	Identifier	strcpy		8218785	0					
ANR	8218891	ArgumentList	copy		8218785	1					
ANR	8218892	Argument	copy		8218785	0					
ANR	8218893	Identifier	copy		8218785	0					
ANR	8218894	Argument	distillerparams		8218785	1					
ANR	8218895	Identifier	distillerparams		8218785	0					
ANR	8218896	IfStatement	"if ( * copy == '""' )"		8218785	11					
ANR	8218897	Condition	"* copy == '""'"	1033:8:35065:35076	8218785	0	True				
ANR	8218898	EqualityExpression	"* copy == '""'"		8218785	0		==			
ANR	8218899	UnaryOperationExpression	* copy		8218785	0					
ANR	8218900	UnaryOperator	*		8218785	0					
ANR	8218901	Identifier	copy		8218785	1					
ANR	8218902	PrimaryExpression	"'""'"		8218785	1					
ANR	8218903	CompoundStatement		19:22:668:668	8218785	1					
ANR	8218904	ExpressionStatement	start = copy + 1	1034:8:35089:35105	8218785	0	True				
ANR	8218905	AssignmentExpression	start = copy + 1		8218785	0		=			
ANR	8218906	Identifier	start		8218785	0					
ANR	8218907	AdditiveExpression	copy + 1		8218785	1		+			
ANR	8218908	Identifier	copy		8218785	0					
ANR	8218909	PrimaryExpression	1		8218785	1					
ANR	8218910	ExpressionStatement	copy [ strlen ( copy ) - 1 ] = 0x00	1035:8:35115:35144	8218785	1	True				
ANR	8218911	AssignmentExpression	copy [ strlen ( copy ) - 1 ] = 0x00		8218785	0		=			
ANR	8218912	ArrayIndexing	copy [ strlen ( copy ) - 1 ]		8218785	0					
ANR	8218913	Identifier	copy		8218785	0					
ANR	8218914	AdditiveExpression	strlen ( copy ) - 1		8218785	1		-			
ANR	8218915	CallExpression	strlen ( copy )		8218785	0					
ANR	8218916	Callee	strlen		8218785	0					
ANR	8218917	Identifier	strlen		8218785	0					
ANR	8218918	ArgumentList	copy		8218785	1					
ANR	8218919	Argument	copy		8218785	0					
ANR	8218920	Identifier	copy		8218785	0					
ANR	8218921	PrimaryExpression	1		8218785	1					
ANR	8218922	PrimaryExpression	0x00		8218785	1					
ANR	8218923	ElseStatement	else		8218785	0					
ANR	8218924	ExpressionStatement	start = copy	1038:8:35169:35181	8218785	0	True				
ANR	8218925	AssignmentExpression	start = copy		8218785	0		=			
ANR	8218926	Identifier	start		8218785	0					
ANR	8218927	Identifier	copy		8218785	1					
ANR	8218928	IfStatement	if ( * start != '<' || start [ 1 ] != '<' )		8218785	12					
ANR	8218929	Condition	* start != '<' || start [ 1 ] != '<'	1040:8:35192:35223	8218785	0	True				
ANR	8218930	OrExpression	* start != '<' || start [ 1 ] != '<'		8218785	0		||			
ANR	8218931	EqualityExpression	* start != '<'		8218785	0		!=			
ANR	8218932	UnaryOperationExpression	* start		8218785	0					
ANR	8218933	UnaryOperator	*		8218785	0					
ANR	8218934	Identifier	start		8218785	1					
ANR	8218935	PrimaryExpression	'<'		8218785	1					
ANR	8218936	EqualityExpression	start [ 1 ] != '<'		8218785	1		!=			
ANR	8218937	ArrayIndexing	start [ 1 ]		8218785	0					
ANR	8218938	Identifier	start		8218785	0					
ANR	8218939	PrimaryExpression	1		8218785	1					
ANR	8218940	PrimaryExpression	'<'		8218785	1					
ANR	8218941	CompoundStatement		26:42:815:815	8218785	1					
ANR	8218942	ExpressionStatement	"gs_free_object ( mem , copy , ""working buffer for distillerparams processing"" )"	1041:8:35236:35310	8218785	0	True				
ANR	8218943	CallExpression	"gs_free_object ( mem , copy , ""working buffer for distillerparams processing"" )"		8218785	0					
ANR	8218944	Callee	gs_free_object		8218785	0					
ANR	8218945	Identifier	gs_free_object		8218785	0					
ANR	8218946	ArgumentList	mem		8218785	1					
ANR	8218947	Argument	mem		8218785	0					
ANR	8218948	Identifier	mem		8218785	0					
ANR	8218949	Argument	copy		8218785	1					
ANR	8218950	Identifier	copy		8218785	0					
ANR	8218951	Argument	"""working buffer for distillerparams processing"""		8218785	2					
ANR	8218952	PrimaryExpression	"""working buffer for distillerparams processing"""		8218785	0					
ANR	8218953	ReturnStatement	return - 1 ;	1042:8:35320:35329	8218785	1	True				
ANR	8218954	UnaryOperationExpression	- 1		8218785	0					
ANR	8218955	UnaryOperator	-		8218785	0					
ANR	8218956	PrimaryExpression	1		8218785	1					
ANR	8218957	ExpressionStatement	start += 2	1044:4:35341:35351	8218785	13	True				
ANR	8218958	AssignmentExpression	start += 2		8218785	0		+=			
ANR	8218959	Identifier	start		8218785	0					
ANR	8218960	PrimaryExpression	2		8218785	1					
ANR	8218961	IfStatement	if ( copy [ strlen ( copy ) - 1 ] != '>' || copy [ strlen ( copy ) - 2 ] != '>' )		8218785	14					
ANR	8218962	Condition	copy [ strlen ( copy ) - 1 ] != '>' || copy [ strlen ( copy ) - 2 ] != '>'	1046:8:35362:35423	8218785	0	True				
ANR	8218963	OrExpression	copy [ strlen ( copy ) - 1 ] != '>' || copy [ strlen ( copy ) - 2 ] != '>'		8218785	0		||			
ANR	8218964	EqualityExpression	copy [ strlen ( copy ) - 1 ] != '>'		8218785	0		!=			
ANR	8218965	ArrayIndexing	copy [ strlen ( copy ) - 1 ]		8218785	0					
ANR	8218966	Identifier	copy		8218785	0					
ANR	8218967	AdditiveExpression	strlen ( copy ) - 1		8218785	1		-			
ANR	8218968	CallExpression	strlen ( copy )		8218785	0					
ANR	8218969	Callee	strlen		8218785	0					
ANR	8218970	Identifier	strlen		8218785	0					
ANR	8218971	ArgumentList	copy		8218785	1					
ANR	8218972	Argument	copy		8218785	0					
ANR	8218973	Identifier	copy		8218785	0					
ANR	8218974	PrimaryExpression	1		8218785	1					
ANR	8218975	PrimaryExpression	'>'		8218785	1					
ANR	8218976	EqualityExpression	copy [ strlen ( copy ) - 2 ] != '>'		8218785	1		!=			
ANR	8218977	ArrayIndexing	copy [ strlen ( copy ) - 2 ]		8218785	0					
ANR	8218978	Identifier	copy		8218785	0					
ANR	8218979	AdditiveExpression	strlen ( copy ) - 2		8218785	1		-			
ANR	8218980	CallExpression	strlen ( copy )		8218785	0					
ANR	8218981	Callee	strlen		8218785	0					
ANR	8218982	Identifier	strlen		8218785	0					
ANR	8218983	ArgumentList	copy		8218785	1					
ANR	8218984	Argument	copy		8218785	0					
ANR	8218985	Identifier	copy		8218785	0					
ANR	8218986	PrimaryExpression	2		8218785	1					
ANR	8218987	PrimaryExpression	'>'		8218785	1					
ANR	8218988	CompoundStatement		32:72:1015:1015	8218785	1					
ANR	8218989	ExpressionStatement	"gs_free_object ( mem , copy , ""working buffer for distillerparams processing"" )"	1047:8:35436:35510	8218785	0	True				
ANR	8218990	CallExpression	"gs_free_object ( mem , copy , ""working buffer for distillerparams processing"" )"		8218785	0					
ANR	8218991	Callee	gs_free_object		8218785	0					
ANR	8218992	Identifier	gs_free_object		8218785	0					
ANR	8218993	ArgumentList	mem		8218785	1					
ANR	8218994	Argument	mem		8218785	0					
ANR	8218995	Identifier	mem		8218785	0					
ANR	8218996	Argument	copy		8218785	1					
ANR	8218997	Identifier	copy		8218785	0					
ANR	8218998	Argument	"""working buffer for distillerparams processing"""		8218785	2					
ANR	8218999	PrimaryExpression	"""working buffer for distillerparams processing"""		8218785	0					
ANR	8219000	ReturnStatement	return - 1 ;	1048:8:35520:35529	8218785	1	True				
ANR	8219001	UnaryOperationExpression	- 1		8218785	0					
ANR	8219002	UnaryOperator	-		8218785	0					
ANR	8219003	PrimaryExpression	1		8218785	1					
ANR	8219004	ExpressionStatement	copy [ strlen ( copy ) - 2 ] = 0x00	1050:4:35541:35570	8218785	15	True				
ANR	8219005	AssignmentExpression	copy [ strlen ( copy ) - 2 ] = 0x00		8218785	0		=			
ANR	8219006	ArrayIndexing	copy [ strlen ( copy ) - 2 ]		8218785	0					
ANR	8219007	Identifier	copy		8218785	0					
ANR	8219008	AdditiveExpression	strlen ( copy ) - 2		8218785	1		-			
ANR	8219009	CallExpression	strlen ( copy )		8218785	0					
ANR	8219010	Callee	strlen		8218785	0					
ANR	8219011	Identifier	strlen		8218785	0					
ANR	8219012	ArgumentList	copy		8218785	1					
ANR	8219013	Argument	copy		8218785	0					
ANR	8219014	Identifier	copy		8218785	0					
ANR	8219015	PrimaryExpression	2		8218785	1					
ANR	8219016	PrimaryExpression	0x00		8218785	1					
ANR	8219017	WhileStatement	while ( * start == ' ' )		8218785	16					
ANR	8219018	Condition	* start == ' '	1052:11:35584:35596	8218785	0	True				
ANR	8219019	EqualityExpression	* start == ' '		8218785	0		==			
ANR	8219020	UnaryOperationExpression	* start		8218785	0					
ANR	8219021	UnaryOperator	*		8218785	0					
ANR	8219022	Identifier	start		8218785	1					
ANR	8219023	PrimaryExpression	' '		8218785	1					
ANR	8219024	ExpressionStatement	start ++	1053:8:35607:35614	8218785	1	True				
ANR	8219025	PostIncDecOperationExpression	start ++		8218785	0					
ANR	8219026	Identifier	start		8218785	0					
ANR	8219027	IncDec	++		8218785	1					
ANR	8219028	ExpressionStatement	p = start	1054:4:35620:35629	8218785	17	True				
ANR	8219029	AssignmentExpression	p = start		8218785	0		=			
ANR	8219030	Identifier	p		8218785	0					
ANR	8219031	Identifier	start		8218785	1					
ANR	8219032	ExpressionStatement	"code = pjl_dist_add_tokens_to_list ( ( gs_param_list * ) plist , & p )"	1057:4:35697:35759	8218785	18	True				
ANR	8219033	AssignmentExpression	"code = pjl_dist_add_tokens_to_list ( ( gs_param_list * ) plist , & p )"		8218785	0		=			
ANR	8219034	Identifier	code		8218785	0					
ANR	8219035	CallExpression	"pjl_dist_add_tokens_to_list ( ( gs_param_list * ) plist , & p )"		8218785	1					
ANR	8219036	Callee	pjl_dist_add_tokens_to_list		8218785	0					
ANR	8219037	Identifier	pjl_dist_add_tokens_to_list		8218785	0					
ANR	8219038	ArgumentList	( gs_param_list * ) plist		8218785	1					
ANR	8219039	Argument	( gs_param_list * ) plist		8218785	0					
ANR	8219040	CastExpression	( gs_param_list * ) plist		8218785	0					
ANR	8219041	CastTarget	gs_param_list *		8218785	0					
ANR	8219042	Identifier	plist		8218785	1					
ANR	8219043	Argument	& p		8218785	1					
ANR	8219044	UnaryOperationExpression	& p		8218785	0					
ANR	8219045	UnaryOperator	&		8218785	0					
ANR	8219046	Identifier	p		8218785	1					
ANR	8219047	IfStatement	if ( code < 0 )		8218785	19					
ANR	8219048	Condition	code < 0	1058:8:35769:35776	8218785	0	True				
ANR	8219049	RelationalExpression	code < 0		8218785	0		<			
ANR	8219050	Identifier	code		8218785	0					
ANR	8219051	PrimaryExpression	0		8218785	1					
ANR	8219052	CompoundStatement		44:18:1368:1368	8218785	1					
ANR	8219053	ExpressionStatement	gs_c_param_list_release ( plist )	1059:8:35789:35819	8218785	0	True				
ANR	8219054	CallExpression	gs_c_param_list_release ( plist )		8218785	0					
ANR	8219055	Callee	gs_c_param_list_release		8218785	0					
ANR	8219056	Identifier	gs_c_param_list_release		8218785	0					
ANR	8219057	ArgumentList	plist		8218785	1					
ANR	8219058	Argument	plist		8218785	0					
ANR	8219059	Identifier	plist		8218785	0					
ANR	8219060	ReturnStatement	return code ;	1060:8:35829:35840	8218785	1	True				
ANR	8219061	Identifier	code		8218785	0					
ANR	8219062	ExpressionStatement	"gs_free_object ( mem , copy , ""working buffer for distillerparams processing"" )"	1064:4:35902:35976	8218785	20	True				
ANR	8219063	CallExpression	"gs_free_object ( mem , copy , ""working buffer for distillerparams processing"" )"		8218785	0					
ANR	8219064	Callee	gs_free_object		8218785	0					
ANR	8219065	Identifier	gs_free_object		8218785	0					
ANR	8219066	ArgumentList	mem		8218785	1					
ANR	8219067	Argument	mem		8218785	0					
ANR	8219068	Identifier	mem		8218785	0					
ANR	8219069	Argument	copy		8218785	1					
ANR	8219070	Identifier	copy		8218785	0					
ANR	8219071	Argument	"""working buffer for distillerparams processing"""		8218785	2					
ANR	8219072	PrimaryExpression	"""working buffer for distillerparams processing"""		8218785	0					
ANR	8219073	ExpressionStatement	gs_c_param_list_read ( plist )	1067:4:36029:36056	8218785	21	True				
ANR	8219074	CallExpression	gs_c_param_list_read ( plist )		8218785	0					
ANR	8219075	Callee	gs_c_param_list_read		8218785	0					
ANR	8219076	Identifier	gs_c_param_list_read		8218785	0					
ANR	8219077	ArgumentList	plist		8218785	1					
ANR	8219078	Argument	plist		8218785	0					
ANR	8219079	Identifier	plist		8218785	0					
ANR	8219080	ExpressionStatement	"code = gs_putdeviceparams ( device , ( gs_param_list * ) plist )"	1070:4:36122:36179	8218785	22	True				
ANR	8219081	AssignmentExpression	"code = gs_putdeviceparams ( device , ( gs_param_list * ) plist )"		8218785	0		=			
ANR	8219082	Identifier	code		8218785	0					
ANR	8219083	CallExpression	"gs_putdeviceparams ( device , ( gs_param_list * ) plist )"		8218785	1					
ANR	8219084	Callee	gs_putdeviceparams		8218785	0					
ANR	8219085	Identifier	gs_putdeviceparams		8218785	0					
ANR	8219086	ArgumentList	device		8218785	1					
ANR	8219087	Argument	device		8218785	0					
ANR	8219088	Identifier	device		8218785	0					
ANR	8219089	Argument	( gs_param_list * ) plist		8218785	1					
ANR	8219090	CastExpression	( gs_param_list * ) plist		8218785	0					
ANR	8219091	CastTarget	gs_param_list *		8218785	0					
ANR	8219092	Identifier	plist		8218785	1					
ANR	8219093	ExpressionStatement	gs_c_param_list_release ( plist )	1073:4:36241:36271	8218785	23	True				
ANR	8219094	CallExpression	gs_c_param_list_release ( plist )		8218785	0					
ANR	8219095	Callee	gs_c_param_list_release		8218785	0					
ANR	8219096	Identifier	gs_c_param_list_release		8218785	0					
ANR	8219097	ArgumentList	plist		8218785	1					
ANR	8219098	Argument	plist		8218785	0					
ANR	8219099	Identifier	plist		8218785	0					
ANR	8219100	ReturnStatement	return code ;	1074:4:36277:36288	8218785	24	True				
ANR	8219101	Identifier	code		8218785	0					
ANR	8219102	ReturnType	int		8218785	1					
ANR	8219103	Identifier	pcl_pjl_setdistillerparams		8218785	2					
ANR	8219104	ParameterList	"gs_memory_t * mem , gx_device * device , char * distillerparams"		8218785	3					
ANR	8219105	Parameter	gs_memory_t * mem	1014:31:34350:34365	8218785	0	True				
ANR	8219106	ParameterType	gs_memory_t *		8218785	0					
ANR	8219107	Identifier	mem		8218785	1					
ANR	8219108	Parameter	gx_device * device	1014:49:34368:34384	8218785	1	True				
ANR	8219109	ParameterType	gx_device *		8218785	0					
ANR	8219110	Identifier	device		8218785	1					
ANR	8219111	Parameter	char * distillerparams	1014:68:34387:34407	8218785	2	True				
ANR	8219112	ParameterType	char *		8218785	0					
ANR	8219113	Identifier	distillerparams		8218785	1					
ANR	8219114	CFGEntryNode	ENTRY		8218785		True				
ANR	8219115	CFGExitNode	EXIT		8218785		True				
ANR	8219116	Symbol	distillerparams		8218785						
ANR	8219117	Symbol	gs_alloc_bytes		8218785						
ANR	8219118	Symbol	code		8218785						
ANR	8219119	Symbol	NULL		8218785						
ANR	8219120	Symbol	gs_putdeviceparams		8218785						
ANR	8219121	Symbol	* start		8218785						
ANR	8219122	Symbol	start		8218785						
ANR	8219123	Symbol	false		8218785						
ANR	8219124	Symbol	gs_c_param_list_alloc		8218785						
ANR	8219125	Symbol	p		8218785						
ANR	8219126	Symbol	strlen		8218785						
ANR	8219127	Symbol	plist		8218785						
ANR	8219128	Symbol	mem		8218785						
ANR	8219129	Symbol	* strlen		8218785						
ANR	8219130	Symbol	* copy		8218785						
ANR	8219131	Symbol	& p		8218785						
ANR	8219132	Symbol	pjl_dist_add_tokens_to_list		8218785						
ANR	8219133	Symbol	copy		8218785						
ANR	8219134	Symbol	device		8218785						
