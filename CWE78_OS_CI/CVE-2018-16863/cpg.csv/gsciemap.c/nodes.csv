command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5003047	File	data/converged/CVE-2018-16863_ghostpdl/gsciemap.c								
ANR	5003048	Function	LOOKUP_INDEX	50:0:1757:1923							
ANR	5003049	FunctionDef	"LOOKUP_INDEX (cie_cached_value vin , const gx_cie_vector_cache * pcache , int fbits)"		5003048	0					
ANR	5003050	CompoundStatement		53:0:1875:1923	5003048	0					
ANR	5003051	ReturnStatement	"return LOOKUP_INDEX_ ( vin , pcache , fbits ) ;"	54:4:1881:1921	5003048	0	True				
ANR	5003052	CallExpression	"LOOKUP_INDEX_ ( vin , pcache , fbits )"		5003048	0					
ANR	5003053	Callee	LOOKUP_INDEX_		5003048	0					
ANR	5003054	Identifier	LOOKUP_INDEX_		5003048	0					
ANR	5003055	ArgumentList	vin		5003048	1					
ANR	5003056	Argument	vin		5003048	0					
ANR	5003057	Identifier	vin		5003048	0					
ANR	5003058	Argument	pcache		5003048	1					
ANR	5003059	Identifier	pcache		5003048	0					
ANR	5003060	Argument	fbits		5003048	2					
ANR	5003061	Identifier	fbits		5003048	0					
ANR	5003062	ReturnType	static cie_cached_value		5003048	1					
ANR	5003063	Identifier	LOOKUP_INDEX		5003048	2					
ANR	5003064	ParameterList	"cie_cached_value vin , const gx_cie_vector_cache * pcache , int fbits"		5003048	3					
ANR	5003065	Parameter	cie_cached_value vin	51:13:1794:1813	5003048	0	True				
ANR	5003066	ParameterType	cie_cached_value		5003048	0					
ANR	5003067	Identifier	vin		5003048	1					
ANR	5003068	Parameter	const gx_cie_vector_cache * pcache	51:35:1816:1848	5003048	1	True				
ANR	5003069	ParameterType	const gx_cie_vector_cache *		5003048	0					
ANR	5003070	Identifier	pcache		5003048	1					
ANR	5003071	Parameter	int fbits	52:13:1864:1872	5003048	2	True				
ANR	5003072	ParameterType	int		5003048	0					
ANR	5003073	Identifier	fbits		5003048	1					
ANR	5003074	CFGEntryNode	ENTRY		5003048		True				
ANR	5003075	CFGExitNode	EXIT		5003048		True				
ANR	5003076	Symbol	LOOKUP_INDEX_		5003048						
ANR	5003077	Symbol	fbits		5003048						
ANR	5003078	Symbol	vin		5003048						
ANR	5003079	Symbol	pcache		5003048						
ANR	5003080	Function	LOOKUP_ENTRY	56:0:1925:2070							
ANR	5003081	FunctionDef	"LOOKUP_ENTRY (cie_cached_value vin , const gx_cie_vector_cache * pcache)"		5003080	0					
ANR	5003082	CompoundStatement		58:0:2029:2070	5003080	0					
ANR	5003083	ReturnStatement	"return LOOKUP_ENTRY_ ( vin , pcache ) ;"	59:4:2035:2068	5003080	0	True				
ANR	5003084	CallExpression	"LOOKUP_ENTRY_ ( vin , pcache )"		5003080	0					
ANR	5003085	Callee	LOOKUP_ENTRY_		5003080	0					
ANR	5003086	Identifier	LOOKUP_ENTRY_		5003080	0					
ANR	5003087	ArgumentList	vin		5003080	1					
ANR	5003088	Argument	vin		5003080	0					
ANR	5003089	Identifier	vin		5003080	0					
ANR	5003090	Argument	pcache		5003080	1					
ANR	5003091	Identifier	pcache		5003080	0					
ANR	5003092	ReturnType	static const cie_cached_vector3 *		5003080	1					
ANR	5003093	Identifier	LOOKUP_ENTRY		5003080	2					
ANR	5003094	ParameterList	"cie_cached_value vin , const gx_cie_vector_cache * pcache"		5003080	3					
ANR	5003095	Parameter	cie_cached_value vin	57:13:1972:1991	5003080	0	True				
ANR	5003096	ParameterType	cie_cached_value		5003080	0					
ANR	5003097	Identifier	vin		5003080	1					
ANR	5003098	Parameter	const gx_cie_vector_cache * pcache	57:35:1994:2026	5003080	1	True				
ANR	5003099	ParameterType	const gx_cie_vector_cache *		5003080	0					
ANR	5003100	Identifier	pcache		5003080	1					
ANR	5003101	CFGEntryNode	ENTRY		5003080		True				
ANR	5003102	CFGExitNode	EXIT		5003080		True				
ANR	5003103	Symbol	LOOKUP_ENTRY_		5003080						
ANR	5003104	Symbol	vin		5003080						
ANR	5003105	Symbol	pcache		5003080						
ANR	5003106	DeclStmt									
ANR	5003107	Decl							void	"void ( cie_cached_vector3 * , const gx_cie_vector_cache3_t * )"	cie_lookup_mult3
ANR	5003108	Function	cie_lookup_map3	83:0:2813:3337							
ANR	5003109	FunctionDef	"cie_lookup_map3 (cie_cached_vector3 * pvec , const gx_cie_vector_cache3_t * pc , const char * cname)"		5003108	0					
ANR	5003110	CompoundStatement		86:0:2938:3337	5003108	0					
ANR	5003111	ExpressionStatement	"if_debug5 ( 'c' , ""[c]lookup %s 0x%lx [%g %g %g]\\n"" , ( const char * ) cname , ( ulong ) pc , cie_cached2float ( pvec -> u ) , cie_cached2float ( pvec -> v ) , cie_cached2float ( pvec -> w ) )"	87:4:2944:3149	5003108	0	True				
ANR	5003112	CallExpression	"if_debug5 ( 'c' , ""[c]lookup %s 0x%lx [%g %g %g]\\n"" , ( const char * ) cname , ( ulong ) pc , cie_cached2float ( pvec -> u ) , cie_cached2float ( pvec -> v ) , cie_cached2float ( pvec -> w ) )"		5003108	0					
ANR	5003113	Callee	if_debug5		5003108	0					
ANR	5003114	Identifier	if_debug5		5003108	0					
ANR	5003115	ArgumentList	'c'		5003108	1					
ANR	5003116	Argument	'c'		5003108	0					
ANR	5003117	PrimaryExpression	'c'		5003108	0					
ANR	5003118	Argument	"""[c]lookup %s 0x%lx [%g %g %g]\\n"""		5003108	1					
ANR	5003119	PrimaryExpression	"""[c]lookup %s 0x%lx [%g %g %g]\\n"""		5003108	0					
ANR	5003120	Argument	( const char * ) cname		5003108	2					
ANR	5003121	CastExpression	( const char * ) cname		5003108	0					
ANR	5003122	CastTarget	const char *		5003108	0					
ANR	5003123	Identifier	cname		5003108	1					
ANR	5003124	Argument	( ulong ) pc		5003108	3					
ANR	5003125	CastExpression	( ulong ) pc		5003108	0					
ANR	5003126	CastTarget	ulong		5003108	0					
ANR	5003127	Identifier	pc		5003108	1					
ANR	5003128	Argument	cie_cached2float ( pvec -> u )		5003108	4					
ANR	5003129	CallExpression	cie_cached2float ( pvec -> u )		5003108	0					
ANR	5003130	Callee	cie_cached2float		5003108	0					
ANR	5003131	Identifier	cie_cached2float		5003108	0					
ANR	5003132	ArgumentList	pvec -> u		5003108	1					
ANR	5003133	Argument	pvec -> u		5003108	0					
ANR	5003134	PtrMemberAccess	pvec -> u		5003108	0					
ANR	5003135	Identifier	pvec		5003108	0					
ANR	5003136	Identifier	u		5003108	1					
ANR	5003137	Argument	cie_cached2float ( pvec -> v )		5003108	5					
ANR	5003138	CallExpression	cie_cached2float ( pvec -> v )		5003108	0					
ANR	5003139	Callee	cie_cached2float		5003108	0					
ANR	5003140	Identifier	cie_cached2float		5003108	0					
ANR	5003141	ArgumentList	pvec -> v		5003108	1					
ANR	5003142	Argument	pvec -> v		5003108	0					
ANR	5003143	PtrMemberAccess	pvec -> v		5003108	0					
ANR	5003144	Identifier	pvec		5003108	0					
ANR	5003145	Identifier	v		5003108	1					
ANR	5003146	Argument	cie_cached2float ( pvec -> w )		5003108	6					
ANR	5003147	CallExpression	cie_cached2float ( pvec -> w )		5003108	0					
ANR	5003148	Callee	cie_cached2float		5003108	0					
ANR	5003149	Identifier	cie_cached2float		5003108	0					
ANR	5003150	ArgumentList	pvec -> w		5003108	1					
ANR	5003151	Argument	pvec -> w		5003108	0					
ANR	5003152	PtrMemberAccess	pvec -> w		5003108	0					
ANR	5003153	Identifier	pvec		5003108	0					
ANR	5003154	Identifier	w		5003108	1					
ANR	5003155	ExpressionStatement	"cie_lookup_mult3 ( pvec , pc )"	91:4:3155:3181	5003108	1	True				
ANR	5003156	CallExpression	"cie_lookup_mult3 ( pvec , pc )"		5003108	0					
ANR	5003157	Callee	cie_lookup_mult3		5003108	0					
ANR	5003158	Identifier	cie_lookup_mult3		5003108	0					
ANR	5003159	ArgumentList	pvec		5003108	1					
ANR	5003160	Argument	pvec		5003108	0					
ANR	5003161	Identifier	pvec		5003108	0					
ANR	5003162	Argument	pc		5003108	1					
ANR	5003163	Identifier	pc		5003108	0					
ANR	5003164	ExpressionStatement	"if_debug3 ( 'c' , ""        =[%g %g %g]\\n"" , cie_cached2float ( pvec -> u ) , cie_cached2float ( pvec -> v ) , cie_cached2float ( pvec -> w ) )"	92:4:3187:3335	5003108	2	True				
ANR	5003165	CallExpression	"if_debug3 ( 'c' , ""        =[%g %g %g]\\n"" , cie_cached2float ( pvec -> u ) , cie_cached2float ( pvec -> v ) , cie_cached2float ( pvec -> w ) )"		5003108	0					
ANR	5003166	Callee	if_debug3		5003108	0					
ANR	5003167	Identifier	if_debug3		5003108	0					
ANR	5003168	ArgumentList	'c'		5003108	1					
ANR	5003169	Argument	'c'		5003108	0					
ANR	5003170	PrimaryExpression	'c'		5003108	0					
ANR	5003171	Argument	"""        =[%g %g %g]\\n"""		5003108	1					
ANR	5003172	PrimaryExpression	"""        =[%g %g %g]\\n"""		5003108	0					
ANR	5003173	Argument	cie_cached2float ( pvec -> u )		5003108	2					
ANR	5003174	CallExpression	cie_cached2float ( pvec -> u )		5003108	0					
ANR	5003175	Callee	cie_cached2float		5003108	0					
ANR	5003176	Identifier	cie_cached2float		5003108	0					
ANR	5003177	ArgumentList	pvec -> u		5003108	1					
ANR	5003178	Argument	pvec -> u		5003108	0					
ANR	5003179	PtrMemberAccess	pvec -> u		5003108	0					
ANR	5003180	Identifier	pvec		5003108	0					
ANR	5003181	Identifier	u		5003108	1					
ANR	5003182	Argument	cie_cached2float ( pvec -> v )		5003108	3					
ANR	5003183	CallExpression	cie_cached2float ( pvec -> v )		5003108	0					
ANR	5003184	Callee	cie_cached2float		5003108	0					
ANR	5003185	Identifier	cie_cached2float		5003108	0					
ANR	5003186	ArgumentList	pvec -> v		5003108	1					
ANR	5003187	Argument	pvec -> v		5003108	0					
ANR	5003188	PtrMemberAccess	pvec -> v		5003108	0					
ANR	5003189	Identifier	pvec		5003108	0					
ANR	5003190	Identifier	v		5003108	1					
ANR	5003191	Argument	cie_cached2float ( pvec -> w )		5003108	4					
ANR	5003192	CallExpression	cie_cached2float ( pvec -> w )		5003108	0					
ANR	5003193	Callee	cie_cached2float		5003108	0					
ANR	5003194	Identifier	cie_cached2float		5003108	0					
ANR	5003195	ArgumentList	pvec -> w		5003108	1					
ANR	5003196	Argument	pvec -> w		5003108	0					
ANR	5003197	PtrMemberAccess	pvec -> w		5003108	0					
ANR	5003198	Identifier	pvec		5003108	0					
ANR	5003199	Identifier	w		5003108	1					
ANR	5003200	ReturnType	static void		5003108	1					
ANR	5003201	Identifier	cie_lookup_map3		5003108	2					
ANR	5003202	ParameterList	"cie_cached_vector3 * pvec , const gx_cie_vector_cache3_t * pc , const char * cname"		5003108	3					
ANR	5003203	Parameter	cie_cached_vector3 * pvec	84:16:2841:2865	5003108	0	True				
ANR	5003204	ParameterType	cie_cached_vector3 *		5003108	0					
ANR	5003205	Identifier	pvec		5003108	1					
ANR	5003206	Parameter	const gx_cie_vector_cache3_t * pc	85:16:2884:2916	5003108	1	True				
ANR	5003207	ParameterType	const gx_cie_vector_cache3_t *		5003108	0					
ANR	5003208	Identifier	pc		5003108	1					
ANR	5003209	Parameter	const char * cname	85:51:2919:2935	5003108	2	True				
ANR	5003210	ParameterType	const char *		5003108	0					
ANR	5003211	Identifier	cname		5003108	1					
ANR	5003212	CFGEntryNode	ENTRY		5003108		True				
ANR	5003213	CFGExitNode	EXIT		5003108		True				
ANR	5003214	Symbol	pvec		5003108						
ANR	5003215	Symbol	cie_cached2float		5003108						
ANR	5003216	Symbol	pc		5003108						
ANR	5003217	Symbol	cname		5003108						
ANR	5003218	Symbol	* pvec		5003108						
ANR	5003219	Symbol	pvec -> u		5003108						
ANR	5003220	Symbol	pvec -> v		5003108						
ANR	5003221	Symbol	pvec -> w		5003108						
ANR	5003222	Function	check_range	103:0:3575:3802							
ANR	5003223	FunctionDef	"check_range (gs_range * ranges , int num_colorants)"		5003222	0					
ANR	5003224	CompoundStatement		105:0:3629:3802	5003222	0					
ANR	5003225	IdentifierDeclStatement	int k ;	106:4:3635:3640	5003222	0	True				
ANR	5003226	IdentifierDecl	k		5003222	0					
ANR	5003227	IdentifierDeclType	int		5003222	0					
ANR	5003228	Identifier	k		5003222	1					
ANR	5003229	ForStatement	for ( k = 0 ; k < num_colorants ; k ++ )		5003222	1					
ANR	5003230	ForInit	k = 0 ;	108:9:3652:3657	5003222	0	True				
ANR	5003231	AssignmentExpression	k = 0		5003222	0		=			
ANR	5003232	Identifier	k		5003222	0					
ANR	5003233	PrimaryExpression	0		5003222	1					
ANR	5003234	Condition	k < num_colorants	108:16:3659:3675	5003222	1	True				
ANR	5003235	RelationalExpression	k < num_colorants		5003222	0		<			
ANR	5003236	Identifier	k		5003222	0					
ANR	5003237	Identifier	num_colorants		5003222	1					
ANR	5003238	PostIncDecOperationExpression	k ++	108:35:3678:3680	5003222	2	True				
ANR	5003239	Identifier	k		5003222	0					
ANR	5003240	IncDec	++		5003222	1					
ANR	5003241	CompoundStatement		4:40:53:53	5003222	3					
ANR	5003242	IfStatement	if ( ranges [ k ] . rmin != 0 )		5003222	0					
ANR	5003243	Condition	ranges [ k ] . rmin != 0	109:12:3697:3715	5003222	0	True				
ANR	5003244	EqualityExpression	ranges [ k ] . rmin != 0		5003222	0		!=			
ANR	5003245	MemberAccess	ranges [ k ] . rmin		5003222	0					
ANR	5003246	ArrayIndexing	ranges [ k ]		5003222	0					
ANR	5003247	Identifier	ranges		5003222	0					
ANR	5003248	Identifier	k		5003222	1					
ANR	5003249	Identifier	rmin		5003222	1					
ANR	5003250	PrimaryExpression	0		5003222	1					
ANR	5003251	ReturnStatement	return false ;	109:33:3718:3730	5003222	1	True				
ANR	5003252	Identifier	false		5003222	0					
ANR	5003253	IfStatement	if ( ranges [ k ] . rmax != 1 )		5003222	1					
ANR	5003254	Condition	ranges [ k ] . rmax != 1	110:12:3744:3762	5003222	0	True				
ANR	5003255	EqualityExpression	ranges [ k ] . rmax != 1		5003222	0		!=			
ANR	5003256	MemberAccess	ranges [ k ] . rmax		5003222	0					
ANR	5003257	ArrayIndexing	ranges [ k ]		5003222	0					
ANR	5003258	Identifier	ranges		5003222	0					
ANR	5003259	Identifier	k		5003222	1					
ANR	5003260	Identifier	rmax		5003222	1					
ANR	5003261	PrimaryExpression	1		5003222	1					
ANR	5003262	ReturnStatement	return false ;	110:33:3765:3777	5003222	1	True				
ANR	5003263	Identifier	false		5003222	0					
ANR	5003264	ReturnStatement	return true ;	112:4:3789:3800	5003222	2	True				
ANR	5003265	Identifier	true		5003222	0					
ANR	5003266	ReturnType	bool		5003222	1					
ANR	5003267	Identifier	check_range		5003222	2					
ANR	5003268	ParameterList	"gs_range * ranges , int num_colorants"		5003222	3					
ANR	5003269	Parameter	gs_range * ranges	104:12:3592:3607	5003222	0	True				
ANR	5003270	ParameterType	gs_range *		5003222	0					
ANR	5003271	Identifier	ranges		5003222	1					
ANR	5003272	Parameter	int num_colorants	104:30:3610:3626	5003222	1	True				
ANR	5003273	ParameterType	int		5003222	0					
ANR	5003274	Identifier	num_colorants		5003222	1					
ANR	5003275	CFGEntryNode	ENTRY		5003222		True				
ANR	5003276	CFGExitNode	EXIT		5003222		True				
ANR	5003277	Symbol	num_colorants		5003222						
ANR	5003278	Symbol	ranges		5003222						
ANR	5003279	Symbol	ranges [ k ] . rmax		5003222						
ANR	5003280	Symbol	* k		5003222						
ANR	5003281	Symbol	ranges [ k ] . rmin		5003222						
ANR	5003282	Symbol	* ranges		5003222						
ANR	5003283	Symbol	false		5003222						
ANR	5003284	Symbol	true		5003222						
ANR	5003285	Symbol	k		5003222						
ANR	5003286	Function	check_cie_range	116:0:3845:4444							
ANR	5003287	FunctionDef	check_cie_range (const gs_color_space * pcs)		5003286	0					
ANR	5003288	CompoundStatement		118:0:3894:4444	5003286	0					
ANR	5003289	SwitchStatement	switch ( gs_color_space_get_index ( pcs ) )		5003286	0					
ANR	5003290	Condition	gs_color_space_get_index ( pcs )	119:11:3907:3935	5003286	0	True				
ANR	5003291	CallExpression	gs_color_space_get_index ( pcs )		5003286	0					
ANR	5003292	Callee	gs_color_space_get_index		5003286	0					
ANR	5003293	Identifier	gs_color_space_get_index		5003286	0					
ANR	5003294	ArgumentList	pcs		5003286	1					
ANR	5003295	Argument	pcs		5003286	0					
ANR	5003296	Identifier	pcs		5003286	0					
ANR	5003297	CompoundStatement		2:42:43:43	5003286	1					
ANR	5003298	Label	case gs_color_space_index_CIEDEFG :	120:8:3948:3981	5003286	0	True				
ANR	5003299	Identifier	gs_color_space_index_CIEDEFG		5003286	0					
ANR	5003300	ReturnStatement	"return check_range ( & ( pcs -> params . defg -> RangeDEFG . ranges [ 0 ] ) , 4 ) ;"	121:12:3995:4059	5003286	1	True				
ANR	5003301	CallExpression	"check_range ( & ( pcs -> params . defg -> RangeDEFG . ranges [ 0 ] ) , 4 )"		5003286	0					
ANR	5003302	Callee	check_range		5003286	0					
ANR	5003303	Identifier	check_range		5003286	0					
ANR	5003304	ArgumentList	& ( pcs -> params . defg -> RangeDEFG . ranges [ 0 ] )		5003286	1					
ANR	5003305	Argument	& ( pcs -> params . defg -> RangeDEFG . ranges [ 0 ] )		5003286	0					
ANR	5003306	UnaryOperationExpression	& ( pcs -> params . defg -> RangeDEFG . ranges [ 0 ] )		5003286	0					
ANR	5003307	UnaryOperator	&		5003286	0					
ANR	5003308	ArrayIndexing	pcs -> params . defg -> RangeDEFG . ranges [ 0 ]		5003286	1					
ANR	5003309	MemberAccess	pcs -> params . defg -> RangeDEFG . ranges		5003286	0					
ANR	5003310	PtrMemberAccess	pcs -> params . defg -> RangeDEFG		5003286	0					
ANR	5003311	MemberAccess	pcs -> params . defg		5003286	0					
ANR	5003312	PtrMemberAccess	pcs -> params		5003286	0					
ANR	5003313	Identifier	pcs		5003286	0					
ANR	5003314	Identifier	params		5003286	1					
ANR	5003315	Identifier	defg		5003286	1					
ANR	5003316	Identifier	RangeDEFG		5003286	1					
ANR	5003317	Identifier	ranges		5003286	1					
ANR	5003318	PrimaryExpression	0		5003286	1					
ANR	5003319	Argument	4		5003286	1					
ANR	5003320	PrimaryExpression	4		5003286	0					
ANR	5003321	Label	case gs_color_space_index_CIEDEF :	122:8:4069:4101	5003286	2	True				
ANR	5003322	Identifier	gs_color_space_index_CIEDEF		5003286	0					
ANR	5003323	ReturnStatement	"return check_range ( & ( pcs -> params . def -> RangeDEF . ranges [ 0 ] ) , 3 ) ;"	123:12:4115:4176	5003286	3	True				
ANR	5003324	CallExpression	"check_range ( & ( pcs -> params . def -> RangeDEF . ranges [ 0 ] ) , 3 )"		5003286	0					
ANR	5003325	Callee	check_range		5003286	0					
ANR	5003326	Identifier	check_range		5003286	0					
ANR	5003327	ArgumentList	& ( pcs -> params . def -> RangeDEF . ranges [ 0 ] )		5003286	1					
ANR	5003328	Argument	& ( pcs -> params . def -> RangeDEF . ranges [ 0 ] )		5003286	0					
ANR	5003329	UnaryOperationExpression	& ( pcs -> params . def -> RangeDEF . ranges [ 0 ] )		5003286	0					
ANR	5003330	UnaryOperator	&		5003286	0					
ANR	5003331	ArrayIndexing	pcs -> params . def -> RangeDEF . ranges [ 0 ]		5003286	1					
ANR	5003332	MemberAccess	pcs -> params . def -> RangeDEF . ranges		5003286	0					
ANR	5003333	PtrMemberAccess	pcs -> params . def -> RangeDEF		5003286	0					
ANR	5003334	MemberAccess	pcs -> params . def		5003286	0					
ANR	5003335	PtrMemberAccess	pcs -> params		5003286	0					
ANR	5003336	Identifier	pcs		5003286	0					
ANR	5003337	Identifier	params		5003286	1					
ANR	5003338	Identifier	def		5003286	1					
ANR	5003339	Identifier	RangeDEF		5003286	1					
ANR	5003340	Identifier	ranges		5003286	1					
ANR	5003341	PrimaryExpression	0		5003286	1					
ANR	5003342	Argument	3		5003286	1					
ANR	5003343	PrimaryExpression	3		5003286	0					
ANR	5003344	Label	case gs_color_space_index_CIEABC :	124:8:4186:4218	5003286	4	True				
ANR	5003345	Identifier	gs_color_space_index_CIEABC		5003286	0					
ANR	5003346	ReturnStatement	"return check_range ( & ( pcs -> params . abc -> RangeABC . ranges [ 0 ] ) , 3 ) ;"	125:12:4232:4293	5003286	5	True				
ANR	5003347	CallExpression	"check_range ( & ( pcs -> params . abc -> RangeABC . ranges [ 0 ] ) , 3 )"		5003286	0					
ANR	5003348	Callee	check_range		5003286	0					
ANR	5003349	Identifier	check_range		5003286	0					
ANR	5003350	ArgumentList	& ( pcs -> params . abc -> RangeABC . ranges [ 0 ] )		5003286	1					
ANR	5003351	Argument	& ( pcs -> params . abc -> RangeABC . ranges [ 0 ] )		5003286	0					
ANR	5003352	UnaryOperationExpression	& ( pcs -> params . abc -> RangeABC . ranges [ 0 ] )		5003286	0					
ANR	5003353	UnaryOperator	&		5003286	0					
ANR	5003354	ArrayIndexing	pcs -> params . abc -> RangeABC . ranges [ 0 ]		5003286	1					
ANR	5003355	MemberAccess	pcs -> params . abc -> RangeABC . ranges		5003286	0					
ANR	5003356	PtrMemberAccess	pcs -> params . abc -> RangeABC		5003286	0					
ANR	5003357	MemberAccess	pcs -> params . abc		5003286	0					
ANR	5003358	PtrMemberAccess	pcs -> params		5003286	0					
ANR	5003359	Identifier	pcs		5003286	0					
ANR	5003360	Identifier	params		5003286	1					
ANR	5003361	Identifier	abc		5003286	1					
ANR	5003362	Identifier	RangeABC		5003286	1					
ANR	5003363	Identifier	ranges		5003286	1					
ANR	5003364	PrimaryExpression	0		5003286	1					
ANR	5003365	Argument	3		5003286	1					
ANR	5003366	PrimaryExpression	3		5003286	0					
ANR	5003367	Label	case gs_color_space_index_CIEA :	126:8:4303:4333	5003286	6	True				
ANR	5003368	Identifier	gs_color_space_index_CIEA		5003286	0					
ANR	5003369	ReturnStatement	"return check_range ( & ( pcs -> params . a -> RangeA ) , 1 ) ;"	127:12:4347:4394	5003286	7	True				
ANR	5003370	CallExpression	"check_range ( & ( pcs -> params . a -> RangeA ) , 1 )"		5003286	0					
ANR	5003371	Callee	check_range		5003286	0					
ANR	5003372	Identifier	check_range		5003286	0					
ANR	5003373	ArgumentList	& ( pcs -> params . a -> RangeA )		5003286	1					
ANR	5003374	Argument	& ( pcs -> params . a -> RangeA )		5003286	0					
ANR	5003375	UnaryOperationExpression	& ( pcs -> params . a -> RangeA )		5003286	0					
ANR	5003376	UnaryOperator	&		5003286	0					
ANR	5003377	PtrMemberAccess	pcs -> params . a -> RangeA		5003286	1					
ANR	5003378	MemberAccess	pcs -> params . a		5003286	0					
ANR	5003379	PtrMemberAccess	pcs -> params		5003286	0					
ANR	5003380	Identifier	pcs		5003286	0					
ANR	5003381	Identifier	params		5003286	1					
ANR	5003382	Identifier	a		5003286	1					
ANR	5003383	Identifier	RangeA		5003286	1					
ANR	5003384	Argument	1		5003286	1					
ANR	5003385	PrimaryExpression	1		5003286	0					
ANR	5003386	Label	default :	128:8:4404:4411	5003286	8	True				
ANR	5003387	Identifier	default		5003286	0					
ANR	5003388	ReturnStatement	return true ;	129:12:4425:4436	5003286	9	True				
ANR	5003389	Identifier	true		5003286	0					
ANR	5003390	ReturnType	bool		5003286	1					
ANR	5003391	Identifier	check_cie_range		5003286	2					
ANR	5003392	ParameterList	const gs_color_space * pcs		5003286	3					
ANR	5003393	Parameter	const gs_color_space * pcs	117:16:3866:3891	5003286	0	True				
ANR	5003394	ParameterType	const gs_color_space *		5003286	0					
ANR	5003395	Identifier	pcs		5003286	1					
ANR	5003396	CFGEntryNode	ENTRY		5003286		True				
ANR	5003397	CFGExitNode	EXIT		5003286		True				
ANR	5003398	Symbol	check_range		5003286						
ANR	5003399	Symbol	pcs -> params . abc -> RangeABC . ranges		5003286						
ANR	5003400	Symbol	pcs		5003286						
ANR	5003401	Symbol	pcs -> params . abc -> RangeABC		5003286						
ANR	5003402	Symbol	* pcs -> params . defg		5003286						
ANR	5003403	Symbol	pcs -> params . defg -> RangeDEFG		5003286						
ANR	5003404	Symbol	pcs -> params . def		5003286						
ANR	5003405	Symbol	& pcs -> params . a -> RangeA		5003286						
ANR	5003406	Symbol	pcs -> params . defg -> RangeDEFG . ranges		5003286						
ANR	5003407	Symbol	pcs -> params		5003286						
ANR	5003408	Symbol	* pcs		5003286						
ANR	5003409	Symbol	* pcs -> params . def		5003286						
ANR	5003410	Symbol	pcs -> params . abc		5003286						
ANR	5003411	Symbol	pcs -> params . def -> RangeDEF		5003286						
ANR	5003412	Symbol	pcs -> params . def -> RangeDEF . ranges		5003286						
ANR	5003413	Symbol	* pcs -> params . abc		5003286						
ANR	5003414	Symbol	* * pcs		5003286						
ANR	5003415	Symbol	* pcs -> params		5003286						
ANR	5003416	Symbol	pcs -> params . defg		5003286						
ANR	5003417	Symbol	true		5003286						
ANR	5003418	Symbol	pcs -> params . a		5003286						
ANR	5003419	Symbol	gs_color_space_get_index		5003286						
ANR	5003420	Function	get_cie_range	133:0:4447:4984							
ANR	5003421	FunctionDef	get_cie_range (const gs_color_space * pcs)		5003420	0					
ANR	5003422	CompoundStatement		135:0:4499:4984	5003420	0					
ANR	5003423	SwitchStatement	switch ( gs_color_space_get_index ( pcs ) )		5003420	0					
ANR	5003424	Condition	gs_color_space_get_index ( pcs )	136:11:4512:4540	5003420	0	True				
ANR	5003425	CallExpression	gs_color_space_get_index ( pcs )		5003420	0					
ANR	5003426	Callee	gs_color_space_get_index		5003420	0					
ANR	5003427	Identifier	gs_color_space_get_index		5003420	0					
ANR	5003428	ArgumentList	pcs		5003420	1					
ANR	5003429	Argument	pcs		5003420	0					
ANR	5003430	Identifier	pcs		5003420	0					
ANR	5003431	CompoundStatement		2:42:43:43	5003420	1					
ANR	5003432	Label	case gs_color_space_index_CIEDEFG :	137:8:4553:4586	5003420	0	True				
ANR	5003433	Identifier	gs_color_space_index_CIEDEFG		5003420	0					
ANR	5003434	ReturnStatement	return & ( pcs -> params . defg -> RangeDEFG . ranges [ 0 ] ) ;	138:12:4600:4647	5003420	1	True				
ANR	5003435	UnaryOperationExpression	& ( pcs -> params . defg -> RangeDEFG . ranges [ 0 ] )		5003420	0					
ANR	5003436	UnaryOperator	&		5003420	0					
ANR	5003437	ArrayIndexing	pcs -> params . defg -> RangeDEFG . ranges [ 0 ]		5003420	1					
ANR	5003438	MemberAccess	pcs -> params . defg -> RangeDEFG . ranges		5003420	0					
ANR	5003439	PtrMemberAccess	pcs -> params . defg -> RangeDEFG		5003420	0					
ANR	5003440	MemberAccess	pcs -> params . defg		5003420	0					
ANR	5003441	PtrMemberAccess	pcs -> params		5003420	0					
ANR	5003442	Identifier	pcs		5003420	0					
ANR	5003443	Identifier	params		5003420	1					
ANR	5003444	Identifier	defg		5003420	1					
ANR	5003445	Identifier	RangeDEFG		5003420	1					
ANR	5003446	Identifier	ranges		5003420	1					
ANR	5003447	PrimaryExpression	0		5003420	1					
ANR	5003448	Label	case gs_color_space_index_CIEDEF :	139:8:4657:4689	5003420	2	True				
ANR	5003449	Identifier	gs_color_space_index_CIEDEF		5003420	0					
ANR	5003450	ReturnStatement	return & ( pcs -> params . def -> RangeDEF . ranges [ 0 ] ) ;	140:12:4703:4748	5003420	3	True				
ANR	5003451	UnaryOperationExpression	& ( pcs -> params . def -> RangeDEF . ranges [ 0 ] )		5003420	0					
ANR	5003452	UnaryOperator	&		5003420	0					
ANR	5003453	ArrayIndexing	pcs -> params . def -> RangeDEF . ranges [ 0 ]		5003420	1					
ANR	5003454	MemberAccess	pcs -> params . def -> RangeDEF . ranges		5003420	0					
ANR	5003455	PtrMemberAccess	pcs -> params . def -> RangeDEF		5003420	0					
ANR	5003456	MemberAccess	pcs -> params . def		5003420	0					
ANR	5003457	PtrMemberAccess	pcs -> params		5003420	0					
ANR	5003458	Identifier	pcs		5003420	0					
ANR	5003459	Identifier	params		5003420	1					
ANR	5003460	Identifier	def		5003420	1					
ANR	5003461	Identifier	RangeDEF		5003420	1					
ANR	5003462	Identifier	ranges		5003420	1					
ANR	5003463	PrimaryExpression	0		5003420	1					
ANR	5003464	Label	case gs_color_space_index_CIEABC :	141:8:4758:4790	5003420	4	True				
ANR	5003465	Identifier	gs_color_space_index_CIEABC		5003420	0					
ANR	5003466	ReturnStatement	return & ( pcs -> params . abc -> RangeABC . ranges [ 0 ] ) ;	142:12:4804:4849	5003420	5	True				
ANR	5003467	UnaryOperationExpression	& ( pcs -> params . abc -> RangeABC . ranges [ 0 ] )		5003420	0					
ANR	5003468	UnaryOperator	&		5003420	0					
ANR	5003469	ArrayIndexing	pcs -> params . abc -> RangeABC . ranges [ 0 ]		5003420	1					
ANR	5003470	MemberAccess	pcs -> params . abc -> RangeABC . ranges		5003420	0					
ANR	5003471	PtrMemberAccess	pcs -> params . abc -> RangeABC		5003420	0					
ANR	5003472	MemberAccess	pcs -> params . abc		5003420	0					
ANR	5003473	PtrMemberAccess	pcs -> params		5003420	0					
ANR	5003474	Identifier	pcs		5003420	0					
ANR	5003475	Identifier	params		5003420	1					
ANR	5003476	Identifier	abc		5003420	1					
ANR	5003477	Identifier	RangeABC		5003420	1					
ANR	5003478	Identifier	ranges		5003420	1					
ANR	5003479	PrimaryExpression	0		5003420	1					
ANR	5003480	Label	case gs_color_space_index_CIEA :	143:8:4859:4889	5003420	6	True				
ANR	5003481	Identifier	gs_color_space_index_CIEA		5003420	0					
ANR	5003482	ReturnStatement	return & ( pcs -> params . a -> RangeA ) ;	144:12:4903:4934	5003420	7	True				
ANR	5003483	UnaryOperationExpression	& ( pcs -> params . a -> RangeA )		5003420	0					
ANR	5003484	UnaryOperator	&		5003420	0					
ANR	5003485	PtrMemberAccess	pcs -> params . a -> RangeA		5003420	1					
ANR	5003486	MemberAccess	pcs -> params . a		5003420	0					
ANR	5003487	PtrMemberAccess	pcs -> params		5003420	0					
ANR	5003488	Identifier	pcs		5003420	0					
ANR	5003489	Identifier	params		5003420	1					
ANR	5003490	Identifier	a		5003420	1					
ANR	5003491	Identifier	RangeA		5003420	1					
ANR	5003492	Label	default :	145:8:4944:4951	5003420	8	True				
ANR	5003493	Identifier	default		5003420	0					
ANR	5003494	ReturnStatement	return NULL ;	146:12:4965:4976	5003420	9	True				
ANR	5003495	Identifier	NULL		5003420	0					
ANR	5003496	ReturnType	gs_range *		5003420	1					
ANR	5003497	Identifier	get_cie_range		5003420	2					
ANR	5003498	ParameterList	const gs_color_space * pcs		5003420	3					
ANR	5003499	Parameter	const gs_color_space * pcs	134:14:4471:4496	5003420	0	True				
ANR	5003500	ParameterType	const gs_color_space *		5003420	0					
ANR	5003501	Identifier	pcs		5003420	1					
ANR	5003502	CFGEntryNode	ENTRY		5003420		True				
ANR	5003503	CFGExitNode	EXIT		5003420		True				
ANR	5003504	Symbol	pcs -> params . abc -> RangeABC . ranges		5003420						
ANR	5003505	Symbol	pcs		5003420						
ANR	5003506	Symbol	pcs -> params . abc -> RangeABC		5003420						
ANR	5003507	Symbol	pcs -> params . defg -> RangeDEFG		5003420						
ANR	5003508	Symbol	* pcs -> params . defg		5003420						
ANR	5003509	Symbol	pcs -> params . def		5003420						
ANR	5003510	Symbol	NULL		5003420						
ANR	5003511	Symbol	& pcs -> params . a -> RangeA		5003420						
ANR	5003512	Symbol	pcs -> params . defg -> RangeDEFG . ranges		5003420						
ANR	5003513	Symbol	pcs -> params		5003420						
ANR	5003514	Symbol	* pcs		5003420						
ANR	5003515	Symbol	* pcs -> params . def		5003420						
ANR	5003516	Symbol	pcs -> params . abc		5003420						
ANR	5003517	Symbol	pcs -> params . def -> RangeDEF		5003420						
ANR	5003518	Symbol	pcs -> params . def -> RangeDEF . ranges		5003420						
ANR	5003519	Symbol	* pcs -> params . abc		5003420						
ANR	5003520	Symbol	* pcs -> params		5003420						
ANR	5003521	Symbol	* * pcs		5003420						
ANR	5003522	Symbol	pcs -> params . defg		5003420						
ANR	5003523	Symbol	pcs -> params . a		5003420						
ANR	5003524	Symbol	gs_color_space_get_index		5003420						
ANR	5003525	Function	rescale_input_color	150:0:4987:5327							
ANR	5003526	FunctionDef	"rescale_input_color (gs_range * ranges , int num_colorants , const gs_client_color * src , gs_client_color * des)"		5003525	0					
ANR	5003527	CompoundStatement		153:0:5126:5327	5003525	0					
ANR	5003528	IdentifierDeclStatement	int k ;	154:4:5132:5137	5003525	0	True				
ANR	5003529	IdentifierDecl	k		5003525	0					
ANR	5003530	IdentifierDeclType	int		5003525	0					
ANR	5003531	Identifier	k		5003525	1					
ANR	5003532	ForStatement	for ( k = 0 ; k < num_colorants ; k ++ )		5003525	1					
ANR	5003533	ForInit	k = 0 ;	156:9:5149:5154	5003525	0	True				
ANR	5003534	AssignmentExpression	k = 0		5003525	0		=			
ANR	5003535	Identifier	k		5003525	0					
ANR	5003536	PrimaryExpression	0		5003525	1					
ANR	5003537	Condition	k < num_colorants	156:16:5156:5172	5003525	1	True				
ANR	5003538	RelationalExpression	k < num_colorants		5003525	0		<			
ANR	5003539	Identifier	k		5003525	0					
ANR	5003540	Identifier	num_colorants		5003525	1					
ANR	5003541	PostIncDecOperationExpression	k ++	156:35:5175:5177	5003525	2	True				
ANR	5003542	Identifier	k		5003525	0					
ANR	5003543	IncDec	++		5003525	1					
ANR	5003544	CompoundStatement		4:40:53:53	5003525	3					
ANR	5003545	ExpressionStatement	des -> paint . values [ k ] = ( src -> paint . values [ k ] - ranges [ k ] . rmin ) / ( ranges [ k ] . rmax - ranges [ k ] . rmin )	157:8:5190:5319	5003525	0	True				
ANR	5003546	AssignmentExpression	des -> paint . values [ k ] = ( src -> paint . values [ k ] - ranges [ k ] . rmin ) / ( ranges [ k ] . rmax - ranges [ k ] . rmin )		5003525	0		=			
ANR	5003547	ArrayIndexing	des -> paint . values [ k ]		5003525	0					
ANR	5003548	MemberAccess	des -> paint . values		5003525	0					
ANR	5003549	PtrMemberAccess	des -> paint		5003525	0					
ANR	5003550	Identifier	des		5003525	0					
ANR	5003551	Identifier	paint		5003525	1					
ANR	5003552	Identifier	values		5003525	1					
ANR	5003553	Identifier	k		5003525	1					
ANR	5003554	MultiplicativeExpression	( src -> paint . values [ k ] - ranges [ k ] . rmin ) / ( ranges [ k ] . rmax - ranges [ k ] . rmin )		5003525	1		/			
ANR	5003555	AdditiveExpression	src -> paint . values [ k ] - ranges [ k ] . rmin		5003525	0		-			
ANR	5003556	ArrayIndexing	src -> paint . values [ k ]		5003525	0					
ANR	5003557	MemberAccess	src -> paint . values		5003525	0					
ANR	5003558	PtrMemberAccess	src -> paint		5003525	0					
ANR	5003559	Identifier	src		5003525	0					
ANR	5003560	Identifier	paint		5003525	1					
ANR	5003561	Identifier	values		5003525	1					
ANR	5003562	Identifier	k		5003525	1					
ANR	5003563	MemberAccess	ranges [ k ] . rmin		5003525	1					
ANR	5003564	ArrayIndexing	ranges [ k ]		5003525	0					
ANR	5003565	Identifier	ranges		5003525	0					
ANR	5003566	Identifier	k		5003525	1					
ANR	5003567	Identifier	rmin		5003525	1					
ANR	5003568	AdditiveExpression	ranges [ k ] . rmax - ranges [ k ] . rmin		5003525	1		-			
ANR	5003569	MemberAccess	ranges [ k ] . rmax		5003525	0					
ANR	5003570	ArrayIndexing	ranges [ k ]		5003525	0					
ANR	5003571	Identifier	ranges		5003525	0					
ANR	5003572	Identifier	k		5003525	1					
ANR	5003573	Identifier	rmax		5003525	1					
ANR	5003574	MemberAccess	ranges [ k ] . rmin		5003525	1					
ANR	5003575	ArrayIndexing	ranges [ k ]		5003525	0					
ANR	5003576	Identifier	ranges		5003525	0					
ANR	5003577	Identifier	k		5003525	1					
ANR	5003578	Identifier	rmin		5003525	1					
ANR	5003579	ReturnType	static void		5003525	1					
ANR	5003580	Identifier	rescale_input_color		5003525	2					
ANR	5003581	ParameterList	"gs_range * ranges , int num_colorants , const gs_client_color * src , gs_client_color * des"		5003525	3					
ANR	5003582	Parameter	gs_range * ranges	151:20:5019:5034	5003525	0	True				
ANR	5003583	ParameterType	gs_range *		5003525	0					
ANR	5003584	Identifier	ranges		5003525	1					
ANR	5003585	Parameter	int num_colorants	151:38:5037:5053	5003525	1	True				
ANR	5003586	ParameterType	int		5003525	0					
ANR	5003587	Identifier	num_colorants		5003525	1					
ANR	5003588	Parameter	const gs_client_color * src	152:20:5076:5101	5003525	2	True				
ANR	5003589	ParameterType	const gs_client_color *		5003525	0					
ANR	5003590	Identifier	src		5003525	1					
ANR	5003591	Parameter	gs_client_color * des	152:48:5104:5123	5003525	3	True				
ANR	5003592	ParameterType	gs_client_color *		5003525	0					
ANR	5003593	Identifier	des		5003525	1					
ANR	5003594	CFGEntryNode	ENTRY		5003525		True				
ANR	5003595	CFGExitNode	EXIT		5003525		True				
ANR	5003596	Symbol	num_colorants		5003525						
ANR	5003597	Symbol	* des		5003525						
ANR	5003598	Symbol	ranges		5003525						
ANR	5003599	Symbol	ranges [ k ] . rmax		5003525						
ANR	5003600	Symbol	src		5003525						
ANR	5003601	Symbol	src -> paint . values		5003525						
ANR	5003602	Symbol	* src -> paint		5003525						
ANR	5003603	Symbol	* * des		5003525						
ANR	5003604	Symbol	* ranges		5003525						
ANR	5003605	Symbol	des -> paint		5003525						
ANR	5003606	Symbol	src -> paint		5003525						
ANR	5003607	Symbol	k		5003525						
ANR	5003608	Symbol	* des -> paint		5003525						
ANR	5003609	Symbol	* src		5003525						
ANR	5003610	Symbol	des		5003525						
ANR	5003611	Symbol	des -> paint . values		5003525						
ANR	5003612	Symbol	* k		5003525						
ANR	5003613	Symbol	* src -> paint . values		5003525						
ANR	5003614	Symbol	ranges [ k ] . rmin		5003525						
ANR	5003615	Symbol	* * src		5003525						
ANR	5003616	Symbol	* des -> paint . values		5003525						
ANR	5003617	Function	rescale_cie_colors	163:0:5369:6485							
ANR	5003618	FunctionDef	"rescale_cie_colors (const gs_color_space * pcs , gs_client_color * cc)"		5003617	0					
ANR	5003619	CompoundStatement		165:0:5442:6485	5003617	0					
ANR	5003620	IdentifierDeclStatement	"int num , k ;"	166:4:5448:5458	5003617	0	True				
ANR	5003621	IdentifierDecl	num		5003617	0					
ANR	5003622	IdentifierDeclType	int		5003617	0					
ANR	5003623	Identifier	num		5003617	1					
ANR	5003624	IdentifierDecl	k		5003617	1					
ANR	5003625	IdentifierDeclType	int		5003617	0					
ANR	5003626	Identifier	k		5003617	1					
ANR	5003627	IdentifierDeclStatement	gs_range * ranges ;	167:4:5464:5480	5003617	1	True				
ANR	5003628	IdentifierDecl	* ranges		5003617	0					
ANR	5003629	IdentifierDeclType	gs_range *		5003617	0					
ANR	5003630	Identifier	ranges		5003617	1					
ANR	5003631	IfStatement	if ( ! check_cie_range ( pcs ) )		5003617	2					
ANR	5003632	Condition	! check_cie_range ( pcs )	169:8:5491:5511	5003617	0	True				
ANR	5003633	UnaryOperationExpression	! check_cie_range ( pcs )		5003617	0					
ANR	5003634	UnaryOperator	!		5003617	0					
ANR	5003635	CallExpression	check_cie_range ( pcs )		5003617	1					
ANR	5003636	Callee	check_cie_range		5003617	0					
ANR	5003637	Identifier	check_cie_range		5003617	0					
ANR	5003638	ArgumentList	pcs		5003617	1					
ANR	5003639	Argument	pcs		5003617	0					
ANR	5003640	Identifier	pcs		5003617	0					
ANR	5003641	CompoundStatement		5:31:71:71	5003617	1					
ANR	5003642	SwitchStatement	switch ( gs_color_space_get_index ( pcs ) )		5003617	0					
ANR	5003643	Condition	gs_color_space_get_index ( pcs )	170:15:5531:5559	5003617	0	True				
ANR	5003644	CallExpression	gs_color_space_get_index ( pcs )		5003617	0					
ANR	5003645	Callee	gs_color_space_get_index		5003617	0					
ANR	5003646	Identifier	gs_color_space_get_index		5003617	0					
ANR	5003647	ArgumentList	pcs		5003617	1					
ANR	5003648	Argument	pcs		5003617	0					
ANR	5003649	Identifier	pcs		5003617	0					
ANR	5003650	CompoundStatement		6:46:119:119	5003617	1					
ANR	5003651	Label	case gs_color_space_index_CIEDEFG :	171:12:5576:5609	5003617	0	True				
ANR	5003652	Identifier	gs_color_space_index_CIEDEFG		5003617	0					
ANR	5003653	ExpressionStatement	num = 4	172:16:5627:5634	5003617	1	True				
ANR	5003654	AssignmentExpression	num = 4		5003617	0		=			
ANR	5003655	Identifier	num		5003617	0					
ANR	5003656	PrimaryExpression	4		5003617	1					
ANR	5003657	ExpressionStatement	ranges = & ( pcs -> params . defg -> RangeDEFG . ranges [ 0 ] )	173:16:5652:5701	5003617	2	True				
ANR	5003658	AssignmentExpression	ranges = & ( pcs -> params . defg -> RangeDEFG . ranges [ 0 ] )		5003617	0		=			
ANR	5003659	Identifier	ranges		5003617	0					
ANR	5003660	UnaryOperationExpression	& ( pcs -> params . defg -> RangeDEFG . ranges [ 0 ] )		5003617	1					
ANR	5003661	UnaryOperator	&		5003617	0					
ANR	5003662	ArrayIndexing	pcs -> params . defg -> RangeDEFG . ranges [ 0 ]		5003617	1					
ANR	5003663	MemberAccess	pcs -> params . defg -> RangeDEFG . ranges		5003617	0					
ANR	5003664	PtrMemberAccess	pcs -> params . defg -> RangeDEFG		5003617	0					
ANR	5003665	MemberAccess	pcs -> params . defg		5003617	0					
ANR	5003666	PtrMemberAccess	pcs -> params		5003617	0					
ANR	5003667	Identifier	pcs		5003617	0					
ANR	5003668	Identifier	params		5003617	1					
ANR	5003669	Identifier	defg		5003617	1					
ANR	5003670	Identifier	RangeDEFG		5003617	1					
ANR	5003671	Identifier	ranges		5003617	1					
ANR	5003672	PrimaryExpression	0		5003617	1					
ANR	5003673	BreakStatement	break ;	174:16:5719:5724	5003617	3	True				
ANR	5003674	Label	case gs_color_space_index_CIEDEF :	175:12:5738:5770	5003617	4	True				
ANR	5003675	Identifier	gs_color_space_index_CIEDEF		5003617	0					
ANR	5003676	ExpressionStatement	num = 3	176:16:5788:5795	5003617	5	True				
ANR	5003677	AssignmentExpression	num = 3		5003617	0		=			
ANR	5003678	Identifier	num		5003617	0					
ANR	5003679	PrimaryExpression	3		5003617	1					
ANR	5003680	ExpressionStatement	ranges = & ( pcs -> params . def -> RangeDEF . ranges [ 0 ] )	177:16:5813:5860	5003617	6	True				
ANR	5003681	AssignmentExpression	ranges = & ( pcs -> params . def -> RangeDEF . ranges [ 0 ] )		5003617	0		=			
ANR	5003682	Identifier	ranges		5003617	0					
ANR	5003683	UnaryOperationExpression	& ( pcs -> params . def -> RangeDEF . ranges [ 0 ] )		5003617	1					
ANR	5003684	UnaryOperator	&		5003617	0					
ANR	5003685	ArrayIndexing	pcs -> params . def -> RangeDEF . ranges [ 0 ]		5003617	1					
ANR	5003686	MemberAccess	pcs -> params . def -> RangeDEF . ranges		5003617	0					
ANR	5003687	PtrMemberAccess	pcs -> params . def -> RangeDEF		5003617	0					
ANR	5003688	MemberAccess	pcs -> params . def		5003617	0					
ANR	5003689	PtrMemberAccess	pcs -> params		5003617	0					
ANR	5003690	Identifier	pcs		5003617	0					
ANR	5003691	Identifier	params		5003617	1					
ANR	5003692	Identifier	def		5003617	1					
ANR	5003693	Identifier	RangeDEF		5003617	1					
ANR	5003694	Identifier	ranges		5003617	1					
ANR	5003695	PrimaryExpression	0		5003617	1					
ANR	5003696	BreakStatement	break ;	178:16:5878:5883	5003617	7	True				
ANR	5003697	Label	case gs_color_space_index_CIEABC :	179:12:5897:5929	5003617	8	True				
ANR	5003698	Identifier	gs_color_space_index_CIEABC		5003617	0					
ANR	5003699	ExpressionStatement	num = 3	180:16:5947:5954	5003617	9	True				
ANR	5003700	AssignmentExpression	num = 3		5003617	0		=			
ANR	5003701	Identifier	num		5003617	0					
ANR	5003702	PrimaryExpression	3		5003617	1					
ANR	5003703	ExpressionStatement	ranges = & ( pcs -> params . abc -> RangeABC . ranges [ 0 ] )	181:16:5972:6019	5003617	10	True				
ANR	5003704	AssignmentExpression	ranges = & ( pcs -> params . abc -> RangeABC . ranges [ 0 ] )		5003617	0		=			
ANR	5003705	Identifier	ranges		5003617	0					
ANR	5003706	UnaryOperationExpression	& ( pcs -> params . abc -> RangeABC . ranges [ 0 ] )		5003617	1					
ANR	5003707	UnaryOperator	&		5003617	0					
ANR	5003708	ArrayIndexing	pcs -> params . abc -> RangeABC . ranges [ 0 ]		5003617	1					
ANR	5003709	MemberAccess	pcs -> params . abc -> RangeABC . ranges		5003617	0					
ANR	5003710	PtrMemberAccess	pcs -> params . abc -> RangeABC		5003617	0					
ANR	5003711	MemberAccess	pcs -> params . abc		5003617	0					
ANR	5003712	PtrMemberAccess	pcs -> params		5003617	0					
ANR	5003713	Identifier	pcs		5003617	0					
ANR	5003714	Identifier	params		5003617	1					
ANR	5003715	Identifier	abc		5003617	1					
ANR	5003716	Identifier	RangeABC		5003617	1					
ANR	5003717	Identifier	ranges		5003617	1					
ANR	5003718	PrimaryExpression	0		5003617	1					
ANR	5003719	BreakStatement	break ;	182:16:6037:6042	5003617	11	True				
ANR	5003720	Label	case gs_color_space_index_CIEA :	183:12:6056:6086	5003617	12	True				
ANR	5003721	Identifier	gs_color_space_index_CIEA		5003617	0					
ANR	5003722	ExpressionStatement	num = 1	184:16:6104:6111	5003617	13	True				
ANR	5003723	AssignmentExpression	num = 1		5003617	0		=			
ANR	5003724	Identifier	num		5003617	0					
ANR	5003725	PrimaryExpression	1		5003617	1					
ANR	5003726	ExpressionStatement	ranges = & ( pcs -> params . a -> RangeA )	185:16:6129:6162	5003617	14	True				
ANR	5003727	AssignmentExpression	ranges = & ( pcs -> params . a -> RangeA )		5003617	0		=			
ANR	5003728	Identifier	ranges		5003617	0					
ANR	5003729	UnaryOperationExpression	& ( pcs -> params . a -> RangeA )		5003617	1					
ANR	5003730	UnaryOperator	&		5003617	0					
ANR	5003731	PtrMemberAccess	pcs -> params . a -> RangeA		5003617	1					
ANR	5003732	MemberAccess	pcs -> params . a		5003617	0					
ANR	5003733	PtrMemberAccess	pcs -> params		5003617	0					
ANR	5003734	Identifier	pcs		5003617	0					
ANR	5003735	Identifier	params		5003617	1					
ANR	5003736	Identifier	a		5003617	1					
ANR	5003737	Identifier	RangeA		5003617	1					
ANR	5003738	BreakStatement	break ;	186:16:6180:6185	5003617	15	True				
ANR	5003739	Label	default :	187:12:6199:6206	5003617	16	True				
ANR	5003740	Identifier	default		5003617	0					
ANR	5003741	ReturnStatement	return false ;	188:16:6224:6236	5003617	17	True				
ANR	5003742	Identifier	false		5003617	0					
ANR	5003743	ForStatement	for ( k = 0 ; k < num ; k ++ )		5003617	1					
ANR	5003744	ForInit	k = 0 ;	190:13:6261:6266	5003617	0	True				
ANR	5003745	AssignmentExpression	k = 0		5003617	0		=			
ANR	5003746	Identifier	k		5003617	0					
ANR	5003747	PrimaryExpression	0		5003617	1					
ANR	5003748	Condition	k < num	190:20:6268:6274	5003617	1	True				
ANR	5003749	RelationalExpression	k < num		5003617	0		<			
ANR	5003750	Identifier	k		5003617	0					
ANR	5003751	Identifier	num		5003617	1					
ANR	5003752	PostIncDecOperationExpression	k ++	190:29:6277:6279	5003617	2	True				
ANR	5003753	Identifier	k		5003617	0					
ANR	5003754	IncDec	++		5003617	1					
ANR	5003755	CompoundStatement		26:34:839:839	5003617	3					
ANR	5003756	ExpressionStatement	cc -> paint . values [ k ] = ( cc -> paint . values [ k ] - ranges [ k ] . rmin ) / ( ranges [ k ] . rmax - ranges [ k ] . rmin )	191:12:6296:6428	5003617	0	True				
ANR	5003757	AssignmentExpression	cc -> paint . values [ k ] = ( cc -> paint . values [ k ] - ranges [ k ] . rmin ) / ( ranges [ k ] . rmax - ranges [ k ] . rmin )		5003617	0		=			
ANR	5003758	ArrayIndexing	cc -> paint . values [ k ]		5003617	0					
ANR	5003759	MemberAccess	cc -> paint . values		5003617	0					
ANR	5003760	PtrMemberAccess	cc -> paint		5003617	0					
ANR	5003761	Identifier	cc		5003617	0					
ANR	5003762	Identifier	paint		5003617	1					
ANR	5003763	Identifier	values		5003617	1					
ANR	5003764	Identifier	k		5003617	1					
ANR	5003765	MultiplicativeExpression	( cc -> paint . values [ k ] - ranges [ k ] . rmin ) / ( ranges [ k ] . rmax - ranges [ k ] . rmin )		5003617	1		/			
ANR	5003766	AdditiveExpression	cc -> paint . values [ k ] - ranges [ k ] . rmin		5003617	0		-			
ANR	5003767	ArrayIndexing	cc -> paint . values [ k ]		5003617	0					
ANR	5003768	MemberAccess	cc -> paint . values		5003617	0					
ANR	5003769	PtrMemberAccess	cc -> paint		5003617	0					
ANR	5003770	Identifier	cc		5003617	0					
ANR	5003771	Identifier	paint		5003617	1					
ANR	5003772	Identifier	values		5003617	1					
ANR	5003773	Identifier	k		5003617	1					
ANR	5003774	MemberAccess	ranges [ k ] . rmin		5003617	1					
ANR	5003775	ArrayIndexing	ranges [ k ]		5003617	0					
ANR	5003776	Identifier	ranges		5003617	0					
ANR	5003777	Identifier	k		5003617	1					
ANR	5003778	Identifier	rmin		5003617	1					
ANR	5003779	AdditiveExpression	ranges [ k ] . rmax - ranges [ k ] . rmin		5003617	1		-			
ANR	5003780	MemberAccess	ranges [ k ] . rmax		5003617	0					
ANR	5003781	ArrayIndexing	ranges [ k ]		5003617	0					
ANR	5003782	Identifier	ranges		5003617	0					
ANR	5003783	Identifier	k		5003617	1					
ANR	5003784	Identifier	rmax		5003617	1					
ANR	5003785	MemberAccess	ranges [ k ] . rmin		5003617	1					
ANR	5003786	ArrayIndexing	ranges [ k ]		5003617	0					
ANR	5003787	Identifier	ranges		5003617	0					
ANR	5003788	Identifier	k		5003617	1					
ANR	5003789	Identifier	rmin		5003617	1					
ANR	5003790	ReturnStatement	return true ;	194:8:6448:6459	5003617	2	True				
ANR	5003791	Identifier	true		5003617	0					
ANR	5003792	ReturnStatement	return false ;	196:4:6471:6483	5003617	3	True				
ANR	5003793	Identifier	false		5003617	0					
ANR	5003794	ReturnType	bool		5003617	1					
ANR	5003795	Identifier	rescale_cie_colors		5003617	2					
ANR	5003796	ParameterList	"const gs_color_space * pcs , gs_client_color * cc"		5003617	3					
ANR	5003797	Parameter	const gs_color_space * pcs	164:19:5393:5418	5003617	0	True				
ANR	5003798	ParameterType	const gs_color_space *		5003617	0					
ANR	5003799	Identifier	pcs		5003617	1					
ANR	5003800	Parameter	gs_client_color * cc	164:47:5421:5439	5003617	1	True				
ANR	5003801	ParameterType	gs_client_color *		5003617	0					
ANR	5003802	Identifier	cc		5003617	1					
ANR	5003803	CFGEntryNode	ENTRY		5003617		True				
ANR	5003804	CFGExitNode	EXIT		5003617		True				
ANR	5003805	Symbol	pcs -> params . abc -> RangeABC . ranges		5003617						
ANR	5003806	Symbol	pcs -> params . abc -> RangeABC		5003617						
ANR	5003807	Symbol	* pcs -> params . defg		5003617						
ANR	5003808	Symbol	ranges		5003617						
ANR	5003809	Symbol	& pcs -> params . a -> RangeA		5003617						
ANR	5003810	Symbol	* cc		5003617						
ANR	5003811	Symbol	num		5003617						
ANR	5003812	Symbol	* ranges		5003617						
ANR	5003813	Symbol	* pcs		5003617						
ANR	5003814	Symbol	pcs -> params . abc		5003617						
ANR	5003815	Symbol	* * cc		5003617						
ANR	5003816	Symbol	pcs -> params . def -> RangeDEF		5003617						
ANR	5003817	Symbol	pcs -> params . def -> RangeDEF . ranges		5003617						
ANR	5003818	Symbol	* pcs -> params . abc		5003617						
ANR	5003819	Symbol	ranges [ k ] . rmin		5003617						
ANR	5003820	Symbol	pcs -> params . defg		5003617						
ANR	5003821	Symbol	* cc -> paint		5003617						
ANR	5003822	Symbol	cc -> paint		5003617						
ANR	5003823	Symbol	cc		5003617						
ANR	5003824	Symbol	pcs		5003617						
ANR	5003825	Symbol	pcs -> params . defg -> RangeDEFG		5003617						
ANR	5003826	Symbol	pcs -> params . def		5003617						
ANR	5003827	Symbol	ranges [ k ] . rmax		5003617						
ANR	5003828	Symbol	pcs -> params		5003617						
ANR	5003829	Symbol	pcs -> params . defg -> RangeDEFG . ranges		5003617						
ANR	5003830	Symbol	false		5003617						
ANR	5003831	Symbol	k		5003617						
ANR	5003832	Symbol	* pcs -> params . def		5003617						
ANR	5003833	Symbol	check_cie_range		5003617						
ANR	5003834	Symbol	* cc -> paint . values		5003617						
ANR	5003835	Symbol	* * pcs		5003617						
ANR	5003836	Symbol	* pcs -> params		5003617						
ANR	5003837	Symbol	* k		5003617						
ANR	5003838	Symbol	true		5003617						
ANR	5003839	Symbol	pcs -> params . a		5003617						
ANR	5003840	Symbol	gs_color_space_get_index		5003617						
ANR	5003841	Symbol	cc -> paint . values		5003617						
ANR	5003842	Function	gx_cie_check_rendering_inline	204:0:6721:7428							
ANR	5003843	FunctionDef	"gx_cie_check_rendering_inline (const gs_color_space * pcs , frac * pconc , const gs_gstate * pgs)"		5003842	0					
ANR	5003844	CompoundStatement		206:0:6834:7428	5003842	0					
ANR	5003845	IfStatement	if ( pgs -> cie_render == 0 && ! pgs -> cie_to_xyz )		5003842	0					
ANR	5003846	Condition	pgs -> cie_render == 0 && ! pgs -> cie_to_xyz	207:8:6844:6883	5003842	0	True				
ANR	5003847	AndExpression	pgs -> cie_render == 0 && ! pgs -> cie_to_xyz		5003842	0		&&			
ANR	5003848	EqualityExpression	pgs -> cie_render == 0		5003842	0		==			
ANR	5003849	PtrMemberAccess	pgs -> cie_render		5003842	0					
ANR	5003850	Identifier	pgs		5003842	0					
ANR	5003851	Identifier	cie_render		5003842	1					
ANR	5003852	PrimaryExpression	0		5003842	1					
ANR	5003853	UnaryOperationExpression	! pgs -> cie_to_xyz		5003842	1					
ANR	5003854	UnaryOperator	!		5003842	0					
ANR	5003855	PtrMemberAccess	pgs -> cie_to_xyz		5003842	1					
ANR	5003856	Identifier	pgs		5003842	0					
ANR	5003857	Identifier	cie_to_xyz		5003842	1					
ANR	5003858	CompoundStatement		2:50:51:51	5003842	1					
ANR	5003859	ExpressionStatement	pconc [ 0 ] = pconc [ 1 ] = pconc [ 2 ] = frac_0	209:8:6959:6998	5003842	0	True				
ANR	5003860	AssignmentExpression	pconc [ 0 ] = pconc [ 1 ] = pconc [ 2 ] = frac_0		5003842	0		=			
ANR	5003861	ArrayIndexing	pconc [ 0 ]		5003842	0					
ANR	5003862	Identifier	pconc		5003842	0					
ANR	5003863	PrimaryExpression	0		5003842	1					
ANR	5003864	AssignmentExpression	pconc [ 1 ] = pconc [ 2 ] = frac_0		5003842	1		=			
ANR	5003865	ArrayIndexing	pconc [ 1 ]		5003842	0					
ANR	5003866	Identifier	pconc		5003842	0					
ANR	5003867	PrimaryExpression	1		5003842	1					
ANR	5003868	AssignmentExpression	pconc [ 2 ] = frac_0		5003842	1		=			
ANR	5003869	ArrayIndexing	pconc [ 2 ]		5003842	0					
ANR	5003870	Identifier	pconc		5003842	0					
ANR	5003871	PrimaryExpression	2		5003842	1					
ANR	5003872	Identifier	frac_0		5003842	1					
ANR	5003873	ReturnStatement	return 1 ;	210:8:7008:7016	5003842	1	True				
ANR	5003874	PrimaryExpression	1		5003842	0					
ANR	5003875	IfStatement	if ( pgs -> cie_joint_caches -> status == CIE_JC_STATUS_COMPLETED )		5003842	1					
ANR	5003876	Condition	pgs -> cie_joint_caches -> status == CIE_JC_STATUS_COMPLETED	212:8:7032:7087	5003842	0	True				
ANR	5003877	EqualityExpression	pgs -> cie_joint_caches -> status == CIE_JC_STATUS_COMPLETED		5003842	0		==			
ANR	5003878	PtrMemberAccess	pgs -> cie_joint_caches -> status		5003842	0					
ANR	5003879	PtrMemberAccess	pgs -> cie_joint_caches		5003842	0					
ANR	5003880	Identifier	pgs		5003842	0					
ANR	5003881	Identifier	cie_joint_caches		5003842	1					
ANR	5003882	Identifier	status		5003842	1					
ANR	5003883	Identifier	CIE_JC_STATUS_COMPLETED		5003842	1					
ANR	5003884	CompoundStatement		7:66:255:255	5003842	1					
ANR	5003885	IfStatement	if ( pgs -> cie_joint_caches -> cspace_id != pcs -> id )		5003842	0					
ANR	5003886	Condition	pgs -> cie_joint_caches -> cspace_id != pcs -> id	213:12:7104:7146	5003842	0	True				
ANR	5003887	EqualityExpression	pgs -> cie_joint_caches -> cspace_id != pcs -> id		5003842	0		!=			
ANR	5003888	PtrMemberAccess	pgs -> cie_joint_caches -> cspace_id		5003842	0					
ANR	5003889	PtrMemberAccess	pgs -> cie_joint_caches		5003842	0					
ANR	5003890	Identifier	pgs		5003842	0					
ANR	5003891	Identifier	cie_joint_caches		5003842	1					
ANR	5003892	Identifier	cspace_id		5003842	1					
ANR	5003893	PtrMemberAccess	pcs -> id		5003842	1					
ANR	5003894	Identifier	pcs		5003842	0					
ANR	5003895	Identifier	id		5003842	1					
ANR	5003896	ExpressionStatement	pgs -> cie_joint_caches -> status = CIE_JC_STATUS_BUILT	214:12:7161:7212	5003842	1	True				
ANR	5003897	AssignmentExpression	pgs -> cie_joint_caches -> status = CIE_JC_STATUS_BUILT		5003842	0		=			
ANR	5003898	PtrMemberAccess	pgs -> cie_joint_caches -> status		5003842	0					
ANR	5003899	PtrMemberAccess	pgs -> cie_joint_caches		5003842	0					
ANR	5003900	Identifier	pgs		5003842	0					
ANR	5003901	Identifier	cie_joint_caches		5003842	1					
ANR	5003902	Identifier	status		5003842	1					
ANR	5003903	Identifier	CIE_JC_STATUS_BUILT		5003842	1					
ANR	5003904	IfStatement	if ( pgs -> cie_render && pgs -> cie_joint_caches -> status != CIE_JC_STATUS_COMPLETED )		5003842	2					
ANR	5003905	Condition	pgs -> cie_render && pgs -> cie_joint_caches -> status != CIE_JC_STATUS_COMPLETED	216:8:7228:7302	5003842	0	True				
ANR	5003906	AndExpression	pgs -> cie_render && pgs -> cie_joint_caches -> status != CIE_JC_STATUS_COMPLETED		5003842	0		&&			
ANR	5003907	PtrMemberAccess	pgs -> cie_render		5003842	0					
ANR	5003908	Identifier	pgs		5003842	0					
ANR	5003909	Identifier	cie_render		5003842	1					
ANR	5003910	EqualityExpression	pgs -> cie_joint_caches -> status != CIE_JC_STATUS_COMPLETED		5003842	1		!=			
ANR	5003911	PtrMemberAccess	pgs -> cie_joint_caches -> status		5003842	0					
ANR	5003912	PtrMemberAccess	pgs -> cie_joint_caches		5003842	0					
ANR	5003913	Identifier	pgs		5003842	0					
ANR	5003914	Identifier	cie_joint_caches		5003842	1					
ANR	5003915	Identifier	status		5003842	1					
ANR	5003916	Identifier	CIE_JC_STATUS_COMPLETED		5003842	1					
ANR	5003917	CompoundStatement		12:8:480:523	5003842	1					
ANR	5003918	IdentifierDeclStatement	"int code = gs_cie_jc_complete ( pgs , pcs ) ;"	217:8:7315:7358	5003842	0	True				
ANR	5003919	IdentifierDecl	"code = gs_cie_jc_complete ( pgs , pcs )"		5003842	0					
ANR	5003920	IdentifierDeclType	int		5003842	0					
ANR	5003921	Identifier	code		5003842	1					
ANR	5003922	AssignmentExpression	"code = gs_cie_jc_complete ( pgs , pcs )"		5003842	2		=			
ANR	5003923	Identifier	code		5003842	0					
ANR	5003924	CallExpression	"gs_cie_jc_complete ( pgs , pcs )"		5003842	1					
ANR	5003925	Callee	gs_cie_jc_complete		5003842	0					
ANR	5003926	Identifier	gs_cie_jc_complete		5003842	0					
ANR	5003927	ArgumentList	pgs		5003842	1					
ANR	5003928	Argument	pgs		5003842	0					
ANR	5003929	Identifier	pgs		5003842	0					
ANR	5003930	Argument	pcs		5003842	1					
ANR	5003931	Identifier	pcs		5003842	0					
ANR	5003932	IfStatement	if ( code < 0 )		5003842	1					
ANR	5003933	Condition	code < 0	219:12:7373:7380	5003842	0	True				
ANR	5003934	RelationalExpression	code < 0		5003842	0		<			
ANR	5003935	Identifier	code		5003842	0					
ANR	5003936	PrimaryExpression	0		5003842	1					
ANR	5003937	ReturnStatement	return code ;	220:12:7395:7406	5003842	1	True				
ANR	5003938	Identifier	code		5003842	0					
ANR	5003939	ReturnStatement	return 0 ;	222:4:7418:7426	5003842	3	True				
ANR	5003940	PrimaryExpression	0		5003842	0					
ANR	5003941	ReturnType	static inline int		5003842	1					
ANR	5003942	Identifier	gx_cie_check_rendering_inline		5003842	2					
ANR	5003943	ParameterList	"const gs_color_space * pcs , frac * pconc , const gs_gstate * pgs"		5003842	3					
ANR	5003944	Parameter	const gs_color_space * pcs	205:30:6769:6794	5003842	0	True				
ANR	5003945	ParameterType	const gs_color_space *		5003842	0					
ANR	5003946	Identifier	pcs		5003842	1					
ANR	5003947	Parameter	frac * pconc	205:58:6797:6808	5003842	1	True				
ANR	5003948	ParameterType	frac *		5003842	0					
ANR	5003949	Identifier	pconc		5003842	1					
ANR	5003950	Parameter	const gs_gstate * pgs	205:72:6811:6831	5003842	2	True				
ANR	5003951	ParameterType	const gs_gstate *		5003842	0					
ANR	5003952	Identifier	pgs		5003842	1					
ANR	5003953	CFGEntryNode	ENTRY		5003842		True				
ANR	5003954	CFGExitNode	EXIT		5003842		True				
ANR	5003955	Symbol	pcs		5003842						
ANR	5003956	Symbol	* pconc		5003842						
ANR	5003957	Symbol	code		5003842						
ANR	5003958	Symbol	* pgs		5003842						
ANR	5003959	Symbol	CIE_JC_STATUS_BUILT		5003842						
ANR	5003960	Symbol	pconc		5003842						
ANR	5003961	Symbol	pcs -> id		5003842						
ANR	5003962	Symbol	pgs -> cie_to_xyz		5003842						
ANR	5003963	Symbol	* pcs		5003842						
ANR	5003964	Symbol	pgs -> cie_joint_caches -> status		5003842						
ANR	5003965	Symbol	* * pgs		5003842						
ANR	5003966	Symbol	* pgs -> cie_joint_caches		5003842						
ANR	5003967	Symbol	pgs -> cie_joint_caches -> cspace_id		5003842						
ANR	5003968	Symbol	CIE_JC_STATUS_COMPLETED		5003842						
ANR	5003969	Symbol	pgs -> cie_joint_caches		5003842						
ANR	5003970	Symbol	gs_cie_jc_complete		5003842						
ANR	5003971	Symbol	pgs -> cie_render		5003842						
ANR	5003972	Symbol	pgs		5003842						
ANR	5003973	Symbol	frac_0		5003842						
ANR	5003974	Function	gx_cie_check_rendering	224:0:7430:7583							
ANR	5003975	FunctionDef	"gx_cie_check_rendering (const gs_color_space * pcs , frac * pconc , const gs_gstate * pgs)"		5003974	0					
ANR	5003976	CompoundStatement		226:0:7522:7583	5003974	0					
ANR	5003977	ReturnStatement	"return gx_cie_check_rendering_inline ( pcs , pconc , pgs ) ;"	227:4:7528:7581	5003974	0	True				
ANR	5003978	CallExpression	"gx_cie_check_rendering_inline ( pcs , pconc , pgs )"		5003974	0					
ANR	5003979	Callee	gx_cie_check_rendering_inline		5003974	0					
ANR	5003980	Identifier	gx_cie_check_rendering_inline		5003974	0					
ANR	5003981	ArgumentList	pcs		5003974	1					
ANR	5003982	Argument	pcs		5003974	0					
ANR	5003983	Identifier	pcs		5003974	0					
ANR	5003984	Argument	pconc		5003974	1					
ANR	5003985	Identifier	pconc		5003974	0					
ANR	5003986	Argument	pgs		5003974	2					
ANR	5003987	Identifier	pgs		5003974	0					
ANR	5003988	ReturnType	int		5003974	1					
ANR	5003989	Identifier	gx_cie_check_rendering		5003974	2					
ANR	5003990	ParameterList	"const gs_color_space * pcs , frac * pconc , const gs_gstate * pgs"		5003974	3					
ANR	5003991	Parameter	const gs_color_space * pcs	225:23:7457:7482	5003974	0	True				
ANR	5003992	ParameterType	const gs_color_space *		5003974	0					
ANR	5003993	Identifier	pcs		5003974	1					
ANR	5003994	Parameter	frac * pconc	225:51:7485:7496	5003974	1	True				
ANR	5003995	ParameterType	frac *		5003974	0					
ANR	5003996	Identifier	pconc		5003974	1					
ANR	5003997	Parameter	const gs_gstate * pgs	225:65:7499:7519	5003974	2	True				
ANR	5003998	ParameterType	const gs_gstate *		5003974	0					
ANR	5003999	Identifier	pgs		5003974	1					
ANR	5004000	CFGEntryNode	ENTRY		5003974		True				
ANR	5004001	CFGExitNode	EXIT		5003974		True				
ANR	5004002	Symbol	pcs		5003974						
ANR	5004003	Symbol	pconc		5003974						
ANR	5004004	Symbol	gx_cie_check_rendering_inline		5003974						
ANR	5004005	Symbol	pgs		5003974						
ANR	5004006	Function	gx_ciedefg_to_icc	231:0:7649:9387							
ANR	5004007	FunctionDef	"gx_ciedefg_to_icc (gs_color_space * * ppcs_icc , gs_color_space * pcs , gs_memory_t * memory)"		5004006	0					
ANR	5004008	CompoundStatement		233:0:7747:9387	5004006	0					
ANR	5004009	IdentifierDeclStatement	int code = 0 ;	234:4:7753:7765	5004006	0	True				
ANR	5004010	IdentifierDecl	code = 0		5004006	0					
ANR	5004011	IdentifierDeclType	int		5004006	0					
ANR	5004012	Identifier	code		5004006	1					
ANR	5004013	AssignmentExpression	code = 0		5004006	2		=			
ANR	5004014	Identifier	code		5004006	0					
ANR	5004015	PrimaryExpression	0		5004006	1					
ANR	5004016	IdentifierDeclStatement	gs_color_space * palt_cs = pcs -> base_space ;	235:4:7771:7812	5004006	1	True				
ANR	5004017	IdentifierDecl	* palt_cs = pcs -> base_space		5004006	0					
ANR	5004018	IdentifierDeclType	gs_color_space *		5004006	0					
ANR	5004019	Identifier	palt_cs		5004006	1					
ANR	5004020	AssignmentExpression	* palt_cs = pcs -> base_space		5004006	2		=			
ANR	5004021	Identifier	palt_cs		5004006	0					
ANR	5004022	PtrMemberAccess	pcs -> base_space		5004006	1					
ANR	5004023	Identifier	pcs		5004006	0					
ANR	5004024	Identifier	base_space		5004006	1					
ANR	5004025	IdentifierDeclStatement	gx_cie_vector_cache * abc_caches = & ( pcs -> params . abc -> caches . DecodeABC . caches [ 0 ] ) ;	236:4:7818:7898	5004006	2	True				
ANR	5004026	IdentifierDecl	* abc_caches = & ( pcs -> params . abc -> caches . DecodeABC . caches [ 0 ] )		5004006	0					
ANR	5004027	IdentifierDeclType	gx_cie_vector_cache *		5004006	0					
ANR	5004028	Identifier	abc_caches		5004006	1					
ANR	5004029	AssignmentExpression	* abc_caches = & ( pcs -> params . abc -> caches . DecodeABC . caches [ 0 ] )		5004006	2		=			
ANR	5004030	Identifier	abc_caches		5004006	0					
ANR	5004031	UnaryOperationExpression	& ( pcs -> params . abc -> caches . DecodeABC . caches [ 0 ] )		5004006	1					
ANR	5004032	UnaryOperator	&		5004006	0					
ANR	5004033	ArrayIndexing	pcs -> params . abc -> caches . DecodeABC . caches [ 0 ]		5004006	1					
ANR	5004034	MemberAccess	pcs -> params . abc -> caches . DecodeABC . caches		5004006	0					
ANR	5004035	MemberAccess	pcs -> params . abc -> caches . DecodeABC		5004006	0					
ANR	5004036	PtrMemberAccess	pcs -> params . abc -> caches		5004006	0					
ANR	5004037	MemberAccess	pcs -> params . abc		5004006	0					
ANR	5004038	PtrMemberAccess	pcs -> params		5004006	0					
ANR	5004039	Identifier	pcs		5004006	0					
ANR	5004040	Identifier	params		5004006	1					
ANR	5004041	Identifier	abc		5004006	1					
ANR	5004042	Identifier	caches		5004006	1					
ANR	5004043	Identifier	DecodeABC		5004006	1					
ANR	5004044	Identifier	caches		5004006	1					
ANR	5004045	PrimaryExpression	0		5004006	1					
ANR	5004046	IdentifierDeclStatement	gx_cie_scalar_cache * lmn_caches = & ( pcs -> params . abc -> common . caches . DecodeLMN [ 0 ] ) ;	237:4:7904:7987	5004006	3	True				
ANR	5004047	IdentifierDecl	* lmn_caches = & ( pcs -> params . abc -> common . caches . DecodeLMN [ 0 ] )		5004006	0					
ANR	5004048	IdentifierDeclType	gx_cie_scalar_cache *		5004006	0					
ANR	5004049	Identifier	lmn_caches		5004006	1					
ANR	5004050	AssignmentExpression	* lmn_caches = & ( pcs -> params . abc -> common . caches . DecodeLMN [ 0 ] )		5004006	2		=			
ANR	5004051	Identifier	lmn_caches		5004006	0					
ANR	5004052	UnaryOperationExpression	& ( pcs -> params . abc -> common . caches . DecodeLMN [ 0 ] )		5004006	1					
ANR	5004053	UnaryOperator	&		5004006	0					
ANR	5004054	ArrayIndexing	pcs -> params . abc -> common . caches . DecodeLMN [ 0 ]		5004006	1					
ANR	5004055	MemberAccess	pcs -> params . abc -> common . caches . DecodeLMN		5004006	0					
ANR	5004056	MemberAccess	pcs -> params . abc -> common . caches		5004006	0					
ANR	5004057	PtrMemberAccess	pcs -> params . abc -> common		5004006	0					
ANR	5004058	MemberAccess	pcs -> params . abc		5004006	0					
ANR	5004059	PtrMemberAccess	pcs -> params		5004006	0					
ANR	5004060	Identifier	pcs		5004006	0					
ANR	5004061	Identifier	params		5004006	1					
ANR	5004062	Identifier	abc		5004006	1					
ANR	5004063	Identifier	common		5004006	1					
ANR	5004064	Identifier	caches		5004006	1					
ANR	5004065	Identifier	DecodeLMN		5004006	1					
ANR	5004066	PrimaryExpression	0		5004006	1					
ANR	5004067	IdentifierDeclStatement	gx_cie_scalar_cache * defg_caches = & ( pcs -> params . defg -> caches_defg . DecodeDEFG [ 0 ] ) ;	238:4:7993:8074	5004006	4	True				
ANR	5004068	IdentifierDecl	* defg_caches = & ( pcs -> params . defg -> caches_defg . DecodeDEFG [ 0 ] )		5004006	0					
ANR	5004069	IdentifierDeclType	gx_cie_scalar_cache *		5004006	0					
ANR	5004070	Identifier	defg_caches		5004006	1					
ANR	5004071	AssignmentExpression	* defg_caches = & ( pcs -> params . defg -> caches_defg . DecodeDEFG [ 0 ] )		5004006	2		=			
ANR	5004072	Identifier	defg_caches		5004006	0					
ANR	5004073	UnaryOperationExpression	& ( pcs -> params . defg -> caches_defg . DecodeDEFG [ 0 ] )		5004006	1					
ANR	5004074	UnaryOperator	&		5004006	0					
ANR	5004075	ArrayIndexing	pcs -> params . defg -> caches_defg . DecodeDEFG [ 0 ]		5004006	1					
ANR	5004076	MemberAccess	pcs -> params . defg -> caches_defg . DecodeDEFG		5004006	0					
ANR	5004077	PtrMemberAccess	pcs -> params . defg -> caches_defg		5004006	0					
ANR	5004078	MemberAccess	pcs -> params . defg		5004006	0					
ANR	5004079	PtrMemberAccess	pcs -> params		5004006	0					
ANR	5004080	Identifier	pcs		5004006	0					
ANR	5004081	Identifier	params		5004006	1					
ANR	5004082	Identifier	defg		5004006	1					
ANR	5004083	Identifier	caches_defg		5004006	1					
ANR	5004084	Identifier	DecodeDEFG		5004006	1					
ANR	5004085	PrimaryExpression	0		5004006	1					
ANR	5004086	ExpressionStatement	"if_debug0m ( gs_debug_flag_icc , memory , ""[icc] Creating ICC profile from defg object"" )"	240:4:8081:8180	5004006	5	True				
ANR	5004087	CallExpression	"if_debug0m ( gs_debug_flag_icc , memory , ""[icc] Creating ICC profile from defg object"" )"		5004006	0					
ANR	5004088	Callee	if_debug0m		5004006	0					
ANR	5004089	Identifier	if_debug0m		5004006	0					
ANR	5004090	ArgumentList	gs_debug_flag_icc		5004006	1					
ANR	5004091	Argument	gs_debug_flag_icc		5004006	0					
ANR	5004092	Identifier	gs_debug_flag_icc		5004006	0					
ANR	5004093	Argument	memory		5004006	1					
ANR	5004094	Identifier	memory		5004006	0					
ANR	5004095	Argument	"""[icc] Creating ICC profile from defg object"""		5004006	2					
ANR	5004096	PrimaryExpression	"""[icc] Creating ICC profile from defg object"""		5004006	0					
ANR	5004097	ExpressionStatement	"code = gs_cspace_build_ICC ( ppcs_icc , NULL , memory -> stable_memory )"	243:4:8229:8294	5004006	6	True				
ANR	5004098	AssignmentExpression	"code = gs_cspace_build_ICC ( ppcs_icc , NULL , memory -> stable_memory )"		5004006	0		=			
ANR	5004099	Identifier	code		5004006	0					
ANR	5004100	CallExpression	"gs_cspace_build_ICC ( ppcs_icc , NULL , memory -> stable_memory )"		5004006	1					
ANR	5004101	Callee	gs_cspace_build_ICC		5004006	0					
ANR	5004102	Identifier	gs_cspace_build_ICC		5004006	0					
ANR	5004103	ArgumentList	ppcs_icc		5004006	1					
ANR	5004104	Argument	ppcs_icc		5004006	0					
ANR	5004105	Identifier	ppcs_icc		5004006	0					
ANR	5004106	Argument	NULL		5004006	1					
ANR	5004107	Identifier	NULL		5004006	0					
ANR	5004108	Argument	memory -> stable_memory		5004006	2					
ANR	5004109	PtrMemberAccess	memory -> stable_memory		5004006	0					
ANR	5004110	Identifier	memory		5004006	0					
ANR	5004111	Identifier	stable_memory		5004006	1					
ANR	5004112	IfStatement	if ( code < 0 )		5004006	7					
ANR	5004113	Condition	code < 0	244:8:8304:8311	5004006	0	True				
ANR	5004114	RelationalExpression	code < 0		5004006	0		<			
ANR	5004115	Identifier	code		5004006	0					
ANR	5004116	PrimaryExpression	0		5004006	1					
ANR	5004117	ReturnStatement	"return gs_rethrow ( code , ""Failed to build ICC color space"" ) ;"	245:8:8322:8380	5004006	1	True				
ANR	5004118	CallExpression	"gs_rethrow ( code , ""Failed to build ICC color space"" )"		5004006	0					
ANR	5004119	Callee	gs_rethrow		5004006	0					
ANR	5004120	Identifier	gs_rethrow		5004006	0					
ANR	5004121	ArgumentList	code		5004006	1					
ANR	5004122	Argument	code		5004006	0					
ANR	5004123	Identifier	code		5004006	0					
ANR	5004124	Argument	"""Failed to build ICC color space"""		5004006	1					
ANR	5004125	PrimaryExpression	"""Failed to build ICC color space"""		5004006	0					
ANR	5004126	ExpressionStatement	( * ppcs_icc ) -> base_space = palt_cs	247:4:8456:8489	5004006	8	True				
ANR	5004127	AssignmentExpression	( * ppcs_icc ) -> base_space = palt_cs		5004006	0		=			
ANR	5004128	PtrMemberAccess	( * ppcs_icc ) -> base_space		5004006	0					
ANR	5004129	UnaryOperationExpression	* ppcs_icc		5004006	0					
ANR	5004130	UnaryOperator	*		5004006	0					
ANR	5004131	Identifier	ppcs_icc		5004006	1					
ANR	5004132	Identifier	base_space		5004006	1					
ANR	5004133	Identifier	palt_cs		5004006	1					
ANR	5004134	ExpressionStatement	rc_increment_cs ( palt_cs )	248:4:8495:8519	5004006	9	True				
ANR	5004135	CallExpression	rc_increment_cs ( palt_cs )		5004006	0					
ANR	5004136	Callee	rc_increment_cs		5004006	0					
ANR	5004137	Identifier	rc_increment_cs		5004006	0					
ANR	5004138	ArgumentList	palt_cs		5004006	1					
ANR	5004139	Argument	palt_cs		5004006	0					
ANR	5004140	Identifier	palt_cs		5004006	0					
ANR	5004141	ExpressionStatement	"( * ppcs_icc ) -> cmm_icc_profile_data = gsicc_profile_new ( NULL , memory , NULL , 0 )"	249:4:8525:8601	5004006	10	True				
ANR	5004142	AssignmentExpression	"( * ppcs_icc ) -> cmm_icc_profile_data = gsicc_profile_new ( NULL , memory , NULL , 0 )"		5004006	0		=			
ANR	5004143	PtrMemberAccess	( * ppcs_icc ) -> cmm_icc_profile_data		5004006	0					
ANR	5004144	UnaryOperationExpression	* ppcs_icc		5004006	0					
ANR	5004145	UnaryOperator	*		5004006	0					
ANR	5004146	Identifier	ppcs_icc		5004006	1					
ANR	5004147	Identifier	cmm_icc_profile_data		5004006	1					
ANR	5004148	CallExpression	"gsicc_profile_new ( NULL , memory , NULL , 0 )"		5004006	1					
ANR	5004149	Callee	gsicc_profile_new		5004006	0					
ANR	5004150	Identifier	gsicc_profile_new		5004006	0					
ANR	5004151	ArgumentList	NULL		5004006	1					
ANR	5004152	Argument	NULL		5004006	0					
ANR	5004153	Identifier	NULL		5004006	0					
ANR	5004154	Argument	memory		5004006	1					
ANR	5004155	Identifier	memory		5004006	0					
ANR	5004156	Argument	NULL		5004006	2					
ANR	5004157	Identifier	NULL		5004006	0					
ANR	5004158	Argument	0		5004006	3					
ANR	5004159	PrimaryExpression	0		5004006	0					
ANR	5004160	IfStatement	if ( ( * ppcs_icc ) -> cmm_icc_profile_data == NULL )		5004006	11					
ANR	5004161	Condition	( * ppcs_icc ) -> cmm_icc_profile_data == NULL	250:8:8611:8651	5004006	0	True				
ANR	5004162	EqualityExpression	( * ppcs_icc ) -> cmm_icc_profile_data == NULL		5004006	0		==			
ANR	5004163	PtrMemberAccess	( * ppcs_icc ) -> cmm_icc_profile_data		5004006	0					
ANR	5004164	UnaryOperationExpression	* ppcs_icc		5004006	0					
ANR	5004165	UnaryOperator	*		5004006	0					
ANR	5004166	Identifier	ppcs_icc		5004006	1					
ANR	5004167	Identifier	cmm_icc_profile_data		5004006	1					
ANR	5004168	Identifier	NULL		5004006	1					
ANR	5004169	ExpressionStatement	"gs_throw ( gs_error_VMerror , ""Failed to create ICC profile"" )"	251:8:8662:8720	5004006	1	True				
ANR	5004170	CallExpression	"gs_throw ( gs_error_VMerror , ""Failed to create ICC profile"" )"		5004006	0					
ANR	5004171	Callee	gs_throw		5004006	0					
ANR	5004172	Identifier	gs_throw		5004006	0					
ANR	5004173	ArgumentList	gs_error_VMerror		5004006	1					
ANR	5004174	Argument	gs_error_VMerror		5004006	0					
ANR	5004175	Identifier	gs_error_VMerror		5004006	0					
ANR	5004176	Argument	"""Failed to create ICC profile"""		5004006	1					
ANR	5004177	PrimaryExpression	"""Failed to create ICC profile"""		5004006	0					
ANR	5004178	ExpressionStatement	"code = gsicc_create_fromdefg ( pcs , & ( ( * ppcs_icc ) -> cmm_icc_profile_data -> buffer ) , & ( ( * ppcs_icc ) -> cmm_icc_profile_data -> buffer_size ) , memory , abc_caches , lmn_caches , defg_caches )"	252:4:8726:8941	5004006	12	True				
ANR	5004179	AssignmentExpression	"code = gsicc_create_fromdefg ( pcs , & ( ( * ppcs_icc ) -> cmm_icc_profile_data -> buffer ) , & ( ( * ppcs_icc ) -> cmm_icc_profile_data -> buffer_size ) , memory , abc_caches , lmn_caches , defg_caches )"		5004006	0		=			
ANR	5004180	Identifier	code		5004006	0					
ANR	5004181	CallExpression	"gsicc_create_fromdefg ( pcs , & ( ( * ppcs_icc ) -> cmm_icc_profile_data -> buffer ) , & ( ( * ppcs_icc ) -> cmm_icc_profile_data -> buffer_size ) , memory , abc_caches , lmn_caches , defg_caches )"		5004006	1					
ANR	5004182	Callee	gsicc_create_fromdefg		5004006	0					
ANR	5004183	Identifier	gsicc_create_fromdefg		5004006	0					
ANR	5004184	ArgumentList	pcs		5004006	1					
ANR	5004185	Argument	pcs		5004006	0					
ANR	5004186	Identifier	pcs		5004006	0					
ANR	5004187	Argument	& ( ( * ppcs_icc ) -> cmm_icc_profile_data -> buffer )		5004006	1					
ANR	5004188	UnaryOperationExpression	& ( ( * ppcs_icc ) -> cmm_icc_profile_data -> buffer )		5004006	0					
ANR	5004189	UnaryOperator	&		5004006	0					
ANR	5004190	PtrMemberAccess	( * ppcs_icc ) -> cmm_icc_profile_data -> buffer		5004006	1					
ANR	5004191	PtrMemberAccess	( * ppcs_icc ) -> cmm_icc_profile_data		5004006	0					
ANR	5004192	UnaryOperationExpression	* ppcs_icc		5004006	0					
ANR	5004193	UnaryOperator	*		5004006	0					
ANR	5004194	Identifier	ppcs_icc		5004006	1					
ANR	5004195	Identifier	cmm_icc_profile_data		5004006	1					
ANR	5004196	Identifier	buffer		5004006	1					
ANR	5004197	Argument	& ( ( * ppcs_icc ) -> cmm_icc_profile_data -> buffer_size )		5004006	2					
ANR	5004198	UnaryOperationExpression	& ( ( * ppcs_icc ) -> cmm_icc_profile_data -> buffer_size )		5004006	0					
ANR	5004199	UnaryOperator	&		5004006	0					
ANR	5004200	PtrMemberAccess	( * ppcs_icc ) -> cmm_icc_profile_data -> buffer_size		5004006	1					
ANR	5004201	PtrMemberAccess	( * ppcs_icc ) -> cmm_icc_profile_data		5004006	0					
ANR	5004202	UnaryOperationExpression	* ppcs_icc		5004006	0					
ANR	5004203	UnaryOperator	*		5004006	0					
ANR	5004204	Identifier	ppcs_icc		5004006	1					
ANR	5004205	Identifier	cmm_icc_profile_data		5004006	1					
ANR	5004206	Identifier	buffer_size		5004006	1					
ANR	5004207	Argument	memory		5004006	3					
ANR	5004208	Identifier	memory		5004006	0					
ANR	5004209	Argument	abc_caches		5004006	4					
ANR	5004210	Identifier	abc_caches		5004006	0					
ANR	5004211	Argument	lmn_caches		5004006	5					
ANR	5004212	Identifier	lmn_caches		5004006	0					
ANR	5004213	Argument	defg_caches		5004006	6					
ANR	5004214	Identifier	defg_caches		5004006	0					
ANR	5004215	IfStatement	if ( code < 0 )		5004006	13					
ANR	5004216	Condition	code < 0	255:8:8951:8958	5004006	0	True				
ANR	5004217	RelationalExpression	code < 0		5004006	0		<			
ANR	5004218	Identifier	code		5004006	0					
ANR	5004219	PrimaryExpression	0		5004006	1					
ANR	5004220	ReturnStatement	"return gs_rethrow ( code , ""Failed to create ICC profile from CIEDEFG"" ) ;"	256:8:8969:9037	5004006	1	True				
ANR	5004221	CallExpression	"gs_rethrow ( code , ""Failed to create ICC profile from CIEDEFG"" )"		5004006	0					
ANR	5004222	Callee	gs_rethrow		5004006	0					
ANR	5004223	Identifier	gs_rethrow		5004006	0					
ANR	5004224	ArgumentList	code		5004006	1					
ANR	5004225	Argument	code		5004006	0					
ANR	5004226	Identifier	code		5004006	0					
ANR	5004227	Argument	"""Failed to create ICC profile from CIEDEFG"""		5004006	1					
ANR	5004228	PrimaryExpression	"""Failed to create ICC profile from CIEDEFG"""		5004006	0					
ANR	5004229	ExpressionStatement	code = gsicc_init_profile_info ( ( * ppcs_icc ) -> cmm_icc_profile_data )	257:4:9043:9108	5004006	14	True				
ANR	5004230	AssignmentExpression	code = gsicc_init_profile_info ( ( * ppcs_icc ) -> cmm_icc_profile_data )		5004006	0		=			
ANR	5004231	Identifier	code		5004006	0					
ANR	5004232	CallExpression	gsicc_init_profile_info ( ( * ppcs_icc ) -> cmm_icc_profile_data )		5004006	1					
ANR	5004233	Callee	gsicc_init_profile_info		5004006	0					
ANR	5004234	Identifier	gsicc_init_profile_info		5004006	0					
ANR	5004235	ArgumentList	( * ppcs_icc ) -> cmm_icc_profile_data		5004006	1					
ANR	5004236	Argument	( * ppcs_icc ) -> cmm_icc_profile_data		5004006	0					
ANR	5004237	PtrMemberAccess	( * ppcs_icc ) -> cmm_icc_profile_data		5004006	0					
ANR	5004238	UnaryOperationExpression	* ppcs_icc		5004006	0					
ANR	5004239	UnaryOperator	*		5004006	0					
ANR	5004240	Identifier	ppcs_icc		5004006	1					
ANR	5004241	Identifier	cmm_icc_profile_data		5004006	1					
ANR	5004242	IfStatement	if ( code < 0 )		5004006	15					
ANR	5004243	Condition	code < 0	258:8:9118:9125	5004006	0	True				
ANR	5004244	RelationalExpression	code < 0		5004006	0		<			
ANR	5004245	Identifier	code		5004006	0					
ANR	5004246	PrimaryExpression	0		5004006	1					
ANR	5004247	ReturnStatement	"return gs_rethrow ( code , ""Failed to create ICC profile from CIEDEFG"" ) ;"	259:8:9136:9204	5004006	1	True				
ANR	5004248	CallExpression	"gs_rethrow ( code , ""Failed to create ICC profile from CIEDEFG"" )"		5004006	0					
ANR	5004249	Callee	gs_rethrow		5004006	0					
ANR	5004250	Identifier	gs_rethrow		5004006	0					
ANR	5004251	ArgumentList	code		5004006	1					
ANR	5004252	Argument	code		5004006	0					
ANR	5004253	Identifier	code		5004006	0					
ANR	5004254	Argument	"""Failed to create ICC profile from CIEDEFG"""		5004006	1					
ANR	5004255	PrimaryExpression	"""Failed to create ICC profile from CIEDEFG"""		5004006	0					
ANR	5004256	ExpressionStatement	( * ppcs_icc ) -> cmm_icc_profile_data -> default_match = CIE_DEFG	260:4:9210:9269	5004006	16	True				
ANR	5004257	AssignmentExpression	( * ppcs_icc ) -> cmm_icc_profile_data -> default_match = CIE_DEFG		5004006	0		=			
ANR	5004258	PtrMemberAccess	( * ppcs_icc ) -> cmm_icc_profile_data -> default_match		5004006	0					
ANR	5004259	PtrMemberAccess	( * ppcs_icc ) -> cmm_icc_profile_data		5004006	0					
ANR	5004260	UnaryOperationExpression	* ppcs_icc		5004006	0					
ANR	5004261	UnaryOperator	*		5004006	0					
ANR	5004262	Identifier	ppcs_icc		5004006	1					
ANR	5004263	Identifier	cmm_icc_profile_data		5004006	1					
ANR	5004264	Identifier	default_match		5004006	1					
ANR	5004265	Identifier	CIE_DEFG		5004006	1					
ANR	5004266	ExpressionStatement	pcs -> icc_equivalent = * ppcs_icc	261:4:9275:9306	5004006	17	True				
ANR	5004267	AssignmentExpression	pcs -> icc_equivalent = * ppcs_icc		5004006	0		=			
ANR	5004268	PtrMemberAccess	pcs -> icc_equivalent		5004006	0					
ANR	5004269	Identifier	pcs		5004006	0					
ANR	5004270	Identifier	icc_equivalent		5004006	1					
ANR	5004271	UnaryOperationExpression	* ppcs_icc		5004006	1					
ANR	5004272	UnaryOperator	*		5004006	0					
ANR	5004273	Identifier	ppcs_icc		5004006	1					
ANR	5004274	ExpressionStatement	pcs -> icc_equivalent -> cmm_icc_profile_data -> data_cs = gsCMYK	262:4:9312:9371	5004006	18	True				
ANR	5004275	AssignmentExpression	pcs -> icc_equivalent -> cmm_icc_profile_data -> data_cs = gsCMYK		5004006	0		=			
ANR	5004276	PtrMemberAccess	pcs -> icc_equivalent -> cmm_icc_profile_data -> data_cs		5004006	0					
ANR	5004277	PtrMemberAccess	pcs -> icc_equivalent -> cmm_icc_profile_data		5004006	0					
ANR	5004278	PtrMemberAccess	pcs -> icc_equivalent		5004006	0					
ANR	5004279	Identifier	pcs		5004006	0					
ANR	5004280	Identifier	icc_equivalent		5004006	1					
ANR	5004281	Identifier	cmm_icc_profile_data		5004006	1					
ANR	5004282	Identifier	data_cs		5004006	1					
ANR	5004283	Identifier	gsCMYK		5004006	1					
ANR	5004284	ReturnStatement	return 0 ;	263:4:9377:9385	5004006	19	True				
ANR	5004285	PrimaryExpression	0		5004006	0					
ANR	5004286	ReturnType	static int		5004006	1					
ANR	5004287	Identifier	gx_ciedefg_to_icc		5004006	2					
ANR	5004288	ParameterList	"gs_color_space * * ppcs_icc , gs_color_space * pcs , gs_memory_t * memory"		5004006	3					
ANR	5004289	Parameter	gs_color_space * * ppcs_icc	232:18:7678:7702	5004006	0	True				
ANR	5004290	ParameterType	gs_color_space * *		5004006	0					
ANR	5004291	Identifier	ppcs_icc		5004006	1					
ANR	5004292	Parameter	gs_color_space * pcs	232:45:7705:7723	5004006	1	True				
ANR	5004293	ParameterType	gs_color_space *		5004006	0					
ANR	5004294	Identifier	pcs		5004006	1					
ANR	5004295	Parameter	gs_memory_t * memory	232:66:7726:7744	5004006	2	True				
ANR	5004296	ParameterType	gs_memory_t *		5004006	0					
ANR	5004297	Identifier	memory		5004006	1					
ANR	5004298	CFGEntryNode	ENTRY		5004006		True				
ANR	5004299	CFGExitNode	EXIT		5004006		True				
ANR	5004300	Symbol	& ( * ppcs_icc ) -> cmm_icc_profile_data -> buffer		5004006						
ANR	5004301	Symbol	* pcs -> params . defg		5004006						
ANR	5004302	Symbol	pcs -> icc_equivalent -> cmm_icc_profile_data -> data_cs		5004006						
ANR	5004303	Symbol	pcs -> params . defg -> caches_defg . DecodeDEFG		5004006						
ANR	5004304	Symbol	* pcs		5004006						
ANR	5004305	Symbol	CIE_DEFG		5004006						
ANR	5004306	Symbol	gs_rethrow		5004006						
ANR	5004307	Symbol	* ( * ppcs_icc ) -> cmm_icc_profile_data		5004006						
ANR	5004308	Symbol	pcs -> params . abc		5004006						
ANR	5004309	Symbol	ppcs_icc		5004006						
ANR	5004310	Symbol	* * * ppcs_icc		5004006						
ANR	5004311	Symbol	pcs -> icc_equivalent -> cmm_icc_profile_data		5004006						
ANR	5004312	Symbol	* pcs -> icc_equivalent -> cmm_icc_profile_data		5004006						
ANR	5004313	Symbol	gs_debug_flag_icc		5004006						
ANR	5004314	Symbol	defg_caches		5004006						
ANR	5004315	Symbol	* * ppcs_icc		5004006						
ANR	5004316	Symbol	NULL		5004006						
ANR	5004317	Symbol	* pcs -> icc_equivalent		5004006						
ANR	5004318	Symbol	pcs -> params . abc -> caches		5004006						
ANR	5004319	Symbol	( * ppcs_icc ) -> cmm_icc_profile_data		5004006						
ANR	5004320	Symbol	* pcs -> params		5004006						
ANR	5004321	Symbol	* * pcs		5004006						
ANR	5004322	Symbol	gs_cspace_build_ICC		5004006						
ANR	5004323	Symbol	* ppcs_icc		5004006						
ANR	5004324	Symbol	( * ppcs_icc ) -> base_space		5004006						
ANR	5004325	Symbol	gsicc_profile_new		5004006						
ANR	5004326	Symbol	gsicc_create_fromdefg		5004006						
ANR	5004327	Symbol	pcs -> params . abc -> common . caches		5004006						
ANR	5004328	Symbol	memory		5004006						
ANR	5004329	Symbol	code		5004006						
ANR	5004330	Symbol	* memory		5004006						
ANR	5004331	Symbol	pcs -> params . abc -> common		5004006						
ANR	5004332	Symbol	pcs -> params . abc -> caches . DecodeABC		5004006						
ANR	5004333	Symbol	pcs -> params . abc -> common . caches . DecodeLMN		5004006						
ANR	5004334	Symbol	memory -> stable_memory		5004006						
ANR	5004335	Symbol	* pcs -> params . abc		5004006						
ANR	5004336	Symbol	abc_caches		5004006						
ANR	5004337	Symbol	pcs -> params . defg		5004006						
ANR	5004338	Symbol	palt_cs		5004006						
ANR	5004339	Symbol	* * * pcs		5004006						
ANR	5004340	Symbol	gsCMYK		5004006						
ANR	5004341	Symbol	pcs		5004006						
ANR	5004342	Symbol	pcs -> params . abc -> caches . DecodeABC . caches		5004006						
ANR	5004343	Symbol	lmn_caches		5004006						
ANR	5004344	Symbol	pcs -> params		5004006						
ANR	5004345	Symbol	( * ppcs_icc ) -> cmm_icc_profile_data -> default_match		5004006						
ANR	5004346	Symbol	pcs -> icc_equivalent		5004006						
ANR	5004347	Symbol	pcs -> params . defg -> caches_defg		5004006						
ANR	5004348	Symbol	gs_error_VMerror		5004006						
ANR	5004349	Symbol	pcs -> base_space		5004006						
ANR	5004350	Symbol	gsicc_init_profile_info		5004006						
ANR	5004351	Symbol	& ( * ppcs_icc ) -> cmm_icc_profile_data -> buffer_size		5004006						
ANR	5004352	Symbol	* * pcs -> icc_equivalent		5004006						
ANR	5004353	Function	gx_remap_CIEDEFG	266:0:9390:11036							
ANR	5004354	FunctionDef	"gx_remap_CIEDEFG (const gs_client_color * pc , const gs_color_space * pcs_in , gx_device_color * pdc , const gs_gstate * pgs , gx_device * dev , gs_color_select_t select)"		5004353	0					
ANR	5004355	CompoundStatement		270:0:9583:11036	5004353	0					
ANR	5004356	IdentifierDeclStatement	gs_color_space * pcs_icc ;	271:4:9589:9612	5004353	0	True				
ANR	5004357	IdentifierDecl	* pcs_icc		5004353	0					
ANR	5004358	IdentifierDeclType	gs_color_space *		5004353	0					
ANR	5004359	Identifier	pcs_icc		5004353	1					
ANR	5004360	IdentifierDeclStatement	"int code , i ;"	272:4:9618:9629	5004353	1	True				
ANR	5004361	IdentifierDecl	code		5004353	0					
ANR	5004362	IdentifierDeclType	int		5004353	0					
ANR	5004363	Identifier	code		5004353	1					
ANR	5004364	IdentifierDecl	i		5004353	1					
ANR	5004365	IdentifierDeclType	int		5004353	0					
ANR	5004366	Identifier	i		5004353	1					
ANR	5004367	IdentifierDeclStatement	gs_client_color scale_pc ;	273:4:9635:9659	5004353	2	True				
ANR	5004368	IdentifierDecl	scale_pc		5004353	0					
ANR	5004369	IdentifierDeclType	gs_client_color		5004353	0					
ANR	5004370	Identifier	scale_pc		5004353	1					
ANR	5004371	IdentifierDeclStatement	gs_color_space * pcs = ( gs_color_space * ) pcs_in ;	274:4:9665:9712	5004353	3	True				
ANR	5004372	IdentifierDecl	* pcs = ( gs_color_space * ) pcs_in		5004353	0					
ANR	5004373	IdentifierDeclType	gs_color_space *		5004353	0					
ANR	5004374	Identifier	pcs		5004353	1					
ANR	5004375	AssignmentExpression	* pcs = ( gs_color_space * ) pcs_in		5004353	2		=			
ANR	5004376	Identifier	pcs		5004353	0					
ANR	5004377	CastExpression	( gs_color_space * ) pcs_in		5004353	1					
ANR	5004378	CastTarget	gs_color_space *		5004353	0					
ANR	5004379	Identifier	pcs_in		5004353	1					
ANR	5004380	ExpressionStatement	"if_debug4m ( 'c' , pgs -> memory , ""[c]remap CIEDEFG [%g %g %g %g]\\n"" , pc -> paint . values [ 0 ] , pc -> paint . values [ 1 ] , pc -> paint . values [ 2 ] , pc -> paint . values [ 3 ] )"	276:4:9719:9897	5004353	4	True				
ANR	5004381	CallExpression	"if_debug4m ( 'c' , pgs -> memory , ""[c]remap CIEDEFG [%g %g %g %g]\\n"" , pc -> paint . values [ 0 ] , pc -> paint . values [ 1 ] , pc -> paint . values [ 2 ] , pc -> paint . values [ 3 ] )"		5004353	0					
ANR	5004382	Callee	if_debug4m		5004353	0					
ANR	5004383	Identifier	if_debug4m		5004353	0					
ANR	5004384	ArgumentList	'c'		5004353	1					
ANR	5004385	Argument	'c'		5004353	0					
ANR	5004386	PrimaryExpression	'c'		5004353	0					
ANR	5004387	Argument	pgs -> memory		5004353	1					
ANR	5004388	PtrMemberAccess	pgs -> memory		5004353	0					
ANR	5004389	Identifier	pgs		5004353	0					
ANR	5004390	Identifier	memory		5004353	1					
ANR	5004391	Argument	"""[c]remap CIEDEFG [%g %g %g %g]\\n"""		5004353	2					
ANR	5004392	PrimaryExpression	"""[c]remap CIEDEFG [%g %g %g %g]\\n"""		5004353	0					
ANR	5004393	Argument	pc -> paint . values [ 0 ]		5004353	3					
ANR	5004394	ArrayIndexing	pc -> paint . values [ 0 ]		5004353	0					
ANR	5004395	MemberAccess	pc -> paint . values		5004353	0					
ANR	5004396	PtrMemberAccess	pc -> paint		5004353	0					
ANR	5004397	Identifier	pc		5004353	0					
ANR	5004398	Identifier	paint		5004353	1					
ANR	5004399	Identifier	values		5004353	1					
ANR	5004400	PrimaryExpression	0		5004353	1					
ANR	5004401	Argument	pc -> paint . values [ 1 ]		5004353	4					
ANR	5004402	ArrayIndexing	pc -> paint . values [ 1 ]		5004353	0					
ANR	5004403	MemberAccess	pc -> paint . values		5004353	0					
ANR	5004404	PtrMemberAccess	pc -> paint		5004353	0					
ANR	5004405	Identifier	pc		5004353	0					
ANR	5004406	Identifier	paint		5004353	1					
ANR	5004407	Identifier	values		5004353	1					
ANR	5004408	PrimaryExpression	1		5004353	1					
ANR	5004409	Argument	pc -> paint . values [ 2 ]		5004353	5					
ANR	5004410	ArrayIndexing	pc -> paint . values [ 2 ]		5004353	0					
ANR	5004411	MemberAccess	pc -> paint . values		5004353	0					
ANR	5004412	PtrMemberAccess	pc -> paint		5004353	0					
ANR	5004413	Identifier	pc		5004353	0					
ANR	5004414	Identifier	paint		5004353	1					
ANR	5004415	Identifier	values		5004353	1					
ANR	5004416	PrimaryExpression	2		5004353	1					
ANR	5004417	Argument	pc -> paint . values [ 3 ]		5004353	6					
ANR	5004418	ArrayIndexing	pc -> paint . values [ 3 ]		5004353	0					
ANR	5004419	MemberAccess	pc -> paint . values		5004353	0					
ANR	5004420	PtrMemberAccess	pc -> paint		5004353	0					
ANR	5004421	Identifier	pc		5004353	0					
ANR	5004422	Identifier	paint		5004353	1					
ANR	5004423	Identifier	values		5004353	1					
ANR	5004424	PrimaryExpression	3		5004353	1					
ANR	5004425	IfStatement	if ( pcs -> icc_equivalent == NULL )		5004353	5					
ANR	5004426	Condition	pcs -> icc_equivalent == NULL	282:8:10067:10093	5004353	0	True				
ANR	5004427	EqualityExpression	pcs -> icc_equivalent == NULL		5004353	0		==			
ANR	5004428	PtrMemberAccess	pcs -> icc_equivalent		5004353	0					
ANR	5004429	Identifier	pcs		5004353	0					
ANR	5004430	Identifier	icc_equivalent		5004353	1					
ANR	5004431	Identifier	NULL		5004353	1					
ANR	5004432	CompoundStatement		13:37:512:512	5004353	1					
ANR	5004433	ExpressionStatement	"code = gx_ciedefg_to_icc ( & pcs_icc , pcs , pgs -> memory -> stable_memory )"	283:8:10106:10173	5004353	0	True				
ANR	5004434	AssignmentExpression	"code = gx_ciedefg_to_icc ( & pcs_icc , pcs , pgs -> memory -> stable_memory )"		5004353	0		=			
ANR	5004435	Identifier	code		5004353	0					
ANR	5004436	CallExpression	"gx_ciedefg_to_icc ( & pcs_icc , pcs , pgs -> memory -> stable_memory )"		5004353	1					
ANR	5004437	Callee	gx_ciedefg_to_icc		5004353	0					
ANR	5004438	Identifier	gx_ciedefg_to_icc		5004353	0					
ANR	5004439	ArgumentList	& pcs_icc		5004353	1					
ANR	5004440	Argument	& pcs_icc		5004353	0					
ANR	5004441	UnaryOperationExpression	& pcs_icc		5004353	0					
ANR	5004442	UnaryOperator	&		5004353	0					
ANR	5004443	Identifier	pcs_icc		5004353	1					
ANR	5004444	Argument	pcs		5004353	1					
ANR	5004445	Identifier	pcs		5004353	0					
ANR	5004446	Argument	pgs -> memory -> stable_memory		5004353	2					
ANR	5004447	PtrMemberAccess	pgs -> memory -> stable_memory		5004353	0					
ANR	5004448	PtrMemberAccess	pgs -> memory		5004353	0					
ANR	5004449	Identifier	pgs		5004353	0					
ANR	5004450	Identifier	memory		5004353	1					
ANR	5004451	Identifier	stable_memory		5004353	1					
ANR	5004452	IfStatement	if ( code < 0 )		5004353	1					
ANR	5004453	Condition	code < 0	284:12:10187:10194	5004353	0	True				
ANR	5004454	RelationalExpression	code < 0		5004353	0		<			
ANR	5004455	Identifier	code		5004353	0					
ANR	5004456	PrimaryExpression	0		5004353	1					
ANR	5004457	ReturnStatement	"return gs_rethrow ( code , ""Failed to create ICC profile from CIEDEFG"" ) ;"	285:12:10209:10277	5004353	1	True				
ANR	5004458	CallExpression	"gs_rethrow ( code , ""Failed to create ICC profile from CIEDEFG"" )"		5004353	0					
ANR	5004459	Callee	gs_rethrow		5004353	0					
ANR	5004460	Identifier	gs_rethrow		5004353	0					
ANR	5004461	ArgumentList	code		5004353	1					
ANR	5004462	Argument	code		5004353	0					
ANR	5004463	Identifier	code		5004353	0					
ANR	5004464	Argument	"""Failed to create ICC profile from CIEDEFG"""		5004353	1					
ANR	5004465	PrimaryExpression	"""Failed to create ICC profile from CIEDEFG"""		5004353	0					
ANR	5004466	ElseStatement	else		5004353	0					
ANR	5004467	CompoundStatement		17:11:706:706	5004353	0					
ANR	5004468	ExpressionStatement	pcs_icc = pcs -> icc_equivalent	287:8:10300:10329	5004353	0	True				
ANR	5004469	AssignmentExpression	pcs_icc = pcs -> icc_equivalent		5004353	0		=			
ANR	5004470	Identifier	pcs_icc		5004353	0					
ANR	5004471	PtrMemberAccess	pcs -> icc_equivalent		5004353	1					
ANR	5004472	Identifier	pcs		5004353	0					
ANR	5004473	Identifier	icc_equivalent		5004353	1					
ANR	5004474	IfStatement	"if ( check_range ( & ( pcs -> params . defg -> RangeDEFG . ranges [ 0 ] ) , 4 ) )"		5004353	6					
ANR	5004475	Condition	"check_range ( & ( pcs -> params . defg -> RangeDEFG . ranges [ 0 ] ) , 4 )"	291:8:10464:10519	5004353	0	True				
ANR	5004476	CallExpression	"check_range ( & ( pcs -> params . defg -> RangeDEFG . ranges [ 0 ] ) , 4 )"		5004353	0					
ANR	5004477	Callee	check_range		5004353	0					
ANR	5004478	Identifier	check_range		5004353	0					
ANR	5004479	ArgumentList	& ( pcs -> params . defg -> RangeDEFG . ranges [ 0 ] )		5004353	1					
ANR	5004480	Argument	& ( pcs -> params . defg -> RangeDEFG . ranges [ 0 ] )		5004353	0					
ANR	5004481	UnaryOperationExpression	& ( pcs -> params . defg -> RangeDEFG . ranges [ 0 ] )		5004353	0					
ANR	5004482	UnaryOperator	&		5004353	0					
ANR	5004483	ArrayIndexing	pcs -> params . defg -> RangeDEFG . ranges [ 0 ]		5004353	1					
ANR	5004484	MemberAccess	pcs -> params . defg -> RangeDEFG . ranges		5004353	0					
ANR	5004485	PtrMemberAccess	pcs -> params . defg -> RangeDEFG		5004353	0					
ANR	5004486	MemberAccess	pcs -> params . defg		5004353	0					
ANR	5004487	PtrMemberAccess	pcs -> params		5004353	0					
ANR	5004488	Identifier	pcs		5004353	0					
ANR	5004489	Identifier	params		5004353	1					
ANR	5004490	Identifier	defg		5004353	1					
ANR	5004491	Identifier	RangeDEFG		5004353	1					
ANR	5004492	Identifier	ranges		5004353	1					
ANR	5004493	PrimaryExpression	0		5004353	1					
ANR	5004494	Argument	4		5004353	1					
ANR	5004495	PrimaryExpression	4		5004353	0					
ANR	5004496	CompoundStatement		22:66:938:938	5004353	1					
ANR	5004497	ReturnStatement	"return ( pcs_icc -> type -> remap_color ) ( pc , pcs_icc , pdc , pgs , dev , select ) ;"	292:8:10532:10598	5004353	0	True				
ANR	5004498	CallExpression	"( pcs_icc -> type -> remap_color ) ( pc , pcs_icc , pdc , pgs , dev , select )"		5004353	0					
ANR	5004499	Callee	pcs_icc -> type -> remap_color		5004353	0					
ANR	5004500	PtrMemberAccess	pcs_icc -> type -> remap_color		5004353	0					
ANR	5004501	PtrMemberAccess	pcs_icc -> type		5004353	0					
ANR	5004502	Identifier	pcs_icc		5004353	0					
ANR	5004503	Identifier	type		5004353	1					
ANR	5004504	Identifier	remap_color		5004353	1					
ANR	5004505	ArgumentList	pc		5004353	1					
ANR	5004506	Argument	pc		5004353	0					
ANR	5004507	Identifier	pc		5004353	0					
ANR	5004508	Argument	pcs_icc		5004353	1					
ANR	5004509	Identifier	pcs_icc		5004353	0					
ANR	5004510	Argument	pdc		5004353	2					
ANR	5004511	Identifier	pdc		5004353	0					
ANR	5004512	Argument	pgs		5004353	3					
ANR	5004513	Identifier	pgs		5004353	0					
ANR	5004514	Argument	dev		5004353	4					
ANR	5004515	Identifier	dev		5004353	0					
ANR	5004516	Argument	select		5004353	5					
ANR	5004517	Identifier	select		5004353	0					
ANR	5004518	ExpressionStatement	"rescale_input_color ( & ( pcs -> params . defg -> RangeDEFG . ranges [ 0 ] ) , 4 , pc , & scale_pc )"	295:4:10647:10726	5004353	7	True				
ANR	5004519	CallExpression	"rescale_input_color ( & ( pcs -> params . defg -> RangeDEFG . ranges [ 0 ] ) , 4 , pc , & scale_pc )"		5004353	0					
ANR	5004520	Callee	rescale_input_color		5004353	0					
ANR	5004521	Identifier	rescale_input_color		5004353	0					
ANR	5004522	ArgumentList	& ( pcs -> params . defg -> RangeDEFG . ranges [ 0 ] )		5004353	1					
ANR	5004523	Argument	& ( pcs -> params . defg -> RangeDEFG . ranges [ 0 ] )		5004353	0					
ANR	5004524	UnaryOperationExpression	& ( pcs -> params . defg -> RangeDEFG . ranges [ 0 ] )		5004353	0					
ANR	5004525	UnaryOperator	&		5004353	0					
ANR	5004526	ArrayIndexing	pcs -> params . defg -> RangeDEFG . ranges [ 0 ]		5004353	1					
ANR	5004527	MemberAccess	pcs -> params . defg -> RangeDEFG . ranges		5004353	0					
ANR	5004528	PtrMemberAccess	pcs -> params . defg -> RangeDEFG		5004353	0					
ANR	5004529	MemberAccess	pcs -> params . defg		5004353	0					
ANR	5004530	PtrMemberAccess	pcs -> params		5004353	0					
ANR	5004531	Identifier	pcs		5004353	0					
ANR	5004532	Identifier	params		5004353	1					
ANR	5004533	Identifier	defg		5004353	1					
ANR	5004534	Identifier	RangeDEFG		5004353	1					
ANR	5004535	Identifier	ranges		5004353	1					
ANR	5004536	PrimaryExpression	0		5004353	1					
ANR	5004537	Argument	4		5004353	1					
ANR	5004538	PrimaryExpression	4		5004353	0					
ANR	5004539	Argument	pc		5004353	2					
ANR	5004540	Identifier	pc		5004353	0					
ANR	5004541	Argument	& scale_pc		5004353	3					
ANR	5004542	UnaryOperationExpression	& scale_pc		5004353	0					
ANR	5004543	UnaryOperator	&		5004353	0					
ANR	5004544	Identifier	scale_pc		5004353	1					
ANR	5004545	ExpressionStatement	"code = ( pcs_icc -> type -> remap_color ) ( & scale_pc , pcs_icc , pdc , pgs , dev , select )"	297:4:10760:10833	5004353	8	True				
ANR	5004546	AssignmentExpression	"code = ( pcs_icc -> type -> remap_color ) ( & scale_pc , pcs_icc , pdc , pgs , dev , select )"		5004353	0		=			
ANR	5004547	Identifier	code		5004353	0					
ANR	5004548	CallExpression	"( pcs_icc -> type -> remap_color ) ( & scale_pc , pcs_icc , pdc , pgs , dev , select )"		5004353	1					
ANR	5004549	Callee	pcs_icc -> type -> remap_color		5004353	0					
ANR	5004550	PtrMemberAccess	pcs_icc -> type -> remap_color		5004353	0					
ANR	5004551	PtrMemberAccess	pcs_icc -> type		5004353	0					
ANR	5004552	Identifier	pcs_icc		5004353	0					
ANR	5004553	Identifier	type		5004353	1					
ANR	5004554	Identifier	remap_color		5004353	1					
ANR	5004555	ArgumentList	& scale_pc		5004353	1					
ANR	5004556	Argument	& scale_pc		5004353	0					
ANR	5004557	UnaryOperationExpression	& scale_pc		5004353	0					
ANR	5004558	UnaryOperator	&		5004353	0					
ANR	5004559	Identifier	scale_pc		5004353	1					
ANR	5004560	Argument	pcs_icc		5004353	1					
ANR	5004561	Identifier	pcs_icc		5004353	0					
ANR	5004562	Argument	pdc		5004353	2					
ANR	5004563	Identifier	pdc		5004353	0					
ANR	5004564	Argument	pgs		5004353	3					
ANR	5004565	Identifier	pgs		5004353	0					
ANR	5004566	Argument	dev		5004353	4					
ANR	5004567	Identifier	dev		5004353	0					
ANR	5004568	Argument	select		5004353	5					
ANR	5004569	Identifier	select		5004353	0					
ANR	5004570	ForStatement	for ( i = 0 ; i < 4 ; i ++ )		5004353	9					
ANR	5004571	ForInit	i = 0 ;	299:9:10911:10916	5004353	0	True				
ANR	5004572	AssignmentExpression	i = 0		5004353	0		=			
ANR	5004573	Identifier	i		5004353	0					
ANR	5004574	PrimaryExpression	0		5004353	1					
ANR	5004575	Condition	i < 4	299:16:10918:10922	5004353	1	True				
ANR	5004576	RelationalExpression	i < 4		5004353	0		<			
ANR	5004577	Identifier	i		5004353	0					
ANR	5004578	PrimaryExpression	4		5004353	1					
ANR	5004579	PostIncDecOperationExpression	i ++	299:23:10925:10927	5004353	2	True				
ANR	5004580	Identifier	i		5004353	0					
ANR	5004581	IncDec	++		5004353	1					
ANR	5004582	ExpressionStatement	pdc -> ccolor . paint . values [ i ] = pc -> paint . values [ i ]	300:8:10938:10987	5004353	3	True				
ANR	5004583	AssignmentExpression	pdc -> ccolor . paint . values [ i ] = pc -> paint . values [ i ]		5004353	0		=			
ANR	5004584	ArrayIndexing	pdc -> ccolor . paint . values [ i ]		5004353	0					
ANR	5004585	MemberAccess	pdc -> ccolor . paint . values		5004353	0					
ANR	5004586	MemberAccess	pdc -> ccolor . paint		5004353	0					
ANR	5004587	PtrMemberAccess	pdc -> ccolor		5004353	0					
ANR	5004588	Identifier	pdc		5004353	0					
ANR	5004589	Identifier	ccolor		5004353	1					
ANR	5004590	Identifier	paint		5004353	1					
ANR	5004591	Identifier	values		5004353	1					
ANR	5004592	Identifier	i		5004353	1					
ANR	5004593	ArrayIndexing	pc -> paint . values [ i ]		5004353	1					
ANR	5004594	MemberAccess	pc -> paint . values		5004353	0					
ANR	5004595	PtrMemberAccess	pc -> paint		5004353	0					
ANR	5004596	Identifier	pc		5004353	0					
ANR	5004597	Identifier	paint		5004353	1					
ANR	5004598	Identifier	values		5004353	1					
ANR	5004599	Identifier	i		5004353	1					
ANR	5004600	ExpressionStatement	pdc -> ccolor_valid = true	301:4:10993:11017	5004353	10	True				
ANR	5004601	AssignmentExpression	pdc -> ccolor_valid = true		5004353	0		=			
ANR	5004602	PtrMemberAccess	pdc -> ccolor_valid		5004353	0					
ANR	5004603	Identifier	pdc		5004353	0					
ANR	5004604	Identifier	ccolor_valid		5004353	1					
ANR	5004605	Identifier	true		5004353	1					
ANR	5004606	ReturnStatement	return code ;	302:4:11023:11034	5004353	11	True				
ANR	5004607	Identifier	code		5004353	0					
ANR	5004608	ReturnType	int		5004353	1					
ANR	5004609	Identifier	gx_remap_CIEDEFG		5004353	2					
ANR	5004610	ParameterList	"const gs_client_color * pc , const gs_color_space * pcs_in , gx_device_color * pdc , const gs_gstate * pgs , gx_device * dev , gs_color_select_t select"		5004353	3					
ANR	5004611	Parameter	const gs_client_color * pc	267:17:9411:9436	5004353	0	True				
ANR	5004612	ParameterType	const gs_client_color *		5004353	0					
ANR	5004613	Identifier	pc		5004353	1					
ANR	5004614	Parameter	const gs_color_space * pcs_in	267:45:9439:9467	5004353	1	True				
ANR	5004615	ParameterType	const gs_color_space *		5004353	0					
ANR	5004616	Identifier	pcs_in		5004353	1					
ANR	5004617	Parameter	gx_device_color * pdc	268:8:9478:9498	5004353	2	True				
ANR	5004618	ParameterType	gx_device_color *		5004353	0					
ANR	5004619	Identifier	pdc		5004353	1					
ANR	5004620	Parameter	const gs_gstate * pgs	268:31:9501:9521	5004353	3	True				
ANR	5004621	ParameterType	const gs_gstate *		5004353	0					
ANR	5004622	Identifier	pgs		5004353	1					
ANR	5004623	Parameter	gx_device * dev	268:54:9524:9538	5004353	4	True				
ANR	5004624	ParameterType	gx_device *		5004353	0					
ANR	5004625	Identifier	dev		5004353	1					
ANR	5004626	Parameter	gs_color_select_t select	269:16:9557:9580	5004353	5	True				
ANR	5004627	ParameterType	gs_color_select_t		5004353	0					
ANR	5004628	Identifier	select		5004353	1					
ANR	5004629	CFGEntryNode	ENTRY		5004353		True				
ANR	5004630	CFGExitNode	EXIT		5004353		True				
ANR	5004631	Symbol	* * pcs_icc		5004353						
ANR	5004632	Symbol	pcs_icc		5004353						
ANR	5004633	Symbol	select		5004353						
ANR	5004634	Symbol	* pcs -> params . defg		5004353						
ANR	5004635	Symbol	gx_ciedefg_to_icc		5004353						
ANR	5004636	Symbol	* pgs		5004353						
ANR	5004637	Symbol	* pcs		5004353						
ANR	5004638	Symbol	gs_rethrow		5004353						
ANR	5004639	Symbol	& scale_pc		5004353						
ANR	5004640	Symbol	* pc -> paint . values		5004353						
ANR	5004641	Symbol	pdc -> ccolor . paint		5004353						
ANR	5004642	Symbol	dev		5004353						
ANR	5004643	Symbol	* pdc		5004353						
ANR	5004644	Symbol	pcs_icc -> type -> remap_color		5004353						
ANR	5004645	Symbol	* pgs -> memory		5004353						
ANR	5004646	Symbol	pcs_in		5004353						
ANR	5004647	Symbol	NULL		5004353						
ANR	5004648	Symbol	pcs -> params . defg -> RangeDEFG		5004353						
ANR	5004649	Symbol	* pdc -> ccolor . paint . values		5004353						
ANR	5004650	Symbol	* * pgs		5004353						
ANR	5004651	Symbol	* * pcs		5004353						
ANR	5004652	Symbol	* pcs -> params		5004353						
ANR	5004653	Symbol	* pdc -> ccolor		5004353						
ANR	5004654	Symbol	true		5004353						
ANR	5004655	Symbol	* pc		5004353						
ANR	5004656	Symbol	* pcs_icc		5004353						
ANR	5004657	Symbol	code		5004353						
ANR	5004658	Symbol	* * pdc		5004353						
ANR	5004659	Symbol	* pc -> paint		5004353						
ANR	5004660	Symbol	& pcs_icc		5004353						
ANR	5004661	Symbol	pcs_icc -> type		5004353						
ANR	5004662	Symbol	pdc -> ccolor_valid		5004353						
ANR	5004663	Symbol	pcs -> params . defg		5004353						
ANR	5004664	Symbol	pgs		5004353						
ANR	5004665	Symbol	* * pc		5004353						
ANR	5004666	Symbol	pgs -> memory		5004353						
ANR	5004667	Symbol	scale_pc		5004353						
ANR	5004668	Symbol	check_range		5004353						
ANR	5004669	Symbol	pcs		5004353						
ANR	5004670	Symbol	* pdc -> ccolor . paint		5004353						
ANR	5004671	Symbol	pdc -> ccolor . paint . values		5004353						
ANR	5004672	Symbol	pcs -> params . defg -> RangeDEFG . ranges		5004353						
ANR	5004673	Symbol	pcs -> params		5004353						
ANR	5004674	Symbol	i		5004353						
ANR	5004675	Symbol	* pcs_icc -> type		5004353						
ANR	5004676	Symbol	pc -> paint . values		5004353						
ANR	5004677	Symbol	pcs -> icc_equivalent		5004353						
ANR	5004678	Symbol	pdc		5004353						
ANR	5004679	Symbol	pc -> paint		5004353						
ANR	5004680	Symbol	pc		5004353						
ANR	5004681	Symbol	* i		5004353						
ANR	5004682	Symbol	pdc -> ccolor		5004353						
ANR	5004683	Symbol	pgs -> memory -> stable_memory		5004353						
ANR	5004684	Function	gx_concretize_CIEDEFG	306:0:11074:12486							
ANR	5004685	FunctionDef	"gx_concretize_CIEDEFG (const gs_client_color * pc , const gs_color_space * pcs_in , frac * pconc , const gs_gstate * pgs , gx_device * dev)"		5004684	0					
ANR	5004686	CompoundStatement		309:0:11234:12486	5004684	0					
ANR	5004687	IdentifierDeclStatement	int code ;	310:4:11240:11248	5004684	0	True				
ANR	5004688	IdentifierDecl	code		5004684	0					
ANR	5004689	IdentifierDeclType	int		5004684	0					
ANR	5004690	Identifier	code		5004684	1					
ANR	5004691	IdentifierDeclStatement	gs_color_space * pcs_icc ;	311:4:11254:11277	5004684	1	True				
ANR	5004692	IdentifierDecl	* pcs_icc		5004684	0					
ANR	5004693	IdentifierDeclType	gs_color_space *		5004684	0					
ANR	5004694	Identifier	pcs_icc		5004684	1					
ANR	5004695	IdentifierDeclStatement	gs_client_color scale_pc ;	312:4:11283:11307	5004684	2	True				
ANR	5004696	IdentifierDecl	scale_pc		5004684	0					
ANR	5004697	IdentifierDeclType	gs_client_color		5004684	0					
ANR	5004698	Identifier	scale_pc		5004684	1					
ANR	5004699	IdentifierDeclStatement	gs_color_space * pcs = ( gs_color_space * ) pcs_in ;	313:4:11313:11360	5004684	3	True				
ANR	5004700	IdentifierDecl	* pcs = ( gs_color_space * ) pcs_in		5004684	0					
ANR	5004701	IdentifierDeclType	gs_color_space *		5004684	0					
ANR	5004702	Identifier	pcs		5004684	1					
ANR	5004703	AssignmentExpression	* pcs = ( gs_color_space * ) pcs_in		5004684	2		=			
ANR	5004704	Identifier	pcs		5004684	0					
ANR	5004705	CastExpression	( gs_color_space * ) pcs_in		5004684	1					
ANR	5004706	CastTarget	gs_color_space *		5004684	0					
ANR	5004707	Identifier	pcs_in		5004684	1					
ANR	5004708	ExpressionStatement	"if_debug4m ( 'c' , pgs -> memory , ""[c]concretize DEFG [%g %g %g %g]\\n"" , pc -> paint . values [ 0 ] , pc -> paint . values [ 1 ] , pc -> paint . values [ 2 ] , pc -> paint . values [ 3 ] )"	315:4:11367:11547	5004684	4	True				
ANR	5004709	CallExpression	"if_debug4m ( 'c' , pgs -> memory , ""[c]concretize DEFG [%g %g %g %g]\\n"" , pc -> paint . values [ 0 ] , pc -> paint . values [ 1 ] , pc -> paint . values [ 2 ] , pc -> paint . values [ 3 ] )"		5004684	0					
ANR	5004710	Callee	if_debug4m		5004684	0					
ANR	5004711	Identifier	if_debug4m		5004684	0					
ANR	5004712	ArgumentList	'c'		5004684	1					
ANR	5004713	Argument	'c'		5004684	0					
ANR	5004714	PrimaryExpression	'c'		5004684	0					
ANR	5004715	Argument	pgs -> memory		5004684	1					
ANR	5004716	PtrMemberAccess	pgs -> memory		5004684	0					
ANR	5004717	Identifier	pgs		5004684	0					
ANR	5004718	Identifier	memory		5004684	1					
ANR	5004719	Argument	"""[c]concretize DEFG [%g %g %g %g]\\n"""		5004684	2					
ANR	5004720	PrimaryExpression	"""[c]concretize DEFG [%g %g %g %g]\\n"""		5004684	0					
ANR	5004721	Argument	pc -> paint . values [ 0 ]		5004684	3					
ANR	5004722	ArrayIndexing	pc -> paint . values [ 0 ]		5004684	0					
ANR	5004723	MemberAccess	pc -> paint . values		5004684	0					
ANR	5004724	PtrMemberAccess	pc -> paint		5004684	0					
ANR	5004725	Identifier	pc		5004684	0					
ANR	5004726	Identifier	paint		5004684	1					
ANR	5004727	Identifier	values		5004684	1					
ANR	5004728	PrimaryExpression	0		5004684	1					
ANR	5004729	Argument	pc -> paint . values [ 1 ]		5004684	4					
ANR	5004730	ArrayIndexing	pc -> paint . values [ 1 ]		5004684	0					
ANR	5004731	MemberAccess	pc -> paint . values		5004684	0					
ANR	5004732	PtrMemberAccess	pc -> paint		5004684	0					
ANR	5004733	Identifier	pc		5004684	0					
ANR	5004734	Identifier	paint		5004684	1					
ANR	5004735	Identifier	values		5004684	1					
ANR	5004736	PrimaryExpression	1		5004684	1					
ANR	5004737	Argument	pc -> paint . values [ 2 ]		5004684	5					
ANR	5004738	ArrayIndexing	pc -> paint . values [ 2 ]		5004684	0					
ANR	5004739	MemberAccess	pc -> paint . values		5004684	0					
ANR	5004740	PtrMemberAccess	pc -> paint		5004684	0					
ANR	5004741	Identifier	pc		5004684	0					
ANR	5004742	Identifier	paint		5004684	1					
ANR	5004743	Identifier	values		5004684	1					
ANR	5004744	PrimaryExpression	2		5004684	1					
ANR	5004745	Argument	pc -> paint . values [ 3 ]		5004684	6					
ANR	5004746	ArrayIndexing	pc -> paint . values [ 3 ]		5004684	0					
ANR	5004747	MemberAccess	pc -> paint . values		5004684	0					
ANR	5004748	PtrMemberAccess	pc -> paint		5004684	0					
ANR	5004749	Identifier	pc		5004684	0					
ANR	5004750	Identifier	paint		5004684	1					
ANR	5004751	Identifier	values		5004684	1					
ANR	5004752	PrimaryExpression	3		5004684	1					
ANR	5004753	IfStatement	if ( pcs -> icc_equivalent == NULL )		5004684	5					
ANR	5004754	Condition	pcs -> icc_equivalent == NULL	321:8:11717:11743	5004684	0	True				
ANR	5004755	EqualityExpression	pcs -> icc_equivalent == NULL		5004684	0		==			
ANR	5004756	PtrMemberAccess	pcs -> icc_equivalent		5004684	0					
ANR	5004757	Identifier	pcs		5004684	0					
ANR	5004758	Identifier	icc_equivalent		5004684	1					
ANR	5004759	Identifier	NULL		5004684	1					
ANR	5004760	CompoundStatement		13:37:511:511	5004684	1					
ANR	5004761	ExpressionStatement	"code = gx_ciedefg_to_icc ( & pcs_icc , pcs , pgs -> memory -> stable_memory )"	322:8:11756:11823	5004684	0	True				
ANR	5004762	AssignmentExpression	"code = gx_ciedefg_to_icc ( & pcs_icc , pcs , pgs -> memory -> stable_memory )"		5004684	0		=			
ANR	5004763	Identifier	code		5004684	0					
ANR	5004764	CallExpression	"gx_ciedefg_to_icc ( & pcs_icc , pcs , pgs -> memory -> stable_memory )"		5004684	1					
ANR	5004765	Callee	gx_ciedefg_to_icc		5004684	0					
ANR	5004766	Identifier	gx_ciedefg_to_icc		5004684	0					
ANR	5004767	ArgumentList	& pcs_icc		5004684	1					
ANR	5004768	Argument	& pcs_icc		5004684	0					
ANR	5004769	UnaryOperationExpression	& pcs_icc		5004684	0					
ANR	5004770	UnaryOperator	&		5004684	0					
ANR	5004771	Identifier	pcs_icc		5004684	1					
ANR	5004772	Argument	pcs		5004684	1					
ANR	5004773	Identifier	pcs		5004684	0					
ANR	5004774	Argument	pgs -> memory -> stable_memory		5004684	2					
ANR	5004775	PtrMemberAccess	pgs -> memory -> stable_memory		5004684	0					
ANR	5004776	PtrMemberAccess	pgs -> memory		5004684	0					
ANR	5004777	Identifier	pgs		5004684	0					
ANR	5004778	Identifier	memory		5004684	1					
ANR	5004779	Identifier	stable_memory		5004684	1					
ANR	5004780	IfStatement	if ( code < 0 )		5004684	1					
ANR	5004781	Condition	code < 0	323:12:11837:11844	5004684	0	True				
ANR	5004782	RelationalExpression	code < 0		5004684	0		<			
ANR	5004783	Identifier	code		5004684	0					
ANR	5004784	PrimaryExpression	0		5004684	1					
ANR	5004785	ReturnStatement	"return gs_rethrow ( code , ""Failed to create ICC profile from CIEDEFG"" ) ;"	324:12:11859:11927	5004684	1	True				
ANR	5004786	CallExpression	"gs_rethrow ( code , ""Failed to create ICC profile from CIEDEFG"" )"		5004684	0					
ANR	5004787	Callee	gs_rethrow		5004684	0					
ANR	5004788	Identifier	gs_rethrow		5004684	0					
ANR	5004789	ArgumentList	code		5004684	1					
ANR	5004790	Argument	code		5004684	0					
ANR	5004791	Identifier	code		5004684	0					
ANR	5004792	Argument	"""Failed to create ICC profile from CIEDEFG"""		5004684	1					
ANR	5004793	PrimaryExpression	"""Failed to create ICC profile from CIEDEFG"""		5004684	0					
ANR	5004794	ElseStatement	else		5004684	0					
ANR	5004795	CompoundStatement		17:11:705:705	5004684	0					
ANR	5004796	ExpressionStatement	pcs_icc = pcs -> icc_equivalent	326:8:11950:11979	5004684	0	True				
ANR	5004797	AssignmentExpression	pcs_icc = pcs -> icc_equivalent		5004684	0		=			
ANR	5004798	Identifier	pcs_icc		5004684	0					
ANR	5004799	PtrMemberAccess	pcs -> icc_equivalent		5004684	1					
ANR	5004800	Identifier	pcs		5004684	0					
ANR	5004801	Identifier	icc_equivalent		5004684	1					
ANR	5004802	IfStatement	"if ( check_range ( & ( pcs -> params . defg -> RangeDEFG . ranges [ 0 ] ) , 4 ) )"		5004684	6					
ANR	5004803	Condition	"check_range ( & ( pcs -> params . defg -> RangeDEFG . ranges [ 0 ] ) , 4 )"	330:8:12114:12169	5004684	0	True				
ANR	5004804	CallExpression	"check_range ( & ( pcs -> params . defg -> RangeDEFG . ranges [ 0 ] ) , 4 )"		5004684	0					
ANR	5004805	Callee	check_range		5004684	0					
ANR	5004806	Identifier	check_range		5004684	0					
ANR	5004807	ArgumentList	& ( pcs -> params . defg -> RangeDEFG . ranges [ 0 ] )		5004684	1					
ANR	5004808	Argument	& ( pcs -> params . defg -> RangeDEFG . ranges [ 0 ] )		5004684	0					
ANR	5004809	UnaryOperationExpression	& ( pcs -> params . defg -> RangeDEFG . ranges [ 0 ] )		5004684	0					
ANR	5004810	UnaryOperator	&		5004684	0					
ANR	5004811	ArrayIndexing	pcs -> params . defg -> RangeDEFG . ranges [ 0 ]		5004684	1					
ANR	5004812	MemberAccess	pcs -> params . defg -> RangeDEFG . ranges		5004684	0					
ANR	5004813	PtrMemberAccess	pcs -> params . defg -> RangeDEFG		5004684	0					
ANR	5004814	MemberAccess	pcs -> params . defg		5004684	0					
ANR	5004815	PtrMemberAccess	pcs -> params		5004684	0					
ANR	5004816	Identifier	pcs		5004684	0					
ANR	5004817	Identifier	params		5004684	1					
ANR	5004818	Identifier	defg		5004684	1					
ANR	5004819	Identifier	RangeDEFG		5004684	1					
ANR	5004820	Identifier	ranges		5004684	1					
ANR	5004821	PrimaryExpression	0		5004684	1					
ANR	5004822	Argument	4		5004684	1					
ANR	5004823	PrimaryExpression	4		5004684	0					
ANR	5004824	CompoundStatement		22:66:937:937	5004684	1					
ANR	5004825	ReturnStatement	"return ( pcs_icc -> type -> concretize_color ) ( pc , pcs_icc , pconc , pgs , dev ) ;"	331:8:12182:12252	5004684	0	True				
ANR	5004826	CallExpression	"( pcs_icc -> type -> concretize_color ) ( pc , pcs_icc , pconc , pgs , dev )"		5004684	0					
ANR	5004827	Callee	pcs_icc -> type -> concretize_color		5004684	0					
ANR	5004828	PtrMemberAccess	pcs_icc -> type -> concretize_color		5004684	0					
ANR	5004829	PtrMemberAccess	pcs_icc -> type		5004684	0					
ANR	5004830	Identifier	pcs_icc		5004684	0					
ANR	5004831	Identifier	type		5004684	1					
ANR	5004832	Identifier	concretize_color		5004684	1					
ANR	5004833	ArgumentList	pc		5004684	1					
ANR	5004834	Argument	pc		5004684	0					
ANR	5004835	Identifier	pc		5004684	0					
ANR	5004836	Argument	pcs_icc		5004684	1					
ANR	5004837	Identifier	pcs_icc		5004684	0					
ANR	5004838	Argument	pconc		5004684	2					
ANR	5004839	Identifier	pconc		5004684	0					
ANR	5004840	Argument	pgs		5004684	3					
ANR	5004841	Identifier	pgs		5004684	0					
ANR	5004842	Argument	dev		5004684	4					
ANR	5004843	Identifier	dev		5004684	0					
ANR	5004844	ExpressionStatement	"rescale_input_color ( & ( pcs -> params . defg -> RangeDEFG . ranges [ 0 ] ) , 4 , pc , & scale_pc )"	334:4:12301:12380	5004684	7	True				
ANR	5004845	CallExpression	"rescale_input_color ( & ( pcs -> params . defg -> RangeDEFG . ranges [ 0 ] ) , 4 , pc , & scale_pc )"		5004684	0					
ANR	5004846	Callee	rescale_input_color		5004684	0					
ANR	5004847	Identifier	rescale_input_color		5004684	0					
ANR	5004848	ArgumentList	& ( pcs -> params . defg -> RangeDEFG . ranges [ 0 ] )		5004684	1					
ANR	5004849	Argument	& ( pcs -> params . defg -> RangeDEFG . ranges [ 0 ] )		5004684	0					
ANR	5004850	UnaryOperationExpression	& ( pcs -> params . defg -> RangeDEFG . ranges [ 0 ] )		5004684	0					
ANR	5004851	UnaryOperator	&		5004684	0					
ANR	5004852	ArrayIndexing	pcs -> params . defg -> RangeDEFG . ranges [ 0 ]		5004684	1					
ANR	5004853	MemberAccess	pcs -> params . defg -> RangeDEFG . ranges		5004684	0					
ANR	5004854	PtrMemberAccess	pcs -> params . defg -> RangeDEFG		5004684	0					
ANR	5004855	MemberAccess	pcs -> params . defg		5004684	0					
ANR	5004856	PtrMemberAccess	pcs -> params		5004684	0					
ANR	5004857	Identifier	pcs		5004684	0					
ANR	5004858	Identifier	params		5004684	1					
ANR	5004859	Identifier	defg		5004684	1					
ANR	5004860	Identifier	RangeDEFG		5004684	1					
ANR	5004861	Identifier	ranges		5004684	1					
ANR	5004862	PrimaryExpression	0		5004684	1					
ANR	5004863	Argument	4		5004684	1					
ANR	5004864	PrimaryExpression	4		5004684	0					
ANR	5004865	Argument	pc		5004684	2					
ANR	5004866	Identifier	pc		5004684	0					
ANR	5004867	Argument	& scale_pc		5004684	3					
ANR	5004868	UnaryOperationExpression	& scale_pc		5004684	0					
ANR	5004869	UnaryOperator	&		5004684	0					
ANR	5004870	Identifier	scale_pc		5004684	1					
ANR	5004871	ReturnStatement	"return ( pcs_icc -> type -> concretize_color ) ( pc , pcs_icc , pconc , pgs , dev ) ;"	336:4:12414:12484	5004684	8	True				
ANR	5004872	CallExpression	"( pcs_icc -> type -> concretize_color ) ( pc , pcs_icc , pconc , pgs , dev )"		5004684	0					
ANR	5004873	Callee	pcs_icc -> type -> concretize_color		5004684	0					
ANR	5004874	PtrMemberAccess	pcs_icc -> type -> concretize_color		5004684	0					
ANR	5004875	PtrMemberAccess	pcs_icc -> type		5004684	0					
ANR	5004876	Identifier	pcs_icc		5004684	0					
ANR	5004877	Identifier	type		5004684	1					
ANR	5004878	Identifier	concretize_color		5004684	1					
ANR	5004879	ArgumentList	pc		5004684	1					
ANR	5004880	Argument	pc		5004684	0					
ANR	5004881	Identifier	pc		5004684	0					
ANR	5004882	Argument	pcs_icc		5004684	1					
ANR	5004883	Identifier	pcs_icc		5004684	0					
ANR	5004884	Argument	pconc		5004684	2					
ANR	5004885	Identifier	pconc		5004684	0					
ANR	5004886	Argument	pgs		5004684	3					
ANR	5004887	Identifier	pgs		5004684	0					
ANR	5004888	Argument	dev		5004684	4					
ANR	5004889	Identifier	dev		5004684	0					
ANR	5004890	ReturnType	int		5004684	1					
ANR	5004891	Identifier	gx_concretize_CIEDEFG		5004684	2					
ANR	5004892	ParameterList	"const gs_client_color * pc , const gs_color_space * pcs_in , frac * pconc , const gs_gstate * pgs , gx_device * dev"		5004684	3					
ANR	5004893	Parameter	const gs_client_color * pc	307:22:11100:11125	5004684	0	True				
ANR	5004894	ParameterType	const gs_client_color *		5004684	0					
ANR	5004895	Identifier	pc		5004684	1					
ANR	5004896	Parameter	const gs_color_space * pcs_in	307:50:11128:11156	5004684	1	True				
ANR	5004897	ParameterType	const gs_color_space *		5004684	0					
ANR	5004898	Identifier	pcs_in		5004684	1					
ANR	5004899	Parameter	frac * pconc	308:22:11181:11192	5004684	2	True				
ANR	5004900	ParameterType	frac *		5004684	0					
ANR	5004901	Identifier	pconc		5004684	1					
ANR	5004902	Parameter	const gs_gstate * pgs	308:36:11195:11215	5004684	3	True				
ANR	5004903	ParameterType	const gs_gstate *		5004684	0					
ANR	5004904	Identifier	pgs		5004684	1					
ANR	5004905	Parameter	gx_device * dev	308:59:11218:11231	5004684	4	True				
ANR	5004906	ParameterType	gx_device *		5004684	0					
ANR	5004907	Identifier	dev		5004684	1					
ANR	5004908	CFGEntryNode	ENTRY		5004684		True				
ANR	5004909	CFGExitNode	EXIT		5004684		True				
ANR	5004910	Symbol	* * pcs_icc		5004684						
ANR	5004911	Symbol	pcs_icc		5004684						
ANR	5004912	Symbol	code		5004684						
ANR	5004913	Symbol	* pcs -> params . defg		5004684						
ANR	5004914	Symbol	gx_ciedefg_to_icc		5004684						
ANR	5004915	Symbol	* pgs		5004684						
ANR	5004916	Symbol	* pc -> paint		5004684						
ANR	5004917	Symbol	pconc		5004684						
ANR	5004918	Symbol	& pcs_icc		5004684						
ANR	5004919	Symbol	pcs_icc -> type		5004684						
ANR	5004920	Symbol	* pcs		5004684						
ANR	5004921	Symbol	gs_rethrow		5004684						
ANR	5004922	Symbol	& scale_pc		5004684						
ANR	5004923	Symbol	* pc -> paint . values		5004684						
ANR	5004924	Symbol	dev		5004684						
ANR	5004925	Symbol	pcs -> params . defg		5004684						
ANR	5004926	Symbol	pgs		5004684						
ANR	5004927	Symbol	* * pc		5004684						
ANR	5004928	Symbol	pgs -> memory		5004684						
ANR	5004929	Symbol	scale_pc		5004684						
ANR	5004930	Symbol	* pgs -> memory		5004684						
ANR	5004931	Symbol	check_range		5004684						
ANR	5004932	Symbol	pcs_icc -> type -> concretize_color		5004684						
ANR	5004933	Symbol	pcs		5004684						
ANR	5004934	Symbol	pcs_in		5004684						
ANR	5004935	Symbol	NULL		5004684						
ANR	5004936	Symbol	pcs -> params . defg -> RangeDEFG		5004684						
ANR	5004937	Symbol	pcs -> params . defg -> RangeDEFG . ranges		5004684						
ANR	5004938	Symbol	pcs -> params		5004684						
ANR	5004939	Symbol	* pcs_icc -> type		5004684						
ANR	5004940	Symbol	pc -> paint . values		5004684						
ANR	5004941	Symbol	pcs -> icc_equivalent		5004684						
ANR	5004942	Symbol	* * pgs		5004684						
ANR	5004943	Symbol	pc -> paint		5004684						
ANR	5004944	Symbol	pc		5004684						
ANR	5004945	Symbol	* * pcs		5004684						
ANR	5004946	Symbol	* pcs -> params		5004684						
ANR	5004947	Symbol	* pc		5004684						
ANR	5004948	Symbol	pgs -> memory -> stable_memory		5004684						
ANR	5004949	Symbol	* pcs_icc		5004684						
ANR	5004950	Function	gx_psconcretize_CIEA	340:0:12552:13337							
ANR	5004951	FunctionDef	"gx_psconcretize_CIEA (const gs_client_color * pc , const gs_color_space * pcs , frac * pconc , float * cie_xyz , const gs_gstate * pgs)"		5004950	0					
ANR	5004952	CompoundStatement		343:0:12709:13337	5004950	0					
ANR	5004953	IdentifierDeclStatement	const gs_cie_a * pcie = pcs -> params . a ;	344:4:12715:12751	5004950	0	True				
ANR	5004954	IdentifierDecl	* pcie = pcs -> params . a		5004950	0					
ANR	5004955	IdentifierDeclType	const gs_cie_a *		5004950	0					
ANR	5004956	Identifier	pcie		5004950	1					
ANR	5004957	AssignmentExpression	* pcie = pcs -> params . a		5004950	2		=			
ANR	5004958	Identifier	pcie		5004950	0					
ANR	5004959	MemberAccess	pcs -> params . a		5004950	1					
ANR	5004960	PtrMemberAccess	pcs -> params		5004950	0					
ANR	5004961	Identifier	pcs		5004950	0					
ANR	5004962	Identifier	params		5004950	1					
ANR	5004963	Identifier	a		5004950	1					
ANR	5004964	IdentifierDeclStatement	cie_cached_value a = float2cie_cached ( pc -> paint . values [ 0 ] ) ;	345:4:12757:12815	5004950	1	True				
ANR	5004965	IdentifierDecl	a = float2cie_cached ( pc -> paint . values [ 0 ] )		5004950	0					
ANR	5004966	IdentifierDeclType	cie_cached_value		5004950	0					
ANR	5004967	Identifier	a		5004950	1					
ANR	5004968	AssignmentExpression	a = float2cie_cached ( pc -> paint . values [ 0 ] )		5004950	2		=			
ANR	5004969	Identifier	a		5004950	0					
ANR	5004970	CallExpression	float2cie_cached ( pc -> paint . values [ 0 ] )		5004950	1					
ANR	5004971	Callee	float2cie_cached		5004950	0					
ANR	5004972	Identifier	float2cie_cached		5004950	0					
ANR	5004973	ArgumentList	pc -> paint . values [ 0 ]		5004950	1					
ANR	5004974	Argument	pc -> paint . values [ 0 ]		5004950	0					
ANR	5004975	ArrayIndexing	pc -> paint . values [ 0 ]		5004950	0					
ANR	5004976	MemberAccess	pc -> paint . values		5004950	0					
ANR	5004977	PtrMemberAccess	pc -> paint		5004950	0					
ANR	5004978	Identifier	pc		5004950	0					
ANR	5004979	Identifier	paint		5004950	1					
ANR	5004980	Identifier	values		5004950	1					
ANR	5004981	PrimaryExpression	0		5004950	1					
ANR	5004982	IdentifierDeclStatement	cie_cached_vector3 vlmn ;	346:4:12821:12844	5004950	2	True				
ANR	5004983	IdentifierDecl	vlmn		5004950	0					
ANR	5004984	IdentifierDeclType	cie_cached_vector3		5004950	0					
ANR	5004985	Identifier	vlmn		5004950	1					
ANR	5004986	IdentifierDeclStatement	int code ;	347:4:12850:12858	5004950	3	True				
ANR	5004987	IdentifierDecl	code		5004950	0					
ANR	5004988	IdentifierDeclType	int		5004950	0					
ANR	5004989	Identifier	code		5004950	1					
ANR	5004990	ExpressionStatement	"if_debug1m ( 'c' , pgs -> memory , ""[c]concretize CIEA %g\\n"" , pc -> paint . values [ 0 ] )"	349:4:12865:12941	5004950	4	True				
ANR	5004991	CallExpression	"if_debug1m ( 'c' , pgs -> memory , ""[c]concretize CIEA %g\\n"" , pc -> paint . values [ 0 ] )"		5004950	0					
ANR	5004992	Callee	if_debug1m		5004950	0					
ANR	5004993	Identifier	if_debug1m		5004950	0					
ANR	5004994	ArgumentList	'c'		5004950	1					
ANR	5004995	Argument	'c'		5004950	0					
ANR	5004996	PrimaryExpression	'c'		5004950	0					
ANR	5004997	Argument	pgs -> memory		5004950	1					
ANR	5004998	PtrMemberAccess	pgs -> memory		5004950	0					
ANR	5004999	Identifier	pgs		5004950	0					
ANR	5005000	Identifier	memory		5004950	1					
ANR	5005001	Argument	"""[c]concretize CIEA %g\\n"""		5004950	2					
ANR	5005002	PrimaryExpression	"""[c]concretize CIEA %g\\n"""		5004950	0					
ANR	5005003	Argument	pc -> paint . values [ 0 ]		5004950	3					
ANR	5005004	ArrayIndexing	pc -> paint . values [ 0 ]		5004950	0					
ANR	5005005	MemberAccess	pc -> paint . values		5004950	0					
ANR	5005006	PtrMemberAccess	pc -> paint		5004950	0					
ANR	5005007	Identifier	pc		5004950	0					
ANR	5005008	Identifier	paint		5004950	1					
ANR	5005009	Identifier	values		5004950	1					
ANR	5005010	PrimaryExpression	0		5004950	1					
ANR	5005011	ExpressionStatement	"code = gx_cie_check_rendering_inline ( pcs , pconc , pgs )"	350:4:12947:13000	5004950	5	True				
ANR	5005012	AssignmentExpression	"code = gx_cie_check_rendering_inline ( pcs , pconc , pgs )"		5004950	0		=			
ANR	5005013	Identifier	code		5004950	0					
ANR	5005014	CallExpression	"gx_cie_check_rendering_inline ( pcs , pconc , pgs )"		5004950	1					
ANR	5005015	Callee	gx_cie_check_rendering_inline		5004950	0					
ANR	5005016	Identifier	gx_cie_check_rendering_inline		5004950	0					
ANR	5005017	ArgumentList	pcs		5004950	1					
ANR	5005018	Argument	pcs		5004950	0					
ANR	5005019	Identifier	pcs		5004950	0					
ANR	5005020	Argument	pconc		5004950	1					
ANR	5005021	Identifier	pconc		5004950	0					
ANR	5005022	Argument	pgs		5004950	2					
ANR	5005023	Identifier	pgs		5004950	0					
ANR	5005024	IfStatement	if ( code < 0 )		5004950	6					
ANR	5005025	Condition	code < 0	351:8:13010:13017	5004950	0	True				
ANR	5005026	RelationalExpression	code < 0		5004950	0		<			
ANR	5005027	Identifier	code		5004950	0					
ANR	5005028	PrimaryExpression	0		5004950	1					
ANR	5005029	ReturnStatement	return code ;	352:8:13028:13039	5004950	1	True				
ANR	5005030	Identifier	code		5004950	0					
ANR	5005031	IfStatement	if ( code == 1 )		5004950	7					
ANR	5005032	Condition	code == 1	353:8:13049:13057	5004950	0	True				
ANR	5005033	EqualityExpression	code == 1		5004950	0		==			
ANR	5005034	Identifier	code		5004950	0					
ANR	5005035	PrimaryExpression	1		5004950	1					
ANR	5005036	ReturnStatement	return 0 ;	354:8:13068:13076	5004950	1	True				
ANR	5005037	PrimaryExpression	0		5004950	0					
ANR	5005038	IfStatement	if ( ! pgs -> cie_joint_caches -> skipDecodeABC )		5004950	8					
ANR	5005039	Condition	! pgs -> cie_joint_caches -> skipDecodeABC	357:8:13124:13160	5004950	0	True				
ANR	5005040	UnaryOperationExpression	! pgs -> cie_joint_caches -> skipDecodeABC		5004950	0					
ANR	5005041	UnaryOperator	!		5004950	0					
ANR	5005042	PtrMemberAccess	pgs -> cie_joint_caches -> skipDecodeABC		5004950	1					
ANR	5005043	PtrMemberAccess	pgs -> cie_joint_caches		5004950	0					
ANR	5005044	Identifier	pgs		5004950	0					
ANR	5005045	Identifier	cie_joint_caches		5004950	1					
ANR	5005046	Identifier	skipDecodeABC		5004950	1					
ANR	5005047	ExpressionStatement	"vlmn = * LOOKUP_ENTRY ( a , & pcie -> caches . DecodeA )"	358:8:13171:13217	5004950	1	True				
ANR	5005048	AssignmentExpression	"vlmn = * LOOKUP_ENTRY ( a , & pcie -> caches . DecodeA )"		5004950	0		=			
ANR	5005049	Identifier	vlmn		5004950	0					
ANR	5005050	UnaryOperationExpression	"* LOOKUP_ENTRY ( a , & pcie -> caches . DecodeA )"		5004950	1					
ANR	5005051	UnaryOperator	*		5004950	0					
ANR	5005052	CallExpression	"LOOKUP_ENTRY ( a , & pcie -> caches . DecodeA )"		5004950	1					
ANR	5005053	Callee	LOOKUP_ENTRY		5004950	0					
ANR	5005054	Identifier	LOOKUP_ENTRY		5004950	0					
ANR	5005055	ArgumentList	a		5004950	1					
ANR	5005056	Argument	a		5004950	0					
ANR	5005057	Identifier	a		5004950	0					
ANR	5005058	Argument	& pcie -> caches . DecodeA		5004950	1					
ANR	5005059	UnaryOperationExpression	& pcie -> caches . DecodeA		5004950	0					
ANR	5005060	UnaryOperator	&		5004950	0					
ANR	5005061	MemberAccess	pcie -> caches . DecodeA		5004950	1					
ANR	5005062	PtrMemberAccess	pcie -> caches		5004950	0					
ANR	5005063	Identifier	pcie		5004950	0					
ANR	5005064	Identifier	caches		5004950	1					
ANR	5005065	Identifier	DecodeA		5004950	1					
ANR	5005066	ElseStatement	else		5004950	0					
ANR	5005067	ExpressionStatement	vlmn . u = vlmn . v = vlmn . w = a	360:8:13236:13264	5004950	0	True				
ANR	5005068	AssignmentExpression	vlmn . u = vlmn . v = vlmn . w = a		5004950	0		=			
ANR	5005069	MemberAccess	vlmn . u		5004950	0					
ANR	5005070	Identifier	vlmn		5004950	0					
ANR	5005071	Identifier	u		5004950	1					
ANR	5005072	AssignmentExpression	vlmn . v = vlmn . w = a		5004950	1		=			
ANR	5005073	MemberAccess	vlmn . v		5004950	0					
ANR	5005074	Identifier	vlmn		5004950	0					
ANR	5005075	Identifier	v		5004950	1					
ANR	5005076	AssignmentExpression	vlmn . w = a		5004950	1		=			
ANR	5005077	MemberAccess	vlmn . w		5004950	0					
ANR	5005078	Identifier	vlmn		5004950	0					
ANR	5005079	Identifier	w		5004950	1					
ANR	5005080	Identifier	a		5004950	1					
ANR	5005081	ExpressionStatement	"GX_CIE_REMAP_FINISH ( vlmn , pconc , cie_xyz , pgs , pcs )"	361:4:13270:13321	5004950	9	True				
ANR	5005082	CallExpression	"GX_CIE_REMAP_FINISH ( vlmn , pconc , cie_xyz , pgs , pcs )"		5004950	0					
ANR	5005083	Callee	GX_CIE_REMAP_FINISH		5004950	0					
ANR	5005084	Identifier	GX_CIE_REMAP_FINISH		5004950	0					
ANR	5005085	ArgumentList	vlmn		5004950	1					
ANR	5005086	Argument	vlmn		5004950	0					
ANR	5005087	Identifier	vlmn		5004950	0					
ANR	5005088	Argument	pconc		5004950	1					
ANR	5005089	Identifier	pconc		5004950	0					
ANR	5005090	Argument	cie_xyz		5004950	2					
ANR	5005091	Identifier	cie_xyz		5004950	0					
ANR	5005092	Argument	pgs		5004950	3					
ANR	5005093	Identifier	pgs		5004950	0					
ANR	5005094	Argument	pcs		5004950	4					
ANR	5005095	Identifier	pcs		5004950	0					
ANR	5005096	ReturnStatement	return 0 ;	362:4:13327:13335	5004950	10	True				
ANR	5005097	PrimaryExpression	0		5004950	0					
ANR	5005098	ReturnType	int		5004950	1					
ANR	5005099	Identifier	gx_psconcretize_CIEA		5004950	2					
ANR	5005100	ParameterList	"const gs_client_color * pc , const gs_color_space * pcs , frac * pconc , float * cie_xyz , const gs_gstate * pgs"		5004950	3					
ANR	5005101	Parameter	const gs_client_color * pc	341:21:12577:12602	5004950	0	True				
ANR	5005102	ParameterType	const gs_client_color *		5004950	0					
ANR	5005103	Identifier	pc		5004950	1					
ANR	5005104	Parameter	const gs_color_space * pcs	341:49:12605:12630	5004950	1	True				
ANR	5005105	ParameterType	const gs_color_space *		5004950	0					
ANR	5005106	Identifier	pcs		5004950	1					
ANR	5005107	Parameter	frac * pconc	342:22:12655:12666	5004950	2	True				
ANR	5005108	ParameterType	frac *		5004950	0					
ANR	5005109	Identifier	pconc		5004950	1					
ANR	5005110	Parameter	float * cie_xyz	342:36:12669:12683	5004950	3	True				
ANR	5005111	ParameterType	float *		5004950	0					
ANR	5005112	Identifier	cie_xyz		5004950	1					
ANR	5005113	Parameter	const gs_gstate * pgs	342:53:12686:12706	5004950	4	True				
ANR	5005114	ParameterType	const gs_gstate *		5004950	0					
ANR	5005115	Identifier	pgs		5004950	1					
ANR	5005116	CFGEntryNode	ENTRY		5004950		True				
ANR	5005117	CFGExitNode	EXIT		5004950		True				
ANR	5005118	Symbol	code		5004950						
ANR	5005119	Symbol	* pc -> paint		5004950						
ANR	5005120	Symbol	* pgs		5004950						
ANR	5005121	Symbol	LOOKUP_ENTRY		5004950						
ANR	5005122	Symbol	pconc		5004950						
ANR	5005123	Symbol	* pcs		5004950						
ANR	5005124	Symbol	gx_cie_check_rendering_inline		5004950						
ANR	5005125	Symbol	* LOOKUP_ENTRY		5004950						
ANR	5005126	Symbol	* pc -> paint . values		5004950						
ANR	5005127	Symbol	"* LOOKUP_ENTRY ( a , & pcie -> caches . DecodeA )"		5004950						
ANR	5005128	Symbol	* pgs -> cie_joint_caches		5004950						
ANR	5005129	Symbol	pgs -> cie_joint_caches -> skipDecodeABC		5004950						
ANR	5005130	Symbol	pgs		5004950						
ANR	5005131	Symbol	* * pc		5004950						
ANR	5005132	Symbol	pgs -> memory		5004950						
ANR	5005133	Symbol	vlmn		5004950						
ANR	5005134	Symbol	pcs		5004950						
ANR	5005135	Symbol	a		5004950						
ANR	5005136	Symbol	float2cie_cached		5004950						
ANR	5005137	Symbol	pcs -> params		5004950						
ANR	5005138	Symbol	* pcie		5004950						
ANR	5005139	Symbol	pcie -> caches		5004950						
ANR	5005140	Symbol	pc -> paint . values		5004950						
ANR	5005141	Symbol	cie_xyz		5004950						
ANR	5005142	Symbol	* * pgs		5004950						
ANR	5005143	Symbol	pc -> paint		5004950						
ANR	5005144	Symbol	vlmn . v		5004950						
ANR	5005145	Symbol	pc		5004950						
ANR	5005146	Symbol	& pcie -> caches		5004950						
ANR	5005147	Symbol	vlmn . u		5004950						
ANR	5005148	Symbol	& pcie -> caches . DecodeA		5004950						
ANR	5005149	Symbol	vlmn . w		5004950						
ANR	5005150	Symbol	pgs -> cie_joint_caches		5004950						
ANR	5005151	Symbol	pcs -> params . a		5004950						
ANR	5005152	Symbol	* pc		5004950						
ANR	5005153	Symbol	pcie		5004950						
ANR	5005154	Function	gx_psconcretize_CIEABC	366:0:13403:14346							
ANR	5005155	FunctionDef	"gx_psconcretize_CIEABC (const gs_client_color * pc , const gs_color_space * pcs , frac * pconc , float * cie_xyz , const gs_gstate * pgs)"		5005154	0					
ANR	5005156	CompoundStatement		369:0:13562:14346	5005154	0					
ANR	5005157	IdentifierDeclStatement	const gs_cie_abc * pcie = pcs -> params . abc ;	370:4:13568:13608	5005154	0	True				
ANR	5005158	IdentifierDecl	* pcie = pcs -> params . abc		5005154	0					
ANR	5005159	IdentifierDeclType	const gs_cie_abc *		5005154	0					
ANR	5005160	Identifier	pcie		5005154	1					
ANR	5005161	AssignmentExpression	* pcie = pcs -> params . abc		5005154	2		=			
ANR	5005162	Identifier	pcie		5005154	0					
ANR	5005163	MemberAccess	pcs -> params . abc		5005154	1					
ANR	5005164	PtrMemberAccess	pcs -> params		5005154	0					
ANR	5005165	Identifier	pcs		5005154	0					
ANR	5005166	Identifier	params		5005154	1					
ANR	5005167	Identifier	abc		5005154	1					
ANR	5005168	IdentifierDeclStatement	cie_cached_vector3 vec3 ;	371:4:13614:13637	5005154	1	True				
ANR	5005169	IdentifierDecl	vec3		5005154	0					
ANR	5005170	IdentifierDeclType	cie_cached_vector3		5005154	0					
ANR	5005171	Identifier	vec3		5005154	1					
ANR	5005172	IdentifierDeclStatement	int code ;	372:4:13643:13651	5005154	2	True				
ANR	5005173	IdentifierDecl	code		5005154	0					
ANR	5005174	IdentifierDeclType	int		5005154	0					
ANR	5005175	Identifier	code		5005154	1					
ANR	5005176	ExpressionStatement	"if_debug3m ( 'c' , pgs -> memory , ""[c]concretize CIEABC [%g %g %g]\\n"" , pc -> paint . values [ 0 ] , pc -> paint . values [ 1 ] , pc -> paint . values [ 2 ] )"	374:4:13658:13816	5005154	3	True				
ANR	5005177	CallExpression	"if_debug3m ( 'c' , pgs -> memory , ""[c]concretize CIEABC [%g %g %g]\\n"" , pc -> paint . values [ 0 ] , pc -> paint . values [ 1 ] , pc -> paint . values [ 2 ] )"		5005154	0					
ANR	5005178	Callee	if_debug3m		5005154	0					
ANR	5005179	Identifier	if_debug3m		5005154	0					
ANR	5005180	ArgumentList	'c'		5005154	1					
ANR	5005181	Argument	'c'		5005154	0					
ANR	5005182	PrimaryExpression	'c'		5005154	0					
ANR	5005183	Argument	pgs -> memory		5005154	1					
ANR	5005184	PtrMemberAccess	pgs -> memory		5005154	0					
ANR	5005185	Identifier	pgs		5005154	0					
ANR	5005186	Identifier	memory		5005154	1					
ANR	5005187	Argument	"""[c]concretize CIEABC [%g %g %g]\\n"""		5005154	2					
ANR	5005188	PrimaryExpression	"""[c]concretize CIEABC [%g %g %g]\\n"""		5005154	0					
ANR	5005189	Argument	pc -> paint . values [ 0 ]		5005154	3					
ANR	5005190	ArrayIndexing	pc -> paint . values [ 0 ]		5005154	0					
ANR	5005191	MemberAccess	pc -> paint . values		5005154	0					
ANR	5005192	PtrMemberAccess	pc -> paint		5005154	0					
ANR	5005193	Identifier	pc		5005154	0					
ANR	5005194	Identifier	paint		5005154	1					
ANR	5005195	Identifier	values		5005154	1					
ANR	5005196	PrimaryExpression	0		5005154	1					
ANR	5005197	Argument	pc -> paint . values [ 1 ]		5005154	4					
ANR	5005198	ArrayIndexing	pc -> paint . values [ 1 ]		5005154	0					
ANR	5005199	MemberAccess	pc -> paint . values		5005154	0					
ANR	5005200	PtrMemberAccess	pc -> paint		5005154	0					
ANR	5005201	Identifier	pc		5005154	0					
ANR	5005202	Identifier	paint		5005154	1					
ANR	5005203	Identifier	values		5005154	1					
ANR	5005204	PrimaryExpression	1		5005154	1					
ANR	5005205	Argument	pc -> paint . values [ 2 ]		5005154	5					
ANR	5005206	ArrayIndexing	pc -> paint . values [ 2 ]		5005154	0					
ANR	5005207	MemberAccess	pc -> paint . values		5005154	0					
ANR	5005208	PtrMemberAccess	pc -> paint		5005154	0					
ANR	5005209	Identifier	pc		5005154	0					
ANR	5005210	Identifier	paint		5005154	1					
ANR	5005211	Identifier	values		5005154	1					
ANR	5005212	PrimaryExpression	2		5005154	1					
ANR	5005213	ExpressionStatement	"code = gx_cie_check_rendering_inline ( pcs , pconc , pgs )"	377:4:13822:13875	5005154	4	True				
ANR	5005214	AssignmentExpression	"code = gx_cie_check_rendering_inline ( pcs , pconc , pgs )"		5005154	0		=			
ANR	5005215	Identifier	code		5005154	0					
ANR	5005216	CallExpression	"gx_cie_check_rendering_inline ( pcs , pconc , pgs )"		5005154	1					
ANR	5005217	Callee	gx_cie_check_rendering_inline		5005154	0					
ANR	5005218	Identifier	gx_cie_check_rendering_inline		5005154	0					
ANR	5005219	ArgumentList	pcs		5005154	1					
ANR	5005220	Argument	pcs		5005154	0					
ANR	5005221	Identifier	pcs		5005154	0					
ANR	5005222	Argument	pconc		5005154	1					
ANR	5005223	Identifier	pconc		5005154	0					
ANR	5005224	Argument	pgs		5005154	2					
ANR	5005225	Identifier	pgs		5005154	0					
ANR	5005226	IfStatement	if ( code < 0 )		5005154	5					
ANR	5005227	Condition	code < 0	378:8:13885:13892	5005154	0	True				
ANR	5005228	RelationalExpression	code < 0		5005154	0		<			
ANR	5005229	Identifier	code		5005154	0					
ANR	5005230	PrimaryExpression	0		5005154	1					
ANR	5005231	ReturnStatement	return code ;	379:8:13903:13914	5005154	1	True				
ANR	5005232	Identifier	code		5005154	0					
ANR	5005233	IfStatement	if ( code == 1 )		5005154	6					
ANR	5005234	Condition	code == 1	380:8:13924:13932	5005154	0	True				
ANR	5005235	EqualityExpression	code == 1		5005154	0		==			
ANR	5005236	Identifier	code		5005154	0					
ANR	5005237	PrimaryExpression	1		5005154	1					
ANR	5005238	ReturnStatement	return 0 ;	381:8:13943:13951	5005154	1	True				
ANR	5005239	PrimaryExpression	0		5005154	0					
ANR	5005240	ExpressionStatement	vec3 . u = float2cie_cached ( pc -> paint . values [ 0 ] )	383:4:13958:14004	5005154	7	True				
ANR	5005241	AssignmentExpression	vec3 . u = float2cie_cached ( pc -> paint . values [ 0 ] )		5005154	0		=			
ANR	5005242	MemberAccess	vec3 . u		5005154	0					
ANR	5005243	Identifier	vec3		5005154	0					
ANR	5005244	Identifier	u		5005154	1					
ANR	5005245	CallExpression	float2cie_cached ( pc -> paint . values [ 0 ] )		5005154	1					
ANR	5005246	Callee	float2cie_cached		5005154	0					
ANR	5005247	Identifier	float2cie_cached		5005154	0					
ANR	5005248	ArgumentList	pc -> paint . values [ 0 ]		5005154	1					
ANR	5005249	Argument	pc -> paint . values [ 0 ]		5005154	0					
ANR	5005250	ArrayIndexing	pc -> paint . values [ 0 ]		5005154	0					
ANR	5005251	MemberAccess	pc -> paint . values		5005154	0					
ANR	5005252	PtrMemberAccess	pc -> paint		5005154	0					
ANR	5005253	Identifier	pc		5005154	0					
ANR	5005254	Identifier	paint		5005154	1					
ANR	5005255	Identifier	values		5005154	1					
ANR	5005256	PrimaryExpression	0		5005154	1					
ANR	5005257	ExpressionStatement	vec3 . v = float2cie_cached ( pc -> paint . values [ 1 ] )	384:4:14010:14056	5005154	8	True				
ANR	5005258	AssignmentExpression	vec3 . v = float2cie_cached ( pc -> paint . values [ 1 ] )		5005154	0		=			
ANR	5005259	MemberAccess	vec3 . v		5005154	0					
ANR	5005260	Identifier	vec3		5005154	0					
ANR	5005261	Identifier	v		5005154	1					
ANR	5005262	CallExpression	float2cie_cached ( pc -> paint . values [ 1 ] )		5005154	1					
ANR	5005263	Callee	float2cie_cached		5005154	0					
ANR	5005264	Identifier	float2cie_cached		5005154	0					
ANR	5005265	ArgumentList	pc -> paint . values [ 1 ]		5005154	1					
ANR	5005266	Argument	pc -> paint . values [ 1 ]		5005154	0					
ANR	5005267	ArrayIndexing	pc -> paint . values [ 1 ]		5005154	0					
ANR	5005268	MemberAccess	pc -> paint . values		5005154	0					
ANR	5005269	PtrMemberAccess	pc -> paint		5005154	0					
ANR	5005270	Identifier	pc		5005154	0					
ANR	5005271	Identifier	paint		5005154	1					
ANR	5005272	Identifier	values		5005154	1					
ANR	5005273	PrimaryExpression	1		5005154	1					
ANR	5005274	ExpressionStatement	vec3 . w = float2cie_cached ( pc -> paint . values [ 2 ] )	385:4:14062:14108	5005154	9	True				
ANR	5005275	AssignmentExpression	vec3 . w = float2cie_cached ( pc -> paint . values [ 2 ] )		5005154	0		=			
ANR	5005276	MemberAccess	vec3 . w		5005154	0					
ANR	5005277	Identifier	vec3		5005154	0					
ANR	5005278	Identifier	w		5005154	1					
ANR	5005279	CallExpression	float2cie_cached ( pc -> paint . values [ 2 ] )		5005154	1					
ANR	5005280	Callee	float2cie_cached		5005154	0					
ANR	5005281	Identifier	float2cie_cached		5005154	0					
ANR	5005282	ArgumentList	pc -> paint . values [ 2 ]		5005154	1					
ANR	5005283	Argument	pc -> paint . values [ 2 ]		5005154	0					
ANR	5005284	ArrayIndexing	pc -> paint . values [ 2 ]		5005154	0					
ANR	5005285	MemberAccess	pc -> paint . values		5005154	0					
ANR	5005286	PtrMemberAccess	pc -> paint		5005154	0					
ANR	5005287	Identifier	pc		5005154	0					
ANR	5005288	Identifier	paint		5005154	1					
ANR	5005289	Identifier	values		5005154	1					
ANR	5005290	PrimaryExpression	2		5005154	1					
ANR	5005291	IfStatement	if ( ! pgs -> cie_joint_caches -> skipDecodeABC )		5005154	10					
ANR	5005292	Condition	! pgs -> cie_joint_caches -> skipDecodeABC	386:8:14118:14154	5005154	0	True				
ANR	5005293	UnaryOperationExpression	! pgs -> cie_joint_caches -> skipDecodeABC		5005154	0					
ANR	5005294	UnaryOperator	!		5005154	0					
ANR	5005295	PtrMemberAccess	pgs -> cie_joint_caches -> skipDecodeABC		5005154	1					
ANR	5005296	PtrMemberAccess	pgs -> cie_joint_caches		5005154	0					
ANR	5005297	Identifier	pgs		5005154	0					
ANR	5005298	Identifier	cie_joint_caches		5005154	1					
ANR	5005299	Identifier	skipDecodeABC		5005154	1					
ANR	5005300	ExpressionStatement	"cie_lookup_map3 ( & vec3 , & pcie -> caches . DecodeABC , ""Decode/MatrixABC"" )"	387:8:14165:14273	5005154	1	True				
ANR	5005301	CallExpression	"cie_lookup_map3 ( & vec3 , & pcie -> caches . DecodeABC , ""Decode/MatrixABC"" )"		5005154	0					
ANR	5005302	Callee	cie_lookup_map3		5005154	0					
ANR	5005303	Identifier	cie_lookup_map3		5005154	0					
ANR	5005304	ArgumentList	& vec3		5005154	1					
ANR	5005305	Argument	& vec3		5005154	0					
ANR	5005306	UnaryOperationExpression	& vec3		5005154	0					
ANR	5005307	UnaryOperator	&		5005154	0					
ANR	5005308	Identifier	vec3		5005154	1					
ANR	5005309	Argument	& pcie -> caches . DecodeABC		5005154	1					
ANR	5005310	UnaryOperationExpression	& pcie -> caches . DecodeABC		5005154	0					
ANR	5005311	UnaryOperator	&		5005154	0					
ANR	5005312	MemberAccess	pcie -> caches . DecodeABC		5005154	1					
ANR	5005313	PtrMemberAccess	pcie -> caches		5005154	0					
ANR	5005314	Identifier	pcie		5005154	0					
ANR	5005315	Identifier	caches		5005154	1					
ANR	5005316	Identifier	DecodeABC		5005154	1					
ANR	5005317	Argument	"""Decode/MatrixABC"""		5005154	2					
ANR	5005318	PrimaryExpression	"""Decode/MatrixABC"""		5005154	0					
ANR	5005319	ExpressionStatement	"GX_CIE_REMAP_FINISH ( vec3 , pconc , cie_xyz , pgs , pcs )"	389:4:14279:14330	5005154	11	True				
ANR	5005320	CallExpression	"GX_CIE_REMAP_FINISH ( vec3 , pconc , cie_xyz , pgs , pcs )"		5005154	0					
ANR	5005321	Callee	GX_CIE_REMAP_FINISH		5005154	0					
ANR	5005322	Identifier	GX_CIE_REMAP_FINISH		5005154	0					
ANR	5005323	ArgumentList	vec3		5005154	1					
ANR	5005324	Argument	vec3		5005154	0					
ANR	5005325	Identifier	vec3		5005154	0					
ANR	5005326	Argument	pconc		5005154	1					
ANR	5005327	Identifier	pconc		5005154	0					
ANR	5005328	Argument	cie_xyz		5005154	2					
ANR	5005329	Identifier	cie_xyz		5005154	0					
ANR	5005330	Argument	pgs		5005154	3					
ANR	5005331	Identifier	pgs		5005154	0					
ANR	5005332	Argument	pcs		5005154	4					
ANR	5005333	Identifier	pcs		5005154	0					
ANR	5005334	ReturnStatement	return 0 ;	390:4:14336:14344	5005154	12	True				
ANR	5005335	PrimaryExpression	0		5005154	0					
ANR	5005336	ReturnType	int		5005154	1					
ANR	5005337	Identifier	gx_psconcretize_CIEABC		5005154	2					
ANR	5005338	ParameterList	"const gs_client_color * pc , const gs_color_space * pcs , frac * pconc , float * cie_xyz , const gs_gstate * pgs"		5005154	3					
ANR	5005339	Parameter	const gs_client_color * pc	367:23:13430:13455	5005154	0	True				
ANR	5005340	ParameterType	const gs_client_color *		5005154	0					
ANR	5005341	Identifier	pc		5005154	1					
ANR	5005342	Parameter	const gs_color_space * pcs	367:51:13458:13483	5005154	1	True				
ANR	5005343	ParameterType	const gs_color_space *		5005154	0					
ANR	5005344	Identifier	pcs		5005154	1					
ANR	5005345	Parameter	frac * pconc	368:22:13508:13519	5005154	2	True				
ANR	5005346	ParameterType	frac *		5005154	0					
ANR	5005347	Identifier	pconc		5005154	1					
ANR	5005348	Parameter	float * cie_xyz	368:36:13522:13536	5005154	3	True				
ANR	5005349	ParameterType	float *		5005154	0					
ANR	5005350	Identifier	cie_xyz		5005154	1					
ANR	5005351	Parameter	const gs_gstate * pgs	368:53:13539:13559	5005154	4	True				
ANR	5005352	ParameterType	const gs_gstate *		5005154	0					
ANR	5005353	Identifier	pgs		5005154	1					
ANR	5005354	CFGEntryNode	ENTRY		5005154		True				
ANR	5005355	CFGExitNode	EXIT		5005154		True				
ANR	5005356	Symbol	& pcie -> caches . DecodeABC		5005154						
ANR	5005357	Symbol	code		5005154						
ANR	5005358	Symbol	* pgs		5005154						
ANR	5005359	Symbol	* pc -> paint		5005154						
ANR	5005360	Symbol	pconc		5005154						
ANR	5005361	Symbol	* pcs		5005154						
ANR	5005362	Symbol	& vec3		5005154						
ANR	5005363	Symbol	gx_cie_check_rendering_inline		5005154						
ANR	5005364	Symbol	pcs -> params . abc		5005154						
ANR	5005365	Symbol	* pc -> paint . values		5005154						
ANR	5005366	Symbol	* pgs -> cie_joint_caches		5005154						
ANR	5005367	Symbol	pgs -> cie_joint_caches -> skipDecodeABC		5005154						
ANR	5005368	Symbol	pgs		5005154						
ANR	5005369	Symbol	* * pc		5005154						
ANR	5005370	Symbol	pgs -> memory		5005154						
ANR	5005371	Symbol	pcs		5005154						
ANR	5005372	Symbol	float2cie_cached		5005154						
ANR	5005373	Symbol	pcs -> params		5005154						
ANR	5005374	Symbol	* pcie		5005154						
ANR	5005375	Symbol	vec3		5005154						
ANR	5005376	Symbol	vec3 . w		5005154						
ANR	5005377	Symbol	pcie -> caches		5005154						
ANR	5005378	Symbol	pc -> paint . values		5005154						
ANR	5005379	Symbol	cie_xyz		5005154						
ANR	5005380	Symbol	vec3 . v		5005154						
ANR	5005381	Symbol	vec3 . u		5005154						
ANR	5005382	Symbol	* * pgs		5005154						
ANR	5005383	Symbol	pc -> paint		5005154						
ANR	5005384	Symbol	pc		5005154						
ANR	5005385	Symbol	& pcie -> caches		5005154						
ANR	5005386	Symbol	pgs -> cie_joint_caches		5005154						
ANR	5005387	Symbol	* pc		5005154						
ANR	5005388	Symbol	pcie		5005154						
ANR	5005389	Function	gx_psconcretize_CIEDEFG	394:0:14412:16721							
ANR	5005390	FunctionDef	"gx_psconcretize_CIEDEFG (const gs_client_color * pc , const gs_color_space * pcs , frac * pconc , float * cie_xyz , const gs_gstate * pgs)"		5005389	0					
ANR	5005391	CompoundStatement		397:0:14572:16721	5005389	0					
ANR	5005392	IdentifierDeclStatement	const gs_cie_defg * pcie = pcs -> params . defg ;	398:4:14578:14620	5005389	0	True				
ANR	5005393	IdentifierDecl	* pcie = pcs -> params . defg		5005389	0					
ANR	5005394	IdentifierDeclType	const gs_cie_defg *		5005389	0					
ANR	5005395	Identifier	pcie		5005389	1					
ANR	5005396	AssignmentExpression	* pcie = pcs -> params . defg		5005389	2		=			
ANR	5005397	Identifier	pcie		5005389	0					
ANR	5005398	MemberAccess	pcs -> params . defg		5005389	1					
ANR	5005399	PtrMemberAccess	pcs -> params		5005389	0					
ANR	5005400	Identifier	pcs		5005389	0					
ANR	5005401	Identifier	params		5005389	1					
ANR	5005402	Identifier	defg		5005389	1					
ANR	5005403	IdentifierDeclStatement	int i ;	399:4:14626:14631	5005389	1	True				
ANR	5005404	IdentifierDecl	i		5005389	0					
ANR	5005405	IdentifierDeclType	int		5005389	0					
ANR	5005406	Identifier	i		5005389	1					
ANR	5005407	IdentifierDeclStatement	fixed hijk [ 4 ] ;	400:4:14637:14650	5005389	2	True				
ANR	5005408	IdentifierDecl	hijk [ 4 ]		5005389	0					
ANR	5005409	IdentifierDeclType	fixed [ 4 ]		5005389	0					
ANR	5005410	Identifier	hijk		5005389	1					
ANR	5005411	PrimaryExpression	4		5005389	2					
ANR	5005412	IdentifierDeclStatement	frac abc [ 3 ] ;	401:4:14656:14667	5005389	3	True				
ANR	5005413	IdentifierDecl	abc [ 3 ]		5005389	0					
ANR	5005414	IdentifierDeclType	frac [ 3 ]		5005389	0					
ANR	5005415	Identifier	abc		5005389	1					
ANR	5005416	PrimaryExpression	3		5005389	2					
ANR	5005417	IdentifierDeclStatement	cie_cached_vector3 vec3 ;	402:4:14673:14696	5005389	4	True				
ANR	5005418	IdentifierDecl	vec3		5005389	0					
ANR	5005419	IdentifierDeclType	cie_cached_vector3		5005389	0					
ANR	5005420	Identifier	vec3		5005389	1					
ANR	5005421	IdentifierDeclStatement	int code ;	403:4:14702:14710	5005389	5	True				
ANR	5005422	IdentifierDecl	code		5005389	0					
ANR	5005423	IdentifierDeclType	int		5005389	0					
ANR	5005424	Identifier	code		5005389	1					
ANR	5005425	ExpressionStatement	"if_debug4m ( 'c' , pgs -> memory , ""[c]concretize DEFG [%g %g %g %g]\\n"" , pc -> paint . values [ 0 ] , pc -> paint . values [ 1 ] , pc -> paint . values [ 2 ] , pc -> paint . values [ 3 ] )"	405:4:14717:14897	5005389	6	True				
ANR	5005426	CallExpression	"if_debug4m ( 'c' , pgs -> memory , ""[c]concretize DEFG [%g %g %g %g]\\n"" , pc -> paint . values [ 0 ] , pc -> paint . values [ 1 ] , pc -> paint . values [ 2 ] , pc -> paint . values [ 3 ] )"		5005389	0					
ANR	5005427	Callee	if_debug4m		5005389	0					
ANR	5005428	Identifier	if_debug4m		5005389	0					
ANR	5005429	ArgumentList	'c'		5005389	1					
ANR	5005430	Argument	'c'		5005389	0					
ANR	5005431	PrimaryExpression	'c'		5005389	0					
ANR	5005432	Argument	pgs -> memory		5005389	1					
ANR	5005433	PtrMemberAccess	pgs -> memory		5005389	0					
ANR	5005434	Identifier	pgs		5005389	0					
ANR	5005435	Identifier	memory		5005389	1					
ANR	5005436	Argument	"""[c]concretize DEFG [%g %g %g %g]\\n"""		5005389	2					
ANR	5005437	PrimaryExpression	"""[c]concretize DEFG [%g %g %g %g]\\n"""		5005389	0					
ANR	5005438	Argument	pc -> paint . values [ 0 ]		5005389	3					
ANR	5005439	ArrayIndexing	pc -> paint . values [ 0 ]		5005389	0					
ANR	5005440	MemberAccess	pc -> paint . values		5005389	0					
ANR	5005441	PtrMemberAccess	pc -> paint		5005389	0					
ANR	5005442	Identifier	pc		5005389	0					
ANR	5005443	Identifier	paint		5005389	1					
ANR	5005444	Identifier	values		5005389	1					
ANR	5005445	PrimaryExpression	0		5005389	1					
ANR	5005446	Argument	pc -> paint . values [ 1 ]		5005389	4					
ANR	5005447	ArrayIndexing	pc -> paint . values [ 1 ]		5005389	0					
ANR	5005448	MemberAccess	pc -> paint . values		5005389	0					
ANR	5005449	PtrMemberAccess	pc -> paint		5005389	0					
ANR	5005450	Identifier	pc		5005389	0					
ANR	5005451	Identifier	paint		5005389	1					
ANR	5005452	Identifier	values		5005389	1					
ANR	5005453	PrimaryExpression	1		5005389	1					
ANR	5005454	Argument	pc -> paint . values [ 2 ]		5005389	5					
ANR	5005455	ArrayIndexing	pc -> paint . values [ 2 ]		5005389	0					
ANR	5005456	MemberAccess	pc -> paint . values		5005389	0					
ANR	5005457	PtrMemberAccess	pc -> paint		5005389	0					
ANR	5005458	Identifier	pc		5005389	0					
ANR	5005459	Identifier	paint		5005389	1					
ANR	5005460	Identifier	values		5005389	1					
ANR	5005461	PrimaryExpression	2		5005389	1					
ANR	5005462	Argument	pc -> paint . values [ 3 ]		5005389	6					
ANR	5005463	ArrayIndexing	pc -> paint . values [ 3 ]		5005389	0					
ANR	5005464	MemberAccess	pc -> paint . values		5005389	0					
ANR	5005465	PtrMemberAccess	pc -> paint		5005389	0					
ANR	5005466	Identifier	pc		5005389	0					
ANR	5005467	Identifier	paint		5005389	1					
ANR	5005468	Identifier	values		5005389	1					
ANR	5005469	PrimaryExpression	3		5005389	1					
ANR	5005470	ExpressionStatement	"code = gx_cie_check_rendering_inline ( pcs , pconc , pgs )"	408:4:14903:14956	5005389	7	True				
ANR	5005471	AssignmentExpression	"code = gx_cie_check_rendering_inline ( pcs , pconc , pgs )"		5005389	0		=			
ANR	5005472	Identifier	code		5005389	0					
ANR	5005473	CallExpression	"gx_cie_check_rendering_inline ( pcs , pconc , pgs )"		5005389	1					
ANR	5005474	Callee	gx_cie_check_rendering_inline		5005389	0					
ANR	5005475	Identifier	gx_cie_check_rendering_inline		5005389	0					
ANR	5005476	ArgumentList	pcs		5005389	1					
ANR	5005477	Argument	pcs		5005389	0					
ANR	5005478	Identifier	pcs		5005389	0					
ANR	5005479	Argument	pconc		5005389	1					
ANR	5005480	Identifier	pconc		5005389	0					
ANR	5005481	Argument	pgs		5005389	2					
ANR	5005482	Identifier	pgs		5005389	0					
ANR	5005483	IfStatement	if ( code < 0 )		5005389	8					
ANR	5005484	Condition	code < 0	409:8:14966:14973	5005389	0	True				
ANR	5005485	RelationalExpression	code < 0		5005389	0		<			
ANR	5005486	Identifier	code		5005389	0					
ANR	5005487	PrimaryExpression	0		5005389	1					
ANR	5005488	ReturnStatement	return code ;	410:8:14984:14995	5005389	1	True				
ANR	5005489	Identifier	code		5005389	0					
ANR	5005490	IfStatement	if ( code == 1 )		5005389	9					
ANR	5005491	Condition	code == 1	411:8:15005:15013	5005389	0	True				
ANR	5005492	EqualityExpression	code == 1		5005389	0		==			
ANR	5005493	Identifier	code		5005389	0					
ANR	5005494	PrimaryExpression	1		5005389	1					
ANR	5005495	ReturnStatement	return 0 ;	412:8:15024:15032	5005389	1	True				
ANR	5005496	PrimaryExpression	0		5005389	0					
ANR	5005497	ForStatement	for ( i = 0 ; i < 4 ; ++ i )		5005389	10					
ANR	5005498	ForInit	i = 0 ;	417:9:15162:15167	5005389	0	True				
ANR	5005499	AssignmentExpression	i = 0		5005389	0		=			
ANR	5005500	Identifier	i		5005389	0					
ANR	5005501	PrimaryExpression	0		5005389	1					
ANR	5005502	Condition	i < 4	417:16:15169:15173	5005389	1	True				
ANR	5005503	RelationalExpression	i < 4		5005389	0		<			
ANR	5005504	Identifier	i		5005389	0					
ANR	5005505	PrimaryExpression	4		5005389	1					
ANR	5005506	UnaryExpression	++ i	417:23:15176:15178	5005389	2	True				
ANR	5005507	IncDec	++		5005389	0					
ANR	5005508	Identifier	i		5005389	1					
ANR	5005509	CompoundStatement		32:8:1096:1156	5005389	3					
ANR	5005510	IdentifierDeclStatement	int tdim = pcie -> Table . dims [ i ] - 1 ;	418:8:15191:15225	5005389	0	True				
ANR	5005511	IdentifierDecl	tdim = pcie -> Table . dims [ i ] - 1		5005389	0					
ANR	5005512	IdentifierDeclType	int		5005389	0					
ANR	5005513	Identifier	tdim		5005389	1					
ANR	5005514	AssignmentExpression	tdim = pcie -> Table . dims [ i ] - 1		5005389	2		=			
ANR	5005515	Identifier	tdim		5005389	0					
ANR	5005516	AdditiveExpression	pcie -> Table . dims [ i ] - 1		5005389	1		-			
ANR	5005517	ArrayIndexing	pcie -> Table . dims [ i ]		5005389	0					
ANR	5005518	MemberAccess	pcie -> Table . dims		5005389	0					
ANR	5005519	PtrMemberAccess	pcie -> Table		5005389	0					
ANR	5005520	Identifier	pcie		5005389	0					
ANR	5005521	Identifier	Table		5005389	1					
ANR	5005522	Identifier	dims		5005389	1					
ANR	5005523	Identifier	i		5005389	1					
ANR	5005524	PrimaryExpression	1		5005389	1					
ANR	5005525	IdentifierDeclStatement	double factor = pcie -> caches_defg . DecodeDEFG [ i ] . floats . params . factor ;	419:8:15235:15303	5005389	1	True				
ANR	5005526	IdentifierDecl	factor = pcie -> caches_defg . DecodeDEFG [ i ] . floats . params . factor		5005389	0					
ANR	5005527	IdentifierDeclType	double		5005389	0					
ANR	5005528	Identifier	factor		5005389	1					
ANR	5005529	AssignmentExpression	factor = pcie -> caches_defg . DecodeDEFG [ i ] . floats . params . factor		5005389	2		=			
ANR	5005530	Identifier	factor		5005389	0					
ANR	5005531	MemberAccess	pcie -> caches_defg . DecodeDEFG [ i ] . floats . params . factor		5005389	1					
ANR	5005532	MemberAccess	pcie -> caches_defg . DecodeDEFG [ i ] . floats . params		5005389	0					
ANR	5005533	MemberAccess	pcie -> caches_defg . DecodeDEFG [ i ] . floats		5005389	0					
ANR	5005534	ArrayIndexing	pcie -> caches_defg . DecodeDEFG [ i ]		5005389	0					
ANR	5005535	MemberAccess	pcie -> caches_defg . DecodeDEFG		5005389	0					
ANR	5005536	PtrMemberAccess	pcie -> caches_defg		5005389	0					
ANR	5005537	Identifier	pcie		5005389	0					
ANR	5005538	Identifier	caches_defg		5005389	1					
ANR	5005539	Identifier	DecodeDEFG		5005389	1					
ANR	5005540	Identifier	i		5005389	1					
ANR	5005541	Identifier	floats		5005389	1					
ANR	5005542	Identifier	params		5005389	1					
ANR	5005543	Identifier	factor		5005389	1					
ANR	5005544	IdentifierDeclStatement	double v0 = pc -> paint . values [ i ] ;	420:8:15313:15344	5005389	2	True				
ANR	5005545	IdentifierDecl	v0 = pc -> paint . values [ i ]		5005389	0					
ANR	5005546	IdentifierDeclType	double		5005389	0					
ANR	5005547	Identifier	v0		5005389	1					
ANR	5005548	AssignmentExpression	v0 = pc -> paint . values [ i ]		5005389	2		=			
ANR	5005549	Identifier	v0		5005389	0					
ANR	5005550	ArrayIndexing	pc -> paint . values [ i ]		5005389	1					
ANR	5005551	MemberAccess	pc -> paint . values		5005389	0					
ANR	5005552	PtrMemberAccess	pc -> paint		5005389	0					
ANR	5005553	Identifier	pc		5005389	0					
ANR	5005554	Identifier	paint		5005389	1					
ANR	5005555	Identifier	values		5005389	1					
ANR	5005556	Identifier	i		5005389	1					
ANR	5005557	Statement	const	421:8:15354:15358	5005389	3	True				
ANR	5005558	Statement	gs_range	421:14:15360:15367	5005389	4	True				
ANR	5005559	Statement	*	421:23:15369:15369	5005389	5	True				
ANR	5005560	Statement	const	421:24:15370:15374	5005389	6	True				
ANR	5005561	ExpressionStatement	rangeDEFG = & pcie -> RangeDEFG . ranges [ i ]	421:30:15376:15414	5005389	7	True				
ANR	5005562	AssignmentExpression	rangeDEFG = & pcie -> RangeDEFG . ranges [ i ]		5005389	0		=			
ANR	5005563	Identifier	rangeDEFG		5005389	0					
ANR	5005564	UnaryOperationExpression	& pcie -> RangeDEFG . ranges [ i ]		5005389	1					
ANR	5005565	UnaryOperator	&		5005389	0					
ANR	5005566	ArrayIndexing	pcie -> RangeDEFG . ranges [ i ]		5005389	1					
ANR	5005567	MemberAccess	pcie -> RangeDEFG . ranges		5005389	0					
ANR	5005568	PtrMemberAccess	pcie -> RangeDEFG		5005389	0					
ANR	5005569	Identifier	pcie		5005389	0					
ANR	5005570	Identifier	RangeDEFG		5005389	1					
ANR	5005571	Identifier	ranges		5005389	1					
ANR	5005572	Identifier	i		5005389	1					
ANR	5005573	IdentifierDeclStatement	double value = ( v0 < rangeDEFG -> rmin ? 0.0 : factor * ( v0 > rangeDEFG -> rmax ? rangeDEFG -> rmax - rangeDEFG -> rmin : v0 - rangeDEFG -> rmin ) ) ;	422:8:15424:15598	5005389	8	True				
ANR	5005574	IdentifierDecl	value = ( v0 < rangeDEFG -> rmin ? 0.0 : factor * ( v0 > rangeDEFG -> rmax ? rangeDEFG -> rmax - rangeDEFG -> rmin : v0 - rangeDEFG -> rmin ) )		5005389	0					
ANR	5005575	IdentifierDeclType	double		5005389	0					
ANR	5005576	Identifier	value		5005389	1					
ANR	5005577	AssignmentExpression	value = ( v0 < rangeDEFG -> rmin ? 0.0 : factor * ( v0 > rangeDEFG -> rmax ? rangeDEFG -> rmax - rangeDEFG -> rmin : v0 - rangeDEFG -> rmin ) )		5005389	2		=			
ANR	5005578	Identifier	value		5005389	0					
ANR	5005579	ConditionalExpression	v0 < rangeDEFG -> rmin ? 0.0 : factor * ( v0 > rangeDEFG -> rmax ? rangeDEFG -> rmax - rangeDEFG -> rmin : v0 - rangeDEFG -> rmin )		5005389	1					
ANR	5005580	Condition	v0 < rangeDEFG -> rmin		5005389	0					
ANR	5005581	RelationalExpression	v0 < rangeDEFG -> rmin		5005389	0		<			
ANR	5005582	Identifier	v0		5005389	0					
ANR	5005583	PtrMemberAccess	rangeDEFG -> rmin		5005389	1					
ANR	5005584	Identifier	rangeDEFG		5005389	0					
ANR	5005585	Identifier	rmin		5005389	1					
ANR	5005586	PrimaryExpression	0.0		5005389	1					
ANR	5005587	MultiplicativeExpression	factor * ( v0 > rangeDEFG -> rmax ? rangeDEFG -> rmax - rangeDEFG -> rmin : v0 - rangeDEFG -> rmin )		5005389	2		*			
ANR	5005588	Identifier	factor		5005389	0					
ANR	5005589	ConditionalExpression	v0 > rangeDEFG -> rmax ? rangeDEFG -> rmax - rangeDEFG -> rmin : v0 - rangeDEFG -> rmin		5005389	1					
ANR	5005590	Condition	v0 > rangeDEFG -> rmax		5005389	0					
ANR	5005591	RelationalExpression	v0 > rangeDEFG -> rmax		5005389	0		>			
ANR	5005592	Identifier	v0		5005389	0					
ANR	5005593	PtrMemberAccess	rangeDEFG -> rmax		5005389	1					
ANR	5005594	Identifier	rangeDEFG		5005389	0					
ANR	5005595	Identifier	rmax		5005389	1					
ANR	5005596	AdditiveExpression	rangeDEFG -> rmax - rangeDEFG -> rmin		5005389	1		-			
ANR	5005597	PtrMemberAccess	rangeDEFG -> rmax		5005389	0					
ANR	5005598	Identifier	rangeDEFG		5005389	0					
ANR	5005599	Identifier	rmax		5005389	1					
ANR	5005600	PtrMemberAccess	rangeDEFG -> rmin		5005389	1					
ANR	5005601	Identifier	rangeDEFG		5005389	0					
ANR	5005602	Identifier	rmin		5005389	1					
ANR	5005603	AdditiveExpression	v0 - rangeDEFG -> rmin		5005389	2		-			
ANR	5005604	Identifier	v0		5005389	0					
ANR	5005605	PtrMemberAccess	rangeDEFG -> rmin		5005389	1					
ANR	5005606	Identifier	rangeDEFG		5005389	0					
ANR	5005607	Identifier	rmin		5005389	1					
ANR	5005608	IdentifierDeclStatement	int vi = ( int ) value ;	426:8:15608:15627	5005389	9	True				
ANR	5005609	IdentifierDecl	vi = ( int ) value		5005389	0					
ANR	5005610	IdentifierDeclType	int		5005389	0					
ANR	5005611	Identifier	vi		5005389	1					
ANR	5005612	AssignmentExpression	vi = ( int ) value		5005389	2		=			
ANR	5005613	Identifier	vi		5005389	0					
ANR	5005614	CastExpression	( int ) value		5005389	1					
ANR	5005615	CastTarget	int		5005389	0					
ANR	5005616	Identifier	value		5005389	1					
ANR	5005617	IdentifierDeclStatement	double vf = value - vi ;	427:8:15637:15659	5005389	10	True				
ANR	5005618	IdentifierDecl	vf = value - vi		5005389	0					
ANR	5005619	IdentifierDeclType	double		5005389	0					
ANR	5005620	Identifier	vf		5005389	1					
ANR	5005621	AssignmentExpression	vf = value - vi		5005389	2		=			
ANR	5005622	Identifier	vf		5005389	0					
ANR	5005623	AdditiveExpression	value - vi		5005389	1		-			
ANR	5005624	Identifier	value		5005389	0					
ANR	5005625	Identifier	vi		5005389	1					
ANR	5005626	IdentifierDeclStatement	double v = pcie -> caches_defg . DecodeDEFG [ i ] . floats . values [ vi ] ;	428:8:15669:15729	5005389	11	True				
ANR	5005627	IdentifierDecl	v = pcie -> caches_defg . DecodeDEFG [ i ] . floats . values [ vi ]		5005389	0					
ANR	5005628	IdentifierDeclType	double		5005389	0					
ANR	5005629	Identifier	v		5005389	1					
ANR	5005630	AssignmentExpression	v = pcie -> caches_defg . DecodeDEFG [ i ] . floats . values [ vi ]		5005389	2		=			
ANR	5005631	Identifier	v		5005389	0					
ANR	5005632	ArrayIndexing	pcie -> caches_defg . DecodeDEFG [ i ] . floats . values [ vi ]		5005389	1					
ANR	5005633	MemberAccess	pcie -> caches_defg . DecodeDEFG [ i ] . floats . values		5005389	0					
ANR	5005634	MemberAccess	pcie -> caches_defg . DecodeDEFG [ i ] . floats		5005389	0					
ANR	5005635	ArrayIndexing	pcie -> caches_defg . DecodeDEFG [ i ]		5005389	0					
ANR	5005636	MemberAccess	pcie -> caches_defg . DecodeDEFG		5005389	0					
ANR	5005637	PtrMemberAccess	pcie -> caches_defg		5005389	0					
ANR	5005638	Identifier	pcie		5005389	0					
ANR	5005639	Identifier	caches_defg		5005389	1					
ANR	5005640	Identifier	DecodeDEFG		5005389	1					
ANR	5005641	Identifier	i		5005389	1					
ANR	5005642	Identifier	floats		5005389	1					
ANR	5005643	Identifier	values		5005389	1					
ANR	5005644	Identifier	vi		5005389	1					
ANR	5005645	IfStatement	if ( vf != 0 && vi < factor )		5005389	12					
ANR	5005646	Condition	vf != 0 && vi < factor	430:12:15744:15765	5005389	0	True				
ANR	5005647	AndExpression	vf != 0 && vi < factor		5005389	0		&&			
ANR	5005648	EqualityExpression	vf != 0		5005389	0		!=			
ANR	5005649	Identifier	vf		5005389	0					
ANR	5005650	PrimaryExpression	0		5005389	1					
ANR	5005651	RelationalExpression	vi < factor		5005389	1		<			
ANR	5005652	Identifier	vi		5005389	0					
ANR	5005653	Identifier	factor		5005389	1					
ANR	5005654	ExpressionStatement	v += vf * ( pcie -> caches_defg . DecodeDEFG [ i ] . floats . values [ vi + 1 ] - v )	431:12:15780:15865	5005389	1	True				
ANR	5005655	AssignmentExpression	v += vf * ( pcie -> caches_defg . DecodeDEFG [ i ] . floats . values [ vi + 1 ] - v )		5005389	0		+=			
ANR	5005656	Identifier	v		5005389	0					
ANR	5005657	MultiplicativeExpression	vf * ( pcie -> caches_defg . DecodeDEFG [ i ] . floats . values [ vi + 1 ] - v )		5005389	1		*			
ANR	5005658	Identifier	vf		5005389	0					
ANR	5005659	AdditiveExpression	pcie -> caches_defg . DecodeDEFG [ i ] . floats . values [ vi + 1 ] - v		5005389	1		-			
ANR	5005660	ArrayIndexing	pcie -> caches_defg . DecodeDEFG [ i ] . floats . values [ vi + 1 ]		5005389	0					
ANR	5005661	MemberAccess	pcie -> caches_defg . DecodeDEFG [ i ] . floats . values		5005389	0					
ANR	5005662	MemberAccess	pcie -> caches_defg . DecodeDEFG [ i ] . floats		5005389	0					
ANR	5005663	ArrayIndexing	pcie -> caches_defg . DecodeDEFG [ i ]		5005389	0					
ANR	5005664	MemberAccess	pcie -> caches_defg . DecodeDEFG		5005389	0					
ANR	5005665	PtrMemberAccess	pcie -> caches_defg		5005389	0					
ANR	5005666	Identifier	pcie		5005389	0					
ANR	5005667	Identifier	caches_defg		5005389	1					
ANR	5005668	Identifier	DecodeDEFG		5005389	1					
ANR	5005669	Identifier	i		5005389	1					
ANR	5005670	Identifier	floats		5005389	1					
ANR	5005671	Identifier	values		5005389	1					
ANR	5005672	AdditiveExpression	vi + 1		5005389	1		+			
ANR	5005673	Identifier	vi		5005389	0					
ANR	5005674	PrimaryExpression	1		5005389	1					
ANR	5005675	Identifier	v		5005389	1					
ANR	5005676	ExpressionStatement	v = ( v < 0 ? 0 : v > tdim ? tdim : v )	433:8:15875:15912	5005389	13	True				
ANR	5005677	AssignmentExpression	v = ( v < 0 ? 0 : v > tdim ? tdim : v )		5005389	0		=			
ANR	5005678	Identifier	v		5005389	0					
ANR	5005679	ConditionalExpression	v < 0 ? 0 : v > tdim ? tdim : v		5005389	1					
ANR	5005680	Condition	v < 0		5005389	0					
ANR	5005681	RelationalExpression	v < 0		5005389	0		<			
ANR	5005682	Identifier	v		5005389	0					
ANR	5005683	PrimaryExpression	0		5005389	1					
ANR	5005684	PrimaryExpression	0		5005389	1					
ANR	5005685	ConditionalExpression	v > tdim ? tdim : v		5005389	2					
ANR	5005686	Condition	v > tdim		5005389	0					
ANR	5005687	RelationalExpression	v > tdim		5005389	0		>			
ANR	5005688	Identifier	v		5005389	0					
ANR	5005689	Identifier	tdim		5005389	1					
ANR	5005690	Identifier	tdim		5005389	1					
ANR	5005691	Identifier	v		5005389	2					
ANR	5005692	ExpressionStatement	hijk [ i ] = float2fixed ( v )	434:8:15922:15946	5005389	14	True				
ANR	5005693	AssignmentExpression	hijk [ i ] = float2fixed ( v )		5005389	0		=			
ANR	5005694	ArrayIndexing	hijk [ i ]		5005389	0					
ANR	5005695	Identifier	hijk		5005389	0					
ANR	5005696	Identifier	i		5005389	1					
ANR	5005697	CallExpression	float2fixed ( v )		5005389	1					
ANR	5005698	Callee	float2fixed		5005389	0					
ANR	5005699	Identifier	float2fixed		5005389	0					
ANR	5005700	ArgumentList	v		5005389	1					
ANR	5005701	Argument	v		5005389	0					
ANR	5005702	Identifier	v		5005389	0					
ANR	5005703	ExpressionStatement	"gx_color_interpolate_linear ( hijk , & pcie -> Table , abc )"	437:4:15981:16033	5005389	11	True				
ANR	5005704	CallExpression	"gx_color_interpolate_linear ( hijk , & pcie -> Table , abc )"		5005389	0					
ANR	5005705	Callee	gx_color_interpolate_linear		5005389	0					
ANR	5005706	Identifier	gx_color_interpolate_linear		5005389	0					
ANR	5005707	ArgumentList	hijk		5005389	1					
ANR	5005708	Argument	hijk		5005389	0					
ANR	5005709	Identifier	hijk		5005389	0					
ANR	5005710	Argument	& pcie -> Table		5005389	1					
ANR	5005711	UnaryOperationExpression	& pcie -> Table		5005389	0					
ANR	5005712	UnaryOperator	&		5005389	0					
ANR	5005713	PtrMemberAccess	pcie -> Table		5005389	1					
ANR	5005714	Identifier	pcie		5005389	0					
ANR	5005715	Identifier	Table		5005389	1					
ANR	5005716	Argument	abc		5005389	2					
ANR	5005717	Identifier	abc		5005389	0					
ANR	5005718	Statement	define	439:1:16037:16042	5005389	12	True				
ANR	5005719	Statement	SCALE_TO_RANGE	439:8:16044:16057	5005389	13	True				
ANR	5005720	Statement	(	439:22:16058:16058	5005389	14	True				
ANR	5005721	Statement	range	439:23:16059:16063	5005389	15	True				
ANR	5005722	Statement	","	439:28:16064:16064	5005389	16	True				
ANR	5005723	Statement	frac	439:30:16066:16069	5005389	17	True				
ANR	5005724	Statement	)	439:34:16070:16070	5005389	18	True				
ANR	5005725	Statement	(	439:36:16072:16072	5005389	19	True				
ANR	5005726	Statement	float2cie_cached	440:7:16083:16098	5005389	20	True				
ANR	5005727	Statement	(	440:23:16099:16099	5005389	21	True				
ANR	5005728	Statement	(	440:24:16100:16100	5005389	22	True				
ANR	5005729	Statement	(	440:25:16101:16101	5005389	23	True				
ANR	5005730	Statement	range	440:26:16102:16106	5005389	24	True				
ANR	5005731	Statement	)	440:31:16107:16107	5005389	25	True				
ANR	5005732	Statement	.	440:32:16108:16108	5005389	26	True				
ANR	5005733	Statement	rmax	440:33:16109:16112	5005389	27	True				
ANR	5005734	Statement	-	440:38:16114:16114	5005389	28	True				
ANR	5005735	Statement	(	440:40:16116:16116	5005389	29	True				
ANR	5005736	Statement	range	440:41:16117:16121	5005389	30	True				
ANR	5005737	Statement	)	440:46:16122:16122	5005389	31	True				
ANR	5005738	Statement	.	440:47:16123:16123	5005389	32	True				
ANR	5005739	Statement	rmin	440:48:16124:16127	5005389	33	True				
ANR	5005740	Statement	)	440:52:16128:16128	5005389	34	True				
ANR	5005741	Statement	*	440:54:16130:16130	5005389	35	True				
ANR	5005742	Statement	frac2float	440:56:16132:16141	5005389	36	True				
ANR	5005743	Statement	(	440:66:16142:16142	5005389	37	True				
ANR	5005744	Statement	frac	440:67:16143:16146	5005389	38	True				
ANR	5005745	Statement	)	440:71:16147:16147	5005389	39	True				
ANR	5005746	Statement	+	440:73:16149:16149	5005389	40	True				
ANR	5005747	Statement	(	441:12:16165:16165	5005389	41	True				
ANR	5005748	Statement	range	441:13:16166:16170	5005389	42	True				
ANR	5005749	Statement	)	441:18:16171:16171	5005389	43	True				
ANR	5005750	Statement	.	441:19:16172:16172	5005389	44	True				
ANR	5005751	Statement	rmin	441:20:16173:16176	5005389	45	True				
ANR	5005752	Statement	)	441:24:16177:16177	5005389	46	True				
ANR	5005753	Statement	)	442:4:16185:16185	5005389	47	True				
ANR	5005754	ExpressionStatement	"vec3 . u = SCALE_TO_RANGE ( pcie -> RangeABC . ranges [ 0 ] , abc [ 0 ] )"	444:4:16259:16316	5005389	48	True				
ANR	5005755	AssignmentExpression	"vec3 . u = SCALE_TO_RANGE ( pcie -> RangeABC . ranges [ 0 ] , abc [ 0 ] )"		5005389	0		=			
ANR	5005756	MemberAccess	vec3 . u		5005389	0					
ANR	5005757	Identifier	vec3		5005389	0					
ANR	5005758	Identifier	u		5005389	1					
ANR	5005759	CallExpression	"SCALE_TO_RANGE ( pcie -> RangeABC . ranges [ 0 ] , abc [ 0 ] )"		5005389	1					
ANR	5005760	Callee	SCALE_TO_RANGE		5005389	0					
ANR	5005761	Identifier	SCALE_TO_RANGE		5005389	0					
ANR	5005762	ArgumentList	pcie -> RangeABC . ranges [ 0 ]		5005389	1					
ANR	5005763	Argument	pcie -> RangeABC . ranges [ 0 ]		5005389	0					
ANR	5005764	ArrayIndexing	pcie -> RangeABC . ranges [ 0 ]		5005389	0					
ANR	5005765	MemberAccess	pcie -> RangeABC . ranges		5005389	0					
ANR	5005766	PtrMemberAccess	pcie -> RangeABC		5005389	0					
ANR	5005767	Identifier	pcie		5005389	0					
ANR	5005768	Identifier	RangeABC		5005389	1					
ANR	5005769	Identifier	ranges		5005389	1					
ANR	5005770	PrimaryExpression	0		5005389	1					
ANR	5005771	Argument	abc [ 0 ]		5005389	1					
ANR	5005772	ArrayIndexing	abc [ 0 ]		5005389	0					
ANR	5005773	Identifier	abc		5005389	0					
ANR	5005774	PrimaryExpression	0		5005389	1					
ANR	5005775	ExpressionStatement	"vec3 . v = SCALE_TO_RANGE ( pcie -> RangeABC . ranges [ 1 ] , abc [ 1 ] )"	445:4:16322:16379	5005389	49	True				
ANR	5005776	AssignmentExpression	"vec3 . v = SCALE_TO_RANGE ( pcie -> RangeABC . ranges [ 1 ] , abc [ 1 ] )"		5005389	0		=			
ANR	5005777	MemberAccess	vec3 . v		5005389	0					
ANR	5005778	Identifier	vec3		5005389	0					
ANR	5005779	Identifier	v		5005389	1					
ANR	5005780	CallExpression	"SCALE_TO_RANGE ( pcie -> RangeABC . ranges [ 1 ] , abc [ 1 ] )"		5005389	1					
ANR	5005781	Callee	SCALE_TO_RANGE		5005389	0					
ANR	5005782	Identifier	SCALE_TO_RANGE		5005389	0					
ANR	5005783	ArgumentList	pcie -> RangeABC . ranges [ 1 ]		5005389	1					
ANR	5005784	Argument	pcie -> RangeABC . ranges [ 1 ]		5005389	0					
ANR	5005785	ArrayIndexing	pcie -> RangeABC . ranges [ 1 ]		5005389	0					
ANR	5005786	MemberAccess	pcie -> RangeABC . ranges		5005389	0					
ANR	5005787	PtrMemberAccess	pcie -> RangeABC		5005389	0					
ANR	5005788	Identifier	pcie		5005389	0					
ANR	5005789	Identifier	RangeABC		5005389	1					
ANR	5005790	Identifier	ranges		5005389	1					
ANR	5005791	PrimaryExpression	1		5005389	1					
ANR	5005792	Argument	abc [ 1 ]		5005389	1					
ANR	5005793	ArrayIndexing	abc [ 1 ]		5005389	0					
ANR	5005794	Identifier	abc		5005389	0					
ANR	5005795	PrimaryExpression	1		5005389	1					
ANR	5005796	ExpressionStatement	"vec3 . w = SCALE_TO_RANGE ( pcie -> RangeABC . ranges [ 2 ] , abc [ 2 ] )"	446:4:16385:16442	5005389	50	True				
ANR	5005797	AssignmentExpression	"vec3 . w = SCALE_TO_RANGE ( pcie -> RangeABC . ranges [ 2 ] , abc [ 2 ] )"		5005389	0		=			
ANR	5005798	MemberAccess	vec3 . w		5005389	0					
ANR	5005799	Identifier	vec3		5005389	0					
ANR	5005800	Identifier	w		5005389	1					
ANR	5005801	CallExpression	"SCALE_TO_RANGE ( pcie -> RangeABC . ranges [ 2 ] , abc [ 2 ] )"		5005389	1					
ANR	5005802	Callee	SCALE_TO_RANGE		5005389	0					
ANR	5005803	Identifier	SCALE_TO_RANGE		5005389	0					
ANR	5005804	ArgumentList	pcie -> RangeABC . ranges [ 2 ]		5005389	1					
ANR	5005805	Argument	pcie -> RangeABC . ranges [ 2 ]		5005389	0					
ANR	5005806	ArrayIndexing	pcie -> RangeABC . ranges [ 2 ]		5005389	0					
ANR	5005807	MemberAccess	pcie -> RangeABC . ranges		5005389	0					
ANR	5005808	PtrMemberAccess	pcie -> RangeABC		5005389	0					
ANR	5005809	Identifier	pcie		5005389	0					
ANR	5005810	Identifier	RangeABC		5005389	1					
ANR	5005811	Identifier	ranges		5005389	1					
ANR	5005812	PrimaryExpression	2		5005389	1					
ANR	5005813	Argument	abc [ 2 ]		5005389	1					
ANR	5005814	ArrayIndexing	abc [ 2 ]		5005389	0					
ANR	5005815	Identifier	abc		5005389	0					
ANR	5005816	PrimaryExpression	2		5005389	1					
ANR	5005817	IfStatement	if ( ! pgs -> cie_joint_caches -> skipDecodeABC )		5005389	51					
ANR	5005818	Condition	! pgs -> cie_joint_caches -> skipDecodeABC	448:8:16493:16529	5005389	0	True				
ANR	5005819	UnaryOperationExpression	! pgs -> cie_joint_caches -> skipDecodeABC		5005389	0					
ANR	5005820	UnaryOperator	!		5005389	0					
ANR	5005821	PtrMemberAccess	pgs -> cie_joint_caches -> skipDecodeABC		5005389	1					
ANR	5005822	PtrMemberAccess	pgs -> cie_joint_caches		5005389	0					
ANR	5005823	Identifier	pgs		5005389	0					
ANR	5005824	Identifier	cie_joint_caches		5005389	1					
ANR	5005825	Identifier	skipDecodeABC		5005389	1					
ANR	5005826	ExpressionStatement	"cie_lookup_map3 ( & vec3 , & pcie -> caches . DecodeABC , ""Decode/MatrixABC"" )"	449:8:16540:16648	5005389	1	True				
ANR	5005827	CallExpression	"cie_lookup_map3 ( & vec3 , & pcie -> caches . DecodeABC , ""Decode/MatrixABC"" )"		5005389	0					
ANR	5005828	Callee	cie_lookup_map3		5005389	0					
ANR	5005829	Identifier	cie_lookup_map3		5005389	0					
ANR	5005830	ArgumentList	& vec3		5005389	1					
ANR	5005831	Argument	& vec3		5005389	0					
ANR	5005832	UnaryOperationExpression	& vec3		5005389	0					
ANR	5005833	UnaryOperator	&		5005389	0					
ANR	5005834	Identifier	vec3		5005389	1					
ANR	5005835	Argument	& pcie -> caches . DecodeABC		5005389	1					
ANR	5005836	UnaryOperationExpression	& pcie -> caches . DecodeABC		5005389	0					
ANR	5005837	UnaryOperator	&		5005389	0					
ANR	5005838	MemberAccess	pcie -> caches . DecodeABC		5005389	1					
ANR	5005839	PtrMemberAccess	pcie -> caches		5005389	0					
ANR	5005840	Identifier	pcie		5005389	0					
ANR	5005841	Identifier	caches		5005389	1					
ANR	5005842	Identifier	DecodeABC		5005389	1					
ANR	5005843	Argument	"""Decode/MatrixABC"""		5005389	2					
ANR	5005844	PrimaryExpression	"""Decode/MatrixABC"""		5005389	0					
ANR	5005845	ExpressionStatement	"GX_CIE_REMAP_FINISH ( vec3 , pconc , cie_xyz , pgs , pcs )"	451:4:16654:16705	5005389	52	True				
ANR	5005846	CallExpression	"GX_CIE_REMAP_FINISH ( vec3 , pconc , cie_xyz , pgs , pcs )"		5005389	0					
ANR	5005847	Callee	GX_CIE_REMAP_FINISH		5005389	0					
ANR	5005848	Identifier	GX_CIE_REMAP_FINISH		5005389	0					
ANR	5005849	ArgumentList	vec3		5005389	1					
ANR	5005850	Argument	vec3		5005389	0					
ANR	5005851	Identifier	vec3		5005389	0					
ANR	5005852	Argument	pconc		5005389	1					
ANR	5005853	Identifier	pconc		5005389	0					
ANR	5005854	Argument	cie_xyz		5005389	2					
ANR	5005855	Identifier	cie_xyz		5005389	0					
ANR	5005856	Argument	pgs		5005389	3					
ANR	5005857	Identifier	pgs		5005389	0					
ANR	5005858	Argument	pcs		5005389	4					
ANR	5005859	Identifier	pcs		5005389	0					
ANR	5005860	ReturnStatement	return 0 ;	452:4:16711:16719	5005389	53	True				
ANR	5005861	PrimaryExpression	0		5005389	0					
ANR	5005862	ReturnType	int		5005389	1					
ANR	5005863	Identifier	gx_psconcretize_CIEDEFG		5005389	2					
ANR	5005864	ParameterList	"const gs_client_color * pc , const gs_color_space * pcs , frac * pconc , float * cie_xyz , const gs_gstate * pgs"		5005389	3					
ANR	5005865	Parameter	const gs_client_color * pc	395:24:14440:14465	5005389	0	True				
ANR	5005866	ParameterType	const gs_client_color *		5005389	0					
ANR	5005867	Identifier	pc		5005389	1					
ANR	5005868	Parameter	const gs_color_space * pcs	395:52:14468:14493	5005389	1	True				
ANR	5005869	ParameterType	const gs_color_space *		5005389	0					
ANR	5005870	Identifier	pcs		5005389	1					
ANR	5005871	Parameter	frac * pconc	396:22:14518:14529	5005389	2	True				
ANR	5005872	ParameterType	frac *		5005389	0					
ANR	5005873	Identifier	pconc		5005389	1					
ANR	5005874	Parameter	float * cie_xyz	396:36:14532:14546	5005389	3	True				
ANR	5005875	ParameterType	float *		5005389	0					
ANR	5005876	Identifier	cie_xyz		5005389	1					
ANR	5005877	Parameter	const gs_gstate * pgs	396:53:14549:14569	5005389	4	True				
ANR	5005878	ParameterType	const gs_gstate *		5005389	0					
ANR	5005879	Identifier	pgs		5005389	1					
ANR	5005880	CFGEntryNode	ENTRY		5005389		True				
ANR	5005881	CFGExitNode	EXIT		5005389		True				
ANR	5005882	Symbol	& pcie -> caches . DecodeABC		5005389						
ANR	5005883	Symbol	* * pcie -> caches_defg		5005389						
ANR	5005884	Symbol	rangeDEFG -> rmax		5005389						
ANR	5005885	Symbol	* pgs		5005389						
ANR	5005886	Symbol	* * * pcie		5005389						
ANR	5005887	Symbol	* pcs		5005389						
ANR	5005888	Symbol	& vec3		5005389						
ANR	5005889	Symbol	gx_cie_check_rendering_inline		5005389						
ANR	5005890	Symbol	* pc -> paint . values		5005389						
ANR	5005891	Symbol	* pgs -> cie_joint_caches		5005389						
ANR	5005892	Symbol	rangeDEFG		5005389						
ANR	5005893	Symbol	* rangeDEFG		5005389						
ANR	5005894	Symbol	* pcie -> caches_defg . DecodeDEFG [ i ] . floats		5005389						
ANR	5005895	Symbol	pgs -> cie_joint_caches -> skipDecodeABC		5005389						
ANR	5005896	Symbol	* * pcie -> caches_defg . DecodeDEFG		5005389						
ANR	5005897	Symbol	tdim		5005389						
ANR	5005898	Symbol	* * i		5005389						
ANR	5005899	Symbol	pcie -> RangeDEFG		5005389						
ANR	5005900	Symbol	pcie -> caches_defg . DecodeDEFG [ i ] . floats . values		5005389						
ANR	5005901	Symbol	* pcie -> RangeABC . ranges		5005389						
ANR	5005902	Symbol	* pcie		5005389						
ANR	5005903	Symbol	* hijk		5005389						
ANR	5005904	Symbol	vec3		5005389						
ANR	5005905	Symbol	pcie -> caches		5005389						
ANR	5005906	Symbol	pcie -> Table		5005389						
ANR	5005907	Symbol	rangeDEFG -> rmin		5005389						
ANR	5005908	Symbol	pcie -> caches_defg . DecodeDEFG		5005389						
ANR	5005909	Symbol	* pcie -> caches_defg . DecodeDEFG		5005389						
ANR	5005910	Symbol	vf		5005389						
ANR	5005911	Symbol	* * pgs		5005389						
ANR	5005912	Symbol	hijk		5005389						
ANR	5005913	Symbol	pcie -> caches_defg . DecodeDEFG [ i ] . floats . params . factor		5005389						
ANR	5005914	Symbol	vi		5005389						
ANR	5005915	Symbol	* abc		5005389						
ANR	5005916	Symbol	pcie -> RangeDEFG . ranges		5005389						
ANR	5005917	Symbol	pcie -> RangeABC . ranges		5005389						
ANR	5005918	Symbol	* pc		5005389						
ANR	5005919	Symbol	* pcie -> Table . dims		5005389						
ANR	5005920	Symbol	code		5005389						
ANR	5005921	Symbol	pcie -> RangeABC		5005389						
ANR	5005922	Symbol	* pc -> paint		5005389						
ANR	5005923	Symbol	pcie -> caches_defg . DecodeDEFG [ i ] . floats		5005389						
ANR	5005924	Symbol	pconc		5005389						
ANR	5005925	Symbol	* pcie -> caches_defg		5005389						
ANR	5005926	Symbol	float2fixed		5005389						
ANR	5005927	Symbol	& pcie -> Table		5005389						
ANR	5005928	Symbol	* pcie -> RangeABC		5005389						
ANR	5005929	Symbol	pcs -> params . defg		5005389						
ANR	5005930	Symbol	factor		5005389						
ANR	5005931	Symbol	pgs		5005389						
ANR	5005932	Symbol	pgs -> memory		5005389						
ANR	5005933	Symbol	* * pc		5005389						
ANR	5005934	Symbol	value		5005389						
ANR	5005935	Symbol	SCALE_TO_RANGE		5005389						
ANR	5005936	Symbol	* * pcie		5005389						
ANR	5005937	Symbol	pcs		5005389						
ANR	5005938	Symbol	abc		5005389						
ANR	5005939	Symbol	pcie -> Table . dims		5005389						
ANR	5005940	Symbol	pcs -> params		5005389						
ANR	5005941	Symbol	* pcie -> Table		5005389						
ANR	5005942	Symbol	pcie -> caches_defg		5005389						
ANR	5005943	Symbol	i		5005389						
ANR	5005944	Symbol	vec3 . w		5005389						
ANR	5005945	Symbol	pc -> paint . values		5005389						
ANR	5005946	Symbol	cie_xyz		5005389						
ANR	5005947	Symbol	vec3 . v		5005389						
ANR	5005948	Symbol	vec3 . u		5005389						
ANR	5005949	Symbol	pc -> paint		5005389						
ANR	5005950	Symbol	* pcie -> caches_defg . DecodeDEFG [ i ] . floats . values		5005389						
ANR	5005951	Symbol	pc		5005389						
ANR	5005952	Symbol	* i		5005389						
ANR	5005953	Symbol	& pcie -> caches		5005389						
ANR	5005954	Symbol	v		5005389						
ANR	5005955	Symbol	pgs -> cie_joint_caches		5005389						
ANR	5005956	Symbol	v0		5005389						
ANR	5005957	Symbol	* vi		5005389						
ANR	5005958	Symbol	pcie		5005389						
ANR	5005959	Symbol	pcie -> caches_defg . DecodeDEFG [ i ] . floats . params		5005389						
ANR	5005960	Function	gx_psconcretize_CIEDEF	456:0:16758:18869							
ANR	5005961	FunctionDef	"gx_psconcretize_CIEDEF (const gs_client_color * pc , const gs_color_space * pcs , frac * pconc , float * cie_xyz , const gs_gstate * pgs)"		5005960	0					
ANR	5005962	CompoundStatement		459:0:16916:18869	5005960	0					
ANR	5005963	IdentifierDeclStatement	const gs_cie_def * pcie = pcs -> params . def ;	460:4:16922:16962	5005960	0	True				
ANR	5005964	IdentifierDecl	* pcie = pcs -> params . def		5005960	0					
ANR	5005965	IdentifierDeclType	const gs_cie_def *		5005960	0					
ANR	5005966	Identifier	pcie		5005960	1					
ANR	5005967	AssignmentExpression	* pcie = pcs -> params . def		5005960	2		=			
ANR	5005968	Identifier	pcie		5005960	0					
ANR	5005969	MemberAccess	pcs -> params . def		5005960	1					
ANR	5005970	PtrMemberAccess	pcs -> params		5005960	0					
ANR	5005971	Identifier	pcs		5005960	0					
ANR	5005972	Identifier	params		5005960	1					
ANR	5005973	Identifier	def		5005960	1					
ANR	5005974	IdentifierDeclStatement	int i ;	461:4:16968:16973	5005960	1	True				
ANR	5005975	IdentifierDecl	i		5005960	0					
ANR	5005976	IdentifierDeclType	int		5005960	0					
ANR	5005977	Identifier	i		5005960	1					
ANR	5005978	IdentifierDeclStatement	fixed hij [ 3 ] ;	462:4:16979:16991	5005960	2	True				
ANR	5005979	IdentifierDecl	hij [ 3 ]		5005960	0					
ANR	5005980	IdentifierDeclType	fixed [ 3 ]		5005960	0					
ANR	5005981	Identifier	hij		5005960	1					
ANR	5005982	PrimaryExpression	3		5005960	2					
ANR	5005983	IdentifierDeclStatement	frac abc [ 3 ] ;	463:4:16997:17008	5005960	3	True				
ANR	5005984	IdentifierDecl	abc [ 3 ]		5005960	0					
ANR	5005985	IdentifierDeclType	frac [ 3 ]		5005960	0					
ANR	5005986	Identifier	abc		5005960	1					
ANR	5005987	PrimaryExpression	3		5005960	2					
ANR	5005988	IdentifierDeclStatement	cie_cached_vector3 vec3 ;	464:4:17014:17037	5005960	4	True				
ANR	5005989	IdentifierDecl	vec3		5005960	0					
ANR	5005990	IdentifierDeclType	cie_cached_vector3		5005960	0					
ANR	5005991	Identifier	vec3		5005960	1					
ANR	5005992	IdentifierDeclStatement	int code ;	465:4:17043:17051	5005960	5	True				
ANR	5005993	IdentifierDecl	code		5005960	0					
ANR	5005994	IdentifierDeclType	int		5005960	0					
ANR	5005995	Identifier	code		5005960	1					
ANR	5005996	ExpressionStatement	"if_debug3m ( 'c' , pgs -> memory , ""[c]concretize DEF [%g %g %g]\\n"" , pc -> paint . values [ 0 ] , pc -> paint . values [ 1 ] , pc -> paint . values [ 2 ] )"	467:4:17058:17213	5005960	6	True				
ANR	5005997	CallExpression	"if_debug3m ( 'c' , pgs -> memory , ""[c]concretize DEF [%g %g %g]\\n"" , pc -> paint . values [ 0 ] , pc -> paint . values [ 1 ] , pc -> paint . values [ 2 ] )"		5005960	0					
ANR	5005998	Callee	if_debug3m		5005960	0					
ANR	5005999	Identifier	if_debug3m		5005960	0					
ANR	5006000	ArgumentList	'c'		5005960	1					
ANR	5006001	Argument	'c'		5005960	0					
ANR	5006002	PrimaryExpression	'c'		5005960	0					
ANR	5006003	Argument	pgs -> memory		5005960	1					
ANR	5006004	PtrMemberAccess	pgs -> memory		5005960	0					
ANR	5006005	Identifier	pgs		5005960	0					
ANR	5006006	Identifier	memory		5005960	1					
ANR	5006007	Argument	"""[c]concretize DEF [%g %g %g]\\n"""		5005960	2					
ANR	5006008	PrimaryExpression	"""[c]concretize DEF [%g %g %g]\\n"""		5005960	0					
ANR	5006009	Argument	pc -> paint . values [ 0 ]		5005960	3					
ANR	5006010	ArrayIndexing	pc -> paint . values [ 0 ]		5005960	0					
ANR	5006011	MemberAccess	pc -> paint . values		5005960	0					
ANR	5006012	PtrMemberAccess	pc -> paint		5005960	0					
ANR	5006013	Identifier	pc		5005960	0					
ANR	5006014	Identifier	paint		5005960	1					
ANR	5006015	Identifier	values		5005960	1					
ANR	5006016	PrimaryExpression	0		5005960	1					
ANR	5006017	Argument	pc -> paint . values [ 1 ]		5005960	4					
ANR	5006018	ArrayIndexing	pc -> paint . values [ 1 ]		5005960	0					
ANR	5006019	MemberAccess	pc -> paint . values		5005960	0					
ANR	5006020	PtrMemberAccess	pc -> paint		5005960	0					
ANR	5006021	Identifier	pc		5005960	0					
ANR	5006022	Identifier	paint		5005960	1					
ANR	5006023	Identifier	values		5005960	1					
ANR	5006024	PrimaryExpression	1		5005960	1					
ANR	5006025	Argument	pc -> paint . values [ 2 ]		5005960	5					
ANR	5006026	ArrayIndexing	pc -> paint . values [ 2 ]		5005960	0					
ANR	5006027	MemberAccess	pc -> paint . values		5005960	0					
ANR	5006028	PtrMemberAccess	pc -> paint		5005960	0					
ANR	5006029	Identifier	pc		5005960	0					
ANR	5006030	Identifier	paint		5005960	1					
ANR	5006031	Identifier	values		5005960	1					
ANR	5006032	PrimaryExpression	2		5005960	1					
ANR	5006033	ExpressionStatement	"code = gx_cie_check_rendering_inline ( pcs , pconc , pgs )"	470:4:17219:17272	5005960	7	True				
ANR	5006034	AssignmentExpression	"code = gx_cie_check_rendering_inline ( pcs , pconc , pgs )"		5005960	0		=			
ANR	5006035	Identifier	code		5005960	0					
ANR	5006036	CallExpression	"gx_cie_check_rendering_inline ( pcs , pconc , pgs )"		5005960	1					
ANR	5006037	Callee	gx_cie_check_rendering_inline		5005960	0					
ANR	5006038	Identifier	gx_cie_check_rendering_inline		5005960	0					
ANR	5006039	ArgumentList	pcs		5005960	1					
ANR	5006040	Argument	pcs		5005960	0					
ANR	5006041	Identifier	pcs		5005960	0					
ANR	5006042	Argument	pconc		5005960	1					
ANR	5006043	Identifier	pconc		5005960	0					
ANR	5006044	Argument	pgs		5005960	2					
ANR	5006045	Identifier	pgs		5005960	0					
ANR	5006046	IfStatement	if ( code < 0 )		5005960	8					
ANR	5006047	Condition	code < 0	471:8:17282:17289	5005960	0	True				
ANR	5006048	RelationalExpression	code < 0		5005960	0		<			
ANR	5006049	Identifier	code		5005960	0					
ANR	5006050	PrimaryExpression	0		5005960	1					
ANR	5006051	ReturnStatement	return code ;	472:8:17300:17311	5005960	1	True				
ANR	5006052	Identifier	code		5005960	0					
ANR	5006053	IfStatement	if ( code == 1 )		5005960	9					
ANR	5006054	Condition	code == 1	473:8:17321:17329	5005960	0	True				
ANR	5006055	EqualityExpression	code == 1		5005960	0		==			
ANR	5006056	Identifier	code		5005960	0					
ANR	5006057	PrimaryExpression	1		5005960	1					
ANR	5006058	ReturnStatement	return 0 ;	474:8:17340:17348	5005960	1	True				
ANR	5006059	PrimaryExpression	0		5005960	0					
ANR	5006060	ForStatement	for ( i = 0 ; i < 3 ; ++ i )		5005960	10					
ANR	5006061	ForInit	i = 0 ;	480:9:17477:17482	5005960	0	True				
ANR	5006062	AssignmentExpression	i = 0		5005960	0		=			
ANR	5006063	Identifier	i		5005960	0					
ANR	5006064	PrimaryExpression	0		5005960	1					
ANR	5006065	Condition	i < 3	480:16:17484:17488	5005960	1	True				
ANR	5006066	RelationalExpression	i < 3		5005960	0		<			
ANR	5006067	Identifier	i		5005960	0					
ANR	5006068	PrimaryExpression	3		5005960	1					
ANR	5006069	UnaryExpression	++ i	480:23:17491:17493	5005960	2	True				
ANR	5006070	IncDec	++		5005960	0					
ANR	5006071	Identifier	i		5005960	1					
ANR	5006072	CompoundStatement		33:8:1058:1116	5005960	3					
ANR	5006073	IdentifierDeclStatement	int tdim = pcie -> Table . dims [ i ] - 1 ;	481:8:17506:17540	5005960	0	True				
ANR	5006074	IdentifierDecl	tdim = pcie -> Table . dims [ i ] - 1		5005960	0					
ANR	5006075	IdentifierDeclType	int		5005960	0					
ANR	5006076	Identifier	tdim		5005960	1					
ANR	5006077	AssignmentExpression	tdim = pcie -> Table . dims [ i ] - 1		5005960	2		=			
ANR	5006078	Identifier	tdim		5005960	0					
ANR	5006079	AdditiveExpression	pcie -> Table . dims [ i ] - 1		5005960	1		-			
ANR	5006080	ArrayIndexing	pcie -> Table . dims [ i ]		5005960	0					
ANR	5006081	MemberAccess	pcie -> Table . dims		5005960	0					
ANR	5006082	PtrMemberAccess	pcie -> Table		5005960	0					
ANR	5006083	Identifier	pcie		5005960	0					
ANR	5006084	Identifier	Table		5005960	1					
ANR	5006085	Identifier	dims		5005960	1					
ANR	5006086	Identifier	i		5005960	1					
ANR	5006087	PrimaryExpression	1		5005960	1					
ANR	5006088	IdentifierDeclStatement	double factor = pcie -> caches_def . DecodeDEF [ i ] . floats . params . factor ;	482:8:17550:17616	5005960	1	True				
ANR	5006089	IdentifierDecl	factor = pcie -> caches_def . DecodeDEF [ i ] . floats . params . factor		5005960	0					
ANR	5006090	IdentifierDeclType	double		5005960	0					
ANR	5006091	Identifier	factor		5005960	1					
ANR	5006092	AssignmentExpression	factor = pcie -> caches_def . DecodeDEF [ i ] . floats . params . factor		5005960	2		=			
ANR	5006093	Identifier	factor		5005960	0					
ANR	5006094	MemberAccess	pcie -> caches_def . DecodeDEF [ i ] . floats . params . factor		5005960	1					
ANR	5006095	MemberAccess	pcie -> caches_def . DecodeDEF [ i ] . floats . params		5005960	0					
ANR	5006096	MemberAccess	pcie -> caches_def . DecodeDEF [ i ] . floats		5005960	0					
ANR	5006097	ArrayIndexing	pcie -> caches_def . DecodeDEF [ i ]		5005960	0					
ANR	5006098	MemberAccess	pcie -> caches_def . DecodeDEF		5005960	0					
ANR	5006099	PtrMemberAccess	pcie -> caches_def		5005960	0					
ANR	5006100	Identifier	pcie		5005960	0					
ANR	5006101	Identifier	caches_def		5005960	1					
ANR	5006102	Identifier	DecodeDEF		5005960	1					
ANR	5006103	Identifier	i		5005960	1					
ANR	5006104	Identifier	floats		5005960	1					
ANR	5006105	Identifier	params		5005960	1					
ANR	5006106	Identifier	factor		5005960	1					
ANR	5006107	IdentifierDeclStatement	double v0 = pc -> paint . values [ i ] ;	483:8:17626:17657	5005960	2	True				
ANR	5006108	IdentifierDecl	v0 = pc -> paint . values [ i ]		5005960	0					
ANR	5006109	IdentifierDeclType	double		5005960	0					
ANR	5006110	Identifier	v0		5005960	1					
ANR	5006111	AssignmentExpression	v0 = pc -> paint . values [ i ]		5005960	2		=			
ANR	5006112	Identifier	v0		5005960	0					
ANR	5006113	ArrayIndexing	pc -> paint . values [ i ]		5005960	1					
ANR	5006114	MemberAccess	pc -> paint . values		5005960	0					
ANR	5006115	PtrMemberAccess	pc -> paint		5005960	0					
ANR	5006116	Identifier	pc		5005960	0					
ANR	5006117	Identifier	paint		5005960	1					
ANR	5006118	Identifier	values		5005960	1					
ANR	5006119	Identifier	i		5005960	1					
ANR	5006120	Statement	const	484:8:17667:17671	5005960	3	True				
ANR	5006121	Statement	gs_range	484:14:17673:17680	5005960	4	True				
ANR	5006122	Statement	*	484:23:17682:17682	5005960	5	True				
ANR	5006123	Statement	const	484:24:17683:17687	5005960	6	True				
ANR	5006124	ExpressionStatement	rangeDEF = & pcie -> RangeDEF . ranges [ i ]	484:30:17689:17725	5005960	7	True				
ANR	5006125	AssignmentExpression	rangeDEF = & pcie -> RangeDEF . ranges [ i ]		5005960	0		=			
ANR	5006126	Identifier	rangeDEF		5005960	0					
ANR	5006127	UnaryOperationExpression	& pcie -> RangeDEF . ranges [ i ]		5005960	1					
ANR	5006128	UnaryOperator	&		5005960	0					
ANR	5006129	ArrayIndexing	pcie -> RangeDEF . ranges [ i ]		5005960	1					
ANR	5006130	MemberAccess	pcie -> RangeDEF . ranges		5005960	0					
ANR	5006131	PtrMemberAccess	pcie -> RangeDEF		5005960	0					
ANR	5006132	Identifier	pcie		5005960	0					
ANR	5006133	Identifier	RangeDEF		5005960	1					
ANR	5006134	Identifier	ranges		5005960	1					
ANR	5006135	Identifier	i		5005960	1					
ANR	5006136	IdentifierDeclStatement	double value = ( v0 < rangeDEF -> rmin ? 0.0 : factor * ( v0 > rangeDEF -> rmax ? rangeDEF -> rmax - rangeDEF -> rmin : v0 - rangeDEF -> rmin ) ) ;	485:8:17735:17904	5005960	8	True				
ANR	5006137	IdentifierDecl	value = ( v0 < rangeDEF -> rmin ? 0.0 : factor * ( v0 > rangeDEF -> rmax ? rangeDEF -> rmax - rangeDEF -> rmin : v0 - rangeDEF -> rmin ) )		5005960	0					
ANR	5006138	IdentifierDeclType	double		5005960	0					
ANR	5006139	Identifier	value		5005960	1					
ANR	5006140	AssignmentExpression	value = ( v0 < rangeDEF -> rmin ? 0.0 : factor * ( v0 > rangeDEF -> rmax ? rangeDEF -> rmax - rangeDEF -> rmin : v0 - rangeDEF -> rmin ) )		5005960	2		=			
ANR	5006141	Identifier	value		5005960	0					
ANR	5006142	ConditionalExpression	v0 < rangeDEF -> rmin ? 0.0 : factor * ( v0 > rangeDEF -> rmax ? rangeDEF -> rmax - rangeDEF -> rmin : v0 - rangeDEF -> rmin )		5005960	1					
ANR	5006143	Condition	v0 < rangeDEF -> rmin		5005960	0					
ANR	5006144	RelationalExpression	v0 < rangeDEF -> rmin		5005960	0		<			
ANR	5006145	Identifier	v0		5005960	0					
ANR	5006146	PtrMemberAccess	rangeDEF -> rmin		5005960	1					
ANR	5006147	Identifier	rangeDEF		5005960	0					
ANR	5006148	Identifier	rmin		5005960	1					
ANR	5006149	PrimaryExpression	0.0		5005960	1					
ANR	5006150	MultiplicativeExpression	factor * ( v0 > rangeDEF -> rmax ? rangeDEF -> rmax - rangeDEF -> rmin : v0 - rangeDEF -> rmin )		5005960	2		*			
ANR	5006151	Identifier	factor		5005960	0					
ANR	5006152	ConditionalExpression	v0 > rangeDEF -> rmax ? rangeDEF -> rmax - rangeDEF -> rmin : v0 - rangeDEF -> rmin		5005960	1					
ANR	5006153	Condition	v0 > rangeDEF -> rmax		5005960	0					
ANR	5006154	RelationalExpression	v0 > rangeDEF -> rmax		5005960	0		>			
ANR	5006155	Identifier	v0		5005960	0					
ANR	5006156	PtrMemberAccess	rangeDEF -> rmax		5005960	1					
ANR	5006157	Identifier	rangeDEF		5005960	0					
ANR	5006158	Identifier	rmax		5005960	1					
ANR	5006159	AdditiveExpression	rangeDEF -> rmax - rangeDEF -> rmin		5005960	1		-			
ANR	5006160	PtrMemberAccess	rangeDEF -> rmax		5005960	0					
ANR	5006161	Identifier	rangeDEF		5005960	0					
ANR	5006162	Identifier	rmax		5005960	1					
ANR	5006163	PtrMemberAccess	rangeDEF -> rmin		5005960	1					
ANR	5006164	Identifier	rangeDEF		5005960	0					
ANR	5006165	Identifier	rmin		5005960	1					
ANR	5006166	AdditiveExpression	v0 - rangeDEF -> rmin		5005960	2		-			
ANR	5006167	Identifier	v0		5005960	0					
ANR	5006168	PtrMemberAccess	rangeDEF -> rmin		5005960	1					
ANR	5006169	Identifier	rangeDEF		5005960	0					
ANR	5006170	Identifier	rmin		5005960	1					
ANR	5006171	IdentifierDeclStatement	int vi = ( int ) value ;	489:8:17914:17933	5005960	9	True				
ANR	5006172	IdentifierDecl	vi = ( int ) value		5005960	0					
ANR	5006173	IdentifierDeclType	int		5005960	0					
ANR	5006174	Identifier	vi		5005960	1					
ANR	5006175	AssignmentExpression	vi = ( int ) value		5005960	2		=			
ANR	5006176	Identifier	vi		5005960	0					
ANR	5006177	CastExpression	( int ) value		5005960	1					
ANR	5006178	CastTarget	int		5005960	0					
ANR	5006179	Identifier	value		5005960	1					
ANR	5006180	IdentifierDeclStatement	double vf = value - vi ;	490:8:17943:17965	5005960	10	True				
ANR	5006181	IdentifierDecl	vf = value - vi		5005960	0					
ANR	5006182	IdentifierDeclType	double		5005960	0					
ANR	5006183	Identifier	vf		5005960	1					
ANR	5006184	AssignmentExpression	vf = value - vi		5005960	2		=			
ANR	5006185	Identifier	vf		5005960	0					
ANR	5006186	AdditiveExpression	value - vi		5005960	1		-			
ANR	5006187	Identifier	value		5005960	0					
ANR	5006188	Identifier	vi		5005960	1					
ANR	5006189	IdentifierDeclStatement	double v = pcie -> caches_def . DecodeDEF [ i ] . floats . values [ vi ] ;	491:8:17975:18033	5005960	11	True				
ANR	5006190	IdentifierDecl	v = pcie -> caches_def . DecodeDEF [ i ] . floats . values [ vi ]		5005960	0					
ANR	5006191	IdentifierDeclType	double		5005960	0					
ANR	5006192	Identifier	v		5005960	1					
ANR	5006193	AssignmentExpression	v = pcie -> caches_def . DecodeDEF [ i ] . floats . values [ vi ]		5005960	2		=			
ANR	5006194	Identifier	v		5005960	0					
ANR	5006195	ArrayIndexing	pcie -> caches_def . DecodeDEF [ i ] . floats . values [ vi ]		5005960	1					
ANR	5006196	MemberAccess	pcie -> caches_def . DecodeDEF [ i ] . floats . values		5005960	0					
ANR	5006197	MemberAccess	pcie -> caches_def . DecodeDEF [ i ] . floats		5005960	0					
ANR	5006198	ArrayIndexing	pcie -> caches_def . DecodeDEF [ i ]		5005960	0					
ANR	5006199	MemberAccess	pcie -> caches_def . DecodeDEF		5005960	0					
ANR	5006200	PtrMemberAccess	pcie -> caches_def		5005960	0					
ANR	5006201	Identifier	pcie		5005960	0					
ANR	5006202	Identifier	caches_def		5005960	1					
ANR	5006203	Identifier	DecodeDEF		5005960	1					
ANR	5006204	Identifier	i		5005960	1					
ANR	5006205	Identifier	floats		5005960	1					
ANR	5006206	Identifier	values		5005960	1					
ANR	5006207	Identifier	vi		5005960	1					
ANR	5006208	IfStatement	if ( vf != 0 && vi < factor )		5005960	12					
ANR	5006209	Condition	vf != 0 && vi < factor	493:12:18048:18069	5005960	0	True				
ANR	5006210	AndExpression	vf != 0 && vi < factor		5005960	0		&&			
ANR	5006211	EqualityExpression	vf != 0		5005960	0		!=			
ANR	5006212	Identifier	vf		5005960	0					
ANR	5006213	PrimaryExpression	0		5005960	1					
ANR	5006214	RelationalExpression	vi < factor		5005960	1		<			
ANR	5006215	Identifier	vi		5005960	0					
ANR	5006216	Identifier	factor		5005960	1					
ANR	5006217	ExpressionStatement	v += vf * ( pcie -> caches_def . DecodeDEF [ i ] . floats . values [ vi + 1 ] - v )	494:12:18084:18167	5005960	1	True				
ANR	5006218	AssignmentExpression	v += vf * ( pcie -> caches_def . DecodeDEF [ i ] . floats . values [ vi + 1 ] - v )		5005960	0		+=			
ANR	5006219	Identifier	v		5005960	0					
ANR	5006220	MultiplicativeExpression	vf * ( pcie -> caches_def . DecodeDEF [ i ] . floats . values [ vi + 1 ] - v )		5005960	1		*			
ANR	5006221	Identifier	vf		5005960	0					
ANR	5006222	AdditiveExpression	pcie -> caches_def . DecodeDEF [ i ] . floats . values [ vi + 1 ] - v		5005960	1		-			
ANR	5006223	ArrayIndexing	pcie -> caches_def . DecodeDEF [ i ] . floats . values [ vi + 1 ]		5005960	0					
ANR	5006224	MemberAccess	pcie -> caches_def . DecodeDEF [ i ] . floats . values		5005960	0					
ANR	5006225	MemberAccess	pcie -> caches_def . DecodeDEF [ i ] . floats		5005960	0					
ANR	5006226	ArrayIndexing	pcie -> caches_def . DecodeDEF [ i ]		5005960	0					
ANR	5006227	MemberAccess	pcie -> caches_def . DecodeDEF		5005960	0					
ANR	5006228	PtrMemberAccess	pcie -> caches_def		5005960	0					
ANR	5006229	Identifier	pcie		5005960	0					
ANR	5006230	Identifier	caches_def		5005960	1					
ANR	5006231	Identifier	DecodeDEF		5005960	1					
ANR	5006232	Identifier	i		5005960	1					
ANR	5006233	Identifier	floats		5005960	1					
ANR	5006234	Identifier	values		5005960	1					
ANR	5006235	AdditiveExpression	vi + 1		5005960	1		+			
ANR	5006236	Identifier	vi		5005960	0					
ANR	5006237	PrimaryExpression	1		5005960	1					
ANR	5006238	Identifier	v		5005960	1					
ANR	5006239	ExpressionStatement	v = ( v < 0 ? 0 : v > tdim ? tdim : v )	496:8:18177:18214	5005960	13	True				
ANR	5006240	AssignmentExpression	v = ( v < 0 ? 0 : v > tdim ? tdim : v )		5005960	0		=			
ANR	5006241	Identifier	v		5005960	0					
ANR	5006242	ConditionalExpression	v < 0 ? 0 : v > tdim ? tdim : v		5005960	1					
ANR	5006243	Condition	v < 0		5005960	0					
ANR	5006244	RelationalExpression	v < 0		5005960	0		<			
ANR	5006245	Identifier	v		5005960	0					
ANR	5006246	PrimaryExpression	0		5005960	1					
ANR	5006247	PrimaryExpression	0		5005960	1					
ANR	5006248	ConditionalExpression	v > tdim ? tdim : v		5005960	2					
ANR	5006249	Condition	v > tdim		5005960	0					
ANR	5006250	RelationalExpression	v > tdim		5005960	0		>			
ANR	5006251	Identifier	v		5005960	0					
ANR	5006252	Identifier	tdim		5005960	1					
ANR	5006253	Identifier	tdim		5005960	1					
ANR	5006254	Identifier	v		5005960	2					
ANR	5006255	ExpressionStatement	hij [ i ] = float2fixed ( v )	497:8:18224:18247	5005960	14	True				
ANR	5006256	AssignmentExpression	hij [ i ] = float2fixed ( v )		5005960	0		=			
ANR	5006257	ArrayIndexing	hij [ i ]		5005960	0					
ANR	5006258	Identifier	hij		5005960	0					
ANR	5006259	Identifier	i		5005960	1					
ANR	5006260	CallExpression	float2fixed ( v )		5005960	1					
ANR	5006261	Callee	float2fixed		5005960	0					
ANR	5006262	Identifier	float2fixed		5005960	0					
ANR	5006263	ArgumentList	v		5005960	1					
ANR	5006264	Argument	v		5005960	0					
ANR	5006265	Identifier	v		5005960	0					
ANR	5006266	ExpressionStatement	"gx_color_interpolate_linear ( hij , & pcie -> Table , abc )"	500:4:18282:18333	5005960	11	True				
ANR	5006267	CallExpression	"gx_color_interpolate_linear ( hij , & pcie -> Table , abc )"		5005960	0					
ANR	5006268	Callee	gx_color_interpolate_linear		5005960	0					
ANR	5006269	Identifier	gx_color_interpolate_linear		5005960	0					
ANR	5006270	ArgumentList	hij		5005960	1					
ANR	5006271	Argument	hij		5005960	0					
ANR	5006272	Identifier	hij		5005960	0					
ANR	5006273	Argument	& pcie -> Table		5005960	1					
ANR	5006274	UnaryOperationExpression	& pcie -> Table		5005960	0					
ANR	5006275	UnaryOperator	&		5005960	0					
ANR	5006276	PtrMemberAccess	pcie -> Table		5005960	1					
ANR	5006277	Identifier	pcie		5005960	0					
ANR	5006278	Identifier	Table		5005960	1					
ANR	5006279	Argument	abc		5005960	2					
ANR	5006280	Identifier	abc		5005960	0					
ANR	5006281	ExpressionStatement	"vec3 . u = SCALE_TO_RANGE ( pcie -> RangeABC . ranges [ 0 ] , abc [ 0 ] )"	502:4:18407:18464	5005960	12	True				
ANR	5006282	AssignmentExpression	"vec3 . u = SCALE_TO_RANGE ( pcie -> RangeABC . ranges [ 0 ] , abc [ 0 ] )"		5005960	0		=			
ANR	5006283	MemberAccess	vec3 . u		5005960	0					
ANR	5006284	Identifier	vec3		5005960	0					
ANR	5006285	Identifier	u		5005960	1					
ANR	5006286	CallExpression	"SCALE_TO_RANGE ( pcie -> RangeABC . ranges [ 0 ] , abc [ 0 ] )"		5005960	1					
ANR	5006287	Callee	SCALE_TO_RANGE		5005960	0					
ANR	5006288	Identifier	SCALE_TO_RANGE		5005960	0					
ANR	5006289	ArgumentList	pcie -> RangeABC . ranges [ 0 ]		5005960	1					
ANR	5006290	Argument	pcie -> RangeABC . ranges [ 0 ]		5005960	0					
ANR	5006291	ArrayIndexing	pcie -> RangeABC . ranges [ 0 ]		5005960	0					
ANR	5006292	MemberAccess	pcie -> RangeABC . ranges		5005960	0					
ANR	5006293	PtrMemberAccess	pcie -> RangeABC		5005960	0					
ANR	5006294	Identifier	pcie		5005960	0					
ANR	5006295	Identifier	RangeABC		5005960	1					
ANR	5006296	Identifier	ranges		5005960	1					
ANR	5006297	PrimaryExpression	0		5005960	1					
ANR	5006298	Argument	abc [ 0 ]		5005960	1					
ANR	5006299	ArrayIndexing	abc [ 0 ]		5005960	0					
ANR	5006300	Identifier	abc		5005960	0					
ANR	5006301	PrimaryExpression	0		5005960	1					
ANR	5006302	ExpressionStatement	"vec3 . v = SCALE_TO_RANGE ( pcie -> RangeABC . ranges [ 1 ] , abc [ 1 ] )"	503:4:18470:18527	5005960	13	True				
ANR	5006303	AssignmentExpression	"vec3 . v = SCALE_TO_RANGE ( pcie -> RangeABC . ranges [ 1 ] , abc [ 1 ] )"		5005960	0		=			
ANR	5006304	MemberAccess	vec3 . v		5005960	0					
ANR	5006305	Identifier	vec3		5005960	0					
ANR	5006306	Identifier	v		5005960	1					
ANR	5006307	CallExpression	"SCALE_TO_RANGE ( pcie -> RangeABC . ranges [ 1 ] , abc [ 1 ] )"		5005960	1					
ANR	5006308	Callee	SCALE_TO_RANGE		5005960	0					
ANR	5006309	Identifier	SCALE_TO_RANGE		5005960	0					
ANR	5006310	ArgumentList	pcie -> RangeABC . ranges [ 1 ]		5005960	1					
ANR	5006311	Argument	pcie -> RangeABC . ranges [ 1 ]		5005960	0					
ANR	5006312	ArrayIndexing	pcie -> RangeABC . ranges [ 1 ]		5005960	0					
ANR	5006313	MemberAccess	pcie -> RangeABC . ranges		5005960	0					
ANR	5006314	PtrMemberAccess	pcie -> RangeABC		5005960	0					
ANR	5006315	Identifier	pcie		5005960	0					
ANR	5006316	Identifier	RangeABC		5005960	1					
ANR	5006317	Identifier	ranges		5005960	1					
ANR	5006318	PrimaryExpression	1		5005960	1					
ANR	5006319	Argument	abc [ 1 ]		5005960	1					
ANR	5006320	ArrayIndexing	abc [ 1 ]		5005960	0					
ANR	5006321	Identifier	abc		5005960	0					
ANR	5006322	PrimaryExpression	1		5005960	1					
ANR	5006323	ExpressionStatement	"vec3 . w = SCALE_TO_RANGE ( pcie -> RangeABC . ranges [ 2 ] , abc [ 2 ] )"	504:4:18533:18590	5005960	14	True				
ANR	5006324	AssignmentExpression	"vec3 . w = SCALE_TO_RANGE ( pcie -> RangeABC . ranges [ 2 ] , abc [ 2 ] )"		5005960	0		=			
ANR	5006325	MemberAccess	vec3 . w		5005960	0					
ANR	5006326	Identifier	vec3		5005960	0					
ANR	5006327	Identifier	w		5005960	1					
ANR	5006328	CallExpression	"SCALE_TO_RANGE ( pcie -> RangeABC . ranges [ 2 ] , abc [ 2 ] )"		5005960	1					
ANR	5006329	Callee	SCALE_TO_RANGE		5005960	0					
ANR	5006330	Identifier	SCALE_TO_RANGE		5005960	0					
ANR	5006331	ArgumentList	pcie -> RangeABC . ranges [ 2 ]		5005960	1					
ANR	5006332	Argument	pcie -> RangeABC . ranges [ 2 ]		5005960	0					
ANR	5006333	ArrayIndexing	pcie -> RangeABC . ranges [ 2 ]		5005960	0					
ANR	5006334	MemberAccess	pcie -> RangeABC . ranges		5005960	0					
ANR	5006335	PtrMemberAccess	pcie -> RangeABC		5005960	0					
ANR	5006336	Identifier	pcie		5005960	0					
ANR	5006337	Identifier	RangeABC		5005960	1					
ANR	5006338	Identifier	ranges		5005960	1					
ANR	5006339	PrimaryExpression	2		5005960	1					
ANR	5006340	Argument	abc [ 2 ]		5005960	1					
ANR	5006341	ArrayIndexing	abc [ 2 ]		5005960	0					
ANR	5006342	Identifier	abc		5005960	0					
ANR	5006343	PrimaryExpression	2		5005960	1					
ANR	5006344	IfStatement	if ( ! pgs -> cie_joint_caches -> skipDecodeABC )		5005960	15					
ANR	5006345	Condition	! pgs -> cie_joint_caches -> skipDecodeABC	506:8:18641:18677	5005960	0	True				
ANR	5006346	UnaryOperationExpression	! pgs -> cie_joint_caches -> skipDecodeABC		5005960	0					
ANR	5006347	UnaryOperator	!		5005960	0					
ANR	5006348	PtrMemberAccess	pgs -> cie_joint_caches -> skipDecodeABC		5005960	1					
ANR	5006349	PtrMemberAccess	pgs -> cie_joint_caches		5005960	0					
ANR	5006350	Identifier	pgs		5005960	0					
ANR	5006351	Identifier	cie_joint_caches		5005960	1					
ANR	5006352	Identifier	skipDecodeABC		5005960	1					
ANR	5006353	ExpressionStatement	"cie_lookup_map3 ( & vec3 , & pcie -> caches . DecodeABC , ""Decode/MatrixABC"" )"	507:8:18688:18796	5005960	1	True				
ANR	5006354	CallExpression	"cie_lookup_map3 ( & vec3 , & pcie -> caches . DecodeABC , ""Decode/MatrixABC"" )"		5005960	0					
ANR	5006355	Callee	cie_lookup_map3		5005960	0					
ANR	5006356	Identifier	cie_lookup_map3		5005960	0					
ANR	5006357	ArgumentList	& vec3		5005960	1					
ANR	5006358	Argument	& vec3		5005960	0					
ANR	5006359	UnaryOperationExpression	& vec3		5005960	0					
ANR	5006360	UnaryOperator	&		5005960	0					
ANR	5006361	Identifier	vec3		5005960	1					
ANR	5006362	Argument	& pcie -> caches . DecodeABC		5005960	1					
ANR	5006363	UnaryOperationExpression	& pcie -> caches . DecodeABC		5005960	0					
ANR	5006364	UnaryOperator	&		5005960	0					
ANR	5006365	MemberAccess	pcie -> caches . DecodeABC		5005960	1					
ANR	5006366	PtrMemberAccess	pcie -> caches		5005960	0					
ANR	5006367	Identifier	pcie		5005960	0					
ANR	5006368	Identifier	caches		5005960	1					
ANR	5006369	Identifier	DecodeABC		5005960	1					
ANR	5006370	Argument	"""Decode/MatrixABC"""		5005960	2					
ANR	5006371	PrimaryExpression	"""Decode/MatrixABC"""		5005960	0					
ANR	5006372	ExpressionStatement	"GX_CIE_REMAP_FINISH ( vec3 , pconc , cie_xyz , pgs , pcs )"	509:4:18802:18853	5005960	16	True				
ANR	5006373	CallExpression	"GX_CIE_REMAP_FINISH ( vec3 , pconc , cie_xyz , pgs , pcs )"		5005960	0					
ANR	5006374	Callee	GX_CIE_REMAP_FINISH		5005960	0					
ANR	5006375	Identifier	GX_CIE_REMAP_FINISH		5005960	0					
ANR	5006376	ArgumentList	vec3		5005960	1					
ANR	5006377	Argument	vec3		5005960	0					
ANR	5006378	Identifier	vec3		5005960	0					
ANR	5006379	Argument	pconc		5005960	1					
ANR	5006380	Identifier	pconc		5005960	0					
ANR	5006381	Argument	cie_xyz		5005960	2					
ANR	5006382	Identifier	cie_xyz		5005960	0					
ANR	5006383	Argument	pgs		5005960	3					
ANR	5006384	Identifier	pgs		5005960	0					
ANR	5006385	Argument	pcs		5005960	4					
ANR	5006386	Identifier	pcs		5005960	0					
ANR	5006387	ReturnStatement	return 0 ;	510:4:18859:18867	5005960	17	True				
ANR	5006388	PrimaryExpression	0		5005960	0					
ANR	5006389	ReturnType	int		5005960	1					
ANR	5006390	Identifier	gx_psconcretize_CIEDEF		5005960	2					
ANR	5006391	ParameterList	"const gs_client_color * pc , const gs_color_space * pcs , frac * pconc , float * cie_xyz , const gs_gstate * pgs"		5005960	3					
ANR	5006392	Parameter	const gs_client_color * pc	457:23:16785:16810	5005960	0	True				
ANR	5006393	ParameterType	const gs_client_color *		5005960	0					
ANR	5006394	Identifier	pc		5005960	1					
ANR	5006395	Parameter	const gs_color_space * pcs	457:51:16813:16838	5005960	1	True				
ANR	5006396	ParameterType	const gs_color_space *		5005960	0					
ANR	5006397	Identifier	pcs		5005960	1					
ANR	5006398	Parameter	frac * pconc	458:21:16862:16873	5005960	2	True				
ANR	5006399	ParameterType	frac *		5005960	0					
ANR	5006400	Identifier	pconc		5005960	1					
ANR	5006401	Parameter	float * cie_xyz	458:35:16876:16890	5005960	3	True				
ANR	5006402	ParameterType	float *		5005960	0					
ANR	5006403	Identifier	cie_xyz		5005960	1					
ANR	5006404	Parameter	const gs_gstate * pgs	458:52:16893:16913	5005960	4	True				
ANR	5006405	ParameterType	const gs_gstate *		5005960	0					
ANR	5006406	Identifier	pgs		5005960	1					
ANR	5006407	CFGEntryNode	ENTRY		5005960		True				
ANR	5006408	CFGExitNode	EXIT		5005960		True				
ANR	5006409	Symbol	* pcie -> caches_def		5005960						
ANR	5006410	Symbol	& pcie -> caches . DecodeABC		5005960						
ANR	5006411	Symbol	* pgs		5005960						
ANR	5006412	Symbol	* * * pcie		5005960						
ANR	5006413	Symbol	hij		5005960						
ANR	5006414	Symbol	* pcs		5005960						
ANR	5006415	Symbol	& vec3		5005960						
ANR	5006416	Symbol	gx_cie_check_rendering_inline		5005960						
ANR	5006417	Symbol	* pc -> paint . values		5005960						
ANR	5006418	Symbol	pcie -> RangeDEF . ranges		5005960						
ANR	5006419	Symbol	* rangeDEF		5005960						
ANR	5006420	Symbol	* pgs -> cie_joint_caches		5005960						
ANR	5006421	Symbol	rangeDEF		5005960						
ANR	5006422	Symbol	* pcie -> caches_def . DecodeDEF		5005960						
ANR	5006423	Symbol	pgs -> cie_joint_caches -> skipDecodeABC		5005960						
ANR	5006424	Symbol	* pcie -> caches_def . DecodeDEF [ i ] . floats . values		5005960						
ANR	5006425	Symbol	tdim		5005960						
ANR	5006426	Symbol	* * i		5005960						
ANR	5006427	Symbol	* pcie -> caches_def . DecodeDEF [ i ] . floats		5005960						
ANR	5006428	Symbol	* pcie -> RangeABC . ranges		5005960						
ANR	5006429	Symbol	* pcie		5005960						
ANR	5006430	Symbol	pcie -> caches_def		5005960						
ANR	5006431	Symbol	vec3		5005960						
ANR	5006432	Symbol	pcie -> caches		5005960						
ANR	5006433	Symbol	pcie -> Table		5005960						
ANR	5006434	Symbol	pcie -> caches_def . DecodeDEF [ i ] . floats . values		5005960						
ANR	5006435	Symbol	vf		5005960						
ANR	5006436	Symbol	* * pgs		5005960						
ANR	5006437	Symbol	pcie -> caches_def . DecodeDEF [ i ] . floats		5005960						
ANR	5006438	Symbol	vi		5005960						
ANR	5006439	Symbol	* abc		5005960						
ANR	5006440	Symbol	pcie -> RangeABC . ranges		5005960						
ANR	5006441	Symbol	* pc		5005960						
ANR	5006442	Symbol	* pcie -> Table . dims		5005960						
ANR	5006443	Symbol	* * pcie -> caches_def . DecodeDEF		5005960						
ANR	5006444	Symbol	rangeDEF -> rmin		5005960						
ANR	5006445	Symbol	code		5005960						
ANR	5006446	Symbol	pcie -> RangeABC		5005960						
ANR	5006447	Symbol	pcie -> caches_def . DecodeDEF [ i ] . floats . params		5005960						
ANR	5006448	Symbol	* pc -> paint		5005960						
ANR	5006449	Symbol	pconc		5005960						
ANR	5006450	Symbol	* hij		5005960						
ANR	5006451	Symbol	pcie -> caches_def . DecodeDEF		5005960						
ANR	5006452	Symbol	float2fixed		5005960						
ANR	5006453	Symbol	& pcie -> Table		5005960						
ANR	5006454	Symbol	* pcie -> RangeABC		5005960						
ANR	5006455	Symbol	* * pcie -> caches_def		5005960						
ANR	5006456	Symbol	factor		5005960						
ANR	5006457	Symbol	pgs		5005960						
ANR	5006458	Symbol	* * pc		5005960						
ANR	5006459	Symbol	pgs -> memory		5005960						
ANR	5006460	Symbol	value		5005960						
ANR	5006461	Symbol	SCALE_TO_RANGE		5005960						
ANR	5006462	Symbol	* * pcie		5005960						
ANR	5006463	Symbol	pcs		5005960						
ANR	5006464	Symbol	pcs -> params . def		5005960						
ANR	5006465	Symbol	abc		5005960						
ANR	5006466	Symbol	pcie -> Table . dims		5005960						
ANR	5006467	Symbol	pcie -> RangeDEF		5005960						
ANR	5006468	Symbol	pcs -> params		5005960						
ANR	5006469	Symbol	* pcie -> Table		5005960						
ANR	5006470	Symbol	pcie -> caches_def . DecodeDEF [ i ] . floats . params . factor		5005960						
ANR	5006471	Symbol	i		5005960						
ANR	5006472	Symbol	vec3 . w		5005960						
ANR	5006473	Symbol	pc -> paint . values		5005960						
ANR	5006474	Symbol	cie_xyz		5005960						
ANR	5006475	Symbol	vec3 . v		5005960						
ANR	5006476	Symbol	vec3 . u		5005960						
ANR	5006477	Symbol	pc -> paint		5005960						
ANR	5006478	Symbol	pc		5005960						
ANR	5006479	Symbol	* i		5005960						
ANR	5006480	Symbol	& pcie -> caches		5005960						
ANR	5006481	Symbol	v		5005960						
ANR	5006482	Symbol	pgs -> cie_joint_caches		5005960						
ANR	5006483	Symbol	v0		5005960						
ANR	5006484	Symbol	* vi		5005960						
ANR	5006485	Symbol	pcie		5005960						
ANR	5006486	Symbol	rangeDEF -> rmax		5005960						
ANR	5006487	Function	gx_ciedef_to_icc	515:0:18956:20794							
ANR	5006488	FunctionDef	"gx_ciedef_to_icc (gs_color_space * * ppcs_icc , gs_color_space * pcs , gs_memory_t * memory)"		5006487	0					
ANR	5006489	CompoundStatement		517:0:19053:20794	5006487	0					
ANR	5006490	IdentifierDeclStatement	int code ;	518:4:19059:19067	5006487	0	True				
ANR	5006491	IdentifierDecl	code		5006487	0					
ANR	5006492	IdentifierDeclType	int		5006487	0					
ANR	5006493	Identifier	code		5006487	1					
ANR	5006494	IdentifierDeclStatement	gs_color_space * palt_cs = pcs -> base_space ;	519:4:19073:19114	5006487	1	True				
ANR	5006495	IdentifierDecl	* palt_cs = pcs -> base_space		5006487	0					
ANR	5006496	IdentifierDeclType	gs_color_space *		5006487	0					
ANR	5006497	Identifier	palt_cs		5006487	1					
ANR	5006498	AssignmentExpression	* palt_cs = pcs -> base_space		5006487	2		=			
ANR	5006499	Identifier	palt_cs		5006487	0					
ANR	5006500	PtrMemberAccess	pcs -> base_space		5006487	1					
ANR	5006501	Identifier	pcs		5006487	0					
ANR	5006502	Identifier	base_space		5006487	1					
ANR	5006503	IdentifierDeclStatement	gx_cie_vector_cache * abc_caches = & ( pcs -> params . abc -> caches . DecodeABC . caches [ 0 ] ) ;	520:4:19120:19200	5006487	2	True				
ANR	5006504	IdentifierDecl	* abc_caches = & ( pcs -> params . abc -> caches . DecodeABC . caches [ 0 ] )		5006487	0					
ANR	5006505	IdentifierDeclType	gx_cie_vector_cache *		5006487	0					
ANR	5006506	Identifier	abc_caches		5006487	1					
ANR	5006507	AssignmentExpression	* abc_caches = & ( pcs -> params . abc -> caches . DecodeABC . caches [ 0 ] )		5006487	2		=			
ANR	5006508	Identifier	abc_caches		5006487	0					
ANR	5006509	UnaryOperationExpression	& ( pcs -> params . abc -> caches . DecodeABC . caches [ 0 ] )		5006487	1					
ANR	5006510	UnaryOperator	&		5006487	0					
ANR	5006511	ArrayIndexing	pcs -> params . abc -> caches . DecodeABC . caches [ 0 ]		5006487	1					
ANR	5006512	MemberAccess	pcs -> params . abc -> caches . DecodeABC . caches		5006487	0					
ANR	5006513	MemberAccess	pcs -> params . abc -> caches . DecodeABC		5006487	0					
ANR	5006514	PtrMemberAccess	pcs -> params . abc -> caches		5006487	0					
ANR	5006515	MemberAccess	pcs -> params . abc		5006487	0					
ANR	5006516	PtrMemberAccess	pcs -> params		5006487	0					
ANR	5006517	Identifier	pcs		5006487	0					
ANR	5006518	Identifier	params		5006487	1					
ANR	5006519	Identifier	abc		5006487	1					
ANR	5006520	Identifier	caches		5006487	1					
ANR	5006521	Identifier	DecodeABC		5006487	1					
ANR	5006522	Identifier	caches		5006487	1					
ANR	5006523	PrimaryExpression	0		5006487	1					
ANR	5006524	IdentifierDeclStatement	gx_cie_scalar_cache * lmn_caches = & ( pcs -> params . abc -> common . caches . DecodeLMN [ 0 ] ) ;	521:4:19206:19289	5006487	3	True				
ANR	5006525	IdentifierDecl	* lmn_caches = & ( pcs -> params . abc -> common . caches . DecodeLMN [ 0 ] )		5006487	0					
ANR	5006526	IdentifierDeclType	gx_cie_scalar_cache *		5006487	0					
ANR	5006527	Identifier	lmn_caches		5006487	1					
ANR	5006528	AssignmentExpression	* lmn_caches = & ( pcs -> params . abc -> common . caches . DecodeLMN [ 0 ] )		5006487	2		=			
ANR	5006529	Identifier	lmn_caches		5006487	0					
ANR	5006530	UnaryOperationExpression	& ( pcs -> params . abc -> common . caches . DecodeLMN [ 0 ] )		5006487	1					
ANR	5006531	UnaryOperator	&		5006487	0					
ANR	5006532	ArrayIndexing	pcs -> params . abc -> common . caches . DecodeLMN [ 0 ]		5006487	1					
ANR	5006533	MemberAccess	pcs -> params . abc -> common . caches . DecodeLMN		5006487	0					
ANR	5006534	MemberAccess	pcs -> params . abc -> common . caches		5006487	0					
ANR	5006535	PtrMemberAccess	pcs -> params . abc -> common		5006487	0					
ANR	5006536	MemberAccess	pcs -> params . abc		5006487	0					
ANR	5006537	PtrMemberAccess	pcs -> params		5006487	0					
ANR	5006538	Identifier	pcs		5006487	0					
ANR	5006539	Identifier	params		5006487	1					
ANR	5006540	Identifier	abc		5006487	1					
ANR	5006541	Identifier	common		5006487	1					
ANR	5006542	Identifier	caches		5006487	1					
ANR	5006543	Identifier	DecodeLMN		5006487	1					
ANR	5006544	PrimaryExpression	0		5006487	1					
ANR	5006545	IdentifierDeclStatement	gx_cie_scalar_cache * def_caches = & ( pcs -> params . def -> caches_def . DecodeDEF [ 0 ] ) ;	522:4:19295:19372	5006487	4	True				
ANR	5006546	IdentifierDecl	* def_caches = & ( pcs -> params . def -> caches_def . DecodeDEF [ 0 ] )		5006487	0					
ANR	5006547	IdentifierDeclType	gx_cie_scalar_cache *		5006487	0					
ANR	5006548	Identifier	def_caches		5006487	1					
ANR	5006549	AssignmentExpression	* def_caches = & ( pcs -> params . def -> caches_def . DecodeDEF [ 0 ] )		5006487	2		=			
ANR	5006550	Identifier	def_caches		5006487	0					
ANR	5006551	UnaryOperationExpression	& ( pcs -> params . def -> caches_def . DecodeDEF [ 0 ] )		5006487	1					
ANR	5006552	UnaryOperator	&		5006487	0					
ANR	5006553	ArrayIndexing	pcs -> params . def -> caches_def . DecodeDEF [ 0 ]		5006487	1					
ANR	5006554	MemberAccess	pcs -> params . def -> caches_def . DecodeDEF		5006487	0					
ANR	5006555	PtrMemberAccess	pcs -> params . def -> caches_def		5006487	0					
ANR	5006556	MemberAccess	pcs -> params . def		5006487	0					
ANR	5006557	PtrMemberAccess	pcs -> params		5006487	0					
ANR	5006558	Identifier	pcs		5006487	0					
ANR	5006559	Identifier	params		5006487	1					
ANR	5006560	Identifier	def		5006487	1					
ANR	5006561	Identifier	caches_def		5006487	1					
ANR	5006562	Identifier	DecodeDEF		5006487	1					
ANR	5006563	PrimaryExpression	0		5006487	1					
ANR	5006564	ExpressionStatement	"if_debug0 ( gs_debug_flag_icc , ""[icc] Creating ICC profile from def object"" )"	524:4:19379:19452	5006487	5	True				
ANR	5006565	CallExpression	"if_debug0 ( gs_debug_flag_icc , ""[icc] Creating ICC profile from def object"" )"		5006487	0					
ANR	5006566	Callee	if_debug0		5006487	0					
ANR	5006567	Identifier	if_debug0		5006487	0					
ANR	5006568	ArgumentList	gs_debug_flag_icc		5006487	1					
ANR	5006569	Argument	gs_debug_flag_icc		5006487	0					
ANR	5006570	Identifier	gs_debug_flag_icc		5006487	0					
ANR	5006571	Argument	"""[icc] Creating ICC profile from def object"""		5006487	1					
ANR	5006572	PrimaryExpression	"""[icc] Creating ICC profile from def object"""		5006487	0					
ANR	5006573	ExpressionStatement	"code = gs_cspace_build_ICC ( ppcs_icc , NULL , memory -> stable_memory )"	526:4:19501:19566	5006487	6	True				
ANR	5006574	AssignmentExpression	"code = gs_cspace_build_ICC ( ppcs_icc , NULL , memory -> stable_memory )"		5006487	0		=			
ANR	5006575	Identifier	code		5006487	0					
ANR	5006576	CallExpression	"gs_cspace_build_ICC ( ppcs_icc , NULL , memory -> stable_memory )"		5006487	1					
ANR	5006577	Callee	gs_cspace_build_ICC		5006487	0					
ANR	5006578	Identifier	gs_cspace_build_ICC		5006487	0					
ANR	5006579	ArgumentList	ppcs_icc		5006487	1					
ANR	5006580	Argument	ppcs_icc		5006487	0					
ANR	5006581	Identifier	ppcs_icc		5006487	0					
ANR	5006582	Argument	NULL		5006487	1					
ANR	5006583	Identifier	NULL		5006487	0					
ANR	5006584	Argument	memory -> stable_memory		5006487	2					
ANR	5006585	PtrMemberAccess	memory -> stable_memory		5006487	0					
ANR	5006586	Identifier	memory		5006487	0					
ANR	5006587	Identifier	stable_memory		5006487	1					
ANR	5006588	IfStatement	if ( code < 0 )		5006487	7					
ANR	5006589	Condition	code < 0	527:8:19576:19583	5006487	0	True				
ANR	5006590	RelationalExpression	code < 0		5006487	0		<			
ANR	5006591	Identifier	code		5006487	0					
ANR	5006592	PrimaryExpression	0		5006487	1					
ANR	5006593	ReturnStatement	"return gs_rethrow ( code , ""Failed to build ICC color space"" ) ;"	528:8:19594:19652	5006487	1	True				
ANR	5006594	CallExpression	"gs_rethrow ( code , ""Failed to build ICC color space"" )"		5006487	0					
ANR	5006595	Callee	gs_rethrow		5006487	0					
ANR	5006596	Identifier	gs_rethrow		5006487	0					
ANR	5006597	ArgumentList	code		5006487	1					
ANR	5006598	Argument	code		5006487	0					
ANR	5006599	Identifier	code		5006487	0					
ANR	5006600	Argument	"""Failed to build ICC color space"""		5006487	1					
ANR	5006601	PrimaryExpression	"""Failed to build ICC color space"""		5006487	0					
ANR	5006602	ExpressionStatement	( * ppcs_icc ) -> base_space = palt_cs	530:4:19728:19761	5006487	8	True				
ANR	5006603	AssignmentExpression	( * ppcs_icc ) -> base_space = palt_cs		5006487	0		=			
ANR	5006604	PtrMemberAccess	( * ppcs_icc ) -> base_space		5006487	0					
ANR	5006605	UnaryOperationExpression	* ppcs_icc		5006487	0					
ANR	5006606	UnaryOperator	*		5006487	0					
ANR	5006607	Identifier	ppcs_icc		5006487	1					
ANR	5006608	Identifier	base_space		5006487	1					
ANR	5006609	Identifier	palt_cs		5006487	1					
ANR	5006610	ExpressionStatement	rc_increment_cs ( palt_cs )	531:4:19767:19791	5006487	9	True				
ANR	5006611	CallExpression	rc_increment_cs ( palt_cs )		5006487	0					
ANR	5006612	Callee	rc_increment_cs		5006487	0					
ANR	5006613	Identifier	rc_increment_cs		5006487	0					
ANR	5006614	ArgumentList	palt_cs		5006487	1					
ANR	5006615	Argument	palt_cs		5006487	0					
ANR	5006616	Identifier	palt_cs		5006487	0					
ANR	5006617	ExpressionStatement	"( * ppcs_icc ) -> cmm_icc_profile_data = gsicc_profile_new ( NULL , memory , NULL , 0 )"	532:4:19797:19873	5006487	10	True				
ANR	5006618	AssignmentExpression	"( * ppcs_icc ) -> cmm_icc_profile_data = gsicc_profile_new ( NULL , memory , NULL , 0 )"		5006487	0		=			
ANR	5006619	PtrMemberAccess	( * ppcs_icc ) -> cmm_icc_profile_data		5006487	0					
ANR	5006620	UnaryOperationExpression	* ppcs_icc		5006487	0					
ANR	5006621	UnaryOperator	*		5006487	0					
ANR	5006622	Identifier	ppcs_icc		5006487	1					
ANR	5006623	Identifier	cmm_icc_profile_data		5006487	1					
ANR	5006624	CallExpression	"gsicc_profile_new ( NULL , memory , NULL , 0 )"		5006487	1					
ANR	5006625	Callee	gsicc_profile_new		5006487	0					
ANR	5006626	Identifier	gsicc_profile_new		5006487	0					
ANR	5006627	ArgumentList	NULL		5006487	1					
ANR	5006628	Argument	NULL		5006487	0					
ANR	5006629	Identifier	NULL		5006487	0					
ANR	5006630	Argument	memory		5006487	1					
ANR	5006631	Identifier	memory		5006487	0					
ANR	5006632	Argument	NULL		5006487	2					
ANR	5006633	Identifier	NULL		5006487	0					
ANR	5006634	Argument	0		5006487	3					
ANR	5006635	PrimaryExpression	0		5006487	0					
ANR	5006636	IfStatement	if ( ( * ppcs_icc ) -> cmm_icc_profile_data == NULL )		5006487	11					
ANR	5006637	Condition	( * ppcs_icc ) -> cmm_icc_profile_data == NULL	533:8:19883:19923	5006487	0	True				
ANR	5006638	EqualityExpression	( * ppcs_icc ) -> cmm_icc_profile_data == NULL		5006487	0		==			
ANR	5006639	PtrMemberAccess	( * ppcs_icc ) -> cmm_icc_profile_data		5006487	0					
ANR	5006640	UnaryOperationExpression	* ppcs_icc		5006487	0					
ANR	5006641	UnaryOperator	*		5006487	0					
ANR	5006642	Identifier	ppcs_icc		5006487	1					
ANR	5006643	Identifier	cmm_icc_profile_data		5006487	1					
ANR	5006644	Identifier	NULL		5006487	1					
ANR	5006645	ExpressionStatement	"gs_throw ( gs_error_VMerror , ""Failed to create ICC profile"" )"	534:8:19934:19992	5006487	1	True				
ANR	5006646	CallExpression	"gs_throw ( gs_error_VMerror , ""Failed to create ICC profile"" )"		5006487	0					
ANR	5006647	Callee	gs_throw		5006487	0					
ANR	5006648	Identifier	gs_throw		5006487	0					
ANR	5006649	ArgumentList	gs_error_VMerror		5006487	1					
ANR	5006650	Argument	gs_error_VMerror		5006487	0					
ANR	5006651	Identifier	gs_error_VMerror		5006487	0					
ANR	5006652	Argument	"""Failed to create ICC profile"""		5006487	1					
ANR	5006653	PrimaryExpression	"""Failed to create ICC profile"""		5006487	0					
ANR	5006654	ExpressionStatement	"code = gsicc_create_fromdef ( pcs , & ( ( * ppcs_icc ) -> cmm_icc_profile_data -> buffer ) , & ( ( * ppcs_icc ) -> cmm_icc_profile_data -> buffer_size ) , memory , abc_caches , lmn_caches , def_caches )"	535:4:19998:20211	5006487	12	True				
ANR	5006655	AssignmentExpression	"code = gsicc_create_fromdef ( pcs , & ( ( * ppcs_icc ) -> cmm_icc_profile_data -> buffer ) , & ( ( * ppcs_icc ) -> cmm_icc_profile_data -> buffer_size ) , memory , abc_caches , lmn_caches , def_caches )"		5006487	0		=			
ANR	5006656	Identifier	code		5006487	0					
ANR	5006657	CallExpression	"gsicc_create_fromdef ( pcs , & ( ( * ppcs_icc ) -> cmm_icc_profile_data -> buffer ) , & ( ( * ppcs_icc ) -> cmm_icc_profile_data -> buffer_size ) , memory , abc_caches , lmn_caches , def_caches )"		5006487	1					
ANR	5006658	Callee	gsicc_create_fromdef		5006487	0					
ANR	5006659	Identifier	gsicc_create_fromdef		5006487	0					
ANR	5006660	ArgumentList	pcs		5006487	1					
ANR	5006661	Argument	pcs		5006487	0					
ANR	5006662	Identifier	pcs		5006487	0					
ANR	5006663	Argument	& ( ( * ppcs_icc ) -> cmm_icc_profile_data -> buffer )		5006487	1					
ANR	5006664	UnaryOperationExpression	& ( ( * ppcs_icc ) -> cmm_icc_profile_data -> buffer )		5006487	0					
ANR	5006665	UnaryOperator	&		5006487	0					
ANR	5006666	PtrMemberAccess	( * ppcs_icc ) -> cmm_icc_profile_data -> buffer		5006487	1					
ANR	5006667	PtrMemberAccess	( * ppcs_icc ) -> cmm_icc_profile_data		5006487	0					
ANR	5006668	UnaryOperationExpression	* ppcs_icc		5006487	0					
ANR	5006669	UnaryOperator	*		5006487	0					
ANR	5006670	Identifier	ppcs_icc		5006487	1					
ANR	5006671	Identifier	cmm_icc_profile_data		5006487	1					
ANR	5006672	Identifier	buffer		5006487	1					
ANR	5006673	Argument	& ( ( * ppcs_icc ) -> cmm_icc_profile_data -> buffer_size )		5006487	2					
ANR	5006674	UnaryOperationExpression	& ( ( * ppcs_icc ) -> cmm_icc_profile_data -> buffer_size )		5006487	0					
ANR	5006675	UnaryOperator	&		5006487	0					
ANR	5006676	PtrMemberAccess	( * ppcs_icc ) -> cmm_icc_profile_data -> buffer_size		5006487	1					
ANR	5006677	PtrMemberAccess	( * ppcs_icc ) -> cmm_icc_profile_data		5006487	0					
ANR	5006678	UnaryOperationExpression	* ppcs_icc		5006487	0					
ANR	5006679	UnaryOperator	*		5006487	0					
ANR	5006680	Identifier	ppcs_icc		5006487	1					
ANR	5006681	Identifier	cmm_icc_profile_data		5006487	1					
ANR	5006682	Identifier	buffer_size		5006487	1					
ANR	5006683	Argument	memory		5006487	3					
ANR	5006684	Identifier	memory		5006487	0					
ANR	5006685	Argument	abc_caches		5006487	4					
ANR	5006686	Identifier	abc_caches		5006487	0					
ANR	5006687	Argument	lmn_caches		5006487	5					
ANR	5006688	Identifier	lmn_caches		5006487	0					
ANR	5006689	Argument	def_caches		5006487	6					
ANR	5006690	Identifier	def_caches		5006487	0					
ANR	5006691	IfStatement	if ( code < 0 )		5006487	13					
ANR	5006692	Condition	code < 0	538:8:20221:20228	5006487	0	True				
ANR	5006693	RelationalExpression	code < 0		5006487	0		<			
ANR	5006694	Identifier	code		5006487	0					
ANR	5006695	PrimaryExpression	0		5006487	1					
ANR	5006696	ReturnStatement	"return gs_rethrow ( code , ""Failed to build ICC profile from CIEDEF"" ) ;"	539:8:20239:20305	5006487	1	True				
ANR	5006697	CallExpression	"gs_rethrow ( code , ""Failed to build ICC profile from CIEDEF"" )"		5006487	0					
ANR	5006698	Callee	gs_rethrow		5006487	0					
ANR	5006699	Identifier	gs_rethrow		5006487	0					
ANR	5006700	ArgumentList	code		5006487	1					
ANR	5006701	Argument	code		5006487	0					
ANR	5006702	Identifier	code		5006487	0					
ANR	5006703	Argument	"""Failed to build ICC profile from CIEDEF"""		5006487	1					
ANR	5006704	PrimaryExpression	"""Failed to build ICC profile from CIEDEF"""		5006487	0					
ANR	5006705	ExpressionStatement	code = gsicc_init_profile_info ( ( * ppcs_icc ) -> cmm_icc_profile_data )	540:4:20311:20376	5006487	14	True				
ANR	5006706	AssignmentExpression	code = gsicc_init_profile_info ( ( * ppcs_icc ) -> cmm_icc_profile_data )		5006487	0		=			
ANR	5006707	Identifier	code		5006487	0					
ANR	5006708	CallExpression	gsicc_init_profile_info ( ( * ppcs_icc ) -> cmm_icc_profile_data )		5006487	1					
ANR	5006709	Callee	gsicc_init_profile_info		5006487	0					
ANR	5006710	Identifier	gsicc_init_profile_info		5006487	0					
ANR	5006711	ArgumentList	( * ppcs_icc ) -> cmm_icc_profile_data		5006487	1					
ANR	5006712	Argument	( * ppcs_icc ) -> cmm_icc_profile_data		5006487	0					
ANR	5006713	PtrMemberAccess	( * ppcs_icc ) -> cmm_icc_profile_data		5006487	0					
ANR	5006714	UnaryOperationExpression	* ppcs_icc		5006487	0					
ANR	5006715	UnaryOperator	*		5006487	0					
ANR	5006716	Identifier	ppcs_icc		5006487	1					
ANR	5006717	Identifier	cmm_icc_profile_data		5006487	1					
ANR	5006718	IfStatement	if ( code < 0 )		5006487	15					
ANR	5006719	Condition	code < 0	541:8:20386:20393	5006487	0	True				
ANR	5006720	RelationalExpression	code < 0		5006487	0		<			
ANR	5006721	Identifier	code		5006487	0					
ANR	5006722	PrimaryExpression	0		5006487	1					
ANR	5006723	ReturnStatement	"return gs_rethrow ( code , ""Failed to build ICC profile from CIEDEF"" ) ;"	542:8:20404:20470	5006487	1	True				
ANR	5006724	CallExpression	"gs_rethrow ( code , ""Failed to build ICC profile from CIEDEF"" )"		5006487	0					
ANR	5006725	Callee	gs_rethrow		5006487	0					
ANR	5006726	Identifier	gs_rethrow		5006487	0					
ANR	5006727	ArgumentList	code		5006487	1					
ANR	5006728	Argument	code		5006487	0					
ANR	5006729	Identifier	code		5006487	0					
ANR	5006730	Argument	"""Failed to build ICC profile from CIEDEF"""		5006487	1					
ANR	5006731	PrimaryExpression	"""Failed to build ICC profile from CIEDEF"""		5006487	0					
ANR	5006732	ExpressionStatement	( * ppcs_icc ) -> cmm_icc_profile_data -> default_match = CIE_DEF	543:4:20476:20534	5006487	16	True				
ANR	5006733	AssignmentExpression	( * ppcs_icc ) -> cmm_icc_profile_data -> default_match = CIE_DEF		5006487	0		=			
ANR	5006734	PtrMemberAccess	( * ppcs_icc ) -> cmm_icc_profile_data -> default_match		5006487	0					
ANR	5006735	PtrMemberAccess	( * ppcs_icc ) -> cmm_icc_profile_data		5006487	0					
ANR	5006736	UnaryOperationExpression	* ppcs_icc		5006487	0					
ANR	5006737	UnaryOperator	*		5006487	0					
ANR	5006738	Identifier	ppcs_icc		5006487	1					
ANR	5006739	Identifier	cmm_icc_profile_data		5006487	1					
ANR	5006740	Identifier	default_match		5006487	1					
ANR	5006741	Identifier	CIE_DEF		5006487	1					
ANR	5006742	ExpressionStatement	pcs -> icc_equivalent = * ppcs_icc	545:4:20595:20626	5006487	17	True				
ANR	5006743	AssignmentExpression	pcs -> icc_equivalent = * ppcs_icc		5006487	0		=			
ANR	5006744	PtrMemberAccess	pcs -> icc_equivalent		5006487	0					
ANR	5006745	Identifier	pcs		5006487	0					
ANR	5006746	Identifier	icc_equivalent		5006487	1					
ANR	5006747	UnaryOperationExpression	* ppcs_icc		5006487	1					
ANR	5006748	UnaryOperator	*		5006487	0					
ANR	5006749	Identifier	ppcs_icc		5006487	1					
ANR	5006750	ExpressionStatement	pcs -> icc_equivalent -> cmm_icc_profile_data -> data_cs = gsRGB	548:4:20716:20774	5006487	18	True				
ANR	5006751	AssignmentExpression	pcs -> icc_equivalent -> cmm_icc_profile_data -> data_cs = gsRGB		5006487	0		=			
ANR	5006752	PtrMemberAccess	pcs -> icc_equivalent -> cmm_icc_profile_data -> data_cs		5006487	0					
ANR	5006753	PtrMemberAccess	pcs -> icc_equivalent -> cmm_icc_profile_data		5006487	0					
ANR	5006754	PtrMemberAccess	pcs -> icc_equivalent		5006487	0					
ANR	5006755	Identifier	pcs		5006487	0					
ANR	5006756	Identifier	icc_equivalent		5006487	1					
ANR	5006757	Identifier	cmm_icc_profile_data		5006487	1					
ANR	5006758	Identifier	data_cs		5006487	1					
ANR	5006759	Identifier	gsRGB		5006487	1					
ANR	5006760	ReturnStatement	return 0 ;	549:4:20780:20788	5006487	19	True				
ANR	5006761	PrimaryExpression	0		5006487	0					
ANR	5006762	ReturnType	static int		5006487	1					
ANR	5006763	Identifier	gx_ciedef_to_icc		5006487	2					
ANR	5006764	ParameterList	"gs_color_space * * ppcs_icc , gs_color_space * pcs , gs_memory_t * memory"		5006487	3					
ANR	5006765	Parameter	gs_color_space * * ppcs_icc	516:17:18984:19008	5006487	0	True				
ANR	5006766	ParameterType	gs_color_space * *		5006487	0					
ANR	5006767	Identifier	ppcs_icc		5006487	1					
ANR	5006768	Parameter	gs_color_space * pcs	516:44:19011:19029	5006487	1	True				
ANR	5006769	ParameterType	gs_color_space *		5006487	0					
ANR	5006770	Identifier	pcs		5006487	1					
ANR	5006771	Parameter	gs_memory_t * memory	516:65:19032:19050	5006487	2	True				
ANR	5006772	ParameterType	gs_memory_t *		5006487	0					
ANR	5006773	Identifier	memory		5006487	1					
ANR	5006774	CFGEntryNode	ENTRY		5006487		True				
ANR	5006775	CFGExitNode	EXIT		5006487		True				
ANR	5006776	Symbol	pcs -> params . def -> caches_def . DecodeDEF		5006487						
ANR	5006777	Symbol	& ( * ppcs_icc ) -> cmm_icc_profile_data -> buffer		5006487						
ANR	5006778	Symbol	pcs -> icc_equivalent -> cmm_icc_profile_data -> data_cs		5006487						
ANR	5006779	Symbol	* pcs		5006487						
ANR	5006780	Symbol	gs_rethrow		5006487						
ANR	5006781	Symbol	* ( * ppcs_icc ) -> cmm_icc_profile_data		5006487						
ANR	5006782	Symbol	pcs -> params . abc		5006487						
ANR	5006783	Symbol	CIE_DEF		5006487						
ANR	5006784	Symbol	ppcs_icc		5006487						
ANR	5006785	Symbol	* * * ppcs_icc		5006487						
ANR	5006786	Symbol	pcs -> icc_equivalent -> cmm_icc_profile_data		5006487						
ANR	5006787	Symbol	* pcs -> icc_equivalent -> cmm_icc_profile_data		5006487						
ANR	5006788	Symbol	gs_debug_flag_icc		5006487						
ANR	5006789	Symbol	gsRGB		5006487						
ANR	5006790	Symbol	* * ppcs_icc		5006487						
ANR	5006791	Symbol	NULL		5006487						
ANR	5006792	Symbol	* pcs -> icc_equivalent		5006487						
ANR	5006793	Symbol	* pcs -> params . def		5006487						
ANR	5006794	Symbol	pcs -> params . abc -> caches		5006487						
ANR	5006795	Symbol	( * ppcs_icc ) -> cmm_icc_profile_data		5006487						
ANR	5006796	Symbol	* pcs -> params		5006487						
ANR	5006797	Symbol	* * pcs		5006487						
ANR	5006798	Symbol	gs_cspace_build_ICC		5006487						
ANR	5006799	Symbol	* ppcs_icc		5006487						
ANR	5006800	Symbol	( * ppcs_icc ) -> base_space		5006487						
ANR	5006801	Symbol	gsicc_profile_new		5006487						
ANR	5006802	Symbol	pcs -> params . abc -> common . caches		5006487						
ANR	5006803	Symbol	memory		5006487						
ANR	5006804	Symbol	code		5006487						
ANR	5006805	Symbol	* memory		5006487						
ANR	5006806	Symbol	pcs -> params . abc -> common		5006487						
ANR	5006807	Symbol	pcs -> params . abc -> caches . DecodeABC		5006487						
ANR	5006808	Symbol	pcs -> params . abc -> common . caches . DecodeLMN		5006487						
ANR	5006809	Symbol	memory -> stable_memory		5006487						
ANR	5006810	Symbol	* pcs -> params . abc		5006487						
ANR	5006811	Symbol	abc_caches		5006487						
ANR	5006812	Symbol	palt_cs		5006487						
ANR	5006813	Symbol	* * * pcs		5006487						
ANR	5006814	Symbol	pcs		5006487						
ANR	5006815	Symbol	pcs -> params . abc -> caches . DecodeABC . caches		5006487						
ANR	5006816	Symbol	pcs -> params . def		5006487						
ANR	5006817	Symbol	lmn_caches		5006487						
ANR	5006818	Symbol	def_caches		5006487						
ANR	5006819	Symbol	pcs -> params		5006487						
ANR	5006820	Symbol	( * ppcs_icc ) -> cmm_icc_profile_data -> default_match		5006487						
ANR	5006821	Symbol	pcs -> icc_equivalent		5006487						
ANR	5006822	Symbol	gs_error_VMerror		5006487						
ANR	5006823	Symbol	pcs -> base_space		5006487						
ANR	5006824	Symbol	gsicc_create_fromdef		5006487						
ANR	5006825	Symbol	gsicc_init_profile_info		5006487						
ANR	5006826	Symbol	pcs -> params . def -> caches_def		5006487						
ANR	5006827	Symbol	& ( * ppcs_icc ) -> cmm_icc_profile_data -> buffer_size		5006487						
ANR	5006828	Symbol	* * pcs -> icc_equivalent		5006487						
ANR	5006829	Function	gx_remap_CIEDEF	552:0:20797:22408							
ANR	5006830	FunctionDef	"gx_remap_CIEDEF (const gs_client_color * pc , const gs_color_space * pcs_in , gx_device_color * pdc , const gs_gstate * pgs , gx_device * dev , gs_color_select_t select)"		5006829	0					
ANR	5006831	CompoundStatement		556:0:20989:22408	5006829	0					
ANR	5006832	IdentifierDeclStatement	gs_color_space * pcs_icc ;	557:4:20995:21018	5006829	0	True				
ANR	5006833	IdentifierDecl	* pcs_icc		5006829	0					
ANR	5006834	IdentifierDeclType	gs_color_space *		5006829	0					
ANR	5006835	Identifier	pcs_icc		5006829	1					
ANR	5006836	IdentifierDeclStatement	gs_client_color scale_pc ;	558:4:21024:21048	5006829	1	True				
ANR	5006837	IdentifierDecl	scale_pc		5006829	0					
ANR	5006838	IdentifierDeclType	gs_client_color		5006829	0					
ANR	5006839	Identifier	scale_pc		5006829	1					
ANR	5006840	IdentifierDeclStatement	"int i , code ;"	559:4:21054:21064	5006829	2	True				
ANR	5006841	IdentifierDecl	i		5006829	0					
ANR	5006842	IdentifierDeclType	int		5006829	0					
ANR	5006843	Identifier	i		5006829	1					
ANR	5006844	IdentifierDecl	code		5006829	1					
ANR	5006845	IdentifierDeclType	int		5006829	0					
ANR	5006846	Identifier	code		5006829	1					
ANR	5006847	IdentifierDeclStatement	gs_color_space * pcs = ( gs_color_space * ) pcs_in ;	560:4:21070:21117	5006829	3	True				
ANR	5006848	IdentifierDecl	* pcs = ( gs_color_space * ) pcs_in		5006829	0					
ANR	5006849	IdentifierDeclType	gs_color_space *		5006829	0					
ANR	5006850	Identifier	pcs		5006829	1					
ANR	5006851	AssignmentExpression	* pcs = ( gs_color_space * ) pcs_in		5006829	2		=			
ANR	5006852	Identifier	pcs		5006829	0					
ANR	5006853	CastExpression	( gs_color_space * ) pcs_in		5006829	1					
ANR	5006854	CastTarget	gs_color_space *		5006829	0					
ANR	5006855	Identifier	pcs_in		5006829	1					
ANR	5006856	ExpressionStatement	"if_debug3m ( 'c' , pgs -> memory , ""[c]remap CIEDEF [%g %g %g]\\n"" , pc -> paint . values [ 0 ] , pc -> paint . values [ 1 ] , pc -> paint . values [ 2 ] )"	562:4:21124:21277	5006829	4	True				
ANR	5006857	CallExpression	"if_debug3m ( 'c' , pgs -> memory , ""[c]remap CIEDEF [%g %g %g]\\n"" , pc -> paint . values [ 0 ] , pc -> paint . values [ 1 ] , pc -> paint . values [ 2 ] )"		5006829	0					
ANR	5006858	Callee	if_debug3m		5006829	0					
ANR	5006859	Identifier	if_debug3m		5006829	0					
ANR	5006860	ArgumentList	'c'		5006829	1					
ANR	5006861	Argument	'c'		5006829	0					
ANR	5006862	PrimaryExpression	'c'		5006829	0					
ANR	5006863	Argument	pgs -> memory		5006829	1					
ANR	5006864	PtrMemberAccess	pgs -> memory		5006829	0					
ANR	5006865	Identifier	pgs		5006829	0					
ANR	5006866	Identifier	memory		5006829	1					
ANR	5006867	Argument	"""[c]remap CIEDEF [%g %g %g]\\n"""		5006829	2					
ANR	5006868	PrimaryExpression	"""[c]remap CIEDEF [%g %g %g]\\n"""		5006829	0					
ANR	5006869	Argument	pc -> paint . values [ 0 ]		5006829	3					
ANR	5006870	ArrayIndexing	pc -> paint . values [ 0 ]		5006829	0					
ANR	5006871	MemberAccess	pc -> paint . values		5006829	0					
ANR	5006872	PtrMemberAccess	pc -> paint		5006829	0					
ANR	5006873	Identifier	pc		5006829	0					
ANR	5006874	Identifier	paint		5006829	1					
ANR	5006875	Identifier	values		5006829	1					
ANR	5006876	PrimaryExpression	0		5006829	1					
ANR	5006877	Argument	pc -> paint . values [ 1 ]		5006829	4					
ANR	5006878	ArrayIndexing	pc -> paint . values [ 1 ]		5006829	0					
ANR	5006879	MemberAccess	pc -> paint . values		5006829	0					
ANR	5006880	PtrMemberAccess	pc -> paint		5006829	0					
ANR	5006881	Identifier	pc		5006829	0					
ANR	5006882	Identifier	paint		5006829	1					
ANR	5006883	Identifier	values		5006829	1					
ANR	5006884	PrimaryExpression	1		5006829	1					
ANR	5006885	Argument	pc -> paint . values [ 2 ]		5006829	5					
ANR	5006886	ArrayIndexing	pc -> paint . values [ 2 ]		5006829	0					
ANR	5006887	MemberAccess	pc -> paint . values		5006829	0					
ANR	5006888	PtrMemberAccess	pc -> paint		5006829	0					
ANR	5006889	Identifier	pc		5006829	0					
ANR	5006890	Identifier	paint		5006829	1					
ANR	5006891	Identifier	values		5006829	1					
ANR	5006892	PrimaryExpression	2		5006829	1					
ANR	5006893	IfStatement	if ( pcs -> icc_equivalent == NULL )		5006829	5					
ANR	5006894	Condition	pcs -> icc_equivalent == NULL	568:8:21446:21472	5006829	0	True				
ANR	5006895	EqualityExpression	pcs -> icc_equivalent == NULL		5006829	0		==			
ANR	5006896	PtrMemberAccess	pcs -> icc_equivalent		5006829	0					
ANR	5006897	Identifier	pcs		5006829	0					
ANR	5006898	Identifier	icc_equivalent		5006829	1					
ANR	5006899	Identifier	NULL		5006829	1					
ANR	5006900	CompoundStatement		13:37:485:485	5006829	1					
ANR	5006901	ExpressionStatement	"code = gx_ciedef_to_icc ( & pcs_icc , pcs , pgs -> memory -> stable_memory )"	569:8:21485:21551	5006829	0	True				
ANR	5006902	AssignmentExpression	"code = gx_ciedef_to_icc ( & pcs_icc , pcs , pgs -> memory -> stable_memory )"		5006829	0		=			
ANR	5006903	Identifier	code		5006829	0					
ANR	5006904	CallExpression	"gx_ciedef_to_icc ( & pcs_icc , pcs , pgs -> memory -> stable_memory )"		5006829	1					
ANR	5006905	Callee	gx_ciedef_to_icc		5006829	0					
ANR	5006906	Identifier	gx_ciedef_to_icc		5006829	0					
ANR	5006907	ArgumentList	& pcs_icc		5006829	1					
ANR	5006908	Argument	& pcs_icc		5006829	0					
ANR	5006909	UnaryOperationExpression	& pcs_icc		5006829	0					
ANR	5006910	UnaryOperator	&		5006829	0					
ANR	5006911	Identifier	pcs_icc		5006829	1					
ANR	5006912	Argument	pcs		5006829	1					
ANR	5006913	Identifier	pcs		5006829	0					
ANR	5006914	Argument	pgs -> memory -> stable_memory		5006829	2					
ANR	5006915	PtrMemberAccess	pgs -> memory -> stable_memory		5006829	0					
ANR	5006916	PtrMemberAccess	pgs -> memory		5006829	0					
ANR	5006917	Identifier	pgs		5006829	0					
ANR	5006918	Identifier	memory		5006829	1					
ANR	5006919	Identifier	stable_memory		5006829	1					
ANR	5006920	IfStatement	if ( code < 0 )		5006829	1					
ANR	5006921	Condition	code < 0	570:12:21565:21572	5006829	0	True				
ANR	5006922	RelationalExpression	code < 0		5006829	0		<			
ANR	5006923	Identifier	code		5006829	0					
ANR	5006924	PrimaryExpression	0		5006829	1					
ANR	5006925	ReturnStatement	"return gs_rethrow ( code , ""Failed to build ICC profile from CIEDEF"" ) ;"	571:12:21587:21653	5006829	1	True				
ANR	5006926	CallExpression	"gs_rethrow ( code , ""Failed to build ICC profile from CIEDEF"" )"		5006829	0					
ANR	5006927	Callee	gs_rethrow		5006829	0					
ANR	5006928	Identifier	gs_rethrow		5006829	0					
ANR	5006929	ArgumentList	code		5006829	1					
ANR	5006930	Argument	code		5006829	0					
ANR	5006931	Identifier	code		5006829	0					
ANR	5006932	Argument	"""Failed to build ICC profile from CIEDEF"""		5006829	1					
ANR	5006933	PrimaryExpression	"""Failed to build ICC profile from CIEDEF"""		5006829	0					
ANR	5006934	ElseStatement	else		5006829	0					
ANR	5006935	CompoundStatement		17:11:676:676	5006829	0					
ANR	5006936	ExpressionStatement	pcs_icc = pcs -> icc_equivalent	573:8:21676:21705	5006829	0	True				
ANR	5006937	AssignmentExpression	pcs_icc = pcs -> icc_equivalent		5006829	0		=			
ANR	5006938	Identifier	pcs_icc		5006829	0					
ANR	5006939	PtrMemberAccess	pcs -> icc_equivalent		5006829	1					
ANR	5006940	Identifier	pcs		5006829	0					
ANR	5006941	Identifier	icc_equivalent		5006829	1					
ANR	5006942	IfStatement	"if ( check_range ( & ( pcs -> params . def -> RangeDEF . ranges [ 0 ] ) , 3 ) )"		5006829	6					
ANR	5006943	Condition	"check_range ( & ( pcs -> params . def -> RangeDEF . ranges [ 0 ] ) , 3 )"	577:8:21840:21893	5006829	0	True				
ANR	5006944	CallExpression	"check_range ( & ( pcs -> params . def -> RangeDEF . ranges [ 0 ] ) , 3 )"		5006829	0					
ANR	5006945	Callee	check_range		5006829	0					
ANR	5006946	Identifier	check_range		5006829	0					
ANR	5006947	ArgumentList	& ( pcs -> params . def -> RangeDEF . ranges [ 0 ] )		5006829	1					
ANR	5006948	Argument	& ( pcs -> params . def -> RangeDEF . ranges [ 0 ] )		5006829	0					
ANR	5006949	UnaryOperationExpression	& ( pcs -> params . def -> RangeDEF . ranges [ 0 ] )		5006829	0					
ANR	5006950	UnaryOperator	&		5006829	0					
ANR	5006951	ArrayIndexing	pcs -> params . def -> RangeDEF . ranges [ 0 ]		5006829	1					
ANR	5006952	MemberAccess	pcs -> params . def -> RangeDEF . ranges		5006829	0					
ANR	5006953	PtrMemberAccess	pcs -> params . def -> RangeDEF		5006829	0					
ANR	5006954	MemberAccess	pcs -> params . def		5006829	0					
ANR	5006955	PtrMemberAccess	pcs -> params		5006829	0					
ANR	5006956	Identifier	pcs		5006829	0					
ANR	5006957	Identifier	params		5006829	1					
ANR	5006958	Identifier	def		5006829	1					
ANR	5006959	Identifier	RangeDEF		5006829	1					
ANR	5006960	Identifier	ranges		5006829	1					
ANR	5006961	PrimaryExpression	0		5006829	1					
ANR	5006962	Argument	3		5006829	1					
ANR	5006963	PrimaryExpression	3		5006829	0					
ANR	5006964	CompoundStatement		22:64:906:906	5006829	1					
ANR	5006965	ReturnStatement	"return ( pcs_icc -> type -> remap_color ) ( pc , pcs_icc , pdc , pgs , dev , select ) ;"	578:8:21906:21972	5006829	0	True				
ANR	5006966	CallExpression	"( pcs_icc -> type -> remap_color ) ( pc , pcs_icc , pdc , pgs , dev , select )"		5006829	0					
ANR	5006967	Callee	pcs_icc -> type -> remap_color		5006829	0					
ANR	5006968	PtrMemberAccess	pcs_icc -> type -> remap_color		5006829	0					
ANR	5006969	PtrMemberAccess	pcs_icc -> type		5006829	0					
ANR	5006970	Identifier	pcs_icc		5006829	0					
ANR	5006971	Identifier	type		5006829	1					
ANR	5006972	Identifier	remap_color		5006829	1					
ANR	5006973	ArgumentList	pc		5006829	1					
ANR	5006974	Argument	pc		5006829	0					
ANR	5006975	Identifier	pc		5006829	0					
ANR	5006976	Argument	pcs_icc		5006829	1					
ANR	5006977	Identifier	pcs_icc		5006829	0					
ANR	5006978	Argument	pdc		5006829	2					
ANR	5006979	Identifier	pdc		5006829	0					
ANR	5006980	Argument	pgs		5006829	3					
ANR	5006981	Identifier	pgs		5006829	0					
ANR	5006982	Argument	dev		5006829	4					
ANR	5006983	Identifier	dev		5006829	0					
ANR	5006984	Argument	select		5006829	5					
ANR	5006985	Identifier	select		5006829	0					
ANR	5006986	ExpressionStatement	"rescale_input_color ( & ( pcs -> params . def -> RangeDEF . ranges [ 0 ] ) , 3 , pc , & scale_pc )"	581:4:22021:22098	5006829	7	True				
ANR	5006987	CallExpression	"rescale_input_color ( & ( pcs -> params . def -> RangeDEF . ranges [ 0 ] ) , 3 , pc , & scale_pc )"		5006829	0					
ANR	5006988	Callee	rescale_input_color		5006829	0					
ANR	5006989	Identifier	rescale_input_color		5006829	0					
ANR	5006990	ArgumentList	& ( pcs -> params . def -> RangeDEF . ranges [ 0 ] )		5006829	1					
ANR	5006991	Argument	& ( pcs -> params . def -> RangeDEF . ranges [ 0 ] )		5006829	0					
ANR	5006992	UnaryOperationExpression	& ( pcs -> params . def -> RangeDEF . ranges [ 0 ] )		5006829	0					
ANR	5006993	UnaryOperator	&		5006829	0					
ANR	5006994	ArrayIndexing	pcs -> params . def -> RangeDEF . ranges [ 0 ]		5006829	1					
ANR	5006995	MemberAccess	pcs -> params . def -> RangeDEF . ranges		5006829	0					
ANR	5006996	PtrMemberAccess	pcs -> params . def -> RangeDEF		5006829	0					
ANR	5006997	MemberAccess	pcs -> params . def		5006829	0					
ANR	5006998	PtrMemberAccess	pcs -> params		5006829	0					
ANR	5006999	Identifier	pcs		5006829	0					
ANR	5007000	Identifier	params		5006829	1					
ANR	5007001	Identifier	def		5006829	1					
ANR	5007002	Identifier	RangeDEF		5006829	1					
ANR	5007003	Identifier	ranges		5006829	1					
ANR	5007004	PrimaryExpression	0		5006829	1					
ANR	5007005	Argument	3		5006829	1					
ANR	5007006	PrimaryExpression	3		5006829	0					
ANR	5007007	Argument	pc		5006829	2					
ANR	5007008	Identifier	pc		5006829	0					
ANR	5007009	Argument	& scale_pc		5006829	3					
ANR	5007010	UnaryOperationExpression	& scale_pc		5006829	0					
ANR	5007011	UnaryOperator	&		5006829	0					
ANR	5007012	Identifier	scale_pc		5006829	1					
ANR	5007013	ExpressionStatement	"code = ( pcs_icc -> type -> remap_color ) ( & scale_pc , pcs_icc , pdc , pgs , dev , select )"	583:4:22132:22205	5006829	8	True				
ANR	5007014	AssignmentExpression	"code = ( pcs_icc -> type -> remap_color ) ( & scale_pc , pcs_icc , pdc , pgs , dev , select )"		5006829	0		=			
ANR	5007015	Identifier	code		5006829	0					
ANR	5007016	CallExpression	"( pcs_icc -> type -> remap_color ) ( & scale_pc , pcs_icc , pdc , pgs , dev , select )"		5006829	1					
ANR	5007017	Callee	pcs_icc -> type -> remap_color		5006829	0					
ANR	5007018	PtrMemberAccess	pcs_icc -> type -> remap_color		5006829	0					
ANR	5007019	PtrMemberAccess	pcs_icc -> type		5006829	0					
ANR	5007020	Identifier	pcs_icc		5006829	0					
ANR	5007021	Identifier	type		5006829	1					
ANR	5007022	Identifier	remap_color		5006829	1					
ANR	5007023	ArgumentList	& scale_pc		5006829	1					
ANR	5007024	Argument	& scale_pc		5006829	0					
ANR	5007025	UnaryOperationExpression	& scale_pc		5006829	0					
ANR	5007026	UnaryOperator	&		5006829	0					
ANR	5007027	Identifier	scale_pc		5006829	1					
ANR	5007028	Argument	pcs_icc		5006829	1					
ANR	5007029	Identifier	pcs_icc		5006829	0					
ANR	5007030	Argument	pdc		5006829	2					
ANR	5007031	Identifier	pdc		5006829	0					
ANR	5007032	Argument	pgs		5006829	3					
ANR	5007033	Identifier	pgs		5006829	0					
ANR	5007034	Argument	dev		5006829	4					
ANR	5007035	Identifier	dev		5006829	0					
ANR	5007036	Argument	select		5006829	5					
ANR	5007037	Identifier	select		5006829	0					
ANR	5007038	ForStatement	for ( i = 0 ; i < 3 ; i ++ )		5006829	9					
ANR	5007039	ForInit	i = 0 ;	585:9:22283:22288	5006829	0	True				
ANR	5007040	AssignmentExpression	i = 0		5006829	0		=			
ANR	5007041	Identifier	i		5006829	0					
ANR	5007042	PrimaryExpression	0		5006829	1					
ANR	5007043	Condition	i < 3	585:16:22290:22294	5006829	1	True				
ANR	5007044	RelationalExpression	i < 3		5006829	0		<			
ANR	5007045	Identifier	i		5006829	0					
ANR	5007046	PrimaryExpression	3		5006829	1					
ANR	5007047	PostIncDecOperationExpression	i ++	585:23:22297:22299	5006829	2	True				
ANR	5007048	Identifier	i		5006829	0					
ANR	5007049	IncDec	++		5006829	1					
ANR	5007050	ExpressionStatement	pdc -> ccolor . paint . values [ i ] = pc -> paint . values [ i ]	586:8:22310:22359	5006829	3	True				
ANR	5007051	AssignmentExpression	pdc -> ccolor . paint . values [ i ] = pc -> paint . values [ i ]		5006829	0		=			
ANR	5007052	ArrayIndexing	pdc -> ccolor . paint . values [ i ]		5006829	0					
ANR	5007053	MemberAccess	pdc -> ccolor . paint . values		5006829	0					
ANR	5007054	MemberAccess	pdc -> ccolor . paint		5006829	0					
ANR	5007055	PtrMemberAccess	pdc -> ccolor		5006829	0					
ANR	5007056	Identifier	pdc		5006829	0					
ANR	5007057	Identifier	ccolor		5006829	1					
ANR	5007058	Identifier	paint		5006829	1					
ANR	5007059	Identifier	values		5006829	1					
ANR	5007060	Identifier	i		5006829	1					
ANR	5007061	ArrayIndexing	pc -> paint . values [ i ]		5006829	1					
ANR	5007062	MemberAccess	pc -> paint . values		5006829	0					
ANR	5007063	PtrMemberAccess	pc -> paint		5006829	0					
ANR	5007064	Identifier	pc		5006829	0					
ANR	5007065	Identifier	paint		5006829	1					
ANR	5007066	Identifier	values		5006829	1					
ANR	5007067	Identifier	i		5006829	1					
ANR	5007068	ExpressionStatement	pdc -> ccolor_valid = true	587:4:22365:22389	5006829	10	True				
ANR	5007069	AssignmentExpression	pdc -> ccolor_valid = true		5006829	0		=			
ANR	5007070	PtrMemberAccess	pdc -> ccolor_valid		5006829	0					
ANR	5007071	Identifier	pdc		5006829	0					
ANR	5007072	Identifier	ccolor_valid		5006829	1					
ANR	5007073	Identifier	true		5006829	1					
ANR	5007074	ReturnStatement	return code ;	588:4:22395:22406	5006829	11	True				
ANR	5007075	Identifier	code		5006829	0					
ANR	5007076	ReturnType	int		5006829	1					
ANR	5007077	Identifier	gx_remap_CIEDEF		5006829	2					
ANR	5007078	ParameterList	"const gs_client_color * pc , const gs_color_space * pcs_in , gx_device_color * pdc , const gs_gstate * pgs , gx_device * dev , gs_color_select_t select"		5006829	3					
ANR	5007079	Parameter	const gs_client_color * pc	553:16:20817:20842	5006829	0	True				
ANR	5007080	ParameterType	const gs_client_color *		5006829	0					
ANR	5007081	Identifier	pc		5006829	1					
ANR	5007082	Parameter	const gs_color_space * pcs_in	553:44:20845:20873	5006829	1	True				
ANR	5007083	ParameterType	const gs_color_space *		5006829	0					
ANR	5007084	Identifier	pcs_in		5006829	1					
ANR	5007085	Parameter	gx_device_color * pdc	554:8:20884:20904	5006829	2	True				
ANR	5007086	ParameterType	gx_device_color *		5006829	0					
ANR	5007087	Identifier	pdc		5006829	1					
ANR	5007088	Parameter	const gs_gstate * pgs	554:31:20907:20927	5006829	3	True				
ANR	5007089	ParameterType	const gs_gstate *		5006829	0					
ANR	5007090	Identifier	pgs		5006829	1					
ANR	5007091	Parameter	gx_device * dev	554:54:20930:20944	5006829	4	True				
ANR	5007092	ParameterType	gx_device *		5006829	0					
ANR	5007093	Identifier	dev		5006829	1					
ANR	5007094	Parameter	gs_color_select_t select	555:16:20963:20986	5006829	5	True				
ANR	5007095	ParameterType	gs_color_select_t		5006829	0					
ANR	5007096	Identifier	select		5006829	1					
ANR	5007097	CFGEntryNode	ENTRY		5006829		True				
ANR	5007098	CFGExitNode	EXIT		5006829		True				
ANR	5007099	Symbol	* * pcs_icc		5006829						
ANR	5007100	Symbol	pcs_icc		5006829						
ANR	5007101	Symbol	select		5006829						
ANR	5007102	Symbol	* pgs		5006829						
ANR	5007103	Symbol	* pcs		5006829						
ANR	5007104	Symbol	gs_rethrow		5006829						
ANR	5007105	Symbol	& scale_pc		5006829						
ANR	5007106	Symbol	* pc -> paint . values		5006829						
ANR	5007107	Symbol	pcs -> params . def -> RangeDEF . ranges		5006829						
ANR	5007108	Symbol	pdc -> ccolor . paint		5006829						
ANR	5007109	Symbol	dev		5006829						
ANR	5007110	Symbol	* pdc		5006829						
ANR	5007111	Symbol	pcs_icc -> type -> remap_color		5006829						
ANR	5007112	Symbol	* pgs -> memory		5006829						
ANR	5007113	Symbol	pcs_in		5006829						
ANR	5007114	Symbol	NULL		5006829						
ANR	5007115	Symbol	* pcs -> params . def		5006829						
ANR	5007116	Symbol	* pdc -> ccolor . paint . values		5006829						
ANR	5007117	Symbol	* * pgs		5006829						
ANR	5007118	Symbol	* * pcs		5006829						
ANR	5007119	Symbol	* pcs -> params		5006829						
ANR	5007120	Symbol	* pdc -> ccolor		5006829						
ANR	5007121	Symbol	true		5006829						
ANR	5007122	Symbol	* pc		5006829						
ANR	5007123	Symbol	* pcs_icc		5006829						
ANR	5007124	Symbol	code		5006829						
ANR	5007125	Symbol	* * pdc		5006829						
ANR	5007126	Symbol	* pc -> paint		5006829						
ANR	5007127	Symbol	& pcs_icc		5006829						
ANR	5007128	Symbol	pcs_icc -> type		5006829						
ANR	5007129	Symbol	pcs -> params . def -> RangeDEF		5006829						
ANR	5007130	Symbol	pdc -> ccolor_valid		5006829						
ANR	5007131	Symbol	pgs		5006829						
ANR	5007132	Symbol	* * pc		5006829						
ANR	5007133	Symbol	pgs -> memory		5006829						
ANR	5007134	Symbol	gx_ciedef_to_icc		5006829						
ANR	5007135	Symbol	scale_pc		5006829						
ANR	5007136	Symbol	check_range		5006829						
ANR	5007137	Symbol	pcs		5006829						
ANR	5007138	Symbol	* pdc -> ccolor . paint		5006829						
ANR	5007139	Symbol	pcs -> params . def		5006829						
ANR	5007140	Symbol	pdc -> ccolor . paint . values		5006829						
ANR	5007141	Symbol	pcs -> params		5006829						
ANR	5007142	Symbol	i		5006829						
ANR	5007143	Symbol	* pcs_icc -> type		5006829						
ANR	5007144	Symbol	pc -> paint . values		5006829						
ANR	5007145	Symbol	pcs -> icc_equivalent		5006829						
ANR	5007146	Symbol	pdc		5006829						
ANR	5007147	Symbol	pc -> paint		5006829						
ANR	5007148	Symbol	pc		5006829						
ANR	5007149	Symbol	* i		5006829						
ANR	5007150	Symbol	pdc -> ccolor		5006829						
ANR	5007151	Symbol	pgs -> memory -> stable_memory		5006829						
ANR	5007152	Function	gx_concretize_CIEDEF	592:0:22445:23829							
ANR	5007153	FunctionDef	"gx_concretize_CIEDEF (const gs_client_color * pc , const gs_color_space * pcs_in , frac * pconc , const gs_gstate * pgs , gx_device * dev)"		5007152	0					
ANR	5007154	CompoundStatement		595:0:22603:23829	5007152	0					
ANR	5007155	IdentifierDeclStatement	int code = 0 ;	596:4:22609:22621	5007152	0	True				
ANR	5007156	IdentifierDecl	code = 0		5007152	0					
ANR	5007157	IdentifierDeclType	int		5007152	0					
ANR	5007158	Identifier	code		5007152	1					
ANR	5007159	AssignmentExpression	code = 0		5007152	2		=			
ANR	5007160	Identifier	code		5007152	0					
ANR	5007161	PrimaryExpression	0		5007152	1					
ANR	5007162	IdentifierDeclStatement	gs_color_space * pcs_icc ;	597:4:22627:22650	5007152	1	True				
ANR	5007163	IdentifierDecl	* pcs_icc		5007152	0					
ANR	5007164	IdentifierDeclType	gs_color_space *		5007152	0					
ANR	5007165	Identifier	pcs_icc		5007152	1					
ANR	5007166	IdentifierDeclStatement	gs_client_color scale_pc ;	598:4:22656:22680	5007152	2	True				
ANR	5007167	IdentifierDecl	scale_pc		5007152	0					
ANR	5007168	IdentifierDeclType	gs_client_color		5007152	0					
ANR	5007169	Identifier	scale_pc		5007152	1					
ANR	5007170	IdentifierDeclStatement	gs_color_space * pcs = ( gs_color_space * ) pcs_in ;	599:4:22686:22733	5007152	3	True				
ANR	5007171	IdentifierDecl	* pcs = ( gs_color_space * ) pcs_in		5007152	0					
ANR	5007172	IdentifierDeclType	gs_color_space *		5007152	0					
ANR	5007173	Identifier	pcs		5007152	1					
ANR	5007174	AssignmentExpression	* pcs = ( gs_color_space * ) pcs_in		5007152	2		=			
ANR	5007175	Identifier	pcs		5007152	0					
ANR	5007176	CastExpression	( gs_color_space * ) pcs_in		5007152	1					
ANR	5007177	CastTarget	gs_color_space *		5007152	0					
ANR	5007178	Identifier	pcs_in		5007152	1					
ANR	5007179	ExpressionStatement	"if_debug3m ( 'c' , pgs -> memory , ""[c]concretize DEF [%g %g %g]\\n"" , pc -> paint . values [ 0 ] , pc -> paint . values [ 1 ] , pc -> paint . values [ 2 ] )"	601:4:22740:22895	5007152	4	True				
ANR	5007180	CallExpression	"if_debug3m ( 'c' , pgs -> memory , ""[c]concretize DEF [%g %g %g]\\n"" , pc -> paint . values [ 0 ] , pc -> paint . values [ 1 ] , pc -> paint . values [ 2 ] )"		5007152	0					
ANR	5007181	Callee	if_debug3m		5007152	0					
ANR	5007182	Identifier	if_debug3m		5007152	0					
ANR	5007183	ArgumentList	'c'		5007152	1					
ANR	5007184	Argument	'c'		5007152	0					
ANR	5007185	PrimaryExpression	'c'		5007152	0					
ANR	5007186	Argument	pgs -> memory		5007152	1					
ANR	5007187	PtrMemberAccess	pgs -> memory		5007152	0					
ANR	5007188	Identifier	pgs		5007152	0					
ANR	5007189	Identifier	memory		5007152	1					
ANR	5007190	Argument	"""[c]concretize DEF [%g %g %g]\\n"""		5007152	2					
ANR	5007191	PrimaryExpression	"""[c]concretize DEF [%g %g %g]\\n"""		5007152	0					
ANR	5007192	Argument	pc -> paint . values [ 0 ]		5007152	3					
ANR	5007193	ArrayIndexing	pc -> paint . values [ 0 ]		5007152	0					
ANR	5007194	MemberAccess	pc -> paint . values		5007152	0					
ANR	5007195	PtrMemberAccess	pc -> paint		5007152	0					
ANR	5007196	Identifier	pc		5007152	0					
ANR	5007197	Identifier	paint		5007152	1					
ANR	5007198	Identifier	values		5007152	1					
ANR	5007199	PrimaryExpression	0		5007152	1					
ANR	5007200	Argument	pc -> paint . values [ 1 ]		5007152	4					
ANR	5007201	ArrayIndexing	pc -> paint . values [ 1 ]		5007152	0					
ANR	5007202	MemberAccess	pc -> paint . values		5007152	0					
ANR	5007203	PtrMemberAccess	pc -> paint		5007152	0					
ANR	5007204	Identifier	pc		5007152	0					
ANR	5007205	Identifier	paint		5007152	1					
ANR	5007206	Identifier	values		5007152	1					
ANR	5007207	PrimaryExpression	1		5007152	1					
ANR	5007208	Argument	pc -> paint . values [ 2 ]		5007152	5					
ANR	5007209	ArrayIndexing	pc -> paint . values [ 2 ]		5007152	0					
ANR	5007210	MemberAccess	pc -> paint . values		5007152	0					
ANR	5007211	PtrMemberAccess	pc -> paint		5007152	0					
ANR	5007212	Identifier	pc		5007152	0					
ANR	5007213	Identifier	paint		5007152	1					
ANR	5007214	Identifier	values		5007152	1					
ANR	5007215	PrimaryExpression	2		5007152	1					
ANR	5007216	IfStatement	if ( pcs -> icc_equivalent == NULL )		5007152	5					
ANR	5007217	Condition	pcs -> icc_equivalent == NULL	607:8:23064:23090	5007152	0	True				
ANR	5007218	EqualityExpression	pcs -> icc_equivalent == NULL		5007152	0		==			
ANR	5007219	PtrMemberAccess	pcs -> icc_equivalent		5007152	0					
ANR	5007220	Identifier	pcs		5007152	0					
ANR	5007221	Identifier	icc_equivalent		5007152	1					
ANR	5007222	Identifier	NULL		5007152	1					
ANR	5007223	CompoundStatement		13:37:489:489	5007152	1					
ANR	5007224	ExpressionStatement	"code = gx_ciedef_to_icc ( & pcs_icc , pcs , pgs -> memory -> stable_memory )"	608:8:23103:23169	5007152	0	True				
ANR	5007225	AssignmentExpression	"code = gx_ciedef_to_icc ( & pcs_icc , pcs , pgs -> memory -> stable_memory )"		5007152	0		=			
ANR	5007226	Identifier	code		5007152	0					
ANR	5007227	CallExpression	"gx_ciedef_to_icc ( & pcs_icc , pcs , pgs -> memory -> stable_memory )"		5007152	1					
ANR	5007228	Callee	gx_ciedef_to_icc		5007152	0					
ANR	5007229	Identifier	gx_ciedef_to_icc		5007152	0					
ANR	5007230	ArgumentList	& pcs_icc		5007152	1					
ANR	5007231	Argument	& pcs_icc		5007152	0					
ANR	5007232	UnaryOperationExpression	& pcs_icc		5007152	0					
ANR	5007233	UnaryOperator	&		5007152	0					
ANR	5007234	Identifier	pcs_icc		5007152	1					
ANR	5007235	Argument	pcs		5007152	1					
ANR	5007236	Identifier	pcs		5007152	0					
ANR	5007237	Argument	pgs -> memory -> stable_memory		5007152	2					
ANR	5007238	PtrMemberAccess	pgs -> memory -> stable_memory		5007152	0					
ANR	5007239	PtrMemberAccess	pgs -> memory		5007152	0					
ANR	5007240	Identifier	pgs		5007152	0					
ANR	5007241	Identifier	memory		5007152	1					
ANR	5007242	Identifier	stable_memory		5007152	1					
ANR	5007243	IfStatement	if ( code < 0 )		5007152	1					
ANR	5007244	Condition	code < 0	609:12:23183:23190	5007152	0	True				
ANR	5007245	RelationalExpression	code < 0		5007152	0		<			
ANR	5007246	Identifier	code		5007152	0					
ANR	5007247	PrimaryExpression	0		5007152	1					
ANR	5007248	ReturnStatement	"return gs_rethrow ( code , ""Failed to build ICC profile from CIEDEF"" ) ;"	610:12:23205:23271	5007152	1	True				
ANR	5007249	CallExpression	"gs_rethrow ( code , ""Failed to build ICC profile from CIEDEF"" )"		5007152	0					
ANR	5007250	Callee	gs_rethrow		5007152	0					
ANR	5007251	Identifier	gs_rethrow		5007152	0					
ANR	5007252	ArgumentList	code		5007152	1					
ANR	5007253	Argument	code		5007152	0					
ANR	5007254	Identifier	code		5007152	0					
ANR	5007255	Argument	"""Failed to build ICC profile from CIEDEF"""		5007152	1					
ANR	5007256	PrimaryExpression	"""Failed to build ICC profile from CIEDEF"""		5007152	0					
ANR	5007257	ElseStatement	else		5007152	0					
ANR	5007258	CompoundStatement		17:11:680:680	5007152	0					
ANR	5007259	ExpressionStatement	pcs_icc = pcs -> icc_equivalent	612:8:23294:23323	5007152	0	True				
ANR	5007260	AssignmentExpression	pcs_icc = pcs -> icc_equivalent		5007152	0		=			
ANR	5007261	Identifier	pcs_icc		5007152	0					
ANR	5007262	PtrMemberAccess	pcs -> icc_equivalent		5007152	1					
ANR	5007263	Identifier	pcs		5007152	0					
ANR	5007264	Identifier	icc_equivalent		5007152	1					
ANR	5007265	IfStatement	"if ( check_range ( & ( pcs -> params . def -> RangeDEF . ranges [ 0 ] ) , 3 ) )"		5007152	6					
ANR	5007266	Condition	"check_range ( & ( pcs -> params . def -> RangeDEF . ranges [ 0 ] ) , 3 )"	616:8:23458:23511	5007152	0	True				
ANR	5007267	CallExpression	"check_range ( & ( pcs -> params . def -> RangeDEF . ranges [ 0 ] ) , 3 )"		5007152	0					
ANR	5007268	Callee	check_range		5007152	0					
ANR	5007269	Identifier	check_range		5007152	0					
ANR	5007270	ArgumentList	& ( pcs -> params . def -> RangeDEF . ranges [ 0 ] )		5007152	1					
ANR	5007271	Argument	& ( pcs -> params . def -> RangeDEF . ranges [ 0 ] )		5007152	0					
ANR	5007272	UnaryOperationExpression	& ( pcs -> params . def -> RangeDEF . ranges [ 0 ] )		5007152	0					
ANR	5007273	UnaryOperator	&		5007152	0					
ANR	5007274	ArrayIndexing	pcs -> params . def -> RangeDEF . ranges [ 0 ]		5007152	1					
ANR	5007275	MemberAccess	pcs -> params . def -> RangeDEF . ranges		5007152	0					
ANR	5007276	PtrMemberAccess	pcs -> params . def -> RangeDEF		5007152	0					
ANR	5007277	MemberAccess	pcs -> params . def		5007152	0					
ANR	5007278	PtrMemberAccess	pcs -> params		5007152	0					
ANR	5007279	Identifier	pcs		5007152	0					
ANR	5007280	Identifier	params		5007152	1					
ANR	5007281	Identifier	def		5007152	1					
ANR	5007282	Identifier	RangeDEF		5007152	1					
ANR	5007283	Identifier	ranges		5007152	1					
ANR	5007284	PrimaryExpression	0		5007152	1					
ANR	5007285	Argument	3		5007152	1					
ANR	5007286	PrimaryExpression	3		5007152	0					
ANR	5007287	CompoundStatement		22:64:910:910	5007152	1					
ANR	5007288	ReturnStatement	"return ( pcs_icc -> type -> concretize_color ) ( pc , pcs_icc , pconc , pgs , dev ) ;"	617:8:23524:23594	5007152	0	True				
ANR	5007289	CallExpression	"( pcs_icc -> type -> concretize_color ) ( pc , pcs_icc , pconc , pgs , dev )"		5007152	0					
ANR	5007290	Callee	pcs_icc -> type -> concretize_color		5007152	0					
ANR	5007291	PtrMemberAccess	pcs_icc -> type -> concretize_color		5007152	0					
ANR	5007292	PtrMemberAccess	pcs_icc -> type		5007152	0					
ANR	5007293	Identifier	pcs_icc		5007152	0					
ANR	5007294	Identifier	type		5007152	1					
ANR	5007295	Identifier	concretize_color		5007152	1					
ANR	5007296	ArgumentList	pc		5007152	1					
ANR	5007297	Argument	pc		5007152	0					
ANR	5007298	Identifier	pc		5007152	0					
ANR	5007299	Argument	pcs_icc		5007152	1					
ANR	5007300	Identifier	pcs_icc		5007152	0					
ANR	5007301	Argument	pconc		5007152	2					
ANR	5007302	Identifier	pconc		5007152	0					
ANR	5007303	Argument	pgs		5007152	3					
ANR	5007304	Identifier	pgs		5007152	0					
ANR	5007305	Argument	dev		5007152	4					
ANR	5007306	Identifier	dev		5007152	0					
ANR	5007307	ExpressionStatement	"rescale_input_color ( & ( pcs -> params . def -> RangeDEF . ranges [ 0 ] ) , 3 , pc , & scale_pc )"	620:4:23639:23716	5007152	7	True				
ANR	5007308	CallExpression	"rescale_input_color ( & ( pcs -> params . def -> RangeDEF . ranges [ 0 ] ) , 3 , pc , & scale_pc )"		5007152	0					
ANR	5007309	Callee	rescale_input_color		5007152	0					
ANR	5007310	Identifier	rescale_input_color		5007152	0					
ANR	5007311	ArgumentList	& ( pcs -> params . def -> RangeDEF . ranges [ 0 ] )		5007152	1					
ANR	5007312	Argument	& ( pcs -> params . def -> RangeDEF . ranges [ 0 ] )		5007152	0					
ANR	5007313	UnaryOperationExpression	& ( pcs -> params . def -> RangeDEF . ranges [ 0 ] )		5007152	0					
ANR	5007314	UnaryOperator	&		5007152	0					
ANR	5007315	ArrayIndexing	pcs -> params . def -> RangeDEF . ranges [ 0 ]		5007152	1					
ANR	5007316	MemberAccess	pcs -> params . def -> RangeDEF . ranges		5007152	0					
ANR	5007317	PtrMemberAccess	pcs -> params . def -> RangeDEF		5007152	0					
ANR	5007318	MemberAccess	pcs -> params . def		5007152	0					
ANR	5007319	PtrMemberAccess	pcs -> params		5007152	0					
ANR	5007320	Identifier	pcs		5007152	0					
ANR	5007321	Identifier	params		5007152	1					
ANR	5007322	Identifier	def		5007152	1					
ANR	5007323	Identifier	RangeDEF		5007152	1					
ANR	5007324	Identifier	ranges		5007152	1					
ANR	5007325	PrimaryExpression	0		5007152	1					
ANR	5007326	Argument	3		5007152	1					
ANR	5007327	PrimaryExpression	3		5007152	0					
ANR	5007328	Argument	pc		5007152	2					
ANR	5007329	Identifier	pc		5007152	0					
ANR	5007330	Argument	& scale_pc		5007152	3					
ANR	5007331	UnaryOperationExpression	& scale_pc		5007152	0					
ANR	5007332	UnaryOperator	&		5007152	0					
ANR	5007333	Identifier	scale_pc		5007152	1					
ANR	5007334	ReturnStatement	"return ( pcs_icc -> type -> concretize_color ) ( & scale_pc , pcs_icc , pconc , pgs , dev ) ;"	622:4:23750:23827	5007152	8	True				
ANR	5007335	CallExpression	"( pcs_icc -> type -> concretize_color ) ( & scale_pc , pcs_icc , pconc , pgs , dev )"		5007152	0					
ANR	5007336	Callee	pcs_icc -> type -> concretize_color		5007152	0					
ANR	5007337	PtrMemberAccess	pcs_icc -> type -> concretize_color		5007152	0					
ANR	5007338	PtrMemberAccess	pcs_icc -> type		5007152	0					
ANR	5007339	Identifier	pcs_icc		5007152	0					
ANR	5007340	Identifier	type		5007152	1					
ANR	5007341	Identifier	concretize_color		5007152	1					
ANR	5007342	ArgumentList	& scale_pc		5007152	1					
ANR	5007343	Argument	& scale_pc		5007152	0					
ANR	5007344	UnaryOperationExpression	& scale_pc		5007152	0					
ANR	5007345	UnaryOperator	&		5007152	0					
ANR	5007346	Identifier	scale_pc		5007152	1					
ANR	5007347	Argument	pcs_icc		5007152	1					
ANR	5007348	Identifier	pcs_icc		5007152	0					
ANR	5007349	Argument	pconc		5007152	2					
ANR	5007350	Identifier	pconc		5007152	0					
ANR	5007351	Argument	pgs		5007152	3					
ANR	5007352	Identifier	pgs		5007152	0					
ANR	5007353	Argument	dev		5007152	4					
ANR	5007354	Identifier	dev		5007152	0					
ANR	5007355	ReturnType	int		5007152	1					
ANR	5007356	Identifier	gx_concretize_CIEDEF		5007152	2					
ANR	5007357	ParameterList	"const gs_client_color * pc , const gs_color_space * pcs_in , frac * pconc , const gs_gstate * pgs , gx_device * dev"		5007152	3					
ANR	5007358	Parameter	const gs_client_color * pc	593:21:22470:22495	5007152	0	True				
ANR	5007359	ParameterType	const gs_client_color *		5007152	0					
ANR	5007360	Identifier	pc		5007152	1					
ANR	5007361	Parameter	const gs_color_space * pcs_in	593:49:22498:22526	5007152	1	True				
ANR	5007362	ParameterType	const gs_color_space *		5007152	0					
ANR	5007363	Identifier	pcs_in		5007152	1					
ANR	5007364	Parameter	frac * pconc	594:21:22550:22561	5007152	2	True				
ANR	5007365	ParameterType	frac *		5007152	0					
ANR	5007366	Identifier	pconc		5007152	1					
ANR	5007367	Parameter	const gs_gstate * pgs	594:35:22564:22584	5007152	3	True				
ANR	5007368	ParameterType	const gs_gstate *		5007152	0					
ANR	5007369	Identifier	pgs		5007152	1					
ANR	5007370	Parameter	gx_device * dev	594:58:22587:22600	5007152	4	True				
ANR	5007371	ParameterType	gx_device *		5007152	0					
ANR	5007372	Identifier	dev		5007152	1					
ANR	5007373	CFGEntryNode	ENTRY		5007152		True				
ANR	5007374	CFGExitNode	EXIT		5007152		True				
ANR	5007375	Symbol	* * pcs_icc		5007152						
ANR	5007376	Symbol	pcs_icc		5007152						
ANR	5007377	Symbol	code		5007152						
ANR	5007378	Symbol	* pc -> paint		5007152						
ANR	5007379	Symbol	* pgs		5007152						
ANR	5007380	Symbol	pconc		5007152						
ANR	5007381	Symbol	& pcs_icc		5007152						
ANR	5007382	Symbol	pcs_icc -> type		5007152						
ANR	5007383	Symbol	* pcs		5007152						
ANR	5007384	Symbol	gs_rethrow		5007152						
ANR	5007385	Symbol	& scale_pc		5007152						
ANR	5007386	Symbol	* pc -> paint . values		5007152						
ANR	5007387	Symbol	pcs -> params . def -> RangeDEF		5007152						
ANR	5007388	Symbol	pcs -> params . def -> RangeDEF . ranges		5007152						
ANR	5007389	Symbol	dev		5007152						
ANR	5007390	Symbol	pgs		5007152						
ANR	5007391	Symbol	* * pc		5007152						
ANR	5007392	Symbol	pgs -> memory		5007152						
ANR	5007393	Symbol	gx_ciedef_to_icc		5007152						
ANR	5007394	Symbol	scale_pc		5007152						
ANR	5007395	Symbol	* pgs -> memory		5007152						
ANR	5007396	Symbol	check_range		5007152						
ANR	5007397	Symbol	pcs_icc -> type -> concretize_color		5007152						
ANR	5007398	Symbol	pcs		5007152						
ANR	5007399	Symbol	pcs_in		5007152						
ANR	5007400	Symbol	NULL		5007152						
ANR	5007401	Symbol	pcs -> params . def		5007152						
ANR	5007402	Symbol	pcs -> params		5007152						
ANR	5007403	Symbol	* pcs_icc -> type		5007152						
ANR	5007404	Symbol	pc -> paint . values		5007152						
ANR	5007405	Symbol	pcs -> icc_equivalent		5007152						
ANR	5007406	Symbol	* pcs -> params . def		5007152						
ANR	5007407	Symbol	* * pgs		5007152						
ANR	5007408	Symbol	pc -> paint		5007152						
ANR	5007409	Symbol	pc		5007152						
ANR	5007410	Symbol	* * pcs		5007152						
ANR	5007411	Symbol	* pcs -> params		5007152						
ANR	5007412	Symbol	* pc		5007152						
ANR	5007413	Symbol	pgs -> memory -> stable_memory		5007152						
ANR	5007414	Symbol	* pcs_icc		5007152						
ANR	5007415	Function	gx_cieabc_to_icc	627:0:23908:25593							
ANR	5007416	FunctionDef	"gx_cieabc_to_icc (gs_color_space * * ppcs_icc , gs_color_space * pcs , bool * islab , gs_memory_t * memory)"		5007415	0					
ANR	5007417	CompoundStatement		630:0:24035:25593	5007415	0					
ANR	5007418	IdentifierDeclStatement	int code ;	631:4:24041:24049	5007415	0	True				
ANR	5007419	IdentifierDecl	code		5007415	0					
ANR	5007420	IdentifierDeclType	int		5007415	0					
ANR	5007421	Identifier	code		5007415	1					
ANR	5007422	IdentifierDeclStatement	gs_color_space * palt_cs = pcs -> base_space ;	632:4:24055:24096	5007415	1	True				
ANR	5007423	IdentifierDecl	* palt_cs = pcs -> base_space		5007415	0					
ANR	5007424	IdentifierDeclType	gs_color_space *		5007415	0					
ANR	5007425	Identifier	palt_cs		5007415	1					
ANR	5007426	AssignmentExpression	* palt_cs = pcs -> base_space		5007415	2		=			
ANR	5007427	Identifier	palt_cs		5007415	0					
ANR	5007428	PtrMemberAccess	pcs -> base_space		5007415	1					
ANR	5007429	Identifier	pcs		5007415	0					
ANR	5007430	Identifier	base_space		5007415	1					
ANR	5007431	IdentifierDeclStatement	gx_cie_vector_cache * abc_caches = & ( pcs -> params . abc -> caches . DecodeABC . caches [ 0 ] ) ;	633:4:24102:24182	5007415	2	True				
ANR	5007432	IdentifierDecl	* abc_caches = & ( pcs -> params . abc -> caches . DecodeABC . caches [ 0 ] )		5007415	0					
ANR	5007433	IdentifierDeclType	gx_cie_vector_cache *		5007415	0					
ANR	5007434	Identifier	abc_caches		5007415	1					
ANR	5007435	AssignmentExpression	* abc_caches = & ( pcs -> params . abc -> caches . DecodeABC . caches [ 0 ] )		5007415	2		=			
ANR	5007436	Identifier	abc_caches		5007415	0					
ANR	5007437	UnaryOperationExpression	& ( pcs -> params . abc -> caches . DecodeABC . caches [ 0 ] )		5007415	1					
ANR	5007438	UnaryOperator	&		5007415	0					
ANR	5007439	ArrayIndexing	pcs -> params . abc -> caches . DecodeABC . caches [ 0 ]		5007415	1					
ANR	5007440	MemberAccess	pcs -> params . abc -> caches . DecodeABC . caches		5007415	0					
ANR	5007441	MemberAccess	pcs -> params . abc -> caches . DecodeABC		5007415	0					
ANR	5007442	PtrMemberAccess	pcs -> params . abc -> caches		5007415	0					
ANR	5007443	MemberAccess	pcs -> params . abc		5007415	0					
ANR	5007444	PtrMemberAccess	pcs -> params		5007415	0					
ANR	5007445	Identifier	pcs		5007415	0					
ANR	5007446	Identifier	params		5007415	1					
ANR	5007447	Identifier	abc		5007415	1					
ANR	5007448	Identifier	caches		5007415	1					
ANR	5007449	Identifier	DecodeABC		5007415	1					
ANR	5007450	Identifier	caches		5007415	1					
ANR	5007451	PrimaryExpression	0		5007415	1					
ANR	5007452	IdentifierDeclStatement	gx_cie_scalar_cache * lmn_caches = & ( pcs -> params . abc -> common . caches . DecodeLMN [ 0 ] ) ;	634:4:24188:24268	5007415	3	True				
ANR	5007453	IdentifierDecl	* lmn_caches = & ( pcs -> params . abc -> common . caches . DecodeLMN [ 0 ] )		5007415	0					
ANR	5007454	IdentifierDeclType	gx_cie_scalar_cache *		5007415	0					
ANR	5007455	Identifier	lmn_caches		5007415	1					
ANR	5007456	AssignmentExpression	* lmn_caches = & ( pcs -> params . abc -> common . caches . DecodeLMN [ 0 ] )		5007415	2		=			
ANR	5007457	Identifier	lmn_caches		5007415	0					
ANR	5007458	UnaryOperationExpression	& ( pcs -> params . abc -> common . caches . DecodeLMN [ 0 ] )		5007415	1					
ANR	5007459	UnaryOperator	&		5007415	0					
ANR	5007460	ArrayIndexing	pcs -> params . abc -> common . caches . DecodeLMN [ 0 ]		5007415	1					
ANR	5007461	MemberAccess	pcs -> params . abc -> common . caches . DecodeLMN		5007415	0					
ANR	5007462	MemberAccess	pcs -> params . abc -> common . caches		5007415	0					
ANR	5007463	PtrMemberAccess	pcs -> params . abc -> common		5007415	0					
ANR	5007464	MemberAccess	pcs -> params . abc		5007415	0					
ANR	5007465	PtrMemberAccess	pcs -> params		5007415	0					
ANR	5007466	Identifier	pcs		5007415	0					
ANR	5007467	Identifier	params		5007415	1					
ANR	5007468	Identifier	abc		5007415	1					
ANR	5007469	Identifier	common		5007415	1					
ANR	5007470	Identifier	caches		5007415	1					
ANR	5007471	Identifier	DecodeLMN		5007415	1					
ANR	5007472	PrimaryExpression	0		5007415	1					
ANR	5007473	ExpressionStatement	"if_debug0m ( gs_debug_flag_icc , memory , ""[icc] Creating ICC profile from abc object"" )"	636:4:24275:24358	5007415	4	True				
ANR	5007474	CallExpression	"if_debug0m ( gs_debug_flag_icc , memory , ""[icc] Creating ICC profile from abc object"" )"		5007415	0					
ANR	5007475	Callee	if_debug0m		5007415	0					
ANR	5007476	Identifier	if_debug0m		5007415	0					
ANR	5007477	ArgumentList	gs_debug_flag_icc		5007415	1					
ANR	5007478	Argument	gs_debug_flag_icc		5007415	0					
ANR	5007479	Identifier	gs_debug_flag_icc		5007415	0					
ANR	5007480	Argument	memory		5007415	1					
ANR	5007481	Identifier	memory		5007415	0					
ANR	5007482	Argument	"""[icc] Creating ICC profile from abc object"""		5007415	2					
ANR	5007483	PrimaryExpression	"""[icc] Creating ICC profile from abc object"""		5007415	0					
ANR	5007484	ExpressionStatement	"code = gs_cspace_build_ICC ( ppcs_icc , NULL , memory )"	638:4:24407:24457	5007415	5	True				
ANR	5007485	AssignmentExpression	"code = gs_cspace_build_ICC ( ppcs_icc , NULL , memory )"		5007415	0		=			
ANR	5007486	Identifier	code		5007415	0					
ANR	5007487	CallExpression	"gs_cspace_build_ICC ( ppcs_icc , NULL , memory )"		5007415	1					
ANR	5007488	Callee	gs_cspace_build_ICC		5007415	0					
ANR	5007489	Identifier	gs_cspace_build_ICC		5007415	0					
ANR	5007490	ArgumentList	ppcs_icc		5007415	1					
ANR	5007491	Argument	ppcs_icc		5007415	0					
ANR	5007492	Identifier	ppcs_icc		5007415	0					
ANR	5007493	Argument	NULL		5007415	1					
ANR	5007494	Identifier	NULL		5007415	0					
ANR	5007495	Argument	memory		5007415	2					
ANR	5007496	Identifier	memory		5007415	0					
ANR	5007497	IfStatement	if ( code < 0 )		5007415	6					
ANR	5007498	Condition	code < 0	639:8:24467:24474	5007415	0	True				
ANR	5007499	RelationalExpression	code < 0		5007415	0		<			
ANR	5007500	Identifier	code		5007415	0					
ANR	5007501	PrimaryExpression	0		5007415	1					
ANR	5007502	ReturnStatement	"return gs_rethrow ( code , ""Failed to create ICC profile"" ) ;"	640:8:24485:24540	5007415	1	True				
ANR	5007503	CallExpression	"gs_rethrow ( code , ""Failed to create ICC profile"" )"		5007415	0					
ANR	5007504	Callee	gs_rethrow		5007415	0					
ANR	5007505	Identifier	gs_rethrow		5007415	0					
ANR	5007506	ArgumentList	code		5007415	1					
ANR	5007507	Argument	code		5007415	0					
ANR	5007508	Identifier	code		5007415	0					
ANR	5007509	Argument	"""Failed to create ICC profile"""		5007415	1					
ANR	5007510	PrimaryExpression	"""Failed to create ICC profile"""		5007415	0					
ANR	5007511	ExpressionStatement	( * ppcs_icc ) -> base_space = palt_cs	642:4:24616:24649	5007415	7	True				
ANR	5007512	AssignmentExpression	( * ppcs_icc ) -> base_space = palt_cs		5007415	0		=			
ANR	5007513	PtrMemberAccess	( * ppcs_icc ) -> base_space		5007415	0					
ANR	5007514	UnaryOperationExpression	* ppcs_icc		5007415	0					
ANR	5007515	UnaryOperator	*		5007415	0					
ANR	5007516	Identifier	ppcs_icc		5007415	1					
ANR	5007517	Identifier	base_space		5007415	1					
ANR	5007518	Identifier	palt_cs		5007415	1					
ANR	5007519	ExpressionStatement	rc_increment_cs ( palt_cs )	643:4:24655:24679	5007415	8	True				
ANR	5007520	CallExpression	rc_increment_cs ( palt_cs )		5007415	0					
ANR	5007521	Callee	rc_increment_cs		5007415	0					
ANR	5007522	Identifier	rc_increment_cs		5007415	0					
ANR	5007523	ArgumentList	palt_cs		5007415	1					
ANR	5007524	Argument	palt_cs		5007415	0					
ANR	5007525	Identifier	palt_cs		5007415	0					
ANR	5007526	ExpressionStatement	"( * ppcs_icc ) -> cmm_icc_profile_data = gsicc_profile_new ( NULL , memory , NULL , 0 )"	644:4:24685:24761	5007415	9	True				
ANR	5007527	AssignmentExpression	"( * ppcs_icc ) -> cmm_icc_profile_data = gsicc_profile_new ( NULL , memory , NULL , 0 )"		5007415	0		=			
ANR	5007528	PtrMemberAccess	( * ppcs_icc ) -> cmm_icc_profile_data		5007415	0					
ANR	5007529	UnaryOperationExpression	* ppcs_icc		5007415	0					
ANR	5007530	UnaryOperator	*		5007415	0					
ANR	5007531	Identifier	ppcs_icc		5007415	1					
ANR	5007532	Identifier	cmm_icc_profile_data		5007415	1					
ANR	5007533	CallExpression	"gsicc_profile_new ( NULL , memory , NULL , 0 )"		5007415	1					
ANR	5007534	Callee	gsicc_profile_new		5007415	0					
ANR	5007535	Identifier	gsicc_profile_new		5007415	0					
ANR	5007536	ArgumentList	NULL		5007415	1					
ANR	5007537	Argument	NULL		5007415	0					
ANR	5007538	Identifier	NULL		5007415	0					
ANR	5007539	Argument	memory		5007415	1					
ANR	5007540	Identifier	memory		5007415	0					
ANR	5007541	Argument	NULL		5007415	2					
ANR	5007542	Identifier	NULL		5007415	0					
ANR	5007543	Argument	0		5007415	3					
ANR	5007544	PrimaryExpression	0		5007415	0					
ANR	5007545	IfStatement	if ( ( * ppcs_icc ) -> cmm_icc_profile_data == NULL )		5007415	10					
ANR	5007546	Condition	( * ppcs_icc ) -> cmm_icc_profile_data == NULL	645:8:24771:24811	5007415	0	True				
ANR	5007547	EqualityExpression	( * ppcs_icc ) -> cmm_icc_profile_data == NULL		5007415	0		==			
ANR	5007548	PtrMemberAccess	( * ppcs_icc ) -> cmm_icc_profile_data		5007415	0					
ANR	5007549	UnaryOperationExpression	* ppcs_icc		5007415	0					
ANR	5007550	UnaryOperator	*		5007415	0					
ANR	5007551	Identifier	ppcs_icc		5007415	1					
ANR	5007552	Identifier	cmm_icc_profile_data		5007415	1					
ANR	5007553	Identifier	NULL		5007415	1					
ANR	5007554	ExpressionStatement	"gs_throw ( gs_error_VMerror , ""Failed to create ICC profile"" )"	646:8:24822:24880	5007415	1	True				
ANR	5007555	CallExpression	"gs_throw ( gs_error_VMerror , ""Failed to create ICC profile"" )"		5007415	0					
ANR	5007556	Callee	gs_throw		5007415	0					
ANR	5007557	Identifier	gs_throw		5007415	0					
ANR	5007558	ArgumentList	gs_error_VMerror		5007415	1					
ANR	5007559	Argument	gs_error_VMerror		5007415	0					
ANR	5007560	Identifier	gs_error_VMerror		5007415	0					
ANR	5007561	Argument	"""Failed to create ICC profile"""		5007415	1					
ANR	5007562	PrimaryExpression	"""Failed to create ICC profile"""		5007415	0					
ANR	5007563	ExpressionStatement	"code = gsicc_create_fromabc ( pcs , & ( ( * ppcs_icc ) -> cmm_icc_profile_data -> buffer ) , & ( ( * ppcs_icc ) -> cmm_icc_profile_data -> buffer_size ) , memory , abc_caches , lmn_caches , islab )"	647:4:24886:25094	5007415	11	True				
ANR	5007564	AssignmentExpression	"code = gsicc_create_fromabc ( pcs , & ( ( * ppcs_icc ) -> cmm_icc_profile_data -> buffer ) , & ( ( * ppcs_icc ) -> cmm_icc_profile_data -> buffer_size ) , memory , abc_caches , lmn_caches , islab )"		5007415	0		=			
ANR	5007565	Identifier	code		5007415	0					
ANR	5007566	CallExpression	"gsicc_create_fromabc ( pcs , & ( ( * ppcs_icc ) -> cmm_icc_profile_data -> buffer ) , & ( ( * ppcs_icc ) -> cmm_icc_profile_data -> buffer_size ) , memory , abc_caches , lmn_caches , islab )"		5007415	1					
ANR	5007567	Callee	gsicc_create_fromabc		5007415	0					
ANR	5007568	Identifier	gsicc_create_fromabc		5007415	0					
ANR	5007569	ArgumentList	pcs		5007415	1					
ANR	5007570	Argument	pcs		5007415	0					
ANR	5007571	Identifier	pcs		5007415	0					
ANR	5007572	Argument	& ( ( * ppcs_icc ) -> cmm_icc_profile_data -> buffer )		5007415	1					
ANR	5007573	UnaryOperationExpression	& ( ( * ppcs_icc ) -> cmm_icc_profile_data -> buffer )		5007415	0					
ANR	5007574	UnaryOperator	&		5007415	0					
ANR	5007575	PtrMemberAccess	( * ppcs_icc ) -> cmm_icc_profile_data -> buffer		5007415	1					
ANR	5007576	PtrMemberAccess	( * ppcs_icc ) -> cmm_icc_profile_data		5007415	0					
ANR	5007577	UnaryOperationExpression	* ppcs_icc		5007415	0					
ANR	5007578	UnaryOperator	*		5007415	0					
ANR	5007579	Identifier	ppcs_icc		5007415	1					
ANR	5007580	Identifier	cmm_icc_profile_data		5007415	1					
ANR	5007581	Identifier	buffer		5007415	1					
ANR	5007582	Argument	& ( ( * ppcs_icc ) -> cmm_icc_profile_data -> buffer_size )		5007415	2					
ANR	5007583	UnaryOperationExpression	& ( ( * ppcs_icc ) -> cmm_icc_profile_data -> buffer_size )		5007415	0					
ANR	5007584	UnaryOperator	&		5007415	0					
ANR	5007585	PtrMemberAccess	( * ppcs_icc ) -> cmm_icc_profile_data -> buffer_size		5007415	1					
ANR	5007586	PtrMemberAccess	( * ppcs_icc ) -> cmm_icc_profile_data		5007415	0					
ANR	5007587	UnaryOperationExpression	* ppcs_icc		5007415	0					
ANR	5007588	UnaryOperator	*		5007415	0					
ANR	5007589	Identifier	ppcs_icc		5007415	1					
ANR	5007590	Identifier	cmm_icc_profile_data		5007415	1					
ANR	5007591	Identifier	buffer_size		5007415	1					
ANR	5007592	Argument	memory		5007415	3					
ANR	5007593	Identifier	memory		5007415	0					
ANR	5007594	Argument	abc_caches		5007415	4					
ANR	5007595	Identifier	abc_caches		5007415	0					
ANR	5007596	Argument	lmn_caches		5007415	5					
ANR	5007597	Identifier	lmn_caches		5007415	0					
ANR	5007598	Argument	islab		5007415	6					
ANR	5007599	Identifier	islab		5007415	0					
ANR	5007600	IfStatement	if ( code < 0 )		5007415	12					
ANR	5007601	Condition	code < 0	650:8:25104:25111	5007415	0	True				
ANR	5007602	RelationalExpression	code < 0		5007415	0		<			
ANR	5007603	Identifier	code		5007415	0					
ANR	5007604	PrimaryExpression	0		5007415	1					
ANR	5007605	ReturnStatement	"return gs_rethrow ( code , ""Failed to build ICC profile from CIEABC"" ) ;"	651:8:25122:25188	5007415	1	True				
ANR	5007606	CallExpression	"gs_rethrow ( code , ""Failed to build ICC profile from CIEABC"" )"		5007415	0					
ANR	5007607	Callee	gs_rethrow		5007415	0					
ANR	5007608	Identifier	gs_rethrow		5007415	0					
ANR	5007609	ArgumentList	code		5007415	1					
ANR	5007610	Argument	code		5007415	0					
ANR	5007611	Identifier	code		5007415	0					
ANR	5007612	Argument	"""Failed to build ICC profile from CIEABC"""		5007415	1					
ANR	5007613	PrimaryExpression	"""Failed to build ICC profile from CIEABC"""		5007415	0					
ANR	5007614	ExpressionStatement	code = gsicc_init_profile_info ( ( * ppcs_icc ) -> cmm_icc_profile_data )	652:4:25194:25259	5007415	13	True				
ANR	5007615	AssignmentExpression	code = gsicc_init_profile_info ( ( * ppcs_icc ) -> cmm_icc_profile_data )		5007415	0		=			
ANR	5007616	Identifier	code		5007415	0					
ANR	5007617	CallExpression	gsicc_init_profile_info ( ( * ppcs_icc ) -> cmm_icc_profile_data )		5007415	1					
ANR	5007618	Callee	gsicc_init_profile_info		5007415	0					
ANR	5007619	Identifier	gsicc_init_profile_info		5007415	0					
ANR	5007620	ArgumentList	( * ppcs_icc ) -> cmm_icc_profile_data		5007415	1					
ANR	5007621	Argument	( * ppcs_icc ) -> cmm_icc_profile_data		5007415	0					
ANR	5007622	PtrMemberAccess	( * ppcs_icc ) -> cmm_icc_profile_data		5007415	0					
ANR	5007623	UnaryOperationExpression	* ppcs_icc		5007415	0					
ANR	5007624	UnaryOperator	*		5007415	0					
ANR	5007625	Identifier	ppcs_icc		5007415	1					
ANR	5007626	Identifier	cmm_icc_profile_data		5007415	1					
ANR	5007627	IfStatement	if ( code < 0 )		5007415	14					
ANR	5007628	Condition	code < 0	653:8:25269:25276	5007415	0	True				
ANR	5007629	RelationalExpression	code < 0		5007415	0		<			
ANR	5007630	Identifier	code		5007415	0					
ANR	5007631	PrimaryExpression	0		5007415	1					
ANR	5007632	ReturnStatement	"return gs_rethrow ( code , ""Failed to build ICC profile from CIEDEF"" ) ;"	654:8:25287:25353	5007415	1	True				
ANR	5007633	CallExpression	"gs_rethrow ( code , ""Failed to build ICC profile from CIEDEF"" )"		5007415	0					
ANR	5007634	Callee	gs_rethrow		5007415	0					
ANR	5007635	Identifier	gs_rethrow		5007415	0					
ANR	5007636	ArgumentList	code		5007415	1					
ANR	5007637	Argument	code		5007415	0					
ANR	5007638	Identifier	code		5007415	0					
ANR	5007639	Argument	"""Failed to build ICC profile from CIEDEF"""		5007415	1					
ANR	5007640	PrimaryExpression	"""Failed to build ICC profile from CIEDEF"""		5007415	0					
ANR	5007641	ExpressionStatement	( * ppcs_icc ) -> cmm_icc_profile_data -> default_match = CIE_ABC	655:4:25359:25417	5007415	15	True				
ANR	5007642	AssignmentExpression	( * ppcs_icc ) -> cmm_icc_profile_data -> default_match = CIE_ABC		5007415	0		=			
ANR	5007643	PtrMemberAccess	( * ppcs_icc ) -> cmm_icc_profile_data -> default_match		5007415	0					
ANR	5007644	PtrMemberAccess	( * ppcs_icc ) -> cmm_icc_profile_data		5007415	0					
ANR	5007645	UnaryOperationExpression	* ppcs_icc		5007415	0					
ANR	5007646	UnaryOperator	*		5007415	0					
ANR	5007647	Identifier	ppcs_icc		5007415	1					
ANR	5007648	Identifier	cmm_icc_profile_data		5007415	1					
ANR	5007649	Identifier	default_match		5007415	1					
ANR	5007650	Identifier	CIE_ABC		5007415	1					
ANR	5007651	ExpressionStatement	pcs -> icc_equivalent = * ppcs_icc	657:4:25478:25509	5007415	16	True				
ANR	5007652	AssignmentExpression	pcs -> icc_equivalent = * ppcs_icc		5007415	0		=			
ANR	5007653	PtrMemberAccess	pcs -> icc_equivalent		5007415	0					
ANR	5007654	Identifier	pcs		5007415	0					
ANR	5007655	Identifier	icc_equivalent		5007415	1					
ANR	5007656	UnaryOperationExpression	* ppcs_icc		5007415	1					
ANR	5007657	UnaryOperator	*		5007415	0					
ANR	5007658	Identifier	ppcs_icc		5007415	1					
ANR	5007659	ExpressionStatement	pcs -> icc_equivalent -> cmm_icc_profile_data -> data_cs = gsRGB	658:4:25515:25573	5007415	17	True				
ANR	5007660	AssignmentExpression	pcs -> icc_equivalent -> cmm_icc_profile_data -> data_cs = gsRGB		5007415	0		=			
ANR	5007661	PtrMemberAccess	pcs -> icc_equivalent -> cmm_icc_profile_data -> data_cs		5007415	0					
ANR	5007662	PtrMemberAccess	pcs -> icc_equivalent -> cmm_icc_profile_data		5007415	0					
ANR	5007663	PtrMemberAccess	pcs -> icc_equivalent		5007415	0					
ANR	5007664	Identifier	pcs		5007415	0					
ANR	5007665	Identifier	icc_equivalent		5007415	1					
ANR	5007666	Identifier	cmm_icc_profile_data		5007415	1					
ANR	5007667	Identifier	data_cs		5007415	1					
ANR	5007668	Identifier	gsRGB		5007415	1					
ANR	5007669	ReturnStatement	return 0 ;	659:4:25579:25587	5007415	18	True				
ANR	5007670	PrimaryExpression	0		5007415	0					
ANR	5007671	ReturnType	static int		5007415	1					
ANR	5007672	Identifier	gx_cieabc_to_icc		5007415	2					
ANR	5007673	ParameterList	"gs_color_space * * ppcs_icc , gs_color_space * pcs , bool * islab , gs_memory_t * memory"		5007415	3					
ANR	5007674	Parameter	gs_color_space * * ppcs_icc	628:17:23936:23960	5007415	0	True				
ANR	5007675	ParameterType	gs_color_space * *		5007415	0					
ANR	5007676	Identifier	ppcs_icc		5007415	1					
ANR	5007677	Parameter	gs_color_space * pcs	628:44:23963:23981	5007415	1	True				
ANR	5007678	ParameterType	gs_color_space *		5007415	0					
ANR	5007679	Identifier	pcs		5007415	1					
ANR	5007680	Parameter	bool * islab	628:65:23984:23994	5007415	2	True				
ANR	5007681	ParameterType	bool *		5007415	0					
ANR	5007682	Identifier	islab		5007415	1					
ANR	5007683	Parameter	gs_memory_t * memory	629:17:24014:24032	5007415	3	True				
ANR	5007684	ParameterType	gs_memory_t *		5007415	0					
ANR	5007685	Identifier	memory		5007415	1					
ANR	5007686	CFGEntryNode	ENTRY		5007415		True				
ANR	5007687	CFGExitNode	EXIT		5007415		True				
ANR	5007688	Symbol	& ( * ppcs_icc ) -> cmm_icc_profile_data -> buffer		5007415						
ANR	5007689	Symbol	pcs -> params . abc -> common . caches		5007415						
ANR	5007690	Symbol	memory		5007415						
ANR	5007691	Symbol	code		5007415						
ANR	5007692	Symbol	pcs -> icc_equivalent -> cmm_icc_profile_data -> data_cs		5007415						
ANR	5007693	Symbol	* pcs		5007415						
ANR	5007694	Symbol	pcs -> params . abc -> common		5007415						
ANR	5007695	Symbol	gs_rethrow		5007415						
ANR	5007696	Symbol	* ( * ppcs_icc ) -> cmm_icc_profile_data		5007415						
ANR	5007697	Symbol	pcs -> params . abc -> caches . DecodeABC		5007415						
ANR	5007698	Symbol	pcs -> params . abc		5007415						
ANR	5007699	Symbol	pcs -> params . abc -> common . caches . DecodeLMN		5007415						
ANR	5007700	Symbol	* pcs -> params . abc		5007415						
ANR	5007701	Symbol	abc_caches		5007415						
ANR	5007702	Symbol	ppcs_icc		5007415						
ANR	5007703	Symbol	* * * ppcs_icc		5007415						
ANR	5007704	Symbol	pcs -> icc_equivalent -> cmm_icc_profile_data		5007415						
ANR	5007705	Symbol	* pcs -> icc_equivalent -> cmm_icc_profile_data		5007415						
ANR	5007706	Symbol	gs_debug_flag_icc		5007415						
ANR	5007707	Symbol	islab		5007415						
ANR	5007708	Symbol	palt_cs		5007415						
ANR	5007709	Symbol	* * * pcs		5007415						
ANR	5007710	Symbol	gsicc_create_fromabc		5007415						
ANR	5007711	Symbol	pcs		5007415						
ANR	5007712	Symbol	gsRGB		5007415						
ANR	5007713	Symbol	pcs -> params . abc -> caches . DecodeABC . caches		5007415						
ANR	5007714	Symbol	* * ppcs_icc		5007415						
ANR	5007715	Symbol	NULL		5007415						
ANR	5007716	Symbol	lmn_caches		5007415						
ANR	5007717	Symbol	* pcs -> icc_equivalent		5007415						
ANR	5007718	Symbol	pcs -> params		5007415						
ANR	5007719	Symbol	CIE_ABC		5007415						
ANR	5007720	Symbol	( * ppcs_icc ) -> cmm_icc_profile_data -> default_match		5007415						
ANR	5007721	Symbol	pcs -> icc_equivalent		5007415						
ANR	5007722	Symbol	pcs -> params . abc -> caches		5007415						
ANR	5007723	Symbol	( * ppcs_icc ) -> cmm_icc_profile_data		5007415						
ANR	5007724	Symbol	gs_error_VMerror		5007415						
ANR	5007725	Symbol	pcs -> base_space		5007415						
ANR	5007726	Symbol	* pcs -> params		5007415						
ANR	5007727	Symbol	* * pcs		5007415						
ANR	5007728	Symbol	gsicc_init_profile_info		5007415						
ANR	5007729	Symbol	gs_cspace_build_ICC		5007415						
ANR	5007730	Symbol	* ppcs_icc		5007415						
ANR	5007731	Symbol	( * ppcs_icc ) -> base_space		5007415						
ANR	5007732	Symbol	& ( * ppcs_icc ) -> cmm_icc_profile_data -> buffer_size		5007415						
ANR	5007733	Symbol	gsicc_profile_new		5007415						
ANR	5007734	Symbol	* * pcs -> icc_equivalent		5007415						
ANR	5007735	Function	gx_remap_CIEABC	665:0:25723:27388							
ANR	5007736	FunctionDef	"gx_remap_CIEABC (const gs_client_color * pc , const gs_color_space * pcs_in , gx_device_color * pdc , const gs_gstate * pgs , gx_device * dev , gs_color_select_t select)"		5007735	0					
ANR	5007737	CompoundStatement		669:0:25915:27388	5007735	0					
ANR	5007738	IdentifierDeclStatement	gs_color_space * pcs_icc ;	670:4:25921:25944	5007735	0	True				
ANR	5007739	IdentifierDecl	* pcs_icc		5007735	0					
ANR	5007740	IdentifierDeclType	gs_color_space *		5007735	0					
ANR	5007741	Identifier	pcs_icc		5007735	1					
ANR	5007742	IdentifierDeclStatement	gs_client_color scale_pc ;	671:4:25950:25974	5007735	1	True				
ANR	5007743	IdentifierDecl	scale_pc		5007735	0					
ANR	5007744	IdentifierDeclType	gs_client_color		5007735	0					
ANR	5007745	Identifier	scale_pc		5007735	1					
ANR	5007746	IdentifierDeclStatement	bool islab ;	672:4:25980:25990	5007735	2	True				
ANR	5007747	IdentifierDecl	islab		5007735	0					
ANR	5007748	IdentifierDeclType	bool		5007735	0					
ANR	5007749	Identifier	islab		5007735	1					
ANR	5007750	IdentifierDeclStatement	"int i , code ;"	673:4:25996:26007	5007735	3	True				
ANR	5007751	IdentifierDecl	i		5007735	0					
ANR	5007752	IdentifierDeclType	int		5007735	0					
ANR	5007753	Identifier	i		5007735	1					
ANR	5007754	IdentifierDecl	code		5007735	1					
ANR	5007755	IdentifierDeclType	int		5007735	0					
ANR	5007756	Identifier	code		5007735	1					
ANR	5007757	IdentifierDeclStatement	gs_color_space * pcs = ( gs_color_space * ) pcs_in ;	674:4:26013:26060	5007735	4	True				
ANR	5007758	IdentifierDecl	* pcs = ( gs_color_space * ) pcs_in		5007735	0					
ANR	5007759	IdentifierDeclType	gs_color_space *		5007735	0					
ANR	5007760	Identifier	pcs		5007735	1					
ANR	5007761	AssignmentExpression	* pcs = ( gs_color_space * ) pcs_in		5007735	2		=			
ANR	5007762	Identifier	pcs		5007735	0					
ANR	5007763	CastExpression	( gs_color_space * ) pcs_in		5007735	1					
ANR	5007764	CastTarget	gs_color_space *		5007735	0					
ANR	5007765	Identifier	pcs_in		5007735	1					
ANR	5007766	ExpressionStatement	"if_debug3m ( 'c' , pgs -> memory , ""[c]remap CIEABC [%g %g %g]\\n"" , pc -> paint . values [ 0 ] , pc -> paint . values [ 1 ] , pc -> paint . values [ 2 ] )"	676:4:26067:26220	5007735	5	True				
ANR	5007767	CallExpression	"if_debug3m ( 'c' , pgs -> memory , ""[c]remap CIEABC [%g %g %g]\\n"" , pc -> paint . values [ 0 ] , pc -> paint . values [ 1 ] , pc -> paint . values [ 2 ] )"		5007735	0					
ANR	5007768	Callee	if_debug3m		5007735	0					
ANR	5007769	Identifier	if_debug3m		5007735	0					
ANR	5007770	ArgumentList	'c'		5007735	1					
ANR	5007771	Argument	'c'		5007735	0					
ANR	5007772	PrimaryExpression	'c'		5007735	0					
ANR	5007773	Argument	pgs -> memory		5007735	1					
ANR	5007774	PtrMemberAccess	pgs -> memory		5007735	0					
ANR	5007775	Identifier	pgs		5007735	0					
ANR	5007776	Identifier	memory		5007735	1					
ANR	5007777	Argument	"""[c]remap CIEABC [%g %g %g]\\n"""		5007735	2					
ANR	5007778	PrimaryExpression	"""[c]remap CIEABC [%g %g %g]\\n"""		5007735	0					
ANR	5007779	Argument	pc -> paint . values [ 0 ]		5007735	3					
ANR	5007780	ArrayIndexing	pc -> paint . values [ 0 ]		5007735	0					
ANR	5007781	MemberAccess	pc -> paint . values		5007735	0					
ANR	5007782	PtrMemberAccess	pc -> paint		5007735	0					
ANR	5007783	Identifier	pc		5007735	0					
ANR	5007784	Identifier	paint		5007735	1					
ANR	5007785	Identifier	values		5007735	1					
ANR	5007786	PrimaryExpression	0		5007735	1					
ANR	5007787	Argument	pc -> paint . values [ 1 ]		5007735	4					
ANR	5007788	ArrayIndexing	pc -> paint . values [ 1 ]		5007735	0					
ANR	5007789	MemberAccess	pc -> paint . values		5007735	0					
ANR	5007790	PtrMemberAccess	pc -> paint		5007735	0					
ANR	5007791	Identifier	pc		5007735	0					
ANR	5007792	Identifier	paint		5007735	1					
ANR	5007793	Identifier	values		5007735	1					
ANR	5007794	PrimaryExpression	1		5007735	1					
ANR	5007795	Argument	pc -> paint . values [ 2 ]		5007735	5					
ANR	5007796	ArrayIndexing	pc -> paint . values [ 2 ]		5007735	0					
ANR	5007797	MemberAccess	pc -> paint . values		5007735	0					
ANR	5007798	PtrMemberAccess	pc -> paint		5007735	0					
ANR	5007799	Identifier	pc		5007735	0					
ANR	5007800	Identifier	paint		5007735	1					
ANR	5007801	Identifier	values		5007735	1					
ANR	5007802	PrimaryExpression	2		5007735	1					
ANR	5007803	IfStatement	if ( pcs -> icc_equivalent == NULL )		5007735	6					
ANR	5007804	Condition	pcs -> icc_equivalent == NULL	682:8:26389:26415	5007735	0	True				
ANR	5007805	EqualityExpression	pcs -> icc_equivalent == NULL		5007735	0		==			
ANR	5007806	PtrMemberAccess	pcs -> icc_equivalent		5007735	0					
ANR	5007807	Identifier	pcs		5007735	0					
ANR	5007808	Identifier	icc_equivalent		5007735	1					
ANR	5007809	Identifier	NULL		5007735	1					
ANR	5007810	CompoundStatement		14:37:502:502	5007735	1					
ANR	5007811	ExpressionStatement	"code = gx_cieabc_to_icc ( & pcs_icc , pcs , & islab , pgs -> memory -> stable_memory )"	683:8:26428:26502	5007735	0	True				
ANR	5007812	AssignmentExpression	"code = gx_cieabc_to_icc ( & pcs_icc , pcs , & islab , pgs -> memory -> stable_memory )"		5007735	0		=			
ANR	5007813	Identifier	code		5007735	0					
ANR	5007814	CallExpression	"gx_cieabc_to_icc ( & pcs_icc , pcs , & islab , pgs -> memory -> stable_memory )"		5007735	1					
ANR	5007815	Callee	gx_cieabc_to_icc		5007735	0					
ANR	5007816	Identifier	gx_cieabc_to_icc		5007735	0					
ANR	5007817	ArgumentList	& pcs_icc		5007735	1					
ANR	5007818	Argument	& pcs_icc		5007735	0					
ANR	5007819	UnaryOperationExpression	& pcs_icc		5007735	0					
ANR	5007820	UnaryOperator	&		5007735	0					
ANR	5007821	Identifier	pcs_icc		5007735	1					
ANR	5007822	Argument	pcs		5007735	1					
ANR	5007823	Identifier	pcs		5007735	0					
ANR	5007824	Argument	& islab		5007735	2					
ANR	5007825	UnaryOperationExpression	& islab		5007735	0					
ANR	5007826	UnaryOperator	&		5007735	0					
ANR	5007827	Identifier	islab		5007735	1					
ANR	5007828	Argument	pgs -> memory -> stable_memory		5007735	3					
ANR	5007829	PtrMemberAccess	pgs -> memory -> stable_memory		5007735	0					
ANR	5007830	PtrMemberAccess	pgs -> memory		5007735	0					
ANR	5007831	Identifier	pgs		5007735	0					
ANR	5007832	Identifier	memory		5007735	1					
ANR	5007833	Identifier	stable_memory		5007735	1					
ANR	5007834	IfStatement	if ( code < 0 )		5007735	1					
ANR	5007835	Condition	code < 0	684:12:26516:26523	5007735	0	True				
ANR	5007836	RelationalExpression	code < 0		5007735	0		<			
ANR	5007837	Identifier	code		5007735	0					
ANR	5007838	PrimaryExpression	0		5007735	1					
ANR	5007839	ReturnStatement	"return gs_rethrow ( code , ""Failed to create ICC profile from CIEABC"" ) ;"	685:12:26538:26605	5007735	1	True				
ANR	5007840	CallExpression	"gs_rethrow ( code , ""Failed to create ICC profile from CIEABC"" )"		5007735	0					
ANR	5007841	Callee	gs_rethrow		5007735	0					
ANR	5007842	Identifier	gs_rethrow		5007735	0					
ANR	5007843	ArgumentList	code		5007735	1					
ANR	5007844	Argument	code		5007735	0					
ANR	5007845	Identifier	code		5007735	0					
ANR	5007846	Argument	"""Failed to create ICC profile from CIEABC"""		5007735	1					
ANR	5007847	PrimaryExpression	"""Failed to create ICC profile from CIEABC"""		5007735	0					
ANR	5007848	ElseStatement	else		5007735	0					
ANR	5007849	CompoundStatement		18:11:702:702	5007735	0					
ANR	5007850	ExpressionStatement	pcs_icc = pcs -> icc_equivalent	687:8:26628:26657	5007735	0	True				
ANR	5007851	AssignmentExpression	pcs_icc = pcs -> icc_equivalent		5007735	0		=			
ANR	5007852	Identifier	pcs_icc		5007735	0					
ANR	5007853	PtrMemberAccess	pcs -> icc_equivalent		5007735	1					
ANR	5007854	Identifier	pcs		5007735	0					
ANR	5007855	Identifier	icc_equivalent		5007735	1					
ANR	5007856	IfStatement	"if ( check_range ( & ( pcs -> params . abc -> RangeABC . ranges [ 0 ] ) , 3 ) )"		5007735	7					
ANR	5007857	Condition	"check_range ( & ( pcs -> params . abc -> RangeABC . ranges [ 0 ] ) , 3 )"	691:8:26792:26845	5007735	0	True				
ANR	5007858	CallExpression	"check_range ( & ( pcs -> params . abc -> RangeABC . ranges [ 0 ] ) , 3 )"		5007735	0					
ANR	5007859	Callee	check_range		5007735	0					
ANR	5007860	Identifier	check_range		5007735	0					
ANR	5007861	ArgumentList	& ( pcs -> params . abc -> RangeABC . ranges [ 0 ] )		5007735	1					
ANR	5007862	Argument	& ( pcs -> params . abc -> RangeABC . ranges [ 0 ] )		5007735	0					
ANR	5007863	UnaryOperationExpression	& ( pcs -> params . abc -> RangeABC . ranges [ 0 ] )		5007735	0					
ANR	5007864	UnaryOperator	&		5007735	0					
ANR	5007865	ArrayIndexing	pcs -> params . abc -> RangeABC . ranges [ 0 ]		5007735	1					
ANR	5007866	MemberAccess	pcs -> params . abc -> RangeABC . ranges		5007735	0					
ANR	5007867	PtrMemberAccess	pcs -> params . abc -> RangeABC		5007735	0					
ANR	5007868	MemberAccess	pcs -> params . abc		5007735	0					
ANR	5007869	PtrMemberAccess	pcs -> params		5007735	0					
ANR	5007870	Identifier	pcs		5007735	0					
ANR	5007871	Identifier	params		5007735	1					
ANR	5007872	Identifier	abc		5007735	1					
ANR	5007873	Identifier	RangeABC		5007735	1					
ANR	5007874	Identifier	ranges		5007735	1					
ANR	5007875	PrimaryExpression	0		5007735	1					
ANR	5007876	Argument	3		5007735	1					
ANR	5007877	PrimaryExpression	3		5007735	0					
ANR	5007878	CompoundStatement		23:64:932:932	5007735	1					
ANR	5007879	ReturnStatement	"return ( pcs_icc -> type -> remap_color ) ( pc , pcs_icc , pdc , pgs , dev , select ) ;"	692:8:26858:26924	5007735	0	True				
ANR	5007880	CallExpression	"( pcs_icc -> type -> remap_color ) ( pc , pcs_icc , pdc , pgs , dev , select )"		5007735	0					
ANR	5007881	Callee	pcs_icc -> type -> remap_color		5007735	0					
ANR	5007882	PtrMemberAccess	pcs_icc -> type -> remap_color		5007735	0					
ANR	5007883	PtrMemberAccess	pcs_icc -> type		5007735	0					
ANR	5007884	Identifier	pcs_icc		5007735	0					
ANR	5007885	Identifier	type		5007735	1					
ANR	5007886	Identifier	remap_color		5007735	1					
ANR	5007887	ArgumentList	pc		5007735	1					
ANR	5007888	Argument	pc		5007735	0					
ANR	5007889	Identifier	pc		5007735	0					
ANR	5007890	Argument	pcs_icc		5007735	1					
ANR	5007891	Identifier	pcs_icc		5007735	0					
ANR	5007892	Argument	pdc		5007735	2					
ANR	5007893	Identifier	pdc		5007735	0					
ANR	5007894	Argument	pgs		5007735	3					
ANR	5007895	Identifier	pgs		5007735	0					
ANR	5007896	Argument	dev		5007735	4					
ANR	5007897	Identifier	dev		5007735	0					
ANR	5007898	Argument	select		5007735	5					
ANR	5007899	Identifier	select		5007735	0					
ANR	5007900	ExpressionStatement	"rescale_input_color ( & ( pcs -> params . abc -> RangeABC . ranges [ 0 ] ) , 3 , pc , & scale_pc )"	695:4:26973:27050	5007735	8	True				
ANR	5007901	CallExpression	"rescale_input_color ( & ( pcs -> params . abc -> RangeABC . ranges [ 0 ] ) , 3 , pc , & scale_pc )"		5007735	0					
ANR	5007902	Callee	rescale_input_color		5007735	0					
ANR	5007903	Identifier	rescale_input_color		5007735	0					
ANR	5007904	ArgumentList	& ( pcs -> params . abc -> RangeABC . ranges [ 0 ] )		5007735	1					
ANR	5007905	Argument	& ( pcs -> params . abc -> RangeABC . ranges [ 0 ] )		5007735	0					
ANR	5007906	UnaryOperationExpression	& ( pcs -> params . abc -> RangeABC . ranges [ 0 ] )		5007735	0					
ANR	5007907	UnaryOperator	&		5007735	0					
ANR	5007908	ArrayIndexing	pcs -> params . abc -> RangeABC . ranges [ 0 ]		5007735	1					
ANR	5007909	MemberAccess	pcs -> params . abc -> RangeABC . ranges		5007735	0					
ANR	5007910	PtrMemberAccess	pcs -> params . abc -> RangeABC		5007735	0					
ANR	5007911	MemberAccess	pcs -> params . abc		5007735	0					
ANR	5007912	PtrMemberAccess	pcs -> params		5007735	0					
ANR	5007913	Identifier	pcs		5007735	0					
ANR	5007914	Identifier	params		5007735	1					
ANR	5007915	Identifier	abc		5007735	1					
ANR	5007916	Identifier	RangeABC		5007735	1					
ANR	5007917	Identifier	ranges		5007735	1					
ANR	5007918	PrimaryExpression	0		5007735	1					
ANR	5007919	Argument	3		5007735	1					
ANR	5007920	PrimaryExpression	3		5007735	0					
ANR	5007921	Argument	pc		5007735	2					
ANR	5007922	Identifier	pc		5007735	0					
ANR	5007923	Argument	& scale_pc		5007735	3					
ANR	5007924	UnaryOperationExpression	& scale_pc		5007735	0					
ANR	5007925	UnaryOperator	&		5007735	0					
ANR	5007926	Identifier	scale_pc		5007735	1					
ANR	5007927	ExpressionStatement	"code = ( pcs_icc -> type -> remap_color ) ( & scale_pc , pcs_icc , pdc , pgs , dev , select )"	697:4:27084:27157	5007735	9	True				
ANR	5007928	AssignmentExpression	"code = ( pcs_icc -> type -> remap_color ) ( & scale_pc , pcs_icc , pdc , pgs , dev , select )"		5007735	0		=			
ANR	5007929	Identifier	code		5007735	0					
ANR	5007930	CallExpression	"( pcs_icc -> type -> remap_color ) ( & scale_pc , pcs_icc , pdc , pgs , dev , select )"		5007735	1					
ANR	5007931	Callee	pcs_icc -> type -> remap_color		5007735	0					
ANR	5007932	PtrMemberAccess	pcs_icc -> type -> remap_color		5007735	0					
ANR	5007933	PtrMemberAccess	pcs_icc -> type		5007735	0					
ANR	5007934	Identifier	pcs_icc		5007735	0					
ANR	5007935	Identifier	type		5007735	1					
ANR	5007936	Identifier	remap_color		5007735	1					
ANR	5007937	ArgumentList	& scale_pc		5007735	1					
ANR	5007938	Argument	& scale_pc		5007735	0					
ANR	5007939	UnaryOperationExpression	& scale_pc		5007735	0					
ANR	5007940	UnaryOperator	&		5007735	0					
ANR	5007941	Identifier	scale_pc		5007735	1					
ANR	5007942	Argument	pcs_icc		5007735	1					
ANR	5007943	Identifier	pcs_icc		5007735	0					
ANR	5007944	Argument	pdc		5007735	2					
ANR	5007945	Identifier	pdc		5007735	0					
ANR	5007946	Argument	pgs		5007735	3					
ANR	5007947	Identifier	pgs		5007735	0					
ANR	5007948	Argument	dev		5007735	4					
ANR	5007949	Identifier	dev		5007735	0					
ANR	5007950	Argument	select		5007735	5					
ANR	5007951	Identifier	select		5007735	0					
ANR	5007952	ForStatement	for ( i = 0 ; i < 3 ; i ++ )		5007735	10					
ANR	5007953	ForInit	i = 0 ;	699:9:27235:27240	5007735	0	True				
ANR	5007954	AssignmentExpression	i = 0		5007735	0		=			
ANR	5007955	Identifier	i		5007735	0					
ANR	5007956	PrimaryExpression	0		5007735	1					
ANR	5007957	Condition	i < 3	699:16:27242:27246	5007735	1	True				
ANR	5007958	RelationalExpression	i < 3		5007735	0		<			
ANR	5007959	Identifier	i		5007735	0					
ANR	5007960	PrimaryExpression	3		5007735	1					
ANR	5007961	PostIncDecOperationExpression	i ++	699:23:27249:27251	5007735	2	True				
ANR	5007962	Identifier	i		5007735	0					
ANR	5007963	IncDec	++		5007735	1					
ANR	5007964	ExpressionStatement	pdc -> ccolor . paint . values [ i ] = pc -> paint . values [ i ]	700:8:27262:27311	5007735	3	True				
ANR	5007965	AssignmentExpression	pdc -> ccolor . paint . values [ i ] = pc -> paint . values [ i ]		5007735	0		=			
ANR	5007966	ArrayIndexing	pdc -> ccolor . paint . values [ i ]		5007735	0					
ANR	5007967	MemberAccess	pdc -> ccolor . paint . values		5007735	0					
ANR	5007968	MemberAccess	pdc -> ccolor . paint		5007735	0					
ANR	5007969	PtrMemberAccess	pdc -> ccolor		5007735	0					
ANR	5007970	Identifier	pdc		5007735	0					
ANR	5007971	Identifier	ccolor		5007735	1					
ANR	5007972	Identifier	paint		5007735	1					
ANR	5007973	Identifier	values		5007735	1					
ANR	5007974	Identifier	i		5007735	1					
ANR	5007975	ArrayIndexing	pc -> paint . values [ i ]		5007735	1					
ANR	5007976	MemberAccess	pc -> paint . values		5007735	0					
ANR	5007977	PtrMemberAccess	pc -> paint		5007735	0					
ANR	5007978	Identifier	pc		5007735	0					
ANR	5007979	Identifier	paint		5007735	1					
ANR	5007980	Identifier	values		5007735	1					
ANR	5007981	Identifier	i		5007735	1					
ANR	5007982	ExpressionStatement	pdc -> ccolor_valid = true	701:4:27317:27341	5007735	11	True				
ANR	5007983	AssignmentExpression	pdc -> ccolor_valid = true		5007735	0		=			
ANR	5007984	PtrMemberAccess	pdc -> ccolor_valid		5007735	0					
ANR	5007985	Identifier	pdc		5007735	0					
ANR	5007986	Identifier	ccolor_valid		5007735	1					
ANR	5007987	Identifier	true		5007735	1					
ANR	5007988	ReturnStatement	return code ;	703:4:27375:27386	5007735	12	True				
ANR	5007989	Identifier	code		5007735	0					
ANR	5007990	ReturnType	int		5007735	1					
ANR	5007991	Identifier	gx_remap_CIEABC		5007735	2					
ANR	5007992	ParameterList	"const gs_client_color * pc , const gs_color_space * pcs_in , gx_device_color * pdc , const gs_gstate * pgs , gx_device * dev , gs_color_select_t select"		5007735	3					
ANR	5007993	Parameter	const gs_client_color * pc	666:16:25743:25768	5007735	0	True				
ANR	5007994	ParameterType	const gs_client_color *		5007735	0					
ANR	5007995	Identifier	pc		5007735	1					
ANR	5007996	Parameter	const gs_color_space * pcs_in	666:44:25771:25799	5007735	1	True				
ANR	5007997	ParameterType	const gs_color_space *		5007735	0					
ANR	5007998	Identifier	pcs_in		5007735	1					
ANR	5007999	Parameter	gx_device_color * pdc	667:8:25810:25830	5007735	2	True				
ANR	5008000	ParameterType	gx_device_color *		5007735	0					
ANR	5008001	Identifier	pdc		5007735	1					
ANR	5008002	Parameter	const gs_gstate * pgs	667:31:25833:25853	5007735	3	True				
ANR	5008003	ParameterType	const gs_gstate *		5007735	0					
ANR	5008004	Identifier	pgs		5007735	1					
ANR	5008005	Parameter	gx_device * dev	667:54:25856:25870	5007735	4	True				
ANR	5008006	ParameterType	gx_device *		5007735	0					
ANR	5008007	Identifier	dev		5007735	1					
ANR	5008008	Parameter	gs_color_select_t select	668:16:25889:25912	5007735	5	True				
ANR	5008009	ParameterType	gs_color_select_t		5007735	0					
ANR	5008010	Identifier	select		5007735	1					
ANR	5008011	CFGEntryNode	ENTRY		5007735		True				
ANR	5008012	CFGExitNode	EXIT		5007735		True				
ANR	5008013	Symbol	* * pcs_icc		5007735						
ANR	5008014	Symbol	pcs_icc		5007735						
ANR	5008015	Symbol	select		5007735						
ANR	5008016	Symbol	* pgs		5007735						
ANR	5008017	Symbol	* pcs		5007735						
ANR	5008018	Symbol	gs_rethrow		5007735						
ANR	5008019	Symbol	pcs -> params . abc		5007735						
ANR	5008020	Symbol	& scale_pc		5007735						
ANR	5008021	Symbol	* pc -> paint . values		5007735						
ANR	5008022	Symbol	pdc -> ccolor . paint		5007735						
ANR	5008023	Symbol	gx_cieabc_to_icc		5007735						
ANR	5008024	Symbol	dev		5007735						
ANR	5008025	Symbol	* pdc		5007735						
ANR	5008026	Symbol	pcs_icc -> type -> remap_color		5007735						
ANR	5008027	Symbol	* pgs -> memory		5007735						
ANR	5008028	Symbol	pcs_in		5007735						
ANR	5008029	Symbol	NULL		5007735						
ANR	5008030	Symbol	* pdc -> ccolor . paint . values		5007735						
ANR	5008031	Symbol	* * pgs		5007735						
ANR	5008032	Symbol	* * pcs		5007735						
ANR	5008033	Symbol	* pcs -> params		5007735						
ANR	5008034	Symbol	* pdc -> ccolor		5007735						
ANR	5008035	Symbol	true		5007735						
ANR	5008036	Symbol	* pc		5007735						
ANR	5008037	Symbol	* pcs_icc		5007735						
ANR	5008038	Symbol	pcs -> params . abc -> RangeABC . ranges		5007735						
ANR	5008039	Symbol	pcs -> params . abc -> RangeABC		5007735						
ANR	5008040	Symbol	code		5007735						
ANR	5008041	Symbol	* * pdc		5007735						
ANR	5008042	Symbol	* pc -> paint		5007735						
ANR	5008043	Symbol	& pcs_icc		5007735						
ANR	5008044	Symbol	pcs_icc -> type		5007735						
ANR	5008045	Symbol	* pcs -> params . abc		5007735						
ANR	5008046	Symbol	pdc -> ccolor_valid		5007735						
ANR	5008047	Symbol	pgs		5007735						
ANR	5008048	Symbol	pgs -> memory		5007735						
ANR	5008049	Symbol	* * pc		5007735						
ANR	5008050	Symbol	islab		5007735						
ANR	5008051	Symbol	scale_pc		5007735						
ANR	5008052	Symbol	check_range		5007735						
ANR	5008053	Symbol	pcs		5007735						
ANR	5008054	Symbol	* pdc -> ccolor . paint		5007735						
ANR	5008055	Symbol	pdc -> ccolor . paint . values		5007735						
ANR	5008056	Symbol	pcs -> params		5007735						
ANR	5008057	Symbol	i		5007735						
ANR	5008058	Symbol	* pcs_icc -> type		5007735						
ANR	5008059	Symbol	pc -> paint . values		5007735						
ANR	5008060	Symbol	pcs -> icc_equivalent		5007735						
ANR	5008061	Symbol	& islab		5007735						
ANR	5008062	Symbol	pdc		5007735						
ANR	5008063	Symbol	pc -> paint		5007735						
ANR	5008064	Symbol	pc		5007735						
ANR	5008065	Symbol	* i		5007735						
ANR	5008066	Symbol	pdc -> ccolor		5007735						
ANR	5008067	Symbol	pgs -> memory -> stable_memory		5007735						
ANR	5008068	Function	gx_concretize_CIEABC	706:0:27391:28807							
ANR	5008069	FunctionDef	"gx_concretize_CIEABC (const gs_client_color * pc , const gs_color_space * pcs_in , frac * pconc , const gs_gstate * pgs , gx_device * dev)"		5008068	0					
ANR	5008070	CompoundStatement		709:0:27549:28807	5008068	0					
ANR	5008071	IdentifierDeclStatement	gs_color_space * pcs_icc ;	710:4:27555:27578	5008068	0	True				
ANR	5008072	IdentifierDecl	* pcs_icc		5008068	0					
ANR	5008073	IdentifierDeclType	gs_color_space *		5008068	0					
ANR	5008074	Identifier	pcs_icc		5008068	1					
ANR	5008075	IdentifierDeclStatement	gs_client_color scale_pc ;	711:4:27584:27608	5008068	1	True				
ANR	5008076	IdentifierDecl	scale_pc		5008068	0					
ANR	5008077	IdentifierDeclType	gs_client_color		5008068	0					
ANR	5008078	Identifier	scale_pc		5008068	1					
ANR	5008079	IdentifierDeclStatement	bool islab ;	712:4:27614:27624	5008068	2	True				
ANR	5008080	IdentifierDecl	islab		5008068	0					
ANR	5008081	IdentifierDeclType	bool		5008068	0					
ANR	5008082	Identifier	islab		5008068	1					
ANR	5008083	IdentifierDeclStatement	gs_color_space * pcs = ( gs_color_space * ) pcs_in ;	713:4:27630:27677	5008068	3	True				
ANR	5008084	IdentifierDecl	* pcs = ( gs_color_space * ) pcs_in		5008068	0					
ANR	5008085	IdentifierDeclType	gs_color_space *		5008068	0					
ANR	5008086	Identifier	pcs		5008068	1					
ANR	5008087	AssignmentExpression	* pcs = ( gs_color_space * ) pcs_in		5008068	2		=			
ANR	5008088	Identifier	pcs		5008068	0					
ANR	5008089	CastExpression	( gs_color_space * ) pcs_in		5008068	1					
ANR	5008090	CastTarget	gs_color_space *		5008068	0					
ANR	5008091	Identifier	pcs_in		5008068	1					
ANR	5008092	IdentifierDeclStatement	int code = 0 ;	714:4:27683:27695	5008068	4	True				
ANR	5008093	IdentifierDecl	code = 0		5008068	0					
ANR	5008094	IdentifierDeclType	int		5008068	0					
ANR	5008095	Identifier	code		5008068	1					
ANR	5008096	AssignmentExpression	code = 0		5008068	2		=			
ANR	5008097	Identifier	code		5008068	0					
ANR	5008098	PrimaryExpression	0		5008068	1					
ANR	5008099	ExpressionStatement	"if_debug3m ( 'c' , pgs -> memory , ""[c]concretize CIEABC [%g %g %g]\\n"" , pc -> paint . values [ 0 ] , pc -> paint . values [ 1 ] , pc -> paint . values [ 2 ] )"	716:4:27702:27860	5008068	5	True				
ANR	5008100	CallExpression	"if_debug3m ( 'c' , pgs -> memory , ""[c]concretize CIEABC [%g %g %g]\\n"" , pc -> paint . values [ 0 ] , pc -> paint . values [ 1 ] , pc -> paint . values [ 2 ] )"		5008068	0					
ANR	5008101	Callee	if_debug3m		5008068	0					
ANR	5008102	Identifier	if_debug3m		5008068	0					
ANR	5008103	ArgumentList	'c'		5008068	1					
ANR	5008104	Argument	'c'		5008068	0					
ANR	5008105	PrimaryExpression	'c'		5008068	0					
ANR	5008106	Argument	pgs -> memory		5008068	1					
ANR	5008107	PtrMemberAccess	pgs -> memory		5008068	0					
ANR	5008108	Identifier	pgs		5008068	0					
ANR	5008109	Identifier	memory		5008068	1					
ANR	5008110	Argument	"""[c]concretize CIEABC [%g %g %g]\\n"""		5008068	2					
ANR	5008111	PrimaryExpression	"""[c]concretize CIEABC [%g %g %g]\\n"""		5008068	0					
ANR	5008112	Argument	pc -> paint . values [ 0 ]		5008068	3					
ANR	5008113	ArrayIndexing	pc -> paint . values [ 0 ]		5008068	0					
ANR	5008114	MemberAccess	pc -> paint . values		5008068	0					
ANR	5008115	PtrMemberAccess	pc -> paint		5008068	0					
ANR	5008116	Identifier	pc		5008068	0					
ANR	5008117	Identifier	paint		5008068	1					
ANR	5008118	Identifier	values		5008068	1					
ANR	5008119	PrimaryExpression	0		5008068	1					
ANR	5008120	Argument	pc -> paint . values [ 1 ]		5008068	4					
ANR	5008121	ArrayIndexing	pc -> paint . values [ 1 ]		5008068	0					
ANR	5008122	MemberAccess	pc -> paint . values		5008068	0					
ANR	5008123	PtrMemberAccess	pc -> paint		5008068	0					
ANR	5008124	Identifier	pc		5008068	0					
ANR	5008125	Identifier	paint		5008068	1					
ANR	5008126	Identifier	values		5008068	1					
ANR	5008127	PrimaryExpression	1		5008068	1					
ANR	5008128	Argument	pc -> paint . values [ 2 ]		5008068	5					
ANR	5008129	ArrayIndexing	pc -> paint . values [ 2 ]		5008068	0					
ANR	5008130	MemberAccess	pc -> paint . values		5008068	0					
ANR	5008131	PtrMemberAccess	pc -> paint		5008068	0					
ANR	5008132	Identifier	pc		5008068	0					
ANR	5008133	Identifier	paint		5008068	1					
ANR	5008134	Identifier	values		5008068	1					
ANR	5008135	PrimaryExpression	2		5008068	1					
ANR	5008136	IfStatement	if ( pcs -> icc_equivalent == NULL )		5008068	6					
ANR	5008137	Condition	pcs -> icc_equivalent == NULL	722:8:28029:28055	5008068	0	True				
ANR	5008138	EqualityExpression	pcs -> icc_equivalent == NULL		5008068	0		==			
ANR	5008139	PtrMemberAccess	pcs -> icc_equivalent		5008068	0					
ANR	5008140	Identifier	pcs		5008068	0					
ANR	5008141	Identifier	icc_equivalent		5008068	1					
ANR	5008142	Identifier	NULL		5008068	1					
ANR	5008143	CompoundStatement		14:37:508:508	5008068	1					
ANR	5008144	ExpressionStatement	"code = gx_cieabc_to_icc ( & pcs_icc , pcs , & islab , pgs -> memory -> stable_memory )"	723:8:28068:28142	5008068	0	True				
ANR	5008145	AssignmentExpression	"code = gx_cieabc_to_icc ( & pcs_icc , pcs , & islab , pgs -> memory -> stable_memory )"		5008068	0		=			
ANR	5008146	Identifier	code		5008068	0					
ANR	5008147	CallExpression	"gx_cieabc_to_icc ( & pcs_icc , pcs , & islab , pgs -> memory -> stable_memory )"		5008068	1					
ANR	5008148	Callee	gx_cieabc_to_icc		5008068	0					
ANR	5008149	Identifier	gx_cieabc_to_icc		5008068	0					
ANR	5008150	ArgumentList	& pcs_icc		5008068	1					
ANR	5008151	Argument	& pcs_icc		5008068	0					
ANR	5008152	UnaryOperationExpression	& pcs_icc		5008068	0					
ANR	5008153	UnaryOperator	&		5008068	0					
ANR	5008154	Identifier	pcs_icc		5008068	1					
ANR	5008155	Argument	pcs		5008068	1					
ANR	5008156	Identifier	pcs		5008068	0					
ANR	5008157	Argument	& islab		5008068	2					
ANR	5008158	UnaryOperationExpression	& islab		5008068	0					
ANR	5008159	UnaryOperator	&		5008068	0					
ANR	5008160	Identifier	islab		5008068	1					
ANR	5008161	Argument	pgs -> memory -> stable_memory		5008068	3					
ANR	5008162	PtrMemberAccess	pgs -> memory -> stable_memory		5008068	0					
ANR	5008163	PtrMemberAccess	pgs -> memory		5008068	0					
ANR	5008164	Identifier	pgs		5008068	0					
ANR	5008165	Identifier	memory		5008068	1					
ANR	5008166	Identifier	stable_memory		5008068	1					
ANR	5008167	IfStatement	if ( code < 0 )		5008068	1					
ANR	5008168	Condition	code < 0	724:12:28156:28163	5008068	0	True				
ANR	5008169	RelationalExpression	code < 0		5008068	0		<			
ANR	5008170	Identifier	code		5008068	0					
ANR	5008171	PrimaryExpression	0		5008068	1					
ANR	5008172	ReturnStatement	"return gs_rethrow ( code , ""Failed to create ICC profile from CIEABC"" ) ;"	725:12:28178:28245	5008068	1	True				
ANR	5008173	CallExpression	"gs_rethrow ( code , ""Failed to create ICC profile from CIEABC"" )"		5008068	0					
ANR	5008174	Callee	gs_rethrow		5008068	0					
ANR	5008175	Identifier	gs_rethrow		5008068	0					
ANR	5008176	ArgumentList	code		5008068	1					
ANR	5008177	Argument	code		5008068	0					
ANR	5008178	Identifier	code		5008068	0					
ANR	5008179	Argument	"""Failed to create ICC profile from CIEABC"""		5008068	1					
ANR	5008180	PrimaryExpression	"""Failed to create ICC profile from CIEABC"""		5008068	0					
ANR	5008181	ElseStatement	else		5008068	0					
ANR	5008182	CompoundStatement		18:11:708:708	5008068	0					
ANR	5008183	ExpressionStatement	pcs_icc = pcs -> icc_equivalent	727:8:28268:28297	5008068	0	True				
ANR	5008184	AssignmentExpression	pcs_icc = pcs -> icc_equivalent		5008068	0		=			
ANR	5008185	Identifier	pcs_icc		5008068	0					
ANR	5008186	PtrMemberAccess	pcs -> icc_equivalent		5008068	1					
ANR	5008187	Identifier	pcs		5008068	0					
ANR	5008188	Identifier	icc_equivalent		5008068	1					
ANR	5008189	IfStatement	"if ( check_range ( & ( pcs -> params . abc -> RangeABC . ranges [ 0 ] ) , 3 ) )"		5008068	7					
ANR	5008190	Condition	"check_range ( & ( pcs -> params . abc -> RangeABC . ranges [ 0 ] ) , 3 )"	731:8:28432:28485	5008068	0	True				
ANR	5008191	CallExpression	"check_range ( & ( pcs -> params . abc -> RangeABC . ranges [ 0 ] ) , 3 )"		5008068	0					
ANR	5008192	Callee	check_range		5008068	0					
ANR	5008193	Identifier	check_range		5008068	0					
ANR	5008194	ArgumentList	& ( pcs -> params . abc -> RangeABC . ranges [ 0 ] )		5008068	1					
ANR	5008195	Argument	& ( pcs -> params . abc -> RangeABC . ranges [ 0 ] )		5008068	0					
ANR	5008196	UnaryOperationExpression	& ( pcs -> params . abc -> RangeABC . ranges [ 0 ] )		5008068	0					
ANR	5008197	UnaryOperator	&		5008068	0					
ANR	5008198	ArrayIndexing	pcs -> params . abc -> RangeABC . ranges [ 0 ]		5008068	1					
ANR	5008199	MemberAccess	pcs -> params . abc -> RangeABC . ranges		5008068	0					
ANR	5008200	PtrMemberAccess	pcs -> params . abc -> RangeABC		5008068	0					
ANR	5008201	MemberAccess	pcs -> params . abc		5008068	0					
ANR	5008202	PtrMemberAccess	pcs -> params		5008068	0					
ANR	5008203	Identifier	pcs		5008068	0					
ANR	5008204	Identifier	params		5008068	1					
ANR	5008205	Identifier	abc		5008068	1					
ANR	5008206	Identifier	RangeABC		5008068	1					
ANR	5008207	Identifier	ranges		5008068	1					
ANR	5008208	PrimaryExpression	0		5008068	1					
ANR	5008209	Argument	3		5008068	1					
ANR	5008210	PrimaryExpression	3		5008068	0					
ANR	5008211	CompoundStatement		23:64:938:938	5008068	1					
ANR	5008212	ReturnStatement	"return ( pcs_icc -> type -> concretize_color ) ( pc , pcs_icc , pconc , pgs , dev ) ;"	732:8:28498:28568	5008068	0	True				
ANR	5008213	CallExpression	"( pcs_icc -> type -> concretize_color ) ( pc , pcs_icc , pconc , pgs , dev )"		5008068	0					
ANR	5008214	Callee	pcs_icc -> type -> concretize_color		5008068	0					
ANR	5008215	PtrMemberAccess	pcs_icc -> type -> concretize_color		5008068	0					
ANR	5008216	PtrMemberAccess	pcs_icc -> type		5008068	0					
ANR	5008217	Identifier	pcs_icc		5008068	0					
ANR	5008218	Identifier	type		5008068	1					
ANR	5008219	Identifier	concretize_color		5008068	1					
ANR	5008220	ArgumentList	pc		5008068	1					
ANR	5008221	Argument	pc		5008068	0					
ANR	5008222	Identifier	pc		5008068	0					
ANR	5008223	Argument	pcs_icc		5008068	1					
ANR	5008224	Identifier	pcs_icc		5008068	0					
ANR	5008225	Argument	pconc		5008068	2					
ANR	5008226	Identifier	pconc		5008068	0					
ANR	5008227	Argument	pgs		5008068	3					
ANR	5008228	Identifier	pgs		5008068	0					
ANR	5008229	Argument	dev		5008068	4					
ANR	5008230	Identifier	dev		5008068	0					
ANR	5008231	ExpressionStatement	"rescale_input_color ( & ( pcs -> params . abc -> RangeABC . ranges [ 0 ] ) , 3 , pc , & scale_pc )"	735:4:28617:28694	5008068	8	True				
ANR	5008232	CallExpression	"rescale_input_color ( & ( pcs -> params . abc -> RangeABC . ranges [ 0 ] ) , 3 , pc , & scale_pc )"		5008068	0					
ANR	5008233	Callee	rescale_input_color		5008068	0					
ANR	5008234	Identifier	rescale_input_color		5008068	0					
ANR	5008235	ArgumentList	& ( pcs -> params . abc -> RangeABC . ranges [ 0 ] )		5008068	1					
ANR	5008236	Argument	& ( pcs -> params . abc -> RangeABC . ranges [ 0 ] )		5008068	0					
ANR	5008237	UnaryOperationExpression	& ( pcs -> params . abc -> RangeABC . ranges [ 0 ] )		5008068	0					
ANR	5008238	UnaryOperator	&		5008068	0					
ANR	5008239	ArrayIndexing	pcs -> params . abc -> RangeABC . ranges [ 0 ]		5008068	1					
ANR	5008240	MemberAccess	pcs -> params . abc -> RangeABC . ranges		5008068	0					
ANR	5008241	PtrMemberAccess	pcs -> params . abc -> RangeABC		5008068	0					
ANR	5008242	MemberAccess	pcs -> params . abc		5008068	0					
ANR	5008243	PtrMemberAccess	pcs -> params		5008068	0					
ANR	5008244	Identifier	pcs		5008068	0					
ANR	5008245	Identifier	params		5008068	1					
ANR	5008246	Identifier	abc		5008068	1					
ANR	5008247	Identifier	RangeABC		5008068	1					
ANR	5008248	Identifier	ranges		5008068	1					
ANR	5008249	PrimaryExpression	0		5008068	1					
ANR	5008250	Argument	3		5008068	1					
ANR	5008251	PrimaryExpression	3		5008068	0					
ANR	5008252	Argument	pc		5008068	2					
ANR	5008253	Identifier	pc		5008068	0					
ANR	5008254	Argument	& scale_pc		5008068	3					
ANR	5008255	UnaryOperationExpression	& scale_pc		5008068	0					
ANR	5008256	UnaryOperator	&		5008068	0					
ANR	5008257	Identifier	scale_pc		5008068	1					
ANR	5008258	ReturnStatement	"return ( pcs_icc -> type -> concretize_color ) ( & scale_pc , pcs_icc , pconc , pgs , dev ) ;"	737:4:28728:28805	5008068	9	True				
ANR	5008259	CallExpression	"( pcs_icc -> type -> concretize_color ) ( & scale_pc , pcs_icc , pconc , pgs , dev )"		5008068	0					
ANR	5008260	Callee	pcs_icc -> type -> concretize_color		5008068	0					
ANR	5008261	PtrMemberAccess	pcs_icc -> type -> concretize_color		5008068	0					
ANR	5008262	PtrMemberAccess	pcs_icc -> type		5008068	0					
ANR	5008263	Identifier	pcs_icc		5008068	0					
ANR	5008264	Identifier	type		5008068	1					
ANR	5008265	Identifier	concretize_color		5008068	1					
ANR	5008266	ArgumentList	& scale_pc		5008068	1					
ANR	5008267	Argument	& scale_pc		5008068	0					
ANR	5008268	UnaryOperationExpression	& scale_pc		5008068	0					
ANR	5008269	UnaryOperator	&		5008068	0					
ANR	5008270	Identifier	scale_pc		5008068	1					
ANR	5008271	Argument	pcs_icc		5008068	1					
ANR	5008272	Identifier	pcs_icc		5008068	0					
ANR	5008273	Argument	pconc		5008068	2					
ANR	5008274	Identifier	pconc		5008068	0					
ANR	5008275	Argument	pgs		5008068	3					
ANR	5008276	Identifier	pgs		5008068	0					
ANR	5008277	Argument	dev		5008068	4					
ANR	5008278	Identifier	dev		5008068	0					
ANR	5008279	ReturnType	int		5008068	1					
ANR	5008280	Identifier	gx_concretize_CIEABC		5008068	2					
ANR	5008281	ParameterList	"const gs_client_color * pc , const gs_color_space * pcs_in , frac * pconc , const gs_gstate * pgs , gx_device * dev"		5008068	3					
ANR	5008282	Parameter	const gs_client_color * pc	707:21:27416:27441	5008068	0	True				
ANR	5008283	ParameterType	const gs_client_color *		5008068	0					
ANR	5008284	Identifier	pc		5008068	1					
ANR	5008285	Parameter	const gs_color_space * pcs_in	707:49:27444:27472	5008068	1	True				
ANR	5008286	ParameterType	const gs_color_space *		5008068	0					
ANR	5008287	Identifier	pcs_in		5008068	1					
ANR	5008288	Parameter	frac * pconc	708:21:27496:27507	5008068	2	True				
ANR	5008289	ParameterType	frac *		5008068	0					
ANR	5008290	Identifier	pconc		5008068	1					
ANR	5008291	Parameter	const gs_gstate * pgs	708:35:27510:27530	5008068	3	True				
ANR	5008292	ParameterType	const gs_gstate *		5008068	0					
ANR	5008293	Identifier	pgs		5008068	1					
ANR	5008294	Parameter	gx_device * dev	708:58:27533:27546	5008068	4	True				
ANR	5008295	ParameterType	gx_device *		5008068	0					
ANR	5008296	Identifier	dev		5008068	1					
ANR	5008297	CFGEntryNode	ENTRY		5008068		True				
ANR	5008298	CFGExitNode	EXIT		5008068		True				
ANR	5008299	Symbol	pcs -> params . abc -> RangeABC . ranges		5008068						
ANR	5008300	Symbol	* * pcs_icc		5008068						
ANR	5008301	Symbol	pcs_icc		5008068						
ANR	5008302	Symbol	pcs -> params . abc -> RangeABC		5008068						
ANR	5008303	Symbol	code		5008068						
ANR	5008304	Symbol	* pc -> paint		5008068						
ANR	5008305	Symbol	* pgs		5008068						
ANR	5008306	Symbol	pconc		5008068						
ANR	5008307	Symbol	& pcs_icc		5008068						
ANR	5008308	Symbol	pcs_icc -> type		5008068						
ANR	5008309	Symbol	* pcs		5008068						
ANR	5008310	Symbol	gs_rethrow		5008068						
ANR	5008311	Symbol	pcs -> params . abc		5008068						
ANR	5008312	Symbol	& scale_pc		5008068						
ANR	5008313	Symbol	* pc -> paint . values		5008068						
ANR	5008314	Symbol	* pcs -> params . abc		5008068						
ANR	5008315	Symbol	gx_cieabc_to_icc		5008068						
ANR	5008316	Symbol	dev		5008068						
ANR	5008317	Symbol	pgs		5008068						
ANR	5008318	Symbol	* * pc		5008068						
ANR	5008319	Symbol	pgs -> memory		5008068						
ANR	5008320	Symbol	islab		5008068						
ANR	5008321	Symbol	scale_pc		5008068						
ANR	5008322	Symbol	* pgs -> memory		5008068						
ANR	5008323	Symbol	check_range		5008068						
ANR	5008324	Symbol	pcs_icc -> type -> concretize_color		5008068						
ANR	5008325	Symbol	pcs		5008068						
ANR	5008326	Symbol	pcs_in		5008068						
ANR	5008327	Symbol	NULL		5008068						
ANR	5008328	Symbol	pcs -> params		5008068						
ANR	5008329	Symbol	* pcs_icc -> type		5008068						
ANR	5008330	Symbol	pc -> paint . values		5008068						
ANR	5008331	Symbol	pcs -> icc_equivalent		5008068						
ANR	5008332	Symbol	& islab		5008068						
ANR	5008333	Symbol	* * pgs		5008068						
ANR	5008334	Symbol	pc -> paint		5008068						
ANR	5008335	Symbol	pc		5008068						
ANR	5008336	Symbol	* pcs -> params		5008068						
ANR	5008337	Symbol	* * pcs		5008068						
ANR	5008338	Symbol	* pc		5008068						
ANR	5008339	Symbol	pgs -> memory -> stable_memory		5008068						
ANR	5008340	Symbol	* pcs_icc		5008068						
ANR	5008341	Function	gx_ciea_to_icc	741:0:28864:30499							
ANR	5008342	FunctionDef	"gx_ciea_to_icc (gs_color_space * * ppcs_icc , gs_color_space * pcs , gs_memory_t * memory)"		5008341	0					
ANR	5008343	CompoundStatement		743:0:28959:30499	5008341	0					
ANR	5008344	IdentifierDeclStatement	int code ;	744:4:28965:28973	5008341	0	True				
ANR	5008345	IdentifierDecl	code		5008341	0					
ANR	5008346	IdentifierDeclType	int		5008341	0					
ANR	5008347	Identifier	code		5008341	1					
ANR	5008348	IdentifierDeclStatement	gs_color_space * palt_cs = pcs -> base_space ;	745:4:28979:29020	5008341	1	True				
ANR	5008349	IdentifierDecl	* palt_cs = pcs -> base_space		5008341	0					
ANR	5008350	IdentifierDeclType	gs_color_space *		5008341	0					
ANR	5008351	Identifier	palt_cs		5008341	1					
ANR	5008352	AssignmentExpression	* palt_cs = pcs -> base_space		5008341	2		=			
ANR	5008353	Identifier	palt_cs		5008341	0					
ANR	5008354	PtrMemberAccess	pcs -> base_space		5008341	1					
ANR	5008355	Identifier	pcs		5008341	0					
ANR	5008356	Identifier	base_space		5008341	1					
ANR	5008357	IdentifierDeclStatement	gx_cie_vector_cache * a_cache = & ( pcs -> params . a -> caches . DecodeA ) ;	746:4:29026:29089	5008341	2	True				
ANR	5008358	IdentifierDecl	* a_cache = & ( pcs -> params . a -> caches . DecodeA )		5008341	0					
ANR	5008359	IdentifierDeclType	gx_cie_vector_cache *		5008341	0					
ANR	5008360	Identifier	a_cache		5008341	1					
ANR	5008361	AssignmentExpression	* a_cache = & ( pcs -> params . a -> caches . DecodeA )		5008341	2		=			
ANR	5008362	Identifier	a_cache		5008341	0					
ANR	5008363	UnaryOperationExpression	& ( pcs -> params . a -> caches . DecodeA )		5008341	1					
ANR	5008364	UnaryOperator	&		5008341	0					
ANR	5008365	MemberAccess	pcs -> params . a -> caches . DecodeA		5008341	1					
ANR	5008366	PtrMemberAccess	pcs -> params . a -> caches		5008341	0					
ANR	5008367	MemberAccess	pcs -> params . a		5008341	0					
ANR	5008368	PtrMemberAccess	pcs -> params		5008341	0					
ANR	5008369	Identifier	pcs		5008341	0					
ANR	5008370	Identifier	params		5008341	1					
ANR	5008371	Identifier	a		5008341	1					
ANR	5008372	Identifier	caches		5008341	1					
ANR	5008373	Identifier	DecodeA		5008341	1					
ANR	5008374	IdentifierDeclStatement	gx_cie_scalar_cache * lmn_caches = & ( pcs -> params . a -> common . caches . DecodeLMN [ 0 ] ) ;	747:4:29095:29176	5008341	3	True				
ANR	5008375	IdentifierDecl	* lmn_caches = & ( pcs -> params . a -> common . caches . DecodeLMN [ 0 ] )		5008341	0					
ANR	5008376	IdentifierDeclType	gx_cie_scalar_cache *		5008341	0					
ANR	5008377	Identifier	lmn_caches		5008341	1					
ANR	5008378	AssignmentExpression	* lmn_caches = & ( pcs -> params . a -> common . caches . DecodeLMN [ 0 ] )		5008341	2		=			
ANR	5008379	Identifier	lmn_caches		5008341	0					
ANR	5008380	UnaryOperationExpression	& ( pcs -> params . a -> common . caches . DecodeLMN [ 0 ] )		5008341	1					
ANR	5008381	UnaryOperator	&		5008341	0					
ANR	5008382	ArrayIndexing	pcs -> params . a -> common . caches . DecodeLMN [ 0 ]		5008341	1					
ANR	5008383	MemberAccess	pcs -> params . a -> common . caches . DecodeLMN		5008341	0					
ANR	5008384	MemberAccess	pcs -> params . a -> common . caches		5008341	0					
ANR	5008385	PtrMemberAccess	pcs -> params . a -> common		5008341	0					
ANR	5008386	MemberAccess	pcs -> params . a		5008341	0					
ANR	5008387	PtrMemberAccess	pcs -> params		5008341	0					
ANR	5008388	Identifier	pcs		5008341	0					
ANR	5008389	Identifier	params		5008341	1					
ANR	5008390	Identifier	a		5008341	1					
ANR	5008391	Identifier	common		5008341	1					
ANR	5008392	Identifier	caches		5008341	1					
ANR	5008393	Identifier	DecodeLMN		5008341	1					
ANR	5008394	PrimaryExpression	0		5008341	1					
ANR	5008395	ExpressionStatement	"if_debug0m ( gs_debug_flag_icc , memory , ""[icc] Creating ICC profile from CIEA object"" )"	749:4:29183:29282	5008341	4	True				
ANR	5008396	CallExpression	"if_debug0m ( gs_debug_flag_icc , memory , ""[icc] Creating ICC profile from CIEA object"" )"		5008341	0					
ANR	5008397	Callee	if_debug0m		5008341	0					
ANR	5008398	Identifier	if_debug0m		5008341	0					
ANR	5008399	ArgumentList	gs_debug_flag_icc		5008341	1					
ANR	5008400	Argument	gs_debug_flag_icc		5008341	0					
ANR	5008401	Identifier	gs_debug_flag_icc		5008341	0					
ANR	5008402	Argument	memory		5008341	1					
ANR	5008403	Identifier	memory		5008341	0					
ANR	5008404	Argument	"""[icc] Creating ICC profile from CIEA object"""		5008341	2					
ANR	5008405	PrimaryExpression	"""[icc] Creating ICC profile from CIEA object"""		5008341	0					
ANR	5008406	ExpressionStatement	"code = gs_cspace_build_ICC ( ppcs_icc , NULL , memory )"	752:4:29331:29381	5008341	5	True				
ANR	5008407	AssignmentExpression	"code = gs_cspace_build_ICC ( ppcs_icc , NULL , memory )"		5008341	0		=			
ANR	5008408	Identifier	code		5008341	0					
ANR	5008409	CallExpression	"gs_cspace_build_ICC ( ppcs_icc , NULL , memory )"		5008341	1					
ANR	5008410	Callee	gs_cspace_build_ICC		5008341	0					
ANR	5008411	Identifier	gs_cspace_build_ICC		5008341	0					
ANR	5008412	ArgumentList	ppcs_icc		5008341	1					
ANR	5008413	Argument	ppcs_icc		5008341	0					
ANR	5008414	Identifier	ppcs_icc		5008341	0					
ANR	5008415	Argument	NULL		5008341	1					
ANR	5008416	Identifier	NULL		5008341	0					
ANR	5008417	Argument	memory		5008341	2					
ANR	5008418	Identifier	memory		5008341	0					
ANR	5008419	IfStatement	if ( code < 0 )		5008341	6					
ANR	5008420	Condition	code < 0	753:8:29391:29398	5008341	0	True				
ANR	5008421	RelationalExpression	code < 0		5008341	0		<			
ANR	5008422	Identifier	code		5008341	0					
ANR	5008423	PrimaryExpression	0		5008341	1					
ANR	5008424	ReturnStatement	"return gs_rethrow ( code , ""Failed to create ICC profile"" ) ;"	754:8:29409:29464	5008341	1	True				
ANR	5008425	CallExpression	"gs_rethrow ( code , ""Failed to create ICC profile"" )"		5008341	0					
ANR	5008426	Callee	gs_rethrow		5008341	0					
ANR	5008427	Identifier	gs_rethrow		5008341	0					
ANR	5008428	ArgumentList	code		5008341	1					
ANR	5008429	Argument	code		5008341	0					
ANR	5008430	Identifier	code		5008341	0					
ANR	5008431	Argument	"""Failed to create ICC profile"""		5008341	1					
ANR	5008432	PrimaryExpression	"""Failed to create ICC profile"""		5008341	0					
ANR	5008433	ExpressionStatement	( * ppcs_icc ) -> base_space = palt_cs	756:4:29540:29573	5008341	7	True				
ANR	5008434	AssignmentExpression	( * ppcs_icc ) -> base_space = palt_cs		5008341	0		=			
ANR	5008435	PtrMemberAccess	( * ppcs_icc ) -> base_space		5008341	0					
ANR	5008436	UnaryOperationExpression	* ppcs_icc		5008341	0					
ANR	5008437	UnaryOperator	*		5008341	0					
ANR	5008438	Identifier	ppcs_icc		5008341	1					
ANR	5008439	Identifier	base_space		5008341	1					
ANR	5008440	Identifier	palt_cs		5008341	1					
ANR	5008441	ExpressionStatement	rc_increment_cs ( palt_cs )	757:4:29579:29603	5008341	8	True				
ANR	5008442	CallExpression	rc_increment_cs ( palt_cs )		5008341	0					
ANR	5008443	Callee	rc_increment_cs		5008341	0					
ANR	5008444	Identifier	rc_increment_cs		5008341	0					
ANR	5008445	ArgumentList	palt_cs		5008341	1					
ANR	5008446	Argument	palt_cs		5008341	0					
ANR	5008447	Identifier	palt_cs		5008341	0					
ANR	5008448	ExpressionStatement	"( * ppcs_icc ) -> cmm_icc_profile_data = gsicc_profile_new ( NULL , memory , NULL , 0 )"	758:4:29609:29685	5008341	9	True				
ANR	5008449	AssignmentExpression	"( * ppcs_icc ) -> cmm_icc_profile_data = gsicc_profile_new ( NULL , memory , NULL , 0 )"		5008341	0		=			
ANR	5008450	PtrMemberAccess	( * ppcs_icc ) -> cmm_icc_profile_data		5008341	0					
ANR	5008451	UnaryOperationExpression	* ppcs_icc		5008341	0					
ANR	5008452	UnaryOperator	*		5008341	0					
ANR	5008453	Identifier	ppcs_icc		5008341	1					
ANR	5008454	Identifier	cmm_icc_profile_data		5008341	1					
ANR	5008455	CallExpression	"gsicc_profile_new ( NULL , memory , NULL , 0 )"		5008341	1					
ANR	5008456	Callee	gsicc_profile_new		5008341	0					
ANR	5008457	Identifier	gsicc_profile_new		5008341	0					
ANR	5008458	ArgumentList	NULL		5008341	1					
ANR	5008459	Argument	NULL		5008341	0					
ANR	5008460	Identifier	NULL		5008341	0					
ANR	5008461	Argument	memory		5008341	1					
ANR	5008462	Identifier	memory		5008341	0					
ANR	5008463	Argument	NULL		5008341	2					
ANR	5008464	Identifier	NULL		5008341	0					
ANR	5008465	Argument	0		5008341	3					
ANR	5008466	PrimaryExpression	0		5008341	0					
ANR	5008467	IfStatement	if ( ( * ppcs_icc ) -> cmm_icc_profile_data == NULL )		5008341	10					
ANR	5008468	Condition	( * ppcs_icc ) -> cmm_icc_profile_data == NULL	759:8:29695:29735	5008341	0	True				
ANR	5008469	EqualityExpression	( * ppcs_icc ) -> cmm_icc_profile_data == NULL		5008341	0		==			
ANR	5008470	PtrMemberAccess	( * ppcs_icc ) -> cmm_icc_profile_data		5008341	0					
ANR	5008471	UnaryOperationExpression	* ppcs_icc		5008341	0					
ANR	5008472	UnaryOperator	*		5008341	0					
ANR	5008473	Identifier	ppcs_icc		5008341	1					
ANR	5008474	Identifier	cmm_icc_profile_data		5008341	1					
ANR	5008475	Identifier	NULL		5008341	1					
ANR	5008476	ExpressionStatement	"gs_throw ( gs_error_VMerror , ""Failed to create ICC profile"" )"	760:8:29746:29804	5008341	1	True				
ANR	5008477	CallExpression	"gs_throw ( gs_error_VMerror , ""Failed to create ICC profile"" )"		5008341	0					
ANR	5008478	Callee	gs_throw		5008341	0					
ANR	5008479	Identifier	gs_throw		5008341	0					
ANR	5008480	ArgumentList	gs_error_VMerror		5008341	1					
ANR	5008481	Argument	gs_error_VMerror		5008341	0					
ANR	5008482	Identifier	gs_error_VMerror		5008341	0					
ANR	5008483	Argument	"""Failed to create ICC profile"""		5008341	1					
ANR	5008484	PrimaryExpression	"""Failed to create ICC profile"""		5008341	0					
ANR	5008485	ExpressionStatement	"code = gsicc_create_froma ( pcs , & ( ( * ppcs_icc ) -> cmm_icc_profile_data -> buffer ) , & ( ( * ppcs_icc ) -> cmm_icc_profile_data -> buffer_size ) , memory , a_cache , lmn_caches )"	761:4:29810:30006	5008341	11	True				
ANR	5008486	AssignmentExpression	"code = gsicc_create_froma ( pcs , & ( ( * ppcs_icc ) -> cmm_icc_profile_data -> buffer ) , & ( ( * ppcs_icc ) -> cmm_icc_profile_data -> buffer_size ) , memory , a_cache , lmn_caches )"		5008341	0		=			
ANR	5008487	Identifier	code		5008341	0					
ANR	5008488	CallExpression	"gsicc_create_froma ( pcs , & ( ( * ppcs_icc ) -> cmm_icc_profile_data -> buffer ) , & ( ( * ppcs_icc ) -> cmm_icc_profile_data -> buffer_size ) , memory , a_cache , lmn_caches )"		5008341	1					
ANR	5008489	Callee	gsicc_create_froma		5008341	0					
ANR	5008490	Identifier	gsicc_create_froma		5008341	0					
ANR	5008491	ArgumentList	pcs		5008341	1					
ANR	5008492	Argument	pcs		5008341	0					
ANR	5008493	Identifier	pcs		5008341	0					
ANR	5008494	Argument	& ( ( * ppcs_icc ) -> cmm_icc_profile_data -> buffer )		5008341	1					
ANR	5008495	UnaryOperationExpression	& ( ( * ppcs_icc ) -> cmm_icc_profile_data -> buffer )		5008341	0					
ANR	5008496	UnaryOperator	&		5008341	0					
ANR	5008497	PtrMemberAccess	( * ppcs_icc ) -> cmm_icc_profile_data -> buffer		5008341	1					
ANR	5008498	PtrMemberAccess	( * ppcs_icc ) -> cmm_icc_profile_data		5008341	0					
ANR	5008499	UnaryOperationExpression	* ppcs_icc		5008341	0					
ANR	5008500	UnaryOperator	*		5008341	0					
ANR	5008501	Identifier	ppcs_icc		5008341	1					
ANR	5008502	Identifier	cmm_icc_profile_data		5008341	1					
ANR	5008503	Identifier	buffer		5008341	1					
ANR	5008504	Argument	& ( ( * ppcs_icc ) -> cmm_icc_profile_data -> buffer_size )		5008341	2					
ANR	5008505	UnaryOperationExpression	& ( ( * ppcs_icc ) -> cmm_icc_profile_data -> buffer_size )		5008341	0					
ANR	5008506	UnaryOperator	&		5008341	0					
ANR	5008507	PtrMemberAccess	( * ppcs_icc ) -> cmm_icc_profile_data -> buffer_size		5008341	1					
ANR	5008508	PtrMemberAccess	( * ppcs_icc ) -> cmm_icc_profile_data		5008341	0					
ANR	5008509	UnaryOperationExpression	* ppcs_icc		5008341	0					
ANR	5008510	UnaryOperator	*		5008341	0					
ANR	5008511	Identifier	ppcs_icc		5008341	1					
ANR	5008512	Identifier	cmm_icc_profile_data		5008341	1					
ANR	5008513	Identifier	buffer_size		5008341	1					
ANR	5008514	Argument	memory		5008341	3					
ANR	5008515	Identifier	memory		5008341	0					
ANR	5008516	Argument	a_cache		5008341	4					
ANR	5008517	Identifier	a_cache		5008341	0					
ANR	5008518	Argument	lmn_caches		5008341	5					
ANR	5008519	Identifier	lmn_caches		5008341	0					
ANR	5008520	IfStatement	if ( code < 0 )		5008341	12					
ANR	5008521	Condition	code < 0	764:8:30016:30023	5008341	0	True				
ANR	5008522	RelationalExpression	code < 0		5008341	0		<			
ANR	5008523	Identifier	code		5008341	0					
ANR	5008524	PrimaryExpression	0		5008341	1					
ANR	5008525	ReturnStatement	"return gs_rethrow ( code , ""Failed to create ICC profile from CIEA"" ) ;"	765:8:30034:30099	5008341	1	True				
ANR	5008526	CallExpression	"gs_rethrow ( code , ""Failed to create ICC profile from CIEA"" )"		5008341	0					
ANR	5008527	Callee	gs_rethrow		5008341	0					
ANR	5008528	Identifier	gs_rethrow		5008341	0					
ANR	5008529	ArgumentList	code		5008341	1					
ANR	5008530	Argument	code		5008341	0					
ANR	5008531	Identifier	code		5008341	0					
ANR	5008532	Argument	"""Failed to create ICC profile from CIEA"""		5008341	1					
ANR	5008533	PrimaryExpression	"""Failed to create ICC profile from CIEA"""		5008341	0					
ANR	5008534	ExpressionStatement	code = gsicc_init_profile_info ( ( * ppcs_icc ) -> cmm_icc_profile_data )	766:4:30105:30170	5008341	13	True				
ANR	5008535	AssignmentExpression	code = gsicc_init_profile_info ( ( * ppcs_icc ) -> cmm_icc_profile_data )		5008341	0		=			
ANR	5008536	Identifier	code		5008341	0					
ANR	5008537	CallExpression	gsicc_init_profile_info ( ( * ppcs_icc ) -> cmm_icc_profile_data )		5008341	1					
ANR	5008538	Callee	gsicc_init_profile_info		5008341	0					
ANR	5008539	Identifier	gsicc_init_profile_info		5008341	0					
ANR	5008540	ArgumentList	( * ppcs_icc ) -> cmm_icc_profile_data		5008341	1					
ANR	5008541	Argument	( * ppcs_icc ) -> cmm_icc_profile_data		5008341	0					
ANR	5008542	PtrMemberAccess	( * ppcs_icc ) -> cmm_icc_profile_data		5008341	0					
ANR	5008543	UnaryOperationExpression	* ppcs_icc		5008341	0					
ANR	5008544	UnaryOperator	*		5008341	0					
ANR	5008545	Identifier	ppcs_icc		5008341	1					
ANR	5008546	Identifier	cmm_icc_profile_data		5008341	1					
ANR	5008547	IfStatement	if ( code < 0 )		5008341	14					
ANR	5008548	Condition	code < 0	767:8:30180:30187	5008341	0	True				
ANR	5008549	RelationalExpression	code < 0		5008341	0		<			
ANR	5008550	Identifier	code		5008341	0					
ANR	5008551	PrimaryExpression	0		5008341	1					
ANR	5008552	ReturnStatement	"return gs_rethrow ( code , ""Failed to build ICC profile from CIEDEF"" ) ;"	768:8:30198:30264	5008341	1	True				
ANR	5008553	CallExpression	"gs_rethrow ( code , ""Failed to build ICC profile from CIEDEF"" )"		5008341	0					
ANR	5008554	Callee	gs_rethrow		5008341	0					
ANR	5008555	Identifier	gs_rethrow		5008341	0					
ANR	5008556	ArgumentList	code		5008341	1					
ANR	5008557	Argument	code		5008341	0					
ANR	5008558	Identifier	code		5008341	0					
ANR	5008559	Argument	"""Failed to build ICC profile from CIEDEF"""		5008341	1					
ANR	5008560	PrimaryExpression	"""Failed to build ICC profile from CIEDEF"""		5008341	0					
ANR	5008561	ExpressionStatement	( * ppcs_icc ) -> cmm_icc_profile_data -> default_match = CIE_A	769:4:30270:30326	5008341	15	True				
ANR	5008562	AssignmentExpression	( * ppcs_icc ) -> cmm_icc_profile_data -> default_match = CIE_A		5008341	0		=			
ANR	5008563	PtrMemberAccess	( * ppcs_icc ) -> cmm_icc_profile_data -> default_match		5008341	0					
ANR	5008564	PtrMemberAccess	( * ppcs_icc ) -> cmm_icc_profile_data		5008341	0					
ANR	5008565	UnaryOperationExpression	* ppcs_icc		5008341	0					
ANR	5008566	UnaryOperator	*		5008341	0					
ANR	5008567	Identifier	ppcs_icc		5008341	1					
ANR	5008568	Identifier	cmm_icc_profile_data		5008341	1					
ANR	5008569	Identifier	default_match		5008341	1					
ANR	5008570	Identifier	CIE_A		5008341	1					
ANR	5008571	ExpressionStatement	pcs -> icc_equivalent = * ppcs_icc	771:4:30387:30418	5008341	16	True				
ANR	5008572	AssignmentExpression	pcs -> icc_equivalent = * ppcs_icc		5008341	0		=			
ANR	5008573	PtrMemberAccess	pcs -> icc_equivalent		5008341	0					
ANR	5008574	Identifier	pcs		5008341	0					
ANR	5008575	Identifier	icc_equivalent		5008341	1					
ANR	5008576	UnaryOperationExpression	* ppcs_icc		5008341	1					
ANR	5008577	UnaryOperator	*		5008341	0					
ANR	5008578	Identifier	ppcs_icc		5008341	1					
ANR	5008579	ExpressionStatement	pcs -> icc_equivalent -> cmm_icc_profile_data -> data_cs = gsGRAY	772:4:30424:30483	5008341	17	True				
ANR	5008580	AssignmentExpression	pcs -> icc_equivalent -> cmm_icc_profile_data -> data_cs = gsGRAY		5008341	0		=			
ANR	5008581	PtrMemberAccess	pcs -> icc_equivalent -> cmm_icc_profile_data -> data_cs		5008341	0					
ANR	5008582	PtrMemberAccess	pcs -> icc_equivalent -> cmm_icc_profile_data		5008341	0					
ANR	5008583	PtrMemberAccess	pcs -> icc_equivalent		5008341	0					
ANR	5008584	Identifier	pcs		5008341	0					
ANR	5008585	Identifier	icc_equivalent		5008341	1					
ANR	5008586	Identifier	cmm_icc_profile_data		5008341	1					
ANR	5008587	Identifier	data_cs		5008341	1					
ANR	5008588	Identifier	gsGRAY		5008341	1					
ANR	5008589	ReturnStatement	return 0 ;	773:4:30489:30497	5008341	18	True				
ANR	5008590	PrimaryExpression	0		5008341	0					
ANR	5008591	ReturnType	static int		5008341	1					
ANR	5008592	Identifier	gx_ciea_to_icc		5008341	2					
ANR	5008593	ParameterList	"gs_color_space * * ppcs_icc , gs_color_space * pcs , gs_memory_t * memory"		5008341	3					
ANR	5008594	Parameter	gs_color_space * * ppcs_icc	742:15:28890:28914	5008341	0	True				
ANR	5008595	ParameterType	gs_color_space * *		5008341	0					
ANR	5008596	Identifier	ppcs_icc		5008341	1					
ANR	5008597	Parameter	gs_color_space * pcs	742:42:28917:28935	5008341	1	True				
ANR	5008598	ParameterType	gs_color_space *		5008341	0					
ANR	5008599	Identifier	pcs		5008341	1					
ANR	5008600	Parameter	gs_memory_t * memory	742:63:28938:28956	5008341	2	True				
ANR	5008601	ParameterType	gs_memory_t *		5008341	0					
ANR	5008602	Identifier	memory		5008341	1					
ANR	5008603	CFGEntryNode	ENTRY		5008341		True				
ANR	5008604	CFGExitNode	EXIT		5008341		True				
ANR	5008605	Symbol	pcs -> params . a -> common . caches . DecodeLMN		5008341						
ANR	5008606	Symbol	& ( * ppcs_icc ) -> cmm_icc_profile_data -> buffer		5008341						
ANR	5008607	Symbol	memory		5008341						
ANR	5008608	Symbol	code		5008341						
ANR	5008609	Symbol	gsicc_create_froma		5008341						
ANR	5008610	Symbol	pcs -> icc_equivalent -> cmm_icc_profile_data -> data_cs		5008341						
ANR	5008611	Symbol	* pcs		5008341						
ANR	5008612	Symbol	& pcs -> params . a -> caches . DecodeA		5008341						
ANR	5008613	Symbol	gs_rethrow		5008341						
ANR	5008614	Symbol	* ( * ppcs_icc ) -> cmm_icc_profile_data		5008341						
ANR	5008615	Symbol	ppcs_icc		5008341						
ANR	5008616	Symbol	* * * ppcs_icc		5008341						
ANR	5008617	Symbol	pcs -> icc_equivalent -> cmm_icc_profile_data		5008341						
ANR	5008618	Symbol	* pcs -> icc_equivalent -> cmm_icc_profile_data		5008341						
ANR	5008619	Symbol	gs_debug_flag_icc		5008341						
ANR	5008620	Symbol	& pcs -> params . a -> caches		5008341						
ANR	5008621	Symbol	a_cache		5008341						
ANR	5008622	Symbol	pcs -> params . a -> caches		5008341						
ANR	5008623	Symbol	pcs -> params . a -> common		5008341						
ANR	5008624	Symbol	palt_cs		5008341						
ANR	5008625	Symbol	* * * pcs		5008341						
ANR	5008626	Symbol	* pcs -> params . a		5008341						
ANR	5008627	Symbol	pcs		5008341						
ANR	5008628	Symbol	* * ppcs_icc		5008341						
ANR	5008629	Symbol	NULL		5008341						
ANR	5008630	Symbol	lmn_caches		5008341						
ANR	5008631	Symbol	* pcs -> icc_equivalent		5008341						
ANR	5008632	Symbol	pcs -> params		5008341						
ANR	5008633	Symbol	pcs -> params . a -> common . caches		5008341						
ANR	5008634	Symbol	( * ppcs_icc ) -> cmm_icc_profile_data -> default_match		5008341						
ANR	5008635	Symbol	pcs -> icc_equivalent		5008341						
ANR	5008636	Symbol	( * ppcs_icc ) -> cmm_icc_profile_data		5008341						
ANR	5008637	Symbol	gs_error_VMerror		5008341						
ANR	5008638	Symbol	pcs -> base_space		5008341						
ANR	5008639	Symbol	CIE_A		5008341						
ANR	5008640	Symbol	* pcs -> params		5008341						
ANR	5008641	Symbol	* * pcs		5008341						
ANR	5008642	Symbol	gsicc_init_profile_info		5008341						
ANR	5008643	Symbol	gsGRAY		5008341						
ANR	5008644	Symbol	gs_cspace_build_ICC		5008341						
ANR	5008645	Symbol	* ppcs_icc		5008341						
ANR	5008646	Symbol	pcs -> params . a		5008341						
ANR	5008647	Symbol	( * ppcs_icc ) -> base_space		5008341						
ANR	5008648	Symbol	& ( * ppcs_icc ) -> cmm_icc_profile_data -> buffer_size		5008341						
ANR	5008649	Symbol	gsicc_profile_new		5008341						
ANR	5008650	Symbol	* * pcs -> icc_equivalent		5008341						
ANR	5008651	Function	gx_remap_CIEA	776:0:30502:32077							
ANR	5008652	FunctionDef	"gx_remap_CIEA (const gs_client_color * pc , const gs_color_space * pcs_in , gx_device_color * pdc , const gs_gstate * pgs , gx_device * dev , gs_color_select_t select)"		5008651	0					
ANR	5008653	CompoundStatement		780:0:30692:32077	5008651	0					
ANR	5008654	IdentifierDeclStatement	int code ;	781:4:30698:30706	5008651	0	True				
ANR	5008655	IdentifierDecl	code		5008651	0					
ANR	5008656	IdentifierDeclType	int		5008651	0					
ANR	5008657	Identifier	code		5008651	1					
ANR	5008658	IdentifierDeclStatement	gs_color_space * pcs_icc ;	782:4:30712:30735	5008651	1	True				
ANR	5008659	IdentifierDecl	* pcs_icc		5008651	0					
ANR	5008660	IdentifierDeclType	gs_color_space *		5008651	0					
ANR	5008661	Identifier	pcs_icc		5008651	1					
ANR	5008662	IdentifierDeclStatement	gs_client_color scale_pc ;	783:4:30741:30765	5008651	2	True				
ANR	5008663	IdentifierDecl	scale_pc		5008651	0					
ANR	5008664	IdentifierDeclType	gs_client_color		5008651	0					
ANR	5008665	Identifier	scale_pc		5008651	1					
ANR	5008666	IdentifierDeclStatement	gs_color_space * pcs = ( gs_color_space * ) pcs_in ;	784:4:30771:30818	5008651	3	True				
ANR	5008667	IdentifierDecl	* pcs = ( gs_color_space * ) pcs_in		5008651	0					
ANR	5008668	IdentifierDeclType	gs_color_space *		5008651	0					
ANR	5008669	Identifier	pcs		5008651	1					
ANR	5008670	AssignmentExpression	* pcs = ( gs_color_space * ) pcs_in		5008651	2		=			
ANR	5008671	Identifier	pcs		5008651	0					
ANR	5008672	CastExpression	( gs_color_space * ) pcs_in		5008651	1					
ANR	5008673	CastTarget	gs_color_space *		5008651	0					
ANR	5008674	Identifier	pcs_in		5008651	1					
ANR	5008675	ExpressionStatement	"if_debug1m ( 'c' , dev -> memory , ""[c]remap CIEA [%g]\\n"" , pc -> paint . values [ 0 ] )"	786:4:30825:30897	5008651	4	True				
ANR	5008676	CallExpression	"if_debug1m ( 'c' , dev -> memory , ""[c]remap CIEA [%g]\\n"" , pc -> paint . values [ 0 ] )"		5008651	0					
ANR	5008677	Callee	if_debug1m		5008651	0					
ANR	5008678	Identifier	if_debug1m		5008651	0					
ANR	5008679	ArgumentList	'c'		5008651	1					
ANR	5008680	Argument	'c'		5008651	0					
ANR	5008681	PrimaryExpression	'c'		5008651	0					
ANR	5008682	Argument	dev -> memory		5008651	1					
ANR	5008683	PtrMemberAccess	dev -> memory		5008651	0					
ANR	5008684	Identifier	dev		5008651	0					
ANR	5008685	Identifier	memory		5008651	1					
ANR	5008686	Argument	"""[c]remap CIEA [%g]\\n"""		5008651	2					
ANR	5008687	PrimaryExpression	"""[c]remap CIEA [%g]\\n"""		5008651	0					
ANR	5008688	Argument	pc -> paint . values [ 0 ]		5008651	3					
ANR	5008689	ArrayIndexing	pc -> paint . values [ 0 ]		5008651	0					
ANR	5008690	MemberAccess	pc -> paint . values		5008651	0					
ANR	5008691	PtrMemberAccess	pc -> paint		5008651	0					
ANR	5008692	Identifier	pc		5008651	0					
ANR	5008693	Identifier	paint		5008651	1					
ANR	5008694	Identifier	values		5008651	1					
ANR	5008695	PrimaryExpression	0		5008651	1					
ANR	5008696	IfStatement	if ( pcs -> icc_equivalent == NULL )		5008651	5					
ANR	5008697	Condition	pcs -> icc_equivalent == NULL	790:8:31070:31096	5008651	0	True				
ANR	5008698	EqualityExpression	pcs -> icc_equivalent == NULL		5008651	0		==			
ANR	5008699	PtrMemberAccess	pcs -> icc_equivalent		5008651	0					
ANR	5008700	Identifier	pcs		5008651	0					
ANR	5008701	Identifier	icc_equivalent		5008651	1					
ANR	5008702	Identifier	NULL		5008651	1					
ANR	5008703	CompoundStatement		11:37:406:406	5008651	1					
ANR	5008704	ExpressionStatement	"code = gx_ciea_to_icc ( & pcs_icc , pcs , pgs -> memory -> stable_memory )"	791:8:31109:31173	5008651	0	True				
ANR	5008705	AssignmentExpression	"code = gx_ciea_to_icc ( & pcs_icc , pcs , pgs -> memory -> stable_memory )"		5008651	0		=			
ANR	5008706	Identifier	code		5008651	0					
ANR	5008707	CallExpression	"gx_ciea_to_icc ( & pcs_icc , pcs , pgs -> memory -> stable_memory )"		5008651	1					
ANR	5008708	Callee	gx_ciea_to_icc		5008651	0					
ANR	5008709	Identifier	gx_ciea_to_icc		5008651	0					
ANR	5008710	ArgumentList	& pcs_icc		5008651	1					
ANR	5008711	Argument	& pcs_icc		5008651	0					
ANR	5008712	UnaryOperationExpression	& pcs_icc		5008651	0					
ANR	5008713	UnaryOperator	&		5008651	0					
ANR	5008714	Identifier	pcs_icc		5008651	1					
ANR	5008715	Argument	pcs		5008651	1					
ANR	5008716	Identifier	pcs		5008651	0					
ANR	5008717	Argument	pgs -> memory -> stable_memory		5008651	2					
ANR	5008718	PtrMemberAccess	pgs -> memory -> stable_memory		5008651	0					
ANR	5008719	PtrMemberAccess	pgs -> memory		5008651	0					
ANR	5008720	Identifier	pgs		5008651	0					
ANR	5008721	Identifier	memory		5008651	1					
ANR	5008722	Identifier	stable_memory		5008651	1					
ANR	5008723	IfStatement	if ( code < 0 )		5008651	1					
ANR	5008724	Condition	code < 0	792:12:31187:31194	5008651	0	True				
ANR	5008725	RelationalExpression	code < 0		5008651	0		<			
ANR	5008726	Identifier	code		5008651	0					
ANR	5008727	PrimaryExpression	0		5008651	1					
ANR	5008728	ReturnStatement	"return gs_rethrow ( code , ""Failed to create ICC profile from CIEA"" ) ;"	793:12:31209:31274	5008651	1	True				
ANR	5008729	CallExpression	"gs_rethrow ( code , ""Failed to create ICC profile from CIEA"" )"		5008651	0					
ANR	5008730	Callee	gs_rethrow		5008651	0					
ANR	5008731	Identifier	gs_rethrow		5008651	0					
ANR	5008732	ArgumentList	code		5008651	1					
ANR	5008733	Argument	code		5008651	0					
ANR	5008734	Identifier	code		5008651	0					
ANR	5008735	Argument	"""Failed to create ICC profile from CIEA"""		5008651	1					
ANR	5008736	PrimaryExpression	"""Failed to create ICC profile from CIEA"""		5008651	0					
ANR	5008737	ElseStatement	else		5008651	0					
ANR	5008738	CompoundStatement		15:11:594:594	5008651	0					
ANR	5008739	ExpressionStatement	pcs_icc = pcs -> icc_equivalent	796:8:31405:31434	5008651	0	True				
ANR	5008740	AssignmentExpression	pcs_icc = pcs -> icc_equivalent		5008651	0		=			
ANR	5008741	Identifier	pcs_icc		5008651	0					
ANR	5008742	PtrMemberAccess	pcs -> icc_equivalent		5008651	1					
ANR	5008743	Identifier	pcs		5008651	0					
ANR	5008744	Identifier	icc_equivalent		5008651	1					
ANR	5008745	IfStatement	"if ( check_range ( & ( pcs -> params . a -> RangeA ) , 1 ) )"		5008651	6					
ANR	5008746	Condition	"check_range ( & ( pcs -> params . a -> RangeA ) , 1 )"	800:8:31569:31608	5008651	0	True				
ANR	5008747	CallExpression	"check_range ( & ( pcs -> params . a -> RangeA ) , 1 )"		5008651	0					
ANR	5008748	Callee	check_range		5008651	0					
ANR	5008749	Identifier	check_range		5008651	0					
ANR	5008750	ArgumentList	& ( pcs -> params . a -> RangeA )		5008651	1					
ANR	5008751	Argument	& ( pcs -> params . a -> RangeA )		5008651	0					
ANR	5008752	UnaryOperationExpression	& ( pcs -> params . a -> RangeA )		5008651	0					
ANR	5008753	UnaryOperator	&		5008651	0					
ANR	5008754	PtrMemberAccess	pcs -> params . a -> RangeA		5008651	1					
ANR	5008755	MemberAccess	pcs -> params . a		5008651	0					
ANR	5008756	PtrMemberAccess	pcs -> params		5008651	0					
ANR	5008757	Identifier	pcs		5008651	0					
ANR	5008758	Identifier	params		5008651	1					
ANR	5008759	Identifier	a		5008651	1					
ANR	5008760	Identifier	RangeA		5008651	1					
ANR	5008761	Argument	1		5008651	1					
ANR	5008762	PrimaryExpression	1		5008651	0					
ANR	5008763	CompoundStatement		21:50:918:918	5008651	1					
ANR	5008764	ReturnStatement	"return ( pcs_icc -> type -> remap_color ) ( pc , pcs_icc , pdc , pgs , dev , select ) ;"	801:8:31621:31687	5008651	0	True				
ANR	5008765	CallExpression	"( pcs_icc -> type -> remap_color ) ( pc , pcs_icc , pdc , pgs , dev , select )"		5008651	0					
ANR	5008766	Callee	pcs_icc -> type -> remap_color		5008651	0					
ANR	5008767	PtrMemberAccess	pcs_icc -> type -> remap_color		5008651	0					
ANR	5008768	PtrMemberAccess	pcs_icc -> type		5008651	0					
ANR	5008769	Identifier	pcs_icc		5008651	0					
ANR	5008770	Identifier	type		5008651	1					
ANR	5008771	Identifier	remap_color		5008651	1					
ANR	5008772	ArgumentList	pc		5008651	1					
ANR	5008773	Argument	pc		5008651	0					
ANR	5008774	Identifier	pc		5008651	0					
ANR	5008775	Argument	pcs_icc		5008651	1					
ANR	5008776	Identifier	pcs_icc		5008651	0					
ANR	5008777	Argument	pdc		5008651	2					
ANR	5008778	Identifier	pdc		5008651	0					
ANR	5008779	Argument	pgs		5008651	3					
ANR	5008780	Identifier	pgs		5008651	0					
ANR	5008781	Argument	dev		5008651	4					
ANR	5008782	Identifier	dev		5008651	0					
ANR	5008783	Argument	select		5008651	5					
ANR	5008784	Identifier	select		5008651	0					
ANR	5008785	ExpressionStatement	"rescale_input_color ( & ( pcs -> params . a -> RangeA ) , 1 , pc , & scale_pc )"	804:4:31736:31799	5008651	7	True				
ANR	5008786	CallExpression	"rescale_input_color ( & ( pcs -> params . a -> RangeA ) , 1 , pc , & scale_pc )"		5008651	0					
ANR	5008787	Callee	rescale_input_color		5008651	0					
ANR	5008788	Identifier	rescale_input_color		5008651	0					
ANR	5008789	ArgumentList	& ( pcs -> params . a -> RangeA )		5008651	1					
ANR	5008790	Argument	& ( pcs -> params . a -> RangeA )		5008651	0					
ANR	5008791	UnaryOperationExpression	& ( pcs -> params . a -> RangeA )		5008651	0					
ANR	5008792	UnaryOperator	&		5008651	0					
ANR	5008793	PtrMemberAccess	pcs -> params . a -> RangeA		5008651	1					
ANR	5008794	MemberAccess	pcs -> params . a		5008651	0					
ANR	5008795	PtrMemberAccess	pcs -> params		5008651	0					
ANR	5008796	Identifier	pcs		5008651	0					
ANR	5008797	Identifier	params		5008651	1					
ANR	5008798	Identifier	a		5008651	1					
ANR	5008799	Identifier	RangeA		5008651	1					
ANR	5008800	Argument	1		5008651	1					
ANR	5008801	PrimaryExpression	1		5008651	0					
ANR	5008802	Argument	pc		5008651	2					
ANR	5008803	Identifier	pc		5008651	0					
ANR	5008804	Argument	& scale_pc		5008651	3					
ANR	5008805	UnaryOperationExpression	& scale_pc		5008651	0					
ANR	5008806	UnaryOperator	&		5008651	0					
ANR	5008807	Identifier	scale_pc		5008651	1					
ANR	5008808	ExpressionStatement	"code = ( pcs_icc -> type -> remap_color ) ( & scale_pc , pcs_icc , pdc , pgs , dev , select )"	806:4:31833:31906	5008651	8	True				
ANR	5008809	AssignmentExpression	"code = ( pcs_icc -> type -> remap_color ) ( & scale_pc , pcs_icc , pdc , pgs , dev , select )"		5008651	0		=			
ANR	5008810	Identifier	code		5008651	0					
ANR	5008811	CallExpression	"( pcs_icc -> type -> remap_color ) ( & scale_pc , pcs_icc , pdc , pgs , dev , select )"		5008651	1					
ANR	5008812	Callee	pcs_icc -> type -> remap_color		5008651	0					
ANR	5008813	PtrMemberAccess	pcs_icc -> type -> remap_color		5008651	0					
ANR	5008814	PtrMemberAccess	pcs_icc -> type		5008651	0					
ANR	5008815	Identifier	pcs_icc		5008651	0					
ANR	5008816	Identifier	type		5008651	1					
ANR	5008817	Identifier	remap_color		5008651	1					
ANR	5008818	ArgumentList	& scale_pc		5008651	1					
ANR	5008819	Argument	& scale_pc		5008651	0					
ANR	5008820	UnaryOperationExpression	& scale_pc		5008651	0					
ANR	5008821	UnaryOperator	&		5008651	0					
ANR	5008822	Identifier	scale_pc		5008651	1					
ANR	5008823	Argument	pcs_icc		5008651	1					
ANR	5008824	Identifier	pcs_icc		5008651	0					
ANR	5008825	Argument	pdc		5008651	2					
ANR	5008826	Identifier	pdc		5008651	0					
ANR	5008827	Argument	pgs		5008651	3					
ANR	5008828	Identifier	pgs		5008651	0					
ANR	5008829	Argument	dev		5008651	4					
ANR	5008830	Identifier	dev		5008651	0					
ANR	5008831	Argument	select		5008651	5					
ANR	5008832	Identifier	select		5008651	0					
ANR	5008833	ExpressionStatement	pdc -> ccolor . paint . values [ 0 ] = pc -> paint . values [ 0 ]	808:4:31979:32028	5008651	9	True				
ANR	5008834	AssignmentExpression	pdc -> ccolor . paint . values [ 0 ] = pc -> paint . values [ 0 ]		5008651	0		=			
ANR	5008835	ArrayIndexing	pdc -> ccolor . paint . values [ 0 ]		5008651	0					
ANR	5008836	MemberAccess	pdc -> ccolor . paint . values		5008651	0					
ANR	5008837	MemberAccess	pdc -> ccolor . paint		5008651	0					
ANR	5008838	PtrMemberAccess	pdc -> ccolor		5008651	0					
ANR	5008839	Identifier	pdc		5008651	0					
ANR	5008840	Identifier	ccolor		5008651	1					
ANR	5008841	Identifier	paint		5008651	1					
ANR	5008842	Identifier	values		5008651	1					
ANR	5008843	PrimaryExpression	0		5008651	1					
ANR	5008844	ArrayIndexing	pc -> paint . values [ 0 ]		5008651	1					
ANR	5008845	MemberAccess	pc -> paint . values		5008651	0					
ANR	5008846	PtrMemberAccess	pc -> paint		5008651	0					
ANR	5008847	Identifier	pc		5008651	0					
ANR	5008848	Identifier	paint		5008651	1					
ANR	5008849	Identifier	values		5008651	1					
ANR	5008850	PrimaryExpression	0		5008651	1					
ANR	5008851	ExpressionStatement	pdc -> ccolor_valid = true	809:4:32034:32058	5008651	10	True				
ANR	5008852	AssignmentExpression	pdc -> ccolor_valid = true		5008651	0		=			
ANR	5008853	PtrMemberAccess	pdc -> ccolor_valid		5008651	0					
ANR	5008854	Identifier	pdc		5008651	0					
ANR	5008855	Identifier	ccolor_valid		5008651	1					
ANR	5008856	Identifier	true		5008651	1					
ANR	5008857	ReturnStatement	return code ;	810:4:32064:32075	5008651	11	True				
ANR	5008858	Identifier	code		5008651	0					
ANR	5008859	ReturnType	int		5008651	1					
ANR	5008860	Identifier	gx_remap_CIEA		5008651	2					
ANR	5008861	ParameterList	"const gs_client_color * pc , const gs_color_space * pcs_in , gx_device_color * pdc , const gs_gstate * pgs , gx_device * dev , gs_color_select_t select"		5008651	3					
ANR	5008862	Parameter	const gs_client_color * pc	777:14:30520:30545	5008651	0	True				
ANR	5008863	ParameterType	const gs_client_color *		5008651	0					
ANR	5008864	Identifier	pc		5008651	1					
ANR	5008865	Parameter	const gs_color_space * pcs_in	777:42:30548:30576	5008651	1	True				
ANR	5008866	ParameterType	const gs_color_space *		5008651	0					
ANR	5008867	Identifier	pcs_in		5008651	1					
ANR	5008868	Parameter	gx_device_color * pdc	778:8:30587:30607	5008651	2	True				
ANR	5008869	ParameterType	gx_device_color *		5008651	0					
ANR	5008870	Identifier	pdc		5008651	1					
ANR	5008871	Parameter	const gs_gstate * pgs	778:31:30610:30630	5008651	3	True				
ANR	5008872	ParameterType	const gs_gstate *		5008651	0					
ANR	5008873	Identifier	pgs		5008651	1					
ANR	5008874	Parameter	gx_device * dev	778:54:30633:30647	5008651	4	True				
ANR	5008875	ParameterType	gx_device *		5008651	0					
ANR	5008876	Identifier	dev		5008651	1					
ANR	5008877	Parameter	gs_color_select_t select	779:16:30666:30689	5008651	5	True				
ANR	5008878	ParameterType	gs_color_select_t		5008651	0					
ANR	5008879	Identifier	select		5008651	1					
ANR	5008880	CFGEntryNode	ENTRY		5008651		True				
ANR	5008881	CFGExitNode	EXIT		5008651		True				
ANR	5008882	Symbol	* * pcs_icc		5008651						
ANR	5008883	Symbol	pcs_icc		5008651						
ANR	5008884	Symbol	select		5008651						
ANR	5008885	Symbol	* pgs		5008651						
ANR	5008886	Symbol	* pcs		5008651						
ANR	5008887	Symbol	gs_rethrow		5008651						
ANR	5008888	Symbol	& scale_pc		5008651						
ANR	5008889	Symbol	* pc -> paint . values		5008651						
ANR	5008890	Symbol	pdc -> ccolor . paint		5008651						
ANR	5008891	Symbol	dev		5008651						
ANR	5008892	Symbol	* pdc		5008651						
ANR	5008893	Symbol	pcs_icc -> type -> remap_color		5008651						
ANR	5008894	Symbol	* pgs -> memory		5008651						
ANR	5008895	Symbol	pcs_in		5008651						
ANR	5008896	Symbol	NULL		5008651						
ANR	5008897	Symbol	* pdc -> ccolor . paint . values		5008651						
ANR	5008898	Symbol	* * pgs		5008651						
ANR	5008899	Symbol	* pdc -> ccolor		5008651						
ANR	5008900	Symbol	true		5008651						
ANR	5008901	Symbol	* pc		5008651						
ANR	5008902	Symbol	* pcs_icc		5008651						
ANR	5008903	Symbol	* dev		5008651						
ANR	5008904	Symbol	code		5008651						
ANR	5008905	Symbol	* * pdc		5008651						
ANR	5008906	Symbol	& pcs -> params . a -> RangeA		5008651						
ANR	5008907	Symbol	* pc -> paint		5008651						
ANR	5008908	Symbol	& pcs_icc		5008651						
ANR	5008909	Symbol	pcs_icc -> type		5008651						
ANR	5008910	Symbol	pdc -> ccolor_valid		5008651						
ANR	5008911	Symbol	pgs		5008651						
ANR	5008912	Symbol	* * pc		5008651						
ANR	5008913	Symbol	pgs -> memory		5008651						
ANR	5008914	Symbol	scale_pc		5008651						
ANR	5008915	Symbol	check_range		5008651						
ANR	5008916	Symbol	pcs		5008651						
ANR	5008917	Symbol	* pdc -> ccolor . paint		5008651						
ANR	5008918	Symbol	pdc -> ccolor . paint . values		5008651						
ANR	5008919	Symbol	pcs -> params		5008651						
ANR	5008920	Symbol	* pcs_icc -> type		5008651						
ANR	5008921	Symbol	pc -> paint . values		5008651						
ANR	5008922	Symbol	pcs -> icc_equivalent		5008651						
ANR	5008923	Symbol	pdc		5008651						
ANR	5008924	Symbol	pc -> paint		5008651						
ANR	5008925	Symbol	dev -> memory		5008651						
ANR	5008926	Symbol	pc		5008651						
ANR	5008927	Symbol	gx_ciea_to_icc		5008651						
ANR	5008928	Symbol	pcs -> params . a		5008651						
ANR	5008929	Symbol	pdc -> ccolor		5008651						
ANR	5008930	Symbol	pgs -> memory -> stable_memory		5008651						
ANR	5008931	Function	gx_concretize_CIEA	814:0:32112:33496							
ANR	5008932	FunctionDef	"gx_concretize_CIEA (const gs_client_color * pc , const gs_color_space * pcs_in , frac * pconc , const gs_gstate * pgs , gx_device * dev)"		5008931	0					
ANR	5008933	CompoundStatement		817:0:32266:33496	5008931	0					
ANR	5008934	IdentifierDeclStatement	int code = 0 ;	818:4:32272:32284	5008931	0	True				
ANR	5008935	IdentifierDecl	code = 0		5008931	0					
ANR	5008936	IdentifierDeclType	int		5008931	0					
ANR	5008937	Identifier	code		5008931	1					
ANR	5008938	AssignmentExpression	code = 0		5008931	2		=			
ANR	5008939	Identifier	code		5008931	0					
ANR	5008940	PrimaryExpression	0		5008931	1					
ANR	5008941	IdentifierDeclStatement	gs_color_space * pcs_icc ;	819:4:32290:32313	5008931	1	True				
ANR	5008942	IdentifierDecl	* pcs_icc		5008931	0					
ANR	5008943	IdentifierDeclType	gs_color_space *		5008931	0					
ANR	5008944	Identifier	pcs_icc		5008931	1					
ANR	5008945	IdentifierDeclStatement	gs_client_color scale_pc ;	820:4:32319:32343	5008931	2	True				
ANR	5008946	IdentifierDecl	scale_pc		5008931	0					
ANR	5008947	IdentifierDeclType	gs_client_color		5008931	0					
ANR	5008948	Identifier	scale_pc		5008931	1					
ANR	5008949	IdentifierDeclStatement	gs_color_space * pcs = ( gs_color_space * ) pcs_in ;	821:4:32349:32396	5008931	3	True				
ANR	5008950	IdentifierDecl	* pcs = ( gs_color_space * ) pcs_in		5008931	0					
ANR	5008951	IdentifierDeclType	gs_color_space *		5008931	0					
ANR	5008952	Identifier	pcs		5008931	1					
ANR	5008953	AssignmentExpression	* pcs = ( gs_color_space * ) pcs_in		5008931	2		=			
ANR	5008954	Identifier	pcs		5008931	0					
ANR	5008955	CastExpression	( gs_color_space * ) pcs_in		5008931	1					
ANR	5008956	CastTarget	gs_color_space *		5008931	0					
ANR	5008957	Identifier	pcs_in		5008931	1					
ANR	5008958	ExpressionStatement	"if_debug1m ( 'c' , dev -> memory , ""[c]concretize CIEA %g\\n"" , pc -> paint . values [ 0 ] )"	823:4:32403:32479	5008931	4	True				
ANR	5008959	CallExpression	"if_debug1m ( 'c' , dev -> memory , ""[c]concretize CIEA %g\\n"" , pc -> paint . values [ 0 ] )"		5008931	0					
ANR	5008960	Callee	if_debug1m		5008931	0					
ANR	5008961	Identifier	if_debug1m		5008931	0					
ANR	5008962	ArgumentList	'c'		5008931	1					
ANR	5008963	Argument	'c'		5008931	0					
ANR	5008964	PrimaryExpression	'c'		5008931	0					
ANR	5008965	Argument	dev -> memory		5008931	1					
ANR	5008966	PtrMemberAccess	dev -> memory		5008931	0					
ANR	5008967	Identifier	dev		5008931	0					
ANR	5008968	Identifier	memory		5008931	1					
ANR	5008969	Argument	"""[c]concretize CIEA %g\\n"""		5008931	2					
ANR	5008970	PrimaryExpression	"""[c]concretize CIEA %g\\n"""		5008931	0					
ANR	5008971	Argument	pc -> paint . values [ 0 ]		5008931	3					
ANR	5008972	ArrayIndexing	pc -> paint . values [ 0 ]		5008931	0					
ANR	5008973	MemberAccess	pc -> paint . values		5008931	0					
ANR	5008974	PtrMemberAccess	pc -> paint		5008931	0					
ANR	5008975	Identifier	pc		5008931	0					
ANR	5008976	Identifier	paint		5008931	1					
ANR	5008977	Identifier	values		5008931	1					
ANR	5008978	PrimaryExpression	0		5008931	1					
ANR	5008979	IfStatement	if ( pcs -> icc_equivalent == NULL )		5008931	5					
ANR	5008980	Condition	pcs -> icc_equivalent == NULL	827:8:32650:32676	5008931	0	True				
ANR	5008981	EqualityExpression	pcs -> icc_equivalent == NULL		5008931	0		==			
ANR	5008982	PtrMemberAccess	pcs -> icc_equivalent		5008931	0					
ANR	5008983	Identifier	pcs		5008931	0					
ANR	5008984	Identifier	icc_equivalent		5008931	1					
ANR	5008985	Identifier	NULL		5008931	1					
ANR	5008986	CompoundStatement		11:37:412:412	5008931	1					
ANR	5008987	ExpressionStatement	"code = gx_ciea_to_icc ( & pcs_icc , pcs , pgs -> memory -> stable_memory )"	828:8:32689:32753	5008931	0	True				
ANR	5008988	AssignmentExpression	"code = gx_ciea_to_icc ( & pcs_icc , pcs , pgs -> memory -> stable_memory )"		5008931	0		=			
ANR	5008989	Identifier	code		5008931	0					
ANR	5008990	CallExpression	"gx_ciea_to_icc ( & pcs_icc , pcs , pgs -> memory -> stable_memory )"		5008931	1					
ANR	5008991	Callee	gx_ciea_to_icc		5008931	0					
ANR	5008992	Identifier	gx_ciea_to_icc		5008931	0					
ANR	5008993	ArgumentList	& pcs_icc		5008931	1					
ANR	5008994	Argument	& pcs_icc		5008931	0					
ANR	5008995	UnaryOperationExpression	& pcs_icc		5008931	0					
ANR	5008996	UnaryOperator	&		5008931	0					
ANR	5008997	Identifier	pcs_icc		5008931	1					
ANR	5008998	Argument	pcs		5008931	1					
ANR	5008999	Identifier	pcs		5008931	0					
ANR	5009000	Argument	pgs -> memory -> stable_memory		5008931	2					
ANR	5009001	PtrMemberAccess	pgs -> memory -> stable_memory		5008931	0					
ANR	5009002	PtrMemberAccess	pgs -> memory		5008931	0					
ANR	5009003	Identifier	pgs		5008931	0					
ANR	5009004	Identifier	memory		5008931	1					
ANR	5009005	Identifier	stable_memory		5008931	1					
ANR	5009006	IfStatement	if ( code < 0 )		5008931	1					
ANR	5009007	Condition	code < 0	829:12:32767:32774	5008931	0	True				
ANR	5009008	RelationalExpression	code < 0		5008931	0		<			
ANR	5009009	Identifier	code		5008931	0					
ANR	5009010	PrimaryExpression	0		5008931	1					
ANR	5009011	ReturnStatement	"return gs_rethrow ( code , ""Failed to create ICC profile from CIEA"" ) ;"	830:12:32789:32854	5008931	1	True				
ANR	5009012	CallExpression	"gs_rethrow ( code , ""Failed to create ICC profile from CIEA"" )"		5008931	0					
ANR	5009013	Callee	gs_rethrow		5008931	0					
ANR	5009014	Identifier	gs_rethrow		5008931	0					
ANR	5009015	ArgumentList	code		5008931	1					
ANR	5009016	Argument	code		5008931	0					
ANR	5009017	Identifier	code		5008931	0					
ANR	5009018	Argument	"""Failed to create ICC profile from CIEA"""		5008931	1					
ANR	5009019	PrimaryExpression	"""Failed to create ICC profile from CIEA"""		5008931	0					
ANR	5009020	ElseStatement	else		5008931	0					
ANR	5009021	CompoundStatement		15:11:600:600	5008931	0					
ANR	5009022	ExpressionStatement	pcs_icc = pcs -> icc_equivalent	833:8:32985:33014	5008931	0	True				
ANR	5009023	AssignmentExpression	pcs_icc = pcs -> icc_equivalent		5008931	0		=			
ANR	5009024	Identifier	pcs_icc		5008931	0					
ANR	5009025	PtrMemberAccess	pcs -> icc_equivalent		5008931	1					
ANR	5009026	Identifier	pcs		5008931	0					
ANR	5009027	Identifier	icc_equivalent		5008931	1					
ANR	5009028	IfStatement	"if ( check_range ( & ( pcs -> params . a -> RangeA ) , 1 ) )"		5008931	6					
ANR	5009029	Condition	"check_range ( & ( pcs -> params . a -> RangeA ) , 1 )"	837:8:33149:33188	5008931	0	True				
ANR	5009030	CallExpression	"check_range ( & ( pcs -> params . a -> RangeA ) , 1 )"		5008931	0					
ANR	5009031	Callee	check_range		5008931	0					
ANR	5009032	Identifier	check_range		5008931	0					
ANR	5009033	ArgumentList	& ( pcs -> params . a -> RangeA )		5008931	1					
ANR	5009034	Argument	& ( pcs -> params . a -> RangeA )		5008931	0					
ANR	5009035	UnaryOperationExpression	& ( pcs -> params . a -> RangeA )		5008931	0					
ANR	5009036	UnaryOperator	&		5008931	0					
ANR	5009037	PtrMemberAccess	pcs -> params . a -> RangeA		5008931	1					
ANR	5009038	MemberAccess	pcs -> params . a		5008931	0					
ANR	5009039	PtrMemberAccess	pcs -> params		5008931	0					
ANR	5009040	Identifier	pcs		5008931	0					
ANR	5009041	Identifier	params		5008931	1					
ANR	5009042	Identifier	a		5008931	1					
ANR	5009043	Identifier	RangeA		5008931	1					
ANR	5009044	Argument	1		5008931	1					
ANR	5009045	PrimaryExpression	1		5008931	0					
ANR	5009046	CompoundStatement		21:50:924:924	5008931	1					
ANR	5009047	ReturnStatement	"return ( pcs_icc -> type -> concretize_color ) ( pc , pcs_icc , pconc , pgs , dev ) ;"	838:8:33201:33271	5008931	0	True				
ANR	5009048	CallExpression	"( pcs_icc -> type -> concretize_color ) ( pc , pcs_icc , pconc , pgs , dev )"		5008931	0					
ANR	5009049	Callee	pcs_icc -> type -> concretize_color		5008931	0					
ANR	5009050	PtrMemberAccess	pcs_icc -> type -> concretize_color		5008931	0					
ANR	5009051	PtrMemberAccess	pcs_icc -> type		5008931	0					
ANR	5009052	Identifier	pcs_icc		5008931	0					
ANR	5009053	Identifier	type		5008931	1					
ANR	5009054	Identifier	concretize_color		5008931	1					
ANR	5009055	ArgumentList	pc		5008931	1					
ANR	5009056	Argument	pc		5008931	0					
ANR	5009057	Identifier	pc		5008931	0					
ANR	5009058	Argument	pcs_icc		5008931	1					
ANR	5009059	Identifier	pcs_icc		5008931	0					
ANR	5009060	Argument	pconc		5008931	2					
ANR	5009061	Identifier	pconc		5008931	0					
ANR	5009062	Argument	pgs		5008931	3					
ANR	5009063	Identifier	pgs		5008931	0					
ANR	5009064	Argument	dev		5008931	4					
ANR	5009065	Identifier	dev		5008931	0					
ANR	5009066	ExpressionStatement	"rescale_input_color ( & ( pcs -> params . a -> RangeA ) , 1 , pc , & scale_pc )"	841:4:33320:33383	5008931	7	True				
ANR	5009067	CallExpression	"rescale_input_color ( & ( pcs -> params . a -> RangeA ) , 1 , pc , & scale_pc )"		5008931	0					
ANR	5009068	Callee	rescale_input_color		5008931	0					
ANR	5009069	Identifier	rescale_input_color		5008931	0					
ANR	5009070	ArgumentList	& ( pcs -> params . a -> RangeA )		5008931	1					
ANR	5009071	Argument	& ( pcs -> params . a -> RangeA )		5008931	0					
ANR	5009072	UnaryOperationExpression	& ( pcs -> params . a -> RangeA )		5008931	0					
ANR	5009073	UnaryOperator	&		5008931	0					
ANR	5009074	PtrMemberAccess	pcs -> params . a -> RangeA		5008931	1					
ANR	5009075	MemberAccess	pcs -> params . a		5008931	0					
ANR	5009076	PtrMemberAccess	pcs -> params		5008931	0					
ANR	5009077	Identifier	pcs		5008931	0					
ANR	5009078	Identifier	params		5008931	1					
ANR	5009079	Identifier	a		5008931	1					
ANR	5009080	Identifier	RangeA		5008931	1					
ANR	5009081	Argument	1		5008931	1					
ANR	5009082	PrimaryExpression	1		5008931	0					
ANR	5009083	Argument	pc		5008931	2					
ANR	5009084	Identifier	pc		5008931	0					
ANR	5009085	Argument	& scale_pc		5008931	3					
ANR	5009086	UnaryOperationExpression	& scale_pc		5008931	0					
ANR	5009087	UnaryOperator	&		5008931	0					
ANR	5009088	Identifier	scale_pc		5008931	1					
ANR	5009089	ReturnStatement	"return ( pcs_icc -> type -> concretize_color ) ( & scale_pc , pcs_icc , pconc , pgs , dev ) ;"	843:4:33417:33494	5008931	8	True				
ANR	5009090	CallExpression	"( pcs_icc -> type -> concretize_color ) ( & scale_pc , pcs_icc , pconc , pgs , dev )"		5008931	0					
ANR	5009091	Callee	pcs_icc -> type -> concretize_color		5008931	0					
ANR	5009092	PtrMemberAccess	pcs_icc -> type -> concretize_color		5008931	0					
ANR	5009093	PtrMemberAccess	pcs_icc -> type		5008931	0					
ANR	5009094	Identifier	pcs_icc		5008931	0					
ANR	5009095	Identifier	type		5008931	1					
ANR	5009096	Identifier	concretize_color		5008931	1					
ANR	5009097	ArgumentList	& scale_pc		5008931	1					
ANR	5009098	Argument	& scale_pc		5008931	0					
ANR	5009099	UnaryOperationExpression	& scale_pc		5008931	0					
ANR	5009100	UnaryOperator	&		5008931	0					
ANR	5009101	Identifier	scale_pc		5008931	1					
ANR	5009102	Argument	pcs_icc		5008931	1					
ANR	5009103	Identifier	pcs_icc		5008931	0					
ANR	5009104	Argument	pconc		5008931	2					
ANR	5009105	Identifier	pconc		5008931	0					
ANR	5009106	Argument	pgs		5008931	3					
ANR	5009107	Identifier	pgs		5008931	0					
ANR	5009108	Argument	dev		5008931	4					
ANR	5009109	Identifier	dev		5008931	0					
ANR	5009110	ReturnType	int		5008931	1					
ANR	5009111	Identifier	gx_concretize_CIEA		5008931	2					
ANR	5009112	ParameterList	"const gs_client_color * pc , const gs_color_space * pcs_in , frac * pconc , const gs_gstate * pgs , gx_device * dev"		5008931	3					
ANR	5009113	Parameter	const gs_client_color * pc	815:19:32135:32160	5008931	0	True				
ANR	5009114	ParameterType	const gs_client_color *		5008931	0					
ANR	5009115	Identifier	pc		5008931	1					
ANR	5009116	Parameter	const gs_color_space * pcs_in	815:47:32163:32191	5008931	1	True				
ANR	5009117	ParameterType	const gs_color_space *		5008931	0					
ANR	5009118	Identifier	pcs_in		5008931	1					
ANR	5009119	Parameter	frac * pconc	816:19:32213:32224	5008931	2	True				
ANR	5009120	ParameterType	frac *		5008931	0					
ANR	5009121	Identifier	pconc		5008931	1					
ANR	5009122	Parameter	const gs_gstate * pgs	816:33:32227:32247	5008931	3	True				
ANR	5009123	ParameterType	const gs_gstate *		5008931	0					
ANR	5009124	Identifier	pgs		5008931	1					
ANR	5009125	Parameter	gx_device * dev	816:56:32250:32263	5008931	4	True				
ANR	5009126	ParameterType	gx_device *		5008931	0					
ANR	5009127	Identifier	dev		5008931	1					
ANR	5009128	CFGEntryNode	ENTRY		5008931		True				
ANR	5009129	CFGExitNode	EXIT		5008931		True				
ANR	5009130	Symbol	* dev		5008931						
ANR	5009131	Symbol	* * pcs_icc		5008931						
ANR	5009132	Symbol	pcs_icc		5008931						
ANR	5009133	Symbol	code		5008931						
ANR	5009134	Symbol	& pcs -> params . a -> RangeA		5008931						
ANR	5009135	Symbol	* pc -> paint		5008931						
ANR	5009136	Symbol	* pgs		5008931						
ANR	5009137	Symbol	pconc		5008931						
ANR	5009138	Symbol	& pcs_icc		5008931						
ANR	5009139	Symbol	pcs_icc -> type		5008931						
ANR	5009140	Symbol	* pcs		5008931						
ANR	5009141	Symbol	gs_rethrow		5008931						
ANR	5009142	Symbol	& scale_pc		5008931						
ANR	5009143	Symbol	* pc -> paint . values		5008931						
ANR	5009144	Symbol	dev		5008931						
ANR	5009145	Symbol	pgs		5008931						
ANR	5009146	Symbol	* * pc		5008931						
ANR	5009147	Symbol	pgs -> memory		5008931						
ANR	5009148	Symbol	scale_pc		5008931						
ANR	5009149	Symbol	* pgs -> memory		5008931						
ANR	5009150	Symbol	check_range		5008931						
ANR	5009151	Symbol	pcs_icc -> type -> concretize_color		5008931						
ANR	5009152	Symbol	pcs		5008931						
ANR	5009153	Symbol	pcs_in		5008931						
ANR	5009154	Symbol	NULL		5008931						
ANR	5009155	Symbol	pcs -> params		5008931						
ANR	5009156	Symbol	* pcs_icc -> type		5008931						
ANR	5009157	Symbol	pc -> paint . values		5008931						
ANR	5009158	Symbol	pcs -> icc_equivalent		5008931						
ANR	5009159	Symbol	* * pgs		5008931						
ANR	5009160	Symbol	pc -> paint		5008931						
ANR	5009161	Symbol	dev -> memory		5008931						
ANR	5009162	Symbol	pc		5008931						
ANR	5009163	Symbol	gx_ciea_to_icc		5008931						
ANR	5009164	Symbol	* pc		5008931						
ANR	5009165	Symbol	pcs -> params . a		5008931						
ANR	5009166	Symbol	pgs -> memory -> stable_memory		5008931						
ANR	5009167	Symbol	* pcs_icc		5008931						
ANR	5009168	Function	gs_colorspace_set_icc_equivalent	847:0:33573:34654							
ANR	5009169	FunctionDef	"gs_colorspace_set_icc_equivalent (gs_color_space * pcs , bool * islab , gs_memory_t * memory)"		5009168	0					
ANR	5009170	CompoundStatement		850:0:33698:34654	5009168	0					
ANR	5009171	IdentifierDeclStatement	gs_color_space_index color_space_index = gs_color_space_get_index ( pcs ) ;	851:4:33704:33774	5009168	0	True				
ANR	5009172	IdentifierDecl	color_space_index = gs_color_space_get_index ( pcs )		5009168	0					
ANR	5009173	IdentifierDeclType	gs_color_space_index		5009168	0					
ANR	5009174	Identifier	color_space_index		5009168	1					
ANR	5009175	AssignmentExpression	color_space_index = gs_color_space_get_index ( pcs )		5009168	2		=			
ANR	5009176	Identifier	color_space_index		5009168	0					
ANR	5009177	CallExpression	gs_color_space_get_index ( pcs )		5009168	1					
ANR	5009178	Callee	gs_color_space_get_index		5009168	0					
ANR	5009179	Identifier	gs_color_space_get_index		5009168	0					
ANR	5009180	ArgumentList	pcs		5009168	1					
ANR	5009181	Argument	pcs		5009168	0					
ANR	5009182	Identifier	pcs		5009168	0					
ANR	5009183	IdentifierDeclStatement	gs_color_space * picc_cs ;	852:4:33780:33803	5009168	1	True				
ANR	5009184	IdentifierDecl	* picc_cs		5009168	0					
ANR	5009185	IdentifierDeclType	gs_color_space *		5009168	0					
ANR	5009186	Identifier	picc_cs		5009168	1					
ANR	5009187	IdentifierDeclStatement	int code = 0 ;	853:4:33809:33821	5009168	2	True				
ANR	5009188	IdentifierDecl	code = 0		5009168	0					
ANR	5009189	IdentifierDeclType	int		5009168	0					
ANR	5009190	Identifier	code		5009168	1					
ANR	5009191	AssignmentExpression	code = 0		5009168	2		=			
ANR	5009192	Identifier	code		5009168	0					
ANR	5009193	PrimaryExpression	0		5009168	1					
ANR	5009194	ExpressionStatement	* islab = false	855:4:33828:33842	5009168	3	True				
ANR	5009195	AssignmentExpression	* islab = false		5009168	0		=			
ANR	5009196	UnaryOperationExpression	* islab		5009168	0					
ANR	5009197	UnaryOperator	*		5009168	0					
ANR	5009198	Identifier	islab		5009168	1					
ANR	5009199	Identifier	false		5009168	1					
ANR	5009200	IfStatement	if ( pcs -> icc_equivalent != NULL || ! gs_color_space_is_PSCIE ( pcs ) )		5009168	4					
ANR	5009201	Condition	pcs -> icc_equivalent != NULL || ! gs_color_space_is_PSCIE ( pcs )	856:8:33880:33939	5009168	0	True				
ANR	5009202	OrExpression	pcs -> icc_equivalent != NULL || ! gs_color_space_is_PSCIE ( pcs )		5009168	0		||			
ANR	5009203	EqualityExpression	pcs -> icc_equivalent != NULL		5009168	0		!=			
ANR	5009204	PtrMemberAccess	pcs -> icc_equivalent		5009168	0					
ANR	5009205	Identifier	pcs		5009168	0					
ANR	5009206	Identifier	icc_equivalent		5009168	1					
ANR	5009207	Identifier	NULL		5009168	1					
ANR	5009208	UnaryOperationExpression	! gs_color_space_is_PSCIE ( pcs )		5009168	1					
ANR	5009209	UnaryOperator	!		5009168	0					
ANR	5009210	CallExpression	gs_color_space_is_PSCIE ( pcs )		5009168	1					
ANR	5009211	Callee	gs_color_space_is_PSCIE		5009168	0					
ANR	5009212	Identifier	gs_color_space_is_PSCIE		5009168	0					
ANR	5009213	ArgumentList	pcs		5009168	1					
ANR	5009214	Argument	pcs		5009168	0					
ANR	5009215	Identifier	pcs		5009168	0					
ANR	5009216	ReturnStatement	return 0 ;	857:8:33950:33958	5009168	1	True				
ANR	5009217	PrimaryExpression	0		5009168	0					
ANR	5009218	SwitchStatement	switch ( color_space_index )		5009168	5					
ANR	5009219	Condition	color_space_index	859:12:33973:33989	5009168	0	True				
ANR	5009220	Identifier	color_space_index		5009168	0					
ANR	5009221	CompoundStatement		10:32:294:294	5009168	1					
ANR	5009222	Label	case gs_color_space_index_CIEDEFG :	860:7:34002:34035	5009168	0	True				
ANR	5009223	Identifier	gs_color_space_index_CIEDEFG		5009168	0					
ANR	5009224	ExpressionStatement	"code = gx_ciedefg_to_icc ( & picc_cs , pcs , memory -> stable_memory )"	861:12:34049:34111	5009168	1	True				
ANR	5009225	AssignmentExpression	"code = gx_ciedefg_to_icc ( & picc_cs , pcs , memory -> stable_memory )"		5009168	0		=			
ANR	5009226	Identifier	code		5009168	0					
ANR	5009227	CallExpression	"gx_ciedefg_to_icc ( & picc_cs , pcs , memory -> stable_memory )"		5009168	1					
ANR	5009228	Callee	gx_ciedefg_to_icc		5009168	0					
ANR	5009229	Identifier	gx_ciedefg_to_icc		5009168	0					
ANR	5009230	ArgumentList	& picc_cs		5009168	1					
ANR	5009231	Argument	& picc_cs		5009168	0					
ANR	5009232	UnaryOperationExpression	& picc_cs		5009168	0					
ANR	5009233	UnaryOperator	&		5009168	0					
ANR	5009234	Identifier	picc_cs		5009168	1					
ANR	5009235	Argument	pcs		5009168	1					
ANR	5009236	Identifier	pcs		5009168	0					
ANR	5009237	Argument	memory -> stable_memory		5009168	2					
ANR	5009238	PtrMemberAccess	memory -> stable_memory		5009168	0					
ANR	5009239	Identifier	memory		5009168	0					
ANR	5009240	Identifier	stable_memory		5009168	1					
ANR	5009241	BreakStatement	break ;	862:12:34125:34130	5009168	2	True				
ANR	5009242	Label	case gs_color_space_index_CIEDEF :	863:8:34140:34172	5009168	3	True				
ANR	5009243	Identifier	gs_color_space_index_CIEDEF		5009168	0					
ANR	5009244	ExpressionStatement	"code = gx_ciedef_to_icc ( & picc_cs , pcs , memory -> stable_memory )"	864:12:34186:34247	5009168	4	True				
ANR	5009245	AssignmentExpression	"code = gx_ciedef_to_icc ( & picc_cs , pcs , memory -> stable_memory )"		5009168	0		=			
ANR	5009246	Identifier	code		5009168	0					
ANR	5009247	CallExpression	"gx_ciedef_to_icc ( & picc_cs , pcs , memory -> stable_memory )"		5009168	1					
ANR	5009248	Callee	gx_ciedef_to_icc		5009168	0					
ANR	5009249	Identifier	gx_ciedef_to_icc		5009168	0					
ANR	5009250	ArgumentList	& picc_cs		5009168	1					
ANR	5009251	Argument	& picc_cs		5009168	0					
ANR	5009252	UnaryOperationExpression	& picc_cs		5009168	0					
ANR	5009253	UnaryOperator	&		5009168	0					
ANR	5009254	Identifier	picc_cs		5009168	1					
ANR	5009255	Argument	pcs		5009168	1					
ANR	5009256	Identifier	pcs		5009168	0					
ANR	5009257	Argument	memory -> stable_memory		5009168	2					
ANR	5009258	PtrMemberAccess	memory -> stable_memory		5009168	0					
ANR	5009259	Identifier	memory		5009168	0					
ANR	5009260	Identifier	stable_memory		5009168	1					
ANR	5009261	BreakStatement	break ;	865:12:34261:34266	5009168	5	True				
ANR	5009262	Label	case gs_color_space_index_CIEABC :	866:8:34276:34308	5009168	6	True				
ANR	5009263	Identifier	gs_color_space_index_CIEABC		5009168	0					
ANR	5009264	ExpressionStatement	"code = gx_cieabc_to_icc ( & picc_cs , pcs , islab , memory -> stable_memory )"	867:12:34322:34390	5009168	7	True				
ANR	5009265	AssignmentExpression	"code = gx_cieabc_to_icc ( & picc_cs , pcs , islab , memory -> stable_memory )"		5009168	0		=			
ANR	5009266	Identifier	code		5009168	0					
ANR	5009267	CallExpression	"gx_cieabc_to_icc ( & picc_cs , pcs , islab , memory -> stable_memory )"		5009168	1					
ANR	5009268	Callee	gx_cieabc_to_icc		5009168	0					
ANR	5009269	Identifier	gx_cieabc_to_icc		5009168	0					
ANR	5009270	ArgumentList	& picc_cs		5009168	1					
ANR	5009271	Argument	& picc_cs		5009168	0					
ANR	5009272	UnaryOperationExpression	& picc_cs		5009168	0					
ANR	5009273	UnaryOperator	&		5009168	0					
ANR	5009274	Identifier	picc_cs		5009168	1					
ANR	5009275	Argument	pcs		5009168	1					
ANR	5009276	Identifier	pcs		5009168	0					
ANR	5009277	Argument	islab		5009168	2					
ANR	5009278	Identifier	islab		5009168	0					
ANR	5009279	Argument	memory -> stable_memory		5009168	3					
ANR	5009280	PtrMemberAccess	memory -> stable_memory		5009168	0					
ANR	5009281	Identifier	memory		5009168	0					
ANR	5009282	Identifier	stable_memory		5009168	1					
ANR	5009283	BreakStatement	break ;	868:12:34404:34409	5009168	8	True				
ANR	5009284	Label	case gs_color_space_index_CIEA :	869:8:34419:34449	5009168	9	True				
ANR	5009285	Identifier	gs_color_space_index_CIEA		5009168	0					
ANR	5009286	ExpressionStatement	"code = gx_ciea_to_icc ( & picc_cs , pcs , memory -> stable_memory )"	870:12:34463:34522	5009168	10	True				
ANR	5009287	AssignmentExpression	"code = gx_ciea_to_icc ( & picc_cs , pcs , memory -> stable_memory )"		5009168	0		=			
ANR	5009288	Identifier	code		5009168	0					
ANR	5009289	CallExpression	"gx_ciea_to_icc ( & picc_cs , pcs , memory -> stable_memory )"		5009168	1					
ANR	5009290	Callee	gx_ciea_to_icc		5009168	0					
ANR	5009291	Identifier	gx_ciea_to_icc		5009168	0					
ANR	5009292	ArgumentList	& picc_cs		5009168	1					
ANR	5009293	Argument	& picc_cs		5009168	0					
ANR	5009294	UnaryOperationExpression	& picc_cs		5009168	0					
ANR	5009295	UnaryOperator	&		5009168	0					
ANR	5009296	Identifier	picc_cs		5009168	1					
ANR	5009297	Argument	pcs		5009168	1					
ANR	5009298	Identifier	pcs		5009168	0					
ANR	5009299	Argument	memory -> stable_memory		5009168	2					
ANR	5009300	PtrMemberAccess	memory -> stable_memory		5009168	0					
ANR	5009301	Identifier	memory		5009168	0					
ANR	5009302	Identifier	stable_memory		5009168	1					
ANR	5009303	BreakStatement	break ;	871:12:34536:34541	5009168	11	True				
ANR	5009304	Label	default :	872:8:34551:34558	5009168	12	True				
ANR	5009305	Identifier	default		5009168	0					
ANR	5009306	BreakStatement	break ;	874:13:34624:34629	5009168	13	True				
ANR	5009307	ReturnStatement	return code ;	876:4:34641:34652	5009168	6	True				
ANR	5009308	Identifier	code		5009168	0					
ANR	5009309	ReturnType	int		5009168	1					
ANR	5009310	Identifier	gs_colorspace_set_icc_equivalent		5009168	2					
ANR	5009311	ParameterList	"gs_color_space * pcs , bool * islab , gs_memory_t * memory"		5009168	3					
ANR	5009312	Parameter	gs_color_space * pcs	848:33:33610:33628	5009168	0	True				
ANR	5009313	ParameterType	gs_color_space *		5009168	0					
ANR	5009314	Identifier	pcs		5009168	1					
ANR	5009315	Parameter	bool * islab	848:54:33631:33641	5009168	1	True				
ANR	5009316	ParameterType	bool *		5009168	0					
ANR	5009317	Identifier	islab		5009168	1					
ANR	5009318	Parameter	gs_memory_t * memory	849:33:33677:33695	5009168	2	True				
ANR	5009319	ParameterType	gs_memory_t *		5009168	0					
ANR	5009320	Identifier	memory		5009168	1					
ANR	5009321	CFGEntryNode	ENTRY		5009168		True				
ANR	5009322	CFGExitNode	EXIT		5009168		True				
ANR	5009323	Symbol	color_space_index		5009168						
ANR	5009324	Symbol	pcs		5009168						
ANR	5009325	Symbol	memory		5009168						
ANR	5009326	Symbol	code		5009168						
ANR	5009327	Symbol	NULL		5009168						
ANR	5009328	Symbol	gx_ciedefg_to_icc		5009168						
ANR	5009329	Symbol	false		5009168						
ANR	5009330	Symbol	* pcs		5009168						
ANR	5009331	Symbol	& picc_cs		5009168						
ANR	5009332	Symbol	pcs -> icc_equivalent		5009168						
ANR	5009333	Symbol	* memory		5009168						
ANR	5009334	Symbol	memory -> stable_memory		5009168						
ANR	5009335	Symbol	* islab		5009168						
ANR	5009336	Symbol	gx_cieabc_to_icc		5009168						
ANR	5009337	Symbol	gs_color_space_is_PSCIE		5009168						
ANR	5009338	Symbol	gx_ciea_to_icc		5009168						
ANR	5009339	Symbol	gs_color_space_get_index		5009168						
ANR	5009340	Symbol	gx_ciedef_to_icc		5009168						
ANR	5009341	Symbol	islab		5009168						
ANR	5009342	Symbol	picc_cs		5009168						
ANR	5009343	Function	gx_cie_remap_finish	880:0:34726:34977							
ANR	5009344	FunctionDef	"gx_cie_remap_finish (cie_cached_vector3 vec3 , frac * pconc , float * cie_xyz , const gs_gstate * pgs , const gs_color_space * pcs)"		5009343	0					
ANR	5009345	CompoundStatement		884:0:34895:34977	5009343	0					
ANR	5009346	ReturnStatement	"return pgs -> cie_joint_caches -> remap_finish ( vec3 , pconc , cie_xyz , pgs , pcs ) ;"	885:4:34901:34975	5009343	0	True				
ANR	5009347	CallExpression	"pgs -> cie_joint_caches -> remap_finish ( vec3 , pconc , cie_xyz , pgs , pcs )"		5009343	0					
ANR	5009348	Callee	pgs -> cie_joint_caches -> remap_finish		5009343	0					
ANR	5009349	PtrMemberAccess	pgs -> cie_joint_caches -> remap_finish		5009343	0					
ANR	5009350	PtrMemberAccess	pgs -> cie_joint_caches		5009343	0					
ANR	5009351	Identifier	pgs		5009343	0					
ANR	5009352	Identifier	cie_joint_caches		5009343	1					
ANR	5009353	Identifier	remap_finish		5009343	1					
ANR	5009354	ArgumentList	vec3		5009343	1					
ANR	5009355	Argument	vec3		5009343	0					
ANR	5009356	Identifier	vec3		5009343	0					
ANR	5009357	Argument	pconc		5009343	1					
ANR	5009358	Identifier	pconc		5009343	0					
ANR	5009359	Argument	cie_xyz		5009343	2					
ANR	5009360	Identifier	cie_xyz		5009343	0					
ANR	5009361	Argument	pgs		5009343	3					
ANR	5009362	Identifier	pgs		5009343	0					
ANR	5009363	Argument	pcs		5009343	4					
ANR	5009364	Identifier	pcs		5009343	0					
ANR	5009365	ReturnType	int		5009343	1					
ANR	5009366	Identifier	gx_cie_remap_finish		5009343	2					
ANR	5009367	ParameterList	"cie_cached_vector3 vec3 , frac * pconc , float * cie_xyz , const gs_gstate * pgs , const gs_color_space * pcs"		5009343	3					
ANR	5009368	Parameter	cie_cached_vector3 vec3	881:20:34750:34772	5009343	0	True				
ANR	5009369	ParameterType	cie_cached_vector3		5009343	0					
ANR	5009370	Identifier	vec3		5009343	1					
ANR	5009371	Parameter	frac * pconc	881:45:34775:34786	5009343	1	True				
ANR	5009372	ParameterType	frac *		5009343	0					
ANR	5009373	Identifier	pconc		5009343	1					
ANR	5009374	Parameter	float * cie_xyz	881:59:34789:34802	5009343	2	True				
ANR	5009375	ParameterType	float *		5009343	0					
ANR	5009376	Identifier	cie_xyz		5009343	1					
ANR	5009377	Parameter	const gs_gstate * pgs	882:20:34825:34845	5009343	3	True				
ANR	5009378	ParameterType	const gs_gstate *		5009343	0					
ANR	5009379	Identifier	pgs		5009343	1					
ANR	5009380	Parameter	const gs_color_space * pcs	883:20:34868:34892	5009343	4	True				
ANR	5009381	ParameterType	const gs_color_space *		5009343	0					
ANR	5009382	Identifier	pcs		5009343	1					
ANR	5009383	CFGEntryNode	ENTRY		5009343		True				
ANR	5009384	CFGExitNode	EXIT		5009343		True				
ANR	5009385	Symbol	* * pgs		5009343						
ANR	5009386	Symbol	pcs		5009343						
ANR	5009387	Symbol	* pgs -> cie_joint_caches		5009343						
ANR	5009388	Symbol	* pgs		5009343						
ANR	5009389	Symbol	vec3		5009343						
ANR	5009390	Symbol	pgs -> cie_joint_caches		5009343						
ANR	5009391	Symbol	pconc		5009343						
ANR	5009392	Symbol	cie_xyz		5009343						
ANR	5009393	Symbol	pgs -> cie_joint_caches -> remap_finish		5009343						
ANR	5009394	Symbol	pgs		5009343						
ANR	5009395	Function	gx_cie_real_remap_finish	891:0:35115:40628							
ANR	5009396	FunctionDef	"gx_cie_real_remap_finish (cie_cached_vector3 vec3 , frac * pconc , float * xyz , const gs_gstate * pgs , const gs_color_space * pcs)"		5009395	0					
ANR	5009397	CompoundStatement		895:0:35296:40628	5009395	0					
ANR	5009398	IdentifierDeclStatement	const gs_cie_render * pcrd = pgs -> cie_render ;	896:4:35302:35345	5009395	0	True				
ANR	5009399	IdentifierDecl	* pcrd = pgs -> cie_render		5009395	0					
ANR	5009400	IdentifierDeclType	const gs_cie_render *		5009395	0					
ANR	5009401	Identifier	pcrd		5009395	1					
ANR	5009402	AssignmentExpression	* pcrd = pgs -> cie_render		5009395	2		=			
ANR	5009403	Identifier	pcrd		5009395	0					
ANR	5009404	PtrMemberAccess	pgs -> cie_render		5009395	1					
ANR	5009405	Identifier	pgs		5009395	0					
ANR	5009406	Identifier	cie_render		5009395	1					
ANR	5009407	IdentifierDeclStatement	const gx_cie_joint_caches * pjc = pgs -> cie_joint_caches ;	897:4:35351:35405	5009395	1	True				
ANR	5009408	IdentifierDecl	* pjc = pgs -> cie_joint_caches		5009395	0					
ANR	5009409	IdentifierDeclType	const gx_cie_joint_caches *		5009395	0					
ANR	5009410	Identifier	pjc		5009395	1					
ANR	5009411	AssignmentExpression	* pjc = pgs -> cie_joint_caches		5009395	2		=			
ANR	5009412	Identifier	pjc		5009395	0					
ANR	5009413	PtrMemberAccess	pgs -> cie_joint_caches		5009395	1					
ANR	5009414	Identifier	pgs		5009395	0					
ANR	5009415	Identifier	cie_joint_caches		5009395	1					
ANR	5009416	IdentifierDeclStatement	const gs_const_string * table = pcrd -> RenderTable . lookup . table ;	898:4:35411:35472	5009395	2	True				
ANR	5009417	IdentifierDecl	* table = pcrd -> RenderTable . lookup . table		5009395	0					
ANR	5009418	IdentifierDeclType	const gs_const_string *		5009395	0					
ANR	5009419	Identifier	table		5009395	1					
ANR	5009420	AssignmentExpression	* table = pcrd -> RenderTable . lookup . table		5009395	2		=			
ANR	5009421	Identifier	table		5009395	0					
ANR	5009422	MemberAccess	pcrd -> RenderTable . lookup . table		5009395	1					
ANR	5009423	MemberAccess	pcrd -> RenderTable . lookup		5009395	0					
ANR	5009424	PtrMemberAccess	pcrd -> RenderTable		5009395	0					
ANR	5009425	Identifier	pcrd		5009395	0					
ANR	5009426	Identifier	RenderTable		5009395	1					
ANR	5009427	Identifier	lookup		5009395	1					
ANR	5009428	Identifier	table		5009395	1					
ANR	5009429	IdentifierDeclStatement	int tabc [ 3 ] ;	899:4:35478:35489	5009395	3	True				
ANR	5009430	IdentifierDecl	tabc [ 3 ]		5009395	0					
ANR	5009431	IdentifierDeclType	int [ 3 ]		5009395	0					
ANR	5009432	Identifier	tabc		5009395	1					
ANR	5009433	PrimaryExpression	3		5009395	2					
ANR	5009434	IfStatement	if ( ! pjc -> skipDecodeLMN )		5009395	4					
ANR	5009435	Condition	! pjc -> skipDecodeLMN	903:8:35604:35622	5009395	0	True				
ANR	5009436	UnaryOperationExpression	! pjc -> skipDecodeLMN		5009395	0					
ANR	5009437	UnaryOperator	!		5009395	0					
ANR	5009438	PtrMemberAccess	pjc -> skipDecodeLMN		5009395	1					
ANR	5009439	Identifier	pjc		5009395	0					
ANR	5009440	Identifier	skipDecodeLMN		5009395	1					
ANR	5009441	ExpressionStatement	"cie_lookup_map3 ( & vec3 , & pjc -> DecodeLMN , ""Decode/MatrixLMN+MatrixPQR"" )"	904:8:35633:35743	5009395	1	True				
ANR	5009442	CallExpression	"cie_lookup_map3 ( & vec3 , & pjc -> DecodeLMN , ""Decode/MatrixLMN+MatrixPQR"" )"		5009395	0					
ANR	5009443	Callee	cie_lookup_map3		5009395	0					
ANR	5009444	Identifier	cie_lookup_map3		5009395	0					
ANR	5009445	ArgumentList	& vec3		5009395	1					
ANR	5009446	Argument	& vec3		5009395	0					
ANR	5009447	UnaryOperationExpression	& vec3		5009395	0					
ANR	5009448	UnaryOperator	&		5009395	0					
ANR	5009449	Identifier	vec3		5009395	1					
ANR	5009450	Argument	& pjc -> DecodeLMN		5009395	1					
ANR	5009451	UnaryOperationExpression	& pjc -> DecodeLMN		5009395	0					
ANR	5009452	UnaryOperator	&		5009395	0					
ANR	5009453	PtrMemberAccess	pjc -> DecodeLMN		5009395	1					
ANR	5009454	Identifier	pjc		5009395	0					
ANR	5009455	Identifier	DecodeLMN		5009395	1					
ANR	5009456	Argument	"""Decode/MatrixLMN+MatrixPQR"""		5009395	2					
ANR	5009457	PrimaryExpression	"""Decode/MatrixLMN+MatrixPQR"""		5009395	0					
ANR	5009458	IfStatement	if ( ! pjc -> skipPQR )		5009395	5					
ANR	5009459	Condition	! pjc -> skipPQR	908:8:35819:35831	5009395	0	True				
ANR	5009460	UnaryOperationExpression	! pjc -> skipPQR		5009395	0					
ANR	5009461	UnaryOperator	!		5009395	0					
ANR	5009462	PtrMemberAccess	pjc -> skipPQR		5009395	1					
ANR	5009463	Identifier	pjc		5009395	0					
ANR	5009464	Identifier	skipPQR		5009395	1					
ANR	5009465	ExpressionStatement	"cie_lookup_map3 ( & vec3 , & pjc -> TransformPQR , ""Transform/Matrix'PQR+MatrixLMN"" )"	909:8:35842:35959	5009395	1	True				
ANR	5009466	CallExpression	"cie_lookup_map3 ( & vec3 , & pjc -> TransformPQR , ""Transform/Matrix'PQR+MatrixLMN"" )"		5009395	0					
ANR	5009467	Callee	cie_lookup_map3		5009395	0					
ANR	5009468	Identifier	cie_lookup_map3		5009395	0					
ANR	5009469	ArgumentList	& vec3		5009395	1					
ANR	5009470	Argument	& vec3		5009395	0					
ANR	5009471	UnaryOperationExpression	& vec3		5009395	0					
ANR	5009472	UnaryOperator	&		5009395	0					
ANR	5009473	Identifier	vec3		5009395	1					
ANR	5009474	Argument	& pjc -> TransformPQR		5009395	1					
ANR	5009475	UnaryOperationExpression	& pjc -> TransformPQR		5009395	0					
ANR	5009476	UnaryOperator	&		5009395	0					
ANR	5009477	PtrMemberAccess	pjc -> TransformPQR		5009395	1					
ANR	5009478	Identifier	pjc		5009395	0					
ANR	5009479	Identifier	TransformPQR		5009395	1					
ANR	5009480	Argument	"""Transform/Matrix'PQR+MatrixLMN"""		5009395	2					
ANR	5009481	PrimaryExpression	"""Transform/Matrix'PQR+MatrixLMN"""		5009395	0					
ANR	5009482	IfStatement	if ( ! pjc -> skipEncodeLMN )		5009395	6					
ANR	5009483	Condition	! pjc -> skipEncodeLMN	913:8:36019:36037	5009395	0	True				
ANR	5009484	UnaryOperationExpression	! pjc -> skipEncodeLMN		5009395	0					
ANR	5009485	UnaryOperator	!		5009395	0					
ANR	5009486	PtrMemberAccess	pjc -> skipEncodeLMN		5009395	1					
ANR	5009487	Identifier	pjc		5009395	0					
ANR	5009488	Identifier	skipEncodeLMN		5009395	1					
ANR	5009489	ExpressionStatement	"cie_lookup_map3 ( & vec3 , & pcrd -> caches . EncodeLMN , ""EncodeLMN+MatrixABC"" )"	914:8:36048:36159	5009395	1	True				
ANR	5009490	CallExpression	"cie_lookup_map3 ( & vec3 , & pcrd -> caches . EncodeLMN , ""EncodeLMN+MatrixABC"" )"		5009395	0					
ANR	5009491	Callee	cie_lookup_map3		5009395	0					
ANR	5009492	Identifier	cie_lookup_map3		5009395	0					
ANR	5009493	ArgumentList	& vec3		5009395	1					
ANR	5009494	Argument	& vec3		5009395	0					
ANR	5009495	UnaryOperationExpression	& vec3		5009395	0					
ANR	5009496	UnaryOperator	&		5009395	0					
ANR	5009497	Identifier	vec3		5009395	1					
ANR	5009498	Argument	& pcrd -> caches . EncodeLMN		5009395	1					
ANR	5009499	UnaryOperationExpression	& pcrd -> caches . EncodeLMN		5009395	0					
ANR	5009500	UnaryOperator	&		5009395	0					
ANR	5009501	MemberAccess	pcrd -> caches . EncodeLMN		5009395	1					
ANR	5009502	PtrMemberAccess	pcrd -> caches		5009395	0					
ANR	5009503	Identifier	pcrd		5009395	0					
ANR	5009504	Identifier	caches		5009395	1					
ANR	5009505	Identifier	EncodeLMN		5009395	1					
ANR	5009506	Argument	"""EncodeLMN+MatrixABC"""		5009395	2					
ANR	5009507	PrimaryExpression	"""EncodeLMN+MatrixABC"""		5009395	0					
ANR	5009508	Statement	define	919:1:36250:36255	5009395	7	True				
ANR	5009509	Statement	SET_TABC	919:8:36257:36264	5009395	8	True				
ANR	5009510	Statement	(	919:16:36265:36265	5009395	9	True				
ANR	5009511	Statement	i	919:17:36266:36266	5009395	10	True				
ANR	5009512	Statement	","	919:18:36267:36267	5009395	11	True				
ANR	5009513	Statement	t	919:20:36269:36269	5009395	12	True				
ANR	5009514	Statement	)	919:21:36270:36270	5009395	13	True				
ANR	5009515	IdentifierDeclStatement	"BEGIN tabc [ i ] = cie_cached2int ( vec3 . t - pcrd -> EncodeABC_base [ i ] , _cie_interpolate_bits ) ;"	920:2:36275:36405	5009395	14	True				
ANR	5009516	IdentifierDecl	"tabc [ i ] = cie_cached2int ( vec3 . t - pcrd -> EncodeABC_base [ i ] , _cie_interpolate_bits )"		5009395	0					
ANR	5009517	IdentifierDeclType	BEGIN [ i ]		5009395	0					
ANR	5009518	Identifier	tabc		5009395	1					
ANR	5009519	Identifier	i		5009395	2					
ANR	5009520	AssignmentExpression	"tabc [ i ] = cie_cached2int ( vec3 . t - pcrd -> EncodeABC_base [ i ] , _cie_interpolate_bits )"		5009395	3		=			
ANR	5009521	Identifier	i		5009395	0					
ANR	5009522	CallExpression	"cie_cached2int ( vec3 . t - pcrd -> EncodeABC_base [ i ] , _cie_interpolate_bits )"		5009395	1					
ANR	5009523	Callee	cie_cached2int		5009395	0					
ANR	5009524	Identifier	cie_cached2int		5009395	0					
ANR	5009525	ArgumentList	vec3 . t - pcrd -> EncodeABC_base [ i ]		5009395	1					
ANR	5009526	Argument	vec3 . t - pcrd -> EncodeABC_base [ i ]		5009395	0					
ANR	5009527	AdditiveExpression	vec3 . t - pcrd -> EncodeABC_base [ i ]		5009395	0		-			
ANR	5009528	MemberAccess	vec3 . t		5009395	0					
ANR	5009529	Identifier	vec3		5009395	0					
ANR	5009530	Identifier	t		5009395	1					
ANR	5009531	ArrayIndexing	pcrd -> EncodeABC_base [ i ]		5009395	1					
ANR	5009532	PtrMemberAccess	pcrd -> EncodeABC_base		5009395	0					
ANR	5009533	Identifier	pcrd		5009395	0					
ANR	5009534	Identifier	EncodeABC_base		5009395	1					
ANR	5009535	Identifier	i		5009395	1					
ANR	5009536	Argument	_cie_interpolate_bits		5009395	1					
ANR	5009537	Identifier	_cie_interpolate_bits		5009395	0					
ANR	5009538	IfStatement	if ( ( uint ) tabc [ i ] > ( gx_cie_cache_size - 1 ) << _cie_interpolate_bits )		5009395	15					
ANR	5009539	Condition	( uint ) tabc [ i ] > ( gx_cie_cache_size - 1 ) << _cie_interpolate_bits	923:8:36416:36479	5009395	0	True				
ANR	5009540	RelationalExpression	( uint ) tabc [ i ] > ( gx_cie_cache_size - 1 ) << _cie_interpolate_bits		5009395	0		>			
ANR	5009541	CastExpression	( uint ) tabc [ i ]		5009395	0					
ANR	5009542	CastTarget	uint		5009395	0					
ANR	5009543	ArrayIndexing	tabc [ i ]		5009395	1					
ANR	5009544	Identifier	tabc		5009395	0					
ANR	5009545	Identifier	i		5009395	1					
ANR	5009546	ShiftExpression	( gx_cie_cache_size - 1 ) << _cie_interpolate_bits		5009395	1		<<			
ANR	5009547	AdditiveExpression	gx_cie_cache_size - 1		5009395	0		-			
ANR	5009548	Identifier	gx_cie_cache_size		5009395	0					
ANR	5009549	PrimaryExpression	1		5009395	1					
ANR	5009550	Identifier	_cie_interpolate_bits		5009395	1					
ANR	5009551	ExpressionStatement	tabc [ i ] = ( tabc [ i ] < 0 ? 0 : ( gx_cie_cache_size - 1 ) << _cie_interpolate_bits )	924:8:36491:36589	5009395	1	True				
ANR	5009552	AssignmentExpression	tabc [ i ] = ( tabc [ i ] < 0 ? 0 : ( gx_cie_cache_size - 1 ) << _cie_interpolate_bits )		5009395	0		=			
ANR	5009553	ArrayIndexing	tabc [ i ]		5009395	0					
ANR	5009554	Identifier	tabc		5009395	0					
ANR	5009555	Identifier	i		5009395	1					
ANR	5009556	ConditionalExpression	tabc [ i ] < 0 ? 0 : ( gx_cie_cache_size - 1 ) << _cie_interpolate_bits		5009395	1					
ANR	5009557	Condition	tabc [ i ] < 0		5009395	0					
ANR	5009558	RelationalExpression	tabc [ i ] < 0		5009395	0		<			
ANR	5009559	ArrayIndexing	tabc [ i ]		5009395	0					
ANR	5009560	Identifier	tabc		5009395	0					
ANR	5009561	Identifier	i		5009395	1					
ANR	5009562	PrimaryExpression	0		5009395	1					
ANR	5009563	PrimaryExpression	0		5009395	1					
ANR	5009564	ShiftExpression	( gx_cie_cache_size - 1 ) << _cie_interpolate_bits		5009395	2		<<			
ANR	5009565	AdditiveExpression	gx_cie_cache_size - 1		5009395	0		-			
ANR	5009566	Identifier	gx_cie_cache_size		5009395	0					
ANR	5009567	PrimaryExpression	1		5009395	1					
ANR	5009568	Identifier	_cie_interpolate_bits		5009395	1					
ANR	5009569	IdentifierDeclStatement	"END SET_TABC ( 0 , u ) ;"	926:2:36594:36616	5009395	16	True				
ANR	5009570	IdentifierDecl	"SET_TABC ( 0 , u )"		5009395	0					
ANR	5009571	IdentifierDeclType	END		5009395	0					
ANR	5009572	Identifier	SET_TABC		5009395	1					
ANR	5009573	Expression	"0 , u"		5009395	2					
ANR	5009574	PrimaryExpression	0		5009395	0					
ANR	5009575	Identifier	u		5009395	1					
ANR	5009576	ExpressionStatement	"SET_TABC ( 1 , v )"	928:4:36622:36636	5009395	17	True				
ANR	5009577	CallExpression	"SET_TABC ( 1 , v )"		5009395	0					
ANR	5009578	Callee	SET_TABC		5009395	0					
ANR	5009579	Identifier	SET_TABC		5009395	0					
ANR	5009580	ArgumentList	1		5009395	1					
ANR	5009581	Argument	1		5009395	0					
ANR	5009582	PrimaryExpression	1		5009395	0					
ANR	5009583	Argument	v		5009395	1					
ANR	5009584	Identifier	v		5009395	0					
ANR	5009585	ExpressionStatement	"SET_TABC ( 2 , w )"	929:4:36642:36656	5009395	18	True				
ANR	5009586	CallExpression	"SET_TABC ( 2 , w )"		5009395	0					
ANR	5009587	Callee	SET_TABC		5009395	0					
ANR	5009588	Identifier	SET_TABC		5009395	0					
ANR	5009589	ArgumentList	2		5009395	1					
ANR	5009590	Argument	2		5009395	0					
ANR	5009591	PrimaryExpression	2		5009395	0					
ANR	5009592	Argument	w		5009395	1					
ANR	5009593	Identifier	w		5009395	0					
ANR	5009594	Statement	undef	930:1:36659:36663	5009395	19	True				
ANR	5009595	Statement	SET_TABC	930:7:36665:36672	5009395	20	True				
ANR	5009596	IfStatement	if ( table == 0 )		5009395	21					
ANR	5009597	Condition	table == 0	931:8:36682:36691	5009395	0	True				
ANR	5009598	EqualityExpression	table == 0		5009395	0		==			
ANR	5009599	Identifier	table		5009395	0					
ANR	5009600	PrimaryExpression	0		5009395	1					
ANR	5009601	CompoundStatement		37:20:1397:1397	5009395	1					
ANR	5009602	Statement	define	937:1:36874:36879	5009395	0	True				
ANR	5009603	Statement	EABC	937:8:36881:36884	5009395	1	True				
ANR	5009604	Statement	(	937:12:36885:36885	5009395	2	True				
ANR	5009605	Statement	i	937:13:36886:36886	5009395	3	True				
ANR	5009606	Statement	)	937:14:36887:36887	5009395	4	True				
ANR	5009607	Statement	cie_interpolate_fracs	938:2:36892:36912	5009395	5	True				
ANR	5009608	Statement	(	938:23:36913:36913	5009395	6	True				
ANR	5009609	Statement	pcrd	938:24:36914:36917	5009395	7	True				
ANR	5009610	Statement	->	938:28:36918:36919	5009395	8	True				
ANR	5009611	Statement	caches	938:30:36920:36925	5009395	9	True				
ANR	5009612	Statement	.	938:36:36926:36926	5009395	10	True				
ANR	5009613	Statement	EncodeABC	938:37:36927:36935	5009395	11	True				
ANR	5009614	Statement	[	938:46:36936:36936	5009395	12	True				
ANR	5009615	Statement	i	938:47:36937:36937	5009395	13	True				
ANR	5009616	Statement	]	938:48:36938:36938	5009395	14	True				
ANR	5009617	Statement	.	938:49:36939:36939	5009395	15	True				
ANR	5009618	Statement	fixeds	938:50:36940:36945	5009395	16	True				
ANR	5009619	Statement	.	938:56:36946:36946	5009395	17	True				
ANR	5009620	Statement	fracs	938:57:36947:36951	5009395	18	True				
ANR	5009621	Statement	.	938:62:36952:36952	5009395	19	True				
ANR	5009622	Statement	values	938:63:36953:36958	5009395	20	True				
ANR	5009623	Statement	","	938:69:36959:36959	5009395	21	True				
ANR	5009624	Statement	tabc	938:71:36961:36964	5009395	22	True				
ANR	5009625	Statement	[	938:75:36965:36965	5009395	23	True				
ANR	5009626	Statement	i	938:76:36966:36966	5009395	24	True				
ANR	5009627	Statement	]	938:77:36967:36967	5009395	25	True				
ANR	5009628	Statement	)	938:78:36968:36968	5009395	26	True				
ANR	5009629	ExpressionStatement	pconc [ 0 ] = EABC ( 0 )	939:8:36978:36996	5009395	27	True				
ANR	5009630	AssignmentExpression	pconc [ 0 ] = EABC ( 0 )		5009395	0		=			
ANR	5009631	ArrayIndexing	pconc [ 0 ]		5009395	0					
ANR	5009632	Identifier	pconc		5009395	0					
ANR	5009633	PrimaryExpression	0		5009395	1					
ANR	5009634	CallExpression	EABC ( 0 )		5009395	1					
ANR	5009635	Callee	EABC		5009395	0					
ANR	5009636	Identifier	EABC		5009395	0					
ANR	5009637	ArgumentList	0		5009395	1					
ANR	5009638	Argument	0		5009395	0					
ANR	5009639	PrimaryExpression	0		5009395	0					
ANR	5009640	ExpressionStatement	pconc [ 1 ] = EABC ( 1 )	940:8:37006:37024	5009395	28	True				
ANR	5009641	AssignmentExpression	pconc [ 1 ] = EABC ( 1 )		5009395	0		=			
ANR	5009642	ArrayIndexing	pconc [ 1 ]		5009395	0					
ANR	5009643	Identifier	pconc		5009395	0					
ANR	5009644	PrimaryExpression	1		5009395	1					
ANR	5009645	CallExpression	EABC ( 1 )		5009395	1					
ANR	5009646	Callee	EABC		5009395	0					
ANR	5009647	Identifier	EABC		5009395	0					
ANR	5009648	ArgumentList	1		5009395	1					
ANR	5009649	Argument	1		5009395	0					
ANR	5009650	PrimaryExpression	1		5009395	0					
ANR	5009651	ExpressionStatement	pconc [ 2 ] = EABC ( 2 )	941:8:37034:37052	5009395	29	True				
ANR	5009652	AssignmentExpression	pconc [ 2 ] = EABC ( 2 )		5009395	0		=			
ANR	5009653	ArrayIndexing	pconc [ 2 ]		5009395	0					
ANR	5009654	Identifier	pconc		5009395	0					
ANR	5009655	PrimaryExpression	2		5009395	1					
ANR	5009656	CallExpression	EABC ( 2 )		5009395	1					
ANR	5009657	Callee	EABC		5009395	0					
ANR	5009658	Identifier	EABC		5009395	0					
ANR	5009659	ArgumentList	2		5009395	1					
ANR	5009660	Argument	2		5009395	0					
ANR	5009661	PrimaryExpression	2		5009395	0					
ANR	5009662	Statement	undef	942:1:37055:37059	5009395	30	True				
ANR	5009663	Statement	EABC	942:7:37061:37064	5009395	31	True				
ANR	5009664	ReturnStatement	return 3 ;	943:8:37074:37082	5009395	32	True				
ANR	5009665	PrimaryExpression	3		5009395	0					
ANR	5009666	ElseStatement	else		5009395	0					
ANR	5009667	CompoundStatement		73:1:2497:2795	5009395	0					
ANR	5009668	IdentifierDeclStatement	int m = pcrd -> RenderTable . lookup . m ;	948:8:37160:37194	5009395	0	True				
ANR	5009669	IdentifierDecl	m = pcrd -> RenderTable . lookup . m		5009395	0					
ANR	5009670	IdentifierDeclType	int		5009395	0					
ANR	5009671	Identifier	m		5009395	1					
ANR	5009672	AssignmentExpression	m = pcrd -> RenderTable . lookup . m		5009395	2		=			
ANR	5009673	Identifier	m		5009395	0					
ANR	5009674	MemberAccess	pcrd -> RenderTable . lookup . m		5009395	1					
ANR	5009675	MemberAccess	pcrd -> RenderTable . lookup		5009395	0					
ANR	5009676	PtrMemberAccess	pcrd -> RenderTable		5009395	0					
ANR	5009677	Identifier	pcrd		5009395	0					
ANR	5009678	Identifier	RenderTable		5009395	1					
ANR	5009679	Identifier	lookup		5009395	1					
ANR	5009680	Identifier	m		5009395	1					
ANR	5009681	Statement	define	950:1:37198:37203	5009395	1	True				
ANR	5009682	Statement	RT_LOOKUP	950:8:37205:37213	5009395	2	True				
ANR	5009683	Statement	(	950:17:37214:37214	5009395	3	True				
ANR	5009684	Statement	j	950:18:37215:37215	5009395	4	True				
ANR	5009685	Statement	","	950:19:37216:37216	5009395	5	True				
ANR	5009686	Statement	i	950:21:37218:37218	5009395	6	True				
ANR	5009687	Statement	)	950:22:37219:37219	5009395	7	True				
ANR	5009688	Statement	pcrd	950:24:37221:37224	5009395	8	True				
ANR	5009689	Statement	->	950:28:37225:37226	5009395	9	True				
ANR	5009690	Statement	caches	950:30:37227:37232	5009395	10	True				
ANR	5009691	Statement	.	950:36:37233:37233	5009395	11	True				
ANR	5009692	Statement	RenderTableT	950:37:37234:37245	5009395	12	True				
ANR	5009693	Statement	[	950:49:37246:37246	5009395	13	True				
ANR	5009694	Statement	j	950:50:37247:37247	5009395	14	True				
ANR	5009695	Statement	]	950:51:37248:37248	5009395	15	True				
ANR	5009696	Statement	.	950:52:37249:37249	5009395	16	True				
ANR	5009697	Statement	fracs	950:53:37250:37254	5009395	17	True				
ANR	5009698	Statement	.	950:58:37255:37255	5009395	18	True				
ANR	5009699	Statement	values	950:59:37256:37261	5009395	19	True				
ANR	5009700	Statement	[	950:65:37262:37262	5009395	20	True				
ANR	5009701	Statement	i	950:66:37263:37263	5009395	21	True				
ANR	5009702	Statement	]	950:67:37264:37264	5009395	22	True				
ANR	5009703	IdentifierDeclStatement	fixed rfix [ 3 ] ;	957:8:37460:37473	5009395	23	True				
ANR	5009704	IdentifierDecl	rfix [ 3 ]		5009395	0					
ANR	5009705	IdentifierDeclType	fixed [ 3 ]		5009395	0					
ANR	5009706	Identifier	rfix		5009395	1					
ANR	5009707	PrimaryExpression	3		5009395	2					
ANR	5009708	IdentifierDeclStatement	const int s = _fixed_shift - _cie_interpolate_bits ;	958:8:37483:37533	5009395	24	True				
ANR	5009709	IdentifierDecl	s = _fixed_shift - _cie_interpolate_bits		5009395	0					
ANR	5009710	IdentifierDeclType	const int		5009395	0					
ANR	5009711	Identifier	s		5009395	1					
ANR	5009712	AssignmentExpression	s = _fixed_shift - _cie_interpolate_bits		5009395	2		=			
ANR	5009713	Identifier	s		5009395	0					
ANR	5009714	AdditiveExpression	_fixed_shift - _cie_interpolate_bits		5009395	1		-			
ANR	5009715	Identifier	_fixed_shift		5009395	0					
ANR	5009716	Identifier	_cie_interpolate_bits		5009395	1					
ANR	5009717	Statement	define	960:1:37537:37542	5009395	25	True				
ANR	5009718	Statement	EABC	960:8:37544:37547	5009395	26	True				
ANR	5009719	Statement	(	960:12:37548:37548	5009395	27	True				
ANR	5009720	Statement	i	960:13:37549:37549	5009395	28	True				
ANR	5009721	Statement	)	960:14:37550:37550	5009395	29	True				
ANR	5009722	Statement	cie_interpolate_fracs	961:2:37555:37575	5009395	30	True				
ANR	5009723	Statement	(	961:23:37576:37576	5009395	31	True				
ANR	5009724	Statement	pcrd	961:24:37577:37580	5009395	32	True				
ANR	5009725	Statement	->	961:28:37581:37582	5009395	33	True				
ANR	5009726	Statement	caches	961:30:37583:37588	5009395	34	True				
ANR	5009727	Statement	.	961:36:37589:37589	5009395	35	True				
ANR	5009728	Statement	EncodeABC	961:37:37590:37598	5009395	36	True				
ANR	5009729	Statement	[	961:46:37599:37599	5009395	37	True				
ANR	5009730	Statement	i	961:47:37600:37600	5009395	38	True				
ANR	5009731	Statement	]	961:48:37601:37601	5009395	39	True				
ANR	5009732	Statement	.	961:49:37602:37602	5009395	40	True				
ANR	5009733	Statement	fixeds	961:50:37603:37608	5009395	41	True				
ANR	5009734	Statement	.	961:56:37609:37609	5009395	42	True				
ANR	5009735	Statement	ints	961:57:37610:37613	5009395	43	True				
ANR	5009736	Statement	.	961:61:37614:37614	5009395	44	True				
ANR	5009737	Statement	values	961:62:37615:37620	5009395	45	True				
ANR	5009738	Statement	","	961:68:37621:37621	5009395	46	True				
ANR	5009739	Statement	tabc	961:70:37623:37626	5009395	47	True				
ANR	5009740	Statement	[	961:74:37627:37627	5009395	48	True				
ANR	5009741	Statement	i	961:75:37628:37628	5009395	49	True				
ANR	5009742	Statement	]	961:76:37629:37629	5009395	50	True				
ANR	5009743	Statement	)	961:77:37630:37630	5009395	51	True				
ANR	5009744	Statement	define	962:1:37633:37638	5009395	52	True				
ANR	5009745	Statement	FABC	962:8:37640:37643	5009395	53	True				
ANR	5009746	Statement	(	962:12:37644:37644	5009395	54	True				
ANR	5009747	Statement	i	962:13:37645:37645	5009395	55	True				
ANR	5009748	Statement	","	962:14:37646:37646	5009395	56	True				
ANR	5009749	Statement	s	962:16:37648:37648	5009395	57	True				
ANR	5009750	Statement	)	962:17:37649:37649	5009395	58	True				
ANR	5009751	Statement	(	963:2:37654:37654	5009395	59	True				
ANR	5009752	Statement	(	963:3:37655:37655	5009395	60	True				
ANR	5009753	Statement	s	963:4:37656:37656	5009395	61	True				
ANR	5009754	Statement	)	963:5:37657:37657	5009395	62	True				
ANR	5009755	Statement	>	963:7:37659:37659	5009395	63	True				
ANR	5009756	Statement	0	963:9:37661:37661	5009395	64	True				
ANR	5009757	Statement	)	963:10:37662:37662	5009395	65	True				
ANR	5009758	Statement	?	963:12:37664:37664	5009395	66	True				
ANR	5009759	Statement	(	963:14:37666:37666	5009395	67	True				
ANR	5009760	Statement	EABC	963:15:37667:37670	5009395	68	True				
ANR	5009761	Statement	(	963:19:37671:37671	5009395	69	True				
ANR	5009762	Statement	i	963:20:37672:37672	5009395	70	True				
ANR	5009763	Statement	)	963:21:37673:37673	5009395	71	True				
ANR	5009764	Statement	<<	963:23:37675:37676	5009395	72	True				
ANR	5009765	Statement	(	963:26:37678:37678	5009395	73	True				
ANR	5009766	Statement	s	963:27:37679:37679	5009395	74	True				
ANR	5009767	Statement	)	963:28:37680:37680	5009395	75	True				
ANR	5009768	Statement	)	963:29:37681:37681	5009395	76	True				
ANR	5009769	Statement	:	963:31:37683:37683	5009395	77	True				
ANR	5009770	Statement	(	963:33:37685:37685	5009395	78	True				
ANR	5009771	Statement	EABC	963:34:37686:37689	5009395	79	True				
ANR	5009772	Statement	(	963:38:37690:37690	5009395	80	True				
ANR	5009773	Statement	i	963:39:37691:37691	5009395	81	True				
ANR	5009774	Statement	)	963:40:37692:37692	5009395	82	True				
ANR	5009775	Statement	>>	963:42:37694:37695	5009395	83	True				
ANR	5009776	Statement	-	963:45:37697:37697	5009395	84	True				
ANR	5009777	Statement	(	963:46:37698:37698	5009395	85	True				
ANR	5009778	Statement	s	963:47:37699:37699	5009395	86	True				
ANR	5009779	Statement	)	963:48:37700:37700	5009395	87	True				
ANR	5009780	Statement	)	963:49:37701:37701	5009395	88	True				
ANR	5009781	ExpressionStatement	"rfix [ 0 ] = FABC ( 0 , s )"	964:8:37711:37731	5009395	89	True				
ANR	5009782	AssignmentExpression	"rfix [ 0 ] = FABC ( 0 , s )"		5009395	0		=			
ANR	5009783	ArrayIndexing	rfix [ 0 ]		5009395	0					
ANR	5009784	Identifier	rfix		5009395	0					
ANR	5009785	PrimaryExpression	0		5009395	1					
ANR	5009786	CallExpression	"FABC ( 0 , s )"		5009395	1					
ANR	5009787	Callee	FABC		5009395	0					
ANR	5009788	Identifier	FABC		5009395	0					
ANR	5009789	ArgumentList	0		5009395	1					
ANR	5009790	Argument	0		5009395	0					
ANR	5009791	PrimaryExpression	0		5009395	0					
ANR	5009792	Argument	s		5009395	1					
ANR	5009793	Identifier	s		5009395	0					
ANR	5009794	ExpressionStatement	"rfix [ 1 ] = FABC ( 1 , s )"	965:8:37741:37761	5009395	90	True				
ANR	5009795	AssignmentExpression	"rfix [ 1 ] = FABC ( 1 , s )"		5009395	0		=			
ANR	5009796	ArrayIndexing	rfix [ 1 ]		5009395	0					
ANR	5009797	Identifier	rfix		5009395	0					
ANR	5009798	PrimaryExpression	1		5009395	1					
ANR	5009799	CallExpression	"FABC ( 1 , s )"		5009395	1					
ANR	5009800	Callee	FABC		5009395	0					
ANR	5009801	Identifier	FABC		5009395	0					
ANR	5009802	ArgumentList	1		5009395	1					
ANR	5009803	Argument	1		5009395	0					
ANR	5009804	PrimaryExpression	1		5009395	0					
ANR	5009805	Argument	s		5009395	1					
ANR	5009806	Identifier	s		5009395	0					
ANR	5009807	ExpressionStatement	"rfix [ 2 ] = FABC ( 2 , s )"	966:8:37771:37791	5009395	91	True				
ANR	5009808	AssignmentExpression	"rfix [ 2 ] = FABC ( 2 , s )"		5009395	0		=			
ANR	5009809	ArrayIndexing	rfix [ 2 ]		5009395	0					
ANR	5009810	Identifier	rfix		5009395	0					
ANR	5009811	PrimaryExpression	2		5009395	1					
ANR	5009812	CallExpression	"FABC ( 2 , s )"		5009395	1					
ANR	5009813	Callee	FABC		5009395	0					
ANR	5009814	Identifier	FABC		5009395	0					
ANR	5009815	ArgumentList	2		5009395	1					
ANR	5009816	Argument	2		5009395	0					
ANR	5009817	PrimaryExpression	2		5009395	0					
ANR	5009818	Argument	s		5009395	1					
ANR	5009819	Identifier	s		5009395	0					
ANR	5009820	IdentifierDeclStatement	"undef FABC undef EABC if_debug6m ( 'c' , pgs -> memory , ""[c]ABC=%g,%g,%g => iabc=%g,%g,%g\\n"" , cie_cached2float ( vec3 . u ) , cie_cached2float ( vec3 . v ) , cie_cached2float ( vec3 . w ) , fixed2float ( rfix [ 0 ] ) , fixed2float ( rfix [ 1 ] ) , fixed2float ( rfix [ 2 ] ) ) ;"	967:1:37794:38092	5009395	92	True				
ANR	5009821	IdentifierDecl	"if_debug6m ( 'c' , pgs -> memory , ""[c]ABC=%g,%g,%g => iabc=%g,%g,%g\\n"" , cie_cached2float ( vec3 . u ) , cie_cached2float ( vec3 . v ) , cie_cached2float ( vec3 . w ) , fixed2float ( rfix [ 0 ] ) , fixed2float ( rfix [ 1 ] ) , fixed2float ( rfix [ 2 ] ) )"		5009395	0					
ANR	5009822	IdentifierDeclType	undef FABC undef EABC		5009395	0					
ANR	5009823	Identifier	if_debug6m		5009395	1					
ANR	5009824	Expression	"'c' , pgs -> memory , ""[c]ABC=%g,%g,%g => iabc=%g,%g,%g\\n"" , cie_cached2float ( vec3 . u ) , cie_cached2float ( vec3 . v ) , cie_cached2float ( vec3 . w ) , fixed2float ( rfix [ 0 ] ) , fixed2float ( rfix [ 1 ] ) , fixed2float ( rfix [ 2 ] )"		5009395	2					
ANR	5009825	PrimaryExpression	'c'		5009395	0					
ANR	5009826	Expression	"pgs -> memory , ""[c]ABC=%g,%g,%g => iabc=%g,%g,%g\\n"" , cie_cached2float ( vec3 . u ) , cie_cached2float ( vec3 . v ) , cie_cached2float ( vec3 . w ) , fixed2float ( rfix [ 0 ] ) , fixed2float ( rfix [ 1 ] ) , fixed2float ( rfix [ 2 ] )"		5009395	1					
ANR	5009827	PtrMemberAccess	pgs -> memory		5009395	0					
ANR	5009828	Identifier	pgs		5009395	0					
ANR	5009829	Identifier	memory		5009395	1					
ANR	5009830	Expression	"""[c]ABC=%g,%g,%g => iabc=%g,%g,%g\\n"" , cie_cached2float ( vec3 . u ) , cie_cached2float ( vec3 . v ) , cie_cached2float ( vec3 . w ) , fixed2float ( rfix [ 0 ] ) , fixed2float ( rfix [ 1 ] ) , fixed2float ( rfix [ 2 ] )"		5009395	1					
ANR	5009831	PrimaryExpression	"""[c]ABC=%g,%g,%g => iabc=%g,%g,%g\\n"""		5009395	0					
ANR	5009832	Expression	"cie_cached2float ( vec3 . u ) , cie_cached2float ( vec3 . v ) , cie_cached2float ( vec3 . w ) , fixed2float ( rfix [ 0 ] ) , fixed2float ( rfix [ 1 ] ) , fixed2float ( rfix [ 2 ] )"		5009395	1					
ANR	5009833	CallExpression	cie_cached2float ( vec3 . u )		5009395	0					
ANR	5009834	Callee	cie_cached2float		5009395	0					
ANR	5009835	Identifier	cie_cached2float		5009395	0					
ANR	5009836	ArgumentList	vec3 . u		5009395	1					
ANR	5009837	Argument	vec3 . u		5009395	0					
ANR	5009838	MemberAccess	vec3 . u		5009395	0					
ANR	5009839	Identifier	vec3		5009395	0					
ANR	5009840	Identifier	u		5009395	1					
ANR	5009841	Expression	"cie_cached2float ( vec3 . v ) , cie_cached2float ( vec3 . w ) , fixed2float ( rfix [ 0 ] ) , fixed2float ( rfix [ 1 ] ) , fixed2float ( rfix [ 2 ] )"		5009395	1					
ANR	5009842	CallExpression	cie_cached2float ( vec3 . v )		5009395	0					
ANR	5009843	Callee	cie_cached2float		5009395	0					
ANR	5009844	Identifier	cie_cached2float		5009395	0					
ANR	5009845	ArgumentList	vec3 . v		5009395	1					
ANR	5009846	Argument	vec3 . v		5009395	0					
ANR	5009847	MemberAccess	vec3 . v		5009395	0					
ANR	5009848	Identifier	vec3		5009395	0					
ANR	5009849	Identifier	v		5009395	1					
ANR	5009850	Expression	"cie_cached2float ( vec3 . w ) , fixed2float ( rfix [ 0 ] ) , fixed2float ( rfix [ 1 ] ) , fixed2float ( rfix [ 2 ] )"		5009395	1					
ANR	5009851	CallExpression	cie_cached2float ( vec3 . w )		5009395	0					
ANR	5009852	Callee	cie_cached2float		5009395	0					
ANR	5009853	Identifier	cie_cached2float		5009395	0					
ANR	5009854	ArgumentList	vec3 . w		5009395	1					
ANR	5009855	Argument	vec3 . w		5009395	0					
ANR	5009856	MemberAccess	vec3 . w		5009395	0					
ANR	5009857	Identifier	vec3		5009395	0					
ANR	5009858	Identifier	w		5009395	1					
ANR	5009859	Expression	"fixed2float ( rfix [ 0 ] ) , fixed2float ( rfix [ 1 ] ) , fixed2float ( rfix [ 2 ] )"		5009395	1					
ANR	5009860	CallExpression	fixed2float ( rfix [ 0 ] )		5009395	0					
ANR	5009861	Callee	fixed2float		5009395	0					
ANR	5009862	Identifier	fixed2float		5009395	0					
ANR	5009863	ArgumentList	rfix [ 0 ]		5009395	1					
ANR	5009864	Argument	rfix [ 0 ]		5009395	0					
ANR	5009865	ArrayIndexing	rfix [ 0 ]		5009395	0					
ANR	5009866	Identifier	rfix		5009395	0					
ANR	5009867	PrimaryExpression	0		5009395	1					
ANR	5009868	Expression	"fixed2float ( rfix [ 1 ] ) , fixed2float ( rfix [ 2 ] )"		5009395	1					
ANR	5009869	CallExpression	fixed2float ( rfix [ 1 ] )		5009395	0					
ANR	5009870	Callee	fixed2float		5009395	0					
ANR	5009871	Identifier	fixed2float		5009395	0					
ANR	5009872	ArgumentList	rfix [ 1 ]		5009395	1					
ANR	5009873	Argument	rfix [ 1 ]		5009395	0					
ANR	5009874	ArrayIndexing	rfix [ 1 ]		5009395	0					
ANR	5009875	Identifier	rfix		5009395	0					
ANR	5009876	PrimaryExpression	1		5009395	1					
ANR	5009877	CallExpression	fixed2float ( rfix [ 2 ] )		5009395	1					
ANR	5009878	Callee	fixed2float		5009395	0					
ANR	5009879	Identifier	fixed2float		5009395	0					
ANR	5009880	ArgumentList	rfix [ 2 ]		5009395	1					
ANR	5009881	Argument	rfix [ 2 ]		5009395	0					
ANR	5009882	ArrayIndexing	rfix [ 2 ]		5009395	0					
ANR	5009883	Identifier	rfix		5009395	0					
ANR	5009884	PrimaryExpression	2		5009395	1					
ANR	5009885	ExpressionStatement	"gx_color_interpolate_linear ( rfix , & pcrd -> RenderTable . lookup , pconc )"	973:8:38102:38205	5009395	93	True				
ANR	5009886	CallExpression	"gx_color_interpolate_linear ( rfix , & pcrd -> RenderTable . lookup , pconc )"		5009395	0					
ANR	5009887	Callee	gx_color_interpolate_linear		5009395	0					
ANR	5009888	Identifier	gx_color_interpolate_linear		5009395	0					
ANR	5009889	ArgumentList	rfix		5009395	1					
ANR	5009890	Argument	rfix		5009395	0					
ANR	5009891	Identifier	rfix		5009395	0					
ANR	5009892	Argument	& pcrd -> RenderTable . lookup		5009395	1					
ANR	5009893	UnaryOperationExpression	& pcrd -> RenderTable . lookup		5009395	0					
ANR	5009894	UnaryOperator	&		5009395	0					
ANR	5009895	MemberAccess	pcrd -> RenderTable . lookup		5009395	1					
ANR	5009896	PtrMemberAccess	pcrd -> RenderTable		5009395	0					
ANR	5009897	Identifier	pcrd		5009395	0					
ANR	5009898	Identifier	RenderTable		5009395	1					
ANR	5009899	Identifier	lookup		5009395	1					
ANR	5009900	Argument	pconc		5009395	2					
ANR	5009901	Identifier	pconc		5009395	0					
ANR	5009902	ExpressionStatement	"if_debug3m ( 'c' , pgs -> memory , ""[c]  interpolated => %g,%g,%g\\n"" , frac2float ( pconc [ 0 ] ) , frac2float ( pconc [ 1 ] ) , frac2float ( pconc [ 2 ] ) )"	975:8:38215:38382	5009395	94	True				
ANR	5009903	CallExpression	"if_debug3m ( 'c' , pgs -> memory , ""[c]  interpolated => %g,%g,%g\\n"" , frac2float ( pconc [ 0 ] ) , frac2float ( pconc [ 1 ] ) , frac2float ( pconc [ 2 ] ) )"		5009395	0					
ANR	5009904	Callee	if_debug3m		5009395	0					
ANR	5009905	Identifier	if_debug3m		5009395	0					
ANR	5009906	ArgumentList	'c'		5009395	1					
ANR	5009907	Argument	'c'		5009395	0					
ANR	5009908	PrimaryExpression	'c'		5009395	0					
ANR	5009909	Argument	pgs -> memory		5009395	1					
ANR	5009910	PtrMemberAccess	pgs -> memory		5009395	0					
ANR	5009911	Identifier	pgs		5009395	0					
ANR	5009912	Identifier	memory		5009395	1					
ANR	5009913	Argument	"""[c]  interpolated => %g,%g,%g\\n"""		5009395	2					
ANR	5009914	PrimaryExpression	"""[c]  interpolated => %g,%g,%g\\n"""		5009395	0					
ANR	5009915	Argument	frac2float ( pconc [ 0 ] )		5009395	3					
ANR	5009916	CallExpression	frac2float ( pconc [ 0 ] )		5009395	0					
ANR	5009917	Callee	frac2float		5009395	0					
ANR	5009918	Identifier	frac2float		5009395	0					
ANR	5009919	ArgumentList	pconc [ 0 ]		5009395	1					
ANR	5009920	Argument	pconc [ 0 ]		5009395	0					
ANR	5009921	ArrayIndexing	pconc [ 0 ]		5009395	0					
ANR	5009922	Identifier	pconc		5009395	0					
ANR	5009923	PrimaryExpression	0		5009395	1					
ANR	5009924	Argument	frac2float ( pconc [ 1 ] )		5009395	4					
ANR	5009925	CallExpression	frac2float ( pconc [ 1 ] )		5009395	0					
ANR	5009926	Callee	frac2float		5009395	0					
ANR	5009927	Identifier	frac2float		5009395	0					
ANR	5009928	ArgumentList	pconc [ 1 ]		5009395	1					
ANR	5009929	Argument	pconc [ 1 ]		5009395	0					
ANR	5009930	ArrayIndexing	pconc [ 1 ]		5009395	0					
ANR	5009931	Identifier	pconc		5009395	0					
ANR	5009932	PrimaryExpression	1		5009395	1					
ANR	5009933	Argument	frac2float ( pconc [ 2 ] )		5009395	5					
ANR	5009934	CallExpression	frac2float ( pconc [ 2 ] )		5009395	0					
ANR	5009935	Callee	frac2float		5009395	0					
ANR	5009936	Identifier	frac2float		5009395	0					
ANR	5009937	ArgumentList	pconc [ 2 ]		5009395	1					
ANR	5009938	Argument	pconc [ 2 ]		5009395	0					
ANR	5009939	ArrayIndexing	pconc [ 2 ]		5009395	0					
ANR	5009940	Identifier	pconc		5009395	0					
ANR	5009941	PrimaryExpression	2		5009395	1					
ANR	5009942	IfStatement	if ( ! pcrd -> caches . RenderTableT_is_identity )		5009395	95					
ANR	5009943	Condition	! pcrd -> caches . RenderTableT_is_identity	978:12:38396:38433	5009395	0	True				
ANR	5009944	UnaryOperationExpression	! pcrd -> caches . RenderTableT_is_identity		5009395	0					
ANR	5009945	UnaryOperator	!		5009395	0					
ANR	5009946	MemberAccess	pcrd -> caches . RenderTableT_is_identity		5009395	1					
ANR	5009947	PtrMemberAccess	pcrd -> caches		5009395	0					
ANR	5009948	Identifier	pcrd		5009395	0					
ANR	5009949	Identifier	caches		5009395	1					
ANR	5009950	Identifier	RenderTableT_is_identity		5009395	1					
ANR	5009951	CompoundStatement		84:52:3139:3139	5009395	1					
ANR	5009952	Statement	define	980:1:38486:38491	5009395	0	True				
ANR	5009953	Statement	frac2cache_index	980:8:38493:38508	5009395	1	True				
ANR	5009954	Statement	(	980:24:38509:38509	5009395	2	True				
ANR	5009955	Statement	v	980:25:38510:38510	5009395	3	True				
ANR	5009956	Statement	)	980:26:38511:38511	5009395	4	True				
ANR	5009957	Statement	frac2bits	980:28:38513:38521	5009395	5	True				
ANR	5009958	Statement	(	980:37:38522:38522	5009395	6	True				
ANR	5009959	Statement	v	980:38:38523:38523	5009395	7	True				
ANR	5009960	Statement	","	980:39:38524:38524	5009395	8	True				
ANR	5009961	Statement	gx_cie_log2_cache_size	980:41:38526:38547	5009395	9	True				
ANR	5009962	Statement	)	980:63:38548:38548	5009395	10	True				
ANR	5009963	ExpressionStatement	"pconc [ 0 ] = RT_LOOKUP ( 0 , frac2cache_index ( pconc [ 0 ] ) )"	981:12:38562:38613	5009395	11	True				
ANR	5009964	AssignmentExpression	"pconc [ 0 ] = RT_LOOKUP ( 0 , frac2cache_index ( pconc [ 0 ] ) )"		5009395	0		=			
ANR	5009965	ArrayIndexing	pconc [ 0 ]		5009395	0					
ANR	5009966	Identifier	pconc		5009395	0					
ANR	5009967	PrimaryExpression	0		5009395	1					
ANR	5009968	CallExpression	"RT_LOOKUP ( 0 , frac2cache_index ( pconc [ 0 ] ) )"		5009395	1					
ANR	5009969	Callee	RT_LOOKUP		5009395	0					
ANR	5009970	Identifier	RT_LOOKUP		5009395	0					
ANR	5009971	ArgumentList	0		5009395	1					
ANR	5009972	Argument	0		5009395	0					
ANR	5009973	PrimaryExpression	0		5009395	0					
ANR	5009974	Argument	frac2cache_index ( pconc [ 0 ] )		5009395	1					
ANR	5009975	CallExpression	frac2cache_index ( pconc [ 0 ] )		5009395	0					
ANR	5009976	Callee	frac2cache_index		5009395	0					
ANR	5009977	Identifier	frac2cache_index		5009395	0					
ANR	5009978	ArgumentList	pconc [ 0 ]		5009395	1					
ANR	5009979	Argument	pconc [ 0 ]		5009395	0					
ANR	5009980	ArrayIndexing	pconc [ 0 ]		5009395	0					
ANR	5009981	Identifier	pconc		5009395	0					
ANR	5009982	PrimaryExpression	0		5009395	1					
ANR	5009983	ExpressionStatement	"pconc [ 1 ] = RT_LOOKUP ( 1 , frac2cache_index ( pconc [ 1 ] ) )"	982:12:38627:38678	5009395	12	True				
ANR	5009984	AssignmentExpression	"pconc [ 1 ] = RT_LOOKUP ( 1 , frac2cache_index ( pconc [ 1 ] ) )"		5009395	0		=			
ANR	5009985	ArrayIndexing	pconc [ 1 ]		5009395	0					
ANR	5009986	Identifier	pconc		5009395	0					
ANR	5009987	PrimaryExpression	1		5009395	1					
ANR	5009988	CallExpression	"RT_LOOKUP ( 1 , frac2cache_index ( pconc [ 1 ] ) )"		5009395	1					
ANR	5009989	Callee	RT_LOOKUP		5009395	0					
ANR	5009990	Identifier	RT_LOOKUP		5009395	0					
ANR	5009991	ArgumentList	1		5009395	1					
ANR	5009992	Argument	1		5009395	0					
ANR	5009993	PrimaryExpression	1		5009395	0					
ANR	5009994	Argument	frac2cache_index ( pconc [ 1 ] )		5009395	1					
ANR	5009995	CallExpression	frac2cache_index ( pconc [ 1 ] )		5009395	0					
ANR	5009996	Callee	frac2cache_index		5009395	0					
ANR	5009997	Identifier	frac2cache_index		5009395	0					
ANR	5009998	ArgumentList	pconc [ 1 ]		5009395	1					
ANR	5009999	Argument	pconc [ 1 ]		5009395	0					
ANR	5010000	ArrayIndexing	pconc [ 1 ]		5009395	0					
ANR	5010001	Identifier	pconc		5009395	0					
ANR	5010002	PrimaryExpression	1		5009395	1					
ANR	5010003	ExpressionStatement	"pconc [ 2 ] = RT_LOOKUP ( 2 , frac2cache_index ( pconc [ 2 ] ) )"	983:12:38692:38743	5009395	13	True				
ANR	5010004	AssignmentExpression	"pconc [ 2 ] = RT_LOOKUP ( 2 , frac2cache_index ( pconc [ 2 ] ) )"		5009395	0		=			
ANR	5010005	ArrayIndexing	pconc [ 2 ]		5009395	0					
ANR	5010006	Identifier	pconc		5009395	0					
ANR	5010007	PrimaryExpression	2		5009395	1					
ANR	5010008	CallExpression	"RT_LOOKUP ( 2 , frac2cache_index ( pconc [ 2 ] ) )"		5009395	1					
ANR	5010009	Callee	RT_LOOKUP		5009395	0					
ANR	5010010	Identifier	RT_LOOKUP		5009395	0					
ANR	5010011	ArgumentList	2		5009395	1					
ANR	5010012	Argument	2		5009395	0					
ANR	5010013	PrimaryExpression	2		5009395	0					
ANR	5010014	Argument	frac2cache_index ( pconc [ 2 ] )		5009395	1					
ANR	5010015	CallExpression	frac2cache_index ( pconc [ 2 ] )		5009395	0					
ANR	5010016	Callee	frac2cache_index		5009395	0					
ANR	5010017	Identifier	frac2cache_index		5009395	0					
ANR	5010018	ArgumentList	pconc [ 2 ]		5009395	1					
ANR	5010019	Argument	pconc [ 2 ]		5009395	0					
ANR	5010020	ArrayIndexing	pconc [ 2 ]		5009395	0					
ANR	5010021	Identifier	pconc		5009395	0					
ANR	5010022	PrimaryExpression	2		5009395	1					
ANR	5010023	IfStatement	if ( m > 3 )		5009395	14					
ANR	5010024	Condition	m > 3	984:16:38761:38765	5009395	0	True				
ANR	5010025	RelationalExpression	m > 3		5009395	0		>			
ANR	5010026	Identifier	m		5009395	0					
ANR	5010027	PrimaryExpression	3		5009395	1					
ANR	5010028	ExpressionStatement	"pconc [ 3 ] = RT_LOOKUP ( 3 , frac2cache_index ( pconc [ 3 ] ) )"	985:16:38784:38835	5009395	1	True				
ANR	5010029	AssignmentExpression	"pconc [ 3 ] = RT_LOOKUP ( 3 , frac2cache_index ( pconc [ 3 ] ) )"		5009395	0		=			
ANR	5010030	ArrayIndexing	pconc [ 3 ]		5009395	0					
ANR	5010031	Identifier	pconc		5009395	0					
ANR	5010032	PrimaryExpression	3		5009395	1					
ANR	5010033	CallExpression	"RT_LOOKUP ( 3 , frac2cache_index ( pconc [ 3 ] ) )"		5009395	1					
ANR	5010034	Callee	RT_LOOKUP		5009395	0					
ANR	5010035	Identifier	RT_LOOKUP		5009395	0					
ANR	5010036	ArgumentList	3		5009395	1					
ANR	5010037	Argument	3		5009395	0					
ANR	5010038	PrimaryExpression	3		5009395	0					
ANR	5010039	Argument	frac2cache_index ( pconc [ 3 ] )		5009395	1					
ANR	5010040	CallExpression	frac2cache_index ( pconc [ 3 ] )		5009395	0					
ANR	5010041	Callee	frac2cache_index		5009395	0					
ANR	5010042	Identifier	frac2cache_index		5009395	0					
ANR	5010043	ArgumentList	pconc [ 3 ]		5009395	1					
ANR	5010044	Argument	pconc [ 3 ]		5009395	0					
ANR	5010045	ArrayIndexing	pconc [ 3 ]		5009395	0					
ANR	5010046	Identifier	pconc		5009395	0					
ANR	5010047	PrimaryExpression	3		5009395	1					
ANR	5010048	Statement	undef	986:1:38838:38842	5009395	15	True				
ANR	5010049	Statement	frac2cache_index	986:7:38844:38859	5009395	16	True				
ANR	5010050	Statement	undef	1034:1:40578:40582	5009395	96	True				
ANR	5010051	Statement	RI	1034:7:40584:40585	5009395	97	True				
ANR	5010052	Statement	undef	1035:1:40588:40592	5009395	98	True				
ANR	5010053	Statement	RT_LOOKUP	1035:7:40594:40602	5009395	99	True				
ANR	5010054	ReturnStatement	return m ;	1036:8:40612:40620	5009395	100	True				
ANR	5010055	Identifier	m		5009395	0					
ANR	5010056	ReturnType	int		5009395	1					
ANR	5010057	Identifier	gx_cie_real_remap_finish		5009395	2					
ANR	5010058	ParameterList	"cie_cached_vector3 vec3 , frac * pconc , float * xyz , const gs_gstate * pgs , const gs_color_space * pcs"		5009395	3					
ANR	5010059	Parameter	cie_cached_vector3 vec3	892:25:35144:35166	5009395	0	True				
ANR	5010060	ParameterType	cie_cached_vector3		5009395	0					
ANR	5010061	Identifier	vec3		5009395	1					
ANR	5010062	Parameter	frac * pconc	892:50:35169:35180	5009395	1	True				
ANR	5010063	ParameterType	frac *		5009395	0					
ANR	5010064	Identifier	pconc		5009395	1					
ANR	5010065	Parameter	float * xyz	892:64:35183:35193	5009395	2	True				
ANR	5010066	ParameterType	float *		5009395	0					
ANR	5010067	Identifier	xyz		5009395	1					
ANR	5010068	Parameter	const gs_gstate * pgs	893:25:35221:35241	5009395	3	True				
ANR	5010069	ParameterType	const gs_gstate *		5009395	0					
ANR	5010070	Identifier	pgs		5009395	1					
ANR	5010071	Parameter	const gs_color_space * pcs	894:25:35269:35293	5009395	4	True				
ANR	5010072	ParameterType	const gs_color_space *		5009395	0					
ANR	5010073	Identifier	pcs		5009395	1					
ANR	5010074	CFGEntryNode	ENTRY		5009395		True				
ANR	5010075	CFGExitNode	EXIT		5009395		True				
ANR	5010076	Symbol	* tabc		5009395						
ANR	5010077	Symbol	SET_TABC		5009395						
ANR	5010078	Symbol	_cie_interpolate_bits		5009395						
ANR	5010079	Symbol	* pgs		5009395						
ANR	5010080	Symbol	* * pcrd		5009395						
ANR	5010081	Symbol	& vec3		5009395						
ANR	5010082	Symbol	& pcrd -> caches		5009395						
ANR	5010083	Symbol	frac2cache_index		5009395						
ANR	5010084	Symbol	* pcrd -> EncodeABC_base		5009395						
ANR	5010085	Symbol	xyz		5009395						
ANR	5010086	Symbol	FABC		5009395						
ANR	5010087	Symbol	_fixed_shift		5009395						
ANR	5010088	Symbol	pjc -> skipEncodeLMN		5009395						
ANR	5010089	Symbol	* pconc		5009395						
ANR	5010090	Symbol	pcrd -> caches		5009395						
ANR	5010091	Symbol	vec3		5009395						
ANR	5010092	Symbol	pjc		5009395						
ANR	5010093	Symbol	pcrd -> caches . RenderTableT_is_identity		5009395						
ANR	5010094	Symbol	& pcrd -> caches . EncodeLMN		5009395						
ANR	5010095	Symbol	* pcrd		5009395						
ANR	5010096	Symbol	* rfix		5009395						
ANR	5010097	Symbol	& pcrd -> RenderTable . lookup		5009395						
ANR	5010098	Symbol	pcrd -> EncodeABC_base		5009395						
ANR	5010099	Symbol	if_debug6m		5009395						
ANR	5010100	Symbol	cie_cached2int		5009395						
ANR	5010101	Symbol	pjc -> skipPQR		5009395						
ANR	5010102	Symbol	pconc		5009395						
ANR	5010103	Symbol	& pcrd -> RenderTable		5009395						
ANR	5010104	Symbol	pcrd		5009395						
ANR	5010105	Symbol	* pjc		5009395						
ANR	5010106	Symbol	pcrd -> RenderTable		5009395						
ANR	5010107	Symbol	rfix		5009395						
ANR	5010108	Symbol	tabc		5009395						
ANR	5010109	Symbol	& pjc -> TransformPQR		5009395						
ANR	5010110	Symbol	pgs -> cie_render		5009395						
ANR	5010111	Symbol	pjc -> skipDecodeLMN		5009395						
ANR	5010112	Symbol	pgs		5009395						
ANR	5010113	Symbol	pgs -> memory		5009395						
ANR	5010114	Symbol	table		5009395						
ANR	5010115	Symbol	pcs		5009395						
ANR	5010116	Symbol	frac2float		5009395						
ANR	5010117	Symbol	& pjc -> DecodeLMN		5009395						
ANR	5010118	Symbol	pcrd -> RenderTable . lookup		5009395						
ANR	5010119	Symbol	i		5009395						
ANR	5010120	Symbol	vec3 . w		5009395						
ANR	5010121	Symbol	vec3 . t		5009395						
ANR	5010122	Symbol	m		5009395						
ANR	5010123	Symbol	vec3 . v		5009395						
ANR	5010124	Symbol	vec3 . u		5009395						
ANR	5010125	Symbol	* i		5009395						
ANR	5010126	Symbol	s		5009395						
ANR	5010127	Symbol	pcrd -> RenderTable . lookup . table		5009395						
ANR	5010128	Symbol	v		5009395						
ANR	5010129	Symbol	w		5009395						
ANR	5010130	Symbol	pcrd -> RenderTable . lookup . m		5009395						
ANR	5010131	Symbol	pgs -> cie_joint_caches		5009395						
ANR	5010132	Symbol	gx_cie_cache_size		5009395						
ANR	5010133	Symbol	RT_LOOKUP		5009395						
ANR	5010134	Symbol	EABC		5009395						
ANR	5010135	Function	float2frac_clamp	1045:0:40844:40939							
ANR	5010136	FunctionDef	float2frac_clamp (double x)		5010135	0					
ANR	5010137	CompoundStatement		1047:0:40883:40939	5010135	0					
ANR	5010138	ReturnStatement	return float2frac ( ( x <= 0 ? 0 : x >= 1 ? 1 : x ) ) ;	1048:4:40889:40937	5010135	0	True				
ANR	5010139	CallExpression	float2frac ( ( x <= 0 ? 0 : x >= 1 ? 1 : x ) )		5010135	0					
ANR	5010140	Callee	float2frac		5010135	0					
ANR	5010141	Identifier	float2frac		5010135	0					
ANR	5010142	ArgumentList	x <= 0 ? 0 : x >= 1 ? 1 : x		5010135	1					
ANR	5010143	Argument	x <= 0 ? 0 : x >= 1 ? 1 : x		5010135	0					
ANR	5010144	ConditionalExpression	x <= 0 ? 0 : x >= 1 ? 1 : x		5010135	0					
ANR	5010145	Condition	x <= 0		5010135	0					
ANR	5010146	RelationalExpression	x <= 0		5010135	0		<=			
ANR	5010147	Identifier	x		5010135	0					
ANR	5010148	PrimaryExpression	0		5010135	1					
ANR	5010149	PrimaryExpression	0		5010135	1					
ANR	5010150	ConditionalExpression	x >= 1 ? 1 : x		5010135	2					
ANR	5010151	Condition	x >= 1		5010135	0					
ANR	5010152	RelationalExpression	x >= 1		5010135	0		>=			
ANR	5010153	Identifier	x		5010135	0					
ANR	5010154	PrimaryExpression	1		5010135	1					
ANR	5010155	PrimaryExpression	1		5010135	1					
ANR	5010156	Identifier	x		5010135	2					
ANR	5010157	ReturnType	static frac		5010135	1					
ANR	5010158	Identifier	float2frac_clamp		5010135	2					
ANR	5010159	ParameterList	double x		5010135	3					
ANR	5010160	Parameter	double x	1046:17:40873:40880	5010135	0	True				
ANR	5010161	ParameterType	double		5010135	0					
ANR	5010162	Identifier	x		5010135	1					
ANR	5010163	CFGEntryNode	ENTRY		5010135		True				
ANR	5010164	CFGExitNode	EXIT		5010135		True				
ANR	5010165	Symbol	float2frac		5010135						
ANR	5010166	Symbol	x		5010135						
ANR	5010167	Function	gx_cie_xyz_remap_finish	1050:0:40941:41725							
ANR	5010168	FunctionDef	"gx_cie_xyz_remap_finish (cie_cached_vector3 vec3 , frac * pconc , float * xyz , const gs_gstate * pgs , const gs_color_space * pcs)"		5010167	0					
ANR	5010169	CompoundStatement		1054:0:41118:41725	5010167	0					
ANR	5010170	IdentifierDeclStatement	const gx_cie_joint_caches * pjc = pgs -> cie_joint_caches ;	1055:4:41124:41178	5010167	0	True				
ANR	5010171	IdentifierDecl	* pjc = pgs -> cie_joint_caches		5010167	0					
ANR	5010172	IdentifierDeclType	const gx_cie_joint_caches *		5010167	0					
ANR	5010173	Identifier	pjc		5010167	1					
ANR	5010174	AssignmentExpression	* pjc = pgs -> cie_joint_caches		5010167	2		=			
ANR	5010175	Identifier	pjc		5010167	0					
ANR	5010176	PtrMemberAccess	pgs -> cie_joint_caches		5010167	1					
ANR	5010177	Identifier	pgs		5010167	0					
ANR	5010178	Identifier	cie_joint_caches		5010167	1					
ANR	5010179	IfStatement	if ( ! pjc -> skipDecodeLMN )		5010167	1					
ANR	5010180	Condition	! pjc -> skipDecodeLMN	1061:8:41338:41356	5010167	0	True				
ANR	5010181	UnaryOperationExpression	! pjc -> skipDecodeLMN		5010167	0					
ANR	5010182	UnaryOperator	!		5010167	0					
ANR	5010183	PtrMemberAccess	pjc -> skipDecodeLMN		5010167	1					
ANR	5010184	Identifier	pjc		5010167	0					
ANR	5010185	Identifier	skipDecodeLMN		5010167	1					
ANR	5010186	ExpressionStatement	"cie_lookup_map3 ( & vec3 , & pjc -> DecodeLMN , ""Decode/MatrixLMN"" )"	1062:8:41367:41467	5010167	1	True				
ANR	5010187	CallExpression	"cie_lookup_map3 ( & vec3 , & pjc -> DecodeLMN , ""Decode/MatrixLMN"" )"		5010167	0					
ANR	5010188	Callee	cie_lookup_map3		5010167	0					
ANR	5010189	Identifier	cie_lookup_map3		5010167	0					
ANR	5010190	ArgumentList	& vec3		5010167	1					
ANR	5010191	Argument	& vec3		5010167	0					
ANR	5010192	UnaryOperationExpression	& vec3		5010167	0					
ANR	5010193	UnaryOperator	&		5010167	0					
ANR	5010194	Identifier	vec3		5010167	1					
ANR	5010195	Argument	& pjc -> DecodeLMN		5010167	1					
ANR	5010196	UnaryOperationExpression	& pjc -> DecodeLMN		5010167	0					
ANR	5010197	UnaryOperator	&		5010167	0					
ANR	5010198	PtrMemberAccess	pjc -> DecodeLMN		5010167	1					
ANR	5010199	Identifier	pjc		5010167	0					
ANR	5010200	Identifier	DecodeLMN		5010167	1					
ANR	5010201	Argument	"""Decode/MatrixLMN"""		5010167	2					
ANR	5010202	PrimaryExpression	"""Decode/MatrixLMN"""		5010167	0					
ANR	5010203	ExpressionStatement	xyz [ 0 ] = cie_cached2float ( vec3 . u )	1065:4:41474:41507	5010167	2	True				
ANR	5010204	AssignmentExpression	xyz [ 0 ] = cie_cached2float ( vec3 . u )		5010167	0		=			
ANR	5010205	ArrayIndexing	xyz [ 0 ]		5010167	0					
ANR	5010206	Identifier	xyz		5010167	0					
ANR	5010207	PrimaryExpression	0		5010167	1					
ANR	5010208	CallExpression	cie_cached2float ( vec3 . u )		5010167	1					
ANR	5010209	Callee	cie_cached2float		5010167	0					
ANR	5010210	Identifier	cie_cached2float		5010167	0					
ANR	5010211	ArgumentList	vec3 . u		5010167	1					
ANR	5010212	Argument	vec3 . u		5010167	0					
ANR	5010213	MemberAccess	vec3 . u		5010167	0					
ANR	5010214	Identifier	vec3		5010167	0					
ANR	5010215	Identifier	u		5010167	1					
ANR	5010216	ExpressionStatement	xyz [ 1 ] = cie_cached2float ( vec3 . v )	1066:4:41513:41546	5010167	3	True				
ANR	5010217	AssignmentExpression	xyz [ 1 ] = cie_cached2float ( vec3 . v )		5010167	0		=			
ANR	5010218	ArrayIndexing	xyz [ 1 ]		5010167	0					
ANR	5010219	Identifier	xyz		5010167	0					
ANR	5010220	PrimaryExpression	1		5010167	1					
ANR	5010221	CallExpression	cie_cached2float ( vec3 . v )		5010167	1					
ANR	5010222	Callee	cie_cached2float		5010167	0					
ANR	5010223	Identifier	cie_cached2float		5010167	0					
ANR	5010224	ArgumentList	vec3 . v		5010167	1					
ANR	5010225	Argument	vec3 . v		5010167	0					
ANR	5010226	MemberAccess	vec3 . v		5010167	0					
ANR	5010227	Identifier	vec3		5010167	0					
ANR	5010228	Identifier	v		5010167	1					
ANR	5010229	ExpressionStatement	xyz [ 2 ] = cie_cached2float ( vec3 . w )	1067:4:41552:41585	5010167	4	True				
ANR	5010230	AssignmentExpression	xyz [ 2 ] = cie_cached2float ( vec3 . w )		5010167	0		=			
ANR	5010231	ArrayIndexing	xyz [ 2 ]		5010167	0					
ANR	5010232	Identifier	xyz		5010167	0					
ANR	5010233	PrimaryExpression	2		5010167	1					
ANR	5010234	CallExpression	cie_cached2float ( vec3 . w )		5010167	1					
ANR	5010235	Callee	cie_cached2float		5010167	0					
ANR	5010236	Identifier	cie_cached2float		5010167	0					
ANR	5010237	ArgumentList	vec3 . w		5010167	1					
ANR	5010238	Argument	vec3 . w		5010167	0					
ANR	5010239	MemberAccess	vec3 . w		5010167	0					
ANR	5010240	Identifier	vec3		5010167	0					
ANR	5010241	Identifier	w		5010167	1					
ANR	5010242	ExpressionStatement	pconc [ 0 ] = float2frac_clamp ( xyz [ 0 ] )	1069:4:41592:41627	5010167	5	True				
ANR	5010243	AssignmentExpression	pconc [ 0 ] = float2frac_clamp ( xyz [ 0 ] )		5010167	0		=			
ANR	5010244	ArrayIndexing	pconc [ 0 ]		5010167	0					
ANR	5010245	Identifier	pconc		5010167	0					
ANR	5010246	PrimaryExpression	0		5010167	1					
ANR	5010247	CallExpression	float2frac_clamp ( xyz [ 0 ] )		5010167	1					
ANR	5010248	Callee	float2frac_clamp		5010167	0					
ANR	5010249	Identifier	float2frac_clamp		5010167	0					
ANR	5010250	ArgumentList	xyz [ 0 ]		5010167	1					
ANR	5010251	Argument	xyz [ 0 ]		5010167	0					
ANR	5010252	ArrayIndexing	xyz [ 0 ]		5010167	0					
ANR	5010253	Identifier	xyz		5010167	0					
ANR	5010254	PrimaryExpression	0		5010167	1					
ANR	5010255	ExpressionStatement	pconc [ 1 ] = float2frac_clamp ( xyz [ 1 ] )	1070:4:41633:41668	5010167	6	True				
ANR	5010256	AssignmentExpression	pconc [ 1 ] = float2frac_clamp ( xyz [ 1 ] )		5010167	0		=			
ANR	5010257	ArrayIndexing	pconc [ 1 ]		5010167	0					
ANR	5010258	Identifier	pconc		5010167	0					
ANR	5010259	PrimaryExpression	1		5010167	1					
ANR	5010260	CallExpression	float2frac_clamp ( xyz [ 1 ] )		5010167	1					
ANR	5010261	Callee	float2frac_clamp		5010167	0					
ANR	5010262	Identifier	float2frac_clamp		5010167	0					
ANR	5010263	ArgumentList	xyz [ 1 ]		5010167	1					
ANR	5010264	Argument	xyz [ 1 ]		5010167	0					
ANR	5010265	ArrayIndexing	xyz [ 1 ]		5010167	0					
ANR	5010266	Identifier	xyz		5010167	0					
ANR	5010267	PrimaryExpression	1		5010167	1					
ANR	5010268	ExpressionStatement	pconc [ 2 ] = float2frac_clamp ( xyz [ 2 ] )	1071:4:41674:41709	5010167	7	True				
ANR	5010269	AssignmentExpression	pconc [ 2 ] = float2frac_clamp ( xyz [ 2 ] )		5010167	0		=			
ANR	5010270	ArrayIndexing	pconc [ 2 ]		5010167	0					
ANR	5010271	Identifier	pconc		5010167	0					
ANR	5010272	PrimaryExpression	2		5010167	1					
ANR	5010273	CallExpression	float2frac_clamp ( xyz [ 2 ] )		5010167	1					
ANR	5010274	Callee	float2frac_clamp		5010167	0					
ANR	5010275	Identifier	float2frac_clamp		5010167	0					
ANR	5010276	ArgumentList	xyz [ 2 ]		5010167	1					
ANR	5010277	Argument	xyz [ 2 ]		5010167	0					
ANR	5010278	ArrayIndexing	xyz [ 2 ]		5010167	0					
ANR	5010279	Identifier	xyz		5010167	0					
ANR	5010280	PrimaryExpression	2		5010167	1					
ANR	5010281	ReturnStatement	return 3 ;	1072:4:41715:41723	5010167	8	True				
ANR	5010282	PrimaryExpression	3		5010167	0					
ANR	5010283	ReturnType	int		5010167	1					
ANR	5010284	Identifier	gx_cie_xyz_remap_finish		5010167	2					
ANR	5010285	ParameterList	"cie_cached_vector3 vec3 , frac * pconc , float * xyz , const gs_gstate * pgs , const gs_color_space * pcs"		5010167	3					
ANR	5010286	Parameter	cie_cached_vector3 vec3	1051:24:40969:40991	5010167	0	True				
ANR	5010287	ParameterType	cie_cached_vector3		5010167	0					
ANR	5010288	Identifier	vec3		5010167	1					
ANR	5010289	Parameter	frac * pconc	1051:49:40994:41005	5010167	1	True				
ANR	5010290	ParameterType	frac *		5010167	0					
ANR	5010291	Identifier	pconc		5010167	1					
ANR	5010292	Parameter	float * xyz	1051:63:41008:41017	5010167	2	True				
ANR	5010293	ParameterType	float *		5010167	0					
ANR	5010294	Identifier	xyz		5010167	1					
ANR	5010295	Parameter	const gs_gstate * pgs	1052:24:41044:41064	5010167	3	True				
ANR	5010296	ParameterType	const gs_gstate *		5010167	0					
ANR	5010297	Identifier	pgs		5010167	1					
ANR	5010298	Parameter	const gs_color_space * pcs	1053:24:41091:41115	5010167	4	True				
ANR	5010299	ParameterType	const gs_color_space *		5010167	0					
ANR	5010300	Identifier	pcs		5010167	1					
ANR	5010301	CFGEntryNode	ENTRY		5010167		True				
ANR	5010302	CFGExitNode	EXIT		5010167		True				
ANR	5010303	Symbol	pcs		5010167						
ANR	5010304	Symbol	float2frac_clamp		5010167						
ANR	5010305	Symbol	* pconc		5010167						
ANR	5010306	Symbol	* xyz		5010167						
ANR	5010307	Symbol	* pgs		5010167						
ANR	5010308	Symbol	& pjc -> DecodeLMN		5010167						
ANR	5010309	Symbol	vec3		5010167						
ANR	5010310	Symbol	pjc		5010167						
ANR	5010311	Symbol	pconc		5010167						
ANR	5010312	Symbol	vec3 . w		5010167						
ANR	5010313	Symbol	& vec3		5010167						
ANR	5010314	Symbol	vec3 . v		5010167						
ANR	5010315	Symbol	vec3 . u		5010167						
ANR	5010316	Symbol	cie_cached2float		5010167						
ANR	5010317	Symbol	* pjc		5010167						
ANR	5010318	Symbol	xyz		5010167						
ANR	5010319	Symbol	pgs -> cie_joint_caches		5010167						
ANR	5010320	Symbol	pjc -> skipDecodeLMN		5010167						
ANR	5010321	Symbol	pgs		5010167						
ANR	5010322	Function	cie_lookup_mult3	1076:0:41796:45400							
ANR	5010323	FunctionDef	"cie_lookup_mult3 (cie_cached_vector3 * pvec , const gx_cie_vector_cache3_t * pc)"		5010322	0					
ANR	5010324	CompoundStatement		1079:0:41904:45400	5010322	0					
ANR	5010325	IdentifierDeclStatement	"cie_cached_value u , v , w ;"	1081:4:41939:41963	5010322	0	True				
ANR	5010326	IdentifierDecl	u		5010322	0					
ANR	5010327	IdentifierDeclType	cie_cached_value		5010322	0					
ANR	5010328	Identifier	u		5010322	1					
ANR	5010329	IdentifierDecl	v		5010322	1					
ANR	5010330	IdentifierDeclType	cie_cached_value		5010322	0					
ANR	5010331	Identifier	v		5010322	1					
ANR	5010332	IdentifierDecl	w		5010322	2					
ANR	5010333	IdentifierDeclType	cie_cached_value		5010322	0					
ANR	5010334	Identifier	w		5010322	1					
ANR	5010335	Statement	define	1084:3:41996:42001	5010322	1	True				
ANR	5010336	Statement	LOOKUP_INTERPOLATE_BETWEEN	1084:10:42003:42028	5010322	2	True				
ANR	5010337	Statement	(	1084:36:42029:42029	5010322	3	True				
ANR	5010338	Statement	v0	1084:37:42030:42031	5010322	4	True				
ANR	5010339	Statement	","	1084:39:42032:42032	5010322	5	True				
ANR	5010340	Statement	v1	1084:41:42034:42035	5010322	6	True				
ANR	5010341	Statement	","	1084:43:42036:42036	5010322	7	True				
ANR	5010342	Statement	i	1084:45:42038:42038	5010322	8	True				
ANR	5010343	Statement	)	1084:46:42039:42039	5010322	9	True				
ANR	5010344	Statement	cie_interpolate_between	1085:5:42047:42069	5010322	10	True				
ANR	5010345	Statement	(	1085:28:42070:42070	5010322	11	True				
ANR	5010346	Statement	v0	1085:29:42071:42072	5010322	12	True				
ANR	5010347	Statement	","	1085:31:42073:42073	5010322	13	True				
ANR	5010348	Statement	v1	1085:33:42075:42076	5010322	14	True				
ANR	5010349	Statement	","	1085:35:42077:42077	5010322	15	True				
ANR	5010350	Statement	i	1085:37:42079:42079	5010322	16	True				
ANR	5010351	Statement	)	1085:38:42080:42080	5010322	17	True				
ANR	5010352	Statement	define	1102:1:42658:42663	5010322	18	True				
ANR	5010353	Statement	I_IN_RANGE	1102:8:42665:42674	5010322	19	True				
ANR	5010354	Statement	(	1102:18:42675:42675	5010322	20	True				
ANR	5010355	Statement	j	1102:19:42676:42676	5010322	21	True				
ANR	5010356	Statement	","	1102:20:42677:42677	5010322	22	True				
ANR	5010357	Statement	n	1102:22:42679:42679	5010322	23	True				
ANR	5010358	Statement	)	1102:23:42680:42680	5010322	24	True				
ANR	5010359	Statement	(	1103:2:42685:42685	5010322	25	True				
ANR	5010360	Statement	pvec	1103:3:42686:42689	5010322	26	True				
ANR	5010361	Statement	->	1103:7:42690:42691	5010322	27	True				
ANR	5010362	Statement	n	1103:9:42692:42692	5010322	28	True				
ANR	5010363	Statement	>=	1103:11:42694:42695	5010322	29	True				
ANR	5010364	Statement	pc	1103:14:42697:42698	5010322	30	True				
ANR	5010365	Statement	->	1103:16:42699:42700	5010322	31	True				
ANR	5010366	Statement	interpolation_ranges	1103:18:42701:42720	5010322	32	True				
ANR	5010367	Statement	[	1103:38:42721:42721	5010322	33	True				
ANR	5010368	Statement	j	1103:39:42722:42722	5010322	34	True				
ANR	5010369	Statement	]	1103:40:42723:42723	5010322	35	True				
ANR	5010370	Statement	.	1103:41:42724:42724	5010322	36	True				
ANR	5010371	Statement	rmin	1103:42:42725:42728	5010322	37	True				
ANR	5010372	Statement	&&	1103:47:42730:42731	5010322	38	True				
ANR	5010373	Statement	pvec	1104:3:42737:42740	5010322	39	True				
ANR	5010374	Statement	->	1104:7:42741:42742	5010322	40	True				
ANR	5010375	Statement	n	1104:9:42743:42743	5010322	41	True				
ANR	5010376	Statement	<	1104:11:42745:42745	5010322	42	True				
ANR	5010377	Statement	pc	1104:13:42747:42748	5010322	43	True				
ANR	5010378	Statement	->	1104:15:42749:42750	5010322	44	True				
ANR	5010379	Statement	interpolation_ranges	1104:17:42751:42770	5010322	45	True				
ANR	5010380	Statement	[	1104:37:42771:42771	5010322	46	True				
ANR	5010381	Statement	j	1104:38:42772:42772	5010322	47	True				
ANR	5010382	Statement	]	1104:39:42773:42773	5010322	48	True				
ANR	5010383	Statement	.	1104:40:42774:42774	5010322	49	True				
ANR	5010384	Statement	rmax	1104:41:42775:42778	5010322	50	True				
ANR	5010385	Statement	)	1104:45:42779:42779	5010322	51	True				
ANR	5010386	Statement	define	1105:1:42782:42787	5010322	52	True				
ANR	5010387	Statement	I_INDEX	1105:8:42789:42795	5010322	53	True				
ANR	5010388	Statement	(	1105:15:42796:42796	5010322	54	True				
ANR	5010389	Statement	j	1105:16:42797:42797	5010322	55	True				
ANR	5010390	Statement	","	1105:17:42798:42798	5010322	56	True				
ANR	5010391	Statement	n	1105:19:42800:42800	5010322	57	True				
ANR	5010392	Statement	)	1105:20:42801:42801	5010322	58	True				
ANR	5010393	Statement	LOOKUP_INDEX	1106:2:42806:42817	5010322	59	True				
ANR	5010394	Statement	(	1106:14:42818:42818	5010322	60	True				
ANR	5010395	Statement	pvec	1106:15:42819:42822	5010322	61	True				
ANR	5010396	Statement	->	1106:19:42823:42824	5010322	62	True				
ANR	5010397	Statement	n	1106:21:42825:42825	5010322	63	True				
ANR	5010398	Statement	","	1106:22:42826:42826	5010322	64	True				
ANR	5010399	Statement	&	1106:24:42828:42828	5010322	65	True				
ANR	5010400	Statement	pc	1106:25:42829:42830	5010322	66	True				
ANR	5010401	Statement	->	1106:27:42831:42832	5010322	67	True				
ANR	5010402	Statement	caches	1106:29:42833:42838	5010322	68	True				
ANR	5010403	Statement	[	1106:35:42839:42839	5010322	69	True				
ANR	5010404	Statement	j	1106:36:42840:42840	5010322	70	True				
ANR	5010405	Statement	]	1106:37:42841:42841	5010322	71	True				
ANR	5010406	Statement	","	1106:38:42842:42842	5010322	72	True				
ANR	5010407	Statement	_cie_interpolate_bits	1106:40:42844:42864	5010322	73	True				
ANR	5010408	Statement	)	1106:61:42865:42865	5010322	74	True				
ANR	5010409	Statement	define	1107:1:42868:42873	5010322	75	True				
ANR	5010410	Statement	I_ENTRY	1107:8:42875:42881	5010322	76	True				
ANR	5010411	Statement	(	1107:15:42882:42882	5010322	77	True				
ANR	5010412	Statement	i	1107:16:42883:42883	5010322	78	True				
ANR	5010413	Statement	","	1107:17:42884:42884	5010322	79	True				
ANR	5010414	Statement	j	1107:19:42886:42886	5010322	80	True				
ANR	5010415	Statement	)	1107:20:42887:42887	5010322	81	True				
ANR	5010416	Statement	&	1108:2:42892:42892	5010322	82	True				
ANR	5010417	Statement	pc	1108:3:42893:42894	5010322	83	True				
ANR	5010418	Statement	->	1108:5:42895:42896	5010322	84	True				
ANR	5010419	Statement	caches	1108:7:42897:42902	5010322	85	True				
ANR	5010420	Statement	[	1108:13:42903:42903	5010322	86	True				
ANR	5010421	Statement	j	1108:14:42904:42904	5010322	87	True				
ANR	5010422	Statement	]	1108:15:42905:42905	5010322	88	True				
ANR	5010423	Statement	.	1108:16:42906:42906	5010322	89	True				
ANR	5010424	Statement	vecs	1108:17:42907:42910	5010322	90	True				
ANR	5010425	Statement	.	1108:21:42911:42911	5010322	91	True				
ANR	5010426	Statement	values	1108:22:42912:42917	5010322	92	True				
ANR	5010427	Statement	[	1108:28:42918:42918	5010322	93	True				
ANR	5010428	Statement	(	1108:29:42919:42919	5010322	94	True				
ANR	5010429	Statement	int	1108:30:42920:42922	5010322	95	True				
ANR	5010430	Statement	)	1108:33:42923:42923	5010322	96	True				
ANR	5010431	Statement	cie_cached_rshift	1108:34:42924:42940	5010322	97	True				
ANR	5010432	Statement	(	1108:51:42941:42941	5010322	98	True				
ANR	5010433	Statement	i	1108:52:42942:42942	5010322	99	True				
ANR	5010434	Statement	","	1108:53:42943:42943	5010322	100	True				
ANR	5010435	Statement	_cie_interpolate_bits	1108:55:42945:42965	5010322	101	True				
ANR	5010436	Statement	)	1108:76:42966:42966	5010322	102	True				
ANR	5010437	Statement	]	1108:77:42967:42967	5010322	103	True				
ANR	5010438	Statement	define	1109:1:42970:42975	5010322	104	True				
ANR	5010439	Statement	I_ENTRY1	1109:8:42977:42984	5010322	105	True				
ANR	5010440	Statement	(	1109:16:42985:42985	5010322	106	True				
ANR	5010441	Statement	i	1109:17:42986:42986	5010322	107	True				
ANR	5010442	Statement	","	1109:18:42987:42987	5010322	108	True				
ANR	5010443	Statement	p	1109:20:42989:42989	5010322	109	True				
ANR	5010444	Statement	)	1109:21:42990:42990	5010322	110	True				
ANR	5010445	Statement	(	1110:2:42995:42995	5010322	111	True				
ANR	5010446	Statement	i	1110:3:42996:42996	5010322	112	True				
ANR	5010447	Statement	>=	1110:5:42998:42999	5010322	113	True				
ANR	5010448	Statement	(	1110:8:43001:43001	5010322	114	True				
ANR	5010449	Statement	gx_cie_cache_size	1110:9:43002:43018	5010322	115	True				
ANR	5010450	Statement	-	1110:27:43020:43020	5010322	116	True				
ANR	5010451	Statement	1	1110:29:43022:43022	5010322	117	True				
ANR	5010452	Statement	)	1110:30:43023:43023	5010322	118	True				
ANR	5010453	Statement	<<	1110:32:43025:43026	5010322	119	True				
ANR	5010454	Statement	_cie_interpolate_bits	1110:35:43028:43048	5010322	120	True				
ANR	5010455	Statement	?	1110:57:43050:43050	5010322	121	True				
ANR	5010456	Label	p :	1110:59:43052:43054	5010322	122	True				
ANR	5010457	Identifier	p		5010322	0					
ANR	5010458	Statement	p	1110:63:43056:43056	5010322	123	True				
ANR	5010459	Statement	+	1110:65:43058:43058	5010322	124	True				
ANR	5010460	Statement	1	1110:67:43060:43060	5010322	125	True				
ANR	5010461	Statement	)	1110:68:43061:43061	5010322	126	True				
ANR	5010462	IfStatement	"if ( I_IN_RANGE ( 0 , u ) )"		5010322	127					
ANR	5010463	Condition	"I_IN_RANGE ( 0 , u )"	1112:8:43072:43087	5010322	0	True				
ANR	5010464	CallExpression	"I_IN_RANGE ( 0 , u )"		5010322	0					
ANR	5010465	Callee	I_IN_RANGE		5010322	0					
ANR	5010466	Identifier	I_IN_RANGE		5010322	0					
ANR	5010467	ArgumentList	0		5010322	1					
ANR	5010468	Argument	0		5010322	0					
ANR	5010469	PrimaryExpression	0		5010322	0					
ANR	5010470	Argument	u		5010322	1					
ANR	5010471	Identifier	u		5010322	0					
ANR	5010472	CompoundStatement		37:8:1292:1337	5010322	1					
ANR	5010473	IdentifierDeclStatement	"cie_cached_value i = I_INDEX ( 0 , u ) ;"	1113:8:43100:43134	5010322	0	True				
ANR	5010474	IdentifierDecl	"i = I_INDEX ( 0 , u )"		5010322	0					
ANR	5010475	IdentifierDeclType	cie_cached_value		5010322	0					
ANR	5010476	Identifier	i		5010322	1					
ANR	5010477	AssignmentExpression	"i = I_INDEX ( 0 , u )"		5010322	2		=			
ANR	5010478	Identifier	i		5010322	0					
ANR	5010479	CallExpression	"I_INDEX ( 0 , u )"		5010322	1					
ANR	5010480	Callee	I_INDEX		5010322	0					
ANR	5010481	Identifier	I_INDEX		5010322	0					
ANR	5010482	ArgumentList	0		5010322	1					
ANR	5010483	Argument	0		5010322	0					
ANR	5010484	PrimaryExpression	0		5010322	0					
ANR	5010485	Argument	u		5010322	1					
ANR	5010486	Identifier	u		5010322	0					
ANR	5010487	IdentifierDeclStatement	"const cie_cached_vector3 * p = I_ENTRY ( i , 0 ) ;"	1114:8:43144:43187	5010322	1	True				
ANR	5010488	IdentifierDecl	"* p = I_ENTRY ( i , 0 )"		5010322	0					
ANR	5010489	IdentifierDeclType	const cie_cached_vector3 *		5010322	0					
ANR	5010490	Identifier	p		5010322	1					
ANR	5010491	AssignmentExpression	"* p = I_ENTRY ( i , 0 )"		5010322	2		=			
ANR	5010492	Identifier	p		5010322	0					
ANR	5010493	CallExpression	"I_ENTRY ( i , 0 )"		5010322	1					
ANR	5010494	Callee	I_ENTRY		5010322	0					
ANR	5010495	Identifier	I_ENTRY		5010322	0					
ANR	5010496	ArgumentList	i		5010322	1					
ANR	5010497	Argument	i		5010322	0					
ANR	5010498	Identifier	i		5010322	0					
ANR	5010499	Argument	0		5010322	1					
ANR	5010500	PrimaryExpression	0		5010322	0					
ANR	5010501	IdentifierDeclStatement	"const cie_cached_vector3 * p1 = I_ENTRY1 ( i , p ) ;"	1115:8:43197:43242	5010322	2	True				
ANR	5010502	IdentifierDecl	"* p1 = I_ENTRY1 ( i , p )"		5010322	0					
ANR	5010503	IdentifierDeclType	const cie_cached_vector3 *		5010322	0					
ANR	5010504	Identifier	p1		5010322	1					
ANR	5010505	AssignmentExpression	"* p1 = I_ENTRY1 ( i , p )"		5010322	2		=			
ANR	5010506	Identifier	p1		5010322	0					
ANR	5010507	CallExpression	"I_ENTRY1 ( i , p )"		5010322	1					
ANR	5010508	Callee	I_ENTRY1		5010322	0					
ANR	5010509	Identifier	I_ENTRY1		5010322	0					
ANR	5010510	ArgumentList	i		5010322	1					
ANR	5010511	Argument	i		5010322	0					
ANR	5010512	Identifier	i		5010322	0					
ANR	5010513	Argument	p		5010322	1					
ANR	5010514	Identifier	p		5010322	0					
ANR	5010515	ExpressionStatement	"if_debug0 ( 'C' , ""[c]Interpolating u.\\n"" )"	1117:8:43253:43292	5010322	3	True				
ANR	5010516	CallExpression	"if_debug0 ( 'C' , ""[c]Interpolating u.\\n"" )"		5010322	0					
ANR	5010517	Callee	if_debug0		5010322	0					
ANR	5010518	Identifier	if_debug0		5010322	0					
ANR	5010519	ArgumentList	'C'		5010322	1					
ANR	5010520	Argument	'C'		5010322	0					
ANR	5010521	PrimaryExpression	'C'		5010322	0					
ANR	5010522	Argument	"""[c]Interpolating u.\\n"""		5010322	1					
ANR	5010523	PrimaryExpression	"""[c]Interpolating u.\\n"""		5010322	0					
ANR	5010524	ExpressionStatement	"u = LOOKUP_INTERPOLATE_BETWEEN ( p -> u , p1 -> u , i )"	1118:8:43302:43348	5010322	4	True				
ANR	5010525	AssignmentExpression	"u = LOOKUP_INTERPOLATE_BETWEEN ( p -> u , p1 -> u , i )"		5010322	0		=			
ANR	5010526	Identifier	u		5010322	0					
ANR	5010527	CallExpression	"LOOKUP_INTERPOLATE_BETWEEN ( p -> u , p1 -> u , i )"		5010322	1					
ANR	5010528	Callee	LOOKUP_INTERPOLATE_BETWEEN		5010322	0					
ANR	5010529	Identifier	LOOKUP_INTERPOLATE_BETWEEN		5010322	0					
ANR	5010530	ArgumentList	p -> u		5010322	1					
ANR	5010531	Argument	p -> u		5010322	0					
ANR	5010532	PtrMemberAccess	p -> u		5010322	0					
ANR	5010533	Identifier	p		5010322	0					
ANR	5010534	Identifier	u		5010322	1					
ANR	5010535	Argument	p1 -> u		5010322	1					
ANR	5010536	PtrMemberAccess	p1 -> u		5010322	0					
ANR	5010537	Identifier	p1		5010322	0					
ANR	5010538	Identifier	u		5010322	1					
ANR	5010539	Argument	i		5010322	2					
ANR	5010540	Identifier	i		5010322	0					
ANR	5010541	ExpressionStatement	"v = LOOKUP_INTERPOLATE_BETWEEN ( p -> v , p1 -> v , i )"	1119:8:43358:43404	5010322	5	True				
ANR	5010542	AssignmentExpression	"v = LOOKUP_INTERPOLATE_BETWEEN ( p -> v , p1 -> v , i )"		5010322	0		=			
ANR	5010543	Identifier	v		5010322	0					
ANR	5010544	CallExpression	"LOOKUP_INTERPOLATE_BETWEEN ( p -> v , p1 -> v , i )"		5010322	1					
ANR	5010545	Callee	LOOKUP_INTERPOLATE_BETWEEN		5010322	0					
ANR	5010546	Identifier	LOOKUP_INTERPOLATE_BETWEEN		5010322	0					
ANR	5010547	ArgumentList	p -> v		5010322	1					
ANR	5010548	Argument	p -> v		5010322	0					
ANR	5010549	PtrMemberAccess	p -> v		5010322	0					
ANR	5010550	Identifier	p		5010322	0					
ANR	5010551	Identifier	v		5010322	1					
ANR	5010552	Argument	p1 -> v		5010322	1					
ANR	5010553	PtrMemberAccess	p1 -> v		5010322	0					
ANR	5010554	Identifier	p1		5010322	0					
ANR	5010555	Identifier	v		5010322	1					
ANR	5010556	Argument	i		5010322	2					
ANR	5010557	Identifier	i		5010322	0					
ANR	5010558	ExpressionStatement	"w = LOOKUP_INTERPOLATE_BETWEEN ( p -> w , p1 -> w , i )"	1120:8:43414:43460	5010322	6	True				
ANR	5010559	AssignmentExpression	"w = LOOKUP_INTERPOLATE_BETWEEN ( p -> w , p1 -> w , i )"		5010322	0		=			
ANR	5010560	Identifier	w		5010322	0					
ANR	5010561	CallExpression	"LOOKUP_INTERPOLATE_BETWEEN ( p -> w , p1 -> w , i )"		5010322	1					
ANR	5010562	Callee	LOOKUP_INTERPOLATE_BETWEEN		5010322	0					
ANR	5010563	Identifier	LOOKUP_INTERPOLATE_BETWEEN		5010322	0					
ANR	5010564	ArgumentList	p -> w		5010322	1					
ANR	5010565	Argument	p -> w		5010322	0					
ANR	5010566	PtrMemberAccess	p -> w		5010322	0					
ANR	5010567	Identifier	p		5010322	0					
ANR	5010568	Identifier	w		5010322	1					
ANR	5010569	Argument	p1 -> w		5010322	1					
ANR	5010570	PtrMemberAccess	p1 -> w		5010322	0					
ANR	5010571	Identifier	p1		5010322	0					
ANR	5010572	Identifier	w		5010322	1					
ANR	5010573	Argument	i		5010322	2					
ANR	5010574	Identifier	i		5010322	0					
ANR	5010575	ElseStatement	else		5010322	0					
ANR	5010576	CompoundStatement		44:8:1578:1645	5010322	0					
ANR	5010577	IdentifierDeclStatement	"const cie_cached_vector3 * p = LOOKUP_ENTRY ( pvec -> u , & pc -> caches [ 0 ] ) ;"	1122:8:43483:43550	5010322	0	True				
ANR	5010578	IdentifierDecl	"* p = LOOKUP_ENTRY ( pvec -> u , & pc -> caches [ 0 ] )"		5010322	0					
ANR	5010579	IdentifierDeclType	const cie_cached_vector3 *		5010322	0					
ANR	5010580	Identifier	p		5010322	1					
ANR	5010581	AssignmentExpression	"* p = LOOKUP_ENTRY ( pvec -> u , & pc -> caches [ 0 ] )"		5010322	2		=			
ANR	5010582	Identifier	p		5010322	0					
ANR	5010583	CallExpression	"LOOKUP_ENTRY ( pvec -> u , & pc -> caches [ 0 ] )"		5010322	1					
ANR	5010584	Callee	LOOKUP_ENTRY		5010322	0					
ANR	5010585	Identifier	LOOKUP_ENTRY		5010322	0					
ANR	5010586	ArgumentList	pvec -> u		5010322	1					
ANR	5010587	Argument	pvec -> u		5010322	0					
ANR	5010588	PtrMemberAccess	pvec -> u		5010322	0					
ANR	5010589	Identifier	pvec		5010322	0					
ANR	5010590	Identifier	u		5010322	1					
ANR	5010591	Argument	& pc -> caches [ 0 ]		5010322	1					
ANR	5010592	UnaryOperationExpression	& pc -> caches [ 0 ]		5010322	0					
ANR	5010593	UnaryOperator	&		5010322	0					
ANR	5010594	ArrayIndexing	pc -> caches [ 0 ]		5010322	1					
ANR	5010595	PtrMemberAccess	pc -> caches		5010322	0					
ANR	5010596	Identifier	pc		5010322	0					
ANR	5010597	Identifier	caches		5010322	1					
ANR	5010598	PrimaryExpression	0		5010322	1					
ANR	5010599	ExpressionStatement	"if_debug0 ( 'C' , ""[c]Not interpolating u.\\n"" )"	1124:8:43561:43604	5010322	1	True				
ANR	5010600	CallExpression	"if_debug0 ( 'C' , ""[c]Not interpolating u.\\n"" )"		5010322	0					
ANR	5010601	Callee	if_debug0		5010322	0					
ANR	5010602	Identifier	if_debug0		5010322	0					
ANR	5010603	ArgumentList	'C'		5010322	1					
ANR	5010604	Argument	'C'		5010322	0					
ANR	5010605	PrimaryExpression	'C'		5010322	0					
ANR	5010606	Argument	"""[c]Not interpolating u.\\n"""		5010322	1					
ANR	5010607	PrimaryExpression	"""[c]Not interpolating u.\\n"""		5010322	0					
ANR	5010608	ExpressionStatement	"u = p -> u , v = p -> v , w = p -> w"	1125:8:43614:43642	5010322	2	True				
ANR	5010609	Expression	"u = p -> u , v = p -> v , w = p -> w"		5010322	0					
ANR	5010610	AssignmentExpression	u = p -> u		5010322	0		=			
ANR	5010611	Identifier	u		5010322	0					
ANR	5010612	PtrMemberAccess	p -> u		5010322	1					
ANR	5010613	Identifier	p		5010322	0					
ANR	5010614	Identifier	u		5010322	1					
ANR	5010615	Expression	"v = p -> v , w = p -> w"		5010322	1					
ANR	5010616	AssignmentExpression	v = p -> v		5010322	0		=			
ANR	5010617	Identifier	v		5010322	0					
ANR	5010618	PtrMemberAccess	p -> v		5010322	1					
ANR	5010619	Identifier	p		5010322	0					
ANR	5010620	Identifier	v		5010322	1					
ANR	5010621	AssignmentExpression	w = p -> w		5010322	1		=			
ANR	5010622	Identifier	w		5010322	0					
ANR	5010623	PtrMemberAccess	p -> w		5010322	1					
ANR	5010624	Identifier	p		5010322	0					
ANR	5010625	Identifier	w		5010322	1					
ANR	5010626	IfStatement	"if ( I_IN_RANGE ( 1 , v ) )"		5010322	128					
ANR	5010627	Condition	"I_IN_RANGE ( 1 , v )"	1128:8:43659:43674	5010322	0	True				
ANR	5010628	CallExpression	"I_IN_RANGE ( 1 , v )"		5010322	0					
ANR	5010629	Callee	I_IN_RANGE		5010322	0					
ANR	5010630	Identifier	I_IN_RANGE		5010322	0					
ANR	5010631	ArgumentList	1		5010322	1					
ANR	5010632	Argument	1		5010322	0					
ANR	5010633	PrimaryExpression	1		5010322	0					
ANR	5010634	Argument	v		5010322	1					
ANR	5010635	Identifier	v		5010322	0					
ANR	5010636	CompoundStatement		53:8:1879:1924	5010322	1					
ANR	5010637	IdentifierDeclStatement	"cie_cached_value i = I_INDEX ( 1 , v ) ;"	1129:8:43687:43721	5010322	0	True				
ANR	5010638	IdentifierDecl	"i = I_INDEX ( 1 , v )"		5010322	0					
ANR	5010639	IdentifierDeclType	cie_cached_value		5010322	0					
ANR	5010640	Identifier	i		5010322	1					
ANR	5010641	AssignmentExpression	"i = I_INDEX ( 1 , v )"		5010322	2		=			
ANR	5010642	Identifier	i		5010322	0					
ANR	5010643	CallExpression	"I_INDEX ( 1 , v )"		5010322	1					
ANR	5010644	Callee	I_INDEX		5010322	0					
ANR	5010645	Identifier	I_INDEX		5010322	0					
ANR	5010646	ArgumentList	1		5010322	1					
ANR	5010647	Argument	1		5010322	0					
ANR	5010648	PrimaryExpression	1		5010322	0					
ANR	5010649	Argument	v		5010322	1					
ANR	5010650	Identifier	v		5010322	0					
ANR	5010651	IdentifierDeclStatement	"const cie_cached_vector3 * p = I_ENTRY ( i , 1 ) ;"	1130:8:43731:43774	5010322	1	True				
ANR	5010652	IdentifierDecl	"* p = I_ENTRY ( i , 1 )"		5010322	0					
ANR	5010653	IdentifierDeclType	const cie_cached_vector3 *		5010322	0					
ANR	5010654	Identifier	p		5010322	1					
ANR	5010655	AssignmentExpression	"* p = I_ENTRY ( i , 1 )"		5010322	2		=			
ANR	5010656	Identifier	p		5010322	0					
ANR	5010657	CallExpression	"I_ENTRY ( i , 1 )"		5010322	1					
ANR	5010658	Callee	I_ENTRY		5010322	0					
ANR	5010659	Identifier	I_ENTRY		5010322	0					
ANR	5010660	ArgumentList	i		5010322	1					
ANR	5010661	Argument	i		5010322	0					
ANR	5010662	Identifier	i		5010322	0					
ANR	5010663	Argument	1		5010322	1					
ANR	5010664	PrimaryExpression	1		5010322	0					
ANR	5010665	IdentifierDeclStatement	"const cie_cached_vector3 * p1 = I_ENTRY1 ( i , p ) ;"	1131:8:43784:43829	5010322	2	True				
ANR	5010666	IdentifierDecl	"* p1 = I_ENTRY1 ( i , p )"		5010322	0					
ANR	5010667	IdentifierDeclType	const cie_cached_vector3 *		5010322	0					
ANR	5010668	Identifier	p1		5010322	1					
ANR	5010669	AssignmentExpression	"* p1 = I_ENTRY1 ( i , p )"		5010322	2		=			
ANR	5010670	Identifier	p1		5010322	0					
ANR	5010671	CallExpression	"I_ENTRY1 ( i , p )"		5010322	1					
ANR	5010672	Callee	I_ENTRY1		5010322	0					
ANR	5010673	Identifier	I_ENTRY1		5010322	0					
ANR	5010674	ArgumentList	i		5010322	1					
ANR	5010675	Argument	i		5010322	0					
ANR	5010676	Identifier	i		5010322	0					
ANR	5010677	Argument	p		5010322	1					
ANR	5010678	Identifier	p		5010322	0					
ANR	5010679	ExpressionStatement	"if_debug0 ( 'C' , ""[c]Interpolating v.\\n"" )"	1133:8:43840:43879	5010322	3	True				
ANR	5010680	CallExpression	"if_debug0 ( 'C' , ""[c]Interpolating v.\\n"" )"		5010322	0					
ANR	5010681	Callee	if_debug0		5010322	0					
ANR	5010682	Identifier	if_debug0		5010322	0					
ANR	5010683	ArgumentList	'C'		5010322	1					
ANR	5010684	Argument	'C'		5010322	0					
ANR	5010685	PrimaryExpression	'C'		5010322	0					
ANR	5010686	Argument	"""[c]Interpolating v.\\n"""		5010322	1					
ANR	5010687	PrimaryExpression	"""[c]Interpolating v.\\n"""		5010322	0					
ANR	5010688	ExpressionStatement	"u += LOOKUP_INTERPOLATE_BETWEEN ( p -> u , p1 -> u , i )"	1134:8:43889:43936	5010322	4	True				
ANR	5010689	AssignmentExpression	"u += LOOKUP_INTERPOLATE_BETWEEN ( p -> u , p1 -> u , i )"		5010322	0		+=			
ANR	5010690	Identifier	u		5010322	0					
ANR	5010691	CallExpression	"LOOKUP_INTERPOLATE_BETWEEN ( p -> u , p1 -> u , i )"		5010322	1					
ANR	5010692	Callee	LOOKUP_INTERPOLATE_BETWEEN		5010322	0					
ANR	5010693	Identifier	LOOKUP_INTERPOLATE_BETWEEN		5010322	0					
ANR	5010694	ArgumentList	p -> u		5010322	1					
ANR	5010695	Argument	p -> u		5010322	0					
ANR	5010696	PtrMemberAccess	p -> u		5010322	0					
ANR	5010697	Identifier	p		5010322	0					
ANR	5010698	Identifier	u		5010322	1					
ANR	5010699	Argument	p1 -> u		5010322	1					
ANR	5010700	PtrMemberAccess	p1 -> u		5010322	0					
ANR	5010701	Identifier	p1		5010322	0					
ANR	5010702	Identifier	u		5010322	1					
ANR	5010703	Argument	i		5010322	2					
ANR	5010704	Identifier	i		5010322	0					
ANR	5010705	ExpressionStatement	"v += LOOKUP_INTERPOLATE_BETWEEN ( p -> v , p1 -> v , i )"	1135:8:43946:43993	5010322	5	True				
ANR	5010706	AssignmentExpression	"v += LOOKUP_INTERPOLATE_BETWEEN ( p -> v , p1 -> v , i )"		5010322	0		+=			
ANR	5010707	Identifier	v		5010322	0					
ANR	5010708	CallExpression	"LOOKUP_INTERPOLATE_BETWEEN ( p -> v , p1 -> v , i )"		5010322	1					
ANR	5010709	Callee	LOOKUP_INTERPOLATE_BETWEEN		5010322	0					
ANR	5010710	Identifier	LOOKUP_INTERPOLATE_BETWEEN		5010322	0					
ANR	5010711	ArgumentList	p -> v		5010322	1					
ANR	5010712	Argument	p -> v		5010322	0					
ANR	5010713	PtrMemberAccess	p -> v		5010322	0					
ANR	5010714	Identifier	p		5010322	0					
ANR	5010715	Identifier	v		5010322	1					
ANR	5010716	Argument	p1 -> v		5010322	1					
ANR	5010717	PtrMemberAccess	p1 -> v		5010322	0					
ANR	5010718	Identifier	p1		5010322	0					
ANR	5010719	Identifier	v		5010322	1					
ANR	5010720	Argument	i		5010322	2					
ANR	5010721	Identifier	i		5010322	0					
ANR	5010722	ExpressionStatement	"w += LOOKUP_INTERPOLATE_BETWEEN ( p -> w , p1 -> w , i )"	1136:8:44003:44050	5010322	6	True				
ANR	5010723	AssignmentExpression	"w += LOOKUP_INTERPOLATE_BETWEEN ( p -> w , p1 -> w , i )"		5010322	0		+=			
ANR	5010724	Identifier	w		5010322	0					
ANR	5010725	CallExpression	"LOOKUP_INTERPOLATE_BETWEEN ( p -> w , p1 -> w , i )"		5010322	1					
ANR	5010726	Callee	LOOKUP_INTERPOLATE_BETWEEN		5010322	0					
ANR	5010727	Identifier	LOOKUP_INTERPOLATE_BETWEEN		5010322	0					
ANR	5010728	ArgumentList	p -> w		5010322	1					
ANR	5010729	Argument	p -> w		5010322	0					
ANR	5010730	PtrMemberAccess	p -> w		5010322	0					
ANR	5010731	Identifier	p		5010322	0					
ANR	5010732	Identifier	w		5010322	1					
ANR	5010733	Argument	p1 -> w		5010322	1					
ANR	5010734	PtrMemberAccess	p1 -> w		5010322	0					
ANR	5010735	Identifier	p1		5010322	0					
ANR	5010736	Identifier	w		5010322	1					
ANR	5010737	Argument	i		5010322	2					
ANR	5010738	Identifier	i		5010322	0					
ANR	5010739	ElseStatement	else		5010322	0					
ANR	5010740	CompoundStatement		60:8:2168:2235	5010322	0					
ANR	5010741	IdentifierDeclStatement	"const cie_cached_vector3 * p = LOOKUP_ENTRY ( pvec -> v , & pc -> caches [ 1 ] ) ;"	1138:8:44073:44140	5010322	0	True				
ANR	5010742	IdentifierDecl	"* p = LOOKUP_ENTRY ( pvec -> v , & pc -> caches [ 1 ] )"		5010322	0					
ANR	5010743	IdentifierDeclType	const cie_cached_vector3 *		5010322	0					
ANR	5010744	Identifier	p		5010322	1					
ANR	5010745	AssignmentExpression	"* p = LOOKUP_ENTRY ( pvec -> v , & pc -> caches [ 1 ] )"		5010322	2		=			
ANR	5010746	Identifier	p		5010322	0					
ANR	5010747	CallExpression	"LOOKUP_ENTRY ( pvec -> v , & pc -> caches [ 1 ] )"		5010322	1					
ANR	5010748	Callee	LOOKUP_ENTRY		5010322	0					
ANR	5010749	Identifier	LOOKUP_ENTRY		5010322	0					
ANR	5010750	ArgumentList	pvec -> v		5010322	1					
ANR	5010751	Argument	pvec -> v		5010322	0					
ANR	5010752	PtrMemberAccess	pvec -> v		5010322	0					
ANR	5010753	Identifier	pvec		5010322	0					
ANR	5010754	Identifier	v		5010322	1					
ANR	5010755	Argument	& pc -> caches [ 1 ]		5010322	1					
ANR	5010756	UnaryOperationExpression	& pc -> caches [ 1 ]		5010322	0					
ANR	5010757	UnaryOperator	&		5010322	0					
ANR	5010758	ArrayIndexing	pc -> caches [ 1 ]		5010322	1					
ANR	5010759	PtrMemberAccess	pc -> caches		5010322	0					
ANR	5010760	Identifier	pc		5010322	0					
ANR	5010761	Identifier	caches		5010322	1					
ANR	5010762	PrimaryExpression	1		5010322	1					
ANR	5010763	ExpressionStatement	"if_debug0 ( 'C' , ""[c]Not interpolating v.\\n"" )"	1140:8:44151:44194	5010322	1	True				
ANR	5010764	CallExpression	"if_debug0 ( 'C' , ""[c]Not interpolating v.\\n"" )"		5010322	0					
ANR	5010765	Callee	if_debug0		5010322	0					
ANR	5010766	Identifier	if_debug0		5010322	0					
ANR	5010767	ArgumentList	'C'		5010322	1					
ANR	5010768	Argument	'C'		5010322	0					
ANR	5010769	PrimaryExpression	'C'		5010322	0					
ANR	5010770	Argument	"""[c]Not interpolating v.\\n"""		5010322	1					
ANR	5010771	PrimaryExpression	"""[c]Not interpolating v.\\n"""		5010322	0					
ANR	5010772	ExpressionStatement	"u += p -> u , v += p -> v , w += p -> w"	1141:8:44204:44235	5010322	2	True				
ANR	5010773	Expression	"u += p -> u , v += p -> v , w += p -> w"		5010322	0					
ANR	5010774	AssignmentExpression	u += p -> u		5010322	0		+=			
ANR	5010775	Identifier	u		5010322	0					
ANR	5010776	PtrMemberAccess	p -> u		5010322	1					
ANR	5010777	Identifier	p		5010322	0					
ANR	5010778	Identifier	u		5010322	1					
ANR	5010779	Expression	"v += p -> v , w += p -> w"		5010322	1					
ANR	5010780	AssignmentExpression	v += p -> v		5010322	0		+=			
ANR	5010781	Identifier	v		5010322	0					
ANR	5010782	PtrMemberAccess	p -> v		5010322	1					
ANR	5010783	Identifier	p		5010322	0					
ANR	5010784	Identifier	v		5010322	1					
ANR	5010785	AssignmentExpression	w += p -> w		5010322	1		+=			
ANR	5010786	Identifier	w		5010322	0					
ANR	5010787	PtrMemberAccess	p -> w		5010322	1					
ANR	5010788	Identifier	p		5010322	0					
ANR	5010789	Identifier	w		5010322	1					
ANR	5010790	IfStatement	"if ( I_IN_RANGE ( 2 , w ) )"		5010322	129					
ANR	5010791	Condition	"I_IN_RANGE ( 2 , w )"	1144:8:44252:44267	5010322	0	True				
ANR	5010792	CallExpression	"I_IN_RANGE ( 2 , w )"		5010322	0					
ANR	5010793	Callee	I_IN_RANGE		5010322	0					
ANR	5010794	Identifier	I_IN_RANGE		5010322	0					
ANR	5010795	ArgumentList	2		5010322	1					
ANR	5010796	Argument	2		5010322	0					
ANR	5010797	PrimaryExpression	2		5010322	0					
ANR	5010798	Argument	w		5010322	1					
ANR	5010799	Identifier	w		5010322	0					
ANR	5010800	CompoundStatement		69:8:2472:2517	5010322	1					
ANR	5010801	IdentifierDeclStatement	"cie_cached_value i = I_INDEX ( 2 , w ) ;"	1145:8:44280:44314	5010322	0	True				
ANR	5010802	IdentifierDecl	"i = I_INDEX ( 2 , w )"		5010322	0					
ANR	5010803	IdentifierDeclType	cie_cached_value		5010322	0					
ANR	5010804	Identifier	i		5010322	1					
ANR	5010805	AssignmentExpression	"i = I_INDEX ( 2 , w )"		5010322	2		=			
ANR	5010806	Identifier	i		5010322	0					
ANR	5010807	CallExpression	"I_INDEX ( 2 , w )"		5010322	1					
ANR	5010808	Callee	I_INDEX		5010322	0					
ANR	5010809	Identifier	I_INDEX		5010322	0					
ANR	5010810	ArgumentList	2		5010322	1					
ANR	5010811	Argument	2		5010322	0					
ANR	5010812	PrimaryExpression	2		5010322	0					
ANR	5010813	Argument	w		5010322	1					
ANR	5010814	Identifier	w		5010322	0					
ANR	5010815	IdentifierDeclStatement	"const cie_cached_vector3 * p = I_ENTRY ( i , 2 ) ;"	1146:8:44324:44367	5010322	1	True				
ANR	5010816	IdentifierDecl	"* p = I_ENTRY ( i , 2 )"		5010322	0					
ANR	5010817	IdentifierDeclType	const cie_cached_vector3 *		5010322	0					
ANR	5010818	Identifier	p		5010322	1					
ANR	5010819	AssignmentExpression	"* p = I_ENTRY ( i , 2 )"		5010322	2		=			
ANR	5010820	Identifier	p		5010322	0					
ANR	5010821	CallExpression	"I_ENTRY ( i , 2 )"		5010322	1					
ANR	5010822	Callee	I_ENTRY		5010322	0					
ANR	5010823	Identifier	I_ENTRY		5010322	0					
ANR	5010824	ArgumentList	i		5010322	1					
ANR	5010825	Argument	i		5010322	0					
ANR	5010826	Identifier	i		5010322	0					
ANR	5010827	Argument	2		5010322	1					
ANR	5010828	PrimaryExpression	2		5010322	0					
ANR	5010829	IdentifierDeclStatement	"const cie_cached_vector3 * p1 = I_ENTRY1 ( i , p ) ;"	1147:8:44377:44422	5010322	2	True				
ANR	5010830	IdentifierDecl	"* p1 = I_ENTRY1 ( i , p )"		5010322	0					
ANR	5010831	IdentifierDeclType	const cie_cached_vector3 *		5010322	0					
ANR	5010832	Identifier	p1		5010322	1					
ANR	5010833	AssignmentExpression	"* p1 = I_ENTRY1 ( i , p )"		5010322	2		=			
ANR	5010834	Identifier	p1		5010322	0					
ANR	5010835	CallExpression	"I_ENTRY1 ( i , p )"		5010322	1					
ANR	5010836	Callee	I_ENTRY1		5010322	0					
ANR	5010837	Identifier	I_ENTRY1		5010322	0					
ANR	5010838	ArgumentList	i		5010322	1					
ANR	5010839	Argument	i		5010322	0					
ANR	5010840	Identifier	i		5010322	0					
ANR	5010841	Argument	p		5010322	1					
ANR	5010842	Identifier	p		5010322	0					
ANR	5010843	ExpressionStatement	"if_debug0 ( 'C' , ""[c]Interpolating w.\\n"" )"	1149:8:44433:44472	5010322	3	True				
ANR	5010844	CallExpression	"if_debug0 ( 'C' , ""[c]Interpolating w.\\n"" )"		5010322	0					
ANR	5010845	Callee	if_debug0		5010322	0					
ANR	5010846	Identifier	if_debug0		5010322	0					
ANR	5010847	ArgumentList	'C'		5010322	1					
ANR	5010848	Argument	'C'		5010322	0					
ANR	5010849	PrimaryExpression	'C'		5010322	0					
ANR	5010850	Argument	"""[c]Interpolating w.\\n"""		5010322	1					
ANR	5010851	PrimaryExpression	"""[c]Interpolating w.\\n"""		5010322	0					
ANR	5010852	ExpressionStatement	"u += LOOKUP_INTERPOLATE_BETWEEN ( p -> u , p1 -> u , i )"	1150:8:44482:44529	5010322	4	True				
ANR	5010853	AssignmentExpression	"u += LOOKUP_INTERPOLATE_BETWEEN ( p -> u , p1 -> u , i )"		5010322	0		+=			
ANR	5010854	Identifier	u		5010322	0					
ANR	5010855	CallExpression	"LOOKUP_INTERPOLATE_BETWEEN ( p -> u , p1 -> u , i )"		5010322	1					
ANR	5010856	Callee	LOOKUP_INTERPOLATE_BETWEEN		5010322	0					
ANR	5010857	Identifier	LOOKUP_INTERPOLATE_BETWEEN		5010322	0					
ANR	5010858	ArgumentList	p -> u		5010322	1					
ANR	5010859	Argument	p -> u		5010322	0					
ANR	5010860	PtrMemberAccess	p -> u		5010322	0					
ANR	5010861	Identifier	p		5010322	0					
ANR	5010862	Identifier	u		5010322	1					
ANR	5010863	Argument	p1 -> u		5010322	1					
ANR	5010864	PtrMemberAccess	p1 -> u		5010322	0					
ANR	5010865	Identifier	p1		5010322	0					
ANR	5010866	Identifier	u		5010322	1					
ANR	5010867	Argument	i		5010322	2					
ANR	5010868	Identifier	i		5010322	0					
ANR	5010869	ExpressionStatement	"v += LOOKUP_INTERPOLATE_BETWEEN ( p -> v , p1 -> v , i )"	1151:8:44539:44586	5010322	5	True				
ANR	5010870	AssignmentExpression	"v += LOOKUP_INTERPOLATE_BETWEEN ( p -> v , p1 -> v , i )"		5010322	0		+=			
ANR	5010871	Identifier	v		5010322	0					
ANR	5010872	CallExpression	"LOOKUP_INTERPOLATE_BETWEEN ( p -> v , p1 -> v , i )"		5010322	1					
ANR	5010873	Callee	LOOKUP_INTERPOLATE_BETWEEN		5010322	0					
ANR	5010874	Identifier	LOOKUP_INTERPOLATE_BETWEEN		5010322	0					
ANR	5010875	ArgumentList	p -> v		5010322	1					
ANR	5010876	Argument	p -> v		5010322	0					
ANR	5010877	PtrMemberAccess	p -> v		5010322	0					
ANR	5010878	Identifier	p		5010322	0					
ANR	5010879	Identifier	v		5010322	1					
ANR	5010880	Argument	p1 -> v		5010322	1					
ANR	5010881	PtrMemberAccess	p1 -> v		5010322	0					
ANR	5010882	Identifier	p1		5010322	0					
ANR	5010883	Identifier	v		5010322	1					
ANR	5010884	Argument	i		5010322	2					
ANR	5010885	Identifier	i		5010322	0					
ANR	5010886	ExpressionStatement	"w += LOOKUP_INTERPOLATE_BETWEEN ( p -> w , p1 -> w , i )"	1152:8:44596:44643	5010322	6	True				
ANR	5010887	AssignmentExpression	"w += LOOKUP_INTERPOLATE_BETWEEN ( p -> w , p1 -> w , i )"		5010322	0		+=			
ANR	5010888	Identifier	w		5010322	0					
ANR	5010889	CallExpression	"LOOKUP_INTERPOLATE_BETWEEN ( p -> w , p1 -> w , i )"		5010322	1					
ANR	5010890	Callee	LOOKUP_INTERPOLATE_BETWEEN		5010322	0					
ANR	5010891	Identifier	LOOKUP_INTERPOLATE_BETWEEN		5010322	0					
ANR	5010892	ArgumentList	p -> w		5010322	1					
ANR	5010893	Argument	p -> w		5010322	0					
ANR	5010894	PtrMemberAccess	p -> w		5010322	0					
ANR	5010895	Identifier	p		5010322	0					
ANR	5010896	Identifier	w		5010322	1					
ANR	5010897	Argument	p1 -> w		5010322	1					
ANR	5010898	PtrMemberAccess	p1 -> w		5010322	0					
ANR	5010899	Identifier	p1		5010322	0					
ANR	5010900	Identifier	w		5010322	1					
ANR	5010901	Argument	i		5010322	2					
ANR	5010902	Identifier	i		5010322	0					
ANR	5010903	ElseStatement	else		5010322	0					
ANR	5010904	CompoundStatement		76:8:2761:2828	5010322	0					
ANR	5010905	IdentifierDeclStatement	"const cie_cached_vector3 * p = LOOKUP_ENTRY ( pvec -> w , & pc -> caches [ 2 ] ) ;"	1154:8:44666:44733	5010322	0	True				
ANR	5010906	IdentifierDecl	"* p = LOOKUP_ENTRY ( pvec -> w , & pc -> caches [ 2 ] )"		5010322	0					
ANR	5010907	IdentifierDeclType	const cie_cached_vector3 *		5010322	0					
ANR	5010908	Identifier	p		5010322	1					
ANR	5010909	AssignmentExpression	"* p = LOOKUP_ENTRY ( pvec -> w , & pc -> caches [ 2 ] )"		5010322	2		=			
ANR	5010910	Identifier	p		5010322	0					
ANR	5010911	CallExpression	"LOOKUP_ENTRY ( pvec -> w , & pc -> caches [ 2 ] )"		5010322	1					
ANR	5010912	Callee	LOOKUP_ENTRY		5010322	0					
ANR	5010913	Identifier	LOOKUP_ENTRY		5010322	0					
ANR	5010914	ArgumentList	pvec -> w		5010322	1					
ANR	5010915	Argument	pvec -> w		5010322	0					
ANR	5010916	PtrMemberAccess	pvec -> w		5010322	0					
ANR	5010917	Identifier	pvec		5010322	0					
ANR	5010918	Identifier	w		5010322	1					
ANR	5010919	Argument	& pc -> caches [ 2 ]		5010322	1					
ANR	5010920	UnaryOperationExpression	& pc -> caches [ 2 ]		5010322	0					
ANR	5010921	UnaryOperator	&		5010322	0					
ANR	5010922	ArrayIndexing	pc -> caches [ 2 ]		5010322	1					
ANR	5010923	PtrMemberAccess	pc -> caches		5010322	0					
ANR	5010924	Identifier	pc		5010322	0					
ANR	5010925	Identifier	caches		5010322	1					
ANR	5010926	PrimaryExpression	2		5010322	1					
ANR	5010927	ExpressionStatement	"if_debug0 ( 'C' , ""[c]Not interpolating w.\\n"" )"	1156:8:44744:44787	5010322	1	True				
ANR	5010928	CallExpression	"if_debug0 ( 'C' , ""[c]Not interpolating w.\\n"" )"		5010322	0					
ANR	5010929	Callee	if_debug0		5010322	0					
ANR	5010930	Identifier	if_debug0		5010322	0					
ANR	5010931	ArgumentList	'C'		5010322	1					
ANR	5010932	Argument	'C'		5010322	0					
ANR	5010933	PrimaryExpression	'C'		5010322	0					
ANR	5010934	Argument	"""[c]Not interpolating w.\\n"""		5010322	1					
ANR	5010935	PrimaryExpression	"""[c]Not interpolating w.\\n"""		5010322	0					
ANR	5010936	ExpressionStatement	"u += p -> u , v += p -> v , w += p -> w"	1157:8:44797:44828	5010322	2	True				
ANR	5010937	Expression	"u += p -> u , v += p -> v , w += p -> w"		5010322	0					
ANR	5010938	AssignmentExpression	u += p -> u		5010322	0		+=			
ANR	5010939	Identifier	u		5010322	0					
ANR	5010940	PtrMemberAccess	p -> u		5010322	1					
ANR	5010941	Identifier	p		5010322	0					
ANR	5010942	Identifier	u		5010322	1					
ANR	5010943	Expression	"v += p -> v , w += p -> w"		5010322	1					
ANR	5010944	AssignmentExpression	v += p -> v		5010322	0		+=			
ANR	5010945	Identifier	v		5010322	0					
ANR	5010946	PtrMemberAccess	p -> v		5010322	1					
ANR	5010947	Identifier	p		5010322	0					
ANR	5010948	Identifier	v		5010322	1					
ANR	5010949	AssignmentExpression	w += p -> w		5010322	1		+=			
ANR	5010950	Identifier	w		5010322	0					
ANR	5010951	PtrMemberAccess	p -> w		5010322	1					
ANR	5010952	Identifier	p		5010322	0					
ANR	5010953	Identifier	w		5010322	1					
ANR	5010954	Statement	undef	1160:1:44838:44842	5010322	130	True				
ANR	5010955	Statement	I_IN_RANGE	1160:7:44844:44853	5010322	131	True				
ANR	5010956	Statement	undef	1161:1:44856:44860	5010322	132	True				
ANR	5010957	Statement	I_INDEX	1161:7:44862:44868	5010322	133	True				
ANR	5010958	Statement	undef	1162:1:44871:44875	5010322	134	True				
ANR	5010959	Statement	I_ENTRY	1162:7:44877:44883	5010322	135	True				
ANR	5010960	Statement	undef	1163:1:44886:44890	5010322	136	True				
ANR	5010961	Statement	I_ENTRY1	1163:7:44892:44899	5010322	137	True				
ANR	5010962	ExpressionStatement	pvec -> u = u	1165:4:44906:44917	5010322	138	True				
ANR	5010963	AssignmentExpression	pvec -> u = u		5010322	0		=			
ANR	5010964	PtrMemberAccess	pvec -> u		5010322	0					
ANR	5010965	Identifier	pvec		5010322	0					
ANR	5010966	Identifier	u		5010322	1					
ANR	5010967	Identifier	u		5010322	1					
ANR	5010968	ExpressionStatement	pvec -> v = v	1166:4:44923:44934	5010322	139	True				
ANR	5010969	AssignmentExpression	pvec -> v = v		5010322	0		=			
ANR	5010970	PtrMemberAccess	pvec -> v		5010322	0					
ANR	5010971	Identifier	pvec		5010322	0					
ANR	5010972	Identifier	v		5010322	1					
ANR	5010973	Identifier	v		5010322	1					
ANR	5010974	ExpressionStatement	pvec -> w = w	1167:4:44940:44951	5010322	140	True				
ANR	5010975	AssignmentExpression	pvec -> w = w		5010322	0		=			
ANR	5010976	PtrMemberAccess	pvec -> w		5010322	0					
ANR	5010977	Identifier	pvec		5010322	0					
ANR	5010978	Identifier	w		5010322	1					
ANR	5010979	Identifier	w		5010322	1					
ANR	5010980	ReturnType	static void		5010322	1					
ANR	5010981	Identifier	cie_lookup_mult3		5010322	2					
ANR	5010982	ParameterList	"cie_cached_vector3 * pvec , const gx_cie_vector_cache3_t * pc"		5010322	3					
ANR	5010983	Parameter	cie_cached_vector3 * pvec	1077:17:41825:41849	5010322	0	True				
ANR	5010984	ParameterType	cie_cached_vector3 *		5010322	0					
ANR	5010985	Identifier	pvec		5010322	1					
ANR	5010986	Parameter	const gx_cie_vector_cache3_t * pc	1078:17:41869:41901	5010322	1	True				
ANR	5010987	ParameterType	const gx_cie_vector_cache3_t *		5010322	0					
ANR	5010988	Identifier	pc		5010322	1					
ANR	5010989	CFGEntryNode	ENTRY		5010322		True				
ANR	5010990	CFGExitNode	EXIT		5010322		True				
ANR	5010991	Symbol	p -> v		5010322						
ANR	5010992	Symbol	p1		5010322						
ANR	5010993	Symbol	p -> u		5010322						
ANR	5010994	Symbol	I_ENTRY1		5010322						
ANR	5010995	Symbol	LOOKUP_ENTRY		5010322						
ANR	5010996	Symbol	I_IN_RANGE		5010322						
ANR	5010997	Symbol	p -> w		5010322						
ANR	5010998	Symbol	pvec		5010322						
ANR	5010999	Symbol	I_INDEX		5010322						
ANR	5011000	Symbol	pvec -> u		5010322						
ANR	5011001	Symbol	pvec -> v		5010322						
ANR	5011002	Symbol	LOOKUP_INTERPOLATE_BETWEEN		5010322						
ANR	5011003	Symbol	pvec -> w		5010322						
ANR	5011004	Symbol	* p1		5010322						
ANR	5011005	Symbol	I_ENTRY		5010322						
ANR	5011006	Symbol	p1 -> w		5010322						
ANR	5011007	Symbol	i		5010322						
ANR	5011008	Symbol	p1 -> v		5010322						
ANR	5011009	Symbol	p1 -> u		5010322						
ANR	5011010	Symbol	p		5010322						
ANR	5011011	Symbol	pc		5010322						
ANR	5011012	Symbol	u		5010322						
ANR	5011013	Symbol	v		5010322						
ANR	5011014	Symbol	w		5010322						
ANR	5011015	Symbol	pc -> caches		5010322						
ANR	5011016	Symbol	* pvec		5010322						
ANR	5011017	Symbol	* p		5010322						
ANR	5011018	Symbol	* pc		5010322						
