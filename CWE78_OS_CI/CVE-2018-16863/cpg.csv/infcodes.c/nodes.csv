command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6052286	File	data/converged/CVE-2018-16863_ghostpdl/infcodes.c								
ANR	6052287	ClassDef	<unnamed>	16:8:415:1029							
ANR	6052288	DeclStmt									
ANR	6052289	Decl									inflate_codes_mode
ANR	6052290	ClassDef	inflate_codes_state	30:0:1066:1971							
ANR	6052291	DeclStmt									
ANR	6052292	Decl							inflate_codes_mode	inflate_codes_mode	mode
ANR	6052293	DeclStmt									
ANR	6052294	Decl							uInt	uInt	len
ANR	6052295	ClassDef	<unnamed>	37:2:1224:1667							
ANR	6052296	ClassDef	<unnamed>	38:4:1236:1361							
ANR	6052297	DeclStmt									
ANR	6052298	Decl							inflate_huft	inflate_huft *	tree
ANR	6052299	DeclStmt									
ANR	6052300	Decl							uInt	uInt	need
ANR	6052301	DeclStmt									
ANR	6052302	Decl									code
ANR	6052303	DeclStmt									
ANR	6052304	Decl							uInt	uInt	lit
ANR	6052305	ClassDef	<unnamed>	43:4:1461:1605							
ANR	6052306	DeclStmt									
ANR	6052307	Decl							uInt	uInt	get
ANR	6052308	DeclStmt									
ANR	6052309	Decl							uInt	uInt	dist
ANR	6052310	DeclStmt									
ANR	6052311	Decl									copy
ANR	6052312	DeclStmt									
ANR	6052313	Decl									sub
ANR	6052314	DeclStmt									
ANR	6052315	Decl							Byte	Byte	lbits
ANR	6052316	DeclStmt									
ANR	6052317	Decl							Byte	Byte	dbits
ANR	6052318	DeclStmt									
ANR	6052319	Decl							inflate_huft	inflate_huft *	ltree
ANR	6052320	DeclStmt									
ANR	6052321	Decl							inflate_huft	inflate_huft *	dtree
ANR	6052322	Function	inflate_codes_new	58:0:1976:2477							
ANR	6052323	FunctionDef	"inflate_codes_new (uInt bl , uInt bd , inflate_huft * tl , inflate_huft * td , z_streamp z)"		6052322	0					
ANR	6052324	CompoundStatement		63:0:2164:2477	6052322	0					
ANR	6052325	IdentifierDeclStatement	inflate_codes_statef * c ;	64:2:2168:2191	6052322	0	True				
ANR	6052326	IdentifierDecl	* c		6052322	0					
ANR	6052327	IdentifierDeclType	inflate_codes_statef *		6052322	0					
ANR	6052328	Identifier	c		6052322	1					
ANR	6052329	IfStatement	"if ( ( c = ( inflate_codes_statef * ) ZALLOC ( z , 1 , sizeof ( struct inflate_codes_state ) ) ) != Z_NULL )"		6052322	1					
ANR	6052330	Condition	"( c = ( inflate_codes_statef * ) ZALLOC ( z , 1 , sizeof ( struct inflate_codes_state ) ) ) != Z_NULL"	66:6:2200:2293	6052322	0	True				
ANR	6052331	EqualityExpression	"( c = ( inflate_codes_statef * ) ZALLOC ( z , 1 , sizeof ( struct inflate_codes_state ) ) ) != Z_NULL"		6052322	0		!=			
ANR	6052332	AssignmentExpression	"c = ( inflate_codes_statef * ) ZALLOC ( z , 1 , sizeof ( struct inflate_codes_state ) )"		6052322	0		=			
ANR	6052333	Identifier	c		6052322	0					
ANR	6052334	CastExpression	"( inflate_codes_statef * ) ZALLOC ( z , 1 , sizeof ( struct inflate_codes_state ) )"		6052322	1					
ANR	6052335	CastTarget	inflate_codes_statef *		6052322	0					
ANR	6052336	CallExpression	"ZALLOC ( z , 1 , sizeof ( struct inflate_codes_state ) )"		6052322	1					
ANR	6052337	Callee	ZALLOC		6052322	0					
ANR	6052338	Identifier	ZALLOC		6052322	0					
ANR	6052339	ArgumentList	z		6052322	1					
ANR	6052340	Argument	z		6052322	0					
ANR	6052341	Identifier	z		6052322	0					
ANR	6052342	Argument	1		6052322	1					
ANR	6052343	PrimaryExpression	1		6052322	0					
ANR	6052344	Argument	sizeof ( struct inflate_codes_state )		6052322	2					
ANR	6052345	SizeofExpression	sizeof ( struct inflate_codes_state )		6052322	0					
ANR	6052346	Sizeof	sizeof		6052322	0					
ANR	6052347	SizeofOperand	struct inflate_codes_state		6052322	1					
ANR	6052348	Identifier	Z_NULL		6052322	1					
ANR	6052349	CompoundStatement		6:2:133:133	6052322	1					
ANR	6052350	ExpressionStatement	c -> mode = START	69:4:2304:2319	6052322	0	True				
ANR	6052351	AssignmentExpression	c -> mode = START		6052322	0		=			
ANR	6052352	PtrMemberAccess	c -> mode		6052322	0					
ANR	6052353	Identifier	c		6052322	0					
ANR	6052354	Identifier	mode		6052322	1					
ANR	6052355	Identifier	START		6052322	1					
ANR	6052356	ExpressionStatement	c -> lbits = ( Byte ) bl	70:4:2325:2344	6052322	1	True				
ANR	6052357	AssignmentExpression	c -> lbits = ( Byte ) bl		6052322	0		=			
ANR	6052358	PtrMemberAccess	c -> lbits		6052322	0					
ANR	6052359	Identifier	c		6052322	0					
ANR	6052360	Identifier	lbits		6052322	1					
ANR	6052361	CastExpression	( Byte ) bl		6052322	1					
ANR	6052362	CastTarget	Byte		6052322	0					
ANR	6052363	Identifier	bl		6052322	1					
ANR	6052364	ExpressionStatement	c -> dbits = ( Byte ) bd	71:4:2350:2369	6052322	2	True				
ANR	6052365	AssignmentExpression	c -> dbits = ( Byte ) bd		6052322	0		=			
ANR	6052366	PtrMemberAccess	c -> dbits		6052322	0					
ANR	6052367	Identifier	c		6052322	0					
ANR	6052368	Identifier	dbits		6052322	1					
ANR	6052369	CastExpression	( Byte ) bd		6052322	1					
ANR	6052370	CastTarget	Byte		6052322	0					
ANR	6052371	Identifier	bd		6052322	1					
ANR	6052372	ExpressionStatement	c -> ltree = tl	72:4:2375:2388	6052322	3	True				
ANR	6052373	AssignmentExpression	c -> ltree = tl		6052322	0		=			
ANR	6052374	PtrMemberAccess	c -> ltree		6052322	0					
ANR	6052375	Identifier	c		6052322	0					
ANR	6052376	Identifier	ltree		6052322	1					
ANR	6052377	Identifier	tl		6052322	1					
ANR	6052378	ExpressionStatement	c -> dtree = td	73:4:2394:2407	6052322	4	True				
ANR	6052379	AssignmentExpression	c -> dtree = td		6052322	0		=			
ANR	6052380	PtrMemberAccess	c -> dtree		6052322	0					
ANR	6052381	Identifier	c		6052322	0					
ANR	6052382	Identifier	dtree		6052322	1					
ANR	6052383	Identifier	td		6052322	1					
ANR	6052384	ExpressionStatement	"Tracev ( ( stderr , ""inflate:       codes new\\n"" ) )"	74:4:2413:2459	6052322	5	True				
ANR	6052385	CallExpression	"Tracev ( ( stderr , ""inflate:       codes new\\n"" ) )"		6052322	0					
ANR	6052386	Callee	Tracev		6052322	0					
ANR	6052387	Identifier	Tracev		6052322	0					
ANR	6052388	ArgumentList	"stderr , ""inflate:       codes new\\n"""		6052322	1					
ANR	6052389	Argument	"stderr , ""inflate:       codes new\\n"""		6052322	0					
ANR	6052390	Expression	"stderr , ""inflate:       codes new\\n"""		6052322	0					
ANR	6052391	Identifier	stderr		6052322	0					
ANR	6052392	PrimaryExpression	"""inflate:       codes new\\n"""		6052322	1					
ANR	6052393	ReturnStatement	return c ;	76:2:2467:2475	6052322	2	True				
ANR	6052394	Identifier	c		6052322	0					
ANR	6052395	ReturnType	local inflate_codes_statef *		6052322	1					
ANR	6052396	Identifier	inflate_codes_new		6052322	2					
ANR	6052397	ParameterList	"uInt bl , uInt bd , inflate_huft * tl , inflate_huft * td , z_streamp z"		6052322	3					
ANR	6052398	Parameter	uInt bl	59:0:2048:2054	6052322	0	True				
ANR	6052399	ParameterType	uInt		6052322	0					
ANR	6052400	Identifier	bl		6052322	1					
ANR	6052401	Parameter	uInt bd	59:9:2057:2063	6052322	1	True				
ANR	6052402	ParameterType	uInt		6052322	0					
ANR	6052403	Identifier	bd		6052322	1					
ANR	6052404	Parameter	inflate_huft * tl	60:0:2066:2081	6052322	2	True				
ANR	6052405	ParameterType	inflate_huft *		6052322	0					
ANR	6052406	Identifier	tl		6052322	1					
ANR	6052407	Parameter	inflate_huft * td	61:0:2084:2099	6052322	3	True				
ANR	6052408	ParameterType	inflate_huft *		6052322	0					
ANR	6052409	Identifier	td		6052322	1					
ANR	6052410	Parameter	z_streamp z	62:0:2150:2160	6052322	4	True				
ANR	6052411	ParameterType	z_streamp		6052322	0					
ANR	6052412	Identifier	z		6052322	1					
ANR	6052413	CFGEntryNode	ENTRY		6052322		True				
ANR	6052414	CFGExitNode	EXIT		6052322		True				
ANR	6052415	Symbol	bd		6052322						
ANR	6052416	Symbol	c -> mode		6052322						
ANR	6052417	Symbol	c		6052322						
ANR	6052418	Symbol	c -> lbits		6052322						
ANR	6052419	Symbol	bl		6052322						
ANR	6052420	Symbol	stderr		6052322						
ANR	6052421	Symbol	* c		6052322						
ANR	6052422	Symbol	c -> dbits		6052322						
ANR	6052423	Symbol	c -> dtree		6052322						
ANR	6052424	Symbol	td		6052322						
ANR	6052425	Symbol	ZALLOC		6052322						
ANR	6052426	Symbol	c -> ltree		6052322						
ANR	6052427	Symbol	tl		6052322						
ANR	6052428	Symbol	z		6052322						
ANR	6052429	Symbol	START		6052322						
ANR	6052430	Symbol	Z_NULL		6052322						
ANR	6052431	Function	inflate_codes	80:0:2481:7490							
ANR	6052432	FunctionDef	"inflate_codes (inflate_blocks_statef * s , z_streamp z , int r)"		6052431	0					
ANR	6052433	CompoundStatement		84:0:2568:7490	6052431	0					
ANR	6052434	IdentifierDeclStatement	uInt j ;	85:2:2572:2578	6052431	0	True				
ANR	6052435	IdentifierDecl	j		6052431	0					
ANR	6052436	IdentifierDeclType	uInt		6052431	0					
ANR	6052437	Identifier	j		6052431	1					
ANR	6052438	IdentifierDeclStatement	inflate_huft * t ;	86:2:2620:2635	6052431	1	True				
ANR	6052439	IdentifierDecl	* t		6052431	0					
ANR	6052440	IdentifierDeclType	inflate_huft *		6052431	0					
ANR	6052441	Identifier	t		6052431	1					
ANR	6052442	IdentifierDeclStatement	uInt e ;	87:2:2668:2674	6052431	2	True				
ANR	6052443	IdentifierDecl	e		6052431	0					
ANR	6052444	IdentifierDeclType	uInt		6052431	0					
ANR	6052445	Identifier	e		6052431	1					
ANR	6052446	IdentifierDeclStatement	uLong b ;	88:2:2722:2729	6052431	3	True				
ANR	6052447	IdentifierDecl	b		6052431	0					
ANR	6052448	IdentifierDeclType	uLong		6052431	0					
ANR	6052449	Identifier	b		6052431	1					
ANR	6052450	IdentifierDeclStatement	uInt k ;	89:2:2763:2769	6052431	4	True				
ANR	6052451	IdentifierDecl	k		6052431	0					
ANR	6052452	IdentifierDeclType	uInt		6052431	0					
ANR	6052453	Identifier	k		6052431	1					
ANR	6052454	IdentifierDeclStatement	Bytef * p ;	90:2:2812:2820	6052431	5	True				
ANR	6052455	IdentifierDecl	* p		6052431	0					
ANR	6052456	IdentifierDeclType	Bytef *		6052431	0					
ANR	6052457	Identifier	p		6052431	1					
ANR	6052458	IdentifierDeclStatement	uInt n ;	91:2:2861:2867	6052431	6	True				
ANR	6052459	IdentifierDecl	n		6052431	0					
ANR	6052460	IdentifierDeclType	uInt		6052431	0					
ANR	6052461	Identifier	n		6052431	1					
ANR	6052462	IdentifierDeclStatement	Bytef * q ;	92:2:2913:2921	6052431	7	True				
ANR	6052463	IdentifierDecl	* q		6052431	0					
ANR	6052464	IdentifierDeclType	Bytef *		6052431	0					
ANR	6052465	Identifier	q		6052431	1					
ANR	6052466	IdentifierDeclStatement	uInt m ;	93:2:2971:2977	6052431	8	True				
ANR	6052467	IdentifierDecl	m		6052431	0					
ANR	6052468	IdentifierDeclType	uInt		6052431	0					
ANR	6052469	Identifier	m		6052431	1					
ANR	6052470	IdentifierDeclStatement	Bytef * f ;	94:2:3040:3048	6052431	9	True				
ANR	6052471	IdentifierDecl	* f		6052431	0					
ANR	6052472	IdentifierDeclType	Bytef *		6052431	0					
ANR	6052473	Identifier	f		6052431	1					
ANR	6052474	IdentifierDeclStatement	inflate_codes_statef * c = s -> sub . decode . codes ;	95:2:3099:3144	6052431	10	True				
ANR	6052475	IdentifierDecl	* c = s -> sub . decode . codes		6052431	0					
ANR	6052476	IdentifierDeclType	inflate_codes_statef *		6052431	0					
ANR	6052477	Identifier	c		6052431	1					
ANR	6052478	AssignmentExpression	* c = s -> sub . decode . codes		6052431	2		=			
ANR	6052479	Identifier	c		6052431	0					
ANR	6052480	MemberAccess	s -> sub . decode . codes		6052431	1					
ANR	6052481	MemberAccess	s -> sub . decode		6052431	0					
ANR	6052482	PtrMemberAccess	s -> sub		6052431	0					
ANR	6052483	Identifier	s		6052431	0					
ANR	6052484	Identifier	sub		6052431	1					
ANR	6052485	Identifier	decode		6052431	1					
ANR	6052486	Identifier	codes		6052431	1					
ANR	6052487	Statement	LOAD	98:2:3240:3243	6052431	11	True				
ANR	6052488	WhileStatement	while ( 1 )		6052431	12					
ANR	6052489	Condition	1	101:9:3311:3311	6052431	0	True				
ANR	6052490	PrimaryExpression	1		6052431	0					
ANR	6052491	SwitchStatement	switch ( c -> mode )		6052431	1					
ANR	6052492	Condition	c -> mode	101:20:3322:3328	6052431	0	True				
ANR	6052493	PtrMemberAccess	c -> mode		6052431	0					
ANR	6052494	Identifier	c		6052431	0					
ANR	6052495	Identifier	mode		6052431	1					
ANR	6052496	CompoundStatement		19:2:764:764	6052431	1					
ANR	6052497	Label	case START :	103:4:3407:3417	6052431	0	True				
ANR	6052498	Identifier	START		6052431	0					
ANR	6052499	IfStatement	if ( m >= 258 && n >= 10 )		6052431	1					
ANR	6052500	Condition	m >= 258 && n >= 10	105:10:3474:3492	6052431	0	True				
ANR	6052501	AndExpression	m >= 258 && n >= 10		6052431	0		&&			
ANR	6052502	RelationalExpression	m >= 258		6052431	0		>=			
ANR	6052503	Identifier	m		6052431	0					
ANR	6052504	PrimaryExpression	258		6052431	1					
ANR	6052505	RelationalExpression	n >= 10		6052431	1		>=			
ANR	6052506	Identifier	n		6052431	0					
ANR	6052507	PrimaryExpression	10		6052431	1					
ANR	6052508	CompoundStatement		24:8:942:1019	6052431	1					
ANR	6052509	IdentifierDeclStatement	"UPDATE r = inflate_fast ( c -> lbits , c -> dbits , c -> ltree , c -> dtree , s , z ) ;"	107:8:3511:3588	6052431	0	True				
ANR	6052510	IdentifierDecl	"r = inflate_fast ( c -> lbits , c -> dbits , c -> ltree , c -> dtree , s , z )"		6052431	0					
ANR	6052511	IdentifierDeclType	UPDATE		6052431	0					
ANR	6052512	Identifier	r		6052431	1					
ANR	6052513	AssignmentExpression	"r = inflate_fast ( c -> lbits , c -> dbits , c -> ltree , c -> dtree , s , z )"		6052431	2		=			
ANR	6052514	Identifier	r		6052431	0					
ANR	6052515	CallExpression	"inflate_fast ( c -> lbits , c -> dbits , c -> ltree , c -> dtree , s , z )"		6052431	1					
ANR	6052516	Callee	inflate_fast		6052431	0					
ANR	6052517	Identifier	inflate_fast		6052431	0					
ANR	6052518	ArgumentList	c -> lbits		6052431	1					
ANR	6052519	Argument	c -> lbits		6052431	0					
ANR	6052520	PtrMemberAccess	c -> lbits		6052431	0					
ANR	6052521	Identifier	c		6052431	0					
ANR	6052522	Identifier	lbits		6052431	1					
ANR	6052523	Argument	c -> dbits		6052431	1					
ANR	6052524	PtrMemberAccess	c -> dbits		6052431	0					
ANR	6052525	Identifier	c		6052431	0					
ANR	6052526	Identifier	dbits		6052431	1					
ANR	6052527	Argument	c -> ltree		6052431	2					
ANR	6052528	PtrMemberAccess	c -> ltree		6052431	0					
ANR	6052529	Identifier	c		6052431	0					
ANR	6052530	Identifier	ltree		6052431	1					
ANR	6052531	Argument	c -> dtree		6052431	3					
ANR	6052532	PtrMemberAccess	c -> dtree		6052431	0					
ANR	6052533	Identifier	c		6052431	0					
ANR	6052534	Identifier	dtree		6052431	1					
ANR	6052535	Argument	s		6052431	4					
ANR	6052536	Identifier	s		6052431	0					
ANR	6052537	Argument	z		6052431	5					
ANR	6052538	Identifier	z		6052431	0					
ANR	6052539	Statement	LOAD	109:8:3598:3601	6052431	1	True				
ANR	6052540	IfStatement	if ( r != Z_OK )		6052431	2					
ANR	6052541	Condition	r != Z_OK	110:12:3615:3623	6052431	0	True				
ANR	6052542	EqualityExpression	r != Z_OK		6052431	0		!=			
ANR	6052543	Identifier	r		6052431	0					
ANR	6052544	Identifier	Z_OK		6052431	1					
ANR	6052545	CompoundStatement		28:8:1065:1065	6052431	1					
ANR	6052546	ExpressionStatement	c -> mode = r == Z_STREAM_END ? WASH : BADCODE	112:10:3646:3690	6052431	0	True				
ANR	6052547	AssignmentExpression	c -> mode = r == Z_STREAM_END ? WASH : BADCODE		6052431	0		=			
ANR	6052548	PtrMemberAccess	c -> mode		6052431	0					
ANR	6052549	Identifier	c		6052431	0					
ANR	6052550	Identifier	mode		6052431	1					
ANR	6052551	ConditionalExpression	r == Z_STREAM_END ? WASH : BADCODE		6052431	1					
ANR	6052552	Condition	r == Z_STREAM_END		6052431	0					
ANR	6052553	EqualityExpression	r == Z_STREAM_END		6052431	0		==			
ANR	6052554	Identifier	r		6052431	0					
ANR	6052555	Identifier	Z_STREAM_END		6052431	1					
ANR	6052556	Identifier	WASH		6052431	1					
ANR	6052557	Identifier	BADCODE		6052431	2					
ANR	6052558	BreakStatement	break ;	113:10:3702:3707	6052431	1	True				
ANR	6052559	ExpressionStatement	c -> sub . code . need = c -> lbits	117:6:3752:3779	6052431	2	True				
ANR	6052560	AssignmentExpression	c -> sub . code . need = c -> lbits		6052431	0		=			
ANR	6052561	MemberAccess	c -> sub . code . need		6052431	0					
ANR	6052562	MemberAccess	c -> sub . code		6052431	0					
ANR	6052563	PtrMemberAccess	c -> sub		6052431	0					
ANR	6052564	Identifier	c		6052431	0					
ANR	6052565	Identifier	sub		6052431	1					
ANR	6052566	Identifier	code		6052431	1					
ANR	6052567	Identifier	need		6052431	1					
ANR	6052568	PtrMemberAccess	c -> lbits		6052431	1					
ANR	6052569	Identifier	c		6052431	0					
ANR	6052570	Identifier	lbits		6052431	1					
ANR	6052571	ExpressionStatement	c -> sub . code . tree = c -> ltree	118:6:3787:3814	6052431	3	True				
ANR	6052572	AssignmentExpression	c -> sub . code . tree = c -> ltree		6052431	0		=			
ANR	6052573	MemberAccess	c -> sub . code . tree		6052431	0					
ANR	6052574	MemberAccess	c -> sub . code		6052431	0					
ANR	6052575	PtrMemberAccess	c -> sub		6052431	0					
ANR	6052576	Identifier	c		6052431	0					
ANR	6052577	Identifier	sub		6052431	1					
ANR	6052578	Identifier	code		6052431	1					
ANR	6052579	Identifier	tree		6052431	1					
ANR	6052580	PtrMemberAccess	c -> ltree		6052431	1					
ANR	6052581	Identifier	c		6052431	0					
ANR	6052582	Identifier	ltree		6052431	1					
ANR	6052583	ExpressionStatement	c -> mode = LEN	119:6:3822:3835	6052431	4	True				
ANR	6052584	AssignmentExpression	c -> mode = LEN		6052431	0		=			
ANR	6052585	PtrMemberAccess	c -> mode		6052431	0					
ANR	6052586	Identifier	c		6052431	0					
ANR	6052587	Identifier	mode		6052431	1					
ANR	6052588	Identifier	LEN		6052431	1					
ANR	6052589	Label	case LEN :	120:4:3841:3849	6052431	5	True				
ANR	6052590	Identifier	LEN		6052431	0					
ANR	6052591	ExpressionStatement	j = c -> sub . code . need	121:6:3904:3924	6052431	6	True				
ANR	6052592	AssignmentExpression	j = c -> sub . code . need		6052431	0		=			
ANR	6052593	Identifier	j		6052431	0					
ANR	6052594	MemberAccess	c -> sub . code . need		6052431	1					
ANR	6052595	MemberAccess	c -> sub . code		6052431	0					
ANR	6052596	PtrMemberAccess	c -> sub		6052431	0					
ANR	6052597	Identifier	c		6052431	0					
ANR	6052598	Identifier	sub		6052431	1					
ANR	6052599	Identifier	code		6052431	1					
ANR	6052600	Identifier	need		6052431	1					
ANR	6052601	Statement	NEEDBITS	122:6:3932:3939	6052431	7	True				
ANR	6052602	ExpressionStatement	( j ) t = c -> sub . code . tree + ( ( uInt ) b & inflate_mask [ j ] )	122:14:3940:4000	6052431	8	True				
ANR	6052603	AssignmentExpression	( j ) t = c -> sub . code . tree + ( ( uInt ) b & inflate_mask [ j ] )		6052431	0		=			
ANR	6052604	CastExpression	( j ) t		6052431	0					
ANR	6052605	CastTarget	j		6052431	0					
ANR	6052606	Identifier	t		6052431	1					
ANR	6052607	AdditiveExpression	c -> sub . code . tree + ( ( uInt ) b & inflate_mask [ j ] )		6052431	1		+			
ANR	6052608	MemberAccess	c -> sub . code . tree		6052431	0					
ANR	6052609	MemberAccess	c -> sub . code		6052431	0					
ANR	6052610	PtrMemberAccess	c -> sub		6052431	0					
ANR	6052611	Identifier	c		6052431	0					
ANR	6052612	Identifier	sub		6052431	1					
ANR	6052613	Identifier	code		6052431	1					
ANR	6052614	Identifier	tree		6052431	1					
ANR	6052615	BitAndExpression	( uInt ) b & inflate_mask [ j ]		6052431	1		&			
ANR	6052616	CastExpression	( uInt ) b		6052431	0					
ANR	6052617	CastTarget	uInt		6052431	0					
ANR	6052618	Identifier	b		6052431	1					
ANR	6052619	ArrayIndexing	inflate_mask [ j ]		6052431	1					
ANR	6052620	Identifier	inflate_mask		6052431	0					
ANR	6052621	Identifier	j		6052431	1					
ANR	6052622	Statement	DUMPBITS	124:6:4008:4015	6052431	9	True				
ANR	6052623	Statement	(	124:14:4016:4016	6052431	10	True				
ANR	6052624	Statement	t	124:15:4017:4017	6052431	11	True				
ANR	6052625	Statement	->	124:16:4018:4019	6052431	12	True				
ANR	6052626	Statement	bits	124:18:4020:4023	6052431	13	True				
ANR	6052627	Statement	)	124:22:4024:4024	6052431	14	True				
ANR	6052628	ExpressionStatement	e = ( uInt ) ( t -> exop )	125:6:4032:4051	6052431	15	True				
ANR	6052629	AssignmentExpression	e = ( uInt ) ( t -> exop )		6052431	0		=			
ANR	6052630	Identifier	e		6052431	0					
ANR	6052631	CastExpression	( uInt ) ( t -> exop )		6052431	1					
ANR	6052632	CastTarget	uInt		6052431	0					
ANR	6052633	PtrMemberAccess	t -> exop		6052431	1					
ANR	6052634	Identifier	t		6052431	0					
ANR	6052635	Identifier	exop		6052431	1					
ANR	6052636	IfStatement	if ( e == 0 )		6052431	16					
ANR	6052637	Condition	e == 0	126:10:4063:4068	6052431	0	True				
ANR	6052638	EqualityExpression	e == 0		6052431	0		==			
ANR	6052639	Identifier	e		6052431	0					
ANR	6052640	PrimaryExpression	0		6052431	1					
ANR	6052641	CompoundStatement		44:6:1536:1536	6052431	1					
ANR	6052642	ExpressionStatement	c -> sub . lit = t -> base	128:8:4115:4135	6052431	0	True				
ANR	6052643	AssignmentExpression	c -> sub . lit = t -> base		6052431	0		=			
ANR	6052644	MemberAccess	c -> sub . lit		6052431	0					
ANR	6052645	PtrMemberAccess	c -> sub		6052431	0					
ANR	6052646	Identifier	c		6052431	0					
ANR	6052647	Identifier	sub		6052431	1					
ANR	6052648	Identifier	lit		6052431	1					
ANR	6052649	PtrMemberAccess	t -> base		6052431	1					
ANR	6052650	Identifier	t		6052431	0					
ANR	6052651	Identifier	base		6052431	1					
ANR	6052652	ExpressionStatement	"Tracevv ( ( stderr , t -> base >= 0x20 && t -> base < 0x7f ? ""inflate:         literal '%c'\\n"" : ""inflate:         literal 0x%02x\\n"" , t -> base ) )"	129:8:4145:4314	6052431	1	True				
ANR	6052653	CallExpression	"Tracevv ( ( stderr , t -> base >= 0x20 && t -> base < 0x7f ? ""inflate:         literal '%c'\\n"" : ""inflate:         literal 0x%02x\\n"" , t -> base ) )"		6052431	0					
ANR	6052654	Callee	Tracevv		6052431	0					
ANR	6052655	Identifier	Tracevv		6052431	0					
ANR	6052656	ArgumentList	"stderr , t -> base >= 0x20 && t -> base < 0x7f ? ""inflate:         literal '%c'\\n"" : ""inflate:         literal 0x%02x\\n"" , t -> base"		6052431	1					
ANR	6052657	Argument	"stderr , t -> base >= 0x20 && t -> base < 0x7f ? ""inflate:         literal '%c'\\n"" : ""inflate:         literal 0x%02x\\n"" , t -> base"		6052431	0					
ANR	6052658	Expression	"stderr , t -> base >= 0x20 && t -> base < 0x7f ? ""inflate:         literal '%c'\\n"" : ""inflate:         literal 0x%02x\\n"" , t -> base"		6052431	0					
ANR	6052659	Identifier	stderr		6052431	0					
ANR	6052660	Expression	"t -> base >= 0x20 && t -> base < 0x7f ? ""inflate:         literal '%c'\\n"" : ""inflate:         literal 0x%02x\\n"" , t -> base"		6052431	1					
ANR	6052661	ConditionalExpression	"t -> base >= 0x20 && t -> base < 0x7f ? ""inflate:         literal '%c'\\n"" : ""inflate:         literal 0x%02x\\n"""		6052431	0					
ANR	6052662	Condition	t -> base >= 0x20 && t -> base < 0x7f		6052431	0					
ANR	6052663	AndExpression	t -> base >= 0x20 && t -> base < 0x7f		6052431	0		&&			
ANR	6052664	RelationalExpression	t -> base >= 0x20		6052431	0		>=			
ANR	6052665	PtrMemberAccess	t -> base		6052431	0					
ANR	6052666	Identifier	t		6052431	0					
ANR	6052667	Identifier	base		6052431	1					
ANR	6052668	PrimaryExpression	0x20		6052431	1					
ANR	6052669	RelationalExpression	t -> base < 0x7f		6052431	1		<			
ANR	6052670	PtrMemberAccess	t -> base		6052431	0					
ANR	6052671	Identifier	t		6052431	0					
ANR	6052672	Identifier	base		6052431	1					
ANR	6052673	PrimaryExpression	0x7f		6052431	1					
ANR	6052674	PrimaryExpression	"""inflate:         literal '%c'\\n"""		6052431	1					
ANR	6052675	PrimaryExpression	"""inflate:         literal 0x%02x\\n"""		6052431	2					
ANR	6052676	PtrMemberAccess	t -> base		6052431	1					
ANR	6052677	Identifier	t		6052431	0					
ANR	6052678	Identifier	base		6052431	1					
ANR	6052679	ExpressionStatement	c -> mode = LIT	132:8:4324:4337	6052431	2	True				
ANR	6052680	AssignmentExpression	c -> mode = LIT		6052431	0		=			
ANR	6052681	PtrMemberAccess	c -> mode		6052431	0					
ANR	6052682	Identifier	c		6052431	0					
ANR	6052683	Identifier	mode		6052431	1					
ANR	6052684	Identifier	LIT		6052431	1					
ANR	6052685	BreakStatement	break ;	133:8:4347:4352	6052431	3	True				
ANR	6052686	IfStatement	if ( e & 16 )		6052431	17					
ANR	6052687	Condition	e & 16	135:10:4372:4377	6052431	0	True				
ANR	6052688	BitAndExpression	e & 16		6052431	0		&			
ANR	6052689	Identifier	e		6052431	0					
ANR	6052690	PrimaryExpression	16		6052431	1					
ANR	6052691	CompoundStatement		53:6:1844:1844	6052431	1					
ANR	6052692	ExpressionStatement	c -> sub . copy . get = e & 15	137:8:4423:4447	6052431	0	True				
ANR	6052693	AssignmentExpression	c -> sub . copy . get = e & 15		6052431	0		=			
ANR	6052694	MemberAccess	c -> sub . copy . get		6052431	0					
ANR	6052695	MemberAccess	c -> sub . copy		6052431	0					
ANR	6052696	PtrMemberAccess	c -> sub		6052431	0					
ANR	6052697	Identifier	c		6052431	0					
ANR	6052698	Identifier	sub		6052431	1					
ANR	6052699	Identifier	copy		6052431	1					
ANR	6052700	Identifier	get		6052431	1					
ANR	6052701	BitAndExpression	e & 15		6052431	1		&			
ANR	6052702	Identifier	e		6052431	0					
ANR	6052703	PrimaryExpression	15		6052431	1					
ANR	6052704	ExpressionStatement	c -> len = t -> base	138:8:4457:4473	6052431	1	True				
ANR	6052705	AssignmentExpression	c -> len = t -> base		6052431	0		=			
ANR	6052706	PtrMemberAccess	c -> len		6052431	0					
ANR	6052707	Identifier	c		6052431	0					
ANR	6052708	Identifier	len		6052431	1					
ANR	6052709	PtrMemberAccess	t -> base		6052431	1					
ANR	6052710	Identifier	t		6052431	0					
ANR	6052711	Identifier	base		6052431	1					
ANR	6052712	ExpressionStatement	c -> mode = LENEXT	139:8:4483:4499	6052431	2	True				
ANR	6052713	AssignmentExpression	c -> mode = LENEXT		6052431	0		=			
ANR	6052714	PtrMemberAccess	c -> mode		6052431	0					
ANR	6052715	Identifier	c		6052431	0					
ANR	6052716	Identifier	mode		6052431	1					
ANR	6052717	Identifier	LENEXT		6052431	1					
ANR	6052718	BreakStatement	break ;	140:8:4509:4514	6052431	3	True				
ANR	6052719	IfStatement	if ( ( e & 64 ) == 0 )		6052431	18					
ANR	6052720	Condition	( e & 64 ) == 0	142:10:4534:4546	6052431	0	True				
ANR	6052721	EqualityExpression	( e & 64 ) == 0		6052431	0		==			
ANR	6052722	BitAndExpression	e & 64		6052431	0		&			
ANR	6052723	Identifier	e		6052431	0					
ANR	6052724	PrimaryExpression	64		6052431	1					
ANR	6052725	PrimaryExpression	0		6052431	1					
ANR	6052726	CompoundStatement		60:6:2010:2010	6052431	1					
ANR	6052727	ExpressionStatement	c -> sub . code . need = e	144:8:4589:4609	6052431	0	True				
ANR	6052728	AssignmentExpression	c -> sub . code . need = e		6052431	0		=			
ANR	6052729	MemberAccess	c -> sub . code . need		6052431	0					
ANR	6052730	MemberAccess	c -> sub . code		6052431	0					
ANR	6052731	PtrMemberAccess	c -> sub		6052431	0					
ANR	6052732	Identifier	c		6052431	0					
ANR	6052733	Identifier	sub		6052431	1					
ANR	6052734	Identifier	code		6052431	1					
ANR	6052735	Identifier	need		6052431	1					
ANR	6052736	Identifier	e		6052431	1					
ANR	6052737	ExpressionStatement	c -> sub . code . tree = t + t -> base	145:8:4619:4649	6052431	1	True				
ANR	6052738	AssignmentExpression	c -> sub . code . tree = t + t -> base		6052431	0		=			
ANR	6052739	MemberAccess	c -> sub . code . tree		6052431	0					
ANR	6052740	MemberAccess	c -> sub . code		6052431	0					
ANR	6052741	PtrMemberAccess	c -> sub		6052431	0					
ANR	6052742	Identifier	c		6052431	0					
ANR	6052743	Identifier	sub		6052431	1					
ANR	6052744	Identifier	code		6052431	1					
ANR	6052745	Identifier	tree		6052431	1					
ANR	6052746	AdditiveExpression	t + t -> base		6052431	1		+			
ANR	6052747	Identifier	t		6052431	0					
ANR	6052748	PtrMemberAccess	t -> base		6052431	1					
ANR	6052749	Identifier	t		6052431	0					
ANR	6052750	Identifier	base		6052431	1					
ANR	6052751	BreakStatement	break ;	146:8:4659:4664	6052431	2	True				
ANR	6052752	IfStatement	if ( e & 32 )		6052431	19					
ANR	6052753	Condition	e & 32	148:10:4684:4689	6052431	0	True				
ANR	6052754	BitAndExpression	e & 32		6052431	0		&			
ANR	6052755	Identifier	e		6052431	0					
ANR	6052756	PrimaryExpression	32		6052431	1					
ANR	6052757	CompoundStatement		66:6:2162:2162	6052431	1					
ANR	6052758	ExpressionStatement	"Tracevv ( ( stderr , ""inflate:         end of block\\n"" ) )"	150:8:4741:4793	6052431	0	True				
ANR	6052759	CallExpression	"Tracevv ( ( stderr , ""inflate:         end of block\\n"" ) )"		6052431	0					
ANR	6052760	Callee	Tracevv		6052431	0					
ANR	6052761	Identifier	Tracevv		6052431	0					
ANR	6052762	ArgumentList	"stderr , ""inflate:         end of block\\n"""		6052431	1					
ANR	6052763	Argument	"stderr , ""inflate:         end of block\\n"""		6052431	0					
ANR	6052764	Expression	"stderr , ""inflate:         end of block\\n"""		6052431	0					
ANR	6052765	Identifier	stderr		6052431	0					
ANR	6052766	PrimaryExpression	"""inflate:         end of block\\n"""		6052431	1					
ANR	6052767	ExpressionStatement	c -> mode = WASH	151:8:4803:4817	6052431	1	True				
ANR	6052768	AssignmentExpression	c -> mode = WASH		6052431	0		=			
ANR	6052769	PtrMemberAccess	c -> mode		6052431	0					
ANR	6052770	Identifier	c		6052431	0					
ANR	6052771	Identifier	mode		6052431	1					
ANR	6052772	Identifier	WASH		6052431	1					
ANR	6052773	BreakStatement	break ;	152:8:4827:4832	6052431	2	True				
ANR	6052774	ExpressionStatement	c -> mode = BADCODE	154:6:4848:4865	6052431	20	True				
ANR	6052775	AssignmentExpression	c -> mode = BADCODE		6052431	0		=			
ANR	6052776	PtrMemberAccess	c -> mode		6052431	0					
ANR	6052777	Identifier	c		6052431	0					
ANR	6052778	Identifier	mode		6052431	1					
ANR	6052779	Identifier	BADCODE		6052431	1					
ANR	6052780	ExpressionStatement	"z -> msg = ( char * ) ""invalid literal/length code"""	155:6:4899:4944	6052431	21	True				
ANR	6052781	AssignmentExpression	"z -> msg = ( char * ) ""invalid literal/length code"""		6052431	0		=			
ANR	6052782	PtrMemberAccess	z -> msg		6052431	0					
ANR	6052783	Identifier	z		6052431	0					
ANR	6052784	Identifier	msg		6052431	1					
ANR	6052785	CastExpression	"( char * ) ""invalid literal/length code"""		6052431	1					
ANR	6052786	CastTarget	char *		6052431	0					
ANR	6052787	PrimaryExpression	"""invalid literal/length code"""		6052431	1					
ANR	6052788	ExpressionStatement	r = Z_DATA_ERROR	156:6:4952:4968	6052431	22	True				
ANR	6052789	AssignmentExpression	r = Z_DATA_ERROR		6052431	0		=			
ANR	6052790	Identifier	r		6052431	0					
ANR	6052791	Identifier	Z_DATA_ERROR		6052431	1					
ANR	6052792	Statement	LEAVE	157:6:4976:4980	6052431	23	True				
ANR	6052793	Label	case LENEXT :	158:4:4986:4997	6052431	24	True				
ANR	6052794	Identifier	LENEXT		6052431	0					
ANR	6052795	ExpressionStatement	j = c -> sub . copy . get	159:6:5054:5073	6052431	25	True				
ANR	6052796	AssignmentExpression	j = c -> sub . copy . get		6052431	0		=			
ANR	6052797	Identifier	j		6052431	0					
ANR	6052798	MemberAccess	c -> sub . copy . get		6052431	1					
ANR	6052799	MemberAccess	c -> sub . copy		6052431	0					
ANR	6052800	PtrMemberAccess	c -> sub		6052431	0					
ANR	6052801	Identifier	c		6052431	0					
ANR	6052802	Identifier	sub		6052431	1					
ANR	6052803	Identifier	copy		6052431	1					
ANR	6052804	Identifier	get		6052431	1					
ANR	6052805	Statement	NEEDBITS	160:6:5081:5088	6052431	26	True				
ANR	6052806	ExpressionStatement	( j ) c -> len += ( uInt ) b & inflate_mask [ j ]	160:14:5089:5134	6052431	27	True				
ANR	6052807	AssignmentExpression	( j ) c -> len += ( uInt ) b & inflate_mask [ j ]		6052431	0		+=			
ANR	6052808	CastExpression	( j ) c -> len		6052431	0					
ANR	6052809	CastTarget	j		6052431	0					
ANR	6052810	PtrMemberAccess	c -> len		6052431	1					
ANR	6052811	Identifier	c		6052431	0					
ANR	6052812	Identifier	len		6052431	1					
ANR	6052813	BitAndExpression	( uInt ) b & inflate_mask [ j ]		6052431	1		&			
ANR	6052814	CastExpression	( uInt ) b		6052431	0					
ANR	6052815	CastTarget	uInt		6052431	0					
ANR	6052816	Identifier	b		6052431	1					
ANR	6052817	ArrayIndexing	inflate_mask [ j ]		6052431	1					
ANR	6052818	Identifier	inflate_mask		6052431	0					
ANR	6052819	Identifier	j		6052431	1					
ANR	6052820	Statement	DUMPBITS	162:6:5142:5149	6052431	28	True				
ANR	6052821	ExpressionStatement	( j ) c -> sub . code . need = c -> dbits	162:14:5150:5187	6052431	29	True				
ANR	6052822	AssignmentExpression	( j ) c -> sub . code . need = c -> dbits		6052431	0		=			
ANR	6052823	CastExpression	( j ) c -> sub . code . need		6052431	0					
ANR	6052824	CastTarget	j		6052431	0					
ANR	6052825	MemberAccess	c -> sub . code . need		6052431	1					
ANR	6052826	MemberAccess	c -> sub . code		6052431	0					
ANR	6052827	PtrMemberAccess	c -> sub		6052431	0					
ANR	6052828	Identifier	c		6052431	0					
ANR	6052829	Identifier	sub		6052431	1					
ANR	6052830	Identifier	code		6052431	1					
ANR	6052831	Identifier	need		6052431	1					
ANR	6052832	PtrMemberAccess	c -> dbits		6052431	1					
ANR	6052833	Identifier	c		6052431	0					
ANR	6052834	Identifier	dbits		6052431	1					
ANR	6052835	ExpressionStatement	c -> sub . code . tree = c -> dtree	164:6:5195:5222	6052431	30	True				
ANR	6052836	AssignmentExpression	c -> sub . code . tree = c -> dtree		6052431	0		=			
ANR	6052837	MemberAccess	c -> sub . code . tree		6052431	0					
ANR	6052838	MemberAccess	c -> sub . code		6052431	0					
ANR	6052839	PtrMemberAccess	c -> sub		6052431	0					
ANR	6052840	Identifier	c		6052431	0					
ANR	6052841	Identifier	sub		6052431	1					
ANR	6052842	Identifier	code		6052431	1					
ANR	6052843	Identifier	tree		6052431	1					
ANR	6052844	PtrMemberAccess	c -> dtree		6052431	1					
ANR	6052845	Identifier	c		6052431	0					
ANR	6052846	Identifier	dtree		6052431	1					
ANR	6052847	ExpressionStatement	"Tracevv ( ( stderr , ""inflate:         length %u\\n"" , c -> len ) )"	165:6:5230:5287	6052431	31	True				
ANR	6052848	CallExpression	"Tracevv ( ( stderr , ""inflate:         length %u\\n"" , c -> len ) )"		6052431	0					
ANR	6052849	Callee	Tracevv		6052431	0					
ANR	6052850	Identifier	Tracevv		6052431	0					
ANR	6052851	ArgumentList	"stderr , ""inflate:         length %u\\n"" , c -> len"		6052431	1					
ANR	6052852	Argument	"stderr , ""inflate:         length %u\\n"" , c -> len"		6052431	0					
ANR	6052853	Expression	"stderr , ""inflate:         length %u\\n"" , c -> len"		6052431	0					
ANR	6052854	Identifier	stderr		6052431	0					
ANR	6052855	Expression	"""inflate:         length %u\\n"" , c -> len"		6052431	1					
ANR	6052856	PrimaryExpression	"""inflate:         length %u\\n"""		6052431	0					
ANR	6052857	PtrMemberAccess	c -> len		6052431	1					
ANR	6052858	Identifier	c		6052431	0					
ANR	6052859	Identifier	len		6052431	1					
ANR	6052860	ExpressionStatement	c -> mode = DIST	166:6:5295:5309	6052431	32	True				
ANR	6052861	AssignmentExpression	c -> mode = DIST		6052431	0		=			
ANR	6052862	PtrMemberAccess	c -> mode		6052431	0					
ANR	6052863	Identifier	c		6052431	0					
ANR	6052864	Identifier	mode		6052431	1					
ANR	6052865	Identifier	DIST		6052431	1					
ANR	6052866	Label	case DIST :	167:4:5315:5324	6052431	33	True				
ANR	6052867	Identifier	DIST		6052431	0					
ANR	6052868	ExpressionStatement	j = c -> sub . code . need	168:6:5368:5388	6052431	34	True				
ANR	6052869	AssignmentExpression	j = c -> sub . code . need		6052431	0		=			
ANR	6052870	Identifier	j		6052431	0					
ANR	6052871	MemberAccess	c -> sub . code . need		6052431	1					
ANR	6052872	MemberAccess	c -> sub . code		6052431	0					
ANR	6052873	PtrMemberAccess	c -> sub		6052431	0					
ANR	6052874	Identifier	c		6052431	0					
ANR	6052875	Identifier	sub		6052431	1					
ANR	6052876	Identifier	code		6052431	1					
ANR	6052877	Identifier	need		6052431	1					
ANR	6052878	Statement	NEEDBITS	169:6:5396:5403	6052431	35	True				
ANR	6052879	ExpressionStatement	( j ) t = c -> sub . code . tree + ( ( uInt ) b & inflate_mask [ j ] )	169:14:5404:5464	6052431	36	True				
ANR	6052880	AssignmentExpression	( j ) t = c -> sub . code . tree + ( ( uInt ) b & inflate_mask [ j ] )		6052431	0		=			
ANR	6052881	CastExpression	( j ) t		6052431	0					
ANR	6052882	CastTarget	j		6052431	0					
ANR	6052883	Identifier	t		6052431	1					
ANR	6052884	AdditiveExpression	c -> sub . code . tree + ( ( uInt ) b & inflate_mask [ j ] )		6052431	1		+			
ANR	6052885	MemberAccess	c -> sub . code . tree		6052431	0					
ANR	6052886	MemberAccess	c -> sub . code		6052431	0					
ANR	6052887	PtrMemberAccess	c -> sub		6052431	0					
ANR	6052888	Identifier	c		6052431	0					
ANR	6052889	Identifier	sub		6052431	1					
ANR	6052890	Identifier	code		6052431	1					
ANR	6052891	Identifier	tree		6052431	1					
ANR	6052892	BitAndExpression	( uInt ) b & inflate_mask [ j ]		6052431	1		&			
ANR	6052893	CastExpression	( uInt ) b		6052431	0					
ANR	6052894	CastTarget	uInt		6052431	0					
ANR	6052895	Identifier	b		6052431	1					
ANR	6052896	ArrayIndexing	inflate_mask [ j ]		6052431	1					
ANR	6052897	Identifier	inflate_mask		6052431	0					
ANR	6052898	Identifier	j		6052431	1					
ANR	6052899	Statement	DUMPBITS	171:6:5472:5479	6052431	37	True				
ANR	6052900	Statement	(	171:14:5480:5480	6052431	38	True				
ANR	6052901	Statement	t	171:15:5481:5481	6052431	39	True				
ANR	6052902	Statement	->	171:16:5482:5483	6052431	40	True				
ANR	6052903	Statement	bits	171:18:5484:5487	6052431	41	True				
ANR	6052904	Statement	)	171:22:5488:5488	6052431	42	True				
ANR	6052905	ExpressionStatement	e = ( uInt ) ( t -> exop )	172:6:5496:5515	6052431	43	True				
ANR	6052906	AssignmentExpression	e = ( uInt ) ( t -> exop )		6052431	0		=			
ANR	6052907	Identifier	e		6052431	0					
ANR	6052908	CastExpression	( uInt ) ( t -> exop )		6052431	1					
ANR	6052909	CastTarget	uInt		6052431	0					
ANR	6052910	PtrMemberAccess	t -> exop		6052431	1					
ANR	6052911	Identifier	t		6052431	0					
ANR	6052912	Identifier	exop		6052431	1					
ANR	6052913	IfStatement	if ( e & 16 )		6052431	44					
ANR	6052914	Condition	e & 16	173:10:5527:5532	6052431	0	True				
ANR	6052915	BitAndExpression	e & 16		6052431	0		&			
ANR	6052916	Identifier	e		6052431	0					
ANR	6052917	PrimaryExpression	16		6052431	1					
ANR	6052918	CompoundStatement		91:6:3001:3001	6052431	1					
ANR	6052919	ExpressionStatement	c -> sub . copy . get = e & 15	175:8:5580:5604	6052431	0	True				
ANR	6052920	AssignmentExpression	c -> sub . copy . get = e & 15		6052431	0		=			
ANR	6052921	MemberAccess	c -> sub . copy . get		6052431	0					
ANR	6052922	MemberAccess	c -> sub . copy		6052431	0					
ANR	6052923	PtrMemberAccess	c -> sub		6052431	0					
ANR	6052924	Identifier	c		6052431	0					
ANR	6052925	Identifier	sub		6052431	1					
ANR	6052926	Identifier	copy		6052431	1					
ANR	6052927	Identifier	get		6052431	1					
ANR	6052928	BitAndExpression	e & 15		6052431	1		&			
ANR	6052929	Identifier	e		6052431	0					
ANR	6052930	PrimaryExpression	15		6052431	1					
ANR	6052931	ExpressionStatement	c -> sub . copy . dist = t -> base	176:8:5614:5640	6052431	1	True				
ANR	6052932	AssignmentExpression	c -> sub . copy . dist = t -> base		6052431	0		=			
ANR	6052933	MemberAccess	c -> sub . copy . dist		6052431	0					
ANR	6052934	MemberAccess	c -> sub . copy		6052431	0					
ANR	6052935	PtrMemberAccess	c -> sub		6052431	0					
ANR	6052936	Identifier	c		6052431	0					
ANR	6052937	Identifier	sub		6052431	1					
ANR	6052938	Identifier	copy		6052431	1					
ANR	6052939	Identifier	dist		6052431	1					
ANR	6052940	PtrMemberAccess	t -> base		6052431	1					
ANR	6052941	Identifier	t		6052431	0					
ANR	6052942	Identifier	base		6052431	1					
ANR	6052943	ExpressionStatement	c -> mode = DISTEXT	177:8:5650:5667	6052431	2	True				
ANR	6052944	AssignmentExpression	c -> mode = DISTEXT		6052431	0		=			
ANR	6052945	PtrMemberAccess	c -> mode		6052431	0					
ANR	6052946	Identifier	c		6052431	0					
ANR	6052947	Identifier	mode		6052431	1					
ANR	6052948	Identifier	DISTEXT		6052431	1					
ANR	6052949	BreakStatement	break ;	178:8:5677:5682	6052431	3	True				
ANR	6052950	IfStatement	if ( ( e & 64 ) == 0 )		6052431	45					
ANR	6052951	Condition	( e & 64 ) == 0	180:10:5702:5714	6052431	0	True				
ANR	6052952	EqualityExpression	( e & 64 ) == 0		6052431	0		==			
ANR	6052953	BitAndExpression	e & 64		6052431	0		&			
ANR	6052954	Identifier	e		6052431	0					
ANR	6052955	PrimaryExpression	64		6052431	1					
ANR	6052956	PrimaryExpression	0		6052431	1					
ANR	6052957	CompoundStatement		98:6:3178:3178	6052431	1					
ANR	6052958	ExpressionStatement	c -> sub . code . need = e	182:8:5757:5777	6052431	0	True				
ANR	6052959	AssignmentExpression	c -> sub . code . need = e		6052431	0		=			
ANR	6052960	MemberAccess	c -> sub . code . need		6052431	0					
ANR	6052961	MemberAccess	c -> sub . code		6052431	0					
ANR	6052962	PtrMemberAccess	c -> sub		6052431	0					
ANR	6052963	Identifier	c		6052431	0					
ANR	6052964	Identifier	sub		6052431	1					
ANR	6052965	Identifier	code		6052431	1					
ANR	6052966	Identifier	need		6052431	1					
ANR	6052967	Identifier	e		6052431	1					
ANR	6052968	ExpressionStatement	c -> sub . code . tree = t + t -> base	183:8:5787:5817	6052431	1	True				
ANR	6052969	AssignmentExpression	c -> sub . code . tree = t + t -> base		6052431	0		=			
ANR	6052970	MemberAccess	c -> sub . code . tree		6052431	0					
ANR	6052971	MemberAccess	c -> sub . code		6052431	0					
ANR	6052972	PtrMemberAccess	c -> sub		6052431	0					
ANR	6052973	Identifier	c		6052431	0					
ANR	6052974	Identifier	sub		6052431	1					
ANR	6052975	Identifier	code		6052431	1					
ANR	6052976	Identifier	tree		6052431	1					
ANR	6052977	AdditiveExpression	t + t -> base		6052431	1		+			
ANR	6052978	Identifier	t		6052431	0					
ANR	6052979	PtrMemberAccess	t -> base		6052431	1					
ANR	6052980	Identifier	t		6052431	0					
ANR	6052981	Identifier	base		6052431	1					
ANR	6052982	BreakStatement	break ;	184:8:5827:5832	6052431	2	True				
ANR	6052983	ExpressionStatement	c -> mode = BADCODE	186:6:5848:5865	6052431	46	True				
ANR	6052984	AssignmentExpression	c -> mode = BADCODE		6052431	0		=			
ANR	6052985	PtrMemberAccess	c -> mode		6052431	0					
ANR	6052986	Identifier	c		6052431	0					
ANR	6052987	Identifier	mode		6052431	1					
ANR	6052988	Identifier	BADCODE		6052431	1					
ANR	6052989	ExpressionStatement	"z -> msg = ( char * ) ""invalid distance code"""	187:6:5899:5938	6052431	47	True				
ANR	6052990	AssignmentExpression	"z -> msg = ( char * ) ""invalid distance code"""		6052431	0		=			
ANR	6052991	PtrMemberAccess	z -> msg		6052431	0					
ANR	6052992	Identifier	z		6052431	0					
ANR	6052993	Identifier	msg		6052431	1					
ANR	6052994	CastExpression	"( char * ) ""invalid distance code"""		6052431	1					
ANR	6052995	CastTarget	char *		6052431	0					
ANR	6052996	PrimaryExpression	"""invalid distance code"""		6052431	1					
ANR	6052997	ExpressionStatement	r = Z_DATA_ERROR	188:6:5946:5962	6052431	48	True				
ANR	6052998	AssignmentExpression	r = Z_DATA_ERROR		6052431	0		=			
ANR	6052999	Identifier	r		6052431	0					
ANR	6053000	Identifier	Z_DATA_ERROR		6052431	1					
ANR	6053001	Statement	LEAVE	189:6:5970:5974	6052431	49	True				
ANR	6053002	Label	case DISTEXT :	190:4:5980:5992	6052431	50	True				
ANR	6053003	Identifier	DISTEXT		6052431	0					
ANR	6053004	ExpressionStatement	j = c -> sub . copy . get	191:6:6038:6057	6052431	51	True				
ANR	6053005	AssignmentExpression	j = c -> sub . copy . get		6052431	0		=			
ANR	6053006	Identifier	j		6052431	0					
ANR	6053007	MemberAccess	c -> sub . copy . get		6052431	1					
ANR	6053008	MemberAccess	c -> sub . copy		6052431	0					
ANR	6053009	PtrMemberAccess	c -> sub		6052431	0					
ANR	6053010	Identifier	c		6052431	0					
ANR	6053011	Identifier	sub		6052431	1					
ANR	6053012	Identifier	copy		6052431	1					
ANR	6053013	Identifier	get		6052431	1					
ANR	6053014	Statement	NEEDBITS	192:6:6065:6072	6052431	52	True				
ANR	6053015	ExpressionStatement	( j ) c -> sub . copy . dist += ( uInt ) b & inflate_mask [ j ]	192:14:6073:6128	6052431	53	True				
ANR	6053016	AssignmentExpression	( j ) c -> sub . copy . dist += ( uInt ) b & inflate_mask [ j ]		6052431	0		+=			
ANR	6053017	CastExpression	( j ) c -> sub . copy . dist		6052431	0					
ANR	6053018	CastTarget	j		6052431	0					
ANR	6053019	MemberAccess	c -> sub . copy . dist		6052431	1					
ANR	6053020	MemberAccess	c -> sub . copy		6052431	0					
ANR	6053021	PtrMemberAccess	c -> sub		6052431	0					
ANR	6053022	Identifier	c		6052431	0					
ANR	6053023	Identifier	sub		6052431	1					
ANR	6053024	Identifier	copy		6052431	1					
ANR	6053025	Identifier	dist		6052431	1					
ANR	6053026	BitAndExpression	( uInt ) b & inflate_mask [ j ]		6052431	1		&			
ANR	6053027	CastExpression	( uInt ) b		6052431	0					
ANR	6053028	CastTarget	uInt		6052431	0					
ANR	6053029	Identifier	b		6052431	1					
ANR	6053030	ArrayIndexing	inflate_mask [ j ]		6052431	1					
ANR	6053031	Identifier	inflate_mask		6052431	0					
ANR	6053032	Identifier	j		6052431	1					
ANR	6053033	Statement	DUMPBITS	194:6:6136:6143	6052431	54	True				
ANR	6053034	ExpressionStatement	"( j ) Tracevv ( ( stderr , ""inflate:         distance %u\\n"" , c -> sub . copy . dist ) )"	194:14:6144:6223	6052431	55	True				
ANR	6053035	CastExpression	"( j ) Tracevv ( ( stderr , ""inflate:         distance %u\\n"" , c -> sub . copy . dist ) )"		6052431	0					
ANR	6053036	CastTarget	j		6052431	0					
ANR	6053037	CallExpression	"Tracevv ( ( stderr , ""inflate:         distance %u\\n"" , c -> sub . copy . dist ) )"		6052431	1					
ANR	6053038	Callee	Tracevv		6052431	0					
ANR	6053039	Identifier	Tracevv		6052431	0					
ANR	6053040	ArgumentList	"stderr , ""inflate:         distance %u\\n"" , c -> sub . copy . dist"		6052431	1					
ANR	6053041	Argument	"stderr , ""inflate:         distance %u\\n"" , c -> sub . copy . dist"		6052431	0					
ANR	6053042	Expression	"stderr , ""inflate:         distance %u\\n"" , c -> sub . copy . dist"		6052431	0					
ANR	6053043	Identifier	stderr		6052431	0					
ANR	6053044	Expression	"""inflate:         distance %u\\n"" , c -> sub . copy . dist"		6052431	1					
ANR	6053045	PrimaryExpression	"""inflate:         distance %u\\n"""		6052431	0					
ANR	6053046	MemberAccess	c -> sub . copy . dist		6052431	1					
ANR	6053047	MemberAccess	c -> sub . copy		6052431	0					
ANR	6053048	PtrMemberAccess	c -> sub		6052431	0					
ANR	6053049	Identifier	c		6052431	0					
ANR	6053050	Identifier	sub		6052431	1					
ANR	6053051	Identifier	copy		6052431	1					
ANR	6053052	Identifier	dist		6052431	1					
ANR	6053053	ExpressionStatement	c -> mode = COPY	196:6:6231:6245	6052431	56	True				
ANR	6053054	AssignmentExpression	c -> mode = COPY		6052431	0		=			
ANR	6053055	PtrMemberAccess	c -> mode		6052431	0					
ANR	6053056	Identifier	c		6052431	0					
ANR	6053057	Identifier	mode		6052431	1					
ANR	6053058	Identifier	COPY		6052431	1					
ANR	6053059	Label	case COPY :	197:4:6251:6260	6052431	57	True				
ANR	6053060	Identifier	COPY		6052431	0					
ANR	6053061	ExpressionStatement	f = q - c -> sub . copy . dist	198:6:6329:6353	6052431	58	True				
ANR	6053062	AssignmentExpression	f = q - c -> sub . copy . dist		6052431	0		=			
ANR	6053063	Identifier	f		6052431	0					
ANR	6053064	AdditiveExpression	q - c -> sub . copy . dist		6052431	1		-			
ANR	6053065	Identifier	q		6052431	0					
ANR	6053066	MemberAccess	c -> sub . copy . dist		6052431	1					
ANR	6053067	MemberAccess	c -> sub . copy		6052431	0					
ANR	6053068	PtrMemberAccess	c -> sub		6052431	0					
ANR	6053069	Identifier	c		6052431	0					
ANR	6053070	Identifier	sub		6052431	1					
ANR	6053071	Identifier	copy		6052431	1					
ANR	6053072	Identifier	dist		6052431	1					
ANR	6053073	WhileStatement	while ( f < s -> window )		6052431	59					
ANR	6053074	Condition	f < s -> window	199:13:6368:6380	6052431	0	True				
ANR	6053075	RelationalExpression	f < s -> window		6052431	0		<			
ANR	6053076	Identifier	f		6052431	0					
ANR	6053077	PtrMemberAccess	s -> window		6052431	1					
ANR	6053078	Identifier	s		6052431	0					
ANR	6053079	Identifier	window		6052431	1					
ANR	6053080	ExpressionStatement	f += s -> end - s -> window	200:8:6444:6467	6052431	1	True				
ANR	6053081	AssignmentExpression	f += s -> end - s -> window		6052431	0		+=			
ANR	6053082	Identifier	f		6052431	0					
ANR	6053083	AdditiveExpression	s -> end - s -> window		6052431	1		-			
ANR	6053084	PtrMemberAccess	s -> end		6052431	0					
ANR	6053085	Identifier	s		6052431	0					
ANR	6053086	Identifier	end		6052431	1					
ANR	6053087	PtrMemberAccess	s -> window		6052431	1					
ANR	6053088	Identifier	s		6052431	0					
ANR	6053089	Identifier	window		6052431	1					
ANR	6053090	WhileStatement	while ( c -> len )		6052431	60					
ANR	6053091	Condition	c -> len	201:13:6529:6534	6052431	0	True				
ANR	6053092	PtrMemberAccess	c -> len		6052431	0					
ANR	6053093	Identifier	c		6052431	0					
ANR	6053094	Identifier	len		6052431	1					
ANR	6053095	CompoundStatement		119:6:3974:3974	6052431	1					
ANR	6053096	Statement	NEEDOUT	203:8:6553:6559	6052431	0	True				
ANR	6053097	Statement	OUTBYTE	204:8:6569:6575	6052431	1	True				
ANR	6053098	Statement	(	204:15:6576:6576	6052431	2	True				
ANR	6053099	Statement	*	204:16:6577:6577	6052431	3	True				
ANR	6053100	Statement	f	204:17:6578:6578	6052431	4	True				
ANR	6053101	Statement	++	204:18:6579:6580	6052431	5	True				
ANR	6053102	Statement	)	204:20:6581:6581	6052431	6	True				
ANR	6053103	IfStatement	if ( f == s -> end )		6052431	7					
ANR	6053104	Condition	f == s -> end	205:12:6595:6605	6052431	0	True				
ANR	6053105	EqualityExpression	f == s -> end		6052431	0		==			
ANR	6053106	Identifier	f		6052431	0					
ANR	6053107	PtrMemberAccess	s -> end		6052431	1					
ANR	6053108	Identifier	s		6052431	0					
ANR	6053109	Identifier	end		6052431	1					
ANR	6053110	ExpressionStatement	f = s -> window	206:10:6618:6631	6052431	1	True				
ANR	6053111	AssignmentExpression	f = s -> window		6052431	0		=			
ANR	6053112	Identifier	f		6052431	0					
ANR	6053113	PtrMemberAccess	s -> window		6052431	1					
ANR	6053114	Identifier	s		6052431	0					
ANR	6053115	Identifier	window		6052431	1					
ANR	6053116	ExpressionStatement	c -> len --	207:8:6641:6649	6052431	8	True				
ANR	6053117	PostIncDecOperationExpression	c -> len --		6052431	0					
ANR	6053118	PtrMemberAccess	c -> len		6052431	0					
ANR	6053119	Identifier	c		6052431	0					
ANR	6053120	Identifier	len		6052431	1					
ANR	6053121	IncDec	--		6052431	1					
ANR	6053122	ExpressionStatement	c -> mode = START	209:6:6665:6680	6052431	61	True				
ANR	6053123	AssignmentExpression	c -> mode = START		6052431	0		=			
ANR	6053124	PtrMemberAccess	c -> mode		6052431	0					
ANR	6053125	Identifier	c		6052431	0					
ANR	6053126	Identifier	mode		6052431	1					
ANR	6053127	Identifier	START		6052431	1					
ANR	6053128	BreakStatement	break ;	210:6:6688:6693	6052431	62	True				
ANR	6053129	Label	case LIT :	211:4:6699:6707	6052431	63	True				
ANR	6053130	Identifier	LIT		6052431	0					
ANR	6053131	Statement	NEEDOUT	212:6:6772:6778	6052431	64	True				
ANR	6053132	Statement	OUTBYTE	213:6:6786:6792	6052431	65	True				
ANR	6053133	Statement	(	213:13:6793:6793	6052431	66	True				
ANR	6053134	Statement	c	213:14:6794:6794	6052431	67	True				
ANR	6053135	Statement	->	213:15:6795:6796	6052431	68	True				
ANR	6053136	Statement	sub	213:17:6797:6799	6052431	69	True				
ANR	6053137	Statement	.	213:20:6800:6800	6052431	70	True				
ANR	6053138	Statement	lit	213:21:6801:6803	6052431	71	True				
ANR	6053139	Statement	)	213:24:6804:6804	6052431	72	True				
ANR	6053140	ExpressionStatement	c -> mode = START	214:6:6812:6827	6052431	73	True				
ANR	6053141	AssignmentExpression	c -> mode = START		6052431	0		=			
ANR	6053142	PtrMemberAccess	c -> mode		6052431	0					
ANR	6053143	Identifier	c		6052431	0					
ANR	6053144	Identifier	mode		6052431	1					
ANR	6053145	Identifier	START		6052431	1					
ANR	6053146	BreakStatement	break ;	215:6:6835:6840	6052431	74	True				
ANR	6053147	Label	case WASH :	216:4:6846:6855	6052431	75	True				
ANR	6053148	Identifier	WASH		6052431	0					
ANR	6053149	IfStatement	if ( k > 7 )		6052431	76					
ANR	6053150	Condition	k > 7	217:10:6915:6919	6052431	0	True				
ANR	6053151	RelationalExpression	k > 7		6052431	0		>			
ANR	6053152	Identifier	k		6052431	0					
ANR	6053153	PrimaryExpression	7		6052431	1					
ANR	6053154	CompoundStatement		135:6:4399:4399	6052431	1					
ANR	6053155	Statement	Assert	219:8:6978:6983	6052431	0	True				
ANR	6053156	Statement	(	219:14:6984:6984	6052431	1	True				
ANR	6053157	Statement	k	219:15:6985:6985	6052431	2	True				
ANR	6053158	Statement	<	219:17:6987:6987	6052431	3	True				
ANR	6053159	Statement	16	219:19:6989:6990	6052431	4	True				
ANR	6053160	Statement	","	219:21:6991:6991	6052431	5	True				
ANR	6053161	Statement	"""inflate_codes grabbed too many bytes"""	219:23:6993:7030	6052431	6	True				
ANR	6053162	Statement	)	219:61:7031:7031	6052431	7	True				
ANR	6053163	ExpressionStatement	k -= 8	220:8:7041:7047	6052431	8	True				
ANR	6053164	AssignmentExpression	k -= 8		6052431	0		-=			
ANR	6053165	Identifier	k		6052431	0					
ANR	6053166	PrimaryExpression	8		6052431	1					
ANR	6053167	ExpressionStatement	n ++	221:8:7057:7060	6052431	9	True				
ANR	6053168	PostIncDecOperationExpression	n ++		6052431	0					
ANR	6053169	Identifier	n		6052431	0					
ANR	6053170	IncDec	++		6052431	1					
ANR	6053171	ExpressionStatement	p --	222:8:7070:7073	6052431	10	True				
ANR	6053172	PostIncDecOperationExpression	p --		6052431	0					
ANR	6053173	Identifier	p		6052431	0					
ANR	6053174	IncDec	--		6052431	1					
ANR	6053175	Statement	FLUSH	224:6:7128:7132	6052431	77	True				
ANR	6053176	IfStatement	if ( s -> read != s -> write )		6052431	78					
ANR	6053177	Condition	s -> read != s -> write	225:10:7144:7162	6052431	0	True				
ANR	6053178	EqualityExpression	s -> read != s -> write		6052431	0		!=			
ANR	6053179	PtrMemberAccess	s -> read		6052431	0					
ANR	6053180	Identifier	s		6052431	0					
ANR	6053181	Identifier	read		6052431	1					
ANR	6053182	PtrMemberAccess	s -> write		6052431	1					
ANR	6053183	Identifier	s		6052431	0					
ANR	6053184	Identifier	write		6052431	1					
ANR	6053185	Statement	LEAVE	226:8:7173:7177	6052431	1	True				
ANR	6053186	ExpressionStatement	c -> mode = END	227:6:7185:7198	6052431	79	True				
ANR	6053187	AssignmentExpression	c -> mode = END		6052431	0		=			
ANR	6053188	PtrMemberAccess	c -> mode		6052431	0					
ANR	6053189	Identifier	c		6052431	0					
ANR	6053190	Identifier	mode		6052431	1					
ANR	6053191	Identifier	END		6052431	1					
ANR	6053192	Label	case END :	228:4:7204:7212	6052431	80	True				
ANR	6053193	Identifier	END		6052431	0					
ANR	6053194	ExpressionStatement	r = Z_STREAM_END	229:6:7220:7236	6052431	81	True				
ANR	6053195	AssignmentExpression	r = Z_STREAM_END		6052431	0		=			
ANR	6053196	Identifier	r		6052431	0					
ANR	6053197	Identifier	Z_STREAM_END		6052431	1					
ANR	6053198	Statement	LEAVE	230:6:7244:7248	6052431	82	True				
ANR	6053199	Label	case BADCODE :	231:4:7254:7266	6052431	83	True				
ANR	6053200	Identifier	BADCODE		6052431	0					
ANR	6053201	ExpressionStatement	r = Z_DATA_ERROR	232:6:7299:7315	6052431	84	True				
ANR	6053202	AssignmentExpression	r = Z_DATA_ERROR		6052431	0		=			
ANR	6053203	Identifier	r		6052431	0					
ANR	6053204	Identifier	Z_DATA_ERROR		6052431	1					
ANR	6053205	Statement	LEAVE	233:6:7323:7327	6052431	85	True				
ANR	6053206	Label	default :	234:4:7333:7340	6052431	86	True				
ANR	6053207	Identifier	default		6052431	0					
ANR	6053208	ExpressionStatement	r = Z_STREAM_ERROR	235:6:7348:7366	6052431	87	True				
ANR	6053209	AssignmentExpression	r = Z_STREAM_ERROR		6052431	0		=			
ANR	6053210	Identifier	r		6052431	0					
ANR	6053211	Identifier	Z_STREAM_ERROR		6052431	1					
ANR	6053212	Statement	LEAVE	236:6:7374:7378	6052431	88	True				
ANR	6053213	ReturnStatement	return Z_STREAM_ERROR ;	239:2:7411:7432	6052431	13	True				
ANR	6053214	Identifier	Z_STREAM_ERROR		6052431	0					
ANR	6053215	ReturnType	local int		6052431	1					
ANR	6053216	Identifier	inflate_codes		6052431	2					
ANR	6053217	ParameterList	"inflate_blocks_statef * s , z_streamp z , int r"		6052431	3					
ANR	6053218	Parameter	inflate_blocks_statef * s	81:0:2521:2544	6052431	0	True				
ANR	6053219	ParameterType	inflate_blocks_statef *		6052431	0					
ANR	6053220	Identifier	s		6052431	1					
ANR	6053221	Parameter	z_streamp z	82:0:2547:2557	6052431	1	True				
ANR	6053222	ParameterType	z_streamp		6052431	0					
ANR	6053223	Identifier	z		6052431	1					
ANR	6053224	Parameter	int r	83:0:2560:2564	6052431	2	True				
ANR	6053225	ParameterType	int		6052431	0					
ANR	6053226	Identifier	r		6052431	1					
ANR	6053227	CFGEntryNode	ENTRY		6052431		True				
ANR	6053228	CFGExitNode	EXIT		6052431		True				
ANR	6053229	Symbol	Z_STREAM_ERROR		6052431						
ANR	6053230	Symbol	Z_DATA_ERROR		6052431						
ANR	6053231	Symbol	* z		6052431						
ANR	6053232	Symbol	DIST		6052431						
ANR	6053233	Symbol	inflate_mask		6052431						
ANR	6053234	Symbol	s -> end		6052431						
ANR	6053235	Symbol	Z_STREAM_END		6052431						
ANR	6053236	Symbol	c -> len		6052431						
ANR	6053237	Symbol	s -> window		6052431						
ANR	6053238	Symbol	c -> mode		6052431						
ANR	6053239	Symbol	z -> msg		6052431						
ANR	6053240	Symbol	c -> sub . code . need		6052431						
ANR	6053241	Symbol	* inflate_mask		6052431						
ANR	6053242	Symbol	c -> sub . code . tree		6052431						
ANR	6053243	Symbol	s -> sub		6052431						
ANR	6053244	Symbol	stderr		6052431						
ANR	6053245	Symbol	c -> sub		6052431						
ANR	6053246	Symbol	s -> sub . decode		6052431						
ANR	6053247	Symbol	c -> sub . code		6052431						
ANR	6053248	Symbol	WASH		6052431						
ANR	6053249	Symbol	inflate_fast		6052431						
ANR	6053250	Symbol	END		6052431						
ANR	6053251	Symbol	c -> sub . copy		6052431						
ANR	6053252	Symbol	c -> sub . copy . get		6052431						
ANR	6053253	Symbol	Z_OK		6052431						
ANR	6053254	Symbol	LENEXT		6052431						
ANR	6053255	Symbol	c -> dbits		6052431						
ANR	6053256	Symbol	s -> read		6052431						
ANR	6053257	Symbol	c -> sub . lit		6052431						
ANR	6053258	Symbol	b		6052431						
ANR	6053259	Symbol	c		6052431						
ANR	6053260	Symbol	e		6052431						
ANR	6053261	Symbol	f		6052431						
ANR	6053262	Symbol	c -> lbits		6052431						
ANR	6053263	Symbol	c -> sub . copy . dist		6052431						
ANR	6053264	Symbol	t -> exop		6052431						
ANR	6053265	Symbol	t -> base		6052431						
ANR	6053266	Symbol	DISTEXT		6052431						
ANR	6053267	Symbol	j		6052431						
ANR	6053268	Symbol	COPY		6052431						
ANR	6053269	Symbol	k		6052431						
ANR	6053270	Symbol	m		6052431						
ANR	6053271	Symbol	* c		6052431						
ANR	6053272	Symbol	n		6052431						
ANR	6053273	Symbol	c -> dtree		6052431						
ANR	6053274	Symbol	p		6052431						
ANR	6053275	Symbol	q		6052431						
ANR	6053276	Symbol	r		6052431						
ANR	6053277	Symbol	s		6052431						
ANR	6053278	Symbol	t		6052431						
ANR	6053279	Symbol	LEN		6052431						
ANR	6053280	Symbol	* j		6052431						
ANR	6053281	Symbol	BADCODE		6052431						
ANR	6053282	Symbol	LIT		6052431						
ANR	6053283	Symbol	c -> ltree		6052431						
ANR	6053284	Symbol	s -> sub . decode . codes		6052431						
ANR	6053285	Symbol	z		6052431						
ANR	6053286	Symbol	START		6052431						
ANR	6053287	Symbol	* s		6052431						
ANR	6053288	Symbol	s -> write		6052431						
ANR	6053289	Symbol	* t		6052431						
ANR	6053290	Function	inflate_codes_free	244:0:7494:7644							
ANR	6053291	FunctionDef	"inflate_codes_free (inflate_codes_statef * c , z_streamp z)"		6053290	0					
ANR	6053292	CompoundStatement		247:0:7576:7644	6053290	0					
ANR	6053293	ExpressionStatement	"ZFREE ( z , c )"	248:2:7580:7591	6053290	0	True				
ANR	6053294	CallExpression	"ZFREE ( z , c )"		6053290	0					
ANR	6053295	Callee	ZFREE		6053290	0					
ANR	6053296	Identifier	ZFREE		6053290	0					
ANR	6053297	ArgumentList	z		6053290	1					
ANR	6053298	Argument	z		6053290	0					
ANR	6053299	Identifier	z		6053290	0					
ANR	6053300	Argument	c		6053290	1					
ANR	6053301	Identifier	c		6053290	0					
ANR	6053302	ExpressionStatement	"Tracev ( ( stderr , ""inflate:       codes free\\n"" ) )"	249:2:7595:7642	6053290	1	True				
ANR	6053303	CallExpression	"Tracev ( ( stderr , ""inflate:       codes free\\n"" ) )"		6053290	0					
ANR	6053304	Callee	Tracev		6053290	0					
ANR	6053305	Identifier	Tracev		6053290	0					
ANR	6053306	ArgumentList	"stderr , ""inflate:       codes free\\n"""		6053290	1					
ANR	6053307	Argument	"stderr , ""inflate:       codes free\\n"""		6053290	0					
ANR	6053308	Expression	"stderr , ""inflate:       codes free\\n"""		6053290	0					
ANR	6053309	Identifier	stderr		6053290	0					
ANR	6053310	PrimaryExpression	"""inflate:       codes free\\n"""		6053290	1					
ANR	6053311	ReturnType	local void		6053290	1					
ANR	6053312	Identifier	inflate_codes_free		6053290	2					
ANR	6053313	ParameterList	"inflate_codes_statef * c , z_streamp z"		6053290	3					
ANR	6053314	Parameter	inflate_codes_statef * c	245:0:7537:7559	6053290	0	True				
ANR	6053315	ParameterType	inflate_codes_statef *		6053290	0					
ANR	6053316	Identifier	c		6053290	1					
ANR	6053317	Parameter	z_streamp z	246:0:7562:7572	6053290	1	True				
ANR	6053318	ParameterType	z_streamp		6053290	0					
ANR	6053319	Identifier	z		6053290	1					
ANR	6053320	CFGEntryNode	ENTRY		6053290		True				
ANR	6053321	CFGExitNode	EXIT		6053290		True				
ANR	6053322	Symbol	c		6053290						
ANR	6053323	Symbol	z		6053290						
ANR	6053324	Symbol	stderr		6053290						
