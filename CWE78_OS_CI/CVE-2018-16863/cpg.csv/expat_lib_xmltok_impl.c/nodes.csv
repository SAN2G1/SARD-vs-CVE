command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3153694	File	data/converged/CVE-2018-16863_ghostpdl/expat_lib_xmltok_impl.c								
ANR	3153695	Function	scanComment	137:0:4222:5181							
ANR	3153696	FunctionDef	"scanComment (const ENCODING * enc , const char * ptr , const char * end , const char * * nextTokPtr)"		3153695	0					
ANR	3153697	CompoundStatement		140:0:4361:5181	3153695	0					
ANR	3153698	IfStatement	"if ( HAS_CHAR ( enc , ptr , end ) )"		3153695	0					
ANR	3153699	Condition	"HAS_CHAR ( enc , ptr , end )"	141:6:4369:4391	3153695	0	True				
ANR	3153700	CallExpression	"HAS_CHAR ( enc , ptr , end )"		3153695	0					
ANR	3153701	Callee	HAS_CHAR		3153695	0					
ANR	3153702	Identifier	HAS_CHAR		3153695	0					
ANR	3153703	ArgumentList	enc		3153695	1					
ANR	3153704	Argument	enc		3153695	0					
ANR	3153705	Identifier	enc		3153695	0					
ANR	3153706	Argument	ptr		3153695	1					
ANR	3153707	Identifier	ptr		3153695	0					
ANR	3153708	Argument	end		3153695	2					
ANR	3153709	Identifier	end		3153695	0					
ANR	3153710	CompoundStatement		2:31:32:32	3153695	1					
ANR	3153711	IfStatement	"if ( ! CHAR_MATCHES ( enc , ptr , ASCII_MINUS ) )"		3153695	0					
ANR	3153712	Condition	"! CHAR_MATCHES ( enc , ptr , ASCII_MINUS )"	142:8:4404:4439	3153695	0	True				
ANR	3153713	UnaryOperationExpression	"! CHAR_MATCHES ( enc , ptr , ASCII_MINUS )"		3153695	0					
ANR	3153714	UnaryOperator	!		3153695	0					
ANR	3153715	CallExpression	"CHAR_MATCHES ( enc , ptr , ASCII_MINUS )"		3153695	1					
ANR	3153716	Callee	CHAR_MATCHES		3153695	0					
ANR	3153717	Identifier	CHAR_MATCHES		3153695	0					
ANR	3153718	ArgumentList	enc		3153695	1					
ANR	3153719	Argument	enc		3153695	0					
ANR	3153720	Identifier	enc		3153695	0					
ANR	3153721	Argument	ptr		3153695	1					
ANR	3153722	Identifier	ptr		3153695	0					
ANR	3153723	Argument	ASCII_MINUS		3153695	2					
ANR	3153724	Identifier	ASCII_MINUS		3153695	0					
ANR	3153725	CompoundStatement		3:46:80:80	3153695	1					
ANR	3153726	ExpressionStatement	* nextTokPtr = ptr	143:6:4450:4467	3153695	0	True				
ANR	3153727	AssignmentExpression	* nextTokPtr = ptr		3153695	0		=			
ANR	3153728	UnaryOperationExpression	* nextTokPtr		3153695	0					
ANR	3153729	UnaryOperator	*		3153695	0					
ANR	3153730	Identifier	nextTokPtr		3153695	1					
ANR	3153731	Identifier	ptr		3153695	1					
ANR	3153732	ReturnStatement	return XML_TOK_INVALID ;	144:6:4475:4497	3153695	1	True				
ANR	3153733	Identifier	XML_TOK_INVALID		3153695	0					
ANR	3153734	ExpressionStatement	ptr += MINBPC ( enc )	146:4:4509:4527	3153695	1	True				
ANR	3153735	AssignmentExpression	ptr += MINBPC ( enc )		3153695	0		+=			
ANR	3153736	Identifier	ptr		3153695	0					
ANR	3153737	CallExpression	MINBPC ( enc )		3153695	1					
ANR	3153738	Callee	MINBPC		3153695	0					
ANR	3153739	Identifier	MINBPC		3153695	0					
ANR	3153740	ArgumentList	enc		3153695	1					
ANR	3153741	Argument	enc		3153695	0					
ANR	3153742	Identifier	enc		3153695	0					
ANR	3153743	WhileStatement	"while ( HAS_CHAR ( enc , ptr , end ) )"		3153695	2					
ANR	3153744	Condition	"HAS_CHAR ( enc , ptr , end )"	147:11:4540:4562	3153695	0	True				
ANR	3153745	CallExpression	"HAS_CHAR ( enc , ptr , end )"		3153695	0					
ANR	3153746	Callee	HAS_CHAR		3153695	0					
ANR	3153747	Identifier	HAS_CHAR		3153695	0					
ANR	3153748	ArgumentList	enc		3153695	1					
ANR	3153749	Argument	enc		3153695	0					
ANR	3153750	Identifier	enc		3153695	0					
ANR	3153751	Argument	ptr		3153695	1					
ANR	3153752	Identifier	ptr		3153695	0					
ANR	3153753	Argument	end		3153695	2					
ANR	3153754	Identifier	end		3153695	0					
ANR	3153755	CompoundStatement		8:36:203:203	3153695	1					
ANR	3153756	SwitchStatement	"switch ( BYTE_TYPE ( enc , ptr ) )"		3153695	0					
ANR	3153757	Condition	"BYTE_TYPE ( enc , ptr )"	148:14:4581:4599	3153695	0	True				
ANR	3153758	CallExpression	"BYTE_TYPE ( enc , ptr )"		3153695	0					
ANR	3153759	Callee	BYTE_TYPE		3153695	0					
ANR	3153760	Identifier	BYTE_TYPE		3153695	0					
ANR	3153761	ArgumentList	enc		3153695	1					
ANR	3153762	Argument	enc		3153695	0					
ANR	3153763	Identifier	enc		3153695	0					
ANR	3153764	Argument	ptr		3153695	1					
ANR	3153765	Identifier	ptr		3153695	0					
ANR	3153766	CompoundStatement		9:35:240:240	3153695	1					
ANR	3153767	Statement	INVALID_CASES	149:6:4610:4622	3153695	0	True				
ANR	3153768	Statement	(	149:19:4623:4623	3153695	1	True				
ANR	3153769	Statement	ptr	149:20:4624:4626	3153695	2	True				
ANR	3153770	Statement	","	149:23:4627:4627	3153695	3	True				
ANR	3153771	Statement	nextTokPtr	149:25:4629:4638	3153695	4	True				
ANR	3153772	Statement	)	149:35:4639:4639	3153695	5	True				
ANR	3153773	Label	case BT_MINUS :	150:6:4647:4660	3153695	6	True				
ANR	3153774	Identifier	BT_MINUS		3153695	0					
ANR	3153775	ExpressionStatement	ptr += MINBPC ( enc )	151:8:4670:4688	3153695	7	True				
ANR	3153776	AssignmentExpression	ptr += MINBPC ( enc )		3153695	0		+=			
ANR	3153777	Identifier	ptr		3153695	0					
ANR	3153778	CallExpression	MINBPC ( enc )		3153695	1					
ANR	3153779	Callee	MINBPC		3153695	0					
ANR	3153780	Identifier	MINBPC		3153695	0					
ANR	3153781	ArgumentList	enc		3153695	1					
ANR	3153782	Argument	enc		3153695	0					
ANR	3153783	Identifier	enc		3153695	0					
ANR	3153784	ExpressionStatement	"REQUIRE_CHAR ( enc , ptr , end )"	152:8:4698:4725	3153695	8	True				
ANR	3153785	CallExpression	"REQUIRE_CHAR ( enc , ptr , end )"		3153695	0					
ANR	3153786	Callee	REQUIRE_CHAR		3153695	0					
ANR	3153787	Identifier	REQUIRE_CHAR		3153695	0					
ANR	3153788	ArgumentList	enc		3153695	1					
ANR	3153789	Argument	enc		3153695	0					
ANR	3153790	Identifier	enc		3153695	0					
ANR	3153791	Argument	ptr		3153695	1					
ANR	3153792	Identifier	ptr		3153695	0					
ANR	3153793	Argument	end		3153695	2					
ANR	3153794	Identifier	end		3153695	0					
ANR	3153795	IfStatement	"if ( CHAR_MATCHES ( enc , ptr , ASCII_MINUS ) )"		3153695	9					
ANR	3153796	Condition	"CHAR_MATCHES ( enc , ptr , ASCII_MINUS )"	153:12:4739:4773	3153695	0	True				
ANR	3153797	CallExpression	"CHAR_MATCHES ( enc , ptr , ASCII_MINUS )"		3153695	0					
ANR	3153798	Callee	CHAR_MATCHES		3153695	0					
ANR	3153799	Identifier	CHAR_MATCHES		3153695	0					
ANR	3153800	ArgumentList	enc		3153695	1					
ANR	3153801	Argument	enc		3153695	0					
ANR	3153802	Identifier	enc		3153695	0					
ANR	3153803	Argument	ptr		3153695	1					
ANR	3153804	Identifier	ptr		3153695	0					
ANR	3153805	Argument	ASCII_MINUS		3153695	2					
ANR	3153806	Identifier	ASCII_MINUS		3153695	0					
ANR	3153807	CompoundStatement		14:49:414:414	3153695	1					
ANR	3153808	ExpressionStatement	ptr += MINBPC ( enc )	154:10:4788:4806	3153695	0	True				
ANR	3153809	AssignmentExpression	ptr += MINBPC ( enc )		3153695	0		+=			
ANR	3153810	Identifier	ptr		3153695	0					
ANR	3153811	CallExpression	MINBPC ( enc )		3153695	1					
ANR	3153812	Callee	MINBPC		3153695	0					
ANR	3153813	Identifier	MINBPC		3153695	0					
ANR	3153814	ArgumentList	enc		3153695	1					
ANR	3153815	Argument	enc		3153695	0					
ANR	3153816	Identifier	enc		3153695	0					
ANR	3153817	ExpressionStatement	"REQUIRE_CHAR ( enc , ptr , end )"	155:10:4818:4845	3153695	1	True				
ANR	3153818	CallExpression	"REQUIRE_CHAR ( enc , ptr , end )"		3153695	0					
ANR	3153819	Callee	REQUIRE_CHAR		3153695	0					
ANR	3153820	Identifier	REQUIRE_CHAR		3153695	0					
ANR	3153821	ArgumentList	enc		3153695	1					
ANR	3153822	Argument	enc		3153695	0					
ANR	3153823	Identifier	enc		3153695	0					
ANR	3153824	Argument	ptr		3153695	1					
ANR	3153825	Identifier	ptr		3153695	0					
ANR	3153826	Argument	end		3153695	2					
ANR	3153827	Identifier	end		3153695	0					
ANR	3153828	IfStatement	"if ( ! CHAR_MATCHES ( enc , ptr , ASCII_GT ) )"		3153695	2					
ANR	3153829	Condition	"! CHAR_MATCHES ( enc , ptr , ASCII_GT )"	156:14:4861:4893	3153695	0	True				
ANR	3153830	UnaryOperationExpression	"! CHAR_MATCHES ( enc , ptr , ASCII_GT )"		3153695	0					
ANR	3153831	UnaryOperator	!		3153695	0					
ANR	3153832	CallExpression	"CHAR_MATCHES ( enc , ptr , ASCII_GT )"		3153695	1					
ANR	3153833	Callee	CHAR_MATCHES		3153695	0					
ANR	3153834	Identifier	CHAR_MATCHES		3153695	0					
ANR	3153835	ArgumentList	enc		3153695	1					
ANR	3153836	Argument	enc		3153695	0					
ANR	3153837	Identifier	enc		3153695	0					
ANR	3153838	Argument	ptr		3153695	1					
ANR	3153839	Identifier	ptr		3153695	0					
ANR	3153840	Argument	ASCII_GT		3153695	2					
ANR	3153841	Identifier	ASCII_GT		3153695	0					
ANR	3153842	CompoundStatement		17:49:534:534	3153695	1					
ANR	3153843	ExpressionStatement	* nextTokPtr = ptr	157:12:4910:4927	3153695	0	True				
ANR	3153844	AssignmentExpression	* nextTokPtr = ptr		3153695	0		=			
ANR	3153845	UnaryOperationExpression	* nextTokPtr		3153695	0					
ANR	3153846	UnaryOperator	*		3153695	0					
ANR	3153847	Identifier	nextTokPtr		3153695	1					
ANR	3153848	Identifier	ptr		3153695	1					
ANR	3153849	ReturnStatement	return XML_TOK_INVALID ;	158:12:4941:4963	3153695	1	True				
ANR	3153850	Identifier	XML_TOK_INVALID		3153695	0					
ANR	3153851	ExpressionStatement	* nextTokPtr = ptr + MINBPC ( enc )	160:10:4987:5018	3153695	3	True				
ANR	3153852	AssignmentExpression	* nextTokPtr = ptr + MINBPC ( enc )		3153695	0		=			
ANR	3153853	UnaryOperationExpression	* nextTokPtr		3153695	0					
ANR	3153854	UnaryOperator	*		3153695	0					
ANR	3153855	Identifier	nextTokPtr		3153695	1					
ANR	3153856	AdditiveExpression	ptr + MINBPC ( enc )		3153695	1		+			
ANR	3153857	Identifier	ptr		3153695	0					
ANR	3153858	CallExpression	MINBPC ( enc )		3153695	1					
ANR	3153859	Callee	MINBPC		3153695	0					
ANR	3153860	Identifier	MINBPC		3153695	0					
ANR	3153861	ArgumentList	enc		3153695	1					
ANR	3153862	Argument	enc		3153695	0					
ANR	3153863	Identifier	enc		3153695	0					
ANR	3153864	ReturnStatement	return XML_TOK_COMMENT ;	161:10:5030:5052	3153695	4	True				
ANR	3153865	Identifier	XML_TOK_COMMENT		3153695	0					
ANR	3153866	BreakStatement	break ;	163:8:5072:5077	3153695	10	True				
ANR	3153867	Label	default :	164:6:5085:5092	3153695	11	True				
ANR	3153868	Identifier	default		3153695	0					
ANR	3153869	ExpressionStatement	ptr += MINBPC ( enc )	165:8:5102:5120	3153695	12	True				
ANR	3153870	AssignmentExpression	ptr += MINBPC ( enc )		3153695	0		+=			
ANR	3153871	Identifier	ptr		3153695	0					
ANR	3153872	CallExpression	MINBPC ( enc )		3153695	1					
ANR	3153873	Callee	MINBPC		3153695	0					
ANR	3153874	Identifier	MINBPC		3153695	0					
ANR	3153875	ArgumentList	enc		3153695	1					
ANR	3153876	Argument	enc		3153695	0					
ANR	3153877	Identifier	enc		3153695	0					
ANR	3153878	BreakStatement	break ;	166:8:5130:5135	3153695	13	True				
ANR	3153879	ReturnStatement	return XML_TOK_PARTIAL ;	170:2:5157:5179	3153695	1	True				
ANR	3153880	Identifier	XML_TOK_PARTIAL		3153695	0					
ANR	3153881	ReturnType	static int PTRCALL PREFIX		3153695	1					
ANR	3153882	Identifier	( scanComment )		3153695	2					
ANR	3153883	Identifier	scanComment		3153695	3					
ANR	3153884	ParameterList	"const ENCODING * enc , const char * ptr , const char * end , const char * * nextTokPtr"		3153695	4					
ANR	3153885	Parameter	const ENCODING * enc	138:20:4261:4279	3153695	0	True				
ANR	3153886	ParameterType	const ENCODING *		3153695	0					
ANR	3153887	Identifier	enc		3153695	1					
ANR	3153888	Parameter	const char * ptr	138:41:4282:4296	3153695	1	True				
ANR	3153889	ParameterType	const char *		3153695	0					
ANR	3153890	Identifier	ptr		3153695	1					
ANR	3153891	Parameter	const char * end	139:20:4319:4333	3153695	2	True				
ANR	3153892	ParameterType	const char *		3153695	0					
ANR	3153893	Identifier	end		3153695	1					
ANR	3153894	Parameter	const char * * nextTokPtr	139:37:4336:4358	3153695	3	True				
ANR	3153895	ParameterType	const char * *		3153695	0					
ANR	3153896	Identifier	nextTokPtr		3153695	1					
ANR	3153897	CFGEntryNode	ENTRY		3153695		True				
ANR	3153898	CFGExitNode	EXIT		3153695		True				
ANR	3153899	Symbol	ASCII_MINUS		3153695						
ANR	3153900	Symbol	XML_TOK_INVALID		3153695						
ANR	3153901	Symbol	nextTokPtr		3153695						
ANR	3153902	Symbol	XML_TOK_PARTIAL		3153695						
ANR	3153903	Symbol	BYTE_TYPE		3153695						
ANR	3153904	Symbol	* nextTokPtr		3153695						
ANR	3153905	Symbol	MINBPC		3153695						
ANR	3153906	Symbol	ptr		3153695						
ANR	3153907	Symbol	CHAR_MATCHES		3153695						
ANR	3153908	Symbol	ASCII_GT		3153695						
ANR	3153909	Symbol	end		3153695						
ANR	3153910	Symbol	enc		3153695						
ANR	3153911	Symbol	HAS_CHAR		3153695						
ANR	3153912	Symbol	XML_TOK_COMMENT		3153695						
ANR	3153913	Function	scanDecl	175:0:5230:6397							
ANR	3153914	FunctionDef	"scanDecl (const ENCODING * enc , const char * ptr , const char * end , const char * * nextTokPtr)"		3153913	0					
ANR	3153915	CompoundStatement		178:0:5363:6397	3153913	0					
ANR	3153916	ExpressionStatement	"REQUIRE_CHAR ( enc , ptr , end )"	179:2:5367:5394	3153913	0	True				
ANR	3153917	CallExpression	"REQUIRE_CHAR ( enc , ptr , end )"		3153913	0					
ANR	3153918	Callee	REQUIRE_CHAR		3153913	0					
ANR	3153919	Identifier	REQUIRE_CHAR		3153913	0					
ANR	3153920	ArgumentList	enc		3153913	1					
ANR	3153921	Argument	enc		3153913	0					
ANR	3153922	Identifier	enc		3153913	0					
ANR	3153923	Argument	ptr		3153913	1					
ANR	3153924	Identifier	ptr		3153913	0					
ANR	3153925	Argument	end		3153913	2					
ANR	3153926	Identifier	end		3153913	0					
ANR	3153927	SwitchStatement	"switch ( BYTE_TYPE ( enc , ptr ) )"		3153913	1					
ANR	3153928	Condition	"BYTE_TYPE ( enc , ptr )"	180:10:5406:5424	3153913	0	True				
ANR	3153929	CallExpression	"BYTE_TYPE ( enc , ptr )"		3153913	0					
ANR	3153930	Callee	BYTE_TYPE		3153913	0					
ANR	3153931	Identifier	BYTE_TYPE		3153913	0					
ANR	3153932	ArgumentList	enc		3153913	1					
ANR	3153933	Argument	enc		3153913	0					
ANR	3153934	Identifier	enc		3153913	0					
ANR	3153935	Argument	ptr		3153913	1					
ANR	3153936	Identifier	ptr		3153913	0					
ANR	3153937	CompoundStatement		3:31:63:63	3153913	1					
ANR	3153938	Label	case BT_MINUS :	181:2:5431:5444	3153913	0	True				
ANR	3153939	Identifier	BT_MINUS		3153913	0					
ANR	3153940	ReturnStatement	"return PREFIX ( scanComment ) ( enc , ptr + MINBPC ( enc ) , end , nextTokPtr ) ;"	182:4:5450:5517	3153913	1	True				
ANR	3153941	CallExpression	"PREFIX ( scanComment ) ( enc , ptr + MINBPC ( enc ) , end , nextTokPtr )"		3153913	0					
ANR	3153942	Callee	PREFIX ( scanComment )		3153913	0					
ANR	3153943	CallExpression	PREFIX ( scanComment )		3153913	0					
ANR	3153944	Callee	PREFIX		3153913	0					
ANR	3153945	Identifier	PREFIX		3153913	0					
ANR	3153946	ArgumentList	scanComment		3153913	1					
ANR	3153947	Argument	scanComment		3153913	0					
ANR	3153948	Identifier	scanComment		3153913	0					
ANR	3153949	ArgumentList	enc		3153913	1					
ANR	3153950	Argument	enc		3153913	0					
ANR	3153951	Identifier	enc		3153913	0					
ANR	3153952	Argument	ptr + MINBPC ( enc )		3153913	1					
ANR	3153953	AdditiveExpression	ptr + MINBPC ( enc )		3153913	0		+			
ANR	3153954	Identifier	ptr		3153913	0					
ANR	3153955	CallExpression	MINBPC ( enc )		3153913	1					
ANR	3153956	Callee	MINBPC		3153913	0					
ANR	3153957	Identifier	MINBPC		3153913	0					
ANR	3153958	ArgumentList	enc		3153913	1					
ANR	3153959	Argument	enc		3153913	0					
ANR	3153960	Identifier	enc		3153913	0					
ANR	3153961	Argument	end		3153913	2					
ANR	3153962	Identifier	end		3153913	0					
ANR	3153963	Argument	nextTokPtr		3153913	3					
ANR	3153964	Identifier	nextTokPtr		3153913	0					
ANR	3153965	Label	case BT_LSQB :	183:2:5521:5533	3153913	2	True				
ANR	3153966	Identifier	BT_LSQB		3153913	0					
ANR	3153967	ExpressionStatement	* nextTokPtr = ptr + MINBPC ( enc )	184:4:5539:5570	3153913	3	True				
ANR	3153968	AssignmentExpression	* nextTokPtr = ptr + MINBPC ( enc )		3153913	0		=			
ANR	3153969	UnaryOperationExpression	* nextTokPtr		3153913	0					
ANR	3153970	UnaryOperator	*		3153913	0					
ANR	3153971	Identifier	nextTokPtr		3153913	1					
ANR	3153972	AdditiveExpression	ptr + MINBPC ( enc )		3153913	1		+			
ANR	3153973	Identifier	ptr		3153913	0					
ANR	3153974	CallExpression	MINBPC ( enc )		3153913	1					
ANR	3153975	Callee	MINBPC		3153913	0					
ANR	3153976	Identifier	MINBPC		3153913	0					
ANR	3153977	ArgumentList	enc		3153913	1					
ANR	3153978	Argument	enc		3153913	0					
ANR	3153979	Identifier	enc		3153913	0					
ANR	3153980	ReturnStatement	return XML_TOK_COND_SECT_OPEN ;	185:4:5576:5605	3153913	4	True				
ANR	3153981	Identifier	XML_TOK_COND_SECT_OPEN		3153913	0					
ANR	3153982	Label	case BT_NMSTRT :	186:2:5609:5623	3153913	5	True				
ANR	3153983	Identifier	BT_NMSTRT		3153913	0					
ANR	3153984	Label	case BT_HEX :	187:2:5627:5638	3153913	6	True				
ANR	3153985	Identifier	BT_HEX		3153913	0					
ANR	3153986	ExpressionStatement	ptr += MINBPC ( enc )	188:4:5644:5662	3153913	7	True				
ANR	3153987	AssignmentExpression	ptr += MINBPC ( enc )		3153913	0		+=			
ANR	3153988	Identifier	ptr		3153913	0					
ANR	3153989	CallExpression	MINBPC ( enc )		3153913	1					
ANR	3153990	Callee	MINBPC		3153913	0					
ANR	3153991	Identifier	MINBPC		3153913	0					
ANR	3153992	ArgumentList	enc		3153913	1					
ANR	3153993	Argument	enc		3153913	0					
ANR	3153994	Identifier	enc		3153913	0					
ANR	3153995	BreakStatement	break ;	189:4:5668:5673	3153913	8	True				
ANR	3153996	Label	default :	190:2:5677:5684	3153913	9	True				
ANR	3153997	Identifier	default		3153913	0					
ANR	3153998	ExpressionStatement	* nextTokPtr = ptr	191:4:5690:5707	3153913	10	True				
ANR	3153999	AssignmentExpression	* nextTokPtr = ptr		3153913	0		=			
ANR	3154000	UnaryOperationExpression	* nextTokPtr		3153913	0					
ANR	3154001	UnaryOperator	*		3153913	0					
ANR	3154002	Identifier	nextTokPtr		3153913	1					
ANR	3154003	Identifier	ptr		3153913	1					
ANR	3154004	ReturnStatement	return XML_TOK_INVALID ;	192:4:5713:5735	3153913	11	True				
ANR	3154005	Identifier	XML_TOK_INVALID		3153913	0					
ANR	3154006	WhileStatement	"while ( HAS_CHAR ( enc , ptr , end ) )"		3153913	2					
ANR	3154007	Condition	"HAS_CHAR ( enc , ptr , end )"	194:9:5750:5772	3153913	0	True				
ANR	3154008	CallExpression	"HAS_CHAR ( enc , ptr , end )"		3153913	0					
ANR	3154009	Callee	HAS_CHAR		3153913	0					
ANR	3154010	Identifier	HAS_CHAR		3153913	0					
ANR	3154011	ArgumentList	enc		3153913	1					
ANR	3154012	Argument	enc		3153913	0					
ANR	3154013	Identifier	enc		3153913	0					
ANR	3154014	Argument	ptr		3153913	1					
ANR	3154015	Identifier	ptr		3153913	0					
ANR	3154016	Argument	end		3153913	2					
ANR	3154017	Identifier	end		3153913	0					
ANR	3154018	CompoundStatement		17:34:411:411	3153913	1					
ANR	3154019	SwitchStatement	"switch ( BYTE_TYPE ( enc , ptr ) )"		3153913	0					
ANR	3154020	Condition	"BYTE_TYPE ( enc , ptr )"	195:12:5789:5807	3153913	0	True				
ANR	3154021	CallExpression	"BYTE_TYPE ( enc , ptr )"		3153913	0					
ANR	3154022	Callee	BYTE_TYPE		3153913	0					
ANR	3154023	Identifier	BYTE_TYPE		3153913	0					
ANR	3154024	ArgumentList	enc		3153913	1					
ANR	3154025	Argument	enc		3153913	0					
ANR	3154026	Identifier	enc		3153913	0					
ANR	3154027	Argument	ptr		3153913	1					
ANR	3154028	Identifier	ptr		3153913	0					
ANR	3154029	CompoundStatement		18:33:446:446	3153913	1					
ANR	3154030	Label	case BT_PERCNT :	196:4:5816:5830	3153913	0	True				
ANR	3154031	Identifier	BT_PERCNT		3153913	0					
ANR	3154032	ExpressionStatement	"REQUIRE_CHARS ( enc , ptr , end , 2 )"	197:6:5838:5869	3153913	1	True				
ANR	3154033	CallExpression	"REQUIRE_CHARS ( enc , ptr , end , 2 )"		3153913	0					
ANR	3154034	Callee	REQUIRE_CHARS		3153913	0					
ANR	3154035	Identifier	REQUIRE_CHARS		3153913	0					
ANR	3154036	ArgumentList	enc		3153913	1					
ANR	3154037	Argument	enc		3153913	0					
ANR	3154038	Identifier	enc		3153913	0					
ANR	3154039	Argument	ptr		3153913	1					
ANR	3154040	Identifier	ptr		3153913	0					
ANR	3154041	Argument	end		3153913	2					
ANR	3154042	Identifier	end		3153913	0					
ANR	3154043	Argument	2		3153913	3					
ANR	3154044	PrimaryExpression	2		3153913	0					
ANR	3154045	SwitchStatement	"switch ( BYTE_TYPE ( enc , ptr + MINBPC ( enc ) ) )"		3153913	2					
ANR	3154046	Condition	"BYTE_TYPE ( enc , ptr + MINBPC ( enc ) )"	199:14:5935:5967	3153913	0	True				
ANR	3154047	CallExpression	"BYTE_TYPE ( enc , ptr + MINBPC ( enc ) )"		3153913	0					
ANR	3154048	Callee	BYTE_TYPE		3153913	0					
ANR	3154049	Identifier	BYTE_TYPE		3153913	0					
ANR	3154050	ArgumentList	enc		3153913	1					
ANR	3154051	Argument	enc		3153913	0					
ANR	3154052	Identifier	enc		3153913	0					
ANR	3154053	Argument	ptr + MINBPC ( enc )		3153913	1					
ANR	3154054	AdditiveExpression	ptr + MINBPC ( enc )		3153913	0		+			
ANR	3154055	Identifier	ptr		3153913	0					
ANR	3154056	CallExpression	MINBPC ( enc )		3153913	1					
ANR	3154057	Callee	MINBPC		3153913	0					
ANR	3154058	Identifier	MINBPC		3153913	0					
ANR	3154059	ArgumentList	enc		3153913	1					
ANR	3154060	Argument	enc		3153913	0					
ANR	3154061	Identifier	enc		3153913	0					
ANR	3154062	CompoundStatement		22:49:606:606	3153913	1					
ANR	3154063	Label	case BT_S :	200:6:5978:5987	3153913	0	True				
ANR	3154064	Identifier	BT_S		3153913	0					
ANR	3154065	Label	case BT_CR :	200:17:5989:5999	3153913	1	True				
ANR	3154066	Identifier	BT_CR		3153913	0					
ANR	3154067	Label	case BT_LF :	200:29:6001:6011	3153913	2	True				
ANR	3154068	Identifier	BT_LF		3153913	0					
ANR	3154069	Label	case BT_PERCNT :	200:41:6013:6027	3153913	3	True				
ANR	3154070	Identifier	BT_PERCNT		3153913	0					
ANR	3154071	ExpressionStatement	* nextTokPtr = ptr	201:8:6037:6054	3153913	4	True				
ANR	3154072	AssignmentExpression	* nextTokPtr = ptr		3153913	0		=			
ANR	3154073	UnaryOperationExpression	* nextTokPtr		3153913	0					
ANR	3154074	UnaryOperator	*		3153913	0					
ANR	3154075	Identifier	nextTokPtr		3153913	1					
ANR	3154076	Identifier	ptr		3153913	1					
ANR	3154077	ReturnStatement	return XML_TOK_INVALID ;	202:8:6064:6086	3153913	5	True				
ANR	3154078	Identifier	XML_TOK_INVALID		3153913	0					
ANR	3154079	Label	case BT_S :	205:4:6125:6134	3153913	3	True				
ANR	3154080	Identifier	BT_S		3153913	0					
ANR	3154081	Label	case BT_CR :	205:15:6136:6146	3153913	4	True				
ANR	3154082	Identifier	BT_CR		3153913	0					
ANR	3154083	Label	case BT_LF :	205:27:6148:6158	3153913	5	True				
ANR	3154084	Identifier	BT_LF		3153913	0					
ANR	3154085	ExpressionStatement	* nextTokPtr = ptr	206:6:6166:6183	3153913	6	True				
ANR	3154086	AssignmentExpression	* nextTokPtr = ptr		3153913	0		=			
ANR	3154087	UnaryOperationExpression	* nextTokPtr		3153913	0					
ANR	3154088	UnaryOperator	*		3153913	0					
ANR	3154089	Identifier	nextTokPtr		3153913	1					
ANR	3154090	Identifier	ptr		3153913	1					
ANR	3154091	ReturnStatement	return XML_TOK_DECL_OPEN ;	207:6:6191:6215	3153913	7	True				
ANR	3154092	Identifier	XML_TOK_DECL_OPEN		3153913	0					
ANR	3154093	Label	case BT_NMSTRT :	208:4:6221:6235	3153913	8	True				
ANR	3154094	Identifier	BT_NMSTRT		3153913	0					
ANR	3154095	Label	case BT_HEX :	209:4:6241:6252	3153913	9	True				
ANR	3154096	Identifier	BT_HEX		3153913	0					
ANR	3154097	ExpressionStatement	ptr += MINBPC ( enc )	210:6:6260:6278	3153913	10	True				
ANR	3154098	AssignmentExpression	ptr += MINBPC ( enc )		3153913	0		+=			
ANR	3154099	Identifier	ptr		3153913	0					
ANR	3154100	CallExpression	MINBPC ( enc )		3153913	1					
ANR	3154101	Callee	MINBPC		3153913	0					
ANR	3154102	Identifier	MINBPC		3153913	0					
ANR	3154103	ArgumentList	enc		3153913	1					
ANR	3154104	Argument	enc		3153913	0					
ANR	3154105	Identifier	enc		3153913	0					
ANR	3154106	BreakStatement	break ;	211:6:6286:6291	3153913	11	True				
ANR	3154107	Label	default :	212:4:6297:6304	3153913	12	True				
ANR	3154108	Identifier	default		3153913	0					
ANR	3154109	ExpressionStatement	* nextTokPtr = ptr	213:6:6312:6329	3153913	13	True				
ANR	3154110	AssignmentExpression	* nextTokPtr = ptr		3153913	0		=			
ANR	3154111	UnaryOperationExpression	* nextTokPtr		3153913	0					
ANR	3154112	UnaryOperator	*		3153913	0					
ANR	3154113	Identifier	nextTokPtr		3153913	1					
ANR	3154114	Identifier	ptr		3153913	1					
ANR	3154115	ReturnStatement	return XML_TOK_INVALID ;	214:6:6337:6359	3153913	14	True				
ANR	3154116	Identifier	XML_TOK_INVALID		3153913	0					
ANR	3154117	ReturnStatement	return XML_TOK_PARTIAL ;	217:2:6373:6395	3153913	3	True				
ANR	3154118	Identifier	XML_TOK_PARTIAL		3153913	0					
ANR	3154119	ReturnType	static int PTRCALL PREFIX		3153913	1					
ANR	3154120	Identifier	( scanDecl )		3153913	2					
ANR	3154121	Identifier	scanDecl		3153913	3					
ANR	3154122	ParameterList	"const ENCODING * enc , const char * ptr , const char * end , const char * * nextTokPtr"		3153913	4					
ANR	3154123	Parameter	const ENCODING * enc	176:17:5266:5284	3153913	0	True				
ANR	3154124	ParameterType	const ENCODING *		3153913	0					
ANR	3154125	Identifier	enc		3153913	1					
ANR	3154126	Parameter	const char * ptr	176:38:5287:5301	3153913	1	True				
ANR	3154127	ParameterType	const char *		3153913	0					
ANR	3154128	Identifier	ptr		3153913	1					
ANR	3154129	Parameter	const char * end	177:17:5321:5335	3153913	2	True				
ANR	3154130	ParameterType	const char *		3153913	0					
ANR	3154131	Identifier	end		3153913	1					
ANR	3154132	Parameter	const char * * nextTokPtr	177:34:5338:5360	3153913	3	True				
ANR	3154133	ParameterType	const char * *		3153913	0					
ANR	3154134	Identifier	nextTokPtr		3153913	1					
ANR	3154135	CFGEntryNode	ENTRY		3153913		True				
ANR	3154136	CFGExitNode	EXIT		3153913		True				
ANR	3154137	Symbol	XML_TOK_INVALID		3153913						
ANR	3154138	Symbol	nextTokPtr		3153913						
ANR	3154139	Symbol	XML_TOK_COND_SECT_OPEN		3153913						
ANR	3154140	Symbol	XML_TOK_PARTIAL		3153913						
ANR	3154141	Symbol	BYTE_TYPE		3153913						
ANR	3154142	Symbol	* nextTokPtr		3153913						
ANR	3154143	Symbol	MINBPC		3153913						
ANR	3154144	Symbol	ptr		3153913						
ANR	3154145	Symbol	scanComment		3153913						
ANR	3154146	Symbol	PREFIX		3153913						
ANR	3154147	Symbol	end		3153913						
ANR	3154148	Symbol	enc		3153913						
ANR	3154149	Symbol	HAS_CHAR		3153913						
ANR	3154150	Symbol	XML_TOK_DECL_OPEN		3153913						
ANR	3154151	Function	checkPiTarget	220:0:6400:7150							
ANR	3154152	FunctionDef	"checkPiTarget (const ENCODING * UNUSED_P ( enc ) , const char * ptr , const char * end , int * tokPtr)"		3154151	0					
ANR	3154153	CompoundStatement		223:0:6541:7150	3154151	0					
ANR	3154154	IdentifierDeclStatement	int upper = 0 ;	224:2:6545:6558	3154151	0	True				
ANR	3154155	IdentifierDecl	upper = 0		3154151	0					
ANR	3154156	IdentifierDeclType	int		3154151	0					
ANR	3154157	Identifier	upper		3154151	1					
ANR	3154158	AssignmentExpression	upper = 0		3154151	2		=			
ANR	3154159	Identifier	upper		3154151	0					
ANR	3154160	PrimaryExpression	0		3154151	1					
ANR	3154161	ExpressionStatement	* tokPtr = XML_TOK_PI	225:2:6562:6582	3154151	1	True				
ANR	3154162	AssignmentExpression	* tokPtr = XML_TOK_PI		3154151	0		=			
ANR	3154163	UnaryOperationExpression	* tokPtr		3154151	0					
ANR	3154164	UnaryOperator	*		3154151	0					
ANR	3154165	Identifier	tokPtr		3154151	1					
ANR	3154166	Identifier	XML_TOK_PI		3154151	1					
ANR	3154167	IfStatement	if ( end - ptr != MINBPC ( enc ) * 3 )		3154151	2					
ANR	3154168	Condition	end - ptr != MINBPC ( enc ) * 3	226:6:6590:6615	3154151	0	True				
ANR	3154169	EqualityExpression	end - ptr != MINBPC ( enc ) * 3		3154151	0		!=			
ANR	3154170	AdditiveExpression	end - ptr		3154151	0		-			
ANR	3154171	Identifier	end		3154151	0					
ANR	3154172	Identifier	ptr		3154151	1					
ANR	3154173	MultiplicativeExpression	MINBPC ( enc ) * 3		3154151	1		*			
ANR	3154174	CallExpression	MINBPC ( enc )		3154151	0					
ANR	3154175	Callee	MINBPC		3154151	0					
ANR	3154176	Identifier	MINBPC		3154151	0					
ANR	3154177	ArgumentList	enc		3154151	1					
ANR	3154178	Argument	enc		3154151	0					
ANR	3154179	Identifier	enc		3154151	0					
ANR	3154180	PrimaryExpression	3		3154151	1					
ANR	3154181	ReturnStatement	return 1 ;	227:4:6622:6630	3154151	1	True				
ANR	3154182	PrimaryExpression	1		3154151	0					
ANR	3154183	SwitchStatement	"switch ( BYTE_TO_ASCII ( enc , ptr ) )"		3154151	3					
ANR	3154184	Condition	"BYTE_TO_ASCII ( enc , ptr )"	228:10:6642:6664	3154151	0	True				
ANR	3154185	CallExpression	"BYTE_TO_ASCII ( enc , ptr )"		3154151	0					
ANR	3154186	Callee	BYTE_TO_ASCII		3154151	0					
ANR	3154187	Identifier	BYTE_TO_ASCII		3154151	0					
ANR	3154188	ArgumentList	enc		3154151	1					
ANR	3154189	Argument	enc		3154151	0					
ANR	3154190	Identifier	enc		3154151	0					
ANR	3154191	Argument	ptr		3154151	1					
ANR	3154192	Identifier	ptr		3154151	0					
ANR	3154193	CompoundStatement		6:35:125:125	3154151	1					
ANR	3154194	Label	case ASCII_x :	229:2:6671:6683	3154151	0	True				
ANR	3154195	Identifier	ASCII_x		3154151	0					
ANR	3154196	BreakStatement	break ;	230:4:6689:6694	3154151	1	True				
ANR	3154197	Label	case ASCII_X :	231:2:6698:6710	3154151	2	True				
ANR	3154198	Identifier	ASCII_X		3154151	0					
ANR	3154199	ExpressionStatement	upper = 1	232:4:6716:6725	3154151	3	True				
ANR	3154200	AssignmentExpression	upper = 1		3154151	0		=			
ANR	3154201	Identifier	upper		3154151	0					
ANR	3154202	PrimaryExpression	1		3154151	1					
ANR	3154203	BreakStatement	break ;	233:4:6731:6736	3154151	4	True				
ANR	3154204	Label	default :	234:2:6740:6747	3154151	5	True				
ANR	3154205	Identifier	default		3154151	0					
ANR	3154206	ReturnStatement	return 1 ;	235:4:6753:6761	3154151	6	True				
ANR	3154207	PrimaryExpression	1		3154151	0					
ANR	3154208	ExpressionStatement	ptr += MINBPC ( enc )	237:2:6769:6787	3154151	4	True				
ANR	3154209	AssignmentExpression	ptr += MINBPC ( enc )		3154151	0		+=			
ANR	3154210	Identifier	ptr		3154151	0					
ANR	3154211	CallExpression	MINBPC ( enc )		3154151	1					
ANR	3154212	Callee	MINBPC		3154151	0					
ANR	3154213	Identifier	MINBPC		3154151	0					
ANR	3154214	ArgumentList	enc		3154151	1					
ANR	3154215	Argument	enc		3154151	0					
ANR	3154216	Identifier	enc		3154151	0					
ANR	3154217	SwitchStatement	"switch ( BYTE_TO_ASCII ( enc , ptr ) )"		3154151	5					
ANR	3154218	Condition	"BYTE_TO_ASCII ( enc , ptr )"	238:10:6799:6821	3154151	0	True				
ANR	3154219	CallExpression	"BYTE_TO_ASCII ( enc , ptr )"		3154151	0					
ANR	3154220	Callee	BYTE_TO_ASCII		3154151	0					
ANR	3154221	Identifier	BYTE_TO_ASCII		3154151	0					
ANR	3154222	ArgumentList	enc		3154151	1					
ANR	3154223	Argument	enc		3154151	0					
ANR	3154224	Identifier	enc		3154151	0					
ANR	3154225	Argument	ptr		3154151	1					
ANR	3154226	Identifier	ptr		3154151	0					
ANR	3154227	CompoundStatement		16:35:282:282	3154151	1					
ANR	3154228	Label	case ASCII_m :	239:2:6828:6840	3154151	0	True				
ANR	3154229	Identifier	ASCII_m		3154151	0					
ANR	3154230	BreakStatement	break ;	240:4:6846:6851	3154151	1	True				
ANR	3154231	Label	case ASCII_M :	241:2:6855:6867	3154151	2	True				
ANR	3154232	Identifier	ASCII_M		3154151	0					
ANR	3154233	ExpressionStatement	upper = 1	242:4:6873:6882	3154151	3	True				
ANR	3154234	AssignmentExpression	upper = 1		3154151	0		=			
ANR	3154235	Identifier	upper		3154151	0					
ANR	3154236	PrimaryExpression	1		3154151	1					
ANR	3154237	BreakStatement	break ;	243:4:6888:6893	3154151	4	True				
ANR	3154238	Label	default :	244:2:6897:6904	3154151	5	True				
ANR	3154239	Identifier	default		3154151	0					
ANR	3154240	ReturnStatement	return 1 ;	245:4:6910:6918	3154151	6	True				
ANR	3154241	PrimaryExpression	1		3154151	0					
ANR	3154242	ExpressionStatement	ptr += MINBPC ( enc )	247:2:6926:6944	3154151	6	True				
ANR	3154243	AssignmentExpression	ptr += MINBPC ( enc )		3154151	0		+=			
ANR	3154244	Identifier	ptr		3154151	0					
ANR	3154245	CallExpression	MINBPC ( enc )		3154151	1					
ANR	3154246	Callee	MINBPC		3154151	0					
ANR	3154247	Identifier	MINBPC		3154151	0					
ANR	3154248	ArgumentList	enc		3154151	1					
ANR	3154249	Argument	enc		3154151	0					
ANR	3154250	Identifier	enc		3154151	0					
ANR	3154251	SwitchStatement	"switch ( BYTE_TO_ASCII ( enc , ptr ) )"		3154151	7					
ANR	3154252	Condition	"BYTE_TO_ASCII ( enc , ptr )"	248:10:6956:6978	3154151	0	True				
ANR	3154253	CallExpression	"BYTE_TO_ASCII ( enc , ptr )"		3154151	0					
ANR	3154254	Callee	BYTE_TO_ASCII		3154151	0					
ANR	3154255	Identifier	BYTE_TO_ASCII		3154151	0					
ANR	3154256	ArgumentList	enc		3154151	1					
ANR	3154257	Argument	enc		3154151	0					
ANR	3154258	Identifier	enc		3154151	0					
ANR	3154259	Argument	ptr		3154151	1					
ANR	3154260	Identifier	ptr		3154151	0					
ANR	3154261	CompoundStatement		26:35:439:439	3154151	1					
ANR	3154262	Label	case ASCII_l :	249:2:6985:6997	3154151	0	True				
ANR	3154263	Identifier	ASCII_l		3154151	0					
ANR	3154264	BreakStatement	break ;	250:4:7003:7008	3154151	1	True				
ANR	3154265	Label	case ASCII_L :	251:2:7012:7024	3154151	2	True				
ANR	3154266	Identifier	ASCII_L		3154151	0					
ANR	3154267	ExpressionStatement	upper = 1	252:4:7030:7039	3154151	3	True				
ANR	3154268	AssignmentExpression	upper = 1		3154151	0		=			
ANR	3154269	Identifier	upper		3154151	0					
ANR	3154270	PrimaryExpression	1		3154151	1					
ANR	3154271	BreakStatement	break ;	253:4:7045:7050	3154151	4	True				
ANR	3154272	Label	default :	254:2:7054:7061	3154151	5	True				
ANR	3154273	Identifier	default		3154151	0					
ANR	3154274	ReturnStatement	return 1 ;	255:4:7067:7075	3154151	6	True				
ANR	3154275	PrimaryExpression	1		3154151	0					
ANR	3154276	IfStatement	if ( upper )		3154151	8					
ANR	3154277	Condition	upper	257:6:7087:7091	3154151	0	True				
ANR	3154278	Identifier	upper		3154151	0					
ANR	3154279	ReturnStatement	return 0 ;	258:4:7098:7106	3154151	1	True				
ANR	3154280	PrimaryExpression	0		3154151	0					
ANR	3154281	ExpressionStatement	* tokPtr = XML_TOK_XML_DECL	259:2:7110:7136	3154151	9	True				
ANR	3154282	AssignmentExpression	* tokPtr = XML_TOK_XML_DECL		3154151	0		=			
ANR	3154283	UnaryOperationExpression	* tokPtr		3154151	0					
ANR	3154284	UnaryOperator	*		3154151	0					
ANR	3154285	Identifier	tokPtr		3154151	1					
ANR	3154286	Identifier	XML_TOK_XML_DECL		3154151	1					
ANR	3154287	ReturnStatement	return 1 ;	260:2:7140:7148	3154151	10	True				
ANR	3154288	PrimaryExpression	1		3154151	0					
ANR	3154289	ReturnType	static int PTRCALL PREFIX		3154151	1					
ANR	3154290	Identifier	( checkPiTarget )		3154151	2					
ANR	3154291	Identifier	checkPiTarget		3154151	3					
ANR	3154292	ParameterList	"const ENCODING * UNUSED_P ( enc ) , const char * ptr , const char * end , int * tokPtr"		3154151	4					
ANR	3154293	Parameter	const ENCODING * UNUSED_P ( enc )	221:22:6441:6469	3154151	0	True				
ANR	3154294	ParameterType	const ENCODING * ( enc )		3154151	0					
ANR	3154295	Identifier	UNUSED_P		3154151	1					
ANR	3154296	Parameter	const char * ptr	221:53:6472:6486	3154151	1	True				
ANR	3154297	ParameterType	const char *		3154151	0					
ANR	3154298	Identifier	ptr		3154151	1					
ANR	3154299	Parameter	const char * end	222:22:6511:6525	3154151	2	True				
ANR	3154300	ParameterType	const char *		3154151	0					
ANR	3154301	Identifier	end		3154151	1					
ANR	3154302	Parameter	int * tokPtr	222:39:6528:6538	3154151	3	True				
ANR	3154303	ParameterType	int *		3154151	0					
ANR	3154304	Identifier	tokPtr		3154151	1					
ANR	3154305	CFGEntryNode	ENTRY		3154151		True				
ANR	3154306	CFGExitNode	EXIT		3154151		True				
ANR	3154307	Symbol	UNUSED_P		3154151						
ANR	3154308	Symbol	XML_TOK_PI		3154151						
ANR	3154309	Symbol	upper		3154151						
ANR	3154310	Symbol	end		3154151						
ANR	3154311	Symbol	XML_TOK_XML_DECL		3154151						
ANR	3154312	Symbol	enc		3154151						
ANR	3154313	Symbol	* tokPtr		3154151						
ANR	3154314	Symbol	MINBPC		3154151						
ANR	3154315	Symbol	tokPtr		3154151						
ANR	3154316	Symbol	ptr		3154151						
ANR	3154317	Symbol	BYTE_TO_ASCII		3154151						
ANR	3154318	Function	scanPi	265:0:7199:8779							
ANR	3154319	FunctionDef	"scanPi (const ENCODING * enc , const char * ptr , const char * end , const char * * nextTokPtr)"		3154318	0					
ANR	3154320	CompoundStatement		268:0:7328:8779	3154318	0					
ANR	3154321	IdentifierDeclStatement	int tok ;	269:2:7332:7339	3154318	0	True				
ANR	3154322	IdentifierDecl	tok		3154318	0					
ANR	3154323	IdentifierDeclType	int		3154318	0					
ANR	3154324	Identifier	tok		3154318	1					
ANR	3154325	IdentifierDeclStatement	const char * target = ptr ;	270:2:7343:7367	3154318	1	True				
ANR	3154326	IdentifierDecl	* target = ptr		3154318	0					
ANR	3154327	IdentifierDeclType	const char *		3154318	0					
ANR	3154328	Identifier	target		3154318	1					
ANR	3154329	AssignmentExpression	* target = ptr		3154318	2		=			
ANR	3154330	Identifier	ptr		3154318	0					
ANR	3154331	Identifier	ptr		3154318	1					
ANR	3154332	ExpressionStatement	"REQUIRE_CHAR ( enc , ptr , end )"	271:2:7371:7398	3154318	2	True				
ANR	3154333	CallExpression	"REQUIRE_CHAR ( enc , ptr , end )"		3154318	0					
ANR	3154334	Callee	REQUIRE_CHAR		3154318	0					
ANR	3154335	Identifier	REQUIRE_CHAR		3154318	0					
ANR	3154336	ArgumentList	enc		3154318	1					
ANR	3154337	Argument	enc		3154318	0					
ANR	3154338	Identifier	enc		3154318	0					
ANR	3154339	Argument	ptr		3154318	1					
ANR	3154340	Identifier	ptr		3154318	0					
ANR	3154341	Argument	end		3154318	2					
ANR	3154342	Identifier	end		3154318	0					
ANR	3154343	SwitchStatement	"switch ( BYTE_TYPE ( enc , ptr ) )"		3154318	3					
ANR	3154344	Condition	"BYTE_TYPE ( enc , ptr )"	272:10:7410:7428	3154318	0	True				
ANR	3154345	CallExpression	"BYTE_TYPE ( enc , ptr )"		3154318	0					
ANR	3154346	Callee	BYTE_TYPE		3154318	0					
ANR	3154347	Identifier	BYTE_TYPE		3154318	0					
ANR	3154348	ArgumentList	enc		3154318	1					
ANR	3154349	Argument	enc		3154318	0					
ANR	3154350	Identifier	enc		3154318	0					
ANR	3154351	Argument	ptr		3154318	1					
ANR	3154352	Identifier	ptr		3154318	0					
ANR	3154353	CompoundStatement		5:31:102:102	3154318	1					
ANR	3154354	Statement	CHECK_NMSTRT_CASES	273:2:7435:7452	3154318	0	True				
ANR	3154355	Statement	(	273:20:7453:7453	3154318	1	True				
ANR	3154356	Statement	enc	273:21:7454:7456	3154318	2	True				
ANR	3154357	Statement	","	273:24:7457:7457	3154318	3	True				
ANR	3154358	Statement	ptr	273:26:7459:7461	3154318	4	True				
ANR	3154359	Statement	","	273:29:7462:7462	3154318	5	True				
ANR	3154360	Statement	end	273:31:7464:7466	3154318	6	True				
ANR	3154361	Statement	","	273:34:7467:7467	3154318	7	True				
ANR	3154362	Statement	nextTokPtr	273:36:7469:7478	3154318	8	True				
ANR	3154363	Statement	)	273:46:7479:7479	3154318	9	True				
ANR	3154364	Label	default :	274:2:7483:7490	3154318	10	True				
ANR	3154365	Identifier	default		3154318	0					
ANR	3154366	ExpressionStatement	* nextTokPtr = ptr	275:4:7496:7513	3154318	11	True				
ANR	3154367	AssignmentExpression	* nextTokPtr = ptr		3154318	0		=			
ANR	3154368	UnaryOperationExpression	* nextTokPtr		3154318	0					
ANR	3154369	UnaryOperator	*		3154318	0					
ANR	3154370	Identifier	nextTokPtr		3154318	1					
ANR	3154371	Identifier	ptr		3154318	1					
ANR	3154372	ReturnStatement	return XML_TOK_INVALID ;	276:4:7519:7541	3154318	12	True				
ANR	3154373	Identifier	XML_TOK_INVALID		3154318	0					
ANR	3154374	WhileStatement	"while ( HAS_CHAR ( enc , ptr , end ) )"		3154318	4					
ANR	3154375	Condition	"HAS_CHAR ( enc , ptr , end )"	278:9:7556:7578	3154318	0	True				
ANR	3154376	CallExpression	"HAS_CHAR ( enc , ptr , end )"		3154318	0					
ANR	3154377	Callee	HAS_CHAR		3154318	0					
ANR	3154378	Identifier	HAS_CHAR		3154318	0					
ANR	3154379	ArgumentList	enc		3154318	1					
ANR	3154380	Argument	enc		3154318	0					
ANR	3154381	Identifier	enc		3154318	0					
ANR	3154382	Argument	ptr		3154318	1					
ANR	3154383	Identifier	ptr		3154318	0					
ANR	3154384	Argument	end		3154318	2					
ANR	3154385	Identifier	end		3154318	0					
ANR	3154386	CompoundStatement		11:34:252:252	3154318	1					
ANR	3154387	SwitchStatement	"switch ( BYTE_TYPE ( enc , ptr ) )"		3154318	0					
ANR	3154388	Condition	"BYTE_TYPE ( enc , ptr )"	279:12:7595:7613	3154318	0	True				
ANR	3154389	CallExpression	"BYTE_TYPE ( enc , ptr )"		3154318	0					
ANR	3154390	Callee	BYTE_TYPE		3154318	0					
ANR	3154391	Identifier	BYTE_TYPE		3154318	0					
ANR	3154392	ArgumentList	enc		3154318	1					
ANR	3154393	Argument	enc		3154318	0					
ANR	3154394	Identifier	enc		3154318	0					
ANR	3154395	Argument	ptr		3154318	1					
ANR	3154396	Identifier	ptr		3154318	0					
ANR	3154397	CompoundStatement		12:33:287:287	3154318	1					
ANR	3154398	Statement	CHECK_NAME_CASES	280:4:7622:7637	3154318	0	True				
ANR	3154399	Statement	(	280:20:7638:7638	3154318	1	True				
ANR	3154400	Statement	enc	280:21:7639:7641	3154318	2	True				
ANR	3154401	Statement	","	280:24:7642:7642	3154318	3	True				
ANR	3154402	Statement	ptr	280:26:7644:7646	3154318	4	True				
ANR	3154403	Statement	","	280:29:7647:7647	3154318	5	True				
ANR	3154404	Statement	end	280:31:7649:7651	3154318	6	True				
ANR	3154405	Statement	","	280:34:7652:7652	3154318	7	True				
ANR	3154406	Statement	nextTokPtr	280:36:7654:7663	3154318	8	True				
ANR	3154407	Statement	)	280:46:7664:7664	3154318	9	True				
ANR	3154408	Label	case BT_S :	281:4:7670:7679	3154318	10	True				
ANR	3154409	Identifier	BT_S		3154318	0					
ANR	3154410	Label	case BT_CR :	281:15:7681:7691	3154318	11	True				
ANR	3154411	Identifier	BT_CR		3154318	0					
ANR	3154412	Label	case BT_LF :	281:27:7693:7703	3154318	12	True				
ANR	3154413	Identifier	BT_LF		3154318	0					
ANR	3154414	IfStatement	"if ( ! PREFIX ( checkPiTarget ) ( enc , target , ptr , & tok ) )"		3154318	13					
ANR	3154415	Condition	"! PREFIX ( checkPiTarget ) ( enc , target , ptr , & tok )"	282:10:7715:7760	3154318	0	True				
ANR	3154416	UnaryOperationExpression	"! PREFIX ( checkPiTarget ) ( enc , target , ptr , & tok )"		3154318	0					
ANR	3154417	UnaryOperator	!		3154318	0					
ANR	3154418	CallExpression	"PREFIX ( checkPiTarget ) ( enc , target , ptr , & tok )"		3154318	1					
ANR	3154419	Callee	PREFIX ( checkPiTarget )		3154318	0					
ANR	3154420	CallExpression	PREFIX ( checkPiTarget )		3154318	0					
ANR	3154421	Callee	PREFIX		3154318	0					
ANR	3154422	Identifier	PREFIX		3154318	0					
ANR	3154423	ArgumentList	checkPiTarget		3154318	1					
ANR	3154424	Argument	checkPiTarget		3154318	0					
ANR	3154425	Identifier	checkPiTarget		3154318	0					
ANR	3154426	ArgumentList	enc		3154318	1					
ANR	3154427	Argument	enc		3154318	0					
ANR	3154428	Identifier	enc		3154318	0					
ANR	3154429	Argument	target		3154318	1					
ANR	3154430	Identifier	target		3154318	0					
ANR	3154431	Argument	ptr		3154318	2					
ANR	3154432	Identifier	ptr		3154318	0					
ANR	3154433	Argument	& tok		3154318	3					
ANR	3154434	UnaryOperationExpression	& tok		3154318	0					
ANR	3154435	UnaryOperator	&		3154318	0					
ANR	3154436	Identifier	tok		3154318	1					
ANR	3154437	CompoundStatement		15:58:434:434	3154318	1					
ANR	3154438	ExpressionStatement	* nextTokPtr = ptr	283:8:7773:7790	3154318	0	True				
ANR	3154439	AssignmentExpression	* nextTokPtr = ptr		3154318	0		=			
ANR	3154440	UnaryOperationExpression	* nextTokPtr		3154318	0					
ANR	3154441	UnaryOperator	*		3154318	0					
ANR	3154442	Identifier	nextTokPtr		3154318	1					
ANR	3154443	Identifier	ptr		3154318	1					
ANR	3154444	ReturnStatement	return XML_TOK_INVALID ;	284:8:7800:7822	3154318	1	True				
ANR	3154445	Identifier	XML_TOK_INVALID		3154318	0					
ANR	3154446	ExpressionStatement	ptr += MINBPC ( enc )	286:6:7838:7856	3154318	14	True				
ANR	3154447	AssignmentExpression	ptr += MINBPC ( enc )		3154318	0		+=			
ANR	3154448	Identifier	ptr		3154318	0					
ANR	3154449	CallExpression	MINBPC ( enc )		3154318	1					
ANR	3154450	Callee	MINBPC		3154318	0					
ANR	3154451	Identifier	MINBPC		3154318	0					
ANR	3154452	ArgumentList	enc		3154318	1					
ANR	3154453	Argument	enc		3154318	0					
ANR	3154454	Identifier	enc		3154318	0					
ANR	3154455	WhileStatement	"while ( HAS_CHAR ( enc , ptr , end ) )"		3154318	15					
ANR	3154456	Condition	"HAS_CHAR ( enc , ptr , end )"	287:13:7871:7893	3154318	0	True				
ANR	3154457	CallExpression	"HAS_CHAR ( enc , ptr , end )"		3154318	0					
ANR	3154458	Callee	HAS_CHAR		3154318	0					
ANR	3154459	Identifier	HAS_CHAR		3154318	0					
ANR	3154460	ArgumentList	enc		3154318	1					
ANR	3154461	Argument	enc		3154318	0					
ANR	3154462	Identifier	enc		3154318	0					
ANR	3154463	Argument	ptr		3154318	1					
ANR	3154464	Identifier	ptr		3154318	0					
ANR	3154465	Argument	end		3154318	2					
ANR	3154466	Identifier	end		3154318	0					
ANR	3154467	CompoundStatement		20:38:567:567	3154318	1					
ANR	3154468	SwitchStatement	"switch ( BYTE_TYPE ( enc , ptr ) )"		3154318	0					
ANR	3154469	Condition	"BYTE_TYPE ( enc , ptr )"	288:16:7914:7932	3154318	0	True				
ANR	3154470	CallExpression	"BYTE_TYPE ( enc , ptr )"		3154318	0					
ANR	3154471	Callee	BYTE_TYPE		3154318	0					
ANR	3154472	Identifier	BYTE_TYPE		3154318	0					
ANR	3154473	ArgumentList	enc		3154318	1					
ANR	3154474	Argument	enc		3154318	0					
ANR	3154475	Identifier	enc		3154318	0					
ANR	3154476	Argument	ptr		3154318	1					
ANR	3154477	Identifier	ptr		3154318	0					
ANR	3154478	CompoundStatement		21:37:606:606	3154318	1					
ANR	3154479	Statement	INVALID_CASES	289:8:7945:7957	3154318	0	True				
ANR	3154480	Statement	(	289:21:7958:7958	3154318	1	True				
ANR	3154481	Statement	ptr	289:22:7959:7961	3154318	2	True				
ANR	3154482	Statement	","	289:25:7962:7962	3154318	3	True				
ANR	3154483	Statement	nextTokPtr	289:27:7964:7973	3154318	4	True				
ANR	3154484	Statement	)	289:37:7974:7974	3154318	5	True				
ANR	3154485	Label	case BT_QUEST :	290:8:7984:7997	3154318	6	True				
ANR	3154486	Identifier	BT_QUEST		3154318	0					
ANR	3154487	ExpressionStatement	ptr += MINBPC ( enc )	291:10:8009:8027	3154318	7	True				
ANR	3154488	AssignmentExpression	ptr += MINBPC ( enc )		3154318	0		+=			
ANR	3154489	Identifier	ptr		3154318	0					
ANR	3154490	CallExpression	MINBPC ( enc )		3154318	1					
ANR	3154491	Callee	MINBPC		3154318	0					
ANR	3154492	Identifier	MINBPC		3154318	0					
ANR	3154493	ArgumentList	enc		3154318	1					
ANR	3154494	Argument	enc		3154318	0					
ANR	3154495	Identifier	enc		3154318	0					
ANR	3154496	ExpressionStatement	"REQUIRE_CHAR ( enc , ptr , end )"	292:10:8039:8066	3154318	8	True				
ANR	3154497	CallExpression	"REQUIRE_CHAR ( enc , ptr , end )"		3154318	0					
ANR	3154498	Callee	REQUIRE_CHAR		3154318	0					
ANR	3154499	Identifier	REQUIRE_CHAR		3154318	0					
ANR	3154500	ArgumentList	enc		3154318	1					
ANR	3154501	Argument	enc		3154318	0					
ANR	3154502	Identifier	enc		3154318	0					
ANR	3154503	Argument	ptr		3154318	1					
ANR	3154504	Identifier	ptr		3154318	0					
ANR	3154505	Argument	end		3154318	2					
ANR	3154506	Identifier	end		3154318	0					
ANR	3154507	IfStatement	"if ( CHAR_MATCHES ( enc , ptr , ASCII_GT ) )"		3154318	9					
ANR	3154508	Condition	"CHAR_MATCHES ( enc , ptr , ASCII_GT )"	293:14:8082:8113	3154318	0	True				
ANR	3154509	CallExpression	"CHAR_MATCHES ( enc , ptr , ASCII_GT )"		3154318	0					
ANR	3154510	Callee	CHAR_MATCHES		3154318	0					
ANR	3154511	Identifier	CHAR_MATCHES		3154318	0					
ANR	3154512	ArgumentList	enc		3154318	1					
ANR	3154513	Argument	enc		3154318	0					
ANR	3154514	Identifier	enc		3154318	0					
ANR	3154515	Argument	ptr		3154318	1					
ANR	3154516	Identifier	ptr		3154318	0					
ANR	3154517	Argument	ASCII_GT		3154318	2					
ANR	3154518	Identifier	ASCII_GT		3154318	0					
ANR	3154519	CompoundStatement		26:48:787:787	3154318	1					
ANR	3154520	ExpressionStatement	* nextTokPtr = ptr + MINBPC ( enc )	294:12:8130:8161	3154318	0	True				
ANR	3154521	AssignmentExpression	* nextTokPtr = ptr + MINBPC ( enc )		3154318	0		=			
ANR	3154522	UnaryOperationExpression	* nextTokPtr		3154318	0					
ANR	3154523	UnaryOperator	*		3154318	0					
ANR	3154524	Identifier	nextTokPtr		3154318	1					
ANR	3154525	AdditiveExpression	ptr + MINBPC ( enc )		3154318	1		+			
ANR	3154526	Identifier	ptr		3154318	0					
ANR	3154527	CallExpression	MINBPC ( enc )		3154318	1					
ANR	3154528	Callee	MINBPC		3154318	0					
ANR	3154529	Identifier	MINBPC		3154318	0					
ANR	3154530	ArgumentList	enc		3154318	1					
ANR	3154531	Argument	enc		3154318	0					
ANR	3154532	Identifier	enc		3154318	0					
ANR	3154533	ReturnStatement	return tok ;	295:12:8175:8185	3154318	1	True				
ANR	3154534	Identifier	tok		3154318	0					
ANR	3154535	BreakStatement	break ;	297:10:8209:8214	3154318	10	True				
ANR	3154536	Label	default :	298:8:8224:8231	3154318	11	True				
ANR	3154537	Identifier	default		3154318	0					
ANR	3154538	ExpressionStatement	ptr += MINBPC ( enc )	299:10:8243:8261	3154318	12	True				
ANR	3154539	AssignmentExpression	ptr += MINBPC ( enc )		3154318	0		+=			
ANR	3154540	Identifier	ptr		3154318	0					
ANR	3154541	CallExpression	MINBPC ( enc )		3154318	1					
ANR	3154542	Callee	MINBPC		3154318	0					
ANR	3154543	Identifier	MINBPC		3154318	0					
ANR	3154544	ArgumentList	enc		3154318	1					
ANR	3154545	Argument	enc		3154318	0					
ANR	3154546	Identifier	enc		3154318	0					
ANR	3154547	BreakStatement	break ;	300:10:8273:8278	3154318	13	True				
ANR	3154548	ReturnStatement	return XML_TOK_PARTIAL ;	303:6:8304:8326	3154318	16	True				
ANR	3154549	Identifier	XML_TOK_PARTIAL		3154318	0					
ANR	3154550	Label	case BT_QUEST :	304:4:8332:8345	3154318	17	True				
ANR	3154551	Identifier	BT_QUEST		3154318	0					
ANR	3154552	IfStatement	"if ( ! PREFIX ( checkPiTarget ) ( enc , target , ptr , & tok ) )"		3154318	18					
ANR	3154553	Condition	"! PREFIX ( checkPiTarget ) ( enc , target , ptr , & tok )"	305:10:8357:8402	3154318	0	True				
ANR	3154554	UnaryOperationExpression	"! PREFIX ( checkPiTarget ) ( enc , target , ptr , & tok )"		3154318	0					
ANR	3154555	UnaryOperator	!		3154318	0					
ANR	3154556	CallExpression	"PREFIX ( checkPiTarget ) ( enc , target , ptr , & tok )"		3154318	1					
ANR	3154557	Callee	PREFIX ( checkPiTarget )		3154318	0					
ANR	3154558	CallExpression	PREFIX ( checkPiTarget )		3154318	0					
ANR	3154559	Callee	PREFIX		3154318	0					
ANR	3154560	Identifier	PREFIX		3154318	0					
ANR	3154561	ArgumentList	checkPiTarget		3154318	1					
ANR	3154562	Argument	checkPiTarget		3154318	0					
ANR	3154563	Identifier	checkPiTarget		3154318	0					
ANR	3154564	ArgumentList	enc		3154318	1					
ANR	3154565	Argument	enc		3154318	0					
ANR	3154566	Identifier	enc		3154318	0					
ANR	3154567	Argument	target		3154318	1					
ANR	3154568	Identifier	target		3154318	0					
ANR	3154569	Argument	ptr		3154318	2					
ANR	3154570	Identifier	ptr		3154318	0					
ANR	3154571	Argument	& tok		3154318	3					
ANR	3154572	UnaryOperationExpression	& tok		3154318	0					
ANR	3154573	UnaryOperator	&		3154318	0					
ANR	3154574	Identifier	tok		3154318	1					
ANR	3154575	CompoundStatement		38:58:1076:1076	3154318	1					
ANR	3154576	ExpressionStatement	* nextTokPtr = ptr	306:8:8415:8432	3154318	0	True				
ANR	3154577	AssignmentExpression	* nextTokPtr = ptr		3154318	0		=			
ANR	3154578	UnaryOperationExpression	* nextTokPtr		3154318	0					
ANR	3154579	UnaryOperator	*		3154318	0					
ANR	3154580	Identifier	nextTokPtr		3154318	1					
ANR	3154581	Identifier	ptr		3154318	1					
ANR	3154582	ReturnStatement	return XML_TOK_INVALID ;	307:8:8442:8464	3154318	1	True				
ANR	3154583	Identifier	XML_TOK_INVALID		3154318	0					
ANR	3154584	ExpressionStatement	ptr += MINBPC ( enc )	309:6:8480:8498	3154318	19	True				
ANR	3154585	AssignmentExpression	ptr += MINBPC ( enc )		3154318	0		+=			
ANR	3154586	Identifier	ptr		3154318	0					
ANR	3154587	CallExpression	MINBPC ( enc )		3154318	1					
ANR	3154588	Callee	MINBPC		3154318	0					
ANR	3154589	Identifier	MINBPC		3154318	0					
ANR	3154590	ArgumentList	enc		3154318	1					
ANR	3154591	Argument	enc		3154318	0					
ANR	3154592	Identifier	enc		3154318	0					
ANR	3154593	ExpressionStatement	"REQUIRE_CHAR ( enc , ptr , end )"	310:6:8506:8533	3154318	20	True				
ANR	3154594	CallExpression	"REQUIRE_CHAR ( enc , ptr , end )"		3154318	0					
ANR	3154595	Callee	REQUIRE_CHAR		3154318	0					
ANR	3154596	Identifier	REQUIRE_CHAR		3154318	0					
ANR	3154597	ArgumentList	enc		3154318	1					
ANR	3154598	Argument	enc		3154318	0					
ANR	3154599	Identifier	enc		3154318	0					
ANR	3154600	Argument	ptr		3154318	1					
ANR	3154601	Identifier	ptr		3154318	0					
ANR	3154602	Argument	end		3154318	2					
ANR	3154603	Identifier	end		3154318	0					
ANR	3154604	IfStatement	"if ( CHAR_MATCHES ( enc , ptr , ASCII_GT ) )"		3154318	21					
ANR	3154605	Condition	"CHAR_MATCHES ( enc , ptr , ASCII_GT )"	311:10:8545:8576	3154318	0	True				
ANR	3154606	CallExpression	"CHAR_MATCHES ( enc , ptr , ASCII_GT )"		3154318	0					
ANR	3154607	Callee	CHAR_MATCHES		3154318	0					
ANR	3154608	Identifier	CHAR_MATCHES		3154318	0					
ANR	3154609	ArgumentList	enc		3154318	1					
ANR	3154610	Argument	enc		3154318	0					
ANR	3154611	Identifier	enc		3154318	0					
ANR	3154612	Argument	ptr		3154318	1					
ANR	3154613	Identifier	ptr		3154318	0					
ANR	3154614	Argument	ASCII_GT		3154318	2					
ANR	3154615	Identifier	ASCII_GT		3154318	0					
ANR	3154616	CompoundStatement		44:44:1250:1250	3154318	1					
ANR	3154617	ExpressionStatement	* nextTokPtr = ptr + MINBPC ( enc )	312:8:8589:8620	3154318	0	True				
ANR	3154618	AssignmentExpression	* nextTokPtr = ptr + MINBPC ( enc )		3154318	0		=			
ANR	3154619	UnaryOperationExpression	* nextTokPtr		3154318	0					
ANR	3154620	UnaryOperator	*		3154318	0					
ANR	3154621	Identifier	nextTokPtr		3154318	1					
ANR	3154622	AdditiveExpression	ptr + MINBPC ( enc )		3154318	1		+			
ANR	3154623	Identifier	ptr		3154318	0					
ANR	3154624	CallExpression	MINBPC ( enc )		3154318	1					
ANR	3154625	Callee	MINBPC		3154318	0					
ANR	3154626	Identifier	MINBPC		3154318	0					
ANR	3154627	ArgumentList	enc		3154318	1					
ANR	3154628	Argument	enc		3154318	0					
ANR	3154629	Identifier	enc		3154318	0					
ANR	3154630	ReturnStatement	return tok ;	313:8:8630:8640	3154318	1	True				
ANR	3154631	Identifier	tok		3154318	0					
ANR	3154632	Label	default :	316:4:8679:8686	3154318	22	True				
ANR	3154633	Identifier	default		3154318	0					
ANR	3154634	ExpressionStatement	* nextTokPtr = ptr	317:6:8694:8711	3154318	23	True				
ANR	3154635	AssignmentExpression	* nextTokPtr = ptr		3154318	0		=			
ANR	3154636	UnaryOperationExpression	* nextTokPtr		3154318	0					
ANR	3154637	UnaryOperator	*		3154318	0					
ANR	3154638	Identifier	nextTokPtr		3154318	1					
ANR	3154639	Identifier	ptr		3154318	1					
ANR	3154640	ReturnStatement	return XML_TOK_INVALID ;	318:6:8719:8741	3154318	24	True				
ANR	3154641	Identifier	XML_TOK_INVALID		3154318	0					
ANR	3154642	ReturnStatement	return XML_TOK_PARTIAL ;	321:2:8755:8777	3154318	5	True				
ANR	3154643	Identifier	XML_TOK_PARTIAL		3154318	0					
ANR	3154644	ReturnType	static int PTRCALL PREFIX		3154318	1					
ANR	3154645	Identifier	( scanPi )		3154318	2					
ANR	3154646	Identifier	scanPi		3154318	3					
ANR	3154647	ParameterList	"const ENCODING * enc , const char * ptr , const char * end , const char * * nextTokPtr"		3154318	4					
ANR	3154648	Parameter	const ENCODING * enc	266:15:7233:7251	3154318	0	True				
ANR	3154649	ParameterType	const ENCODING *		3154318	0					
ANR	3154650	Identifier	enc		3154318	1					
ANR	3154651	Parameter	const char * ptr	266:36:7254:7268	3154318	1	True				
ANR	3154652	ParameterType	const char *		3154318	0					
ANR	3154653	Identifier	ptr		3154318	1					
ANR	3154654	Parameter	const char * end	267:15:7286:7300	3154318	2	True				
ANR	3154655	ParameterType	const char *		3154318	0					
ANR	3154656	Identifier	end		3154318	1					
ANR	3154657	Parameter	const char * * nextTokPtr	267:32:7303:7325	3154318	3	True				
ANR	3154658	ParameterType	const char * *		3154318	0					
ANR	3154659	Identifier	nextTokPtr		3154318	1					
ANR	3154660	CFGEntryNode	ENTRY		3154318		True				
ANR	3154661	CFGExitNode	EXIT		3154318		True				
ANR	3154662	Symbol	XML_TOK_INVALID		3154318						
ANR	3154663	Symbol	nextTokPtr		3154318						
ANR	3154664	Symbol	XML_TOK_PARTIAL		3154318						
ANR	3154665	Symbol	BYTE_TYPE		3154318						
ANR	3154666	Symbol	* nextTokPtr		3154318						
ANR	3154667	Symbol	MINBPC		3154318						
ANR	3154668	Symbol	ptr		3154318						
ANR	3154669	Symbol	target		3154318						
ANR	3154670	Symbol	checkPiTarget		3154318						
ANR	3154671	Symbol	tok		3154318						
ANR	3154672	Symbol	& tok		3154318						
ANR	3154673	Symbol	CHAR_MATCHES		3154318						
ANR	3154674	Symbol	PREFIX		3154318						
ANR	3154675	Symbol	ASCII_GT		3154318						
ANR	3154676	Symbol	end		3154318						
ANR	3154677	Symbol	enc		3154318						
ANR	3154678	Symbol	HAS_CHAR		3154318						
ANR	3154679	Function	scanCdataSection	324:0:8782:9353							
ANR	3154680	FunctionDef	"scanCdataSection (const ENCODING * UNUSED_P ( enc ) , const char * ptr , const char * end , const char * * nextTokPtr)"		3154679	0					
ANR	3154681	CompoundStatement		327:0:8941:9353	3154679	0					
ANR	3154682	Statement	static	328:2:8945:8950	3154679	0	True				
ANR	3154683	IdentifierDeclStatement	"const char CDATA_LSQB [ ] = { ASCII_C , ASCII_D , ASCII_A , ASCII_T , ASCII_A , ASCII_LSQB } ;"	328:9:8952:9074	3154679	1	True				
ANR	3154684	IdentifierDecl	"CDATA_LSQB [ ] = { ASCII_C , ASCII_D , ASCII_A , ASCII_T , ASCII_A , ASCII_LSQB }"		3154679	0					
ANR	3154685	IdentifierDeclType	const char [ ]		3154679	0					
ANR	3154686	Identifier	CDATA_LSQB		3154679	1					
ANR	3154687	AssignmentExpression	"CDATA_LSQB [ ] = { ASCII_C , ASCII_D , ASCII_A , ASCII_T , ASCII_A , ASCII_LSQB }"		3154679	2		=			
ANR	3154688	Identifier	CDATA_LSQB		3154679	0					
ANR	3154689	InitializerList	ASCII_C		3154679	1					
ANR	3154690	Identifier	ASCII_C		3154679	0					
ANR	3154691	Identifier	ASCII_D		3154679	1					
ANR	3154692	Identifier	ASCII_A		3154679	2					
ANR	3154693	Identifier	ASCII_T		3154679	3					
ANR	3154694	Identifier	ASCII_A		3154679	4					
ANR	3154695	Identifier	ASCII_LSQB		3154679	5					
ANR	3154696	IdentifierDeclStatement	int i ;	330:2:9078:9083	3154679	2	True				
ANR	3154697	IdentifierDecl	i		3154679	0					
ANR	3154698	IdentifierDeclType	int		3154679	0					
ANR	3154699	Identifier	i		3154679	1					
ANR	3154700	ExpressionStatement	"REQUIRE_CHARS ( enc , ptr , end , 6 )"	332:2:9102:9133	3154679	3	True				
ANR	3154701	CallExpression	"REQUIRE_CHARS ( enc , ptr , end , 6 )"		3154679	0					
ANR	3154702	Callee	REQUIRE_CHARS		3154679	0					
ANR	3154703	Identifier	REQUIRE_CHARS		3154679	0					
ANR	3154704	ArgumentList	enc		3154679	1					
ANR	3154705	Argument	enc		3154679	0					
ANR	3154706	Identifier	enc		3154679	0					
ANR	3154707	Argument	ptr		3154679	1					
ANR	3154708	Identifier	ptr		3154679	0					
ANR	3154709	Argument	end		3154679	2					
ANR	3154710	Identifier	end		3154679	0					
ANR	3154711	Argument	6		3154679	3					
ANR	3154712	PrimaryExpression	6		3154679	0					
ANR	3154713	ForStatement	"for ( i = 0 ; i < 6 ; i ++ , ptr += MINBPC ( enc ) )"		3154679	4					
ANR	3154714	ForInit	i = 0 ;	333:7:9142:9147	3154679	0	True				
ANR	3154715	AssignmentExpression	i = 0		3154679	0		=			
ANR	3154716	Identifier	i		3154679	0					
ANR	3154717	PrimaryExpression	0		3154679	1					
ANR	3154718	Condition	i < 6	333:14:9149:9153	3154679	1	True				
ANR	3154719	RelationalExpression	i < 6		3154679	0		<			
ANR	3154720	Identifier	i		3154679	0					
ANR	3154721	PrimaryExpression	6		3154679	1					
ANR	3154722	Expression	"i ++ , ptr += MINBPC ( enc )"	333:21:9156:9178	3154679	2	True				
ANR	3154723	PostIncDecOperationExpression	i ++		3154679	0					
ANR	3154724	Identifier	i		3154679	0					
ANR	3154725	IncDec	++		3154679	1					
ANR	3154726	AssignmentExpression	ptr += MINBPC ( enc )		3154679	1		+=			
ANR	3154727	Identifier	ptr		3154679	0					
ANR	3154728	CallExpression	MINBPC ( enc )		3154679	1					
ANR	3154729	Callee	MINBPC		3154679	0					
ANR	3154730	Identifier	MINBPC		3154679	0					
ANR	3154731	ArgumentList	enc		3154679	1					
ANR	3154732	Argument	enc		3154679	0					
ANR	3154733	Identifier	enc		3154679	0					
ANR	3154734	CompoundStatement		7:46:239:239	3154679	3					
ANR	3154735	IfStatement	"if ( ! CHAR_MATCHES ( enc , ptr , CDATA_LSQB [ i ] ) )"		3154679	0					
ANR	3154736	Condition	"! CHAR_MATCHES ( enc , ptr , CDATA_LSQB [ i ] )"	334:8:9191:9228	3154679	0	True				
ANR	3154737	UnaryOperationExpression	"! CHAR_MATCHES ( enc , ptr , CDATA_LSQB [ i ] )"		3154679	0					
ANR	3154738	UnaryOperator	!		3154679	0					
ANR	3154739	CallExpression	"CHAR_MATCHES ( enc , ptr , CDATA_LSQB [ i ] )"		3154679	1					
ANR	3154740	Callee	CHAR_MATCHES		3154679	0					
ANR	3154741	Identifier	CHAR_MATCHES		3154679	0					
ANR	3154742	ArgumentList	enc		3154679	1					
ANR	3154743	Argument	enc		3154679	0					
ANR	3154744	Identifier	enc		3154679	0					
ANR	3154745	Argument	ptr		3154679	1					
ANR	3154746	Identifier	ptr		3154679	0					
ANR	3154747	Argument	CDATA_LSQB [ i ]		3154679	2					
ANR	3154748	ArrayIndexing	CDATA_LSQB [ i ]		3154679	0					
ANR	3154749	Identifier	CDATA_LSQB		3154679	0					
ANR	3154750	Identifier	i		3154679	1					
ANR	3154751	CompoundStatement		8:48:289:289	3154679	1					
ANR	3154752	ExpressionStatement	* nextTokPtr = ptr	335:6:9239:9256	3154679	0	True				
ANR	3154753	AssignmentExpression	* nextTokPtr = ptr		3154679	0		=			
ANR	3154754	UnaryOperationExpression	* nextTokPtr		3154679	0					
ANR	3154755	UnaryOperator	*		3154679	0					
ANR	3154756	Identifier	nextTokPtr		3154679	1					
ANR	3154757	Identifier	ptr		3154679	1					
ANR	3154758	ReturnStatement	return XML_TOK_INVALID ;	336:6:9264:9286	3154679	1	True				
ANR	3154759	Identifier	XML_TOK_INVALID		3154679	0					
ANR	3154760	ExpressionStatement	* nextTokPtr = ptr	339:2:9300:9317	3154679	5	True				
ANR	3154761	AssignmentExpression	* nextTokPtr = ptr		3154679	0		=			
ANR	3154762	UnaryOperationExpression	* nextTokPtr		3154679	0					
ANR	3154763	UnaryOperator	*		3154679	0					
ANR	3154764	Identifier	nextTokPtr		3154679	1					
ANR	3154765	Identifier	ptr		3154679	1					
ANR	3154766	ReturnStatement	return XML_TOK_CDATA_SECT_OPEN ;	340:2:9321:9351	3154679	6	True				
ANR	3154767	Identifier	XML_TOK_CDATA_SECT_OPEN		3154679	0					
ANR	3154768	ReturnType	static int PTRCALL PREFIX		3154679	1					
ANR	3154769	Identifier	( scanCdataSection )		3154679	2					
ANR	3154770	Identifier	scanCdataSection		3154679	3					
ANR	3154771	ParameterList	"const ENCODING * UNUSED_P ( enc ) , const char * ptr , const char * end , const char * * nextTokPtr"		3154679	4					
ANR	3154772	Parameter	const ENCODING * UNUSED_P ( enc )	325:25:8826:8854	3154679	0	True				
ANR	3154773	ParameterType	const ENCODING * ( enc )		3154679	0					
ANR	3154774	Identifier	UNUSED_P		3154679	1					
ANR	3154775	Parameter	const char * ptr	325:56:8857:8871	3154679	1	True				
ANR	3154776	ParameterType	const char *		3154679	0					
ANR	3154777	Identifier	ptr		3154679	1					
ANR	3154778	Parameter	const char * end	326:25:8899:8913	3154679	2	True				
ANR	3154779	ParameterType	const char *		3154679	0					
ANR	3154780	Identifier	end		3154679	1					
ANR	3154781	Parameter	const char * * nextTokPtr	326:42:8916:8938	3154679	3	True				
ANR	3154782	ParameterType	const char * *		3154679	0					
ANR	3154783	Identifier	nextTokPtr		3154679	1					
ANR	3154784	CFGEntryNode	ENTRY		3154679		True				
ANR	3154785	CFGExitNode	EXIT		3154679		True				
ANR	3154786	Symbol	UNUSED_P		3154679						
ANR	3154787	Symbol	XML_TOK_INVALID		3154679						
ANR	3154788	Symbol	nextTokPtr		3154679						
ANR	3154789	Symbol	* CDATA_LSQB		3154679						
ANR	3154790	Symbol	i		3154679						
ANR	3154791	Symbol	* nextTokPtr		3154679						
ANR	3154792	Symbol	CDATA_LSQB		3154679						
ANR	3154793	Symbol	MINBPC		3154679						
ANR	3154794	Symbol	ptr		3154679						
ANR	3154795	Symbol	ASCII_T		3154679						
ANR	3154796	Symbol	CHAR_MATCHES		3154679						
ANR	3154797	Symbol	* i		3154679						
ANR	3154798	Symbol	end		3154679						
ANR	3154799	Symbol	ASCII_A		3154679						
ANR	3154800	Symbol	enc		3154679						
ANR	3154801	Symbol	ASCII_C		3154679						
ANR	3154802	Symbol	ASCII_LSQB		3154679						
ANR	3154803	Symbol	XML_TOK_CDATA_SECT_OPEN		3154679						
ANR	3154804	Symbol	ASCII_D		3154679						
ANR	3154805	Function	cdataSectionTok	343:0:9356:11114							
ANR	3154806	FunctionDef	"cdataSectionTok (const ENCODING * enc , const char * ptr , const char * end , const char * * nextTokPtr)"		3154805	0					
ANR	3154807	CompoundStatement		346:0:9503:11114	3154805	0					
ANR	3154808	IfStatement	if ( ptr >= end )		3154805	0					
ANR	3154809	Condition	ptr >= end	347:6:9511:9520	3154805	0	True				
ANR	3154810	RelationalExpression	ptr >= end		3154805	0		>=			
ANR	3154811	Identifier	ptr		3154805	0					
ANR	3154812	Identifier	end		3154805	1					
ANR	3154813	ReturnStatement	return XML_TOK_NONE ;	348:4:9527:9546	3154805	1	True				
ANR	3154814	Identifier	XML_TOK_NONE		3154805	0					
ANR	3154815	IfStatement	if ( MINBPC ( enc ) > 1 )		3154805	1					
ANR	3154816	Condition	MINBPC ( enc ) > 1	349:6:9554:9568	3154805	0	True				
ANR	3154817	RelationalExpression	MINBPC ( enc ) > 1		3154805	0		>			
ANR	3154818	CallExpression	MINBPC ( enc )		3154805	0					
ANR	3154819	Callee	MINBPC		3154805	0					
ANR	3154820	Identifier	MINBPC		3154805	0					
ANR	3154821	ArgumentList	enc		3154805	1					
ANR	3154822	Argument	enc		3154805	0					
ANR	3154823	Identifier	enc		3154805	0					
ANR	3154824	PrimaryExpression	1		3154805	1					
ANR	3154825	CompoundStatement		5:4:73:93	3154805	1					
ANR	3154826	IdentifierDeclStatement	size_t n = end - ptr ;	350:4:9577:9597	3154805	0	True				
ANR	3154827	IdentifierDecl	n = end - ptr		3154805	0					
ANR	3154828	IdentifierDeclType	size_t		3154805	0					
ANR	3154829	Identifier	n		3154805	1					
ANR	3154830	AssignmentExpression	n = end - ptr		3154805	2		=			
ANR	3154831	Identifier	n		3154805	0					
ANR	3154832	AdditiveExpression	end - ptr		3154805	1		-			
ANR	3154833	Identifier	end		3154805	0					
ANR	3154834	Identifier	ptr		3154805	1					
ANR	3154835	IfStatement	if ( n & ( MINBPC ( enc ) - 1 ) )		3154805	1					
ANR	3154836	Condition	n & ( MINBPC ( enc ) - 1 )	351:8:9607:9627	3154805	0	True				
ANR	3154837	BitAndExpression	n & ( MINBPC ( enc ) - 1 )		3154805	0		&			
ANR	3154838	Identifier	n		3154805	0					
ANR	3154839	AdditiveExpression	MINBPC ( enc ) - 1		3154805	1		-			
ANR	3154840	CallExpression	MINBPC ( enc )		3154805	0					
ANR	3154841	Callee	MINBPC		3154805	0					
ANR	3154842	Identifier	MINBPC		3154805	0					
ANR	3154843	ArgumentList	enc		3154805	1					
ANR	3154844	Argument	enc		3154805	0					
ANR	3154845	Identifier	enc		3154805	0					
ANR	3154846	PrimaryExpression	1		3154805	1					
ANR	3154847	CompoundStatement		6:31:126:126	3154805	1					
ANR	3154848	ExpressionStatement	n &= ~ ( MINBPC ( enc ) - 1 )	352:6:9638:9661	3154805	0	True				
ANR	3154849	AssignmentExpression	n &= ~ ( MINBPC ( enc ) - 1 )		3154805	0		&=			
ANR	3154850	Identifier	n		3154805	0					
ANR	3154851	UnaryOperationExpression	~ ( MINBPC ( enc ) - 1 )		3154805	1					
ANR	3154852	UnaryOperator	~		3154805	0					
ANR	3154853	AdditiveExpression	MINBPC ( enc ) - 1		3154805	1		-			
ANR	3154854	CallExpression	MINBPC ( enc )		3154805	0					
ANR	3154855	Callee	MINBPC		3154805	0					
ANR	3154856	Identifier	MINBPC		3154805	0					
ANR	3154857	ArgumentList	enc		3154805	1					
ANR	3154858	Argument	enc		3154805	0					
ANR	3154859	Identifier	enc		3154805	0					
ANR	3154860	PrimaryExpression	1		3154805	1					
ANR	3154861	IfStatement	if ( n == 0 )		3154805	1					
ANR	3154862	Condition	n == 0	353:10:9673:9678	3154805	0	True				
ANR	3154863	EqualityExpression	n == 0		3154805	0		==			
ANR	3154864	Identifier	n		3154805	0					
ANR	3154865	PrimaryExpression	0		3154805	1					
ANR	3154866	ReturnStatement	return XML_TOK_PARTIAL ;	354:8:9689:9711	3154805	1	True				
ANR	3154867	Identifier	XML_TOK_PARTIAL		3154805	0					
ANR	3154868	ExpressionStatement	end = ptr + n	355:6:9719:9732	3154805	2	True				
ANR	3154869	AssignmentExpression	end = ptr + n		3154805	0		=			
ANR	3154870	Identifier	end		3154805	0					
ANR	3154871	AdditiveExpression	ptr + n		3154805	1		+			
ANR	3154872	Identifier	ptr		3154805	0					
ANR	3154873	Identifier	n		3154805	1					
ANR	3154874	SwitchStatement	"switch ( BYTE_TYPE ( enc , ptr ) )"		3154805	2					
ANR	3154875	Condition	"BYTE_TYPE ( enc , ptr )"	358:10:9754:9772	3154805	0	True				
ANR	3154876	CallExpression	"BYTE_TYPE ( enc , ptr )"		3154805	0					
ANR	3154877	Callee	BYTE_TYPE		3154805	0					
ANR	3154878	Identifier	BYTE_TYPE		3154805	0					
ANR	3154879	ArgumentList	enc		3154805	1					
ANR	3154880	Argument	enc		3154805	0					
ANR	3154881	Identifier	enc		3154805	0					
ANR	3154882	Argument	ptr		3154805	1					
ANR	3154883	Identifier	ptr		3154805	0					
ANR	3154884	CompoundStatement		13:31:271:271	3154805	1					
ANR	3154885	Label	case BT_RSQB :	359:2:9779:9791	3154805	0	True				
ANR	3154886	Identifier	BT_RSQB		3154805	0					
ANR	3154887	ExpressionStatement	ptr += MINBPC ( enc )	360:4:9797:9815	3154805	1	True				
ANR	3154888	AssignmentExpression	ptr += MINBPC ( enc )		3154805	0		+=			
ANR	3154889	Identifier	ptr		3154805	0					
ANR	3154890	CallExpression	MINBPC ( enc )		3154805	1					
ANR	3154891	Callee	MINBPC		3154805	0					
ANR	3154892	Identifier	MINBPC		3154805	0					
ANR	3154893	ArgumentList	enc		3154805	1					
ANR	3154894	Argument	enc		3154805	0					
ANR	3154895	Identifier	enc		3154805	0					
ANR	3154896	ExpressionStatement	"REQUIRE_CHAR ( enc , ptr , end )"	361:4:9821:9848	3154805	2	True				
ANR	3154897	CallExpression	"REQUIRE_CHAR ( enc , ptr , end )"		3154805	0					
ANR	3154898	Callee	REQUIRE_CHAR		3154805	0					
ANR	3154899	Identifier	REQUIRE_CHAR		3154805	0					
ANR	3154900	ArgumentList	enc		3154805	1					
ANR	3154901	Argument	enc		3154805	0					
ANR	3154902	Identifier	enc		3154805	0					
ANR	3154903	Argument	ptr		3154805	1					
ANR	3154904	Identifier	ptr		3154805	0					
ANR	3154905	Argument	end		3154805	2					
ANR	3154906	Identifier	end		3154805	0					
ANR	3154907	IfStatement	"if ( ! CHAR_MATCHES ( enc , ptr , ASCII_RSQB ) )"		3154805	3					
ANR	3154908	Condition	"! CHAR_MATCHES ( enc , ptr , ASCII_RSQB )"	362:8:9858:9892	3154805	0	True				
ANR	3154909	UnaryOperationExpression	"! CHAR_MATCHES ( enc , ptr , ASCII_RSQB )"		3154805	0					
ANR	3154910	UnaryOperator	!		3154805	0					
ANR	3154911	CallExpression	"CHAR_MATCHES ( enc , ptr , ASCII_RSQB )"		3154805	1					
ANR	3154912	Callee	CHAR_MATCHES		3154805	0					
ANR	3154913	Identifier	CHAR_MATCHES		3154805	0					
ANR	3154914	ArgumentList	enc		3154805	1					
ANR	3154915	Argument	enc		3154805	0					
ANR	3154916	Identifier	enc		3154805	0					
ANR	3154917	Argument	ptr		3154805	1					
ANR	3154918	Identifier	ptr		3154805	0					
ANR	3154919	Argument	ASCII_RSQB		3154805	2					
ANR	3154920	Identifier	ASCII_RSQB		3154805	0					
ANR	3154921	BreakStatement	break ;	363:6:9901:9906	3154805	1	True				
ANR	3154922	ExpressionStatement	ptr += MINBPC ( enc )	364:4:9912:9930	3154805	4	True				
ANR	3154923	AssignmentExpression	ptr += MINBPC ( enc )		3154805	0		+=			
ANR	3154924	Identifier	ptr		3154805	0					
ANR	3154925	CallExpression	MINBPC ( enc )		3154805	1					
ANR	3154926	Callee	MINBPC		3154805	0					
ANR	3154927	Identifier	MINBPC		3154805	0					
ANR	3154928	ArgumentList	enc		3154805	1					
ANR	3154929	Argument	enc		3154805	0					
ANR	3154930	Identifier	enc		3154805	0					
ANR	3154931	ExpressionStatement	"REQUIRE_CHAR ( enc , ptr , end )"	365:4:9936:9963	3154805	5	True				
ANR	3154932	CallExpression	"REQUIRE_CHAR ( enc , ptr , end )"		3154805	0					
ANR	3154933	Callee	REQUIRE_CHAR		3154805	0					
ANR	3154934	Identifier	REQUIRE_CHAR		3154805	0					
ANR	3154935	ArgumentList	enc		3154805	1					
ANR	3154936	Argument	enc		3154805	0					
ANR	3154937	Identifier	enc		3154805	0					
ANR	3154938	Argument	ptr		3154805	1					
ANR	3154939	Identifier	ptr		3154805	0					
ANR	3154940	Argument	end		3154805	2					
ANR	3154941	Identifier	end		3154805	0					
ANR	3154942	IfStatement	"if ( ! CHAR_MATCHES ( enc , ptr , ASCII_GT ) )"		3154805	6					
ANR	3154943	Condition	"! CHAR_MATCHES ( enc , ptr , ASCII_GT )"	366:8:9973:10005	3154805	0	True				
ANR	3154944	UnaryOperationExpression	"! CHAR_MATCHES ( enc , ptr , ASCII_GT )"		3154805	0					
ANR	3154945	UnaryOperator	!		3154805	0					
ANR	3154946	CallExpression	"CHAR_MATCHES ( enc , ptr , ASCII_GT )"		3154805	1					
ANR	3154947	Callee	CHAR_MATCHES		3154805	0					
ANR	3154948	Identifier	CHAR_MATCHES		3154805	0					
ANR	3154949	ArgumentList	enc		3154805	1					
ANR	3154950	Argument	enc		3154805	0					
ANR	3154951	Identifier	enc		3154805	0					
ANR	3154952	Argument	ptr		3154805	1					
ANR	3154953	Identifier	ptr		3154805	0					
ANR	3154954	Argument	ASCII_GT		3154805	2					
ANR	3154955	Identifier	ASCII_GT		3154805	0					
ANR	3154956	CompoundStatement		21:43:504:504	3154805	1					
ANR	3154957	ExpressionStatement	ptr -= MINBPC ( enc )	367:6:10016:10034	3154805	0	True				
ANR	3154958	AssignmentExpression	ptr -= MINBPC ( enc )		3154805	0		-=			
ANR	3154959	Identifier	ptr		3154805	0					
ANR	3154960	CallExpression	MINBPC ( enc )		3154805	1					
ANR	3154961	Callee	MINBPC		3154805	0					
ANR	3154962	Identifier	MINBPC		3154805	0					
ANR	3154963	ArgumentList	enc		3154805	1					
ANR	3154964	Argument	enc		3154805	0					
ANR	3154965	Identifier	enc		3154805	0					
ANR	3154966	BreakStatement	break ;	368:6:10042:10047	3154805	1	True				
ANR	3154967	ExpressionStatement	* nextTokPtr = ptr + MINBPC ( enc )	370:4:10059:10090	3154805	7	True				
ANR	3154968	AssignmentExpression	* nextTokPtr = ptr + MINBPC ( enc )		3154805	0		=			
ANR	3154969	UnaryOperationExpression	* nextTokPtr		3154805	0					
ANR	3154970	UnaryOperator	*		3154805	0					
ANR	3154971	Identifier	nextTokPtr		3154805	1					
ANR	3154972	AdditiveExpression	ptr + MINBPC ( enc )		3154805	1		+			
ANR	3154973	Identifier	ptr		3154805	0					
ANR	3154974	CallExpression	MINBPC ( enc )		3154805	1					
ANR	3154975	Callee	MINBPC		3154805	0					
ANR	3154976	Identifier	MINBPC		3154805	0					
ANR	3154977	ArgumentList	enc		3154805	1					
ANR	3154978	Argument	enc		3154805	0					
ANR	3154979	Identifier	enc		3154805	0					
ANR	3154980	ReturnStatement	return XML_TOK_CDATA_SECT_CLOSE ;	371:4:10096:10127	3154805	8	True				
ANR	3154981	Identifier	XML_TOK_CDATA_SECT_CLOSE		3154805	0					
ANR	3154982	Label	case BT_CR :	372:2:10131:10141	3154805	9	True				
ANR	3154983	Identifier	BT_CR		3154805	0					
ANR	3154984	ExpressionStatement	ptr += MINBPC ( enc )	373:4:10147:10165	3154805	10	True				
ANR	3154985	AssignmentExpression	ptr += MINBPC ( enc )		3154805	0		+=			
ANR	3154986	Identifier	ptr		3154805	0					
ANR	3154987	CallExpression	MINBPC ( enc )		3154805	1					
ANR	3154988	Callee	MINBPC		3154805	0					
ANR	3154989	Identifier	MINBPC		3154805	0					
ANR	3154990	ArgumentList	enc		3154805	1					
ANR	3154991	Argument	enc		3154805	0					
ANR	3154992	Identifier	enc		3154805	0					
ANR	3154993	ExpressionStatement	"REQUIRE_CHAR ( enc , ptr , end )"	374:4:10171:10198	3154805	11	True				
ANR	3154994	CallExpression	"REQUIRE_CHAR ( enc , ptr , end )"		3154805	0					
ANR	3154995	Callee	REQUIRE_CHAR		3154805	0					
ANR	3154996	Identifier	REQUIRE_CHAR		3154805	0					
ANR	3154997	ArgumentList	enc		3154805	1					
ANR	3154998	Argument	enc		3154805	0					
ANR	3154999	Identifier	enc		3154805	0					
ANR	3155000	Argument	ptr		3154805	1					
ANR	3155001	Identifier	ptr		3154805	0					
ANR	3155002	Argument	end		3154805	2					
ANR	3155003	Identifier	end		3154805	0					
ANR	3155004	IfStatement	"if ( BYTE_TYPE ( enc , ptr ) == BT_LF )"		3154805	12					
ANR	3155005	Condition	"BYTE_TYPE ( enc , ptr ) == BT_LF"	375:8:10208:10235	3154805	0	True				
ANR	3155006	EqualityExpression	"BYTE_TYPE ( enc , ptr ) == BT_LF"		3154805	0		==			
ANR	3155007	CallExpression	"BYTE_TYPE ( enc , ptr )"		3154805	0					
ANR	3155008	Callee	BYTE_TYPE		3154805	0					
ANR	3155009	Identifier	BYTE_TYPE		3154805	0					
ANR	3155010	ArgumentList	enc		3154805	1					
ANR	3155011	Argument	enc		3154805	0					
ANR	3155012	Identifier	enc		3154805	0					
ANR	3155013	Argument	ptr		3154805	1					
ANR	3155014	Identifier	ptr		3154805	0					
ANR	3155015	Identifier	BT_LF		3154805	1					
ANR	3155016	ExpressionStatement	ptr += MINBPC ( enc )	376:6:10244:10262	3154805	1	True				
ANR	3155017	AssignmentExpression	ptr += MINBPC ( enc )		3154805	0		+=			
ANR	3155018	Identifier	ptr		3154805	0					
ANR	3155019	CallExpression	MINBPC ( enc )		3154805	1					
ANR	3155020	Callee	MINBPC		3154805	0					
ANR	3155021	Identifier	MINBPC		3154805	0					
ANR	3155022	ArgumentList	enc		3154805	1					
ANR	3155023	Argument	enc		3154805	0					
ANR	3155024	Identifier	enc		3154805	0					
ANR	3155025	ExpressionStatement	* nextTokPtr = ptr	377:4:10268:10285	3154805	13	True				
ANR	3155026	AssignmentExpression	* nextTokPtr = ptr		3154805	0		=			
ANR	3155027	UnaryOperationExpression	* nextTokPtr		3154805	0					
ANR	3155028	UnaryOperator	*		3154805	0					
ANR	3155029	Identifier	nextTokPtr		3154805	1					
ANR	3155030	Identifier	ptr		3154805	1					
ANR	3155031	ReturnStatement	return XML_TOK_DATA_NEWLINE ;	378:4:10291:10318	3154805	14	True				
ANR	3155032	Identifier	XML_TOK_DATA_NEWLINE		3154805	0					
ANR	3155033	Label	case BT_LF :	379:2:10322:10332	3154805	15	True				
ANR	3155034	Identifier	BT_LF		3154805	0					
ANR	3155035	ExpressionStatement	* nextTokPtr = ptr + MINBPC ( enc )	380:4:10338:10369	3154805	16	True				
ANR	3155036	AssignmentExpression	* nextTokPtr = ptr + MINBPC ( enc )		3154805	0		=			
ANR	3155037	UnaryOperationExpression	* nextTokPtr		3154805	0					
ANR	3155038	UnaryOperator	*		3154805	0					
ANR	3155039	Identifier	nextTokPtr		3154805	1					
ANR	3155040	AdditiveExpression	ptr + MINBPC ( enc )		3154805	1		+			
ANR	3155041	Identifier	ptr		3154805	0					
ANR	3155042	CallExpression	MINBPC ( enc )		3154805	1					
ANR	3155043	Callee	MINBPC		3154805	0					
ANR	3155044	Identifier	MINBPC		3154805	0					
ANR	3155045	ArgumentList	enc		3154805	1					
ANR	3155046	Argument	enc		3154805	0					
ANR	3155047	Identifier	enc		3154805	0					
ANR	3155048	ReturnStatement	return XML_TOK_DATA_NEWLINE ;	381:4:10375:10402	3154805	17	True				
ANR	3155049	Identifier	XML_TOK_DATA_NEWLINE		3154805	0					
ANR	3155050	Statement	INVALID_CASES	382:2:10406:10418	3154805	18	True				
ANR	3155051	Statement	(	382:15:10419:10419	3154805	19	True				
ANR	3155052	Statement	ptr	382:16:10420:10422	3154805	20	True				
ANR	3155053	Statement	","	382:19:10423:10423	3154805	21	True				
ANR	3155054	Statement	nextTokPtr	382:21:10425:10434	3154805	22	True				
ANR	3155055	Statement	)	382:31:10435:10435	3154805	23	True				
ANR	3155056	Label	default :	383:2:10439:10446	3154805	24	True				
ANR	3155057	Identifier	default		3154805	0					
ANR	3155058	ExpressionStatement	ptr += MINBPC ( enc )	384:4:10452:10470	3154805	25	True				
ANR	3155059	AssignmentExpression	ptr += MINBPC ( enc )		3154805	0		+=			
ANR	3155060	Identifier	ptr		3154805	0					
ANR	3155061	CallExpression	MINBPC ( enc )		3154805	1					
ANR	3155062	Callee	MINBPC		3154805	0					
ANR	3155063	Identifier	MINBPC		3154805	0					
ANR	3155064	ArgumentList	enc		3154805	1					
ANR	3155065	Argument	enc		3154805	0					
ANR	3155066	Identifier	enc		3154805	0					
ANR	3155067	BreakStatement	break ;	385:4:10476:10481	3154805	26	True				
ANR	3155068	WhileStatement	"while ( HAS_CHAR ( enc , ptr , end ) )"		3154805	3					
ANR	3155069	Condition	"HAS_CHAR ( enc , ptr , end )"	387:9:10496:10518	3154805	0	True				
ANR	3155070	CallExpression	"HAS_CHAR ( enc , ptr , end )"		3154805	0					
ANR	3155071	Callee	HAS_CHAR		3154805	0					
ANR	3155072	Identifier	HAS_CHAR		3154805	0					
ANR	3155073	ArgumentList	enc		3154805	1					
ANR	3155074	Argument	enc		3154805	0					
ANR	3155075	Identifier	enc		3154805	0					
ANR	3155076	Argument	ptr		3154805	1					
ANR	3155077	Identifier	ptr		3154805	0					
ANR	3155078	Argument	end		3154805	2					
ANR	3155079	Identifier	end		3154805	0					
ANR	3155080	CompoundStatement		42:34:1017:1017	3154805	1					
ANR	3155081	SwitchStatement	"switch ( BYTE_TYPE ( enc , ptr ) )"		3154805	0					
ANR	3155082	Condition	"BYTE_TYPE ( enc , ptr )"	388:12:10535:10553	3154805	0	True				
ANR	3155083	CallExpression	"BYTE_TYPE ( enc , ptr )"		3154805	0					
ANR	3155084	Callee	BYTE_TYPE		3154805	0					
ANR	3155085	Identifier	BYTE_TYPE		3154805	0					
ANR	3155086	ArgumentList	enc		3154805	1					
ANR	3155087	Argument	enc		3154805	0					
ANR	3155088	Identifier	enc		3154805	0					
ANR	3155089	Argument	ptr		3154805	1					
ANR	3155090	Identifier	ptr		3154805	0					
ANR	3155091	CompoundStatement		43:33:1052:1052	3154805	1					
ANR	3155092	Statement	define	389:1:10559:10564	3154805	0	True				
ANR	3155093	Statement	LEAD_CASE	389:8:10566:10574	3154805	1	True				
ANR	3155094	Statement	(	389:17:10575:10575	3154805	2	True				
ANR	3155095	Statement	n	389:18:10576:10576	3154805	3	True				
ANR	3155096	Statement	)	389:19:10577:10577	3154805	4	True				
ANR	3155097	Statement	case	390:4:10585:10588	3154805	5	True				
ANR	3155098	Statement	BT_LEAD	390:9:10590:10596	3154805	6	True				
ANR	3155099	Label	n :	390:20:10601:10602	3154805	7	True				
ANR	3155100	Identifier	n		3154805	0					
ANR	3155101	IfStatement	"if ( end - ptr < n || IS_INVALID_CHAR ( enc , ptr , n ) )"		3154805	8					
ANR	3155102	Condition	"end - ptr < n || IS_INVALID_CHAR ( enc , ptr , n )"	391:10:10616:10660	3154805	0	True				
ANR	3155103	OrExpression	"end - ptr < n || IS_INVALID_CHAR ( enc , ptr , n )"		3154805	0		||			
ANR	3155104	RelationalExpression	end - ptr < n		3154805	0		<			
ANR	3155105	AdditiveExpression	end - ptr		3154805	0		-			
ANR	3155106	Identifier	end		3154805	0					
ANR	3155107	Identifier	ptr		3154805	1					
ANR	3155108	Identifier	n		3154805	1					
ANR	3155109	CallExpression	"IS_INVALID_CHAR ( enc , ptr , n )"		3154805	1					
ANR	3155110	Callee	IS_INVALID_CHAR		3154805	0					
ANR	3155111	Identifier	IS_INVALID_CHAR		3154805	0					
ANR	3155112	ArgumentList	enc		3154805	1					
ANR	3155113	Argument	enc		3154805	0					
ANR	3155114	Identifier	enc		3154805	0					
ANR	3155115	Argument	ptr		3154805	1					
ANR	3155116	Identifier	ptr		3154805	0					
ANR	3155117	Argument	n		3154805	2					
ANR	3155118	Identifier	n		3154805	0					
ANR	3155119	CompoundStatement		46:57:1159:1159	3154805	1					
ANR	3155120	ExpressionStatement	* nextTokPtr = ptr	392:8:10675:10692	3154805	0	True				
ANR	3155121	AssignmentExpression	* nextTokPtr = ptr		3154805	0		=			
ANR	3155122	UnaryOperationExpression	* nextTokPtr		3154805	0					
ANR	3155123	UnaryOperator	*		3154805	0					
ANR	3155124	Identifier	nextTokPtr		3154805	1					
ANR	3155125	Identifier	ptr		3154805	1					
ANR	3155126	ReturnStatement	return XML_TOK_DATA_CHARS ;	393:8:10704:10729	3154805	1	True				
ANR	3155127	Identifier	XML_TOK_DATA_CHARS		3154805	0					
ANR	3155128	ExpressionStatement	ptr += n	395:6:10749:10757	3154805	9	True				
ANR	3155129	AssignmentExpression	ptr += n		3154805	0		+=			
ANR	3155130	Identifier	ptr		3154805	0					
ANR	3155131	Identifier	n		3154805	1					
ANR	3155132	BreakStatement	break ;	396:6:10767:10772	3154805	10	True				
ANR	3155133	Statement	LEAD_CASE	397:4:10778:10786	3154805	11	True				
ANR	3155134	Statement	(	397:13:10787:10787	3154805	12	True				
ANR	3155135	Statement	2	397:14:10788:10788	3154805	13	True				
ANR	3155136	Statement	)	397:15:10789:10789	3154805	14	True				
ANR	3155137	Statement	LEAD_CASE	397:17:10791:10799	3154805	15	True				
ANR	3155138	Statement	(	397:26:10800:10800	3154805	16	True				
ANR	3155139	Statement	3	397:27:10801:10801	3154805	17	True				
ANR	3155140	Statement	)	397:28:10802:10802	3154805	18	True				
ANR	3155141	Statement	LEAD_CASE	397:30:10804:10812	3154805	19	True				
ANR	3155142	Statement	(	397:39:10813:10813	3154805	20	True				
ANR	3155143	Statement	4	397:40:10814:10814	3154805	21	True				
ANR	3155144	Statement	)	397:41:10815:10815	3154805	22	True				
ANR	3155145	Statement	undef	398:1:10818:10822	3154805	23	True				
ANR	3155146	Statement	LEAD_CASE	398:7:10824:10832	3154805	24	True				
ANR	3155147	Label	case BT_NONXML :	399:4:10838:10852	3154805	25	True				
ANR	3155148	Identifier	BT_NONXML		3154805	0					
ANR	3155149	Label	case BT_MALFORM :	400:4:10858:10873	3154805	26	True				
ANR	3155150	Identifier	BT_MALFORM		3154805	0					
ANR	3155151	Label	case BT_TRAIL :	401:4:10879:10892	3154805	27	True				
ANR	3155152	Identifier	BT_TRAIL		3154805	0					
ANR	3155153	Label	case BT_CR :	402:4:10898:10908	3154805	28	True				
ANR	3155154	Identifier	BT_CR		3154805	0					
ANR	3155155	Label	case BT_LF :	403:4:10914:10924	3154805	29	True				
ANR	3155156	Identifier	BT_LF		3154805	0					
ANR	3155157	Label	case BT_RSQB :	404:4:10930:10942	3154805	30	True				
ANR	3155158	Identifier	BT_RSQB		3154805	0					
ANR	3155159	ExpressionStatement	* nextTokPtr = ptr	405:6:10950:10967	3154805	31	True				
ANR	3155160	AssignmentExpression	* nextTokPtr = ptr		3154805	0		=			
ANR	3155161	UnaryOperationExpression	* nextTokPtr		3154805	0					
ANR	3155162	UnaryOperator	*		3154805	0					
ANR	3155163	Identifier	nextTokPtr		3154805	1					
ANR	3155164	Identifier	ptr		3154805	1					
ANR	3155165	ReturnStatement	return XML_TOK_DATA_CHARS ;	406:6:10975:11000	3154805	32	True				
ANR	3155166	Identifier	XML_TOK_DATA_CHARS		3154805	0					
ANR	3155167	Label	default :	407:4:11006:11013	3154805	33	True				
ANR	3155168	Identifier	default		3154805	0					
ANR	3155169	ExpressionStatement	ptr += MINBPC ( enc )	408:6:11021:11039	3154805	34	True				
ANR	3155170	AssignmentExpression	ptr += MINBPC ( enc )		3154805	0		+=			
ANR	3155171	Identifier	ptr		3154805	0					
ANR	3155172	CallExpression	MINBPC ( enc )		3154805	1					
ANR	3155173	Callee	MINBPC		3154805	0					
ANR	3155174	Identifier	MINBPC		3154805	0					
ANR	3155175	ArgumentList	enc		3154805	1					
ANR	3155176	Argument	enc		3154805	0					
ANR	3155177	Identifier	enc		3154805	0					
ANR	3155178	BreakStatement	break ;	409:6:11047:11052	3154805	35	True				
ANR	3155179	ExpressionStatement	* nextTokPtr = ptr	412:2:11066:11083	3154805	4	True				
ANR	3155180	AssignmentExpression	* nextTokPtr = ptr		3154805	0		=			
ANR	3155181	UnaryOperationExpression	* nextTokPtr		3154805	0					
ANR	3155182	UnaryOperator	*		3154805	0					
ANR	3155183	Identifier	nextTokPtr		3154805	1					
ANR	3155184	Identifier	ptr		3154805	1					
ANR	3155185	ReturnStatement	return XML_TOK_DATA_CHARS ;	413:2:11087:11112	3154805	5	True				
ANR	3155186	Identifier	XML_TOK_DATA_CHARS		3154805	0					
ANR	3155187	ReturnType	static int PTRCALL PREFIX		3154805	1					
ANR	3155188	Identifier	( cdataSectionTok )		3154805	2					
ANR	3155189	Identifier	cdataSectionTok		3154805	3					
ANR	3155190	ParameterList	"const ENCODING * enc , const char * ptr , const char * end , const char * * nextTokPtr"		3154805	4					
ANR	3155191	Parameter	const ENCODING * enc	344:24:9399:9417	3154805	0	True				
ANR	3155192	ParameterType	const ENCODING *		3154805	0					
ANR	3155193	Identifier	enc		3154805	1					
ANR	3155194	Parameter	const char * ptr	344:45:9420:9434	3154805	1	True				
ANR	3155195	ParameterType	const char *		3154805	0					
ANR	3155196	Identifier	ptr		3154805	1					
ANR	3155197	Parameter	const char * end	345:24:9461:9475	3154805	2	True				
ANR	3155198	ParameterType	const char *		3154805	0					
ANR	3155199	Identifier	end		3154805	1					
ANR	3155200	Parameter	const char * * nextTokPtr	345:41:9478:9500	3154805	3	True				
ANR	3155201	ParameterType	const char * *		3154805	0					
ANR	3155202	Identifier	nextTokPtr		3154805	1					
ANR	3155203	CFGEntryNode	ENTRY		3154805		True				
ANR	3155204	CFGExitNode	EXIT		3154805		True				
ANR	3155205	Symbol	XML_TOK_DATA_CHARS		3154805						
ANR	3155206	Symbol	nextTokPtr		3154805						
ANR	3155207	Symbol	XML_TOK_PARTIAL		3154805						
ANR	3155208	Symbol	BYTE_TYPE		3154805						
ANR	3155209	Symbol	* nextTokPtr		3154805						
ANR	3155210	Symbol	IS_INVALID_CHAR		3154805						
ANR	3155211	Symbol	MINBPC		3154805						
ANR	3155212	Symbol	XML_TOK_CDATA_SECT_CLOSE		3154805						
ANR	3155213	Symbol	n		3154805						
ANR	3155214	Symbol	BT_LF		3154805						
ANR	3155215	Symbol	ptr		3154805						
ANR	3155216	Symbol	CHAR_MATCHES		3154805						
ANR	3155217	Symbol	XML_TOK_DATA_NEWLINE		3154805						
ANR	3155218	Symbol	ASCII_GT		3154805						
ANR	3155219	Symbol	XML_TOK_NONE		3154805						
ANR	3155220	Symbol	end		3154805						
ANR	3155221	Symbol	enc		3154805						
ANR	3155222	Symbol	HAS_CHAR		3154805						
ANR	3155223	Symbol	ASCII_RSQB		3154805						
ANR	3155224	Function	scanEndTag	418:0:11163:12398							
ANR	3155225	FunctionDef	"scanEndTag (const ENCODING * enc , const char * ptr , const char * end , const char * * nextTokPtr)"		3155224	0					
ANR	3155226	CompoundStatement		421:0:11300:12398	3155224	0					
ANR	3155227	ExpressionStatement	"REQUIRE_CHAR ( enc , ptr , end )"	422:2:11304:11331	3155224	0	True				
ANR	3155228	CallExpression	"REQUIRE_CHAR ( enc , ptr , end )"		3155224	0					
ANR	3155229	Callee	REQUIRE_CHAR		3155224	0					
ANR	3155230	Identifier	REQUIRE_CHAR		3155224	0					
ANR	3155231	ArgumentList	enc		3155224	1					
ANR	3155232	Argument	enc		3155224	0					
ANR	3155233	Identifier	enc		3155224	0					
ANR	3155234	Argument	ptr		3155224	1					
ANR	3155235	Identifier	ptr		3155224	0					
ANR	3155236	Argument	end		3155224	2					
ANR	3155237	Identifier	end		3155224	0					
ANR	3155238	SwitchStatement	"switch ( BYTE_TYPE ( enc , ptr ) )"		3155224	1					
ANR	3155239	Condition	"BYTE_TYPE ( enc , ptr )"	423:10:11343:11361	3155224	0	True				
ANR	3155240	CallExpression	"BYTE_TYPE ( enc , ptr )"		3155224	0					
ANR	3155241	Callee	BYTE_TYPE		3155224	0					
ANR	3155242	Identifier	BYTE_TYPE		3155224	0					
ANR	3155243	ArgumentList	enc		3155224	1					
ANR	3155244	Argument	enc		3155224	0					
ANR	3155245	Identifier	enc		3155224	0					
ANR	3155246	Argument	ptr		3155224	1					
ANR	3155247	Identifier	ptr		3155224	0					
ANR	3155248	CompoundStatement		3:31:63:63	3155224	1					
ANR	3155249	Statement	CHECK_NMSTRT_CASES	424:2:11368:11385	3155224	0	True				
ANR	3155250	Statement	(	424:20:11386:11386	3155224	1	True				
ANR	3155251	Statement	enc	424:21:11387:11389	3155224	2	True				
ANR	3155252	Statement	","	424:24:11390:11390	3155224	3	True				
ANR	3155253	Statement	ptr	424:26:11392:11394	3155224	4	True				
ANR	3155254	Statement	","	424:29:11395:11395	3155224	5	True				
ANR	3155255	Statement	end	424:31:11397:11399	3155224	6	True				
ANR	3155256	Statement	","	424:34:11400:11400	3155224	7	True				
ANR	3155257	Statement	nextTokPtr	424:36:11402:11411	3155224	8	True				
ANR	3155258	Statement	)	424:46:11412:11412	3155224	9	True				
ANR	3155259	Label	default :	425:2:11416:11423	3155224	10	True				
ANR	3155260	Identifier	default		3155224	0					
ANR	3155261	ExpressionStatement	* nextTokPtr = ptr	426:4:11429:11446	3155224	11	True				
ANR	3155262	AssignmentExpression	* nextTokPtr = ptr		3155224	0		=			
ANR	3155263	UnaryOperationExpression	* nextTokPtr		3155224	0					
ANR	3155264	UnaryOperator	*		3155224	0					
ANR	3155265	Identifier	nextTokPtr		3155224	1					
ANR	3155266	Identifier	ptr		3155224	1					
ANR	3155267	ReturnStatement	return XML_TOK_INVALID ;	427:4:11452:11474	3155224	12	True				
ANR	3155268	Identifier	XML_TOK_INVALID		3155224	0					
ANR	3155269	WhileStatement	"while ( HAS_CHAR ( enc , ptr , end ) )"		3155224	2					
ANR	3155270	Condition	"HAS_CHAR ( enc , ptr , end )"	429:9:11489:11511	3155224	0	True				
ANR	3155271	CallExpression	"HAS_CHAR ( enc , ptr , end )"		3155224	0					
ANR	3155272	Callee	HAS_CHAR		3155224	0					
ANR	3155273	Identifier	HAS_CHAR		3155224	0					
ANR	3155274	ArgumentList	enc		3155224	1					
ANR	3155275	Argument	enc		3155224	0					
ANR	3155276	Identifier	enc		3155224	0					
ANR	3155277	Argument	ptr		3155224	1					
ANR	3155278	Identifier	ptr		3155224	0					
ANR	3155279	Argument	end		3155224	2					
ANR	3155280	Identifier	end		3155224	0					
ANR	3155281	CompoundStatement		9:34:213:213	3155224	1					
ANR	3155282	SwitchStatement	"switch ( BYTE_TYPE ( enc , ptr ) )"		3155224	0					
ANR	3155283	Condition	"BYTE_TYPE ( enc , ptr )"	430:12:11528:11546	3155224	0	True				
ANR	3155284	CallExpression	"BYTE_TYPE ( enc , ptr )"		3155224	0					
ANR	3155285	Callee	BYTE_TYPE		3155224	0					
ANR	3155286	Identifier	BYTE_TYPE		3155224	0					
ANR	3155287	ArgumentList	enc		3155224	1					
ANR	3155288	Argument	enc		3155224	0					
ANR	3155289	Identifier	enc		3155224	0					
ANR	3155290	Argument	ptr		3155224	1					
ANR	3155291	Identifier	ptr		3155224	0					
ANR	3155292	CompoundStatement		10:33:248:248	3155224	1					
ANR	3155293	Statement	CHECK_NAME_CASES	431:4:11555:11570	3155224	0	True				
ANR	3155294	Statement	(	431:20:11571:11571	3155224	1	True				
ANR	3155295	Statement	enc	431:21:11572:11574	3155224	2	True				
ANR	3155296	Statement	","	431:24:11575:11575	3155224	3	True				
ANR	3155297	Statement	ptr	431:26:11577:11579	3155224	4	True				
ANR	3155298	Statement	","	431:29:11580:11580	3155224	5	True				
ANR	3155299	Statement	end	431:31:11582:11584	3155224	6	True				
ANR	3155300	Statement	","	431:34:11585:11585	3155224	7	True				
ANR	3155301	Statement	nextTokPtr	431:36:11587:11596	3155224	8	True				
ANR	3155302	Statement	)	431:46:11597:11597	3155224	9	True				
ANR	3155303	Label	case BT_S :	432:4:11603:11612	3155224	10	True				
ANR	3155304	Identifier	BT_S		3155224	0					
ANR	3155305	Label	case BT_CR :	432:15:11614:11624	3155224	11	True				
ANR	3155306	Identifier	BT_CR		3155224	0					
ANR	3155307	Label	case BT_LF :	432:27:11626:11636	3155224	12	True				
ANR	3155308	Identifier	BT_LF		3155224	0					
ANR	3155309	ForStatement	"for ( ptr += MINBPC ( enc ) ; HAS_CHAR ( enc , ptr , end ) ; ptr += MINBPC ( enc ) )"		3155224	13					
ANR	3155310	ForInit	ptr += MINBPC ( enc ) ;	433:11:11649:11667	3155224	0	True				
ANR	3155311	AssignmentExpression	ptr += MINBPC ( enc )		3155224	0		+=			
ANR	3155312	Identifier	ptr		3155224	0					
ANR	3155313	CallExpression	MINBPC ( enc )		3155224	1					
ANR	3155314	Callee	MINBPC		3155224	0					
ANR	3155315	Identifier	MINBPC		3155224	0					
ANR	3155316	ArgumentList	enc		3155224	1					
ANR	3155317	Argument	enc		3155224	0					
ANR	3155318	Identifier	enc		3155224	0					
ANR	3155319	Condition	"HAS_CHAR ( enc , ptr , end )"	433:31:11669:11691	3155224	1	True				
ANR	3155320	CallExpression	"HAS_CHAR ( enc , ptr , end )"		3155224	0					
ANR	3155321	Callee	HAS_CHAR		3155224	0					
ANR	3155322	Identifier	HAS_CHAR		3155224	0					
ANR	3155323	ArgumentList	enc		3155224	1					
ANR	3155324	Argument	enc		3155224	0					
ANR	3155325	Identifier	enc		3155224	0					
ANR	3155326	Argument	ptr		3155224	1					
ANR	3155327	Identifier	ptr		3155224	0					
ANR	3155328	Argument	end		3155224	2					
ANR	3155329	Identifier	end		3155224	0					
ANR	3155330	AssignmentExpression	ptr += MINBPC ( enc )	433:56:11694:11711	3155224	2	True	+=			
ANR	3155331	Identifier	ptr		3155224	0					
ANR	3155332	CallExpression	MINBPC ( enc )		3155224	1					
ANR	3155333	Callee	MINBPC		3155224	0					
ANR	3155334	Identifier	MINBPC		3155224	0					
ANR	3155335	ArgumentList	enc		3155224	1					
ANR	3155336	Argument	enc		3155224	0					
ANR	3155337	Identifier	enc		3155224	0					
ANR	3155338	CompoundStatement		13:76:413:413	3155224	3					
ANR	3155339	SwitchStatement	"switch ( BYTE_TYPE ( enc , ptr ) )"		3155224	0					
ANR	3155340	Condition	"BYTE_TYPE ( enc , ptr )"	434:16:11732:11750	3155224	0	True				
ANR	3155341	CallExpression	"BYTE_TYPE ( enc , ptr )"		3155224	0					
ANR	3155342	Callee	BYTE_TYPE		3155224	0					
ANR	3155343	Identifier	BYTE_TYPE		3155224	0					
ANR	3155344	ArgumentList	enc		3155224	1					
ANR	3155345	Argument	enc		3155224	0					
ANR	3155346	Identifier	enc		3155224	0					
ANR	3155347	Argument	ptr		3155224	1					
ANR	3155348	Identifier	ptr		3155224	0					
ANR	3155349	CompoundStatement		14:37:452:452	3155224	1					
ANR	3155350	Label	case BT_S :	435:8:11763:11772	3155224	0	True				
ANR	3155351	Identifier	BT_S		3155224	0					
ANR	3155352	Label	case BT_CR :	435:19:11774:11784	3155224	1	True				
ANR	3155353	Identifier	BT_CR		3155224	0					
ANR	3155354	Label	case BT_LF :	435:31:11786:11796	3155224	2	True				
ANR	3155355	Identifier	BT_LF		3155224	0					
ANR	3155356	BreakStatement	break ;	436:10:11808:11813	3155224	3	True				
ANR	3155357	Label	case BT_GT :	437:8:11823:11833	3155224	4	True				
ANR	3155358	Identifier	BT_GT		3155224	0					
ANR	3155359	ExpressionStatement	* nextTokPtr = ptr + MINBPC ( enc )	438:10:11845:11876	3155224	5	True				
ANR	3155360	AssignmentExpression	* nextTokPtr = ptr + MINBPC ( enc )		3155224	0		=			
ANR	3155361	UnaryOperationExpression	* nextTokPtr		3155224	0					
ANR	3155362	UnaryOperator	*		3155224	0					
ANR	3155363	Identifier	nextTokPtr		3155224	1					
ANR	3155364	AdditiveExpression	ptr + MINBPC ( enc )		3155224	1		+			
ANR	3155365	Identifier	ptr		3155224	0					
ANR	3155366	CallExpression	MINBPC ( enc )		3155224	1					
ANR	3155367	Callee	MINBPC		3155224	0					
ANR	3155368	Identifier	MINBPC		3155224	0					
ANR	3155369	ArgumentList	enc		3155224	1					
ANR	3155370	Argument	enc		3155224	0					
ANR	3155371	Identifier	enc		3155224	0					
ANR	3155372	ReturnStatement	return XML_TOK_END_TAG ;	439:10:11888:11910	3155224	6	True				
ANR	3155373	Identifier	XML_TOK_END_TAG		3155224	0					
ANR	3155374	Label	default :	440:8:11920:11927	3155224	7	True				
ANR	3155375	Identifier	default		3155224	0					
ANR	3155376	ExpressionStatement	* nextTokPtr = ptr	441:10:11939:11956	3155224	8	True				
ANR	3155377	AssignmentExpression	* nextTokPtr = ptr		3155224	0		=			
ANR	3155378	UnaryOperationExpression	* nextTokPtr		3155224	0					
ANR	3155379	UnaryOperator	*		3155224	0					
ANR	3155380	Identifier	nextTokPtr		3155224	1					
ANR	3155381	Identifier	ptr		3155224	1					
ANR	3155382	ReturnStatement	return XML_TOK_INVALID ;	442:10:11968:11990	3155224	9	True				
ANR	3155383	Identifier	XML_TOK_INVALID		3155224	0					
ANR	3155384	ReturnStatement	return XML_TOK_PARTIAL ;	445:6:12016:12038	3155224	14	True				
ANR	3155385	Identifier	XML_TOK_PARTIAL		3155224	0					
ANR	3155386	Label	case BT_COLON :	447:4:12058:12071	3155224	15	True				
ANR	3155387	Identifier	BT_COLON		3155224	0					
ANR	3155388	ExpressionStatement	ptr += MINBPC ( enc )	450:6:12169:12187	3155224	16	True				
ANR	3155389	AssignmentExpression	ptr += MINBPC ( enc )		3155224	0		+=			
ANR	3155390	Identifier	ptr		3155224	0					
ANR	3155391	CallExpression	MINBPC ( enc )		3155224	1					
ANR	3155392	Callee	MINBPC		3155224	0					
ANR	3155393	Identifier	MINBPC		3155224	0					
ANR	3155394	ArgumentList	enc		3155224	1					
ANR	3155395	Argument	enc		3155224	0					
ANR	3155396	Identifier	enc		3155224	0					
ANR	3155397	BreakStatement	break ;	451:6:12195:12200	3155224	17	True				
ANR	3155398	Label	case BT_GT :	453:4:12213:12223	3155224	18	True				
ANR	3155399	Identifier	BT_GT		3155224	0					
ANR	3155400	ExpressionStatement	* nextTokPtr = ptr + MINBPC ( enc )	454:6:12231:12262	3155224	19	True				
ANR	3155401	AssignmentExpression	* nextTokPtr = ptr + MINBPC ( enc )		3155224	0		=			
ANR	3155402	UnaryOperationExpression	* nextTokPtr		3155224	0					
ANR	3155403	UnaryOperator	*		3155224	0					
ANR	3155404	Identifier	nextTokPtr		3155224	1					
ANR	3155405	AdditiveExpression	ptr + MINBPC ( enc )		3155224	1		+			
ANR	3155406	Identifier	ptr		3155224	0					
ANR	3155407	CallExpression	MINBPC ( enc )		3155224	1					
ANR	3155408	Callee	MINBPC		3155224	0					
ANR	3155409	Identifier	MINBPC		3155224	0					
ANR	3155410	ArgumentList	enc		3155224	1					
ANR	3155411	Argument	enc		3155224	0					
ANR	3155412	Identifier	enc		3155224	0					
ANR	3155413	ReturnStatement	return XML_TOK_END_TAG ;	455:6:12270:12292	3155224	20	True				
ANR	3155414	Identifier	XML_TOK_END_TAG		3155224	0					
ANR	3155415	Label	default :	456:4:12298:12305	3155224	21	True				
ANR	3155416	Identifier	default		3155224	0					
ANR	3155417	ExpressionStatement	* nextTokPtr = ptr	457:6:12313:12330	3155224	22	True				
ANR	3155418	AssignmentExpression	* nextTokPtr = ptr		3155224	0		=			
ANR	3155419	UnaryOperationExpression	* nextTokPtr		3155224	0					
ANR	3155420	UnaryOperator	*		3155224	0					
ANR	3155421	Identifier	nextTokPtr		3155224	1					
ANR	3155422	Identifier	ptr		3155224	1					
ANR	3155423	ReturnStatement	return XML_TOK_INVALID ;	458:6:12338:12360	3155224	23	True				
ANR	3155424	Identifier	XML_TOK_INVALID		3155224	0					
ANR	3155425	ReturnStatement	return XML_TOK_PARTIAL ;	461:2:12374:12396	3155224	3	True				
ANR	3155426	Identifier	XML_TOK_PARTIAL		3155224	0					
ANR	3155427	ReturnType	static int PTRCALL PREFIX		3155224	1					
ANR	3155428	Identifier	( scanEndTag )		3155224	2					
ANR	3155429	Identifier	scanEndTag		3155224	3					
ANR	3155430	ParameterList	"const ENCODING * enc , const char * ptr , const char * end , const char * * nextTokPtr"		3155224	4					
ANR	3155431	Parameter	const ENCODING * enc	419:19:11201:11219	3155224	0	True				
ANR	3155432	ParameterType	const ENCODING *		3155224	0					
ANR	3155433	Identifier	enc		3155224	1					
ANR	3155434	Parameter	const char * ptr	419:40:11222:11236	3155224	1	True				
ANR	3155435	ParameterType	const char *		3155224	0					
ANR	3155436	Identifier	ptr		3155224	1					
ANR	3155437	Parameter	const char * end	420:19:11258:11272	3155224	2	True				
ANR	3155438	ParameterType	const char *		3155224	0					
ANR	3155439	Identifier	end		3155224	1					
ANR	3155440	Parameter	const char * * nextTokPtr	420:36:11275:11297	3155224	3	True				
ANR	3155441	ParameterType	const char * *		3155224	0					
ANR	3155442	Identifier	nextTokPtr		3155224	1					
ANR	3155443	CFGEntryNode	ENTRY		3155224		True				
ANR	3155444	CFGExitNode	EXIT		3155224		True				
ANR	3155445	Symbol	XML_TOK_INVALID		3155224						
ANR	3155446	Symbol	nextTokPtr		3155224						
ANR	3155447	Symbol	XML_TOK_PARTIAL		3155224						
ANR	3155448	Symbol	BYTE_TYPE		3155224						
ANR	3155449	Symbol	XML_TOK_END_TAG		3155224						
ANR	3155450	Symbol	* nextTokPtr		3155224						
ANR	3155451	Symbol	end		3155224						
ANR	3155452	Symbol	enc		3155224						
ANR	3155453	Symbol	HAS_CHAR		3155224						
ANR	3155454	Symbol	MINBPC		3155224						
ANR	3155455	Symbol	ptr		3155224						
ANR	3155456	Function	scanHexCharRef	466:0:12448:13166							
ANR	3155457	FunctionDef	"scanHexCharRef (const ENCODING * enc , const char * ptr , const char * end , const char * * nextTokPtr)"		3155456	0					
ANR	3155458	CompoundStatement		469:0:12593:13166	3155456	0					
ANR	3155459	IfStatement	"if ( HAS_CHAR ( enc , ptr , end ) )"		3155456	0					
ANR	3155460	Condition	"HAS_CHAR ( enc , ptr , end )"	470:6:12601:12623	3155456	0	True				
ANR	3155461	CallExpression	"HAS_CHAR ( enc , ptr , end )"		3155456	0					
ANR	3155462	Callee	HAS_CHAR		3155456	0					
ANR	3155463	Identifier	HAS_CHAR		3155456	0					
ANR	3155464	ArgumentList	enc		3155456	1					
ANR	3155465	Argument	enc		3155456	0					
ANR	3155466	Identifier	enc		3155456	0					
ANR	3155467	Argument	ptr		3155456	1					
ANR	3155468	Identifier	ptr		3155456	0					
ANR	3155469	Argument	end		3155456	2					
ANR	3155470	Identifier	end		3155456	0					
ANR	3155471	CompoundStatement		2:31:32:32	3155456	1					
ANR	3155472	SwitchStatement	"switch ( BYTE_TYPE ( enc , ptr ) )"		3155456	0					
ANR	3155473	Condition	"BYTE_TYPE ( enc , ptr )"	471:12:12640:12658	3155456	0	True				
ANR	3155474	CallExpression	"BYTE_TYPE ( enc , ptr )"		3155456	0					
ANR	3155475	Callee	BYTE_TYPE		3155456	0					
ANR	3155476	Identifier	BYTE_TYPE		3155456	0					
ANR	3155477	ArgumentList	enc		3155456	1					
ANR	3155478	Argument	enc		3155456	0					
ANR	3155479	Identifier	enc		3155456	0					
ANR	3155480	Argument	ptr		3155456	1					
ANR	3155481	Identifier	ptr		3155456	0					
ANR	3155482	CompoundStatement		3:33:67:67	3155456	1					
ANR	3155483	Label	case BT_DIGIT :	472:4:12667:12680	3155456	0	True				
ANR	3155484	Identifier	BT_DIGIT		3155456	0					
ANR	3155485	Label	case BT_HEX :	473:4:12686:12697	3155456	1	True				
ANR	3155486	Identifier	BT_HEX		3155456	0					
ANR	3155487	BreakStatement	break ;	474:6:12705:12710	3155456	2	True				
ANR	3155488	Label	default :	475:4:12716:12723	3155456	3	True				
ANR	3155489	Identifier	default		3155456	0					
ANR	3155490	ExpressionStatement	* nextTokPtr = ptr	476:6:12731:12748	3155456	4	True				
ANR	3155491	AssignmentExpression	* nextTokPtr = ptr		3155456	0		=			
ANR	3155492	UnaryOperationExpression	* nextTokPtr		3155456	0					
ANR	3155493	UnaryOperator	*		3155456	0					
ANR	3155494	Identifier	nextTokPtr		3155456	1					
ANR	3155495	Identifier	ptr		3155456	1					
ANR	3155496	ReturnStatement	return XML_TOK_INVALID ;	477:6:12756:12778	3155456	5	True				
ANR	3155497	Identifier	XML_TOK_INVALID		3155456	0					
ANR	3155498	ForStatement	"for ( ptr += MINBPC ( enc ) ; HAS_CHAR ( enc , ptr , end ) ; ptr += MINBPC ( enc ) )"		3155456	1					
ANR	3155499	ForInit	ptr += MINBPC ( enc ) ;	479:9:12795:12813	3155456	0	True				
ANR	3155500	AssignmentExpression	ptr += MINBPC ( enc )		3155456	0		+=			
ANR	3155501	Identifier	ptr		3155456	0					
ANR	3155502	CallExpression	MINBPC ( enc )		3155456	1					
ANR	3155503	Callee	MINBPC		3155456	0					
ANR	3155504	Identifier	MINBPC		3155456	0					
ANR	3155505	ArgumentList	enc		3155456	1					
ANR	3155506	Argument	enc		3155456	0					
ANR	3155507	Identifier	enc		3155456	0					
ANR	3155508	Condition	"HAS_CHAR ( enc , ptr , end )"	479:29:12815:12837	3155456	1	True				
ANR	3155509	CallExpression	"HAS_CHAR ( enc , ptr , end )"		3155456	0					
ANR	3155510	Callee	HAS_CHAR		3155456	0					
ANR	3155511	Identifier	HAS_CHAR		3155456	0					
ANR	3155512	ArgumentList	enc		3155456	1					
ANR	3155513	Argument	enc		3155456	0					
ANR	3155514	Identifier	enc		3155456	0					
ANR	3155515	Argument	ptr		3155456	1					
ANR	3155516	Identifier	ptr		3155456	0					
ANR	3155517	Argument	end		3155456	2					
ANR	3155518	Identifier	end		3155456	0					
ANR	3155519	AssignmentExpression	ptr += MINBPC ( enc )	479:54:12840:12857	3155456	2	True	+=			
ANR	3155520	Identifier	ptr		3155456	0					
ANR	3155521	CallExpression	MINBPC ( enc )		3155456	1					
ANR	3155522	Callee	MINBPC		3155456	0					
ANR	3155523	Identifier	MINBPC		3155456	0					
ANR	3155524	ArgumentList	enc		3155456	1					
ANR	3155525	Argument	enc		3155456	0					
ANR	3155526	Identifier	enc		3155456	0					
ANR	3155527	CompoundStatement		11:74:266:266	3155456	3					
ANR	3155528	SwitchStatement	"switch ( BYTE_TYPE ( enc , ptr ) )"		3155456	0					
ANR	3155529	Condition	"BYTE_TYPE ( enc , ptr )"	480:14:12876:12894	3155456	0	True				
ANR	3155530	CallExpression	"BYTE_TYPE ( enc , ptr )"		3155456	0					
ANR	3155531	Callee	BYTE_TYPE		3155456	0					
ANR	3155532	Identifier	BYTE_TYPE		3155456	0					
ANR	3155533	ArgumentList	enc		3155456	1					
ANR	3155534	Argument	enc		3155456	0					
ANR	3155535	Identifier	enc		3155456	0					
ANR	3155536	Argument	ptr		3155456	1					
ANR	3155537	Identifier	ptr		3155456	0					
ANR	3155538	CompoundStatement		12:35:303:303	3155456	1					
ANR	3155539	Label	case BT_DIGIT :	481:6:12905:12918	3155456	0	True				
ANR	3155540	Identifier	BT_DIGIT		3155456	0					
ANR	3155541	Label	case BT_HEX :	482:6:12926:12937	3155456	1	True				
ANR	3155542	Identifier	BT_HEX		3155456	0					
ANR	3155543	BreakStatement	break ;	483:8:12947:12952	3155456	2	True				
ANR	3155544	Label	case BT_SEMI :	484:6:12960:12972	3155456	3	True				
ANR	3155545	Identifier	BT_SEMI		3155456	0					
ANR	3155546	ExpressionStatement	* nextTokPtr = ptr + MINBPC ( enc )	485:8:12982:13013	3155456	4	True				
ANR	3155547	AssignmentExpression	* nextTokPtr = ptr + MINBPC ( enc )		3155456	0		=			
ANR	3155548	UnaryOperationExpression	* nextTokPtr		3155456	0					
ANR	3155549	UnaryOperator	*		3155456	0					
ANR	3155550	Identifier	nextTokPtr		3155456	1					
ANR	3155551	AdditiveExpression	ptr + MINBPC ( enc )		3155456	1		+			
ANR	3155552	Identifier	ptr		3155456	0					
ANR	3155553	CallExpression	MINBPC ( enc )		3155456	1					
ANR	3155554	Callee	MINBPC		3155456	0					
ANR	3155555	Identifier	MINBPC		3155456	0					
ANR	3155556	ArgumentList	enc		3155456	1					
ANR	3155557	Argument	enc		3155456	0					
ANR	3155558	Identifier	enc		3155456	0					
ANR	3155559	ReturnStatement	return XML_TOK_CHAR_REF ;	486:8:13023:13046	3155456	5	True				
ANR	3155560	Identifier	XML_TOK_CHAR_REF		3155456	0					
ANR	3155561	Label	default :	487:6:13054:13061	3155456	6	True				
ANR	3155562	Identifier	default		3155456	0					
ANR	3155563	ExpressionStatement	* nextTokPtr = ptr	488:8:13071:13088	3155456	7	True				
ANR	3155564	AssignmentExpression	* nextTokPtr = ptr		3155456	0		=			
ANR	3155565	UnaryOperationExpression	* nextTokPtr		3155456	0					
ANR	3155566	UnaryOperator	*		3155456	0					
ANR	3155567	Identifier	nextTokPtr		3155456	1					
ANR	3155568	Identifier	ptr		3155456	1					
ANR	3155569	ReturnStatement	return XML_TOK_INVALID ;	489:8:13098:13120	3155456	8	True				
ANR	3155570	Identifier	XML_TOK_INVALID		3155456	0					
ANR	3155571	ReturnStatement	return XML_TOK_PARTIAL ;	493:2:13142:13164	3155456	1	True				
ANR	3155572	Identifier	XML_TOK_PARTIAL		3155456	0					
ANR	3155573	ReturnType	static int PTRCALL PREFIX		3155456	1					
ANR	3155574	Identifier	( scanHexCharRef )		3155456	2					
ANR	3155575	Identifier	scanHexCharRef		3155456	3					
ANR	3155576	ParameterList	"const ENCODING * enc , const char * ptr , const char * end , const char * * nextTokPtr"		3155456	4					
ANR	3155577	Parameter	const ENCODING * enc	467:23:12490:12508	3155456	0	True				
ANR	3155578	ParameterType	const ENCODING *		3155456	0					
ANR	3155579	Identifier	enc		3155456	1					
ANR	3155580	Parameter	const char * ptr	467:44:12511:12525	3155456	1	True				
ANR	3155581	ParameterType	const char *		3155456	0					
ANR	3155582	Identifier	ptr		3155456	1					
ANR	3155583	Parameter	const char * end	468:23:12551:12565	3155456	2	True				
ANR	3155584	ParameterType	const char *		3155456	0					
ANR	3155585	Identifier	end		3155456	1					
ANR	3155586	Parameter	const char * * nextTokPtr	468:40:12568:12590	3155456	3	True				
ANR	3155587	ParameterType	const char * *		3155456	0					
ANR	3155588	Identifier	nextTokPtr		3155456	1					
ANR	3155589	CFGEntryNode	ENTRY		3155456		True				
ANR	3155590	CFGExitNode	EXIT		3155456		True				
ANR	3155591	Symbol	XML_TOK_INVALID		3155456						
ANR	3155592	Symbol	nextTokPtr		3155456						
ANR	3155593	Symbol	XML_TOK_PARTIAL		3155456						
ANR	3155594	Symbol	BYTE_TYPE		3155456						
ANR	3155595	Symbol	* nextTokPtr		3155456						
ANR	3155596	Symbol	end		3155456						
ANR	3155597	Symbol	XML_TOK_CHAR_REF		3155456						
ANR	3155598	Symbol	enc		3155456						
ANR	3155599	Symbol	HAS_CHAR		3155456						
ANR	3155600	Symbol	MINBPC		3155456						
ANR	3155601	Symbol	ptr		3155456						
ANR	3155602	Function	scanCharRef	498:0:13215:14010							
ANR	3155603	FunctionDef	"scanCharRef (const ENCODING * enc , const char * ptr , const char * end , const char * * nextTokPtr)"		3155602	0					
ANR	3155604	CompoundStatement		501:0:13354:14010	3155602	0					
ANR	3155605	IfStatement	"if ( HAS_CHAR ( enc , ptr , end ) )"		3155602	0					
ANR	3155606	Condition	"HAS_CHAR ( enc , ptr , end )"	502:6:13362:13384	3155602	0	True				
ANR	3155607	CallExpression	"HAS_CHAR ( enc , ptr , end )"		3155602	0					
ANR	3155608	Callee	HAS_CHAR		3155602	0					
ANR	3155609	Identifier	HAS_CHAR		3155602	0					
ANR	3155610	ArgumentList	enc		3155602	1					
ANR	3155611	Argument	enc		3155602	0					
ANR	3155612	Identifier	enc		3155602	0					
ANR	3155613	Argument	ptr		3155602	1					
ANR	3155614	Identifier	ptr		3155602	0					
ANR	3155615	Argument	end		3155602	2					
ANR	3155616	Identifier	end		3155602	0					
ANR	3155617	CompoundStatement		2:31:32:32	3155602	1					
ANR	3155618	IfStatement	"if ( CHAR_MATCHES ( enc , ptr , ASCII_x ) )"		3155602	0					
ANR	3155619	Condition	"CHAR_MATCHES ( enc , ptr , ASCII_x )"	503:8:13397:13427	3155602	0	True				
ANR	3155620	CallExpression	"CHAR_MATCHES ( enc , ptr , ASCII_x )"		3155602	0					
ANR	3155621	Callee	CHAR_MATCHES		3155602	0					
ANR	3155622	Identifier	CHAR_MATCHES		3155602	0					
ANR	3155623	ArgumentList	enc		3155602	1					
ANR	3155624	Argument	enc		3155602	0					
ANR	3155625	Identifier	enc		3155602	0					
ANR	3155626	Argument	ptr		3155602	1					
ANR	3155627	Identifier	ptr		3155602	0					
ANR	3155628	Argument	ASCII_x		3155602	2					
ANR	3155629	Identifier	ASCII_x		3155602	0					
ANR	3155630	ReturnStatement	"return PREFIX ( scanHexCharRef ) ( enc , ptr + MINBPC ( enc ) , end , nextTokPtr ) ;"	504:6:13436:13506	3155602	1	True				
ANR	3155631	CallExpression	"PREFIX ( scanHexCharRef ) ( enc , ptr + MINBPC ( enc ) , end , nextTokPtr )"		3155602	0					
ANR	3155632	Callee	PREFIX ( scanHexCharRef )		3155602	0					
ANR	3155633	CallExpression	PREFIX ( scanHexCharRef )		3155602	0					
ANR	3155634	Callee	PREFIX		3155602	0					
ANR	3155635	Identifier	PREFIX		3155602	0					
ANR	3155636	ArgumentList	scanHexCharRef		3155602	1					
ANR	3155637	Argument	scanHexCharRef		3155602	0					
ANR	3155638	Identifier	scanHexCharRef		3155602	0					
ANR	3155639	ArgumentList	enc		3155602	1					
ANR	3155640	Argument	enc		3155602	0					
ANR	3155641	Identifier	enc		3155602	0					
ANR	3155642	Argument	ptr + MINBPC ( enc )		3155602	1					
ANR	3155643	AdditiveExpression	ptr + MINBPC ( enc )		3155602	0		+			
ANR	3155644	Identifier	ptr		3155602	0					
ANR	3155645	CallExpression	MINBPC ( enc )		3155602	1					
ANR	3155646	Callee	MINBPC		3155602	0					
ANR	3155647	Identifier	MINBPC		3155602	0					
ANR	3155648	ArgumentList	enc		3155602	1					
ANR	3155649	Argument	enc		3155602	0					
ANR	3155650	Identifier	enc		3155602	0					
ANR	3155651	Argument	end		3155602	2					
ANR	3155652	Identifier	end		3155602	0					
ANR	3155653	Argument	nextTokPtr		3155602	3					
ANR	3155654	Identifier	nextTokPtr		3155602	0					
ANR	3155655	SwitchStatement	"switch ( BYTE_TYPE ( enc , ptr ) )"		3155602	1					
ANR	3155656	Condition	"BYTE_TYPE ( enc , ptr )"	505:12:13520:13538	3155602	0	True				
ANR	3155657	CallExpression	"BYTE_TYPE ( enc , ptr )"		3155602	0					
ANR	3155658	Callee	BYTE_TYPE		3155602	0					
ANR	3155659	Identifier	BYTE_TYPE		3155602	0					
ANR	3155660	ArgumentList	enc		3155602	1					
ANR	3155661	Argument	enc		3155602	0					
ANR	3155662	Identifier	enc		3155602	0					
ANR	3155663	Argument	ptr		3155602	1					
ANR	3155664	Identifier	ptr		3155602	0					
ANR	3155665	CompoundStatement		5:33:186:186	3155602	1					
ANR	3155666	Label	case BT_DIGIT :	506:4:13547:13560	3155602	0	True				
ANR	3155667	Identifier	BT_DIGIT		3155602	0					
ANR	3155668	BreakStatement	break ;	507:6:13568:13573	3155602	1	True				
ANR	3155669	Label	default :	508:4:13579:13586	3155602	2	True				
ANR	3155670	Identifier	default		3155602	0					
ANR	3155671	ExpressionStatement	* nextTokPtr = ptr	509:6:13594:13611	3155602	3	True				
ANR	3155672	AssignmentExpression	* nextTokPtr = ptr		3155602	0		=			
ANR	3155673	UnaryOperationExpression	* nextTokPtr		3155602	0					
ANR	3155674	UnaryOperator	*		3155602	0					
ANR	3155675	Identifier	nextTokPtr		3155602	1					
ANR	3155676	Identifier	ptr		3155602	1					
ANR	3155677	ReturnStatement	return XML_TOK_INVALID ;	510:6:13619:13641	3155602	4	True				
ANR	3155678	Identifier	XML_TOK_INVALID		3155602	0					
ANR	3155679	ForStatement	"for ( ptr += MINBPC ( enc ) ; HAS_CHAR ( enc , ptr , end ) ; ptr += MINBPC ( enc ) )"		3155602	2					
ANR	3155680	ForInit	ptr += MINBPC ( enc ) ;	512:9:13658:13676	3155602	0	True				
ANR	3155681	AssignmentExpression	ptr += MINBPC ( enc )		3155602	0		+=			
ANR	3155682	Identifier	ptr		3155602	0					
ANR	3155683	CallExpression	MINBPC ( enc )		3155602	1					
ANR	3155684	Callee	MINBPC		3155602	0					
ANR	3155685	Identifier	MINBPC		3155602	0					
ANR	3155686	ArgumentList	enc		3155602	1					
ANR	3155687	Argument	enc		3155602	0					
ANR	3155688	Identifier	enc		3155602	0					
ANR	3155689	Condition	"HAS_CHAR ( enc , ptr , end )"	512:29:13678:13700	3155602	1	True				
ANR	3155690	CallExpression	"HAS_CHAR ( enc , ptr , end )"		3155602	0					
ANR	3155691	Callee	HAS_CHAR		3155602	0					
ANR	3155692	Identifier	HAS_CHAR		3155602	0					
ANR	3155693	ArgumentList	enc		3155602	1					
ANR	3155694	Argument	enc		3155602	0					
ANR	3155695	Identifier	enc		3155602	0					
ANR	3155696	Argument	ptr		3155602	1					
ANR	3155697	Identifier	ptr		3155602	0					
ANR	3155698	Argument	end		3155602	2					
ANR	3155699	Identifier	end		3155602	0					
ANR	3155700	AssignmentExpression	ptr += MINBPC ( enc )	512:54:13703:13720	3155602	2	True	+=			
ANR	3155701	Identifier	ptr		3155602	0					
ANR	3155702	CallExpression	MINBPC ( enc )		3155602	1					
ANR	3155703	Callee	MINBPC		3155602	0					
ANR	3155704	Identifier	MINBPC		3155602	0					
ANR	3155705	ArgumentList	enc		3155602	1					
ANR	3155706	Argument	enc		3155602	0					
ANR	3155707	Identifier	enc		3155602	0					
ANR	3155708	CompoundStatement		12:74:368:368	3155602	3					
ANR	3155709	SwitchStatement	"switch ( BYTE_TYPE ( enc , ptr ) )"		3155602	0					
ANR	3155710	Condition	"BYTE_TYPE ( enc , ptr )"	513:14:13739:13757	3155602	0	True				
ANR	3155711	CallExpression	"BYTE_TYPE ( enc , ptr )"		3155602	0					
ANR	3155712	Callee	BYTE_TYPE		3155602	0					
ANR	3155713	Identifier	BYTE_TYPE		3155602	0					
ANR	3155714	ArgumentList	enc		3155602	1					
ANR	3155715	Argument	enc		3155602	0					
ANR	3155716	Identifier	enc		3155602	0					
ANR	3155717	Argument	ptr		3155602	1					
ANR	3155718	Identifier	ptr		3155602	0					
ANR	3155719	CompoundStatement		13:35:405:405	3155602	1					
ANR	3155720	Label	case BT_DIGIT :	514:6:13768:13781	3155602	0	True				
ANR	3155721	Identifier	BT_DIGIT		3155602	0					
ANR	3155722	BreakStatement	break ;	515:8:13791:13796	3155602	1	True				
ANR	3155723	Label	case BT_SEMI :	516:6:13804:13816	3155602	2	True				
ANR	3155724	Identifier	BT_SEMI		3155602	0					
ANR	3155725	ExpressionStatement	* nextTokPtr = ptr + MINBPC ( enc )	517:8:13826:13857	3155602	3	True				
ANR	3155726	AssignmentExpression	* nextTokPtr = ptr + MINBPC ( enc )		3155602	0		=			
ANR	3155727	UnaryOperationExpression	* nextTokPtr		3155602	0					
ANR	3155728	UnaryOperator	*		3155602	0					
ANR	3155729	Identifier	nextTokPtr		3155602	1					
ANR	3155730	AdditiveExpression	ptr + MINBPC ( enc )		3155602	1		+			
ANR	3155731	Identifier	ptr		3155602	0					
ANR	3155732	CallExpression	MINBPC ( enc )		3155602	1					
ANR	3155733	Callee	MINBPC		3155602	0					
ANR	3155734	Identifier	MINBPC		3155602	0					
ANR	3155735	ArgumentList	enc		3155602	1					
ANR	3155736	Argument	enc		3155602	0					
ANR	3155737	Identifier	enc		3155602	0					
ANR	3155738	ReturnStatement	return XML_TOK_CHAR_REF ;	518:8:13867:13890	3155602	4	True				
ANR	3155739	Identifier	XML_TOK_CHAR_REF		3155602	0					
ANR	3155740	Label	default :	519:6:13898:13905	3155602	5	True				
ANR	3155741	Identifier	default		3155602	0					
ANR	3155742	ExpressionStatement	* nextTokPtr = ptr	520:8:13915:13932	3155602	6	True				
ANR	3155743	AssignmentExpression	* nextTokPtr = ptr		3155602	0		=			
ANR	3155744	UnaryOperationExpression	* nextTokPtr		3155602	0					
ANR	3155745	UnaryOperator	*		3155602	0					
ANR	3155746	Identifier	nextTokPtr		3155602	1					
ANR	3155747	Identifier	ptr		3155602	1					
ANR	3155748	ReturnStatement	return XML_TOK_INVALID ;	521:8:13942:13964	3155602	7	True				
ANR	3155749	Identifier	XML_TOK_INVALID		3155602	0					
ANR	3155750	ReturnStatement	return XML_TOK_PARTIAL ;	525:2:13986:14008	3155602	1	True				
ANR	3155751	Identifier	XML_TOK_PARTIAL		3155602	0					
ANR	3155752	ReturnType	static int PTRCALL PREFIX		3155602	1					
ANR	3155753	Identifier	( scanCharRef )		3155602	2					
ANR	3155754	Identifier	scanCharRef		3155602	3					
ANR	3155755	ParameterList	"const ENCODING * enc , const char * ptr , const char * end , const char * * nextTokPtr"		3155602	4					
ANR	3155756	Parameter	const ENCODING * enc	499:20:13254:13272	3155602	0	True				
ANR	3155757	ParameterType	const ENCODING *		3155602	0					
ANR	3155758	Identifier	enc		3155602	1					
ANR	3155759	Parameter	const char * ptr	499:41:13275:13289	3155602	1	True				
ANR	3155760	ParameterType	const char *		3155602	0					
ANR	3155761	Identifier	ptr		3155602	1					
ANR	3155762	Parameter	const char * end	500:20:13312:13326	3155602	2	True				
ANR	3155763	ParameterType	const char *		3155602	0					
ANR	3155764	Identifier	end		3155602	1					
ANR	3155765	Parameter	const char * * nextTokPtr	500:37:13329:13351	3155602	3	True				
ANR	3155766	ParameterType	const char * *		3155602	0					
ANR	3155767	Identifier	nextTokPtr		3155602	1					
ANR	3155768	CFGEntryNode	ENTRY		3155602		True				
ANR	3155769	CFGExitNode	EXIT		3155602		True				
ANR	3155770	Symbol	XML_TOK_INVALID		3155602						
ANR	3155771	Symbol	nextTokPtr		3155602						
ANR	3155772	Symbol	ASCII_x		3155602						
ANR	3155773	Symbol	scanHexCharRef		3155602						
ANR	3155774	Symbol	XML_TOK_PARTIAL		3155602						
ANR	3155775	Symbol	BYTE_TYPE		3155602						
ANR	3155776	Symbol	* nextTokPtr		3155602						
ANR	3155777	Symbol	XML_TOK_CHAR_REF		3155602						
ANR	3155778	Symbol	MINBPC		3155602						
ANR	3155779	Symbol	ptr		3155602						
ANR	3155780	Symbol	CHAR_MATCHES		3155602						
ANR	3155781	Symbol	PREFIX		3155602						
ANR	3155782	Symbol	end		3155602						
ANR	3155783	Symbol	enc		3155602						
ANR	3155784	Symbol	HAS_CHAR		3155602						
ANR	3155785	Function	scanRef	530:0:14058:14770							
ANR	3155786	FunctionDef	"scanRef (const ENCODING * enc , const char * ptr , const char * end , const char * * nextTokPtr)"		3155785	0					
ANR	3155787	CompoundStatement		533:0:14189:14770	3155785	0					
ANR	3155788	ExpressionStatement	"REQUIRE_CHAR ( enc , ptr , end )"	534:2:14193:14220	3155785	0	True				
ANR	3155789	CallExpression	"REQUIRE_CHAR ( enc , ptr , end )"		3155785	0					
ANR	3155790	Callee	REQUIRE_CHAR		3155785	0					
ANR	3155791	Identifier	REQUIRE_CHAR		3155785	0					
ANR	3155792	ArgumentList	enc		3155785	1					
ANR	3155793	Argument	enc		3155785	0					
ANR	3155794	Identifier	enc		3155785	0					
ANR	3155795	Argument	ptr		3155785	1					
ANR	3155796	Identifier	ptr		3155785	0					
ANR	3155797	Argument	end		3155785	2					
ANR	3155798	Identifier	end		3155785	0					
ANR	3155799	SwitchStatement	"switch ( BYTE_TYPE ( enc , ptr ) )"		3155785	1					
ANR	3155800	Condition	"BYTE_TYPE ( enc , ptr )"	535:10:14232:14250	3155785	0	True				
ANR	3155801	CallExpression	"BYTE_TYPE ( enc , ptr )"		3155785	0					
ANR	3155802	Callee	BYTE_TYPE		3155785	0					
ANR	3155803	Identifier	BYTE_TYPE		3155785	0					
ANR	3155804	ArgumentList	enc		3155785	1					
ANR	3155805	Argument	enc		3155785	0					
ANR	3155806	Identifier	enc		3155785	0					
ANR	3155807	Argument	ptr		3155785	1					
ANR	3155808	Identifier	ptr		3155785	0					
ANR	3155809	CompoundStatement		3:31:63:63	3155785	1					
ANR	3155810	Statement	CHECK_NMSTRT_CASES	536:2:14257:14274	3155785	0	True				
ANR	3155811	Statement	(	536:20:14275:14275	3155785	1	True				
ANR	3155812	Statement	enc	536:21:14276:14278	3155785	2	True				
ANR	3155813	Statement	","	536:24:14279:14279	3155785	3	True				
ANR	3155814	Statement	ptr	536:26:14281:14283	3155785	4	True				
ANR	3155815	Statement	","	536:29:14284:14284	3155785	5	True				
ANR	3155816	Statement	end	536:31:14286:14288	3155785	6	True				
ANR	3155817	Statement	","	536:34:14289:14289	3155785	7	True				
ANR	3155818	Statement	nextTokPtr	536:36:14291:14300	3155785	8	True				
ANR	3155819	Statement	)	536:46:14301:14301	3155785	9	True				
ANR	3155820	Label	case BT_NUM :	537:2:14305:14316	3155785	10	True				
ANR	3155821	Identifier	BT_NUM		3155785	0					
ANR	3155822	ReturnStatement	"return PREFIX ( scanCharRef ) ( enc , ptr + MINBPC ( enc ) , end , nextTokPtr ) ;"	538:4:14322:14389	3155785	11	True				
ANR	3155823	CallExpression	"PREFIX ( scanCharRef ) ( enc , ptr + MINBPC ( enc ) , end , nextTokPtr )"		3155785	0					
ANR	3155824	Callee	PREFIX ( scanCharRef )		3155785	0					
ANR	3155825	CallExpression	PREFIX ( scanCharRef )		3155785	0					
ANR	3155826	Callee	PREFIX		3155785	0					
ANR	3155827	Identifier	PREFIX		3155785	0					
ANR	3155828	ArgumentList	scanCharRef		3155785	1					
ANR	3155829	Argument	scanCharRef		3155785	0					
ANR	3155830	Identifier	scanCharRef		3155785	0					
ANR	3155831	ArgumentList	enc		3155785	1					
ANR	3155832	Argument	enc		3155785	0					
ANR	3155833	Identifier	enc		3155785	0					
ANR	3155834	Argument	ptr + MINBPC ( enc )		3155785	1					
ANR	3155835	AdditiveExpression	ptr + MINBPC ( enc )		3155785	0		+			
ANR	3155836	Identifier	ptr		3155785	0					
ANR	3155837	CallExpression	MINBPC ( enc )		3155785	1					
ANR	3155838	Callee	MINBPC		3155785	0					
ANR	3155839	Identifier	MINBPC		3155785	0					
ANR	3155840	ArgumentList	enc		3155785	1					
ANR	3155841	Argument	enc		3155785	0					
ANR	3155842	Identifier	enc		3155785	0					
ANR	3155843	Argument	end		3155785	2					
ANR	3155844	Identifier	end		3155785	0					
ANR	3155845	Argument	nextTokPtr		3155785	3					
ANR	3155846	Identifier	nextTokPtr		3155785	0					
ANR	3155847	Label	default :	539:2:14393:14400	3155785	12	True				
ANR	3155848	Identifier	default		3155785	0					
ANR	3155849	ExpressionStatement	* nextTokPtr = ptr	540:4:14406:14423	3155785	13	True				
ANR	3155850	AssignmentExpression	* nextTokPtr = ptr		3155785	0		=			
ANR	3155851	UnaryOperationExpression	* nextTokPtr		3155785	0					
ANR	3155852	UnaryOperator	*		3155785	0					
ANR	3155853	Identifier	nextTokPtr		3155785	1					
ANR	3155854	Identifier	ptr		3155785	1					
ANR	3155855	ReturnStatement	return XML_TOK_INVALID ;	541:4:14429:14451	3155785	14	True				
ANR	3155856	Identifier	XML_TOK_INVALID		3155785	0					
ANR	3155857	WhileStatement	"while ( HAS_CHAR ( enc , ptr , end ) )"		3155785	2					
ANR	3155858	Condition	"HAS_CHAR ( enc , ptr , end )"	543:9:14466:14488	3155785	0	True				
ANR	3155859	CallExpression	"HAS_CHAR ( enc , ptr , end )"		3155785	0					
ANR	3155860	Callee	HAS_CHAR		3155785	0					
ANR	3155861	Identifier	HAS_CHAR		3155785	0					
ANR	3155862	ArgumentList	enc		3155785	1					
ANR	3155863	Argument	enc		3155785	0					
ANR	3155864	Identifier	enc		3155785	0					
ANR	3155865	Argument	ptr		3155785	1					
ANR	3155866	Identifier	ptr		3155785	0					
ANR	3155867	Argument	end		3155785	2					
ANR	3155868	Identifier	end		3155785	0					
ANR	3155869	CompoundStatement		11:34:301:301	3155785	1					
ANR	3155870	SwitchStatement	"switch ( BYTE_TYPE ( enc , ptr ) )"		3155785	0					
ANR	3155871	Condition	"BYTE_TYPE ( enc , ptr )"	544:12:14505:14523	3155785	0	True				
ANR	3155872	CallExpression	"BYTE_TYPE ( enc , ptr )"		3155785	0					
ANR	3155873	Callee	BYTE_TYPE		3155785	0					
ANR	3155874	Identifier	BYTE_TYPE		3155785	0					
ANR	3155875	ArgumentList	enc		3155785	1					
ANR	3155876	Argument	enc		3155785	0					
ANR	3155877	Identifier	enc		3155785	0					
ANR	3155878	Argument	ptr		3155785	1					
ANR	3155879	Identifier	ptr		3155785	0					
ANR	3155880	CompoundStatement		12:33:336:336	3155785	1					
ANR	3155881	Statement	CHECK_NAME_CASES	545:4:14532:14547	3155785	0	True				
ANR	3155882	Statement	(	545:20:14548:14548	3155785	1	True				
ANR	3155883	Statement	enc	545:21:14549:14551	3155785	2	True				
ANR	3155884	Statement	","	545:24:14552:14552	3155785	3	True				
ANR	3155885	Statement	ptr	545:26:14554:14556	3155785	4	True				
ANR	3155886	Statement	","	545:29:14557:14557	3155785	5	True				
ANR	3155887	Statement	end	545:31:14559:14561	3155785	6	True				
ANR	3155888	Statement	","	545:34:14562:14562	3155785	7	True				
ANR	3155889	Statement	nextTokPtr	545:36:14564:14573	3155785	8	True				
ANR	3155890	Statement	)	545:46:14574:14574	3155785	9	True				
ANR	3155891	Label	case BT_SEMI :	546:4:14580:14592	3155785	10	True				
ANR	3155892	Identifier	BT_SEMI		3155785	0					
ANR	3155893	ExpressionStatement	* nextTokPtr = ptr + MINBPC ( enc )	547:6:14600:14631	3155785	11	True				
ANR	3155894	AssignmentExpression	* nextTokPtr = ptr + MINBPC ( enc )		3155785	0		=			
ANR	3155895	UnaryOperationExpression	* nextTokPtr		3155785	0					
ANR	3155896	UnaryOperator	*		3155785	0					
ANR	3155897	Identifier	nextTokPtr		3155785	1					
ANR	3155898	AdditiveExpression	ptr + MINBPC ( enc )		3155785	1		+			
ANR	3155899	Identifier	ptr		3155785	0					
ANR	3155900	CallExpression	MINBPC ( enc )		3155785	1					
ANR	3155901	Callee	MINBPC		3155785	0					
ANR	3155902	Identifier	MINBPC		3155785	0					
ANR	3155903	ArgumentList	enc		3155785	1					
ANR	3155904	Argument	enc		3155785	0					
ANR	3155905	Identifier	enc		3155785	0					
ANR	3155906	ReturnStatement	return XML_TOK_ENTITY_REF ;	548:6:14639:14664	3155785	12	True				
ANR	3155907	Identifier	XML_TOK_ENTITY_REF		3155785	0					
ANR	3155908	Label	default :	549:4:14670:14677	3155785	13	True				
ANR	3155909	Identifier	default		3155785	0					
ANR	3155910	ExpressionStatement	* nextTokPtr = ptr	550:6:14685:14702	3155785	14	True				
ANR	3155911	AssignmentExpression	* nextTokPtr = ptr		3155785	0		=			
ANR	3155912	UnaryOperationExpression	* nextTokPtr		3155785	0					
ANR	3155913	UnaryOperator	*		3155785	0					
ANR	3155914	Identifier	nextTokPtr		3155785	1					
ANR	3155915	Identifier	ptr		3155785	1					
ANR	3155916	ReturnStatement	return XML_TOK_INVALID ;	551:6:14710:14732	3155785	15	True				
ANR	3155917	Identifier	XML_TOK_INVALID		3155785	0					
ANR	3155918	ReturnStatement	return XML_TOK_PARTIAL ;	554:2:14746:14768	3155785	3	True				
ANR	3155919	Identifier	XML_TOK_PARTIAL		3155785	0					
ANR	3155920	ReturnType	static int PTRCALL PREFIX		3155785	1					
ANR	3155921	Identifier	( scanRef )		3155785	2					
ANR	3155922	Identifier	scanRef		3155785	3					
ANR	3155923	ParameterList	"const ENCODING * enc , const char * ptr , const char * end , const char * * nextTokPtr"		3155785	4					
ANR	3155924	Parameter	const ENCODING * enc	531:16:14093:14111	3155785	0	True				
ANR	3155925	ParameterType	const ENCODING *		3155785	0					
ANR	3155926	Identifier	enc		3155785	1					
ANR	3155927	Parameter	const char * ptr	531:37:14114:14128	3155785	1	True				
ANR	3155928	ParameterType	const char *		3155785	0					
ANR	3155929	Identifier	ptr		3155785	1					
ANR	3155930	Parameter	const char * end	531:54:14131:14145	3155785	2	True				
ANR	3155931	ParameterType	const char *		3155785	0					
ANR	3155932	Identifier	end		3155785	1					
ANR	3155933	Parameter	const char * * nextTokPtr	532:16:14164:14186	3155785	3	True				
ANR	3155934	ParameterType	const char * *		3155785	0					
ANR	3155935	Identifier	nextTokPtr		3155785	1					
ANR	3155936	CFGEntryNode	ENTRY		3155785		True				
ANR	3155937	CFGExitNode	EXIT		3155785		True				
ANR	3155938	Symbol	XML_TOK_INVALID		3155785						
ANR	3155939	Symbol	XML_TOK_ENTITY_REF		3155785						
ANR	3155940	Symbol	nextTokPtr		3155785						
ANR	3155941	Symbol	XML_TOK_PARTIAL		3155785						
ANR	3155942	Symbol	BYTE_TYPE		3155785						
ANR	3155943	Symbol	* nextTokPtr		3155785						
ANR	3155944	Symbol	MINBPC		3155785						
ANR	3155945	Symbol	ptr		3155785						
ANR	3155946	Symbol	PREFIX		3155785						
ANR	3155947	Symbol	scanCharRef		3155785						
ANR	3155948	Symbol	end		3155785						
ANR	3155949	Symbol	enc		3155785						
ANR	3155950	Symbol	HAS_CHAR		3155785						
ANR	3155951	Function	scanAtts	559:0:14848:18606							
ANR	3155952	FunctionDef	"scanAtts (const ENCODING * enc , const char * ptr , const char * end , const char * * nextTokPtr)"		3155951	0					
ANR	3155953	CompoundStatement		562:0:14981:18606	3155951	0					
ANR	3155954	IdentifierDeclStatement	int hadColon = 0 ;	564:2:14999:15015	3155951	0	True				
ANR	3155955	IdentifierDecl	hadColon = 0		3155951	0					
ANR	3155956	IdentifierDeclType	int		3155951	0					
ANR	3155957	Identifier	hadColon		3155951	1					
ANR	3155958	AssignmentExpression	hadColon = 0		3155951	2		=			
ANR	3155959	Identifier	hadColon		3155951	0					
ANR	3155960	PrimaryExpression	0		3155951	1					
ANR	3155961	WhileStatement	"while ( HAS_CHAR ( enc , ptr , end ) )"		3155951	1					
ANR	3155962	Condition	"HAS_CHAR ( enc , ptr , end )"	566:9:15033:15055	3155951	0	True				
ANR	3155963	CallExpression	"HAS_CHAR ( enc , ptr , end )"		3155951	0					
ANR	3155964	Callee	HAS_CHAR		3155951	0					
ANR	3155965	Identifier	HAS_CHAR		3155951	0					
ANR	3155966	ArgumentList	enc		3155951	1					
ANR	3155967	Argument	enc		3155951	0					
ANR	3155968	Identifier	enc		3155951	0					
ANR	3155969	Argument	ptr		3155951	1					
ANR	3155970	Identifier	ptr		3155951	0					
ANR	3155971	Argument	end		3155951	2					
ANR	3155972	Identifier	end		3155951	0					
ANR	3155973	CompoundStatement		5:34:76:76	3155951	1					
ANR	3155974	SwitchStatement	"switch ( BYTE_TYPE ( enc , ptr ) )"		3155951	0					
ANR	3155975	Condition	"BYTE_TYPE ( enc , ptr )"	567:12:15072:15090	3155951	0	True				
ANR	3155976	CallExpression	"BYTE_TYPE ( enc , ptr )"		3155951	0					
ANR	3155977	Callee	BYTE_TYPE		3155951	0					
ANR	3155978	Identifier	BYTE_TYPE		3155951	0					
ANR	3155979	ArgumentList	enc		3155951	1					
ANR	3155980	Argument	enc		3155951	0					
ANR	3155981	Identifier	enc		3155951	0					
ANR	3155982	Argument	ptr		3155951	1					
ANR	3155983	Identifier	ptr		3155951	0					
ANR	3155984	CompoundStatement		6:33:111:111	3155951	1					
ANR	3155985	Statement	CHECK_NAME_CASES	568:4:15099:15114	3155951	0	True				
ANR	3155986	Statement	(	568:20:15115:15115	3155951	1	True				
ANR	3155987	Statement	enc	568:21:15116:15118	3155951	2	True				
ANR	3155988	Statement	","	568:24:15119:15119	3155951	3	True				
ANR	3155989	Statement	ptr	568:26:15121:15123	3155951	4	True				
ANR	3155990	Statement	","	568:29:15124:15124	3155951	5	True				
ANR	3155991	Statement	end	568:31:15126:15128	3155951	6	True				
ANR	3155992	Statement	","	568:34:15129:15129	3155951	7	True				
ANR	3155993	Statement	nextTokPtr	568:36:15131:15140	3155951	8	True				
ANR	3155994	Statement	)	568:46:15141:15141	3155951	9	True				
ANR	3155995	Label	case BT_COLON :	570:4:15161:15174	3155951	10	True				
ANR	3155996	Identifier	BT_COLON		3155951	0					
ANR	3155997	IfStatement	if ( hadColon )		3155951	11					
ANR	3155998	Condition	hadColon	571:10:15186:15193	3155951	0	True				
ANR	3155999	Identifier	hadColon		3155951	0					
ANR	3156000	CompoundStatement		10:20:214:214	3155951	1					
ANR	3156001	ExpressionStatement	* nextTokPtr = ptr	572:8:15206:15223	3155951	0	True				
ANR	3156002	AssignmentExpression	* nextTokPtr = ptr		3155951	0		=			
ANR	3156003	UnaryOperationExpression	* nextTokPtr		3155951	0					
ANR	3156004	UnaryOperator	*		3155951	0					
ANR	3156005	Identifier	nextTokPtr		3155951	1					
ANR	3156006	Identifier	ptr		3155951	1					
ANR	3156007	ReturnStatement	return XML_TOK_INVALID ;	573:8:15233:15255	3155951	1	True				
ANR	3156008	Identifier	XML_TOK_INVALID		3155951	0					
ANR	3156009	ExpressionStatement	hadColon = 1	575:6:15271:15283	3155951	12	True				
ANR	3156010	AssignmentExpression	hadColon = 1		3155951	0		=			
ANR	3156011	Identifier	hadColon		3155951	0					
ANR	3156012	PrimaryExpression	1		3155951	1					
ANR	3156013	ExpressionStatement	ptr += MINBPC ( enc )	576:6:15291:15309	3155951	13	True				
ANR	3156014	AssignmentExpression	ptr += MINBPC ( enc )		3155951	0		+=			
ANR	3156015	Identifier	ptr		3155951	0					
ANR	3156016	CallExpression	MINBPC ( enc )		3155951	1					
ANR	3156017	Callee	MINBPC		3155951	0					
ANR	3156018	Identifier	MINBPC		3155951	0					
ANR	3156019	ArgumentList	enc		3155951	1					
ANR	3156020	Argument	enc		3155951	0					
ANR	3156021	Identifier	enc		3155951	0					
ANR	3156022	ExpressionStatement	"REQUIRE_CHAR ( enc , ptr , end )"	577:6:15317:15344	3155951	14	True				
ANR	3156023	CallExpression	"REQUIRE_CHAR ( enc , ptr , end )"		3155951	0					
ANR	3156024	Callee	REQUIRE_CHAR		3155951	0					
ANR	3156025	Identifier	REQUIRE_CHAR		3155951	0					
ANR	3156026	ArgumentList	enc		3155951	1					
ANR	3156027	Argument	enc		3155951	0					
ANR	3156028	Identifier	enc		3155951	0					
ANR	3156029	Argument	ptr		3155951	1					
ANR	3156030	Identifier	ptr		3155951	0					
ANR	3156031	Argument	end		3155951	2					
ANR	3156032	Identifier	end		3155951	0					
ANR	3156033	SwitchStatement	"switch ( BYTE_TYPE ( enc , ptr ) )"		3155951	15					
ANR	3156034	Condition	"BYTE_TYPE ( enc , ptr )"	578:14:15360:15378	3155951	0	True				
ANR	3156035	CallExpression	"BYTE_TYPE ( enc , ptr )"		3155951	0					
ANR	3156036	Callee	BYTE_TYPE		3155951	0					
ANR	3156037	Identifier	BYTE_TYPE		3155951	0					
ANR	3156038	ArgumentList	enc		3155951	1					
ANR	3156039	Argument	enc		3155951	0					
ANR	3156040	Identifier	enc		3155951	0					
ANR	3156041	Argument	ptr		3155951	1					
ANR	3156042	Identifier	ptr		3155951	0					
ANR	3156043	CompoundStatement		17:35:399:399	3155951	1					
ANR	3156044	Statement	CHECK_NMSTRT_CASES	579:6:15389:15406	3155951	0	True				
ANR	3156045	Statement	(	579:24:15407:15407	3155951	1	True				
ANR	3156046	Statement	enc	579:25:15408:15410	3155951	2	True				
ANR	3156047	Statement	","	579:28:15411:15411	3155951	3	True				
ANR	3156048	Statement	ptr	579:30:15413:15415	3155951	4	True				
ANR	3156049	Statement	","	579:33:15416:15416	3155951	5	True				
ANR	3156050	Statement	end	579:35:15418:15420	3155951	6	True				
ANR	3156051	Statement	","	579:38:15421:15421	3155951	7	True				
ANR	3156052	Statement	nextTokPtr	579:40:15423:15432	3155951	8	True				
ANR	3156053	Statement	)	579:50:15433:15433	3155951	9	True				
ANR	3156054	Label	default :	580:6:15441:15448	3155951	10	True				
ANR	3156055	Identifier	default		3155951	0					
ANR	3156056	ExpressionStatement	* nextTokPtr = ptr	581:8:15458:15475	3155951	11	True				
ANR	3156057	AssignmentExpression	* nextTokPtr = ptr		3155951	0		=			
ANR	3156058	UnaryOperationExpression	* nextTokPtr		3155951	0					
ANR	3156059	UnaryOperator	*		3155951	0					
ANR	3156060	Identifier	nextTokPtr		3155951	1					
ANR	3156061	Identifier	ptr		3155951	1					
ANR	3156062	ReturnStatement	return XML_TOK_INVALID ;	582:8:15485:15507	3155951	12	True				
ANR	3156063	Identifier	XML_TOK_INVALID		3155951	0					
ANR	3156064	BreakStatement	break ;	584:6:15523:15528	3155951	16	True				
ANR	3156065	Label	case BT_S :	586:4:15541:15550	3155951	17	True				
ANR	3156066	Identifier	BT_S		3155951	0					
ANR	3156067	Label	case BT_CR :	586:15:15552:15562	3155951	18	True				
ANR	3156068	Identifier	BT_CR		3155951	0					
ANR	3156069	Label	case BT_LF :	586:27:15564:15574	3155951	19	True				
ANR	3156070	Identifier	BT_LF		3155951	0					
ANR	3156071	ForStatement	for ( ; ; )		3155951	20					
ANR	3156072	CompoundStatement		27:8:619:624	3155951	0					
ANR	3156073	IdentifierDeclStatement	int t ;	588:8:15601:15606	3155951	0	True				
ANR	3156074	IdentifierDecl	t		3155951	0					
ANR	3156075	IdentifierDeclType	int		3155951	0					
ANR	3156076	Identifier	t		3155951	1					
ANR	3156077	ExpressionStatement	ptr += MINBPC ( enc )	590:8:15617:15635	3155951	1	True				
ANR	3156078	AssignmentExpression	ptr += MINBPC ( enc )		3155951	0		+=			
ANR	3156079	Identifier	ptr		3155951	0					
ANR	3156080	CallExpression	MINBPC ( enc )		3155951	1					
ANR	3156081	Callee	MINBPC		3155951	0					
ANR	3156082	Identifier	MINBPC		3155951	0					
ANR	3156083	ArgumentList	enc		3155951	1					
ANR	3156084	Argument	enc		3155951	0					
ANR	3156085	Identifier	enc		3155951	0					
ANR	3156086	ExpressionStatement	"REQUIRE_CHAR ( enc , ptr , end )"	591:8:15645:15672	3155951	2	True				
ANR	3156087	CallExpression	"REQUIRE_CHAR ( enc , ptr , end )"		3155951	0					
ANR	3156088	Callee	REQUIRE_CHAR		3155951	0					
ANR	3156089	Identifier	REQUIRE_CHAR		3155951	0					
ANR	3156090	ArgumentList	enc		3155951	1					
ANR	3156091	Argument	enc		3155951	0					
ANR	3156092	Identifier	enc		3155951	0					
ANR	3156093	Argument	ptr		3155951	1					
ANR	3156094	Identifier	ptr		3155951	0					
ANR	3156095	Argument	end		3155951	2					
ANR	3156096	Identifier	end		3155951	0					
ANR	3156097	ExpressionStatement	"t = BYTE_TYPE ( enc , ptr )"	592:8:15682:15705	3155951	3	True				
ANR	3156098	AssignmentExpression	"t = BYTE_TYPE ( enc , ptr )"		3155951	0		=			
ANR	3156099	Identifier	t		3155951	0					
ANR	3156100	CallExpression	"BYTE_TYPE ( enc , ptr )"		3155951	1					
ANR	3156101	Callee	BYTE_TYPE		3155951	0					
ANR	3156102	Identifier	BYTE_TYPE		3155951	0					
ANR	3156103	ArgumentList	enc		3155951	1					
ANR	3156104	Argument	enc		3155951	0					
ANR	3156105	Identifier	enc		3155951	0					
ANR	3156106	Argument	ptr		3155951	1					
ANR	3156107	Identifier	ptr		3155951	0					
ANR	3156108	IfStatement	if ( t == BT_EQUALS )		3155951	4					
ANR	3156109	Condition	t == BT_EQUALS	593:12:15719:15732	3155951	0	True				
ANR	3156110	EqualityExpression	t == BT_EQUALS		3155951	0		==			
ANR	3156111	Identifier	t		3155951	0					
ANR	3156112	Identifier	BT_EQUALS		3155951	1					
ANR	3156113	BreakStatement	break ;	594:10:15745:15750	3155951	1	True				
ANR	3156114	SwitchStatement	switch ( t )		3155951	5					
ANR	3156115	Condition	t	595:16:15768:15768	3155951	0	True				
ANR	3156116	Identifier	t		3155951	0					
ANR	3156117	CompoundStatement		34:19:789:789	3155951	1					
ANR	3156118	Label	case BT_S :	596:8:15781:15790	3155951	0	True				
ANR	3156119	Identifier	BT_S		3155951	0					
ANR	3156120	Label	case BT_LF :	597:8:15800:15810	3155951	1	True				
ANR	3156121	Identifier	BT_LF		3155951	0					
ANR	3156122	Label	case BT_CR :	598:8:15820:15830	3155951	2	True				
ANR	3156123	Identifier	BT_CR		3155951	0					
ANR	3156124	BreakStatement	break ;	599:10:15842:15847	3155951	3	True				
ANR	3156125	Label	default :	600:8:15857:15864	3155951	4	True				
ANR	3156126	Identifier	default		3155951	0					
ANR	3156127	ExpressionStatement	* nextTokPtr = ptr	601:10:15876:15893	3155951	5	True				
ANR	3156128	AssignmentExpression	* nextTokPtr = ptr		3155951	0		=			
ANR	3156129	UnaryOperationExpression	* nextTokPtr		3155951	0					
ANR	3156130	UnaryOperator	*		3155951	0					
ANR	3156131	Identifier	nextTokPtr		3155951	1					
ANR	3156132	Identifier	ptr		3155951	1					
ANR	3156133	ReturnStatement	return XML_TOK_INVALID ;	602:10:15905:15927	3155951	6	True				
ANR	3156134	Identifier	XML_TOK_INVALID		3155951	0					
ANR	3156135	Label	case BT_EQUALS :	606:4:15974:15988	3155951	21	True				
ANR	3156136	Identifier	BT_EQUALS		3155951	0					
ANR	3156137	CompoundStatement		47:8:1024:1032	3155951	22					
ANR	3156138	IdentifierDeclStatement	int open ;	608:8:16006:16014	3155951	0	True				
ANR	3156139	IdentifierDecl	open		3155951	0					
ANR	3156140	IdentifierDeclType	int		3155951	0					
ANR	3156141	Identifier	open		3155951	1					
ANR	3156142	ExpressionStatement	hadColon = 0	610:8:16038:16050	3155951	1	True				
ANR	3156143	AssignmentExpression	hadColon = 0		3155951	0		=			
ANR	3156144	Identifier	hadColon		3155951	0					
ANR	3156145	PrimaryExpression	0		3155951	1					
ANR	3156146	ForStatement	for ( ; ; )		3155951	2					
ANR	3156147	CompoundStatement		51:17:1094:1094	3155951	0					
ANR	3156148	ExpressionStatement	ptr += MINBPC ( enc )	613:10:16088:16106	3155951	0	True				
ANR	3156149	AssignmentExpression	ptr += MINBPC ( enc )		3155951	0		+=			
ANR	3156150	Identifier	ptr		3155951	0					
ANR	3156151	CallExpression	MINBPC ( enc )		3155951	1					
ANR	3156152	Callee	MINBPC		3155951	0					
ANR	3156153	Identifier	MINBPC		3155951	0					
ANR	3156154	ArgumentList	enc		3155951	1					
ANR	3156155	Argument	enc		3155951	0					
ANR	3156156	Identifier	enc		3155951	0					
ANR	3156157	ExpressionStatement	"REQUIRE_CHAR ( enc , ptr , end )"	614:10:16118:16145	3155951	1	True				
ANR	3156158	CallExpression	"REQUIRE_CHAR ( enc , ptr , end )"		3155951	0					
ANR	3156159	Callee	REQUIRE_CHAR		3155951	0					
ANR	3156160	Identifier	REQUIRE_CHAR		3155951	0					
ANR	3156161	ArgumentList	enc		3155951	1					
ANR	3156162	Argument	enc		3155951	0					
ANR	3156163	Identifier	enc		3155951	0					
ANR	3156164	Argument	ptr		3155951	1					
ANR	3156165	Identifier	ptr		3155951	0					
ANR	3156166	Argument	end		3155951	2					
ANR	3156167	Identifier	end		3155951	0					
ANR	3156168	ExpressionStatement	"open = BYTE_TYPE ( enc , ptr )"	615:10:16157:16183	3155951	2	True				
ANR	3156169	AssignmentExpression	"open = BYTE_TYPE ( enc , ptr )"		3155951	0		=			
ANR	3156170	Identifier	open		3155951	0					
ANR	3156171	CallExpression	"BYTE_TYPE ( enc , ptr )"		3155951	1					
ANR	3156172	Callee	BYTE_TYPE		3155951	0					
ANR	3156173	Identifier	BYTE_TYPE		3155951	0					
ANR	3156174	ArgumentList	enc		3155951	1					
ANR	3156175	Argument	enc		3155951	0					
ANR	3156176	Identifier	enc		3155951	0					
ANR	3156177	Argument	ptr		3155951	1					
ANR	3156178	Identifier	ptr		3155951	0					
ANR	3156179	IfStatement	if ( open == BT_QUOT || open == BT_APOS )		3155951	3					
ANR	3156180	Condition	open == BT_QUOT || open == BT_APOS	616:14:16199:16232	3155951	0	True				
ANR	3156181	OrExpression	open == BT_QUOT || open == BT_APOS		3155951	0		||			
ANR	3156182	EqualityExpression	open == BT_QUOT		3155951	0		==			
ANR	3156183	Identifier	open		3155951	0					
ANR	3156184	Identifier	BT_QUOT		3155951	1					
ANR	3156185	EqualityExpression	open == BT_APOS		3155951	1		==			
ANR	3156186	Identifier	open		3155951	0					
ANR	3156187	Identifier	BT_APOS		3155951	1					
ANR	3156188	BreakStatement	break ;	617:12:16247:16252	3155951	1	True				
ANR	3156189	SwitchStatement	switch ( open )		3155951	4					
ANR	3156190	Condition	open	618:18:16272:16275	3155951	0	True				
ANR	3156191	Identifier	open		3155951	0					
ANR	3156192	CompoundStatement		57:24:1296:1296	3155951	1					
ANR	3156193	Label	case BT_S :	619:10:16290:16299	3155951	0	True				
ANR	3156194	Identifier	BT_S		3155951	0					
ANR	3156195	Label	case BT_LF :	620:10:16311:16321	3155951	1	True				
ANR	3156196	Identifier	BT_LF		3155951	0					
ANR	3156197	Label	case BT_CR :	621:10:16333:16343	3155951	2	True				
ANR	3156198	Identifier	BT_CR		3155951	0					
ANR	3156199	BreakStatement	break ;	622:12:16357:16362	3155951	3	True				
ANR	3156200	Label	default :	623:10:16374:16381	3155951	4	True				
ANR	3156201	Identifier	default		3155951	0					
ANR	3156202	ExpressionStatement	* nextTokPtr = ptr	624:12:16395:16412	3155951	5	True				
ANR	3156203	AssignmentExpression	* nextTokPtr = ptr		3155951	0		=			
ANR	3156204	UnaryOperationExpression	* nextTokPtr		3155951	0					
ANR	3156205	UnaryOperator	*		3155951	0					
ANR	3156206	Identifier	nextTokPtr		3155951	1					
ANR	3156207	Identifier	ptr		3155951	1					
ANR	3156208	ReturnStatement	return XML_TOK_INVALID ;	625:12:16426:16448	3155951	6	True				
ANR	3156209	Identifier	XML_TOK_INVALID		3155951	0					
ANR	3156210	ExpressionStatement	ptr += MINBPC ( enc )	628:8:16480:16498	3155951	3	True				
ANR	3156211	AssignmentExpression	ptr += MINBPC ( enc )		3155951	0		+=			
ANR	3156212	Identifier	ptr		3155951	0					
ANR	3156213	CallExpression	MINBPC ( enc )		3155951	1					
ANR	3156214	Callee	MINBPC		3155951	0					
ANR	3156215	Identifier	MINBPC		3155951	0					
ANR	3156216	ArgumentList	enc		3155951	1					
ANR	3156217	Argument	enc		3155951	0					
ANR	3156218	Identifier	enc		3155951	0					
ANR	3156219	ForStatement	for ( ; ; )		3155951	4					
ANR	3156220	CompoundStatement		70:10:1580:1585	3155951	0					
ANR	3156221	IdentifierDeclStatement	int t ;	631:10:16562:16567	3155951	0	True				
ANR	3156222	IdentifierDecl	t		3155951	0					
ANR	3156223	IdentifierDeclType	int		3155951	0					
ANR	3156224	Identifier	t		3155951	1					
ANR	3156225	ExpressionStatement	"REQUIRE_CHAR ( enc , ptr , end )"	632:10:16579:16606	3155951	1	True				
ANR	3156226	CallExpression	"REQUIRE_CHAR ( enc , ptr , end )"		3155951	0					
ANR	3156227	Callee	REQUIRE_CHAR		3155951	0					
ANR	3156228	Identifier	REQUIRE_CHAR		3155951	0					
ANR	3156229	ArgumentList	enc		3155951	1					
ANR	3156230	Argument	enc		3155951	0					
ANR	3156231	Identifier	enc		3155951	0					
ANR	3156232	Argument	ptr		3155951	1					
ANR	3156233	Identifier	ptr		3155951	0					
ANR	3156234	Argument	end		3155951	2					
ANR	3156235	Identifier	end		3155951	0					
ANR	3156236	ExpressionStatement	"t = BYTE_TYPE ( enc , ptr )"	633:10:16618:16641	3155951	2	True				
ANR	3156237	AssignmentExpression	"t = BYTE_TYPE ( enc , ptr )"		3155951	0		=			
ANR	3156238	Identifier	t		3155951	0					
ANR	3156239	CallExpression	"BYTE_TYPE ( enc , ptr )"		3155951	1					
ANR	3156240	Callee	BYTE_TYPE		3155951	0					
ANR	3156241	Identifier	BYTE_TYPE		3155951	0					
ANR	3156242	ArgumentList	enc		3155951	1					
ANR	3156243	Argument	enc		3155951	0					
ANR	3156244	Identifier	enc		3155951	0					
ANR	3156245	Argument	ptr		3155951	1					
ANR	3156246	Identifier	ptr		3155951	0					
ANR	3156247	IfStatement	if ( t == open )		3155951	3					
ANR	3156248	Condition	t == open	634:14:16657:16665	3155951	0	True				
ANR	3156249	EqualityExpression	t == open		3155951	0		==			
ANR	3156250	Identifier	t		3155951	0					
ANR	3156251	Identifier	open		3155951	1					
ANR	3156252	BreakStatement	break ;	635:12:16680:16685	3155951	1	True				
ANR	3156253	SwitchStatement	switch ( t )		3155951	4					
ANR	3156254	Condition	t	636:18:16705:16705	3155951	0	True				
ANR	3156255	Identifier	t		3155951	0					
ANR	3156256	CompoundStatement		75:21:1726:1726	3155951	1					
ANR	3156257	Statement	INVALID_CASES	637:10:16720:16732	3155951	0	True				
ANR	3156258	Statement	(	637:23:16733:16733	3155951	1	True				
ANR	3156259	Statement	ptr	637:24:16734:16736	3155951	2	True				
ANR	3156260	Statement	","	637:27:16737:16737	3155951	3	True				
ANR	3156261	Statement	nextTokPtr	637:29:16739:16748	3155951	4	True				
ANR	3156262	Statement	)	637:39:16749:16749	3155951	5	True				
ANR	3156263	Label	case BT_AMP :	638:10:16761:16772	3155951	6	True				
ANR	3156264	Identifier	BT_AMP		3155951	0					
ANR	3156265	CompoundStatement		79:14:1820:1880	3155951	7					
ANR	3156266	IdentifierDeclStatement	"int tok = PREFIX ( scanRef ) ( enc , ptr + MINBPC ( enc ) , end , & ptr ) ;"	640:14:16802:16862	3155951	0	True				
ANR	3156267	IdentifierDecl	"tok = PREFIX ( scanRef ) ( enc , ptr + MINBPC ( enc ) , end , & ptr )"		3155951	0					
ANR	3156268	IdentifierDeclType	int		3155951	0					
ANR	3156269	Identifier	tok		3155951	1					
ANR	3156270	AssignmentExpression	"tok = PREFIX ( scanRef ) ( enc , ptr + MINBPC ( enc ) , end , & ptr )"		3155951	2		=			
ANR	3156271	Identifier	tok		3155951	0					
ANR	3156272	CallExpression	"PREFIX ( scanRef ) ( enc , ptr + MINBPC ( enc ) , end , & ptr )"		3155951	1					
ANR	3156273	Callee	PREFIX ( scanRef )		3155951	0					
ANR	3156274	CallExpression	PREFIX ( scanRef )		3155951	0					
ANR	3156275	Callee	PREFIX		3155951	0					
ANR	3156276	Identifier	PREFIX		3155951	0					
ANR	3156277	ArgumentList	scanRef		3155951	1					
ANR	3156278	Argument	scanRef		3155951	0					
ANR	3156279	Identifier	scanRef		3155951	0					
ANR	3156280	ArgumentList	enc		3155951	1					
ANR	3156281	Argument	enc		3155951	0					
ANR	3156282	Identifier	enc		3155951	0					
ANR	3156283	Argument	ptr + MINBPC ( enc )		3155951	1					
ANR	3156284	AdditiveExpression	ptr + MINBPC ( enc )		3155951	0		+			
ANR	3156285	Identifier	ptr		3155951	0					
ANR	3156286	CallExpression	MINBPC ( enc )		3155951	1					
ANR	3156287	Callee	MINBPC		3155951	0					
ANR	3156288	Identifier	MINBPC		3155951	0					
ANR	3156289	ArgumentList	enc		3155951	1					
ANR	3156290	Argument	enc		3155951	0					
ANR	3156291	Identifier	enc		3155951	0					
ANR	3156292	Argument	end		3155951	2					
ANR	3156293	Identifier	end		3155951	0					
ANR	3156294	Argument	& ptr		3155951	3					
ANR	3156295	UnaryOperationExpression	& ptr		3155951	0					
ANR	3156296	UnaryOperator	&		3155951	0					
ANR	3156297	Identifier	ptr		3155951	1					
ANR	3156298	IfStatement	if ( tok <= 0 )		3155951	1					
ANR	3156299	Condition	tok <= 0	641:18:16882:16889	3155951	0	True				
ANR	3156300	RelationalExpression	tok <= 0		3155951	0		<=			
ANR	3156301	Identifier	tok		3155951	0					
ANR	3156302	PrimaryExpression	0		3155951	1					
ANR	3156303	CompoundStatement		80:28:1910:1910	3155951	1					
ANR	3156304	IfStatement	if ( tok == XML_TOK_INVALID )		3155951	0					
ANR	3156305	Condition	tok == XML_TOK_INVALID	642:20:16914:16935	3155951	0	True				
ANR	3156306	EqualityExpression	tok == XML_TOK_INVALID		3155951	0		==			
ANR	3156307	Identifier	tok		3155951	0					
ANR	3156308	Identifier	XML_TOK_INVALID		3155951	1					
ANR	3156309	ExpressionStatement	* nextTokPtr = ptr	643:18:16956:16973	3155951	1	True				
ANR	3156310	AssignmentExpression	* nextTokPtr = ptr		3155951	0		=			
ANR	3156311	UnaryOperationExpression	* nextTokPtr		3155951	0					
ANR	3156312	UnaryOperator	*		3155951	0					
ANR	3156313	Identifier	nextTokPtr		3155951	1					
ANR	3156314	Identifier	ptr		3155951	1					
ANR	3156315	ReturnStatement	return tok ;	644:16:16991:17001	3155951	1	True				
ANR	3156316	Identifier	tok		3155951	0					
ANR	3156317	BreakStatement	break ;	646:14:17033:17038	3155951	2	True				
ANR	3156318	Label	case BT_LT :	648:10:17064:17074	3155951	8	True				
ANR	3156319	Identifier	BT_LT		3155951	0					
ANR	3156320	ExpressionStatement	* nextTokPtr = ptr	649:12:17088:17105	3155951	9	True				
ANR	3156321	AssignmentExpression	* nextTokPtr = ptr		3155951	0		=			
ANR	3156322	UnaryOperationExpression	* nextTokPtr		3155951	0					
ANR	3156323	UnaryOperator	*		3155951	0					
ANR	3156324	Identifier	nextTokPtr		3155951	1					
ANR	3156325	Identifier	ptr		3155951	1					
ANR	3156326	ReturnStatement	return XML_TOK_INVALID ;	650:12:17119:17141	3155951	10	True				
ANR	3156327	Identifier	XML_TOK_INVALID		3155951	0					
ANR	3156328	Label	default :	651:10:17153:17160	3155951	11	True				
ANR	3156329	Identifier	default		3155951	0					
ANR	3156330	ExpressionStatement	ptr += MINBPC ( enc )	652:12:17174:17192	3155951	12	True				
ANR	3156331	AssignmentExpression	ptr += MINBPC ( enc )		3155951	0		+=			
ANR	3156332	Identifier	ptr		3155951	0					
ANR	3156333	CallExpression	MINBPC ( enc )		3155951	1					
ANR	3156334	Callee	MINBPC		3155951	0					
ANR	3156335	Identifier	MINBPC		3155951	0					
ANR	3156336	ArgumentList	enc		3155951	1					
ANR	3156337	Argument	enc		3155951	0					
ANR	3156338	Identifier	enc		3155951	0					
ANR	3156339	BreakStatement	break ;	653:12:17206:17211	3155951	13	True				
ANR	3156340	ExpressionStatement	ptr += MINBPC ( enc )	656:8:17243:17261	3155951	5	True				
ANR	3156341	AssignmentExpression	ptr += MINBPC ( enc )		3155951	0		+=			
ANR	3156342	Identifier	ptr		3155951	0					
ANR	3156343	CallExpression	MINBPC ( enc )		3155951	1					
ANR	3156344	Callee	MINBPC		3155951	0					
ANR	3156345	Identifier	MINBPC		3155951	0					
ANR	3156346	ArgumentList	enc		3155951	1					
ANR	3156347	Argument	enc		3155951	0					
ANR	3156348	Identifier	enc		3155951	0					
ANR	3156349	ExpressionStatement	"REQUIRE_CHAR ( enc , ptr , end )"	657:8:17271:17298	3155951	6	True				
ANR	3156350	CallExpression	"REQUIRE_CHAR ( enc , ptr , end )"		3155951	0					
ANR	3156351	Callee	REQUIRE_CHAR		3155951	0					
ANR	3156352	Identifier	REQUIRE_CHAR		3155951	0					
ANR	3156353	ArgumentList	enc		3155951	1					
ANR	3156354	Argument	enc		3155951	0					
ANR	3156355	Identifier	enc		3155951	0					
ANR	3156356	Argument	ptr		3155951	1					
ANR	3156357	Identifier	ptr		3155951	0					
ANR	3156358	Argument	end		3155951	2					
ANR	3156359	Identifier	end		3155951	0					
ANR	3156360	SwitchStatement	"switch ( BYTE_TYPE ( enc , ptr ) )"		3155951	7					
ANR	3156361	Condition	"BYTE_TYPE ( enc , ptr )"	658:16:17316:17334	3155951	0	True				
ANR	3156362	CallExpression	"BYTE_TYPE ( enc , ptr )"		3155951	0					
ANR	3156363	Callee	BYTE_TYPE		3155951	0					
ANR	3156364	Identifier	BYTE_TYPE		3155951	0					
ANR	3156365	ArgumentList	enc		3155951	1					
ANR	3156366	Argument	enc		3155951	0					
ANR	3156367	Identifier	enc		3155951	0					
ANR	3156368	Argument	ptr		3155951	1					
ANR	3156369	Identifier	ptr		3155951	0					
ANR	3156370	CompoundStatement		97:37:2355:2355	3155951	1					
ANR	3156371	Label	case BT_S :	659:8:17347:17356	3155951	0	True				
ANR	3156372	Identifier	BT_S		3155951	0					
ANR	3156373	Label	case BT_CR :	660:8:17366:17376	3155951	1	True				
ANR	3156374	Identifier	BT_CR		3155951	0					
ANR	3156375	Label	case BT_LF :	661:8:17386:17396	3155951	2	True				
ANR	3156376	Identifier	BT_LF		3155951	0					
ANR	3156377	BreakStatement	break ;	662:10:17408:17413	3155951	3	True				
ANR	3156378	Label	case BT_SOL :	663:8:17423:17434	3155951	4	True				
ANR	3156379	Identifier	BT_SOL		3155951	0					
ANR	3156380	GotoStatement	goto sol ;	664:10:17446:17454	3155951	5	True				
ANR	3156381	Identifier	sol		3155951	0					
ANR	3156382	Label	case BT_GT :	665:8:17464:17474	3155951	6	True				
ANR	3156383	Identifier	BT_GT		3155951	0					
ANR	3156384	GotoStatement	goto gt ;	666:10:17486:17493	3155951	7	True				
ANR	3156385	Identifier	gt		3155951	0					
ANR	3156386	Label	default :	667:8:17503:17510	3155951	8	True				
ANR	3156387	Identifier	default		3155951	0					
ANR	3156388	ExpressionStatement	* nextTokPtr = ptr	668:10:17522:17539	3155951	9	True				
ANR	3156389	AssignmentExpression	* nextTokPtr = ptr		3155951	0		=			
ANR	3156390	UnaryOperationExpression	* nextTokPtr		3155951	0					
ANR	3156391	UnaryOperator	*		3155951	0					
ANR	3156392	Identifier	nextTokPtr		3155951	1					
ANR	3156393	Identifier	ptr		3155951	1					
ANR	3156394	ReturnStatement	return XML_TOK_INVALID ;	669:10:17551:17573	3155951	10	True				
ANR	3156395	Identifier	XML_TOK_INVALID		3155951	0					
ANR	3156396	ForStatement	for ( ; ; )		3155951	8					
ANR	3156397	CompoundStatement		111:17:2662:2662	3155951	0					
ANR	3156398	ExpressionStatement	ptr += MINBPC ( enc )	673:10:17656:17674	3155951	0	True				
ANR	3156399	AssignmentExpression	ptr += MINBPC ( enc )		3155951	0		+=			
ANR	3156400	Identifier	ptr		3155951	0					
ANR	3156401	CallExpression	MINBPC ( enc )		3155951	1					
ANR	3156402	Callee	MINBPC		3155951	0					
ANR	3156403	Identifier	MINBPC		3155951	0					
ANR	3156404	ArgumentList	enc		3155951	1					
ANR	3156405	Argument	enc		3155951	0					
ANR	3156406	Identifier	enc		3155951	0					
ANR	3156407	ExpressionStatement	"REQUIRE_CHAR ( enc , ptr , end )"	674:10:17686:17713	3155951	1	True				
ANR	3156408	CallExpression	"REQUIRE_CHAR ( enc , ptr , end )"		3155951	0					
ANR	3156409	Callee	REQUIRE_CHAR		3155951	0					
ANR	3156410	Identifier	REQUIRE_CHAR		3155951	0					
ANR	3156411	ArgumentList	enc		3155951	1					
ANR	3156412	Argument	enc		3155951	0					
ANR	3156413	Identifier	enc		3155951	0					
ANR	3156414	Argument	ptr		3155951	1					
ANR	3156415	Identifier	ptr		3155951	0					
ANR	3156416	Argument	end		3155951	2					
ANR	3156417	Identifier	end		3155951	0					
ANR	3156418	SwitchStatement	"switch ( BYTE_TYPE ( enc , ptr ) )"		3155951	2					
ANR	3156419	Condition	"BYTE_TYPE ( enc , ptr )"	675:18:17733:17751	3155951	0	True				
ANR	3156420	CallExpression	"BYTE_TYPE ( enc , ptr )"		3155951	0					
ANR	3156421	Callee	BYTE_TYPE		3155951	0					
ANR	3156422	Identifier	BYTE_TYPE		3155951	0					
ANR	3156423	ArgumentList	enc		3155951	1					
ANR	3156424	Argument	enc		3155951	0					
ANR	3156425	Identifier	enc		3155951	0					
ANR	3156426	Argument	ptr		3155951	1					
ANR	3156427	Identifier	ptr		3155951	0					
ANR	3156428	CompoundStatement		114:39:2772:2772	3155951	1					
ANR	3156429	Statement	CHECK_NMSTRT_CASES	676:10:17766:17783	3155951	0	True				
ANR	3156430	Statement	(	676:28:17784:17784	3155951	1	True				
ANR	3156431	Statement	enc	676:29:17785:17787	3155951	2	True				
ANR	3156432	Statement	","	676:32:17788:17788	3155951	3	True				
ANR	3156433	Statement	ptr	676:34:17790:17792	3155951	4	True				
ANR	3156434	Statement	","	676:37:17793:17793	3155951	5	True				
ANR	3156435	Statement	end	676:39:17795:17797	3155951	6	True				
ANR	3156436	Statement	","	676:42:17798:17798	3155951	7	True				
ANR	3156437	Statement	nextTokPtr	676:44:17800:17809	3155951	8	True				
ANR	3156438	Statement	)	676:54:17810:17810	3155951	9	True				
ANR	3156439	Label	case BT_S :	677:10:17822:17831	3155951	10	True				
ANR	3156440	Identifier	BT_S		3155951	0					
ANR	3156441	Label	case BT_CR :	677:21:17833:17843	3155951	11	True				
ANR	3156442	Identifier	BT_CR		3155951	0					
ANR	3156443	Label	case BT_LF :	677:33:17845:17855	3155951	12	True				
ANR	3156444	Identifier	BT_LF		3155951	0					
ANR	3156445	ContinueStatement	continue ;	678:12:17869:17877	3155951	13	True				
ANR	3156446	Label	case BT_GT :	679:10:17889:17899	3155951	14	True				
ANR	3156447	Identifier	BT_GT		3155951	0					
ANR	3156448	Label	gt :	680:10:17911:17913	3155951	15	True				
ANR	3156449	Identifier	gt		3155951	0					
ANR	3156450	ExpressionStatement	* nextTokPtr = ptr + MINBPC ( enc )	681:12:17927:17958	3155951	16	True				
ANR	3156451	AssignmentExpression	* nextTokPtr = ptr + MINBPC ( enc )		3155951	0		=			
ANR	3156452	UnaryOperationExpression	* nextTokPtr		3155951	0					
ANR	3156453	UnaryOperator	*		3155951	0					
ANR	3156454	Identifier	nextTokPtr		3155951	1					
ANR	3156455	AdditiveExpression	ptr + MINBPC ( enc )		3155951	1		+			
ANR	3156456	Identifier	ptr		3155951	0					
ANR	3156457	CallExpression	MINBPC ( enc )		3155951	1					
ANR	3156458	Callee	MINBPC		3155951	0					
ANR	3156459	Identifier	MINBPC		3155951	0					
ANR	3156460	ArgumentList	enc		3155951	1					
ANR	3156461	Argument	enc		3155951	0					
ANR	3156462	Identifier	enc		3155951	0					
ANR	3156463	ReturnStatement	return XML_TOK_START_TAG_WITH_ATTS ;	682:12:17972:18006	3155951	17	True				
ANR	3156464	Identifier	XML_TOK_START_TAG_WITH_ATTS		3155951	0					
ANR	3156465	Label	case BT_SOL :	683:10:18018:18029	3155951	18	True				
ANR	3156466	Identifier	BT_SOL		3155951	0					
ANR	3156467	Label	sol :	684:10:18041:18044	3155951	19	True				
ANR	3156468	Identifier	sol		3155951	0					
ANR	3156469	ExpressionStatement	ptr += MINBPC ( enc )	685:12:18058:18076	3155951	20	True				
ANR	3156470	AssignmentExpression	ptr += MINBPC ( enc )		3155951	0		+=			
ANR	3156471	Identifier	ptr		3155951	0					
ANR	3156472	CallExpression	MINBPC ( enc )		3155951	1					
ANR	3156473	Callee	MINBPC		3155951	0					
ANR	3156474	Identifier	MINBPC		3155951	0					
ANR	3156475	ArgumentList	enc		3155951	1					
ANR	3156476	Argument	enc		3155951	0					
ANR	3156477	Identifier	enc		3155951	0					
ANR	3156478	ExpressionStatement	"REQUIRE_CHAR ( enc , ptr , end )"	686:12:18090:18117	3155951	21	True				
ANR	3156479	CallExpression	"REQUIRE_CHAR ( enc , ptr , end )"		3155951	0					
ANR	3156480	Callee	REQUIRE_CHAR		3155951	0					
ANR	3156481	Identifier	REQUIRE_CHAR		3155951	0					
ANR	3156482	ArgumentList	enc		3155951	1					
ANR	3156483	Argument	enc		3155951	0					
ANR	3156484	Identifier	enc		3155951	0					
ANR	3156485	Argument	ptr		3155951	1					
ANR	3156486	Identifier	ptr		3155951	0					
ANR	3156487	Argument	end		3155951	2					
ANR	3156488	Identifier	end		3155951	0					
ANR	3156489	IfStatement	"if ( ! CHAR_MATCHES ( enc , ptr , ASCII_GT ) )"		3155951	22					
ANR	3156490	Condition	"! CHAR_MATCHES ( enc , ptr , ASCII_GT )"	687:16:18135:18167	3155951	0	True				
ANR	3156491	UnaryOperationExpression	"! CHAR_MATCHES ( enc , ptr , ASCII_GT )"		3155951	0					
ANR	3156492	UnaryOperator	!		3155951	0					
ANR	3156493	CallExpression	"CHAR_MATCHES ( enc , ptr , ASCII_GT )"		3155951	1					
ANR	3156494	Callee	CHAR_MATCHES		3155951	0					
ANR	3156495	Identifier	CHAR_MATCHES		3155951	0					
ANR	3156496	ArgumentList	enc		3155951	1					
ANR	3156497	Argument	enc		3155951	0					
ANR	3156498	Identifier	enc		3155951	0					
ANR	3156499	Argument	ptr		3155951	1					
ANR	3156500	Identifier	ptr		3155951	0					
ANR	3156501	Argument	ASCII_GT		3155951	2					
ANR	3156502	Identifier	ASCII_GT		3155951	0					
ANR	3156503	CompoundStatement		126:51:3188:3188	3155951	1					
ANR	3156504	ExpressionStatement	* nextTokPtr = ptr	688:14:18186:18203	3155951	0	True				
ANR	3156505	AssignmentExpression	* nextTokPtr = ptr		3155951	0		=			
ANR	3156506	UnaryOperationExpression	* nextTokPtr		3155951	0					
ANR	3156507	UnaryOperator	*		3155951	0					
ANR	3156508	Identifier	nextTokPtr		3155951	1					
ANR	3156509	Identifier	ptr		3155951	1					
ANR	3156510	ReturnStatement	return XML_TOK_INVALID ;	689:14:18219:18241	3155951	1	True				
ANR	3156511	Identifier	XML_TOK_INVALID		3155951	0					
ANR	3156512	ExpressionStatement	* nextTokPtr = ptr + MINBPC ( enc )	691:12:18269:18300	3155951	23	True				
ANR	3156513	AssignmentExpression	* nextTokPtr = ptr + MINBPC ( enc )		3155951	0		=			
ANR	3156514	UnaryOperationExpression	* nextTokPtr		3155951	0					
ANR	3156515	UnaryOperator	*		3155951	0					
ANR	3156516	Identifier	nextTokPtr		3155951	1					
ANR	3156517	AdditiveExpression	ptr + MINBPC ( enc )		3155951	1		+			
ANR	3156518	Identifier	ptr		3155951	0					
ANR	3156519	CallExpression	MINBPC ( enc )		3155951	1					
ANR	3156520	Callee	MINBPC		3155951	0					
ANR	3156521	Identifier	MINBPC		3155951	0					
ANR	3156522	ArgumentList	enc		3155951	1					
ANR	3156523	Argument	enc		3155951	0					
ANR	3156524	Identifier	enc		3155951	0					
ANR	3156525	ReturnStatement	return XML_TOK_EMPTY_ELEMENT_WITH_ATTS ;	692:12:18314:18352	3155951	24	True				
ANR	3156526	Identifier	XML_TOK_EMPTY_ELEMENT_WITH_ATTS		3155951	0					
ANR	3156527	Label	default :	693:10:18364:18371	3155951	25	True				
ANR	3156528	Identifier	default		3155951	0					
ANR	3156529	ExpressionStatement	* nextTokPtr = ptr	694:12:18385:18402	3155951	26	True				
ANR	3156530	AssignmentExpression	* nextTokPtr = ptr		3155951	0		=			
ANR	3156531	UnaryOperationExpression	* nextTokPtr		3155951	0					
ANR	3156532	UnaryOperator	*		3155951	0					
ANR	3156533	Identifier	nextTokPtr		3155951	1					
ANR	3156534	Identifier	ptr		3155951	1					
ANR	3156535	ReturnStatement	return XML_TOK_INVALID ;	695:12:18416:18438	3155951	27	True				
ANR	3156536	Identifier	XML_TOK_INVALID		3155951	0					
ANR	3156537	BreakStatement	break ;	697:10:18462:18467	3155951	3	True				
ANR	3156538	BreakStatement	break ;	699:8:18487:18492	3155951	9	True				
ANR	3156539	Label	default :	701:4:18506:18513	3155951	23	True				
ANR	3156540	Identifier	default		3155951	0					
ANR	3156541	ExpressionStatement	* nextTokPtr = ptr	702:6:18521:18538	3155951	24	True				
ANR	3156542	AssignmentExpression	* nextTokPtr = ptr		3155951	0		=			
ANR	3156543	UnaryOperationExpression	* nextTokPtr		3155951	0					
ANR	3156544	UnaryOperator	*		3155951	0					
ANR	3156545	Identifier	nextTokPtr		3155951	1					
ANR	3156546	Identifier	ptr		3155951	1					
ANR	3156547	ReturnStatement	return XML_TOK_INVALID ;	703:6:18546:18568	3155951	25	True				
ANR	3156548	Identifier	XML_TOK_INVALID		3155951	0					
ANR	3156549	ReturnStatement	return XML_TOK_PARTIAL ;	706:2:18582:18604	3155951	2	True				
ANR	3156550	Identifier	XML_TOK_PARTIAL		3155951	0					
ANR	3156551	ReturnType	static int PTRCALL PREFIX		3155951	1					
ANR	3156552	Identifier	( scanAtts )		3155951	2					
ANR	3156553	Identifier	scanAtts		3155951	3					
ANR	3156554	ParameterList	"const ENCODING * enc , const char * ptr , const char * end , const char * * nextTokPtr"		3155951	4					
ANR	3156555	Parameter	const ENCODING * enc	560:17:14884:14902	3155951	0	True				
ANR	3156556	ParameterType	const ENCODING *		3155951	0					
ANR	3156557	Identifier	enc		3155951	1					
ANR	3156558	Parameter	const char * ptr	560:38:14905:14919	3155951	1	True				
ANR	3156559	ParameterType	const char *		3155951	0					
ANR	3156560	Identifier	ptr		3155951	1					
ANR	3156561	Parameter	const char * end	560:55:14922:14936	3155951	2	True				
ANR	3156562	ParameterType	const char *		3155951	0					
ANR	3156563	Identifier	end		3155951	1					
ANR	3156564	Parameter	const char * * nextTokPtr	561:17:14956:14978	3155951	3	True				
ANR	3156565	ParameterType	const char * *		3155951	0					
ANR	3156566	Identifier	nextTokPtr		3155951	1					
ANR	3156567	CFGEntryNode	ENTRY		3155951		True				
ANR	3156568	CFGExitNode	EXIT		3155951		True				
ANR	3156569	InfiniteForNode	true		3155951		True				
ANR	3156570	InfiniteForNode	true		3155951		True				
ANR	3156571	InfiniteForNode	true		3155951		True				
ANR	3156572	InfiniteForNode	true		3155951		True				
ANR	3156573	Symbol	XML_TOK_INVALID		3155951						
ANR	3156574	Symbol	nextTokPtr		3155951						
ANR	3156575	Symbol	BT_QUOT		3155951						
ANR	3156576	Symbol	XML_TOK_START_TAG_WITH_ATTS		3155951						
ANR	3156577	Symbol	XML_TOK_PARTIAL		3155951						
ANR	3156578	Symbol	BYTE_TYPE		3155951						
ANR	3156579	Symbol	* nextTokPtr		3155951						
ANR	3156580	Symbol	hadColon		3155951						
ANR	3156581	Symbol	BT_APOS		3155951						
ANR	3156582	Symbol	MINBPC		3155951						
ANR	3156583	Symbol	ptr		3155951						
ANR	3156584	Symbol	scanRef		3155951						
ANR	3156585	Symbol	tok		3155951						
ANR	3156586	Symbol	CHAR_MATCHES		3155951						
ANR	3156587	Symbol	& ptr		3155951						
ANR	3156588	Symbol	t		3155951						
ANR	3156589	Symbol	PREFIX		3155951						
ANR	3156590	Symbol	ASCII_GT		3155951						
ANR	3156591	Symbol	XML_TOK_EMPTY_ELEMENT_WITH_ATTS		3155951						
ANR	3156592	Symbol	end		3155951						
ANR	3156593	Symbol	enc		3155951						
ANR	3156594	Symbol	HAS_CHAR		3155951						
ANR	3156595	Symbol	BT_EQUALS		3155951						
ANR	3156596	Symbol	open		3155951						
ANR	3156597	Function	scanLt	711:0:18654:21247							
ANR	3156598	FunctionDef	"scanLt (const ENCODING * enc , const char * ptr , const char * end , const char * * nextTokPtr)"		3156597	0					
ANR	3156599	CompoundStatement		714:0:18783:21247	3156597	0					
ANR	3156600	IdentifierDeclStatement	int hadColon ;	716:2:18801:18813	3156597	0	True				
ANR	3156601	IdentifierDecl	hadColon		3156597	0					
ANR	3156602	IdentifierDeclType	int		3156597	0					
ANR	3156603	Identifier	hadColon		3156597	1					
ANR	3156604	ExpressionStatement	"REQUIRE_CHAR ( enc , ptr , end )"	718:2:18824:18851	3156597	1	True				
ANR	3156605	CallExpression	"REQUIRE_CHAR ( enc , ptr , end )"		3156597	0					
ANR	3156606	Callee	REQUIRE_CHAR		3156597	0					
ANR	3156607	Identifier	REQUIRE_CHAR		3156597	0					
ANR	3156608	ArgumentList	enc		3156597	1					
ANR	3156609	Argument	enc		3156597	0					
ANR	3156610	Identifier	enc		3156597	0					
ANR	3156611	Argument	ptr		3156597	1					
ANR	3156612	Identifier	ptr		3156597	0					
ANR	3156613	Argument	end		3156597	2					
ANR	3156614	Identifier	end		3156597	0					
ANR	3156615	SwitchStatement	"switch ( BYTE_TYPE ( enc , ptr ) )"		3156597	2					
ANR	3156616	Condition	"BYTE_TYPE ( enc , ptr )"	719:10:18863:18881	3156597	0	True				
ANR	3156617	CallExpression	"BYTE_TYPE ( enc , ptr )"		3156597	0					
ANR	3156618	Callee	BYTE_TYPE		3156597	0					
ANR	3156619	Identifier	BYTE_TYPE		3156597	0					
ANR	3156620	ArgumentList	enc		3156597	1					
ANR	3156621	Argument	enc		3156597	0					
ANR	3156622	Identifier	enc		3156597	0					
ANR	3156623	Argument	ptr		3156597	1					
ANR	3156624	Identifier	ptr		3156597	0					
ANR	3156625	CompoundStatement		6:31:100:100	3156597	1					
ANR	3156626	Statement	CHECK_NMSTRT_CASES	720:2:18888:18905	3156597	0	True				
ANR	3156627	Statement	(	720:20:18906:18906	3156597	1	True				
ANR	3156628	Statement	enc	720:21:18907:18909	3156597	2	True				
ANR	3156629	Statement	","	720:24:18910:18910	3156597	3	True				
ANR	3156630	Statement	ptr	720:26:18912:18914	3156597	4	True				
ANR	3156631	Statement	","	720:29:18915:18915	3156597	5	True				
ANR	3156632	Statement	end	720:31:18917:18919	3156597	6	True				
ANR	3156633	Statement	","	720:34:18920:18920	3156597	7	True				
ANR	3156634	Statement	nextTokPtr	720:36:18922:18931	3156597	8	True				
ANR	3156635	Statement	)	720:46:18932:18932	3156597	9	True				
ANR	3156636	Label	case BT_EXCL :	721:2:18936:18948	3156597	10	True				
ANR	3156637	Identifier	BT_EXCL		3156597	0					
ANR	3156638	ExpressionStatement	ptr += MINBPC ( enc )	722:4:18954:18972	3156597	11	True				
ANR	3156639	AssignmentExpression	ptr += MINBPC ( enc )		3156597	0		+=			
ANR	3156640	Identifier	ptr		3156597	0					
ANR	3156641	CallExpression	MINBPC ( enc )		3156597	1					
ANR	3156642	Callee	MINBPC		3156597	0					
ANR	3156643	Identifier	MINBPC		3156597	0					
ANR	3156644	ArgumentList	enc		3156597	1					
ANR	3156645	Argument	enc		3156597	0					
ANR	3156646	Identifier	enc		3156597	0					
ANR	3156647	ExpressionStatement	"REQUIRE_CHAR ( enc , ptr , end )"	723:4:18978:19005	3156597	12	True				
ANR	3156648	CallExpression	"REQUIRE_CHAR ( enc , ptr , end )"		3156597	0					
ANR	3156649	Callee	REQUIRE_CHAR		3156597	0					
ANR	3156650	Identifier	REQUIRE_CHAR		3156597	0					
ANR	3156651	ArgumentList	enc		3156597	1					
ANR	3156652	Argument	enc		3156597	0					
ANR	3156653	Identifier	enc		3156597	0					
ANR	3156654	Argument	ptr		3156597	1					
ANR	3156655	Identifier	ptr		3156597	0					
ANR	3156656	Argument	end		3156597	2					
ANR	3156657	Identifier	end		3156597	0					
ANR	3156658	SwitchStatement	"switch ( BYTE_TYPE ( enc , ptr ) )"		3156597	13					
ANR	3156659	Condition	"BYTE_TYPE ( enc , ptr )"	724:12:19019:19037	3156597	0	True				
ANR	3156660	CallExpression	"BYTE_TYPE ( enc , ptr )"		3156597	0					
ANR	3156661	Callee	BYTE_TYPE		3156597	0					
ANR	3156662	Identifier	BYTE_TYPE		3156597	0					
ANR	3156663	ArgumentList	enc		3156597	1					
ANR	3156664	Argument	enc		3156597	0					
ANR	3156665	Identifier	enc		3156597	0					
ANR	3156666	Argument	ptr		3156597	1					
ANR	3156667	Identifier	ptr		3156597	0					
ANR	3156668	CompoundStatement		11:33:256:256	3156597	1					
ANR	3156669	Label	case BT_MINUS :	725:4:19046:19059	3156597	0	True				
ANR	3156670	Identifier	BT_MINUS		3156597	0					
ANR	3156671	ReturnStatement	"return PREFIX ( scanComment ) ( enc , ptr + MINBPC ( enc ) , end , nextTokPtr ) ;"	726:6:19067:19134	3156597	1	True				
ANR	3156672	CallExpression	"PREFIX ( scanComment ) ( enc , ptr + MINBPC ( enc ) , end , nextTokPtr )"		3156597	0					
ANR	3156673	Callee	PREFIX ( scanComment )		3156597	0					
ANR	3156674	CallExpression	PREFIX ( scanComment )		3156597	0					
ANR	3156675	Callee	PREFIX		3156597	0					
ANR	3156676	Identifier	PREFIX		3156597	0					
ANR	3156677	ArgumentList	scanComment		3156597	1					
ANR	3156678	Argument	scanComment		3156597	0					
ANR	3156679	Identifier	scanComment		3156597	0					
ANR	3156680	ArgumentList	enc		3156597	1					
ANR	3156681	Argument	enc		3156597	0					
ANR	3156682	Identifier	enc		3156597	0					
ANR	3156683	Argument	ptr + MINBPC ( enc )		3156597	1					
ANR	3156684	AdditiveExpression	ptr + MINBPC ( enc )		3156597	0		+			
ANR	3156685	Identifier	ptr		3156597	0					
ANR	3156686	CallExpression	MINBPC ( enc )		3156597	1					
ANR	3156687	Callee	MINBPC		3156597	0					
ANR	3156688	Identifier	MINBPC		3156597	0					
ANR	3156689	ArgumentList	enc		3156597	1					
ANR	3156690	Argument	enc		3156597	0					
ANR	3156691	Identifier	enc		3156597	0					
ANR	3156692	Argument	end		3156597	2					
ANR	3156693	Identifier	end		3156597	0					
ANR	3156694	Argument	nextTokPtr		3156597	3					
ANR	3156695	Identifier	nextTokPtr		3156597	0					
ANR	3156696	Label	case BT_LSQB :	727:4:19140:19152	3156597	2	True				
ANR	3156697	Identifier	BT_LSQB		3156597	0					
ANR	3156698	ReturnStatement	"return PREFIX ( scanCdataSection ) ( enc , ptr + MINBPC ( enc ) , end , nextTokPtr ) ;"	728:6:19160:19270	3156597	3	True				
ANR	3156699	CallExpression	"PREFIX ( scanCdataSection ) ( enc , ptr + MINBPC ( enc ) , end , nextTokPtr )"		3156597	0					
ANR	3156700	Callee	PREFIX ( scanCdataSection )		3156597	0					
ANR	3156701	CallExpression	PREFIX ( scanCdataSection )		3156597	0					
ANR	3156702	Callee	PREFIX		3156597	0					
ANR	3156703	Identifier	PREFIX		3156597	0					
ANR	3156704	ArgumentList	scanCdataSection		3156597	1					
ANR	3156705	Argument	scanCdataSection		3156597	0					
ANR	3156706	Identifier	scanCdataSection		3156597	0					
ANR	3156707	ArgumentList	enc		3156597	1					
ANR	3156708	Argument	enc		3156597	0					
ANR	3156709	Identifier	enc		3156597	0					
ANR	3156710	Argument	ptr + MINBPC ( enc )		3156597	1					
ANR	3156711	AdditiveExpression	ptr + MINBPC ( enc )		3156597	0		+			
ANR	3156712	Identifier	ptr		3156597	0					
ANR	3156713	CallExpression	MINBPC ( enc )		3156597	1					
ANR	3156714	Callee	MINBPC		3156597	0					
ANR	3156715	Identifier	MINBPC		3156597	0					
ANR	3156716	ArgumentList	enc		3156597	1					
ANR	3156717	Argument	enc		3156597	0					
ANR	3156718	Identifier	enc		3156597	0					
ANR	3156719	Argument	end		3156597	2					
ANR	3156720	Identifier	end		3156597	0					
ANR	3156721	Argument	nextTokPtr		3156597	3					
ANR	3156722	Identifier	nextTokPtr		3156597	0					
ANR	3156723	ExpressionStatement	* nextTokPtr = ptr	731:4:19282:19299	3156597	14	True				
ANR	3156724	AssignmentExpression	* nextTokPtr = ptr		3156597	0		=			
ANR	3156725	UnaryOperationExpression	* nextTokPtr		3156597	0					
ANR	3156726	UnaryOperator	*		3156597	0					
ANR	3156727	Identifier	nextTokPtr		3156597	1					
ANR	3156728	Identifier	ptr		3156597	1					
ANR	3156729	ReturnStatement	return XML_TOK_INVALID ;	732:4:19305:19327	3156597	15	True				
ANR	3156730	Identifier	XML_TOK_INVALID		3156597	0					
ANR	3156731	Label	case BT_QUEST :	733:2:19331:19344	3156597	16	True				
ANR	3156732	Identifier	BT_QUEST		3156597	0					
ANR	3156733	ReturnStatement	"return PREFIX ( scanPi ) ( enc , ptr + MINBPC ( enc ) , end , nextTokPtr ) ;"	734:4:19350:19412	3156597	17	True				
ANR	3156734	CallExpression	"PREFIX ( scanPi ) ( enc , ptr + MINBPC ( enc ) , end , nextTokPtr )"		3156597	0					
ANR	3156735	Callee	PREFIX ( scanPi )		3156597	0					
ANR	3156736	CallExpression	PREFIX ( scanPi )		3156597	0					
ANR	3156737	Callee	PREFIX		3156597	0					
ANR	3156738	Identifier	PREFIX		3156597	0					
ANR	3156739	ArgumentList	scanPi		3156597	1					
ANR	3156740	Argument	scanPi		3156597	0					
ANR	3156741	Identifier	scanPi		3156597	0					
ANR	3156742	ArgumentList	enc		3156597	1					
ANR	3156743	Argument	enc		3156597	0					
ANR	3156744	Identifier	enc		3156597	0					
ANR	3156745	Argument	ptr + MINBPC ( enc )		3156597	1					
ANR	3156746	AdditiveExpression	ptr + MINBPC ( enc )		3156597	0		+			
ANR	3156747	Identifier	ptr		3156597	0					
ANR	3156748	CallExpression	MINBPC ( enc )		3156597	1					
ANR	3156749	Callee	MINBPC		3156597	0					
ANR	3156750	Identifier	MINBPC		3156597	0					
ANR	3156751	ArgumentList	enc		3156597	1					
ANR	3156752	Argument	enc		3156597	0					
ANR	3156753	Identifier	enc		3156597	0					
ANR	3156754	Argument	end		3156597	2					
ANR	3156755	Identifier	end		3156597	0					
ANR	3156756	Argument	nextTokPtr		3156597	3					
ANR	3156757	Identifier	nextTokPtr		3156597	0					
ANR	3156758	Label	case BT_SOL :	735:2:19416:19427	3156597	18	True				
ANR	3156759	Identifier	BT_SOL		3156597	0					
ANR	3156760	ReturnStatement	"return PREFIX ( scanEndTag ) ( enc , ptr + MINBPC ( enc ) , end , nextTokPtr ) ;"	736:4:19433:19499	3156597	19	True				
ANR	3156761	CallExpression	"PREFIX ( scanEndTag ) ( enc , ptr + MINBPC ( enc ) , end , nextTokPtr )"		3156597	0					
ANR	3156762	Callee	PREFIX ( scanEndTag )		3156597	0					
ANR	3156763	CallExpression	PREFIX ( scanEndTag )		3156597	0					
ANR	3156764	Callee	PREFIX		3156597	0					
ANR	3156765	Identifier	PREFIX		3156597	0					
ANR	3156766	ArgumentList	scanEndTag		3156597	1					
ANR	3156767	Argument	scanEndTag		3156597	0					
ANR	3156768	Identifier	scanEndTag		3156597	0					
ANR	3156769	ArgumentList	enc		3156597	1					
ANR	3156770	Argument	enc		3156597	0					
ANR	3156771	Identifier	enc		3156597	0					
ANR	3156772	Argument	ptr + MINBPC ( enc )		3156597	1					
ANR	3156773	AdditiveExpression	ptr + MINBPC ( enc )		3156597	0		+			
ANR	3156774	Identifier	ptr		3156597	0					
ANR	3156775	CallExpression	MINBPC ( enc )		3156597	1					
ANR	3156776	Callee	MINBPC		3156597	0					
ANR	3156777	Identifier	MINBPC		3156597	0					
ANR	3156778	ArgumentList	enc		3156597	1					
ANR	3156779	Argument	enc		3156597	0					
ANR	3156780	Identifier	enc		3156597	0					
ANR	3156781	Argument	end		3156597	2					
ANR	3156782	Identifier	end		3156597	0					
ANR	3156783	Argument	nextTokPtr		3156597	3					
ANR	3156784	Identifier	nextTokPtr		3156597	0					
ANR	3156785	Label	default :	737:2:19503:19510	3156597	20	True				
ANR	3156786	Identifier	default		3156597	0					
ANR	3156787	ExpressionStatement	* nextTokPtr = ptr	738:4:19516:19533	3156597	21	True				
ANR	3156788	AssignmentExpression	* nextTokPtr = ptr		3156597	0		=			
ANR	3156789	UnaryOperationExpression	* nextTokPtr		3156597	0					
ANR	3156790	UnaryOperator	*		3156597	0					
ANR	3156791	Identifier	nextTokPtr		3156597	1					
ANR	3156792	Identifier	ptr		3156597	1					
ANR	3156793	ReturnStatement	return XML_TOK_INVALID ;	739:4:19539:19561	3156597	22	True				
ANR	3156794	Identifier	XML_TOK_INVALID		3156597	0					
ANR	3156795	ExpressionStatement	hadColon = 0	742:2:19583:19595	3156597	3	True				
ANR	3156796	AssignmentExpression	hadColon = 0		3156597	0		=			
ANR	3156797	Identifier	hadColon		3156597	0					
ANR	3156798	PrimaryExpression	0		3156597	1					
ANR	3156799	WhileStatement	"while ( HAS_CHAR ( enc , ptr , end ) )"		3156597	4					
ANR	3156800	Condition	"HAS_CHAR ( enc , ptr , end )"	745:9:19641:19663	3156597	0	True				
ANR	3156801	CallExpression	"HAS_CHAR ( enc , ptr , end )"		3156597	0					
ANR	3156802	Callee	HAS_CHAR		3156597	0					
ANR	3156803	Identifier	HAS_CHAR		3156597	0					
ANR	3156804	ArgumentList	enc		3156597	1					
ANR	3156805	Argument	enc		3156597	0					
ANR	3156806	Identifier	enc		3156597	0					
ANR	3156807	Argument	ptr		3156597	1					
ANR	3156808	Identifier	ptr		3156597	0					
ANR	3156809	Argument	end		3156597	2					
ANR	3156810	Identifier	end		3156597	0					
ANR	3156811	CompoundStatement		32:34:882:882	3156597	1					
ANR	3156812	SwitchStatement	"switch ( BYTE_TYPE ( enc , ptr ) )"		3156597	0					
ANR	3156813	Condition	"BYTE_TYPE ( enc , ptr )"	746:12:19680:19698	3156597	0	True				
ANR	3156814	CallExpression	"BYTE_TYPE ( enc , ptr )"		3156597	0					
ANR	3156815	Callee	BYTE_TYPE		3156597	0					
ANR	3156816	Identifier	BYTE_TYPE		3156597	0					
ANR	3156817	ArgumentList	enc		3156597	1					
ANR	3156818	Argument	enc		3156597	0					
ANR	3156819	Identifier	enc		3156597	0					
ANR	3156820	Argument	ptr		3156597	1					
ANR	3156821	Identifier	ptr		3156597	0					
ANR	3156822	CompoundStatement		33:33:917:917	3156597	1					
ANR	3156823	Statement	CHECK_NAME_CASES	747:4:19707:19722	3156597	0	True				
ANR	3156824	Statement	(	747:20:19723:19723	3156597	1	True				
ANR	3156825	Statement	enc	747:21:19724:19726	3156597	2	True				
ANR	3156826	Statement	","	747:24:19727:19727	3156597	3	True				
ANR	3156827	Statement	ptr	747:26:19729:19731	3156597	4	True				
ANR	3156828	Statement	","	747:29:19732:19732	3156597	5	True				
ANR	3156829	Statement	end	747:31:19734:19736	3156597	6	True				
ANR	3156830	Statement	","	747:34:19737:19737	3156597	7	True				
ANR	3156831	Statement	nextTokPtr	747:36:19739:19748	3156597	8	True				
ANR	3156832	Statement	)	747:46:19749:19749	3156597	9	True				
ANR	3156833	Label	case BT_COLON :	749:4:19769:19782	3156597	10	True				
ANR	3156834	Identifier	BT_COLON		3156597	0					
ANR	3156835	IfStatement	if ( hadColon )		3156597	11					
ANR	3156836	Condition	hadColon	750:10:19794:19801	3156597	0	True				
ANR	3156837	Identifier	hadColon		3156597	0					
ANR	3156838	CompoundStatement		37:20:1020:1020	3156597	1					
ANR	3156839	ExpressionStatement	* nextTokPtr = ptr	751:8:19814:19831	3156597	0	True				
ANR	3156840	AssignmentExpression	* nextTokPtr = ptr		3156597	0		=			
ANR	3156841	UnaryOperationExpression	* nextTokPtr		3156597	0					
ANR	3156842	UnaryOperator	*		3156597	0					
ANR	3156843	Identifier	nextTokPtr		3156597	1					
ANR	3156844	Identifier	ptr		3156597	1					
ANR	3156845	ReturnStatement	return XML_TOK_INVALID ;	752:8:19841:19863	3156597	1	True				
ANR	3156846	Identifier	XML_TOK_INVALID		3156597	0					
ANR	3156847	ExpressionStatement	hadColon = 1	754:6:19879:19891	3156597	12	True				
ANR	3156848	AssignmentExpression	hadColon = 1		3156597	0		=			
ANR	3156849	Identifier	hadColon		3156597	0					
ANR	3156850	PrimaryExpression	1		3156597	1					
ANR	3156851	ExpressionStatement	ptr += MINBPC ( enc )	755:6:19899:19917	3156597	13	True				
ANR	3156852	AssignmentExpression	ptr += MINBPC ( enc )		3156597	0		+=			
ANR	3156853	Identifier	ptr		3156597	0					
ANR	3156854	CallExpression	MINBPC ( enc )		3156597	1					
ANR	3156855	Callee	MINBPC		3156597	0					
ANR	3156856	Identifier	MINBPC		3156597	0					
ANR	3156857	ArgumentList	enc		3156597	1					
ANR	3156858	Argument	enc		3156597	0					
ANR	3156859	Identifier	enc		3156597	0					
ANR	3156860	ExpressionStatement	"REQUIRE_CHAR ( enc , ptr , end )"	756:6:19925:19952	3156597	14	True				
ANR	3156861	CallExpression	"REQUIRE_CHAR ( enc , ptr , end )"		3156597	0					
ANR	3156862	Callee	REQUIRE_CHAR		3156597	0					
ANR	3156863	Identifier	REQUIRE_CHAR		3156597	0					
ANR	3156864	ArgumentList	enc		3156597	1					
ANR	3156865	Argument	enc		3156597	0					
ANR	3156866	Identifier	enc		3156597	0					
ANR	3156867	Argument	ptr		3156597	1					
ANR	3156868	Identifier	ptr		3156597	0					
ANR	3156869	Argument	end		3156597	2					
ANR	3156870	Identifier	end		3156597	0					
ANR	3156871	SwitchStatement	"switch ( BYTE_TYPE ( enc , ptr ) )"		3156597	15					
ANR	3156872	Condition	"BYTE_TYPE ( enc , ptr )"	757:14:19968:19986	3156597	0	True				
ANR	3156873	CallExpression	"BYTE_TYPE ( enc , ptr )"		3156597	0					
ANR	3156874	Callee	BYTE_TYPE		3156597	0					
ANR	3156875	Identifier	BYTE_TYPE		3156597	0					
ANR	3156876	ArgumentList	enc		3156597	1					
ANR	3156877	Argument	enc		3156597	0					
ANR	3156878	Identifier	enc		3156597	0					
ANR	3156879	Argument	ptr		3156597	1					
ANR	3156880	Identifier	ptr		3156597	0					
ANR	3156881	CompoundStatement		44:35:1205:1205	3156597	1					
ANR	3156882	Statement	CHECK_NMSTRT_CASES	758:6:19997:20014	3156597	0	True				
ANR	3156883	Statement	(	758:24:20015:20015	3156597	1	True				
ANR	3156884	Statement	enc	758:25:20016:20018	3156597	2	True				
ANR	3156885	Statement	","	758:28:20019:20019	3156597	3	True				
ANR	3156886	Statement	ptr	758:30:20021:20023	3156597	4	True				
ANR	3156887	Statement	","	758:33:20024:20024	3156597	5	True				
ANR	3156888	Statement	end	758:35:20026:20028	3156597	6	True				
ANR	3156889	Statement	","	758:38:20029:20029	3156597	7	True				
ANR	3156890	Statement	nextTokPtr	758:40:20031:20040	3156597	8	True				
ANR	3156891	Statement	)	758:50:20041:20041	3156597	9	True				
ANR	3156892	Label	default :	759:6:20049:20056	3156597	10	True				
ANR	3156893	Identifier	default		3156597	0					
ANR	3156894	ExpressionStatement	* nextTokPtr = ptr	760:8:20066:20083	3156597	11	True				
ANR	3156895	AssignmentExpression	* nextTokPtr = ptr		3156597	0		=			
ANR	3156896	UnaryOperationExpression	* nextTokPtr		3156597	0					
ANR	3156897	UnaryOperator	*		3156597	0					
ANR	3156898	Identifier	nextTokPtr		3156597	1					
ANR	3156899	Identifier	ptr		3156597	1					
ANR	3156900	ReturnStatement	return XML_TOK_INVALID ;	761:8:20093:20115	3156597	12	True				
ANR	3156901	Identifier	XML_TOK_INVALID		3156597	0					
ANR	3156902	BreakStatement	break ;	763:6:20131:20136	3156597	16	True				
ANR	3156903	Label	case BT_S :	765:4:20149:20158	3156597	17	True				
ANR	3156904	Identifier	BT_S		3156597	0					
ANR	3156905	Label	case BT_CR :	765:15:20160:20170	3156597	18	True				
ANR	3156906	Identifier	BT_CR		3156597	0					
ANR	3156907	Label	case BT_LF :	765:27:20172:20182	3156597	19	True				
ANR	3156908	Identifier	BT_LF		3156597	0					
ANR	3156909	CompoundStatement		53:6:1406:1406	3156597	20					
ANR	3156910	ExpressionStatement	ptr += MINBPC ( enc )	767:8:20200:20218	3156597	0	True				
ANR	3156911	AssignmentExpression	ptr += MINBPC ( enc )		3156597	0		+=			
ANR	3156912	Identifier	ptr		3156597	0					
ANR	3156913	CallExpression	MINBPC ( enc )		3156597	1					
ANR	3156914	Callee	MINBPC		3156597	0					
ANR	3156915	Identifier	MINBPC		3156597	0					
ANR	3156916	ArgumentList	enc		3156597	1					
ANR	3156917	Argument	enc		3156597	0					
ANR	3156918	Identifier	enc		3156597	0					
ANR	3156919	WhileStatement	"while ( HAS_CHAR ( enc , ptr , end ) )"		3156597	1					
ANR	3156920	Condition	"HAS_CHAR ( enc , ptr , end )"	768:15:20235:20257	3156597	0	True				
ANR	3156921	CallExpression	"HAS_CHAR ( enc , ptr , end )"		3156597	0					
ANR	3156922	Callee	HAS_CHAR		3156597	0					
ANR	3156923	Identifier	HAS_CHAR		3156597	0					
ANR	3156924	ArgumentList	enc		3156597	1					
ANR	3156925	Argument	enc		3156597	0					
ANR	3156926	Identifier	enc		3156597	0					
ANR	3156927	Argument	ptr		3156597	1					
ANR	3156928	Identifier	ptr		3156597	0					
ANR	3156929	Argument	end		3156597	2					
ANR	3156930	Identifier	end		3156597	0					
ANR	3156931	CompoundStatement		55:40:1476:1476	3156597	1					
ANR	3156932	SwitchStatement	"switch ( BYTE_TYPE ( enc , ptr ) )"		3156597	0					
ANR	3156933	Condition	"BYTE_TYPE ( enc , ptr )"	769:18:20280:20298	3156597	0	True				
ANR	3156934	CallExpression	"BYTE_TYPE ( enc , ptr )"		3156597	0					
ANR	3156935	Callee	BYTE_TYPE		3156597	0					
ANR	3156936	Identifier	BYTE_TYPE		3156597	0					
ANR	3156937	ArgumentList	enc		3156597	1					
ANR	3156938	Argument	enc		3156597	0					
ANR	3156939	Identifier	enc		3156597	0					
ANR	3156940	Argument	ptr		3156597	1					
ANR	3156941	Identifier	ptr		3156597	0					
ANR	3156942	CompoundStatement		56:39:1517:1517	3156597	1					
ANR	3156943	Statement	CHECK_NMSTRT_CASES	770:10:20313:20330	3156597	0	True				
ANR	3156944	Statement	(	770:28:20331:20331	3156597	1	True				
ANR	3156945	Statement	enc	770:29:20332:20334	3156597	2	True				
ANR	3156946	Statement	","	770:32:20335:20335	3156597	3	True				
ANR	3156947	Statement	ptr	770:34:20337:20339	3156597	4	True				
ANR	3156948	Statement	","	770:37:20340:20340	3156597	5	True				
ANR	3156949	Statement	end	770:39:20342:20344	3156597	6	True				
ANR	3156950	Statement	","	770:42:20345:20345	3156597	7	True				
ANR	3156951	Statement	nextTokPtr	770:44:20347:20356	3156597	8	True				
ANR	3156952	Statement	)	770:54:20357:20357	3156597	9	True				
ANR	3156953	Label	case BT_GT :	771:10:20369:20379	3156597	10	True				
ANR	3156954	Identifier	BT_GT		3156597	0					
ANR	3156955	GotoStatement	goto gt ;	772:12:20393:20400	3156597	11	True				
ANR	3156956	Identifier	gt		3156597	0					
ANR	3156957	Label	case BT_SOL :	773:10:20412:20423	3156597	12	True				
ANR	3156958	Identifier	BT_SOL		3156597	0					
ANR	3156959	GotoStatement	goto sol ;	774:12:20437:20445	3156597	13	True				
ANR	3156960	Identifier	sol		3156597	0					
ANR	3156961	Label	case BT_S :	775:10:20457:20466	3156597	14	True				
ANR	3156962	Identifier	BT_S		3156597	0					
ANR	3156963	Label	case BT_CR :	775:21:20468:20478	3156597	15	True				
ANR	3156964	Identifier	BT_CR		3156597	0					
ANR	3156965	Label	case BT_LF :	775:33:20480:20490	3156597	16	True				
ANR	3156966	Identifier	BT_LF		3156597	0					
ANR	3156967	ExpressionStatement	ptr += MINBPC ( enc )	776:12:20504:20522	3156597	17	True				
ANR	3156968	AssignmentExpression	ptr += MINBPC ( enc )		3156597	0		+=			
ANR	3156969	Identifier	ptr		3156597	0					
ANR	3156970	CallExpression	MINBPC ( enc )		3156597	1					
ANR	3156971	Callee	MINBPC		3156597	0					
ANR	3156972	Identifier	MINBPC		3156597	0					
ANR	3156973	ArgumentList	enc		3156597	1					
ANR	3156974	Argument	enc		3156597	0					
ANR	3156975	Identifier	enc		3156597	0					
ANR	3156976	ContinueStatement	continue ;	777:12:20536:20544	3156597	18	True				
ANR	3156977	Label	default :	778:10:20556:20563	3156597	19	True				
ANR	3156978	Identifier	default		3156597	0					
ANR	3156979	ExpressionStatement	* nextTokPtr = ptr	779:12:20577:20594	3156597	20	True				
ANR	3156980	AssignmentExpression	* nextTokPtr = ptr		3156597	0		=			
ANR	3156981	UnaryOperationExpression	* nextTokPtr		3156597	0					
ANR	3156982	UnaryOperator	*		3156597	0					
ANR	3156983	Identifier	nextTokPtr		3156597	1					
ANR	3156984	Identifier	ptr		3156597	1					
ANR	3156985	ReturnStatement	return XML_TOK_INVALID ;	780:12:20608:20630	3156597	21	True				
ANR	3156986	Identifier	XML_TOK_INVALID		3156597	0					
ANR	3156987	ReturnStatement	"return PREFIX ( scanAtts ) ( enc , ptr , end , nextTokPtr ) ;"	782:10:20654:20704	3156597	1	True				
ANR	3156988	CallExpression	"PREFIX ( scanAtts ) ( enc , ptr , end , nextTokPtr )"		3156597	0					
ANR	3156989	Callee	PREFIX ( scanAtts )		3156597	0					
ANR	3156990	CallExpression	PREFIX ( scanAtts )		3156597	0					
ANR	3156991	Callee	PREFIX		3156597	0					
ANR	3156992	Identifier	PREFIX		3156597	0					
ANR	3156993	ArgumentList	scanAtts		3156597	1					
ANR	3156994	Argument	scanAtts		3156597	0					
ANR	3156995	Identifier	scanAtts		3156597	0					
ANR	3156996	ArgumentList	enc		3156597	1					
ANR	3156997	Argument	enc		3156597	0					
ANR	3156998	Identifier	enc		3156597	0					
ANR	3156999	Argument	ptr		3156597	1					
ANR	3157000	Identifier	ptr		3156597	0					
ANR	3157001	Argument	end		3156597	2					
ANR	3157002	Identifier	end		3156597	0					
ANR	3157003	Argument	nextTokPtr		3156597	3					
ANR	3157004	Identifier	nextTokPtr		3156597	0					
ANR	3157005	ReturnStatement	return XML_TOK_PARTIAL ;	784:8:20724:20746	3156597	2	True				
ANR	3157006	Identifier	XML_TOK_PARTIAL		3156597	0					
ANR	3157007	Label	case BT_GT :	786:4:20760:20770	3156597	21	True				
ANR	3157008	Identifier	BT_GT		3156597	0					
ANR	3157009	Label	gt :	787:4:20776:20778	3156597	22	True				
ANR	3157010	Identifier	gt		3156597	0					
ANR	3157011	ExpressionStatement	* nextTokPtr = ptr + MINBPC ( enc )	788:6:20786:20817	3156597	23	True				
ANR	3157012	AssignmentExpression	* nextTokPtr = ptr + MINBPC ( enc )		3156597	0		=			
ANR	3157013	UnaryOperationExpression	* nextTokPtr		3156597	0					
ANR	3157014	UnaryOperator	*		3156597	0					
ANR	3157015	Identifier	nextTokPtr		3156597	1					
ANR	3157016	AdditiveExpression	ptr + MINBPC ( enc )		3156597	1		+			
ANR	3157017	Identifier	ptr		3156597	0					
ANR	3157018	CallExpression	MINBPC ( enc )		3156597	1					
ANR	3157019	Callee	MINBPC		3156597	0					
ANR	3157020	Identifier	MINBPC		3156597	0					
ANR	3157021	ArgumentList	enc		3156597	1					
ANR	3157022	Argument	enc		3156597	0					
ANR	3157023	Identifier	enc		3156597	0					
ANR	3157024	ReturnStatement	return XML_TOK_START_TAG_NO_ATTS ;	789:6:20825:20857	3156597	24	True				
ANR	3157025	Identifier	XML_TOK_START_TAG_NO_ATTS		3156597	0					
ANR	3157026	Label	case BT_SOL :	790:4:20863:20874	3156597	25	True				
ANR	3157027	Identifier	BT_SOL		3156597	0					
ANR	3157028	Label	sol :	791:4:20880:20883	3156597	26	True				
ANR	3157029	Identifier	sol		3156597	0					
ANR	3157030	ExpressionStatement	ptr += MINBPC ( enc )	792:6:20891:20909	3156597	27	True				
ANR	3157031	AssignmentExpression	ptr += MINBPC ( enc )		3156597	0		+=			
ANR	3157032	Identifier	ptr		3156597	0					
ANR	3157033	CallExpression	MINBPC ( enc )		3156597	1					
ANR	3157034	Callee	MINBPC		3156597	0					
ANR	3157035	Identifier	MINBPC		3156597	0					
ANR	3157036	ArgumentList	enc		3156597	1					
ANR	3157037	Argument	enc		3156597	0					
ANR	3157038	Identifier	enc		3156597	0					
ANR	3157039	ExpressionStatement	"REQUIRE_CHAR ( enc , ptr , end )"	793:6:20917:20944	3156597	28	True				
ANR	3157040	CallExpression	"REQUIRE_CHAR ( enc , ptr , end )"		3156597	0					
ANR	3157041	Callee	REQUIRE_CHAR		3156597	0					
ANR	3157042	Identifier	REQUIRE_CHAR		3156597	0					
ANR	3157043	ArgumentList	enc		3156597	1					
ANR	3157044	Argument	enc		3156597	0					
ANR	3157045	Identifier	enc		3156597	0					
ANR	3157046	Argument	ptr		3156597	1					
ANR	3157047	Identifier	ptr		3156597	0					
ANR	3157048	Argument	end		3156597	2					
ANR	3157049	Identifier	end		3156597	0					
ANR	3157050	IfStatement	"if ( ! CHAR_MATCHES ( enc , ptr , ASCII_GT ) )"		3156597	29					
ANR	3157051	Condition	"! CHAR_MATCHES ( enc , ptr , ASCII_GT )"	794:10:20956:20988	3156597	0	True				
ANR	3157052	UnaryOperationExpression	"! CHAR_MATCHES ( enc , ptr , ASCII_GT )"		3156597	0					
ANR	3157053	UnaryOperator	!		3156597	0					
ANR	3157054	CallExpression	"CHAR_MATCHES ( enc , ptr , ASCII_GT )"		3156597	1					
ANR	3157055	Callee	CHAR_MATCHES		3156597	0					
ANR	3157056	Identifier	CHAR_MATCHES		3156597	0					
ANR	3157057	ArgumentList	enc		3156597	1					
ANR	3157058	Argument	enc		3156597	0					
ANR	3157059	Identifier	enc		3156597	0					
ANR	3157060	Argument	ptr		3156597	1					
ANR	3157061	Identifier	ptr		3156597	0					
ANR	3157062	Argument	ASCII_GT		3156597	2					
ANR	3157063	Identifier	ASCII_GT		3156597	0					
ANR	3157064	CompoundStatement		81:45:2207:2207	3156597	1					
ANR	3157065	ExpressionStatement	* nextTokPtr = ptr	795:8:21001:21018	3156597	0	True				
ANR	3157066	AssignmentExpression	* nextTokPtr = ptr		3156597	0		=			
ANR	3157067	UnaryOperationExpression	* nextTokPtr		3156597	0					
ANR	3157068	UnaryOperator	*		3156597	0					
ANR	3157069	Identifier	nextTokPtr		3156597	1					
ANR	3157070	Identifier	ptr		3156597	1					
ANR	3157071	ReturnStatement	return XML_TOK_INVALID ;	796:8:21028:21050	3156597	1	True				
ANR	3157072	Identifier	XML_TOK_INVALID		3156597	0					
ANR	3157073	ExpressionStatement	* nextTokPtr = ptr + MINBPC ( enc )	798:6:21066:21097	3156597	30	True				
ANR	3157074	AssignmentExpression	* nextTokPtr = ptr + MINBPC ( enc )		3156597	0		=			
ANR	3157075	UnaryOperationExpression	* nextTokPtr		3156597	0					
ANR	3157076	UnaryOperator	*		3156597	0					
ANR	3157077	Identifier	nextTokPtr		3156597	1					
ANR	3157078	AdditiveExpression	ptr + MINBPC ( enc )		3156597	1		+			
ANR	3157079	Identifier	ptr		3156597	0					
ANR	3157080	CallExpression	MINBPC ( enc )		3156597	1					
ANR	3157081	Callee	MINBPC		3156597	0					
ANR	3157082	Identifier	MINBPC		3156597	0					
ANR	3157083	ArgumentList	enc		3156597	1					
ANR	3157084	Argument	enc		3156597	0					
ANR	3157085	Identifier	enc		3156597	0					
ANR	3157086	ReturnStatement	return XML_TOK_EMPTY_ELEMENT_NO_ATTS ;	799:6:21105:21141	3156597	31	True				
ANR	3157087	Identifier	XML_TOK_EMPTY_ELEMENT_NO_ATTS		3156597	0					
ANR	3157088	Label	default :	800:4:21147:21154	3156597	32	True				
ANR	3157089	Identifier	default		3156597	0					
ANR	3157090	ExpressionStatement	* nextTokPtr = ptr	801:6:21162:21179	3156597	33	True				
ANR	3157091	AssignmentExpression	* nextTokPtr = ptr		3156597	0		=			
ANR	3157092	UnaryOperationExpression	* nextTokPtr		3156597	0					
ANR	3157093	UnaryOperator	*		3156597	0					
ANR	3157094	Identifier	nextTokPtr		3156597	1					
ANR	3157095	Identifier	ptr		3156597	1					
ANR	3157096	ReturnStatement	return XML_TOK_INVALID ;	802:6:21187:21209	3156597	34	True				
ANR	3157097	Identifier	XML_TOK_INVALID		3156597	0					
ANR	3157098	ReturnStatement	return XML_TOK_PARTIAL ;	805:2:21223:21245	3156597	5	True				
ANR	3157099	Identifier	XML_TOK_PARTIAL		3156597	0					
ANR	3157100	ReturnType	static int PTRCALL PREFIX		3156597	1					
ANR	3157101	Identifier	( scanLt )		3156597	2					
ANR	3157102	Identifier	scanLt		3156597	3					
ANR	3157103	ParameterList	"const ENCODING * enc , const char * ptr , const char * end , const char * * nextTokPtr"		3156597	4					
ANR	3157104	Parameter	const ENCODING * enc	712:15:18688:18706	3156597	0	True				
ANR	3157105	ParameterType	const ENCODING *		3156597	0					
ANR	3157106	Identifier	enc		3156597	1					
ANR	3157107	Parameter	const char * ptr	712:36:18709:18723	3156597	1	True				
ANR	3157108	ParameterType	const char *		3156597	0					
ANR	3157109	Identifier	ptr		3156597	1					
ANR	3157110	Parameter	const char * end	712:53:18726:18740	3156597	2	True				
ANR	3157111	ParameterType	const char *		3156597	0					
ANR	3157112	Identifier	end		3156597	1					
ANR	3157113	Parameter	const char * * nextTokPtr	713:15:18758:18780	3156597	3	True				
ANR	3157114	ParameterType	const char * *		3156597	0					
ANR	3157115	Identifier	nextTokPtr		3156597	1					
ANR	3157116	CFGEntryNode	ENTRY		3156597		True				
ANR	3157117	CFGExitNode	EXIT		3156597		True				
ANR	3157118	Symbol	XML_TOK_INVALID		3156597						
ANR	3157119	Symbol	nextTokPtr		3156597						
ANR	3157120	Symbol	XML_TOK_PARTIAL		3156597						
ANR	3157121	Symbol	BYTE_TYPE		3156597						
ANR	3157122	Symbol	scanPi		3156597						
ANR	3157123	Symbol	XML_TOK_START_TAG_NO_ATTS		3156597						
ANR	3157124	Symbol	* nextTokPtr		3156597						
ANR	3157125	Symbol	hadColon		3156597						
ANR	3157126	Symbol	XML_TOK_EMPTY_ELEMENT_NO_ATTS		3156597						
ANR	3157127	Symbol	scanAtts		3156597						
ANR	3157128	Symbol	MINBPC		3156597						
ANR	3157129	Symbol	scanCdataSection		3156597						
ANR	3157130	Symbol	ptr		3156597						
ANR	3157131	Symbol	CHAR_MATCHES		3156597						
ANR	3157132	Symbol	scanComment		3156597						
ANR	3157133	Symbol	scanEndTag		3156597						
ANR	3157134	Symbol	PREFIX		3156597						
ANR	3157135	Symbol	ASCII_GT		3156597						
ANR	3157136	Symbol	end		3156597						
ANR	3157137	Symbol	enc		3156597						
ANR	3157138	Symbol	HAS_CHAR		3156597						
ANR	3157139	Function	contentTok	808:0:21250:23756							
ANR	3157140	FunctionDef	"contentTok (const ENCODING * enc , const char * ptr , const char * end , const char * * nextTokPtr)"		3157139	0					
ANR	3157141	CompoundStatement		811:0:21387:23756	3157139	0					
ANR	3157142	IfStatement	if ( ptr >= end )		3157139	0					
ANR	3157143	Condition	ptr >= end	812:6:21395:21404	3157139	0	True				
ANR	3157144	RelationalExpression	ptr >= end		3157139	0		>=			
ANR	3157145	Identifier	ptr		3157139	0					
ANR	3157146	Identifier	end		3157139	1					
ANR	3157147	ReturnStatement	return XML_TOK_NONE ;	813:4:21411:21430	3157139	1	True				
ANR	3157148	Identifier	XML_TOK_NONE		3157139	0					
ANR	3157149	IfStatement	if ( MINBPC ( enc ) > 1 )		3157139	1					
ANR	3157150	Condition	MINBPC ( enc ) > 1	814:6:21438:21452	3157139	0	True				
ANR	3157151	RelationalExpression	MINBPC ( enc ) > 1		3157139	0		>			
ANR	3157152	CallExpression	MINBPC ( enc )		3157139	0					
ANR	3157153	Callee	MINBPC		3157139	0					
ANR	3157154	Identifier	MINBPC		3157139	0					
ANR	3157155	ArgumentList	enc		3157139	1					
ANR	3157156	Argument	enc		3157139	0					
ANR	3157157	Identifier	enc		3157139	0					
ANR	3157158	PrimaryExpression	1		3157139	1					
ANR	3157159	CompoundStatement		5:4:73:93	3157139	1					
ANR	3157160	IdentifierDeclStatement	size_t n = end - ptr ;	815:4:21461:21481	3157139	0	True				
ANR	3157161	IdentifierDecl	n = end - ptr		3157139	0					
ANR	3157162	IdentifierDeclType	size_t		3157139	0					
ANR	3157163	Identifier	n		3157139	1					
ANR	3157164	AssignmentExpression	n = end - ptr		3157139	2		=			
ANR	3157165	Identifier	n		3157139	0					
ANR	3157166	AdditiveExpression	end - ptr		3157139	1		-			
ANR	3157167	Identifier	end		3157139	0					
ANR	3157168	Identifier	ptr		3157139	1					
ANR	3157169	IfStatement	if ( n & ( MINBPC ( enc ) - 1 ) )		3157139	1					
ANR	3157170	Condition	n & ( MINBPC ( enc ) - 1 )	816:8:21491:21511	3157139	0	True				
ANR	3157171	BitAndExpression	n & ( MINBPC ( enc ) - 1 )		3157139	0		&			
ANR	3157172	Identifier	n		3157139	0					
ANR	3157173	AdditiveExpression	MINBPC ( enc ) - 1		3157139	1		-			
ANR	3157174	CallExpression	MINBPC ( enc )		3157139	0					
ANR	3157175	Callee	MINBPC		3157139	0					
ANR	3157176	Identifier	MINBPC		3157139	0					
ANR	3157177	ArgumentList	enc		3157139	1					
ANR	3157178	Argument	enc		3157139	0					
ANR	3157179	Identifier	enc		3157139	0					
ANR	3157180	PrimaryExpression	1		3157139	1					
ANR	3157181	CompoundStatement		6:31:126:126	3157139	1					
ANR	3157182	ExpressionStatement	n &= ~ ( MINBPC ( enc ) - 1 )	817:6:21522:21545	3157139	0	True				
ANR	3157183	AssignmentExpression	n &= ~ ( MINBPC ( enc ) - 1 )		3157139	0		&=			
ANR	3157184	Identifier	n		3157139	0					
ANR	3157185	UnaryOperationExpression	~ ( MINBPC ( enc ) - 1 )		3157139	1					
ANR	3157186	UnaryOperator	~		3157139	0					
ANR	3157187	AdditiveExpression	MINBPC ( enc ) - 1		3157139	1		-			
ANR	3157188	CallExpression	MINBPC ( enc )		3157139	0					
ANR	3157189	Callee	MINBPC		3157139	0					
ANR	3157190	Identifier	MINBPC		3157139	0					
ANR	3157191	ArgumentList	enc		3157139	1					
ANR	3157192	Argument	enc		3157139	0					
ANR	3157193	Identifier	enc		3157139	0					
ANR	3157194	PrimaryExpression	1		3157139	1					
ANR	3157195	IfStatement	if ( n == 0 )		3157139	1					
ANR	3157196	Condition	n == 0	818:10:21557:21562	3157139	0	True				
ANR	3157197	EqualityExpression	n == 0		3157139	0		==			
ANR	3157198	Identifier	n		3157139	0					
ANR	3157199	PrimaryExpression	0		3157139	1					
ANR	3157200	ReturnStatement	return XML_TOK_PARTIAL ;	819:8:21573:21595	3157139	1	True				
ANR	3157201	Identifier	XML_TOK_PARTIAL		3157139	0					
ANR	3157202	ExpressionStatement	end = ptr + n	820:6:21603:21616	3157139	2	True				
ANR	3157203	AssignmentExpression	end = ptr + n		3157139	0		=			
ANR	3157204	Identifier	end		3157139	0					
ANR	3157205	AdditiveExpression	ptr + n		3157139	1		+			
ANR	3157206	Identifier	ptr		3157139	0					
ANR	3157207	Identifier	n		3157139	1					
ANR	3157208	SwitchStatement	"switch ( BYTE_TYPE ( enc , ptr ) )"		3157139	2					
ANR	3157209	Condition	"BYTE_TYPE ( enc , ptr )"	823:10:21638:21656	3157139	0	True				
ANR	3157210	CallExpression	"BYTE_TYPE ( enc , ptr )"		3157139	0					
ANR	3157211	Callee	BYTE_TYPE		3157139	0					
ANR	3157212	Identifier	BYTE_TYPE		3157139	0					
ANR	3157213	ArgumentList	enc		3157139	1					
ANR	3157214	Argument	enc		3157139	0					
ANR	3157215	Identifier	enc		3157139	0					
ANR	3157216	Argument	ptr		3157139	1					
ANR	3157217	Identifier	ptr		3157139	0					
ANR	3157218	CompoundStatement		13:31:271:271	3157139	1					
ANR	3157219	Label	case BT_LT :	824:2:21663:21673	3157139	0	True				
ANR	3157220	Identifier	BT_LT		3157139	0					
ANR	3157221	ReturnStatement	"return PREFIX ( scanLt ) ( enc , ptr + MINBPC ( enc ) , end , nextTokPtr ) ;"	825:4:21679:21741	3157139	1	True				
ANR	3157222	CallExpression	"PREFIX ( scanLt ) ( enc , ptr + MINBPC ( enc ) , end , nextTokPtr )"		3157139	0					
ANR	3157223	Callee	PREFIX ( scanLt )		3157139	0					
ANR	3157224	CallExpression	PREFIX ( scanLt )		3157139	0					
ANR	3157225	Callee	PREFIX		3157139	0					
ANR	3157226	Identifier	PREFIX		3157139	0					
ANR	3157227	ArgumentList	scanLt		3157139	1					
ANR	3157228	Argument	scanLt		3157139	0					
ANR	3157229	Identifier	scanLt		3157139	0					
ANR	3157230	ArgumentList	enc		3157139	1					
ANR	3157231	Argument	enc		3157139	0					
ANR	3157232	Identifier	enc		3157139	0					
ANR	3157233	Argument	ptr + MINBPC ( enc )		3157139	1					
ANR	3157234	AdditiveExpression	ptr + MINBPC ( enc )		3157139	0		+			
ANR	3157235	Identifier	ptr		3157139	0					
ANR	3157236	CallExpression	MINBPC ( enc )		3157139	1					
ANR	3157237	Callee	MINBPC		3157139	0					
ANR	3157238	Identifier	MINBPC		3157139	0					
ANR	3157239	ArgumentList	enc		3157139	1					
ANR	3157240	Argument	enc		3157139	0					
ANR	3157241	Identifier	enc		3157139	0					
ANR	3157242	Argument	end		3157139	2					
ANR	3157243	Identifier	end		3157139	0					
ANR	3157244	Argument	nextTokPtr		3157139	3					
ANR	3157245	Identifier	nextTokPtr		3157139	0					
ANR	3157246	Label	case BT_AMP :	826:2:21745:21756	3157139	2	True				
ANR	3157247	Identifier	BT_AMP		3157139	0					
ANR	3157248	ReturnStatement	"return PREFIX ( scanRef ) ( enc , ptr + MINBPC ( enc ) , end , nextTokPtr ) ;"	827:4:21762:21825	3157139	3	True				
ANR	3157249	CallExpression	"PREFIX ( scanRef ) ( enc , ptr + MINBPC ( enc ) , end , nextTokPtr )"		3157139	0					
ANR	3157250	Callee	PREFIX ( scanRef )		3157139	0					
ANR	3157251	CallExpression	PREFIX ( scanRef )		3157139	0					
ANR	3157252	Callee	PREFIX		3157139	0					
ANR	3157253	Identifier	PREFIX		3157139	0					
ANR	3157254	ArgumentList	scanRef		3157139	1					
ANR	3157255	Argument	scanRef		3157139	0					
ANR	3157256	Identifier	scanRef		3157139	0					
ANR	3157257	ArgumentList	enc		3157139	1					
ANR	3157258	Argument	enc		3157139	0					
ANR	3157259	Identifier	enc		3157139	0					
ANR	3157260	Argument	ptr + MINBPC ( enc )		3157139	1					
ANR	3157261	AdditiveExpression	ptr + MINBPC ( enc )		3157139	0		+			
ANR	3157262	Identifier	ptr		3157139	0					
ANR	3157263	CallExpression	MINBPC ( enc )		3157139	1					
ANR	3157264	Callee	MINBPC		3157139	0					
ANR	3157265	Identifier	MINBPC		3157139	0					
ANR	3157266	ArgumentList	enc		3157139	1					
ANR	3157267	Argument	enc		3157139	0					
ANR	3157268	Identifier	enc		3157139	0					
ANR	3157269	Argument	end		3157139	2					
ANR	3157270	Identifier	end		3157139	0					
ANR	3157271	Argument	nextTokPtr		3157139	3					
ANR	3157272	Identifier	nextTokPtr		3157139	0					
ANR	3157273	Label	case BT_CR :	828:2:21829:21839	3157139	4	True				
ANR	3157274	Identifier	BT_CR		3157139	0					
ANR	3157275	ExpressionStatement	ptr += MINBPC ( enc )	829:4:21845:21863	3157139	5	True				
ANR	3157276	AssignmentExpression	ptr += MINBPC ( enc )		3157139	0		+=			
ANR	3157277	Identifier	ptr		3157139	0					
ANR	3157278	CallExpression	MINBPC ( enc )		3157139	1					
ANR	3157279	Callee	MINBPC		3157139	0					
ANR	3157280	Identifier	MINBPC		3157139	0					
ANR	3157281	ArgumentList	enc		3157139	1					
ANR	3157282	Argument	enc		3157139	0					
ANR	3157283	Identifier	enc		3157139	0					
ANR	3157284	IfStatement	"if ( ! HAS_CHAR ( enc , ptr , end ) )"		3157139	6					
ANR	3157285	Condition	"! HAS_CHAR ( enc , ptr , end )"	830:8:21873:21897	3157139	0	True				
ANR	3157286	UnaryOperationExpression	"! HAS_CHAR ( enc , ptr , end )"		3157139	0					
ANR	3157287	UnaryOperator	!		3157139	0					
ANR	3157288	CallExpression	"HAS_CHAR ( enc , ptr , end )"		3157139	1					
ANR	3157289	Callee	HAS_CHAR		3157139	0					
ANR	3157290	Identifier	HAS_CHAR		3157139	0					
ANR	3157291	ArgumentList	enc		3157139	1					
ANR	3157292	Argument	enc		3157139	0					
ANR	3157293	Identifier	enc		3157139	0					
ANR	3157294	Argument	ptr		3157139	1					
ANR	3157295	Identifier	ptr		3157139	0					
ANR	3157296	Argument	end		3157139	2					
ANR	3157297	Identifier	end		3157139	0					
ANR	3157298	ReturnStatement	return XML_TOK_TRAILING_CR ;	831:6:21906:21932	3157139	1	True				
ANR	3157299	Identifier	XML_TOK_TRAILING_CR		3157139	0					
ANR	3157300	IfStatement	"if ( BYTE_TYPE ( enc , ptr ) == BT_LF )"		3157139	7					
ANR	3157301	Condition	"BYTE_TYPE ( enc , ptr ) == BT_LF"	832:8:21942:21969	3157139	0	True				
ANR	3157302	EqualityExpression	"BYTE_TYPE ( enc , ptr ) == BT_LF"		3157139	0		==			
ANR	3157303	CallExpression	"BYTE_TYPE ( enc , ptr )"		3157139	0					
ANR	3157304	Callee	BYTE_TYPE		3157139	0					
ANR	3157305	Identifier	BYTE_TYPE		3157139	0					
ANR	3157306	ArgumentList	enc		3157139	1					
ANR	3157307	Argument	enc		3157139	0					
ANR	3157308	Identifier	enc		3157139	0					
ANR	3157309	Argument	ptr		3157139	1					
ANR	3157310	Identifier	ptr		3157139	0					
ANR	3157311	Identifier	BT_LF		3157139	1					
ANR	3157312	ExpressionStatement	ptr += MINBPC ( enc )	833:6:21978:21996	3157139	1	True				
ANR	3157313	AssignmentExpression	ptr += MINBPC ( enc )		3157139	0		+=			
ANR	3157314	Identifier	ptr		3157139	0					
ANR	3157315	CallExpression	MINBPC ( enc )		3157139	1					
ANR	3157316	Callee	MINBPC		3157139	0					
ANR	3157317	Identifier	MINBPC		3157139	0					
ANR	3157318	ArgumentList	enc		3157139	1					
ANR	3157319	Argument	enc		3157139	0					
ANR	3157320	Identifier	enc		3157139	0					
ANR	3157321	ExpressionStatement	* nextTokPtr = ptr	834:4:22002:22019	3157139	8	True				
ANR	3157322	AssignmentExpression	* nextTokPtr = ptr		3157139	0		=			
ANR	3157323	UnaryOperationExpression	* nextTokPtr		3157139	0					
ANR	3157324	UnaryOperator	*		3157139	0					
ANR	3157325	Identifier	nextTokPtr		3157139	1					
ANR	3157326	Identifier	ptr		3157139	1					
ANR	3157327	ReturnStatement	return XML_TOK_DATA_NEWLINE ;	835:4:22025:22052	3157139	9	True				
ANR	3157328	Identifier	XML_TOK_DATA_NEWLINE		3157139	0					
ANR	3157329	Label	case BT_LF :	836:2:22056:22066	3157139	10	True				
ANR	3157330	Identifier	BT_LF		3157139	0					
ANR	3157331	ExpressionStatement	* nextTokPtr = ptr + MINBPC ( enc )	837:4:22072:22103	3157139	11	True				
ANR	3157332	AssignmentExpression	* nextTokPtr = ptr + MINBPC ( enc )		3157139	0		=			
ANR	3157333	UnaryOperationExpression	* nextTokPtr		3157139	0					
ANR	3157334	UnaryOperator	*		3157139	0					
ANR	3157335	Identifier	nextTokPtr		3157139	1					
ANR	3157336	AdditiveExpression	ptr + MINBPC ( enc )		3157139	1		+			
ANR	3157337	Identifier	ptr		3157139	0					
ANR	3157338	CallExpression	MINBPC ( enc )		3157139	1					
ANR	3157339	Callee	MINBPC		3157139	0					
ANR	3157340	Identifier	MINBPC		3157139	0					
ANR	3157341	ArgumentList	enc		3157139	1					
ANR	3157342	Argument	enc		3157139	0					
ANR	3157343	Identifier	enc		3157139	0					
ANR	3157344	ReturnStatement	return XML_TOK_DATA_NEWLINE ;	838:4:22109:22136	3157139	12	True				
ANR	3157345	Identifier	XML_TOK_DATA_NEWLINE		3157139	0					
ANR	3157346	Label	case BT_RSQB :	839:2:22140:22152	3157139	13	True				
ANR	3157347	Identifier	BT_RSQB		3157139	0					
ANR	3157348	ExpressionStatement	ptr += MINBPC ( enc )	840:4:22158:22176	3157139	14	True				
ANR	3157349	AssignmentExpression	ptr += MINBPC ( enc )		3157139	0		+=			
ANR	3157350	Identifier	ptr		3157139	0					
ANR	3157351	CallExpression	MINBPC ( enc )		3157139	1					
ANR	3157352	Callee	MINBPC		3157139	0					
ANR	3157353	Identifier	MINBPC		3157139	0					
ANR	3157354	ArgumentList	enc		3157139	1					
ANR	3157355	Argument	enc		3157139	0					
ANR	3157356	Identifier	enc		3157139	0					
ANR	3157357	IfStatement	"if ( ! HAS_CHAR ( enc , ptr , end ) )"		3157139	15					
ANR	3157358	Condition	"! HAS_CHAR ( enc , ptr , end )"	841:8:22186:22210	3157139	0	True				
ANR	3157359	UnaryOperationExpression	"! HAS_CHAR ( enc , ptr , end )"		3157139	0					
ANR	3157360	UnaryOperator	!		3157139	0					
ANR	3157361	CallExpression	"HAS_CHAR ( enc , ptr , end )"		3157139	1					
ANR	3157362	Callee	HAS_CHAR		3157139	0					
ANR	3157363	Identifier	HAS_CHAR		3157139	0					
ANR	3157364	ArgumentList	enc		3157139	1					
ANR	3157365	Argument	enc		3157139	0					
ANR	3157366	Identifier	enc		3157139	0					
ANR	3157367	Argument	ptr		3157139	1					
ANR	3157368	Identifier	ptr		3157139	0					
ANR	3157369	Argument	end		3157139	2					
ANR	3157370	Identifier	end		3157139	0					
ANR	3157371	ReturnStatement	return XML_TOK_TRAILING_RSQB ;	842:6:22219:22247	3157139	1	True				
ANR	3157372	Identifier	XML_TOK_TRAILING_RSQB		3157139	0					
ANR	3157373	IfStatement	"if ( ! CHAR_MATCHES ( enc , ptr , ASCII_RSQB ) )"		3157139	16					
ANR	3157374	Condition	"! CHAR_MATCHES ( enc , ptr , ASCII_RSQB )"	843:8:22257:22291	3157139	0	True				
ANR	3157375	UnaryOperationExpression	"! CHAR_MATCHES ( enc , ptr , ASCII_RSQB )"		3157139	0					
ANR	3157376	UnaryOperator	!		3157139	0					
ANR	3157377	CallExpression	"CHAR_MATCHES ( enc , ptr , ASCII_RSQB )"		3157139	1					
ANR	3157378	Callee	CHAR_MATCHES		3157139	0					
ANR	3157379	Identifier	CHAR_MATCHES		3157139	0					
ANR	3157380	ArgumentList	enc		3157139	1					
ANR	3157381	Argument	enc		3157139	0					
ANR	3157382	Identifier	enc		3157139	0					
ANR	3157383	Argument	ptr		3157139	1					
ANR	3157384	Identifier	ptr		3157139	0					
ANR	3157385	Argument	ASCII_RSQB		3157139	2					
ANR	3157386	Identifier	ASCII_RSQB		3157139	0					
ANR	3157387	BreakStatement	break ;	844:6:22300:22305	3157139	1	True				
ANR	3157388	ExpressionStatement	ptr += MINBPC ( enc )	845:4:22311:22329	3157139	17	True				
ANR	3157389	AssignmentExpression	ptr += MINBPC ( enc )		3157139	0		+=			
ANR	3157390	Identifier	ptr		3157139	0					
ANR	3157391	CallExpression	MINBPC ( enc )		3157139	1					
ANR	3157392	Callee	MINBPC		3157139	0					
ANR	3157393	Identifier	MINBPC		3157139	0					
ANR	3157394	ArgumentList	enc		3157139	1					
ANR	3157395	Argument	enc		3157139	0					
ANR	3157396	Identifier	enc		3157139	0					
ANR	3157397	IfStatement	"if ( ! HAS_CHAR ( enc , ptr , end ) )"		3157139	18					
ANR	3157398	Condition	"! HAS_CHAR ( enc , ptr , end )"	846:8:22339:22363	3157139	0	True				
ANR	3157399	UnaryOperationExpression	"! HAS_CHAR ( enc , ptr , end )"		3157139	0					
ANR	3157400	UnaryOperator	!		3157139	0					
ANR	3157401	CallExpression	"HAS_CHAR ( enc , ptr , end )"		3157139	1					
ANR	3157402	Callee	HAS_CHAR		3157139	0					
ANR	3157403	Identifier	HAS_CHAR		3157139	0					
ANR	3157404	ArgumentList	enc		3157139	1					
ANR	3157405	Argument	enc		3157139	0					
ANR	3157406	Identifier	enc		3157139	0					
ANR	3157407	Argument	ptr		3157139	1					
ANR	3157408	Identifier	ptr		3157139	0					
ANR	3157409	Argument	end		3157139	2					
ANR	3157410	Identifier	end		3157139	0					
ANR	3157411	ReturnStatement	return XML_TOK_TRAILING_RSQB ;	847:6:22372:22400	3157139	1	True				
ANR	3157412	Identifier	XML_TOK_TRAILING_RSQB		3157139	0					
ANR	3157413	IfStatement	"if ( ! CHAR_MATCHES ( enc , ptr , ASCII_GT ) )"		3157139	19					
ANR	3157414	Condition	"! CHAR_MATCHES ( enc , ptr , ASCII_GT )"	848:8:22410:22442	3157139	0	True				
ANR	3157415	UnaryOperationExpression	"! CHAR_MATCHES ( enc , ptr , ASCII_GT )"		3157139	0					
ANR	3157416	UnaryOperator	!		3157139	0					
ANR	3157417	CallExpression	"CHAR_MATCHES ( enc , ptr , ASCII_GT )"		3157139	1					
ANR	3157418	Callee	CHAR_MATCHES		3157139	0					
ANR	3157419	Identifier	CHAR_MATCHES		3157139	0					
ANR	3157420	ArgumentList	enc		3157139	1					
ANR	3157421	Argument	enc		3157139	0					
ANR	3157422	Identifier	enc		3157139	0					
ANR	3157423	Argument	ptr		3157139	1					
ANR	3157424	Identifier	ptr		3157139	0					
ANR	3157425	Argument	ASCII_GT		3157139	2					
ANR	3157426	Identifier	ASCII_GT		3157139	0					
ANR	3157427	CompoundStatement		38:43:1057:1057	3157139	1					
ANR	3157428	ExpressionStatement	ptr -= MINBPC ( enc )	849:6:22453:22471	3157139	0	True				
ANR	3157429	AssignmentExpression	ptr -= MINBPC ( enc )		3157139	0		-=			
ANR	3157430	Identifier	ptr		3157139	0					
ANR	3157431	CallExpression	MINBPC ( enc )		3157139	1					
ANR	3157432	Callee	MINBPC		3157139	0					
ANR	3157433	Identifier	MINBPC		3157139	0					
ANR	3157434	ArgumentList	enc		3157139	1					
ANR	3157435	Argument	enc		3157139	0					
ANR	3157436	Identifier	enc		3157139	0					
ANR	3157437	BreakStatement	break ;	850:6:22479:22484	3157139	1	True				
ANR	3157438	ExpressionStatement	* nextTokPtr = ptr	852:4:22496:22513	3157139	20	True				
ANR	3157439	AssignmentExpression	* nextTokPtr = ptr		3157139	0		=			
ANR	3157440	UnaryOperationExpression	* nextTokPtr		3157139	0					
ANR	3157441	UnaryOperator	*		3157139	0					
ANR	3157442	Identifier	nextTokPtr		3157139	1					
ANR	3157443	Identifier	ptr		3157139	1					
ANR	3157444	ReturnStatement	return XML_TOK_INVALID ;	853:4:22519:22541	3157139	21	True				
ANR	3157445	Identifier	XML_TOK_INVALID		3157139	0					
ANR	3157446	Statement	INVALID_CASES	854:2:22545:22557	3157139	22	True				
ANR	3157447	Statement	(	854:15:22558:22558	3157139	23	True				
ANR	3157448	Statement	ptr	854:16:22559:22561	3157139	24	True				
ANR	3157449	Statement	","	854:19:22562:22562	3157139	25	True				
ANR	3157450	Statement	nextTokPtr	854:21:22564:22573	3157139	26	True				
ANR	3157451	Statement	)	854:31:22574:22574	3157139	27	True				
ANR	3157452	Label	default :	855:2:22578:22585	3157139	28	True				
ANR	3157453	Identifier	default		3157139	0					
ANR	3157454	ExpressionStatement	ptr += MINBPC ( enc )	856:4:22591:22609	3157139	29	True				
ANR	3157455	AssignmentExpression	ptr += MINBPC ( enc )		3157139	0		+=			
ANR	3157456	Identifier	ptr		3157139	0					
ANR	3157457	CallExpression	MINBPC ( enc )		3157139	1					
ANR	3157458	Callee	MINBPC		3157139	0					
ANR	3157459	Identifier	MINBPC		3157139	0					
ANR	3157460	ArgumentList	enc		3157139	1					
ANR	3157461	Argument	enc		3157139	0					
ANR	3157462	Identifier	enc		3157139	0					
ANR	3157463	BreakStatement	break ;	857:4:22615:22620	3157139	30	True				
ANR	3157464	WhileStatement	"while ( HAS_CHAR ( enc , ptr , end ) )"		3157139	3					
ANR	3157465	Condition	"HAS_CHAR ( enc , ptr , end )"	859:9:22635:22657	3157139	0	True				
ANR	3157466	CallExpression	"HAS_CHAR ( enc , ptr , end )"		3157139	0					
ANR	3157467	Callee	HAS_CHAR		3157139	0					
ANR	3157468	Identifier	HAS_CHAR		3157139	0					
ANR	3157469	ArgumentList	enc		3157139	1					
ANR	3157470	Argument	enc		3157139	0					
ANR	3157471	Identifier	enc		3157139	0					
ANR	3157472	Argument	ptr		3157139	1					
ANR	3157473	Identifier	ptr		3157139	0					
ANR	3157474	Argument	end		3157139	2					
ANR	3157475	Identifier	end		3157139	0					
ANR	3157476	CompoundStatement		49:34:1272:1272	3157139	1					
ANR	3157477	SwitchStatement	"switch ( BYTE_TYPE ( enc , ptr ) )"		3157139	0					
ANR	3157478	Condition	"BYTE_TYPE ( enc , ptr )"	860:12:22674:22692	3157139	0	True				
ANR	3157479	CallExpression	"BYTE_TYPE ( enc , ptr )"		3157139	0					
ANR	3157480	Callee	BYTE_TYPE		3157139	0					
ANR	3157481	Identifier	BYTE_TYPE		3157139	0					
ANR	3157482	ArgumentList	enc		3157139	1					
ANR	3157483	Argument	enc		3157139	0					
ANR	3157484	Identifier	enc		3157139	0					
ANR	3157485	Argument	ptr		3157139	1					
ANR	3157486	Identifier	ptr		3157139	0					
ANR	3157487	CompoundStatement		50:33:1307:1307	3157139	1					
ANR	3157488	Statement	define	861:1:22698:22703	3157139	0	True				
ANR	3157489	Statement	LEAD_CASE	861:8:22705:22713	3157139	1	True				
ANR	3157490	Statement	(	861:17:22714:22714	3157139	2	True				
ANR	3157491	Statement	n	861:18:22715:22715	3157139	3	True				
ANR	3157492	Statement	)	861:19:22716:22716	3157139	4	True				
ANR	3157493	Statement	case	862:4:22724:22727	3157139	5	True				
ANR	3157494	Statement	BT_LEAD	862:9:22729:22735	3157139	6	True				
ANR	3157495	Label	n :	862:20:22740:22741	3157139	7	True				
ANR	3157496	Identifier	n		3157139	0					
ANR	3157497	IfStatement	"if ( end - ptr < n || IS_INVALID_CHAR ( enc , ptr , n ) )"		3157139	8					
ANR	3157498	Condition	"end - ptr < n || IS_INVALID_CHAR ( enc , ptr , n )"	863:10:22755:22799	3157139	0	True				
ANR	3157499	OrExpression	"end - ptr < n || IS_INVALID_CHAR ( enc , ptr , n )"		3157139	0		||			
ANR	3157500	RelationalExpression	end - ptr < n		3157139	0		<			
ANR	3157501	AdditiveExpression	end - ptr		3157139	0		-			
ANR	3157502	Identifier	end		3157139	0					
ANR	3157503	Identifier	ptr		3157139	1					
ANR	3157504	Identifier	n		3157139	1					
ANR	3157505	CallExpression	"IS_INVALID_CHAR ( enc , ptr , n )"		3157139	1					
ANR	3157506	Callee	IS_INVALID_CHAR		3157139	0					
ANR	3157507	Identifier	IS_INVALID_CHAR		3157139	0					
ANR	3157508	ArgumentList	enc		3157139	1					
ANR	3157509	Argument	enc		3157139	0					
ANR	3157510	Identifier	enc		3157139	0					
ANR	3157511	Argument	ptr		3157139	1					
ANR	3157512	Identifier	ptr		3157139	0					
ANR	3157513	Argument	n		3157139	2					
ANR	3157514	Identifier	n		3157139	0					
ANR	3157515	CompoundStatement		53:57:1414:1414	3157139	1					
ANR	3157516	ExpressionStatement	* nextTokPtr = ptr	864:8:22814:22831	3157139	0	True				
ANR	3157517	AssignmentExpression	* nextTokPtr = ptr		3157139	0		=			
ANR	3157518	UnaryOperationExpression	* nextTokPtr		3157139	0					
ANR	3157519	UnaryOperator	*		3157139	0					
ANR	3157520	Identifier	nextTokPtr		3157139	1					
ANR	3157521	Identifier	ptr		3157139	1					
ANR	3157522	ReturnStatement	return XML_TOK_DATA_CHARS ;	865:8:22843:22868	3157139	1	True				
ANR	3157523	Identifier	XML_TOK_DATA_CHARS		3157139	0					
ANR	3157524	ExpressionStatement	ptr += n	867:6:22888:22896	3157139	9	True				
ANR	3157525	AssignmentExpression	ptr += n		3157139	0		+=			
ANR	3157526	Identifier	ptr		3157139	0					
ANR	3157527	Identifier	n		3157139	1					
ANR	3157528	BreakStatement	break ;	868:6:22906:22911	3157139	10	True				
ANR	3157529	Statement	LEAD_CASE	869:4:22917:22925	3157139	11	True				
ANR	3157530	Statement	(	869:13:22926:22926	3157139	12	True				
ANR	3157531	Statement	2	869:14:22927:22927	3157139	13	True				
ANR	3157532	Statement	)	869:15:22928:22928	3157139	14	True				
ANR	3157533	Statement	LEAD_CASE	869:17:22930:22938	3157139	15	True				
ANR	3157534	Statement	(	869:26:22939:22939	3157139	16	True				
ANR	3157535	Statement	3	869:27:22940:22940	3157139	17	True				
ANR	3157536	Statement	)	869:28:22941:22941	3157139	18	True				
ANR	3157537	Statement	LEAD_CASE	869:30:22943:22951	3157139	19	True				
ANR	3157538	Statement	(	869:39:22952:22952	3157139	20	True				
ANR	3157539	Statement	4	869:40:22953:22953	3157139	21	True				
ANR	3157540	Statement	)	869:41:22954:22954	3157139	22	True				
ANR	3157541	Statement	undef	870:1:22957:22961	3157139	23	True				
ANR	3157542	Statement	LEAD_CASE	870:7:22963:22971	3157139	24	True				
ANR	3157543	Label	case BT_RSQB :	871:4:22977:22989	3157139	25	True				
ANR	3157544	Identifier	BT_RSQB		3157139	0					
ANR	3157545	IfStatement	"if ( HAS_CHARS ( enc , ptr , end , 2 ) )"		3157139	26					
ANR	3157546	Condition	"HAS_CHARS ( enc , ptr , end , 2 )"	872:10:23001:23027	3157139	0	True				
ANR	3157547	CallExpression	"HAS_CHARS ( enc , ptr , end , 2 )"		3157139	0					
ANR	3157548	Callee	HAS_CHARS		3157139	0					
ANR	3157549	Identifier	HAS_CHARS		3157139	0					
ANR	3157550	ArgumentList	enc		3157139	1					
ANR	3157551	Argument	enc		3157139	0					
ANR	3157552	Identifier	enc		3157139	0					
ANR	3157553	Argument	ptr		3157139	1					
ANR	3157554	Identifier	ptr		3157139	0					
ANR	3157555	Argument	end		3157139	2					
ANR	3157556	Identifier	end		3157139	0					
ANR	3157557	Argument	2		3157139	3					
ANR	3157558	PrimaryExpression	2		3157139	0					
ANR	3157559	CompoundStatement		62:39:1642:1642	3157139	1					
ANR	3157560	IfStatement	"if ( ! CHAR_MATCHES ( enc , ptr + MINBPC ( enc ) , ASCII_RSQB ) )"		3157139	0					
ANR	3157561	Condition	"! CHAR_MATCHES ( enc , ptr + MINBPC ( enc ) , ASCII_RSQB )"	873:13:23045:23093	3157139	0	True				
ANR	3157562	UnaryOperationExpression	"! CHAR_MATCHES ( enc , ptr + MINBPC ( enc ) , ASCII_RSQB )"		3157139	0					
ANR	3157563	UnaryOperator	!		3157139	0					
ANR	3157564	CallExpression	"CHAR_MATCHES ( enc , ptr + MINBPC ( enc ) , ASCII_RSQB )"		3157139	1					
ANR	3157565	Callee	CHAR_MATCHES		3157139	0					
ANR	3157566	Identifier	CHAR_MATCHES		3157139	0					
ANR	3157567	ArgumentList	enc		3157139	1					
ANR	3157568	Argument	enc		3157139	0					
ANR	3157569	Identifier	enc		3157139	0					
ANR	3157570	Argument	ptr + MINBPC ( enc )		3157139	1					
ANR	3157571	AdditiveExpression	ptr + MINBPC ( enc )		3157139	0		+			
ANR	3157572	Identifier	ptr		3157139	0					
ANR	3157573	CallExpression	MINBPC ( enc )		3157139	1					
ANR	3157574	Callee	MINBPC		3157139	0					
ANR	3157575	Identifier	MINBPC		3157139	0					
ANR	3157576	ArgumentList	enc		3157139	1					
ANR	3157577	Argument	enc		3157139	0					
ANR	3157578	Identifier	enc		3157139	0					
ANR	3157579	Argument	ASCII_RSQB		3157139	2					
ANR	3157580	Identifier	ASCII_RSQB		3157139	0					
ANR	3157581	CompoundStatement		63:64:1708:1708	3157139	1					
ANR	3157582	ExpressionStatement	ptr += MINBPC ( enc )	874:11:23109:23127	3157139	0	True				
ANR	3157583	AssignmentExpression	ptr += MINBPC ( enc )		3157139	0		+=			
ANR	3157584	Identifier	ptr		3157139	0					
ANR	3157585	CallExpression	MINBPC ( enc )		3157139	1					
ANR	3157586	Callee	MINBPC		3157139	0					
ANR	3157587	Identifier	MINBPC		3157139	0					
ANR	3157588	ArgumentList	enc		3157139	1					
ANR	3157589	Argument	enc		3157139	0					
ANR	3157590	Identifier	enc		3157139	0					
ANR	3157591	BreakStatement	break ;	875:11:23140:23145	3157139	1	True				
ANR	3157592	IfStatement	"if ( HAS_CHARS ( enc , ptr , end , 3 ) )"		3157139	1					
ANR	3157593	Condition	"HAS_CHARS ( enc , ptr , end , 3 )"	877:13:23171:23197	3157139	0	True				
ANR	3157594	CallExpression	"HAS_CHARS ( enc , ptr , end , 3 )"		3157139	0					
ANR	3157595	Callee	HAS_CHARS		3157139	0					
ANR	3157596	Identifier	HAS_CHARS		3157139	0					
ANR	3157597	ArgumentList	enc		3157139	1					
ANR	3157598	Argument	enc		3157139	0					
ANR	3157599	Identifier	enc		3157139	0					
ANR	3157600	Argument	ptr		3157139	1					
ANR	3157601	Identifier	ptr		3157139	0					
ANR	3157602	Argument	end		3157139	2					
ANR	3157603	Identifier	end		3157139	0					
ANR	3157604	Argument	3		3157139	3					
ANR	3157605	PrimaryExpression	3		3157139	0					
ANR	3157606	CompoundStatement		67:42:1812:1812	3157139	1					
ANR	3157607	IfStatement	"if ( ! CHAR_MATCHES ( enc , ptr + 2 * MINBPC ( enc ) , ASCII_GT ) )"		3157139	0					
ANR	3157608	Condition	"! CHAR_MATCHES ( enc , ptr + 2 * MINBPC ( enc ) , ASCII_GT )"	878:15:23217:23265	3157139	0	True				
ANR	3157609	UnaryOperationExpression	"! CHAR_MATCHES ( enc , ptr + 2 * MINBPC ( enc ) , ASCII_GT )"		3157139	0					
ANR	3157610	UnaryOperator	!		3157139	0					
ANR	3157611	CallExpression	"CHAR_MATCHES ( enc , ptr + 2 * MINBPC ( enc ) , ASCII_GT )"		3157139	1					
ANR	3157612	Callee	CHAR_MATCHES		3157139	0					
ANR	3157613	Identifier	CHAR_MATCHES		3157139	0					
ANR	3157614	ArgumentList	enc		3157139	1					
ANR	3157615	Argument	enc		3157139	0					
ANR	3157616	Identifier	enc		3157139	0					
ANR	3157617	Argument	ptr + 2 * MINBPC ( enc )		3157139	1					
ANR	3157618	AdditiveExpression	ptr + 2 * MINBPC ( enc )		3157139	0		+			
ANR	3157619	Identifier	ptr		3157139	0					
ANR	3157620	MultiplicativeExpression	2 * MINBPC ( enc )		3157139	1		*			
ANR	3157621	PrimaryExpression	2		3157139	0					
ANR	3157622	CallExpression	MINBPC ( enc )		3157139	1					
ANR	3157623	Callee	MINBPC		3157139	0					
ANR	3157624	Identifier	MINBPC		3157139	0					
ANR	3157625	ArgumentList	enc		3157139	1					
ANR	3157626	Argument	enc		3157139	0					
ANR	3157627	Identifier	enc		3157139	0					
ANR	3157628	Argument	ASCII_GT		3157139	2					
ANR	3157629	Identifier	ASCII_GT		3157139	0					
ANR	3157630	CompoundStatement		68:66:1880:1880	3157139	1					
ANR	3157631	ExpressionStatement	ptr += MINBPC ( enc )	879:13:23283:23301	3157139	0	True				
ANR	3157632	AssignmentExpression	ptr += MINBPC ( enc )		3157139	0		+=			
ANR	3157633	Identifier	ptr		3157139	0					
ANR	3157634	CallExpression	MINBPC ( enc )		3157139	1					
ANR	3157635	Callee	MINBPC		3157139	0					
ANR	3157636	Identifier	MINBPC		3157139	0					
ANR	3157637	ArgumentList	enc		3157139	1					
ANR	3157638	Argument	enc		3157139	0					
ANR	3157639	Identifier	enc		3157139	0					
ANR	3157640	BreakStatement	break ;	880:13:23316:23321	3157139	1	True				
ANR	3157641	ExpressionStatement	* nextTokPtr = ptr + 2 * MINBPC ( enc )	882:11:23347:23380	3157139	1	True				
ANR	3157642	AssignmentExpression	* nextTokPtr = ptr + 2 * MINBPC ( enc )		3157139	0		=			
ANR	3157643	UnaryOperationExpression	* nextTokPtr		3157139	0					
ANR	3157644	UnaryOperator	*		3157139	0					
ANR	3157645	Identifier	nextTokPtr		3157139	1					
ANR	3157646	AdditiveExpression	ptr + 2 * MINBPC ( enc )		3157139	1		+			
ANR	3157647	Identifier	ptr		3157139	0					
ANR	3157648	MultiplicativeExpression	2 * MINBPC ( enc )		3157139	1		*			
ANR	3157649	PrimaryExpression	2		3157139	0					
ANR	3157650	CallExpression	MINBPC ( enc )		3157139	1					
ANR	3157651	Callee	MINBPC		3157139	0					
ANR	3157652	Identifier	MINBPC		3157139	0					
ANR	3157653	ArgumentList	enc		3157139	1					
ANR	3157654	Argument	enc		3157139	0					
ANR	3157655	Identifier	enc		3157139	0					
ANR	3157656	ReturnStatement	return XML_TOK_INVALID ;	883:11:23393:23415	3157139	2	True				
ANR	3157657	Identifier	XML_TOK_INVALID		3157139	0					
ANR	3157658	Label	case BT_AMP :	887:4:23465:23476	3157139	27	True				
ANR	3157659	Identifier	BT_AMP		3157139	0					
ANR	3157660	Label	case BT_LT :	888:4:23482:23492	3157139	28	True				
ANR	3157661	Identifier	BT_LT		3157139	0					
ANR	3157662	Label	case BT_NONXML :	889:4:23498:23512	3157139	29	True				
ANR	3157663	Identifier	BT_NONXML		3157139	0					
ANR	3157664	Label	case BT_MALFORM :	890:4:23518:23533	3157139	30	True				
ANR	3157665	Identifier	BT_MALFORM		3157139	0					
ANR	3157666	Label	case BT_TRAIL :	891:4:23539:23552	3157139	31	True				
ANR	3157667	Identifier	BT_TRAIL		3157139	0					
ANR	3157668	Label	case BT_CR :	892:4:23558:23568	3157139	32	True				
ANR	3157669	Identifier	BT_CR		3157139	0					
ANR	3157670	Label	case BT_LF :	893:4:23574:23584	3157139	33	True				
ANR	3157671	Identifier	BT_LF		3157139	0					
ANR	3157672	ExpressionStatement	* nextTokPtr = ptr	894:6:23592:23609	3157139	34	True				
ANR	3157673	AssignmentExpression	* nextTokPtr = ptr		3157139	0		=			
ANR	3157674	UnaryOperationExpression	* nextTokPtr		3157139	0					
ANR	3157675	UnaryOperator	*		3157139	0					
ANR	3157676	Identifier	nextTokPtr		3157139	1					
ANR	3157677	Identifier	ptr		3157139	1					
ANR	3157678	ReturnStatement	return XML_TOK_DATA_CHARS ;	895:6:23617:23642	3157139	35	True				
ANR	3157679	Identifier	XML_TOK_DATA_CHARS		3157139	0					
ANR	3157680	Label	default :	896:4:23648:23655	3157139	36	True				
ANR	3157681	Identifier	default		3157139	0					
ANR	3157682	ExpressionStatement	ptr += MINBPC ( enc )	897:6:23663:23681	3157139	37	True				
ANR	3157683	AssignmentExpression	ptr += MINBPC ( enc )		3157139	0		+=			
ANR	3157684	Identifier	ptr		3157139	0					
ANR	3157685	CallExpression	MINBPC ( enc )		3157139	1					
ANR	3157686	Callee	MINBPC		3157139	0					
ANR	3157687	Identifier	MINBPC		3157139	0					
ANR	3157688	ArgumentList	enc		3157139	1					
ANR	3157689	Argument	enc		3157139	0					
ANR	3157690	Identifier	enc		3157139	0					
ANR	3157691	BreakStatement	break ;	898:6:23689:23694	3157139	38	True				
ANR	3157692	ExpressionStatement	* nextTokPtr = ptr	901:2:23708:23725	3157139	4	True				
ANR	3157693	AssignmentExpression	* nextTokPtr = ptr		3157139	0		=			
ANR	3157694	UnaryOperationExpression	* nextTokPtr		3157139	0					
ANR	3157695	UnaryOperator	*		3157139	0					
ANR	3157696	Identifier	nextTokPtr		3157139	1					
ANR	3157697	Identifier	ptr		3157139	1					
ANR	3157698	ReturnStatement	return XML_TOK_DATA_CHARS ;	902:2:23729:23754	3157139	5	True				
ANR	3157699	Identifier	XML_TOK_DATA_CHARS		3157139	0					
ANR	3157700	ReturnType	static int PTRCALL PREFIX		3157139	1					
ANR	3157701	Identifier	( contentTok )		3157139	2					
ANR	3157702	Identifier	contentTok		3157139	3					
ANR	3157703	ParameterList	"const ENCODING * enc , const char * ptr , const char * end , const char * * nextTokPtr"		3157139	4					
ANR	3157704	Parameter	const ENCODING * enc	809:19:21288:21306	3157139	0	True				
ANR	3157705	ParameterType	const ENCODING *		3157139	0					
ANR	3157706	Identifier	enc		3157139	1					
ANR	3157707	Parameter	const char * ptr	809:40:21309:21323	3157139	1	True				
ANR	3157708	ParameterType	const char *		3157139	0					
ANR	3157709	Identifier	ptr		3157139	1					
ANR	3157710	Parameter	const char * end	809:57:21326:21340	3157139	2	True				
ANR	3157711	ParameterType	const char *		3157139	0					
ANR	3157712	Identifier	end		3157139	1					
ANR	3157713	Parameter	const char * * nextTokPtr	810:19:21362:21384	3157139	3	True				
ANR	3157714	ParameterType	const char * *		3157139	0					
ANR	3157715	Identifier	nextTokPtr		3157139	1					
ANR	3157716	CFGEntryNode	ENTRY		3157139		True				
ANR	3157717	CFGExitNode	EXIT		3157139		True				
ANR	3157718	Symbol	nextTokPtr		3157139						
ANR	3157719	Symbol	XML_TOK_PARTIAL		3157139						
ANR	3157720	Symbol	HAS_CHARS		3157139						
ANR	3157721	Symbol	BYTE_TYPE		3157139						
ANR	3157722	Symbol	* nextTokPtr		3157139						
ANR	3157723	Symbol	MINBPC		3157139						
ANR	3157724	Symbol	BT_LF		3157139						
ANR	3157725	Symbol	XML_TOK_TRAILING_RSQB		3157139						
ANR	3157726	Symbol	XML_TOK_DATA_NEWLINE		3157139						
ANR	3157727	Symbol	end		3157139						
ANR	3157728	Symbol	enc		3157139						
ANR	3157729	Symbol	XML_TOK_TRAILING_CR		3157139						
ANR	3157730	Symbol	XML_TOK_INVALID		3157139						
ANR	3157731	Symbol	XML_TOK_DATA_CHARS		3157139						
ANR	3157732	Symbol	IS_INVALID_CHAR		3157139						
ANR	3157733	Symbol	n		3157139						
ANR	3157734	Symbol	ptr		3157139						
ANR	3157735	Symbol	scanRef		3157139						
ANR	3157736	Symbol	CHAR_MATCHES		3157139						
ANR	3157737	Symbol	PREFIX		3157139						
ANR	3157738	Symbol	ASCII_GT		3157139						
ANR	3157739	Symbol	XML_TOK_NONE		3157139						
ANR	3157740	Symbol	scanLt		3157139						
ANR	3157741	Symbol	HAS_CHAR		3157139						
ANR	3157742	Symbol	ASCII_RSQB		3157139						
ANR	3157743	Function	scanPercent	907:0:23804:24546							
ANR	3157744	FunctionDef	"scanPercent (const ENCODING * enc , const char * ptr , const char * end , const char * * nextTokPtr)"		3157743	0					
ANR	3157745	CompoundStatement		910:0:23943:24546	3157743	0					
ANR	3157746	ExpressionStatement	"REQUIRE_CHAR ( enc , ptr , end )"	911:2:23947:23974	3157743	0	True				
ANR	3157747	CallExpression	"REQUIRE_CHAR ( enc , ptr , end )"		3157743	0					
ANR	3157748	Callee	REQUIRE_CHAR		3157743	0					
ANR	3157749	Identifier	REQUIRE_CHAR		3157743	0					
ANR	3157750	ArgumentList	enc		3157743	1					
ANR	3157751	Argument	enc		3157743	0					
ANR	3157752	Identifier	enc		3157743	0					
ANR	3157753	Argument	ptr		3157743	1					
ANR	3157754	Identifier	ptr		3157743	0					
ANR	3157755	Argument	end		3157743	2					
ANR	3157756	Identifier	end		3157743	0					
ANR	3157757	SwitchStatement	"switch ( BYTE_TYPE ( enc , ptr ) )"		3157743	1					
ANR	3157758	Condition	"BYTE_TYPE ( enc , ptr )"	912:10:23986:24004	3157743	0	True				
ANR	3157759	CallExpression	"BYTE_TYPE ( enc , ptr )"		3157743	0					
ANR	3157760	Callee	BYTE_TYPE		3157743	0					
ANR	3157761	Identifier	BYTE_TYPE		3157743	0					
ANR	3157762	ArgumentList	enc		3157743	1					
ANR	3157763	Argument	enc		3157743	0					
ANR	3157764	Identifier	enc		3157743	0					
ANR	3157765	Argument	ptr		3157743	1					
ANR	3157766	Identifier	ptr		3157743	0					
ANR	3157767	CompoundStatement		3:31:63:63	3157743	1					
ANR	3157768	Statement	CHECK_NMSTRT_CASES	913:2:24011:24028	3157743	0	True				
ANR	3157769	Statement	(	913:20:24029:24029	3157743	1	True				
ANR	3157770	Statement	enc	913:21:24030:24032	3157743	2	True				
ANR	3157771	Statement	","	913:24:24033:24033	3157743	3	True				
ANR	3157772	Statement	ptr	913:26:24035:24037	3157743	4	True				
ANR	3157773	Statement	","	913:29:24038:24038	3157743	5	True				
ANR	3157774	Statement	end	913:31:24040:24042	3157743	6	True				
ANR	3157775	Statement	","	913:34:24043:24043	3157743	7	True				
ANR	3157776	Statement	nextTokPtr	913:36:24045:24054	3157743	8	True				
ANR	3157777	Statement	)	913:46:24055:24055	3157743	9	True				
ANR	3157778	Label	case BT_S :	914:2:24059:24068	3157743	10	True				
ANR	3157779	Identifier	BT_S		3157743	0					
ANR	3157780	Label	case BT_LF :	914:13:24070:24080	3157743	11	True				
ANR	3157781	Identifier	BT_LF		3157743	0					
ANR	3157782	Label	case BT_CR :	914:25:24082:24092	3157743	12	True				
ANR	3157783	Identifier	BT_CR		3157743	0					
ANR	3157784	Label	case BT_PERCNT :	914:37:24094:24108	3157743	13	True				
ANR	3157785	Identifier	BT_PERCNT		3157743	0					
ANR	3157786	ExpressionStatement	* nextTokPtr = ptr	915:4:24114:24131	3157743	14	True				
ANR	3157787	AssignmentExpression	* nextTokPtr = ptr		3157743	0		=			
ANR	3157788	UnaryOperationExpression	* nextTokPtr		3157743	0					
ANR	3157789	UnaryOperator	*		3157743	0					
ANR	3157790	Identifier	nextTokPtr		3157743	1					
ANR	3157791	Identifier	ptr		3157743	1					
ANR	3157792	ReturnStatement	return XML_TOK_PERCENT ;	916:4:24137:24159	3157743	15	True				
ANR	3157793	Identifier	XML_TOK_PERCENT		3157743	0					
ANR	3157794	Label	default :	917:2:24163:24170	3157743	16	True				
ANR	3157795	Identifier	default		3157743	0					
ANR	3157796	ExpressionStatement	* nextTokPtr = ptr	918:4:24176:24193	3157743	17	True				
ANR	3157797	AssignmentExpression	* nextTokPtr = ptr		3157743	0		=			
ANR	3157798	UnaryOperationExpression	* nextTokPtr		3157743	0					
ANR	3157799	UnaryOperator	*		3157743	0					
ANR	3157800	Identifier	nextTokPtr		3157743	1					
ANR	3157801	Identifier	ptr		3157743	1					
ANR	3157802	ReturnStatement	return XML_TOK_INVALID ;	919:4:24199:24221	3157743	18	True				
ANR	3157803	Identifier	XML_TOK_INVALID		3157743	0					
ANR	3157804	WhileStatement	"while ( HAS_CHAR ( enc , ptr , end ) )"		3157743	2					
ANR	3157805	Condition	"HAS_CHAR ( enc , ptr , end )"	921:9:24236:24258	3157743	0	True				
ANR	3157806	CallExpression	"HAS_CHAR ( enc , ptr , end )"		3157743	0					
ANR	3157807	Callee	HAS_CHAR		3157743	0					
ANR	3157808	Identifier	HAS_CHAR		3157743	0					
ANR	3157809	ArgumentList	enc		3157743	1					
ANR	3157810	Argument	enc		3157743	0					
ANR	3157811	Identifier	enc		3157743	0					
ANR	3157812	Argument	ptr		3157743	1					
ANR	3157813	Identifier	ptr		3157743	0					
ANR	3157814	Argument	end		3157743	2					
ANR	3157815	Identifier	end		3157743	0					
ANR	3157816	CompoundStatement		12:34:317:317	3157743	1					
ANR	3157817	SwitchStatement	"switch ( BYTE_TYPE ( enc , ptr ) )"		3157743	0					
ANR	3157818	Condition	"BYTE_TYPE ( enc , ptr )"	922:12:24275:24293	3157743	0	True				
ANR	3157819	CallExpression	"BYTE_TYPE ( enc , ptr )"		3157743	0					
ANR	3157820	Callee	BYTE_TYPE		3157743	0					
ANR	3157821	Identifier	BYTE_TYPE		3157743	0					
ANR	3157822	ArgumentList	enc		3157743	1					
ANR	3157823	Argument	enc		3157743	0					
ANR	3157824	Identifier	enc		3157743	0					
ANR	3157825	Argument	ptr		3157743	1					
ANR	3157826	Identifier	ptr		3157743	0					
ANR	3157827	CompoundStatement		13:33:352:352	3157743	1					
ANR	3157828	Statement	CHECK_NAME_CASES	923:4:24302:24317	3157743	0	True				
ANR	3157829	Statement	(	923:20:24318:24318	3157743	1	True				
ANR	3157830	Statement	enc	923:21:24319:24321	3157743	2	True				
ANR	3157831	Statement	","	923:24:24322:24322	3157743	3	True				
ANR	3157832	Statement	ptr	923:26:24324:24326	3157743	4	True				
ANR	3157833	Statement	","	923:29:24327:24327	3157743	5	True				
ANR	3157834	Statement	end	923:31:24329:24331	3157743	6	True				
ANR	3157835	Statement	","	923:34:24332:24332	3157743	7	True				
ANR	3157836	Statement	nextTokPtr	923:36:24334:24343	3157743	8	True				
ANR	3157837	Statement	)	923:46:24344:24344	3157743	9	True				
ANR	3157838	Label	case BT_SEMI :	924:4:24350:24362	3157743	10	True				
ANR	3157839	Identifier	BT_SEMI		3157743	0					
ANR	3157840	ExpressionStatement	* nextTokPtr = ptr + MINBPC ( enc )	925:6:24370:24401	3157743	11	True				
ANR	3157841	AssignmentExpression	* nextTokPtr = ptr + MINBPC ( enc )		3157743	0		=			
ANR	3157842	UnaryOperationExpression	* nextTokPtr		3157743	0					
ANR	3157843	UnaryOperator	*		3157743	0					
ANR	3157844	Identifier	nextTokPtr		3157743	1					
ANR	3157845	AdditiveExpression	ptr + MINBPC ( enc )		3157743	1		+			
ANR	3157846	Identifier	ptr		3157743	0					
ANR	3157847	CallExpression	MINBPC ( enc )		3157743	1					
ANR	3157848	Callee	MINBPC		3157743	0					
ANR	3157849	Identifier	MINBPC		3157743	0					
ANR	3157850	ArgumentList	enc		3157743	1					
ANR	3157851	Argument	enc		3157743	0					
ANR	3157852	Identifier	enc		3157743	0					
ANR	3157853	ReturnStatement	return XML_TOK_PARAM_ENTITY_REF ;	926:6:24409:24440	3157743	12	True				
ANR	3157854	Identifier	XML_TOK_PARAM_ENTITY_REF		3157743	0					
ANR	3157855	Label	default :	927:4:24446:24453	3157743	13	True				
ANR	3157856	Identifier	default		3157743	0					
ANR	3157857	ExpressionStatement	* nextTokPtr = ptr	928:6:24461:24478	3157743	14	True				
ANR	3157858	AssignmentExpression	* nextTokPtr = ptr		3157743	0		=			
ANR	3157859	UnaryOperationExpression	* nextTokPtr		3157743	0					
ANR	3157860	UnaryOperator	*		3157743	0					
ANR	3157861	Identifier	nextTokPtr		3157743	1					
ANR	3157862	Identifier	ptr		3157743	1					
ANR	3157863	ReturnStatement	return XML_TOK_INVALID ;	929:6:24486:24508	3157743	15	True				
ANR	3157864	Identifier	XML_TOK_INVALID		3157743	0					
ANR	3157865	ReturnStatement	return XML_TOK_PARTIAL ;	932:2:24522:24544	3157743	3	True				
ANR	3157866	Identifier	XML_TOK_PARTIAL		3157743	0					
ANR	3157867	ReturnType	static int PTRCALL PREFIX		3157743	1					
ANR	3157868	Identifier	( scanPercent )		3157743	2					
ANR	3157869	Identifier	scanPercent		3157743	3					
ANR	3157870	ParameterList	"const ENCODING * enc , const char * ptr , const char * end , const char * * nextTokPtr"		3157743	4					
ANR	3157871	Parameter	const ENCODING * enc	908:20:23843:23861	3157743	0	True				
ANR	3157872	ParameterType	const ENCODING *		3157743	0					
ANR	3157873	Identifier	enc		3157743	1					
ANR	3157874	Parameter	const char * ptr	908:41:23864:23878	3157743	1	True				
ANR	3157875	ParameterType	const char *		3157743	0					
ANR	3157876	Identifier	ptr		3157743	1					
ANR	3157877	Parameter	const char * end	908:58:23881:23895	3157743	2	True				
ANR	3157878	ParameterType	const char *		3157743	0					
ANR	3157879	Identifier	end		3157743	1					
ANR	3157880	Parameter	const char * * nextTokPtr	909:20:23918:23940	3157743	3	True				
ANR	3157881	ParameterType	const char * *		3157743	0					
ANR	3157882	Identifier	nextTokPtr		3157743	1					
ANR	3157883	CFGEntryNode	ENTRY		3157743		True				
ANR	3157884	CFGExitNode	EXIT		3157743		True				
ANR	3157885	Symbol	XML_TOK_INVALID		3157743						
ANR	3157886	Symbol	XML_TOK_PARAM_ENTITY_REF		3157743						
ANR	3157887	Symbol	nextTokPtr		3157743						
ANR	3157888	Symbol	XML_TOK_PERCENT		3157743						
ANR	3157889	Symbol	XML_TOK_PARTIAL		3157743						
ANR	3157890	Symbol	BYTE_TYPE		3157743						
ANR	3157891	Symbol	* nextTokPtr		3157743						
ANR	3157892	Symbol	end		3157743						
ANR	3157893	Symbol	enc		3157743						
ANR	3157894	Symbol	HAS_CHAR		3157743						
ANR	3157895	Symbol	MINBPC		3157743						
ANR	3157896	Symbol	ptr		3157743						
ANR	3157897	Function	scanPoundName	935:0:24549:25258							
ANR	3157898	FunctionDef	"scanPoundName (const ENCODING * enc , const char * ptr , const char * end , const char * * nextTokPtr)"		3157897	0					
ANR	3157899	CompoundStatement		938:0:24692:25258	3157897	0					
ANR	3157900	ExpressionStatement	"REQUIRE_CHAR ( enc , ptr , end )"	939:2:24696:24723	3157897	0	True				
ANR	3157901	CallExpression	"REQUIRE_CHAR ( enc , ptr , end )"		3157897	0					
ANR	3157902	Callee	REQUIRE_CHAR		3157897	0					
ANR	3157903	Identifier	REQUIRE_CHAR		3157897	0					
ANR	3157904	ArgumentList	enc		3157897	1					
ANR	3157905	Argument	enc		3157897	0					
ANR	3157906	Identifier	enc		3157897	0					
ANR	3157907	Argument	ptr		3157897	1					
ANR	3157908	Identifier	ptr		3157897	0					
ANR	3157909	Argument	end		3157897	2					
ANR	3157910	Identifier	end		3157897	0					
ANR	3157911	SwitchStatement	"switch ( BYTE_TYPE ( enc , ptr ) )"		3157897	1					
ANR	3157912	Condition	"BYTE_TYPE ( enc , ptr )"	940:10:24735:24753	3157897	0	True				
ANR	3157913	CallExpression	"BYTE_TYPE ( enc , ptr )"		3157897	0					
ANR	3157914	Callee	BYTE_TYPE		3157897	0					
ANR	3157915	Identifier	BYTE_TYPE		3157897	0					
ANR	3157916	ArgumentList	enc		3157897	1					
ANR	3157917	Argument	enc		3157897	0					
ANR	3157918	Identifier	enc		3157897	0					
ANR	3157919	Argument	ptr		3157897	1					
ANR	3157920	Identifier	ptr		3157897	0					
ANR	3157921	CompoundStatement		3:31:63:63	3157897	1					
ANR	3157922	Statement	CHECK_NMSTRT_CASES	941:2:24760:24777	3157897	0	True				
ANR	3157923	Statement	(	941:20:24778:24778	3157897	1	True				
ANR	3157924	Statement	enc	941:21:24779:24781	3157897	2	True				
ANR	3157925	Statement	","	941:24:24782:24782	3157897	3	True				
ANR	3157926	Statement	ptr	941:26:24784:24786	3157897	4	True				
ANR	3157927	Statement	","	941:29:24787:24787	3157897	5	True				
ANR	3157928	Statement	end	941:31:24789:24791	3157897	6	True				
ANR	3157929	Statement	","	941:34:24792:24792	3157897	7	True				
ANR	3157930	Statement	nextTokPtr	941:36:24794:24803	3157897	8	True				
ANR	3157931	Statement	)	941:46:24804:24804	3157897	9	True				
ANR	3157932	Label	default :	942:2:24808:24815	3157897	10	True				
ANR	3157933	Identifier	default		3157897	0					
ANR	3157934	ExpressionStatement	* nextTokPtr = ptr	943:4:24821:24838	3157897	11	True				
ANR	3157935	AssignmentExpression	* nextTokPtr = ptr		3157897	0		=			
ANR	3157936	UnaryOperationExpression	* nextTokPtr		3157897	0					
ANR	3157937	UnaryOperator	*		3157897	0					
ANR	3157938	Identifier	nextTokPtr		3157897	1					
ANR	3157939	Identifier	ptr		3157897	1					
ANR	3157940	ReturnStatement	return XML_TOK_INVALID ;	944:4:24844:24866	3157897	12	True				
ANR	3157941	Identifier	XML_TOK_INVALID		3157897	0					
ANR	3157942	WhileStatement	"while ( HAS_CHAR ( enc , ptr , end ) )"		3157897	2					
ANR	3157943	Condition	"HAS_CHAR ( enc , ptr , end )"	946:9:24881:24903	3157897	0	True				
ANR	3157944	CallExpression	"HAS_CHAR ( enc , ptr , end )"		3157897	0					
ANR	3157945	Callee	HAS_CHAR		3157897	0					
ANR	3157946	Identifier	HAS_CHAR		3157897	0					
ANR	3157947	ArgumentList	enc		3157897	1					
ANR	3157948	Argument	enc		3157897	0					
ANR	3157949	Identifier	enc		3157897	0					
ANR	3157950	Argument	ptr		3157897	1					
ANR	3157951	Identifier	ptr		3157897	0					
ANR	3157952	Argument	end		3157897	2					
ANR	3157953	Identifier	end		3157897	0					
ANR	3157954	CompoundStatement		9:34:213:213	3157897	1					
ANR	3157955	SwitchStatement	"switch ( BYTE_TYPE ( enc , ptr ) )"		3157897	0					
ANR	3157956	Condition	"BYTE_TYPE ( enc , ptr )"	947:12:24920:24938	3157897	0	True				
ANR	3157957	CallExpression	"BYTE_TYPE ( enc , ptr )"		3157897	0					
ANR	3157958	Callee	BYTE_TYPE		3157897	0					
ANR	3157959	Identifier	BYTE_TYPE		3157897	0					
ANR	3157960	ArgumentList	enc		3157897	1					
ANR	3157961	Argument	enc		3157897	0					
ANR	3157962	Identifier	enc		3157897	0					
ANR	3157963	Argument	ptr		3157897	1					
ANR	3157964	Identifier	ptr		3157897	0					
ANR	3157965	CompoundStatement		10:33:248:248	3157897	1					
ANR	3157966	Statement	CHECK_NAME_CASES	948:4:24947:24962	3157897	0	True				
ANR	3157967	Statement	(	948:20:24963:24963	3157897	1	True				
ANR	3157968	Statement	enc	948:21:24964:24966	3157897	2	True				
ANR	3157969	Statement	","	948:24:24967:24967	3157897	3	True				
ANR	3157970	Statement	ptr	948:26:24969:24971	3157897	4	True				
ANR	3157971	Statement	","	948:29:24972:24972	3157897	5	True				
ANR	3157972	Statement	end	948:31:24974:24976	3157897	6	True				
ANR	3157973	Statement	","	948:34:24977:24977	3157897	7	True				
ANR	3157974	Statement	nextTokPtr	948:36:24979:24988	3157897	8	True				
ANR	3157975	Statement	)	948:46:24989:24989	3157897	9	True				
ANR	3157976	Label	case BT_CR :	949:4:24995:25005	3157897	10	True				
ANR	3157977	Identifier	BT_CR		3157897	0					
ANR	3157978	Label	case BT_LF :	949:16:25007:25017	3157897	11	True				
ANR	3157979	Identifier	BT_LF		3157897	0					
ANR	3157980	Label	case BT_S :	949:28:25019:25028	3157897	12	True				
ANR	3157981	Identifier	BT_S		3157897	0					
ANR	3157982	Label	case BT_RPAR :	950:4:25034:25046	3157897	13	True				
ANR	3157983	Identifier	BT_RPAR		3157897	0					
ANR	3157984	Label	case BT_GT :	950:18:25048:25058	3157897	14	True				
ANR	3157985	Identifier	BT_GT		3157897	0					
ANR	3157986	Label	case BT_PERCNT :	950:30:25060:25074	3157897	15	True				
ANR	3157987	Identifier	BT_PERCNT		3157897	0					
ANR	3157988	Label	case BT_VERBAR :	950:46:25076:25090	3157897	16	True				
ANR	3157989	Identifier	BT_VERBAR		3157897	0					
ANR	3157990	ExpressionStatement	* nextTokPtr = ptr	951:6:25098:25115	3157897	17	True				
ANR	3157991	AssignmentExpression	* nextTokPtr = ptr		3157897	0		=			
ANR	3157992	UnaryOperationExpression	* nextTokPtr		3157897	0					
ANR	3157993	UnaryOperator	*		3157897	0					
ANR	3157994	Identifier	nextTokPtr		3157897	1					
ANR	3157995	Identifier	ptr		3157897	1					
ANR	3157996	ReturnStatement	return XML_TOK_POUND_NAME ;	952:6:25123:25148	3157897	18	True				
ANR	3157997	Identifier	XML_TOK_POUND_NAME		3157897	0					
ANR	3157998	Label	default :	953:4:25154:25161	3157897	19	True				
ANR	3157999	Identifier	default		3157897	0					
ANR	3158000	ExpressionStatement	* nextTokPtr = ptr	954:6:25169:25186	3157897	20	True				
ANR	3158001	AssignmentExpression	* nextTokPtr = ptr		3157897	0		=			
ANR	3158002	UnaryOperationExpression	* nextTokPtr		3157897	0					
ANR	3158003	UnaryOperator	*		3157897	0					
ANR	3158004	Identifier	nextTokPtr		3157897	1					
ANR	3158005	Identifier	ptr		3157897	1					
ANR	3158006	ReturnStatement	return XML_TOK_INVALID ;	955:6:25194:25216	3157897	21	True				
ANR	3158007	Identifier	XML_TOK_INVALID		3157897	0					
ANR	3158008	ReturnStatement	return - XML_TOK_POUND_NAME ;	958:2:25230:25256	3157897	3	True				
ANR	3158009	UnaryOperationExpression	- XML_TOK_POUND_NAME		3157897	0					
ANR	3158010	UnaryOperator	-		3157897	0					
ANR	3158011	Identifier	XML_TOK_POUND_NAME		3157897	1					
ANR	3158012	ReturnType	static int PTRCALL PREFIX		3157897	1					
ANR	3158013	Identifier	( scanPoundName )		3157897	2					
ANR	3158014	Identifier	scanPoundName		3157897	3					
ANR	3158015	ParameterList	"const ENCODING * enc , const char * ptr , const char * end , const char * * nextTokPtr"		3157897	4					
ANR	3158016	Parameter	const ENCODING * enc	936:22:24590:24608	3157897	0	True				
ANR	3158017	ParameterType	const ENCODING *		3157897	0					
ANR	3158018	Identifier	enc		3157897	1					
ANR	3158019	Parameter	const char * ptr	936:43:24611:24625	3157897	1	True				
ANR	3158020	ParameterType	const char *		3157897	0					
ANR	3158021	Identifier	ptr		3157897	1					
ANR	3158022	Parameter	const char * end	936:60:24628:24642	3157897	2	True				
ANR	3158023	ParameterType	const char *		3157897	0					
ANR	3158024	Identifier	end		3157897	1					
ANR	3158025	Parameter	const char * * nextTokPtr	937:22:24667:24689	3157897	3	True				
ANR	3158026	ParameterType	const char * *		3157897	0					
ANR	3158027	Identifier	nextTokPtr		3157897	1					
ANR	3158028	CFGEntryNode	ENTRY		3157897		True				
ANR	3158029	CFGExitNode	EXIT		3157897		True				
ANR	3158030	Symbol	XML_TOK_INVALID		3157897						
ANR	3158031	Symbol	nextTokPtr		3157897						
ANR	3158032	Symbol	BYTE_TYPE		3157897						
ANR	3158033	Symbol	* nextTokPtr		3157897						
ANR	3158034	Symbol	end		3157897						
ANR	3158035	Symbol	enc		3157897						
ANR	3158036	Symbol	HAS_CHAR		3157897						
ANR	3158037	Symbol	XML_TOK_POUND_NAME		3157897						
ANR	3158038	Symbol	ptr		3157897						
ANR	3158039	Function	scanLit	961:0:25261:26035							
ANR	3158040	FunctionDef	"scanLit (int open , const ENCODING * enc , const char * ptr , const char * end , const char * * nextTokPtr)"		3158039	0					
ANR	3158041	CompoundStatement		965:0:25418:26035	3158039	0					
ANR	3158042	WhileStatement	"while ( HAS_CHAR ( enc , ptr , end ) )"		3158039	0					
ANR	3158043	Condition	"HAS_CHAR ( enc , ptr , end )"	966:9:25429:25451	3158039	0	True				
ANR	3158044	CallExpression	"HAS_CHAR ( enc , ptr , end )"		3158039	0					
ANR	3158045	Callee	HAS_CHAR		3158039	0					
ANR	3158046	Identifier	HAS_CHAR		3158039	0					
ANR	3158047	ArgumentList	enc		3158039	1					
ANR	3158048	Argument	enc		3158039	0					
ANR	3158049	Identifier	enc		3158039	0					
ANR	3158050	Argument	ptr		3158039	1					
ANR	3158051	Identifier	ptr		3158039	0					
ANR	3158052	Argument	end		3158039	2					
ANR	3158053	Identifier	end		3158039	0					
ANR	3158054	CompoundStatement		3:4:41:68	3158039	1					
ANR	3158055	IdentifierDeclStatement	"int t = BYTE_TYPE ( enc , ptr ) ;"	967:4:25460:25487	3158039	0	True				
ANR	3158056	IdentifierDecl	"t = BYTE_TYPE ( enc , ptr )"		3158039	0					
ANR	3158057	IdentifierDeclType	int		3158039	0					
ANR	3158058	Identifier	t		3158039	1					
ANR	3158059	AssignmentExpression	"t = BYTE_TYPE ( enc , ptr )"		3158039	2		=			
ANR	3158060	Identifier	t		3158039	0					
ANR	3158061	CallExpression	"BYTE_TYPE ( enc , ptr )"		3158039	1					
ANR	3158062	Callee	BYTE_TYPE		3158039	0					
ANR	3158063	Identifier	BYTE_TYPE		3158039	0					
ANR	3158064	ArgumentList	enc		3158039	1					
ANR	3158065	Argument	enc		3158039	0					
ANR	3158066	Identifier	enc		3158039	0					
ANR	3158067	Argument	ptr		3158039	1					
ANR	3158068	Identifier	ptr		3158039	0					
ANR	3158069	SwitchStatement	switch ( t )		3158039	1					
ANR	3158070	Condition	t	968:12:25501:25501	3158039	0	True				
ANR	3158071	Identifier	t		3158039	0					
ANR	3158072	CompoundStatement		4:15:85:85	3158039	1					
ANR	3158073	Statement	INVALID_CASES	969:4:25510:25522	3158039	0	True				
ANR	3158074	Statement	(	969:17:25523:25523	3158039	1	True				
ANR	3158075	Statement	ptr	969:18:25524:25526	3158039	2	True				
ANR	3158076	Statement	","	969:21:25527:25527	3158039	3	True				
ANR	3158077	Statement	nextTokPtr	969:23:25529:25538	3158039	4	True				
ANR	3158078	Statement	)	969:33:25539:25539	3158039	5	True				
ANR	3158079	Label	case BT_QUOT :	970:4:25545:25557	3158039	6	True				
ANR	3158080	Identifier	BT_QUOT		3158039	0					
ANR	3158081	Label	case BT_APOS :	971:4:25563:25575	3158039	7	True				
ANR	3158082	Identifier	BT_APOS		3158039	0					
ANR	3158083	ExpressionStatement	ptr += MINBPC ( enc )	972:6:25583:25601	3158039	8	True				
ANR	3158084	AssignmentExpression	ptr += MINBPC ( enc )		3158039	0		+=			
ANR	3158085	Identifier	ptr		3158039	0					
ANR	3158086	CallExpression	MINBPC ( enc )		3158039	1					
ANR	3158087	Callee	MINBPC		3158039	0					
ANR	3158088	Identifier	MINBPC		3158039	0					
ANR	3158089	ArgumentList	enc		3158039	1					
ANR	3158090	Argument	enc		3158039	0					
ANR	3158091	Identifier	enc		3158039	0					
ANR	3158092	IfStatement	if ( t != open )		3158039	9					
ANR	3158093	Condition	t != open	973:10:25613:25621	3158039	0	True				
ANR	3158094	EqualityExpression	t != open		3158039	0		!=			
ANR	3158095	Identifier	t		3158039	0					
ANR	3158096	Identifier	open		3158039	1					
ANR	3158097	BreakStatement	break ;	974:8:25632:25637	3158039	1	True				
ANR	3158098	IfStatement	"if ( ! HAS_CHAR ( enc , ptr , end ) )"		3158039	10					
ANR	3158099	Condition	"! HAS_CHAR ( enc , ptr , end )"	975:10:25649:25673	3158039	0	True				
ANR	3158100	UnaryOperationExpression	"! HAS_CHAR ( enc , ptr , end )"		3158039	0					
ANR	3158101	UnaryOperator	!		3158039	0					
ANR	3158102	CallExpression	"HAS_CHAR ( enc , ptr , end )"		3158039	1					
ANR	3158103	Callee	HAS_CHAR		3158039	0					
ANR	3158104	Identifier	HAS_CHAR		3158039	0					
ANR	3158105	ArgumentList	enc		3158039	1					
ANR	3158106	Argument	enc		3158039	0					
ANR	3158107	Identifier	enc		3158039	0					
ANR	3158108	Argument	ptr		3158039	1					
ANR	3158109	Identifier	ptr		3158039	0					
ANR	3158110	Argument	end		3158039	2					
ANR	3158111	Identifier	end		3158039	0					
ANR	3158112	ReturnStatement	return - XML_TOK_LITERAL ;	976:8:25684:25707	3158039	1	True				
ANR	3158113	UnaryOperationExpression	- XML_TOK_LITERAL		3158039	0					
ANR	3158114	UnaryOperator	-		3158039	0					
ANR	3158115	Identifier	XML_TOK_LITERAL		3158039	1					
ANR	3158116	ExpressionStatement	* nextTokPtr = ptr	977:6:25715:25732	3158039	11	True				
ANR	3158117	AssignmentExpression	* nextTokPtr = ptr		3158039	0		=			
ANR	3158118	UnaryOperationExpression	* nextTokPtr		3158039	0					
ANR	3158119	UnaryOperator	*		3158039	0					
ANR	3158120	Identifier	nextTokPtr		3158039	1					
ANR	3158121	Identifier	ptr		3158039	1					
ANR	3158122	SwitchStatement	"switch ( BYTE_TYPE ( enc , ptr ) )"		3158039	12					
ANR	3158123	Condition	"BYTE_TYPE ( enc , ptr )"	978:14:25748:25766	3158039	0	True				
ANR	3158124	CallExpression	"BYTE_TYPE ( enc , ptr )"		3158039	0					
ANR	3158125	Callee	BYTE_TYPE		3158039	0					
ANR	3158126	Identifier	BYTE_TYPE		3158039	0					
ANR	3158127	ArgumentList	enc		3158039	1					
ANR	3158128	Argument	enc		3158039	0					
ANR	3158129	Identifier	enc		3158039	0					
ANR	3158130	Argument	ptr		3158039	1					
ANR	3158131	Identifier	ptr		3158039	0					
ANR	3158132	CompoundStatement		14:35:350:350	3158039	1					
ANR	3158133	Label	case BT_S :	979:6:25777:25786	3158039	0	True				
ANR	3158134	Identifier	BT_S		3158039	0					
ANR	3158135	Label	case BT_CR :	979:17:25788:25798	3158039	1	True				
ANR	3158136	Identifier	BT_CR		3158039	0					
ANR	3158137	Label	case BT_LF :	979:29:25800:25810	3158039	2	True				
ANR	3158138	Identifier	BT_LF		3158039	0					
ANR	3158139	Label	case BT_GT :	980:6:25818:25828	3158039	3	True				
ANR	3158140	Identifier	BT_GT		3158039	0					
ANR	3158141	Label	case BT_PERCNT :	980:18:25830:25844	3158039	4	True				
ANR	3158142	Identifier	BT_PERCNT		3158039	0					
ANR	3158143	Label	case BT_LSQB :	980:34:25846:25858	3158039	5	True				
ANR	3158144	Identifier	BT_LSQB		3158039	0					
ANR	3158145	ReturnStatement	return XML_TOK_LITERAL ;	981:8:25868:25890	3158039	6	True				
ANR	3158146	Identifier	XML_TOK_LITERAL		3158039	0					
ANR	3158147	Label	default :	982:6:25898:25905	3158039	7	True				
ANR	3158148	Identifier	default		3158039	0					
ANR	3158149	ReturnStatement	return XML_TOK_INVALID ;	983:8:25915:25937	3158039	8	True				
ANR	3158150	Identifier	XML_TOK_INVALID		3158039	0					
ANR	3158151	Label	default :	985:4:25951:25958	3158039	13	True				
ANR	3158152	Identifier	default		3158039	0					
ANR	3158153	ExpressionStatement	ptr += MINBPC ( enc )	986:6:25966:25984	3158039	14	True				
ANR	3158154	AssignmentExpression	ptr += MINBPC ( enc )		3158039	0		+=			
ANR	3158155	Identifier	ptr		3158039	0					
ANR	3158156	CallExpression	MINBPC ( enc )		3158039	1					
ANR	3158157	Callee	MINBPC		3158039	0					
ANR	3158158	Identifier	MINBPC		3158039	0					
ANR	3158159	ArgumentList	enc		3158039	1					
ANR	3158160	Argument	enc		3158039	0					
ANR	3158161	Identifier	enc		3158039	0					
ANR	3158162	BreakStatement	break ;	987:6:25992:25997	3158039	15	True				
ANR	3158163	ReturnStatement	return XML_TOK_PARTIAL ;	990:2:26011:26033	3158039	1	True				
ANR	3158164	Identifier	XML_TOK_PARTIAL		3158039	0					
ANR	3158165	ReturnType	static int PTRCALL PREFIX		3158039	1					
ANR	3158166	Identifier	( scanLit )		3158039	2					
ANR	3158167	Identifier	scanLit		3158039	3					
ANR	3158168	ParameterList	"int open , const ENCODING * enc , const char * ptr , const char * end , const char * * nextTokPtr"		3158039	4					
ANR	3158169	Parameter	int open	962:16:25296:25303	3158039	0	True				
ANR	3158170	ParameterType	int		3158039	0					
ANR	3158171	Identifier	open		3158039	1					
ANR	3158172	Parameter	const ENCODING * enc	962:26:25306:25324	3158039	1	True				
ANR	3158173	ParameterType	const ENCODING *		3158039	0					
ANR	3158174	Identifier	enc		3158039	1					
ANR	3158175	Parameter	const char * ptr	963:16:25343:25357	3158039	2	True				
ANR	3158176	ParameterType	const char *		3158039	0					
ANR	3158177	Identifier	ptr		3158039	1					
ANR	3158178	Parameter	const char * end	963:33:25360:25374	3158039	3	True				
ANR	3158179	ParameterType	const char *		3158039	0					
ANR	3158180	Identifier	end		3158039	1					
ANR	3158181	Parameter	const char * * nextTokPtr	964:16:25393:25415	3158039	4	True				
ANR	3158182	ParameterType	const char * *		3158039	0					
ANR	3158183	Identifier	nextTokPtr		3158039	1					
ANR	3158184	CFGEntryNode	ENTRY		3158039		True				
ANR	3158185	CFGExitNode	EXIT		3158039		True				
ANR	3158186	Symbol	XML_TOK_INVALID		3158039						
ANR	3158187	Symbol	nextTokPtr		3158039						
ANR	3158188	Symbol	XML_TOK_PARTIAL		3158039						
ANR	3158189	Symbol	BYTE_TYPE		3158039						
ANR	3158190	Symbol	XML_TOK_LITERAL		3158039						
ANR	3158191	Symbol	* nextTokPtr		3158039						
ANR	3158192	Symbol	MINBPC		3158039						
ANR	3158193	Symbol	ptr		3158039						
ANR	3158194	Symbol	t		3158039						
ANR	3158195	Symbol	end		3158039						
ANR	3158196	Symbol	enc		3158039						
ANR	3158197	Symbol	HAS_CHAR		3158039						
ANR	3158198	Symbol	open		3158039						
ANR	3158199	Function	prologTok	993:0:26038:32033							
ANR	3158200	FunctionDef	"prologTok (const ENCODING * enc , const char * ptr , const char * end , const char * * nextTokPtr)"		3158199	0					
ANR	3158201	CompoundStatement		996:0:26173:32033	3158199	0					
ANR	3158202	IdentifierDeclStatement	int tok ;	997:2:26177:26184	3158199	0	True				
ANR	3158203	IdentifierDecl	tok		3158199	0					
ANR	3158204	IdentifierDeclType	int		3158199	0					
ANR	3158205	Identifier	tok		3158199	1					
ANR	3158206	IfStatement	if ( ptr >= end )		3158199	1					
ANR	3158207	Condition	ptr >= end	998:6:26192:26201	3158199	0	True				
ANR	3158208	RelationalExpression	ptr >= end		3158199	0		>=			
ANR	3158209	Identifier	ptr		3158199	0					
ANR	3158210	Identifier	end		3158199	1					
ANR	3158211	ReturnStatement	return XML_TOK_NONE ;	999:4:26208:26227	3158199	1	True				
ANR	3158212	Identifier	XML_TOK_NONE		3158199	0					
ANR	3158213	IfStatement	if ( MINBPC ( enc ) > 1 )		3158199	2					
ANR	3158214	Condition	MINBPC ( enc ) > 1	1000:6:26235:26249	3158199	0	True				
ANR	3158215	RelationalExpression	MINBPC ( enc ) > 1		3158199	0		>			
ANR	3158216	CallExpression	MINBPC ( enc )		3158199	0					
ANR	3158217	Callee	MINBPC		3158199	0					
ANR	3158218	Identifier	MINBPC		3158199	0					
ANR	3158219	ArgumentList	enc		3158199	1					
ANR	3158220	Argument	enc		3158199	0					
ANR	3158221	Identifier	enc		3158199	0					
ANR	3158222	PrimaryExpression	1		3158199	1					
ANR	3158223	CompoundStatement		6:4:84:104	3158199	1					
ANR	3158224	IdentifierDeclStatement	size_t n = end - ptr ;	1001:4:26258:26278	3158199	0	True				
ANR	3158225	IdentifierDecl	n = end - ptr		3158199	0					
ANR	3158226	IdentifierDeclType	size_t		3158199	0					
ANR	3158227	Identifier	n		3158199	1					
ANR	3158228	AssignmentExpression	n = end - ptr		3158199	2		=			
ANR	3158229	Identifier	n		3158199	0					
ANR	3158230	AdditiveExpression	end - ptr		3158199	1		-			
ANR	3158231	Identifier	end		3158199	0					
ANR	3158232	Identifier	ptr		3158199	1					
ANR	3158233	IfStatement	if ( n & ( MINBPC ( enc ) - 1 ) )		3158199	1					
ANR	3158234	Condition	n & ( MINBPC ( enc ) - 1 )	1002:8:26288:26308	3158199	0	True				
ANR	3158235	BitAndExpression	n & ( MINBPC ( enc ) - 1 )		3158199	0		&			
ANR	3158236	Identifier	n		3158199	0					
ANR	3158237	AdditiveExpression	MINBPC ( enc ) - 1		3158199	1		-			
ANR	3158238	CallExpression	MINBPC ( enc )		3158199	0					
ANR	3158239	Callee	MINBPC		3158199	0					
ANR	3158240	Identifier	MINBPC		3158199	0					
ANR	3158241	ArgumentList	enc		3158199	1					
ANR	3158242	Argument	enc		3158199	0					
ANR	3158243	Identifier	enc		3158199	0					
ANR	3158244	PrimaryExpression	1		3158199	1					
ANR	3158245	CompoundStatement		7:31:137:137	3158199	1					
ANR	3158246	ExpressionStatement	n &= ~ ( MINBPC ( enc ) - 1 )	1003:6:26319:26342	3158199	0	True				
ANR	3158247	AssignmentExpression	n &= ~ ( MINBPC ( enc ) - 1 )		3158199	0		&=			
ANR	3158248	Identifier	n		3158199	0					
ANR	3158249	UnaryOperationExpression	~ ( MINBPC ( enc ) - 1 )		3158199	1					
ANR	3158250	UnaryOperator	~		3158199	0					
ANR	3158251	AdditiveExpression	MINBPC ( enc ) - 1		3158199	1		-			
ANR	3158252	CallExpression	MINBPC ( enc )		3158199	0					
ANR	3158253	Callee	MINBPC		3158199	0					
ANR	3158254	Identifier	MINBPC		3158199	0					
ANR	3158255	ArgumentList	enc		3158199	1					
ANR	3158256	Argument	enc		3158199	0					
ANR	3158257	Identifier	enc		3158199	0					
ANR	3158258	PrimaryExpression	1		3158199	1					
ANR	3158259	IfStatement	if ( n == 0 )		3158199	1					
ANR	3158260	Condition	n == 0	1004:10:26354:26359	3158199	0	True				
ANR	3158261	EqualityExpression	n == 0		3158199	0		==			
ANR	3158262	Identifier	n		3158199	0					
ANR	3158263	PrimaryExpression	0		3158199	1					
ANR	3158264	ReturnStatement	return XML_TOK_PARTIAL ;	1005:8:26370:26392	3158199	1	True				
ANR	3158265	Identifier	XML_TOK_PARTIAL		3158199	0					
ANR	3158266	ExpressionStatement	end = ptr + n	1006:6:26400:26413	3158199	2	True				
ANR	3158267	AssignmentExpression	end = ptr + n		3158199	0		=			
ANR	3158268	Identifier	end		3158199	0					
ANR	3158269	AdditiveExpression	ptr + n		3158199	1		+			
ANR	3158270	Identifier	ptr		3158199	0					
ANR	3158271	Identifier	n		3158199	1					
ANR	3158272	SwitchStatement	"switch ( BYTE_TYPE ( enc , ptr ) )"		3158199	3					
ANR	3158273	Condition	"BYTE_TYPE ( enc , ptr )"	1009:10:26435:26453	3158199	0	True				
ANR	3158274	CallExpression	"BYTE_TYPE ( enc , ptr )"		3158199	0					
ANR	3158275	Callee	BYTE_TYPE		3158199	0					
ANR	3158276	Identifier	BYTE_TYPE		3158199	0					
ANR	3158277	ArgumentList	enc		3158199	1					
ANR	3158278	Argument	enc		3158199	0					
ANR	3158279	Identifier	enc		3158199	0					
ANR	3158280	Argument	ptr		3158199	1					
ANR	3158281	Identifier	ptr		3158199	0					
ANR	3158282	CompoundStatement		14:31:282:282	3158199	1					
ANR	3158283	Label	case BT_QUOT :	1010:2:26460:26472	3158199	0	True				
ANR	3158284	Identifier	BT_QUOT		3158199	0					
ANR	3158285	ReturnStatement	"return PREFIX ( scanLit ) ( BT_QUOT , enc , ptr + MINBPC ( enc ) , end , nextTokPtr ) ;"	1011:4:26478:26550	3158199	1	True				
ANR	3158286	CallExpression	"PREFIX ( scanLit ) ( BT_QUOT , enc , ptr + MINBPC ( enc ) , end , nextTokPtr )"		3158199	0					
ANR	3158287	Callee	PREFIX ( scanLit )		3158199	0					
ANR	3158288	CallExpression	PREFIX ( scanLit )		3158199	0					
ANR	3158289	Callee	PREFIX		3158199	0					
ANR	3158290	Identifier	PREFIX		3158199	0					
ANR	3158291	ArgumentList	scanLit		3158199	1					
ANR	3158292	Argument	scanLit		3158199	0					
ANR	3158293	Identifier	scanLit		3158199	0					
ANR	3158294	ArgumentList	BT_QUOT		3158199	1					
ANR	3158295	Argument	BT_QUOT		3158199	0					
ANR	3158296	Identifier	BT_QUOT		3158199	0					
ANR	3158297	Argument	enc		3158199	1					
ANR	3158298	Identifier	enc		3158199	0					
ANR	3158299	Argument	ptr + MINBPC ( enc )		3158199	2					
ANR	3158300	AdditiveExpression	ptr + MINBPC ( enc )		3158199	0		+			
ANR	3158301	Identifier	ptr		3158199	0					
ANR	3158302	CallExpression	MINBPC ( enc )		3158199	1					
ANR	3158303	Callee	MINBPC		3158199	0					
ANR	3158304	Identifier	MINBPC		3158199	0					
ANR	3158305	ArgumentList	enc		3158199	1					
ANR	3158306	Argument	enc		3158199	0					
ANR	3158307	Identifier	enc		3158199	0					
ANR	3158308	Argument	end		3158199	3					
ANR	3158309	Identifier	end		3158199	0					
ANR	3158310	Argument	nextTokPtr		3158199	4					
ANR	3158311	Identifier	nextTokPtr		3158199	0					
ANR	3158312	Label	case BT_APOS :	1012:2:26554:26566	3158199	2	True				
ANR	3158313	Identifier	BT_APOS		3158199	0					
ANR	3158314	ReturnStatement	"return PREFIX ( scanLit ) ( BT_APOS , enc , ptr + MINBPC ( enc ) , end , nextTokPtr ) ;"	1013:4:26572:26644	3158199	3	True				
ANR	3158315	CallExpression	"PREFIX ( scanLit ) ( BT_APOS , enc , ptr + MINBPC ( enc ) , end , nextTokPtr )"		3158199	0					
ANR	3158316	Callee	PREFIX ( scanLit )		3158199	0					
ANR	3158317	CallExpression	PREFIX ( scanLit )		3158199	0					
ANR	3158318	Callee	PREFIX		3158199	0					
ANR	3158319	Identifier	PREFIX		3158199	0					
ANR	3158320	ArgumentList	scanLit		3158199	1					
ANR	3158321	Argument	scanLit		3158199	0					
ANR	3158322	Identifier	scanLit		3158199	0					
ANR	3158323	ArgumentList	BT_APOS		3158199	1					
ANR	3158324	Argument	BT_APOS		3158199	0					
ANR	3158325	Identifier	BT_APOS		3158199	0					
ANR	3158326	Argument	enc		3158199	1					
ANR	3158327	Identifier	enc		3158199	0					
ANR	3158328	Argument	ptr + MINBPC ( enc )		3158199	2					
ANR	3158329	AdditiveExpression	ptr + MINBPC ( enc )		3158199	0		+			
ANR	3158330	Identifier	ptr		3158199	0					
ANR	3158331	CallExpression	MINBPC ( enc )		3158199	1					
ANR	3158332	Callee	MINBPC		3158199	0					
ANR	3158333	Identifier	MINBPC		3158199	0					
ANR	3158334	ArgumentList	enc		3158199	1					
ANR	3158335	Argument	enc		3158199	0					
ANR	3158336	Identifier	enc		3158199	0					
ANR	3158337	Argument	end		3158199	3					
ANR	3158338	Identifier	end		3158199	0					
ANR	3158339	Argument	nextTokPtr		3158199	4					
ANR	3158340	Identifier	nextTokPtr		3158199	0					
ANR	3158341	Label	case BT_LT :	1014:2:26648:26658	3158199	4	True				
ANR	3158342	Identifier	BT_LT		3158199	0					
ANR	3158343	CompoundStatement		20:4:490:490	3158199	5					
ANR	3158344	ExpressionStatement	ptr += MINBPC ( enc )	1016:6:26672:26690	3158199	0	True				
ANR	3158345	AssignmentExpression	ptr += MINBPC ( enc )		3158199	0		+=			
ANR	3158346	Identifier	ptr		3158199	0					
ANR	3158347	CallExpression	MINBPC ( enc )		3158199	1					
ANR	3158348	Callee	MINBPC		3158199	0					
ANR	3158349	Identifier	MINBPC		3158199	0					
ANR	3158350	ArgumentList	enc		3158199	1					
ANR	3158351	Argument	enc		3158199	0					
ANR	3158352	Identifier	enc		3158199	0					
ANR	3158353	ExpressionStatement	"REQUIRE_CHAR ( enc , ptr , end )"	1017:6:26698:26725	3158199	1	True				
ANR	3158354	CallExpression	"REQUIRE_CHAR ( enc , ptr , end )"		3158199	0					
ANR	3158355	Callee	REQUIRE_CHAR		3158199	0					
ANR	3158356	Identifier	REQUIRE_CHAR		3158199	0					
ANR	3158357	ArgumentList	enc		3158199	1					
ANR	3158358	Argument	enc		3158199	0					
ANR	3158359	Identifier	enc		3158199	0					
ANR	3158360	Argument	ptr		3158199	1					
ANR	3158361	Identifier	ptr		3158199	0					
ANR	3158362	Argument	end		3158199	2					
ANR	3158363	Identifier	end		3158199	0					
ANR	3158364	SwitchStatement	"switch ( BYTE_TYPE ( enc , ptr ) )"		3158199	2					
ANR	3158365	Condition	"BYTE_TYPE ( enc , ptr )"	1018:14:26741:26759	3158199	0	True				
ANR	3158366	CallExpression	"BYTE_TYPE ( enc , ptr )"		3158199	0					
ANR	3158367	Callee	BYTE_TYPE		3158199	0					
ANR	3158368	Identifier	BYTE_TYPE		3158199	0					
ANR	3158369	ArgumentList	enc		3158199	1					
ANR	3158370	Argument	enc		3158199	0					
ANR	3158371	Identifier	enc		3158199	0					
ANR	3158372	Argument	ptr		3158199	1					
ANR	3158373	Identifier	ptr		3158199	0					
ANR	3158374	CompoundStatement		23:35:588:588	3158199	1					
ANR	3158375	Label	case BT_EXCL :	1019:6:26770:26782	3158199	0	True				
ANR	3158376	Identifier	BT_EXCL		3158199	0					
ANR	3158377	ReturnStatement	"return PREFIX ( scanDecl ) ( enc , ptr + MINBPC ( enc ) , end , nextTokPtr ) ;"	1020:8:26792:26856	3158199	1	True				
ANR	3158378	CallExpression	"PREFIX ( scanDecl ) ( enc , ptr + MINBPC ( enc ) , end , nextTokPtr )"		3158199	0					
ANR	3158379	Callee	PREFIX ( scanDecl )		3158199	0					
ANR	3158380	CallExpression	PREFIX ( scanDecl )		3158199	0					
ANR	3158381	Callee	PREFIX		3158199	0					
ANR	3158382	Identifier	PREFIX		3158199	0					
ANR	3158383	ArgumentList	scanDecl		3158199	1					
ANR	3158384	Argument	scanDecl		3158199	0					
ANR	3158385	Identifier	scanDecl		3158199	0					
ANR	3158386	ArgumentList	enc		3158199	1					
ANR	3158387	Argument	enc		3158199	0					
ANR	3158388	Identifier	enc		3158199	0					
ANR	3158389	Argument	ptr + MINBPC ( enc )		3158199	1					
ANR	3158390	AdditiveExpression	ptr + MINBPC ( enc )		3158199	0		+			
ANR	3158391	Identifier	ptr		3158199	0					
ANR	3158392	CallExpression	MINBPC ( enc )		3158199	1					
ANR	3158393	Callee	MINBPC		3158199	0					
ANR	3158394	Identifier	MINBPC		3158199	0					
ANR	3158395	ArgumentList	enc		3158199	1					
ANR	3158396	Argument	enc		3158199	0					
ANR	3158397	Identifier	enc		3158199	0					
ANR	3158398	Argument	end		3158199	2					
ANR	3158399	Identifier	end		3158199	0					
ANR	3158400	Argument	nextTokPtr		3158199	3					
ANR	3158401	Identifier	nextTokPtr		3158199	0					
ANR	3158402	Label	case BT_QUEST :	1021:6:26864:26877	3158199	2	True				
ANR	3158403	Identifier	BT_QUEST		3158199	0					
ANR	3158404	ReturnStatement	"return PREFIX ( scanPi ) ( enc , ptr + MINBPC ( enc ) , end , nextTokPtr ) ;"	1022:8:26887:26949	3158199	3	True				
ANR	3158405	CallExpression	"PREFIX ( scanPi ) ( enc , ptr + MINBPC ( enc ) , end , nextTokPtr )"		3158199	0					
ANR	3158406	Callee	PREFIX ( scanPi )		3158199	0					
ANR	3158407	CallExpression	PREFIX ( scanPi )		3158199	0					
ANR	3158408	Callee	PREFIX		3158199	0					
ANR	3158409	Identifier	PREFIX		3158199	0					
ANR	3158410	ArgumentList	scanPi		3158199	1					
ANR	3158411	Argument	scanPi		3158199	0					
ANR	3158412	Identifier	scanPi		3158199	0					
ANR	3158413	ArgumentList	enc		3158199	1					
ANR	3158414	Argument	enc		3158199	0					
ANR	3158415	Identifier	enc		3158199	0					
ANR	3158416	Argument	ptr + MINBPC ( enc )		3158199	1					
ANR	3158417	AdditiveExpression	ptr + MINBPC ( enc )		3158199	0		+			
ANR	3158418	Identifier	ptr		3158199	0					
ANR	3158419	CallExpression	MINBPC ( enc )		3158199	1					
ANR	3158420	Callee	MINBPC		3158199	0					
ANR	3158421	Identifier	MINBPC		3158199	0					
ANR	3158422	ArgumentList	enc		3158199	1					
ANR	3158423	Argument	enc		3158199	0					
ANR	3158424	Identifier	enc		3158199	0					
ANR	3158425	Argument	end		3158199	2					
ANR	3158426	Identifier	end		3158199	0					
ANR	3158427	Argument	nextTokPtr		3158199	3					
ANR	3158428	Identifier	nextTokPtr		3158199	0					
ANR	3158429	Label	case BT_NMSTRT :	1023:6:26957:26971	3158199	4	True				
ANR	3158430	Identifier	BT_NMSTRT		3158199	0					
ANR	3158431	Label	case BT_HEX :	1024:6:26979:26990	3158199	5	True				
ANR	3158432	Identifier	BT_HEX		3158199	0					
ANR	3158433	Label	case BT_NONASCII :	1025:6:26998:27014	3158199	6	True				
ANR	3158434	Identifier	BT_NONASCII		3158199	0					
ANR	3158435	Label	case BT_LEAD2 :	1026:6:27022:27035	3158199	7	True				
ANR	3158436	Identifier	BT_LEAD2		3158199	0					
ANR	3158437	Label	case BT_LEAD3 :	1027:6:27043:27056	3158199	8	True				
ANR	3158438	Identifier	BT_LEAD3		3158199	0					
ANR	3158439	Label	case BT_LEAD4 :	1028:6:27064:27077	3158199	9	True				
ANR	3158440	Identifier	BT_LEAD4		3158199	0					
ANR	3158441	ExpressionStatement	* nextTokPtr = ptr - MINBPC ( enc )	1029:8:27087:27118	3158199	10	True				
ANR	3158442	AssignmentExpression	* nextTokPtr = ptr - MINBPC ( enc )		3158199	0		=			
ANR	3158443	UnaryOperationExpression	* nextTokPtr		3158199	0					
ANR	3158444	UnaryOperator	*		3158199	0					
ANR	3158445	Identifier	nextTokPtr		3158199	1					
ANR	3158446	AdditiveExpression	ptr - MINBPC ( enc )		3158199	1		-			
ANR	3158447	Identifier	ptr		3158199	0					
ANR	3158448	CallExpression	MINBPC ( enc )		3158199	1					
ANR	3158449	Callee	MINBPC		3158199	0					
ANR	3158450	Identifier	MINBPC		3158199	0					
ANR	3158451	ArgumentList	enc		3158199	1					
ANR	3158452	Argument	enc		3158199	0					
ANR	3158453	Identifier	enc		3158199	0					
ANR	3158454	ReturnStatement	return XML_TOK_INSTANCE_START ;	1030:8:27128:27157	3158199	11	True				
ANR	3158455	Identifier	XML_TOK_INSTANCE_START		3158199	0					
ANR	3158456	ExpressionStatement	* nextTokPtr = ptr	1032:6:27173:27190	3158199	3	True				
ANR	3158457	AssignmentExpression	* nextTokPtr = ptr		3158199	0		=			
ANR	3158458	UnaryOperationExpression	* nextTokPtr		3158199	0					
ANR	3158459	UnaryOperator	*		3158199	0					
ANR	3158460	Identifier	nextTokPtr		3158199	1					
ANR	3158461	Identifier	ptr		3158199	1					
ANR	3158462	ReturnStatement	return XML_TOK_INVALID ;	1033:6:27198:27220	3158199	4	True				
ANR	3158463	Identifier	XML_TOK_INVALID		3158199	0					
ANR	3158464	Label	case BT_CR :	1035:2:27230:27240	3158199	6	True				
ANR	3158465	Identifier	BT_CR		3158199	0					
ANR	3158466	IfStatement	if ( ptr + MINBPC ( enc ) == end )		3158199	7					
ANR	3158467	Condition	ptr + MINBPC ( enc ) == end	1036:8:27250:27273	3158199	0	True				
ANR	3158468	EqualityExpression	ptr + MINBPC ( enc ) == end		3158199	0		==			
ANR	3158469	AdditiveExpression	ptr + MINBPC ( enc )		3158199	0		+			
ANR	3158470	Identifier	ptr		3158199	0					
ANR	3158471	CallExpression	MINBPC ( enc )		3158199	1					
ANR	3158472	Callee	MINBPC		3158199	0					
ANR	3158473	Identifier	MINBPC		3158199	0					
ANR	3158474	ArgumentList	enc		3158199	1					
ANR	3158475	Argument	enc		3158199	0					
ANR	3158476	Identifier	enc		3158199	0					
ANR	3158477	Identifier	end		3158199	1					
ANR	3158478	CompoundStatement		41:34:1102:1102	3158199	1					
ANR	3158479	ExpressionStatement	* nextTokPtr = end	1037:6:27284:27301	3158199	0	True				
ANR	3158480	AssignmentExpression	* nextTokPtr = end		3158199	0		=			
ANR	3158481	UnaryOperationExpression	* nextTokPtr		3158199	0					
ANR	3158482	UnaryOperator	*		3158199	0					
ANR	3158483	Identifier	nextTokPtr		3158199	1					
ANR	3158484	Identifier	end		3158199	1					
ANR	3158485	ReturnStatement	return - XML_TOK_PROLOG_S ;	1039:6:27370:27394	3158199	1	True				
ANR	3158486	UnaryOperationExpression	- XML_TOK_PROLOG_S		3158199	0					
ANR	3158487	UnaryOperator	-		3158199	0					
ANR	3158488	Identifier	XML_TOK_PROLOG_S		3158199	1					
ANR	3158489	Label	case BT_S :	1042:2:27427:27436	3158199	8	True				
ANR	3158490	Identifier	BT_S		3158199	0					
ANR	3158491	Label	case BT_LF :	1042:13:27438:27448	3158199	9	True				
ANR	3158492	Identifier	BT_LF		3158199	0					
ANR	3158493	ForStatement	for ( ; ; )		3158199	10					
ANR	3158494	CompoundStatement		48:13:1289:1289	3158199	0					
ANR	3158495	ExpressionStatement	ptr += MINBPC ( enc )	1044:6:27471:27489	3158199	0	True				
ANR	3158496	AssignmentExpression	ptr += MINBPC ( enc )		3158199	0		+=			
ANR	3158497	Identifier	ptr		3158199	0					
ANR	3158498	CallExpression	MINBPC ( enc )		3158199	1					
ANR	3158499	Callee	MINBPC		3158199	0					
ANR	3158500	Identifier	MINBPC		3158199	0					
ANR	3158501	ArgumentList	enc		3158199	1					
ANR	3158502	Argument	enc		3158199	0					
ANR	3158503	Identifier	enc		3158199	0					
ANR	3158504	IfStatement	"if ( ! HAS_CHAR ( enc , ptr , end ) )"		3158199	1					
ANR	3158505	Condition	"! HAS_CHAR ( enc , ptr , end )"	1045:10:27501:27525	3158199	0	True				
ANR	3158506	UnaryOperationExpression	"! HAS_CHAR ( enc , ptr , end )"		3158199	0					
ANR	3158507	UnaryOperator	!		3158199	0					
ANR	3158508	CallExpression	"HAS_CHAR ( enc , ptr , end )"		3158199	1					
ANR	3158509	Callee	HAS_CHAR		3158199	0					
ANR	3158510	Identifier	HAS_CHAR		3158199	0					
ANR	3158511	ArgumentList	enc		3158199	1					
ANR	3158512	Argument	enc		3158199	0					
ANR	3158513	Identifier	enc		3158199	0					
ANR	3158514	Argument	ptr		3158199	1					
ANR	3158515	Identifier	ptr		3158199	0					
ANR	3158516	Argument	end		3158199	2					
ANR	3158517	Identifier	end		3158199	0					
ANR	3158518	BreakStatement	break ;	1046:8:27536:27541	3158199	1	True				
ANR	3158519	SwitchStatement	"switch ( BYTE_TYPE ( enc , ptr ) )"		3158199	2					
ANR	3158520	Condition	"BYTE_TYPE ( enc , ptr )"	1047:14:27557:27575	3158199	0	True				
ANR	3158521	CallExpression	"BYTE_TYPE ( enc , ptr )"		3158199	0					
ANR	3158522	Callee	BYTE_TYPE		3158199	0					
ANR	3158523	Identifier	BYTE_TYPE		3158199	0					
ANR	3158524	ArgumentList	enc		3158199	1					
ANR	3158525	Argument	enc		3158199	0					
ANR	3158526	Identifier	enc		3158199	0					
ANR	3158527	Argument	ptr		3158199	1					
ANR	3158528	Identifier	ptr		3158199	0					
ANR	3158529	CompoundStatement		52:35:1404:1404	3158199	1					
ANR	3158530	Label	case BT_S :	1048:6:27586:27595	3158199	0	True				
ANR	3158531	Identifier	BT_S		3158199	0					
ANR	3158532	Label	case BT_LF :	1048:17:27597:27607	3158199	1	True				
ANR	3158533	Identifier	BT_LF		3158199	0					
ANR	3158534	BreakStatement	break ;	1049:8:27617:27622	3158199	2	True				
ANR	3158535	Label	case BT_CR :	1050:6:27630:27640	3158199	3	True				
ANR	3158536	Identifier	BT_CR		3158199	0					
ANR	3158537	IfStatement	if ( ptr + MINBPC ( enc ) != end )		3158199	4					
ANR	3158538	Condition	ptr + MINBPC ( enc ) != end	1052:12:27691:27714	3158199	0	True				
ANR	3158539	EqualityExpression	ptr + MINBPC ( enc ) != end		3158199	0		!=			
ANR	3158540	AdditiveExpression	ptr + MINBPC ( enc )		3158199	0		+			
ANR	3158541	Identifier	ptr		3158199	0					
ANR	3158542	CallExpression	MINBPC ( enc )		3158199	1					
ANR	3158543	Callee	MINBPC		3158199	0					
ANR	3158544	Identifier	MINBPC		3158199	0					
ANR	3158545	ArgumentList	enc		3158199	1					
ANR	3158546	Argument	enc		3158199	0					
ANR	3158547	Identifier	enc		3158199	0					
ANR	3158548	Identifier	end		3158199	1					
ANR	3158549	BreakStatement	break ;	1053:10:27727:27732	3158199	1	True				
ANR	3158550	Label	default :	1055:6:27767:27774	3158199	5	True				
ANR	3158551	Identifier	default		3158199	0					
ANR	3158552	ExpressionStatement	* nextTokPtr = ptr	1056:8:27784:27801	3158199	6	True				
ANR	3158553	AssignmentExpression	* nextTokPtr = ptr		3158199	0		=			
ANR	3158554	UnaryOperationExpression	* nextTokPtr		3158199	0					
ANR	3158555	UnaryOperator	*		3158199	0					
ANR	3158556	Identifier	nextTokPtr		3158199	1					
ANR	3158557	Identifier	ptr		3158199	1					
ANR	3158558	ReturnStatement	return XML_TOK_PROLOG_S ;	1057:8:27811:27834	3158199	7	True				
ANR	3158559	Identifier	XML_TOK_PROLOG_S		3158199	0					
ANR	3158560	ExpressionStatement	* nextTokPtr = ptr	1060:4:27854:27871	3158199	11	True				
ANR	3158561	AssignmentExpression	* nextTokPtr = ptr		3158199	0		=			
ANR	3158562	UnaryOperationExpression	* nextTokPtr		3158199	0					
ANR	3158563	UnaryOperator	*		3158199	0					
ANR	3158564	Identifier	nextTokPtr		3158199	1					
ANR	3158565	Identifier	ptr		3158199	1					
ANR	3158566	ReturnStatement	return XML_TOK_PROLOG_S ;	1061:4:27877:27900	3158199	12	True				
ANR	3158567	Identifier	XML_TOK_PROLOG_S		3158199	0					
ANR	3158568	Label	case BT_PERCNT :	1062:2:27904:27918	3158199	13	True				
ANR	3158569	Identifier	BT_PERCNT		3158199	0					
ANR	3158570	ReturnStatement	"return PREFIX ( scanPercent ) ( enc , ptr + MINBPC ( enc ) , end , nextTokPtr ) ;"	1063:4:27924:27991	3158199	14	True				
ANR	3158571	CallExpression	"PREFIX ( scanPercent ) ( enc , ptr + MINBPC ( enc ) , end , nextTokPtr )"		3158199	0					
ANR	3158572	Callee	PREFIX ( scanPercent )		3158199	0					
ANR	3158573	CallExpression	PREFIX ( scanPercent )		3158199	0					
ANR	3158574	Callee	PREFIX		3158199	0					
ANR	3158575	Identifier	PREFIX		3158199	0					
ANR	3158576	ArgumentList	scanPercent		3158199	1					
ANR	3158577	Argument	scanPercent		3158199	0					
ANR	3158578	Identifier	scanPercent		3158199	0					
ANR	3158579	ArgumentList	enc		3158199	1					
ANR	3158580	Argument	enc		3158199	0					
ANR	3158581	Identifier	enc		3158199	0					
ANR	3158582	Argument	ptr + MINBPC ( enc )		3158199	1					
ANR	3158583	AdditiveExpression	ptr + MINBPC ( enc )		3158199	0		+			
ANR	3158584	Identifier	ptr		3158199	0					
ANR	3158585	CallExpression	MINBPC ( enc )		3158199	1					
ANR	3158586	Callee	MINBPC		3158199	0					
ANR	3158587	Identifier	MINBPC		3158199	0					
ANR	3158588	ArgumentList	enc		3158199	1					
ANR	3158589	Argument	enc		3158199	0					
ANR	3158590	Identifier	enc		3158199	0					
ANR	3158591	Argument	end		3158199	2					
ANR	3158592	Identifier	end		3158199	0					
ANR	3158593	Argument	nextTokPtr		3158199	3					
ANR	3158594	Identifier	nextTokPtr		3158199	0					
ANR	3158595	Label	case BT_COMMA :	1064:2:27995:28008	3158199	15	True				
ANR	3158596	Identifier	BT_COMMA		3158199	0					
ANR	3158597	ExpressionStatement	* nextTokPtr = ptr + MINBPC ( enc )	1065:4:28014:28045	3158199	16	True				
ANR	3158598	AssignmentExpression	* nextTokPtr = ptr + MINBPC ( enc )		3158199	0		=			
ANR	3158599	UnaryOperationExpression	* nextTokPtr		3158199	0					
ANR	3158600	UnaryOperator	*		3158199	0					
ANR	3158601	Identifier	nextTokPtr		3158199	1					
ANR	3158602	AdditiveExpression	ptr + MINBPC ( enc )		3158199	1		+			
ANR	3158603	Identifier	ptr		3158199	0					
ANR	3158604	CallExpression	MINBPC ( enc )		3158199	1					
ANR	3158605	Callee	MINBPC		3158199	0					
ANR	3158606	Identifier	MINBPC		3158199	0					
ANR	3158607	ArgumentList	enc		3158199	1					
ANR	3158608	Argument	enc		3158199	0					
ANR	3158609	Identifier	enc		3158199	0					
ANR	3158610	ReturnStatement	return XML_TOK_COMMA ;	1066:4:28051:28071	3158199	17	True				
ANR	3158611	Identifier	XML_TOK_COMMA		3158199	0					
ANR	3158612	Label	case BT_LSQB :	1067:2:28075:28087	3158199	18	True				
ANR	3158613	Identifier	BT_LSQB		3158199	0					
ANR	3158614	ExpressionStatement	* nextTokPtr = ptr + MINBPC ( enc )	1068:4:28093:28124	3158199	19	True				
ANR	3158615	AssignmentExpression	* nextTokPtr = ptr + MINBPC ( enc )		3158199	0		=			
ANR	3158616	UnaryOperationExpression	* nextTokPtr		3158199	0					
ANR	3158617	UnaryOperator	*		3158199	0					
ANR	3158618	Identifier	nextTokPtr		3158199	1					
ANR	3158619	AdditiveExpression	ptr + MINBPC ( enc )		3158199	1		+			
ANR	3158620	Identifier	ptr		3158199	0					
ANR	3158621	CallExpression	MINBPC ( enc )		3158199	1					
ANR	3158622	Callee	MINBPC		3158199	0					
ANR	3158623	Identifier	MINBPC		3158199	0					
ANR	3158624	ArgumentList	enc		3158199	1					
ANR	3158625	Argument	enc		3158199	0					
ANR	3158626	Identifier	enc		3158199	0					
ANR	3158627	ReturnStatement	return XML_TOK_OPEN_BRACKET ;	1069:4:28130:28157	3158199	20	True				
ANR	3158628	Identifier	XML_TOK_OPEN_BRACKET		3158199	0					
ANR	3158629	Label	case BT_RSQB :	1070:2:28161:28173	3158199	21	True				
ANR	3158630	Identifier	BT_RSQB		3158199	0					
ANR	3158631	ExpressionStatement	ptr += MINBPC ( enc )	1071:4:28179:28197	3158199	22	True				
ANR	3158632	AssignmentExpression	ptr += MINBPC ( enc )		3158199	0		+=			
ANR	3158633	Identifier	ptr		3158199	0					
ANR	3158634	CallExpression	MINBPC ( enc )		3158199	1					
ANR	3158635	Callee	MINBPC		3158199	0					
ANR	3158636	Identifier	MINBPC		3158199	0					
ANR	3158637	ArgumentList	enc		3158199	1					
ANR	3158638	Argument	enc		3158199	0					
ANR	3158639	Identifier	enc		3158199	0					
ANR	3158640	IfStatement	"if ( ! HAS_CHAR ( enc , ptr , end ) )"		3158199	23					
ANR	3158641	Condition	"! HAS_CHAR ( enc , ptr , end )"	1072:8:28207:28231	3158199	0	True				
ANR	3158642	UnaryOperationExpression	"! HAS_CHAR ( enc , ptr , end )"		3158199	0					
ANR	3158643	UnaryOperator	!		3158199	0					
ANR	3158644	CallExpression	"HAS_CHAR ( enc , ptr , end )"		3158199	1					
ANR	3158645	Callee	HAS_CHAR		3158199	0					
ANR	3158646	Identifier	HAS_CHAR		3158199	0					
ANR	3158647	ArgumentList	enc		3158199	1					
ANR	3158648	Argument	enc		3158199	0					
ANR	3158649	Identifier	enc		3158199	0					
ANR	3158650	Argument	ptr		3158199	1					
ANR	3158651	Identifier	ptr		3158199	0					
ANR	3158652	Argument	end		3158199	2					
ANR	3158653	Identifier	end		3158199	0					
ANR	3158654	ReturnStatement	return - XML_TOK_CLOSE_BRACKET ;	1073:6:28240:28269	3158199	1	True				
ANR	3158655	UnaryOperationExpression	- XML_TOK_CLOSE_BRACKET		3158199	0					
ANR	3158656	UnaryOperator	-		3158199	0					
ANR	3158657	Identifier	XML_TOK_CLOSE_BRACKET		3158199	1					
ANR	3158658	IfStatement	"if ( CHAR_MATCHES ( enc , ptr , ASCII_RSQB ) )"		3158199	24					
ANR	3158659	Condition	"CHAR_MATCHES ( enc , ptr , ASCII_RSQB )"	1074:8:28279:28312	3158199	0	True				
ANR	3158660	CallExpression	"CHAR_MATCHES ( enc , ptr , ASCII_RSQB )"		3158199	0					
ANR	3158661	Callee	CHAR_MATCHES		3158199	0					
ANR	3158662	Identifier	CHAR_MATCHES		3158199	0					
ANR	3158663	ArgumentList	enc		3158199	1					
ANR	3158664	Argument	enc		3158199	0					
ANR	3158665	Identifier	enc		3158199	0					
ANR	3158666	Argument	ptr		3158199	1					
ANR	3158667	Identifier	ptr		3158199	0					
ANR	3158668	Argument	ASCII_RSQB		3158199	2					
ANR	3158669	Identifier	ASCII_RSQB		3158199	0					
ANR	3158670	CompoundStatement		79:44:2141:2141	3158199	1					
ANR	3158671	ExpressionStatement	"REQUIRE_CHARS ( enc , ptr , end , 2 )"	1075:6:28323:28354	3158199	0	True				
ANR	3158672	CallExpression	"REQUIRE_CHARS ( enc , ptr , end , 2 )"		3158199	0					
ANR	3158673	Callee	REQUIRE_CHARS		3158199	0					
ANR	3158674	Identifier	REQUIRE_CHARS		3158199	0					
ANR	3158675	ArgumentList	enc		3158199	1					
ANR	3158676	Argument	enc		3158199	0					
ANR	3158677	Identifier	enc		3158199	0					
ANR	3158678	Argument	ptr		3158199	1					
ANR	3158679	Identifier	ptr		3158199	0					
ANR	3158680	Argument	end		3158199	2					
ANR	3158681	Identifier	end		3158199	0					
ANR	3158682	Argument	2		3158199	3					
ANR	3158683	PrimaryExpression	2		3158199	0					
ANR	3158684	IfStatement	"if ( CHAR_MATCHES ( enc , ptr + MINBPC ( enc ) , ASCII_GT ) )"		3158199	1					
ANR	3158685	Condition	"CHAR_MATCHES ( enc , ptr + MINBPC ( enc ) , ASCII_GT )"	1076:10:28366:28411	3158199	0	True				
ANR	3158686	CallExpression	"CHAR_MATCHES ( enc , ptr + MINBPC ( enc ) , ASCII_GT )"		3158199	0					
ANR	3158687	Callee	CHAR_MATCHES		3158199	0					
ANR	3158688	Identifier	CHAR_MATCHES		3158199	0					
ANR	3158689	ArgumentList	enc		3158199	1					
ANR	3158690	Argument	enc		3158199	0					
ANR	3158691	Identifier	enc		3158199	0					
ANR	3158692	Argument	ptr + MINBPC ( enc )		3158199	1					
ANR	3158693	AdditiveExpression	ptr + MINBPC ( enc )		3158199	0		+			
ANR	3158694	Identifier	ptr		3158199	0					
ANR	3158695	CallExpression	MINBPC ( enc )		3158199	1					
ANR	3158696	Callee	MINBPC		3158199	0					
ANR	3158697	Identifier	MINBPC		3158199	0					
ANR	3158698	ArgumentList	enc		3158199	1					
ANR	3158699	Argument	enc		3158199	0					
ANR	3158700	Identifier	enc		3158199	0					
ANR	3158701	Argument	ASCII_GT		3158199	2					
ANR	3158702	Identifier	ASCII_GT		3158199	0					
ANR	3158703	CompoundStatement		81:58:2240:2240	3158199	1					
ANR	3158704	ExpressionStatement	* nextTokPtr = ptr + 2 * MINBPC ( enc )	1077:8:28424:28457	3158199	0	True				
ANR	3158705	AssignmentExpression	* nextTokPtr = ptr + 2 * MINBPC ( enc )		3158199	0		=			
ANR	3158706	UnaryOperationExpression	* nextTokPtr		3158199	0					
ANR	3158707	UnaryOperator	*		3158199	0					
ANR	3158708	Identifier	nextTokPtr		3158199	1					
ANR	3158709	AdditiveExpression	ptr + 2 * MINBPC ( enc )		3158199	1		+			
ANR	3158710	Identifier	ptr		3158199	0					
ANR	3158711	MultiplicativeExpression	2 * MINBPC ( enc )		3158199	1		*			
ANR	3158712	PrimaryExpression	2		3158199	0					
ANR	3158713	CallExpression	MINBPC ( enc )		3158199	1					
ANR	3158714	Callee	MINBPC		3158199	0					
ANR	3158715	Identifier	MINBPC		3158199	0					
ANR	3158716	ArgumentList	enc		3158199	1					
ANR	3158717	Argument	enc		3158199	0					
ANR	3158718	Identifier	enc		3158199	0					
ANR	3158719	ReturnStatement	return XML_TOK_COND_SECT_CLOSE ;	1078:8:28467:28497	3158199	1	True				
ANR	3158720	Identifier	XML_TOK_COND_SECT_CLOSE		3158199	0					
ANR	3158721	ExpressionStatement	* nextTokPtr = ptr	1081:4:28517:28534	3158199	25	True				
ANR	3158722	AssignmentExpression	* nextTokPtr = ptr		3158199	0		=			
ANR	3158723	UnaryOperationExpression	* nextTokPtr		3158199	0					
ANR	3158724	UnaryOperator	*		3158199	0					
ANR	3158725	Identifier	nextTokPtr		3158199	1					
ANR	3158726	Identifier	ptr		3158199	1					
ANR	3158727	ReturnStatement	return XML_TOK_CLOSE_BRACKET ;	1082:4:28540:28568	3158199	26	True				
ANR	3158728	Identifier	XML_TOK_CLOSE_BRACKET		3158199	0					
ANR	3158729	Label	case BT_LPAR :	1083:2:28572:28584	3158199	27	True				
ANR	3158730	Identifier	BT_LPAR		3158199	0					
ANR	3158731	ExpressionStatement	* nextTokPtr = ptr + MINBPC ( enc )	1084:4:28590:28621	3158199	28	True				
ANR	3158732	AssignmentExpression	* nextTokPtr = ptr + MINBPC ( enc )		3158199	0		=			
ANR	3158733	UnaryOperationExpression	* nextTokPtr		3158199	0					
ANR	3158734	UnaryOperator	*		3158199	0					
ANR	3158735	Identifier	nextTokPtr		3158199	1					
ANR	3158736	AdditiveExpression	ptr + MINBPC ( enc )		3158199	1		+			
ANR	3158737	Identifier	ptr		3158199	0					
ANR	3158738	CallExpression	MINBPC ( enc )		3158199	1					
ANR	3158739	Callee	MINBPC		3158199	0					
ANR	3158740	Identifier	MINBPC		3158199	0					
ANR	3158741	ArgumentList	enc		3158199	1					
ANR	3158742	Argument	enc		3158199	0					
ANR	3158743	Identifier	enc		3158199	0					
ANR	3158744	ReturnStatement	return XML_TOK_OPEN_PAREN ;	1085:4:28627:28652	3158199	29	True				
ANR	3158745	Identifier	XML_TOK_OPEN_PAREN		3158199	0					
ANR	3158746	Label	case BT_RPAR :	1086:2:28656:28668	3158199	30	True				
ANR	3158747	Identifier	BT_RPAR		3158199	0					
ANR	3158748	ExpressionStatement	ptr += MINBPC ( enc )	1087:4:28674:28692	3158199	31	True				
ANR	3158749	AssignmentExpression	ptr += MINBPC ( enc )		3158199	0		+=			
ANR	3158750	Identifier	ptr		3158199	0					
ANR	3158751	CallExpression	MINBPC ( enc )		3158199	1					
ANR	3158752	Callee	MINBPC		3158199	0					
ANR	3158753	Identifier	MINBPC		3158199	0					
ANR	3158754	ArgumentList	enc		3158199	1					
ANR	3158755	Argument	enc		3158199	0					
ANR	3158756	Identifier	enc		3158199	0					
ANR	3158757	IfStatement	"if ( ! HAS_CHAR ( enc , ptr , end ) )"		3158199	32					
ANR	3158758	Condition	"! HAS_CHAR ( enc , ptr , end )"	1088:8:28702:28726	3158199	0	True				
ANR	3158759	UnaryOperationExpression	"! HAS_CHAR ( enc , ptr , end )"		3158199	0					
ANR	3158760	UnaryOperator	!		3158199	0					
ANR	3158761	CallExpression	"HAS_CHAR ( enc , ptr , end )"		3158199	1					
ANR	3158762	Callee	HAS_CHAR		3158199	0					
ANR	3158763	Identifier	HAS_CHAR		3158199	0					
ANR	3158764	ArgumentList	enc		3158199	1					
ANR	3158765	Argument	enc		3158199	0					
ANR	3158766	Identifier	enc		3158199	0					
ANR	3158767	Argument	ptr		3158199	1					
ANR	3158768	Identifier	ptr		3158199	0					
ANR	3158769	Argument	end		3158199	2					
ANR	3158770	Identifier	end		3158199	0					
ANR	3158771	ReturnStatement	return - XML_TOK_CLOSE_PAREN ;	1089:6:28735:28762	3158199	1	True				
ANR	3158772	UnaryOperationExpression	- XML_TOK_CLOSE_PAREN		3158199	0					
ANR	3158773	UnaryOperator	-		3158199	0					
ANR	3158774	Identifier	XML_TOK_CLOSE_PAREN		3158199	1					
ANR	3158775	SwitchStatement	"switch ( BYTE_TYPE ( enc , ptr ) )"		3158199	33					
ANR	3158776	Condition	"BYTE_TYPE ( enc , ptr )"	1090:12:28776:28794	3158199	0	True				
ANR	3158777	CallExpression	"BYTE_TYPE ( enc , ptr )"		3158199	0					
ANR	3158778	Callee	BYTE_TYPE		3158199	0					
ANR	3158779	Identifier	BYTE_TYPE		3158199	0					
ANR	3158780	ArgumentList	enc		3158199	1					
ANR	3158781	Argument	enc		3158199	0					
ANR	3158782	Identifier	enc		3158199	0					
ANR	3158783	Argument	ptr		3158199	1					
ANR	3158784	Identifier	ptr		3158199	0					
ANR	3158785	CompoundStatement		95:33:2623:2623	3158199	1					
ANR	3158786	Label	case BT_AST :	1091:4:28803:28814	3158199	0	True				
ANR	3158787	Identifier	BT_AST		3158199	0					
ANR	3158788	ExpressionStatement	* nextTokPtr = ptr + MINBPC ( enc )	1092:6:28822:28853	3158199	1	True				
ANR	3158789	AssignmentExpression	* nextTokPtr = ptr + MINBPC ( enc )		3158199	0		=			
ANR	3158790	UnaryOperationExpression	* nextTokPtr		3158199	0					
ANR	3158791	UnaryOperator	*		3158199	0					
ANR	3158792	Identifier	nextTokPtr		3158199	1					
ANR	3158793	AdditiveExpression	ptr + MINBPC ( enc )		3158199	1		+			
ANR	3158794	Identifier	ptr		3158199	0					
ANR	3158795	CallExpression	MINBPC ( enc )		3158199	1					
ANR	3158796	Callee	MINBPC		3158199	0					
ANR	3158797	Identifier	MINBPC		3158199	0					
ANR	3158798	ArgumentList	enc		3158199	1					
ANR	3158799	Argument	enc		3158199	0					
ANR	3158800	Identifier	enc		3158199	0					
ANR	3158801	ReturnStatement	return XML_TOK_CLOSE_PAREN_ASTERISK ;	1093:6:28861:28896	3158199	2	True				
ANR	3158802	Identifier	XML_TOK_CLOSE_PAREN_ASTERISK		3158199	0					
ANR	3158803	Label	case BT_QUEST :	1094:4:28902:28915	3158199	3	True				
ANR	3158804	Identifier	BT_QUEST		3158199	0					
ANR	3158805	ExpressionStatement	* nextTokPtr = ptr + MINBPC ( enc )	1095:6:28923:28954	3158199	4	True				
ANR	3158806	AssignmentExpression	* nextTokPtr = ptr + MINBPC ( enc )		3158199	0		=			
ANR	3158807	UnaryOperationExpression	* nextTokPtr		3158199	0					
ANR	3158808	UnaryOperator	*		3158199	0					
ANR	3158809	Identifier	nextTokPtr		3158199	1					
ANR	3158810	AdditiveExpression	ptr + MINBPC ( enc )		3158199	1		+			
ANR	3158811	Identifier	ptr		3158199	0					
ANR	3158812	CallExpression	MINBPC ( enc )		3158199	1					
ANR	3158813	Callee	MINBPC		3158199	0					
ANR	3158814	Identifier	MINBPC		3158199	0					
ANR	3158815	ArgumentList	enc		3158199	1					
ANR	3158816	Argument	enc		3158199	0					
ANR	3158817	Identifier	enc		3158199	0					
ANR	3158818	ReturnStatement	return XML_TOK_CLOSE_PAREN_QUESTION ;	1096:6:28962:28997	3158199	5	True				
ANR	3158819	Identifier	XML_TOK_CLOSE_PAREN_QUESTION		3158199	0					
ANR	3158820	Label	case BT_PLUS :	1097:4:29003:29015	3158199	6	True				
ANR	3158821	Identifier	BT_PLUS		3158199	0					
ANR	3158822	ExpressionStatement	* nextTokPtr = ptr + MINBPC ( enc )	1098:6:29023:29054	3158199	7	True				
ANR	3158823	AssignmentExpression	* nextTokPtr = ptr + MINBPC ( enc )		3158199	0		=			
ANR	3158824	UnaryOperationExpression	* nextTokPtr		3158199	0					
ANR	3158825	UnaryOperator	*		3158199	0					
ANR	3158826	Identifier	nextTokPtr		3158199	1					
ANR	3158827	AdditiveExpression	ptr + MINBPC ( enc )		3158199	1		+			
ANR	3158828	Identifier	ptr		3158199	0					
ANR	3158829	CallExpression	MINBPC ( enc )		3158199	1					
ANR	3158830	Callee	MINBPC		3158199	0					
ANR	3158831	Identifier	MINBPC		3158199	0					
ANR	3158832	ArgumentList	enc		3158199	1					
ANR	3158833	Argument	enc		3158199	0					
ANR	3158834	Identifier	enc		3158199	0					
ANR	3158835	ReturnStatement	return XML_TOK_CLOSE_PAREN_PLUS ;	1099:6:29062:29093	3158199	8	True				
ANR	3158836	Identifier	XML_TOK_CLOSE_PAREN_PLUS		3158199	0					
ANR	3158837	Label	case BT_CR :	1100:4:29099:29109	3158199	9	True				
ANR	3158838	Identifier	BT_CR		3158199	0					
ANR	3158839	Label	case BT_LF :	1100:16:29111:29121	3158199	10	True				
ANR	3158840	Identifier	BT_LF		3158199	0					
ANR	3158841	Label	case BT_S :	1100:28:29123:29132	3158199	11	True				
ANR	3158842	Identifier	BT_S		3158199	0					
ANR	3158843	Label	case BT_GT :	1101:4:29138:29148	3158199	12	True				
ANR	3158844	Identifier	BT_GT		3158199	0					
ANR	3158845	Label	case BT_COMMA :	1101:16:29150:29163	3158199	13	True				
ANR	3158846	Identifier	BT_COMMA		3158199	0					
ANR	3158847	Label	case BT_VERBAR :	1101:31:29165:29179	3158199	14	True				
ANR	3158848	Identifier	BT_VERBAR		3158199	0					
ANR	3158849	Label	case BT_RPAR :	1102:4:29185:29197	3158199	15	True				
ANR	3158850	Identifier	BT_RPAR		3158199	0					
ANR	3158851	ExpressionStatement	* nextTokPtr = ptr	1103:6:29205:29222	3158199	16	True				
ANR	3158852	AssignmentExpression	* nextTokPtr = ptr		3158199	0		=			
ANR	3158853	UnaryOperationExpression	* nextTokPtr		3158199	0					
ANR	3158854	UnaryOperator	*		3158199	0					
ANR	3158855	Identifier	nextTokPtr		3158199	1					
ANR	3158856	Identifier	ptr		3158199	1					
ANR	3158857	ReturnStatement	return XML_TOK_CLOSE_PAREN ;	1104:6:29230:29256	3158199	17	True				
ANR	3158858	Identifier	XML_TOK_CLOSE_PAREN		3158199	0					
ANR	3158859	ExpressionStatement	* nextTokPtr = ptr	1106:4:29268:29285	3158199	34	True				
ANR	3158860	AssignmentExpression	* nextTokPtr = ptr		3158199	0		=			
ANR	3158861	UnaryOperationExpression	* nextTokPtr		3158199	0					
ANR	3158862	UnaryOperator	*		3158199	0					
ANR	3158863	Identifier	nextTokPtr		3158199	1					
ANR	3158864	Identifier	ptr		3158199	1					
ANR	3158865	ReturnStatement	return XML_TOK_INVALID ;	1107:4:29291:29313	3158199	35	True				
ANR	3158866	Identifier	XML_TOK_INVALID		3158199	0					
ANR	3158867	Label	case BT_VERBAR :	1108:2:29317:29331	3158199	36	True				
ANR	3158868	Identifier	BT_VERBAR		3158199	0					
ANR	3158869	ExpressionStatement	* nextTokPtr = ptr + MINBPC ( enc )	1109:4:29337:29368	3158199	37	True				
ANR	3158870	AssignmentExpression	* nextTokPtr = ptr + MINBPC ( enc )		3158199	0		=			
ANR	3158871	UnaryOperationExpression	* nextTokPtr		3158199	0					
ANR	3158872	UnaryOperator	*		3158199	0					
ANR	3158873	Identifier	nextTokPtr		3158199	1					
ANR	3158874	AdditiveExpression	ptr + MINBPC ( enc )		3158199	1		+			
ANR	3158875	Identifier	ptr		3158199	0					
ANR	3158876	CallExpression	MINBPC ( enc )		3158199	1					
ANR	3158877	Callee	MINBPC		3158199	0					
ANR	3158878	Identifier	MINBPC		3158199	0					
ANR	3158879	ArgumentList	enc		3158199	1					
ANR	3158880	Argument	enc		3158199	0					
ANR	3158881	Identifier	enc		3158199	0					
ANR	3158882	ReturnStatement	return XML_TOK_OR ;	1110:4:29374:29391	3158199	38	True				
ANR	3158883	Identifier	XML_TOK_OR		3158199	0					
ANR	3158884	Label	case BT_GT :	1111:2:29395:29405	3158199	39	True				
ANR	3158885	Identifier	BT_GT		3158199	0					
ANR	3158886	ExpressionStatement	* nextTokPtr = ptr + MINBPC ( enc )	1112:4:29411:29442	3158199	40	True				
ANR	3158887	AssignmentExpression	* nextTokPtr = ptr + MINBPC ( enc )		3158199	0		=			
ANR	3158888	UnaryOperationExpression	* nextTokPtr		3158199	0					
ANR	3158889	UnaryOperator	*		3158199	0					
ANR	3158890	Identifier	nextTokPtr		3158199	1					
ANR	3158891	AdditiveExpression	ptr + MINBPC ( enc )		3158199	1		+			
ANR	3158892	Identifier	ptr		3158199	0					
ANR	3158893	CallExpression	MINBPC ( enc )		3158199	1					
ANR	3158894	Callee	MINBPC		3158199	0					
ANR	3158895	Identifier	MINBPC		3158199	0					
ANR	3158896	ArgumentList	enc		3158199	1					
ANR	3158897	Argument	enc		3158199	0					
ANR	3158898	Identifier	enc		3158199	0					
ANR	3158899	ReturnStatement	return XML_TOK_DECL_CLOSE ;	1113:4:29448:29473	3158199	41	True				
ANR	3158900	Identifier	XML_TOK_DECL_CLOSE		3158199	0					
ANR	3158901	Label	case BT_NUM :	1114:2:29477:29488	3158199	42	True				
ANR	3158902	Identifier	BT_NUM		3158199	0					
ANR	3158903	ReturnStatement	"return PREFIX ( scanPoundName ) ( enc , ptr + MINBPC ( enc ) , end , nextTokPtr ) ;"	1115:4:29494:29563	3158199	43	True				
ANR	3158904	CallExpression	"PREFIX ( scanPoundName ) ( enc , ptr + MINBPC ( enc ) , end , nextTokPtr )"		3158199	0					
ANR	3158905	Callee	PREFIX ( scanPoundName )		3158199	0					
ANR	3158906	CallExpression	PREFIX ( scanPoundName )		3158199	0					
ANR	3158907	Callee	PREFIX		3158199	0					
ANR	3158908	Identifier	PREFIX		3158199	0					
ANR	3158909	ArgumentList	scanPoundName		3158199	1					
ANR	3158910	Argument	scanPoundName		3158199	0					
ANR	3158911	Identifier	scanPoundName		3158199	0					
ANR	3158912	ArgumentList	enc		3158199	1					
ANR	3158913	Argument	enc		3158199	0					
ANR	3158914	Identifier	enc		3158199	0					
ANR	3158915	Argument	ptr + MINBPC ( enc )		3158199	1					
ANR	3158916	AdditiveExpression	ptr + MINBPC ( enc )		3158199	0		+			
ANR	3158917	Identifier	ptr		3158199	0					
ANR	3158918	CallExpression	MINBPC ( enc )		3158199	1					
ANR	3158919	Callee	MINBPC		3158199	0					
ANR	3158920	Identifier	MINBPC		3158199	0					
ANR	3158921	ArgumentList	enc		3158199	1					
ANR	3158922	Argument	enc		3158199	0					
ANR	3158923	Identifier	enc		3158199	0					
ANR	3158924	Argument	end		3158199	2					
ANR	3158925	Identifier	end		3158199	0					
ANR	3158926	Argument	nextTokPtr		3158199	3					
ANR	3158927	Identifier	nextTokPtr		3158199	0					
ANR	3158928	Statement	define	1116:1:29566:29571	3158199	44	True				
ANR	3158929	Statement	LEAD_CASE	1116:8:29573:29581	3158199	45	True				
ANR	3158930	Statement	(	1116:17:29582:29582	3158199	46	True				
ANR	3158931	Statement	n	1116:18:29583:29583	3158199	47	True				
ANR	3158932	Statement	)	1116:19:29584:29584	3158199	48	True				
ANR	3158933	Statement	case	1117:2:29590:29593	3158199	49	True				
ANR	3158934	Statement	BT_LEAD	1117:7:29595:29601	3158199	50	True				
ANR	3158935	Label	n :	1117:18:29606:29607	3158199	51	True				
ANR	3158936	Identifier	n		3158199	0					
ANR	3158937	IfStatement	if ( end - ptr < n )		3158199	52					
ANR	3158938	Condition	end - ptr < n	1118:8:29619:29631	3158199	0	True				
ANR	3158939	RelationalExpression	end - ptr < n		3158199	0		<			
ANR	3158940	AdditiveExpression	end - ptr		3158199	0		-			
ANR	3158941	Identifier	end		3158199	0					
ANR	3158942	Identifier	ptr		3158199	1					
ANR	3158943	Identifier	n		3158199	1					
ANR	3158944	ReturnStatement	return XML_TOK_PARTIAL_CHAR ;	1119:6:29642:29669	3158199	1	True				
ANR	3158945	Identifier	XML_TOK_PARTIAL_CHAR		3158199	0					
ANR	3158946	IfStatement	"if ( IS_NMSTRT_CHAR ( enc , ptr , n ) )"		3158199	53					
ANR	3158947	Condition	"IS_NMSTRT_CHAR ( enc , ptr , n )"	1120:8:29681:29707	3158199	0	True				
ANR	3158948	CallExpression	"IS_NMSTRT_CHAR ( enc , ptr , n )"		3158199	0					
ANR	3158949	Callee	IS_NMSTRT_CHAR		3158199	0					
ANR	3158950	Identifier	IS_NMSTRT_CHAR		3158199	0					
ANR	3158951	ArgumentList	enc		3158199	1					
ANR	3158952	Argument	enc		3158199	0					
ANR	3158953	Identifier	enc		3158199	0					
ANR	3158954	Argument	ptr		3158199	1					
ANR	3158955	Identifier	ptr		3158199	0					
ANR	3158956	Argument	n		3158199	2					
ANR	3158957	Identifier	n		3158199	0					
ANR	3158958	CompoundStatement		125:37:3536:3536	3158199	1					
ANR	3158959	ExpressionStatement	ptr += n	1121:6:29720:29728	3158199	0	True				
ANR	3158960	AssignmentExpression	ptr += n		3158199	0		+=			
ANR	3158961	Identifier	ptr		3158199	0					
ANR	3158962	Identifier	n		3158199	1					
ANR	3158963	ExpressionStatement	tok = XML_TOK_NAME	1122:6:29738:29756	3158199	1	True				
ANR	3158964	AssignmentExpression	tok = XML_TOK_NAME		3158199	0		=			
ANR	3158965	Identifier	tok		3158199	0					
ANR	3158966	Identifier	XML_TOK_NAME		3158199	1					
ANR	3158967	BreakStatement	break ;	1123:6:29766:29771	3158199	2	True				
ANR	3158968	IfStatement	"if ( IS_NAME_CHAR ( enc , ptr , n ) )"		3158199	54					
ANR	3158969	Condition	"IS_NAME_CHAR ( enc , ptr , n )"	1125:8:29791:29815	3158199	0	True				
ANR	3158970	CallExpression	"IS_NAME_CHAR ( enc , ptr , n )"		3158199	0					
ANR	3158971	Callee	IS_NAME_CHAR		3158199	0					
ANR	3158972	Identifier	IS_NAME_CHAR		3158199	0					
ANR	3158973	ArgumentList	enc		3158199	1					
ANR	3158974	Argument	enc		3158199	0					
ANR	3158975	Identifier	enc		3158199	0					
ANR	3158976	Argument	ptr		3158199	1					
ANR	3158977	Identifier	ptr		3158199	0					
ANR	3158978	Argument	n		3158199	2					
ANR	3158979	Identifier	n		3158199	0					
ANR	3158980	CompoundStatement		130:35:3644:3644	3158199	1					
ANR	3158981	ExpressionStatement	ptr += n	1126:6:29828:29836	3158199	0	True				
ANR	3158982	AssignmentExpression	ptr += n		3158199	0		+=			
ANR	3158983	Identifier	ptr		3158199	0					
ANR	3158984	Identifier	n		3158199	1					
ANR	3158985	ExpressionStatement	tok = XML_TOK_NMTOKEN	1127:6:29846:29867	3158199	1	True				
ANR	3158986	AssignmentExpression	tok = XML_TOK_NMTOKEN		3158199	0		=			
ANR	3158987	Identifier	tok		3158199	0					
ANR	3158988	Identifier	XML_TOK_NMTOKEN		3158199	1					
ANR	3158989	BreakStatement	break ;	1128:6:29877:29882	3158199	2	True				
ANR	3158990	ExpressionStatement	* nextTokPtr = ptr	1130:4:29898:29915	3158199	55	True				
ANR	3158991	AssignmentExpression	* nextTokPtr = ptr		3158199	0		=			
ANR	3158992	UnaryOperationExpression	* nextTokPtr		3158199	0					
ANR	3158993	UnaryOperator	*		3158199	0					
ANR	3158994	Identifier	nextTokPtr		3158199	1					
ANR	3158995	Identifier	ptr		3158199	1					
ANR	3158996	ReturnStatement	return XML_TOK_INVALID ;	1131:4:29923:29945	3158199	56	True				
ANR	3158997	Identifier	XML_TOK_INVALID		3158199	0					
ANR	3158998	Statement	LEAD_CASE	1132:4:29951:29959	3158199	57	True				
ANR	3158999	Statement	(	1132:13:29960:29960	3158199	58	True				
ANR	3159000	Statement	2	1132:14:29961:29961	3158199	59	True				
ANR	3159001	Statement	)	1132:15:29962:29962	3158199	60	True				
ANR	3159002	Statement	LEAD_CASE	1132:17:29964:29972	3158199	61	True				
ANR	3159003	Statement	(	1132:26:29973:29973	3158199	62	True				
ANR	3159004	Statement	3	1132:27:29974:29974	3158199	63	True				
ANR	3159005	Statement	)	1132:28:29975:29975	3158199	64	True				
ANR	3159006	Statement	LEAD_CASE	1132:30:29977:29985	3158199	65	True				
ANR	3159007	Statement	(	1132:39:29986:29986	3158199	66	True				
ANR	3159008	Statement	4	1132:40:29987:29987	3158199	67	True				
ANR	3159009	Statement	)	1132:41:29988:29988	3158199	68	True				
ANR	3159010	Statement	undef	1133:1:29991:29995	3158199	69	True				
ANR	3159011	Statement	LEAD_CASE	1133:7:29997:30005	3158199	70	True				
ANR	3159012	Label	case BT_NMSTRT :	1134:2:30009:30023	3158199	71	True				
ANR	3159013	Identifier	BT_NMSTRT		3158199	0					
ANR	3159014	Label	case BT_HEX :	1135:2:30027:30038	3158199	72	True				
ANR	3159015	Identifier	BT_HEX		3158199	0					
ANR	3159016	ExpressionStatement	tok = XML_TOK_NAME	1136:4:30044:30062	3158199	73	True				
ANR	3159017	AssignmentExpression	tok = XML_TOK_NAME		3158199	0		=			
ANR	3159018	Identifier	tok		3158199	0					
ANR	3159019	Identifier	XML_TOK_NAME		3158199	1					
ANR	3159020	ExpressionStatement	ptr += MINBPC ( enc )	1137:4:30068:30086	3158199	74	True				
ANR	3159021	AssignmentExpression	ptr += MINBPC ( enc )		3158199	0		+=			
ANR	3159022	Identifier	ptr		3158199	0					
ANR	3159023	CallExpression	MINBPC ( enc )		3158199	1					
ANR	3159024	Callee	MINBPC		3158199	0					
ANR	3159025	Identifier	MINBPC		3158199	0					
ANR	3159026	ArgumentList	enc		3158199	1					
ANR	3159027	Argument	enc		3158199	0					
ANR	3159028	Identifier	enc		3158199	0					
ANR	3159029	BreakStatement	break ;	1138:4:30092:30097	3158199	75	True				
ANR	3159030	Label	case BT_DIGIT :	1139:2:30101:30114	3158199	76	True				
ANR	3159031	Identifier	BT_DIGIT		3158199	0					
ANR	3159032	Label	case BT_NAME :	1140:2:30118:30130	3158199	77	True				
ANR	3159033	Identifier	BT_NAME		3158199	0					
ANR	3159034	Label	case BT_MINUS :	1141:2:30134:30147	3158199	78	True				
ANR	3159035	Identifier	BT_MINUS		3158199	0					
ANR	3159036	Label	case BT_COLON :	1143:2:30165:30178	3158199	79	True				
ANR	3159037	Identifier	BT_COLON		3158199	0					
ANR	3159038	ExpressionStatement	tok = XML_TOK_NMTOKEN	1145:4:30191:30212	3158199	80	True				
ANR	3159039	AssignmentExpression	tok = XML_TOK_NMTOKEN		3158199	0		=			
ANR	3159040	Identifier	tok		3158199	0					
ANR	3159041	Identifier	XML_TOK_NMTOKEN		3158199	1					
ANR	3159042	ExpressionStatement	ptr += MINBPC ( enc )	1146:4:30218:30236	3158199	81	True				
ANR	3159043	AssignmentExpression	ptr += MINBPC ( enc )		3158199	0		+=			
ANR	3159044	Identifier	ptr		3158199	0					
ANR	3159045	CallExpression	MINBPC ( enc )		3158199	1					
ANR	3159046	Callee	MINBPC		3158199	0					
ANR	3159047	Identifier	MINBPC		3158199	0					
ANR	3159048	ArgumentList	enc		3158199	1					
ANR	3159049	Argument	enc		3158199	0					
ANR	3159050	Identifier	enc		3158199	0					
ANR	3159051	BreakStatement	break ;	1147:4:30242:30247	3158199	82	True				
ANR	3159052	Label	case BT_NONASCII :	1148:2:30251:30267	3158199	83	True				
ANR	3159053	Identifier	BT_NONASCII		3158199	0					
ANR	3159054	IfStatement	"if ( IS_NMSTRT_CHAR_MINBPC ( enc , ptr ) )"		3158199	84					
ANR	3159055	Condition	"IS_NMSTRT_CHAR_MINBPC ( enc , ptr )"	1149:8:30277:30307	3158199	0	True				
ANR	3159056	CallExpression	"IS_NMSTRT_CHAR_MINBPC ( enc , ptr )"		3158199	0					
ANR	3159057	Callee	IS_NMSTRT_CHAR_MINBPC		3158199	0					
ANR	3159058	Identifier	IS_NMSTRT_CHAR_MINBPC		3158199	0					
ANR	3159059	ArgumentList	enc		3158199	1					
ANR	3159060	Argument	enc		3158199	0					
ANR	3159061	Identifier	enc		3158199	0					
ANR	3159062	Argument	ptr		3158199	1					
ANR	3159063	Identifier	ptr		3158199	0					
ANR	3159064	CompoundStatement		154:41:4136:4136	3158199	1					
ANR	3159065	ExpressionStatement	ptr += MINBPC ( enc )	1150:6:30318:30336	3158199	0	True				
ANR	3159066	AssignmentExpression	ptr += MINBPC ( enc )		3158199	0		+=			
ANR	3159067	Identifier	ptr		3158199	0					
ANR	3159068	CallExpression	MINBPC ( enc )		3158199	1					
ANR	3159069	Callee	MINBPC		3158199	0					
ANR	3159070	Identifier	MINBPC		3158199	0					
ANR	3159071	ArgumentList	enc		3158199	1					
ANR	3159072	Argument	enc		3158199	0					
ANR	3159073	Identifier	enc		3158199	0					
ANR	3159074	ExpressionStatement	tok = XML_TOK_NAME	1151:6:30344:30362	3158199	1	True				
ANR	3159075	AssignmentExpression	tok = XML_TOK_NAME		3158199	0		=			
ANR	3159076	Identifier	tok		3158199	0					
ANR	3159077	Identifier	XML_TOK_NAME		3158199	1					
ANR	3159078	BreakStatement	break ;	1152:6:30370:30375	3158199	2	True				
ANR	3159079	IfStatement	"if ( IS_NAME_CHAR_MINBPC ( enc , ptr ) )"		3158199	85					
ANR	3159080	Condition	"IS_NAME_CHAR_MINBPC ( enc , ptr )"	1154:8:30391:30419	3158199	0	True				
ANR	3159081	CallExpression	"IS_NAME_CHAR_MINBPC ( enc , ptr )"		3158199	0					
ANR	3159082	Callee	IS_NAME_CHAR_MINBPC		3158199	0					
ANR	3159083	Identifier	IS_NAME_CHAR_MINBPC		3158199	0					
ANR	3159084	ArgumentList	enc		3158199	1					
ANR	3159085	Argument	enc		3158199	0					
ANR	3159086	Identifier	enc		3158199	0					
ANR	3159087	Argument	ptr		3158199	1					
ANR	3159088	Identifier	ptr		3158199	0					
ANR	3159089	CompoundStatement		159:39:4248:4248	3158199	1					
ANR	3159090	ExpressionStatement	ptr += MINBPC ( enc )	1155:6:30430:30448	3158199	0	True				
ANR	3159091	AssignmentExpression	ptr += MINBPC ( enc )		3158199	0		+=			
ANR	3159092	Identifier	ptr		3158199	0					
ANR	3159093	CallExpression	MINBPC ( enc )		3158199	1					
ANR	3159094	Callee	MINBPC		3158199	0					
ANR	3159095	Identifier	MINBPC		3158199	0					
ANR	3159096	ArgumentList	enc		3158199	1					
ANR	3159097	Argument	enc		3158199	0					
ANR	3159098	Identifier	enc		3158199	0					
ANR	3159099	ExpressionStatement	tok = XML_TOK_NMTOKEN	1156:6:30456:30477	3158199	1	True				
ANR	3159100	AssignmentExpression	tok = XML_TOK_NMTOKEN		3158199	0		=			
ANR	3159101	Identifier	tok		3158199	0					
ANR	3159102	Identifier	XML_TOK_NMTOKEN		3158199	1					
ANR	3159103	BreakStatement	break ;	1157:6:30485:30490	3158199	2	True				
ANR	3159104	Label	default :	1160:2:30523:30530	3158199	86	True				
ANR	3159105	Identifier	default		3158199	0					
ANR	3159106	ExpressionStatement	* nextTokPtr = ptr	1161:4:30536:30553	3158199	87	True				
ANR	3159107	AssignmentExpression	* nextTokPtr = ptr		3158199	0		=			
ANR	3159108	UnaryOperationExpression	* nextTokPtr		3158199	0					
ANR	3159109	UnaryOperator	*		3158199	0					
ANR	3159110	Identifier	nextTokPtr		3158199	1					
ANR	3159111	Identifier	ptr		3158199	1					
ANR	3159112	ReturnStatement	return XML_TOK_INVALID ;	1162:4:30559:30581	3158199	88	True				
ANR	3159113	Identifier	XML_TOK_INVALID		3158199	0					
ANR	3159114	WhileStatement	"while ( HAS_CHAR ( enc , ptr , end ) )"		3158199	4					
ANR	3159115	Condition	"HAS_CHAR ( enc , ptr , end )"	1164:9:30596:30618	3158199	0	True				
ANR	3159116	CallExpression	"HAS_CHAR ( enc , ptr , end )"		3158199	0					
ANR	3159117	Callee	HAS_CHAR		3158199	0					
ANR	3159118	Identifier	HAS_CHAR		3158199	0					
ANR	3159119	ArgumentList	enc		3158199	1					
ANR	3159120	Argument	enc		3158199	0					
ANR	3159121	Identifier	enc		3158199	0					
ANR	3159122	Argument	ptr		3158199	1					
ANR	3159123	Identifier	ptr		3158199	0					
ANR	3159124	Argument	end		3158199	2					
ANR	3159125	Identifier	end		3158199	0					
ANR	3159126	CompoundStatement		169:34:4447:4447	3158199	1					
ANR	3159127	SwitchStatement	"switch ( BYTE_TYPE ( enc , ptr ) )"		3158199	0					
ANR	3159128	Condition	"BYTE_TYPE ( enc , ptr )"	1165:12:30635:30653	3158199	0	True				
ANR	3159129	CallExpression	"BYTE_TYPE ( enc , ptr )"		3158199	0					
ANR	3159130	Callee	BYTE_TYPE		3158199	0					
ANR	3159131	Identifier	BYTE_TYPE		3158199	0					
ANR	3159132	ArgumentList	enc		3158199	1					
ANR	3159133	Argument	enc		3158199	0					
ANR	3159134	Identifier	enc		3158199	0					
ANR	3159135	Argument	ptr		3158199	1					
ANR	3159136	Identifier	ptr		3158199	0					
ANR	3159137	CompoundStatement		170:33:4482:4482	3158199	1					
ANR	3159138	Statement	CHECK_NAME_CASES	1166:4:30662:30677	3158199	0	True				
ANR	3159139	Statement	(	1166:20:30678:30678	3158199	1	True				
ANR	3159140	Statement	enc	1166:21:30679:30681	3158199	2	True				
ANR	3159141	Statement	","	1166:24:30682:30682	3158199	3	True				
ANR	3159142	Statement	ptr	1166:26:30684:30686	3158199	4	True				
ANR	3159143	Statement	","	1166:29:30687:30687	3158199	5	True				
ANR	3159144	Statement	end	1166:31:30689:30691	3158199	6	True				
ANR	3159145	Statement	","	1166:34:30692:30692	3158199	7	True				
ANR	3159146	Statement	nextTokPtr	1166:36:30694:30703	3158199	8	True				
ANR	3159147	Statement	)	1166:46:30704:30704	3158199	9	True				
ANR	3159148	Label	case BT_GT :	1167:4:30710:30720	3158199	10	True				
ANR	3159149	Identifier	BT_GT		3158199	0					
ANR	3159150	Label	case BT_RPAR :	1167:16:30722:30734	3158199	11	True				
ANR	3159151	Identifier	BT_RPAR		3158199	0					
ANR	3159152	Label	case BT_COMMA :	1167:30:30736:30749	3158199	12	True				
ANR	3159153	Identifier	BT_COMMA		3158199	0					
ANR	3159154	Label	case BT_VERBAR :	1168:4:30755:30769	3158199	13	True				
ANR	3159155	Identifier	BT_VERBAR		3158199	0					
ANR	3159156	Label	case BT_LSQB :	1168:20:30771:30783	3158199	14	True				
ANR	3159157	Identifier	BT_LSQB		3158199	0					
ANR	3159158	Label	case BT_PERCNT :	1168:34:30785:30799	3158199	15	True				
ANR	3159159	Identifier	BT_PERCNT		3158199	0					
ANR	3159160	Label	case BT_S :	1169:4:30805:30814	3158199	16	True				
ANR	3159161	Identifier	BT_S		3158199	0					
ANR	3159162	Label	case BT_CR :	1169:15:30816:30826	3158199	17	True				
ANR	3159163	Identifier	BT_CR		3158199	0					
ANR	3159164	Label	case BT_LF :	1169:27:30828:30838	3158199	18	True				
ANR	3159165	Identifier	BT_LF		3158199	0					
ANR	3159166	ExpressionStatement	* nextTokPtr = ptr	1170:6:30846:30863	3158199	19	True				
ANR	3159167	AssignmentExpression	* nextTokPtr = ptr		3158199	0		=			
ANR	3159168	UnaryOperationExpression	* nextTokPtr		3158199	0					
ANR	3159169	UnaryOperator	*		3158199	0					
ANR	3159170	Identifier	nextTokPtr		3158199	1					
ANR	3159171	Identifier	ptr		3158199	1					
ANR	3159172	ReturnStatement	return tok ;	1171:6:30871:30881	3158199	20	True				
ANR	3159173	Identifier	tok		3158199	0					
ANR	3159174	Label	case BT_COLON :	1173:4:30901:30914	3158199	21	True				
ANR	3159175	Identifier	BT_COLON		3158199	0					
ANR	3159176	ExpressionStatement	ptr += MINBPC ( enc )	1174:6:30922:30940	3158199	22	True				
ANR	3159177	AssignmentExpression	ptr += MINBPC ( enc )		3158199	0		+=			
ANR	3159178	Identifier	ptr		3158199	0					
ANR	3159179	CallExpression	MINBPC ( enc )		3158199	1					
ANR	3159180	Callee	MINBPC		3158199	0					
ANR	3159181	Identifier	MINBPC		3158199	0					
ANR	3159182	ArgumentList	enc		3158199	1					
ANR	3159183	Argument	enc		3158199	0					
ANR	3159184	Identifier	enc		3158199	0					
ANR	3159185	SwitchStatement	switch ( tok )		3158199	23					
ANR	3159186	Condition	tok	1175:14:30956:30958	3158199	0	True				
ANR	3159187	Identifier	tok		3158199	0					
ANR	3159188	CompoundStatement		180:19:4787:4787	3158199	1					
ANR	3159189	Label	case XML_TOK_NAME :	1176:6:30969:30986	3158199	0	True				
ANR	3159190	Identifier	XML_TOK_NAME		3158199	0					
ANR	3159191	ExpressionStatement	"REQUIRE_CHAR ( enc , ptr , end )"	1177:8:30996:31023	3158199	1	True				
ANR	3159192	CallExpression	"REQUIRE_CHAR ( enc , ptr , end )"		3158199	0					
ANR	3159193	Callee	REQUIRE_CHAR		3158199	0					
ANR	3159194	Identifier	REQUIRE_CHAR		3158199	0					
ANR	3159195	ArgumentList	enc		3158199	1					
ANR	3159196	Argument	enc		3158199	0					
ANR	3159197	Identifier	enc		3158199	0					
ANR	3159198	Argument	ptr		3158199	1					
ANR	3159199	Identifier	ptr		3158199	0					
ANR	3159200	Argument	end		3158199	2					
ANR	3159201	Identifier	end		3158199	0					
ANR	3159202	ExpressionStatement	tok = XML_TOK_PREFIXED_NAME	1178:8:31033:31060	3158199	2	True				
ANR	3159203	AssignmentExpression	tok = XML_TOK_PREFIXED_NAME		3158199	0		=			
ANR	3159204	Identifier	tok		3158199	0					
ANR	3159205	Identifier	XML_TOK_PREFIXED_NAME		3158199	1					
ANR	3159206	SwitchStatement	"switch ( BYTE_TYPE ( enc , ptr ) )"		3158199	3					
ANR	3159207	Condition	"BYTE_TYPE ( enc , ptr )"	1179:16:31078:31096	3158199	0	True				
ANR	3159208	CallExpression	"BYTE_TYPE ( enc , ptr )"		3158199	0					
ANR	3159209	Callee	BYTE_TYPE		3158199	0					
ANR	3159210	Identifier	BYTE_TYPE		3158199	0					
ANR	3159211	ArgumentList	enc		3158199	1					
ANR	3159212	Argument	enc		3158199	0					
ANR	3159213	Identifier	enc		3158199	0					
ANR	3159214	Argument	ptr		3158199	1					
ANR	3159215	Identifier	ptr		3158199	0					
ANR	3159216	CompoundStatement		184:37:4925:4925	3158199	1					
ANR	3159217	Statement	CHECK_NAME_CASES	1180:8:31109:31124	3158199	0	True				
ANR	3159218	Statement	(	1180:24:31125:31125	3158199	1	True				
ANR	3159219	Statement	enc	1180:25:31126:31128	3158199	2	True				
ANR	3159220	Statement	","	1180:28:31129:31129	3158199	3	True				
ANR	3159221	Statement	ptr	1180:30:31131:31133	3158199	4	True				
ANR	3159222	Statement	","	1180:33:31134:31134	3158199	5	True				
ANR	3159223	Statement	end	1180:35:31136:31138	3158199	6	True				
ANR	3159224	Statement	","	1180:38:31139:31139	3158199	7	True				
ANR	3159225	Statement	nextTokPtr	1180:40:31141:31150	3158199	8	True				
ANR	3159226	Statement	)	1180:50:31151:31151	3158199	9	True				
ANR	3159227	Label	default :	1181:8:31161:31168	3158199	10	True				
ANR	3159228	Identifier	default		3158199	0					
ANR	3159229	ExpressionStatement	tok = XML_TOK_NMTOKEN	1182:10:31180:31201	3158199	11	True				
ANR	3159230	AssignmentExpression	tok = XML_TOK_NMTOKEN		3158199	0		=			
ANR	3159231	Identifier	tok		3158199	0					
ANR	3159232	Identifier	XML_TOK_NMTOKEN		3158199	1					
ANR	3159233	BreakStatement	break ;	1183:10:31213:31218	3158199	12	True				
ANR	3159234	BreakStatement	break ;	1185:8:31238:31243	3158199	4	True				
ANR	3159235	Label	case XML_TOK_PREFIXED_NAME :	1186:6:31251:31277	3158199	5	True				
ANR	3159236	Identifier	XML_TOK_PREFIXED_NAME		3158199	0					
ANR	3159237	ExpressionStatement	tok = XML_TOK_NMTOKEN	1187:8:31287:31308	3158199	6	True				
ANR	3159238	AssignmentExpression	tok = XML_TOK_NMTOKEN		3158199	0		=			
ANR	3159239	Identifier	tok		3158199	0					
ANR	3159240	Identifier	XML_TOK_NMTOKEN		3158199	1					
ANR	3159241	BreakStatement	break ;	1188:8:31318:31323	3158199	7	True				
ANR	3159242	BreakStatement	break ;	1190:6:31339:31344	3158199	24	True				
ANR	3159243	Label	case BT_PLUS :	1192:4:31357:31369	3158199	25	True				
ANR	3159244	Identifier	BT_PLUS		3158199	0					
ANR	3159245	IfStatement	if ( tok == XML_TOK_NMTOKEN )		3158199	26					
ANR	3159246	Condition	tok == XML_TOK_NMTOKEN	1193:10:31381:31402	3158199	0	True				
ANR	3159247	EqualityExpression	tok == XML_TOK_NMTOKEN		3158199	0		==			
ANR	3159248	Identifier	tok		3158199	0					
ANR	3159249	Identifier	XML_TOK_NMTOKEN		3158199	1					
ANR	3159250	CompoundStatement		198:35:5232:5232	3158199	1					
ANR	3159251	ExpressionStatement	* nextTokPtr = ptr	1194:8:31416:31433	3158199	0	True				
ANR	3159252	AssignmentExpression	* nextTokPtr = ptr		3158199	0		=			
ANR	3159253	UnaryOperationExpression	* nextTokPtr		3158199	0					
ANR	3159254	UnaryOperator	*		3158199	0					
ANR	3159255	Identifier	nextTokPtr		3158199	1					
ANR	3159256	Identifier	ptr		3158199	1					
ANR	3159257	ReturnStatement	return XML_TOK_INVALID ;	1195:8:31443:31465	3158199	1	True				
ANR	3159258	Identifier	XML_TOK_INVALID		3158199	0					
ANR	3159259	ExpressionStatement	* nextTokPtr = ptr + MINBPC ( enc )	1197:6:31481:31512	3158199	27	True				
ANR	3159260	AssignmentExpression	* nextTokPtr = ptr + MINBPC ( enc )		3158199	0		=			
ANR	3159261	UnaryOperationExpression	* nextTokPtr		3158199	0					
ANR	3159262	UnaryOperator	*		3158199	0					
ANR	3159263	Identifier	nextTokPtr		3158199	1					
ANR	3159264	AdditiveExpression	ptr + MINBPC ( enc )		3158199	1		+			
ANR	3159265	Identifier	ptr		3158199	0					
ANR	3159266	CallExpression	MINBPC ( enc )		3158199	1					
ANR	3159267	Callee	MINBPC		3158199	0					
ANR	3159268	Identifier	MINBPC		3158199	0					
ANR	3159269	ArgumentList	enc		3158199	1					
ANR	3159270	Argument	enc		3158199	0					
ANR	3159271	Identifier	enc		3158199	0					
ANR	3159272	ReturnStatement	return XML_TOK_NAME_PLUS ;	1198:6:31520:31544	3158199	28	True				
ANR	3159273	Identifier	XML_TOK_NAME_PLUS		3158199	0					
ANR	3159274	Label	case BT_AST :	1199:4:31550:31561	3158199	29	True				
ANR	3159275	Identifier	BT_AST		3158199	0					
ANR	3159276	IfStatement	if ( tok == XML_TOK_NMTOKEN )		3158199	30					
ANR	3159277	Condition	tok == XML_TOK_NMTOKEN	1200:10:31573:31594	3158199	0	True				
ANR	3159278	EqualityExpression	tok == XML_TOK_NMTOKEN		3158199	0		==			
ANR	3159279	Identifier	tok		3158199	0					
ANR	3159280	Identifier	XML_TOK_NMTOKEN		3158199	1					
ANR	3159281	CompoundStatement		205:35:5424:5424	3158199	1					
ANR	3159282	ExpressionStatement	* nextTokPtr = ptr	1201:8:31608:31625	3158199	0	True				
ANR	3159283	AssignmentExpression	* nextTokPtr = ptr		3158199	0		=			
ANR	3159284	UnaryOperationExpression	* nextTokPtr		3158199	0					
ANR	3159285	UnaryOperator	*		3158199	0					
ANR	3159286	Identifier	nextTokPtr		3158199	1					
ANR	3159287	Identifier	ptr		3158199	1					
ANR	3159288	ReturnStatement	return XML_TOK_INVALID ;	1202:8:31635:31657	3158199	1	True				
ANR	3159289	Identifier	XML_TOK_INVALID		3158199	0					
ANR	3159290	ExpressionStatement	* nextTokPtr = ptr + MINBPC ( enc )	1204:6:31673:31704	3158199	31	True				
ANR	3159291	AssignmentExpression	* nextTokPtr = ptr + MINBPC ( enc )		3158199	0		=			
ANR	3159292	UnaryOperationExpression	* nextTokPtr		3158199	0					
ANR	3159293	UnaryOperator	*		3158199	0					
ANR	3159294	Identifier	nextTokPtr		3158199	1					
ANR	3159295	AdditiveExpression	ptr + MINBPC ( enc )		3158199	1		+			
ANR	3159296	Identifier	ptr		3158199	0					
ANR	3159297	CallExpression	MINBPC ( enc )		3158199	1					
ANR	3159298	Callee	MINBPC		3158199	0					
ANR	3159299	Identifier	MINBPC		3158199	0					
ANR	3159300	ArgumentList	enc		3158199	1					
ANR	3159301	Argument	enc		3158199	0					
ANR	3159302	Identifier	enc		3158199	0					
ANR	3159303	ReturnStatement	return XML_TOK_NAME_ASTERISK ;	1205:6:31712:31740	3158199	32	True				
ANR	3159304	Identifier	XML_TOK_NAME_ASTERISK		3158199	0					
ANR	3159305	Label	case BT_QUEST :	1206:4:31746:31759	3158199	33	True				
ANR	3159306	Identifier	BT_QUEST		3158199	0					
ANR	3159307	IfStatement	if ( tok == XML_TOK_NMTOKEN )		3158199	34					
ANR	3159308	Condition	tok == XML_TOK_NMTOKEN	1207:10:31771:31792	3158199	0	True				
ANR	3159309	EqualityExpression	tok == XML_TOK_NMTOKEN		3158199	0		==			
ANR	3159310	Identifier	tok		3158199	0					
ANR	3159311	Identifier	XML_TOK_NMTOKEN		3158199	1					
ANR	3159312	CompoundStatement		212:35:5622:5622	3158199	1					
ANR	3159313	ExpressionStatement	* nextTokPtr = ptr	1208:8:31806:31823	3158199	0	True				
ANR	3159314	AssignmentExpression	* nextTokPtr = ptr		3158199	0		=			
ANR	3159315	UnaryOperationExpression	* nextTokPtr		3158199	0					
ANR	3159316	UnaryOperator	*		3158199	0					
ANR	3159317	Identifier	nextTokPtr		3158199	1					
ANR	3159318	Identifier	ptr		3158199	1					
ANR	3159319	ReturnStatement	return XML_TOK_INVALID ;	1209:8:31833:31855	3158199	1	True				
ANR	3159320	Identifier	XML_TOK_INVALID		3158199	0					
ANR	3159321	ExpressionStatement	* nextTokPtr = ptr + MINBPC ( enc )	1211:6:31871:31902	3158199	35	True				
ANR	3159322	AssignmentExpression	* nextTokPtr = ptr + MINBPC ( enc )		3158199	0		=			
ANR	3159323	UnaryOperationExpression	* nextTokPtr		3158199	0					
ANR	3159324	UnaryOperator	*		3158199	0					
ANR	3159325	Identifier	nextTokPtr		3158199	1					
ANR	3159326	AdditiveExpression	ptr + MINBPC ( enc )		3158199	1		+			
ANR	3159327	Identifier	ptr		3158199	0					
ANR	3159328	CallExpression	MINBPC ( enc )		3158199	1					
ANR	3159329	Callee	MINBPC		3158199	0					
ANR	3159330	Identifier	MINBPC		3158199	0					
ANR	3159331	ArgumentList	enc		3158199	1					
ANR	3159332	Argument	enc		3158199	0					
ANR	3159333	Identifier	enc		3158199	0					
ANR	3159334	ReturnStatement	return XML_TOK_NAME_QUESTION ;	1212:6:31910:31938	3158199	36	True				
ANR	3159335	Identifier	XML_TOK_NAME_QUESTION		3158199	0					
ANR	3159336	Label	default :	1213:4:31944:31951	3158199	37	True				
ANR	3159337	Identifier	default		3158199	0					
ANR	3159338	ExpressionStatement	* nextTokPtr = ptr	1214:6:31959:31976	3158199	38	True				
ANR	3159339	AssignmentExpression	* nextTokPtr = ptr		3158199	0		=			
ANR	3159340	UnaryOperationExpression	* nextTokPtr		3158199	0					
ANR	3159341	UnaryOperator	*		3158199	0					
ANR	3159342	Identifier	nextTokPtr		3158199	1					
ANR	3159343	Identifier	ptr		3158199	1					
ANR	3159344	ReturnStatement	return XML_TOK_INVALID ;	1215:6:31984:32006	3158199	39	True				
ANR	3159345	Identifier	XML_TOK_INVALID		3158199	0					
ANR	3159346	ReturnStatement	return - tok ;	1218:2:32020:32031	3158199	5	True				
ANR	3159347	UnaryOperationExpression	- tok		3158199	0					
ANR	3159348	UnaryOperator	-		3158199	0					
ANR	3159349	Identifier	tok		3158199	1					
ANR	3159350	ReturnType	static int PTRCALL PREFIX		3158199	1					
ANR	3159351	Identifier	( prologTok )		3158199	2					
ANR	3159352	Identifier	prologTok		3158199	3					
ANR	3159353	ParameterList	"const ENCODING * enc , const char * ptr , const char * end , const char * * nextTokPtr"		3158199	4					
ANR	3159354	Parameter	const ENCODING * enc	994:18:26075:26093	3158199	0	True				
ANR	3159355	ParameterType	const ENCODING *		3158199	0					
ANR	3159356	Identifier	enc		3158199	1					
ANR	3159357	Parameter	const char * ptr	994:39:26096:26110	3158199	1	True				
ANR	3159358	ParameterType	const char *		3158199	0					
ANR	3159359	Identifier	ptr		3158199	1					
ANR	3159360	Parameter	const char * end	994:56:26113:26127	3158199	2	True				
ANR	3159361	ParameterType	const char *		3158199	0					
ANR	3159362	Identifier	end		3158199	1					
ANR	3159363	Parameter	const char * * nextTokPtr	995:18:26148:26170	3158199	3	True				
ANR	3159364	ParameterType	const char * *		3158199	0					
ANR	3159365	Identifier	nextTokPtr		3158199	1					
ANR	3159366	CFGEntryNode	ENTRY		3158199		True				
ANR	3159367	CFGExitNode	EXIT		3158199		True				
ANR	3159368	InfiniteForNode	true		3158199		True				
ANR	3159369	Symbol	XML_TOK_PARTIAL_CHAR		3158199						
ANR	3159370	Symbol	XML_TOK_PREFIXED_NAME		3158199						
ANR	3159371	Symbol	nextTokPtr		3158199						
ANR	3159372	Symbol	BT_QUOT		3158199						
ANR	3159373	Symbol	XML_TOK_PARTIAL		3158199						
ANR	3159374	Symbol	BYTE_TYPE		3158199						
ANR	3159375	Symbol	scanPi		3158199						
ANR	3159376	Symbol	* nextTokPtr		3158199						
ANR	3159377	Symbol	IS_NAME_CHAR_MINBPC		3158199						
ANR	3159378	Symbol	MINBPC		3158199						
ANR	3159379	Symbol	IS_NMSTRT_CHAR		3158199						
ANR	3159380	Symbol	tok		3158199						
ANR	3159381	Symbol	XML_TOK_COND_SECT_CLOSE		3158199						
ANR	3159382	Symbol	XML_TOK_CLOSE_PAREN_ASTERISK		3158199						
ANR	3159383	Symbol	XML_TOK_CLOSE_PAREN		3158199						
ANR	3159384	Symbol	XML_TOK_CLOSE_PAREN_PLUS		3158199						
ANR	3159385	Symbol	XML_TOK_NAME		3158199						
ANR	3159386	Symbol	XML_TOK_CLOSE_PAREN_QUESTION		3158199						
ANR	3159387	Symbol	IS_NAME_CHAR		3158199						
ANR	3159388	Symbol	end		3158199						
ANR	3159389	Symbol	enc		3158199						
ANR	3159390	Symbol	scanPercent		3158199						
ANR	3159391	Symbol	XML_TOK_NAME_PLUS		3158199						
ANR	3159392	Symbol	XML_TOK_INSTANCE_START		3158199						
ANR	3159393	Symbol	XML_TOK_INVALID		3158199						
ANR	3159394	Symbol	scanDecl		3158199						
ANR	3159395	Symbol	XML_TOK_PROLOG_S		3158199						
ANR	3159396	Symbol	XML_TOK_NAME_ASTERISK		3158199						
ANR	3159397	Symbol	scanPoundName		3158199						
ANR	3159398	Symbol	XML_TOK_OPEN_BRACKET		3158199						
ANR	3159399	Symbol	BT_APOS		3158199						
ANR	3159400	Symbol	XML_TOK_COMMA		3158199						
ANR	3159401	Symbol	XML_TOK_OR		3158199						
ANR	3159402	Symbol	n		3158199						
ANR	3159403	Symbol	ptr		3158199						
ANR	3159404	Symbol	CHAR_MATCHES		3158199						
ANR	3159405	Symbol	XML_TOK_OPEN_PAREN		3158199						
ANR	3159406	Symbol	XML_TOK_CLOSE_BRACKET		3158199						
ANR	3159407	Symbol	PREFIX		3158199						
ANR	3159408	Symbol	ASCII_GT		3158199						
ANR	3159409	Symbol	XML_TOK_NMTOKEN		3158199						
ANR	3159410	Symbol	XML_TOK_NONE		3158199						
ANR	3159411	Symbol	XML_TOK_DECL_CLOSE		3158199						
ANR	3159412	Symbol	XML_TOK_NAME_QUESTION		3158199						
ANR	3159413	Symbol	scanLit		3158199						
ANR	3159414	Symbol	HAS_CHAR		3158199						
ANR	3159415	Symbol	ASCII_RSQB		3158199						
ANR	3159416	Symbol	IS_NMSTRT_CHAR_MINBPC		3158199						
ANR	3159417	Function	attributeValueTok	1221:0:32036:33940							
ANR	3159418	FunctionDef	"attributeValueTok (const ENCODING * enc , const char * ptr , const char * end , const char * * nextTokPtr)"		3159417	0					
ANR	3159419	CompoundStatement		1224:0:32187:33940	3159417	0					
ANR	3159420	IdentifierDeclStatement	const char * start ;	1225:2:32191:32208	3159417	0	True				
ANR	3159421	IdentifierDecl	* start		3159417	0					
ANR	3159422	IdentifierDeclType	const char *		3159417	0					
ANR	3159423	Identifier	start		3159417	1					
ANR	3159424	IfStatement	if ( ptr >= end )		3159417	1					
ANR	3159425	Condition	ptr >= end	1226:6:32216:32225	3159417	0	True				
ANR	3159426	RelationalExpression	ptr >= end		3159417	0		>=			
ANR	3159427	Identifier	ptr		3159417	0					
ANR	3159428	Identifier	end		3159417	1					
ANR	3159429	ReturnStatement	return XML_TOK_NONE ;	1227:4:32232:32251	3159417	1	True				
ANR	3159430	Identifier	XML_TOK_NONE		3159417	0					
ANR	3159431	ElseStatement	else		3159417	0					
ANR	3159432	IfStatement	"if ( ! HAS_CHAR ( enc , ptr , end ) )"		3159417	0					
ANR	3159433	Condition	"! HAS_CHAR ( enc , ptr , end )"	1228:11:32264:32288	3159417	0	True				
ANR	3159434	UnaryOperationExpression	"! HAS_CHAR ( enc , ptr , end )"		3159417	0					
ANR	3159435	UnaryOperator	!		3159417	0					
ANR	3159436	CallExpression	"HAS_CHAR ( enc , ptr , end )"		3159417	1					
ANR	3159437	Callee	HAS_CHAR		3159417	0					
ANR	3159438	Identifier	HAS_CHAR		3159417	0					
ANR	3159439	ArgumentList	enc		3159417	1					
ANR	3159440	Argument	enc		3159417	0					
ANR	3159441	Identifier	enc		3159417	0					
ANR	3159442	Argument	ptr		3159417	1					
ANR	3159443	Identifier	ptr		3159417	0					
ANR	3159444	Argument	end		3159417	2					
ANR	3159445	Identifier	end		3159417	0					
ANR	3159446	CompoundStatement		5:38:103:103	3159417	1					
ANR	3159447	ReturnStatement	return XML_TOK_PARTIAL ;	1234:4:32553:32575	3159417	0	True				
ANR	3159448	Identifier	XML_TOK_PARTIAL		3159417	0					
ANR	3159449	ExpressionStatement	start = ptr	1236:2:32604:32615	3159417	2	True				
ANR	3159450	AssignmentExpression	start = ptr		3159417	0		=			
ANR	3159451	Identifier	start		3159417	0					
ANR	3159452	Identifier	ptr		3159417	1					
ANR	3159453	WhileStatement	"while ( HAS_CHAR ( enc , ptr , end ) )"		3159417	3					
ANR	3159454	Condition	"HAS_CHAR ( enc , ptr , end )"	1237:9:32626:32648	3159417	0	True				
ANR	3159455	CallExpression	"HAS_CHAR ( enc , ptr , end )"		3159417	0					
ANR	3159456	Callee	HAS_CHAR		3159417	0					
ANR	3159457	Identifier	HAS_CHAR		3159417	0					
ANR	3159458	ArgumentList	enc		3159417	1					
ANR	3159459	Argument	enc		3159417	0					
ANR	3159460	Identifier	enc		3159417	0					
ANR	3159461	Argument	ptr		3159417	1					
ANR	3159462	Identifier	ptr		3159417	0					
ANR	3159463	Argument	end		3159417	2					
ANR	3159464	Identifier	end		3159417	0					
ANR	3159465	CompoundStatement		14:34:463:463	3159417	1					
ANR	3159466	SwitchStatement	"switch ( BYTE_TYPE ( enc , ptr ) )"		3159417	0					
ANR	3159467	Condition	"BYTE_TYPE ( enc , ptr )"	1238:12:32665:32683	3159417	0	True				
ANR	3159468	CallExpression	"BYTE_TYPE ( enc , ptr )"		3159417	0					
ANR	3159469	Callee	BYTE_TYPE		3159417	0					
ANR	3159470	Identifier	BYTE_TYPE		3159417	0					
ANR	3159471	ArgumentList	enc		3159417	1					
ANR	3159472	Argument	enc		3159417	0					
ANR	3159473	Identifier	enc		3159417	0					
ANR	3159474	Argument	ptr		3159417	1					
ANR	3159475	Identifier	ptr		3159417	0					
ANR	3159476	CompoundStatement		15:33:498:498	3159417	1					
ANR	3159477	Statement	define	1239:1:32689:32694	3159417	0	True				
ANR	3159478	Statement	LEAD_CASE	1239:8:32696:32704	3159417	1	True				
ANR	3159479	Statement	(	1239:17:32705:32705	3159417	2	True				
ANR	3159480	Statement	n	1239:18:32706:32706	3159417	3	True				
ANR	3159481	Statement	)	1239:19:32707:32707	3159417	4	True				
ANR	3159482	Statement	case	1240:4:32715:32718	3159417	5	True				
ANR	3159483	Statement	BT_LEAD	1240:9:32720:32726	3159417	6	True				
ANR	3159484	Label	n :	1240:20:32731:32732	3159417	7	True				
ANR	3159485	Identifier	n		3159417	0					
ANR	3159486	ExpressionStatement	ptr += n	1240:23:32734:32742	3159417	8	True				
ANR	3159487	AssignmentExpression	ptr += n		3159417	0		+=			
ANR	3159488	Identifier	ptr		3159417	0					
ANR	3159489	Identifier	n		3159417	1					
ANR	3159490	BreakStatement	break ;	1240:33:32744:32749	3159417	9	True				
ANR	3159491	Statement	LEAD_CASE	1241:4:32755:32763	3159417	10	True				
ANR	3159492	Statement	(	1241:13:32764:32764	3159417	11	True				
ANR	3159493	Statement	2	1241:14:32765:32765	3159417	12	True				
ANR	3159494	Statement	)	1241:15:32766:32766	3159417	13	True				
ANR	3159495	Statement	LEAD_CASE	1241:17:32768:32776	3159417	14	True				
ANR	3159496	Statement	(	1241:26:32777:32777	3159417	15	True				
ANR	3159497	Statement	3	1241:27:32778:32778	3159417	16	True				
ANR	3159498	Statement	)	1241:28:32779:32779	3159417	17	True				
ANR	3159499	Statement	LEAD_CASE	1241:30:32781:32789	3159417	18	True				
ANR	3159500	Statement	(	1241:39:32790:32790	3159417	19	True				
ANR	3159501	Statement	4	1241:40:32791:32791	3159417	20	True				
ANR	3159502	Statement	)	1241:41:32792:32792	3159417	21	True				
ANR	3159503	Statement	undef	1242:1:32795:32799	3159417	22	True				
ANR	3159504	Statement	LEAD_CASE	1242:7:32801:32809	3159417	23	True				
ANR	3159505	Label	case BT_AMP :	1243:4:32815:32826	3159417	24	True				
ANR	3159506	Identifier	BT_AMP		3159417	0					
ANR	3159507	IfStatement	if ( ptr == start )		3159417	25					
ANR	3159508	Condition	ptr == start	1244:10:32838:32849	3159417	0	True				
ANR	3159509	EqualityExpression	ptr == start		3159417	0		==			
ANR	3159510	Identifier	ptr		3159417	0					
ANR	3159511	Identifier	start		3159417	1					
ANR	3159512	ReturnStatement	"return PREFIX ( scanRef ) ( enc , ptr + MINBPC ( enc ) , end , nextTokPtr ) ;"	1245:8:32860:32923	3159417	1	True				
ANR	3159513	CallExpression	"PREFIX ( scanRef ) ( enc , ptr + MINBPC ( enc ) , end , nextTokPtr )"		3159417	0					
ANR	3159514	Callee	PREFIX ( scanRef )		3159417	0					
ANR	3159515	CallExpression	PREFIX ( scanRef )		3159417	0					
ANR	3159516	Callee	PREFIX		3159417	0					
ANR	3159517	Identifier	PREFIX		3159417	0					
ANR	3159518	ArgumentList	scanRef		3159417	1					
ANR	3159519	Argument	scanRef		3159417	0					
ANR	3159520	Identifier	scanRef		3159417	0					
ANR	3159521	ArgumentList	enc		3159417	1					
ANR	3159522	Argument	enc		3159417	0					
ANR	3159523	Identifier	enc		3159417	0					
ANR	3159524	Argument	ptr + MINBPC ( enc )		3159417	1					
ANR	3159525	AdditiveExpression	ptr + MINBPC ( enc )		3159417	0		+			
ANR	3159526	Identifier	ptr		3159417	0					
ANR	3159527	CallExpression	MINBPC ( enc )		3159417	1					
ANR	3159528	Callee	MINBPC		3159417	0					
ANR	3159529	Identifier	MINBPC		3159417	0					
ANR	3159530	ArgumentList	enc		3159417	1					
ANR	3159531	Argument	enc		3159417	0					
ANR	3159532	Identifier	enc		3159417	0					
ANR	3159533	Argument	end		3159417	2					
ANR	3159534	Identifier	end		3159417	0					
ANR	3159535	Argument	nextTokPtr		3159417	3					
ANR	3159536	Identifier	nextTokPtr		3159417	0					
ANR	3159537	ExpressionStatement	* nextTokPtr = ptr	1246:6:32931:32948	3159417	26	True				
ANR	3159538	AssignmentExpression	* nextTokPtr = ptr		3159417	0		=			
ANR	3159539	UnaryOperationExpression	* nextTokPtr		3159417	0					
ANR	3159540	UnaryOperator	*		3159417	0					
ANR	3159541	Identifier	nextTokPtr		3159417	1					
ANR	3159542	Identifier	ptr		3159417	1					
ANR	3159543	ReturnStatement	return XML_TOK_DATA_CHARS ;	1247:6:32956:32981	3159417	27	True				
ANR	3159544	Identifier	XML_TOK_DATA_CHARS		3159417	0					
ANR	3159545	Label	case BT_LT :	1248:4:32987:32997	3159417	28	True				
ANR	3159546	Identifier	BT_LT		3159417	0					
ANR	3159547	ExpressionStatement	* nextTokPtr = ptr	1250:6:33054:33071	3159417	29	True				
ANR	3159548	AssignmentExpression	* nextTokPtr = ptr		3159417	0		=			
ANR	3159549	UnaryOperationExpression	* nextTokPtr		3159417	0					
ANR	3159550	UnaryOperator	*		3159417	0					
ANR	3159551	Identifier	nextTokPtr		3159417	1					
ANR	3159552	Identifier	ptr		3159417	1					
ANR	3159553	ReturnStatement	return XML_TOK_INVALID ;	1251:6:33079:33101	3159417	30	True				
ANR	3159554	Identifier	XML_TOK_INVALID		3159417	0					
ANR	3159555	Label	case BT_LF :	1252:4:33107:33117	3159417	31	True				
ANR	3159556	Identifier	BT_LF		3159417	0					
ANR	3159557	IfStatement	if ( ptr == start )		3159417	32					
ANR	3159558	Condition	ptr == start	1253:10:33129:33140	3159417	0	True				
ANR	3159559	EqualityExpression	ptr == start		3159417	0		==			
ANR	3159560	Identifier	ptr		3159417	0					
ANR	3159561	Identifier	start		3159417	1					
ANR	3159562	CompoundStatement		30:24:955:955	3159417	1					
ANR	3159563	ExpressionStatement	* nextTokPtr = ptr + MINBPC ( enc )	1254:8:33153:33184	3159417	0	True				
ANR	3159564	AssignmentExpression	* nextTokPtr = ptr + MINBPC ( enc )		3159417	0		=			
ANR	3159565	UnaryOperationExpression	* nextTokPtr		3159417	0					
ANR	3159566	UnaryOperator	*		3159417	0					
ANR	3159567	Identifier	nextTokPtr		3159417	1					
ANR	3159568	AdditiveExpression	ptr + MINBPC ( enc )		3159417	1		+			
ANR	3159569	Identifier	ptr		3159417	0					
ANR	3159570	CallExpression	MINBPC ( enc )		3159417	1					
ANR	3159571	Callee	MINBPC		3159417	0					
ANR	3159572	Identifier	MINBPC		3159417	0					
ANR	3159573	ArgumentList	enc		3159417	1					
ANR	3159574	Argument	enc		3159417	0					
ANR	3159575	Identifier	enc		3159417	0					
ANR	3159576	ReturnStatement	return XML_TOK_DATA_NEWLINE ;	1255:8:33194:33221	3159417	1	True				
ANR	3159577	Identifier	XML_TOK_DATA_NEWLINE		3159417	0					
ANR	3159578	ExpressionStatement	* nextTokPtr = ptr	1257:6:33237:33254	3159417	33	True				
ANR	3159579	AssignmentExpression	* nextTokPtr = ptr		3159417	0		=			
ANR	3159580	UnaryOperationExpression	* nextTokPtr		3159417	0					
ANR	3159581	UnaryOperator	*		3159417	0					
ANR	3159582	Identifier	nextTokPtr		3159417	1					
ANR	3159583	Identifier	ptr		3159417	1					
ANR	3159584	ReturnStatement	return XML_TOK_DATA_CHARS ;	1258:6:33262:33287	3159417	34	True				
ANR	3159585	Identifier	XML_TOK_DATA_CHARS		3159417	0					
ANR	3159586	Label	case BT_CR :	1259:4:33293:33303	3159417	35	True				
ANR	3159587	Identifier	BT_CR		3159417	0					
ANR	3159588	IfStatement	if ( ptr == start )		3159417	36					
ANR	3159589	Condition	ptr == start	1260:10:33315:33326	3159417	0	True				
ANR	3159590	EqualityExpression	ptr == start		3159417	0		==			
ANR	3159591	Identifier	ptr		3159417	0					
ANR	3159592	Identifier	start		3159417	1					
ANR	3159593	CompoundStatement		37:24:1141:1141	3159417	1					
ANR	3159594	ExpressionStatement	ptr += MINBPC ( enc )	1261:8:33339:33357	3159417	0	True				
ANR	3159595	AssignmentExpression	ptr += MINBPC ( enc )		3159417	0		+=			
ANR	3159596	Identifier	ptr		3159417	0					
ANR	3159597	CallExpression	MINBPC ( enc )		3159417	1					
ANR	3159598	Callee	MINBPC		3159417	0					
ANR	3159599	Identifier	MINBPC		3159417	0					
ANR	3159600	ArgumentList	enc		3159417	1					
ANR	3159601	Argument	enc		3159417	0					
ANR	3159602	Identifier	enc		3159417	0					
ANR	3159603	IfStatement	"if ( ! HAS_CHAR ( enc , ptr , end ) )"		3159417	1					
ANR	3159604	Condition	"! HAS_CHAR ( enc , ptr , end )"	1262:12:33371:33395	3159417	0	True				
ANR	3159605	UnaryOperationExpression	"! HAS_CHAR ( enc , ptr , end )"		3159417	0					
ANR	3159606	UnaryOperator	!		3159417	0					
ANR	3159607	CallExpression	"HAS_CHAR ( enc , ptr , end )"		3159417	1					
ANR	3159608	Callee	HAS_CHAR		3159417	0					
ANR	3159609	Identifier	HAS_CHAR		3159417	0					
ANR	3159610	ArgumentList	enc		3159417	1					
ANR	3159611	Argument	enc		3159417	0					
ANR	3159612	Identifier	enc		3159417	0					
ANR	3159613	Argument	ptr		3159417	1					
ANR	3159614	Identifier	ptr		3159417	0					
ANR	3159615	Argument	end		3159417	2					
ANR	3159616	Identifier	end		3159417	0					
ANR	3159617	ReturnStatement	return XML_TOK_TRAILING_CR ;	1263:10:33408:33434	3159417	1	True				
ANR	3159618	Identifier	XML_TOK_TRAILING_CR		3159417	0					
ANR	3159619	IfStatement	"if ( BYTE_TYPE ( enc , ptr ) == BT_LF )"		3159417	2					
ANR	3159620	Condition	"BYTE_TYPE ( enc , ptr ) == BT_LF"	1264:12:33448:33475	3159417	0	True				
ANR	3159621	EqualityExpression	"BYTE_TYPE ( enc , ptr ) == BT_LF"		3159417	0		==			
ANR	3159622	CallExpression	"BYTE_TYPE ( enc , ptr )"		3159417	0					
ANR	3159623	Callee	BYTE_TYPE		3159417	0					
ANR	3159624	Identifier	BYTE_TYPE		3159417	0					
ANR	3159625	ArgumentList	enc		3159417	1					
ANR	3159626	Argument	enc		3159417	0					
ANR	3159627	Identifier	enc		3159417	0					
ANR	3159628	Argument	ptr		3159417	1					
ANR	3159629	Identifier	ptr		3159417	0					
ANR	3159630	Identifier	BT_LF		3159417	1					
ANR	3159631	ExpressionStatement	ptr += MINBPC ( enc )	1265:10:33488:33506	3159417	1	True				
ANR	3159632	AssignmentExpression	ptr += MINBPC ( enc )		3159417	0		+=			
ANR	3159633	Identifier	ptr		3159417	0					
ANR	3159634	CallExpression	MINBPC ( enc )		3159417	1					
ANR	3159635	Callee	MINBPC		3159417	0					
ANR	3159636	Identifier	MINBPC		3159417	0					
ANR	3159637	ArgumentList	enc		3159417	1					
ANR	3159638	Argument	enc		3159417	0					
ANR	3159639	Identifier	enc		3159417	0					
ANR	3159640	ExpressionStatement	* nextTokPtr = ptr	1266:8:33516:33533	3159417	3	True				
ANR	3159641	AssignmentExpression	* nextTokPtr = ptr		3159417	0		=			
ANR	3159642	UnaryOperationExpression	* nextTokPtr		3159417	0					
ANR	3159643	UnaryOperator	*		3159417	0					
ANR	3159644	Identifier	nextTokPtr		3159417	1					
ANR	3159645	Identifier	ptr		3159417	1					
ANR	3159646	ReturnStatement	return XML_TOK_DATA_NEWLINE ;	1267:8:33543:33570	3159417	4	True				
ANR	3159647	Identifier	XML_TOK_DATA_NEWLINE		3159417	0					
ANR	3159648	ExpressionStatement	* nextTokPtr = ptr	1269:6:33586:33603	3159417	37	True				
ANR	3159649	AssignmentExpression	* nextTokPtr = ptr		3159417	0		=			
ANR	3159650	UnaryOperationExpression	* nextTokPtr		3159417	0					
ANR	3159651	UnaryOperator	*		3159417	0					
ANR	3159652	Identifier	nextTokPtr		3159417	1					
ANR	3159653	Identifier	ptr		3159417	1					
ANR	3159654	ReturnStatement	return XML_TOK_DATA_CHARS ;	1270:6:33611:33636	3159417	38	True				
ANR	3159655	Identifier	XML_TOK_DATA_CHARS		3159417	0					
ANR	3159656	Label	case BT_S :	1271:4:33642:33651	3159417	39	True				
ANR	3159657	Identifier	BT_S		3159417	0					
ANR	3159658	IfStatement	if ( ptr == start )		3159417	40					
ANR	3159659	Condition	ptr == start	1272:10:33663:33674	3159417	0	True				
ANR	3159660	EqualityExpression	ptr == start		3159417	0		==			
ANR	3159661	Identifier	ptr		3159417	0					
ANR	3159662	Identifier	start		3159417	1					
ANR	3159663	CompoundStatement		49:24:1489:1489	3159417	1					
ANR	3159664	ExpressionStatement	* nextTokPtr = ptr + MINBPC ( enc )	1273:8:33687:33718	3159417	0	True				
ANR	3159665	AssignmentExpression	* nextTokPtr = ptr + MINBPC ( enc )		3159417	0		=			
ANR	3159666	UnaryOperationExpression	* nextTokPtr		3159417	0					
ANR	3159667	UnaryOperator	*		3159417	0					
ANR	3159668	Identifier	nextTokPtr		3159417	1					
ANR	3159669	AdditiveExpression	ptr + MINBPC ( enc )		3159417	1		+			
ANR	3159670	Identifier	ptr		3159417	0					
ANR	3159671	CallExpression	MINBPC ( enc )		3159417	1					
ANR	3159672	Callee	MINBPC		3159417	0					
ANR	3159673	Identifier	MINBPC		3159417	0					
ANR	3159674	ArgumentList	enc		3159417	1					
ANR	3159675	Argument	enc		3159417	0					
ANR	3159676	Identifier	enc		3159417	0					
ANR	3159677	ReturnStatement	return XML_TOK_ATTRIBUTE_VALUE_S ;	1274:8:33728:33760	3159417	1	True				
ANR	3159678	Identifier	XML_TOK_ATTRIBUTE_VALUE_S		3159417	0					
ANR	3159679	ExpressionStatement	* nextTokPtr = ptr	1276:6:33776:33793	3159417	41	True				
ANR	3159680	AssignmentExpression	* nextTokPtr = ptr		3159417	0		=			
ANR	3159681	UnaryOperationExpression	* nextTokPtr		3159417	0					
ANR	3159682	UnaryOperator	*		3159417	0					
ANR	3159683	Identifier	nextTokPtr		3159417	1					
ANR	3159684	Identifier	ptr		3159417	1					
ANR	3159685	ReturnStatement	return XML_TOK_DATA_CHARS ;	1277:6:33801:33826	3159417	42	True				
ANR	3159686	Identifier	XML_TOK_DATA_CHARS		3159417	0					
ANR	3159687	Label	default :	1278:4:33832:33839	3159417	43	True				
ANR	3159688	Identifier	default		3159417	0					
ANR	3159689	ExpressionStatement	ptr += MINBPC ( enc )	1279:6:33847:33865	3159417	44	True				
ANR	3159690	AssignmentExpression	ptr += MINBPC ( enc )		3159417	0		+=			
ANR	3159691	Identifier	ptr		3159417	0					
ANR	3159692	CallExpression	MINBPC ( enc )		3159417	1					
ANR	3159693	Callee	MINBPC		3159417	0					
ANR	3159694	Identifier	MINBPC		3159417	0					
ANR	3159695	ArgumentList	enc		3159417	1					
ANR	3159696	Argument	enc		3159417	0					
ANR	3159697	Identifier	enc		3159417	0					
ANR	3159698	BreakStatement	break ;	1280:6:33873:33878	3159417	45	True				
ANR	3159699	ExpressionStatement	* nextTokPtr = ptr	1283:2:33892:33909	3159417	4	True				
ANR	3159700	AssignmentExpression	* nextTokPtr = ptr		3159417	0		=			
ANR	3159701	UnaryOperationExpression	* nextTokPtr		3159417	0					
ANR	3159702	UnaryOperator	*		3159417	0					
ANR	3159703	Identifier	nextTokPtr		3159417	1					
ANR	3159704	Identifier	ptr		3159417	1					
ANR	3159705	ReturnStatement	return XML_TOK_DATA_CHARS ;	1284:2:33913:33938	3159417	5	True				
ANR	3159706	Identifier	XML_TOK_DATA_CHARS		3159417	0					
ANR	3159707	ReturnType	static int PTRCALL PREFIX		3159417	1					
ANR	3159708	Identifier	( attributeValueTok )		3159417	2					
ANR	3159709	Identifier	attributeValueTok		3159417	3					
ANR	3159710	ParameterList	"const ENCODING * enc , const char * ptr , const char * end , const char * * nextTokPtr"		3159417	4					
ANR	3159711	Parameter	const ENCODING * enc	1222:26:32081:32099	3159417	0	True				
ANR	3159712	ParameterType	const ENCODING *		3159417	0					
ANR	3159713	Identifier	enc		3159417	1					
ANR	3159714	Parameter	const char * ptr	1222:47:32102:32116	3159417	1	True				
ANR	3159715	ParameterType	const char *		3159417	0					
ANR	3159716	Identifier	ptr		3159417	1					
ANR	3159717	Parameter	const char * end	1223:26:32145:32159	3159417	2	True				
ANR	3159718	ParameterType	const char *		3159417	0					
ANR	3159719	Identifier	end		3159417	1					
ANR	3159720	Parameter	const char * * nextTokPtr	1223:43:32162:32184	3159417	3	True				
ANR	3159721	ParameterType	const char * *		3159417	0					
ANR	3159722	Identifier	nextTokPtr		3159417	1					
ANR	3159723	CFGEntryNode	ENTRY		3159417		True				
ANR	3159724	CFGExitNode	EXIT		3159417		True				
ANR	3159725	Symbol	XML_TOK_DATA_CHARS		3159417						
ANR	3159726	Symbol	XML_TOK_INVALID		3159417						
ANR	3159727	Symbol	nextTokPtr		3159417						
ANR	3159728	Symbol	XML_TOK_PARTIAL		3159417						
ANR	3159729	Symbol	start		3159417						
ANR	3159730	Symbol	BYTE_TYPE		3159417						
ANR	3159731	Symbol	* nextTokPtr		3159417						
ANR	3159732	Symbol	MINBPC		3159417						
ANR	3159733	Symbol	n		3159417						
ANR	3159734	Symbol	BT_LF		3159417						
ANR	3159735	Symbol	ptr		3159417						
ANR	3159736	Symbol	scanRef		3159417						
ANR	3159737	Symbol	XML_TOK_DATA_NEWLINE		3159417						
ANR	3159738	Symbol	PREFIX		3159417						
ANR	3159739	Symbol	XML_TOK_NONE		3159417						
ANR	3159740	Symbol	end		3159417						
ANR	3159741	Symbol	enc		3159417						
ANR	3159742	Symbol	XML_TOK_TRAILING_CR		3159417						
ANR	3159743	Symbol	XML_TOK_ATTRIBUTE_VALUE_S		3159417						
ANR	3159744	Symbol	HAS_CHAR		3159417						
ANR	3159745	Function	entityValueTok	1287:0:33943:35828							
ANR	3159746	FunctionDef	"entityValueTok (const ENCODING * enc , const char * ptr , const char * end , const char * * nextTokPtr)"		3159745	0					
ANR	3159747	CompoundStatement		1290:0:34088:35828	3159745	0					
ANR	3159748	IdentifierDeclStatement	const char * start ;	1291:2:34092:34109	3159745	0	True				
ANR	3159749	IdentifierDecl	* start		3159745	0					
ANR	3159750	IdentifierDeclType	const char *		3159745	0					
ANR	3159751	Identifier	start		3159745	1					
ANR	3159752	IfStatement	if ( ptr >= end )		3159745	1					
ANR	3159753	Condition	ptr >= end	1292:6:34117:34126	3159745	0	True				
ANR	3159754	RelationalExpression	ptr >= end		3159745	0		>=			
ANR	3159755	Identifier	ptr		3159745	0					
ANR	3159756	Identifier	end		3159745	1					
ANR	3159757	ReturnStatement	return XML_TOK_NONE ;	1293:4:34133:34152	3159745	1	True				
ANR	3159758	Identifier	XML_TOK_NONE		3159745	0					
ANR	3159759	ElseStatement	else		3159745	0					
ANR	3159760	IfStatement	"if ( ! HAS_CHAR ( enc , ptr , end ) )"		3159745	0					
ANR	3159761	Condition	"! HAS_CHAR ( enc , ptr , end )"	1294:11:34165:34189	3159745	0	True				
ANR	3159762	UnaryOperationExpression	"! HAS_CHAR ( enc , ptr , end )"		3159745	0					
ANR	3159763	UnaryOperator	!		3159745	0					
ANR	3159764	CallExpression	"HAS_CHAR ( enc , ptr , end )"		3159745	1					
ANR	3159765	Callee	HAS_CHAR		3159745	0					
ANR	3159766	Identifier	HAS_CHAR		3159745	0					
ANR	3159767	ArgumentList	enc		3159745	1					
ANR	3159768	Argument	enc		3159745	0					
ANR	3159769	Identifier	enc		3159745	0					
ANR	3159770	Argument	ptr		3159745	1					
ANR	3159771	Identifier	ptr		3159745	0					
ANR	3159772	Argument	end		3159745	2					
ANR	3159773	Identifier	end		3159745	0					
ANR	3159774	CompoundStatement		5:38:103:103	3159745	1					
ANR	3159775	ReturnStatement	return XML_TOK_PARTIAL ;	1300:4:34454:34476	3159745	0	True				
ANR	3159776	Identifier	XML_TOK_PARTIAL		3159745	0					
ANR	3159777	ExpressionStatement	start = ptr	1302:2:34505:34516	3159745	2	True				
ANR	3159778	AssignmentExpression	start = ptr		3159745	0		=			
ANR	3159779	Identifier	start		3159745	0					
ANR	3159780	Identifier	ptr		3159745	1					
ANR	3159781	WhileStatement	"while ( HAS_CHAR ( enc , ptr , end ) )"		3159745	3					
ANR	3159782	Condition	"HAS_CHAR ( enc , ptr , end )"	1303:9:34527:34549	3159745	0	True				
ANR	3159783	CallExpression	"HAS_CHAR ( enc , ptr , end )"		3159745	0					
ANR	3159784	Callee	HAS_CHAR		3159745	0					
ANR	3159785	Identifier	HAS_CHAR		3159745	0					
ANR	3159786	ArgumentList	enc		3159745	1					
ANR	3159787	Argument	enc		3159745	0					
ANR	3159788	Identifier	enc		3159745	0					
ANR	3159789	Argument	ptr		3159745	1					
ANR	3159790	Identifier	ptr		3159745	0					
ANR	3159791	Argument	end		3159745	2					
ANR	3159792	Identifier	end		3159745	0					
ANR	3159793	CompoundStatement		14:34:463:463	3159745	1					
ANR	3159794	SwitchStatement	"switch ( BYTE_TYPE ( enc , ptr ) )"		3159745	0					
ANR	3159795	Condition	"BYTE_TYPE ( enc , ptr )"	1304:12:34566:34584	3159745	0	True				
ANR	3159796	CallExpression	"BYTE_TYPE ( enc , ptr )"		3159745	0					
ANR	3159797	Callee	BYTE_TYPE		3159745	0					
ANR	3159798	Identifier	BYTE_TYPE		3159745	0					
ANR	3159799	ArgumentList	enc		3159745	1					
ANR	3159800	Argument	enc		3159745	0					
ANR	3159801	Identifier	enc		3159745	0					
ANR	3159802	Argument	ptr		3159745	1					
ANR	3159803	Identifier	ptr		3159745	0					
ANR	3159804	CompoundStatement		15:33:498:498	3159745	1					
ANR	3159805	Statement	define	1305:1:34590:34595	3159745	0	True				
ANR	3159806	Statement	LEAD_CASE	1305:8:34597:34605	3159745	1	True				
ANR	3159807	Statement	(	1305:17:34606:34606	3159745	2	True				
ANR	3159808	Statement	n	1305:18:34607:34607	3159745	3	True				
ANR	3159809	Statement	)	1305:19:34608:34608	3159745	4	True				
ANR	3159810	Statement	case	1306:4:34616:34619	3159745	5	True				
ANR	3159811	Statement	BT_LEAD	1306:9:34621:34627	3159745	6	True				
ANR	3159812	Label	n :	1306:20:34632:34633	3159745	7	True				
ANR	3159813	Identifier	n		3159745	0					
ANR	3159814	ExpressionStatement	ptr += n	1306:23:34635:34643	3159745	8	True				
ANR	3159815	AssignmentExpression	ptr += n		3159745	0		+=			
ANR	3159816	Identifier	ptr		3159745	0					
ANR	3159817	Identifier	n		3159745	1					
ANR	3159818	BreakStatement	break ;	1306:33:34645:34650	3159745	9	True				
ANR	3159819	Statement	LEAD_CASE	1307:4:34656:34664	3159745	10	True				
ANR	3159820	Statement	(	1307:13:34665:34665	3159745	11	True				
ANR	3159821	Statement	2	1307:14:34666:34666	3159745	12	True				
ANR	3159822	Statement	)	1307:15:34667:34667	3159745	13	True				
ANR	3159823	Statement	LEAD_CASE	1307:17:34669:34677	3159745	14	True				
ANR	3159824	Statement	(	1307:26:34678:34678	3159745	15	True				
ANR	3159825	Statement	3	1307:27:34679:34679	3159745	16	True				
ANR	3159826	Statement	)	1307:28:34680:34680	3159745	17	True				
ANR	3159827	Statement	LEAD_CASE	1307:30:34682:34690	3159745	18	True				
ANR	3159828	Statement	(	1307:39:34691:34691	3159745	19	True				
ANR	3159829	Statement	4	1307:40:34692:34692	3159745	20	True				
ANR	3159830	Statement	)	1307:41:34693:34693	3159745	21	True				
ANR	3159831	Statement	undef	1308:1:34696:34700	3159745	22	True				
ANR	3159832	Statement	LEAD_CASE	1308:7:34702:34710	3159745	23	True				
ANR	3159833	Label	case BT_AMP :	1309:4:34716:34727	3159745	24	True				
ANR	3159834	Identifier	BT_AMP		3159745	0					
ANR	3159835	IfStatement	if ( ptr == start )		3159745	25					
ANR	3159836	Condition	ptr == start	1310:10:34739:34750	3159745	0	True				
ANR	3159837	EqualityExpression	ptr == start		3159745	0		==			
ANR	3159838	Identifier	ptr		3159745	0					
ANR	3159839	Identifier	start		3159745	1					
ANR	3159840	ReturnStatement	"return PREFIX ( scanRef ) ( enc , ptr + MINBPC ( enc ) , end , nextTokPtr ) ;"	1311:8:34761:34824	3159745	1	True				
ANR	3159841	CallExpression	"PREFIX ( scanRef ) ( enc , ptr + MINBPC ( enc ) , end , nextTokPtr )"		3159745	0					
ANR	3159842	Callee	PREFIX ( scanRef )		3159745	0					
ANR	3159843	CallExpression	PREFIX ( scanRef )		3159745	0					
ANR	3159844	Callee	PREFIX		3159745	0					
ANR	3159845	Identifier	PREFIX		3159745	0					
ANR	3159846	ArgumentList	scanRef		3159745	1					
ANR	3159847	Argument	scanRef		3159745	0					
ANR	3159848	Identifier	scanRef		3159745	0					
ANR	3159849	ArgumentList	enc		3159745	1					
ANR	3159850	Argument	enc		3159745	0					
ANR	3159851	Identifier	enc		3159745	0					
ANR	3159852	Argument	ptr + MINBPC ( enc )		3159745	1					
ANR	3159853	AdditiveExpression	ptr + MINBPC ( enc )		3159745	0		+			
ANR	3159854	Identifier	ptr		3159745	0					
ANR	3159855	CallExpression	MINBPC ( enc )		3159745	1					
ANR	3159856	Callee	MINBPC		3159745	0					
ANR	3159857	Identifier	MINBPC		3159745	0					
ANR	3159858	ArgumentList	enc		3159745	1					
ANR	3159859	Argument	enc		3159745	0					
ANR	3159860	Identifier	enc		3159745	0					
ANR	3159861	Argument	end		3159745	2					
ANR	3159862	Identifier	end		3159745	0					
ANR	3159863	Argument	nextTokPtr		3159745	3					
ANR	3159864	Identifier	nextTokPtr		3159745	0					
ANR	3159865	ExpressionStatement	* nextTokPtr = ptr	1312:6:34832:34849	3159745	26	True				
ANR	3159866	AssignmentExpression	* nextTokPtr = ptr		3159745	0		=			
ANR	3159867	UnaryOperationExpression	* nextTokPtr		3159745	0					
ANR	3159868	UnaryOperator	*		3159745	0					
ANR	3159869	Identifier	nextTokPtr		3159745	1					
ANR	3159870	Identifier	ptr		3159745	1					
ANR	3159871	ReturnStatement	return XML_TOK_DATA_CHARS ;	1313:6:34857:34882	3159745	27	True				
ANR	3159872	Identifier	XML_TOK_DATA_CHARS		3159745	0					
ANR	3159873	Label	case BT_PERCNT :	1314:4:34888:34902	3159745	28	True				
ANR	3159874	Identifier	BT_PERCNT		3159745	0					
ANR	3159875	IfStatement	if ( ptr == start )		3159745	29					
ANR	3159876	Condition	ptr == start	1315:10:34914:34925	3159745	0	True				
ANR	3159877	EqualityExpression	ptr == start		3159745	0		==			
ANR	3159878	Identifier	ptr		3159745	0					
ANR	3159879	Identifier	start		3159745	1					
ANR	3159880	CompoundStatement		27:8:849:959	3159745	1					
ANR	3159881	IdentifierDeclStatement	"int tok = PREFIX ( scanPercent ) ( enc , ptr + MINBPC ( enc ) , end , nextTokPtr ) ;"	1316:8:34938:35048	3159745	0	True				
ANR	3159882	IdentifierDecl	"tok = PREFIX ( scanPercent ) ( enc , ptr + MINBPC ( enc ) , end , nextTokPtr )"		3159745	0					
ANR	3159883	IdentifierDeclType	int		3159745	0					
ANR	3159884	Identifier	tok		3159745	1					
ANR	3159885	AssignmentExpression	"tok = PREFIX ( scanPercent ) ( enc , ptr + MINBPC ( enc ) , end , nextTokPtr )"		3159745	2		=			
ANR	3159886	Identifier	tok		3159745	0					
ANR	3159887	CallExpression	"PREFIX ( scanPercent ) ( enc , ptr + MINBPC ( enc ) , end , nextTokPtr )"		3159745	1					
ANR	3159888	Callee	PREFIX ( scanPercent )		3159745	0					
ANR	3159889	CallExpression	PREFIX ( scanPercent )		3159745	0					
ANR	3159890	Callee	PREFIX		3159745	0					
ANR	3159891	Identifier	PREFIX		3159745	0					
ANR	3159892	ArgumentList	scanPercent		3159745	1					
ANR	3159893	Argument	scanPercent		3159745	0					
ANR	3159894	Identifier	scanPercent		3159745	0					
ANR	3159895	ArgumentList	enc		3159745	1					
ANR	3159896	Argument	enc		3159745	0					
ANR	3159897	Identifier	enc		3159745	0					
ANR	3159898	Argument	ptr + MINBPC ( enc )		3159745	1					
ANR	3159899	AdditiveExpression	ptr + MINBPC ( enc )		3159745	0		+			
ANR	3159900	Identifier	ptr		3159745	0					
ANR	3159901	CallExpression	MINBPC ( enc )		3159745	1					
ANR	3159902	Callee	MINBPC		3159745	0					
ANR	3159903	Identifier	MINBPC		3159745	0					
ANR	3159904	ArgumentList	enc		3159745	1					
ANR	3159905	Argument	enc		3159745	0					
ANR	3159906	Identifier	enc		3159745	0					
ANR	3159907	Argument	end		3159745	2					
ANR	3159908	Identifier	end		3159745	0					
ANR	3159909	Argument	nextTokPtr		3159745	3					
ANR	3159910	Identifier	nextTokPtr		3159745	0					
ANR	3159911	ReturnStatement	return ( tok == XML_TOK_PERCENT ) ? XML_TOK_INVALID : tok ;	1318:8:35058:35113	3159745	1	True				
ANR	3159912	ConditionalExpression	( tok == XML_TOK_PERCENT ) ? XML_TOK_INVALID : tok		3159745	0					
ANR	3159913	Condition	tok == XML_TOK_PERCENT		3159745	0					
ANR	3159914	EqualityExpression	tok == XML_TOK_PERCENT		3159745	0		==			
ANR	3159915	Identifier	tok		3159745	0					
ANR	3159916	Identifier	XML_TOK_PERCENT		3159745	1					
ANR	3159917	Identifier	XML_TOK_INVALID		3159745	1					
ANR	3159918	Identifier	tok		3159745	2					
ANR	3159919	ExpressionStatement	* nextTokPtr = ptr	1320:6:35129:35146	3159745	30	True				
ANR	3159920	AssignmentExpression	* nextTokPtr = ptr		3159745	0		=			
ANR	3159921	UnaryOperationExpression	* nextTokPtr		3159745	0					
ANR	3159922	UnaryOperator	*		3159745	0					
ANR	3159923	Identifier	nextTokPtr		3159745	1					
ANR	3159924	Identifier	ptr		3159745	1					
ANR	3159925	ReturnStatement	return XML_TOK_DATA_CHARS ;	1321:6:35154:35179	3159745	31	True				
ANR	3159926	Identifier	XML_TOK_DATA_CHARS		3159745	0					
ANR	3159927	Label	case BT_LF :	1322:4:35185:35195	3159745	32	True				
ANR	3159928	Identifier	BT_LF		3159745	0					
ANR	3159929	IfStatement	if ( ptr == start )		3159745	33					
ANR	3159930	Condition	ptr == start	1323:10:35207:35218	3159745	0	True				
ANR	3159931	EqualityExpression	ptr == start		3159745	0		==			
ANR	3159932	Identifier	ptr		3159745	0					
ANR	3159933	Identifier	start		3159745	1					
ANR	3159934	CompoundStatement		34:24:1132:1132	3159745	1					
ANR	3159935	ExpressionStatement	* nextTokPtr = ptr + MINBPC ( enc )	1324:8:35231:35262	3159745	0	True				
ANR	3159936	AssignmentExpression	* nextTokPtr = ptr + MINBPC ( enc )		3159745	0		=			
ANR	3159937	UnaryOperationExpression	* nextTokPtr		3159745	0					
ANR	3159938	UnaryOperator	*		3159745	0					
ANR	3159939	Identifier	nextTokPtr		3159745	1					
ANR	3159940	AdditiveExpression	ptr + MINBPC ( enc )		3159745	1		+			
ANR	3159941	Identifier	ptr		3159745	0					
ANR	3159942	CallExpression	MINBPC ( enc )		3159745	1					
ANR	3159943	Callee	MINBPC		3159745	0					
ANR	3159944	Identifier	MINBPC		3159745	0					
ANR	3159945	ArgumentList	enc		3159745	1					
ANR	3159946	Argument	enc		3159745	0					
ANR	3159947	Identifier	enc		3159745	0					
ANR	3159948	ReturnStatement	return XML_TOK_DATA_NEWLINE ;	1325:8:35272:35299	3159745	1	True				
ANR	3159949	Identifier	XML_TOK_DATA_NEWLINE		3159745	0					
ANR	3159950	ExpressionStatement	* nextTokPtr = ptr	1327:6:35315:35332	3159745	34	True				
ANR	3159951	AssignmentExpression	* nextTokPtr = ptr		3159745	0		=			
ANR	3159952	UnaryOperationExpression	* nextTokPtr		3159745	0					
ANR	3159953	UnaryOperator	*		3159745	0					
ANR	3159954	Identifier	nextTokPtr		3159745	1					
ANR	3159955	Identifier	ptr		3159745	1					
ANR	3159956	ReturnStatement	return XML_TOK_DATA_CHARS ;	1328:6:35340:35365	3159745	35	True				
ANR	3159957	Identifier	XML_TOK_DATA_CHARS		3159745	0					
ANR	3159958	Label	case BT_CR :	1329:4:35371:35381	3159745	36	True				
ANR	3159959	Identifier	BT_CR		3159745	0					
ANR	3159960	IfStatement	if ( ptr == start )		3159745	37					
ANR	3159961	Condition	ptr == start	1330:10:35393:35404	3159745	0	True				
ANR	3159962	EqualityExpression	ptr == start		3159745	0		==			
ANR	3159963	Identifier	ptr		3159745	0					
ANR	3159964	Identifier	start		3159745	1					
ANR	3159965	CompoundStatement		41:24:1318:1318	3159745	1					
ANR	3159966	ExpressionStatement	ptr += MINBPC ( enc )	1331:8:35417:35435	3159745	0	True				
ANR	3159967	AssignmentExpression	ptr += MINBPC ( enc )		3159745	0		+=			
ANR	3159968	Identifier	ptr		3159745	0					
ANR	3159969	CallExpression	MINBPC ( enc )		3159745	1					
ANR	3159970	Callee	MINBPC		3159745	0					
ANR	3159971	Identifier	MINBPC		3159745	0					
ANR	3159972	ArgumentList	enc		3159745	1					
ANR	3159973	Argument	enc		3159745	0					
ANR	3159974	Identifier	enc		3159745	0					
ANR	3159975	IfStatement	"if ( ! HAS_CHAR ( enc , ptr , end ) )"		3159745	1					
ANR	3159976	Condition	"! HAS_CHAR ( enc , ptr , end )"	1332:12:35449:35473	3159745	0	True				
ANR	3159977	UnaryOperationExpression	"! HAS_CHAR ( enc , ptr , end )"		3159745	0					
ANR	3159978	UnaryOperator	!		3159745	0					
ANR	3159979	CallExpression	"HAS_CHAR ( enc , ptr , end )"		3159745	1					
ANR	3159980	Callee	HAS_CHAR		3159745	0					
ANR	3159981	Identifier	HAS_CHAR		3159745	0					
ANR	3159982	ArgumentList	enc		3159745	1					
ANR	3159983	Argument	enc		3159745	0					
ANR	3159984	Identifier	enc		3159745	0					
ANR	3159985	Argument	ptr		3159745	1					
ANR	3159986	Identifier	ptr		3159745	0					
ANR	3159987	Argument	end		3159745	2					
ANR	3159988	Identifier	end		3159745	0					
ANR	3159989	ReturnStatement	return XML_TOK_TRAILING_CR ;	1333:10:35486:35512	3159745	1	True				
ANR	3159990	Identifier	XML_TOK_TRAILING_CR		3159745	0					
ANR	3159991	IfStatement	"if ( BYTE_TYPE ( enc , ptr ) == BT_LF )"		3159745	2					
ANR	3159992	Condition	"BYTE_TYPE ( enc , ptr ) == BT_LF"	1334:12:35526:35553	3159745	0	True				
ANR	3159993	EqualityExpression	"BYTE_TYPE ( enc , ptr ) == BT_LF"		3159745	0		==			
ANR	3159994	CallExpression	"BYTE_TYPE ( enc , ptr )"		3159745	0					
ANR	3159995	Callee	BYTE_TYPE		3159745	0					
ANR	3159996	Identifier	BYTE_TYPE		3159745	0					
ANR	3159997	ArgumentList	enc		3159745	1					
ANR	3159998	Argument	enc		3159745	0					
ANR	3159999	Identifier	enc		3159745	0					
ANR	3160000	Argument	ptr		3159745	1					
ANR	3160001	Identifier	ptr		3159745	0					
ANR	3160002	Identifier	BT_LF		3159745	1					
ANR	3160003	ExpressionStatement	ptr += MINBPC ( enc )	1335:10:35566:35584	3159745	1	True				
ANR	3160004	AssignmentExpression	ptr += MINBPC ( enc )		3159745	0		+=			
ANR	3160005	Identifier	ptr		3159745	0					
ANR	3160006	CallExpression	MINBPC ( enc )		3159745	1					
ANR	3160007	Callee	MINBPC		3159745	0					
ANR	3160008	Identifier	MINBPC		3159745	0					
ANR	3160009	ArgumentList	enc		3159745	1					
ANR	3160010	Argument	enc		3159745	0					
ANR	3160011	Identifier	enc		3159745	0					
ANR	3160012	ExpressionStatement	* nextTokPtr = ptr	1336:8:35594:35611	3159745	3	True				
ANR	3160013	AssignmentExpression	* nextTokPtr = ptr		3159745	0		=			
ANR	3160014	UnaryOperationExpression	* nextTokPtr		3159745	0					
ANR	3160015	UnaryOperator	*		3159745	0					
ANR	3160016	Identifier	nextTokPtr		3159745	1					
ANR	3160017	Identifier	ptr		3159745	1					
ANR	3160018	ReturnStatement	return XML_TOK_DATA_NEWLINE ;	1337:8:35621:35648	3159745	4	True				
ANR	3160019	Identifier	XML_TOK_DATA_NEWLINE		3159745	0					
ANR	3160020	ExpressionStatement	* nextTokPtr = ptr	1339:6:35664:35681	3159745	38	True				
ANR	3160021	AssignmentExpression	* nextTokPtr = ptr		3159745	0		=			
ANR	3160022	UnaryOperationExpression	* nextTokPtr		3159745	0					
ANR	3160023	UnaryOperator	*		3159745	0					
ANR	3160024	Identifier	nextTokPtr		3159745	1					
ANR	3160025	Identifier	ptr		3159745	1					
ANR	3160026	ReturnStatement	return XML_TOK_DATA_CHARS ;	1340:6:35689:35714	3159745	39	True				
ANR	3160027	Identifier	XML_TOK_DATA_CHARS		3159745	0					
ANR	3160028	Label	default :	1341:4:35720:35727	3159745	40	True				
ANR	3160029	Identifier	default		3159745	0					
ANR	3160030	ExpressionStatement	ptr += MINBPC ( enc )	1342:6:35735:35753	3159745	41	True				
ANR	3160031	AssignmentExpression	ptr += MINBPC ( enc )		3159745	0		+=			
ANR	3160032	Identifier	ptr		3159745	0					
ANR	3160033	CallExpression	MINBPC ( enc )		3159745	1					
ANR	3160034	Callee	MINBPC		3159745	0					
ANR	3160035	Identifier	MINBPC		3159745	0					
ANR	3160036	ArgumentList	enc		3159745	1					
ANR	3160037	Argument	enc		3159745	0					
ANR	3160038	Identifier	enc		3159745	0					
ANR	3160039	BreakStatement	break ;	1343:6:35761:35766	3159745	42	True				
ANR	3160040	ExpressionStatement	* nextTokPtr = ptr	1346:2:35780:35797	3159745	4	True				
ANR	3160041	AssignmentExpression	* nextTokPtr = ptr		3159745	0		=			
ANR	3160042	UnaryOperationExpression	* nextTokPtr		3159745	0					
ANR	3160043	UnaryOperator	*		3159745	0					
ANR	3160044	Identifier	nextTokPtr		3159745	1					
ANR	3160045	Identifier	ptr		3159745	1					
ANR	3160046	ReturnStatement	return XML_TOK_DATA_CHARS ;	1347:2:35801:35826	3159745	5	True				
ANR	3160047	Identifier	XML_TOK_DATA_CHARS		3159745	0					
ANR	3160048	ReturnType	static int PTRCALL PREFIX		3159745	1					
ANR	3160049	Identifier	( entityValueTok )		3159745	2					
ANR	3160050	Identifier	entityValueTok		3159745	3					
ANR	3160051	ParameterList	"const ENCODING * enc , const char * ptr , const char * end , const char * * nextTokPtr"		3159745	4					
ANR	3160052	Parameter	const ENCODING * enc	1288:23:33985:34003	3159745	0	True				
ANR	3160053	ParameterType	const ENCODING *		3159745	0					
ANR	3160054	Identifier	enc		3159745	1					
ANR	3160055	Parameter	const char * ptr	1288:44:34006:34020	3159745	1	True				
ANR	3160056	ParameterType	const char *		3159745	0					
ANR	3160057	Identifier	ptr		3159745	1					
ANR	3160058	Parameter	const char * end	1289:23:34046:34060	3159745	2	True				
ANR	3160059	ParameterType	const char *		3159745	0					
ANR	3160060	Identifier	end		3159745	1					
ANR	3160061	Parameter	const char * * nextTokPtr	1289:40:34063:34085	3159745	3	True				
ANR	3160062	ParameterType	const char * *		3159745	0					
ANR	3160063	Identifier	nextTokPtr		3159745	1					
ANR	3160064	CFGEntryNode	ENTRY		3159745		True				
ANR	3160065	CFGExitNode	EXIT		3159745		True				
ANR	3160066	Symbol	XML_TOK_DATA_CHARS		3159745						
ANR	3160067	Symbol	XML_TOK_INVALID		3159745						
ANR	3160068	Symbol	nextTokPtr		3159745						
ANR	3160069	Symbol	XML_TOK_PARTIAL		3159745						
ANR	3160070	Symbol	start		3159745						
ANR	3160071	Symbol	BYTE_TYPE		3159745						
ANR	3160072	Symbol	* nextTokPtr		3159745						
ANR	3160073	Symbol	MINBPC		3159745						
ANR	3160074	Symbol	n		3159745						
ANR	3160075	Symbol	BT_LF		3159745						
ANR	3160076	Symbol	ptr		3159745						
ANR	3160077	Symbol	scanRef		3159745						
ANR	3160078	Symbol	tok		3159745						
ANR	3160079	Symbol	XML_TOK_DATA_NEWLINE		3159745						
ANR	3160080	Symbol	PREFIX		3159745						
ANR	3160081	Symbol	XML_TOK_PERCENT		3159745						
ANR	3160082	Symbol	XML_TOK_NONE		3159745						
ANR	3160083	Symbol	end		3159745						
ANR	3160084	Symbol	enc		3159745						
ANR	3160085	Symbol	scanPercent		3159745						
ANR	3160086	Symbol	XML_TOK_TRAILING_CR		3159745						
ANR	3160087	Symbol	HAS_CHAR		3159745						
ANR	3160088	Function	ignoreSectionTok	1352:0:35847:37106							
ANR	3160089	FunctionDef	"ignoreSectionTok (const ENCODING * enc , const char * ptr , const char * end , const char * * nextTokPtr)"		3160088	0					
ANR	3160090	CompoundStatement		1355:0:35996:37106	3160088	0					
ANR	3160091	IdentifierDeclStatement	int level = 0 ;	1356:2:36000:36013	3160088	0	True				
ANR	3160092	IdentifierDecl	level = 0		3160088	0					
ANR	3160093	IdentifierDeclType	int		3160088	0					
ANR	3160094	Identifier	level		3160088	1					
ANR	3160095	AssignmentExpression	level = 0		3160088	2		=			
ANR	3160096	Identifier	level		3160088	0					
ANR	3160097	PrimaryExpression	0		3160088	1					
ANR	3160098	IfStatement	if ( MINBPC ( enc ) > 1 )		3160088	1					
ANR	3160099	Condition	MINBPC ( enc ) > 1	1357:6:36021:36035	3160088	0	True				
ANR	3160100	RelationalExpression	MINBPC ( enc ) > 1		3160088	0		>			
ANR	3160101	CallExpression	MINBPC ( enc )		3160088	0					
ANR	3160102	Callee	MINBPC		3160088	0					
ANR	3160103	Identifier	MINBPC		3160088	0					
ANR	3160104	ArgumentList	enc		3160088	1					
ANR	3160105	Argument	enc		3160088	0					
ANR	3160106	Identifier	enc		3160088	0					
ANR	3160107	PrimaryExpression	1		3160088	1					
ANR	3160108	CompoundStatement		4:4:47:67	3160088	1					
ANR	3160109	IdentifierDeclStatement	size_t n = end - ptr ;	1358:4:36044:36064	3160088	0	True				
ANR	3160110	IdentifierDecl	n = end - ptr		3160088	0					
ANR	3160111	IdentifierDeclType	size_t		3160088	0					
ANR	3160112	Identifier	n		3160088	1					
ANR	3160113	AssignmentExpression	n = end - ptr		3160088	2		=			
ANR	3160114	Identifier	n		3160088	0					
ANR	3160115	AdditiveExpression	end - ptr		3160088	1		-			
ANR	3160116	Identifier	end		3160088	0					
ANR	3160117	Identifier	ptr		3160088	1					
ANR	3160118	IfStatement	if ( n & ( MINBPC ( enc ) - 1 ) )		3160088	1					
ANR	3160119	Condition	n & ( MINBPC ( enc ) - 1 )	1359:8:36074:36094	3160088	0	True				
ANR	3160120	BitAndExpression	n & ( MINBPC ( enc ) - 1 )		3160088	0		&			
ANR	3160121	Identifier	n		3160088	0					
ANR	3160122	AdditiveExpression	MINBPC ( enc ) - 1		3160088	1		-			
ANR	3160123	CallExpression	MINBPC ( enc )		3160088	0					
ANR	3160124	Callee	MINBPC		3160088	0					
ANR	3160125	Identifier	MINBPC		3160088	0					
ANR	3160126	ArgumentList	enc		3160088	1					
ANR	3160127	Argument	enc		3160088	0					
ANR	3160128	Identifier	enc		3160088	0					
ANR	3160129	PrimaryExpression	1		3160088	1					
ANR	3160130	CompoundStatement		5:31:100:100	3160088	1					
ANR	3160131	ExpressionStatement	n &= ~ ( MINBPC ( enc ) - 1 )	1360:6:36105:36128	3160088	0	True				
ANR	3160132	AssignmentExpression	n &= ~ ( MINBPC ( enc ) - 1 )		3160088	0		&=			
ANR	3160133	Identifier	n		3160088	0					
ANR	3160134	UnaryOperationExpression	~ ( MINBPC ( enc ) - 1 )		3160088	1					
ANR	3160135	UnaryOperator	~		3160088	0					
ANR	3160136	AdditiveExpression	MINBPC ( enc ) - 1		3160088	1		-			
ANR	3160137	CallExpression	MINBPC ( enc )		3160088	0					
ANR	3160138	Callee	MINBPC		3160088	0					
ANR	3160139	Identifier	MINBPC		3160088	0					
ANR	3160140	ArgumentList	enc		3160088	1					
ANR	3160141	Argument	enc		3160088	0					
ANR	3160142	Identifier	enc		3160088	0					
ANR	3160143	PrimaryExpression	1		3160088	1					
ANR	3160144	ExpressionStatement	end = ptr + n	1361:6:36136:36149	3160088	1	True				
ANR	3160145	AssignmentExpression	end = ptr + n		3160088	0		=			
ANR	3160146	Identifier	end		3160088	0					
ANR	3160147	AdditiveExpression	ptr + n		3160088	1		+			
ANR	3160148	Identifier	ptr		3160088	0					
ANR	3160149	Identifier	n		3160088	1					
ANR	3160150	WhileStatement	"while ( HAS_CHAR ( enc , ptr , end ) )"		3160088	2					
ANR	3160151	Condition	"HAS_CHAR ( enc , ptr , end )"	1364:9:36170:36192	3160088	0	True				
ANR	3160152	CallExpression	"HAS_CHAR ( enc , ptr , end )"		3160088	0					
ANR	3160153	Callee	HAS_CHAR		3160088	0					
ANR	3160154	Identifier	HAS_CHAR		3160088	0					
ANR	3160155	ArgumentList	enc		3160088	1					
ANR	3160156	Argument	enc		3160088	0					
ANR	3160157	Identifier	enc		3160088	0					
ANR	3160158	Argument	ptr		3160088	1					
ANR	3160159	Identifier	ptr		3160088	0					
ANR	3160160	Argument	end		3160088	2					
ANR	3160161	Identifier	end		3160088	0					
ANR	3160162	CompoundStatement		10:34:198:198	3160088	1					
ANR	3160163	SwitchStatement	"switch ( BYTE_TYPE ( enc , ptr ) )"		3160088	0					
ANR	3160164	Condition	"BYTE_TYPE ( enc , ptr )"	1365:12:36209:36227	3160088	0	True				
ANR	3160165	CallExpression	"BYTE_TYPE ( enc , ptr )"		3160088	0					
ANR	3160166	Callee	BYTE_TYPE		3160088	0					
ANR	3160167	Identifier	BYTE_TYPE		3160088	0					
ANR	3160168	ArgumentList	enc		3160088	1					
ANR	3160169	Argument	enc		3160088	0					
ANR	3160170	Identifier	enc		3160088	0					
ANR	3160171	Argument	ptr		3160088	1					
ANR	3160172	Identifier	ptr		3160088	0					
ANR	3160173	CompoundStatement		11:33:233:233	3160088	1					
ANR	3160174	Statement	INVALID_CASES	1366:4:36236:36248	3160088	0	True				
ANR	3160175	Statement	(	1366:17:36249:36249	3160088	1	True				
ANR	3160176	Statement	ptr	1366:18:36250:36252	3160088	2	True				
ANR	3160177	Statement	","	1366:21:36253:36253	3160088	3	True				
ANR	3160178	Statement	nextTokPtr	1366:23:36255:36264	3160088	4	True				
ANR	3160179	Statement	)	1366:33:36265:36265	3160088	5	True				
ANR	3160180	Label	case BT_LT :	1367:4:36271:36281	3160088	6	True				
ANR	3160181	Identifier	BT_LT		3160088	0					
ANR	3160182	ExpressionStatement	ptr += MINBPC ( enc )	1368:6:36289:36307	3160088	7	True				
ANR	3160183	AssignmentExpression	ptr += MINBPC ( enc )		3160088	0		+=			
ANR	3160184	Identifier	ptr		3160088	0					
ANR	3160185	CallExpression	MINBPC ( enc )		3160088	1					
ANR	3160186	Callee	MINBPC		3160088	0					
ANR	3160187	Identifier	MINBPC		3160088	0					
ANR	3160188	ArgumentList	enc		3160088	1					
ANR	3160189	Argument	enc		3160088	0					
ANR	3160190	Identifier	enc		3160088	0					
ANR	3160191	ExpressionStatement	"REQUIRE_CHAR ( enc , ptr , end )"	1369:6:36315:36342	3160088	8	True				
ANR	3160192	CallExpression	"REQUIRE_CHAR ( enc , ptr , end )"		3160088	0					
ANR	3160193	Callee	REQUIRE_CHAR		3160088	0					
ANR	3160194	Identifier	REQUIRE_CHAR		3160088	0					
ANR	3160195	ArgumentList	enc		3160088	1					
ANR	3160196	Argument	enc		3160088	0					
ANR	3160197	Identifier	enc		3160088	0					
ANR	3160198	Argument	ptr		3160088	1					
ANR	3160199	Identifier	ptr		3160088	0					
ANR	3160200	Argument	end		3160088	2					
ANR	3160201	Identifier	end		3160088	0					
ANR	3160202	IfStatement	"if ( CHAR_MATCHES ( enc , ptr , ASCII_EXCL ) )"		3160088	9					
ANR	3160203	Condition	"CHAR_MATCHES ( enc , ptr , ASCII_EXCL )"	1370:10:36354:36387	3160088	0	True				
ANR	3160204	CallExpression	"CHAR_MATCHES ( enc , ptr , ASCII_EXCL )"		3160088	0					
ANR	3160205	Callee	CHAR_MATCHES		3160088	0					
ANR	3160206	Identifier	CHAR_MATCHES		3160088	0					
ANR	3160207	ArgumentList	enc		3160088	1					
ANR	3160208	Argument	enc		3160088	0					
ANR	3160209	Identifier	enc		3160088	0					
ANR	3160210	Argument	ptr		3160088	1					
ANR	3160211	Identifier	ptr		3160088	0					
ANR	3160212	Argument	ASCII_EXCL		3160088	2					
ANR	3160213	Identifier	ASCII_EXCL		3160088	0					
ANR	3160214	CompoundStatement		16:46:393:393	3160088	1					
ANR	3160215	ExpressionStatement	ptr += MINBPC ( enc )	1371:8:36400:36418	3160088	0	True				
ANR	3160216	AssignmentExpression	ptr += MINBPC ( enc )		3160088	0		+=			
ANR	3160217	Identifier	ptr		3160088	0					
ANR	3160218	CallExpression	MINBPC ( enc )		3160088	1					
ANR	3160219	Callee	MINBPC		3160088	0					
ANR	3160220	Identifier	MINBPC		3160088	0					
ANR	3160221	ArgumentList	enc		3160088	1					
ANR	3160222	Argument	enc		3160088	0					
ANR	3160223	Identifier	enc		3160088	0					
ANR	3160224	ExpressionStatement	"REQUIRE_CHAR ( enc , ptr , end )"	1372:8:36428:36455	3160088	1	True				
ANR	3160225	CallExpression	"REQUIRE_CHAR ( enc , ptr , end )"		3160088	0					
ANR	3160226	Callee	REQUIRE_CHAR		3160088	0					
ANR	3160227	Identifier	REQUIRE_CHAR		3160088	0					
ANR	3160228	ArgumentList	enc		3160088	1					
ANR	3160229	Argument	enc		3160088	0					
ANR	3160230	Identifier	enc		3160088	0					
ANR	3160231	Argument	ptr		3160088	1					
ANR	3160232	Identifier	ptr		3160088	0					
ANR	3160233	Argument	end		3160088	2					
ANR	3160234	Identifier	end		3160088	0					
ANR	3160235	IfStatement	"if ( CHAR_MATCHES ( enc , ptr , ASCII_LSQB ) )"		3160088	2					
ANR	3160236	Condition	"CHAR_MATCHES ( enc , ptr , ASCII_LSQB )"	1373:12:36469:36502	3160088	0	True				
ANR	3160237	CallExpression	"CHAR_MATCHES ( enc , ptr , ASCII_LSQB )"		3160088	0					
ANR	3160238	Callee	CHAR_MATCHES		3160088	0					
ANR	3160239	Identifier	CHAR_MATCHES		3160088	0					
ANR	3160240	ArgumentList	enc		3160088	1					
ANR	3160241	Argument	enc		3160088	0					
ANR	3160242	Identifier	enc		3160088	0					
ANR	3160243	Argument	ptr		3160088	1					
ANR	3160244	Identifier	ptr		3160088	0					
ANR	3160245	Argument	ASCII_LSQB		3160088	2					
ANR	3160246	Identifier	ASCII_LSQB		3160088	0					
ANR	3160247	CompoundStatement		19:48:508:508	3160088	1					
ANR	3160248	ExpressionStatement	++ level	1374:10:36517:36524	3160088	0	True				
ANR	3160249	UnaryExpression	++ level		3160088	0					
ANR	3160250	IncDec	++		3160088	0					
ANR	3160251	Identifier	level		3160088	1					
ANR	3160252	ExpressionStatement	ptr += MINBPC ( enc )	1375:10:36536:36554	3160088	1	True				
ANR	3160253	AssignmentExpression	ptr += MINBPC ( enc )		3160088	0		+=			
ANR	3160254	Identifier	ptr		3160088	0					
ANR	3160255	CallExpression	MINBPC ( enc )		3160088	1					
ANR	3160256	Callee	MINBPC		3160088	0					
ANR	3160257	Identifier	MINBPC		3160088	0					
ANR	3160258	ArgumentList	enc		3160088	1					
ANR	3160259	Argument	enc		3160088	0					
ANR	3160260	Identifier	enc		3160088	0					
ANR	3160261	BreakStatement	break ;	1378:6:36580:36585	3160088	10	True				
ANR	3160262	Label	case BT_RSQB :	1379:4:36591:36603	3160088	11	True				
ANR	3160263	Identifier	BT_RSQB		3160088	0					
ANR	3160264	ExpressionStatement	ptr += MINBPC ( enc )	1380:6:36611:36629	3160088	12	True				
ANR	3160265	AssignmentExpression	ptr += MINBPC ( enc )		3160088	0		+=			
ANR	3160266	Identifier	ptr		3160088	0					
ANR	3160267	CallExpression	MINBPC ( enc )		3160088	1					
ANR	3160268	Callee	MINBPC		3160088	0					
ANR	3160269	Identifier	MINBPC		3160088	0					
ANR	3160270	ArgumentList	enc		3160088	1					
ANR	3160271	Argument	enc		3160088	0					
ANR	3160272	Identifier	enc		3160088	0					
ANR	3160273	ExpressionStatement	"REQUIRE_CHAR ( enc , ptr , end )"	1381:6:36637:36664	3160088	13	True				
ANR	3160274	CallExpression	"REQUIRE_CHAR ( enc , ptr , end )"		3160088	0					
ANR	3160275	Callee	REQUIRE_CHAR		3160088	0					
ANR	3160276	Identifier	REQUIRE_CHAR		3160088	0					
ANR	3160277	ArgumentList	enc		3160088	1					
ANR	3160278	Argument	enc		3160088	0					
ANR	3160279	Identifier	enc		3160088	0					
ANR	3160280	Argument	ptr		3160088	1					
ANR	3160281	Identifier	ptr		3160088	0					
ANR	3160282	Argument	end		3160088	2					
ANR	3160283	Identifier	end		3160088	0					
ANR	3160284	IfStatement	"if ( CHAR_MATCHES ( enc , ptr , ASCII_RSQB ) )"		3160088	14					
ANR	3160285	Condition	"CHAR_MATCHES ( enc , ptr , ASCII_RSQB )"	1382:10:36676:36709	3160088	0	True				
ANR	3160286	CallExpression	"CHAR_MATCHES ( enc , ptr , ASCII_RSQB )"		3160088	0					
ANR	3160287	Callee	CHAR_MATCHES		3160088	0					
ANR	3160288	Identifier	CHAR_MATCHES		3160088	0					
ANR	3160289	ArgumentList	enc		3160088	1					
ANR	3160290	Argument	enc		3160088	0					
ANR	3160291	Identifier	enc		3160088	0					
ANR	3160292	Argument	ptr		3160088	1					
ANR	3160293	Identifier	ptr		3160088	0					
ANR	3160294	Argument	ASCII_RSQB		3160088	2					
ANR	3160295	Identifier	ASCII_RSQB		3160088	0					
ANR	3160296	CompoundStatement		28:46:715:715	3160088	1					
ANR	3160297	ExpressionStatement	ptr += MINBPC ( enc )	1383:8:36722:36740	3160088	0	True				
ANR	3160298	AssignmentExpression	ptr += MINBPC ( enc )		3160088	0		+=			
ANR	3160299	Identifier	ptr		3160088	0					
ANR	3160300	CallExpression	MINBPC ( enc )		3160088	1					
ANR	3160301	Callee	MINBPC		3160088	0					
ANR	3160302	Identifier	MINBPC		3160088	0					
ANR	3160303	ArgumentList	enc		3160088	1					
ANR	3160304	Argument	enc		3160088	0					
ANR	3160305	Identifier	enc		3160088	0					
ANR	3160306	ExpressionStatement	"REQUIRE_CHAR ( enc , ptr , end )"	1384:8:36750:36777	3160088	1	True				
ANR	3160307	CallExpression	"REQUIRE_CHAR ( enc , ptr , end )"		3160088	0					
ANR	3160308	Callee	REQUIRE_CHAR		3160088	0					
ANR	3160309	Identifier	REQUIRE_CHAR		3160088	0					
ANR	3160310	ArgumentList	enc		3160088	1					
ANR	3160311	Argument	enc		3160088	0					
ANR	3160312	Identifier	enc		3160088	0					
ANR	3160313	Argument	ptr		3160088	1					
ANR	3160314	Identifier	ptr		3160088	0					
ANR	3160315	Argument	end		3160088	2					
ANR	3160316	Identifier	end		3160088	0					
ANR	3160317	IfStatement	"if ( CHAR_MATCHES ( enc , ptr , ASCII_GT ) )"		3160088	2					
ANR	3160318	Condition	"CHAR_MATCHES ( enc , ptr , ASCII_GT )"	1385:12:36791:36822	3160088	0	True				
ANR	3160319	CallExpression	"CHAR_MATCHES ( enc , ptr , ASCII_GT )"		3160088	0					
ANR	3160320	Callee	CHAR_MATCHES		3160088	0					
ANR	3160321	Identifier	CHAR_MATCHES		3160088	0					
ANR	3160322	ArgumentList	enc		3160088	1					
ANR	3160323	Argument	enc		3160088	0					
ANR	3160324	Identifier	enc		3160088	0					
ANR	3160325	Argument	ptr		3160088	1					
ANR	3160326	Identifier	ptr		3160088	0					
ANR	3160327	Argument	ASCII_GT		3160088	2					
ANR	3160328	Identifier	ASCII_GT		3160088	0					
ANR	3160329	CompoundStatement		31:46:828:828	3160088	1					
ANR	3160330	ExpressionStatement	ptr += MINBPC ( enc )	1386:10:36837:36855	3160088	0	True				
ANR	3160331	AssignmentExpression	ptr += MINBPC ( enc )		3160088	0		+=			
ANR	3160332	Identifier	ptr		3160088	0					
ANR	3160333	CallExpression	MINBPC ( enc )		3160088	1					
ANR	3160334	Callee	MINBPC		3160088	0					
ANR	3160335	Identifier	MINBPC		3160088	0					
ANR	3160336	ArgumentList	enc		3160088	1					
ANR	3160337	Argument	enc		3160088	0					
ANR	3160338	Identifier	enc		3160088	0					
ANR	3160339	IfStatement	if ( level == 0 )		3160088	1					
ANR	3160340	Condition	level == 0	1387:14:36871:36880	3160088	0	True				
ANR	3160341	EqualityExpression	level == 0		3160088	0		==			
ANR	3160342	Identifier	level		3160088	0					
ANR	3160343	PrimaryExpression	0		3160088	1					
ANR	3160344	CompoundStatement		33:26:886:886	3160088	1					
ANR	3160345	ExpressionStatement	* nextTokPtr = ptr	1388:12:36897:36914	3160088	0	True				
ANR	3160346	AssignmentExpression	* nextTokPtr = ptr		3160088	0		=			
ANR	3160347	UnaryOperationExpression	* nextTokPtr		3160088	0					
ANR	3160348	UnaryOperator	*		3160088	0					
ANR	3160349	Identifier	nextTokPtr		3160088	1					
ANR	3160350	Identifier	ptr		3160088	1					
ANR	3160351	ReturnStatement	return XML_TOK_IGNORE_SECT ;	1389:12:36928:36954	3160088	1	True				
ANR	3160352	Identifier	XML_TOK_IGNORE_SECT		3160088	0					
ANR	3160353	ExpressionStatement	-- level	1391:10:36978:36985	3160088	2	True				
ANR	3160354	UnaryExpression	-- level		3160088	0					
ANR	3160355	IncDec	--		3160088	0					
ANR	3160356	Identifier	level		3160088	1					
ANR	3160357	BreakStatement	break ;	1394:6:37011:37016	3160088	15	True				
ANR	3160358	Label	default :	1395:4:37022:37029	3160088	16	True				
ANR	3160359	Identifier	default		3160088	0					
ANR	3160360	ExpressionStatement	ptr += MINBPC ( enc )	1396:6:37037:37055	3160088	17	True				
ANR	3160361	AssignmentExpression	ptr += MINBPC ( enc )		3160088	0		+=			
ANR	3160362	Identifier	ptr		3160088	0					
ANR	3160363	CallExpression	MINBPC ( enc )		3160088	1					
ANR	3160364	Callee	MINBPC		3160088	0					
ANR	3160365	Identifier	MINBPC		3160088	0					
ANR	3160366	ArgumentList	enc		3160088	1					
ANR	3160367	Argument	enc		3160088	0					
ANR	3160368	Identifier	enc		3160088	0					
ANR	3160369	BreakStatement	break ;	1397:6:37063:37068	3160088	18	True				
ANR	3160370	ReturnStatement	return XML_TOK_PARTIAL ;	1400:2:37082:37104	3160088	3	True				
ANR	3160371	Identifier	XML_TOK_PARTIAL		3160088	0					
ANR	3160372	ReturnType	static int PTRCALL PREFIX		3160088	1					
ANR	3160373	Identifier	( ignoreSectionTok )		3160088	2					
ANR	3160374	Identifier	ignoreSectionTok		3160088	3					
ANR	3160375	ParameterList	"const ENCODING * enc , const char * ptr , const char * end , const char * * nextTokPtr"		3160088	4					
ANR	3160376	Parameter	const ENCODING * enc	1353:25:35891:35909	3160088	0	True				
ANR	3160377	ParameterType	const ENCODING *		3160088	0					
ANR	3160378	Identifier	enc		3160088	1					
ANR	3160379	Parameter	const char * ptr	1353:46:35912:35926	3160088	1	True				
ANR	3160380	ParameterType	const char *		3160088	0					
ANR	3160381	Identifier	ptr		3160088	1					
ANR	3160382	Parameter	const char * end	1354:25:35954:35968	3160088	2	True				
ANR	3160383	ParameterType	const char *		3160088	0					
ANR	3160384	Identifier	end		3160088	1					
ANR	3160385	Parameter	const char * * nextTokPtr	1354:42:35971:35993	3160088	3	True				
ANR	3160386	ParameterType	const char * *		3160088	0					
ANR	3160387	Identifier	nextTokPtr		3160088	1					
ANR	3160388	CFGEntryNode	ENTRY		3160088		True				
ANR	3160389	CFGExitNode	EXIT		3160088		True				
ANR	3160390	Symbol	nextTokPtr		3160088						
ANR	3160391	Symbol	level		3160088						
ANR	3160392	Symbol	XML_TOK_PARTIAL		3160088						
ANR	3160393	Symbol	BYTE_TYPE		3160088						
ANR	3160394	Symbol	* nextTokPtr		3160088						
ANR	3160395	Symbol	MINBPC		3160088						
ANR	3160396	Symbol	n		3160088						
ANR	3160397	Symbol	ptr		3160088						
ANR	3160398	Symbol	CHAR_MATCHES		3160088						
ANR	3160399	Symbol	ASCII_EXCL		3160088						
ANR	3160400	Symbol	XML_TOK_IGNORE_SECT		3160088						
ANR	3160401	Symbol	ASCII_GT		3160088						
ANR	3160402	Symbol	end		3160088						
ANR	3160403	Symbol	enc		3160088						
ANR	3160404	Symbol	HAS_CHAR		3160088						
ANR	3160405	Symbol	ASCII_LSQB		3160088						
ANR	3160406	Symbol	ASCII_RSQB		3160088						
ANR	3160407	Function	isPublicId	1405:0:37131:38219							
ANR	3160408	FunctionDef	"isPublicId (const ENCODING * enc , const char * ptr , const char * end , const char * * badPtr)"		3160407	0					
ANR	3160409	CompoundStatement		1408:0:37264:38219	3160407	0					
ANR	3160410	ExpressionStatement	ptr += MINBPC ( enc )	1409:2:37268:37286	3160407	0	True				
ANR	3160411	AssignmentExpression	ptr += MINBPC ( enc )		3160407	0		+=			
ANR	3160412	Identifier	ptr		3160407	0					
ANR	3160413	CallExpression	MINBPC ( enc )		3160407	1					
ANR	3160414	Callee	MINBPC		3160407	0					
ANR	3160415	Identifier	MINBPC		3160407	0					
ANR	3160416	ArgumentList	enc		3160407	1					
ANR	3160417	Argument	enc		3160407	0					
ANR	3160418	Identifier	enc		3160407	0					
ANR	3160419	ExpressionStatement	end -= MINBPC ( enc )	1410:2:37290:37308	3160407	1	True				
ANR	3160420	AssignmentExpression	end -= MINBPC ( enc )		3160407	0		-=			
ANR	3160421	Identifier	end		3160407	0					
ANR	3160422	CallExpression	MINBPC ( enc )		3160407	1					
ANR	3160423	Callee	MINBPC		3160407	0					
ANR	3160424	Identifier	MINBPC		3160407	0					
ANR	3160425	ArgumentList	enc		3160407	1					
ANR	3160426	Argument	enc		3160407	0					
ANR	3160427	Identifier	enc		3160407	0					
ANR	3160428	ForStatement	"for ( ; HAS_CHAR ( enc , ptr , end ) ; ptr += MINBPC ( enc ) )"		3160407	2					
ANR	3160429	Condition	"HAS_CHAR ( enc , ptr , end )"	1411:9:37319:37341	3160407	0	True				
ANR	3160430	CallExpression	"HAS_CHAR ( enc , ptr , end )"		3160407	0					
ANR	3160431	Callee	HAS_CHAR		3160407	0					
ANR	3160432	Identifier	HAS_CHAR		3160407	0					
ANR	3160433	ArgumentList	enc		3160407	1					
ANR	3160434	Argument	enc		3160407	0					
ANR	3160435	Identifier	enc		3160407	0					
ANR	3160436	Argument	ptr		3160407	1					
ANR	3160437	Identifier	ptr		3160407	0					
ANR	3160438	Argument	end		3160407	2					
ANR	3160439	Identifier	end		3160407	0					
ANR	3160440	AssignmentExpression	ptr += MINBPC ( enc )	1411:34:37344:37361	3160407	1	True	+=			
ANR	3160441	Identifier	ptr		3160407	0					
ANR	3160442	CallExpression	MINBPC ( enc )		3160407	1					
ANR	3160443	Callee	MINBPC		3160407	0					
ANR	3160444	Identifier	MINBPC		3160407	0					
ANR	3160445	ArgumentList	enc		3160407	1					
ANR	3160446	Argument	enc		3160407	0					
ANR	3160447	Identifier	enc		3160407	0					
ANR	3160448	CompoundStatement		4:54:99:99	3160407	2					
ANR	3160449	SwitchStatement	"switch ( BYTE_TYPE ( enc , ptr ) )"		3160407	0					
ANR	3160450	Condition	"BYTE_TYPE ( enc , ptr )"	1412:12:37378:37396	3160407	0	True				
ANR	3160451	CallExpression	"BYTE_TYPE ( enc , ptr )"		3160407	0					
ANR	3160452	Callee	BYTE_TYPE		3160407	0					
ANR	3160453	Identifier	BYTE_TYPE		3160407	0					
ANR	3160454	ArgumentList	enc		3160407	1					
ANR	3160455	Argument	enc		3160407	0					
ANR	3160456	Identifier	enc		3160407	0					
ANR	3160457	Argument	ptr		3160407	1					
ANR	3160458	Identifier	ptr		3160407	0					
ANR	3160459	CompoundStatement		5:33:134:134	3160407	1					
ANR	3160460	Label	case BT_DIGIT :	1413:4:37405:37418	3160407	0	True				
ANR	3160461	Identifier	BT_DIGIT		3160407	0					
ANR	3160462	Label	case BT_HEX :	1414:4:37424:37435	3160407	1	True				
ANR	3160463	Identifier	BT_HEX		3160407	0					
ANR	3160464	Label	case BT_MINUS :	1415:4:37441:37454	3160407	2	True				
ANR	3160465	Identifier	BT_MINUS		3160407	0					
ANR	3160466	Label	case BT_APOS :	1416:4:37460:37472	3160407	3	True				
ANR	3160467	Identifier	BT_APOS		3160407	0					
ANR	3160468	Label	case BT_LPAR :	1417:4:37478:37490	3160407	4	True				
ANR	3160469	Identifier	BT_LPAR		3160407	0					
ANR	3160470	Label	case BT_RPAR :	1418:4:37496:37508	3160407	5	True				
ANR	3160471	Identifier	BT_RPAR		3160407	0					
ANR	3160472	Label	case BT_PLUS :	1419:4:37514:37526	3160407	6	True				
ANR	3160473	Identifier	BT_PLUS		3160407	0					
ANR	3160474	Label	case BT_COMMA :	1420:4:37532:37545	3160407	7	True				
ANR	3160475	Identifier	BT_COMMA		3160407	0					
ANR	3160476	Label	case BT_SOL :	1421:4:37551:37562	3160407	8	True				
ANR	3160477	Identifier	BT_SOL		3160407	0					
ANR	3160478	Label	case BT_EQUALS :	1422:4:37568:37582	3160407	9	True				
ANR	3160479	Identifier	BT_EQUALS		3160407	0					
ANR	3160480	Label	case BT_QUEST :	1423:4:37588:37601	3160407	10	True				
ANR	3160481	Identifier	BT_QUEST		3160407	0					
ANR	3160482	Label	case BT_CR :	1424:4:37607:37617	3160407	11	True				
ANR	3160483	Identifier	BT_CR		3160407	0					
ANR	3160484	Label	case BT_LF :	1425:4:37623:37633	3160407	12	True				
ANR	3160485	Identifier	BT_LF		3160407	0					
ANR	3160486	Label	case BT_SEMI :	1426:4:37639:37651	3160407	13	True				
ANR	3160487	Identifier	BT_SEMI		3160407	0					
ANR	3160488	Label	case BT_EXCL :	1427:4:37657:37669	3160407	14	True				
ANR	3160489	Identifier	BT_EXCL		3160407	0					
ANR	3160490	Label	case BT_AST :	1428:4:37675:37686	3160407	15	True				
ANR	3160491	Identifier	BT_AST		3160407	0					
ANR	3160492	Label	case BT_PERCNT :	1429:4:37692:37706	3160407	16	True				
ANR	3160493	Identifier	BT_PERCNT		3160407	0					
ANR	3160494	Label	case BT_NUM :	1430:4:37712:37723	3160407	17	True				
ANR	3160495	Identifier	BT_NUM		3160407	0					
ANR	3160496	Label	case BT_COLON :	1432:4:37743:37756	3160407	18	True				
ANR	3160497	Identifier	BT_COLON		3160407	0					
ANR	3160498	BreakStatement	break ;	1434:6:37771:37776	3160407	19	True				
ANR	3160499	Label	case BT_S :	1435:4:37782:37791	3160407	20	True				
ANR	3160500	Identifier	BT_S		3160407	0					
ANR	3160501	IfStatement	"if ( CHAR_MATCHES ( enc , ptr , ASCII_TAB ) )"		3160407	21					
ANR	3160502	Condition	"CHAR_MATCHES ( enc , ptr , ASCII_TAB )"	1436:10:37803:37835	3160407	0	True				
ANR	3160503	CallExpression	"CHAR_MATCHES ( enc , ptr , ASCII_TAB )"		3160407	0					
ANR	3160504	Callee	CHAR_MATCHES		3160407	0					
ANR	3160505	Identifier	CHAR_MATCHES		3160407	0					
ANR	3160506	ArgumentList	enc		3160407	1					
ANR	3160507	Argument	enc		3160407	0					
ANR	3160508	Identifier	enc		3160407	0					
ANR	3160509	Argument	ptr		3160407	1					
ANR	3160510	Identifier	ptr		3160407	0					
ANR	3160511	Argument	ASCII_TAB		3160407	2					
ANR	3160512	Identifier	ASCII_TAB		3160407	0					
ANR	3160513	CompoundStatement		29:45:573:573	3160407	1					
ANR	3160514	ExpressionStatement	* badPtr = ptr	1437:8:37848:37861	3160407	0	True				
ANR	3160515	AssignmentExpression	* badPtr = ptr		3160407	0		=			
ANR	3160516	UnaryOperationExpression	* badPtr		3160407	0					
ANR	3160517	UnaryOperator	*		3160407	0					
ANR	3160518	Identifier	badPtr		3160407	1					
ANR	3160519	Identifier	ptr		3160407	1					
ANR	3160520	ReturnStatement	return 0 ;	1438:8:37871:37879	3160407	1	True				
ANR	3160521	PrimaryExpression	0		3160407	0					
ANR	3160522	BreakStatement	break ;	1440:6:37895:37900	3160407	22	True				
ANR	3160523	Label	case BT_NAME :	1441:4:37906:37918	3160407	23	True				
ANR	3160524	Identifier	BT_NAME		3160407	0					
ANR	3160525	Label	case BT_NMSTRT :	1442:4:37924:37938	3160407	24	True				
ANR	3160526	Identifier	BT_NMSTRT		3160407	0					
ANR	3160527	IfStatement	"if ( ! ( BYTE_TO_ASCII ( enc , ptr ) & ~0x7f ) )"		3160407	25					
ANR	3160528	Condition	"! ( BYTE_TO_ASCII ( enc , ptr ) & ~0x7f )"	1443:10:37950:37983	3160407	0	True				
ANR	3160529	UnaryOperationExpression	"! ( BYTE_TO_ASCII ( enc , ptr ) & ~0x7f )"		3160407	0					
ANR	3160530	UnaryOperator	!		3160407	0					
ANR	3160531	BitAndExpression	"BYTE_TO_ASCII ( enc , ptr ) & ~0x7f"		3160407	1		&			
ANR	3160532	CallExpression	"BYTE_TO_ASCII ( enc , ptr )"		3160407	0					
ANR	3160533	Callee	BYTE_TO_ASCII		3160407	0					
ANR	3160534	Identifier	BYTE_TO_ASCII		3160407	0					
ANR	3160535	ArgumentList	enc		3160407	1					
ANR	3160536	Argument	enc		3160407	0					
ANR	3160537	Identifier	enc		3160407	0					
ANR	3160538	Argument	ptr		3160407	1					
ANR	3160539	Identifier	ptr		3160407	0					
ANR	3160540	Identifier	~0x7f		3160407	1					
ANR	3160541	BreakStatement	break ;	1444:8:37994:37999	3160407	1	True				
ANR	3160542	Label	default :	1445:4:38005:38012	3160407	26	True				
ANR	3160543	Identifier	default		3160407	0					
ANR	3160544	SwitchStatement	"switch ( BYTE_TO_ASCII ( enc , ptr ) )"		3160407	27					
ANR	3160545	Condition	"BYTE_TO_ASCII ( enc , ptr )"	1446:14:38028:38050	3160407	0	True				
ANR	3160546	CallExpression	"BYTE_TO_ASCII ( enc , ptr )"		3160407	0					
ANR	3160547	Callee	BYTE_TO_ASCII		3160407	0					
ANR	3160548	Identifier	BYTE_TO_ASCII		3160407	0					
ANR	3160549	ArgumentList	enc		3160407	1					
ANR	3160550	Argument	enc		3160407	0					
ANR	3160551	Identifier	enc		3160407	0					
ANR	3160552	Argument	ptr		3160407	1					
ANR	3160553	Identifier	ptr		3160407	0					
ANR	3160554	CompoundStatement		39:39:788:788	3160407	1					
ANR	3160555	Label	case 0x24 :	1447:6:38061:38070	3160407	0	True				
ANR	3160556	Label	case 0x40 :	1448:6:38086:38095	3160407	1	True				
ANR	3160557	BreakStatement	break ;	1449:8:38113:38118	3160407	2	True				
ANR	3160558	Label	default :	1450:6:38126:38133	3160407	3	True				
ANR	3160559	Identifier	default		3160407	0					
ANR	3160560	ExpressionStatement	* badPtr = ptr	1451:8:38143:38156	3160407	4	True				
ANR	3160561	AssignmentExpression	* badPtr = ptr		3160407	0		=			
ANR	3160562	UnaryOperationExpression	* badPtr		3160407	0					
ANR	3160563	UnaryOperator	*		3160407	0					
ANR	3160564	Identifier	badPtr		3160407	1					
ANR	3160565	Identifier	ptr		3160407	1					
ANR	3160566	ReturnStatement	return 0 ;	1452:8:38166:38174	3160407	5	True				
ANR	3160567	PrimaryExpression	0		3160407	0					
ANR	3160568	BreakStatement	break ;	1454:6:38190:38195	3160407	28	True				
ANR	3160569	ReturnStatement	return 1 ;	1457:2:38209:38217	3160407	3	True				
ANR	3160570	PrimaryExpression	1		3160407	0					
ANR	3160571	ReturnType	static int PTRCALL PREFIX		3160407	1					
ANR	3160572	Identifier	( isPublicId )		3160407	2					
ANR	3160573	Identifier	isPublicId		3160407	3					
ANR	3160574	ParameterList	"const ENCODING * enc , const char * ptr , const char * end , const char * * badPtr"		3160407	4					
ANR	3160575	Parameter	const ENCODING * enc	1406:19:37169:37187	3160407	0	True				
ANR	3160576	ParameterType	const ENCODING *		3160407	0					
ANR	3160577	Identifier	enc		3160407	1					
ANR	3160578	Parameter	const char * ptr	1406:40:37190:37204	3160407	1	True				
ANR	3160579	ParameterType	const char *		3160407	0					
ANR	3160580	Identifier	ptr		3160407	1					
ANR	3160581	Parameter	const char * end	1406:57:37207:37221	3160407	2	True				
ANR	3160582	ParameterType	const char *		3160407	0					
ANR	3160583	Identifier	end		3160407	1					
ANR	3160584	Parameter	const char * * badPtr	1407:19:37243:37261	3160407	3	True				
ANR	3160585	ParameterType	const char * *		3160407	0					
ANR	3160586	Identifier	badPtr		3160407	1					
ANR	3160587	CFGEntryNode	ENTRY		3160407		True				
ANR	3160588	CFGExitNode	EXIT		3160407		True				
ANR	3160589	Symbol	ASCII_TAB		3160407						
ANR	3160590	Symbol	CHAR_MATCHES		3160407						
ANR	3160591	Symbol	~0x7f		3160407						
ANR	3160592	Symbol	* badPtr		3160407						
ANR	3160593	Symbol	BYTE_TYPE		3160407						
ANR	3160594	Symbol	badPtr		3160407						
ANR	3160595	Symbol	end		3160407						
ANR	3160596	Symbol	enc		3160407						
ANR	3160597	Symbol	MINBPC		3160407						
ANR	3160598	Symbol	HAS_CHAR		3160407						
ANR	3160599	Symbol	ptr		3160407						
ANR	3160600	Symbol	BYTE_TO_ASCII		3160407						
ANR	3160601	Function	getAtts	1465:0:38407:40984							
ANR	3160602	FunctionDef	"getAtts (const ENCODING * enc , const char * ptr , int attsMax , ATTRIBUTE * atts)"		3160601	0					
ANR	3160603	CompoundStatement		1468:0:38526:40984	3160601	0					
ANR	3160604	ClassDefStatement	"enum { other , inName , inValue } state = inName ;"	1469:2:38530:38576	3160601	0	True				
ANR	3160605	IdentifierDecl	state = inName		3160601	0					
ANR	3160606	IdentifierDeclType			3160601	0					
ANR	3160607	Identifier	state		3160601	1					
ANR	3160608	AssignmentExpression	state = inName		3160601	2		=			
ANR	3160609	Identifier	inName		3160601	0					
ANR	3160610	Identifier	inName		3160601	1					
ANR	3160611	IdentifierDeclStatement	int nAtts = 0 ;	1470:2:38580:38593	3160601	1	True				
ANR	3160612	IdentifierDecl	nAtts = 0		3160601	0					
ANR	3160613	IdentifierDeclType	int		3160601	0					
ANR	3160614	Identifier	nAtts		3160601	1					
ANR	3160615	AssignmentExpression	nAtts = 0		3160601	2		=			
ANR	3160616	Identifier	nAtts		3160601	0					
ANR	3160617	PrimaryExpression	0		3160601	1					
ANR	3160618	IdentifierDeclStatement	int open = 0 ;	1471:2:38597:38609	3160601	2	True				
ANR	3160619	IdentifierDecl	open = 0		3160601	0					
ANR	3160620	IdentifierDeclType	int		3160601	0					
ANR	3160621	Identifier	open		3160601	1					
ANR	3160622	AssignmentExpression	open = 0		3160601	2		=			
ANR	3160623	Identifier	open		3160601	0					
ANR	3160624	PrimaryExpression	0		3160601	1					
ANR	3160625	ForStatement	for ( ptr += MINBPC ( enc ) ; ; ptr += MINBPC ( enc ) )		3160601	3					
ANR	3160626	ForInit	ptr += MINBPC ( enc ) ;	1474:7:38716:38734	3160601	0	True				
ANR	3160627	AssignmentExpression	ptr += MINBPC ( enc )		3160601	0		+=			
ANR	3160628	Identifier	ptr		3160601	0					
ANR	3160629	CallExpression	MINBPC ( enc )		3160601	1					
ANR	3160630	Callee	MINBPC		3160601	0					
ANR	3160631	Identifier	MINBPC		3160601	0					
ANR	3160632	ArgumentList	enc		3160601	1					
ANR	3160633	Argument	enc		3160601	0					
ANR	3160634	Identifier	enc		3160601	0					
ANR	3160635	AssignmentExpression	ptr += MINBPC ( enc )	1474:28:38737:38754	3160601	1	True	+=			
ANR	3160636	Identifier	ptr		3160601	0					
ANR	3160637	CallExpression	MINBPC ( enc )		3160601	1					
ANR	3160638	Callee	MINBPC		3160601	0					
ANR	3160639	Identifier	MINBPC		3160601	0					
ANR	3160640	ArgumentList	enc		3160601	1					
ANR	3160641	Argument	enc		3160601	0					
ANR	3160642	Identifier	enc		3160601	0					
ANR	3160643	CompoundStatement		7:48:230:230	3160601	2					
ANR	3160644	SwitchStatement	"switch ( BYTE_TYPE ( enc , ptr ) )"		3160601	0					
ANR	3160645	Condition	"BYTE_TYPE ( enc , ptr )"	1475:12:38771:38789	3160601	0	True				
ANR	3160646	CallExpression	"BYTE_TYPE ( enc , ptr )"		3160601	0					
ANR	3160647	Callee	BYTE_TYPE		3160601	0					
ANR	3160648	Identifier	BYTE_TYPE		3160601	0					
ANR	3160649	ArgumentList	enc		3160601	1					
ANR	3160650	Argument	enc		3160601	0					
ANR	3160651	Identifier	enc		3160601	0					
ANR	3160652	Argument	ptr		3160601	1					
ANR	3160653	Identifier	ptr		3160601	0					
ANR	3160654	CompoundStatement		8:33:265:265	3160601	1					
ANR	3160655	Statement	define	1476:1:38795:38800	3160601	0	True				
ANR	3160656	Statement	START_NAME	1476:8:38802:38811	3160601	1	True				
ANR	3160657	IfStatement	if ( state == other )		3160601	2					
ANR	3160658	Condition	state == other	1477:10:38825:38838	3160601	0	True				
ANR	3160659	EqualityExpression	state == other		3160601	0		==			
ANR	3160660	Identifier	state		3160601	0					
ANR	3160661	Identifier	other		3160601	1					
ANR	3160662	CompoundStatement		10:26:314:314	3160601	1					
ANR	3160663	IfStatement	if ( nAtts < attsMax )		3160601	0					
ANR	3160664	Condition	nAtts < attsMax	1478:12:38857:38871	3160601	0	True				
ANR	3160665	RelationalExpression	nAtts < attsMax		3160601	0		<			
ANR	3160666	Identifier	nAtts		3160601	0					
ANR	3160667	Identifier	attsMax		3160601	1					
ANR	3160668	CompoundStatement		11:29:347:347	3160601	1					
ANR	3160669	ExpressionStatement	atts [ nAtts ] . name = ptr	1479:10:38888:38910	3160601	0	True				
ANR	3160670	AssignmentExpression	atts [ nAtts ] . name = ptr		3160601	0		=			
ANR	3160671	MemberAccess	atts [ nAtts ] . name		3160601	0					
ANR	3160672	ArrayIndexing	atts [ nAtts ]		3160601	0					
ANR	3160673	Identifier	atts		3160601	0					
ANR	3160674	Identifier	nAtts		3160601	1					
ANR	3160675	Identifier	name		3160601	1					
ANR	3160676	Identifier	ptr		3160601	1					
ANR	3160677	ExpressionStatement	atts [ nAtts ] . normalized = 1	1480:10:38924:38950	3160601	1	True				
ANR	3160678	AssignmentExpression	atts [ nAtts ] . normalized = 1		3160601	0		=			
ANR	3160679	MemberAccess	atts [ nAtts ] . normalized		3160601	0					
ANR	3160680	ArrayIndexing	atts [ nAtts ]		3160601	0					
ANR	3160681	Identifier	atts		3160601	0					
ANR	3160682	Identifier	nAtts		3160601	1					
ANR	3160683	Identifier	normalized		3160601	1					
ANR	3160684	PrimaryExpression	1		3160601	1					
ANR	3160685	ExpressionStatement	state = inName	1482:8:38974:38988	3160601	1	True				
ANR	3160686	AssignmentExpression	state = inName		3160601	0		=			
ANR	3160687	Identifier	state		3160601	0					
ANR	3160688	Identifier	inName		3160601	1					
ANR	3160689	Statement	define	1484:1:39001:39006	3160601	3	True				
ANR	3160690	Statement	LEAD_CASE	1484:8:39008:39016	3160601	4	True				
ANR	3160691	Statement	(	1484:17:39017:39017	3160601	5	True				
ANR	3160692	Statement	n	1484:18:39018:39018	3160601	6	True				
ANR	3160693	Statement	)	1484:19:39019:39019	3160601	7	True				
ANR	3160694	Statement	case	1485:4:39027:39030	3160601	8	True				
ANR	3160695	Statement	BT_LEAD	1485:9:39032:39038	3160601	9	True				
ANR	3160696	Label	n :	1485:20:39043:39044	3160601	10	True				
ANR	3160697	Identifier	n		3160601	0					
ANR	3160698	Statement	START_NAME	1485:23:39046:39055	3160601	11	True				
ANR	3160699	ExpressionStatement	ptr += ( n - MINBPC ( enc ) )	1485:34:39057:39081	3160601	12	True				
ANR	3160700	AssignmentExpression	ptr += ( n - MINBPC ( enc ) )		3160601	0		+=			
ANR	3160701	Identifier	ptr		3160601	0					
ANR	3160702	AdditiveExpression	n - MINBPC ( enc )		3160601	1		-			
ANR	3160703	Identifier	n		3160601	0					
ANR	3160704	CallExpression	MINBPC ( enc )		3160601	1					
ANR	3160705	Callee	MINBPC		3160601	0					
ANR	3160706	Identifier	MINBPC		3160601	0					
ANR	3160707	ArgumentList	enc		3160601	1					
ANR	3160708	Argument	enc		3160601	0					
ANR	3160709	Identifier	enc		3160601	0					
ANR	3160710	BreakStatement	break ;	1485:60:39083:39088	3160601	13	True				
ANR	3160711	Statement	LEAD_CASE	1486:4:39094:39102	3160601	14	True				
ANR	3160712	Statement	(	1486:13:39103:39103	3160601	15	True				
ANR	3160713	Statement	2	1486:14:39104:39104	3160601	16	True				
ANR	3160714	Statement	)	1486:15:39105:39105	3160601	17	True				
ANR	3160715	Statement	LEAD_CASE	1486:17:39107:39115	3160601	18	True				
ANR	3160716	Statement	(	1486:26:39116:39116	3160601	19	True				
ANR	3160717	Statement	3	1486:27:39117:39117	3160601	20	True				
ANR	3160718	Statement	)	1486:28:39118:39118	3160601	21	True				
ANR	3160719	Statement	LEAD_CASE	1486:30:39120:39128	3160601	22	True				
ANR	3160720	Statement	(	1486:39:39129:39129	3160601	23	True				
ANR	3160721	Statement	4	1486:40:39130:39130	3160601	24	True				
ANR	3160722	Statement	)	1486:41:39131:39131	3160601	25	True				
ANR	3160723	Statement	undef	1487:1:39134:39138	3160601	26	True				
ANR	3160724	Statement	LEAD_CASE	1487:7:39140:39148	3160601	27	True				
ANR	3160725	Label	case BT_NONASCII :	1488:4:39154:39170	3160601	28	True				
ANR	3160726	Identifier	BT_NONASCII		3160601	0					
ANR	3160727	Label	case BT_NMSTRT :	1489:4:39176:39190	3160601	29	True				
ANR	3160728	Identifier	BT_NMSTRT		3160601	0					
ANR	3160729	Label	case BT_HEX :	1490:4:39196:39207	3160601	30	True				
ANR	3160730	Identifier	BT_HEX		3160601	0					
ANR	3160731	Statement	START_NAME	1491:6:39215:39224	3160601	31	True				
ANR	3160732	BreakStatement	break ;	1492:6:39232:39237	3160601	32	True				
ANR	3160733	Statement	undef	1493:1:39240:39244	3160601	33	True				
ANR	3160734	Statement	START_NAME	1493:7:39246:39255	3160601	34	True				
ANR	3160735	Label	case BT_QUOT :	1494:4:39261:39273	3160601	35	True				
ANR	3160736	Identifier	BT_QUOT		3160601	0					
ANR	3160737	IfStatement	if ( state != inValue )		3160601	36					
ANR	3160738	Condition	state != inValue	1495:10:39285:39300	3160601	0	True				
ANR	3160739	EqualityExpression	state != inValue		3160601	0		!=			
ANR	3160740	Identifier	state		3160601	0					
ANR	3160741	Identifier	inValue		3160601	1					
ANR	3160742	CompoundStatement		28:28:776:776	3160601	1					
ANR	3160743	IfStatement	if ( nAtts < attsMax )		3160601	0					
ANR	3160744	Condition	nAtts < attsMax	1496:12:39317:39331	3160601	0	True				
ANR	3160745	RelationalExpression	nAtts < attsMax		3160601	0		<			
ANR	3160746	Identifier	nAtts		3160601	0					
ANR	3160747	Identifier	attsMax		3160601	1					
ANR	3160748	ExpressionStatement	atts [ nAtts ] . valuePtr = ptr + MINBPC ( enc )	1497:10:39344:39384	3160601	1	True				
ANR	3160749	AssignmentExpression	atts [ nAtts ] . valuePtr = ptr + MINBPC ( enc )		3160601	0		=			
ANR	3160750	MemberAccess	atts [ nAtts ] . valuePtr		3160601	0					
ANR	3160751	ArrayIndexing	atts [ nAtts ]		3160601	0					
ANR	3160752	Identifier	atts		3160601	0					
ANR	3160753	Identifier	nAtts		3160601	1					
ANR	3160754	Identifier	valuePtr		3160601	1					
ANR	3160755	AdditiveExpression	ptr + MINBPC ( enc )		3160601	1		+			
ANR	3160756	Identifier	ptr		3160601	0					
ANR	3160757	CallExpression	MINBPC ( enc )		3160601	1					
ANR	3160758	Callee	MINBPC		3160601	0					
ANR	3160759	Identifier	MINBPC		3160601	0					
ANR	3160760	ArgumentList	enc		3160601	1					
ANR	3160761	Argument	enc		3160601	0					
ANR	3160762	Identifier	enc		3160601	0					
ANR	3160763	ExpressionStatement	state = inValue	1498:8:39394:39409	3160601	1	True				
ANR	3160764	AssignmentExpression	state = inValue		3160601	0		=			
ANR	3160765	Identifier	state		3160601	0					
ANR	3160766	Identifier	inValue		3160601	1					
ANR	3160767	ExpressionStatement	open = BT_QUOT	1499:8:39419:39433	3160601	2	True				
ANR	3160768	AssignmentExpression	open = BT_QUOT		3160601	0		=			
ANR	3160769	Identifier	open		3160601	0					
ANR	3160770	Identifier	BT_QUOT		3160601	1					
ANR	3160771	ElseStatement	else		3160601	0					
ANR	3160772	IfStatement	if ( open == BT_QUOT )		3160601	0					
ANR	3160773	Condition	open == BT_QUOT	1501:15:39458:39472	3160601	0	True				
ANR	3160774	EqualityExpression	open == BT_QUOT		3160601	0		==			
ANR	3160775	Identifier	open		3160601	0					
ANR	3160776	Identifier	BT_QUOT		3160601	1					
ANR	3160777	CompoundStatement		34:32:948:948	3160601	1					
ANR	3160778	ExpressionStatement	state = other	1502:8:39485:39498	3160601	0	True				
ANR	3160779	AssignmentExpression	state = other		3160601	0		=			
ANR	3160780	Identifier	state		3160601	0					
ANR	3160781	Identifier	other		3160601	1					
ANR	3160782	IfStatement	if ( nAtts < attsMax )		3160601	1					
ANR	3160783	Condition	nAtts < attsMax	1503:12:39512:39526	3160601	0	True				
ANR	3160784	RelationalExpression	nAtts < attsMax		3160601	0		<			
ANR	3160785	Identifier	nAtts		3160601	0					
ANR	3160786	Identifier	attsMax		3160601	1					
ANR	3160787	ExpressionStatement	atts [ nAtts ] . valueEnd = ptr	1504:10:39539:39565	3160601	1	True				
ANR	3160788	AssignmentExpression	atts [ nAtts ] . valueEnd = ptr		3160601	0		=			
ANR	3160789	MemberAccess	atts [ nAtts ] . valueEnd		3160601	0					
ANR	3160790	ArrayIndexing	atts [ nAtts ]		3160601	0					
ANR	3160791	Identifier	atts		3160601	0					
ANR	3160792	Identifier	nAtts		3160601	1					
ANR	3160793	Identifier	valueEnd		3160601	1					
ANR	3160794	Identifier	ptr		3160601	1					
ANR	3160795	ExpressionStatement	nAtts ++	1505:8:39575:39582	3160601	2	True				
ANR	3160796	PostIncDecOperationExpression	nAtts ++		3160601	0					
ANR	3160797	Identifier	nAtts		3160601	0					
ANR	3160798	IncDec	++		3160601	1					
ANR	3160799	BreakStatement	break ;	1507:6:39598:39603	3160601	37	True				
ANR	3160800	Label	case BT_APOS :	1508:4:39609:39621	3160601	38	True				
ANR	3160801	Identifier	BT_APOS		3160601	0					
ANR	3160802	IfStatement	if ( state != inValue )		3160601	39					
ANR	3160803	Condition	state != inValue	1509:10:39633:39648	3160601	0	True				
ANR	3160804	EqualityExpression	state != inValue		3160601	0		!=			
ANR	3160805	Identifier	state		3160601	0					
ANR	3160806	Identifier	inValue		3160601	1					
ANR	3160807	CompoundStatement		42:28:1124:1124	3160601	1					
ANR	3160808	IfStatement	if ( nAtts < attsMax )		3160601	0					
ANR	3160809	Condition	nAtts < attsMax	1510:12:39665:39679	3160601	0	True				
ANR	3160810	RelationalExpression	nAtts < attsMax		3160601	0		<			
ANR	3160811	Identifier	nAtts		3160601	0					
ANR	3160812	Identifier	attsMax		3160601	1					
ANR	3160813	ExpressionStatement	atts [ nAtts ] . valuePtr = ptr + MINBPC ( enc )	1511:10:39692:39732	3160601	1	True				
ANR	3160814	AssignmentExpression	atts [ nAtts ] . valuePtr = ptr + MINBPC ( enc )		3160601	0		=			
ANR	3160815	MemberAccess	atts [ nAtts ] . valuePtr		3160601	0					
ANR	3160816	ArrayIndexing	atts [ nAtts ]		3160601	0					
ANR	3160817	Identifier	atts		3160601	0					
ANR	3160818	Identifier	nAtts		3160601	1					
ANR	3160819	Identifier	valuePtr		3160601	1					
ANR	3160820	AdditiveExpression	ptr + MINBPC ( enc )		3160601	1		+			
ANR	3160821	Identifier	ptr		3160601	0					
ANR	3160822	CallExpression	MINBPC ( enc )		3160601	1					
ANR	3160823	Callee	MINBPC		3160601	0					
ANR	3160824	Identifier	MINBPC		3160601	0					
ANR	3160825	ArgumentList	enc		3160601	1					
ANR	3160826	Argument	enc		3160601	0					
ANR	3160827	Identifier	enc		3160601	0					
ANR	3160828	ExpressionStatement	state = inValue	1512:8:39742:39757	3160601	1	True				
ANR	3160829	AssignmentExpression	state = inValue		3160601	0		=			
ANR	3160830	Identifier	state		3160601	0					
ANR	3160831	Identifier	inValue		3160601	1					
ANR	3160832	ExpressionStatement	open = BT_APOS	1513:8:39767:39781	3160601	2	True				
ANR	3160833	AssignmentExpression	open = BT_APOS		3160601	0		=			
ANR	3160834	Identifier	open		3160601	0					
ANR	3160835	Identifier	BT_APOS		3160601	1					
ANR	3160836	ElseStatement	else		3160601	0					
ANR	3160837	IfStatement	if ( open == BT_APOS )		3160601	0					
ANR	3160838	Condition	open == BT_APOS	1515:15:39806:39820	3160601	0	True				
ANR	3160839	EqualityExpression	open == BT_APOS		3160601	0		==			
ANR	3160840	Identifier	open		3160601	0					
ANR	3160841	Identifier	BT_APOS		3160601	1					
ANR	3160842	CompoundStatement		48:32:1296:1296	3160601	1					
ANR	3160843	ExpressionStatement	state = other	1516:8:39833:39846	3160601	0	True				
ANR	3160844	AssignmentExpression	state = other		3160601	0		=			
ANR	3160845	Identifier	state		3160601	0					
ANR	3160846	Identifier	other		3160601	1					
ANR	3160847	IfStatement	if ( nAtts < attsMax )		3160601	1					
ANR	3160848	Condition	nAtts < attsMax	1517:12:39860:39874	3160601	0	True				
ANR	3160849	RelationalExpression	nAtts < attsMax		3160601	0		<			
ANR	3160850	Identifier	nAtts		3160601	0					
ANR	3160851	Identifier	attsMax		3160601	1					
ANR	3160852	ExpressionStatement	atts [ nAtts ] . valueEnd = ptr	1518:10:39887:39913	3160601	1	True				
ANR	3160853	AssignmentExpression	atts [ nAtts ] . valueEnd = ptr		3160601	0		=			
ANR	3160854	MemberAccess	atts [ nAtts ] . valueEnd		3160601	0					
ANR	3160855	ArrayIndexing	atts [ nAtts ]		3160601	0					
ANR	3160856	Identifier	atts		3160601	0					
ANR	3160857	Identifier	nAtts		3160601	1					
ANR	3160858	Identifier	valueEnd		3160601	1					
ANR	3160859	Identifier	ptr		3160601	1					
ANR	3160860	ExpressionStatement	nAtts ++	1519:8:39923:39930	3160601	2	True				
ANR	3160861	PostIncDecOperationExpression	nAtts ++		3160601	0					
ANR	3160862	Identifier	nAtts		3160601	0					
ANR	3160863	IncDec	++		3160601	1					
ANR	3160864	BreakStatement	break ;	1521:6:39946:39951	3160601	40	True				
ANR	3160865	Label	case BT_AMP :	1522:4:39957:39968	3160601	41	True				
ANR	3160866	Identifier	BT_AMP		3160601	0					
ANR	3160867	IfStatement	if ( nAtts < attsMax )		3160601	42					
ANR	3160868	Condition	nAtts < attsMax	1523:10:39980:39994	3160601	0	True				
ANR	3160869	RelationalExpression	nAtts < attsMax		3160601	0		<			
ANR	3160870	Identifier	nAtts		3160601	0					
ANR	3160871	Identifier	attsMax		3160601	1					
ANR	3160872	ExpressionStatement	atts [ nAtts ] . normalized = 0	1524:8:40005:40031	3160601	1	True				
ANR	3160873	AssignmentExpression	atts [ nAtts ] . normalized = 0		3160601	0		=			
ANR	3160874	MemberAccess	atts [ nAtts ] . normalized		3160601	0					
ANR	3160875	ArrayIndexing	atts [ nAtts ]		3160601	0					
ANR	3160876	Identifier	atts		3160601	0					
ANR	3160877	Identifier	nAtts		3160601	1					
ANR	3160878	Identifier	normalized		3160601	1					
ANR	3160879	PrimaryExpression	0		3160601	1					
ANR	3160880	BreakStatement	break ;	1525:6:40039:40044	3160601	43	True				
ANR	3160881	Label	case BT_S :	1526:4:40050:40059	3160601	44	True				
ANR	3160882	Identifier	BT_S		3160601	0					
ANR	3160883	IfStatement	if ( state == inName )		3160601	45					
ANR	3160884	Condition	state == inName	1527:10:40071:40085	3160601	0	True				
ANR	3160885	EqualityExpression	state == inName		3160601	0		==			
ANR	3160886	Identifier	state		3160601	0					
ANR	3160887	Identifier	inName		3160601	1					
ANR	3160888	ExpressionStatement	state = other	1528:8:40096:40109	3160601	1	True				
ANR	3160889	AssignmentExpression	state = other		3160601	0		=			
ANR	3160890	Identifier	state		3160601	0					
ANR	3160891	Identifier	other		3160601	1					
ANR	3160892	ElseStatement	else		3160601	0					
ANR	3160893	IfStatement	"if ( state == inValue && nAtts < attsMax && atts [ nAtts ] . normalized && ( ptr == atts [ nAtts ] . valuePtr || BYTE_TO_ASCII ( enc , ptr ) != ASCII_SPACE || BYTE_TO_ASCII ( enc , ptr + MINBPC ( enc ) ) == ASCII_SPACE || BYTE_TYPE ( enc , ptr + MINBPC ( enc ) ) == open ) )"		3160601	0					
ANR	3160894	Condition	"state == inValue && nAtts < attsMax && atts [ nAtts ] . normalized && ( ptr == atts [ nAtts ] . valuePtr || BYTE_TO_ASCII ( enc , ptr ) != ASCII_SPACE || BYTE_TO_ASCII ( enc , ptr + MINBPC ( enc ) ) == ASCII_SPACE || BYTE_TYPE ( enc , ptr + MINBPC ( enc ) ) == open )"	1529:15:40126:40464	3160601	0	True				
ANR	3160895	AndExpression	"state == inValue && nAtts < attsMax && atts [ nAtts ] . normalized && ( ptr == atts [ nAtts ] . valuePtr || BYTE_TO_ASCII ( enc , ptr ) != ASCII_SPACE || BYTE_TO_ASCII ( enc , ptr + MINBPC ( enc ) ) == ASCII_SPACE || BYTE_TYPE ( enc , ptr + MINBPC ( enc ) ) == open )"		3160601	0		&&			
ANR	3160896	EqualityExpression	state == inValue		3160601	0		==			
ANR	3160897	Identifier	state		3160601	0					
ANR	3160898	Identifier	inValue		3160601	1					
ANR	3160899	AndExpression	"nAtts < attsMax && atts [ nAtts ] . normalized && ( ptr == atts [ nAtts ] . valuePtr || BYTE_TO_ASCII ( enc , ptr ) != ASCII_SPACE || BYTE_TO_ASCII ( enc , ptr + MINBPC ( enc ) ) == ASCII_SPACE || BYTE_TYPE ( enc , ptr + MINBPC ( enc ) ) == open )"		3160601	1		&&			
ANR	3160900	RelationalExpression	nAtts < attsMax		3160601	0		<			
ANR	3160901	Identifier	nAtts		3160601	0					
ANR	3160902	Identifier	attsMax		3160601	1					
ANR	3160903	AndExpression	"atts [ nAtts ] . normalized && ( ptr == atts [ nAtts ] . valuePtr || BYTE_TO_ASCII ( enc , ptr ) != ASCII_SPACE || BYTE_TO_ASCII ( enc , ptr + MINBPC ( enc ) ) == ASCII_SPACE || BYTE_TYPE ( enc , ptr + MINBPC ( enc ) ) == open )"		3160601	1		&&			
ANR	3160904	MemberAccess	atts [ nAtts ] . normalized		3160601	0					
ANR	3160905	ArrayIndexing	atts [ nAtts ]		3160601	0					
ANR	3160906	Identifier	atts		3160601	0					
ANR	3160907	Identifier	nAtts		3160601	1					
ANR	3160908	Identifier	normalized		3160601	1					
ANR	3160909	OrExpression	"ptr == atts [ nAtts ] . valuePtr || BYTE_TO_ASCII ( enc , ptr ) != ASCII_SPACE || BYTE_TO_ASCII ( enc , ptr + MINBPC ( enc ) ) == ASCII_SPACE || BYTE_TYPE ( enc , ptr + MINBPC ( enc ) ) == open"		3160601	1		||			
ANR	3160910	EqualityExpression	ptr == atts [ nAtts ] . valuePtr		3160601	0		==			
ANR	3160911	Identifier	ptr		3160601	0					
ANR	3160912	MemberAccess	atts [ nAtts ] . valuePtr		3160601	1					
ANR	3160913	ArrayIndexing	atts [ nAtts ]		3160601	0					
ANR	3160914	Identifier	atts		3160601	0					
ANR	3160915	Identifier	nAtts		3160601	1					
ANR	3160916	Identifier	valuePtr		3160601	1					
ANR	3160917	OrExpression	"BYTE_TO_ASCII ( enc , ptr ) != ASCII_SPACE || BYTE_TO_ASCII ( enc , ptr + MINBPC ( enc ) ) == ASCII_SPACE || BYTE_TYPE ( enc , ptr + MINBPC ( enc ) ) == open"		3160601	1		||			
ANR	3160918	EqualityExpression	"BYTE_TO_ASCII ( enc , ptr ) != ASCII_SPACE"		3160601	0		!=			
ANR	3160919	CallExpression	"BYTE_TO_ASCII ( enc , ptr )"		3160601	0					
ANR	3160920	Callee	BYTE_TO_ASCII		3160601	0					
ANR	3160921	Identifier	BYTE_TO_ASCII		3160601	0					
ANR	3160922	ArgumentList	enc		3160601	1					
ANR	3160923	Argument	enc		3160601	0					
ANR	3160924	Identifier	enc		3160601	0					
ANR	3160925	Argument	ptr		3160601	1					
ANR	3160926	Identifier	ptr		3160601	0					
ANR	3160927	Identifier	ASCII_SPACE		3160601	1					
ANR	3160928	OrExpression	"BYTE_TO_ASCII ( enc , ptr + MINBPC ( enc ) ) == ASCII_SPACE || BYTE_TYPE ( enc , ptr + MINBPC ( enc ) ) == open"		3160601	1		||			
ANR	3160929	EqualityExpression	"BYTE_TO_ASCII ( enc , ptr + MINBPC ( enc ) ) == ASCII_SPACE"		3160601	0		==			
ANR	3160930	CallExpression	"BYTE_TO_ASCII ( enc , ptr + MINBPC ( enc ) )"		3160601	0					
ANR	3160931	Callee	BYTE_TO_ASCII		3160601	0					
ANR	3160932	Identifier	BYTE_TO_ASCII		3160601	0					
ANR	3160933	ArgumentList	enc		3160601	1					
ANR	3160934	Argument	enc		3160601	0					
ANR	3160935	Identifier	enc		3160601	0					
ANR	3160936	Argument	ptr + MINBPC ( enc )		3160601	1					
ANR	3160937	AdditiveExpression	ptr + MINBPC ( enc )		3160601	0		+			
ANR	3160938	Identifier	ptr		3160601	0					
ANR	3160939	CallExpression	MINBPC ( enc )		3160601	1					
ANR	3160940	Callee	MINBPC		3160601	0					
ANR	3160941	Identifier	MINBPC		3160601	0					
ANR	3160942	ArgumentList	enc		3160601	1					
ANR	3160943	Argument	enc		3160601	0					
ANR	3160944	Identifier	enc		3160601	0					
ANR	3160945	Identifier	ASCII_SPACE		3160601	1					
ANR	3160946	EqualityExpression	"BYTE_TYPE ( enc , ptr + MINBPC ( enc ) ) == open"		3160601	1		==			
ANR	3160947	CallExpression	"BYTE_TYPE ( enc , ptr + MINBPC ( enc ) )"		3160601	0					
ANR	3160948	Callee	BYTE_TYPE		3160601	0					
ANR	3160949	Identifier	BYTE_TYPE		3160601	0					
ANR	3160950	ArgumentList	enc		3160601	1					
ANR	3160951	Argument	enc		3160601	0					
ANR	3160952	Identifier	enc		3160601	0					
ANR	3160953	Argument	ptr + MINBPC ( enc )		3160601	1					
ANR	3160954	AdditiveExpression	ptr + MINBPC ( enc )		3160601	0		+			
ANR	3160955	Identifier	ptr		3160601	0					
ANR	3160956	CallExpression	MINBPC ( enc )		3160601	1					
ANR	3160957	Callee	MINBPC		3160601	0					
ANR	3160958	Identifier	MINBPC		3160601	0					
ANR	3160959	ArgumentList	enc		3160601	1					
ANR	3160960	Argument	enc		3160601	0					
ANR	3160961	Identifier	enc		3160601	0					
ANR	3160962	Identifier	open		3160601	1					
ANR	3160963	ExpressionStatement	atts [ nAtts ] . normalized = 0	1536:8:40475:40501	3160601	1	True				
ANR	3160964	AssignmentExpression	atts [ nAtts ] . normalized = 0		3160601	0		=			
ANR	3160965	MemberAccess	atts [ nAtts ] . normalized		3160601	0					
ANR	3160966	ArrayIndexing	atts [ nAtts ]		3160601	0					
ANR	3160967	Identifier	atts		3160601	0					
ANR	3160968	Identifier	nAtts		3160601	1					
ANR	3160969	Identifier	normalized		3160601	1					
ANR	3160970	PrimaryExpression	0		3160601	1					
ANR	3160971	BreakStatement	break ;	1537:6:40509:40514	3160601	46	True				
ANR	3160972	Label	case BT_CR :	1538:4:40520:40530	3160601	47	True				
ANR	3160973	Identifier	BT_CR		3160601	0					
ANR	3160974	Label	case BT_LF :	1538:16:40532:40542	3160601	48	True				
ANR	3160975	Identifier	BT_LF		3160601	0					
ANR	3160976	IfStatement	if ( state == inName )		3160601	49					
ANR	3160977	Condition	state == inName	1541:10:40691:40705	3160601	0	True				
ANR	3160978	EqualityExpression	state == inName		3160601	0		==			
ANR	3160979	Identifier	state		3160601	0					
ANR	3160980	Identifier	inName		3160601	1					
ANR	3160981	ExpressionStatement	state = other	1542:8:40716:40729	3160601	1	True				
ANR	3160982	AssignmentExpression	state = other		3160601	0		=			
ANR	3160983	Identifier	state		3160601	0					
ANR	3160984	Identifier	other		3160601	1					
ANR	3160985	ElseStatement	else		3160601	0					
ANR	3160986	IfStatement	if ( state == inValue && nAtts < attsMax )		3160601	0					
ANR	3160987	Condition	state == inValue && nAtts < attsMax	1543:15:40746:40780	3160601	0	True				
ANR	3160988	AndExpression	state == inValue && nAtts < attsMax		3160601	0		&&			
ANR	3160989	EqualityExpression	state == inValue		3160601	0		==			
ANR	3160990	Identifier	state		3160601	0					
ANR	3160991	Identifier	inValue		3160601	1					
ANR	3160992	RelationalExpression	nAtts < attsMax		3160601	1		<			
ANR	3160993	Identifier	nAtts		3160601	0					
ANR	3160994	Identifier	attsMax		3160601	1					
ANR	3160995	ExpressionStatement	atts [ nAtts ] . normalized = 0	1544:8:40791:40817	3160601	1	True				
ANR	3160996	AssignmentExpression	atts [ nAtts ] . normalized = 0		3160601	0		=			
ANR	3160997	MemberAccess	atts [ nAtts ] . normalized		3160601	0					
ANR	3160998	ArrayIndexing	atts [ nAtts ]		3160601	0					
ANR	3160999	Identifier	atts		3160601	0					
ANR	3161000	Identifier	nAtts		3160601	1					
ANR	3161001	Identifier	normalized		3160601	1					
ANR	3161002	PrimaryExpression	0		3160601	1					
ANR	3161003	BreakStatement	break ;	1545:6:40825:40830	3160601	50	True				
ANR	3161004	Label	case BT_GT :	1546:4:40836:40846	3160601	51	True				
ANR	3161005	Identifier	BT_GT		3160601	0					
ANR	3161006	Label	case BT_SOL :	1547:4:40852:40863	3160601	52	True				
ANR	3161007	Identifier	BT_SOL		3160601	0					
ANR	3161008	IfStatement	if ( state != inValue )		3160601	53					
ANR	3161009	Condition	state != inValue	1548:10:40875:40890	3160601	0	True				
ANR	3161010	EqualityExpression	state != inValue		3160601	0		!=			
ANR	3161011	Identifier	state		3160601	0					
ANR	3161012	Identifier	inValue		3160601	1					
ANR	3161013	ReturnStatement	return nAtts ;	1549:8:40901:40913	3160601	1	True				
ANR	3161014	Identifier	nAtts		3160601	0					
ANR	3161015	BreakStatement	break ;	1550:6:40921:40926	3160601	54	True				
ANR	3161016	Label	default :	1551:4:40932:40939	3160601	55	True				
ANR	3161017	Identifier	default		3160601	0					
ANR	3161018	BreakStatement	break ;	1552:6:40947:40952	3160601	56	True				
ANR	3161019	ReturnType	static int PTRCALL PREFIX		3160601	1					
ANR	3161020	Identifier	( getAtts )		3160601	2					
ANR	3161021	Identifier	getAtts		3160601	3					
ANR	3161022	ParameterList	"const ENCODING * enc , const char * ptr , int attsMax , ATTRIBUTE * atts"		3160601	4					
ANR	3161023	Parameter	const ENCODING * enc	1466:16:38442:38460	3160601	0	True				
ANR	3161024	ParameterType	const ENCODING *		3160601	0					
ANR	3161025	Identifier	enc		3160601	1					
ANR	3161026	Parameter	const char * ptr	1466:37:38463:38477	3160601	1	True				
ANR	3161027	ParameterType	const char *		3160601	0					
ANR	3161028	Identifier	ptr		3160601	1					
ANR	3161029	Parameter	int attsMax	1467:16:38496:38506	3160601	2	True				
ANR	3161030	ParameterType	int		3160601	0					
ANR	3161031	Identifier	attsMax		3160601	1					
ANR	3161032	Parameter	ATTRIBUTE * atts	1467:29:38509:38523	3160601	3	True				
ANR	3161033	ParameterType	ATTRIBUTE *		3160601	0					
ANR	3161034	Identifier	atts		3160601	1					
ANR	3161035	CFGEntryNode	ENTRY		3160601		True				
ANR	3161036	CFGExitNode	EXIT		3160601		True				
ANR	3161037	InfiniteForNode	true		3160601		True				
ANR	3161038	Symbol	inValue		3160601						
ANR	3161039	Symbol	other		3160601						
ANR	3161040	Symbol	ASCII_SPACE		3160601						
ANR	3161041	Symbol	atts [ nAtts ] . name		3160601						
ANR	3161042	Symbol	atts [ nAtts ] . normalized		3160601						
ANR	3161043	Symbol	* nAtts		3160601						
ANR	3161044	Symbol	BT_QUOT		3160601						
ANR	3161045	Symbol	BYTE_TYPE		3160601						
ANR	3161046	Symbol	BT_APOS		3160601						
ANR	3161047	Symbol	atts [ nAtts ] . valuePtr		3160601						
ANR	3161048	Symbol	nAtts		3160601						
ANR	3161049	Symbol	MINBPC		3160601						
ANR	3161050	Symbol	n		3160601						
ANR	3161051	Symbol	ptr		3160601						
ANR	3161052	Symbol	inName		3160601						
ANR	3161053	Symbol	BYTE_TO_ASCII		3160601						
ANR	3161054	Symbol	attsMax		3160601						
ANR	3161055	Symbol	* atts		3160601						
ANR	3161056	Symbol	enc		3160601						
ANR	3161057	Symbol	state		3160601						
ANR	3161058	Symbol	atts [ nAtts ] . valueEnd		3160601						
ANR	3161059	Symbol	open		3160601						
ANR	3161060	Symbol	atts		3160601						
ANR	3161061	Function	charRefNumber	1558:0:40987:42241							
ANR	3161062	FunctionDef	"charRefNumber (const ENCODING * UNUSED_P ( enc ) , const char * ptr)"		3161061	0					
ANR	3161063	CompoundStatement		1560:0:41080:42241	3161061	0					
ANR	3161064	IdentifierDeclStatement	int result = 0 ;	1561:2:41084:41098	3161061	0	True				
ANR	3161065	IdentifierDecl	result = 0		3161061	0					
ANR	3161066	IdentifierDeclType	int		3161061	0					
ANR	3161067	Identifier	result		3161061	1					
ANR	3161068	AssignmentExpression	result = 0		3161061	2		=			
ANR	3161069	Identifier	result		3161061	0					
ANR	3161070	PrimaryExpression	0		3161061	1					
ANR	3161071	ExpressionStatement	ptr += 2 * MINBPC ( enc )	1563:2:41118:41138	3161061	1	True				
ANR	3161072	AssignmentExpression	ptr += 2 * MINBPC ( enc )		3161061	0		+=			
ANR	3161073	Identifier	ptr		3161061	0					
ANR	3161074	MultiplicativeExpression	2 * MINBPC ( enc )		3161061	1		*			
ANR	3161075	PrimaryExpression	2		3161061	0					
ANR	3161076	CallExpression	MINBPC ( enc )		3161061	1					
ANR	3161077	Callee	MINBPC		3161061	0					
ANR	3161078	Identifier	MINBPC		3161061	0					
ANR	3161079	ArgumentList	enc		3161061	1					
ANR	3161080	Argument	enc		3161061	0					
ANR	3161081	Identifier	enc		3161061	0					
ANR	3161082	IfStatement	"if ( CHAR_MATCHES ( enc , ptr , ASCII_x ) )"		3161061	2					
ANR	3161083	Condition	"CHAR_MATCHES ( enc , ptr , ASCII_x )"	1564:6:41146:41176	3161061	0	True				
ANR	3161084	CallExpression	"CHAR_MATCHES ( enc , ptr , ASCII_x )"		3161061	0					
ANR	3161085	Callee	CHAR_MATCHES		3161061	0					
ANR	3161086	Identifier	CHAR_MATCHES		3161061	0					
ANR	3161087	ArgumentList	enc		3161061	1					
ANR	3161088	Argument	enc		3161061	0					
ANR	3161089	Identifier	enc		3161061	0					
ANR	3161090	Argument	ptr		3161061	1					
ANR	3161091	Identifier	ptr		3161061	0					
ANR	3161092	Argument	ASCII_x		3161061	2					
ANR	3161093	Identifier	ASCII_x		3161061	0					
ANR	3161094	CompoundStatement		5:39:98:98	3161061	1					
ANR	3161095	ForStatement	"for ( ptr += MINBPC ( enc ) ; ! CHAR_MATCHES ( enc , ptr , ASCII_SEMI ) ; ptr += MINBPC ( enc ) )"		3161061	0					
ANR	3161096	ForInit	ptr += MINBPC ( enc ) ;	1565:9:41190:41208	3161061	0	True				
ANR	3161097	AssignmentExpression	ptr += MINBPC ( enc )		3161061	0		+=			
ANR	3161098	Identifier	ptr		3161061	0					
ANR	3161099	CallExpression	MINBPC ( enc )		3161061	1					
ANR	3161100	Callee	MINBPC		3161061	0					
ANR	3161101	Identifier	MINBPC		3161061	0					
ANR	3161102	ArgumentList	enc		3161061	1					
ANR	3161103	Argument	enc		3161061	0					
ANR	3161104	Identifier	enc		3161061	0					
ANR	3161105	Condition	"! CHAR_MATCHES ( enc , ptr , ASCII_SEMI )"	1566:9:41219:41253	3161061	1	True				
ANR	3161106	UnaryOperationExpression	"! CHAR_MATCHES ( enc , ptr , ASCII_SEMI )"		3161061	0					
ANR	3161107	UnaryOperator	!		3161061	0					
ANR	3161108	CallExpression	"CHAR_MATCHES ( enc , ptr , ASCII_SEMI )"		3161061	1					
ANR	3161109	Callee	CHAR_MATCHES		3161061	0					
ANR	3161110	Identifier	CHAR_MATCHES		3161061	0					
ANR	3161111	ArgumentList	enc		3161061	1					
ANR	3161112	Argument	enc		3161061	0					
ANR	3161113	Identifier	enc		3161061	0					
ANR	3161114	Argument	ptr		3161061	1					
ANR	3161115	Identifier	ptr		3161061	0					
ANR	3161116	Argument	ASCII_SEMI		3161061	2					
ANR	3161117	Identifier	ASCII_SEMI		3161061	0					
ANR	3161118	AssignmentExpression	ptr += MINBPC ( enc )	1567:9:41265:41282	3161061	2	True	+=			
ANR	3161119	Identifier	ptr		3161061	0					
ANR	3161120	CallExpression	MINBPC ( enc )		3161061	1					
ANR	3161121	Callee	MINBPC		3161061	0					
ANR	3161122	Identifier	MINBPC		3161061	0					
ANR	3161123	ArgumentList	enc		3161061	1					
ANR	3161124	Argument	enc		3161061	0					
ANR	3161125	Identifier	enc		3161061	0					
ANR	3161126	CompoundStatement		9:6:212:243	3161061	3					
ANR	3161127	IdentifierDeclStatement	"int c = BYTE_TO_ASCII ( enc , ptr ) ;"	1568:6:41293:41324	3161061	0	True				
ANR	3161128	IdentifierDecl	"c = BYTE_TO_ASCII ( enc , ptr )"		3161061	0					
ANR	3161129	IdentifierDeclType	int		3161061	0					
ANR	3161130	Identifier	c		3161061	1					
ANR	3161131	AssignmentExpression	"c = BYTE_TO_ASCII ( enc , ptr )"		3161061	2		=			
ANR	3161132	Identifier	c		3161061	0					
ANR	3161133	CallExpression	"BYTE_TO_ASCII ( enc , ptr )"		3161061	1					
ANR	3161134	Callee	BYTE_TO_ASCII		3161061	0					
ANR	3161135	Identifier	BYTE_TO_ASCII		3161061	0					
ANR	3161136	ArgumentList	enc		3161061	1					
ANR	3161137	Argument	enc		3161061	0					
ANR	3161138	Identifier	enc		3161061	0					
ANR	3161139	Argument	ptr		3161061	1					
ANR	3161140	Identifier	ptr		3161061	0					
ANR	3161141	SwitchStatement	switch ( c )		3161061	1					
ANR	3161142	Condition	c	1569:14:41340:41340	3161061	0	True				
ANR	3161143	Identifier	c		3161061	0					
ANR	3161144	CompoundStatement		10:17:262:262	3161061	1					
ANR	3161145	Label	case ASCII_0 :	1570:6:41351:41363	3161061	0	True				
ANR	3161146	Identifier	ASCII_0		3161061	0					
ANR	3161147	Label	case ASCII_1 :	1570:20:41365:41377	3161061	1	True				
ANR	3161148	Identifier	ASCII_1		3161061	0					
ANR	3161149	Label	case ASCII_2 :	1570:34:41379:41391	3161061	2	True				
ANR	3161150	Identifier	ASCII_2		3161061	0					
ANR	3161151	Label	case ASCII_3 :	1570:48:41393:41405	3161061	3	True				
ANR	3161152	Identifier	ASCII_3		3161061	0					
ANR	3161153	Label	case ASCII_4 :	1570:62:41407:41419	3161061	4	True				
ANR	3161154	Identifier	ASCII_4		3161061	0					
ANR	3161155	Label	case ASCII_5 :	1571:6:41427:41439	3161061	5	True				
ANR	3161156	Identifier	ASCII_5		3161061	0					
ANR	3161157	Label	case ASCII_6 :	1571:20:41441:41453	3161061	6	True				
ANR	3161158	Identifier	ASCII_6		3161061	0					
ANR	3161159	Label	case ASCII_7 :	1571:34:41455:41467	3161061	7	True				
ANR	3161160	Identifier	ASCII_7		3161061	0					
ANR	3161161	Label	case ASCII_8 :	1571:48:41469:41481	3161061	8	True				
ANR	3161162	Identifier	ASCII_8		3161061	0					
ANR	3161163	Label	case ASCII_9 :	1571:62:41483:41495	3161061	9	True				
ANR	3161164	Identifier	ASCII_9		3161061	0					
ANR	3161165	ExpressionStatement	result <<= 4	1572:8:41505:41517	3161061	10	True				
ANR	3161166	AssignmentExpression	result <<= 4		3161061	0		<<=			
ANR	3161167	Identifier	result		3161061	0					
ANR	3161168	PrimaryExpression	4		3161061	1					
ANR	3161169	ExpressionStatement	result |= ( c - ASCII_0 )	1573:8:41527:41550	3161061	11	True				
ANR	3161170	AssignmentExpression	result |= ( c - ASCII_0 )		3161061	0		|=			
ANR	3161171	Identifier	result		3161061	0					
ANR	3161172	AdditiveExpression	c - ASCII_0		3161061	1		-			
ANR	3161173	Identifier	c		3161061	0					
ANR	3161174	Identifier	ASCII_0		3161061	1					
ANR	3161175	BreakStatement	break ;	1574:8:41560:41565	3161061	12	True				
ANR	3161176	Label	case ASCII_A :	1575:6:41573:41585	3161061	13	True				
ANR	3161177	Identifier	ASCII_A		3161061	0					
ANR	3161178	Label	case ASCII_B :	1575:20:41587:41599	3161061	14	True				
ANR	3161179	Identifier	ASCII_B		3161061	0					
ANR	3161180	Label	case ASCII_C :	1575:34:41601:41613	3161061	15	True				
ANR	3161181	Identifier	ASCII_C		3161061	0					
ANR	3161182	Label	case ASCII_D :	1576:6:41621:41633	3161061	16	True				
ANR	3161183	Identifier	ASCII_D		3161061	0					
ANR	3161184	Label	case ASCII_E :	1576:20:41635:41647	3161061	17	True				
ANR	3161185	Identifier	ASCII_E		3161061	0					
ANR	3161186	Label	case ASCII_F :	1576:34:41649:41661	3161061	18	True				
ANR	3161187	Identifier	ASCII_F		3161061	0					
ANR	3161188	ExpressionStatement	result <<= 4	1577:8:41671:41683	3161061	19	True				
ANR	3161189	AssignmentExpression	result <<= 4		3161061	0		<<=			
ANR	3161190	Identifier	result		3161061	0					
ANR	3161191	PrimaryExpression	4		3161061	1					
ANR	3161192	ExpressionStatement	result += 10 + ( c - ASCII_A )	1578:8:41693:41721	3161061	20	True				
ANR	3161193	AssignmentExpression	result += 10 + ( c - ASCII_A )		3161061	0		+=			
ANR	3161194	Identifier	result		3161061	0					
ANR	3161195	AdditiveExpression	10 + ( c - ASCII_A )		3161061	1		+			
ANR	3161196	PrimaryExpression	10		3161061	0					
ANR	3161197	AdditiveExpression	c - ASCII_A		3161061	1		-			
ANR	3161198	Identifier	c		3161061	0					
ANR	3161199	Identifier	ASCII_A		3161061	1					
ANR	3161200	BreakStatement	break ;	1579:8:41731:41736	3161061	21	True				
ANR	3161201	Label	case ASCII_a :	1580:6:41744:41756	3161061	22	True				
ANR	3161202	Identifier	ASCII_a		3161061	0					
ANR	3161203	Label	case ASCII_b :	1580:20:41758:41770	3161061	23	True				
ANR	3161204	Identifier	ASCII_b		3161061	0					
ANR	3161205	Label	case ASCII_c :	1580:34:41772:41784	3161061	24	True				
ANR	3161206	Identifier	ASCII_c		3161061	0					
ANR	3161207	Label	case ASCII_d :	1581:6:41792:41804	3161061	25	True				
ANR	3161208	Identifier	ASCII_d		3161061	0					
ANR	3161209	Label	case ASCII_e :	1581:20:41806:41818	3161061	26	True				
ANR	3161210	Identifier	ASCII_e		3161061	0					
ANR	3161211	Label	case ASCII_f :	1581:34:41820:41832	3161061	27	True				
ANR	3161212	Identifier	ASCII_f		3161061	0					
ANR	3161213	ExpressionStatement	result <<= 4	1582:8:41842:41854	3161061	28	True				
ANR	3161214	AssignmentExpression	result <<= 4		3161061	0		<<=			
ANR	3161215	Identifier	result		3161061	0					
ANR	3161216	PrimaryExpression	4		3161061	1					
ANR	3161217	ExpressionStatement	result += 10 + ( c - ASCII_a )	1583:8:41864:41892	3161061	29	True				
ANR	3161218	AssignmentExpression	result += 10 + ( c - ASCII_a )		3161061	0		+=			
ANR	3161219	Identifier	result		3161061	0					
ANR	3161220	AdditiveExpression	10 + ( c - ASCII_a )		3161061	1		+			
ANR	3161221	PrimaryExpression	10		3161061	0					
ANR	3161222	AdditiveExpression	c - ASCII_a		3161061	1		-			
ANR	3161223	Identifier	c		3161061	0					
ANR	3161224	Identifier	ASCII_a		3161061	1					
ANR	3161225	BreakStatement	break ;	1584:8:41902:41907	3161061	30	True				
ANR	3161226	IfStatement	if ( result >= 0x110000 )		3161061	2					
ANR	3161227	Condition	result >= 0x110000	1586:10:41927:41944	3161061	0	True				
ANR	3161228	RelationalExpression	result >= 0x110000		3161061	0		>=			
ANR	3161229	Identifier	result		3161061	0					
ANR	3161230	PrimaryExpression	0x110000		3161061	1					
ANR	3161231	ReturnStatement	return - 1 ;	1587:8:41955:41964	3161061	1	True				
ANR	3161232	UnaryOperationExpression	- 1		3161061	0					
ANR	3161233	UnaryOperator	-		3161061	0					
ANR	3161234	PrimaryExpression	1		3161061	1					
ANR	3161235	ElseStatement	else		3161061	0					
ANR	3161236	CompoundStatement		31:7:902:902	3161061	0					
ANR	3161237	ForStatement	"for ( ; ! CHAR_MATCHES ( enc , ptr , ASCII_SEMI ) ; ptr += MINBPC ( enc ) )"		3161061	0					
ANR	3161238	Condition	"! CHAR_MATCHES ( enc , ptr , ASCII_SEMI )"	1591:11:41996:42030	3161061	0	True				
ANR	3161239	UnaryOperationExpression	"! CHAR_MATCHES ( enc , ptr , ASCII_SEMI )"		3161061	0					
ANR	3161240	UnaryOperator	!		3161061	0					
ANR	3161241	CallExpression	"CHAR_MATCHES ( enc , ptr , ASCII_SEMI )"		3161061	1					
ANR	3161242	Callee	CHAR_MATCHES		3161061	0					
ANR	3161243	Identifier	CHAR_MATCHES		3161061	0					
ANR	3161244	ArgumentList	enc		3161061	1					
ANR	3161245	Argument	enc		3161061	0					
ANR	3161246	Identifier	enc		3161061	0					
ANR	3161247	Argument	ptr		3161061	1					
ANR	3161248	Identifier	ptr		3161061	0					
ANR	3161249	Argument	ASCII_SEMI		3161061	2					
ANR	3161250	Identifier	ASCII_SEMI		3161061	0					
ANR	3161251	AssignmentExpression	ptr += MINBPC ( enc )	1591:48:42033:42050	3161061	1	True	+=			
ANR	3161252	Identifier	ptr		3161061	0					
ANR	3161253	CallExpression	MINBPC ( enc )		3161061	1					
ANR	3161254	Callee	MINBPC		3161061	0					
ANR	3161255	Identifier	MINBPC		3161061	0					
ANR	3161256	ArgumentList	enc		3161061	1					
ANR	3161257	Argument	enc		3161061	0					
ANR	3161258	Identifier	enc		3161061	0					
ANR	3161259	CompoundStatement		33:6:980:1011	3161061	2					
ANR	3161260	IdentifierDeclStatement	"int c = BYTE_TO_ASCII ( enc , ptr ) ;"	1592:6:42061:42092	3161061	0	True				
ANR	3161261	IdentifierDecl	"c = BYTE_TO_ASCII ( enc , ptr )"		3161061	0					
ANR	3161262	IdentifierDeclType	int		3161061	0					
ANR	3161263	Identifier	c		3161061	1					
ANR	3161264	AssignmentExpression	"c = BYTE_TO_ASCII ( enc , ptr )"		3161061	2		=			
ANR	3161265	Identifier	c		3161061	0					
ANR	3161266	CallExpression	"BYTE_TO_ASCII ( enc , ptr )"		3161061	1					
ANR	3161267	Callee	BYTE_TO_ASCII		3161061	0					
ANR	3161268	Identifier	BYTE_TO_ASCII		3161061	0					
ANR	3161269	ArgumentList	enc		3161061	1					
ANR	3161270	Argument	enc		3161061	0					
ANR	3161271	Identifier	enc		3161061	0					
ANR	3161272	Argument	ptr		3161061	1					
ANR	3161273	Identifier	ptr		3161061	0					
ANR	3161274	ExpressionStatement	result *= 10	1593:6:42100:42112	3161061	1	True				
ANR	3161275	AssignmentExpression	result *= 10		3161061	0		*=			
ANR	3161276	Identifier	result		3161061	0					
ANR	3161277	PrimaryExpression	10		3161061	1					
ANR	3161278	ExpressionStatement	result += ( c - ASCII_0 )	1594:6:42120:42143	3161061	2	True				
ANR	3161279	AssignmentExpression	result += ( c - ASCII_0 )		3161061	0		+=			
ANR	3161280	Identifier	result		3161061	0					
ANR	3161281	AdditiveExpression	c - ASCII_0		3161061	1		-			
ANR	3161282	Identifier	c		3161061	0					
ANR	3161283	Identifier	ASCII_0		3161061	1					
ANR	3161284	IfStatement	if ( result >= 0x110000 )		3161061	3					
ANR	3161285	Condition	result >= 0x110000	1595:10:42155:42172	3161061	0	True				
ANR	3161286	RelationalExpression	result >= 0x110000		3161061	0		>=			
ANR	3161287	Identifier	result		3161061	0					
ANR	3161288	PrimaryExpression	0x110000		3161061	1					
ANR	3161289	ReturnStatement	return - 1 ;	1596:8:42183:42192	3161061	1	True				
ANR	3161290	UnaryOperationExpression	- 1		3161061	0					
ANR	3161291	UnaryOperator	-		3161061	0					
ANR	3161292	PrimaryExpression	1		3161061	1					
ANR	3161293	ReturnStatement	return checkCharRefNumber ( result ) ;	1599:2:42206:42239	3161061	3	True				
ANR	3161294	CallExpression	checkCharRefNumber ( result )		3161061	0					
ANR	3161295	Callee	checkCharRefNumber		3161061	0					
ANR	3161296	Identifier	checkCharRefNumber		3161061	0					
ANR	3161297	ArgumentList	result		3161061	1					
ANR	3161298	Argument	result		3161061	0					
ANR	3161299	Identifier	result		3161061	0					
ANR	3161300	ReturnType	static int PTRFASTCALL PREFIX		3161061	1					
ANR	3161301	Identifier	( charRefNumber )		3161061	2					
ANR	3161302	Identifier	charRefNumber		3161061	3					
ANR	3161303	ParameterList	"const ENCODING * UNUSED_P ( enc ) , const char * ptr"		3161061	4					
ANR	3161304	Parameter	const ENCODING * UNUSED_P ( enc )	1559:22:41032:41060	3161061	0	True				
ANR	3161305	ParameterType	const ENCODING * ( enc )		3161061	0					
ANR	3161306	Identifier	UNUSED_P		3161061	1					
ANR	3161307	Parameter	const char * ptr	1559:53:41063:41077	3161061	1	True				
ANR	3161308	ParameterType	const char *		3161061	0					
ANR	3161309	Identifier	ptr		3161061	1					
ANR	3161310	CFGEntryNode	ENTRY		3161061		True				
ANR	3161311	CFGExitNode	EXIT		3161061		True				
ANR	3161312	Symbol	UNUSED_P		3161061						
ANR	3161313	Symbol	ASCII_SEMI		3161061						
ANR	3161314	Symbol	ASCII_x		3161061						
ANR	3161315	Symbol	c		3161061						
ANR	3161316	Symbol	checkCharRefNumber		3161061						
ANR	3161317	Symbol	ASCII_0		3161061						
ANR	3161318	Symbol	MINBPC		3161061						
ANR	3161319	Symbol	ptr		3161061						
ANR	3161320	Symbol	BYTE_TO_ASCII		3161061						
ANR	3161321	Symbol	result		3161061						
ANR	3161322	Symbol	CHAR_MATCHES		3161061						
ANR	3161323	Symbol	ASCII_A		3161061						
ANR	3161324	Symbol	ASCII_a		3161061						
ANR	3161325	Symbol	enc		3161061						
ANR	3161326	Function	predefinedEntityName	1602:0:42244:43575							
ANR	3161327	FunctionDef	"predefinedEntityName (const ENCODING * UNUSED_P ( enc ) , const char * ptr , const char * end)"		3161326	0					
ANR	3161328	CompoundStatement		1605:0:42386:43575	3161326	0					
ANR	3161329	SwitchStatement	switch ( ( end - ptr ) / MINBPC ( enc ) )		3161326	0					
ANR	3161330	Condition	( end - ptr ) / MINBPC ( enc )	1606:10:42398:42420	3161326	0	True				
ANR	3161331	MultiplicativeExpression	( end - ptr ) / MINBPC ( enc )		3161326	0		/			
ANR	3161332	AdditiveExpression	end - ptr		3161326	0		-			
ANR	3161333	Identifier	end		3161326	0					
ANR	3161334	Identifier	ptr		3161326	1					
ANR	3161335	CallExpression	MINBPC ( enc )		3161326	1					
ANR	3161336	Callee	MINBPC		3161326	0					
ANR	3161337	Identifier	MINBPC		3161326	0					
ANR	3161338	ArgumentList	enc		3161326	1					
ANR	3161339	Argument	enc		3161326	0					
ANR	3161340	Identifier	enc		3161326	0					
ANR	3161341	CompoundStatement		2:35:36:36	3161326	1					
ANR	3161342	Label	case 2 :	1607:2:42427:42433	3161326	0	True				
ANR	3161343	IfStatement	"if ( CHAR_MATCHES ( enc , ptr + MINBPC ( enc ) , ASCII_t ) )"		3161326	1					
ANR	3161344	Condition	"CHAR_MATCHES ( enc , ptr + MINBPC ( enc ) , ASCII_t )"	1608:8:42443:42487	3161326	0	True				
ANR	3161345	CallExpression	"CHAR_MATCHES ( enc , ptr + MINBPC ( enc ) , ASCII_t )"		3161326	0					
ANR	3161346	Callee	CHAR_MATCHES		3161326	0					
ANR	3161347	Identifier	CHAR_MATCHES		3161326	0					
ANR	3161348	ArgumentList	enc		3161326	1					
ANR	3161349	Argument	enc		3161326	0					
ANR	3161350	Identifier	enc		3161326	0					
ANR	3161351	Argument	ptr + MINBPC ( enc )		3161326	1					
ANR	3161352	AdditiveExpression	ptr + MINBPC ( enc )		3161326	0		+			
ANR	3161353	Identifier	ptr		3161326	0					
ANR	3161354	CallExpression	MINBPC ( enc )		3161326	1					
ANR	3161355	Callee	MINBPC		3161326	0					
ANR	3161356	Identifier	MINBPC		3161326	0					
ANR	3161357	ArgumentList	enc		3161326	1					
ANR	3161358	Argument	enc		3161326	0					
ANR	3161359	Identifier	enc		3161326	0					
ANR	3161360	Argument	ASCII_t		3161326	2					
ANR	3161361	Identifier	ASCII_t		3161326	0					
ANR	3161362	CompoundStatement		4:55:103:103	3161326	1					
ANR	3161363	SwitchStatement	"switch ( BYTE_TO_ASCII ( enc , ptr ) )"		3161326	0					
ANR	3161364	Condition	"BYTE_TO_ASCII ( enc , ptr )"	1609:14:42506:42528	3161326	0	True				
ANR	3161365	CallExpression	"BYTE_TO_ASCII ( enc , ptr )"		3161326	0					
ANR	3161366	Callee	BYTE_TO_ASCII		3161326	0					
ANR	3161367	Identifier	BYTE_TO_ASCII		3161326	0					
ANR	3161368	ArgumentList	enc		3161326	1					
ANR	3161369	Argument	enc		3161326	0					
ANR	3161370	Identifier	enc		3161326	0					
ANR	3161371	Argument	ptr		3161326	1					
ANR	3161372	Identifier	ptr		3161326	0					
ANR	3161373	CompoundStatement		5:39:144:144	3161326	1					
ANR	3161374	Label	case ASCII_l :	1610:6:42539:42551	3161326	0	True				
ANR	3161375	Identifier	ASCII_l		3161326	0					
ANR	3161376	ReturnStatement	return ASCII_LT ;	1611:8:42561:42576	3161326	1	True				
ANR	3161377	Identifier	ASCII_LT		3161326	0					
ANR	3161378	Label	case ASCII_g :	1612:6:42584:42596	3161326	2	True				
ANR	3161379	Identifier	ASCII_g		3161326	0					
ANR	3161380	ReturnStatement	return ASCII_GT ;	1613:8:42606:42621	3161326	3	True				
ANR	3161381	Identifier	ASCII_GT		3161326	0					
ANR	3161382	BreakStatement	break ;	1616:4:42641:42646	3161326	2	True				
ANR	3161383	Label	case 3 :	1617:2:42650:42656	3161326	3	True				
ANR	3161384	IfStatement	"if ( CHAR_MATCHES ( enc , ptr , ASCII_a ) )"		3161326	4					
ANR	3161385	Condition	"CHAR_MATCHES ( enc , ptr , ASCII_a )"	1618:8:42666:42696	3161326	0	True				
ANR	3161386	CallExpression	"CHAR_MATCHES ( enc , ptr , ASCII_a )"		3161326	0					
ANR	3161387	Callee	CHAR_MATCHES		3161326	0					
ANR	3161388	Identifier	CHAR_MATCHES		3161326	0					
ANR	3161389	ArgumentList	enc		3161326	1					
ANR	3161390	Argument	enc		3161326	0					
ANR	3161391	Identifier	enc		3161326	0					
ANR	3161392	Argument	ptr		3161326	1					
ANR	3161393	Identifier	ptr		3161326	0					
ANR	3161394	Argument	ASCII_a		3161326	2					
ANR	3161395	Identifier	ASCII_a		3161326	0					
ANR	3161396	CompoundStatement		14:41:312:312	3161326	1					
ANR	3161397	ExpressionStatement	ptr += MINBPC ( enc )	1619:6:42707:42725	3161326	0	True				
ANR	3161398	AssignmentExpression	ptr += MINBPC ( enc )		3161326	0		+=			
ANR	3161399	Identifier	ptr		3161326	0					
ANR	3161400	CallExpression	MINBPC ( enc )		3161326	1					
ANR	3161401	Callee	MINBPC		3161326	0					
ANR	3161402	Identifier	MINBPC		3161326	0					
ANR	3161403	ArgumentList	enc		3161326	1					
ANR	3161404	Argument	enc		3161326	0					
ANR	3161405	Identifier	enc		3161326	0					
ANR	3161406	IfStatement	"if ( CHAR_MATCHES ( enc , ptr , ASCII_m ) )"		3161326	1					
ANR	3161407	Condition	"CHAR_MATCHES ( enc , ptr , ASCII_m )"	1620:10:42737:42767	3161326	0	True				
ANR	3161408	CallExpression	"CHAR_MATCHES ( enc , ptr , ASCII_m )"		3161326	0					
ANR	3161409	Callee	CHAR_MATCHES		3161326	0					
ANR	3161410	Identifier	CHAR_MATCHES		3161326	0					
ANR	3161411	ArgumentList	enc		3161326	1					
ANR	3161412	Argument	enc		3161326	0					
ANR	3161413	Identifier	enc		3161326	0					
ANR	3161414	Argument	ptr		3161326	1					
ANR	3161415	Identifier	ptr		3161326	0					
ANR	3161416	Argument	ASCII_m		3161326	2					
ANR	3161417	Identifier	ASCII_m		3161326	0					
ANR	3161418	CompoundStatement		16:43:383:383	3161326	1					
ANR	3161419	ExpressionStatement	ptr += MINBPC ( enc )	1621:8:42780:42798	3161326	0	True				
ANR	3161420	AssignmentExpression	ptr += MINBPC ( enc )		3161326	0		+=			
ANR	3161421	Identifier	ptr		3161326	0					
ANR	3161422	CallExpression	MINBPC ( enc )		3161326	1					
ANR	3161423	Callee	MINBPC		3161326	0					
ANR	3161424	Identifier	MINBPC		3161326	0					
ANR	3161425	ArgumentList	enc		3161326	1					
ANR	3161426	Argument	enc		3161326	0					
ANR	3161427	Identifier	enc		3161326	0					
ANR	3161428	IfStatement	"if ( CHAR_MATCHES ( enc , ptr , ASCII_p ) )"		3161326	1					
ANR	3161429	Condition	"CHAR_MATCHES ( enc , ptr , ASCII_p )"	1622:12:42812:42842	3161326	0	True				
ANR	3161430	CallExpression	"CHAR_MATCHES ( enc , ptr , ASCII_p )"		3161326	0					
ANR	3161431	Callee	CHAR_MATCHES		3161326	0					
ANR	3161432	Identifier	CHAR_MATCHES		3161326	0					
ANR	3161433	ArgumentList	enc		3161326	1					
ANR	3161434	Argument	enc		3161326	0					
ANR	3161435	Identifier	enc		3161326	0					
ANR	3161436	Argument	ptr		3161326	1					
ANR	3161437	Identifier	ptr		3161326	0					
ANR	3161438	Argument	ASCII_p		3161326	2					
ANR	3161439	Identifier	ASCII_p		3161326	0					
ANR	3161440	ReturnStatement	return ASCII_AMP ;	1623:10:42855:42871	3161326	1	True				
ANR	3161441	Identifier	ASCII_AMP		3161326	0					
ANR	3161442	BreakStatement	break ;	1626:4:42891:42896	3161326	5	True				
ANR	3161443	Label	case 4 :	1627:2:42900:42906	3161326	6	True				
ANR	3161444	SwitchStatement	"switch ( BYTE_TO_ASCII ( enc , ptr ) )"		3161326	7					
ANR	3161445	Condition	"BYTE_TO_ASCII ( enc , ptr )"	1628:12:42920:42942	3161326	0	True				
ANR	3161446	CallExpression	"BYTE_TO_ASCII ( enc , ptr )"		3161326	0					
ANR	3161447	Callee	BYTE_TO_ASCII		3161326	0					
ANR	3161448	Identifier	BYTE_TO_ASCII		3161326	0					
ANR	3161449	ArgumentList	enc		3161326	1					
ANR	3161450	Argument	enc		3161326	0					
ANR	3161451	Identifier	enc		3161326	0					
ANR	3161452	Argument	ptr		3161326	1					
ANR	3161453	Identifier	ptr		3161326	0					
ANR	3161454	CompoundStatement		24:37:558:558	3161326	1					
ANR	3161455	Label	case ASCII_q :	1629:4:42951:42963	3161326	0	True				
ANR	3161456	Identifier	ASCII_q		3161326	0					
ANR	3161457	ExpressionStatement	ptr += MINBPC ( enc )	1630:6:42971:42989	3161326	1	True				
ANR	3161458	AssignmentExpression	ptr += MINBPC ( enc )		3161326	0		+=			
ANR	3161459	Identifier	ptr		3161326	0					
ANR	3161460	CallExpression	MINBPC ( enc )		3161326	1					
ANR	3161461	Callee	MINBPC		3161326	0					
ANR	3161462	Identifier	MINBPC		3161326	0					
ANR	3161463	ArgumentList	enc		3161326	1					
ANR	3161464	Argument	enc		3161326	0					
ANR	3161465	Identifier	enc		3161326	0					
ANR	3161466	IfStatement	"if ( CHAR_MATCHES ( enc , ptr , ASCII_u ) )"		3161326	2					
ANR	3161467	Condition	"CHAR_MATCHES ( enc , ptr , ASCII_u )"	1631:10:43001:43031	3161326	0	True				
ANR	3161468	CallExpression	"CHAR_MATCHES ( enc , ptr , ASCII_u )"		3161326	0					
ANR	3161469	Callee	CHAR_MATCHES		3161326	0					
ANR	3161470	Identifier	CHAR_MATCHES		3161326	0					
ANR	3161471	ArgumentList	enc		3161326	1					
ANR	3161472	Argument	enc		3161326	0					
ANR	3161473	Identifier	enc		3161326	0					
ANR	3161474	Argument	ptr		3161326	1					
ANR	3161475	Identifier	ptr		3161326	0					
ANR	3161476	Argument	ASCII_u		3161326	2					
ANR	3161477	Identifier	ASCII_u		3161326	0					
ANR	3161478	CompoundStatement		27:43:647:647	3161326	1					
ANR	3161479	ExpressionStatement	ptr += MINBPC ( enc )	1632:8:43044:43062	3161326	0	True				
ANR	3161480	AssignmentExpression	ptr += MINBPC ( enc )		3161326	0		+=			
ANR	3161481	Identifier	ptr		3161326	0					
ANR	3161482	CallExpression	MINBPC ( enc )		3161326	1					
ANR	3161483	Callee	MINBPC		3161326	0					
ANR	3161484	Identifier	MINBPC		3161326	0					
ANR	3161485	ArgumentList	enc		3161326	1					
ANR	3161486	Argument	enc		3161326	0					
ANR	3161487	Identifier	enc		3161326	0					
ANR	3161488	IfStatement	"if ( CHAR_MATCHES ( enc , ptr , ASCII_o ) )"		3161326	1					
ANR	3161489	Condition	"CHAR_MATCHES ( enc , ptr , ASCII_o )"	1633:12:43076:43106	3161326	0	True				
ANR	3161490	CallExpression	"CHAR_MATCHES ( enc , ptr , ASCII_o )"		3161326	0					
ANR	3161491	Callee	CHAR_MATCHES		3161326	0					
ANR	3161492	Identifier	CHAR_MATCHES		3161326	0					
ANR	3161493	ArgumentList	enc		3161326	1					
ANR	3161494	Argument	enc		3161326	0					
ANR	3161495	Identifier	enc		3161326	0					
ANR	3161496	Argument	ptr		3161326	1					
ANR	3161497	Identifier	ptr		3161326	0					
ANR	3161498	Argument	ASCII_o		3161326	2					
ANR	3161499	Identifier	ASCII_o		3161326	0					
ANR	3161500	CompoundStatement		29:45:722:722	3161326	1					
ANR	3161501	ExpressionStatement	ptr += MINBPC ( enc )	1634:10:43121:43139	3161326	0	True				
ANR	3161502	AssignmentExpression	ptr += MINBPC ( enc )		3161326	0		+=			
ANR	3161503	Identifier	ptr		3161326	0					
ANR	3161504	CallExpression	MINBPC ( enc )		3161326	1					
ANR	3161505	Callee	MINBPC		3161326	0					
ANR	3161506	Identifier	MINBPC		3161326	0					
ANR	3161507	ArgumentList	enc		3161326	1					
ANR	3161508	Argument	enc		3161326	0					
ANR	3161509	Identifier	enc		3161326	0					
ANR	3161510	IfStatement	"if ( CHAR_MATCHES ( enc , ptr , ASCII_t ) )"		3161326	1					
ANR	3161511	Condition	"CHAR_MATCHES ( enc , ptr , ASCII_t )"	1635:14:43155:43185	3161326	0	True				
ANR	3161512	CallExpression	"CHAR_MATCHES ( enc , ptr , ASCII_t )"		3161326	0					
ANR	3161513	Callee	CHAR_MATCHES		3161326	0					
ANR	3161514	Identifier	CHAR_MATCHES		3161326	0					
ANR	3161515	ArgumentList	enc		3161326	1					
ANR	3161516	Argument	enc		3161326	0					
ANR	3161517	Identifier	enc		3161326	0					
ANR	3161518	Argument	ptr		3161326	1					
ANR	3161519	Identifier	ptr		3161326	0					
ANR	3161520	Argument	ASCII_t		3161326	2					
ANR	3161521	Identifier	ASCII_t		3161326	0					
ANR	3161522	ReturnStatement	return ASCII_QUOT ;	1636:12:43200:43217	3161326	1	True				
ANR	3161523	Identifier	ASCII_QUOT		3161326	0					
ANR	3161524	BreakStatement	break ;	1639:6:43243:43248	3161326	3	True				
ANR	3161525	Label	case ASCII_a :	1640:4:43254:43266	3161326	4	True				
ANR	3161526	Identifier	ASCII_a		3161326	0					
ANR	3161527	ExpressionStatement	ptr += MINBPC ( enc )	1641:6:43274:43292	3161326	5	True				
ANR	3161528	AssignmentExpression	ptr += MINBPC ( enc )		3161326	0		+=			
ANR	3161529	Identifier	ptr		3161326	0					
ANR	3161530	CallExpression	MINBPC ( enc )		3161326	1					
ANR	3161531	Callee	MINBPC		3161326	0					
ANR	3161532	Identifier	MINBPC		3161326	0					
ANR	3161533	ArgumentList	enc		3161326	1					
ANR	3161534	Argument	enc		3161326	0					
ANR	3161535	Identifier	enc		3161326	0					
ANR	3161536	IfStatement	"if ( CHAR_MATCHES ( enc , ptr , ASCII_p ) )"		3161326	6					
ANR	3161537	Condition	"CHAR_MATCHES ( enc , ptr , ASCII_p )"	1642:10:43304:43334	3161326	0	True				
ANR	3161538	CallExpression	"CHAR_MATCHES ( enc , ptr , ASCII_p )"		3161326	0					
ANR	3161539	Callee	CHAR_MATCHES		3161326	0					
ANR	3161540	Identifier	CHAR_MATCHES		3161326	0					
ANR	3161541	ArgumentList	enc		3161326	1					
ANR	3161542	Argument	enc		3161326	0					
ANR	3161543	Identifier	enc		3161326	0					
ANR	3161544	Argument	ptr		3161326	1					
ANR	3161545	Identifier	ptr		3161326	0					
ANR	3161546	Argument	ASCII_p		3161326	2					
ANR	3161547	Identifier	ASCII_p		3161326	0					
ANR	3161548	CompoundStatement		38:43:950:950	3161326	1					
ANR	3161549	ExpressionStatement	ptr += MINBPC ( enc )	1643:8:43347:43365	3161326	0	True				
ANR	3161550	AssignmentExpression	ptr += MINBPC ( enc )		3161326	0		+=			
ANR	3161551	Identifier	ptr		3161326	0					
ANR	3161552	CallExpression	MINBPC ( enc )		3161326	1					
ANR	3161553	Callee	MINBPC		3161326	0					
ANR	3161554	Identifier	MINBPC		3161326	0					
ANR	3161555	ArgumentList	enc		3161326	1					
ANR	3161556	Argument	enc		3161326	0					
ANR	3161557	Identifier	enc		3161326	0					
ANR	3161558	IfStatement	"if ( CHAR_MATCHES ( enc , ptr , ASCII_o ) )"		3161326	1					
ANR	3161559	Condition	"CHAR_MATCHES ( enc , ptr , ASCII_o )"	1644:12:43379:43409	3161326	0	True				
ANR	3161560	CallExpression	"CHAR_MATCHES ( enc , ptr , ASCII_o )"		3161326	0					
ANR	3161561	Callee	CHAR_MATCHES		3161326	0					
ANR	3161562	Identifier	CHAR_MATCHES		3161326	0					
ANR	3161563	ArgumentList	enc		3161326	1					
ANR	3161564	Argument	enc		3161326	0					
ANR	3161565	Identifier	enc		3161326	0					
ANR	3161566	Argument	ptr		3161326	1					
ANR	3161567	Identifier	ptr		3161326	0					
ANR	3161568	Argument	ASCII_o		3161326	2					
ANR	3161569	Identifier	ASCII_o		3161326	0					
ANR	3161570	CompoundStatement		40:45:1025:1025	3161326	1					
ANR	3161571	ExpressionStatement	ptr += MINBPC ( enc )	1645:10:43424:43442	3161326	0	True				
ANR	3161572	AssignmentExpression	ptr += MINBPC ( enc )		3161326	0		+=			
ANR	3161573	Identifier	ptr		3161326	0					
ANR	3161574	CallExpression	MINBPC ( enc )		3161326	1					
ANR	3161575	Callee	MINBPC		3161326	0					
ANR	3161576	Identifier	MINBPC		3161326	0					
ANR	3161577	ArgumentList	enc		3161326	1					
ANR	3161578	Argument	enc		3161326	0					
ANR	3161579	Identifier	enc		3161326	0					
ANR	3161580	IfStatement	"if ( CHAR_MATCHES ( enc , ptr , ASCII_s ) )"		3161326	1					
ANR	3161581	Condition	"CHAR_MATCHES ( enc , ptr , ASCII_s )"	1646:14:43458:43488	3161326	0	True				
ANR	3161582	CallExpression	"CHAR_MATCHES ( enc , ptr , ASCII_s )"		3161326	0					
ANR	3161583	Callee	CHAR_MATCHES		3161326	0					
ANR	3161584	Identifier	CHAR_MATCHES		3161326	0					
ANR	3161585	ArgumentList	enc		3161326	1					
ANR	3161586	Argument	enc		3161326	0					
ANR	3161587	Identifier	enc		3161326	0					
ANR	3161588	Argument	ptr		3161326	1					
ANR	3161589	Identifier	ptr		3161326	0					
ANR	3161590	Argument	ASCII_s		3161326	2					
ANR	3161591	Identifier	ASCII_s		3161326	0					
ANR	3161592	ReturnStatement	return ASCII_APOS ;	1647:12:43503:43520	3161326	1	True				
ANR	3161593	Identifier	ASCII_APOS		3161326	0					
ANR	3161594	BreakStatement	break ;	1650:6:43546:43551	3161326	7	True				
ANR	3161595	ReturnStatement	return 0 ;	1653:2:43565:43573	3161326	1	True				
ANR	3161596	PrimaryExpression	0		3161326	0					
ANR	3161597	ReturnType	static int PTRCALL PREFIX		3161326	1					
ANR	3161598	Identifier	( predefinedEntityName )		3161326	2					
ANR	3161599	Identifier	predefinedEntityName		3161326	3					
ANR	3161600	ParameterList	"const ENCODING * UNUSED_P ( enc ) , const char * ptr , const char * end"		3161326	4					
ANR	3161601	Parameter	const ENCODING * UNUSED_P ( enc )	1603:29:42292:42320	3161326	0	True				
ANR	3161602	ParameterType	const ENCODING * ( enc )		3161326	0					
ANR	3161603	Identifier	UNUSED_P		3161326	1					
ANR	3161604	Parameter	const char * ptr	1603:60:42323:42337	3161326	1	True				
ANR	3161605	ParameterType	const char *		3161326	0					
ANR	3161606	Identifier	ptr		3161326	1					
ANR	3161607	Parameter	const char * end	1604:29:42369:42383	3161326	2	True				
ANR	3161608	ParameterType	const char *		3161326	0					
ANR	3161609	Identifier	end		3161326	1					
ANR	3161610	CFGEntryNode	ENTRY		3161326		True				
ANR	3161611	CFGExitNode	EXIT		3161326		True				
ANR	3161612	Symbol	UNUSED_P		3161326						
ANR	3161613	Symbol	ASCII_o		3161326						
ANR	3161614	Symbol	ASCII_QUOT		3161326						
ANR	3161615	Symbol	ASCII_p		3161326						
ANR	3161616	Symbol	ASCII_s		3161326						
ANR	3161617	Symbol	MINBPC		3161326						
ANR	3161618	Symbol	ASCII_u		3161326						
ANR	3161619	Symbol	ptr		3161326						
ANR	3161620	Symbol	ASCII_t		3161326						
ANR	3161621	Symbol	BYTE_TO_ASCII		3161326						
ANR	3161622	Symbol	CHAR_MATCHES		3161326						
ANR	3161623	Symbol	ASCII_AMP		3161326						
ANR	3161624	Symbol	ASCII_GT		3161326						
ANR	3161625	Symbol	ASCII_m		3161326						
ANR	3161626	Symbol	ASCII_APOS		3161326						
ANR	3161627	Symbol	end		3161326						
ANR	3161628	Symbol	ASCII_a		3161326						
ANR	3161629	Symbol	enc		3161326						
ANR	3161630	Symbol	ASCII_LT		3161326						
ANR	3161631	Function	nameMatchesAscii	1656:0:43578:44211							
ANR	3161632	FunctionDef	"nameMatchesAscii (const ENCODING * UNUSED_P ( enc ) , const char * ptr1 , const char * end1 , const char * ptr2)"		3161631	0					
ANR	3161633	CompoundStatement		1659:0:43732:44211	3161631	0					
ANR	3161634	ForStatement	"for ( ; * ptr2 ; ptr1 += MINBPC ( enc ) , ptr2 ++ )"		3161631	0					
ANR	3161635	Condition	* ptr2	1660:9:43743:43747	3161631	0	True				
ANR	3161636	UnaryOperationExpression	* ptr2		3161631	0					
ANR	3161637	UnaryOperator	*		3161631	0					
ANR	3161638	Identifier	ptr2		3161631	1					
ANR	3161639	Expression	"ptr1 += MINBPC ( enc ) , ptr2 ++"	1660:16:43750:43776	3161631	1	True				
ANR	3161640	AssignmentExpression	ptr1 += MINBPC ( enc )		3161631	0		+=			
ANR	3161641	Identifier	ptr1		3161631	0					
ANR	3161642	CallExpression	MINBPC ( enc )		3161631	1					
ANR	3161643	Callee	MINBPC		3161631	0					
ANR	3161644	Identifier	MINBPC		3161631	0					
ANR	3161645	ArgumentList	enc		3161631	1					
ANR	3161646	Argument	enc		3161631	0					
ANR	3161647	Identifier	enc		3161631	0					
ANR	3161648	PostIncDecOperationExpression	ptr2 ++		3161631	1					
ANR	3161649	Identifier	ptr2		3161631	0					
ANR	3161650	IncDec	++		3161631	1					
ANR	3161651	CompoundStatement		2:45:46:46	3161631	2					
ANR	3161652	IfStatement	if ( end1 - ptr1 < MINBPC ( enc ) )		3161631	0					
ANR	3161653	Condition	end1 - ptr1 < MINBPC ( enc )	1661:8:43789:43813	3161631	0	True				
ANR	3161654	RelationalExpression	end1 - ptr1 < MINBPC ( enc )		3161631	0		<			
ANR	3161655	AdditiveExpression	end1 - ptr1		3161631	0		-			
ANR	3161656	Identifier	end1		3161631	0					
ANR	3161657	Identifier	ptr1		3161631	1					
ANR	3161658	CallExpression	MINBPC ( enc )		3161631	1					
ANR	3161659	Callee	MINBPC		3161631	0					
ANR	3161660	Identifier	MINBPC		3161631	0					
ANR	3161661	ArgumentList	enc		3161631	1					
ANR	3161662	Argument	enc		3161631	0					
ANR	3161663	Identifier	enc		3161631	0					
ANR	3161664	CompoundStatement		3:35:83:83	3161631	1					
ANR	3161665	ReturnStatement	return 0 ;	1667:6:44090:44098	3161631	0	True				
ANR	3161666	PrimaryExpression	0		3161631	0					
ANR	3161667	IfStatement	"if ( ! CHAR_MATCHES ( enc , ptr1 , * ptr2 ) )"		3161631	1					
ANR	3161668	Condition	"! CHAR_MATCHES ( enc , ptr1 , * ptr2 )"	1669:8:44135:44165	3161631	0	True				
ANR	3161669	UnaryOperationExpression	"! CHAR_MATCHES ( enc , ptr1 , * ptr2 )"		3161631	0					
ANR	3161670	UnaryOperator	!		3161631	0					
ANR	3161671	CallExpression	"CHAR_MATCHES ( enc , ptr1 , * ptr2 )"		3161631	1					
ANR	3161672	Callee	CHAR_MATCHES		3161631	0					
ANR	3161673	Identifier	CHAR_MATCHES		3161631	0					
ANR	3161674	ArgumentList	enc		3161631	1					
ANR	3161675	Argument	enc		3161631	0					
ANR	3161676	Identifier	enc		3161631	0					
ANR	3161677	Argument	ptr1		3161631	1					
ANR	3161678	Identifier	ptr1		3161631	0					
ANR	3161679	Argument	* ptr2		3161631	2					
ANR	3161680	UnaryOperationExpression	* ptr2		3161631	0					
ANR	3161681	UnaryOperator	*		3161631	0					
ANR	3161682	Identifier	ptr2		3161631	1					
ANR	3161683	ReturnStatement	return 0 ;	1670:6:44174:44182	3161631	1	True				
ANR	3161684	PrimaryExpression	0		3161631	0					
ANR	3161685	ReturnStatement	return ptr1 == end1 ;	1672:2:44190:44209	3161631	1	True				
ANR	3161686	EqualityExpression	ptr1 == end1		3161631	0		==			
ANR	3161687	Identifier	ptr1		3161631	0					
ANR	3161688	Identifier	end1		3161631	1					
ANR	3161689	ReturnType	static int PTRCALL PREFIX		3161631	1					
ANR	3161690	Identifier	( nameMatchesAscii )		3161631	2					
ANR	3161691	Identifier	nameMatchesAscii		3161631	3					
ANR	3161692	ParameterList	"const ENCODING * UNUSED_P ( enc ) , const char * ptr1 , const char * end1 , const char * ptr2"		3161631	4					
ANR	3161693	Parameter	const ENCODING * UNUSED_P ( enc )	1657:25:43622:43650	3161631	0	True				
ANR	3161694	ParameterType	const ENCODING * ( enc )		3161631	0					
ANR	3161695	Identifier	UNUSED_P		3161631	1					
ANR	3161696	Parameter	const char * ptr1	1657:56:43653:43668	3161631	1	True				
ANR	3161697	ParameterType	const char *		3161631	0					
ANR	3161698	Identifier	ptr1		3161631	1					
ANR	3161699	Parameter	const char * end1	1658:25:43696:43711	3161631	2	True				
ANR	3161700	ParameterType	const char *		3161631	0					
ANR	3161701	Identifier	end1		3161631	1					
ANR	3161702	Parameter	const char * ptr2	1658:43:43714:43729	3161631	3	True				
ANR	3161703	ParameterType	const char *		3161631	0					
ANR	3161704	Identifier	ptr2		3161631	1					
ANR	3161705	CFGEntryNode	ENTRY		3161631		True				
ANR	3161706	CFGExitNode	EXIT		3161631		True				
ANR	3161707	Symbol	UNUSED_P		3161631						
ANR	3161708	Symbol	ptr2		3161631						
ANR	3161709	Symbol	CHAR_MATCHES		3161631						
ANR	3161710	Symbol	ptr1		3161631						
ANR	3161711	Symbol	end1		3161631						
ANR	3161712	Symbol	* ptr2		3161631						
ANR	3161713	Symbol	enc		3161631						
ANR	3161714	Symbol	MINBPC		3161631						
ANR	3161715	Function	nameLength	1675:0:44214:44744							
ANR	3161716	FunctionDef	"nameLength (const ENCODING * enc , const char * ptr)"		3161715	0					
ANR	3161717	CompoundStatement		1677:0:44294:44744	3161715	0					
ANR	3161718	IdentifierDeclStatement	const char * start = ptr ;	1678:2:44298:44321	3161715	0	True				
ANR	3161719	IdentifierDecl	* start = ptr		3161715	0					
ANR	3161720	IdentifierDeclType	const char *		3161715	0					
ANR	3161721	Identifier	start		3161715	1					
ANR	3161722	AssignmentExpression	* start = ptr		3161715	2		=			
ANR	3161723	Identifier	ptr		3161715	0					
ANR	3161724	Identifier	ptr		3161715	1					
ANR	3161725	ForStatement	for ( ; ; )		3161715	1					
ANR	3161726	CompoundStatement		3:11:39:39	3161715	0					
ANR	3161727	SwitchStatement	"switch ( BYTE_TYPE ( enc , ptr ) )"		3161715	0					
ANR	3161728	Condition	"BYTE_TYPE ( enc , ptr )"	1680:12:44348:44366	3161715	0	True				
ANR	3161729	CallExpression	"BYTE_TYPE ( enc , ptr )"		3161715	0					
ANR	3161730	Callee	BYTE_TYPE		3161715	0					
ANR	3161731	Identifier	BYTE_TYPE		3161715	0					
ANR	3161732	ArgumentList	enc		3161715	1					
ANR	3161733	Argument	enc		3161715	0					
ANR	3161734	Identifier	enc		3161715	0					
ANR	3161735	Argument	ptr		3161715	1					
ANR	3161736	Identifier	ptr		3161715	0					
ANR	3161737	CompoundStatement		4:33:74:74	3161715	1					
ANR	3161738	Statement	define	1681:1:44372:44377	3161715	0	True				
ANR	3161739	Statement	LEAD_CASE	1681:8:44379:44387	3161715	1	True				
ANR	3161740	Statement	(	1681:17:44388:44388	3161715	2	True				
ANR	3161741	Statement	n	1681:18:44389:44389	3161715	3	True				
ANR	3161742	Statement	)	1681:19:44390:44390	3161715	4	True				
ANR	3161743	Statement	case	1682:4:44398:44401	3161715	5	True				
ANR	3161744	Statement	BT_LEAD	1682:9:44403:44409	3161715	6	True				
ANR	3161745	Label	n :	1682:20:44414:44415	3161715	7	True				
ANR	3161746	Identifier	n		3161715	0					
ANR	3161747	ExpressionStatement	ptr += n	1682:23:44417:44425	3161715	8	True				
ANR	3161748	AssignmentExpression	ptr += n		3161715	0		+=			
ANR	3161749	Identifier	ptr		3161715	0					
ANR	3161750	Identifier	n		3161715	1					
ANR	3161751	BreakStatement	break ;	1682:33:44427:44432	3161715	9	True				
ANR	3161752	Statement	LEAD_CASE	1683:4:44438:44446	3161715	10	True				
ANR	3161753	Statement	(	1683:13:44447:44447	3161715	11	True				
ANR	3161754	Statement	2	1683:14:44448:44448	3161715	12	True				
ANR	3161755	Statement	)	1683:15:44449:44449	3161715	13	True				
ANR	3161756	Statement	LEAD_CASE	1683:17:44451:44459	3161715	14	True				
ANR	3161757	Statement	(	1683:26:44460:44460	3161715	15	True				
ANR	3161758	Statement	3	1683:27:44461:44461	3161715	16	True				
ANR	3161759	Statement	)	1683:28:44462:44462	3161715	17	True				
ANR	3161760	Statement	LEAD_CASE	1683:30:44464:44472	3161715	18	True				
ANR	3161761	Statement	(	1683:39:44473:44473	3161715	19	True				
ANR	3161762	Statement	4	1683:40:44474:44474	3161715	20	True				
ANR	3161763	Statement	)	1683:41:44475:44475	3161715	21	True				
ANR	3161764	Statement	undef	1684:1:44478:44482	3161715	22	True				
ANR	3161765	Statement	LEAD_CASE	1684:7:44484:44492	3161715	23	True				
ANR	3161766	Label	case BT_NONASCII :	1685:4:44498:44514	3161715	24	True				
ANR	3161767	Identifier	BT_NONASCII		3161715	0					
ANR	3161768	Label	case BT_NMSTRT :	1686:4:44520:44534	3161715	25	True				
ANR	3161769	Identifier	BT_NMSTRT		3161715	0					
ANR	3161770	Label	case BT_COLON :	1688:4:44554:44567	3161715	26	True				
ANR	3161771	Identifier	BT_COLON		3161715	0					
ANR	3161772	Label	case BT_HEX :	1690:4:44580:44591	3161715	27	True				
ANR	3161773	Identifier	BT_HEX		3161715	0					
ANR	3161774	Label	case BT_DIGIT :	1691:4:44597:44610	3161715	28	True				
ANR	3161775	Identifier	BT_DIGIT		3161715	0					
ANR	3161776	Label	case BT_NAME :	1692:4:44616:44628	3161715	29	True				
ANR	3161777	Identifier	BT_NAME		3161715	0					
ANR	3161778	Label	case BT_MINUS :	1693:4:44634:44647	3161715	30	True				
ANR	3161779	Identifier	BT_MINUS		3161715	0					
ANR	3161780	ExpressionStatement	ptr += MINBPC ( enc )	1694:6:44655:44673	3161715	31	True				
ANR	3161781	AssignmentExpression	ptr += MINBPC ( enc )		3161715	0		+=			
ANR	3161782	Identifier	ptr		3161715	0					
ANR	3161783	CallExpression	MINBPC ( enc )		3161715	1					
ANR	3161784	Callee	MINBPC		3161715	0					
ANR	3161785	Identifier	MINBPC		3161715	0					
ANR	3161786	ArgumentList	enc		3161715	1					
ANR	3161787	Argument	enc		3161715	0					
ANR	3161788	Identifier	enc		3161715	0					
ANR	3161789	BreakStatement	break ;	1695:6:44681:44686	3161715	32	True				
ANR	3161790	Label	default :	1696:4:44692:44699	3161715	33	True				
ANR	3161791	Identifier	default		3161715	0					
ANR	3161792	ReturnStatement	return ( int ) ( ptr - start ) ;	1697:6:44707:44732	3161715	34	True				
ANR	3161793	CastExpression	( int ) ( ptr - start )		3161715	0					
ANR	3161794	CastTarget	int		3161715	0					
ANR	3161795	AdditiveExpression	ptr - start		3161715	1		-			
ANR	3161796	Identifier	ptr		3161715	0					
ANR	3161797	Identifier	start		3161715	1					
ANR	3161798	ReturnType	static int PTRFASTCALL PREFIX		3161715	1					
ANR	3161799	Identifier	( nameLength )		3161715	2					
ANR	3161800	Identifier	nameLength		3161715	3					
ANR	3161801	ParameterList	"const ENCODING * enc , const char * ptr"		3161715	4					
ANR	3161802	Parameter	const ENCODING * enc	1676:19:44256:44274	3161715	0	True				
ANR	3161803	ParameterType	const ENCODING *		3161715	0					
ANR	3161804	Identifier	enc		3161715	1					
ANR	3161805	Parameter	const char * ptr	1676:40:44277:44291	3161715	1	True				
ANR	3161806	ParameterType	const char *		3161715	0					
ANR	3161807	Identifier	ptr		3161715	1					
ANR	3161808	CFGEntryNode	ENTRY		3161715		True				
ANR	3161809	CFGExitNode	EXIT		3161715		True				
ANR	3161810	InfiniteForNode	true		3161715		True				
ANR	3161811	Symbol	start		3161715						
ANR	3161812	Symbol	BYTE_TYPE		3161715						
ANR	3161813	Symbol	enc		3161715						
ANR	3161814	Symbol	MINBPC		3161715						
ANR	3161815	Symbol	n		3161715						
ANR	3161816	Symbol	ptr		3161715						
ANR	3161817	Function	skipS	1702:20:44767:45008							
ANR	3161818	FunctionDef	"skipS (const ENCODING * enc , const char * ptr)"		3161817	0					
ANR	3161819	CompoundStatement		1704:0:44831:45008	3161817	0					
ANR	3161820	ForStatement	for ( ; ; )		3161817	0					
ANR	3161821	CompoundStatement		2:11:12:12	3161817	0					
ANR	3161822	SwitchStatement	"switch ( BYTE_TYPE ( enc , ptr ) )"		3161817	0					
ANR	3161823	Condition	"BYTE_TYPE ( enc , ptr )"	1706:12:44858:44876	3161817	0	True				
ANR	3161824	CallExpression	"BYTE_TYPE ( enc , ptr )"		3161817	0					
ANR	3161825	Callee	BYTE_TYPE		3161817	0					
ANR	3161826	Identifier	BYTE_TYPE		3161817	0					
ANR	3161827	ArgumentList	enc		3161817	1					
ANR	3161828	Argument	enc		3161817	0					
ANR	3161829	Identifier	enc		3161817	0					
ANR	3161830	Argument	ptr		3161817	1					
ANR	3161831	Identifier	ptr		3161817	0					
ANR	3161832	CompoundStatement		3:33:47:47	3161817	1					
ANR	3161833	Label	case BT_LF :	1707:4:44885:44895	3161817	0	True				
ANR	3161834	Identifier	BT_LF		3161817	0					
ANR	3161835	Label	case BT_CR :	1708:4:44901:44911	3161817	1	True				
ANR	3161836	Identifier	BT_CR		3161817	0					
ANR	3161837	Label	case BT_S :	1709:4:44917:44926	3161817	2	True				
ANR	3161838	Identifier	BT_S		3161817	0					
ANR	3161839	ExpressionStatement	ptr += MINBPC ( enc )	1710:6:44934:44952	3161817	3	True				
ANR	3161840	AssignmentExpression	ptr += MINBPC ( enc )		3161817	0		+=			
ANR	3161841	Identifier	ptr		3161817	0					
ANR	3161842	CallExpression	MINBPC ( enc )		3161817	1					
ANR	3161843	Callee	MINBPC		3161817	0					
ANR	3161844	Identifier	MINBPC		3161817	0					
ANR	3161845	ArgumentList	enc		3161817	1					
ANR	3161846	Argument	enc		3161817	0					
ANR	3161847	Identifier	enc		3161817	0					
ANR	3161848	BreakStatement	break ;	1711:6:44960:44965	3161817	4	True				
ANR	3161849	Label	default :	1712:4:44971:44978	3161817	5	True				
ANR	3161850	Identifier	default		3161817	0					
ANR	3161851	ReturnStatement	return ptr ;	1713:6:44986:44996	3161817	6	True				
ANR	3161852	Identifier	ptr		3161817	0					
ANR	3161853	ReturnType	PTRFASTCALL PREFIX		3161817	1					
ANR	3161854	Identifier	( skipS )		3161817	2					
ANR	3161855	Identifier	skipS		3161817	3					
ANR	3161856	ParameterList	"const ENCODING * enc , const char * ptr"		3161817	4					
ANR	3161857	Parameter	const ENCODING * enc	1703:14:44793:44811	3161817	0	True				
ANR	3161858	ParameterType	const ENCODING *		3161817	0					
ANR	3161859	Identifier	enc		3161817	1					
ANR	3161860	Parameter	const char * ptr	1703:35:44814:44828	3161817	1	True				
ANR	3161861	ParameterType	const char *		3161817	0					
ANR	3161862	Identifier	ptr		3161817	1					
ANR	3161863	CFGEntryNode	ENTRY		3161817		True				
ANR	3161864	CFGExitNode	EXIT		3161817		True				
ANR	3161865	InfiniteForNode	true		3161817		True				
ANR	3161866	Symbol	BYTE_TYPE		3161817						
ANR	3161867	Symbol	enc		3161817						
ANR	3161868	Symbol	MINBPC		3161817						
ANR	3161869	Symbol	ptr		3161817						
ANR	3161870	Function	updatePosition	1718:0:45011:45827							
ANR	3161871	FunctionDef	"updatePosition (const ENCODING * enc , const char * ptr , const char * end , POSITION * pos)"		3161870	0					
ANR	3161872	CompoundStatement		1723:0:45193:45827	3161870	0					
ANR	3161873	WhileStatement	"while ( HAS_CHAR ( enc , ptr , end ) )"		3161870	0					
ANR	3161874	Condition	"HAS_CHAR ( enc , ptr , end )"	1724:9:45204:45226	3161870	0	True				
ANR	3161875	CallExpression	"HAS_CHAR ( enc , ptr , end )"		3161870	0					
ANR	3161876	Callee	HAS_CHAR		3161870	0					
ANR	3161877	Identifier	HAS_CHAR		3161870	0					
ANR	3161878	ArgumentList	enc		3161870	1					
ANR	3161879	Argument	enc		3161870	0					
ANR	3161880	Identifier	enc		3161870	0					
ANR	3161881	Argument	ptr		3161870	1					
ANR	3161882	Identifier	ptr		3161870	0					
ANR	3161883	Argument	end		3161870	2					
ANR	3161884	Identifier	end		3161870	0					
ANR	3161885	CompoundStatement		2:34:35:35	3161870	1					
ANR	3161886	SwitchStatement	"switch ( BYTE_TYPE ( enc , ptr ) )"		3161870	0					
ANR	3161887	Condition	"BYTE_TYPE ( enc , ptr )"	1725:12:45243:45261	3161870	0	True				
ANR	3161888	CallExpression	"BYTE_TYPE ( enc , ptr )"		3161870	0					
ANR	3161889	Callee	BYTE_TYPE		3161870	0					
ANR	3161890	Identifier	BYTE_TYPE		3161870	0					
ANR	3161891	ArgumentList	enc		3161870	1					
ANR	3161892	Argument	enc		3161870	0					
ANR	3161893	Identifier	enc		3161870	0					
ANR	3161894	Argument	ptr		3161870	1					
ANR	3161895	Identifier	ptr		3161870	0					
ANR	3161896	CompoundStatement		3:33:70:70	3161870	1					
ANR	3161897	Statement	define	1726:1:45267:45272	3161870	0	True				
ANR	3161898	Statement	LEAD_CASE	1726:8:45274:45282	3161870	1	True				
ANR	3161899	Statement	(	1726:17:45283:45283	3161870	2	True				
ANR	3161900	Statement	n	1726:18:45284:45284	3161870	3	True				
ANR	3161901	Statement	)	1726:19:45285:45285	3161870	4	True				
ANR	3161902	Statement	case	1727:4:45293:45296	3161870	5	True				
ANR	3161903	Statement	BT_LEAD	1727:9:45298:45304	3161870	6	True				
ANR	3161904	Label	n :	1727:20:45309:45310	3161870	7	True				
ANR	3161905	Identifier	n		3161870	0					
ANR	3161906	ExpressionStatement	ptr += n	1728:6:45320:45328	3161870	8	True				
ANR	3161907	AssignmentExpression	ptr += n		3161870	0		+=			
ANR	3161908	Identifier	ptr		3161870	0					
ANR	3161909	Identifier	n		3161870	1					
ANR	3161910	BreakStatement	break ;	1729:6:45338:45343	3161870	9	True				
ANR	3161911	Statement	LEAD_CASE	1730:4:45349:45357	3161870	10	True				
ANR	3161912	Statement	(	1730:13:45358:45358	3161870	11	True				
ANR	3161913	Statement	2	1730:14:45359:45359	3161870	12	True				
ANR	3161914	Statement	)	1730:15:45360:45360	3161870	13	True				
ANR	3161915	Statement	LEAD_CASE	1730:17:45362:45370	3161870	14	True				
ANR	3161916	Statement	(	1730:26:45371:45371	3161870	15	True				
ANR	3161917	Statement	3	1730:27:45372:45372	3161870	16	True				
ANR	3161918	Statement	)	1730:28:45373:45373	3161870	17	True				
ANR	3161919	Statement	LEAD_CASE	1730:30:45375:45383	3161870	18	True				
ANR	3161920	Statement	(	1730:39:45384:45384	3161870	19	True				
ANR	3161921	Statement	4	1730:40:45385:45385	3161870	20	True				
ANR	3161922	Statement	)	1730:41:45386:45386	3161870	21	True				
ANR	3161923	Statement	undef	1731:1:45389:45393	3161870	22	True				
ANR	3161924	Statement	LEAD_CASE	1731:7:45395:45403	3161870	23	True				
ANR	3161925	Label	case BT_LF :	1732:4:45409:45419	3161870	24	True				
ANR	3161926	Identifier	BT_LF		3161870	0					
ANR	3161927	ExpressionStatement	pos -> columnNumber = ( XML_Size ) - 1	1733:6:45427:45459	3161870	25	True				
ANR	3161928	AssignmentExpression	pos -> columnNumber = ( XML_Size ) - 1		3161870	0		=			
ANR	3161929	PtrMemberAccess	pos -> columnNumber		3161870	0					
ANR	3161930	Identifier	pos		3161870	0					
ANR	3161931	Identifier	columnNumber		3161870	1					
ANR	3161932	CastExpression	( XML_Size ) - 1		3161870	1					
ANR	3161933	CastTarget	XML_Size		3161870	0					
ANR	3161934	UnaryOperationExpression	- 1		3161870	1					
ANR	3161935	UnaryOperator	-		3161870	0					
ANR	3161936	PrimaryExpression	1		3161870	1					
ANR	3161937	ExpressionStatement	pos -> lineNumber ++	1734:6:45467:45484	3161870	26	True				
ANR	3161938	PostIncDecOperationExpression	pos -> lineNumber ++		3161870	0					
ANR	3161939	PtrMemberAccess	pos -> lineNumber		3161870	0					
ANR	3161940	Identifier	pos		3161870	0					
ANR	3161941	Identifier	lineNumber		3161870	1					
ANR	3161942	IncDec	++		3161870	1					
ANR	3161943	ExpressionStatement	ptr += MINBPC ( enc )	1735:6:45492:45510	3161870	27	True				
ANR	3161944	AssignmentExpression	ptr += MINBPC ( enc )		3161870	0		+=			
ANR	3161945	Identifier	ptr		3161870	0					
ANR	3161946	CallExpression	MINBPC ( enc )		3161870	1					
ANR	3161947	Callee	MINBPC		3161870	0					
ANR	3161948	Identifier	MINBPC		3161870	0					
ANR	3161949	ArgumentList	enc		3161870	1					
ANR	3161950	Argument	enc		3161870	0					
ANR	3161951	Identifier	enc		3161870	0					
ANR	3161952	BreakStatement	break ;	1736:6:45518:45523	3161870	28	True				
ANR	3161953	Label	case BT_CR :	1737:4:45529:45539	3161870	29	True				
ANR	3161954	Identifier	BT_CR		3161870	0					
ANR	3161955	ExpressionStatement	pos -> lineNumber ++	1738:6:45547:45564	3161870	30	True				
ANR	3161956	PostIncDecOperationExpression	pos -> lineNumber ++		3161870	0					
ANR	3161957	PtrMemberAccess	pos -> lineNumber		3161870	0					
ANR	3161958	Identifier	pos		3161870	0					
ANR	3161959	Identifier	lineNumber		3161870	1					
ANR	3161960	IncDec	++		3161870	1					
ANR	3161961	ExpressionStatement	ptr += MINBPC ( enc )	1739:6:45572:45590	3161870	31	True				
ANR	3161962	AssignmentExpression	ptr += MINBPC ( enc )		3161870	0		+=			
ANR	3161963	Identifier	ptr		3161870	0					
ANR	3161964	CallExpression	MINBPC ( enc )		3161870	1					
ANR	3161965	Callee	MINBPC		3161870	0					
ANR	3161966	Identifier	MINBPC		3161870	0					
ANR	3161967	ArgumentList	enc		3161870	1					
ANR	3161968	Argument	enc		3161870	0					
ANR	3161969	Identifier	enc		3161870	0					
ANR	3161970	IfStatement	"if ( HAS_CHAR ( enc , ptr , end ) && BYTE_TYPE ( enc , ptr ) == BT_LF )"		3161870	32					
ANR	3161971	Condition	"HAS_CHAR ( enc , ptr , end ) && BYTE_TYPE ( enc , ptr ) == BT_LF"	1740:10:45602:45656	3161870	0	True				
ANR	3161972	AndExpression	"HAS_CHAR ( enc , ptr , end ) && BYTE_TYPE ( enc , ptr ) == BT_LF"		3161870	0		&&			
ANR	3161973	CallExpression	"HAS_CHAR ( enc , ptr , end )"		3161870	0					
ANR	3161974	Callee	HAS_CHAR		3161870	0					
ANR	3161975	Identifier	HAS_CHAR		3161870	0					
ANR	3161976	ArgumentList	enc		3161870	1					
ANR	3161977	Argument	enc		3161870	0					
ANR	3161978	Identifier	enc		3161870	0					
ANR	3161979	Argument	ptr		3161870	1					
ANR	3161980	Identifier	ptr		3161870	0					
ANR	3161981	Argument	end		3161870	2					
ANR	3161982	Identifier	end		3161870	0					
ANR	3161983	EqualityExpression	"BYTE_TYPE ( enc , ptr ) == BT_LF"		3161870	1		==			
ANR	3161984	CallExpression	"BYTE_TYPE ( enc , ptr )"		3161870	0					
ANR	3161985	Callee	BYTE_TYPE		3161870	0					
ANR	3161986	Identifier	BYTE_TYPE		3161870	0					
ANR	3161987	ArgumentList	enc		3161870	1					
ANR	3161988	Argument	enc		3161870	0					
ANR	3161989	Identifier	enc		3161870	0					
ANR	3161990	Argument	ptr		3161870	1					
ANR	3161991	Identifier	ptr		3161870	0					
ANR	3161992	Identifier	BT_LF		3161870	1					
ANR	3161993	ExpressionStatement	ptr += MINBPC ( enc )	1741:8:45667:45685	3161870	1	True				
ANR	3161994	AssignmentExpression	ptr += MINBPC ( enc )		3161870	0		+=			
ANR	3161995	Identifier	ptr		3161870	0					
ANR	3161996	CallExpression	MINBPC ( enc )		3161870	1					
ANR	3161997	Callee	MINBPC		3161870	0					
ANR	3161998	Identifier	MINBPC		3161870	0					
ANR	3161999	ArgumentList	enc		3161870	1					
ANR	3162000	Argument	enc		3161870	0					
ANR	3162001	Identifier	enc		3161870	0					
ANR	3162002	ExpressionStatement	pos -> columnNumber = ( XML_Size ) - 1	1742:6:45693:45725	3161870	33	True				
ANR	3162003	AssignmentExpression	pos -> columnNumber = ( XML_Size ) - 1		3161870	0		=			
ANR	3162004	PtrMemberAccess	pos -> columnNumber		3161870	0					
ANR	3162005	Identifier	pos		3161870	0					
ANR	3162006	Identifier	columnNumber		3161870	1					
ANR	3162007	CastExpression	( XML_Size ) - 1		3161870	1					
ANR	3162008	CastTarget	XML_Size		3161870	0					
ANR	3162009	UnaryOperationExpression	- 1		3161870	1					
ANR	3162010	UnaryOperator	-		3161870	0					
ANR	3162011	PrimaryExpression	1		3161870	1					
ANR	3162012	BreakStatement	break ;	1743:6:45733:45738	3161870	34	True				
ANR	3162013	Label	default :	1744:4:45744:45751	3161870	35	True				
ANR	3162014	Identifier	default		3161870	0					
ANR	3162015	ExpressionStatement	ptr += MINBPC ( enc )	1745:6:45759:45777	3161870	36	True				
ANR	3162016	AssignmentExpression	ptr += MINBPC ( enc )		3161870	0		+=			
ANR	3162017	Identifier	ptr		3161870	0					
ANR	3162018	CallExpression	MINBPC ( enc )		3161870	1					
ANR	3162019	Callee	MINBPC		3161870	0					
ANR	3162020	Identifier	MINBPC		3161870	0					
ANR	3162021	ArgumentList	enc		3161870	1					
ANR	3162022	Argument	enc		3161870	0					
ANR	3162023	Identifier	enc		3161870	0					
ANR	3162024	BreakStatement	break ;	1746:6:45785:45790	3161870	37	True				
ANR	3162025	ExpressionStatement	pos -> columnNumber ++	1748:4:45802:45821	3161870	1	True				
ANR	3162026	PostIncDecOperationExpression	pos -> columnNumber ++		3161870	0					
ANR	3162027	PtrMemberAccess	pos -> columnNumber		3161870	0					
ANR	3162028	Identifier	pos		3161870	0					
ANR	3162029	Identifier	columnNumber		3161870	1					
ANR	3162030	IncDec	++		3161870	1					
ANR	3162031	ReturnType	static void PTRCALL PREFIX		3161870	1					
ANR	3162032	Identifier	( updatePosition )		3161870	2					
ANR	3162033	Identifier	updatePosition		3161870	3					
ANR	3162034	ParameterList	"const ENCODING * enc , const char * ptr , const char * end , POSITION * pos"		3161870	4					
ANR	3162035	Parameter	const ENCODING * enc	1719:23:45054:45072	3161870	0	True				
ANR	3162036	ParameterType	const ENCODING *		3161870	0					
ANR	3162037	Identifier	enc		3161870	1					
ANR	3162038	Parameter	const char * ptr	1720:23:45098:45112	3161870	1	True				
ANR	3162039	ParameterType	const char *		3161870	0					
ANR	3162040	Identifier	ptr		3161870	1					
ANR	3162041	Parameter	const char * end	1721:23:45138:45152	3161870	2	True				
ANR	3162042	ParameterType	const char *		3161870	0					
ANR	3162043	Identifier	end		3161870	1					
ANR	3162044	Parameter	POSITION * pos	1722:23:45178:45190	3161870	3	True				
ANR	3162045	ParameterType	POSITION *		3161870	0					
ANR	3162046	Identifier	pos		3161870	1					
ANR	3162047	CFGEntryNode	ENTRY		3161870		True				
ANR	3162048	CFGExitNode	EXIT		3161870		True				
ANR	3162049	Symbol	pos -> lineNumber		3161870						
ANR	3162050	Symbol	pos		3161870						
ANR	3162051	Symbol	BYTE_TYPE		3161870						
ANR	3162052	Symbol	end		3161870						
ANR	3162053	Symbol	enc		3161870						
ANR	3162054	Symbol	pos -> columnNumber		3161870						
ANR	3162055	Symbol	HAS_CHAR		3161870						
ANR	3162056	Symbol	MINBPC		3161870						
ANR	3162057	Symbol	n		3161870						
ANR	3162058	Symbol	* pos		3161870						
ANR	3162059	Symbol	BT_LF		3161870						
ANR	3162060	Symbol	ptr		3161870						
