command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	11234782	File	data/converged/CVE-2018-16863_ghostpdl/zlib_test_infcover.c								
ANR	11234783	ClassDef	mem_item	56:0:2515:2742							
ANR	11234784	DeclStmt									
ANR	11234785	Decl							void	void *	ptr
ANR	11234786	DeclStmt									
ANR	11234787	Decl							size_t	size_t	size
ANR	11234788	DeclStmt									
ANR	11234789	Decl							struct mem_item	struct mem_item *	next
ANR	11234790	ClassDef	mem_zone	63:0:2824:3153							
ANR	11234791	DeclStmt									
ANR	11234792	Decl							struct mem_item	struct mem_item *	first
ANR	11234793	DeclStmt									
ANR	11234794	Decl							size_t	size_t	total
ANR	11234795	Decl							size_t	size_t	highwater
ANR	11234796	DeclStmt									
ANR	11234797	Decl							size_t	size_t	limit
ANR	11234798	DeclStmt									
ANR	11234799	Decl							int	int	notlifo
ANR	11234800	Decl							int	int	rogue
ANR	11234801	Function	mem_alloc	71:0:3205:4264							
ANR	11234802	FunctionDef	"mem_alloc (void * mem , unsigned count , unsigned size)"		11234801	0					
ANR	11234803	CompoundStatement		72:0:3269:4264	11234801	0					
ANR	11234804	IdentifierDeclStatement	void * ptr ;	73:4:3275:3284	11234801	0	True				
ANR	11234805	IdentifierDecl	* ptr		11234801	0					
ANR	11234806	IdentifierDeclType	void *		11234801	0					
ANR	11234807	Identifier	ptr		11234801	1					
ANR	11234808	IdentifierDeclStatement	struct mem_item * item ;	74:4:3290:3311	11234801	1	True				
ANR	11234809	IdentifierDecl	* item		11234801	0					
ANR	11234810	IdentifierDeclType	struct mem_item *		11234801	0					
ANR	11234811	Identifier	item		11234801	1					
ANR	11234812	IdentifierDeclStatement	struct mem_zone * zone = mem ;	75:4:3317:3344	11234801	2	True				
ANR	11234813	IdentifierDecl	* zone = mem		11234801	0					
ANR	11234814	IdentifierDeclType	struct mem_zone *		11234801	0					
ANR	11234815	Identifier	zone		11234801	1					
ANR	11234816	AssignmentExpression	* zone = mem		11234801	2		=			
ANR	11234817	Identifier	mem		11234801	0					
ANR	11234818	Identifier	mem		11234801	1					
ANR	11234819	IdentifierDeclStatement	size_t len = count * ( size_t ) size ;	76:4:3350:3383	11234801	3	True				
ANR	11234820	IdentifierDecl	len = count * ( size_t ) size		11234801	0					
ANR	11234821	IdentifierDeclType	size_t		11234801	0					
ANR	11234822	Identifier	len		11234801	1					
ANR	11234823	AssignmentExpression	len = count * ( size_t ) size		11234801	2		=			
ANR	11234824	Identifier	len		11234801	0					
ANR	11234825	MultiplicativeExpression	count * ( size_t ) size		11234801	1		*			
ANR	11234826	Identifier	count		11234801	0					
ANR	11234827	CastExpression	( size_t ) size		11234801	1					
ANR	11234828	CastTarget	size_t		11234801	0					
ANR	11234829	Identifier	size		11234801	1					
ANR	11234830	IfStatement	if ( zone == NULL || ( zone -> limit && zone -> total + len > zone -> limit ) )		11234801	4					
ANR	11234831	Condition	zone == NULL || ( zone -> limit && zone -> total + len > zone -> limit )	79:8:3431:3494	11234801	0	True				
ANR	11234832	OrExpression	zone == NULL || ( zone -> limit && zone -> total + len > zone -> limit )		11234801	0		||			
ANR	11234833	EqualityExpression	zone == NULL		11234801	0		==			
ANR	11234834	Identifier	zone		11234801	0					
ANR	11234835	Identifier	NULL		11234801	1					
ANR	11234836	AndExpression	zone -> limit && zone -> total + len > zone -> limit		11234801	1		&&			
ANR	11234837	PtrMemberAccess	zone -> limit		11234801	0					
ANR	11234838	Identifier	zone		11234801	0					
ANR	11234839	Identifier	limit		11234801	1					
ANR	11234840	RelationalExpression	zone -> total + len > zone -> limit		11234801	1		>			
ANR	11234841	AdditiveExpression	zone -> total + len		11234801	0		+			
ANR	11234842	PtrMemberAccess	zone -> total		11234801	0					
ANR	11234843	Identifier	zone		11234801	0					
ANR	11234844	Identifier	total		11234801	1					
ANR	11234845	Identifier	len		11234801	1					
ANR	11234846	PtrMemberAccess	zone -> limit		11234801	1					
ANR	11234847	Identifier	zone		11234801	0					
ANR	11234848	Identifier	limit		11234801	1					
ANR	11234849	ReturnStatement	return NULL ;	80:8:3505:3516	11234801	1	True				
ANR	11234850	Identifier	NULL		11234801	0					
ANR	11234851	ExpressionStatement	ptr = malloc ( len )	84:4:3673:3690	11234801	5	True				
ANR	11234852	AssignmentExpression	ptr = malloc ( len )		11234801	0		=			
ANR	11234853	Identifier	ptr		11234801	0					
ANR	11234854	CallExpression	malloc ( len )		11234801	1					
ANR	11234855	Callee	malloc		11234801	0					
ANR	11234856	Identifier	malloc		11234801	0					
ANR	11234857	ArgumentList	len		11234801	1					
ANR	11234858	Argument	len		11234801	0					
ANR	11234859	Identifier	len		11234801	0					
ANR	11234860	IfStatement	if ( ptr == NULL )		11234801	6					
ANR	11234861	Condition	ptr == NULL	85:8:3700:3710	11234801	0	True				
ANR	11234862	EqualityExpression	ptr == NULL		11234801	0		==			
ANR	11234863	Identifier	ptr		11234801	0					
ANR	11234864	Identifier	NULL		11234801	1					
ANR	11234865	ReturnStatement	return NULL ;	86:8:3721:3732	11234801	1	True				
ANR	11234866	Identifier	NULL		11234801	0					
ANR	11234867	ExpressionStatement	"memset ( ptr , 0xa5 , len )"	87:4:3738:3760	11234801	7	True				
ANR	11234868	CallExpression	"memset ( ptr , 0xa5 , len )"		11234801	0					
ANR	11234869	Callee	memset		11234801	0					
ANR	11234870	Identifier	memset		11234801	0					
ANR	11234871	ArgumentList	ptr		11234801	1					
ANR	11234872	Argument	ptr		11234801	0					
ANR	11234873	Identifier	ptr		11234801	0					
ANR	11234874	Argument	0xa5		11234801	1					
ANR	11234875	PrimaryExpression	0xa5		11234801	0					
ANR	11234876	Argument	len		11234801	2					
ANR	11234877	Identifier	len		11234801	0					
ANR	11234878	ExpressionStatement	item = malloc ( sizeof ( struct mem_item ) )	90:4:3808:3846	11234801	8	True				
ANR	11234879	AssignmentExpression	item = malloc ( sizeof ( struct mem_item ) )		11234801	0		=			
ANR	11234880	Identifier	item		11234801	0					
ANR	11234881	CallExpression	malloc ( sizeof ( struct mem_item ) )		11234801	1					
ANR	11234882	Callee	malloc		11234801	0					
ANR	11234883	Identifier	malloc		11234801	0					
ANR	11234884	ArgumentList	sizeof ( struct mem_item )		11234801	1					
ANR	11234885	Argument	sizeof ( struct mem_item )		11234801	0					
ANR	11234886	SizeofExpression	sizeof ( struct mem_item )		11234801	0					
ANR	11234887	Sizeof	sizeof		11234801	0					
ANR	11234888	SizeofOperand	struct mem_item		11234801	1					
ANR	11234889	IfStatement	if ( item == NULL )		11234801	9					
ANR	11234890	Condition	item == NULL	91:8:3856:3867	11234801	0	True				
ANR	11234891	EqualityExpression	item == NULL		11234801	0		==			
ANR	11234892	Identifier	item		11234801	0					
ANR	11234893	Identifier	NULL		11234801	1					
ANR	11234894	CompoundStatement		20:22:600:600	11234801	1					
ANR	11234895	ExpressionStatement	free ( ptr )	92:8:3880:3889	11234801	0	True				
ANR	11234896	CallExpression	free ( ptr )		11234801	0					
ANR	11234897	Callee	free		11234801	0					
ANR	11234898	Identifier	free		11234801	0					
ANR	11234899	ArgumentList	ptr		11234801	1					
ANR	11234900	Argument	ptr		11234801	0					
ANR	11234901	Identifier	ptr		11234801	0					
ANR	11234902	ReturnStatement	return NULL ;	93:8:3899:3910	11234801	1	True				
ANR	11234903	Identifier	NULL		11234801	0					
ANR	11234904	ExpressionStatement	item -> ptr = ptr	95:4:3922:3937	11234801	10	True				
ANR	11234905	AssignmentExpression	item -> ptr = ptr		11234801	0		=			
ANR	11234906	PtrMemberAccess	item -> ptr		11234801	0					
ANR	11234907	Identifier	item		11234801	0					
ANR	11234908	Identifier	ptr		11234801	1					
ANR	11234909	Identifier	ptr		11234801	1					
ANR	11234910	ExpressionStatement	item -> size = len	96:4:3943:3959	11234801	11	True				
ANR	11234911	AssignmentExpression	item -> size = len		11234801	0		=			
ANR	11234912	PtrMemberAccess	item -> size		11234801	0					
ANR	11234913	Identifier	item		11234801	0					
ANR	11234914	Identifier	size		11234801	1					
ANR	11234915	Identifier	len		11234801	1					
ANR	11234916	ExpressionStatement	item -> next = zone -> first	99:4:4017:4041	11234801	12	True				
ANR	11234917	AssignmentExpression	item -> next = zone -> first		11234801	0		=			
ANR	11234918	PtrMemberAccess	item -> next		11234801	0					
ANR	11234919	Identifier	item		11234801	0					
ANR	11234920	Identifier	next		11234801	1					
ANR	11234921	PtrMemberAccess	zone -> first		11234801	1					
ANR	11234922	Identifier	zone		11234801	0					
ANR	11234923	Identifier	first		11234801	1					
ANR	11234924	ExpressionStatement	zone -> first = item	100:4:4047:4065	11234801	13	True				
ANR	11234925	AssignmentExpression	zone -> first = item		11234801	0		=			
ANR	11234926	PtrMemberAccess	zone -> first		11234801	0					
ANR	11234927	Identifier	zone		11234801	0					
ANR	11234928	Identifier	first		11234801	1					
ANR	11234929	Identifier	item		11234801	1					
ANR	11234930	ExpressionStatement	zone -> total += item -> size	103:4:4104:4129	11234801	14	True				
ANR	11234931	AssignmentExpression	zone -> total += item -> size		11234801	0		+=			
ANR	11234932	PtrMemberAccess	zone -> total		11234801	0					
ANR	11234933	Identifier	zone		11234801	0					
ANR	11234934	Identifier	total		11234801	1					
ANR	11234935	PtrMemberAccess	item -> size		11234801	1					
ANR	11234936	Identifier	item		11234801	0					
ANR	11234937	Identifier	size		11234801	1					
ANR	11234938	IfStatement	if ( zone -> total > zone -> highwater )		11234801	15					
ANR	11234939	Condition	zone -> total > zone -> highwater	104:8:4139:4167	11234801	0	True				
ANR	11234940	RelationalExpression	zone -> total > zone -> highwater		11234801	0		>			
ANR	11234941	PtrMemberAccess	zone -> total		11234801	0					
ANR	11234942	Identifier	zone		11234801	0					
ANR	11234943	Identifier	total		11234801	1					
ANR	11234944	PtrMemberAccess	zone -> highwater		11234801	1					
ANR	11234945	Identifier	zone		11234801	0					
ANR	11234946	Identifier	highwater		11234801	1					
ANR	11234947	ExpressionStatement	zone -> highwater = zone -> total	105:8:4178:4207	11234801	1	True				
ANR	11234948	AssignmentExpression	zone -> highwater = zone -> total		11234801	0		=			
ANR	11234949	PtrMemberAccess	zone -> highwater		11234801	0					
ANR	11234950	Identifier	zone		11234801	0					
ANR	11234951	Identifier	highwater		11234801	1					
ANR	11234952	PtrMemberAccess	zone -> total		11234801	1					
ANR	11234953	Identifier	zone		11234801	0					
ANR	11234954	Identifier	total		11234801	1					
ANR	11234955	ReturnStatement	return ptr ;	108:4:4252:4262	11234801	16	True				
ANR	11234956	Identifier	ptr		11234801	0					
ANR	11234957	ReturnType	local void *		11234801	1					
ANR	11234958	Identifier	mem_alloc		11234801	2					
ANR	11234959	ParameterList	"void * mem , unsigned count , unsigned size"		11234801	3					
ANR	11234960	Parameter	void * mem	71:22:3227:3235	11234801	0	True				
ANR	11234961	ParameterType	void *		11234801	0					
ANR	11234962	Identifier	mem		11234801	1					
ANR	11234963	Parameter	unsigned count	71:33:3238:3251	11234801	1	True				
ANR	11234964	ParameterType	unsigned		11234801	0					
ANR	11234965	Identifier	count		11234801	1					
ANR	11234966	Parameter	unsigned size	71:49:3254:3266	11234801	2	True				
ANR	11234967	ParameterType	unsigned		11234801	0					
ANR	11234968	Identifier	size		11234801	1					
ANR	11234969	CFGEntryNode	ENTRY		11234801		True				
ANR	11234970	CFGExitNode	EXIT		11234801		True				
ANR	11234971	Symbol	malloc		11234801						
ANR	11234972	Symbol	item		11234801						
ANR	11234973	Symbol	NULL		11234801						
ANR	11234974	Symbol	zone -> total		11234801						
ANR	11234975	Symbol	* zone		11234801						
ANR	11234976	Symbol	count		11234801						
ANR	11234977	Symbol	item -> next		11234801						
ANR	11234978	Symbol	ptr		11234801						
ANR	11234979	Symbol	zone -> first		11234801						
ANR	11234980	Symbol	item -> ptr		11234801						
ANR	11234981	Symbol	mem		11234801						
ANR	11234982	Symbol	size		11234801						
ANR	11234983	Symbol	len		11234801						
ANR	11234984	Symbol	zone		11234801						
ANR	11234985	Symbol	* item		11234801						
ANR	11234986	Symbol	zone -> limit		11234801						
ANR	11234987	Symbol	item -> size		11234801						
ANR	11234988	Symbol	zone -> highwater		11234801						
ANR	11234989	Function	mem_free	112:0:4309:5534							
ANR	11234990	FunctionDef	"mem_free (void * mem , void * ptr)"		11234989	0					
ANR	11234991	CompoundStatement		113:0:4351:5534	11234989	0					
ANR	11234992	IdentifierDeclStatement	"struct mem_item * item , * next ;"	114:4:4357:4385	11234989	0	True				
ANR	11234993	IdentifierDecl	* item		11234989	0					
ANR	11234994	IdentifierDeclType	struct mem_item *		11234989	0					
ANR	11234995	Identifier	item		11234989	1					
ANR	11234996	IdentifierDecl	* next		11234989	1					
ANR	11234997	IdentifierDeclType	struct mem_item *		11234989	0					
ANR	11234998	Identifier	next		11234989	1					
ANR	11234999	IdentifierDeclStatement	struct mem_zone * zone = mem ;	115:4:4391:4418	11234989	1	True				
ANR	11235000	IdentifierDecl	* zone = mem		11234989	0					
ANR	11235001	IdentifierDeclType	struct mem_zone *		11234989	0					
ANR	11235002	Identifier	zone		11234989	1					
ANR	11235003	AssignmentExpression	* zone = mem		11234989	2		=			
ANR	11235004	Identifier	mem		11234989	0					
ANR	11235005	Identifier	mem		11234989	1					
ANR	11235006	IfStatement	if ( zone == NULL )		11234989	2					
ANR	11235007	Condition	zone == NULL	118:8:4466:4477	11234989	0	True				
ANR	11235008	EqualityExpression	zone == NULL		11234989	0		==			
ANR	11235009	Identifier	zone		11234989	0					
ANR	11235010	Identifier	NULL		11234989	1					
ANR	11235011	CompoundStatement		6:22:128:128	11234989	1					
ANR	11235012	ExpressionStatement	free ( ptr )	119:8:4490:4499	11234989	0	True				
ANR	11235013	CallExpression	free ( ptr )		11234989	0					
ANR	11235014	Callee	free		11234989	0					
ANR	11235015	Identifier	free		11234989	0					
ANR	11235016	ArgumentList	ptr		11234989	1					
ANR	11235017	Argument	ptr		11234989	0					
ANR	11235018	Identifier	ptr		11234989	0					
ANR	11235019	ReturnStatement	return ;	120:8:4509:4515	11234989	1	True				
ANR	11235020	ExpressionStatement	next = zone -> first	125:4:4656:4674	11234989	3	True				
ANR	11235021	AssignmentExpression	next = zone -> first		11234989	0		=			
ANR	11235022	Identifier	next		11234989	0					
ANR	11235023	PtrMemberAccess	zone -> first		11234989	1					
ANR	11235024	Identifier	zone		11234989	0					
ANR	11235025	Identifier	first		11234989	1					
ANR	11235026	IfStatement	if ( next )		11234989	4					
ANR	11235027	Condition	next	126:8:4684:4687	11234989	0	True				
ANR	11235028	Identifier	next		11234989	0					
ANR	11235029	CompoundStatement		14:14:338:338	11234989	1					
ANR	11235030	IfStatement	if ( next -> ptr == ptr )		11234989	0					
ANR	11235031	Condition	next -> ptr == ptr	127:12:4704:4719	11234989	0	True				
ANR	11235032	EqualityExpression	next -> ptr == ptr		11234989	0		==			
ANR	11235033	PtrMemberAccess	next -> ptr		11234989	0					
ANR	11235034	Identifier	next		11234989	0					
ANR	11235035	Identifier	ptr		11234989	1					
ANR	11235036	Identifier	ptr		11234989	1					
ANR	11235037	ExpressionStatement	zone -> first = next -> next	128:12:4734:4758	11234989	1	True				
ANR	11235038	AssignmentExpression	zone -> first = next -> next		11234989	0		=			
ANR	11235039	PtrMemberAccess	zone -> first		11234989	0					
ANR	11235040	Identifier	zone		11234989	0					
ANR	11235041	Identifier	first		11234989	1					
ANR	11235042	PtrMemberAccess	next -> next		11234989	1					
ANR	11235043	Identifier	next		11234989	0					
ANR	11235044	Identifier	next		11234989	1					
ANR	11235045	ElseStatement	else		11234989	0					
ANR	11235046	CompoundStatement		17:13:463:463	11234989	0					
ANR	11235047	DoStatement	do		11234989	0					
ANR	11235048	CompoundStatement		18:15:480:480	11234989	0					
ANR	11235049	ExpressionStatement	item = next	131:16:4902:4913	11234989	0	True				
ANR	11235050	AssignmentExpression	item = next		11234989	0		=			
ANR	11235051	Identifier	item		11234989	0					
ANR	11235052	Identifier	next		11234989	1					
ANR	11235053	ExpressionStatement	next = item -> next	132:16:4931:4948	11234989	1	True				
ANR	11235054	AssignmentExpression	next = item -> next		11234989	0		=			
ANR	11235055	Identifier	next		11234989	0					
ANR	11235056	PtrMemberAccess	item -> next		11234989	1					
ANR	11235057	Identifier	item		11234989	0					
ANR	11235058	Identifier	next		11234989	1					
ANR	11235059	Condition	next != NULL && next -> ptr != ptr	133:21:4971:5002	11234989	1	True				
ANR	11235060	AndExpression	next != NULL && next -> ptr != ptr		11234989	0		&&			
ANR	11235061	EqualityExpression	next != NULL		11234989	0		!=			
ANR	11235062	Identifier	next		11234989	0					
ANR	11235063	Identifier	NULL		11234989	1					
ANR	11235064	EqualityExpression	next -> ptr != ptr		11234989	1		!=			
ANR	11235065	PtrMemberAccess	next -> ptr		11234989	0					
ANR	11235066	Identifier	next		11234989	0					
ANR	11235067	Identifier	ptr		11234989	1					
ANR	11235068	Identifier	ptr		11234989	1					
ANR	11235069	IfStatement	if ( next )		11234989	1					
ANR	11235070	Condition	next	134:16:5022:5025	11234989	0	True				
ANR	11235071	Identifier	next		11234989	0					
ANR	11235072	CompoundStatement		22:22:676:676	11234989	1					
ANR	11235073	ExpressionStatement	item -> next = next -> next	135:16:5102:5125	11234989	0	True				
ANR	11235074	AssignmentExpression	item -> next = next -> next		11234989	0		=			
ANR	11235075	PtrMemberAccess	item -> next		11234989	0					
ANR	11235076	Identifier	item		11234989	0					
ANR	11235077	Identifier	next		11234989	1					
ANR	11235078	PtrMemberAccess	next -> next		11234989	1					
ANR	11235079	Identifier	next		11234989	0					
ANR	11235080	Identifier	next		11234989	1					
ANR	11235081	ExpressionStatement	zone -> notlifo ++	136:16:5143:5158	11234989	1	True				
ANR	11235082	PostIncDecOperationExpression	zone -> notlifo ++		11234989	0					
ANR	11235083	PtrMemberAccess	zone -> notlifo		11234989	0					
ANR	11235084	Identifier	zone		11234989	0					
ANR	11235085	Identifier	notlifo		11234989	1					
ANR	11235086	IncDec	++		11234989	1					
ANR	11235087	IfStatement	if ( next )		11234989	5					
ANR	11235088	Condition	next	143:8:5289:5292	11234989	0	True				
ANR	11235089	Identifier	next		11234989	0					
ANR	11235090	CompoundStatement		31:14:943:943	11234989	1					
ANR	11235091	ExpressionStatement	zone -> total -= next -> size	144:8:5305:5330	11234989	0	True				
ANR	11235092	AssignmentExpression	zone -> total -= next -> size		11234989	0		-=			
ANR	11235093	PtrMemberAccess	zone -> total		11234989	0					
ANR	11235094	Identifier	zone		11234989	0					
ANR	11235095	Identifier	total		11234989	1					
ANR	11235096	PtrMemberAccess	next -> size		11234989	1					
ANR	11235097	Identifier	next		11234989	0					
ANR	11235098	Identifier	size		11234989	1					
ANR	11235099	ExpressionStatement	free ( next )	145:8:5340:5350	11234989	1	True				
ANR	11235100	CallExpression	free ( next )		11234989	0					
ANR	11235101	Callee	free		11234989	0					
ANR	11235102	Identifier	free		11234989	0					
ANR	11235103	ArgumentList	next		11234989	1					
ANR	11235104	Argument	next		11234989	0					
ANR	11235105	Identifier	next		11234989	0					
ANR	11235106	ElseStatement	else		11234989	0					
ANR	11235107	ExpressionStatement	zone -> rogue ++	150:8:5423:5436	11234989	0	True				
ANR	11235108	PostIncDecOperationExpression	zone -> rogue ++		11234989	0					
ANR	11235109	PtrMemberAccess	zone -> rogue		11234989	0					
ANR	11235110	Identifier	zone		11234989	0					
ANR	11235111	Identifier	rogue		11234989	1					
ANR	11235112	IncDec	++		11234989	1					
ANR	11235113	ExpressionStatement	free ( ptr )	153:4:5523:5532	11234989	6	True				
ANR	11235114	CallExpression	free ( ptr )		11234989	0					
ANR	11235115	Callee	free		11234989	0					
ANR	11235116	Identifier	free		11234989	0					
ANR	11235117	ArgumentList	ptr		11234989	1					
ANR	11235118	Argument	ptr		11234989	0					
ANR	11235119	Identifier	ptr		11234989	0					
ANR	11235120	ReturnType	local void		11234989	1					
ANR	11235121	Identifier	mem_free		11234989	2					
ANR	11235122	ParameterList	"void * mem , void * ptr"		11234989	3					
ANR	11235123	Parameter	void * mem	112:20:4329:4337	11234989	0	True				
ANR	11235124	ParameterType	void *		11234989	0					
ANR	11235125	Identifier	mem		11234989	1					
ANR	11235126	Parameter	void * ptr	112:31:4340:4348	11234989	1	True				
ANR	11235127	ParameterType	void *		11234989	0					
ANR	11235128	Identifier	ptr		11234989	1					
ANR	11235129	CFGEntryNode	ENTRY		11234989		True				
ANR	11235130	CFGExitNode	EXIT		11234989		True				
ANR	11235131	Symbol	next		11234989						
ANR	11235132	Symbol	next -> size		11234989						
ANR	11235133	Symbol	item		11234989						
ANR	11235134	Symbol	NULL		11234989						
ANR	11235135	Symbol	zone -> total		11234989						
ANR	11235136	Symbol	* zone		11234989						
ANR	11235137	Symbol	next -> ptr		11234989						
ANR	11235138	Symbol	next -> next		11234989						
ANR	11235139	Symbol	* next		11234989						
ANR	11235140	Symbol	item -> next		11234989						
ANR	11235141	Symbol	ptr		11234989						
ANR	11235142	Symbol	zone -> rogue		11234989						
ANR	11235143	Symbol	zone -> first		11234989						
ANR	11235144	Symbol	mem		11234989						
ANR	11235145	Symbol	zone		11234989						
ANR	11235146	Symbol	* item		11234989						
ANR	11235147	Symbol	zone -> notlifo		11234989						
ANR	11235148	Function	mem_setup	158:0:5694:6049							
ANR	11235149	FunctionDef	mem_setup (z_stream * strm)		11235148	0					
ANR	11235150	CompoundStatement		159:0:5731:6049	11235148	0					
ANR	11235151	IdentifierDeclStatement	struct mem_zone * zone ;	160:4:5737:5758	11235148	0	True				
ANR	11235152	IdentifierDecl	* zone		11235148	0					
ANR	11235153	IdentifierDeclType	struct mem_zone *		11235148	0					
ANR	11235154	Identifier	zone		11235148	1					
ANR	11235155	ExpressionStatement	zone = malloc ( sizeof ( struct mem_zone ) )	162:4:5765:5803	11235148	1	True				
ANR	11235156	AssignmentExpression	zone = malloc ( sizeof ( struct mem_zone ) )		11235148	0		=			
ANR	11235157	Identifier	zone		11235148	0					
ANR	11235158	CallExpression	malloc ( sizeof ( struct mem_zone ) )		11235148	1					
ANR	11235159	Callee	malloc		11235148	0					
ANR	11235160	Identifier	malloc		11235148	0					
ANR	11235161	ArgumentList	sizeof ( struct mem_zone )		11235148	1					
ANR	11235162	Argument	sizeof ( struct mem_zone )		11235148	0					
ANR	11235163	SizeofExpression	sizeof ( struct mem_zone )		11235148	0					
ANR	11235164	Sizeof	sizeof		11235148	0					
ANR	11235165	SizeofOperand	struct mem_zone		11235148	1					
ANR	11235166	ExpressionStatement	assert ( zone != NULL )	163:4:5809:5829	11235148	2	True				
ANR	11235167	CallExpression	assert ( zone != NULL )		11235148	0					
ANR	11235168	Callee	assert		11235148	0					
ANR	11235169	Identifier	assert		11235148	0					
ANR	11235170	ArgumentList	zone != NULL		11235148	1					
ANR	11235171	Argument	zone != NULL		11235148	0					
ANR	11235172	EqualityExpression	zone != NULL		11235148	0		!=			
ANR	11235173	Identifier	zone		11235148	0					
ANR	11235174	Identifier	NULL		11235148	1					
ANR	11235175	ExpressionStatement	zone -> first = NULL	164:4:5835:5853	11235148	3	True				
ANR	11235176	AssignmentExpression	zone -> first = NULL		11235148	0		=			
ANR	11235177	PtrMemberAccess	zone -> first		11235148	0					
ANR	11235178	Identifier	zone		11235148	0					
ANR	11235179	Identifier	first		11235148	1					
ANR	11235180	Identifier	NULL		11235148	1					
ANR	11235181	ExpressionStatement	zone -> total = 0	165:4:5859:5874	11235148	4	True				
ANR	11235182	AssignmentExpression	zone -> total = 0		11235148	0		=			
ANR	11235183	PtrMemberAccess	zone -> total		11235148	0					
ANR	11235184	Identifier	zone		11235148	0					
ANR	11235185	Identifier	total		11235148	1					
ANR	11235186	PrimaryExpression	0		11235148	1					
ANR	11235187	ExpressionStatement	zone -> highwater = 0	166:4:5880:5899	11235148	5	True				
ANR	11235188	AssignmentExpression	zone -> highwater = 0		11235148	0		=			
ANR	11235189	PtrMemberAccess	zone -> highwater		11235148	0					
ANR	11235190	Identifier	zone		11235148	0					
ANR	11235191	Identifier	highwater		11235148	1					
ANR	11235192	PrimaryExpression	0		11235148	1					
ANR	11235193	ExpressionStatement	zone -> limit = 0	167:4:5905:5920	11235148	6	True				
ANR	11235194	AssignmentExpression	zone -> limit = 0		11235148	0		=			
ANR	11235195	PtrMemberAccess	zone -> limit		11235148	0					
ANR	11235196	Identifier	zone		11235148	0					
ANR	11235197	Identifier	limit		11235148	1					
ANR	11235198	PrimaryExpression	0		11235148	1					
ANR	11235199	ExpressionStatement	zone -> notlifo = 0	168:4:5926:5943	11235148	7	True				
ANR	11235200	AssignmentExpression	zone -> notlifo = 0		11235148	0		=			
ANR	11235201	PtrMemberAccess	zone -> notlifo		11235148	0					
ANR	11235202	Identifier	zone		11235148	0					
ANR	11235203	Identifier	notlifo		11235148	1					
ANR	11235204	PrimaryExpression	0		11235148	1					
ANR	11235205	ExpressionStatement	zone -> rogue = 0	169:4:5949:5964	11235148	8	True				
ANR	11235206	AssignmentExpression	zone -> rogue = 0		11235148	0		=			
ANR	11235207	PtrMemberAccess	zone -> rogue		11235148	0					
ANR	11235208	Identifier	zone		11235148	0					
ANR	11235209	Identifier	rogue		11235148	1					
ANR	11235210	PrimaryExpression	0		11235148	1					
ANR	11235211	ExpressionStatement	strm -> opaque = zone	170:4:5970:5989	11235148	9	True				
ANR	11235212	AssignmentExpression	strm -> opaque = zone		11235148	0		=			
ANR	11235213	PtrMemberAccess	strm -> opaque		11235148	0					
ANR	11235214	Identifier	strm		11235148	0					
ANR	11235215	Identifier	opaque		11235148	1					
ANR	11235216	Identifier	zone		11235148	1					
ANR	11235217	ExpressionStatement	strm -> zalloc = mem_alloc	171:4:5995:6019	11235148	10	True				
ANR	11235218	AssignmentExpression	strm -> zalloc = mem_alloc		11235148	0		=			
ANR	11235219	PtrMemberAccess	strm -> zalloc		11235148	0					
ANR	11235220	Identifier	strm		11235148	0					
ANR	11235221	Identifier	zalloc		11235148	1					
ANR	11235222	Identifier	mem_alloc		11235148	1					
ANR	11235223	ExpressionStatement	strm -> zfree = mem_free	172:4:6025:6047	11235148	11	True				
ANR	11235224	AssignmentExpression	strm -> zfree = mem_free		11235148	0		=			
ANR	11235225	PtrMemberAccess	strm -> zfree		11235148	0					
ANR	11235226	Identifier	strm		11235148	0					
ANR	11235227	Identifier	zfree		11235148	1					
ANR	11235228	Identifier	mem_free		11235148	1					
ANR	11235229	ReturnType	local void		11235148	1					
ANR	11235230	Identifier	mem_setup		11235148	2					
ANR	11235231	ParameterList	z_stream * strm		11235148	3					
ANR	11235232	Parameter	z_stream * strm	158:21:5715:5728	11235148	0	True				
ANR	11235233	ParameterType	z_stream *		11235148	0					
ANR	11235234	Identifier	strm		11235148	1					
ANR	11235235	CFGEntryNode	ENTRY		11235148		True				
ANR	11235236	CFGExitNode	EXIT		11235148		True				
ANR	11235237	Symbol	malloc		11235148						
ANR	11235238	Symbol	NULL		11235148						
ANR	11235239	Symbol	zone -> total		11235148						
ANR	11235240	Symbol	strm -> zfree		11235148						
ANR	11235241	Symbol	* zone		11235148						
ANR	11235242	Symbol	strm -> opaque		11235148						
ANR	11235243	Symbol	strm		11235148						
ANR	11235244	Symbol	mem_alloc		11235148						
ANR	11235245	Symbol	zone -> rogue		11235148						
ANR	11235246	Symbol	zone -> first		11235148						
ANR	11235247	Symbol	zone		11235148						
ANR	11235248	Symbol	* strm		11235148						
ANR	11235249	Symbol	mem_free		11235148						
ANR	11235250	Symbol	zone -> limit		11235148						
ANR	11235251	Symbol	zone -> notlifo		11235148						
ANR	11235252	Symbol	strm -> zalloc		11235148						
ANR	11235253	Symbol	zone -> highwater		11235148						
ANR	11235254	Function	mem_limit	176:0:6127:6248							
ANR	11235255	FunctionDef	"mem_limit (z_stream * strm , size_t limit)"		11235254	0					
ANR	11235256	CompoundStatement		177:0:6178:6248	11235254	0					
ANR	11235257	IdentifierDeclStatement	struct mem_zone * zone = strm -> opaque ;	178:4:6184:6220	11235254	0	True				
ANR	11235258	IdentifierDecl	* zone = strm -> opaque		11235254	0					
ANR	11235259	IdentifierDeclType	struct mem_zone *		11235254	0					
ANR	11235260	Identifier	zone		11235254	1					
ANR	11235261	AssignmentExpression	* zone = strm -> opaque		11235254	2		=			
ANR	11235262	Identifier	zone		11235254	0					
ANR	11235263	PtrMemberAccess	strm -> opaque		11235254	1					
ANR	11235264	Identifier	strm		11235254	0					
ANR	11235265	Identifier	opaque		11235254	1					
ANR	11235266	ExpressionStatement	zone -> limit = limit	180:4:6227:6246	11235254	1	True				
ANR	11235267	AssignmentExpression	zone -> limit = limit		11235254	0		=			
ANR	11235268	PtrMemberAccess	zone -> limit		11235254	0					
ANR	11235269	Identifier	zone		11235254	0					
ANR	11235270	Identifier	limit		11235254	1					
ANR	11235271	Identifier	limit		11235254	1					
ANR	11235272	ReturnType	local void		11235254	1					
ANR	11235273	Identifier	mem_limit		11235254	2					
ANR	11235274	ParameterList	"z_stream * strm , size_t limit"		11235254	3					
ANR	11235275	Parameter	z_stream * strm	176:21:6148:6161	11235254	0	True				
ANR	11235276	ParameterType	z_stream *		11235254	0					
ANR	11235277	Identifier	strm		11235254	1					
ANR	11235278	Parameter	size_t limit	176:37:6164:6175	11235254	1	True				
ANR	11235279	ParameterType	size_t		11235254	0					
ANR	11235280	Identifier	limit		11235254	1					
ANR	11235281	CFGEntryNode	ENTRY		11235254		True				
ANR	11235282	CFGExitNode	EXIT		11235254		True				
ANR	11235283	Symbol	zone		11235254						
ANR	11235284	Symbol	* zone		11235254						
ANR	11235285	Symbol	* strm		11235254						
ANR	11235286	Symbol	limit		11235254						
ANR	11235287	Symbol	strm -> opaque		11235254						
ANR	11235288	Symbol	zone -> limit		11235254						
ANR	11235289	Symbol	strm		11235254						
ANR	11235290	Function	mem_used	184:0:6311:6471							
ANR	11235291	FunctionDef	"mem_used (z_stream * strm , char * prefix)"		11235290	0					
ANR	11235292	CompoundStatement		185:0:6361:6471	11235290	0					
ANR	11235293	IdentifierDeclStatement	struct mem_zone * zone = strm -> opaque ;	186:4:6367:6403	11235290	0	True				
ANR	11235294	IdentifierDecl	* zone = strm -> opaque		11235290	0					
ANR	11235295	IdentifierDeclType	struct mem_zone *		11235290	0					
ANR	11235296	Identifier	zone		11235290	1					
ANR	11235297	AssignmentExpression	* zone = strm -> opaque		11235290	2		=			
ANR	11235298	Identifier	zone		11235290	0					
ANR	11235299	PtrMemberAccess	strm -> opaque		11235290	1					
ANR	11235300	Identifier	strm		11235290	0					
ANR	11235301	Identifier	opaque		11235290	1					
ANR	11235302	ExpressionStatement	"fprintf ( stderr , ""%s: %lu allocated\\n"" , prefix , zone -> total )"	188:4:6410:6469	11235290	1	True				
ANR	11235303	CallExpression	"fprintf ( stderr , ""%s: %lu allocated\\n"" , prefix , zone -> total )"		11235290	0					
ANR	11235304	Callee	fprintf		11235290	0					
ANR	11235305	Identifier	fprintf		11235290	0					
ANR	11235306	ArgumentList	stderr		11235290	1					
ANR	11235307	Argument	stderr		11235290	0					
ANR	11235308	Identifier	stderr		11235290	0					
ANR	11235309	Argument	"""%s: %lu allocated\\n"""		11235290	1					
ANR	11235310	PrimaryExpression	"""%s: %lu allocated\\n"""		11235290	0					
ANR	11235311	Argument	prefix		11235290	2					
ANR	11235312	Identifier	prefix		11235290	0					
ANR	11235313	Argument	zone -> total		11235290	3					
ANR	11235314	PtrMemberAccess	zone -> total		11235290	0					
ANR	11235315	Identifier	zone		11235290	0					
ANR	11235316	Identifier	total		11235290	1					
ANR	11235317	ReturnType	local void		11235290	1					
ANR	11235318	Identifier	mem_used		11235290	2					
ANR	11235319	ParameterList	"z_stream * strm , char * prefix"		11235290	3					
ANR	11235320	Parameter	z_stream * strm	184:20:6331:6344	11235290	0	True				
ANR	11235321	ParameterType	z_stream *		11235290	0					
ANR	11235322	Identifier	strm		11235290	1					
ANR	11235323	Parameter	char * prefix	184:36:6347:6358	11235290	1	True				
ANR	11235324	ParameterType	char *		11235290	0					
ANR	11235325	Identifier	prefix		11235290	1					
ANR	11235326	CFGEntryNode	ENTRY		11235290		True				
ANR	11235327	CFGExitNode	EXIT		11235290		True				
ANR	11235328	Symbol	zone -> total		11235290						
ANR	11235329	Symbol	zone		11235290						
ANR	11235330	Symbol	* zone		11235290						
ANR	11235331	Symbol	prefix		11235290						
ANR	11235332	Symbol	* strm		11235290						
ANR	11235333	Symbol	strm -> opaque		11235290						
ANR	11235334	Symbol	strm		11235290						
ANR	11235335	Symbol	stderr		11235290						
ANR	11235336	Function	mem_high	192:0:6520:6690							
ANR	11235337	FunctionDef	"mem_high (z_stream * strm , char * prefix)"		11235336	0					
ANR	11235338	CompoundStatement		193:0:6570:6690	11235336	0					
ANR	11235339	IdentifierDeclStatement	struct mem_zone * zone = strm -> opaque ;	194:4:6576:6612	11235336	0	True				
ANR	11235340	IdentifierDecl	* zone = strm -> opaque		11235336	0					
ANR	11235341	IdentifierDeclType	struct mem_zone *		11235336	0					
ANR	11235342	Identifier	zone		11235336	1					
ANR	11235343	AssignmentExpression	* zone = strm -> opaque		11235336	2		=			
ANR	11235344	Identifier	zone		11235336	0					
ANR	11235345	PtrMemberAccess	strm -> opaque		11235336	1					
ANR	11235346	Identifier	strm		11235336	0					
ANR	11235347	Identifier	opaque		11235336	1					
ANR	11235348	ExpressionStatement	"fprintf ( stderr , ""%s: %lu high water mark\\n"" , prefix , zone -> highwater )"	196:4:6619:6688	11235336	1	True				
ANR	11235349	CallExpression	"fprintf ( stderr , ""%s: %lu high water mark\\n"" , prefix , zone -> highwater )"		11235336	0					
ANR	11235350	Callee	fprintf		11235336	0					
ANR	11235351	Identifier	fprintf		11235336	0					
ANR	11235352	ArgumentList	stderr		11235336	1					
ANR	11235353	Argument	stderr		11235336	0					
ANR	11235354	Identifier	stderr		11235336	0					
ANR	11235355	Argument	"""%s: %lu high water mark\\n"""		11235336	1					
ANR	11235356	PrimaryExpression	"""%s: %lu high water mark\\n"""		11235336	0					
ANR	11235357	Argument	prefix		11235336	2					
ANR	11235358	Identifier	prefix		11235336	0					
ANR	11235359	Argument	zone -> highwater		11235336	3					
ANR	11235360	PtrMemberAccess	zone -> highwater		11235336	0					
ANR	11235361	Identifier	zone		11235336	0					
ANR	11235362	Identifier	highwater		11235336	1					
ANR	11235363	ReturnType	local void		11235336	1					
ANR	11235364	Identifier	mem_high		11235336	2					
ANR	11235365	ParameterList	"z_stream * strm , char * prefix"		11235336	3					
ANR	11235366	Parameter	z_stream * strm	192:20:6540:6553	11235336	0	True				
ANR	11235367	ParameterType	z_stream *		11235336	0					
ANR	11235368	Identifier	strm		11235336	1					
ANR	11235369	Parameter	char * prefix	192:36:6556:6567	11235336	1	True				
ANR	11235370	ParameterType	char *		11235336	0					
ANR	11235371	Identifier	prefix		11235336	1					
ANR	11235372	CFGEntryNode	ENTRY		11235336		True				
ANR	11235373	CFGExitNode	EXIT		11235336		True				
ANR	11235374	Symbol	zone		11235336						
ANR	11235375	Symbol	* zone		11235336						
ANR	11235376	Symbol	prefix		11235336						
ANR	11235377	Symbol	* strm		11235336						
ANR	11235378	Symbol	strm -> opaque		11235336						
ANR	11235379	Symbol	strm		11235336						
ANR	11235380	Symbol	stderr		11235336						
ANR	11235381	Symbol	zone -> highwater		11235336						
ANR	11235382	Function	mem_done	200:0:6772:7773							
ANR	11235383	FunctionDef	"mem_done (z_stream * strm , char * prefix)"		11235382	0					
ANR	11235384	CompoundStatement		201:0:6822:7773	11235382	0					
ANR	11235385	IdentifierDeclStatement	int count = 0 ;	202:4:6828:6841	11235382	0	True				
ANR	11235386	IdentifierDecl	count = 0		11235382	0					
ANR	11235387	IdentifierDeclType	int		11235382	0					
ANR	11235388	Identifier	count		11235382	1					
ANR	11235389	AssignmentExpression	count = 0		11235382	2		=			
ANR	11235390	Identifier	count		11235382	0					
ANR	11235391	PrimaryExpression	0		11235382	1					
ANR	11235392	IdentifierDeclStatement	"struct mem_item * item , * next ;"	203:4:6847:6875	11235382	1	True				
ANR	11235393	IdentifierDecl	* item		11235382	0					
ANR	11235394	IdentifierDeclType	struct mem_item *		11235382	0					
ANR	11235395	Identifier	item		11235382	1					
ANR	11235396	IdentifierDecl	* next		11235382	1					
ANR	11235397	IdentifierDeclType	struct mem_item *		11235382	0					
ANR	11235398	Identifier	next		11235382	1					
ANR	11235399	IdentifierDeclStatement	struct mem_zone * zone = strm -> opaque ;	204:4:6881:6917	11235382	2	True				
ANR	11235400	IdentifierDecl	* zone = strm -> opaque		11235382	0					
ANR	11235401	IdentifierDeclType	struct mem_zone *		11235382	0					
ANR	11235402	Identifier	zone		11235382	1					
ANR	11235403	AssignmentExpression	* zone = strm -> opaque		11235382	2		=			
ANR	11235404	Identifier	zone		11235382	0					
ANR	11235405	PtrMemberAccess	strm -> opaque		11235382	1					
ANR	11235406	Identifier	strm		11235382	0					
ANR	11235407	Identifier	opaque		11235382	1					
ANR	11235408	ExpressionStatement	"mem_high ( strm , prefix )"	207:4:6955:6977	11235382	3	True				
ANR	11235409	CallExpression	"mem_high ( strm , prefix )"		11235382	0					
ANR	11235410	Callee	mem_high		11235382	0					
ANR	11235411	Identifier	mem_high		11235382	0					
ANR	11235412	ArgumentList	strm		11235382	1					
ANR	11235413	Argument	strm		11235382	0					
ANR	11235414	Identifier	strm		11235382	0					
ANR	11235415	Argument	prefix		11235382	1					
ANR	11235416	Identifier	prefix		11235382	0					
ANR	11235417	ExpressionStatement	item = zone -> first	210:4:7048:7066	11235382	4	True				
ANR	11235418	AssignmentExpression	item = zone -> first		11235382	0		=			
ANR	11235419	Identifier	item		11235382	0					
ANR	11235420	PtrMemberAccess	zone -> first		11235382	1					
ANR	11235421	Identifier	zone		11235382	0					
ANR	11235422	Identifier	first		11235382	1					
ANR	11235423	WhileStatement	while ( item != NULL )		11235382	5					
ANR	11235424	Condition	item != NULL	211:11:7079:7090	11235382	0	True				
ANR	11235425	EqualityExpression	item != NULL		11235382	0		!=			
ANR	11235426	Identifier	item		11235382	0					
ANR	11235427	Identifier	NULL		11235382	1					
ANR	11235428	CompoundStatement		11:25:270:270	11235382	1					
ANR	11235429	ExpressionStatement	free ( item -> ptr )	212:8:7103:7118	11235382	0	True				
ANR	11235430	CallExpression	free ( item -> ptr )		11235382	0					
ANR	11235431	Callee	free		11235382	0					
ANR	11235432	Identifier	free		11235382	0					
ANR	11235433	ArgumentList	item -> ptr		11235382	1					
ANR	11235434	Argument	item -> ptr		11235382	0					
ANR	11235435	PtrMemberAccess	item -> ptr		11235382	0					
ANR	11235436	Identifier	item		11235382	0					
ANR	11235437	Identifier	ptr		11235382	1					
ANR	11235438	ExpressionStatement	next = item -> next	213:8:7128:7145	11235382	1	True				
ANR	11235439	AssignmentExpression	next = item -> next		11235382	0		=			
ANR	11235440	Identifier	next		11235382	0					
ANR	11235441	PtrMemberAccess	item -> next		11235382	1					
ANR	11235442	Identifier	item		11235382	0					
ANR	11235443	Identifier	next		11235382	1					
ANR	11235444	ExpressionStatement	free ( item )	214:8:7155:7165	11235382	2	True				
ANR	11235445	CallExpression	free ( item )		11235382	0					
ANR	11235446	Callee	free		11235382	0					
ANR	11235447	Identifier	free		11235382	0					
ANR	11235448	ArgumentList	item		11235382	1					
ANR	11235449	Argument	item		11235382	0					
ANR	11235450	Identifier	item		11235382	0					
ANR	11235451	ExpressionStatement	item = next	215:8:7175:7186	11235382	3	True				
ANR	11235452	AssignmentExpression	item = next		11235382	0		=			
ANR	11235453	Identifier	item		11235382	0					
ANR	11235454	Identifier	next		11235382	1					
ANR	11235455	ExpressionStatement	count ++	216:8:7196:7203	11235382	4	True				
ANR	11235456	PostIncDecOperationExpression	count ++		11235382	0					
ANR	11235457	Identifier	count		11235382	0					
ANR	11235458	IncDec	++		11235382	1					
ANR	11235459	IfStatement	if ( count || zone -> total )		11235382	6					
ANR	11235460	Condition	count || zone -> total	220:8:7269:7288	11235382	0	True				
ANR	11235461	OrExpression	count || zone -> total		11235382	0		||			
ANR	11235462	Identifier	count		11235382	0					
ANR	11235463	PtrMemberAccess	zone -> total		11235382	1					
ANR	11235464	Identifier	zone		11235382	0					
ANR	11235465	Identifier	total		11235382	1					
ANR	11235466	ExpressionStatement	"fprintf ( stderr , ""** %s: %lu bytes in %d blocks not freed\\n"" , prefix , zone -> total , count )"	221:8:7299:7403	11235382	1	True				
ANR	11235467	CallExpression	"fprintf ( stderr , ""** %s: %lu bytes in %d blocks not freed\\n"" , prefix , zone -> total , count )"		11235382	0					
ANR	11235468	Callee	fprintf		11235382	0					
ANR	11235469	Identifier	fprintf		11235382	0					
ANR	11235470	ArgumentList	stderr		11235382	1					
ANR	11235471	Argument	stderr		11235382	0					
ANR	11235472	Identifier	stderr		11235382	0					
ANR	11235473	Argument	"""** %s: %lu bytes in %d blocks not freed\\n"""		11235382	1					
ANR	11235474	PrimaryExpression	"""** %s: %lu bytes in %d blocks not freed\\n"""		11235382	0					
ANR	11235475	Argument	prefix		11235382	2					
ANR	11235476	Identifier	prefix		11235382	0					
ANR	11235477	Argument	zone -> total		11235382	3					
ANR	11235478	PtrMemberAccess	zone -> total		11235382	0					
ANR	11235479	Identifier	zone		11235382	0					
ANR	11235480	Identifier	total		11235382	1					
ANR	11235481	Argument	count		11235382	4					
ANR	11235482	Identifier	count		11235382	0					
ANR	11235483	IfStatement	if ( zone -> notlifo )		11235382	7					
ANR	11235484	Condition	zone -> notlifo	223:8:7413:7425	11235382	0	True				
ANR	11235485	PtrMemberAccess	zone -> notlifo		11235382	0					
ANR	11235486	Identifier	zone		11235382	0					
ANR	11235487	Identifier	notlifo		11235382	1					
ANR	11235488	ExpressionStatement	"fprintf ( stderr , ""** %s: %d frees not LIFO\\n"" , prefix , zone -> notlifo )"	224:8:7436:7504	11235382	1	True				
ANR	11235489	CallExpression	"fprintf ( stderr , ""** %s: %d frees not LIFO\\n"" , prefix , zone -> notlifo )"		11235382	0					
ANR	11235490	Callee	fprintf		11235382	0					
ANR	11235491	Identifier	fprintf		11235382	0					
ANR	11235492	ArgumentList	stderr		11235382	1					
ANR	11235493	Argument	stderr		11235382	0					
ANR	11235494	Identifier	stderr		11235382	0					
ANR	11235495	Argument	"""** %s: %d frees not LIFO\\n"""		11235382	1					
ANR	11235496	PrimaryExpression	"""** %s: %d frees not LIFO\\n"""		11235382	0					
ANR	11235497	Argument	prefix		11235382	2					
ANR	11235498	Identifier	prefix		11235382	0					
ANR	11235499	Argument	zone -> notlifo		11235382	3					
ANR	11235500	PtrMemberAccess	zone -> notlifo		11235382	0					
ANR	11235501	Identifier	zone		11235382	0					
ANR	11235502	Identifier	notlifo		11235382	1					
ANR	11235503	IfStatement	if ( zone -> rogue )		11235382	8					
ANR	11235504	Condition	zone -> rogue	225:8:7514:7524	11235382	0	True				
ANR	11235505	PtrMemberAccess	zone -> rogue		11235382	0					
ANR	11235506	Identifier	zone		11235382	0					
ANR	11235507	Identifier	rogue		11235382	1					
ANR	11235508	ExpressionStatement	"fprintf ( stderr , ""** %s: %d frees not recognized\\n"" , prefix , zone -> rogue )"	226:8:7535:7623	11235382	1	True				
ANR	11235509	CallExpression	"fprintf ( stderr , ""** %s: %d frees not recognized\\n"" , prefix , zone -> rogue )"		11235382	0					
ANR	11235510	Callee	fprintf		11235382	0					
ANR	11235511	Identifier	fprintf		11235382	0					
ANR	11235512	ArgumentList	stderr		11235382	1					
ANR	11235513	Argument	stderr		11235382	0					
ANR	11235514	Identifier	stderr		11235382	0					
ANR	11235515	Argument	"""** %s: %d frees not recognized\\n"""		11235382	1					
ANR	11235516	PrimaryExpression	"""** %s: %d frees not recognized\\n"""		11235382	0					
ANR	11235517	Argument	prefix		11235382	2					
ANR	11235518	Identifier	prefix		11235382	0					
ANR	11235519	Argument	zone -> rogue		11235382	3					
ANR	11235520	PtrMemberAccess	zone -> rogue		11235382	0					
ANR	11235521	Identifier	zone		11235382	0					
ANR	11235522	Identifier	rogue		11235382	1					
ANR	11235523	ExpressionStatement	free ( zone )	230:4:7681:7691	11235382	9	True				
ANR	11235524	CallExpression	free ( zone )		11235382	0					
ANR	11235525	Callee	free		11235382	0					
ANR	11235526	Identifier	free		11235382	0					
ANR	11235527	ArgumentList	zone		11235382	1					
ANR	11235528	Argument	zone		11235382	0					
ANR	11235529	Identifier	zone		11235382	0					
ANR	11235530	ExpressionStatement	strm -> opaque = Z_NULL	231:4:7697:7718	11235382	10	True				
ANR	11235531	AssignmentExpression	strm -> opaque = Z_NULL		11235382	0		=			
ANR	11235532	PtrMemberAccess	strm -> opaque		11235382	0					
ANR	11235533	Identifier	strm		11235382	0					
ANR	11235534	Identifier	opaque		11235382	1					
ANR	11235535	Identifier	Z_NULL		11235382	1					
ANR	11235536	ExpressionStatement	strm -> zalloc = Z_NULL	232:4:7724:7745	11235382	11	True				
ANR	11235537	AssignmentExpression	strm -> zalloc = Z_NULL		11235382	0		=			
ANR	11235538	PtrMemberAccess	strm -> zalloc		11235382	0					
ANR	11235539	Identifier	strm		11235382	0					
ANR	11235540	Identifier	zalloc		11235382	1					
ANR	11235541	Identifier	Z_NULL		11235382	1					
ANR	11235542	ExpressionStatement	strm -> zfree = Z_NULL	233:4:7751:7771	11235382	12	True				
ANR	11235543	AssignmentExpression	strm -> zfree = Z_NULL		11235382	0		=			
ANR	11235544	PtrMemberAccess	strm -> zfree		11235382	0					
ANR	11235545	Identifier	strm		11235382	0					
ANR	11235546	Identifier	zfree		11235382	1					
ANR	11235547	Identifier	Z_NULL		11235382	1					
ANR	11235548	ReturnType	local void		11235382	1					
ANR	11235549	Identifier	mem_done		11235382	2					
ANR	11235550	ParameterList	"z_stream * strm , char * prefix"		11235382	3					
ANR	11235551	Parameter	z_stream * strm	200:20:6792:6805	11235382	0	True				
ANR	11235552	ParameterType	z_stream *		11235382	0					
ANR	11235553	Identifier	strm		11235382	1					
ANR	11235554	Parameter	char * prefix	200:36:6808:6819	11235382	1	True				
ANR	11235555	ParameterType	char *		11235382	0					
ANR	11235556	Identifier	prefix		11235382	1					
ANR	11235557	CFGEntryNode	ENTRY		11235382		True				
ANR	11235558	CFGExitNode	EXIT		11235382		True				
ANR	11235559	Symbol	next		11235382						
ANR	11235560	Symbol	item		11235382						
ANR	11235561	Symbol	NULL		11235382						
ANR	11235562	Symbol	zone -> total		11235382						
ANR	11235563	Symbol	strm -> zfree		11235382						
ANR	11235564	Symbol	* zone		11235382						
ANR	11235565	Symbol	prefix		11235382						
ANR	11235566	Symbol	count		11235382						
ANR	11235567	Symbol	strm -> opaque		11235382						
ANR	11235568	Symbol	strm		11235382						
ANR	11235569	Symbol	stderr		11235382						
ANR	11235570	Symbol	item -> next		11235382						
ANR	11235571	Symbol	zone -> rogue		11235382						
ANR	11235572	Symbol	zone -> first		11235382						
ANR	11235573	Symbol	item -> ptr		11235382						
ANR	11235574	Symbol	zone		11235382						
ANR	11235575	Symbol	* strm		11235382						
ANR	11235576	Symbol	* item		11235382						
ANR	11235577	Symbol	zone -> notlifo		11235382						
ANR	11235578	Symbol	strm -> zalloc		11235382						
ANR	11235579	Symbol	Z_NULL		11235382						
ANR	11235580	Function	h2b	245:6:8344:9370							
ANR	11235581	FunctionDef	"h2b (const char * hex , unsigned * len)"		11235580	0					
ANR	11235582	CompoundStatement		246:0:8395:9370	11235580	0					
ANR	11235583	IdentifierDeclStatement	"unsigned char * in , * re ;"	247:4:8401:8423	11235580	0	True				
ANR	11235584	IdentifierDecl	* in		11235580	0					
ANR	11235585	IdentifierDeclType	unsigned char *		11235580	0					
ANR	11235586	Identifier	in		11235580	1					
ANR	11235587	IdentifierDecl	* re		11235580	1					
ANR	11235588	IdentifierDeclType	unsigned char *		11235580	0					
ANR	11235589	Identifier	re		11235580	1					
ANR	11235590	IdentifierDeclStatement	"unsigned next , val ;"	248:4:8429:8447	11235580	1	True				
ANR	11235591	IdentifierDecl	next		11235580	0					
ANR	11235592	IdentifierDeclType	unsigned		11235580	0					
ANR	11235593	Identifier	next		11235580	1					
ANR	11235594	IdentifierDecl	val		11235580	1					
ANR	11235595	IdentifierDeclType	unsigned		11235580	0					
ANR	11235596	Identifier	val		11235580	1					
ANR	11235597	ExpressionStatement	in = malloc ( ( strlen ( hex ) + 1 ) >> 1 )	250:4:8454:8489	11235580	2	True				
ANR	11235598	AssignmentExpression	in = malloc ( ( strlen ( hex ) + 1 ) >> 1 )		11235580	0		=			
ANR	11235599	Identifier	in		11235580	0					
ANR	11235600	CallExpression	malloc ( ( strlen ( hex ) + 1 ) >> 1 )		11235580	1					
ANR	11235601	Callee	malloc		11235580	0					
ANR	11235602	Identifier	malloc		11235580	0					
ANR	11235603	ArgumentList	( strlen ( hex ) + 1 ) >> 1		11235580	1					
ANR	11235604	Argument	( strlen ( hex ) + 1 ) >> 1		11235580	0					
ANR	11235605	ShiftExpression	( strlen ( hex ) + 1 ) >> 1		11235580	0		>>			
ANR	11235606	AdditiveExpression	strlen ( hex ) + 1		11235580	0		+			
ANR	11235607	CallExpression	strlen ( hex )		11235580	0					
ANR	11235608	Callee	strlen		11235580	0					
ANR	11235609	Identifier	strlen		11235580	0					
ANR	11235610	ArgumentList	hex		11235580	1					
ANR	11235611	Argument	hex		11235580	0					
ANR	11235612	Identifier	hex		11235580	0					
ANR	11235613	PrimaryExpression	1		11235580	1					
ANR	11235614	PrimaryExpression	1		11235580	1					
ANR	11235615	IfStatement	if ( in == NULL )		11235580	3					
ANR	11235616	Condition	in == NULL	251:8:8499:8508	11235580	0	True				
ANR	11235617	EqualityExpression	in == NULL		11235580	0		==			
ANR	11235618	Identifier	in		11235580	0					
ANR	11235619	Identifier	NULL		11235580	1					
ANR	11235620	ReturnStatement	return NULL ;	252:8:8519:8530	11235580	1	True				
ANR	11235621	Identifier	NULL		11235580	0					
ANR	11235622	ExpressionStatement	next = 0	253:4:8536:8544	11235580	4	True				
ANR	11235623	AssignmentExpression	next = 0		11235580	0		=			
ANR	11235624	Identifier	next		11235580	0					
ANR	11235625	PrimaryExpression	0		11235580	1					
ANR	11235626	ExpressionStatement	val = 1	254:4:8550:8557	11235580	5	True				
ANR	11235627	AssignmentExpression	val = 1		11235580	0		=			
ANR	11235628	Identifier	val		11235580	0					
ANR	11235629	PrimaryExpression	1		11235580	1					
ANR	11235630	DoStatement	do		11235580	6					
ANR	11235631	CompoundStatement		10:7:170:170	11235580	0					
ANR	11235632	IfStatement	if ( * hex >= '0' && * hex <= '9' )		11235580	0					
ANR	11235633	Condition	* hex >= '0' && * hex <= '9'	256:12:8580:8605	11235580	0	True				
ANR	11235634	AndExpression	* hex >= '0' && * hex <= '9'		11235580	0		&&			
ANR	11235635	RelationalExpression	* hex >= '0'		11235580	0		>=			
ANR	11235636	UnaryOperationExpression	* hex		11235580	0					
ANR	11235637	UnaryOperator	*		11235580	0					
ANR	11235638	Identifier	hex		11235580	1					
ANR	11235639	PrimaryExpression	'0'		11235580	1					
ANR	11235640	RelationalExpression	* hex <= '9'		11235580	1		<=			
ANR	11235641	UnaryOperationExpression	* hex		11235580	0					
ANR	11235642	UnaryOperator	*		11235580	0					
ANR	11235643	Identifier	hex		11235580	1					
ANR	11235644	PrimaryExpression	'9'		11235580	1					
ANR	11235645	ExpressionStatement	val = ( val << 4 ) + * hex - '0'	257:12:8620:8649	11235580	1	True				
ANR	11235646	AssignmentExpression	val = ( val << 4 ) + * hex - '0'		11235580	0		=			
ANR	11235647	Identifier	val		11235580	0					
ANR	11235648	AdditiveExpression	( val << 4 ) + * hex - '0'		11235580	1		+			
ANR	11235649	ShiftExpression	val << 4		11235580	0		<<			
ANR	11235650	Identifier	val		11235580	0					
ANR	11235651	PrimaryExpression	4		11235580	1					
ANR	11235652	AdditiveExpression	* hex - '0'		11235580	1		-			
ANR	11235653	UnaryOperationExpression	* hex		11235580	0					
ANR	11235654	UnaryOperator	*		11235580	0					
ANR	11235655	Identifier	hex		11235580	1					
ANR	11235656	PrimaryExpression	'0'		11235580	1					
ANR	11235657	ElseStatement	else		11235580	0					
ANR	11235658	IfStatement	if ( * hex >= 'A' && * hex <= 'F' )		11235580	0					
ANR	11235659	Condition	* hex >= 'A' && * hex <= 'F'	258:17:8668:8693	11235580	0	True				
ANR	11235660	AndExpression	* hex >= 'A' && * hex <= 'F'		11235580	0		&&			
ANR	11235661	RelationalExpression	* hex >= 'A'		11235580	0		>=			
ANR	11235662	UnaryOperationExpression	* hex		11235580	0					
ANR	11235663	UnaryOperator	*		11235580	0					
ANR	11235664	Identifier	hex		11235580	1					
ANR	11235665	PrimaryExpression	'A'		11235580	1					
ANR	11235666	RelationalExpression	* hex <= 'F'		11235580	1		<=			
ANR	11235667	UnaryOperationExpression	* hex		11235580	0					
ANR	11235668	UnaryOperator	*		11235580	0					
ANR	11235669	Identifier	hex		11235580	1					
ANR	11235670	PrimaryExpression	'F'		11235580	1					
ANR	11235671	ExpressionStatement	val = ( val << 4 ) + * hex - 'A' + 10	259:12:8708:8742	11235580	1	True				
ANR	11235672	AssignmentExpression	val = ( val << 4 ) + * hex - 'A' + 10		11235580	0		=			
ANR	11235673	Identifier	val		11235580	0					
ANR	11235674	AdditiveExpression	( val << 4 ) + * hex - 'A' + 10		11235580	1		+			
ANR	11235675	ShiftExpression	val << 4		11235580	0		<<			
ANR	11235676	Identifier	val		11235580	0					
ANR	11235677	PrimaryExpression	4		11235580	1					
ANR	11235678	AdditiveExpression	* hex - 'A' + 10		11235580	1		-			
ANR	11235679	UnaryOperationExpression	* hex		11235580	0					
ANR	11235680	UnaryOperator	*		11235580	0					
ANR	11235681	Identifier	hex		11235580	1					
ANR	11235682	AdditiveExpression	'A' + 10		11235580	1		+			
ANR	11235683	PrimaryExpression	'A'		11235580	0					
ANR	11235684	PrimaryExpression	10		11235580	1					
ANR	11235685	ElseStatement	else		11235580	0					
ANR	11235686	IfStatement	if ( * hex >= 'a' && * hex <= 'f' )		11235580	0					
ANR	11235687	Condition	* hex >= 'a' && * hex <= 'f'	260:17:8761:8786	11235580	0	True				
ANR	11235688	AndExpression	* hex >= 'a' && * hex <= 'f'		11235580	0		&&			
ANR	11235689	RelationalExpression	* hex >= 'a'		11235580	0		>=			
ANR	11235690	UnaryOperationExpression	* hex		11235580	0					
ANR	11235691	UnaryOperator	*		11235580	0					
ANR	11235692	Identifier	hex		11235580	1					
ANR	11235693	PrimaryExpression	'a'		11235580	1					
ANR	11235694	RelationalExpression	* hex <= 'f'		11235580	1		<=			
ANR	11235695	UnaryOperationExpression	* hex		11235580	0					
ANR	11235696	UnaryOperator	*		11235580	0					
ANR	11235697	Identifier	hex		11235580	1					
ANR	11235698	PrimaryExpression	'f'		11235580	1					
ANR	11235699	ExpressionStatement	val = ( val << 4 ) + * hex - 'a' + 10	261:12:8801:8835	11235580	1	True				
ANR	11235700	AssignmentExpression	val = ( val << 4 ) + * hex - 'a' + 10		11235580	0		=			
ANR	11235701	Identifier	val		11235580	0					
ANR	11235702	AdditiveExpression	( val << 4 ) + * hex - 'a' + 10		11235580	1		+			
ANR	11235703	ShiftExpression	val << 4		11235580	0		<<			
ANR	11235704	Identifier	val		11235580	0					
ANR	11235705	PrimaryExpression	4		11235580	1					
ANR	11235706	AdditiveExpression	* hex - 'a' + 10		11235580	1		-			
ANR	11235707	UnaryOperationExpression	* hex		11235580	0					
ANR	11235708	UnaryOperator	*		11235580	0					
ANR	11235709	Identifier	hex		11235580	1					
ANR	11235710	AdditiveExpression	'a' + 10		11235580	1		+			
ANR	11235711	PrimaryExpression	'a'		11235580	0					
ANR	11235712	PrimaryExpression	10		11235580	1					
ANR	11235713	ElseStatement	else		11235580	0					
ANR	11235714	IfStatement	if ( val != 1 && val < 32 )		11235580	0					
ANR	11235715	Condition	val != 1 && val < 32	262:17:8854:8873	11235580	0	True				
ANR	11235716	AndExpression	val != 1 && val < 32		11235580	0		&&			
ANR	11235717	EqualityExpression	val != 1		11235580	0		!=			
ANR	11235718	Identifier	val		11235580	0					
ANR	11235719	PrimaryExpression	1		11235580	1					
ANR	11235720	RelationalExpression	val < 32		11235580	1		<			
ANR	11235721	Identifier	val		11235580	0					
ANR	11235722	PrimaryExpression	32		11235580	1					
ANR	11235723	ExpressionStatement	val += 240	263:12:8927:8937	11235580	1	True				
ANR	11235724	AssignmentExpression	val += 240		11235580	0		+=			
ANR	11235725	Identifier	val		11235580	0					
ANR	11235726	PrimaryExpression	240		11235580	1					
ANR	11235727	IfStatement	if ( val > 255 )		11235580	1					
ANR	11235728	Condition	val > 255	264:12:9002:9010	11235580	0	True				
ANR	11235729	RelationalExpression	val > 255		11235580	0		>			
ANR	11235730	Identifier	val		11235580	0					
ANR	11235731	PrimaryExpression	255		11235580	1					
ANR	11235732	CompoundStatement		19:23:617:617	11235580	1					
ANR	11235733	ExpressionStatement	in [ next ++ ] = val & 0xff	265:12:9064:9087	11235580	0	True				
ANR	11235734	AssignmentExpression	in [ next ++ ] = val & 0xff		11235580	0		=			
ANR	11235735	ArrayIndexing	in [ next ++ ]		11235580	0					
ANR	11235736	Identifier	in		11235580	0					
ANR	11235737	PostIncDecOperationExpression	next ++		11235580	1					
ANR	11235738	Identifier	next		11235580	0					
ANR	11235739	IncDec	++		11235580	1					
ANR	11235740	BitAndExpression	val & 0xff		11235580	1		&			
ANR	11235741	Identifier	val		11235580	0					
ANR	11235742	PrimaryExpression	0xff		11235580	1					
ANR	11235743	ExpressionStatement	val = 1	266:12:9132:9139	11235580	1	True				
ANR	11235744	AssignmentExpression	val = 1		11235580	0		=			
ANR	11235745	Identifier	val		11235580	0					
ANR	11235746	PrimaryExpression	1		11235580	1					
ANR	11235747	Condition	* hex ++	268:13:9200:9205	11235580	1	True				
ANR	11235748	UnaryOperationExpression	* hex ++		11235580	0					
ANR	11235749	UnaryOperator	*		11235580	0					
ANR	11235750	PostIncDecOperationExpression	hex ++		11235580	1					
ANR	11235751	Identifier	hex		11235580	0					
ANR	11235752	IncDec	++		11235580	1					
ANR	11235753	IfStatement	if ( len != NULL )		11235580	7					
ANR	11235754	Condition	len != NULL	269:8:9275:9285	11235580	0	True				
ANR	11235755	EqualityExpression	len != NULL		11235580	0		!=			
ANR	11235756	Identifier	len		11235580	0					
ANR	11235757	Identifier	NULL		11235580	1					
ANR	11235758	ExpressionStatement	* len = next	270:8:9296:9307	11235580	1	True				
ANR	11235759	AssignmentExpression	* len = next		11235580	0		=			
ANR	11235760	UnaryOperationExpression	* len		11235580	0					
ANR	11235761	UnaryOperator	*		11235580	0					
ANR	11235762	Identifier	len		11235580	1					
ANR	11235763	Identifier	next		11235580	1					
ANR	11235764	ExpressionStatement	"re = realloc ( in , next )"	271:4:9313:9335	11235580	8	True				
ANR	11235765	AssignmentExpression	"re = realloc ( in , next )"		11235580	0		=			
ANR	11235766	Identifier	re		11235580	0					
ANR	11235767	CallExpression	"realloc ( in , next )"		11235580	1					
ANR	11235768	Callee	realloc		11235580	0					
ANR	11235769	Identifier	realloc		11235580	0					
ANR	11235770	ArgumentList	in		11235580	1					
ANR	11235771	Argument	in		11235580	0					
ANR	11235772	Identifier	in		11235580	0					
ANR	11235773	Argument	next		11235580	1					
ANR	11235774	Identifier	next		11235580	0					
ANR	11235775	ReturnStatement	return re == NULL ? in : re ;	272:4:9341:9368	11235580	9	True				
ANR	11235776	ConditionalExpression	re == NULL ? in : re		11235580	0					
ANR	11235777	Condition	re == NULL		11235580	0					
ANR	11235778	EqualityExpression	re == NULL		11235580	0		==			
ANR	11235779	Identifier	re		11235580	0					
ANR	11235780	Identifier	NULL		11235580	1					
ANR	11235781	Identifier	in		11235580	1					
ANR	11235782	Identifier	re		11235580	2					
ANR	11235783	ReturnType	unsigned char *		11235580	1					
ANR	11235784	Identifier	h2b		11235580	2					
ANR	11235785	ParameterList	"const char * hex , unsigned * len"		11235580	3					
ANR	11235786	Parameter	const char * hex	245:25:8363:8377	11235580	0	True				
ANR	11235787	ParameterType	const char *		11235580	0					
ANR	11235788	Identifier	hex		11235580	1					
ANR	11235789	Parameter	unsigned * len	245:42:8380:8392	11235580	1	True				
ANR	11235790	ParameterType	unsigned *		11235580	0					
ANR	11235791	Identifier	len		11235580	1					
ANR	11235792	CFGEntryNode	ENTRY		11235580		True				
ANR	11235793	CFGExitNode	EXIT		11235580		True				
ANR	11235794	Symbol	val		11235580						
ANR	11235795	Symbol	next		11235580						
ANR	11235796	Symbol	malloc		11235580						
ANR	11235797	Symbol	NULL		11235580						
ANR	11235798	Symbol	in		11235580						
ANR	11235799	Symbol	* in		11235580						
ANR	11235800	Symbol	realloc		11235580						
ANR	11235801	Symbol	* hex ++		11235580						
ANR	11235802	Symbol	strlen		11235580						
ANR	11235803	Symbol	re		11235580						
ANR	11235804	Symbol	len		11235580						
ANR	11235805	Symbol	hex		11235580						
ANR	11235806	Symbol	* hex		11235580						
ANR	11235807	Symbol	* len		11235580						
ANR	11235808	Function	inf	284:0:10039:12373							
ANR	11235809	FunctionDef	"inf (char * hex , char * what , unsigned step , int win , unsigned len , int err)"		11235808	0					
ANR	11235810	CompoundStatement		286:0:10139:12373	11235808	0					
ANR	11235811	IdentifierDeclStatement	int ret ;	287:4:10145:10152	11235808	0	True				
ANR	11235812	IdentifierDecl	ret		11235808	0					
ANR	11235813	IdentifierDeclType	int		11235808	0					
ANR	11235814	Identifier	ret		11235808	1					
ANR	11235815	IdentifierDeclStatement	unsigned have ;	288:4:10158:10171	11235808	1	True				
ANR	11235816	IdentifierDecl	have		11235808	0					
ANR	11235817	IdentifierDeclType	unsigned		11235808	0					
ANR	11235818	Identifier	have		11235808	1					
ANR	11235819	IdentifierDeclStatement	"unsigned char * in , * out ;"	289:4:10177:10200	11235808	2	True				
ANR	11235820	IdentifierDecl	* in		11235808	0					
ANR	11235821	IdentifierDeclType	unsigned char *		11235808	0					
ANR	11235822	Identifier	in		11235808	1					
ANR	11235823	IdentifierDecl	* out		11235808	1					
ANR	11235824	IdentifierDeclType	unsigned char *		11235808	0					
ANR	11235825	Identifier	out		11235808	1					
ANR	11235826	IdentifierDeclStatement	"z_stream strm , copy ;"	290:4:10206:10225	11235808	3	True				
ANR	11235827	IdentifierDecl	strm		11235808	0					
ANR	11235828	IdentifierDeclType	z_stream		11235808	0					
ANR	11235829	Identifier	strm		11235808	1					
ANR	11235830	IdentifierDecl	copy		11235808	1					
ANR	11235831	IdentifierDeclType	z_stream		11235808	0					
ANR	11235832	Identifier	copy		11235808	1					
ANR	11235833	IdentifierDeclStatement	gz_header head ;	291:4:10231:10245	11235808	4	True				
ANR	11235834	IdentifierDecl	head		11235808	0					
ANR	11235835	IdentifierDeclType	gz_header		11235808	0					
ANR	11235836	Identifier	head		11235808	1					
ANR	11235837	ExpressionStatement	mem_setup ( & strm )	293:4:10252:10268	11235808	5	True				
ANR	11235838	CallExpression	mem_setup ( & strm )		11235808	0					
ANR	11235839	Callee	mem_setup		11235808	0					
ANR	11235840	Identifier	mem_setup		11235808	0					
ANR	11235841	ArgumentList	& strm		11235808	1					
ANR	11235842	Argument	& strm		11235808	0					
ANR	11235843	UnaryOperationExpression	& strm		11235808	0					
ANR	11235844	UnaryOperator	&		11235808	0					
ANR	11235845	Identifier	strm		11235808	1					
ANR	11235846	ExpressionStatement	strm . avail_in = 0	294:4:10274:10291	11235808	6	True				
ANR	11235847	AssignmentExpression	strm . avail_in = 0		11235808	0		=			
ANR	11235848	MemberAccess	strm . avail_in		11235808	0					
ANR	11235849	Identifier	strm		11235808	0					
ANR	11235850	Identifier	avail_in		11235808	1					
ANR	11235851	PrimaryExpression	0		11235808	1					
ANR	11235852	ExpressionStatement	strm . next_in = Z_NULL	295:4:10297:10318	11235808	7	True				
ANR	11235853	AssignmentExpression	strm . next_in = Z_NULL		11235808	0		=			
ANR	11235854	MemberAccess	strm . next_in		11235808	0					
ANR	11235855	Identifier	strm		11235808	0					
ANR	11235856	Identifier	next_in		11235808	1					
ANR	11235857	Identifier	Z_NULL		11235808	1					
ANR	11235858	ExpressionStatement	"ret = inflateInit2 ( & strm , win )"	296:4:10324:10354	11235808	8	True				
ANR	11235859	AssignmentExpression	"ret = inflateInit2 ( & strm , win )"		11235808	0		=			
ANR	11235860	Identifier	ret		11235808	0					
ANR	11235861	CallExpression	"inflateInit2 ( & strm , win )"		11235808	1					
ANR	11235862	Callee	inflateInit2		11235808	0					
ANR	11235863	Identifier	inflateInit2		11235808	0					
ANR	11235864	ArgumentList	& strm		11235808	1					
ANR	11235865	Argument	& strm		11235808	0					
ANR	11235866	UnaryOperationExpression	& strm		11235808	0					
ANR	11235867	UnaryOperator	&		11235808	0					
ANR	11235868	Identifier	strm		11235808	1					
ANR	11235869	Argument	win		11235808	1					
ANR	11235870	Identifier	win		11235808	0					
ANR	11235871	IfStatement	if ( ret != Z_OK )		11235808	9					
ANR	11235872	Condition	ret != Z_OK	297:8:10364:10374	11235808	0	True				
ANR	11235873	EqualityExpression	ret != Z_OK		11235808	0		!=			
ANR	11235874	Identifier	ret		11235808	0					
ANR	11235875	Identifier	Z_OK		11235808	1					
ANR	11235876	CompoundStatement		12:21:237:237	11235808	1					
ANR	11235877	ExpressionStatement	"mem_done ( & strm , what )"	298:8:10387:10408	11235808	0	True				
ANR	11235878	CallExpression	"mem_done ( & strm , what )"		11235808	0					
ANR	11235879	Callee	mem_done		11235808	0					
ANR	11235880	Identifier	mem_done		11235808	0					
ANR	11235881	ArgumentList	& strm		11235808	1					
ANR	11235882	Argument	& strm		11235808	0					
ANR	11235883	UnaryOperationExpression	& strm		11235808	0					
ANR	11235884	UnaryOperator	&		11235808	0					
ANR	11235885	Identifier	strm		11235808	1					
ANR	11235886	Argument	what		11235808	1					
ANR	11235887	Identifier	what		11235808	0					
ANR	11235888	ReturnStatement	return ;	299:8:10418:10424	11235808	1	True				
ANR	11235889	ExpressionStatement	out = malloc ( len )	301:4:10436:10453	11235808	10	True				
ANR	11235890	AssignmentExpression	out = malloc ( len )		11235808	0		=			
ANR	11235891	Identifier	out		11235808	0					
ANR	11235892	CallExpression	malloc ( len )		11235808	1					
ANR	11235893	Callee	malloc		11235808	0					
ANR	11235894	Identifier	malloc		11235808	0					
ANR	11235895	ArgumentList	len		11235808	1					
ANR	11235896	Argument	len		11235808	0					
ANR	11235897	Identifier	len		11235808	0					
ANR	11235898	ExpressionStatement	assert ( out != NULL )	301:48:10480:10499	11235808	11	True				
ANR	11235899	CallExpression	assert ( out != NULL )		11235808	0					
ANR	11235900	Callee	assert		11235808	0					
ANR	11235901	Identifier	assert		11235808	0					
ANR	11235902	ArgumentList	out != NULL		11235808	1					
ANR	11235903	Argument	out != NULL		11235808	0					
ANR	11235904	EqualityExpression	out != NULL		11235808	0		!=			
ANR	11235905	Identifier	out		11235808	0					
ANR	11235906	Identifier	NULL		11235808	1					
ANR	11235907	IfStatement	if ( win == 47 )		11235808	12					
ANR	11235908	Condition	win == 47	302:8:10509:10517	11235808	0	True				
ANR	11235909	EqualityExpression	win == 47		11235808	0		==			
ANR	11235910	Identifier	win		11235808	0					
ANR	11235911	PrimaryExpression	47		11235808	1					
ANR	11235912	CompoundStatement		17:19:380:380	11235808	1					
ANR	11235913	ExpressionStatement	head . extra = out	303:8:10530:10546	11235808	0	True				
ANR	11235914	AssignmentExpression	head . extra = out		11235808	0		=			
ANR	11235915	MemberAccess	head . extra		11235808	0					
ANR	11235916	Identifier	head		11235808	0					
ANR	11235917	Identifier	extra		11235808	1					
ANR	11235918	Identifier	out		11235808	1					
ANR	11235919	ExpressionStatement	head . extra_max = len	304:8:10556:10576	11235808	1	True				
ANR	11235920	AssignmentExpression	head . extra_max = len		11235808	0		=			
ANR	11235921	MemberAccess	head . extra_max		11235808	0					
ANR	11235922	Identifier	head		11235808	0					
ANR	11235923	Identifier	extra_max		11235808	1					
ANR	11235924	Identifier	len		11235808	1					
ANR	11235925	ExpressionStatement	head . name = out	305:8:10586:10601	11235808	2	True				
ANR	11235926	AssignmentExpression	head . name = out		11235808	0		=			
ANR	11235927	MemberAccess	head . name		11235808	0					
ANR	11235928	Identifier	head		11235808	0					
ANR	11235929	Identifier	name		11235808	1					
ANR	11235930	Identifier	out		11235808	1					
ANR	11235931	ExpressionStatement	head . name_max = len	306:8:10611:10630	11235808	3	True				
ANR	11235932	AssignmentExpression	head . name_max = len		11235808	0		=			
ANR	11235933	MemberAccess	head . name_max		11235808	0					
ANR	11235934	Identifier	head		11235808	0					
ANR	11235935	Identifier	name_max		11235808	1					
ANR	11235936	Identifier	len		11235808	1					
ANR	11235937	ExpressionStatement	head . comment = out	307:8:10640:10658	11235808	4	True				
ANR	11235938	AssignmentExpression	head . comment = out		11235808	0		=			
ANR	11235939	MemberAccess	head . comment		11235808	0					
ANR	11235940	Identifier	head		11235808	0					
ANR	11235941	Identifier	comment		11235808	1					
ANR	11235942	Identifier	out		11235808	1					
ANR	11235943	ExpressionStatement	head . comm_max = len	308:8:10668:10687	11235808	5	True				
ANR	11235944	AssignmentExpression	head . comm_max = len		11235808	0		=			
ANR	11235945	MemberAccess	head . comm_max		11235808	0					
ANR	11235946	Identifier	head		11235808	0					
ANR	11235947	Identifier	comm_max		11235808	1					
ANR	11235948	Identifier	len		11235808	1					
ANR	11235949	ExpressionStatement	"ret = inflateGetHeader ( & strm , & head )"	309:8:10697:10733	11235808	6	True				
ANR	11235950	AssignmentExpression	"ret = inflateGetHeader ( & strm , & head )"		11235808	0		=			
ANR	11235951	Identifier	ret		11235808	0					
ANR	11235952	CallExpression	"inflateGetHeader ( & strm , & head )"		11235808	1					
ANR	11235953	Callee	inflateGetHeader		11235808	0					
ANR	11235954	Identifier	inflateGetHeader		11235808	0					
ANR	11235955	ArgumentList	& strm		11235808	1					
ANR	11235956	Argument	& strm		11235808	0					
ANR	11235957	UnaryOperationExpression	& strm		11235808	0					
ANR	11235958	UnaryOperator	&		11235808	0					
ANR	11235959	Identifier	strm		11235808	1					
ANR	11235960	Argument	& head		11235808	1					
ANR	11235961	UnaryOperationExpression	& head		11235808	0					
ANR	11235962	UnaryOperator	&		11235808	0					
ANR	11235963	Identifier	head		11235808	1					
ANR	11235964	ExpressionStatement	assert ( ret == Z_OK )	309:48:10737:10756	11235808	7	True				
ANR	11235965	CallExpression	assert ( ret == Z_OK )		11235808	0					
ANR	11235966	Callee	assert		11235808	0					
ANR	11235967	Identifier	assert		11235808	0					
ANR	11235968	ArgumentList	ret == Z_OK		11235808	1					
ANR	11235969	Argument	ret == Z_OK		11235808	0					
ANR	11235970	EqualityExpression	ret == Z_OK		11235808	0		==			
ANR	11235971	Identifier	ret		11235808	0					
ANR	11235972	Identifier	Z_OK		11235808	1					
ANR	11235973	ExpressionStatement	"in = h2b ( hex , & have )"	311:4:10768:10788	11235808	13	True				
ANR	11235974	AssignmentExpression	"in = h2b ( hex , & have )"		11235808	0		=			
ANR	11235975	Identifier	in		11235808	0					
ANR	11235976	CallExpression	"h2b ( hex , & have )"		11235808	1					
ANR	11235977	Callee	h2b		11235808	0					
ANR	11235978	Identifier	h2b		11235808	0					
ANR	11235979	ArgumentList	hex		11235808	1					
ANR	11235980	Argument	hex		11235808	0					
ANR	11235981	Identifier	hex		11235808	0					
ANR	11235982	Argument	& have		11235808	1					
ANR	11235983	UnaryOperationExpression	& have		11235808	0					
ANR	11235984	UnaryOperator	&		11235808	0					
ANR	11235985	Identifier	have		11235808	1					
ANR	11235986	ExpressionStatement	assert ( in != NULL )	311:48:10812:10830	11235808	14	True				
ANR	11235987	CallExpression	assert ( in != NULL )		11235808	0					
ANR	11235988	Callee	assert		11235808	0					
ANR	11235989	Identifier	assert		11235808	0					
ANR	11235990	ArgumentList	in != NULL		11235808	1					
ANR	11235991	Argument	in != NULL		11235808	0					
ANR	11235992	EqualityExpression	in != NULL		11235808	0		!=			
ANR	11235993	Identifier	in		11235808	0					
ANR	11235994	Identifier	NULL		11235808	1					
ANR	11235995	IfStatement	if ( step == 0 || step > have )		11235808	15					
ANR	11235996	Condition	step == 0 || step > have	312:8:10840:10863	11235808	0	True				
ANR	11235997	OrExpression	step == 0 || step > have		11235808	0		||			
ANR	11235998	EqualityExpression	step == 0		11235808	0		==			
ANR	11235999	Identifier	step		11235808	0					
ANR	11236000	PrimaryExpression	0		11235808	1					
ANR	11236001	RelationalExpression	step > have		11235808	1		>			
ANR	11236002	Identifier	step		11235808	0					
ANR	11236003	Identifier	have		11235808	1					
ANR	11236004	ExpressionStatement	step = have	313:8:10874:10885	11235808	1	True				
ANR	11236005	AssignmentExpression	step = have		11235808	0		=			
ANR	11236006	Identifier	step		11235808	0					
ANR	11236007	Identifier	have		11235808	1					
ANR	11236008	ExpressionStatement	strm . avail_in = step	314:4:10891:10911	11235808	16	True				
ANR	11236009	AssignmentExpression	strm . avail_in = step		11235808	0		=			
ANR	11236010	MemberAccess	strm . avail_in		11235808	0					
ANR	11236011	Identifier	strm		11235808	0					
ANR	11236012	Identifier	avail_in		11235808	1					
ANR	11236013	Identifier	step		11235808	1					
ANR	11236014	ExpressionStatement	have -= step	315:4:10917:10929	11235808	17	True				
ANR	11236015	AssignmentExpression	have -= step		11235808	0		-=			
ANR	11236016	Identifier	have		11235808	0					
ANR	11236017	Identifier	step		11235808	1					
ANR	11236018	ExpressionStatement	strm . next_in = in	316:4:10935:10952	11235808	18	True				
ANR	11236019	AssignmentExpression	strm . next_in = in		11235808	0		=			
ANR	11236020	MemberAccess	strm . next_in		11235808	0					
ANR	11236021	Identifier	strm		11235808	0					
ANR	11236022	Identifier	next_in		11235808	1					
ANR	11236023	Identifier	in		11235808	1					
ANR	11236024	DoStatement	do		11235808	19					
ANR	11236025	CompoundStatement		32:7:821:821	11235808	0					
ANR	11236026	ExpressionStatement	strm . avail_out = len	318:8:10971:10991	11235808	0	True				
ANR	11236027	AssignmentExpression	strm . avail_out = len		11235808	0		=			
ANR	11236028	MemberAccess	strm . avail_out		11235808	0					
ANR	11236029	Identifier	strm		11235808	0					
ANR	11236030	Identifier	avail_out		11235808	1					
ANR	11236031	Identifier	len		11235808	1					
ANR	11236032	ExpressionStatement	strm . next_out = out	319:8:11001:11020	11235808	1	True				
ANR	11236033	AssignmentExpression	strm . next_out = out		11235808	0		=			
ANR	11236034	MemberAccess	strm . next_out		11235808	0					
ANR	11236035	Identifier	strm		11235808	0					
ANR	11236036	Identifier	next_out		11235808	1					
ANR	11236037	Identifier	out		11235808	1					
ANR	11236038	ExpressionStatement	"ret = inflate ( & strm , Z_NO_FLUSH )"	320:8:11030:11062	11235808	2	True				
ANR	11236039	AssignmentExpression	"ret = inflate ( & strm , Z_NO_FLUSH )"		11235808	0		=			
ANR	11236040	Identifier	ret		11235808	0					
ANR	11236041	CallExpression	"inflate ( & strm , Z_NO_FLUSH )"		11235808	1					
ANR	11236042	Callee	inflate		11235808	0					
ANR	11236043	Identifier	inflate		11235808	0					
ANR	11236044	ArgumentList	& strm		11235808	1					
ANR	11236045	Argument	& strm		11235808	0					
ANR	11236046	UnaryOperationExpression	& strm		11235808	0					
ANR	11236047	UnaryOperator	&		11235808	0					
ANR	11236048	Identifier	strm		11235808	1					
ANR	11236049	Argument	Z_NO_FLUSH		11235808	1					
ANR	11236050	Identifier	Z_NO_FLUSH		11235808	0					
ANR	11236051	ExpressionStatement	assert ( err == 9 || ret == err )	320:48:11070:11100	11235808	3	True				
ANR	11236052	CallExpression	assert ( err == 9 || ret == err )		11235808	0					
ANR	11236053	Callee	assert		11235808	0					
ANR	11236054	Identifier	assert		11235808	0					
ANR	11236055	ArgumentList	err == 9 || ret == err		11235808	1					
ANR	11236056	Argument	err == 9 || ret == err		11235808	0					
ANR	11236057	OrExpression	err == 9 || ret == err		11235808	0		||			
ANR	11236058	EqualityExpression	err == 9		11235808	0		==			
ANR	11236059	Identifier	err		11235808	0					
ANR	11236060	PrimaryExpression	9		11235808	1					
ANR	11236061	EqualityExpression	ret == err		11235808	1		==			
ANR	11236062	Identifier	ret		11235808	0					
ANR	11236063	Identifier	err		11235808	1					
ANR	11236064	IfStatement	if ( ret != Z_OK && ret != Z_BUF_ERROR && ret != Z_NEED_DICT )		11235808	4					
ANR	11236065	Condition	ret != Z_OK && ret != Z_BUF_ERROR && ret != Z_NEED_DICT	321:12:11114:11168	11235808	0	True				
ANR	11236066	AndExpression	ret != Z_OK && ret != Z_BUF_ERROR && ret != Z_NEED_DICT		11235808	0		&&			
ANR	11236067	EqualityExpression	ret != Z_OK		11235808	0		!=			
ANR	11236068	Identifier	ret		11235808	0					
ANR	11236069	Identifier	Z_OK		11235808	1					
ANR	11236070	AndExpression	ret != Z_BUF_ERROR && ret != Z_NEED_DICT		11235808	1		&&			
ANR	11236071	EqualityExpression	ret != Z_BUF_ERROR		11235808	0		!=			
ANR	11236072	Identifier	ret		11235808	0					
ANR	11236073	Identifier	Z_BUF_ERROR		11235808	1					
ANR	11236074	EqualityExpression	ret != Z_NEED_DICT		11235808	1		!=			
ANR	11236075	Identifier	ret		11235808	0					
ANR	11236076	Identifier	Z_NEED_DICT		11235808	1					
ANR	11236077	BreakStatement	break ;	322:12:11183:11188	11235808	1	True				
ANR	11236078	IfStatement	if ( ret == Z_NEED_DICT )		11235808	5					
ANR	11236079	Condition	ret == Z_NEED_DICT	323:12:11202:11219	11235808	0	True				
ANR	11236080	EqualityExpression	ret == Z_NEED_DICT		11235808	0		==			
ANR	11236081	Identifier	ret		11235808	0					
ANR	11236082	Identifier	Z_NEED_DICT		11235808	1					
ANR	11236083	CompoundStatement		38:32:1082:1082	11235808	1					
ANR	11236084	ExpressionStatement	"ret = inflateSetDictionary ( & strm , in , 1 )"	324:12:11236:11276	11235808	0	True				
ANR	11236085	AssignmentExpression	"ret = inflateSetDictionary ( & strm , in , 1 )"		11235808	0		=			
ANR	11236086	Identifier	ret		11235808	0					
ANR	11236087	CallExpression	"inflateSetDictionary ( & strm , in , 1 )"		11235808	1					
ANR	11236088	Callee	inflateSetDictionary		11235808	0					
ANR	11236089	Identifier	inflateSetDictionary		11235808	0					
ANR	11236090	ArgumentList	& strm		11235808	1					
ANR	11236091	Argument	& strm		11235808	0					
ANR	11236092	UnaryOperationExpression	& strm		11235808	0					
ANR	11236093	UnaryOperator	&		11235808	0					
ANR	11236094	Identifier	strm		11235808	1					
ANR	11236095	Argument	in		11235808	1					
ANR	11236096	Identifier	in		11235808	0					
ANR	11236097	Argument	1		11235808	2					
ANR	11236098	PrimaryExpression	1		11235808	0					
ANR	11236099	ExpressionStatement	assert ( ret == Z_DATA_ERROR )	325:48:11326:11353	11235808	1	True				
ANR	11236100	CallExpression	assert ( ret == Z_DATA_ERROR )		11235808	0					
ANR	11236101	Callee	assert		11235808	0					
ANR	11236102	Identifier	assert		11235808	0					
ANR	11236103	ArgumentList	ret == Z_DATA_ERROR		11235808	1					
ANR	11236104	Argument	ret == Z_DATA_ERROR		11235808	0					
ANR	11236105	EqualityExpression	ret == Z_DATA_ERROR		11235808	0		==			
ANR	11236106	Identifier	ret		11235808	0					
ANR	11236107	Identifier	Z_DATA_ERROR		11235808	1					
ANR	11236108	ExpressionStatement	"mem_limit ( & strm , 1 )"	326:12:11367:11386	11235808	2	True				
ANR	11236109	CallExpression	"mem_limit ( & strm , 1 )"		11235808	0					
ANR	11236110	Callee	mem_limit		11235808	0					
ANR	11236111	Identifier	mem_limit		11235808	0					
ANR	11236112	ArgumentList	& strm		11235808	1					
ANR	11236113	Argument	& strm		11235808	0					
ANR	11236114	UnaryOperationExpression	& strm		11235808	0					
ANR	11236115	UnaryOperator	&		11235808	0					
ANR	11236116	Identifier	strm		11235808	1					
ANR	11236117	Argument	1		11235808	1					
ANR	11236118	PrimaryExpression	1		11235808	0					
ANR	11236119	ExpressionStatement	"ret = inflateSetDictionary ( & strm , out , 0 )"	327:12:11400:11441	11235808	3	True				
ANR	11236120	AssignmentExpression	"ret = inflateSetDictionary ( & strm , out , 0 )"		11235808	0		=			
ANR	11236121	Identifier	ret		11235808	0					
ANR	11236122	CallExpression	"inflateSetDictionary ( & strm , out , 0 )"		11235808	1					
ANR	11236123	Callee	inflateSetDictionary		11235808	0					
ANR	11236124	Identifier	inflateSetDictionary		11235808	0					
ANR	11236125	ArgumentList	& strm		11235808	1					
ANR	11236126	Argument	& strm		11235808	0					
ANR	11236127	UnaryOperationExpression	& strm		11235808	0					
ANR	11236128	UnaryOperator	&		11235808	0					
ANR	11236129	Identifier	strm		11235808	1					
ANR	11236130	Argument	out		11235808	1					
ANR	11236131	Identifier	out		11235808	0					
ANR	11236132	Argument	0		11235808	2					
ANR	11236133	PrimaryExpression	0		11235808	0					
ANR	11236134	ExpressionStatement	assert ( ret == Z_MEM_ERROR )	328:48:11491:11517	11235808	4	True				
ANR	11236135	CallExpression	assert ( ret == Z_MEM_ERROR )		11235808	0					
ANR	11236136	Callee	assert		11235808	0					
ANR	11236137	Identifier	assert		11235808	0					
ANR	11236138	ArgumentList	ret == Z_MEM_ERROR		11235808	1					
ANR	11236139	Argument	ret == Z_MEM_ERROR		11235808	0					
ANR	11236140	EqualityExpression	ret == Z_MEM_ERROR		11235808	0		==			
ANR	11236141	Identifier	ret		11235808	0					
ANR	11236142	Identifier	Z_MEM_ERROR		11235808	1					
ANR	11236143	ExpressionStatement	"mem_limit ( & strm , 0 )"	329:12:11531:11550	11235808	5	True				
ANR	11236144	CallExpression	"mem_limit ( & strm , 0 )"		11235808	0					
ANR	11236145	Callee	mem_limit		11235808	0					
ANR	11236146	Identifier	mem_limit		11235808	0					
ANR	11236147	ArgumentList	& strm		11235808	1					
ANR	11236148	Argument	& strm		11235808	0					
ANR	11236149	UnaryOperationExpression	& strm		11235808	0					
ANR	11236150	UnaryOperator	&		11235808	0					
ANR	11236151	Identifier	strm		11235808	1					
ANR	11236152	Argument	0		11235808	1					
ANR	11236153	PrimaryExpression	0		11235808	0					
ANR	11236154	ExpressionStatement	( ( struct inflate_state * ) strm . state ) -> mode = DICT	330:12:11564:11613	11235808	6	True				
ANR	11236155	AssignmentExpression	( ( struct inflate_state * ) strm . state ) -> mode = DICT		11235808	0		=			
ANR	11236156	PtrMemberAccess	( ( struct inflate_state * ) strm . state ) -> mode		11235808	0					
ANR	11236157	CastExpression	( struct inflate_state * ) strm . state		11235808	0					
ANR	11236158	CastTarget	struct inflate_state *		11235808	0					
ANR	11236159	MemberAccess	strm . state		11235808	1					
ANR	11236160	Identifier	strm		11235808	0					
ANR	11236161	Identifier	state		11235808	1					
ANR	11236162	Identifier	mode		11235808	1					
ANR	11236163	Identifier	DICT		11235808	1					
ANR	11236164	ExpressionStatement	"ret = inflateSetDictionary ( & strm , out , 0 )"	331:12:11627:11668	11235808	7	True				
ANR	11236165	AssignmentExpression	"ret = inflateSetDictionary ( & strm , out , 0 )"		11235808	0		=			
ANR	11236166	Identifier	ret		11235808	0					
ANR	11236167	CallExpression	"inflateSetDictionary ( & strm , out , 0 )"		11235808	1					
ANR	11236168	Callee	inflateSetDictionary		11235808	0					
ANR	11236169	Identifier	inflateSetDictionary		11235808	0					
ANR	11236170	ArgumentList	& strm		11235808	1					
ANR	11236171	Argument	& strm		11235808	0					
ANR	11236172	UnaryOperationExpression	& strm		11235808	0					
ANR	11236173	UnaryOperator	&		11235808	0					
ANR	11236174	Identifier	strm		11235808	1					
ANR	11236175	Argument	out		11235808	1					
ANR	11236176	Identifier	out		11235808	0					
ANR	11236177	Argument	0		11235808	2					
ANR	11236178	PrimaryExpression	0		11235808	0					
ANR	11236179	ExpressionStatement	assert ( ret == Z_OK )	332:48:11718:11737	11235808	8	True				
ANR	11236180	CallExpression	assert ( ret == Z_OK )		11235808	0					
ANR	11236181	Callee	assert		11235808	0					
ANR	11236182	Identifier	assert		11235808	0					
ANR	11236183	ArgumentList	ret == Z_OK		11235808	1					
ANR	11236184	Argument	ret == Z_OK		11235808	0					
ANR	11236185	EqualityExpression	ret == Z_OK		11235808	0		==			
ANR	11236186	Identifier	ret		11235808	0					
ANR	11236187	Identifier	Z_OK		11235808	1					
ANR	11236188	ExpressionStatement	"ret = inflate ( & strm , Z_NO_FLUSH )"	333:12:11751:11783	11235808	9	True				
ANR	11236189	AssignmentExpression	"ret = inflate ( & strm , Z_NO_FLUSH )"		11235808	0		=			
ANR	11236190	Identifier	ret		11235808	0					
ANR	11236191	CallExpression	"inflate ( & strm , Z_NO_FLUSH )"		11235808	1					
ANR	11236192	Callee	inflate		11235808	0					
ANR	11236193	Identifier	inflate		11235808	0					
ANR	11236194	ArgumentList	& strm		11235808	1					
ANR	11236195	Argument	& strm		11235808	0					
ANR	11236196	UnaryOperationExpression	& strm		11235808	0					
ANR	11236197	UnaryOperator	&		11235808	0					
ANR	11236198	Identifier	strm		11235808	1					
ANR	11236199	Argument	Z_NO_FLUSH		11235808	1					
ANR	11236200	Identifier	Z_NO_FLUSH		11235808	0					
ANR	11236201	ExpressionStatement	assert ( ret == Z_BUF_ERROR )	333:48:11787:11813	11235808	10	True				
ANR	11236202	CallExpression	assert ( ret == Z_BUF_ERROR )		11235808	0					
ANR	11236203	Callee	assert		11235808	0					
ANR	11236204	Identifier	assert		11235808	0					
ANR	11236205	ArgumentList	ret == Z_BUF_ERROR		11235808	1					
ANR	11236206	Argument	ret == Z_BUF_ERROR		11235808	0					
ANR	11236207	EqualityExpression	ret == Z_BUF_ERROR		11235808	0		==			
ANR	11236208	Identifier	ret		11235808	0					
ANR	11236209	Identifier	Z_BUF_ERROR		11235808	1					
ANR	11236210	ExpressionStatement	"ret = inflateCopy ( & copy , & strm )"	335:8:11833:11864	11235808	6	True				
ANR	11236211	AssignmentExpression	"ret = inflateCopy ( & copy , & strm )"		11235808	0		=			
ANR	11236212	Identifier	ret		11235808	0					
ANR	11236213	CallExpression	"inflateCopy ( & copy , & strm )"		11235808	1					
ANR	11236214	Callee	inflateCopy		11235808	0					
ANR	11236215	Identifier	inflateCopy		11235808	0					
ANR	11236216	ArgumentList	& copy		11235808	1					
ANR	11236217	Argument	& copy		11235808	0					
ANR	11236218	UnaryOperationExpression	& copy		11235808	0					
ANR	11236219	UnaryOperator	&		11235808	0					
ANR	11236220	Identifier	copy		11235808	1					
ANR	11236221	Argument	& strm		11235808	1					
ANR	11236222	UnaryOperationExpression	& strm		11235808	0					
ANR	11236223	UnaryOperator	&		11235808	0					
ANR	11236224	Identifier	strm		11235808	1					
ANR	11236225	ExpressionStatement	assert ( ret == Z_OK )	335:48:11873:11892	11235808	7	True				
ANR	11236226	CallExpression	assert ( ret == Z_OK )		11235808	0					
ANR	11236227	Callee	assert		11235808	0					
ANR	11236228	Identifier	assert		11235808	0					
ANR	11236229	ArgumentList	ret == Z_OK		11235808	1					
ANR	11236230	Argument	ret == Z_OK		11235808	0					
ANR	11236231	EqualityExpression	ret == Z_OK		11235808	0		==			
ANR	11236232	Identifier	ret		11235808	0					
ANR	11236233	Identifier	Z_OK		11235808	1					
ANR	11236234	ExpressionStatement	ret = inflateEnd ( & copy )	336:8:11902:11925	11235808	8	True				
ANR	11236235	AssignmentExpression	ret = inflateEnd ( & copy )		11235808	0		=			
ANR	11236236	Identifier	ret		11235808	0					
ANR	11236237	CallExpression	inflateEnd ( & copy )		11235808	1					
ANR	11236238	Callee	inflateEnd		11235808	0					
ANR	11236239	Identifier	inflateEnd		11235808	0					
ANR	11236240	ArgumentList	& copy		11235808	1					
ANR	11236241	Argument	& copy		11235808	0					
ANR	11236242	UnaryOperationExpression	& copy		11235808	0					
ANR	11236243	UnaryOperator	&		11235808	0					
ANR	11236244	Identifier	copy		11235808	1					
ANR	11236245	ExpressionStatement	assert ( ret == Z_OK )	336:48:11942:11961	11235808	9	True				
ANR	11236246	CallExpression	assert ( ret == Z_OK )		11235808	0					
ANR	11236247	Callee	assert		11235808	0					
ANR	11236248	Identifier	assert		11235808	0					
ANR	11236249	ArgumentList	ret == Z_OK		11235808	1					
ANR	11236250	Argument	ret == Z_OK		11235808	0					
ANR	11236251	EqualityExpression	ret == Z_OK		11235808	0		==			
ANR	11236252	Identifier	ret		11235808	0					
ANR	11236253	Identifier	Z_OK		11235808	1					
ANR	11236254	ExpressionStatement	err = 9	337:8:11971:11978	11235808	10	True				
ANR	11236255	AssignmentExpression	err = 9		11235808	0		=			
ANR	11236256	Identifier	err		11235808	0					
ANR	11236257	PrimaryExpression	9		11235808	1					
ANR	11236258	ExpressionStatement	have += strm . avail_in	338:8:12045:12066	11235808	11	True				
ANR	11236259	AssignmentExpression	have += strm . avail_in		11235808	0		+=			
ANR	11236260	Identifier	have		11235808	0					
ANR	11236261	MemberAccess	strm . avail_in		11235808	1					
ANR	11236262	Identifier	strm		11235808	0					
ANR	11236263	Identifier	avail_in		11235808	1					
ANR	11236264	ExpressionStatement	strm . avail_in = step > have ? have : step	339:8:12076:12117	11235808	12	True				
ANR	11236265	AssignmentExpression	strm . avail_in = step > have ? have : step		11235808	0		=			
ANR	11236266	MemberAccess	strm . avail_in		11235808	0					
ANR	11236267	Identifier	strm		11235808	0					
ANR	11236268	Identifier	avail_in		11235808	1					
ANR	11236269	ConditionalExpression	step > have ? have : step		11235808	1					
ANR	11236270	Condition	step > have		11235808	0					
ANR	11236271	RelationalExpression	step > have		11235808	0		>			
ANR	11236272	Identifier	step		11235808	0					
ANR	11236273	Identifier	have		11235808	1					
ANR	11236274	Identifier	have		11235808	1					
ANR	11236275	Identifier	step		11235808	2					
ANR	11236276	ExpressionStatement	have -= strm . avail_in	340:8:12127:12148	11235808	13	True				
ANR	11236277	AssignmentExpression	have -= strm . avail_in		11235808	0		-=			
ANR	11236278	Identifier	have		11235808	0					
ANR	11236279	MemberAccess	strm . avail_in		11235808	1					
ANR	11236280	Identifier	strm		11235808	0					
ANR	11236281	Identifier	avail_in		11235808	1					
ANR	11236282	Condition	strm . avail_in	341:13:12163:12175	11235808	1	True				
ANR	11236283	MemberAccess	strm . avail_in		11235808	0					
ANR	11236284	Identifier	strm		11235808	0					
ANR	11236285	Identifier	avail_in		11235808	1					
ANR	11236286	ExpressionStatement	free ( in )	342:4:12183:12191	11235808	20	True				
ANR	11236287	CallExpression	free ( in )		11235808	0					
ANR	11236288	Callee	free		11235808	0					
ANR	11236289	Identifier	free		11235808	0					
ANR	11236290	ArgumentList	in		11235808	1					
ANR	11236291	Argument	in		11235808	0					
ANR	11236292	Identifier	in		11235808	0					
ANR	11236293	ExpressionStatement	free ( out )	343:4:12197:12206	11235808	21	True				
ANR	11236294	CallExpression	free ( out )		11235808	0					
ANR	11236295	Callee	free		11235808	0					
ANR	11236296	Identifier	free		11235808	0					
ANR	11236297	ArgumentList	out		11235808	1					
ANR	11236298	Argument	out		11235808	0					
ANR	11236299	Identifier	out		11235808	0					
ANR	11236300	ExpressionStatement	"ret = inflateReset2 ( & strm , - 8 )"	344:4:12212:12242	11235808	22	True				
ANR	11236301	AssignmentExpression	"ret = inflateReset2 ( & strm , - 8 )"		11235808	0		=			
ANR	11236302	Identifier	ret		11235808	0					
ANR	11236303	CallExpression	"inflateReset2 ( & strm , - 8 )"		11235808	1					
ANR	11236304	Callee	inflateReset2		11235808	0					
ANR	11236305	Identifier	inflateReset2		11235808	0					
ANR	11236306	ArgumentList	& strm		11235808	1					
ANR	11236307	Argument	& strm		11235808	0					
ANR	11236308	UnaryOperationExpression	& strm		11235808	0					
ANR	11236309	UnaryOperator	&		11235808	0					
ANR	11236310	Identifier	strm		11235808	1					
ANR	11236311	Argument	- 8		11235808	1					
ANR	11236312	UnaryOperationExpression	- 8		11235808	0					
ANR	11236313	UnaryOperator	-		11235808	0					
ANR	11236314	PrimaryExpression	8		11235808	1					
ANR	11236315	ExpressionStatement	assert ( ret == Z_OK )	344:48:12256:12275	11235808	23	True				
ANR	11236316	CallExpression	assert ( ret == Z_OK )		11235808	0					
ANR	11236317	Callee	assert		11235808	0					
ANR	11236318	Identifier	assert		11235808	0					
ANR	11236319	ArgumentList	ret == Z_OK		11235808	1					
ANR	11236320	Argument	ret == Z_OK		11235808	0					
ANR	11236321	EqualityExpression	ret == Z_OK		11235808	0		==			
ANR	11236322	Identifier	ret		11235808	0					
ANR	11236323	Identifier	Z_OK		11235808	1					
ANR	11236324	ExpressionStatement	ret = inflateEnd ( & strm )	345:4:12281:12304	11235808	24	True				
ANR	11236325	AssignmentExpression	ret = inflateEnd ( & strm )		11235808	0		=			
ANR	11236326	Identifier	ret		11235808	0					
ANR	11236327	CallExpression	inflateEnd ( & strm )		11235808	1					
ANR	11236328	Callee	inflateEnd		11235808	0					
ANR	11236329	Identifier	inflateEnd		11235808	0					
ANR	11236330	ArgumentList	& strm		11235808	1					
ANR	11236331	Argument	& strm		11235808	0					
ANR	11236332	UnaryOperationExpression	& strm		11235808	0					
ANR	11236333	UnaryOperator	&		11235808	0					
ANR	11236334	Identifier	strm		11235808	1					
ANR	11236335	ExpressionStatement	assert ( ret == Z_OK )	345:48:12325:12344	11235808	25	True				
ANR	11236336	CallExpression	assert ( ret == Z_OK )		11235808	0					
ANR	11236337	Callee	assert		11235808	0					
ANR	11236338	Identifier	assert		11235808	0					
ANR	11236339	ArgumentList	ret == Z_OK		11235808	1					
ANR	11236340	Argument	ret == Z_OK		11235808	0					
ANR	11236341	EqualityExpression	ret == Z_OK		11235808	0		==			
ANR	11236342	Identifier	ret		11235808	0					
ANR	11236343	Identifier	Z_OK		11235808	1					
ANR	11236344	ExpressionStatement	"mem_done ( & strm , what )"	346:4:12350:12371	11235808	26	True				
ANR	11236345	CallExpression	"mem_done ( & strm , what )"		11235808	0					
ANR	11236346	Callee	mem_done		11235808	0					
ANR	11236347	Identifier	mem_done		11235808	0					
ANR	11236348	ArgumentList	& strm		11235808	1					
ANR	11236349	Argument	& strm		11235808	0					
ANR	11236350	UnaryOperationExpression	& strm		11235808	0					
ANR	11236351	UnaryOperator	&		11235808	0					
ANR	11236352	Identifier	strm		11235808	1					
ANR	11236353	Argument	what		11235808	1					
ANR	11236354	Identifier	what		11235808	0					
ANR	11236355	ReturnType	local void		11235808	1					
ANR	11236356	Identifier	inf		11235808	2					
ANR	11236357	ParameterList	"char * hex , char * what , unsigned step , int win , unsigned len , int err"		11235808	3					
ANR	11236358	Parameter	char * hex	284:15:10054:10062	11235808	0	True				
ANR	11236359	ParameterType	char *		11235808	0					
ANR	11236360	Identifier	hex		11235808	1					
ANR	11236361	Parameter	char * what	284:26:10065:10074	11235808	1	True				
ANR	11236362	ParameterType	char *		11235808	0					
ANR	11236363	Identifier	what		11235808	1					
ANR	11236364	Parameter	unsigned step	284:38:10077:10089	11235808	2	True				
ANR	11236365	ParameterType	unsigned		11235808	0					
ANR	11236366	Identifier	step		11235808	1					
ANR	11236367	Parameter	int win	284:53:10092:10098	11235808	3	True				
ANR	11236368	ParameterType	int		11235808	0					
ANR	11236369	Identifier	win		11235808	1					
ANR	11236370	Parameter	unsigned len	284:62:10101:10112	11235808	4	True				
ANR	11236371	ParameterType	unsigned		11235808	0					
ANR	11236372	Identifier	len		11235808	1					
ANR	11236373	Parameter	int err	285:15:10130:10136	11235808	5	True				
ANR	11236374	ParameterType	int		11235808	0					
ANR	11236375	Identifier	err		11235808	1					
ANR	11236376	CFGEntryNode	ENTRY		11235808		True				
ANR	11236377	CFGExitNode	EXIT		11235808		True				
ANR	11236378	Symbol	inflateReset2		11235808						
ANR	11236379	Symbol	Z_DATA_ERROR		11235808						
ANR	11236380	Symbol	Z_MEM_ERROR		11235808						
ANR	11236381	Symbol	head . extra		11235808						
ANR	11236382	Symbol	strm . next_in		11235808						
ANR	11236383	Symbol	len		11235808						
ANR	11236384	Symbol	DICT		11235808						
ANR	11236385	Symbol	hex		11235808						
ANR	11236386	Symbol	head . comment		11235808						
ANR	11236387	Symbol	head . name_max		11235808						
ANR	11236388	Symbol	ret		11235808						
ANR	11236389	Symbol	inflateInit2		11235808						
ANR	11236390	Symbol	* strm . state		11235808						
ANR	11236391	Symbol	NULL		11235808						
ANR	11236392	Symbol	( ( struct inflate_state * ) strm . state ) -> mode		11235808						
ANR	11236393	Symbol	inflateEnd		11235808						
ANR	11236394	Symbol	in		11235808						
ANR	11236395	Symbol	strm . state		11235808						
ANR	11236396	Symbol	strm . next_out		11235808						
ANR	11236397	Symbol	* strm		11235808						
ANR	11236398	Symbol	head . comm_max		11235808						
ANR	11236399	Symbol	Z_NEED_DICT		11235808						
ANR	11236400	Symbol	strm . avail_in		11235808						
ANR	11236401	Symbol	Z_NULL		11235808						
ANR	11236402	Symbol	Z_BUF_ERROR		11235808						
ANR	11236403	Symbol	& strm		11235808						
ANR	11236404	Symbol	Z_OK		11235808						
ANR	11236405	Symbol	out		11235808						
ANR	11236406	Symbol	head		11235808						
ANR	11236407	Symbol	& head		11235808						
ANR	11236408	Symbol	Z_NO_FLUSH		11235808						
ANR	11236409	Symbol	inflateGetHeader		11235808						
ANR	11236410	Symbol	have		11235808						
ANR	11236411	Symbol	h2b		11235808						
ANR	11236412	Symbol	copy		11235808						
ANR	11236413	Symbol	win		11235808						
ANR	11236414	Symbol	malloc		11235808						
ANR	11236415	Symbol	inflateCopy		11235808						
ANR	11236416	Symbol	err		11235808						
ANR	11236417	Symbol	& copy		11235808						
ANR	11236418	Symbol	& have		11235808						
ANR	11236419	Symbol	strm		11235808						
ANR	11236420	Symbol	inflateSetDictionary		11235808						
ANR	11236421	Symbol	head . extra_max		11235808						
ANR	11236422	Symbol	what		11235808						
ANR	11236423	Symbol	strm . avail_out		11235808						
ANR	11236424	Symbol	inflate		11235808						
ANR	11236425	Symbol	step		11235808						
ANR	11236426	Symbol	head . name		11235808						
ANR	11236427	Function	cover_support	350:0:12434:13877							
ANR	11236428	FunctionDef	cover_support ()		11236427	0					
ANR	11236429	CompoundStatement		351:0:12465:13877	11236427	0					
ANR	11236430	IdentifierDeclStatement	int ret ;	352:4:12471:12478	11236427	0	True				
ANR	11236431	IdentifierDecl	ret		11236427	0					
ANR	11236432	IdentifierDeclType	int		11236427	0					
ANR	11236433	Identifier	ret		11236427	1					
ANR	11236434	IdentifierDeclStatement	z_stream strm ;	353:4:12484:12497	11236427	1	True				
ANR	11236435	IdentifierDecl	strm		11236427	0					
ANR	11236436	IdentifierDeclType	z_stream		11236427	0					
ANR	11236437	Identifier	strm		11236427	1					
ANR	11236438	ExpressionStatement	mem_setup ( & strm )	355:4:12504:12520	11236427	2	True				
ANR	11236439	CallExpression	mem_setup ( & strm )		11236427	0					
ANR	11236440	Callee	mem_setup		11236427	0					
ANR	11236441	Identifier	mem_setup		11236427	0					
ANR	11236442	ArgumentList	& strm		11236427	1					
ANR	11236443	Argument	& strm		11236427	0					
ANR	11236444	UnaryOperationExpression	& strm		11236427	0					
ANR	11236445	UnaryOperator	&		11236427	0					
ANR	11236446	Identifier	strm		11236427	1					
ANR	11236447	ExpressionStatement	strm . avail_in = 0	356:4:12526:12543	11236427	3	True				
ANR	11236448	AssignmentExpression	strm . avail_in = 0		11236427	0		=			
ANR	11236449	MemberAccess	strm . avail_in		11236427	0					
ANR	11236450	Identifier	strm		11236427	0					
ANR	11236451	Identifier	avail_in		11236427	1					
ANR	11236452	PrimaryExpression	0		11236427	1					
ANR	11236453	ExpressionStatement	strm . next_in = Z_NULL	357:4:12549:12570	11236427	4	True				
ANR	11236454	AssignmentExpression	strm . next_in = Z_NULL		11236427	0		=			
ANR	11236455	MemberAccess	strm . next_in		11236427	0					
ANR	11236456	Identifier	strm		11236427	0					
ANR	11236457	Identifier	next_in		11236427	1					
ANR	11236458	Identifier	Z_NULL		11236427	1					
ANR	11236459	ExpressionStatement	ret = inflateInit ( & strm )	358:4:12576:12600	11236427	5	True				
ANR	11236460	AssignmentExpression	ret = inflateInit ( & strm )		11236427	0		=			
ANR	11236461	Identifier	ret		11236427	0					
ANR	11236462	CallExpression	inflateInit ( & strm )		11236427	1					
ANR	11236463	Callee	inflateInit		11236427	0					
ANR	11236464	Identifier	inflateInit		11236427	0					
ANR	11236465	ArgumentList	& strm		11236427	1					
ANR	11236466	Argument	& strm		11236427	0					
ANR	11236467	UnaryOperationExpression	& strm		11236427	0					
ANR	11236468	UnaryOperator	&		11236427	0					
ANR	11236469	Identifier	strm		11236427	1					
ANR	11236470	ExpressionStatement	assert ( ret == Z_OK )	358:48:12620:12639	11236427	6	True				
ANR	11236471	CallExpression	assert ( ret == Z_OK )		11236427	0					
ANR	11236472	Callee	assert		11236427	0					
ANR	11236473	Identifier	assert		11236427	0					
ANR	11236474	ArgumentList	ret == Z_OK		11236427	1					
ANR	11236475	Argument	ret == Z_OK		11236427	0					
ANR	11236476	EqualityExpression	ret == Z_OK		11236427	0		==			
ANR	11236477	Identifier	ret		11236427	0					
ANR	11236478	Identifier	Z_OK		11236427	1					
ANR	11236479	ExpressionStatement	"mem_used ( & strm , ""inflate init"" )"	359:4:12645:12676	11236427	7	True				
ANR	11236480	CallExpression	"mem_used ( & strm , ""inflate init"" )"		11236427	0					
ANR	11236481	Callee	mem_used		11236427	0					
ANR	11236482	Identifier	mem_used		11236427	0					
ANR	11236483	ArgumentList	& strm		11236427	1					
ANR	11236484	Argument	& strm		11236427	0					
ANR	11236485	UnaryOperationExpression	& strm		11236427	0					
ANR	11236486	UnaryOperator	&		11236427	0					
ANR	11236487	Identifier	strm		11236427	1					
ANR	11236488	Argument	"""inflate init"""		11236427	1					
ANR	11236489	PrimaryExpression	"""inflate init"""		11236427	0					
ANR	11236490	ExpressionStatement	"ret = inflatePrime ( & strm , 5 , 31 )"	360:4:12682:12714	11236427	8	True				
ANR	11236491	AssignmentExpression	"ret = inflatePrime ( & strm , 5 , 31 )"		11236427	0		=			
ANR	11236492	Identifier	ret		11236427	0					
ANR	11236493	CallExpression	"inflatePrime ( & strm , 5 , 31 )"		11236427	1					
ANR	11236494	Callee	inflatePrime		11236427	0					
ANR	11236495	Identifier	inflatePrime		11236427	0					
ANR	11236496	ArgumentList	& strm		11236427	1					
ANR	11236497	Argument	& strm		11236427	0					
ANR	11236498	UnaryOperationExpression	& strm		11236427	0					
ANR	11236499	UnaryOperator	&		11236427	0					
ANR	11236500	Identifier	strm		11236427	1					
ANR	11236501	Argument	5		11236427	1					
ANR	11236502	PrimaryExpression	5		11236427	0					
ANR	11236503	Argument	31		11236427	2					
ANR	11236504	PrimaryExpression	31		11236427	0					
ANR	11236505	ExpressionStatement	assert ( ret == Z_OK )	360:48:12726:12745	11236427	9	True				
ANR	11236506	CallExpression	assert ( ret == Z_OK )		11236427	0					
ANR	11236507	Callee	assert		11236427	0					
ANR	11236508	Identifier	assert		11236427	0					
ANR	11236509	ArgumentList	ret == Z_OK		11236427	1					
ANR	11236510	Argument	ret == Z_OK		11236427	0					
ANR	11236511	EqualityExpression	ret == Z_OK		11236427	0		==			
ANR	11236512	Identifier	ret		11236427	0					
ANR	11236513	Identifier	Z_OK		11236427	1					
ANR	11236514	ExpressionStatement	"ret = inflatePrime ( & strm , - 1 , 0 )"	361:4:12751:12783	11236427	10	True				
ANR	11236515	AssignmentExpression	"ret = inflatePrime ( & strm , - 1 , 0 )"		11236427	0		=			
ANR	11236516	Identifier	ret		11236427	0					
ANR	11236517	CallExpression	"inflatePrime ( & strm , - 1 , 0 )"		11236427	1					
ANR	11236518	Callee	inflatePrime		11236427	0					
ANR	11236519	Identifier	inflatePrime		11236427	0					
ANR	11236520	ArgumentList	& strm		11236427	1					
ANR	11236521	Argument	& strm		11236427	0					
ANR	11236522	UnaryOperationExpression	& strm		11236427	0					
ANR	11236523	UnaryOperator	&		11236427	0					
ANR	11236524	Identifier	strm		11236427	1					
ANR	11236525	Argument	- 1		11236427	1					
ANR	11236526	UnaryOperationExpression	- 1		11236427	0					
ANR	11236527	UnaryOperator	-		11236427	0					
ANR	11236528	PrimaryExpression	1		11236427	1					
ANR	11236529	Argument	0		11236427	2					
ANR	11236530	PrimaryExpression	0		11236427	0					
ANR	11236531	ExpressionStatement	assert ( ret == Z_OK )	361:48:12795:12814	11236427	11	True				
ANR	11236532	CallExpression	assert ( ret == Z_OK )		11236427	0					
ANR	11236533	Callee	assert		11236427	0					
ANR	11236534	Identifier	assert		11236427	0					
ANR	11236535	ArgumentList	ret == Z_OK		11236427	1					
ANR	11236536	Argument	ret == Z_OK		11236427	0					
ANR	11236537	EqualityExpression	ret == Z_OK		11236427	0		==			
ANR	11236538	Identifier	ret		11236427	0					
ANR	11236539	Identifier	Z_OK		11236427	1					
ANR	11236540	ExpressionStatement	"ret = inflateSetDictionary ( & strm , Z_NULL , 0 )"	362:4:12820:12864	11236427	12	True				
ANR	11236541	AssignmentExpression	"ret = inflateSetDictionary ( & strm , Z_NULL , 0 )"		11236427	0		=			
ANR	11236542	Identifier	ret		11236427	0					
ANR	11236543	CallExpression	"inflateSetDictionary ( & strm , Z_NULL , 0 )"		11236427	1					
ANR	11236544	Callee	inflateSetDictionary		11236427	0					
ANR	11236545	Identifier	inflateSetDictionary		11236427	0					
ANR	11236546	ArgumentList	& strm		11236427	1					
ANR	11236547	Argument	& strm		11236427	0					
ANR	11236548	UnaryOperationExpression	& strm		11236427	0					
ANR	11236549	UnaryOperator	&		11236427	0					
ANR	11236550	Identifier	strm		11236427	1					
ANR	11236551	Argument	Z_NULL		11236427	1					
ANR	11236552	Identifier	Z_NULL		11236427	0					
ANR	11236553	Argument	0		11236427	2					
ANR	11236554	PrimaryExpression	0		11236427	0					
ANR	11236555	ExpressionStatement	assert ( ret == Z_STREAM_ERROR )	363:48:12914:12943	11236427	13	True				
ANR	11236556	CallExpression	assert ( ret == Z_STREAM_ERROR )		11236427	0					
ANR	11236557	Callee	assert		11236427	0					
ANR	11236558	Identifier	assert		11236427	0					
ANR	11236559	ArgumentList	ret == Z_STREAM_ERROR		11236427	1					
ANR	11236560	Argument	ret == Z_STREAM_ERROR		11236427	0					
ANR	11236561	EqualityExpression	ret == Z_STREAM_ERROR		11236427	0		==			
ANR	11236562	Identifier	ret		11236427	0					
ANR	11236563	Identifier	Z_STREAM_ERROR		11236427	1					
ANR	11236564	ExpressionStatement	ret = inflateEnd ( & strm )	364:4:12949:12972	11236427	14	True				
ANR	11236565	AssignmentExpression	ret = inflateEnd ( & strm )		11236427	0		=			
ANR	11236566	Identifier	ret		11236427	0					
ANR	11236567	CallExpression	inflateEnd ( & strm )		11236427	1					
ANR	11236568	Callee	inflateEnd		11236427	0					
ANR	11236569	Identifier	inflateEnd		11236427	0					
ANR	11236570	ArgumentList	& strm		11236427	1					
ANR	11236571	Argument	& strm		11236427	0					
ANR	11236572	UnaryOperationExpression	& strm		11236427	0					
ANR	11236573	UnaryOperator	&		11236427	0					
ANR	11236574	Identifier	strm		11236427	1					
ANR	11236575	ExpressionStatement	assert ( ret == Z_OK )	364:48:12993:13012	11236427	15	True				
ANR	11236576	CallExpression	assert ( ret == Z_OK )		11236427	0					
ANR	11236577	Callee	assert		11236427	0					
ANR	11236578	Identifier	assert		11236427	0					
ANR	11236579	ArgumentList	ret == Z_OK		11236427	1					
ANR	11236580	Argument	ret == Z_OK		11236427	0					
ANR	11236581	EqualityExpression	ret == Z_OK		11236427	0		==			
ANR	11236582	Identifier	ret		11236427	0					
ANR	11236583	Identifier	Z_OK		11236427	1					
ANR	11236584	ExpressionStatement	"mem_done ( & strm , ""prime"" )"	365:4:13018:13042	11236427	16	True				
ANR	11236585	CallExpression	"mem_done ( & strm , ""prime"" )"		11236427	0					
ANR	11236586	Callee	mem_done		11236427	0					
ANR	11236587	Identifier	mem_done		11236427	0					
ANR	11236588	ArgumentList	& strm		11236427	1					
ANR	11236589	Argument	& strm		11236427	0					
ANR	11236590	UnaryOperationExpression	& strm		11236427	0					
ANR	11236591	UnaryOperator	&		11236427	0					
ANR	11236592	Identifier	strm		11236427	1					
ANR	11236593	Argument	"""prime"""		11236427	1					
ANR	11236594	PrimaryExpression	"""prime"""		11236427	0					
ANR	11236595	ExpressionStatement	"inf ( ""63 0"" , ""force window allocation"" , 0 , - 15 , 1 , Z_OK )"	367:4:13049:13104	11236427	17	True				
ANR	11236596	CallExpression	"inf ( ""63 0"" , ""force window allocation"" , 0 , - 15 , 1 , Z_OK )"		11236427	0					
ANR	11236597	Callee	inf		11236427	0					
ANR	11236598	Identifier	inf		11236427	0					
ANR	11236599	ArgumentList	"""63 0"""		11236427	1					
ANR	11236600	Argument	"""63 0"""		11236427	0					
ANR	11236601	PrimaryExpression	"""63 0"""		11236427	0					
ANR	11236602	Argument	"""force window allocation"""		11236427	1					
ANR	11236603	PrimaryExpression	"""force window allocation"""		11236427	0					
ANR	11236604	Argument	0		11236427	2					
ANR	11236605	PrimaryExpression	0		11236427	0					
ANR	11236606	Argument	- 15		11236427	3					
ANR	11236607	UnaryOperationExpression	- 15		11236427	0					
ANR	11236608	UnaryOperator	-		11236427	0					
ANR	11236609	PrimaryExpression	15		11236427	1					
ANR	11236610	Argument	1		11236427	4					
ANR	11236611	PrimaryExpression	1		11236427	0					
ANR	11236612	Argument	Z_OK		11236427	5					
ANR	11236613	Identifier	Z_OK		11236427	0					
ANR	11236614	ExpressionStatement	"inf ( ""63 18 5"" , ""force window replacement"" , 0 , - 8 , 259 , Z_OK )"	368:4:13110:13170	11236427	18	True				
ANR	11236615	CallExpression	"inf ( ""63 18 5"" , ""force window replacement"" , 0 , - 8 , 259 , Z_OK )"		11236427	0					
ANR	11236616	Callee	inf		11236427	0					
ANR	11236617	Identifier	inf		11236427	0					
ANR	11236618	ArgumentList	"""63 18 5"""		11236427	1					
ANR	11236619	Argument	"""63 18 5"""		11236427	0					
ANR	11236620	PrimaryExpression	"""63 18 5"""		11236427	0					
ANR	11236621	Argument	"""force window replacement"""		11236427	1					
ANR	11236622	PrimaryExpression	"""force window replacement"""		11236427	0					
ANR	11236623	Argument	0		11236427	2					
ANR	11236624	PrimaryExpression	0		11236427	0					
ANR	11236625	Argument	- 8		11236427	3					
ANR	11236626	UnaryOperationExpression	- 8		11236427	0					
ANR	11236627	UnaryOperator	-		11236427	0					
ANR	11236628	PrimaryExpression	8		11236427	1					
ANR	11236629	Argument	259		11236427	4					
ANR	11236630	PrimaryExpression	259		11236427	0					
ANR	11236631	Argument	Z_OK		11236427	5					
ANR	11236632	Identifier	Z_OK		11236427	0					
ANR	11236633	ExpressionStatement	"inf ( ""63 18 68 30 d0 0 0"" , ""force split window update"" , 4 , - 8 , 259 , Z_OK )"	369:4:13176:13248	11236427	19	True				
ANR	11236634	CallExpression	"inf ( ""63 18 68 30 d0 0 0"" , ""force split window update"" , 4 , - 8 , 259 , Z_OK )"		11236427	0					
ANR	11236635	Callee	inf		11236427	0					
ANR	11236636	Identifier	inf		11236427	0					
ANR	11236637	ArgumentList	"""63 18 68 30 d0 0 0"""		11236427	1					
ANR	11236638	Argument	"""63 18 68 30 d0 0 0"""		11236427	0					
ANR	11236639	PrimaryExpression	"""63 18 68 30 d0 0 0"""		11236427	0					
ANR	11236640	Argument	"""force split window update"""		11236427	1					
ANR	11236641	PrimaryExpression	"""force split window update"""		11236427	0					
ANR	11236642	Argument	4		11236427	2					
ANR	11236643	PrimaryExpression	4		11236427	0					
ANR	11236644	Argument	- 8		11236427	3					
ANR	11236645	UnaryOperationExpression	- 8		11236427	0					
ANR	11236646	UnaryOperator	-		11236427	0					
ANR	11236647	PrimaryExpression	8		11236427	1					
ANR	11236648	Argument	259		11236427	4					
ANR	11236649	PrimaryExpression	259		11236427	0					
ANR	11236650	Argument	Z_OK		11236427	5					
ANR	11236651	Identifier	Z_OK		11236427	0					
ANR	11236652	ExpressionStatement	"inf ( ""3 0"" , ""use fixed blocks"" , 0 , - 15 , 1 , Z_STREAM_END )"	370:4:13254:13309	11236427	20	True				
ANR	11236653	CallExpression	"inf ( ""3 0"" , ""use fixed blocks"" , 0 , - 15 , 1 , Z_STREAM_END )"		11236427	0					
ANR	11236654	Callee	inf		11236427	0					
ANR	11236655	Identifier	inf		11236427	0					
ANR	11236656	ArgumentList	"""3 0"""		11236427	1					
ANR	11236657	Argument	"""3 0"""		11236427	0					
ANR	11236658	PrimaryExpression	"""3 0"""		11236427	0					
ANR	11236659	Argument	"""use fixed blocks"""		11236427	1					
ANR	11236660	PrimaryExpression	"""use fixed blocks"""		11236427	0					
ANR	11236661	Argument	0		11236427	2					
ANR	11236662	PrimaryExpression	0		11236427	0					
ANR	11236663	Argument	- 15		11236427	3					
ANR	11236664	UnaryOperationExpression	- 15		11236427	0					
ANR	11236665	UnaryOperator	-		11236427	0					
ANR	11236666	PrimaryExpression	15		11236427	1					
ANR	11236667	Argument	1		11236427	4					
ANR	11236668	PrimaryExpression	1		11236427	0					
ANR	11236669	Argument	Z_STREAM_END		11236427	5					
ANR	11236670	Identifier	Z_STREAM_END		11236427	0					
ANR	11236671	ExpressionStatement	"inf ( """" , ""bad window size"" , 0 , 1 , 0 , Z_STREAM_ERROR )"	371:4:13315:13366	11236427	21	True				
ANR	11236672	CallExpression	"inf ( """" , ""bad window size"" , 0 , 1 , 0 , Z_STREAM_ERROR )"		11236427	0					
ANR	11236673	Callee	inf		11236427	0					
ANR	11236674	Identifier	inf		11236427	0					
ANR	11236675	ArgumentList	""""""		11236427	1					
ANR	11236676	Argument	""""""		11236427	0					
ANR	11236677	PrimaryExpression	""""""		11236427	0					
ANR	11236678	Argument	"""bad window size"""		11236427	1					
ANR	11236679	PrimaryExpression	"""bad window size"""		11236427	0					
ANR	11236680	Argument	0		11236427	2					
ANR	11236681	PrimaryExpression	0		11236427	0					
ANR	11236682	Argument	1		11236427	3					
ANR	11236683	PrimaryExpression	1		11236427	0					
ANR	11236684	Argument	0		11236427	4					
ANR	11236685	PrimaryExpression	0		11236427	0					
ANR	11236686	Argument	Z_STREAM_ERROR		11236427	5					
ANR	11236687	Identifier	Z_STREAM_ERROR		11236427	0					
ANR	11236688	ExpressionStatement	mem_setup ( & strm )	373:4:13373:13389	11236427	22	True				
ANR	11236689	CallExpression	mem_setup ( & strm )		11236427	0					
ANR	11236690	Callee	mem_setup		11236427	0					
ANR	11236691	Identifier	mem_setup		11236427	0					
ANR	11236692	ArgumentList	& strm		11236427	1					
ANR	11236693	Argument	& strm		11236427	0					
ANR	11236694	UnaryOperationExpression	& strm		11236427	0					
ANR	11236695	UnaryOperator	&		11236427	0					
ANR	11236696	Identifier	strm		11236427	1					
ANR	11236697	ExpressionStatement	strm . avail_in = 0	374:4:13395:13412	11236427	23	True				
ANR	11236698	AssignmentExpression	strm . avail_in = 0		11236427	0		=			
ANR	11236699	MemberAccess	strm . avail_in		11236427	0					
ANR	11236700	Identifier	strm		11236427	0					
ANR	11236701	Identifier	avail_in		11236427	1					
ANR	11236702	PrimaryExpression	0		11236427	1					
ANR	11236703	ExpressionStatement	strm . next_in = Z_NULL	375:4:13418:13439	11236427	24	True				
ANR	11236704	AssignmentExpression	strm . next_in = Z_NULL		11236427	0		=			
ANR	11236705	MemberAccess	strm . next_in		11236427	0					
ANR	11236706	Identifier	strm		11236427	0					
ANR	11236707	Identifier	next_in		11236427	1					
ANR	11236708	Identifier	Z_NULL		11236427	1					
ANR	11236709	ExpressionStatement	"ret = inflateInit_ ( & strm , ZLIB_VERSION - 1 , ( int ) sizeof ( z_stream ) )"	376:4:13445:13511	11236427	25	True				
ANR	11236710	AssignmentExpression	"ret = inflateInit_ ( & strm , ZLIB_VERSION - 1 , ( int ) sizeof ( z_stream ) )"		11236427	0		=			
ANR	11236711	Identifier	ret		11236427	0					
ANR	11236712	CallExpression	"inflateInit_ ( & strm , ZLIB_VERSION - 1 , ( int ) sizeof ( z_stream ) )"		11236427	1					
ANR	11236713	Callee	inflateInit_		11236427	0					
ANR	11236714	Identifier	inflateInit_		11236427	0					
ANR	11236715	ArgumentList	& strm		11236427	1					
ANR	11236716	Argument	& strm		11236427	0					
ANR	11236717	UnaryOperationExpression	& strm		11236427	0					
ANR	11236718	UnaryOperator	&		11236427	0					
ANR	11236719	Identifier	strm		11236427	1					
ANR	11236720	Argument	ZLIB_VERSION - 1		11236427	1					
ANR	11236721	AdditiveExpression	ZLIB_VERSION - 1		11236427	0		-			
ANR	11236722	Identifier	ZLIB_VERSION		11236427	0					
ANR	11236723	PrimaryExpression	1		11236427	1					
ANR	11236724	Argument	( int ) sizeof ( z_stream )		11236427	2					
ANR	11236725	CastExpression	( int ) sizeof ( z_stream )		11236427	0					
ANR	11236726	CastTarget	int		11236427	0					
ANR	11236727	SizeofExpression	sizeof ( z_stream )		11236427	1					
ANR	11236728	Sizeof	sizeof		11236427	0					
ANR	11236729	SizeofOperand	z_stream		11236427	1					
ANR	11236730	ExpressionStatement	assert ( ret == Z_VERSION_ERROR )	377:48:13561:13591	11236427	26	True				
ANR	11236731	CallExpression	assert ( ret == Z_VERSION_ERROR )		11236427	0					
ANR	11236732	Callee	assert		11236427	0					
ANR	11236733	Identifier	assert		11236427	0					
ANR	11236734	ArgumentList	ret == Z_VERSION_ERROR		11236427	1					
ANR	11236735	Argument	ret == Z_VERSION_ERROR		11236427	0					
ANR	11236736	EqualityExpression	ret == Z_VERSION_ERROR		11236427	0		==			
ANR	11236737	Identifier	ret		11236427	0					
ANR	11236738	Identifier	Z_VERSION_ERROR		11236427	1					
ANR	11236739	ExpressionStatement	"mem_done ( & strm , ""wrong version"" )"	378:4:13597:13629	11236427	27	True				
ANR	11236740	CallExpression	"mem_done ( & strm , ""wrong version"" )"		11236427	0					
ANR	11236741	Callee	mem_done		11236427	0					
ANR	11236742	Identifier	mem_done		11236427	0					
ANR	11236743	ArgumentList	& strm		11236427	1					
ANR	11236744	Argument	& strm		11236427	0					
ANR	11236745	UnaryOperationExpression	& strm		11236427	0					
ANR	11236746	UnaryOperator	&		11236427	0					
ANR	11236747	Identifier	strm		11236427	1					
ANR	11236748	Argument	"""wrong version"""		11236427	1					
ANR	11236749	PrimaryExpression	"""wrong version"""		11236427	0					
ANR	11236750	ExpressionStatement	strm . avail_in = 0	380:4:13636:13653	11236427	28	True				
ANR	11236751	AssignmentExpression	strm . avail_in = 0		11236427	0		=			
ANR	11236752	MemberAccess	strm . avail_in		11236427	0					
ANR	11236753	Identifier	strm		11236427	0					
ANR	11236754	Identifier	avail_in		11236427	1					
ANR	11236755	PrimaryExpression	0		11236427	1					
ANR	11236756	ExpressionStatement	strm . next_in = Z_NULL	381:4:13659:13680	11236427	29	True				
ANR	11236757	AssignmentExpression	strm . next_in = Z_NULL		11236427	0		=			
ANR	11236758	MemberAccess	strm . next_in		11236427	0					
ANR	11236759	Identifier	strm		11236427	0					
ANR	11236760	Identifier	next_in		11236427	1					
ANR	11236761	Identifier	Z_NULL		11236427	1					
ANR	11236762	ExpressionStatement	ret = inflateInit ( & strm )	382:4:13686:13710	11236427	30	True				
ANR	11236763	AssignmentExpression	ret = inflateInit ( & strm )		11236427	0		=			
ANR	11236764	Identifier	ret		11236427	0					
ANR	11236765	CallExpression	inflateInit ( & strm )		11236427	1					
ANR	11236766	Callee	inflateInit		11236427	0					
ANR	11236767	Identifier	inflateInit		11236427	0					
ANR	11236768	ArgumentList	& strm		11236427	1					
ANR	11236769	Argument	& strm		11236427	0					
ANR	11236770	UnaryOperationExpression	& strm		11236427	0					
ANR	11236771	UnaryOperator	&		11236427	0					
ANR	11236772	Identifier	strm		11236427	1					
ANR	11236773	ExpressionStatement	assert ( ret == Z_OK )	382:48:13730:13749	11236427	31	True				
ANR	11236774	CallExpression	assert ( ret == Z_OK )		11236427	0					
ANR	11236775	Callee	assert		11236427	0					
ANR	11236776	Identifier	assert		11236427	0					
ANR	11236777	ArgumentList	ret == Z_OK		11236427	1					
ANR	11236778	Argument	ret == Z_OK		11236427	0					
ANR	11236779	EqualityExpression	ret == Z_OK		11236427	0		==			
ANR	11236780	Identifier	ret		11236427	0					
ANR	11236781	Identifier	Z_OK		11236427	1					
ANR	11236782	ExpressionStatement	ret = inflateEnd ( & strm )	383:4:13755:13778	11236427	32	True				
ANR	11236783	AssignmentExpression	ret = inflateEnd ( & strm )		11236427	0		=			
ANR	11236784	Identifier	ret		11236427	0					
ANR	11236785	CallExpression	inflateEnd ( & strm )		11236427	1					
ANR	11236786	Callee	inflateEnd		11236427	0					
ANR	11236787	Identifier	inflateEnd		11236427	0					
ANR	11236788	ArgumentList	& strm		11236427	1					
ANR	11236789	Argument	& strm		11236427	0					
ANR	11236790	UnaryOperationExpression	& strm		11236427	0					
ANR	11236791	UnaryOperator	&		11236427	0					
ANR	11236792	Identifier	strm		11236427	1					
ANR	11236793	ExpressionStatement	assert ( ret == Z_OK )	383:48:13799:13818	11236427	33	True				
ANR	11236794	CallExpression	assert ( ret == Z_OK )		11236427	0					
ANR	11236795	Callee	assert		11236427	0					
ANR	11236796	Identifier	assert		11236427	0					
ANR	11236797	ArgumentList	ret == Z_OK		11236427	1					
ANR	11236798	Argument	ret == Z_OK		11236427	0					
ANR	11236799	EqualityExpression	ret == Z_OK		11236427	0		==			
ANR	11236800	Identifier	ret		11236427	0					
ANR	11236801	Identifier	Z_OK		11236427	1					
ANR	11236802	ExpressionStatement	"fputs ( ""inflate built-in memory routines\\n"" , stderr )"	384:4:13824:13875	11236427	34	True				
ANR	11236803	CallExpression	"fputs ( ""inflate built-in memory routines\\n"" , stderr )"		11236427	0					
ANR	11236804	Callee	fputs		11236427	0					
ANR	11236805	Identifier	fputs		11236427	0					
ANR	11236806	ArgumentList	"""inflate built-in memory routines\\n"""		11236427	1					
ANR	11236807	Argument	"""inflate built-in memory routines\\n"""		11236427	0					
ANR	11236808	PrimaryExpression	"""inflate built-in memory routines\\n"""		11236427	0					
ANR	11236809	Argument	stderr		11236427	1					
ANR	11236810	Identifier	stderr		11236427	0					
ANR	11236811	ReturnType	local void		11236427	1					
ANR	11236812	Identifier	cover_support		11236427	2					
ANR	11236813	ParameterList			11236427	3					
ANR	11236814	CFGEntryNode	ENTRY		11236427		True				
ANR	11236815	CFGExitNode	EXIT		11236427		True				
ANR	11236816	Symbol	ret		11236427						
ANR	11236817	Symbol	Z_STREAM_ERROR		11236427						
ANR	11236818	Symbol	Z_VERSION_ERROR		11236427						
ANR	11236819	Symbol	inflateEnd		11236427						
ANR	11236820	Symbol	inflatePrime		11236427						
ANR	11236821	Symbol	& strm		11236427						
ANR	11236822	Symbol	inflateInit		11236427						
ANR	11236823	Symbol	strm		11236427						
ANR	11236824	Symbol	Z_OK		11236427						
ANR	11236825	Symbol	stderr		11236427						
ANR	11236826	Symbol	inflateSetDictionary		11236427						
ANR	11236827	Symbol	strm . next_in		11236427						
ANR	11236828	Symbol	inflateInit_		11236427						
ANR	11236829	Symbol	Z_STREAM_END		11236427						
ANR	11236830	Symbol	ZLIB_VERSION		11236427						
ANR	11236831	Symbol	strm . avail_in		11236427						
ANR	11236832	Symbol	Z_NULL		11236427						
ANR	11236833	Function	cover_wrap	388:0:13956:16560							
ANR	11236834	FunctionDef	cover_wrap ()		11236833	0					
ANR	11236835	CompoundStatement		389:0:13984:16560	11236833	0					
ANR	11236836	IdentifierDeclStatement	int ret ;	390:4:13990:13997	11236833	0	True				
ANR	11236837	IdentifierDecl	ret		11236833	0					
ANR	11236838	IdentifierDeclType	int		11236833	0					
ANR	11236839	Identifier	ret		11236833	1					
ANR	11236840	IdentifierDeclStatement	"z_stream strm , copy ;"	391:4:14003:14022	11236833	1	True				
ANR	11236841	IdentifierDecl	strm		11236833	0					
ANR	11236842	IdentifierDeclType	z_stream		11236833	0					
ANR	11236843	Identifier	strm		11236833	1					
ANR	11236844	IdentifierDecl	copy		11236833	1					
ANR	11236845	IdentifierDeclType	z_stream		11236833	0					
ANR	11236846	Identifier	copy		11236833	1					
ANR	11236847	IdentifierDeclStatement	unsigned char dict [ 257 ] ;	392:4:14028:14051	11236833	2	True				
ANR	11236848	IdentifierDecl	dict [ 257 ]		11236833	0					
ANR	11236849	IdentifierDeclType	unsigned char [ 257 ]		11236833	0					
ANR	11236850	Identifier	dict		11236833	1					
ANR	11236851	PrimaryExpression	257		11236833	2					
ANR	11236852	ExpressionStatement	"ret = inflate ( Z_NULL , 0 )"	394:4:14058:14082	11236833	3	True				
ANR	11236853	AssignmentExpression	"ret = inflate ( Z_NULL , 0 )"		11236833	0		=			
ANR	11236854	Identifier	ret		11236833	0					
ANR	11236855	CallExpression	"inflate ( Z_NULL , 0 )"		11236833	1					
ANR	11236856	Callee	inflate		11236833	0					
ANR	11236857	Identifier	inflate		11236833	0					
ANR	11236858	ArgumentList	Z_NULL		11236833	1					
ANR	11236859	Argument	Z_NULL		11236833	0					
ANR	11236860	Identifier	Z_NULL		11236833	0					
ANR	11236861	Argument	0		11236833	1					
ANR	11236862	PrimaryExpression	0		11236833	0					
ANR	11236863	ExpressionStatement	assert ( ret == Z_STREAM_ERROR )	394:48:14102:14131	11236833	4	True				
ANR	11236864	CallExpression	assert ( ret == Z_STREAM_ERROR )		11236833	0					
ANR	11236865	Callee	assert		11236833	0					
ANR	11236866	Identifier	assert		11236833	0					
ANR	11236867	ArgumentList	ret == Z_STREAM_ERROR		11236833	1					
ANR	11236868	Argument	ret == Z_STREAM_ERROR		11236833	0					
ANR	11236869	EqualityExpression	ret == Z_STREAM_ERROR		11236833	0		==			
ANR	11236870	Identifier	ret		11236833	0					
ANR	11236871	Identifier	Z_STREAM_ERROR		11236833	1					
ANR	11236872	ExpressionStatement	ret = inflateEnd ( Z_NULL )	395:4:14137:14161	11236833	5	True				
ANR	11236873	AssignmentExpression	ret = inflateEnd ( Z_NULL )		11236833	0		=			
ANR	11236874	Identifier	ret		11236833	0					
ANR	11236875	CallExpression	inflateEnd ( Z_NULL )		11236833	1					
ANR	11236876	Callee	inflateEnd		11236833	0					
ANR	11236877	Identifier	inflateEnd		11236833	0					
ANR	11236878	ArgumentList	Z_NULL		11236833	1					
ANR	11236879	Argument	Z_NULL		11236833	0					
ANR	11236880	Identifier	Z_NULL		11236833	0					
ANR	11236881	ExpressionStatement	assert ( ret == Z_STREAM_ERROR )	395:48:14181:14210	11236833	6	True				
ANR	11236882	CallExpression	assert ( ret == Z_STREAM_ERROR )		11236833	0					
ANR	11236883	Callee	assert		11236833	0					
ANR	11236884	Identifier	assert		11236833	0					
ANR	11236885	ArgumentList	ret == Z_STREAM_ERROR		11236833	1					
ANR	11236886	Argument	ret == Z_STREAM_ERROR		11236833	0					
ANR	11236887	EqualityExpression	ret == Z_STREAM_ERROR		11236833	0		==			
ANR	11236888	Identifier	ret		11236833	0					
ANR	11236889	Identifier	Z_STREAM_ERROR		11236833	1					
ANR	11236890	ExpressionStatement	"ret = inflateCopy ( Z_NULL , Z_NULL )"	396:4:14216:14249	11236833	7	True				
ANR	11236891	AssignmentExpression	"ret = inflateCopy ( Z_NULL , Z_NULL )"		11236833	0		=			
ANR	11236892	Identifier	ret		11236833	0					
ANR	11236893	CallExpression	"inflateCopy ( Z_NULL , Z_NULL )"		11236833	1					
ANR	11236894	Callee	inflateCopy		11236833	0					
ANR	11236895	Identifier	inflateCopy		11236833	0					
ANR	11236896	ArgumentList	Z_NULL		11236833	1					
ANR	11236897	Argument	Z_NULL		11236833	0					
ANR	11236898	Identifier	Z_NULL		11236833	0					
ANR	11236899	Argument	Z_NULL		11236833	1					
ANR	11236900	Identifier	Z_NULL		11236833	0					
ANR	11236901	ExpressionStatement	assert ( ret == Z_STREAM_ERROR )	396:48:14260:14289	11236833	8	True				
ANR	11236902	CallExpression	assert ( ret == Z_STREAM_ERROR )		11236833	0					
ANR	11236903	Callee	assert		11236833	0					
ANR	11236904	Identifier	assert		11236833	0					
ANR	11236905	ArgumentList	ret == Z_STREAM_ERROR		11236833	1					
ANR	11236906	Argument	ret == Z_STREAM_ERROR		11236833	0					
ANR	11236907	EqualityExpression	ret == Z_STREAM_ERROR		11236833	0		==			
ANR	11236908	Identifier	ret		11236833	0					
ANR	11236909	Identifier	Z_STREAM_ERROR		11236833	1					
ANR	11236910	ExpressionStatement	"fputs ( ""inflate bad parameters\\n"" , stderr )"	397:4:14295:14336	11236833	9	True				
ANR	11236911	CallExpression	"fputs ( ""inflate bad parameters\\n"" , stderr )"		11236833	0					
ANR	11236912	Callee	fputs		11236833	0					
ANR	11236913	Identifier	fputs		11236833	0					
ANR	11236914	ArgumentList	"""inflate bad parameters\\n"""		11236833	1					
ANR	11236915	Argument	"""inflate bad parameters\\n"""		11236833	0					
ANR	11236916	PrimaryExpression	"""inflate bad parameters\\n"""		11236833	0					
ANR	11236917	Argument	stderr		11236833	1					
ANR	11236918	Identifier	stderr		11236833	0					
ANR	11236919	ExpressionStatement	"inf ( ""1f 8b 0 0"" , ""bad gzip method"" , 0 , 31 , 0 , Z_DATA_ERROR )"	399:4:14343:14402	11236833	10	True				
ANR	11236920	CallExpression	"inf ( ""1f 8b 0 0"" , ""bad gzip method"" , 0 , 31 , 0 , Z_DATA_ERROR )"		11236833	0					
ANR	11236921	Callee	inf		11236833	0					
ANR	11236922	Identifier	inf		11236833	0					
ANR	11236923	ArgumentList	"""1f 8b 0 0"""		11236833	1					
ANR	11236924	Argument	"""1f 8b 0 0"""		11236833	0					
ANR	11236925	PrimaryExpression	"""1f 8b 0 0"""		11236833	0					
ANR	11236926	Argument	"""bad gzip method"""		11236833	1					
ANR	11236927	PrimaryExpression	"""bad gzip method"""		11236833	0					
ANR	11236928	Argument	0		11236833	2					
ANR	11236929	PrimaryExpression	0		11236833	0					
ANR	11236930	Argument	31		11236833	3					
ANR	11236931	PrimaryExpression	31		11236833	0					
ANR	11236932	Argument	0		11236833	4					
ANR	11236933	PrimaryExpression	0		11236833	0					
ANR	11236934	Argument	Z_DATA_ERROR		11236833	5					
ANR	11236935	Identifier	Z_DATA_ERROR		11236833	0					
ANR	11236936	ExpressionStatement	"inf ( ""1f 8b 8 80"" , ""bad gzip flags"" , 0 , 31 , 0 , Z_DATA_ERROR )"	400:4:14408:14467	11236833	11	True				
ANR	11236937	CallExpression	"inf ( ""1f 8b 8 80"" , ""bad gzip flags"" , 0 , 31 , 0 , Z_DATA_ERROR )"		11236833	0					
ANR	11236938	Callee	inf		11236833	0					
ANR	11236939	Identifier	inf		11236833	0					
ANR	11236940	ArgumentList	"""1f 8b 8 80"""		11236833	1					
ANR	11236941	Argument	"""1f 8b 8 80"""		11236833	0					
ANR	11236942	PrimaryExpression	"""1f 8b 8 80"""		11236833	0					
ANR	11236943	Argument	"""bad gzip flags"""		11236833	1					
ANR	11236944	PrimaryExpression	"""bad gzip flags"""		11236833	0					
ANR	11236945	Argument	0		11236833	2					
ANR	11236946	PrimaryExpression	0		11236833	0					
ANR	11236947	Argument	31		11236833	3					
ANR	11236948	PrimaryExpression	31		11236833	0					
ANR	11236949	Argument	0		11236833	4					
ANR	11236950	PrimaryExpression	0		11236833	0					
ANR	11236951	Argument	Z_DATA_ERROR		11236833	5					
ANR	11236952	Identifier	Z_DATA_ERROR		11236833	0					
ANR	11236953	ExpressionStatement	"inf ( ""77 85"" , ""bad zlib method"" , 0 , 15 , 0 , Z_DATA_ERROR )"	401:4:14473:14528	11236833	12	True				
ANR	11236954	CallExpression	"inf ( ""77 85"" , ""bad zlib method"" , 0 , 15 , 0 , Z_DATA_ERROR )"		11236833	0					
ANR	11236955	Callee	inf		11236833	0					
ANR	11236956	Identifier	inf		11236833	0					
ANR	11236957	ArgumentList	"""77 85"""		11236833	1					
ANR	11236958	Argument	"""77 85"""		11236833	0					
ANR	11236959	PrimaryExpression	"""77 85"""		11236833	0					
ANR	11236960	Argument	"""bad zlib method"""		11236833	1					
ANR	11236961	PrimaryExpression	"""bad zlib method"""		11236833	0					
ANR	11236962	Argument	0		11236833	2					
ANR	11236963	PrimaryExpression	0		11236833	0					
ANR	11236964	Argument	15		11236833	3					
ANR	11236965	PrimaryExpression	15		11236833	0					
ANR	11236966	Argument	0		11236833	4					
ANR	11236967	PrimaryExpression	0		11236833	0					
ANR	11236968	Argument	Z_DATA_ERROR		11236833	5					
ANR	11236969	Identifier	Z_DATA_ERROR		11236833	0					
ANR	11236970	ExpressionStatement	"inf ( ""8 99"" , ""set window size from header"" , 0 , 0 , 0 , Z_OK )"	402:4:14534:14591	11236833	13	True				
ANR	11236971	CallExpression	"inf ( ""8 99"" , ""set window size from header"" , 0 , 0 , 0 , Z_OK )"		11236833	0					
ANR	11236972	Callee	inf		11236833	0					
ANR	11236973	Identifier	inf		11236833	0					
ANR	11236974	ArgumentList	"""8 99"""		11236833	1					
ANR	11236975	Argument	"""8 99"""		11236833	0					
ANR	11236976	PrimaryExpression	"""8 99"""		11236833	0					
ANR	11236977	Argument	"""set window size from header"""		11236833	1					
ANR	11236978	PrimaryExpression	"""set window size from header"""		11236833	0					
ANR	11236979	Argument	0		11236833	2					
ANR	11236980	PrimaryExpression	0		11236833	0					
ANR	11236981	Argument	0		11236833	3					
ANR	11236982	PrimaryExpression	0		11236833	0					
ANR	11236983	Argument	0		11236833	4					
ANR	11236984	PrimaryExpression	0		11236833	0					
ANR	11236985	Argument	Z_OK		11236833	5					
ANR	11236986	Identifier	Z_OK		11236833	0					
ANR	11236987	ExpressionStatement	"inf ( ""78 9c"" , ""bad zlib window size"" , 0 , 8 , 0 , Z_DATA_ERROR )"	403:4:14597:14656	11236833	14	True				
ANR	11236988	CallExpression	"inf ( ""78 9c"" , ""bad zlib window size"" , 0 , 8 , 0 , Z_DATA_ERROR )"		11236833	0					
ANR	11236989	Callee	inf		11236833	0					
ANR	11236990	Identifier	inf		11236833	0					
ANR	11236991	ArgumentList	"""78 9c"""		11236833	1					
ANR	11236992	Argument	"""78 9c"""		11236833	0					
ANR	11236993	PrimaryExpression	"""78 9c"""		11236833	0					
ANR	11236994	Argument	"""bad zlib window size"""		11236833	1					
ANR	11236995	PrimaryExpression	"""bad zlib window size"""		11236833	0					
ANR	11236996	Argument	0		11236833	2					
ANR	11236997	PrimaryExpression	0		11236833	0					
ANR	11236998	Argument	8		11236833	3					
ANR	11236999	PrimaryExpression	8		11236833	0					
ANR	11237000	Argument	0		11236833	4					
ANR	11237001	PrimaryExpression	0		11236833	0					
ANR	11237002	Argument	Z_DATA_ERROR		11236833	5					
ANR	11237003	Identifier	Z_DATA_ERROR		11236833	0					
ANR	11237004	ExpressionStatement	"inf ( ""78 9c 63 0 0 0 1 0 1"" , ""check adler32"" , 0 , 15 , 1 , Z_STREAM_END )"	404:4:14662:14730	11236833	15	True				
ANR	11237005	CallExpression	"inf ( ""78 9c 63 0 0 0 1 0 1"" , ""check adler32"" , 0 , 15 , 1 , Z_STREAM_END )"		11236833	0					
ANR	11237006	Callee	inf		11236833	0					
ANR	11237007	Identifier	inf		11236833	0					
ANR	11237008	ArgumentList	"""78 9c 63 0 0 0 1 0 1"""		11236833	1					
ANR	11237009	Argument	"""78 9c 63 0 0 0 1 0 1"""		11236833	0					
ANR	11237010	PrimaryExpression	"""78 9c 63 0 0 0 1 0 1"""		11236833	0					
ANR	11237011	Argument	"""check adler32"""		11236833	1					
ANR	11237012	PrimaryExpression	"""check adler32"""		11236833	0					
ANR	11237013	Argument	0		11236833	2					
ANR	11237014	PrimaryExpression	0		11236833	0					
ANR	11237015	Argument	15		11236833	3					
ANR	11237016	PrimaryExpression	15		11236833	0					
ANR	11237017	Argument	1		11236833	4					
ANR	11237018	PrimaryExpression	1		11236833	0					
ANR	11237019	Argument	Z_STREAM_END		11236833	5					
ANR	11237020	Identifier	Z_STREAM_END		11236833	0					
ANR	11237021	ExpressionStatement	"inf ( ""1f 8b 8 1e 0 0 0 0 0 0 1 0 0 0 0 0 0"" , ""bad header crc"" , 0 , 47 , 1 , Z_DATA_ERROR )"	405:4:14736:14829	11236833	16	True				
ANR	11237022	CallExpression	"inf ( ""1f 8b 8 1e 0 0 0 0 0 0 1 0 0 0 0 0 0"" , ""bad header crc"" , 0 , 47 , 1 , Z_DATA_ERROR )"		11236833	0					
ANR	11237023	Callee	inf		11236833	0					
ANR	11237024	Identifier	inf		11236833	0					
ANR	11237025	ArgumentList	"""1f 8b 8 1e 0 0 0 0 0 0 1 0 0 0 0 0 0"""		11236833	1					
ANR	11237026	Argument	"""1f 8b 8 1e 0 0 0 0 0 0 1 0 0 0 0 0 0"""		11236833	0					
ANR	11237027	PrimaryExpression	"""1f 8b 8 1e 0 0 0 0 0 0 1 0 0 0 0 0 0"""		11236833	0					
ANR	11237028	Argument	"""bad header crc"""		11236833	1					
ANR	11237029	PrimaryExpression	"""bad header crc"""		11236833	0					
ANR	11237030	Argument	0		11236833	2					
ANR	11237031	PrimaryExpression	0		11236833	0					
ANR	11237032	Argument	47		11236833	3					
ANR	11237033	PrimaryExpression	47		11236833	0					
ANR	11237034	Argument	1		11236833	4					
ANR	11237035	PrimaryExpression	1		11236833	0					
ANR	11237036	Argument	Z_DATA_ERROR		11236833	5					
ANR	11237037	Identifier	Z_DATA_ERROR		11236833	0					
ANR	11237038	ExpressionStatement	"inf ( ""1f 8b 8 2 0 0 0 0 0 0 1d 26 3 0 0 0 0 0 0 0 0 0"" , ""check gzip length"" , 0 , 47 , 0 , Z_STREAM_END )"	407:4:14835:14942	11236833	17	True				
ANR	11237039	CallExpression	"inf ( ""1f 8b 8 2 0 0 0 0 0 0 1d 26 3 0 0 0 0 0 0 0 0 0"" , ""check gzip length"" , 0 , 47 , 0 , Z_STREAM_END )"		11236833	0					
ANR	11237040	Callee	inf		11236833	0					
ANR	11237041	Identifier	inf		11236833	0					
ANR	11237042	ArgumentList	"""1f 8b 8 2 0 0 0 0 0 0 1d 26 3 0 0 0 0 0 0 0 0 0"""		11236833	1					
ANR	11237043	Argument	"""1f 8b 8 2 0 0 0 0 0 0 1d 26 3 0 0 0 0 0 0 0 0 0"""		11236833	0					
ANR	11237044	PrimaryExpression	"""1f 8b 8 2 0 0 0 0 0 0 1d 26 3 0 0 0 0 0 0 0 0 0"""		11236833	0					
ANR	11237045	Argument	"""check gzip length"""		11236833	1					
ANR	11237046	PrimaryExpression	"""check gzip length"""		11236833	0					
ANR	11237047	Argument	0		11236833	2					
ANR	11237048	PrimaryExpression	0		11236833	0					
ANR	11237049	Argument	47		11236833	3					
ANR	11237050	PrimaryExpression	47		11236833	0					
ANR	11237051	Argument	0		11236833	4					
ANR	11237052	PrimaryExpression	0		11236833	0					
ANR	11237053	Argument	Z_STREAM_END		11236833	5					
ANR	11237054	Identifier	Z_STREAM_END		11236833	0					
ANR	11237055	ExpressionStatement	"inf ( ""78 90"" , ""bad zlib header check"" , 0 , 47 , 0 , Z_DATA_ERROR )"	409:4:14948:15009	11236833	18	True				
ANR	11237056	CallExpression	"inf ( ""78 90"" , ""bad zlib header check"" , 0 , 47 , 0 , Z_DATA_ERROR )"		11236833	0					
ANR	11237057	Callee	inf		11236833	0					
ANR	11237058	Identifier	inf		11236833	0					
ANR	11237059	ArgumentList	"""78 90"""		11236833	1					
ANR	11237060	Argument	"""78 90"""		11236833	0					
ANR	11237061	PrimaryExpression	"""78 90"""		11236833	0					
ANR	11237062	Argument	"""bad zlib header check"""		11236833	1					
ANR	11237063	PrimaryExpression	"""bad zlib header check"""		11236833	0					
ANR	11237064	Argument	0		11236833	2					
ANR	11237065	PrimaryExpression	0		11236833	0					
ANR	11237066	Argument	47		11236833	3					
ANR	11237067	PrimaryExpression	47		11236833	0					
ANR	11237068	Argument	0		11236833	4					
ANR	11237069	PrimaryExpression	0		11236833	0					
ANR	11237070	Argument	Z_DATA_ERROR		11236833	5					
ANR	11237071	Identifier	Z_DATA_ERROR		11236833	0					
ANR	11237072	ExpressionStatement	"inf ( ""8 b8 0 0 0 1"" , ""need dictionary"" , 0 , 8 , 0 , Z_NEED_DICT )"	410:4:15015:15075	11236833	19	True				
ANR	11237073	CallExpression	"inf ( ""8 b8 0 0 0 1"" , ""need dictionary"" , 0 , 8 , 0 , Z_NEED_DICT )"		11236833	0					
ANR	11237074	Callee	inf		11236833	0					
ANR	11237075	Identifier	inf		11236833	0					
ANR	11237076	ArgumentList	"""8 b8 0 0 0 1"""		11236833	1					
ANR	11237077	Argument	"""8 b8 0 0 0 1"""		11236833	0					
ANR	11237078	PrimaryExpression	"""8 b8 0 0 0 1"""		11236833	0					
ANR	11237079	Argument	"""need dictionary"""		11236833	1					
ANR	11237080	PrimaryExpression	"""need dictionary"""		11236833	0					
ANR	11237081	Argument	0		11236833	2					
ANR	11237082	PrimaryExpression	0		11236833	0					
ANR	11237083	Argument	8		11236833	3					
ANR	11237084	PrimaryExpression	8		11236833	0					
ANR	11237085	Argument	0		11236833	4					
ANR	11237086	PrimaryExpression	0		11236833	0					
ANR	11237087	Argument	Z_NEED_DICT		11236833	5					
ANR	11237088	Identifier	Z_NEED_DICT		11236833	0					
ANR	11237089	ExpressionStatement	"inf ( ""78 9c 63 0"" , ""compute adler32"" , 0 , 15 , 1 , Z_OK )"	411:4:15081:15133	11236833	20	True				
ANR	11237090	CallExpression	"inf ( ""78 9c 63 0"" , ""compute adler32"" , 0 , 15 , 1 , Z_OK )"		11236833	0					
ANR	11237091	Callee	inf		11236833	0					
ANR	11237092	Identifier	inf		11236833	0					
ANR	11237093	ArgumentList	"""78 9c 63 0"""		11236833	1					
ANR	11237094	Argument	"""78 9c 63 0"""		11236833	0					
ANR	11237095	PrimaryExpression	"""78 9c 63 0"""		11236833	0					
ANR	11237096	Argument	"""compute adler32"""		11236833	1					
ANR	11237097	PrimaryExpression	"""compute adler32"""		11236833	0					
ANR	11237098	Argument	0		11236833	2					
ANR	11237099	PrimaryExpression	0		11236833	0					
ANR	11237100	Argument	15		11236833	3					
ANR	11237101	PrimaryExpression	15		11236833	0					
ANR	11237102	Argument	1		11236833	4					
ANR	11237103	PrimaryExpression	1		11236833	0					
ANR	11237104	Argument	Z_OK		11236833	5					
ANR	11237105	Identifier	Z_OK		11236833	0					
ANR	11237106	ExpressionStatement	mem_setup ( & strm )	413:4:15140:15156	11236833	21	True				
ANR	11237107	CallExpression	mem_setup ( & strm )		11236833	0					
ANR	11237108	Callee	mem_setup		11236833	0					
ANR	11237109	Identifier	mem_setup		11236833	0					
ANR	11237110	ArgumentList	& strm		11236833	1					
ANR	11237111	Argument	& strm		11236833	0					
ANR	11237112	UnaryOperationExpression	& strm		11236833	0					
ANR	11237113	UnaryOperator	&		11236833	0					
ANR	11237114	Identifier	strm		11236833	1					
ANR	11237115	ExpressionStatement	strm . avail_in = 0	414:4:15162:15179	11236833	22	True				
ANR	11237116	AssignmentExpression	strm . avail_in = 0		11236833	0		=			
ANR	11237117	MemberAccess	strm . avail_in		11236833	0					
ANR	11237118	Identifier	strm		11236833	0					
ANR	11237119	Identifier	avail_in		11236833	1					
ANR	11237120	PrimaryExpression	0		11236833	1					
ANR	11237121	ExpressionStatement	strm . next_in = Z_NULL	415:4:15185:15206	11236833	23	True				
ANR	11237122	AssignmentExpression	strm . next_in = Z_NULL		11236833	0		=			
ANR	11237123	MemberAccess	strm . next_in		11236833	0					
ANR	11237124	Identifier	strm		11236833	0					
ANR	11237125	Identifier	next_in		11236833	1					
ANR	11237126	Identifier	Z_NULL		11236833	1					
ANR	11237127	ExpressionStatement	"ret = inflateInit2 ( & strm , - 8 )"	416:4:15212:15241	11236833	24	True				
ANR	11237128	AssignmentExpression	"ret = inflateInit2 ( & strm , - 8 )"		11236833	0		=			
ANR	11237129	Identifier	ret		11236833	0					
ANR	11237130	CallExpression	"inflateInit2 ( & strm , - 8 )"		11236833	1					
ANR	11237131	Callee	inflateInit2		11236833	0					
ANR	11237132	Identifier	inflateInit2		11236833	0					
ANR	11237133	ArgumentList	& strm		11236833	1					
ANR	11237134	Argument	& strm		11236833	0					
ANR	11237135	UnaryOperationExpression	& strm		11236833	0					
ANR	11237136	UnaryOperator	&		11236833	0					
ANR	11237137	Identifier	strm		11236833	1					
ANR	11237138	Argument	- 8		11236833	1					
ANR	11237139	UnaryOperationExpression	- 8		11236833	0					
ANR	11237140	UnaryOperator	-		11236833	0					
ANR	11237141	PrimaryExpression	8		11236833	1					
ANR	11237142	ExpressionStatement	strm . avail_in = 2	417:4:15247:15264	11236833	25	True				
ANR	11237143	AssignmentExpression	strm . avail_in = 2		11236833	0		=			
ANR	11237144	MemberAccess	strm . avail_in		11236833	0					
ANR	11237145	Identifier	strm		11236833	0					
ANR	11237146	Identifier	avail_in		11236833	1					
ANR	11237147	PrimaryExpression	2		11236833	1					
ANR	11237148	ExpressionStatement	"strm . next_in = ( void * ) ""\\x63"""	418:4:15270:15299	11236833	26	True				
ANR	11237149	AssignmentExpression	"strm . next_in = ( void * ) ""\\x63"""		11236833	0		=			
ANR	11237150	MemberAccess	strm . next_in		11236833	0					
ANR	11237151	Identifier	strm		11236833	0					
ANR	11237152	Identifier	next_in		11236833	1					
ANR	11237153	CastExpression	"( void * ) ""\\x63"""		11236833	1					
ANR	11237154	CastTarget	void *		11236833	0					
ANR	11237155	PrimaryExpression	"""\\x63"""		11236833	1					
ANR	11237156	ExpressionStatement	strm . avail_out = 1	419:4:15305:15323	11236833	27	True				
ANR	11237157	AssignmentExpression	strm . avail_out = 1		11236833	0		=			
ANR	11237158	MemberAccess	strm . avail_out		11236833	0					
ANR	11237159	Identifier	strm		11236833	0					
ANR	11237160	Identifier	avail_out		11236833	1					
ANR	11237161	PrimaryExpression	1		11236833	1					
ANR	11237162	ExpressionStatement	strm . next_out = ( void * ) & ret	420:4:15329:15357	11236833	28	True				
ANR	11237163	AssignmentExpression	strm . next_out = ( void * ) & ret		11236833	0		=			
ANR	11237164	MemberAccess	strm . next_out		11236833	0					
ANR	11237165	Identifier	strm		11236833	0					
ANR	11237166	Identifier	next_out		11236833	1					
ANR	11237167	CastExpression	( void * ) & ret		11236833	1					
ANR	11237168	CastTarget	void *		11236833	0					
ANR	11237169	UnaryOperationExpression	& ret		11236833	1					
ANR	11237170	UnaryOperator	&		11236833	0					
ANR	11237171	Identifier	ret		11236833	1					
ANR	11237172	ExpressionStatement	"mem_limit ( & strm , 1 )"	421:4:15363:15382	11236833	29	True				
ANR	11237173	CallExpression	"mem_limit ( & strm , 1 )"		11236833	0					
ANR	11237174	Callee	mem_limit		11236833	0					
ANR	11237175	Identifier	mem_limit		11236833	0					
ANR	11237176	ArgumentList	& strm		11236833	1					
ANR	11237177	Argument	& strm		11236833	0					
ANR	11237178	UnaryOperationExpression	& strm		11236833	0					
ANR	11237179	UnaryOperator	&		11236833	0					
ANR	11237180	Identifier	strm		11236833	1					
ANR	11237181	Argument	1		11236833	1					
ANR	11237182	PrimaryExpression	1		11236833	0					
ANR	11237183	ExpressionStatement	"ret = inflate ( & strm , Z_NO_FLUSH )"	422:4:15388:15420	11236833	30	True				
ANR	11237184	AssignmentExpression	"ret = inflate ( & strm , Z_NO_FLUSH )"		11236833	0		=			
ANR	11237185	Identifier	ret		11236833	0					
ANR	11237186	CallExpression	"inflate ( & strm , Z_NO_FLUSH )"		11236833	1					
ANR	11237187	Callee	inflate		11236833	0					
ANR	11237188	Identifier	inflate		11236833	0					
ANR	11237189	ArgumentList	& strm		11236833	1					
ANR	11237190	Argument	& strm		11236833	0					
ANR	11237191	UnaryOperationExpression	& strm		11236833	0					
ANR	11237192	UnaryOperator	&		11236833	0					
ANR	11237193	Identifier	strm		11236833	1					
ANR	11237194	Argument	Z_NO_FLUSH		11236833	1					
ANR	11237195	Identifier	Z_NO_FLUSH		11236833	0					
ANR	11237196	ExpressionStatement	assert ( ret == Z_MEM_ERROR )	422:48:15432:15458	11236833	31	True				
ANR	11237197	CallExpression	assert ( ret == Z_MEM_ERROR )		11236833	0					
ANR	11237198	Callee	assert		11236833	0					
ANR	11237199	Identifier	assert		11236833	0					
ANR	11237200	ArgumentList	ret == Z_MEM_ERROR		11236833	1					
ANR	11237201	Argument	ret == Z_MEM_ERROR		11236833	0					
ANR	11237202	EqualityExpression	ret == Z_MEM_ERROR		11236833	0		==			
ANR	11237203	Identifier	ret		11236833	0					
ANR	11237204	Identifier	Z_MEM_ERROR		11236833	1					
ANR	11237205	ExpressionStatement	"ret = inflate ( & strm , Z_NO_FLUSH )"	423:4:15464:15496	11236833	32	True				
ANR	11237206	AssignmentExpression	"ret = inflate ( & strm , Z_NO_FLUSH )"		11236833	0		=			
ANR	11237207	Identifier	ret		11236833	0					
ANR	11237208	CallExpression	"inflate ( & strm , Z_NO_FLUSH )"		11236833	1					
ANR	11237209	Callee	inflate		11236833	0					
ANR	11237210	Identifier	inflate		11236833	0					
ANR	11237211	ArgumentList	& strm		11236833	1					
ANR	11237212	Argument	& strm		11236833	0					
ANR	11237213	UnaryOperationExpression	& strm		11236833	0					
ANR	11237214	UnaryOperator	&		11236833	0					
ANR	11237215	Identifier	strm		11236833	1					
ANR	11237216	Argument	Z_NO_FLUSH		11236833	1					
ANR	11237217	Identifier	Z_NO_FLUSH		11236833	0					
ANR	11237218	ExpressionStatement	assert ( ret == Z_MEM_ERROR )	423:48:15508:15534	11236833	33	True				
ANR	11237219	CallExpression	assert ( ret == Z_MEM_ERROR )		11236833	0					
ANR	11237220	Callee	assert		11236833	0					
ANR	11237221	Identifier	assert		11236833	0					
ANR	11237222	ArgumentList	ret == Z_MEM_ERROR		11236833	1					
ANR	11237223	Argument	ret == Z_MEM_ERROR		11236833	0					
ANR	11237224	EqualityExpression	ret == Z_MEM_ERROR		11236833	0		==			
ANR	11237225	Identifier	ret		11236833	0					
ANR	11237226	Identifier	Z_MEM_ERROR		11236833	1					
ANR	11237227	ExpressionStatement	"mem_limit ( & strm , 0 )"	424:4:15540:15559	11236833	34	True				
ANR	11237228	CallExpression	"mem_limit ( & strm , 0 )"		11236833	0					
ANR	11237229	Callee	mem_limit		11236833	0					
ANR	11237230	Identifier	mem_limit		11236833	0					
ANR	11237231	ArgumentList	& strm		11236833	1					
ANR	11237232	Argument	& strm		11236833	0					
ANR	11237233	UnaryOperationExpression	& strm		11236833	0					
ANR	11237234	UnaryOperator	&		11236833	0					
ANR	11237235	Identifier	strm		11236833	1					
ANR	11237236	Argument	0		11236833	1					
ANR	11237237	PrimaryExpression	0		11236833	0					
ANR	11237238	ExpressionStatement	"memset ( dict , 0 , 257 )"	425:4:15565:15585	11236833	35	True				
ANR	11237239	CallExpression	"memset ( dict , 0 , 257 )"		11236833	0					
ANR	11237240	Callee	memset		11236833	0					
ANR	11237241	Identifier	memset		11236833	0					
ANR	11237242	ArgumentList	dict		11236833	1					
ANR	11237243	Argument	dict		11236833	0					
ANR	11237244	Identifier	dict		11236833	0					
ANR	11237245	Argument	0		11236833	1					
ANR	11237246	PrimaryExpression	0		11236833	0					
ANR	11237247	Argument	257		11236833	2					
ANR	11237248	PrimaryExpression	257		11236833	0					
ANR	11237249	ExpressionStatement	"ret = inflateSetDictionary ( & strm , dict , 257 )"	426:4:15591:15635	11236833	36	True				
ANR	11237250	AssignmentExpression	"ret = inflateSetDictionary ( & strm , dict , 257 )"		11236833	0		=			
ANR	11237251	Identifier	ret		11236833	0					
ANR	11237252	CallExpression	"inflateSetDictionary ( & strm , dict , 257 )"		11236833	1					
ANR	11237253	Callee	inflateSetDictionary		11236833	0					
ANR	11237254	Identifier	inflateSetDictionary		11236833	0					
ANR	11237255	ArgumentList	& strm		11236833	1					
ANR	11237256	Argument	& strm		11236833	0					
ANR	11237257	UnaryOperationExpression	& strm		11236833	0					
ANR	11237258	UnaryOperator	&		11236833	0					
ANR	11237259	Identifier	strm		11236833	1					
ANR	11237260	Argument	dict		11236833	1					
ANR	11237261	Identifier	dict		11236833	0					
ANR	11237262	Argument	257		11236833	2					
ANR	11237263	PrimaryExpression	257		11236833	0					
ANR	11237264	ExpressionStatement	assert ( ret == Z_OK )	427:48:15685:15704	11236833	37	True				
ANR	11237265	CallExpression	assert ( ret == Z_OK )		11236833	0					
ANR	11237266	Callee	assert		11236833	0					
ANR	11237267	Identifier	assert		11236833	0					
ANR	11237268	ArgumentList	ret == Z_OK		11236833	1					
ANR	11237269	Argument	ret == Z_OK		11236833	0					
ANR	11237270	EqualityExpression	ret == Z_OK		11236833	0		==			
ANR	11237271	Identifier	ret		11236833	0					
ANR	11237272	Identifier	Z_OK		11236833	1					
ANR	11237273	ExpressionStatement	"mem_limit ( & strm , ( sizeof ( struct inflate_state ) << 1 ) + 256 )"	428:4:15710:15769	11236833	38	True				
ANR	11237274	CallExpression	"mem_limit ( & strm , ( sizeof ( struct inflate_state ) << 1 ) + 256 )"		11236833	0					
ANR	11237275	Callee	mem_limit		11236833	0					
ANR	11237276	Identifier	mem_limit		11236833	0					
ANR	11237277	ArgumentList	& strm		11236833	1					
ANR	11237278	Argument	& strm		11236833	0					
ANR	11237279	UnaryOperationExpression	& strm		11236833	0					
ANR	11237280	UnaryOperator	&		11236833	0					
ANR	11237281	Identifier	strm		11236833	1					
ANR	11237282	Argument	( sizeof ( struct inflate_state ) << 1 ) + 256		11236833	1					
ANR	11237283	AdditiveExpression	( sizeof ( struct inflate_state ) << 1 ) + 256		11236833	0		+			
ANR	11237284	ShiftExpression	sizeof ( struct inflate_state ) << 1		11236833	0		<<			
ANR	11237285	SizeofExpression	sizeof ( struct inflate_state )		11236833	0					
ANR	11237286	Sizeof	sizeof		11236833	0					
ANR	11237287	SizeofOperand	struct inflate_state		11236833	1					
ANR	11237288	PrimaryExpression	1		11236833	1					
ANR	11237289	PrimaryExpression	256		11236833	1					
ANR	11237290	ExpressionStatement	"ret = inflatePrime ( & strm , 16 , 0 )"	429:4:15775:15807	11236833	39	True				
ANR	11237291	AssignmentExpression	"ret = inflatePrime ( & strm , 16 , 0 )"		11236833	0		=			
ANR	11237292	Identifier	ret		11236833	0					
ANR	11237293	CallExpression	"inflatePrime ( & strm , 16 , 0 )"		11236833	1					
ANR	11237294	Callee	inflatePrime		11236833	0					
ANR	11237295	Identifier	inflatePrime		11236833	0					
ANR	11237296	ArgumentList	& strm		11236833	1					
ANR	11237297	Argument	& strm		11236833	0					
ANR	11237298	UnaryOperationExpression	& strm		11236833	0					
ANR	11237299	UnaryOperator	&		11236833	0					
ANR	11237300	Identifier	strm		11236833	1					
ANR	11237301	Argument	16		11236833	1					
ANR	11237302	PrimaryExpression	16		11236833	0					
ANR	11237303	Argument	0		11236833	2					
ANR	11237304	PrimaryExpression	0		11236833	0					
ANR	11237305	ExpressionStatement	assert ( ret == Z_OK )	429:48:15819:15838	11236833	40	True				
ANR	11237306	CallExpression	assert ( ret == Z_OK )		11236833	0					
ANR	11237307	Callee	assert		11236833	0					
ANR	11237308	Identifier	assert		11236833	0					
ANR	11237309	ArgumentList	ret == Z_OK		11236833	1					
ANR	11237310	Argument	ret == Z_OK		11236833	0					
ANR	11237311	EqualityExpression	ret == Z_OK		11236833	0		==			
ANR	11237312	Identifier	ret		11236833	0					
ANR	11237313	Identifier	Z_OK		11236833	1					
ANR	11237314	ExpressionStatement	strm . avail_in = 2	430:4:15844:15861	11236833	41	True				
ANR	11237315	AssignmentExpression	strm . avail_in = 2		11236833	0		=			
ANR	11237316	MemberAccess	strm . avail_in		11236833	0					
ANR	11237317	Identifier	strm		11236833	0					
ANR	11237318	Identifier	avail_in		11236833	1					
ANR	11237319	PrimaryExpression	2		11236833	1					
ANR	11237320	ExpressionStatement	"strm . next_in = ( void * ) ""\\x80"""	431:4:15867:15896	11236833	42	True				
ANR	11237321	AssignmentExpression	"strm . next_in = ( void * ) ""\\x80"""		11236833	0		=			
ANR	11237322	MemberAccess	strm . next_in		11236833	0					
ANR	11237323	Identifier	strm		11236833	0					
ANR	11237324	Identifier	next_in		11236833	1					
ANR	11237325	CastExpression	"( void * ) ""\\x80"""		11236833	1					
ANR	11237326	CastTarget	void *		11236833	0					
ANR	11237327	PrimaryExpression	"""\\x80"""		11236833	1					
ANR	11237328	ExpressionStatement	ret = inflateSync ( & strm )	432:4:15902:15926	11236833	43	True				
ANR	11237329	AssignmentExpression	ret = inflateSync ( & strm )		11236833	0		=			
ANR	11237330	Identifier	ret		11236833	0					
ANR	11237331	CallExpression	inflateSync ( & strm )		11236833	1					
ANR	11237332	Callee	inflateSync		11236833	0					
ANR	11237333	Identifier	inflateSync		11236833	0					
ANR	11237334	ArgumentList	& strm		11236833	1					
ANR	11237335	Argument	& strm		11236833	0					
ANR	11237336	UnaryOperationExpression	& strm		11236833	0					
ANR	11237337	UnaryOperator	&		11236833	0					
ANR	11237338	Identifier	strm		11236833	1					
ANR	11237339	ExpressionStatement	assert ( ret == Z_DATA_ERROR )	432:48:15946:15973	11236833	44	True				
ANR	11237340	CallExpression	assert ( ret == Z_DATA_ERROR )		11236833	0					
ANR	11237341	Callee	assert		11236833	0					
ANR	11237342	Identifier	assert		11236833	0					
ANR	11237343	ArgumentList	ret == Z_DATA_ERROR		11236833	1					
ANR	11237344	Argument	ret == Z_DATA_ERROR		11236833	0					
ANR	11237345	EqualityExpression	ret == Z_DATA_ERROR		11236833	0		==			
ANR	11237346	Identifier	ret		11236833	0					
ANR	11237347	Identifier	Z_DATA_ERROR		11236833	1					
ANR	11237348	ExpressionStatement	"ret = inflate ( & strm , Z_NO_FLUSH )"	433:4:15979:16011	11236833	45	True				
ANR	11237349	AssignmentExpression	"ret = inflate ( & strm , Z_NO_FLUSH )"		11236833	0		=			
ANR	11237350	Identifier	ret		11236833	0					
ANR	11237351	CallExpression	"inflate ( & strm , Z_NO_FLUSH )"		11236833	1					
ANR	11237352	Callee	inflate		11236833	0					
ANR	11237353	Identifier	inflate		11236833	0					
ANR	11237354	ArgumentList	& strm		11236833	1					
ANR	11237355	Argument	& strm		11236833	0					
ANR	11237356	UnaryOperationExpression	& strm		11236833	0					
ANR	11237357	UnaryOperator	&		11236833	0					
ANR	11237358	Identifier	strm		11236833	1					
ANR	11237359	Argument	Z_NO_FLUSH		11236833	1					
ANR	11237360	Identifier	Z_NO_FLUSH		11236833	0					
ANR	11237361	ExpressionStatement	assert ( ret == Z_STREAM_ERROR )	433:48:16023:16052	11236833	46	True				
ANR	11237362	CallExpression	assert ( ret == Z_STREAM_ERROR )		11236833	0					
ANR	11237363	Callee	assert		11236833	0					
ANR	11237364	Identifier	assert		11236833	0					
ANR	11237365	ArgumentList	ret == Z_STREAM_ERROR		11236833	1					
ANR	11237366	Argument	ret == Z_STREAM_ERROR		11236833	0					
ANR	11237367	EqualityExpression	ret == Z_STREAM_ERROR		11236833	0		==			
ANR	11237368	Identifier	ret		11236833	0					
ANR	11237369	Identifier	Z_STREAM_ERROR		11236833	1					
ANR	11237370	ExpressionStatement	strm . avail_in = 4	434:4:16058:16075	11236833	47	True				
ANR	11237371	AssignmentExpression	strm . avail_in = 4		11236833	0		=			
ANR	11237372	MemberAccess	strm . avail_in		11236833	0					
ANR	11237373	Identifier	strm		11236833	0					
ANR	11237374	Identifier	avail_in		11236833	1					
ANR	11237375	PrimaryExpression	4		11236833	1					
ANR	11237376	ExpressionStatement	"strm . next_in = ( void * ) ""\\0\\0\\xff\\xff"""	435:4:16081:16118	11236833	48	True				
ANR	11237377	AssignmentExpression	"strm . next_in = ( void * ) ""\\0\\0\\xff\\xff"""		11236833	0		=			
ANR	11237378	MemberAccess	strm . next_in		11236833	0					
ANR	11237379	Identifier	strm		11236833	0					
ANR	11237380	Identifier	next_in		11236833	1					
ANR	11237381	CastExpression	"( void * ) ""\\0\\0\\xff\\xff"""		11236833	1					
ANR	11237382	CastTarget	void *		11236833	0					
ANR	11237383	PrimaryExpression	"""\\0\\0\\xff\\xff"""		11236833	1					
ANR	11237384	ExpressionStatement	ret = inflateSync ( & strm )	436:4:16124:16148	11236833	49	True				
ANR	11237385	AssignmentExpression	ret = inflateSync ( & strm )		11236833	0		=			
ANR	11237386	Identifier	ret		11236833	0					
ANR	11237387	CallExpression	inflateSync ( & strm )		11236833	1					
ANR	11237388	Callee	inflateSync		11236833	0					
ANR	11237389	Identifier	inflateSync		11236833	0					
ANR	11237390	ArgumentList	& strm		11236833	1					
ANR	11237391	Argument	& strm		11236833	0					
ANR	11237392	UnaryOperationExpression	& strm		11236833	0					
ANR	11237393	UnaryOperator	&		11236833	0					
ANR	11237394	Identifier	strm		11236833	1					
ANR	11237395	ExpressionStatement	assert ( ret == Z_OK )	436:48:16168:16187	11236833	50	True				
ANR	11237396	CallExpression	assert ( ret == Z_OK )		11236833	0					
ANR	11237397	Callee	assert		11236833	0					
ANR	11237398	Identifier	assert		11236833	0					
ANR	11237399	ArgumentList	ret == Z_OK		11236833	1					
ANR	11237400	Argument	ret == Z_OK		11236833	0					
ANR	11237401	EqualityExpression	ret == Z_OK		11236833	0		==			
ANR	11237402	Identifier	ret		11236833	0					
ANR	11237403	Identifier	Z_OK		11236833	1					
ANR	11237404	ExpressionStatement	( void ) inflateSyncPoint ( & strm )	437:4:16193:16222	11236833	51	True				
ANR	11237405	CastExpression	( void ) inflateSyncPoint ( & strm )		11236833	0					
ANR	11237406	CastTarget	void		11236833	0					
ANR	11237407	CallExpression	inflateSyncPoint ( & strm )		11236833	1					
ANR	11237408	Callee	inflateSyncPoint		11236833	0					
ANR	11237409	Identifier	inflateSyncPoint		11236833	0					
ANR	11237410	ArgumentList	& strm		11236833	1					
ANR	11237411	Argument	& strm		11236833	0					
ANR	11237412	UnaryOperationExpression	& strm		11236833	0					
ANR	11237413	UnaryOperator	&		11236833	0					
ANR	11237414	Identifier	strm		11236833	1					
ANR	11237415	ExpressionStatement	"ret = inflateCopy ( & copy , & strm )"	438:4:16228:16259	11236833	52	True				
ANR	11237416	AssignmentExpression	"ret = inflateCopy ( & copy , & strm )"		11236833	0		=			
ANR	11237417	Identifier	ret		11236833	0					
ANR	11237418	CallExpression	"inflateCopy ( & copy , & strm )"		11236833	1					
ANR	11237419	Callee	inflateCopy		11236833	0					
ANR	11237420	Identifier	inflateCopy		11236833	0					
ANR	11237421	ArgumentList	& copy		11236833	1					
ANR	11237422	Argument	& copy		11236833	0					
ANR	11237423	UnaryOperationExpression	& copy		11236833	0					
ANR	11237424	UnaryOperator	&		11236833	0					
ANR	11237425	Identifier	copy		11236833	1					
ANR	11237426	Argument	& strm		11236833	1					
ANR	11237427	UnaryOperationExpression	& strm		11236833	0					
ANR	11237428	UnaryOperator	&		11236833	0					
ANR	11237429	Identifier	strm		11236833	1					
ANR	11237430	ExpressionStatement	assert ( ret == Z_MEM_ERROR )	438:48:16272:16298	11236833	53	True				
ANR	11237431	CallExpression	assert ( ret == Z_MEM_ERROR )		11236833	0					
ANR	11237432	Callee	assert		11236833	0					
ANR	11237433	Identifier	assert		11236833	0					
ANR	11237434	ArgumentList	ret == Z_MEM_ERROR		11236833	1					
ANR	11237435	Argument	ret == Z_MEM_ERROR		11236833	0					
ANR	11237436	EqualityExpression	ret == Z_MEM_ERROR		11236833	0		==			
ANR	11237437	Identifier	ret		11236833	0					
ANR	11237438	Identifier	Z_MEM_ERROR		11236833	1					
ANR	11237439	ExpressionStatement	"mem_limit ( & strm , 0 )"	439:4:16304:16323	11236833	54	True				
ANR	11237440	CallExpression	"mem_limit ( & strm , 0 )"		11236833	0					
ANR	11237441	Callee	mem_limit		11236833	0					
ANR	11237442	Identifier	mem_limit		11236833	0					
ANR	11237443	ArgumentList	& strm		11236833	1					
ANR	11237444	Argument	& strm		11236833	0					
ANR	11237445	UnaryOperationExpression	& strm		11236833	0					
ANR	11237446	UnaryOperator	&		11236833	0					
ANR	11237447	Identifier	strm		11236833	1					
ANR	11237448	Argument	0		11236833	1					
ANR	11237449	PrimaryExpression	0		11236833	0					
ANR	11237450	ExpressionStatement	"ret = inflateUndermine ( & strm , 1 )"	440:4:16329:16361	11236833	55	True				
ANR	11237451	AssignmentExpression	"ret = inflateUndermine ( & strm , 1 )"		11236833	0		=			
ANR	11237452	Identifier	ret		11236833	0					
ANR	11237453	CallExpression	"inflateUndermine ( & strm , 1 )"		11236833	1					
ANR	11237454	Callee	inflateUndermine		11236833	0					
ANR	11237455	Identifier	inflateUndermine		11236833	0					
ANR	11237456	ArgumentList	& strm		11236833	1					
ANR	11237457	Argument	& strm		11236833	0					
ANR	11237458	UnaryOperationExpression	& strm		11236833	0					
ANR	11237459	UnaryOperator	&		11236833	0					
ANR	11237460	Identifier	strm		11236833	1					
ANR	11237461	Argument	1		11236833	1					
ANR	11237462	PrimaryExpression	1		11236833	0					
ANR	11237463	ExpressionStatement	assert ( ret == Z_DATA_ERROR )	440:48:16373:16400	11236833	56	True				
ANR	11237464	CallExpression	assert ( ret == Z_DATA_ERROR )		11236833	0					
ANR	11237465	Callee	assert		11236833	0					
ANR	11237466	Identifier	assert		11236833	0					
ANR	11237467	ArgumentList	ret == Z_DATA_ERROR		11236833	1					
ANR	11237468	Argument	ret == Z_DATA_ERROR		11236833	0					
ANR	11237469	EqualityExpression	ret == Z_DATA_ERROR		11236833	0		==			
ANR	11237470	Identifier	ret		11236833	0					
ANR	11237471	Identifier	Z_DATA_ERROR		11236833	1					
ANR	11237472	ExpressionStatement	( void ) inflateMark ( & strm )	441:4:16406:16430	11236833	57	True				
ANR	11237473	CastExpression	( void ) inflateMark ( & strm )		11236833	0					
ANR	11237474	CastTarget	void		11236833	0					
ANR	11237475	CallExpression	inflateMark ( & strm )		11236833	1					
ANR	11237476	Callee	inflateMark		11236833	0					
ANR	11237477	Identifier	inflateMark		11236833	0					
ANR	11237478	ArgumentList	& strm		11236833	1					
ANR	11237479	Argument	& strm		11236833	0					
ANR	11237480	UnaryOperationExpression	& strm		11236833	0					
ANR	11237481	UnaryOperator	&		11236833	0					
ANR	11237482	Identifier	strm		11236833	1					
ANR	11237483	ExpressionStatement	ret = inflateEnd ( & strm )	442:4:16436:16459	11236833	58	True				
ANR	11237484	AssignmentExpression	ret = inflateEnd ( & strm )		11236833	0		=			
ANR	11237485	Identifier	ret		11236833	0					
ANR	11237486	CallExpression	inflateEnd ( & strm )		11236833	1					
ANR	11237487	Callee	inflateEnd		11236833	0					
ANR	11237488	Identifier	inflateEnd		11236833	0					
ANR	11237489	ArgumentList	& strm		11236833	1					
ANR	11237490	Argument	& strm		11236833	0					
ANR	11237491	UnaryOperationExpression	& strm		11236833	0					
ANR	11237492	UnaryOperator	&		11236833	0					
ANR	11237493	Identifier	strm		11236833	1					
ANR	11237494	ExpressionStatement	assert ( ret == Z_OK )	442:48:16480:16499	11236833	59	True				
ANR	11237495	CallExpression	assert ( ret == Z_OK )		11236833	0					
ANR	11237496	Callee	assert		11236833	0					
ANR	11237497	Identifier	assert		11236833	0					
ANR	11237498	ArgumentList	ret == Z_OK		11236833	1					
ANR	11237499	Argument	ret == Z_OK		11236833	0					
ANR	11237500	EqualityExpression	ret == Z_OK		11236833	0		==			
ANR	11237501	Identifier	ret		11236833	0					
ANR	11237502	Identifier	Z_OK		11236833	1					
ANR	11237503	ExpressionStatement	"mem_done ( & strm , ""miscellaneous, force memory errors"" )"	443:4:16505:16558	11236833	60	True				
ANR	11237504	CallExpression	"mem_done ( & strm , ""miscellaneous, force memory errors"" )"		11236833	0					
ANR	11237505	Callee	mem_done		11236833	0					
ANR	11237506	Identifier	mem_done		11236833	0					
ANR	11237507	ArgumentList	& strm		11236833	1					
ANR	11237508	Argument	& strm		11236833	0					
ANR	11237509	UnaryOperationExpression	& strm		11236833	0					
ANR	11237510	UnaryOperator	&		11236833	0					
ANR	11237511	Identifier	strm		11236833	1					
ANR	11237512	Argument	"""miscellaneous, force memory errors"""		11236833	1					
ANR	11237513	PrimaryExpression	"""miscellaneous, force memory errors"""		11236833	0					
ANR	11237514	ReturnType	local void		11236833	1					
ANR	11237515	Identifier	cover_wrap		11236833	2					
ANR	11237516	ParameterList			11236833	3					
ANR	11237517	CFGEntryNode	ENTRY		11236833		True				
ANR	11237518	CFGExitNode	EXIT		11236833		True				
ANR	11237519	Symbol	& ret		11236833						
ANR	11237520	Symbol	Z_STREAM_ERROR		11236833						
ANR	11237521	Symbol	Z_DATA_ERROR		11236833						
ANR	11237522	Symbol	inflateUndermine		11236833						
ANR	11237523	Symbol	Z_MEM_ERROR		11236833						
ANR	11237524	Symbol	inflateSync		11236833						
ANR	11237525	Symbol	& strm		11236833						
ANR	11237526	Symbol	Z_OK		11236833						
ANR	11237527	Symbol	strm . next_in		11236833						
ANR	11237528	Symbol	Z_NO_FLUSH		11236833						
ANR	11237529	Symbol	Z_STREAM_END		11236833						
ANR	11237530	Symbol	dict		11236833						
ANR	11237531	Symbol	copy		11236833						
ANR	11237532	Symbol	ret		11236833						
ANR	11237533	Symbol	inflateCopy		11236833						
ANR	11237534	Symbol	inflateInit2		11236833						
ANR	11237535	Symbol	inflateEnd		11236833						
ANR	11237536	Symbol	inflatePrime		11236833						
ANR	11237537	Symbol	& copy		11236833						
ANR	11237538	Symbol	strm		11236833						
ANR	11237539	Symbol	stderr		11236833						
ANR	11237540	Symbol	inflateSetDictionary		11236833						
ANR	11237541	Symbol	inflate		11236833						
ANR	11237542	Symbol	strm . avail_out		11236833						
ANR	11237543	Symbol	strm . next_out		11236833						
ANR	11237544	Symbol	Z_NEED_DICT		11236833						
ANR	11237545	Symbol	Z_NULL		11236833						
ANR	11237546	Symbol	strm . avail_in		11236833						
ANR	11237547	Function	pull	447:6:16620:17114							
ANR	11237548	FunctionDef	"pull (void * desc , unsigned char * * buf)"		11237547	0					
ANR	11237549	CompoundStatement		448:0:16667:17114	11237547	0					
ANR	11237550	Statement	static	449:4:16673:16678	11237547	0	True				
ANR	11237551	IdentifierDeclStatement	unsigned int next = 0 ;	449:11:16680:16701	11237547	1	True				
ANR	11237552	IdentifierDecl	next = 0		11237547	0					
ANR	11237553	IdentifierDeclType	unsigned int		11237547	0					
ANR	11237554	Identifier	next		11237547	1					
ANR	11237555	AssignmentExpression	next = 0		11237547	2		=			
ANR	11237556	Identifier	next		11237547	0					
ANR	11237557	PrimaryExpression	0		11237547	1					
ANR	11237558	Statement	static	450:4:16707:16712	11237547	2	True				
ANR	11237559	IdentifierDeclStatement	"unsigned char dat [ ] = { 0x63 , 0 , 2 , 0 } ;"	450:11:16714:16751	11237547	3	True				
ANR	11237560	IdentifierDecl	"dat [ ] = { 0x63 , 0 , 2 , 0 }"		11237547	0					
ANR	11237561	IdentifierDeclType	unsigned char [ ]		11237547	0					
ANR	11237562	Identifier	dat		11237547	1					
ANR	11237563	AssignmentExpression	"dat [ ] = { 0x63 , 0 , 2 , 0 }"		11237547	2		=			
ANR	11237564	Identifier	dat		11237547	0					
ANR	11237565	InitializerList	0x63		11237547	1					
ANR	11237566	PrimaryExpression	0x63		11237547	0					
ANR	11237567	PrimaryExpression	0		11237547	1					
ANR	11237568	PrimaryExpression	2		11237547	2					
ANR	11237569	PrimaryExpression	0		11237547	3					
ANR	11237570	IdentifierDeclStatement	struct inflate_state * state ;	451:4:16757:16784	11237547	4	True				
ANR	11237571	IdentifierDecl	* state		11237547	0					
ANR	11237572	IdentifierDeclType	struct inflate_state *		11237547	0					
ANR	11237573	Identifier	state		11237547	1					
ANR	11237574	IfStatement	if ( desc == Z_NULL )		11237547	5					
ANR	11237575	Condition	desc == Z_NULL	453:8:16795:16808	11237547	0	True				
ANR	11237576	EqualityExpression	desc == Z_NULL		11237547	0		==			
ANR	11237577	Identifier	desc		11237547	0					
ANR	11237578	Identifier	Z_NULL		11237547	1					
ANR	11237579	CompoundStatement		6:24:143:143	11237547	1					
ANR	11237580	ExpressionStatement	next = 0	454:8:16821:16829	11237547	0	True				
ANR	11237581	AssignmentExpression	next = 0		11237547	0		=			
ANR	11237582	Identifier	next		11237547	0					
ANR	11237583	PrimaryExpression	0		11237547	1					
ANR	11237584	ReturnStatement	return 0 ;	455:8:16839:16847	11237547	1	True				
ANR	11237585	PrimaryExpression	0		11237547	0					
ANR	11237586	ExpressionStatement	state = ( void * ) ( ( z_stream * ) desc ) -> state	457:4:16906:16947	11237547	6	True				
ANR	11237587	AssignmentExpression	state = ( void * ) ( ( z_stream * ) desc ) -> state		11237547	0		=			
ANR	11237588	Identifier	state		11237547	0					
ANR	11237589	CastExpression	( void * ) ( ( z_stream * ) desc ) -> state		11237547	1					
ANR	11237590	CastTarget	void *		11237547	0					
ANR	11237591	PtrMemberAccess	( ( z_stream * ) desc ) -> state		11237547	1					
ANR	11237592	CastExpression	( z_stream * ) desc		11237547	0					
ANR	11237593	CastTarget	z_stream *		11237547	0					
ANR	11237594	Identifier	desc		11237547	1					
ANR	11237595	Identifier	state		11237547	1					
ANR	11237596	IfStatement	if ( state != Z_NULL )		11237547	7					
ANR	11237597	Condition	state != Z_NULL	458:8:16957:16971	11237547	0	True				
ANR	11237598	EqualityExpression	state != Z_NULL		11237547	0		!=			
ANR	11237599	Identifier	state		11237547	0					
ANR	11237600	Identifier	Z_NULL		11237547	1					
ANR	11237601	ExpressionStatement	state -> mode = SYNC	459:8:16982:17000	11237547	1	True				
ANR	11237602	AssignmentExpression	state -> mode = SYNC		11237547	0		=			
ANR	11237603	PtrMemberAccess	state -> mode		11237547	0					
ANR	11237604	Identifier	state		11237547	0					
ANR	11237605	Identifier	mode		11237547	1					
ANR	11237606	Identifier	SYNC		11237547	1					
ANR	11237607	ReturnStatement	"return next < sizeof ( dat ) ? ( * buf = dat + next ++ , 1 ) : 0 ;"	460:4:17056:17112	11237547	8	True				
ANR	11237608	ConditionalExpression	"next < sizeof ( dat ) ? ( * buf = dat + next ++ , 1 ) : 0"		11237547	0					
ANR	11237609	Condition	next < sizeof ( dat )		11237547	0					
ANR	11237610	RelationalExpression	next < sizeof ( dat )		11237547	0		<			
ANR	11237611	Identifier	next		11237547	0					
ANR	11237612	SizeofExpression	sizeof ( dat )		11237547	1					
ANR	11237613	Sizeof	sizeof		11237547	0					
ANR	11237614	SizeofOperand	dat		11237547	1					
ANR	11237615	Expression	"* buf = dat + next ++ , 1"		11237547	1					
ANR	11237616	AssignmentExpression	* buf = dat + next ++		11237547	0		=			
ANR	11237617	UnaryOperationExpression	* buf		11237547	0					
ANR	11237618	UnaryOperator	*		11237547	0					
ANR	11237619	Identifier	buf		11237547	1					
ANR	11237620	AdditiveExpression	dat + next ++		11237547	1		+			
ANR	11237621	Identifier	dat		11237547	0					
ANR	11237622	PostIncDecOperationExpression	next ++		11237547	1					
ANR	11237623	Identifier	next		11237547	0					
ANR	11237624	IncDec	++		11237547	1					
ANR	11237625	PrimaryExpression	1		11237547	1					
ANR	11237626	PrimaryExpression	0		11237547	2					
ANR	11237627	ReturnType	unsigned		11237547	1					
ANR	11237628	Identifier	pull		11237547	2					
ANR	11237629	ParameterList	"void * desc , unsigned char * * buf"		11237547	3					
ANR	11237630	Parameter	void * desc	447:20:16634:16643	11237547	0	True				
ANR	11237631	ParameterType	void *		11237547	0					
ANR	11237632	Identifier	desc		11237547	1					
ANR	11237633	Parameter	unsigned char * * buf	447:32:16646:16664	11237547	1	True				
ANR	11237634	ParameterType	unsigned char * *		11237547	0					
ANR	11237635	Identifier	buf		11237547	1					
ANR	11237636	CFGEntryNode	ENTRY		11237547		True				
ANR	11237637	CFGExitNode	EXIT		11237547		True				
ANR	11237638	Symbol	next		11237547						
ANR	11237639	Symbol	* state		11237547						
ANR	11237640	Symbol	buf		11237547						
ANR	11237641	Symbol	* buf		11237547						
ANR	11237642	Symbol	( ( z_stream * ) desc ) -> state		11237547						
ANR	11237643	Symbol	dat		11237547						
ANR	11237644	Symbol	state -> mode		11237547						
ANR	11237645	Symbol	* desc		11237547						
ANR	11237646	Symbol	state		11237547						
ANR	11237647	Symbol	SYNC		11237547						
ANR	11237648	Symbol	desc		11237547						
ANR	11237649	Symbol	Z_NULL		11237547						
ANR	11237650	Function	push	463:0:17117:17263							
ANR	11237651	FunctionDef	"push (void * desc , unsigned char * buf , unsigned len)"		11237650	0					
ANR	11237652	CompoundStatement		464:0:17178:17263	11237650	0					
ANR	11237653	ExpressionStatement	buf += len	465:4:17184:17194	11237650	0	True				
ANR	11237654	AssignmentExpression	buf += len		11237650	0		+=			
ANR	11237655	Identifier	buf		11237650	0					
ANR	11237656	Identifier	len		11237650	1					
ANR	11237657	ReturnStatement	return desc != Z_NULL ;	466:4:17200:17221	11237650	1	True				
ANR	11237658	EqualityExpression	desc != Z_NULL		11237650	0		!=			
ANR	11237659	Identifier	desc		11237650	0					
ANR	11237660	Identifier	Z_NULL		11237650	1					
ANR	11237661	ReturnType	local int		11237650	1					
ANR	11237662	Identifier	push		11237650	2					
ANR	11237663	ParameterList	"void * desc , unsigned char * buf , unsigned len"		11237650	3					
ANR	11237664	Parameter	void * desc	463:15:17132:17141	11237650	0	True				
ANR	11237665	ParameterType	void *		11237650	0					
ANR	11237666	Identifier	desc		11237650	1					
ANR	11237667	Parameter	unsigned char * buf	463:27:17144:17161	11237650	1	True				
ANR	11237668	ParameterType	unsigned char *		11237650	0					
ANR	11237669	Identifier	buf		11237650	1					
ANR	11237670	Parameter	unsigned len	463:47:17164:17175	11237650	2	True				
ANR	11237671	ParameterType	unsigned		11237650	0					
ANR	11237672	Identifier	len		11237650	1					
ANR	11237673	CFGEntryNode	ENTRY		11237650		True				
ANR	11237674	CFGExitNode	EXIT		11237650		True				
ANR	11237675	Symbol	buf		11237650						
ANR	11237676	Symbol	len		11237650						
ANR	11237677	Symbol	desc		11237650						
ANR	11237678	Symbol	Z_NULL		11237650						
ANR	11237679	Function	cover_back	470:0:17340:18931							
ANR	11237680	FunctionDef	cover_back ()		11237679	0					
ANR	11237681	CompoundStatement		471:0:17368:18931	11237679	0					
ANR	11237682	IdentifierDeclStatement	int ret ;	472:4:17374:17381	11237679	0	True				
ANR	11237683	IdentifierDecl	ret		11237679	0					
ANR	11237684	IdentifierDeclType	int		11237679	0					
ANR	11237685	Identifier	ret		11237679	1					
ANR	11237686	IdentifierDeclStatement	z_stream strm ;	473:4:17387:17400	11237679	1	True				
ANR	11237687	IdentifierDecl	strm		11237679	0					
ANR	11237688	IdentifierDeclType	z_stream		11237679	0					
ANR	11237689	Identifier	strm		11237679	1					
ANR	11237690	IdentifierDeclStatement	unsigned char win [ 32768 ] ;	474:4:17406:17430	11237679	2	True				
ANR	11237691	IdentifierDecl	win [ 32768 ]		11237679	0					
ANR	11237692	IdentifierDeclType	unsigned char [ 32768 ]		11237679	0					
ANR	11237693	Identifier	win		11237679	1					
ANR	11237694	PrimaryExpression	32768		11237679	2					
ANR	11237695	ExpressionStatement	"ret = inflateBackInit_ ( Z_NULL , 0 , win , 0 , 0 )"	476:4:17437:17481	11237679	3	True				
ANR	11237696	AssignmentExpression	"ret = inflateBackInit_ ( Z_NULL , 0 , win , 0 , 0 )"		11237679	0		=			
ANR	11237697	Identifier	ret		11237679	0					
ANR	11237698	CallExpression	"inflateBackInit_ ( Z_NULL , 0 , win , 0 , 0 )"		11237679	1					
ANR	11237699	Callee	inflateBackInit_		11237679	0					
ANR	11237700	Identifier	inflateBackInit_		11237679	0					
ANR	11237701	ArgumentList	Z_NULL		11237679	1					
ANR	11237702	Argument	Z_NULL		11237679	0					
ANR	11237703	Identifier	Z_NULL		11237679	0					
ANR	11237704	Argument	0		11237679	1					
ANR	11237705	PrimaryExpression	0		11237679	0					
ANR	11237706	Argument	win		11237679	2					
ANR	11237707	Identifier	win		11237679	0					
ANR	11237708	Argument	0		11237679	3					
ANR	11237709	PrimaryExpression	0		11237679	0					
ANR	11237710	Argument	0		11237679	4					
ANR	11237711	PrimaryExpression	0		11237679	0					
ANR	11237712	ExpressionStatement	assert ( ret == Z_VERSION_ERROR )	477:48:17531:17561	11237679	4	True				
ANR	11237713	CallExpression	assert ( ret == Z_VERSION_ERROR )		11237679	0					
ANR	11237714	Callee	assert		11237679	0					
ANR	11237715	Identifier	assert		11237679	0					
ANR	11237716	ArgumentList	ret == Z_VERSION_ERROR		11237679	1					
ANR	11237717	Argument	ret == Z_VERSION_ERROR		11237679	0					
ANR	11237718	EqualityExpression	ret == Z_VERSION_ERROR		11237679	0		==			
ANR	11237719	Identifier	ret		11237679	0					
ANR	11237720	Identifier	Z_VERSION_ERROR		11237679	1					
ANR	11237721	ExpressionStatement	"ret = inflateBackInit ( Z_NULL , 0 , win )"	478:4:17567:17604	11237679	5	True				
ANR	11237722	AssignmentExpression	"ret = inflateBackInit ( Z_NULL , 0 , win )"		11237679	0		=			
ANR	11237723	Identifier	ret		11237679	0					
ANR	11237724	CallExpression	"inflateBackInit ( Z_NULL , 0 , win )"		11237679	1					
ANR	11237725	Callee	inflateBackInit		11237679	0					
ANR	11237726	Identifier	inflateBackInit		11237679	0					
ANR	11237727	ArgumentList	Z_NULL		11237679	1					
ANR	11237728	Argument	Z_NULL		11237679	0					
ANR	11237729	Identifier	Z_NULL		11237679	0					
ANR	11237730	Argument	0		11237679	1					
ANR	11237731	PrimaryExpression	0		11237679	0					
ANR	11237732	Argument	win		11237679	2					
ANR	11237733	Identifier	win		11237679	0					
ANR	11237734	ExpressionStatement	assert ( ret == Z_STREAM_ERROR )	478:48:17611:17640	11237679	6	True				
ANR	11237735	CallExpression	assert ( ret == Z_STREAM_ERROR )		11237679	0					
ANR	11237736	Callee	assert		11237679	0					
ANR	11237737	Identifier	assert		11237679	0					
ANR	11237738	ArgumentList	ret == Z_STREAM_ERROR		11237679	1					
ANR	11237739	Argument	ret == Z_STREAM_ERROR		11237679	0					
ANR	11237740	EqualityExpression	ret == Z_STREAM_ERROR		11237679	0		==			
ANR	11237741	Identifier	ret		11237679	0					
ANR	11237742	Identifier	Z_STREAM_ERROR		11237679	1					
ANR	11237743	ExpressionStatement	"ret = inflateBack ( Z_NULL , Z_NULL , Z_NULL , Z_NULL , Z_NULL )"	479:4:17646:17703	11237679	7	True				
ANR	11237744	AssignmentExpression	"ret = inflateBack ( Z_NULL , Z_NULL , Z_NULL , Z_NULL , Z_NULL )"		11237679	0		=			
ANR	11237745	Identifier	ret		11237679	0					
ANR	11237746	CallExpression	"inflateBack ( Z_NULL , Z_NULL , Z_NULL , Z_NULL , Z_NULL )"		11237679	1					
ANR	11237747	Callee	inflateBack		11237679	0					
ANR	11237748	Identifier	inflateBack		11237679	0					
ANR	11237749	ArgumentList	Z_NULL		11237679	1					
ANR	11237750	Argument	Z_NULL		11237679	0					
ANR	11237751	Identifier	Z_NULL		11237679	0					
ANR	11237752	Argument	Z_NULL		11237679	1					
ANR	11237753	Identifier	Z_NULL		11237679	0					
ANR	11237754	Argument	Z_NULL		11237679	2					
ANR	11237755	Identifier	Z_NULL		11237679	0					
ANR	11237756	Argument	Z_NULL		11237679	3					
ANR	11237757	Identifier	Z_NULL		11237679	0					
ANR	11237758	Argument	Z_NULL		11237679	4					
ANR	11237759	Identifier	Z_NULL		11237679	0					
ANR	11237760	ExpressionStatement	assert ( ret == Z_STREAM_ERROR )	480:48:17753:17782	11237679	8	True				
ANR	11237761	CallExpression	assert ( ret == Z_STREAM_ERROR )		11237679	0					
ANR	11237762	Callee	assert		11237679	0					
ANR	11237763	Identifier	assert		11237679	0					
ANR	11237764	ArgumentList	ret == Z_STREAM_ERROR		11237679	1					
ANR	11237765	Argument	ret == Z_STREAM_ERROR		11237679	0					
ANR	11237766	EqualityExpression	ret == Z_STREAM_ERROR		11237679	0		==			
ANR	11237767	Identifier	ret		11237679	0					
ANR	11237768	Identifier	Z_STREAM_ERROR		11237679	1					
ANR	11237769	ExpressionStatement	ret = inflateBackEnd ( Z_NULL )	481:4:17788:17816	11237679	9	True				
ANR	11237770	AssignmentExpression	ret = inflateBackEnd ( Z_NULL )		11237679	0		=			
ANR	11237771	Identifier	ret		11237679	0					
ANR	11237772	CallExpression	inflateBackEnd ( Z_NULL )		11237679	1					
ANR	11237773	Callee	inflateBackEnd		11237679	0					
ANR	11237774	Identifier	inflateBackEnd		11237679	0					
ANR	11237775	ArgumentList	Z_NULL		11237679	1					
ANR	11237776	Argument	Z_NULL		11237679	0					
ANR	11237777	Identifier	Z_NULL		11237679	0					
ANR	11237778	ExpressionStatement	assert ( ret == Z_STREAM_ERROR )	481:48:17832:17861	11237679	10	True				
ANR	11237779	CallExpression	assert ( ret == Z_STREAM_ERROR )		11237679	0					
ANR	11237780	Callee	assert		11237679	0					
ANR	11237781	Identifier	assert		11237679	0					
ANR	11237782	ArgumentList	ret == Z_STREAM_ERROR		11237679	1					
ANR	11237783	Argument	ret == Z_STREAM_ERROR		11237679	0					
ANR	11237784	EqualityExpression	ret == Z_STREAM_ERROR		11237679	0		==			
ANR	11237785	Identifier	ret		11237679	0					
ANR	11237786	Identifier	Z_STREAM_ERROR		11237679	1					
ANR	11237787	ExpressionStatement	"fputs ( ""inflateBack bad parameters\\n"" , stderr )"	482:4:17867:17912	11237679	11	True				
ANR	11237788	CallExpression	"fputs ( ""inflateBack bad parameters\\n"" , stderr )"		11237679	0					
ANR	11237789	Callee	fputs		11237679	0					
ANR	11237790	Identifier	fputs		11237679	0					
ANR	11237791	ArgumentList	"""inflateBack bad parameters\\n"""		11237679	1					
ANR	11237792	Argument	"""inflateBack bad parameters\\n"""		11237679	0					
ANR	11237793	PrimaryExpression	"""inflateBack bad parameters\\n"""		11237679	0					
ANR	11237794	Argument	stderr		11237679	1					
ANR	11237795	Identifier	stderr		11237679	0					
ANR	11237796	ExpressionStatement	mem_setup ( & strm )	484:4:17919:17935	11237679	12	True				
ANR	11237797	CallExpression	mem_setup ( & strm )		11237679	0					
ANR	11237798	Callee	mem_setup		11237679	0					
ANR	11237799	Identifier	mem_setup		11237679	0					
ANR	11237800	ArgumentList	& strm		11237679	1					
ANR	11237801	Argument	& strm		11237679	0					
ANR	11237802	UnaryOperationExpression	& strm		11237679	0					
ANR	11237803	UnaryOperator	&		11237679	0					
ANR	11237804	Identifier	strm		11237679	1					
ANR	11237805	ExpressionStatement	"ret = inflateBackInit ( & strm , 15 , win )"	485:4:17941:17978	11237679	13	True				
ANR	11237806	AssignmentExpression	"ret = inflateBackInit ( & strm , 15 , win )"		11237679	0		=			
ANR	11237807	Identifier	ret		11237679	0					
ANR	11237808	CallExpression	"inflateBackInit ( & strm , 15 , win )"		11237679	1					
ANR	11237809	Callee	inflateBackInit		11237679	0					
ANR	11237810	Identifier	inflateBackInit		11237679	0					
ANR	11237811	ArgumentList	& strm		11237679	1					
ANR	11237812	Argument	& strm		11237679	0					
ANR	11237813	UnaryOperationExpression	& strm		11237679	0					
ANR	11237814	UnaryOperator	&		11237679	0					
ANR	11237815	Identifier	strm		11237679	1					
ANR	11237816	Argument	15		11237679	1					
ANR	11237817	PrimaryExpression	15		11237679	0					
ANR	11237818	Argument	win		11237679	2					
ANR	11237819	Identifier	win		11237679	0					
ANR	11237820	ExpressionStatement	assert ( ret == Z_OK )	485:48:17985:18004	11237679	14	True				
ANR	11237821	CallExpression	assert ( ret == Z_OK )		11237679	0					
ANR	11237822	Callee	assert		11237679	0					
ANR	11237823	Identifier	assert		11237679	0					
ANR	11237824	ArgumentList	ret == Z_OK		11237679	1					
ANR	11237825	Argument	ret == Z_OK		11237679	0					
ANR	11237826	EqualityExpression	ret == Z_OK		11237679	0		==			
ANR	11237827	Identifier	ret		11237679	0					
ANR	11237828	Identifier	Z_OK		11237679	1					
ANR	11237829	ExpressionStatement	strm . avail_in = 2	486:4:18010:18027	11237679	15	True				
ANR	11237830	AssignmentExpression	strm . avail_in = 2		11237679	0		=			
ANR	11237831	MemberAccess	strm . avail_in		11237679	0					
ANR	11237832	Identifier	strm		11237679	0					
ANR	11237833	Identifier	avail_in		11237679	1					
ANR	11237834	PrimaryExpression	2		11237679	1					
ANR	11237835	ExpressionStatement	"strm . next_in = ( void * ) ""\\x03"""	487:4:18033:18062	11237679	16	True				
ANR	11237836	AssignmentExpression	"strm . next_in = ( void * ) ""\\x03"""		11237679	0		=			
ANR	11237837	MemberAccess	strm . next_in		11237679	0					
ANR	11237838	Identifier	strm		11237679	0					
ANR	11237839	Identifier	next_in		11237679	1					
ANR	11237840	CastExpression	"( void * ) ""\\x03"""		11237679	1					
ANR	11237841	CastTarget	void *		11237679	0					
ANR	11237842	PrimaryExpression	"""\\x03"""		11237679	1					
ANR	11237843	ExpressionStatement	"ret = inflateBack ( & strm , pull , Z_NULL , push , Z_NULL )"	488:4:18068:18120	11237679	17	True				
ANR	11237844	AssignmentExpression	"ret = inflateBack ( & strm , pull , Z_NULL , push , Z_NULL )"		11237679	0		=			
ANR	11237845	Identifier	ret		11237679	0					
ANR	11237846	CallExpression	"inflateBack ( & strm , pull , Z_NULL , push , Z_NULL )"		11237679	1					
ANR	11237847	Callee	inflateBack		11237679	0					
ANR	11237848	Identifier	inflateBack		11237679	0					
ANR	11237849	ArgumentList	& strm		11237679	1					
ANR	11237850	Argument	& strm		11237679	0					
ANR	11237851	UnaryOperationExpression	& strm		11237679	0					
ANR	11237852	UnaryOperator	&		11237679	0					
ANR	11237853	Identifier	strm		11237679	1					
ANR	11237854	Argument	pull		11237679	1					
ANR	11237855	Identifier	pull		11237679	0					
ANR	11237856	Argument	Z_NULL		11237679	2					
ANR	11237857	Identifier	Z_NULL		11237679	0					
ANR	11237858	Argument	push		11237679	3					
ANR	11237859	Identifier	push		11237679	0					
ANR	11237860	Argument	Z_NULL		11237679	4					
ANR	11237861	Identifier	Z_NULL		11237679	0					
ANR	11237862	ExpressionStatement	assert ( ret == Z_STREAM_END )	489:48:18170:18197	11237679	18	True				
ANR	11237863	CallExpression	assert ( ret == Z_STREAM_END )		11237679	0					
ANR	11237864	Callee	assert		11237679	0					
ANR	11237865	Identifier	assert		11237679	0					
ANR	11237866	ArgumentList	ret == Z_STREAM_END		11237679	1					
ANR	11237867	Argument	ret == Z_STREAM_END		11237679	0					
ANR	11237868	EqualityExpression	ret == Z_STREAM_END		11237679	0		==			
ANR	11237869	Identifier	ret		11237679	0					
ANR	11237870	Identifier	Z_STREAM_END		11237679	1					
ANR	11237871	ExpressionStatement	strm . avail_in = 3	491:4:18236:18253	11237679	19	True				
ANR	11237872	AssignmentExpression	strm . avail_in = 3		11237679	0		=			
ANR	11237873	MemberAccess	strm . avail_in		11237679	0					
ANR	11237874	Identifier	strm		11237679	0					
ANR	11237875	Identifier	avail_in		11237679	1					
ANR	11237876	PrimaryExpression	3		11237679	1					
ANR	11237877	ExpressionStatement	"strm . next_in = ( void * ) ""\\x63\\x00"""	492:4:18259:18292	11237679	20	True				
ANR	11237878	AssignmentExpression	"strm . next_in = ( void * ) ""\\x63\\x00"""		11237679	0		=			
ANR	11237879	MemberAccess	strm . next_in		11237679	0					
ANR	11237880	Identifier	strm		11237679	0					
ANR	11237881	Identifier	next_in		11237679	1					
ANR	11237882	CastExpression	"( void * ) ""\\x63\\x00"""		11237679	1					
ANR	11237883	CastTarget	void *		11237679	0					
ANR	11237884	PrimaryExpression	"""\\x63\\x00"""		11237679	1					
ANR	11237885	ExpressionStatement	"ret = inflateBack ( & strm , pull , Z_NULL , push , & strm )"	493:4:18298:18349	11237679	21	True				
ANR	11237886	AssignmentExpression	"ret = inflateBack ( & strm , pull , Z_NULL , push , & strm )"		11237679	0		=			
ANR	11237887	Identifier	ret		11237679	0					
ANR	11237888	CallExpression	"inflateBack ( & strm , pull , Z_NULL , push , & strm )"		11237679	1					
ANR	11237889	Callee	inflateBack		11237679	0					
ANR	11237890	Identifier	inflateBack		11237679	0					
ANR	11237891	ArgumentList	& strm		11237679	1					
ANR	11237892	Argument	& strm		11237679	0					
ANR	11237893	UnaryOperationExpression	& strm		11237679	0					
ANR	11237894	UnaryOperator	&		11237679	0					
ANR	11237895	Identifier	strm		11237679	1					
ANR	11237896	Argument	pull		11237679	1					
ANR	11237897	Identifier	pull		11237679	0					
ANR	11237898	Argument	Z_NULL		11237679	2					
ANR	11237899	Identifier	Z_NULL		11237679	0					
ANR	11237900	Argument	push		11237679	3					
ANR	11237901	Identifier	push		11237679	0					
ANR	11237902	Argument	& strm		11237679	4					
ANR	11237903	UnaryOperationExpression	& strm		11237679	0					
ANR	11237904	UnaryOperator	&		11237679	0					
ANR	11237905	Identifier	strm		11237679	1					
ANR	11237906	ExpressionStatement	assert ( ret == Z_BUF_ERROR )	494:48:18399:18425	11237679	22	True				
ANR	11237907	CallExpression	assert ( ret == Z_BUF_ERROR )		11237679	0					
ANR	11237908	Callee	assert		11237679	0					
ANR	11237909	Identifier	assert		11237679	0					
ANR	11237910	ArgumentList	ret == Z_BUF_ERROR		11237679	1					
ANR	11237911	Argument	ret == Z_BUF_ERROR		11237679	0					
ANR	11237912	EqualityExpression	ret == Z_BUF_ERROR		11237679	0		==			
ANR	11237913	Identifier	ret		11237679	0					
ANR	11237914	Identifier	Z_BUF_ERROR		11237679	1					
ANR	11237915	ExpressionStatement	"ret = inflateBack ( & strm , pull , & strm , push , Z_NULL )"	496:4:18484:18535	11237679	23	True				
ANR	11237916	AssignmentExpression	"ret = inflateBack ( & strm , pull , & strm , push , Z_NULL )"		11237679	0		=			
ANR	11237917	Identifier	ret		11237679	0					
ANR	11237918	CallExpression	"inflateBack ( & strm , pull , & strm , push , Z_NULL )"		11237679	1					
ANR	11237919	Callee	inflateBack		11237679	0					
ANR	11237920	Identifier	inflateBack		11237679	0					
ANR	11237921	ArgumentList	& strm		11237679	1					
ANR	11237922	Argument	& strm		11237679	0					
ANR	11237923	UnaryOperationExpression	& strm		11237679	0					
ANR	11237924	UnaryOperator	&		11237679	0					
ANR	11237925	Identifier	strm		11237679	1					
ANR	11237926	Argument	pull		11237679	1					
ANR	11237927	Identifier	pull		11237679	0					
ANR	11237928	Argument	& strm		11237679	2					
ANR	11237929	UnaryOperationExpression	& strm		11237679	0					
ANR	11237930	UnaryOperator	&		11237679	0					
ANR	11237931	Identifier	strm		11237679	1					
ANR	11237932	Argument	push		11237679	3					
ANR	11237933	Identifier	push		11237679	0					
ANR	11237934	Argument	Z_NULL		11237679	4					
ANR	11237935	Identifier	Z_NULL		11237679	0					
ANR	11237936	ExpressionStatement	assert ( ret == Z_STREAM_ERROR )	497:48:18585:18614	11237679	24	True				
ANR	11237937	CallExpression	assert ( ret == Z_STREAM_ERROR )		11237679	0					
ANR	11237938	Callee	assert		11237679	0					
ANR	11237939	Identifier	assert		11237679	0					
ANR	11237940	ArgumentList	ret == Z_STREAM_ERROR		11237679	1					
ANR	11237941	Argument	ret == Z_STREAM_ERROR		11237679	0					
ANR	11237942	EqualityExpression	ret == Z_STREAM_ERROR		11237679	0		==			
ANR	11237943	Identifier	ret		11237679	0					
ANR	11237944	Identifier	Z_STREAM_ERROR		11237679	1					
ANR	11237945	ExpressionStatement	ret = inflateBackEnd ( & strm )	498:4:18620:18647	11237679	25	True				
ANR	11237946	AssignmentExpression	ret = inflateBackEnd ( & strm )		11237679	0		=			
ANR	11237947	Identifier	ret		11237679	0					
ANR	11237948	CallExpression	inflateBackEnd ( & strm )		11237679	1					
ANR	11237949	Callee	inflateBackEnd		11237679	0					
ANR	11237950	Identifier	inflateBackEnd		11237679	0					
ANR	11237951	ArgumentList	& strm		11237679	1					
ANR	11237952	Argument	& strm		11237679	0					
ANR	11237953	UnaryOperationExpression	& strm		11237679	0					
ANR	11237954	UnaryOperator	&		11237679	0					
ANR	11237955	Identifier	strm		11237679	1					
ANR	11237956	ExpressionStatement	assert ( ret == Z_OK )	498:48:18664:18683	11237679	26	True				
ANR	11237957	CallExpression	assert ( ret == Z_OK )		11237679	0					
ANR	11237958	Callee	assert		11237679	0					
ANR	11237959	Identifier	assert		11237679	0					
ANR	11237960	ArgumentList	ret == Z_OK		11237679	1					
ANR	11237961	Argument	ret == Z_OK		11237679	0					
ANR	11237962	EqualityExpression	ret == Z_OK		11237679	0		==			
ANR	11237963	Identifier	ret		11237679	0					
ANR	11237964	Identifier	Z_OK		11237679	1					
ANR	11237965	ExpressionStatement	"mem_done ( & strm , ""inflateBack bad state"" )"	499:4:18689:18729	11237679	27	True				
ANR	11237966	CallExpression	"mem_done ( & strm , ""inflateBack bad state"" )"		11237679	0					
ANR	11237967	Callee	mem_done		11237679	0					
ANR	11237968	Identifier	mem_done		11237679	0					
ANR	11237969	ArgumentList	& strm		11237679	1					
ANR	11237970	Argument	& strm		11237679	0					
ANR	11237971	UnaryOperationExpression	& strm		11237679	0					
ANR	11237972	UnaryOperator	&		11237679	0					
ANR	11237973	Identifier	strm		11237679	1					
ANR	11237974	Argument	"""inflateBack bad state"""		11237679	1					
ANR	11237975	PrimaryExpression	"""inflateBack bad state"""		11237679	0					
ANR	11237976	ExpressionStatement	"ret = inflateBackInit ( & strm , 15 , win )"	501:4:18736:18773	11237679	28	True				
ANR	11237977	AssignmentExpression	"ret = inflateBackInit ( & strm , 15 , win )"		11237679	0		=			
ANR	11237978	Identifier	ret		11237679	0					
ANR	11237979	CallExpression	"inflateBackInit ( & strm , 15 , win )"		11237679	1					
ANR	11237980	Callee	inflateBackInit		11237679	0					
ANR	11237981	Identifier	inflateBackInit		11237679	0					
ANR	11237982	ArgumentList	& strm		11237679	1					
ANR	11237983	Argument	& strm		11237679	0					
ANR	11237984	UnaryOperationExpression	& strm		11237679	0					
ANR	11237985	UnaryOperator	&		11237679	0					
ANR	11237986	Identifier	strm		11237679	1					
ANR	11237987	Argument	15		11237679	1					
ANR	11237988	PrimaryExpression	15		11237679	0					
ANR	11237989	Argument	win		11237679	2					
ANR	11237990	Identifier	win		11237679	0					
ANR	11237991	ExpressionStatement	assert ( ret == Z_OK )	501:48:18780:18799	11237679	29	True				
ANR	11237992	CallExpression	assert ( ret == Z_OK )		11237679	0					
ANR	11237993	Callee	assert		11237679	0					
ANR	11237994	Identifier	assert		11237679	0					
ANR	11237995	ArgumentList	ret == Z_OK		11237679	1					
ANR	11237996	Argument	ret == Z_OK		11237679	0					
ANR	11237997	EqualityExpression	ret == Z_OK		11237679	0		==			
ANR	11237998	Identifier	ret		11237679	0					
ANR	11237999	Identifier	Z_OK		11237679	1					
ANR	11238000	ExpressionStatement	ret = inflateBackEnd ( & strm )	502:4:18805:18832	11237679	30	True				
ANR	11238001	AssignmentExpression	ret = inflateBackEnd ( & strm )		11237679	0		=			
ANR	11238002	Identifier	ret		11237679	0					
ANR	11238003	CallExpression	inflateBackEnd ( & strm )		11237679	1					
ANR	11238004	Callee	inflateBackEnd		11237679	0					
ANR	11238005	Identifier	inflateBackEnd		11237679	0					
ANR	11238006	ArgumentList	& strm		11237679	1					
ANR	11238007	Argument	& strm		11237679	0					
ANR	11238008	UnaryOperationExpression	& strm		11237679	0					
ANR	11238009	UnaryOperator	&		11237679	0					
ANR	11238010	Identifier	strm		11237679	1					
ANR	11238011	ExpressionStatement	assert ( ret == Z_OK )	502:48:18849:18868	11237679	31	True				
ANR	11238012	CallExpression	assert ( ret == Z_OK )		11237679	0					
ANR	11238013	Callee	assert		11237679	0					
ANR	11238014	Identifier	assert		11237679	0					
ANR	11238015	ArgumentList	ret == Z_OK		11237679	1					
ANR	11238016	Argument	ret == Z_OK		11237679	0					
ANR	11238017	EqualityExpression	ret == Z_OK		11237679	0		==			
ANR	11238018	Identifier	ret		11237679	0					
ANR	11238019	Identifier	Z_OK		11237679	1					
ANR	11238020	ExpressionStatement	"fputs ( ""inflateBack built-in memory routines\\n"" , stderr )"	503:4:18874:18929	11237679	32	True				
ANR	11238021	CallExpression	"fputs ( ""inflateBack built-in memory routines\\n"" , stderr )"		11237679	0					
ANR	11238022	Callee	fputs		11237679	0					
ANR	11238023	Identifier	fputs		11237679	0					
ANR	11238024	ArgumentList	"""inflateBack built-in memory routines\\n"""		11237679	1					
ANR	11238025	Argument	"""inflateBack built-in memory routines\\n"""		11237679	0					
ANR	11238026	PrimaryExpression	"""inflateBack built-in memory routines\\n"""		11237679	0					
ANR	11238027	Argument	stderr		11237679	1					
ANR	11238028	Identifier	stderr		11237679	0					
ANR	11238029	ReturnType	local void		11237679	1					
ANR	11238030	Identifier	cover_back		11237679	2					
ANR	11238031	ParameterList			11237679	3					
ANR	11238032	CFGEntryNode	ENTRY		11237679		True				
ANR	11238033	CFGExitNode	EXIT		11237679		True				
ANR	11238034	Symbol	ret		11237679						
ANR	11238035	Symbol	Z_VERSION_ERROR		11237679						
ANR	11238036	Symbol	Z_STREAM_ERROR		11237679						
ANR	11238037	Symbol	Z_BUF_ERROR		11237679						
ANR	11238038	Symbol	& strm		11237679						
ANR	11238039	Symbol	strm		11237679						
ANR	11238040	Symbol	Z_OK		11237679						
ANR	11238041	Symbol	stderr		11237679						
ANR	11238042	Symbol	push		11237679						
ANR	11238043	Symbol	strm . next_in		11237679						
ANR	11238044	Symbol	pull		11237679						
ANR	11238045	Symbol	inflateBack		11237679						
ANR	11238046	Symbol	inflateBackEnd		11237679						
ANR	11238047	Symbol	inflateBackInit_		11237679						
ANR	11238048	Symbol	Z_STREAM_END		11237679						
ANR	11238049	Symbol	win		11237679						
ANR	11238050	Symbol	inflateBackInit		11237679						
ANR	11238051	Symbol	Z_NULL		11237679						
ANR	11238052	Symbol	strm . avail_in		11237679						
ANR	11238053	DeclStmt									
ANR	11238054	Decl							int	int	ret
ANR	11238055	DeclStmt									
ANR	11238056	Decl							unsigned	unsigned	len
ANR	11238057	Decl							unsigned	unsigned	size
ANR	11238058	DeclStmt									
ANR	11238059	Decl							unsigned char	unsigned char *	in
ANR	11238060	Decl							unsigned char	unsigned char *	out
ANR	11238061	Decl							unsigned char	unsigned char *	win
ANR	11238062	DeclStmt									
ANR	11238063	Decl							char	char *	prefix
ANR	11238064	DeclStmt									
ANR	11238065	Decl							z_stream	z_stream	strm
ANR	11238066	Function	cover_inflate	581:0:20915:22660							
ANR	11238067	FunctionDef	cover_inflate ()		11238066	0					
ANR	11238068	CompoundStatement		582:0:20946:22660	11238066	0					
ANR	11238069	TryStatement	try		11238066	0					
ANR	11238070	ExpressionStatement	"""0 0 0 0 0"" , ""invalid stored block lengths"" , 1"		11238066	0					
ANR	11238071	Expression	"""0 0 0 0 0"" , ""invalid stored block lengths"" , 1"		11238066	0					
ANR	11238072	PrimaryExpression	"""0 0 0 0 0"""		11238066	0					
ANR	11238073	Expression	"""invalid stored block lengths"" , 1"		11238066	1					
ANR	11238074	PrimaryExpression	"""invalid stored block lengths"""		11238066	0					
ANR	11238075	PrimaryExpression	1		11238066	1					
ANR	11238076	TryStatement	try		11238066	1					
ANR	11238077	ExpressionStatement	"""3 0"" , ""fixed"" , 0"		11238066	0					
ANR	11238078	Expression	"""3 0"" , ""fixed"" , 0"		11238066	0					
ANR	11238079	PrimaryExpression	"""3 0"""		11238066	0					
ANR	11238080	Expression	"""fixed"" , 0"		11238066	1					
ANR	11238081	PrimaryExpression	"""fixed"""		11238066	0					
ANR	11238082	PrimaryExpression	0		11238066	1					
ANR	11238083	TryStatement	try		11238066	2					
ANR	11238084	ExpressionStatement	"""6"" , ""invalid block type"" , 1"		11238066	0					
ANR	11238085	Expression	"""6"" , ""invalid block type"" , 1"		11238066	0					
ANR	11238086	PrimaryExpression	"""6"""		11238066	0					
ANR	11238087	Expression	"""invalid block type"" , 1"		11238066	1					
ANR	11238088	PrimaryExpression	"""invalid block type"""		11238066	0					
ANR	11238089	PrimaryExpression	1		11238066	1					
ANR	11238090	TryStatement	try		11238066	3					
ANR	11238091	ExpressionStatement	"""1 1 0 fe ff 0"" , ""stored"" , 0"		11238066	0					
ANR	11238092	Expression	"""1 1 0 fe ff 0"" , ""stored"" , 0"		11238066	0					
ANR	11238093	PrimaryExpression	"""1 1 0 fe ff 0"""		11238066	0					
ANR	11238094	Expression	"""stored"" , 0"		11238066	1					
ANR	11238095	PrimaryExpression	"""stored"""		11238066	0					
ANR	11238096	PrimaryExpression	0		11238066	1					
ANR	11238097	TryStatement	try		11238066	4					
ANR	11238098	ExpressionStatement	"""fc 0 0"" , ""too many length or distance symbols"" , 1"		11238066	0					
ANR	11238099	Expression	"""fc 0 0"" , ""too many length or distance symbols"" , 1"		11238066	0					
ANR	11238100	PrimaryExpression	"""fc 0 0"""		11238066	0					
ANR	11238101	Expression	"""too many length or distance symbols"" , 1"		11238066	1					
ANR	11238102	PrimaryExpression	"""too many length or distance symbols"""		11238066	0					
ANR	11238103	PrimaryExpression	1		11238066	1					
ANR	11238104	TryStatement	try		11238066	5					
ANR	11238105	ExpressionStatement	"""4 0 fe ff"" , ""invalid code lengths set"" , 1"		11238066	0					
ANR	11238106	Expression	"""4 0 fe ff"" , ""invalid code lengths set"" , 1"		11238066	0					
ANR	11238107	PrimaryExpression	"""4 0 fe ff"""		11238066	0					
ANR	11238108	Expression	"""invalid code lengths set"" , 1"		11238066	1					
ANR	11238109	PrimaryExpression	"""invalid code lengths set"""		11238066	0					
ANR	11238110	PrimaryExpression	1		11238066	1					
ANR	11238111	TryStatement	try		11238066	6					
ANR	11238112	ExpressionStatement	"""4 0 24 49 0"" , ""invalid bit length repeat"" , 1"		11238066	0					
ANR	11238113	Expression	"""4 0 24 49 0"" , ""invalid bit length repeat"" , 1"		11238066	0					
ANR	11238114	PrimaryExpression	"""4 0 24 49 0"""		11238066	0					
ANR	11238115	Expression	"""invalid bit length repeat"" , 1"		11238066	1					
ANR	11238116	PrimaryExpression	"""invalid bit length repeat"""		11238066	0					
ANR	11238117	PrimaryExpression	1		11238066	1					
ANR	11238118	TryStatement	try		11238066	7					
ANR	11238119	ExpressionStatement	"""4 0 24 e9 ff ff"" , ""invalid bit length repeat"" , 1"		11238066	0					
ANR	11238120	Expression	"""4 0 24 e9 ff ff"" , ""invalid bit length repeat"" , 1"		11238066	0					
ANR	11238121	PrimaryExpression	"""4 0 24 e9 ff ff"""		11238066	0					
ANR	11238122	Expression	"""invalid bit length repeat"" , 1"		11238066	1					
ANR	11238123	PrimaryExpression	"""invalid bit length repeat"""		11238066	0					
ANR	11238124	PrimaryExpression	1		11238066	1					
ANR	11238125	TryStatement	try		11238066	8					
ANR	11238126	ExpressionStatement	"""4 0 24 e9 ff 6d"" , ""invalid code -- missing end-of-block"" , 1"		11238066	0					
ANR	11238127	Expression	"""4 0 24 e9 ff 6d"" , ""invalid code -- missing end-of-block"" , 1"		11238066	0					
ANR	11238128	PrimaryExpression	"""4 0 24 e9 ff 6d"""		11238066	0					
ANR	11238129	Expression	"""invalid code -- missing end-of-block"" , 1"		11238066	1					
ANR	11238130	PrimaryExpression	"""invalid code -- missing end-of-block"""		11238066	0					
ANR	11238131	PrimaryExpression	1		11238066	1					
ANR	11238132	TryStatement	try		11238066	9					
ANR	11238133	ExpressionStatement	"""4 80 49 92 24 49 92 24 71 ff ff 93 11 0"" , ""invalid literal/lengths set"" , 1"		11238066	0					
ANR	11238134	Expression	"""4 80 49 92 24 49 92 24 71 ff ff 93 11 0"" , ""invalid literal/lengths set"" , 1"		11238066	0					
ANR	11238135	PrimaryExpression	"""4 80 49 92 24 49 92 24 71 ff ff 93 11 0"""		11238066	0					
ANR	11238136	Expression	"""invalid literal/lengths set"" , 1"		11238066	1					
ANR	11238137	PrimaryExpression	"""invalid literal/lengths set"""		11238066	0					
ANR	11238138	PrimaryExpression	1		11238066	1					
ANR	11238139	TryStatement	try		11238066	10					
ANR	11238140	ExpressionStatement	"""4 80 49 92 24 49 92 24 f b4 ff ff c3 84"" , ""invalid distances set"" , 1"		11238066	0					
ANR	11238141	Expression	"""4 80 49 92 24 49 92 24 f b4 ff ff c3 84"" , ""invalid distances set"" , 1"		11238066	0					
ANR	11238142	PrimaryExpression	"""4 80 49 92 24 49 92 24 f b4 ff ff c3 84"""		11238066	0					
ANR	11238143	Expression	"""invalid distances set"" , 1"		11238066	1					
ANR	11238144	PrimaryExpression	"""invalid distances set"""		11238066	0					
ANR	11238145	PrimaryExpression	1		11238066	1					
ANR	11238146	TryStatement	try		11238066	11					
ANR	11238147	ExpressionStatement	"""4 c0 81 8 0 0 0 0 20 7f eb b 0 0"" , ""invalid literal/length code"" , 1"		11238066	0					
ANR	11238148	Expression	"""4 c0 81 8 0 0 0 0 20 7f eb b 0 0"" , ""invalid literal/length code"" , 1"		11238066	0					
ANR	11238149	PrimaryExpression	"""4 c0 81 8 0 0 0 0 20 7f eb b 0 0"""		11238066	0					
ANR	11238150	Expression	"""invalid literal/length code"" , 1"		11238066	1					
ANR	11238151	PrimaryExpression	"""invalid literal/length code"""		11238066	0					
ANR	11238152	PrimaryExpression	1		11238066	1					
ANR	11238153	TryStatement	try		11238066	12					
ANR	11238154	ExpressionStatement	"""2 7e ff ff"" , ""invalid distance code"" , 1"		11238066	0					
ANR	11238155	Expression	"""2 7e ff ff"" , ""invalid distance code"" , 1"		11238066	0					
ANR	11238156	PrimaryExpression	"""2 7e ff ff"""		11238066	0					
ANR	11238157	Expression	"""invalid distance code"" , 1"		11238066	1					
ANR	11238158	PrimaryExpression	"""invalid distance code"""		11238066	0					
ANR	11238159	PrimaryExpression	1		11238066	1					
ANR	11238160	TryStatement	try		11238066	13					
ANR	11238161	ExpressionStatement	"""c c0 81 0 0 0 0 0 90 ff 6b 4 0"" , ""invalid distance too far back"" , 1"		11238066	0					
ANR	11238162	Expression	"""c c0 81 0 0 0 0 0 90 ff 6b 4 0"" , ""invalid distance too far back"" , 1"		11238066	0					
ANR	11238163	PrimaryExpression	"""c c0 81 0 0 0 0 0 90 ff 6b 4 0"""		11238066	0					
ANR	11238164	Expression	"""invalid distance too far back"" , 1"		11238066	1					
ANR	11238165	PrimaryExpression	"""invalid distance too far back"""		11238066	0					
ANR	11238166	PrimaryExpression	1		11238066	1					
ANR	11238167	TryStatement	try		11238066	14					
ANR	11238168	ExpressionStatement	"""1f 8b 8 0 0 0 0 0 0 0 3 0 0 0 0 1"" , ""incorrect data check"" , - 1"		11238066	0					
ANR	11238169	Expression	"""1f 8b 8 0 0 0 0 0 0 0 3 0 0 0 0 1"" , ""incorrect data check"" , - 1"		11238066	0					
ANR	11238170	PrimaryExpression	"""1f 8b 8 0 0 0 0 0 0 0 3 0 0 0 0 1"""		11238066	0					
ANR	11238171	Expression	"""incorrect data check"" , - 1"		11238066	1					
ANR	11238172	PrimaryExpression	"""incorrect data check"""		11238066	0					
ANR	11238173	UnaryOperationExpression	- 1		11238066	1					
ANR	11238174	UnaryOperator	-		11238066	0					
ANR	11238175	PrimaryExpression	1		11238066	1					
ANR	11238176	TryStatement	try		11238066	15					
ANR	11238177	ExpressionStatement	"""1f 8b 8 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 1"" , ""incorrect length check"" , - 1"		11238066	0					
ANR	11238178	Expression	"""1f 8b 8 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 1"" , ""incorrect length check"" , - 1"		11238066	0					
ANR	11238179	PrimaryExpression	"""1f 8b 8 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 1"""		11238066	0					
ANR	11238180	Expression	"""incorrect length check"" , - 1"		11238066	1					
ANR	11238181	PrimaryExpression	"""incorrect length check"""		11238066	0					
ANR	11238182	UnaryOperationExpression	- 1		11238066	1					
ANR	11238183	UnaryOperator	-		11238066	0					
ANR	11238184	PrimaryExpression	1		11238066	1					
ANR	11238185	TryStatement	try		11238066	16					
ANR	11238186	ExpressionStatement	"""5 c0 21 d 0 0 0 80 b0 fe 6d 2f 91 6c"" , ""pull 17"" , 0"		11238066	0					
ANR	11238187	Expression	"""5 c0 21 d 0 0 0 80 b0 fe 6d 2f 91 6c"" , ""pull 17"" , 0"		11238066	0					
ANR	11238188	PrimaryExpression	"""5 c0 21 d 0 0 0 80 b0 fe 6d 2f 91 6c"""		11238066	0					
ANR	11238189	Expression	"""pull 17"" , 0"		11238066	1					
ANR	11238190	PrimaryExpression	"""pull 17"""		11238066	0					
ANR	11238191	PrimaryExpression	0		11238066	1					
ANR	11238192	TryStatement	try		11238066	17					
ANR	11238193	ExpressionStatement	"""5 e0 81 91 24 cb b2 2c 49 e2 f 2e 8b 9a 47 56 9f fb fe ec d2 ff 1f"" , ""long code"" , 0"		11238066	0					
ANR	11238194	Expression	"""5 e0 81 91 24 cb b2 2c 49 e2 f 2e 8b 9a 47 56 9f fb fe ec d2 ff 1f"" , ""long code"" , 0"		11238066	0					
ANR	11238195	PrimaryExpression	"""5 e0 81 91 24 cb b2 2c 49 e2 f 2e 8b 9a 47 56 9f fb fe ec d2 ff 1f"""		11238066	0					
ANR	11238196	Expression	"""long code"" , 0"		11238066	1					
ANR	11238197	PrimaryExpression	"""long code"""		11238066	0					
ANR	11238198	PrimaryExpression	0		11238066	1					
ANR	11238199	TryStatement	try		11238066	18					
ANR	11238200	ExpressionStatement	"""ed c0 1 1 0 0 0 40 20 ff 57 1b 42 2c 4f"" , ""length extra"" , 0"		11238066	0					
ANR	11238201	Expression	"""ed c0 1 1 0 0 0 40 20 ff 57 1b 42 2c 4f"" , ""length extra"" , 0"		11238066	0					
ANR	11238202	PrimaryExpression	"""ed c0 1 1 0 0 0 40 20 ff 57 1b 42 2c 4f"""		11238066	0					
ANR	11238203	Expression	"""length extra"" , 0"		11238066	1					
ANR	11238204	PrimaryExpression	"""length extra"""		11238066	0					
ANR	11238205	PrimaryExpression	0		11238066	1					
ANR	11238206	TryStatement	try		11238066	19					
ANR	11238207	ExpressionStatement	"""ed cf c1 b1 2c 47 10 c4 30 fa 6f 35 1d 1 82 59 3d fb be 2e 2a fc f c"" , ""long distance and extra"" , 0"		11238066	0					
ANR	11238208	Expression	"""ed cf c1 b1 2c 47 10 c4 30 fa 6f 35 1d 1 82 59 3d fb be 2e 2a fc f c"" , ""long distance and extra"" , 0"		11238066	0					
ANR	11238209	PrimaryExpression	"""ed cf c1 b1 2c 47 10 c4 30 fa 6f 35 1d 1 82 59 3d fb be 2e 2a fc f c"""		11238066	0					
ANR	11238210	Expression	"""long distance and extra"" , 0"		11238066	1					
ANR	11238211	PrimaryExpression	"""long distance and extra"""		11238066	0					
ANR	11238212	PrimaryExpression	0		11238066	1					
ANR	11238213	TryStatement	try		11238066	20					
ANR	11238214	Statement	(		11238066	0					
ANR	11238215	Statement	"""ed c0 81 0 0 0 0 80 a0 fd a9 17 a9 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 """	609:8:22376:22446	11238066	21	True				
ANR	11238216	Statement	"""0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 6"""	610:8:22456:22488	11238066	22	True				
ANR	11238217	Statement	","	610:41:22489:22489	11238066	23	True				
ANR	11238218	Statement	"""window end"""	610:43:22491:22502	11238066	24	True				
ANR	11238219	Statement	","	610:55:22503:22503	11238066	25	True				
ANR	11238220	Statement	0	610:57:22505:22505	11238066	26	True				
ANR	11238221	Statement	)	610:58:22506:22506	11238066	27	True				
ANR	11238222	ExpressionStatement		610:59:22507:22507	11238066	28	True				
ANR	11238223	ExpressionStatement	"inf ( ""2 8 20 80 0 3 0"" , ""inflate_fast TYPE return"" , 0 , - 15 , 258 , Z_STREAM_END )"	611:4:22513:22598	11238066	29	True				
ANR	11238224	CallExpression	"inf ( ""2 8 20 80 0 3 0"" , ""inflate_fast TYPE return"" , 0 , - 15 , 258 , Z_STREAM_END )"		11238066	0					
ANR	11238225	Callee	inf		11238066	0					
ANR	11238226	Identifier	inf		11238066	0					
ANR	11238227	ArgumentList	"""2 8 20 80 0 3 0"""		11238066	1					
ANR	11238228	Argument	"""2 8 20 80 0 3 0"""		11238066	0					
ANR	11238229	PrimaryExpression	"""2 8 20 80 0 3 0"""		11238066	0					
ANR	11238230	Argument	"""inflate_fast TYPE return"""		11238066	1					
ANR	11238231	PrimaryExpression	"""inflate_fast TYPE return"""		11238066	0					
ANR	11238232	Argument	0		11238066	2					
ANR	11238233	PrimaryExpression	0		11238066	0					
ANR	11238234	Argument	- 15		11238066	3					
ANR	11238235	UnaryOperationExpression	- 15		11238066	0					
ANR	11238236	UnaryOperator	-		11238066	0					
ANR	11238237	PrimaryExpression	15		11238066	1					
ANR	11238238	Argument	258		11238066	4					
ANR	11238239	PrimaryExpression	258		11238066	0					
ANR	11238240	Argument	Z_STREAM_END		11238066	5					
ANR	11238241	Identifier	Z_STREAM_END		11238066	0					
ANR	11238242	ExpressionStatement	"inf ( ""63 18 5 40 c 0"" , ""window wrap"" , 3 , - 8 , 300 , Z_OK )"	613:4:22604:22658	11238066	30	True				
ANR	11238243	CallExpression	"inf ( ""63 18 5 40 c 0"" , ""window wrap"" , 3 , - 8 , 300 , Z_OK )"		11238066	0					
ANR	11238244	Callee	inf		11238066	0					
ANR	11238245	Identifier	inf		11238066	0					
ANR	11238246	ArgumentList	"""63 18 5 40 c 0"""		11238066	1					
ANR	11238247	Argument	"""63 18 5 40 c 0"""		11238066	0					
ANR	11238248	PrimaryExpression	"""63 18 5 40 c 0"""		11238066	0					
ANR	11238249	Argument	"""window wrap"""		11238066	1					
ANR	11238250	PrimaryExpression	"""window wrap"""		11238066	0					
ANR	11238251	Argument	3		11238066	2					
ANR	11238252	PrimaryExpression	3		11238066	0					
ANR	11238253	Argument	- 8		11238066	3					
ANR	11238254	UnaryOperationExpression	- 8		11238066	0					
ANR	11238255	UnaryOperator	-		11238066	0					
ANR	11238256	PrimaryExpression	8		11238066	1					
ANR	11238257	Argument	300		11238066	4					
ANR	11238258	PrimaryExpression	300		11238066	0					
ANR	11238259	Argument	Z_OK		11238066	5					
ANR	11238260	Identifier	Z_OK		11238066	0					
ANR	11238261	ReturnType	local void		11238066	1					
ANR	11238262	Identifier	cover_inflate		11238066	2					
ANR	11238263	ParameterList			11238066	3					
ANR	11238264	CFGEntryNode	ENTRY		11238066		True				
ANR	11238265	CFGExitNode	EXIT		11238066		True				
ANR	11238266	CFGErrorNode	ERROR		11238066		True				
ANR	11238267	CFGErrorNode	ERROR		11238066		True				
ANR	11238268	CFGErrorNode	ERROR		11238066		True				
ANR	11238269	CFGErrorNode	ERROR		11238066		True				
ANR	11238270	CFGErrorNode	ERROR		11238066		True				
ANR	11238271	CFGErrorNode	ERROR		11238066		True				
ANR	11238272	CFGErrorNode	ERROR		11238066		True				
ANR	11238273	CFGErrorNode	ERROR		11238066		True				
ANR	11238274	CFGErrorNode	ERROR		11238066		True				
ANR	11238275	CFGErrorNode	ERROR		11238066		True				
ANR	11238276	CFGErrorNode	ERROR		11238066		True				
ANR	11238277	CFGErrorNode	ERROR		11238066		True				
ANR	11238278	CFGErrorNode	ERROR		11238066		True				
ANR	11238279	CFGErrorNode	ERROR		11238066		True				
ANR	11238280	CFGErrorNode	ERROR		11238066		True				
ANR	11238281	CFGErrorNode	ERROR		11238066		True				
ANR	11238282	CFGErrorNode	ERROR		11238066		True				
ANR	11238283	CFGErrorNode	ERROR		11238066		True				
ANR	11238284	CFGErrorNode	ERROR		11238066		True				
ANR	11238285	CFGErrorNode	ERROR		11238066		True				
ANR	11238286	CFGErrorNode	ERROR		11238066		True				
ANR	11238287	Symbol	Z_STREAM_END		11238066						
ANR	11238288	Symbol	Z_OK		11238066						
ANR	11238289	Function	cover_trees	617:0:22705:23475							
ANR	11238290	FunctionDef	cover_trees ()		11238289	0					
ANR	11238291	CompoundStatement		618:0:22734:23475	11238289	0					
ANR	11238292	IdentifierDeclStatement	int ret ;	619:4:22740:22747	11238289	0	True				
ANR	11238293	IdentifierDecl	ret		11238289	0					
ANR	11238294	IdentifierDeclType	int		11238289	0					
ANR	11238295	Identifier	ret		11238289	1					
ANR	11238296	IdentifierDeclStatement	unsigned bits ;	620:4:22753:22766	11238289	1	True				
ANR	11238297	IdentifierDecl	bits		11238289	0					
ANR	11238298	IdentifierDeclType	unsigned		11238289	0					
ANR	11238299	Identifier	bits		11238289	1					
ANR	11238300	IdentifierDeclStatement	"unsigned short lens [ 16 ] , work [ 16 ] ;"	621:4:22772:22805	11238289	2	True				
ANR	11238301	IdentifierDecl	lens [ 16 ]		11238289	0					
ANR	11238302	IdentifierDeclType	unsigned short [ 16 ]		11238289	0					
ANR	11238303	Identifier	lens		11238289	1					
ANR	11238304	PrimaryExpression	16		11238289	2					
ANR	11238305	IdentifierDecl	work [ 16 ]		11238289	1					
ANR	11238306	IdentifierDeclType	unsigned short [ 16 ]		11238289	0					
ANR	11238307	Identifier	work		11238289	1					
ANR	11238308	PrimaryExpression	16		11238289	2					
ANR	11238309	IdentifierDeclStatement	"code * next , table [ ENOUGH_DISTS ] ;"	622:4:22811:22842	11238289	3	True				
ANR	11238310	IdentifierDecl	* next		11238289	0					
ANR	11238311	IdentifierDeclType	code *		11238289	0					
ANR	11238312	Identifier	next		11238289	1					
ANR	11238313	IdentifierDecl	table [ ENOUGH_DISTS ]		11238289	1					
ANR	11238314	IdentifierDeclType	code [ ENOUGH_DISTS ]		11238289	0					
ANR	11238315	Identifier	table		11238289	1					
ANR	11238316	Identifier	ENOUGH_DISTS		11238289	2					
ANR	11238317	ForStatement	for ( bits = 0 ; bits < 15 ; bits ++ )		11238289	4					
ANR	11238318	ForInit	bits = 0 ;	626:9:23001:23009	11238289	0	True				
ANR	11238319	AssignmentExpression	bits = 0		11238289	0		=			
ANR	11238320	Identifier	bits		11238289	0					
ANR	11238321	PrimaryExpression	0		11238289	1					
ANR	11238322	Condition	bits < 15	626:19:23011:23019	11238289	1	True				
ANR	11238323	RelationalExpression	bits < 15		11238289	0		<			
ANR	11238324	Identifier	bits		11238289	0					
ANR	11238325	PrimaryExpression	15		11238289	1					
ANR	11238326	PostIncDecOperationExpression	bits ++	626:30:23022:23027	11238289	2	True				
ANR	11238327	Identifier	bits		11238289	0					
ANR	11238328	IncDec	++		11238289	1					
ANR	11238329	ExpressionStatement	lens [ bits ] = ( unsigned short ) ( bits + 1 )	627:8:23038:23077	11238289	3	True				
ANR	11238330	AssignmentExpression	lens [ bits ] = ( unsigned short ) ( bits + 1 )		11238289	0		=			
ANR	11238331	ArrayIndexing	lens [ bits ]		11238289	0					
ANR	11238332	Identifier	lens		11238289	0					
ANR	11238333	Identifier	bits		11238289	1					
ANR	11238334	CastExpression	( unsigned short ) ( bits + 1 )		11238289	1					
ANR	11238335	CastTarget	unsigned short		11238289	0					
ANR	11238336	AdditiveExpression	bits + 1		11238289	1		+			
ANR	11238337	Identifier	bits		11238289	0					
ANR	11238338	PrimaryExpression	1		11238289	1					
ANR	11238339	ExpressionStatement	lens [ 15 ] = 15	628:4:23083:23096	11238289	5	True				
ANR	11238340	AssignmentExpression	lens [ 15 ] = 15		11238289	0		=			
ANR	11238341	ArrayIndexing	lens [ 15 ]		11238289	0					
ANR	11238342	Identifier	lens		11238289	0					
ANR	11238343	PrimaryExpression	15		11238289	1					
ANR	11238344	PrimaryExpression	15		11238289	1					
ANR	11238345	ExpressionStatement	next = table	629:4:23102:23114	11238289	6	True				
ANR	11238346	AssignmentExpression	next = table		11238289	0		=			
ANR	11238347	Identifier	next		11238289	0					
ANR	11238348	Identifier	table		11238289	1					
ANR	11238349	ExpressionStatement	bits = 15	630:4:23120:23129	11238289	7	True				
ANR	11238350	AssignmentExpression	bits = 15		11238289	0		=			
ANR	11238351	Identifier	bits		11238289	0					
ANR	11238352	PrimaryExpression	15		11238289	1					
ANR	11238353	ExpressionStatement	"ret = inflate_table ( DISTS , lens , 16 , & next , & bits , work )"	631:4:23135:23191	11238289	8	True				
ANR	11238354	AssignmentExpression	"ret = inflate_table ( DISTS , lens , 16 , & next , & bits , work )"		11238289	0		=			
ANR	11238355	Identifier	ret		11238289	0					
ANR	11238356	CallExpression	"inflate_table ( DISTS , lens , 16 , & next , & bits , work )"		11238289	1					
ANR	11238357	Callee	inflate_table		11238289	0					
ANR	11238358	Identifier	inflate_table		11238289	0					
ANR	11238359	ArgumentList	DISTS		11238289	1					
ANR	11238360	Argument	DISTS		11238289	0					
ANR	11238361	Identifier	DISTS		11238289	0					
ANR	11238362	Argument	lens		11238289	1					
ANR	11238363	Identifier	lens		11238289	0					
ANR	11238364	Argument	16		11238289	2					
ANR	11238365	PrimaryExpression	16		11238289	0					
ANR	11238366	Argument	& next		11238289	3					
ANR	11238367	UnaryOperationExpression	& next		11238289	0					
ANR	11238368	UnaryOperator	&		11238289	0					
ANR	11238369	Identifier	next		11238289	1					
ANR	11238370	Argument	& bits		11238289	4					
ANR	11238371	UnaryOperationExpression	& bits		11238289	0					
ANR	11238372	UnaryOperator	&		11238289	0					
ANR	11238373	Identifier	bits		11238289	1					
ANR	11238374	Argument	work		11238289	5					
ANR	11238375	Identifier	work		11238289	0					
ANR	11238376	ExpressionStatement	assert ( ret == 1 )	632:48:23241:23257	11238289	9	True				
ANR	11238377	CallExpression	assert ( ret == 1 )		11238289	0					
ANR	11238378	Callee	assert		11238289	0					
ANR	11238379	Identifier	assert		11238289	0					
ANR	11238380	ArgumentList	ret == 1		11238289	1					
ANR	11238381	Argument	ret == 1		11238289	0					
ANR	11238382	EqualityExpression	ret == 1		11238289	0		==			
ANR	11238383	Identifier	ret		11238289	0					
ANR	11238384	PrimaryExpression	1		11238289	1					
ANR	11238385	ExpressionStatement	next = table	633:4:23263:23275	11238289	10	True				
ANR	11238386	AssignmentExpression	next = table		11238289	0		=			
ANR	11238387	Identifier	next		11238289	0					
ANR	11238388	Identifier	table		11238289	1					
ANR	11238389	ExpressionStatement	bits = 1	634:4:23281:23289	11238289	11	True				
ANR	11238390	AssignmentExpression	bits = 1		11238289	0		=			
ANR	11238391	Identifier	bits		11238289	0					
ANR	11238392	PrimaryExpression	1		11238289	1					
ANR	11238393	ExpressionStatement	"ret = inflate_table ( DISTS , lens , 16 , & next , & bits , work )"	635:4:23295:23351	11238289	12	True				
ANR	11238394	AssignmentExpression	"ret = inflate_table ( DISTS , lens , 16 , & next , & bits , work )"		11238289	0		=			
ANR	11238395	Identifier	ret		11238289	0					
ANR	11238396	CallExpression	"inflate_table ( DISTS , lens , 16 , & next , & bits , work )"		11238289	1					
ANR	11238397	Callee	inflate_table		11238289	0					
ANR	11238398	Identifier	inflate_table		11238289	0					
ANR	11238399	ArgumentList	DISTS		11238289	1					
ANR	11238400	Argument	DISTS		11238289	0					
ANR	11238401	Identifier	DISTS		11238289	0					
ANR	11238402	Argument	lens		11238289	1					
ANR	11238403	Identifier	lens		11238289	0					
ANR	11238404	Argument	16		11238289	2					
ANR	11238405	PrimaryExpression	16		11238289	0					
ANR	11238406	Argument	& next		11238289	3					
ANR	11238407	UnaryOperationExpression	& next		11238289	0					
ANR	11238408	UnaryOperator	&		11238289	0					
ANR	11238409	Identifier	next		11238289	1					
ANR	11238410	Argument	& bits		11238289	4					
ANR	11238411	UnaryOperationExpression	& bits		11238289	0					
ANR	11238412	UnaryOperator	&		11238289	0					
ANR	11238413	Identifier	bits		11238289	1					
ANR	11238414	Argument	work		11238289	5					
ANR	11238415	Identifier	work		11238289	0					
ANR	11238416	ExpressionStatement	assert ( ret == 1 )	636:48:23401:23417	11238289	13	True				
ANR	11238417	CallExpression	assert ( ret == 1 )		11238289	0					
ANR	11238418	Callee	assert		11238289	0					
ANR	11238419	Identifier	assert		11238289	0					
ANR	11238420	ArgumentList	ret == 1		11238289	1					
ANR	11238421	Argument	ret == 1		11238289	0					
ANR	11238422	EqualityExpression	ret == 1		11238289	0		==			
ANR	11238423	Identifier	ret		11238289	0					
ANR	11238424	PrimaryExpression	1		11238289	1					
ANR	11238425	ExpressionStatement	"fputs ( ""inflate_table not enough errors\\n"" , stderr )"	637:4:23423:23473	11238289	14	True				
ANR	11238426	CallExpression	"fputs ( ""inflate_table not enough errors\\n"" , stderr )"		11238289	0					
ANR	11238427	Callee	fputs		11238289	0					
ANR	11238428	Identifier	fputs		11238289	0					
ANR	11238429	ArgumentList	"""inflate_table not enough errors\\n"""		11238289	1					
ANR	11238430	Argument	"""inflate_table not enough errors\\n"""		11238289	0					
ANR	11238431	PrimaryExpression	"""inflate_table not enough errors\\n"""		11238289	0					
ANR	11238432	Argument	stderr		11238289	1					
ANR	11238433	Identifier	stderr		11238289	0					
ANR	11238434	ReturnType	local void		11238289	1					
ANR	11238435	Identifier	cover_trees		11238289	2					
ANR	11238436	ParameterList			11238289	3					
ANR	11238437	CFGEntryNode	ENTRY		11238289		True				
ANR	11238438	CFGExitNode	EXIT		11238289		True				
ANR	11238439	Symbol	ret		11238289						
ANR	11238440	Symbol	next		11238289						
ANR	11238441	Symbol	* bits		11238289						
ANR	11238442	Symbol	& next		11238289						
ANR	11238443	Symbol	work		11238289						
ANR	11238444	Symbol	bits		11238289						
ANR	11238445	Symbol	& bits		11238289						
ANR	11238446	Symbol	lens		11238289						
ANR	11238447	Symbol	stderr		11238289						
ANR	11238448	Symbol	DISTS		11238289						
ANR	11238449	Symbol	inflate_table		11238289						
ANR	11238450	Symbol	* lens		11238289						
ANR	11238451	Symbol	table		11238289						
ANR	11238452	Function	cover_fast	641:0:23538:24528							
ANR	11238453	FunctionDef	cover_fast ()		11238452	0					
ANR	11238454	CompoundStatement		642:0:23566:24528	11238452	0					
ANR	11238455	Statement	inf	643:4:23572:23574	11238452	0	True				
ANR	11238456	Statement	(	643:7:23575:23575	11238452	1	True				
ANR	11238457	Statement	"""e5 e0 81 ad 6d cb b2 2c c9 01 1e 59 63 ae 7d ee fb 4d fd b5 35 41 68"""	643:8:23576:23645	11238452	2	True				
ANR	11238458	Statement	""" ff 7f 0f 0 0 0"""	644:8:23655:23671	11238452	3	True				
ANR	11238459	Statement	","	644:25:23672:23672	11238452	4	True				
ANR	11238460	Statement	"""fast length extra bits"""	644:27:23674:23697	11238452	5	True				
ANR	11238461	Statement	","	644:51:23698:23698	11238452	6	True				
ANR	11238462	Statement	0	644:53:23700:23700	11238452	7	True				
ANR	11238463	Statement	","	644:54:23701:23701	11238452	8	True				
ANR	11238464	Statement	-	644:56:23703:23703	11238452	9	True				
ANR	11238465	Statement	8	644:57:23704:23704	11238452	10	True				
ANR	11238466	Statement	","	644:58:23705:23705	11238452	11	True				
ANR	11238467	Statement	258	644:60:23707:23709	11238452	12	True				
ANR	11238468	Statement	","	644:63:23710:23710	11238452	13	True				
ANR	11238469	Statement	Z_DATA_ERROR	644:65:23712:23723	11238452	14	True				
ANR	11238470	Statement	)	644:77:23724:23724	11238452	15	True				
ANR	11238471	ExpressionStatement		644:78:23725:23725	11238452	16	True				
ANR	11238472	Statement	inf	645:4:23731:23733	11238452	17	True				
ANR	11238473	Statement	(	645:7:23734:23734	11238452	18	True				
ANR	11238474	Statement	"""25 fd 81 b5 6d 59 b6 6a 49 ea af 35 6 34 eb 8c b9 f6 b9 1e ef 67 49"""	645:8:23735:23803	11238452	19	True				
ANR	11238475	Statement	""" 50 fe ff ff 3f 0 0"""	646:8:23813:23833	11238452	20	True				
ANR	11238476	Statement	","	646:29:23834:23834	11238452	21	True				
ANR	11238477	Statement	"""fast distance extra bits"""	646:31:23836:23861	11238452	22	True				
ANR	11238478	Statement	","	646:57:23862:23862	11238452	23	True				
ANR	11238479	Statement	0	646:59:23864:23864	11238452	24	True				
ANR	11238480	Statement	","	646:60:23865:23865	11238452	25	True				
ANR	11238481	Statement	-	646:62:23867:23867	11238452	26	True				
ANR	11238482	Statement	8	646:63:23868:23868	11238452	27	True				
ANR	11238483	Statement	","	646:64:23869:23869	11238452	28	True				
ANR	11238484	Statement	258	646:66:23871:23873	11238452	29	True				
ANR	11238485	Statement	","	646:69:23874:23874	11238452	30	True				
ANR	11238486	Statement	Z_DATA_ERROR	647:8:23884:23895	11238452	31	True				
ANR	11238487	Statement	)	647:20:23896:23896	11238452	32	True				
ANR	11238488	ExpressionStatement		647:21:23897:23897	11238452	33	True				
ANR	11238489	ExpressionStatement	"inf ( ""3 7e 0 0 0 0 0"" , ""fast invalid distance code"" , 0 , - 8 , 258 , Z_DATA_ERROR )"	648:4:23903:23988	11238452	34	True				
ANR	11238490	CallExpression	"inf ( ""3 7e 0 0 0 0 0"" , ""fast invalid distance code"" , 0 , - 8 , 258 , Z_DATA_ERROR )"		11238452	0					
ANR	11238491	Callee	inf		11238452	0					
ANR	11238492	Identifier	inf		11238452	0					
ANR	11238493	ArgumentList	"""3 7e 0 0 0 0 0"""		11238452	1					
ANR	11238494	Argument	"""3 7e 0 0 0 0 0"""		11238452	0					
ANR	11238495	PrimaryExpression	"""3 7e 0 0 0 0 0"""		11238452	0					
ANR	11238496	Argument	"""fast invalid distance code"""		11238452	1					
ANR	11238497	PrimaryExpression	"""fast invalid distance code"""		11238452	0					
ANR	11238498	Argument	0		11238452	2					
ANR	11238499	PrimaryExpression	0		11238452	0					
ANR	11238500	Argument	- 8		11238452	3					
ANR	11238501	UnaryOperationExpression	- 8		11238452	0					
ANR	11238502	UnaryOperator	-		11238452	0					
ANR	11238503	PrimaryExpression	8		11238452	1					
ANR	11238504	Argument	258		11238452	4					
ANR	11238505	PrimaryExpression	258		11238452	0					
ANR	11238506	Argument	Z_DATA_ERROR		11238452	5					
ANR	11238507	Identifier	Z_DATA_ERROR		11238452	0					
ANR	11238508	ExpressionStatement	"inf ( ""1b 7 0 0 0 0 0"" , ""fast invalid literal/length code"" , 0 , - 8 , 258 , Z_DATA_ERROR )"	650:4:23994:24085	11238452	35	True				
ANR	11238509	CallExpression	"inf ( ""1b 7 0 0 0 0 0"" , ""fast invalid literal/length code"" , 0 , - 8 , 258 , Z_DATA_ERROR )"		11238452	0					
ANR	11238510	Callee	inf		11238452	0					
ANR	11238511	Identifier	inf		11238452	0					
ANR	11238512	ArgumentList	"""1b 7 0 0 0 0 0"""		11238452	1					
ANR	11238513	Argument	"""1b 7 0 0 0 0 0"""		11238452	0					
ANR	11238514	PrimaryExpression	"""1b 7 0 0 0 0 0"""		11238452	0					
ANR	11238515	Argument	"""fast invalid literal/length code"""		11238452	1					
ANR	11238516	PrimaryExpression	"""fast invalid literal/length code"""		11238452	0					
ANR	11238517	Argument	0		11238452	2					
ANR	11238518	PrimaryExpression	0		11238452	0					
ANR	11238519	Argument	- 8		11238452	3					
ANR	11238520	UnaryOperationExpression	- 8		11238452	0					
ANR	11238521	UnaryOperator	-		11238452	0					
ANR	11238522	PrimaryExpression	8		11238452	1					
ANR	11238523	Argument	258		11238452	4					
ANR	11238524	PrimaryExpression	258		11238452	0					
ANR	11238525	Argument	Z_DATA_ERROR		11238452	5					
ANR	11238526	Identifier	Z_DATA_ERROR		11238452	0					
ANR	11238527	ExpressionStatement	"inf ( ""d c7 1 ae eb 38 c 4 41 a0 87 72 de df fb 1f b8 36 b1 38 5d ff ff 0"" , ""fast 2nd level codes and too far back"" , 0 , - 8 , 258 , Z_DATA_ERROR )"	652:4:24091:24239	11238452	36	True				
ANR	11238528	CallExpression	"inf ( ""d c7 1 ae eb 38 c 4 41 a0 87 72 de df fb 1f b8 36 b1 38 5d ff ff 0"" , ""fast 2nd level codes and too far back"" , 0 , - 8 , 258 , Z_DATA_ERROR )"		11238452	0					
ANR	11238529	Callee	inf		11238452	0					
ANR	11238530	Identifier	inf		11238452	0					
ANR	11238531	ArgumentList	"""d c7 1 ae eb 38 c 4 41 a0 87 72 de df fb 1f b8 36 b1 38 5d ff ff 0"""		11238452	1					
ANR	11238532	Argument	"""d c7 1 ae eb 38 c 4 41 a0 87 72 de df fb 1f b8 36 b1 38 5d ff ff 0"""		11238452	0					
ANR	11238533	PrimaryExpression	"""d c7 1 ae eb 38 c 4 41 a0 87 72 de df fb 1f b8 36 b1 38 5d ff ff 0"""		11238452	0					
ANR	11238534	Argument	"""fast 2nd level codes and too far back"""		11238452	1					
ANR	11238535	PrimaryExpression	"""fast 2nd level codes and too far back"""		11238452	0					
ANR	11238536	Argument	0		11238452	2					
ANR	11238537	PrimaryExpression	0		11238452	0					
ANR	11238538	Argument	- 8		11238452	3					
ANR	11238539	UnaryOperationExpression	- 8		11238452	0					
ANR	11238540	UnaryOperator	-		11238452	0					
ANR	11238541	PrimaryExpression	8		11238452	1					
ANR	11238542	Argument	258		11238452	4					
ANR	11238543	PrimaryExpression	258		11238452	0					
ANR	11238544	Argument	Z_DATA_ERROR		11238452	5					
ANR	11238545	Identifier	Z_DATA_ERROR		11238452	0					
ANR	11238546	ExpressionStatement	"inf ( ""63 18 5 8c 10 8 0 0 0 0"" , ""very common case"" , 0 , - 8 , 259 , Z_OK )"	654:4:24245:24313	11238452	37	True				
ANR	11238547	CallExpression	"inf ( ""63 18 5 8c 10 8 0 0 0 0"" , ""very common case"" , 0 , - 8 , 259 , Z_OK )"		11238452	0					
ANR	11238548	Callee	inf		11238452	0					
ANR	11238549	Identifier	inf		11238452	0					
ANR	11238550	ArgumentList	"""63 18 5 8c 10 8 0 0 0 0"""		11238452	1					
ANR	11238551	Argument	"""63 18 5 8c 10 8 0 0 0 0"""		11238452	0					
ANR	11238552	PrimaryExpression	"""63 18 5 8c 10 8 0 0 0 0"""		11238452	0					
ANR	11238553	Argument	"""very common case"""		11238452	1					
ANR	11238554	PrimaryExpression	"""very common case"""		11238452	0					
ANR	11238555	Argument	0		11238452	2					
ANR	11238556	PrimaryExpression	0		11238452	0					
ANR	11238557	Argument	- 8		11238452	3					
ANR	11238558	UnaryOperationExpression	- 8		11238452	0					
ANR	11238559	UnaryOperator	-		11238452	0					
ANR	11238560	PrimaryExpression	8		11238452	1					
ANR	11238561	Argument	259		11238452	4					
ANR	11238562	PrimaryExpression	259		11238452	0					
ANR	11238563	Argument	Z_OK		11238452	5					
ANR	11238564	Identifier	Z_OK		11238452	0					
ANR	11238565	ExpressionStatement	"inf ( ""63 60 60 18 c9 0 8 18 18 18 26 c0 28 0 29 0 0 0"" , ""contiguous and wrap around window"" , 6 , - 8 , 259 , Z_OK )"	655:4:24319:24436	11238452	38	True				
ANR	11238566	CallExpression	"inf ( ""63 60 60 18 c9 0 8 18 18 18 26 c0 28 0 29 0 0 0"" , ""contiguous and wrap around window"" , 6 , - 8 , 259 , Z_OK )"		11238452	0					
ANR	11238567	Callee	inf		11238452	0					
ANR	11238568	Identifier	inf		11238452	0					
ANR	11238569	ArgumentList	"""63 60 60 18 c9 0 8 18 18 18 26 c0 28 0 29 0 0 0"""		11238452	1					
ANR	11238570	Argument	"""63 60 60 18 c9 0 8 18 18 18 26 c0 28 0 29 0 0 0"""		11238452	0					
ANR	11238571	PrimaryExpression	"""63 60 60 18 c9 0 8 18 18 18 26 c0 28 0 29 0 0 0"""		11238452	0					
ANR	11238572	Argument	"""contiguous and wrap around window"""		11238452	1					
ANR	11238573	PrimaryExpression	"""contiguous and wrap around window"""		11238452	0					
ANR	11238574	Argument	6		11238452	2					
ANR	11238575	PrimaryExpression	6		11238452	0					
ANR	11238576	Argument	- 8		11238452	3					
ANR	11238577	UnaryOperationExpression	- 8		11238452	0					
ANR	11238578	UnaryOperator	-		11238452	0					
ANR	11238579	PrimaryExpression	8		11238452	1					
ANR	11238580	Argument	259		11238452	4					
ANR	11238581	PrimaryExpression	259		11238452	0					
ANR	11238582	Argument	Z_OK		11238452	5					
ANR	11238583	Identifier	Z_OK		11238452	0					
ANR	11238584	ExpressionStatement	"inf ( ""63 0 3 0 0 0 0 0"" , ""copy direct from output"" , 0 , - 8 , 259 , Z_STREAM_END )"	657:4:24442:24526	11238452	39	True				
ANR	11238585	CallExpression	"inf ( ""63 0 3 0 0 0 0 0"" , ""copy direct from output"" , 0 , - 8 , 259 , Z_STREAM_END )"		11238452	0					
ANR	11238586	Callee	inf		11238452	0					
ANR	11238587	Identifier	inf		11238452	0					
ANR	11238588	ArgumentList	"""63 0 3 0 0 0 0 0"""		11238452	1					
ANR	11238589	Argument	"""63 0 3 0 0 0 0 0"""		11238452	0					
ANR	11238590	PrimaryExpression	"""63 0 3 0 0 0 0 0"""		11238452	0					
ANR	11238591	Argument	"""copy direct from output"""		11238452	1					
ANR	11238592	PrimaryExpression	"""copy direct from output"""		11238452	0					
ANR	11238593	Argument	0		11238452	2					
ANR	11238594	PrimaryExpression	0		11238452	0					
ANR	11238595	Argument	- 8		11238452	3					
ANR	11238596	UnaryOperationExpression	- 8		11238452	0					
ANR	11238597	UnaryOperator	-		11238452	0					
ANR	11238598	PrimaryExpression	8		11238452	1					
ANR	11238599	Argument	259		11238452	4					
ANR	11238600	PrimaryExpression	259		11238452	0					
ANR	11238601	Argument	Z_STREAM_END		11238452	5					
ANR	11238602	Identifier	Z_STREAM_END		11238452	0					
ANR	11238603	ReturnType	local void		11238452	1					
ANR	11238604	Identifier	cover_fast		11238452	2					
ANR	11238605	ParameterList			11238452	3					
ANR	11238606	CFGEntryNode	ENTRY		11238452		True				
ANR	11238607	CFGExitNode	EXIT		11238452		True				
ANR	11238608	Symbol	Z_DATA_ERROR		11238452						
ANR	11238609	Symbol	Z_STREAM_END		11238452						
ANR	11238610	Symbol	Z_OK		11238452						
ANR	11238611	Function	main	661:0:24531:24721							
ANR	11238612	FunctionDef	main ()		11238611	0					
ANR	11238613	CompoundStatement		662:0:24546:24721	11238611	0					
ANR	11238614	ExpressionStatement	"fprintf ( stderr , ""%s\\n"" , zlibVersion ( ) )"	663:4:24552:24590	11238611	0	True				
ANR	11238615	CallExpression	"fprintf ( stderr , ""%s\\n"" , zlibVersion ( ) )"		11238611	0					
ANR	11238616	Callee	fprintf		11238611	0					
ANR	11238617	Identifier	fprintf		11238611	0					
ANR	11238618	ArgumentList	stderr		11238611	1					
ANR	11238619	Argument	stderr		11238611	0					
ANR	11238620	Identifier	stderr		11238611	0					
ANR	11238621	Argument	"""%s\\n"""		11238611	1					
ANR	11238622	PrimaryExpression	"""%s\\n"""		11238611	0					
ANR	11238623	Argument	zlibVersion ( )		11238611	2					
ANR	11238624	CallExpression	zlibVersion ( )		11238611	0					
ANR	11238625	Callee	zlibVersion		11238611	0					
ANR	11238626	Identifier	zlibVersion		11238611	0					
ANR	11238627	ArgumentList			11238611	1					
ANR	11238628	ExpressionStatement	cover_support ( )	664:4:24596:24611	11238611	1	True				
ANR	11238629	CallExpression	cover_support ( )		11238611	0					
ANR	11238630	Callee	cover_support		11238611	0					
ANR	11238631	Identifier	cover_support		11238611	0					
ANR	11238632	ArgumentList			11238611	1					
ANR	11238633	ExpressionStatement	cover_wrap ( )	665:4:24617:24629	11238611	2	True				
ANR	11238634	CallExpression	cover_wrap ( )		11238611	0					
ANR	11238635	Callee	cover_wrap		11238611	0					
ANR	11238636	Identifier	cover_wrap		11238611	0					
ANR	11238637	ArgumentList			11238611	1					
ANR	11238638	ExpressionStatement	cover_back ( )	666:4:24635:24647	11238611	3	True				
ANR	11238639	CallExpression	cover_back ( )		11238611	0					
ANR	11238640	Callee	cover_back		11238611	0					
ANR	11238641	Identifier	cover_back		11238611	0					
ANR	11238642	ArgumentList			11238611	1					
ANR	11238643	ExpressionStatement	cover_inflate ( )	667:4:24653:24668	11238611	4	True				
ANR	11238644	CallExpression	cover_inflate ( )		11238611	0					
ANR	11238645	Callee	cover_inflate		11238611	0					
ANR	11238646	Identifier	cover_inflate		11238611	0					
ANR	11238647	ArgumentList			11238611	1					
ANR	11238648	ExpressionStatement	cover_trees ( )	668:4:24674:24687	11238611	5	True				
ANR	11238649	CallExpression	cover_trees ( )		11238611	0					
ANR	11238650	Callee	cover_trees		11238611	0					
ANR	11238651	Identifier	cover_trees		11238611	0					
ANR	11238652	ArgumentList			11238611	1					
ANR	11238653	ExpressionStatement	cover_fast ( )	669:4:24693:24705	11238611	6	True				
ANR	11238654	CallExpression	cover_fast ( )		11238611	0					
ANR	11238655	Callee	cover_fast		11238611	0					
ANR	11238656	Identifier	cover_fast		11238611	0					
ANR	11238657	ArgumentList			11238611	1					
ANR	11238658	ReturnStatement	return 0 ;	670:4:24711:24719	11238611	7	True				
ANR	11238659	PrimaryExpression	0		11238611	0					
ANR	11238660	ReturnType	int		11238611	1					
ANR	11238661	Identifier	main		11238611	2					
ANR	11238662	ParameterList			11238611	3					
ANR	11238663	CFGEntryNode	ENTRY		11238611		True				
ANR	11238664	CFGExitNode	EXIT		11238611		True				
ANR	11238665	Symbol	zlibVersion		11238611						
ANR	11238666	Symbol	stderr		11238611						
