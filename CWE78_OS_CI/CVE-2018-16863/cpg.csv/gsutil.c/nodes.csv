command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5353015	File	data/converged/CVE-2018-16863_ghostpdl/gsutil.c								
ANR	5353016	Function	gs_next_ids	32:0:932:1090							
ANR	5353017	FunctionDef	"gs_next_ids (const gs_memory_t * mem , uint count)"		5353016	0					
ANR	5353018	CompoundStatement		34:0:986:1090	5353016	0					
ANR	5353019	IdentifierDeclStatement	ulong id = mem -> gs_lib_ctx -> gs_next_id ;	35:4:992:1030	5353016	0	True				
ANR	5353020	IdentifierDecl	id = mem -> gs_lib_ctx -> gs_next_id		5353016	0					
ANR	5353021	IdentifierDeclType	ulong		5353016	0					
ANR	5353022	Identifier	id		5353016	1					
ANR	5353023	AssignmentExpression	id = mem -> gs_lib_ctx -> gs_next_id		5353016	2		=			
ANR	5353024	Identifier	id		5353016	0					
ANR	5353025	PtrMemberAccess	mem -> gs_lib_ctx -> gs_next_id		5353016	1					
ANR	5353026	PtrMemberAccess	mem -> gs_lib_ctx		5353016	0					
ANR	5353027	Identifier	mem		5353016	0					
ANR	5353028	Identifier	gs_lib_ctx		5353016	1					
ANR	5353029	Identifier	gs_next_id		5353016	1					
ANR	5353030	ExpressionStatement	mem -> gs_lib_ctx -> gs_next_id += count	37:4:1037:1073	5353016	1	True				
ANR	5353031	AssignmentExpression	mem -> gs_lib_ctx -> gs_next_id += count		5353016	0		+=			
ANR	5353032	PtrMemberAccess	mem -> gs_lib_ctx -> gs_next_id		5353016	0					
ANR	5353033	PtrMemberAccess	mem -> gs_lib_ctx		5353016	0					
ANR	5353034	Identifier	mem		5353016	0					
ANR	5353035	Identifier	gs_lib_ctx		5353016	1					
ANR	5353036	Identifier	gs_next_id		5353016	1					
ANR	5353037	Identifier	count		5353016	1					
ANR	5353038	ReturnStatement	return id ;	38:4:1079:1088	5353016	2	True				
ANR	5353039	Identifier	id		5353016	0					
ANR	5353040	ReturnType	ulong		5353016	1					
ANR	5353041	Identifier	gs_next_ids		5353016	2					
ANR	5353042	ParameterList	"const gs_memory_t * mem , uint count"		5353016	3					
ANR	5353043	Parameter	const gs_memory_t * mem	33:12:950:971	5353016	0	True				
ANR	5353044	ParameterType	const gs_memory_t *		5353016	0					
ANR	5353045	Identifier	mem		5353016	1					
ANR	5353046	Parameter	uint count	33:36:974:983	5353016	1	True				
ANR	5353047	ParameterType	uint		5353016	0					
ANR	5353048	Identifier	count		5353016	1					
ANR	5353049	CFGEntryNode	ENTRY		5353016		True				
ANR	5353050	CFGExitNode	EXIT		5353016		True				
ANR	5353051	Symbol	mem		5353016						
ANR	5353052	Symbol	count		5353016						
ANR	5353053	Symbol	* * mem		5353016						
ANR	5353054	Symbol	id		5353016						
ANR	5353055	Symbol	* mem -> gs_lib_ctx		5353016						
ANR	5353056	Symbol	mem -> gs_lib_ctx		5353016						
ANR	5353057	Symbol	mem -> gs_lib_ctx -> gs_next_id		5353016						
ANR	5353058	Symbol	* mem		5353016						
ANR	5353059	Function	memflip8x8	46:0:1266:3360							
ANR	5353060	FunctionDef	"memflip8x8 (const byte * inp , int line_size , byte * outp , int dist)"		5353059	0					
ANR	5353061	CompoundStatement		48:0:1338:3360	5353059	0					
ANR	5353062	IdentifierDeclStatement	"uint aceg , bdfh ;"	49:4:1344:1359	5353059	0	True				
ANR	5353063	IdentifierDecl	aceg		5353059	0					
ANR	5353064	IdentifierDeclType	uint		5353059	0					
ANR	5353065	Identifier	aceg		5353059	1					
ANR	5353066	IdentifierDecl	bdfh		5353059	1					
ANR	5353067	IdentifierDeclType	uint		5353059	0					
ANR	5353068	Identifier	bdfh		5353059	1					
ANR	5353069	CompoundStatement		6:8:88:118	5353059	1					
ANR	5353070	IdentifierDeclStatement	const byte * ptr4 = inp + ( line_size << 2 ) ;	52:8:1376:1417	5353059	0	True				
ANR	5353071	IdentifierDecl	* ptr4 = inp + ( line_size << 2 )		5353059	0					
ANR	5353072	IdentifierDeclType	const byte *		5353059	0					
ANR	5353073	Identifier	ptr4		5353059	1					
ANR	5353074	AssignmentExpression	* ptr4 = inp + ( line_size << 2 )		5353059	2		=			
ANR	5353075	Identifier	ptr4		5353059	0					
ANR	5353076	AdditiveExpression	inp + ( line_size << 2 )		5353059	1		+			
ANR	5353077	Identifier	inp		5353059	0					
ANR	5353078	ShiftExpression	line_size << 2		5353059	1		<<			
ANR	5353079	Identifier	line_size		5353059	0					
ANR	5353080	PrimaryExpression	2		5353059	1					
ANR	5353081	IdentifierDeclStatement	const int ls2 = line_size << 1 ;	53:8:1427:1457	5353059	1	True				
ANR	5353082	IdentifierDecl	ls2 = line_size << 1		5353059	0					
ANR	5353083	IdentifierDeclType	const int		5353059	0					
ANR	5353084	Identifier	ls2		5353059	1					
ANR	5353085	AssignmentExpression	ls2 = line_size << 1		5353059	2		=			
ANR	5353086	Identifier	ls2		5353059	0					
ANR	5353087	ShiftExpression	line_size << 1		5353059	1		<<			
ANR	5353088	Identifier	line_size		5353059	0					
ANR	5353089	PrimaryExpression	1		5353059	1					
ANR	5353090	ExpressionStatement	aceg = ( ( uint ) * inp ) | ( ( uint ) inp [ ls2 ] << 8 ) | ( ( uint ) * ptr4 << 16 ) | ( ( uint ) ptr4 [ ls2 ] << 24 )	55:8:1468:1571	5353059	2	True				
ANR	5353091	AssignmentExpression	aceg = ( ( uint ) * inp ) | ( ( uint ) inp [ ls2 ] << 8 ) | ( ( uint ) * ptr4 << 16 ) | ( ( uint ) ptr4 [ ls2 ] << 24 )		5353059	0		=			
ANR	5353092	Identifier	aceg		5353059	0					
ANR	5353093	InclusiveOrExpression	( ( uint ) * inp ) | ( ( uint ) inp [ ls2 ] << 8 ) | ( ( uint ) * ptr4 << 16 ) | ( ( uint ) ptr4 [ ls2 ] << 24 )		5353059	1		|			
ANR	5353094	CastExpression	( uint ) * inp		5353059	0					
ANR	5353095	CastTarget	uint		5353059	0					
ANR	5353096	UnaryOperationExpression	* inp		5353059	1					
ANR	5353097	UnaryOperator	*		5353059	0					
ANR	5353098	Identifier	inp		5353059	1					
ANR	5353099	InclusiveOrExpression	( ( uint ) inp [ ls2 ] << 8 ) | ( ( uint ) * ptr4 << 16 ) | ( ( uint ) ptr4 [ ls2 ] << 24 )		5353059	1		|			
ANR	5353100	ShiftExpression	( uint ) inp [ ls2 ] << 8		5353059	0		<<			
ANR	5353101	CastExpression	( uint ) inp [ ls2 ]		5353059	0					
ANR	5353102	CastTarget	uint		5353059	0					
ANR	5353103	ArrayIndexing	inp [ ls2 ]		5353059	1					
ANR	5353104	Identifier	inp		5353059	0					
ANR	5353105	Identifier	ls2		5353059	1					
ANR	5353106	PrimaryExpression	8		5353059	1					
ANR	5353107	InclusiveOrExpression	( ( uint ) * ptr4 << 16 ) | ( ( uint ) ptr4 [ ls2 ] << 24 )		5353059	1		|			
ANR	5353108	ShiftExpression	( uint ) * ptr4 << 16		5353059	0		<<			
ANR	5353109	CastExpression	( uint ) * ptr4		5353059	0					
ANR	5353110	CastTarget	uint		5353059	0					
ANR	5353111	UnaryOperationExpression	* ptr4		5353059	1					
ANR	5353112	UnaryOperator	*		5353059	0					
ANR	5353113	Identifier	ptr4		5353059	1					
ANR	5353114	PrimaryExpression	16		5353059	1					
ANR	5353115	ShiftExpression	( uint ) ptr4 [ ls2 ] << 24		5353059	1		<<			
ANR	5353116	CastExpression	( uint ) ptr4 [ ls2 ]		5353059	0					
ANR	5353117	CastTarget	uint		5353059	0					
ANR	5353118	ArrayIndexing	ptr4 [ ls2 ]		5353059	1					
ANR	5353119	Identifier	ptr4		5353059	0					
ANR	5353120	Identifier	ls2		5353059	1					
ANR	5353121	PrimaryExpression	24		5353059	1					
ANR	5353122	ExpressionStatement	"inp += line_size , ptr4 += line_size"	57:8:1581:1616	5353059	3	True				
ANR	5353123	Expression	"inp += line_size , ptr4 += line_size"		5353059	0					
ANR	5353124	AssignmentExpression	inp += line_size		5353059	0		+=			
ANR	5353125	Identifier	inp		5353059	0					
ANR	5353126	Identifier	line_size		5353059	1					
ANR	5353127	AssignmentExpression	ptr4 += line_size		5353059	1		+=			
ANR	5353128	Identifier	ptr4		5353059	0					
ANR	5353129	Identifier	line_size		5353059	1					
ANR	5353130	ExpressionStatement	bdfh = ( ( uint ) * inp ) | ( ( uint ) inp [ ls2 ] << 8 ) | ( ( uint ) * ptr4 << 16 ) | ( ( uint ) ptr4 [ ls2 ] << 24 )	58:8:1626:1729	5353059	4	True				
ANR	5353131	AssignmentExpression	bdfh = ( ( uint ) * inp ) | ( ( uint ) inp [ ls2 ] << 8 ) | ( ( uint ) * ptr4 << 16 ) | ( ( uint ) ptr4 [ ls2 ] << 24 )		5353059	0		=			
ANR	5353132	Identifier	bdfh		5353059	0					
ANR	5353133	InclusiveOrExpression	( ( uint ) * inp ) | ( ( uint ) inp [ ls2 ] << 8 ) | ( ( uint ) * ptr4 << 16 ) | ( ( uint ) ptr4 [ ls2 ] << 24 )		5353059	1		|			
ANR	5353134	CastExpression	( uint ) * inp		5353059	0					
ANR	5353135	CastTarget	uint		5353059	0					
ANR	5353136	UnaryOperationExpression	* inp		5353059	1					
ANR	5353137	UnaryOperator	*		5353059	0					
ANR	5353138	Identifier	inp		5353059	1					
ANR	5353139	InclusiveOrExpression	( ( uint ) inp [ ls2 ] << 8 ) | ( ( uint ) * ptr4 << 16 ) | ( ( uint ) ptr4 [ ls2 ] << 24 )		5353059	1		|			
ANR	5353140	ShiftExpression	( uint ) inp [ ls2 ] << 8		5353059	0		<<			
ANR	5353141	CastExpression	( uint ) inp [ ls2 ]		5353059	0					
ANR	5353142	CastTarget	uint		5353059	0					
ANR	5353143	ArrayIndexing	inp [ ls2 ]		5353059	1					
ANR	5353144	Identifier	inp		5353059	0					
ANR	5353145	Identifier	ls2		5353059	1					
ANR	5353146	PrimaryExpression	8		5353059	1					
ANR	5353147	InclusiveOrExpression	( ( uint ) * ptr4 << 16 ) | ( ( uint ) ptr4 [ ls2 ] << 24 )		5353059	1		|			
ANR	5353148	ShiftExpression	( uint ) * ptr4 << 16		5353059	0		<<			
ANR	5353149	CastExpression	( uint ) * ptr4		5353059	0					
ANR	5353150	CastTarget	uint		5353059	0					
ANR	5353151	UnaryOperationExpression	* ptr4		5353059	1					
ANR	5353152	UnaryOperator	*		5353059	0					
ANR	5353153	Identifier	ptr4		5353059	1					
ANR	5353154	PrimaryExpression	16		5353059	1					
ANR	5353155	ShiftExpression	( uint ) ptr4 [ ls2 ] << 24		5353059	1		<<			
ANR	5353156	CastExpression	( uint ) ptr4 [ ls2 ]		5353059	0					
ANR	5353157	CastTarget	uint		5353059	0					
ANR	5353158	ArrayIndexing	ptr4 [ ls2 ]		5353059	1					
ANR	5353159	Identifier	ptr4		5353059	0					
ANR	5353160	Identifier	ls2		5353059	1					
ANR	5353161	PrimaryExpression	24		5353059	1					
ANR	5353162	IfStatement	if ( aceg == bdfh && ( aceg >> 8 ) == ( aceg & 0xffffff ) )		5353059	2					
ANR	5353163	Condition	aceg == bdfh && ( aceg >> 8 ) == ( aceg & 0xffffff )	64:8:1868:1915	5353059	0	True				
ANR	5353164	AndExpression	aceg == bdfh && ( aceg >> 8 ) == ( aceg & 0xffffff )		5353059	0		&&			
ANR	5353165	EqualityExpression	aceg == bdfh		5353059	0		==			
ANR	5353166	Identifier	aceg		5353059	0					
ANR	5353167	Identifier	bdfh		5353059	1					
ANR	5353168	EqualityExpression	( aceg >> 8 ) == ( aceg & 0xffffff )		5353059	1		==			
ANR	5353169	ShiftExpression	aceg >> 8		5353059	0		>>			
ANR	5353170	Identifier	aceg		5353059	0					
ANR	5353171	PrimaryExpression	8		5353059	1					
ANR	5353172	BitAndExpression	aceg & 0xffffff		5353059	1		&			
ANR	5353173	Identifier	aceg		5353059	0					
ANR	5353174	PrimaryExpression	0xffffff		5353059	1					
ANR	5353175	CompoundStatement		17:58:579:579	5353059	1					
ANR	5353176	IfStatement	if ( aceg == 0 || aceg == 0xffffffff )		5353059	0					
ANR	5353177	Condition	aceg == 0 || aceg == 0xffffffff	65:12:1932:1962	5353059	0	True				
ANR	5353178	OrExpression	aceg == 0 || aceg == 0xffffffff		5353059	0		||			
ANR	5353179	EqualityExpression	aceg == 0		5353059	0		==			
ANR	5353180	Identifier	aceg		5353059	0					
ANR	5353181	PrimaryExpression	0		5353059	1					
ANR	5353182	EqualityExpression	aceg == 0xffffffff		5353059	1		==			
ANR	5353183	Identifier	aceg		5353059	0					
ANR	5353184	PrimaryExpression	0xffffffff		5353059	1					
ANR	5353185	GotoStatement	goto store ;	66:12:1977:1987	5353059	1	True				
ANR	5353186	Identifier	store		5353059	0					
ANR	5353187	ExpressionStatement	* outp = ( byte ) - ( int ) ( ( aceg >> 7 ) & 1 )	67:8:1997:2034	5353059	1	True				
ANR	5353188	AssignmentExpression	* outp = ( byte ) - ( int ) ( ( aceg >> 7 ) & 1 )		5353059	0		=			
ANR	5353189	UnaryOperationExpression	* outp		5353059	0					
ANR	5353190	UnaryOperator	*		5353059	0					
ANR	5353191	Identifier	outp		5353059	1					
ANR	5353192	CastExpression	( byte ) - ( int ) ( ( aceg >> 7 ) & 1 )		5353059	1					
ANR	5353193	CastTarget	byte		5353059	0					
ANR	5353194	UnaryOperationExpression	- ( int ) ( ( aceg >> 7 ) & 1 )		5353059	1					
ANR	5353195	UnaryOperator	-		5353059	0					
ANR	5353196	CastExpression	( int ) ( ( aceg >> 7 ) & 1 )		5353059	1					
ANR	5353197	CastTarget	int		5353059	0					
ANR	5353198	BitAndExpression	( aceg >> 7 ) & 1		5353059	1		&			
ANR	5353199	ShiftExpression	aceg >> 7		5353059	0		>>			
ANR	5353200	Identifier	aceg		5353059	0					
ANR	5353201	PrimaryExpression	7		5353059	1					
ANR	5353202	PrimaryExpression	1		5353059	1					
ANR	5353203	ExpressionStatement	outp [ dist ] = ( byte ) - ( int ) ( ( aceg >> 6 ) & 1 )	68:8:2044:2086	5353059	2	True				
ANR	5353204	AssignmentExpression	outp [ dist ] = ( byte ) - ( int ) ( ( aceg >> 6 ) & 1 )		5353059	0		=			
ANR	5353205	ArrayIndexing	outp [ dist ]		5353059	0					
ANR	5353206	Identifier	outp		5353059	0					
ANR	5353207	Identifier	dist		5353059	1					
ANR	5353208	CastExpression	( byte ) - ( int ) ( ( aceg >> 6 ) & 1 )		5353059	1					
ANR	5353209	CastTarget	byte		5353059	0					
ANR	5353210	UnaryOperationExpression	- ( int ) ( ( aceg >> 6 ) & 1 )		5353059	1					
ANR	5353211	UnaryOperator	-		5353059	0					
ANR	5353212	CastExpression	( int ) ( ( aceg >> 6 ) & 1 )		5353059	1					
ANR	5353213	CastTarget	int		5353059	0					
ANR	5353214	BitAndExpression	( aceg >> 6 ) & 1		5353059	1		&			
ANR	5353215	ShiftExpression	aceg >> 6		5353059	0		>>			
ANR	5353216	Identifier	aceg		5353059	0					
ANR	5353217	PrimaryExpression	6		5353059	1					
ANR	5353218	PrimaryExpression	1		5353059	1					
ANR	5353219	ExpressionStatement	outp += dist << 1	69:8:2096:2113	5353059	3	True				
ANR	5353220	AssignmentExpression	outp += dist << 1		5353059	0		+=			
ANR	5353221	Identifier	outp		5353059	0					
ANR	5353222	ShiftExpression	dist << 1		5353059	1		<<			
ANR	5353223	Identifier	dist		5353059	0					
ANR	5353224	PrimaryExpression	1		5353059	1					
ANR	5353225	ExpressionStatement	* outp = ( byte ) - ( int ) ( ( aceg >> 5 ) & 1 )	70:8:2123:2160	5353059	4	True				
ANR	5353226	AssignmentExpression	* outp = ( byte ) - ( int ) ( ( aceg >> 5 ) & 1 )		5353059	0		=			
ANR	5353227	UnaryOperationExpression	* outp		5353059	0					
ANR	5353228	UnaryOperator	*		5353059	0					
ANR	5353229	Identifier	outp		5353059	1					
ANR	5353230	CastExpression	( byte ) - ( int ) ( ( aceg >> 5 ) & 1 )		5353059	1					
ANR	5353231	CastTarget	byte		5353059	0					
ANR	5353232	UnaryOperationExpression	- ( int ) ( ( aceg >> 5 ) & 1 )		5353059	1					
ANR	5353233	UnaryOperator	-		5353059	0					
ANR	5353234	CastExpression	( int ) ( ( aceg >> 5 ) & 1 )		5353059	1					
ANR	5353235	CastTarget	int		5353059	0					
ANR	5353236	BitAndExpression	( aceg >> 5 ) & 1		5353059	1		&			
ANR	5353237	ShiftExpression	aceg >> 5		5353059	0		>>			
ANR	5353238	Identifier	aceg		5353059	0					
ANR	5353239	PrimaryExpression	5		5353059	1					
ANR	5353240	PrimaryExpression	1		5353059	1					
ANR	5353241	ExpressionStatement	outp [ dist ] = ( byte ) - ( int ) ( ( aceg >> 4 ) & 1 )	71:8:2170:2212	5353059	5	True				
ANR	5353242	AssignmentExpression	outp [ dist ] = ( byte ) - ( int ) ( ( aceg >> 4 ) & 1 )		5353059	0		=			
ANR	5353243	ArrayIndexing	outp [ dist ]		5353059	0					
ANR	5353244	Identifier	outp		5353059	0					
ANR	5353245	Identifier	dist		5353059	1					
ANR	5353246	CastExpression	( byte ) - ( int ) ( ( aceg >> 4 ) & 1 )		5353059	1					
ANR	5353247	CastTarget	byte		5353059	0					
ANR	5353248	UnaryOperationExpression	- ( int ) ( ( aceg >> 4 ) & 1 )		5353059	1					
ANR	5353249	UnaryOperator	-		5353059	0					
ANR	5353250	CastExpression	( int ) ( ( aceg >> 4 ) & 1 )		5353059	1					
ANR	5353251	CastTarget	int		5353059	0					
ANR	5353252	BitAndExpression	( aceg >> 4 ) & 1		5353059	1		&			
ANR	5353253	ShiftExpression	aceg >> 4		5353059	0		>>			
ANR	5353254	Identifier	aceg		5353059	0					
ANR	5353255	PrimaryExpression	4		5353059	1					
ANR	5353256	PrimaryExpression	1		5353059	1					
ANR	5353257	ExpressionStatement	outp += dist << 1	72:8:2222:2239	5353059	6	True				
ANR	5353258	AssignmentExpression	outp += dist << 1		5353059	0		+=			
ANR	5353259	Identifier	outp		5353059	0					
ANR	5353260	ShiftExpression	dist << 1		5353059	1		<<			
ANR	5353261	Identifier	dist		5353059	0					
ANR	5353262	PrimaryExpression	1		5353059	1					
ANR	5353263	ExpressionStatement	* outp = ( byte ) - ( int ) ( ( aceg >> 3 ) & 1 )	73:8:2249:2286	5353059	7	True				
ANR	5353264	AssignmentExpression	* outp = ( byte ) - ( int ) ( ( aceg >> 3 ) & 1 )		5353059	0		=			
ANR	5353265	UnaryOperationExpression	* outp		5353059	0					
ANR	5353266	UnaryOperator	*		5353059	0					
ANR	5353267	Identifier	outp		5353059	1					
ANR	5353268	CastExpression	( byte ) - ( int ) ( ( aceg >> 3 ) & 1 )		5353059	1					
ANR	5353269	CastTarget	byte		5353059	0					
ANR	5353270	UnaryOperationExpression	- ( int ) ( ( aceg >> 3 ) & 1 )		5353059	1					
ANR	5353271	UnaryOperator	-		5353059	0					
ANR	5353272	CastExpression	( int ) ( ( aceg >> 3 ) & 1 )		5353059	1					
ANR	5353273	CastTarget	int		5353059	0					
ANR	5353274	BitAndExpression	( aceg >> 3 ) & 1		5353059	1		&			
ANR	5353275	ShiftExpression	aceg >> 3		5353059	0		>>			
ANR	5353276	Identifier	aceg		5353059	0					
ANR	5353277	PrimaryExpression	3		5353059	1					
ANR	5353278	PrimaryExpression	1		5353059	1					
ANR	5353279	ExpressionStatement	outp [ dist ] = ( byte ) - ( int ) ( ( aceg >> 2 ) & 1 )	74:8:2296:2338	5353059	8	True				
ANR	5353280	AssignmentExpression	outp [ dist ] = ( byte ) - ( int ) ( ( aceg >> 2 ) & 1 )		5353059	0		=			
ANR	5353281	ArrayIndexing	outp [ dist ]		5353059	0					
ANR	5353282	Identifier	outp		5353059	0					
ANR	5353283	Identifier	dist		5353059	1					
ANR	5353284	CastExpression	( byte ) - ( int ) ( ( aceg >> 2 ) & 1 )		5353059	1					
ANR	5353285	CastTarget	byte		5353059	0					
ANR	5353286	UnaryOperationExpression	- ( int ) ( ( aceg >> 2 ) & 1 )		5353059	1					
ANR	5353287	UnaryOperator	-		5353059	0					
ANR	5353288	CastExpression	( int ) ( ( aceg >> 2 ) & 1 )		5353059	1					
ANR	5353289	CastTarget	int		5353059	0					
ANR	5353290	BitAndExpression	( aceg >> 2 ) & 1		5353059	1		&			
ANR	5353291	ShiftExpression	aceg >> 2		5353059	0		>>			
ANR	5353292	Identifier	aceg		5353059	0					
ANR	5353293	PrimaryExpression	2		5353059	1					
ANR	5353294	PrimaryExpression	1		5353059	1					
ANR	5353295	ExpressionStatement	outp += dist << 1	75:8:2348:2365	5353059	9	True				
ANR	5353296	AssignmentExpression	outp += dist << 1		5353059	0		+=			
ANR	5353297	Identifier	outp		5353059	0					
ANR	5353298	ShiftExpression	dist << 1		5353059	1		<<			
ANR	5353299	Identifier	dist		5353059	0					
ANR	5353300	PrimaryExpression	1		5353059	1					
ANR	5353301	ExpressionStatement	* outp = ( byte ) - ( int ) ( ( aceg >> 1 ) & 1 )	76:8:2375:2412	5353059	10	True				
ANR	5353302	AssignmentExpression	* outp = ( byte ) - ( int ) ( ( aceg >> 1 ) & 1 )		5353059	0		=			
ANR	5353303	UnaryOperationExpression	* outp		5353059	0					
ANR	5353304	UnaryOperator	*		5353059	0					
ANR	5353305	Identifier	outp		5353059	1					
ANR	5353306	CastExpression	( byte ) - ( int ) ( ( aceg >> 1 ) & 1 )		5353059	1					
ANR	5353307	CastTarget	byte		5353059	0					
ANR	5353308	UnaryOperationExpression	- ( int ) ( ( aceg >> 1 ) & 1 )		5353059	1					
ANR	5353309	UnaryOperator	-		5353059	0					
ANR	5353310	CastExpression	( int ) ( ( aceg >> 1 ) & 1 )		5353059	1					
ANR	5353311	CastTarget	int		5353059	0					
ANR	5353312	BitAndExpression	( aceg >> 1 ) & 1		5353059	1		&			
ANR	5353313	ShiftExpression	aceg >> 1		5353059	0		>>			
ANR	5353314	Identifier	aceg		5353059	0					
ANR	5353315	PrimaryExpression	1		5353059	1					
ANR	5353316	PrimaryExpression	1		5353059	1					
ANR	5353317	ExpressionStatement	outp [ dist ] = ( byte ) - ( int ) ( aceg & 1 )	77:8:2422:2457	5353059	11	True				
ANR	5353318	AssignmentExpression	outp [ dist ] = ( byte ) - ( int ) ( aceg & 1 )		5353059	0		=			
ANR	5353319	ArrayIndexing	outp [ dist ]		5353059	0					
ANR	5353320	Identifier	outp		5353059	0					
ANR	5353321	Identifier	dist		5353059	1					
ANR	5353322	CastExpression	( byte ) - ( int ) ( aceg & 1 )		5353059	1					
ANR	5353323	CastTarget	byte		5353059	0					
ANR	5353324	UnaryOperationExpression	- ( int ) ( aceg & 1 )		5353059	1					
ANR	5353325	UnaryOperator	-		5353059	0					
ANR	5353326	CastExpression	( int ) ( aceg & 1 )		5353059	1					
ANR	5353327	CastTarget	int		5353059	0					
ANR	5353328	BitAndExpression	aceg & 1		5353059	1		&			
ANR	5353329	Identifier	aceg		5353059	0					
ANR	5353330	PrimaryExpression	1		5353059	1					
ANR	5353331	ReturnStatement	return ;	78:8:2467:2473	5353059	12	True				
ANR	5353332	CompoundStatement		33:17:1161:1170	5353059	3					
ANR	5353333	Statement	register	80:8:2491:2498	5353059	0	True				
ANR	5353334	IdentifierDeclStatement	uint temp ;	80:17:2500:2509	5353059	1	True				
ANR	5353335	IdentifierDecl	temp		5353059	0					
ANR	5353336	IdentifierDeclType	uint		5353059	0					
ANR	5353337	Identifier	temp		5353059	1					
ANR	5353338	Statement	define	83:1:2564:2569	5353059	2	True				
ANR	5353339	Statement	TRANSPOSE	83:8:2571:2579	5353059	3	True				
ANR	5353340	Statement	(	83:17:2580:2580	5353059	4	True				
ANR	5353341	Statement	r	83:18:2581:2581	5353059	5	True				
ANR	5353342	Statement	","	83:19:2582:2582	5353059	6	True				
ANR	5353343	Statement	s	83:20:2583:2583	5353059	7	True				
ANR	5353344	Statement	","	83:21:2584:2584	5353059	8	True				
ANR	5353345	Statement	mask	83:22:2585:2588	5353059	9	True				
ANR	5353346	Statement	","	83:26:2589:2589	5353059	10	True				
ANR	5353347	Statement	shift	83:27:2590:2594	5353059	11	True				
ANR	5353348	Statement	)	83:32:2595:2595	5353059	12	True				
ANR	5353349	Statement	(	84:2:2600:2600	5353059	13	True				
ANR	5353350	Statement	r	84:3:2601:2601	5353059	14	True				
ANR	5353351	Statement	^=	84:5:2603:2604	5353059	15	True				
ANR	5353352	Statement	(	84:8:2606:2606	5353059	16	True				
ANR	5353353	Statement	temp	84:9:2607:2610	5353059	17	True				
ANR	5353354	Statement	=	84:14:2612:2612	5353059	18	True				
ANR	5353355	Statement	(	84:16:2614:2614	5353059	19	True				
ANR	5353356	Statement	(	84:17:2615:2615	5353059	20	True				
ANR	5353357	Statement	s	84:18:2616:2616	5353059	21	True				
ANR	5353358	Statement	>>	84:20:2618:2619	5353059	22	True				
ANR	5353359	Statement	shift	84:23:2621:2625	5353059	23	True				
ANR	5353360	Statement	)	84:28:2626:2626	5353059	24	True				
ANR	5353361	Statement	^	84:30:2628:2628	5353059	25	True				
ANR	5353362	Statement	r	84:32:2630:2630	5353059	26	True				
ANR	5353363	Statement	)	84:33:2631:2631	5353059	27	True				
ANR	5353364	Statement	&	84:35:2633:2633	5353059	28	True				
ANR	5353365	Statement	mask	84:37:2635:2638	5353059	29	True				
ANR	5353366	Statement	)	84:41:2639:2639	5353059	30	True				
ANR	5353367	Statement	","	84:42:2640:2640	5353059	31	True				
ANR	5353368	Statement	s	85:3:2646:2646	5353059	32	True				
ANR	5353369	Statement	^=	85:5:2648:2649	5353059	33	True				
ANR	5353370	Statement	temp	85:8:2651:2654	5353059	34	True				
ANR	5353371	Statement	<<	85:13:2656:2657	5353059	35	True				
ANR	5353372	Statement	shift	85:16:2659:2663	5353059	36	True				
ANR	5353373	Statement	)	85:21:2664:2664	5353059	37	True				
ANR	5353374	ExpressionStatement	"TRANSPOSE ( aceg , aceg , 0x00000f0f , 20 )"	88:8:2707:2744	5353059	38	True				
ANR	5353375	CallExpression	"TRANSPOSE ( aceg , aceg , 0x00000f0f , 20 )"		5353059	0					
ANR	5353376	Callee	TRANSPOSE		5353059	0					
ANR	5353377	Identifier	TRANSPOSE		5353059	0					
ANR	5353378	ArgumentList	aceg		5353059	1					
ANR	5353379	Argument	aceg		5353059	0					
ANR	5353380	Identifier	aceg		5353059	0					
ANR	5353381	Argument	aceg		5353059	1					
ANR	5353382	Identifier	aceg		5353059	0					
ANR	5353383	Argument	0x00000f0f		5353059	2					
ANR	5353384	PrimaryExpression	0x00000f0f		5353059	0					
ANR	5353385	Argument	20		5353059	3					
ANR	5353386	PrimaryExpression	20		5353059	0					
ANR	5353387	ExpressionStatement	"TRANSPOSE ( bdfh , bdfh , 0x00000f0f , 20 )"	89:8:2754:2791	5353059	39	True				
ANR	5353388	CallExpression	"TRANSPOSE ( bdfh , bdfh , 0x00000f0f , 20 )"		5353059	0					
ANR	5353389	Callee	TRANSPOSE		5353059	0					
ANR	5353390	Identifier	TRANSPOSE		5353059	0					
ANR	5353391	ArgumentList	bdfh		5353059	1					
ANR	5353392	Argument	bdfh		5353059	0					
ANR	5353393	Identifier	bdfh		5353059	0					
ANR	5353394	Argument	bdfh		5353059	1					
ANR	5353395	Identifier	bdfh		5353059	0					
ANR	5353396	Argument	0x00000f0f		5353059	2					
ANR	5353397	PrimaryExpression	0x00000f0f		5353059	0					
ANR	5353398	Argument	20		5353059	3					
ANR	5353399	PrimaryExpression	20		5353059	0					
ANR	5353400	ExpressionStatement	"TRANSPOSE ( aceg , aceg , 0x00330033 , 10 )"	92:8:2834:2871	5353059	40	True				
ANR	5353401	CallExpression	"TRANSPOSE ( aceg , aceg , 0x00330033 , 10 )"		5353059	0					
ANR	5353402	Callee	TRANSPOSE		5353059	0					
ANR	5353403	Identifier	TRANSPOSE		5353059	0					
ANR	5353404	ArgumentList	aceg		5353059	1					
ANR	5353405	Argument	aceg		5353059	0					
ANR	5353406	Identifier	aceg		5353059	0					
ANR	5353407	Argument	aceg		5353059	1					
ANR	5353408	Identifier	aceg		5353059	0					
ANR	5353409	Argument	0x00330033		5353059	2					
ANR	5353410	PrimaryExpression	0x00330033		5353059	0					
ANR	5353411	Argument	10		5353059	3					
ANR	5353412	PrimaryExpression	10		5353059	0					
ANR	5353413	ExpressionStatement	"TRANSPOSE ( bdfh , bdfh , 0x00330033 , 10 )"	93:8:2881:2918	5353059	41	True				
ANR	5353414	CallExpression	"TRANSPOSE ( bdfh , bdfh , 0x00330033 , 10 )"		5353059	0					
ANR	5353415	Callee	TRANSPOSE		5353059	0					
ANR	5353416	Identifier	TRANSPOSE		5353059	0					
ANR	5353417	ArgumentList	bdfh		5353059	1					
ANR	5353418	Argument	bdfh		5353059	0					
ANR	5353419	Identifier	bdfh		5353059	0					
ANR	5353420	Argument	bdfh		5353059	1					
ANR	5353421	Identifier	bdfh		5353059	0					
ANR	5353422	Argument	0x00330033		5353059	2					
ANR	5353423	PrimaryExpression	0x00330033		5353059	0					
ANR	5353424	Argument	10		5353059	3					
ANR	5353425	PrimaryExpression	10		5353059	0					
ANR	5353426	ExpressionStatement	"TRANSPOSE ( aceg , bdfh , 0x55555555 , 1 )"	96:8:2961:2997	5353059	42	True				
ANR	5353427	CallExpression	"TRANSPOSE ( aceg , bdfh , 0x55555555 , 1 )"		5353059	0					
ANR	5353428	Callee	TRANSPOSE		5353059	0					
ANR	5353429	Identifier	TRANSPOSE		5353059	0					
ANR	5353430	ArgumentList	aceg		5353059	1					
ANR	5353431	Argument	aceg		5353059	0					
ANR	5353432	Identifier	aceg		5353059	0					
ANR	5353433	Argument	bdfh		5353059	1					
ANR	5353434	Identifier	bdfh		5353059	0					
ANR	5353435	Argument	0x55555555		5353059	2					
ANR	5353436	PrimaryExpression	0x55555555		5353059	0					
ANR	5353437	Argument	1		5353059	3					
ANR	5353438	PrimaryExpression	1		5353059	0					
ANR	5353439	Statement	undef	98:1:3001:3005	5353059	43	True				
ANR	5353440	Statement	TRANSPOSE	98:7:3007:3015	5353059	44	True				
ANR	5353441	Label	store :	101:2:3026:3031	5353059	4	True				
ANR	5353442	Identifier	store		5353059	0					
ANR	5353443	ExpressionStatement	* outp = ( byte ) aceg	102:4:3037:3055	5353059	5	True				
ANR	5353444	AssignmentExpression	* outp = ( byte ) aceg		5353059	0		=			
ANR	5353445	UnaryOperationExpression	* outp		5353059	0					
ANR	5353446	UnaryOperator	*		5353059	0					
ANR	5353447	Identifier	outp		5353059	1					
ANR	5353448	CastExpression	( byte ) aceg		5353059	1					
ANR	5353449	CastTarget	byte		5353059	0					
ANR	5353450	Identifier	aceg		5353059	1					
ANR	5353451	ExpressionStatement	outp [ dist ] = ( byte ) bdfh	103:4:3061:3084	5353059	6	True				
ANR	5353452	AssignmentExpression	outp [ dist ] = ( byte ) bdfh		5353059	0		=			
ANR	5353453	ArrayIndexing	outp [ dist ]		5353059	0					
ANR	5353454	Identifier	outp		5353059	0					
ANR	5353455	Identifier	dist		5353059	1					
ANR	5353456	CastExpression	( byte ) bdfh		5353059	1					
ANR	5353457	CastTarget	byte		5353059	0					
ANR	5353458	Identifier	bdfh		5353059	1					
ANR	5353459	ExpressionStatement	outp += dist << 1	104:4:3090:3107	5353059	7	True				
ANR	5353460	AssignmentExpression	outp += dist << 1		5353059	0		+=			
ANR	5353461	Identifier	outp		5353059	0					
ANR	5353462	ShiftExpression	dist << 1		5353059	1		<<			
ANR	5353463	Identifier	dist		5353059	0					
ANR	5353464	PrimaryExpression	1		5353059	1					
ANR	5353465	ExpressionStatement	* outp = ( byte ) ( aceg >>= 8 )	105:4:3113:3139	5353059	8	True				
ANR	5353466	AssignmentExpression	* outp = ( byte ) ( aceg >>= 8 )		5353059	0		=			
ANR	5353467	UnaryOperationExpression	* outp		5353059	0					
ANR	5353468	UnaryOperator	*		5353059	0					
ANR	5353469	Identifier	outp		5353059	1					
ANR	5353470	CastExpression	( byte ) ( aceg >>= 8 )		5353059	1					
ANR	5353471	CastTarget	byte		5353059	0					
ANR	5353472	AssignmentExpression	aceg >>= 8		5353059	1		>>=			
ANR	5353473	Identifier	aceg		5353059	0					
ANR	5353474	PrimaryExpression	8		5353059	1					
ANR	5353475	ExpressionStatement	outp [ dist ] = ( byte ) ( bdfh >>= 8 )	106:4:3145:3176	5353059	9	True				
ANR	5353476	AssignmentExpression	outp [ dist ] = ( byte ) ( bdfh >>= 8 )		5353059	0		=			
ANR	5353477	ArrayIndexing	outp [ dist ]		5353059	0					
ANR	5353478	Identifier	outp		5353059	0					
ANR	5353479	Identifier	dist		5353059	1					
ANR	5353480	CastExpression	( byte ) ( bdfh >>= 8 )		5353059	1					
ANR	5353481	CastTarget	byte		5353059	0					
ANR	5353482	AssignmentExpression	bdfh >>= 8		5353059	1		>>=			
ANR	5353483	Identifier	bdfh		5353059	0					
ANR	5353484	PrimaryExpression	8		5353059	1					
ANR	5353485	ExpressionStatement	outp += dist << 1	107:4:3182:3199	5353059	10	True				
ANR	5353486	AssignmentExpression	outp += dist << 1		5353059	0		+=			
ANR	5353487	Identifier	outp		5353059	0					
ANR	5353488	ShiftExpression	dist << 1		5353059	1		<<			
ANR	5353489	Identifier	dist		5353059	0					
ANR	5353490	PrimaryExpression	1		5353059	1					
ANR	5353491	ExpressionStatement	* outp = ( byte ) ( aceg >>= 8 )	108:4:3205:3231	5353059	11	True				
ANR	5353492	AssignmentExpression	* outp = ( byte ) ( aceg >>= 8 )		5353059	0		=			
ANR	5353493	UnaryOperationExpression	* outp		5353059	0					
ANR	5353494	UnaryOperator	*		5353059	0					
ANR	5353495	Identifier	outp		5353059	1					
ANR	5353496	CastExpression	( byte ) ( aceg >>= 8 )		5353059	1					
ANR	5353497	CastTarget	byte		5353059	0					
ANR	5353498	AssignmentExpression	aceg >>= 8		5353059	1		>>=			
ANR	5353499	Identifier	aceg		5353059	0					
ANR	5353500	PrimaryExpression	8		5353059	1					
ANR	5353501	ExpressionStatement	outp [ dist ] = ( byte ) ( bdfh >>= 8 )	109:4:3237:3268	5353059	12	True				
ANR	5353502	AssignmentExpression	outp [ dist ] = ( byte ) ( bdfh >>= 8 )		5353059	0		=			
ANR	5353503	ArrayIndexing	outp [ dist ]		5353059	0					
ANR	5353504	Identifier	outp		5353059	0					
ANR	5353505	Identifier	dist		5353059	1					
ANR	5353506	CastExpression	( byte ) ( bdfh >>= 8 )		5353059	1					
ANR	5353507	CastTarget	byte		5353059	0					
ANR	5353508	AssignmentExpression	bdfh >>= 8		5353059	1		>>=			
ANR	5353509	Identifier	bdfh		5353059	0					
ANR	5353510	PrimaryExpression	8		5353059	1					
ANR	5353511	ExpressionStatement	outp += dist << 1	110:4:3274:3291	5353059	13	True				
ANR	5353512	AssignmentExpression	outp += dist << 1		5353059	0		+=			
ANR	5353513	Identifier	outp		5353059	0					
ANR	5353514	ShiftExpression	dist << 1		5353059	1		<<			
ANR	5353515	Identifier	dist		5353059	0					
ANR	5353516	PrimaryExpression	1		5353059	1					
ANR	5353517	ExpressionStatement	* outp = ( byte ) ( aceg >> 8 )	111:4:3297:3322	5353059	14	True				
ANR	5353518	AssignmentExpression	* outp = ( byte ) ( aceg >> 8 )		5353059	0		=			
ANR	5353519	UnaryOperationExpression	* outp		5353059	0					
ANR	5353520	UnaryOperator	*		5353059	0					
ANR	5353521	Identifier	outp		5353059	1					
ANR	5353522	CastExpression	( byte ) ( aceg >> 8 )		5353059	1					
ANR	5353523	CastTarget	byte		5353059	0					
ANR	5353524	ShiftExpression	aceg >> 8		5353059	1		>>			
ANR	5353525	Identifier	aceg		5353059	0					
ANR	5353526	PrimaryExpression	8		5353059	1					
ANR	5353527	ExpressionStatement	outp [ dist ] = ( byte ) ( bdfh >> 8 )	112:4:3328:3358	5353059	15	True				
ANR	5353528	AssignmentExpression	outp [ dist ] = ( byte ) ( bdfh >> 8 )		5353059	0		=			
ANR	5353529	ArrayIndexing	outp [ dist ]		5353059	0					
ANR	5353530	Identifier	outp		5353059	0					
ANR	5353531	Identifier	dist		5353059	1					
ANR	5353532	CastExpression	( byte ) ( bdfh >> 8 )		5353059	1					
ANR	5353533	CastTarget	byte		5353059	0					
ANR	5353534	ShiftExpression	bdfh >> 8		5353059	1		>>			
ANR	5353535	Identifier	bdfh		5353059	0					
ANR	5353536	PrimaryExpression	8		5353059	1					
ANR	5353537	ReturnType	void		5353059	1					
ANR	5353538	Identifier	memflip8x8		5353059	2					
ANR	5353539	ParameterList	"const byte * inp , int line_size , byte * outp , int dist"		5353059	3					
ANR	5353540	Parameter	const byte * inp	47:11:1282:1297	5353059	0	True				
ANR	5353541	ParameterType	const byte *		5353059	0					
ANR	5353542	Identifier	inp		5353059	1					
ANR	5353543	Parameter	int line_size	47:29:1300:1312	5353059	1	True				
ANR	5353544	ParameterType	int		5353059	0					
ANR	5353545	Identifier	line_size		5353059	1					
ANR	5353546	Parameter	byte * outp	47:44:1315:1325	5353059	2	True				
ANR	5353547	ParameterType	byte *		5353059	0					
ANR	5353548	Identifier	outp		5353059	1					
ANR	5353549	Parameter	int dist	47:57:1328:1335	5353059	3	True				
ANR	5353550	ParameterType	int		5353059	0					
ANR	5353551	Identifier	dist		5353059	1					
ANR	5353552	CFGEntryNode	ENTRY		5353059		True				
ANR	5353553	CFGExitNode	EXIT		5353059		True				
ANR	5353554	Symbol	* dist		5353059						
ANR	5353555	Symbol	temp		5353059						
ANR	5353556	Symbol	dist		5353059						
ANR	5353557	Symbol	aceg		5353059						
ANR	5353558	Symbol	inp		5353059						
ANR	5353559	Symbol	bdfh		5353059						
ANR	5353560	Symbol	ls2		5353059						
ANR	5353561	Symbol	* inp		5353059						
ANR	5353562	Symbol	ptr4		5353059						
ANR	5353563	Symbol	* ls2		5353059						
ANR	5353564	Symbol	outp		5353059						
ANR	5353565	Symbol	* outp		5353059						
ANR	5353566	Symbol	line_size		5353059						
ANR	5353567	Symbol	* ptr4		5353059						
ANR	5353568	Function	get_u32_msb	116:0:3411:3525							
ANR	5353569	FunctionDef	get_u32_msb (const byte * p)		5353568	0					
ANR	5353570	CompoundStatement		118:0:3444:3525	5353568	0					
ANR	5353571	ReturnStatement	return ( ( uint ) p [ 0 ] << 24 ) + ( ( uint ) p [ 1 ] << 16 ) + ( ( uint ) p [ 2 ] << 8 ) + p [ 3 ] ;	119:4:3450:3523	5353568	0	True				
ANR	5353572	AdditiveExpression	( ( uint ) p [ 0 ] << 24 ) + ( ( uint ) p [ 1 ] << 16 ) + ( ( uint ) p [ 2 ] << 8 ) + p [ 3 ]		5353568	0		+			
ANR	5353573	ShiftExpression	( uint ) p [ 0 ] << 24		5353568	0		<<			
ANR	5353574	CastExpression	( uint ) p [ 0 ]		5353568	0					
ANR	5353575	CastTarget	uint		5353568	0					
ANR	5353576	ArrayIndexing	p [ 0 ]		5353568	1					
ANR	5353577	Identifier	p		5353568	0					
ANR	5353578	PrimaryExpression	0		5353568	1					
ANR	5353579	PrimaryExpression	24		5353568	1					
ANR	5353580	AdditiveExpression	( ( uint ) p [ 1 ] << 16 ) + ( ( uint ) p [ 2 ] << 8 ) + p [ 3 ]		5353568	1		+			
ANR	5353581	ShiftExpression	( uint ) p [ 1 ] << 16		5353568	0		<<			
ANR	5353582	CastExpression	( uint ) p [ 1 ]		5353568	0					
ANR	5353583	CastTarget	uint		5353568	0					
ANR	5353584	ArrayIndexing	p [ 1 ]		5353568	1					
ANR	5353585	Identifier	p		5353568	0					
ANR	5353586	PrimaryExpression	1		5353568	1					
ANR	5353587	PrimaryExpression	16		5353568	1					
ANR	5353588	AdditiveExpression	( ( uint ) p [ 2 ] << 8 ) + p [ 3 ]		5353568	1		+			
ANR	5353589	ShiftExpression	( uint ) p [ 2 ] << 8		5353568	0		<<			
ANR	5353590	CastExpression	( uint ) p [ 2 ]		5353568	0					
ANR	5353591	CastTarget	uint		5353568	0					
ANR	5353592	ArrayIndexing	p [ 2 ]		5353568	1					
ANR	5353593	Identifier	p		5353568	0					
ANR	5353594	PrimaryExpression	2		5353568	1					
ANR	5353595	PrimaryExpression	8		5353568	1					
ANR	5353596	ArrayIndexing	p [ 3 ]		5353568	1					
ANR	5353597	Identifier	p		5353568	0					
ANR	5353598	PrimaryExpression	3		5353568	1					
ANR	5353599	ReturnType	ulong		5353568	1					
ANR	5353600	Identifier	get_u32_msb		5353568	2					
ANR	5353601	ParameterList	const byte * p		5353568	3					
ANR	5353602	Parameter	const byte * p	117:12:3429:3441	5353568	0	True				
ANR	5353603	ParameterType	const byte *		5353568	0					
ANR	5353604	Identifier	p		5353568	1					
ANR	5353605	CFGEntryNode	ENTRY		5353568		True				
ANR	5353606	CFGExitNode	EXIT		5353568		True				
ANR	5353607	Symbol	p		5353568						
ANR	5353608	Symbol	* p		5353568						
ANR	5353609	Function	put_u32_msb	123:0:3576:3769							
ANR	5353610	FunctionDef	"put_u32_msb (byte * p , const ulong n , const int offs)"		5353609	0					
ANR	5353611	CompoundStatement		125:0:3633:3769	5353609	0					
ANR	5353612	ExpressionStatement	( p + offs ) [ 0 ] = n >> 24 & 255	126:4:3639:3668	5353609	0	True				
ANR	5353613	AssignmentExpression	( p + offs ) [ 0 ] = n >> 24 & 255		5353609	0		=			
ANR	5353614	ArrayIndexing	( p + offs ) [ 0 ]		5353609	0					
ANR	5353615	AdditiveExpression	p + offs		5353609	0		+			
ANR	5353616	Identifier	p		5353609	0					
ANR	5353617	Identifier	offs		5353609	1					
ANR	5353618	PrimaryExpression	0		5353609	1					
ANR	5353619	BitAndExpression	n >> 24 & 255		5353609	1		&			
ANR	5353620	ShiftExpression	n >> 24		5353609	0		>>			
ANR	5353621	Identifier	n		5353609	0					
ANR	5353622	PrimaryExpression	24		5353609	1					
ANR	5353623	PrimaryExpression	255		5353609	1					
ANR	5353624	ExpressionStatement	( p + offs ) [ 1 ] = n >> 16 & 255	127:4:3674:3703	5353609	1	True				
ANR	5353625	AssignmentExpression	( p + offs ) [ 1 ] = n >> 16 & 255		5353609	0		=			
ANR	5353626	ArrayIndexing	( p + offs ) [ 1 ]		5353609	0					
ANR	5353627	AdditiveExpression	p + offs		5353609	0		+			
ANR	5353628	Identifier	p		5353609	0					
ANR	5353629	Identifier	offs		5353609	1					
ANR	5353630	PrimaryExpression	1		5353609	1					
ANR	5353631	BitAndExpression	n >> 16 & 255		5353609	1		&			
ANR	5353632	ShiftExpression	n >> 16		5353609	0		>>			
ANR	5353633	Identifier	n		5353609	0					
ANR	5353634	PrimaryExpression	16		5353609	1					
ANR	5353635	PrimaryExpression	255		5353609	1					
ANR	5353636	ExpressionStatement	( p + offs ) [ 2 ] = n >> 8 & 255	128:4:3709:3738	5353609	2	True				
ANR	5353637	AssignmentExpression	( p + offs ) [ 2 ] = n >> 8 & 255		5353609	0		=			
ANR	5353638	ArrayIndexing	( p + offs ) [ 2 ]		5353609	0					
ANR	5353639	AdditiveExpression	p + offs		5353609	0		+			
ANR	5353640	Identifier	p		5353609	0					
ANR	5353641	Identifier	offs		5353609	1					
ANR	5353642	PrimaryExpression	2		5353609	1					
ANR	5353643	BitAndExpression	n >> 8 & 255		5353609	1		&			
ANR	5353644	ShiftExpression	n >> 8		5353609	0		>>			
ANR	5353645	Identifier	n		5353609	0					
ANR	5353646	PrimaryExpression	8		5353609	1					
ANR	5353647	PrimaryExpression	255		5353609	1					
ANR	5353648	ExpressionStatement	( p + offs ) [ 3 ] = n & 255	129:4:3744:3767	5353609	3	True				
ANR	5353649	AssignmentExpression	( p + offs ) [ 3 ] = n & 255		5353609	0		=			
ANR	5353650	ArrayIndexing	( p + offs ) [ 3 ]		5353609	0					
ANR	5353651	AdditiveExpression	p + offs		5353609	0		+			
ANR	5353652	Identifier	p		5353609	0					
ANR	5353653	Identifier	offs		5353609	1					
ANR	5353654	PrimaryExpression	3		5353609	1					
ANR	5353655	BitAndExpression	n & 255		5353609	1		&			
ANR	5353656	Identifier	n		5353609	0					
ANR	5353657	PrimaryExpression	255		5353609	1					
ANR	5353658	ReturnType	void		5353609	1					
ANR	5353659	Identifier	put_u32_msb		5353609	2					
ANR	5353660	ParameterList	"byte * p , const ulong n , const int offs"		5353609	3					
ANR	5353661	Parameter	byte * p	124:12:3593:3599	5353609	0	True				
ANR	5353662	ParameterType	byte *		5353609	0					
ANR	5353663	Identifier	p		5353609	1					
ANR	5353664	Parameter	const ulong n	124:21:3602:3614	5353609	1	True				
ANR	5353665	ParameterType	const ulong		5353609	0					
ANR	5353666	Identifier	n		5353609	1					
ANR	5353667	Parameter	const int offs	124:36:3617:3630	5353609	2	True				
ANR	5353668	ParameterType	const int		5353609	0					
ANR	5353669	Identifier	offs		5353609	1					
ANR	5353670	CFGEntryNode	ENTRY		5353609		True				
ANR	5353671	CFGExitNode	EXIT		5353609		True				
ANR	5353672	Symbol	p		5353609						
ANR	5353673	Symbol	offs		5353609						
ANR	5353674	Symbol	* offs		5353609						
ANR	5353675	Symbol	* p		5353609						
ANR	5353676	Symbol	n		5353609						
ANR	5353677	Function	bytes_compare	137:0:3996:4433							
ANR	5353678	FunctionDef	"bytes_compare (const byte * s1 , uint len1 , const byte * s2 , uint len2)"		5353677	0					
ANR	5353679	CompoundStatement		139:0:4070:4433	5353677	0					
ANR	5353680	Statement	register	140:4:4076:4083	5353677	0	True				
ANR	5353681	IdentifierDeclStatement	uint len = len1 ;	140:13:4085:4100	5353677	1	True				
ANR	5353682	IdentifierDecl	len = len1		5353677	0					
ANR	5353683	IdentifierDeclType	uint		5353677	0					
ANR	5353684	Identifier	len		5353677	1					
ANR	5353685	AssignmentExpression	len = len1		5353677	2		=			
ANR	5353686	Identifier	len1		5353677	0					
ANR	5353687	Identifier	len1		5353677	1					
ANR	5353688	IfStatement	if ( len2 < len )		5353677	2					
ANR	5353689	Condition	len2 < len	142:8:4111:4120	5353677	0	True				
ANR	5353690	RelationalExpression	len2 < len		5353677	0		<			
ANR	5353691	Identifier	len2		5353677	0					
ANR	5353692	Identifier	len		5353677	1					
ANR	5353693	ExpressionStatement	len = len2	143:8:4131:4141	5353677	1	True				
ANR	5353694	AssignmentExpression	len = len2		5353677	0		=			
ANR	5353695	Identifier	len		5353677	0					
ANR	5353696	Identifier	len2		5353677	1					
ANR	5353697	CompoundStatement		8:17:133:152	5353677	3					
ANR	5353698	Statement	register	145:8:4157:4164	5353677	0	True				
ANR	5353699	IdentifierDeclStatement	const byte * p1 = s1 ;	145:17:4166:4185	5353677	1	True				
ANR	5353700	IdentifierDecl	* p1 = s1		5353677	0					
ANR	5353701	IdentifierDeclType	const byte *		5353677	0					
ANR	5353702	Identifier	p1		5353677	1					
ANR	5353703	AssignmentExpression	* p1 = s1		5353677	2		=			
ANR	5353704	Identifier	s1		5353677	0					
ANR	5353705	Identifier	s1		5353677	1					
ANR	5353706	Statement	register	146:8:4195:4202	5353677	2	True				
ANR	5353707	IdentifierDeclStatement	const byte * p2 = s2 ;	146:17:4204:4223	5353677	3	True				
ANR	5353708	IdentifierDecl	* p2 = s2		5353677	0					
ANR	5353709	IdentifierDeclType	const byte *		5353677	0					
ANR	5353710	Identifier	p2		5353677	1					
ANR	5353711	AssignmentExpression	* p2 = s2		5353677	2		=			
ANR	5353712	Identifier	s2		5353677	0					
ANR	5353713	Identifier	s2		5353677	1					
ANR	5353714	WhileStatement	while ( len -- )		5353677	4					
ANR	5353715	Condition	len --	148:15:4241:4245	5353677	0	True				
ANR	5353716	PostIncDecOperationExpression	len --		5353677	0					
ANR	5353717	Identifier	len		5353677	0					
ANR	5353718	IncDec	--		5353677	1					
ANR	5353719	IfStatement	if ( * p1 ++ != * p2 ++ )		5353677	1					
ANR	5353720	Condition	* p1 ++ != * p2 ++	149:16:4264:4277	5353677	0	True				
ANR	5353721	EqualityExpression	* p1 ++ != * p2 ++		5353677	0		!=			
ANR	5353722	UnaryOperationExpression	* p1 ++		5353677	0					
ANR	5353723	UnaryOperator	*		5353677	0					
ANR	5353724	PostIncDecOperationExpression	p1 ++		5353677	1					
ANR	5353725	Identifier	p1		5353677	0					
ANR	5353726	IncDec	++		5353677	1					
ANR	5353727	UnaryOperationExpression	* p2 ++		5353677	1					
ANR	5353728	UnaryOperator	*		5353677	0					
ANR	5353729	PostIncDecOperationExpression	p2 ++		5353677	1					
ANR	5353730	Identifier	p2		5353677	0					
ANR	5353731	IncDec	++		5353677	1					
ANR	5353732	ReturnStatement	return ( p1 [ - 1 ] < p2 [ - 1 ] ? - 1 : 1 ) ;	150:16:4296:4329	5353677	1	True				
ANR	5353733	ConditionalExpression	p1 [ - 1 ] < p2 [ - 1 ] ? - 1 : 1		5353677	0					
ANR	5353734	Condition	p1 [ - 1 ] < p2 [ - 1 ]		5353677	0					
ANR	5353735	RelationalExpression	p1 [ - 1 ] < p2 [ - 1 ]		5353677	0		<			
ANR	5353736	ArrayIndexing	p1 [ - 1 ]		5353677	0					
ANR	5353737	Identifier	p1		5353677	0					
ANR	5353738	UnaryOperationExpression	- 1		5353677	1					
ANR	5353739	UnaryOperator	-		5353677	0					
ANR	5353740	PrimaryExpression	1		5353677	1					
ANR	5353741	ArrayIndexing	p2 [ - 1 ]		5353677	1					
ANR	5353742	Identifier	p2		5353677	0					
ANR	5353743	UnaryOperationExpression	- 1		5353677	1					
ANR	5353744	UnaryOperator	-		5353677	0					
ANR	5353745	PrimaryExpression	1		5353677	1					
ANR	5353746	UnaryOperationExpression	- 1		5353677	1					
ANR	5353747	UnaryOperator	-		5353677	0					
ANR	5353748	PrimaryExpression	1		5353677	1					
ANR	5353749	PrimaryExpression	1		5353677	2					
ANR	5353750	ReturnStatement	return ( len1 == len2 ? 0 : len1 < len2 ? - 1 : 1 ) ;	153:4:4383:4431	5353677	4	True				
ANR	5353751	ConditionalExpression	len1 == len2 ? 0 : len1 < len2 ? - 1 : 1		5353677	0					
ANR	5353752	Condition	len1 == len2		5353677	0					
ANR	5353753	EqualityExpression	len1 == len2		5353677	0		==			
ANR	5353754	Identifier	len1		5353677	0					
ANR	5353755	Identifier	len2		5353677	1					
ANR	5353756	PrimaryExpression	0		5353677	1					
ANR	5353757	ConditionalExpression	len1 < len2 ? - 1 : 1		5353677	2					
ANR	5353758	Condition	len1 < len2		5353677	0					
ANR	5353759	RelationalExpression	len1 < len2		5353677	0		<			
ANR	5353760	Identifier	len1		5353677	0					
ANR	5353761	Identifier	len2		5353677	1					
ANR	5353762	UnaryOperationExpression	- 1		5353677	1					
ANR	5353763	UnaryOperator	-		5353677	0					
ANR	5353764	PrimaryExpression	1		5353677	1					
ANR	5353765	PrimaryExpression	1		5353677	2					
ANR	5353766	ReturnType	int		5353677	1					
ANR	5353767	Identifier	bytes_compare		5353677	2					
ANR	5353768	ParameterList	"const byte * s1 , uint len1 , const byte * s2 , uint len2"		5353677	3					
ANR	5353769	Parameter	const byte * s1	138:14:4014:4028	5353677	0	True				
ANR	5353770	ParameterType	const byte *		5353677	0					
ANR	5353771	Identifier	s1		5353677	1					
ANR	5353772	Parameter	uint len1	138:31:4031:4039	5353677	1	True				
ANR	5353773	ParameterType	uint		5353677	0					
ANR	5353774	Identifier	len1		5353677	1					
ANR	5353775	Parameter	const byte * s2	138:42:4042:4056	5353677	2	True				
ANR	5353776	ParameterType	const byte *		5353677	0					
ANR	5353777	Identifier	s2		5353677	1					
ANR	5353778	Parameter	uint len2	138:59:4059:4067	5353677	3	True				
ANR	5353779	ParameterType	uint		5353677	0					
ANR	5353780	Identifier	len2		5353677	1					
ANR	5353781	CFGEntryNode	ENTRY		5353677		True				
ANR	5353782	CFGExitNode	EXIT		5353677		True				
ANR	5353783	Symbol	p1		5353677						
ANR	5353784	Symbol	p2		5353677						
ANR	5353785	Symbol	len		5353677						
ANR	5353786	Symbol	* p1		5353677						
ANR	5353787	Symbol	* p1 ++		5353677						
ANR	5353788	Symbol	* p2 ++		5353677						
ANR	5353789	Symbol	* p2		5353677						
ANR	5353790	Symbol	s1		5353677						
ANR	5353791	Symbol	len1		5353677						
ANR	5353792	Symbol	s2		5353677						
ANR	5353793	Symbol	len2		5353677						
ANR	5353794	DeclStmt									
ANR	5353795	Decl							const string_match_params	const string_match_params	string_match_params_default
ANR	5353796	Function	string_match	162:0:4668:6408							
ANR	5353797	FunctionDef	"string_match (const byte * str , uint len , const byte * pstr , uint plen , register const string_match_params * psmp)"		5353796	0					
ANR	5353798	CompoundStatement		165:0:4800:6408	5353796	0					
ANR	5353799	IdentifierDeclStatement	const byte * pback = 0 ;	166:4:4806:4827	5353796	0	True				
ANR	5353800	IdentifierDecl	* pback = 0		5353796	0					
ANR	5353801	IdentifierDeclType	const byte *		5353796	0					
ANR	5353802	Identifier	pback		5353796	1					
ANR	5353803	AssignmentExpression	* pback = 0		5353796	2		=			
ANR	5353804	Identifier	pback		5353796	0					
ANR	5353805	PrimaryExpression	0		5353796	1					
ANR	5353806	IdentifierDeclStatement	const byte * spback = 0 ;	167:4:4833:4855	5353796	1	True				
ANR	5353807	IdentifierDecl	* spback = 0		5353796	0					
ANR	5353808	IdentifierDeclType	const byte *		5353796	0					
ANR	5353809	Identifier	spback		5353796	1					
ANR	5353810	AssignmentExpression	* spback = 0		5353796	2		=			
ANR	5353811	Identifier	spback		5353796	0					
ANR	5353812	PrimaryExpression	0		5353796	1					
ANR	5353813	IdentifierDeclStatement	"const byte * p = pstr , * pend = pstr + plen ;"	168:4:4898:4939	5353796	2	True				
ANR	5353814	IdentifierDecl	* p = pstr		5353796	0					
ANR	5353815	IdentifierDeclType	const byte *		5353796	0					
ANR	5353816	Identifier	p		5353796	1					
ANR	5353817	AssignmentExpression	* p = pstr		5353796	2		=			
ANR	5353818	Identifier	pstr		5353796	0					
ANR	5353819	Identifier	pstr		5353796	1					
ANR	5353820	IdentifierDecl	* pend = pstr + plen		5353796	1					
ANR	5353821	IdentifierDeclType	const byte *		5353796	0					
ANR	5353822	Identifier	pend		5353796	1					
ANR	5353823	AssignmentExpression	* pend = pstr + plen		5353796	2		=			
ANR	5353824	Identifier	pend		5353796	0					
ANR	5353825	AdditiveExpression	pstr + plen		5353796	1		+			
ANR	5353826	Identifier	pstr		5353796	0					
ANR	5353827	Identifier	plen		5353796	1					
ANR	5353828	IdentifierDeclStatement	"const byte * sp = str , * spend = str + len ;"	169:4:4945:4985	5353796	3	True				
ANR	5353829	IdentifierDecl	* sp = str		5353796	0					
ANR	5353830	IdentifierDeclType	const byte *		5353796	0					
ANR	5353831	Identifier	sp		5353796	1					
ANR	5353832	AssignmentExpression	* sp = str		5353796	2		=			
ANR	5353833	Identifier	str		5353796	0					
ANR	5353834	Identifier	str		5353796	1					
ANR	5353835	IdentifierDecl	* spend = str + len		5353796	1					
ANR	5353836	IdentifierDeclType	const byte *		5353796	0					
ANR	5353837	Identifier	spend		5353796	1					
ANR	5353838	AssignmentExpression	* spend = str + len		5353796	2		=			
ANR	5353839	Identifier	spend		5353796	0					
ANR	5353840	AdditiveExpression	str + len		5353796	1		+			
ANR	5353841	Identifier	str		5353796	0					
ANR	5353842	Identifier	len		5353796	1					
ANR	5353843	IfStatement	if ( psmp == 0 )		5353796	4					
ANR	5353844	Condition	psmp == 0	171:8:4996:5004	5353796	0	True				
ANR	5353845	EqualityExpression	psmp == 0		5353796	0		==			
ANR	5353846	Identifier	psmp		5353796	0					
ANR	5353847	PrimaryExpression	0		5353796	1					
ANR	5353848	ExpressionStatement	psmp = & string_match_params_default	172:8:5015:5050	5353796	1	True				
ANR	5353849	AssignmentExpression	psmp = & string_match_params_default		5353796	0		=			
ANR	5353850	Identifier	psmp		5353796	0					
ANR	5353851	UnaryOperationExpression	& string_match_params_default		5353796	1					
ANR	5353852	UnaryOperator	&		5353796	0					
ANR	5353853	Identifier	string_match_params_default		5353796	1					
ANR	5353854	Label	again :	173:2:5054:5059	5353796	5	True				
ANR	5353855	Identifier	again		5353796	0					
ANR	5353856	WhileStatement	while ( p < pend )		5353796	6					
ANR	5353857	Condition	p < pend	173:15:5067:5074	5353796	0	True				
ANR	5353858	RelationalExpression	p < pend		5353796	0		<			
ANR	5353859	Identifier	p		5353796	0					
ANR	5353860	Identifier	pend		5353796	1					
ANR	5353861	CompoundStatement		10:17:295:307	5353796	1					
ANR	5353862	Statement	register	174:8:5087:5094	5353796	0	True				
ANR	5353863	IdentifierDeclStatement	byte ch = * p ;	174:17:5096:5108	5353796	1	True				
ANR	5353864	IdentifierDecl	ch = * p		5353796	0					
ANR	5353865	IdentifierDeclType	byte		5353796	0					
ANR	5353866	Identifier	ch		5353796	1					
ANR	5353867	AssignmentExpression	ch = * p		5353796	2		=			
ANR	5353868	Identifier	ch		5353796	0					
ANR	5353869	UnaryOperationExpression	* p		5353796	1					
ANR	5353870	UnaryOperator	*		5353796	0					
ANR	5353871	Identifier	p		5353796	1					
ANR	5353872	IfStatement	if ( ch == psmp -> any_substring )		5353796	2					
ANR	5353873	Condition	ch == psmp -> any_substring	176:12:5123:5147	5353796	0	True				
ANR	5353874	EqualityExpression	ch == psmp -> any_substring		5353796	0		==			
ANR	5353875	Identifier	ch		5353796	0					
ANR	5353876	PtrMemberAccess	psmp -> any_substring		5353796	1					
ANR	5353877	Identifier	psmp		5353796	0					
ANR	5353878	Identifier	any_substring		5353796	1					
ANR	5353879	CompoundStatement		12:39:349:349	5353796	1					
ANR	5353880	ExpressionStatement	"pback = ++ p , spback = sp"	177:12:5164:5188	5353796	0	True				
ANR	5353881	Expression	"pback = ++ p , spback = sp"		5353796	0					
ANR	5353882	AssignmentExpression	pback = ++ p		5353796	0		=			
ANR	5353883	Identifier	pback		5353796	0					
ANR	5353884	UnaryExpression	++ p		5353796	1					
ANR	5353885	IncDec	++		5353796	0					
ANR	5353886	Identifier	p		5353796	1					
ANR	5353887	AssignmentExpression	spback = sp		5353796	1		=			
ANR	5353888	Identifier	spback		5353796	0					
ANR	5353889	Identifier	sp		5353796	1					
ANR	5353890	ContinueStatement	continue ;	178:12:5202:5210	5353796	1	True				
ANR	5353891	ElseStatement	else		5353796	0					
ANR	5353892	IfStatement	if ( ch == psmp -> any_char )		5353796	0					
ANR	5353893	Condition	ch == psmp -> any_char	179:19:5231:5250	5353796	0	True				
ANR	5353894	EqualityExpression	ch == psmp -> any_char		5353796	0		==			
ANR	5353895	Identifier	ch		5353796	0					
ANR	5353896	PtrMemberAccess	psmp -> any_char		5353796	1					
ANR	5353897	Identifier	psmp		5353796	0					
ANR	5353898	Identifier	any_char		5353796	1					
ANR	5353899	CompoundStatement		15:41:452:452	5353796	1					
ANR	5353900	IfStatement	if ( sp == spend )		5353796	0					
ANR	5353901	Condition	sp == spend	180:16:5271:5281	5353796	0	True				
ANR	5353902	EqualityExpression	sp == spend		5353796	0		==			
ANR	5353903	Identifier	sp		5353796	0					
ANR	5353904	Identifier	spend		5353796	1					
ANR	5353905	ReturnStatement	return false ;	181:16:5300:5312	5353796	1	True				
ANR	5353906	Identifier	false		5353796	0					
ANR	5353907	ExpressionStatement	"p ++ , sp ++"	182:12:5346:5355	5353796	1	True				
ANR	5353908	Expression	"p ++ , sp ++"		5353796	0					
ANR	5353909	PostIncDecOperationExpression	p ++		5353796	0					
ANR	5353910	Identifier	p		5353796	0					
ANR	5353911	IncDec	++		5353796	1					
ANR	5353912	PostIncDecOperationExpression	sp ++		5353796	1					
ANR	5353913	Identifier	sp		5353796	0					
ANR	5353914	IncDec	++		5353796	1					
ANR	5353915	ContinueStatement	continue ;	183:12:5369:5377	5353796	2	True				
ANR	5353916	ElseStatement	else		5353796	0					
ANR	5353917	IfStatement	if ( ch == psmp -> quote_next )		5353796	0					
ANR	5353918	Condition	ch == psmp -> quote_next	184:19:5398:5419	5353796	0	True				
ANR	5353919	EqualityExpression	ch == psmp -> quote_next		5353796	0		==			
ANR	5353920	Identifier	ch		5353796	0					
ANR	5353921	PtrMemberAccess	psmp -> quote_next		5353796	1					
ANR	5353922	Identifier	psmp		5353796	0					
ANR	5353923	Identifier	quote_next		5353796	1					
ANR	5353924	CompoundStatement		20:43:621:621	5353796	1					
ANR	5353925	IfStatement	if ( ++ p == pend )		5353796	0					
ANR	5353926	Condition	++ p == pend	185:16:5440:5450	5353796	0	True				
ANR	5353927	EqualityExpression	++ p == pend		5353796	0		==			
ANR	5353928	UnaryExpression	++ p		5353796	0					
ANR	5353929	IncDec	++		5353796	0					
ANR	5353930	Identifier	p		5353796	1					
ANR	5353931	Identifier	pend		5353796	1					
ANR	5353932	ReturnStatement	return true ;	186:16:5469:5480	5353796	1	True				
ANR	5353933	Identifier	true		5353796	0					
ANR	5353934	ExpressionStatement	ch = * p	187:12:5512:5519	5353796	1	True				
ANR	5353935	AssignmentExpression	ch = * p		5353796	0		=			
ANR	5353936	Identifier	ch		5353796	0					
ANR	5353937	UnaryOperationExpression	* p		5353796	1					
ANR	5353938	UnaryOperator	*		5353796	0					
ANR	5353939	Identifier	p		5353796	1					
ANR	5353940	IfStatement	if ( sp == spend )		5353796	3					
ANR	5353941	Condition	sp == spend	189:12:5543:5553	5353796	0	True				
ANR	5353942	EqualityExpression	sp == spend		5353796	0		==			
ANR	5353943	Identifier	sp		5353796	0					
ANR	5353944	Identifier	spend		5353796	1					
ANR	5353945	ReturnStatement	return false ;	190:12:5568:5580	5353796	1	True				
ANR	5353946	Identifier	false		5353796	0					
ANR	5353947	IfStatement	if ( * sp == ch || ( psmp -> ignore_case && ( * sp ^ ch ) == 0x20 && ( ch &= ~0x20 ) >= 0x41 && ch <= 0x5a ) || ( psmp -> slash_equiv && ( ( ch == '\\\\' && * sp == '/' ) || ( ch == '/' && * sp == '\\\\' ) ) ) )		5353796	4					
ANR	5353948	Condition	* sp == ch || ( psmp -> ignore_case && ( * sp ^ ch ) == 0x20 && ( ch &= ~0x20 ) >= 0x41 && ch <= 0x5a ) || ( psmp -> slash_equiv && ( ( ch == '\\\\' && * sp == '/' ) || ( ch == '/' && * sp == '\\\\' ) ) )	191:12:5614:5842	5353796	0	True				
ANR	5353949	OrExpression	* sp == ch || ( psmp -> ignore_case && ( * sp ^ ch ) == 0x20 && ( ch &= ~0x20 ) >= 0x41 && ch <= 0x5a ) || ( psmp -> slash_equiv && ( ( ch == '\\\\' && * sp == '/' ) || ( ch == '/' && * sp == '\\\\' ) ) )		5353796	0		||			
ANR	5353950	EqualityExpression	* sp == ch		5353796	0		==			
ANR	5353951	UnaryOperationExpression	* sp		5353796	0					
ANR	5353952	UnaryOperator	*		5353796	0					
ANR	5353953	Identifier	sp		5353796	1					
ANR	5353954	Identifier	ch		5353796	1					
ANR	5353955	OrExpression	( psmp -> ignore_case && ( * sp ^ ch ) == 0x20 && ( ch &= ~0x20 ) >= 0x41 && ch <= 0x5a ) || ( psmp -> slash_equiv && ( ( ch == '\\\\' && * sp == '/' ) || ( ch == '/' && * sp == '\\\\' ) ) )		5353796	1		||			
ANR	5353956	AndExpression	psmp -> ignore_case && ( * sp ^ ch ) == 0x20 && ( ch &= ~0x20 ) >= 0x41 && ch <= 0x5a		5353796	0		&&			
ANR	5353957	PtrMemberAccess	psmp -> ignore_case		5353796	0					
ANR	5353958	Identifier	psmp		5353796	0					
ANR	5353959	Identifier	ignore_case		5353796	1					
ANR	5353960	AndExpression	( * sp ^ ch ) == 0x20 && ( ch &= ~0x20 ) >= 0x41 && ch <= 0x5a		5353796	1		&&			
ANR	5353961	EqualityExpression	( * sp ^ ch ) == 0x20		5353796	0		==			
ANR	5353962	ExclusiveOrExpression	* sp ^ ch		5353796	0		^			
ANR	5353963	UnaryOperationExpression	* sp		5353796	0					
ANR	5353964	UnaryOperator	*		5353796	0					
ANR	5353965	Identifier	sp		5353796	1					
ANR	5353966	Identifier	ch		5353796	1					
ANR	5353967	PrimaryExpression	0x20		5353796	1					
ANR	5353968	AndExpression	( ch &= ~0x20 ) >= 0x41 && ch <= 0x5a		5353796	1		&&			
ANR	5353969	RelationalExpression	( ch &= ~0x20 ) >= 0x41		5353796	0		>=			
ANR	5353970	AssignmentExpression	ch &= ~0x20		5353796	0		&=			
ANR	5353971	Identifier	ch		5353796	0					
ANR	5353972	Identifier	~0x20		5353796	1					
ANR	5353973	PrimaryExpression	0x41		5353796	1					
ANR	5353974	RelationalExpression	ch <= 0x5a		5353796	1		<=			
ANR	5353975	Identifier	ch		5353796	0					
ANR	5353976	PrimaryExpression	0x5a		5353796	1					
ANR	5353977	AndExpression	psmp -> slash_equiv && ( ( ch == '\\\\' && * sp == '/' ) || ( ch == '/' && * sp == '\\\\' ) )		5353796	1		&&			
ANR	5353978	PtrMemberAccess	psmp -> slash_equiv		5353796	0					
ANR	5353979	Identifier	psmp		5353796	0					
ANR	5353980	Identifier	slash_equiv		5353796	1					
ANR	5353981	OrExpression	( ch == '\\\\' && * sp == '/' ) || ( ch == '/' && * sp == '\\\\' )		5353796	1		||			
ANR	5353982	AndExpression	ch == '\\\\' && * sp == '/'		5353796	0		&&			
ANR	5353983	EqualityExpression	ch == '\\\\'		5353796	0		==			
ANR	5353984	Identifier	ch		5353796	0					
ANR	5353985	PrimaryExpression	'\\\\'		5353796	1					
ANR	5353986	EqualityExpression	* sp == '/'		5353796	1		==			
ANR	5353987	UnaryOperationExpression	* sp		5353796	0					
ANR	5353988	UnaryOperator	*		5353796	0					
ANR	5353989	Identifier	sp		5353796	1					
ANR	5353990	PrimaryExpression	'/'		5353796	1					
ANR	5353991	AndExpression	ch == '/' && * sp == '\\\\'		5353796	1		&&			
ANR	5353992	EqualityExpression	ch == '/'		5353796	0		==			
ANR	5353993	Identifier	ch		5353796	0					
ANR	5353994	PrimaryExpression	'/'		5353796	1					
ANR	5353995	EqualityExpression	* sp == '\\\\'		5353796	1		==			
ANR	5353996	UnaryOperationExpression	* sp		5353796	0					
ANR	5353997	UnaryOperator	*		5353796	0					
ANR	5353998	Identifier	sp		5353796	1					
ANR	5353999	PrimaryExpression	'\\\\'		5353796	1					
ANR	5354000	ExpressionStatement	"p ++ , sp ++"	197:12:5870:5879	5353796	1	True				
ANR	5354001	Expression	"p ++ , sp ++"		5353796	0					
ANR	5354002	PostIncDecOperationExpression	p ++		5353796	0					
ANR	5354003	Identifier	p		5353796	0					
ANR	5354004	IncDec	++		5353796	1					
ANR	5354005	PostIncDecOperationExpression	sp ++		5353796	1					
ANR	5354006	Identifier	sp		5353796	0					
ANR	5354007	IncDec	++		5353796	1					
ANR	5354008	ElseStatement	else		5353796	0					
ANR	5354009	IfStatement	if ( pback == 0 )		5353796	0					
ANR	5354010	Condition	pback == 0	198:17:5898:5907	5353796	0	True				
ANR	5354011	EqualityExpression	pback == 0		5353796	0		==			
ANR	5354012	Identifier	pback		5353796	0					
ANR	5354013	PrimaryExpression	0		5353796	1					
ANR	5354014	ReturnStatement	return false ;	199:12:5922:5934	5353796	1	True				
ANR	5354015	Identifier	false		5353796	0					
ANR	5354016	ElseStatement	else		5353796	0					
ANR	5354017	CompoundStatement		36:13:1173:1173	5353796	0					
ANR	5354018	ExpressionStatement	sp = ++ spback	201:12:5988:6001	5353796	0	True				
ANR	5354019	AssignmentExpression	sp = ++ spback		5353796	0		=			
ANR	5354020	Identifier	sp		5353796	0					
ANR	5354021	UnaryExpression	++ spback		5353796	1					
ANR	5354022	IncDec	++		5353796	0					
ANR	5354023	Identifier	spback		5353796	1					
ANR	5354024	ExpressionStatement	p = pback	202:12:6015:6024	5353796	1	True				
ANR	5354025	AssignmentExpression	p = pback		5353796	0		=			
ANR	5354026	Identifier	p		5353796	0					
ANR	5354027	Identifier	pback		5353796	1					
ANR	5354028	IfStatement	if ( sp < spend )		5353796	7					
ANR	5354029	Condition	sp < spend	205:8:6050:6059	5353796	0	True				
ANR	5354030	RelationalExpression	sp < spend		5353796	0		<			
ANR	5354031	Identifier	sp		5353796	0					
ANR	5354032	Identifier	spend		5353796	1					
ANR	5354033	CompoundStatement		41:20:1261:1261	5353796	1					
ANR	5354034	IfStatement	if ( pback == 0 )		5353796	0					
ANR	5354035	Condition	pback == 0	208:12:6256:6265	5353796	0	True				
ANR	5354036	EqualityExpression	pback == 0		5353796	0		==			
ANR	5354037	Identifier	pback		5353796	0					
ANR	5354038	PrimaryExpression	0		5353796	1					
ANR	5354039	ReturnStatement	return false ;	209:12:6280:6292	5353796	1	True				
ANR	5354040	Identifier	false		5353796	0					
ANR	5354041	ExpressionStatement	p = pback	210:8:6302:6311	5353796	1	True				
ANR	5354042	AssignmentExpression	p = pback		5353796	0		=			
ANR	5354043	Identifier	p		5353796	0					
ANR	5354044	Identifier	pback		5353796	1					
ANR	5354045	ExpressionStatement	pback = 0	211:8:6321:6330	5353796	2	True				
ANR	5354046	AssignmentExpression	pback = 0		5353796	0		=			
ANR	5354047	Identifier	pback		5353796	0					
ANR	5354048	PrimaryExpression	0		5353796	1					
ANR	5354049	ExpressionStatement	sp = spend - ( pend - p )	212:8:6340:6363	5353796	3	True				
ANR	5354050	AssignmentExpression	sp = spend - ( pend - p )		5353796	0		=			
ANR	5354051	Identifier	sp		5353796	0					
ANR	5354052	AdditiveExpression	spend - ( pend - p )		5353796	1		-			
ANR	5354053	Identifier	spend		5353796	0					
ANR	5354054	AdditiveExpression	pend - p		5353796	1		-			
ANR	5354055	Identifier	pend		5353796	0					
ANR	5354056	Identifier	p		5353796	1					
ANR	5354057	GotoStatement	goto again ;	213:8:6373:6383	5353796	4	True				
ANR	5354058	Identifier	again		5353796	0					
ANR	5354059	ReturnStatement	return true ;	215:4:6395:6406	5353796	8	True				
ANR	5354060	Identifier	true		5353796	0					
ANR	5354061	ReturnType	bool		5353796	1					
ANR	5354062	Identifier	string_match		5353796	2					
ANR	5354063	ParameterList	"const byte * str , uint len , const byte * pstr , uint plen , register const string_match_params * psmp"		5353796	3					
ANR	5354064	Parameter	const byte * str	163:13:4686:4701	5353796	0	True				
ANR	5354065	ParameterType	const byte *		5353796	0					
ANR	5354066	Identifier	str		5353796	1					
ANR	5354067	Parameter	uint len	163:31:4704:4711	5353796	1	True				
ANR	5354068	ParameterType	uint		5353796	0					
ANR	5354069	Identifier	len		5353796	1					
ANR	5354070	Parameter	const byte * pstr	163:41:4714:4730	5353796	2	True				
ANR	5354071	ParameterType	const byte *		5353796	0					
ANR	5354072	Identifier	pstr		5353796	1					
ANR	5354073	Parameter	uint plen	163:60:4733:4741	5353796	3	True				
ANR	5354074	ParameterType	uint		5353796	0					
ANR	5354075	Identifier	plen		5353796	1					
ANR	5354076	Parameter	register const string_match_params * psmp	164:13:4757:4797	5353796	4	True				
ANR	5354077	ParameterType	register const string_match_params *		5353796	0					
ANR	5354078	Identifier	psmp		5353796	1					
ANR	5354079	CFGEntryNode	ENTRY		5353796		True				
ANR	5354080	CFGExitNode	EXIT		5353796		True				
ANR	5354081	Symbol	* sp		5353796						
ANR	5354082	Symbol	psmp -> quote_next		5353796						
ANR	5354083	Symbol	~0x20		5353796						
ANR	5354084	Symbol	psmp -> any_substring		5353796						
ANR	5354085	Symbol	ch		5353796						
ANR	5354086	Symbol	& string_match_params_default		5353796						
ANR	5354087	Symbol	false		5353796						
ANR	5354088	Symbol	pback		5353796						
ANR	5354089	Symbol	str		5353796						
ANR	5354090	Symbol	p		5353796						
ANR	5354091	Symbol	plen		5353796						
ANR	5354092	Symbol	spback		5353796						
ANR	5354093	Symbol	psmp		5353796						
ANR	5354094	Symbol	len		5353796						
ANR	5354095	Symbol	pstr		5353796						
ANR	5354096	Symbol	psmp -> ignore_case		5353796						
ANR	5354097	Symbol	spend		5353796						
ANR	5354098	Symbol	psmp -> slash_equiv		5353796						
ANR	5354099	Symbol	psmp -> any_char		5353796						
ANR	5354100	Symbol	true		5353796						
ANR	5354101	Symbol	* p		5353796						
ANR	5354102	Symbol	sp		5353796						
ANR	5354103	Symbol	pend		5353796						
ANR	5354104	Symbol	* psmp		5353796						
ANR	5354105	Function	uid_equal	222:0:6533:6884							
ANR	5354106	FunctionDef	"uid_equal (register const gs_uid * puid1 , register const gs_uid * puid2)"		5354105	0					
ANR	5354107	CompoundStatement		224:0:6610:6884	5354105	0					
ANR	5354108	IfStatement	if ( puid1 -> id != puid2 -> id )		5354105	0					
ANR	5354109	Condition	puid1 -> id != puid2 -> id	225:8:6620:6641	5354105	0	True				
ANR	5354110	EqualityExpression	puid1 -> id != puid2 -> id		5354105	0		!=			
ANR	5354111	PtrMemberAccess	puid1 -> id		5354105	0					
ANR	5354112	Identifier	puid1		5354105	0					
ANR	5354113	Identifier	id		5354105	1					
ANR	5354114	PtrMemberAccess	puid2 -> id		5354105	1					
ANR	5354115	Identifier	puid2		5354105	0					
ANR	5354116	Identifier	id		5354105	1					
ANR	5354117	ReturnStatement	return false ;	226:8:6652:6664	5354105	1	True				
ANR	5354118	Identifier	false		5354105	0					
ANR	5354119	IfStatement	if ( puid1 -> id >= 0 )		5354105	1					
ANR	5354120	Condition	puid1 -> id >= 0	227:8:6674:6687	5354105	0	True				
ANR	5354121	RelationalExpression	puid1 -> id >= 0		5354105	0		>=			
ANR	5354122	PtrMemberAccess	puid1 -> id		5354105	0					
ANR	5354123	Identifier	puid1		5354105	0					
ANR	5354124	Identifier	id		5354105	1					
ANR	5354125	PrimaryExpression	0		5354105	1					
ANR	5354126	ReturnStatement	return true ;	228:8:6698:6709	5354105	1	True				
ANR	5354127	Identifier	true		5354105	0					
ANR	5354128	ReturnStatement	"return ! memcmp ( ( const char * ) puid1 -> xvalues , ( const char * ) puid2 -> xvalues , ( uint ) - ( puid1 -> id ) * sizeof ( long ) ) ;"	229:4:6731:6882	5354105	2	True				
ANR	5354129	UnaryOperationExpression	"! memcmp ( ( const char * ) puid1 -> xvalues , ( const char * ) puid2 -> xvalues , ( uint ) - ( puid1 -> id ) * sizeof ( long ) )"		5354105	0					
ANR	5354130	UnaryOperator	!		5354105	0					
ANR	5354131	CallExpression	"memcmp ( ( const char * ) puid1 -> xvalues , ( const char * ) puid2 -> xvalues , ( uint ) - ( puid1 -> id ) * sizeof ( long ) )"		5354105	1					
ANR	5354132	Callee	memcmp		5354105	0					
ANR	5354133	Identifier	memcmp		5354105	0					
ANR	5354134	ArgumentList	( const char * ) puid1 -> xvalues		5354105	1					
ANR	5354135	Argument	( const char * ) puid1 -> xvalues		5354105	0					
ANR	5354136	CastExpression	( const char * ) puid1 -> xvalues		5354105	0					
ANR	5354137	CastTarget	const char *		5354105	0					
ANR	5354138	PtrMemberAccess	puid1 -> xvalues		5354105	1					
ANR	5354139	Identifier	puid1		5354105	0					
ANR	5354140	Identifier	xvalues		5354105	1					
ANR	5354141	Argument	( const char * ) puid2 -> xvalues		5354105	1					
ANR	5354142	CastExpression	( const char * ) puid2 -> xvalues		5354105	0					
ANR	5354143	CastTarget	const char *		5354105	0					
ANR	5354144	PtrMemberAccess	puid2 -> xvalues		5354105	1					
ANR	5354145	Identifier	puid2		5354105	0					
ANR	5354146	Identifier	xvalues		5354105	1					
ANR	5354147	Argument	( uint ) - ( puid1 -> id ) * sizeof ( long )		5354105	2					
ANR	5354148	MultiplicativeExpression	( uint ) - ( puid1 -> id ) * sizeof ( long )		5354105	0		*			
ANR	5354149	CastExpression	( uint ) - ( puid1 -> id )		5354105	0					
ANR	5354150	CastTarget	uint		5354105	0					
ANR	5354151	UnaryOperationExpression	- ( puid1 -> id )		5354105	1					
ANR	5354152	UnaryOperator	-		5354105	0					
ANR	5354153	PtrMemberAccess	puid1 -> id		5354105	1					
ANR	5354154	Identifier	puid1		5354105	0					
ANR	5354155	Identifier	id		5354105	1					
ANR	5354156	SizeofExpression	sizeof ( long )		5354105	1					
ANR	5354157	Sizeof	sizeof		5354105	0					
ANR	5354158	SizeofOperand	long		5354105	1					
ANR	5354159	ReturnType	bool		5354105	1					
ANR	5354160	Identifier	uid_equal		5354105	2					
ANR	5354161	ParameterList	"register const gs_uid * puid1 , register const gs_uid * puid2"		5354105	3					
ANR	5354162	Parameter	register const gs_uid * puid1	223:10:6548:6576	5354105	0	True				
ANR	5354163	ParameterType	register const gs_uid *		5354105	0					
ANR	5354164	Identifier	puid1		5354105	1					
ANR	5354165	Parameter	register const gs_uid * puid2	223:41:6579:6607	5354105	1	True				
ANR	5354166	ParameterType	register const gs_uid *		5354105	0					
ANR	5354167	Identifier	puid2		5354105	1					
ANR	5354168	CFGEntryNode	ENTRY		5354105		True				
ANR	5354169	CFGExitNode	EXIT		5354105		True				
ANR	5354170	Symbol	puid1		5354105						
ANR	5354171	Symbol	puid1 -> id		5354105						
ANR	5354172	Symbol	puid1 -> xvalues		5354105						
ANR	5354173	Symbol	puid2		5354105						
ANR	5354174	Symbol	puid2 -> id		5354105						
ANR	5354175	Symbol	puid2 -> xvalues		5354105						
ANR	5354176	Symbol	memcmp		5354105						
ANR	5354177	Symbol	false		5354105						
ANR	5354178	Symbol	true		5354105						
ANR	5354179	Symbol	* puid1		5354105						
ANR	5354180	Symbol	* puid2		5354105						
ANR	5354181	Function	uid_copy	236:0:6961:7393							
ANR	5354182	FunctionDef	"uid_copy (gs_uid * puid , gs_memory_t * mem , client_name_t cname)"		5354181	0					
ANR	5354183	CompoundStatement		238:0:7027:7393	5354181	0					
ANR	5354184	IfStatement	if ( uid_is_XUID ( puid ) )		5354181	0					
ANR	5354185	Condition	uid_is_XUID ( puid )	239:8:7037:7053	5354181	0	True				
ANR	5354186	CallExpression	uid_is_XUID ( puid )		5354181	0					
ANR	5354187	Callee	uid_is_XUID		5354181	0					
ANR	5354188	Identifier	uid_is_XUID		5354181	0					
ANR	5354189	ArgumentList	puid		5354181	1					
ANR	5354190	Argument	puid		5354181	0					
ANR	5354191	Identifier	puid		5354181	0					
ANR	5354192	CompoundStatement		4:8:80:169	5354181	1					
ANR	5354193	IdentifierDeclStatement	uint xsize = uid_XUID_size ( puid ) ;	240:8:7066:7098	5354181	0	True				
ANR	5354194	IdentifierDecl	xsize = uid_XUID_size ( puid )		5354181	0					
ANR	5354195	IdentifierDeclType	uint		5354181	0					
ANR	5354196	Identifier	xsize		5354181	1					
ANR	5354197	AssignmentExpression	xsize = uid_XUID_size ( puid )		5354181	2		=			
ANR	5354198	Identifier	xsize		5354181	0					
ANR	5354199	CallExpression	uid_XUID_size ( puid )		5354181	1					
ANR	5354200	Callee	uid_XUID_size		5354181	0					
ANR	5354201	Identifier	uid_XUID_size		5354181	0					
ANR	5354202	ArgumentList	puid		5354181	1					
ANR	5354203	Argument	puid		5354181	0					
ANR	5354204	Identifier	puid		5354181	0					
ANR	5354205	IdentifierDeclStatement	"long * xvalues = ( long * ) gs_alloc_byte_array ( mem , xsize , sizeof ( long ) , cname ) ;"	241:8:7108:7197	5354181	1	True				
ANR	5354206	IdentifierDecl	"* xvalues = ( long * ) gs_alloc_byte_array ( mem , xsize , sizeof ( long ) , cname )"		5354181	0					
ANR	5354207	IdentifierDeclType	long *		5354181	0					
ANR	5354208	Identifier	xvalues		5354181	1					
ANR	5354209	AssignmentExpression	"* xvalues = ( long * ) gs_alloc_byte_array ( mem , xsize , sizeof ( long ) , cname )"		5354181	2		=			
ANR	5354210	Identifier	xvalues		5354181	0					
ANR	5354211	CastExpression	"( long * ) gs_alloc_byte_array ( mem , xsize , sizeof ( long ) , cname )"		5354181	1					
ANR	5354212	CastTarget	long *		5354181	0					
ANR	5354213	CallExpression	"gs_alloc_byte_array ( mem , xsize , sizeof ( long ) , cname )"		5354181	1					
ANR	5354214	Callee	gs_alloc_byte_array		5354181	0					
ANR	5354215	Identifier	gs_alloc_byte_array		5354181	0					
ANR	5354216	ArgumentList	mem		5354181	1					
ANR	5354217	Argument	mem		5354181	0					
ANR	5354218	Identifier	mem		5354181	0					
ANR	5354219	Argument	xsize		5354181	1					
ANR	5354220	Identifier	xsize		5354181	0					
ANR	5354221	Argument	sizeof ( long )		5354181	2					
ANR	5354222	SizeofExpression	sizeof ( long )		5354181	0					
ANR	5354223	Sizeof	sizeof		5354181	0					
ANR	5354224	SizeofOperand	long		5354181	1					
ANR	5354225	Argument	cname		5354181	3					
ANR	5354226	Identifier	cname		5354181	0					
ANR	5354227	IfStatement	if ( xvalues == 0 )		5354181	2					
ANR	5354228	Condition	xvalues == 0	244:12:7212:7223	5354181	0	True				
ANR	5354229	EqualityExpression	xvalues == 0		5354181	0		==			
ANR	5354230	Identifier	xvalues		5354181	0					
ANR	5354231	PrimaryExpression	0		5354181	1					
ANR	5354232	ExpressionStatement	return_error ( gs_error_VMerror )	245:12:7238:7268	5354181	1	True				
ANR	5354233	CallExpression	return_error ( gs_error_VMerror )		5354181	0					
ANR	5354234	Callee	return_error		5354181	0					
ANR	5354235	Identifier	return_error		5354181	0					
ANR	5354236	ArgumentList	gs_error_VMerror		5354181	1					
ANR	5354237	Argument	gs_error_VMerror		5354181	0					
ANR	5354238	Identifier	gs_error_VMerror		5354181	0					
ANR	5354239	ExpressionStatement	"memcpy ( xvalues , uid_XUID_values ( puid ) , xsize * sizeof ( long ) )"	246:8:7278:7338	5354181	3	True				
ANR	5354240	CallExpression	"memcpy ( xvalues , uid_XUID_values ( puid ) , xsize * sizeof ( long ) )"		5354181	0					
ANR	5354241	Callee	memcpy		5354181	0					
ANR	5354242	Identifier	memcpy		5354181	0					
ANR	5354243	ArgumentList	xvalues		5354181	1					
ANR	5354244	Argument	xvalues		5354181	0					
ANR	5354245	Identifier	xvalues		5354181	0					
ANR	5354246	Argument	uid_XUID_values ( puid )		5354181	1					
ANR	5354247	CallExpression	uid_XUID_values ( puid )		5354181	0					
ANR	5354248	Callee	uid_XUID_values		5354181	0					
ANR	5354249	Identifier	uid_XUID_values		5354181	0					
ANR	5354250	ArgumentList	puid		5354181	1					
ANR	5354251	Argument	puid		5354181	0					
ANR	5354252	Identifier	puid		5354181	0					
ANR	5354253	Argument	xsize * sizeof ( long )		5354181	2					
ANR	5354254	MultiplicativeExpression	xsize * sizeof ( long )		5354181	0		*			
ANR	5354255	Identifier	xsize		5354181	0					
ANR	5354256	SizeofExpression	sizeof ( long )		5354181	1					
ANR	5354257	Sizeof	sizeof		5354181	0					
ANR	5354258	SizeofOperand	long		5354181	1					
ANR	5354259	ExpressionStatement	puid -> xvalues = xvalues	247:8:7348:7371	5354181	4	True				
ANR	5354260	AssignmentExpression	puid -> xvalues = xvalues		5354181	0		=			
ANR	5354261	PtrMemberAccess	puid -> xvalues		5354181	0					
ANR	5354262	Identifier	puid		5354181	0					
ANR	5354263	Identifier	xvalues		5354181	1					
ANR	5354264	Identifier	xvalues		5354181	1					
ANR	5354265	ReturnStatement	return 0 ;	249:4:7383:7391	5354181	1	True				
ANR	5354266	PrimaryExpression	0		5354181	0					
ANR	5354267	ReturnType	int		5354181	1					
ANR	5354268	Identifier	uid_copy		5354181	2					
ANR	5354269	ParameterList	"gs_uid * puid , gs_memory_t * mem , client_name_t cname"		5354181	3					
ANR	5354270	Parameter	gs_uid * puid	237:9:6974:6985	5354181	0	True				
ANR	5354271	ParameterType	gs_uid *		5354181	0					
ANR	5354272	Identifier	puid		5354181	1					
ANR	5354273	Parameter	gs_memory_t * mem	237:23:6988:7003	5354181	1	True				
ANR	5354274	ParameterType	gs_memory_t *		5354181	0					
ANR	5354275	Identifier	mem		5354181	1					
ANR	5354276	Parameter	client_name_t cname	237:41:7006:7024	5354181	2	True				
ANR	5354277	ParameterType	client_name_t		5354181	0					
ANR	5354278	Identifier	cname		5354181	1					
ANR	5354279	CFGEntryNode	ENTRY		5354181		True				
ANR	5354280	CFGExitNode	EXIT		5354181		True				
ANR	5354281	Symbol	uid_is_XUID		5354181						
ANR	5354282	Symbol	gs_error_VMerror		5354181						
ANR	5354283	Symbol	puid		5354181						
ANR	5354284	Symbol	mem		5354181						
ANR	5354285	Symbol	* puid		5354181						
ANR	5354286	Symbol	cname		5354181						
ANR	5354287	Symbol	xsize		5354181						
ANR	5354288	Symbol	uid_XUID_size		5354181						
ANR	5354289	Symbol	uid_XUID_values		5354181						
ANR	5354290	Symbol	xvalues		5354181						
ANR	5354291	Symbol	gs_alloc_byte_array		5354181						
ANR	5354292	Symbol	puid -> xvalues		5354181						
ANR	5354293	Function	int_rect_difference	259:0:7621:8708							
ANR	5354294	FunctionDef	"int_rect_difference (gs_int_rect * outer , const gs_int_rect * inner , gs_int_rect * diffs)"		5354293	0					
ANR	5354295	CompoundStatement		262:0:7744:8708	5354293	0					
ANR	5354296	IdentifierDeclStatement	"int x0 = outer -> p . x , y0 = outer -> p . y ;"	263:4:7750:7786	5354293	0	True				
ANR	5354297	IdentifierDecl	x0 = outer -> p . x		5354293	0					
ANR	5354298	IdentifierDeclType	int		5354293	0					
ANR	5354299	Identifier	x0		5354293	1					
ANR	5354300	AssignmentExpression	x0 = outer -> p . x		5354293	2		=			
ANR	5354301	Identifier	x0		5354293	0					
ANR	5354302	MemberAccess	outer -> p . x		5354293	1					
ANR	5354303	PtrMemberAccess	outer -> p		5354293	0					
ANR	5354304	Identifier	outer		5354293	0					
ANR	5354305	Identifier	p		5354293	1					
ANR	5354306	Identifier	x		5354293	1					
ANR	5354307	IdentifierDecl	y0 = outer -> p . y		5354293	1					
ANR	5354308	IdentifierDeclType	int		5354293	0					
ANR	5354309	Identifier	y0		5354293	1					
ANR	5354310	AssignmentExpression	y0 = outer -> p . y		5354293	2		=			
ANR	5354311	Identifier	y0		5354293	0					
ANR	5354312	MemberAccess	outer -> p . y		5354293	1					
ANR	5354313	PtrMemberAccess	outer -> p		5354293	0					
ANR	5354314	Identifier	outer		5354293	0					
ANR	5354315	Identifier	p		5354293	1					
ANR	5354316	Identifier	y		5354293	1					
ANR	5354317	IdentifierDeclStatement	"int x1 = outer -> q . x , y1 = outer -> q . y ;"	264:4:7792:7828	5354293	1	True				
ANR	5354318	IdentifierDecl	x1 = outer -> q . x		5354293	0					
ANR	5354319	IdentifierDeclType	int		5354293	0					
ANR	5354320	Identifier	x1		5354293	1					
ANR	5354321	AssignmentExpression	x1 = outer -> q . x		5354293	2		=			
ANR	5354322	Identifier	x1		5354293	0					
ANR	5354323	MemberAccess	outer -> q . x		5354293	1					
ANR	5354324	PtrMemberAccess	outer -> q		5354293	0					
ANR	5354325	Identifier	outer		5354293	0					
ANR	5354326	Identifier	q		5354293	1					
ANR	5354327	Identifier	x		5354293	1					
ANR	5354328	IdentifierDecl	y1 = outer -> q . y		5354293	1					
ANR	5354329	IdentifierDeclType	int		5354293	0					
ANR	5354330	Identifier	y1		5354293	1					
ANR	5354331	AssignmentExpression	y1 = outer -> q . y		5354293	2		=			
ANR	5354332	Identifier	y1		5354293	0					
ANR	5354333	MemberAccess	outer -> q . y		5354293	1					
ANR	5354334	PtrMemberAccess	outer -> q		5354293	0					
ANR	5354335	Identifier	outer		5354293	0					
ANR	5354336	Identifier	q		5354293	1					
ANR	5354337	Identifier	y		5354293	1					
ANR	5354338	IdentifierDeclStatement	int count = 0 ;	265:4:7834:7847	5354293	2	True				
ANR	5354339	IdentifierDecl	count = 0		5354293	0					
ANR	5354340	IdentifierDeclType	int		5354293	0					
ANR	5354341	Identifier	count		5354293	1					
ANR	5354342	AssignmentExpression	count = 0		5354293	2		=			
ANR	5354343	Identifier	count		5354293	0					
ANR	5354344	PrimaryExpression	0		5354293	1					
ANR	5354345	IfStatement	if ( y0 < inner -> p . y )		5354293	3					
ANR	5354346	Condition	y0 < inner -> p . y	267:8:7858:7872	5354293	0	True				
ANR	5354347	RelationalExpression	y0 < inner -> p . y		5354293	0		<			
ANR	5354348	Identifier	y0		5354293	0					
ANR	5354349	MemberAccess	inner -> p . y		5354293	1					
ANR	5354350	PtrMemberAccess	inner -> p		5354293	0					
ANR	5354351	Identifier	inner		5354293	0					
ANR	5354352	Identifier	p		5354293	1					
ANR	5354353	Identifier	y		5354293	1					
ANR	5354354	CompoundStatement		6:25:130:130	5354293	1					
ANR	5354355	ExpressionStatement	"diffs [ 0 ] . p . x = x0 , diffs [ 0 ] . p . y = y0"	268:8:7885:7921	5354293	0	True				
ANR	5354356	Expression	"diffs [ 0 ] . p . x = x0 , diffs [ 0 ] . p . y = y0"		5354293	0					
ANR	5354357	AssignmentExpression	diffs [ 0 ] . p . x = x0		5354293	0		=			
ANR	5354358	MemberAccess	diffs [ 0 ] . p . x		5354293	0					
ANR	5354359	MemberAccess	diffs [ 0 ] . p		5354293	0					
ANR	5354360	ArrayIndexing	diffs [ 0 ]		5354293	0					
ANR	5354361	Identifier	diffs		5354293	0					
ANR	5354362	PrimaryExpression	0		5354293	1					
ANR	5354363	Identifier	p		5354293	1					
ANR	5354364	Identifier	x		5354293	1					
ANR	5354365	Identifier	x0		5354293	1					
ANR	5354366	AssignmentExpression	diffs [ 0 ] . p . y = y0		5354293	1		=			
ANR	5354367	MemberAccess	diffs [ 0 ] . p . y		5354293	0					
ANR	5354368	MemberAccess	diffs [ 0 ] . p		5354293	0					
ANR	5354369	ArrayIndexing	diffs [ 0 ]		5354293	0					
ANR	5354370	Identifier	diffs		5354293	0					
ANR	5354371	PrimaryExpression	0		5354293	1					
ANR	5354372	Identifier	p		5354293	1					
ANR	5354373	Identifier	y		5354293	1					
ANR	5354374	Identifier	y0		5354293	1					
ANR	5354375	ExpressionStatement	"diffs [ 0 ] . q . x = x1 , diffs [ 0 ] . q . y = min ( y1 , inner -> p . y )"	269:8:7931:7984	5354293	1	True				
ANR	5354376	Expression	"diffs [ 0 ] . q . x = x1 , diffs [ 0 ] . q . y = min ( y1 , inner -> p . y )"		5354293	0					
ANR	5354377	AssignmentExpression	diffs [ 0 ] . q . x = x1		5354293	0		=			
ANR	5354378	MemberAccess	diffs [ 0 ] . q . x		5354293	0					
ANR	5354379	MemberAccess	diffs [ 0 ] . q		5354293	0					
ANR	5354380	ArrayIndexing	diffs [ 0 ]		5354293	0					
ANR	5354381	Identifier	diffs		5354293	0					
ANR	5354382	PrimaryExpression	0		5354293	1					
ANR	5354383	Identifier	q		5354293	1					
ANR	5354384	Identifier	x		5354293	1					
ANR	5354385	Identifier	x1		5354293	1					
ANR	5354386	AssignmentExpression	"diffs [ 0 ] . q . y = min ( y1 , inner -> p . y )"		5354293	1		=			
ANR	5354387	MemberAccess	diffs [ 0 ] . q . y		5354293	0					
ANR	5354388	MemberAccess	diffs [ 0 ] . q		5354293	0					
ANR	5354389	ArrayIndexing	diffs [ 0 ]		5354293	0					
ANR	5354390	Identifier	diffs		5354293	0					
ANR	5354391	PrimaryExpression	0		5354293	1					
ANR	5354392	Identifier	q		5354293	1					
ANR	5354393	Identifier	y		5354293	1					
ANR	5354394	CallExpression	"min ( y1 , inner -> p . y )"		5354293	1					
ANR	5354395	Callee	min		5354293	0					
ANR	5354396	Identifier	min		5354293	0					
ANR	5354397	ArgumentList	y1		5354293	1					
ANR	5354398	Argument	y1		5354293	0					
ANR	5354399	Identifier	y1		5354293	0					
ANR	5354400	Argument	inner -> p . y		5354293	1					
ANR	5354401	MemberAccess	inner -> p . y		5354293	0					
ANR	5354402	PtrMemberAccess	inner -> p		5354293	0					
ANR	5354403	Identifier	inner		5354293	0					
ANR	5354404	Identifier	p		5354293	1					
ANR	5354405	Identifier	y		5354293	1					
ANR	5354406	ExpressionStatement	outer -> p . y = y0 = diffs [ 0 ] . q . y	270:8:7994:8024	5354293	2	True				
ANR	5354407	AssignmentExpression	outer -> p . y = y0 = diffs [ 0 ] . q . y		5354293	0		=			
ANR	5354408	MemberAccess	outer -> p . y		5354293	0					
ANR	5354409	PtrMemberAccess	outer -> p		5354293	0					
ANR	5354410	Identifier	outer		5354293	0					
ANR	5354411	Identifier	p		5354293	1					
ANR	5354412	Identifier	y		5354293	1					
ANR	5354413	AssignmentExpression	y0 = diffs [ 0 ] . q . y		5354293	1		=			
ANR	5354414	Identifier	y0		5354293	0					
ANR	5354415	MemberAccess	diffs [ 0 ] . q . y		5354293	1					
ANR	5354416	MemberAccess	diffs [ 0 ] . q		5354293	0					
ANR	5354417	ArrayIndexing	diffs [ 0 ]		5354293	0					
ANR	5354418	Identifier	diffs		5354293	0					
ANR	5354419	PrimaryExpression	0		5354293	1					
ANR	5354420	Identifier	q		5354293	1					
ANR	5354421	Identifier	y		5354293	1					
ANR	5354422	ExpressionStatement	++ count	271:8:8034:8041	5354293	3	True				
ANR	5354423	UnaryExpression	++ count		5354293	0					
ANR	5354424	IncDec	++		5354293	0					
ANR	5354425	Identifier	count		5354293	1					
ANR	5354426	IfStatement	if ( y1 > inner -> q . y )		5354293	4					
ANR	5354427	Condition	y1 > inner -> q . y	273:8:8057:8071	5354293	0	True				
ANR	5354428	RelationalExpression	y1 > inner -> q . y		5354293	0		>			
ANR	5354429	Identifier	y1		5354293	0					
ANR	5354430	MemberAccess	inner -> q . y		5354293	1					
ANR	5354431	PtrMemberAccess	inner -> q		5354293	0					
ANR	5354432	Identifier	inner		5354293	0					
ANR	5354433	Identifier	q		5354293	1					
ANR	5354434	Identifier	y		5354293	1					
ANR	5354435	CompoundStatement		12:25:329:329	5354293	1					
ANR	5354436	ExpressionStatement	"diffs [ count ] . p . x = x0 , diffs [ count ] . p . y = max ( y0 , inner -> q . y )"	274:8:8084:8145	5354293	0	True				
ANR	5354437	Expression	"diffs [ count ] . p . x = x0 , diffs [ count ] . p . y = max ( y0 , inner -> q . y )"		5354293	0					
ANR	5354438	AssignmentExpression	diffs [ count ] . p . x = x0		5354293	0		=			
ANR	5354439	MemberAccess	diffs [ count ] . p . x		5354293	0					
ANR	5354440	MemberAccess	diffs [ count ] . p		5354293	0					
ANR	5354441	ArrayIndexing	diffs [ count ]		5354293	0					
ANR	5354442	Identifier	diffs		5354293	0					
ANR	5354443	Identifier	count		5354293	1					
ANR	5354444	Identifier	p		5354293	1					
ANR	5354445	Identifier	x		5354293	1					
ANR	5354446	Identifier	x0		5354293	1					
ANR	5354447	AssignmentExpression	"diffs [ count ] . p . y = max ( y0 , inner -> q . y )"		5354293	1		=			
ANR	5354448	MemberAccess	diffs [ count ] . p . y		5354293	0					
ANR	5354449	MemberAccess	diffs [ count ] . p		5354293	0					
ANR	5354450	ArrayIndexing	diffs [ count ]		5354293	0					
ANR	5354451	Identifier	diffs		5354293	0					
ANR	5354452	Identifier	count		5354293	1					
ANR	5354453	Identifier	p		5354293	1					
ANR	5354454	Identifier	y		5354293	1					
ANR	5354455	CallExpression	"max ( y0 , inner -> q . y )"		5354293	1					
ANR	5354456	Callee	max		5354293	0					
ANR	5354457	Identifier	max		5354293	0					
ANR	5354458	ArgumentList	y0		5354293	1					
ANR	5354459	Argument	y0		5354293	0					
ANR	5354460	Identifier	y0		5354293	0					
ANR	5354461	Argument	inner -> q . y		5354293	1					
ANR	5354462	MemberAccess	inner -> q . y		5354293	0					
ANR	5354463	PtrMemberAccess	inner -> q		5354293	0					
ANR	5354464	Identifier	inner		5354293	0					
ANR	5354465	Identifier	q		5354293	1					
ANR	5354466	Identifier	y		5354293	1					
ANR	5354467	ExpressionStatement	"diffs [ count ] . q . x = x1 , diffs [ count ] . q . y = y1"	275:8:8155:8199	5354293	1	True				
ANR	5354468	Expression	"diffs [ count ] . q . x = x1 , diffs [ count ] . q . y = y1"		5354293	0					
ANR	5354469	AssignmentExpression	diffs [ count ] . q . x = x1		5354293	0		=			
ANR	5354470	MemberAccess	diffs [ count ] . q . x		5354293	0					
ANR	5354471	MemberAccess	diffs [ count ] . q		5354293	0					
ANR	5354472	ArrayIndexing	diffs [ count ]		5354293	0					
ANR	5354473	Identifier	diffs		5354293	0					
ANR	5354474	Identifier	count		5354293	1					
ANR	5354475	Identifier	q		5354293	1					
ANR	5354476	Identifier	x		5354293	1					
ANR	5354477	Identifier	x1		5354293	1					
ANR	5354478	AssignmentExpression	diffs [ count ] . q . y = y1		5354293	1		=			
ANR	5354479	MemberAccess	diffs [ count ] . q . y		5354293	0					
ANR	5354480	MemberAccess	diffs [ count ] . q		5354293	0					
ANR	5354481	ArrayIndexing	diffs [ count ]		5354293	0					
ANR	5354482	Identifier	diffs		5354293	0					
ANR	5354483	Identifier	count		5354293	1					
ANR	5354484	Identifier	q		5354293	1					
ANR	5354485	Identifier	y		5354293	1					
ANR	5354486	Identifier	y1		5354293	1					
ANR	5354487	ExpressionStatement	outer -> q . y = y1 = diffs [ count ] . p . y	276:8:8209:8243	5354293	2	True				
ANR	5354488	AssignmentExpression	outer -> q . y = y1 = diffs [ count ] . p . y		5354293	0		=			
ANR	5354489	MemberAccess	outer -> q . y		5354293	0					
ANR	5354490	PtrMemberAccess	outer -> q		5354293	0					
ANR	5354491	Identifier	outer		5354293	0					
ANR	5354492	Identifier	q		5354293	1					
ANR	5354493	Identifier	y		5354293	1					
ANR	5354494	AssignmentExpression	y1 = diffs [ count ] . p . y		5354293	1		=			
ANR	5354495	Identifier	y1		5354293	0					
ANR	5354496	MemberAccess	diffs [ count ] . p . y		5354293	1					
ANR	5354497	MemberAccess	diffs [ count ] . p		5354293	0					
ANR	5354498	ArrayIndexing	diffs [ count ]		5354293	0					
ANR	5354499	Identifier	diffs		5354293	0					
ANR	5354500	Identifier	count		5354293	1					
ANR	5354501	Identifier	p		5354293	1					
ANR	5354502	Identifier	y		5354293	1					
ANR	5354503	ExpressionStatement	++ count	277:8:8253:8260	5354293	3	True				
ANR	5354504	UnaryExpression	++ count		5354293	0					
ANR	5354505	IncDec	++		5354293	0					
ANR	5354506	Identifier	count		5354293	1					
ANR	5354507	IfStatement	if ( x0 < inner -> p . x )		5354293	5					
ANR	5354508	Condition	x0 < inner -> p . x	279:8:8276:8290	5354293	0	True				
ANR	5354509	RelationalExpression	x0 < inner -> p . x		5354293	0		<			
ANR	5354510	Identifier	x0		5354293	0					
ANR	5354511	MemberAccess	inner -> p . x		5354293	1					
ANR	5354512	PtrMemberAccess	inner -> p		5354293	0					
ANR	5354513	Identifier	inner		5354293	0					
ANR	5354514	Identifier	p		5354293	1					
ANR	5354515	Identifier	x		5354293	1					
ANR	5354516	CompoundStatement		18:25:548:548	5354293	1					
ANR	5354517	ExpressionStatement	"diffs [ 0 ] . p . x = x0 , diffs [ 0 ] . p . y = y0"	280:8:8303:8339	5354293	0	True				
ANR	5354518	Expression	"diffs [ 0 ] . p . x = x0 , diffs [ 0 ] . p . y = y0"		5354293	0					
ANR	5354519	AssignmentExpression	diffs [ 0 ] . p . x = x0		5354293	0		=			
ANR	5354520	MemberAccess	diffs [ 0 ] . p . x		5354293	0					
ANR	5354521	MemberAccess	diffs [ 0 ] . p		5354293	0					
ANR	5354522	ArrayIndexing	diffs [ 0 ]		5354293	0					
ANR	5354523	Identifier	diffs		5354293	0					
ANR	5354524	PrimaryExpression	0		5354293	1					
ANR	5354525	Identifier	p		5354293	1					
ANR	5354526	Identifier	x		5354293	1					
ANR	5354527	Identifier	x0		5354293	1					
ANR	5354528	AssignmentExpression	diffs [ 0 ] . p . y = y0		5354293	1		=			
ANR	5354529	MemberAccess	diffs [ 0 ] . p . y		5354293	0					
ANR	5354530	MemberAccess	diffs [ 0 ] . p		5354293	0					
ANR	5354531	ArrayIndexing	diffs [ 0 ]		5354293	0					
ANR	5354532	Identifier	diffs		5354293	0					
ANR	5354533	PrimaryExpression	0		5354293	1					
ANR	5354534	Identifier	p		5354293	1					
ANR	5354535	Identifier	y		5354293	1					
ANR	5354536	Identifier	y0		5354293	1					
ANR	5354537	ExpressionStatement	"diffs [ 0 ] . q . x = min ( x1 , inner -> p . x ) , diffs [ 0 ] . q . y = y1"	281:8:8349:8402	5354293	1	True				
ANR	5354538	Expression	"diffs [ 0 ] . q . x = min ( x1 , inner -> p . x ) , diffs [ 0 ] . q . y = y1"		5354293	0					
ANR	5354539	AssignmentExpression	"diffs [ 0 ] . q . x = min ( x1 , inner -> p . x )"		5354293	0		=			
ANR	5354540	MemberAccess	diffs [ 0 ] . q . x		5354293	0					
ANR	5354541	MemberAccess	diffs [ 0 ] . q		5354293	0					
ANR	5354542	ArrayIndexing	diffs [ 0 ]		5354293	0					
ANR	5354543	Identifier	diffs		5354293	0					
ANR	5354544	PrimaryExpression	0		5354293	1					
ANR	5354545	Identifier	q		5354293	1					
ANR	5354546	Identifier	x		5354293	1					
ANR	5354547	CallExpression	"min ( x1 , inner -> p . x )"		5354293	1					
ANR	5354548	Callee	min		5354293	0					
ANR	5354549	Identifier	min		5354293	0					
ANR	5354550	ArgumentList	x1		5354293	1					
ANR	5354551	Argument	x1		5354293	0					
ANR	5354552	Identifier	x1		5354293	0					
ANR	5354553	Argument	inner -> p . x		5354293	1					
ANR	5354554	MemberAccess	inner -> p . x		5354293	0					
ANR	5354555	PtrMemberAccess	inner -> p		5354293	0					
ANR	5354556	Identifier	inner		5354293	0					
ANR	5354557	Identifier	p		5354293	1					
ANR	5354558	Identifier	x		5354293	1					
ANR	5354559	AssignmentExpression	diffs [ 0 ] . q . y = y1		5354293	1		=			
ANR	5354560	MemberAccess	diffs [ 0 ] . q . y		5354293	0					
ANR	5354561	MemberAccess	diffs [ 0 ] . q		5354293	0					
ANR	5354562	ArrayIndexing	diffs [ 0 ]		5354293	0					
ANR	5354563	Identifier	diffs		5354293	0					
ANR	5354564	PrimaryExpression	0		5354293	1					
ANR	5354565	Identifier	q		5354293	1					
ANR	5354566	Identifier	y		5354293	1					
ANR	5354567	Identifier	y1		5354293	1					
ANR	5354568	ExpressionStatement	outer -> p . x = x0 = diffs [ count ] . q . x	282:8:8412:8446	5354293	2	True				
ANR	5354569	AssignmentExpression	outer -> p . x = x0 = diffs [ count ] . q . x		5354293	0		=			
ANR	5354570	MemberAccess	outer -> p . x		5354293	0					
ANR	5354571	PtrMemberAccess	outer -> p		5354293	0					
ANR	5354572	Identifier	outer		5354293	0					
ANR	5354573	Identifier	p		5354293	1					
ANR	5354574	Identifier	x		5354293	1					
ANR	5354575	AssignmentExpression	x0 = diffs [ count ] . q . x		5354293	1		=			
ANR	5354576	Identifier	x0		5354293	0					
ANR	5354577	MemberAccess	diffs [ count ] . q . x		5354293	1					
ANR	5354578	MemberAccess	diffs [ count ] . q		5354293	0					
ANR	5354579	ArrayIndexing	diffs [ count ]		5354293	0					
ANR	5354580	Identifier	diffs		5354293	0					
ANR	5354581	Identifier	count		5354293	1					
ANR	5354582	Identifier	q		5354293	1					
ANR	5354583	Identifier	x		5354293	1					
ANR	5354584	ExpressionStatement	++ count	283:8:8456:8463	5354293	3	True				
ANR	5354585	UnaryExpression	++ count		5354293	0					
ANR	5354586	IncDec	++		5354293	0					
ANR	5354587	Identifier	count		5354293	1					
ANR	5354588	IfStatement	if ( x1 > inner -> q . x )		5354293	6					
ANR	5354589	Condition	x1 > inner -> q . x	285:8:8479:8493	5354293	0	True				
ANR	5354590	RelationalExpression	x1 > inner -> q . x		5354293	0		>			
ANR	5354591	Identifier	x1		5354293	0					
ANR	5354592	MemberAccess	inner -> q . x		5354293	1					
ANR	5354593	PtrMemberAccess	inner -> q		5354293	0					
ANR	5354594	Identifier	inner		5354293	0					
ANR	5354595	Identifier	q		5354293	1					
ANR	5354596	Identifier	x		5354293	1					
ANR	5354597	CompoundStatement		24:25:751:751	5354293	1					
ANR	5354598	ExpressionStatement	"diffs [ count ] . p . x = max ( x0 , inner -> q . x ) , diffs [ count ] . p . y = y0"	286:8:8506:8567	5354293	0	True				
ANR	5354599	Expression	"diffs [ count ] . p . x = max ( x0 , inner -> q . x ) , diffs [ count ] . p . y = y0"		5354293	0					
ANR	5354600	AssignmentExpression	"diffs [ count ] . p . x = max ( x0 , inner -> q . x )"		5354293	0		=			
ANR	5354601	MemberAccess	diffs [ count ] . p . x		5354293	0					
ANR	5354602	MemberAccess	diffs [ count ] . p		5354293	0					
ANR	5354603	ArrayIndexing	diffs [ count ]		5354293	0					
ANR	5354604	Identifier	diffs		5354293	0					
ANR	5354605	Identifier	count		5354293	1					
ANR	5354606	Identifier	p		5354293	1					
ANR	5354607	Identifier	x		5354293	1					
ANR	5354608	CallExpression	"max ( x0 , inner -> q . x )"		5354293	1					
ANR	5354609	Callee	max		5354293	0					
ANR	5354610	Identifier	max		5354293	0					
ANR	5354611	ArgumentList	x0		5354293	1					
ANR	5354612	Argument	x0		5354293	0					
ANR	5354613	Identifier	x0		5354293	0					
ANR	5354614	Argument	inner -> q . x		5354293	1					
ANR	5354615	MemberAccess	inner -> q . x		5354293	0					
ANR	5354616	PtrMemberAccess	inner -> q		5354293	0					
ANR	5354617	Identifier	inner		5354293	0					
ANR	5354618	Identifier	q		5354293	1					
ANR	5354619	Identifier	x		5354293	1					
ANR	5354620	AssignmentExpression	diffs [ count ] . p . y = y0		5354293	1		=			
ANR	5354621	MemberAccess	diffs [ count ] . p . y		5354293	0					
ANR	5354622	MemberAccess	diffs [ count ] . p		5354293	0					
ANR	5354623	ArrayIndexing	diffs [ count ]		5354293	0					
ANR	5354624	Identifier	diffs		5354293	0					
ANR	5354625	Identifier	count		5354293	1					
ANR	5354626	Identifier	p		5354293	1					
ANR	5354627	Identifier	y		5354293	1					
ANR	5354628	Identifier	y0		5354293	1					
ANR	5354629	ExpressionStatement	"diffs [ count ] . q . x = x1 , diffs [ count ] . q . y = y1"	287:8:8577:8621	5354293	1	True				
ANR	5354630	Expression	"diffs [ count ] . q . x = x1 , diffs [ count ] . q . y = y1"		5354293	0					
ANR	5354631	AssignmentExpression	diffs [ count ] . q . x = x1		5354293	0		=			
ANR	5354632	MemberAccess	diffs [ count ] . q . x		5354293	0					
ANR	5354633	MemberAccess	diffs [ count ] . q		5354293	0					
ANR	5354634	ArrayIndexing	diffs [ count ]		5354293	0					
ANR	5354635	Identifier	diffs		5354293	0					
ANR	5354636	Identifier	count		5354293	1					
ANR	5354637	Identifier	q		5354293	1					
ANR	5354638	Identifier	x		5354293	1					
ANR	5354639	Identifier	x1		5354293	1					
ANR	5354640	AssignmentExpression	diffs [ count ] . q . y = y1		5354293	1		=			
ANR	5354641	MemberAccess	diffs [ count ] . q . y		5354293	0					
ANR	5354642	MemberAccess	diffs [ count ] . q		5354293	0					
ANR	5354643	ArrayIndexing	diffs [ count ]		5354293	0					
ANR	5354644	Identifier	diffs		5354293	0					
ANR	5354645	Identifier	count		5354293	1					
ANR	5354646	Identifier	q		5354293	1					
ANR	5354647	Identifier	y		5354293	1					
ANR	5354648	Identifier	y1		5354293	1					
ANR	5354649	ExpressionStatement	outer -> q . x = x1 = diffs [ count ] . p . x	288:8:8631:8665	5354293	2	True				
ANR	5354650	AssignmentExpression	outer -> q . x = x1 = diffs [ count ] . p . x		5354293	0		=			
ANR	5354651	MemberAccess	outer -> q . x		5354293	0					
ANR	5354652	PtrMemberAccess	outer -> q		5354293	0					
ANR	5354653	Identifier	outer		5354293	0					
ANR	5354654	Identifier	q		5354293	1					
ANR	5354655	Identifier	x		5354293	1					
ANR	5354656	AssignmentExpression	x1 = diffs [ count ] . p . x		5354293	1		=			
ANR	5354657	Identifier	x1		5354293	0					
ANR	5354658	MemberAccess	diffs [ count ] . p . x		5354293	1					
ANR	5354659	MemberAccess	diffs [ count ] . p		5354293	0					
ANR	5354660	ArrayIndexing	diffs [ count ]		5354293	0					
ANR	5354661	Identifier	diffs		5354293	0					
ANR	5354662	Identifier	count		5354293	1					
ANR	5354663	Identifier	p		5354293	1					
ANR	5354664	Identifier	x		5354293	1					
ANR	5354665	ExpressionStatement	++ count	289:8:8675:8682	5354293	3	True				
ANR	5354666	UnaryExpression	++ count		5354293	0					
ANR	5354667	IncDec	++		5354293	0					
ANR	5354668	Identifier	count		5354293	1					
ANR	5354669	ReturnStatement	return count ;	291:4:8694:8706	5354293	7	True				
ANR	5354670	Identifier	count		5354293	0					
ANR	5354671	ReturnType	int		5354293	1					
ANR	5354672	Identifier	int_rect_difference		5354293	2					
ANR	5354673	ParameterList	"gs_int_rect * outer , const gs_int_rect * inner , gs_int_rect * diffs"		5354293	3					
ANR	5354674	Parameter	gs_int_rect * outer	260:20:7645:7663	5354293	0	True				
ANR	5354675	ParameterType	gs_int_rect *		5354293	0					
ANR	5354676	Identifier	outer		5354293	1					
ANR	5354677	Parameter	const gs_int_rect * inner	260:41:7666:7690	5354293	1	True				
ANR	5354678	ParameterType	const gs_int_rect *		5354293	0					
ANR	5354679	Identifier	inner		5354293	1					
ANR	5354680	Parameter	gs_int_rect * diffs	261:20:7713:7731	5354293	2	True				
ANR	5354681	ParameterType	gs_int_rect *		5354293	0					
ANR	5354682	Identifier	diffs		5354293	1					
ANR	5354683	CFGEntryNode	ENTRY		5354293		True				
ANR	5354684	CFGExitNode	EXIT		5354293		True				
ANR	5354685	Symbol	diffs [ 0 ] . q . y		5354293						
ANR	5354686	Symbol	* diffs		5354293						
ANR	5354687	Symbol	diffs [ 0 ] . q . x		5354293						
ANR	5354688	Symbol	* count		5354293						
ANR	5354689	Symbol	min		5354293						
ANR	5354690	Symbol	y0		5354293						
ANR	5354691	Symbol	y1		5354293						
ANR	5354692	Symbol	outer -> q		5354293						
ANR	5354693	Symbol	outer -> p		5354293						
ANR	5354694	Symbol	diffs [ 0 ] . p . y		5354293						
ANR	5354695	Symbol	diffs [ 0 ] . p . x		5354293						
ANR	5354696	Symbol	outer -> p . y		5354293						
ANR	5354697	Symbol	outer -> p . x		5354293						
ANR	5354698	Symbol	diffs [ count ] . q . x		5354293						
ANR	5354699	Symbol	inner -> q . x		5354293						
ANR	5354700	Symbol	inner -> q . y		5354293						
ANR	5354701	Symbol	diffs [ count ] . q . y		5354293						
ANR	5354702	Symbol	max		5354293						
ANR	5354703	Symbol	outer		5354293						
ANR	5354704	Symbol	count		5354293						
ANR	5354705	Symbol	outer -> q . y		5354293						
ANR	5354706	Symbol	inner		5354293						
ANR	5354707	Symbol	outer -> q . x		5354293						
ANR	5354708	Symbol	inner -> p . y		5354293						
ANR	5354709	Symbol	diffs [ count ] . p . y		5354293						
ANR	5354710	Symbol	inner -> q		5354293						
ANR	5354711	Symbol	diffs [ count ] . p . x		5354293						
ANR	5354712	Symbol	inner -> p . x		5354293						
ANR	5354713	Symbol	diffs [ 0 ] . q		5354293						
ANR	5354714	Symbol	inner -> p		5354293						
ANR	5354715	Symbol	diffs [ 0 ] . p		5354293						
ANR	5354716	Symbol	* outer		5354293						
ANR	5354717	Symbol	x0		5354293						
ANR	5354718	Symbol	x1		5354293						
ANR	5354719	Symbol	diffs [ count ] . q		5354293						
ANR	5354720	Symbol	diffs		5354293						
ANR	5354721	Symbol	* inner		5354293						
ANR	5354722	Symbol	diffs [ count ] . p		5354293						
