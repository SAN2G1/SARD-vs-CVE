command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	10985599	File	data/converged/CVE-2018-16863_ghostpdl/zcolor.c								
ANR	10985600	DeclStmt									
ANR	10985601	Decl							const float	const float [ ]	default_0_1
ANR	10985602	DeclStmt									
ANR	10985603	Decl							extern void	extern void ( gs_gstate * )	gx_set_effective_transfer
ANR	10985604	DeclStmt									
ANR	10985605	Decl							int	"int ( i_ctx_t * i_ctx_p , ref * arr , int * depth )"	validate_spaces
ANR	10985606	DeclStmt									
ANR	10985607	Decl							int	int ( i_ctx_t * i_ctx_p )	setcolorspace_cont
ANR	10985608	DeclStmt									
ANR	10985609	Decl							int	int ( i_ctx_t * i_ctx_p )	setcolor_cont
ANR	10985610	DeclStmt									
ANR	10985611	Decl							const int	const int	zcolor_remap_one_ostack
ANR	10985612	DeclStmt									
ANR	10985613	Decl							const int	const int	zcolor_remap_one_estack
ANR	10985614	Function	pattern_instance_uses_base_space	79:0:2802:3000							
ANR	10985615	FunctionDef	pattern_instance_uses_base_space (const gs_pattern_instance_t * pinst)		10985614	0					
ANR	10985616	CompoundStatement		81:0:2891:3000	10985614	0					
ANR	10985617	ReturnStatement	return pinst -> type -> procs . uses_base_space ( pinst -> type -> procs . get_pattern ( pinst ) ) ;	82:4:2897:2998	10985614	0	True				
ANR	10985618	CallExpression	pinst -> type -> procs . uses_base_space ( pinst -> type -> procs . get_pattern ( pinst ) )		10985614	0					
ANR	10985619	Callee	pinst -> type -> procs . uses_base_space		10985614	0					
ANR	10985620	MemberAccess	pinst -> type -> procs . uses_base_space		10985614	0					
ANR	10985621	PtrMemberAccess	pinst -> type -> procs		10985614	0					
ANR	10985622	PtrMemberAccess	pinst -> type		10985614	0					
ANR	10985623	Identifier	pinst		10985614	0					
ANR	10985624	Identifier	type		10985614	1					
ANR	10985625	Identifier	procs		10985614	1					
ANR	10985626	Identifier	uses_base_space		10985614	1					
ANR	10985627	ArgumentList	pinst -> type -> procs . get_pattern ( pinst )		10985614	1					
ANR	10985628	Argument	pinst -> type -> procs . get_pattern ( pinst )		10985614	0					
ANR	10985629	CallExpression	pinst -> type -> procs . get_pattern ( pinst )		10985614	0					
ANR	10985630	Callee	pinst -> type -> procs . get_pattern		10985614	0					
ANR	10985631	MemberAccess	pinst -> type -> procs . get_pattern		10985614	0					
ANR	10985632	PtrMemberAccess	pinst -> type -> procs		10985614	0					
ANR	10985633	PtrMemberAccess	pinst -> type		10985614	0					
ANR	10985634	Identifier	pinst		10985614	0					
ANR	10985635	Identifier	type		10985614	1					
ANR	10985636	Identifier	procs		10985614	1					
ANR	10985637	Identifier	get_pattern		10985614	1					
ANR	10985638	ArgumentList	pinst		10985614	1					
ANR	10985639	Argument	pinst		10985614	0					
ANR	10985640	Identifier	pinst		10985614	0					
ANR	10985641	ReturnType	static inline bool		10985614	1					
ANR	10985642	Identifier	pattern_instance_uses_base_space		10985614	2					
ANR	10985643	ParameterList	const gs_pattern_instance_t * pinst		10985614	3					
ANR	10985644	Parameter	const gs_pattern_instance_t * pinst	80:33:2854:2888	10985614	0	True				
ANR	10985645	ParameterType	const gs_pattern_instance_t *		10985614	0					
ANR	10985646	Identifier	pinst		10985614	1					
ANR	10985647	CFGEntryNode	ENTRY		10985614		True				
ANR	10985648	CFGExitNode	EXIT		10985614		True				
ANR	10985649	Symbol	* * pinst		10985614						
ANR	10985650	Symbol	pinst -> type -> procs . uses_base_space		10985614						
ANR	10985651	Symbol	pinst -> type		10985614						
ANR	10985652	Symbol	* pinst -> type		10985614						
ANR	10985653	Symbol	pinst -> type -> procs		10985614						
ANR	10985654	Symbol	* pinst		10985614						
ANR	10985655	Symbol	pinst		10985614						
ANR	10985656	Symbol	pinst -> type -> procs . get_pattern		10985614						
ANR	10985657	Function	zcurrentcolor	102:0:3724:4905							
ANR	10985658	FunctionDef	zcurrentcolor (i_ctx_t * i_ctx_p)		10985657	0					
ANR	10985659	CompoundStatement		104:0:3768:4905	10985657	0					
ANR	10985660	IdentifierDeclStatement	os_ptr op = osp ;	105:4:3774:3806	10985657	0	True				
ANR	10985661	IdentifierDecl	op = osp		10985657	0					
ANR	10985662	IdentifierDeclType	os_ptr		10985657	0					
ANR	10985663	Identifier	op		10985657	1					
ANR	10985664	AssignmentExpression	op = osp		10985657	2		=			
ANR	10985665	Identifier	osp		10985657	0					
ANR	10985666	Identifier	osp		10985657	1					
ANR	10985667	IdentifierDeclStatement	const gs_color_space * pcs = gs_currentcolorspace ( igs ) ;	106:4:3812:3867	10985657	1	True				
ANR	10985668	IdentifierDecl	* pcs = gs_currentcolorspace ( igs )		10985657	0					
ANR	10985669	IdentifierDeclType	const gs_color_space *		10985657	0					
ANR	10985670	Identifier	pcs		10985657	1					
ANR	10985671	AssignmentExpression	* pcs = gs_currentcolorspace ( igs )		10985657	2		=			
ANR	10985672	Identifier	pcs		10985657	0					
ANR	10985673	CallExpression	gs_currentcolorspace ( igs )		10985657	1					
ANR	10985674	Callee	gs_currentcolorspace		10985657	0					
ANR	10985675	Identifier	gs_currentcolorspace		10985657	0					
ANR	10985676	ArgumentList	igs		10985657	1					
ANR	10985677	Argument	igs		10985657	0					
ANR	10985678	Identifier	igs		10985657	0					
ANR	10985679	IdentifierDeclStatement	const gs_client_color * pcc = gs_currentcolor ( igs ) ;	107:4:3873:3923	10985657	2	True				
ANR	10985680	IdentifierDecl	* pcc = gs_currentcolor ( igs )		10985657	0					
ANR	10985681	IdentifierDeclType	const gs_client_color *		10985657	0					
ANR	10985682	Identifier	pcc		10985657	1					
ANR	10985683	AssignmentExpression	* pcc = gs_currentcolor ( igs )		10985657	2		=			
ANR	10985684	Identifier	pcc		10985657	0					
ANR	10985685	CallExpression	gs_currentcolor ( igs )		10985657	1					
ANR	10985686	Callee	gs_currentcolor		10985657	0					
ANR	10985687	Identifier	gs_currentcolor		10985657	0					
ANR	10985688	ArgumentList	igs		10985657	1					
ANR	10985689	Argument	igs		10985657	0					
ANR	10985690	Identifier	igs		10985657	0					
ANR	10985691	IdentifierDeclStatement	"int i , n = cs_num_components ( pcs ) ;"	108:4:3929:3982	10985657	3	True				
ANR	10985692	IdentifierDecl	i		10985657	0					
ANR	10985693	IdentifierDeclType	int		10985657	0					
ANR	10985694	Identifier	i		10985657	1					
ANR	10985695	IdentifierDecl	n = cs_num_components ( pcs )		10985657	1					
ANR	10985696	IdentifierDeclType	int		10985657	0					
ANR	10985697	Identifier	n		10985657	1					
ANR	10985698	AssignmentExpression	n = cs_num_components ( pcs )		10985657	2		=			
ANR	10985699	Identifier	n		10985657	0					
ANR	10985700	CallExpression	cs_num_components ( pcs )		10985657	1					
ANR	10985701	Callee	cs_num_components		10985657	0					
ANR	10985702	Identifier	cs_num_components		10985657	0					
ANR	10985703	ArgumentList	pcs		10985657	1					
ANR	10985704	Argument	pcs		10985657	0					
ANR	10985705	Identifier	pcs		10985657	0					
ANR	10985706	IdentifierDeclStatement	bool push_pattern = n < 0 ;	109:4:3988:4032	10985657	4	True				
ANR	10985707	IdentifierDecl	push_pattern = n < 0		10985657	0					
ANR	10985708	IdentifierDeclType	bool		10985657	0					
ANR	10985709	Identifier	push_pattern		10985657	1					
ANR	10985710	AssignmentExpression	push_pattern = n < 0		10985657	2		=			
ANR	10985711	Identifier	push_pattern		10985657	0					
ANR	10985712	RelationalExpression	n < 0		10985657	1		<			
ANR	10985713	Identifier	n		10985657	0					
ANR	10985714	PrimaryExpression	0		10985657	1					
ANR	10985715	IfStatement	if ( push_pattern )		10985657	5					
ANR	10985716	Condition	push_pattern	112:8:4071:4082	10985657	0	True				
ANR	10985717	Identifier	push_pattern		10985657	0					
ANR	10985718	CompoundStatement		10:8:326:370	10985657	1					
ANR	10985719	IdentifierDeclStatement	gs_pattern_instance_t * pinst = pcc -> pattern ;	113:8:4095:4139	10985657	0	True				
ANR	10985720	IdentifierDecl	* pinst = pcc -> pattern		10985657	0					
ANR	10985721	IdentifierDeclType	gs_pattern_instance_t *		10985657	0					
ANR	10985722	Identifier	pinst		10985657	1					
ANR	10985723	AssignmentExpression	* pinst = pcc -> pattern		10985657	2		=			
ANR	10985724	Identifier	pinst		10985657	0					
ANR	10985725	PtrMemberAccess	pcc -> pattern		10985657	1					
ANR	10985726	Identifier	pcc		10985657	0					
ANR	10985727	Identifier	pattern		10985657	1					
ANR	10985728	IfStatement	if ( pinst == 0 || ! pattern_instance_uses_base_space ( pinst ) )		10985657	1					
ANR	10985729	Condition	pinst == 0 || ! pattern_instance_uses_base_space ( pinst )	115:12:4154:4207	10985657	0	True				
ANR	10985730	OrExpression	pinst == 0 || ! pattern_instance_uses_base_space ( pinst )		10985657	0		||			
ANR	10985731	EqualityExpression	pinst == 0		10985657	0		==			
ANR	10985732	Identifier	pinst		10985657	0					
ANR	10985733	PrimaryExpression	0		10985657	1					
ANR	10985734	UnaryOperationExpression	! pattern_instance_uses_base_space ( pinst )		10985657	1					
ANR	10985735	UnaryOperator	!		10985657	0					
ANR	10985736	CallExpression	pattern_instance_uses_base_space ( pinst )		10985657	1					
ANR	10985737	Callee	pattern_instance_uses_base_space		10985657	0					
ANR	10985738	Identifier	pattern_instance_uses_base_space		10985657	0					
ANR	10985739	ArgumentList	pinst		10985657	1					
ANR	10985740	Argument	pinst		10985657	0					
ANR	10985741	Identifier	pinst		10985657	0					
ANR	10985742	ExpressionStatement	n = 1	116:12:4222:4227	10985657	1	True				
ANR	10985743	AssignmentExpression	n = 1		10985657	0		=			
ANR	10985744	Identifier	n		10985657	0					
ANR	10985745	PrimaryExpression	1		10985657	1					
ANR	10985746	ElseStatement	else		10985657	0					
ANR	10985747	ExpressionStatement	n = - n	118:12:4254:4260	10985657	0	True				
ANR	10985748	AssignmentExpression	n = - n		10985657	0		=			
ANR	10985749	Identifier	n		10985657	0					
ANR	10985750	UnaryOperationExpression	- n		10985657	1					
ANR	10985751	UnaryOperator	-		10985657	0					
ANR	10985752	Identifier	n		10985657	1					
ANR	10985753	ExpressionStatement	push ( n )	122:4:4323:4330	10985657	6	True				
ANR	10985754	CallExpression	push ( n )		10985657	0					
ANR	10985755	Callee	push		10985657	0					
ANR	10985756	Identifier	push		10985657	0					
ANR	10985757	ArgumentList	n		10985657	1					
ANR	10985758	Argument	n		10985657	0					
ANR	10985759	Identifier	n		10985657	0					
ANR	10985760	ExpressionStatement	op -= n - 1	123:4:4336:4347	10985657	7	True				
ANR	10985761	AssignmentExpression	op -= n - 1		10985657	0		-=			
ANR	10985762	Identifier	op		10985657	0					
ANR	10985763	AdditiveExpression	n - 1		10985657	1		-			
ANR	10985764	Identifier	n		10985657	0					
ANR	10985765	PrimaryExpression	1		10985657	1					
ANR	10985766	IfStatement	if ( push_pattern )		10985657	8					
ANR	10985767	Condition	push_pattern	126:8:4402:4413	10985657	0	True				
ANR	10985768	Identifier	push_pattern		10985657	0					
ANR	10985769	ExpressionStatement	-- n	127:8:4424:4427	10985657	1	True				
ANR	10985770	UnaryExpression	-- n		10985657	0					
ANR	10985771	IncDec	--		10985657	0					
ANR	10985772	Identifier	n		10985657	1					
ANR	10985773	ForStatement	"for ( i = 0 ; i < n ; i ++ , op ++ )"		10985657	9					
ANR	10985774	ForInit	i = 0 ;	128:9:4438:4443	10985657	0	True				
ANR	10985775	AssignmentExpression	i = 0		10985657	0		=			
ANR	10985776	Identifier	i		10985657	0					
ANR	10985777	PrimaryExpression	0		10985657	1					
ANR	10985778	Condition	i < n	128:16:4445:4449	10985657	1	True				
ANR	10985779	RelationalExpression	i < n		10985657	0		<			
ANR	10985780	Identifier	i		10985657	0					
ANR	10985781	Identifier	n		10985657	1					
ANR	10985782	Expression	"i ++ , op ++"	128:23:4452:4460	10985657	2	True				
ANR	10985783	PostIncDecOperationExpression	i ++		10985657	0					
ANR	10985784	Identifier	i		10985657	0					
ANR	10985785	IncDec	++		10985657	1					
ANR	10985786	PostIncDecOperationExpression	op ++		10985657	1					
ANR	10985787	Identifier	op		10985657	0					
ANR	10985788	IncDec	++		10985657	1					
ANR	10985789	CompoundStatement		27:8:749:773	10985657	3					
ANR	10985790	IdentifierDeclStatement	float rval = pcc -> paint . values [ i ] ;	129:8:4473:4508	10985657	0	True				
ANR	10985791	IdentifierDecl	rval = pcc -> paint . values [ i ]		10985657	0					
ANR	10985792	IdentifierDeclType	float		10985657	0					
ANR	10985793	Identifier	rval		10985657	1					
ANR	10985794	AssignmentExpression	rval = pcc -> paint . values [ i ]		10985657	2		=			
ANR	10985795	Identifier	rval		10985657	0					
ANR	10985796	ArrayIndexing	pcc -> paint . values [ i ]		10985657	1					
ANR	10985797	MemberAccess	pcc -> paint . values		10985657	0					
ANR	10985798	PtrMemberAccess	pcc -> paint		10985657	0					
ANR	10985799	Identifier	pcc		10985657	0					
ANR	10985800	Identifier	paint		10985657	1					
ANR	10985801	Identifier	values		10985657	1					
ANR	10985802	Identifier	i		10985657	1					
ANR	10985803	IdentifierDeclStatement	int ival = ( int ) rval ;	130:8:4518:4542	10985657	1	True				
ANR	10985804	IdentifierDecl	ival = ( int ) rval		10985657	0					
ANR	10985805	IdentifierDeclType	int		10985657	0					
ANR	10985806	Identifier	ival		10985657	1					
ANR	10985807	AssignmentExpression	ival = ( int ) rval		10985657	2		=			
ANR	10985808	Identifier	ival		10985657	0					
ANR	10985809	CastExpression	( int ) rval		10985657	1					
ANR	10985810	CastTarget	int		10985657	0					
ANR	10985811	Identifier	rval		10985657	1					
ANR	10985812	IfStatement	if ( rval == ival && pcs -> type -> index == gs_color_space_index_Indexed )		10985657	2					
ANR	10985813	Condition	rval == ival && pcs -> type -> index == gs_color_space_index_Indexed	133:12:4614:4677	10985657	0	True				
ANR	10985814	AndExpression	rval == ival && pcs -> type -> index == gs_color_space_index_Indexed		10985657	0		&&			
ANR	10985815	EqualityExpression	rval == ival		10985657	0		==			
ANR	10985816	Identifier	rval		10985657	0					
ANR	10985817	Identifier	ival		10985657	1					
ANR	10985818	EqualityExpression	pcs -> type -> index == gs_color_space_index_Indexed		10985657	1		==			
ANR	10985819	PtrMemberAccess	pcs -> type -> index		10985657	0					
ANR	10985820	PtrMemberAccess	pcs -> type		10985657	0					
ANR	10985821	Identifier	pcs		10985657	0					
ANR	10985822	Identifier	type		10985657	1					
ANR	10985823	Identifier	index		10985657	1					
ANR	10985824	Identifier	gs_color_space_index_Indexed		10985657	1					
ANR	10985825	ExpressionStatement	"make_int ( op , ival )"	134:12:4692:4710	10985657	1	True				
ANR	10985826	CallExpression	"make_int ( op , ival )"		10985657	0					
ANR	10985827	Callee	make_int		10985657	0					
ANR	10985828	Identifier	make_int		10985657	0					
ANR	10985829	ArgumentList	op		10985657	1					
ANR	10985830	Argument	op		10985657	0					
ANR	10985831	Identifier	op		10985657	0					
ANR	10985832	Argument	ival		10985657	1					
ANR	10985833	Identifier	ival		10985657	0					
ANR	10985834	ElseStatement	else		10985657	0					
ANR	10985835	ExpressionStatement	"make_real ( op , rval )"	136:12:4737:4756	10985657	0	True				
ANR	10985836	CallExpression	"make_real ( op , rval )"		10985657	0					
ANR	10985837	Callee	make_real		10985657	0					
ANR	10985838	Identifier	make_real		10985657	0					
ANR	10985839	ArgumentList	op		10985657	1					
ANR	10985840	Argument	op		10985657	0					
ANR	10985841	Identifier	op		10985657	0					
ANR	10985842	Argument	rval		10985657	1					
ANR	10985843	Identifier	rval		10985657	0					
ANR	10985844	IfStatement	if ( push_pattern )		10985657	10					
ANR	10985845	Condition	push_pattern	140:8:4842:4853	10985657	0	True				
ANR	10985846	Identifier	push_pattern		10985657	0					
ANR	10985847	ExpressionStatement	* op = istate -> pattern [ 0 ]	141:8:4864:4888	10985657	1	True				
ANR	10985848	AssignmentExpression	* op = istate -> pattern [ 0 ]		10985657	0		=			
ANR	10985849	UnaryOperationExpression	* op		10985657	0					
ANR	10985850	UnaryOperator	*		10985657	0					
ANR	10985851	Identifier	op		10985657	1					
ANR	10985852	ArrayIndexing	istate -> pattern [ 0 ]		10985657	1					
ANR	10985853	PtrMemberAccess	istate -> pattern		10985657	0					
ANR	10985854	Identifier	istate		10985657	0					
ANR	10985855	Identifier	pattern		10985657	1					
ANR	10985856	PrimaryExpression	0		10985657	1					
ANR	10985857	ReturnStatement	return 0 ;	143:4:4895:4903	10985657	11	True				
ANR	10985858	PrimaryExpression	0		10985657	0					
ANR	10985859	ReturnType	static int		10985657	1					
ANR	10985860	Identifier	zcurrentcolor		10985657	2					
ANR	10985861	ParameterList	i_ctx_t * i_ctx_p		10985657	3					
ANR	10985862	Parameter	i_ctx_t * i_ctx_p	103:14:3749:3765	10985657	0	True				
ANR	10985863	ParameterType	i_ctx_t *		10985657	0					
ANR	10985864	Identifier	i_ctx_p		10985657	1					
ANR	10985865	CFGEntryNode	ENTRY		10985657		True				
ANR	10985866	CFGExitNode	EXIT		10985657		True				
ANR	10985867	Symbol	* op		10985657						
ANR	10985868	Symbol	pcc -> pattern		10985657						
ANR	10985869	Symbol	* pcs		10985657						
ANR	10985870	Symbol	pcs -> type -> index		10985657						
ANR	10985871	Symbol	osp		10985657						
ANR	10985872	Symbol	* istate		10985657						
ANR	10985873	Symbol	pcc -> paint . values		10985657						
ANR	10985874	Symbol	pcc		10985657						
ANR	10985875	Symbol	gs_color_space_index_Indexed		10985657						
ANR	10985876	Symbol	pattern_instance_uses_base_space		10985657						
ANR	10985877	Symbol	igs		10985657						
ANR	10985878	Symbol	gs_currentcolorspace		10985657						
ANR	10985879	Symbol	pcc -> paint		10985657						
ANR	10985880	Symbol	istate -> pattern		10985657						
ANR	10985881	Symbol	* pcc -> paint		10985657						
ANR	10985882	Symbol	* pcs -> type		10985657						
ANR	10985883	Symbol	push_pattern		10985657						
ANR	10985884	Symbol	rval		10985657						
ANR	10985885	Symbol	* istate -> pattern		10985657						
ANR	10985886	Symbol	pcs -> type		10985657						
ANR	10985887	Symbol	op		10985657						
ANR	10985888	Symbol	pcs		10985657						
ANR	10985889	Symbol	* * pcc		10985657						
ANR	10985890	Symbol	i		10985657						
ANR	10985891	Symbol	ival		10985657						
ANR	10985892	Symbol	pinst		10985657						
ANR	10985893	Symbol	n		10985657						
ANR	10985894	Symbol	gs_currentcolor		10985657						
ANR	10985895	Symbol	* i		10985657						
ANR	10985896	Symbol	* * pcs		10985657						
ANR	10985897	Symbol	i_ctx_p		10985657						
ANR	10985898	Symbol	cs_num_components		10985657						
ANR	10985899	Symbol	* pcc		10985657						
ANR	10985900	Symbol	* * istate		10985657						
ANR	10985901	Symbol	* pcc -> paint . values		10985657						
ANR	10985902	Symbol	istate		10985657						
ANR	10985903	Function	zcurrentcolorspace	153:0:5114:7890							
ANR	10985904	FunctionDef	zcurrentcolorspace (i_ctx_t * i_ctx_p)		10985903	0					
ANR	10985905	CompoundStatement		155:0:5163:7890	10985903	0					
ANR	10985906	IdentifierDeclStatement	os_ptr op = osp ;	156:4:5169:5185	10985903	0	True				
ANR	10985907	IdentifierDecl	op = osp		10985903	0					
ANR	10985908	IdentifierDeclType	os_ptr		10985903	0					
ANR	10985909	Identifier	op		10985903	1					
ANR	10985910	AssignmentExpression	op = osp		10985903	2		=			
ANR	10985911	Identifier	osp		10985903	0					
ANR	10985912	Identifier	osp		10985903	1					
ANR	10985913	IdentifierDeclStatement	int code ;	157:4:5224:5232	10985903	1	True				
ANR	10985914	IdentifierDecl	code		10985903	0					
ANR	10985915	IdentifierDeclType	int		10985903	0					
ANR	10985916	Identifier	code		10985903	1					
ANR	10985917	IdentifierDeclStatement	"ref namestr , stref ;"	158:4:5238:5255	10985903	2	True				
ANR	10985918	IdentifierDecl	namestr		10985903	0					
ANR	10985919	IdentifierDeclType	ref		10985903	0					
ANR	10985920	Identifier	namestr		10985903	1					
ANR	10985921	IdentifierDecl	stref		10985903	1					
ANR	10985922	IdentifierDeclType	ref		10985903	0					
ANR	10985923	Identifier	stref		10985903	1					
ANR	10985924	IdentifierDeclStatement	byte * body ;	159:4:5261:5271	10985903	3	True				
ANR	10985925	IdentifierDecl	* body		10985903	0					
ANR	10985926	IdentifierDeclType	byte *		10985903	0					
ANR	10985927	Identifier	body		10985903	1					
ANR	10985928	IfStatement	"if ( r_has_type ( & istate -> colorspace [ 0 ] . array , t_name ) )"		10985903	4					
ANR	10985929	Condition	"r_has_type ( & istate -> colorspace [ 0 ] . array , t_name )"	167:8:5612:5659	10985903	0	True				
ANR	10985930	CallExpression	"r_has_type ( & istate -> colorspace [ 0 ] . array , t_name )"		10985903	0					
ANR	10985931	Callee	r_has_type		10985903	0					
ANR	10985932	Identifier	r_has_type		10985903	0					
ANR	10985933	ArgumentList	& istate -> colorspace [ 0 ] . array		10985903	1					
ANR	10985934	Argument	& istate -> colorspace [ 0 ] . array		10985903	0					
ANR	10985935	UnaryOperationExpression	& istate -> colorspace [ 0 ] . array		10985903	0					
ANR	10985936	UnaryOperator	&		10985903	0					
ANR	10985937	MemberAccess	istate -> colorspace [ 0 ] . array		10985903	1					
ANR	10985938	ArrayIndexing	istate -> colorspace [ 0 ]		10985903	0					
ANR	10985939	PtrMemberAccess	istate -> colorspace		10985903	0					
ANR	10985940	Identifier	istate		10985903	0					
ANR	10985941	Identifier	colorspace		10985903	1					
ANR	10985942	PrimaryExpression	0		10985903	1					
ANR	10985943	Identifier	array		10985903	1					
ANR	10985944	Argument	t_name		10985903	1					
ANR	10985945	Identifier	t_name		10985903	0					
ANR	10985946	CompoundStatement		13:58:498:498	10985903	1					
ANR	10985947	ExpressionStatement	"name_string_ref ( imemory , & istate -> colorspace [ 0 ] . array , & namestr )"	168:8:5672:5736	10985903	0	True				
ANR	10985948	CallExpression	"name_string_ref ( imemory , & istate -> colorspace [ 0 ] . array , & namestr )"		10985903	0					
ANR	10985949	Callee	name_string_ref		10985903	0					
ANR	10985950	Identifier	name_string_ref		10985903	0					
ANR	10985951	ArgumentList	imemory		10985903	1					
ANR	10985952	Argument	imemory		10985903	0					
ANR	10985953	Identifier	imemory		10985903	0					
ANR	10985954	Argument	& istate -> colorspace [ 0 ] . array		10985903	1					
ANR	10985955	UnaryOperationExpression	& istate -> colorspace [ 0 ] . array		10985903	0					
ANR	10985956	UnaryOperator	&		10985903	0					
ANR	10985957	MemberAccess	istate -> colorspace [ 0 ] . array		10985903	1					
ANR	10985958	ArrayIndexing	istate -> colorspace [ 0 ]		10985903	0					
ANR	10985959	PtrMemberAccess	istate -> colorspace		10985903	0					
ANR	10985960	Identifier	istate		10985903	0					
ANR	10985961	Identifier	colorspace		10985903	1					
ANR	10985962	PrimaryExpression	0		10985903	1					
ANR	10985963	Identifier	array		10985903	1					
ANR	10985964	Argument	& namestr		10985903	2					
ANR	10985965	UnaryOperationExpression	& namestr		10985903	0					
ANR	10985966	UnaryOperator	&		10985903	0					
ANR	10985967	Identifier	namestr		10985903	1					
ANR	10985968	IfStatement	"if ( r_size ( & namestr ) == 10 && ! memcmp ( namestr . value . bytes , ""DeviceGray"" , 10 ) )"		10985903	1					
ANR	10985969	Condition	"r_size ( & namestr ) == 10 && ! memcmp ( namestr . value . bytes , ""DeviceGray"" , 10 )"	169:12:5750:5821	10985903	0	True				
ANR	10985970	AndExpression	"r_size ( & namestr ) == 10 && ! memcmp ( namestr . value . bytes , ""DeviceGray"" , 10 )"		10985903	0		&&			
ANR	10985971	EqualityExpression	r_size ( & namestr ) == 10		10985903	0		==			
ANR	10985972	CallExpression	r_size ( & namestr )		10985903	0					
ANR	10985973	Callee	r_size		10985903	0					
ANR	10985974	Identifier	r_size		10985903	0					
ANR	10985975	ArgumentList	& namestr		10985903	1					
ANR	10985976	Argument	& namestr		10985903	0					
ANR	10985977	UnaryOperationExpression	& namestr		10985903	0					
ANR	10985978	UnaryOperator	&		10985903	0					
ANR	10985979	Identifier	namestr		10985903	1					
ANR	10985980	PrimaryExpression	10		10985903	1					
ANR	10985981	UnaryOperationExpression	"! memcmp ( namestr . value . bytes , ""DeviceGray"" , 10 )"		10985903	1					
ANR	10985982	UnaryOperator	!		10985903	0					
ANR	10985983	CallExpression	"memcmp ( namestr . value . bytes , ""DeviceGray"" , 10 )"		10985903	1					
ANR	10985984	Callee	memcmp		10985903	0					
ANR	10985985	Identifier	memcmp		10985903	0					
ANR	10985986	ArgumentList	namestr . value . bytes		10985903	1					
ANR	10985987	Argument	namestr . value . bytes		10985903	0					
ANR	10985988	MemberAccess	namestr . value . bytes		10985903	0					
ANR	10985989	MemberAccess	namestr . value		10985903	0					
ANR	10985990	Identifier	namestr		10985903	0					
ANR	10985991	Identifier	value		10985903	1					
ANR	10985992	Identifier	bytes		10985903	1					
ANR	10985993	Argument	"""DeviceGray"""		10985903	1					
ANR	10985994	PrimaryExpression	"""DeviceGray"""		10985903	0					
ANR	10985995	Argument	10		10985903	2					
ANR	10985996	PrimaryExpression	10		10985903	0					
ANR	10985997	CompoundStatement		15:86:660:660	10985903	1					
ANR	10985998	ExpressionStatement	"body = ialloc_string ( 32 , ""string"" )"	170:12:5838:5872	10985903	0	True				
ANR	10985999	AssignmentExpression	"body = ialloc_string ( 32 , ""string"" )"		10985903	0		=			
ANR	10986000	Identifier	body		10985903	0					
ANR	10986001	CallExpression	"ialloc_string ( 32 , ""string"" )"		10985903	1					
ANR	10986002	Callee	ialloc_string		10985903	0					
ANR	10986003	Identifier	ialloc_string		10985903	0					
ANR	10986004	ArgumentList	32		10985903	1					
ANR	10986005	Argument	32		10985903	0					
ANR	10986006	PrimaryExpression	32		10985903	0					
ANR	10986007	Argument	"""string"""		10985903	1					
ANR	10986008	PrimaryExpression	"""string"""		10985903	0					
ANR	10986009	IfStatement	if ( body == 0 )		10985903	1					
ANR	10986010	Condition	body == 0	171:16:5890:5898	10985903	0	True				
ANR	10986011	EqualityExpression	body == 0		10985903	0		==			
ANR	10986012	Identifier	body		10985903	0					
ANR	10986013	PrimaryExpression	0		10985903	1					
ANR	10986014	ExpressionStatement	return_error ( gs_error_VMerror )	172:16:5917:5947	10985903	1	True				
ANR	10986015	CallExpression	return_error ( gs_error_VMerror )		10985903	0					
ANR	10986016	Callee	return_error		10985903	0					
ANR	10986017	Identifier	return_error		10985903	0					
ANR	10986018	ArgumentList	gs_error_VMerror		10985903	1					
ANR	10986019	Argument	gs_error_VMerror		10985903	0					
ANR	10986020	Identifier	gs_error_VMerror		10985903	0					
ANR	10986021	ExpressionStatement	"memcpy ( body , ""systemdict /DeviceGray_array get"" , 32 )"	173:12:5961:6013	10985903	2	True				
ANR	10986022	CallExpression	"memcpy ( body , ""systemdict /DeviceGray_array get"" , 32 )"		10985903	0					
ANR	10986023	Callee	memcpy		10985903	0					
ANR	10986024	Identifier	memcpy		10985903	0					
ANR	10986025	ArgumentList	body		10985903	1					
ANR	10986026	Argument	body		10985903	0					
ANR	10986027	Identifier	body		10985903	0					
ANR	10986028	Argument	"""systemdict /DeviceGray_array get"""		10985903	1					
ANR	10986029	PrimaryExpression	"""systemdict /DeviceGray_array get"""		10985903	0					
ANR	10986030	Argument	32		10985903	2					
ANR	10986031	PrimaryExpression	32		10985903	0					
ANR	10986032	ExpressionStatement	"make_string ( & stref , a_all | icurrent_space , 32 , body )"	174:12:6027:6080	10985903	3	True				
ANR	10986033	CallExpression	"make_string ( & stref , a_all | icurrent_space , 32 , body )"		10985903	0					
ANR	10986034	Callee	make_string		10985903	0					
ANR	10986035	Identifier	make_string		10985903	0					
ANR	10986036	ArgumentList	& stref		10985903	1					
ANR	10986037	Argument	& stref		10985903	0					
ANR	10986038	UnaryOperationExpression	& stref		10985903	0					
ANR	10986039	UnaryOperator	&		10985903	0					
ANR	10986040	Identifier	stref		10985903	1					
ANR	10986041	Argument	a_all | icurrent_space		10985903	1					
ANR	10986042	InclusiveOrExpression	a_all | icurrent_space		10985903	0		|			
ANR	10986043	Identifier	a_all		10985903	0					
ANR	10986044	Identifier	icurrent_space		10985903	1					
ANR	10986045	Argument	32		10985903	2					
ANR	10986046	PrimaryExpression	32		10985903	0					
ANR	10986047	Argument	body		10985903	3					
ANR	10986048	Identifier	body		10985903	0					
ANR	10986049	ElseStatement	else		10985903	0					
ANR	10986050	CompoundStatement		21:15:933:933	10985903	0					
ANR	10986051	IfStatement	"if ( r_size ( & namestr ) == 9 && ! memcmp ( namestr . value . bytes , ""DeviceRGB"" , 9 ) )"		10985903	0					
ANR	10986052	Condition	"r_size ( & namestr ) == 9 && ! memcmp ( namestr . value . bytes , ""DeviceRGB"" , 9 )"	176:16:6115:6183	10985903	0	True				
ANR	10986053	AndExpression	"r_size ( & namestr ) == 9 && ! memcmp ( namestr . value . bytes , ""DeviceRGB"" , 9 )"		10985903	0		&&			
ANR	10986054	EqualityExpression	r_size ( & namestr ) == 9		10985903	0		==			
ANR	10986055	CallExpression	r_size ( & namestr )		10985903	0					
ANR	10986056	Callee	r_size		10985903	0					
ANR	10986057	Identifier	r_size		10985903	0					
ANR	10986058	ArgumentList	& namestr		10985903	1					
ANR	10986059	Argument	& namestr		10985903	0					
ANR	10986060	UnaryOperationExpression	& namestr		10985903	0					
ANR	10986061	UnaryOperator	&		10985903	0					
ANR	10986062	Identifier	namestr		10985903	1					
ANR	10986063	PrimaryExpression	9		10985903	1					
ANR	10986064	UnaryOperationExpression	"! memcmp ( namestr . value . bytes , ""DeviceRGB"" , 9 )"		10985903	1					
ANR	10986065	UnaryOperator	!		10985903	0					
ANR	10986066	CallExpression	"memcmp ( namestr . value . bytes , ""DeviceRGB"" , 9 )"		10985903	1					
ANR	10986067	Callee	memcmp		10985903	0					
ANR	10986068	Identifier	memcmp		10985903	0					
ANR	10986069	ArgumentList	namestr . value . bytes		10985903	1					
ANR	10986070	Argument	namestr . value . bytes		10985903	0					
ANR	10986071	MemberAccess	namestr . value . bytes		10985903	0					
ANR	10986072	MemberAccess	namestr . value		10985903	0					
ANR	10986073	Identifier	namestr		10985903	0					
ANR	10986074	Identifier	value		10985903	1					
ANR	10986075	Identifier	bytes		10985903	1					
ANR	10986076	Argument	"""DeviceRGB"""		10985903	1					
ANR	10986077	PrimaryExpression	"""DeviceRGB"""		10985903	0					
ANR	10986078	Argument	9		10985903	2					
ANR	10986079	PrimaryExpression	9		10985903	0					
ANR	10986080	CompoundStatement		22:87:1022:1022	10985903	1					
ANR	10986081	ExpressionStatement	"body = ialloc_string ( 31 , ""string"" )"	177:16:6204:6238	10985903	0	True				
ANR	10986082	AssignmentExpression	"body = ialloc_string ( 31 , ""string"" )"		10985903	0		=			
ANR	10986083	Identifier	body		10985903	0					
ANR	10986084	CallExpression	"ialloc_string ( 31 , ""string"" )"		10985903	1					
ANR	10986085	Callee	ialloc_string		10985903	0					
ANR	10986086	Identifier	ialloc_string		10985903	0					
ANR	10986087	ArgumentList	31		10985903	1					
ANR	10986088	Argument	31		10985903	0					
ANR	10986089	PrimaryExpression	31		10985903	0					
ANR	10986090	Argument	"""string"""		10985903	1					
ANR	10986091	PrimaryExpression	"""string"""		10985903	0					
ANR	10986092	IfStatement	if ( body == 0 )		10985903	1					
ANR	10986093	Condition	body == 0	178:20:6260:6268	10985903	0	True				
ANR	10986094	EqualityExpression	body == 0		10985903	0		==			
ANR	10986095	Identifier	body		10985903	0					
ANR	10986096	PrimaryExpression	0		10985903	1					
ANR	10986097	ExpressionStatement	return_error ( gs_error_VMerror )	179:20:6291:6321	10985903	1	True				
ANR	10986098	CallExpression	return_error ( gs_error_VMerror )		10985903	0					
ANR	10986099	Callee	return_error		10985903	0					
ANR	10986100	Identifier	return_error		10985903	0					
ANR	10986101	ArgumentList	gs_error_VMerror		10985903	1					
ANR	10986102	Argument	gs_error_VMerror		10985903	0					
ANR	10986103	Identifier	gs_error_VMerror		10985903	0					
ANR	10986104	ExpressionStatement	"memcpy ( body , ""systemdict /DeviceRGB_array get"" , 31 )"	180:16:6339:6390	10985903	2	True				
ANR	10986105	CallExpression	"memcpy ( body , ""systemdict /DeviceRGB_array get"" , 31 )"		10985903	0					
ANR	10986106	Callee	memcpy		10985903	0					
ANR	10986107	Identifier	memcpy		10985903	0					
ANR	10986108	ArgumentList	body		10985903	1					
ANR	10986109	Argument	body		10985903	0					
ANR	10986110	Identifier	body		10985903	0					
ANR	10986111	Argument	"""systemdict /DeviceRGB_array get"""		10985903	1					
ANR	10986112	PrimaryExpression	"""systemdict /DeviceRGB_array get"""		10985903	0					
ANR	10986113	Argument	31		10985903	2					
ANR	10986114	PrimaryExpression	31		10985903	0					
ANR	10986115	ExpressionStatement	"make_string ( & stref , a_all | icurrent_space , 31 , body )"	181:16:6408:6461	10985903	3	True				
ANR	10986116	CallExpression	"make_string ( & stref , a_all | icurrent_space , 31 , body )"		10985903	0					
ANR	10986117	Callee	make_string		10985903	0					
ANR	10986118	Identifier	make_string		10985903	0					
ANR	10986119	ArgumentList	& stref		10985903	1					
ANR	10986120	Argument	& stref		10985903	0					
ANR	10986121	UnaryOperationExpression	& stref		10985903	0					
ANR	10986122	UnaryOperator	&		10985903	0					
ANR	10986123	Identifier	stref		10985903	1					
ANR	10986124	Argument	a_all | icurrent_space		10985903	1					
ANR	10986125	InclusiveOrExpression	a_all | icurrent_space		10985903	0		|			
ANR	10986126	Identifier	a_all		10985903	0					
ANR	10986127	Identifier	icurrent_space		10985903	1					
ANR	10986128	Argument	31		10985903	2					
ANR	10986129	PrimaryExpression	31		10985903	0					
ANR	10986130	Argument	body		10985903	3					
ANR	10986131	Identifier	body		10985903	0					
ANR	10986132	ElseStatement	else		10985903	0					
ANR	10986133	CompoundStatement		28:19:1318:1318	10985903	0					
ANR	10986134	IfStatement	"if ( r_size ( & namestr ) == 10 && ! memcmp ( namestr . value . bytes , ""DeviceCMYK"" , 10 ) )"		10985903	0					
ANR	10986135	Condition	"r_size ( & namestr ) == 10 && ! memcmp ( namestr . value . bytes , ""DeviceCMYK"" , 10 )"	183:20:6504:6575	10985903	0	True				
ANR	10986136	AndExpression	"r_size ( & namestr ) == 10 && ! memcmp ( namestr . value . bytes , ""DeviceCMYK"" , 10 )"		10985903	0		&&			
ANR	10986137	EqualityExpression	r_size ( & namestr ) == 10		10985903	0		==			
ANR	10986138	CallExpression	r_size ( & namestr )		10985903	0					
ANR	10986139	Callee	r_size		10985903	0					
ANR	10986140	Identifier	r_size		10985903	0					
ANR	10986141	ArgumentList	& namestr		10985903	1					
ANR	10986142	Argument	& namestr		10985903	0					
ANR	10986143	UnaryOperationExpression	& namestr		10985903	0					
ANR	10986144	UnaryOperator	&		10985903	0					
ANR	10986145	Identifier	namestr		10985903	1					
ANR	10986146	PrimaryExpression	10		10985903	1					
ANR	10986147	UnaryOperationExpression	"! memcmp ( namestr . value . bytes , ""DeviceCMYK"" , 10 )"		10985903	1					
ANR	10986148	UnaryOperator	!		10985903	0					
ANR	10986149	CallExpression	"memcmp ( namestr . value . bytes , ""DeviceCMYK"" , 10 )"		10985903	1					
ANR	10986150	Callee	memcmp		10985903	0					
ANR	10986151	Identifier	memcmp		10985903	0					
ANR	10986152	ArgumentList	namestr . value . bytes		10985903	1					
ANR	10986153	Argument	namestr . value . bytes		10985903	0					
ANR	10986154	MemberAccess	namestr . value . bytes		10985903	0					
ANR	10986155	MemberAccess	namestr . value		10985903	0					
ANR	10986156	Identifier	namestr		10985903	0					
ANR	10986157	Identifier	value		10985903	1					
ANR	10986158	Identifier	bytes		10985903	1					
ANR	10986159	Argument	"""DeviceCMYK"""		10985903	1					
ANR	10986160	PrimaryExpression	"""DeviceCMYK"""		10985903	0					
ANR	10986161	Argument	10		10985903	2					
ANR	10986162	PrimaryExpression	10		10985903	0					
ANR	10986163	CompoundStatement		29:94:1414:1414	10985903	1					
ANR	10986164	ExpressionStatement	"body = ialloc_string ( 32 , ""string"" )"	184:20:6600:6634	10985903	0	True				
ANR	10986165	AssignmentExpression	"body = ialloc_string ( 32 , ""string"" )"		10985903	0		=			
ANR	10986166	Identifier	body		10985903	0					
ANR	10986167	CallExpression	"ialloc_string ( 32 , ""string"" )"		10985903	1					
ANR	10986168	Callee	ialloc_string		10985903	0					
ANR	10986169	Identifier	ialloc_string		10985903	0					
ANR	10986170	ArgumentList	32		10985903	1					
ANR	10986171	Argument	32		10985903	0					
ANR	10986172	PrimaryExpression	32		10985903	0					
ANR	10986173	Argument	"""string"""		10985903	1					
ANR	10986174	PrimaryExpression	"""string"""		10985903	0					
ANR	10986175	IfStatement	if ( body == 0 )		10985903	1					
ANR	10986176	Condition	body == 0	185:24:6660:6668	10985903	0	True				
ANR	10986177	EqualityExpression	body == 0		10985903	0		==			
ANR	10986178	Identifier	body		10985903	0					
ANR	10986179	PrimaryExpression	0		10985903	1					
ANR	10986180	ExpressionStatement	return_error ( gs_error_VMerror )	186:24:6695:6725	10985903	1	True				
ANR	10986181	CallExpression	return_error ( gs_error_VMerror )		10985903	0					
ANR	10986182	Callee	return_error		10985903	0					
ANR	10986183	Identifier	return_error		10985903	0					
ANR	10986184	ArgumentList	gs_error_VMerror		10985903	1					
ANR	10986185	Argument	gs_error_VMerror		10985903	0					
ANR	10986186	Identifier	gs_error_VMerror		10985903	0					
ANR	10986187	ExpressionStatement	"memcpy ( body , ""systemdict /DeviceCMYK_array get"" , 32 )"	187:20:6747:6799	10985903	2	True				
ANR	10986188	CallExpression	"memcpy ( body , ""systemdict /DeviceCMYK_array get"" , 32 )"		10985903	0					
ANR	10986189	Callee	memcpy		10985903	0					
ANR	10986190	Identifier	memcpy		10985903	0					
ANR	10986191	ArgumentList	body		10985903	1					
ANR	10986192	Argument	body		10985903	0					
ANR	10986193	Identifier	body		10985903	0					
ANR	10986194	Argument	"""systemdict /DeviceCMYK_array get"""		10985903	1					
ANR	10986195	PrimaryExpression	"""systemdict /DeviceCMYK_array get"""		10985903	0					
ANR	10986196	Argument	32		10985903	2					
ANR	10986197	PrimaryExpression	32		10985903	0					
ANR	10986198	ExpressionStatement	"make_string ( & stref , a_all | icurrent_space , 32 , body )"	188:20:6821:6874	10985903	3	True				
ANR	10986199	CallExpression	"make_string ( & stref , a_all | icurrent_space , 32 , body )"		10985903	0					
ANR	10986200	Callee	make_string		10985903	0					
ANR	10986201	Identifier	make_string		10985903	0					
ANR	10986202	ArgumentList	& stref		10985903	1					
ANR	10986203	Argument	& stref		10985903	0					
ANR	10986204	UnaryOperationExpression	& stref		10985903	0					
ANR	10986205	UnaryOperator	&		10985903	0					
ANR	10986206	Identifier	stref		10985903	1					
ANR	10986207	Argument	a_all | icurrent_space		10985903	1					
ANR	10986208	InclusiveOrExpression	a_all | icurrent_space		10985903	0		|			
ANR	10986209	Identifier	a_all		10985903	0					
ANR	10986210	Identifier	icurrent_space		10985903	1					
ANR	10986211	Argument	32		10985903	2					
ANR	10986212	PrimaryExpression	32		10985903	0					
ANR	10986213	Argument	body		10985903	3					
ANR	10986214	Identifier	body		10985903	0					
ANR	10986215	ElseStatement	else		10985903	0					
ANR	10986216	CompoundStatement		35:23:1735:1735	10985903	0					
ANR	10986217	ExpressionStatement	push ( 1 )	193:20:7086:7093	10985903	0	True				
ANR	10986218	CallExpression	push ( 1 )		10985903	0					
ANR	10986219	Callee	push		10985903	0					
ANR	10986220	Identifier	push		10985903	0					
ANR	10986221	ArgumentList	1		10985903	1					
ANR	10986222	Argument	1		10985903	0					
ANR	10986223	PrimaryExpression	1		10985903	0					
ANR	10986224	ExpressionStatement	"code = ialloc_ref_array ( op , a_all , 1 , ""currentcolorspace"" )"	194:20:7115:7173	10985903	1	True				
ANR	10986225	AssignmentExpression	"code = ialloc_ref_array ( op , a_all , 1 , ""currentcolorspace"" )"		10985903	0		=			
ANR	10986226	Identifier	code		10985903	0					
ANR	10986227	CallExpression	"ialloc_ref_array ( op , a_all , 1 , ""currentcolorspace"" )"		10985903	1					
ANR	10986228	Callee	ialloc_ref_array		10985903	0					
ANR	10986229	Identifier	ialloc_ref_array		10985903	0					
ANR	10986230	ArgumentList	op		10985903	1					
ANR	10986231	Argument	op		10985903	0					
ANR	10986232	Identifier	op		10985903	0					
ANR	10986233	Argument	a_all		10985903	1					
ANR	10986234	Identifier	a_all		10985903	0					
ANR	10986235	Argument	1		10985903	2					
ANR	10986236	PrimaryExpression	1		10985903	0					
ANR	10986237	Argument	"""currentcolorspace"""		10985903	3					
ANR	10986238	PrimaryExpression	"""currentcolorspace"""		10985903	0					
ANR	10986239	IfStatement	if ( code < 0 )		10985903	2					
ANR	10986240	Condition	code < 0	195:24:7199:7206	10985903	0	True				
ANR	10986241	RelationalExpression	code < 0		10985903	0		<			
ANR	10986242	Identifier	code		10985903	0					
ANR	10986243	PrimaryExpression	0		10985903	1					
ANR	10986244	ReturnStatement	return code ;	196:24:7233:7244	10985903	1	True				
ANR	10986245	Identifier	code		10985903	0					
ANR	10986246	ExpressionStatement	"refset_null ( op -> value . refs , 1 )"	197:20:7266:7296	10985903	3	True				
ANR	10986247	CallExpression	"refset_null ( op -> value . refs , 1 )"		10985903	0					
ANR	10986248	Callee	refset_null		10985903	0					
ANR	10986249	Identifier	refset_null		10985903	0					
ANR	10986250	ArgumentList	op -> value . refs		10985903	1					
ANR	10986251	Argument	op -> value . refs		10985903	0					
ANR	10986252	MemberAccess	op -> value . refs		10985903	0					
ANR	10986253	PtrMemberAccess	op -> value		10985903	0					
ANR	10986254	Identifier	op		10985903	0					
ANR	10986255	Identifier	value		10985903	1					
ANR	10986256	Identifier	refs		10985903	1					
ANR	10986257	Argument	1		10985903	1					
ANR	10986258	PrimaryExpression	1		10985903	0					
ANR	10986259	ExpressionStatement	"ref_assign_old ( op , op -> value . refs , & istate -> colorspace [ 0 ] . array , ""currentcolorspace"" )"	198:20:7318:7473	10985903	4	True				
ANR	10986260	CallExpression	"ref_assign_old ( op , op -> value . refs , & istate -> colorspace [ 0 ] . array , ""currentcolorspace"" )"		10985903	0					
ANR	10986261	Callee	ref_assign_old		10985903	0					
ANR	10986262	Identifier	ref_assign_old		10985903	0					
ANR	10986263	ArgumentList	op		10985903	1					
ANR	10986264	Argument	op		10985903	0					
ANR	10986265	Identifier	op		10985903	0					
ANR	10986266	Argument	op -> value . refs		10985903	1					
ANR	10986267	MemberAccess	op -> value . refs		10985903	0					
ANR	10986268	PtrMemberAccess	op -> value		10985903	0					
ANR	10986269	Identifier	op		10985903	0					
ANR	10986270	Identifier	value		10985903	1					
ANR	10986271	Identifier	refs		10985903	1					
ANR	10986272	Argument	& istate -> colorspace [ 0 ] . array		10985903	2					
ANR	10986273	UnaryOperationExpression	& istate -> colorspace [ 0 ] . array		10985903	0					
ANR	10986274	UnaryOperator	&		10985903	0					
ANR	10986275	MemberAccess	istate -> colorspace [ 0 ] . array		10985903	1					
ANR	10986276	ArrayIndexing	istate -> colorspace [ 0 ]		10985903	0					
ANR	10986277	PtrMemberAccess	istate -> colorspace		10985903	0					
ANR	10986278	Identifier	istate		10985903	0					
ANR	10986279	Identifier	colorspace		10985903	1					
ANR	10986280	PrimaryExpression	0		10985903	1					
ANR	10986281	Identifier	array		10985903	1					
ANR	10986282	Argument	"""currentcolorspace"""		10985903	3					
ANR	10986283	PrimaryExpression	"""currentcolorspace"""		10985903	0					
ANR	10986284	ReturnStatement	return 0 ;	201:20:7495:7503	10985903	5	True				
ANR	10986285	PrimaryExpression	0		10985903	0					
ANR	10986286	ExpressionStatement	"r_set_attrs ( & stref , a_executable )"	205:8:7555:7588	10985903	2	True				
ANR	10986287	CallExpression	"r_set_attrs ( & stref , a_executable )"		10985903	0					
ANR	10986288	Callee	r_set_attrs		10985903	0					
ANR	10986289	Identifier	r_set_attrs		10985903	0					
ANR	10986290	ArgumentList	& stref		10985903	1					
ANR	10986291	Argument	& stref		10985903	0					
ANR	10986292	UnaryOperationExpression	& stref		10985903	0					
ANR	10986293	UnaryOperator	&		10985903	0					
ANR	10986294	Identifier	stref		10985903	1					
ANR	10986295	Argument	a_executable		10985903	1					
ANR	10986296	Identifier	a_executable		10985903	0					
ANR	10986297	ExpressionStatement	esp ++	206:8:7598:7603	10985903	3	True				
ANR	10986298	PostIncDecOperationExpression	esp ++		10985903	0					
ANR	10986299	Identifier	esp		10985903	0					
ANR	10986300	IncDec	++		10985903	1					
ANR	10986301	ExpressionStatement	"ref_assign ( esp , & stref )"	207:8:7613:7636	10985903	4	True				
ANR	10986302	CallExpression	"ref_assign ( esp , & stref )"		10985903	0					
ANR	10986303	Callee	ref_assign		10985903	0					
ANR	10986304	Identifier	ref_assign		10985903	0					
ANR	10986305	ArgumentList	esp		10985903	1					
ANR	10986306	Argument	esp		10985903	0					
ANR	10986307	Identifier	esp		10985903	0					
ANR	10986308	Argument	& stref		10985903	1					
ANR	10986309	UnaryOperationExpression	& stref		10985903	0					
ANR	10986310	UnaryOperator	&		10985903	0					
ANR	10986311	Identifier	stref		10985903	1					
ANR	10986312	ReturnStatement	return o_push_estack ;	208:8:7646:7666	10985903	5	True				
ANR	10986313	Identifier	o_push_estack		10985903	0					
ANR	10986314	ElseStatement	else		10985903	0					
ANR	10986315	CompoundStatement		55:11:2515:2515	10985903	0					
ANR	10986316	ExpressionStatement	push ( 1 )	213:8:7818:7825	10985903	0	True				
ANR	10986317	CallExpression	push ( 1 )		10985903	0					
ANR	10986318	Callee	push		10985903	0					
ANR	10986319	Identifier	push		10985903	0					
ANR	10986320	ArgumentList	1		10985903	1					
ANR	10986321	Argument	1		10985903	0					
ANR	10986322	PrimaryExpression	1		10985903	0					
ANR	10986323	ExpressionStatement	* op = istate -> colorspace [ 0 ] . array	214:8:7835:7868	10985903	1	True				
ANR	10986324	AssignmentExpression	* op = istate -> colorspace [ 0 ] . array		10985903	0		=			
ANR	10986325	UnaryOperationExpression	* op		10985903	0					
ANR	10986326	UnaryOperator	*		10985903	0					
ANR	10986327	Identifier	op		10985903	1					
ANR	10986328	MemberAccess	istate -> colorspace [ 0 ] . array		10985903	1					
ANR	10986329	ArrayIndexing	istate -> colorspace [ 0 ]		10985903	0					
ANR	10986330	PtrMemberAccess	istate -> colorspace		10985903	0					
ANR	10986331	Identifier	istate		10985903	0					
ANR	10986332	Identifier	colorspace		10985903	1					
ANR	10986333	PrimaryExpression	0		10985903	1					
ANR	10986334	Identifier	array		10985903	1					
ANR	10986335	ReturnStatement	return 0 ;	216:4:7880:7888	10985903	5	True				
ANR	10986336	PrimaryExpression	0		10985903	0					
ANR	10986337	ReturnType	static int		10985903	1					
ANR	10986338	Identifier	zcurrentcolorspace		10985903	2					
ANR	10986339	ParameterList	i_ctx_t * i_ctx_p		10985903	3					
ANR	10986340	Parameter	i_ctx_t * i_ctx_p	154:19:5144:5160	10985903	0	True				
ANR	10986341	ParameterType	i_ctx_t *		10985903	0					
ANR	10986342	Identifier	i_ctx_p		10985903	1					
ANR	10986343	CFGEntryNode	ENTRY		10985903		True				
ANR	10986344	CFGExitNode	EXIT		10985903		True				
ANR	10986345	Symbol	a_all		10985903						
ANR	10986346	Symbol	& istate -> colorspace [ 0 ] . array		10985903						
ANR	10986347	Symbol	istate -> colorspace [ 0 ] . array		10985903						
ANR	10986348	Symbol	code		10985903						
ANR	10986349	Symbol	esp		10985903						
ANR	10986350	Symbol	* op		10985903						
ANR	10986351	Symbol	op -> value . refs		10985903						
ANR	10986352	Symbol	& stref		10985903						
ANR	10986353	Symbol	body		10985903						
ANR	10986354	Symbol	osp		10985903						
ANR	10986355	Symbol	* istate		10985903						
ANR	10986356	Symbol	ialloc_string		10985903						
ANR	10986357	Symbol	r_has_type		10985903						
ANR	10986358	Symbol	memcmp		10985903						
ANR	10986359	Symbol	t_name		10985903						
ANR	10986360	Symbol	op -> value		10985903						
ANR	10986361	Symbol	r_size		10985903						
ANR	10986362	Symbol	stref		10985903						
ANR	10986363	Symbol	istate -> colorspace		10985903						
ANR	10986364	Symbol	imemory		10985903						
ANR	10986365	Symbol	namestr . value		10985903						
ANR	10986366	Symbol	* istate -> colorspace		10985903						
ANR	10986367	Symbol	o_push_estack		10985903						
ANR	10986368	Symbol	namestr . value . bytes		10985903						
ANR	10986369	Symbol	op		10985903						
ANR	10986370	Symbol	namestr		10985903						
ANR	10986371	Symbol	ialloc_ref_array		10985903						
ANR	10986372	Symbol	icurrent_space		10985903						
ANR	10986373	Symbol	gs_error_VMerror		10985903						
ANR	10986374	Symbol	i_ctx_p		10985903						
ANR	10986375	Symbol	a_executable		10985903						
ANR	10986376	Symbol	& namestr		10985903						
ANR	10986377	Symbol	* * istate		10985903						
ANR	10986378	Symbol	istate		10985903						
ANR	10986379	Function	zgetuseciecolor	233:0:8608:8739							
ANR	10986380	FunctionDef	zgetuseciecolor (i_ctx_t * i_ctx_p)		10986379	0					
ANR	10986381	CompoundStatement		235:0:8654:8739	10986379	0					
ANR	10986382	IdentifierDeclStatement	os_ptr op = osp ;	236:4:8660:8676	10986379	0	True				
ANR	10986383	IdentifierDecl	op = osp		10986379	0					
ANR	10986384	IdentifierDeclType	os_ptr		10986379	0					
ANR	10986385	Identifier	op		10986379	1					
ANR	10986386	AssignmentExpression	op = osp		10986379	2		=			
ANR	10986387	Identifier	osp		10986379	0					
ANR	10986388	Identifier	osp		10986379	1					
ANR	10986389	ExpressionStatement	push ( 1 )	238:4:8683:8690	10986379	1	True				
ANR	10986390	CallExpression	push ( 1 )		10986379	0					
ANR	10986391	Callee	push		10986379	0					
ANR	10986392	Identifier	push		10986379	0					
ANR	10986393	ArgumentList	1		10986379	1					
ANR	10986394	Argument	1		10986379	0					
ANR	10986395	PrimaryExpression	1		10986379	0					
ANR	10986396	ExpressionStatement	* op = istate -> use_cie_color	239:4:8696:8723	10986379	2	True				
ANR	10986397	AssignmentExpression	* op = istate -> use_cie_color		10986379	0		=			
ANR	10986398	UnaryOperationExpression	* op		10986379	0					
ANR	10986399	UnaryOperator	*		10986379	0					
ANR	10986400	Identifier	op		10986379	1					
ANR	10986401	PtrMemberAccess	istate -> use_cie_color		10986379	1					
ANR	10986402	Identifier	istate		10986379	0					
ANR	10986403	Identifier	use_cie_color		10986379	1					
ANR	10986404	ReturnStatement	return 0 ;	240:4:8729:8737	10986379	3	True				
ANR	10986405	PrimaryExpression	0		10986379	0					
ANR	10986406	ReturnType	static int		10986379	1					
ANR	10986407	Identifier	zgetuseciecolor		10986379	2					
ANR	10986408	ParameterList	i_ctx_t * i_ctx_p		10986379	3					
ANR	10986409	Parameter	i_ctx_t * i_ctx_p	234:16:8635:8651	10986379	0	True				
ANR	10986410	ParameterType	i_ctx_t *		10986379	0					
ANR	10986411	Identifier	i_ctx_p		10986379	1					
ANR	10986412	CFGEntryNode	ENTRY		10986379		True				
ANR	10986413	CFGExitNode	EXIT		10986379		True				
ANR	10986414	Symbol	op		10986379						
ANR	10986415	Symbol	* op		10986379						
ANR	10986416	Symbol	istate -> use_cie_color		10986379						
ANR	10986417	Symbol	i_ctx_p		10986379						
ANR	10986418	Symbol	osp		10986379						
ANR	10986419	Symbol	* istate		10986379						
ANR	10986420	Symbol	istate		10986379						
ANR	10986421	Function	colour_cleanup	244:0:8816:8876							
ANR	10986422	FunctionDef	colour_cleanup (i_ctx_t * i_ctx_p)		10986421	0					
ANR	10986423	CompoundStatement		246:0:8860:8876	10986421	0					
ANR	10986424	ReturnStatement	return 0 ;	247:4:8866:8874	10986421	0	True				
ANR	10986425	PrimaryExpression	0		10986421	0					
ANR	10986426	ReturnType	static int		10986421	1					
ANR	10986427	Identifier	colour_cleanup		10986421	2					
ANR	10986428	ParameterList	i_ctx_t * i_ctx_p		10986421	3					
ANR	10986429	Parameter	i_ctx_t * i_ctx_p	245:15:8842:8857	10986421	0	True				
ANR	10986430	ParameterType	i_ctx_t *		10986421	0					
ANR	10986431	Identifier	i_ctx_p		10986421	1					
ANR	10986432	CFGEntryNode	ENTRY		10986421		True				
ANR	10986433	CFGExitNode	EXIT		10986421		True				
ANR	10986434	Symbol	i_ctx_p		10986421						
ANR	10986435	Function	zsetcolor	267:0:9593:13107							
ANR	10986436	FunctionDef	zsetcolor (i_ctx_t * i_ctx_p)		10986435	0					
ANR	10986437	CompoundStatement		269:0:9633:13107	10986435	0					
ANR	10986438	IdentifierDeclStatement	os_ptr op = osp ;	270:4:9639:9671	10986435	0	True				
ANR	10986439	IdentifierDecl	op = osp		10986435	0					
ANR	10986440	IdentifierDeclType	os_ptr		10986435	0					
ANR	10986441	Identifier	op		10986435	1					
ANR	10986442	AssignmentExpression	op = osp		10986435	2		=			
ANR	10986443	Identifier	osp		10986435	0					
ANR	10986444	Identifier	osp		10986435	1					
ANR	10986445	IdentifierDeclStatement	es_ptr ep ;	271:4:9677:9686	10986435	1	True				
ANR	10986446	IdentifierDecl	ep		10986435	0					
ANR	10986447	IdentifierDeclType	es_ptr		10986435	0					
ANR	10986448	Identifier	ep		10986435	1					
ANR	10986449	IdentifierDeclStatement	const gs_color_space * pcs = gs_currentcolorspace ( igs ) ;	272:4:9692:9747	10986435	2	True				
ANR	10986450	IdentifierDecl	* pcs = gs_currentcolorspace ( igs )		10986435	0					
ANR	10986451	IdentifierDeclType	const gs_color_space *		10986435	0					
ANR	10986452	Identifier	pcs		10986435	1					
ANR	10986453	AssignmentExpression	* pcs = gs_currentcolorspace ( igs )		10986435	2		=			
ANR	10986454	Identifier	pcs		10986435	0					
ANR	10986455	CallExpression	gs_currentcolorspace ( igs )		10986435	1					
ANR	10986456	Callee	gs_currentcolorspace		10986435	0					
ANR	10986457	Identifier	gs_currentcolorspace		10986435	0					
ANR	10986458	ArgumentList	igs		10986435	1					
ANR	10986459	Argument	igs		10986435	0					
ANR	10986460	Identifier	igs		10986435	0					
ANR	10986461	IdentifierDeclStatement	gs_client_color cc ;	273:4:9753:9779	10986435	3	True				
ANR	10986462	IdentifierDecl	cc		10986435	0					
ANR	10986463	IdentifierDeclType	gs_client_color		10986435	0					
ANR	10986464	Identifier	cc		10986435	1					
ANR	10986465	IdentifierDeclStatement	"int n_comps , n_numeric_comps , num_offset = 0 , code , depth ;"	274:4:9785:9862	10986435	4	True				
ANR	10986466	IdentifierDecl	n_comps		10986435	0					
ANR	10986467	IdentifierDeclType	int		10986435	0					
ANR	10986468	Identifier	n_comps		10986435	1					
ANR	10986469	IdentifierDecl	n_numeric_comps		10986435	1					
ANR	10986470	IdentifierDeclType	int		10986435	0					
ANR	10986471	Identifier	n_numeric_comps		10986435	1					
ANR	10986472	IdentifierDecl	num_offset = 0		10986435	2					
ANR	10986473	IdentifierDeclType	int		10986435	0					
ANR	10986474	Identifier	num_offset		10986435	1					
ANR	10986475	AssignmentExpression	num_offset = 0		10986435	2		=			
ANR	10986476	Identifier	num_offset		10986435	0					
ANR	10986477	PrimaryExpression	0		10986435	1					
ANR	10986478	IdentifierDecl	code		10986435	3					
ANR	10986479	IdentifierDeclType	int		10986435	0					
ANR	10986480	Identifier	code		10986435	1					
ANR	10986481	IdentifierDecl	depth		10986435	4					
ANR	10986482	IdentifierDeclType	int		10986435	0					
ANR	10986483	Identifier	depth		10986435	1					
ANR	10986484	IdentifierDeclStatement	PS_colour_space_t * space ;	275:4:9868:9892	10986435	5	True				
ANR	10986485	IdentifierDecl	* space		10986435	0					
ANR	10986486	IdentifierDeclType	PS_colour_space_t *		10986435	0					
ANR	10986487	Identifier	space		10986435	1					
ANR	10986488	ExpressionStatement	cc . pattern = 0	278:4:9960:9974	10986435	6	True				
ANR	10986489	AssignmentExpression	cc . pattern = 0		10986435	0		=			
ANR	10986490	MemberAccess	cc . pattern		10986435	0					
ANR	10986491	Identifier	cc		10986435	0					
ANR	10986492	Identifier	pattern		10986435	1					
ANR	10986493	PrimaryExpression	0		10986435	1					
ANR	10986494	IfStatement	if ( ( n_comps = cs_num_components ( pcs ) ) < 0 )		10986435	7					
ANR	10986495	Condition	( n_comps = cs_num_components ( pcs ) ) < 0	281:8:10027:10064	10986435	0	True				
ANR	10986496	RelationalExpression	( n_comps = cs_num_components ( pcs ) ) < 0		10986435	0		<			
ANR	10986497	AssignmentExpression	n_comps = cs_num_components ( pcs )		10986435	0		=			
ANR	10986498	Identifier	n_comps		10986435	0					
ANR	10986499	CallExpression	cs_num_components ( pcs )		10986435	1					
ANR	10986500	Callee	cs_num_components		10986435	0					
ANR	10986501	Identifier	cs_num_components		10986435	0					
ANR	10986502	ArgumentList	pcs		10986435	1					
ANR	10986503	Argument	pcs		10986435	0					
ANR	10986504	Identifier	pcs		10986435	0					
ANR	10986505	PrimaryExpression	0		10986435	1					
ANR	10986506	CompoundStatement		13:48:433:433	10986435	1					
ANR	10986507	ExpressionStatement	n_comps = - n_comps	282:8:10077:10095	10986435	0	True				
ANR	10986508	AssignmentExpression	n_comps = - n_comps		10986435	0		=			
ANR	10986509	Identifier	n_comps		10986435	0					
ANR	10986510	UnaryOperationExpression	- n_comps		10986435	1					
ANR	10986511	UnaryOperator	-		10986435	0					
ANR	10986512	Identifier	n_comps		10986435	1					
ANR	10986513	IfStatement	"if ( r_has_type ( op , t_dictionary ) )"		10986435	1					
ANR	10986514	Condition	"r_has_type ( op , t_dictionary )"	283:12:10109:10136	10986435	0	True				
ANR	10986515	CallExpression	"r_has_type ( op , t_dictionary )"		10986435	0					
ANR	10986516	Callee	r_has_type		10986435	0					
ANR	10986517	Identifier	r_has_type		10986435	0					
ANR	10986518	ArgumentList	op		10986435	1					
ANR	10986519	Argument	op		10986435	0					
ANR	10986520	Identifier	op		10986435	0					
ANR	10986521	Argument	t_dictionary		10986435	1					
ANR	10986522	Identifier	t_dictionary		10986435	0					
ANR	10986523	CompoundStatement		16:12:519:543	10986435	1					
ANR	10986524	IdentifierDeclStatement	"ref * pImpl , pPatInst ;"	284:12:10153:10177	10986435	0	True				
ANR	10986525	IdentifierDecl	* pImpl		10986435	0					
ANR	10986526	IdentifierDeclType	ref *		10986435	0					
ANR	10986527	Identifier	pImpl		10986435	1					
ANR	10986528	IdentifierDecl	pPatInst		10986435	1					
ANR	10986529	IdentifierDeclType	ref		10986435	0					
ANR	10986530	Identifier	pPatInst		10986435	1					
ANR	10986531	IfStatement	"if ( ( code = dict_find_string ( op , ""Implementation"" , & pImpl ) ) < 0 )"		10986435	1					
ANR	10986532	Condition	"( code = dict_find_string ( op , ""Implementation"" , & pImpl ) ) < 0"	286:16:10196:10254	10986435	0	True				
ANR	10986533	RelationalExpression	"( code = dict_find_string ( op , ""Implementation"" , & pImpl ) ) < 0"		10986435	0		<			
ANR	10986534	AssignmentExpression	"code = dict_find_string ( op , ""Implementation"" , & pImpl )"		10986435	0		=			
ANR	10986535	Identifier	code		10986435	0					
ANR	10986536	CallExpression	"dict_find_string ( op , ""Implementation"" , & pImpl )"		10986435	1					
ANR	10986537	Callee	dict_find_string		10986435	0					
ANR	10986538	Identifier	dict_find_string		10986435	0					
ANR	10986539	ArgumentList	op		10986435	1					
ANR	10986540	Argument	op		10986435	0					
ANR	10986541	Identifier	op		10986435	0					
ANR	10986542	Argument	"""Implementation"""		10986435	1					
ANR	10986543	PrimaryExpression	"""Implementation"""		10986435	0					
ANR	10986544	Argument	& pImpl		10986435	2					
ANR	10986545	UnaryOperationExpression	& pImpl		10986435	0					
ANR	10986546	UnaryOperator	&		10986435	0					
ANR	10986547	Identifier	pImpl		10986435	1					
ANR	10986548	PrimaryExpression	0		10986435	1					
ANR	10986549	ReturnStatement	return code ;	287:16:10273:10284	10986435	1	True				
ANR	10986550	Identifier	code		10986435	0					
ANR	10986551	IfStatement	if ( code > 0 )		10986435	2					
ANR	10986552	Condition	code > 0	288:16:10302:10309	10986435	0	True				
ANR	10986553	RelationalExpression	code > 0		10986435	0		>			
ANR	10986554	Identifier	code		10986435	0					
ANR	10986555	PrimaryExpression	0		10986435	1					
ANR	10986556	CompoundStatement		20:26:678:678	10986435	1					
ANR	10986557	ExpressionStatement	"code = array_get ( imemory , pImpl , 0 , & pPatInst )"	289:16:10330:10376	10986435	0	True				
ANR	10986558	AssignmentExpression	"code = array_get ( imemory , pImpl , 0 , & pPatInst )"		10986435	0		=			
ANR	10986559	Identifier	code		10986435	0					
ANR	10986560	CallExpression	"array_get ( imemory , pImpl , 0 , & pPatInst )"		10986435	1					
ANR	10986561	Callee	array_get		10986435	0					
ANR	10986562	Identifier	array_get		10986435	0					
ANR	10986563	ArgumentList	imemory		10986435	1					
ANR	10986564	Argument	imemory		10986435	0					
ANR	10986565	Identifier	imemory		10986435	0					
ANR	10986566	Argument	pImpl		10986435	1					
ANR	10986567	Identifier	pImpl		10986435	0					
ANR	10986568	Argument	0		10986435	2					
ANR	10986569	PrimaryExpression	0		10986435	0					
ANR	10986570	Argument	& pPatInst		10986435	3					
ANR	10986571	UnaryOperationExpression	& pPatInst		10986435	0					
ANR	10986572	UnaryOperator	&		10986435	0					
ANR	10986573	Identifier	pPatInst		10986435	1					
ANR	10986574	IfStatement	if ( code < 0 )		10986435	1					
ANR	10986575	Condition	code < 0	290:20:10398:10405	10986435	0	True				
ANR	10986576	RelationalExpression	code < 0		10986435	0		<			
ANR	10986577	Identifier	code		10986435	0					
ANR	10986578	PrimaryExpression	0		10986435	1					
ANR	10986579	ReturnStatement	return code ;	291:20:10428:10439	10986435	1	True				
ANR	10986580	Identifier	code		10986435	0					
ANR	10986581	ExpressionStatement	"cc . pattern = r_ptr ( & pPatInst , gs_pattern_instance_t )"	292:16:10457:10509	10986435	2	True				
ANR	10986582	AssignmentExpression	"cc . pattern = r_ptr ( & pPatInst , gs_pattern_instance_t )"		10986435	0		=			
ANR	10986583	MemberAccess	cc . pattern		10986435	0					
ANR	10986584	Identifier	cc		10986435	0					
ANR	10986585	Identifier	pattern		10986435	1					
ANR	10986586	CallExpression	"r_ptr ( & pPatInst , gs_pattern_instance_t )"		10986435	1					
ANR	10986587	Callee	r_ptr		10986435	0					
ANR	10986588	Identifier	r_ptr		10986435	0					
ANR	10986589	ArgumentList	& pPatInst		10986435	1					
ANR	10986590	Argument	& pPatInst		10986435	0					
ANR	10986591	UnaryOperationExpression	& pPatInst		10986435	0					
ANR	10986592	UnaryOperator	&		10986435	0					
ANR	10986593	Identifier	pPatInst		10986435	1					
ANR	10986594	Argument	gs_pattern_instance_t		10986435	1					
ANR	10986595	Identifier	gs_pattern_instance_t		10986435	0					
ANR	10986596	ExpressionStatement	n_numeric_comps = ( pattern_instance_uses_base_space ( cc . pattern ) ? n_comps - 1 : 0 )	293:16:10527:10655	10986435	3	True				
ANR	10986597	AssignmentExpression	n_numeric_comps = ( pattern_instance_uses_base_space ( cc . pattern ) ? n_comps - 1 : 0 )		10986435	0		=			
ANR	10986598	Identifier	n_numeric_comps		10986435	0					
ANR	10986599	ConditionalExpression	pattern_instance_uses_base_space ( cc . pattern ) ? n_comps - 1 : 0		10986435	1					
ANR	10986600	Condition	pattern_instance_uses_base_space ( cc . pattern )		10986435	0					
ANR	10986601	CallExpression	pattern_instance_uses_base_space ( cc . pattern )		10986435	0					
ANR	10986602	Callee	pattern_instance_uses_base_space		10986435	0					
ANR	10986603	Identifier	pattern_instance_uses_base_space		10986435	0					
ANR	10986604	ArgumentList	cc . pattern		10986435	1					
ANR	10986605	Argument	cc . pattern		10986435	0					
ANR	10986606	MemberAccess	cc . pattern		10986435	0					
ANR	10986607	Identifier	cc		10986435	0					
ANR	10986608	Identifier	pattern		10986435	1					
ANR	10986609	AdditiveExpression	n_comps - 1		10986435	1		-			
ANR	10986610	Identifier	n_comps		10986435	0					
ANR	10986611	PrimaryExpression	1		10986435	1					
ANR	10986612	PrimaryExpression	0		10986435	2					
ANR	10986613	ElseStatement	else		10986435	0					
ANR	10986614	ExpressionStatement	n_numeric_comps = 0	297:16:10692:10711	10986435	0	True				
ANR	10986615	AssignmentExpression	n_numeric_comps = 0		10986435	0		=			
ANR	10986616	Identifier	n_numeric_comps		10986435	0					
ANR	10986617	PrimaryExpression	0		10986435	1					
ANR	10986618	ElseStatement	else		10986435	0					
ANR	10986619	ExpressionStatement	n_numeric_comps = 0	299:12:10740:10759	10986435	0	True				
ANR	10986620	AssignmentExpression	n_numeric_comps = 0		10986435	0		=			
ANR	10986621	Identifier	n_numeric_comps		10986435	0					
ANR	10986622	PrimaryExpression	0		10986435	1					
ANR	10986623	ExpressionStatement	num_offset = 1	300:8:10769:10783	10986435	2	True				
ANR	10986624	AssignmentExpression	num_offset = 1		10986435	0		=			
ANR	10986625	Identifier	num_offset		10986435	0					
ANR	10986626	PrimaryExpression	1		10986435	1					
ANR	10986627	ElseStatement	else		10986435	0					
ANR	10986628	ExpressionStatement	n_numeric_comps = n_comps	302:8:10804:10829	10986435	0	True				
ANR	10986629	AssignmentExpression	n_numeric_comps = n_comps		10986435	0		=			
ANR	10986630	Identifier	n_numeric_comps		10986435	0					
ANR	10986631	Identifier	n_comps		10986435	1					
ANR	10986632	ExpressionStatement	"code = float_params ( op - num_offset , n_numeric_comps , cc . paint . values )"	305:4:10874:10944	10986435	8	True				
ANR	10986633	AssignmentExpression	"code = float_params ( op - num_offset , n_numeric_comps , cc . paint . values )"		10986435	0		=			
ANR	10986634	Identifier	code		10986435	0					
ANR	10986635	CallExpression	"float_params ( op - num_offset , n_numeric_comps , cc . paint . values )"		10986435	1					
ANR	10986636	Callee	float_params		10986435	0					
ANR	10986637	Identifier	float_params		10986435	0					
ANR	10986638	ArgumentList	op - num_offset		10986435	1					
ANR	10986639	Argument	op - num_offset		10986435	0					
ANR	10986640	AdditiveExpression	op - num_offset		10986435	0		-			
ANR	10986641	Identifier	op		10986435	0					
ANR	10986642	Identifier	num_offset		10986435	1					
ANR	10986643	Argument	n_numeric_comps		10986435	1					
ANR	10986644	Identifier	n_numeric_comps		10986435	0					
ANR	10986645	Argument	cc . paint . values		10986435	2					
ANR	10986646	MemberAccess	cc . paint . values		10986435	0					
ANR	10986647	MemberAccess	cc . paint		10986435	0					
ANR	10986648	Identifier	cc		10986435	0					
ANR	10986649	Identifier	paint		10986435	1					
ANR	10986650	Identifier	values		10986435	1					
ANR	10986651	IfStatement	if ( code < 0 )		10986435	9					
ANR	10986652	Condition	code < 0	306:8:10954:10961	10986435	0	True				
ANR	10986653	RelationalExpression	code < 0		10986435	0		<			
ANR	10986654	Identifier	code		10986435	0					
ANR	10986655	PrimaryExpression	0		10986435	1					
ANR	10986656	ReturnStatement	return code ;	307:8:10972:10983	10986435	1	True				
ANR	10986657	Identifier	code		10986435	0					
ANR	10986658	ExpressionStatement	"memset ( cc . paint . values + n_numeric_comps , 0 , sizeof ( cc . paint . values ) - sizeof ( * cc . paint . values ) * n_numeric_comps )"	311:4:11180:11304	10986435	10	True				
ANR	10986659	CallExpression	"memset ( cc . paint . values + n_numeric_comps , 0 , sizeof ( cc . paint . values ) - sizeof ( * cc . paint . values ) * n_numeric_comps )"		10986435	0					
ANR	10986660	Callee	memset		10986435	0					
ANR	10986661	Identifier	memset		10986435	0					
ANR	10986662	ArgumentList	cc . paint . values + n_numeric_comps		10986435	1					
ANR	10986663	Argument	cc . paint . values + n_numeric_comps		10986435	0					
ANR	10986664	AdditiveExpression	cc . paint . values + n_numeric_comps		10986435	0		+			
ANR	10986665	MemberAccess	cc . paint . values		10986435	0					
ANR	10986666	MemberAccess	cc . paint		10986435	0					
ANR	10986667	Identifier	cc		10986435	0					
ANR	10986668	Identifier	paint		10986435	1					
ANR	10986669	Identifier	values		10986435	1					
ANR	10986670	Identifier	n_numeric_comps		10986435	1					
ANR	10986671	Argument	0		10986435	1					
ANR	10986672	PrimaryExpression	0		10986435	0					
ANR	10986673	Argument	sizeof ( cc . paint . values ) - sizeof ( * cc . paint . values ) * n_numeric_comps		10986435	2					
ANR	10986674	AdditiveExpression	sizeof ( cc . paint . values ) - sizeof ( * cc . paint . values ) * n_numeric_comps		10986435	0		-			
ANR	10986675	SizeofExpression	sizeof ( cc . paint . values )		10986435	0					
ANR	10986676	Sizeof	sizeof		10986435	0					
ANR	10986677	MemberAccess	cc . paint . values		10986435	1					
ANR	10986678	MemberAccess	cc . paint		10986435	0					
ANR	10986679	Identifier	cc		10986435	0					
ANR	10986680	Identifier	paint		10986435	1					
ANR	10986681	Identifier	values		10986435	1					
ANR	10986682	MultiplicativeExpression	sizeof ( * cc . paint . values ) * n_numeric_comps		10986435	1		*			
ANR	10986683	SizeofExpression	sizeof ( * cc . paint . values )		10986435	0					
ANR	10986684	Sizeof	sizeof		10986435	0					
ANR	10986685	UnaryOperationExpression	* cc . paint . values		10986435	1					
ANR	10986686	UnaryOperator	*		10986435	0					
ANR	10986687	MemberAccess	cc . paint . values		10986435	1					
ANR	10986688	MemberAccess	cc . paint		10986435	0					
ANR	10986689	Identifier	cc		10986435	0					
ANR	10986690	Identifier	paint		10986435	1					
ANR	10986691	Identifier	values		10986435	1					
ANR	10986692	Identifier	n_numeric_comps		10986435	1					
ANR	10986693	ExpressionStatement	"code = get_space_object ( i_ctx_p , & istate -> colorspace [ 0 ] . array , & space )"	314:4:11311:11381	10986435	11	True				
ANR	10986694	AssignmentExpression	"code = get_space_object ( i_ctx_p , & istate -> colorspace [ 0 ] . array , & space )"		10986435	0		=			
ANR	10986695	Identifier	code		10986435	0					
ANR	10986696	CallExpression	"get_space_object ( i_ctx_p , & istate -> colorspace [ 0 ] . array , & space )"		10986435	1					
ANR	10986697	Callee	get_space_object		10986435	0					
ANR	10986698	Identifier	get_space_object		10986435	0					
ANR	10986699	ArgumentList	i_ctx_p		10986435	1					
ANR	10986700	Argument	i_ctx_p		10986435	0					
ANR	10986701	Identifier	i_ctx_p		10986435	0					
ANR	10986702	Argument	& istate -> colorspace [ 0 ] . array		10986435	1					
ANR	10986703	UnaryOperationExpression	& istate -> colorspace [ 0 ] . array		10986435	0					
ANR	10986704	UnaryOperator	&		10986435	0					
ANR	10986705	MemberAccess	istate -> colorspace [ 0 ] . array		10986435	1					
ANR	10986706	ArrayIndexing	istate -> colorspace [ 0 ]		10986435	0					
ANR	10986707	PtrMemberAccess	istate -> colorspace		10986435	0					
ANR	10986708	Identifier	istate		10986435	0					
ANR	10986709	Identifier	colorspace		10986435	1					
ANR	10986710	PrimaryExpression	0		10986435	1					
ANR	10986711	Identifier	array		10986435	1					
ANR	10986712	Argument	& space		10986435	2					
ANR	10986713	UnaryOperationExpression	& space		10986435	0					
ANR	10986714	UnaryOperator	&		10986435	0					
ANR	10986715	Identifier	space		10986435	1					
ANR	10986716	IfStatement	if ( code < 0 )		10986435	12					
ANR	10986717	Condition	code < 0	315:8:11391:11398	10986435	0	True				
ANR	10986718	RelationalExpression	code < 0		10986435	0		<			
ANR	10986719	Identifier	code		10986435	0					
ANR	10986720	PrimaryExpression	0		10986435	1					
ANR	10986721	ReturnStatement	return code ;	316:8:11409:11420	10986435	1	True				
ANR	10986722	Identifier	code		10986435	0					
ANR	10986723	IfStatement	if ( space -> validatecomponents )		10986435	13					
ANR	10986724	Condition	space -> validatecomponents	317:8:11430:11454	10986435	0	True				
ANR	10986725	PtrMemberAccess	space -> validatecomponents		10986435	0					
ANR	10986726	Identifier	space		10986435	0					
ANR	10986727	Identifier	validatecomponents		10986435	1					
ANR	10986728	CompoundStatement		49:35:1823:1823	10986435	1					
ANR	10986729	ExpressionStatement	"code = space -> validatecomponents ( i_ctx_p , & istate -> colorspace [ 0 ] . array , cc . paint . values , n_numeric_comps )"	318:8:11467:11654	10986435	0	True				
ANR	10986730	AssignmentExpression	"code = space -> validatecomponents ( i_ctx_p , & istate -> colorspace [ 0 ] . array , cc . paint . values , n_numeric_comps )"		10986435	0		=			
ANR	10986731	Identifier	code		10986435	0					
ANR	10986732	CallExpression	"space -> validatecomponents ( i_ctx_p , & istate -> colorspace [ 0 ] . array , cc . paint . values , n_numeric_comps )"		10986435	1					
ANR	10986733	Callee	space -> validatecomponents		10986435	0					
ANR	10986734	PtrMemberAccess	space -> validatecomponents		10986435	0					
ANR	10986735	Identifier	space		10986435	0					
ANR	10986736	Identifier	validatecomponents		10986435	1					
ANR	10986737	ArgumentList	i_ctx_p		10986435	1					
ANR	10986738	Argument	i_ctx_p		10986435	0					
ANR	10986739	Identifier	i_ctx_p		10986435	0					
ANR	10986740	Argument	& istate -> colorspace [ 0 ] . array		10986435	1					
ANR	10986741	UnaryOperationExpression	& istate -> colorspace [ 0 ] . array		10986435	0					
ANR	10986742	UnaryOperator	&		10986435	0					
ANR	10986743	MemberAccess	istate -> colorspace [ 0 ] . array		10986435	1					
ANR	10986744	ArrayIndexing	istate -> colorspace [ 0 ]		10986435	0					
ANR	10986745	PtrMemberAccess	istate -> colorspace		10986435	0					
ANR	10986746	Identifier	istate		10986435	0					
ANR	10986747	Identifier	colorspace		10986435	1					
ANR	10986748	PrimaryExpression	0		10986435	1					
ANR	10986749	Identifier	array		10986435	1					
ANR	10986750	Argument	cc . paint . values		10986435	2					
ANR	10986751	MemberAccess	cc . paint . values		10986435	0					
ANR	10986752	MemberAccess	cc . paint		10986435	0					
ANR	10986753	Identifier	cc		10986435	0					
ANR	10986754	Identifier	paint		10986435	1					
ANR	10986755	Identifier	values		10986435	1					
ANR	10986756	Argument	n_numeric_comps		10986435	3					
ANR	10986757	Identifier	n_numeric_comps		10986435	0					
ANR	10986758	IfStatement	if ( code < 0 )		10986435	1					
ANR	10986759	Condition	code < 0	321:12:11668:11675	10986435	0	True				
ANR	10986760	RelationalExpression	code < 0		10986435	0		<			
ANR	10986761	Identifier	code		10986435	0					
ANR	10986762	PrimaryExpression	0		10986435	1					
ANR	10986763	ReturnStatement	return code ;	322:12:11690:11701	10986435	1	True				
ANR	10986764	Identifier	code		10986435	0					
ANR	10986765	IfStatement	"if ( ( code = gs_setcolor ( igs , & cc ) ) >= 0 )"		10986435	14					
ANR	10986766	Condition	"( code = gs_setcolor ( igs , & cc ) ) >= 0"	326:8:11766:11800	10986435	0	True				
ANR	10986767	RelationalExpression	"( code = gs_setcolor ( igs , & cc ) ) >= 0"		10986435	0		>=			
ANR	10986768	AssignmentExpression	"code = gs_setcolor ( igs , & cc )"		10986435	0		=			
ANR	10986769	Identifier	code		10986435	0					
ANR	10986770	CallExpression	"gs_setcolor ( igs , & cc )"		10986435	1					
ANR	10986771	Callee	gs_setcolor		10986435	0					
ANR	10986772	Identifier	gs_setcolor		10986435	0					
ANR	10986773	ArgumentList	igs		10986435	1					
ANR	10986774	Argument	igs		10986435	0					
ANR	10986775	Identifier	igs		10986435	0					
ANR	10986776	Argument	& cc		10986435	1					
ANR	10986777	UnaryOperationExpression	& cc		10986435	0					
ANR	10986778	UnaryOperator	&		10986435	0					
ANR	10986779	Identifier	cc		10986435	1					
ANR	10986780	PrimaryExpression	0		10986435	1					
ANR	10986781	CompoundStatement		58:45:2169:2169	10986435	1					
ANR	10986782	IfStatement	if ( n_comps > n_numeric_comps )		10986435	0					
ANR	10986783	Condition	n_comps > n_numeric_comps	328:12:11818:11842	10986435	0	True				
ANR	10986784	RelationalExpression	n_comps > n_numeric_comps		10986435	0		>			
ANR	10986785	Identifier	n_comps		10986435	0					
ANR	10986786	Identifier	n_numeric_comps		10986435	1					
ANR	10986787	CompoundStatement		60:39:2211:2211	10986435	1					
ANR	10986788	ExpressionStatement	istate -> pattern [ 0 ] = * op	329:12:11859:11883	10986435	0	True				
ANR	10986789	AssignmentExpression	istate -> pattern [ 0 ] = * op		10986435	0		=			
ANR	10986790	ArrayIndexing	istate -> pattern [ 0 ]		10986435	0					
ANR	10986791	PtrMemberAccess	istate -> pattern		10986435	0					
ANR	10986792	Identifier	istate		10986435	0					
ANR	10986793	Identifier	pattern		10986435	1					
ANR	10986794	PrimaryExpression	0		10986435	1					
ANR	10986795	UnaryOperationExpression	* op		10986435	1					
ANR	10986796	UnaryOperator	*		10986435	0					
ANR	10986797	Identifier	op		10986435	1					
ANR	10986798	ExpressionStatement	"code = validate_spaces ( i_ctx_p , & istate -> colorspace [ 0 ] . array , & depth )"	338:4:12188:12257	10986435	15	True				
ANR	10986799	AssignmentExpression	"code = validate_spaces ( i_ctx_p , & istate -> colorspace [ 0 ] . array , & depth )"		10986435	0		=			
ANR	10986800	Identifier	code		10986435	0					
ANR	10986801	CallExpression	"validate_spaces ( i_ctx_p , & istate -> colorspace [ 0 ] . array , & depth )"		10986435	1					
ANR	10986802	Callee	validate_spaces		10986435	0					
ANR	10986803	Identifier	validate_spaces		10986435	0					
ANR	10986804	ArgumentList	i_ctx_p		10986435	1					
ANR	10986805	Argument	i_ctx_p		10986435	0					
ANR	10986806	Identifier	i_ctx_p		10986435	0					
ANR	10986807	Argument	& istate -> colorspace [ 0 ] . array		10986435	1					
ANR	10986808	UnaryOperationExpression	& istate -> colorspace [ 0 ] . array		10986435	0					
ANR	10986809	UnaryOperator	&		10986435	0					
ANR	10986810	MemberAccess	istate -> colorspace [ 0 ] . array		10986435	1					
ANR	10986811	ArrayIndexing	istate -> colorspace [ 0 ]		10986435	0					
ANR	10986812	PtrMemberAccess	istate -> colorspace		10986435	0					
ANR	10986813	Identifier	istate		10986435	0					
ANR	10986814	Identifier	colorspace		10986435	1					
ANR	10986815	PrimaryExpression	0		10986435	1					
ANR	10986816	Identifier	array		10986435	1					
ANR	10986817	Argument	& depth		10986435	2					
ANR	10986818	UnaryOperationExpression	& depth		10986435	0					
ANR	10986819	UnaryOperator	&		10986435	0					
ANR	10986820	Identifier	depth		10986435	1					
ANR	10986821	IfStatement	if ( code < 0 )		10986435	16					
ANR	10986822	Condition	code < 0	339:8:12267:12274	10986435	0	True				
ANR	10986823	RelationalExpression	code < 0		10986435	0		<			
ANR	10986824	Identifier	code		10986435	0					
ANR	10986825	PrimaryExpression	0		10986435	1					
ANR	10986826	ReturnStatement	return code ;	340:8:12285:12296	10986435	1	True				
ANR	10986827	Identifier	code		10986435	0					
ANR	10986828	ExpressionStatement	check_estack ( 5 )	343:4:12425:12440	10986435	17	True				
ANR	10986829	CallExpression	check_estack ( 5 )		10986435	0					
ANR	10986830	Callee	check_estack		10986435	0					
ANR	10986831	Identifier	check_estack		10986435	0					
ANR	10986832	ArgumentList	5		10986435	1					
ANR	10986833	Argument	5		10986435	0					
ANR	10986834	PrimaryExpression	5		10986435	0					
ANR	10986835	ExpressionStatement	ep = esp += 1	345:4:12520:12533	10986435	18	True				
ANR	10986836	AssignmentExpression	ep = esp += 1		10986435	0		=			
ANR	10986837	Identifier	ep		10986435	0					
ANR	10986838	AssignmentExpression	esp += 1		10986435	1		+=			
ANR	10986839	Identifier	esp		10986435	0					
ANR	10986840	PrimaryExpression	1		10986435	1					
ANR	10986841	ExpressionStatement	"make_int ( ep , 0 )"	346:4:12539:12554	10986435	19	True				
ANR	10986842	CallExpression	"make_int ( ep , 0 )"		10986435	0					
ANR	10986843	Callee	make_int		10986435	0					
ANR	10986844	Identifier	make_int		10986435	0					
ANR	10986845	ArgumentList	ep		10986435	1					
ANR	10986846	Argument	ep		10986435	0					
ANR	10986847	Identifier	ep		10986435	0					
ANR	10986848	Argument	0		10986435	1					
ANR	10986849	PrimaryExpression	0		10986435	0					
ANR	10986850	ExpressionStatement	ep = esp += 1	348:4:12632:12645	10986435	20	True				
ANR	10986851	AssignmentExpression	ep = esp += 1		10986435	0		=			
ANR	10986852	Identifier	ep		10986435	0					
ANR	10986853	AssignmentExpression	esp += 1		10986435	1		+=			
ANR	10986854	Identifier	esp		10986435	0					
ANR	10986855	PrimaryExpression	1		10986435	1					
ANR	10986856	ExpressionStatement	"make_int ( ep , 0 )"	349:4:12651:12666	10986435	21	True				
ANR	10986857	CallExpression	"make_int ( ep , 0 )"		10986435	0					
ANR	10986858	Callee	make_int		10986435	0					
ANR	10986859	Identifier	make_int		10986435	0					
ANR	10986860	ArgumentList	ep		10986435	1					
ANR	10986861	Argument	ep		10986435	0					
ANR	10986862	Identifier	ep		10986435	0					
ANR	10986863	Argument	0		10986435	1					
ANR	10986864	PrimaryExpression	0		10986435	0					
ANR	10986865	ExpressionStatement	ep = esp += 1	351:4:12728:12741	10986435	22	True				
ANR	10986866	AssignmentExpression	ep = esp += 1		10986435	0		=			
ANR	10986867	Identifier	ep		10986435	0					
ANR	10986868	AssignmentExpression	esp += 1		10986435	1		+=			
ANR	10986869	Identifier	esp		10986435	0					
ANR	10986870	PrimaryExpression	1		10986435	1					
ANR	10986871	ExpressionStatement	"make_int ( ep , 0 )"	352:4:12747:12762	10986435	23	True				
ANR	10986872	CallExpression	"make_int ( ep , 0 )"		10986435	0					
ANR	10986873	Callee	make_int		10986435	0					
ANR	10986874	Identifier	make_int		10986435	0					
ANR	10986875	ArgumentList	ep		10986435	1					
ANR	10986876	Argument	ep		10986435	0					
ANR	10986877	Identifier	ep		10986435	0					
ANR	10986878	Argument	0		10986435	1					
ANR	10986879	PrimaryExpression	0		10986435	0					
ANR	10986880	ExpressionStatement	ep = esp += 1	357:4:12941:12954	10986435	24	True				
ANR	10986881	AssignmentExpression	ep = esp += 1		10986435	0		=			
ANR	10986882	Identifier	ep		10986435	0					
ANR	10986883	AssignmentExpression	esp += 1		10986435	1		+=			
ANR	10986884	Identifier	esp		10986435	0					
ANR	10986885	PrimaryExpression	1		10986435	1					
ANR	10986886	ExpressionStatement	* ep = istate -> colorspace [ 0 ] . array	358:4:12960:12993	10986435	25	True				
ANR	10986887	AssignmentExpression	* ep = istate -> colorspace [ 0 ] . array		10986435	0		=			
ANR	10986888	UnaryOperationExpression	* ep		10986435	0					
ANR	10986889	UnaryOperator	*		10986435	0					
ANR	10986890	Identifier	ep		10986435	1					
ANR	10986891	MemberAccess	istate -> colorspace [ 0 ] . array		10986435	1					
ANR	10986892	ArrayIndexing	istate -> colorspace [ 0 ]		10986435	0					
ANR	10986893	PtrMemberAccess	istate -> colorspace		10986435	0					
ANR	10986894	Identifier	istate		10986435	0					
ANR	10986895	Identifier	colorspace		10986435	1					
ANR	10986896	PrimaryExpression	0		10986435	1					
ANR	10986897	Identifier	array		10986435	1					
ANR	10986898	ExpressionStatement	push_op_estack ( setcolor_cont )	360:4:13050:13079	10986435	26	True				
ANR	10986899	CallExpression	push_op_estack ( setcolor_cont )		10986435	0					
ANR	10986900	Callee	push_op_estack		10986435	0					
ANR	10986901	Identifier	push_op_estack		10986435	0					
ANR	10986902	ArgumentList	setcolor_cont		10986435	1					
ANR	10986903	Argument	setcolor_cont		10986435	0					
ANR	10986904	Identifier	setcolor_cont		10986435	0					
ANR	10986905	ReturnStatement	return o_push_estack ;	361:4:13085:13105	10986435	27	True				
ANR	10986906	Identifier	o_push_estack		10986435	0					
ANR	10986907	ReturnType	static int		10986435	1					
ANR	10986908	Identifier	zsetcolor		10986435	2					
ANR	10986909	ParameterList	i_ctx_t * i_ctx_p		10986435	3					
ANR	10986910	Parameter	i_ctx_t * i_ctx_p	268:10:9614:9630	10986435	0	True				
ANR	10986911	ParameterType	i_ctx_t *		10986435	0					
ANR	10986912	Identifier	i_ctx_p		10986435	1					
ANR	10986913	CFGEntryNode	ENTRY		10986435		True				
ANR	10986914	CFGExitNode	EXIT		10986435		True				
ANR	10986915	Symbol	& istate -> colorspace [ 0 ] . array		10986435						
ANR	10986916	Symbol	n_comps		10986435						
ANR	10986917	Symbol	esp		10986435						
ANR	10986918	Symbol	* op		10986435						
ANR	10986919	Symbol	* cc		10986435						
ANR	10986920	Symbol	& cc		10986435						
ANR	10986921	Symbol	n_numeric_comps		10986435						
ANR	10986922	Symbol	osp		10986435						
ANR	10986923	Symbol	space		10986435						
ANR	10986924	Symbol	* istate		10986435						
ANR	10986925	Symbol	r_has_type		10986435						
ANR	10986926	Symbol	pattern_instance_uses_base_space		10986435						
ANR	10986927	Symbol	igs		10986435						
ANR	10986928	Symbol	gs_currentcolorspace		10986435						
ANR	10986929	Symbol	* cc . paint . values		10986435						
ANR	10986930	Symbol	istate -> colorspace		10986435						
ANR	10986931	Symbol	setcolor_cont		10986435						
ANR	10986932	Symbol	imemory		10986435						
ANR	10986933	Symbol	validate_spaces		10986435						
ANR	10986934	Symbol	& pImpl		10986435						
ANR	10986935	Symbol	dict_find_string		10986435						
ANR	10986936	Symbol	ep		10986435						
ANR	10986937	Symbol	get_space_object		10986435						
ANR	10986938	Symbol	num_offset		10986435						
ANR	10986939	Symbol	& depth		10986435						
ANR	10986940	Symbol	i_ctx_p		10986435						
ANR	10986941	Symbol	cs_num_components		10986435						
ANR	10986942	Symbol	cc . paint . values		10986435						
ANR	10986943	Symbol	* * istate		10986435						
ANR	10986944	Symbol	istate -> colorspace [ 0 ] . array		10986435						
ANR	10986945	Symbol	cc . pattern		10986435						
ANR	10986946	Symbol	code		10986435						
ANR	10986947	Symbol	t_dictionary		10986435						
ANR	10986948	Symbol	& pPatInst		10986435						
ANR	10986949	Symbol	gs_setcolor		10986435						
ANR	10986950	Symbol	r_ptr		10986435						
ANR	10986951	Symbol	istate -> pattern		10986435						
ANR	10986952	Symbol	& space		10986435						
ANR	10986953	Symbol	* istate -> pattern		10986435						
ANR	10986954	Symbol	* istate -> colorspace		10986435						
ANR	10986955	Symbol	o_push_estack		10986435						
ANR	10986956	Symbol	cc		10986435						
ANR	10986957	Symbol	op		10986435						
ANR	10986958	Symbol	pcs		10986435						
ANR	10986959	Symbol	float_params		10986435						
ANR	10986960	Symbol	array_get		10986435						
ANR	10986961	Symbol	space -> validatecomponents		10986435						
ANR	10986962	Symbol	gs_pattern_instance_t		10986435						
ANR	10986963	Symbol	* cc . paint		10986435						
ANR	10986964	Symbol	* ep		10986435						
ANR	10986965	Symbol	depth		10986435						
ANR	10986966	Symbol	pPatInst		10986435						
ANR	10986967	Symbol	cc . paint		10986435						
ANR	10986968	Symbol	* space		10986435						
ANR	10986969	Symbol	pImpl		10986435						
ANR	10986970	Symbol	istate		10986435						
ANR	10986971	Function	name_is_device_color	368:0:13242:13445							
ANR	10986972	FunctionDef	name_is_device_color (char * cs_name)		10986971	0					
ANR	10986973	CompoundStatement		369:0:13292:13445	10986971	0					
ANR	10986974	ReturnStatement	"return ( strcmp ( cs_name , ""DeviceGray"" ) == 0 || strcmp ( cs_name , ""DeviceRGB"" ) == 0 || strcmp ( cs_name , ""DeviceCMYK"" ) == 0 ) ;"	371:4:13299:13442	10986971	0	True				
ANR	10986975	OrExpression	"strcmp ( cs_name , ""DeviceGray"" ) == 0 || strcmp ( cs_name , ""DeviceRGB"" ) == 0 || strcmp ( cs_name , ""DeviceCMYK"" ) == 0"		10986971	0		||			
ANR	10986976	EqualityExpression	"strcmp ( cs_name , ""DeviceGray"" ) == 0"		10986971	0		==			
ANR	10986977	CallExpression	"strcmp ( cs_name , ""DeviceGray"" )"		10986971	0					
ANR	10986978	Callee	strcmp		10986971	0					
ANR	10986979	Identifier	strcmp		10986971	0					
ANR	10986980	ArgumentList	cs_name		10986971	1					
ANR	10986981	Argument	cs_name		10986971	0					
ANR	10986982	Identifier	cs_name		10986971	0					
ANR	10986983	Argument	"""DeviceGray"""		10986971	1					
ANR	10986984	PrimaryExpression	"""DeviceGray"""		10986971	0					
ANR	10986985	PrimaryExpression	0		10986971	1					
ANR	10986986	OrExpression	"strcmp ( cs_name , ""DeviceRGB"" ) == 0 || strcmp ( cs_name , ""DeviceCMYK"" ) == 0"		10986971	1		||			
ANR	10986987	EqualityExpression	"strcmp ( cs_name , ""DeviceRGB"" ) == 0"		10986971	0		==			
ANR	10986988	CallExpression	"strcmp ( cs_name , ""DeviceRGB"" )"		10986971	0					
ANR	10986989	Callee	strcmp		10986971	0					
ANR	10986990	Identifier	strcmp		10986971	0					
ANR	10986991	ArgumentList	cs_name		10986971	1					
ANR	10986992	Argument	cs_name		10986971	0					
ANR	10986993	Identifier	cs_name		10986971	0					
ANR	10986994	Argument	"""DeviceRGB"""		10986971	1					
ANR	10986995	PrimaryExpression	"""DeviceRGB"""		10986971	0					
ANR	10986996	PrimaryExpression	0		10986971	1					
ANR	10986997	EqualityExpression	"strcmp ( cs_name , ""DeviceCMYK"" ) == 0"		10986971	1		==			
ANR	10986998	CallExpression	"strcmp ( cs_name , ""DeviceCMYK"" )"		10986971	0					
ANR	10986999	Callee	strcmp		10986971	0					
ANR	10987000	Identifier	strcmp		10986971	0					
ANR	10987001	ArgumentList	cs_name		10986971	1					
ANR	10987002	Argument	cs_name		10986971	0					
ANR	10987003	Identifier	cs_name		10986971	0					
ANR	10987004	Argument	"""DeviceCMYK"""		10986971	1					
ANR	10987005	PrimaryExpression	"""DeviceCMYK"""		10986971	0					
ANR	10987006	PrimaryExpression	0		10986971	1					
ANR	10987007	ReturnType	static bool		10986971	1					
ANR	10987008	Identifier	name_is_device_color		10986971	2					
ANR	10987009	ParameterList	char * cs_name		10986971	3					
ANR	10987010	Parameter	char * cs_name	368:34:13276:13288	10986971	0	True				
ANR	10987011	ParameterType	char *		10986971	0					
ANR	10987012	Identifier	cs_name		10986971	1					
ANR	10987013	CFGEntryNode	ENTRY		10986971		True				
ANR	10987014	CFGExitNode	EXIT		10986971		True				
ANR	10987015	Symbol	strcmp		10986971						
ANR	10987016	Symbol	cs_name		10986971						
ANR	10987017	Function	is_same_colorspace	383:0:13721:16285							
ANR	10987018	FunctionDef	"is_same_colorspace (i_ctx_t * i_ctx_p , ref * space1 , ref * space2 , bool isCIE)"		10987017	0					
ANR	10987019	CompoundStatement		384:0:13808:16285	10987017	0					
ANR	10987020	IdentifierDeclStatement	"PS_colour_space_t * oldcspace = 0 , * newcspace = 0 ;"	385:4:13814:13862	10987017	0	True				
ANR	10987021	IdentifierDecl	* oldcspace = 0		10987017	0					
ANR	10987022	IdentifierDeclType	PS_colour_space_t *		10987017	0					
ANR	10987023	Identifier	oldcspace		10987017	1					
ANR	10987024	AssignmentExpression	* oldcspace = 0		10987017	2		=			
ANR	10987025	Identifier	oldcspace		10987017	0					
ANR	10987026	PrimaryExpression	0		10987017	1					
ANR	10987027	IdentifierDecl	* newcspace = 0		10987017	1					
ANR	10987028	IdentifierDeclType	PS_colour_space_t *		10987017	0					
ANR	10987029	Identifier	newcspace		10987017	1					
ANR	10987030	AssignmentExpression	* newcspace = 0		10987017	2		=			
ANR	10987031	Identifier	newcspace		10987017	0					
ANR	10987032	PrimaryExpression	0		10987017	1					
ANR	10987033	IdentifierDeclStatement	"ref oldspace , * poldspace = & oldspace , newspace , * pnewspace = & newspace ;"	386:4:13868:13938	10987017	1	True				
ANR	10987034	IdentifierDecl	oldspace		10987017	0					
ANR	10987035	IdentifierDeclType	ref		10987017	0					
ANR	10987036	Identifier	oldspace		10987017	1					
ANR	10987037	IdentifierDecl	* poldspace = & oldspace		10987017	1					
ANR	10987038	IdentifierDeclType	ref *		10987017	0					
ANR	10987039	Identifier	poldspace		10987017	1					
ANR	10987040	AssignmentExpression	* poldspace = & oldspace		10987017	2		=			
ANR	10987041	Identifier	poldspace		10987017	0					
ANR	10987042	UnaryOperationExpression	& oldspace		10987017	1					
ANR	10987043	UnaryOperator	&		10987017	0					
ANR	10987044	Identifier	oldspace		10987017	1					
ANR	10987045	IdentifierDecl	newspace		10987017	2					
ANR	10987046	IdentifierDeclType	ref		10987017	0					
ANR	10987047	Identifier	newspace		10987017	1					
ANR	10987048	IdentifierDecl	* pnewspace = & newspace		10987017	3					
ANR	10987049	IdentifierDeclType	ref *		10987017	0					
ANR	10987050	Identifier	pnewspace		10987017	1					
ANR	10987051	AssignmentExpression	* pnewspace = & newspace		10987017	2		=			
ANR	10987052	Identifier	pnewspace		10987017	0					
ANR	10987053	UnaryOperationExpression	& newspace		10987017	1					
ANR	10987054	UnaryOperator	&		10987017	0					
ANR	10987055	Identifier	newspace		10987017	1					
ANR	10987056	IdentifierDeclStatement	"int code , CIESubst ;"	387:4:13944:13962	10987017	2	True				
ANR	10987057	IdentifierDecl	code		10987017	0					
ANR	10987058	IdentifierDeclType	int		10987017	0					
ANR	10987059	Identifier	code		10987017	1					
ANR	10987060	IdentifierDecl	CIESubst		10987017	1					
ANR	10987061	IdentifierDeclType	int		10987017	0					
ANR	10987062	Identifier	CIESubst		10987017	1					
ANR	10987063	ExpressionStatement	oldspace . tas . type_attrs = 0	390:4:14005:14032	10987017	3	True				
ANR	10987064	AssignmentExpression	oldspace . tas . type_attrs = 0		10987017	0		=			
ANR	10987065	MemberAccess	oldspace . tas . type_attrs		10987017	0					
ANR	10987066	MemberAccess	oldspace . tas		10987017	0					
ANR	10987067	Identifier	oldspace		10987017	0					
ANR	10987068	Identifier	tas		10987017	1					
ANR	10987069	Identifier	type_attrs		10987017	1					
ANR	10987070	PrimaryExpression	0		10987017	1					
ANR	10987071	ExpressionStatement	oldspace . tas . type_attrs = 0	391:4:14038:14065	10987017	4	True				
ANR	10987072	AssignmentExpression	oldspace . tas . type_attrs = 0		10987017	0		=			
ANR	10987073	MemberAccess	oldspace . tas . type_attrs		10987017	0					
ANR	10987074	MemberAccess	oldspace . tas		10987017	0					
ANR	10987075	Identifier	oldspace		10987017	0					
ANR	10987076	Identifier	tas		10987017	1					
ANR	10987077	Identifier	type_attrs		10987017	1					
ANR	10987078	PrimaryExpression	0		10987017	1					
ANR	10987079	ExpressionStatement	"ref_assign ( pnewspace , space1 )"	393:4:14072:14101	10987017	5	True				
ANR	10987080	CallExpression	"ref_assign ( pnewspace , space1 )"		10987017	0					
ANR	10987081	Callee	ref_assign		10987017	0					
ANR	10987082	Identifier	ref_assign		10987017	0					
ANR	10987083	ArgumentList	pnewspace		10987017	1					
ANR	10987084	Argument	pnewspace		10987017	0					
ANR	10987085	Identifier	pnewspace		10987017	0					
ANR	10987086	Argument	space1		10987017	1					
ANR	10987087	Identifier	space1		10987017	0					
ANR	10987088	ExpressionStatement	"ref_assign ( poldspace , space2 )"	394:4:14107:14136	10987017	6	True				
ANR	10987089	CallExpression	"ref_assign ( poldspace , space2 )"		10987017	0					
ANR	10987090	Callee	ref_assign		10987017	0					
ANR	10987091	Identifier	ref_assign		10987017	0					
ANR	10987092	ArgumentList	poldspace		10987017	1					
ANR	10987093	Argument	poldspace		10987017	0					
ANR	10987094	Identifier	poldspace		10987017	0					
ANR	10987095	Argument	space2		10987017	1					
ANR	10987096	Identifier	space2		10987017	0					
ANR	10987097	DoStatement	do		10987017	7					
ANR	10987098	CompoundStatement		13:7:337:337	10987017	0					
ANR	10987099	IfStatement	if ( r_type ( poldspace ) != r_type ( pnewspace ) )		10987017	0					
ANR	10987100	Condition	r_type ( poldspace ) != r_type ( pnewspace )	397:12:14160:14197	10987017	0	True				
ANR	10987101	EqualityExpression	r_type ( poldspace ) != r_type ( pnewspace )		10987017	0		!=			
ANR	10987102	CallExpression	r_type ( poldspace )		10987017	0					
ANR	10987103	Callee	r_type		10987017	0					
ANR	10987104	Identifier	r_type		10987017	0					
ANR	10987105	ArgumentList	poldspace		10987017	1					
ANR	10987106	Argument	poldspace		10987017	0					
ANR	10987107	Identifier	poldspace		10987017	0					
ANR	10987108	CallExpression	r_type ( pnewspace )		10987017	1					
ANR	10987109	Callee	r_type		10987017	0					
ANR	10987110	Identifier	r_type		10987017	0					
ANR	10987111	ArgumentList	pnewspace		10987017	1					
ANR	10987112	Argument	pnewspace		10987017	0					
ANR	10987113	Identifier	pnewspace		10987017	0					
ANR	10987114	ReturnStatement	return 0 ;	398:12:14212:14220	10987017	1	True				
ANR	10987115	PrimaryExpression	0		10987017	0					
ANR	10987116	ExpressionStatement	"code = get_space_object ( i_ctx_p , poldspace , & oldcspace )"	400:8:14231:14286	10987017	1	True				
ANR	10987117	AssignmentExpression	"code = get_space_object ( i_ctx_p , poldspace , & oldcspace )"		10987017	0		=			
ANR	10987118	Identifier	code		10987017	0					
ANR	10987119	CallExpression	"get_space_object ( i_ctx_p , poldspace , & oldcspace )"		10987017	1					
ANR	10987120	Callee	get_space_object		10987017	0					
ANR	10987121	Identifier	get_space_object		10987017	0					
ANR	10987122	ArgumentList	i_ctx_p		10987017	1					
ANR	10987123	Argument	i_ctx_p		10987017	0					
ANR	10987124	Identifier	i_ctx_p		10987017	0					
ANR	10987125	Argument	poldspace		10987017	1					
ANR	10987126	Identifier	poldspace		10987017	0					
ANR	10987127	Argument	& oldcspace		10987017	2					
ANR	10987128	UnaryOperationExpression	& oldcspace		10987017	0					
ANR	10987129	UnaryOperator	&		10987017	0					
ANR	10987130	Identifier	oldcspace		10987017	1					
ANR	10987131	IfStatement	if ( code < 0 )		10987017	2					
ANR	10987132	Condition	code < 0	401:12:14300:14307	10987017	0	True				
ANR	10987133	RelationalExpression	code < 0		10987017	0		<			
ANR	10987134	Identifier	code		10987017	0					
ANR	10987135	PrimaryExpression	0		10987017	1					
ANR	10987136	ReturnStatement	return 0 ;	402:12:14322:14330	10987017	1	True				
ANR	10987137	PrimaryExpression	0		10987017	0					
ANR	10987138	ExpressionStatement	"code = get_space_object ( i_ctx_p , pnewspace , & newcspace )"	404:8:14341:14396	10987017	3	True				
ANR	10987139	AssignmentExpression	"code = get_space_object ( i_ctx_p , pnewspace , & newcspace )"		10987017	0		=			
ANR	10987140	Identifier	code		10987017	0					
ANR	10987141	CallExpression	"get_space_object ( i_ctx_p , pnewspace , & newcspace )"		10987017	1					
ANR	10987142	Callee	get_space_object		10987017	0					
ANR	10987143	Identifier	get_space_object		10987017	0					
ANR	10987144	ArgumentList	i_ctx_p		10987017	1					
ANR	10987145	Argument	i_ctx_p		10987017	0					
ANR	10987146	Identifier	i_ctx_p		10987017	0					
ANR	10987147	Argument	pnewspace		10987017	1					
ANR	10987148	Identifier	pnewspace		10987017	0					
ANR	10987149	Argument	& newcspace		10987017	2					
ANR	10987150	UnaryOperationExpression	& newcspace		10987017	0					
ANR	10987151	UnaryOperator	&		10987017	0					
ANR	10987152	Identifier	newcspace		10987017	1					
ANR	10987153	IfStatement	if ( code < 0 )		10987017	4					
ANR	10987154	Condition	code < 0	405:12:14410:14417	10987017	0	True				
ANR	10987155	RelationalExpression	code < 0		10987017	0		<			
ANR	10987156	Identifier	code		10987017	0					
ANR	10987157	PrimaryExpression	0		10987017	1					
ANR	10987158	ReturnStatement	return 0 ;	406:12:14432:14440	10987017	1	True				
ANR	10987159	PrimaryExpression	0		10987017	0					
ANR	10987160	IfStatement	"if ( strcmp ( oldcspace -> name , newcspace -> name ) != 0 )"		10987017	5					
ANR	10987161	Condition	"strcmp ( oldcspace -> name , newcspace -> name ) != 0"	411:12:14573:14617	10987017	0	True				
ANR	10987162	EqualityExpression	"strcmp ( oldcspace -> name , newcspace -> name ) != 0"		10987017	0		!=			
ANR	10987163	CallExpression	"strcmp ( oldcspace -> name , newcspace -> name )"		10987017	0					
ANR	10987164	Callee	strcmp		10987017	0					
ANR	10987165	Identifier	strcmp		10987017	0					
ANR	10987166	ArgumentList	oldcspace -> name		10987017	1					
ANR	10987167	Argument	oldcspace -> name		10987017	0					
ANR	10987168	PtrMemberAccess	oldcspace -> name		10987017	0					
ANR	10987169	Identifier	oldcspace		10987017	0					
ANR	10987170	Identifier	name		10987017	1					
ANR	10987171	Argument	newcspace -> name		10987017	1					
ANR	10987172	PtrMemberAccess	newcspace -> name		10987017	0					
ANR	10987173	Identifier	newcspace		10987017	0					
ANR	10987174	Identifier	name		10987017	1					
ANR	10987175	PrimaryExpression	0		10987017	1					
ANR	10987176	ReturnStatement	return 0 ;	412:12:14632:14640	10987017	1	True				
ANR	10987177	PrimaryExpression	0		10987017	0					
ANR	10987178	IfStatement	"if ( ! oldcspace -> compareproc ( i_ctx_p , poldspace , pnewspace ) )"		10987017	6					
ANR	10987179	Condition	"! oldcspace -> compareproc ( i_ctx_p , poldspace , pnewspace )"	415:12:14712:14765	10987017	0	True				
ANR	10987180	UnaryOperationExpression	"! oldcspace -> compareproc ( i_ctx_p , poldspace , pnewspace )"		10987017	0					
ANR	10987181	UnaryOperator	!		10987017	0					
ANR	10987182	CallExpression	"oldcspace -> compareproc ( i_ctx_p , poldspace , pnewspace )"		10987017	1					
ANR	10987183	Callee	oldcspace -> compareproc		10987017	0					
ANR	10987184	PtrMemberAccess	oldcspace -> compareproc		10987017	0					
ANR	10987185	Identifier	oldcspace		10987017	0					
ANR	10987186	Identifier	compareproc		10987017	1					
ANR	10987187	ArgumentList	i_ctx_p		10987017	1					
ANR	10987188	Argument	i_ctx_p		10987017	0					
ANR	10987189	Identifier	i_ctx_p		10987017	0					
ANR	10987190	Argument	poldspace		10987017	1					
ANR	10987191	Identifier	poldspace		10987017	0					
ANR	10987192	Argument	pnewspace		10987017	2					
ANR	10987193	Identifier	pnewspace		10987017	0					
ANR	10987194	ReturnStatement	return 0 ;	416:12:14780:14788	10987017	1	True				
ANR	10987195	PrimaryExpression	0		10987017	0					
ANR	10987196	IfStatement	if ( name_is_device_color ( newcspace -> name ) )		10987017	7					
ANR	10987197	Condition	name_is_device_color ( newcspace -> name )	433:13:15360:15396	10987017	0	True				
ANR	10987198	CallExpression	name_is_device_color ( newcspace -> name )		10987017	0					
ANR	10987199	Callee	name_is_device_color		10987017	0					
ANR	10987200	Identifier	name_is_device_color		10987017	0					
ANR	10987201	ArgumentList	newcspace -> name		10987017	1					
ANR	10987202	Argument	newcspace -> name		10987017	0					
ANR	10987203	PtrMemberAccess	newcspace -> name		10987017	0					
ANR	10987204	Identifier	newcspace		10987017	0					
ANR	10987205	Identifier	name		10987017	1					
ANR	10987206	CompoundStatement		50:52:1590:1590	10987017	1					
ANR	10987207	IfStatement	if ( gs_color_space_is_CIE ( gs_currentcolorspace_inline ( i_ctx_p -> pgs ) ) )		10987017	0					
ANR	10987208	Condition	gs_color_space_is_CIE ( gs_currentcolorspace_inline ( i_ctx_p -> pgs ) )	434:17:15418:15481	10987017	0	True				
ANR	10987209	CallExpression	gs_color_space_is_CIE ( gs_currentcolorspace_inline ( i_ctx_p -> pgs ) )		10987017	0					
ANR	10987210	Callee	gs_color_space_is_CIE		10987017	0					
ANR	10987211	Identifier	gs_color_space_is_CIE		10987017	0					
ANR	10987212	ArgumentList	gs_currentcolorspace_inline ( i_ctx_p -> pgs )		10987017	1					
ANR	10987213	Argument	gs_currentcolorspace_inline ( i_ctx_p -> pgs )		10987017	0					
ANR	10987214	CallExpression	gs_currentcolorspace_inline ( i_ctx_p -> pgs )		10987017	0					
ANR	10987215	Callee	gs_currentcolorspace_inline		10987017	0					
ANR	10987216	Identifier	gs_currentcolorspace_inline		10987017	0					
ANR	10987217	ArgumentList	i_ctx_p -> pgs		10987017	1					
ANR	10987218	Argument	i_ctx_p -> pgs		10987017	0					
ANR	10987219	PtrMemberAccess	i_ctx_p -> pgs		10987017	0					
ANR	10987220	Identifier	i_ctx_p		10987017	0					
ANR	10987221	Identifier	pgs		10987017	1					
ANR	10987222	CompoundStatement		51:83:1675:1675	10987017	1					
ANR	10987223	IfStatement	if ( ! isCIE )		10987017	0					
ANR	10987224	Condition	! isCIE	435:21:15507:15512	10987017	0	True				
ANR	10987225	UnaryOperationExpression	! isCIE		10987017	0					
ANR	10987226	UnaryOperator	!		10987017	0					
ANR	10987227	Identifier	isCIE		10987017	1					
ANR	10987228	ReturnStatement	return 0 ;	435:30:15516:15524	10987017	1	True				
ANR	10987229	PrimaryExpression	0		10987017	0					
ANR	10987230	ElseStatement	else		10987017	0					
ANR	10987231	CompoundStatement		53:19:1778:1778	10987017	0					
ANR	10987232	IfStatement	if ( isCIE )		10987017	0					
ANR	10987233	Condition	isCIE	437:21:15610:15614	10987017	0	True				
ANR	10987234	Identifier	isCIE		10987017	0					
ANR	10987235	ReturnStatement	return 0 ;	437:29:15618:15626	10987017	1	True				
ANR	10987236	PrimaryExpression	0		10987017	0					
ANR	10987237	IfStatement	if ( ! oldcspace -> alternateproc )		10987017	8					
ANR	10987238	Condition	! oldcspace -> alternateproc	444:12:15817:15841	10987017	0	True				
ANR	10987239	UnaryOperationExpression	! oldcspace -> alternateproc		10987017	0					
ANR	10987240	UnaryOperator	!		10987017	0					
ANR	10987241	PtrMemberAccess	oldcspace -> alternateproc		10987017	1					
ANR	10987242	Identifier	oldcspace		10987017	0					
ANR	10987243	Identifier	alternateproc		10987017	1					
ANR	10987244	BreakStatement	break ;	445:12:15856:15861	10987017	1	True				
ANR	10987245	ExpressionStatement	"code = oldcspace -> alternateproc ( i_ctx_p , poldspace , & poldspace , & CIESubst )"	450:8:16001:16075	10987017	9	True				
ANR	10987246	AssignmentExpression	"code = oldcspace -> alternateproc ( i_ctx_p , poldspace , & poldspace , & CIESubst )"		10987017	0		=			
ANR	10987247	Identifier	code		10987017	0					
ANR	10987248	CallExpression	"oldcspace -> alternateproc ( i_ctx_p , poldspace , & poldspace , & CIESubst )"		10987017	1					
ANR	10987249	Callee	oldcspace -> alternateproc		10987017	0					
ANR	10987250	PtrMemberAccess	oldcspace -> alternateproc		10987017	0					
ANR	10987251	Identifier	oldcspace		10987017	0					
ANR	10987252	Identifier	alternateproc		10987017	1					
ANR	10987253	ArgumentList	i_ctx_p		10987017	1					
ANR	10987254	Argument	i_ctx_p		10987017	0					
ANR	10987255	Identifier	i_ctx_p		10987017	0					
ANR	10987256	Argument	poldspace		10987017	1					
ANR	10987257	Identifier	poldspace		10987017	0					
ANR	10987258	Argument	& poldspace		10987017	2					
ANR	10987259	UnaryOperationExpression	& poldspace		10987017	0					
ANR	10987260	UnaryOperator	&		10987017	0					
ANR	10987261	Identifier	poldspace		10987017	1					
ANR	10987262	Argument	& CIESubst		10987017	3					
ANR	10987263	UnaryOperationExpression	& CIESubst		10987017	0					
ANR	10987264	UnaryOperator	&		10987017	0					
ANR	10987265	Identifier	CIESubst		10987017	1					
ANR	10987266	IfStatement	if ( code < 0 )		10987017	10					
ANR	10987267	Condition	code < 0	451:12:16089:16096	10987017	0	True				
ANR	10987268	RelationalExpression	code < 0		10987017	0		<			
ANR	10987269	Identifier	code		10987017	0					
ANR	10987270	PrimaryExpression	0		10987017	1					
ANR	10987271	ReturnStatement	return 0 ;	452:12:16111:16119	10987017	1	True				
ANR	10987272	PrimaryExpression	0		10987017	0					
ANR	10987273	ExpressionStatement	"code = newcspace -> alternateproc ( i_ctx_p , pnewspace , & pnewspace , & CIESubst )"	454:8:16130:16204	10987017	11	True				
ANR	10987274	AssignmentExpression	"code = newcspace -> alternateproc ( i_ctx_p , pnewspace , & pnewspace , & CIESubst )"		10987017	0		=			
ANR	10987275	Identifier	code		10987017	0					
ANR	10987276	CallExpression	"newcspace -> alternateproc ( i_ctx_p , pnewspace , & pnewspace , & CIESubst )"		10987017	1					
ANR	10987277	Callee	newcspace -> alternateproc		10987017	0					
ANR	10987278	PtrMemberAccess	newcspace -> alternateproc		10987017	0					
ANR	10987279	Identifier	newcspace		10987017	0					
ANR	10987280	Identifier	alternateproc		10987017	1					
ANR	10987281	ArgumentList	i_ctx_p		10987017	1					
ANR	10987282	Argument	i_ctx_p		10987017	0					
ANR	10987283	Identifier	i_ctx_p		10987017	0					
ANR	10987284	Argument	pnewspace		10987017	1					
ANR	10987285	Identifier	pnewspace		10987017	0					
ANR	10987286	Argument	& pnewspace		10987017	2					
ANR	10987287	UnaryOperationExpression	& pnewspace		10987017	0					
ANR	10987288	UnaryOperator	&		10987017	0					
ANR	10987289	Identifier	pnewspace		10987017	1					
ANR	10987290	Argument	& CIESubst		10987017	3					
ANR	10987291	UnaryOperationExpression	& CIESubst		10987017	0					
ANR	10987292	UnaryOperator	&		10987017	0					
ANR	10987293	Identifier	CIESubst		10987017	1					
ANR	10987294	IfStatement	if ( code < 0 )		10987017	12					
ANR	10987295	Condition	code < 0	455:12:16218:16225	10987017	0	True				
ANR	10987296	RelationalExpression	code < 0		10987017	0		<			
ANR	10987297	Identifier	code		10987017	0					
ANR	10987298	PrimaryExpression	0		10987017	1					
ANR	10987299	ReturnStatement	return 0 ;	456:12:16240:16248	10987017	1	True				
ANR	10987300	PrimaryExpression	0		10987017	0					
ANR	10987301	Condition	1	458:10:16266:16266	10987017	1	True				
ANR	10987302	PrimaryExpression	1		10987017	0					
ANR	10987303	ReturnStatement	return 1 ;	460:4:16275:16283	10987017	8	True				
ANR	10987304	PrimaryExpression	1		10987017	0					
ANR	10987305	ReturnType	static int		10987017	1					
ANR	10987306	Identifier	is_same_colorspace		10987017	2					
ANR	10987307	ParameterList	"i_ctx_t * i_ctx_p , ref * space1 , ref * space2 , bool isCIE"		10987017	3					
ANR	10987308	Parameter	i_ctx_t * i_ctx_p	383:30:13751:13767	10987017	0	True				
ANR	10987309	ParameterType	i_ctx_t *		10987017	0					
ANR	10987310	Identifier	i_ctx_p		10987017	1					
ANR	10987311	Parameter	ref * space1	383:49:13770:13780	10987017	1	True				
ANR	10987312	ParameterType	ref *		10987017	0					
ANR	10987313	Identifier	space1		10987017	1					
ANR	10987314	Parameter	ref * space2	383:62:13783:13793	10987017	2	True				
ANR	10987315	ParameterType	ref *		10987017	0					
ANR	10987316	Identifier	space2		10987017	1					
ANR	10987317	Parameter	bool isCIE	383:75:13796:13805	10987017	3	True				
ANR	10987318	ParameterType	bool		10987017	0					
ANR	10987319	Identifier	isCIE		10987017	1					
ANR	10987320	CFGEntryNode	ENTRY		10987017		True				
ANR	10987321	CFGExitNode	EXIT		10987017		True				
ANR	10987322	Symbol	code		10987017						
ANR	10987323	Symbol	& oldcspace		10987017						
ANR	10987324	Symbol	& newspace		10987017						
ANR	10987325	Symbol	gs_color_space_is_CIE		10987017						
ANR	10987326	Symbol	i_ctx_p -> pgs		10987017						
ANR	10987327	Symbol	newcspace -> alternateproc		10987017						
ANR	10987328	Symbol	isCIE		10987017						
ANR	10987329	Symbol	oldcspace -> name		10987017						
ANR	10987330	Symbol	gs_currentcolorspace_inline		10987017						
ANR	10987331	Symbol	newcspace -> name		10987017						
ANR	10987332	Symbol	poldspace		10987017						
ANR	10987333	Symbol	oldspace		10987017						
ANR	10987334	Symbol	oldcspace -> compareproc		10987017						
ANR	10987335	Symbol	oldcspace -> alternateproc		10987017						
ANR	10987336	Symbol	newspace		10987017						
ANR	10987337	Symbol	* i_ctx_p		10987017						
ANR	10987338	Symbol	oldspace . tas . type_attrs		10987017						
ANR	10987339	Symbol	& oldspace		10987017						
ANR	10987340	Symbol	* newcspace		10987017						
ANR	10987341	Symbol	& pnewspace		10987017						
ANR	10987342	Symbol	CIESubst		10987017						
ANR	10987343	Symbol	r_type		10987017						
ANR	10987344	Symbol	newcspace		10987017						
ANR	10987345	Symbol	strcmp		10987017						
ANR	10987346	Symbol	get_space_object		10987017						
ANR	10987347	Symbol	& CIESubst		10987017						
ANR	10987348	Symbol	oldspace . tas		10987017						
ANR	10987349	Symbol	name_is_device_color		10987017						
ANR	10987350	Symbol	* oldcspace		10987017						
ANR	10987351	Symbol	& newcspace		10987017						
ANR	10987352	Symbol	i_ctx_p		10987017						
ANR	10987353	Symbol	pnewspace		10987017						
ANR	10987354	Symbol	& poldspace		10987017						
ANR	10987355	Symbol	oldcspace		10987017						
ANR	10987356	Symbol	space2		10987017						
ANR	10987357	Symbol	space1		10987017						
ANR	10987358	Function	zsetcolorspace	471:0:16518:18419							
ANR	10987359	FunctionDef	zsetcolorspace (i_ctx_t * i_ctx_p)		10987358	0					
ANR	10987360	CompoundStatement		473:0:16563:18419	10987358	0					
ANR	10987361	IdentifierDeclStatement	os_ptr op = osp ;	474:4:16569:16585	10987358	0	True				
ANR	10987362	IdentifierDecl	op = osp		10987358	0					
ANR	10987363	IdentifierDeclType	os_ptr		10987358	0					
ANR	10987364	Identifier	op		10987358	1					
ANR	10987365	AssignmentExpression	op = osp		10987358	2		=			
ANR	10987366	Identifier	osp		10987358	0					
ANR	10987367	Identifier	osp		10987358	1					
ANR	10987368	IdentifierDeclStatement	es_ptr ep ;	475:4:16591:16600	10987358	1	True				
ANR	10987369	IdentifierDecl	ep		10987358	0					
ANR	10987370	IdentifierDeclType	es_ptr		10987358	0					
ANR	10987371	Identifier	ep		10987358	1					
ANR	10987372	IdentifierDeclStatement	"int code , depth ;"	476:4:16606:16621	10987358	2	True				
ANR	10987373	IdentifierDecl	code		10987358	0					
ANR	10987374	IdentifierDeclType	int		10987358	0					
ANR	10987375	Identifier	code		10987358	1					
ANR	10987376	IdentifierDecl	depth		10987358	1					
ANR	10987377	IdentifierDeclType	int		10987358	0					
ANR	10987378	Identifier	depth		10987358	1					
ANR	10987379	IdentifierDeclStatement	bool is_CIE ;	477:4:16627:16638	10987358	3	True				
ANR	10987380	IdentifierDecl	is_CIE		10987358	0					
ANR	10987381	IdentifierDeclType	bool		10987358	0					
ANR	10987382	Identifier	is_CIE		10987358	1					
ANR	10987383	ExpressionStatement	check_op ( 1 )	480:4:16687:16698	10987358	4	True				
ANR	10987384	CallExpression	check_op ( 1 )		10987358	0					
ANR	10987385	Callee	check_op		10987358	0					
ANR	10987386	Identifier	check_op		10987358	0					
ANR	10987387	ArgumentList	1		10987358	1					
ANR	10987388	Argument	1		10987358	0					
ANR	10987389	PrimaryExpression	1		10987358	0					
ANR	10987390	IfStatement	"if ( ! r_has_type ( op , t_name ) )"		10987358	5					
ANR	10987391	Condition	"! r_has_type ( op , t_name )"	482:8:16767:16789	10987358	0	True				
ANR	10987392	UnaryOperationExpression	"! r_has_type ( op , t_name )"		10987358	0					
ANR	10987393	UnaryOperator	!		10987358	0					
ANR	10987394	CallExpression	"r_has_type ( op , t_name )"		10987358	1					
ANR	10987395	Callee	r_has_type		10987358	0					
ANR	10987396	Identifier	r_has_type		10987358	0					
ANR	10987397	ArgumentList	op		10987358	1					
ANR	10987398	Argument	op		10987358	0					
ANR	10987399	Identifier	op		10987358	0					
ANR	10987400	Argument	t_name		10987358	1					
ANR	10987401	Identifier	t_name		10987358	0					
ANR	10987402	IfStatement	if ( ! r_is_array ( op ) )		10987358	1					
ANR	10987403	Condition	! r_is_array ( op )	483:12:16804:16818	10987358	0	True				
ANR	10987404	UnaryOperationExpression	! r_is_array ( op )		10987358	0					
ANR	10987405	UnaryOperator	!		10987358	0					
ANR	10987406	CallExpression	r_is_array ( op )		10987358	1					
ANR	10987407	Callee	r_is_array		10987358	0					
ANR	10987408	Identifier	r_is_array		10987358	0					
ANR	10987409	ArgumentList	op		10987358	1					
ANR	10987410	Argument	op		10987358	0					
ANR	10987411	Identifier	op		10987358	0					
ANR	10987412	ExpressionStatement	return_error ( gs_error_typecheck )	484:12:16833:16865	10987358	1	True				
ANR	10987413	CallExpression	return_error ( gs_error_typecheck )		10987358	0					
ANR	10987414	Callee	return_error		10987358	0					
ANR	10987415	Identifier	return_error		10987358	0					
ANR	10987416	ArgumentList	gs_error_typecheck		10987358	1					
ANR	10987417	Argument	gs_error_typecheck		10987358	0					
ANR	10987418	Identifier	gs_error_typecheck		10987358	0					
ANR	10987419	ExpressionStatement	"code = validate_spaces ( i_ctx_p , op , & depth )"	486:4:16872:16915	10987358	6	True				
ANR	10987420	AssignmentExpression	"code = validate_spaces ( i_ctx_p , op , & depth )"		10987358	0		=			
ANR	10987421	Identifier	code		10987358	0					
ANR	10987422	CallExpression	"validate_spaces ( i_ctx_p , op , & depth )"		10987358	1					
ANR	10987423	Callee	validate_spaces		10987358	0					
ANR	10987424	Identifier	validate_spaces		10987358	0					
ANR	10987425	ArgumentList	i_ctx_p		10987358	1					
ANR	10987426	Argument	i_ctx_p		10987358	0					
ANR	10987427	Identifier	i_ctx_p		10987358	0					
ANR	10987428	Argument	op		10987358	1					
ANR	10987429	Identifier	op		10987358	0					
ANR	10987430	Argument	& depth		10987358	2					
ANR	10987431	UnaryOperationExpression	& depth		10987358	0					
ANR	10987432	UnaryOperator	&		10987358	0					
ANR	10987433	Identifier	depth		10987358	1					
ANR	10987434	IfStatement	if ( code < 0 )		10987358	7					
ANR	10987435	Condition	code < 0	487:8:16925:16932	10987358	0	True				
ANR	10987436	RelationalExpression	code < 0		10987358	0		<			
ANR	10987437	Identifier	code		10987358	0					
ANR	10987438	PrimaryExpression	0		10987358	1					
ANR	10987439	ReturnStatement	return code ;	488:8:16943:16954	10987358	1	True				
ANR	10987440	Identifier	code		10987358	0					
ANR	10987441	ExpressionStatement	is_CIE = istate -> use_cie_color . value . boolval	490:4:16961:17005	10987358	8	True				
ANR	10987442	AssignmentExpression	is_CIE = istate -> use_cie_color . value . boolval		10987358	0		=			
ANR	10987443	Identifier	is_CIE		10987358	0					
ANR	10987444	MemberAccess	istate -> use_cie_color . value . boolval		10987358	1					
ANR	10987445	MemberAccess	istate -> use_cie_color . value		10987358	0					
ANR	10987446	PtrMemberAccess	istate -> use_cie_color		10987358	0					
ANR	10987447	Identifier	istate		10987358	0					
ANR	10987448	Identifier	use_cie_color		10987358	1					
ANR	10987449	Identifier	value		10987358	1					
ANR	10987450	Identifier	boolval		10987358	1					
ANR	10987451	IfStatement	"if ( is_same_colorspace ( i_ctx_p , op , & istate -> colorspace [ 0 ] . array , is_CIE ) )"		10987358	9					
ANR	10987452	Condition	"is_same_colorspace ( i_ctx_p , op , & istate -> colorspace [ 0 ] . array , is_CIE )"	493:8:17067:17135	10987358	0	True				
ANR	10987453	CallExpression	"is_same_colorspace ( i_ctx_p , op , & istate -> colorspace [ 0 ] . array , is_CIE )"		10987358	0					
ANR	10987454	Callee	is_same_colorspace		10987358	0					
ANR	10987455	Identifier	is_same_colorspace		10987358	0					
ANR	10987456	ArgumentList	i_ctx_p		10987358	1					
ANR	10987457	Argument	i_ctx_p		10987358	0					
ANR	10987458	Identifier	i_ctx_p		10987358	0					
ANR	10987459	Argument	op		10987358	1					
ANR	10987460	Identifier	op		10987358	0					
ANR	10987461	Argument	& istate -> colorspace [ 0 ] . array		10987358	2					
ANR	10987462	UnaryOperationExpression	& istate -> colorspace [ 0 ] . array		10987358	0					
ANR	10987463	UnaryOperator	&		10987358	0					
ANR	10987464	MemberAccess	istate -> colorspace [ 0 ] . array		10987358	1					
ANR	10987465	ArrayIndexing	istate -> colorspace [ 0 ]		10987358	0					
ANR	10987466	PtrMemberAccess	istate -> colorspace		10987358	0					
ANR	10987467	Identifier	istate		10987358	0					
ANR	10987468	Identifier	colorspace		10987358	1					
ANR	10987469	PrimaryExpression	0		10987358	1					
ANR	10987470	Identifier	array		10987358	1					
ANR	10987471	Argument	is_CIE		10987358	3					
ANR	10987472	Identifier	is_CIE		10987358	0					
ANR	10987473	CompoundStatement		22:8:584:609	10987358	1					
ANR	10987474	IdentifierDeclStatement	PS_colour_space_t * cspace ;	494:8:17148:17173	10987358	0	True				
ANR	10987475	IdentifierDecl	* cspace		10987358	0					
ANR	10987476	IdentifierDeclType	PS_colour_space_t *		10987358	0					
ANR	10987477	Identifier	cspace		10987358	1					
ANR	10987478	ExpressionStatement	"code = get_space_object ( i_ctx_p , & istate -> colorspace [ 0 ] . array , & cspace )"	499:8:17300:17371	10987358	1	True				
ANR	10987479	AssignmentExpression	"code = get_space_object ( i_ctx_p , & istate -> colorspace [ 0 ] . array , & cspace )"		10987358	0		=			
ANR	10987480	Identifier	code		10987358	0					
ANR	10987481	CallExpression	"get_space_object ( i_ctx_p , & istate -> colorspace [ 0 ] . array , & cspace )"		10987358	1					
ANR	10987482	Callee	get_space_object		10987358	0					
ANR	10987483	Identifier	get_space_object		10987358	0					
ANR	10987484	ArgumentList	i_ctx_p		10987358	1					
ANR	10987485	Argument	i_ctx_p		10987358	0					
ANR	10987486	Identifier	i_ctx_p		10987358	0					
ANR	10987487	Argument	& istate -> colorspace [ 0 ] . array		10987358	1					
ANR	10987488	UnaryOperationExpression	& istate -> colorspace [ 0 ] . array		10987358	0					
ANR	10987489	UnaryOperator	&		10987358	0					
ANR	10987490	MemberAccess	istate -> colorspace [ 0 ] . array		10987358	1					
ANR	10987491	ArrayIndexing	istate -> colorspace [ 0 ]		10987358	0					
ANR	10987492	PtrMemberAccess	istate -> colorspace		10987358	0					
ANR	10987493	Identifier	istate		10987358	0					
ANR	10987494	Identifier	colorspace		10987358	1					
ANR	10987495	PrimaryExpression	0		10987358	1					
ANR	10987496	Identifier	array		10987358	1					
ANR	10987497	Argument	& cspace		10987358	2					
ANR	10987498	UnaryOperationExpression	& cspace		10987358	0					
ANR	10987499	UnaryOperator	&		10987358	0					
ANR	10987500	Identifier	cspace		10987358	1					
ANR	10987501	IfStatement	if ( code < 0 )		10987358	2					
ANR	10987502	Condition	code < 0	500:12:17385:17392	10987358	0	True				
ANR	10987503	RelationalExpression	code < 0		10987358	0		<			
ANR	10987504	Identifier	code		10987358	0					
ANR	10987505	PrimaryExpression	0		10987358	1					
ANR	10987506	ReturnStatement	return 0 ;	501:12:17407:17415	10987358	1	True				
ANR	10987507	PrimaryExpression	0		10987358	0					
ANR	10987508	IfStatement	if ( cspace -> initialcolorproc )		10987358	3					
ANR	10987509	Condition	cspace -> initialcolorproc	502:12:17429:17452	10987358	0	True				
ANR	10987510	PtrMemberAccess	cspace -> initialcolorproc		10987358	0					
ANR	10987511	Identifier	cspace		10987358	0					
ANR	10987512	Identifier	initialcolorproc		10987358	1					
ANR	10987513	CompoundStatement		30:38:891:891	10987358	1					
ANR	10987514	ExpressionStatement	"cspace -> initialcolorproc ( i_ctx_p , & istate -> colorspace [ 0 ] . array )"	503:12:17469:17532	10987358	0	True				
ANR	10987515	CallExpression	"cspace -> initialcolorproc ( i_ctx_p , & istate -> colorspace [ 0 ] . array )"		10987358	0					
ANR	10987516	Callee	cspace -> initialcolorproc		10987358	0					
ANR	10987517	PtrMemberAccess	cspace -> initialcolorproc		10987358	0					
ANR	10987518	Identifier	cspace		10987358	0					
ANR	10987519	Identifier	initialcolorproc		10987358	1					
ANR	10987520	ArgumentList	i_ctx_p		10987358	1					
ANR	10987521	Argument	i_ctx_p		10987358	0					
ANR	10987522	Identifier	i_ctx_p		10987358	0					
ANR	10987523	Argument	& istate -> colorspace [ 0 ] . array		10987358	1					
ANR	10987524	UnaryOperationExpression	& istate -> colorspace [ 0 ] . array		10987358	0					
ANR	10987525	UnaryOperator	&		10987358	0					
ANR	10987526	MemberAccess	istate -> colorspace [ 0 ] . array		10987358	1					
ANR	10987527	ArrayIndexing	istate -> colorspace [ 0 ]		10987358	0					
ANR	10987528	PtrMemberAccess	istate -> colorspace		10987358	0					
ANR	10987529	Identifier	istate		10987358	0					
ANR	10987530	Identifier	colorspace		10987358	1					
ANR	10987531	PrimaryExpression	0		10987358	1					
ANR	10987532	Identifier	array		10987358	1					
ANR	10987533	ExpressionStatement	pop ( 1 )	506:8:17594:17600	10987358	4	True				
ANR	10987534	CallExpression	pop ( 1 )		10987358	0					
ANR	10987535	Callee	pop		10987358	0					
ANR	10987536	Identifier	pop		10987358	0					
ANR	10987537	ArgumentList	1		10987358	1					
ANR	10987538	Argument	1		10987358	0					
ANR	10987539	PrimaryExpression	1		10987358	0					
ANR	10987540	ReturnStatement	return 0 ;	507:8:17610:17618	10987358	5	True				
ANR	10987541	PrimaryExpression	0		10987358	0					
ANR	10987542	ExpressionStatement	check_estack ( 5 )	511:4:17753:17768	10987358	10	True				
ANR	10987543	CallExpression	check_estack ( 5 )		10987358	0					
ANR	10987544	Callee	check_estack		10987358	0					
ANR	10987545	Identifier	check_estack		10987358	0					
ANR	10987546	ArgumentList	5		10987358	1					
ANR	10987547	Argument	5		10987358	0					
ANR	10987548	PrimaryExpression	5		10987358	0					
ANR	10987549	ExpressionStatement	ep = esp += 1	513:4:17847:17860	10987358	11	True				
ANR	10987550	AssignmentExpression	ep = esp += 1		10987358	0		=			
ANR	10987551	Identifier	ep		10987358	0					
ANR	10987552	AssignmentExpression	esp += 1		10987358	1		+=			
ANR	10987553	Identifier	esp		10987358	0					
ANR	10987554	PrimaryExpression	1		10987358	1					
ANR	10987555	ExpressionStatement	"make_int ( ep , 0 )"	514:4:17866:17881	10987358	12	True				
ANR	10987556	CallExpression	"make_int ( ep , 0 )"		10987358	0					
ANR	10987557	Callee	make_int		10987358	0					
ANR	10987558	Identifier	make_int		10987358	0					
ANR	10987559	ArgumentList	ep		10987358	1					
ANR	10987560	Argument	ep		10987358	0					
ANR	10987561	Identifier	ep		10987358	0					
ANR	10987562	Argument	0		10987358	1					
ANR	10987563	PrimaryExpression	0		10987358	0					
ANR	10987564	ExpressionStatement	ep = esp += 1	516:4:17959:17972	10987358	13	True				
ANR	10987565	AssignmentExpression	ep = esp += 1		10987358	0		=			
ANR	10987566	Identifier	ep		10987358	0					
ANR	10987567	AssignmentExpression	esp += 1		10987358	1		+=			
ANR	10987568	Identifier	esp		10987358	0					
ANR	10987569	PrimaryExpression	1		10987358	1					
ANR	10987570	ExpressionStatement	"make_int ( ep , depth )"	517:4:17978:17997	10987358	14	True				
ANR	10987571	CallExpression	"make_int ( ep , depth )"		10987358	0					
ANR	10987572	Callee	make_int		10987358	0					
ANR	10987573	Identifier	make_int		10987358	0					
ANR	10987574	ArgumentList	ep		10987358	1					
ANR	10987575	Argument	ep		10987358	0					
ANR	10987576	Identifier	ep		10987358	0					
ANR	10987577	Argument	depth		10987358	1					
ANR	10987578	Identifier	depth		10987358	0					
ANR	10987579	ExpressionStatement	ep = esp += 1	519:4:18059:18072	10987358	15	True				
ANR	10987580	AssignmentExpression	ep = esp += 1		10987358	0		=			
ANR	10987581	Identifier	ep		10987358	0					
ANR	10987582	AssignmentExpression	esp += 1		10987358	1		+=			
ANR	10987583	Identifier	esp		10987358	0					
ANR	10987584	PrimaryExpression	1		10987358	1					
ANR	10987585	ExpressionStatement	"make_int ( ep , 0 )"	520:4:18078:18093	10987358	16	True				
ANR	10987586	CallExpression	"make_int ( ep , 0 )"		10987358	0					
ANR	10987587	Callee	make_int		10987358	0					
ANR	10987588	Identifier	make_int		10987358	0					
ANR	10987589	ArgumentList	ep		10987358	1					
ANR	10987590	Argument	ep		10987358	0					
ANR	10987591	Identifier	ep		10987358	0					
ANR	10987592	Argument	0		10987358	1					
ANR	10987593	PrimaryExpression	0		10987358	0					
ANR	10987594	ExpressionStatement	ep = esp += 1	525:4:18272:18285	10987358	17	True				
ANR	10987595	AssignmentExpression	ep = esp += 1		10987358	0		=			
ANR	10987596	Identifier	ep		10987358	0					
ANR	10987597	AssignmentExpression	esp += 1		10987358	1		+=			
ANR	10987598	Identifier	esp		10987358	0					
ANR	10987599	PrimaryExpression	1		10987358	1					
ANR	10987600	ExpressionStatement	* ep = * op	526:4:18291:18300	10987358	18	True				
ANR	10987601	AssignmentExpression	* ep = * op		10987358	0		=			
ANR	10987602	UnaryOperationExpression	* ep		10987358	0					
ANR	10987603	UnaryOperator	*		10987358	0					
ANR	10987604	Identifier	ep		10987358	1					
ANR	10987605	UnaryOperationExpression	* op		10987358	1					
ANR	10987606	UnaryOperator	*		10987358	0					
ANR	10987607	Identifier	op		10987358	1					
ANR	10987608	ExpressionStatement	push_op_estack ( setcolorspace_cont )	528:4:18357:18391	10987358	19	True				
ANR	10987609	CallExpression	push_op_estack ( setcolorspace_cont )		10987358	0					
ANR	10987610	Callee	push_op_estack		10987358	0					
ANR	10987611	Identifier	push_op_estack		10987358	0					
ANR	10987612	ArgumentList	setcolorspace_cont		10987358	1					
ANR	10987613	Argument	setcolorspace_cont		10987358	0					
ANR	10987614	Identifier	setcolorspace_cont		10987358	0					
ANR	10987615	ReturnStatement	return o_push_estack ;	529:4:18397:18417	10987358	20	True				
ANR	10987616	Identifier	o_push_estack		10987358	0					
ANR	10987617	ReturnType	static int		10987358	1					
ANR	10987618	Identifier	zsetcolorspace		10987358	2					
ANR	10987619	ParameterList	i_ctx_t * i_ctx_p		10987358	3					
ANR	10987620	Parameter	i_ctx_t * i_ctx_p	472:15:16544:16560	10987358	0	True				
ANR	10987621	ParameterType	i_ctx_t *		10987358	0					
ANR	10987622	Identifier	i_ctx_p		10987358	1					
ANR	10987623	CFGEntryNode	ENTRY		10987358		True				
ANR	10987624	CFGExitNode	EXIT		10987358		True				
ANR	10987625	Symbol	& istate -> colorspace [ 0 ] . array		10987358						
ANR	10987626	Symbol	code		10987358						
ANR	10987627	Symbol	esp		10987358						
ANR	10987628	Symbol	* op		10987358						
ANR	10987629	Symbol	* cspace		10987358						
ANR	10987630	Symbol	istate -> use_cie_color . value . boolval		10987358						
ANR	10987631	Symbol	osp		10987358						
ANR	10987632	Symbol	* istate		10987358						
ANR	10987633	Symbol	& cspace		10987358						
ANR	10987634	Symbol	r_has_type		10987358						
ANR	10987635	Symbol	gs_error_typecheck		10987358						
ANR	10987636	Symbol	t_name		10987358						
ANR	10987637	Symbol	setcolorspace_cont		10987358						
ANR	10987638	Symbol	istate -> colorspace		10987358						
ANR	10987639	Symbol	* istate -> colorspace		10987358						
ANR	10987640	Symbol	o_push_estack		10987358						
ANR	10987641	Symbol	op		10987358						
ANR	10987642	Symbol	validate_spaces		10987358						
ANR	10987643	Symbol	is_CIE		10987358						
ANR	10987644	Symbol	istate -> use_cie_color . value		10987358						
ANR	10987645	Symbol	ep		10987358						
ANR	10987646	Symbol	get_space_object		10987358						
ANR	10987647	Symbol	cspace -> initialcolorproc		10987358						
ANR	10987648	Symbol	& depth		10987358						
ANR	10987649	Symbol	is_same_colorspace		10987358						
ANR	10987650	Symbol	* ep		10987358						
ANR	10987651	Symbol	depth		10987358						
ANR	10987652	Symbol	istate -> use_cie_color		10987358						
ANR	10987653	Symbol	i_ctx_p		10987358						
ANR	10987654	Symbol	r_is_array		10987358						
ANR	10987655	Symbol	cspace		10987358						
ANR	10987656	Symbol	* * istate		10987358						
ANR	10987657	Symbol	istate		10987358						
ANR	10987658	Function	setcolorspace_nosubst	537:0:18613:19831							
ANR	10987659	FunctionDef	setcolorspace_nosubst (i_ctx_t * i_ctx_p)		10987658	0					
ANR	10987660	CompoundStatement		539:0:18665:19831	10987658	0					
ANR	10987661	IdentifierDeclStatement	os_ptr op = osp ;	540:4:18671:18687	10987658	0	True				
ANR	10987662	IdentifierDecl	op = osp		10987658	0					
ANR	10987663	IdentifierDeclType	os_ptr		10987658	0					
ANR	10987664	Identifier	op		10987658	1					
ANR	10987665	AssignmentExpression	op = osp		10987658	2		=			
ANR	10987666	Identifier	osp		10987658	0					
ANR	10987667	Identifier	osp		10987658	1					
ANR	10987668	IdentifierDeclStatement	es_ptr ep ;	541:4:18693:18702	10987658	1	True				
ANR	10987669	IdentifierDecl	ep		10987658	0					
ANR	10987670	IdentifierDeclType	es_ptr		10987658	0					
ANR	10987671	Identifier	ep		10987658	1					
ANR	10987672	IdentifierDeclStatement	"int code , depth ;"	542:4:18708:18723	10987658	2	True				
ANR	10987673	IdentifierDecl	code		10987658	0					
ANR	10987674	IdentifierDeclType	int		10987658	0					
ANR	10987675	Identifier	code		10987658	1					
ANR	10987676	IdentifierDecl	depth		10987658	1					
ANR	10987677	IdentifierDeclType	int		10987658	0					
ANR	10987678	Identifier	depth		10987658	1					
ANR	10987679	ExpressionStatement	check_op ( 1 )	545:4:18772:18783	10987658	3	True				
ANR	10987680	CallExpression	check_op ( 1 )		10987658	0					
ANR	10987681	Callee	check_op		10987658	0					
ANR	10987682	Identifier	check_op		10987658	0					
ANR	10987683	ArgumentList	1		10987658	1					
ANR	10987684	Argument	1		10987658	0					
ANR	10987685	PrimaryExpression	1		10987658	0					
ANR	10987686	IfStatement	"if ( ! r_has_type ( op , t_name ) )"		10987658	4					
ANR	10987687	Condition	"! r_has_type ( op , t_name )"	547:8:18852:18874	10987658	0	True				
ANR	10987688	UnaryOperationExpression	"! r_has_type ( op , t_name )"		10987658	0					
ANR	10987689	UnaryOperator	!		10987658	0					
ANR	10987690	CallExpression	"r_has_type ( op , t_name )"		10987658	1					
ANR	10987691	Callee	r_has_type		10987658	0					
ANR	10987692	Identifier	r_has_type		10987658	0					
ANR	10987693	ArgumentList	op		10987658	1					
ANR	10987694	Argument	op		10987658	0					
ANR	10987695	Identifier	op		10987658	0					
ANR	10987696	Argument	t_name		10987658	1					
ANR	10987697	Identifier	t_name		10987658	0					
ANR	10987698	IfStatement	if ( ! r_is_array ( op ) )		10987658	1					
ANR	10987699	Condition	! r_is_array ( op )	548:12:18889:18903	10987658	0	True				
ANR	10987700	UnaryOperationExpression	! r_is_array ( op )		10987658	0					
ANR	10987701	UnaryOperator	!		10987658	0					
ANR	10987702	CallExpression	r_is_array ( op )		10987658	1					
ANR	10987703	Callee	r_is_array		10987658	0					
ANR	10987704	Identifier	r_is_array		10987658	0					
ANR	10987705	ArgumentList	op		10987658	1					
ANR	10987706	Argument	op		10987658	0					
ANR	10987707	Identifier	op		10987658	0					
ANR	10987708	ExpressionStatement	return_error ( gs_error_typecheck )	549:12:18918:18950	10987658	1	True				
ANR	10987709	CallExpression	return_error ( gs_error_typecheck )		10987658	0					
ANR	10987710	Callee	return_error		10987658	0					
ANR	10987711	Identifier	return_error		10987658	0					
ANR	10987712	ArgumentList	gs_error_typecheck		10987658	1					
ANR	10987713	Argument	gs_error_typecheck		10987658	0					
ANR	10987714	Identifier	gs_error_typecheck		10987658	0					
ANR	10987715	ExpressionStatement	"code = validate_spaces ( i_ctx_p , op , & depth )"	551:4:18957:19000	10987658	5	True				
ANR	10987716	AssignmentExpression	"code = validate_spaces ( i_ctx_p , op , & depth )"		10987658	0		=			
ANR	10987717	Identifier	code		10987658	0					
ANR	10987718	CallExpression	"validate_spaces ( i_ctx_p , op , & depth )"		10987658	1					
ANR	10987719	Callee	validate_spaces		10987658	0					
ANR	10987720	Identifier	validate_spaces		10987658	0					
ANR	10987721	ArgumentList	i_ctx_p		10987658	1					
ANR	10987722	Argument	i_ctx_p		10987658	0					
ANR	10987723	Identifier	i_ctx_p		10987658	0					
ANR	10987724	Argument	op		10987658	1					
ANR	10987725	Identifier	op		10987658	0					
ANR	10987726	Argument	& depth		10987658	2					
ANR	10987727	UnaryOperationExpression	& depth		10987658	0					
ANR	10987728	UnaryOperator	&		10987658	0					
ANR	10987729	Identifier	depth		10987658	1					
ANR	10987730	IfStatement	if ( code < 0 )		10987658	6					
ANR	10987731	Condition	code < 0	552:8:19010:19017	10987658	0	True				
ANR	10987732	RelationalExpression	code < 0		10987658	0		<			
ANR	10987733	Identifier	code		10987658	0					
ANR	10987734	PrimaryExpression	0		10987658	1					
ANR	10987735	ReturnStatement	return code ;	553:8:19028:19039	10987658	1	True				
ANR	10987736	Identifier	code		10987658	0					
ANR	10987737	ExpressionStatement	check_estack ( 5 )	557:4:19169:19184	10987658	7	True				
ANR	10987738	CallExpression	check_estack ( 5 )		10987658	0					
ANR	10987739	Callee	check_estack		10987658	0					
ANR	10987740	Identifier	check_estack		10987658	0					
ANR	10987741	ArgumentList	5		10987658	1					
ANR	10987742	Argument	5		10987658	0					
ANR	10987743	PrimaryExpression	5		10987658	0					
ANR	10987744	ExpressionStatement	ep = esp += 1	559:4:19259:19272	10987658	8	True				
ANR	10987745	AssignmentExpression	ep = esp += 1		10987658	0		=			
ANR	10987746	Identifier	ep		10987658	0					
ANR	10987747	AssignmentExpression	esp += 1		10987658	1		+=			
ANR	10987748	Identifier	esp		10987658	0					
ANR	10987749	PrimaryExpression	1		10987658	1					
ANR	10987750	ExpressionStatement	"make_int ( ep , 1 )"	560:4:19278:19293	10987658	9	True				
ANR	10987751	CallExpression	"make_int ( ep , 1 )"		10987658	0					
ANR	10987752	Callee	make_int		10987658	0					
ANR	10987753	Identifier	make_int		10987658	0					
ANR	10987754	ArgumentList	ep		10987658	1					
ANR	10987755	Argument	ep		10987658	0					
ANR	10987756	Identifier	ep		10987658	0					
ANR	10987757	Argument	1		10987658	1					
ANR	10987758	PrimaryExpression	1		10987658	0					
ANR	10987759	ExpressionStatement	ep = esp += 1	562:4:19371:19384	10987658	10	True				
ANR	10987760	AssignmentExpression	ep = esp += 1		10987658	0		=			
ANR	10987761	Identifier	ep		10987658	0					
ANR	10987762	AssignmentExpression	esp += 1		10987658	1		+=			
ANR	10987763	Identifier	esp		10987658	0					
ANR	10987764	PrimaryExpression	1		10987658	1					
ANR	10987765	ExpressionStatement	"make_int ( ep , depth )"	563:4:19390:19409	10987658	11	True				
ANR	10987766	CallExpression	"make_int ( ep , depth )"		10987658	0					
ANR	10987767	Callee	make_int		10987658	0					
ANR	10987768	Identifier	make_int		10987658	0					
ANR	10987769	ArgumentList	ep		10987658	1					
ANR	10987770	Argument	ep		10987658	0					
ANR	10987771	Identifier	ep		10987658	0					
ANR	10987772	Argument	depth		10987658	1					
ANR	10987773	Identifier	depth		10987658	0					
ANR	10987774	ExpressionStatement	ep = esp += 1	565:4:19471:19484	10987658	12	True				
ANR	10987775	AssignmentExpression	ep = esp += 1		10987658	0		=			
ANR	10987776	Identifier	ep		10987658	0					
ANR	10987777	AssignmentExpression	esp += 1		10987658	1		+=			
ANR	10987778	Identifier	esp		10987658	0					
ANR	10987779	PrimaryExpression	1		10987658	1					
ANR	10987780	ExpressionStatement	"make_int ( ep , 0 )"	566:4:19490:19505	10987658	13	True				
ANR	10987781	CallExpression	"make_int ( ep , 0 )"		10987658	0					
ANR	10987782	Callee	make_int		10987658	0					
ANR	10987783	Identifier	make_int		10987658	0					
ANR	10987784	ArgumentList	ep		10987658	1					
ANR	10987785	Argument	ep		10987658	0					
ANR	10987786	Identifier	ep		10987658	0					
ANR	10987787	Argument	0		10987658	1					
ANR	10987788	PrimaryExpression	0		10987658	0					
ANR	10987789	ExpressionStatement	ep = esp += 1	571:4:19684:19697	10987658	14	True				
ANR	10987790	AssignmentExpression	ep = esp += 1		10987658	0		=			
ANR	10987791	Identifier	ep		10987658	0					
ANR	10987792	AssignmentExpression	esp += 1		10987658	1		+=			
ANR	10987793	Identifier	esp		10987658	0					
ANR	10987794	PrimaryExpression	1		10987658	1					
ANR	10987795	ExpressionStatement	* ep = * op	572:4:19703:19712	10987658	15	True				
ANR	10987796	AssignmentExpression	* ep = * op		10987658	0		=			
ANR	10987797	UnaryOperationExpression	* ep		10987658	0					
ANR	10987798	UnaryOperator	*		10987658	0					
ANR	10987799	Identifier	ep		10987658	1					
ANR	10987800	UnaryOperationExpression	* op		10987658	1					
ANR	10987801	UnaryOperator	*		10987658	0					
ANR	10987802	Identifier	op		10987658	1					
ANR	10987803	ExpressionStatement	push_op_estack ( setcolorspace_cont )	574:4:19769:19803	10987658	16	True				
ANR	10987804	CallExpression	push_op_estack ( setcolorspace_cont )		10987658	0					
ANR	10987805	Callee	push_op_estack		10987658	0					
ANR	10987806	Identifier	push_op_estack		10987658	0					
ANR	10987807	ArgumentList	setcolorspace_cont		10987658	1					
ANR	10987808	Argument	setcolorspace_cont		10987658	0					
ANR	10987809	Identifier	setcolorspace_cont		10987658	0					
ANR	10987810	ReturnStatement	return o_push_estack ;	575:4:19809:19829	10987658	17	True				
ANR	10987811	Identifier	o_push_estack		10987658	0					
ANR	10987812	ReturnType	static int		10987658	1					
ANR	10987813	Identifier	setcolorspace_nosubst		10987658	2					
ANR	10987814	ParameterList	i_ctx_t * i_ctx_p		10987658	3					
ANR	10987815	Parameter	i_ctx_t * i_ctx_p	538:22:18646:18662	10987658	0	True				
ANR	10987816	ParameterType	i_ctx_t *		10987658	0					
ANR	10987817	Identifier	i_ctx_p		10987658	1					
ANR	10987818	CFGEntryNode	ENTRY		10987658		True				
ANR	10987819	CFGExitNode	EXIT		10987658		True				
ANR	10987820	Symbol	op		10987658						
ANR	10987821	Symbol	validate_spaces		10987658						
ANR	10987822	Symbol	code		10987658						
ANR	10987823	Symbol	esp		10987658						
ANR	10987824	Symbol	* op		10987658						
ANR	10987825	Symbol	ep		10987658						
ANR	10987826	Symbol	osp		10987658						
ANR	10987827	Symbol	& depth		10987658						
ANR	10987828	Symbol	r_has_type		10987658						
ANR	10987829	Symbol	gs_error_typecheck		10987658						
ANR	10987830	Symbol	* ep		10987658						
ANR	10987831	Symbol	depth		10987658						
ANR	10987832	Symbol	i_ctx_p		10987658						
ANR	10987833	Symbol	t_name		10987658						
ANR	10987834	Symbol	setcolorspace_cont		10987658						
ANR	10987835	Symbol	r_is_array		10987658						
ANR	10987836	Symbol	o_push_estack		10987658						
ANR	10987837	Function	zincludecolorspace	583:0:19936:20238							
ANR	10987838	FunctionDef	zincludecolorspace (i_ctx_t * i_ctx_p)		10987837	0					
ANR	10987839	CompoundStatement		585:0:19985:20238	10987837	0					
ANR	10987840	IdentifierDeclStatement	os_ptr op = osp ;	586:4:19991:20007	10987837	0	True				
ANR	10987841	IdentifierDecl	op = osp		10987837	0					
ANR	10987842	IdentifierDeclType	os_ptr		10987837	0					
ANR	10987843	Identifier	op		10987837	1					
ANR	10987844	AssignmentExpression	op = osp		10987837	2		=			
ANR	10987845	Identifier	osp		10987837	0					
ANR	10987846	Identifier	osp		10987837	1					
ANR	10987847	IdentifierDeclStatement	ref nsref ;	587:4:20013:20022	10987837	1	True				
ANR	10987848	IdentifierDecl	nsref		10987837	0					
ANR	10987849	IdentifierDeclType	ref		10987837	0					
ANR	10987850	Identifier	nsref		10987837	1					
ANR	10987851	IdentifierDeclStatement	int code ;	588:4:20028:20036	10987837	2	True				
ANR	10987852	IdentifierDecl	code		10987837	0					
ANR	10987853	IdentifierDeclType	int		10987837	0					
ANR	10987854	Identifier	code		10987837	1					
ANR	10987855	ExpressionStatement	"check_type ( * op , t_name )"	590:4:20043:20066	10987837	3	True				
ANR	10987856	CallExpression	"check_type ( * op , t_name )"		10987837	0					
ANR	10987857	Callee	check_type		10987837	0					
ANR	10987858	Identifier	check_type		10987837	0					
ANR	10987859	ArgumentList	* op		10987837	1					
ANR	10987860	Argument	* op		10987837	0					
ANR	10987861	UnaryOperationExpression	* op		10987837	0					
ANR	10987862	UnaryOperator	*		10987837	0					
ANR	10987863	Identifier	op		10987837	1					
ANR	10987864	Argument	t_name		10987837	1					
ANR	10987865	Identifier	t_name		10987837	0					
ANR	10987866	ExpressionStatement	"name_string_ref ( imemory , op , & nsref )"	591:4:20072:20108	10987837	4	True				
ANR	10987867	CallExpression	"name_string_ref ( imemory , op , & nsref )"		10987837	0					
ANR	10987868	Callee	name_string_ref		10987837	0					
ANR	10987869	Identifier	name_string_ref		10987837	0					
ANR	10987870	ArgumentList	imemory		10987837	1					
ANR	10987871	Argument	imemory		10987837	0					
ANR	10987872	Identifier	imemory		10987837	0					
ANR	10987873	Argument	op		10987837	1					
ANR	10987874	Identifier	op		10987837	0					
ANR	10987875	Argument	& nsref		10987837	2					
ANR	10987876	UnaryOperationExpression	& nsref		10987837	0					
ANR	10987877	UnaryOperator	&		10987837	0					
ANR	10987878	Identifier	nsref		10987837	1					
ANR	10987879	ExpressionStatement	"code = gs_includecolorspace ( igs , nsref . value . const_bytes , r_size ( & nsref ) )"	592:4:20114:20188	10987837	5	True				
ANR	10987880	AssignmentExpression	"code = gs_includecolorspace ( igs , nsref . value . const_bytes , r_size ( & nsref ) )"		10987837	0		=			
ANR	10987881	Identifier	code		10987837	0					
ANR	10987882	CallExpression	"gs_includecolorspace ( igs , nsref . value . const_bytes , r_size ( & nsref ) )"		10987837	1					
ANR	10987883	Callee	gs_includecolorspace		10987837	0					
ANR	10987884	Identifier	gs_includecolorspace		10987837	0					
ANR	10987885	ArgumentList	igs		10987837	1					
ANR	10987886	Argument	igs		10987837	0					
ANR	10987887	Identifier	igs		10987837	0					
ANR	10987888	Argument	nsref . value . const_bytes		10987837	1					
ANR	10987889	MemberAccess	nsref . value . const_bytes		10987837	0					
ANR	10987890	MemberAccess	nsref . value		10987837	0					
ANR	10987891	Identifier	nsref		10987837	0					
ANR	10987892	Identifier	value		10987837	1					
ANR	10987893	Identifier	const_bytes		10987837	1					
ANR	10987894	Argument	r_size ( & nsref )		10987837	2					
ANR	10987895	CallExpression	r_size ( & nsref )		10987837	0					
ANR	10987896	Callee	r_size		10987837	0					
ANR	10987897	Identifier	r_size		10987837	0					
ANR	10987898	ArgumentList	& nsref		10987837	1					
ANR	10987899	Argument	& nsref		10987837	0					
ANR	10987900	UnaryOperationExpression	& nsref		10987837	0					
ANR	10987901	UnaryOperator	&		10987837	0					
ANR	10987902	Identifier	nsref		10987837	1					
ANR	10987903	IfStatement	if ( ! code )		10987837	6					
ANR	10987904	Condition	! code	593:8:20198:20202	10987837	0	True				
ANR	10987905	UnaryOperationExpression	! code		10987837	0					
ANR	10987906	UnaryOperator	!		10987837	0					
ANR	10987907	Identifier	code		10987837	1					
ANR	10987908	ExpressionStatement	pop ( 1 )	594:8:20213:20219	10987837	1	True				
ANR	10987909	CallExpression	pop ( 1 )		10987837	0					
ANR	10987910	Callee	pop		10987837	0					
ANR	10987911	Identifier	pop		10987837	0					
ANR	10987912	ArgumentList	1		10987837	1					
ANR	10987913	Argument	1		10987837	0					
ANR	10987914	PrimaryExpression	1		10987837	0					
ANR	10987915	ReturnStatement	return code ;	595:4:20225:20236	10987837	7	True				
ANR	10987916	Identifier	code		10987837	0					
ANR	10987917	ReturnType	static int		10987837	1					
ANR	10987918	Identifier	zincludecolorspace		10987837	2					
ANR	10987919	ParameterList	i_ctx_t * i_ctx_p		10987837	3					
ANR	10987920	Parameter	i_ctx_t * i_ctx_p	584:19:19966:19982	10987837	0	True				
ANR	10987921	ParameterType	i_ctx_t *		10987837	0					
ANR	10987922	Identifier	i_ctx_p		10987837	1					
ANR	10987923	CFGEntryNode	ENTRY		10987837		True				
ANR	10987924	CFGExitNode	EXIT		10987837		True				
ANR	10987925	Symbol	op		10987837						
ANR	10987926	Symbol	code		10987837						
ANR	10987927	Symbol	* op		10987837						
ANR	10987928	Symbol	nsref		10987837						
ANR	10987929	Symbol	osp		10987837						
ANR	10987930	Symbol	nsref . value . const_bytes		10987837						
ANR	10987931	Symbol	igs		10987837						
ANR	10987932	Symbol	i_ctx_p		10987837						
ANR	10987933	Symbol	t_name		10987837						
ANR	10987934	Symbol	nsref . value		10987837						
ANR	10987935	Symbol	r_size		10987837						
ANR	10987936	Symbol	imemory		10987837						
ANR	10987937	Symbol	gs_includecolorspace		10987837						
ANR	10987938	Symbol	& nsref		10987837						
ANR	10987939	Function	zcurrenttransfer	599:0:20277:20414							
ANR	10987940	FunctionDef	zcurrenttransfer (i_ctx_t * i_ctx_p)		10987939	0					
ANR	10987941	CompoundStatement		601:0:20323:20414	10987939	0					
ANR	10987942	IdentifierDeclStatement	os_ptr op = osp ;	602:4:20329:20345	10987939	0	True				
ANR	10987943	IdentifierDecl	op = osp		10987939	0					
ANR	10987944	IdentifierDeclType	os_ptr		10987939	0					
ANR	10987945	Identifier	op		10987939	1					
ANR	10987946	AssignmentExpression	op = osp		10987939	2		=			
ANR	10987947	Identifier	osp		10987939	0					
ANR	10987948	Identifier	osp		10987939	1					
ANR	10987949	ExpressionStatement	push ( 1 )	604:4:20352:20359	10987939	1	True				
ANR	10987950	CallExpression	push ( 1 )		10987939	0					
ANR	10987951	Callee	push		10987939	0					
ANR	10987952	Identifier	push		10987939	0					
ANR	10987953	ArgumentList	1		10987939	1					
ANR	10987954	Argument	1		10987939	0					
ANR	10987955	PrimaryExpression	1		10987939	0					
ANR	10987956	ExpressionStatement	* op = istate -> transfer_procs . gray	605:4:20365:20398	10987939	2	True				
ANR	10987957	AssignmentExpression	* op = istate -> transfer_procs . gray		10987939	0		=			
ANR	10987958	UnaryOperationExpression	* op		10987939	0					
ANR	10987959	UnaryOperator	*		10987939	0					
ANR	10987960	Identifier	op		10987939	1					
ANR	10987961	MemberAccess	istate -> transfer_procs . gray		10987939	1					
ANR	10987962	PtrMemberAccess	istate -> transfer_procs		10987939	0					
ANR	10987963	Identifier	istate		10987939	0					
ANR	10987964	Identifier	transfer_procs		10987939	1					
ANR	10987965	Identifier	gray		10987939	1					
ANR	10987966	ReturnStatement	return 0 ;	606:4:20404:20412	10987939	3	True				
ANR	10987967	PrimaryExpression	0		10987939	0					
ANR	10987968	ReturnType	static int		10987939	1					
ANR	10987969	Identifier	zcurrenttransfer		10987939	2					
ANR	10987970	ParameterList	i_ctx_t * i_ctx_p		10987939	3					
ANR	10987971	Parameter	i_ctx_t * i_ctx_p	600:17:20305:20320	10987939	0	True				
ANR	10987972	ParameterType	i_ctx_t *		10987939	0					
ANR	10987973	Identifier	i_ctx_p		10987939	1					
ANR	10987974	CFGEntryNode	ENTRY		10987939		True				
ANR	10987975	CFGExitNode	EXIT		10987939		True				
ANR	10987976	Symbol	op		10987939						
ANR	10987977	Symbol	istate -> transfer_procs . gray		10987939						
ANR	10987978	Symbol	* op		10987939						
ANR	10987979	Symbol	i_ctx_p		10987939						
ANR	10987980	Symbol	istate -> transfer_procs		10987939						
ANR	10987981	Symbol	osp		10987939						
ANR	10987982	Symbol	* istate		10987939						
ANR	10987983	Symbol	istate		10987939						
ANR	10987984	Function	zprocesscolors	615:0:20539:20704							
ANR	10987985	FunctionDef	zprocesscolors (i_ctx_t * i_ctx_p)		10987984	0					
ANR	10987986	CompoundStatement		617:0:20584:20704	10987984	0					
ANR	10987987	IdentifierDeclStatement	os_ptr op = osp ;	618:4:20590:20606	10987984	0	True				
ANR	10987988	IdentifierDecl	op = osp		10987984	0					
ANR	10987989	IdentifierDeclType	os_ptr		10987984	0					
ANR	10987990	Identifier	op		10987984	1					
ANR	10987991	AssignmentExpression	op = osp		10987984	2		=			
ANR	10987992	Identifier	osp		10987984	0					
ANR	10987993	Identifier	osp		10987984	1					
ANR	10987994	ExpressionStatement	push ( 1 )	620:4:20613:20620	10987984	1	True				
ANR	10987995	CallExpression	push ( 1 )		10987984	0					
ANR	10987996	Callee	push		10987984	0					
ANR	10987997	Identifier	push		10987984	0					
ANR	10987998	ArgumentList	1		10987984	1					
ANR	10987999	Argument	1		10987984	0					
ANR	10988000	PrimaryExpression	1		10987984	0					
ANR	10988001	ExpressionStatement	"make_int ( op , gs_currentdevice ( igs ) -> color_info . num_components )"	621:4:20626:20688	10987984	2	True				
ANR	10988002	CallExpression	"make_int ( op , gs_currentdevice ( igs ) -> color_info . num_components )"		10987984	0					
ANR	10988003	Callee	make_int		10987984	0					
ANR	10988004	Identifier	make_int		10987984	0					
ANR	10988005	ArgumentList	op		10987984	1					
ANR	10988006	Argument	op		10987984	0					
ANR	10988007	Identifier	op		10987984	0					
ANR	10988008	Argument	gs_currentdevice ( igs ) -> color_info . num_components		10987984	1					
ANR	10988009	MemberAccess	gs_currentdevice ( igs ) -> color_info . num_components		10987984	0					
ANR	10988010	PtrMemberAccess	gs_currentdevice ( igs ) -> color_info		10987984	0					
ANR	10988011	CallExpression	gs_currentdevice ( igs )		10987984	0					
ANR	10988012	Callee	gs_currentdevice		10987984	0					
ANR	10988013	Identifier	gs_currentdevice		10987984	0					
ANR	10988014	ArgumentList	igs		10987984	1					
ANR	10988015	Argument	igs		10987984	0					
ANR	10988016	Identifier	igs		10987984	0					
ANR	10988017	Identifier	color_info		10987984	1					
ANR	10988018	Identifier	num_components		10987984	1					
ANR	10988019	ReturnStatement	return 0 ;	622:4:20694:20702	10987984	3	True				
ANR	10988020	PrimaryExpression	0		10987984	0					
ANR	10988021	ReturnType	static int		10987984	1					
ANR	10988022	Identifier	zprocesscolors		10987984	2					
ANR	10988023	ParameterList	i_ctx_t * i_ctx_p		10987984	3					
ANR	10988024	Parameter	i_ctx_t * i_ctx_p	616:15:20565:20581	10987984	0	True				
ANR	10988025	ParameterType	i_ctx_t *		10987984	0					
ANR	10988026	Identifier	i_ctx_p		10987984	1					
ANR	10988027	CFGEntryNode	ENTRY		10987984		True				
ANR	10988028	CFGExitNode	EXIT		10987984		True				
ANR	10988029	Symbol	op		10987984						
ANR	10988030	Symbol	* gs_currentdevice		10987984						
ANR	10988031	Symbol	igs		10987984						
ANR	10988032	Symbol	gs_currentdevice ( igs ) -> color_info . num_components		10987984						
ANR	10988033	Symbol	i_ctx_p		10987984						
ANR	10988034	Symbol	gs_currentdevice		10987984						
ANR	10988035	Symbol	osp		10987984						
ANR	10988036	Symbol	gs_currentdevice ( igs ) -> color_info		10987984						
ANR	10988037	Function	zsettransfer	626:0:20734:21479							
ANR	10988038	FunctionDef	zsettransfer (i_ctx_t * i_ctx_p)		10988037	0					
ANR	10988039	CompoundStatement		628:0:20777:21479	10988037	0					
ANR	10988040	IdentifierDeclStatement	os_ptr op = osp ;	629:4:20783:20799	10988037	0	True				
ANR	10988041	IdentifierDecl	op = osp		10988037	0					
ANR	10988042	IdentifierDeclType	os_ptr		10988037	0					
ANR	10988043	Identifier	op		10988037	1					
ANR	10988044	AssignmentExpression	op = osp		10988037	2		=			
ANR	10988045	Identifier	osp		10988037	0					
ANR	10988046	Identifier	osp		10988037	1					
ANR	10988047	IdentifierDeclStatement	int code ;	630:4:20805:20817	10988037	1	True				
ANR	10988048	IdentifierDecl	code		10988037	0					
ANR	10988049	IdentifierDeclType	int		10988037	0					
ANR	10988050	Identifier	code		10988037	1					
ANR	10988051	ExpressionStatement	check_proc ( * op )	632:4:20824:20839	10988037	2	True				
ANR	10988052	CallExpression	check_proc ( * op )		10988037	0					
ANR	10988053	Callee	check_proc		10988037	0					
ANR	10988054	Identifier	check_proc		10988037	0					
ANR	10988055	ArgumentList	* op		10988037	1					
ANR	10988056	Argument	* op		10988037	0					
ANR	10988057	UnaryOperationExpression	* op		10988037	0					
ANR	10988058	UnaryOperator	*		10988037	0					
ANR	10988059	Identifier	op		10988037	1					
ANR	10988060	ExpressionStatement	check_ostack ( zcolor_remap_one_ostack - 1 )	633:4:20845:20886	10988037	3	True				
ANR	10988061	CallExpression	check_ostack ( zcolor_remap_one_ostack - 1 )		10988037	0					
ANR	10988062	Callee	check_ostack		10988037	0					
ANR	10988063	Identifier	check_ostack		10988037	0					
ANR	10988064	ArgumentList	zcolor_remap_one_ostack - 1		10988037	1					
ANR	10988065	Argument	zcolor_remap_one_ostack - 1		10988037	0					
ANR	10988066	AdditiveExpression	zcolor_remap_one_ostack - 1		10988037	0		-			
ANR	10988067	Identifier	zcolor_remap_one_ostack		10988037	0					
ANR	10988068	PrimaryExpression	1		10988037	1					
ANR	10988069	ExpressionStatement	check_estack ( 1 + zcolor_remap_one_estack )	634:4:20892:20933	10988037	4	True				
ANR	10988070	CallExpression	check_estack ( 1 + zcolor_remap_one_estack )		10988037	0					
ANR	10988071	Callee	check_estack		10988037	0					
ANR	10988072	Identifier	check_estack		10988037	0					
ANR	10988073	ArgumentList	1 + zcolor_remap_one_estack		10988037	1					
ANR	10988074	Argument	1 + zcolor_remap_one_estack		10988037	0					
ANR	10988075	AdditiveExpression	1 + zcolor_remap_one_estack		10988037	0		+			
ANR	10988076	PrimaryExpression	1		10988037	0					
ANR	10988077	Identifier	zcolor_remap_one_estack		10988037	1					
ANR	10988078	ExpressionStatement	istate -> transfer_procs . red = istate -> transfer_procs . green = istate -> transfer_procs . blue = istate -> transfer_procs . gray = * op	635:4:20939:21086	10988037	5	True				
ANR	10988079	AssignmentExpression	istate -> transfer_procs . red = istate -> transfer_procs . green = istate -> transfer_procs . blue = istate -> transfer_procs . gray = * op		10988037	0		=			
ANR	10988080	MemberAccess	istate -> transfer_procs . red		10988037	0					
ANR	10988081	PtrMemberAccess	istate -> transfer_procs		10988037	0					
ANR	10988082	Identifier	istate		10988037	0					
ANR	10988083	Identifier	transfer_procs		10988037	1					
ANR	10988084	Identifier	red		10988037	1					
ANR	10988085	AssignmentExpression	istate -> transfer_procs . green = istate -> transfer_procs . blue = istate -> transfer_procs . gray = * op		10988037	1		=			
ANR	10988086	MemberAccess	istate -> transfer_procs . green		10988037	0					
ANR	10988087	PtrMemberAccess	istate -> transfer_procs		10988037	0					
ANR	10988088	Identifier	istate		10988037	0					
ANR	10988089	Identifier	transfer_procs		10988037	1					
ANR	10988090	Identifier	green		10988037	1					
ANR	10988091	AssignmentExpression	istate -> transfer_procs . blue = istate -> transfer_procs . gray = * op		10988037	1		=			
ANR	10988092	MemberAccess	istate -> transfer_procs . blue		10988037	0					
ANR	10988093	PtrMemberAccess	istate -> transfer_procs		10988037	0					
ANR	10988094	Identifier	istate		10988037	0					
ANR	10988095	Identifier	transfer_procs		10988037	1					
ANR	10988096	Identifier	blue		10988037	1					
ANR	10988097	AssignmentExpression	istate -> transfer_procs . gray = * op		10988037	1		=			
ANR	10988098	MemberAccess	istate -> transfer_procs . gray		10988037	0					
ANR	10988099	PtrMemberAccess	istate -> transfer_procs		10988037	0					
ANR	10988100	Identifier	istate		10988037	0					
ANR	10988101	Identifier	transfer_procs		10988037	1					
ANR	10988102	Identifier	gray		10988037	1					
ANR	10988103	UnaryOperationExpression	* op		10988037	1					
ANR	10988104	UnaryOperator	*		10988037	0					
ANR	10988105	Identifier	op		10988037	1					
ANR	10988106	IfStatement	"if ( ( code = gs_settransfer_remap ( igs , gs_mapped_transfer , false ) ) < 0 )"		10988037	6					
ANR	10988107	Condition	"( code = gs_settransfer_remap ( igs , gs_mapped_transfer , false ) ) < 0"	639:8:21096:21160	10988037	0	True				
ANR	10988108	RelationalExpression	"( code = gs_settransfer_remap ( igs , gs_mapped_transfer , false ) ) < 0"		10988037	0		<			
ANR	10988109	AssignmentExpression	"code = gs_settransfer_remap ( igs , gs_mapped_transfer , false )"		10988037	0		=			
ANR	10988110	Identifier	code		10988037	0					
ANR	10988111	CallExpression	"gs_settransfer_remap ( igs , gs_mapped_transfer , false )"		10988037	1					
ANR	10988112	Callee	gs_settransfer_remap		10988037	0					
ANR	10988113	Identifier	gs_settransfer_remap		10988037	0					
ANR	10988114	ArgumentList	igs		10988037	1					
ANR	10988115	Argument	igs		10988037	0					
ANR	10988116	Identifier	igs		10988037	0					
ANR	10988117	Argument	gs_mapped_transfer		10988037	1					
ANR	10988118	Identifier	gs_mapped_transfer		10988037	0					
ANR	10988119	Argument	false		10988037	2					
ANR	10988120	Identifier	false		10988037	0					
ANR	10988121	PrimaryExpression	0		10988037	1					
ANR	10988122	ReturnStatement	return code ;	640:8:21171:21182	10988037	1	True				
ANR	10988123	Identifier	code		10988037	0					
ANR	10988124	ExpressionStatement	push_op_estack ( zcolor_reset_transfer )	641:4:21188:21225	10988037	7	True				
ANR	10988125	CallExpression	push_op_estack ( zcolor_reset_transfer )		10988037	0					
ANR	10988126	Callee	push_op_estack		10988037	0					
ANR	10988127	Identifier	push_op_estack		10988037	0					
ANR	10988128	ArgumentList	zcolor_reset_transfer		10988037	1					
ANR	10988129	Argument	zcolor_reset_transfer		10988037	0					
ANR	10988130	Identifier	zcolor_reset_transfer		10988037	0					
ANR	10988131	ExpressionStatement	pop ( 1 )	642:4:21231:21237	10988037	8	True				
ANR	10988132	CallExpression	pop ( 1 )		10988037	0					
ANR	10988133	Callee	pop		10988037	0					
ANR	10988134	Identifier	pop		10988037	0					
ANR	10988135	ArgumentList	1		10988037	1					
ANR	10988136	Argument	1		10988037	0					
ANR	10988137	PrimaryExpression	1		10988037	0					
ANR	10988138	ReturnStatement	"return zcolor_remap_one ( i_ctx_p , & istate -> transfer_procs . gray , igs -> set_transfer . gray , igs , zcolor_remap_one_finish ) ;"	643:4:21243:21477	10988037	9	True				
ANR	10988139	CallExpression	"zcolor_remap_one ( i_ctx_p , & istate -> transfer_procs . gray , igs -> set_transfer . gray , igs , zcolor_remap_one_finish )"		10988037	0					
ANR	10988140	Callee	zcolor_remap_one		10988037	0					
ANR	10988141	Identifier	zcolor_remap_one		10988037	0					
ANR	10988142	ArgumentList	i_ctx_p		10988037	1					
ANR	10988143	Argument	i_ctx_p		10988037	0					
ANR	10988144	Identifier	i_ctx_p		10988037	0					
ANR	10988145	Argument	& istate -> transfer_procs . gray		10988037	1					
ANR	10988146	UnaryOperationExpression	& istate -> transfer_procs . gray		10988037	0					
ANR	10988147	UnaryOperator	&		10988037	0					
ANR	10988148	MemberAccess	istate -> transfer_procs . gray		10988037	1					
ANR	10988149	PtrMemberAccess	istate -> transfer_procs		10988037	0					
ANR	10988150	Identifier	istate		10988037	0					
ANR	10988151	Identifier	transfer_procs		10988037	1					
ANR	10988152	Identifier	gray		10988037	1					
ANR	10988153	Argument	igs -> set_transfer . gray		10988037	2					
ANR	10988154	MemberAccess	igs -> set_transfer . gray		10988037	0					
ANR	10988155	PtrMemberAccess	igs -> set_transfer		10988037	0					
ANR	10988156	Identifier	igs		10988037	0					
ANR	10988157	Identifier	set_transfer		10988037	1					
ANR	10988158	Identifier	gray		10988037	1					
ANR	10988159	Argument	igs		10988037	3					
ANR	10988160	Identifier	igs		10988037	0					
ANR	10988161	Argument	zcolor_remap_one_finish		10988037	4					
ANR	10988162	Identifier	zcolor_remap_one_finish		10988037	0					
ANR	10988163	ReturnType	static int		10988037	1					
ANR	10988164	Identifier	zsettransfer		10988037	2					
ANR	10988165	ParameterList	i_ctx_t * i_ctx_p		10988037	3					
ANR	10988166	Parameter	i_ctx_t * i_ctx_p	627:13:20758:20774	10988037	0	True				
ANR	10988167	ParameterType	i_ctx_t *		10988037	0					
ANR	10988168	Identifier	i_ctx_p		10988037	1					
ANR	10988169	CFGEntryNode	ENTRY		10988037		True				
ANR	10988170	CFGExitNode	EXIT		10988037		True				
ANR	10988171	Symbol	zcolor_reset_transfer		10988037						
ANR	10988172	Symbol	* igs		10988037						
ANR	10988173	Symbol	zcolor_remap_one_ostack		10988037						
ANR	10988174	Symbol	code		10988037						
ANR	10988175	Symbol	istate -> transfer_procs . gray		10988037						
ANR	10988176	Symbol	* op		10988037						
ANR	10988177	Symbol	zcolor_remap_one_finish		10988037						
ANR	10988178	Symbol	osp		10988037						
ANR	10988179	Symbol	* istate		10988037						
ANR	10988180	Symbol	& istate -> transfer_procs		10988037						
ANR	10988181	Symbol	istate -> transfer_procs . red		10988037						
ANR	10988182	Symbol	igs -> set_transfer . gray		10988037						
ANR	10988183	Symbol	igs		10988037						
ANR	10988184	Symbol	istate -> transfer_procs . blue		10988037						
ANR	10988185	Symbol	op		10988037						
ANR	10988186	Symbol	zcolor_remap_one_estack		10988037						
ANR	10988187	Symbol	istate -> transfer_procs		10988037						
ANR	10988188	Symbol	false		10988037						
ANR	10988189	Symbol	gs_settransfer_remap		10988037						
ANR	10988190	Symbol	gs_mapped_transfer		10988037						
ANR	10988191	Symbol	i_ctx_p		10988037						
ANR	10988192	Symbol	igs -> set_transfer		10988037						
ANR	10988193	Symbol	zcolor_remap_one		10988037						
ANR	10988194	Symbol	istate -> transfer_procs . green		10988037						
ANR	10988195	Symbol	istate		10988037						
ANR	10988196	Symbol	& istate -> transfer_procs . gray		10988037						
ANR	10988197	Function	zcolor_remap_one	659:0:21737:22748							
ANR	10988198	FunctionDef	"zcolor_remap_one (i_ctx_t * i_ctx_p , const ref * pproc , gx_transfer_map * pmap , const gs_gstate * pgs , op_proc_t finish_proc)"		10988197	0					
ANR	10988199	CompoundStatement		666:0:21921:22748	10988197	0					
ANR	10988200	IdentifierDeclStatement	os_ptr op ;	667:4:21927:21949	10988197	0	True				
ANR	10988201	IdentifierDecl	op		10988197	0					
ANR	10988202	IdentifierDeclType	os_ptr		10988197	0					
ANR	10988203	Identifier	op		10988197	1					
ANR	10988204	IfStatement	if ( r_size ( pproc ) == 0 )		10988197	1					
ANR	10988205	Condition	r_size ( pproc ) == 0	673:8:22079:22096	10988197	0	True				
ANR	10988206	EqualityExpression	r_size ( pproc ) == 0		10988197	0		==			
ANR	10988207	CallExpression	r_size ( pproc )		10988197	0					
ANR	10988208	Callee	r_size		10988197	0					
ANR	10988209	Identifier	r_size		10988197	0					
ANR	10988210	ArgumentList	pproc		10988197	1					
ANR	10988211	Argument	pproc		10988197	0					
ANR	10988212	Identifier	pproc		10988197	0					
ANR	10988213	PrimaryExpression	0		10988197	1					
ANR	10988214	CompoundStatement		8:28:177:177	10988197	1					
ANR	10988215	ExpressionStatement	gx_set_identity_transfer ( pmap )	674:8:22109:22139	10988197	0	True				
ANR	10988216	CallExpression	gx_set_identity_transfer ( pmap )		10988197	0					
ANR	10988217	Callee	gx_set_identity_transfer		10988197	0					
ANR	10988218	Identifier	gx_set_identity_transfer		10988197	0					
ANR	10988219	ArgumentList	pmap		10988197	1					
ANR	10988220	Argument	pmap		10988197	0					
ANR	10988221	Identifier	pmap		10988197	0					
ANR	10988222	ReturnStatement	return o_push_estack ;	680:8:22390:22410	10988197	1	True				
ANR	10988223	Identifier	o_push_estack		10988197	0					
ANR	10988224	ExpressionStatement	op = osp += 4	682:4:22422:22435	10988197	2	True				
ANR	10988225	AssignmentExpression	op = osp += 4		10988197	0		=			
ANR	10988226	Identifier	op		10988197	0					
ANR	10988227	AssignmentExpression	osp += 4		10988197	1		+=			
ANR	10988228	Identifier	osp		10988197	0					
ANR	10988229	PrimaryExpression	4		10988197	1					
ANR	10988230	ExpressionStatement	"make_real ( op - 3 , 0 )"	683:4:22441:22461	10988197	3	True				
ANR	10988231	CallExpression	"make_real ( op - 3 , 0 )"		10988197	0					
ANR	10988232	Callee	make_real		10988197	0					
ANR	10988233	Identifier	make_real		10988197	0					
ANR	10988234	ArgumentList	op - 3		10988197	1					
ANR	10988235	Argument	op - 3		10988197	0					
ANR	10988236	AdditiveExpression	op - 3		10988197	0		-			
ANR	10988237	Identifier	op		10988197	0					
ANR	10988238	PrimaryExpression	3		10988197	1					
ANR	10988239	Argument	0		10988197	1					
ANR	10988240	PrimaryExpression	0		10988197	0					
ANR	10988241	ExpressionStatement	"make_int ( op - 2 , transfer_map_size - 1 )"	684:4:22467:22506	10988197	4	True				
ANR	10988242	CallExpression	"make_int ( op - 2 , transfer_map_size - 1 )"		10988197	0					
ANR	10988243	Callee	make_int		10988197	0					
ANR	10988244	Identifier	make_int		10988197	0					
ANR	10988245	ArgumentList	op - 2		10988197	1					
ANR	10988246	Argument	op - 2		10988197	0					
ANR	10988247	AdditiveExpression	op - 2		10988197	0		-			
ANR	10988248	Identifier	op		10988197	0					
ANR	10988249	PrimaryExpression	2		10988197	1					
ANR	10988250	Argument	transfer_map_size - 1		10988197	1					
ANR	10988251	AdditiveExpression	transfer_map_size - 1		10988197	0		-			
ANR	10988252	Identifier	transfer_map_size		10988197	0					
ANR	10988253	PrimaryExpression	1		10988197	1					
ANR	10988254	ExpressionStatement	"make_real ( op - 1 , 1 )"	685:4:22512:22532	10988197	5	True				
ANR	10988255	CallExpression	"make_real ( op - 1 , 1 )"		10988197	0					
ANR	10988256	Callee	make_real		10988197	0					
ANR	10988257	Identifier	make_real		10988197	0					
ANR	10988258	ArgumentList	op - 1		10988197	1					
ANR	10988259	Argument	op - 1		10988197	0					
ANR	10988260	AdditiveExpression	op - 1		10988197	0		-			
ANR	10988261	Identifier	op		10988197	0					
ANR	10988262	PrimaryExpression	1		10988197	1					
ANR	10988263	Argument	1		10988197	1					
ANR	10988264	PrimaryExpression	1		10988197	0					
ANR	10988265	ExpressionStatement	* op = * pproc	686:4:22538:22550	10988197	6	True				
ANR	10988266	AssignmentExpression	* op = * pproc		10988197	0		=			
ANR	10988267	UnaryOperationExpression	* op		10988197	0					
ANR	10988268	UnaryOperator	*		10988197	0					
ANR	10988269	Identifier	op		10988197	1					
ANR	10988270	UnaryOperationExpression	* pproc		10988197	1					
ANR	10988271	UnaryOperator	*		10988197	0					
ANR	10988272	Identifier	pproc		10988197	1					
ANR	10988273	ExpressionStatement	++ esp	687:4:22556:22561	10988197	7	True				
ANR	10988274	UnaryExpression	++ esp		10988197	0					
ANR	10988275	IncDec	++		10988197	0					
ANR	10988276	Identifier	esp		10988197	1					
ANR	10988277	ExpressionStatement	"make_struct ( esp , imemory_space ( ( gs_ref_memory_t * ) pgs -> memory ) , pmap )"	688:4:22567:22653	10988197	8	True				
ANR	10988278	CallExpression	"make_struct ( esp , imemory_space ( ( gs_ref_memory_t * ) pgs -> memory ) , pmap )"		10988197	0					
ANR	10988279	Callee	make_struct		10988197	0					
ANR	10988280	Identifier	make_struct		10988197	0					
ANR	10988281	ArgumentList	esp		10988197	1					
ANR	10988282	Argument	esp		10988197	0					
ANR	10988283	Identifier	esp		10988197	0					
ANR	10988284	Argument	imemory_space ( ( gs_ref_memory_t * ) pgs -> memory )		10988197	1					
ANR	10988285	CallExpression	imemory_space ( ( gs_ref_memory_t * ) pgs -> memory )		10988197	0					
ANR	10988286	Callee	imemory_space		10988197	0					
ANR	10988287	Identifier	imemory_space		10988197	0					
ANR	10988288	ArgumentList	( gs_ref_memory_t * ) pgs -> memory		10988197	1					
ANR	10988289	Argument	( gs_ref_memory_t * ) pgs -> memory		10988197	0					
ANR	10988290	CastExpression	( gs_ref_memory_t * ) pgs -> memory		10988197	0					
ANR	10988291	CastTarget	gs_ref_memory_t *		10988197	0					
ANR	10988292	PtrMemberAccess	pgs -> memory		10988197	1					
ANR	10988293	Identifier	pgs		10988197	0					
ANR	10988294	Identifier	memory		10988197	1					
ANR	10988295	Argument	pmap		10988197	2					
ANR	10988296	Identifier	pmap		10988197	0					
ANR	10988297	ExpressionStatement	push_op_estack ( finish_proc )	690:4:22659:22686	10988197	9	True				
ANR	10988298	CallExpression	push_op_estack ( finish_proc )		10988197	0					
ANR	10988299	Callee	push_op_estack		10988197	0					
ANR	10988300	Identifier	push_op_estack		10988197	0					
ANR	10988301	ArgumentList	finish_proc		10988197	1					
ANR	10988302	Argument	finish_proc		10988197	0					
ANR	10988303	Identifier	finish_proc		10988197	0					
ANR	10988304	ExpressionStatement	push_op_estack ( zfor_samples )	691:4:22692:22720	10988197	10	True				
ANR	10988305	CallExpression	push_op_estack ( zfor_samples )		10988197	0					
ANR	10988306	Callee	push_op_estack		10988197	0					
ANR	10988307	Identifier	push_op_estack		10988197	0					
ANR	10988308	ArgumentList	zfor_samples		10988197	1					
ANR	10988309	Argument	zfor_samples		10988197	0					
ANR	10988310	Identifier	zfor_samples		10988197	0					
ANR	10988311	ReturnStatement	return o_push_estack ;	692:4:22726:22746	10988197	11	True				
ANR	10988312	Identifier	o_push_estack		10988197	0					
ANR	10988313	ReturnType	int		10988197	1					
ANR	10988314	Identifier	zcolor_remap_one		10988197	2					
ANR	10988315	ParameterList	"i_ctx_t * i_ctx_p , const ref * pproc , gx_transfer_map * pmap , const gs_gstate * pgs , op_proc_t finish_proc"		10988197	3					
ANR	10988316	Parameter	i_ctx_t * i_ctx_p	661:4:21763:21789	10988197	0	True				
ANR	10988317	ParameterType	i_ctx_t *		10988197	0					
ANR	10988318	Identifier	i_ctx_p		10988197	1					
ANR	10988319	Parameter	const ref * pproc	662:4:21796:21820	10988197	1	True				
ANR	10988320	ParameterType	const ref *		10988197	0					
ANR	10988321	Identifier	pproc		10988197	1					
ANR	10988322	Parameter	gx_transfer_map * pmap	663:4:21827:21850	10988197	2	True				
ANR	10988323	ParameterType	gx_transfer_map *		10988197	0					
ANR	10988324	Identifier	pmap		10988197	1					
ANR	10988325	Parameter	const gs_gstate * pgs	664:4:21857:21880	10988197	3	True				
ANR	10988326	ParameterType	const gs_gstate *		10988197	0					
ANR	10988327	Identifier	pgs		10988197	1					
ANR	10988328	Parameter	op_proc_t finish_proc	665:4:21887:21917	10988197	4	True				
ANR	10988329	ParameterType	op_proc_t		10988197	0					
ANR	10988330	Identifier	finish_proc		10988197	1					
ANR	10988331	CFGEntryNode	ENTRY		10988197		True				
ANR	10988332	CFGExitNode	EXIT		10988197		True				
ANR	10988333	Symbol	op		10988197						
ANR	10988334	Symbol	esp		10988197						
ANR	10988335	Symbol	* op		10988197						
ANR	10988336	Symbol	* pgs		10988197						
ANR	10988337	Symbol	zfor_samples		10988197						
ANR	10988338	Symbol	osp		10988197						
ANR	10988339	Symbol	* pproc		10988197						
ANR	10988340	Symbol	i_ctx_p		10988197						
ANR	10988341	Symbol	finish_proc		10988197						
ANR	10988342	Symbol	r_size		10988197						
ANR	10988343	Symbol	pproc		10988197						
ANR	10988344	Symbol	pmap		10988197						
ANR	10988345	Symbol	transfer_map_size		10988197						
ANR	10988346	Symbol	imemory_space		10988197						
ANR	10988347	Symbol	pgs		10988197						
ANR	10988348	Symbol	pgs -> memory		10988197						
ANR	10988349	Symbol	o_push_estack		10988197						
ANR	10988350	Function	zcolor_remap_one_store	696:0:22800:23546							
ANR	10988351	FunctionDef	"zcolor_remap_one_store (i_ctx_t * i_ctx_p , double min_value)"		10988350	0					
ANR	10988352	CompoundStatement		698:0:22870:23546	10988350	0					
ANR	10988353	IdentifierDeclStatement	int i ;	699:4:22876:22881	10988350	0	True				
ANR	10988354	IdentifierDecl	i		10988350	0					
ANR	10988355	IdentifierDeclType	int		10988350	0					
ANR	10988356	Identifier	i		10988350	1					
ANR	10988357	IdentifierDeclStatement	"gx_transfer_map * pmap = r_ptr ( esp , gx_transfer_map ) ;"	700:4:22887:22938	10988350	1	True				
ANR	10988358	IdentifierDecl	"* pmap = r_ptr ( esp , gx_transfer_map )"		10988350	0					
ANR	10988359	IdentifierDeclType	gx_transfer_map *		10988350	0					
ANR	10988360	Identifier	pmap		10988350	1					
ANR	10988361	AssignmentExpression	"* pmap = r_ptr ( esp , gx_transfer_map )"		10988350	2		=			
ANR	10988362	Identifier	pmap		10988350	0					
ANR	10988363	CallExpression	"r_ptr ( esp , gx_transfer_map )"		10988350	1					
ANR	10988364	Callee	r_ptr		10988350	0					
ANR	10988365	Identifier	r_ptr		10988350	0					
ANR	10988366	ArgumentList	esp		10988350	1					
ANR	10988367	Argument	esp		10988350	0					
ANR	10988368	Identifier	esp		10988350	0					
ANR	10988369	Argument	gx_transfer_map		10988350	1					
ANR	10988370	Identifier	gx_transfer_map		10988350	0					
ANR	10988371	IfStatement	if ( ref_stack_count ( & o_stack ) < transfer_map_size )		10988350	2					
ANR	10988372	Condition	ref_stack_count ( & o_stack ) < transfer_map_size	702:8:22949:22993	10988350	0	True				
ANR	10988373	RelationalExpression	ref_stack_count ( & o_stack ) < transfer_map_size		10988350	0		<			
ANR	10988374	CallExpression	ref_stack_count ( & o_stack )		10988350	0					
ANR	10988375	Callee	ref_stack_count		10988350	0					
ANR	10988376	Identifier	ref_stack_count		10988350	0					
ANR	10988377	ArgumentList	& o_stack		10988350	1					
ANR	10988378	Argument	& o_stack		10988350	0					
ANR	10988379	UnaryOperationExpression	& o_stack		10988350	0					
ANR	10988380	UnaryOperator	&		10988350	0					
ANR	10988381	Identifier	o_stack		10988350	1					
ANR	10988382	Identifier	transfer_map_size		10988350	1					
ANR	10988383	ExpressionStatement	return_error ( gs_error_stackunderflow )	703:8:23004:23041	10988350	1	True				
ANR	10988384	CallExpression	return_error ( gs_error_stackunderflow )		10988350	0					
ANR	10988385	Callee	return_error		10988350	0					
ANR	10988386	Identifier	return_error		10988350	0					
ANR	10988387	ArgumentList	gs_error_stackunderflow		10988350	1					
ANR	10988388	Argument	gs_error_stackunderflow		10988350	0					
ANR	10988389	Identifier	gs_error_stackunderflow		10988350	0					
ANR	10988390	ForStatement	for ( i = 0 ; i < transfer_map_size ; i ++ )		10988350	3					
ANR	10988391	ForInit	i = 0 ;	704:9:23052:23057	10988350	0	True				
ANR	10988392	AssignmentExpression	i = 0		10988350	0		=			
ANR	10988393	Identifier	i		10988350	0					
ANR	10988394	PrimaryExpression	0		10988350	1					
ANR	10988395	Condition	i < transfer_map_size	704:16:23059:23079	10988350	1	True				
ANR	10988396	RelationalExpression	i < transfer_map_size		10988350	0		<			
ANR	10988397	Identifier	i		10988350	0					
ANR	10988398	Identifier	transfer_map_size		10988350	1					
ANR	10988399	PostIncDecOperationExpression	i ++	704:39:23082:23084	10988350	2	True				
ANR	10988400	Identifier	i		10988350	0					
ANR	10988401	IncDec	++		10988350	1					
ANR	10988402	CompoundStatement		9:8:244:358	10988350	3					
ANR	10988403	IdentifierDeclStatement	double v ;	705:8:23097:23105	10988350	0	True				
ANR	10988404	IdentifierDecl	v		10988350	0					
ANR	10988405	IdentifierDeclType	double		10988350	0					
ANR	10988406	Identifier	v		10988350	1					
ANR	10988407	IdentifierDeclStatement	"int code = real_param ( ref_stack_index ( & o_stack , transfer_map_size - 1 - i ) , & v ) ;"	706:8:23115:23229	10988350	1	True				
ANR	10988408	IdentifierDecl	"code = real_param ( ref_stack_index ( & o_stack , transfer_map_size - 1 - i ) , & v )"		10988350	0					
ANR	10988409	IdentifierDeclType	int		10988350	0					
ANR	10988410	Identifier	code		10988350	1					
ANR	10988411	AssignmentExpression	"code = real_param ( ref_stack_index ( & o_stack , transfer_map_size - 1 - i ) , & v )"		10988350	2		=			
ANR	10988412	Identifier	code		10988350	0					
ANR	10988413	CallExpression	"real_param ( ref_stack_index ( & o_stack , transfer_map_size - 1 - i ) , & v )"		10988350	1					
ANR	10988414	Callee	real_param		10988350	0					
ANR	10988415	Identifier	real_param		10988350	0					
ANR	10988416	ArgumentList	"ref_stack_index ( & o_stack , transfer_map_size - 1 - i )"		10988350	1					
ANR	10988417	Argument	"ref_stack_index ( & o_stack , transfer_map_size - 1 - i )"		10988350	0					
ANR	10988418	CallExpression	"ref_stack_index ( & o_stack , transfer_map_size - 1 - i )"		10988350	0					
ANR	10988419	Callee	ref_stack_index		10988350	0					
ANR	10988420	Identifier	ref_stack_index		10988350	0					
ANR	10988421	ArgumentList	& o_stack		10988350	1					
ANR	10988422	Argument	& o_stack		10988350	0					
ANR	10988423	UnaryOperationExpression	& o_stack		10988350	0					
ANR	10988424	UnaryOperator	&		10988350	0					
ANR	10988425	Identifier	o_stack		10988350	1					
ANR	10988426	Argument	transfer_map_size - 1 - i		10988350	1					
ANR	10988427	AdditiveExpression	transfer_map_size - 1 - i		10988350	0		-			
ANR	10988428	Identifier	transfer_map_size		10988350	0					
ANR	10988429	AdditiveExpression	1 - i		10988350	1		-			
ANR	10988430	PrimaryExpression	1		10988350	0					
ANR	10988431	Identifier	i		10988350	1					
ANR	10988432	Argument	& v		10988350	1					
ANR	10988433	UnaryOperationExpression	& v		10988350	0					
ANR	10988434	UnaryOperator	&		10988350	0					
ANR	10988435	Identifier	v		10988350	1					
ANR	10988436	IfStatement	if ( code < 0 )		10988350	2					
ANR	10988437	Condition	code < 0	710:12:23244:23251	10988350	0	True				
ANR	10988438	RelationalExpression	code < 0		10988350	0		<			
ANR	10988439	Identifier	code		10988350	0					
ANR	10988440	PrimaryExpression	0		10988350	1					
ANR	10988441	ReturnStatement	return code ;	711:12:23266:23277	10988350	1	True				
ANR	10988442	Identifier	code		10988350	0					
ANR	10988443	ExpressionStatement	pmap -> values [ i ] = ( v < min_value ? float2frac ( min_value ) : v >= 1.0 ? frac_1 : float2frac ( v ) )	712:8:23287:23418	10988350	3	True				
ANR	10988444	AssignmentExpression	pmap -> values [ i ] = ( v < min_value ? float2frac ( min_value ) : v >= 1.0 ? frac_1 : float2frac ( v ) )		10988350	0		=			
ANR	10988445	ArrayIndexing	pmap -> values [ i ]		10988350	0					
ANR	10988446	PtrMemberAccess	pmap -> values		10988350	0					
ANR	10988447	Identifier	pmap		10988350	0					
ANR	10988448	Identifier	values		10988350	1					
ANR	10988449	Identifier	i		10988350	1					
ANR	10988450	ConditionalExpression	v < min_value ? float2frac ( min_value ) : v >= 1.0 ? frac_1 : float2frac ( v )		10988350	1					
ANR	10988451	Condition	v < min_value		10988350	0					
ANR	10988452	RelationalExpression	v < min_value		10988350	0		<			
ANR	10988453	Identifier	v		10988350	0					
ANR	10988454	Identifier	min_value		10988350	1					
ANR	10988455	CallExpression	float2frac ( min_value )		10988350	1					
ANR	10988456	Callee	float2frac		10988350	0					
ANR	10988457	Identifier	float2frac		10988350	0					
ANR	10988458	ArgumentList	min_value		10988350	1					
ANR	10988459	Argument	min_value		10988350	0					
ANR	10988460	Identifier	min_value		10988350	0					
ANR	10988461	ConditionalExpression	v >= 1.0 ? frac_1 : float2frac ( v )		10988350	2					
ANR	10988462	Condition	v >= 1.0		10988350	0					
ANR	10988463	RelationalExpression	v >= 1.0		10988350	0		>=			
ANR	10988464	Identifier	v		10988350	0					
ANR	10988465	PrimaryExpression	1.0		10988350	1					
ANR	10988466	Identifier	frac_1		10988350	1					
ANR	10988467	CallExpression	float2frac ( v )		10988350	2					
ANR	10988468	Callee	float2frac		10988350	0					
ANR	10988469	Identifier	float2frac		10988350	0					
ANR	10988470	ArgumentList	v		10988350	1					
ANR	10988471	Argument	v		10988350	0					
ANR	10988472	Identifier	v		10988350	0					
ANR	10988473	ExpressionStatement	"ref_stack_pop ( & o_stack , transfer_map_size )"	717:4:23430:23472	10988350	4	True				
ANR	10988474	CallExpression	"ref_stack_pop ( & o_stack , transfer_map_size )"		10988350	0					
ANR	10988475	Callee	ref_stack_pop		10988350	0					
ANR	10988476	Identifier	ref_stack_pop		10988350	0					
ANR	10988477	ArgumentList	& o_stack		10988350	1					
ANR	10988478	Argument	& o_stack		10988350	0					
ANR	10988479	UnaryOperationExpression	& o_stack		10988350	0					
ANR	10988480	UnaryOperator	&		10988350	0					
ANR	10988481	Identifier	o_stack		10988350	1					
ANR	10988482	Argument	transfer_map_size		10988350	1					
ANR	10988483	Identifier	transfer_map_size		10988350	0					
ANR	10988484	ExpressionStatement	esp --	718:4:23478:23483	10988350	5	True				
ANR	10988485	PostIncDecOperationExpression	esp --		10988350	0					
ANR	10988486	Identifier	esp		10988350	0					
ANR	10988487	IncDec	--		10988350	1					
ANR	10988488	ReturnStatement	return o_pop_estack ;	719:4:23525:23544	10988350	6	True				
ANR	10988489	Identifier	o_pop_estack		10988350	0					
ANR	10988490	ReturnType	static int		10988350	1					
ANR	10988491	Identifier	zcolor_remap_one_store		10988350	2					
ANR	10988492	ParameterList	"i_ctx_t * i_ctx_p , double min_value"		10988350	3					
ANR	10988493	Parameter	i_ctx_t * i_ctx_p	697:23:22834:22849	10988350	0	True				
ANR	10988494	ParameterType	i_ctx_t *		10988350	0					
ANR	10988495	Identifier	i_ctx_p		10988350	1					
ANR	10988496	Parameter	double min_value	697:41:22852:22867	10988350	1	True				
ANR	10988497	ParameterType	double		10988350	0					
ANR	10988498	Identifier	min_value		10988350	1					
ANR	10988499	CFGEntryNode	ENTRY		10988350		True				
ANR	10988500	CFGExitNode	EXIT		10988350		True				
ANR	10988501	Symbol	ref_stack_index		10988350						
ANR	10988502	Symbol	* pmap		10988350						
ANR	10988503	Symbol	frac_1		10988350						
ANR	10988504	Symbol	esp		10988350						
ANR	10988505	Symbol	code		10988350						
ANR	10988506	Symbol	* * pmap		10988350						
ANR	10988507	Symbol	* pmap -> values		10988350						
ANR	10988508	Symbol	pmap -> values		10988350						
ANR	10988509	Symbol	float2frac		10988350						
ANR	10988510	Symbol	i		10988350						
ANR	10988511	Symbol	gx_transfer_map		10988350						
ANR	10988512	Symbol	o_pop_estack		10988350						
ANR	10988513	Symbol	min_value		10988350						
ANR	10988514	Symbol	r_ptr		10988350						
ANR	10988515	Symbol	* i		10988350						
ANR	10988516	Symbol	gs_error_stackunderflow		10988350						
ANR	10988517	Symbol	i_ctx_p		10988350						
ANR	10988518	Symbol	& o_stack		10988350						
ANR	10988519	Symbol	v		10988350						
ANR	10988520	Symbol	ref_stack_count		10988350						
ANR	10988521	Symbol	real_param		10988350						
ANR	10988522	Symbol	pmap		10988350						
ANR	10988523	Symbol	transfer_map_size		10988350						
ANR	10988524	Symbol	& v		10988350						
ANR	10988525	Function	zcolor_remap_one_finish	721:0:23548:23645							
ANR	10988526	FunctionDef	zcolor_remap_one_finish (i_ctx_t * i_ctx_p)		10988525	0					
ANR	10988527	CompoundStatement		723:0:23594:23645	10988525	0					
ANR	10988528	ReturnStatement	"return zcolor_remap_one_store ( i_ctx_p , 0.0 ) ;"	724:4:23600:23643	10988525	0	True				
ANR	10988529	CallExpression	"zcolor_remap_one_store ( i_ctx_p , 0.0 )"		10988525	0					
ANR	10988530	Callee	zcolor_remap_one_store		10988525	0					
ANR	10988531	Identifier	zcolor_remap_one_store		10988525	0					
ANR	10988532	ArgumentList	i_ctx_p		10988525	1					
ANR	10988533	Argument	i_ctx_p		10988525	0					
ANR	10988534	Identifier	i_ctx_p		10988525	0					
ANR	10988535	Argument	0.0		10988525	1					
ANR	10988536	PrimaryExpression	0.0		10988525	0					
ANR	10988537	ReturnType	int		10988525	1					
ANR	10988538	Identifier	zcolor_remap_one_finish		10988525	2					
ANR	10988539	ParameterList	i_ctx_t * i_ctx_p		10988525	3					
ANR	10988540	Parameter	i_ctx_t * i_ctx_p	722:24:23576:23591	10988525	0	True				
ANR	10988541	ParameterType	i_ctx_t *		10988525	0					
ANR	10988542	Identifier	i_ctx_p		10988525	1					
ANR	10988543	CFGEntryNode	ENTRY		10988525		True				
ANR	10988544	CFGExitNode	EXIT		10988525		True				
ANR	10988545	Symbol	zcolor_remap_one_store		10988525						
ANR	10988546	Symbol	i_ctx_p		10988525						
ANR	10988547	Function	zcolor_remap_one_signed_finish	726:0:23647:23752							
ANR	10988548	FunctionDef	zcolor_remap_one_signed_finish (i_ctx_t * i_ctx_p)		10988547	0					
ANR	10988549	CompoundStatement		728:0:23700:23752	10988547	0					
ANR	10988550	ReturnStatement	"return zcolor_remap_one_store ( i_ctx_p , - 1.0 ) ;"	729:4:23706:23750	10988547	0	True				
ANR	10988551	CallExpression	"zcolor_remap_one_store ( i_ctx_p , - 1.0 )"		10988547	0					
ANR	10988552	Callee	zcolor_remap_one_store		10988547	0					
ANR	10988553	Identifier	zcolor_remap_one_store		10988547	0					
ANR	10988554	ArgumentList	i_ctx_p		10988547	1					
ANR	10988555	Argument	i_ctx_p		10988547	0					
ANR	10988556	Identifier	i_ctx_p		10988547	0					
ANR	10988557	Argument	- 1.0		10988547	1					
ANR	10988558	UnaryOperationExpression	- 1.0		10988547	0					
ANR	10988559	UnaryOperator	-		10988547	0					
ANR	10988560	PrimaryExpression	1.0		10988547	1					
ANR	10988561	ReturnType	int		10988547	1					
ANR	10988562	Identifier	zcolor_remap_one_signed_finish		10988547	2					
ANR	10988563	ParameterList	i_ctx_t * i_ctx_p		10988547	3					
ANR	10988564	Parameter	i_ctx_t * i_ctx_p	727:31:23682:23697	10988547	0	True				
ANR	10988565	ParameterType	i_ctx_t *		10988547	0					
ANR	10988566	Identifier	i_ctx_p		10988547	1					
ANR	10988567	CFGEntryNode	ENTRY		10988547		True				
ANR	10988568	CFGExitNode	EXIT		10988547		True				
ANR	10988569	Symbol	zcolor_remap_one_store		10988547						
ANR	10988570	Symbol	i_ctx_p		10988547						
ANR	10988571	Function	zcolor_reset_transfer	734:0:23849:23971							
ANR	10988572	FunctionDef	zcolor_reset_transfer (i_ctx_t * i_ctx_p)		10988571	0					
ANR	10988573	CompoundStatement		736:0:23893:23971	10988571	0					
ANR	10988574	ExpressionStatement	gx_set_effective_transfer ( igs )	737:4:23899:23929	10988571	0	True				
ANR	10988575	CallExpression	gx_set_effective_transfer ( igs )		10988571	0					
ANR	10988576	Callee	gx_set_effective_transfer		10988571	0					
ANR	10988577	Identifier	gx_set_effective_transfer		10988571	0					
ANR	10988578	ArgumentList	igs		10988571	1					
ANR	10988579	Argument	igs		10988571	0					
ANR	10988580	Identifier	igs		10988571	0					
ANR	10988581	ReturnStatement	return zcolor_remap_color ( i_ctx_p ) ;	738:4:23935:23969	10988571	1	True				
ANR	10988582	CallExpression	zcolor_remap_color ( i_ctx_p )		10988571	0					
ANR	10988583	Callee	zcolor_remap_color		10988571	0					
ANR	10988584	Identifier	zcolor_remap_color		10988571	0					
ANR	10988585	ArgumentList	i_ctx_p		10988571	1					
ANR	10988586	Argument	i_ctx_p		10988571	0					
ANR	10988587	Identifier	i_ctx_p		10988571	0					
ANR	10988588	ReturnType	int		10988571	1					
ANR	10988589	Identifier	zcolor_reset_transfer		10988571	2					
ANR	10988590	ParameterList	i_ctx_t * i_ctx_p		10988571	3					
ANR	10988591	Parameter	i_ctx_t * i_ctx_p	735:22:23875:23890	10988571	0	True				
ANR	10988592	ParameterType	i_ctx_t *		10988571	0					
ANR	10988593	Identifier	i_ctx_p		10988571	1					
ANR	10988594	CFGEntryNode	ENTRY		10988571		True				
ANR	10988595	CFGExitNode	EXIT		10988571		True				
ANR	10988596	Symbol	igs		10988571						
ANR	10988597	Symbol	i_ctx_p		10988571						
ANR	10988598	Symbol	zcolor_remap_color		10988571						
ANR	10988599	Function	zcolor_remap_color	740:0:23973:24189							
ANR	10988600	FunctionDef	zcolor_remap_color (i_ctx_t * i_ctx_p)		10988599	0					
ANR	10988601	CompoundStatement		742:0:24014:24189	10988599	0					
ANR	10988602	ExpressionStatement	gs_swapcolors ( igs )	744:4:24073:24091	10988599	0	True				
ANR	10988603	CallExpression	gs_swapcolors ( igs )		10988599	0					
ANR	10988604	Callee	gs_swapcolors		10988599	0					
ANR	10988605	Identifier	gs_swapcolors		10988599	0					
ANR	10988606	ArgumentList	igs		10988599	1					
ANR	10988607	Argument	igs		10988599	0					
ANR	10988608	Identifier	igs		10988599	0					
ANR	10988609	ExpressionStatement	gx_unset_dev_color ( igs )	745:4:24097:24120	10988599	1	True				
ANR	10988610	CallExpression	gx_unset_dev_color ( igs )		10988599	0					
ANR	10988611	Callee	gx_unset_dev_color		10988599	0					
ANR	10988612	Identifier	gx_unset_dev_color		10988599	0					
ANR	10988613	ArgumentList	igs		10988599	1					
ANR	10988614	Argument	igs		10988599	0					
ANR	10988615	Identifier	igs		10988599	0					
ANR	10988616	ExpressionStatement	gs_swapcolors ( igs )	746:4:24126:24144	10988599	2	True				
ANR	10988617	CallExpression	gs_swapcolors ( igs )		10988599	0					
ANR	10988618	Callee	gs_swapcolors		10988599	0					
ANR	10988619	Identifier	gs_swapcolors		10988599	0					
ANR	10988620	ArgumentList	igs		10988599	1					
ANR	10988621	Argument	igs		10988599	0					
ANR	10988622	Identifier	igs		10988599	0					
ANR	10988623	ExpressionStatement	gx_unset_dev_color ( igs )	747:4:24150:24173	10988599	3	True				
ANR	10988624	CallExpression	gx_unset_dev_color ( igs )		10988599	0					
ANR	10988625	Callee	gx_unset_dev_color		10988599	0					
ANR	10988626	Identifier	gx_unset_dev_color		10988599	0					
ANR	10988627	ArgumentList	igs		10988599	1					
ANR	10988628	Argument	igs		10988599	0					
ANR	10988629	Identifier	igs		10988599	0					
ANR	10988630	ReturnStatement	return 0 ;	748:4:24179:24187	10988599	4	True				
ANR	10988631	PrimaryExpression	0		10988599	0					
ANR	10988632	ReturnType	int		10988599	1					
ANR	10988633	Identifier	zcolor_remap_color		10988599	2					
ANR	10988634	ParameterList	i_ctx_t * i_ctx_p		10988599	3					
ANR	10988635	Parameter	i_ctx_t * i_ctx_p	741:19:23996:24011	10988599	0	True				
ANR	10988636	ParameterType	i_ctx_t *		10988599	0					
ANR	10988637	Identifier	i_ctx_p		10988599	1					
ANR	10988638	CFGEntryNode	ENTRY		10988599		True				
ANR	10988639	CFGExitNode	EXIT		10988599		True				
ANR	10988640	Symbol	igs		10988599						
ANR	10988641	Symbol	i_ctx_p		10988599						
ANR	10988642	Function	rgb2hsb	773:0:24782:26080							
ANR	10988643	FunctionDef	rgb2hsb (float * RGB)		10988642	0					
ANR	10988644	CompoundStatement		774:0:24813:26080	10988642	0					
ANR	10988645	IdentifierDeclStatement	"float HSB [ 3 ] , v , diff ;"	775:4:24819:24840	10988642	0	True				
ANR	10988646	IdentifierDecl	HSB [ 3 ]		10988642	0					
ANR	10988647	IdentifierDeclType	float [ 3 ]		10988642	0					
ANR	10988648	Identifier	HSB		10988642	1					
ANR	10988649	PrimaryExpression	3		10988642	2					
ANR	10988650	IdentifierDecl	v		10988642	1					
ANR	10988651	IdentifierDeclType	float		10988642	0					
ANR	10988652	Identifier	v		10988642	1					
ANR	10988653	IdentifierDecl	diff		10988642	2					
ANR	10988654	IdentifierDeclType	float		10988642	0					
ANR	10988655	Identifier	diff		10988642	1					
ANR	10988656	IdentifierDeclStatement	"int i , j = 0 ;"	776:4:24846:24856	10988642	1	True				
ANR	10988657	IdentifierDecl	i		10988642	0					
ANR	10988658	IdentifierDeclType	int		10988642	0					
ANR	10988659	Identifier	i		10988642	1					
ANR	10988660	IdentifierDecl	j = 0		10988642	1					
ANR	10988661	IdentifierDeclType	int		10988642	0					
ANR	10988662	Identifier	j		10988642	1					
ANR	10988663	AssignmentExpression	j = 0		10988642	2		=			
ANR	10988664	Identifier	j		10988642	0					
ANR	10988665	PrimaryExpression	0		10988642	1					
ANR	10988666	ExpressionStatement	v = 1.0	778:4:24863:24870	10988642	2	True				
ANR	10988667	AssignmentExpression	v = 1.0		10988642	0		=			
ANR	10988668	Identifier	v		10988642	0					
ANR	10988669	PrimaryExpression	1.0		10988642	1					
ANR	10988670	ForStatement	for ( i = 0 ; i < 3 ; i ++ )		10988642	3					
ANR	10988671	ForInit	i = 0 ;	779:9:24881:24884	10988642	0	True				
ANR	10988672	AssignmentExpression	i = 0		10988642	0		=			
ANR	10988673	Identifier	i		10988642	0					
ANR	10988674	PrimaryExpression	0		10988642	1					
ANR	10988675	Condition	i < 3	779:13:24885:24887	10988642	1	True				
ANR	10988676	RelationalExpression	i < 3		10988642	0		<			
ANR	10988677	Identifier	i		10988642	0					
ANR	10988678	PrimaryExpression	3		10988642	1					
ANR	10988679	PostIncDecOperationExpression	i ++	779:17:24889:24891	10988642	2	True				
ANR	10988680	Identifier	i		10988642	0					
ANR	10988681	IncDec	++		10988642	1					
ANR	10988682	ExpressionStatement	HSB [ i ] = 0.0	780:8:24902:24914	10988642	3	True				
ANR	10988683	AssignmentExpression	HSB [ i ] = 0.0		10988642	0		=			
ANR	10988684	ArrayIndexing	HSB [ i ]		10988642	0					
ANR	10988685	Identifier	HSB		10988642	0					
ANR	10988686	Identifier	i		10988642	1					
ANR	10988687	PrimaryExpression	0.0		10988642	1					
ANR	10988688	ForStatement	for ( i = 0 ; i < 3 ; i ++ )		10988642	4					
ANR	10988689	ForInit	i = 0 ;	781:9:24925:24928	10988642	0	True				
ANR	10988690	AssignmentExpression	i = 0		10988642	0		=			
ANR	10988691	Identifier	i		10988642	0					
ANR	10988692	PrimaryExpression	0		10988642	1					
ANR	10988693	Condition	i < 3	781:13:24929:24931	10988642	1	True				
ANR	10988694	RelationalExpression	i < 3		10988642	0		<			
ANR	10988695	Identifier	i		10988642	0					
ANR	10988696	PrimaryExpression	3		10988642	1					
ANR	10988697	PostIncDecOperationExpression	i ++	781:17:24933:24935	10988642	2	True				
ANR	10988698	Identifier	i		10988642	0					
ANR	10988699	IncDec	++		10988642	1					
ANR	10988700	CompoundStatement		8:22:124:124	10988642	3					
ANR	10988701	IfStatement	if ( RGB [ i ] > HSB [ 2 ] )		10988642	0					
ANR	10988702	Condition	RGB [ i ] > HSB [ 2 ]	782:12:24952:24966	10988642	0	True				
ANR	10988703	RelationalExpression	RGB [ i ] > HSB [ 2 ]		10988642	0		>			
ANR	10988704	ArrayIndexing	RGB [ i ]		10988642	0					
ANR	10988705	Identifier	RGB		10988642	0					
ANR	10988706	Identifier	i		10988642	1					
ANR	10988707	ArrayIndexing	HSB [ 2 ]		10988642	1					
ANR	10988708	Identifier	HSB		10988642	0					
ANR	10988709	PrimaryExpression	2		10988642	1					
ANR	10988710	CompoundStatement		9:29:155:155	10988642	1					
ANR	10988711	ExpressionStatement	HSB [ 2 ] = RGB [ i ]	783:12:24983:24998	10988642	0	True				
ANR	10988712	AssignmentExpression	HSB [ 2 ] = RGB [ i ]		10988642	0		=			
ANR	10988713	ArrayIndexing	HSB [ 2 ]		10988642	0					
ANR	10988714	Identifier	HSB		10988642	0					
ANR	10988715	PrimaryExpression	2		10988642	1					
ANR	10988716	ArrayIndexing	RGB [ i ]		10988642	1					
ANR	10988717	Identifier	RGB		10988642	0					
ANR	10988718	Identifier	i		10988642	1					
ANR	10988719	ExpressionStatement	j = i	784:12:25012:25017	10988642	1	True				
ANR	10988720	AssignmentExpression	j = i		10988642	0		=			
ANR	10988721	Identifier	j		10988642	0					
ANR	10988722	Identifier	i		10988642	1					
ANR	10988723	IfStatement	if ( RGB [ i ] < v )		10988642	1					
ANR	10988724	Condition	RGB [ i ] < v	786:12:25041:25050	10988642	0	True				
ANR	10988725	RelationalExpression	RGB [ i ] < v		10988642	0		<			
ANR	10988726	ArrayIndexing	RGB [ i ]		10988642	0					
ANR	10988727	Identifier	RGB		10988642	0					
ANR	10988728	Identifier	i		10988642	1					
ANR	10988729	Identifier	v		10988642	1					
ANR	10988730	ExpressionStatement	v = RGB [ i ]	787:12:25065:25075	10988642	1	True				
ANR	10988731	AssignmentExpression	v = RGB [ i ]		10988642	0		=			
ANR	10988732	Identifier	v		10988642	0					
ANR	10988733	ArrayIndexing	RGB [ i ]		10988642	1					
ANR	10988734	Identifier	RGB		10988642	0					
ANR	10988735	Identifier	i		10988642	1					
ANR	10988736	IfStatement	if ( HSB [ 2 ] != 0 )		10988642	5					
ANR	10988737	Condition	HSB [ 2 ] != 0	789:8:25091:25101	10988642	0	True				
ANR	10988738	EqualityExpression	HSB [ 2 ] != 0		10988642	0		!=			
ANR	10988739	ArrayIndexing	HSB [ 2 ]		10988642	0					
ANR	10988740	Identifier	HSB		10988642	0					
ANR	10988741	PrimaryExpression	2		10988642	1					
ANR	10988742	PrimaryExpression	0		10988642	1					
ANR	10988743	CompoundStatement		16:21:290:290	10988642	1					
ANR	10988744	ExpressionStatement	diff = HSB [ 2 ] - v	790:8:25114:25131	10988642	0	True				
ANR	10988745	AssignmentExpression	diff = HSB [ 2 ] - v		10988642	0		=			
ANR	10988746	Identifier	diff		10988642	0					
ANR	10988747	AdditiveExpression	HSB [ 2 ] - v		10988642	1		-			
ANR	10988748	ArrayIndexing	HSB [ 2 ]		10988642	0					
ANR	10988749	Identifier	HSB		10988642	0					
ANR	10988750	PrimaryExpression	2		10988642	1					
ANR	10988751	Identifier	v		10988642	1					
ANR	10988752	ExpressionStatement	HSB [ 1 ] = diff / HSB [ 2 ]	791:8:25141:25163	10988642	1	True				
ANR	10988753	AssignmentExpression	HSB [ 1 ] = diff / HSB [ 2 ]		10988642	0		=			
ANR	10988754	ArrayIndexing	HSB [ 1 ]		10988642	0					
ANR	10988755	Identifier	HSB		10988642	0					
ANR	10988756	PrimaryExpression	1		10988642	1					
ANR	10988757	MultiplicativeExpression	diff / HSB [ 2 ]		10988642	1		/			
ANR	10988758	Identifier	diff		10988642	0					
ANR	10988759	ArrayIndexing	HSB [ 2 ]		10988642	1					
ANR	10988760	Identifier	HSB		10988642	0					
ANR	10988761	PrimaryExpression	2		10988642	1					
ANR	10988762	SwitchStatement	switch ( j )		10988642	2					
ANR	10988763	Condition	j	792:16:25181:25181	10988642	0	True				
ANR	10988764	Identifier	j		10988642	0					
ANR	10988765	CompoundStatement		19:19:370:370	10988642	1					
ANR	10988766	Label	case 0 :	793:12:25198:25205	10988642	0	True				
ANR	10988767	IfStatement	if ( diff )		10988642	1					
ANR	10988768	Condition	diff	797:20:25394:25397	10988642	0	True				
ANR	10988769	Identifier	diff		10988642	0					
ANR	10988770	ExpressionStatement	HSB [ 0 ] = ( ( RGB [ 1 ] - RGB [ 2 ] ) / ( 6.0 * diff ) ) + ( RGB [ 2 ] > RGB [ 1 ] ? 1.0 : 0.0 )	798:20:25420:25495	10988642	1	True				
ANR	10988771	AssignmentExpression	HSB [ 0 ] = ( ( RGB [ 1 ] - RGB [ 2 ] ) / ( 6.0 * diff ) ) + ( RGB [ 2 ] > RGB [ 1 ] ? 1.0 : 0.0 )		10988642	0		=			
ANR	10988772	ArrayIndexing	HSB [ 0 ]		10988642	0					
ANR	10988773	Identifier	HSB		10988642	0					
ANR	10988774	PrimaryExpression	0		10988642	1					
ANR	10988775	AdditiveExpression	( ( RGB [ 1 ] - RGB [ 2 ] ) / ( 6.0 * diff ) ) + ( RGB [ 2 ] > RGB [ 1 ] ? 1.0 : 0.0 )		10988642	1		+			
ANR	10988776	MultiplicativeExpression	( RGB [ 1 ] - RGB [ 2 ] ) / ( 6.0 * diff )		10988642	0		/			
ANR	10988777	AdditiveExpression	RGB [ 1 ] - RGB [ 2 ]		10988642	0		-			
ANR	10988778	ArrayIndexing	RGB [ 1 ]		10988642	0					
ANR	10988779	Identifier	RGB		10988642	0					
ANR	10988780	PrimaryExpression	1		10988642	1					
ANR	10988781	ArrayIndexing	RGB [ 2 ]		10988642	1					
ANR	10988782	Identifier	RGB		10988642	0					
ANR	10988783	PrimaryExpression	2		10988642	1					
ANR	10988784	MultiplicativeExpression	6.0 * diff		10988642	1		*			
ANR	10988785	PrimaryExpression	6.0		10988642	0					
ANR	10988786	Identifier	diff		10988642	1					
ANR	10988787	ConditionalExpression	RGB [ 2 ] > RGB [ 1 ] ? 1.0 : 0.0		10988642	1					
ANR	10988788	Condition	RGB [ 2 ] > RGB [ 1 ]		10988642	0					
ANR	10988789	RelationalExpression	RGB [ 2 ] > RGB [ 1 ]		10988642	0		>			
ANR	10988790	ArrayIndexing	RGB [ 2 ]		10988642	0					
ANR	10988791	Identifier	RGB		10988642	0					
ANR	10988792	PrimaryExpression	2		10988642	1					
ANR	10988793	ArrayIndexing	RGB [ 1 ]		10988642	1					
ANR	10988794	Identifier	RGB		10988642	0					
ANR	10988795	PrimaryExpression	1		10988642	1					
ANR	10988796	PrimaryExpression	1.0		10988642	1					
ANR	10988797	PrimaryExpression	0.0		10988642	2					
ANR	10988798	ElseStatement	else		10988642	0					
ANR	10988799	ExpressionStatement	HSB [ 0 ] = ( RGB [ 1 ] - RGB [ 2 ] ) + ( RGB [ 2 ] > RGB [ 1 ] ? 1.0 : 0.0 )	800:20:25538:25596	10988642	0	True				
ANR	10988800	AssignmentExpression	HSB [ 0 ] = ( RGB [ 1 ] - RGB [ 2 ] ) + ( RGB [ 2 ] > RGB [ 1 ] ? 1.0 : 0.0 )		10988642	0		=			
ANR	10988801	ArrayIndexing	HSB [ 0 ]		10988642	0					
ANR	10988802	Identifier	HSB		10988642	0					
ANR	10988803	PrimaryExpression	0		10988642	1					
ANR	10988804	AdditiveExpression	( RGB [ 1 ] - RGB [ 2 ] ) + ( RGB [ 2 ] > RGB [ 1 ] ? 1.0 : 0.0 )		10988642	1		+			
ANR	10988805	AdditiveExpression	RGB [ 1 ] - RGB [ 2 ]		10988642	0		-			
ANR	10988806	ArrayIndexing	RGB [ 1 ]		10988642	0					
ANR	10988807	Identifier	RGB		10988642	0					
ANR	10988808	PrimaryExpression	1		10988642	1					
ANR	10988809	ArrayIndexing	RGB [ 2 ]		10988642	1					
ANR	10988810	Identifier	RGB		10988642	0					
ANR	10988811	PrimaryExpression	2		10988642	1					
ANR	10988812	ConditionalExpression	RGB [ 2 ] > RGB [ 1 ] ? 1.0 : 0.0		10988642	1					
ANR	10988813	Condition	RGB [ 2 ] > RGB [ 1 ]		10988642	0					
ANR	10988814	RelationalExpression	RGB [ 2 ] > RGB [ 1 ]		10988642	0		>			
ANR	10988815	ArrayIndexing	RGB [ 2 ]		10988642	0					
ANR	10988816	Identifier	RGB		10988642	0					
ANR	10988817	PrimaryExpression	2		10988642	1					
ANR	10988818	ArrayIndexing	RGB [ 1 ]		10988642	1					
ANR	10988819	Identifier	RGB		10988642	0					
ANR	10988820	PrimaryExpression	1		10988642	1					
ANR	10988821	PrimaryExpression	1.0		10988642	1					
ANR	10988822	PrimaryExpression	0.0		10988642	2					
ANR	10988823	BreakStatement	break ;	801:16:25614:25619	10988642	2	True				
ANR	10988824	Label	case 1 :	802:12:25633:25640	10988642	3	True				
ANR	10988825	ExpressionStatement	HSB [ 0 ] = ( 1.0 / 3.0 ) + ( RGB [ 2 ] - RGB [ 0 ] ) / ( 6.0 * diff )	803:16:25680:25735	10988642	4	True				
ANR	10988826	AssignmentExpression	HSB [ 0 ] = ( 1.0 / 3.0 ) + ( RGB [ 2 ] - RGB [ 0 ] ) / ( 6.0 * diff )		10988642	0		=			
ANR	10988827	ArrayIndexing	HSB [ 0 ]		10988642	0					
ANR	10988828	Identifier	HSB		10988642	0					
ANR	10988829	PrimaryExpression	0		10988642	1					
ANR	10988830	AdditiveExpression	( 1.0 / 3.0 ) + ( RGB [ 2 ] - RGB [ 0 ] ) / ( 6.0 * diff )		10988642	1		+			
ANR	10988831	MultiplicativeExpression	1.0 / 3.0		10988642	0		/			
ANR	10988832	PrimaryExpression	1.0		10988642	0					
ANR	10988833	PrimaryExpression	3.0		10988642	1					
ANR	10988834	MultiplicativeExpression	( RGB [ 2 ] - RGB [ 0 ] ) / ( 6.0 * diff )		10988642	1		/			
ANR	10988835	AdditiveExpression	RGB [ 2 ] - RGB [ 0 ]		10988642	0		-			
ANR	10988836	ArrayIndexing	RGB [ 2 ]		10988642	0					
ANR	10988837	Identifier	RGB		10988642	0					
ANR	10988838	PrimaryExpression	2		10988642	1					
ANR	10988839	ArrayIndexing	RGB [ 0 ]		10988642	1					
ANR	10988840	Identifier	RGB		10988642	0					
ANR	10988841	PrimaryExpression	0		10988642	1					
ANR	10988842	MultiplicativeExpression	6.0 * diff		10988642	1		*			
ANR	10988843	PrimaryExpression	6.0		10988642	0					
ANR	10988844	Identifier	diff		10988642	1					
ANR	10988845	BreakStatement	break ;	804:16:25753:25758	10988642	5	True				
ANR	10988846	Label	case 2 :	805:12:25772:25779	10988642	6	True				
ANR	10988847	ExpressionStatement	HSB [ 0 ] = ( 2.0 / 3.0 ) + ( RGB [ 0 ] - RGB [ 1 ] ) / ( 6.0 * diff )	806:16:25819:25874	10988642	7	True				
ANR	10988848	AssignmentExpression	HSB [ 0 ] = ( 2.0 / 3.0 ) + ( RGB [ 0 ] - RGB [ 1 ] ) / ( 6.0 * diff )		10988642	0		=			
ANR	10988849	ArrayIndexing	HSB [ 0 ]		10988642	0					
ANR	10988850	Identifier	HSB		10988642	0					
ANR	10988851	PrimaryExpression	0		10988642	1					
ANR	10988852	AdditiveExpression	( 2.0 / 3.0 ) + ( RGB [ 0 ] - RGB [ 1 ] ) / ( 6.0 * diff )		10988642	1		+			
ANR	10988853	MultiplicativeExpression	2.0 / 3.0		10988642	0		/			
ANR	10988854	PrimaryExpression	2.0		10988642	0					
ANR	10988855	PrimaryExpression	3.0		10988642	1					
ANR	10988856	MultiplicativeExpression	( RGB [ 0 ] - RGB [ 1 ] ) / ( 6.0 * diff )		10988642	1		/			
ANR	10988857	AdditiveExpression	RGB [ 0 ] - RGB [ 1 ]		10988642	0		-			
ANR	10988858	ArrayIndexing	RGB [ 0 ]		10988642	0					
ANR	10988859	Identifier	RGB		10988642	0					
ANR	10988860	PrimaryExpression	0		10988642	1					
ANR	10988861	ArrayIndexing	RGB [ 1 ]		10988642	1					
ANR	10988862	Identifier	RGB		10988642	0					
ANR	10988863	PrimaryExpression	1		10988642	1					
ANR	10988864	MultiplicativeExpression	6.0 * diff		10988642	1		*			
ANR	10988865	PrimaryExpression	6.0		10988642	0					
ANR	10988866	Identifier	diff		10988642	1					
ANR	10988867	BreakStatement	break ;	807:16:25892:25897	10988642	8	True				
ANR	10988868	ForStatement	for ( i = 0 ; i < 3 ; i ++ )		10988642	6					
ANR	10988869	ForInit	i = 0 ;	810:9:25924:25927	10988642	0	True				
ANR	10988870	AssignmentExpression	i = 0		10988642	0		=			
ANR	10988871	Identifier	i		10988642	0					
ANR	10988872	PrimaryExpression	0		10988642	1					
ANR	10988873	Condition	i < 3	810:13:25928:25930	10988642	1	True				
ANR	10988874	RelationalExpression	i < 3		10988642	0		<			
ANR	10988875	Identifier	i		10988642	0					
ANR	10988876	PrimaryExpression	3		10988642	1					
ANR	10988877	PostIncDecOperationExpression	i ++	810:17:25932:25934	10988642	2	True				
ANR	10988878	Identifier	i		10988642	0					
ANR	10988879	IncDec	++		10988642	1					
ANR	10988880	CompoundStatement		37:22:1123:1123	10988642	3					
ANR	10988881	IfStatement	if ( HSB [ i ] < 0 )		10988642	0					
ANR	10988882	Condition	HSB [ i ] < 0	811:12:25951:25960	10988642	0	True				
ANR	10988883	RelationalExpression	HSB [ i ] < 0		10988642	0		<			
ANR	10988884	ArrayIndexing	HSB [ i ]		10988642	0					
ANR	10988885	Identifier	HSB		10988642	0					
ANR	10988886	Identifier	i		10988642	1					
ANR	10988887	PrimaryExpression	0		10988642	1					
ANR	10988888	ExpressionStatement	HSB [ i ] = 0	812:12:25975:25985	10988642	1	True				
ANR	10988889	AssignmentExpression	HSB [ i ] = 0		10988642	0		=			
ANR	10988890	ArrayIndexing	HSB [ i ]		10988642	0					
ANR	10988891	Identifier	HSB		10988642	0					
ANR	10988892	Identifier	i		10988642	1					
ANR	10988893	PrimaryExpression	0		10988642	1					
ANR	10988894	IfStatement	if ( RGB [ i ] > 1 )		10988642	1					
ANR	10988895	Condition	RGB [ i ] > 1	813:12:25999:26008	10988642	0	True				
ANR	10988896	RelationalExpression	RGB [ i ] > 1		10988642	0		>			
ANR	10988897	ArrayIndexing	RGB [ i ]		10988642	0					
ANR	10988898	Identifier	RGB		10988642	0					
ANR	10988899	Identifier	i		10988642	1					
ANR	10988900	PrimaryExpression	1		10988642	1					
ANR	10988901	ExpressionStatement	HSB [ i ] = 1	814:12:26023:26033	10988642	1	True				
ANR	10988902	AssignmentExpression	HSB [ i ] = 1		10988642	0		=			
ANR	10988903	ArrayIndexing	HSB [ i ]		10988642	0					
ANR	10988904	Identifier	HSB		10988642	0					
ANR	10988905	Identifier	i		10988642	1					
ANR	10988906	PrimaryExpression	1		10988642	1					
ANR	10988907	ExpressionStatement	RGB [ i ] = HSB [ i ]	815:8:26043:26058	10988642	2	True				
ANR	10988908	AssignmentExpression	RGB [ i ] = HSB [ i ]		10988642	0		=			
ANR	10988909	ArrayIndexing	RGB [ i ]		10988642	0					
ANR	10988910	Identifier	RGB		10988642	0					
ANR	10988911	Identifier	i		10988642	1					
ANR	10988912	ArrayIndexing	HSB [ i ]		10988642	1					
ANR	10988913	Identifier	HSB		10988642	0					
ANR	10988914	Identifier	i		10988642	1					
ANR	10988915	ReturnStatement	return 0 ;	817:4:26070:26078	10988642	7	True				
ANR	10988916	PrimaryExpression	0		10988642	0					
ANR	10988917	ReturnType	static int		10988642	1					
ANR	10988918	Identifier	rgb2hsb		10988642	2					
ANR	10988919	ParameterList	float * RGB		10988642	3					
ANR	10988920	Parameter	float * RGB	773:19:24801:24810	10988642	0	True				
ANR	10988921	ParameterType	float *		10988642	0					
ANR	10988922	Identifier	RGB		10988642	1					
ANR	10988923	CFGEntryNode	ENTRY		10988642		True				
ANR	10988924	CFGExitNode	EXIT		10988642		True				
ANR	10988925	Symbol	* i		10988642						
ANR	10988926	Symbol	HSB		10988642						
ANR	10988927	Symbol	v		10988642						
ANR	10988928	Symbol	* RGB		10988642						
ANR	10988929	Symbol	i		10988642						
ANR	10988930	Symbol	diff		10988642						
ANR	10988931	Symbol	j		10988642						
ANR	10988932	Symbol	RGB		10988642						
ANR	10988933	Symbol	* HSB		10988642						
ANR	10988934	Function	hsb2rgb	869:0:27160:28514							
ANR	10988935	FunctionDef	hsb2rgb (float * HSB)		10988934	0					
ANR	10988936	CompoundStatement		870:0:27191:28514	10988934	0					
ANR	10988937	IdentifierDeclStatement	"float RGB [ 3 ] , mn , md ;"	871:4:27197:27217	10988934	0	True				
ANR	10988938	IdentifierDecl	RGB [ 3 ]		10988934	0					
ANR	10988939	IdentifierDeclType	float [ 3 ]		10988934	0					
ANR	10988940	Identifier	RGB		10988934	1					
ANR	10988941	PrimaryExpression	3		10988934	2					
ANR	10988942	IdentifierDecl	mn		10988934	1					
ANR	10988943	IdentifierDeclType	float		10988934	0					
ANR	10988944	Identifier	mn		10988934	1					
ANR	10988945	IdentifierDecl	md		10988934	2					
ANR	10988946	IdentifierDeclType	float		10988934	0					
ANR	10988947	Identifier	md		10988934	1					
ANR	10988948	IdentifierDeclStatement	int i ;	872:4:27223:27228	10988934	1	True				
ANR	10988949	IdentifierDecl	i		10988934	0					
ANR	10988950	IdentifierDeclType	int		10988934	0					
ANR	10988951	Identifier	i		10988934	1					
ANR	10988952	ExpressionStatement	mn = ( 1.0 - HSB [ 1 ] ) * HSB [ 2 ]	874:4:27235:27263	10988934	2	True				
ANR	10988953	AssignmentExpression	mn = ( 1.0 - HSB [ 1 ] ) * HSB [ 2 ]		10988934	0		=			
ANR	10988954	Identifier	mn		10988934	0					
ANR	10988955	MultiplicativeExpression	( 1.0 - HSB [ 1 ] ) * HSB [ 2 ]		10988934	1		*			
ANR	10988956	AdditiveExpression	1.0 - HSB [ 1 ]		10988934	0		-			
ANR	10988957	PrimaryExpression	1.0		10988934	0					
ANR	10988958	ArrayIndexing	HSB [ 1 ]		10988934	1					
ANR	10988959	Identifier	HSB		10988934	0					
ANR	10988960	PrimaryExpression	1		10988934	1					
ANR	10988961	ArrayIndexing	HSB [ 2 ]		10988934	1					
ANR	10988962	Identifier	HSB		10988934	0					
ANR	10988963	PrimaryExpression	2		10988934	1					
ANR	10988964	ExpressionStatement	md = 6.0 * HSB [ 1 ] * HSB [ 2 ]	875:4:27269:27295	10988934	3	True				
ANR	10988965	AssignmentExpression	md = 6.0 * HSB [ 1 ] * HSB [ 2 ]		10988934	0		=			
ANR	10988966	Identifier	md		10988934	0					
ANR	10988967	MultiplicativeExpression	6.0 * HSB [ 1 ] * HSB [ 2 ]		10988934	1		*			
ANR	10988968	PrimaryExpression	6.0		10988934	0					
ANR	10988969	MultiplicativeExpression	HSB [ 1 ] * HSB [ 2 ]		10988934	1		*			
ANR	10988970	ArrayIndexing	HSB [ 1 ]		10988934	0					
ANR	10988971	Identifier	HSB		10988934	0					
ANR	10988972	PrimaryExpression	1		10988934	1					
ANR	10988973	ArrayIndexing	HSB [ 2 ]		10988934	1					
ANR	10988974	Identifier	HSB		10988934	0					
ANR	10988975	PrimaryExpression	2		10988934	1					
ANR	10988976	SwitchStatement	switch ( ( int ) floor ( 6.0 * HSB [ 0 ] ) )		10988934	4					
ANR	10988977	Condition	( int ) floor ( 6.0 * HSB [ 0 ] )	877:12:27310:27333	10988934	0	True				
ANR	10988978	CastExpression	( int ) floor ( 6.0 * HSB [ 0 ] )		10988934	0					
ANR	10988979	CastTarget	int		10988934	0					
ANR	10988980	CallExpression	floor ( 6.0 * HSB [ 0 ] )		10988934	1					
ANR	10988981	Callee	floor		10988934	0					
ANR	10988982	Identifier	floor		10988934	0					
ANR	10988983	ArgumentList	6.0 * HSB [ 0 ]		10988934	1					
ANR	10988984	Argument	6.0 * HSB [ 0 ]		10988934	0					
ANR	10988985	MultiplicativeExpression	6.0 * HSB [ 0 ]		10988934	0		*			
ANR	10988986	PrimaryExpression	6.0		10988934	0					
ANR	10988987	ArrayIndexing	HSB [ 0 ]		10988934	1					
ANR	10988988	Identifier	HSB		10988934	0					
ANR	10988989	PrimaryExpression	0		10988934	1					
ANR	10988990	CompoundStatement		8:38:144:144	10988934	1					
ANR	10988991	Label	case 6 :	878:8:27346:27352	10988934	0	True				
ANR	10988992	ExpressionStatement	HSB [ 0 ] = ( float ) 0	879:12:27366:27383	10988934	1	True				
ANR	10988993	AssignmentExpression	HSB [ 0 ] = ( float ) 0		10988934	0		=			
ANR	10988994	ArrayIndexing	HSB [ 0 ]		10988934	0					
ANR	10988995	Identifier	HSB		10988934	0					
ANR	10988996	PrimaryExpression	0		10988934	1					
ANR	10988997	CastExpression	( float ) 0		10988934	1					
ANR	10988998	CastTarget	float		10988934	0					
ANR	10988999	PrimaryExpression	0		10988934	1					
ANR	10989000	Label	default :	881:8:27424:27431	10988934	2	True				
ANR	10989001	Identifier	default		10988934	0					
ANR	10989002	Label	case 0 :	882:8:27498:27504	10988934	3	True				
ANR	10989003	ExpressionStatement	RGB [ 0 ] = HSB [ 2 ]	883:12:27518:27533	10988934	4	True				
ANR	10989004	AssignmentExpression	RGB [ 0 ] = HSB [ 2 ]		10988934	0		=			
ANR	10989005	ArrayIndexing	RGB [ 0 ]		10988934	0					
ANR	10989006	Identifier	RGB		10988934	0					
ANR	10989007	PrimaryExpression	0		10988934	1					
ANR	10989008	ArrayIndexing	HSB [ 2 ]		10988934	1					
ANR	10989009	Identifier	HSB		10988934	0					
ANR	10989010	PrimaryExpression	2		10988934	1					
ANR	10989011	ExpressionStatement	RGB [ 1 ] = mn + ( HSB [ 0 ] * md )	884:12:27547:27574	10988934	5	True				
ANR	10989012	AssignmentExpression	RGB [ 1 ] = mn + ( HSB [ 0 ] * md )		10988934	0		=			
ANR	10989013	ArrayIndexing	RGB [ 1 ]		10988934	0					
ANR	10989014	Identifier	RGB		10988934	0					
ANR	10989015	PrimaryExpression	1		10988934	1					
ANR	10989016	AdditiveExpression	mn + ( HSB [ 0 ] * md )		10988934	1		+			
ANR	10989017	Identifier	mn		10988934	0					
ANR	10989018	MultiplicativeExpression	HSB [ 0 ] * md		10988934	1		*			
ANR	10989019	ArrayIndexing	HSB [ 0 ]		10988934	0					
ANR	10989020	Identifier	HSB		10988934	0					
ANR	10989021	PrimaryExpression	0		10988934	1					
ANR	10989022	Identifier	md		10988934	1					
ANR	10989023	ExpressionStatement	RGB [ 2 ] = mn	885:12:27588:27599	10988934	6	True				
ANR	10989024	AssignmentExpression	RGB [ 2 ] = mn		10988934	0		=			
ANR	10989025	ArrayIndexing	RGB [ 2 ]		10988934	0					
ANR	10989026	Identifier	RGB		10988934	0					
ANR	10989027	PrimaryExpression	2		10988934	1					
ANR	10989028	Identifier	mn		10988934	1					
ANR	10989029	BreakStatement	break ;	886:12:27613:27618	10988934	7	True				
ANR	10989030	Label	case 1 :	887:8:27628:27634	10988934	8	True				
ANR	10989031	ExpressionStatement	RGB [ 0 ] = mn + ( md * ( ( 1.0 / 3.0 ) - HSB [ 0 ] ) )	888:12:27648:27691	10988934	9	True				
ANR	10989032	AssignmentExpression	RGB [ 0 ] = mn + ( md * ( ( 1.0 / 3.0 ) - HSB [ 0 ] ) )		10988934	0		=			
ANR	10989033	ArrayIndexing	RGB [ 0 ]		10988934	0					
ANR	10989034	Identifier	RGB		10988934	0					
ANR	10989035	PrimaryExpression	0		10988934	1					
ANR	10989036	AdditiveExpression	mn + ( md * ( ( 1.0 / 3.0 ) - HSB [ 0 ] ) )		10988934	1		+			
ANR	10989037	Identifier	mn		10988934	0					
ANR	10989038	MultiplicativeExpression	md * ( ( 1.0 / 3.0 ) - HSB [ 0 ] )		10988934	1		*			
ANR	10989039	Identifier	md		10988934	0					
ANR	10989040	AdditiveExpression	( 1.0 / 3.0 ) - HSB [ 0 ]		10988934	1		-			
ANR	10989041	MultiplicativeExpression	1.0 / 3.0		10988934	0		/			
ANR	10989042	PrimaryExpression	1.0		10988934	0					
ANR	10989043	PrimaryExpression	3.0		10988934	1					
ANR	10989044	ArrayIndexing	HSB [ 0 ]		10988934	1					
ANR	10989045	Identifier	HSB		10988934	0					
ANR	10989046	PrimaryExpression	0		10988934	1					
ANR	10989047	ExpressionStatement	RGB [ 1 ] = HSB [ 2 ]	889:12:27705:27720	10988934	10	True				
ANR	10989048	AssignmentExpression	RGB [ 1 ] = HSB [ 2 ]		10988934	0		=			
ANR	10989049	ArrayIndexing	RGB [ 1 ]		10988934	0					
ANR	10989050	Identifier	RGB		10988934	0					
ANR	10989051	PrimaryExpression	1		10988934	1					
ANR	10989052	ArrayIndexing	HSB [ 2 ]		10988934	1					
ANR	10989053	Identifier	HSB		10988934	0					
ANR	10989054	PrimaryExpression	2		10988934	1					
ANR	10989055	ExpressionStatement	RGB [ 2 ] = mn	890:12:27734:27745	10988934	11	True				
ANR	10989056	AssignmentExpression	RGB [ 2 ] = mn		10988934	0		=			
ANR	10989057	ArrayIndexing	RGB [ 2 ]		10988934	0					
ANR	10989058	Identifier	RGB		10988934	0					
ANR	10989059	PrimaryExpression	2		10988934	1					
ANR	10989060	Identifier	mn		10988934	1					
ANR	10989061	BreakStatement	break ;	891:12:27759:27764	10988934	12	True				
ANR	10989062	Label	case 2 :	892:8:27774:27780	10988934	13	True				
ANR	10989063	ExpressionStatement	RGB [ 0 ] = mn	893:12:27794:27805	10988934	14	True				
ANR	10989064	AssignmentExpression	RGB [ 0 ] = mn		10988934	0		=			
ANR	10989065	ArrayIndexing	RGB [ 0 ]		10988934	0					
ANR	10989066	Identifier	RGB		10988934	0					
ANR	10989067	PrimaryExpression	0		10988934	1					
ANR	10989068	Identifier	mn		10988934	1					
ANR	10989069	ExpressionStatement	RGB [ 1 ] = HSB [ 2 ]	894:12:27819:27834	10988934	15	True				
ANR	10989070	AssignmentExpression	RGB [ 1 ] = HSB [ 2 ]		10988934	0		=			
ANR	10989071	ArrayIndexing	RGB [ 1 ]		10988934	0					
ANR	10989072	Identifier	RGB		10988934	0					
ANR	10989073	PrimaryExpression	1		10988934	1					
ANR	10989074	ArrayIndexing	HSB [ 2 ]		10988934	1					
ANR	10989075	Identifier	HSB		10988934	0					
ANR	10989076	PrimaryExpression	2		10988934	1					
ANR	10989077	ExpressionStatement	RGB [ 2 ] = mn + ( ( HSB [ 0 ] - ( 1.0 / 3.0 ) ) * md )	895:12:27848:27891	10988934	16	True				
ANR	10989078	AssignmentExpression	RGB [ 2 ] = mn + ( ( HSB [ 0 ] - ( 1.0 / 3.0 ) ) * md )		10988934	0		=			
ANR	10989079	ArrayIndexing	RGB [ 2 ]		10988934	0					
ANR	10989080	Identifier	RGB		10988934	0					
ANR	10989081	PrimaryExpression	2		10988934	1					
ANR	10989082	AdditiveExpression	mn + ( ( HSB [ 0 ] - ( 1.0 / 3.0 ) ) * md )		10988934	1		+			
ANR	10989083	Identifier	mn		10988934	0					
ANR	10989084	MultiplicativeExpression	( HSB [ 0 ] - ( 1.0 / 3.0 ) ) * md		10988934	1		*			
ANR	10989085	AdditiveExpression	HSB [ 0 ] - ( 1.0 / 3.0 )		10988934	0		-			
ANR	10989086	ArrayIndexing	HSB [ 0 ]		10988934	0					
ANR	10989087	Identifier	HSB		10988934	0					
ANR	10989088	PrimaryExpression	0		10988934	1					
ANR	10989089	MultiplicativeExpression	1.0 / 3.0		10988934	1		/			
ANR	10989090	PrimaryExpression	1.0		10988934	0					
ANR	10989091	PrimaryExpression	3.0		10988934	1					
ANR	10989092	Identifier	md		10988934	1					
ANR	10989093	BreakStatement	break ;	896:12:27905:27910	10988934	17	True				
ANR	10989094	Label	case 3 :	897:8:27920:27926	10988934	18	True				
ANR	10989095	ExpressionStatement	RGB [ 0 ] = mn	898:12:27940:27951	10988934	19	True				
ANR	10989096	AssignmentExpression	RGB [ 0 ] = mn		10988934	0		=			
ANR	10989097	ArrayIndexing	RGB [ 0 ]		10988934	0					
ANR	10989098	Identifier	RGB		10988934	0					
ANR	10989099	PrimaryExpression	0		10988934	1					
ANR	10989100	Identifier	mn		10988934	1					
ANR	10989101	ExpressionStatement	RGB [ 1 ] = mn + ( ( ( 2.0 / 3.0f ) - HSB [ 0 ] ) * md )	899:12:27965:28009	10988934	20	True				
ANR	10989102	AssignmentExpression	RGB [ 1 ] = mn + ( ( ( 2.0 / 3.0f ) - HSB [ 0 ] ) * md )		10988934	0		=			
ANR	10989103	ArrayIndexing	RGB [ 1 ]		10988934	0					
ANR	10989104	Identifier	RGB		10988934	0					
ANR	10989105	PrimaryExpression	1		10988934	1					
ANR	10989106	AdditiveExpression	mn + ( ( ( 2.0 / 3.0f ) - HSB [ 0 ] ) * md )		10988934	1		+			
ANR	10989107	Identifier	mn		10988934	0					
ANR	10989108	MultiplicativeExpression	( ( 2.0 / 3.0f ) - HSB [ 0 ] ) * md		10988934	1		*			
ANR	10989109	AdditiveExpression	( 2.0 / 3.0f ) - HSB [ 0 ]		10988934	0		-			
ANR	10989110	MultiplicativeExpression	2.0 / 3.0f		10988934	0		/			
ANR	10989111	PrimaryExpression	2.0		10988934	0					
ANR	10989112	PrimaryExpression	3.0f		10988934	1					
ANR	10989113	ArrayIndexing	HSB [ 0 ]		10988934	1					
ANR	10989114	Identifier	HSB		10988934	0					
ANR	10989115	PrimaryExpression	0		10988934	1					
ANR	10989116	Identifier	md		10988934	1					
ANR	10989117	ExpressionStatement	RGB [ 2 ] = HSB [ 2 ]	900:12:28023:28038	10988934	21	True				
ANR	10989118	AssignmentExpression	RGB [ 2 ] = HSB [ 2 ]		10988934	0		=			
ANR	10989119	ArrayIndexing	RGB [ 2 ]		10988934	0					
ANR	10989120	Identifier	RGB		10988934	0					
ANR	10989121	PrimaryExpression	2		10988934	1					
ANR	10989122	ArrayIndexing	HSB [ 2 ]		10988934	1					
ANR	10989123	Identifier	HSB		10988934	0					
ANR	10989124	PrimaryExpression	2		10988934	1					
ANR	10989125	BreakStatement	break ;	901:12:28052:28057	10988934	22	True				
ANR	10989126	Label	case 4 :	902:8:28067:28073	10988934	23	True				
ANR	10989127	ExpressionStatement	RGB [ 0 ] = mn + ( ( HSB [ 0 ] - ( 2.0 / 3.0 ) ) * md )	903:12:28087:28130	10988934	24	True				
ANR	10989128	AssignmentExpression	RGB [ 0 ] = mn + ( ( HSB [ 0 ] - ( 2.0 / 3.0 ) ) * md )		10988934	0		=			
ANR	10989129	ArrayIndexing	RGB [ 0 ]		10988934	0					
ANR	10989130	Identifier	RGB		10988934	0					
ANR	10989131	PrimaryExpression	0		10988934	1					
ANR	10989132	AdditiveExpression	mn + ( ( HSB [ 0 ] - ( 2.0 / 3.0 ) ) * md )		10988934	1		+			
ANR	10989133	Identifier	mn		10988934	0					
ANR	10989134	MultiplicativeExpression	( HSB [ 0 ] - ( 2.0 / 3.0 ) ) * md		10988934	1		*			
ANR	10989135	AdditiveExpression	HSB [ 0 ] - ( 2.0 / 3.0 )		10988934	0		-			
ANR	10989136	ArrayIndexing	HSB [ 0 ]		10988934	0					
ANR	10989137	Identifier	HSB		10988934	0					
ANR	10989138	PrimaryExpression	0		10988934	1					
ANR	10989139	MultiplicativeExpression	2.0 / 3.0		10988934	1		/			
ANR	10989140	PrimaryExpression	2.0		10988934	0					
ANR	10989141	PrimaryExpression	3.0		10988934	1					
ANR	10989142	Identifier	md		10988934	1					
ANR	10989143	ExpressionStatement	RGB [ 1 ] = mn	904:12:28144:28155	10988934	25	True				
ANR	10989144	AssignmentExpression	RGB [ 1 ] = mn		10988934	0		=			
ANR	10989145	ArrayIndexing	RGB [ 1 ]		10988934	0					
ANR	10989146	Identifier	RGB		10988934	0					
ANR	10989147	PrimaryExpression	1		10988934	1					
ANR	10989148	Identifier	mn		10988934	1					
ANR	10989149	ExpressionStatement	RGB [ 2 ] = HSB [ 2 ]	905:12:28169:28184	10988934	26	True				
ANR	10989150	AssignmentExpression	RGB [ 2 ] = HSB [ 2 ]		10988934	0		=			
ANR	10989151	ArrayIndexing	RGB [ 2 ]		10988934	0					
ANR	10989152	Identifier	RGB		10988934	0					
ANR	10989153	PrimaryExpression	2		10988934	1					
ANR	10989154	ArrayIndexing	HSB [ 2 ]		10988934	1					
ANR	10989155	Identifier	HSB		10988934	0					
ANR	10989156	PrimaryExpression	2		10988934	1					
ANR	10989157	BreakStatement	break ;	906:12:28198:28203	10988934	27	True				
ANR	10989158	Label	case 5 :	907:8:28213:28219	10988934	28	True				
ANR	10989159	ExpressionStatement	RGB [ 0 ] = HSB [ 2 ]	908:12:28233:28248	10988934	29	True				
ANR	10989160	AssignmentExpression	RGB [ 0 ] = HSB [ 2 ]		10988934	0		=			
ANR	10989161	ArrayIndexing	RGB [ 0 ]		10988934	0					
ANR	10989162	Identifier	RGB		10988934	0					
ANR	10989163	PrimaryExpression	0		10988934	1					
ANR	10989164	ArrayIndexing	HSB [ 2 ]		10988934	1					
ANR	10989165	Identifier	HSB		10988934	0					
ANR	10989166	PrimaryExpression	2		10988934	1					
ANR	10989167	ExpressionStatement	RGB [ 1 ] = mn	909:12:28262:28273	10988934	30	True				
ANR	10989168	AssignmentExpression	RGB [ 1 ] = mn		10988934	0		=			
ANR	10989169	ArrayIndexing	RGB [ 1 ]		10988934	0					
ANR	10989170	Identifier	RGB		10988934	0					
ANR	10989171	PrimaryExpression	1		10988934	1					
ANR	10989172	Identifier	mn		10988934	1					
ANR	10989173	ExpressionStatement	RGB [ 2 ] = mn + ( ( 1.0 - HSB [ 0 ] ) * md )	910:12:28287:28322	10988934	31	True				
ANR	10989174	AssignmentExpression	RGB [ 2 ] = mn + ( ( 1.0 - HSB [ 0 ] ) * md )		10988934	0		=			
ANR	10989175	ArrayIndexing	RGB [ 2 ]		10988934	0					
ANR	10989176	Identifier	RGB		10988934	0					
ANR	10989177	PrimaryExpression	2		10988934	1					
ANR	10989178	AdditiveExpression	mn + ( ( 1.0 - HSB [ 0 ] ) * md )		10988934	1		+			
ANR	10989179	Identifier	mn		10988934	0					
ANR	10989180	MultiplicativeExpression	( 1.0 - HSB [ 0 ] ) * md		10988934	1		*			
ANR	10989181	AdditiveExpression	1.0 - HSB [ 0 ]		10988934	0		-			
ANR	10989182	PrimaryExpression	1.0		10988934	0					
ANR	10989183	ArrayIndexing	HSB [ 0 ]		10988934	1					
ANR	10989184	Identifier	HSB		10988934	0					
ANR	10989185	PrimaryExpression	0		10988934	1					
ANR	10989186	Identifier	md		10988934	1					
ANR	10989187	BreakStatement	break ;	911:12:28336:28341	10988934	32	True				
ANR	10989188	ForStatement	for ( i = 0 ; i < 3 ; i ++ )		10988934	5					
ANR	10989189	ForInit	i = 0 ;	913:9:28358:28361	10988934	0	True				
ANR	10989190	AssignmentExpression	i = 0		10988934	0		=			
ANR	10989191	Identifier	i		10988934	0					
ANR	10989192	PrimaryExpression	0		10988934	1					
ANR	10989193	Condition	i < 3	913:13:28362:28364	10988934	1	True				
ANR	10989194	RelationalExpression	i < 3		10988934	0		<			
ANR	10989195	Identifier	i		10988934	0					
ANR	10989196	PrimaryExpression	3		10988934	1					
ANR	10989197	PostIncDecOperationExpression	i ++	913:17:28366:28368	10988934	2	True				
ANR	10989198	Identifier	i		10988934	0					
ANR	10989199	IncDec	++		10988934	1					
ANR	10989200	CompoundStatement		44:22:1179:1179	10988934	3					
ANR	10989201	IfStatement	if ( RGB [ i ] < 0 )		10988934	0					
ANR	10989202	Condition	RGB [ i ] < 0	914:12:28385:28394	10988934	0	True				
ANR	10989203	RelationalExpression	RGB [ i ] < 0		10988934	0		<			
ANR	10989204	ArrayIndexing	RGB [ i ]		10988934	0					
ANR	10989205	Identifier	RGB		10988934	0					
ANR	10989206	Identifier	i		10988934	1					
ANR	10989207	PrimaryExpression	0		10988934	1					
ANR	10989208	ExpressionStatement	RGB [ i ] = 0	915:12:28409:28419	10988934	1	True				
ANR	10989209	AssignmentExpression	RGB [ i ] = 0		10988934	0		=			
ANR	10989210	ArrayIndexing	RGB [ i ]		10988934	0					
ANR	10989211	Identifier	RGB		10988934	0					
ANR	10989212	Identifier	i		10988934	1					
ANR	10989213	PrimaryExpression	0		10988934	1					
ANR	10989214	IfStatement	if ( RGB [ i ] > 1 )		10988934	1					
ANR	10989215	Condition	RGB [ i ] > 1	916:12:28433:28442	10988934	0	True				
ANR	10989216	RelationalExpression	RGB [ i ] > 1		10988934	0		>			
ANR	10989217	ArrayIndexing	RGB [ i ]		10988934	0					
ANR	10989218	Identifier	RGB		10988934	0					
ANR	10989219	Identifier	i		10988934	1					
ANR	10989220	PrimaryExpression	1		10988934	1					
ANR	10989221	ExpressionStatement	RGB [ i ] = 1	917:12:28457:28467	10988934	1	True				
ANR	10989222	AssignmentExpression	RGB [ i ] = 1		10988934	0		=			
ANR	10989223	ArrayIndexing	RGB [ i ]		10988934	0					
ANR	10989224	Identifier	RGB		10988934	0					
ANR	10989225	Identifier	i		10988934	1					
ANR	10989226	PrimaryExpression	1		10988934	1					
ANR	10989227	ExpressionStatement	HSB [ i ] = RGB [ i ]	918:8:28477:28492	10988934	2	True				
ANR	10989228	AssignmentExpression	HSB [ i ] = RGB [ i ]		10988934	0		=			
ANR	10989229	ArrayIndexing	HSB [ i ]		10988934	0					
ANR	10989230	Identifier	HSB		10988934	0					
ANR	10989231	Identifier	i		10988934	1					
ANR	10989232	ArrayIndexing	RGB [ i ]		10988934	1					
ANR	10989233	Identifier	RGB		10988934	0					
ANR	10989234	Identifier	i		10988934	1					
ANR	10989235	ReturnStatement	return 0 ;	920:4:28504:28512	10988934	6	True				
ANR	10989236	PrimaryExpression	0		10988934	0					
ANR	10989237	ReturnType	static int		10988934	1					
ANR	10989238	Identifier	hsb2rgb		10988934	2					
ANR	10989239	ParameterList	float * HSB		10988934	3					
ANR	10989240	Parameter	float * HSB	869:19:27179:27188	10988934	0	True				
ANR	10989241	ParameterType	float *		10988934	0					
ANR	10989242	Identifier	HSB		10988934	1					
ANR	10989243	CFGEntryNode	ENTRY		10988934		True				
ANR	10989244	CFGExitNode	EXIT		10988934		True				
ANR	10989245	Symbol	mn		10988934						
ANR	10989246	Symbol	* i		10988934						
ANR	10989247	Symbol	HSB		10988934						
ANR	10989248	Symbol	md		10988934						
ANR	10989249	Symbol	* RGB		10988934						
ANR	10989250	Symbol	i		10988934						
ANR	10989251	Symbol	RGB		10988934						
ANR	10989252	Symbol	floor		10988934						
ANR	10989253	Symbol	* HSB		10988934						
ANR	10989254	Function	setgrayspace	928:0:28636:33600							
ANR	10989255	FunctionDef	"setgrayspace (i_ctx_t * i_ctx_p , ref * r , int * stage , int * cont , int CIESubst)"		10989254	0					
ANR	10989256	CompoundStatement		929:0:28724:33600	10989254	0					
ANR	10989257	IdentifierDeclStatement	os_ptr op = osp ;	930:4:28730:28745	10989254	0	True				
ANR	10989258	IdentifierDecl	op = osp		10989254	0					
ANR	10989259	IdentifierDeclType	os_ptr		10989254	0					
ANR	10989260	Identifier	op		10989254	1					
ANR	10989261	AssignmentExpression	op = osp		10989254	2		=			
ANR	10989262	Identifier	osp		10989254	0					
ANR	10989263	Identifier	osp		10989254	1					
ANR	10989264	IdentifierDeclStatement	gs_color_space * pcs ;	931:4:28751:28771	10989254	1	True				
ANR	10989265	IdentifierDecl	* pcs		10989254	0					
ANR	10989266	IdentifierDeclType	gs_color_space *		10989254	0					
ANR	10989267	Identifier	pcs		10989254	1					
ANR	10989268	IdentifierDeclStatement	int code = 0 ;	932:4:28777:28787	10989254	2	True				
ANR	10989269	IdentifierDecl	code = 0		10989254	0					
ANR	10989270	IdentifierDeclType	int		10989254	0					
ANR	10989271	Identifier	code		10989254	1					
ANR	10989272	AssignmentExpression	code = 0		10989254	2		=			
ANR	10989273	Identifier	code		10989254	0					
ANR	10989274	PrimaryExpression	0		10989254	1					
ANR	10989275	IdentifierDeclStatement	ref stref ;	933:4:28793:28802	10989254	3	True				
ANR	10989276	IdentifierDecl	stref		10989254	0					
ANR	10989277	IdentifierDeclType	ref		10989254	0					
ANR	10989278	Identifier	stref		10989254	1					
ANR	10989279	DoStatement	do		10989254	4					
ANR	10989280	CompoundStatement		7:7:87:87	10989254	0					
ANR	10989281	SwitchStatement	switch ( * stage )		10989254	0					
ANR	10989282	Condition	* stage	936:16:28830:28835	10989254	0	True				
ANR	10989283	UnaryOperationExpression	* stage		10989254	0					
ANR	10989284	UnaryOperator	*		10989254	0					
ANR	10989285	Identifier	stage		10989254	1					
ANR	10989286	CompoundStatement		8:24:113:113	10989254	1					
ANR	10989287	Label	case 0 :	937:12:28852:28858	10989254	0	True				
ANR	10989288	IfStatement	if ( istate -> use_cie_color . value . boolval && ! CIESubst )		10989254	1					
ANR	10989289	Condition	istate -> use_cie_color . value . boolval && ! CIESubst	938:20:28880:28927	10989254	0	True				
ANR	10989290	AndExpression	istate -> use_cie_color . value . boolval && ! CIESubst		10989254	0		&&			
ANR	10989291	MemberAccess	istate -> use_cie_color . value . boolval		10989254	0					
ANR	10989292	MemberAccess	istate -> use_cie_color . value		10989254	0					
ANR	10989293	PtrMemberAccess	istate -> use_cie_color		10989254	0					
ANR	10989294	Identifier	istate		10989254	0					
ANR	10989295	Identifier	use_cie_color		10989254	1					
ANR	10989296	Identifier	value		10989254	1					
ANR	10989297	Identifier	boolval		10989254	1					
ANR	10989298	UnaryOperationExpression	! CIESubst		10989254	1					
ANR	10989299	UnaryOperator	!		10989254	0					
ANR	10989300	Identifier	CIESubst		10989254	1					
ANR	10989301	CompoundStatement		12:20:259:271	10989254	1					
ANR	10989302	IdentifierDeclStatement	byte * body ;	939:20:28952:28962	10989254	0	True				
ANR	10989303	IdentifierDecl	* body		10989254	0					
ANR	10989304	IdentifierDeclType	byte *		10989254	0					
ANR	10989305	Identifier	body		10989254	1					
ANR	10989306	IdentifierDeclStatement	ref * nosubst ;	940:20:28984:28996	10989254	1	True				
ANR	10989307	IdentifierDecl	* nosubst		10989254	0					
ANR	10989308	IdentifierDeclType	ref *		10989254	0					
ANR	10989309	Identifier	nosubst		10989254	1					
ANR	10989310	ExpressionStatement	"code = dict_find_string ( systemdict , ""NOSUBSTDEVICECOLORS"" , & nosubst )"	942:20:29019:29087	10989254	2	True				
ANR	10989311	AssignmentExpression	"code = dict_find_string ( systemdict , ""NOSUBSTDEVICECOLORS"" , & nosubst )"		10989254	0		=			
ANR	10989312	Identifier	code		10989254	0					
ANR	10989313	CallExpression	"dict_find_string ( systemdict , ""NOSUBSTDEVICECOLORS"" , & nosubst )"		10989254	1					
ANR	10989314	Callee	dict_find_string		10989254	0					
ANR	10989315	Identifier	dict_find_string		10989254	0					
ANR	10989316	ArgumentList	systemdict		10989254	1					
ANR	10989317	Argument	systemdict		10989254	0					
ANR	10989318	Identifier	systemdict		10989254	0					
ANR	10989319	Argument	"""NOSUBSTDEVICECOLORS"""		10989254	1					
ANR	10989320	PrimaryExpression	"""NOSUBSTDEVICECOLORS"""		10989254	0					
ANR	10989321	Argument	& nosubst		10989254	2					
ANR	10989322	UnaryOperationExpression	& nosubst		10989254	0					
ANR	10989323	UnaryOperator	&		10989254	0					
ANR	10989324	Identifier	nosubst		10989254	1					
ANR	10989325	IfStatement	if ( code != 0 )		10989254	3					
ANR	10989326	Condition	code != 0	943:24:29113:29121	10989254	0	True				
ANR	10989327	EqualityExpression	code != 0		10989254	0		!=			
ANR	10989328	Identifier	code		10989254	0					
ANR	10989329	PrimaryExpression	0		10989254	1					
ANR	10989330	CompoundStatement		15:35:399:399	10989254	1					
ANR	10989331	IfStatement	"if ( ! r_has_type ( nosubst , t_boolean ) )"		10989254	0					
ANR	10989332	Condition	"! r_has_type ( nosubst , t_boolean )"	944:28:29154:29184	10989254	0	True				
ANR	10989333	UnaryOperationExpression	"! r_has_type ( nosubst , t_boolean )"		10989254	0					
ANR	10989334	UnaryOperator	!		10989254	0					
ANR	10989335	CallExpression	"r_has_type ( nosubst , t_boolean )"		10989254	1					
ANR	10989336	Callee	r_has_type		10989254	0					
ANR	10989337	Identifier	r_has_type		10989254	0					
ANR	10989338	ArgumentList	nosubst		10989254	1					
ANR	10989339	Argument	nosubst		10989254	0					
ANR	10989340	Identifier	nosubst		10989254	0					
ANR	10989341	Argument	t_boolean		10989254	1					
ANR	10989342	Identifier	t_boolean		10989254	0					
ANR	10989343	ExpressionStatement	return_error ( gs_error_typecheck )	945:28:29215:29247	10989254	1	True				
ANR	10989344	CallExpression	return_error ( gs_error_typecheck )		10989254	0					
ANR	10989345	Callee	return_error		10989254	0					
ANR	10989346	Identifier	return_error		10989254	0					
ANR	10989347	ArgumentList	gs_error_typecheck		10989254	1					
ANR	10989348	Argument	gs_error_typecheck		10989254	0					
ANR	10989349	Identifier	gs_error_typecheck		10989254	0					
ANR	10989350	IfStatement	if ( code != 0 && nosubst -> value . boolval )		10989254	4					
ANR	10989351	Condition	code != 0 && nosubst -> value . boolval	947:24:29295:29329	10989254	0	True				
ANR	10989352	AndExpression	code != 0 && nosubst -> value . boolval		10989254	0		&&			
ANR	10989353	EqualityExpression	code != 0		10989254	0		!=			
ANR	10989354	Identifier	code		10989254	0					
ANR	10989355	PrimaryExpression	0		10989254	1					
ANR	10989356	MemberAccess	nosubst -> value . boolval		10989254	1					
ANR	10989357	PtrMemberAccess	nosubst -> value		10989254	0					
ANR	10989358	Identifier	nosubst		10989254	0					
ANR	10989359	Identifier	value		10989254	1					
ANR	10989360	Identifier	boolval		10989254	1					
ANR	10989361	CompoundStatement		19:61:607:607	10989254	1					
ANR	10989362	ExpressionStatement	* stage = 4	948:24:29358:29368	10989254	0	True				
ANR	10989363	AssignmentExpression	* stage = 4		10989254	0		=			
ANR	10989364	UnaryOperationExpression	* stage		10989254	0					
ANR	10989365	UnaryOperator	*		10989254	0					
ANR	10989366	Identifier	stage		10989254	1					
ANR	10989367	PrimaryExpression	4		10989254	1					
ANR	10989368	ExpressionStatement	* cont = 1	949:24:29394:29403	10989254	1	True				
ANR	10989369	AssignmentExpression	* cont = 1		10989254	0		=			
ANR	10989370	UnaryOperationExpression	* cont		10989254	0					
ANR	10989371	UnaryOperator	*		10989254	0					
ANR	10989372	Identifier	cont		10989254	1					
ANR	10989373	PrimaryExpression	1		10989254	1					
ANR	10989374	ExpressionStatement	"body = ialloc_string ( 32 , ""string"" )"	950:24:29429:29463	10989254	2	True				
ANR	10989375	AssignmentExpression	"body = ialloc_string ( 32 , ""string"" )"		10989254	0		=			
ANR	10989376	Identifier	body		10989254	0					
ANR	10989377	CallExpression	"ialloc_string ( 32 , ""string"" )"		10989254	1					
ANR	10989378	Callee	ialloc_string		10989254	0					
ANR	10989379	Identifier	ialloc_string		10989254	0					
ANR	10989380	ArgumentList	32		10989254	1					
ANR	10989381	Argument	32		10989254	0					
ANR	10989382	PrimaryExpression	32		10989254	0					
ANR	10989383	Argument	"""string"""		10989254	1					
ANR	10989384	PrimaryExpression	"""string"""		10989254	0					
ANR	10989385	IfStatement	if ( body == 0 )		10989254	3					
ANR	10989386	Condition	body == 0	951:28:29493:29501	10989254	0	True				
ANR	10989387	EqualityExpression	body == 0		10989254	0		==			
ANR	10989388	Identifier	body		10989254	0					
ANR	10989389	PrimaryExpression	0		10989254	1					
ANR	10989390	ExpressionStatement	return_error ( gs_error_VMerror )	952:28:29532:29562	10989254	1	True				
ANR	10989391	CallExpression	return_error ( gs_error_VMerror )		10989254	0					
ANR	10989392	Callee	return_error		10989254	0					
ANR	10989393	Identifier	return_error		10989254	0					
ANR	10989394	ArgumentList	gs_error_VMerror		10989254	1					
ANR	10989395	Argument	gs_error_VMerror		10989254	0					
ANR	10989396	Identifier	gs_error_VMerror		10989254	0					
ANR	10989397	ExpressionStatement	"memcpy ( body , ""/DefaultGray ..nosubstdevicetest"" , 32 )"	953:24:29588:29639	10989254	4	True				
ANR	10989398	CallExpression	"memcpy ( body , ""/DefaultGray ..nosubstdevicetest"" , 32 )"		10989254	0					
ANR	10989399	Callee	memcpy		10989254	0					
ANR	10989400	Identifier	memcpy		10989254	0					
ANR	10989401	ArgumentList	body		10989254	1					
ANR	10989402	Argument	body		10989254	0					
ANR	10989403	Identifier	body		10989254	0					
ANR	10989404	Argument	"""/DefaultGray ..nosubstdevicetest"""		10989254	1					
ANR	10989405	PrimaryExpression	"""/DefaultGray ..nosubstdevicetest"""		10989254	0					
ANR	10989406	Argument	32		10989254	2					
ANR	10989407	PrimaryExpression	32		10989254	0					
ANR	10989408	ExpressionStatement	"make_string ( & stref , a_all | icurrent_space , 32 , body )"	954:24:29665:29718	10989254	5	True				
ANR	10989409	CallExpression	"make_string ( & stref , a_all | icurrent_space , 32 , body )"		10989254	0					
ANR	10989410	Callee	make_string		10989254	0					
ANR	10989411	Identifier	make_string		10989254	0					
ANR	10989412	ArgumentList	& stref		10989254	1					
ANR	10989413	Argument	& stref		10989254	0					
ANR	10989414	UnaryOperationExpression	& stref		10989254	0					
ANR	10989415	UnaryOperator	&		10989254	0					
ANR	10989416	Identifier	stref		10989254	1					
ANR	10989417	Argument	a_all | icurrent_space		10989254	1					
ANR	10989418	InclusiveOrExpression	a_all | icurrent_space		10989254	0		|			
ANR	10989419	Identifier	a_all		10989254	0					
ANR	10989420	Identifier	icurrent_space		10989254	1					
ANR	10989421	Argument	32		10989254	2					
ANR	10989422	PrimaryExpression	32		10989254	0					
ANR	10989423	Argument	body		10989254	3					
ANR	10989424	Identifier	body		10989254	0					
ANR	10989425	ExpressionStatement	"r_set_attrs ( & stref , a_executable )"	955:24:29744:29777	10989254	6	True				
ANR	10989426	CallExpression	"r_set_attrs ( & stref , a_executable )"		10989254	0					
ANR	10989427	Callee	r_set_attrs		10989254	0					
ANR	10989428	Identifier	r_set_attrs		10989254	0					
ANR	10989429	ArgumentList	& stref		10989254	1					
ANR	10989430	Argument	& stref		10989254	0					
ANR	10989431	UnaryOperationExpression	& stref		10989254	0					
ANR	10989432	UnaryOperator	&		10989254	0					
ANR	10989433	Identifier	stref		10989254	1					
ANR	10989434	Argument	a_executable		10989254	1					
ANR	10989435	Identifier	a_executable		10989254	0					
ANR	10989436	ExpressionStatement	esp ++	956:24:29803:29808	10989254	7	True				
ANR	10989437	PostIncDecOperationExpression	esp ++		10989254	0					
ANR	10989438	Identifier	esp		10989254	0					
ANR	10989439	IncDec	++		10989254	1					
ANR	10989440	ExpressionStatement	"ref_assign ( esp , & stref )"	957:24:29834:29857	10989254	8	True				
ANR	10989441	CallExpression	"ref_assign ( esp , & stref )"		10989254	0					
ANR	10989442	Callee	ref_assign		10989254	0					
ANR	10989443	Identifier	ref_assign		10989254	0					
ANR	10989444	ArgumentList	esp		10989254	1					
ANR	10989445	Argument	esp		10989254	0					
ANR	10989446	Identifier	esp		10989254	0					
ANR	10989447	Argument	& stref		10989254	1					
ANR	10989448	UnaryOperationExpression	& stref		10989254	0					
ANR	10989449	UnaryOperator	&		10989254	0					
ANR	10989450	Identifier	stref		10989254	1					
ANR	10989451	ReturnStatement	return o_push_estack ;	958:24:29883:29903	10989254	9	True				
ANR	10989452	Identifier	o_push_estack		10989254	0					
ANR	10989453	ElseStatement	else		10989254	0					
ANR	10989454	CompoundStatement		31:27:1207:1207	10989254	0					
ANR	10989455	ExpressionStatement	* stage = 2	960:24:29958:29968	10989254	0	True				
ANR	10989456	AssignmentExpression	* stage = 2		10989254	0		=			
ANR	10989457	UnaryOperationExpression	* stage		10989254	0					
ANR	10989458	UnaryOperator	*		10989254	0					
ANR	10989459	Identifier	stage		10989254	1					
ANR	10989460	PrimaryExpression	2		10989254	1					
ANR	10989461	ExpressionStatement	* cont = 1	961:24:29994:30003	10989254	1	True				
ANR	10989462	AssignmentExpression	* cont = 1		10989254	0		=			
ANR	10989463	UnaryOperationExpression	* cont		10989254	0					
ANR	10989464	UnaryOperator	*		10989254	0					
ANR	10989465	Identifier	cont		10989254	1					
ANR	10989466	PrimaryExpression	1		10989254	1					
ANR	10989467	ExpressionStatement	"body = ialloc_string ( 47 , ""string"" )"	962:24:30029:30063	10989254	2	True				
ANR	10989468	AssignmentExpression	"body = ialloc_string ( 47 , ""string"" )"		10989254	0		=			
ANR	10989469	Identifier	body		10989254	0					
ANR	10989470	CallExpression	"ialloc_string ( 47 , ""string"" )"		10989254	1					
ANR	10989471	Callee	ialloc_string		10989254	0					
ANR	10989472	Identifier	ialloc_string		10989254	0					
ANR	10989473	ArgumentList	47		10989254	1					
ANR	10989474	Argument	47		10989254	0					
ANR	10989475	PrimaryExpression	47		10989254	0					
ANR	10989476	Argument	"""string"""		10989254	1					
ANR	10989477	PrimaryExpression	"""string"""		10989254	0					
ANR	10989478	IfStatement	if ( body == 0 )		10989254	3					
ANR	10989479	Condition	body == 0	963:28:30093:30101	10989254	0	True				
ANR	10989480	EqualityExpression	body == 0		10989254	0		==			
ANR	10989481	Identifier	body		10989254	0					
ANR	10989482	PrimaryExpression	0		10989254	1					
ANR	10989483	ExpressionStatement	return_error ( gs_error_VMerror )	964:28:30132:30162	10989254	1	True				
ANR	10989484	CallExpression	return_error ( gs_error_VMerror )		10989254	0					
ANR	10989485	Callee	return_error		10989254	0					
ANR	10989486	Identifier	return_error		10989254	0					
ANR	10989487	ArgumentList	gs_error_VMerror		10989254	1					
ANR	10989488	Argument	gs_error_VMerror		10989254	0					
ANR	10989489	Identifier	gs_error_VMerror		10989254	0					
ANR	10989490	ExpressionStatement	"memcpy ( body , ""{/DefaultGray /ColorSpace findresource} stopped"" , 47 )"	965:24:30188:30254	10989254	4	True				
ANR	10989491	CallExpression	"memcpy ( body , ""{/DefaultGray /ColorSpace findresource} stopped"" , 47 )"		10989254	0					
ANR	10989492	Callee	memcpy		10989254	0					
ANR	10989493	Identifier	memcpy		10989254	0					
ANR	10989494	ArgumentList	body		10989254	1					
ANR	10989495	Argument	body		10989254	0					
ANR	10989496	Identifier	body		10989254	0					
ANR	10989497	Argument	"""{/DefaultGray /ColorSpace findresource} stopped"""		10989254	1					
ANR	10989498	PrimaryExpression	"""{/DefaultGray /ColorSpace findresource} stopped"""		10989254	0					
ANR	10989499	Argument	47		10989254	2					
ANR	10989500	PrimaryExpression	47		10989254	0					
ANR	10989501	ExpressionStatement	"make_string ( & stref , a_all | icurrent_space , 47 , body )"	966:24:30280:30333	10989254	5	True				
ANR	10989502	CallExpression	"make_string ( & stref , a_all | icurrent_space , 47 , body )"		10989254	0					
ANR	10989503	Callee	make_string		10989254	0					
ANR	10989504	Identifier	make_string		10989254	0					
ANR	10989505	ArgumentList	& stref		10989254	1					
ANR	10989506	Argument	& stref		10989254	0					
ANR	10989507	UnaryOperationExpression	& stref		10989254	0					
ANR	10989508	UnaryOperator	&		10989254	0					
ANR	10989509	Identifier	stref		10989254	1					
ANR	10989510	Argument	a_all | icurrent_space		10989254	1					
ANR	10989511	InclusiveOrExpression	a_all | icurrent_space		10989254	0		|			
ANR	10989512	Identifier	a_all		10989254	0					
ANR	10989513	Identifier	icurrent_space		10989254	1					
ANR	10989514	Argument	47		10989254	2					
ANR	10989515	PrimaryExpression	47		10989254	0					
ANR	10989516	Argument	body		10989254	3					
ANR	10989517	Identifier	body		10989254	0					
ANR	10989518	ExpressionStatement	"r_set_attrs ( & stref , a_executable )"	967:24:30359:30392	10989254	6	True				
ANR	10989519	CallExpression	"r_set_attrs ( & stref , a_executable )"		10989254	0					
ANR	10989520	Callee	r_set_attrs		10989254	0					
ANR	10989521	Identifier	r_set_attrs		10989254	0					
ANR	10989522	ArgumentList	& stref		10989254	1					
ANR	10989523	Argument	& stref		10989254	0					
ANR	10989524	UnaryOperationExpression	& stref		10989254	0					
ANR	10989525	UnaryOperator	&		10989254	0					
ANR	10989526	Identifier	stref		10989254	1					
ANR	10989527	Argument	a_executable		10989254	1					
ANR	10989528	Identifier	a_executable		10989254	0					
ANR	10989529	ExpressionStatement	esp ++	968:24:30418:30423	10989254	7	True				
ANR	10989530	PostIncDecOperationExpression	esp ++		10989254	0					
ANR	10989531	Identifier	esp		10989254	0					
ANR	10989532	IncDec	++		10989254	1					
ANR	10989533	ExpressionStatement	"ref_assign ( esp , & stref )"	969:24:30449:30472	10989254	8	True				
ANR	10989534	CallExpression	"ref_assign ( esp , & stref )"		10989254	0					
ANR	10989535	Callee	ref_assign		10989254	0					
ANR	10989536	Identifier	ref_assign		10989254	0					
ANR	10989537	ArgumentList	esp		10989254	1					
ANR	10989538	Argument	esp		10989254	0					
ANR	10989539	Identifier	esp		10989254	0					
ANR	10989540	Argument	& stref		10989254	1					
ANR	10989541	UnaryOperationExpression	& stref		10989254	0					
ANR	10989542	UnaryOperator	&		10989254	0					
ANR	10989543	Identifier	stref		10989254	1					
ANR	10989544	ReturnStatement	return o_push_estack ;	970:24:30498:30518	10989254	9	True				
ANR	10989545	Identifier	o_push_estack		10989254	0					
ANR	10989546	BreakStatement	break ;	972:20:30562:30567	10989254	5	True				
ANR	10989547	Label	case 1 :	975:12:30634:30640	10989254	2	True				
ANR	10989548	ExpressionStatement	pcs = gs_cspace_new_DeviceGray ( imemory )	976:16:30658:30697	10989254	3	True				
ANR	10989549	AssignmentExpression	pcs = gs_cspace_new_DeviceGray ( imemory )		10989254	0		=			
ANR	10989550	Identifier	pcs		10989254	0					
ANR	10989551	CallExpression	gs_cspace_new_DeviceGray ( imemory )		10989254	1					
ANR	10989552	Callee	gs_cspace_new_DeviceGray		10989254	0					
ANR	10989553	Identifier	gs_cspace_new_DeviceGray		10989254	0					
ANR	10989554	ArgumentList	imemory		10989254	1					
ANR	10989555	Argument	imemory		10989254	0					
ANR	10989556	Identifier	imemory		10989254	0					
ANR	10989557	IfStatement	if ( pcs == NULL )		10989254	4					
ANR	10989558	Condition	pcs == NULL	977:20:30719:30729	10989254	0	True				
ANR	10989559	EqualityExpression	pcs == NULL		10989254	0		==			
ANR	10989560	Identifier	pcs		10989254	0					
ANR	10989561	Identifier	NULL		10989254	1					
ANR	10989562	ExpressionStatement	return_error ( gs_error_VMerror )	978:20:30752:30782	10989254	1	True				
ANR	10989563	CallExpression	return_error ( gs_error_VMerror )		10989254	0					
ANR	10989564	Callee	return_error		10989254	0					
ANR	10989565	Identifier	return_error		10989254	0					
ANR	10989566	ArgumentList	gs_error_VMerror		10989254	1					
ANR	10989567	Argument	gs_error_VMerror		10989254	0					
ANR	10989568	Identifier	gs_error_VMerror		10989254	0					
ANR	10989569	ExpressionStatement	"code = gs_setcolorspace ( igs , pcs )"	979:16:30800:30833	10989254	5	True				
ANR	10989570	AssignmentExpression	"code = gs_setcolorspace ( igs , pcs )"		10989254	0		=			
ANR	10989571	Identifier	code		10989254	0					
ANR	10989572	CallExpression	"gs_setcolorspace ( igs , pcs )"		10989254	1					
ANR	10989573	Callee	gs_setcolorspace		10989254	0					
ANR	10989574	Identifier	gs_setcolorspace		10989254	0					
ANR	10989575	ArgumentList	igs		10989254	1					
ANR	10989576	Argument	igs		10989254	0					
ANR	10989577	Identifier	igs		10989254	0					
ANR	10989578	Argument	pcs		10989254	1					
ANR	10989579	Identifier	pcs		10989254	0					
ANR	10989580	IfStatement	if ( code >= 0 )		10989254	6					
ANR	10989581	Condition	code >= 0	980:20:30855:30863	10989254	0	True				
ANR	10989582	RelationalExpression	code >= 0		10989254	0		>=			
ANR	10989583	Identifier	code		10989254	0					
ANR	10989584	PrimaryExpression	0		10989254	1					
ANR	10989585	CompoundStatement		53:20:2163:2213	10989254	1					
ANR	10989586	IdentifierDeclStatement	gs_client_color * pcc = gs_currentcolor_inline ( igs ) ;	981:20:30888:30938	10989254	0	True				
ANR	10989587	IdentifierDecl	* pcc = gs_currentcolor_inline ( igs )		10989254	0					
ANR	10989588	IdentifierDeclType	gs_client_color *		10989254	0					
ANR	10989589	Identifier	pcc		10989254	1					
ANR	10989590	AssignmentExpression	* pcc = gs_currentcolor_inline ( igs )		10989254	2		=			
ANR	10989591	Identifier	pcc		10989254	0					
ANR	10989592	CallExpression	gs_currentcolor_inline ( igs )		10989254	1					
ANR	10989593	Callee	gs_currentcolor_inline		10989254	0					
ANR	10989594	Identifier	gs_currentcolor_inline		10989254	0					
ANR	10989595	ArgumentList	igs		10989254	1					
ANR	10989596	Argument	igs		10989254	0					
ANR	10989597	Identifier	igs		10989254	0					
ANR	10989598	ExpressionStatement	"cs_adjust_color_count ( igs , - 1 )"	983:20:30961:30991	10989254	1	True				
ANR	10989599	CallExpression	"cs_adjust_color_count ( igs , - 1 )"		10989254	0					
ANR	10989600	Callee	cs_adjust_color_count		10989254	0					
ANR	10989601	Identifier	cs_adjust_color_count		10989254	0					
ANR	10989602	ArgumentList	igs		10989254	1					
ANR	10989603	Argument	igs		10989254	0					
ANR	10989604	Identifier	igs		10989254	0					
ANR	10989605	Argument	- 1		10989254	1					
ANR	10989606	UnaryOperationExpression	- 1		10989254	0					
ANR	10989607	UnaryOperator	-		10989254	0					
ANR	10989608	PrimaryExpression	1		10989254	1					
ANR	10989609	ExpressionStatement	pcc -> paint . values [ 0 ] = ( 0 )	984:20:31042:31068	10989254	2	True				
ANR	10989610	AssignmentExpression	pcc -> paint . values [ 0 ] = ( 0 )		10989254	0		=			
ANR	10989611	ArrayIndexing	pcc -> paint . values [ 0 ]		10989254	0					
ANR	10989612	MemberAccess	pcc -> paint . values		10989254	0					
ANR	10989613	PtrMemberAccess	pcc -> paint		10989254	0					
ANR	10989614	Identifier	pcc		10989254	0					
ANR	10989615	Identifier	paint		10989254	1					
ANR	10989616	Identifier	values		10989254	1					
ANR	10989617	PrimaryExpression	0		10989254	1					
ANR	10989618	PrimaryExpression	0		10989254	1					
ANR	10989619	ExpressionStatement	pcc -> pattern = 0	985:20:31090:31106	10989254	3	True				
ANR	10989620	AssignmentExpression	pcc -> pattern = 0		10989254	0		=			
ANR	10989621	PtrMemberAccess	pcc -> pattern		10989254	0					
ANR	10989622	Identifier	pcc		10989254	0					
ANR	10989623	Identifier	pattern		10989254	1					
ANR	10989624	PrimaryExpression	0		10989254	1					
ANR	10989625	ExpressionStatement	gx_unset_dev_color ( igs )	986:20:31142:31165	10989254	4	True				
ANR	10989626	CallExpression	gx_unset_dev_color ( igs )		10989254	0					
ANR	10989627	Callee	gx_unset_dev_color		10989254	0					
ANR	10989628	Identifier	gx_unset_dev_color		10989254	0					
ANR	10989629	ArgumentList	igs		10989254	1					
ANR	10989630	Argument	igs		10989254	0					
ANR	10989631	Identifier	igs		10989254	0					
ANR	10989632	ExpressionStatement	"rc_decrement_only_cs ( pcs , ""zsetdevcspace"" )"	988:16:31201:31243	10989254	7	True				
ANR	10989633	CallExpression	"rc_decrement_only_cs ( pcs , ""zsetdevcspace"" )"		10989254	0					
ANR	10989634	Callee	rc_decrement_only_cs		10989254	0					
ANR	10989635	Identifier	rc_decrement_only_cs		10989254	0					
ANR	10989636	ArgumentList	pcs		10989254	1					
ANR	10989637	Argument	pcs		10989254	0					
ANR	10989638	Identifier	pcs		10989254	0					
ANR	10989639	Argument	"""zsetdevcspace"""		10989254	1					
ANR	10989640	PrimaryExpression	"""zsetdevcspace"""		10989254	0					
ANR	10989641	ExpressionStatement	* cont = 0	989:16:31261:31270	10989254	8	True				
ANR	10989642	AssignmentExpression	* cont = 0		10989254	0		=			
ANR	10989643	UnaryOperationExpression	* cont		10989254	0					
ANR	10989644	UnaryOperator	*		10989254	0					
ANR	10989645	Identifier	cont		10989254	1					
ANR	10989646	PrimaryExpression	0		10989254	1					
ANR	10989647	ExpressionStatement	* stage = 0	990:16:31288:31298	10989254	9	True				
ANR	10989648	AssignmentExpression	* stage = 0		10989254	0		=			
ANR	10989649	UnaryOperationExpression	* stage		10989254	0					
ANR	10989650	UnaryOperator	*		10989254	0					
ANR	10989651	Identifier	stage		10989254	1					
ANR	10989652	PrimaryExpression	0		10989254	1					
ANR	10989653	BreakStatement	break ;	991:16:31316:31321	10989254	10	True				
ANR	10989654	Label	case 2 :	992:12:31335:31341	10989254	11	True				
ANR	10989655	IfStatement	"if ( ! r_has_type ( op , t_boolean ) )"		10989254	12					
ANR	10989656	Condition	"! r_has_type ( op , t_boolean )"	993:20:31363:31388	10989254	0	True				
ANR	10989657	UnaryOperationExpression	"! r_has_type ( op , t_boolean )"		10989254	0					
ANR	10989658	UnaryOperator	!		10989254	0					
ANR	10989659	CallExpression	"r_has_type ( op , t_boolean )"		10989254	1					
ANR	10989660	Callee	r_has_type		10989254	0					
ANR	10989661	Identifier	r_has_type		10989254	0					
ANR	10989662	ArgumentList	op		10989254	1					
ANR	10989663	Argument	op		10989254	0					
ANR	10989664	Identifier	op		10989254	0					
ANR	10989665	Argument	t_boolean		10989254	1					
ANR	10989666	Identifier	t_boolean		10989254	0					
ANR	10989667	ExpressionStatement	return_error ( gs_error_typecheck )	994:20:31411:31443	10989254	1	True				
ANR	10989668	CallExpression	return_error ( gs_error_typecheck )		10989254	0					
ANR	10989669	Callee	return_error		10989254	0					
ANR	10989670	Identifier	return_error		10989254	0					
ANR	10989671	ArgumentList	gs_error_typecheck		10989254	1					
ANR	10989672	Argument	gs_error_typecheck		10989254	0					
ANR	10989673	Identifier	gs_error_typecheck		10989254	0					
ANR	10989674	IfStatement	if ( op -> value . boolval )		10989254	13					
ANR	10989675	Condition	op -> value . boolval	995:20:31465:31481	10989254	0	True				
ANR	10989676	MemberAccess	op -> value . boolval		10989254	0					
ANR	10989677	PtrMemberAccess	op -> value		10989254	0					
ANR	10989678	Identifier	op		10989254	0					
ANR	10989679	Identifier	value		10989254	1					
ANR	10989680	Identifier	boolval		10989254	1					
ANR	10989681	CompoundStatement		67:39:2759:2759	10989254	1					
ANR	10989682	ExpressionStatement	pop ( 1 )	999:20:31648:31654	10989254	0	True				
ANR	10989683	CallExpression	pop ( 1 )		10989254	0					
ANR	10989684	Callee	pop		10989254	0					
ANR	10989685	Identifier	pop		10989254	0					
ANR	10989686	ArgumentList	1		10989254	1					
ANR	10989687	Argument	1		10989254	0					
ANR	10989688	PrimaryExpression	1		10989254	0					
ANR	10989689	ExpressionStatement	* stage = 1	1000:20:31676:31686	10989254	1	True				
ANR	10989690	AssignmentExpression	* stage = 1		10989254	0		=			
ANR	10989691	UnaryOperationExpression	* stage		10989254	0					
ANR	10989692	UnaryOperator	*		10989254	0					
ANR	10989693	Identifier	stage		10989254	1					
ANR	10989694	PrimaryExpression	1		10989254	1					
ANR	10989695	BreakStatement	break ;	1001:20:31708:31713	10989254	2	True				
ANR	10989696	ExpressionStatement	pop ( 1 )	1003:16:31749:31755	10989254	14	True				
ANR	10989697	CallExpression	pop ( 1 )		10989254	0					
ANR	10989698	Callee	pop		10989254	0					
ANR	10989699	Identifier	pop		10989254	0					
ANR	10989700	ArgumentList	1		10989254	1					
ANR	10989701	Argument	1		10989254	0					
ANR	10989702	PrimaryExpression	1		10989254	0					
ANR	10989703	ExpressionStatement	* cont = 1	1004:16:31773:31782	10989254	15	True				
ANR	10989704	AssignmentExpression	* cont = 1		10989254	0		=			
ANR	10989705	UnaryOperationExpression	* cont		10989254	0					
ANR	10989706	UnaryOperator	*		10989254	0					
ANR	10989707	Identifier	cont		10989254	1					
ANR	10989708	PrimaryExpression	1		10989254	1					
ANR	10989709	ExpressionStatement	* stage = 3	1005:16:31800:31810	10989254	16	True				
ANR	10989710	AssignmentExpression	* stage = 3		10989254	0		=			
ANR	10989711	UnaryOperationExpression	* stage		10989254	0					
ANR	10989712	UnaryOperator	*		10989254	0					
ANR	10989713	Identifier	stage		10989254	1					
ANR	10989714	PrimaryExpression	3		10989254	1					
ANR	10989715	ExpressionStatement	code = setcolorspace_nosubst ( i_ctx_p )	1006:16:31828:31865	10989254	17	True				
ANR	10989716	AssignmentExpression	code = setcolorspace_nosubst ( i_ctx_p )		10989254	0		=			
ANR	10989717	Identifier	code		10989254	0					
ANR	10989718	CallExpression	setcolorspace_nosubst ( i_ctx_p )		10989254	1					
ANR	10989719	Callee	setcolorspace_nosubst		10989254	0					
ANR	10989720	Identifier	setcolorspace_nosubst		10989254	0					
ANR	10989721	ArgumentList	i_ctx_p		10989254	1					
ANR	10989722	Argument	i_ctx_p		10989254	0					
ANR	10989723	Identifier	i_ctx_p		10989254	0					
ANR	10989724	IfStatement	if ( code != 0 )		10989254	18					
ANR	10989725	Condition	code != 0	1007:20:31887:31895	10989254	0	True				
ANR	10989726	EqualityExpression	code != 0		10989254	0		!=			
ANR	10989727	Identifier	code		10989254	0					
ANR	10989728	PrimaryExpression	0		10989254	1					
ANR	10989729	ReturnStatement	return code ;	1008:20:31918:31929	10989254	1	True				
ANR	10989730	Identifier	code		10989254	0					
ANR	10989731	BreakStatement	break ;	1009:16:31947:31952	10989254	19	True				
ANR	10989732	Label	case 3 :	1010:12:31966:31972	10989254	20	True				
ANR	10989733	ExpressionStatement	* cont = 0	1015:16:32183:32192	10989254	21	True				
ANR	10989734	AssignmentExpression	* cont = 0		10989254	0		=			
ANR	10989735	UnaryOperationExpression	* cont		10989254	0					
ANR	10989736	UnaryOperator	*		10989254	0					
ANR	10989737	Identifier	cont		10989254	1					
ANR	10989738	PrimaryExpression	0		10989254	1					
ANR	10989739	ExpressionStatement	* stage = 0	1016:16:32210:32220	10989254	22	True				
ANR	10989740	AssignmentExpression	* stage = 0		10989254	0		=			
ANR	10989741	UnaryOperationExpression	* stage		10989254	0					
ANR	10989742	UnaryOperator	*		10989254	0					
ANR	10989743	Identifier	stage		10989254	1					
ANR	10989744	PrimaryExpression	0		10989254	1					
ANR	10989745	BreakStatement	break ;	1017:16:32238:32243	10989254	23	True				
ANR	10989746	Label	case 4 :	1018:12:32257:32263	10989254	24	True				
ANR	10989747	IfStatement	"if ( ! r_has_type ( op , t_boolean ) )"		10989254	25					
ANR	10989748	Condition	"! r_has_type ( op , t_boolean )"	1025:20:32684:32709	10989254	0	True				
ANR	10989749	UnaryOperationExpression	"! r_has_type ( op , t_boolean )"		10989254	0					
ANR	10989750	UnaryOperator	!		10989254	0					
ANR	10989751	CallExpression	"r_has_type ( op , t_boolean )"		10989254	1					
ANR	10989752	Callee	r_has_type		10989254	0					
ANR	10989753	Identifier	r_has_type		10989254	0					
ANR	10989754	ArgumentList	op		10989254	1					
ANR	10989755	Argument	op		10989254	0					
ANR	10989756	Identifier	op		10989254	0					
ANR	10989757	Argument	t_boolean		10989254	1					
ANR	10989758	Identifier	t_boolean		10989254	0					
ANR	10989759	ExpressionStatement	return_error ( gs_error_typecheck )	1026:20:32732:32764	10989254	1	True				
ANR	10989760	CallExpression	return_error ( gs_error_typecheck )		10989254	0					
ANR	10989761	Callee	return_error		10989254	0					
ANR	10989762	Identifier	return_error		10989254	0					
ANR	10989763	ArgumentList	gs_error_typecheck		10989254	1					
ANR	10989764	Argument	gs_error_typecheck		10989254	0					
ANR	10989765	Identifier	gs_error_typecheck		10989254	0					
ANR	10989766	ExpressionStatement	pop ( 1 )	1027:16:32782:32788	10989254	26	True				
ANR	10989767	CallExpression	pop ( 1 )		10989254	0					
ANR	10989768	Callee	pop		10989254	0					
ANR	10989769	Identifier	pop		10989254	0					
ANR	10989770	ArgumentList	1		10989254	1					
ANR	10989771	Argument	1		10989254	0					
ANR	10989772	PrimaryExpression	1		10989254	0					
ANR	10989773	ExpressionStatement	* stage = 1	1028:16:32806:32816	10989254	27	True				
ANR	10989774	AssignmentExpression	* stage = 1		10989254	0		=			
ANR	10989775	UnaryOperationExpression	* stage		10989254	0					
ANR	10989776	UnaryOperator	*		10989254	0					
ANR	10989777	Identifier	stage		10989254	1					
ANR	10989778	PrimaryExpression	1		10989254	1					
ANR	10989779	ExpressionStatement	* cont = 1	1029:16:32834:32843	10989254	28	True				
ANR	10989780	AssignmentExpression	* cont = 1		10989254	0		=			
ANR	10989781	UnaryOperationExpression	* cont		10989254	0					
ANR	10989782	UnaryOperator	*		10989254	0					
ANR	10989783	Identifier	cont		10989254	1					
ANR	10989784	PrimaryExpression	1		10989254	1					
ANR	10989785	IfStatement	if ( op -> value . boolval )		10989254	29					
ANR	10989786	Condition	op -> value . boolval	1030:20:32865:32881	10989254	0	True				
ANR	10989787	MemberAccess	op -> value . boolval		10989254	0					
ANR	10989788	PtrMemberAccess	op -> value		10989254	0					
ANR	10989789	Identifier	op		10989254	0					
ANR	10989790	Identifier	value		10989254	1					
ANR	10989791	Identifier	boolval		10989254	1					
ANR	10989792	CompoundStatement		102:39:4159:4159	10989254	1					
ANR	10989793	ExpressionStatement	* stage = 5	1031:20:32906:32916	10989254	0	True				
ANR	10989794	AssignmentExpression	* stage = 5		10989254	0		=			
ANR	10989795	UnaryOperationExpression	* stage		10989254	0					
ANR	10989796	UnaryOperator	*		10989254	0					
ANR	10989797	Identifier	stage		10989254	1					
ANR	10989798	PrimaryExpression	5		10989254	1					
ANR	10989799	ExpressionStatement	code = setcolorspace_nosubst ( i_ctx_p )	1032:20:32938:32975	10989254	1	True				
ANR	10989800	AssignmentExpression	code = setcolorspace_nosubst ( i_ctx_p )		10989254	0		=			
ANR	10989801	Identifier	code		10989254	0					
ANR	10989802	CallExpression	setcolorspace_nosubst ( i_ctx_p )		10989254	1					
ANR	10989803	Callee	setcolorspace_nosubst		10989254	0					
ANR	10989804	Identifier	setcolorspace_nosubst		10989254	0					
ANR	10989805	ArgumentList	i_ctx_p		10989254	1					
ANR	10989806	Argument	i_ctx_p		10989254	0					
ANR	10989807	Identifier	i_ctx_p		10989254	0					
ANR	10989808	IfStatement	if ( code != 0 )		10989254	2					
ANR	10989809	Condition	code != 0	1033:24:33001:33009	10989254	0	True				
ANR	10989810	EqualityExpression	code != 0		10989254	0		!=			
ANR	10989811	Identifier	code		10989254	0					
ANR	10989812	PrimaryExpression	0		10989254	1					
ANR	10989813	ReturnStatement	return code ;	1034:24:33036:33047	10989254	1	True				
ANR	10989814	Identifier	code		10989254	0					
ANR	10989815	BreakStatement	break ;	1036:16:33083:33088	10989254	30	True				
ANR	10989816	Label	case 5 :	1037:12:33102:33108	10989254	31	True				
ANR	10989817	ExpressionStatement	* stage = 1	1042:16:33373:33383	10989254	32	True				
ANR	10989818	AssignmentExpression	* stage = 1		10989254	0		=			
ANR	10989819	UnaryOperationExpression	* stage		10989254	0					
ANR	10989820	UnaryOperator	*		10989254	0					
ANR	10989821	Identifier	stage		10989254	1					
ANR	10989822	PrimaryExpression	1		10989254	1					
ANR	10989823	ExpressionStatement	* cont = 1	1043:16:33401:33410	10989254	33	True				
ANR	10989824	AssignmentExpression	* cont = 1		10989254	0		=			
ANR	10989825	UnaryOperationExpression	* cont		10989254	0					
ANR	10989826	UnaryOperator	*		10989254	0					
ANR	10989827	Identifier	cont		10989254	1					
ANR	10989828	PrimaryExpression	1		10989254	1					
ANR	10989829	ExpressionStatement	code = zincludecolorspace ( i_ctx_p )	1044:16:33428:33462	10989254	34	True				
ANR	10989830	AssignmentExpression	code = zincludecolorspace ( i_ctx_p )		10989254	0		=			
ANR	10989831	Identifier	code		10989254	0					
ANR	10989832	CallExpression	zincludecolorspace ( i_ctx_p )		10989254	1					
ANR	10989833	Callee	zincludecolorspace		10989254	0					
ANR	10989834	Identifier	zincludecolorspace		10989254	0					
ANR	10989835	ArgumentList	i_ctx_p		10989254	1					
ANR	10989836	Argument	i_ctx_p		10989254	0					
ANR	10989837	Identifier	i_ctx_p		10989254	0					
ANR	10989838	IfStatement	if ( code != 0 )		10989254	35					
ANR	10989839	Condition	code != 0	1045:20:33484:33492	10989254	0	True				
ANR	10989840	EqualityExpression	code != 0		10989254	0		!=			
ANR	10989841	Identifier	code		10989254	0					
ANR	10989842	PrimaryExpression	0		10989254	1					
ANR	10989843	ReturnStatement	return code ;	1046:20:33515:33526	10989254	1	True				
ANR	10989844	Identifier	code		10989254	0					
ANR	10989845	BreakStatement	break ;	1047:16:33544:33549	10989254	36	True				
ANR	10989846	Condition	* stage	1049:13:33574:33579	10989254	1	True				
ANR	10989847	UnaryOperationExpression	* stage		10989254	0					
ANR	10989848	UnaryOperator	*		10989254	0					
ANR	10989849	Identifier	stage		10989254	1					
ANR	10989850	ReturnStatement	return code ;	1050:4:33587:33598	10989254	5	True				
ANR	10989851	Identifier	code		10989254	0					
ANR	10989852	ReturnType	static int		10989254	1					
ANR	10989853	Identifier	setgrayspace		10989254	2					
ANR	10989854	ParameterList	"i_ctx_t * i_ctx_p , ref * r , int * stage , int * cont , int CIESubst"		10989254	3					
ANR	10989855	Parameter	i_ctx_t * i_ctx_p	928:24:28660:28676	10989254	0	True				
ANR	10989856	ParameterType	i_ctx_t *		10989254	0					
ANR	10989857	Identifier	i_ctx_p		10989254	1					
ANR	10989858	Parameter	ref * r	928:43:28679:28684	10989254	1	True				
ANR	10989859	ParameterType	ref *		10989254	0					
ANR	10989860	Identifier	r		10989254	1					
ANR	10989861	Parameter	int * stage	928:51:28687:28696	10989254	2	True				
ANR	10989862	ParameterType	int *		10989254	0					
ANR	10989863	Identifier	stage		10989254	1					
ANR	10989864	Parameter	int * cont	928:63:28699:28707	10989254	3	True				
ANR	10989865	ParameterType	int *		10989254	0					
ANR	10989866	Identifier	cont		10989254	1					
ANR	10989867	Parameter	int CIESubst	928:74:28710:28721	10989254	4	True				
ANR	10989868	ParameterType	int		10989254	0					
ANR	10989869	Identifier	CIESubst		10989254	1					
ANR	10989870	CFGEntryNode	ENTRY		10989254		True				
ANR	10989871	CFGExitNode	EXIT		10989254		True				
ANR	10989872	Symbol	esp		10989254						
ANR	10989873	Symbol	* op		10989254						
ANR	10989874	Symbol	pcc -> pattern		10989254						
ANR	10989875	Symbol	gs_cspace_new_DeviceGray		10989254						
ANR	10989876	Symbol	body		10989254						
ANR	10989877	Symbol	op -> value . boolval		10989254						
ANR	10989878	Symbol	osp		10989254						
ANR	10989879	Symbol	* istate		10989254						
ANR	10989880	Symbol	r_has_type		10989254						
ANR	10989881	Symbol	igs		10989254						
ANR	10989882	Symbol	pcc -> paint		10989254						
ANR	10989883	Symbol	stref		10989254						
ANR	10989884	Symbol	* pcc -> paint		10989254						
ANR	10989885	Symbol	imemory		10989254						
ANR	10989886	Symbol	cont		10989254						
ANR	10989887	Symbol	NULL		10989254						
ANR	10989888	Symbol	dict_find_string		10989254						
ANR	10989889	Symbol	* * pcc		10989254						
ANR	10989890	Symbol	istate -> use_cie_color . value		10989254						
ANR	10989891	Symbol	t_boolean		10989254						
ANR	10989892	Symbol	zincludecolorspace		10989254						
ANR	10989893	Symbol	i_ctx_p		10989254						
ANR	10989894	Symbol	& nosubst		10989254						
ANR	10989895	Symbol	a_executable		10989254						
ANR	10989896	Symbol	gs_currentcolor_inline		10989254						
ANR	10989897	Symbol	* pcc		10989254						
ANR	10989898	Symbol	systemdict		10989254						
ANR	10989899	Symbol	* pcc -> paint . values		10989254						
ANR	10989900	Symbol	a_all		10989254						
ANR	10989901	Symbol	code		10989254						
ANR	10989902	Symbol	* nosubst		10989254						
ANR	10989903	Symbol	& stref		10989254						
ANR	10989904	Symbol	gs_setcolorspace		10989254						
ANR	10989905	Symbol	istate -> use_cie_color . value . boolval		10989254						
ANR	10989906	Symbol	ialloc_string		10989254						
ANR	10989907	Symbol	pcc -> paint . values		10989254						
ANR	10989908	Symbol	pcc		10989254						
ANR	10989909	Symbol	gs_error_typecheck		10989254						
ANR	10989910	Symbol	op -> value		10989254						
ANR	10989911	Symbol	CIESubst		10989254						
ANR	10989912	Symbol	nosubst -> value . boolval		10989254						
ANR	10989913	Symbol	o_push_estack		10989254						
ANR	10989914	Symbol	op		10989254						
ANR	10989915	Symbol	pcs		10989254						
ANR	10989916	Symbol	nosubst		10989254						
ANR	10989917	Symbol	* stage		10989254						
ANR	10989918	Symbol	nosubst -> value		10989254						
ANR	10989919	Symbol	icurrent_space		10989254						
ANR	10989920	Symbol	gs_error_VMerror		10989254						
ANR	10989921	Symbol	r		10989254						
ANR	10989922	Symbol	stage		10989254						
ANR	10989923	Symbol	istate -> use_cie_color		10989254						
ANR	10989924	Symbol	* cont		10989254						
ANR	10989925	Symbol	setcolorspace_nosubst		10989254						
ANR	10989926	Symbol	istate		10989254						
ANR	10989927	Function	graydomain	1052:0:33602:33715							
ANR	10989928	FunctionDef	"graydomain (i_ctx_t * i_ctx_p , ref * space , float * ptr)"		10989927	0					
ANR	10989929	CompoundStatement		1053:0:33667:33715	10989927	0					
ANR	10989930	ExpressionStatement	ptr [ 0 ] = 0	1054:4:33673:33683	10989927	0	True				
ANR	10989931	AssignmentExpression	ptr [ 0 ] = 0		10989927	0		=			
ANR	10989932	ArrayIndexing	ptr [ 0 ]		10989927	0					
ANR	10989933	Identifier	ptr		10989927	0					
ANR	10989934	PrimaryExpression	0		10989927	1					
ANR	10989935	PrimaryExpression	0		10989927	1					
ANR	10989936	ExpressionStatement	ptr [ 1 ] = 1	1055:4:33689:33699	10989927	1	True				
ANR	10989937	AssignmentExpression	ptr [ 1 ] = 1		10989927	0		=			
ANR	10989938	ArrayIndexing	ptr [ 1 ]		10989927	0					
ANR	10989939	Identifier	ptr		10989927	0					
ANR	10989940	PrimaryExpression	1		10989927	1					
ANR	10989941	PrimaryExpression	1		10989927	1					
ANR	10989942	ReturnStatement	return 0 ;	1056:4:33705:33713	10989927	2	True				
ANR	10989943	PrimaryExpression	0		10989927	0					
ANR	10989944	ReturnType	static int		10989927	1					
ANR	10989945	Identifier	graydomain		10989927	2					
ANR	10989946	ParameterList	"i_ctx_t * i_ctx_p , ref * space , float * ptr"		10989927	3					
ANR	10989947	Parameter	i_ctx_t * i_ctx_p	1052:22:33624:33640	10989927	0	True				
ANR	10989948	ParameterType	i_ctx_t *		10989927	0					
ANR	10989949	Identifier	i_ctx_p		10989927	1					
ANR	10989950	Parameter	ref * space	1052:41:33643:33652	10989927	1	True				
ANR	10989951	ParameterType	ref *		10989927	0					
ANR	10989952	Identifier	space		10989927	1					
ANR	10989953	Parameter	float * ptr	1052:53:33655:33664	10989927	2	True				
ANR	10989954	ParameterType	float *		10989927	0					
ANR	10989955	Identifier	ptr		10989927	1					
ANR	10989956	CFGEntryNode	ENTRY		10989927		True				
ANR	10989957	CFGExitNode	EXIT		10989927		True				
ANR	10989958	Symbol	i_ctx_p		10989927						
ANR	10989959	Symbol	* ptr		10989927						
ANR	10989960	Symbol	space		10989927						
ANR	10989961	Symbol	ptr		10989927						
ANR	10989962	Function	grayrange	1058:0:33717:33829							
ANR	10989963	FunctionDef	"grayrange (i_ctx_t * i_ctx_p , ref * space , float * ptr)"		10989962	0					
ANR	10989964	CompoundStatement		1059:0:33781:33829	10989962	0					
ANR	10989965	ExpressionStatement	ptr [ 0 ] = 0	1060:4:33787:33797	10989962	0	True				
ANR	10989966	AssignmentExpression	ptr [ 0 ] = 0		10989962	0		=			
ANR	10989967	ArrayIndexing	ptr [ 0 ]		10989962	0					
ANR	10989968	Identifier	ptr		10989962	0					
ANR	10989969	PrimaryExpression	0		10989962	1					
ANR	10989970	PrimaryExpression	0		10989962	1					
ANR	10989971	ExpressionStatement	ptr [ 1 ] = 1	1061:4:33803:33813	10989962	1	True				
ANR	10989972	AssignmentExpression	ptr [ 1 ] = 1		10989962	0		=			
ANR	10989973	ArrayIndexing	ptr [ 1 ]		10989962	0					
ANR	10989974	Identifier	ptr		10989962	0					
ANR	10989975	PrimaryExpression	1		10989962	1					
ANR	10989976	PrimaryExpression	1		10989962	1					
ANR	10989977	ReturnStatement	return 0 ;	1062:4:33819:33827	10989962	2	True				
ANR	10989978	PrimaryExpression	0		10989962	0					
ANR	10989979	ReturnType	static int		10989962	1					
ANR	10989980	Identifier	grayrange		10989962	2					
ANR	10989981	ParameterList	"i_ctx_t * i_ctx_p , ref * space , float * ptr"		10989962	3					
ANR	10989982	Parameter	i_ctx_t * i_ctx_p	1058:21:33738:33754	10989962	0	True				
ANR	10989983	ParameterType	i_ctx_t *		10989962	0					
ANR	10989984	Identifier	i_ctx_p		10989962	1					
ANR	10989985	Parameter	ref * space	1058:40:33757:33766	10989962	1	True				
ANR	10989986	ParameterType	ref *		10989962	0					
ANR	10989987	Identifier	space		10989962	1					
ANR	10989988	Parameter	float * ptr	1058:52:33769:33778	10989962	2	True				
ANR	10989989	ParameterType	float *		10989962	0					
ANR	10989990	Identifier	ptr		10989962	1					
ANR	10989991	CFGEntryNode	ENTRY		10989962		True				
ANR	10989992	CFGExitNode	EXIT		10989962		True				
ANR	10989993	Symbol	i_ctx_p		10989962						
ANR	10989994	Symbol	* ptr		10989962						
ANR	10989995	Symbol	space		10989962						
ANR	10989996	Symbol	ptr		10989962						
ANR	10989997	Function	graybasecolor	1070:0:34190:35804							
ANR	10989998	FunctionDef	"graybasecolor (i_ctx_t * i_ctx_p , ref * space , int base , int * stage , int * cont , int * stack_depth)"		10989997	0					
ANR	10989999	CompoundStatement		1071:0:34297:35804	10989997	0					
ANR	10990000	IdentifierDeclStatement	os_ptr op = osp ;	1072:4:34303:34318	10989997	0	True				
ANR	10990001	IdentifierDecl	op = osp		10989997	0					
ANR	10990002	IdentifierDeclType	os_ptr		10989997	0					
ANR	10990003	Identifier	op		10989997	1					
ANR	10990004	AssignmentExpression	op = osp		10989997	2		=			
ANR	10990005	Identifier	osp		10989997	0					
ANR	10990006	Identifier	osp		10989997	1					
ANR	10990007	IdentifierDeclStatement	"float Gray , RGB [ 3 ] ;"	1073:4:34324:34342	10989997	1	True				
ANR	10990008	IdentifierDecl	Gray		10989997	0					
ANR	10990009	IdentifierDeclType	float		10989997	0					
ANR	10990010	Identifier	Gray		10989997	1					
ANR	10990011	IdentifierDecl	RGB [ 3 ]		10989997	1					
ANR	10990012	IdentifierDeclType	float [ 3 ]		10989997	0					
ANR	10990013	Identifier	RGB		10989997	1					
ANR	10990014	PrimaryExpression	3		10989997	2					
ANR	10990015	ExpressionStatement	* cont = 0	1075:4:34349:34358	10989997	2	True				
ANR	10990016	AssignmentExpression	* cont = 0		10989997	0		=			
ANR	10990017	UnaryOperationExpression	* cont		10989997	0					
ANR	10990018	UnaryOperator	*		10989997	0					
ANR	10990019	Identifier	cont		10989997	1					
ANR	10990020	PrimaryExpression	0		10989997	1					
ANR	10990021	ExpressionStatement	* stage = 0	1076:4:34364:34374	10989997	3	True				
ANR	10990022	AssignmentExpression	* stage = 0		10989997	0		=			
ANR	10990023	UnaryOperationExpression	* stage		10989997	0					
ANR	10990024	UnaryOperator	*		10989997	0					
ANR	10990025	Identifier	stage		10989997	1					
ANR	10990026	PrimaryExpression	0		10989997	1					
ANR	10990027	ExpressionStatement	check_op ( 1 )	1077:4:34380:34391	10989997	4	True				
ANR	10990028	CallExpression	check_op ( 1 )		10989997	0					
ANR	10990029	Callee	check_op		10989997	0					
ANR	10990030	Identifier	check_op		10989997	0					
ANR	10990031	ArgumentList	1		10989997	1					
ANR	10990032	Argument	1		10989997	0					
ANR	10990033	PrimaryExpression	1		10989997	0					
ANR	10990034	IfStatement	"if ( ! r_has_type ( op , t_integer ) )"		10989997	5					
ANR	10990035	Condition	"! r_has_type ( op , t_integer )"	1078:8:34401:34426	10989997	0	True				
ANR	10990036	UnaryOperationExpression	"! r_has_type ( op , t_integer )"		10989997	0					
ANR	10990037	UnaryOperator	!		10989997	0					
ANR	10990038	CallExpression	"r_has_type ( op , t_integer )"		10989997	1					
ANR	10990039	Callee	r_has_type		10989997	0					
ANR	10990040	Identifier	r_has_type		10989997	0					
ANR	10990041	ArgumentList	op		10989997	1					
ANR	10990042	Argument	op		10989997	0					
ANR	10990043	Identifier	op		10989997	0					
ANR	10990044	Argument	t_integer		10989997	1					
ANR	10990045	Identifier	t_integer		10989997	0					
ANR	10990046	CompoundStatement		8:36:131:131	10989997	1					
ANR	10990047	IfStatement	"if ( r_has_type ( op , t_real ) )"		10989997	0					
ANR	10990048	Condition	"r_has_type ( op , t_real )"	1079:12:34443:34464	10989997	0	True				
ANR	10990049	CallExpression	"r_has_type ( op , t_real )"		10989997	0					
ANR	10990050	Callee	r_has_type		10989997	0					
ANR	10990051	Identifier	r_has_type		10989997	0					
ANR	10990052	ArgumentList	op		10989997	1					
ANR	10990053	Argument	op		10989997	0					
ANR	10990054	Identifier	op		10989997	0					
ANR	10990055	Argument	t_real		10989997	1					
ANR	10990056	Identifier	t_real		10989997	0					
ANR	10990057	CompoundStatement		9:36:169:169	10989997	1					
ANR	10990058	ExpressionStatement	Gray = op -> value . realval	1080:12:34481:34505	10989997	0	True				
ANR	10990059	AssignmentExpression	Gray = op -> value . realval		10989997	0		=			
ANR	10990060	Identifier	Gray		10989997	0					
ANR	10990061	MemberAccess	op -> value . realval		10989997	1					
ANR	10990062	PtrMemberAccess	op -> value		10989997	0					
ANR	10990063	Identifier	op		10989997	0					
ANR	10990064	Identifier	value		10989997	1					
ANR	10990065	Identifier	realval		10989997	1					
ANR	10990066	ElseStatement	else		10989997	0					
ANR	10990067	ExpressionStatement	return_error ( gs_error_typecheck )	1082:12:34534:34566	10989997	0	True				
ANR	10990068	CallExpression	return_error ( gs_error_typecheck )		10989997	0					
ANR	10990069	Callee	return_error		10989997	0					
ANR	10990070	Identifier	return_error		10989997	0					
ANR	10990071	ArgumentList	gs_error_typecheck		10989997	1					
ANR	10990072	Argument	gs_error_typecheck		10989997	0					
ANR	10990073	Identifier	gs_error_typecheck		10989997	0					
ANR	10990074	ElseStatement	else		10989997	0					
ANR	10990075	ExpressionStatement	Gray = ( float ) op -> value . intval	1084:8:34587:34617	10989997	0	True				
ANR	10990076	AssignmentExpression	Gray = ( float ) op -> value . intval		10989997	0		=			
ANR	10990077	Identifier	Gray		10989997	0					
ANR	10990078	CastExpression	( float ) op -> value . intval		10989997	1					
ANR	10990079	CastTarget	float		10989997	0					
ANR	10990080	MemberAccess	op -> value . intval		10989997	1					
ANR	10990081	PtrMemberAccess	op -> value		10989997	0					
ANR	10990082	Identifier	op		10989997	0					
ANR	10990083	Identifier	value		10989997	1					
ANR	10990084	Identifier	intval		10989997	1					
ANR	10990085	IfStatement	if ( Gray < 0 || Gray > 1 )		10989997	6					
ANR	10990086	Condition	Gray < 0 || Gray > 1	1086:8:34628:34647	10989997	0	True				
ANR	10990087	OrExpression	Gray < 0 || Gray > 1		10989997	0		||			
ANR	10990088	RelationalExpression	Gray < 0		10989997	0		<			
ANR	10990089	Identifier	Gray		10989997	0					
ANR	10990090	PrimaryExpression	0		10989997	1					
ANR	10990091	RelationalExpression	Gray > 1		10989997	1		>			
ANR	10990092	Identifier	Gray		10989997	0					
ANR	10990093	PrimaryExpression	1		10989997	1					
ANR	10990094	ExpressionStatement	return_error ( gs_error_rangecheck )	1087:8:34658:34691	10989997	1	True				
ANR	10990095	CallExpression	return_error ( gs_error_rangecheck )		10989997	0					
ANR	10990096	Callee	return_error		10989997	0					
ANR	10990097	Identifier	return_error		10989997	0					
ANR	10990098	ArgumentList	gs_error_rangecheck		10989997	1					
ANR	10990099	Argument	gs_error_rangecheck		10989997	0					
ANR	10990100	Identifier	gs_error_rangecheck		10989997	0					
ANR	10990101	SwitchStatement	switch ( base )		10989997	7					
ANR	10990102	Condition	base	1089:12:34706:34709	10989997	0	True				
ANR	10990103	Identifier	base		10989997	0					
ANR	10990104	CompoundStatement		19:18:414:414	10989997	1					
ANR	10990105	Label	case 0 :	1090:8:34722:34728	10989997	0	True				
ANR	10990106	ExpressionStatement	"make_real ( op , Gray )"	1092:12:34810:34829	10989997	1	True				
ANR	10990107	CallExpression	"make_real ( op , Gray )"		10989997	0					
ANR	10990108	Callee	make_real		10989997	0					
ANR	10990109	Identifier	make_real		10989997	0					
ANR	10990110	ArgumentList	op		10989997	1					
ANR	10990111	Argument	op		10989997	0					
ANR	10990112	Identifier	op		10989997	0					
ANR	10990113	Argument	Gray		10989997	1					
ANR	10990114	Identifier	Gray		10989997	0					
ANR	10990115	BreakStatement	break ;	1093:12:34843:34848	10989997	2	True				
ANR	10990116	Label	case 1 :	1094:8:34858:34864	10989997	3	True				
ANR	10990117	Label	case 2 :	1096:8:34915:34921	10989997	4	True				
ANR	10990118	ExpressionStatement	push ( 2 )	1100:12:35046:35053	10989997	5	True				
ANR	10990119	CallExpression	push ( 2 )		10989997	0					
ANR	10990120	Callee	push		10989997	0					
ANR	10990121	Identifier	push		10989997	0					
ANR	10990122	ArgumentList	2		10989997	1					
ANR	10990123	Argument	2		10989997	0					
ANR	10990124	PrimaryExpression	2		10989997	0					
ANR	10990125	ExpressionStatement	RGB [ 0 ] = RGB [ 1 ] = RGB [ 2 ] = Gray	1101:12:35067:35098	10989997	6	True				
ANR	10990126	AssignmentExpression	RGB [ 0 ] = RGB [ 1 ] = RGB [ 2 ] = Gray		10989997	0		=			
ANR	10990127	ArrayIndexing	RGB [ 0 ]		10989997	0					
ANR	10990128	Identifier	RGB		10989997	0					
ANR	10990129	PrimaryExpression	0		10989997	1					
ANR	10990130	AssignmentExpression	RGB [ 1 ] = RGB [ 2 ] = Gray		10989997	1		=			
ANR	10990131	ArrayIndexing	RGB [ 1 ]		10989997	0					
ANR	10990132	Identifier	RGB		10989997	0					
ANR	10990133	PrimaryExpression	1		10989997	1					
ANR	10990134	AssignmentExpression	RGB [ 2 ] = Gray		10989997	1		=			
ANR	10990135	ArrayIndexing	RGB [ 2 ]		10989997	0					
ANR	10990136	Identifier	RGB		10989997	0					
ANR	10990137	PrimaryExpression	2		10989997	1					
ANR	10990138	Identifier	Gray		10989997	1					
ANR	10990139	IfStatement	if ( base == 1 )		10989997	7					
ANR	10990140	Condition	base == 1	1102:16:35116:35124	10989997	0	True				
ANR	10990141	EqualityExpression	base == 1		10989997	0		==			
ANR	10990142	Identifier	base		10989997	0					
ANR	10990143	PrimaryExpression	1		10989997	1					
ANR	10990144	ExpressionStatement	rgb2hsb ( ( float * ) & RGB )	1104:16:35219:35241	10989997	1	True				
ANR	10990145	CallExpression	rgb2hsb ( ( float * ) & RGB )		10989997	0					
ANR	10990146	Callee	rgb2hsb		10989997	0					
ANR	10990147	Identifier	rgb2hsb		10989997	0					
ANR	10990148	ArgumentList	( float * ) & RGB		10989997	1					
ANR	10990149	Argument	( float * ) & RGB		10989997	0					
ANR	10990150	CastExpression	( float * ) & RGB		10989997	0					
ANR	10990151	CastTarget	float *		10989997	0					
ANR	10990152	UnaryOperationExpression	& RGB		10989997	1					
ANR	10990153	UnaryOperator	&		10989997	0					
ANR	10990154	Identifier	RGB		10989997	1					
ANR	10990155	ExpressionStatement	"make_real ( & op [ - 2 ] , RGB [ 0 ] )"	1105:12:35255:35281	10989997	8	True				
ANR	10990156	CallExpression	"make_real ( & op [ - 2 ] , RGB [ 0 ] )"		10989997	0					
ANR	10990157	Callee	make_real		10989997	0					
ANR	10990158	Identifier	make_real		10989997	0					
ANR	10990159	ArgumentList	& op [ - 2 ]		10989997	1					
ANR	10990160	Argument	& op [ - 2 ]		10989997	0					
ANR	10990161	UnaryOperationExpression	& op [ - 2 ]		10989997	0					
ANR	10990162	UnaryOperator	&		10989997	0					
ANR	10990163	ArrayIndexing	op [ - 2 ]		10989997	1					
ANR	10990164	Identifier	op		10989997	0					
ANR	10990165	UnaryOperationExpression	- 2		10989997	1					
ANR	10990166	UnaryOperator	-		10989997	0					
ANR	10990167	PrimaryExpression	2		10989997	1					
ANR	10990168	Argument	RGB [ 0 ]		10989997	1					
ANR	10990169	ArrayIndexing	RGB [ 0 ]		10989997	0					
ANR	10990170	Identifier	RGB		10989997	0					
ANR	10990171	PrimaryExpression	0		10989997	1					
ANR	10990172	ExpressionStatement	"make_real ( & op [ - 1 ] , RGB [ 1 ] )"	1106:12:35295:35321	10989997	9	True				
ANR	10990173	CallExpression	"make_real ( & op [ - 1 ] , RGB [ 1 ] )"		10989997	0					
ANR	10990174	Callee	make_real		10989997	0					
ANR	10990175	Identifier	make_real		10989997	0					
ANR	10990176	ArgumentList	& op [ - 1 ]		10989997	1					
ANR	10990177	Argument	& op [ - 1 ]		10989997	0					
ANR	10990178	UnaryOperationExpression	& op [ - 1 ]		10989997	0					
ANR	10990179	UnaryOperator	&		10989997	0					
ANR	10990180	ArrayIndexing	op [ - 1 ]		10989997	1					
ANR	10990181	Identifier	op		10989997	0					
ANR	10990182	UnaryOperationExpression	- 1		10989997	1					
ANR	10990183	UnaryOperator	-		10989997	0					
ANR	10990184	PrimaryExpression	1		10989997	1					
ANR	10990185	Argument	RGB [ 1 ]		10989997	1					
ANR	10990186	ArrayIndexing	RGB [ 1 ]		10989997	0					
ANR	10990187	Identifier	RGB		10989997	0					
ANR	10990188	PrimaryExpression	1		10989997	1					
ANR	10990189	ExpressionStatement	"make_real ( op , RGB [ 2 ] )"	1107:12:35335:35356	10989997	10	True				
ANR	10990190	CallExpression	"make_real ( op , RGB [ 2 ] )"		10989997	0					
ANR	10990191	Callee	make_real		10989997	0					
ANR	10990192	Identifier	make_real		10989997	0					
ANR	10990193	ArgumentList	op		10989997	1					
ANR	10990194	Argument	op		10989997	0					
ANR	10990195	Identifier	op		10989997	0					
ANR	10990196	Argument	RGB [ 2 ]		10989997	1					
ANR	10990197	ArrayIndexing	RGB [ 2 ]		10989997	0					
ANR	10990198	Identifier	RGB		10989997	0					
ANR	10990199	PrimaryExpression	2		10989997	1					
ANR	10990200	BreakStatement	break ;	1108:12:35370:35375	10989997	11	True				
ANR	10990201	Label	case 3 :	1109:8:35385:35391	10989997	12	True				
ANR	10990202	ExpressionStatement	push ( 3 )	1113:12:35521:35528	10989997	13	True				
ANR	10990203	CallExpression	push ( 3 )		10989997	0					
ANR	10990204	Callee	push		10989997	0					
ANR	10990205	Identifier	push		10989997	0					
ANR	10990206	ArgumentList	3		10989997	1					
ANR	10990207	Argument	3		10989997	0					
ANR	10990208	PrimaryExpression	3		10989997	0					
ANR	10990209	ExpressionStatement	"make_real ( & op [ - 3 ] , ( float ) 0 )"	1114:12:35542:35570	10989997	14	True				
ANR	10990210	CallExpression	"make_real ( & op [ - 3 ] , ( float ) 0 )"		10989997	0					
ANR	10990211	Callee	make_real		10989997	0					
ANR	10990212	Identifier	make_real		10989997	0					
ANR	10990213	ArgumentList	& op [ - 3 ]		10989997	1					
ANR	10990214	Argument	& op [ - 3 ]		10989997	0					
ANR	10990215	UnaryOperationExpression	& op [ - 3 ]		10989997	0					
ANR	10990216	UnaryOperator	&		10989997	0					
ANR	10990217	ArrayIndexing	op [ - 3 ]		10989997	1					
ANR	10990218	Identifier	op		10989997	0					
ANR	10990219	UnaryOperationExpression	- 3		10989997	1					
ANR	10990220	UnaryOperator	-		10989997	0					
ANR	10990221	PrimaryExpression	3		10989997	1					
ANR	10990222	Argument	( float ) 0		10989997	1					
ANR	10990223	CastExpression	( float ) 0		10989997	0					
ANR	10990224	CastTarget	float		10989997	0					
ANR	10990225	PrimaryExpression	0		10989997	1					
ANR	10990226	ExpressionStatement	"make_real ( & op [ - 2 ] , ( float ) 0 )"	1115:12:35584:35612	10989997	15	True				
ANR	10990227	CallExpression	"make_real ( & op [ - 2 ] , ( float ) 0 )"		10989997	0					
ANR	10990228	Callee	make_real		10989997	0					
ANR	10990229	Identifier	make_real		10989997	0					
ANR	10990230	ArgumentList	& op [ - 2 ]		10989997	1					
ANR	10990231	Argument	& op [ - 2 ]		10989997	0					
ANR	10990232	UnaryOperationExpression	& op [ - 2 ]		10989997	0					
ANR	10990233	UnaryOperator	&		10989997	0					
ANR	10990234	ArrayIndexing	op [ - 2 ]		10989997	1					
ANR	10990235	Identifier	op		10989997	0					
ANR	10990236	UnaryOperationExpression	- 2		10989997	1					
ANR	10990237	UnaryOperator	-		10989997	0					
ANR	10990238	PrimaryExpression	2		10989997	1					
ANR	10990239	Argument	( float ) 0		10989997	1					
ANR	10990240	CastExpression	( float ) 0		10989997	0					
ANR	10990241	CastTarget	float		10989997	0					
ANR	10990242	PrimaryExpression	0		10989997	1					
ANR	10990243	ExpressionStatement	"make_real ( & op [ - 1 ] , ( float ) 0 )"	1116:12:35626:35654	10989997	16	True				
ANR	10990244	CallExpression	"make_real ( & op [ - 1 ] , ( float ) 0 )"		10989997	0					
ANR	10990245	Callee	make_real		10989997	0					
ANR	10990246	Identifier	make_real		10989997	0					
ANR	10990247	ArgumentList	& op [ - 1 ]		10989997	1					
ANR	10990248	Argument	& op [ - 1 ]		10989997	0					
ANR	10990249	UnaryOperationExpression	& op [ - 1 ]		10989997	0					
ANR	10990250	UnaryOperator	&		10989997	0					
ANR	10990251	ArrayIndexing	op [ - 1 ]		10989997	1					
ANR	10990252	Identifier	op		10989997	0					
ANR	10990253	UnaryOperationExpression	- 1		10989997	1					
ANR	10990254	UnaryOperator	-		10989997	0					
ANR	10990255	PrimaryExpression	1		10989997	1					
ANR	10990256	Argument	( float ) 0		10989997	1					
ANR	10990257	CastExpression	( float ) 0		10989997	0					
ANR	10990258	CastTarget	float		10989997	0					
ANR	10990259	PrimaryExpression	0		10989997	1					
ANR	10990260	ExpressionStatement	"make_real ( op , ( float ) 1.0 - Gray )"	1117:12:35668:35700	10989997	17	True				
ANR	10990261	CallExpression	"make_real ( op , ( float ) 1.0 - Gray )"		10989997	0					
ANR	10990262	Callee	make_real		10989997	0					
ANR	10990263	Identifier	make_real		10989997	0					
ANR	10990264	ArgumentList	op		10989997	1					
ANR	10990265	Argument	op		10989997	0					
ANR	10990266	Identifier	op		10989997	0					
ANR	10990267	Argument	( float ) 1.0 - Gray		10989997	1					
ANR	10990268	AdditiveExpression	( float ) 1.0 - Gray		10989997	0		-			
ANR	10990269	CastExpression	( float ) 1.0		10989997	0					
ANR	10990270	CastTarget	float		10989997	0					
ANR	10990271	PrimaryExpression	1.0		10989997	1					
ANR	10990272	Identifier	Gray		10989997	1					
ANR	10990273	BreakStatement	break ;	1118:12:35714:35719	10989997	18	True				
ANR	10990274	Label	default :	1119:8:35729:35736	10989997	19	True				
ANR	10990275	Identifier	default		10989997	0					
ANR	10990276	ExpressionStatement	return_error ( gs_error_undefined )	1120:12:35750:35782	10989997	20	True				
ANR	10990277	CallExpression	return_error ( gs_error_undefined )		10989997	0					
ANR	10990278	Callee	return_error		10989997	0					
ANR	10990279	Identifier	return_error		10989997	0					
ANR	10990280	ArgumentList	gs_error_undefined		10989997	1					
ANR	10990281	Argument	gs_error_undefined		10989997	0					
ANR	10990282	Identifier	gs_error_undefined		10989997	0					
ANR	10990283	ReturnStatement	return 0 ;	1122:4:35794:35802	10989997	8	True				
ANR	10990284	PrimaryExpression	0		10989997	0					
ANR	10990285	ReturnType	static int		10989997	1					
ANR	10990286	Identifier	graybasecolor		10989997	2					
ANR	10990287	ParameterList	"i_ctx_t * i_ctx_p , ref * space , int base , int * stage , int * cont , int * stack_depth"		10989997	3					
ANR	10990288	Parameter	i_ctx_t * i_ctx_p	1070:25:34215:34231	10989997	0	True				
ANR	10990289	ParameterType	i_ctx_t *		10989997	0					
ANR	10990290	Identifier	i_ctx_p		10989997	1					
ANR	10990291	Parameter	ref * space	1070:44:34234:34243	10989997	1	True				
ANR	10990292	ParameterType	ref *		10989997	0					
ANR	10990293	Identifier	space		10989997	1					
ANR	10990294	Parameter	int base	1070:56:34246:34253	10989997	2	True				
ANR	10990295	ParameterType	int		10989997	0					
ANR	10990296	Identifier	base		10989997	1					
ANR	10990297	Parameter	int * stage	1070:66:34256:34265	10989997	3	True				
ANR	10990298	ParameterType	int *		10989997	0					
ANR	10990299	Identifier	stage		10989997	1					
ANR	10990300	Parameter	int * cont	1070:78:34268:34276	10989997	4	True				
ANR	10990301	ParameterType	int *		10989997	0					
ANR	10990302	Identifier	cont		10989997	1					
ANR	10990303	Parameter	int * stack_depth	1070:89:34279:34294	10989997	5	True				
ANR	10990304	ParameterType	int *		10989997	0					
ANR	10990305	Identifier	stack_depth		10989997	1					
ANR	10990306	CFGEntryNode	ENTRY		10989997		True				
ANR	10990307	CFGExitNode	EXIT		10989997		True				
ANR	10990308	Symbol	stack_depth		10989997						
ANR	10990309	Symbol	op		10989997						
ANR	10990310	Symbol	Gray		10989997						
ANR	10990311	Symbol	* stage		10989997						
ANR	10990312	Symbol	* op		10989997						
ANR	10990313	Symbol	gs_error_rangecheck		10989997						
ANR	10990314	Symbol	* RGB		10989997						
ANR	10990315	Symbol	gs_error_undefined		10989997						
ANR	10990316	Symbol	op -> value . realval		10989997						
ANR	10990317	Symbol	t_real		10989997						
ANR	10990318	Symbol	RGB		10989997						
ANR	10990319	Symbol	osp		10989997						
ANR	10990320	Symbol	space		10989997						
ANR	10990321	Symbol	r_has_type		10989997						
ANR	10990322	Symbol	gs_error_typecheck		10989997						
ANR	10990323	Symbol	stage		10989997						
ANR	10990324	Symbol	t_integer		10989997						
ANR	10990325	Symbol	& RGB		10989997						
ANR	10990326	Symbol	* cont		10989997						
ANR	10990327	Symbol	i_ctx_p		10989997						
ANR	10990328	Symbol	op -> value		10989997						
ANR	10990329	Symbol	cont		10989997						
ANR	10990330	Symbol	op -> value . intval		10989997						
ANR	10990331	Symbol	base		10989997						
ANR	10990332	Function	grayvalidate	1124:0:35806:36200							
ANR	10990333	FunctionDef	"grayvalidate (i_ctx_t * i_ctx_p , ref * space , float * values , int num_comps)"		10990332	0					
ANR	10990334	CompoundStatement		1125:0:35890:36200	10990332	0					
ANR	10990335	IdentifierDeclStatement	os_ptr op = osp ;	1126:4:35896:35911	10990332	0	True				
ANR	10990336	IdentifierDecl	op = osp		10990332	0					
ANR	10990337	IdentifierDeclType	os_ptr		10990332	0					
ANR	10990338	Identifier	op		10990332	1					
ANR	10990339	AssignmentExpression	op = osp		10990332	2		=			
ANR	10990340	Identifier	osp		10990332	0					
ANR	10990341	Identifier	osp		10990332	1					
ANR	10990342	IfStatement	"if ( ! r_has_type ( op , t_integer ) && ! r_has_type ( op , t_real ) )"		10990332	1					
ANR	10990343	Condition	"! r_has_type ( op , t_integer ) && ! r_has_type ( op , t_real )"	1128:8:35922:35974	10990332	0	True				
ANR	10990344	AndExpression	"! r_has_type ( op , t_integer ) && ! r_has_type ( op , t_real )"		10990332	0		&&			
ANR	10990345	UnaryOperationExpression	"! r_has_type ( op , t_integer )"		10990332	0					
ANR	10990346	UnaryOperator	!		10990332	0					
ANR	10990347	CallExpression	"r_has_type ( op , t_integer )"		10990332	1					
ANR	10990348	Callee	r_has_type		10990332	0					
ANR	10990349	Identifier	r_has_type		10990332	0					
ANR	10990350	ArgumentList	op		10990332	1					
ANR	10990351	Argument	op		10990332	0					
ANR	10990352	Identifier	op		10990332	0					
ANR	10990353	Argument	t_integer		10990332	1					
ANR	10990354	Identifier	t_integer		10990332	0					
ANR	10990355	UnaryOperationExpression	"! r_has_type ( op , t_real )"		10990332	1					
ANR	10990356	UnaryOperator	!		10990332	0					
ANR	10990357	CallExpression	"r_has_type ( op , t_real )"		10990332	1					
ANR	10990358	Callee	r_has_type		10990332	0					
ANR	10990359	Identifier	r_has_type		10990332	0					
ANR	10990360	ArgumentList	op		10990332	1					
ANR	10990361	Argument	op		10990332	0					
ANR	10990362	Identifier	op		10990332	0					
ANR	10990363	Argument	t_real		10990332	1					
ANR	10990364	Identifier	t_real		10990332	0					
ANR	10990365	ExpressionStatement	return_error ( gs_error_typecheck )	1129:8:35985:36017	10990332	1	True				
ANR	10990366	CallExpression	return_error ( gs_error_typecheck )		10990332	0					
ANR	10990367	Callee	return_error		10990332	0					
ANR	10990368	Identifier	return_error		10990332	0					
ANR	10990369	ArgumentList	gs_error_typecheck		10990332	1					
ANR	10990370	Argument	gs_error_typecheck		10990332	0					
ANR	10990371	Identifier	gs_error_typecheck		10990332	0					
ANR	10990372	IfStatement	if ( num_comps < 1 )		10990332	2					
ANR	10990373	Condition	num_comps < 1	1131:8:36028:36040	10990332	0	True				
ANR	10990374	RelationalExpression	num_comps < 1		10990332	0		<			
ANR	10990375	Identifier	num_comps		10990332	0					
ANR	10990376	PrimaryExpression	1		10990332	1					
ANR	10990377	ExpressionStatement	return_error ( gs_error_stackunderflow )	1132:8:36051:36088	10990332	1	True				
ANR	10990378	CallExpression	return_error ( gs_error_stackunderflow )		10990332	0					
ANR	10990379	Callee	return_error		10990332	0					
ANR	10990380	Identifier	return_error		10990332	0					
ANR	10990381	ArgumentList	gs_error_stackunderflow		10990332	1					
ANR	10990382	Argument	gs_error_stackunderflow		10990332	0					
ANR	10990383	Identifier	gs_error_stackunderflow		10990332	0					
ANR	10990384	IfStatement	if ( * values > 1.0 )		10990332	3					
ANR	10990385	Condition	* values > 1.0	1134:8:36099:36111	10990332	0	True				
ANR	10990386	RelationalExpression	* values > 1.0		10990332	0		>			
ANR	10990387	UnaryOperationExpression	* values		10990332	0					
ANR	10990388	UnaryOperator	*		10990332	0					
ANR	10990389	Identifier	values		10990332	1					
ANR	10990390	PrimaryExpression	1.0		10990332	1					
ANR	10990391	ExpressionStatement	* values = 1.0	1135:8:36122:36135	10990332	1	True				
ANR	10990392	AssignmentExpression	* values = 1.0		10990332	0		=			
ANR	10990393	UnaryOperationExpression	* values		10990332	0					
ANR	10990394	UnaryOperator	*		10990332	0					
ANR	10990395	Identifier	values		10990332	1					
ANR	10990396	PrimaryExpression	1.0		10990332	1					
ANR	10990397	IfStatement	if ( * values < 0.0 )		10990332	4					
ANR	10990398	Condition	* values < 0.0	1137:9:36147:36159	10990332	0	True				
ANR	10990399	RelationalExpression	* values < 0.0		10990332	0		<			
ANR	10990400	UnaryOperationExpression	* values		10990332	0					
ANR	10990401	UnaryOperator	*		10990332	0					
ANR	10990402	Identifier	values		10990332	1					
ANR	10990403	PrimaryExpression	0.0		10990332	1					
ANR	10990404	ExpressionStatement	* values = 0.0	1138:8:36170:36183	10990332	1	True				
ANR	10990405	AssignmentExpression	* values = 0.0		10990332	0		=			
ANR	10990406	UnaryOperationExpression	* values		10990332	0					
ANR	10990407	UnaryOperator	*		10990332	0					
ANR	10990408	Identifier	values		10990332	1					
ANR	10990409	PrimaryExpression	0.0		10990332	1					
ANR	10990410	ReturnStatement	return 0 ;	1140:4:36190:36198	10990332	5	True				
ANR	10990411	PrimaryExpression	0		10990332	0					
ANR	10990412	ReturnType	static int		10990332	1					
ANR	10990413	Identifier	grayvalidate		10990332	2					
ANR	10990414	ParameterList	"i_ctx_t * i_ctx_p , ref * space , float * values , int num_comps"		10990332	3					
ANR	10990415	Parameter	i_ctx_t * i_ctx_p	1124:24:35830:35845	10990332	0	True				
ANR	10990416	ParameterType	i_ctx_t *		10990332	0					
ANR	10990417	Identifier	i_ctx_p		10990332	1					
ANR	10990418	Parameter	ref * space	1124:42:35848:35857	10990332	1	True				
ANR	10990419	ParameterType	ref *		10990332	0					
ANR	10990420	Identifier	space		10990332	1					
ANR	10990421	Parameter	float * values	1124:54:35860:35872	10990332	2	True				
ANR	10990422	ParameterType	float *		10990332	0					
ANR	10990423	Identifier	values		10990332	1					
ANR	10990424	Parameter	int num_comps	1124:69:35875:35887	10990332	3	True				
ANR	10990425	ParameterType	int		10990332	0					
ANR	10990426	Identifier	num_comps		10990332	1					
ANR	10990427	CFGEntryNode	ENTRY		10990332		True				
ANR	10990428	CFGExitNode	EXIT		10990332		True				
ANR	10990429	Symbol	op		10990332						
ANR	10990430	Symbol	r_has_type		10990332						
ANR	10990431	Symbol	gs_error_typecheck		10990332						
ANR	10990432	Symbol	t_integer		10990332						
ANR	10990433	Symbol	gs_error_stackunderflow		10990332						
ANR	10990434	Symbol	i_ctx_p		10990332						
ANR	10990435	Symbol	* values		10990332						
ANR	10990436	Symbol	values		10990332						
ANR	10990437	Symbol	num_comps		10990332						
ANR	10990438	Symbol	t_real		10990332						
ANR	10990439	Symbol	osp		10990332						
ANR	10990440	Symbol	space		10990332						
ANR	10990441	Function	grayinitialproc	1142:0:36202:36371							
ANR	10990442	FunctionDef	"grayinitialproc (i_ctx_t * i_ctx_p , ref * space)"		10990441	0					
ANR	10990443	CompoundStatement		1143:0:36259:36371	10990441	0					
ANR	10990444	IdentifierDeclStatement	gs_client_color cc ;	1144:4:36265:36283	10990441	0	True				
ANR	10990445	IdentifierDecl	cc		10990441	0					
ANR	10990446	IdentifierDeclType	gs_client_color		10990441	0					
ANR	10990447	Identifier	cc		10990441	1					
ANR	10990448	ExpressionStatement	cc . pattern = 0x00	1146:4:36290:36307	10990441	1	True				
ANR	10990449	AssignmentExpression	cc . pattern = 0x00		10990441	0		=			
ANR	10990450	MemberAccess	cc . pattern		10990441	0					
ANR	10990451	Identifier	cc		10990441	0					
ANR	10990452	Identifier	pattern		10990441	1					
ANR	10990453	PrimaryExpression	0x00		10990441	1					
ANR	10990454	ExpressionStatement	cc . paint . values [ 0 ] = 0	1147:4:36313:36335	10990441	2	True				
ANR	10990455	AssignmentExpression	cc . paint . values [ 0 ] = 0		10990441	0		=			
ANR	10990456	ArrayIndexing	cc . paint . values [ 0 ]		10990441	0					
ANR	10990457	MemberAccess	cc . paint . values		10990441	0					
ANR	10990458	MemberAccess	cc . paint		10990441	0					
ANR	10990459	Identifier	cc		10990441	0					
ANR	10990460	Identifier	paint		10990441	1					
ANR	10990461	Identifier	values		10990441	1					
ANR	10990462	PrimaryExpression	0		10990441	1					
ANR	10990463	PrimaryExpression	0		10990441	1					
ANR	10990464	ReturnStatement	"return gs_setcolor ( igs , & cc ) ;"	1148:4:36341:36369	10990441	3	True				
ANR	10990465	CallExpression	"gs_setcolor ( igs , & cc )"		10990441	0					
ANR	10990466	Callee	gs_setcolor		10990441	0					
ANR	10990467	Identifier	gs_setcolor		10990441	0					
ANR	10990468	ArgumentList	igs		10990441	1					
ANR	10990469	Argument	igs		10990441	0					
ANR	10990470	Identifier	igs		10990441	0					
ANR	10990471	Argument	& cc		10990441	1					
ANR	10990472	UnaryOperationExpression	& cc		10990441	0					
ANR	10990473	UnaryOperator	&		10990441	0					
ANR	10990474	Identifier	cc		10990441	1					
ANR	10990475	ReturnType	static int		10990441	1					
ANR	10990476	Identifier	grayinitialproc		10990441	2					
ANR	10990477	ParameterList	"i_ctx_t * i_ctx_p , ref * space"		10990441	3					
ANR	10990478	Parameter	i_ctx_t * i_ctx_p	1142:27:36229:36244	10990441	0	True				
ANR	10990479	ParameterType	i_ctx_t *		10990441	0					
ANR	10990480	Identifier	i_ctx_p		10990441	1					
ANR	10990481	Parameter	ref * space	1142:45:36247:36256	10990441	1	True				
ANR	10990482	ParameterType	ref *		10990441	0					
ANR	10990483	Identifier	space		10990441	1					
ANR	10990484	CFGEntryNode	ENTRY		10990441		True				
ANR	10990485	CFGExitNode	EXIT		10990441		True				
ANR	10990486	Symbol	cc		10990441						
ANR	10990487	Symbol	cc . pattern		10990441						
ANR	10990488	Symbol	* cc . paint		10990441						
ANR	10990489	Symbol	igs		10990441						
ANR	10990490	Symbol	* cc		10990441						
ANR	10990491	Symbol	* cc . paint . values		10990441						
ANR	10990492	Symbol	i_ctx_p		10990441						
ANR	10990493	Symbol	cc . paint		10990441						
ANR	10990494	Symbol	gs_setcolor		10990441						
ANR	10990495	Symbol	& cc		10990441						
ANR	10990496	Symbol	cc . paint . values		10990441						
ANR	10990497	Symbol	space		10990441						
ANR	10990498	Function	setrgbspace	1152:0:36390:41389							
ANR	10990499	FunctionDef	"setrgbspace (i_ctx_t * i_ctx_p , ref * r , int * stage , int * cont , int CIESubst)"		10990498	0					
ANR	10990500	CompoundStatement		1153:0:36477:41389	10990498	0					
ANR	10990501	IdentifierDeclStatement	os_ptr op = osp ;	1154:4:36483:36498	10990498	0	True				
ANR	10990502	IdentifierDecl	op = osp		10990498	0					
ANR	10990503	IdentifierDeclType	os_ptr		10990498	0					
ANR	10990504	Identifier	op		10990498	1					
ANR	10990505	AssignmentExpression	op = osp		10990498	2		=			
ANR	10990506	Identifier	osp		10990498	0					
ANR	10990507	Identifier	osp		10990498	1					
ANR	10990508	IdentifierDeclStatement	gs_color_space * pcs ;	1155:4:36504:36524	10990498	1	True				
ANR	10990509	IdentifierDecl	* pcs		10990498	0					
ANR	10990510	IdentifierDeclType	gs_color_space *		10990498	0					
ANR	10990511	Identifier	pcs		10990498	1					
ANR	10990512	IdentifierDeclStatement	int code = 0 ;	1156:4:36530:36540	10990498	2	True				
ANR	10990513	IdentifierDecl	code = 0		10990498	0					
ANR	10990514	IdentifierDeclType	int		10990498	0					
ANR	10990515	Identifier	code		10990498	1					
ANR	10990516	AssignmentExpression	code = 0		10990498	2		=			
ANR	10990517	Identifier	code		10990498	0					
ANR	10990518	PrimaryExpression	0		10990498	1					
ANR	10990519	IdentifierDeclStatement	ref stref ;	1157:4:36546:36555	10990498	3	True				
ANR	10990520	IdentifierDecl	stref		10990498	0					
ANR	10990521	IdentifierDeclType	ref		10990498	0					
ANR	10990522	Identifier	stref		10990498	1					
ANR	10990523	DoStatement	do		10990498	4					
ANR	10990524	CompoundStatement		7:7:87:87	10990498	0					
ANR	10990525	SwitchStatement	switch ( * stage )		10990498	0					
ANR	10990526	Condition	* stage	1160:16:36583:36588	10990498	0	True				
ANR	10990527	UnaryOperationExpression	* stage		10990498	0					
ANR	10990528	UnaryOperator	*		10990498	0					
ANR	10990529	Identifier	stage		10990498	1					
ANR	10990530	CompoundStatement		8:24:113:113	10990498	1					
ANR	10990531	Label	case 0 :	1161:12:36605:36611	10990498	0	True				
ANR	10990532	IfStatement	if ( istate -> use_cie_color . value . boolval && ! CIESubst )		10990498	1					
ANR	10990533	Condition	istate -> use_cie_color . value . boolval && ! CIESubst	1162:20:36633:36680	10990498	0	True				
ANR	10990534	AndExpression	istate -> use_cie_color . value . boolval && ! CIESubst		10990498	0		&&			
ANR	10990535	MemberAccess	istate -> use_cie_color . value . boolval		10990498	0					
ANR	10990536	MemberAccess	istate -> use_cie_color . value		10990498	0					
ANR	10990537	PtrMemberAccess	istate -> use_cie_color		10990498	0					
ANR	10990538	Identifier	istate		10990498	0					
ANR	10990539	Identifier	use_cie_color		10990498	1					
ANR	10990540	Identifier	value		10990498	1					
ANR	10990541	Identifier	boolval		10990498	1					
ANR	10990542	UnaryOperationExpression	! CIESubst		10990498	1					
ANR	10990543	UnaryOperator	!		10990498	0					
ANR	10990544	Identifier	CIESubst		10990498	1					
ANR	10990545	CompoundStatement		12:20:259:271	10990498	1					
ANR	10990546	IdentifierDeclStatement	byte * body ;	1163:20:36705:36715	10990498	0	True				
ANR	10990547	IdentifierDecl	* body		10990498	0					
ANR	10990548	IdentifierDeclType	byte *		10990498	0					
ANR	10990549	Identifier	body		10990498	1					
ANR	10990550	IdentifierDeclStatement	ref * nosubst ;	1164:20:36737:36749	10990498	1	True				
ANR	10990551	IdentifierDecl	* nosubst		10990498	0					
ANR	10990552	IdentifierDeclType	ref *		10990498	0					
ANR	10990553	Identifier	nosubst		10990498	1					
ANR	10990554	ExpressionStatement	"code = dict_find_string ( systemdict , ""NOSUBSTDEVICECOLORS"" , & nosubst )"	1166:20:36772:36840	10990498	2	True				
ANR	10990555	AssignmentExpression	"code = dict_find_string ( systemdict , ""NOSUBSTDEVICECOLORS"" , & nosubst )"		10990498	0		=			
ANR	10990556	Identifier	code		10990498	0					
ANR	10990557	CallExpression	"dict_find_string ( systemdict , ""NOSUBSTDEVICECOLORS"" , & nosubst )"		10990498	1					
ANR	10990558	Callee	dict_find_string		10990498	0					
ANR	10990559	Identifier	dict_find_string		10990498	0					
ANR	10990560	ArgumentList	systemdict		10990498	1					
ANR	10990561	Argument	systemdict		10990498	0					
ANR	10990562	Identifier	systemdict		10990498	0					
ANR	10990563	Argument	"""NOSUBSTDEVICECOLORS"""		10990498	1					
ANR	10990564	PrimaryExpression	"""NOSUBSTDEVICECOLORS"""		10990498	0					
ANR	10990565	Argument	& nosubst		10990498	2					
ANR	10990566	UnaryOperationExpression	& nosubst		10990498	0					
ANR	10990567	UnaryOperator	&		10990498	0					
ANR	10990568	Identifier	nosubst		10990498	1					
ANR	10990569	IfStatement	if ( code != 0 )		10990498	3					
ANR	10990570	Condition	code != 0	1167:24:36866:36874	10990498	0	True				
ANR	10990571	EqualityExpression	code != 0		10990498	0		!=			
ANR	10990572	Identifier	code		10990498	0					
ANR	10990573	PrimaryExpression	0		10990498	1					
ANR	10990574	CompoundStatement		15:35:399:399	10990498	1					
ANR	10990575	IfStatement	"if ( ! r_has_type ( nosubst , t_boolean ) )"		10990498	0					
ANR	10990576	Condition	"! r_has_type ( nosubst , t_boolean )"	1168:28:36907:36937	10990498	0	True				
ANR	10990577	UnaryOperationExpression	"! r_has_type ( nosubst , t_boolean )"		10990498	0					
ANR	10990578	UnaryOperator	!		10990498	0					
ANR	10990579	CallExpression	"r_has_type ( nosubst , t_boolean )"		10990498	1					
ANR	10990580	Callee	r_has_type		10990498	0					
ANR	10990581	Identifier	r_has_type		10990498	0					
ANR	10990582	ArgumentList	nosubst		10990498	1					
ANR	10990583	Argument	nosubst		10990498	0					
ANR	10990584	Identifier	nosubst		10990498	0					
ANR	10990585	Argument	t_boolean		10990498	1					
ANR	10990586	Identifier	t_boolean		10990498	0					
ANR	10990587	ExpressionStatement	return_error ( gs_error_typecheck )	1169:28:36968:37000	10990498	1	True				
ANR	10990588	CallExpression	return_error ( gs_error_typecheck )		10990498	0					
ANR	10990589	Callee	return_error		10990498	0					
ANR	10990590	Identifier	return_error		10990498	0					
ANR	10990591	ArgumentList	gs_error_typecheck		10990498	1					
ANR	10990592	Argument	gs_error_typecheck		10990498	0					
ANR	10990593	Identifier	gs_error_typecheck		10990498	0					
ANR	10990594	IfStatement	if ( code != 0 && nosubst -> value . boolval )		10990498	4					
ANR	10990595	Condition	code != 0 && nosubst -> value . boolval	1171:24:37048:37082	10990498	0	True				
ANR	10990596	AndExpression	code != 0 && nosubst -> value . boolval		10990498	0		&&			
ANR	10990597	EqualityExpression	code != 0		10990498	0		!=			
ANR	10990598	Identifier	code		10990498	0					
ANR	10990599	PrimaryExpression	0		10990498	1					
ANR	10990600	MemberAccess	nosubst -> value . boolval		10990498	1					
ANR	10990601	PtrMemberAccess	nosubst -> value		10990498	0					
ANR	10990602	Identifier	nosubst		10990498	0					
ANR	10990603	Identifier	value		10990498	1					
ANR	10990604	Identifier	boolval		10990498	1					
ANR	10990605	CompoundStatement		19:61:607:607	10990498	1					
ANR	10990606	ExpressionStatement	* stage = 4	1172:24:37111:37121	10990498	0	True				
ANR	10990607	AssignmentExpression	* stage = 4		10990498	0		=			
ANR	10990608	UnaryOperationExpression	* stage		10990498	0					
ANR	10990609	UnaryOperator	*		10990498	0					
ANR	10990610	Identifier	stage		10990498	1					
ANR	10990611	PrimaryExpression	4		10990498	1					
ANR	10990612	ExpressionStatement	* cont = 1	1173:24:37147:37156	10990498	1	True				
ANR	10990613	AssignmentExpression	* cont = 1		10990498	0		=			
ANR	10990614	UnaryOperationExpression	* cont		10990498	0					
ANR	10990615	UnaryOperator	*		10990498	0					
ANR	10990616	Identifier	cont		10990498	1					
ANR	10990617	PrimaryExpression	1		10990498	1					
ANR	10990618	ExpressionStatement	"body = ialloc_string ( 31 , ""string"" )"	1174:24:37182:37216	10990498	2	True				
ANR	10990619	AssignmentExpression	"body = ialloc_string ( 31 , ""string"" )"		10990498	0		=			
ANR	10990620	Identifier	body		10990498	0					
ANR	10990621	CallExpression	"ialloc_string ( 31 , ""string"" )"		10990498	1					
ANR	10990622	Callee	ialloc_string		10990498	0					
ANR	10990623	Identifier	ialloc_string		10990498	0					
ANR	10990624	ArgumentList	31		10990498	1					
ANR	10990625	Argument	31		10990498	0					
ANR	10990626	PrimaryExpression	31		10990498	0					
ANR	10990627	Argument	"""string"""		10990498	1					
ANR	10990628	PrimaryExpression	"""string"""		10990498	0					
ANR	10990629	IfStatement	if ( body == 0 )		10990498	3					
ANR	10990630	Condition	body == 0	1175:28:37246:37254	10990498	0	True				
ANR	10990631	EqualityExpression	body == 0		10990498	0		==			
ANR	10990632	Identifier	body		10990498	0					
ANR	10990633	PrimaryExpression	0		10990498	1					
ANR	10990634	ExpressionStatement	return_error ( gs_error_VMerror )	1176:28:37285:37315	10990498	1	True				
ANR	10990635	CallExpression	return_error ( gs_error_VMerror )		10990498	0					
ANR	10990636	Callee	return_error		10990498	0					
ANR	10990637	Identifier	return_error		10990498	0					
ANR	10990638	ArgumentList	gs_error_VMerror		10990498	1					
ANR	10990639	Argument	gs_error_VMerror		10990498	0					
ANR	10990640	Identifier	gs_error_VMerror		10990498	0					
ANR	10990641	ExpressionStatement	"memcpy ( body , ""/DefaultRGB ..nosubstdevicetest"" , 31 )"	1177:24:37341:37391	10990498	4	True				
ANR	10990642	CallExpression	"memcpy ( body , ""/DefaultRGB ..nosubstdevicetest"" , 31 )"		10990498	0					
ANR	10990643	Callee	memcpy		10990498	0					
ANR	10990644	Identifier	memcpy		10990498	0					
ANR	10990645	ArgumentList	body		10990498	1					
ANR	10990646	Argument	body		10990498	0					
ANR	10990647	Identifier	body		10990498	0					
ANR	10990648	Argument	"""/DefaultRGB ..nosubstdevicetest"""		10990498	1					
ANR	10990649	PrimaryExpression	"""/DefaultRGB ..nosubstdevicetest"""		10990498	0					
ANR	10990650	Argument	31		10990498	2					
ANR	10990651	PrimaryExpression	31		10990498	0					
ANR	10990652	ExpressionStatement	"make_string ( & stref , a_all | icurrent_space , 31 , body )"	1178:24:37417:37470	10990498	5	True				
ANR	10990653	CallExpression	"make_string ( & stref , a_all | icurrent_space , 31 , body )"		10990498	0					
ANR	10990654	Callee	make_string		10990498	0					
ANR	10990655	Identifier	make_string		10990498	0					
ANR	10990656	ArgumentList	& stref		10990498	1					
ANR	10990657	Argument	& stref		10990498	0					
ANR	10990658	UnaryOperationExpression	& stref		10990498	0					
ANR	10990659	UnaryOperator	&		10990498	0					
ANR	10990660	Identifier	stref		10990498	1					
ANR	10990661	Argument	a_all | icurrent_space		10990498	1					
ANR	10990662	InclusiveOrExpression	a_all | icurrent_space		10990498	0		|			
ANR	10990663	Identifier	a_all		10990498	0					
ANR	10990664	Identifier	icurrent_space		10990498	1					
ANR	10990665	Argument	31		10990498	2					
ANR	10990666	PrimaryExpression	31		10990498	0					
ANR	10990667	Argument	body		10990498	3					
ANR	10990668	Identifier	body		10990498	0					
ANR	10990669	ExpressionStatement	"r_set_attrs ( & stref , a_executable )"	1179:24:37496:37529	10990498	6	True				
ANR	10990670	CallExpression	"r_set_attrs ( & stref , a_executable )"		10990498	0					
ANR	10990671	Callee	r_set_attrs		10990498	0					
ANR	10990672	Identifier	r_set_attrs		10990498	0					
ANR	10990673	ArgumentList	& stref		10990498	1					
ANR	10990674	Argument	& stref		10990498	0					
ANR	10990675	UnaryOperationExpression	& stref		10990498	0					
ANR	10990676	UnaryOperator	&		10990498	0					
ANR	10990677	Identifier	stref		10990498	1					
ANR	10990678	Argument	a_executable		10990498	1					
ANR	10990679	Identifier	a_executable		10990498	0					
ANR	10990680	ExpressionStatement	esp ++	1180:24:37555:37560	10990498	7	True				
ANR	10990681	PostIncDecOperationExpression	esp ++		10990498	0					
ANR	10990682	Identifier	esp		10990498	0					
ANR	10990683	IncDec	++		10990498	1					
ANR	10990684	ExpressionStatement	"ref_assign ( esp , & stref )"	1181:24:37586:37609	10990498	8	True				
ANR	10990685	CallExpression	"ref_assign ( esp , & stref )"		10990498	0					
ANR	10990686	Callee	ref_assign		10990498	0					
ANR	10990687	Identifier	ref_assign		10990498	0					
ANR	10990688	ArgumentList	esp		10990498	1					
ANR	10990689	Argument	esp		10990498	0					
ANR	10990690	Identifier	esp		10990498	0					
ANR	10990691	Argument	& stref		10990498	1					
ANR	10990692	UnaryOperationExpression	& stref		10990498	0					
ANR	10990693	UnaryOperator	&		10990498	0					
ANR	10990694	Identifier	stref		10990498	1					
ANR	10990695	ReturnStatement	return o_push_estack ;	1182:24:37635:37655	10990498	9	True				
ANR	10990696	Identifier	o_push_estack		10990498	0					
ANR	10990697	ElseStatement	else		10990498	0					
ANR	10990698	CompoundStatement		31:27:1206:1206	10990498	0					
ANR	10990699	ExpressionStatement	* stage = 2	1184:24:37710:37720	10990498	0	True				
ANR	10990700	AssignmentExpression	* stage = 2		10990498	0		=			
ANR	10990701	UnaryOperationExpression	* stage		10990498	0					
ANR	10990702	UnaryOperator	*		10990498	0					
ANR	10990703	Identifier	stage		10990498	1					
ANR	10990704	PrimaryExpression	2		10990498	1					
ANR	10990705	ExpressionStatement	* cont = 1	1185:24:37746:37755	10990498	1	True				
ANR	10990706	AssignmentExpression	* cont = 1		10990498	0		=			
ANR	10990707	UnaryOperationExpression	* cont		10990498	0					
ANR	10990708	UnaryOperator	*		10990498	0					
ANR	10990709	Identifier	cont		10990498	1					
ANR	10990710	PrimaryExpression	1		10990498	1					
ANR	10990711	ExpressionStatement	"body = ialloc_string ( 46 , ""string"" )"	1186:24:37781:37815	10990498	2	True				
ANR	10990712	AssignmentExpression	"body = ialloc_string ( 46 , ""string"" )"		10990498	0		=			
ANR	10990713	Identifier	body		10990498	0					
ANR	10990714	CallExpression	"ialloc_string ( 46 , ""string"" )"		10990498	1					
ANR	10990715	Callee	ialloc_string		10990498	0					
ANR	10990716	Identifier	ialloc_string		10990498	0					
ANR	10990717	ArgumentList	46		10990498	1					
ANR	10990718	Argument	46		10990498	0					
ANR	10990719	PrimaryExpression	46		10990498	0					
ANR	10990720	Argument	"""string"""		10990498	1					
ANR	10990721	PrimaryExpression	"""string"""		10990498	0					
ANR	10990722	IfStatement	if ( body == 0 )		10990498	3					
ANR	10990723	Condition	body == 0	1187:28:37845:37853	10990498	0	True				
ANR	10990724	EqualityExpression	body == 0		10990498	0		==			
ANR	10990725	Identifier	body		10990498	0					
ANR	10990726	PrimaryExpression	0		10990498	1					
ANR	10990727	ExpressionStatement	return_error ( gs_error_VMerror )	1188:28:37884:37914	10990498	1	True				
ANR	10990728	CallExpression	return_error ( gs_error_VMerror )		10990498	0					
ANR	10990729	Callee	return_error		10990498	0					
ANR	10990730	Identifier	return_error		10990498	0					
ANR	10990731	ArgumentList	gs_error_VMerror		10990498	1					
ANR	10990732	Argument	gs_error_VMerror		10990498	0					
ANR	10990733	Identifier	gs_error_VMerror		10990498	0					
ANR	10990734	ExpressionStatement	"memcpy ( body , ""{/DefaultRGB /ColorSpace findresource} stopped"" , 46 )"	1189:24:37940:38006	10990498	4	True				
ANR	10990735	CallExpression	"memcpy ( body , ""{/DefaultRGB /ColorSpace findresource} stopped"" , 46 )"		10990498	0					
ANR	10990736	Callee	memcpy		10990498	0					
ANR	10990737	Identifier	memcpy		10990498	0					
ANR	10990738	ArgumentList	body		10990498	1					
ANR	10990739	Argument	body		10990498	0					
ANR	10990740	Identifier	body		10990498	0					
ANR	10990741	Argument	"""{/DefaultRGB /ColorSpace findresource} stopped"""		10990498	1					
ANR	10990742	PrimaryExpression	"""{/DefaultRGB /ColorSpace findresource} stopped"""		10990498	0					
ANR	10990743	Argument	46		10990498	2					
ANR	10990744	PrimaryExpression	46		10990498	0					
ANR	10990745	ExpressionStatement	"make_string ( & stref , a_all | icurrent_space , 46 , body )"	1190:24:38032:38085	10990498	5	True				
ANR	10990746	CallExpression	"make_string ( & stref , a_all | icurrent_space , 46 , body )"		10990498	0					
ANR	10990747	Callee	make_string		10990498	0					
ANR	10990748	Identifier	make_string		10990498	0					
ANR	10990749	ArgumentList	& stref		10990498	1					
ANR	10990750	Argument	& stref		10990498	0					
ANR	10990751	UnaryOperationExpression	& stref		10990498	0					
ANR	10990752	UnaryOperator	&		10990498	0					
ANR	10990753	Identifier	stref		10990498	1					
ANR	10990754	Argument	a_all | icurrent_space		10990498	1					
ANR	10990755	InclusiveOrExpression	a_all | icurrent_space		10990498	0		|			
ANR	10990756	Identifier	a_all		10990498	0					
ANR	10990757	Identifier	icurrent_space		10990498	1					
ANR	10990758	Argument	46		10990498	2					
ANR	10990759	PrimaryExpression	46		10990498	0					
ANR	10990760	Argument	body		10990498	3					
ANR	10990761	Identifier	body		10990498	0					
ANR	10990762	ExpressionStatement	"r_set_attrs ( & stref , a_executable )"	1191:24:38111:38144	10990498	6	True				
ANR	10990763	CallExpression	"r_set_attrs ( & stref , a_executable )"		10990498	0					
ANR	10990764	Callee	r_set_attrs		10990498	0					
ANR	10990765	Identifier	r_set_attrs		10990498	0					
ANR	10990766	ArgumentList	& stref		10990498	1					
ANR	10990767	Argument	& stref		10990498	0					
ANR	10990768	UnaryOperationExpression	& stref		10990498	0					
ANR	10990769	UnaryOperator	&		10990498	0					
ANR	10990770	Identifier	stref		10990498	1					
ANR	10990771	Argument	a_executable		10990498	1					
ANR	10990772	Identifier	a_executable		10990498	0					
ANR	10990773	ExpressionStatement	esp ++	1192:24:38170:38175	10990498	7	True				
ANR	10990774	PostIncDecOperationExpression	esp ++		10990498	0					
ANR	10990775	Identifier	esp		10990498	0					
ANR	10990776	IncDec	++		10990498	1					
ANR	10990777	ExpressionStatement	"ref_assign ( esp , & stref )"	1193:24:38201:38224	10990498	8	True				
ANR	10990778	CallExpression	"ref_assign ( esp , & stref )"		10990498	0					
ANR	10990779	Callee	ref_assign		10990498	0					
ANR	10990780	Identifier	ref_assign		10990498	0					
ANR	10990781	ArgumentList	esp		10990498	1					
ANR	10990782	Argument	esp		10990498	0					
ANR	10990783	Identifier	esp		10990498	0					
ANR	10990784	Argument	& stref		10990498	1					
ANR	10990785	UnaryOperationExpression	& stref		10990498	0					
ANR	10990786	UnaryOperator	&		10990498	0					
ANR	10990787	Identifier	stref		10990498	1					
ANR	10990788	ReturnStatement	return o_push_estack ;	1194:24:38250:38270	10990498	9	True				
ANR	10990789	Identifier	o_push_estack		10990498	0					
ANR	10990790	Label	case 1 :	1198:12:38359:38365	10990498	2	True				
ANR	10990791	ExpressionStatement	pcs = gs_cspace_new_DeviceRGB ( imemory )	1199:16:38383:38421	10990498	3	True				
ANR	10990792	AssignmentExpression	pcs = gs_cspace_new_DeviceRGB ( imemory )		10990498	0		=			
ANR	10990793	Identifier	pcs		10990498	0					
ANR	10990794	CallExpression	gs_cspace_new_DeviceRGB ( imemory )		10990498	1					
ANR	10990795	Callee	gs_cspace_new_DeviceRGB		10990498	0					
ANR	10990796	Identifier	gs_cspace_new_DeviceRGB		10990498	0					
ANR	10990797	ArgumentList	imemory		10990498	1					
ANR	10990798	Argument	imemory		10990498	0					
ANR	10990799	Identifier	imemory		10990498	0					
ANR	10990800	IfStatement	if ( pcs == NULL )		10990498	4					
ANR	10990801	Condition	pcs == NULL	1200:20:38443:38453	10990498	0	True				
ANR	10990802	EqualityExpression	pcs == NULL		10990498	0		==			
ANR	10990803	Identifier	pcs		10990498	0					
ANR	10990804	Identifier	NULL		10990498	1					
ANR	10990805	ExpressionStatement	return_error ( gs_error_VMerror )	1201:20:38476:38506	10990498	1	True				
ANR	10990806	CallExpression	return_error ( gs_error_VMerror )		10990498	0					
ANR	10990807	Callee	return_error		10990498	0					
ANR	10990808	Identifier	return_error		10990498	0					
ANR	10990809	ArgumentList	gs_error_VMerror		10990498	1					
ANR	10990810	Argument	gs_error_VMerror		10990498	0					
ANR	10990811	Identifier	gs_error_VMerror		10990498	0					
ANR	10990812	ExpressionStatement	"code = gs_setcolorspace ( igs , pcs )"	1202:16:38524:38557	10990498	5	True				
ANR	10990813	AssignmentExpression	"code = gs_setcolorspace ( igs , pcs )"		10990498	0		=			
ANR	10990814	Identifier	code		10990498	0					
ANR	10990815	CallExpression	"gs_setcolorspace ( igs , pcs )"		10990498	1					
ANR	10990816	Callee	gs_setcolorspace		10990498	0					
ANR	10990817	Identifier	gs_setcolorspace		10990498	0					
ANR	10990818	ArgumentList	igs		10990498	1					
ANR	10990819	Argument	igs		10990498	0					
ANR	10990820	Identifier	igs		10990498	0					
ANR	10990821	Argument	pcs		10990498	1					
ANR	10990822	Identifier	pcs		10990498	0					
ANR	10990823	IfStatement	if ( code >= 0 )		10990498	6					
ANR	10990824	Condition	code >= 0	1203:20:38579:38587	10990498	0	True				
ANR	10990825	RelationalExpression	code >= 0		10990498	0		>=			
ANR	10990826	Identifier	code		10990498	0					
ANR	10990827	PrimaryExpression	0		10990498	1					
ANR	10990828	CompoundStatement		52:20:2134:2184	10990498	1					
ANR	10990829	IdentifierDeclStatement	gs_client_color * pcc = gs_currentcolor_inline ( igs ) ;	1204:20:38612:38662	10990498	0	True				
ANR	10990830	IdentifierDecl	* pcc = gs_currentcolor_inline ( igs )		10990498	0					
ANR	10990831	IdentifierDeclType	gs_client_color *		10990498	0					
ANR	10990832	Identifier	pcc		10990498	1					
ANR	10990833	AssignmentExpression	* pcc = gs_currentcolor_inline ( igs )		10990498	2		=			
ANR	10990834	Identifier	pcc		10990498	0					
ANR	10990835	CallExpression	gs_currentcolor_inline ( igs )		10990498	1					
ANR	10990836	Callee	gs_currentcolor_inline		10990498	0					
ANR	10990837	Identifier	gs_currentcolor_inline		10990498	0					
ANR	10990838	ArgumentList	igs		10990498	1					
ANR	10990839	Argument	igs		10990498	0					
ANR	10990840	Identifier	igs		10990498	0					
ANR	10990841	ExpressionStatement	"cs_adjust_color_count ( igs , - 1 )"	1206:20:38685:38715	10990498	1	True				
ANR	10990842	CallExpression	"cs_adjust_color_count ( igs , - 1 )"		10990498	0					
ANR	10990843	Callee	cs_adjust_color_count		10990498	0					
ANR	10990844	Identifier	cs_adjust_color_count		10990498	0					
ANR	10990845	ArgumentList	igs		10990498	1					
ANR	10990846	Argument	igs		10990498	0					
ANR	10990847	Identifier	igs		10990498	0					
ANR	10990848	Argument	- 1		10990498	1					
ANR	10990849	UnaryOperationExpression	- 1		10990498	0					
ANR	10990850	UnaryOperator	-		10990498	0					
ANR	10990851	PrimaryExpression	1		10990498	1					
ANR	10990852	ExpressionStatement	pcc -> paint . values [ 0 ] = 0	1207:20:38766:38790	10990498	2	True				
ANR	10990853	AssignmentExpression	pcc -> paint . values [ 0 ] = 0		10990498	0		=			
ANR	10990854	ArrayIndexing	pcc -> paint . values [ 0 ]		10990498	0					
ANR	10990855	MemberAccess	pcc -> paint . values		10990498	0					
ANR	10990856	PtrMemberAccess	pcc -> paint		10990498	0					
ANR	10990857	Identifier	pcc		10990498	0					
ANR	10990858	Identifier	paint		10990498	1					
ANR	10990859	Identifier	values		10990498	1					
ANR	10990860	PrimaryExpression	0		10990498	1					
ANR	10990861	PrimaryExpression	0		10990498	1					
ANR	10990862	ExpressionStatement	pcc -> paint . values [ 1 ] = 0	1208:20:38812:38836	10990498	3	True				
ANR	10990863	AssignmentExpression	pcc -> paint . values [ 1 ] = 0		10990498	0		=			
ANR	10990864	ArrayIndexing	pcc -> paint . values [ 1 ]		10990498	0					
ANR	10990865	MemberAccess	pcc -> paint . values		10990498	0					
ANR	10990866	PtrMemberAccess	pcc -> paint		10990498	0					
ANR	10990867	Identifier	pcc		10990498	0					
ANR	10990868	Identifier	paint		10990498	1					
ANR	10990869	Identifier	values		10990498	1					
ANR	10990870	PrimaryExpression	1		10990498	1					
ANR	10990871	PrimaryExpression	0		10990498	1					
ANR	10990872	ExpressionStatement	pcc -> paint . values [ 2 ] = 0	1209:20:38858:38882	10990498	4	True				
ANR	10990873	AssignmentExpression	pcc -> paint . values [ 2 ] = 0		10990498	0		=			
ANR	10990874	ArrayIndexing	pcc -> paint . values [ 2 ]		10990498	0					
ANR	10990875	MemberAccess	pcc -> paint . values		10990498	0					
ANR	10990876	PtrMemberAccess	pcc -> paint		10990498	0					
ANR	10990877	Identifier	pcc		10990498	0					
ANR	10990878	Identifier	paint		10990498	1					
ANR	10990879	Identifier	values		10990498	1					
ANR	10990880	PrimaryExpression	2		10990498	1					
ANR	10990881	PrimaryExpression	0		10990498	1					
ANR	10990882	ExpressionStatement	pcc -> pattern = 0	1210:20:38904:38920	10990498	5	True				
ANR	10990883	AssignmentExpression	pcc -> pattern = 0		10990498	0		=			
ANR	10990884	PtrMemberAccess	pcc -> pattern		10990498	0					
ANR	10990885	Identifier	pcc		10990498	0					
ANR	10990886	Identifier	pattern		10990498	1					
ANR	10990887	PrimaryExpression	0		10990498	1					
ANR	10990888	ExpressionStatement	gx_unset_dev_color ( igs )	1211:20:38956:38979	10990498	6	True				
ANR	10990889	CallExpression	gx_unset_dev_color ( igs )		10990498	0					
ANR	10990890	Callee	gx_unset_dev_color		10990498	0					
ANR	10990891	Identifier	gx_unset_dev_color		10990498	0					
ANR	10990892	ArgumentList	igs		10990498	1					
ANR	10990893	Argument	igs		10990498	0					
ANR	10990894	Identifier	igs		10990498	0					
ANR	10990895	ExpressionStatement	"rc_decrement_only_cs ( pcs , ""zsetdevcspace"" )"	1213:16:39015:39057	10990498	7	True				
ANR	10990896	CallExpression	"rc_decrement_only_cs ( pcs , ""zsetdevcspace"" )"		10990498	0					
ANR	10990897	Callee	rc_decrement_only_cs		10990498	0					
ANR	10990898	Identifier	rc_decrement_only_cs		10990498	0					
ANR	10990899	ArgumentList	pcs		10990498	1					
ANR	10990900	Argument	pcs		10990498	0					
ANR	10990901	Identifier	pcs		10990498	0					
ANR	10990902	Argument	"""zsetdevcspace"""		10990498	1					
ANR	10990903	PrimaryExpression	"""zsetdevcspace"""		10990498	0					
ANR	10990904	ExpressionStatement	* cont = 0	1214:16:39075:39084	10990498	8	True				
ANR	10990905	AssignmentExpression	* cont = 0		10990498	0		=			
ANR	10990906	UnaryOperationExpression	* cont		10990498	0					
ANR	10990907	UnaryOperator	*		10990498	0					
ANR	10990908	Identifier	cont		10990498	1					
ANR	10990909	PrimaryExpression	0		10990498	1					
ANR	10990910	ExpressionStatement	* stage = 0	1215:16:39102:39112	10990498	9	True				
ANR	10990911	AssignmentExpression	* stage = 0		10990498	0		=			
ANR	10990912	UnaryOperationExpression	* stage		10990498	0					
ANR	10990913	UnaryOperator	*		10990498	0					
ANR	10990914	Identifier	stage		10990498	1					
ANR	10990915	PrimaryExpression	0		10990498	1					
ANR	10990916	BreakStatement	break ;	1216:16:39130:39135	10990498	10	True				
ANR	10990917	Label	case 2 :	1217:12:39149:39155	10990498	11	True				
ANR	10990918	IfStatement	"if ( ! r_has_type ( op , t_boolean ) )"		10990498	12					
ANR	10990919	Condition	"! r_has_type ( op , t_boolean )"	1218:20:39177:39202	10990498	0	True				
ANR	10990920	UnaryOperationExpression	"! r_has_type ( op , t_boolean )"		10990498	0					
ANR	10990921	UnaryOperator	!		10990498	0					
ANR	10990922	CallExpression	"r_has_type ( op , t_boolean )"		10990498	1					
ANR	10990923	Callee	r_has_type		10990498	0					
ANR	10990924	Identifier	r_has_type		10990498	0					
ANR	10990925	ArgumentList	op		10990498	1					
ANR	10990926	Argument	op		10990498	0					
ANR	10990927	Identifier	op		10990498	0					
ANR	10990928	Argument	t_boolean		10990498	1					
ANR	10990929	Identifier	t_boolean		10990498	0					
ANR	10990930	ExpressionStatement	return_error ( gs_error_typecheck )	1219:20:39225:39257	10990498	1	True				
ANR	10990931	CallExpression	return_error ( gs_error_typecheck )		10990498	0					
ANR	10990932	Callee	return_error		10990498	0					
ANR	10990933	Identifier	return_error		10990498	0					
ANR	10990934	ArgumentList	gs_error_typecheck		10990498	1					
ANR	10990935	Argument	gs_error_typecheck		10990498	0					
ANR	10990936	Identifier	gs_error_typecheck		10990498	0					
ANR	10990937	IfStatement	if ( op -> value . boolval )		10990498	13					
ANR	10990938	Condition	op -> value . boolval	1220:20:39279:39295	10990498	0	True				
ANR	10990939	MemberAccess	op -> value . boolval		10990498	0					
ANR	10990940	PtrMemberAccess	op -> value		10990498	0					
ANR	10990941	Identifier	op		10990498	0					
ANR	10990942	Identifier	value		10990498	1					
ANR	10990943	Identifier	boolval		10990498	1					
ANR	10990944	CompoundStatement		68:39:2820:2820	10990498	1					
ANR	10990945	ExpressionStatement	pop ( 1 )	1224:20:39460:39466	10990498	0	True				
ANR	10990946	CallExpression	pop ( 1 )		10990498	0					
ANR	10990947	Callee	pop		10990498	0					
ANR	10990948	Identifier	pop		10990498	0					
ANR	10990949	ArgumentList	1		10990498	1					
ANR	10990950	Argument	1		10990498	0					
ANR	10990951	PrimaryExpression	1		10990498	0					
ANR	10990952	ExpressionStatement	* stage = 1	1225:20:39488:39498	10990498	1	True				
ANR	10990953	AssignmentExpression	* stage = 1		10990498	0		=			
ANR	10990954	UnaryOperationExpression	* stage		10990498	0					
ANR	10990955	UnaryOperator	*		10990498	0					
ANR	10990956	Identifier	stage		10990498	1					
ANR	10990957	PrimaryExpression	1		10990498	1					
ANR	10990958	BreakStatement	break ;	1226:20:39520:39525	10990498	2	True				
ANR	10990959	ExpressionStatement	pop ( 1 )	1228:16:39561:39567	10990498	14	True				
ANR	10990960	CallExpression	pop ( 1 )		10990498	0					
ANR	10990961	Callee	pop		10990498	0					
ANR	10990962	Identifier	pop		10990498	0					
ANR	10990963	ArgumentList	1		10990498	1					
ANR	10990964	Argument	1		10990498	0					
ANR	10990965	PrimaryExpression	1		10990498	0					
ANR	10990966	ExpressionStatement	* stage = 3	1229:16:39585:39595	10990498	15	True				
ANR	10990967	AssignmentExpression	* stage = 3		10990498	0		=			
ANR	10990968	UnaryOperationExpression	* stage		10990498	0					
ANR	10990969	UnaryOperator	*		10990498	0					
ANR	10990970	Identifier	stage		10990498	1					
ANR	10990971	PrimaryExpression	3		10990498	1					
ANR	10990972	ExpressionStatement	code = setcolorspace_nosubst ( i_ctx_p )	1230:16:39613:39650	10990498	16	True				
ANR	10990973	AssignmentExpression	code = setcolorspace_nosubst ( i_ctx_p )		10990498	0		=			
ANR	10990974	Identifier	code		10990498	0					
ANR	10990975	CallExpression	setcolorspace_nosubst ( i_ctx_p )		10990498	1					
ANR	10990976	Callee	setcolorspace_nosubst		10990498	0					
ANR	10990977	Identifier	setcolorspace_nosubst		10990498	0					
ANR	10990978	ArgumentList	i_ctx_p		10990498	1					
ANR	10990979	Argument	i_ctx_p		10990498	0					
ANR	10990980	Identifier	i_ctx_p		10990498	0					
ANR	10990981	IfStatement	if ( code != 0 )		10990498	17					
ANR	10990982	Condition	code != 0	1231:20:39672:39680	10990498	0	True				
ANR	10990983	EqualityExpression	code != 0		10990498	0		!=			
ANR	10990984	Identifier	code		10990498	0					
ANR	10990985	PrimaryExpression	0		10990498	1					
ANR	10990986	ReturnStatement	return code ;	1232:20:39703:39714	10990498	1	True				
ANR	10990987	Identifier	code		10990498	0					
ANR	10990988	BreakStatement	break ;	1233:16:39732:39737	10990498	18	True				
ANR	10990989	Label	case 3 :	1234:12:39751:39757	10990498	19	True				
ANR	10990990	ExpressionStatement	* cont = 0	1239:16:39972:39981	10990498	20	True				
ANR	10990991	AssignmentExpression	* cont = 0		10990498	0		=			
ANR	10990992	UnaryOperationExpression	* cont		10990498	0					
ANR	10990993	UnaryOperator	*		10990498	0					
ANR	10990994	Identifier	cont		10990498	1					
ANR	10990995	PrimaryExpression	0		10990498	1					
ANR	10990996	ExpressionStatement	* stage = 0	1240:16:39999:40009	10990498	21	True				
ANR	10990997	AssignmentExpression	* stage = 0		10990498	0		=			
ANR	10990998	UnaryOperationExpression	* stage		10990498	0					
ANR	10990999	UnaryOperator	*		10990498	0					
ANR	10991000	Identifier	stage		10990498	1					
ANR	10991001	PrimaryExpression	0		10990498	1					
ANR	10991002	BreakStatement	break ;	1241:16:40027:40032	10990498	22	True				
ANR	10991003	Label	case 4 :	1242:12:40046:40052	10990498	23	True				
ANR	10991004	IfStatement	"if ( ! r_has_type ( op , t_boolean ) )"		10990498	24					
ANR	10991005	Condition	"! r_has_type ( op , t_boolean )"	1249:20:40473:40498	10990498	0	True				
ANR	10991006	UnaryOperationExpression	"! r_has_type ( op , t_boolean )"		10990498	0					
ANR	10991007	UnaryOperator	!		10990498	0					
ANR	10991008	CallExpression	"r_has_type ( op , t_boolean )"		10990498	1					
ANR	10991009	Callee	r_has_type		10990498	0					
ANR	10991010	Identifier	r_has_type		10990498	0					
ANR	10991011	ArgumentList	op		10990498	1					
ANR	10991012	Argument	op		10990498	0					
ANR	10991013	Identifier	op		10990498	0					
ANR	10991014	Argument	t_boolean		10990498	1					
ANR	10991015	Identifier	t_boolean		10990498	0					
ANR	10991016	ExpressionStatement	return_error ( gs_error_typecheck )	1250:20:40521:40553	10990498	1	True				
ANR	10991017	CallExpression	return_error ( gs_error_typecheck )		10990498	0					
ANR	10991018	Callee	return_error		10990498	0					
ANR	10991019	Identifier	return_error		10990498	0					
ANR	10991020	ArgumentList	gs_error_typecheck		10990498	1					
ANR	10991021	Argument	gs_error_typecheck		10990498	0					
ANR	10991022	Identifier	gs_error_typecheck		10990498	0					
ANR	10991023	ExpressionStatement	pop ( 1 )	1251:16:40571:40577	10990498	25	True				
ANR	10991024	CallExpression	pop ( 1 )		10990498	0					
ANR	10991025	Callee	pop		10990498	0					
ANR	10991026	Identifier	pop		10990498	0					
ANR	10991027	ArgumentList	1		10990498	1					
ANR	10991028	Argument	1		10990498	0					
ANR	10991029	PrimaryExpression	1		10990498	0					
ANR	10991030	ExpressionStatement	* stage = 1	1252:16:40595:40605	10990498	26	True				
ANR	10991031	AssignmentExpression	* stage = 1		10990498	0		=			
ANR	10991032	UnaryOperationExpression	* stage		10990498	0					
ANR	10991033	UnaryOperator	*		10990498	0					
ANR	10991034	Identifier	stage		10990498	1					
ANR	10991035	PrimaryExpression	1		10990498	1					
ANR	10991036	ExpressionStatement	* cont = 1	1253:16:40623:40632	10990498	27	True				
ANR	10991037	AssignmentExpression	* cont = 1		10990498	0		=			
ANR	10991038	UnaryOperationExpression	* cont		10990498	0					
ANR	10991039	UnaryOperator	*		10990498	0					
ANR	10991040	Identifier	cont		10990498	1					
ANR	10991041	PrimaryExpression	1		10990498	1					
ANR	10991042	IfStatement	if ( op -> value . boolval )		10990498	28					
ANR	10991043	Condition	op -> value . boolval	1254:20:40654:40670	10990498	0	True				
ANR	10991044	MemberAccess	op -> value . boolval		10990498	0					
ANR	10991045	PtrMemberAccess	op -> value		10990498	0					
ANR	10991046	Identifier	op		10990498	0					
ANR	10991047	Identifier	value		10990498	1					
ANR	10991048	Identifier	boolval		10990498	1					
ANR	10991049	CompoundStatement		102:39:4195:4195	10990498	1					
ANR	10991050	ExpressionStatement	* stage = 5	1255:20:40695:40705	10990498	0	True				
ANR	10991051	AssignmentExpression	* stage = 5		10990498	0		=			
ANR	10991052	UnaryOperationExpression	* stage		10990498	0					
ANR	10991053	UnaryOperator	*		10990498	0					
ANR	10991054	Identifier	stage		10990498	1					
ANR	10991055	PrimaryExpression	5		10990498	1					
ANR	10991056	ExpressionStatement	code = setcolorspace_nosubst ( i_ctx_p )	1256:20:40727:40764	10990498	1	True				
ANR	10991057	AssignmentExpression	code = setcolorspace_nosubst ( i_ctx_p )		10990498	0		=			
ANR	10991058	Identifier	code		10990498	0					
ANR	10991059	CallExpression	setcolorspace_nosubst ( i_ctx_p )		10990498	1					
ANR	10991060	Callee	setcolorspace_nosubst		10990498	0					
ANR	10991061	Identifier	setcolorspace_nosubst		10990498	0					
ANR	10991062	ArgumentList	i_ctx_p		10990498	1					
ANR	10991063	Argument	i_ctx_p		10990498	0					
ANR	10991064	Identifier	i_ctx_p		10990498	0					
ANR	10991065	IfStatement	if ( code != 0 )		10990498	2					
ANR	10991066	Condition	code != 0	1257:24:40790:40798	10990498	0	True				
ANR	10991067	EqualityExpression	code != 0		10990498	0		!=			
ANR	10991068	Identifier	code		10990498	0					
ANR	10991069	PrimaryExpression	0		10990498	1					
ANR	10991070	ReturnStatement	return code ;	1258:24:40825:40836	10990498	1	True				
ANR	10991071	Identifier	code		10990498	0					
ANR	10991072	BreakStatement	break ;	1260:16:40872:40877	10990498	29	True				
ANR	10991073	Label	case 5 :	1261:12:40891:40897	10990498	30	True				
ANR	10991074	ExpressionStatement	* stage = 1	1266:16:41162:41172	10990498	31	True				
ANR	10991075	AssignmentExpression	* stage = 1		10990498	0		=			
ANR	10991076	UnaryOperationExpression	* stage		10990498	0					
ANR	10991077	UnaryOperator	*		10990498	0					
ANR	10991078	Identifier	stage		10990498	1					
ANR	10991079	PrimaryExpression	1		10990498	1					
ANR	10991080	ExpressionStatement	* cont = 1	1267:16:41190:41199	10990498	32	True				
ANR	10991081	AssignmentExpression	* cont = 1		10990498	0		=			
ANR	10991082	UnaryOperationExpression	* cont		10990498	0					
ANR	10991083	UnaryOperator	*		10990498	0					
ANR	10991084	Identifier	cont		10990498	1					
ANR	10991085	PrimaryExpression	1		10990498	1					
ANR	10991086	ExpressionStatement	code = zincludecolorspace ( i_ctx_p )	1268:16:41217:41251	10990498	33	True				
ANR	10991087	AssignmentExpression	code = zincludecolorspace ( i_ctx_p )		10990498	0		=			
ANR	10991088	Identifier	code		10990498	0					
ANR	10991089	CallExpression	zincludecolorspace ( i_ctx_p )		10990498	1					
ANR	10991090	Callee	zincludecolorspace		10990498	0					
ANR	10991091	Identifier	zincludecolorspace		10990498	0					
ANR	10991092	ArgumentList	i_ctx_p		10990498	1					
ANR	10991093	Argument	i_ctx_p		10990498	0					
ANR	10991094	Identifier	i_ctx_p		10990498	0					
ANR	10991095	IfStatement	if ( code != 0 )		10990498	34					
ANR	10991096	Condition	code != 0	1269:20:41273:41281	10990498	0	True				
ANR	10991097	EqualityExpression	code != 0		10990498	0		!=			
ANR	10991098	Identifier	code		10990498	0					
ANR	10991099	PrimaryExpression	0		10990498	1					
ANR	10991100	ReturnStatement	return code ;	1270:20:41304:41315	10990498	1	True				
ANR	10991101	Identifier	code		10990498	0					
ANR	10991102	BreakStatement	break ;	1271:16:41333:41338	10990498	35	True				
ANR	10991103	Condition	* stage	1273:13:41363:41368	10990498	1	True				
ANR	10991104	UnaryOperationExpression	* stage		10990498	0					
ANR	10991105	UnaryOperator	*		10990498	0					
ANR	10991106	Identifier	stage		10990498	1					
ANR	10991107	ReturnStatement	return code ;	1274:4:41376:41387	10990498	5	True				
ANR	10991108	Identifier	code		10990498	0					
ANR	10991109	ReturnType	static int		10990498	1					
ANR	10991110	Identifier	setrgbspace		10990498	2					
ANR	10991111	ParameterList	"i_ctx_t * i_ctx_p , ref * r , int * stage , int * cont , int CIESubst"		10990498	3					
ANR	10991112	Parameter	i_ctx_t * i_ctx_p	1152:23:36413:36429	10990498	0	True				
ANR	10991113	ParameterType	i_ctx_t *		10990498	0					
ANR	10991114	Identifier	i_ctx_p		10990498	1					
ANR	10991115	Parameter	ref * r	1152:42:36432:36437	10990498	1	True				
ANR	10991116	ParameterType	ref *		10990498	0					
ANR	10991117	Identifier	r		10990498	1					
ANR	10991118	Parameter	int * stage	1152:50:36440:36449	10990498	2	True				
ANR	10991119	ParameterType	int *		10990498	0					
ANR	10991120	Identifier	stage		10990498	1					
ANR	10991121	Parameter	int * cont	1152:62:36452:36460	10990498	3	True				
ANR	10991122	ParameterType	int *		10990498	0					
ANR	10991123	Identifier	cont		10990498	1					
ANR	10991124	Parameter	int CIESubst	1152:73:36463:36474	10990498	4	True				
ANR	10991125	ParameterType	int		10990498	0					
ANR	10991126	Identifier	CIESubst		10990498	1					
ANR	10991127	CFGEntryNode	ENTRY		10990498		True				
ANR	10991128	CFGExitNode	EXIT		10990498		True				
ANR	10991129	Symbol	esp		10990498						
ANR	10991130	Symbol	* op		10990498						
ANR	10991131	Symbol	pcc -> pattern		10990498						
ANR	10991132	Symbol	gs_cspace_new_DeviceRGB		10990498						
ANR	10991133	Symbol	body		10990498						
ANR	10991134	Symbol	op -> value . boolval		10990498						
ANR	10991135	Symbol	osp		10990498						
ANR	10991136	Symbol	* istate		10990498						
ANR	10991137	Symbol	r_has_type		10990498						
ANR	10991138	Symbol	igs		10990498						
ANR	10991139	Symbol	pcc -> paint		10990498						
ANR	10991140	Symbol	stref		10990498						
ANR	10991141	Symbol	* pcc -> paint		10990498						
ANR	10991142	Symbol	imemory		10990498						
ANR	10991143	Symbol	cont		10990498						
ANR	10991144	Symbol	NULL		10990498						
ANR	10991145	Symbol	dict_find_string		10990498						
ANR	10991146	Symbol	* * pcc		10990498						
ANR	10991147	Symbol	istate -> use_cie_color . value		10990498						
ANR	10991148	Symbol	t_boolean		10990498						
ANR	10991149	Symbol	zincludecolorspace		10990498						
ANR	10991150	Symbol	i_ctx_p		10990498						
ANR	10991151	Symbol	& nosubst		10990498						
ANR	10991152	Symbol	a_executable		10990498						
ANR	10991153	Symbol	gs_currentcolor_inline		10990498						
ANR	10991154	Symbol	* pcc		10990498						
ANR	10991155	Symbol	systemdict		10990498						
ANR	10991156	Symbol	* pcc -> paint . values		10990498						
ANR	10991157	Symbol	a_all		10990498						
ANR	10991158	Symbol	code		10990498						
ANR	10991159	Symbol	* nosubst		10990498						
ANR	10991160	Symbol	& stref		10990498						
ANR	10991161	Symbol	gs_setcolorspace		10990498						
ANR	10991162	Symbol	istate -> use_cie_color . value . boolval		10990498						
ANR	10991163	Symbol	ialloc_string		10990498						
ANR	10991164	Symbol	pcc -> paint . values		10990498						
ANR	10991165	Symbol	pcc		10990498						
ANR	10991166	Symbol	gs_error_typecheck		10990498						
ANR	10991167	Symbol	op -> value		10990498						
ANR	10991168	Symbol	CIESubst		10990498						
ANR	10991169	Symbol	nosubst -> value . boolval		10990498						
ANR	10991170	Symbol	o_push_estack		10990498						
ANR	10991171	Symbol	op		10990498						
ANR	10991172	Symbol	pcs		10990498						
ANR	10991173	Symbol	nosubst		10990498						
ANR	10991174	Symbol	* stage		10990498						
ANR	10991175	Symbol	nosubst -> value		10990498						
ANR	10991176	Symbol	icurrent_space		10990498						
ANR	10991177	Symbol	gs_error_VMerror		10990498						
ANR	10991178	Symbol	r		10990498						
ANR	10991179	Symbol	stage		10990498						
ANR	10991180	Symbol	istate -> use_cie_color		10990498						
ANR	10991181	Symbol	* cont		10990498						
ANR	10991182	Symbol	setcolorspace_nosubst		10990498						
ANR	10991183	Symbol	istate		10990498						
ANR	10991184	Function	rgbdomain	1276:0:41391:41560							
ANR	10991185	FunctionDef	"rgbdomain (i_ctx_t * i_ctx_p , ref * space , float * ptr)"		10991184	0					
ANR	10991186	CompoundStatement		1277:0:41455:41560	10991184	0					
ANR	10991187	IdentifierDeclStatement	int i ;	1278:4:41461:41466	10991184	0	True				
ANR	10991188	IdentifierDecl	i		10991184	0					
ANR	10991189	IdentifierDeclType	int		10991184	0					
ANR	10991190	Identifier	i		10991184	1					
ANR	10991191	ForStatement	for ( i = 0 ; i < 6 ; i += 2 )		10991184	1					
ANR	10991192	ForInit	i = 0 ;	1280:9:41478:41483	10991184	0	True				
ANR	10991193	AssignmentExpression	i = 0		10991184	0		=			
ANR	10991194	Identifier	i		10991184	0					
ANR	10991195	PrimaryExpression	0		10991184	1					
ANR	10991196	Condition	i < 6	1280:15:41484:41488	10991184	1	True				
ANR	10991197	RelationalExpression	i < 6		10991184	0		<			
ANR	10991198	Identifier	i		10991184	0					
ANR	10991199	PrimaryExpression	6		10991184	1					
ANR	10991200	AssignmentExpression	i += 2	1280:21:41490:41493	10991184	2	True	+=			
ANR	10991201	Identifier	i		10991184	0					
ANR	10991202	PrimaryExpression	2		10991184	1					
ANR	10991203	CompoundStatement		4:27:40:40	10991184	3					
ANR	10991204	ExpressionStatement	ptr [ i ] = 0	1281:8:41506:41516	10991184	0	True				
ANR	10991205	AssignmentExpression	ptr [ i ] = 0		10991184	0		=			
ANR	10991206	ArrayIndexing	ptr [ i ]		10991184	0					
ANR	10991207	Identifier	ptr		10991184	0					
ANR	10991208	Identifier	i		10991184	1					
ANR	10991209	PrimaryExpression	0		10991184	1					
ANR	10991210	ExpressionStatement	ptr [ i + 1 ] = 1	1282:8:41526:41538	10991184	1	True				
ANR	10991211	AssignmentExpression	ptr [ i + 1 ] = 1		10991184	0		=			
ANR	10991212	ArrayIndexing	ptr [ i + 1 ]		10991184	0					
ANR	10991213	Identifier	ptr		10991184	0					
ANR	10991214	AdditiveExpression	i + 1		10991184	1		+			
ANR	10991215	Identifier	i		10991184	0					
ANR	10991216	PrimaryExpression	1		10991184	1					
ANR	10991217	PrimaryExpression	1		10991184	1					
ANR	10991218	ReturnStatement	return 0 ;	1284:4:41550:41558	10991184	2	True				
ANR	10991219	PrimaryExpression	0		10991184	0					
ANR	10991220	ReturnType	static int		10991184	1					
ANR	10991221	Identifier	rgbdomain		10991184	2					
ANR	10991222	ParameterList	"i_ctx_t * i_ctx_p , ref * space , float * ptr"		10991184	3					
ANR	10991223	Parameter	i_ctx_t * i_ctx_p	1276:21:41412:41428	10991184	0	True				
ANR	10991224	ParameterType	i_ctx_t *		10991184	0					
ANR	10991225	Identifier	i_ctx_p		10991184	1					
ANR	10991226	Parameter	ref * space	1276:40:41431:41440	10991184	1	True				
ANR	10991227	ParameterType	ref *		10991184	0					
ANR	10991228	Identifier	space		10991184	1					
ANR	10991229	Parameter	float * ptr	1276:52:41443:41452	10991184	2	True				
ANR	10991230	ParameterType	float *		10991184	0					
ANR	10991231	Identifier	ptr		10991184	1					
ANR	10991232	CFGEntryNode	ENTRY		10991184		True				
ANR	10991233	CFGExitNode	EXIT		10991184		True				
ANR	10991234	Symbol	* i		10991184						
ANR	10991235	Symbol	i_ctx_p		10991184						
ANR	10991236	Symbol	* ptr		10991184						
ANR	10991237	Symbol	i		10991184						
ANR	10991238	Symbol	space		10991184						
ANR	10991239	Symbol	ptr		10991184						
ANR	10991240	Function	rgbrange	1286:0:41562:41730							
ANR	10991241	FunctionDef	"rgbrange (i_ctx_t * i_ctx_p , ref * space , float * ptr)"		10991240	0					
ANR	10991242	CompoundStatement		1287:0:41625:41730	10991240	0					
ANR	10991243	IdentifierDeclStatement	int i ;	1288:4:41631:41636	10991240	0	True				
ANR	10991244	IdentifierDecl	i		10991240	0					
ANR	10991245	IdentifierDeclType	int		10991240	0					
ANR	10991246	Identifier	i		10991240	1					
ANR	10991247	ForStatement	for ( i = 0 ; i < 6 ; i += 2 )		10991240	1					
ANR	10991248	ForInit	i = 0 ;	1290:9:41648:41653	10991240	0	True				
ANR	10991249	AssignmentExpression	i = 0		10991240	0		=			
ANR	10991250	Identifier	i		10991240	0					
ANR	10991251	PrimaryExpression	0		10991240	1					
ANR	10991252	Condition	i < 6	1290:15:41654:41658	10991240	1	True				
ANR	10991253	RelationalExpression	i < 6		10991240	0		<			
ANR	10991254	Identifier	i		10991240	0					
ANR	10991255	PrimaryExpression	6		10991240	1					
ANR	10991256	AssignmentExpression	i += 2	1290:21:41660:41663	10991240	2	True	+=			
ANR	10991257	Identifier	i		10991240	0					
ANR	10991258	PrimaryExpression	2		10991240	1					
ANR	10991259	CompoundStatement		4:27:40:40	10991240	3					
ANR	10991260	ExpressionStatement	ptr [ i ] = 0	1291:8:41676:41686	10991240	0	True				
ANR	10991261	AssignmentExpression	ptr [ i ] = 0		10991240	0		=			
ANR	10991262	ArrayIndexing	ptr [ i ]		10991240	0					
ANR	10991263	Identifier	ptr		10991240	0					
ANR	10991264	Identifier	i		10991240	1					
ANR	10991265	PrimaryExpression	0		10991240	1					
ANR	10991266	ExpressionStatement	ptr [ i + 1 ] = 1	1292:8:41696:41708	10991240	1	True				
ANR	10991267	AssignmentExpression	ptr [ i + 1 ] = 1		10991240	0		=			
ANR	10991268	ArrayIndexing	ptr [ i + 1 ]		10991240	0					
ANR	10991269	Identifier	ptr		10991240	0					
ANR	10991270	AdditiveExpression	i + 1		10991240	1		+			
ANR	10991271	Identifier	i		10991240	0					
ANR	10991272	PrimaryExpression	1		10991240	1					
ANR	10991273	PrimaryExpression	1		10991240	1					
ANR	10991274	ReturnStatement	return 0 ;	1294:4:41720:41728	10991240	2	True				
ANR	10991275	PrimaryExpression	0		10991240	0					
ANR	10991276	ReturnType	static int		10991240	1					
ANR	10991277	Identifier	rgbrange		10991240	2					
ANR	10991278	ParameterList	"i_ctx_t * i_ctx_p , ref * space , float * ptr"		10991240	3					
ANR	10991279	Parameter	i_ctx_t * i_ctx_p	1286:20:41582:41598	10991240	0	True				
ANR	10991280	ParameterType	i_ctx_t *		10991240	0					
ANR	10991281	Identifier	i_ctx_p		10991240	1					
ANR	10991282	Parameter	ref * space	1286:39:41601:41610	10991240	1	True				
ANR	10991283	ParameterType	ref *		10991240	0					
ANR	10991284	Identifier	space		10991240	1					
ANR	10991285	Parameter	float * ptr	1286:51:41613:41622	10991240	2	True				
ANR	10991286	ParameterType	float *		10991240	0					
ANR	10991287	Identifier	ptr		10991240	1					
ANR	10991288	CFGEntryNode	ENTRY		10991240		True				
ANR	10991289	CFGExitNode	EXIT		10991240		True				
ANR	10991290	Symbol	* i		10991240						
ANR	10991291	Symbol	i_ctx_p		10991240						
ANR	10991292	Symbol	* ptr		10991240						
ANR	10991293	Symbol	i		10991240						
ANR	10991294	Symbol	space		10991240						
ANR	10991295	Symbol	ptr		10991240						
ANR	10991296	Function	rgbbasecolor	1302:0:42091:47744							
ANR	10991297	FunctionDef	"rgbbasecolor (i_ctx_t * i_ctx_p , ref * space , int base , int * stage , int * cont , int * stack_depth)"		10991296	0					
ANR	10991298	CompoundStatement		1303:0:42197:47744	10991296	0					
ANR	10991299	IdentifierDeclStatement	os_ptr op = osp ;	1304:4:42203:42218	10991296	0	True				
ANR	10991300	IdentifierDecl	op = osp		10991296	0					
ANR	10991301	IdentifierDeclType	os_ptr		10991296	0					
ANR	10991302	Identifier	op		10991296	1					
ANR	10991303	AssignmentExpression	op = osp		10991296	2		=			
ANR	10991304	Identifier	osp		10991296	0					
ANR	10991305	Identifier	osp		10991296	1					
ANR	10991306	IdentifierDeclStatement	"float RGB [ 3 ] , CMYK [ 4 ] , Gray , UCR , BG ;"	1305:4:42224:42260	10991296	1	True				
ANR	10991307	IdentifierDecl	RGB [ 3 ]		10991296	0					
ANR	10991308	IdentifierDeclType	float [ 3 ]		10991296	0					
ANR	10991309	Identifier	RGB		10991296	1					
ANR	10991310	PrimaryExpression	3		10991296	2					
ANR	10991311	IdentifierDecl	CMYK [ 4 ]		10991296	1					
ANR	10991312	IdentifierDeclType	float [ 4 ]		10991296	0					
ANR	10991313	Identifier	CMYK		10991296	1					
ANR	10991314	PrimaryExpression	4		10991296	2					
ANR	10991315	IdentifierDecl	Gray		10991296	2					
ANR	10991316	IdentifierDeclType	float		10991296	0					
ANR	10991317	Identifier	Gray		10991296	1					
ANR	10991318	IdentifierDecl	UCR		10991296	3					
ANR	10991319	IdentifierDeclType	float		10991296	0					
ANR	10991320	Identifier	UCR		10991296	1					
ANR	10991321	IdentifierDecl	BG		10991296	4					
ANR	10991322	IdentifierDeclType	float		10991296	0					
ANR	10991323	Identifier	BG		10991296	1					
ANR	10991324	IdentifierDeclStatement	int i ;	1306:4:42266:42271	10991296	2	True				
ANR	10991325	IdentifierDecl	i		10991296	0					
ANR	10991326	IdentifierDeclType	int		10991296	0					
ANR	10991327	Identifier	i		10991296	1					
ANR	10991328	IdentifierDeclStatement	const gs_color_space * pcs = gs_currentcolorspace ( igs ) ;	1307:4:42277:42332	10991296	3	True				
ANR	10991329	IdentifierDecl	* pcs = gs_currentcolorspace ( igs )		10991296	0					
ANR	10991330	IdentifierDeclType	const gs_color_space *		10991296	0					
ANR	10991331	Identifier	pcs		10991296	1					
ANR	10991332	AssignmentExpression	* pcs = gs_currentcolorspace ( igs )		10991296	2		=			
ANR	10991333	Identifier	pcs		10991296	0					
ANR	10991334	CallExpression	gs_currentcolorspace ( igs )		10991296	1					
ANR	10991335	Callee	gs_currentcolorspace		10991296	0					
ANR	10991336	Identifier	gs_currentcolorspace		10991296	0					
ANR	10991337	ArgumentList	igs		10991296	1					
ANR	10991338	Argument	igs		10991296	0					
ANR	10991339	Identifier	igs		10991296	0					
ANR	10991340	IfStatement	if ( pcs -> id == cs_DeviceGray_id )		10991296	4					
ANR	10991341	Condition	pcs -> id == cs_DeviceGray_id	1309:8:42343:42369	10991296	0	True				
ANR	10991342	EqualityExpression	pcs -> id == cs_DeviceGray_id		10991296	0		==			
ANR	10991343	PtrMemberAccess	pcs -> id		10991296	0					
ANR	10991344	Identifier	pcs		10991296	0					
ANR	10991345	Identifier	id		10991296	1					
ANR	10991346	Identifier	cs_DeviceGray_id		10991296	1					
ANR	10991347	CompoundStatement		7:37:174:174	10991296	1					
ANR	10991348	ReturnStatement	"return ( graybasecolor ( i_ctx_p , space , base , stage , cont , stack_depth ) ) ;"	1319:8:42947:43016	10991296	0	True				
ANR	10991349	CallExpression	"graybasecolor ( i_ctx_p , space , base , stage , cont , stack_depth )"		10991296	0					
ANR	10991350	Callee	graybasecolor		10991296	0					
ANR	10991351	Identifier	graybasecolor		10991296	0					
ANR	10991352	ArgumentList	i_ctx_p		10991296	1					
ANR	10991353	Argument	i_ctx_p		10991296	0					
ANR	10991354	Identifier	i_ctx_p		10991296	0					
ANR	10991355	Argument	space		10991296	1					
ANR	10991356	Identifier	space		10991296	0					
ANR	10991357	Argument	base		10991296	2					
ANR	10991358	Identifier	base		10991296	0					
ANR	10991359	Argument	stage		10991296	3					
ANR	10991360	Identifier	stage		10991296	0					
ANR	10991361	Argument	cont		10991296	4					
ANR	10991362	Identifier	cont		10991296	0					
ANR	10991363	Argument	stack_depth		10991296	5					
ANR	10991364	Identifier	stack_depth		10991296	0					
ANR	10991365	SwitchStatement	switch ( * stage )		10991296	5					
ANR	10991366	Condition	* stage	1322:12:43037:43042	10991296	0	True				
ANR	10991367	UnaryOperationExpression	* stage		10991296	0					
ANR	10991368	UnaryOperator	*		10991296	0					
ANR	10991369	Identifier	stage		10991296	1					
ANR	10991370	CompoundStatement		20:20:847:847	10991296	1					
ANR	10991371	Label	case 0 :	1323:8:43055:43061	10991296	0	True				
ANR	10991372	ExpressionStatement	* cont = 0	1324:12:43075:43084	10991296	1	True				
ANR	10991373	AssignmentExpression	* cont = 0		10991296	0		=			
ANR	10991374	UnaryOperationExpression	* cont		10991296	0					
ANR	10991375	UnaryOperator	*		10991296	0					
ANR	10991376	Identifier	cont		10991296	1					
ANR	10991377	PrimaryExpression	0		10991296	1					
ANR	10991378	ExpressionStatement	check_op ( 3 )	1325:12:43098:43109	10991296	2	True				
ANR	10991379	CallExpression	check_op ( 3 )		10991296	0					
ANR	10991380	Callee	check_op		10991296	0					
ANR	10991381	Identifier	check_op		10991296	0					
ANR	10991382	ArgumentList	3		10991296	1					
ANR	10991383	Argument	3		10991296	0					
ANR	10991384	PrimaryExpression	3		10991296	0					
ANR	10991385	ExpressionStatement	op -= 2	1326:12:43123:43130	10991296	3	True				
ANR	10991386	AssignmentExpression	op -= 2		10991296	0		-=			
ANR	10991387	Identifier	op		10991296	0					
ANR	10991388	PrimaryExpression	2		10991296	1					
ANR	10991389	ForStatement	for ( i = 0 ; i < 3 ; i ++ )		10991296	4					
ANR	10991390	ForInit	i = 0 ;	1327:17:43149:43152	10991296	0	True				
ANR	10991391	AssignmentExpression	i = 0		10991296	0		=			
ANR	10991392	Identifier	i		10991296	0					
ANR	10991393	PrimaryExpression	0		10991296	1					
ANR	10991394	Condition	i < 3	1327:21:43153:43155	10991296	1	True				
ANR	10991395	RelationalExpression	i < 3		10991296	0		<			
ANR	10991396	Identifier	i		10991296	0					
ANR	10991397	PrimaryExpression	3		10991296	1					
ANR	10991398	PostIncDecOperationExpression	i ++	1327:25:43157:43159	10991296	2	True				
ANR	10991399	Identifier	i		10991296	0					
ANR	10991400	IncDec	++		10991296	1					
ANR	10991401	CompoundStatement		25:30:964:964	10991296	3					
ANR	10991402	IfStatement	"if ( ! r_has_type ( op , t_integer ) )"		10991296	0					
ANR	10991403	Condition	"! r_has_type ( op , t_integer )"	1328:20:43184:43209	10991296	0	True				
ANR	10991404	UnaryOperationExpression	"! r_has_type ( op , t_integer )"		10991296	0					
ANR	10991405	UnaryOperator	!		10991296	0					
ANR	10991406	CallExpression	"r_has_type ( op , t_integer )"		10991296	1					
ANR	10991407	Callee	r_has_type		10991296	0					
ANR	10991408	Identifier	r_has_type		10991296	0					
ANR	10991409	ArgumentList	op		10991296	1					
ANR	10991410	Argument	op		10991296	0					
ANR	10991411	Identifier	op		10991296	0					
ANR	10991412	Argument	t_integer		10991296	1					
ANR	10991413	Identifier	t_integer		10991296	0					
ANR	10991414	CompoundStatement		26:48:1014:1014	10991296	1					
ANR	10991415	IfStatement	"if ( r_has_type ( op , t_real ) )"		10991296	0					
ANR	10991416	Condition	"r_has_type ( op , t_real )"	1329:24:43238:43259	10991296	0	True				
ANR	10991417	CallExpression	"r_has_type ( op , t_real )"		10991296	0					
ANR	10991418	Callee	r_has_type		10991296	0					
ANR	10991419	Identifier	r_has_type		10991296	0					
ANR	10991420	ArgumentList	op		10991296	1					
ANR	10991421	Argument	op		10991296	0					
ANR	10991422	Identifier	op		10991296	0					
ANR	10991423	Argument	t_real		10991296	1					
ANR	10991424	Identifier	t_real		10991296	0					
ANR	10991425	CompoundStatement		27:48:1064:1064	10991296	1					
ANR	10991426	ExpressionStatement	RGB [ i ] = op -> value . realval	1330:24:43288:43314	10991296	0	True				
ANR	10991427	AssignmentExpression	RGB [ i ] = op -> value . realval		10991296	0		=			
ANR	10991428	ArrayIndexing	RGB [ i ]		10991296	0					
ANR	10991429	Identifier	RGB		10991296	0					
ANR	10991430	Identifier	i		10991296	1					
ANR	10991431	MemberAccess	op -> value . realval		10991296	1					
ANR	10991432	PtrMemberAccess	op -> value		10991296	0					
ANR	10991433	Identifier	op		10991296	0					
ANR	10991434	Identifier	value		10991296	1					
ANR	10991435	Identifier	realval		10991296	1					
ANR	10991436	ElseStatement	else		10991296	0					
ANR	10991437	ExpressionStatement	return_error ( gs_error_typecheck )	1332:24:43367:43399	10991296	0	True				
ANR	10991438	CallExpression	return_error ( gs_error_typecheck )		10991296	0					
ANR	10991439	Callee	return_error		10991296	0					
ANR	10991440	Identifier	return_error		10991296	0					
ANR	10991441	ArgumentList	gs_error_typecheck		10991296	1					
ANR	10991442	Argument	gs_error_typecheck		10991296	0					
ANR	10991443	Identifier	gs_error_typecheck		10991296	0					
ANR	10991444	ElseStatement	else		10991296	0					
ANR	10991445	ExpressionStatement	RGB [ i ] = ( float ) op -> value . intval	1334:20:43444:43476	10991296	0	True				
ANR	10991446	AssignmentExpression	RGB [ i ] = ( float ) op -> value . intval		10991296	0		=			
ANR	10991447	ArrayIndexing	RGB [ i ]		10991296	0					
ANR	10991448	Identifier	RGB		10991296	0					
ANR	10991449	Identifier	i		10991296	1					
ANR	10991450	CastExpression	( float ) op -> value . intval		10991296	1					
ANR	10991451	CastTarget	float		10991296	0					
ANR	10991452	MemberAccess	op -> value . intval		10991296	1					
ANR	10991453	PtrMemberAccess	op -> value		10991296	0					
ANR	10991454	Identifier	op		10991296	0					
ANR	10991455	Identifier	value		10991296	1					
ANR	10991456	Identifier	intval		10991296	1					
ANR	10991457	IfStatement	if ( RGB [ i ] < 0 || RGB [ i ] > 1 )		10991296	1					
ANR	10991458	Condition	RGB [ i ] < 0 || RGB [ i ] > 1	1335:20:43498:43521	10991296	0	True				
ANR	10991459	OrExpression	RGB [ i ] < 0 || RGB [ i ] > 1		10991296	0		||			
ANR	10991460	RelationalExpression	RGB [ i ] < 0		10991296	0		<			
ANR	10991461	ArrayIndexing	RGB [ i ]		10991296	0					
ANR	10991462	Identifier	RGB		10991296	0					
ANR	10991463	Identifier	i		10991296	1					
ANR	10991464	PrimaryExpression	0		10991296	1					
ANR	10991465	RelationalExpression	RGB [ i ] > 1		10991296	1		>			
ANR	10991466	ArrayIndexing	RGB [ i ]		10991296	0					
ANR	10991467	Identifier	RGB		10991296	0					
ANR	10991468	Identifier	i		10991296	1					
ANR	10991469	PrimaryExpression	1		10991296	1					
ANR	10991470	ExpressionStatement	return_error ( gs_error_rangecheck )	1336:20:43544:43577	10991296	1	True				
ANR	10991471	CallExpression	return_error ( gs_error_rangecheck )		10991296	0					
ANR	10991472	Callee	return_error		10991296	0					
ANR	10991473	Identifier	return_error		10991296	0					
ANR	10991474	ArgumentList	gs_error_rangecheck		10991296	1					
ANR	10991475	Argument	gs_error_rangecheck		10991296	0					
ANR	10991476	Identifier	gs_error_rangecheck		10991296	0					
ANR	10991477	ExpressionStatement	op ++	1337:16:43595:43599	10991296	2	True				
ANR	10991478	PostIncDecOperationExpression	op ++		10991296	0					
ANR	10991479	Identifier	op		10991296	0					
ANR	10991480	IncDec	++		10991296	1					
ANR	10991481	ExpressionStatement	op = osp	1339:12:43627:43635	10991296	5	True				
ANR	10991482	AssignmentExpression	op = osp		10991296	0		=			
ANR	10991483	Identifier	op		10991296	0					
ANR	10991484	Identifier	osp		10991296	1					
ANR	10991485	SwitchStatement	switch ( base )		10991296	6					
ANR	10991486	Condition	base	1341:20:43658:43661	10991296	0	True				
ANR	10991487	Identifier	base		10991296	0					
ANR	10991488	CompoundStatement		39:26:1466:1466	10991296	1					
ANR	10991489	Label	case 0 :	1342:16:43682:43688	10991296	0	True				
ANR	10991490	ExpressionStatement	pop ( 2 )	1343:20:43710:43716	10991296	1	True				
ANR	10991491	CallExpression	pop ( 2 )		10991296	0					
ANR	10991492	Callee	pop		10991296	0					
ANR	10991493	Identifier	pop		10991296	0					
ANR	10991494	ArgumentList	2		10991296	1					
ANR	10991495	Argument	2		10991296	0					
ANR	10991496	PrimaryExpression	2		10991296	0					
ANR	10991497	ExpressionStatement	op = osp	1344:20:43738:43746	10991296	2	True				
ANR	10991498	AssignmentExpression	op = osp		10991296	0		=			
ANR	10991499	Identifier	op		10991296	0					
ANR	10991500	Identifier	osp		10991296	1					
ANR	10991501	IfStatement	if ( RGB [ 0 ] == RGB [ 1 ] && RGB [ 1 ] == RGB [ 2 ] )		10991296	3					
ANR	10991502	Condition	RGB [ 0 ] == RGB [ 1 ] && RGB [ 1 ] == RGB [ 2 ]	1348:24:43917:43952	10991296	0	True				
ANR	10991503	AndExpression	RGB [ 0 ] == RGB [ 1 ] && RGB [ 1 ] == RGB [ 2 ]		10991296	0		&&			
ANR	10991504	EqualityExpression	RGB [ 0 ] == RGB [ 1 ]		10991296	0		==			
ANR	10991505	ArrayIndexing	RGB [ 0 ]		10991296	0					
ANR	10991506	Identifier	RGB		10991296	0					
ANR	10991507	PrimaryExpression	0		10991296	1					
ANR	10991508	ArrayIndexing	RGB [ 1 ]		10991296	1					
ANR	10991509	Identifier	RGB		10991296	0					
ANR	10991510	PrimaryExpression	1		10991296	1					
ANR	10991511	EqualityExpression	RGB [ 1 ] == RGB [ 2 ]		10991296	1		==			
ANR	10991512	ArrayIndexing	RGB [ 1 ]		10991296	0					
ANR	10991513	Identifier	RGB		10991296	0					
ANR	10991514	PrimaryExpression	1		10991296	1					
ANR	10991515	ArrayIndexing	RGB [ 2 ]		10991296	1					
ANR	10991516	Identifier	RGB		10991296	0					
ANR	10991517	PrimaryExpression	2		10991296	1					
ANR	10991518	ExpressionStatement	Gray = RGB [ 0 ]	1349:24:43979:43992	10991296	1	True				
ANR	10991519	AssignmentExpression	Gray = RGB [ 0 ]		10991296	0		=			
ANR	10991520	Identifier	Gray		10991296	0					
ANR	10991521	ArrayIndexing	RGB [ 0 ]		10991296	1					
ANR	10991522	Identifier	RGB		10991296	0					
ANR	10991523	PrimaryExpression	0		10991296	1					
ANR	10991524	ElseStatement	else		10991296	0					
ANR	10991525	ExpressionStatement	Gray = ( 0.3 * RGB [ 0 ] ) + ( 0.59 * RGB [ 1 ] ) + ( 0.11 * RGB [ 2 ] )	1351:24:44043:44100	10991296	0	True				
ANR	10991526	AssignmentExpression	Gray = ( 0.3 * RGB [ 0 ] ) + ( 0.59 * RGB [ 1 ] ) + ( 0.11 * RGB [ 2 ] )		10991296	0		=			
ANR	10991527	Identifier	Gray		10991296	0					
ANR	10991528	AdditiveExpression	( 0.3 * RGB [ 0 ] ) + ( 0.59 * RGB [ 1 ] ) + ( 0.11 * RGB [ 2 ] )		10991296	1		+			
ANR	10991529	MultiplicativeExpression	0.3 * RGB [ 0 ]		10991296	0		*			
ANR	10991530	PrimaryExpression	0.3		10991296	0					
ANR	10991531	ArrayIndexing	RGB [ 0 ]		10991296	1					
ANR	10991532	Identifier	RGB		10991296	0					
ANR	10991533	PrimaryExpression	0		10991296	1					
ANR	10991534	AdditiveExpression	( 0.59 * RGB [ 1 ] ) + ( 0.11 * RGB [ 2 ] )		10991296	1		+			
ANR	10991535	MultiplicativeExpression	0.59 * RGB [ 1 ]		10991296	0		*			
ANR	10991536	PrimaryExpression	0.59		10991296	0					
ANR	10991537	ArrayIndexing	RGB [ 1 ]		10991296	1					
ANR	10991538	Identifier	RGB		10991296	0					
ANR	10991539	PrimaryExpression	1		10991296	1					
ANR	10991540	MultiplicativeExpression	0.11 * RGB [ 2 ]		10991296	1		*			
ANR	10991541	PrimaryExpression	0.11		10991296	0					
ANR	10991542	ArrayIndexing	RGB [ 2 ]		10991296	1					
ANR	10991543	Identifier	RGB		10991296	0					
ANR	10991544	PrimaryExpression	2		10991296	1					
ANR	10991545	ExpressionStatement	"make_real ( op , Gray )"	1352:20:44122:44141	10991296	4	True				
ANR	10991546	CallExpression	"make_real ( op , Gray )"		10991296	0					
ANR	10991547	Callee	make_real		10991296	0					
ANR	10991548	Identifier	make_real		10991296	0					
ANR	10991549	ArgumentList	op		10991296	1					
ANR	10991550	Argument	op		10991296	0					
ANR	10991551	Identifier	op		10991296	0					
ANR	10991552	Argument	Gray		10991296	1					
ANR	10991553	Identifier	Gray		10991296	0					
ANR	10991554	ReturnStatement	return 0 ;	1353:20:44163:44171	10991296	5	True				
ANR	10991555	PrimaryExpression	0		10991296	0					
ANR	10991556	BreakStatement	break ;	1354:20:44193:44198	10991296	6	True				
ANR	10991557	Label	case 1 :	1355:16:44216:44222	10991296	7	True				
ANR	10991558	ExpressionStatement	rgb2hsb ( ( float * ) & RGB )	1356:20:44244:44266	10991296	8	True				
ANR	10991559	CallExpression	rgb2hsb ( ( float * ) & RGB )		10991296	0					
ANR	10991560	Callee	rgb2hsb		10991296	0					
ANR	10991561	Identifier	rgb2hsb		10991296	0					
ANR	10991562	ArgumentList	( float * ) & RGB		10991296	1					
ANR	10991563	Argument	( float * ) & RGB		10991296	0					
ANR	10991564	CastExpression	( float * ) & RGB		10991296	0					
ANR	10991565	CastTarget	float *		10991296	0					
ANR	10991566	UnaryOperationExpression	& RGB		10991296	1					
ANR	10991567	UnaryOperator	&		10991296	0					
ANR	10991568	Identifier	RGB		10991296	1					
ANR	10991569	ExpressionStatement	"make_real ( & op [ - 2 ] , RGB [ 0 ] )"	1357:20:44288:44314	10991296	9	True				
ANR	10991570	CallExpression	"make_real ( & op [ - 2 ] , RGB [ 0 ] )"		10991296	0					
ANR	10991571	Callee	make_real		10991296	0					
ANR	10991572	Identifier	make_real		10991296	0					
ANR	10991573	ArgumentList	& op [ - 2 ]		10991296	1					
ANR	10991574	Argument	& op [ - 2 ]		10991296	0					
ANR	10991575	UnaryOperationExpression	& op [ - 2 ]		10991296	0					
ANR	10991576	UnaryOperator	&		10991296	0					
ANR	10991577	ArrayIndexing	op [ - 2 ]		10991296	1					
ANR	10991578	Identifier	op		10991296	0					
ANR	10991579	UnaryOperationExpression	- 2		10991296	1					
ANR	10991580	UnaryOperator	-		10991296	0					
ANR	10991581	PrimaryExpression	2		10991296	1					
ANR	10991582	Argument	RGB [ 0 ]		10991296	1					
ANR	10991583	ArrayIndexing	RGB [ 0 ]		10991296	0					
ANR	10991584	Identifier	RGB		10991296	0					
ANR	10991585	PrimaryExpression	0		10991296	1					
ANR	10991586	ExpressionStatement	"make_real ( & op [ - 1 ] , RGB [ 1 ] )"	1358:20:44336:44362	10991296	10	True				
ANR	10991587	CallExpression	"make_real ( & op [ - 1 ] , RGB [ 1 ] )"		10991296	0					
ANR	10991588	Callee	make_real		10991296	0					
ANR	10991589	Identifier	make_real		10991296	0					
ANR	10991590	ArgumentList	& op [ - 1 ]		10991296	1					
ANR	10991591	Argument	& op [ - 1 ]		10991296	0					
ANR	10991592	UnaryOperationExpression	& op [ - 1 ]		10991296	0					
ANR	10991593	UnaryOperator	&		10991296	0					
ANR	10991594	ArrayIndexing	op [ - 1 ]		10991296	1					
ANR	10991595	Identifier	op		10991296	0					
ANR	10991596	UnaryOperationExpression	- 1		10991296	1					
ANR	10991597	UnaryOperator	-		10991296	0					
ANR	10991598	PrimaryExpression	1		10991296	1					
ANR	10991599	Argument	RGB [ 1 ]		10991296	1					
ANR	10991600	ArrayIndexing	RGB [ 1 ]		10991296	0					
ANR	10991601	Identifier	RGB		10991296	0					
ANR	10991602	PrimaryExpression	1		10991296	1					
ANR	10991603	ExpressionStatement	"make_real ( op , RGB [ 2 ] )"	1359:20:44384:44405	10991296	11	True				
ANR	10991604	CallExpression	"make_real ( op , RGB [ 2 ] )"		10991296	0					
ANR	10991605	Callee	make_real		10991296	0					
ANR	10991606	Identifier	make_real		10991296	0					
ANR	10991607	ArgumentList	op		10991296	1					
ANR	10991608	Argument	op		10991296	0					
ANR	10991609	Identifier	op		10991296	0					
ANR	10991610	Argument	RGB [ 2 ]		10991296	1					
ANR	10991611	ArrayIndexing	RGB [ 2 ]		10991296	0					
ANR	10991612	Identifier	RGB		10991296	0					
ANR	10991613	PrimaryExpression	2		10991296	1					
ANR	10991614	ReturnStatement	return 0 ;	1360:20:44427:44435	10991296	12	True				
ANR	10991615	PrimaryExpression	0		10991296	0					
ANR	10991616	BreakStatement	break ;	1361:20:44457:44462	10991296	13	True				
ANR	10991617	Label	case 2 :	1362:16:44480:44486	10991296	14	True				
ANR	10991618	ExpressionStatement	"make_real ( & op [ - 2 ] , RGB [ 0 ] )"	1363:20:44508:44534	10991296	15	True				
ANR	10991619	CallExpression	"make_real ( & op [ - 2 ] , RGB [ 0 ] )"		10991296	0					
ANR	10991620	Callee	make_real		10991296	0					
ANR	10991621	Identifier	make_real		10991296	0					
ANR	10991622	ArgumentList	& op [ - 2 ]		10991296	1					
ANR	10991623	Argument	& op [ - 2 ]		10991296	0					
ANR	10991624	UnaryOperationExpression	& op [ - 2 ]		10991296	0					
ANR	10991625	UnaryOperator	&		10991296	0					
ANR	10991626	ArrayIndexing	op [ - 2 ]		10991296	1					
ANR	10991627	Identifier	op		10991296	0					
ANR	10991628	UnaryOperationExpression	- 2		10991296	1					
ANR	10991629	UnaryOperator	-		10991296	0					
ANR	10991630	PrimaryExpression	2		10991296	1					
ANR	10991631	Argument	RGB [ 0 ]		10991296	1					
ANR	10991632	ArrayIndexing	RGB [ 0 ]		10991296	0					
ANR	10991633	Identifier	RGB		10991296	0					
ANR	10991634	PrimaryExpression	0		10991296	1					
ANR	10991635	ExpressionStatement	"make_real ( & op [ - 1 ] , RGB [ 1 ] )"	1364:20:44556:44582	10991296	16	True				
ANR	10991636	CallExpression	"make_real ( & op [ - 1 ] , RGB [ 1 ] )"		10991296	0					
ANR	10991637	Callee	make_real		10991296	0					
ANR	10991638	Identifier	make_real		10991296	0					
ANR	10991639	ArgumentList	& op [ - 1 ]		10991296	1					
ANR	10991640	Argument	& op [ - 1 ]		10991296	0					
ANR	10991641	UnaryOperationExpression	& op [ - 1 ]		10991296	0					
ANR	10991642	UnaryOperator	&		10991296	0					
ANR	10991643	ArrayIndexing	op [ - 1 ]		10991296	1					
ANR	10991644	Identifier	op		10991296	0					
ANR	10991645	UnaryOperationExpression	- 1		10991296	1					
ANR	10991646	UnaryOperator	-		10991296	0					
ANR	10991647	PrimaryExpression	1		10991296	1					
ANR	10991648	Argument	RGB [ 1 ]		10991296	1					
ANR	10991649	ArrayIndexing	RGB [ 1 ]		10991296	0					
ANR	10991650	Identifier	RGB		10991296	0					
ANR	10991651	PrimaryExpression	1		10991296	1					
ANR	10991652	ExpressionStatement	"make_real ( op , RGB [ 2 ] )"	1365:20:44604:44625	10991296	17	True				
ANR	10991653	CallExpression	"make_real ( op , RGB [ 2 ] )"		10991296	0					
ANR	10991654	Callee	make_real		10991296	0					
ANR	10991655	Identifier	make_real		10991296	0					
ANR	10991656	ArgumentList	op		10991296	1					
ANR	10991657	Argument	op		10991296	0					
ANR	10991658	Identifier	op		10991296	0					
ANR	10991659	Argument	RGB [ 2 ]		10991296	1					
ANR	10991660	ArrayIndexing	RGB [ 2 ]		10991296	0					
ANR	10991661	Identifier	RGB		10991296	0					
ANR	10991662	PrimaryExpression	2		10991296	1					
ANR	10991663	ReturnStatement	return 0 ;	1366:20:44647:44655	10991296	18	True				
ANR	10991664	PrimaryExpression	0		10991296	0					
ANR	10991665	BreakStatement	break ;	1367:20:44677:44682	10991296	19	True				
ANR	10991666	Label	case 3 :	1368:16:44700:44706	10991296	20	True				
ANR	10991667	ExpressionStatement	* stage = 1	1369:20:44728:44738	10991296	21	True				
ANR	10991668	AssignmentExpression	* stage = 1		10991296	0		=			
ANR	10991669	UnaryOperationExpression	* stage		10991296	0					
ANR	10991670	UnaryOperator	*		10991296	0					
ANR	10991671	Identifier	stage		10991296	1					
ANR	10991672	PrimaryExpression	1		10991296	1					
ANR	10991673	ExpressionStatement	* cont = 1	1370:20:44760:44769	10991296	22	True				
ANR	10991674	AssignmentExpression	* cont = 1		10991296	0		=			
ANR	10991675	UnaryOperationExpression	* cont		10991296	0					
ANR	10991676	UnaryOperator	*		10991296	0					
ANR	10991677	Identifier	cont		10991296	1					
ANR	10991678	PrimaryExpression	1		10991296	1					
ANR	10991679	ForStatement	for ( i = 0 ; i < 3 ; i ++ )		10991296	23					
ANR	10991680	ForInit	i = 0 ;	1371:25:44796:44799	10991296	0	True				
ANR	10991681	AssignmentExpression	i = 0		10991296	0		=			
ANR	10991682	Identifier	i		10991296	0					
ANR	10991683	PrimaryExpression	0		10991296	1					
ANR	10991684	Condition	i < 3	1371:29:44800:44802	10991296	1	True				
ANR	10991685	RelationalExpression	i < 3		10991296	0		<			
ANR	10991686	Identifier	i		10991296	0					
ANR	10991687	PrimaryExpression	3		10991296	1					
ANR	10991688	PostIncDecOperationExpression	i ++	1371:33:44804:44806	10991296	2	True				
ANR	10991689	Identifier	i		10991296	0					
ANR	10991690	IncDec	++		10991296	1					
ANR	10991691	ExpressionStatement	CMYK [ i ] = 1 - RGB [ i ]	1372:24:44833:44853	10991296	3	True				
ANR	10991692	AssignmentExpression	CMYK [ i ] = 1 - RGB [ i ]		10991296	0		=			
ANR	10991693	ArrayIndexing	CMYK [ i ]		10991296	0					
ANR	10991694	Identifier	CMYK		10991296	0					
ANR	10991695	Identifier	i		10991296	1					
ANR	10991696	AdditiveExpression	1 - RGB [ i ]		10991296	1		-			
ANR	10991697	PrimaryExpression	1		10991296	0					
ANR	10991698	ArrayIndexing	RGB [ i ]		10991296	1					
ANR	10991699	Identifier	RGB		10991296	0					
ANR	10991700	Identifier	i		10991296	1					
ANR	10991701	IfStatement	if ( CMYK [ 0 ] < CMYK [ 1 ] )		10991296	24					
ANR	10991702	Condition	CMYK [ 0 ] < CMYK [ 1 ]	1373:24:44879:44895	10991296	0	True				
ANR	10991703	RelationalExpression	CMYK [ 0 ] < CMYK [ 1 ]		10991296	0		<			
ANR	10991704	ArrayIndexing	CMYK [ 0 ]		10991296	0					
ANR	10991705	Identifier	CMYK		10991296	0					
ANR	10991706	PrimaryExpression	0		10991296	1					
ANR	10991707	ArrayIndexing	CMYK [ 1 ]		10991296	1					
ANR	10991708	Identifier	CMYK		10991296	0					
ANR	10991709	PrimaryExpression	1		10991296	1					
ANR	10991710	CompoundStatement		71:43:2700:2700	10991296	1					
ANR	10991711	IfStatement	if ( CMYK [ 0 ] < CMYK [ 2 ] )		10991296	0					
ANR	10991712	Condition	CMYK [ 0 ] < CMYK [ 2 ]	1374:28:44928:44944	10991296	0	True				
ANR	10991713	RelationalExpression	CMYK [ 0 ] < CMYK [ 2 ]		10991296	0		<			
ANR	10991714	ArrayIndexing	CMYK [ 0 ]		10991296	0					
ANR	10991715	Identifier	CMYK		10991296	0					
ANR	10991716	PrimaryExpression	0		10991296	1					
ANR	10991717	ArrayIndexing	CMYK [ 2 ]		10991296	1					
ANR	10991718	Identifier	CMYK		10991296	0					
ANR	10991719	PrimaryExpression	2		10991296	1					
ANR	10991720	ExpressionStatement	CMYK [ 3 ] = CMYK [ 0 ]	1375:28:44975:44992	10991296	1	True				
ANR	10991721	AssignmentExpression	CMYK [ 3 ] = CMYK [ 0 ]		10991296	0		=			
ANR	10991722	ArrayIndexing	CMYK [ 3 ]		10991296	0					
ANR	10991723	Identifier	CMYK		10991296	0					
ANR	10991724	PrimaryExpression	3		10991296	1					
ANR	10991725	ArrayIndexing	CMYK [ 0 ]		10991296	1					
ANR	10991726	Identifier	CMYK		10991296	0					
ANR	10991727	PrimaryExpression	0		10991296	1					
ANR	10991728	ElseStatement	else		10991296	0					
ANR	10991729	ExpressionStatement	CMYK [ 3 ] = CMYK [ 2 ]	1377:28:45051:45068	10991296	0	True				
ANR	10991730	AssignmentExpression	CMYK [ 3 ] = CMYK [ 2 ]		10991296	0		=			
ANR	10991731	ArrayIndexing	CMYK [ 3 ]		10991296	0					
ANR	10991732	Identifier	CMYK		10991296	0					
ANR	10991733	PrimaryExpression	3		10991296	1					
ANR	10991734	ArrayIndexing	CMYK [ 2 ]		10991296	1					
ANR	10991735	Identifier	CMYK		10991296	0					
ANR	10991736	PrimaryExpression	2		10991296	1					
ANR	10991737	ElseStatement	else		10991296	0					
ANR	10991738	CompoundStatement		76:27:2899:2899	10991296	0					
ANR	10991739	IfStatement	if ( CMYK [ 1 ] < CMYK [ 2 ] )		10991296	0					
ANR	10991740	Condition	CMYK [ 1 ] < CMYK [ 2 ]	1379:28:45127:45143	10991296	0	True				
ANR	10991741	RelationalExpression	CMYK [ 1 ] < CMYK [ 2 ]		10991296	0		<			
ANR	10991742	ArrayIndexing	CMYK [ 1 ]		10991296	0					
ANR	10991743	Identifier	CMYK		10991296	0					
ANR	10991744	PrimaryExpression	1		10991296	1					
ANR	10991745	ArrayIndexing	CMYK [ 2 ]		10991296	1					
ANR	10991746	Identifier	CMYK		10991296	0					
ANR	10991747	PrimaryExpression	2		10991296	1					
ANR	10991748	ExpressionStatement	CMYK [ 3 ] = CMYK [ 1 ]	1380:28:45174:45191	10991296	1	True				
ANR	10991749	AssignmentExpression	CMYK [ 3 ] = CMYK [ 1 ]		10991296	0		=			
ANR	10991750	ArrayIndexing	CMYK [ 3 ]		10991296	0					
ANR	10991751	Identifier	CMYK		10991296	0					
ANR	10991752	PrimaryExpression	3		10991296	1					
ANR	10991753	ArrayIndexing	CMYK [ 1 ]		10991296	1					
ANR	10991754	Identifier	CMYK		10991296	0					
ANR	10991755	PrimaryExpression	1		10991296	1					
ANR	10991756	ElseStatement	else		10991296	0					
ANR	10991757	ExpressionStatement	CMYK [ 3 ] = CMYK [ 2 ]	1382:28:45250:45267	10991296	0	True				
ANR	10991758	AssignmentExpression	CMYK [ 3 ] = CMYK [ 2 ]		10991296	0		=			
ANR	10991759	ArrayIndexing	CMYK [ 3 ]		10991296	0					
ANR	10991760	Identifier	CMYK		10991296	0					
ANR	10991761	PrimaryExpression	3		10991296	1					
ANR	10991762	ArrayIndexing	CMYK [ 2 ]		10991296	1					
ANR	10991763	Identifier	CMYK		10991296	0					
ANR	10991764	PrimaryExpression	2		10991296	1					
ANR	10991765	ExpressionStatement	check_estack ( 1 )	1384:20:45311:45326	10991296	25	True				
ANR	10991766	CallExpression	check_estack ( 1 )		10991296	0					
ANR	10991767	Callee	check_estack		10991296	0					
ANR	10991768	Identifier	check_estack		10991296	0					
ANR	10991769	ArgumentList	1		10991296	1					
ANR	10991770	Argument	1		10991296	0					
ANR	10991771	PrimaryExpression	1		10991296	0					
ANR	10991772	ExpressionStatement	push ( 2 )	1385:20:45348:45355	10991296	26	True				
ANR	10991773	CallExpression	push ( 2 )		10991296	0					
ANR	10991774	Callee	push		10991296	0					
ANR	10991775	Identifier	push		10991296	0					
ANR	10991776	ArgumentList	2		10991296	1					
ANR	10991777	Argument	2		10991296	0					
ANR	10991778	PrimaryExpression	2		10991296	0					
ANR	10991779	ExpressionStatement	op = osp - 4	1386:20:45377:45389	10991296	27	True				
ANR	10991780	AssignmentExpression	op = osp - 4		10991296	0		=			
ANR	10991781	Identifier	op		10991296	0					
ANR	10991782	AdditiveExpression	osp - 4		10991296	1		-			
ANR	10991783	Identifier	osp		10991296	0					
ANR	10991784	PrimaryExpression	4		10991296	1					
ANR	10991785	ForStatement	for ( i = 0 ; i < 4 ; i ++ )		10991296	28					
ANR	10991786	ForInit	i = 0 ;	1387:25:45416:45419	10991296	0	True				
ANR	10991787	AssignmentExpression	i = 0		10991296	0		=			
ANR	10991788	Identifier	i		10991296	0					
ANR	10991789	PrimaryExpression	0		10991296	1					
ANR	10991790	Condition	i < 4	1387:29:45420:45422	10991296	1	True				
ANR	10991791	RelationalExpression	i < 4		10991296	0		<			
ANR	10991792	Identifier	i		10991296	0					
ANR	10991793	PrimaryExpression	4		10991296	1					
ANR	10991794	PostIncDecOperationExpression	i ++	1387:33:45424:45426	10991296	2	True				
ANR	10991795	Identifier	i		10991296	0					
ANR	10991796	IncDec	++		10991296	1					
ANR	10991797	CompoundStatement		85:38:3231:3231	10991296	3					
ANR	10991798	ExpressionStatement	"make_real ( op , CMYK [ i ] )"	1388:24:45455:45477	10991296	0	True				
ANR	10991799	CallExpression	"make_real ( op , CMYK [ i ] )"		10991296	0					
ANR	10991800	Callee	make_real		10991296	0					
ANR	10991801	Identifier	make_real		10991296	0					
ANR	10991802	ArgumentList	op		10991296	1					
ANR	10991803	Argument	op		10991296	0					
ANR	10991804	Identifier	op		10991296	0					
ANR	10991805	Argument	CMYK [ i ]		10991296	1					
ANR	10991806	ArrayIndexing	CMYK [ i ]		10991296	0					
ANR	10991807	Identifier	CMYK		10991296	0					
ANR	10991808	Identifier	i		10991296	1					
ANR	10991809	ExpressionStatement	op ++	1389:24:45503:45507	10991296	1	True				
ANR	10991810	PostIncDecOperationExpression	op ++		10991296	0					
ANR	10991811	Identifier	op		10991296	0					
ANR	10991812	IncDec	++		10991296	1					
ANR	10991813	ExpressionStatement	"make_real ( op , CMYK [ 3 ] )"	1391:20:45551:45573	10991296	29	True				
ANR	10991814	CallExpression	"make_real ( op , CMYK [ 3 ] )"		10991296	0					
ANR	10991815	Callee	make_real		10991296	0					
ANR	10991816	Identifier	make_real		10991296	0					
ANR	10991817	ArgumentList	op		10991296	1					
ANR	10991818	Argument	op		10991296	0					
ANR	10991819	Identifier	op		10991296	0					
ANR	10991820	Argument	CMYK [ 3 ]		10991296	1					
ANR	10991821	ArrayIndexing	CMYK [ 3 ]		10991296	0					
ANR	10991822	Identifier	CMYK		10991296	0					
ANR	10991823	PrimaryExpression	3		10991296	1					
ANR	10991824	ExpressionStatement	esp ++	1392:20:45595:45600	10991296	30	True				
ANR	10991825	PostIncDecOperationExpression	esp ++		10991296	0					
ANR	10991826	Identifier	esp		10991296	0					
ANR	10991827	IncDec	++		10991296	1					
ANR	10991828	ExpressionStatement	* esp = istate -> undercolor_removal	1393:20:45622:45655	10991296	31	True				
ANR	10991829	AssignmentExpression	* esp = istate -> undercolor_removal		10991296	0		=			
ANR	10991830	UnaryOperationExpression	* esp		10991296	0					
ANR	10991831	UnaryOperator	*		10991296	0					
ANR	10991832	Identifier	esp		10991296	1					
ANR	10991833	PtrMemberAccess	istate -> undercolor_removal		10991296	1					
ANR	10991834	Identifier	istate		10991296	0					
ANR	10991835	Identifier	undercolor_removal		10991296	1					
ANR	10991836	ReturnStatement	return o_push_estack ;	1394:20:45677:45697	10991296	32	True				
ANR	10991837	Identifier	o_push_estack		10991296	0					
ANR	10991838	BreakStatement	break ;	1395:20:45719:45724	10991296	33	True				
ANR	10991839	Label	default :	1396:16:45742:45749	10991296	34	True				
ANR	10991840	Identifier	default		10991296	0					
ANR	10991841	ExpressionStatement	return_error ( gs_error_undefined )	1397:20:45771:45803	10991296	35	True				
ANR	10991842	CallExpression	return_error ( gs_error_undefined )		10991296	0					
ANR	10991843	Callee	return_error		10991296	0					
ANR	10991844	Identifier	return_error		10991296	0					
ANR	10991845	ArgumentList	gs_error_undefined		10991296	1					
ANR	10991846	Argument	gs_error_undefined		10991296	0					
ANR	10991847	Identifier	gs_error_undefined		10991296	0					
ANR	10991848	BreakStatement	break ;	1398:20:45825:45830	10991296	36	True				
ANR	10991849	BreakStatement	break ;	1400:12:45858:45863	10991296	7	True				
ANR	10991850	Label	case 1 :	1401:8:45873:45879	10991296	8	True				
ANR	10991851	ExpressionStatement	( * stage ) ++	1402:12:45893:45903	10991296	9	True				
ANR	10991852	PostIncDecOperationExpression	( * stage ) ++		10991296	0					
ANR	10991853	UnaryOperationExpression	* stage		10991296	0					
ANR	10991854	UnaryOperator	*		10991296	0					
ANR	10991855	Identifier	stage		10991296	1					
ANR	10991856	IncDec	++		10991296	1					
ANR	10991857	ExpressionStatement	* cont = 1	1403:12:45917:45926	10991296	10	True				
ANR	10991858	AssignmentExpression	* cont = 1		10991296	0		=			
ANR	10991859	UnaryOperationExpression	* cont		10991296	0					
ANR	10991860	UnaryOperator	*		10991296	0					
ANR	10991861	Identifier	cont		10991296	1					
ANR	10991862	PrimaryExpression	1		10991296	1					
ANR	10991863	ExpressionStatement	check_estack ( 1 )	1404:12:45940:45955	10991296	11	True				
ANR	10991864	CallExpression	check_estack ( 1 )		10991296	0					
ANR	10991865	Callee	check_estack		10991296	0					
ANR	10991866	Identifier	check_estack		10991296	0					
ANR	10991867	ArgumentList	1		10991296	1					
ANR	10991868	Argument	1		10991296	0					
ANR	10991869	PrimaryExpression	1		10991296	0					
ANR	10991870	ExpressionStatement	check_op ( 5 )	1405:12:45969:45980	10991296	12	True				
ANR	10991871	CallExpression	check_op ( 5 )		10991296	0					
ANR	10991872	Callee	check_op		10991296	0					
ANR	10991873	Identifier	check_op		10991296	0					
ANR	10991874	ArgumentList	5		10991296	1					
ANR	10991875	Argument	5		10991296	0					
ANR	10991876	PrimaryExpression	5		10991296	0					
ANR	10991877	ExpressionStatement	op -= 4	1406:12:45994:46001	10991296	13	True				
ANR	10991878	AssignmentExpression	op -= 4		10991296	0		-=			
ANR	10991879	Identifier	op		10991296	0					
ANR	10991880	PrimaryExpression	4		10991296	1					
ANR	10991881	ForStatement	for ( i = 0 ; i < 4 ; i ++ )		10991296	14					
ANR	10991882	ForInit	i = 0 ;	1407:17:46020:46023	10991296	0	True				
ANR	10991883	AssignmentExpression	i = 0		10991296	0		=			
ANR	10991884	Identifier	i		10991296	0					
ANR	10991885	PrimaryExpression	0		10991296	1					
ANR	10991886	Condition	i < 4	1407:21:46024:46026	10991296	1	True				
ANR	10991887	RelationalExpression	i < 4		10991296	0		<			
ANR	10991888	Identifier	i		10991296	0					
ANR	10991889	PrimaryExpression	4		10991296	1					
ANR	10991890	PostIncDecOperationExpression	i ++	1407:25:46028:46030	10991296	2	True				
ANR	10991891	Identifier	i		10991296	0					
ANR	10991892	IncDec	++		10991296	1					
ANR	10991893	CompoundStatement		105:30:3835:3835	10991296	3					
ANR	10991894	IfStatement	"if ( ! r_has_type ( op , t_integer ) )"		10991296	0					
ANR	10991895	Condition	"! r_has_type ( op , t_integer )"	1408:20:46055:46080	10991296	0	True				
ANR	10991896	UnaryOperationExpression	"! r_has_type ( op , t_integer )"		10991296	0					
ANR	10991897	UnaryOperator	!		10991296	0					
ANR	10991898	CallExpression	"r_has_type ( op , t_integer )"		10991296	1					
ANR	10991899	Callee	r_has_type		10991296	0					
ANR	10991900	Identifier	r_has_type		10991296	0					
ANR	10991901	ArgumentList	op		10991296	1					
ANR	10991902	Argument	op		10991296	0					
ANR	10991903	Identifier	op		10991296	0					
ANR	10991904	Argument	t_integer		10991296	1					
ANR	10991905	Identifier	t_integer		10991296	0					
ANR	10991906	CompoundStatement		106:48:3885:3885	10991296	1					
ANR	10991907	IfStatement	"if ( r_has_type ( op , t_real ) )"		10991296	0					
ANR	10991908	Condition	"r_has_type ( op , t_real )"	1409:24:46109:46130	10991296	0	True				
ANR	10991909	CallExpression	"r_has_type ( op , t_real )"		10991296	0					
ANR	10991910	Callee	r_has_type		10991296	0					
ANR	10991911	Identifier	r_has_type		10991296	0					
ANR	10991912	ArgumentList	op		10991296	1					
ANR	10991913	Argument	op		10991296	0					
ANR	10991914	Identifier	op		10991296	0					
ANR	10991915	Argument	t_real		10991296	1					
ANR	10991916	Identifier	t_real		10991296	0					
ANR	10991917	CompoundStatement		107:48:3935:3935	10991296	1					
ANR	10991918	ExpressionStatement	CMYK [ i ] = op -> value . realval	1410:24:46159:46186	10991296	0	True				
ANR	10991919	AssignmentExpression	CMYK [ i ] = op -> value . realval		10991296	0		=			
ANR	10991920	ArrayIndexing	CMYK [ i ]		10991296	0					
ANR	10991921	Identifier	CMYK		10991296	0					
ANR	10991922	Identifier	i		10991296	1					
ANR	10991923	MemberAccess	op -> value . realval		10991296	1					
ANR	10991924	PtrMemberAccess	op -> value		10991296	0					
ANR	10991925	Identifier	op		10991296	0					
ANR	10991926	Identifier	value		10991296	1					
ANR	10991927	Identifier	realval		10991296	1					
ANR	10991928	ElseStatement	else		10991296	0					
ANR	10991929	ExpressionStatement	return_error ( gs_error_typecheck )	1412:24:46239:46271	10991296	0	True				
ANR	10991930	CallExpression	return_error ( gs_error_typecheck )		10991296	0					
ANR	10991931	Callee	return_error		10991296	0					
ANR	10991932	Identifier	return_error		10991296	0					
ANR	10991933	ArgumentList	gs_error_typecheck		10991296	1					
ANR	10991934	Argument	gs_error_typecheck		10991296	0					
ANR	10991935	Identifier	gs_error_typecheck		10991296	0					
ANR	10991936	ElseStatement	else		10991296	0					
ANR	10991937	ExpressionStatement	CMYK [ i ] = ( float ) op -> value . intval	1414:20:46316:46349	10991296	0	True				
ANR	10991938	AssignmentExpression	CMYK [ i ] = ( float ) op -> value . intval		10991296	0		=			
ANR	10991939	ArrayIndexing	CMYK [ i ]		10991296	0					
ANR	10991940	Identifier	CMYK		10991296	0					
ANR	10991941	Identifier	i		10991296	1					
ANR	10991942	CastExpression	( float ) op -> value . intval		10991296	1					
ANR	10991943	CastTarget	float		10991296	0					
ANR	10991944	MemberAccess	op -> value . intval		10991296	1					
ANR	10991945	PtrMemberAccess	op -> value		10991296	0					
ANR	10991946	Identifier	op		10991296	0					
ANR	10991947	Identifier	value		10991296	1					
ANR	10991948	Identifier	intval		10991296	1					
ANR	10991949	ExpressionStatement	op ++	1415:16:46367:46371	10991296	1	True				
ANR	10991950	PostIncDecOperationExpression	op ++		10991296	0					
ANR	10991951	Identifier	op		10991296	0					
ANR	10991952	IncDec	++		10991296	1					
ANR	10991953	IfStatement	"if ( ! r_has_type ( op , t_integer ) )"		10991296	15					
ANR	10991954	Condition	"! r_has_type ( op , t_integer )"	1417:16:46403:46428	10991296	0	True				
ANR	10991955	UnaryOperationExpression	"! r_has_type ( op , t_integer )"		10991296	0					
ANR	10991956	UnaryOperator	!		10991296	0					
ANR	10991957	CallExpression	"r_has_type ( op , t_integer )"		10991296	1					
ANR	10991958	Callee	r_has_type		10991296	0					
ANR	10991959	Identifier	r_has_type		10991296	0					
ANR	10991960	ArgumentList	op		10991296	1					
ANR	10991961	Argument	op		10991296	0					
ANR	10991962	Identifier	op		10991296	0					
ANR	10991963	Argument	t_integer		10991296	1					
ANR	10991964	Identifier	t_integer		10991296	0					
ANR	10991965	CompoundStatement		115:44:4233:4233	10991296	1					
ANR	10991966	IfStatement	"if ( r_has_type ( op , t_real ) )"		10991296	0					
ANR	10991967	Condition	"r_has_type ( op , t_real )"	1418:20:46453:46474	10991296	0	True				
ANR	10991968	CallExpression	"r_has_type ( op , t_real )"		10991296	0					
ANR	10991969	Callee	r_has_type		10991296	0					
ANR	10991970	Identifier	r_has_type		10991296	0					
ANR	10991971	ArgumentList	op		10991296	1					
ANR	10991972	Argument	op		10991296	0					
ANR	10991973	Identifier	op		10991296	0					
ANR	10991974	Argument	t_real		10991296	1					
ANR	10991975	Identifier	t_real		10991296	0					
ANR	10991976	CompoundStatement		116:44:4279:4279	10991296	1					
ANR	10991977	ExpressionStatement	UCR = op -> value . realval	1419:20:46499:46522	10991296	0	True				
ANR	10991978	AssignmentExpression	UCR = op -> value . realval		10991296	0		=			
ANR	10991979	Identifier	UCR		10991296	0					
ANR	10991980	MemberAccess	op -> value . realval		10991296	1					
ANR	10991981	PtrMemberAccess	op -> value		10991296	0					
ANR	10991982	Identifier	op		10991296	0					
ANR	10991983	Identifier	value		10991296	1					
ANR	10991984	Identifier	realval		10991296	1					
ANR	10991985	ElseStatement	else		10991296	0					
ANR	10991986	ExpressionStatement	return_error ( gs_error_typecheck )	1421:20:46567:46599	10991296	0	True				
ANR	10991987	CallExpression	return_error ( gs_error_typecheck )		10991296	0					
ANR	10991988	Callee	return_error		10991296	0					
ANR	10991989	Identifier	return_error		10991296	0					
ANR	10991990	ArgumentList	gs_error_typecheck		10991296	1					
ANR	10991991	Argument	gs_error_typecheck		10991296	0					
ANR	10991992	Identifier	gs_error_typecheck		10991296	0					
ANR	10991993	ElseStatement	else		10991296	0					
ANR	10991994	ExpressionStatement	UCR = ( float ) op -> value . intval	1423:16:46636:46665	10991296	0	True				
ANR	10991995	AssignmentExpression	UCR = ( float ) op -> value . intval		10991296	0		=			
ANR	10991996	Identifier	UCR		10991296	0					
ANR	10991997	CastExpression	( float ) op -> value . intval		10991296	1					
ANR	10991998	CastTarget	float		10991296	0					
ANR	10991999	MemberAccess	op -> value . intval		10991296	1					
ANR	10992000	PtrMemberAccess	op -> value		10991296	0					
ANR	10992001	Identifier	op		10991296	0					
ANR	10992002	Identifier	value		10991296	1					
ANR	10992003	Identifier	intval		10991296	1					
ANR	10992004	ForStatement	for ( i = 0 ; i < 3 ; i ++ )		10991296	16					
ANR	10992005	ForInit	i = 0 ;	1424:17:46684:46687	10991296	0	True				
ANR	10992006	AssignmentExpression	i = 0		10991296	0		=			
ANR	10992007	Identifier	i		10991296	0					
ANR	10992008	PrimaryExpression	0		10991296	1					
ANR	10992009	Condition	i < 3	1424:21:46688:46690	10991296	1	True				
ANR	10992010	RelationalExpression	i < 3		10991296	0		<			
ANR	10992011	Identifier	i		10991296	0					
ANR	10992012	PrimaryExpression	3		10991296	1					
ANR	10992013	PostIncDecOperationExpression	i ++	1424:25:46692:46694	10991296	2	True				
ANR	10992014	Identifier	i		10991296	0					
ANR	10992015	IncDec	++		10991296	1					
ANR	10992016	CompoundStatement		122:30:4499:4499	10991296	3					
ANR	10992017	ExpressionStatement	CMYK [ i ] = CMYK [ i ] - UCR	1425:16:46715:46738	10991296	0	True				
ANR	10992018	AssignmentExpression	CMYK [ i ] = CMYK [ i ] - UCR		10991296	0		=			
ANR	10992019	ArrayIndexing	CMYK [ i ]		10991296	0					
ANR	10992020	Identifier	CMYK		10991296	0					
ANR	10992021	Identifier	i		10991296	1					
ANR	10992022	AdditiveExpression	CMYK [ i ] - UCR		10991296	1		-			
ANR	10992023	ArrayIndexing	CMYK [ i ]		10991296	0					
ANR	10992024	Identifier	CMYK		10991296	0					
ANR	10992025	Identifier	i		10991296	1					
ANR	10992026	Identifier	UCR		10991296	1					
ANR	10992027	IfStatement	if ( CMYK [ i ] < 0 )		10991296	1					
ANR	10992028	Condition	CMYK [ i ] < 0	1426:20:46760:46770	10991296	0	True				
ANR	10992029	RelationalExpression	CMYK [ i ] < 0		10991296	0		<			
ANR	10992030	ArrayIndexing	CMYK [ i ]		10991296	0					
ANR	10992031	Identifier	CMYK		10991296	0					
ANR	10992032	Identifier	i		10991296	1					
ANR	10992033	PrimaryExpression	0		10991296	1					
ANR	10992034	ExpressionStatement	CMYK [ i ] = 0	1427:20:46793:46804	10991296	1	True				
ANR	10992035	AssignmentExpression	CMYK [ i ] = 0		10991296	0		=			
ANR	10992036	ArrayIndexing	CMYK [ i ]		10991296	0					
ANR	10992037	Identifier	CMYK		10991296	0					
ANR	10992038	Identifier	i		10991296	1					
ANR	10992039	PrimaryExpression	0		10991296	1					
ANR	10992040	IfStatement	if ( CMYK [ i ] > 1 )		10991296	2					
ANR	10992041	Condition	CMYK [ i ] > 1	1428:20:46826:46836	10991296	0	True				
ANR	10992042	RelationalExpression	CMYK [ i ] > 1		10991296	0		>			
ANR	10992043	ArrayIndexing	CMYK [ i ]		10991296	0					
ANR	10992044	Identifier	CMYK		10991296	0					
ANR	10992045	Identifier	i		10991296	1					
ANR	10992046	PrimaryExpression	1		10991296	1					
ANR	10992047	ExpressionStatement	CMYK [ i ] = 1.0	1429:20:46859:46872	10991296	1	True				
ANR	10992048	AssignmentExpression	CMYK [ i ] = 1.0		10991296	0		=			
ANR	10992049	ArrayIndexing	CMYK [ i ]		10991296	0					
ANR	10992050	Identifier	CMYK		10991296	0					
ANR	10992051	Identifier	i		10991296	1					
ANR	10992052	PrimaryExpression	1.0		10991296	1					
ANR	10992053	ExpressionStatement	op -= 4	1431:12:46900:46907	10991296	17	True				
ANR	10992054	AssignmentExpression	op -= 4		10991296	0		-=			
ANR	10992055	Identifier	op		10991296	0					
ANR	10992056	PrimaryExpression	4		10991296	1					
ANR	10992057	ForStatement	for ( i = 0 ; i < 4 ; i ++ )		10991296	18					
ANR	10992058	ForInit	i = 0 ;	1432:17:46926:46929	10991296	0	True				
ANR	10992059	AssignmentExpression	i = 0		10991296	0		=			
ANR	10992060	Identifier	i		10991296	0					
ANR	10992061	PrimaryExpression	0		10991296	1					
ANR	10992062	Condition	i < 4	1432:21:46930:46932	10991296	1	True				
ANR	10992063	RelationalExpression	i < 4		10991296	0		<			
ANR	10992064	Identifier	i		10991296	0					
ANR	10992065	PrimaryExpression	4		10991296	1					
ANR	10992066	PostIncDecOperationExpression	i ++	1432:25:46934:46936	10991296	2	True				
ANR	10992067	Identifier	i		10991296	0					
ANR	10992068	IncDec	++		10991296	1					
ANR	10992069	CompoundStatement		130:30:4741:4741	10991296	3					
ANR	10992070	ExpressionStatement	"make_real ( op , CMYK [ i ] )"	1433:16:46957:46979	10991296	0	True				
ANR	10992071	CallExpression	"make_real ( op , CMYK [ i ] )"		10991296	0					
ANR	10992072	Callee	make_real		10991296	0					
ANR	10992073	Identifier	make_real		10991296	0					
ANR	10992074	ArgumentList	op		10991296	1					
ANR	10992075	Argument	op		10991296	0					
ANR	10992076	Identifier	op		10991296	0					
ANR	10992077	Argument	CMYK [ i ]		10991296	1					
ANR	10992078	ArrayIndexing	CMYK [ i ]		10991296	0					
ANR	10992079	Identifier	CMYK		10991296	0					
ANR	10992080	Identifier	i		10991296	1					
ANR	10992081	ExpressionStatement	op ++	1434:16:46997:47001	10991296	1	True				
ANR	10992082	PostIncDecOperationExpression	op ++		10991296	0					
ANR	10992083	Identifier	op		10991296	0					
ANR	10992084	IncDec	++		10991296	1					
ANR	10992085	ExpressionStatement	"make_real ( op , CMYK [ 3 ] )"	1436:12:47029:47051	10991296	19	True				
ANR	10992086	CallExpression	"make_real ( op , CMYK [ 3 ] )"		10991296	0					
ANR	10992087	Callee	make_real		10991296	0					
ANR	10992088	Identifier	make_real		10991296	0					
ANR	10992089	ArgumentList	op		10991296	1					
ANR	10992090	Argument	op		10991296	0					
ANR	10992091	Identifier	op		10991296	0					
ANR	10992092	Argument	CMYK [ 3 ]		10991296	1					
ANR	10992093	ArrayIndexing	CMYK [ 3 ]		10991296	0					
ANR	10992094	Identifier	CMYK		10991296	0					
ANR	10992095	PrimaryExpression	3		10991296	1					
ANR	10992096	ExpressionStatement	esp ++	1437:12:47065:47070	10991296	20	True				
ANR	10992097	PostIncDecOperationExpression	esp ++		10991296	0					
ANR	10992098	Identifier	esp		10991296	0					
ANR	10992099	IncDec	++		10991296	1					
ANR	10992100	ExpressionStatement	* esp = istate -> black_generation	1438:12:47084:47115	10991296	21	True				
ANR	10992101	AssignmentExpression	* esp = istate -> black_generation		10991296	0		=			
ANR	10992102	UnaryOperationExpression	* esp		10991296	0					
ANR	10992103	UnaryOperator	*		10991296	0					
ANR	10992104	Identifier	esp		10991296	1					
ANR	10992105	PtrMemberAccess	istate -> black_generation		10991296	1					
ANR	10992106	Identifier	istate		10991296	0					
ANR	10992107	Identifier	black_generation		10991296	1					
ANR	10992108	ReturnStatement	return o_push_estack ;	1439:12:47129:47149	10991296	22	True				
ANR	10992109	Identifier	o_push_estack		10991296	0					
ANR	10992110	BreakStatement	break ;	1440:12:47163:47168	10991296	23	True				
ANR	10992111	Label	case 2 :	1441:8:47178:47184	10991296	24	True				
ANR	10992112	ExpressionStatement	* stage = 0	1442:12:47198:47208	10991296	25	True				
ANR	10992113	AssignmentExpression	* stage = 0		10991296	0		=			
ANR	10992114	UnaryOperationExpression	* stage		10991296	0					
ANR	10992115	UnaryOperator	*		10991296	0					
ANR	10992116	Identifier	stage		10991296	1					
ANR	10992117	PrimaryExpression	0		10991296	1					
ANR	10992118	ExpressionStatement	* cont = 0	1443:12:47222:47231	10991296	26	True				
ANR	10992119	AssignmentExpression	* cont = 0		10991296	0		=			
ANR	10992120	UnaryOperationExpression	* cont		10991296	0					
ANR	10992121	UnaryOperator	*		10991296	0					
ANR	10992122	Identifier	cont		10991296	1					
ANR	10992123	PrimaryExpression	0		10991296	1					
ANR	10992124	ExpressionStatement	check_op ( 5 )	1444:12:47245:47256	10991296	27	True				
ANR	10992125	CallExpression	check_op ( 5 )		10991296	0					
ANR	10992126	Callee	check_op		10991296	0					
ANR	10992127	Identifier	check_op		10991296	0					
ANR	10992128	ArgumentList	5		10991296	1					
ANR	10992129	Argument	5		10991296	0					
ANR	10992130	PrimaryExpression	5		10991296	0					
ANR	10992131	IfStatement	"if ( ! r_has_type ( op , t_integer ) )"		10991296	28					
ANR	10992132	Condition	"! r_has_type ( op , t_integer )"	1445:16:47274:47299	10991296	0	True				
ANR	10992133	UnaryOperationExpression	"! r_has_type ( op , t_integer )"		10991296	0					
ANR	10992134	UnaryOperator	!		10991296	0					
ANR	10992135	CallExpression	"r_has_type ( op , t_integer )"		10991296	1					
ANR	10992136	Callee	r_has_type		10991296	0					
ANR	10992137	Identifier	r_has_type		10991296	0					
ANR	10992138	ArgumentList	op		10991296	1					
ANR	10992139	Argument	op		10991296	0					
ANR	10992140	Identifier	op		10991296	0					
ANR	10992141	Argument	t_integer		10991296	1					
ANR	10992142	Identifier	t_integer		10991296	0					
ANR	10992143	CompoundStatement		143:44:5104:5104	10991296	1					
ANR	10992144	IfStatement	"if ( r_has_type ( op , t_real ) )"		10991296	0					
ANR	10992145	Condition	"r_has_type ( op , t_real )"	1446:20:47324:47345	10991296	0	True				
ANR	10992146	CallExpression	"r_has_type ( op , t_real )"		10991296	0					
ANR	10992147	Callee	r_has_type		10991296	0					
ANR	10992148	Identifier	r_has_type		10991296	0					
ANR	10992149	ArgumentList	op		10991296	1					
ANR	10992150	Argument	op		10991296	0					
ANR	10992151	Identifier	op		10991296	0					
ANR	10992152	Argument	t_real		10991296	1					
ANR	10992153	Identifier	t_real		10991296	0					
ANR	10992154	CompoundStatement		144:44:5150:5150	10991296	1					
ANR	10992155	ExpressionStatement	BG = op -> value . realval	1447:20:47370:47392	10991296	0	True				
ANR	10992156	AssignmentExpression	BG = op -> value . realval		10991296	0		=			
ANR	10992157	Identifier	BG		10991296	0					
ANR	10992158	MemberAccess	op -> value . realval		10991296	1					
ANR	10992159	PtrMemberAccess	op -> value		10991296	0					
ANR	10992160	Identifier	op		10991296	0					
ANR	10992161	Identifier	value		10991296	1					
ANR	10992162	Identifier	realval		10991296	1					
ANR	10992163	ElseStatement	else		10991296	0					
ANR	10992164	ExpressionStatement	return_error ( gs_error_typecheck )	1449:20:47437:47469	10991296	0	True				
ANR	10992165	CallExpression	return_error ( gs_error_typecheck )		10991296	0					
ANR	10992166	Callee	return_error		10991296	0					
ANR	10992167	Identifier	return_error		10991296	0					
ANR	10992168	ArgumentList	gs_error_typecheck		10991296	1					
ANR	10992169	Argument	gs_error_typecheck		10991296	0					
ANR	10992170	Identifier	gs_error_typecheck		10991296	0					
ANR	10992171	ElseStatement	else		10991296	0					
ANR	10992172	ExpressionStatement	BG = ( float ) op -> value . intval	1451:16:47506:47534	10991296	0	True				
ANR	10992173	AssignmentExpression	BG = ( float ) op -> value . intval		10991296	0		=			
ANR	10992174	Identifier	BG		10991296	0					
ANR	10992175	CastExpression	( float ) op -> value . intval		10991296	1					
ANR	10992176	CastTarget	float		10991296	0					
ANR	10992177	MemberAccess	op -> value . intval		10991296	1					
ANR	10992178	PtrMemberAccess	op -> value		10991296	0					
ANR	10992179	Identifier	op		10991296	0					
ANR	10992180	Identifier	value		10991296	1					
ANR	10992181	Identifier	intval		10991296	1					
ANR	10992182	ExpressionStatement	pop ( 1 )	1452:12:47548:47554	10991296	29	True				
ANR	10992183	CallExpression	pop ( 1 )		10991296	0					
ANR	10992184	Callee	pop		10991296	0					
ANR	10992185	Identifier	pop		10991296	0					
ANR	10992186	ArgumentList	1		10991296	1					
ANR	10992187	Argument	1		10991296	0					
ANR	10992188	PrimaryExpression	1		10991296	0					
ANR	10992189	ExpressionStatement	op = osp	1453:12:47568:47576	10991296	30	True				
ANR	10992190	AssignmentExpression	op = osp		10991296	0		=			
ANR	10992191	Identifier	op		10991296	0					
ANR	10992192	Identifier	osp		10991296	1					
ANR	10992193	IfStatement	if ( BG < 0 )		10991296	31					
ANR	10992194	Condition	BG < 0	1454:16:47594:47599	10991296	0	True				
ANR	10992195	RelationalExpression	BG < 0		10991296	0		<			
ANR	10992196	Identifier	BG		10991296	0					
ANR	10992197	PrimaryExpression	0		10991296	1					
ANR	10992198	ExpressionStatement	BG = 0	1455:16:47618:47624	10991296	1	True				
ANR	10992199	AssignmentExpression	BG = 0		10991296	0		=			
ANR	10992200	Identifier	BG		10991296	0					
ANR	10992201	PrimaryExpression	0		10991296	1					
ANR	10992202	IfStatement	if ( BG > 1 )		10991296	32					
ANR	10992203	Condition	BG > 1	1456:16:47642:47647	10991296	0	True				
ANR	10992204	RelationalExpression	BG > 1		10991296	0		>			
ANR	10992205	Identifier	BG		10991296	0					
ANR	10992206	PrimaryExpression	1		10991296	1					
ANR	10992207	ExpressionStatement	BG = 1	1457:16:47666:47672	10991296	1	True				
ANR	10992208	AssignmentExpression	BG = 1		10991296	0		=			
ANR	10992209	Identifier	BG		10991296	0					
ANR	10992210	PrimaryExpression	1		10991296	1					
ANR	10992211	ExpressionStatement	"make_real ( op , BG )"	1458:12:47686:47703	10991296	33	True				
ANR	10992212	CallExpression	"make_real ( op , BG )"		10991296	0					
ANR	10992213	Callee	make_real		10991296	0					
ANR	10992214	Identifier	make_real		10991296	0					
ANR	10992215	ArgumentList	op		10991296	1					
ANR	10992216	Argument	op		10991296	0					
ANR	10992217	Identifier	op		10991296	0					
ANR	10992218	Argument	BG		10991296	1					
ANR	10992219	Identifier	BG		10991296	0					
ANR	10992220	BreakStatement	break ;	1459:12:47717:47722	10991296	34	True				
ANR	10992221	ReturnStatement	return 0 ;	1461:4:47734:47742	10991296	6	True				
ANR	10992222	PrimaryExpression	0		10991296	0					
ANR	10992223	ReturnType	static int		10991296	1					
ANR	10992224	Identifier	rgbbasecolor		10991296	2					
ANR	10992225	ParameterList	"i_ctx_t * i_ctx_p , ref * space , int base , int * stage , int * cont , int * stack_depth"		10991296	3					
ANR	10992226	Parameter	i_ctx_t * i_ctx_p	1302:24:42115:42131	10991296	0	True				
ANR	10992227	ParameterType	i_ctx_t *		10991296	0					
ANR	10992228	Identifier	i_ctx_p		10991296	1					
ANR	10992229	Parameter	ref * space	1302:43:42134:42143	10991296	1	True				
ANR	10992230	ParameterType	ref *		10991296	0					
ANR	10992231	Identifier	space		10991296	1					
ANR	10992232	Parameter	int base	1302:55:42146:42153	10991296	2	True				
ANR	10992233	ParameterType	int		10991296	0					
ANR	10992234	Identifier	base		10991296	1					
ANR	10992235	Parameter	int * stage	1302:65:42156:42165	10991296	3	True				
ANR	10992236	ParameterType	int *		10991296	0					
ANR	10992237	Identifier	stage		10991296	1					
ANR	10992238	Parameter	int * cont	1302:77:42168:42176	10991296	4	True				
ANR	10992239	ParameterType	int *		10991296	0					
ANR	10992240	Identifier	cont		10991296	1					
ANR	10992241	Parameter	int * stack_depth	1302:88:42179:42194	10991296	5	True				
ANR	10992242	ParameterType	int *		10991296	0					
ANR	10992243	Identifier	stack_depth		10991296	1					
ANR	10992244	CFGEntryNode	ENTRY		10991296		True				
ANR	10992245	CFGExitNode	EXIT		10991296		True				
ANR	10992246	Symbol	stack_depth		10991296						
ANR	10992247	Symbol	esp		10991296						
ANR	10992248	Symbol	* op		10991296						
ANR	10992249	Symbol	gs_error_rangecheck		10991296						
ANR	10992250	Symbol	UCR		10991296						
ANR	10992251	Symbol	BG		10991296						
ANR	10992252	Symbol	istate -> undercolor_removal		10991296						
ANR	10992253	Symbol	gs_error_undefined		10991296						
ANR	10992254	Symbol	pcs -> id		10991296						
ANR	10992255	Symbol	* pcs		10991296						
ANR	10992256	Symbol	op -> value . realval		10991296						
ANR	10992257	Symbol	graybasecolor		10991296						
ANR	10992258	Symbol	osp		10991296						
ANR	10992259	Symbol	space		10991296						
ANR	10992260	Symbol	* istate		10991296						
ANR	10992261	Symbol	r_has_type		10991296						
ANR	10992262	Symbol	gs_error_typecheck		10991296						
ANR	10992263	Symbol	* esp		10991296						
ANR	10992264	Symbol	igs		10991296						
ANR	10992265	Symbol	& RGB		10991296						
ANR	10992266	Symbol	gs_currentcolorspace		10991296						
ANR	10992267	Symbol	op -> value		10991296						
ANR	10992268	Symbol	cont		10991296						
ANR	10992269	Symbol	o_push_estack		10991296						
ANR	10992270	Symbol	op		10991296						
ANR	10992271	Symbol	pcs		10991296						
ANR	10992272	Symbol	Gray		10991296						
ANR	10992273	Symbol	CMYK		10991296						
ANR	10992274	Symbol	* stage		10991296						
ANR	10992275	Symbol	cs_DeviceGray_id		10991296						
ANR	10992276	Symbol	* RGB		10991296						
ANR	10992277	Symbol	i		10991296						
ANR	10992278	Symbol	t_real		10991296						
ANR	10992279	Symbol	RGB		10991296						
ANR	10992280	Symbol	* i		10991296						
ANR	10992281	Symbol	stage		10991296						
ANR	10992282	Symbol	t_integer		10991296						
ANR	10992283	Symbol	* cont		10991296						
ANR	10992284	Symbol	i_ctx_p		10991296						
ANR	10992285	Symbol	istate -> black_generation		10991296						
ANR	10992286	Symbol	* CMYK		10991296						
ANR	10992287	Symbol	op -> value . intval		10991296						
ANR	10992288	Symbol	base		10991296						
ANR	10992289	Symbol	istate		10991296						
ANR	10992290	Function	rgbvalidate	1463:0:47746:48271							
ANR	10992291	FunctionDef	"rgbvalidate (i_ctx_t * i_ctx_p , ref * space , float * values , int num_comps)"		10992290	0					
ANR	10992292	CompoundStatement		1464:0:47829:48271	10992290	0					
ANR	10992293	IdentifierDeclStatement	os_ptr op = osp ;	1465:4:47835:47850	10992290	0	True				
ANR	10992294	IdentifierDecl	op = osp		10992290	0					
ANR	10992295	IdentifierDeclType	os_ptr		10992290	0					
ANR	10992296	Identifier	op		10992290	1					
ANR	10992297	AssignmentExpression	op = osp		10992290	2		=			
ANR	10992298	Identifier	osp		10992290	0					
ANR	10992299	Identifier	osp		10992290	1					
ANR	10992300	IdentifierDeclStatement	int i ;	1466:4:47856:47861	10992290	1	True				
ANR	10992301	IdentifierDecl	i		10992290	0					
ANR	10992302	IdentifierDeclType	int		10992290	0					
ANR	10992303	Identifier	i		10992290	1					
ANR	10992304	IfStatement	if ( num_comps < 3 )		10992290	2					
ANR	10992305	Condition	num_comps < 3	1468:8:47872:47884	10992290	0	True				
ANR	10992306	RelationalExpression	num_comps < 3		10992290	0		<			
ANR	10992307	Identifier	num_comps		10992290	0					
ANR	10992308	PrimaryExpression	3		10992290	1					
ANR	10992309	ExpressionStatement	return_error ( gs_error_stackunderflow )	1469:8:47895:47932	10992290	1	True				
ANR	10992310	CallExpression	return_error ( gs_error_stackunderflow )		10992290	0					
ANR	10992311	Callee	return_error		10992290	0					
ANR	10992312	Identifier	return_error		10992290	0					
ANR	10992313	ArgumentList	gs_error_stackunderflow		10992290	1					
ANR	10992314	Argument	gs_error_stackunderflow		10992290	0					
ANR	10992315	Identifier	gs_error_stackunderflow		10992290	0					
ANR	10992316	ExpressionStatement	op -= 2	1471:4:47939:47946	10992290	3	True				
ANR	10992317	AssignmentExpression	op -= 2		10992290	0		-=			
ANR	10992318	Identifier	op		10992290	0					
ANR	10992319	PrimaryExpression	2		10992290	1					
ANR	10992320	ForStatement	for ( i = 0 ; i < 3 ; i ++ )		10992290	4					
ANR	10992321	ForInit	i = 0 ;	1472:9:47957:47960	10992290	0	True				
ANR	10992322	AssignmentExpression	i = 0		10992290	0		=			
ANR	10992323	Identifier	i		10992290	0					
ANR	10992324	PrimaryExpression	0		10992290	1					
ANR	10992325	Condition	i < 3	1472:13:47961:47963	10992290	1	True				
ANR	10992326	RelationalExpression	i < 3		10992290	0		<			
ANR	10992327	Identifier	i		10992290	0					
ANR	10992328	PrimaryExpression	3		10992290	1					
ANR	10992329	PostIncDecOperationExpression	i ++	1472:17:47965:47967	10992290	2	True				
ANR	10992330	Identifier	i		10992290	0					
ANR	10992331	IncDec	++		10992290	1					
ANR	10992332	CompoundStatement		9:22:140:140	10992290	3					
ANR	10992333	IfStatement	"if ( ! r_has_type ( op , t_integer ) && ! r_has_type ( op , t_real ) )"		10992290	0					
ANR	10992334	Condition	"! r_has_type ( op , t_integer ) && ! r_has_type ( op , t_real )"	1473:12:47984:48036	10992290	0	True				
ANR	10992335	AndExpression	"! r_has_type ( op , t_integer ) && ! r_has_type ( op , t_real )"		10992290	0		&&			
ANR	10992336	UnaryOperationExpression	"! r_has_type ( op , t_integer )"		10992290	0					
ANR	10992337	UnaryOperator	!		10992290	0					
ANR	10992338	CallExpression	"r_has_type ( op , t_integer )"		10992290	1					
ANR	10992339	Callee	r_has_type		10992290	0					
ANR	10992340	Identifier	r_has_type		10992290	0					
ANR	10992341	ArgumentList	op		10992290	1					
ANR	10992342	Argument	op		10992290	0					
ANR	10992343	Identifier	op		10992290	0					
ANR	10992344	Argument	t_integer		10992290	1					
ANR	10992345	Identifier	t_integer		10992290	0					
ANR	10992346	UnaryOperationExpression	"! r_has_type ( op , t_real )"		10992290	1					
ANR	10992347	UnaryOperator	!		10992290	0					
ANR	10992348	CallExpression	"r_has_type ( op , t_real )"		10992290	1					
ANR	10992349	Callee	r_has_type		10992290	0					
ANR	10992350	Identifier	r_has_type		10992290	0					
ANR	10992351	ArgumentList	op		10992290	1					
ANR	10992352	Argument	op		10992290	0					
ANR	10992353	Identifier	op		10992290	0					
ANR	10992354	Argument	t_real		10992290	1					
ANR	10992355	Identifier	t_real		10992290	0					
ANR	10992356	ExpressionStatement	return_error ( gs_error_typecheck )	1474:12:48051:48083	10992290	1	True				
ANR	10992357	CallExpression	return_error ( gs_error_typecheck )		10992290	0					
ANR	10992358	Callee	return_error		10992290	0					
ANR	10992359	Identifier	return_error		10992290	0					
ANR	10992360	ArgumentList	gs_error_typecheck		10992290	1					
ANR	10992361	Argument	gs_error_typecheck		10992290	0					
ANR	10992362	Identifier	gs_error_typecheck		10992290	0					
ANR	10992363	ExpressionStatement	op ++	1475:8:48093:48097	10992290	1	True				
ANR	10992364	PostIncDecOperationExpression	op ++		10992290	0					
ANR	10992365	Identifier	op		10992290	0					
ANR	10992366	IncDec	++		10992290	1					
ANR	10992367	ForStatement	for ( i = 0 ; i < 3 ; i ++ )		10992290	5					
ANR	10992368	ForInit	i = 0 ;	1478:9:48115:48118	10992290	0	True				
ANR	10992369	AssignmentExpression	i = 0		10992290	0		=			
ANR	10992370	Identifier	i		10992290	0					
ANR	10992371	PrimaryExpression	0		10992290	1					
ANR	10992372	Condition	i < 3	1478:13:48119:48123	10992290	1	True				
ANR	10992373	RelationalExpression	i < 3		10992290	0		<			
ANR	10992374	Identifier	i		10992290	0					
ANR	10992375	PrimaryExpression	3		10992290	1					
ANR	10992376	PostIncDecOperationExpression	i ++	1478:20:48126:48128	10992290	2	True				
ANR	10992377	Identifier	i		10992290	0					
ANR	10992378	IncDec	++		10992290	1					
ANR	10992379	CompoundStatement		15:25:301:301	10992290	3					
ANR	10992380	IfStatement	if ( values [ i ] > 1.0 )		10992290	0					
ANR	10992381	Condition	values [ i ] > 1.0	1479:12:48145:48159	10992290	0	True				
ANR	10992382	RelationalExpression	values [ i ] > 1.0		10992290	0		>			
ANR	10992383	ArrayIndexing	values [ i ]		10992290	0					
ANR	10992384	Identifier	values		10992290	0					
ANR	10992385	Identifier	i		10992290	1					
ANR	10992386	PrimaryExpression	1.0		10992290	1					
ANR	10992387	ExpressionStatement	values [ i ] = 1.0	1480:12:48174:48189	10992290	1	True				
ANR	10992388	AssignmentExpression	values [ i ] = 1.0		10992290	0		=			
ANR	10992389	ArrayIndexing	values [ i ]		10992290	0					
ANR	10992390	Identifier	values		10992290	0					
ANR	10992391	Identifier	i		10992290	1					
ANR	10992392	PrimaryExpression	1.0		10992290	1					
ANR	10992393	IfStatement	if ( values [ i ] < 0.0 )		10992290	1					
ANR	10992394	Condition	values [ i ] < 0.0	1482:12:48204:48218	10992290	0	True				
ANR	10992395	RelationalExpression	values [ i ] < 0.0		10992290	0		<			
ANR	10992396	ArrayIndexing	values [ i ]		10992290	0					
ANR	10992397	Identifier	values		10992290	0					
ANR	10992398	Identifier	i		10992290	1					
ANR	10992399	PrimaryExpression	0.0		10992290	1					
ANR	10992400	ExpressionStatement	values [ i ] = 0.0	1483:12:48233:48248	10992290	1	True				
ANR	10992401	AssignmentExpression	values [ i ] = 0.0		10992290	0		=			
ANR	10992402	ArrayIndexing	values [ i ]		10992290	0					
ANR	10992403	Identifier	values		10992290	0					
ANR	10992404	Identifier	i		10992290	1					
ANR	10992405	PrimaryExpression	0.0		10992290	1					
ANR	10992406	ReturnStatement	return 0 ;	1486:4:48261:48269	10992290	6	True				
ANR	10992407	PrimaryExpression	0		10992290	0					
ANR	10992408	ReturnType	static int		10992290	1					
ANR	10992409	Identifier	rgbvalidate		10992290	2					
ANR	10992410	ParameterList	"i_ctx_t * i_ctx_p , ref * space , float * values , int num_comps"		10992290	3					
ANR	10992411	Parameter	i_ctx_t * i_ctx_p	1463:23:47769:47784	10992290	0	True				
ANR	10992412	ParameterType	i_ctx_t *		10992290	0					
ANR	10992413	Identifier	i_ctx_p		10992290	1					
ANR	10992414	Parameter	ref * space	1463:41:47787:47796	10992290	1	True				
ANR	10992415	ParameterType	ref *		10992290	0					
ANR	10992416	Identifier	space		10992290	1					
ANR	10992417	Parameter	float * values	1463:53:47799:47811	10992290	2	True				
ANR	10992418	ParameterType	float *		10992290	0					
ANR	10992419	Identifier	values		10992290	1					
ANR	10992420	Parameter	int num_comps	1463:68:47814:47826	10992290	3	True				
ANR	10992421	ParameterType	int		10992290	0					
ANR	10992422	Identifier	num_comps		10992290	1					
ANR	10992423	CFGEntryNode	ENTRY		10992290		True				
ANR	10992424	CFGExitNode	EXIT		10992290		True				
ANR	10992425	Symbol	op		10992290						
ANR	10992426	Symbol	* values		10992290						
ANR	10992427	Symbol	values		10992290						
ANR	10992428	Symbol	i		10992290						
ANR	10992429	Symbol	t_real		10992290						
ANR	10992430	Symbol	osp		10992290						
ANR	10992431	Symbol	space		10992290						
ANR	10992432	Symbol	r_has_type		10992290						
ANR	10992433	Symbol	gs_error_typecheck		10992290						
ANR	10992434	Symbol	* i		10992290						
ANR	10992435	Symbol	t_integer		10992290						
ANR	10992436	Symbol	gs_error_stackunderflow		10992290						
ANR	10992437	Symbol	i_ctx_p		10992290						
ANR	10992438	Symbol	num_comps		10992290						
ANR	10992439	Function	rgbinitialproc	1488:0:48273:48497							
ANR	10992440	FunctionDef	"rgbinitialproc (i_ctx_t * i_ctx_p , ref * space)"		10992439	0					
ANR	10992441	CompoundStatement		1489:0:48329:48497	10992439	0					
ANR	10992442	IdentifierDeclStatement	gs_client_color cc ;	1490:4:48335:48353	10992439	0	True				
ANR	10992443	IdentifierDecl	cc		10992439	0					
ANR	10992444	IdentifierDeclType	gs_client_color		10992439	0					
ANR	10992445	Identifier	cc		10992439	1					
ANR	10992446	ExpressionStatement	cc . pattern = 0x00	1492:4:48360:48377	10992439	1	True				
ANR	10992447	AssignmentExpression	cc . pattern = 0x00		10992439	0		=			
ANR	10992448	MemberAccess	cc . pattern		10992439	0					
ANR	10992449	Identifier	cc		10992439	0					
ANR	10992450	Identifier	pattern		10992439	1					
ANR	10992451	PrimaryExpression	0x00		10992439	1					
ANR	10992452	ExpressionStatement	cc . paint . values [ 0 ] = 0	1493:4:48383:48405	10992439	2	True				
ANR	10992453	AssignmentExpression	cc . paint . values [ 0 ] = 0		10992439	0		=			
ANR	10992454	ArrayIndexing	cc . paint . values [ 0 ]		10992439	0					
ANR	10992455	MemberAccess	cc . paint . values		10992439	0					
ANR	10992456	MemberAccess	cc . paint		10992439	0					
ANR	10992457	Identifier	cc		10992439	0					
ANR	10992458	Identifier	paint		10992439	1					
ANR	10992459	Identifier	values		10992439	1					
ANR	10992460	PrimaryExpression	0		10992439	1					
ANR	10992461	PrimaryExpression	0		10992439	1					
ANR	10992462	ExpressionStatement	cc . paint . values [ 1 ] = 0	1494:4:48411:48433	10992439	3	True				
ANR	10992463	AssignmentExpression	cc . paint . values [ 1 ] = 0		10992439	0		=			
ANR	10992464	ArrayIndexing	cc . paint . values [ 1 ]		10992439	0					
ANR	10992465	MemberAccess	cc . paint . values		10992439	0					
ANR	10992466	MemberAccess	cc . paint		10992439	0					
ANR	10992467	Identifier	cc		10992439	0					
ANR	10992468	Identifier	paint		10992439	1					
ANR	10992469	Identifier	values		10992439	1					
ANR	10992470	PrimaryExpression	1		10992439	1					
ANR	10992471	PrimaryExpression	0		10992439	1					
ANR	10992472	ExpressionStatement	cc . paint . values [ 2 ] = 0	1495:4:48439:48461	10992439	4	True				
ANR	10992473	AssignmentExpression	cc . paint . values [ 2 ] = 0		10992439	0		=			
ANR	10992474	ArrayIndexing	cc . paint . values [ 2 ]		10992439	0					
ANR	10992475	MemberAccess	cc . paint . values		10992439	0					
ANR	10992476	MemberAccess	cc . paint		10992439	0					
ANR	10992477	Identifier	cc		10992439	0					
ANR	10992478	Identifier	paint		10992439	1					
ANR	10992479	Identifier	values		10992439	1					
ANR	10992480	PrimaryExpression	2		10992439	1					
ANR	10992481	PrimaryExpression	0		10992439	1					
ANR	10992482	ReturnStatement	"return gs_setcolor ( igs , & cc ) ;"	1496:4:48467:48495	10992439	5	True				
ANR	10992483	CallExpression	"gs_setcolor ( igs , & cc )"		10992439	0					
ANR	10992484	Callee	gs_setcolor		10992439	0					
ANR	10992485	Identifier	gs_setcolor		10992439	0					
ANR	10992486	ArgumentList	igs		10992439	1					
ANR	10992487	Argument	igs		10992439	0					
ANR	10992488	Identifier	igs		10992439	0					
ANR	10992489	Argument	& cc		10992439	1					
ANR	10992490	UnaryOperationExpression	& cc		10992439	0					
ANR	10992491	UnaryOperator	&		10992439	0					
ANR	10992492	Identifier	cc		10992439	1					
ANR	10992493	ReturnType	static int		10992439	1					
ANR	10992494	Identifier	rgbinitialproc		10992439	2					
ANR	10992495	ParameterList	"i_ctx_t * i_ctx_p , ref * space"		10992439	3					
ANR	10992496	Parameter	i_ctx_t * i_ctx_p	1488:26:48299:48314	10992439	0	True				
ANR	10992497	ParameterType	i_ctx_t *		10992439	0					
ANR	10992498	Identifier	i_ctx_p		10992439	1					
ANR	10992499	Parameter	ref * space	1488:44:48317:48326	10992439	1	True				
ANR	10992500	ParameterType	ref *		10992439	0					
ANR	10992501	Identifier	space		10992439	1					
ANR	10992502	CFGEntryNode	ENTRY		10992439		True				
ANR	10992503	CFGExitNode	EXIT		10992439		True				
ANR	10992504	Symbol	cc		10992439						
ANR	10992505	Symbol	cc . pattern		10992439						
ANR	10992506	Symbol	* cc . paint		10992439						
ANR	10992507	Symbol	igs		10992439						
ANR	10992508	Symbol	* cc . paint . values		10992439						
ANR	10992509	Symbol	* cc		10992439						
ANR	10992510	Symbol	i_ctx_p		10992439						
ANR	10992511	Symbol	cc . paint		10992439						
ANR	10992512	Symbol	gs_setcolor		10992439						
ANR	10992513	Symbol	& cc		10992439						
ANR	10992514	Symbol	cc . paint . values		10992439						
ANR	10992515	Symbol	space		10992439						
ANR	10992516	Function	setcmykspace	1500:0:48517:53568							
ANR	10992517	FunctionDef	"setcmykspace (i_ctx_t * i_ctx_p , ref * r , int * stage , int * cont , int CIESubst)"		10992516	0					
ANR	10992518	CompoundStatement		1501:0:48605:53568	10992516	0					
ANR	10992519	IdentifierDeclStatement	os_ptr op = osp ;	1502:4:48611:48626	10992516	0	True				
ANR	10992520	IdentifierDecl	op = osp		10992516	0					
ANR	10992521	IdentifierDeclType	os_ptr		10992516	0					
ANR	10992522	Identifier	op		10992516	1					
ANR	10992523	AssignmentExpression	op = osp		10992516	2		=			
ANR	10992524	Identifier	osp		10992516	0					
ANR	10992525	Identifier	osp		10992516	1					
ANR	10992526	IdentifierDeclStatement	gs_color_space * pcs ;	1503:4:48632:48652	10992516	1	True				
ANR	10992527	IdentifierDecl	* pcs		10992516	0					
ANR	10992528	IdentifierDeclType	gs_color_space *		10992516	0					
ANR	10992529	Identifier	pcs		10992516	1					
ANR	10992530	IdentifierDeclStatement	int code = 0 ;	1504:4:48658:48668	10992516	2	True				
ANR	10992531	IdentifierDecl	code = 0		10992516	0					
ANR	10992532	IdentifierDeclType	int		10992516	0					
ANR	10992533	Identifier	code		10992516	1					
ANR	10992534	AssignmentExpression	code = 0		10992516	2		=			
ANR	10992535	Identifier	code		10992516	0					
ANR	10992536	PrimaryExpression	0		10992516	1					
ANR	10992537	IdentifierDeclStatement	ref stref ;	1505:4:48674:48683	10992516	3	True				
ANR	10992538	IdentifierDecl	stref		10992516	0					
ANR	10992539	IdentifierDeclType	ref		10992516	0					
ANR	10992540	Identifier	stref		10992516	1					
ANR	10992541	DoStatement	do		10992516	4					
ANR	10992542	CompoundStatement		7:7:87:87	10992516	0					
ANR	10992543	SwitchStatement	switch ( * stage )		10992516	0					
ANR	10992544	Condition	* stage	1508:16:48711:48716	10992516	0	True				
ANR	10992545	UnaryOperationExpression	* stage		10992516	0					
ANR	10992546	UnaryOperator	*		10992516	0					
ANR	10992547	Identifier	stage		10992516	1					
ANR	10992548	CompoundStatement		8:24:113:113	10992516	1					
ANR	10992549	Label	case 0 :	1509:12:48733:48739	10992516	0	True				
ANR	10992550	IfStatement	if ( istate -> use_cie_color . value . boolval && ! CIESubst )		10992516	1					
ANR	10992551	Condition	istate -> use_cie_color . value . boolval && ! CIESubst	1510:20:48761:48808	10992516	0	True				
ANR	10992552	AndExpression	istate -> use_cie_color . value . boolval && ! CIESubst		10992516	0		&&			
ANR	10992553	MemberAccess	istate -> use_cie_color . value . boolval		10992516	0					
ANR	10992554	MemberAccess	istate -> use_cie_color . value		10992516	0					
ANR	10992555	PtrMemberAccess	istate -> use_cie_color		10992516	0					
ANR	10992556	Identifier	istate		10992516	0					
ANR	10992557	Identifier	use_cie_color		10992516	1					
ANR	10992558	Identifier	value		10992516	1					
ANR	10992559	Identifier	boolval		10992516	1					
ANR	10992560	UnaryOperationExpression	! CIESubst		10992516	1					
ANR	10992561	UnaryOperator	!		10992516	0					
ANR	10992562	Identifier	CIESubst		10992516	1					
ANR	10992563	CompoundStatement		12:20:259:271	10992516	1					
ANR	10992564	IdentifierDeclStatement	byte * body ;	1511:20:48833:48843	10992516	0	True				
ANR	10992565	IdentifierDecl	* body		10992516	0					
ANR	10992566	IdentifierDeclType	byte *		10992516	0					
ANR	10992567	Identifier	body		10992516	1					
ANR	10992568	IdentifierDeclStatement	ref * nosubst ;	1512:20:48865:48877	10992516	1	True				
ANR	10992569	IdentifierDecl	* nosubst		10992516	0					
ANR	10992570	IdentifierDeclType	ref *		10992516	0					
ANR	10992571	Identifier	nosubst		10992516	1					
ANR	10992572	ExpressionStatement	"code = dict_find_string ( systemdict , ""NOSUBSTDEVICECOLORS"" , & nosubst )"	1514:20:48900:48968	10992516	2	True				
ANR	10992573	AssignmentExpression	"code = dict_find_string ( systemdict , ""NOSUBSTDEVICECOLORS"" , & nosubst )"		10992516	0		=			
ANR	10992574	Identifier	code		10992516	0					
ANR	10992575	CallExpression	"dict_find_string ( systemdict , ""NOSUBSTDEVICECOLORS"" , & nosubst )"		10992516	1					
ANR	10992576	Callee	dict_find_string		10992516	0					
ANR	10992577	Identifier	dict_find_string		10992516	0					
ANR	10992578	ArgumentList	systemdict		10992516	1					
ANR	10992579	Argument	systemdict		10992516	0					
ANR	10992580	Identifier	systemdict		10992516	0					
ANR	10992581	Argument	"""NOSUBSTDEVICECOLORS"""		10992516	1					
ANR	10992582	PrimaryExpression	"""NOSUBSTDEVICECOLORS"""		10992516	0					
ANR	10992583	Argument	& nosubst		10992516	2					
ANR	10992584	UnaryOperationExpression	& nosubst		10992516	0					
ANR	10992585	UnaryOperator	&		10992516	0					
ANR	10992586	Identifier	nosubst		10992516	1					
ANR	10992587	IfStatement	if ( code != 0 )		10992516	3					
ANR	10992588	Condition	code != 0	1515:24:48994:49002	10992516	0	True				
ANR	10992589	EqualityExpression	code != 0		10992516	0		!=			
ANR	10992590	Identifier	code		10992516	0					
ANR	10992591	PrimaryExpression	0		10992516	1					
ANR	10992592	CompoundStatement		15:35:399:399	10992516	1					
ANR	10992593	IfStatement	"if ( ! r_has_type ( nosubst , t_boolean ) )"		10992516	0					
ANR	10992594	Condition	"! r_has_type ( nosubst , t_boolean )"	1516:28:49035:49065	10992516	0	True				
ANR	10992595	UnaryOperationExpression	"! r_has_type ( nosubst , t_boolean )"		10992516	0					
ANR	10992596	UnaryOperator	!		10992516	0					
ANR	10992597	CallExpression	"r_has_type ( nosubst , t_boolean )"		10992516	1					
ANR	10992598	Callee	r_has_type		10992516	0					
ANR	10992599	Identifier	r_has_type		10992516	0					
ANR	10992600	ArgumentList	nosubst		10992516	1					
ANR	10992601	Argument	nosubst		10992516	0					
ANR	10992602	Identifier	nosubst		10992516	0					
ANR	10992603	Argument	t_boolean		10992516	1					
ANR	10992604	Identifier	t_boolean		10992516	0					
ANR	10992605	ExpressionStatement	return_error ( gs_error_typecheck )	1517:28:49096:49128	10992516	1	True				
ANR	10992606	CallExpression	return_error ( gs_error_typecheck )		10992516	0					
ANR	10992607	Callee	return_error		10992516	0					
ANR	10992608	Identifier	return_error		10992516	0					
ANR	10992609	ArgumentList	gs_error_typecheck		10992516	1					
ANR	10992610	Argument	gs_error_typecheck		10992516	0					
ANR	10992611	Identifier	gs_error_typecheck		10992516	0					
ANR	10992612	IfStatement	if ( code != 0 && nosubst -> value . boolval )		10992516	4					
ANR	10992613	Condition	code != 0 && nosubst -> value . boolval	1519:24:49176:49210	10992516	0	True				
ANR	10992614	AndExpression	code != 0 && nosubst -> value . boolval		10992516	0		&&			
ANR	10992615	EqualityExpression	code != 0		10992516	0		!=			
ANR	10992616	Identifier	code		10992516	0					
ANR	10992617	PrimaryExpression	0		10992516	1					
ANR	10992618	MemberAccess	nosubst -> value . boolval		10992516	1					
ANR	10992619	PtrMemberAccess	nosubst -> value		10992516	0					
ANR	10992620	Identifier	nosubst		10992516	0					
ANR	10992621	Identifier	value		10992516	1					
ANR	10992622	Identifier	boolval		10992516	1					
ANR	10992623	CompoundStatement		19:61:607:607	10992516	1					
ANR	10992624	ExpressionStatement	* stage = 4	1520:24:49239:49249	10992516	0	True				
ANR	10992625	AssignmentExpression	* stage = 4		10992516	0		=			
ANR	10992626	UnaryOperationExpression	* stage		10992516	0					
ANR	10992627	UnaryOperator	*		10992516	0					
ANR	10992628	Identifier	stage		10992516	1					
ANR	10992629	PrimaryExpression	4		10992516	1					
ANR	10992630	ExpressionStatement	* cont = 1	1521:24:49275:49284	10992516	1	True				
ANR	10992631	AssignmentExpression	* cont = 1		10992516	0		=			
ANR	10992632	UnaryOperationExpression	* cont		10992516	0					
ANR	10992633	UnaryOperator	*		10992516	0					
ANR	10992634	Identifier	cont		10992516	1					
ANR	10992635	PrimaryExpression	1		10992516	1					
ANR	10992636	ExpressionStatement	"body = ialloc_string ( 32 , ""string"" )"	1522:24:49310:49344	10992516	2	True				
ANR	10992637	AssignmentExpression	"body = ialloc_string ( 32 , ""string"" )"		10992516	0		=			
ANR	10992638	Identifier	body		10992516	0					
ANR	10992639	CallExpression	"ialloc_string ( 32 , ""string"" )"		10992516	1					
ANR	10992640	Callee	ialloc_string		10992516	0					
ANR	10992641	Identifier	ialloc_string		10992516	0					
ANR	10992642	ArgumentList	32		10992516	1					
ANR	10992643	Argument	32		10992516	0					
ANR	10992644	PrimaryExpression	32		10992516	0					
ANR	10992645	Argument	"""string"""		10992516	1					
ANR	10992646	PrimaryExpression	"""string"""		10992516	0					
ANR	10992647	IfStatement	if ( body == 0 )		10992516	3					
ANR	10992648	Condition	body == 0	1523:28:49374:49382	10992516	0	True				
ANR	10992649	EqualityExpression	body == 0		10992516	0		==			
ANR	10992650	Identifier	body		10992516	0					
ANR	10992651	PrimaryExpression	0		10992516	1					
ANR	10992652	ExpressionStatement	return_error ( gs_error_VMerror )	1524:28:49413:49443	10992516	1	True				
ANR	10992653	CallExpression	return_error ( gs_error_VMerror )		10992516	0					
ANR	10992654	Callee	return_error		10992516	0					
ANR	10992655	Identifier	return_error		10992516	0					
ANR	10992656	ArgumentList	gs_error_VMerror		10992516	1					
ANR	10992657	Argument	gs_error_VMerror		10992516	0					
ANR	10992658	Identifier	gs_error_VMerror		10992516	0					
ANR	10992659	ExpressionStatement	"memcpy ( body , ""/DefaultCMYK ..nosubstdevicetest"" , 32 )"	1525:24:49469:49520	10992516	4	True				
ANR	10992660	CallExpression	"memcpy ( body , ""/DefaultCMYK ..nosubstdevicetest"" , 32 )"		10992516	0					
ANR	10992661	Callee	memcpy		10992516	0					
ANR	10992662	Identifier	memcpy		10992516	0					
ANR	10992663	ArgumentList	body		10992516	1					
ANR	10992664	Argument	body		10992516	0					
ANR	10992665	Identifier	body		10992516	0					
ANR	10992666	Argument	"""/DefaultCMYK ..nosubstdevicetest"""		10992516	1					
ANR	10992667	PrimaryExpression	"""/DefaultCMYK ..nosubstdevicetest"""		10992516	0					
ANR	10992668	Argument	32		10992516	2					
ANR	10992669	PrimaryExpression	32		10992516	0					
ANR	10992670	ExpressionStatement	"make_string ( & stref , a_all | icurrent_space , 32 , body )"	1526:24:49546:49599	10992516	5	True				
ANR	10992671	CallExpression	"make_string ( & stref , a_all | icurrent_space , 32 , body )"		10992516	0					
ANR	10992672	Callee	make_string		10992516	0					
ANR	10992673	Identifier	make_string		10992516	0					
ANR	10992674	ArgumentList	& stref		10992516	1					
ANR	10992675	Argument	& stref		10992516	0					
ANR	10992676	UnaryOperationExpression	& stref		10992516	0					
ANR	10992677	UnaryOperator	&		10992516	0					
ANR	10992678	Identifier	stref		10992516	1					
ANR	10992679	Argument	a_all | icurrent_space		10992516	1					
ANR	10992680	InclusiveOrExpression	a_all | icurrent_space		10992516	0		|			
ANR	10992681	Identifier	a_all		10992516	0					
ANR	10992682	Identifier	icurrent_space		10992516	1					
ANR	10992683	Argument	32		10992516	2					
ANR	10992684	PrimaryExpression	32		10992516	0					
ANR	10992685	Argument	body		10992516	3					
ANR	10992686	Identifier	body		10992516	0					
ANR	10992687	ExpressionStatement	"r_set_attrs ( & stref , a_executable )"	1527:24:49625:49658	10992516	6	True				
ANR	10992688	CallExpression	"r_set_attrs ( & stref , a_executable )"		10992516	0					
ANR	10992689	Callee	r_set_attrs		10992516	0					
ANR	10992690	Identifier	r_set_attrs		10992516	0					
ANR	10992691	ArgumentList	& stref		10992516	1					
ANR	10992692	Argument	& stref		10992516	0					
ANR	10992693	UnaryOperationExpression	& stref		10992516	0					
ANR	10992694	UnaryOperator	&		10992516	0					
ANR	10992695	Identifier	stref		10992516	1					
ANR	10992696	Argument	a_executable		10992516	1					
ANR	10992697	Identifier	a_executable		10992516	0					
ANR	10992698	ExpressionStatement	esp ++	1528:24:49684:49689	10992516	7	True				
ANR	10992699	PostIncDecOperationExpression	esp ++		10992516	0					
ANR	10992700	Identifier	esp		10992516	0					
ANR	10992701	IncDec	++		10992516	1					
ANR	10992702	ExpressionStatement	"ref_assign ( esp , & stref )"	1529:24:49715:49738	10992516	8	True				
ANR	10992703	CallExpression	"ref_assign ( esp , & stref )"		10992516	0					
ANR	10992704	Callee	ref_assign		10992516	0					
ANR	10992705	Identifier	ref_assign		10992516	0					
ANR	10992706	ArgumentList	esp		10992516	1					
ANR	10992707	Argument	esp		10992516	0					
ANR	10992708	Identifier	esp		10992516	0					
ANR	10992709	Argument	& stref		10992516	1					
ANR	10992710	UnaryOperationExpression	& stref		10992516	0					
ANR	10992711	UnaryOperator	&		10992516	0					
ANR	10992712	Identifier	stref		10992516	1					
ANR	10992713	ReturnStatement	return o_push_estack ;	1530:24:49764:49784	10992516	9	True				
ANR	10992714	Identifier	o_push_estack		10992516	0					
ANR	10992715	ElseStatement	else		10992516	0					
ANR	10992716	CompoundStatement		31:27:1207:1207	10992516	0					
ANR	10992717	ExpressionStatement	* stage = 2	1532:24:49839:49849	10992516	0	True				
ANR	10992718	AssignmentExpression	* stage = 2		10992516	0		=			
ANR	10992719	UnaryOperationExpression	* stage		10992516	0					
ANR	10992720	UnaryOperator	*		10992516	0					
ANR	10992721	Identifier	stage		10992516	1					
ANR	10992722	PrimaryExpression	2		10992516	1					
ANR	10992723	ExpressionStatement	* cont = 1	1533:24:49875:49884	10992516	1	True				
ANR	10992724	AssignmentExpression	* cont = 1		10992516	0		=			
ANR	10992725	UnaryOperationExpression	* cont		10992516	0					
ANR	10992726	UnaryOperator	*		10992516	0					
ANR	10992727	Identifier	cont		10992516	1					
ANR	10992728	PrimaryExpression	1		10992516	1					
ANR	10992729	ExpressionStatement	"body = ialloc_string ( 47 , ""string"" )"	1534:24:49910:49944	10992516	2	True				
ANR	10992730	AssignmentExpression	"body = ialloc_string ( 47 , ""string"" )"		10992516	0		=			
ANR	10992731	Identifier	body		10992516	0					
ANR	10992732	CallExpression	"ialloc_string ( 47 , ""string"" )"		10992516	1					
ANR	10992733	Callee	ialloc_string		10992516	0					
ANR	10992734	Identifier	ialloc_string		10992516	0					
ANR	10992735	ArgumentList	47		10992516	1					
ANR	10992736	Argument	47		10992516	0					
ANR	10992737	PrimaryExpression	47		10992516	0					
ANR	10992738	Argument	"""string"""		10992516	1					
ANR	10992739	PrimaryExpression	"""string"""		10992516	0					
ANR	10992740	IfStatement	if ( body == 0 )		10992516	3					
ANR	10992741	Condition	body == 0	1535:28:49974:49982	10992516	0	True				
ANR	10992742	EqualityExpression	body == 0		10992516	0		==			
ANR	10992743	Identifier	body		10992516	0					
ANR	10992744	PrimaryExpression	0		10992516	1					
ANR	10992745	ExpressionStatement	return_error ( gs_error_VMerror )	1536:28:50013:50043	10992516	1	True				
ANR	10992746	CallExpression	return_error ( gs_error_VMerror )		10992516	0					
ANR	10992747	Callee	return_error		10992516	0					
ANR	10992748	Identifier	return_error		10992516	0					
ANR	10992749	ArgumentList	gs_error_VMerror		10992516	1					
ANR	10992750	Argument	gs_error_VMerror		10992516	0					
ANR	10992751	Identifier	gs_error_VMerror		10992516	0					
ANR	10992752	ExpressionStatement	"memcpy ( body , ""{/DefaultCMYK /ColorSpace findresource} stopped"" , 47 )"	1537:24:50069:50136	10992516	4	True				
ANR	10992753	CallExpression	"memcpy ( body , ""{/DefaultCMYK /ColorSpace findresource} stopped"" , 47 )"		10992516	0					
ANR	10992754	Callee	memcpy		10992516	0					
ANR	10992755	Identifier	memcpy		10992516	0					
ANR	10992756	ArgumentList	body		10992516	1					
ANR	10992757	Argument	body		10992516	0					
ANR	10992758	Identifier	body		10992516	0					
ANR	10992759	Argument	"""{/DefaultCMYK /ColorSpace findresource} stopped"""		10992516	1					
ANR	10992760	PrimaryExpression	"""{/DefaultCMYK /ColorSpace findresource} stopped"""		10992516	0					
ANR	10992761	Argument	47		10992516	2					
ANR	10992762	PrimaryExpression	47		10992516	0					
ANR	10992763	ExpressionStatement	"make_string ( & stref , a_all | icurrent_space , 47 , body )"	1538:24:50162:50215	10992516	5	True				
ANR	10992764	CallExpression	"make_string ( & stref , a_all | icurrent_space , 47 , body )"		10992516	0					
ANR	10992765	Callee	make_string		10992516	0					
ANR	10992766	Identifier	make_string		10992516	0					
ANR	10992767	ArgumentList	& stref		10992516	1					
ANR	10992768	Argument	& stref		10992516	0					
ANR	10992769	UnaryOperationExpression	& stref		10992516	0					
ANR	10992770	UnaryOperator	&		10992516	0					
ANR	10992771	Identifier	stref		10992516	1					
ANR	10992772	Argument	a_all | icurrent_space		10992516	1					
ANR	10992773	InclusiveOrExpression	a_all | icurrent_space		10992516	0		|			
ANR	10992774	Identifier	a_all		10992516	0					
ANR	10992775	Identifier	icurrent_space		10992516	1					
ANR	10992776	Argument	47		10992516	2					
ANR	10992777	PrimaryExpression	47		10992516	0					
ANR	10992778	Argument	body		10992516	3					
ANR	10992779	Identifier	body		10992516	0					
ANR	10992780	ExpressionStatement	"r_set_attrs ( & stref , a_executable )"	1539:24:50241:50274	10992516	6	True				
ANR	10992781	CallExpression	"r_set_attrs ( & stref , a_executable )"		10992516	0					
ANR	10992782	Callee	r_set_attrs		10992516	0					
ANR	10992783	Identifier	r_set_attrs		10992516	0					
ANR	10992784	ArgumentList	& stref		10992516	1					
ANR	10992785	Argument	& stref		10992516	0					
ANR	10992786	UnaryOperationExpression	& stref		10992516	0					
ANR	10992787	UnaryOperator	&		10992516	0					
ANR	10992788	Identifier	stref		10992516	1					
ANR	10992789	Argument	a_executable		10992516	1					
ANR	10992790	Identifier	a_executable		10992516	0					
ANR	10992791	ExpressionStatement	esp ++	1540:24:50300:50305	10992516	7	True				
ANR	10992792	PostIncDecOperationExpression	esp ++		10992516	0					
ANR	10992793	Identifier	esp		10992516	0					
ANR	10992794	IncDec	++		10992516	1					
ANR	10992795	ExpressionStatement	"ref_assign ( esp , & stref )"	1541:24:50331:50354	10992516	8	True				
ANR	10992796	CallExpression	"ref_assign ( esp , & stref )"		10992516	0					
ANR	10992797	Callee	ref_assign		10992516	0					
ANR	10992798	Identifier	ref_assign		10992516	0					
ANR	10992799	ArgumentList	esp		10992516	1					
ANR	10992800	Argument	esp		10992516	0					
ANR	10992801	Identifier	esp		10992516	0					
ANR	10992802	Argument	& stref		10992516	1					
ANR	10992803	UnaryOperationExpression	& stref		10992516	0					
ANR	10992804	UnaryOperator	&		10992516	0					
ANR	10992805	Identifier	stref		10992516	1					
ANR	10992806	ReturnStatement	return o_push_estack ;	1542:24:50380:50400	10992516	9	True				
ANR	10992807	Identifier	o_push_estack		10992516	0					
ANR	10992808	Label	case 1 :	1546:12:50489:50495	10992516	2	True				
ANR	10992809	ExpressionStatement	pcs = gs_cspace_new_DeviceCMYK ( imemory )	1547:16:50513:50552	10992516	3	True				
ANR	10992810	AssignmentExpression	pcs = gs_cspace_new_DeviceCMYK ( imemory )		10992516	0		=			
ANR	10992811	Identifier	pcs		10992516	0					
ANR	10992812	CallExpression	gs_cspace_new_DeviceCMYK ( imemory )		10992516	1					
ANR	10992813	Callee	gs_cspace_new_DeviceCMYK		10992516	0					
ANR	10992814	Identifier	gs_cspace_new_DeviceCMYK		10992516	0					
ANR	10992815	ArgumentList	imemory		10992516	1					
ANR	10992816	Argument	imemory		10992516	0					
ANR	10992817	Identifier	imemory		10992516	0					
ANR	10992818	IfStatement	if ( pcs == NULL )		10992516	4					
ANR	10992819	Condition	pcs == NULL	1548:20:50574:50584	10992516	0	True				
ANR	10992820	EqualityExpression	pcs == NULL		10992516	0		==			
ANR	10992821	Identifier	pcs		10992516	0					
ANR	10992822	Identifier	NULL		10992516	1					
ANR	10992823	ExpressionStatement	return_error ( gs_error_VMerror )	1549:20:50607:50637	10992516	1	True				
ANR	10992824	CallExpression	return_error ( gs_error_VMerror )		10992516	0					
ANR	10992825	Callee	return_error		10992516	0					
ANR	10992826	Identifier	return_error		10992516	0					
ANR	10992827	ArgumentList	gs_error_VMerror		10992516	1					
ANR	10992828	Argument	gs_error_VMerror		10992516	0					
ANR	10992829	Identifier	gs_error_VMerror		10992516	0					
ANR	10992830	ExpressionStatement	"code = gs_setcolorspace ( igs , pcs )"	1550:16:50655:50688	10992516	5	True				
ANR	10992831	AssignmentExpression	"code = gs_setcolorspace ( igs , pcs )"		10992516	0		=			
ANR	10992832	Identifier	code		10992516	0					
ANR	10992833	CallExpression	"gs_setcolorspace ( igs , pcs )"		10992516	1					
ANR	10992834	Callee	gs_setcolorspace		10992516	0					
ANR	10992835	Identifier	gs_setcolorspace		10992516	0					
ANR	10992836	ArgumentList	igs		10992516	1					
ANR	10992837	Argument	igs		10992516	0					
ANR	10992838	Identifier	igs		10992516	0					
ANR	10992839	Argument	pcs		10992516	1					
ANR	10992840	Identifier	pcs		10992516	0					
ANR	10992841	IfStatement	if ( code >= 0 )		10992516	6					
ANR	10992842	Condition	code >= 0	1551:20:50710:50718	10992516	0	True				
ANR	10992843	RelationalExpression	code >= 0		10992516	0		>=			
ANR	10992844	Identifier	code		10992516	0					
ANR	10992845	PrimaryExpression	0		10992516	1					
ANR	10992846	CompoundStatement		52:20:2137:2187	10992516	1					
ANR	10992847	IdentifierDeclStatement	gs_client_color * pcc = gs_currentcolor_inline ( igs ) ;	1552:20:50743:50793	10992516	0	True				
ANR	10992848	IdentifierDecl	* pcc = gs_currentcolor_inline ( igs )		10992516	0					
ANR	10992849	IdentifierDeclType	gs_client_color *		10992516	0					
ANR	10992850	Identifier	pcc		10992516	1					
ANR	10992851	AssignmentExpression	* pcc = gs_currentcolor_inline ( igs )		10992516	2		=			
ANR	10992852	Identifier	pcc		10992516	0					
ANR	10992853	CallExpression	gs_currentcolor_inline ( igs )		10992516	1					
ANR	10992854	Callee	gs_currentcolor_inline		10992516	0					
ANR	10992855	Identifier	gs_currentcolor_inline		10992516	0					
ANR	10992856	ArgumentList	igs		10992516	1					
ANR	10992857	Argument	igs		10992516	0					
ANR	10992858	Identifier	igs		10992516	0					
ANR	10992859	ExpressionStatement	"cs_adjust_color_count ( igs , - 1 )"	1554:20:50816:50846	10992516	1	True				
ANR	10992860	CallExpression	"cs_adjust_color_count ( igs , - 1 )"		10992516	0					
ANR	10992861	Callee	cs_adjust_color_count		10992516	0					
ANR	10992862	Identifier	cs_adjust_color_count		10992516	0					
ANR	10992863	ArgumentList	igs		10992516	1					
ANR	10992864	Argument	igs		10992516	0					
ANR	10992865	Identifier	igs		10992516	0					
ANR	10992866	Argument	- 1		10992516	1					
ANR	10992867	UnaryOperationExpression	- 1		10992516	0					
ANR	10992868	UnaryOperator	-		10992516	0					
ANR	10992869	PrimaryExpression	1		10992516	1					
ANR	10992870	ExpressionStatement	pcc -> paint . values [ 0 ] = 0	1555:20:50897:50921	10992516	2	True				
ANR	10992871	AssignmentExpression	pcc -> paint . values [ 0 ] = 0		10992516	0		=			
ANR	10992872	ArrayIndexing	pcc -> paint . values [ 0 ]		10992516	0					
ANR	10992873	MemberAccess	pcc -> paint . values		10992516	0					
ANR	10992874	PtrMemberAccess	pcc -> paint		10992516	0					
ANR	10992875	Identifier	pcc		10992516	0					
ANR	10992876	Identifier	paint		10992516	1					
ANR	10992877	Identifier	values		10992516	1					
ANR	10992878	PrimaryExpression	0		10992516	1					
ANR	10992879	PrimaryExpression	0		10992516	1					
ANR	10992880	ExpressionStatement	pcc -> paint . values [ 1 ] = 0	1556:20:50943:50967	10992516	3	True				
ANR	10992881	AssignmentExpression	pcc -> paint . values [ 1 ] = 0		10992516	0		=			
ANR	10992882	ArrayIndexing	pcc -> paint . values [ 1 ]		10992516	0					
ANR	10992883	MemberAccess	pcc -> paint . values		10992516	0					
ANR	10992884	PtrMemberAccess	pcc -> paint		10992516	0					
ANR	10992885	Identifier	pcc		10992516	0					
ANR	10992886	Identifier	paint		10992516	1					
ANR	10992887	Identifier	values		10992516	1					
ANR	10992888	PrimaryExpression	1		10992516	1					
ANR	10992889	PrimaryExpression	0		10992516	1					
ANR	10992890	ExpressionStatement	pcc -> paint . values [ 2 ] = 0	1557:20:50989:51013	10992516	4	True				
ANR	10992891	AssignmentExpression	pcc -> paint . values [ 2 ] = 0		10992516	0		=			
ANR	10992892	ArrayIndexing	pcc -> paint . values [ 2 ]		10992516	0					
ANR	10992893	MemberAccess	pcc -> paint . values		10992516	0					
ANR	10992894	PtrMemberAccess	pcc -> paint		10992516	0					
ANR	10992895	Identifier	pcc		10992516	0					
ANR	10992896	Identifier	paint		10992516	1					
ANR	10992897	Identifier	values		10992516	1					
ANR	10992898	PrimaryExpression	2		10992516	1					
ANR	10992899	PrimaryExpression	0		10992516	1					
ANR	10992900	ExpressionStatement	pcc -> paint . values [ 3 ] = 1	1558:20:51035:51059	10992516	5	True				
ANR	10992901	AssignmentExpression	pcc -> paint . values [ 3 ] = 1		10992516	0		=			
ANR	10992902	ArrayIndexing	pcc -> paint . values [ 3 ]		10992516	0					
ANR	10992903	MemberAccess	pcc -> paint . values		10992516	0					
ANR	10992904	PtrMemberAccess	pcc -> paint		10992516	0					
ANR	10992905	Identifier	pcc		10992516	0					
ANR	10992906	Identifier	paint		10992516	1					
ANR	10992907	Identifier	values		10992516	1					
ANR	10992908	PrimaryExpression	3		10992516	1					
ANR	10992909	PrimaryExpression	1		10992516	1					
ANR	10992910	ExpressionStatement	pcc -> pattern = 0	1559:20:51081:51097	10992516	6	True				
ANR	10992911	AssignmentExpression	pcc -> pattern = 0		10992516	0		=			
ANR	10992912	PtrMemberAccess	pcc -> pattern		10992516	0					
ANR	10992913	Identifier	pcc		10992516	0					
ANR	10992914	Identifier	pattern		10992516	1					
ANR	10992915	PrimaryExpression	0		10992516	1					
ANR	10992916	ExpressionStatement	gx_unset_dev_color ( igs )	1560:20:51133:51156	10992516	7	True				
ANR	10992917	CallExpression	gx_unset_dev_color ( igs )		10992516	0					
ANR	10992918	Callee	gx_unset_dev_color		10992516	0					
ANR	10992919	Identifier	gx_unset_dev_color		10992516	0					
ANR	10992920	ArgumentList	igs		10992516	1					
ANR	10992921	Argument	igs		10992516	0					
ANR	10992922	Identifier	igs		10992516	0					
ANR	10992923	ExpressionStatement	"rc_decrement_only_cs ( pcs , ""zsetdevcspace"" )"	1562:16:51192:51234	10992516	7	True				
ANR	10992924	CallExpression	"rc_decrement_only_cs ( pcs , ""zsetdevcspace"" )"		10992516	0					
ANR	10992925	Callee	rc_decrement_only_cs		10992516	0					
ANR	10992926	Identifier	rc_decrement_only_cs		10992516	0					
ANR	10992927	ArgumentList	pcs		10992516	1					
ANR	10992928	Argument	pcs		10992516	0					
ANR	10992929	Identifier	pcs		10992516	0					
ANR	10992930	Argument	"""zsetdevcspace"""		10992516	1					
ANR	10992931	PrimaryExpression	"""zsetdevcspace"""		10992516	0					
ANR	10992932	ExpressionStatement	* cont = 0	1563:16:51252:51261	10992516	8	True				
ANR	10992933	AssignmentExpression	* cont = 0		10992516	0		=			
ANR	10992934	UnaryOperationExpression	* cont		10992516	0					
ANR	10992935	UnaryOperator	*		10992516	0					
ANR	10992936	Identifier	cont		10992516	1					
ANR	10992937	PrimaryExpression	0		10992516	1					
ANR	10992938	ExpressionStatement	* stage = 0	1564:16:51279:51289	10992516	9	True				
ANR	10992939	AssignmentExpression	* stage = 0		10992516	0		=			
ANR	10992940	UnaryOperationExpression	* stage		10992516	0					
ANR	10992941	UnaryOperator	*		10992516	0					
ANR	10992942	Identifier	stage		10992516	1					
ANR	10992943	PrimaryExpression	0		10992516	1					
ANR	10992944	BreakStatement	break ;	1565:16:51307:51312	10992516	10	True				
ANR	10992945	Label	case 2 :	1566:12:51326:51332	10992516	11	True				
ANR	10992946	IfStatement	"if ( ! r_has_type ( op , t_boolean ) )"		10992516	12					
ANR	10992947	Condition	"! r_has_type ( op , t_boolean )"	1567:20:51354:51379	10992516	0	True				
ANR	10992948	UnaryOperationExpression	"! r_has_type ( op , t_boolean )"		10992516	0					
ANR	10992949	UnaryOperator	!		10992516	0					
ANR	10992950	CallExpression	"r_has_type ( op , t_boolean )"		10992516	1					
ANR	10992951	Callee	r_has_type		10992516	0					
ANR	10992952	Identifier	r_has_type		10992516	0					
ANR	10992953	ArgumentList	op		10992516	1					
ANR	10992954	Argument	op		10992516	0					
ANR	10992955	Identifier	op		10992516	0					
ANR	10992956	Argument	t_boolean		10992516	1					
ANR	10992957	Identifier	t_boolean		10992516	0					
ANR	10992958	ExpressionStatement	return_error ( gs_error_typecheck )	1568:20:51402:51434	10992516	1	True				
ANR	10992959	CallExpression	return_error ( gs_error_typecheck )		10992516	0					
ANR	10992960	Callee	return_error		10992516	0					
ANR	10992961	Identifier	return_error		10992516	0					
ANR	10992962	ArgumentList	gs_error_typecheck		10992516	1					
ANR	10992963	Argument	gs_error_typecheck		10992516	0					
ANR	10992964	Identifier	gs_error_typecheck		10992516	0					
ANR	10992965	IfStatement	if ( op -> value . boolval )		10992516	13					
ANR	10992966	Condition	op -> value . boolval	1569:20:51456:51472	10992516	0	True				
ANR	10992967	MemberAccess	op -> value . boolval		10992516	0					
ANR	10992968	PtrMemberAccess	op -> value		10992516	0					
ANR	10992969	Identifier	op		10992516	0					
ANR	10992970	Identifier	value		10992516	1					
ANR	10992971	Identifier	boolval		10992516	1					
ANR	10992972	CompoundStatement		69:39:2869:2869	10992516	1					
ANR	10992973	ExpressionStatement	pop ( 1 )	1573:20:51639:51645	10992516	0	True				
ANR	10992974	CallExpression	pop ( 1 )		10992516	0					
ANR	10992975	Callee	pop		10992516	0					
ANR	10992976	Identifier	pop		10992516	0					
ANR	10992977	ArgumentList	1		10992516	1					
ANR	10992978	Argument	1		10992516	0					
ANR	10992979	PrimaryExpression	1		10992516	0					
ANR	10992980	ExpressionStatement	* stage = 1	1574:20:51667:51677	10992516	1	True				
ANR	10992981	AssignmentExpression	* stage = 1		10992516	0		=			
ANR	10992982	UnaryOperationExpression	* stage		10992516	0					
ANR	10992983	UnaryOperator	*		10992516	0					
ANR	10992984	Identifier	stage		10992516	1					
ANR	10992985	PrimaryExpression	1		10992516	1					
ANR	10992986	BreakStatement	break ;	1575:20:51699:51704	10992516	2	True				
ANR	10992987	ExpressionStatement	pop ( 1 )	1577:16:51740:51746	10992516	14	True				
ANR	10992988	CallExpression	pop ( 1 )		10992516	0					
ANR	10992989	Callee	pop		10992516	0					
ANR	10992990	Identifier	pop		10992516	0					
ANR	10992991	ArgumentList	1		10992516	1					
ANR	10992992	Argument	1		10992516	0					
ANR	10992993	PrimaryExpression	1		10992516	0					
ANR	10992994	ExpressionStatement	* stage = 3	1578:16:51764:51774	10992516	15	True				
ANR	10992995	AssignmentExpression	* stage = 3		10992516	0		=			
ANR	10992996	UnaryOperationExpression	* stage		10992516	0					
ANR	10992997	UnaryOperator	*		10992516	0					
ANR	10992998	Identifier	stage		10992516	1					
ANR	10992999	PrimaryExpression	3		10992516	1					
ANR	10993000	ExpressionStatement	code = setcolorspace_nosubst ( i_ctx_p )	1579:16:51792:51829	10992516	16	True				
ANR	10993001	AssignmentExpression	code = setcolorspace_nosubst ( i_ctx_p )		10992516	0		=			
ANR	10993002	Identifier	code		10992516	0					
ANR	10993003	CallExpression	setcolorspace_nosubst ( i_ctx_p )		10992516	1					
ANR	10993004	Callee	setcolorspace_nosubst		10992516	0					
ANR	10993005	Identifier	setcolorspace_nosubst		10992516	0					
ANR	10993006	ArgumentList	i_ctx_p		10992516	1					
ANR	10993007	Argument	i_ctx_p		10992516	0					
ANR	10993008	Identifier	i_ctx_p		10992516	0					
ANR	10993009	IfStatement	if ( code != 0 )		10992516	17					
ANR	10993010	Condition	code != 0	1580:20:51851:51859	10992516	0	True				
ANR	10993011	EqualityExpression	code != 0		10992516	0		!=			
ANR	10993012	Identifier	code		10992516	0					
ANR	10993013	PrimaryExpression	0		10992516	1					
ANR	10993014	ReturnStatement	return code ;	1581:20:51882:51893	10992516	1	True				
ANR	10993015	Identifier	code		10992516	0					
ANR	10993016	BreakStatement	break ;	1582:16:51911:51916	10992516	18	True				
ANR	10993017	Label	case 3 :	1583:12:51930:51936	10992516	19	True				
ANR	10993018	ExpressionStatement	* cont = 0	1588:16:52151:52160	10992516	20	True				
ANR	10993019	AssignmentExpression	* cont = 0		10992516	0		=			
ANR	10993020	UnaryOperationExpression	* cont		10992516	0					
ANR	10993021	UnaryOperator	*		10992516	0					
ANR	10993022	Identifier	cont		10992516	1					
ANR	10993023	PrimaryExpression	0		10992516	1					
ANR	10993024	ExpressionStatement	* stage = 0	1589:16:52178:52188	10992516	21	True				
ANR	10993025	AssignmentExpression	* stage = 0		10992516	0		=			
ANR	10993026	UnaryOperationExpression	* stage		10992516	0					
ANR	10993027	UnaryOperator	*		10992516	0					
ANR	10993028	Identifier	stage		10992516	1					
ANR	10993029	PrimaryExpression	0		10992516	1					
ANR	10993030	BreakStatement	break ;	1590:16:52206:52211	10992516	22	True				
ANR	10993031	Label	case 4 :	1591:12:52225:52231	10992516	23	True				
ANR	10993032	IfStatement	"if ( ! r_has_type ( op , t_boolean ) )"		10992516	24					
ANR	10993033	Condition	"! r_has_type ( op , t_boolean )"	1598:20:52652:52677	10992516	0	True				
ANR	10993034	UnaryOperationExpression	"! r_has_type ( op , t_boolean )"		10992516	0					
ANR	10993035	UnaryOperator	!		10992516	0					
ANR	10993036	CallExpression	"r_has_type ( op , t_boolean )"		10992516	1					
ANR	10993037	Callee	r_has_type		10992516	0					
ANR	10993038	Identifier	r_has_type		10992516	0					
ANR	10993039	ArgumentList	op		10992516	1					
ANR	10993040	Argument	op		10992516	0					
ANR	10993041	Identifier	op		10992516	0					
ANR	10993042	Argument	t_boolean		10992516	1					
ANR	10993043	Identifier	t_boolean		10992516	0					
ANR	10993044	ExpressionStatement	return_error ( gs_error_typecheck )	1599:20:52700:52732	10992516	1	True				
ANR	10993045	CallExpression	return_error ( gs_error_typecheck )		10992516	0					
ANR	10993046	Callee	return_error		10992516	0					
ANR	10993047	Identifier	return_error		10992516	0					
ANR	10993048	ArgumentList	gs_error_typecheck		10992516	1					
ANR	10993049	Argument	gs_error_typecheck		10992516	0					
ANR	10993050	Identifier	gs_error_typecheck		10992516	0					
ANR	10993051	ExpressionStatement	pop ( 1 )	1600:16:52750:52756	10992516	25	True				
ANR	10993052	CallExpression	pop ( 1 )		10992516	0					
ANR	10993053	Callee	pop		10992516	0					
ANR	10993054	Identifier	pop		10992516	0					
ANR	10993055	ArgumentList	1		10992516	1					
ANR	10993056	Argument	1		10992516	0					
ANR	10993057	PrimaryExpression	1		10992516	0					
ANR	10993058	ExpressionStatement	* stage = 1	1601:16:52774:52784	10992516	26	True				
ANR	10993059	AssignmentExpression	* stage = 1		10992516	0		=			
ANR	10993060	UnaryOperationExpression	* stage		10992516	0					
ANR	10993061	UnaryOperator	*		10992516	0					
ANR	10993062	Identifier	stage		10992516	1					
ANR	10993063	PrimaryExpression	1		10992516	1					
ANR	10993064	ExpressionStatement	* cont = 1	1602:16:52802:52811	10992516	27	True				
ANR	10993065	AssignmentExpression	* cont = 1		10992516	0		=			
ANR	10993066	UnaryOperationExpression	* cont		10992516	0					
ANR	10993067	UnaryOperator	*		10992516	0					
ANR	10993068	Identifier	cont		10992516	1					
ANR	10993069	PrimaryExpression	1		10992516	1					
ANR	10993070	IfStatement	if ( op -> value . boolval )		10992516	28					
ANR	10993071	Condition	op -> value . boolval	1603:20:52833:52849	10992516	0	True				
ANR	10993072	MemberAccess	op -> value . boolval		10992516	0					
ANR	10993073	PtrMemberAccess	op -> value		10992516	0					
ANR	10993074	Identifier	op		10992516	0					
ANR	10993075	Identifier	value		10992516	1					
ANR	10993076	Identifier	boolval		10992516	1					
ANR	10993077	CompoundStatement		103:39:4246:4246	10992516	1					
ANR	10993078	ExpressionStatement	* stage = 5	1604:20:52874:52884	10992516	0	True				
ANR	10993079	AssignmentExpression	* stage = 5		10992516	0		=			
ANR	10993080	UnaryOperationExpression	* stage		10992516	0					
ANR	10993081	UnaryOperator	*		10992516	0					
ANR	10993082	Identifier	stage		10992516	1					
ANR	10993083	PrimaryExpression	5		10992516	1					
ANR	10993084	ExpressionStatement	code = setcolorspace_nosubst ( i_ctx_p )	1605:20:52906:52943	10992516	1	True				
ANR	10993085	AssignmentExpression	code = setcolorspace_nosubst ( i_ctx_p )		10992516	0		=			
ANR	10993086	Identifier	code		10992516	0					
ANR	10993087	CallExpression	setcolorspace_nosubst ( i_ctx_p )		10992516	1					
ANR	10993088	Callee	setcolorspace_nosubst		10992516	0					
ANR	10993089	Identifier	setcolorspace_nosubst		10992516	0					
ANR	10993090	ArgumentList	i_ctx_p		10992516	1					
ANR	10993091	Argument	i_ctx_p		10992516	0					
ANR	10993092	Identifier	i_ctx_p		10992516	0					
ANR	10993093	IfStatement	if ( code != 0 )		10992516	2					
ANR	10993094	Condition	code != 0	1606:24:52969:52977	10992516	0	True				
ANR	10993095	EqualityExpression	code != 0		10992516	0		!=			
ANR	10993096	Identifier	code		10992516	0					
ANR	10993097	PrimaryExpression	0		10992516	1					
ANR	10993098	ReturnStatement	return code ;	1607:24:53004:53015	10992516	1	True				
ANR	10993099	Identifier	code		10992516	0					
ANR	10993100	BreakStatement	break ;	1609:16:53051:53056	10992516	29	True				
ANR	10993101	Label	case 5 :	1610:12:53070:53076	10992516	30	True				
ANR	10993102	ExpressionStatement	* stage = 1	1615:16:53341:53351	10992516	31	True				
ANR	10993103	AssignmentExpression	* stage = 1		10992516	0		=			
ANR	10993104	UnaryOperationExpression	* stage		10992516	0					
ANR	10993105	UnaryOperator	*		10992516	0					
ANR	10993106	Identifier	stage		10992516	1					
ANR	10993107	PrimaryExpression	1		10992516	1					
ANR	10993108	ExpressionStatement	* cont = 1	1616:16:53369:53378	10992516	32	True				
ANR	10993109	AssignmentExpression	* cont = 1		10992516	0		=			
ANR	10993110	UnaryOperationExpression	* cont		10992516	0					
ANR	10993111	UnaryOperator	*		10992516	0					
ANR	10993112	Identifier	cont		10992516	1					
ANR	10993113	PrimaryExpression	1		10992516	1					
ANR	10993114	ExpressionStatement	code = zincludecolorspace ( i_ctx_p )	1617:16:53396:53430	10992516	33	True				
ANR	10993115	AssignmentExpression	code = zincludecolorspace ( i_ctx_p )		10992516	0		=			
ANR	10993116	Identifier	code		10992516	0					
ANR	10993117	CallExpression	zincludecolorspace ( i_ctx_p )		10992516	1					
ANR	10993118	Callee	zincludecolorspace		10992516	0					
ANR	10993119	Identifier	zincludecolorspace		10992516	0					
ANR	10993120	ArgumentList	i_ctx_p		10992516	1					
ANR	10993121	Argument	i_ctx_p		10992516	0					
ANR	10993122	Identifier	i_ctx_p		10992516	0					
ANR	10993123	IfStatement	if ( code != 0 )		10992516	34					
ANR	10993124	Condition	code != 0	1618:20:53452:53460	10992516	0	True				
ANR	10993125	EqualityExpression	code != 0		10992516	0		!=			
ANR	10993126	Identifier	code		10992516	0					
ANR	10993127	PrimaryExpression	0		10992516	1					
ANR	10993128	ReturnStatement	return code ;	1619:20:53483:53494	10992516	1	True				
ANR	10993129	Identifier	code		10992516	0					
ANR	10993130	BreakStatement	break ;	1620:16:53512:53517	10992516	35	True				
ANR	10993131	Condition	* stage	1622:13:53542:53547	10992516	1	True				
ANR	10993132	UnaryOperationExpression	* stage		10992516	0					
ANR	10993133	UnaryOperator	*		10992516	0					
ANR	10993134	Identifier	stage		10992516	1					
ANR	10993135	ReturnStatement	return code ;	1623:4:53555:53566	10992516	5	True				
ANR	10993136	Identifier	code		10992516	0					
ANR	10993137	ReturnType	static int		10992516	1					
ANR	10993138	Identifier	setcmykspace		10992516	2					
ANR	10993139	ParameterList	"i_ctx_t * i_ctx_p , ref * r , int * stage , int * cont , int CIESubst"		10992516	3					
ANR	10993140	Parameter	i_ctx_t * i_ctx_p	1500:24:48541:48557	10992516	0	True				
ANR	10993141	ParameterType	i_ctx_t *		10992516	0					
ANR	10993142	Identifier	i_ctx_p		10992516	1					
ANR	10993143	Parameter	ref * r	1500:43:48560:48565	10992516	1	True				
ANR	10993144	ParameterType	ref *		10992516	0					
ANR	10993145	Identifier	r		10992516	1					
ANR	10993146	Parameter	int * stage	1500:51:48568:48577	10992516	2	True				
ANR	10993147	ParameterType	int *		10992516	0					
ANR	10993148	Identifier	stage		10992516	1					
ANR	10993149	Parameter	int * cont	1500:63:48580:48588	10992516	3	True				
ANR	10993150	ParameterType	int *		10992516	0					
ANR	10993151	Identifier	cont		10992516	1					
ANR	10993152	Parameter	int CIESubst	1500:74:48591:48602	10992516	4	True				
ANR	10993153	ParameterType	int		10992516	0					
ANR	10993154	Identifier	CIESubst		10992516	1					
ANR	10993155	CFGEntryNode	ENTRY		10992516		True				
ANR	10993156	CFGExitNode	EXIT		10992516		True				
ANR	10993157	Symbol	esp		10992516						
ANR	10993158	Symbol	* op		10992516						
ANR	10993159	Symbol	pcc -> pattern		10992516						
ANR	10993160	Symbol	body		10992516						
ANR	10993161	Symbol	op -> value . boolval		10992516						
ANR	10993162	Symbol	osp		10992516						
ANR	10993163	Symbol	* istate		10992516						
ANR	10993164	Symbol	r_has_type		10992516						
ANR	10993165	Symbol	igs		10992516						
ANR	10993166	Symbol	pcc -> paint		10992516						
ANR	10993167	Symbol	stref		10992516						
ANR	10993168	Symbol	* pcc -> paint		10992516						
ANR	10993169	Symbol	imemory		10992516						
ANR	10993170	Symbol	cont		10992516						
ANR	10993171	Symbol	NULL		10992516						
ANR	10993172	Symbol	dict_find_string		10992516						
ANR	10993173	Symbol	* * pcc		10992516						
ANR	10993174	Symbol	istate -> use_cie_color . value		10992516						
ANR	10993175	Symbol	t_boolean		10992516						
ANR	10993176	Symbol	zincludecolorspace		10992516						
ANR	10993177	Symbol	i_ctx_p		10992516						
ANR	10993178	Symbol	& nosubst		10992516						
ANR	10993179	Symbol	a_executable		10992516						
ANR	10993180	Symbol	gs_currentcolor_inline		10992516						
ANR	10993181	Symbol	* pcc		10992516						
ANR	10993182	Symbol	systemdict		10992516						
ANR	10993183	Symbol	gs_cspace_new_DeviceCMYK		10992516						
ANR	10993184	Symbol	* pcc -> paint . values		10992516						
ANR	10993185	Symbol	a_all		10992516						
ANR	10993186	Symbol	code		10992516						
ANR	10993187	Symbol	* nosubst		10992516						
ANR	10993188	Symbol	& stref		10992516						
ANR	10993189	Symbol	gs_setcolorspace		10992516						
ANR	10993190	Symbol	istate -> use_cie_color . value . boolval		10992516						
ANR	10993191	Symbol	ialloc_string		10992516						
ANR	10993192	Symbol	pcc -> paint . values		10992516						
ANR	10993193	Symbol	pcc		10992516						
ANR	10993194	Symbol	gs_error_typecheck		10992516						
ANR	10993195	Symbol	op -> value		10992516						
ANR	10993196	Symbol	CIESubst		10992516						
ANR	10993197	Symbol	nosubst -> value . boolval		10992516						
ANR	10993198	Symbol	o_push_estack		10992516						
ANR	10993199	Symbol	op		10992516						
ANR	10993200	Symbol	pcs		10992516						
ANR	10993201	Symbol	nosubst		10992516						
ANR	10993202	Symbol	* stage		10992516						
ANR	10993203	Symbol	nosubst -> value		10992516						
ANR	10993204	Symbol	icurrent_space		10992516						
ANR	10993205	Symbol	gs_error_VMerror		10992516						
ANR	10993206	Symbol	r		10992516						
ANR	10993207	Symbol	stage		10992516						
ANR	10993208	Symbol	istate -> use_cie_color		10992516						
ANR	10993209	Symbol	* cont		10992516						
ANR	10993210	Symbol	setcolorspace_nosubst		10992516						
ANR	10993211	Symbol	istate		10992516						
ANR	10993212	Function	cmykdomain	1625:0:53570:53740							
ANR	10993213	FunctionDef	"cmykdomain (i_ctx_t * i_ctx_p , ref * space , float * ptr)"		10993212	0					
ANR	10993214	CompoundStatement		1626:0:53635:53740	10993212	0					
ANR	10993215	IdentifierDeclStatement	int i ;	1627:4:53641:53646	10993212	0	True				
ANR	10993216	IdentifierDecl	i		10993212	0					
ANR	10993217	IdentifierDeclType	int		10993212	0					
ANR	10993218	Identifier	i		10993212	1					
ANR	10993219	ForStatement	for ( i = 0 ; i < 8 ; i += 2 )		10993212	1					
ANR	10993220	ForInit	i = 0 ;	1629:9:53658:53663	10993212	0	True				
ANR	10993221	AssignmentExpression	i = 0		10993212	0		=			
ANR	10993222	Identifier	i		10993212	0					
ANR	10993223	PrimaryExpression	0		10993212	1					
ANR	10993224	Condition	i < 8	1629:15:53664:53668	10993212	1	True				
ANR	10993225	RelationalExpression	i < 8		10993212	0		<			
ANR	10993226	Identifier	i		10993212	0					
ANR	10993227	PrimaryExpression	8		10993212	1					
ANR	10993228	AssignmentExpression	i += 2	1629:21:53670:53673	10993212	2	True	+=			
ANR	10993229	Identifier	i		10993212	0					
ANR	10993230	PrimaryExpression	2		10993212	1					
ANR	10993231	CompoundStatement		4:27:40:40	10993212	3					
ANR	10993232	ExpressionStatement	ptr [ i ] = 0	1630:8:53686:53696	10993212	0	True				
ANR	10993233	AssignmentExpression	ptr [ i ] = 0		10993212	0		=			
ANR	10993234	ArrayIndexing	ptr [ i ]		10993212	0					
ANR	10993235	Identifier	ptr		10993212	0					
ANR	10993236	Identifier	i		10993212	1					
ANR	10993237	PrimaryExpression	0		10993212	1					
ANR	10993238	ExpressionStatement	ptr [ i + 1 ] = 1	1631:8:53706:53718	10993212	1	True				
ANR	10993239	AssignmentExpression	ptr [ i + 1 ] = 1		10993212	0		=			
ANR	10993240	ArrayIndexing	ptr [ i + 1 ]		10993212	0					
ANR	10993241	Identifier	ptr		10993212	0					
ANR	10993242	AdditiveExpression	i + 1		10993212	1		+			
ANR	10993243	Identifier	i		10993212	0					
ANR	10993244	PrimaryExpression	1		10993212	1					
ANR	10993245	PrimaryExpression	1		10993212	1					
ANR	10993246	ReturnStatement	return 0 ;	1633:4:53730:53738	10993212	2	True				
ANR	10993247	PrimaryExpression	0		10993212	0					
ANR	10993248	ReturnType	static int		10993212	1					
ANR	10993249	Identifier	cmykdomain		10993212	2					
ANR	10993250	ParameterList	"i_ctx_t * i_ctx_p , ref * space , float * ptr"		10993212	3					
ANR	10993251	Parameter	i_ctx_t * i_ctx_p	1625:22:53592:53608	10993212	0	True				
ANR	10993252	ParameterType	i_ctx_t *		10993212	0					
ANR	10993253	Identifier	i_ctx_p		10993212	1					
ANR	10993254	Parameter	ref * space	1625:41:53611:53620	10993212	1	True				
ANR	10993255	ParameterType	ref *		10993212	0					
ANR	10993256	Identifier	space		10993212	1					
ANR	10993257	Parameter	float * ptr	1625:53:53623:53632	10993212	2	True				
ANR	10993258	ParameterType	float *		10993212	0					
ANR	10993259	Identifier	ptr		10993212	1					
ANR	10993260	CFGEntryNode	ENTRY		10993212		True				
ANR	10993261	CFGExitNode	EXIT		10993212		True				
ANR	10993262	Symbol	* i		10993212						
ANR	10993263	Symbol	i_ctx_p		10993212						
ANR	10993264	Symbol	* ptr		10993212						
ANR	10993265	Symbol	i		10993212						
ANR	10993266	Symbol	space		10993212						
ANR	10993267	Symbol	ptr		10993212						
ANR	10993268	Function	cmykrange	1635:0:53742:53911							
ANR	10993269	FunctionDef	"cmykrange (i_ctx_t * i_ctx_p , ref * space , float * ptr)"		10993268	0					
ANR	10993270	CompoundStatement		1636:0:53806:53911	10993268	0					
ANR	10993271	IdentifierDeclStatement	int i ;	1637:4:53812:53817	10993268	0	True				
ANR	10993272	IdentifierDecl	i		10993268	0					
ANR	10993273	IdentifierDeclType	int		10993268	0					
ANR	10993274	Identifier	i		10993268	1					
ANR	10993275	ForStatement	for ( i = 0 ; i < 8 ; i += 2 )		10993268	1					
ANR	10993276	ForInit	i = 0 ;	1639:9:53829:53834	10993268	0	True				
ANR	10993277	AssignmentExpression	i = 0		10993268	0		=			
ANR	10993278	Identifier	i		10993268	0					
ANR	10993279	PrimaryExpression	0		10993268	1					
ANR	10993280	Condition	i < 8	1639:15:53835:53839	10993268	1	True				
ANR	10993281	RelationalExpression	i < 8		10993268	0		<			
ANR	10993282	Identifier	i		10993268	0					
ANR	10993283	PrimaryExpression	8		10993268	1					
ANR	10993284	AssignmentExpression	i += 2	1639:21:53841:53844	10993268	2	True	+=			
ANR	10993285	Identifier	i		10993268	0					
ANR	10993286	PrimaryExpression	2		10993268	1					
ANR	10993287	CompoundStatement		4:27:40:40	10993268	3					
ANR	10993288	ExpressionStatement	ptr [ i ] = 0	1640:8:53857:53867	10993268	0	True				
ANR	10993289	AssignmentExpression	ptr [ i ] = 0		10993268	0		=			
ANR	10993290	ArrayIndexing	ptr [ i ]		10993268	0					
ANR	10993291	Identifier	ptr		10993268	0					
ANR	10993292	Identifier	i		10993268	1					
ANR	10993293	PrimaryExpression	0		10993268	1					
ANR	10993294	ExpressionStatement	ptr [ i + 1 ] = 1	1641:8:53877:53889	10993268	1	True				
ANR	10993295	AssignmentExpression	ptr [ i + 1 ] = 1		10993268	0		=			
ANR	10993296	ArrayIndexing	ptr [ i + 1 ]		10993268	0					
ANR	10993297	Identifier	ptr		10993268	0					
ANR	10993298	AdditiveExpression	i + 1		10993268	1		+			
ANR	10993299	Identifier	i		10993268	0					
ANR	10993300	PrimaryExpression	1		10993268	1					
ANR	10993301	PrimaryExpression	1		10993268	1					
ANR	10993302	ReturnStatement	return 0 ;	1643:4:53901:53909	10993268	2	True				
ANR	10993303	PrimaryExpression	0		10993268	0					
ANR	10993304	ReturnType	static int		10993268	1					
ANR	10993305	Identifier	cmykrange		10993268	2					
ANR	10993306	ParameterList	"i_ctx_t * i_ctx_p , ref * space , float * ptr"		10993268	3					
ANR	10993307	Parameter	i_ctx_t * i_ctx_p	1635:21:53763:53779	10993268	0	True				
ANR	10993308	ParameterType	i_ctx_t *		10993268	0					
ANR	10993309	Identifier	i_ctx_p		10993268	1					
ANR	10993310	Parameter	ref * space	1635:40:53782:53791	10993268	1	True				
ANR	10993311	ParameterType	ref *		10993268	0					
ANR	10993312	Identifier	space		10993268	1					
ANR	10993313	Parameter	float * ptr	1635:52:53794:53803	10993268	2	True				
ANR	10993314	ParameterType	float *		10993268	0					
ANR	10993315	Identifier	ptr		10993268	1					
ANR	10993316	CFGEntryNode	ENTRY		10993268		True				
ANR	10993317	CFGExitNode	EXIT		10993268		True				
ANR	10993318	Symbol	* i		10993268						
ANR	10993319	Symbol	i_ctx_p		10993268						
ANR	10993320	Symbol	* ptr		10993268						
ANR	10993321	Symbol	i		10993268						
ANR	10993322	Symbol	space		10993268						
ANR	10993323	Symbol	ptr		10993268						
ANR	10993324	Function	cmykbasecolor	1651:0:54272:56857							
ANR	10993325	FunctionDef	"cmykbasecolor (i_ctx_t * i_ctx_p , ref * space , int base , int * stage , int * cont , int * stack_depth)"		10993324	0					
ANR	10993326	CompoundStatement		1652:0:54379:56857	10993324	0					
ANR	10993327	IdentifierDeclStatement	os_ptr op = osp ;	1653:4:54385:54400	10993324	0	True				
ANR	10993328	IdentifierDecl	op = osp		10993324	0					
ANR	10993329	IdentifierDeclType	os_ptr		10993324	0					
ANR	10993330	Identifier	op		10993324	1					
ANR	10993331	AssignmentExpression	op = osp		10993324	2		=			
ANR	10993332	Identifier	osp		10993324	0					
ANR	10993333	Identifier	osp		10993324	1					
ANR	10993334	IdentifierDeclStatement	"float CMYK [ 4 ] , Gray , RGB [ 3 ] ;"	1654:4:54406:54433	10993324	1	True				
ANR	10993335	IdentifierDecl	CMYK [ 4 ]		10993324	0					
ANR	10993336	IdentifierDeclType	float [ 4 ]		10993324	0					
ANR	10993337	Identifier	CMYK		10993324	1					
ANR	10993338	PrimaryExpression	4		10993324	2					
ANR	10993339	IdentifierDecl	Gray		10993324	1					
ANR	10993340	IdentifierDeclType	float		10993324	0					
ANR	10993341	Identifier	Gray		10993324	1					
ANR	10993342	IdentifierDecl	RGB [ 3 ]		10993324	2					
ANR	10993343	IdentifierDeclType	float [ 3 ]		10993324	0					
ANR	10993344	Identifier	RGB		10993324	1					
ANR	10993345	PrimaryExpression	3		10993324	2					
ANR	10993346	IdentifierDeclStatement	int i ;	1655:4:54439:54444	10993324	2	True				
ANR	10993347	IdentifierDecl	i		10993324	0					
ANR	10993348	IdentifierDeclType	int		10993324	0					
ANR	10993349	Identifier	i		10993324	1					
ANR	10993350	IdentifierDeclStatement	const gs_color_space * pcs = gs_currentcolorspace ( igs ) ;	1656:4:54450:54505	10993324	3	True				
ANR	10993351	IdentifierDecl	* pcs = gs_currentcolorspace ( igs )		10993324	0					
ANR	10993352	IdentifierDeclType	const gs_color_space *		10993324	0					
ANR	10993353	Identifier	pcs		10993324	1					
ANR	10993354	AssignmentExpression	* pcs = gs_currentcolorspace ( igs )		10993324	2		=			
ANR	10993355	Identifier	pcs		10993324	0					
ANR	10993356	CallExpression	gs_currentcolorspace ( igs )		10993324	1					
ANR	10993357	Callee	gs_currentcolorspace		10993324	0					
ANR	10993358	Identifier	gs_currentcolorspace		10993324	0					
ANR	10993359	ArgumentList	igs		10993324	1					
ANR	10993360	Argument	igs		10993324	0					
ANR	10993361	Identifier	igs		10993324	0					
ANR	10993362	IfStatement	if ( pcs -> id == cs_DeviceGray_id )		10993324	4					
ANR	10993363	Condition	pcs -> id == cs_DeviceGray_id	1658:8:54516:54542	10993324	0	True				
ANR	10993364	EqualityExpression	pcs -> id == cs_DeviceGray_id		10993324	0		==			
ANR	10993365	PtrMemberAccess	pcs -> id		10993324	0					
ANR	10993366	Identifier	pcs		10993324	0					
ANR	10993367	Identifier	id		10993324	1					
ANR	10993368	Identifier	cs_DeviceGray_id		10993324	1					
ANR	10993369	CompoundStatement		7:37:165:165	10993324	1					
ANR	10993370	ReturnStatement	"return ( graybasecolor ( i_ctx_p , space , base , stage , cont , stack_depth ) ) ;"	1668:8:55120:55189	10993324	0	True				
ANR	10993371	CallExpression	"graybasecolor ( i_ctx_p , space , base , stage , cont , stack_depth )"		10993324	0					
ANR	10993372	Callee	graybasecolor		10993324	0					
ANR	10993373	Identifier	graybasecolor		10993324	0					
ANR	10993374	ArgumentList	i_ctx_p		10993324	1					
ANR	10993375	Argument	i_ctx_p		10993324	0					
ANR	10993376	Identifier	i_ctx_p		10993324	0					
ANR	10993377	Argument	space		10993324	1					
ANR	10993378	Identifier	space		10993324	0					
ANR	10993379	Argument	base		10993324	2					
ANR	10993380	Identifier	base		10993324	0					
ANR	10993381	Argument	stage		10993324	3					
ANR	10993382	Identifier	stage		10993324	0					
ANR	10993383	Argument	cont		10993324	4					
ANR	10993384	Identifier	cont		10993324	0					
ANR	10993385	Argument	stack_depth		10993324	5					
ANR	10993386	Identifier	stack_depth		10993324	0					
ANR	10993387	ExpressionStatement	* cont = 0	1671:4:55202:55211	10993324	5	True				
ANR	10993388	AssignmentExpression	* cont = 0		10993324	0		=			
ANR	10993389	UnaryOperationExpression	* cont		10993324	0					
ANR	10993390	UnaryOperator	*		10993324	0					
ANR	10993391	Identifier	cont		10993324	1					
ANR	10993392	PrimaryExpression	0		10993324	1					
ANR	10993393	ExpressionStatement	* stage = 0	1672:4:55217:55227	10993324	6	True				
ANR	10993394	AssignmentExpression	* stage = 0		10993324	0		=			
ANR	10993395	UnaryOperationExpression	* stage		10993324	0					
ANR	10993396	UnaryOperator	*		10993324	0					
ANR	10993397	Identifier	stage		10993324	1					
ANR	10993398	PrimaryExpression	0		10993324	1					
ANR	10993399	ExpressionStatement	check_op ( 4 )	1673:4:55233:55244	10993324	7	True				
ANR	10993400	CallExpression	check_op ( 4 )		10993324	0					
ANR	10993401	Callee	check_op		10993324	0					
ANR	10993402	Identifier	check_op		10993324	0					
ANR	10993403	ArgumentList	4		10993324	1					
ANR	10993404	Argument	4		10993324	0					
ANR	10993405	PrimaryExpression	4		10993324	0					
ANR	10993406	ExpressionStatement	op -= 3	1674:4:55250:55257	10993324	8	True				
ANR	10993407	AssignmentExpression	op -= 3		10993324	0		-=			
ANR	10993408	Identifier	op		10993324	0					
ANR	10993409	PrimaryExpression	3		10993324	1					
ANR	10993410	ForStatement	for ( i = 0 ; i < 4 ; i ++ )		10993324	9					
ANR	10993411	ForInit	i = 0 ;	1675:9:55268:55271	10993324	0	True				
ANR	10993412	AssignmentExpression	i = 0		10993324	0		=			
ANR	10993413	Identifier	i		10993324	0					
ANR	10993414	PrimaryExpression	0		10993324	1					
ANR	10993415	Condition	i < 4	1675:13:55272:55274	10993324	1	True				
ANR	10993416	RelationalExpression	i < 4		10993324	0		<			
ANR	10993417	Identifier	i		10993324	0					
ANR	10993418	PrimaryExpression	4		10993324	1					
ANR	10993419	PostIncDecOperationExpression	i ++	1675:17:55276:55278	10993324	2	True				
ANR	10993420	Identifier	i		10993324	0					
ANR	10993421	IncDec	++		10993324	1					
ANR	10993422	CompoundStatement		24:22:901:901	10993324	3					
ANR	10993423	IfStatement	"if ( ! r_has_type ( op , t_integer ) )"		10993324	0					
ANR	10993424	Condition	"! r_has_type ( op , t_integer )"	1676:12:55295:55320	10993324	0	True				
ANR	10993425	UnaryOperationExpression	"! r_has_type ( op , t_integer )"		10993324	0					
ANR	10993426	UnaryOperator	!		10993324	0					
ANR	10993427	CallExpression	"r_has_type ( op , t_integer )"		10993324	1					
ANR	10993428	Callee	r_has_type		10993324	0					
ANR	10993429	Identifier	r_has_type		10993324	0					
ANR	10993430	ArgumentList	op		10993324	1					
ANR	10993431	Argument	op		10993324	0					
ANR	10993432	Identifier	op		10993324	0					
ANR	10993433	Argument	t_integer		10993324	1					
ANR	10993434	Identifier	t_integer		10993324	0					
ANR	10993435	CompoundStatement		25:40:943:943	10993324	1					
ANR	10993436	IfStatement	"if ( r_has_type ( op , t_real ) )"		10993324	0					
ANR	10993437	Condition	"r_has_type ( op , t_real )"	1677:16:55341:55362	10993324	0	True				
ANR	10993438	CallExpression	"r_has_type ( op , t_real )"		10993324	0					
ANR	10993439	Callee	r_has_type		10993324	0					
ANR	10993440	Identifier	r_has_type		10993324	0					
ANR	10993441	ArgumentList	op		10993324	1					
ANR	10993442	Argument	op		10993324	0					
ANR	10993443	Identifier	op		10993324	0					
ANR	10993444	Argument	t_real		10993324	1					
ANR	10993445	Identifier	t_real		10993324	0					
ANR	10993446	CompoundStatement		26:40:985:985	10993324	1					
ANR	10993447	ExpressionStatement	CMYK [ i ] = op -> value . realval	1678:16:55383:55410	10993324	0	True				
ANR	10993448	AssignmentExpression	CMYK [ i ] = op -> value . realval		10993324	0		=			
ANR	10993449	ArrayIndexing	CMYK [ i ]		10993324	0					
ANR	10993450	Identifier	CMYK		10993324	0					
ANR	10993451	Identifier	i		10993324	1					
ANR	10993452	MemberAccess	op -> value . realval		10993324	1					
ANR	10993453	PtrMemberAccess	op -> value		10993324	0					
ANR	10993454	Identifier	op		10993324	0					
ANR	10993455	Identifier	value		10993324	1					
ANR	10993456	Identifier	realval		10993324	1					
ANR	10993457	ElseStatement	else		10993324	0					
ANR	10993458	ExpressionStatement	return_error ( gs_error_typecheck )	1680:16:55447:55479	10993324	0	True				
ANR	10993459	CallExpression	return_error ( gs_error_typecheck )		10993324	0					
ANR	10993460	Callee	return_error		10993324	0					
ANR	10993461	Identifier	return_error		10993324	0					
ANR	10993462	ArgumentList	gs_error_typecheck		10993324	1					
ANR	10993463	Argument	gs_error_typecheck		10993324	0					
ANR	10993464	Identifier	gs_error_typecheck		10993324	0					
ANR	10993465	ElseStatement	else		10993324	0					
ANR	10993466	ExpressionStatement	CMYK [ i ] = ( float ) op -> value . intval	1682:12:55508:55541	10993324	0	True				
ANR	10993467	AssignmentExpression	CMYK [ i ] = ( float ) op -> value . intval		10993324	0		=			
ANR	10993468	ArrayIndexing	CMYK [ i ]		10993324	0					
ANR	10993469	Identifier	CMYK		10993324	0					
ANR	10993470	Identifier	i		10993324	1					
ANR	10993471	CastExpression	( float ) op -> value . intval		10993324	1					
ANR	10993472	CastTarget	float		10993324	0					
ANR	10993473	MemberAccess	op -> value . intval		10993324	1					
ANR	10993474	PtrMemberAccess	op -> value		10993324	0					
ANR	10993475	Identifier	op		10993324	0					
ANR	10993476	Identifier	value		10993324	1					
ANR	10993477	Identifier	intval		10993324	1					
ANR	10993478	IfStatement	if ( CMYK [ i ] < 0 || CMYK [ i ] > 1 )		10993324	1					
ANR	10993479	Condition	CMYK [ i ] < 0 || CMYK [ i ] > 1	1683:12:55555:55580	10993324	0	True				
ANR	10993480	OrExpression	CMYK [ i ] < 0 || CMYK [ i ] > 1		10993324	0		||			
ANR	10993481	RelationalExpression	CMYK [ i ] < 0		10993324	0		<			
ANR	10993482	ArrayIndexing	CMYK [ i ]		10993324	0					
ANR	10993483	Identifier	CMYK		10993324	0					
ANR	10993484	Identifier	i		10993324	1					
ANR	10993485	PrimaryExpression	0		10993324	1					
ANR	10993486	RelationalExpression	CMYK [ i ] > 1		10993324	1		>			
ANR	10993487	ArrayIndexing	CMYK [ i ]		10993324	0					
ANR	10993488	Identifier	CMYK		10993324	0					
ANR	10993489	Identifier	i		10993324	1					
ANR	10993490	PrimaryExpression	1		10993324	1					
ANR	10993491	ExpressionStatement	return_error ( gs_error_rangecheck )	1684:12:55595:55628	10993324	1	True				
ANR	10993492	CallExpression	return_error ( gs_error_rangecheck )		10993324	0					
ANR	10993493	Callee	return_error		10993324	0					
ANR	10993494	Identifier	return_error		10993324	0					
ANR	10993495	ArgumentList	gs_error_rangecheck		10993324	1					
ANR	10993496	Argument	gs_error_rangecheck		10993324	0					
ANR	10993497	Identifier	gs_error_rangecheck		10993324	0					
ANR	10993498	ExpressionStatement	op ++	1685:8:55638:55642	10993324	2	True				
ANR	10993499	PostIncDecOperationExpression	op ++		10993324	0					
ANR	10993500	Identifier	op		10993324	0					
ANR	10993501	IncDec	++		10993324	1					
ANR	10993502	SwitchStatement	switch ( base )		10993324	10					
ANR	10993503	Condition	base	1688:12:55663:55666	10993324	0	True				
ANR	10993504	Identifier	base		10993324	0					
ANR	10993505	CompoundStatement		37:18:1289:1289	10993324	1					
ANR	10993506	Label	case 0 :	1689:8:55679:55685	10993324	0	True				
ANR	10993507	ExpressionStatement	pop ( 3 )	1690:12:55699:55705	10993324	1	True				
ANR	10993508	CallExpression	pop ( 3 )		10993324	0					
ANR	10993509	Callee	pop		10993324	0					
ANR	10993510	Identifier	pop		10993324	0					
ANR	10993511	ArgumentList	3		10993324	1					
ANR	10993512	Argument	3		10993324	0					
ANR	10993513	PrimaryExpression	3		10993324	0					
ANR	10993514	ExpressionStatement	op = osp	1691:12:55719:55727	10993324	2	True				
ANR	10993515	AssignmentExpression	op = osp		10993324	0		=			
ANR	10993516	Identifier	op		10993324	0					
ANR	10993517	Identifier	osp		10993324	1					
ANR	10993518	ExpressionStatement	Gray = ( 0.3 * CMYK [ 0 ] ) + ( 0.59 * CMYK [ 1 ] ) + ( 0.11 * CMYK [ 2 ] ) + CMYK [ 3 ]	1692:12:55741:55811	10993324	3	True				
ANR	10993519	AssignmentExpression	Gray = ( 0.3 * CMYK [ 0 ] ) + ( 0.59 * CMYK [ 1 ] ) + ( 0.11 * CMYK [ 2 ] ) + CMYK [ 3 ]		10993324	0		=			
ANR	10993520	Identifier	Gray		10993324	0					
ANR	10993521	AdditiveExpression	( 0.3 * CMYK [ 0 ] ) + ( 0.59 * CMYK [ 1 ] ) + ( 0.11 * CMYK [ 2 ] ) + CMYK [ 3 ]		10993324	1		+			
ANR	10993522	MultiplicativeExpression	0.3 * CMYK [ 0 ]		10993324	0		*			
ANR	10993523	PrimaryExpression	0.3		10993324	0					
ANR	10993524	ArrayIndexing	CMYK [ 0 ]		10993324	1					
ANR	10993525	Identifier	CMYK		10993324	0					
ANR	10993526	PrimaryExpression	0		10993324	1					
ANR	10993527	AdditiveExpression	( 0.59 * CMYK [ 1 ] ) + ( 0.11 * CMYK [ 2 ] ) + CMYK [ 3 ]		10993324	1		+			
ANR	10993528	MultiplicativeExpression	0.59 * CMYK [ 1 ]		10993324	0		*			
ANR	10993529	PrimaryExpression	0.59		10993324	0					
ANR	10993530	ArrayIndexing	CMYK [ 1 ]		10993324	1					
ANR	10993531	Identifier	CMYK		10993324	0					
ANR	10993532	PrimaryExpression	1		10993324	1					
ANR	10993533	AdditiveExpression	( 0.11 * CMYK [ 2 ] ) + CMYK [ 3 ]		10993324	1		+			
ANR	10993534	MultiplicativeExpression	0.11 * CMYK [ 2 ]		10993324	0		*			
ANR	10993535	PrimaryExpression	0.11		10993324	0					
ANR	10993536	ArrayIndexing	CMYK [ 2 ]		10993324	1					
ANR	10993537	Identifier	CMYK		10993324	0					
ANR	10993538	PrimaryExpression	2		10993324	1					
ANR	10993539	ArrayIndexing	CMYK [ 3 ]		10993324	1					
ANR	10993540	Identifier	CMYK		10993324	0					
ANR	10993541	PrimaryExpression	3		10993324	1					
ANR	10993542	IfStatement	if ( Gray > 1.0 )		10993324	4					
ANR	10993543	Condition	Gray > 1.0	1693:16:55829:55838	10993324	0	True				
ANR	10993544	RelationalExpression	Gray > 1.0		10993324	0		>			
ANR	10993545	Identifier	Gray		10993324	0					
ANR	10993546	PrimaryExpression	1.0		10993324	1					
ANR	10993547	ExpressionStatement	Gray = 0	1694:16:55857:55865	10993324	1	True				
ANR	10993548	AssignmentExpression	Gray = 0		10993324	0		=			
ANR	10993549	Identifier	Gray		10993324	0					
ANR	10993550	PrimaryExpression	0		10993324	1					
ANR	10993551	ElseStatement	else		10993324	0					
ANR	10993552	ExpressionStatement	Gray = 1.0 - Gray	1696:16:55900:55917	10993324	0	True				
ANR	10993553	AssignmentExpression	Gray = 1.0 - Gray		10993324	0		=			
ANR	10993554	Identifier	Gray		10993324	0					
ANR	10993555	AdditiveExpression	1.0 - Gray		10993324	1		-			
ANR	10993556	PrimaryExpression	1.0		10993324	0					
ANR	10993557	Identifier	Gray		10993324	1					
ANR	10993558	ExpressionStatement	"make_real ( op , Gray )"	1697:12:55931:55950	10993324	5	True				
ANR	10993559	CallExpression	"make_real ( op , Gray )"		10993324	0					
ANR	10993560	Callee	make_real		10993324	0					
ANR	10993561	Identifier	make_real		10993324	0					
ANR	10993562	ArgumentList	op		10993324	1					
ANR	10993563	Argument	op		10993324	0					
ANR	10993564	Identifier	op		10993324	0					
ANR	10993565	Argument	Gray		10993324	1					
ANR	10993566	Identifier	Gray		10993324	0					
ANR	10993567	BreakStatement	break ;	1698:12:55964:55969	10993324	6	True				
ANR	10993568	Label	case 1 :	1699:8:55979:55985	10993324	7	True				
ANR	10993569	Label	case 2 :	1700:8:55995:56001	10993324	8	True				
ANR	10993570	ExpressionStatement	pop ( 1 )	1701:12:56015:56021	10993324	9	True				
ANR	10993571	CallExpression	pop ( 1 )		10993324	0					
ANR	10993572	Callee	pop		10993324	0					
ANR	10993573	Identifier	pop		10993324	0					
ANR	10993574	ArgumentList	1		10993324	1					
ANR	10993575	Argument	1		10993324	0					
ANR	10993576	PrimaryExpression	1		10993324	0					
ANR	10993577	ExpressionStatement	op = osp	1702:12:56035:56043	10993324	10	True				
ANR	10993578	AssignmentExpression	op = osp		10993324	0		=			
ANR	10993579	Identifier	op		10993324	0					
ANR	10993580	Identifier	osp		10993324	1					
ANR	10993581	ExpressionStatement	RGB [ 0 ] = 1.0 - ( CMYK [ 0 ] + CMYK [ 3 ] )	1703:12:56057:56091	10993324	11	True				
ANR	10993582	AssignmentExpression	RGB [ 0 ] = 1.0 - ( CMYK [ 0 ] + CMYK [ 3 ] )		10993324	0		=			
ANR	10993583	ArrayIndexing	RGB [ 0 ]		10993324	0					
ANR	10993584	Identifier	RGB		10993324	0					
ANR	10993585	PrimaryExpression	0		10993324	1					
ANR	10993586	AdditiveExpression	1.0 - ( CMYK [ 0 ] + CMYK [ 3 ] )		10993324	1		-			
ANR	10993587	PrimaryExpression	1.0		10993324	0					
ANR	10993588	AdditiveExpression	CMYK [ 0 ] + CMYK [ 3 ]		10993324	1		+			
ANR	10993589	ArrayIndexing	CMYK [ 0 ]		10993324	0					
ANR	10993590	Identifier	CMYK		10993324	0					
ANR	10993591	PrimaryExpression	0		10993324	1					
ANR	10993592	ArrayIndexing	CMYK [ 3 ]		10993324	1					
ANR	10993593	Identifier	CMYK		10993324	0					
ANR	10993594	PrimaryExpression	3		10993324	1					
ANR	10993595	IfStatement	if ( RGB [ 0 ] < 0 )		10993324	12					
ANR	10993596	Condition	RGB [ 0 ] < 0	1704:16:56109:56118	10993324	0	True				
ANR	10993597	RelationalExpression	RGB [ 0 ] < 0		10993324	0		<			
ANR	10993598	ArrayIndexing	RGB [ 0 ]		10993324	0					
ANR	10993599	Identifier	RGB		10993324	0					
ANR	10993600	PrimaryExpression	0		10993324	1					
ANR	10993601	PrimaryExpression	0		10993324	1					
ANR	10993602	ExpressionStatement	RGB [ 0 ] = 0	1705:16:56137:56147	10993324	1	True				
ANR	10993603	AssignmentExpression	RGB [ 0 ] = 0		10993324	0		=			
ANR	10993604	ArrayIndexing	RGB [ 0 ]		10993324	0					
ANR	10993605	Identifier	RGB		10993324	0					
ANR	10993606	PrimaryExpression	0		10993324	1					
ANR	10993607	PrimaryExpression	0		10993324	1					
ANR	10993608	ExpressionStatement	RGB [ 1 ] = 1.0 - ( CMYK [ 1 ] + CMYK [ 3 ] )	1706:12:56161:56195	10993324	13	True				
ANR	10993609	AssignmentExpression	RGB [ 1 ] = 1.0 - ( CMYK [ 1 ] + CMYK [ 3 ] )		10993324	0		=			
ANR	10993610	ArrayIndexing	RGB [ 1 ]		10993324	0					
ANR	10993611	Identifier	RGB		10993324	0					
ANR	10993612	PrimaryExpression	1		10993324	1					
ANR	10993613	AdditiveExpression	1.0 - ( CMYK [ 1 ] + CMYK [ 3 ] )		10993324	1		-			
ANR	10993614	PrimaryExpression	1.0		10993324	0					
ANR	10993615	AdditiveExpression	CMYK [ 1 ] + CMYK [ 3 ]		10993324	1		+			
ANR	10993616	ArrayIndexing	CMYK [ 1 ]		10993324	0					
ANR	10993617	Identifier	CMYK		10993324	0					
ANR	10993618	PrimaryExpression	1		10993324	1					
ANR	10993619	ArrayIndexing	CMYK [ 3 ]		10993324	1					
ANR	10993620	Identifier	CMYK		10993324	0					
ANR	10993621	PrimaryExpression	3		10993324	1					
ANR	10993622	IfStatement	if ( RGB [ 1 ] < 0 )		10993324	14					
ANR	10993623	Condition	RGB [ 1 ] < 0	1707:16:56213:56222	10993324	0	True				
ANR	10993624	RelationalExpression	RGB [ 1 ] < 0		10993324	0		<			
ANR	10993625	ArrayIndexing	RGB [ 1 ]		10993324	0					
ANR	10993626	Identifier	RGB		10993324	0					
ANR	10993627	PrimaryExpression	1		10993324	1					
ANR	10993628	PrimaryExpression	0		10993324	1					
ANR	10993629	ExpressionStatement	RGB [ 1 ] = 0	1708:16:56241:56251	10993324	1	True				
ANR	10993630	AssignmentExpression	RGB [ 1 ] = 0		10993324	0		=			
ANR	10993631	ArrayIndexing	RGB [ 1 ]		10993324	0					
ANR	10993632	Identifier	RGB		10993324	0					
ANR	10993633	PrimaryExpression	1		10993324	1					
ANR	10993634	PrimaryExpression	0		10993324	1					
ANR	10993635	ExpressionStatement	RGB [ 2 ] = 1.0 - ( CMYK [ 2 ] + CMYK [ 3 ] )	1709:12:56265:56299	10993324	15	True				
ANR	10993636	AssignmentExpression	RGB [ 2 ] = 1.0 - ( CMYK [ 2 ] + CMYK [ 3 ] )		10993324	0		=			
ANR	10993637	ArrayIndexing	RGB [ 2 ]		10993324	0					
ANR	10993638	Identifier	RGB		10993324	0					
ANR	10993639	PrimaryExpression	2		10993324	1					
ANR	10993640	AdditiveExpression	1.0 - ( CMYK [ 2 ] + CMYK [ 3 ] )		10993324	1		-			
ANR	10993641	PrimaryExpression	1.0		10993324	0					
ANR	10993642	AdditiveExpression	CMYK [ 2 ] + CMYK [ 3 ]		10993324	1		+			
ANR	10993643	ArrayIndexing	CMYK [ 2 ]		10993324	0					
ANR	10993644	Identifier	CMYK		10993324	0					
ANR	10993645	PrimaryExpression	2		10993324	1					
ANR	10993646	ArrayIndexing	CMYK [ 3 ]		10993324	1					
ANR	10993647	Identifier	CMYK		10993324	0					
ANR	10993648	PrimaryExpression	3		10993324	1					
ANR	10993649	IfStatement	if ( RGB [ 2 ] < 0 )		10993324	16					
ANR	10993650	Condition	RGB [ 2 ] < 0	1710:16:56317:56326	10993324	0	True				
ANR	10993651	RelationalExpression	RGB [ 2 ] < 0		10993324	0		<			
ANR	10993652	ArrayIndexing	RGB [ 2 ]		10993324	0					
ANR	10993653	Identifier	RGB		10993324	0					
ANR	10993654	PrimaryExpression	2		10993324	1					
ANR	10993655	PrimaryExpression	0		10993324	1					
ANR	10993656	ExpressionStatement	RGB [ 2 ] = 0	1711:16:56345:56355	10993324	1	True				
ANR	10993657	AssignmentExpression	RGB [ 2 ] = 0		10993324	0		=			
ANR	10993658	ArrayIndexing	RGB [ 2 ]		10993324	0					
ANR	10993659	Identifier	RGB		10993324	0					
ANR	10993660	PrimaryExpression	2		10993324	1					
ANR	10993661	PrimaryExpression	0		10993324	1					
ANR	10993662	IfStatement	if ( base == 1 )		10993324	17					
ANR	10993663	Condition	base == 1	1712:16:56373:56381	10993324	0	True				
ANR	10993664	EqualityExpression	base == 1		10993324	0		==			
ANR	10993665	Identifier	base		10993324	0					
ANR	10993666	PrimaryExpression	1		10993324	1					
ANR	10993667	ExpressionStatement	rgb2hsb ( ( float * ) & RGB )	1713:16:56400:56422	10993324	1	True				
ANR	10993668	CallExpression	rgb2hsb ( ( float * ) & RGB )		10993324	0					
ANR	10993669	Callee	rgb2hsb		10993324	0					
ANR	10993670	Identifier	rgb2hsb		10993324	0					
ANR	10993671	ArgumentList	( float * ) & RGB		10993324	1					
ANR	10993672	Argument	( float * ) & RGB		10993324	0					
ANR	10993673	CastExpression	( float * ) & RGB		10993324	0					
ANR	10993674	CastTarget	float *		10993324	0					
ANR	10993675	UnaryOperationExpression	& RGB		10993324	1					
ANR	10993676	UnaryOperator	&		10993324	0					
ANR	10993677	Identifier	RGB		10993324	1					
ANR	10993678	ExpressionStatement	"make_real ( & op [ - 2 ] , RGB [ 0 ] )"	1714:12:56436:56462	10993324	18	True				
ANR	10993679	CallExpression	"make_real ( & op [ - 2 ] , RGB [ 0 ] )"		10993324	0					
ANR	10993680	Callee	make_real		10993324	0					
ANR	10993681	Identifier	make_real		10993324	0					
ANR	10993682	ArgumentList	& op [ - 2 ]		10993324	1					
ANR	10993683	Argument	& op [ - 2 ]		10993324	0					
ANR	10993684	UnaryOperationExpression	& op [ - 2 ]		10993324	0					
ANR	10993685	UnaryOperator	&		10993324	0					
ANR	10993686	ArrayIndexing	op [ - 2 ]		10993324	1					
ANR	10993687	Identifier	op		10993324	0					
ANR	10993688	UnaryOperationExpression	- 2		10993324	1					
ANR	10993689	UnaryOperator	-		10993324	0					
ANR	10993690	PrimaryExpression	2		10993324	1					
ANR	10993691	Argument	RGB [ 0 ]		10993324	1					
ANR	10993692	ArrayIndexing	RGB [ 0 ]		10993324	0					
ANR	10993693	Identifier	RGB		10993324	0					
ANR	10993694	PrimaryExpression	0		10993324	1					
ANR	10993695	ExpressionStatement	"make_real ( & op [ - 1 ] , RGB [ 1 ] )"	1715:12:56476:56502	10993324	19	True				
ANR	10993696	CallExpression	"make_real ( & op [ - 1 ] , RGB [ 1 ] )"		10993324	0					
ANR	10993697	Callee	make_real		10993324	0					
ANR	10993698	Identifier	make_real		10993324	0					
ANR	10993699	ArgumentList	& op [ - 1 ]		10993324	1					
ANR	10993700	Argument	& op [ - 1 ]		10993324	0					
ANR	10993701	UnaryOperationExpression	& op [ - 1 ]		10993324	0					
ANR	10993702	UnaryOperator	&		10993324	0					
ANR	10993703	ArrayIndexing	op [ - 1 ]		10993324	1					
ANR	10993704	Identifier	op		10993324	0					
ANR	10993705	UnaryOperationExpression	- 1		10993324	1					
ANR	10993706	UnaryOperator	-		10993324	0					
ANR	10993707	PrimaryExpression	1		10993324	1					
ANR	10993708	Argument	RGB [ 1 ]		10993324	1					
ANR	10993709	ArrayIndexing	RGB [ 1 ]		10993324	0					
ANR	10993710	Identifier	RGB		10993324	0					
ANR	10993711	PrimaryExpression	1		10993324	1					
ANR	10993712	ExpressionStatement	"make_real ( op , RGB [ 2 ] )"	1716:12:56516:56537	10993324	20	True				
ANR	10993713	CallExpression	"make_real ( op , RGB [ 2 ] )"		10993324	0					
ANR	10993714	Callee	make_real		10993324	0					
ANR	10993715	Identifier	make_real		10993324	0					
ANR	10993716	ArgumentList	op		10993324	1					
ANR	10993717	Argument	op		10993324	0					
ANR	10993718	Identifier	op		10993324	0					
ANR	10993719	Argument	RGB [ 2 ]		10993324	1					
ANR	10993720	ArrayIndexing	RGB [ 2 ]		10993324	0					
ANR	10993721	Identifier	RGB		10993324	0					
ANR	10993722	PrimaryExpression	2		10993324	1					
ANR	10993723	BreakStatement	break ;	1717:12:56551:56556	10993324	21	True				
ANR	10993724	Label	case 3 :	1718:8:56566:56572	10993324	22	True				
ANR	10993725	ExpressionStatement	op = osp	1719:12:56586:56594	10993324	23	True				
ANR	10993726	AssignmentExpression	op = osp		10993324	0		=			
ANR	10993727	Identifier	op		10993324	0					
ANR	10993728	Identifier	osp		10993324	1					
ANR	10993729	ExpressionStatement	"make_real ( & op [ - 3 ] , CMYK [ 0 ] )"	1720:12:56608:56635	10993324	24	True				
ANR	10993730	CallExpression	"make_real ( & op [ - 3 ] , CMYK [ 0 ] )"		10993324	0					
ANR	10993731	Callee	make_real		10993324	0					
ANR	10993732	Identifier	make_real		10993324	0					
ANR	10993733	ArgumentList	& op [ - 3 ]		10993324	1					
ANR	10993734	Argument	& op [ - 3 ]		10993324	0					
ANR	10993735	UnaryOperationExpression	& op [ - 3 ]		10993324	0					
ANR	10993736	UnaryOperator	&		10993324	0					
ANR	10993737	ArrayIndexing	op [ - 3 ]		10993324	1					
ANR	10993738	Identifier	op		10993324	0					
ANR	10993739	UnaryOperationExpression	- 3		10993324	1					
ANR	10993740	UnaryOperator	-		10993324	0					
ANR	10993741	PrimaryExpression	3		10993324	1					
ANR	10993742	Argument	CMYK [ 0 ]		10993324	1					
ANR	10993743	ArrayIndexing	CMYK [ 0 ]		10993324	0					
ANR	10993744	Identifier	CMYK		10993324	0					
ANR	10993745	PrimaryExpression	0		10993324	1					
ANR	10993746	ExpressionStatement	"make_real ( & op [ - 2 ] , CMYK [ 1 ] )"	1721:12:56649:56676	10993324	25	True				
ANR	10993747	CallExpression	"make_real ( & op [ - 2 ] , CMYK [ 1 ] )"		10993324	0					
ANR	10993748	Callee	make_real		10993324	0					
ANR	10993749	Identifier	make_real		10993324	0					
ANR	10993750	ArgumentList	& op [ - 2 ]		10993324	1					
ANR	10993751	Argument	& op [ - 2 ]		10993324	0					
ANR	10993752	UnaryOperationExpression	& op [ - 2 ]		10993324	0					
ANR	10993753	UnaryOperator	&		10993324	0					
ANR	10993754	ArrayIndexing	op [ - 2 ]		10993324	1					
ANR	10993755	Identifier	op		10993324	0					
ANR	10993756	UnaryOperationExpression	- 2		10993324	1					
ANR	10993757	UnaryOperator	-		10993324	0					
ANR	10993758	PrimaryExpression	2		10993324	1					
ANR	10993759	Argument	CMYK [ 1 ]		10993324	1					
ANR	10993760	ArrayIndexing	CMYK [ 1 ]		10993324	0					
ANR	10993761	Identifier	CMYK		10993324	0					
ANR	10993762	PrimaryExpression	1		10993324	1					
ANR	10993763	ExpressionStatement	"make_real ( & op [ - 1 ] , CMYK [ 2 ] )"	1722:12:56690:56717	10993324	26	True				
ANR	10993764	CallExpression	"make_real ( & op [ - 1 ] , CMYK [ 2 ] )"		10993324	0					
ANR	10993765	Callee	make_real		10993324	0					
ANR	10993766	Identifier	make_real		10993324	0					
ANR	10993767	ArgumentList	& op [ - 1 ]		10993324	1					
ANR	10993768	Argument	& op [ - 1 ]		10993324	0					
ANR	10993769	UnaryOperationExpression	& op [ - 1 ]		10993324	0					
ANR	10993770	UnaryOperator	&		10993324	0					
ANR	10993771	ArrayIndexing	op [ - 1 ]		10993324	1					
ANR	10993772	Identifier	op		10993324	0					
ANR	10993773	UnaryOperationExpression	- 1		10993324	1					
ANR	10993774	UnaryOperator	-		10993324	0					
ANR	10993775	PrimaryExpression	1		10993324	1					
ANR	10993776	Argument	CMYK [ 2 ]		10993324	1					
ANR	10993777	ArrayIndexing	CMYK [ 2 ]		10993324	0					
ANR	10993778	Identifier	CMYK		10993324	0					
ANR	10993779	PrimaryExpression	2		10993324	1					
ANR	10993780	ExpressionStatement	"make_real ( op , CMYK [ 3 ] )"	1723:12:56731:56753	10993324	27	True				
ANR	10993781	CallExpression	"make_real ( op , CMYK [ 3 ] )"		10993324	0					
ANR	10993782	Callee	make_real		10993324	0					
ANR	10993783	Identifier	make_real		10993324	0					
ANR	10993784	ArgumentList	op		10993324	1					
ANR	10993785	Argument	op		10993324	0					
ANR	10993786	Identifier	op		10993324	0					
ANR	10993787	Argument	CMYK [ 3 ]		10993324	1					
ANR	10993788	ArrayIndexing	CMYK [ 3 ]		10993324	0					
ANR	10993789	Identifier	CMYK		10993324	0					
ANR	10993790	PrimaryExpression	3		10993324	1					
ANR	10993791	BreakStatement	break ;	1724:12:56767:56772	10993324	28	True				
ANR	10993792	Label	default :	1725:8:56782:56789	10993324	29	True				
ANR	10993793	Identifier	default		10993324	0					
ANR	10993794	ExpressionStatement	return_error ( gs_error_undefined )	1726:12:56803:56835	10993324	30	True				
ANR	10993795	CallExpression	return_error ( gs_error_undefined )		10993324	0					
ANR	10993796	Callee	return_error		10993324	0					
ANR	10993797	Identifier	return_error		10993324	0					
ANR	10993798	ArgumentList	gs_error_undefined		10993324	1					
ANR	10993799	Argument	gs_error_undefined		10993324	0					
ANR	10993800	Identifier	gs_error_undefined		10993324	0					
ANR	10993801	ReturnStatement	return 0 ;	1728:4:56847:56855	10993324	11	True				
ANR	10993802	PrimaryExpression	0		10993324	0					
ANR	10993803	ReturnType	static int		10993324	1					
ANR	10993804	Identifier	cmykbasecolor		10993324	2					
ANR	10993805	ParameterList	"i_ctx_t * i_ctx_p , ref * space , int base , int * stage , int * cont , int * stack_depth"		10993324	3					
ANR	10993806	Parameter	i_ctx_t * i_ctx_p	1651:25:54297:54313	10993324	0	True				
ANR	10993807	ParameterType	i_ctx_t *		10993324	0					
ANR	10993808	Identifier	i_ctx_p		10993324	1					
ANR	10993809	Parameter	ref * space	1651:44:54316:54325	10993324	1	True				
ANR	10993810	ParameterType	ref *		10993324	0					
ANR	10993811	Identifier	space		10993324	1					
ANR	10993812	Parameter	int base	1651:56:54328:54335	10993324	2	True				
ANR	10993813	ParameterType	int		10993324	0					
ANR	10993814	Identifier	base		10993324	1					
ANR	10993815	Parameter	int * stage	1651:66:54338:54347	10993324	3	True				
ANR	10993816	ParameterType	int *		10993324	0					
ANR	10993817	Identifier	stage		10993324	1					
ANR	10993818	Parameter	int * cont	1651:78:54350:54358	10993324	4	True				
ANR	10993819	ParameterType	int *		10993324	0					
ANR	10993820	Identifier	cont		10993324	1					
ANR	10993821	Parameter	int * stack_depth	1651:89:54361:54376	10993324	5	True				
ANR	10993822	ParameterType	int *		10993324	0					
ANR	10993823	Identifier	stack_depth		10993324	1					
ANR	10993824	CFGEntryNode	ENTRY		10993324		True				
ANR	10993825	CFGExitNode	EXIT		10993324		True				
ANR	10993826	Symbol	stack_depth		10993324						
ANR	10993827	Symbol	* op		10993324						
ANR	10993828	Symbol	gs_error_rangecheck		10993324						
ANR	10993829	Symbol	gs_error_undefined		10993324						
ANR	10993830	Symbol	pcs -> id		10993324						
ANR	10993831	Symbol	* pcs		10993324						
ANR	10993832	Symbol	op -> value . realval		10993324						
ANR	10993833	Symbol	graybasecolor		10993324						
ANR	10993834	Symbol	osp		10993324						
ANR	10993835	Symbol	space		10993324						
ANR	10993836	Symbol	r_has_type		10993324						
ANR	10993837	Symbol	gs_error_typecheck		10993324						
ANR	10993838	Symbol	igs		10993324						
ANR	10993839	Symbol	& RGB		10993324						
ANR	10993840	Symbol	gs_currentcolorspace		10993324						
ANR	10993841	Symbol	op -> value		10993324						
ANR	10993842	Symbol	cont		10993324						
ANR	10993843	Symbol	op		10993324						
ANR	10993844	Symbol	pcs		10993324						
ANR	10993845	Symbol	Gray		10993324						
ANR	10993846	Symbol	CMYK		10993324						
ANR	10993847	Symbol	* stage		10993324						
ANR	10993848	Symbol	cs_DeviceGray_id		10993324						
ANR	10993849	Symbol	* RGB		10993324						
ANR	10993850	Symbol	i		10993324						
ANR	10993851	Symbol	t_real		10993324						
ANR	10993852	Symbol	RGB		10993324						
ANR	10993853	Symbol	* i		10993324						
ANR	10993854	Symbol	stage		10993324						
ANR	10993855	Symbol	t_integer		10993324						
ANR	10993856	Symbol	* cont		10993324						
ANR	10993857	Symbol	i_ctx_p		10993324						
ANR	10993858	Symbol	* CMYK		10993324						
ANR	10993859	Symbol	op -> value . intval		10993324						
ANR	10993860	Symbol	base		10993324						
ANR	10993861	Function	cmykvalidate	1730:0:56859:57387							
ANR	10993862	FunctionDef	"cmykvalidate (i_ctx_t * i_ctx_p , ref * space , float * values , int num_comps)"		10993861	0					
ANR	10993863	CompoundStatement		1731:0:56943:57387	10993861	0					
ANR	10993864	IdentifierDeclStatement	os_ptr op = osp ;	1732:4:56949:56964	10993861	0	True				
ANR	10993865	IdentifierDecl	op = osp		10993861	0					
ANR	10993866	IdentifierDeclType	os_ptr		10993861	0					
ANR	10993867	Identifier	op		10993861	1					
ANR	10993868	AssignmentExpression	op = osp		10993861	2		=			
ANR	10993869	Identifier	osp		10993861	0					
ANR	10993870	Identifier	osp		10993861	1					
ANR	10993871	IdentifierDeclStatement	int i ;	1733:4:56970:56975	10993861	1	True				
ANR	10993872	IdentifierDecl	i		10993861	0					
ANR	10993873	IdentifierDeclType	int		10993861	0					
ANR	10993874	Identifier	i		10993861	1					
ANR	10993875	IfStatement	if ( num_comps < 4 )		10993861	2					
ANR	10993876	Condition	num_comps < 4	1735:8:56986:56998	10993861	0	True				
ANR	10993877	RelationalExpression	num_comps < 4		10993861	0		<			
ANR	10993878	Identifier	num_comps		10993861	0					
ANR	10993879	PrimaryExpression	4		10993861	1					
ANR	10993880	ExpressionStatement	return_error ( gs_error_stackunderflow )	1736:8:57009:57046	10993861	1	True				
ANR	10993881	CallExpression	return_error ( gs_error_stackunderflow )		10993861	0					
ANR	10993882	Callee	return_error		10993861	0					
ANR	10993883	Identifier	return_error		10993861	0					
ANR	10993884	ArgumentList	gs_error_stackunderflow		10993861	1					
ANR	10993885	Argument	gs_error_stackunderflow		10993861	0					
ANR	10993886	Identifier	gs_error_stackunderflow		10993861	0					
ANR	10993887	ExpressionStatement	op -= 3	1738:4:57053:57060	10993861	3	True				
ANR	10993888	AssignmentExpression	op -= 3		10993861	0		-=			
ANR	10993889	Identifier	op		10993861	0					
ANR	10993890	PrimaryExpression	3		10993861	1					
ANR	10993891	ForStatement	for ( i = 0 ; i < 4 ; i ++ )		10993861	4					
ANR	10993892	ForInit	i = 0 ;	1739:9:57071:57074	10993861	0	True				
ANR	10993893	AssignmentExpression	i = 0		10993861	0		=			
ANR	10993894	Identifier	i		10993861	0					
ANR	10993895	PrimaryExpression	0		10993861	1					
ANR	10993896	Condition	i < 4	1739:13:57075:57079	10993861	1	True				
ANR	10993897	RelationalExpression	i < 4		10993861	0		<			
ANR	10993898	Identifier	i		10993861	0					
ANR	10993899	PrimaryExpression	4		10993861	1					
ANR	10993900	PostIncDecOperationExpression	i ++	1739:19:57081:57083	10993861	2	True				
ANR	10993901	Identifier	i		10993861	0					
ANR	10993902	IncDec	++		10993861	1					
ANR	10993903	CompoundStatement		9:24:142:142	10993861	3					
ANR	10993904	IfStatement	"if ( ! r_has_type ( op , t_integer ) && ! r_has_type ( op , t_real ) )"		10993861	0					
ANR	10993905	Condition	"! r_has_type ( op , t_integer ) && ! r_has_type ( op , t_real )"	1740:12:57100:57152	10993861	0	True				
ANR	10993906	AndExpression	"! r_has_type ( op , t_integer ) && ! r_has_type ( op , t_real )"		10993861	0		&&			
ANR	10993907	UnaryOperationExpression	"! r_has_type ( op , t_integer )"		10993861	0					
ANR	10993908	UnaryOperator	!		10993861	0					
ANR	10993909	CallExpression	"r_has_type ( op , t_integer )"		10993861	1					
ANR	10993910	Callee	r_has_type		10993861	0					
ANR	10993911	Identifier	r_has_type		10993861	0					
ANR	10993912	ArgumentList	op		10993861	1					
ANR	10993913	Argument	op		10993861	0					
ANR	10993914	Identifier	op		10993861	0					
ANR	10993915	Argument	t_integer		10993861	1					
ANR	10993916	Identifier	t_integer		10993861	0					
ANR	10993917	UnaryOperationExpression	"! r_has_type ( op , t_real )"		10993861	1					
ANR	10993918	UnaryOperator	!		10993861	0					
ANR	10993919	CallExpression	"r_has_type ( op , t_real )"		10993861	1					
ANR	10993920	Callee	r_has_type		10993861	0					
ANR	10993921	Identifier	r_has_type		10993861	0					
ANR	10993922	ArgumentList	op		10993861	1					
ANR	10993923	Argument	op		10993861	0					
ANR	10993924	Identifier	op		10993861	0					
ANR	10993925	Argument	t_real		10993861	1					
ANR	10993926	Identifier	t_real		10993861	0					
ANR	10993927	ExpressionStatement	return_error ( gs_error_typecheck )	1741:12:57167:57199	10993861	1	True				
ANR	10993928	CallExpression	return_error ( gs_error_typecheck )		10993861	0					
ANR	10993929	Callee	return_error		10993861	0					
ANR	10993930	Identifier	return_error		10993861	0					
ANR	10993931	ArgumentList	gs_error_typecheck		10993861	1					
ANR	10993932	Argument	gs_error_typecheck		10993861	0					
ANR	10993933	Identifier	gs_error_typecheck		10993861	0					
ANR	10993934	ExpressionStatement	op ++	1742:8:57209:57213	10993861	1	True				
ANR	10993935	PostIncDecOperationExpression	op ++		10993861	0					
ANR	10993936	Identifier	op		10993861	0					
ANR	10993937	IncDec	++		10993861	1					
ANR	10993938	ForStatement	for ( i = 0 ; i < 4 ; i ++ )		10993861	5					
ANR	10993939	ForInit	i = 0 ;	1745:9:57231:57234	10993861	0	True				
ANR	10993940	AssignmentExpression	i = 0		10993861	0		=			
ANR	10993941	Identifier	i		10993861	0					
ANR	10993942	PrimaryExpression	0		10993861	1					
ANR	10993943	Condition	i < 4	1745:13:57235:57239	10993861	1	True				
ANR	10993944	RelationalExpression	i < 4		10993861	0		<			
ANR	10993945	Identifier	i		10993861	0					
ANR	10993946	PrimaryExpression	4		10993861	1					
ANR	10993947	PostIncDecOperationExpression	i ++	1745:20:57242:57244	10993861	2	True				
ANR	10993948	Identifier	i		10993861	0					
ANR	10993949	IncDec	++		10993861	1					
ANR	10993950	CompoundStatement		15:25:303:303	10993861	3					
ANR	10993951	IfStatement	if ( values [ i ] > 1.0 )		10993861	0					
ANR	10993952	Condition	values [ i ] > 1.0	1746:12:57261:57275	10993861	0	True				
ANR	10993953	RelationalExpression	values [ i ] > 1.0		10993861	0		>			
ANR	10993954	ArrayIndexing	values [ i ]		10993861	0					
ANR	10993955	Identifier	values		10993861	0					
ANR	10993956	Identifier	i		10993861	1					
ANR	10993957	PrimaryExpression	1.0		10993861	1					
ANR	10993958	ExpressionStatement	values [ i ] = 1.0	1747:12:57290:57305	10993861	1	True				
ANR	10993959	AssignmentExpression	values [ i ] = 1.0		10993861	0		=			
ANR	10993960	ArrayIndexing	values [ i ]		10993861	0					
ANR	10993961	Identifier	values		10993861	0					
ANR	10993962	Identifier	i		10993861	1					
ANR	10993963	PrimaryExpression	1.0		10993861	1					
ANR	10993964	IfStatement	if ( values [ i ] < 0.0 )		10993861	1					
ANR	10993965	Condition	values [ i ] < 0.0	1749:12:57320:57334	10993861	0	True				
ANR	10993966	RelationalExpression	values [ i ] < 0.0		10993861	0		<			
ANR	10993967	ArrayIndexing	values [ i ]		10993861	0					
ANR	10993968	Identifier	values		10993861	0					
ANR	10993969	Identifier	i		10993861	1					
ANR	10993970	PrimaryExpression	0.0		10993861	1					
ANR	10993971	ExpressionStatement	values [ i ] = 0.0	1750:12:57349:57364	10993861	1	True				
ANR	10993972	AssignmentExpression	values [ i ] = 0.0		10993861	0		=			
ANR	10993973	ArrayIndexing	values [ i ]		10993861	0					
ANR	10993974	Identifier	values		10993861	0					
ANR	10993975	Identifier	i		10993861	1					
ANR	10993976	PrimaryExpression	0.0		10993861	1					
ANR	10993977	ReturnStatement	return 0 ;	1753:4:57377:57385	10993861	6	True				
ANR	10993978	PrimaryExpression	0		10993861	0					
ANR	10993979	ReturnType	static int		10993861	1					
ANR	10993980	Identifier	cmykvalidate		10993861	2					
ANR	10993981	ParameterList	"i_ctx_t * i_ctx_p , ref * space , float * values , int num_comps"		10993861	3					
ANR	10993982	Parameter	i_ctx_t * i_ctx_p	1730:24:56883:56898	10993861	0	True				
ANR	10993983	ParameterType	i_ctx_t *		10993861	0					
ANR	10993984	Identifier	i_ctx_p		10993861	1					
ANR	10993985	Parameter	ref * space	1730:42:56901:56910	10993861	1	True				
ANR	10993986	ParameterType	ref *		10993861	0					
ANR	10993987	Identifier	space		10993861	1					
ANR	10993988	Parameter	float * values	1730:54:56913:56925	10993861	2	True				
ANR	10993989	ParameterType	float *		10993861	0					
ANR	10993990	Identifier	values		10993861	1					
ANR	10993991	Parameter	int num_comps	1730:69:56928:56940	10993861	3	True				
ANR	10993992	ParameterType	int		10993861	0					
ANR	10993993	Identifier	num_comps		10993861	1					
ANR	10993994	CFGEntryNode	ENTRY		10993861		True				
ANR	10993995	CFGExitNode	EXIT		10993861		True				
ANR	10993996	Symbol	op		10993861						
ANR	10993997	Symbol	* values		10993861						
ANR	10993998	Symbol	values		10993861						
ANR	10993999	Symbol	i		10993861						
ANR	10994000	Symbol	t_real		10993861						
ANR	10994001	Symbol	osp		10993861						
ANR	10994002	Symbol	space		10993861						
ANR	10994003	Symbol	r_has_type		10993861						
ANR	10994004	Symbol	gs_error_typecheck		10993861						
ANR	10994005	Symbol	* i		10993861						
ANR	10994006	Symbol	t_integer		10993861						
ANR	10994007	Symbol	gs_error_stackunderflow		10993861						
ANR	10994008	Symbol	i_ctx_p		10993861						
ANR	10994009	Symbol	num_comps		10993861						
ANR	10994010	Function	cmykinitialproc	1755:0:57389:57642							
ANR	10994011	FunctionDef	"cmykinitialproc (i_ctx_t * i_ctx_p , ref * space)"		10994010	0					
ANR	10994012	CompoundStatement		1756:0:57446:57642	10994010	0					
ANR	10994013	IdentifierDeclStatement	gs_client_color cc ;	1757:4:57452:57470	10994010	0	True				
ANR	10994014	IdentifierDecl	cc		10994010	0					
ANR	10994015	IdentifierDeclType	gs_client_color		10994010	0					
ANR	10994016	Identifier	cc		10994010	1					
ANR	10994017	ExpressionStatement	cc . pattern = 0x00	1759:4:57477:57494	10994010	1	True				
ANR	10994018	AssignmentExpression	cc . pattern = 0x00		10994010	0		=			
ANR	10994019	MemberAccess	cc . pattern		10994010	0					
ANR	10994020	Identifier	cc		10994010	0					
ANR	10994021	Identifier	pattern		10994010	1					
ANR	10994022	PrimaryExpression	0x00		10994010	1					
ANR	10994023	ExpressionStatement	cc . paint . values [ 0 ] = 0	1760:4:57500:57522	10994010	2	True				
ANR	10994024	AssignmentExpression	cc . paint . values [ 0 ] = 0		10994010	0		=			
ANR	10994025	ArrayIndexing	cc . paint . values [ 0 ]		10994010	0					
ANR	10994026	MemberAccess	cc . paint . values		10994010	0					
ANR	10994027	MemberAccess	cc . paint		10994010	0					
ANR	10994028	Identifier	cc		10994010	0					
ANR	10994029	Identifier	paint		10994010	1					
ANR	10994030	Identifier	values		10994010	1					
ANR	10994031	PrimaryExpression	0		10994010	1					
ANR	10994032	PrimaryExpression	0		10994010	1					
ANR	10994033	ExpressionStatement	cc . paint . values [ 1 ] = 0	1761:4:57528:57550	10994010	3	True				
ANR	10994034	AssignmentExpression	cc . paint . values [ 1 ] = 0		10994010	0		=			
ANR	10994035	ArrayIndexing	cc . paint . values [ 1 ]		10994010	0					
ANR	10994036	MemberAccess	cc . paint . values		10994010	0					
ANR	10994037	MemberAccess	cc . paint		10994010	0					
ANR	10994038	Identifier	cc		10994010	0					
ANR	10994039	Identifier	paint		10994010	1					
ANR	10994040	Identifier	values		10994010	1					
ANR	10994041	PrimaryExpression	1		10994010	1					
ANR	10994042	PrimaryExpression	0		10994010	1					
ANR	10994043	ExpressionStatement	cc . paint . values [ 2 ] = 0	1762:4:57556:57578	10994010	4	True				
ANR	10994044	AssignmentExpression	cc . paint . values [ 2 ] = 0		10994010	0		=			
ANR	10994045	ArrayIndexing	cc . paint . values [ 2 ]		10994010	0					
ANR	10994046	MemberAccess	cc . paint . values		10994010	0					
ANR	10994047	MemberAccess	cc . paint		10994010	0					
ANR	10994048	Identifier	cc		10994010	0					
ANR	10994049	Identifier	paint		10994010	1					
ANR	10994050	Identifier	values		10994010	1					
ANR	10994051	PrimaryExpression	2		10994010	1					
ANR	10994052	PrimaryExpression	0		10994010	1					
ANR	10994053	ExpressionStatement	cc . paint . values [ 3 ] = 1	1763:4:57584:57606	10994010	5	True				
ANR	10994054	AssignmentExpression	cc . paint . values [ 3 ] = 1		10994010	0		=			
ANR	10994055	ArrayIndexing	cc . paint . values [ 3 ]		10994010	0					
ANR	10994056	MemberAccess	cc . paint . values		10994010	0					
ANR	10994057	MemberAccess	cc . paint		10994010	0					
ANR	10994058	Identifier	cc		10994010	0					
ANR	10994059	Identifier	paint		10994010	1					
ANR	10994060	Identifier	values		10994010	1					
ANR	10994061	PrimaryExpression	3		10994010	1					
ANR	10994062	PrimaryExpression	1		10994010	1					
ANR	10994063	ReturnStatement	"return gs_setcolor ( igs , & cc ) ;"	1764:4:57612:57640	10994010	6	True				
ANR	10994064	CallExpression	"gs_setcolor ( igs , & cc )"		10994010	0					
ANR	10994065	Callee	gs_setcolor		10994010	0					
ANR	10994066	Identifier	gs_setcolor		10994010	0					
ANR	10994067	ArgumentList	igs		10994010	1					
ANR	10994068	Argument	igs		10994010	0					
ANR	10994069	Identifier	igs		10994010	0					
ANR	10994070	Argument	& cc		10994010	1					
ANR	10994071	UnaryOperationExpression	& cc		10994010	0					
ANR	10994072	UnaryOperator	&		10994010	0					
ANR	10994073	Identifier	cc		10994010	1					
ANR	10994074	ReturnType	static int		10994010	1					
ANR	10994075	Identifier	cmykinitialproc		10994010	2					
ANR	10994076	ParameterList	"i_ctx_t * i_ctx_p , ref * space"		10994010	3					
ANR	10994077	Parameter	i_ctx_t * i_ctx_p	1755:27:57416:57431	10994010	0	True				
ANR	10994078	ParameterType	i_ctx_t *		10994010	0					
ANR	10994079	Identifier	i_ctx_p		10994010	1					
ANR	10994080	Parameter	ref * space	1755:45:57434:57443	10994010	1	True				
ANR	10994081	ParameterType	ref *		10994010	0					
ANR	10994082	Identifier	space		10994010	1					
ANR	10994083	CFGEntryNode	ENTRY		10994010		True				
ANR	10994084	CFGExitNode	EXIT		10994010		True				
ANR	10994085	Symbol	cc		10994010						
ANR	10994086	Symbol	cc . pattern		10994010						
ANR	10994087	Symbol	* cc . paint		10994010						
ANR	10994088	Symbol	igs		10994010						
ANR	10994089	Symbol	* cc . paint . values		10994010						
ANR	10994090	Symbol	* cc		10994010						
ANR	10994091	Symbol	i_ctx_p		10994010						
ANR	10994092	Symbol	cc . paint		10994010						
ANR	10994093	Symbol	gs_setcolor		10994010						
ANR	10994094	Symbol	& cc		10994010						
ANR	10994095	Symbol	cc . paint . values		10994010						
ANR	10994096	Symbol	space		10994010						
ANR	10994097	Function	comparearrays	1772:0:57860:60251							
ANR	10994098	FunctionDef	"comparearrays (i_ctx_t * i_ctx_p , ref * m1 , ref * m2)"		10994097	0					
ANR	10994099	CompoundStatement		1773:0:57922:60251	10994097	0					
ANR	10994100	IdentifierDeclStatement	"int i , code ;"	1774:4:57928:57939	10994097	0	True				
ANR	10994101	IdentifierDecl	i		10994097	0					
ANR	10994102	IdentifierDeclType	int		10994097	0					
ANR	10994103	Identifier	i		10994097	1					
ANR	10994104	IdentifierDecl	code		10994097	1					
ANR	10994105	IdentifierDeclType	int		10994097	0					
ANR	10994106	Identifier	code		10994097	1					
ANR	10994107	IdentifierDeclStatement	"ref ref1 , ref2 ;"	1775:4:57945:57959	10994097	1	True				
ANR	10994108	IdentifierDecl	ref1		10994097	0					
ANR	10994109	IdentifierDeclType	ref		10994097	0					
ANR	10994110	Identifier	ref1		10994097	1					
ANR	10994111	IdentifierDecl	ref2		10994097	1					
ANR	10994112	IdentifierDeclType	ref		10994097	0					
ANR	10994113	Identifier	ref2		10994097	1					
ANR	10994114	IfStatement	if ( r_size ( m1 ) != r_size ( m2 ) )		10994097	2					
ANR	10994115	Condition	r_size ( m1 ) != r_size ( m2 )	1777:8:57970:57993	10994097	0	True				
ANR	10994116	EqualityExpression	r_size ( m1 ) != r_size ( m2 )		10994097	0		!=			
ANR	10994117	CallExpression	r_size ( m1 )		10994097	0					
ANR	10994118	Callee	r_size		10994097	0					
ANR	10994119	Identifier	r_size		10994097	0					
ANR	10994120	ArgumentList	m1		10994097	1					
ANR	10994121	Argument	m1		10994097	0					
ANR	10994122	Identifier	m1		10994097	0					
ANR	10994123	CallExpression	r_size ( m2 )		10994097	1					
ANR	10994124	Callee	r_size		10994097	0					
ANR	10994125	Identifier	r_size		10994097	0					
ANR	10994126	ArgumentList	m2		10994097	1					
ANR	10994127	Argument	m2		10994097	0					
ANR	10994128	Identifier	m2		10994097	0					
ANR	10994129	ReturnStatement	return 0 ;	1778:8:58004:58012	10994097	1	True				
ANR	10994130	PrimaryExpression	0		10994097	0					
ANR	10994131	ForStatement	for ( i = 0 ; i < r_size ( m1 ) ; i ++ )		10994097	3					
ANR	10994132	ForInit	i = 0 ;	1780:9:58024:58027	10994097	0	True				
ANR	10994133	AssignmentExpression	i = 0		10994097	0		=			
ANR	10994134	Identifier	i		10994097	0					
ANR	10994135	PrimaryExpression	0		10994097	1					
ANR	10994136	Condition	i < r_size ( m1 )	1780:13:58028:58041	10994097	1	True				
ANR	10994137	RelationalExpression	i < r_size ( m1 )		10994097	0		<			
ANR	10994138	Identifier	i		10994097	0					
ANR	10994139	CallExpression	r_size ( m1 )		10994097	1					
ANR	10994140	Callee	r_size		10994097	0					
ANR	10994141	Identifier	r_size		10994097	0					
ANR	10994142	ArgumentList	m1		10994097	1					
ANR	10994143	Argument	m1		10994097	0					
ANR	10994144	Identifier	m1		10994097	0					
ANR	10994145	PostIncDecOperationExpression	i ++	1780:28:58043:58045	10994097	2	True				
ANR	10994146	Identifier	i		10994097	0					
ANR	10994147	IncDec	++		10994097	1					
ANR	10994148	CompoundStatement		8:33:125:125	10994097	3					
ANR	10994149	ExpressionStatement	"code = array_get ( imemory , m1 , i , & ref1 )"	1781:8:58058:58097	10994097	0	True				
ANR	10994150	AssignmentExpression	"code = array_get ( imemory , m1 , i , & ref1 )"		10994097	0		=			
ANR	10994151	Identifier	code		10994097	0					
ANR	10994152	CallExpression	"array_get ( imemory , m1 , i , & ref1 )"		10994097	1					
ANR	10994153	Callee	array_get		10994097	0					
ANR	10994154	Identifier	array_get		10994097	0					
ANR	10994155	ArgumentList	imemory		10994097	1					
ANR	10994156	Argument	imemory		10994097	0					
ANR	10994157	Identifier	imemory		10994097	0					
ANR	10994158	Argument	m1		10994097	1					
ANR	10994159	Identifier	m1		10994097	0					
ANR	10994160	Argument	i		10994097	2					
ANR	10994161	Identifier	i		10994097	0					
ANR	10994162	Argument	& ref1		10994097	3					
ANR	10994163	UnaryOperationExpression	& ref1		10994097	0					
ANR	10994164	UnaryOperator	&		10994097	0					
ANR	10994165	Identifier	ref1		10994097	1					
ANR	10994166	IfStatement	if ( code < 0 )		10994097	1					
ANR	10994167	Condition	code < 0	1782:12:58111:58118	10994097	0	True				
ANR	10994168	RelationalExpression	code < 0		10994097	0		<			
ANR	10994169	Identifier	code		10994097	0					
ANR	10994170	PrimaryExpression	0		10994097	1					
ANR	10994171	ReturnStatement	return 0 ;	1783:12:58133:58141	10994097	1	True				
ANR	10994172	PrimaryExpression	0		10994097	0					
ANR	10994173	ExpressionStatement	"code = array_get ( imemory , m2 , i , & ref2 )"	1784:8:58151:58190	10994097	2	True				
ANR	10994174	AssignmentExpression	"code = array_get ( imemory , m2 , i , & ref2 )"		10994097	0		=			
ANR	10994175	Identifier	code		10994097	0					
ANR	10994176	CallExpression	"array_get ( imemory , m2 , i , & ref2 )"		10994097	1					
ANR	10994177	Callee	array_get		10994097	0					
ANR	10994178	Identifier	array_get		10994097	0					
ANR	10994179	ArgumentList	imemory		10994097	1					
ANR	10994180	Argument	imemory		10994097	0					
ANR	10994181	Identifier	imemory		10994097	0					
ANR	10994182	Argument	m2		10994097	1					
ANR	10994183	Identifier	m2		10994097	0					
ANR	10994184	Argument	i		10994097	2					
ANR	10994185	Identifier	i		10994097	0					
ANR	10994186	Argument	& ref2		10994097	3					
ANR	10994187	UnaryOperationExpression	& ref2		10994097	0					
ANR	10994188	UnaryOperator	&		10994097	0					
ANR	10994189	Identifier	ref2		10994097	1					
ANR	10994190	IfStatement	if ( code < 0 )		10994097	3					
ANR	10994191	Condition	code < 0	1785:12:58204:58211	10994097	0	True				
ANR	10994192	RelationalExpression	code < 0		10994097	0		<			
ANR	10994193	Identifier	code		10994097	0					
ANR	10994194	PrimaryExpression	0		10994097	1					
ANR	10994195	ReturnStatement	return 0 ;	1786:12:58226:58234	10994097	1	True				
ANR	10994196	PrimaryExpression	0		10994097	0					
ANR	10994197	IfStatement	if ( r_type ( & ref1 ) != r_type ( & ref2 ) )		10994097	4					
ANR	10994198	Condition	r_type ( & ref1 ) != r_type ( & ref2 )	1788:12:58249:58278	10994097	0	True				
ANR	10994199	EqualityExpression	r_type ( & ref1 ) != r_type ( & ref2 )		10994097	0		!=			
ANR	10994200	CallExpression	r_type ( & ref1 )		10994097	0					
ANR	10994201	Callee	r_type		10994097	0					
ANR	10994202	Identifier	r_type		10994097	0					
ANR	10994203	ArgumentList	& ref1		10994097	1					
ANR	10994204	Argument	& ref1		10994097	0					
ANR	10994205	UnaryOperationExpression	& ref1		10994097	0					
ANR	10994206	UnaryOperator	&		10994097	0					
ANR	10994207	Identifier	ref1		10994097	1					
ANR	10994208	CallExpression	r_type ( & ref2 )		10994097	1					
ANR	10994209	Callee	r_type		10994097	0					
ANR	10994210	Identifier	r_type		10994097	0					
ANR	10994211	ArgumentList	& ref2		10994097	1					
ANR	10994212	Argument	& ref2		10994097	0					
ANR	10994213	UnaryOperationExpression	& ref2		10994097	0					
ANR	10994214	UnaryOperator	&		10994097	0					
ANR	10994215	Identifier	ref2		10994097	1					
ANR	10994216	ReturnStatement	return 0 ;	1789:12:58293:58301	10994097	1	True				
ANR	10994217	PrimaryExpression	0		10994097	0					
ANR	10994218	ExpressionStatement	code = r_type ( & ref1 )	1791:8:58312:58332	10994097	5	True				
ANR	10994219	AssignmentExpression	code = r_type ( & ref1 )		10994097	0		=			
ANR	10994220	Identifier	code		10994097	0					
ANR	10994221	CallExpression	r_type ( & ref1 )		10994097	1					
ANR	10994222	Callee	r_type		10994097	0					
ANR	10994223	Identifier	r_type		10994097	0					
ANR	10994224	ArgumentList	& ref1		10994097	1					
ANR	10994225	Argument	& ref1		10994097	0					
ANR	10994226	UnaryOperationExpression	& ref1		10994097	0					
ANR	10994227	UnaryOperator	&		10994097	0					
ANR	10994228	Identifier	ref1		10994097	1					
ANR	10994229	IfStatement	if ( code < 0 )		10994097	6					
ANR	10994230	Condition	code < 0	1792:12:58346:58353	10994097	0	True				
ANR	10994231	RelationalExpression	code < 0		10994097	0		<			
ANR	10994232	Identifier	code		10994097	0					
ANR	10994233	PrimaryExpression	0		10994097	1					
ANR	10994234	ReturnStatement	return code ;	1793:12:58368:58379	10994097	1	True				
ANR	10994235	Identifier	code		10994097	0					
ANR	10994236	SwitchStatement	switch ( r_type ( & ref1 ) )		10994097	7					
ANR	10994237	Condition	r_type ( & ref1 )	1794:15:58396:58408	10994097	0	True				
ANR	10994238	CallExpression	r_type ( & ref1 )		10994097	0					
ANR	10994239	Callee	r_type		10994097	0					
ANR	10994240	Identifier	r_type		10994097	0					
ANR	10994241	ArgumentList	& ref1		10994097	1					
ANR	10994242	Argument	& ref1		10994097	0					
ANR	10994243	UnaryOperationExpression	& ref1		10994097	0					
ANR	10994244	UnaryOperator	&		10994097	0					
ANR	10994245	Identifier	ref1		10994097	1					
ANR	10994246	CompoundStatement		22:30:488:488	10994097	1					
ANR	10994247	Label	case t_null :	1795:12:58425:58436	10994097	0	True				
ANR	10994248	Identifier	t_null		10994097	0					
ANR	10994249	BreakStatement	break ;	1796:16:58454:58459	10994097	1	True				
ANR	10994250	Label	case t_boolean :	1797:12:58473:58487	10994097	2	True				
ANR	10994251	Identifier	t_boolean		10994097	0					
ANR	10994252	IfStatement	if ( ref1 . value . boolval != ref2 . value . boolval )		10994097	3					
ANR	10994253	Condition	ref1 . value . boolval != ref2 . value . boolval	1798:20:58509:58548	10994097	0	True				
ANR	10994254	EqualityExpression	ref1 . value . boolval != ref2 . value . boolval		10994097	0		!=			
ANR	10994255	MemberAccess	ref1 . value . boolval		10994097	0					
ANR	10994256	MemberAccess	ref1 . value		10994097	0					
ANR	10994257	Identifier	ref1		10994097	0					
ANR	10994258	Identifier	value		10994097	1					
ANR	10994259	Identifier	boolval		10994097	1					
ANR	10994260	MemberAccess	ref2 . value . boolval		10994097	1					
ANR	10994261	MemberAccess	ref2 . value		10994097	0					
ANR	10994262	Identifier	ref2		10994097	0					
ANR	10994263	Identifier	value		10994097	1					
ANR	10994264	Identifier	boolval		10994097	1					
ANR	10994265	ReturnStatement	return 0 ;	1799:20:58571:58579	10994097	1	True				
ANR	10994266	PrimaryExpression	0		10994097	0					
ANR	10994267	BreakStatement	break ;	1800:16:58597:58602	10994097	4	True				
ANR	10994268	Label	case t_integer :	1801:12:58616:58630	10994097	5	True				
ANR	10994269	Identifier	t_integer		10994097	0					
ANR	10994270	IfStatement	if ( ref1 . value . intval != ref2 . value . intval )		10994097	6					
ANR	10994271	Condition	ref1 . value . intval != ref2 . value . intval	1802:20:58652:58689	10994097	0	True				
ANR	10994272	EqualityExpression	ref1 . value . intval != ref2 . value . intval		10994097	0		!=			
ANR	10994273	MemberAccess	ref1 . value . intval		10994097	0					
ANR	10994274	MemberAccess	ref1 . value		10994097	0					
ANR	10994275	Identifier	ref1		10994097	0					
ANR	10994276	Identifier	value		10994097	1					
ANR	10994277	Identifier	intval		10994097	1					
ANR	10994278	MemberAccess	ref2 . value . intval		10994097	1					
ANR	10994279	MemberAccess	ref2 . value		10994097	0					
ANR	10994280	Identifier	ref2		10994097	0					
ANR	10994281	Identifier	value		10994097	1					
ANR	10994282	Identifier	intval		10994097	1					
ANR	10994283	ReturnStatement	return 0 ;	1803:20:58712:58720	10994097	1	True				
ANR	10994284	PrimaryExpression	0		10994097	0					
ANR	10994285	BreakStatement	break ;	1804:16:58738:58743	10994097	7	True				
ANR	10994286	Label	case t_real :	1805:12:58757:58768	10994097	8	True				
ANR	10994287	Identifier	t_real		10994097	0					
ANR	10994288	IfStatement	if ( ref1 . value . realval != ref2 . value . realval )		10994097	9					
ANR	10994289	Condition	ref1 . value . realval != ref2 . value . realval	1806:20:58790:58829	10994097	0	True				
ANR	10994290	EqualityExpression	ref1 . value . realval != ref2 . value . realval		10994097	0		!=			
ANR	10994291	MemberAccess	ref1 . value . realval		10994097	0					
ANR	10994292	MemberAccess	ref1 . value		10994097	0					
ANR	10994293	Identifier	ref1		10994097	0					
ANR	10994294	Identifier	value		10994097	1					
ANR	10994295	Identifier	realval		10994097	1					
ANR	10994296	MemberAccess	ref2 . value . realval		10994097	1					
ANR	10994297	MemberAccess	ref2 . value		10994097	0					
ANR	10994298	Identifier	ref2		10994097	0					
ANR	10994299	Identifier	value		10994097	1					
ANR	10994300	Identifier	realval		10994097	1					
ANR	10994301	ReturnStatement	return 0 ;	1807:20:58852:58860	10994097	1	True				
ANR	10994302	PrimaryExpression	0		10994097	0					
ANR	10994303	BreakStatement	break ;	1808:16:58878:58883	10994097	10	True				
ANR	10994304	Label	case t_name :	1809:12:58897:58908	10994097	11	True				
ANR	10994305	Identifier	t_name		10994097	0					
ANR	10994306	IfStatement	"if ( ! name_eq ( & ref1 , & ref2 ) )"		10994097	12					
ANR	10994307	Condition	"! name_eq ( & ref1 , & ref2 )"	1810:20:58930:58951	10994097	0	True				
ANR	10994308	UnaryOperationExpression	"! name_eq ( & ref1 , & ref2 )"		10994097	0					
ANR	10994309	UnaryOperator	!		10994097	0					
ANR	10994310	CallExpression	"name_eq ( & ref1 , & ref2 )"		10994097	1					
ANR	10994311	Callee	name_eq		10994097	0					
ANR	10994312	Identifier	name_eq		10994097	0					
ANR	10994313	ArgumentList	& ref1		10994097	1					
ANR	10994314	Argument	& ref1		10994097	0					
ANR	10994315	UnaryOperationExpression	& ref1		10994097	0					
ANR	10994316	UnaryOperator	&		10994097	0					
ANR	10994317	Identifier	ref1		10994097	1					
ANR	10994318	Argument	& ref2		10994097	1					
ANR	10994319	UnaryOperationExpression	& ref2		10994097	0					
ANR	10994320	UnaryOperator	&		10994097	0					
ANR	10994321	Identifier	ref2		10994097	1					
ANR	10994322	ReturnStatement	return 0 ;	1811:20:58974:58982	10994097	1	True				
ANR	10994323	PrimaryExpression	0		10994097	0					
ANR	10994324	BreakStatement	break ;	1812:16:59000:59005	10994097	13	True				
ANR	10994325	Label	case t_string :	1813:12:59019:59032	10994097	14	True				
ANR	10994326	Identifier	t_string		10994097	0					
ANR	10994327	IfStatement	if ( r_size ( & ref1 ) != r_size ( & ref2 ) )		10994097	15					
ANR	10994328	Condition	r_size ( & ref1 ) != r_size ( & ref2 )	1814:20:59054:59083	10994097	0	True				
ANR	10994329	EqualityExpression	r_size ( & ref1 ) != r_size ( & ref2 )		10994097	0		!=			
ANR	10994330	CallExpression	r_size ( & ref1 )		10994097	0					
ANR	10994331	Callee	r_size		10994097	0					
ANR	10994332	Identifier	r_size		10994097	0					
ANR	10994333	ArgumentList	& ref1		10994097	1					
ANR	10994334	Argument	& ref1		10994097	0					
ANR	10994335	UnaryOperationExpression	& ref1		10994097	0					
ANR	10994336	UnaryOperator	&		10994097	0					
ANR	10994337	Identifier	ref1		10994097	1					
ANR	10994338	CallExpression	r_size ( & ref2 )		10994097	1					
ANR	10994339	Callee	r_size		10994097	0					
ANR	10994340	Identifier	r_size		10994097	0					
ANR	10994341	ArgumentList	& ref2		10994097	1					
ANR	10994342	Argument	& ref2		10994097	0					
ANR	10994343	UnaryOperationExpression	& ref2		10994097	0					
ANR	10994344	UnaryOperator	&		10994097	0					
ANR	10994345	Identifier	ref2		10994097	1					
ANR	10994346	ReturnStatement	return 0 ;	1815:20:59106:59114	10994097	1	True				
ANR	10994347	PrimaryExpression	0		10994097	0					
ANR	10994348	IfStatement	"if ( strncmp ( ( const char * ) ref1 . value . const_bytes , ( const char * ) ref2 . value . const_bytes , r_size ( & ref1 ) ) != 0 )"		10994097	16					
ANR	10994349	Condition	"strncmp ( ( const char * ) ref1 . value . const_bytes , ( const char * ) ref2 . value . const_bytes , r_size ( & ref1 ) ) != 0"	1816:20:59136:59238	10994097	0	True				
ANR	10994350	EqualityExpression	"strncmp ( ( const char * ) ref1 . value . const_bytes , ( const char * ) ref2 . value . const_bytes , r_size ( & ref1 ) ) != 0"		10994097	0		!=			
ANR	10994351	CallExpression	"strncmp ( ( const char * ) ref1 . value . const_bytes , ( const char * ) ref2 . value . const_bytes , r_size ( & ref1 ) )"		10994097	0					
ANR	10994352	Callee	strncmp		10994097	0					
ANR	10994353	Identifier	strncmp		10994097	0					
ANR	10994354	ArgumentList	( const char * ) ref1 . value . const_bytes		10994097	1					
ANR	10994355	Argument	( const char * ) ref1 . value . const_bytes		10994097	0					
ANR	10994356	CastExpression	( const char * ) ref1 . value . const_bytes		10994097	0					
ANR	10994357	CastTarget	const char *		10994097	0					
ANR	10994358	MemberAccess	ref1 . value . const_bytes		10994097	1					
ANR	10994359	MemberAccess	ref1 . value		10994097	0					
ANR	10994360	Identifier	ref1		10994097	0					
ANR	10994361	Identifier	value		10994097	1					
ANR	10994362	Identifier	const_bytes		10994097	1					
ANR	10994363	Argument	( const char * ) ref2 . value . const_bytes		10994097	1					
ANR	10994364	CastExpression	( const char * ) ref2 . value . const_bytes		10994097	0					
ANR	10994365	CastTarget	const char *		10994097	0					
ANR	10994366	MemberAccess	ref2 . value . const_bytes		10994097	1					
ANR	10994367	MemberAccess	ref2 . value		10994097	0					
ANR	10994368	Identifier	ref2		10994097	0					
ANR	10994369	Identifier	value		10994097	1					
ANR	10994370	Identifier	const_bytes		10994097	1					
ANR	10994371	Argument	r_size ( & ref1 )		10994097	2					
ANR	10994372	CallExpression	r_size ( & ref1 )		10994097	0					
ANR	10994373	Callee	r_size		10994097	0					
ANR	10994374	Identifier	r_size		10994097	0					
ANR	10994375	ArgumentList	& ref1		10994097	1					
ANR	10994376	Argument	& ref1		10994097	0					
ANR	10994377	UnaryOperationExpression	& ref1		10994097	0					
ANR	10994378	UnaryOperator	&		10994097	0					
ANR	10994379	Identifier	ref1		10994097	1					
ANR	10994380	PrimaryExpression	0		10994097	1					
ANR	10994381	ReturnStatement	return 0 ;	1817:20:59261:59269	10994097	1	True				
ANR	10994382	PrimaryExpression	0		10994097	0					
ANR	10994383	BreakStatement	break ;	1818:16:59287:59292	10994097	17	True				
ANR	10994384	Label	case t_array :	1819:12:59306:59318	10994097	18	True				
ANR	10994385	Identifier	t_array		10994097	0					
ANR	10994386	Label	case t_mixedarray :	1820:12:59332:59349	10994097	19	True				
ANR	10994387	Identifier	t_mixedarray		10994097	0					
ANR	10994388	Label	case t_shortarray :	1821:12:59363:59380	10994097	20	True				
ANR	10994389	Identifier	t_shortarray		10994097	0					
ANR	10994390	IfStatement	"if ( ! comparearrays ( i_ctx_p , & ref1 , & ref2 ) )"		10994097	21					
ANR	10994391	Condition	"! comparearrays ( i_ctx_p , & ref1 , & ref2 )"	1822:20:59402:59438	10994097	0	True				
ANR	10994392	UnaryOperationExpression	"! comparearrays ( i_ctx_p , & ref1 , & ref2 )"		10994097	0					
ANR	10994393	UnaryOperator	!		10994097	0					
ANR	10994394	CallExpression	"comparearrays ( i_ctx_p , & ref1 , & ref2 )"		10994097	1					
ANR	10994395	Callee	comparearrays		10994097	0					
ANR	10994396	Identifier	comparearrays		10994097	0					
ANR	10994397	ArgumentList	i_ctx_p		10994097	1					
ANR	10994398	Argument	i_ctx_p		10994097	0					
ANR	10994399	Identifier	i_ctx_p		10994097	0					
ANR	10994400	Argument	& ref1		10994097	1					
ANR	10994401	UnaryOperationExpression	& ref1		10994097	0					
ANR	10994402	UnaryOperator	&		10994097	0					
ANR	10994403	Identifier	ref1		10994097	1					
ANR	10994404	Argument	& ref2		10994097	2					
ANR	10994405	UnaryOperationExpression	& ref2		10994097	0					
ANR	10994406	UnaryOperator	&		10994097	0					
ANR	10994407	Identifier	ref2		10994097	1					
ANR	10994408	ReturnStatement	return 0 ;	1823:20:59461:59469	10994097	1	True				
ANR	10994409	PrimaryExpression	0		10994097	0					
ANR	10994410	BreakStatement	break ;	1824:16:59487:59492	10994097	22	True				
ANR	10994411	Label	case t_oparray :	1825:12:59506:59520	10994097	23	True				
ANR	10994412	Identifier	t_oparray		10994097	0					
ANR	10994413	BreakStatement	break ;	1826:16:59538:59543	10994097	24	True				
ANR	10994414	Label	case t_operator :	1827:12:59557:59572	10994097	25	True				
ANR	10994415	Identifier	t_operator		10994097	0					
ANR	10994416	IfStatement	if ( ref1 . value . opproc != ref2 . value . opproc )		10994097	26					
ANR	10994417	Condition	ref1 . value . opproc != ref2 . value . opproc	1828:20:59594:59631	10994097	0	True				
ANR	10994418	EqualityExpression	ref1 . value . opproc != ref2 . value . opproc		10994097	0		!=			
ANR	10994419	MemberAccess	ref1 . value . opproc		10994097	0					
ANR	10994420	MemberAccess	ref1 . value		10994097	0					
ANR	10994421	Identifier	ref1		10994097	0					
ANR	10994422	Identifier	value		10994097	1					
ANR	10994423	Identifier	opproc		10994097	1					
ANR	10994424	MemberAccess	ref2 . value . opproc		10994097	1					
ANR	10994425	MemberAccess	ref2 . value		10994097	0					
ANR	10994426	Identifier	ref2		10994097	0					
ANR	10994427	Identifier	value		10994097	1					
ANR	10994428	Identifier	opproc		10994097	1					
ANR	10994429	ReturnStatement	return 0 ;	1829:20:59654:59662	10994097	1	True				
ANR	10994430	PrimaryExpression	0		10994097	0					
ANR	10994431	BreakStatement	break ;	1830:16:59680:59685	10994097	27	True				
ANR	10994432	Label	case t__invalid :	1831:12:59699:59714	10994097	28	True				
ANR	10994433	Identifier	t__invalid		10994097	0					
ANR	10994434	Label	case t_dictionary :	1832:12:59728:59745	10994097	29	True				
ANR	10994435	Identifier	t_dictionary		10994097	0					
ANR	10994436	Label	case t_file :	1833:12:59759:59770	10994097	30	True				
ANR	10994437	Identifier	t_file		10994097	0					
ANR	10994438	Label	case t_unused_array_ :	1834:12:59784:59804	10994097	31	True				
ANR	10994439	Identifier	t_unused_array_		10994097	0					
ANR	10994440	Label	case t_struct :	1835:12:59818:59831	10994097	32	True				
ANR	10994441	Identifier	t_struct		10994097	0					
ANR	10994442	Label	case t_astruct :	1836:12:59845:59859	10994097	33	True				
ANR	10994443	Identifier	t_astruct		10994097	0					
ANR	10994444	Label	case t_fontID :	1837:12:59873:59886	10994097	34	True				
ANR	10994445	Identifier	t_fontID		10994097	0					
ANR	10994446	Label	case t_save :	1838:12:59900:59911	10994097	35	True				
ANR	10994447	Identifier	t_save		10994097	0					
ANR	10994448	Label	case t_mark :	1839:12:59925:59936	10994097	36	True				
ANR	10994449	Identifier	t_mark		10994097	0					
ANR	10994450	Label	case t_device :	1840:12:59950:59963	10994097	37	True				
ANR	10994451	Identifier	t_device		10994097	0					
ANR	10994452	ReturnStatement	return 0 ;	1841:16:59981:59989	10994097	38	True				
ANR	10994453	PrimaryExpression	0		10994097	0					
ANR	10994454	Label	default :	1842:12:60003:60010	10994097	39	True				
ANR	10994455	Identifier	default		10994097	0					
ANR	10994456	BreakStatement	break ;	1846:16:60214:60219	10994097	40	True				
ANR	10994457	ReturnStatement	return 1 ;	1849:4:60241:60249	10994097	4	True				
ANR	10994458	PrimaryExpression	1		10994097	0					
ANR	10994459	ReturnType	static int		10994097	1					
ANR	10994460	Identifier	comparearrays		10994097	2					
ANR	10994461	ParameterList	"i_ctx_t * i_ctx_p , ref * m1 , ref * m2"		10994097	3					
ANR	10994462	Parameter	i_ctx_t * i_ctx_p	1772:25:57885:57901	10994097	0	True				
ANR	10994463	ParameterType	i_ctx_t *		10994097	0					
ANR	10994464	Identifier	i_ctx_p		10994097	1					
ANR	10994465	Parameter	ref * m1	1772:44:57904:57910	10994097	1	True				
ANR	10994466	ParameterType	ref *		10994097	0					
ANR	10994467	Identifier	m1		10994097	1					
ANR	10994468	Parameter	ref * m2	1772:53:57913:57919	10994097	2	True				
ANR	10994469	ParameterType	ref *		10994097	0					
ANR	10994470	Identifier	m2		10994097	1					
ANR	10994471	CFGEntryNode	ENTRY		10994097		True				
ANR	10994472	CFGExitNode	EXIT		10994097		True				
ANR	10994473	Symbol	ref2 . value . realval		10994097						
ANR	10994474	Symbol	name_eq		10994097						
ANR	10994475	Symbol	code		10994097						
ANR	10994476	Symbol	ref2 . value . intval		10994097						
ANR	10994477	Symbol	ref1 . value . opproc		10994097						
ANR	10994478	Symbol	ref2		10994097						
ANR	10994479	Symbol	ref1		10994097						
ANR	10994480	Symbol	strncmp		10994097						
ANR	10994481	Symbol	ref1 . value . intval		10994097						
ANR	10994482	Symbol	r_size		10994097						
ANR	10994483	Symbol	ref1 . value . boolval		10994097						
ANR	10994484	Symbol	imemory		10994097						
ANR	10994485	Symbol	ref2 . value		10994097						
ANR	10994486	Symbol	r_type		10994097						
ANR	10994487	Symbol	comparearrays		10994097						
ANR	10994488	Symbol	ref1 . value		10994097						
ANR	10994489	Symbol	m1		10994097						
ANR	10994490	Symbol	m2		10994097						
ANR	10994491	Symbol	array_get		10994097						
ANR	10994492	Symbol	& ref1		10994097						
ANR	10994493	Symbol	i		10994097						
ANR	10994494	Symbol	& ref2		10994097						
ANR	10994495	Symbol	ref1 . value . const_bytes		10994097						
ANR	10994496	Symbol	ref1 . value . realval		10994097						
ANR	10994497	Symbol	i_ctx_p		10994097						
ANR	10994498	Symbol	ref2 . value . opproc		10994097						
ANR	10994499	Symbol	ref2 . value . boolval		10994097						
ANR	10994500	Symbol	ref2 . value . const_bytes		10994097						
ANR	10994501	Function	comparedictkey	1856:0:60530:61036							
ANR	10994502	FunctionDef	"comparedictkey (i_ctx_t * i_ctx_p , ref * CIEdict1 , ref * CIEdict2 , char * key)"		10994501	0					
ANR	10994503	CompoundStatement		1857:0:60616:61036	10994501	0					
ANR	10994504	IdentifierDeclStatement	"int code , code1 ;"	1858:4:60622:60637	10994501	0	True				
ANR	10994505	IdentifierDecl	code		10994501	0					
ANR	10994506	IdentifierDeclType	int		10994501	0					
ANR	10994507	Identifier	code		10994501	1					
ANR	10994508	IdentifierDecl	code1		10994501	1					
ANR	10994509	IdentifierDeclType	int		10994501	0					
ANR	10994510	Identifier	code1		10994501	1					
ANR	10994511	IdentifierDeclStatement	"ref * tempref1 , * tempref2 ;"	1859:4:60643:60667	10994501	1	True				
ANR	10994512	IdentifierDecl	* tempref1		10994501	0					
ANR	10994513	IdentifierDeclType	ref *		10994501	0					
ANR	10994514	Identifier	tempref1		10994501	1					
ANR	10994515	IdentifierDecl	* tempref2		10994501	1					
ANR	10994516	IdentifierDeclType	ref *		10994501	0					
ANR	10994517	Identifier	tempref2		10994501	1					
ANR	10994518	ExpressionStatement	"code = dict_find_string ( CIEdict1 , key , & tempref1 )"	1861:4:60674:60723	10994501	2	True				
ANR	10994519	AssignmentExpression	"code = dict_find_string ( CIEdict1 , key , & tempref1 )"		10994501	0		=			
ANR	10994520	Identifier	code		10994501	0					
ANR	10994521	CallExpression	"dict_find_string ( CIEdict1 , key , & tempref1 )"		10994501	1					
ANR	10994522	Callee	dict_find_string		10994501	0					
ANR	10994523	Identifier	dict_find_string		10994501	0					
ANR	10994524	ArgumentList	CIEdict1		10994501	1					
ANR	10994525	Argument	CIEdict1		10994501	0					
ANR	10994526	Identifier	CIEdict1		10994501	0					
ANR	10994527	Argument	key		10994501	1					
ANR	10994528	Identifier	key		10994501	0					
ANR	10994529	Argument	& tempref1		10994501	2					
ANR	10994530	UnaryOperationExpression	& tempref1		10994501	0					
ANR	10994531	UnaryOperator	&		10994501	0					
ANR	10994532	Identifier	tempref1		10994501	1					
ANR	10994533	ExpressionStatement	"code1 = dict_find_string ( CIEdict2 , key , & tempref2 )"	1862:4:60729:60779	10994501	3	True				
ANR	10994534	AssignmentExpression	"code1 = dict_find_string ( CIEdict2 , key , & tempref2 )"		10994501	0		=			
ANR	10994535	Identifier	code1		10994501	0					
ANR	10994536	CallExpression	"dict_find_string ( CIEdict2 , key , & tempref2 )"		10994501	1					
ANR	10994537	Callee	dict_find_string		10994501	0					
ANR	10994538	Identifier	dict_find_string		10994501	0					
ANR	10994539	ArgumentList	CIEdict2		10994501	1					
ANR	10994540	Argument	CIEdict2		10994501	0					
ANR	10994541	Identifier	CIEdict2		10994501	0					
ANR	10994542	Argument	key		10994501	1					
ANR	10994543	Identifier	key		10994501	0					
ANR	10994544	Argument	& tempref2		10994501	2					
ANR	10994545	UnaryOperationExpression	& tempref2		10994501	0					
ANR	10994546	UnaryOperator	&		10994501	0					
ANR	10994547	Identifier	tempref2		10994501	1					
ANR	10994548	IfStatement	if ( code != code1 )		10994501	4					
ANR	10994549	Condition	code != code1	1863:8:60789:60801	10994501	0	True				
ANR	10994550	EqualityExpression	code != code1		10994501	0		!=			
ANR	10994551	Identifier	code		10994501	0					
ANR	10994552	Identifier	code1		10994501	1					
ANR	10994553	ReturnStatement	return 0 ;	1864:8:60812:60820	10994501	1	True				
ANR	10994554	PrimaryExpression	0		10994501	0					
ANR	10994555	IfStatement	if ( code <= 0 )		10994501	5					
ANR	10994556	Condition	code <= 0	1866:8:60831:60839	10994501	0	True				
ANR	10994557	RelationalExpression	code <= 0		10994501	0		<=			
ANR	10994558	Identifier	code		10994501	0					
ANR	10994559	PrimaryExpression	0		10994501	1					
ANR	10994560	ReturnStatement	return 1 ;	1867:8:60850:60858	10994501	1	True				
ANR	10994561	PrimaryExpression	1		10994501	0					
ANR	10994562	IfStatement	if ( r_type ( tempref1 ) != r_type ( tempref2 ) )		10994501	6					
ANR	10994563	Condition	r_type ( tempref1 ) != r_type ( tempref2 )	1869:8:60869:60904	10994501	0	True				
ANR	10994564	EqualityExpression	r_type ( tempref1 ) != r_type ( tempref2 )		10994501	0		!=			
ANR	10994565	CallExpression	r_type ( tempref1 )		10994501	0					
ANR	10994566	Callee	r_type		10994501	0					
ANR	10994567	Identifier	r_type		10994501	0					
ANR	10994568	ArgumentList	tempref1		10994501	1					
ANR	10994569	Argument	tempref1		10994501	0					
ANR	10994570	Identifier	tempref1		10994501	0					
ANR	10994571	CallExpression	r_type ( tempref2 )		10994501	1					
ANR	10994572	Callee	r_type		10994501	0					
ANR	10994573	Identifier	r_type		10994501	0					
ANR	10994574	ArgumentList	tempref2		10994501	1					
ANR	10994575	Argument	tempref2		10994501	0					
ANR	10994576	Identifier	tempref2		10994501	0					
ANR	10994577	ReturnStatement	return 0 ;	1870:8:60915:60923	10994501	1	True				
ANR	10994578	PrimaryExpression	0		10994501	0					
ANR	10994579	IfStatement	if ( r_type ( tempref1 ) == t_null )		10994501	7					
ANR	10994580	Condition	r_type ( tempref1 ) == t_null	1872:8:60934:60959	10994501	0	True				
ANR	10994581	EqualityExpression	r_type ( tempref1 ) == t_null		10994501	0		==			
ANR	10994582	CallExpression	r_type ( tempref1 )		10994501	0					
ANR	10994583	Callee	r_type		10994501	0					
ANR	10994584	Identifier	r_type		10994501	0					
ANR	10994585	ArgumentList	tempref1		10994501	1					
ANR	10994586	Argument	tempref1		10994501	0					
ANR	10994587	Identifier	tempref1		10994501	0					
ANR	10994588	Identifier	t_null		10994501	1					
ANR	10994589	ReturnStatement	return 1 ;	1873:8:60970:60978	10994501	1	True				
ANR	10994590	PrimaryExpression	1		10994501	0					
ANR	10994591	ReturnStatement	"return comparearrays ( i_ctx_p , tempref1 , tempref2 ) ;"	1875:4:60985:61034	10994501	8	True				
ANR	10994592	CallExpression	"comparearrays ( i_ctx_p , tempref1 , tempref2 )"		10994501	0					
ANR	10994593	Callee	comparearrays		10994501	0					
ANR	10994594	Identifier	comparearrays		10994501	0					
ANR	10994595	ArgumentList	i_ctx_p		10994501	1					
ANR	10994596	Argument	i_ctx_p		10994501	0					
ANR	10994597	Identifier	i_ctx_p		10994501	0					
ANR	10994598	Argument	tempref1		10994501	1					
ANR	10994599	Identifier	tempref1		10994501	0					
ANR	10994600	Argument	tempref2		10994501	2					
ANR	10994601	Identifier	tempref2		10994501	0					
ANR	10994602	ReturnType	static int		10994501	1					
ANR	10994603	Identifier	comparedictkey		10994501	2					
ANR	10994604	ParameterList	"i_ctx_t * i_ctx_p , ref * CIEdict1 , ref * CIEdict2 , char * key"		10994501	3					
ANR	10994605	Parameter	i_ctx_t * i_ctx_p	1856:26:60556:60572	10994501	0	True				
ANR	10994606	ParameterType	i_ctx_t *		10994501	0					
ANR	10994607	Identifier	i_ctx_p		10994501	1					
ANR	10994608	Parameter	ref * CIEdict1	1856:45:60575:60587	10994501	1	True				
ANR	10994609	ParameterType	ref *		10994501	0					
ANR	10994610	Identifier	CIEdict1		10994501	1					
ANR	10994611	Parameter	ref * CIEdict2	1856:60:60590:60602	10994501	2	True				
ANR	10994612	ParameterType	ref *		10994501	0					
ANR	10994613	Identifier	CIEdict2		10994501	1					
ANR	10994614	Parameter	char * key	1856:75:60605:60613	10994501	3	True				
ANR	10994615	ParameterType	char *		10994501	0					
ANR	10994616	Identifier	key		10994501	1					
ANR	10994617	CFGEntryNode	ENTRY		10994501		True				
ANR	10994618	CFGExitNode	EXIT		10994501		True				
ANR	10994619	Symbol	comparearrays		10994501						
ANR	10994620	Symbol	code1		10994501						
ANR	10994621	Symbol	code		10994501						
ANR	10994622	Symbol	dict_find_string		10994501						
ANR	10994623	Symbol	tempref2		10994501						
ANR	10994624	Symbol	tempref1		10994501						
ANR	10994625	Symbol	t_null		10994501						
ANR	10994626	Symbol	i_ctx_p		10994501						
ANR	10994627	Symbol	CIEdict1		10994501						
ANR	10994628	Symbol	CIEdict2		10994501						
ANR	10994629	Symbol	key		10994501						
ANR	10994630	Symbol	& tempref1		10994501						
ANR	10994631	Symbol	r_type		10994501						
ANR	10994632	Symbol	& tempref2		10994501						
ANR	10994633	Function	hasharray	1878:0:61039:63168							
ANR	10994634	FunctionDef	"hasharray (i_ctx_t * i_ctx_p , ref * m1 , gs_md5_state_t * md5)"		10994633	0					
ANR	10994635	CompoundStatement		1879:0:61109:63168	10994633	0					
ANR	10994636	IdentifierDeclStatement	"int i , code ;"	1880:4:61115:61126	10994633	0	True				
ANR	10994637	IdentifierDecl	i		10994633	0					
ANR	10994638	IdentifierDeclType	int		10994633	0					
ANR	10994639	Identifier	i		10994633	1					
ANR	10994640	IdentifierDecl	code		10994633	1					
ANR	10994641	IdentifierDeclType	int		10994633	0					
ANR	10994642	Identifier	code		10994633	1					
ANR	10994643	IdentifierDeclStatement	ref ref1 ;	1881:4:61132:61140	10994633	1	True				
ANR	10994644	IdentifierDecl	ref1		10994633	0					
ANR	10994645	IdentifierDeclType	ref		10994633	0					
ANR	10994646	Identifier	ref1		10994633	1					
ANR	10994647	ForStatement	for ( i = 0 ; i < r_size ( m1 ) ; i ++ )		10994633	2					
ANR	10994648	ForInit	i = 0 ;	1883:9:61152:61155	10994633	0	True				
ANR	10994649	AssignmentExpression	i = 0		10994633	0		=			
ANR	10994650	Identifier	i		10994633	0					
ANR	10994651	PrimaryExpression	0		10994633	1					
ANR	10994652	Condition	i < r_size ( m1 )	1883:13:61156:61169	10994633	1	True				
ANR	10994653	RelationalExpression	i < r_size ( m1 )		10994633	0		<			
ANR	10994654	Identifier	i		10994633	0					
ANR	10994655	CallExpression	r_size ( m1 )		10994633	1					
ANR	10994656	Callee	r_size		10994633	0					
ANR	10994657	Identifier	r_size		10994633	0					
ANR	10994658	ArgumentList	m1		10994633	1					
ANR	10994659	Argument	m1		10994633	0					
ANR	10994660	Identifier	m1		10994633	0					
ANR	10994661	PostIncDecOperationExpression	i ++	1883:28:61171:61173	10994633	2	True				
ANR	10994662	Identifier	i		10994633	0					
ANR	10994663	IncDec	++		10994633	1					
ANR	10994664	CompoundStatement		5:33:66:66	10994633	3					
ANR	10994665	ExpressionStatement	"code = array_get ( imemory , m1 , i , & ref1 )"	1884:8:61186:61225	10994633	0	True				
ANR	10994666	AssignmentExpression	"code = array_get ( imemory , m1 , i , & ref1 )"		10994633	0		=			
ANR	10994667	Identifier	code		10994633	0					
ANR	10994668	CallExpression	"array_get ( imemory , m1 , i , & ref1 )"		10994633	1					
ANR	10994669	Callee	array_get		10994633	0					
ANR	10994670	Identifier	array_get		10994633	0					
ANR	10994671	ArgumentList	imemory		10994633	1					
ANR	10994672	Argument	imemory		10994633	0					
ANR	10994673	Identifier	imemory		10994633	0					
ANR	10994674	Argument	m1		10994633	1					
ANR	10994675	Identifier	m1		10994633	0					
ANR	10994676	Argument	i		10994633	2					
ANR	10994677	Identifier	i		10994633	0					
ANR	10994678	Argument	& ref1		10994633	3					
ANR	10994679	UnaryOperationExpression	& ref1		10994633	0					
ANR	10994680	UnaryOperator	&		10994633	0					
ANR	10994681	Identifier	ref1		10994633	1					
ANR	10994682	IfStatement	if ( code < 0 )		10994633	1					
ANR	10994683	Condition	code < 0	1885:12:61239:61246	10994633	0	True				
ANR	10994684	RelationalExpression	code < 0		10994633	0		<			
ANR	10994685	Identifier	code		10994633	0					
ANR	10994686	PrimaryExpression	0		10994633	1					
ANR	10994687	ReturnStatement	return 0 ;	1886:12:61261:61269	10994633	1	True				
ANR	10994688	PrimaryExpression	0		10994633	0					
ANR	10994689	ExpressionStatement	code = r_type ( & ref1 )	1888:8:61280:61300	10994633	2	True				
ANR	10994690	AssignmentExpression	code = r_type ( & ref1 )		10994633	0		=			
ANR	10994691	Identifier	code		10994633	0					
ANR	10994692	CallExpression	r_type ( & ref1 )		10994633	1					
ANR	10994693	Callee	r_type		10994633	0					
ANR	10994694	Identifier	r_type		10994633	0					
ANR	10994695	ArgumentList	& ref1		10994633	1					
ANR	10994696	Argument	& ref1		10994633	0					
ANR	10994697	UnaryOperationExpression	& ref1		10994633	0					
ANR	10994698	UnaryOperator	&		10994633	0					
ANR	10994699	Identifier	ref1		10994633	1					
ANR	10994700	IfStatement	if ( code < 0 )		10994633	3					
ANR	10994701	Condition	code < 0	1889:12:61314:61321	10994633	0	True				
ANR	10994702	RelationalExpression	code < 0		10994633	0		<			
ANR	10994703	Identifier	code		10994633	0					
ANR	10994704	PrimaryExpression	0		10994633	1					
ANR	10994705	ReturnStatement	return code ;	1890:12:61336:61347	10994633	1	True				
ANR	10994706	Identifier	code		10994633	0					
ANR	10994707	SwitchStatement	switch ( r_type ( & ref1 ) )		10994633	4					
ANR	10994708	Condition	r_type ( & ref1 )	1891:15:61364:61376	10994633	0	True				
ANR	10994709	CallExpression	r_type ( & ref1 )		10994633	0					
ANR	10994710	Callee	r_type		10994633	0					
ANR	10994711	Identifier	r_type		10994633	0					
ANR	10994712	ArgumentList	& ref1		10994633	1					
ANR	10994713	Argument	& ref1		10994633	0					
ANR	10994714	UnaryOperationExpression	& ref1		10994633	0					
ANR	10994715	UnaryOperator	&		10994633	0					
ANR	10994716	Identifier	ref1		10994633	1					
ANR	10994717	CompoundStatement		13:30:269:269	10994633	1					
ANR	10994718	Label	case t_null :	1892:12:61393:61404	10994633	0	True				
ANR	10994719	Identifier	t_null		10994633	0					
ANR	10994720	BreakStatement	break ;	1893:16:61422:61427	10994633	1	True				
ANR	10994721	Label	case t_boolean :	1894:12:61441:61455	10994633	2	True				
ANR	10994722	Identifier	t_boolean		10994633	0					
ANR	10994723	ExpressionStatement	"gs_md5_append ( md5 , ( const gs_md5_byte_t * ) & ref1 . value . boolval , sizeof ( ref1 . value . boolval ) )"	1895:16:61473:61563	10994633	3	True				
ANR	10994724	CallExpression	"gs_md5_append ( md5 , ( const gs_md5_byte_t * ) & ref1 . value . boolval , sizeof ( ref1 . value . boolval ) )"		10994633	0					
ANR	10994725	Callee	gs_md5_append		10994633	0					
ANR	10994726	Identifier	gs_md5_append		10994633	0					
ANR	10994727	ArgumentList	md5		10994633	1					
ANR	10994728	Argument	md5		10994633	0					
ANR	10994729	Identifier	md5		10994633	0					
ANR	10994730	Argument	( const gs_md5_byte_t * ) & ref1 . value . boolval		10994633	1					
ANR	10994731	CastExpression	( const gs_md5_byte_t * ) & ref1 . value . boolval		10994633	0					
ANR	10994732	CastTarget	const gs_md5_byte_t *		10994633	0					
ANR	10994733	UnaryOperationExpression	& ref1 . value . boolval		10994633	1					
ANR	10994734	UnaryOperator	&		10994633	0					
ANR	10994735	MemberAccess	ref1 . value . boolval		10994633	1					
ANR	10994736	MemberAccess	ref1 . value		10994633	0					
ANR	10994737	Identifier	ref1		10994633	0					
ANR	10994738	Identifier	value		10994633	1					
ANR	10994739	Identifier	boolval		10994633	1					
ANR	10994740	Argument	sizeof ( ref1 . value . boolval )		10994633	2					
ANR	10994741	SizeofExpression	sizeof ( ref1 . value . boolval )		10994633	0					
ANR	10994742	Sizeof	sizeof		10994633	0					
ANR	10994743	MemberAccess	ref1 . value . boolval		10994633	1					
ANR	10994744	MemberAccess	ref1 . value		10994633	0					
ANR	10994745	Identifier	ref1		10994633	0					
ANR	10994746	Identifier	value		10994633	1					
ANR	10994747	Identifier	boolval		10994633	1					
ANR	10994748	BreakStatement	break ;	1896:16:61581:61586	10994633	4	True				
ANR	10994749	Label	case t_integer :	1897:12:61600:61614	10994633	5	True				
ANR	10994750	Identifier	t_integer		10994633	0					
ANR	10994751	ExpressionStatement	"gs_md5_append ( md5 , ( const gs_md5_byte_t * ) & ref1 . value . intval , sizeof ( ref1 . value . intval ) )"	1898:16:61632:61720	10994633	6	True				
ANR	10994752	CallExpression	"gs_md5_append ( md5 , ( const gs_md5_byte_t * ) & ref1 . value . intval , sizeof ( ref1 . value . intval ) )"		10994633	0					
ANR	10994753	Callee	gs_md5_append		10994633	0					
ANR	10994754	Identifier	gs_md5_append		10994633	0					
ANR	10994755	ArgumentList	md5		10994633	1					
ANR	10994756	Argument	md5		10994633	0					
ANR	10994757	Identifier	md5		10994633	0					
ANR	10994758	Argument	( const gs_md5_byte_t * ) & ref1 . value . intval		10994633	1					
ANR	10994759	CastExpression	( const gs_md5_byte_t * ) & ref1 . value . intval		10994633	0					
ANR	10994760	CastTarget	const gs_md5_byte_t *		10994633	0					
ANR	10994761	UnaryOperationExpression	& ref1 . value . intval		10994633	1					
ANR	10994762	UnaryOperator	&		10994633	0					
ANR	10994763	MemberAccess	ref1 . value . intval		10994633	1					
ANR	10994764	MemberAccess	ref1 . value		10994633	0					
ANR	10994765	Identifier	ref1		10994633	0					
ANR	10994766	Identifier	value		10994633	1					
ANR	10994767	Identifier	intval		10994633	1					
ANR	10994768	Argument	sizeof ( ref1 . value . intval )		10994633	2					
ANR	10994769	SizeofExpression	sizeof ( ref1 . value . intval )		10994633	0					
ANR	10994770	Sizeof	sizeof		10994633	0					
ANR	10994771	MemberAccess	ref1 . value . intval		10994633	1					
ANR	10994772	MemberAccess	ref1 . value		10994633	0					
ANR	10994773	Identifier	ref1		10994633	0					
ANR	10994774	Identifier	value		10994633	1					
ANR	10994775	Identifier	intval		10994633	1					
ANR	10994776	BreakStatement	break ;	1899:16:61738:61743	10994633	7	True				
ANR	10994777	Label	case t_real :	1900:12:61757:61768	10994633	8	True				
ANR	10994778	Identifier	t_real		10994633	0					
ANR	10994779	ExpressionStatement	"gs_md5_append ( md5 , ( const gs_md5_byte_t * ) & ref1 . value . realval , sizeof ( ref1 . value . realval ) )"	1901:16:61786:61876	10994633	9	True				
ANR	10994780	CallExpression	"gs_md5_append ( md5 , ( const gs_md5_byte_t * ) & ref1 . value . realval , sizeof ( ref1 . value . realval ) )"		10994633	0					
ANR	10994781	Callee	gs_md5_append		10994633	0					
ANR	10994782	Identifier	gs_md5_append		10994633	0					
ANR	10994783	ArgumentList	md5		10994633	1					
ANR	10994784	Argument	md5		10994633	0					
ANR	10994785	Identifier	md5		10994633	0					
ANR	10994786	Argument	( const gs_md5_byte_t * ) & ref1 . value . realval		10994633	1					
ANR	10994787	CastExpression	( const gs_md5_byte_t * ) & ref1 . value . realval		10994633	0					
ANR	10994788	CastTarget	const gs_md5_byte_t *		10994633	0					
ANR	10994789	UnaryOperationExpression	& ref1 . value . realval		10994633	1					
ANR	10994790	UnaryOperator	&		10994633	0					
ANR	10994791	MemberAccess	ref1 . value . realval		10994633	1					
ANR	10994792	MemberAccess	ref1 . value		10994633	0					
ANR	10994793	Identifier	ref1		10994633	0					
ANR	10994794	Identifier	value		10994633	1					
ANR	10994795	Identifier	realval		10994633	1					
ANR	10994796	Argument	sizeof ( ref1 . value . realval )		10994633	2					
ANR	10994797	SizeofExpression	sizeof ( ref1 . value . realval )		10994633	0					
ANR	10994798	Sizeof	sizeof		10994633	0					
ANR	10994799	MemberAccess	ref1 . value . realval		10994633	1					
ANR	10994800	MemberAccess	ref1 . value		10994633	0					
ANR	10994801	Identifier	ref1		10994633	0					
ANR	10994802	Identifier	value		10994633	1					
ANR	10994803	Identifier	realval		10994633	1					
ANR	10994804	BreakStatement	break ;	1902:16:61894:61899	10994633	10	True				
ANR	10994805	Label	case t_name :	1903:12:61913:61924	10994633	11	True				
ANR	10994806	Identifier	t_name		10994633	0					
ANR	10994807	ExpressionStatement	"gs_md5_append ( md5 , ( const gs_md5_byte_t * ) & ref1 . value . pname , sizeof ( ref1 . value . pname ) )"	1904:16:61942:62028	10994633	12	True				
ANR	10994808	CallExpression	"gs_md5_append ( md5 , ( const gs_md5_byte_t * ) & ref1 . value . pname , sizeof ( ref1 . value . pname ) )"		10994633	0					
ANR	10994809	Callee	gs_md5_append		10994633	0					
ANR	10994810	Identifier	gs_md5_append		10994633	0					
ANR	10994811	ArgumentList	md5		10994633	1					
ANR	10994812	Argument	md5		10994633	0					
ANR	10994813	Identifier	md5		10994633	0					
ANR	10994814	Argument	( const gs_md5_byte_t * ) & ref1 . value . pname		10994633	1					
ANR	10994815	CastExpression	( const gs_md5_byte_t * ) & ref1 . value . pname		10994633	0					
ANR	10994816	CastTarget	const gs_md5_byte_t *		10994633	0					
ANR	10994817	UnaryOperationExpression	& ref1 . value . pname		10994633	1					
ANR	10994818	UnaryOperator	&		10994633	0					
ANR	10994819	MemberAccess	ref1 . value . pname		10994633	1					
ANR	10994820	MemberAccess	ref1 . value		10994633	0					
ANR	10994821	Identifier	ref1		10994633	0					
ANR	10994822	Identifier	value		10994633	1					
ANR	10994823	Identifier	pname		10994633	1					
ANR	10994824	Argument	sizeof ( ref1 . value . pname )		10994633	2					
ANR	10994825	SizeofExpression	sizeof ( ref1 . value . pname )		10994633	0					
ANR	10994826	Sizeof	sizeof		10994633	0					
ANR	10994827	MemberAccess	ref1 . value . pname		10994633	1					
ANR	10994828	MemberAccess	ref1 . value		10994633	0					
ANR	10994829	Identifier	ref1		10994633	0					
ANR	10994830	Identifier	value		10994633	1					
ANR	10994831	Identifier	pname		10994633	1					
ANR	10994832	BreakStatement	break ;	1905:16:62046:62051	10994633	13	True				
ANR	10994833	Label	case t_string :	1906:12:62065:62078	10994633	14	True				
ANR	10994834	Identifier	t_string		10994633	0					
ANR	10994835	ExpressionStatement	"gs_md5_append ( md5 , ( const gs_md5_byte_t * ) ref1 . value . const_bytes , r_size ( & ref1 ) )"	1907:16:62096:62176	10994633	15	True				
ANR	10994836	CallExpression	"gs_md5_append ( md5 , ( const gs_md5_byte_t * ) ref1 . value . const_bytes , r_size ( & ref1 ) )"		10994633	0					
ANR	10994837	Callee	gs_md5_append		10994633	0					
ANR	10994838	Identifier	gs_md5_append		10994633	0					
ANR	10994839	ArgumentList	md5		10994633	1					
ANR	10994840	Argument	md5		10994633	0					
ANR	10994841	Identifier	md5		10994633	0					
ANR	10994842	Argument	( const gs_md5_byte_t * ) ref1 . value . const_bytes		10994633	1					
ANR	10994843	CastExpression	( const gs_md5_byte_t * ) ref1 . value . const_bytes		10994633	0					
ANR	10994844	CastTarget	const gs_md5_byte_t *		10994633	0					
ANR	10994845	MemberAccess	ref1 . value . const_bytes		10994633	1					
ANR	10994846	MemberAccess	ref1 . value		10994633	0					
ANR	10994847	Identifier	ref1		10994633	0					
ANR	10994848	Identifier	value		10994633	1					
ANR	10994849	Identifier	const_bytes		10994633	1					
ANR	10994850	Argument	r_size ( & ref1 )		10994633	2					
ANR	10994851	CallExpression	r_size ( & ref1 )		10994633	0					
ANR	10994852	Callee	r_size		10994633	0					
ANR	10994853	Identifier	r_size		10994633	0					
ANR	10994854	ArgumentList	& ref1		10994633	1					
ANR	10994855	Argument	& ref1		10994633	0					
ANR	10994856	UnaryOperationExpression	& ref1		10994633	0					
ANR	10994857	UnaryOperator	&		10994633	0					
ANR	10994858	Identifier	ref1		10994633	1					
ANR	10994859	BreakStatement	break ;	1908:16:62194:62199	10994633	16	True				
ANR	10994860	Label	case t_array :	1909:12:62213:62225	10994633	17	True				
ANR	10994861	Identifier	t_array		10994633	0					
ANR	10994862	Label	case t_mixedarray :	1910:12:62239:62256	10994633	18	True				
ANR	10994863	Identifier	t_mixedarray		10994633	0					
ANR	10994864	Label	case t_shortarray :	1911:12:62270:62287	10994633	19	True				
ANR	10994865	Identifier	t_shortarray		10994633	0					
ANR	10994866	IfStatement	"if ( ! hasharray ( i_ctx_p , & ref1 , md5 ) )"		10994633	20					
ANR	10994867	Condition	"! hasharray ( i_ctx_p , & ref1 , md5 )"	1912:20:62309:62339	10994633	0	True				
ANR	10994868	UnaryOperationExpression	"! hasharray ( i_ctx_p , & ref1 , md5 )"		10994633	0					
ANR	10994869	UnaryOperator	!		10994633	0					
ANR	10994870	CallExpression	"hasharray ( i_ctx_p , & ref1 , md5 )"		10994633	1					
ANR	10994871	Callee	hasharray		10994633	0					
ANR	10994872	Identifier	hasharray		10994633	0					
ANR	10994873	ArgumentList	i_ctx_p		10994633	1					
ANR	10994874	Argument	i_ctx_p		10994633	0					
ANR	10994875	Identifier	i_ctx_p		10994633	0					
ANR	10994876	Argument	& ref1		10994633	1					
ANR	10994877	UnaryOperationExpression	& ref1		10994633	0					
ANR	10994878	UnaryOperator	&		10994633	0					
ANR	10994879	Identifier	ref1		10994633	1					
ANR	10994880	Argument	md5		10994633	2					
ANR	10994881	Identifier	md5		10994633	0					
ANR	10994882	ReturnStatement	return 0 ;	1913:20:62362:62370	10994633	1	True				
ANR	10994883	PrimaryExpression	0		10994633	0					
ANR	10994884	BreakStatement	break ;	1914:16:62388:62393	10994633	21	True				
ANR	10994885	Label	case t_oparray :	1915:12:62407:62421	10994633	22	True				
ANR	10994886	Identifier	t_oparray		10994633	0					
ANR	10994887	BreakStatement	break ;	1916:16:62439:62444	10994633	23	True				
ANR	10994888	Label	case t_operator :	1917:12:62458:62473	10994633	24	True				
ANR	10994889	Identifier	t_operator		10994633	0					
ANR	10994890	ExpressionStatement	"gs_md5_append ( md5 , ( const gs_md5_byte_t * ) & ref1 . value . opproc , sizeof ( ref1 . value . opproc ) )"	1918:16:62491:62579	10994633	25	True				
ANR	10994891	CallExpression	"gs_md5_append ( md5 , ( const gs_md5_byte_t * ) & ref1 . value . opproc , sizeof ( ref1 . value . opproc ) )"		10994633	0					
ANR	10994892	Callee	gs_md5_append		10994633	0					
ANR	10994893	Identifier	gs_md5_append		10994633	0					
ANR	10994894	ArgumentList	md5		10994633	1					
ANR	10994895	Argument	md5		10994633	0					
ANR	10994896	Identifier	md5		10994633	0					
ANR	10994897	Argument	( const gs_md5_byte_t * ) & ref1 . value . opproc		10994633	1					
ANR	10994898	CastExpression	( const gs_md5_byte_t * ) & ref1 . value . opproc		10994633	0					
ANR	10994899	CastTarget	const gs_md5_byte_t *		10994633	0					
ANR	10994900	UnaryOperationExpression	& ref1 . value . opproc		10994633	1					
ANR	10994901	UnaryOperator	&		10994633	0					
ANR	10994902	MemberAccess	ref1 . value . opproc		10994633	1					
ANR	10994903	MemberAccess	ref1 . value		10994633	0					
ANR	10994904	Identifier	ref1		10994633	0					
ANR	10994905	Identifier	value		10994633	1					
ANR	10994906	Identifier	opproc		10994633	1					
ANR	10994907	Argument	sizeof ( ref1 . value . opproc )		10994633	2					
ANR	10994908	SizeofExpression	sizeof ( ref1 . value . opproc )		10994633	0					
ANR	10994909	Sizeof	sizeof		10994633	0					
ANR	10994910	MemberAccess	ref1 . value . opproc		10994633	1					
ANR	10994911	MemberAccess	ref1 . value		10994633	0					
ANR	10994912	Identifier	ref1		10994633	0					
ANR	10994913	Identifier	value		10994633	1					
ANR	10994914	Identifier	opproc		10994633	1					
ANR	10994915	BreakStatement	break ;	1919:16:62597:62602	10994633	26	True				
ANR	10994916	Label	case t__invalid :	1920:12:62616:62631	10994633	27	True				
ANR	10994917	Identifier	t__invalid		10994633	0					
ANR	10994918	Label	case t_dictionary :	1921:12:62645:62662	10994633	28	True				
ANR	10994919	Identifier	t_dictionary		10994633	0					
ANR	10994920	Label	case t_file :	1922:12:62676:62687	10994633	29	True				
ANR	10994921	Identifier	t_file		10994633	0					
ANR	10994922	Label	case t_unused_array_ :	1923:12:62701:62721	10994633	30	True				
ANR	10994923	Identifier	t_unused_array_		10994633	0					
ANR	10994924	Label	case t_struct :	1924:12:62735:62748	10994633	31	True				
ANR	10994925	Identifier	t_struct		10994633	0					
ANR	10994926	Label	case t_astruct :	1925:12:62762:62776	10994633	32	True				
ANR	10994927	Identifier	t_astruct		10994633	0					
ANR	10994928	Label	case t_fontID :	1926:12:62790:62803	10994633	33	True				
ANR	10994929	Identifier	t_fontID		10994633	0					
ANR	10994930	Label	case t_save :	1927:12:62817:62828	10994633	34	True				
ANR	10994931	Identifier	t_save		10994633	0					
ANR	10994932	Label	case t_mark :	1928:12:62842:62853	10994633	35	True				
ANR	10994933	Identifier	t_mark		10994633	0					
ANR	10994934	Label	case t_device :	1929:12:62867:62880	10994633	36	True				
ANR	10994935	Identifier	t_device		10994633	0					
ANR	10994936	ReturnStatement	return 0 ;	1930:16:62898:62906	10994633	37	True				
ANR	10994937	PrimaryExpression	0		10994633	0					
ANR	10994938	Label	default :	1931:12:62920:62927	10994633	38	True				
ANR	10994939	Identifier	default		10994633	0					
ANR	10994940	BreakStatement	break ;	1935:16:63131:63136	10994633	39	True				
ANR	10994941	ReturnStatement	return 1 ;	1938:4:63158:63166	10994633	3	True				
ANR	10994942	PrimaryExpression	1		10994633	0					
ANR	10994943	ReturnType	static int		10994633	1					
ANR	10994944	Identifier	hasharray		10994633	2					
ANR	10994945	ParameterList	"i_ctx_t * i_ctx_p , ref * m1 , gs_md5_state_t * md5"		10994633	3					
ANR	10994946	Parameter	i_ctx_t * i_ctx_p	1878:21:61060:61076	10994633	0	True				
ANR	10994947	ParameterType	i_ctx_t *		10994633	0					
ANR	10994948	Identifier	i_ctx_p		10994633	1					
ANR	10994949	Parameter	ref * m1	1878:40:61079:61085	10994633	1	True				
ANR	10994950	ParameterType	ref *		10994633	0					
ANR	10994951	Identifier	m1		10994633	1					
ANR	10994952	Parameter	gs_md5_state_t * md5	1878:49:61088:61106	10994633	2	True				
ANR	10994953	ParameterType	gs_md5_state_t *		10994633	0					
ANR	10994954	Identifier	md5		10994633	1					
ANR	10994955	CFGEntryNode	ENTRY		10994633		True				
ANR	10994956	CFGExitNode	EXIT		10994633		True				
ANR	10994957	Symbol	code		10994633						
ANR	10994958	Symbol	& ref1 . value . pname		10994633						
ANR	10994959	Symbol	ref1 . value . opproc		10994633						
ANR	10994960	Symbol	ref1		10994633						
ANR	10994961	Symbol	ref1 . value . pname		10994633						
ANR	10994962	Symbol	& ref1 . value . opproc		10994633						
ANR	10994963	Symbol	ref1 . value . intval		10994633						
ANR	10994964	Symbol	r_size		10994633						
ANR	10994965	Symbol	ref1 . value . boolval		10994633						
ANR	10994966	Symbol	& ref1 . value . realval		10994633						
ANR	10994967	Symbol	imemory		10994633						
ANR	10994968	Symbol	hasharray		10994633						
ANR	10994969	Symbol	& ref1 . value		10994633						
ANR	10994970	Symbol	r_type		10994633						
ANR	10994971	Symbol	ref1 . value		10994633						
ANR	10994972	Symbol	m1		10994633						
ANR	10994973	Symbol	array_get		10994633						
ANR	10994974	Symbol	& ref1		10994633						
ANR	10994975	Symbol	i		10994633						
ANR	10994976	Symbol	ref1 . value . const_bytes		10994633						
ANR	10994977	Symbol	& ref1 . value . intval		10994633						
ANR	10994978	Symbol	ref1 . value . realval		10994633						
ANR	10994979	Symbol	i_ctx_p		10994633						
ANR	10994980	Symbol	md5		10994633						
ANR	10994981	Symbol	& ref1 . value . boolval		10994633						
ANR	10994982	Function	hashdictkey	1941:0:63171:63490							
ANR	10994983	FunctionDef	"hashdictkey (i_ctx_t * i_ctx_p , ref * CIEdict1 , char * key , gs_md5_state_t * md5)"		10994982	0					
ANR	10994984	CompoundStatement		1942:0:63260:63490	10994982	0					
ANR	10994985	IdentifierDeclStatement	int code ;	1943:4:63266:63274	10994982	0	True				
ANR	10994986	IdentifierDecl	code		10994982	0					
ANR	10994987	IdentifierDeclType	int		10994982	0					
ANR	10994988	Identifier	code		10994982	1					
ANR	10994989	IdentifierDeclStatement	ref * tempref1 ;	1944:4:63280:63293	10994982	1	True				
ANR	10994990	IdentifierDecl	* tempref1		10994982	0					
ANR	10994991	IdentifierDeclType	ref *		10994982	0					
ANR	10994992	Identifier	tempref1		10994982	1					
ANR	10994993	ExpressionStatement	"code = dict_find_string ( CIEdict1 , key , & tempref1 )"	1946:4:63300:63349	10994982	2	True				
ANR	10994994	AssignmentExpression	"code = dict_find_string ( CIEdict1 , key , & tempref1 )"		10994982	0		=			
ANR	10994995	Identifier	code		10994982	0					
ANR	10994996	CallExpression	"dict_find_string ( CIEdict1 , key , & tempref1 )"		10994982	1					
ANR	10994997	Callee	dict_find_string		10994982	0					
ANR	10994998	Identifier	dict_find_string		10994982	0					
ANR	10994999	ArgumentList	CIEdict1		10994982	1					
ANR	10995000	Argument	CIEdict1		10994982	0					
ANR	10995001	Identifier	CIEdict1		10994982	0					
ANR	10995002	Argument	key		10994982	1					
ANR	10995003	Identifier	key		10994982	0					
ANR	10995004	Argument	& tempref1		10994982	2					
ANR	10995005	UnaryOperationExpression	& tempref1		10994982	0					
ANR	10995006	UnaryOperator	&		10994982	0					
ANR	10995007	Identifier	tempref1		10994982	1					
ANR	10995008	IfStatement	if ( code <= 0 )		10994982	3					
ANR	10995009	Condition	code <= 0	1947:8:63359:63367	10994982	0	True				
ANR	10995010	RelationalExpression	code <= 0		10994982	0		<=			
ANR	10995011	Identifier	code		10994982	0					
ANR	10995012	PrimaryExpression	0		10994982	1					
ANR	10995013	ReturnStatement	return 1 ;	1948:8:63378:63386	10994982	1	True				
ANR	10995014	PrimaryExpression	1		10994982	0					
ANR	10995015	IfStatement	if ( r_type ( tempref1 ) == t_null )		10994982	4					
ANR	10995016	Condition	r_type ( tempref1 ) == t_null	1950:8:63397:63422	10994982	0	True				
ANR	10995017	EqualityExpression	r_type ( tempref1 ) == t_null		10994982	0		==			
ANR	10995018	CallExpression	r_type ( tempref1 )		10994982	0					
ANR	10995019	Callee	r_type		10994982	0					
ANR	10995020	Identifier	r_type		10994982	0					
ANR	10995021	ArgumentList	tempref1		10994982	1					
ANR	10995022	Argument	tempref1		10994982	0					
ANR	10995023	Identifier	tempref1		10994982	0					
ANR	10995024	Identifier	t_null		10994982	1					
ANR	10995025	ReturnStatement	return 1 ;	1951:8:63433:63441	10994982	1	True				
ANR	10995026	PrimaryExpression	1		10994982	0					
ANR	10995027	ReturnStatement	"return hasharray ( i_ctx_p , tempref1 , md5 ) ;"	1953:4:63448:63488	10994982	5	True				
ANR	10995028	CallExpression	"hasharray ( i_ctx_p , tempref1 , md5 )"		10994982	0					
ANR	10995029	Callee	hasharray		10994982	0					
ANR	10995030	Identifier	hasharray		10994982	0					
ANR	10995031	ArgumentList	i_ctx_p		10994982	1					
ANR	10995032	Argument	i_ctx_p		10994982	0					
ANR	10995033	Identifier	i_ctx_p		10994982	0					
ANR	10995034	Argument	tempref1		10994982	1					
ANR	10995035	Identifier	tempref1		10994982	0					
ANR	10995036	Argument	md5		10994982	2					
ANR	10995037	Identifier	md5		10994982	0					
ANR	10995038	ReturnType	static int		10994982	1					
ANR	10995039	Identifier	hashdictkey		10994982	2					
ANR	10995040	ParameterList	"i_ctx_t * i_ctx_p , ref * CIEdict1 , char * key , gs_md5_state_t * md5"		10994982	3					
ANR	10995041	Parameter	i_ctx_t * i_ctx_p	1941:23:63194:63210	10994982	0	True				
ANR	10995042	ParameterType	i_ctx_t *		10994982	0					
ANR	10995043	Identifier	i_ctx_p		10994982	1					
ANR	10995044	Parameter	ref * CIEdict1	1941:42:63213:63225	10994982	1	True				
ANR	10995045	ParameterType	ref *		10994982	0					
ANR	10995046	Identifier	CIEdict1		10994982	1					
ANR	10995047	Parameter	char * key	1941:57:63228:63236	10994982	2	True				
ANR	10995048	ParameterType	char *		10994982	0					
ANR	10995049	Identifier	key		10994982	1					
ANR	10995050	Parameter	gs_md5_state_t * md5	1941:68:63239:63257	10994982	3	True				
ANR	10995051	ParameterType	gs_md5_state_t *		10994982	0					
ANR	10995052	Identifier	md5		10994982	1					
ANR	10995053	CFGEntryNode	ENTRY		10994982		True				
ANR	10995054	CFGExitNode	EXIT		10994982		True				
ANR	10995055	Symbol	t_null		10994982						
ANR	10995056	Symbol	code		10994982						
ANR	10995057	Symbol	dict_find_string		10994982						
ANR	10995058	Symbol	i_ctx_p		10994982						
ANR	10995059	Symbol	CIEdict1		10994982						
ANR	10995060	Symbol	hasharray		10994982						
ANR	10995061	Symbol	key		10994982						
ANR	10995062	Symbol	& tempref1		10994982						
ANR	10995063	Symbol	r_type		10994982						
ANR	10995064	Symbol	md5		10994982						
ANR	10995065	Symbol	tempref1		10994982						
ANR	10995066	Function	get_cie_param_array	1956:0:63493:64051							
ANR	10995067	FunctionDef	"get_cie_param_array (const gs_memory_t * mem , const ref * src , int n , float * dst)"		10995066	0					
ANR	10995068	CompoundStatement		1956:91:63584:64051	10995066	0					
ANR	10995069	IdentifierDeclStatement	ref valref ;	1957:1:63587:63597	10995066	0	True				
ANR	10995070	IdentifierDecl	valref		10995066	0					
ANR	10995071	IdentifierDeclType	ref		10995066	0					
ANR	10995072	Identifier	valref		10995066	1					
ANR	10995073	IdentifierDeclStatement	int i ;	1958:4:63603:63608	10995066	1	True				
ANR	10995074	IdentifierDecl	i		10995066	0					
ANR	10995075	IdentifierDeclType	int		10995066	0					
ANR	10995076	Identifier	i		10995066	1					
ANR	10995077	IdentifierDeclStatement	int code = 0 ;	1959:4:63614:63626	10995066	2	True				
ANR	10995078	IdentifierDecl	code = 0		10995066	0					
ANR	10995079	IdentifierDeclType	int		10995066	0					
ANR	10995080	Identifier	code		10995066	1					
ANR	10995081	AssignmentExpression	code = 0		10995066	2		=			
ANR	10995082	Identifier	code		10995066	0					
ANR	10995083	PrimaryExpression	0		10995066	1					
ANR	10995084	ForStatement	for ( i = 0 ; i < n ; i ++ )		10995066	3					
ANR	10995085	ForInit	i = 0 ;	1961:9:63638:63643	10995066	0	True				
ANR	10995086	AssignmentExpression	i = 0		10995066	0		=			
ANR	10995087	Identifier	i		10995066	0					
ANR	10995088	PrimaryExpression	0		10995066	1					
ANR	10995089	Condition	i < n	1961:16:63645:63649	10995066	1	True				
ANR	10995090	RelationalExpression	i < n		10995066	0		<			
ANR	10995091	Identifier	i		10995066	0					
ANR	10995092	Identifier	n		10995066	1					
ANR	10995093	PostIncDecOperationExpression	i ++	1961:23:63652:63654	10995066	2	True				
ANR	10995094	Identifier	i		10995066	0					
ANR	10995095	IncDec	++		10995066	1					
ANR	10995096	CompoundStatement		6:28:72:72	10995066	3					
ANR	10995097	ExpressionStatement	"code = array_get ( mem , src , i , & valref )"	1962:2:63661:63699	10995066	0	True				
ANR	10995098	AssignmentExpression	"code = array_get ( mem , src , i , & valref )"		10995066	0		=			
ANR	10995099	Identifier	code		10995066	0					
ANR	10995100	CallExpression	"array_get ( mem , src , i , & valref )"		10995066	1					
ANR	10995101	Callee	array_get		10995066	0					
ANR	10995102	Identifier	array_get		10995066	0					
ANR	10995103	ArgumentList	mem		10995066	1					
ANR	10995104	Argument	mem		10995066	0					
ANR	10995105	Identifier	mem		10995066	0					
ANR	10995106	Argument	src		10995066	1					
ANR	10995107	Identifier	src		10995066	0					
ANR	10995108	Argument	i		10995066	2					
ANR	10995109	Identifier	i		10995066	0					
ANR	10995110	Argument	& valref		10995066	3					
ANR	10995111	UnaryOperationExpression	& valref		10995066	0					
ANR	10995112	UnaryOperator	&		10995066	0					
ANR	10995113	Identifier	valref		10995066	1					
ANR	10995114	IfStatement	if ( code < 0 )		10995066	1					
ANR	10995115	Condition	code < 0	1963:6:63707:63714	10995066	0	True				
ANR	10995116	RelationalExpression	code < 0		10995066	0		<			
ANR	10995117	Identifier	code		10995066	0					
ANR	10995118	PrimaryExpression	0		10995066	1					
ANR	10995119	ReturnStatement	return code ;	1964:3:63720:63731	10995066	1	True				
ANR	10995120	Identifier	code		10995066	0					
ANR	10995121	IfStatement	"if ( r_has_type ( & valref , t_integer ) )"		10995066	2					
ANR	10995122	Condition	"r_has_type ( & valref , t_integer )"	1965:6:63739:63768	10995066	0	True				
ANR	10995123	CallExpression	"r_has_type ( & valref , t_integer )"		10995066	0					
ANR	10995124	Callee	r_has_type		10995066	0					
ANR	10995125	Identifier	r_has_type		10995066	0					
ANR	10995126	ArgumentList	& valref		10995066	1					
ANR	10995127	Argument	& valref		10995066	0					
ANR	10995128	UnaryOperationExpression	& valref		10995066	0					
ANR	10995129	UnaryOperator	&		10995066	0					
ANR	10995130	Identifier	valref		10995066	1					
ANR	10995131	Argument	t_integer		10995066	1					
ANR	10995132	Identifier	t_integer		10995066	0					
ANR	10995133	ExpressionStatement	dst [ i ] = ( float ) valref . value . intval	1966:3:63774:63809	10995066	1	True				
ANR	10995134	AssignmentExpression	dst [ i ] = ( float ) valref . value . intval		10995066	0		=			
ANR	10995135	ArrayIndexing	dst [ i ]		10995066	0					
ANR	10995136	Identifier	dst		10995066	0					
ANR	10995137	Identifier	i		10995066	1					
ANR	10995138	CastExpression	( float ) valref . value . intval		10995066	1					
ANR	10995139	CastTarget	float		10995066	0					
ANR	10995140	MemberAccess	valref . value . intval		10995066	1					
ANR	10995141	MemberAccess	valref . value		10995066	0					
ANR	10995142	Identifier	valref		10995066	0					
ANR	10995143	Identifier	value		10995066	1					
ANR	10995144	Identifier	intval		10995066	1					
ANR	10995145	ElseStatement	else		10995066	0					
ANR	10995146	IfStatement	"if ( r_has_type ( & valref , t_real ) )"		10995066	0					
ANR	10995147	Condition	"r_has_type ( & valref , t_real )"	1967:11:63822:63848	10995066	0	True				
ANR	10995148	CallExpression	"r_has_type ( & valref , t_real )"		10995066	0					
ANR	10995149	Callee	r_has_type		10995066	0					
ANR	10995150	Identifier	r_has_type		10995066	0					
ANR	10995151	ArgumentList	& valref		10995066	1					
ANR	10995152	Argument	& valref		10995066	0					
ANR	10995153	UnaryOperationExpression	& valref		10995066	0					
ANR	10995154	UnaryOperator	&		10995066	0					
ANR	10995155	Identifier	valref		10995066	1					
ANR	10995156	Argument	t_real		10995066	1					
ANR	10995157	Identifier	t_real		10995066	0					
ANR	10995158	ExpressionStatement	dst [ i ] = ( float ) valref . value . realval	1968:3:63854:63890	10995066	1	True				
ANR	10995159	AssignmentExpression	dst [ i ] = ( float ) valref . value . realval		10995066	0		=			
ANR	10995160	ArrayIndexing	dst [ i ]		10995066	0					
ANR	10995161	Identifier	dst		10995066	0					
ANR	10995162	Identifier	i		10995066	1					
ANR	10995163	CastExpression	( float ) valref . value . realval		10995066	1					
ANR	10995164	CastTarget	float		10995066	0					
ANR	10995165	MemberAccess	valref . value . realval		10995066	1					
ANR	10995166	MemberAccess	valref . value		10995066	0					
ANR	10995167	Identifier	valref		10995066	0					
ANR	10995168	Identifier	value		10995066	1					
ANR	10995169	Identifier	realval		10995066	1					
ANR	10995170	ElseStatement	else		10995066	0					
ANR	10995171	ExpressionStatement	return_error ( gs_error_typecheck )	1970:3:63902:63934	10995066	0	True				
ANR	10995172	CallExpression	return_error ( gs_error_typecheck )		10995066	0					
ANR	10995173	Callee	return_error		10995066	0					
ANR	10995174	Identifier	return_error		10995066	0					
ANR	10995175	ArgumentList	gs_error_typecheck		10995066	1					
ANR	10995176	Argument	gs_error_typecheck		10995066	0					
ANR	10995177	Identifier	gs_error_typecheck		10995066	0					
ANR	10995178	IfStatement	if ( dst [ i ] < - MAX_CIE_RANGE || dst [ i ] > MAX_CIE_RANGE )		10995066	3					
ANR	10995179	Condition	dst [ i ] < - MAX_CIE_RANGE || dst [ i ] > MAX_CIE_RANGE	1971:6:63942:63990	10995066	0	True				
ANR	10995180	OrExpression	dst [ i ] < - MAX_CIE_RANGE || dst [ i ] > MAX_CIE_RANGE		10995066	0		||			
ANR	10995181	RelationalExpression	dst [ i ] < - MAX_CIE_RANGE		10995066	0		<			
ANR	10995182	ArrayIndexing	dst [ i ]		10995066	0					
ANR	10995183	Identifier	dst		10995066	0					
ANR	10995184	Identifier	i		10995066	1					
ANR	10995185	UnaryOperationExpression	- MAX_CIE_RANGE		10995066	1					
ANR	10995186	UnaryOperator	-		10995066	0					
ANR	10995187	Identifier	MAX_CIE_RANGE		10995066	1					
ANR	10995188	RelationalExpression	dst [ i ] > MAX_CIE_RANGE		10995066	1		>			
ANR	10995189	ArrayIndexing	dst [ i ]		10995066	0					
ANR	10995190	Identifier	dst		10995066	0					
ANR	10995191	Identifier	i		10995066	1					
ANR	10995192	Identifier	MAX_CIE_RANGE		10995066	1					
ANR	10995193	ExpressionStatement	return_error ( gs_error_limitcheck )	1972:3:63996:64029	10995066	1	True				
ANR	10995194	CallExpression	return_error ( gs_error_limitcheck )		10995066	0					
ANR	10995195	Callee	return_error		10995066	0					
ANR	10995196	Identifier	return_error		10995066	0					
ANR	10995197	ArgumentList	gs_error_limitcheck		10995066	1					
ANR	10995198	Argument	gs_error_limitcheck		10995066	0					
ANR	10995199	Identifier	gs_error_limitcheck		10995066	0					
ANR	10995200	ReturnStatement	return code ;	1974:4:64038:64049	10995066	4	True				
ANR	10995201	Identifier	code		10995066	0					
ANR	10995202	ReturnType	static int		10995066	1					
ANR	10995203	Identifier	get_cie_param_array		10995066	2					
ANR	10995204	ParameterList	"const gs_memory_t * mem , const ref * src , int n , float * dst"		10995066	3					
ANR	10995205	Parameter	const gs_memory_t * mem	1956:31:63524:63545	10995066	0	True				
ANR	10995206	ParameterType	const gs_memory_t *		10995066	0					
ANR	10995207	Identifier	mem		10995066	1					
ANR	10995208	Parameter	const ref * src	1956:55:63548:63561	10995066	1	True				
ANR	10995209	ParameterType	const ref *		10995066	0					
ANR	10995210	Identifier	src		10995066	1					
ANR	10995211	Parameter	int n	1956:72:63565:63569	10995066	2	True				
ANR	10995212	ParameterType	int		10995066	0					
ANR	10995213	Identifier	n		10995066	1					
ANR	10995214	Parameter	float * dst	1956:79:63572:63581	10995066	3	True				
ANR	10995215	ParameterType	float *		10995066	0					
ANR	10995216	Identifier	dst		10995066	1					
ANR	10995217	CFGEntryNode	ENTRY		10995066		True				
ANR	10995218	CFGExitNode	EXIT		10995066		True				
ANR	10995219	Symbol	valref . value		10995066						
ANR	10995220	Symbol	code		10995066						
ANR	10995221	Symbol	dst		10995066						
ANR	10995222	Symbol	src		10995066						
ANR	10995223	Symbol	array_get		10995066						
ANR	10995224	Symbol	i		10995066						
ANR	10995225	Symbol	t_real		10995066						
ANR	10995226	Symbol	n		10995066						
ANR	10995227	Symbol	valref . value . realval		10995066						
ANR	10995228	Symbol	MAX_CIE_RANGE		10995066						
ANR	10995229	Symbol	* dst		10995066						
ANR	10995230	Symbol	r_has_type		10995066						
ANR	10995231	Symbol	gs_error_typecheck		10995066						
ANR	10995232	Symbol	* i		10995066						
ANR	10995233	Symbol	mem		10995066						
ANR	10995234	Symbol	t_integer		10995066						
ANR	10995235	Symbol	valref . value . intval		10995066						
ANR	10995236	Symbol	& valref		10995066						
ANR	10995237	Symbol	valref		10995066						
ANR	10995238	Symbol	gs_error_limitcheck		10995066						
ANR	10995239	Function	checkWhitePoint	1978:0:64110:64870							
ANR	10995240	FunctionDef	"checkWhitePoint (i_ctx_t * i_ctx_p , ref * CIEdict)"		10995239	0					
ANR	10995241	CompoundStatement		1979:0:64170:64870	10995239	0					
ANR	10995242	IdentifierDeclStatement	int code ;	1980:4:64176:64184	10995239	0	True				
ANR	10995243	IdentifierDecl	code		10995239	0					
ANR	10995244	IdentifierDeclType	int		10995239	0					
ANR	10995245	Identifier	code		10995239	1					
ANR	10995246	IdentifierDeclStatement	float value [ 3 ] ;	1981:4:64190:64204	10995239	1	True				
ANR	10995247	IdentifierDecl	value [ 3 ]		10995239	0					
ANR	10995248	IdentifierDeclType	float [ 3 ]		10995239	0					
ANR	10995249	Identifier	value		10995239	1					
ANR	10995250	PrimaryExpression	3		10995239	2					
ANR	10995251	IdentifierDeclStatement	ref * tempref ;	1982:4:64210:64222	10995239	2	True				
ANR	10995252	IdentifierDecl	* tempref		10995239	0					
ANR	10995253	IdentifierDeclType	ref *		10995239	0					
ANR	10995254	Identifier	tempref		10995239	1					
ANR	10995255	ExpressionStatement	"code = dict_find_string ( CIEdict , ""WhitePoint"" , & tempref )"	1984:4:64229:64285	10995239	3	True				
ANR	10995256	AssignmentExpression	"code = dict_find_string ( CIEdict , ""WhitePoint"" , & tempref )"		10995239	0		=			
ANR	10995257	Identifier	code		10995239	0					
ANR	10995258	CallExpression	"dict_find_string ( CIEdict , ""WhitePoint"" , & tempref )"		10995239	1					
ANR	10995259	Callee	dict_find_string		10995239	0					
ANR	10995260	Identifier	dict_find_string		10995239	0					
ANR	10995261	ArgumentList	CIEdict		10995239	1					
ANR	10995262	Argument	CIEdict		10995239	0					
ANR	10995263	Identifier	CIEdict		10995239	0					
ANR	10995264	Argument	"""WhitePoint"""		10995239	1					
ANR	10995265	PrimaryExpression	"""WhitePoint"""		10995239	0					
ANR	10995266	Argument	& tempref		10995239	2					
ANR	10995267	UnaryOperationExpression	& tempref		10995239	0					
ANR	10995268	UnaryOperator	&		10995239	0					
ANR	10995269	Identifier	tempref		10995239	1					
ANR	10995270	IfStatement	if ( code < 0 )		10995239	4					
ANR	10995271	Condition	code < 0	1985:8:64295:64302	10995239	0	True				
ANR	10995272	RelationalExpression	code < 0		10995239	0		<			
ANR	10995273	Identifier	code		10995239	0					
ANR	10995274	PrimaryExpression	0		10995239	1					
ANR	10995275	ReturnStatement	return code ;	1986:8:64313:64324	10995239	1	True				
ANR	10995276	Identifier	code		10995239	0					
ANR	10995277	IfStatement	"if ( code == 0 || r_has_type ( tempref , t_null ) )"		10995239	5					
ANR	10995278	Condition	"code == 0 || r_has_type ( tempref , t_null )"	1988:8:64335:64374	10995239	0	True				
ANR	10995279	OrExpression	"code == 0 || r_has_type ( tempref , t_null )"		10995239	0		||			
ANR	10995280	EqualityExpression	code == 0		10995239	0		==			
ANR	10995281	Identifier	code		10995239	0					
ANR	10995282	PrimaryExpression	0		10995239	1					
ANR	10995283	CallExpression	"r_has_type ( tempref , t_null )"		10995239	1					
ANR	10995284	Callee	r_has_type		10995239	0					
ANR	10995285	Identifier	r_has_type		10995239	0					
ANR	10995286	ArgumentList	tempref		10995239	1					
ANR	10995287	Argument	tempref		10995239	0					
ANR	10995288	Identifier	tempref		10995239	0					
ANR	10995289	Argument	t_null		10995239	1					
ANR	10995290	Identifier	t_null		10995239	0					
ANR	10995291	ReturnStatement	return gs_note_error ( gs_error_undefined ) ;	1989:8:64385:64425	10995239	1	True				
ANR	10995292	CallExpression	gs_note_error ( gs_error_undefined )		10995239	0					
ANR	10995293	Callee	gs_note_error		10995239	0					
ANR	10995294	Identifier	gs_note_error		10995239	0					
ANR	10995295	ArgumentList	gs_error_undefined		10995239	1					
ANR	10995296	Argument	gs_error_undefined		10995239	0					
ANR	10995297	Identifier	gs_error_undefined		10995239	0					
ANR	10995298	IfStatement	if ( ! r_is_array ( tempref ) )		10995239	6					
ANR	10995299	Condition	! r_is_array ( tempref )	1991:8:64436:64455	10995239	0	True				
ANR	10995300	UnaryOperationExpression	! r_is_array ( tempref )		10995239	0					
ANR	10995301	UnaryOperator	!		10995239	0					
ANR	10995302	CallExpression	r_is_array ( tempref )		10995239	1					
ANR	10995303	Callee	r_is_array		10995239	0					
ANR	10995304	Identifier	r_is_array		10995239	0					
ANR	10995305	ArgumentList	tempref		10995239	1					
ANR	10995306	Argument	tempref		10995239	0					
ANR	10995307	Identifier	tempref		10995239	0					
ANR	10995308	ExpressionStatement	return_error ( gs_error_typecheck )	1992:8:64466:64498	10995239	1	True				
ANR	10995309	CallExpression	return_error ( gs_error_typecheck )		10995239	0					
ANR	10995310	Callee	return_error		10995239	0					
ANR	10995311	Identifier	return_error		10995239	0					
ANR	10995312	ArgumentList	gs_error_typecheck		10995239	1					
ANR	10995313	Argument	gs_error_typecheck		10995239	0					
ANR	10995314	Identifier	gs_error_typecheck		10995239	0					
ANR	10995315	IfStatement	if ( r_size ( tempref ) != 3 )		10995239	7					
ANR	10995316	Condition	r_size ( tempref ) != 3	1993:8:64508:64527	10995239	0	True				
ANR	10995317	EqualityExpression	r_size ( tempref ) != 3		10995239	0		!=			
ANR	10995318	CallExpression	r_size ( tempref )		10995239	0					
ANR	10995319	Callee	r_size		10995239	0					
ANR	10995320	Identifier	r_size		10995239	0					
ANR	10995321	ArgumentList	tempref		10995239	1					
ANR	10995322	Argument	tempref		10995239	0					
ANR	10995323	Identifier	tempref		10995239	0					
ANR	10995324	PrimaryExpression	3		10995239	1					
ANR	10995325	ExpressionStatement	return_error ( gs_error_rangecheck )	1994:8:64538:64571	10995239	1	True				
ANR	10995326	CallExpression	return_error ( gs_error_rangecheck )		10995239	0					
ANR	10995327	Callee	return_error		10995239	0					
ANR	10995328	Identifier	return_error		10995239	0					
ANR	10995329	ArgumentList	gs_error_rangecheck		10995239	1					
ANR	10995330	Argument	gs_error_rangecheck		10995239	0					
ANR	10995331	Identifier	gs_error_rangecheck		10995239	0					
ANR	10995332	ExpressionStatement	"code = get_cie_param_array ( imemory , tempref , 3 , value )"	1996:4:64578:64632	10995239	8	True				
ANR	10995333	AssignmentExpression	"code = get_cie_param_array ( imemory , tempref , 3 , value )"		10995239	0		=			
ANR	10995334	Identifier	code		10995239	0					
ANR	10995335	CallExpression	"get_cie_param_array ( imemory , tempref , 3 , value )"		10995239	1					
ANR	10995336	Callee	get_cie_param_array		10995239	0					
ANR	10995337	Identifier	get_cie_param_array		10995239	0					
ANR	10995338	ArgumentList	imemory		10995239	1					
ANR	10995339	Argument	imemory		10995239	0					
ANR	10995340	Identifier	imemory		10995239	0					
ANR	10995341	Argument	tempref		10995239	1					
ANR	10995342	Identifier	tempref		10995239	0					
ANR	10995343	Argument	3		10995239	2					
ANR	10995344	PrimaryExpression	3		10995239	0					
ANR	10995345	Argument	value		10995239	3					
ANR	10995346	Identifier	value		10995239	0					
ANR	10995347	IfStatement	if ( code < 0 )		10995239	9					
ANR	10995348	Condition	code < 0	1997:8:64642:64649	10995239	0	True				
ANR	10995349	RelationalExpression	code < 0		10995239	0		<			
ANR	10995350	Identifier	code		10995239	0					
ANR	10995351	PrimaryExpression	0		10995239	1					
ANR	10995352	ReturnStatement	return code ;	1998:8:64660:64671	10995239	1	True				
ANR	10995353	Identifier	code		10995239	0					
ANR	10995354	IfStatement	if ( value [ 0 ] < 0 || value [ 1 ] != 1 || value [ 2 ] < 0 )		10995239	10					
ANR	10995355	Condition	value [ 0 ] < 0 || value [ 1 ] != 1 || value [ 2 ] < 0	2001:8:64760:64804	10995239	0	True				
ANR	10995356	OrExpression	value [ 0 ] < 0 || value [ 1 ] != 1 || value [ 2 ] < 0		10995239	0		||			
ANR	10995357	RelationalExpression	value [ 0 ] < 0		10995239	0		<			
ANR	10995358	ArrayIndexing	value [ 0 ]		10995239	0					
ANR	10995359	Identifier	value		10995239	0					
ANR	10995360	PrimaryExpression	0		10995239	1					
ANR	10995361	PrimaryExpression	0		10995239	1					
ANR	10995362	OrExpression	value [ 1 ] != 1 || value [ 2 ] < 0		10995239	1		||			
ANR	10995363	EqualityExpression	value [ 1 ] != 1		10995239	0		!=			
ANR	10995364	ArrayIndexing	value [ 1 ]		10995239	0					
ANR	10995365	Identifier	value		10995239	0					
ANR	10995366	PrimaryExpression	1		10995239	1					
ANR	10995367	PrimaryExpression	1		10995239	1					
ANR	10995368	RelationalExpression	value [ 2 ] < 0		10995239	1		<			
ANR	10995369	ArrayIndexing	value [ 2 ]		10995239	0					
ANR	10995370	Identifier	value		10995239	0					
ANR	10995371	PrimaryExpression	2		10995239	1					
ANR	10995372	PrimaryExpression	0		10995239	1					
ANR	10995373	ExpressionStatement	return_error ( gs_error_rangecheck )	2002:12:64820:64853	10995239	1	True				
ANR	10995374	CallExpression	return_error ( gs_error_rangecheck )		10995239	0					
ANR	10995375	Callee	return_error		10995239	0					
ANR	10995376	Identifier	return_error		10995239	0					
ANR	10995377	ArgumentList	gs_error_rangecheck		10995239	1					
ANR	10995378	Argument	gs_error_rangecheck		10995239	0					
ANR	10995379	Identifier	gs_error_rangecheck		10995239	0					
ANR	10995380	ReturnStatement	return 0 ;	2004:4:64860:64868	10995239	11	True				
ANR	10995381	PrimaryExpression	0		10995239	0					
ANR	10995382	ReturnType	static int		10995239	1					
ANR	10995383	Identifier	checkWhitePoint		10995239	2					
ANR	10995384	ParameterList	"i_ctx_t * i_ctx_p , ref * CIEdict"		10995239	3					
ANR	10995385	Parameter	i_ctx_t * i_ctx_p	1978:27:64137:64153	10995239	0	True				
ANR	10995386	ParameterType	i_ctx_t *		10995239	0					
ANR	10995387	Identifier	i_ctx_p		10995239	1					
ANR	10995388	Parameter	ref * CIEdict	1978:46:64156:64167	10995239	1	True				
ANR	10995389	ParameterType	ref *		10995239	0					
ANR	10995390	Identifier	CIEdict		10995239	1					
ANR	10995391	CFGEntryNode	ENTRY		10995239		True				
ANR	10995392	CFGExitNode	EXIT		10995239		True				
ANR	10995393	Symbol	code		10995239						
ANR	10995394	Symbol	dict_find_string		10995239						
ANR	10995395	Symbol	gs_error_rangecheck		10995239						
ANR	10995396	Symbol	gs_error_undefined		10995239						
ANR	10995397	Symbol	& tempref		10995239						
ANR	10995398	Symbol	t_null		10995239						
ANR	10995399	Symbol	r_has_type		10995239						
ANR	10995400	Symbol	gs_note_error		10995239						
ANR	10995401	Symbol	gs_error_typecheck		10995239						
ANR	10995402	Symbol	i_ctx_p		10995239						
ANR	10995403	Symbol	* value		10995239						
ANR	10995404	Symbol	r_size		10995239						
ANR	10995405	Symbol	CIEdict		10995239						
ANR	10995406	Symbol	r_is_array		10995239						
ANR	10995407	Symbol	imemory		10995239						
ANR	10995408	Symbol	get_cie_param_array		10995239						
ANR	10995409	Symbol	value		10995239						
ANR	10995410	Symbol	tempref		10995239						
ANR	10995411	Function	checkBlackPoint	2007:0:64928:65450							
ANR	10995412	FunctionDef	"checkBlackPoint (i_ctx_t * i_ctx_p , ref * CIEdict)"		10995411	0					
ANR	10995413	CompoundStatement		2008:0:64988:65450	10995411	0					
ANR	10995414	IdentifierDeclStatement	int code ;	2009:4:64994:65002	10995411	0	True				
ANR	10995415	IdentifierDecl	code		10995411	0					
ANR	10995416	IdentifierDeclType	int		10995411	0					
ANR	10995417	Identifier	code		10995411	1					
ANR	10995418	IdentifierDeclStatement	float value [ 3 ] ;	2010:4:65008:65022	10995411	1	True				
ANR	10995419	IdentifierDecl	value [ 3 ]		10995411	0					
ANR	10995420	IdentifierDeclType	float [ 3 ]		10995411	0					
ANR	10995421	Identifier	value		10995411	1					
ANR	10995422	PrimaryExpression	3		10995411	2					
ANR	10995423	IdentifierDeclStatement	ref * tempref ;	2011:4:65028:65040	10995411	2	True				
ANR	10995424	IdentifierDecl	* tempref		10995411	0					
ANR	10995425	IdentifierDeclType	ref *		10995411	0					
ANR	10995426	Identifier	tempref		10995411	1					
ANR	10995427	ExpressionStatement	"code = dict_find_string ( CIEdict , ""BlackPoint"" , & tempref )"	2013:4:65047:65103	10995411	3	True				
ANR	10995428	AssignmentExpression	"code = dict_find_string ( CIEdict , ""BlackPoint"" , & tempref )"		10995411	0		=			
ANR	10995429	Identifier	code		10995411	0					
ANR	10995430	CallExpression	"dict_find_string ( CIEdict , ""BlackPoint"" , & tempref )"		10995411	1					
ANR	10995431	Callee	dict_find_string		10995411	0					
ANR	10995432	Identifier	dict_find_string		10995411	0					
ANR	10995433	ArgumentList	CIEdict		10995411	1					
ANR	10995434	Argument	CIEdict		10995411	0					
ANR	10995435	Identifier	CIEdict		10995411	0					
ANR	10995436	Argument	"""BlackPoint"""		10995411	1					
ANR	10995437	PrimaryExpression	"""BlackPoint"""		10995411	0					
ANR	10995438	Argument	& tempref		10995411	2					
ANR	10995439	UnaryOperationExpression	& tempref		10995411	0					
ANR	10995440	UnaryOperator	&		10995411	0					
ANR	10995441	Identifier	tempref		10995411	1					
ANR	10995442	IfStatement	"if ( code > 0 && ! r_has_type ( tempref , t_null ) )"		10995411	4					
ANR	10995443	Condition	"code > 0 && ! r_has_type ( tempref , t_null )"	2014:8:65113:65152	10995411	0	True				
ANR	10995444	AndExpression	"code > 0 && ! r_has_type ( tempref , t_null )"		10995411	0		&&			
ANR	10995445	RelationalExpression	code > 0		10995411	0		>			
ANR	10995446	Identifier	code		10995411	0					
ANR	10995447	PrimaryExpression	0		10995411	1					
ANR	10995448	UnaryOperationExpression	"! r_has_type ( tempref , t_null )"		10995411	1					
ANR	10995449	UnaryOperator	!		10995411	0					
ANR	10995450	CallExpression	"r_has_type ( tempref , t_null )"		10995411	1					
ANR	10995451	Callee	r_has_type		10995411	0					
ANR	10995452	Identifier	r_has_type		10995411	0					
ANR	10995453	ArgumentList	tempref		10995411	1					
ANR	10995454	Argument	tempref		10995411	0					
ANR	10995455	Identifier	tempref		10995411	0					
ANR	10995456	Argument	t_null		10995411	1					
ANR	10995457	Identifier	t_null		10995411	0					
ANR	10995458	CompoundStatement		7:50:166:166	10995411	1					
ANR	10995459	IfStatement	if ( ! r_is_array ( tempref ) )		10995411	0					
ANR	10995460	Condition	! r_is_array ( tempref )	2015:12:65169:65188	10995411	0	True				
ANR	10995461	UnaryOperationExpression	! r_is_array ( tempref )		10995411	0					
ANR	10995462	UnaryOperator	!		10995411	0					
ANR	10995463	CallExpression	r_is_array ( tempref )		10995411	1					
ANR	10995464	Callee	r_is_array		10995411	0					
ANR	10995465	Identifier	r_is_array		10995411	0					
ANR	10995466	ArgumentList	tempref		10995411	1					
ANR	10995467	Argument	tempref		10995411	0					
ANR	10995468	Identifier	tempref		10995411	0					
ANR	10995469	ExpressionStatement	return_error ( gs_error_typecheck )	2016:12:65203:65235	10995411	1	True				
ANR	10995470	CallExpression	return_error ( gs_error_typecheck )		10995411	0					
ANR	10995471	Callee	return_error		10995411	0					
ANR	10995472	Identifier	return_error		10995411	0					
ANR	10995473	ArgumentList	gs_error_typecheck		10995411	1					
ANR	10995474	Argument	gs_error_typecheck		10995411	0					
ANR	10995475	Identifier	gs_error_typecheck		10995411	0					
ANR	10995476	IfStatement	if ( r_size ( tempref ) != 3 )		10995411	1					
ANR	10995477	Condition	r_size ( tempref ) != 3	2017:12:65249:65268	10995411	0	True				
ANR	10995478	EqualityExpression	r_size ( tempref ) != 3		10995411	0		!=			
ANR	10995479	CallExpression	r_size ( tempref )		10995411	0					
ANR	10995480	Callee	r_size		10995411	0					
ANR	10995481	Identifier	r_size		10995411	0					
ANR	10995482	ArgumentList	tempref		10995411	1					
ANR	10995483	Argument	tempref		10995411	0					
ANR	10995484	Identifier	tempref		10995411	0					
ANR	10995485	PrimaryExpression	3		10995411	1					
ANR	10995486	ExpressionStatement	return_error ( gs_error_rangecheck )	2018:12:65283:65316	10995411	1	True				
ANR	10995487	CallExpression	return_error ( gs_error_rangecheck )		10995411	0					
ANR	10995488	Callee	return_error		10995411	0					
ANR	10995489	Identifier	return_error		10995411	0					
ANR	10995490	ArgumentList	gs_error_rangecheck		10995411	1					
ANR	10995491	Argument	gs_error_rangecheck		10995411	0					
ANR	10995492	Identifier	gs_error_rangecheck		10995411	0					
ANR	10995493	ExpressionStatement	"code = get_cie_param_array ( imemory , tempref , 3 , value )"	2020:8:65327:65381	10995411	2	True				
ANR	10995494	AssignmentExpression	"code = get_cie_param_array ( imemory , tempref , 3 , value )"		10995411	0		=			
ANR	10995495	Identifier	code		10995411	0					
ANR	10995496	CallExpression	"get_cie_param_array ( imemory , tempref , 3 , value )"		10995411	1					
ANR	10995497	Callee	get_cie_param_array		10995411	0					
ANR	10995498	Identifier	get_cie_param_array		10995411	0					
ANR	10995499	ArgumentList	imemory		10995411	1					
ANR	10995500	Argument	imemory		10995411	0					
ANR	10995501	Identifier	imemory		10995411	0					
ANR	10995502	Argument	tempref		10995411	1					
ANR	10995503	Identifier	tempref		10995411	0					
ANR	10995504	Argument	3		10995411	2					
ANR	10995505	PrimaryExpression	3		10995411	0					
ANR	10995506	Argument	value		10995411	3					
ANR	10995507	Identifier	value		10995411	0					
ANR	10995508	IfStatement	if ( code < 0 )		10995411	3					
ANR	10995509	Condition	code < 0	2021:12:65395:65402	10995411	0	True				
ANR	10995510	RelationalExpression	code < 0		10995411	0		<			
ANR	10995511	Identifier	code		10995411	0					
ANR	10995512	PrimaryExpression	0		10995411	1					
ANR	10995513	ReturnStatement	return code ;	2022:12:65417:65428	10995411	1	True				
ANR	10995514	Identifier	code		10995411	0					
ANR	10995515	ReturnStatement	return 0 ;	2024:4:65440:65448	10995411	5	True				
ANR	10995516	PrimaryExpression	0		10995411	0					
ANR	10995517	ReturnType	static int		10995411	1					
ANR	10995518	Identifier	checkBlackPoint		10995411	2					
ANR	10995519	ParameterList	"i_ctx_t * i_ctx_p , ref * CIEdict"		10995411	3					
ANR	10995520	Parameter	i_ctx_t * i_ctx_p	2007:27:64955:64971	10995411	0	True				
ANR	10995521	ParameterType	i_ctx_t *		10995411	0					
ANR	10995522	Identifier	i_ctx_p		10995411	1					
ANR	10995523	Parameter	ref * CIEdict	2007:46:64974:64985	10995411	1	True				
ANR	10995524	ParameterType	ref *		10995411	0					
ANR	10995525	Identifier	CIEdict		10995411	1					
ANR	10995526	CFGEntryNode	ENTRY		10995411		True				
ANR	10995527	CFGExitNode	EXIT		10995411		True				
ANR	10995528	Symbol	code		10995411						
ANR	10995529	Symbol	dict_find_string		10995411						
ANR	10995530	Symbol	gs_error_rangecheck		10995411						
ANR	10995531	Symbol	& tempref		10995411						
ANR	10995532	Symbol	r_has_type		10995411						
ANR	10995533	Symbol	t_null		10995411						
ANR	10995534	Symbol	gs_error_typecheck		10995411						
ANR	10995535	Symbol	i_ctx_p		10995411						
ANR	10995536	Symbol	r_size		10995411						
ANR	10995537	Symbol	CIEdict		10995411						
ANR	10995538	Symbol	r_is_array		10995411						
ANR	10995539	Symbol	imemory		10995411						
ANR	10995540	Symbol	get_cie_param_array		10995411						
ANR	10995541	Symbol	value		10995411						
ANR	10995542	Symbol	tempref		10995411						
ANR	10995543	Function	checkRangeLMN	2027:0:65506:66149							
ANR	10995544	FunctionDef	"checkRangeLMN (i_ctx_t * i_ctx_p , ref * CIEdict)"		10995543	0					
ANR	10995545	CompoundStatement		2028:0:65564:66149	10995543	0					
ANR	10995546	IdentifierDeclStatement	int code ;	2029:4:65570:65578	10995543	0	True				
ANR	10995547	IdentifierDecl	code		10995543	0					
ANR	10995548	IdentifierDeclType	int		10995543	0					
ANR	10995549	Identifier	code		10995543	1					
ANR	10995550	IdentifierDeclStatement	float value [ 6 ] ;	2030:4:65584:65598	10995543	1	True				
ANR	10995551	IdentifierDecl	value [ 6 ]		10995543	0					
ANR	10995552	IdentifierDeclType	float [ 6 ]		10995543	0					
ANR	10995553	Identifier	value		10995543	1					
ANR	10995554	PrimaryExpression	6		10995543	2					
ANR	10995555	IdentifierDeclStatement	ref * tempref ;	2031:4:65604:65616	10995543	2	True				
ANR	10995556	IdentifierDecl	* tempref		10995543	0					
ANR	10995557	IdentifierDeclType	ref *		10995543	0					
ANR	10995558	Identifier	tempref		10995543	1					
ANR	10995559	ExpressionStatement	"code = dict_find_string ( CIEdict , ""RangeLMN"" , & tempref )"	2033:4:65623:65677	10995543	3	True				
ANR	10995560	AssignmentExpression	"code = dict_find_string ( CIEdict , ""RangeLMN"" , & tempref )"		10995543	0		=			
ANR	10995561	Identifier	code		10995543	0					
ANR	10995562	CallExpression	"dict_find_string ( CIEdict , ""RangeLMN"" , & tempref )"		10995543	1					
ANR	10995563	Callee	dict_find_string		10995543	0					
ANR	10995564	Identifier	dict_find_string		10995543	0					
ANR	10995565	ArgumentList	CIEdict		10995543	1					
ANR	10995566	Argument	CIEdict		10995543	0					
ANR	10995567	Identifier	CIEdict		10995543	0					
ANR	10995568	Argument	"""RangeLMN"""		10995543	1					
ANR	10995569	PrimaryExpression	"""RangeLMN"""		10995543	0					
ANR	10995570	Argument	& tempref		10995543	2					
ANR	10995571	UnaryOperationExpression	& tempref		10995543	0					
ANR	10995572	UnaryOperator	&		10995543	0					
ANR	10995573	Identifier	tempref		10995543	1					
ANR	10995574	IfStatement	"if ( code > 0 && ! r_has_type ( tempref , t_null ) )"		10995543	4					
ANR	10995575	Condition	"code > 0 && ! r_has_type ( tempref , t_null )"	2034:8:65687:65726	10995543	0	True				
ANR	10995576	AndExpression	"code > 0 && ! r_has_type ( tempref , t_null )"		10995543	0		&&			
ANR	10995577	RelationalExpression	code > 0		10995543	0		>			
ANR	10995578	Identifier	code		10995543	0					
ANR	10995579	PrimaryExpression	0		10995543	1					
ANR	10995580	UnaryOperationExpression	"! r_has_type ( tempref , t_null )"		10995543	1					
ANR	10995581	UnaryOperator	!		10995543	0					
ANR	10995582	CallExpression	"r_has_type ( tempref , t_null )"		10995543	1					
ANR	10995583	Callee	r_has_type		10995543	0					
ANR	10995584	Identifier	r_has_type		10995543	0					
ANR	10995585	ArgumentList	tempref		10995543	1					
ANR	10995586	Argument	tempref		10995543	0					
ANR	10995587	Identifier	tempref		10995543	0					
ANR	10995588	Argument	t_null		10995543	1					
ANR	10995589	Identifier	t_null		10995543	0					
ANR	10995590	CompoundStatement		7:50:164:164	10995543	1					
ANR	10995591	IfStatement	if ( ! r_is_array ( tempref ) )		10995543	0					
ANR	10995592	Condition	! r_is_array ( tempref )	2035:12:65743:65762	10995543	0	True				
ANR	10995593	UnaryOperationExpression	! r_is_array ( tempref )		10995543	0					
ANR	10995594	UnaryOperator	!		10995543	0					
ANR	10995595	CallExpression	r_is_array ( tempref )		10995543	1					
ANR	10995596	Callee	r_is_array		10995543	0					
ANR	10995597	Identifier	r_is_array		10995543	0					
ANR	10995598	ArgumentList	tempref		10995543	1					
ANR	10995599	Argument	tempref		10995543	0					
ANR	10995600	Identifier	tempref		10995543	0					
ANR	10995601	ExpressionStatement	return_error ( gs_error_typecheck )	2036:12:65777:65809	10995543	1	True				
ANR	10995602	CallExpression	return_error ( gs_error_typecheck )		10995543	0					
ANR	10995603	Callee	return_error		10995543	0					
ANR	10995604	Identifier	return_error		10995543	0					
ANR	10995605	ArgumentList	gs_error_typecheck		10995543	1					
ANR	10995606	Argument	gs_error_typecheck		10995543	0					
ANR	10995607	Identifier	gs_error_typecheck		10995543	0					
ANR	10995608	IfStatement	if ( r_size ( tempref ) != 6 )		10995543	1					
ANR	10995609	Condition	r_size ( tempref ) != 6	2037:12:65823:65842	10995543	0	True				
ANR	10995610	EqualityExpression	r_size ( tempref ) != 6		10995543	0		!=			
ANR	10995611	CallExpression	r_size ( tempref )		10995543	0					
ANR	10995612	Callee	r_size		10995543	0					
ANR	10995613	Identifier	r_size		10995543	0					
ANR	10995614	ArgumentList	tempref		10995543	1					
ANR	10995615	Argument	tempref		10995543	0					
ANR	10995616	Identifier	tempref		10995543	0					
ANR	10995617	PrimaryExpression	6		10995543	1					
ANR	10995618	ExpressionStatement	return_error ( gs_error_rangecheck )	2038:12:65857:65890	10995543	1	True				
ANR	10995619	CallExpression	return_error ( gs_error_rangecheck )		10995543	0					
ANR	10995620	Callee	return_error		10995543	0					
ANR	10995621	Identifier	return_error		10995543	0					
ANR	10995622	ArgumentList	gs_error_rangecheck		10995543	1					
ANR	10995623	Argument	gs_error_rangecheck		10995543	0					
ANR	10995624	Identifier	gs_error_rangecheck		10995543	0					
ANR	10995625	ExpressionStatement	"code = get_cie_param_array ( imemory , tempref , 6 , value )"	2039:8:65900:65954	10995543	2	True				
ANR	10995626	AssignmentExpression	"code = get_cie_param_array ( imemory , tempref , 6 , value )"		10995543	0		=			
ANR	10995627	Identifier	code		10995543	0					
ANR	10995628	CallExpression	"get_cie_param_array ( imemory , tempref , 6 , value )"		10995543	1					
ANR	10995629	Callee	get_cie_param_array		10995543	0					
ANR	10995630	Identifier	get_cie_param_array		10995543	0					
ANR	10995631	ArgumentList	imemory		10995543	1					
ANR	10995632	Argument	imemory		10995543	0					
ANR	10995633	Identifier	imemory		10995543	0					
ANR	10995634	Argument	tempref		10995543	1					
ANR	10995635	Identifier	tempref		10995543	0					
ANR	10995636	Argument	6		10995543	2					
ANR	10995637	PrimaryExpression	6		10995543	0					
ANR	10995638	Argument	value		10995543	3					
ANR	10995639	Identifier	value		10995543	0					
ANR	10995640	IfStatement	if ( code < 0 )		10995543	3					
ANR	10995641	Condition	code < 0	2040:12:65968:65975	10995543	0	True				
ANR	10995642	RelationalExpression	code < 0		10995543	0		<			
ANR	10995643	Identifier	code		10995543	0					
ANR	10995644	PrimaryExpression	0		10995543	1					
ANR	10995645	ReturnStatement	return code ;	2041:12:65990:66001	10995543	1	True				
ANR	10995646	Identifier	code		10995543	0					
ANR	10995647	IfStatement	if ( value [ 1 ] < value [ 0 ] || value [ 3 ] < value [ 2 ] || value [ 5 ] < value [ 4 ] )		10995543	4					
ANR	10995648	Condition	value [ 1 ] < value [ 0 ] || value [ 3 ] < value [ 2 ] || value [ 5 ] < value [ 4 ]	2042:12:66015:66079	10995543	0	True				
ANR	10995649	OrExpression	value [ 1 ] < value [ 0 ] || value [ 3 ] < value [ 2 ] || value [ 5 ] < value [ 4 ]		10995543	0		||			
ANR	10995650	RelationalExpression	value [ 1 ] < value [ 0 ]		10995543	0		<			
ANR	10995651	ArrayIndexing	value [ 1 ]		10995543	0					
ANR	10995652	Identifier	value		10995543	0					
ANR	10995653	PrimaryExpression	1		10995543	1					
ANR	10995654	ArrayIndexing	value [ 0 ]		10995543	1					
ANR	10995655	Identifier	value		10995543	0					
ANR	10995656	PrimaryExpression	0		10995543	1					
ANR	10995657	OrExpression	value [ 3 ] < value [ 2 ] || value [ 5 ] < value [ 4 ]		10995543	1		||			
ANR	10995658	RelationalExpression	value [ 3 ] < value [ 2 ]		10995543	0		<			
ANR	10995659	ArrayIndexing	value [ 3 ]		10995543	0					
ANR	10995660	Identifier	value		10995543	0					
ANR	10995661	PrimaryExpression	3		10995543	1					
ANR	10995662	ArrayIndexing	value [ 2 ]		10995543	1					
ANR	10995663	Identifier	value		10995543	0					
ANR	10995664	PrimaryExpression	2		10995543	1					
ANR	10995665	RelationalExpression	value [ 5 ] < value [ 4 ]		10995543	1		<			
ANR	10995666	ArrayIndexing	value [ 5 ]		10995543	0					
ANR	10995667	Identifier	value		10995543	0					
ANR	10995668	PrimaryExpression	5		10995543	1					
ANR	10995669	ArrayIndexing	value [ 4 ]		10995543	1					
ANR	10995670	Identifier	value		10995543	0					
ANR	10995671	PrimaryExpression	4		10995543	1					
ANR	10995672	ExpressionStatement	return_error ( gs_error_rangecheck )	2043:12:66094:66127	10995543	1	True				
ANR	10995673	CallExpression	return_error ( gs_error_rangecheck )		10995543	0					
ANR	10995674	Callee	return_error		10995543	0					
ANR	10995675	Identifier	return_error		10995543	0					
ANR	10995676	ArgumentList	gs_error_rangecheck		10995543	1					
ANR	10995677	Argument	gs_error_rangecheck		10995543	0					
ANR	10995678	Identifier	gs_error_rangecheck		10995543	0					
ANR	10995679	ReturnStatement	return 0 ;	2045:4:66139:66147	10995543	5	True				
ANR	10995680	PrimaryExpression	0		10995543	0					
ANR	10995681	ReturnType	static int		10995543	1					
ANR	10995682	Identifier	checkRangeLMN		10995543	2					
ANR	10995683	ParameterList	"i_ctx_t * i_ctx_p , ref * CIEdict"		10995543	3					
ANR	10995684	Parameter	i_ctx_t * i_ctx_p	2027:25:65531:65547	10995543	0	True				
ANR	10995685	ParameterType	i_ctx_t *		10995543	0					
ANR	10995686	Identifier	i_ctx_p		10995543	1					
ANR	10995687	Parameter	ref * CIEdict	2027:44:65550:65561	10995543	1	True				
ANR	10995688	ParameterType	ref *		10995543	0					
ANR	10995689	Identifier	CIEdict		10995543	1					
ANR	10995690	CFGEntryNode	ENTRY		10995543		True				
ANR	10995691	CFGExitNode	EXIT		10995543		True				
ANR	10995692	Symbol	code		10995543						
ANR	10995693	Symbol	dict_find_string		10995543						
ANR	10995694	Symbol	gs_error_rangecheck		10995543						
ANR	10995695	Symbol	& tempref		10995543						
ANR	10995696	Symbol	t_null		10995543						
ANR	10995697	Symbol	r_has_type		10995543						
ANR	10995698	Symbol	gs_error_typecheck		10995543						
ANR	10995699	Symbol	i_ctx_p		10995543						
ANR	10995700	Symbol	* value		10995543						
ANR	10995701	Symbol	r_size		10995543						
ANR	10995702	Symbol	CIEdict		10995543						
ANR	10995703	Symbol	r_is_array		10995543						
ANR	10995704	Symbol	imemory		10995543						
ANR	10995705	Symbol	get_cie_param_array		10995543						
ANR	10995706	Symbol	value		10995543						
ANR	10995707	Symbol	tempref		10995543						
ANR	10995708	Function	checkDecodeLMN	2048:0:66206:66795							
ANR	10995709	FunctionDef	"checkDecodeLMN (i_ctx_t * i_ctx_p , ref * CIEdict)"		10995708	0					
ANR	10995710	CompoundStatement		2049:0:66265:66795	10995708	0					
ANR	10995711	IdentifierDeclStatement	"int code = 0 , i ;"	2050:4:66271:66286	10995708	0	True				
ANR	10995712	IdentifierDecl	code = 0		10995708	0					
ANR	10995713	IdentifierDeclType	int		10995708	0					
ANR	10995714	Identifier	code		10995708	1					
ANR	10995715	AssignmentExpression	code = 0		10995708	2		=			
ANR	10995716	Identifier	code		10995708	0					
ANR	10995717	PrimaryExpression	0		10995708	1					
ANR	10995718	IdentifierDecl	i		10995708	1					
ANR	10995719	IdentifierDeclType	int		10995708	0					
ANR	10995720	Identifier	i		10995708	1					
ANR	10995721	IdentifierDeclStatement	"ref * tempref , valref ;"	2051:4:66292:66312	10995708	1	True				
ANR	10995722	IdentifierDecl	* tempref		10995708	0					
ANR	10995723	IdentifierDeclType	ref *		10995708	0					
ANR	10995724	Identifier	tempref		10995708	1					
ANR	10995725	IdentifierDecl	valref		10995708	1					
ANR	10995726	IdentifierDeclType	ref		10995708	0					
ANR	10995727	Identifier	valref		10995708	1					
ANR	10995728	ExpressionStatement	"code = dict_find_string ( CIEdict , ""DecodeLMN"" , & tempref )"	2053:4:66319:66374	10995708	2	True				
ANR	10995729	AssignmentExpression	"code = dict_find_string ( CIEdict , ""DecodeLMN"" , & tempref )"		10995708	0		=			
ANR	10995730	Identifier	code		10995708	0					
ANR	10995731	CallExpression	"dict_find_string ( CIEdict , ""DecodeLMN"" , & tempref )"		10995708	1					
ANR	10995732	Callee	dict_find_string		10995708	0					
ANR	10995733	Identifier	dict_find_string		10995708	0					
ANR	10995734	ArgumentList	CIEdict		10995708	1					
ANR	10995735	Argument	CIEdict		10995708	0					
ANR	10995736	Identifier	CIEdict		10995708	0					
ANR	10995737	Argument	"""DecodeLMN"""		10995708	1					
ANR	10995738	PrimaryExpression	"""DecodeLMN"""		10995708	0					
ANR	10995739	Argument	& tempref		10995708	2					
ANR	10995740	UnaryOperationExpression	& tempref		10995708	0					
ANR	10995741	UnaryOperator	&		10995708	0					
ANR	10995742	Identifier	tempref		10995708	1					
ANR	10995743	IfStatement	"if ( code > 0 && ! r_has_type ( tempref , t_null ) )"		10995708	3					
ANR	10995744	Condition	"code > 0 && ! r_has_type ( tempref , t_null )"	2054:8:66384:66423	10995708	0	True				
ANR	10995745	AndExpression	"code > 0 && ! r_has_type ( tempref , t_null )"		10995708	0		&&			
ANR	10995746	RelationalExpression	code > 0		10995708	0		>			
ANR	10995747	Identifier	code		10995708	0					
ANR	10995748	PrimaryExpression	0		10995708	1					
ANR	10995749	UnaryOperationExpression	"! r_has_type ( tempref , t_null )"		10995708	1					
ANR	10995750	UnaryOperator	!		10995708	0					
ANR	10995751	CallExpression	"r_has_type ( tempref , t_null )"		10995708	1					
ANR	10995752	Callee	r_has_type		10995708	0					
ANR	10995753	Identifier	r_has_type		10995708	0					
ANR	10995754	ArgumentList	tempref		10995708	1					
ANR	10995755	Argument	tempref		10995708	0					
ANR	10995756	Identifier	tempref		10995708	0					
ANR	10995757	Argument	t_null		10995708	1					
ANR	10995758	Identifier	t_null		10995708	0					
ANR	10995759	CompoundStatement		6:50:160:160	10995708	1					
ANR	10995760	IfStatement	if ( ! r_is_array ( tempref ) )		10995708	0					
ANR	10995761	Condition	! r_is_array ( tempref )	2055:12:66440:66459	10995708	0	True				
ANR	10995762	UnaryOperationExpression	! r_is_array ( tempref )		10995708	0					
ANR	10995763	UnaryOperator	!		10995708	0					
ANR	10995764	CallExpression	r_is_array ( tempref )		10995708	1					
ANR	10995765	Callee	r_is_array		10995708	0					
ANR	10995766	Identifier	r_is_array		10995708	0					
ANR	10995767	ArgumentList	tempref		10995708	1					
ANR	10995768	Argument	tempref		10995708	0					
ANR	10995769	Identifier	tempref		10995708	0					
ANR	10995770	ExpressionStatement	return_error ( gs_error_typecheck )	2056:12:66474:66506	10995708	1	True				
ANR	10995771	CallExpression	return_error ( gs_error_typecheck )		10995708	0					
ANR	10995772	Callee	return_error		10995708	0					
ANR	10995773	Identifier	return_error		10995708	0					
ANR	10995774	ArgumentList	gs_error_typecheck		10995708	1					
ANR	10995775	Argument	gs_error_typecheck		10995708	0					
ANR	10995776	Identifier	gs_error_typecheck		10995708	0					
ANR	10995777	IfStatement	if ( r_size ( tempref ) != 3 )		10995708	1					
ANR	10995778	Condition	r_size ( tempref ) != 3	2057:12:66520:66539	10995708	0	True				
ANR	10995779	EqualityExpression	r_size ( tempref ) != 3		10995708	0		!=			
ANR	10995780	CallExpression	r_size ( tempref )		10995708	0					
ANR	10995781	Callee	r_size		10995708	0					
ANR	10995782	Identifier	r_size		10995708	0					
ANR	10995783	ArgumentList	tempref		10995708	1					
ANR	10995784	Argument	tempref		10995708	0					
ANR	10995785	Identifier	tempref		10995708	0					
ANR	10995786	PrimaryExpression	3		10995708	1					
ANR	10995787	ExpressionStatement	return_error ( gs_error_rangecheck )	2058:12:66554:66587	10995708	1	True				
ANR	10995788	CallExpression	return_error ( gs_error_rangecheck )		10995708	0					
ANR	10995789	Callee	return_error		10995708	0					
ANR	10995790	Identifier	return_error		10995708	0					
ANR	10995791	ArgumentList	gs_error_rangecheck		10995708	1					
ANR	10995792	Argument	gs_error_rangecheck		10995708	0					
ANR	10995793	Identifier	gs_error_rangecheck		10995708	0					
ANR	10995794	ForStatement	for ( i = 0 ; i < 3 ; i ++ )		10995708	2					
ANR	10995795	ForInit	i = 0 ;	2060:13:66603:66606	10995708	0	True				
ANR	10995796	AssignmentExpression	i = 0		10995708	0		=			
ANR	10995797	Identifier	i		10995708	0					
ANR	10995798	PrimaryExpression	0		10995708	1					
ANR	10995799	Condition	i < 3	2060:17:66607:66609	10995708	1	True				
ANR	10995800	RelationalExpression	i < 3		10995708	0		<			
ANR	10995801	Identifier	i		10995708	0					
ANR	10995802	PrimaryExpression	3		10995708	1					
ANR	10995803	PostIncDecOperationExpression	i ++	2060:21:66611:66613	10995708	2	True				
ANR	10995804	Identifier	i		10995708	0					
ANR	10995805	IncDec	++		10995708	1					
ANR	10995806	CompoundStatement		12:26:350:350	10995708	3					
ANR	10995807	ExpressionStatement	"code = array_get ( imemory , tempref , i , & valref )"	2061:12:66630:66676	10995708	0	True				
ANR	10995808	AssignmentExpression	"code = array_get ( imemory , tempref , i , & valref )"		10995708	0		=			
ANR	10995809	Identifier	code		10995708	0					
ANR	10995810	CallExpression	"array_get ( imemory , tempref , i , & valref )"		10995708	1					
ANR	10995811	Callee	array_get		10995708	0					
ANR	10995812	Identifier	array_get		10995708	0					
ANR	10995813	ArgumentList	imemory		10995708	1					
ANR	10995814	Argument	imemory		10995708	0					
ANR	10995815	Identifier	imemory		10995708	0					
ANR	10995816	Argument	tempref		10995708	1					
ANR	10995817	Identifier	tempref		10995708	0					
ANR	10995818	Argument	i		10995708	2					
ANR	10995819	Identifier	i		10995708	0					
ANR	10995820	Argument	& valref		10995708	3					
ANR	10995821	UnaryOperationExpression	& valref		10995708	0					
ANR	10995822	UnaryOperator	&		10995708	0					
ANR	10995823	Identifier	valref		10995708	1					
ANR	10995824	IfStatement	if ( code < 0 )		10995708	1					
ANR	10995825	Condition	code < 0	2062:16:66694:66701	10995708	0	True				
ANR	10995826	RelationalExpression	code < 0		10995708	0		<			
ANR	10995827	Identifier	code		10995708	0					
ANR	10995828	PrimaryExpression	0		10995708	1					
ANR	10995829	ReturnStatement	return code ;	2063:16:66720:66731	10995708	1	True				
ANR	10995830	Identifier	code		10995708	0					
ANR	10995831	ExpressionStatement	check_proc ( valref )	2064:12:66745:66763	10995708	2	True				
ANR	10995832	CallExpression	check_proc ( valref )		10995708	0					
ANR	10995833	Callee	check_proc		10995708	0					
ANR	10995834	Identifier	check_proc		10995708	0					
ANR	10995835	ArgumentList	valref		10995708	1					
ANR	10995836	Argument	valref		10995708	0					
ANR	10995837	Identifier	valref		10995708	0					
ANR	10995838	ReturnStatement	return 0 ;	2067:4:66785:66793	10995708	4	True				
ANR	10995839	PrimaryExpression	0		10995708	0					
ANR	10995840	ReturnType	static int		10995708	1					
ANR	10995841	Identifier	checkDecodeLMN		10995708	2					
ANR	10995842	ParameterList	"i_ctx_t * i_ctx_p , ref * CIEdict"		10995708	3					
ANR	10995843	Parameter	i_ctx_t * i_ctx_p	2048:26:66232:66248	10995708	0	True				
ANR	10995844	ParameterType	i_ctx_t *		10995708	0					
ANR	10995845	Identifier	i_ctx_p		10995708	1					
ANR	10995846	Parameter	ref * CIEdict	2048:45:66251:66262	10995708	1	True				
ANR	10995847	ParameterType	ref *		10995708	0					
ANR	10995848	Identifier	CIEdict		10995708	1					
ANR	10995849	CFGEntryNode	ENTRY		10995708		True				
ANR	10995850	CFGExitNode	EXIT		10995708		True				
ANR	10995851	Symbol	code		10995708						
ANR	10995852	Symbol	dict_find_string		10995708						
ANR	10995853	Symbol	gs_error_rangecheck		10995708						
ANR	10995854	Symbol	array_get		10995708						
ANR	10995855	Symbol	i		10995708						
ANR	10995856	Symbol	& tempref		10995708						
ANR	10995857	Symbol	r_has_type		10995708						
ANR	10995858	Symbol	t_null		10995708						
ANR	10995859	Symbol	gs_error_typecheck		10995708						
ANR	10995860	Symbol	& valref		10995708						
ANR	10995861	Symbol	i_ctx_p		10995708						
ANR	10995862	Symbol	valref		10995708						
ANR	10995863	Symbol	r_size		10995708						
ANR	10995864	Symbol	CIEdict		10995708						
ANR	10995865	Symbol	r_is_array		10995708						
ANR	10995866	Symbol	imemory		10995708						
ANR	10995867	Symbol	tempref		10995708						
ANR	10995868	Function	checkMatrixLMN	2070:0:66852:67371							
ANR	10995869	FunctionDef	"checkMatrixLMN (i_ctx_t * i_ctx_p , ref * CIEdict)"		10995868	0					
ANR	10995870	CompoundStatement		2071:0:66911:67371	10995868	0					
ANR	10995871	IdentifierDeclStatement	int code ;	2072:4:66917:66925	10995868	0	True				
ANR	10995872	IdentifierDecl	code		10995868	0					
ANR	10995873	IdentifierDeclType	int		10995868	0					
ANR	10995874	Identifier	code		10995868	1					
ANR	10995875	IdentifierDeclStatement	float value [ 9 ] ;	2073:4:66931:66945	10995868	1	True				
ANR	10995876	IdentifierDecl	value [ 9 ]		10995868	0					
ANR	10995877	IdentifierDeclType	float [ 9 ]		10995868	0					
ANR	10995878	Identifier	value		10995868	1					
ANR	10995879	PrimaryExpression	9		10995868	2					
ANR	10995880	IdentifierDeclStatement	ref * tempref ;	2074:4:66951:66963	10995868	2	True				
ANR	10995881	IdentifierDecl	* tempref		10995868	0					
ANR	10995882	IdentifierDeclType	ref *		10995868	0					
ANR	10995883	Identifier	tempref		10995868	1					
ANR	10995884	ExpressionStatement	"code = dict_find_string ( CIEdict , ""MatrixLMN"" , & tempref )"	2076:4:66970:67025	10995868	3	True				
ANR	10995885	AssignmentExpression	"code = dict_find_string ( CIEdict , ""MatrixLMN"" , & tempref )"		10995868	0		=			
ANR	10995886	Identifier	code		10995868	0					
ANR	10995887	CallExpression	"dict_find_string ( CIEdict , ""MatrixLMN"" , & tempref )"		10995868	1					
ANR	10995888	Callee	dict_find_string		10995868	0					
ANR	10995889	Identifier	dict_find_string		10995868	0					
ANR	10995890	ArgumentList	CIEdict		10995868	1					
ANR	10995891	Argument	CIEdict		10995868	0					
ANR	10995892	Identifier	CIEdict		10995868	0					
ANR	10995893	Argument	"""MatrixLMN"""		10995868	1					
ANR	10995894	PrimaryExpression	"""MatrixLMN"""		10995868	0					
ANR	10995895	Argument	& tempref		10995868	2					
ANR	10995896	UnaryOperationExpression	& tempref		10995868	0					
ANR	10995897	UnaryOperator	&		10995868	0					
ANR	10995898	Identifier	tempref		10995868	1					
ANR	10995899	IfStatement	"if ( code > 0 && ! r_has_type ( tempref , t_null ) )"		10995868	4					
ANR	10995900	Condition	"code > 0 && ! r_has_type ( tempref , t_null )"	2077:8:67035:67074	10995868	0	True				
ANR	10995901	AndExpression	"code > 0 && ! r_has_type ( tempref , t_null )"		10995868	0		&&			
ANR	10995902	RelationalExpression	code > 0		10995868	0		>			
ANR	10995903	Identifier	code		10995868	0					
ANR	10995904	PrimaryExpression	0		10995868	1					
ANR	10995905	UnaryOperationExpression	"! r_has_type ( tempref , t_null )"		10995868	1					
ANR	10995906	UnaryOperator	!		10995868	0					
ANR	10995907	CallExpression	"r_has_type ( tempref , t_null )"		10995868	1					
ANR	10995908	Callee	r_has_type		10995868	0					
ANR	10995909	Identifier	r_has_type		10995868	0					
ANR	10995910	ArgumentList	tempref		10995868	1					
ANR	10995911	Argument	tempref		10995868	0					
ANR	10995912	Identifier	tempref		10995868	0					
ANR	10995913	Argument	t_null		10995868	1					
ANR	10995914	Identifier	t_null		10995868	0					
ANR	10995915	CompoundStatement		7:50:165:165	10995868	1					
ANR	10995916	IfStatement	if ( ! r_is_array ( tempref ) )		10995868	0					
ANR	10995917	Condition	! r_is_array ( tempref )	2078:12:67091:67110	10995868	0	True				
ANR	10995918	UnaryOperationExpression	! r_is_array ( tempref )		10995868	0					
ANR	10995919	UnaryOperator	!		10995868	0					
ANR	10995920	CallExpression	r_is_array ( tempref )		10995868	1					
ANR	10995921	Callee	r_is_array		10995868	0					
ANR	10995922	Identifier	r_is_array		10995868	0					
ANR	10995923	ArgumentList	tempref		10995868	1					
ANR	10995924	Argument	tempref		10995868	0					
ANR	10995925	Identifier	tempref		10995868	0					
ANR	10995926	ExpressionStatement	return_error ( gs_error_typecheck )	2079:12:67125:67157	10995868	1	True				
ANR	10995927	CallExpression	return_error ( gs_error_typecheck )		10995868	0					
ANR	10995928	Callee	return_error		10995868	0					
ANR	10995929	Identifier	return_error		10995868	0					
ANR	10995930	ArgumentList	gs_error_typecheck		10995868	1					
ANR	10995931	Argument	gs_error_typecheck		10995868	0					
ANR	10995932	Identifier	gs_error_typecheck		10995868	0					
ANR	10995933	IfStatement	if ( r_size ( tempref ) != 9 )		10995868	1					
ANR	10995934	Condition	r_size ( tempref ) != 9	2080:12:67171:67190	10995868	0	True				
ANR	10995935	EqualityExpression	r_size ( tempref ) != 9		10995868	0		!=			
ANR	10995936	CallExpression	r_size ( tempref )		10995868	0					
ANR	10995937	Callee	r_size		10995868	0					
ANR	10995938	Identifier	r_size		10995868	0					
ANR	10995939	ArgumentList	tempref		10995868	1					
ANR	10995940	Argument	tempref		10995868	0					
ANR	10995941	Identifier	tempref		10995868	0					
ANR	10995942	PrimaryExpression	9		10995868	1					
ANR	10995943	ExpressionStatement	return_error ( gs_error_rangecheck )	2081:12:67205:67238	10995868	1	True				
ANR	10995944	CallExpression	return_error ( gs_error_rangecheck )		10995868	0					
ANR	10995945	Callee	return_error		10995868	0					
ANR	10995946	Identifier	return_error		10995868	0					
ANR	10995947	ArgumentList	gs_error_rangecheck		10995868	1					
ANR	10995948	Argument	gs_error_rangecheck		10995868	0					
ANR	10995949	Identifier	gs_error_rangecheck		10995868	0					
ANR	10995950	ExpressionStatement	"code = get_cie_param_array ( imemory , tempref , 9 , value )"	2082:8:67248:67302	10995868	2	True				
ANR	10995951	AssignmentExpression	"code = get_cie_param_array ( imemory , tempref , 9 , value )"		10995868	0		=			
ANR	10995952	Identifier	code		10995868	0					
ANR	10995953	CallExpression	"get_cie_param_array ( imemory , tempref , 9 , value )"		10995868	1					
ANR	10995954	Callee	get_cie_param_array		10995868	0					
ANR	10995955	Identifier	get_cie_param_array		10995868	0					
ANR	10995956	ArgumentList	imemory		10995868	1					
ANR	10995957	Argument	imemory		10995868	0					
ANR	10995958	Identifier	imemory		10995868	0					
ANR	10995959	Argument	tempref		10995868	1					
ANR	10995960	Identifier	tempref		10995868	0					
ANR	10995961	Argument	9		10995868	2					
ANR	10995962	PrimaryExpression	9		10995868	0					
ANR	10995963	Argument	value		10995868	3					
ANR	10995964	Identifier	value		10995868	0					
ANR	10995965	IfStatement	if ( code < 0 )		10995868	3					
ANR	10995966	Condition	code < 0	2083:12:67316:67323	10995868	0	True				
ANR	10995967	RelationalExpression	code < 0		10995868	0		<			
ANR	10995968	Identifier	code		10995868	0					
ANR	10995969	PrimaryExpression	0		10995868	1					
ANR	10995970	ReturnStatement	return code ;	2084:12:67338:67349	10995868	1	True				
ANR	10995971	Identifier	code		10995868	0					
ANR	10995972	ReturnStatement	return 0 ;	2086:4:67361:67369	10995868	5	True				
ANR	10995973	PrimaryExpression	0		10995868	0					
ANR	10995974	ReturnType	static int		10995868	1					
ANR	10995975	Identifier	checkMatrixLMN		10995868	2					
ANR	10995976	ParameterList	"i_ctx_t * i_ctx_p , ref * CIEdict"		10995868	3					
ANR	10995977	Parameter	i_ctx_t * i_ctx_p	2070:26:66878:66894	10995868	0	True				
ANR	10995978	ParameterType	i_ctx_t *		10995868	0					
ANR	10995979	Identifier	i_ctx_p		10995868	1					
ANR	10995980	Parameter	ref * CIEdict	2070:45:66897:66908	10995868	1	True				
ANR	10995981	ParameterType	ref *		10995868	0					
ANR	10995982	Identifier	CIEdict		10995868	1					
ANR	10995983	CFGEntryNode	ENTRY		10995868		True				
ANR	10995984	CFGExitNode	EXIT		10995868		True				
ANR	10995985	Symbol	code		10995868						
ANR	10995986	Symbol	dict_find_string		10995868						
ANR	10995987	Symbol	gs_error_rangecheck		10995868						
ANR	10995988	Symbol	& tempref		10995868						
ANR	10995989	Symbol	t_null		10995868						
ANR	10995990	Symbol	r_has_type		10995868						
ANR	10995991	Symbol	gs_error_typecheck		10995868						
ANR	10995992	Symbol	i_ctx_p		10995868						
ANR	10995993	Symbol	r_size		10995868						
ANR	10995994	Symbol	CIEdict		10995868						
ANR	10995995	Symbol	r_is_array		10995868						
ANR	10995996	Symbol	imemory		10995868						
ANR	10995997	Symbol	get_cie_param_array		10995868						
ANR	10995998	Symbol	value		10995868						
ANR	10995999	Symbol	tempref		10995868						
ANR	10996000	Function	hashcieaspace	2090:0:67390:68491							
ANR	10996001	FunctionDef	"hashcieaspace (i_ctx_t * i_ctx_p , ref * space , gs_md5_state_t * md5)"		10996000	0					
ANR	10996002	CompoundStatement		2091:0:67466:68491	10996000	0					
ANR	10996003	IdentifierDeclStatement	int code = 0 ;	2092:4:67472:67484	10996000	0	True				
ANR	10996004	IdentifierDecl	code = 0		10996000	0					
ANR	10996005	IdentifierDeclType	int		10996000	0					
ANR	10996006	Identifier	code		10996000	1					
ANR	10996007	AssignmentExpression	code = 0		10996000	2		=			
ANR	10996008	Identifier	code		10996000	0					
ANR	10996009	PrimaryExpression	0		10996000	1					
ANR	10996010	IdentifierDeclStatement	"ref CIEdict1 , spacename ;"	2093:4:67490:67513	10996000	1	True				
ANR	10996011	IdentifierDecl	CIEdict1		10996000	0					
ANR	10996012	IdentifierDeclType	ref		10996000	0					
ANR	10996013	Identifier	CIEdict1		10996000	1					
ANR	10996014	IdentifierDecl	spacename		10996000	1					
ANR	10996015	IdentifierDeclType	ref		10996000	0					
ANR	10996016	Identifier	spacename		10996000	1					
ANR	10996017	ExpressionStatement	"code = array_get ( imemory , space , 0 , & spacename )"	2095:4:67520:67567	10996000	2	True				
ANR	10996018	AssignmentExpression	"code = array_get ( imemory , space , 0 , & spacename )"		10996000	0		=			
ANR	10996019	Identifier	code		10996000	0					
ANR	10996020	CallExpression	"array_get ( imemory , space , 0 , & spacename )"		10996000	1					
ANR	10996021	Callee	array_get		10996000	0					
ANR	10996022	Identifier	array_get		10996000	0					
ANR	10996023	ArgumentList	imemory		10996000	1					
ANR	10996024	Argument	imemory		10996000	0					
ANR	10996025	Identifier	imemory		10996000	0					
ANR	10996026	Argument	space		10996000	1					
ANR	10996027	Identifier	space		10996000	0					
ANR	10996028	Argument	0		10996000	2					
ANR	10996029	PrimaryExpression	0		10996000	0					
ANR	10996030	Argument	& spacename		10996000	3					
ANR	10996031	UnaryOperationExpression	& spacename		10996000	0					
ANR	10996032	UnaryOperator	&		10996000	0					
ANR	10996033	Identifier	spacename		10996000	1					
ANR	10996034	IfStatement	if ( code < 0 )		10996000	3					
ANR	10996035	Condition	code < 0	2096:8:67577:67584	10996000	0	True				
ANR	10996036	RelationalExpression	code < 0		10996000	0		<			
ANR	10996037	Identifier	code		10996000	0					
ANR	10996038	PrimaryExpression	0		10996000	1					
ANR	10996039	ReturnStatement	return 0 ;	2097:8:67595:67603	10996000	1	True				
ANR	10996040	PrimaryExpression	0		10996000	0					
ANR	10996041	ExpressionStatement	"gs_md5_append ( md5 , ( const gs_md5_byte_t * ) & spacename . value . pname , sizeof ( spacename . value . pname ) )"	2098:4:67609:67705	10996000	4	True				
ANR	10996042	CallExpression	"gs_md5_append ( md5 , ( const gs_md5_byte_t * ) & spacename . value . pname , sizeof ( spacename . value . pname ) )"		10996000	0					
ANR	10996043	Callee	gs_md5_append		10996000	0					
ANR	10996044	Identifier	gs_md5_append		10996000	0					
ANR	10996045	ArgumentList	md5		10996000	1					
ANR	10996046	Argument	md5		10996000	0					
ANR	10996047	Identifier	md5		10996000	0					
ANR	10996048	Argument	( const gs_md5_byte_t * ) & spacename . value . pname		10996000	1					
ANR	10996049	CastExpression	( const gs_md5_byte_t * ) & spacename . value . pname		10996000	0					
ANR	10996050	CastTarget	const gs_md5_byte_t *		10996000	0					
ANR	10996051	UnaryOperationExpression	& spacename . value . pname		10996000	1					
ANR	10996052	UnaryOperator	&		10996000	0					
ANR	10996053	MemberAccess	spacename . value . pname		10996000	1					
ANR	10996054	MemberAccess	spacename . value		10996000	0					
ANR	10996055	Identifier	spacename		10996000	0					
ANR	10996056	Identifier	value		10996000	1					
ANR	10996057	Identifier	pname		10996000	1					
ANR	10996058	Argument	sizeof ( spacename . value . pname )		10996000	2					
ANR	10996059	SizeofExpression	sizeof ( spacename . value . pname )		10996000	0					
ANR	10996060	Sizeof	sizeof		10996000	0					
ANR	10996061	MemberAccess	spacename . value . pname		10996000	1					
ANR	10996062	MemberAccess	spacename . value		10996000	0					
ANR	10996063	Identifier	spacename		10996000	0					
ANR	10996064	Identifier	value		10996000	1					
ANR	10996065	Identifier	pname		10996000	1					
ANR	10996066	ExpressionStatement	"code = array_get ( imemory , space , 1 , & CIEdict1 )"	2100:4:67712:67758	10996000	5	True				
ANR	10996067	AssignmentExpression	"code = array_get ( imemory , space , 1 , & CIEdict1 )"		10996000	0		=			
ANR	10996068	Identifier	code		10996000	0					
ANR	10996069	CallExpression	"array_get ( imemory , space , 1 , & CIEdict1 )"		10996000	1					
ANR	10996070	Callee	array_get		10996000	0					
ANR	10996071	Identifier	array_get		10996000	0					
ANR	10996072	ArgumentList	imemory		10996000	1					
ANR	10996073	Argument	imemory		10996000	0					
ANR	10996074	Identifier	imemory		10996000	0					
ANR	10996075	Argument	space		10996000	1					
ANR	10996076	Identifier	space		10996000	0					
ANR	10996077	Argument	1		10996000	2					
ANR	10996078	PrimaryExpression	1		10996000	0					
ANR	10996079	Argument	& CIEdict1		10996000	3					
ANR	10996080	UnaryOperationExpression	& CIEdict1		10996000	0					
ANR	10996081	UnaryOperator	&		10996000	0					
ANR	10996082	Identifier	CIEdict1		10996000	1					
ANR	10996083	IfStatement	if ( code < 0 )		10996000	6					
ANR	10996084	Condition	code < 0	2101:8:67768:67775	10996000	0	True				
ANR	10996085	RelationalExpression	code < 0		10996000	0		<			
ANR	10996086	Identifier	code		10996000	0					
ANR	10996087	PrimaryExpression	0		10996000	1					
ANR	10996088	ReturnStatement	return 0 ;	2102:8:67786:67794	10996000	1	True				
ANR	10996089	PrimaryExpression	0		10996000	0					
ANR	10996090	IfStatement	"if ( ! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""WhitePoint"" , md5 ) )"		10996000	7					
ANR	10996091	Condition	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""WhitePoint"" , md5 )"	2103:8:67804:67862	10996000	0	True				
ANR	10996092	UnaryOperationExpression	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""WhitePoint"" , md5 )"		10996000	0					
ANR	10996093	UnaryOperator	!		10996000	0					
ANR	10996094	CallExpression	"hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""WhitePoint"" , md5 )"		10996000	1					
ANR	10996095	Callee	hashdictkey		10996000	0					
ANR	10996096	Identifier	hashdictkey		10996000	0					
ANR	10996097	ArgumentList	i_ctx_p		10996000	1					
ANR	10996098	Argument	i_ctx_p		10996000	0					
ANR	10996099	Identifier	i_ctx_p		10996000	0					
ANR	10996100	Argument	& CIEdict1		10996000	1					
ANR	10996101	UnaryOperationExpression	& CIEdict1		10996000	0					
ANR	10996102	UnaryOperator	&		10996000	0					
ANR	10996103	Identifier	CIEdict1		10996000	1					
ANR	10996104	Argument	"( char * ) ""WhitePoint"""		10996000	2					
ANR	10996105	CastExpression	"( char * ) ""WhitePoint"""		10996000	0					
ANR	10996106	CastTarget	char *		10996000	0					
ANR	10996107	PrimaryExpression	"""WhitePoint"""		10996000	1					
ANR	10996108	Argument	md5		10996000	3					
ANR	10996109	Identifier	md5		10996000	0					
ANR	10996110	ReturnStatement	return 0 ;	2104:8:67873:67881	10996000	1	True				
ANR	10996111	PrimaryExpression	0		10996000	0					
ANR	10996112	IfStatement	"if ( ! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""BlackPoint"" , md5 ) )"		10996000	8					
ANR	10996113	Condition	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""BlackPoint"" , md5 )"	2105:8:67891:67949	10996000	0	True				
ANR	10996114	UnaryOperationExpression	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""BlackPoint"" , md5 )"		10996000	0					
ANR	10996115	UnaryOperator	!		10996000	0					
ANR	10996116	CallExpression	"hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""BlackPoint"" , md5 )"		10996000	1					
ANR	10996117	Callee	hashdictkey		10996000	0					
ANR	10996118	Identifier	hashdictkey		10996000	0					
ANR	10996119	ArgumentList	i_ctx_p		10996000	1					
ANR	10996120	Argument	i_ctx_p		10996000	0					
ANR	10996121	Identifier	i_ctx_p		10996000	0					
ANR	10996122	Argument	& CIEdict1		10996000	1					
ANR	10996123	UnaryOperationExpression	& CIEdict1		10996000	0					
ANR	10996124	UnaryOperator	&		10996000	0					
ANR	10996125	Identifier	CIEdict1		10996000	1					
ANR	10996126	Argument	"( char * ) ""BlackPoint"""		10996000	2					
ANR	10996127	CastExpression	"( char * ) ""BlackPoint"""		10996000	0					
ANR	10996128	CastTarget	char *		10996000	0					
ANR	10996129	PrimaryExpression	"""BlackPoint"""		10996000	1					
ANR	10996130	Argument	md5		10996000	3					
ANR	10996131	Identifier	md5		10996000	0					
ANR	10996132	ReturnStatement	return 0 ;	2106:8:67960:67968	10996000	1	True				
ANR	10996133	PrimaryExpression	0		10996000	0					
ANR	10996134	IfStatement	"if ( ! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""RangeA"" , md5 ) )"		10996000	9					
ANR	10996135	Condition	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""RangeA"" , md5 )"	2107:8:67978:68032	10996000	0	True				
ANR	10996136	UnaryOperationExpression	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""RangeA"" , md5 )"		10996000	0					
ANR	10996137	UnaryOperator	!		10996000	0					
ANR	10996138	CallExpression	"hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""RangeA"" , md5 )"		10996000	1					
ANR	10996139	Callee	hashdictkey		10996000	0					
ANR	10996140	Identifier	hashdictkey		10996000	0					
ANR	10996141	ArgumentList	i_ctx_p		10996000	1					
ANR	10996142	Argument	i_ctx_p		10996000	0					
ANR	10996143	Identifier	i_ctx_p		10996000	0					
ANR	10996144	Argument	& CIEdict1		10996000	1					
ANR	10996145	UnaryOperationExpression	& CIEdict1		10996000	0					
ANR	10996146	UnaryOperator	&		10996000	0					
ANR	10996147	Identifier	CIEdict1		10996000	1					
ANR	10996148	Argument	"( char * ) ""RangeA"""		10996000	2					
ANR	10996149	CastExpression	"( char * ) ""RangeA"""		10996000	0					
ANR	10996150	CastTarget	char *		10996000	0					
ANR	10996151	PrimaryExpression	"""RangeA"""		10996000	1					
ANR	10996152	Argument	md5		10996000	3					
ANR	10996153	Identifier	md5		10996000	0					
ANR	10996154	ReturnStatement	return 0 ;	2108:8:68043:68051	10996000	1	True				
ANR	10996155	PrimaryExpression	0		10996000	0					
ANR	10996156	IfStatement	"if ( ! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""DecodeA"" , md5 ) )"		10996000	10					
ANR	10996157	Condition	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""DecodeA"" , md5 )"	2109:8:68061:68116	10996000	0	True				
ANR	10996158	UnaryOperationExpression	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""DecodeA"" , md5 )"		10996000	0					
ANR	10996159	UnaryOperator	!		10996000	0					
ANR	10996160	CallExpression	"hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""DecodeA"" , md5 )"		10996000	1					
ANR	10996161	Callee	hashdictkey		10996000	0					
ANR	10996162	Identifier	hashdictkey		10996000	0					
ANR	10996163	ArgumentList	i_ctx_p		10996000	1					
ANR	10996164	Argument	i_ctx_p		10996000	0					
ANR	10996165	Identifier	i_ctx_p		10996000	0					
ANR	10996166	Argument	& CIEdict1		10996000	1					
ANR	10996167	UnaryOperationExpression	& CIEdict1		10996000	0					
ANR	10996168	UnaryOperator	&		10996000	0					
ANR	10996169	Identifier	CIEdict1		10996000	1					
ANR	10996170	Argument	"( char * ) ""DecodeA"""		10996000	2					
ANR	10996171	CastExpression	"( char * ) ""DecodeA"""		10996000	0					
ANR	10996172	CastTarget	char *		10996000	0					
ANR	10996173	PrimaryExpression	"""DecodeA"""		10996000	1					
ANR	10996174	Argument	md5		10996000	3					
ANR	10996175	Identifier	md5		10996000	0					
ANR	10996176	ReturnStatement	return 0 ;	2110:8:68127:68135	10996000	1	True				
ANR	10996177	PrimaryExpression	0		10996000	0					
ANR	10996178	IfStatement	"if ( ! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""MatrixA"" , md5 ) )"		10996000	11					
ANR	10996179	Condition	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""MatrixA"" , md5 )"	2111:8:68145:68200	10996000	0	True				
ANR	10996180	UnaryOperationExpression	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""MatrixA"" , md5 )"		10996000	0					
ANR	10996181	UnaryOperator	!		10996000	0					
ANR	10996182	CallExpression	"hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""MatrixA"" , md5 )"		10996000	1					
ANR	10996183	Callee	hashdictkey		10996000	0					
ANR	10996184	Identifier	hashdictkey		10996000	0					
ANR	10996185	ArgumentList	i_ctx_p		10996000	1					
ANR	10996186	Argument	i_ctx_p		10996000	0					
ANR	10996187	Identifier	i_ctx_p		10996000	0					
ANR	10996188	Argument	& CIEdict1		10996000	1					
ANR	10996189	UnaryOperationExpression	& CIEdict1		10996000	0					
ANR	10996190	UnaryOperator	&		10996000	0					
ANR	10996191	Identifier	CIEdict1		10996000	1					
ANR	10996192	Argument	"( char * ) ""MatrixA"""		10996000	2					
ANR	10996193	CastExpression	"( char * ) ""MatrixA"""		10996000	0					
ANR	10996194	CastTarget	char *		10996000	0					
ANR	10996195	PrimaryExpression	"""MatrixA"""		10996000	1					
ANR	10996196	Argument	md5		10996000	3					
ANR	10996197	Identifier	md5		10996000	0					
ANR	10996198	ReturnStatement	return 0 ;	2112:8:68211:68219	10996000	1	True				
ANR	10996199	PrimaryExpression	0		10996000	0					
ANR	10996200	IfStatement	"if ( ! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""RangeLMN"" , md5 ) )"		10996000	12					
ANR	10996201	Condition	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""RangeLMN"" , md5 )"	2113:8:68229:68285	10996000	0	True				
ANR	10996202	UnaryOperationExpression	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""RangeLMN"" , md5 )"		10996000	0					
ANR	10996203	UnaryOperator	!		10996000	0					
ANR	10996204	CallExpression	"hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""RangeLMN"" , md5 )"		10996000	1					
ANR	10996205	Callee	hashdictkey		10996000	0					
ANR	10996206	Identifier	hashdictkey		10996000	0					
ANR	10996207	ArgumentList	i_ctx_p		10996000	1					
ANR	10996208	Argument	i_ctx_p		10996000	0					
ANR	10996209	Identifier	i_ctx_p		10996000	0					
ANR	10996210	Argument	& CIEdict1		10996000	1					
ANR	10996211	UnaryOperationExpression	& CIEdict1		10996000	0					
ANR	10996212	UnaryOperator	&		10996000	0					
ANR	10996213	Identifier	CIEdict1		10996000	1					
ANR	10996214	Argument	"( char * ) ""RangeLMN"""		10996000	2					
ANR	10996215	CastExpression	"( char * ) ""RangeLMN"""		10996000	0					
ANR	10996216	CastTarget	char *		10996000	0					
ANR	10996217	PrimaryExpression	"""RangeLMN"""		10996000	1					
ANR	10996218	Argument	md5		10996000	3					
ANR	10996219	Identifier	md5		10996000	0					
ANR	10996220	ReturnStatement	return 0 ;	2114:8:68296:68304	10996000	1	True				
ANR	10996221	PrimaryExpression	0		10996000	0					
ANR	10996222	IfStatement	"if ( ! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""DecodeLMN"" , md5 ) )"		10996000	13					
ANR	10996223	Condition	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""DecodeLMN"" , md5 )"	2115:8:68314:68371	10996000	0	True				
ANR	10996224	UnaryOperationExpression	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""DecodeLMN"" , md5 )"		10996000	0					
ANR	10996225	UnaryOperator	!		10996000	0					
ANR	10996226	CallExpression	"hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""DecodeLMN"" , md5 )"		10996000	1					
ANR	10996227	Callee	hashdictkey		10996000	0					
ANR	10996228	Identifier	hashdictkey		10996000	0					
ANR	10996229	ArgumentList	i_ctx_p		10996000	1					
ANR	10996230	Argument	i_ctx_p		10996000	0					
ANR	10996231	Identifier	i_ctx_p		10996000	0					
ANR	10996232	Argument	& CIEdict1		10996000	1					
ANR	10996233	UnaryOperationExpression	& CIEdict1		10996000	0					
ANR	10996234	UnaryOperator	&		10996000	0					
ANR	10996235	Identifier	CIEdict1		10996000	1					
ANR	10996236	Argument	"( char * ) ""DecodeLMN"""		10996000	2					
ANR	10996237	CastExpression	"( char * ) ""DecodeLMN"""		10996000	0					
ANR	10996238	CastTarget	char *		10996000	0					
ANR	10996239	PrimaryExpression	"""DecodeLMN"""		10996000	1					
ANR	10996240	Argument	md5		10996000	3					
ANR	10996241	Identifier	md5		10996000	0					
ANR	10996242	ReturnStatement	return 0 ;	2116:8:68382:68390	10996000	1	True				
ANR	10996243	PrimaryExpression	0		10996000	0					
ANR	10996244	IfStatement	"if ( ! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""MatrixMN"" , md5 ) )"		10996000	14					
ANR	10996245	Condition	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""MatrixMN"" , md5 )"	2117:8:68400:68456	10996000	0	True				
ANR	10996246	UnaryOperationExpression	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""MatrixMN"" , md5 )"		10996000	0					
ANR	10996247	UnaryOperator	!		10996000	0					
ANR	10996248	CallExpression	"hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""MatrixMN"" , md5 )"		10996000	1					
ANR	10996249	Callee	hashdictkey		10996000	0					
ANR	10996250	Identifier	hashdictkey		10996000	0					
ANR	10996251	ArgumentList	i_ctx_p		10996000	1					
ANR	10996252	Argument	i_ctx_p		10996000	0					
ANR	10996253	Identifier	i_ctx_p		10996000	0					
ANR	10996254	Argument	& CIEdict1		10996000	1					
ANR	10996255	UnaryOperationExpression	& CIEdict1		10996000	0					
ANR	10996256	UnaryOperator	&		10996000	0					
ANR	10996257	Identifier	CIEdict1		10996000	1					
ANR	10996258	Argument	"( char * ) ""MatrixMN"""		10996000	2					
ANR	10996259	CastExpression	"( char * ) ""MatrixMN"""		10996000	0					
ANR	10996260	CastTarget	char *		10996000	0					
ANR	10996261	PrimaryExpression	"""MatrixMN"""		10996000	1					
ANR	10996262	Argument	md5		10996000	3					
ANR	10996263	Identifier	md5		10996000	0					
ANR	10996264	ReturnStatement	return 0 ;	2118:8:68467:68475	10996000	1	True				
ANR	10996265	PrimaryExpression	0		10996000	0					
ANR	10996266	ReturnStatement	return 1 ;	2119:4:68481:68489	10996000	15	True				
ANR	10996267	PrimaryExpression	1		10996000	0					
ANR	10996268	ReturnType	static int		10996000	1					
ANR	10996269	Identifier	hashcieaspace		10996000	2					
ANR	10996270	ParameterList	"i_ctx_t * i_ctx_p , ref * space , gs_md5_state_t * md5"		10996000	3					
ANR	10996271	Parameter	i_ctx_t * i_ctx_p	2090:25:67415:67430	10996000	0	True				
ANR	10996272	ParameterType	i_ctx_t *		10996000	0					
ANR	10996273	Identifier	i_ctx_p		10996000	1					
ANR	10996274	Parameter	ref * space	2090:43:67433:67442	10996000	1	True				
ANR	10996275	ParameterType	ref *		10996000	0					
ANR	10996276	Identifier	space		10996000	1					
ANR	10996277	Parameter	gs_md5_state_t * md5	2090:55:67445:67463	10996000	2	True				
ANR	10996278	ParameterType	gs_md5_state_t *		10996000	0					
ANR	10996279	Identifier	md5		10996000	1					
ANR	10996280	CFGEntryNode	ENTRY		10996000		True				
ANR	10996281	CFGExitNode	EXIT		10996000		True				
ANR	10996282	Symbol	spacename		10996000						
ANR	10996283	Symbol	hashdictkey		10996000						
ANR	10996284	Symbol	code		10996000						
ANR	10996285	Symbol	array_get		10996000						
ANR	10996286	Symbol	& spacename		10996000						
ANR	10996287	Symbol	& CIEdict1		10996000						
ANR	10996288	Symbol	space		10996000						
ANR	10996289	Symbol	spacename . value . pname		10996000						
ANR	10996290	Symbol	i_ctx_p		10996000						
ANR	10996291	Symbol	& spacename . value . pname		10996000						
ANR	10996292	Symbol	spacename . value		10996000						
ANR	10996293	Symbol	& spacename . value		10996000						
ANR	10996294	Symbol	CIEdict1		10996000						
ANR	10996295	Symbol	imemory		10996000						
ANR	10996296	Symbol	md5		10996000						
ANR	10996297	Function	setcieaspace	2122:0:68494:70196							
ANR	10996298	FunctionDef	"setcieaspace (i_ctx_t * i_ctx_p , ref * r , int * stage , int * cont , int CIESubst)"		10996297	0					
ANR	10996299	CompoundStatement		2123:0:68582:70196	10996297	0					
ANR	10996300	IdentifierDeclStatement	int code = 0 ;	2124:4:68588:68600	10996297	0	True				
ANR	10996301	IdentifierDecl	code = 0		10996297	0					
ANR	10996302	IdentifierDeclType	int		10996297	0					
ANR	10996303	Identifier	code		10996297	1					
ANR	10996304	AssignmentExpression	code = 0		10996297	2		=			
ANR	10996305	Identifier	code		10996297	0					
ANR	10996306	PrimaryExpression	0		10996297	1					
ANR	10996307	IdentifierDeclStatement	"ref CIEDict , * nocie ;"	2125:4:68606:68625	10996297	1	True				
ANR	10996308	IdentifierDecl	CIEDict		10996297	0					
ANR	10996309	IdentifierDeclType	ref		10996297	0					
ANR	10996310	Identifier	CIEDict		10996297	1					
ANR	10996311	IdentifierDecl	* nocie		10996297	1					
ANR	10996312	IdentifierDeclType	ref *		10996297	0					
ANR	10996313	Identifier	nocie		10996297	1					
ANR	10996314	IdentifierDeclStatement	ulong dictkey ;	2126:4:68631:68644	10996297	2	True				
ANR	10996315	IdentifierDecl	dictkey		10996297	0					
ANR	10996316	IdentifierDeclType	ulong		10996297	0					
ANR	10996317	Identifier	dictkey		10996297	1					
ANR	10996318	IdentifierDeclStatement	gs_md5_state_t md5 ;	2127:4:68650:68668	10996297	3	True				
ANR	10996319	IdentifierDecl	md5		10996297	0					
ANR	10996320	IdentifierDeclType	gs_md5_state_t		10996297	0					
ANR	10996321	Identifier	md5		10996297	1					
ANR	10996322	IdentifierDeclStatement	byte key [ 16 ] ;	2128:4:68674:68686	10996297	4	True				
ANR	10996323	IdentifierDecl	key [ 16 ]		10996297	0					
ANR	10996324	IdentifierDeclType	byte [ 16 ]		10996297	0					
ANR	10996325	Identifier	key		10996297	1					
ANR	10996326	PrimaryExpression	16		10996297	2					
ANR	10996327	IfStatement	if ( i_ctx_p -> language_level < 2 )		10996297	5					
ANR	10996328	Condition	i_ctx_p -> language_level < 2	2130:8:68697:68723	10996297	0	True				
ANR	10996329	RelationalExpression	i_ctx_p -> language_level < 2		10996297	0		<			
ANR	10996330	PtrMemberAccess	i_ctx_p -> language_level		10996297	0					
ANR	10996331	Identifier	i_ctx_p		10996297	0					
ANR	10996332	Identifier	language_level		10996297	1					
ANR	10996333	PrimaryExpression	2		10996297	1					
ANR	10996334	ExpressionStatement	return_error ( gs_error_undefined )	2131:8:68734:68766	10996297	1	True				
ANR	10996335	CallExpression	return_error ( gs_error_undefined )		10996297	0					
ANR	10996336	Callee	return_error		10996297	0					
ANR	10996337	Identifier	return_error		10996297	0					
ANR	10996338	ArgumentList	gs_error_undefined		10996297	1					
ANR	10996339	Argument	gs_error_undefined		10996297	0					
ANR	10996340	Identifier	gs_error_undefined		10996297	0					
ANR	10996341	ExpressionStatement	"code = dict_find_string ( systemdict , ""NOCIE"" , & nocie )"	2133:4:68773:68825	10996297	6	True				
ANR	10996342	AssignmentExpression	"code = dict_find_string ( systemdict , ""NOCIE"" , & nocie )"		10996297	0		=			
ANR	10996343	Identifier	code		10996297	0					
ANR	10996344	CallExpression	"dict_find_string ( systemdict , ""NOCIE"" , & nocie )"		10996297	1					
ANR	10996345	Callee	dict_find_string		10996297	0					
ANR	10996346	Identifier	dict_find_string		10996297	0					
ANR	10996347	ArgumentList	systemdict		10996297	1					
ANR	10996348	Argument	systemdict		10996297	0					
ANR	10996349	Identifier	systemdict		10996297	0					
ANR	10996350	Argument	"""NOCIE"""		10996297	1					
ANR	10996351	PrimaryExpression	"""NOCIE"""		10996297	0					
ANR	10996352	Argument	& nocie		10996297	2					
ANR	10996353	UnaryOperationExpression	& nocie		10996297	0					
ANR	10996354	UnaryOperator	&		10996297	0					
ANR	10996355	Identifier	nocie		10996297	1					
ANR	10996356	IfStatement	if ( code > 0 )		10996297	7					
ANR	10996357	Condition	code > 0	2134:8:68835:68842	10996297	0	True				
ANR	10996358	RelationalExpression	code > 0		10996297	0		>			
ANR	10996359	Identifier	code		10996297	0					
ANR	10996360	PrimaryExpression	0		10996297	1					
ANR	10996361	CompoundStatement		12:18:262:262	10996297	1					
ANR	10996362	IfStatement	"if ( ! r_has_type ( nocie , t_boolean ) )"		10996297	0					
ANR	10996363	Condition	"! r_has_type ( nocie , t_boolean )"	2135:12:68859:68887	10996297	0	True				
ANR	10996364	UnaryOperationExpression	"! r_has_type ( nocie , t_boolean )"		10996297	0					
ANR	10996365	UnaryOperator	!		10996297	0					
ANR	10996366	CallExpression	"r_has_type ( nocie , t_boolean )"		10996297	1					
ANR	10996367	Callee	r_has_type		10996297	0					
ANR	10996368	Identifier	r_has_type		10996297	0					
ANR	10996369	ArgumentList	nocie		10996297	1					
ANR	10996370	Argument	nocie		10996297	0					
ANR	10996371	Identifier	nocie		10996297	0					
ANR	10996372	Argument	t_boolean		10996297	1					
ANR	10996373	Identifier	t_boolean		10996297	0					
ANR	10996374	ExpressionStatement	return_error ( gs_error_typecheck )	2136:12:68902:68934	10996297	1	True				
ANR	10996375	CallExpression	return_error ( gs_error_typecheck )		10996297	0					
ANR	10996376	Callee	return_error		10996297	0					
ANR	10996377	Identifier	return_error		10996297	0					
ANR	10996378	ArgumentList	gs_error_typecheck		10996297	1					
ANR	10996379	Argument	gs_error_typecheck		10996297	0					
ANR	10996380	Identifier	gs_error_typecheck		10996297	0					
ANR	10996381	IfStatement	if ( nocie -> value . boolval )		10996297	1					
ANR	10996382	Condition	nocie -> value . boolval	2137:12:68948:68967	10996297	0	True				
ANR	10996383	MemberAccess	nocie -> value . boolval		10996297	0					
ANR	10996384	PtrMemberAccess	nocie -> value		10996297	0					
ANR	10996385	Identifier	nocie		10996297	0					
ANR	10996386	Identifier	value		10996297	1					
ANR	10996387	Identifier	boolval		10996297	1					
ANR	10996388	ReturnStatement	"return setgrayspace ( i_ctx_p , r , stage , cont , 1 ) ;"	2138:12:68982:69029	10996297	1	True				
ANR	10996389	CallExpression	"setgrayspace ( i_ctx_p , r , stage , cont , 1 )"		10996297	0					
ANR	10996390	Callee	setgrayspace		10996297	0					
ANR	10996391	Identifier	setgrayspace		10996297	0					
ANR	10996392	ArgumentList	i_ctx_p		10996297	1					
ANR	10996393	Argument	i_ctx_p		10996297	0					
ANR	10996394	Identifier	i_ctx_p		10996297	0					
ANR	10996395	Argument	r		10996297	1					
ANR	10996396	Identifier	r		10996297	0					
ANR	10996397	Argument	stage		10996297	2					
ANR	10996398	Identifier	stage		10996297	0					
ANR	10996399	Argument	cont		10996297	3					
ANR	10996400	Identifier	cont		10996297	0					
ANR	10996401	Argument	1		10996297	4					
ANR	10996402	PrimaryExpression	1		10996297	0					
ANR	10996403	ExpressionStatement	* cont = 0	2141:4:69042:69051	10996297	8	True				
ANR	10996404	AssignmentExpression	* cont = 0		10996297	0		=			
ANR	10996405	UnaryOperationExpression	* cont		10996297	0					
ANR	10996406	UnaryOperator	*		10996297	0					
ANR	10996407	Identifier	cont		10996297	1					
ANR	10996408	PrimaryExpression	0		10996297	1					
ANR	10996409	ExpressionStatement	"code = array_get ( imemory , r , 1 , & CIEDict )"	2142:4:69057:69098	10996297	9	True				
ANR	10996410	AssignmentExpression	"code = array_get ( imemory , r , 1 , & CIEDict )"		10996297	0		=			
ANR	10996411	Identifier	code		10996297	0					
ANR	10996412	CallExpression	"array_get ( imemory , r , 1 , & CIEDict )"		10996297	1					
ANR	10996413	Callee	array_get		10996297	0					
ANR	10996414	Identifier	array_get		10996297	0					
ANR	10996415	ArgumentList	imemory		10996297	1					
ANR	10996416	Argument	imemory		10996297	0					
ANR	10996417	Identifier	imemory		10996297	0					
ANR	10996418	Argument	r		10996297	1					
ANR	10996419	Identifier	r		10996297	0					
ANR	10996420	Argument	1		10996297	2					
ANR	10996421	PrimaryExpression	1		10996297	0					
ANR	10996422	Argument	& CIEDict		10996297	3					
ANR	10996423	UnaryOperationExpression	& CIEDict		10996297	0					
ANR	10996424	UnaryOperator	&		10996297	0					
ANR	10996425	Identifier	CIEDict		10996297	1					
ANR	10996426	IfStatement	if ( code < 0 )		10996297	10					
ANR	10996427	Condition	code < 0	2143:8:69108:69115	10996297	0	True				
ANR	10996428	RelationalExpression	code < 0		10996297	0		<			
ANR	10996429	Identifier	code		10996297	0					
ANR	10996430	PrimaryExpression	0		10996297	1					
ANR	10996431	ReturnStatement	return code ;	2144:8:69126:69137	10996297	1	True				
ANR	10996432	Identifier	code		10996297	0					
ANR	10996433	IfStatement	if ( ( * stage ) > 0 )		10996297	11					
ANR	10996434	Condition	( * stage ) > 0	2145:8:69147:69158	10996297	0	True				
ANR	10996435	RelationalExpression	( * stage ) > 0		10996297	0		>			
ANR	10996436	UnaryOperationExpression	* stage		10996297	0					
ANR	10996437	UnaryOperator	*		10996297	0					
ANR	10996438	Identifier	stage		10996297	1					
ANR	10996439	PrimaryExpression	0		10996297	1					
ANR	10996440	CompoundStatement		24:8:588:606	10996297	1					
ANR	10996441	IdentifierDeclStatement	gs_client_color cc ;	2146:8:69171:69189	10996297	0	True				
ANR	10996442	IdentifierDecl	cc		10996297	0					
ANR	10996443	IdentifierDeclType	gs_client_color		10996297	0					
ANR	10996444	Identifier	cc		10996297	1					
ANR	10996445	ExpressionStatement	cc . pattern = 0x00	2148:8:69200:69217	10996297	1	True				
ANR	10996446	AssignmentExpression	cc . pattern = 0x00		10996297	0		=			
ANR	10996447	MemberAccess	cc . pattern		10996297	0					
ANR	10996448	Identifier	cc		10996297	0					
ANR	10996449	Identifier	pattern		10996297	1					
ANR	10996450	PrimaryExpression	0x00		10996297	1					
ANR	10996451	ExpressionStatement	cc . paint . values [ 0 ] = 0	2149:8:69227:69249	10996297	2	True				
ANR	10996452	AssignmentExpression	cc . paint . values [ 0 ] = 0		10996297	0		=			
ANR	10996453	ArrayIndexing	cc . paint . values [ 0 ]		10996297	0					
ANR	10996454	MemberAccess	cc . paint . values		10996297	0					
ANR	10996455	MemberAccess	cc . paint		10996297	0					
ANR	10996456	Identifier	cc		10996297	0					
ANR	10996457	Identifier	paint		10996297	1					
ANR	10996458	Identifier	values		10996297	1					
ANR	10996459	PrimaryExpression	0		10996297	1					
ANR	10996460	PrimaryExpression	0		10996297	1					
ANR	10996461	ExpressionStatement	"code = gs_setcolor ( igs , & cc )"	2150:8:69259:69287	10996297	3	True				
ANR	10996462	AssignmentExpression	"code = gs_setcolor ( igs , & cc )"		10996297	0		=			
ANR	10996463	Identifier	code		10996297	0					
ANR	10996464	CallExpression	"gs_setcolor ( igs , & cc )"		10996297	1					
ANR	10996465	Callee	gs_setcolor		10996297	0					
ANR	10996466	Identifier	gs_setcolor		10996297	0					
ANR	10996467	ArgumentList	igs		10996297	1					
ANR	10996468	Argument	igs		10996297	0					
ANR	10996469	Identifier	igs		10996297	0					
ANR	10996470	Argument	& cc		10996297	1					
ANR	10996471	UnaryOperationExpression	& cc		10996297	0					
ANR	10996472	UnaryOperator	&		10996297	0					
ANR	10996473	Identifier	cc		10996297	1					
ANR	10996474	ExpressionStatement	* stage = 0	2151:8:69297:69307	10996297	4	True				
ANR	10996475	AssignmentExpression	* stage = 0		10996297	0		=			
ANR	10996476	UnaryOperationExpression	* stage		10996297	0					
ANR	10996477	UnaryOperator	*		10996297	0					
ANR	10996478	Identifier	stage		10996297	1					
ANR	10996479	PrimaryExpression	0		10996297	1					
ANR	10996480	ReturnStatement	return code ;	2152:8:69317:69328	10996297	5	True				
ANR	10996481	Identifier	code		10996297	0					
ANR	10996482	ExpressionStatement	gs_md5_init ( & md5 )	2154:4:69340:69357	10996297	12	True				
ANR	10996483	CallExpression	gs_md5_init ( & md5 )		10996297	0					
ANR	10996484	Callee	gs_md5_init		10996297	0					
ANR	10996485	Identifier	gs_md5_init		10996297	0					
ANR	10996486	ArgumentList	& md5		10996297	1					
ANR	10996487	Argument	& md5		10996297	0					
ANR	10996488	UnaryOperationExpression	& md5		10996297	0					
ANR	10996489	UnaryOperator	&		10996297	0					
ANR	10996490	Identifier	md5		10996297	1					
ANR	10996491	ExpressionStatement	dictkey = 0	2159:4:69548:69559	10996297	13	True				
ANR	10996492	AssignmentExpression	dictkey = 0		10996297	0		=			
ANR	10996493	Identifier	dictkey		10996297	0					
ANR	10996494	PrimaryExpression	0		10996297	1					
ANR	10996495	IfStatement	"if ( hashcieaspace ( i_ctx_p , r , & md5 ) )"		10996297	14					
ANR	10996496	Condition	"hashcieaspace ( i_ctx_p , r , & md5 )"	2160:8:69569:69599	10996297	0	True				
ANR	10996497	CallExpression	"hashcieaspace ( i_ctx_p , r , & md5 )"		10996297	0					
ANR	10996498	Callee	hashcieaspace		10996297	0					
ANR	10996499	Identifier	hashcieaspace		10996297	0					
ANR	10996500	ArgumentList	i_ctx_p		10996297	1					
ANR	10996501	Argument	i_ctx_p		10996297	0					
ANR	10996502	Identifier	i_ctx_p		10996297	0					
ANR	10996503	Argument	r		10996297	1					
ANR	10996504	Identifier	r		10996297	0					
ANR	10996505	Argument	& md5		10996297	2					
ANR	10996506	UnaryOperationExpression	& md5		10996297	0					
ANR	10996507	UnaryOperator	&		10996297	0					
ANR	10996508	Identifier	md5		10996297	1					
ANR	10996509	CompoundStatement		38:41:1019:1019	10996297	1					
ANR	10996510	ExpressionStatement	"gs_md5_finish ( & md5 , key )"	2167:8:69956:69980	10996297	0	True				
ANR	10996511	CallExpression	"gs_md5_finish ( & md5 , key )"		10996297	0					
ANR	10996512	Callee	gs_md5_finish		10996297	0					
ANR	10996513	Identifier	gs_md5_finish		10996297	0					
ANR	10996514	ArgumentList	& md5		10996297	1					
ANR	10996515	Argument	& md5		10996297	0					
ANR	10996516	UnaryOperationExpression	& md5		10996297	0					
ANR	10996517	UnaryOperator	&		10996297	0					
ANR	10996518	Identifier	md5		10996297	1					
ANR	10996519	Argument	key		10996297	1					
ANR	10996520	Identifier	key		10996297	0					
ANR	10996521	ExpressionStatement	dictkey = * ( ulong * ) & key [ sizeof ( key ) - sizeof ( ulong ) ]	2168:8:69990:70043	10996297	1	True				
ANR	10996522	AssignmentExpression	dictkey = * ( ulong * ) & key [ sizeof ( key ) - sizeof ( ulong ) ]		10996297	0		=			
ANR	10996523	Identifier	dictkey		10996297	0					
ANR	10996524	UnaryOperationExpression	* ( ulong * ) & key [ sizeof ( key ) - sizeof ( ulong ) ]		10996297	1					
ANR	10996525	UnaryOperator	*		10996297	0					
ANR	10996526	CastExpression	( ulong * ) & key [ sizeof ( key ) - sizeof ( ulong ) ]		10996297	1					
ANR	10996527	CastTarget	ulong *		10996297	0					
ANR	10996528	UnaryOperationExpression	& key [ sizeof ( key ) - sizeof ( ulong ) ]		10996297	1					
ANR	10996529	UnaryOperator	&		10996297	0					
ANR	10996530	ArrayIndexing	key [ sizeof ( key ) - sizeof ( ulong ) ]		10996297	1					
ANR	10996531	Identifier	key		10996297	0					
ANR	10996532	AdditiveExpression	sizeof ( key ) - sizeof ( ulong )		10996297	1		-			
ANR	10996533	SizeofExpression	sizeof ( key )		10996297	0					
ANR	10996534	Sizeof	sizeof		10996297	0					
ANR	10996535	SizeofOperand	key		10996297	1					
ANR	10996536	SizeofExpression	sizeof ( ulong )		10996297	1					
ANR	10996537	Sizeof	sizeof		10996297	0					
ANR	10996538	SizeofOperand	ulong		10996297	1					
ANR	10996539	ElseStatement	else		10996297	0					
ANR	10996540	CompoundStatement		47:11:1473:1473	10996297	0					
ANR	10996541	ExpressionStatement	"gs_md5_finish ( & md5 , key )"	2170:8:70066:70090	10996297	0	True				
ANR	10996542	CallExpression	"gs_md5_finish ( & md5 , key )"		10996297	0					
ANR	10996543	Callee	gs_md5_finish		10996297	0					
ANR	10996544	Identifier	gs_md5_finish		10996297	0					
ANR	10996545	ArgumentList	& md5		10996297	1					
ANR	10996546	Argument	& md5		10996297	0					
ANR	10996547	UnaryOperationExpression	& md5		10996297	0					
ANR	10996548	UnaryOperator	&		10996297	0					
ANR	10996549	Identifier	md5		10996297	1					
ANR	10996550	Argument	key		10996297	1					
ANR	10996551	Identifier	key		10996297	0					
ANR	10996552	ExpressionStatement	"code = cieaspace ( i_ctx_p , & CIEDict , dictkey )"	2172:4:70102:70146	10996297	15	True				
ANR	10996553	AssignmentExpression	"code = cieaspace ( i_ctx_p , & CIEDict , dictkey )"		10996297	0		=			
ANR	10996554	Identifier	code		10996297	0					
ANR	10996555	CallExpression	"cieaspace ( i_ctx_p , & CIEDict , dictkey )"		10996297	1					
ANR	10996556	Callee	cieaspace		10996297	0					
ANR	10996557	Identifier	cieaspace		10996297	0					
ANR	10996558	ArgumentList	i_ctx_p		10996297	1					
ANR	10996559	Argument	i_ctx_p		10996297	0					
ANR	10996560	Identifier	i_ctx_p		10996297	0					
ANR	10996561	Argument	& CIEDict		10996297	1					
ANR	10996562	UnaryOperationExpression	& CIEDict		10996297	0					
ANR	10996563	UnaryOperator	&		10996297	0					
ANR	10996564	Identifier	CIEDict		10996297	1					
ANR	10996565	Argument	dictkey		10996297	2					
ANR	10996566	Identifier	dictkey		10996297	0					
ANR	10996567	ExpressionStatement	( * stage ) ++	2173:4:70152:70162	10996297	16	True				
ANR	10996568	PostIncDecOperationExpression	( * stage ) ++		10996297	0					
ANR	10996569	UnaryOperationExpression	* stage		10996297	0					
ANR	10996570	UnaryOperator	*		10996297	0					
ANR	10996571	Identifier	stage		10996297	1					
ANR	10996572	IncDec	++		10996297	1					
ANR	10996573	ExpressionStatement	* cont = 1	2174:4:70168:70177	10996297	17	True				
ANR	10996574	AssignmentExpression	* cont = 1		10996297	0		=			
ANR	10996575	UnaryOperationExpression	* cont		10996297	0					
ANR	10996576	UnaryOperator	*		10996297	0					
ANR	10996577	Identifier	cont		10996297	1					
ANR	10996578	PrimaryExpression	1		10996297	1					
ANR	10996579	ReturnStatement	return code ;	2175:4:70183:70194	10996297	18	True				
ANR	10996580	Identifier	code		10996297	0					
ANR	10996581	ReturnType	static int		10996297	1					
ANR	10996582	Identifier	setcieaspace		10996297	2					
ANR	10996583	ParameterList	"i_ctx_t * i_ctx_p , ref * r , int * stage , int * cont , int CIESubst"		10996297	3					
ANR	10996584	Parameter	i_ctx_t * i_ctx_p	2122:24:68518:68534	10996297	0	True				
ANR	10996585	ParameterType	i_ctx_t *		10996297	0					
ANR	10996586	Identifier	i_ctx_p		10996297	1					
ANR	10996587	Parameter	ref * r	2122:43:68537:68542	10996297	1	True				
ANR	10996588	ParameterType	ref *		10996297	0					
ANR	10996589	Identifier	r		10996297	1					
ANR	10996590	Parameter	int * stage	2122:51:68545:68554	10996297	2	True				
ANR	10996591	ParameterType	int *		10996297	0					
ANR	10996592	Identifier	stage		10996297	1					
ANR	10996593	Parameter	int * cont	2122:63:68557:68565	10996297	3	True				
ANR	10996594	ParameterType	int *		10996297	0					
ANR	10996595	Identifier	cont		10996297	1					
ANR	10996596	Parameter	int CIESubst	2122:74:68568:68579	10996297	4	True				
ANR	10996597	ParameterType	int		10996297	0					
ANR	10996598	Identifier	CIESubst		10996297	1					
ANR	10996599	CFGEntryNode	ENTRY		10996297		True				
ANR	10996600	CFGExitNode	EXIT		10996297		True				
ANR	10996601	Symbol	cc . pattern		10996297						
ANR	10996602	Symbol	* ( ulong * ) & key [ sizeof ( key ) - sizeof ( ulong ) ]		10996297						
ANR	10996603	Symbol	code		10996297						
ANR	10996604	Symbol	i_ctx_p -> language_level		10996297						
ANR	10996605	Symbol	* cc		10996297						
ANR	10996606	Symbol	nocie -> value		10996297						
ANR	10996607	Symbol	gs_error_undefined		10996297						
ANR	10996608	Symbol	gs_setcolor		10996297						
ANR	10996609	Symbol	* key		10996297						
ANR	10996610	Symbol	* nocie		10996297						
ANR	10996611	Symbol	& cc		10996297						
ANR	10996612	Symbol	nocie -> value . boolval		10996297						
ANR	10996613	Symbol	r_has_type		10996297						
ANR	10996614	Symbol	gs_error_typecheck		10996297						
ANR	10996615	Symbol	igs		10996297						
ANR	10996616	Symbol	* cc . paint . values		10996297						
ANR	10996617	Symbol	* i_ctx_p		10996297						
ANR	10996618	Symbol	imemory		10996297						
ANR	10996619	Symbol	cont		10996297						
ANR	10996620	Symbol	nocie		10996297						
ANR	10996621	Symbol	CIESubst		10996297						
ANR	10996622	Symbol	key		10996297						
ANR	10996623	Symbol	cc		10996297						
ANR	10996624	Symbol	* stage		10996297						
ANR	10996625	Symbol	& md5		10996297						
ANR	10996626	Symbol	dict_find_string		10996297						
ANR	10996627	Symbol	hashcieaspace		10996297						
ANR	10996628	Symbol	array_get		10996297						
ANR	10996629	Symbol	dictkey		10996297						
ANR	10996630	Symbol	& nocie		10996297						
ANR	10996631	Symbol	t_boolean		10996297						
ANR	10996632	Symbol	r		10996297						
ANR	10996633	Symbol	* cc . paint		10996297						
ANR	10996634	Symbol	cieaspace		10996297						
ANR	10996635	Symbol	stage		10996297						
ANR	10996636	Symbol	CIEDict		10996297						
ANR	10996637	Symbol	* cont		10996297						
ANR	10996638	Symbol	& CIEDict		10996297						
ANR	10996639	Symbol	i_ctx_p		10996297						
ANR	10996640	Symbol	cc . paint		10996297						
ANR	10996641	Symbol	setgrayspace		10996297						
ANR	10996642	Symbol	cc . paint . values		10996297						
ANR	10996643	Symbol	systemdict		10996297						
ANR	10996644	Symbol	md5		10996297						
ANR	10996645	Function	validatecieaspace	2177:0:70198:72375							
ANR	10996646	FunctionDef	"validatecieaspace (i_ctx_t * i_ctx_p , ref * * r)"		10996645	0					
ANR	10996647	CompoundStatement		2178:0:70255:72375	10996645	0					
ANR	10996648	IdentifierDeclStatement	int code ;	2179:4:70261:70269	10996645	0	True				
ANR	10996649	IdentifierDecl	code		10996645	0					
ANR	10996650	IdentifierDeclType	int		10996645	0					
ANR	10996651	Identifier	code		10996645	1					
ANR	10996652	IdentifierDeclStatement	float value [ 9 ] ;	2180:4:70275:70289	10996645	1	True				
ANR	10996653	IdentifierDecl	value [ 9 ]		10996645	0					
ANR	10996654	IdentifierDeclType	float [ 9 ]		10996645	0					
ANR	10996655	Identifier	value		10996645	1					
ANR	10996656	PrimaryExpression	9		10996645	2					
ANR	10996657	IdentifierDeclStatement	"ref CIEdict , * CIEspace = * r , * tempref ;"	2181:4:70295:70336	10996645	2	True				
ANR	10996658	IdentifierDecl	CIEdict		10996645	0					
ANR	10996659	IdentifierDeclType	ref		10996645	0					
ANR	10996660	Identifier	CIEdict		10996645	1					
ANR	10996661	IdentifierDecl	* CIEspace = * r		10996645	1					
ANR	10996662	IdentifierDeclType	ref *		10996645	0					
ANR	10996663	Identifier	CIEspace		10996645	1					
ANR	10996664	AssignmentExpression	* CIEspace = * r		10996645	2		=			
ANR	10996665	Identifier	CIEspace		10996645	0					
ANR	10996666	UnaryOperationExpression	* r		10996645	1					
ANR	10996667	UnaryOperator	*		10996645	0					
ANR	10996668	Identifier	r		10996645	1					
ANR	10996669	IdentifierDecl	* tempref		10996645	2					
ANR	10996670	IdentifierDeclType	ref *		10996645	0					
ANR	10996671	Identifier	tempref		10996645	1					
ANR	10996672	IfStatement	if ( ! r_is_array ( CIEspace ) )		10996645	3					
ANR	10996673	Condition	! r_is_array ( CIEspace )	2183:8:70347:70367	10996645	0	True				
ANR	10996674	UnaryOperationExpression	! r_is_array ( CIEspace )		10996645	0					
ANR	10996675	UnaryOperator	!		10996645	0					
ANR	10996676	CallExpression	r_is_array ( CIEspace )		10996645	1					
ANR	10996677	Callee	r_is_array		10996645	0					
ANR	10996678	Identifier	r_is_array		10996645	0					
ANR	10996679	ArgumentList	CIEspace		10996645	1					
ANR	10996680	Argument	CIEspace		10996645	0					
ANR	10996681	Identifier	CIEspace		10996645	0					
ANR	10996682	ExpressionStatement	return_error ( gs_error_typecheck )	2184:8:70378:70410	10996645	1	True				
ANR	10996683	CallExpression	return_error ( gs_error_typecheck )		10996645	0					
ANR	10996684	Callee	return_error		10996645	0					
ANR	10996685	Identifier	return_error		10996645	0					
ANR	10996686	ArgumentList	gs_error_typecheck		10996645	1					
ANR	10996687	Argument	gs_error_typecheck		10996645	0					
ANR	10996688	Identifier	gs_error_typecheck		10996645	0					
ANR	10996689	IfStatement	if ( r_size ( CIEspace ) != 2 )		10996645	4					
ANR	10996690	Condition	r_size ( CIEspace ) != 2	2186:8:70481:70501	10996645	0	True				
ANR	10996691	EqualityExpression	r_size ( CIEspace ) != 2		10996645	0		!=			
ANR	10996692	CallExpression	r_size ( CIEspace )		10996645	0					
ANR	10996693	Callee	r_size		10996645	0					
ANR	10996694	Identifier	r_size		10996645	0					
ANR	10996695	ArgumentList	CIEspace		10996645	1					
ANR	10996696	Argument	CIEspace		10996645	0					
ANR	10996697	Identifier	CIEspace		10996645	0					
ANR	10996698	PrimaryExpression	2		10996645	1					
ANR	10996699	ExpressionStatement	return_error ( gs_error_rangecheck )	2187:8:70512:70545	10996645	1	True				
ANR	10996700	CallExpression	return_error ( gs_error_rangecheck )		10996645	0					
ANR	10996701	Callee	return_error		10996645	0					
ANR	10996702	Identifier	return_error		10996645	0					
ANR	10996703	ArgumentList	gs_error_rangecheck		10996645	1					
ANR	10996704	Argument	gs_error_rangecheck		10996645	0					
ANR	10996705	Identifier	gs_error_rangecheck		10996645	0					
ANR	10996706	ExpressionStatement	"code = array_get ( imemory , CIEspace , 1 , & CIEdict )"	2189:4:70552:70600	10996645	5	True				
ANR	10996707	AssignmentExpression	"code = array_get ( imemory , CIEspace , 1 , & CIEdict )"		10996645	0		=			
ANR	10996708	Identifier	code		10996645	0					
ANR	10996709	CallExpression	"array_get ( imemory , CIEspace , 1 , & CIEdict )"		10996645	1					
ANR	10996710	Callee	array_get		10996645	0					
ANR	10996711	Identifier	array_get		10996645	0					
ANR	10996712	ArgumentList	imemory		10996645	1					
ANR	10996713	Argument	imemory		10996645	0					
ANR	10996714	Identifier	imemory		10996645	0					
ANR	10996715	Argument	CIEspace		10996645	1					
ANR	10996716	Identifier	CIEspace		10996645	0					
ANR	10996717	Argument	1		10996645	2					
ANR	10996718	PrimaryExpression	1		10996645	0					
ANR	10996719	Argument	& CIEdict		10996645	3					
ANR	10996720	UnaryOperationExpression	& CIEdict		10996645	0					
ANR	10996721	UnaryOperator	&		10996645	0					
ANR	10996722	Identifier	CIEdict		10996645	1					
ANR	10996723	IfStatement	if ( code < 0 )		10996645	6					
ANR	10996724	Condition	code < 0	2190:8:70610:70617	10996645	0	True				
ANR	10996725	RelationalExpression	code < 0		10996645	0		<			
ANR	10996726	Identifier	code		10996645	0					
ANR	10996727	PrimaryExpression	0		10996645	1					
ANR	10996728	ReturnStatement	return code ;	2191:8:70628:70639	10996645	1	True				
ANR	10996729	Identifier	code		10996645	0					
ANR	10996730	ExpressionStatement	"check_read_type ( CIEdict , t_dictionary )"	2193:4:70646:70684	10996645	7	True				
ANR	10996731	CallExpression	"check_read_type ( CIEdict , t_dictionary )"		10996645	0					
ANR	10996732	Callee	check_read_type		10996645	0					
ANR	10996733	Identifier	check_read_type		10996645	0					
ANR	10996734	ArgumentList	CIEdict		10996645	1					
ANR	10996735	Argument	CIEdict		10996645	0					
ANR	10996736	Identifier	CIEdict		10996645	0					
ANR	10996737	Argument	t_dictionary		10996645	1					
ANR	10996738	Identifier	t_dictionary		10996645	0					
ANR	10996739	ExpressionStatement	"code = checkWhitePoint ( i_ctx_p , & CIEdict )"	2196:4:70760:70801	10996645	8	True				
ANR	10996740	AssignmentExpression	"code = checkWhitePoint ( i_ctx_p , & CIEdict )"		10996645	0		=			
ANR	10996741	Identifier	code		10996645	0					
ANR	10996742	CallExpression	"checkWhitePoint ( i_ctx_p , & CIEdict )"		10996645	1					
ANR	10996743	Callee	checkWhitePoint		10996645	0					
ANR	10996744	Identifier	checkWhitePoint		10996645	0					
ANR	10996745	ArgumentList	i_ctx_p		10996645	1					
ANR	10996746	Argument	i_ctx_p		10996645	0					
ANR	10996747	Identifier	i_ctx_p		10996645	0					
ANR	10996748	Argument	& CIEdict		10996645	1					
ANR	10996749	UnaryOperationExpression	& CIEdict		10996645	0					
ANR	10996750	UnaryOperator	&		10996645	0					
ANR	10996751	Identifier	CIEdict		10996645	1					
ANR	10996752	IfStatement	if ( code != 0 )		10996645	9					
ANR	10996753	Condition	code != 0	2197:8:70811:70819	10996645	0	True				
ANR	10996754	EqualityExpression	code != 0		10996645	0		!=			
ANR	10996755	Identifier	code		10996645	0					
ANR	10996756	PrimaryExpression	0		10996645	1					
ANR	10996757	ReturnStatement	return code ;	2198:8:70830:70841	10996645	1	True				
ANR	10996758	Identifier	code		10996645	0					
ANR	10996759	ExpressionStatement	"code = dict_find_string ( & CIEdict , ""RangeA"" , & tempref )"	2203:4:70951:71004	10996645	10	True				
ANR	10996760	AssignmentExpression	"code = dict_find_string ( & CIEdict , ""RangeA"" , & tempref )"		10996645	0		=			
ANR	10996761	Identifier	code		10996645	0					
ANR	10996762	CallExpression	"dict_find_string ( & CIEdict , ""RangeA"" , & tempref )"		10996645	1					
ANR	10996763	Callee	dict_find_string		10996645	0					
ANR	10996764	Identifier	dict_find_string		10996645	0					
ANR	10996765	ArgumentList	& CIEdict		10996645	1					
ANR	10996766	Argument	& CIEdict		10996645	0					
ANR	10996767	UnaryOperationExpression	& CIEdict		10996645	0					
ANR	10996768	UnaryOperator	&		10996645	0					
ANR	10996769	Identifier	CIEdict		10996645	1					
ANR	10996770	Argument	"""RangeA"""		10996645	1					
ANR	10996771	PrimaryExpression	"""RangeA"""		10996645	0					
ANR	10996772	Argument	& tempref		10996645	2					
ANR	10996773	UnaryOperationExpression	& tempref		10996645	0					
ANR	10996774	UnaryOperator	&		10996645	0					
ANR	10996775	Identifier	tempref		10996645	1					
ANR	10996776	IfStatement	"if ( code > 0 && ! r_has_type ( tempref , t_null ) )"		10996645	11					
ANR	10996777	Condition	"code > 0 && ! r_has_type ( tempref , t_null )"	2204:8:71014:71053	10996645	0	True				
ANR	10996778	AndExpression	"code > 0 && ! r_has_type ( tempref , t_null )"		10996645	0		&&			
ANR	10996779	RelationalExpression	code > 0		10996645	0		>			
ANR	10996780	Identifier	code		10996645	0					
ANR	10996781	PrimaryExpression	0		10996645	1					
ANR	10996782	UnaryOperationExpression	"! r_has_type ( tempref , t_null )"		10996645	1					
ANR	10996783	UnaryOperator	!		10996645	0					
ANR	10996784	CallExpression	"r_has_type ( tempref , t_null )"		10996645	1					
ANR	10996785	Callee	r_has_type		10996645	0					
ANR	10996786	Identifier	r_has_type		10996645	0					
ANR	10996787	ArgumentList	tempref		10996645	1					
ANR	10996788	Argument	tempref		10996645	0					
ANR	10996789	Identifier	tempref		10996645	0					
ANR	10996790	Argument	t_null		10996645	1					
ANR	10996791	Identifier	t_null		10996645	0					
ANR	10996792	CompoundStatement		27:50:800:800	10996645	1					
ANR	10996793	IfStatement	if ( ! r_is_array ( tempref ) )		10996645	0					
ANR	10996794	Condition	! r_is_array ( tempref )	2206:12:71113:71132	10996645	0	True				
ANR	10996795	UnaryOperationExpression	! r_is_array ( tempref )		10996645	0					
ANR	10996796	UnaryOperator	!		10996645	0					
ANR	10996797	CallExpression	r_is_array ( tempref )		10996645	1					
ANR	10996798	Callee	r_is_array		10996645	0					
ANR	10996799	Identifier	r_is_array		10996645	0					
ANR	10996800	ArgumentList	tempref		10996645	1					
ANR	10996801	Argument	tempref		10996645	0					
ANR	10996802	Identifier	tempref		10996645	0					
ANR	10996803	ExpressionStatement	return_error ( gs_error_typecheck )	2207:12:71147:71179	10996645	1	True				
ANR	10996804	CallExpression	return_error ( gs_error_typecheck )		10996645	0					
ANR	10996805	Callee	return_error		10996645	0					
ANR	10996806	Identifier	return_error		10996645	0					
ANR	10996807	ArgumentList	gs_error_typecheck		10996645	1					
ANR	10996808	Argument	gs_error_typecheck		10996645	0					
ANR	10996809	Identifier	gs_error_typecheck		10996645	0					
ANR	10996810	IfStatement	if ( r_size ( tempref ) != 2 )		10996645	1					
ANR	10996811	Condition	r_size ( tempref ) != 2	2208:12:71193:71212	10996645	0	True				
ANR	10996812	EqualityExpression	r_size ( tempref ) != 2		10996645	0		!=			
ANR	10996813	CallExpression	r_size ( tempref )		10996645	0					
ANR	10996814	Callee	r_size		10996645	0					
ANR	10996815	Identifier	r_size		10996645	0					
ANR	10996816	ArgumentList	tempref		10996645	1					
ANR	10996817	Argument	tempref		10996645	0					
ANR	10996818	Identifier	tempref		10996645	0					
ANR	10996819	PrimaryExpression	2		10996645	1					
ANR	10996820	ExpressionStatement	return_error ( gs_error_rangecheck )	2209:12:71227:71260	10996645	1	True				
ANR	10996821	CallExpression	return_error ( gs_error_rangecheck )		10996645	0					
ANR	10996822	Callee	return_error		10996645	0					
ANR	10996823	Identifier	return_error		10996645	0					
ANR	10996824	ArgumentList	gs_error_rangecheck		10996645	1					
ANR	10996825	Argument	gs_error_rangecheck		10996645	0					
ANR	10996826	Identifier	gs_error_rangecheck		10996645	0					
ANR	10996827	ExpressionStatement	"code = get_cie_param_array ( imemory , tempref , 2 , value )"	2211:8:71271:71325	10996645	2	True				
ANR	10996828	AssignmentExpression	"code = get_cie_param_array ( imemory , tempref , 2 , value )"		10996645	0		=			
ANR	10996829	Identifier	code		10996645	0					
ANR	10996830	CallExpression	"get_cie_param_array ( imemory , tempref , 2 , value )"		10996645	1					
ANR	10996831	Callee	get_cie_param_array		10996645	0					
ANR	10996832	Identifier	get_cie_param_array		10996645	0					
ANR	10996833	ArgumentList	imemory		10996645	1					
ANR	10996834	Argument	imemory		10996645	0					
ANR	10996835	Identifier	imemory		10996645	0					
ANR	10996836	Argument	tempref		10996645	1					
ANR	10996837	Identifier	tempref		10996645	0					
ANR	10996838	Argument	2		10996645	2					
ANR	10996839	PrimaryExpression	2		10996645	0					
ANR	10996840	Argument	value		10996645	3					
ANR	10996841	Identifier	value		10996645	0					
ANR	10996842	IfStatement	if ( code < 0 )		10996645	3					
ANR	10996843	Condition	code < 0	2212:12:71339:71346	10996645	0	True				
ANR	10996844	RelationalExpression	code < 0		10996645	0		<			
ANR	10996845	Identifier	code		10996645	0					
ANR	10996846	PrimaryExpression	0		10996645	1					
ANR	10996847	ReturnStatement	return code ;	2213:12:71361:71372	10996645	1	True				
ANR	10996848	Identifier	code		10996645	0					
ANR	10996849	IfStatement	if ( value [ 1 ] < value [ 0 ] )		10996645	4					
ANR	10996850	Condition	value [ 1 ] < value [ 0 ]	2214:12:71386:71404	10996645	0	True				
ANR	10996851	RelationalExpression	value [ 1 ] < value [ 0 ]		10996645	0		<			
ANR	10996852	ArrayIndexing	value [ 1 ]		10996645	0					
ANR	10996853	Identifier	value		10996645	0					
ANR	10996854	PrimaryExpression	1		10996645	1					
ANR	10996855	ArrayIndexing	value [ 0 ]		10996645	1					
ANR	10996856	Identifier	value		10996645	0					
ANR	10996857	PrimaryExpression	0		10996645	1					
ANR	10996858	ExpressionStatement	return_error ( gs_error_rangecheck )	2215:12:71419:71452	10996645	1	True				
ANR	10996859	CallExpression	return_error ( gs_error_rangecheck )		10996645	0					
ANR	10996860	Callee	return_error		10996645	0					
ANR	10996861	Identifier	return_error		10996645	0					
ANR	10996862	ArgumentList	gs_error_rangecheck		10996645	1					
ANR	10996863	Argument	gs_error_rangecheck		10996645	0					
ANR	10996864	Identifier	gs_error_rangecheck		10996645	0					
ANR	10996865	ExpressionStatement	"code = dict_find_string ( & CIEdict , ""DecodeA"" , & tempref )"	2218:4:71465:71519	10996645	12	True				
ANR	10996866	AssignmentExpression	"code = dict_find_string ( & CIEdict , ""DecodeA"" , & tempref )"		10996645	0		=			
ANR	10996867	Identifier	code		10996645	0					
ANR	10996868	CallExpression	"dict_find_string ( & CIEdict , ""DecodeA"" , & tempref )"		10996645	1					
ANR	10996869	Callee	dict_find_string		10996645	0					
ANR	10996870	Identifier	dict_find_string		10996645	0					
ANR	10996871	ArgumentList	& CIEdict		10996645	1					
ANR	10996872	Argument	& CIEdict		10996645	0					
ANR	10996873	UnaryOperationExpression	& CIEdict		10996645	0					
ANR	10996874	UnaryOperator	&		10996645	0					
ANR	10996875	Identifier	CIEdict		10996645	1					
ANR	10996876	Argument	"""DecodeA"""		10996645	1					
ANR	10996877	PrimaryExpression	"""DecodeA"""		10996645	0					
ANR	10996878	Argument	& tempref		10996645	2					
ANR	10996879	UnaryOperationExpression	& tempref		10996645	0					
ANR	10996880	UnaryOperator	&		10996645	0					
ANR	10996881	Identifier	tempref		10996645	1					
ANR	10996882	IfStatement	"if ( code > 0 && ! r_has_type ( tempref , t_null ) )"		10996645	13					
ANR	10996883	Condition	"code > 0 && ! r_has_type ( tempref , t_null )"	2219:8:71529:71568	10996645	0	True				
ANR	10996884	AndExpression	"code > 0 && ! r_has_type ( tempref , t_null )"		10996645	0		&&			
ANR	10996885	RelationalExpression	code > 0		10996645	0		>			
ANR	10996886	Identifier	code		10996645	0					
ANR	10996887	PrimaryExpression	0		10996645	1					
ANR	10996888	UnaryOperationExpression	"! r_has_type ( tempref , t_null )"		10996645	1					
ANR	10996889	UnaryOperator	!		10996645	0					
ANR	10996890	CallExpression	"r_has_type ( tempref , t_null )"		10996645	1					
ANR	10996891	Callee	r_has_type		10996645	0					
ANR	10996892	Identifier	r_has_type		10996645	0					
ANR	10996893	ArgumentList	tempref		10996645	1					
ANR	10996894	Argument	tempref		10996645	0					
ANR	10996895	Identifier	tempref		10996645	0					
ANR	10996896	Argument	t_null		10996645	1					
ANR	10996897	Identifier	t_null		10996645	0					
ANR	10996898	CompoundStatement		42:50:1315:1315	10996645	1					
ANR	10996899	ExpressionStatement	check_proc ( * tempref )	2220:8:71581:71601	10996645	0	True				
ANR	10996900	CallExpression	check_proc ( * tempref )		10996645	0					
ANR	10996901	Callee	check_proc		10996645	0					
ANR	10996902	Identifier	check_proc		10996645	0					
ANR	10996903	ArgumentList	* tempref		10996645	1					
ANR	10996904	Argument	* tempref		10996645	0					
ANR	10996905	UnaryOperationExpression	* tempref		10996645	0					
ANR	10996906	UnaryOperator	*		10996645	0					
ANR	10996907	Identifier	tempref		10996645	1					
ANR	10996908	ExpressionStatement	"code = dict_find_string ( & CIEdict , ""MatrixA"" , & tempref )"	2223:4:71614:71668	10996645	14	True				
ANR	10996909	AssignmentExpression	"code = dict_find_string ( & CIEdict , ""MatrixA"" , & tempref )"		10996645	0		=			
ANR	10996910	Identifier	code		10996645	0					
ANR	10996911	CallExpression	"dict_find_string ( & CIEdict , ""MatrixA"" , & tempref )"		10996645	1					
ANR	10996912	Callee	dict_find_string		10996645	0					
ANR	10996913	Identifier	dict_find_string		10996645	0					
ANR	10996914	ArgumentList	& CIEdict		10996645	1					
ANR	10996915	Argument	& CIEdict		10996645	0					
ANR	10996916	UnaryOperationExpression	& CIEdict		10996645	0					
ANR	10996917	UnaryOperator	&		10996645	0					
ANR	10996918	Identifier	CIEdict		10996645	1					
ANR	10996919	Argument	"""MatrixA"""		10996645	1					
ANR	10996920	PrimaryExpression	"""MatrixA"""		10996645	0					
ANR	10996921	Argument	& tempref		10996645	2					
ANR	10996922	UnaryOperationExpression	& tempref		10996645	0					
ANR	10996923	UnaryOperator	&		10996645	0					
ANR	10996924	Identifier	tempref		10996645	1					
ANR	10996925	IfStatement	"if ( code > 0 && ! r_has_type ( tempref , t_null ) )"		10996645	15					
ANR	10996926	Condition	"code > 0 && ! r_has_type ( tempref , t_null )"	2224:8:71678:71717	10996645	0	True				
ANR	10996927	AndExpression	"code > 0 && ! r_has_type ( tempref , t_null )"		10996645	0		&&			
ANR	10996928	RelationalExpression	code > 0		10996645	0		>			
ANR	10996929	Identifier	code		10996645	0					
ANR	10996930	PrimaryExpression	0		10996645	1					
ANR	10996931	UnaryOperationExpression	"! r_has_type ( tempref , t_null )"		10996645	1					
ANR	10996932	UnaryOperator	!		10996645	0					
ANR	10996933	CallExpression	"r_has_type ( tempref , t_null )"		10996645	1					
ANR	10996934	Callee	r_has_type		10996645	0					
ANR	10996935	Identifier	r_has_type		10996645	0					
ANR	10996936	ArgumentList	tempref		10996645	1					
ANR	10996937	Argument	tempref		10996645	0					
ANR	10996938	Identifier	tempref		10996645	0					
ANR	10996939	Argument	t_null		10996645	1					
ANR	10996940	Identifier	t_null		10996645	0					
ANR	10996941	CompoundStatement		47:50:1464:1464	10996645	1					
ANR	10996942	IfStatement	if ( ! r_is_array ( tempref ) )		10996645	0					
ANR	10996943	Condition	! r_is_array ( tempref )	2225:12:71734:71753	10996645	0	True				
ANR	10996944	UnaryOperationExpression	! r_is_array ( tempref )		10996645	0					
ANR	10996945	UnaryOperator	!		10996645	0					
ANR	10996946	CallExpression	r_is_array ( tempref )		10996645	1					
ANR	10996947	Callee	r_is_array		10996645	0					
ANR	10996948	Identifier	r_is_array		10996645	0					
ANR	10996949	ArgumentList	tempref		10996645	1					
ANR	10996950	Argument	tempref		10996645	0					
ANR	10996951	Identifier	tempref		10996645	0					
ANR	10996952	ExpressionStatement	return_error ( gs_error_typecheck )	2226:12:71768:71800	10996645	1	True				
ANR	10996953	CallExpression	return_error ( gs_error_typecheck )		10996645	0					
ANR	10996954	Callee	return_error		10996645	0					
ANR	10996955	Identifier	return_error		10996645	0					
ANR	10996956	ArgumentList	gs_error_typecheck		10996645	1					
ANR	10996957	Argument	gs_error_typecheck		10996645	0					
ANR	10996958	Identifier	gs_error_typecheck		10996645	0					
ANR	10996959	IfStatement	if ( r_size ( tempref ) != 3 )		10996645	1					
ANR	10996960	Condition	r_size ( tempref ) != 3	2227:12:71814:71833	10996645	0	True				
ANR	10996961	EqualityExpression	r_size ( tempref ) != 3		10996645	0		!=			
ANR	10996962	CallExpression	r_size ( tempref )		10996645	0					
ANR	10996963	Callee	r_size		10996645	0					
ANR	10996964	Identifier	r_size		10996645	0					
ANR	10996965	ArgumentList	tempref		10996645	1					
ANR	10996966	Argument	tempref		10996645	0					
ANR	10996967	Identifier	tempref		10996645	0					
ANR	10996968	PrimaryExpression	3		10996645	1					
ANR	10996969	ExpressionStatement	return_error ( gs_error_rangecheck )	2228:12:71848:71881	10996645	1	True				
ANR	10996970	CallExpression	return_error ( gs_error_rangecheck )		10996645	0					
ANR	10996971	Callee	return_error		10996645	0					
ANR	10996972	Identifier	return_error		10996645	0					
ANR	10996973	ArgumentList	gs_error_rangecheck		10996645	1					
ANR	10996974	Argument	gs_error_rangecheck		10996645	0					
ANR	10996975	Identifier	gs_error_rangecheck		10996645	0					
ANR	10996976	ExpressionStatement	"code = get_cie_param_array ( imemory , tempref , 3 , value )"	2229:8:71891:71945	10996645	2	True				
ANR	10996977	AssignmentExpression	"code = get_cie_param_array ( imemory , tempref , 3 , value )"		10996645	0		=			
ANR	10996978	Identifier	code		10996645	0					
ANR	10996979	CallExpression	"get_cie_param_array ( imemory , tempref , 3 , value )"		10996645	1					
ANR	10996980	Callee	get_cie_param_array		10996645	0					
ANR	10996981	Identifier	get_cie_param_array		10996645	0					
ANR	10996982	ArgumentList	imemory		10996645	1					
ANR	10996983	Argument	imemory		10996645	0					
ANR	10996984	Identifier	imemory		10996645	0					
ANR	10996985	Argument	tempref		10996645	1					
ANR	10996986	Identifier	tempref		10996645	0					
ANR	10996987	Argument	3		10996645	2					
ANR	10996988	PrimaryExpression	3		10996645	0					
ANR	10996989	Argument	value		10996645	3					
ANR	10996990	Identifier	value		10996645	0					
ANR	10996991	IfStatement	if ( code < 0 )		10996645	3					
ANR	10996992	Condition	code < 0	2230:12:71959:71966	10996645	0	True				
ANR	10996993	RelationalExpression	code < 0		10996645	0		<			
ANR	10996994	Identifier	code		10996645	0					
ANR	10996995	PrimaryExpression	0		10996645	1					
ANR	10996996	ReturnStatement	return code ;	2231:12:71981:71992	10996645	1	True				
ANR	10996997	Identifier	code		10996645	0					
ANR	10996998	ExpressionStatement	"code = checkRangeLMN ( i_ctx_p , & CIEdict )"	2234:4:72005:72044	10996645	16	True				
ANR	10996999	AssignmentExpression	"code = checkRangeLMN ( i_ctx_p , & CIEdict )"		10996645	0		=			
ANR	10997000	Identifier	code		10996645	0					
ANR	10997001	CallExpression	"checkRangeLMN ( i_ctx_p , & CIEdict )"		10996645	1					
ANR	10997002	Callee	checkRangeLMN		10996645	0					
ANR	10997003	Identifier	checkRangeLMN		10996645	0					
ANR	10997004	ArgumentList	i_ctx_p		10996645	1					
ANR	10997005	Argument	i_ctx_p		10996645	0					
ANR	10997006	Identifier	i_ctx_p		10996645	0					
ANR	10997007	Argument	& CIEdict		10996645	1					
ANR	10997008	UnaryOperationExpression	& CIEdict		10996645	0					
ANR	10997009	UnaryOperator	&		10996645	0					
ANR	10997010	Identifier	CIEdict		10996645	1					
ANR	10997011	IfStatement	if ( code != 0 )		10996645	17					
ANR	10997012	Condition	code != 0	2235:8:72054:72062	10996645	0	True				
ANR	10997013	EqualityExpression	code != 0		10996645	0		!=			
ANR	10997014	Identifier	code		10996645	0					
ANR	10997015	PrimaryExpression	0		10996645	1					
ANR	10997016	ReturnStatement	return code ;	2236:8:72073:72084	10996645	1	True				
ANR	10997017	Identifier	code		10996645	0					
ANR	10997018	ExpressionStatement	"code = checkDecodeLMN ( i_ctx_p , & CIEdict )"	2238:4:72091:72131	10996645	18	True				
ANR	10997019	AssignmentExpression	"code = checkDecodeLMN ( i_ctx_p , & CIEdict )"		10996645	0		=			
ANR	10997020	Identifier	code		10996645	0					
ANR	10997021	CallExpression	"checkDecodeLMN ( i_ctx_p , & CIEdict )"		10996645	1					
ANR	10997022	Callee	checkDecodeLMN		10996645	0					
ANR	10997023	Identifier	checkDecodeLMN		10996645	0					
ANR	10997024	ArgumentList	i_ctx_p		10996645	1					
ANR	10997025	Argument	i_ctx_p		10996645	0					
ANR	10997026	Identifier	i_ctx_p		10996645	0					
ANR	10997027	Argument	& CIEdict		10996645	1					
ANR	10997028	UnaryOperationExpression	& CIEdict		10996645	0					
ANR	10997029	UnaryOperator	&		10996645	0					
ANR	10997030	Identifier	CIEdict		10996645	1					
ANR	10997031	IfStatement	if ( code != 0 )		10996645	19					
ANR	10997032	Condition	code != 0	2239:8:72141:72149	10996645	0	True				
ANR	10997033	EqualityExpression	code != 0		10996645	0		!=			
ANR	10997034	Identifier	code		10996645	0					
ANR	10997035	PrimaryExpression	0		10996645	1					
ANR	10997036	ReturnStatement	return code ;	2240:8:72160:72171	10996645	1	True				
ANR	10997037	Identifier	code		10996645	0					
ANR	10997038	ExpressionStatement	"code = checkMatrixLMN ( i_ctx_p , & CIEdict )"	2242:4:72178:72218	10996645	20	True				
ANR	10997039	AssignmentExpression	"code = checkMatrixLMN ( i_ctx_p , & CIEdict )"		10996645	0		=			
ANR	10997040	Identifier	code		10996645	0					
ANR	10997041	CallExpression	"checkMatrixLMN ( i_ctx_p , & CIEdict )"		10996645	1					
ANR	10997042	Callee	checkMatrixLMN		10996645	0					
ANR	10997043	Identifier	checkMatrixLMN		10996645	0					
ANR	10997044	ArgumentList	i_ctx_p		10996645	1					
ANR	10997045	Argument	i_ctx_p		10996645	0					
ANR	10997046	Identifier	i_ctx_p		10996645	0					
ANR	10997047	Argument	& CIEdict		10996645	1					
ANR	10997048	UnaryOperationExpression	& CIEdict		10996645	0					
ANR	10997049	UnaryOperator	&		10996645	0					
ANR	10997050	Identifier	CIEdict		10996645	1					
ANR	10997051	IfStatement	if ( code != 0 )		10996645	21					
ANR	10997052	Condition	code != 0	2243:8:72228:72236	10996645	0	True				
ANR	10997053	EqualityExpression	code != 0		10996645	0		!=			
ANR	10997054	Identifier	code		10996645	0					
ANR	10997055	PrimaryExpression	0		10996645	1					
ANR	10997056	ReturnStatement	return code ;	2244:8:72247:72258	10996645	1	True				
ANR	10997057	Identifier	code		10996645	0					
ANR	10997058	ExpressionStatement	"code = checkBlackPoint ( i_ctx_p , & CIEdict )"	2246:4:72265:72306	10996645	22	True				
ANR	10997059	AssignmentExpression	"code = checkBlackPoint ( i_ctx_p , & CIEdict )"		10996645	0		=			
ANR	10997060	Identifier	code		10996645	0					
ANR	10997061	CallExpression	"checkBlackPoint ( i_ctx_p , & CIEdict )"		10996645	1					
ANR	10997062	Callee	checkBlackPoint		10996645	0					
ANR	10997063	Identifier	checkBlackPoint		10996645	0					
ANR	10997064	ArgumentList	i_ctx_p		10996645	1					
ANR	10997065	Argument	i_ctx_p		10996645	0					
ANR	10997066	Identifier	i_ctx_p		10996645	0					
ANR	10997067	Argument	& CIEdict		10996645	1					
ANR	10997068	UnaryOperationExpression	& CIEdict		10996645	0					
ANR	10997069	UnaryOperator	&		10996645	0					
ANR	10997070	Identifier	CIEdict		10996645	1					
ANR	10997071	IfStatement	if ( code != 0 )		10996645	23					
ANR	10997072	Condition	code != 0	2247:8:72316:72324	10996645	0	True				
ANR	10997073	EqualityExpression	code != 0		10996645	0		!=			
ANR	10997074	Identifier	code		10996645	0					
ANR	10997075	PrimaryExpression	0		10996645	1					
ANR	10997076	ReturnStatement	return code ;	2248:8:72335:72346	10996645	1	True				
ANR	10997077	Identifier	code		10996645	0					
ANR	10997078	ExpressionStatement	* r = 0	2250:4:72353:72359	10996645	24	True				
ANR	10997079	AssignmentExpression	* r = 0		10996645	0		=			
ANR	10997080	UnaryOperationExpression	* r		10996645	0					
ANR	10997081	UnaryOperator	*		10996645	0					
ANR	10997082	Identifier	r		10996645	1					
ANR	10997083	PrimaryExpression	0		10996645	1					
ANR	10997084	ReturnStatement	return 0 ;	2251:4:72365:72373	10996645	25	True				
ANR	10997085	PrimaryExpression	0		10996645	0					
ANR	10997086	ReturnType	static int		10996645	1					
ANR	10997087	Identifier	validatecieaspace		10996645	2					
ANR	10997088	ParameterList	"i_ctx_t * i_ctx_p , ref * * r"		10996645	3					
ANR	10997089	Parameter	i_ctx_t * i_ctx_p	2177:29:70227:70243	10996645	0	True				
ANR	10997090	ParameterType	i_ctx_t *		10996645	0					
ANR	10997091	Identifier	i_ctx_p		10996645	1					
ANR	10997092	Parameter	ref * * r	2177:48:70246:70252	10996645	1	True				
ANR	10997093	ParameterType	ref * *		10996645	0					
ANR	10997094	Identifier	r		10996645	1					
ANR	10997095	CFGEntryNode	ENTRY		10996645		True				
ANR	10997096	CFGExitNode	EXIT		10996645		True				
ANR	10997097	Symbol	code		10996645						
ANR	10997098	Symbol	t_dictionary		10996645						
ANR	10997099	Symbol	gs_error_rangecheck		10996645						
ANR	10997100	Symbol	checkRangeLMN		10996645						
ANR	10997101	Symbol	& CIEdict		10996645						
ANR	10997102	Symbol	* tempref		10996645						
ANR	10997103	Symbol	gs_error_typecheck		10996645						
ANR	10997104	Symbol	t_null		10996645						
ANR	10997105	Symbol	r_has_type		10996645						
ANR	10997106	Symbol	r_size		10996645						
ANR	10997107	Symbol	CIEspace		10996645						
ANR	10997108	Symbol	CIEdict		10996645						
ANR	10997109	Symbol	imemory		10996645						
ANR	10997110	Symbol	checkWhitePoint		10996645						
ANR	10997111	Symbol	value		10996645						
ANR	10997112	Symbol	tempref		10996645						
ANR	10997113	Symbol	checkMatrixLMN		10996645						
ANR	10997114	Symbol	dict_find_string		10996645						
ANR	10997115	Symbol	array_get		10996645						
ANR	10997116	Symbol	& tempref		10996645						
ANR	10997117	Symbol	r		10996645						
ANR	10997118	Symbol	checkBlackPoint		10996645						
ANR	10997119	Symbol	i_ctx_p		10996645						
ANR	10997120	Symbol	* value		10996645						
ANR	10997121	Symbol	checkDecodeLMN		10996645						
ANR	10997122	Symbol	r_is_array		10996645						
ANR	10997123	Symbol	* r		10996645						
ANR	10997124	Symbol	get_cie_param_array		10996645						
ANR	10997125	Function	cieadomain	2253:0:72377:73005							
ANR	10997126	FunctionDef	"cieadomain (i_ctx_t * i_ctx_p , ref * space , float * ptr)"		10997125	0					
ANR	10997127	CompoundStatement		2254:0:72442:73005	10997125	0					
ANR	10997128	IdentifierDeclStatement	int code ;	2255:4:72448:72456	10997125	0	True				
ANR	10997129	IdentifierDecl	code		10997125	0					
ANR	10997130	IdentifierDeclType	int		10997125	0					
ANR	10997131	Identifier	code		10997125	1					
ANR	10997132	IdentifierDeclStatement	"ref CIEdict , * tempref ;"	2256:4:72462:72483	10997125	1	True				
ANR	10997133	IdentifierDecl	CIEdict		10997125	0					
ANR	10997134	IdentifierDeclType	ref		10997125	0					
ANR	10997135	Identifier	CIEdict		10997125	1					
ANR	10997136	IdentifierDecl	* tempref		10997125	1					
ANR	10997137	IdentifierDeclType	ref *		10997125	0					
ANR	10997138	Identifier	tempref		10997125	1					
ANR	10997139	ExpressionStatement	"code = array_get ( imemory , space , 1 , & CIEdict )"	2258:4:72490:72535	10997125	2	True				
ANR	10997140	AssignmentExpression	"code = array_get ( imemory , space , 1 , & CIEdict )"		10997125	0		=			
ANR	10997141	Identifier	code		10997125	0					
ANR	10997142	CallExpression	"array_get ( imemory , space , 1 , & CIEdict )"		10997125	1					
ANR	10997143	Callee	array_get		10997125	0					
ANR	10997144	Identifier	array_get		10997125	0					
ANR	10997145	ArgumentList	imemory		10997125	1					
ANR	10997146	Argument	imemory		10997125	0					
ANR	10997147	Identifier	imemory		10997125	0					
ANR	10997148	Argument	space		10997125	1					
ANR	10997149	Identifier	space		10997125	0					
ANR	10997150	Argument	1		10997125	2					
ANR	10997151	PrimaryExpression	1		10997125	0					
ANR	10997152	Argument	& CIEdict		10997125	3					
ANR	10997153	UnaryOperationExpression	& CIEdict		10997125	0					
ANR	10997154	UnaryOperator	&		10997125	0					
ANR	10997155	Identifier	CIEdict		10997125	1					
ANR	10997156	IfStatement	if ( code < 0 )		10997125	3					
ANR	10997157	Condition	code < 0	2259:8:72545:72552	10997125	0	True				
ANR	10997158	RelationalExpression	code < 0		10997125	0		<			
ANR	10997159	Identifier	code		10997125	0					
ANR	10997160	PrimaryExpression	0		10997125	1					
ANR	10997161	ReturnStatement	return code ;	2260:8:72563:72574	10997125	1	True				
ANR	10997162	Identifier	code		10997125	0					
ANR	10997163	ExpressionStatement	"code = dict_find_string ( & CIEdict , ""RangeA"" , & tempref )"	2265:4:72673:72726	10997125	4	True				
ANR	10997164	AssignmentExpression	"code = dict_find_string ( & CIEdict , ""RangeA"" , & tempref )"		10997125	0		=			
ANR	10997165	Identifier	code		10997125	0					
ANR	10997166	CallExpression	"dict_find_string ( & CIEdict , ""RangeA"" , & tempref )"		10997125	1					
ANR	10997167	Callee	dict_find_string		10997125	0					
ANR	10997168	Identifier	dict_find_string		10997125	0					
ANR	10997169	ArgumentList	& CIEdict		10997125	1					
ANR	10997170	Argument	& CIEdict		10997125	0					
ANR	10997171	UnaryOperationExpression	& CIEdict		10997125	0					
ANR	10997172	UnaryOperator	&		10997125	0					
ANR	10997173	Identifier	CIEdict		10997125	1					
ANR	10997174	Argument	"""RangeA"""		10997125	1					
ANR	10997175	PrimaryExpression	"""RangeA"""		10997125	0					
ANR	10997176	Argument	& tempref		10997125	2					
ANR	10997177	UnaryOperationExpression	& tempref		10997125	0					
ANR	10997178	UnaryOperator	&		10997125	0					
ANR	10997179	Identifier	tempref		10997125	1					
ANR	10997180	IfStatement	"if ( code > 0 && ! r_has_type ( tempref , t_null ) )"		10997125	5					
ANR	10997181	Condition	"code > 0 && ! r_has_type ( tempref , t_null )"	2266:8:72736:72775	10997125	0	True				
ANR	10997182	AndExpression	"code > 0 && ! r_has_type ( tempref , t_null )"		10997125	0		&&			
ANR	10997183	RelationalExpression	code > 0		10997125	0		>			
ANR	10997184	Identifier	code		10997125	0					
ANR	10997185	PrimaryExpression	0		10997125	1					
ANR	10997186	UnaryOperationExpression	"! r_has_type ( tempref , t_null )"		10997125	1					
ANR	10997187	UnaryOperator	!		10997125	0					
ANR	10997188	CallExpression	"r_has_type ( tempref , t_null )"		10997125	1					
ANR	10997189	Callee	r_has_type		10997125	0					
ANR	10997190	Identifier	r_has_type		10997125	0					
ANR	10997191	ArgumentList	tempref		10997125	1					
ANR	10997192	Argument	tempref		10997125	0					
ANR	10997193	Identifier	tempref		10997125	0					
ANR	10997194	Argument	t_null		10997125	1					
ANR	10997195	Identifier	t_null		10997125	0					
ANR	10997196	CompoundStatement		13:50:335:335	10997125	1					
ANR	10997197	ExpressionStatement	"code = get_cie_param_array ( imemory , tempref , 2 , ptr )"	2267:8:72788:72840	10997125	0	True				
ANR	10997198	AssignmentExpression	"code = get_cie_param_array ( imemory , tempref , 2 , ptr )"		10997125	0		=			
ANR	10997199	Identifier	code		10997125	0					
ANR	10997200	CallExpression	"get_cie_param_array ( imemory , tempref , 2 , ptr )"		10997125	1					
ANR	10997201	Callee	get_cie_param_array		10997125	0					
ANR	10997202	Identifier	get_cie_param_array		10997125	0					
ANR	10997203	ArgumentList	imemory		10997125	1					
ANR	10997204	Argument	imemory		10997125	0					
ANR	10997205	Identifier	imemory		10997125	0					
ANR	10997206	Argument	tempref		10997125	1					
ANR	10997207	Identifier	tempref		10997125	0					
ANR	10997208	Argument	2		10997125	2					
ANR	10997209	PrimaryExpression	2		10997125	0					
ANR	10997210	Argument	ptr		10997125	3					
ANR	10997211	Identifier	ptr		10997125	0					
ANR	10997212	IfStatement	if ( code < 0 )		10997125	1					
ANR	10997213	Condition	code < 0	2268:12:72854:72861	10997125	0	True				
ANR	10997214	RelationalExpression	code < 0		10997125	0		<			
ANR	10997215	Identifier	code		10997125	0					
ANR	10997216	PrimaryExpression	0		10997125	1					
ANR	10997217	ReturnStatement	return code ;	2269:12:72876:72887	10997125	1	True				
ANR	10997218	Identifier	code		10997125	0					
ANR	10997219	ElseStatement	else		10997125	0					
ANR	10997220	CompoundStatement		17:11:457:457	10997125	0					
ANR	10997221	ExpressionStatement	ptr [ 0 ] = 0	2272:8:72953:72963	10997125	0	True				
ANR	10997222	AssignmentExpression	ptr [ 0 ] = 0		10997125	0		=			
ANR	10997223	ArrayIndexing	ptr [ 0 ]		10997125	0					
ANR	10997224	Identifier	ptr		10997125	0					
ANR	10997225	PrimaryExpression	0		10997125	1					
ANR	10997226	PrimaryExpression	0		10997125	1					
ANR	10997227	ExpressionStatement	ptr [ 1 ] = 1	2273:8:72973:72983	10997125	1	True				
ANR	10997228	AssignmentExpression	ptr [ 1 ] = 1		10997125	0		=			
ANR	10997229	ArrayIndexing	ptr [ 1 ]		10997125	0					
ANR	10997230	Identifier	ptr		10997125	0					
ANR	10997231	PrimaryExpression	1		10997125	1					
ANR	10997232	PrimaryExpression	1		10997125	1					
ANR	10997233	ReturnStatement	return 0 ;	2275:4:72995:73003	10997125	6	True				
ANR	10997234	PrimaryExpression	0		10997125	0					
ANR	10997235	ReturnType	static int		10997125	1					
ANR	10997236	Identifier	cieadomain		10997125	2					
ANR	10997237	ParameterList	"i_ctx_t * i_ctx_p , ref * space , float * ptr"		10997125	3					
ANR	10997238	Parameter	i_ctx_t * i_ctx_p	2253:22:72399:72415	10997125	0	True				
ANR	10997239	ParameterType	i_ctx_t *		10997125	0					
ANR	10997240	Identifier	i_ctx_p		10997125	1					
ANR	10997241	Parameter	ref * space	2253:41:72418:72427	10997125	1	True				
ANR	10997242	ParameterType	ref *		10997125	0					
ANR	10997243	Identifier	space		10997125	1					
ANR	10997244	Parameter	float * ptr	2253:53:72430:72439	10997125	2	True				
ANR	10997245	ParameterType	float *		10997125	0					
ANR	10997246	Identifier	ptr		10997125	1					
ANR	10997247	CFGEntryNode	ENTRY		10997125		True				
ANR	10997248	CFGExitNode	EXIT		10997125		True				
ANR	10997249	Symbol	code		10997125						
ANR	10997250	Symbol	dict_find_string		10997125						
ANR	10997251	Symbol	array_get		10997125						
ANR	10997252	Symbol	& CIEdict		10997125						
ANR	10997253	Symbol	& tempref		10997125						
ANR	10997254	Symbol	space		10997125						
ANR	10997255	Symbol	ptr		10997125						
ANR	10997256	Symbol	r_has_type		10997125						
ANR	10997257	Symbol	t_null		10997125						
ANR	10997258	Symbol	i_ctx_p		10997125						
ANR	10997259	Symbol	* ptr		10997125						
ANR	10997260	Symbol	CIEdict		10997125						
ANR	10997261	Symbol	imemory		10997125						
ANR	10997262	Symbol	get_cie_param_array		10997125						
ANR	10997263	Symbol	tempref		10997125						
ANR	10997264	Function	ciearange	2277:0:73007:73634							
ANR	10997265	FunctionDef	"ciearange (i_ctx_t * i_ctx_p , ref * space , float * ptr)"		10997264	0					
ANR	10997266	CompoundStatement		2278:0:73071:73634	10997264	0					
ANR	10997267	IdentifierDeclStatement	int code ;	2279:4:73077:73085	10997264	0	True				
ANR	10997268	IdentifierDecl	code		10997264	0					
ANR	10997269	IdentifierDeclType	int		10997264	0					
ANR	10997270	Identifier	code		10997264	1					
ANR	10997271	IdentifierDeclStatement	"ref CIEdict , * tempref ;"	2280:4:73091:73112	10997264	1	True				
ANR	10997272	IdentifierDecl	CIEdict		10997264	0					
ANR	10997273	IdentifierDeclType	ref		10997264	0					
ANR	10997274	Identifier	CIEdict		10997264	1					
ANR	10997275	IdentifierDecl	* tempref		10997264	1					
ANR	10997276	IdentifierDeclType	ref *		10997264	0					
ANR	10997277	Identifier	tempref		10997264	1					
ANR	10997278	ExpressionStatement	"code = array_get ( imemory , space , 1 , & CIEdict )"	2282:4:73119:73164	10997264	2	True				
ANR	10997279	AssignmentExpression	"code = array_get ( imemory , space , 1 , & CIEdict )"		10997264	0		=			
ANR	10997280	Identifier	code		10997264	0					
ANR	10997281	CallExpression	"array_get ( imemory , space , 1 , & CIEdict )"		10997264	1					
ANR	10997282	Callee	array_get		10997264	0					
ANR	10997283	Identifier	array_get		10997264	0					
ANR	10997284	ArgumentList	imemory		10997264	1					
ANR	10997285	Argument	imemory		10997264	0					
ANR	10997286	Identifier	imemory		10997264	0					
ANR	10997287	Argument	space		10997264	1					
ANR	10997288	Identifier	space		10997264	0					
ANR	10997289	Argument	1		10997264	2					
ANR	10997290	PrimaryExpression	1		10997264	0					
ANR	10997291	Argument	& CIEdict		10997264	3					
ANR	10997292	UnaryOperationExpression	& CIEdict		10997264	0					
ANR	10997293	UnaryOperator	&		10997264	0					
ANR	10997294	Identifier	CIEdict		10997264	1					
ANR	10997295	IfStatement	if ( code < 0 )		10997264	3					
ANR	10997296	Condition	code < 0	2283:8:73174:73181	10997264	0	True				
ANR	10997297	RelationalExpression	code < 0		10997264	0		<			
ANR	10997298	Identifier	code		10997264	0					
ANR	10997299	PrimaryExpression	0		10997264	1					
ANR	10997300	ReturnStatement	return code ;	2284:8:73192:73203	10997264	1	True				
ANR	10997301	Identifier	code		10997264	0					
ANR	10997302	ExpressionStatement	"code = dict_find_string ( & CIEdict , ""RangeA"" , & tempref )"	2289:4:73302:73355	10997264	4	True				
ANR	10997303	AssignmentExpression	"code = dict_find_string ( & CIEdict , ""RangeA"" , & tempref )"		10997264	0		=			
ANR	10997304	Identifier	code		10997264	0					
ANR	10997305	CallExpression	"dict_find_string ( & CIEdict , ""RangeA"" , & tempref )"		10997264	1					
ANR	10997306	Callee	dict_find_string		10997264	0					
ANR	10997307	Identifier	dict_find_string		10997264	0					
ANR	10997308	ArgumentList	& CIEdict		10997264	1					
ANR	10997309	Argument	& CIEdict		10997264	0					
ANR	10997310	UnaryOperationExpression	& CIEdict		10997264	0					
ANR	10997311	UnaryOperator	&		10997264	0					
ANR	10997312	Identifier	CIEdict		10997264	1					
ANR	10997313	Argument	"""RangeA"""		10997264	1					
ANR	10997314	PrimaryExpression	"""RangeA"""		10997264	0					
ANR	10997315	Argument	& tempref		10997264	2					
ANR	10997316	UnaryOperationExpression	& tempref		10997264	0					
ANR	10997317	UnaryOperator	&		10997264	0					
ANR	10997318	Identifier	tempref		10997264	1					
ANR	10997319	IfStatement	"if ( code > 0 && ! r_has_type ( tempref , t_null ) )"		10997264	5					
ANR	10997320	Condition	"code > 0 && ! r_has_type ( tempref , t_null )"	2290:8:73365:73404	10997264	0	True				
ANR	10997321	AndExpression	"code > 0 && ! r_has_type ( tempref , t_null )"		10997264	0		&&			
ANR	10997322	RelationalExpression	code > 0		10997264	0		>			
ANR	10997323	Identifier	code		10997264	0					
ANR	10997324	PrimaryExpression	0		10997264	1					
ANR	10997325	UnaryOperationExpression	"! r_has_type ( tempref , t_null )"		10997264	1					
ANR	10997326	UnaryOperator	!		10997264	0					
ANR	10997327	CallExpression	"r_has_type ( tempref , t_null )"		10997264	1					
ANR	10997328	Callee	r_has_type		10997264	0					
ANR	10997329	Identifier	r_has_type		10997264	0					
ANR	10997330	ArgumentList	tempref		10997264	1					
ANR	10997331	Argument	tempref		10997264	0					
ANR	10997332	Identifier	tempref		10997264	0					
ANR	10997333	Argument	t_null		10997264	1					
ANR	10997334	Identifier	t_null		10997264	0					
ANR	10997335	CompoundStatement		13:50:335:335	10997264	1					
ANR	10997336	ExpressionStatement	"code = get_cie_param_array ( imemory , tempref , 2 , ptr )"	2291:8:73417:73469	10997264	0	True				
ANR	10997337	AssignmentExpression	"code = get_cie_param_array ( imemory , tempref , 2 , ptr )"		10997264	0		=			
ANR	10997338	Identifier	code		10997264	0					
ANR	10997339	CallExpression	"get_cie_param_array ( imemory , tempref , 2 , ptr )"		10997264	1					
ANR	10997340	Callee	get_cie_param_array		10997264	0					
ANR	10997341	Identifier	get_cie_param_array		10997264	0					
ANR	10997342	ArgumentList	imemory		10997264	1					
ANR	10997343	Argument	imemory		10997264	0					
ANR	10997344	Identifier	imemory		10997264	0					
ANR	10997345	Argument	tempref		10997264	1					
ANR	10997346	Identifier	tempref		10997264	0					
ANR	10997347	Argument	2		10997264	2					
ANR	10997348	PrimaryExpression	2		10997264	0					
ANR	10997349	Argument	ptr		10997264	3					
ANR	10997350	Identifier	ptr		10997264	0					
ANR	10997351	IfStatement	if ( code < 0 )		10997264	1					
ANR	10997352	Condition	code < 0	2292:12:73483:73490	10997264	0	True				
ANR	10997353	RelationalExpression	code < 0		10997264	0		<			
ANR	10997354	Identifier	code		10997264	0					
ANR	10997355	PrimaryExpression	0		10997264	1					
ANR	10997356	ReturnStatement	return code ;	2293:12:73505:73516	10997264	1	True				
ANR	10997357	Identifier	code		10997264	0					
ANR	10997358	ElseStatement	else		10997264	0					
ANR	10997359	CompoundStatement		17:11:457:457	10997264	0					
ANR	10997360	ExpressionStatement	ptr [ 0 ] = 0	2296:8:73582:73592	10997264	0	True				
ANR	10997361	AssignmentExpression	ptr [ 0 ] = 0		10997264	0		=			
ANR	10997362	ArrayIndexing	ptr [ 0 ]		10997264	0					
ANR	10997363	Identifier	ptr		10997264	0					
ANR	10997364	PrimaryExpression	0		10997264	1					
ANR	10997365	PrimaryExpression	0		10997264	1					
ANR	10997366	ExpressionStatement	ptr [ 1 ] = 1	2297:8:73602:73612	10997264	1	True				
ANR	10997367	AssignmentExpression	ptr [ 1 ] = 1		10997264	0		=			
ANR	10997368	ArrayIndexing	ptr [ 1 ]		10997264	0					
ANR	10997369	Identifier	ptr		10997264	0					
ANR	10997370	PrimaryExpression	1		10997264	1					
ANR	10997371	PrimaryExpression	1		10997264	1					
ANR	10997372	ReturnStatement	return 0 ;	2299:4:73624:73632	10997264	6	True				
ANR	10997373	PrimaryExpression	0		10997264	0					
ANR	10997374	ReturnType	static int		10997264	1					
ANR	10997375	Identifier	ciearange		10997264	2					
ANR	10997376	ParameterList	"i_ctx_t * i_ctx_p , ref * space , float * ptr"		10997264	3					
ANR	10997377	Parameter	i_ctx_t * i_ctx_p	2277:21:73028:73044	10997264	0	True				
ANR	10997378	ParameterType	i_ctx_t *		10997264	0					
ANR	10997379	Identifier	i_ctx_p		10997264	1					
ANR	10997380	Parameter	ref * space	2277:40:73047:73056	10997264	1	True				
ANR	10997381	ParameterType	ref *		10997264	0					
ANR	10997382	Identifier	space		10997264	1					
ANR	10997383	Parameter	float * ptr	2277:52:73059:73068	10997264	2	True				
ANR	10997384	ParameterType	float *		10997264	0					
ANR	10997385	Identifier	ptr		10997264	1					
ANR	10997386	CFGEntryNode	ENTRY		10997264		True				
ANR	10997387	CFGExitNode	EXIT		10997264		True				
ANR	10997388	Symbol	code		10997264						
ANR	10997389	Symbol	dict_find_string		10997264						
ANR	10997390	Symbol	array_get		10997264						
ANR	10997391	Symbol	& CIEdict		10997264						
ANR	10997392	Symbol	& tempref		10997264						
ANR	10997393	Symbol	space		10997264						
ANR	10997394	Symbol	ptr		10997264						
ANR	10997395	Symbol	t_null		10997264						
ANR	10997396	Symbol	r_has_type		10997264						
ANR	10997397	Symbol	i_ctx_p		10997264						
ANR	10997398	Symbol	* ptr		10997264						
ANR	10997399	Symbol	CIEdict		10997264						
ANR	10997400	Symbol	imemory		10997264						
ANR	10997401	Symbol	get_cie_param_array		10997264						
ANR	10997402	Symbol	tempref		10997264						
ANR	10997403	Function	cieavalidate	2301:0:73636:73935							
ANR	10997404	FunctionDef	"cieavalidate (i_ctx_t * i_ctx_p , ref * space , float * values , int num_comps)"		10997403	0					
ANR	10997405	CompoundStatement		2302:0:73720:73935	10997403	0					
ANR	10997406	IdentifierDeclStatement	os_ptr op = osp ;	2303:4:73726:73741	10997403	0	True				
ANR	10997407	IdentifierDecl	op = osp		10997403	0					
ANR	10997408	IdentifierDeclType	os_ptr		10997403	0					
ANR	10997409	Identifier	op		10997403	1					
ANR	10997410	AssignmentExpression	op = osp		10997403	2		=			
ANR	10997411	Identifier	osp		10997403	0					
ANR	10997412	Identifier	osp		10997403	1					
ANR	10997413	IfStatement	if ( num_comps < 1 )		10997403	1					
ANR	10997414	Condition	num_comps < 1	2305:8:73752:73764	10997403	0	True				
ANR	10997415	RelationalExpression	num_comps < 1		10997403	0		<			
ANR	10997416	Identifier	num_comps		10997403	0					
ANR	10997417	PrimaryExpression	1		10997403	1					
ANR	10997418	ExpressionStatement	return_error ( gs_error_stackunderflow )	2306:8:73775:73812	10997403	1	True				
ANR	10997419	CallExpression	return_error ( gs_error_stackunderflow )		10997403	0					
ANR	10997420	Callee	return_error		10997403	0					
ANR	10997421	Identifier	return_error		10997403	0					
ANR	10997422	ArgumentList	gs_error_stackunderflow		10997403	1					
ANR	10997423	Argument	gs_error_stackunderflow		10997403	0					
ANR	10997424	Identifier	gs_error_stackunderflow		10997403	0					
ANR	10997425	IfStatement	"if ( ! r_has_type ( op , t_integer ) && ! r_has_type ( op , t_real ) )"		10997403	2					
ANR	10997426	Condition	"! r_has_type ( op , t_integer ) && ! r_has_type ( op , t_real )"	2308:8:73823:73875	10997403	0	True				
ANR	10997427	AndExpression	"! r_has_type ( op , t_integer ) && ! r_has_type ( op , t_real )"		10997403	0		&&			
ANR	10997428	UnaryOperationExpression	"! r_has_type ( op , t_integer )"		10997403	0					
ANR	10997429	UnaryOperator	!		10997403	0					
ANR	10997430	CallExpression	"r_has_type ( op , t_integer )"		10997403	1					
ANR	10997431	Callee	r_has_type		10997403	0					
ANR	10997432	Identifier	r_has_type		10997403	0					
ANR	10997433	ArgumentList	op		10997403	1					
ANR	10997434	Argument	op		10997403	0					
ANR	10997435	Identifier	op		10997403	0					
ANR	10997436	Argument	t_integer		10997403	1					
ANR	10997437	Identifier	t_integer		10997403	0					
ANR	10997438	UnaryOperationExpression	"! r_has_type ( op , t_real )"		10997403	1					
ANR	10997439	UnaryOperator	!		10997403	0					
ANR	10997440	CallExpression	"r_has_type ( op , t_real )"		10997403	1					
ANR	10997441	Callee	r_has_type		10997403	0					
ANR	10997442	Identifier	r_has_type		10997403	0					
ANR	10997443	ArgumentList	op		10997403	1					
ANR	10997444	Argument	op		10997403	0					
ANR	10997445	Identifier	op		10997403	0					
ANR	10997446	Argument	t_real		10997403	1					
ANR	10997447	Identifier	t_real		10997403	0					
ANR	10997448	ExpressionStatement	return_error ( gs_error_typecheck )	2309:8:73886:73918	10997403	1	True				
ANR	10997449	CallExpression	return_error ( gs_error_typecheck )		10997403	0					
ANR	10997450	Callee	return_error		10997403	0					
ANR	10997451	Identifier	return_error		10997403	0					
ANR	10997452	ArgumentList	gs_error_typecheck		10997403	1					
ANR	10997453	Argument	gs_error_typecheck		10997403	0					
ANR	10997454	Identifier	gs_error_typecheck		10997403	0					
ANR	10997455	ReturnStatement	return 0 ;	2311:4:73925:73933	10997403	3	True				
ANR	10997456	PrimaryExpression	0		10997403	0					
ANR	10997457	ReturnType	static int		10997403	1					
ANR	10997458	Identifier	cieavalidate		10997403	2					
ANR	10997459	ParameterList	"i_ctx_t * i_ctx_p , ref * space , float * values , int num_comps"		10997403	3					
ANR	10997460	Parameter	i_ctx_t * i_ctx_p	2301:24:73660:73675	10997403	0	True				
ANR	10997461	ParameterType	i_ctx_t *		10997403	0					
ANR	10997462	Identifier	i_ctx_p		10997403	1					
ANR	10997463	Parameter	ref * space	2301:42:73678:73687	10997403	1	True				
ANR	10997464	ParameterType	ref *		10997403	0					
ANR	10997465	Identifier	space		10997403	1					
ANR	10997466	Parameter	float * values	2301:54:73690:73702	10997403	2	True				
ANR	10997467	ParameterType	float *		10997403	0					
ANR	10997468	Identifier	values		10997403	1					
ANR	10997469	Parameter	int num_comps	2301:69:73705:73717	10997403	3	True				
ANR	10997470	ParameterType	int		10997403	0					
ANR	10997471	Identifier	num_comps		10997403	1					
ANR	10997472	CFGEntryNode	ENTRY		10997403		True				
ANR	10997473	CFGExitNode	EXIT		10997403		True				
ANR	10997474	Symbol	op		10997403						
ANR	10997475	Symbol	r_has_type		10997403						
ANR	10997476	Symbol	gs_error_typecheck		10997403						
ANR	10997477	Symbol	t_integer		10997403						
ANR	10997478	Symbol	gs_error_stackunderflow		10997403						
ANR	10997479	Symbol	i_ctx_p		10997403						
ANR	10997480	Symbol	values		10997403						
ANR	10997481	Symbol	num_comps		10997403						
ANR	10997482	Symbol	t_real		10997403						
ANR	10997483	Symbol	osp		10997403						
ANR	10997484	Symbol	space		10997403						
ANR	10997485	Function	cieacompareproc	2313:0:73937:75006							
ANR	10997486	FunctionDef	"cieacompareproc (i_ctx_t * i_ctx_p , ref * space , ref * testspace)"		10997485	0					
ANR	10997487	CompoundStatement		2314:0:74010:75006	10997485	0					
ANR	10997488	IdentifierDeclStatement	int code = 0 ;	2315:4:74016:74028	10997485	0	True				
ANR	10997489	IdentifierDecl	code = 0		10997485	0					
ANR	10997490	IdentifierDeclType	int		10997485	0					
ANR	10997491	Identifier	code		10997485	1					
ANR	10997492	AssignmentExpression	code = 0		10997485	2		=			
ANR	10997493	Identifier	code		10997485	0					
ANR	10997494	PrimaryExpression	0		10997485	1					
ANR	10997495	IdentifierDeclStatement	"ref CIEdict1 , CIEdict2 ;"	2316:4:74034:74056	10997485	1	True				
ANR	10997496	IdentifierDecl	CIEdict1		10997485	0					
ANR	10997497	IdentifierDeclType	ref		10997485	0					
ANR	10997498	Identifier	CIEdict1		10997485	1					
ANR	10997499	IdentifierDecl	CIEdict2		10997485	1					
ANR	10997500	IdentifierDeclType	ref		10997485	0					
ANR	10997501	Identifier	CIEdict2		10997485	1					
ANR	10997502	ExpressionStatement	"code = array_get ( imemory , space , 1 , & CIEdict1 )"	2318:4:74063:74109	10997485	2	True				
ANR	10997503	AssignmentExpression	"code = array_get ( imemory , space , 1 , & CIEdict1 )"		10997485	0		=			
ANR	10997504	Identifier	code		10997485	0					
ANR	10997505	CallExpression	"array_get ( imemory , space , 1 , & CIEdict1 )"		10997485	1					
ANR	10997506	Callee	array_get		10997485	0					
ANR	10997507	Identifier	array_get		10997485	0					
ANR	10997508	ArgumentList	imemory		10997485	1					
ANR	10997509	Argument	imemory		10997485	0					
ANR	10997510	Identifier	imemory		10997485	0					
ANR	10997511	Argument	space		10997485	1					
ANR	10997512	Identifier	space		10997485	0					
ANR	10997513	Argument	1		10997485	2					
ANR	10997514	PrimaryExpression	1		10997485	0					
ANR	10997515	Argument	& CIEdict1		10997485	3					
ANR	10997516	UnaryOperationExpression	& CIEdict1		10997485	0					
ANR	10997517	UnaryOperator	&		10997485	0					
ANR	10997518	Identifier	CIEdict1		10997485	1					
ANR	10997519	IfStatement	if ( code < 0 )		10997485	3					
ANR	10997520	Condition	code < 0	2319:8:74119:74126	10997485	0	True				
ANR	10997521	RelationalExpression	code < 0		10997485	0		<			
ANR	10997522	Identifier	code		10997485	0					
ANR	10997523	PrimaryExpression	0		10997485	1					
ANR	10997524	ReturnStatement	return 0 ;	2320:8:74137:74145	10997485	1	True				
ANR	10997525	PrimaryExpression	0		10997485	0					
ANR	10997526	ExpressionStatement	"code = array_get ( imemory , testspace , 1 , & CIEdict2 )"	2321:4:74151:74201	10997485	4	True				
ANR	10997527	AssignmentExpression	"code = array_get ( imemory , testspace , 1 , & CIEdict2 )"		10997485	0		=			
ANR	10997528	Identifier	code		10997485	0					
ANR	10997529	CallExpression	"array_get ( imemory , testspace , 1 , & CIEdict2 )"		10997485	1					
ANR	10997530	Callee	array_get		10997485	0					
ANR	10997531	Identifier	array_get		10997485	0					
ANR	10997532	ArgumentList	imemory		10997485	1					
ANR	10997533	Argument	imemory		10997485	0					
ANR	10997534	Identifier	imemory		10997485	0					
ANR	10997535	Argument	testspace		10997485	1					
ANR	10997536	Identifier	testspace		10997485	0					
ANR	10997537	Argument	1		10997485	2					
ANR	10997538	PrimaryExpression	1		10997485	0					
ANR	10997539	Argument	& CIEdict2		10997485	3					
ANR	10997540	UnaryOperationExpression	& CIEdict2		10997485	0					
ANR	10997541	UnaryOperator	&		10997485	0					
ANR	10997542	Identifier	CIEdict2		10997485	1					
ANR	10997543	IfStatement	if ( code < 0 )		10997485	5					
ANR	10997544	Condition	code < 0	2322:8:74211:74218	10997485	0	True				
ANR	10997545	RelationalExpression	code < 0		10997485	0		<			
ANR	10997546	Identifier	code		10997485	0					
ANR	10997547	PrimaryExpression	0		10997485	1					
ANR	10997548	ReturnStatement	return 0 ;	2323:8:74229:74237	10997485	1	True				
ANR	10997549	PrimaryExpression	0		10997485	0					
ANR	10997550	IfStatement	"if ( ! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""WhitePoint"" ) )"		10997485	6					
ANR	10997551	Condition	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""WhitePoint"" )"	2324:8:74247:74314	10997485	0	True				
ANR	10997552	UnaryOperationExpression	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""WhitePoint"" )"		10997485	0					
ANR	10997553	UnaryOperator	!		10997485	0					
ANR	10997554	CallExpression	"comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""WhitePoint"" )"		10997485	1					
ANR	10997555	Callee	comparedictkey		10997485	0					
ANR	10997556	Identifier	comparedictkey		10997485	0					
ANR	10997557	ArgumentList	i_ctx_p		10997485	1					
ANR	10997558	Argument	i_ctx_p		10997485	0					
ANR	10997559	Identifier	i_ctx_p		10997485	0					
ANR	10997560	Argument	& CIEdict1		10997485	1					
ANR	10997561	UnaryOperationExpression	& CIEdict1		10997485	0					
ANR	10997562	UnaryOperator	&		10997485	0					
ANR	10997563	Identifier	CIEdict1		10997485	1					
ANR	10997564	Argument	& CIEdict2		10997485	2					
ANR	10997565	UnaryOperationExpression	& CIEdict2		10997485	0					
ANR	10997566	UnaryOperator	&		10997485	0					
ANR	10997567	Identifier	CIEdict2		10997485	1					
ANR	10997568	Argument	"( char * ) ""WhitePoint"""		10997485	3					
ANR	10997569	CastExpression	"( char * ) ""WhitePoint"""		10997485	0					
ANR	10997570	CastTarget	char *		10997485	0					
ANR	10997571	PrimaryExpression	"""WhitePoint"""		10997485	1					
ANR	10997572	ReturnStatement	return 0 ;	2325:8:74325:74333	10997485	1	True				
ANR	10997573	PrimaryExpression	0		10997485	0					
ANR	10997574	IfStatement	"if ( ! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""BlackPoint"" ) )"		10997485	7					
ANR	10997575	Condition	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""BlackPoint"" )"	2326:8:74343:74410	10997485	0	True				
ANR	10997576	UnaryOperationExpression	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""BlackPoint"" )"		10997485	0					
ANR	10997577	UnaryOperator	!		10997485	0					
ANR	10997578	CallExpression	"comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""BlackPoint"" )"		10997485	1					
ANR	10997579	Callee	comparedictkey		10997485	0					
ANR	10997580	Identifier	comparedictkey		10997485	0					
ANR	10997581	ArgumentList	i_ctx_p		10997485	1					
ANR	10997582	Argument	i_ctx_p		10997485	0					
ANR	10997583	Identifier	i_ctx_p		10997485	0					
ANR	10997584	Argument	& CIEdict1		10997485	1					
ANR	10997585	UnaryOperationExpression	& CIEdict1		10997485	0					
ANR	10997586	UnaryOperator	&		10997485	0					
ANR	10997587	Identifier	CIEdict1		10997485	1					
ANR	10997588	Argument	& CIEdict2		10997485	2					
ANR	10997589	UnaryOperationExpression	& CIEdict2		10997485	0					
ANR	10997590	UnaryOperator	&		10997485	0					
ANR	10997591	Identifier	CIEdict2		10997485	1					
ANR	10997592	Argument	"( char * ) ""BlackPoint"""		10997485	3					
ANR	10997593	CastExpression	"( char * ) ""BlackPoint"""		10997485	0					
ANR	10997594	CastTarget	char *		10997485	0					
ANR	10997595	PrimaryExpression	"""BlackPoint"""		10997485	1					
ANR	10997596	ReturnStatement	return 0 ;	2327:8:74421:74429	10997485	1	True				
ANR	10997597	PrimaryExpression	0		10997485	0					
ANR	10997598	IfStatement	"if ( ! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""RangeA"" ) )"		10997485	8					
ANR	10997599	Condition	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""RangeA"" )"	2328:8:74439:74502	10997485	0	True				
ANR	10997600	UnaryOperationExpression	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""RangeA"" )"		10997485	0					
ANR	10997601	UnaryOperator	!		10997485	0					
ANR	10997602	CallExpression	"comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""RangeA"" )"		10997485	1					
ANR	10997603	Callee	comparedictkey		10997485	0					
ANR	10997604	Identifier	comparedictkey		10997485	0					
ANR	10997605	ArgumentList	i_ctx_p		10997485	1					
ANR	10997606	Argument	i_ctx_p		10997485	0					
ANR	10997607	Identifier	i_ctx_p		10997485	0					
ANR	10997608	Argument	& CIEdict1		10997485	1					
ANR	10997609	UnaryOperationExpression	& CIEdict1		10997485	0					
ANR	10997610	UnaryOperator	&		10997485	0					
ANR	10997611	Identifier	CIEdict1		10997485	1					
ANR	10997612	Argument	& CIEdict2		10997485	2					
ANR	10997613	UnaryOperationExpression	& CIEdict2		10997485	0					
ANR	10997614	UnaryOperator	&		10997485	0					
ANR	10997615	Identifier	CIEdict2		10997485	1					
ANR	10997616	Argument	"( char * ) ""RangeA"""		10997485	3					
ANR	10997617	CastExpression	"( char * ) ""RangeA"""		10997485	0					
ANR	10997618	CastTarget	char *		10997485	0					
ANR	10997619	PrimaryExpression	"""RangeA"""		10997485	1					
ANR	10997620	ReturnStatement	return 0 ;	2329:8:74513:74521	10997485	1	True				
ANR	10997621	PrimaryExpression	0		10997485	0					
ANR	10997622	IfStatement	"if ( ! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""DecodeA"" ) )"		10997485	9					
ANR	10997623	Condition	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""DecodeA"" )"	2330:8:74531:74595	10997485	0	True				
ANR	10997624	UnaryOperationExpression	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""DecodeA"" )"		10997485	0					
ANR	10997625	UnaryOperator	!		10997485	0					
ANR	10997626	CallExpression	"comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""DecodeA"" )"		10997485	1					
ANR	10997627	Callee	comparedictkey		10997485	0					
ANR	10997628	Identifier	comparedictkey		10997485	0					
ANR	10997629	ArgumentList	i_ctx_p		10997485	1					
ANR	10997630	Argument	i_ctx_p		10997485	0					
ANR	10997631	Identifier	i_ctx_p		10997485	0					
ANR	10997632	Argument	& CIEdict1		10997485	1					
ANR	10997633	UnaryOperationExpression	& CIEdict1		10997485	0					
ANR	10997634	UnaryOperator	&		10997485	0					
ANR	10997635	Identifier	CIEdict1		10997485	1					
ANR	10997636	Argument	& CIEdict2		10997485	2					
ANR	10997637	UnaryOperationExpression	& CIEdict2		10997485	0					
ANR	10997638	UnaryOperator	&		10997485	0					
ANR	10997639	Identifier	CIEdict2		10997485	1					
ANR	10997640	Argument	"( char * ) ""DecodeA"""		10997485	3					
ANR	10997641	CastExpression	"( char * ) ""DecodeA"""		10997485	0					
ANR	10997642	CastTarget	char *		10997485	0					
ANR	10997643	PrimaryExpression	"""DecodeA"""		10997485	1					
ANR	10997644	ReturnStatement	return 0 ;	2331:8:74606:74614	10997485	1	True				
ANR	10997645	PrimaryExpression	0		10997485	0					
ANR	10997646	IfStatement	"if ( ! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""MatrixA"" ) )"		10997485	10					
ANR	10997647	Condition	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""MatrixA"" )"	2332:8:74624:74688	10997485	0	True				
ANR	10997648	UnaryOperationExpression	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""MatrixA"" )"		10997485	0					
ANR	10997649	UnaryOperator	!		10997485	0					
ANR	10997650	CallExpression	"comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""MatrixA"" )"		10997485	1					
ANR	10997651	Callee	comparedictkey		10997485	0					
ANR	10997652	Identifier	comparedictkey		10997485	0					
ANR	10997653	ArgumentList	i_ctx_p		10997485	1					
ANR	10997654	Argument	i_ctx_p		10997485	0					
ANR	10997655	Identifier	i_ctx_p		10997485	0					
ANR	10997656	Argument	& CIEdict1		10997485	1					
ANR	10997657	UnaryOperationExpression	& CIEdict1		10997485	0					
ANR	10997658	UnaryOperator	&		10997485	0					
ANR	10997659	Identifier	CIEdict1		10997485	1					
ANR	10997660	Argument	& CIEdict2		10997485	2					
ANR	10997661	UnaryOperationExpression	& CIEdict2		10997485	0					
ANR	10997662	UnaryOperator	&		10997485	0					
ANR	10997663	Identifier	CIEdict2		10997485	1					
ANR	10997664	Argument	"( char * ) ""MatrixA"""		10997485	3					
ANR	10997665	CastExpression	"( char * ) ""MatrixA"""		10997485	0					
ANR	10997666	CastTarget	char *		10997485	0					
ANR	10997667	PrimaryExpression	"""MatrixA"""		10997485	1					
ANR	10997668	ReturnStatement	return 0 ;	2333:8:74699:74707	10997485	1	True				
ANR	10997669	PrimaryExpression	0		10997485	0					
ANR	10997670	IfStatement	"if ( ! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""RangeLMN"" ) )"		10997485	11					
ANR	10997671	Condition	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""RangeLMN"" )"	2334:8:74717:74782	10997485	0	True				
ANR	10997672	UnaryOperationExpression	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""RangeLMN"" )"		10997485	0					
ANR	10997673	UnaryOperator	!		10997485	0					
ANR	10997674	CallExpression	"comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""RangeLMN"" )"		10997485	1					
ANR	10997675	Callee	comparedictkey		10997485	0					
ANR	10997676	Identifier	comparedictkey		10997485	0					
ANR	10997677	ArgumentList	i_ctx_p		10997485	1					
ANR	10997678	Argument	i_ctx_p		10997485	0					
ANR	10997679	Identifier	i_ctx_p		10997485	0					
ANR	10997680	Argument	& CIEdict1		10997485	1					
ANR	10997681	UnaryOperationExpression	& CIEdict1		10997485	0					
ANR	10997682	UnaryOperator	&		10997485	0					
ANR	10997683	Identifier	CIEdict1		10997485	1					
ANR	10997684	Argument	& CIEdict2		10997485	2					
ANR	10997685	UnaryOperationExpression	& CIEdict2		10997485	0					
ANR	10997686	UnaryOperator	&		10997485	0					
ANR	10997687	Identifier	CIEdict2		10997485	1					
ANR	10997688	Argument	"( char * ) ""RangeLMN"""		10997485	3					
ANR	10997689	CastExpression	"( char * ) ""RangeLMN"""		10997485	0					
ANR	10997690	CastTarget	char *		10997485	0					
ANR	10997691	PrimaryExpression	"""RangeLMN"""		10997485	1					
ANR	10997692	ReturnStatement	return 0 ;	2335:8:74793:74801	10997485	1	True				
ANR	10997693	PrimaryExpression	0		10997485	0					
ANR	10997694	IfStatement	"if ( ! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""DecodeLMN"" ) )"		10997485	12					
ANR	10997695	Condition	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""DecodeLMN"" )"	2336:8:74811:74877	10997485	0	True				
ANR	10997696	UnaryOperationExpression	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""DecodeLMN"" )"		10997485	0					
ANR	10997697	UnaryOperator	!		10997485	0					
ANR	10997698	CallExpression	"comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""DecodeLMN"" )"		10997485	1					
ANR	10997699	Callee	comparedictkey		10997485	0					
ANR	10997700	Identifier	comparedictkey		10997485	0					
ANR	10997701	ArgumentList	i_ctx_p		10997485	1					
ANR	10997702	Argument	i_ctx_p		10997485	0					
ANR	10997703	Identifier	i_ctx_p		10997485	0					
ANR	10997704	Argument	& CIEdict1		10997485	1					
ANR	10997705	UnaryOperationExpression	& CIEdict1		10997485	0					
ANR	10997706	UnaryOperator	&		10997485	0					
ANR	10997707	Identifier	CIEdict1		10997485	1					
ANR	10997708	Argument	& CIEdict2		10997485	2					
ANR	10997709	UnaryOperationExpression	& CIEdict2		10997485	0					
ANR	10997710	UnaryOperator	&		10997485	0					
ANR	10997711	Identifier	CIEdict2		10997485	1					
ANR	10997712	Argument	"( char * ) ""DecodeLMN"""		10997485	3					
ANR	10997713	CastExpression	"( char * ) ""DecodeLMN"""		10997485	0					
ANR	10997714	CastTarget	char *		10997485	0					
ANR	10997715	PrimaryExpression	"""DecodeLMN"""		10997485	1					
ANR	10997716	ReturnStatement	return 0 ;	2337:8:74888:74896	10997485	1	True				
ANR	10997717	PrimaryExpression	0		10997485	0					
ANR	10997718	IfStatement	"if ( ! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""MatrixMN"" ) )"		10997485	13					
ANR	10997719	Condition	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""MatrixMN"" )"	2338:8:74906:74971	10997485	0	True				
ANR	10997720	UnaryOperationExpression	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""MatrixMN"" )"		10997485	0					
ANR	10997721	UnaryOperator	!		10997485	0					
ANR	10997722	CallExpression	"comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""MatrixMN"" )"		10997485	1					
ANR	10997723	Callee	comparedictkey		10997485	0					
ANR	10997724	Identifier	comparedictkey		10997485	0					
ANR	10997725	ArgumentList	i_ctx_p		10997485	1					
ANR	10997726	Argument	i_ctx_p		10997485	0					
ANR	10997727	Identifier	i_ctx_p		10997485	0					
ANR	10997728	Argument	& CIEdict1		10997485	1					
ANR	10997729	UnaryOperationExpression	& CIEdict1		10997485	0					
ANR	10997730	UnaryOperator	&		10997485	0					
ANR	10997731	Identifier	CIEdict1		10997485	1					
ANR	10997732	Argument	& CIEdict2		10997485	2					
ANR	10997733	UnaryOperationExpression	& CIEdict2		10997485	0					
ANR	10997734	UnaryOperator	&		10997485	0					
ANR	10997735	Identifier	CIEdict2		10997485	1					
ANR	10997736	Argument	"( char * ) ""MatrixMN"""		10997485	3					
ANR	10997737	CastExpression	"( char * ) ""MatrixMN"""		10997485	0					
ANR	10997738	CastTarget	char *		10997485	0					
ANR	10997739	PrimaryExpression	"""MatrixMN"""		10997485	1					
ANR	10997740	ReturnStatement	return 0 ;	2339:8:74982:74990	10997485	1	True				
ANR	10997741	PrimaryExpression	0		10997485	0					
ANR	10997742	ReturnStatement	return 1 ;	2340:4:74996:75004	10997485	14	True				
ANR	10997743	PrimaryExpression	1		10997485	0					
ANR	10997744	ReturnType	static int		10997485	1					
ANR	10997745	Identifier	cieacompareproc		10997485	2					
ANR	10997746	ParameterList	"i_ctx_t * i_ctx_p , ref * space , ref * testspace"		10997485	3					
ANR	10997747	Parameter	i_ctx_t * i_ctx_p	2313:27:73964:73979	10997485	0	True				
ANR	10997748	ParameterType	i_ctx_t *		10997485	0					
ANR	10997749	Identifier	i_ctx_p		10997485	1					
ANR	10997750	Parameter	ref * space	2313:45:73982:73991	10997485	1	True				
ANR	10997751	ParameterType	ref *		10997485	0					
ANR	10997752	Identifier	space		10997485	1					
ANR	10997753	Parameter	ref * testspace	2313:57:73994:74007	10997485	2	True				
ANR	10997754	ParameterType	ref *		10997485	0					
ANR	10997755	Identifier	testspace		10997485	1					
ANR	10997756	CFGEntryNode	ENTRY		10997485		True				
ANR	10997757	CFGExitNode	EXIT		10997485		True				
ANR	10997758	Symbol	code		10997485						
ANR	10997759	Symbol	testspace		10997485						
ANR	10997760	Symbol	i_ctx_p		10997485						
ANR	10997761	Symbol	array_get		10997485						
ANR	10997762	Symbol	CIEdict1		10997485						
ANR	10997763	Symbol	CIEdict2		10997485						
ANR	10997764	Symbol	imemory		10997485						
ANR	10997765	Symbol	comparedictkey		10997485						
ANR	10997766	Symbol	& CIEdict2		10997485						
ANR	10997767	Symbol	& CIEdict1		10997485						
ANR	10997768	Symbol	space		10997485						
ANR	10997769	Function	hashcieabcspace	2344:0:75027:76137							
ANR	10997770	FunctionDef	"hashcieabcspace (i_ctx_t * i_ctx_p , ref * space , gs_md5_state_t * md5)"		10997769	0					
ANR	10997771	CompoundStatement		2345:0:75106:76137	10997769	0					
ANR	10997772	IdentifierDeclStatement	int code = 0 ;	2346:4:75112:75124	10997769	0	True				
ANR	10997773	IdentifierDecl	code = 0		10997769	0					
ANR	10997774	IdentifierDeclType	int		10997769	0					
ANR	10997775	Identifier	code		10997769	1					
ANR	10997776	AssignmentExpression	code = 0		10997769	2		=			
ANR	10997777	Identifier	code		10997769	0					
ANR	10997778	PrimaryExpression	0		10997769	1					
ANR	10997779	IdentifierDeclStatement	"ref CIEdict1 , spacename ;"	2347:4:75130:75153	10997769	1	True				
ANR	10997780	IdentifierDecl	CIEdict1		10997769	0					
ANR	10997781	IdentifierDeclType	ref		10997769	0					
ANR	10997782	Identifier	CIEdict1		10997769	1					
ANR	10997783	IdentifierDecl	spacename		10997769	1					
ANR	10997784	IdentifierDeclType	ref		10997769	0					
ANR	10997785	Identifier	spacename		10997769	1					
ANR	10997786	ExpressionStatement	"code = array_get ( imemory , space , 0 , & spacename )"	2349:4:75160:75207	10997769	2	True				
ANR	10997787	AssignmentExpression	"code = array_get ( imemory , space , 0 , & spacename )"		10997769	0		=			
ANR	10997788	Identifier	code		10997769	0					
ANR	10997789	CallExpression	"array_get ( imemory , space , 0 , & spacename )"		10997769	1					
ANR	10997790	Callee	array_get		10997769	0					
ANR	10997791	Identifier	array_get		10997769	0					
ANR	10997792	ArgumentList	imemory		10997769	1					
ANR	10997793	Argument	imemory		10997769	0					
ANR	10997794	Identifier	imemory		10997769	0					
ANR	10997795	Argument	space		10997769	1					
ANR	10997796	Identifier	space		10997769	0					
ANR	10997797	Argument	0		10997769	2					
ANR	10997798	PrimaryExpression	0		10997769	0					
ANR	10997799	Argument	& spacename		10997769	3					
ANR	10997800	UnaryOperationExpression	& spacename		10997769	0					
ANR	10997801	UnaryOperator	&		10997769	0					
ANR	10997802	Identifier	spacename		10997769	1					
ANR	10997803	IfStatement	if ( code < 0 )		10997769	3					
ANR	10997804	Condition	code < 0	2350:8:75217:75224	10997769	0	True				
ANR	10997805	RelationalExpression	code < 0		10997769	0		<			
ANR	10997806	Identifier	code		10997769	0					
ANR	10997807	PrimaryExpression	0		10997769	1					
ANR	10997808	ReturnStatement	return 0 ;	2351:8:75235:75243	10997769	1	True				
ANR	10997809	PrimaryExpression	0		10997769	0					
ANR	10997810	ExpressionStatement	"gs_md5_append ( md5 , ( const gs_md5_byte_t * ) & spacename . value . pname , sizeof ( spacename . value . pname ) )"	2352:4:75249:75345	10997769	4	True				
ANR	10997811	CallExpression	"gs_md5_append ( md5 , ( const gs_md5_byte_t * ) & spacename . value . pname , sizeof ( spacename . value . pname ) )"		10997769	0					
ANR	10997812	Callee	gs_md5_append		10997769	0					
ANR	10997813	Identifier	gs_md5_append		10997769	0					
ANR	10997814	ArgumentList	md5		10997769	1					
ANR	10997815	Argument	md5		10997769	0					
ANR	10997816	Identifier	md5		10997769	0					
ANR	10997817	Argument	( const gs_md5_byte_t * ) & spacename . value . pname		10997769	1					
ANR	10997818	CastExpression	( const gs_md5_byte_t * ) & spacename . value . pname		10997769	0					
ANR	10997819	CastTarget	const gs_md5_byte_t *		10997769	0					
ANR	10997820	UnaryOperationExpression	& spacename . value . pname		10997769	1					
ANR	10997821	UnaryOperator	&		10997769	0					
ANR	10997822	MemberAccess	spacename . value . pname		10997769	1					
ANR	10997823	MemberAccess	spacename . value		10997769	0					
ANR	10997824	Identifier	spacename		10997769	0					
ANR	10997825	Identifier	value		10997769	1					
ANR	10997826	Identifier	pname		10997769	1					
ANR	10997827	Argument	sizeof ( spacename . value . pname )		10997769	2					
ANR	10997828	SizeofExpression	sizeof ( spacename . value . pname )		10997769	0					
ANR	10997829	Sizeof	sizeof		10997769	0					
ANR	10997830	MemberAccess	spacename . value . pname		10997769	1					
ANR	10997831	MemberAccess	spacename . value		10997769	0					
ANR	10997832	Identifier	spacename		10997769	0					
ANR	10997833	Identifier	value		10997769	1					
ANR	10997834	Identifier	pname		10997769	1					
ANR	10997835	ExpressionStatement	"code = array_get ( imemory , space , 1 , & CIEdict1 )"	2354:4:75352:75398	10997769	5	True				
ANR	10997836	AssignmentExpression	"code = array_get ( imemory , space , 1 , & CIEdict1 )"		10997769	0		=			
ANR	10997837	Identifier	code		10997769	0					
ANR	10997838	CallExpression	"array_get ( imemory , space , 1 , & CIEdict1 )"		10997769	1					
ANR	10997839	Callee	array_get		10997769	0					
ANR	10997840	Identifier	array_get		10997769	0					
ANR	10997841	ArgumentList	imemory		10997769	1					
ANR	10997842	Argument	imemory		10997769	0					
ANR	10997843	Identifier	imemory		10997769	0					
ANR	10997844	Argument	space		10997769	1					
ANR	10997845	Identifier	space		10997769	0					
ANR	10997846	Argument	1		10997769	2					
ANR	10997847	PrimaryExpression	1		10997769	0					
ANR	10997848	Argument	& CIEdict1		10997769	3					
ANR	10997849	UnaryOperationExpression	& CIEdict1		10997769	0					
ANR	10997850	UnaryOperator	&		10997769	0					
ANR	10997851	Identifier	CIEdict1		10997769	1					
ANR	10997852	IfStatement	if ( code < 0 )		10997769	6					
ANR	10997853	Condition	code < 0	2355:8:75408:75415	10997769	0	True				
ANR	10997854	RelationalExpression	code < 0		10997769	0		<			
ANR	10997855	Identifier	code		10997769	0					
ANR	10997856	PrimaryExpression	0		10997769	1					
ANR	10997857	ReturnStatement	return 0 ;	2356:8:75426:75434	10997769	1	True				
ANR	10997858	PrimaryExpression	0		10997769	0					
ANR	10997859	IfStatement	"if ( ! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""WhitePoint"" , md5 ) )"		10997769	7					
ANR	10997860	Condition	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""WhitePoint"" , md5 )"	2357:8:75444:75502	10997769	0	True				
ANR	10997861	UnaryOperationExpression	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""WhitePoint"" , md5 )"		10997769	0					
ANR	10997862	UnaryOperator	!		10997769	0					
ANR	10997863	CallExpression	"hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""WhitePoint"" , md5 )"		10997769	1					
ANR	10997864	Callee	hashdictkey		10997769	0					
ANR	10997865	Identifier	hashdictkey		10997769	0					
ANR	10997866	ArgumentList	i_ctx_p		10997769	1					
ANR	10997867	Argument	i_ctx_p		10997769	0					
ANR	10997868	Identifier	i_ctx_p		10997769	0					
ANR	10997869	Argument	& CIEdict1		10997769	1					
ANR	10997870	UnaryOperationExpression	& CIEdict1		10997769	0					
ANR	10997871	UnaryOperator	&		10997769	0					
ANR	10997872	Identifier	CIEdict1		10997769	1					
ANR	10997873	Argument	"( char * ) ""WhitePoint"""		10997769	2					
ANR	10997874	CastExpression	"( char * ) ""WhitePoint"""		10997769	0					
ANR	10997875	CastTarget	char *		10997769	0					
ANR	10997876	PrimaryExpression	"""WhitePoint"""		10997769	1					
ANR	10997877	Argument	md5		10997769	3					
ANR	10997878	Identifier	md5		10997769	0					
ANR	10997879	ReturnStatement	return 0 ;	2358:8:75513:75521	10997769	1	True				
ANR	10997880	PrimaryExpression	0		10997769	0					
ANR	10997881	IfStatement	"if ( ! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""BlackPoint"" , md5 ) )"		10997769	8					
ANR	10997882	Condition	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""BlackPoint"" , md5 )"	2359:8:75531:75589	10997769	0	True				
ANR	10997883	UnaryOperationExpression	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""BlackPoint"" , md5 )"		10997769	0					
ANR	10997884	UnaryOperator	!		10997769	0					
ANR	10997885	CallExpression	"hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""BlackPoint"" , md5 )"		10997769	1					
ANR	10997886	Callee	hashdictkey		10997769	0					
ANR	10997887	Identifier	hashdictkey		10997769	0					
ANR	10997888	ArgumentList	i_ctx_p		10997769	1					
ANR	10997889	Argument	i_ctx_p		10997769	0					
ANR	10997890	Identifier	i_ctx_p		10997769	0					
ANR	10997891	Argument	& CIEdict1		10997769	1					
ANR	10997892	UnaryOperationExpression	& CIEdict1		10997769	0					
ANR	10997893	UnaryOperator	&		10997769	0					
ANR	10997894	Identifier	CIEdict1		10997769	1					
ANR	10997895	Argument	"( char * ) ""BlackPoint"""		10997769	2					
ANR	10997896	CastExpression	"( char * ) ""BlackPoint"""		10997769	0					
ANR	10997897	CastTarget	char *		10997769	0					
ANR	10997898	PrimaryExpression	"""BlackPoint"""		10997769	1					
ANR	10997899	Argument	md5		10997769	3					
ANR	10997900	Identifier	md5		10997769	0					
ANR	10997901	ReturnStatement	return 0 ;	2360:8:75600:75608	10997769	1	True				
ANR	10997902	PrimaryExpression	0		10997769	0					
ANR	10997903	IfStatement	"if ( ! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""RangeABC"" , md5 ) )"		10997769	9					
ANR	10997904	Condition	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""RangeABC"" , md5 )"	2361:8:75618:75674	10997769	0	True				
ANR	10997905	UnaryOperationExpression	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""RangeABC"" , md5 )"		10997769	0					
ANR	10997906	UnaryOperator	!		10997769	0					
ANR	10997907	CallExpression	"hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""RangeABC"" , md5 )"		10997769	1					
ANR	10997908	Callee	hashdictkey		10997769	0					
ANR	10997909	Identifier	hashdictkey		10997769	0					
ANR	10997910	ArgumentList	i_ctx_p		10997769	1					
ANR	10997911	Argument	i_ctx_p		10997769	0					
ANR	10997912	Identifier	i_ctx_p		10997769	0					
ANR	10997913	Argument	& CIEdict1		10997769	1					
ANR	10997914	UnaryOperationExpression	& CIEdict1		10997769	0					
ANR	10997915	UnaryOperator	&		10997769	0					
ANR	10997916	Identifier	CIEdict1		10997769	1					
ANR	10997917	Argument	"( char * ) ""RangeABC"""		10997769	2					
ANR	10997918	CastExpression	"( char * ) ""RangeABC"""		10997769	0					
ANR	10997919	CastTarget	char *		10997769	0					
ANR	10997920	PrimaryExpression	"""RangeABC"""		10997769	1					
ANR	10997921	Argument	md5		10997769	3					
ANR	10997922	Identifier	md5		10997769	0					
ANR	10997923	ReturnStatement	return 0 ;	2362:8:75685:75693	10997769	1	True				
ANR	10997924	PrimaryExpression	0		10997769	0					
ANR	10997925	IfStatement	"if ( ! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""DecodeABC"" , md5 ) )"		10997769	10					
ANR	10997926	Condition	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""DecodeABC"" , md5 )"	2363:8:75703:75760	10997769	0	True				
ANR	10997927	UnaryOperationExpression	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""DecodeABC"" , md5 )"		10997769	0					
ANR	10997928	UnaryOperator	!		10997769	0					
ANR	10997929	CallExpression	"hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""DecodeABC"" , md5 )"		10997769	1					
ANR	10997930	Callee	hashdictkey		10997769	0					
ANR	10997931	Identifier	hashdictkey		10997769	0					
ANR	10997932	ArgumentList	i_ctx_p		10997769	1					
ANR	10997933	Argument	i_ctx_p		10997769	0					
ANR	10997934	Identifier	i_ctx_p		10997769	0					
ANR	10997935	Argument	& CIEdict1		10997769	1					
ANR	10997936	UnaryOperationExpression	& CIEdict1		10997769	0					
ANR	10997937	UnaryOperator	&		10997769	0					
ANR	10997938	Identifier	CIEdict1		10997769	1					
ANR	10997939	Argument	"( char * ) ""DecodeABC"""		10997769	2					
ANR	10997940	CastExpression	"( char * ) ""DecodeABC"""		10997769	0					
ANR	10997941	CastTarget	char *		10997769	0					
ANR	10997942	PrimaryExpression	"""DecodeABC"""		10997769	1					
ANR	10997943	Argument	md5		10997769	3					
ANR	10997944	Identifier	md5		10997769	0					
ANR	10997945	ReturnStatement	return 0 ;	2364:8:75771:75779	10997769	1	True				
ANR	10997946	PrimaryExpression	0		10997769	0					
ANR	10997947	IfStatement	"if ( ! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""MatrixABC"" , md5 ) )"		10997769	11					
ANR	10997948	Condition	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""MatrixABC"" , md5 )"	2365:8:75789:75846	10997769	0	True				
ANR	10997949	UnaryOperationExpression	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""MatrixABC"" , md5 )"		10997769	0					
ANR	10997950	UnaryOperator	!		10997769	0					
ANR	10997951	CallExpression	"hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""MatrixABC"" , md5 )"		10997769	1					
ANR	10997952	Callee	hashdictkey		10997769	0					
ANR	10997953	Identifier	hashdictkey		10997769	0					
ANR	10997954	ArgumentList	i_ctx_p		10997769	1					
ANR	10997955	Argument	i_ctx_p		10997769	0					
ANR	10997956	Identifier	i_ctx_p		10997769	0					
ANR	10997957	Argument	& CIEdict1		10997769	1					
ANR	10997958	UnaryOperationExpression	& CIEdict1		10997769	0					
ANR	10997959	UnaryOperator	&		10997769	0					
ANR	10997960	Identifier	CIEdict1		10997769	1					
ANR	10997961	Argument	"( char * ) ""MatrixABC"""		10997769	2					
ANR	10997962	CastExpression	"( char * ) ""MatrixABC"""		10997769	0					
ANR	10997963	CastTarget	char *		10997769	0					
ANR	10997964	PrimaryExpression	"""MatrixABC"""		10997769	1					
ANR	10997965	Argument	md5		10997769	3					
ANR	10997966	Identifier	md5		10997769	0					
ANR	10997967	ReturnStatement	return 0 ;	2366:8:75857:75865	10997769	1	True				
ANR	10997968	PrimaryExpression	0		10997769	0					
ANR	10997969	IfStatement	"if ( ! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""RangeLMN"" , md5 ) )"		10997769	12					
ANR	10997970	Condition	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""RangeLMN"" , md5 )"	2367:8:75875:75931	10997769	0	True				
ANR	10997971	UnaryOperationExpression	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""RangeLMN"" , md5 )"		10997769	0					
ANR	10997972	UnaryOperator	!		10997769	0					
ANR	10997973	CallExpression	"hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""RangeLMN"" , md5 )"		10997769	1					
ANR	10997974	Callee	hashdictkey		10997769	0					
ANR	10997975	Identifier	hashdictkey		10997769	0					
ANR	10997976	ArgumentList	i_ctx_p		10997769	1					
ANR	10997977	Argument	i_ctx_p		10997769	0					
ANR	10997978	Identifier	i_ctx_p		10997769	0					
ANR	10997979	Argument	& CIEdict1		10997769	1					
ANR	10997980	UnaryOperationExpression	& CIEdict1		10997769	0					
ANR	10997981	UnaryOperator	&		10997769	0					
ANR	10997982	Identifier	CIEdict1		10997769	1					
ANR	10997983	Argument	"( char * ) ""RangeLMN"""		10997769	2					
ANR	10997984	CastExpression	"( char * ) ""RangeLMN"""		10997769	0					
ANR	10997985	CastTarget	char *		10997769	0					
ANR	10997986	PrimaryExpression	"""RangeLMN"""		10997769	1					
ANR	10997987	Argument	md5		10997769	3					
ANR	10997988	Identifier	md5		10997769	0					
ANR	10997989	ReturnStatement	return 0 ;	2368:8:75942:75950	10997769	1	True				
ANR	10997990	PrimaryExpression	0		10997769	0					
ANR	10997991	IfStatement	"if ( ! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""DecodeLMN"" , md5 ) )"		10997769	13					
ANR	10997992	Condition	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""DecodeLMN"" , md5 )"	2369:8:75960:76017	10997769	0	True				
ANR	10997993	UnaryOperationExpression	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""DecodeLMN"" , md5 )"		10997769	0					
ANR	10997994	UnaryOperator	!		10997769	0					
ANR	10997995	CallExpression	"hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""DecodeLMN"" , md5 )"		10997769	1					
ANR	10997996	Callee	hashdictkey		10997769	0					
ANR	10997997	Identifier	hashdictkey		10997769	0					
ANR	10997998	ArgumentList	i_ctx_p		10997769	1					
ANR	10997999	Argument	i_ctx_p		10997769	0					
ANR	10998000	Identifier	i_ctx_p		10997769	0					
ANR	10998001	Argument	& CIEdict1		10997769	1					
ANR	10998002	UnaryOperationExpression	& CIEdict1		10997769	0					
ANR	10998003	UnaryOperator	&		10997769	0					
ANR	10998004	Identifier	CIEdict1		10997769	1					
ANR	10998005	Argument	"( char * ) ""DecodeLMN"""		10997769	2					
ANR	10998006	CastExpression	"( char * ) ""DecodeLMN"""		10997769	0					
ANR	10998007	CastTarget	char *		10997769	0					
ANR	10998008	PrimaryExpression	"""DecodeLMN"""		10997769	1					
ANR	10998009	Argument	md5		10997769	3					
ANR	10998010	Identifier	md5		10997769	0					
ANR	10998011	ReturnStatement	return 0 ;	2370:8:76028:76036	10997769	1	True				
ANR	10998012	PrimaryExpression	0		10997769	0					
ANR	10998013	IfStatement	"if ( ! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""MatrixMN"" , md5 ) )"		10997769	14					
ANR	10998014	Condition	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""MatrixMN"" , md5 )"	2371:8:76046:76102	10997769	0	True				
ANR	10998015	UnaryOperationExpression	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""MatrixMN"" , md5 )"		10997769	0					
ANR	10998016	UnaryOperator	!		10997769	0					
ANR	10998017	CallExpression	"hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""MatrixMN"" , md5 )"		10997769	1					
ANR	10998018	Callee	hashdictkey		10997769	0					
ANR	10998019	Identifier	hashdictkey		10997769	0					
ANR	10998020	ArgumentList	i_ctx_p		10997769	1					
ANR	10998021	Argument	i_ctx_p		10997769	0					
ANR	10998022	Identifier	i_ctx_p		10997769	0					
ANR	10998023	Argument	& CIEdict1		10997769	1					
ANR	10998024	UnaryOperationExpression	& CIEdict1		10997769	0					
ANR	10998025	UnaryOperator	&		10997769	0					
ANR	10998026	Identifier	CIEdict1		10997769	1					
ANR	10998027	Argument	"( char * ) ""MatrixMN"""		10997769	2					
ANR	10998028	CastExpression	"( char * ) ""MatrixMN"""		10997769	0					
ANR	10998029	CastTarget	char *		10997769	0					
ANR	10998030	PrimaryExpression	"""MatrixMN"""		10997769	1					
ANR	10998031	Argument	md5		10997769	3					
ANR	10998032	Identifier	md5		10997769	0					
ANR	10998033	ReturnStatement	return 0 ;	2372:8:76113:76121	10997769	1	True				
ANR	10998034	PrimaryExpression	0		10997769	0					
ANR	10998035	ReturnStatement	return 1 ;	2373:4:76127:76135	10997769	15	True				
ANR	10998036	PrimaryExpression	1		10997769	0					
ANR	10998037	ReturnType	static int		10997769	1					
ANR	10998038	Identifier	hashcieabcspace		10997769	2					
ANR	10998039	ParameterList	"i_ctx_t * i_ctx_p , ref * space , gs_md5_state_t * md5"		10997769	3					
ANR	10998040	Parameter	i_ctx_t * i_ctx_p	2344:27:75054:75070	10997769	0	True				
ANR	10998041	ParameterType	i_ctx_t *		10997769	0					
ANR	10998042	Identifier	i_ctx_p		10997769	1					
ANR	10998043	Parameter	ref * space	2344:46:75073:75082	10997769	1	True				
ANR	10998044	ParameterType	ref *		10997769	0					
ANR	10998045	Identifier	space		10997769	1					
ANR	10998046	Parameter	gs_md5_state_t * md5	2344:58:75085:75103	10997769	2	True				
ANR	10998047	ParameterType	gs_md5_state_t *		10997769	0					
ANR	10998048	Identifier	md5		10997769	1					
ANR	10998049	CFGEntryNode	ENTRY		10997769		True				
ANR	10998050	CFGExitNode	EXIT		10997769		True				
ANR	10998051	Symbol	spacename		10997769						
ANR	10998052	Symbol	hashdictkey		10997769						
ANR	10998053	Symbol	code		10997769						
ANR	10998054	Symbol	& spacename		10997769						
ANR	10998055	Symbol	array_get		10997769						
ANR	10998056	Symbol	& CIEdict1		10997769						
ANR	10998057	Symbol	space		10997769						
ANR	10998058	Symbol	spacename . value . pname		10997769						
ANR	10998059	Symbol	i_ctx_p		10997769						
ANR	10998060	Symbol	& spacename . value . pname		10997769						
ANR	10998061	Symbol	spacename . value		10997769						
ANR	10998062	Symbol	& spacename . value		10997769						
ANR	10998063	Symbol	CIEdict1		10997769						
ANR	10998064	Symbol	imemory		10997769						
ANR	10998065	Symbol	md5		10997769						
ANR	10998066	Function	setcieabcspace	2376:0:76140:77892							
ANR	10998067	FunctionDef	"setcieabcspace (i_ctx_t * i_ctx_p , ref * r , int * stage , int * cont , int CIESubst)"		10998066	0					
ANR	10998068	CompoundStatement		2377:0:76230:77892	10998066	0					
ANR	10998069	IdentifierDeclStatement	int code = 0 ;	2378:4:76236:76248	10998066	0	True				
ANR	10998070	IdentifierDecl	code = 0		10998066	0					
ANR	10998071	IdentifierDeclType	int		10998066	0					
ANR	10998072	Identifier	code		10998066	1					
ANR	10998073	AssignmentExpression	code = 0		10998066	2		=			
ANR	10998074	Identifier	code		10998066	0					
ANR	10998075	PrimaryExpression	0		10998066	1					
ANR	10998076	IdentifierDeclStatement	"ref CIEDict , * nocie ;"	2379:4:76254:76273	10998066	1	True				
ANR	10998077	IdentifierDecl	CIEDict		10998066	0					
ANR	10998078	IdentifierDeclType	ref		10998066	0					
ANR	10998079	Identifier	CIEDict		10998066	1					
ANR	10998080	IdentifierDecl	* nocie		10998066	1					
ANR	10998081	IdentifierDeclType	ref *		10998066	0					
ANR	10998082	Identifier	nocie		10998066	1					
ANR	10998083	IdentifierDeclStatement	ulong dictkey ;	2380:4:76279:76292	10998066	2	True				
ANR	10998084	IdentifierDecl	dictkey		10998066	0					
ANR	10998085	IdentifierDeclType	ulong		10998066	0					
ANR	10998086	Identifier	dictkey		10998066	1					
ANR	10998087	IdentifierDeclStatement	gs_md5_state_t md5 ;	2381:4:76298:76316	10998066	3	True				
ANR	10998088	IdentifierDecl	md5		10998066	0					
ANR	10998089	IdentifierDeclType	gs_md5_state_t		10998066	0					
ANR	10998090	Identifier	md5		10998066	1					
ANR	10998091	IdentifierDeclStatement	byte key [ 16 ] ;	2382:4:76322:76334	10998066	4	True				
ANR	10998092	IdentifierDecl	key [ 16 ]		10998066	0					
ANR	10998093	IdentifierDeclType	byte [ 16 ]		10998066	0					
ANR	10998094	Identifier	key		10998066	1					
ANR	10998095	PrimaryExpression	16		10998066	2					
ANR	10998096	IfStatement	if ( i_ctx_p -> language_level < 2 )		10998066	5					
ANR	10998097	Condition	i_ctx_p -> language_level < 2	2384:8:76345:76371	10998066	0	True				
ANR	10998098	RelationalExpression	i_ctx_p -> language_level < 2		10998066	0		<			
ANR	10998099	PtrMemberAccess	i_ctx_p -> language_level		10998066	0					
ANR	10998100	Identifier	i_ctx_p		10998066	0					
ANR	10998101	Identifier	language_level		10998066	1					
ANR	10998102	PrimaryExpression	2		10998066	1					
ANR	10998103	ExpressionStatement	return_error ( gs_error_undefined )	2385:8:76382:76414	10998066	1	True				
ANR	10998104	CallExpression	return_error ( gs_error_undefined )		10998066	0					
ANR	10998105	Callee	return_error		10998066	0					
ANR	10998106	Identifier	return_error		10998066	0					
ANR	10998107	ArgumentList	gs_error_undefined		10998066	1					
ANR	10998108	Argument	gs_error_undefined		10998066	0					
ANR	10998109	Identifier	gs_error_undefined		10998066	0					
ANR	10998110	ExpressionStatement	"code = dict_find_string ( systemdict , ""NOCIE"" , & nocie )"	2387:4:76421:76473	10998066	6	True				
ANR	10998111	AssignmentExpression	"code = dict_find_string ( systemdict , ""NOCIE"" , & nocie )"		10998066	0		=			
ANR	10998112	Identifier	code		10998066	0					
ANR	10998113	CallExpression	"dict_find_string ( systemdict , ""NOCIE"" , & nocie )"		10998066	1					
ANR	10998114	Callee	dict_find_string		10998066	0					
ANR	10998115	Identifier	dict_find_string		10998066	0					
ANR	10998116	ArgumentList	systemdict		10998066	1					
ANR	10998117	Argument	systemdict		10998066	0					
ANR	10998118	Identifier	systemdict		10998066	0					
ANR	10998119	Argument	"""NOCIE"""		10998066	1					
ANR	10998120	PrimaryExpression	"""NOCIE"""		10998066	0					
ANR	10998121	Argument	& nocie		10998066	2					
ANR	10998122	UnaryOperationExpression	& nocie		10998066	0					
ANR	10998123	UnaryOperator	&		10998066	0					
ANR	10998124	Identifier	nocie		10998066	1					
ANR	10998125	IfStatement	if ( code > 0 )		10998066	7					
ANR	10998126	Condition	code > 0	2388:8:76483:76490	10998066	0	True				
ANR	10998127	RelationalExpression	code > 0		10998066	0		>			
ANR	10998128	Identifier	code		10998066	0					
ANR	10998129	PrimaryExpression	0		10998066	1					
ANR	10998130	CompoundStatement		12:18:262:262	10998066	1					
ANR	10998131	IfStatement	"if ( ! r_has_type ( nocie , t_boolean ) )"		10998066	0					
ANR	10998132	Condition	"! r_has_type ( nocie , t_boolean )"	2389:12:76507:76535	10998066	0	True				
ANR	10998133	UnaryOperationExpression	"! r_has_type ( nocie , t_boolean )"		10998066	0					
ANR	10998134	UnaryOperator	!		10998066	0					
ANR	10998135	CallExpression	"r_has_type ( nocie , t_boolean )"		10998066	1					
ANR	10998136	Callee	r_has_type		10998066	0					
ANR	10998137	Identifier	r_has_type		10998066	0					
ANR	10998138	ArgumentList	nocie		10998066	1					
ANR	10998139	Argument	nocie		10998066	0					
ANR	10998140	Identifier	nocie		10998066	0					
ANR	10998141	Argument	t_boolean		10998066	1					
ANR	10998142	Identifier	t_boolean		10998066	0					
ANR	10998143	ExpressionStatement	return_error ( gs_error_typecheck )	2390:12:76550:76582	10998066	1	True				
ANR	10998144	CallExpression	return_error ( gs_error_typecheck )		10998066	0					
ANR	10998145	Callee	return_error		10998066	0					
ANR	10998146	Identifier	return_error		10998066	0					
ANR	10998147	ArgumentList	gs_error_typecheck		10998066	1					
ANR	10998148	Argument	gs_error_typecheck		10998066	0					
ANR	10998149	Identifier	gs_error_typecheck		10998066	0					
ANR	10998150	IfStatement	if ( nocie -> value . boolval )		10998066	1					
ANR	10998151	Condition	nocie -> value . boolval	2391:12:76596:76615	10998066	0	True				
ANR	10998152	MemberAccess	nocie -> value . boolval		10998066	0					
ANR	10998153	PtrMemberAccess	nocie -> value		10998066	0					
ANR	10998154	Identifier	nocie		10998066	0					
ANR	10998155	Identifier	value		10998066	1					
ANR	10998156	Identifier	boolval		10998066	1					
ANR	10998157	ReturnStatement	"return setrgbspace ( i_ctx_p , r , stage , cont , 1 ) ;"	2392:12:76630:76676	10998066	1	True				
ANR	10998158	CallExpression	"setrgbspace ( i_ctx_p , r , stage , cont , 1 )"		10998066	0					
ANR	10998159	Callee	setrgbspace		10998066	0					
ANR	10998160	Identifier	setrgbspace		10998066	0					
ANR	10998161	ArgumentList	i_ctx_p		10998066	1					
ANR	10998162	Argument	i_ctx_p		10998066	0					
ANR	10998163	Identifier	i_ctx_p		10998066	0					
ANR	10998164	Argument	r		10998066	1					
ANR	10998165	Identifier	r		10998066	0					
ANR	10998166	Argument	stage		10998066	2					
ANR	10998167	Identifier	stage		10998066	0					
ANR	10998168	Argument	cont		10998066	3					
ANR	10998169	Identifier	cont		10998066	0					
ANR	10998170	Argument	1		10998066	4					
ANR	10998171	PrimaryExpression	1		10998066	0					
ANR	10998172	ExpressionStatement	* cont = 0	2395:4:76689:76698	10998066	8	True				
ANR	10998173	AssignmentExpression	* cont = 0		10998066	0		=			
ANR	10998174	UnaryOperationExpression	* cont		10998066	0					
ANR	10998175	UnaryOperator	*		10998066	0					
ANR	10998176	Identifier	cont		10998066	1					
ANR	10998177	PrimaryExpression	0		10998066	1					
ANR	10998178	ExpressionStatement	"code = array_get ( imemory , r , 1 , & CIEDict )"	2396:4:76704:76745	10998066	9	True				
ANR	10998179	AssignmentExpression	"code = array_get ( imemory , r , 1 , & CIEDict )"		10998066	0		=			
ANR	10998180	Identifier	code		10998066	0					
ANR	10998181	CallExpression	"array_get ( imemory , r , 1 , & CIEDict )"		10998066	1					
ANR	10998182	Callee	array_get		10998066	0					
ANR	10998183	Identifier	array_get		10998066	0					
ANR	10998184	ArgumentList	imemory		10998066	1					
ANR	10998185	Argument	imemory		10998066	0					
ANR	10998186	Identifier	imemory		10998066	0					
ANR	10998187	Argument	r		10998066	1					
ANR	10998188	Identifier	r		10998066	0					
ANR	10998189	Argument	1		10998066	2					
ANR	10998190	PrimaryExpression	1		10998066	0					
ANR	10998191	Argument	& CIEDict		10998066	3					
ANR	10998192	UnaryOperationExpression	& CIEDict		10998066	0					
ANR	10998193	UnaryOperator	&		10998066	0					
ANR	10998194	Identifier	CIEDict		10998066	1					
ANR	10998195	IfStatement	if ( code < 0 )		10998066	10					
ANR	10998196	Condition	code < 0	2397:8:76755:76762	10998066	0	True				
ANR	10998197	RelationalExpression	code < 0		10998066	0		<			
ANR	10998198	Identifier	code		10998066	0					
ANR	10998199	PrimaryExpression	0		10998066	1					
ANR	10998200	ReturnStatement	return code ;	2398:8:76773:76784	10998066	1	True				
ANR	10998201	Identifier	code		10998066	0					
ANR	10998202	IfStatement	if ( ( * stage ) > 0 )		10998066	11					
ANR	10998203	Condition	( * stage ) > 0	2400:8:76795:76806	10998066	0	True				
ANR	10998204	RelationalExpression	( * stage ) > 0		10998066	0		>			
ANR	10998205	UnaryOperationExpression	* stage		10998066	0					
ANR	10998206	UnaryOperator	*		10998066	0					
ANR	10998207	Identifier	stage		10998066	1					
ANR	10998208	PrimaryExpression	0		10998066	1					
ANR	10998209	CompoundStatement		26:8:616:621	10998066	1					
ANR	10998210	IdentifierDeclStatement	gs_client_color cc ;	2401:8:76819:76837	10998066	0	True				
ANR	10998211	IdentifierDecl	cc		10998066	0					
ANR	10998212	IdentifierDeclType	gs_client_color		10998066	0					
ANR	10998213	Identifier	cc		10998066	1					
ANR	10998214	IdentifierDeclStatement	int i ;	2402:8:76847:76852	10998066	1	True				
ANR	10998215	IdentifierDecl	i		10998066	0					
ANR	10998216	IdentifierDeclType	int		10998066	0					
ANR	10998217	Identifier	i		10998066	1					
ANR	10998218	ExpressionStatement	cc . pattern = 0x00	2404:8:76863:76880	10998066	2	True				
ANR	10998219	AssignmentExpression	cc . pattern = 0x00		10998066	0		=			
ANR	10998220	MemberAccess	cc . pattern		10998066	0					
ANR	10998221	Identifier	cc		10998066	0					
ANR	10998222	Identifier	pattern		10998066	1					
ANR	10998223	PrimaryExpression	0x00		10998066	1					
ANR	10998224	ForStatement	for ( i = 0 ; i < 3 ; i ++ )		10998066	3					
ANR	10998225	ForInit	i = 0 ;	2405:13:76895:76898	10998066	0	True				
ANR	10998226	AssignmentExpression	i = 0		10998066	0		=			
ANR	10998227	Identifier	i		10998066	0					
ANR	10998228	PrimaryExpression	0		10998066	1					
ANR	10998229	Condition	i < 3	2405:17:76899:76901	10998066	1	True				
ANR	10998230	RelationalExpression	i < 3		10998066	0		<			
ANR	10998231	Identifier	i		10998066	0					
ANR	10998232	PrimaryExpression	3		10998066	1					
ANR	10998233	PostIncDecOperationExpression	i ++	2405:21:76903:76905	10998066	2	True				
ANR	10998234	Identifier	i		10998066	0					
ANR	10998235	IncDec	++		10998066	1					
ANR	10998236	ExpressionStatement	cc . paint . values [ i ] = 0	2406:12:76920:76942	10998066	3	True				
ANR	10998237	AssignmentExpression	cc . paint . values [ i ] = 0		10998066	0		=			
ANR	10998238	ArrayIndexing	cc . paint . values [ i ]		10998066	0					
ANR	10998239	MemberAccess	cc . paint . values		10998066	0					
ANR	10998240	MemberAccess	cc . paint		10998066	0					
ANR	10998241	Identifier	cc		10998066	0					
ANR	10998242	Identifier	paint		10998066	1					
ANR	10998243	Identifier	values		10998066	1					
ANR	10998244	Identifier	i		10998066	1					
ANR	10998245	PrimaryExpression	0		10998066	1					
ANR	10998246	ExpressionStatement	"code = gs_setcolor ( igs , & cc )"	2407:8:76952:76980	10998066	4	True				
ANR	10998247	AssignmentExpression	"code = gs_setcolor ( igs , & cc )"		10998066	0		=			
ANR	10998248	Identifier	code		10998066	0					
ANR	10998249	CallExpression	"gs_setcolor ( igs , & cc )"		10998066	1					
ANR	10998250	Callee	gs_setcolor		10998066	0					
ANR	10998251	Identifier	gs_setcolor		10998066	0					
ANR	10998252	ArgumentList	igs		10998066	1					
ANR	10998253	Argument	igs		10998066	0					
ANR	10998254	Identifier	igs		10998066	0					
ANR	10998255	Argument	& cc		10998066	1					
ANR	10998256	UnaryOperationExpression	& cc		10998066	0					
ANR	10998257	UnaryOperator	&		10998066	0					
ANR	10998258	Identifier	cc		10998066	1					
ANR	10998259	ExpressionStatement	* stage = 0	2408:8:76990:77000	10998066	5	True				
ANR	10998260	AssignmentExpression	* stage = 0		10998066	0		=			
ANR	10998261	UnaryOperationExpression	* stage		10998066	0					
ANR	10998262	UnaryOperator	*		10998066	0					
ANR	10998263	Identifier	stage		10998066	1					
ANR	10998264	PrimaryExpression	0		10998066	1					
ANR	10998265	ReturnStatement	return code ;	2409:8:77010:77021	10998066	6	True				
ANR	10998266	Identifier	code		10998066	0					
ANR	10998267	ExpressionStatement	gs_md5_init ( & md5 )	2411:4:77033:77050	10998066	12	True				
ANR	10998268	CallExpression	gs_md5_init ( & md5 )		10998066	0					
ANR	10998269	Callee	gs_md5_init		10998066	0					
ANR	10998270	Identifier	gs_md5_init		10998066	0					
ANR	10998271	ArgumentList	& md5		10998066	1					
ANR	10998272	Argument	& md5		10998066	0					
ANR	10998273	UnaryOperationExpression	& md5		10998066	0					
ANR	10998274	UnaryOperator	&		10998066	0					
ANR	10998275	Identifier	md5		10998066	1					
ANR	10998276	ExpressionStatement	dictkey = 0	2416:4:77241:77252	10998066	13	True				
ANR	10998277	AssignmentExpression	dictkey = 0		10998066	0		=			
ANR	10998278	Identifier	dictkey		10998066	0					
ANR	10998279	PrimaryExpression	0		10998066	1					
ANR	10998280	IfStatement	"if ( hashcieabcspace ( i_ctx_p , r , & md5 ) )"		10998066	14					
ANR	10998281	Condition	"hashcieabcspace ( i_ctx_p , r , & md5 )"	2417:8:77262:77294	10998066	0	True				
ANR	10998282	CallExpression	"hashcieabcspace ( i_ctx_p , r , & md5 )"		10998066	0					
ANR	10998283	Callee	hashcieabcspace		10998066	0					
ANR	10998284	Identifier	hashcieabcspace		10998066	0					
ANR	10998285	ArgumentList	i_ctx_p		10998066	1					
ANR	10998286	Argument	i_ctx_p		10998066	0					
ANR	10998287	Identifier	i_ctx_p		10998066	0					
ANR	10998288	Argument	r		10998066	1					
ANR	10998289	Identifier	r		10998066	0					
ANR	10998290	Argument	& md5		10998066	2					
ANR	10998291	UnaryOperationExpression	& md5		10998066	0					
ANR	10998292	UnaryOperator	&		10998066	0					
ANR	10998293	Identifier	md5		10998066	1					
ANR	10998294	CompoundStatement		41:43:1066:1066	10998066	1					
ANR	10998295	ExpressionStatement	"gs_md5_finish ( & md5 , key )"	2424:8:77651:77675	10998066	0	True				
ANR	10998296	CallExpression	"gs_md5_finish ( & md5 , key )"		10998066	0					
ANR	10998297	Callee	gs_md5_finish		10998066	0					
ANR	10998298	Identifier	gs_md5_finish		10998066	0					
ANR	10998299	ArgumentList	& md5		10998066	1					
ANR	10998300	Argument	& md5		10998066	0					
ANR	10998301	UnaryOperationExpression	& md5		10998066	0					
ANR	10998302	UnaryOperator	&		10998066	0					
ANR	10998303	Identifier	md5		10998066	1					
ANR	10998304	Argument	key		10998066	1					
ANR	10998305	Identifier	key		10998066	0					
ANR	10998306	ExpressionStatement	dictkey = * ( ulong * ) & key [ sizeof ( key ) - sizeof ( ulong ) ]	2425:8:77685:77738	10998066	1	True				
ANR	10998307	AssignmentExpression	dictkey = * ( ulong * ) & key [ sizeof ( key ) - sizeof ( ulong ) ]		10998066	0		=			
ANR	10998308	Identifier	dictkey		10998066	0					
ANR	10998309	UnaryOperationExpression	* ( ulong * ) & key [ sizeof ( key ) - sizeof ( ulong ) ]		10998066	1					
ANR	10998310	UnaryOperator	*		10998066	0					
ANR	10998311	CastExpression	( ulong * ) & key [ sizeof ( key ) - sizeof ( ulong ) ]		10998066	1					
ANR	10998312	CastTarget	ulong *		10998066	0					
ANR	10998313	UnaryOperationExpression	& key [ sizeof ( key ) - sizeof ( ulong ) ]		10998066	1					
ANR	10998314	UnaryOperator	&		10998066	0					
ANR	10998315	ArrayIndexing	key [ sizeof ( key ) - sizeof ( ulong ) ]		10998066	1					
ANR	10998316	Identifier	key		10998066	0					
ANR	10998317	AdditiveExpression	sizeof ( key ) - sizeof ( ulong )		10998066	1		-			
ANR	10998318	SizeofExpression	sizeof ( key )		10998066	0					
ANR	10998319	Sizeof	sizeof		10998066	0					
ANR	10998320	SizeofOperand	key		10998066	1					
ANR	10998321	SizeofExpression	sizeof ( ulong )		10998066	1					
ANR	10998322	Sizeof	sizeof		10998066	0					
ANR	10998323	SizeofOperand	ulong		10998066	1					
ANR	10998324	ElseStatement	else		10998066	0					
ANR	10998325	CompoundStatement		50:11:1520:1520	10998066	0					
ANR	10998326	ExpressionStatement	"gs_md5_finish ( & md5 , key )"	2427:8:77761:77785	10998066	0	True				
ANR	10998327	CallExpression	"gs_md5_finish ( & md5 , key )"		10998066	0					
ANR	10998328	Callee	gs_md5_finish		10998066	0					
ANR	10998329	Identifier	gs_md5_finish		10998066	0					
ANR	10998330	ArgumentList	& md5		10998066	1					
ANR	10998331	Argument	& md5		10998066	0					
ANR	10998332	UnaryOperationExpression	& md5		10998066	0					
ANR	10998333	UnaryOperator	&		10998066	0					
ANR	10998334	Identifier	md5		10998066	1					
ANR	10998335	Argument	key		10998066	1					
ANR	10998336	Identifier	key		10998066	0					
ANR	10998337	ExpressionStatement	"code = cieabcspace ( i_ctx_p , & CIEDict , dictkey )"	2429:4:77797:77842	10998066	15	True				
ANR	10998338	AssignmentExpression	"code = cieabcspace ( i_ctx_p , & CIEDict , dictkey )"		10998066	0		=			
ANR	10998339	Identifier	code		10998066	0					
ANR	10998340	CallExpression	"cieabcspace ( i_ctx_p , & CIEDict , dictkey )"		10998066	1					
ANR	10998341	Callee	cieabcspace		10998066	0					
ANR	10998342	Identifier	cieabcspace		10998066	0					
ANR	10998343	ArgumentList	i_ctx_p		10998066	1					
ANR	10998344	Argument	i_ctx_p		10998066	0					
ANR	10998345	Identifier	i_ctx_p		10998066	0					
ANR	10998346	Argument	& CIEDict		10998066	1					
ANR	10998347	UnaryOperationExpression	& CIEDict		10998066	0					
ANR	10998348	UnaryOperator	&		10998066	0					
ANR	10998349	Identifier	CIEDict		10998066	1					
ANR	10998350	Argument	dictkey		10998066	2					
ANR	10998351	Identifier	dictkey		10998066	0					
ANR	10998352	ExpressionStatement	* cont = 1	2430:4:77848:77857	10998066	16	True				
ANR	10998353	AssignmentExpression	* cont = 1		10998066	0		=			
ANR	10998354	UnaryOperationExpression	* cont		10998066	0					
ANR	10998355	UnaryOperator	*		10998066	0					
ANR	10998356	Identifier	cont		10998066	1					
ANR	10998357	PrimaryExpression	1		10998066	1					
ANR	10998358	ExpressionStatement	( * stage ) ++	2431:4:77863:77873	10998066	17	True				
ANR	10998359	PostIncDecOperationExpression	( * stage ) ++		10998066	0					
ANR	10998360	UnaryOperationExpression	* stage		10998066	0					
ANR	10998361	UnaryOperator	*		10998066	0					
ANR	10998362	Identifier	stage		10998066	1					
ANR	10998363	IncDec	++		10998066	1					
ANR	10998364	ReturnStatement	return code ;	2432:4:77879:77890	10998066	18	True				
ANR	10998365	Identifier	code		10998066	0					
ANR	10998366	ReturnType	static int		10998066	1					
ANR	10998367	Identifier	setcieabcspace		10998066	2					
ANR	10998368	ParameterList	"i_ctx_t * i_ctx_p , ref * r , int * stage , int * cont , int CIESubst"		10998066	3					
ANR	10998369	Parameter	i_ctx_t * i_ctx_p	2376:26:76166:76182	10998066	0	True				
ANR	10998370	ParameterType	i_ctx_t *		10998066	0					
ANR	10998371	Identifier	i_ctx_p		10998066	1					
ANR	10998372	Parameter	ref * r	2376:45:76185:76190	10998066	1	True				
ANR	10998373	ParameterType	ref *		10998066	0					
ANR	10998374	Identifier	r		10998066	1					
ANR	10998375	Parameter	int * stage	2376:53:76193:76202	10998066	2	True				
ANR	10998376	ParameterType	int *		10998066	0					
ANR	10998377	Identifier	stage		10998066	1					
ANR	10998378	Parameter	int * cont	2376:65:76205:76213	10998066	3	True				
ANR	10998379	ParameterType	int *		10998066	0					
ANR	10998380	Identifier	cont		10998066	1					
ANR	10998381	Parameter	int CIESubst	2376:76:76216:76227	10998066	4	True				
ANR	10998382	ParameterType	int		10998066	0					
ANR	10998383	Identifier	CIESubst		10998066	1					
ANR	10998384	CFGEntryNode	ENTRY		10998066		True				
ANR	10998385	CFGExitNode	EXIT		10998066		True				
ANR	10998386	Symbol	cc . pattern		10998066						
ANR	10998387	Symbol	* ( ulong * ) & key [ sizeof ( key ) - sizeof ( ulong ) ]		10998066						
ANR	10998388	Symbol	code		10998066						
ANR	10998389	Symbol	i_ctx_p -> language_level		10998066						
ANR	10998390	Symbol	* cc		10998066						
ANR	10998391	Symbol	nocie -> value		10998066						
ANR	10998392	Symbol	gs_error_undefined		10998066						
ANR	10998393	Symbol	gs_setcolor		10998066						
ANR	10998394	Symbol	* key		10998066						
ANR	10998395	Symbol	* nocie		10998066						
ANR	10998396	Symbol	& cc		10998066						
ANR	10998397	Symbol	nocie -> value . boolval		10998066						
ANR	10998398	Symbol	r_has_type		10998066						
ANR	10998399	Symbol	gs_error_typecheck		10998066						
ANR	10998400	Symbol	igs		10998066						
ANR	10998401	Symbol	* cc . paint . values		10998066						
ANR	10998402	Symbol	* i_ctx_p		10998066						
ANR	10998403	Symbol	setrgbspace		10998066						
ANR	10998404	Symbol	imemory		10998066						
ANR	10998405	Symbol	cont		10998066						
ANR	10998406	Symbol	nocie		10998066						
ANR	10998407	Symbol	CIESubst		10998066						
ANR	10998408	Symbol	key		10998066						
ANR	10998409	Symbol	cieabcspace		10998066						
ANR	10998410	Symbol	cc		10998066						
ANR	10998411	Symbol	* stage		10998066						
ANR	10998412	Symbol	& md5		10998066						
ANR	10998413	Symbol	dict_find_string		10998066						
ANR	10998414	Symbol	hashcieabcspace		10998066						
ANR	10998415	Symbol	array_get		10998066						
ANR	10998416	Symbol	i		10998066						
ANR	10998417	Symbol	dictkey		10998066						
ANR	10998418	Symbol	& nocie		10998066						
ANR	10998419	Symbol	t_boolean		10998066						
ANR	10998420	Symbol	r		10998066						
ANR	10998421	Symbol	* cc . paint		10998066						
ANR	10998422	Symbol	* i		10998066						
ANR	10998423	Symbol	stage		10998066						
ANR	10998424	Symbol	CIEDict		10998066						
ANR	10998425	Symbol	* cont		10998066						
ANR	10998426	Symbol	& CIEDict		10998066						
ANR	10998427	Symbol	i_ctx_p		10998066						
ANR	10998428	Symbol	cc . paint		10998066						
ANR	10998429	Symbol	cc . paint . values		10998066						
ANR	10998430	Symbol	systemdict		10998066						
ANR	10998431	Symbol	md5		10998066						
ANR	10998432	Function	validatecieabcspace	2434:0:77894:80412							
ANR	10998433	FunctionDef	"validatecieabcspace (i_ctx_t * i_ctx_p , ref * * r)"		10998432	0					
ANR	10998434	CompoundStatement		2435:0:77953:80412	10998432	0					
ANR	10998435	IdentifierDeclStatement	"int code = 0 , i ;"	2436:4:77959:77974	10998432	0	True				
ANR	10998436	IdentifierDecl	code = 0		10998432	0					
ANR	10998437	IdentifierDeclType	int		10998432	0					
ANR	10998438	Identifier	code		10998432	1					
ANR	10998439	AssignmentExpression	code = 0		10998432	2		=			
ANR	10998440	Identifier	code		10998432	0					
ANR	10998441	PrimaryExpression	0		10998432	1					
ANR	10998442	IdentifierDecl	i		10998432	1					
ANR	10998443	IdentifierDeclType	int		10998432	0					
ANR	10998444	Identifier	i		10998432	1					
ANR	10998445	IdentifierDeclStatement	float value [ 9 ] ;	2437:4:77980:77994	10998432	1	True				
ANR	10998446	IdentifierDecl	value [ 9 ]		10998432	0					
ANR	10998447	IdentifierDeclType	float [ 9 ]		10998432	0					
ANR	10998448	Identifier	value		10998432	1					
ANR	10998449	PrimaryExpression	9		10998432	2					
ANR	10998450	IdentifierDeclStatement	"ref CIEdict , * CIEspace = * r , * tempref , valref ;"	2438:4:78000:78049	10998432	2	True				
ANR	10998451	IdentifierDecl	CIEdict		10998432	0					
ANR	10998452	IdentifierDeclType	ref		10998432	0					
ANR	10998453	Identifier	CIEdict		10998432	1					
ANR	10998454	IdentifierDecl	* CIEspace = * r		10998432	1					
ANR	10998455	IdentifierDeclType	ref *		10998432	0					
ANR	10998456	Identifier	CIEspace		10998432	1					
ANR	10998457	AssignmentExpression	* CIEspace = * r		10998432	2		=			
ANR	10998458	Identifier	CIEspace		10998432	0					
ANR	10998459	UnaryOperationExpression	* r		10998432	1					
ANR	10998460	UnaryOperator	*		10998432	0					
ANR	10998461	Identifier	r		10998432	1					
ANR	10998462	IdentifierDecl	* tempref		10998432	2					
ANR	10998463	IdentifierDeclType	ref *		10998432	0					
ANR	10998464	Identifier	tempref		10998432	1					
ANR	10998465	IdentifierDecl	valref		10998432	3					
ANR	10998466	IdentifierDeclType	ref		10998432	0					
ANR	10998467	Identifier	valref		10998432	1					
ANR	10998468	IfStatement	if ( ! r_is_array ( CIEspace ) )		10998432	3					
ANR	10998469	Condition	! r_is_array ( CIEspace )	2440:8:78060:78080	10998432	0	True				
ANR	10998470	UnaryOperationExpression	! r_is_array ( CIEspace )		10998432	0					
ANR	10998471	UnaryOperator	!		10998432	0					
ANR	10998472	CallExpression	r_is_array ( CIEspace )		10998432	1					
ANR	10998473	Callee	r_is_array		10998432	0					
ANR	10998474	Identifier	r_is_array		10998432	0					
ANR	10998475	ArgumentList	CIEspace		10998432	1					
ANR	10998476	Argument	CIEspace		10998432	0					
ANR	10998477	Identifier	CIEspace		10998432	0					
ANR	10998478	ExpressionStatement	return_error ( gs_error_typecheck )	2441:8:78091:78123	10998432	1	True				
ANR	10998479	CallExpression	return_error ( gs_error_typecheck )		10998432	0					
ANR	10998480	Callee	return_error		10998432	0					
ANR	10998481	Identifier	return_error		10998432	0					
ANR	10998482	ArgumentList	gs_error_typecheck		10998432	1					
ANR	10998483	Argument	gs_error_typecheck		10998432	0					
ANR	10998484	Identifier	gs_error_typecheck		10998432	0					
ANR	10998485	IfStatement	if ( r_size ( CIEspace ) != 2 )		10998432	4					
ANR	10998486	Condition	r_size ( CIEspace ) != 2	2443:8:78194:78214	10998432	0	True				
ANR	10998487	EqualityExpression	r_size ( CIEspace ) != 2		10998432	0		!=			
ANR	10998488	CallExpression	r_size ( CIEspace )		10998432	0					
ANR	10998489	Callee	r_size		10998432	0					
ANR	10998490	Identifier	r_size		10998432	0					
ANR	10998491	ArgumentList	CIEspace		10998432	1					
ANR	10998492	Argument	CIEspace		10998432	0					
ANR	10998493	Identifier	CIEspace		10998432	0					
ANR	10998494	PrimaryExpression	2		10998432	1					
ANR	10998495	ExpressionStatement	return_error ( gs_error_rangecheck )	2444:8:78225:78258	10998432	1	True				
ANR	10998496	CallExpression	return_error ( gs_error_rangecheck )		10998432	0					
ANR	10998497	Callee	return_error		10998432	0					
ANR	10998498	Identifier	return_error		10998432	0					
ANR	10998499	ArgumentList	gs_error_rangecheck		10998432	1					
ANR	10998500	Argument	gs_error_rangecheck		10998432	0					
ANR	10998501	Identifier	gs_error_rangecheck		10998432	0					
ANR	10998502	ExpressionStatement	"code = array_get ( imemory , CIEspace , 1 , & CIEdict )"	2446:4:78265:78313	10998432	5	True				
ANR	10998503	AssignmentExpression	"code = array_get ( imemory , CIEspace , 1 , & CIEdict )"		10998432	0		=			
ANR	10998504	Identifier	code		10998432	0					
ANR	10998505	CallExpression	"array_get ( imemory , CIEspace , 1 , & CIEdict )"		10998432	1					
ANR	10998506	Callee	array_get		10998432	0					
ANR	10998507	Identifier	array_get		10998432	0					
ANR	10998508	ArgumentList	imemory		10998432	1					
ANR	10998509	Argument	imemory		10998432	0					
ANR	10998510	Identifier	imemory		10998432	0					
ANR	10998511	Argument	CIEspace		10998432	1					
ANR	10998512	Identifier	CIEspace		10998432	0					
ANR	10998513	Argument	1		10998432	2					
ANR	10998514	PrimaryExpression	1		10998432	0					
ANR	10998515	Argument	& CIEdict		10998432	3					
ANR	10998516	UnaryOperationExpression	& CIEdict		10998432	0					
ANR	10998517	UnaryOperator	&		10998432	0					
ANR	10998518	Identifier	CIEdict		10998432	1					
ANR	10998519	IfStatement	if ( code < 0 )		10998432	6					
ANR	10998520	Condition	code < 0	2447:8:78323:78330	10998432	0	True				
ANR	10998521	RelationalExpression	code < 0		10998432	0		<			
ANR	10998522	Identifier	code		10998432	0					
ANR	10998523	PrimaryExpression	0		10998432	1					
ANR	10998524	ReturnStatement	return code ;	2448:8:78341:78352	10998432	1	True				
ANR	10998525	Identifier	code		10998432	0					
ANR	10998526	ExpressionStatement	"check_read_type ( CIEdict , t_dictionary )"	2449:4:78358:78396	10998432	7	True				
ANR	10998527	CallExpression	"check_read_type ( CIEdict , t_dictionary )"		10998432	0					
ANR	10998528	Callee	check_read_type		10998432	0					
ANR	10998529	Identifier	check_read_type		10998432	0					
ANR	10998530	ArgumentList	CIEdict		10998432	1					
ANR	10998531	Argument	CIEdict		10998432	0					
ANR	10998532	Identifier	CIEdict		10998432	0					
ANR	10998533	Argument	t_dictionary		10998432	1					
ANR	10998534	Identifier	t_dictionary		10998432	0					
ANR	10998535	ExpressionStatement	"code = checkWhitePoint ( i_ctx_p , & CIEdict )"	2452:4:78472:78513	10998432	8	True				
ANR	10998536	AssignmentExpression	"code = checkWhitePoint ( i_ctx_p , & CIEdict )"		10998432	0		=			
ANR	10998537	Identifier	code		10998432	0					
ANR	10998538	CallExpression	"checkWhitePoint ( i_ctx_p , & CIEdict )"		10998432	1					
ANR	10998539	Callee	checkWhitePoint		10998432	0					
ANR	10998540	Identifier	checkWhitePoint		10998432	0					
ANR	10998541	ArgumentList	i_ctx_p		10998432	1					
ANR	10998542	Argument	i_ctx_p		10998432	0					
ANR	10998543	Identifier	i_ctx_p		10998432	0					
ANR	10998544	Argument	& CIEdict		10998432	1					
ANR	10998545	UnaryOperationExpression	& CIEdict		10998432	0					
ANR	10998546	UnaryOperator	&		10998432	0					
ANR	10998547	Identifier	CIEdict		10998432	1					
ANR	10998548	IfStatement	if ( code != 0 )		10998432	9					
ANR	10998549	Condition	code != 0	2453:8:78523:78531	10998432	0	True				
ANR	10998550	EqualityExpression	code != 0		10998432	0		!=			
ANR	10998551	Identifier	code		10998432	0					
ANR	10998552	PrimaryExpression	0		10998432	1					
ANR	10998553	ReturnStatement	return code ;	2454:8:78542:78553	10998432	1	True				
ANR	10998554	Identifier	code		10998432	0					
ANR	10998555	ExpressionStatement	"code = dict_find_string ( & CIEdict , ""RangeABC"" , & tempref )"	2459:4:78663:78718	10998432	10	True				
ANR	10998556	AssignmentExpression	"code = dict_find_string ( & CIEdict , ""RangeABC"" , & tempref )"		10998432	0		=			
ANR	10998557	Identifier	code		10998432	0					
ANR	10998558	CallExpression	"dict_find_string ( & CIEdict , ""RangeABC"" , & tempref )"		10998432	1					
ANR	10998559	Callee	dict_find_string		10998432	0					
ANR	10998560	Identifier	dict_find_string		10998432	0					
ANR	10998561	ArgumentList	& CIEdict		10998432	1					
ANR	10998562	Argument	& CIEdict		10998432	0					
ANR	10998563	UnaryOperationExpression	& CIEdict		10998432	0					
ANR	10998564	UnaryOperator	&		10998432	0					
ANR	10998565	Identifier	CIEdict		10998432	1					
ANR	10998566	Argument	"""RangeABC"""		10998432	1					
ANR	10998567	PrimaryExpression	"""RangeABC"""		10998432	0					
ANR	10998568	Argument	& tempref		10998432	2					
ANR	10998569	UnaryOperationExpression	& tempref		10998432	0					
ANR	10998570	UnaryOperator	&		10998432	0					
ANR	10998571	Identifier	tempref		10998432	1					
ANR	10998572	IfStatement	"if ( code > 0 && ! r_has_type ( tempref , t_null ) )"		10998432	11					
ANR	10998573	Condition	"code > 0 && ! r_has_type ( tempref , t_null )"	2460:8:78728:78767	10998432	0	True				
ANR	10998574	AndExpression	"code > 0 && ! r_has_type ( tempref , t_null )"		10998432	0		&&			
ANR	10998575	RelationalExpression	code > 0		10998432	0		>			
ANR	10998576	Identifier	code		10998432	0					
ANR	10998577	PrimaryExpression	0		10998432	1					
ANR	10998578	UnaryOperationExpression	"! r_has_type ( tempref , t_null )"		10998432	1					
ANR	10998579	UnaryOperator	!		10998432	0					
ANR	10998580	CallExpression	"r_has_type ( tempref , t_null )"		10998432	1					
ANR	10998581	Callee	r_has_type		10998432	0					
ANR	10998582	Identifier	r_has_type		10998432	0					
ANR	10998583	ArgumentList	tempref		10998432	1					
ANR	10998584	Argument	tempref		10998432	0					
ANR	10998585	Identifier	tempref		10998432	0					
ANR	10998586	Argument	t_null		10998432	1					
ANR	10998587	Identifier	t_null		10998432	0					
ANR	10998588	CompoundStatement		26:50:816:816	10998432	1					
ANR	10998589	IfStatement	if ( ! r_is_array ( tempref ) )		10998432	0					
ANR	10998590	Condition	! r_is_array ( tempref )	2461:12:78784:78803	10998432	0	True				
ANR	10998591	UnaryOperationExpression	! r_is_array ( tempref )		10998432	0					
ANR	10998592	UnaryOperator	!		10998432	0					
ANR	10998593	CallExpression	r_is_array ( tempref )		10998432	1					
ANR	10998594	Callee	r_is_array		10998432	0					
ANR	10998595	Identifier	r_is_array		10998432	0					
ANR	10998596	ArgumentList	tempref		10998432	1					
ANR	10998597	Argument	tempref		10998432	0					
ANR	10998598	Identifier	tempref		10998432	0					
ANR	10998599	ExpressionStatement	return_error ( gs_error_typecheck )	2462:12:78818:78850	10998432	1	True				
ANR	10998600	CallExpression	return_error ( gs_error_typecheck )		10998432	0					
ANR	10998601	Callee	return_error		10998432	0					
ANR	10998602	Identifier	return_error		10998432	0					
ANR	10998603	ArgumentList	gs_error_typecheck		10998432	1					
ANR	10998604	Argument	gs_error_typecheck		10998432	0					
ANR	10998605	Identifier	gs_error_typecheck		10998432	0					
ANR	10998606	IfStatement	if ( r_size ( tempref ) != 6 )		10998432	1					
ANR	10998607	Condition	r_size ( tempref ) != 6	2463:12:78864:78883	10998432	0	True				
ANR	10998608	EqualityExpression	r_size ( tempref ) != 6		10998432	0		!=			
ANR	10998609	CallExpression	r_size ( tempref )		10998432	0					
ANR	10998610	Callee	r_size		10998432	0					
ANR	10998611	Identifier	r_size		10998432	0					
ANR	10998612	ArgumentList	tempref		10998432	1					
ANR	10998613	Argument	tempref		10998432	0					
ANR	10998614	Identifier	tempref		10998432	0					
ANR	10998615	PrimaryExpression	6		10998432	1					
ANR	10998616	ExpressionStatement	return_error ( gs_error_rangecheck )	2464:12:78898:78931	10998432	1	True				
ANR	10998617	CallExpression	return_error ( gs_error_rangecheck )		10998432	0					
ANR	10998618	Callee	return_error		10998432	0					
ANR	10998619	Identifier	return_error		10998432	0					
ANR	10998620	ArgumentList	gs_error_rangecheck		10998432	1					
ANR	10998621	Argument	gs_error_rangecheck		10998432	0					
ANR	10998622	Identifier	gs_error_rangecheck		10998432	0					
ANR	10998623	ExpressionStatement	"code = get_cie_param_array ( imemory , tempref , 6 , value )"	2465:8:78941:78995	10998432	2	True				
ANR	10998624	AssignmentExpression	"code = get_cie_param_array ( imemory , tempref , 6 , value )"		10998432	0		=			
ANR	10998625	Identifier	code		10998432	0					
ANR	10998626	CallExpression	"get_cie_param_array ( imemory , tempref , 6 , value )"		10998432	1					
ANR	10998627	Callee	get_cie_param_array		10998432	0					
ANR	10998628	Identifier	get_cie_param_array		10998432	0					
ANR	10998629	ArgumentList	imemory		10998432	1					
ANR	10998630	Argument	imemory		10998432	0					
ANR	10998631	Identifier	imemory		10998432	0					
ANR	10998632	Argument	tempref		10998432	1					
ANR	10998633	Identifier	tempref		10998432	0					
ANR	10998634	Argument	6		10998432	2					
ANR	10998635	PrimaryExpression	6		10998432	0					
ANR	10998636	Argument	value		10998432	3					
ANR	10998637	Identifier	value		10998432	0					
ANR	10998638	IfStatement	if ( code < 0 )		10998432	3					
ANR	10998639	Condition	code < 0	2466:12:79009:79016	10998432	0	True				
ANR	10998640	RelationalExpression	code < 0		10998432	0		<			
ANR	10998641	Identifier	code		10998432	0					
ANR	10998642	PrimaryExpression	0		10998432	1					
ANR	10998643	ReturnStatement	return code ;	2467:12:79031:79042	10998432	1	True				
ANR	10998644	Identifier	code		10998432	0					
ANR	10998645	IfStatement	if ( value [ 1 ] < value [ 0 ] || value [ 3 ] < value [ 2 ] || value [ 5 ] < value [ 4 ] )		10998432	4					
ANR	10998646	Condition	value [ 1 ] < value [ 0 ] || value [ 3 ] < value [ 2 ] || value [ 5 ] < value [ 4 ]	2468:12:79056:79120	10998432	0	True				
ANR	10998647	OrExpression	value [ 1 ] < value [ 0 ] || value [ 3 ] < value [ 2 ] || value [ 5 ] < value [ 4 ]		10998432	0		||			
ANR	10998648	RelationalExpression	value [ 1 ] < value [ 0 ]		10998432	0		<			
ANR	10998649	ArrayIndexing	value [ 1 ]		10998432	0					
ANR	10998650	Identifier	value		10998432	0					
ANR	10998651	PrimaryExpression	1		10998432	1					
ANR	10998652	ArrayIndexing	value [ 0 ]		10998432	1					
ANR	10998653	Identifier	value		10998432	0					
ANR	10998654	PrimaryExpression	0		10998432	1					
ANR	10998655	OrExpression	value [ 3 ] < value [ 2 ] || value [ 5 ] < value [ 4 ]		10998432	1		||			
ANR	10998656	RelationalExpression	value [ 3 ] < value [ 2 ]		10998432	0		<			
ANR	10998657	ArrayIndexing	value [ 3 ]		10998432	0					
ANR	10998658	Identifier	value		10998432	0					
ANR	10998659	PrimaryExpression	3		10998432	1					
ANR	10998660	ArrayIndexing	value [ 2 ]		10998432	1					
ANR	10998661	Identifier	value		10998432	0					
ANR	10998662	PrimaryExpression	2		10998432	1					
ANR	10998663	RelationalExpression	value [ 5 ] < value [ 4 ]		10998432	1		<			
ANR	10998664	ArrayIndexing	value [ 5 ]		10998432	0					
ANR	10998665	Identifier	value		10998432	0					
ANR	10998666	PrimaryExpression	5		10998432	1					
ANR	10998667	ArrayIndexing	value [ 4 ]		10998432	1					
ANR	10998668	Identifier	value		10998432	0					
ANR	10998669	PrimaryExpression	4		10998432	1					
ANR	10998670	ExpressionStatement	return_error ( gs_error_rangecheck )	2469:12:79135:79168	10998432	1	True				
ANR	10998671	CallExpression	return_error ( gs_error_rangecheck )		10998432	0					
ANR	10998672	Callee	return_error		10998432	0					
ANR	10998673	Identifier	return_error		10998432	0					
ANR	10998674	ArgumentList	gs_error_rangecheck		10998432	1					
ANR	10998675	Argument	gs_error_rangecheck		10998432	0					
ANR	10998676	Identifier	gs_error_rangecheck		10998432	0					
ANR	10998677	ExpressionStatement	"code = dict_find_string ( & CIEdict , ""DecodeABC"" , & tempref )"	2472:4:79181:79237	10998432	12	True				
ANR	10998678	AssignmentExpression	"code = dict_find_string ( & CIEdict , ""DecodeABC"" , & tempref )"		10998432	0		=			
ANR	10998679	Identifier	code		10998432	0					
ANR	10998680	CallExpression	"dict_find_string ( & CIEdict , ""DecodeABC"" , & tempref )"		10998432	1					
ANR	10998681	Callee	dict_find_string		10998432	0					
ANR	10998682	Identifier	dict_find_string		10998432	0					
ANR	10998683	ArgumentList	& CIEdict		10998432	1					
ANR	10998684	Argument	& CIEdict		10998432	0					
ANR	10998685	UnaryOperationExpression	& CIEdict		10998432	0					
ANR	10998686	UnaryOperator	&		10998432	0					
ANR	10998687	Identifier	CIEdict		10998432	1					
ANR	10998688	Argument	"""DecodeABC"""		10998432	1					
ANR	10998689	PrimaryExpression	"""DecodeABC"""		10998432	0					
ANR	10998690	Argument	& tempref		10998432	2					
ANR	10998691	UnaryOperationExpression	& tempref		10998432	0					
ANR	10998692	UnaryOperator	&		10998432	0					
ANR	10998693	Identifier	tempref		10998432	1					
ANR	10998694	IfStatement	"if ( code > 0 && ! r_has_type ( tempref , t_null ) )"		10998432	13					
ANR	10998695	Condition	"code > 0 && ! r_has_type ( tempref , t_null )"	2473:8:79247:79286	10998432	0	True				
ANR	10998696	AndExpression	"code > 0 && ! r_has_type ( tempref , t_null )"		10998432	0		&&			
ANR	10998697	RelationalExpression	code > 0		10998432	0		>			
ANR	10998698	Identifier	code		10998432	0					
ANR	10998699	PrimaryExpression	0		10998432	1					
ANR	10998700	UnaryOperationExpression	"! r_has_type ( tempref , t_null )"		10998432	1					
ANR	10998701	UnaryOperator	!		10998432	0					
ANR	10998702	CallExpression	"r_has_type ( tempref , t_null )"		10998432	1					
ANR	10998703	Callee	r_has_type		10998432	0					
ANR	10998704	Identifier	r_has_type		10998432	0					
ANR	10998705	ArgumentList	tempref		10998432	1					
ANR	10998706	Argument	tempref		10998432	0					
ANR	10998707	Identifier	tempref		10998432	0					
ANR	10998708	Argument	t_null		10998432	1					
ANR	10998709	Identifier	t_null		10998432	0					
ANR	10998710	CompoundStatement		39:50:1335:1335	10998432	1					
ANR	10998711	IfStatement	if ( ! r_is_array ( tempref ) )		10998432	0					
ANR	10998712	Condition	! r_is_array ( tempref )	2474:12:79303:79322	10998432	0	True				
ANR	10998713	UnaryOperationExpression	! r_is_array ( tempref )		10998432	0					
ANR	10998714	UnaryOperator	!		10998432	0					
ANR	10998715	CallExpression	r_is_array ( tempref )		10998432	1					
ANR	10998716	Callee	r_is_array		10998432	0					
ANR	10998717	Identifier	r_is_array		10998432	0					
ANR	10998718	ArgumentList	tempref		10998432	1					
ANR	10998719	Argument	tempref		10998432	0					
ANR	10998720	Identifier	tempref		10998432	0					
ANR	10998721	ExpressionStatement	return_error ( gs_error_typecheck )	2475:12:79337:79369	10998432	1	True				
ANR	10998722	CallExpression	return_error ( gs_error_typecheck )		10998432	0					
ANR	10998723	Callee	return_error		10998432	0					
ANR	10998724	Identifier	return_error		10998432	0					
ANR	10998725	ArgumentList	gs_error_typecheck		10998432	1					
ANR	10998726	Argument	gs_error_typecheck		10998432	0					
ANR	10998727	Identifier	gs_error_typecheck		10998432	0					
ANR	10998728	IfStatement	if ( r_size ( tempref ) != 3 )		10998432	1					
ANR	10998729	Condition	r_size ( tempref ) != 3	2476:12:79383:79402	10998432	0	True				
ANR	10998730	EqualityExpression	r_size ( tempref ) != 3		10998432	0		!=			
ANR	10998731	CallExpression	r_size ( tempref )		10998432	0					
ANR	10998732	Callee	r_size		10998432	0					
ANR	10998733	Identifier	r_size		10998432	0					
ANR	10998734	ArgumentList	tempref		10998432	1					
ANR	10998735	Argument	tempref		10998432	0					
ANR	10998736	Identifier	tempref		10998432	0					
ANR	10998737	PrimaryExpression	3		10998432	1					
ANR	10998738	ExpressionStatement	return_error ( gs_error_rangecheck )	2477:12:79417:79450	10998432	1	True				
ANR	10998739	CallExpression	return_error ( gs_error_rangecheck )		10998432	0					
ANR	10998740	Callee	return_error		10998432	0					
ANR	10998741	Identifier	return_error		10998432	0					
ANR	10998742	ArgumentList	gs_error_rangecheck		10998432	1					
ANR	10998743	Argument	gs_error_rangecheck		10998432	0					
ANR	10998744	Identifier	gs_error_rangecheck		10998432	0					
ANR	10998745	ForStatement	for ( i = 0 ; i < 3 ; i ++ )		10998432	2					
ANR	10998746	ForInit	i = 0 ;	2479:13:79466:79469	10998432	0	True				
ANR	10998747	AssignmentExpression	i = 0		10998432	0		=			
ANR	10998748	Identifier	i		10998432	0					
ANR	10998749	PrimaryExpression	0		10998432	1					
ANR	10998750	Condition	i < 3	2479:17:79470:79472	10998432	1	True				
ANR	10998751	RelationalExpression	i < 3		10998432	0		<			
ANR	10998752	Identifier	i		10998432	0					
ANR	10998753	PrimaryExpression	3		10998432	1					
ANR	10998754	PostIncDecOperationExpression	i ++	2479:21:79474:79476	10998432	2	True				
ANR	10998755	Identifier	i		10998432	0					
ANR	10998756	IncDec	++		10998432	1					
ANR	10998757	CompoundStatement		45:26:1525:1525	10998432	3					
ANR	10998758	ExpressionStatement	"code = array_get ( imemory , tempref , i , & valref )"	2480:12:79493:79539	10998432	0	True				
ANR	10998759	AssignmentExpression	"code = array_get ( imemory , tempref , i , & valref )"		10998432	0		=			
ANR	10998760	Identifier	code		10998432	0					
ANR	10998761	CallExpression	"array_get ( imemory , tempref , i , & valref )"		10998432	1					
ANR	10998762	Callee	array_get		10998432	0					
ANR	10998763	Identifier	array_get		10998432	0					
ANR	10998764	ArgumentList	imemory		10998432	1					
ANR	10998765	Argument	imemory		10998432	0					
ANR	10998766	Identifier	imemory		10998432	0					
ANR	10998767	Argument	tempref		10998432	1					
ANR	10998768	Identifier	tempref		10998432	0					
ANR	10998769	Argument	i		10998432	2					
ANR	10998770	Identifier	i		10998432	0					
ANR	10998771	Argument	& valref		10998432	3					
ANR	10998772	UnaryOperationExpression	& valref		10998432	0					
ANR	10998773	UnaryOperator	&		10998432	0					
ANR	10998774	Identifier	valref		10998432	1					
ANR	10998775	IfStatement	if ( code < 0 )		10998432	1					
ANR	10998776	Condition	code < 0	2481:16:79557:79564	10998432	0	True				
ANR	10998777	RelationalExpression	code < 0		10998432	0		<			
ANR	10998778	Identifier	code		10998432	0					
ANR	10998779	PrimaryExpression	0		10998432	1					
ANR	10998780	ReturnStatement	return code ;	2482:16:79583:79594	10998432	1	True				
ANR	10998781	Identifier	code		10998432	0					
ANR	10998782	ExpressionStatement	check_proc ( valref )	2483:12:79608:79626	10998432	2	True				
ANR	10998783	CallExpression	check_proc ( valref )		10998432	0					
ANR	10998784	Callee	check_proc		10998432	0					
ANR	10998785	Identifier	check_proc		10998432	0					
ANR	10998786	ArgumentList	valref		10998432	1					
ANR	10998787	Argument	valref		10998432	0					
ANR	10998788	Identifier	valref		10998432	0					
ANR	10998789	ExpressionStatement	"code = dict_find_string ( & CIEdict , ""MatrixABC"" , & tempref )"	2487:4:79649:79705	10998432	14	True				
ANR	10998790	AssignmentExpression	"code = dict_find_string ( & CIEdict , ""MatrixABC"" , & tempref )"		10998432	0		=			
ANR	10998791	Identifier	code		10998432	0					
ANR	10998792	CallExpression	"dict_find_string ( & CIEdict , ""MatrixABC"" , & tempref )"		10998432	1					
ANR	10998793	Callee	dict_find_string		10998432	0					
ANR	10998794	Identifier	dict_find_string		10998432	0					
ANR	10998795	ArgumentList	& CIEdict		10998432	1					
ANR	10998796	Argument	& CIEdict		10998432	0					
ANR	10998797	UnaryOperationExpression	& CIEdict		10998432	0					
ANR	10998798	UnaryOperator	&		10998432	0					
ANR	10998799	Identifier	CIEdict		10998432	1					
ANR	10998800	Argument	"""MatrixABC"""		10998432	1					
ANR	10998801	PrimaryExpression	"""MatrixABC"""		10998432	0					
ANR	10998802	Argument	& tempref		10998432	2					
ANR	10998803	UnaryOperationExpression	& tempref		10998432	0					
ANR	10998804	UnaryOperator	&		10998432	0					
ANR	10998805	Identifier	tempref		10998432	1					
ANR	10998806	IfStatement	"if ( code > 0 && ! r_has_type ( tempref , t_null ) )"		10998432	15					
ANR	10998807	Condition	"code > 0 && ! r_has_type ( tempref , t_null )"	2488:8:79715:79754	10998432	0	True				
ANR	10998808	AndExpression	"code > 0 && ! r_has_type ( tempref , t_null )"		10998432	0		&&			
ANR	10998809	RelationalExpression	code > 0		10998432	0		>			
ANR	10998810	Identifier	code		10998432	0					
ANR	10998811	PrimaryExpression	0		10998432	1					
ANR	10998812	UnaryOperationExpression	"! r_has_type ( tempref , t_null )"		10998432	1					
ANR	10998813	UnaryOperator	!		10998432	0					
ANR	10998814	CallExpression	"r_has_type ( tempref , t_null )"		10998432	1					
ANR	10998815	Callee	r_has_type		10998432	0					
ANR	10998816	Identifier	r_has_type		10998432	0					
ANR	10998817	ArgumentList	tempref		10998432	1					
ANR	10998818	Argument	tempref		10998432	0					
ANR	10998819	Identifier	tempref		10998432	0					
ANR	10998820	Argument	t_null		10998432	1					
ANR	10998821	Identifier	t_null		10998432	0					
ANR	10998822	CompoundStatement		54:50:1803:1803	10998432	1					
ANR	10998823	IfStatement	if ( ! r_is_array ( tempref ) )		10998432	0					
ANR	10998824	Condition	! r_is_array ( tempref )	2489:12:79771:79790	10998432	0	True				
ANR	10998825	UnaryOperationExpression	! r_is_array ( tempref )		10998432	0					
ANR	10998826	UnaryOperator	!		10998432	0					
ANR	10998827	CallExpression	r_is_array ( tempref )		10998432	1					
ANR	10998828	Callee	r_is_array		10998432	0					
ANR	10998829	Identifier	r_is_array		10998432	0					
ANR	10998830	ArgumentList	tempref		10998432	1					
ANR	10998831	Argument	tempref		10998432	0					
ANR	10998832	Identifier	tempref		10998432	0					
ANR	10998833	ExpressionStatement	return_error ( gs_error_typecheck )	2490:12:79805:79837	10998432	1	True				
ANR	10998834	CallExpression	return_error ( gs_error_typecheck )		10998432	0					
ANR	10998835	Callee	return_error		10998432	0					
ANR	10998836	Identifier	return_error		10998432	0					
ANR	10998837	ArgumentList	gs_error_typecheck		10998432	1					
ANR	10998838	Argument	gs_error_typecheck		10998432	0					
ANR	10998839	Identifier	gs_error_typecheck		10998432	0					
ANR	10998840	IfStatement	if ( r_size ( tempref ) != 9 )		10998432	1					
ANR	10998841	Condition	r_size ( tempref ) != 9	2491:12:79851:79870	10998432	0	True				
ANR	10998842	EqualityExpression	r_size ( tempref ) != 9		10998432	0		!=			
ANR	10998843	CallExpression	r_size ( tempref )		10998432	0					
ANR	10998844	Callee	r_size		10998432	0					
ANR	10998845	Identifier	r_size		10998432	0					
ANR	10998846	ArgumentList	tempref		10998432	1					
ANR	10998847	Argument	tempref		10998432	0					
ANR	10998848	Identifier	tempref		10998432	0					
ANR	10998849	PrimaryExpression	9		10998432	1					
ANR	10998850	ExpressionStatement	return_error ( gs_error_rangecheck )	2492:12:79885:79918	10998432	1	True				
ANR	10998851	CallExpression	return_error ( gs_error_rangecheck )		10998432	0					
ANR	10998852	Callee	return_error		10998432	0					
ANR	10998853	Identifier	return_error		10998432	0					
ANR	10998854	ArgumentList	gs_error_rangecheck		10998432	1					
ANR	10998855	Argument	gs_error_rangecheck		10998432	0					
ANR	10998856	Identifier	gs_error_rangecheck		10998432	0					
ANR	10998857	ExpressionStatement	"code = get_cie_param_array ( imemory , tempref , 9 , value )"	2493:8:79928:79982	10998432	2	True				
ANR	10998858	AssignmentExpression	"code = get_cie_param_array ( imemory , tempref , 9 , value )"		10998432	0		=			
ANR	10998859	Identifier	code		10998432	0					
ANR	10998860	CallExpression	"get_cie_param_array ( imemory , tempref , 9 , value )"		10998432	1					
ANR	10998861	Callee	get_cie_param_array		10998432	0					
ANR	10998862	Identifier	get_cie_param_array		10998432	0					
ANR	10998863	ArgumentList	imemory		10998432	1					
ANR	10998864	Argument	imemory		10998432	0					
ANR	10998865	Identifier	imemory		10998432	0					
ANR	10998866	Argument	tempref		10998432	1					
ANR	10998867	Identifier	tempref		10998432	0					
ANR	10998868	Argument	9		10998432	2					
ANR	10998869	PrimaryExpression	9		10998432	0					
ANR	10998870	Argument	value		10998432	3					
ANR	10998871	Identifier	value		10998432	0					
ANR	10998872	IfStatement	if ( code < 0 )		10998432	3					
ANR	10998873	Condition	code < 0	2494:12:79996:80003	10998432	0	True				
ANR	10998874	RelationalExpression	code < 0		10998432	0		<			
ANR	10998875	Identifier	code		10998432	0					
ANR	10998876	PrimaryExpression	0		10998432	1					
ANR	10998877	ReturnStatement	return code ;	2495:12:80018:80029	10998432	1	True				
ANR	10998878	Identifier	code		10998432	0					
ANR	10998879	ExpressionStatement	"code = checkRangeLMN ( i_ctx_p , & CIEdict )"	2498:4:80042:80081	10998432	16	True				
ANR	10998880	AssignmentExpression	"code = checkRangeLMN ( i_ctx_p , & CIEdict )"		10998432	0		=			
ANR	10998881	Identifier	code		10998432	0					
ANR	10998882	CallExpression	"checkRangeLMN ( i_ctx_p , & CIEdict )"		10998432	1					
ANR	10998883	Callee	checkRangeLMN		10998432	0					
ANR	10998884	Identifier	checkRangeLMN		10998432	0					
ANR	10998885	ArgumentList	i_ctx_p		10998432	1					
ANR	10998886	Argument	i_ctx_p		10998432	0					
ANR	10998887	Identifier	i_ctx_p		10998432	0					
ANR	10998888	Argument	& CIEdict		10998432	1					
ANR	10998889	UnaryOperationExpression	& CIEdict		10998432	0					
ANR	10998890	UnaryOperator	&		10998432	0					
ANR	10998891	Identifier	CIEdict		10998432	1					
ANR	10998892	IfStatement	if ( code != 0 )		10998432	17					
ANR	10998893	Condition	code != 0	2499:8:80091:80099	10998432	0	True				
ANR	10998894	EqualityExpression	code != 0		10998432	0		!=			
ANR	10998895	Identifier	code		10998432	0					
ANR	10998896	PrimaryExpression	0		10998432	1					
ANR	10998897	ReturnStatement	return code ;	2500:8:80110:80121	10998432	1	True				
ANR	10998898	Identifier	code		10998432	0					
ANR	10998899	ExpressionStatement	"code = checkDecodeLMN ( i_ctx_p , & CIEdict )"	2502:4:80128:80168	10998432	18	True				
ANR	10998900	AssignmentExpression	"code = checkDecodeLMN ( i_ctx_p , & CIEdict )"		10998432	0		=			
ANR	10998901	Identifier	code		10998432	0					
ANR	10998902	CallExpression	"checkDecodeLMN ( i_ctx_p , & CIEdict )"		10998432	1					
ANR	10998903	Callee	checkDecodeLMN		10998432	0					
ANR	10998904	Identifier	checkDecodeLMN		10998432	0					
ANR	10998905	ArgumentList	i_ctx_p		10998432	1					
ANR	10998906	Argument	i_ctx_p		10998432	0					
ANR	10998907	Identifier	i_ctx_p		10998432	0					
ANR	10998908	Argument	& CIEdict		10998432	1					
ANR	10998909	UnaryOperationExpression	& CIEdict		10998432	0					
ANR	10998910	UnaryOperator	&		10998432	0					
ANR	10998911	Identifier	CIEdict		10998432	1					
ANR	10998912	IfStatement	if ( code != 0 )		10998432	19					
ANR	10998913	Condition	code != 0	2503:8:80178:80186	10998432	0	True				
ANR	10998914	EqualityExpression	code != 0		10998432	0		!=			
ANR	10998915	Identifier	code		10998432	0					
ANR	10998916	PrimaryExpression	0		10998432	1					
ANR	10998917	ReturnStatement	return code ;	2504:8:80197:80208	10998432	1	True				
ANR	10998918	Identifier	code		10998432	0					
ANR	10998919	ExpressionStatement	"code = checkMatrixLMN ( i_ctx_p , & CIEdict )"	2506:4:80215:80255	10998432	20	True				
ANR	10998920	AssignmentExpression	"code = checkMatrixLMN ( i_ctx_p , & CIEdict )"		10998432	0		=			
ANR	10998921	Identifier	code		10998432	0					
ANR	10998922	CallExpression	"checkMatrixLMN ( i_ctx_p , & CIEdict )"		10998432	1					
ANR	10998923	Callee	checkMatrixLMN		10998432	0					
ANR	10998924	Identifier	checkMatrixLMN		10998432	0					
ANR	10998925	ArgumentList	i_ctx_p		10998432	1					
ANR	10998926	Argument	i_ctx_p		10998432	0					
ANR	10998927	Identifier	i_ctx_p		10998432	0					
ANR	10998928	Argument	& CIEdict		10998432	1					
ANR	10998929	UnaryOperationExpression	& CIEdict		10998432	0					
ANR	10998930	UnaryOperator	&		10998432	0					
ANR	10998931	Identifier	CIEdict		10998432	1					
ANR	10998932	IfStatement	if ( code != 0 )		10998432	21					
ANR	10998933	Condition	code != 0	2507:8:80265:80273	10998432	0	True				
ANR	10998934	EqualityExpression	code != 0		10998432	0		!=			
ANR	10998935	Identifier	code		10998432	0					
ANR	10998936	PrimaryExpression	0		10998432	1					
ANR	10998937	ReturnStatement	return code ;	2508:8:80284:80295	10998432	1	True				
ANR	10998938	Identifier	code		10998432	0					
ANR	10998939	ExpressionStatement	"code = checkBlackPoint ( i_ctx_p , & CIEdict )"	2510:4:80302:80343	10998432	22	True				
ANR	10998940	AssignmentExpression	"code = checkBlackPoint ( i_ctx_p , & CIEdict )"		10998432	0		=			
ANR	10998941	Identifier	code		10998432	0					
ANR	10998942	CallExpression	"checkBlackPoint ( i_ctx_p , & CIEdict )"		10998432	1					
ANR	10998943	Callee	checkBlackPoint		10998432	0					
ANR	10998944	Identifier	checkBlackPoint		10998432	0					
ANR	10998945	ArgumentList	i_ctx_p		10998432	1					
ANR	10998946	Argument	i_ctx_p		10998432	0					
ANR	10998947	Identifier	i_ctx_p		10998432	0					
ANR	10998948	Argument	& CIEdict		10998432	1					
ANR	10998949	UnaryOperationExpression	& CIEdict		10998432	0					
ANR	10998950	UnaryOperator	&		10998432	0					
ANR	10998951	Identifier	CIEdict		10998432	1					
ANR	10998952	IfStatement	if ( code != 0 )		10998432	23					
ANR	10998953	Condition	code != 0	2511:8:80353:80361	10998432	0	True				
ANR	10998954	EqualityExpression	code != 0		10998432	0		!=			
ANR	10998955	Identifier	code		10998432	0					
ANR	10998956	PrimaryExpression	0		10998432	1					
ANR	10998957	ReturnStatement	return code ;	2512:8:80372:80383	10998432	1	True				
ANR	10998958	Identifier	code		10998432	0					
ANR	10998959	ExpressionStatement	* r = 0	2514:4:80390:80396	10998432	24	True				
ANR	10998960	AssignmentExpression	* r = 0		10998432	0		=			
ANR	10998961	UnaryOperationExpression	* r		10998432	0					
ANR	10998962	UnaryOperator	*		10998432	0					
ANR	10998963	Identifier	r		10998432	1					
ANR	10998964	PrimaryExpression	0		10998432	1					
ANR	10998965	ReturnStatement	return 0 ;	2515:4:80402:80410	10998432	25	True				
ANR	10998966	PrimaryExpression	0		10998432	0					
ANR	10998967	ReturnType	static int		10998432	1					
ANR	10998968	Identifier	validatecieabcspace		10998432	2					
ANR	10998969	ParameterList	"i_ctx_t * i_ctx_p , ref * * r"		10998432	3					
ANR	10998970	Parameter	i_ctx_t * i_ctx_p	2434:31:77925:77941	10998432	0	True				
ANR	10998971	ParameterType	i_ctx_t *		10998432	0					
ANR	10998972	Identifier	i_ctx_p		10998432	1					
ANR	10998973	Parameter	ref * * r	2434:50:77944:77950	10998432	1	True				
ANR	10998974	ParameterType	ref * *		10998432	0					
ANR	10998975	Identifier	r		10998432	1					
ANR	10998976	CFGEntryNode	ENTRY		10998432		True				
ANR	10998977	CFGExitNode	EXIT		10998432		True				
ANR	10998978	Symbol	code		10998432						
ANR	10998979	Symbol	t_dictionary		10998432						
ANR	10998980	Symbol	gs_error_rangecheck		10998432						
ANR	10998981	Symbol	checkRangeLMN		10998432						
ANR	10998982	Symbol	& CIEdict		10998432						
ANR	10998983	Symbol	gs_error_typecheck		10998432						
ANR	10998984	Symbol	r_has_type		10998432						
ANR	10998985	Symbol	t_null		10998432						
ANR	10998986	Symbol	& valref		10998432						
ANR	10998987	Symbol	r_size		10998432						
ANR	10998988	Symbol	CIEspace		10998432						
ANR	10998989	Symbol	CIEdict		10998432						
ANR	10998990	Symbol	imemory		10998432						
ANR	10998991	Symbol	checkWhitePoint		10998432						
ANR	10998992	Symbol	value		10998432						
ANR	10998993	Symbol	tempref		10998432						
ANR	10998994	Symbol	checkMatrixLMN		10998432						
ANR	10998995	Symbol	dict_find_string		10998432						
ANR	10998996	Symbol	array_get		10998432						
ANR	10998997	Symbol	i		10998432						
ANR	10998998	Symbol	& tempref		10998432						
ANR	10998999	Symbol	r		10998432						
ANR	10999000	Symbol	checkBlackPoint		10998432						
ANR	10999001	Symbol	i_ctx_p		10998432						
ANR	10999002	Symbol	* value		10998432						
ANR	10999003	Symbol	valref		10998432						
ANR	10999004	Symbol	checkDecodeLMN		10998432						
ANR	10999005	Symbol	r_is_array		10998432						
ANR	10999006	Symbol	* r		10998432						
ANR	10999007	Symbol	get_cie_param_array		10998432						
ANR	10999008	Function	cieabcdomain	2517:0:80414:81022							
ANR	10999009	FunctionDef	"cieabcdomain (i_ctx_t * i_ctx_p , ref * space , float * ptr)"		10999008	0					
ANR	10999010	CompoundStatement		2518:0:80481:81022	10999008	0					
ANR	10999011	IdentifierDeclStatement	int code ;	2519:4:80487:80495	10999008	0	True				
ANR	10999012	IdentifierDecl	code		10999008	0					
ANR	10999013	IdentifierDeclType	int		10999008	0					
ANR	10999014	Identifier	code		10999008	1					
ANR	10999015	IdentifierDeclStatement	"ref CIEdict , * tempref ;"	2520:4:80501:80522	10999008	1	True				
ANR	10999016	IdentifierDecl	CIEdict		10999008	0					
ANR	10999017	IdentifierDeclType	ref		10999008	0					
ANR	10999018	Identifier	CIEdict		10999008	1					
ANR	10999019	IdentifierDecl	* tempref		10999008	1					
ANR	10999020	IdentifierDeclType	ref *		10999008	0					
ANR	10999021	Identifier	tempref		10999008	1					
ANR	10999022	ExpressionStatement	"code = array_get ( imemory , space , 1 , & CIEdict )"	2522:4:80529:80574	10999008	2	True				
ANR	10999023	AssignmentExpression	"code = array_get ( imemory , space , 1 , & CIEdict )"		10999008	0		=			
ANR	10999024	Identifier	code		10999008	0					
ANR	10999025	CallExpression	"array_get ( imemory , space , 1 , & CIEdict )"		10999008	1					
ANR	10999026	Callee	array_get		10999008	0					
ANR	10999027	Identifier	array_get		10999008	0					
ANR	10999028	ArgumentList	imemory		10999008	1					
ANR	10999029	Argument	imemory		10999008	0					
ANR	10999030	Identifier	imemory		10999008	0					
ANR	10999031	Argument	space		10999008	1					
ANR	10999032	Identifier	space		10999008	0					
ANR	10999033	Argument	1		10999008	2					
ANR	10999034	PrimaryExpression	1		10999008	0					
ANR	10999035	Argument	& CIEdict		10999008	3					
ANR	10999036	UnaryOperationExpression	& CIEdict		10999008	0					
ANR	10999037	UnaryOperator	&		10999008	0					
ANR	10999038	Identifier	CIEdict		10999008	1					
ANR	10999039	IfStatement	if ( code < 0 )		10999008	3					
ANR	10999040	Condition	code < 0	2523:8:80584:80591	10999008	0	True				
ANR	10999041	RelationalExpression	code < 0		10999008	0		<			
ANR	10999042	Identifier	code		10999008	0					
ANR	10999043	PrimaryExpression	0		10999008	1					
ANR	10999044	ReturnStatement	return code ;	2524:8:80602:80613	10999008	1	True				
ANR	10999045	Identifier	code		10999008	0					
ANR	10999046	ExpressionStatement	"code = dict_find_string ( & CIEdict , ""RangeABC"" , & tempref )"	2527:4:80678:80733	10999008	4	True				
ANR	10999047	AssignmentExpression	"code = dict_find_string ( & CIEdict , ""RangeABC"" , & tempref )"		10999008	0		=			
ANR	10999048	Identifier	code		10999008	0					
ANR	10999049	CallExpression	"dict_find_string ( & CIEdict , ""RangeABC"" , & tempref )"		10999008	1					
ANR	10999050	Callee	dict_find_string		10999008	0					
ANR	10999051	Identifier	dict_find_string		10999008	0					
ANR	10999052	ArgumentList	& CIEdict		10999008	1					
ANR	10999053	Argument	& CIEdict		10999008	0					
ANR	10999054	UnaryOperationExpression	& CIEdict		10999008	0					
ANR	10999055	UnaryOperator	&		10999008	0					
ANR	10999056	Identifier	CIEdict		10999008	1					
ANR	10999057	Argument	"""RangeABC"""		10999008	1					
ANR	10999058	PrimaryExpression	"""RangeABC"""		10999008	0					
ANR	10999059	Argument	& tempref		10999008	2					
ANR	10999060	UnaryOperationExpression	& tempref		10999008	0					
ANR	10999061	UnaryOperator	&		10999008	0					
ANR	10999062	Identifier	tempref		10999008	1					
ANR	10999063	IfStatement	"if ( code > 0 && ! r_has_type ( tempref , t_null ) )"		10999008	5					
ANR	10999064	Condition	"code > 0 && ! r_has_type ( tempref , t_null )"	2528:8:80743:80782	10999008	0	True				
ANR	10999065	AndExpression	"code > 0 && ! r_has_type ( tempref , t_null )"		10999008	0		&&			
ANR	10999066	RelationalExpression	code > 0		10999008	0		>			
ANR	10999067	Identifier	code		10999008	0					
ANR	10999068	PrimaryExpression	0		10999008	1					
ANR	10999069	UnaryOperationExpression	"! r_has_type ( tempref , t_null )"		10999008	1					
ANR	10999070	UnaryOperator	!		10999008	0					
ANR	10999071	CallExpression	"r_has_type ( tempref , t_null )"		10999008	1					
ANR	10999072	Callee	r_has_type		10999008	0					
ANR	10999073	Identifier	r_has_type		10999008	0					
ANR	10999074	ArgumentList	tempref		10999008	1					
ANR	10999075	Argument	tempref		10999008	0					
ANR	10999076	Identifier	tempref		10999008	0					
ANR	10999077	Argument	t_null		10999008	1					
ANR	10999078	Identifier	t_null		10999008	0					
ANR	10999079	CompoundStatement		11:50:303:303	10999008	1					
ANR	10999080	ExpressionStatement	"code = get_cie_param_array ( imemory , tempref , 6 , ptr )"	2529:8:80795:80847	10999008	0	True				
ANR	10999081	AssignmentExpression	"code = get_cie_param_array ( imemory , tempref , 6 , ptr )"		10999008	0		=			
ANR	10999082	Identifier	code		10999008	0					
ANR	10999083	CallExpression	"get_cie_param_array ( imemory , tempref , 6 , ptr )"		10999008	1					
ANR	10999084	Callee	get_cie_param_array		10999008	0					
ANR	10999085	Identifier	get_cie_param_array		10999008	0					
ANR	10999086	ArgumentList	imemory		10999008	1					
ANR	10999087	Argument	imemory		10999008	0					
ANR	10999088	Identifier	imemory		10999008	0					
ANR	10999089	Argument	tempref		10999008	1					
ANR	10999090	Identifier	tempref		10999008	0					
ANR	10999091	Argument	6		10999008	2					
ANR	10999092	PrimaryExpression	6		10999008	0					
ANR	10999093	Argument	ptr		10999008	3					
ANR	10999094	Identifier	ptr		10999008	0					
ANR	10999095	IfStatement	if ( code < 0 )		10999008	1					
ANR	10999096	Condition	code < 0	2530:12:80861:80868	10999008	0	True				
ANR	10999097	RelationalExpression	code < 0		10999008	0		<			
ANR	10999098	Identifier	code		10999008	0					
ANR	10999099	PrimaryExpression	0		10999008	1					
ANR	10999100	ReturnStatement	return code ;	2531:12:80883:80894	10999008	1	True				
ANR	10999101	Identifier	code		10999008	0					
ANR	10999102	ElseStatement	else		10999008	0					
ANR	10999103	CompoundStatement		15:11:425:425	10999008	0					
ANR	10999104	ExpressionStatement	"memcpy ( ptr , default_0_1 , 6 * sizeof ( float ) )"	2534:5:80959:81000	10999008	0	True				
ANR	10999105	CallExpression	"memcpy ( ptr , default_0_1 , 6 * sizeof ( float ) )"		10999008	0					
ANR	10999106	Callee	memcpy		10999008	0					
ANR	10999107	Identifier	memcpy		10999008	0					
ANR	10999108	ArgumentList	ptr		10999008	1					
ANR	10999109	Argument	ptr		10999008	0					
ANR	10999110	Identifier	ptr		10999008	0					
ANR	10999111	Argument	default_0_1		10999008	1					
ANR	10999112	Identifier	default_0_1		10999008	0					
ANR	10999113	Argument	6 * sizeof ( float )		10999008	2					
ANR	10999114	MultiplicativeExpression	6 * sizeof ( float )		10999008	0		*			
ANR	10999115	PrimaryExpression	6		10999008	0					
ANR	10999116	SizeofExpression	sizeof ( float )		10999008	1					
ANR	10999117	Sizeof	sizeof		10999008	0					
ANR	10999118	SizeofOperand	float		10999008	1					
ANR	10999119	ReturnStatement	return 0 ;	2536:4:81012:81020	10999008	6	True				
ANR	10999120	PrimaryExpression	0		10999008	0					
ANR	10999121	ReturnType	static int		10999008	1					
ANR	10999122	Identifier	cieabcdomain		10999008	2					
ANR	10999123	ParameterList	"i_ctx_t * i_ctx_p , ref * space , float * ptr"		10999008	3					
ANR	10999124	Parameter	i_ctx_t * i_ctx_p	2517:24:80438:80454	10999008	0	True				
ANR	10999125	ParameterType	i_ctx_t *		10999008	0					
ANR	10999126	Identifier	i_ctx_p		10999008	1					
ANR	10999127	Parameter	ref * space	2517:43:80457:80466	10999008	1	True				
ANR	10999128	ParameterType	ref *		10999008	0					
ANR	10999129	Identifier	space		10999008	1					
ANR	10999130	Parameter	float * ptr	2517:55:80469:80478	10999008	2	True				
ANR	10999131	ParameterType	float *		10999008	0					
ANR	10999132	Identifier	ptr		10999008	1					
ANR	10999133	CFGEntryNode	ENTRY		10999008		True				
ANR	10999134	CFGExitNode	EXIT		10999008		True				
ANR	10999135	Symbol	code		10999008						
ANR	10999136	Symbol	dict_find_string		10999008						
ANR	10999137	Symbol	array_get		10999008						
ANR	10999138	Symbol	& CIEdict		10999008						
ANR	10999139	Symbol	& tempref		10999008						
ANR	10999140	Symbol	space		10999008						
ANR	10999141	Symbol	ptr		10999008						
ANR	10999142	Symbol	r_has_type		10999008						
ANR	10999143	Symbol	t_null		10999008						
ANR	10999144	Symbol	i_ctx_p		10999008						
ANR	10999145	Symbol	CIEdict		10999008						
ANR	10999146	Symbol	imemory		10999008						
ANR	10999147	Symbol	get_cie_param_array		10999008						
ANR	10999148	Symbol	default_0_1		10999008						
ANR	10999149	Symbol	tempref		10999008						
ANR	10999150	Function	cieabcrange	2538:0:81024:81635							
ANR	10999151	FunctionDef	"cieabcrange (i_ctx_t * i_ctx_p , ref * space , float * ptr)"		10999150	0					
ANR	10999152	CompoundStatement		2539:0:81090:81635	10999150	0					
ANR	10999153	IdentifierDeclStatement	int code ;	2540:4:81096:81104	10999150	0	True				
ANR	10999154	IdentifierDecl	code		10999150	0					
ANR	10999155	IdentifierDeclType	int		10999150	0					
ANR	10999156	Identifier	code		10999150	1					
ANR	10999157	IdentifierDeclStatement	"ref CIEdict , * tempref ;"	2541:4:81110:81135	10999150	1	True				
ANR	10999158	IdentifierDecl	CIEdict		10999150	0					
ANR	10999159	IdentifierDeclType	ref		10999150	0					
ANR	10999160	Identifier	CIEdict		10999150	1					
ANR	10999161	IdentifierDecl	* tempref		10999150	1					
ANR	10999162	IdentifierDeclType	ref *		10999150	0					
ANR	10999163	Identifier	tempref		10999150	1					
ANR	10999164	ExpressionStatement	"code = array_get ( imemory , space , 1 , & CIEdict )"	2543:4:81142:81187	10999150	2	True				
ANR	10999165	AssignmentExpression	"code = array_get ( imemory , space , 1 , & CIEdict )"		10999150	0		=			
ANR	10999166	Identifier	code		10999150	0					
ANR	10999167	CallExpression	"array_get ( imemory , space , 1 , & CIEdict )"		10999150	1					
ANR	10999168	Callee	array_get		10999150	0					
ANR	10999169	Identifier	array_get		10999150	0					
ANR	10999170	ArgumentList	imemory		10999150	1					
ANR	10999171	Argument	imemory		10999150	0					
ANR	10999172	Identifier	imemory		10999150	0					
ANR	10999173	Argument	space		10999150	1					
ANR	10999174	Identifier	space		10999150	0					
ANR	10999175	Argument	1		10999150	2					
ANR	10999176	PrimaryExpression	1		10999150	0					
ANR	10999177	Argument	& CIEdict		10999150	3					
ANR	10999178	UnaryOperationExpression	& CIEdict		10999150	0					
ANR	10999179	UnaryOperator	&		10999150	0					
ANR	10999180	Identifier	CIEdict		10999150	1					
ANR	10999181	IfStatement	if ( code < 0 )		10999150	3					
ANR	10999182	Condition	code < 0	2544:8:81197:81204	10999150	0	True				
ANR	10999183	RelationalExpression	code < 0		10999150	0		<			
ANR	10999184	Identifier	code		10999150	0					
ANR	10999185	PrimaryExpression	0		10999150	1					
ANR	10999186	ReturnStatement	return code ;	2545:8:81215:81226	10999150	1	True				
ANR	10999187	Identifier	code		10999150	0					
ANR	10999188	ExpressionStatement	"code = dict_find_string ( & CIEdict , ""RangeABC"" , & tempref )"	2548:4:81291:81346	10999150	4	True				
ANR	10999189	AssignmentExpression	"code = dict_find_string ( & CIEdict , ""RangeABC"" , & tempref )"		10999150	0		=			
ANR	10999190	Identifier	code		10999150	0					
ANR	10999191	CallExpression	"dict_find_string ( & CIEdict , ""RangeABC"" , & tempref )"		10999150	1					
ANR	10999192	Callee	dict_find_string		10999150	0					
ANR	10999193	Identifier	dict_find_string		10999150	0					
ANR	10999194	ArgumentList	& CIEdict		10999150	1					
ANR	10999195	Argument	& CIEdict		10999150	0					
ANR	10999196	UnaryOperationExpression	& CIEdict		10999150	0					
ANR	10999197	UnaryOperator	&		10999150	0					
ANR	10999198	Identifier	CIEdict		10999150	1					
ANR	10999199	Argument	"""RangeABC"""		10999150	1					
ANR	10999200	PrimaryExpression	"""RangeABC"""		10999150	0					
ANR	10999201	Argument	& tempref		10999150	2					
ANR	10999202	UnaryOperationExpression	& tempref		10999150	0					
ANR	10999203	UnaryOperator	&		10999150	0					
ANR	10999204	Identifier	tempref		10999150	1					
ANR	10999205	IfStatement	"if ( code > 0 && ! r_has_type ( tempref , t_null ) )"		10999150	5					
ANR	10999206	Condition	"code > 0 && ! r_has_type ( tempref , t_null )"	2549:8:81356:81395	10999150	0	True				
ANR	10999207	AndExpression	"code > 0 && ! r_has_type ( tempref , t_null )"		10999150	0		&&			
ANR	10999208	RelationalExpression	code > 0		10999150	0		>			
ANR	10999209	Identifier	code		10999150	0					
ANR	10999210	PrimaryExpression	0		10999150	1					
ANR	10999211	UnaryOperationExpression	"! r_has_type ( tempref , t_null )"		10999150	1					
ANR	10999212	UnaryOperator	!		10999150	0					
ANR	10999213	CallExpression	"r_has_type ( tempref , t_null )"		10999150	1					
ANR	10999214	Callee	r_has_type		10999150	0					
ANR	10999215	Identifier	r_has_type		10999150	0					
ANR	10999216	ArgumentList	tempref		10999150	1					
ANR	10999217	Argument	tempref		10999150	0					
ANR	10999218	Identifier	tempref		10999150	0					
ANR	10999219	Argument	t_null		10999150	1					
ANR	10999220	Identifier	t_null		10999150	0					
ANR	10999221	CompoundStatement		11:50:307:307	10999150	1					
ANR	10999222	ExpressionStatement	"code = get_cie_param_array ( imemory , tempref , 6 , ptr )"	2550:8:81408:81460	10999150	0	True				
ANR	10999223	AssignmentExpression	"code = get_cie_param_array ( imemory , tempref , 6 , ptr )"		10999150	0		=			
ANR	10999224	Identifier	code		10999150	0					
ANR	10999225	CallExpression	"get_cie_param_array ( imemory , tempref , 6 , ptr )"		10999150	1					
ANR	10999226	Callee	get_cie_param_array		10999150	0					
ANR	10999227	Identifier	get_cie_param_array		10999150	0					
ANR	10999228	ArgumentList	imemory		10999150	1					
ANR	10999229	Argument	imemory		10999150	0					
ANR	10999230	Identifier	imemory		10999150	0					
ANR	10999231	Argument	tempref		10999150	1					
ANR	10999232	Identifier	tempref		10999150	0					
ANR	10999233	Argument	6		10999150	2					
ANR	10999234	PrimaryExpression	6		10999150	0					
ANR	10999235	Argument	ptr		10999150	3					
ANR	10999236	Identifier	ptr		10999150	0					
ANR	10999237	IfStatement	if ( code < 0 )		10999150	1					
ANR	10999238	Condition	code < 0	2551:12:81474:81481	10999150	0	True				
ANR	10999239	RelationalExpression	code < 0		10999150	0		<			
ANR	10999240	Identifier	code		10999150	0					
ANR	10999241	PrimaryExpression	0		10999150	1					
ANR	10999242	ReturnStatement	return code ;	2552:12:81496:81507	10999150	1	True				
ANR	10999243	Identifier	code		10999150	0					
ANR	10999244	ElseStatement	else		10999150	0					
ANR	10999245	CompoundStatement		15:11:429:429	10999150	0					
ANR	10999246	ExpressionStatement	"memcpy ( ptr , default_0_1 , 6 * sizeof ( float ) )"	2555:5:81572:81613	10999150	0	True				
ANR	10999247	CallExpression	"memcpy ( ptr , default_0_1 , 6 * sizeof ( float ) )"		10999150	0					
ANR	10999248	Callee	memcpy		10999150	0					
ANR	10999249	Identifier	memcpy		10999150	0					
ANR	10999250	ArgumentList	ptr		10999150	1					
ANR	10999251	Argument	ptr		10999150	0					
ANR	10999252	Identifier	ptr		10999150	0					
ANR	10999253	Argument	default_0_1		10999150	1					
ANR	10999254	Identifier	default_0_1		10999150	0					
ANR	10999255	Argument	6 * sizeof ( float )		10999150	2					
ANR	10999256	MultiplicativeExpression	6 * sizeof ( float )		10999150	0		*			
ANR	10999257	PrimaryExpression	6		10999150	0					
ANR	10999258	SizeofExpression	sizeof ( float )		10999150	1					
ANR	10999259	Sizeof	sizeof		10999150	0					
ANR	10999260	SizeofOperand	float		10999150	1					
ANR	10999261	ReturnStatement	return 0 ;	2557:4:81625:81633	10999150	6	True				
ANR	10999262	PrimaryExpression	0		10999150	0					
ANR	10999263	ReturnType	static int		10999150	1					
ANR	10999264	Identifier	cieabcrange		10999150	2					
ANR	10999265	ParameterList	"i_ctx_t * i_ctx_p , ref * space , float * ptr"		10999150	3					
ANR	10999266	Parameter	i_ctx_t * i_ctx_p	2538:23:81047:81063	10999150	0	True				
ANR	10999267	ParameterType	i_ctx_t *		10999150	0					
ANR	10999268	Identifier	i_ctx_p		10999150	1					
ANR	10999269	Parameter	ref * space	2538:42:81066:81075	10999150	1	True				
ANR	10999270	ParameterType	ref *		10999150	0					
ANR	10999271	Identifier	space		10999150	1					
ANR	10999272	Parameter	float * ptr	2538:54:81078:81087	10999150	2	True				
ANR	10999273	ParameterType	float *		10999150	0					
ANR	10999274	Identifier	ptr		10999150	1					
ANR	10999275	CFGEntryNode	ENTRY		10999150		True				
ANR	10999276	CFGExitNode	EXIT		10999150		True				
ANR	10999277	Symbol	code		10999150						
ANR	10999278	Symbol	dict_find_string		10999150						
ANR	10999279	Symbol	array_get		10999150						
ANR	10999280	Symbol	& CIEdict		10999150						
ANR	10999281	Symbol	& tempref		10999150						
ANR	10999282	Symbol	space		10999150						
ANR	10999283	Symbol	ptr		10999150						
ANR	10999284	Symbol	r_has_type		10999150						
ANR	10999285	Symbol	t_null		10999150						
ANR	10999286	Symbol	i_ctx_p		10999150						
ANR	10999287	Symbol	CIEdict		10999150						
ANR	10999288	Symbol	imemory		10999150						
ANR	10999289	Symbol	get_cie_param_array		10999150						
ANR	10999290	Symbol	default_0_1		10999150						
ANR	10999291	Symbol	tempref		10999150						
ANR	10999292	Function	cieabcvalidate	2559:0:81637:82014							
ANR	10999293	FunctionDef	"cieabcvalidate (i_ctx_t * i_ctx_p , ref * space , float * values , int num_comps)"		10999292	0					
ANR	10999294	CompoundStatement		2560:0:81723:82014	10999292	0					
ANR	10999295	IdentifierDeclStatement	os_ptr op = osp ;	2561:4:81729:81744	10999292	0	True				
ANR	10999296	IdentifierDecl	op = osp		10999292	0					
ANR	10999297	IdentifierDeclType	os_ptr		10999292	0					
ANR	10999298	Identifier	op		10999292	1					
ANR	10999299	AssignmentExpression	op = osp		10999292	2		=			
ANR	10999300	Identifier	osp		10999292	0					
ANR	10999301	Identifier	osp		10999292	1					
ANR	10999302	IdentifierDeclStatement	int i ;	2562:4:81750:81755	10999292	1	True				
ANR	10999303	IdentifierDecl	i		10999292	0					
ANR	10999304	IdentifierDeclType	int		10999292	0					
ANR	10999305	Identifier	i		10999292	1					
ANR	10999306	IfStatement	if ( num_comps < 3 )		10999292	2					
ANR	10999307	Condition	num_comps < 3	2564:8:81766:81778	10999292	0	True				
ANR	10999308	RelationalExpression	num_comps < 3		10999292	0		<			
ANR	10999309	Identifier	num_comps		10999292	0					
ANR	10999310	PrimaryExpression	3		10999292	1					
ANR	10999311	ExpressionStatement	return_error ( gs_error_stackunderflow )	2565:8:81789:81826	10999292	1	True				
ANR	10999312	CallExpression	return_error ( gs_error_stackunderflow )		10999292	0					
ANR	10999313	Callee	return_error		10999292	0					
ANR	10999314	Identifier	return_error		10999292	0					
ANR	10999315	ArgumentList	gs_error_stackunderflow		10999292	1					
ANR	10999316	Argument	gs_error_stackunderflow		10999292	0					
ANR	10999317	Identifier	gs_error_stackunderflow		10999292	0					
ANR	10999318	ExpressionStatement	op -= 2	2567:4:81833:81840	10999292	3	True				
ANR	10999319	AssignmentExpression	op -= 2		10999292	0		-=			
ANR	10999320	Identifier	op		10999292	0					
ANR	10999321	PrimaryExpression	2		10999292	1					
ANR	10999322	ForStatement	for ( i = 0 ; i < 3 ; i ++ )		10999292	4					
ANR	10999323	ForInit	i = 0 ;	2568:9:81851:81854	10999292	0	True				
ANR	10999324	AssignmentExpression	i = 0		10999292	0		=			
ANR	10999325	Identifier	i		10999292	0					
ANR	10999326	PrimaryExpression	0		10999292	1					
ANR	10999327	Condition	i < 3	2568:13:81855:81857	10999292	1	True				
ANR	10999328	RelationalExpression	i < 3		10999292	0		<			
ANR	10999329	Identifier	i		10999292	0					
ANR	10999330	PrimaryExpression	3		10999292	1					
ANR	10999331	PostIncDecOperationExpression	i ++	2568:17:81859:81861	10999292	2	True				
ANR	10999332	Identifier	i		10999292	0					
ANR	10999333	IncDec	++		10999292	1					
ANR	10999334	CompoundStatement		9:22:140:140	10999292	3					
ANR	10999335	IfStatement	"if ( ! r_has_type ( op , t_integer ) && ! r_has_type ( op , t_real ) )"		10999292	0					
ANR	10999336	Condition	"! r_has_type ( op , t_integer ) && ! r_has_type ( op , t_real )"	2569:12:81878:81930	10999292	0	True				
ANR	10999337	AndExpression	"! r_has_type ( op , t_integer ) && ! r_has_type ( op , t_real )"		10999292	0		&&			
ANR	10999338	UnaryOperationExpression	"! r_has_type ( op , t_integer )"		10999292	0					
ANR	10999339	UnaryOperator	!		10999292	0					
ANR	10999340	CallExpression	"r_has_type ( op , t_integer )"		10999292	1					
ANR	10999341	Callee	r_has_type		10999292	0					
ANR	10999342	Identifier	r_has_type		10999292	0					
ANR	10999343	ArgumentList	op		10999292	1					
ANR	10999344	Argument	op		10999292	0					
ANR	10999345	Identifier	op		10999292	0					
ANR	10999346	Argument	t_integer		10999292	1					
ANR	10999347	Identifier	t_integer		10999292	0					
ANR	10999348	UnaryOperationExpression	"! r_has_type ( op , t_real )"		10999292	1					
ANR	10999349	UnaryOperator	!		10999292	0					
ANR	10999350	CallExpression	"r_has_type ( op , t_real )"		10999292	1					
ANR	10999351	Callee	r_has_type		10999292	0					
ANR	10999352	Identifier	r_has_type		10999292	0					
ANR	10999353	ArgumentList	op		10999292	1					
ANR	10999354	Argument	op		10999292	0					
ANR	10999355	Identifier	op		10999292	0					
ANR	10999356	Argument	t_real		10999292	1					
ANR	10999357	Identifier	t_real		10999292	0					
ANR	10999358	ExpressionStatement	return_error ( gs_error_typecheck )	2570:12:81945:81977	10999292	1	True				
ANR	10999359	CallExpression	return_error ( gs_error_typecheck )		10999292	0					
ANR	10999360	Callee	return_error		10999292	0					
ANR	10999361	Identifier	return_error		10999292	0					
ANR	10999362	ArgumentList	gs_error_typecheck		10999292	1					
ANR	10999363	Argument	gs_error_typecheck		10999292	0					
ANR	10999364	Identifier	gs_error_typecheck		10999292	0					
ANR	10999365	ExpressionStatement	op ++	2571:8:81987:81991	10999292	1	True				
ANR	10999366	PostIncDecOperationExpression	op ++		10999292	0					
ANR	10999367	Identifier	op		10999292	0					
ANR	10999368	IncDec	++		10999292	1					
ANR	10999369	ReturnStatement	return 0 ;	2574:4:82004:82012	10999292	5	True				
ANR	10999370	PrimaryExpression	0		10999292	0					
ANR	10999371	ReturnType	static int		10999292	1					
ANR	10999372	Identifier	cieabcvalidate		10999292	2					
ANR	10999373	ParameterList	"i_ctx_t * i_ctx_p , ref * space , float * values , int num_comps"		10999292	3					
ANR	10999374	Parameter	i_ctx_t * i_ctx_p	2559:26:81663:81678	10999292	0	True				
ANR	10999375	ParameterType	i_ctx_t *		10999292	0					
ANR	10999376	Identifier	i_ctx_p		10999292	1					
ANR	10999377	Parameter	ref * space	2559:44:81681:81690	10999292	1	True				
ANR	10999378	ParameterType	ref *		10999292	0					
ANR	10999379	Identifier	space		10999292	1					
ANR	10999380	Parameter	float * values	2559:56:81693:81705	10999292	2	True				
ANR	10999381	ParameterType	float *		10999292	0					
ANR	10999382	Identifier	values		10999292	1					
ANR	10999383	Parameter	int num_comps	2559:71:81708:81720	10999292	3	True				
ANR	10999384	ParameterType	int		10999292	0					
ANR	10999385	Identifier	num_comps		10999292	1					
ANR	10999386	CFGEntryNode	ENTRY		10999292		True				
ANR	10999387	CFGExitNode	EXIT		10999292		True				
ANR	10999388	Symbol	op		10999292						
ANR	10999389	Symbol	r_has_type		10999292						
ANR	10999390	Symbol	gs_error_typecheck		10999292						
ANR	10999391	Symbol	t_integer		10999292						
ANR	10999392	Symbol	gs_error_stackunderflow		10999292						
ANR	10999393	Symbol	i_ctx_p		10999292						
ANR	10999394	Symbol	values		10999292						
ANR	10999395	Symbol	num_comps		10999292						
ANR	10999396	Symbol	i		10999292						
ANR	10999397	Symbol	t_real		10999292						
ANR	10999398	Symbol	osp		10999292						
ANR	10999399	Symbol	space		10999292						
ANR	10999400	Function	cieabccompareproc	2576:0:82016:83093							
ANR	10999401	FunctionDef	"cieabccompareproc (i_ctx_t * i_ctx_p , ref * space , ref * testspace)"		10999400	0					
ANR	10999402	CompoundStatement		2577:0:82091:83093	10999400	0					
ANR	10999403	IdentifierDeclStatement	int code = 0 ;	2578:4:82097:82109	10999400	0	True				
ANR	10999404	IdentifierDecl	code = 0		10999400	0					
ANR	10999405	IdentifierDeclType	int		10999400	0					
ANR	10999406	Identifier	code		10999400	1					
ANR	10999407	AssignmentExpression	code = 0		10999400	2		=			
ANR	10999408	Identifier	code		10999400	0					
ANR	10999409	PrimaryExpression	0		10999400	1					
ANR	10999410	IdentifierDeclStatement	"ref CIEdict1 , CIEdict2 ;"	2579:4:82115:82137	10999400	1	True				
ANR	10999411	IdentifierDecl	CIEdict1		10999400	0					
ANR	10999412	IdentifierDeclType	ref		10999400	0					
ANR	10999413	Identifier	CIEdict1		10999400	1					
ANR	10999414	IdentifierDecl	CIEdict2		10999400	1					
ANR	10999415	IdentifierDeclType	ref		10999400	0					
ANR	10999416	Identifier	CIEdict2		10999400	1					
ANR	10999417	ExpressionStatement	"code = array_get ( imemory , space , 1 , & CIEdict1 )"	2581:4:82144:82190	10999400	2	True				
ANR	10999418	AssignmentExpression	"code = array_get ( imemory , space , 1 , & CIEdict1 )"		10999400	0		=			
ANR	10999419	Identifier	code		10999400	0					
ANR	10999420	CallExpression	"array_get ( imemory , space , 1 , & CIEdict1 )"		10999400	1					
ANR	10999421	Callee	array_get		10999400	0					
ANR	10999422	Identifier	array_get		10999400	0					
ANR	10999423	ArgumentList	imemory		10999400	1					
ANR	10999424	Argument	imemory		10999400	0					
ANR	10999425	Identifier	imemory		10999400	0					
ANR	10999426	Argument	space		10999400	1					
ANR	10999427	Identifier	space		10999400	0					
ANR	10999428	Argument	1		10999400	2					
ANR	10999429	PrimaryExpression	1		10999400	0					
ANR	10999430	Argument	& CIEdict1		10999400	3					
ANR	10999431	UnaryOperationExpression	& CIEdict1		10999400	0					
ANR	10999432	UnaryOperator	&		10999400	0					
ANR	10999433	Identifier	CIEdict1		10999400	1					
ANR	10999434	IfStatement	if ( code < 0 )		10999400	3					
ANR	10999435	Condition	code < 0	2582:8:82200:82207	10999400	0	True				
ANR	10999436	RelationalExpression	code < 0		10999400	0		<			
ANR	10999437	Identifier	code		10999400	0					
ANR	10999438	PrimaryExpression	0		10999400	1					
ANR	10999439	ReturnStatement	return 0 ;	2583:8:82218:82226	10999400	1	True				
ANR	10999440	PrimaryExpression	0		10999400	0					
ANR	10999441	ExpressionStatement	"code = array_get ( imemory , testspace , 1 , & CIEdict2 )"	2584:4:82232:82282	10999400	4	True				
ANR	10999442	AssignmentExpression	"code = array_get ( imemory , testspace , 1 , & CIEdict2 )"		10999400	0		=			
ANR	10999443	Identifier	code		10999400	0					
ANR	10999444	CallExpression	"array_get ( imemory , testspace , 1 , & CIEdict2 )"		10999400	1					
ANR	10999445	Callee	array_get		10999400	0					
ANR	10999446	Identifier	array_get		10999400	0					
ANR	10999447	ArgumentList	imemory		10999400	1					
ANR	10999448	Argument	imemory		10999400	0					
ANR	10999449	Identifier	imemory		10999400	0					
ANR	10999450	Argument	testspace		10999400	1					
ANR	10999451	Identifier	testspace		10999400	0					
ANR	10999452	Argument	1		10999400	2					
ANR	10999453	PrimaryExpression	1		10999400	0					
ANR	10999454	Argument	& CIEdict2		10999400	3					
ANR	10999455	UnaryOperationExpression	& CIEdict2		10999400	0					
ANR	10999456	UnaryOperator	&		10999400	0					
ANR	10999457	Identifier	CIEdict2		10999400	1					
ANR	10999458	IfStatement	if ( code < 0 )		10999400	5					
ANR	10999459	Condition	code < 0	2585:8:82292:82299	10999400	0	True				
ANR	10999460	RelationalExpression	code < 0		10999400	0		<			
ANR	10999461	Identifier	code		10999400	0					
ANR	10999462	PrimaryExpression	0		10999400	1					
ANR	10999463	ReturnStatement	return 0 ;	2586:8:82310:82318	10999400	1	True				
ANR	10999464	PrimaryExpression	0		10999400	0					
ANR	10999465	IfStatement	"if ( ! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""WhitePoint"" ) )"		10999400	6					
ANR	10999466	Condition	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""WhitePoint"" )"	2587:8:82328:82395	10999400	0	True				
ANR	10999467	UnaryOperationExpression	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""WhitePoint"" )"		10999400	0					
ANR	10999468	UnaryOperator	!		10999400	0					
ANR	10999469	CallExpression	"comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""WhitePoint"" )"		10999400	1					
ANR	10999470	Callee	comparedictkey		10999400	0					
ANR	10999471	Identifier	comparedictkey		10999400	0					
ANR	10999472	ArgumentList	i_ctx_p		10999400	1					
ANR	10999473	Argument	i_ctx_p		10999400	0					
ANR	10999474	Identifier	i_ctx_p		10999400	0					
ANR	10999475	Argument	& CIEdict1		10999400	1					
ANR	10999476	UnaryOperationExpression	& CIEdict1		10999400	0					
ANR	10999477	UnaryOperator	&		10999400	0					
ANR	10999478	Identifier	CIEdict1		10999400	1					
ANR	10999479	Argument	& CIEdict2		10999400	2					
ANR	10999480	UnaryOperationExpression	& CIEdict2		10999400	0					
ANR	10999481	UnaryOperator	&		10999400	0					
ANR	10999482	Identifier	CIEdict2		10999400	1					
ANR	10999483	Argument	"( char * ) ""WhitePoint"""		10999400	3					
ANR	10999484	CastExpression	"( char * ) ""WhitePoint"""		10999400	0					
ANR	10999485	CastTarget	char *		10999400	0					
ANR	10999486	PrimaryExpression	"""WhitePoint"""		10999400	1					
ANR	10999487	ReturnStatement	return 0 ;	2588:8:82406:82414	10999400	1	True				
ANR	10999488	PrimaryExpression	0		10999400	0					
ANR	10999489	IfStatement	"if ( ! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""BlackPoint"" ) )"		10999400	7					
ANR	10999490	Condition	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""BlackPoint"" )"	2589:8:82424:82491	10999400	0	True				
ANR	10999491	UnaryOperationExpression	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""BlackPoint"" )"		10999400	0					
ANR	10999492	UnaryOperator	!		10999400	0					
ANR	10999493	CallExpression	"comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""BlackPoint"" )"		10999400	1					
ANR	10999494	Callee	comparedictkey		10999400	0					
ANR	10999495	Identifier	comparedictkey		10999400	0					
ANR	10999496	ArgumentList	i_ctx_p		10999400	1					
ANR	10999497	Argument	i_ctx_p		10999400	0					
ANR	10999498	Identifier	i_ctx_p		10999400	0					
ANR	10999499	Argument	& CIEdict1		10999400	1					
ANR	10999500	UnaryOperationExpression	& CIEdict1		10999400	0					
ANR	10999501	UnaryOperator	&		10999400	0					
ANR	10999502	Identifier	CIEdict1		10999400	1					
ANR	10999503	Argument	& CIEdict2		10999400	2					
ANR	10999504	UnaryOperationExpression	& CIEdict2		10999400	0					
ANR	10999505	UnaryOperator	&		10999400	0					
ANR	10999506	Identifier	CIEdict2		10999400	1					
ANR	10999507	Argument	"( char * ) ""BlackPoint"""		10999400	3					
ANR	10999508	CastExpression	"( char * ) ""BlackPoint"""		10999400	0					
ANR	10999509	CastTarget	char *		10999400	0					
ANR	10999510	PrimaryExpression	"""BlackPoint"""		10999400	1					
ANR	10999511	ReturnStatement	return 0 ;	2590:8:82502:82510	10999400	1	True				
ANR	10999512	PrimaryExpression	0		10999400	0					
ANR	10999513	IfStatement	"if ( ! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""RangeABC"" ) )"		10999400	8					
ANR	10999514	Condition	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""RangeABC"" )"	2591:8:82520:82585	10999400	0	True				
ANR	10999515	UnaryOperationExpression	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""RangeABC"" )"		10999400	0					
ANR	10999516	UnaryOperator	!		10999400	0					
ANR	10999517	CallExpression	"comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""RangeABC"" )"		10999400	1					
ANR	10999518	Callee	comparedictkey		10999400	0					
ANR	10999519	Identifier	comparedictkey		10999400	0					
ANR	10999520	ArgumentList	i_ctx_p		10999400	1					
ANR	10999521	Argument	i_ctx_p		10999400	0					
ANR	10999522	Identifier	i_ctx_p		10999400	0					
ANR	10999523	Argument	& CIEdict1		10999400	1					
ANR	10999524	UnaryOperationExpression	& CIEdict1		10999400	0					
ANR	10999525	UnaryOperator	&		10999400	0					
ANR	10999526	Identifier	CIEdict1		10999400	1					
ANR	10999527	Argument	& CIEdict2		10999400	2					
ANR	10999528	UnaryOperationExpression	& CIEdict2		10999400	0					
ANR	10999529	UnaryOperator	&		10999400	0					
ANR	10999530	Identifier	CIEdict2		10999400	1					
ANR	10999531	Argument	"( char * ) ""RangeABC"""		10999400	3					
ANR	10999532	CastExpression	"( char * ) ""RangeABC"""		10999400	0					
ANR	10999533	CastTarget	char *		10999400	0					
ANR	10999534	PrimaryExpression	"""RangeABC"""		10999400	1					
ANR	10999535	ReturnStatement	return 0 ;	2592:8:82596:82604	10999400	1	True				
ANR	10999536	PrimaryExpression	0		10999400	0					
ANR	10999537	IfStatement	"if ( ! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""DecodeABC"" ) )"		10999400	9					
ANR	10999538	Condition	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""DecodeABC"" )"	2593:8:82614:82680	10999400	0	True				
ANR	10999539	UnaryOperationExpression	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""DecodeABC"" )"		10999400	0					
ANR	10999540	UnaryOperator	!		10999400	0					
ANR	10999541	CallExpression	"comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""DecodeABC"" )"		10999400	1					
ANR	10999542	Callee	comparedictkey		10999400	0					
ANR	10999543	Identifier	comparedictkey		10999400	0					
ANR	10999544	ArgumentList	i_ctx_p		10999400	1					
ANR	10999545	Argument	i_ctx_p		10999400	0					
ANR	10999546	Identifier	i_ctx_p		10999400	0					
ANR	10999547	Argument	& CIEdict1		10999400	1					
ANR	10999548	UnaryOperationExpression	& CIEdict1		10999400	0					
ANR	10999549	UnaryOperator	&		10999400	0					
ANR	10999550	Identifier	CIEdict1		10999400	1					
ANR	10999551	Argument	& CIEdict2		10999400	2					
ANR	10999552	UnaryOperationExpression	& CIEdict2		10999400	0					
ANR	10999553	UnaryOperator	&		10999400	0					
ANR	10999554	Identifier	CIEdict2		10999400	1					
ANR	10999555	Argument	"( char * ) ""DecodeABC"""		10999400	3					
ANR	10999556	CastExpression	"( char * ) ""DecodeABC"""		10999400	0					
ANR	10999557	CastTarget	char *		10999400	0					
ANR	10999558	PrimaryExpression	"""DecodeABC"""		10999400	1					
ANR	10999559	ReturnStatement	return 0 ;	2594:8:82691:82699	10999400	1	True				
ANR	10999560	PrimaryExpression	0		10999400	0					
ANR	10999561	IfStatement	"if ( ! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""MatrixABC"" ) )"		10999400	10					
ANR	10999562	Condition	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""MatrixABC"" )"	2595:8:82709:82775	10999400	0	True				
ANR	10999563	UnaryOperationExpression	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""MatrixABC"" )"		10999400	0					
ANR	10999564	UnaryOperator	!		10999400	0					
ANR	10999565	CallExpression	"comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""MatrixABC"" )"		10999400	1					
ANR	10999566	Callee	comparedictkey		10999400	0					
ANR	10999567	Identifier	comparedictkey		10999400	0					
ANR	10999568	ArgumentList	i_ctx_p		10999400	1					
ANR	10999569	Argument	i_ctx_p		10999400	0					
ANR	10999570	Identifier	i_ctx_p		10999400	0					
ANR	10999571	Argument	& CIEdict1		10999400	1					
ANR	10999572	UnaryOperationExpression	& CIEdict1		10999400	0					
ANR	10999573	UnaryOperator	&		10999400	0					
ANR	10999574	Identifier	CIEdict1		10999400	1					
ANR	10999575	Argument	& CIEdict2		10999400	2					
ANR	10999576	UnaryOperationExpression	& CIEdict2		10999400	0					
ANR	10999577	UnaryOperator	&		10999400	0					
ANR	10999578	Identifier	CIEdict2		10999400	1					
ANR	10999579	Argument	"( char * ) ""MatrixABC"""		10999400	3					
ANR	10999580	CastExpression	"( char * ) ""MatrixABC"""		10999400	0					
ANR	10999581	CastTarget	char *		10999400	0					
ANR	10999582	PrimaryExpression	"""MatrixABC"""		10999400	1					
ANR	10999583	ReturnStatement	return 0 ;	2596:8:82786:82794	10999400	1	True				
ANR	10999584	PrimaryExpression	0		10999400	0					
ANR	10999585	IfStatement	"if ( ! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""RangeLMN"" ) )"		10999400	11					
ANR	10999586	Condition	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""RangeLMN"" )"	2597:8:82804:82869	10999400	0	True				
ANR	10999587	UnaryOperationExpression	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""RangeLMN"" )"		10999400	0					
ANR	10999588	UnaryOperator	!		10999400	0					
ANR	10999589	CallExpression	"comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""RangeLMN"" )"		10999400	1					
ANR	10999590	Callee	comparedictkey		10999400	0					
ANR	10999591	Identifier	comparedictkey		10999400	0					
ANR	10999592	ArgumentList	i_ctx_p		10999400	1					
ANR	10999593	Argument	i_ctx_p		10999400	0					
ANR	10999594	Identifier	i_ctx_p		10999400	0					
ANR	10999595	Argument	& CIEdict1		10999400	1					
ANR	10999596	UnaryOperationExpression	& CIEdict1		10999400	0					
ANR	10999597	UnaryOperator	&		10999400	0					
ANR	10999598	Identifier	CIEdict1		10999400	1					
ANR	10999599	Argument	& CIEdict2		10999400	2					
ANR	10999600	UnaryOperationExpression	& CIEdict2		10999400	0					
ANR	10999601	UnaryOperator	&		10999400	0					
ANR	10999602	Identifier	CIEdict2		10999400	1					
ANR	10999603	Argument	"( char * ) ""RangeLMN"""		10999400	3					
ANR	10999604	CastExpression	"( char * ) ""RangeLMN"""		10999400	0					
ANR	10999605	CastTarget	char *		10999400	0					
ANR	10999606	PrimaryExpression	"""RangeLMN"""		10999400	1					
ANR	10999607	ReturnStatement	return 0 ;	2598:8:82880:82888	10999400	1	True				
ANR	10999608	PrimaryExpression	0		10999400	0					
ANR	10999609	IfStatement	"if ( ! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""DecodeLMN"" ) )"		10999400	12					
ANR	10999610	Condition	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""DecodeLMN"" )"	2599:8:82898:82964	10999400	0	True				
ANR	10999611	UnaryOperationExpression	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""DecodeLMN"" )"		10999400	0					
ANR	10999612	UnaryOperator	!		10999400	0					
ANR	10999613	CallExpression	"comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""DecodeLMN"" )"		10999400	1					
ANR	10999614	Callee	comparedictkey		10999400	0					
ANR	10999615	Identifier	comparedictkey		10999400	0					
ANR	10999616	ArgumentList	i_ctx_p		10999400	1					
ANR	10999617	Argument	i_ctx_p		10999400	0					
ANR	10999618	Identifier	i_ctx_p		10999400	0					
ANR	10999619	Argument	& CIEdict1		10999400	1					
ANR	10999620	UnaryOperationExpression	& CIEdict1		10999400	0					
ANR	10999621	UnaryOperator	&		10999400	0					
ANR	10999622	Identifier	CIEdict1		10999400	1					
ANR	10999623	Argument	& CIEdict2		10999400	2					
ANR	10999624	UnaryOperationExpression	& CIEdict2		10999400	0					
ANR	10999625	UnaryOperator	&		10999400	0					
ANR	10999626	Identifier	CIEdict2		10999400	1					
ANR	10999627	Argument	"( char * ) ""DecodeLMN"""		10999400	3					
ANR	10999628	CastExpression	"( char * ) ""DecodeLMN"""		10999400	0					
ANR	10999629	CastTarget	char *		10999400	0					
ANR	10999630	PrimaryExpression	"""DecodeLMN"""		10999400	1					
ANR	10999631	ReturnStatement	return 0 ;	2600:8:82975:82983	10999400	1	True				
ANR	10999632	PrimaryExpression	0		10999400	0					
ANR	10999633	IfStatement	"if ( ! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""MatrixMN"" ) )"		10999400	13					
ANR	10999634	Condition	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""MatrixMN"" )"	2601:8:82993:83058	10999400	0	True				
ANR	10999635	UnaryOperationExpression	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""MatrixMN"" )"		10999400	0					
ANR	10999636	UnaryOperator	!		10999400	0					
ANR	10999637	CallExpression	"comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""MatrixMN"" )"		10999400	1					
ANR	10999638	Callee	comparedictkey		10999400	0					
ANR	10999639	Identifier	comparedictkey		10999400	0					
ANR	10999640	ArgumentList	i_ctx_p		10999400	1					
ANR	10999641	Argument	i_ctx_p		10999400	0					
ANR	10999642	Identifier	i_ctx_p		10999400	0					
ANR	10999643	Argument	& CIEdict1		10999400	1					
ANR	10999644	UnaryOperationExpression	& CIEdict1		10999400	0					
ANR	10999645	UnaryOperator	&		10999400	0					
ANR	10999646	Identifier	CIEdict1		10999400	1					
ANR	10999647	Argument	& CIEdict2		10999400	2					
ANR	10999648	UnaryOperationExpression	& CIEdict2		10999400	0					
ANR	10999649	UnaryOperator	&		10999400	0					
ANR	10999650	Identifier	CIEdict2		10999400	1					
ANR	10999651	Argument	"( char * ) ""MatrixMN"""		10999400	3					
ANR	10999652	CastExpression	"( char * ) ""MatrixMN"""		10999400	0					
ANR	10999653	CastTarget	char *		10999400	0					
ANR	10999654	PrimaryExpression	"""MatrixMN"""		10999400	1					
ANR	10999655	ReturnStatement	return 0 ;	2602:8:83069:83077	10999400	1	True				
ANR	10999656	PrimaryExpression	0		10999400	0					
ANR	10999657	ReturnStatement	return 1 ;	2603:4:83083:83091	10999400	14	True				
ANR	10999658	PrimaryExpression	1		10999400	0					
ANR	10999659	ReturnType	static int		10999400	1					
ANR	10999660	Identifier	cieabccompareproc		10999400	2					
ANR	10999661	ParameterList	"i_ctx_t * i_ctx_p , ref * space , ref * testspace"		10999400	3					
ANR	10999662	Parameter	i_ctx_t * i_ctx_p	2576:29:82045:82060	10999400	0	True				
ANR	10999663	ParameterType	i_ctx_t *		10999400	0					
ANR	10999664	Identifier	i_ctx_p		10999400	1					
ANR	10999665	Parameter	ref * space	2576:47:82063:82072	10999400	1	True				
ANR	10999666	ParameterType	ref *		10999400	0					
ANR	10999667	Identifier	space		10999400	1					
ANR	10999668	Parameter	ref * testspace	2576:59:82075:82088	10999400	2	True				
ANR	10999669	ParameterType	ref *		10999400	0					
ANR	10999670	Identifier	testspace		10999400	1					
ANR	10999671	CFGEntryNode	ENTRY		10999400		True				
ANR	10999672	CFGExitNode	EXIT		10999400		True				
ANR	10999673	Symbol	code		10999400						
ANR	10999674	Symbol	testspace		10999400						
ANR	10999675	Symbol	i_ctx_p		10999400						
ANR	10999676	Symbol	array_get		10999400						
ANR	10999677	Symbol	CIEdict1		10999400						
ANR	10999678	Symbol	CIEdict2		10999400						
ANR	10999679	Symbol	imemory		10999400						
ANR	10999680	Symbol	comparedictkey		10999400						
ANR	10999681	Symbol	& CIEdict2		10999400						
ANR	10999682	Symbol	& CIEdict1		10999400						
ANR	10999683	Symbol	space		10999400						
ANR	10999684	Function	hashciedefspace	2607:0:83114:84561							
ANR	10999685	FunctionDef	"hashciedefspace (i_ctx_t * i_ctx_p , ref * space , gs_md5_state_t * md5)"		10999684	0					
ANR	10999686	CompoundStatement		2608:0:83192:84561	10999684	0					
ANR	10999687	IdentifierDeclStatement	int code = 0 ;	2609:4:83198:83210	10999684	0	True				
ANR	10999688	IdentifierDecl	code = 0		10999684	0					
ANR	10999689	IdentifierDeclType	int		10999684	0					
ANR	10999690	Identifier	code		10999684	1					
ANR	10999691	AssignmentExpression	code = 0		10999684	2		=			
ANR	10999692	Identifier	code		10999684	0					
ANR	10999693	PrimaryExpression	0		10999684	1					
ANR	10999694	IdentifierDeclStatement	"ref CIEdict1 , spacename ;"	2610:4:83216:83239	10999684	1	True				
ANR	10999695	IdentifierDecl	CIEdict1		10999684	0					
ANR	10999696	IdentifierDeclType	ref		10999684	0					
ANR	10999697	Identifier	CIEdict1		10999684	1					
ANR	10999698	IdentifierDecl	spacename		10999684	1					
ANR	10999699	IdentifierDeclType	ref		10999684	0					
ANR	10999700	Identifier	spacename		10999684	1					
ANR	10999701	ExpressionStatement	"code = array_get ( imemory , space , 0 , & spacename )"	2612:4:83246:83293	10999684	2	True				
ANR	10999702	AssignmentExpression	"code = array_get ( imemory , space , 0 , & spacename )"		10999684	0		=			
ANR	10999703	Identifier	code		10999684	0					
ANR	10999704	CallExpression	"array_get ( imemory , space , 0 , & spacename )"		10999684	1					
ANR	10999705	Callee	array_get		10999684	0					
ANR	10999706	Identifier	array_get		10999684	0					
ANR	10999707	ArgumentList	imemory		10999684	1					
ANR	10999708	Argument	imemory		10999684	0					
ANR	10999709	Identifier	imemory		10999684	0					
ANR	10999710	Argument	space		10999684	1					
ANR	10999711	Identifier	space		10999684	0					
ANR	10999712	Argument	0		10999684	2					
ANR	10999713	PrimaryExpression	0		10999684	0					
ANR	10999714	Argument	& spacename		10999684	3					
ANR	10999715	UnaryOperationExpression	& spacename		10999684	0					
ANR	10999716	UnaryOperator	&		10999684	0					
ANR	10999717	Identifier	spacename		10999684	1					
ANR	10999718	IfStatement	if ( code < 0 )		10999684	3					
ANR	10999719	Condition	code < 0	2613:8:83303:83310	10999684	0	True				
ANR	10999720	RelationalExpression	code < 0		10999684	0		<			
ANR	10999721	Identifier	code		10999684	0					
ANR	10999722	PrimaryExpression	0		10999684	1					
ANR	10999723	ReturnStatement	return 0 ;	2614:8:83321:83329	10999684	1	True				
ANR	10999724	PrimaryExpression	0		10999684	0					
ANR	10999725	ExpressionStatement	"gs_md5_append ( md5 , ( const gs_md5_byte_t * ) & spacename . value . pname , sizeof ( spacename . value . pname ) )"	2615:4:83335:83431	10999684	4	True				
ANR	10999726	CallExpression	"gs_md5_append ( md5 , ( const gs_md5_byte_t * ) & spacename . value . pname , sizeof ( spacename . value . pname ) )"		10999684	0					
ANR	10999727	Callee	gs_md5_append		10999684	0					
ANR	10999728	Identifier	gs_md5_append		10999684	0					
ANR	10999729	ArgumentList	md5		10999684	1					
ANR	10999730	Argument	md5		10999684	0					
ANR	10999731	Identifier	md5		10999684	0					
ANR	10999732	Argument	( const gs_md5_byte_t * ) & spacename . value . pname		10999684	1					
ANR	10999733	CastExpression	( const gs_md5_byte_t * ) & spacename . value . pname		10999684	0					
ANR	10999734	CastTarget	const gs_md5_byte_t *		10999684	0					
ANR	10999735	UnaryOperationExpression	& spacename . value . pname		10999684	1					
ANR	10999736	UnaryOperator	&		10999684	0					
ANR	10999737	MemberAccess	spacename . value . pname		10999684	1					
ANR	10999738	MemberAccess	spacename . value		10999684	0					
ANR	10999739	Identifier	spacename		10999684	0					
ANR	10999740	Identifier	value		10999684	1					
ANR	10999741	Identifier	pname		10999684	1					
ANR	10999742	Argument	sizeof ( spacename . value . pname )		10999684	2					
ANR	10999743	SizeofExpression	sizeof ( spacename . value . pname )		10999684	0					
ANR	10999744	Sizeof	sizeof		10999684	0					
ANR	10999745	MemberAccess	spacename . value . pname		10999684	1					
ANR	10999746	MemberAccess	spacename . value		10999684	0					
ANR	10999747	Identifier	spacename		10999684	0					
ANR	10999748	Identifier	value		10999684	1					
ANR	10999749	Identifier	pname		10999684	1					
ANR	10999750	ExpressionStatement	"code = array_get ( imemory , space , 1 , & CIEdict1 )"	2617:4:83438:83484	10999684	5	True				
ANR	10999751	AssignmentExpression	"code = array_get ( imemory , space , 1 , & CIEdict1 )"		10999684	0		=			
ANR	10999752	Identifier	code		10999684	0					
ANR	10999753	CallExpression	"array_get ( imemory , space , 1 , & CIEdict1 )"		10999684	1					
ANR	10999754	Callee	array_get		10999684	0					
ANR	10999755	Identifier	array_get		10999684	0					
ANR	10999756	ArgumentList	imemory		10999684	1					
ANR	10999757	Argument	imemory		10999684	0					
ANR	10999758	Identifier	imemory		10999684	0					
ANR	10999759	Argument	space		10999684	1					
ANR	10999760	Identifier	space		10999684	0					
ANR	10999761	Argument	1		10999684	2					
ANR	10999762	PrimaryExpression	1		10999684	0					
ANR	10999763	Argument	& CIEdict1		10999684	3					
ANR	10999764	UnaryOperationExpression	& CIEdict1		10999684	0					
ANR	10999765	UnaryOperator	&		10999684	0					
ANR	10999766	Identifier	CIEdict1		10999684	1					
ANR	10999767	IfStatement	if ( code < 0 )		10999684	6					
ANR	10999768	Condition	code < 0	2618:8:83494:83501	10999684	0	True				
ANR	10999769	RelationalExpression	code < 0		10999684	0		<			
ANR	10999770	Identifier	code		10999684	0					
ANR	10999771	PrimaryExpression	0		10999684	1					
ANR	10999772	ReturnStatement	return 0 ;	2619:8:83512:83520	10999684	1	True				
ANR	10999773	PrimaryExpression	0		10999684	0					
ANR	10999774	IfStatement	"if ( ! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""WhitePoint"" , md5 ) )"		10999684	7					
ANR	10999775	Condition	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""WhitePoint"" , md5 )"	2620:8:83530:83588	10999684	0	True				
ANR	10999776	UnaryOperationExpression	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""WhitePoint"" , md5 )"		10999684	0					
ANR	10999777	UnaryOperator	!		10999684	0					
ANR	10999778	CallExpression	"hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""WhitePoint"" , md5 )"		10999684	1					
ANR	10999779	Callee	hashdictkey		10999684	0					
ANR	10999780	Identifier	hashdictkey		10999684	0					
ANR	10999781	ArgumentList	i_ctx_p		10999684	1					
ANR	10999782	Argument	i_ctx_p		10999684	0					
ANR	10999783	Identifier	i_ctx_p		10999684	0					
ANR	10999784	Argument	& CIEdict1		10999684	1					
ANR	10999785	UnaryOperationExpression	& CIEdict1		10999684	0					
ANR	10999786	UnaryOperator	&		10999684	0					
ANR	10999787	Identifier	CIEdict1		10999684	1					
ANR	10999788	Argument	"( char * ) ""WhitePoint"""		10999684	2					
ANR	10999789	CastExpression	"( char * ) ""WhitePoint"""		10999684	0					
ANR	10999790	CastTarget	char *		10999684	0					
ANR	10999791	PrimaryExpression	"""WhitePoint"""		10999684	1					
ANR	10999792	Argument	md5		10999684	3					
ANR	10999793	Identifier	md5		10999684	0					
ANR	10999794	ReturnStatement	return 0 ;	2621:8:83599:83607	10999684	1	True				
ANR	10999795	PrimaryExpression	0		10999684	0					
ANR	10999796	IfStatement	"if ( ! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""BlackPoint"" , md5 ) )"		10999684	8					
ANR	10999797	Condition	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""BlackPoint"" , md5 )"	2622:8:83617:83675	10999684	0	True				
ANR	10999798	UnaryOperationExpression	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""BlackPoint"" , md5 )"		10999684	0					
ANR	10999799	UnaryOperator	!		10999684	0					
ANR	10999800	CallExpression	"hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""BlackPoint"" , md5 )"		10999684	1					
ANR	10999801	Callee	hashdictkey		10999684	0					
ANR	10999802	Identifier	hashdictkey		10999684	0					
ANR	10999803	ArgumentList	i_ctx_p		10999684	1					
ANR	10999804	Argument	i_ctx_p		10999684	0					
ANR	10999805	Identifier	i_ctx_p		10999684	0					
ANR	10999806	Argument	& CIEdict1		10999684	1					
ANR	10999807	UnaryOperationExpression	& CIEdict1		10999684	0					
ANR	10999808	UnaryOperator	&		10999684	0					
ANR	10999809	Identifier	CIEdict1		10999684	1					
ANR	10999810	Argument	"( char * ) ""BlackPoint"""		10999684	2					
ANR	10999811	CastExpression	"( char * ) ""BlackPoint"""		10999684	0					
ANR	10999812	CastTarget	char *		10999684	0					
ANR	10999813	PrimaryExpression	"""BlackPoint"""		10999684	1					
ANR	10999814	Argument	md5		10999684	3					
ANR	10999815	Identifier	md5		10999684	0					
ANR	10999816	ReturnStatement	return 0 ;	2623:8:83686:83694	10999684	1	True				
ANR	10999817	PrimaryExpression	0		10999684	0					
ANR	10999818	IfStatement	"if ( ! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""RangeABC"" , md5 ) )"		10999684	9					
ANR	10999819	Condition	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""RangeABC"" , md5 )"	2624:8:83704:83760	10999684	0	True				
ANR	10999820	UnaryOperationExpression	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""RangeABC"" , md5 )"		10999684	0					
ANR	10999821	UnaryOperator	!		10999684	0					
ANR	10999822	CallExpression	"hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""RangeABC"" , md5 )"		10999684	1					
ANR	10999823	Callee	hashdictkey		10999684	0					
ANR	10999824	Identifier	hashdictkey		10999684	0					
ANR	10999825	ArgumentList	i_ctx_p		10999684	1					
ANR	10999826	Argument	i_ctx_p		10999684	0					
ANR	10999827	Identifier	i_ctx_p		10999684	0					
ANR	10999828	Argument	& CIEdict1		10999684	1					
ANR	10999829	UnaryOperationExpression	& CIEdict1		10999684	0					
ANR	10999830	UnaryOperator	&		10999684	0					
ANR	10999831	Identifier	CIEdict1		10999684	1					
ANR	10999832	Argument	"( char * ) ""RangeABC"""		10999684	2					
ANR	10999833	CastExpression	"( char * ) ""RangeABC"""		10999684	0					
ANR	10999834	CastTarget	char *		10999684	0					
ANR	10999835	PrimaryExpression	"""RangeABC"""		10999684	1					
ANR	10999836	Argument	md5		10999684	3					
ANR	10999837	Identifier	md5		10999684	0					
ANR	10999838	ReturnStatement	return 0 ;	2625:8:83771:83779	10999684	1	True				
ANR	10999839	PrimaryExpression	0		10999684	0					
ANR	10999840	IfStatement	"if ( ! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""DecodeABC"" , md5 ) )"		10999684	10					
ANR	10999841	Condition	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""DecodeABC"" , md5 )"	2626:8:83789:83846	10999684	0	True				
ANR	10999842	UnaryOperationExpression	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""DecodeABC"" , md5 )"		10999684	0					
ANR	10999843	UnaryOperator	!		10999684	0					
ANR	10999844	CallExpression	"hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""DecodeABC"" , md5 )"		10999684	1					
ANR	10999845	Callee	hashdictkey		10999684	0					
ANR	10999846	Identifier	hashdictkey		10999684	0					
ANR	10999847	ArgumentList	i_ctx_p		10999684	1					
ANR	10999848	Argument	i_ctx_p		10999684	0					
ANR	10999849	Identifier	i_ctx_p		10999684	0					
ANR	10999850	Argument	& CIEdict1		10999684	1					
ANR	10999851	UnaryOperationExpression	& CIEdict1		10999684	0					
ANR	10999852	UnaryOperator	&		10999684	0					
ANR	10999853	Identifier	CIEdict1		10999684	1					
ANR	10999854	Argument	"( char * ) ""DecodeABC"""		10999684	2					
ANR	10999855	CastExpression	"( char * ) ""DecodeABC"""		10999684	0					
ANR	10999856	CastTarget	char *		10999684	0					
ANR	10999857	PrimaryExpression	"""DecodeABC"""		10999684	1					
ANR	10999858	Argument	md5		10999684	3					
ANR	10999859	Identifier	md5		10999684	0					
ANR	10999860	ReturnStatement	return 0 ;	2627:8:83857:83865	10999684	1	True				
ANR	10999861	PrimaryExpression	0		10999684	0					
ANR	10999862	IfStatement	"if ( ! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""MatrixABC"" , md5 ) )"		10999684	11					
ANR	10999863	Condition	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""MatrixABC"" , md5 )"	2628:8:83875:83932	10999684	0	True				
ANR	10999864	UnaryOperationExpression	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""MatrixABC"" , md5 )"		10999684	0					
ANR	10999865	UnaryOperator	!		10999684	0					
ANR	10999866	CallExpression	"hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""MatrixABC"" , md5 )"		10999684	1					
ANR	10999867	Callee	hashdictkey		10999684	0					
ANR	10999868	Identifier	hashdictkey		10999684	0					
ANR	10999869	ArgumentList	i_ctx_p		10999684	1					
ANR	10999870	Argument	i_ctx_p		10999684	0					
ANR	10999871	Identifier	i_ctx_p		10999684	0					
ANR	10999872	Argument	& CIEdict1		10999684	1					
ANR	10999873	UnaryOperationExpression	& CIEdict1		10999684	0					
ANR	10999874	UnaryOperator	&		10999684	0					
ANR	10999875	Identifier	CIEdict1		10999684	1					
ANR	10999876	Argument	"( char * ) ""MatrixABC"""		10999684	2					
ANR	10999877	CastExpression	"( char * ) ""MatrixABC"""		10999684	0					
ANR	10999878	CastTarget	char *		10999684	0					
ANR	10999879	PrimaryExpression	"""MatrixABC"""		10999684	1					
ANR	10999880	Argument	md5		10999684	3					
ANR	10999881	Identifier	md5		10999684	0					
ANR	10999882	ReturnStatement	return 0 ;	2629:8:83943:83951	10999684	1	True				
ANR	10999883	PrimaryExpression	0		10999684	0					
ANR	10999884	IfStatement	"if ( ! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""RangeLMN"" , md5 ) )"		10999684	12					
ANR	10999885	Condition	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""RangeLMN"" , md5 )"	2630:8:83961:84017	10999684	0	True				
ANR	10999886	UnaryOperationExpression	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""RangeLMN"" , md5 )"		10999684	0					
ANR	10999887	UnaryOperator	!		10999684	0					
ANR	10999888	CallExpression	"hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""RangeLMN"" , md5 )"		10999684	1					
ANR	10999889	Callee	hashdictkey		10999684	0					
ANR	10999890	Identifier	hashdictkey		10999684	0					
ANR	10999891	ArgumentList	i_ctx_p		10999684	1					
ANR	10999892	Argument	i_ctx_p		10999684	0					
ANR	10999893	Identifier	i_ctx_p		10999684	0					
ANR	10999894	Argument	& CIEdict1		10999684	1					
ANR	10999895	UnaryOperationExpression	& CIEdict1		10999684	0					
ANR	10999896	UnaryOperator	&		10999684	0					
ANR	10999897	Identifier	CIEdict1		10999684	1					
ANR	10999898	Argument	"( char * ) ""RangeLMN"""		10999684	2					
ANR	10999899	CastExpression	"( char * ) ""RangeLMN"""		10999684	0					
ANR	10999900	CastTarget	char *		10999684	0					
ANR	10999901	PrimaryExpression	"""RangeLMN"""		10999684	1					
ANR	10999902	Argument	md5		10999684	3					
ANR	10999903	Identifier	md5		10999684	0					
ANR	10999904	ReturnStatement	return 0 ;	2631:8:84028:84036	10999684	1	True				
ANR	10999905	PrimaryExpression	0		10999684	0					
ANR	10999906	IfStatement	"if ( ! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""DecodeLMN"" , md5 ) )"		10999684	13					
ANR	10999907	Condition	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""DecodeLMN"" , md5 )"	2632:8:84046:84103	10999684	0	True				
ANR	10999908	UnaryOperationExpression	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""DecodeLMN"" , md5 )"		10999684	0					
ANR	10999909	UnaryOperator	!		10999684	0					
ANR	10999910	CallExpression	"hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""DecodeLMN"" , md5 )"		10999684	1					
ANR	10999911	Callee	hashdictkey		10999684	0					
ANR	10999912	Identifier	hashdictkey		10999684	0					
ANR	10999913	ArgumentList	i_ctx_p		10999684	1					
ANR	10999914	Argument	i_ctx_p		10999684	0					
ANR	10999915	Identifier	i_ctx_p		10999684	0					
ANR	10999916	Argument	& CIEdict1		10999684	1					
ANR	10999917	UnaryOperationExpression	& CIEdict1		10999684	0					
ANR	10999918	UnaryOperator	&		10999684	0					
ANR	10999919	Identifier	CIEdict1		10999684	1					
ANR	10999920	Argument	"( char * ) ""DecodeLMN"""		10999684	2					
ANR	10999921	CastExpression	"( char * ) ""DecodeLMN"""		10999684	0					
ANR	10999922	CastTarget	char *		10999684	0					
ANR	10999923	PrimaryExpression	"""DecodeLMN"""		10999684	1					
ANR	10999924	Argument	md5		10999684	3					
ANR	10999925	Identifier	md5		10999684	0					
ANR	10999926	ReturnStatement	return 0 ;	2633:8:84114:84122	10999684	1	True				
ANR	10999927	PrimaryExpression	0		10999684	0					
ANR	10999928	IfStatement	"if ( ! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""MatrixMN"" , md5 ) )"		10999684	14					
ANR	10999929	Condition	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""MatrixMN"" , md5 )"	2634:8:84132:84188	10999684	0	True				
ANR	10999930	UnaryOperationExpression	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""MatrixMN"" , md5 )"		10999684	0					
ANR	10999931	UnaryOperator	!		10999684	0					
ANR	10999932	CallExpression	"hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""MatrixMN"" , md5 )"		10999684	1					
ANR	10999933	Callee	hashdictkey		10999684	0					
ANR	10999934	Identifier	hashdictkey		10999684	0					
ANR	10999935	ArgumentList	i_ctx_p		10999684	1					
ANR	10999936	Argument	i_ctx_p		10999684	0					
ANR	10999937	Identifier	i_ctx_p		10999684	0					
ANR	10999938	Argument	& CIEdict1		10999684	1					
ANR	10999939	UnaryOperationExpression	& CIEdict1		10999684	0					
ANR	10999940	UnaryOperator	&		10999684	0					
ANR	10999941	Identifier	CIEdict1		10999684	1					
ANR	10999942	Argument	"( char * ) ""MatrixMN"""		10999684	2					
ANR	10999943	CastExpression	"( char * ) ""MatrixMN"""		10999684	0					
ANR	10999944	CastTarget	char *		10999684	0					
ANR	10999945	PrimaryExpression	"""MatrixMN"""		10999684	1					
ANR	10999946	Argument	md5		10999684	3					
ANR	10999947	Identifier	md5		10999684	0					
ANR	10999948	ReturnStatement	return 0 ;	2635:8:84199:84207	10999684	1	True				
ANR	10999949	PrimaryExpression	0		10999684	0					
ANR	10999950	IfStatement	"if ( ! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""RangeDEF"" , md5 ) )"		10999684	15					
ANR	10999951	Condition	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""RangeDEF"" , md5 )"	2636:8:84217:84273	10999684	0	True				
ANR	10999952	UnaryOperationExpression	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""RangeDEF"" , md5 )"		10999684	0					
ANR	10999953	UnaryOperator	!		10999684	0					
ANR	10999954	CallExpression	"hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""RangeDEF"" , md5 )"		10999684	1					
ANR	10999955	Callee	hashdictkey		10999684	0					
ANR	10999956	Identifier	hashdictkey		10999684	0					
ANR	10999957	ArgumentList	i_ctx_p		10999684	1					
ANR	10999958	Argument	i_ctx_p		10999684	0					
ANR	10999959	Identifier	i_ctx_p		10999684	0					
ANR	10999960	Argument	& CIEdict1		10999684	1					
ANR	10999961	UnaryOperationExpression	& CIEdict1		10999684	0					
ANR	10999962	UnaryOperator	&		10999684	0					
ANR	10999963	Identifier	CIEdict1		10999684	1					
ANR	10999964	Argument	"( char * ) ""RangeDEF"""		10999684	2					
ANR	10999965	CastExpression	"( char * ) ""RangeDEF"""		10999684	0					
ANR	10999966	CastTarget	char *		10999684	0					
ANR	10999967	PrimaryExpression	"""RangeDEF"""		10999684	1					
ANR	10999968	Argument	md5		10999684	3					
ANR	10999969	Identifier	md5		10999684	0					
ANR	10999970	ReturnStatement	return 0 ;	2637:8:84284:84292	10999684	1	True				
ANR	10999971	PrimaryExpression	0		10999684	0					
ANR	10999972	IfStatement	"if ( ! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""DecodeDEF"" , md5 ) )"		10999684	16					
ANR	10999973	Condition	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""DecodeDEF"" , md5 )"	2638:8:84302:84359	10999684	0	True				
ANR	10999974	UnaryOperationExpression	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""DecodeDEF"" , md5 )"		10999684	0					
ANR	10999975	UnaryOperator	!		10999684	0					
ANR	10999976	CallExpression	"hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""DecodeDEF"" , md5 )"		10999684	1					
ANR	10999977	Callee	hashdictkey		10999684	0					
ANR	10999978	Identifier	hashdictkey		10999684	0					
ANR	10999979	ArgumentList	i_ctx_p		10999684	1					
ANR	10999980	Argument	i_ctx_p		10999684	0					
ANR	10999981	Identifier	i_ctx_p		10999684	0					
ANR	10999982	Argument	& CIEdict1		10999684	1					
ANR	10999983	UnaryOperationExpression	& CIEdict1		10999684	0					
ANR	10999984	UnaryOperator	&		10999684	0					
ANR	10999985	Identifier	CIEdict1		10999684	1					
ANR	10999986	Argument	"( char * ) ""DecodeDEF"""		10999684	2					
ANR	10999987	CastExpression	"( char * ) ""DecodeDEF"""		10999684	0					
ANR	10999988	CastTarget	char *		10999684	0					
ANR	10999989	PrimaryExpression	"""DecodeDEF"""		10999684	1					
ANR	10999990	Argument	md5		10999684	3					
ANR	10999991	Identifier	md5		10999684	0					
ANR	10999992	ReturnStatement	return 0 ;	2639:8:84370:84378	10999684	1	True				
ANR	10999993	PrimaryExpression	0		10999684	0					
ANR	10999994	IfStatement	"if ( ! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""RangeHIJ"" , md5 ) )"		10999684	17					
ANR	10999995	Condition	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""RangeHIJ"" , md5 )"	2640:8:84388:84444	10999684	0	True				
ANR	10999996	UnaryOperationExpression	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""RangeHIJ"" , md5 )"		10999684	0					
ANR	10999997	UnaryOperator	!		10999684	0					
ANR	10999998	CallExpression	"hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""RangeHIJ"" , md5 )"		10999684	1					
ANR	10999999	Callee	hashdictkey		10999684	0					
ANR	11000000	Identifier	hashdictkey		10999684	0					
ANR	11000001	ArgumentList	i_ctx_p		10999684	1					
ANR	11000002	Argument	i_ctx_p		10999684	0					
ANR	11000003	Identifier	i_ctx_p		10999684	0					
ANR	11000004	Argument	& CIEdict1		10999684	1					
ANR	11000005	UnaryOperationExpression	& CIEdict1		10999684	0					
ANR	11000006	UnaryOperator	&		10999684	0					
ANR	11000007	Identifier	CIEdict1		10999684	1					
ANR	11000008	Argument	"( char * ) ""RangeHIJ"""		10999684	2					
ANR	11000009	CastExpression	"( char * ) ""RangeHIJ"""		10999684	0					
ANR	11000010	CastTarget	char *		10999684	0					
ANR	11000011	PrimaryExpression	"""RangeHIJ"""		10999684	1					
ANR	11000012	Argument	md5		10999684	3					
ANR	11000013	Identifier	md5		10999684	0					
ANR	11000014	ReturnStatement	return 0 ;	2641:8:84455:84463	10999684	1	True				
ANR	11000015	PrimaryExpression	0		10999684	0					
ANR	11000016	IfStatement	"if ( ! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""Table"" , md5 ) )"		10999684	18					
ANR	11000017	Condition	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""Table"" , md5 )"	2642:8:84473:84526	10999684	0	True				
ANR	11000018	UnaryOperationExpression	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""Table"" , md5 )"		10999684	0					
ANR	11000019	UnaryOperator	!		10999684	0					
ANR	11000020	CallExpression	"hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""Table"" , md5 )"		10999684	1					
ANR	11000021	Callee	hashdictkey		10999684	0					
ANR	11000022	Identifier	hashdictkey		10999684	0					
ANR	11000023	ArgumentList	i_ctx_p		10999684	1					
ANR	11000024	Argument	i_ctx_p		10999684	0					
ANR	11000025	Identifier	i_ctx_p		10999684	0					
ANR	11000026	Argument	& CIEdict1		10999684	1					
ANR	11000027	UnaryOperationExpression	& CIEdict1		10999684	0					
ANR	11000028	UnaryOperator	&		10999684	0					
ANR	11000029	Identifier	CIEdict1		10999684	1					
ANR	11000030	Argument	"( char * ) ""Table"""		10999684	2					
ANR	11000031	CastExpression	"( char * ) ""Table"""		10999684	0					
ANR	11000032	CastTarget	char *		10999684	0					
ANR	11000033	PrimaryExpression	"""Table"""		10999684	1					
ANR	11000034	Argument	md5		10999684	3					
ANR	11000035	Identifier	md5		10999684	0					
ANR	11000036	ReturnStatement	return 0 ;	2643:8:84537:84545	10999684	1	True				
ANR	11000037	PrimaryExpression	0		10999684	0					
ANR	11000038	ReturnStatement	return 1 ;	2644:4:84551:84559	10999684	19	True				
ANR	11000039	PrimaryExpression	1		10999684	0					
ANR	11000040	ReturnType	static int		10999684	1					
ANR	11000041	Identifier	hashciedefspace		10999684	2					
ANR	11000042	ParameterList	"i_ctx_t * i_ctx_p , ref * space , gs_md5_state_t * md5"		10999684	3					
ANR	11000043	Parameter	i_ctx_t * i_ctx_p	2607:27:83141:83156	10999684	0	True				
ANR	11000044	ParameterType	i_ctx_t *		10999684	0					
ANR	11000045	Identifier	i_ctx_p		10999684	1					
ANR	11000046	Parameter	ref * space	2607:45:83159:83168	10999684	1	True				
ANR	11000047	ParameterType	ref *		10999684	0					
ANR	11000048	Identifier	space		10999684	1					
ANR	11000049	Parameter	gs_md5_state_t * md5	2607:57:83171:83189	10999684	2	True				
ANR	11000050	ParameterType	gs_md5_state_t *		10999684	0					
ANR	11000051	Identifier	md5		10999684	1					
ANR	11000052	CFGEntryNode	ENTRY		10999684		True				
ANR	11000053	CFGExitNode	EXIT		10999684		True				
ANR	11000054	Symbol	spacename		10999684						
ANR	11000055	Symbol	hashdictkey		10999684						
ANR	11000056	Symbol	code		10999684						
ANR	11000057	Symbol	array_get		10999684						
ANR	11000058	Symbol	& spacename		10999684						
ANR	11000059	Symbol	& CIEdict1		10999684						
ANR	11000060	Symbol	space		10999684						
ANR	11000061	Symbol	spacename . value . pname		10999684						
ANR	11000062	Symbol	i_ctx_p		10999684						
ANR	11000063	Symbol	& spacename . value . pname		10999684						
ANR	11000064	Symbol	spacename . value		10999684						
ANR	11000065	Symbol	& spacename . value		10999684						
ANR	11000066	Symbol	CIEdict1		10999684						
ANR	11000067	Symbol	imemory		10999684						
ANR	11000068	Symbol	md5		10999684						
ANR	11000069	Function	setciedefspace	2647:0:84564:86316							
ANR	11000070	FunctionDef	"setciedefspace (i_ctx_t * i_ctx_p , ref * r , int * stage , int * cont , int CIESubst)"		11000069	0					
ANR	11000071	CompoundStatement		2648:0:84654:86316	11000069	0					
ANR	11000072	IdentifierDeclStatement	int code = 0 ;	2649:4:84660:84672	11000069	0	True				
ANR	11000073	IdentifierDecl	code = 0		11000069	0					
ANR	11000074	IdentifierDeclType	int		11000069	0					
ANR	11000075	Identifier	code		11000069	1					
ANR	11000076	AssignmentExpression	code = 0		11000069	2		=			
ANR	11000077	Identifier	code		11000069	0					
ANR	11000078	PrimaryExpression	0		11000069	1					
ANR	11000079	IdentifierDeclStatement	"ref CIEDict , * nocie ;"	2650:4:84678:84697	11000069	1	True				
ANR	11000080	IdentifierDecl	CIEDict		11000069	0					
ANR	11000081	IdentifierDeclType	ref		11000069	0					
ANR	11000082	Identifier	CIEDict		11000069	1					
ANR	11000083	IdentifierDecl	* nocie		11000069	1					
ANR	11000084	IdentifierDeclType	ref *		11000069	0					
ANR	11000085	Identifier	nocie		11000069	1					
ANR	11000086	IdentifierDeclStatement	ulong dictkey ;	2651:4:84703:84716	11000069	2	True				
ANR	11000087	IdentifierDecl	dictkey		11000069	0					
ANR	11000088	IdentifierDeclType	ulong		11000069	0					
ANR	11000089	Identifier	dictkey		11000069	1					
ANR	11000090	IdentifierDeclStatement	gs_md5_state_t md5 ;	2652:4:84722:84740	11000069	3	True				
ANR	11000091	IdentifierDecl	md5		11000069	0					
ANR	11000092	IdentifierDeclType	gs_md5_state_t		11000069	0					
ANR	11000093	Identifier	md5		11000069	1					
ANR	11000094	IdentifierDeclStatement	byte key [ 16 ] ;	2653:4:84746:84758	11000069	4	True				
ANR	11000095	IdentifierDecl	key [ 16 ]		11000069	0					
ANR	11000096	IdentifierDeclType	byte [ 16 ]		11000069	0					
ANR	11000097	Identifier	key		11000069	1					
ANR	11000098	PrimaryExpression	16		11000069	2					
ANR	11000099	IfStatement	if ( i_ctx_p -> language_level < 3 )		11000069	5					
ANR	11000100	Condition	i_ctx_p -> language_level < 3	2655:8:84769:84795	11000069	0	True				
ANR	11000101	RelationalExpression	i_ctx_p -> language_level < 3		11000069	0		<			
ANR	11000102	PtrMemberAccess	i_ctx_p -> language_level		11000069	0					
ANR	11000103	Identifier	i_ctx_p		11000069	0					
ANR	11000104	Identifier	language_level		11000069	1					
ANR	11000105	PrimaryExpression	3		11000069	1					
ANR	11000106	ExpressionStatement	return_error ( gs_error_undefined )	2656:8:84806:84838	11000069	1	True				
ANR	11000107	CallExpression	return_error ( gs_error_undefined )		11000069	0					
ANR	11000108	Callee	return_error		11000069	0					
ANR	11000109	Identifier	return_error		11000069	0					
ANR	11000110	ArgumentList	gs_error_undefined		11000069	1					
ANR	11000111	Argument	gs_error_undefined		11000069	0					
ANR	11000112	Identifier	gs_error_undefined		11000069	0					
ANR	11000113	ExpressionStatement	"code = dict_find_string ( systemdict , ""NOCIE"" , & nocie )"	2658:4:84845:84897	11000069	6	True				
ANR	11000114	AssignmentExpression	"code = dict_find_string ( systemdict , ""NOCIE"" , & nocie )"		11000069	0		=			
ANR	11000115	Identifier	code		11000069	0					
ANR	11000116	CallExpression	"dict_find_string ( systemdict , ""NOCIE"" , & nocie )"		11000069	1					
ANR	11000117	Callee	dict_find_string		11000069	0					
ANR	11000118	Identifier	dict_find_string		11000069	0					
ANR	11000119	ArgumentList	systemdict		11000069	1					
ANR	11000120	Argument	systemdict		11000069	0					
ANR	11000121	Identifier	systemdict		11000069	0					
ANR	11000122	Argument	"""NOCIE"""		11000069	1					
ANR	11000123	PrimaryExpression	"""NOCIE"""		11000069	0					
ANR	11000124	Argument	& nocie		11000069	2					
ANR	11000125	UnaryOperationExpression	& nocie		11000069	0					
ANR	11000126	UnaryOperator	&		11000069	0					
ANR	11000127	Identifier	nocie		11000069	1					
ANR	11000128	IfStatement	if ( code > 0 )		11000069	7					
ANR	11000129	Condition	code > 0	2659:8:84907:84914	11000069	0	True				
ANR	11000130	RelationalExpression	code > 0		11000069	0		>			
ANR	11000131	Identifier	code		11000069	0					
ANR	11000132	PrimaryExpression	0		11000069	1					
ANR	11000133	CompoundStatement		12:18:262:262	11000069	1					
ANR	11000134	IfStatement	"if ( ! r_has_type ( nocie , t_boolean ) )"		11000069	0					
ANR	11000135	Condition	"! r_has_type ( nocie , t_boolean )"	2660:12:84931:84959	11000069	0	True				
ANR	11000136	UnaryOperationExpression	"! r_has_type ( nocie , t_boolean )"		11000069	0					
ANR	11000137	UnaryOperator	!		11000069	0					
ANR	11000138	CallExpression	"r_has_type ( nocie , t_boolean )"		11000069	1					
ANR	11000139	Callee	r_has_type		11000069	0					
ANR	11000140	Identifier	r_has_type		11000069	0					
ANR	11000141	ArgumentList	nocie		11000069	1					
ANR	11000142	Argument	nocie		11000069	0					
ANR	11000143	Identifier	nocie		11000069	0					
ANR	11000144	Argument	t_boolean		11000069	1					
ANR	11000145	Identifier	t_boolean		11000069	0					
ANR	11000146	ExpressionStatement	return_error ( gs_error_typecheck )	2661:12:84974:85006	11000069	1	True				
ANR	11000147	CallExpression	return_error ( gs_error_typecheck )		11000069	0					
ANR	11000148	Callee	return_error		11000069	0					
ANR	11000149	Identifier	return_error		11000069	0					
ANR	11000150	ArgumentList	gs_error_typecheck		11000069	1					
ANR	11000151	Argument	gs_error_typecheck		11000069	0					
ANR	11000152	Identifier	gs_error_typecheck		11000069	0					
ANR	11000153	IfStatement	if ( nocie -> value . boolval )		11000069	1					
ANR	11000154	Condition	nocie -> value . boolval	2662:12:85020:85039	11000069	0	True				
ANR	11000155	MemberAccess	nocie -> value . boolval		11000069	0					
ANR	11000156	PtrMemberAccess	nocie -> value		11000069	0					
ANR	11000157	Identifier	nocie		11000069	0					
ANR	11000158	Identifier	value		11000069	1					
ANR	11000159	Identifier	boolval		11000069	1					
ANR	11000160	ReturnStatement	"return setrgbspace ( i_ctx_p , r , stage , cont , 1 ) ;"	2663:12:85054:85100	11000069	1	True				
ANR	11000161	CallExpression	"setrgbspace ( i_ctx_p , r , stage , cont , 1 )"		11000069	0					
ANR	11000162	Callee	setrgbspace		11000069	0					
ANR	11000163	Identifier	setrgbspace		11000069	0					
ANR	11000164	ArgumentList	i_ctx_p		11000069	1					
ANR	11000165	Argument	i_ctx_p		11000069	0					
ANR	11000166	Identifier	i_ctx_p		11000069	0					
ANR	11000167	Argument	r		11000069	1					
ANR	11000168	Identifier	r		11000069	0					
ANR	11000169	Argument	stage		11000069	2					
ANR	11000170	Identifier	stage		11000069	0					
ANR	11000171	Argument	cont		11000069	3					
ANR	11000172	Identifier	cont		11000069	0					
ANR	11000173	Argument	1		11000069	4					
ANR	11000174	PrimaryExpression	1		11000069	0					
ANR	11000175	ExpressionStatement	* cont = 0	2666:4:85113:85122	11000069	8	True				
ANR	11000176	AssignmentExpression	* cont = 0		11000069	0		=			
ANR	11000177	UnaryOperationExpression	* cont		11000069	0					
ANR	11000178	UnaryOperator	*		11000069	0					
ANR	11000179	Identifier	cont		11000069	1					
ANR	11000180	PrimaryExpression	0		11000069	1					
ANR	11000181	ExpressionStatement	"code = array_get ( imemory , r , 1 , & CIEDict )"	2667:4:85128:85169	11000069	9	True				
ANR	11000182	AssignmentExpression	"code = array_get ( imemory , r , 1 , & CIEDict )"		11000069	0		=			
ANR	11000183	Identifier	code		11000069	0					
ANR	11000184	CallExpression	"array_get ( imemory , r , 1 , & CIEDict )"		11000069	1					
ANR	11000185	Callee	array_get		11000069	0					
ANR	11000186	Identifier	array_get		11000069	0					
ANR	11000187	ArgumentList	imemory		11000069	1					
ANR	11000188	Argument	imemory		11000069	0					
ANR	11000189	Identifier	imemory		11000069	0					
ANR	11000190	Argument	r		11000069	1					
ANR	11000191	Identifier	r		11000069	0					
ANR	11000192	Argument	1		11000069	2					
ANR	11000193	PrimaryExpression	1		11000069	0					
ANR	11000194	Argument	& CIEDict		11000069	3					
ANR	11000195	UnaryOperationExpression	& CIEDict		11000069	0					
ANR	11000196	UnaryOperator	&		11000069	0					
ANR	11000197	Identifier	CIEDict		11000069	1					
ANR	11000198	IfStatement	if ( code < 0 )		11000069	10					
ANR	11000199	Condition	code < 0	2668:8:85179:85186	11000069	0	True				
ANR	11000200	RelationalExpression	code < 0		11000069	0		<			
ANR	11000201	Identifier	code		11000069	0					
ANR	11000202	PrimaryExpression	0		11000069	1					
ANR	11000203	ReturnStatement	return code ;	2669:8:85197:85208	11000069	1	True				
ANR	11000204	Identifier	code		11000069	0					
ANR	11000205	IfStatement	if ( ( * stage ) > 0 )		11000069	11					
ANR	11000206	Condition	( * stage ) > 0	2670:8:85218:85229	11000069	0	True				
ANR	11000207	RelationalExpression	( * stage ) > 0		11000069	0		>			
ANR	11000208	UnaryOperationExpression	* stage		11000069	0					
ANR	11000209	UnaryOperator	*		11000069	0					
ANR	11000210	Identifier	stage		11000069	1					
ANR	11000211	PrimaryExpression	0		11000069	1					
ANR	11000212	CompoundStatement		25:8:615:620	11000069	1					
ANR	11000213	IdentifierDeclStatement	gs_client_color cc ;	2671:8:85242:85260	11000069	0	True				
ANR	11000214	IdentifierDecl	cc		11000069	0					
ANR	11000215	IdentifierDeclType	gs_client_color		11000069	0					
ANR	11000216	Identifier	cc		11000069	1					
ANR	11000217	IdentifierDeclStatement	int i ;	2672:8:85270:85275	11000069	1	True				
ANR	11000218	IdentifierDecl	i		11000069	0					
ANR	11000219	IdentifierDeclType	int		11000069	0					
ANR	11000220	Identifier	i		11000069	1					
ANR	11000221	ExpressionStatement	cc . pattern = 0x00	2674:8:85286:85303	11000069	2	True				
ANR	11000222	AssignmentExpression	cc . pattern = 0x00		11000069	0		=			
ANR	11000223	MemberAccess	cc . pattern		11000069	0					
ANR	11000224	Identifier	cc		11000069	0					
ANR	11000225	Identifier	pattern		11000069	1					
ANR	11000226	PrimaryExpression	0x00		11000069	1					
ANR	11000227	ForStatement	for ( i = 0 ; i < 3 ; i ++ )		11000069	3					
ANR	11000228	ForInit	i = 0 ;	2675:13:85318:85321	11000069	0	True				
ANR	11000229	AssignmentExpression	i = 0		11000069	0		=			
ANR	11000230	Identifier	i		11000069	0					
ANR	11000231	PrimaryExpression	0		11000069	1					
ANR	11000232	Condition	i < 3	2675:17:85322:85324	11000069	1	True				
ANR	11000233	RelationalExpression	i < 3		11000069	0		<			
ANR	11000234	Identifier	i		11000069	0					
ANR	11000235	PrimaryExpression	3		11000069	1					
ANR	11000236	PostIncDecOperationExpression	i ++	2675:21:85326:85328	11000069	2	True				
ANR	11000237	Identifier	i		11000069	0					
ANR	11000238	IncDec	++		11000069	1					
ANR	11000239	ExpressionStatement	cc . paint . values [ i ] = 0	2676:12:85343:85365	11000069	3	True				
ANR	11000240	AssignmentExpression	cc . paint . values [ i ] = 0		11000069	0		=			
ANR	11000241	ArrayIndexing	cc . paint . values [ i ]		11000069	0					
ANR	11000242	MemberAccess	cc . paint . values		11000069	0					
ANR	11000243	MemberAccess	cc . paint		11000069	0					
ANR	11000244	Identifier	cc		11000069	0					
ANR	11000245	Identifier	paint		11000069	1					
ANR	11000246	Identifier	values		11000069	1					
ANR	11000247	Identifier	i		11000069	1					
ANR	11000248	PrimaryExpression	0		11000069	1					
ANR	11000249	ExpressionStatement	"code = gs_setcolor ( igs , & cc )"	2677:8:85375:85403	11000069	4	True				
ANR	11000250	AssignmentExpression	"code = gs_setcolor ( igs , & cc )"		11000069	0		=			
ANR	11000251	Identifier	code		11000069	0					
ANR	11000252	CallExpression	"gs_setcolor ( igs , & cc )"		11000069	1					
ANR	11000253	Callee	gs_setcolor		11000069	0					
ANR	11000254	Identifier	gs_setcolor		11000069	0					
ANR	11000255	ArgumentList	igs		11000069	1					
ANR	11000256	Argument	igs		11000069	0					
ANR	11000257	Identifier	igs		11000069	0					
ANR	11000258	Argument	& cc		11000069	1					
ANR	11000259	UnaryOperationExpression	& cc		11000069	0					
ANR	11000260	UnaryOperator	&		11000069	0					
ANR	11000261	Identifier	cc		11000069	1					
ANR	11000262	ExpressionStatement	* stage = 0	2678:8:85413:85423	11000069	5	True				
ANR	11000263	AssignmentExpression	* stage = 0		11000069	0		=			
ANR	11000264	UnaryOperationExpression	* stage		11000069	0					
ANR	11000265	UnaryOperator	*		11000069	0					
ANR	11000266	Identifier	stage		11000069	1					
ANR	11000267	PrimaryExpression	0		11000069	1					
ANR	11000268	ReturnStatement	return code ;	2679:8:85433:85444	11000069	6	True				
ANR	11000269	Identifier	code		11000069	0					
ANR	11000270	ExpressionStatement	gs_md5_init ( & md5 )	2681:4:85456:85473	11000069	12	True				
ANR	11000271	CallExpression	gs_md5_init ( & md5 )		11000069	0					
ANR	11000272	Callee	gs_md5_init		11000069	0					
ANR	11000273	Identifier	gs_md5_init		11000069	0					
ANR	11000274	ArgumentList	& md5		11000069	1					
ANR	11000275	Argument	& md5		11000069	0					
ANR	11000276	UnaryOperationExpression	& md5		11000069	0					
ANR	11000277	UnaryOperator	&		11000069	0					
ANR	11000278	Identifier	md5		11000069	1					
ANR	11000279	ExpressionStatement	dictkey = 0	2686:4:85664:85675	11000069	13	True				
ANR	11000280	AssignmentExpression	dictkey = 0		11000069	0		=			
ANR	11000281	Identifier	dictkey		11000069	0					
ANR	11000282	PrimaryExpression	0		11000069	1					
ANR	11000283	IfStatement	"if ( hashciedefspace ( i_ctx_p , r , & md5 ) )"		11000069	14					
ANR	11000284	Condition	"hashciedefspace ( i_ctx_p , r , & md5 )"	2687:8:85685:85717	11000069	0	True				
ANR	11000285	CallExpression	"hashciedefspace ( i_ctx_p , r , & md5 )"		11000069	0					
ANR	11000286	Callee	hashciedefspace		11000069	0					
ANR	11000287	Identifier	hashciedefspace		11000069	0					
ANR	11000288	ArgumentList	i_ctx_p		11000069	1					
ANR	11000289	Argument	i_ctx_p		11000069	0					
ANR	11000290	Identifier	i_ctx_p		11000069	0					
ANR	11000291	Argument	r		11000069	1					
ANR	11000292	Identifier	r		11000069	0					
ANR	11000293	Argument	& md5		11000069	2					
ANR	11000294	UnaryOperationExpression	& md5		11000069	0					
ANR	11000295	UnaryOperator	&		11000069	0					
ANR	11000296	Identifier	md5		11000069	1					
ANR	11000297	CompoundStatement		40:43:1065:1065	11000069	1					
ANR	11000298	ExpressionStatement	"gs_md5_finish ( & md5 , key )"	2694:8:86074:86098	11000069	0	True				
ANR	11000299	CallExpression	"gs_md5_finish ( & md5 , key )"		11000069	0					
ANR	11000300	Callee	gs_md5_finish		11000069	0					
ANR	11000301	Identifier	gs_md5_finish		11000069	0					
ANR	11000302	ArgumentList	& md5		11000069	1					
ANR	11000303	Argument	& md5		11000069	0					
ANR	11000304	UnaryOperationExpression	& md5		11000069	0					
ANR	11000305	UnaryOperator	&		11000069	0					
ANR	11000306	Identifier	md5		11000069	1					
ANR	11000307	Argument	key		11000069	1					
ANR	11000308	Identifier	key		11000069	0					
ANR	11000309	ExpressionStatement	dictkey = * ( ulong * ) & key [ sizeof ( key ) - sizeof ( ulong ) ]	2695:8:86108:86161	11000069	1	True				
ANR	11000310	AssignmentExpression	dictkey = * ( ulong * ) & key [ sizeof ( key ) - sizeof ( ulong ) ]		11000069	0		=			
ANR	11000311	Identifier	dictkey		11000069	0					
ANR	11000312	UnaryOperationExpression	* ( ulong * ) & key [ sizeof ( key ) - sizeof ( ulong ) ]		11000069	1					
ANR	11000313	UnaryOperator	*		11000069	0					
ANR	11000314	CastExpression	( ulong * ) & key [ sizeof ( key ) - sizeof ( ulong ) ]		11000069	1					
ANR	11000315	CastTarget	ulong *		11000069	0					
ANR	11000316	UnaryOperationExpression	& key [ sizeof ( key ) - sizeof ( ulong ) ]		11000069	1					
ANR	11000317	UnaryOperator	&		11000069	0					
ANR	11000318	ArrayIndexing	key [ sizeof ( key ) - sizeof ( ulong ) ]		11000069	1					
ANR	11000319	Identifier	key		11000069	0					
ANR	11000320	AdditiveExpression	sizeof ( key ) - sizeof ( ulong )		11000069	1		-			
ANR	11000321	SizeofExpression	sizeof ( key )		11000069	0					
ANR	11000322	Sizeof	sizeof		11000069	0					
ANR	11000323	SizeofOperand	key		11000069	1					
ANR	11000324	SizeofExpression	sizeof ( ulong )		11000069	1					
ANR	11000325	Sizeof	sizeof		11000069	0					
ANR	11000326	SizeofOperand	ulong		11000069	1					
ANR	11000327	ElseStatement	else		11000069	0					
ANR	11000328	CompoundStatement		49:11:1519:1519	11000069	0					
ANR	11000329	ExpressionStatement	"gs_md5_finish ( & md5 , key )"	2697:8:86184:86208	11000069	0	True				
ANR	11000330	CallExpression	"gs_md5_finish ( & md5 , key )"		11000069	0					
ANR	11000331	Callee	gs_md5_finish		11000069	0					
ANR	11000332	Identifier	gs_md5_finish		11000069	0					
ANR	11000333	ArgumentList	& md5		11000069	1					
ANR	11000334	Argument	& md5		11000069	0					
ANR	11000335	UnaryOperationExpression	& md5		11000069	0					
ANR	11000336	UnaryOperator	&		11000069	0					
ANR	11000337	Identifier	md5		11000069	1					
ANR	11000338	Argument	key		11000069	1					
ANR	11000339	Identifier	key		11000069	0					
ANR	11000340	ExpressionStatement	"code = ciedefspace ( i_ctx_p , & CIEDict , dictkey )"	2699:4:86220:86266	11000069	15	True				
ANR	11000341	AssignmentExpression	"code = ciedefspace ( i_ctx_p , & CIEDict , dictkey )"		11000069	0		=			
ANR	11000342	Identifier	code		11000069	0					
ANR	11000343	CallExpression	"ciedefspace ( i_ctx_p , & CIEDict , dictkey )"		11000069	1					
ANR	11000344	Callee	ciedefspace		11000069	0					
ANR	11000345	Identifier	ciedefspace		11000069	0					
ANR	11000346	ArgumentList	i_ctx_p		11000069	1					
ANR	11000347	Argument	i_ctx_p		11000069	0					
ANR	11000348	Identifier	i_ctx_p		11000069	0					
ANR	11000349	Argument	& CIEDict		11000069	1					
ANR	11000350	UnaryOperationExpression	& CIEDict		11000069	0					
ANR	11000351	UnaryOperator	&		11000069	0					
ANR	11000352	Identifier	CIEDict		11000069	1					
ANR	11000353	Argument	dictkey		11000069	2					
ANR	11000354	Identifier	dictkey		11000069	0					
ANR	11000355	ExpressionStatement	* cont = 1	2700:4:86272:86281	11000069	16	True				
ANR	11000356	AssignmentExpression	* cont = 1		11000069	0		=			
ANR	11000357	UnaryOperationExpression	* cont		11000069	0					
ANR	11000358	UnaryOperator	*		11000069	0					
ANR	11000359	Identifier	cont		11000069	1					
ANR	11000360	PrimaryExpression	1		11000069	1					
ANR	11000361	ExpressionStatement	( * stage ) ++	2701:4:86287:86297	11000069	17	True				
ANR	11000362	PostIncDecOperationExpression	( * stage ) ++		11000069	0					
ANR	11000363	UnaryOperationExpression	* stage		11000069	0					
ANR	11000364	UnaryOperator	*		11000069	0					
ANR	11000365	Identifier	stage		11000069	1					
ANR	11000366	IncDec	++		11000069	1					
ANR	11000367	ReturnStatement	return code ;	2702:4:86303:86314	11000069	18	True				
ANR	11000368	Identifier	code		11000069	0					
ANR	11000369	ReturnType	static int		11000069	1					
ANR	11000370	Identifier	setciedefspace		11000069	2					
ANR	11000371	ParameterList	"i_ctx_t * i_ctx_p , ref * r , int * stage , int * cont , int CIESubst"		11000069	3					
ANR	11000372	Parameter	i_ctx_t * i_ctx_p	2647:26:84590:84606	11000069	0	True				
ANR	11000373	ParameterType	i_ctx_t *		11000069	0					
ANR	11000374	Identifier	i_ctx_p		11000069	1					
ANR	11000375	Parameter	ref * r	2647:45:84609:84614	11000069	1	True				
ANR	11000376	ParameterType	ref *		11000069	0					
ANR	11000377	Identifier	r		11000069	1					
ANR	11000378	Parameter	int * stage	2647:53:84617:84626	11000069	2	True				
ANR	11000379	ParameterType	int *		11000069	0					
ANR	11000380	Identifier	stage		11000069	1					
ANR	11000381	Parameter	int * cont	2647:65:84629:84637	11000069	3	True				
ANR	11000382	ParameterType	int *		11000069	0					
ANR	11000383	Identifier	cont		11000069	1					
ANR	11000384	Parameter	int CIESubst	2647:76:84640:84651	11000069	4	True				
ANR	11000385	ParameterType	int		11000069	0					
ANR	11000386	Identifier	CIESubst		11000069	1					
ANR	11000387	CFGEntryNode	ENTRY		11000069		True				
ANR	11000388	CFGExitNode	EXIT		11000069		True				
ANR	11000389	Symbol	cc . pattern		11000069						
ANR	11000390	Symbol	* ( ulong * ) & key [ sizeof ( key ) - sizeof ( ulong ) ]		11000069						
ANR	11000391	Symbol	code		11000069						
ANR	11000392	Symbol	i_ctx_p -> language_level		11000069						
ANR	11000393	Symbol	* cc		11000069						
ANR	11000394	Symbol	nocie -> value		11000069						
ANR	11000395	Symbol	gs_error_undefined		11000069						
ANR	11000396	Symbol	gs_setcolor		11000069						
ANR	11000397	Symbol	* key		11000069						
ANR	11000398	Symbol	* nocie		11000069						
ANR	11000399	Symbol	& cc		11000069						
ANR	11000400	Symbol	nocie -> value . boolval		11000069						
ANR	11000401	Symbol	r_has_type		11000069						
ANR	11000402	Symbol	gs_error_typecheck		11000069						
ANR	11000403	Symbol	ciedefspace		11000069						
ANR	11000404	Symbol	igs		11000069						
ANR	11000405	Symbol	* cc . paint . values		11000069						
ANR	11000406	Symbol	* i_ctx_p		11000069						
ANR	11000407	Symbol	setrgbspace		11000069						
ANR	11000408	Symbol	imemory		11000069						
ANR	11000409	Symbol	cont		11000069						
ANR	11000410	Symbol	nocie		11000069						
ANR	11000411	Symbol	CIESubst		11000069						
ANR	11000412	Symbol	key		11000069						
ANR	11000413	Symbol	cc		11000069						
ANR	11000414	Symbol	* stage		11000069						
ANR	11000415	Symbol	& md5		11000069						
ANR	11000416	Symbol	dict_find_string		11000069						
ANR	11000417	Symbol	array_get		11000069						
ANR	11000418	Symbol	i		11000069						
ANR	11000419	Symbol	dictkey		11000069						
ANR	11000420	Symbol	& nocie		11000069						
ANR	11000421	Symbol	t_boolean		11000069						
ANR	11000422	Symbol	r		11000069						
ANR	11000423	Symbol	* cc . paint		11000069						
ANR	11000424	Symbol	* i		11000069						
ANR	11000425	Symbol	stage		11000069						
ANR	11000426	Symbol	hashciedefspace		11000069						
ANR	11000427	Symbol	CIEDict		11000069						
ANR	11000428	Symbol	* cont		11000069						
ANR	11000429	Symbol	& CIEDict		11000069						
ANR	11000430	Symbol	i_ctx_p		11000069						
ANR	11000431	Symbol	cc . paint		11000069						
ANR	11000432	Symbol	cc . paint . values		11000069						
ANR	11000433	Symbol	systemdict		11000069						
ANR	11000434	Symbol	md5		11000069						
ANR	11000435	Function	validateciedefspace	2704:0:86318:89681							
ANR	11000436	FunctionDef	"validateciedefspace (i_ctx_t * i_ctx_p , ref * * r)"		11000435	0					
ANR	11000437	CompoundStatement		2705:0:86377:89681	11000435	0					
ANR	11000438	IdentifierDeclStatement	"int code = 0 , i ;"	2706:4:86383:86398	11000435	0	True				
ANR	11000439	IdentifierDecl	code = 0		11000435	0					
ANR	11000440	IdentifierDeclType	int		11000435	0					
ANR	11000441	Identifier	code		11000435	1					
ANR	11000442	AssignmentExpression	code = 0		11000435	2		=			
ANR	11000443	Identifier	code		11000435	0					
ANR	11000444	PrimaryExpression	0		11000435	1					
ANR	11000445	IdentifierDecl	i		11000435	1					
ANR	11000446	IdentifierDeclType	int		11000435	0					
ANR	11000447	Identifier	i		11000435	1					
ANR	11000448	IdentifierDeclStatement	float value [ 6 ] ;	2707:4:86404:86418	11000435	1	True				
ANR	11000449	IdentifierDecl	value [ 6 ]		11000435	0					
ANR	11000450	IdentifierDeclType	float [ 6 ]		11000435	0					
ANR	11000451	Identifier	value		11000435	1					
ANR	11000452	PrimaryExpression	6		11000435	2					
ANR	11000453	IdentifierDeclStatement	"ref CIEdict , * pref , * CIEspace = * r , tempref , valref ;"	2708:4:86424:86479	11000435	2	True				
ANR	11000454	IdentifierDecl	CIEdict		11000435	0					
ANR	11000455	IdentifierDeclType	ref		11000435	0					
ANR	11000456	Identifier	CIEdict		11000435	1					
ANR	11000457	IdentifierDecl	* pref		11000435	1					
ANR	11000458	IdentifierDeclType	ref *		11000435	0					
ANR	11000459	Identifier	pref		11000435	1					
ANR	11000460	IdentifierDecl	* CIEspace = * r		11000435	2					
ANR	11000461	IdentifierDeclType	ref *		11000435	0					
ANR	11000462	Identifier	CIEspace		11000435	1					
ANR	11000463	AssignmentExpression	* CIEspace = * r		11000435	2		=			
ANR	11000464	Identifier	CIEspace		11000435	0					
ANR	11000465	UnaryOperationExpression	* r		11000435	1					
ANR	11000466	UnaryOperator	*		11000435	0					
ANR	11000467	Identifier	r		11000435	1					
ANR	11000468	IdentifierDecl	tempref		11000435	3					
ANR	11000469	IdentifierDeclType	ref		11000435	0					
ANR	11000470	Identifier	tempref		11000435	1					
ANR	11000471	IdentifierDecl	valref		11000435	4					
ANR	11000472	IdentifierDeclType	ref		11000435	0					
ANR	11000473	Identifier	valref		11000435	1					
ANR	11000474	IfStatement	if ( ! r_is_array ( CIEspace ) )		11000435	3					
ANR	11000475	Condition	! r_is_array ( CIEspace )	2710:8:86490:86510	11000435	0	True				
ANR	11000476	UnaryOperationExpression	! r_is_array ( CIEspace )		11000435	0					
ANR	11000477	UnaryOperator	!		11000435	0					
ANR	11000478	CallExpression	r_is_array ( CIEspace )		11000435	1					
ANR	11000479	Callee	r_is_array		11000435	0					
ANR	11000480	Identifier	r_is_array		11000435	0					
ANR	11000481	ArgumentList	CIEspace		11000435	1					
ANR	11000482	Argument	CIEspace		11000435	0					
ANR	11000483	Identifier	CIEspace		11000435	0					
ANR	11000484	ExpressionStatement	return_error ( gs_error_typecheck )	2711:8:86521:86553	11000435	1	True				
ANR	11000485	CallExpression	return_error ( gs_error_typecheck )		11000435	0					
ANR	11000486	Callee	return_error		11000435	0					
ANR	11000487	Identifier	return_error		11000435	0					
ANR	11000488	ArgumentList	gs_error_typecheck		11000435	1					
ANR	11000489	Argument	gs_error_typecheck		11000435	0					
ANR	11000490	Identifier	gs_error_typecheck		11000435	0					
ANR	11000491	IfStatement	if ( r_size ( CIEspace ) != 2 )		11000435	4					
ANR	11000492	Condition	r_size ( CIEspace ) != 2	2713:8:86624:86644	11000435	0	True				
ANR	11000493	EqualityExpression	r_size ( CIEspace ) != 2		11000435	0		!=			
ANR	11000494	CallExpression	r_size ( CIEspace )		11000435	0					
ANR	11000495	Callee	r_size		11000435	0					
ANR	11000496	Identifier	r_size		11000435	0					
ANR	11000497	ArgumentList	CIEspace		11000435	1					
ANR	11000498	Argument	CIEspace		11000435	0					
ANR	11000499	Identifier	CIEspace		11000435	0					
ANR	11000500	PrimaryExpression	2		11000435	1					
ANR	11000501	ExpressionStatement	return_error ( gs_error_rangecheck )	2714:8:86655:86688	11000435	1	True				
ANR	11000502	CallExpression	return_error ( gs_error_rangecheck )		11000435	0					
ANR	11000503	Callee	return_error		11000435	0					
ANR	11000504	Identifier	return_error		11000435	0					
ANR	11000505	ArgumentList	gs_error_rangecheck		11000435	1					
ANR	11000506	Argument	gs_error_rangecheck		11000435	0					
ANR	11000507	Identifier	gs_error_rangecheck		11000435	0					
ANR	11000508	ExpressionStatement	"code = array_get ( imemory , CIEspace , 1 , & CIEdict )"	2716:4:86695:86743	11000435	5	True				
ANR	11000509	AssignmentExpression	"code = array_get ( imemory , CIEspace , 1 , & CIEdict )"		11000435	0		=			
ANR	11000510	Identifier	code		11000435	0					
ANR	11000511	CallExpression	"array_get ( imemory , CIEspace , 1 , & CIEdict )"		11000435	1					
ANR	11000512	Callee	array_get		11000435	0					
ANR	11000513	Identifier	array_get		11000435	0					
ANR	11000514	ArgumentList	imemory		11000435	1					
ANR	11000515	Argument	imemory		11000435	0					
ANR	11000516	Identifier	imemory		11000435	0					
ANR	11000517	Argument	CIEspace		11000435	1					
ANR	11000518	Identifier	CIEspace		11000435	0					
ANR	11000519	Argument	1		11000435	2					
ANR	11000520	PrimaryExpression	1		11000435	0					
ANR	11000521	Argument	& CIEdict		11000435	3					
ANR	11000522	UnaryOperationExpression	& CIEdict		11000435	0					
ANR	11000523	UnaryOperator	&		11000435	0					
ANR	11000524	Identifier	CIEdict		11000435	1					
ANR	11000525	IfStatement	if ( code < 0 )		11000435	6					
ANR	11000526	Condition	code < 0	2717:8:86753:86760	11000435	0	True				
ANR	11000527	RelationalExpression	code < 0		11000435	0		<			
ANR	11000528	Identifier	code		11000435	0					
ANR	11000529	PrimaryExpression	0		11000435	1					
ANR	11000530	ReturnStatement	return code ;	2718:8:86771:86782	11000435	1	True				
ANR	11000531	Identifier	code		11000435	0					
ANR	11000532	ExpressionStatement	"check_read_type ( CIEdict , t_dictionary )"	2719:4:86788:86826	11000435	7	True				
ANR	11000533	CallExpression	"check_read_type ( CIEdict , t_dictionary )"		11000435	0					
ANR	11000534	Callee	check_read_type		11000435	0					
ANR	11000535	Identifier	check_read_type		11000435	0					
ANR	11000536	ArgumentList	CIEdict		11000435	1					
ANR	11000537	Argument	CIEdict		11000435	0					
ANR	11000538	Identifier	CIEdict		11000435	0					
ANR	11000539	Argument	t_dictionary		11000435	1					
ANR	11000540	Identifier	t_dictionary		11000435	0					
ANR	11000541	ExpressionStatement	"code = validatecieabcspace ( i_ctx_p , r )"	2721:4:86833:86871	11000435	8	True				
ANR	11000542	AssignmentExpression	"code = validatecieabcspace ( i_ctx_p , r )"		11000435	0		=			
ANR	11000543	Identifier	code		11000435	0					
ANR	11000544	CallExpression	"validatecieabcspace ( i_ctx_p , r )"		11000435	1					
ANR	11000545	Callee	validatecieabcspace		11000435	0					
ANR	11000546	Identifier	validatecieabcspace		11000435	0					
ANR	11000547	ArgumentList	i_ctx_p		11000435	1					
ANR	11000548	Argument	i_ctx_p		11000435	0					
ANR	11000549	Identifier	i_ctx_p		11000435	0					
ANR	11000550	Argument	r		11000435	1					
ANR	11000551	Identifier	r		11000435	0					
ANR	11000552	IfStatement	if ( code != 0 )		11000435	9					
ANR	11000553	Condition	code != 0	2722:8:86881:86889	11000435	0	True				
ANR	11000554	EqualityExpression	code != 0		11000435	0		!=			
ANR	11000555	Identifier	code		11000435	0					
ANR	11000556	PrimaryExpression	0		11000435	1					
ANR	11000557	ReturnStatement	return code ;	2723:8:86900:86911	11000435	1	True				
ANR	11000558	Identifier	code		11000435	0					
ANR	11000559	ExpressionStatement	pref = & tempref	2725:4:86918:86933	11000435	10	True				
ANR	11000560	AssignmentExpression	pref = & tempref		11000435	0		=			
ANR	11000561	Identifier	pref		11000435	0					
ANR	11000562	UnaryOperationExpression	& tempref		11000435	1					
ANR	11000563	UnaryOperator	&		11000435	0					
ANR	11000564	Identifier	tempref		11000435	1					
ANR	11000565	ExpressionStatement	"code = dict_find_string ( & CIEdict , ""Table"" , & pref )"	2726:4:86939:86988	11000435	11	True				
ANR	11000566	AssignmentExpression	"code = dict_find_string ( & CIEdict , ""Table"" , & pref )"		11000435	0		=			
ANR	11000567	Identifier	code		11000435	0					
ANR	11000568	CallExpression	"dict_find_string ( & CIEdict , ""Table"" , & pref )"		11000435	1					
ANR	11000569	Callee	dict_find_string		11000435	0					
ANR	11000570	Identifier	dict_find_string		11000435	0					
ANR	11000571	ArgumentList	& CIEdict		11000435	1					
ANR	11000572	Argument	& CIEdict		11000435	0					
ANR	11000573	UnaryOperationExpression	& CIEdict		11000435	0					
ANR	11000574	UnaryOperator	&		11000435	0					
ANR	11000575	Identifier	CIEdict		11000435	1					
ANR	11000576	Argument	"""Table"""		11000435	1					
ANR	11000577	PrimaryExpression	"""Table"""		11000435	0					
ANR	11000578	Argument	& pref		11000435	2					
ANR	11000579	UnaryOperationExpression	& pref		11000435	0					
ANR	11000580	UnaryOperator	&		11000435	0					
ANR	11000581	Identifier	pref		11000435	1					
ANR	11000582	IfStatement	if ( code > 0 )		11000435	12					
ANR	11000583	Condition	code > 0	2727:8:86998:87005	11000435	0	True				
ANR	11000584	RelationalExpression	code > 0		11000435	0		>			
ANR	11000585	Identifier	code		11000435	0					
ANR	11000586	PrimaryExpression	0		11000435	1					
ANR	11000587	CompoundStatement		23:18:630:630	11000435	1					
ANR	11000588	IfStatement	if ( ! r_is_array ( pref ) )		11000435	0					
ANR	11000589	Condition	! r_is_array ( pref )	2728:12:87022:87038	11000435	0	True				
ANR	11000590	UnaryOperationExpression	! r_is_array ( pref )		11000435	0					
ANR	11000591	UnaryOperator	!		11000435	0					
ANR	11000592	CallExpression	r_is_array ( pref )		11000435	1					
ANR	11000593	Callee	r_is_array		11000435	0					
ANR	11000594	Identifier	r_is_array		11000435	0					
ANR	11000595	ArgumentList	pref		11000435	1					
ANR	11000596	Argument	pref		11000435	0					
ANR	11000597	Identifier	pref		11000435	0					
ANR	11000598	ExpressionStatement	return_error ( gs_error_typecheck )	2729:12:87053:87085	11000435	1	True				
ANR	11000599	CallExpression	return_error ( gs_error_typecheck )		11000435	0					
ANR	11000600	Callee	return_error		11000435	0					
ANR	11000601	Identifier	return_error		11000435	0					
ANR	11000602	ArgumentList	gs_error_typecheck		11000435	1					
ANR	11000603	Argument	gs_error_typecheck		11000435	0					
ANR	11000604	Identifier	gs_error_typecheck		11000435	0					
ANR	11000605	IfStatement	if ( r_size ( pref ) != 4 )		11000435	1					
ANR	11000606	Condition	r_size ( pref ) != 4	2730:12:87099:87115	11000435	0	True				
ANR	11000607	EqualityExpression	r_size ( pref ) != 4		11000435	0		!=			
ANR	11000608	CallExpression	r_size ( pref )		11000435	0					
ANR	11000609	Callee	r_size		11000435	0					
ANR	11000610	Identifier	r_size		11000435	0					
ANR	11000611	ArgumentList	pref		11000435	1					
ANR	11000612	Argument	pref		11000435	0					
ANR	11000613	Identifier	pref		11000435	0					
ANR	11000614	PrimaryExpression	4		11000435	1					
ANR	11000615	ExpressionStatement	return_error ( gs_error_rangecheck )	2731:12:87130:87163	11000435	1	True				
ANR	11000616	CallExpression	return_error ( gs_error_rangecheck )		11000435	0					
ANR	11000617	Callee	return_error		11000435	0					
ANR	11000618	Identifier	return_error		11000435	0					
ANR	11000619	ArgumentList	gs_error_rangecheck		11000435	1					
ANR	11000620	Argument	gs_error_rangecheck		11000435	0					
ANR	11000621	Identifier	gs_error_rangecheck		11000435	0					
ANR	11000622	ExpressionStatement	"code = get_cie_param_array ( imemory , pref , 3 , value )"	2732:8:87173:87224	11000435	2	True				
ANR	11000623	AssignmentExpression	"code = get_cie_param_array ( imemory , pref , 3 , value )"		11000435	0		=			
ANR	11000624	Identifier	code		11000435	0					
ANR	11000625	CallExpression	"get_cie_param_array ( imemory , pref , 3 , value )"		11000435	1					
ANR	11000626	Callee	get_cie_param_array		11000435	0					
ANR	11000627	Identifier	get_cie_param_array		11000435	0					
ANR	11000628	ArgumentList	imemory		11000435	1					
ANR	11000629	Argument	imemory		11000435	0					
ANR	11000630	Identifier	imemory		11000435	0					
ANR	11000631	Argument	pref		11000435	1					
ANR	11000632	Identifier	pref		11000435	0					
ANR	11000633	Argument	3		11000435	2					
ANR	11000634	PrimaryExpression	3		11000435	0					
ANR	11000635	Argument	value		11000435	3					
ANR	11000636	Identifier	value		11000435	0					
ANR	11000637	IfStatement	if ( code < 0 )		11000435	3					
ANR	11000638	Condition	code < 0	2733:12:87238:87245	11000435	0	True				
ANR	11000639	RelationalExpression	code < 0		11000435	0		<			
ANR	11000640	Identifier	code		11000435	0					
ANR	11000641	PrimaryExpression	0		11000435	1					
ANR	11000642	ReturnStatement	return code ;	2734:12:87260:87271	11000435	1	True				
ANR	11000643	Identifier	code		11000435	0					
ANR	11000644	IfStatement	if ( value [ 0 ] <= 1 || value [ 1 ] <= 1 || value [ 2 ] <= 1 )		11000435	4					
ANR	11000645	Condition	value [ 0 ] <= 1 || value [ 1 ] <= 1 || value [ 2 ] <= 1	2735:12:87285:87331	11000435	0	True				
ANR	11000646	OrExpression	value [ 0 ] <= 1 || value [ 1 ] <= 1 || value [ 2 ] <= 1		11000435	0		||			
ANR	11000647	RelationalExpression	value [ 0 ] <= 1		11000435	0		<=			
ANR	11000648	ArrayIndexing	value [ 0 ]		11000435	0					
ANR	11000649	Identifier	value		11000435	0					
ANR	11000650	PrimaryExpression	0		11000435	1					
ANR	11000651	PrimaryExpression	1		11000435	1					
ANR	11000652	OrExpression	value [ 1 ] <= 1 || value [ 2 ] <= 1		11000435	1		||			
ANR	11000653	RelationalExpression	value [ 1 ] <= 1		11000435	0		<=			
ANR	11000654	ArrayIndexing	value [ 1 ]		11000435	0					
ANR	11000655	Identifier	value		11000435	0					
ANR	11000656	PrimaryExpression	1		11000435	1					
ANR	11000657	PrimaryExpression	1		11000435	1					
ANR	11000658	RelationalExpression	value [ 2 ] <= 1		11000435	1		<=			
ANR	11000659	ArrayIndexing	value [ 2 ]		11000435	0					
ANR	11000660	Identifier	value		11000435	0					
ANR	11000661	PrimaryExpression	2		11000435	1					
ANR	11000662	PrimaryExpression	1		11000435	1					
ANR	11000663	ExpressionStatement	return_error ( gs_error_rangecheck )	2736:12:87346:87379	11000435	1	True				
ANR	11000664	CallExpression	return_error ( gs_error_rangecheck )		11000435	0					
ANR	11000665	Callee	return_error		11000435	0					
ANR	11000666	Identifier	return_error		11000435	0					
ANR	11000667	ArgumentList	gs_error_rangecheck		11000435	1					
ANR	11000668	Argument	gs_error_rangecheck		11000435	0					
ANR	11000669	Identifier	gs_error_rangecheck		11000435	0					
ANR	11000670	ExpressionStatement	"code = array_get ( imemory , pref , 3 , & valref )"	2738:8:87390:87433	11000435	5	True				
ANR	11000671	AssignmentExpression	"code = array_get ( imemory , pref , 3 , & valref )"		11000435	0		=			
ANR	11000672	Identifier	code		11000435	0					
ANR	11000673	CallExpression	"array_get ( imemory , pref , 3 , & valref )"		11000435	1					
ANR	11000674	Callee	array_get		11000435	0					
ANR	11000675	Identifier	array_get		11000435	0					
ANR	11000676	ArgumentList	imemory		11000435	1					
ANR	11000677	Argument	imemory		11000435	0					
ANR	11000678	Identifier	imemory		11000435	0					
ANR	11000679	Argument	pref		11000435	1					
ANR	11000680	Identifier	pref		11000435	0					
ANR	11000681	Argument	3		11000435	2					
ANR	11000682	PrimaryExpression	3		11000435	0					
ANR	11000683	Argument	& valref		11000435	3					
ANR	11000684	UnaryOperationExpression	& valref		11000435	0					
ANR	11000685	UnaryOperator	&		11000435	0					
ANR	11000686	Identifier	valref		11000435	1					
ANR	11000687	IfStatement	if ( code < 0 )		11000435	6					
ANR	11000688	Condition	code < 0	2739:12:87447:87454	11000435	0	True				
ANR	11000689	RelationalExpression	code < 0		11000435	0		<			
ANR	11000690	Identifier	code		11000435	0					
ANR	11000691	PrimaryExpression	0		11000435	1					
ANR	11000692	ReturnStatement	return code ;	2740:12:87469:87480	11000435	1	True				
ANR	11000693	Identifier	code		11000435	0					
ANR	11000694	IfStatement	if ( ! r_is_array ( & valref ) )		11000435	7					
ANR	11000695	Condition	! r_is_array ( & valref )	2741:12:87494:87513	11000435	0	True				
ANR	11000696	UnaryOperationExpression	! r_is_array ( & valref )		11000435	0					
ANR	11000697	UnaryOperator	!		11000435	0					
ANR	11000698	CallExpression	r_is_array ( & valref )		11000435	1					
ANR	11000699	Callee	r_is_array		11000435	0					
ANR	11000700	Identifier	r_is_array		11000435	0					
ANR	11000701	ArgumentList	& valref		11000435	1					
ANR	11000702	Argument	& valref		11000435	0					
ANR	11000703	UnaryOperationExpression	& valref		11000435	0					
ANR	11000704	UnaryOperator	&		11000435	0					
ANR	11000705	Identifier	valref		11000435	1					
ANR	11000706	ExpressionStatement	return_error ( gs_error_typecheck )	2742:12:87528:87560	11000435	1	True				
ANR	11000707	CallExpression	return_error ( gs_error_typecheck )		11000435	0					
ANR	11000708	Callee	return_error		11000435	0					
ANR	11000709	Identifier	return_error		11000435	0					
ANR	11000710	ArgumentList	gs_error_typecheck		11000435	1					
ANR	11000711	Argument	gs_error_typecheck		11000435	0					
ANR	11000712	Identifier	gs_error_typecheck		11000435	0					
ANR	11000713	IfStatement	if ( r_size ( & valref ) != value [ 0 ] )		11000435	8					
ANR	11000714	Condition	r_size ( & valref ) != value [ 0 ]	2743:12:87574:87600	11000435	0	True				
ANR	11000715	EqualityExpression	r_size ( & valref ) != value [ 0 ]		11000435	0		!=			
ANR	11000716	CallExpression	r_size ( & valref )		11000435	0					
ANR	11000717	Callee	r_size		11000435	0					
ANR	11000718	Identifier	r_size		11000435	0					
ANR	11000719	ArgumentList	& valref		11000435	1					
ANR	11000720	Argument	& valref		11000435	0					
ANR	11000721	UnaryOperationExpression	& valref		11000435	0					
ANR	11000722	UnaryOperator	&		11000435	0					
ANR	11000723	Identifier	valref		11000435	1					
ANR	11000724	ArrayIndexing	value [ 0 ]		11000435	1					
ANR	11000725	Identifier	value		11000435	0					
ANR	11000726	PrimaryExpression	0		11000435	1					
ANR	11000727	ExpressionStatement	return_error ( gs_error_rangecheck )	2744:12:87615:87648	11000435	1	True				
ANR	11000728	CallExpression	return_error ( gs_error_rangecheck )		11000435	0					
ANR	11000729	Callee	return_error		11000435	0					
ANR	11000730	Identifier	return_error		11000435	0					
ANR	11000731	ArgumentList	gs_error_rangecheck		11000435	1					
ANR	11000732	Argument	gs_error_rangecheck		11000435	0					
ANR	11000733	Identifier	gs_error_rangecheck		11000435	0					
ANR	11000734	ForStatement	for ( i = 0 ; i < value [ 0 ] ; i ++ )		11000435	9					
ANR	11000735	ForInit	i = 0 ;	2746:13:87664:87667	11000435	0	True				
ANR	11000736	AssignmentExpression	i = 0		11000435	0		=			
ANR	11000737	Identifier	i		11000435	0					
ANR	11000738	PrimaryExpression	0		11000435	1					
ANR	11000739	Condition	i < value [ 0 ]	2746:17:87668:87677	11000435	1	True				
ANR	11000740	RelationalExpression	i < value [ 0 ]		11000435	0		<			
ANR	11000741	Identifier	i		11000435	0					
ANR	11000742	ArrayIndexing	value [ 0 ]		11000435	1					
ANR	11000743	Identifier	value		11000435	0					
ANR	11000744	PrimaryExpression	0		11000435	1					
ANR	11000745	PostIncDecOperationExpression	i ++	2746:28:87679:87681	11000435	2	True				
ANR	11000746	Identifier	i		11000435	0					
ANR	11000747	IncDec	++		11000435	1					
ANR	11000748	CompoundStatement		42:33:1306:1306	11000435	3					
ANR	11000749	ExpressionStatement	"code = array_get ( imemory , & valref , i , & tempref )"	2747:12:87698:87745	11000435	0	True				
ANR	11000750	AssignmentExpression	"code = array_get ( imemory , & valref , i , & tempref )"		11000435	0		=			
ANR	11000751	Identifier	code		11000435	0					
ANR	11000752	CallExpression	"array_get ( imemory , & valref , i , & tempref )"		11000435	1					
ANR	11000753	Callee	array_get		11000435	0					
ANR	11000754	Identifier	array_get		11000435	0					
ANR	11000755	ArgumentList	imemory		11000435	1					
ANR	11000756	Argument	imemory		11000435	0					
ANR	11000757	Identifier	imemory		11000435	0					
ANR	11000758	Argument	& valref		11000435	1					
ANR	11000759	UnaryOperationExpression	& valref		11000435	0					
ANR	11000760	UnaryOperator	&		11000435	0					
ANR	11000761	Identifier	valref		11000435	1					
ANR	11000762	Argument	i		11000435	2					
ANR	11000763	Identifier	i		11000435	0					
ANR	11000764	Argument	& tempref		11000435	3					
ANR	11000765	UnaryOperationExpression	& tempref		11000435	0					
ANR	11000766	UnaryOperator	&		11000435	0					
ANR	11000767	Identifier	tempref		11000435	1					
ANR	11000768	IfStatement	if ( code < 0 )		11000435	1					
ANR	11000769	Condition	code < 0	2748:16:87763:87770	11000435	0	True				
ANR	11000770	RelationalExpression	code < 0		11000435	0		<			
ANR	11000771	Identifier	code		11000435	0					
ANR	11000772	PrimaryExpression	0		11000435	1					
ANR	11000773	ReturnStatement	return code ;	2749:16:87789:87800	11000435	1	True				
ANR	11000774	Identifier	code		11000435	0					
ANR	11000775	IfStatement	"if ( ! r_has_type ( & tempref , t_string ) )"		11000435	2					
ANR	11000776	Condition	"! r_has_type ( & tempref , t_string )"	2750:16:87818:87848	11000435	0	True				
ANR	11000777	UnaryOperationExpression	"! r_has_type ( & tempref , t_string )"		11000435	0					
ANR	11000778	UnaryOperator	!		11000435	0					
ANR	11000779	CallExpression	"r_has_type ( & tempref , t_string )"		11000435	1					
ANR	11000780	Callee	r_has_type		11000435	0					
ANR	11000781	Identifier	r_has_type		11000435	0					
ANR	11000782	ArgumentList	& tempref		11000435	1					
ANR	11000783	Argument	& tempref		11000435	0					
ANR	11000784	UnaryOperationExpression	& tempref		11000435	0					
ANR	11000785	UnaryOperator	&		11000435	0					
ANR	11000786	Identifier	tempref		11000435	1					
ANR	11000787	Argument	t_string		11000435	1					
ANR	11000788	Identifier	t_string		11000435	0					
ANR	11000789	ExpressionStatement	return_error ( gs_error_typecheck )	2751:16:87867:87899	11000435	1	True				
ANR	11000790	CallExpression	return_error ( gs_error_typecheck )		11000435	0					
ANR	11000791	Callee	return_error		11000435	0					
ANR	11000792	Identifier	return_error		11000435	0					
ANR	11000793	ArgumentList	gs_error_typecheck		11000435	1					
ANR	11000794	Argument	gs_error_typecheck		11000435	0					
ANR	11000795	Identifier	gs_error_typecheck		11000435	0					
ANR	11000796	IfStatement	if ( r_size ( & tempref ) != ( 3 * value [ 1 ] * value [ 2 ] ) )		11000435	3					
ANR	11000797	Condition	r_size ( & tempref ) != ( 3 * value [ 1 ] * value [ 2 ] )	2753:16:87918:87962	11000435	0	True				
ANR	11000798	EqualityExpression	r_size ( & tempref ) != ( 3 * value [ 1 ] * value [ 2 ] )		11000435	0		!=			
ANR	11000799	CallExpression	r_size ( & tempref )		11000435	0					
ANR	11000800	Callee	r_size		11000435	0					
ANR	11000801	Identifier	r_size		11000435	0					
ANR	11000802	ArgumentList	& tempref		11000435	1					
ANR	11000803	Argument	& tempref		11000435	0					
ANR	11000804	UnaryOperationExpression	& tempref		11000435	0					
ANR	11000805	UnaryOperator	&		11000435	0					
ANR	11000806	Identifier	tempref		11000435	1					
ANR	11000807	MultiplicativeExpression	3 * value [ 1 ] * value [ 2 ]		11000435	1		*			
ANR	11000808	PrimaryExpression	3		11000435	0					
ANR	11000809	MultiplicativeExpression	value [ 1 ] * value [ 2 ]		11000435	1		*			
ANR	11000810	ArrayIndexing	value [ 1 ]		11000435	0					
ANR	11000811	Identifier	value		11000435	0					
ANR	11000812	PrimaryExpression	1		11000435	1					
ANR	11000813	ArrayIndexing	value [ 2 ]		11000435	1					
ANR	11000814	Identifier	value		11000435	0					
ANR	11000815	PrimaryExpression	2		11000435	1					
ANR	11000816	ExpressionStatement	return_error ( gs_error_rangecheck )	2754:16:87981:88014	11000435	1	True				
ANR	11000817	CallExpression	return_error ( gs_error_rangecheck )		11000435	0					
ANR	11000818	Callee	return_error		11000435	0					
ANR	11000819	Identifier	return_error		11000435	0					
ANR	11000820	ArgumentList	gs_error_rangecheck		11000435	1					
ANR	11000821	Argument	gs_error_rangecheck		11000435	0					
ANR	11000822	Identifier	gs_error_rangecheck		11000435	0					
ANR	11000823	ElseStatement	else		11000435	0					
ANR	11000824	CompoundStatement		52:11:1659:1659	11000435	0					
ANR	11000825	ExpressionStatement	return_error ( gs_error_rangecheck )	2757:8:88047:88080	11000435	0	True				
ANR	11000826	CallExpression	return_error ( gs_error_rangecheck )		11000435	0					
ANR	11000827	Callee	return_error		11000435	0					
ANR	11000828	Identifier	return_error		11000435	0					
ANR	11000829	ArgumentList	gs_error_rangecheck		11000435	1					
ANR	11000830	Argument	gs_error_rangecheck		11000435	0					
ANR	11000831	Identifier	gs_error_rangecheck		11000435	0					
ANR	11000832	ExpressionStatement	"code = dict_find_string ( & CIEdict , ""RangeDEF"" , & pref )"	2763:4:88196:88248	11000435	13	True				
ANR	11000833	AssignmentExpression	"code = dict_find_string ( & CIEdict , ""RangeDEF"" , & pref )"		11000435	0		=			
ANR	11000834	Identifier	code		11000435	0					
ANR	11000835	CallExpression	"dict_find_string ( & CIEdict , ""RangeDEF"" , & pref )"		11000435	1					
ANR	11000836	Callee	dict_find_string		11000435	0					
ANR	11000837	Identifier	dict_find_string		11000435	0					
ANR	11000838	ArgumentList	& CIEdict		11000435	1					
ANR	11000839	Argument	& CIEdict		11000435	0					
ANR	11000840	UnaryOperationExpression	& CIEdict		11000435	0					
ANR	11000841	UnaryOperator	&		11000435	0					
ANR	11000842	Identifier	CIEdict		11000435	1					
ANR	11000843	Argument	"""RangeDEF"""		11000435	1					
ANR	11000844	PrimaryExpression	"""RangeDEF"""		11000435	0					
ANR	11000845	Argument	& pref		11000435	2					
ANR	11000846	UnaryOperationExpression	& pref		11000435	0					
ANR	11000847	UnaryOperator	&		11000435	0					
ANR	11000848	Identifier	pref		11000435	1					
ANR	11000849	IfStatement	"if ( code > 0 && ! r_has_type ( & tempref , t_null ) )"		11000435	14					
ANR	11000850	Condition	"code > 0 && ! r_has_type ( & tempref , t_null )"	2764:8:88258:88298	11000435	0	True				
ANR	11000851	AndExpression	"code > 0 && ! r_has_type ( & tempref , t_null )"		11000435	0		&&			
ANR	11000852	RelationalExpression	code > 0		11000435	0		>			
ANR	11000853	Identifier	code		11000435	0					
ANR	11000854	PrimaryExpression	0		11000435	1					
ANR	11000855	UnaryOperationExpression	"! r_has_type ( & tempref , t_null )"		11000435	1					
ANR	11000856	UnaryOperator	!		11000435	0					
ANR	11000857	CallExpression	"r_has_type ( & tempref , t_null )"		11000435	1					
ANR	11000858	Callee	r_has_type		11000435	0					
ANR	11000859	Identifier	r_has_type		11000435	0					
ANR	11000860	ArgumentList	& tempref		11000435	1					
ANR	11000861	Argument	& tempref		11000435	0					
ANR	11000862	UnaryOperationExpression	& tempref		11000435	0					
ANR	11000863	UnaryOperator	&		11000435	0					
ANR	11000864	Identifier	tempref		11000435	1					
ANR	11000865	Argument	t_null		11000435	1					
ANR	11000866	Identifier	t_null		11000435	0					
ANR	11000867	CompoundStatement		60:51:1923:1923	11000435	1					
ANR	11000868	IfStatement	if ( ! r_is_array ( pref ) )		11000435	0					
ANR	11000869	Condition	! r_is_array ( pref )	2765:12:88315:88331	11000435	0	True				
ANR	11000870	UnaryOperationExpression	! r_is_array ( pref )		11000435	0					
ANR	11000871	UnaryOperator	!		11000435	0					
ANR	11000872	CallExpression	r_is_array ( pref )		11000435	1					
ANR	11000873	Callee	r_is_array		11000435	0					
ANR	11000874	Identifier	r_is_array		11000435	0					
ANR	11000875	ArgumentList	pref		11000435	1					
ANR	11000876	Argument	pref		11000435	0					
ANR	11000877	Identifier	pref		11000435	0					
ANR	11000878	ExpressionStatement	return_error ( gs_error_typecheck )	2766:12:88346:88378	11000435	1	True				
ANR	11000879	CallExpression	return_error ( gs_error_typecheck )		11000435	0					
ANR	11000880	Callee	return_error		11000435	0					
ANR	11000881	Identifier	return_error		11000435	0					
ANR	11000882	ArgumentList	gs_error_typecheck		11000435	1					
ANR	11000883	Argument	gs_error_typecheck		11000435	0					
ANR	11000884	Identifier	gs_error_typecheck		11000435	0					
ANR	11000885	IfStatement	if ( r_size ( pref ) != 6 )		11000435	1					
ANR	11000886	Condition	r_size ( pref ) != 6	2767:12:88392:88408	11000435	0	True				
ANR	11000887	EqualityExpression	r_size ( pref ) != 6		11000435	0		!=			
ANR	11000888	CallExpression	r_size ( pref )		11000435	0					
ANR	11000889	Callee	r_size		11000435	0					
ANR	11000890	Identifier	r_size		11000435	0					
ANR	11000891	ArgumentList	pref		11000435	1					
ANR	11000892	Argument	pref		11000435	0					
ANR	11000893	Identifier	pref		11000435	0					
ANR	11000894	PrimaryExpression	6		11000435	1					
ANR	11000895	ExpressionStatement	return_error ( gs_error_rangecheck )	2768:12:88423:88456	11000435	1	True				
ANR	11000896	CallExpression	return_error ( gs_error_rangecheck )		11000435	0					
ANR	11000897	Callee	return_error		11000435	0					
ANR	11000898	Identifier	return_error		11000435	0					
ANR	11000899	ArgumentList	gs_error_rangecheck		11000435	1					
ANR	11000900	Argument	gs_error_rangecheck		11000435	0					
ANR	11000901	Identifier	gs_error_rangecheck		11000435	0					
ANR	11000902	ExpressionStatement	"code = get_cie_param_array ( imemory , pref , 6 , value )"	2769:8:88466:88517	11000435	2	True				
ANR	11000903	AssignmentExpression	"code = get_cie_param_array ( imemory , pref , 6 , value )"		11000435	0		=			
ANR	11000904	Identifier	code		11000435	0					
ANR	11000905	CallExpression	"get_cie_param_array ( imemory , pref , 6 , value )"		11000435	1					
ANR	11000906	Callee	get_cie_param_array		11000435	0					
ANR	11000907	Identifier	get_cie_param_array		11000435	0					
ANR	11000908	ArgumentList	imemory		11000435	1					
ANR	11000909	Argument	imemory		11000435	0					
ANR	11000910	Identifier	imemory		11000435	0					
ANR	11000911	Argument	pref		11000435	1					
ANR	11000912	Identifier	pref		11000435	0					
ANR	11000913	Argument	6		11000435	2					
ANR	11000914	PrimaryExpression	6		11000435	0					
ANR	11000915	Argument	value		11000435	3					
ANR	11000916	Identifier	value		11000435	0					
ANR	11000917	IfStatement	if ( code < 0 )		11000435	3					
ANR	11000918	Condition	code < 0	2770:12:88531:88538	11000435	0	True				
ANR	11000919	RelationalExpression	code < 0		11000435	0		<			
ANR	11000920	Identifier	code		11000435	0					
ANR	11000921	PrimaryExpression	0		11000435	1					
ANR	11000922	ReturnStatement	return code ;	2771:12:88553:88564	11000435	1	True				
ANR	11000923	Identifier	code		11000435	0					
ANR	11000924	IfStatement	if ( value [ 1 ] < value [ 0 ] || value [ 3 ] < value [ 2 ] || value [ 5 ] < value [ 4 ] )		11000435	4					
ANR	11000925	Condition	value [ 1 ] < value [ 0 ] || value [ 3 ] < value [ 2 ] || value [ 5 ] < value [ 4 ]	2772:12:88578:88642	11000435	0	True				
ANR	11000926	OrExpression	value [ 1 ] < value [ 0 ] || value [ 3 ] < value [ 2 ] || value [ 5 ] < value [ 4 ]		11000435	0		||			
ANR	11000927	RelationalExpression	value [ 1 ] < value [ 0 ]		11000435	0		<			
ANR	11000928	ArrayIndexing	value [ 1 ]		11000435	0					
ANR	11000929	Identifier	value		11000435	0					
ANR	11000930	PrimaryExpression	1		11000435	1					
ANR	11000931	ArrayIndexing	value [ 0 ]		11000435	1					
ANR	11000932	Identifier	value		11000435	0					
ANR	11000933	PrimaryExpression	0		11000435	1					
ANR	11000934	OrExpression	value [ 3 ] < value [ 2 ] || value [ 5 ] < value [ 4 ]		11000435	1		||			
ANR	11000935	RelationalExpression	value [ 3 ] < value [ 2 ]		11000435	0		<			
ANR	11000936	ArrayIndexing	value [ 3 ]		11000435	0					
ANR	11000937	Identifier	value		11000435	0					
ANR	11000938	PrimaryExpression	3		11000435	1					
ANR	11000939	ArrayIndexing	value [ 2 ]		11000435	1					
ANR	11000940	Identifier	value		11000435	0					
ANR	11000941	PrimaryExpression	2		11000435	1					
ANR	11000942	RelationalExpression	value [ 5 ] < value [ 4 ]		11000435	1		<			
ANR	11000943	ArrayIndexing	value [ 5 ]		11000435	0					
ANR	11000944	Identifier	value		11000435	0					
ANR	11000945	PrimaryExpression	5		11000435	1					
ANR	11000946	ArrayIndexing	value [ 4 ]		11000435	1					
ANR	11000947	Identifier	value		11000435	0					
ANR	11000948	PrimaryExpression	4		11000435	1					
ANR	11000949	ExpressionStatement	return_error ( gs_error_rangecheck )	2773:12:88657:88690	11000435	1	True				
ANR	11000950	CallExpression	return_error ( gs_error_rangecheck )		11000435	0					
ANR	11000951	Callee	return_error		11000435	0					
ANR	11000952	Identifier	return_error		11000435	0					
ANR	11000953	ArgumentList	gs_error_rangecheck		11000435	1					
ANR	11000954	Argument	gs_error_rangecheck		11000435	0					
ANR	11000955	Identifier	gs_error_rangecheck		11000435	0					
ANR	11000956	ExpressionStatement	"code = dict_find_string ( & CIEdict , ""DecodeDEF"" , & pref )"	2776:4:88703:88756	11000435	15	True				
ANR	11000957	AssignmentExpression	"code = dict_find_string ( & CIEdict , ""DecodeDEF"" , & pref )"		11000435	0		=			
ANR	11000958	Identifier	code		11000435	0					
ANR	11000959	CallExpression	"dict_find_string ( & CIEdict , ""DecodeDEF"" , & pref )"		11000435	1					
ANR	11000960	Callee	dict_find_string		11000435	0					
ANR	11000961	Identifier	dict_find_string		11000435	0					
ANR	11000962	ArgumentList	& CIEdict		11000435	1					
ANR	11000963	Argument	& CIEdict		11000435	0					
ANR	11000964	UnaryOperationExpression	& CIEdict		11000435	0					
ANR	11000965	UnaryOperator	&		11000435	0					
ANR	11000966	Identifier	CIEdict		11000435	1					
ANR	11000967	Argument	"""DecodeDEF"""		11000435	1					
ANR	11000968	PrimaryExpression	"""DecodeDEF"""		11000435	0					
ANR	11000969	Argument	& pref		11000435	2					
ANR	11000970	UnaryOperationExpression	& pref		11000435	0					
ANR	11000971	UnaryOperator	&		11000435	0					
ANR	11000972	Identifier	pref		11000435	1					
ANR	11000973	IfStatement	"if ( code > 0 && ! r_has_type ( pref , t_null ) )"		11000435	16					
ANR	11000974	Condition	"code > 0 && ! r_has_type ( pref , t_null )"	2777:8:88766:88802	11000435	0	True				
ANR	11000975	AndExpression	"code > 0 && ! r_has_type ( pref , t_null )"		11000435	0		&&			
ANR	11000976	RelationalExpression	code > 0		11000435	0		>			
ANR	11000977	Identifier	code		11000435	0					
ANR	11000978	PrimaryExpression	0		11000435	1					
ANR	11000979	UnaryOperationExpression	"! r_has_type ( pref , t_null )"		11000435	1					
ANR	11000980	UnaryOperator	!		11000435	0					
ANR	11000981	CallExpression	"r_has_type ( pref , t_null )"		11000435	1					
ANR	11000982	Callee	r_has_type		11000435	0					
ANR	11000983	Identifier	r_has_type		11000435	0					
ANR	11000984	ArgumentList	pref		11000435	1					
ANR	11000985	Argument	pref		11000435	0					
ANR	11000986	Identifier	pref		11000435	0					
ANR	11000987	Argument	t_null		11000435	1					
ANR	11000988	Identifier	t_null		11000435	0					
ANR	11000989	CompoundStatement		73:47:2427:2427	11000435	1					
ANR	11000990	IfStatement	if ( ! r_is_array ( pref ) )		11000435	0					
ANR	11000991	Condition	! r_is_array ( pref )	2778:12:88819:88835	11000435	0	True				
ANR	11000992	UnaryOperationExpression	! r_is_array ( pref )		11000435	0					
ANR	11000993	UnaryOperator	!		11000435	0					
ANR	11000994	CallExpression	r_is_array ( pref )		11000435	1					
ANR	11000995	Callee	r_is_array		11000435	0					
ANR	11000996	Identifier	r_is_array		11000435	0					
ANR	11000997	ArgumentList	pref		11000435	1					
ANR	11000998	Argument	pref		11000435	0					
ANR	11000999	Identifier	pref		11000435	0					
ANR	11001000	ExpressionStatement	return_error ( gs_error_typecheck )	2779:12:88850:88882	11000435	1	True				
ANR	11001001	CallExpression	return_error ( gs_error_typecheck )		11000435	0					
ANR	11001002	Callee	return_error		11000435	0					
ANR	11001003	Identifier	return_error		11000435	0					
ANR	11001004	ArgumentList	gs_error_typecheck		11000435	1					
ANR	11001005	Argument	gs_error_typecheck		11000435	0					
ANR	11001006	Identifier	gs_error_typecheck		11000435	0					
ANR	11001007	IfStatement	if ( r_size ( pref ) != 3 )		11000435	1					
ANR	11001008	Condition	r_size ( pref ) != 3	2780:12:88896:88912	11000435	0	True				
ANR	11001009	EqualityExpression	r_size ( pref ) != 3		11000435	0		!=			
ANR	11001010	CallExpression	r_size ( pref )		11000435	0					
ANR	11001011	Callee	r_size		11000435	0					
ANR	11001012	Identifier	r_size		11000435	0					
ANR	11001013	ArgumentList	pref		11000435	1					
ANR	11001014	Argument	pref		11000435	0					
ANR	11001015	Identifier	pref		11000435	0					
ANR	11001016	PrimaryExpression	3		11000435	1					
ANR	11001017	ExpressionStatement	return_error ( gs_error_rangecheck )	2781:12:88927:88960	11000435	1	True				
ANR	11001018	CallExpression	return_error ( gs_error_rangecheck )		11000435	0					
ANR	11001019	Callee	return_error		11000435	0					
ANR	11001020	Identifier	return_error		11000435	0					
ANR	11001021	ArgumentList	gs_error_rangecheck		11000435	1					
ANR	11001022	Argument	gs_error_rangecheck		11000435	0					
ANR	11001023	Identifier	gs_error_rangecheck		11000435	0					
ANR	11001024	ForStatement	for ( i = 0 ; i < 3 ; i ++ )		11000435	2					
ANR	11001025	ForInit	i = 0 ;	2783:13:88976:88979	11000435	0	True				
ANR	11001026	AssignmentExpression	i = 0		11000435	0		=			
ANR	11001027	Identifier	i		11000435	0					
ANR	11001028	PrimaryExpression	0		11000435	1					
ANR	11001029	Condition	i < 3	2783:17:88980:88982	11000435	1	True				
ANR	11001030	RelationalExpression	i < 3		11000435	0		<			
ANR	11001031	Identifier	i		11000435	0					
ANR	11001032	PrimaryExpression	3		11000435	1					
ANR	11001033	PostIncDecOperationExpression	i ++	2783:21:88984:88986	11000435	2	True				
ANR	11001034	Identifier	i		11000435	0					
ANR	11001035	IncDec	++		11000435	1					
ANR	11001036	CompoundStatement		79:26:2611:2611	11000435	3					
ANR	11001037	ExpressionStatement	"code = array_get ( imemory , pref , i , & valref )"	2784:12:89003:89046	11000435	0	True				
ANR	11001038	AssignmentExpression	"code = array_get ( imemory , pref , i , & valref )"		11000435	0		=			
ANR	11001039	Identifier	code		11000435	0					
ANR	11001040	CallExpression	"array_get ( imemory , pref , i , & valref )"		11000435	1					
ANR	11001041	Callee	array_get		11000435	0					
ANR	11001042	Identifier	array_get		11000435	0					
ANR	11001043	ArgumentList	imemory		11000435	1					
ANR	11001044	Argument	imemory		11000435	0					
ANR	11001045	Identifier	imemory		11000435	0					
ANR	11001046	Argument	pref		11000435	1					
ANR	11001047	Identifier	pref		11000435	0					
ANR	11001048	Argument	i		11000435	2					
ANR	11001049	Identifier	i		11000435	0					
ANR	11001050	Argument	& valref		11000435	3					
ANR	11001051	UnaryOperationExpression	& valref		11000435	0					
ANR	11001052	UnaryOperator	&		11000435	0					
ANR	11001053	Identifier	valref		11000435	1					
ANR	11001054	IfStatement	if ( code < 0 )		11000435	1					
ANR	11001055	Condition	code < 0	2785:16:89064:89071	11000435	0	True				
ANR	11001056	RelationalExpression	code < 0		11000435	0		<			
ANR	11001057	Identifier	code		11000435	0					
ANR	11001058	PrimaryExpression	0		11000435	1					
ANR	11001059	ReturnStatement	return code ;	2786:16:89090:89101	11000435	1	True				
ANR	11001060	Identifier	code		11000435	0					
ANR	11001061	ExpressionStatement	check_proc ( valref )	2787:12:89115:89133	11000435	2	True				
ANR	11001062	CallExpression	check_proc ( valref )		11000435	0					
ANR	11001063	Callee	check_proc		11000435	0					
ANR	11001064	Identifier	check_proc		11000435	0					
ANR	11001065	ArgumentList	valref		11000435	1					
ANR	11001066	Argument	valref		11000435	0					
ANR	11001067	Identifier	valref		11000435	0					
ANR	11001068	ExpressionStatement	"code = dict_find_string ( & CIEdict , ""RangeHIJ"" , & pref )"	2791:4:89156:89208	11000435	17	True				
ANR	11001069	AssignmentExpression	"code = dict_find_string ( & CIEdict , ""RangeHIJ"" , & pref )"		11000435	0		=			
ANR	11001070	Identifier	code		11000435	0					
ANR	11001071	CallExpression	"dict_find_string ( & CIEdict , ""RangeHIJ"" , & pref )"		11000435	1					
ANR	11001072	Callee	dict_find_string		11000435	0					
ANR	11001073	Identifier	dict_find_string		11000435	0					
ANR	11001074	ArgumentList	& CIEdict		11000435	1					
ANR	11001075	Argument	& CIEdict		11000435	0					
ANR	11001076	UnaryOperationExpression	& CIEdict		11000435	0					
ANR	11001077	UnaryOperator	&		11000435	0					
ANR	11001078	Identifier	CIEdict		11000435	1					
ANR	11001079	Argument	"""RangeHIJ"""		11000435	1					
ANR	11001080	PrimaryExpression	"""RangeHIJ"""		11000435	0					
ANR	11001081	Argument	& pref		11000435	2					
ANR	11001082	UnaryOperationExpression	& pref		11000435	0					
ANR	11001083	UnaryOperator	&		11000435	0					
ANR	11001084	Identifier	pref		11000435	1					
ANR	11001085	IfStatement	"if ( code > 0 && ! r_has_type ( pref , t_null ) )"		11000435	18					
ANR	11001086	Condition	"code > 0 && ! r_has_type ( pref , t_null )"	2792:8:89218:89254	11000435	0	True				
ANR	11001087	AndExpression	"code > 0 && ! r_has_type ( pref , t_null )"		11000435	0		&&			
ANR	11001088	RelationalExpression	code > 0		11000435	0		>			
ANR	11001089	Identifier	code		11000435	0					
ANR	11001090	PrimaryExpression	0		11000435	1					
ANR	11001091	UnaryOperationExpression	"! r_has_type ( pref , t_null )"		11000435	1					
ANR	11001092	UnaryOperator	!		11000435	0					
ANR	11001093	CallExpression	"r_has_type ( pref , t_null )"		11000435	1					
ANR	11001094	Callee	r_has_type		11000435	0					
ANR	11001095	Identifier	r_has_type		11000435	0					
ANR	11001096	ArgumentList	pref		11000435	1					
ANR	11001097	Argument	pref		11000435	0					
ANR	11001098	Identifier	pref		11000435	0					
ANR	11001099	Argument	t_null		11000435	1					
ANR	11001100	Identifier	t_null		11000435	0					
ANR	11001101	CompoundStatement		88:47:2879:2879	11000435	1					
ANR	11001102	IfStatement	if ( ! r_is_array ( pref ) )		11000435	0					
ANR	11001103	Condition	! r_is_array ( pref )	2793:12:89271:89287	11000435	0	True				
ANR	11001104	UnaryOperationExpression	! r_is_array ( pref )		11000435	0					
ANR	11001105	UnaryOperator	!		11000435	0					
ANR	11001106	CallExpression	r_is_array ( pref )		11000435	1					
ANR	11001107	Callee	r_is_array		11000435	0					
ANR	11001108	Identifier	r_is_array		11000435	0					
ANR	11001109	ArgumentList	pref		11000435	1					
ANR	11001110	Argument	pref		11000435	0					
ANR	11001111	Identifier	pref		11000435	0					
ANR	11001112	ExpressionStatement	return_error ( gs_error_typecheck )	2794:12:89302:89334	11000435	1	True				
ANR	11001113	CallExpression	return_error ( gs_error_typecheck )		11000435	0					
ANR	11001114	Callee	return_error		11000435	0					
ANR	11001115	Identifier	return_error		11000435	0					
ANR	11001116	ArgumentList	gs_error_typecheck		11000435	1					
ANR	11001117	Argument	gs_error_typecheck		11000435	0					
ANR	11001118	Identifier	gs_error_typecheck		11000435	0					
ANR	11001119	IfStatement	if ( r_size ( pref ) != 6 )		11000435	1					
ANR	11001120	Condition	r_size ( pref ) != 6	2795:12:89348:89364	11000435	0	True				
ANR	11001121	EqualityExpression	r_size ( pref ) != 6		11000435	0		!=			
ANR	11001122	CallExpression	r_size ( pref )		11000435	0					
ANR	11001123	Callee	r_size		11000435	0					
ANR	11001124	Identifier	r_size		11000435	0					
ANR	11001125	ArgumentList	pref		11000435	1					
ANR	11001126	Argument	pref		11000435	0					
ANR	11001127	Identifier	pref		11000435	0					
ANR	11001128	PrimaryExpression	6		11000435	1					
ANR	11001129	ExpressionStatement	return_error ( gs_error_rangecheck )	2796:12:89379:89412	11000435	1	True				
ANR	11001130	CallExpression	return_error ( gs_error_rangecheck )		11000435	0					
ANR	11001131	Callee	return_error		11000435	0					
ANR	11001132	Identifier	return_error		11000435	0					
ANR	11001133	ArgumentList	gs_error_rangecheck		11000435	1					
ANR	11001134	Argument	gs_error_rangecheck		11000435	0					
ANR	11001135	Identifier	gs_error_rangecheck		11000435	0					
ANR	11001136	ExpressionStatement	"code = get_cie_param_array ( imemory , pref , 6 , value )"	2797:8:89422:89473	11000435	2	True				
ANR	11001137	AssignmentExpression	"code = get_cie_param_array ( imemory , pref , 6 , value )"		11000435	0		=			
ANR	11001138	Identifier	code		11000435	0					
ANR	11001139	CallExpression	"get_cie_param_array ( imemory , pref , 6 , value )"		11000435	1					
ANR	11001140	Callee	get_cie_param_array		11000435	0					
ANR	11001141	Identifier	get_cie_param_array		11000435	0					
ANR	11001142	ArgumentList	imemory		11000435	1					
ANR	11001143	Argument	imemory		11000435	0					
ANR	11001144	Identifier	imemory		11000435	0					
ANR	11001145	Argument	pref		11000435	1					
ANR	11001146	Identifier	pref		11000435	0					
ANR	11001147	Argument	6		11000435	2					
ANR	11001148	PrimaryExpression	6		11000435	0					
ANR	11001149	Argument	value		11000435	3					
ANR	11001150	Identifier	value		11000435	0					
ANR	11001151	IfStatement	if ( code < 0 )		11000435	3					
ANR	11001152	Condition	code < 0	2798:12:89487:89494	11000435	0	True				
ANR	11001153	RelationalExpression	code < 0		11000435	0		<			
ANR	11001154	Identifier	code		11000435	0					
ANR	11001155	PrimaryExpression	0		11000435	1					
ANR	11001156	ReturnStatement	return code ;	2799:12:89509:89520	11000435	1	True				
ANR	11001157	Identifier	code		11000435	0					
ANR	11001158	IfStatement	if ( value [ 1 ] < value [ 0 ] || value [ 3 ] < value [ 2 ] || value [ 5 ] < value [ 4 ] )		11000435	4					
ANR	11001159	Condition	value [ 1 ] < value [ 0 ] || value [ 3 ] < value [ 2 ] || value [ 5 ] < value [ 4 ]	2800:12:89534:89598	11000435	0	True				
ANR	11001160	OrExpression	value [ 1 ] < value [ 0 ] || value [ 3 ] < value [ 2 ] || value [ 5 ] < value [ 4 ]		11000435	0		||			
ANR	11001161	RelationalExpression	value [ 1 ] < value [ 0 ]		11000435	0		<			
ANR	11001162	ArrayIndexing	value [ 1 ]		11000435	0					
ANR	11001163	Identifier	value		11000435	0					
ANR	11001164	PrimaryExpression	1		11000435	1					
ANR	11001165	ArrayIndexing	value [ 0 ]		11000435	1					
ANR	11001166	Identifier	value		11000435	0					
ANR	11001167	PrimaryExpression	0		11000435	1					
ANR	11001168	OrExpression	value [ 3 ] < value [ 2 ] || value [ 5 ] < value [ 4 ]		11000435	1		||			
ANR	11001169	RelationalExpression	value [ 3 ] < value [ 2 ]		11000435	0		<			
ANR	11001170	ArrayIndexing	value [ 3 ]		11000435	0					
ANR	11001171	Identifier	value		11000435	0					
ANR	11001172	PrimaryExpression	3		11000435	1					
ANR	11001173	ArrayIndexing	value [ 2 ]		11000435	1					
ANR	11001174	Identifier	value		11000435	0					
ANR	11001175	PrimaryExpression	2		11000435	1					
ANR	11001176	RelationalExpression	value [ 5 ] < value [ 4 ]		11000435	1		<			
ANR	11001177	ArrayIndexing	value [ 5 ]		11000435	0					
ANR	11001178	Identifier	value		11000435	0					
ANR	11001179	PrimaryExpression	5		11000435	1					
ANR	11001180	ArrayIndexing	value [ 4 ]		11000435	1					
ANR	11001181	Identifier	value		11000435	0					
ANR	11001182	PrimaryExpression	4		11000435	1					
ANR	11001183	ExpressionStatement	return_error ( gs_error_rangecheck )	2801:12:89613:89646	11000435	1	True				
ANR	11001184	CallExpression	return_error ( gs_error_rangecheck )		11000435	0					
ANR	11001185	Callee	return_error		11000435	0					
ANR	11001186	Identifier	return_error		11000435	0					
ANR	11001187	ArgumentList	gs_error_rangecheck		11000435	1					
ANR	11001188	Argument	gs_error_rangecheck		11000435	0					
ANR	11001189	Identifier	gs_error_rangecheck		11000435	0					
ANR	11001190	ExpressionStatement	* r = 0	2804:4:89659:89665	11000435	19	True				
ANR	11001191	AssignmentExpression	* r = 0		11000435	0		=			
ANR	11001192	UnaryOperationExpression	* r		11000435	0					
ANR	11001193	UnaryOperator	*		11000435	0					
ANR	11001194	Identifier	r		11000435	1					
ANR	11001195	PrimaryExpression	0		11000435	1					
ANR	11001196	ReturnStatement	return 0 ;	2805:4:89671:89679	11000435	20	True				
ANR	11001197	PrimaryExpression	0		11000435	0					
ANR	11001198	ReturnType	static int		11000435	1					
ANR	11001199	Identifier	validateciedefspace		11000435	2					
ANR	11001200	ParameterList	"i_ctx_t * i_ctx_p , ref * * r"		11000435	3					
ANR	11001201	Parameter	i_ctx_t * i_ctx_p	2704:31:86349:86365	11000435	0	True				
ANR	11001202	ParameterType	i_ctx_t *		11000435	0					
ANR	11001203	Identifier	i_ctx_p		11000435	1					
ANR	11001204	Parameter	ref * * r	2704:50:86368:86374	11000435	1	True				
ANR	11001205	ParameterType	ref * *		11000435	0					
ANR	11001206	Identifier	r		11000435	1					
ANR	11001207	CFGEntryNode	ENTRY		11000435		True				
ANR	11001208	CFGExitNode	EXIT		11000435		True				
ANR	11001209	Symbol	code		11000435						
ANR	11001210	Symbol	t_dictionary		11000435						
ANR	11001211	Symbol	gs_error_rangecheck		11000435						
ANR	11001212	Symbol	& CIEdict		11000435						
ANR	11001213	Symbol	gs_error_typecheck		11000435						
ANR	11001214	Symbol	& pref		11000435						
ANR	11001215	Symbol	r_has_type		11000435						
ANR	11001216	Symbol	t_null		11000435						
ANR	11001217	Symbol	& valref		11000435						
ANR	11001218	Symbol	pref		11000435						
ANR	11001219	Symbol	r_size		11000435						
ANR	11001220	Symbol	CIEspace		11000435						
ANR	11001221	Symbol	CIEdict		11000435						
ANR	11001222	Symbol	imemory		11000435						
ANR	11001223	Symbol	value		11000435						
ANR	11001224	Symbol	tempref		11000435						
ANR	11001225	Symbol	dict_find_string		11000435						
ANR	11001226	Symbol	array_get		11000435						
ANR	11001227	Symbol	i		11000435						
ANR	11001228	Symbol	& tempref		11000435						
ANR	11001229	Symbol	t_string		11000435						
ANR	11001230	Symbol	r		11000435						
ANR	11001231	Symbol	validatecieabcspace		11000435						
ANR	11001232	Symbol	i_ctx_p		11000435						
ANR	11001233	Symbol	* value		11000435						
ANR	11001234	Symbol	valref		11000435						
ANR	11001235	Symbol	r_is_array		11000435						
ANR	11001236	Symbol	* r		11000435						
ANR	11001237	Symbol	get_cie_param_array		11000435						
ANR	11001238	Function	ciedefdomain	2807:0:89683:90297							
ANR	11001239	FunctionDef	"ciedefdomain (i_ctx_t * i_ctx_p , ref * space , float * ptr)"		11001238	0					
ANR	11001240	CompoundStatement		2808:0:89750:90297	11001238	0					
ANR	11001241	IdentifierDeclStatement	int code ;	2809:4:89756:89764	11001238	0	True				
ANR	11001242	IdentifierDecl	code		11001238	0					
ANR	11001243	IdentifierDeclType	int		11001238	0					
ANR	11001244	Identifier	code		11001238	1					
ANR	11001245	IdentifierDeclStatement	"ref CIEdict , * tempref ;"	2810:4:89770:89795	11001238	1	True				
ANR	11001246	IdentifierDecl	CIEdict		11001238	0					
ANR	11001247	IdentifierDeclType	ref		11001238	0					
ANR	11001248	Identifier	CIEdict		11001238	1					
ANR	11001249	IdentifierDecl	* tempref		11001238	1					
ANR	11001250	IdentifierDeclType	ref *		11001238	0					
ANR	11001251	Identifier	tempref		11001238	1					
ANR	11001252	ExpressionStatement	"code = array_get ( imemory , space , 1 , & CIEdict )"	2812:4:89802:89847	11001238	2	True				
ANR	11001253	AssignmentExpression	"code = array_get ( imemory , space , 1 , & CIEdict )"		11001238	0		=			
ANR	11001254	Identifier	code		11001238	0					
ANR	11001255	CallExpression	"array_get ( imemory , space , 1 , & CIEdict )"		11001238	1					
ANR	11001256	Callee	array_get		11001238	0					
ANR	11001257	Identifier	array_get		11001238	0					
ANR	11001258	ArgumentList	imemory		11001238	1					
ANR	11001259	Argument	imemory		11001238	0					
ANR	11001260	Identifier	imemory		11001238	0					
ANR	11001261	Argument	space		11001238	1					
ANR	11001262	Identifier	space		11001238	0					
ANR	11001263	Argument	1		11001238	2					
ANR	11001264	PrimaryExpression	1		11001238	0					
ANR	11001265	Argument	& CIEdict		11001238	3					
ANR	11001266	UnaryOperationExpression	& CIEdict		11001238	0					
ANR	11001267	UnaryOperator	&		11001238	0					
ANR	11001268	Identifier	CIEdict		11001238	1					
ANR	11001269	IfStatement	if ( code < 0 )		11001238	3					
ANR	11001270	Condition	code < 0	2813:8:89857:89864	11001238	0	True				
ANR	11001271	RelationalExpression	code < 0		11001238	0		<			
ANR	11001272	Identifier	code		11001238	0					
ANR	11001273	PrimaryExpression	0		11001238	1					
ANR	11001274	ReturnStatement	return code ;	2814:8:89875:89886	11001238	1	True				
ANR	11001275	Identifier	code		11001238	0					
ANR	11001276	ExpressionStatement	"code = dict_find_string ( & CIEdict , ""RangeDEF"" , & tempref )"	2817:4:89951:90006	11001238	4	True				
ANR	11001277	AssignmentExpression	"code = dict_find_string ( & CIEdict , ""RangeDEF"" , & tempref )"		11001238	0		=			
ANR	11001278	Identifier	code		11001238	0					
ANR	11001279	CallExpression	"dict_find_string ( & CIEdict , ""RangeDEF"" , & tempref )"		11001238	1					
ANR	11001280	Callee	dict_find_string		11001238	0					
ANR	11001281	Identifier	dict_find_string		11001238	0					
ANR	11001282	ArgumentList	& CIEdict		11001238	1					
ANR	11001283	Argument	& CIEdict		11001238	0					
ANR	11001284	UnaryOperationExpression	& CIEdict		11001238	0					
ANR	11001285	UnaryOperator	&		11001238	0					
ANR	11001286	Identifier	CIEdict		11001238	1					
ANR	11001287	Argument	"""RangeDEF"""		11001238	1					
ANR	11001288	PrimaryExpression	"""RangeDEF"""		11001238	0					
ANR	11001289	Argument	& tempref		11001238	2					
ANR	11001290	UnaryOperationExpression	& tempref		11001238	0					
ANR	11001291	UnaryOperator	&		11001238	0					
ANR	11001292	Identifier	tempref		11001238	1					
ANR	11001293	IfStatement	"if ( code > 0 && ! r_has_type ( tempref , t_null ) )"		11001238	5					
ANR	11001294	Condition	"code > 0 && ! r_has_type ( tempref , t_null )"	2818:8:90016:90055	11001238	0	True				
ANR	11001295	AndExpression	"code > 0 && ! r_has_type ( tempref , t_null )"		11001238	0		&&			
ANR	11001296	RelationalExpression	code > 0		11001238	0		>			
ANR	11001297	Identifier	code		11001238	0					
ANR	11001298	PrimaryExpression	0		11001238	1					
ANR	11001299	UnaryOperationExpression	"! r_has_type ( tempref , t_null )"		11001238	1					
ANR	11001300	UnaryOperator	!		11001238	0					
ANR	11001301	CallExpression	"r_has_type ( tempref , t_null )"		11001238	1					
ANR	11001302	Callee	r_has_type		11001238	0					
ANR	11001303	Identifier	r_has_type		11001238	0					
ANR	11001304	ArgumentList	tempref		11001238	1					
ANR	11001305	Argument	tempref		11001238	0					
ANR	11001306	Identifier	tempref		11001238	0					
ANR	11001307	Argument	t_null		11001238	1					
ANR	11001308	Identifier	t_null		11001238	0					
ANR	11001309	CompoundStatement		11:50:307:307	11001238	1					
ANR	11001310	ExpressionStatement	"code = get_cie_param_array ( imemory , tempref , 6 , ptr )"	2819:8:90068:90120	11001238	0	True				
ANR	11001311	AssignmentExpression	"code = get_cie_param_array ( imemory , tempref , 6 , ptr )"		11001238	0		=			
ANR	11001312	Identifier	code		11001238	0					
ANR	11001313	CallExpression	"get_cie_param_array ( imemory , tempref , 6 , ptr )"		11001238	1					
ANR	11001314	Callee	get_cie_param_array		11001238	0					
ANR	11001315	Identifier	get_cie_param_array		11001238	0					
ANR	11001316	ArgumentList	imemory		11001238	1					
ANR	11001317	Argument	imemory		11001238	0					
ANR	11001318	Identifier	imemory		11001238	0					
ANR	11001319	Argument	tempref		11001238	1					
ANR	11001320	Identifier	tempref		11001238	0					
ANR	11001321	Argument	6		11001238	2					
ANR	11001322	PrimaryExpression	6		11001238	0					
ANR	11001323	Argument	ptr		11001238	3					
ANR	11001324	Identifier	ptr		11001238	0					
ANR	11001325	IfStatement	if ( code < 0 )		11001238	1					
ANR	11001326	Condition	code < 0	2820:12:90134:90141	11001238	0	True				
ANR	11001327	RelationalExpression	code < 0		11001238	0		<			
ANR	11001328	Identifier	code		11001238	0					
ANR	11001329	PrimaryExpression	0		11001238	1					
ANR	11001330	ReturnStatement	return code ;	2821:12:90156:90167	11001238	1	True				
ANR	11001331	Identifier	code		11001238	0					
ANR	11001332	ElseStatement	else		11001238	0					
ANR	11001333	CompoundStatement		15:11:429:429	11001238	0					
ANR	11001334	ExpressionStatement	"memcpy ( ptr , default_0_1 , 6 * sizeof ( float ) )"	2824:5:90234:90275	11001238	0	True				
ANR	11001335	CallExpression	"memcpy ( ptr , default_0_1 , 6 * sizeof ( float ) )"		11001238	0					
ANR	11001336	Callee	memcpy		11001238	0					
ANR	11001337	Identifier	memcpy		11001238	0					
ANR	11001338	ArgumentList	ptr		11001238	1					
ANR	11001339	Argument	ptr		11001238	0					
ANR	11001340	Identifier	ptr		11001238	0					
ANR	11001341	Argument	default_0_1		11001238	1					
ANR	11001342	Identifier	default_0_1		11001238	0					
ANR	11001343	Argument	6 * sizeof ( float )		11001238	2					
ANR	11001344	MultiplicativeExpression	6 * sizeof ( float )		11001238	0		*			
ANR	11001345	PrimaryExpression	6		11001238	0					
ANR	11001346	SizeofExpression	sizeof ( float )		11001238	1					
ANR	11001347	Sizeof	sizeof		11001238	0					
ANR	11001348	SizeofOperand	float		11001238	1					
ANR	11001349	ReturnStatement	return 0 ;	2826:4:90287:90295	11001238	6	True				
ANR	11001350	PrimaryExpression	0		11001238	0					
ANR	11001351	ReturnType	static int		11001238	1					
ANR	11001352	Identifier	ciedefdomain		11001238	2					
ANR	11001353	ParameterList	"i_ctx_t * i_ctx_p , ref * space , float * ptr"		11001238	3					
ANR	11001354	Parameter	i_ctx_t * i_ctx_p	2807:24:89707:89723	11001238	0	True				
ANR	11001355	ParameterType	i_ctx_t *		11001238	0					
ANR	11001356	Identifier	i_ctx_p		11001238	1					
ANR	11001357	Parameter	ref * space	2807:43:89726:89735	11001238	1	True				
ANR	11001358	ParameterType	ref *		11001238	0					
ANR	11001359	Identifier	space		11001238	1					
ANR	11001360	Parameter	float * ptr	2807:55:89738:89747	11001238	2	True				
ANR	11001361	ParameterType	float *		11001238	0					
ANR	11001362	Identifier	ptr		11001238	1					
ANR	11001363	CFGEntryNode	ENTRY		11001238		True				
ANR	11001364	CFGExitNode	EXIT		11001238		True				
ANR	11001365	Symbol	code		11001238						
ANR	11001366	Symbol	dict_find_string		11001238						
ANR	11001367	Symbol	array_get		11001238						
ANR	11001368	Symbol	& CIEdict		11001238						
ANR	11001369	Symbol	& tempref		11001238						
ANR	11001370	Symbol	space		11001238						
ANR	11001371	Symbol	ptr		11001238						
ANR	11001372	Symbol	r_has_type		11001238						
ANR	11001373	Symbol	t_null		11001238						
ANR	11001374	Symbol	i_ctx_p		11001238						
ANR	11001375	Symbol	CIEdict		11001238						
ANR	11001376	Symbol	imemory		11001238						
ANR	11001377	Symbol	get_cie_param_array		11001238						
ANR	11001378	Symbol	default_0_1		11001238						
ANR	11001379	Symbol	tempref		11001238						
ANR	11001380	Function	ciedefrange	2828:0:90299:90912							
ANR	11001381	FunctionDef	"ciedefrange (i_ctx_t * i_ctx_p , ref * space , float * ptr)"		11001380	0					
ANR	11001382	CompoundStatement		2829:0:90365:90912	11001380	0					
ANR	11001383	IdentifierDeclStatement	int code ;	2830:4:90371:90379	11001380	0	True				
ANR	11001384	IdentifierDecl	code		11001380	0					
ANR	11001385	IdentifierDeclType	int		11001380	0					
ANR	11001386	Identifier	code		11001380	1					
ANR	11001387	IdentifierDeclStatement	"ref CIEdict , * tempref ;"	2831:4:90385:90410	11001380	1	True				
ANR	11001388	IdentifierDecl	CIEdict		11001380	0					
ANR	11001389	IdentifierDeclType	ref		11001380	0					
ANR	11001390	Identifier	CIEdict		11001380	1					
ANR	11001391	IdentifierDecl	* tempref		11001380	1					
ANR	11001392	IdentifierDeclType	ref *		11001380	0					
ANR	11001393	Identifier	tempref		11001380	1					
ANR	11001394	ExpressionStatement	"code = array_get ( imemory , space , 1 , & CIEdict )"	2833:4:90417:90462	11001380	2	True				
ANR	11001395	AssignmentExpression	"code = array_get ( imemory , space , 1 , & CIEdict )"		11001380	0		=			
ANR	11001396	Identifier	code		11001380	0					
ANR	11001397	CallExpression	"array_get ( imemory , space , 1 , & CIEdict )"		11001380	1					
ANR	11001398	Callee	array_get		11001380	0					
ANR	11001399	Identifier	array_get		11001380	0					
ANR	11001400	ArgumentList	imemory		11001380	1					
ANR	11001401	Argument	imemory		11001380	0					
ANR	11001402	Identifier	imemory		11001380	0					
ANR	11001403	Argument	space		11001380	1					
ANR	11001404	Identifier	space		11001380	0					
ANR	11001405	Argument	1		11001380	2					
ANR	11001406	PrimaryExpression	1		11001380	0					
ANR	11001407	Argument	& CIEdict		11001380	3					
ANR	11001408	UnaryOperationExpression	& CIEdict		11001380	0					
ANR	11001409	UnaryOperator	&		11001380	0					
ANR	11001410	Identifier	CIEdict		11001380	1					
ANR	11001411	IfStatement	if ( code < 0 )		11001380	3					
ANR	11001412	Condition	code < 0	2834:8:90472:90479	11001380	0	True				
ANR	11001413	RelationalExpression	code < 0		11001380	0		<			
ANR	11001414	Identifier	code		11001380	0					
ANR	11001415	PrimaryExpression	0		11001380	1					
ANR	11001416	ReturnStatement	return code ;	2835:8:90490:90501	11001380	1	True				
ANR	11001417	Identifier	code		11001380	0					
ANR	11001418	ExpressionStatement	"code = dict_find_string ( & CIEdict , ""RangeDEF"" , & tempref )"	2838:4:90566:90621	11001380	4	True				
ANR	11001419	AssignmentExpression	"code = dict_find_string ( & CIEdict , ""RangeDEF"" , & tempref )"		11001380	0		=			
ANR	11001420	Identifier	code		11001380	0					
ANR	11001421	CallExpression	"dict_find_string ( & CIEdict , ""RangeDEF"" , & tempref )"		11001380	1					
ANR	11001422	Callee	dict_find_string		11001380	0					
ANR	11001423	Identifier	dict_find_string		11001380	0					
ANR	11001424	ArgumentList	& CIEdict		11001380	1					
ANR	11001425	Argument	& CIEdict		11001380	0					
ANR	11001426	UnaryOperationExpression	& CIEdict		11001380	0					
ANR	11001427	UnaryOperator	&		11001380	0					
ANR	11001428	Identifier	CIEdict		11001380	1					
ANR	11001429	Argument	"""RangeDEF"""		11001380	1					
ANR	11001430	PrimaryExpression	"""RangeDEF"""		11001380	0					
ANR	11001431	Argument	& tempref		11001380	2					
ANR	11001432	UnaryOperationExpression	& tempref		11001380	0					
ANR	11001433	UnaryOperator	&		11001380	0					
ANR	11001434	Identifier	tempref		11001380	1					
ANR	11001435	IfStatement	"if ( code > 0 && ! r_has_type ( tempref , t_null ) )"		11001380	5					
ANR	11001436	Condition	"code > 0 && ! r_has_type ( tempref , t_null )"	2839:8:90631:90670	11001380	0	True				
ANR	11001437	AndExpression	"code > 0 && ! r_has_type ( tempref , t_null )"		11001380	0		&&			
ANR	11001438	RelationalExpression	code > 0		11001380	0		>			
ANR	11001439	Identifier	code		11001380	0					
ANR	11001440	PrimaryExpression	0		11001380	1					
ANR	11001441	UnaryOperationExpression	"! r_has_type ( tempref , t_null )"		11001380	1					
ANR	11001442	UnaryOperator	!		11001380	0					
ANR	11001443	CallExpression	"r_has_type ( tempref , t_null )"		11001380	1					
ANR	11001444	Callee	r_has_type		11001380	0					
ANR	11001445	Identifier	r_has_type		11001380	0					
ANR	11001446	ArgumentList	tempref		11001380	1					
ANR	11001447	Argument	tempref		11001380	0					
ANR	11001448	Identifier	tempref		11001380	0					
ANR	11001449	Argument	t_null		11001380	1					
ANR	11001450	Identifier	t_null		11001380	0					
ANR	11001451	CompoundStatement		11:50:307:307	11001380	1					
ANR	11001452	ExpressionStatement	"code = get_cie_param_array ( imemory , tempref , 6 , ptr )"	2840:8:90683:90735	11001380	0	True				
ANR	11001453	AssignmentExpression	"code = get_cie_param_array ( imemory , tempref , 6 , ptr )"		11001380	0		=			
ANR	11001454	Identifier	code		11001380	0					
ANR	11001455	CallExpression	"get_cie_param_array ( imemory , tempref , 6 , ptr )"		11001380	1					
ANR	11001456	Callee	get_cie_param_array		11001380	0					
ANR	11001457	Identifier	get_cie_param_array		11001380	0					
ANR	11001458	ArgumentList	imemory		11001380	1					
ANR	11001459	Argument	imemory		11001380	0					
ANR	11001460	Identifier	imemory		11001380	0					
ANR	11001461	Argument	tempref		11001380	1					
ANR	11001462	Identifier	tempref		11001380	0					
ANR	11001463	Argument	6		11001380	2					
ANR	11001464	PrimaryExpression	6		11001380	0					
ANR	11001465	Argument	ptr		11001380	3					
ANR	11001466	Identifier	ptr		11001380	0					
ANR	11001467	IfStatement	if ( code < 0 )		11001380	1					
ANR	11001468	Condition	code < 0	2841:12:90749:90756	11001380	0	True				
ANR	11001469	RelationalExpression	code < 0		11001380	0		<			
ANR	11001470	Identifier	code		11001380	0					
ANR	11001471	PrimaryExpression	0		11001380	1					
ANR	11001472	ReturnStatement	return code ;	2842:12:90771:90782	11001380	1	True				
ANR	11001473	Identifier	code		11001380	0					
ANR	11001474	ElseStatement	else		11001380	0					
ANR	11001475	CompoundStatement		15:11:429:429	11001380	0					
ANR	11001476	ExpressionStatement	"memcpy ( ptr , default_0_1 , 6 * sizeof ( float ) )"	2845:5:90849:90890	11001380	0	True				
ANR	11001477	CallExpression	"memcpy ( ptr , default_0_1 , 6 * sizeof ( float ) )"		11001380	0					
ANR	11001478	Callee	memcpy		11001380	0					
ANR	11001479	Identifier	memcpy		11001380	0					
ANR	11001480	ArgumentList	ptr		11001380	1					
ANR	11001481	Argument	ptr		11001380	0					
ANR	11001482	Identifier	ptr		11001380	0					
ANR	11001483	Argument	default_0_1		11001380	1					
ANR	11001484	Identifier	default_0_1		11001380	0					
ANR	11001485	Argument	6 * sizeof ( float )		11001380	2					
ANR	11001486	MultiplicativeExpression	6 * sizeof ( float )		11001380	0		*			
ANR	11001487	PrimaryExpression	6		11001380	0					
ANR	11001488	SizeofExpression	sizeof ( float )		11001380	1					
ANR	11001489	Sizeof	sizeof		11001380	0					
ANR	11001490	SizeofOperand	float		11001380	1					
ANR	11001491	ReturnStatement	return 0 ;	2847:4:90902:90910	11001380	6	True				
ANR	11001492	PrimaryExpression	0		11001380	0					
ANR	11001493	ReturnType	static int		11001380	1					
ANR	11001494	Identifier	ciedefrange		11001380	2					
ANR	11001495	ParameterList	"i_ctx_t * i_ctx_p , ref * space , float * ptr"		11001380	3					
ANR	11001496	Parameter	i_ctx_t * i_ctx_p	2828:23:90322:90338	11001380	0	True				
ANR	11001497	ParameterType	i_ctx_t *		11001380	0					
ANR	11001498	Identifier	i_ctx_p		11001380	1					
ANR	11001499	Parameter	ref * space	2828:42:90341:90350	11001380	1	True				
ANR	11001500	ParameterType	ref *		11001380	0					
ANR	11001501	Identifier	space		11001380	1					
ANR	11001502	Parameter	float * ptr	2828:54:90353:90362	11001380	2	True				
ANR	11001503	ParameterType	float *		11001380	0					
ANR	11001504	Identifier	ptr		11001380	1					
ANR	11001505	CFGEntryNode	ENTRY		11001380		True				
ANR	11001506	CFGExitNode	EXIT		11001380		True				
ANR	11001507	Symbol	code		11001380						
ANR	11001508	Symbol	dict_find_string		11001380						
ANR	11001509	Symbol	array_get		11001380						
ANR	11001510	Symbol	& CIEdict		11001380						
ANR	11001511	Symbol	& tempref		11001380						
ANR	11001512	Symbol	space		11001380						
ANR	11001513	Symbol	ptr		11001380						
ANR	11001514	Symbol	r_has_type		11001380						
ANR	11001515	Symbol	t_null		11001380						
ANR	11001516	Symbol	i_ctx_p		11001380						
ANR	11001517	Symbol	CIEdict		11001380						
ANR	11001518	Symbol	imemory		11001380						
ANR	11001519	Symbol	get_cie_param_array		11001380						
ANR	11001520	Symbol	default_0_1		11001380						
ANR	11001521	Symbol	tempref		11001380						
ANR	11001522	Function	ciedefvalidate	2849:0:90914:91291							
ANR	11001523	FunctionDef	"ciedefvalidate (i_ctx_t * i_ctx_p , ref * space , float * values , int num_comps)"		11001522	0					
ANR	11001524	CompoundStatement		2850:0:91000:91291	11001522	0					
ANR	11001525	IdentifierDeclStatement	os_ptr op = osp ;	2851:4:91006:91021	11001522	0	True				
ANR	11001526	IdentifierDecl	op = osp		11001522	0					
ANR	11001527	IdentifierDeclType	os_ptr		11001522	0					
ANR	11001528	Identifier	op		11001522	1					
ANR	11001529	AssignmentExpression	op = osp		11001522	2		=			
ANR	11001530	Identifier	osp		11001522	0					
ANR	11001531	Identifier	osp		11001522	1					
ANR	11001532	IdentifierDeclStatement	int i ;	2852:4:91027:91032	11001522	1	True				
ANR	11001533	IdentifierDecl	i		11001522	0					
ANR	11001534	IdentifierDeclType	int		11001522	0					
ANR	11001535	Identifier	i		11001522	1					
ANR	11001536	IfStatement	if ( num_comps < 3 )		11001522	2					
ANR	11001537	Condition	num_comps < 3	2854:8:91043:91055	11001522	0	True				
ANR	11001538	RelationalExpression	num_comps < 3		11001522	0		<			
ANR	11001539	Identifier	num_comps		11001522	0					
ANR	11001540	PrimaryExpression	3		11001522	1					
ANR	11001541	ExpressionStatement	return_error ( gs_error_stackunderflow )	2855:8:91066:91103	11001522	1	True				
ANR	11001542	CallExpression	return_error ( gs_error_stackunderflow )		11001522	0					
ANR	11001543	Callee	return_error		11001522	0					
ANR	11001544	Identifier	return_error		11001522	0					
ANR	11001545	ArgumentList	gs_error_stackunderflow		11001522	1					
ANR	11001546	Argument	gs_error_stackunderflow		11001522	0					
ANR	11001547	Identifier	gs_error_stackunderflow		11001522	0					
ANR	11001548	ExpressionStatement	op -= 2	2857:4:91110:91117	11001522	3	True				
ANR	11001549	AssignmentExpression	op -= 2		11001522	0		-=			
ANR	11001550	Identifier	op		11001522	0					
ANR	11001551	PrimaryExpression	2		11001522	1					
ANR	11001552	ForStatement	for ( i = 0 ; i < 3 ; i ++ )		11001522	4					
ANR	11001553	ForInit	i = 0 ;	2858:9:91128:91131	11001522	0	True				
ANR	11001554	AssignmentExpression	i = 0		11001522	0		=			
ANR	11001555	Identifier	i		11001522	0					
ANR	11001556	PrimaryExpression	0		11001522	1					
ANR	11001557	Condition	i < 3	2858:13:91132:91134	11001522	1	True				
ANR	11001558	RelationalExpression	i < 3		11001522	0		<			
ANR	11001559	Identifier	i		11001522	0					
ANR	11001560	PrimaryExpression	3		11001522	1					
ANR	11001561	PostIncDecOperationExpression	i ++	2858:17:91136:91138	11001522	2	True				
ANR	11001562	Identifier	i		11001522	0					
ANR	11001563	IncDec	++		11001522	1					
ANR	11001564	CompoundStatement		9:22:140:140	11001522	3					
ANR	11001565	IfStatement	"if ( ! r_has_type ( op , t_integer ) && ! r_has_type ( op , t_real ) )"		11001522	0					
ANR	11001566	Condition	"! r_has_type ( op , t_integer ) && ! r_has_type ( op , t_real )"	2859:12:91155:91207	11001522	0	True				
ANR	11001567	AndExpression	"! r_has_type ( op , t_integer ) && ! r_has_type ( op , t_real )"		11001522	0		&&			
ANR	11001568	UnaryOperationExpression	"! r_has_type ( op , t_integer )"		11001522	0					
ANR	11001569	UnaryOperator	!		11001522	0					
ANR	11001570	CallExpression	"r_has_type ( op , t_integer )"		11001522	1					
ANR	11001571	Callee	r_has_type		11001522	0					
ANR	11001572	Identifier	r_has_type		11001522	0					
ANR	11001573	ArgumentList	op		11001522	1					
ANR	11001574	Argument	op		11001522	0					
ANR	11001575	Identifier	op		11001522	0					
ANR	11001576	Argument	t_integer		11001522	1					
ANR	11001577	Identifier	t_integer		11001522	0					
ANR	11001578	UnaryOperationExpression	"! r_has_type ( op , t_real )"		11001522	1					
ANR	11001579	UnaryOperator	!		11001522	0					
ANR	11001580	CallExpression	"r_has_type ( op , t_real )"		11001522	1					
ANR	11001581	Callee	r_has_type		11001522	0					
ANR	11001582	Identifier	r_has_type		11001522	0					
ANR	11001583	ArgumentList	op		11001522	1					
ANR	11001584	Argument	op		11001522	0					
ANR	11001585	Identifier	op		11001522	0					
ANR	11001586	Argument	t_real		11001522	1					
ANR	11001587	Identifier	t_real		11001522	0					
ANR	11001588	ExpressionStatement	return_error ( gs_error_typecheck )	2860:12:91222:91254	11001522	1	True				
ANR	11001589	CallExpression	return_error ( gs_error_typecheck )		11001522	0					
ANR	11001590	Callee	return_error		11001522	0					
ANR	11001591	Identifier	return_error		11001522	0					
ANR	11001592	ArgumentList	gs_error_typecheck		11001522	1					
ANR	11001593	Argument	gs_error_typecheck		11001522	0					
ANR	11001594	Identifier	gs_error_typecheck		11001522	0					
ANR	11001595	ExpressionStatement	op ++	2861:8:91264:91268	11001522	1	True				
ANR	11001596	PostIncDecOperationExpression	op ++		11001522	0					
ANR	11001597	Identifier	op		11001522	0					
ANR	11001598	IncDec	++		11001522	1					
ANR	11001599	ReturnStatement	return 0 ;	2864:4:91281:91289	11001522	5	True				
ANR	11001600	PrimaryExpression	0		11001522	0					
ANR	11001601	ReturnType	static int		11001522	1					
ANR	11001602	Identifier	ciedefvalidate		11001522	2					
ANR	11001603	ParameterList	"i_ctx_t * i_ctx_p , ref * space , float * values , int num_comps"		11001522	3					
ANR	11001604	Parameter	i_ctx_t * i_ctx_p	2849:26:90940:90955	11001522	0	True				
ANR	11001605	ParameterType	i_ctx_t *		11001522	0					
ANR	11001606	Identifier	i_ctx_p		11001522	1					
ANR	11001607	Parameter	ref * space	2849:44:90958:90967	11001522	1	True				
ANR	11001608	ParameterType	ref *		11001522	0					
ANR	11001609	Identifier	space		11001522	1					
ANR	11001610	Parameter	float * values	2849:56:90970:90982	11001522	2	True				
ANR	11001611	ParameterType	float *		11001522	0					
ANR	11001612	Identifier	values		11001522	1					
ANR	11001613	Parameter	int num_comps	2849:71:90985:90997	11001522	3	True				
ANR	11001614	ParameterType	int		11001522	0					
ANR	11001615	Identifier	num_comps		11001522	1					
ANR	11001616	CFGEntryNode	ENTRY		11001522		True				
ANR	11001617	CFGExitNode	EXIT		11001522		True				
ANR	11001618	Symbol	op		11001522						
ANR	11001619	Symbol	r_has_type		11001522						
ANR	11001620	Symbol	gs_error_typecheck		11001522						
ANR	11001621	Symbol	t_integer		11001522						
ANR	11001622	Symbol	gs_error_stackunderflow		11001522						
ANR	11001623	Symbol	i_ctx_p		11001522						
ANR	11001624	Symbol	values		11001522						
ANR	11001625	Symbol	num_comps		11001522						
ANR	11001626	Symbol	i		11001522						
ANR	11001627	Symbol	t_real		11001522						
ANR	11001628	Symbol	osp		11001522						
ANR	11001629	Symbol	space		11001522						
ANR	11001630	Function	ciedefcompareproc	2866:0:91293:92744							
ANR	11001631	FunctionDef	"ciedefcompareproc (i_ctx_t * i_ctx_p , ref * space , ref * testspace)"		11001630	0					
ANR	11001632	CompoundStatement		2867:0:91368:92744	11001630	0					
ANR	11001633	IdentifierDeclStatement	int code = 0 ;	2868:4:91374:91386	11001630	0	True				
ANR	11001634	IdentifierDecl	code = 0		11001630	0					
ANR	11001635	IdentifierDeclType	int		11001630	0					
ANR	11001636	Identifier	code		11001630	1					
ANR	11001637	AssignmentExpression	code = 0		11001630	2		=			
ANR	11001638	Identifier	code		11001630	0					
ANR	11001639	PrimaryExpression	0		11001630	1					
ANR	11001640	IdentifierDeclStatement	"ref CIEdict1 , CIEdict2 ;"	2869:4:91392:91414	11001630	1	True				
ANR	11001641	IdentifierDecl	CIEdict1		11001630	0					
ANR	11001642	IdentifierDeclType	ref		11001630	0					
ANR	11001643	Identifier	CIEdict1		11001630	1					
ANR	11001644	IdentifierDecl	CIEdict2		11001630	1					
ANR	11001645	IdentifierDeclType	ref		11001630	0					
ANR	11001646	Identifier	CIEdict2		11001630	1					
ANR	11001647	ExpressionStatement	"code = array_get ( imemory , space , 1 , & CIEdict1 )"	2871:4:91421:91467	11001630	2	True				
ANR	11001648	AssignmentExpression	"code = array_get ( imemory , space , 1 , & CIEdict1 )"		11001630	0		=			
ANR	11001649	Identifier	code		11001630	0					
ANR	11001650	CallExpression	"array_get ( imemory , space , 1 , & CIEdict1 )"		11001630	1					
ANR	11001651	Callee	array_get		11001630	0					
ANR	11001652	Identifier	array_get		11001630	0					
ANR	11001653	ArgumentList	imemory		11001630	1					
ANR	11001654	Argument	imemory		11001630	0					
ANR	11001655	Identifier	imemory		11001630	0					
ANR	11001656	Argument	space		11001630	1					
ANR	11001657	Identifier	space		11001630	0					
ANR	11001658	Argument	1		11001630	2					
ANR	11001659	PrimaryExpression	1		11001630	0					
ANR	11001660	Argument	& CIEdict1		11001630	3					
ANR	11001661	UnaryOperationExpression	& CIEdict1		11001630	0					
ANR	11001662	UnaryOperator	&		11001630	0					
ANR	11001663	Identifier	CIEdict1		11001630	1					
ANR	11001664	IfStatement	if ( code < 0 )		11001630	3					
ANR	11001665	Condition	code < 0	2872:8:91477:91484	11001630	0	True				
ANR	11001666	RelationalExpression	code < 0		11001630	0		<			
ANR	11001667	Identifier	code		11001630	0					
ANR	11001668	PrimaryExpression	0		11001630	1					
ANR	11001669	ReturnStatement	return 0 ;	2873:8:91495:91503	11001630	1	True				
ANR	11001670	PrimaryExpression	0		11001630	0					
ANR	11001671	ExpressionStatement	"code = array_get ( imemory , testspace , 1 , & CIEdict2 )"	2874:4:91509:91559	11001630	4	True				
ANR	11001672	AssignmentExpression	"code = array_get ( imemory , testspace , 1 , & CIEdict2 )"		11001630	0		=			
ANR	11001673	Identifier	code		11001630	0					
ANR	11001674	CallExpression	"array_get ( imemory , testspace , 1 , & CIEdict2 )"		11001630	1					
ANR	11001675	Callee	array_get		11001630	0					
ANR	11001676	Identifier	array_get		11001630	0					
ANR	11001677	ArgumentList	imemory		11001630	1					
ANR	11001678	Argument	imemory		11001630	0					
ANR	11001679	Identifier	imemory		11001630	0					
ANR	11001680	Argument	testspace		11001630	1					
ANR	11001681	Identifier	testspace		11001630	0					
ANR	11001682	Argument	1		11001630	2					
ANR	11001683	PrimaryExpression	1		11001630	0					
ANR	11001684	Argument	& CIEdict2		11001630	3					
ANR	11001685	UnaryOperationExpression	& CIEdict2		11001630	0					
ANR	11001686	UnaryOperator	&		11001630	0					
ANR	11001687	Identifier	CIEdict2		11001630	1					
ANR	11001688	IfStatement	if ( code < 0 )		11001630	5					
ANR	11001689	Condition	code < 0	2875:8:91569:91576	11001630	0	True				
ANR	11001690	RelationalExpression	code < 0		11001630	0		<			
ANR	11001691	Identifier	code		11001630	0					
ANR	11001692	PrimaryExpression	0		11001630	1					
ANR	11001693	ReturnStatement	return 0 ;	2876:8:91587:91595	11001630	1	True				
ANR	11001694	PrimaryExpression	0		11001630	0					
ANR	11001695	IfStatement	"if ( ! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""WhitePoint"" ) )"		11001630	6					
ANR	11001696	Condition	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""WhitePoint"" )"	2877:8:91605:91672	11001630	0	True				
ANR	11001697	UnaryOperationExpression	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""WhitePoint"" )"		11001630	0					
ANR	11001698	UnaryOperator	!		11001630	0					
ANR	11001699	CallExpression	"comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""WhitePoint"" )"		11001630	1					
ANR	11001700	Callee	comparedictkey		11001630	0					
ANR	11001701	Identifier	comparedictkey		11001630	0					
ANR	11001702	ArgumentList	i_ctx_p		11001630	1					
ANR	11001703	Argument	i_ctx_p		11001630	0					
ANR	11001704	Identifier	i_ctx_p		11001630	0					
ANR	11001705	Argument	& CIEdict1		11001630	1					
ANR	11001706	UnaryOperationExpression	& CIEdict1		11001630	0					
ANR	11001707	UnaryOperator	&		11001630	0					
ANR	11001708	Identifier	CIEdict1		11001630	1					
ANR	11001709	Argument	& CIEdict2		11001630	2					
ANR	11001710	UnaryOperationExpression	& CIEdict2		11001630	0					
ANR	11001711	UnaryOperator	&		11001630	0					
ANR	11001712	Identifier	CIEdict2		11001630	1					
ANR	11001713	Argument	"( char * ) ""WhitePoint"""		11001630	3					
ANR	11001714	CastExpression	"( char * ) ""WhitePoint"""		11001630	0					
ANR	11001715	CastTarget	char *		11001630	0					
ANR	11001716	PrimaryExpression	"""WhitePoint"""		11001630	1					
ANR	11001717	ReturnStatement	return 0 ;	2878:8:91683:91691	11001630	1	True				
ANR	11001718	PrimaryExpression	0		11001630	0					
ANR	11001719	IfStatement	"if ( ! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""BlackPoint"" ) )"		11001630	7					
ANR	11001720	Condition	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""BlackPoint"" )"	2879:8:91701:91768	11001630	0	True				
ANR	11001721	UnaryOperationExpression	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""BlackPoint"" )"		11001630	0					
ANR	11001722	UnaryOperator	!		11001630	0					
ANR	11001723	CallExpression	"comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""BlackPoint"" )"		11001630	1					
ANR	11001724	Callee	comparedictkey		11001630	0					
ANR	11001725	Identifier	comparedictkey		11001630	0					
ANR	11001726	ArgumentList	i_ctx_p		11001630	1					
ANR	11001727	Argument	i_ctx_p		11001630	0					
ANR	11001728	Identifier	i_ctx_p		11001630	0					
ANR	11001729	Argument	& CIEdict1		11001630	1					
ANR	11001730	UnaryOperationExpression	& CIEdict1		11001630	0					
ANR	11001731	UnaryOperator	&		11001630	0					
ANR	11001732	Identifier	CIEdict1		11001630	1					
ANR	11001733	Argument	& CIEdict2		11001630	2					
ANR	11001734	UnaryOperationExpression	& CIEdict2		11001630	0					
ANR	11001735	UnaryOperator	&		11001630	0					
ANR	11001736	Identifier	CIEdict2		11001630	1					
ANR	11001737	Argument	"( char * ) ""BlackPoint"""		11001630	3					
ANR	11001738	CastExpression	"( char * ) ""BlackPoint"""		11001630	0					
ANR	11001739	CastTarget	char *		11001630	0					
ANR	11001740	PrimaryExpression	"""BlackPoint"""		11001630	1					
ANR	11001741	ReturnStatement	return 0 ;	2880:8:91779:91787	11001630	1	True				
ANR	11001742	PrimaryExpression	0		11001630	0					
ANR	11001743	IfStatement	"if ( ! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""RangeABC"" ) )"		11001630	8					
ANR	11001744	Condition	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""RangeABC"" )"	2881:8:91797:91862	11001630	0	True				
ANR	11001745	UnaryOperationExpression	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""RangeABC"" )"		11001630	0					
ANR	11001746	UnaryOperator	!		11001630	0					
ANR	11001747	CallExpression	"comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""RangeABC"" )"		11001630	1					
ANR	11001748	Callee	comparedictkey		11001630	0					
ANR	11001749	Identifier	comparedictkey		11001630	0					
ANR	11001750	ArgumentList	i_ctx_p		11001630	1					
ANR	11001751	Argument	i_ctx_p		11001630	0					
ANR	11001752	Identifier	i_ctx_p		11001630	0					
ANR	11001753	Argument	& CIEdict1		11001630	1					
ANR	11001754	UnaryOperationExpression	& CIEdict1		11001630	0					
ANR	11001755	UnaryOperator	&		11001630	0					
ANR	11001756	Identifier	CIEdict1		11001630	1					
ANR	11001757	Argument	& CIEdict2		11001630	2					
ANR	11001758	UnaryOperationExpression	& CIEdict2		11001630	0					
ANR	11001759	UnaryOperator	&		11001630	0					
ANR	11001760	Identifier	CIEdict2		11001630	1					
ANR	11001761	Argument	"( char * ) ""RangeABC"""		11001630	3					
ANR	11001762	CastExpression	"( char * ) ""RangeABC"""		11001630	0					
ANR	11001763	CastTarget	char *		11001630	0					
ANR	11001764	PrimaryExpression	"""RangeABC"""		11001630	1					
ANR	11001765	ReturnStatement	return 0 ;	2882:8:91873:91881	11001630	1	True				
ANR	11001766	PrimaryExpression	0		11001630	0					
ANR	11001767	IfStatement	"if ( ! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""DecodeABC"" ) )"		11001630	9					
ANR	11001768	Condition	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""DecodeABC"" )"	2883:8:91891:91957	11001630	0	True				
ANR	11001769	UnaryOperationExpression	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""DecodeABC"" )"		11001630	0					
ANR	11001770	UnaryOperator	!		11001630	0					
ANR	11001771	CallExpression	"comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""DecodeABC"" )"		11001630	1					
ANR	11001772	Callee	comparedictkey		11001630	0					
ANR	11001773	Identifier	comparedictkey		11001630	0					
ANR	11001774	ArgumentList	i_ctx_p		11001630	1					
ANR	11001775	Argument	i_ctx_p		11001630	0					
ANR	11001776	Identifier	i_ctx_p		11001630	0					
ANR	11001777	Argument	& CIEdict1		11001630	1					
ANR	11001778	UnaryOperationExpression	& CIEdict1		11001630	0					
ANR	11001779	UnaryOperator	&		11001630	0					
ANR	11001780	Identifier	CIEdict1		11001630	1					
ANR	11001781	Argument	& CIEdict2		11001630	2					
ANR	11001782	UnaryOperationExpression	& CIEdict2		11001630	0					
ANR	11001783	UnaryOperator	&		11001630	0					
ANR	11001784	Identifier	CIEdict2		11001630	1					
ANR	11001785	Argument	"( char * ) ""DecodeABC"""		11001630	3					
ANR	11001786	CastExpression	"( char * ) ""DecodeABC"""		11001630	0					
ANR	11001787	CastTarget	char *		11001630	0					
ANR	11001788	PrimaryExpression	"""DecodeABC"""		11001630	1					
ANR	11001789	ReturnStatement	return 0 ;	2884:8:91968:91976	11001630	1	True				
ANR	11001790	PrimaryExpression	0		11001630	0					
ANR	11001791	IfStatement	"if ( ! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""MatrixABC"" ) )"		11001630	10					
ANR	11001792	Condition	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""MatrixABC"" )"	2885:8:91986:92052	11001630	0	True				
ANR	11001793	UnaryOperationExpression	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""MatrixABC"" )"		11001630	0					
ANR	11001794	UnaryOperator	!		11001630	0					
ANR	11001795	CallExpression	"comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""MatrixABC"" )"		11001630	1					
ANR	11001796	Callee	comparedictkey		11001630	0					
ANR	11001797	Identifier	comparedictkey		11001630	0					
ANR	11001798	ArgumentList	i_ctx_p		11001630	1					
ANR	11001799	Argument	i_ctx_p		11001630	0					
ANR	11001800	Identifier	i_ctx_p		11001630	0					
ANR	11001801	Argument	& CIEdict1		11001630	1					
ANR	11001802	UnaryOperationExpression	& CIEdict1		11001630	0					
ANR	11001803	UnaryOperator	&		11001630	0					
ANR	11001804	Identifier	CIEdict1		11001630	1					
ANR	11001805	Argument	& CIEdict2		11001630	2					
ANR	11001806	UnaryOperationExpression	& CIEdict2		11001630	0					
ANR	11001807	UnaryOperator	&		11001630	0					
ANR	11001808	Identifier	CIEdict2		11001630	1					
ANR	11001809	Argument	"( char * ) ""MatrixABC"""		11001630	3					
ANR	11001810	CastExpression	"( char * ) ""MatrixABC"""		11001630	0					
ANR	11001811	CastTarget	char *		11001630	0					
ANR	11001812	PrimaryExpression	"""MatrixABC"""		11001630	1					
ANR	11001813	ReturnStatement	return 0 ;	2886:8:92063:92071	11001630	1	True				
ANR	11001814	PrimaryExpression	0		11001630	0					
ANR	11001815	IfStatement	"if ( ! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""RangeLMN"" ) )"		11001630	11					
ANR	11001816	Condition	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""RangeLMN"" )"	2887:8:92081:92146	11001630	0	True				
ANR	11001817	UnaryOperationExpression	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""RangeLMN"" )"		11001630	0					
ANR	11001818	UnaryOperator	!		11001630	0					
ANR	11001819	CallExpression	"comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""RangeLMN"" )"		11001630	1					
ANR	11001820	Callee	comparedictkey		11001630	0					
ANR	11001821	Identifier	comparedictkey		11001630	0					
ANR	11001822	ArgumentList	i_ctx_p		11001630	1					
ANR	11001823	Argument	i_ctx_p		11001630	0					
ANR	11001824	Identifier	i_ctx_p		11001630	0					
ANR	11001825	Argument	& CIEdict1		11001630	1					
ANR	11001826	UnaryOperationExpression	& CIEdict1		11001630	0					
ANR	11001827	UnaryOperator	&		11001630	0					
ANR	11001828	Identifier	CIEdict1		11001630	1					
ANR	11001829	Argument	& CIEdict2		11001630	2					
ANR	11001830	UnaryOperationExpression	& CIEdict2		11001630	0					
ANR	11001831	UnaryOperator	&		11001630	0					
ANR	11001832	Identifier	CIEdict2		11001630	1					
ANR	11001833	Argument	"( char * ) ""RangeLMN"""		11001630	3					
ANR	11001834	CastExpression	"( char * ) ""RangeLMN"""		11001630	0					
ANR	11001835	CastTarget	char *		11001630	0					
ANR	11001836	PrimaryExpression	"""RangeLMN"""		11001630	1					
ANR	11001837	ReturnStatement	return 0 ;	2888:8:92157:92165	11001630	1	True				
ANR	11001838	PrimaryExpression	0		11001630	0					
ANR	11001839	IfStatement	"if ( ! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""DecodeLMN"" ) )"		11001630	12					
ANR	11001840	Condition	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""DecodeLMN"" )"	2889:8:92175:92241	11001630	0	True				
ANR	11001841	UnaryOperationExpression	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""DecodeLMN"" )"		11001630	0					
ANR	11001842	UnaryOperator	!		11001630	0					
ANR	11001843	CallExpression	"comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""DecodeLMN"" )"		11001630	1					
ANR	11001844	Callee	comparedictkey		11001630	0					
ANR	11001845	Identifier	comparedictkey		11001630	0					
ANR	11001846	ArgumentList	i_ctx_p		11001630	1					
ANR	11001847	Argument	i_ctx_p		11001630	0					
ANR	11001848	Identifier	i_ctx_p		11001630	0					
ANR	11001849	Argument	& CIEdict1		11001630	1					
ANR	11001850	UnaryOperationExpression	& CIEdict1		11001630	0					
ANR	11001851	UnaryOperator	&		11001630	0					
ANR	11001852	Identifier	CIEdict1		11001630	1					
ANR	11001853	Argument	& CIEdict2		11001630	2					
ANR	11001854	UnaryOperationExpression	& CIEdict2		11001630	0					
ANR	11001855	UnaryOperator	&		11001630	0					
ANR	11001856	Identifier	CIEdict2		11001630	1					
ANR	11001857	Argument	"( char * ) ""DecodeLMN"""		11001630	3					
ANR	11001858	CastExpression	"( char * ) ""DecodeLMN"""		11001630	0					
ANR	11001859	CastTarget	char *		11001630	0					
ANR	11001860	PrimaryExpression	"""DecodeLMN"""		11001630	1					
ANR	11001861	ReturnStatement	return 0 ;	2890:8:92252:92260	11001630	1	True				
ANR	11001862	PrimaryExpression	0		11001630	0					
ANR	11001863	IfStatement	"if ( ! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""MatrixMN"" ) )"		11001630	13					
ANR	11001864	Condition	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""MatrixMN"" )"	2891:8:92270:92335	11001630	0	True				
ANR	11001865	UnaryOperationExpression	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""MatrixMN"" )"		11001630	0					
ANR	11001866	UnaryOperator	!		11001630	0					
ANR	11001867	CallExpression	"comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""MatrixMN"" )"		11001630	1					
ANR	11001868	Callee	comparedictkey		11001630	0					
ANR	11001869	Identifier	comparedictkey		11001630	0					
ANR	11001870	ArgumentList	i_ctx_p		11001630	1					
ANR	11001871	Argument	i_ctx_p		11001630	0					
ANR	11001872	Identifier	i_ctx_p		11001630	0					
ANR	11001873	Argument	& CIEdict1		11001630	1					
ANR	11001874	UnaryOperationExpression	& CIEdict1		11001630	0					
ANR	11001875	UnaryOperator	&		11001630	0					
ANR	11001876	Identifier	CIEdict1		11001630	1					
ANR	11001877	Argument	& CIEdict2		11001630	2					
ANR	11001878	UnaryOperationExpression	& CIEdict2		11001630	0					
ANR	11001879	UnaryOperator	&		11001630	0					
ANR	11001880	Identifier	CIEdict2		11001630	1					
ANR	11001881	Argument	"( char * ) ""MatrixMN"""		11001630	3					
ANR	11001882	CastExpression	"( char * ) ""MatrixMN"""		11001630	0					
ANR	11001883	CastTarget	char *		11001630	0					
ANR	11001884	PrimaryExpression	"""MatrixMN"""		11001630	1					
ANR	11001885	ReturnStatement	return 0 ;	2892:8:92346:92354	11001630	1	True				
ANR	11001886	PrimaryExpression	0		11001630	0					
ANR	11001887	IfStatement	"if ( ! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""RangeDEF"" ) )"		11001630	14					
ANR	11001888	Condition	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""RangeDEF"" )"	2893:8:92364:92429	11001630	0	True				
ANR	11001889	UnaryOperationExpression	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""RangeDEF"" )"		11001630	0					
ANR	11001890	UnaryOperator	!		11001630	0					
ANR	11001891	CallExpression	"comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""RangeDEF"" )"		11001630	1					
ANR	11001892	Callee	comparedictkey		11001630	0					
ANR	11001893	Identifier	comparedictkey		11001630	0					
ANR	11001894	ArgumentList	i_ctx_p		11001630	1					
ANR	11001895	Argument	i_ctx_p		11001630	0					
ANR	11001896	Identifier	i_ctx_p		11001630	0					
ANR	11001897	Argument	& CIEdict1		11001630	1					
ANR	11001898	UnaryOperationExpression	& CIEdict1		11001630	0					
ANR	11001899	UnaryOperator	&		11001630	0					
ANR	11001900	Identifier	CIEdict1		11001630	1					
ANR	11001901	Argument	& CIEdict2		11001630	2					
ANR	11001902	UnaryOperationExpression	& CIEdict2		11001630	0					
ANR	11001903	UnaryOperator	&		11001630	0					
ANR	11001904	Identifier	CIEdict2		11001630	1					
ANR	11001905	Argument	"( char * ) ""RangeDEF"""		11001630	3					
ANR	11001906	CastExpression	"( char * ) ""RangeDEF"""		11001630	0					
ANR	11001907	CastTarget	char *		11001630	0					
ANR	11001908	PrimaryExpression	"""RangeDEF"""		11001630	1					
ANR	11001909	ReturnStatement	return 0 ;	2894:8:92440:92448	11001630	1	True				
ANR	11001910	PrimaryExpression	0		11001630	0					
ANR	11001911	IfStatement	"if ( ! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""DecodeDEF"" ) )"		11001630	15					
ANR	11001912	Condition	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""DecodeDEF"" )"	2895:8:92458:92524	11001630	0	True				
ANR	11001913	UnaryOperationExpression	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""DecodeDEF"" )"		11001630	0					
ANR	11001914	UnaryOperator	!		11001630	0					
ANR	11001915	CallExpression	"comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""DecodeDEF"" )"		11001630	1					
ANR	11001916	Callee	comparedictkey		11001630	0					
ANR	11001917	Identifier	comparedictkey		11001630	0					
ANR	11001918	ArgumentList	i_ctx_p		11001630	1					
ANR	11001919	Argument	i_ctx_p		11001630	0					
ANR	11001920	Identifier	i_ctx_p		11001630	0					
ANR	11001921	Argument	& CIEdict1		11001630	1					
ANR	11001922	UnaryOperationExpression	& CIEdict1		11001630	0					
ANR	11001923	UnaryOperator	&		11001630	0					
ANR	11001924	Identifier	CIEdict1		11001630	1					
ANR	11001925	Argument	& CIEdict2		11001630	2					
ANR	11001926	UnaryOperationExpression	& CIEdict2		11001630	0					
ANR	11001927	UnaryOperator	&		11001630	0					
ANR	11001928	Identifier	CIEdict2		11001630	1					
ANR	11001929	Argument	"( char * ) ""DecodeDEF"""		11001630	3					
ANR	11001930	CastExpression	"( char * ) ""DecodeDEF"""		11001630	0					
ANR	11001931	CastTarget	char *		11001630	0					
ANR	11001932	PrimaryExpression	"""DecodeDEF"""		11001630	1					
ANR	11001933	ReturnStatement	return 0 ;	2896:8:92535:92543	11001630	1	True				
ANR	11001934	PrimaryExpression	0		11001630	0					
ANR	11001935	IfStatement	"if ( ! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""RangeHIJ"" ) )"		11001630	16					
ANR	11001936	Condition	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""RangeHIJ"" )"	2897:8:92553:92618	11001630	0	True				
ANR	11001937	UnaryOperationExpression	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""RangeHIJ"" )"		11001630	0					
ANR	11001938	UnaryOperator	!		11001630	0					
ANR	11001939	CallExpression	"comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""RangeHIJ"" )"		11001630	1					
ANR	11001940	Callee	comparedictkey		11001630	0					
ANR	11001941	Identifier	comparedictkey		11001630	0					
ANR	11001942	ArgumentList	i_ctx_p		11001630	1					
ANR	11001943	Argument	i_ctx_p		11001630	0					
ANR	11001944	Identifier	i_ctx_p		11001630	0					
ANR	11001945	Argument	& CIEdict1		11001630	1					
ANR	11001946	UnaryOperationExpression	& CIEdict1		11001630	0					
ANR	11001947	UnaryOperator	&		11001630	0					
ANR	11001948	Identifier	CIEdict1		11001630	1					
ANR	11001949	Argument	& CIEdict2		11001630	2					
ANR	11001950	UnaryOperationExpression	& CIEdict2		11001630	0					
ANR	11001951	UnaryOperator	&		11001630	0					
ANR	11001952	Identifier	CIEdict2		11001630	1					
ANR	11001953	Argument	"( char * ) ""RangeHIJ"""		11001630	3					
ANR	11001954	CastExpression	"( char * ) ""RangeHIJ"""		11001630	0					
ANR	11001955	CastTarget	char *		11001630	0					
ANR	11001956	PrimaryExpression	"""RangeHIJ"""		11001630	1					
ANR	11001957	ReturnStatement	return 0 ;	2898:8:92629:92637	11001630	1	True				
ANR	11001958	PrimaryExpression	0		11001630	0					
ANR	11001959	IfStatement	"if ( ! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""Table"" ) )"		11001630	17					
ANR	11001960	Condition	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""Table"" )"	2899:8:92647:92709	11001630	0	True				
ANR	11001961	UnaryOperationExpression	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""Table"" )"		11001630	0					
ANR	11001962	UnaryOperator	!		11001630	0					
ANR	11001963	CallExpression	"comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""Table"" )"		11001630	1					
ANR	11001964	Callee	comparedictkey		11001630	0					
ANR	11001965	Identifier	comparedictkey		11001630	0					
ANR	11001966	ArgumentList	i_ctx_p		11001630	1					
ANR	11001967	Argument	i_ctx_p		11001630	0					
ANR	11001968	Identifier	i_ctx_p		11001630	0					
ANR	11001969	Argument	& CIEdict1		11001630	1					
ANR	11001970	UnaryOperationExpression	& CIEdict1		11001630	0					
ANR	11001971	UnaryOperator	&		11001630	0					
ANR	11001972	Identifier	CIEdict1		11001630	1					
ANR	11001973	Argument	& CIEdict2		11001630	2					
ANR	11001974	UnaryOperationExpression	& CIEdict2		11001630	0					
ANR	11001975	UnaryOperator	&		11001630	0					
ANR	11001976	Identifier	CIEdict2		11001630	1					
ANR	11001977	Argument	"( char * ) ""Table"""		11001630	3					
ANR	11001978	CastExpression	"( char * ) ""Table"""		11001630	0					
ANR	11001979	CastTarget	char *		11001630	0					
ANR	11001980	PrimaryExpression	"""Table"""		11001630	1					
ANR	11001981	ReturnStatement	return 0 ;	2900:8:92720:92728	11001630	1	True				
ANR	11001982	PrimaryExpression	0		11001630	0					
ANR	11001983	ReturnStatement	return 1 ;	2901:4:92734:92742	11001630	18	True				
ANR	11001984	PrimaryExpression	1		11001630	0					
ANR	11001985	ReturnType	static int		11001630	1					
ANR	11001986	Identifier	ciedefcompareproc		11001630	2					
ANR	11001987	ParameterList	"i_ctx_t * i_ctx_p , ref * space , ref * testspace"		11001630	3					
ANR	11001988	Parameter	i_ctx_t * i_ctx_p	2866:29:91322:91337	11001630	0	True				
ANR	11001989	ParameterType	i_ctx_t *		11001630	0					
ANR	11001990	Identifier	i_ctx_p		11001630	1					
ANR	11001991	Parameter	ref * space	2866:47:91340:91349	11001630	1	True				
ANR	11001992	ParameterType	ref *		11001630	0					
ANR	11001993	Identifier	space		11001630	1					
ANR	11001994	Parameter	ref * testspace	2866:59:91352:91365	11001630	2	True				
ANR	11001995	ParameterType	ref *		11001630	0					
ANR	11001996	Identifier	testspace		11001630	1					
ANR	11001997	CFGEntryNode	ENTRY		11001630		True				
ANR	11001998	CFGExitNode	EXIT		11001630		True				
ANR	11001999	Symbol	code		11001630						
ANR	11002000	Symbol	testspace		11001630						
ANR	11002001	Symbol	i_ctx_p		11001630						
ANR	11002002	Symbol	array_get		11001630						
ANR	11002003	Symbol	CIEdict1		11001630						
ANR	11002004	Symbol	CIEdict2		11001630						
ANR	11002005	Symbol	imemory		11001630						
ANR	11002006	Symbol	comparedictkey		11001630						
ANR	11002007	Symbol	& CIEdict2		11001630						
ANR	11002008	Symbol	& CIEdict1		11001630						
ANR	11002009	Symbol	space		11001630						
ANR	11002010	Function	hashciedefgspace	2905:0:92766:94322							
ANR	11002011	FunctionDef	"hashciedefgspace (i_ctx_t * i_ctx_p , ref * space , gs_md5_state_t * md5)"		11002010	0					
ANR	11002012	CompoundStatement		2906:0:92845:94322	11002010	0					
ANR	11002013	IdentifierDeclStatement	int code = 0 ;	2910:4:92956:92968	11002010	0	True				
ANR	11002014	IdentifierDecl	code = 0		11002010	0					
ANR	11002015	IdentifierDeclType	int		11002010	0					
ANR	11002016	Identifier	code		11002010	1					
ANR	11002017	AssignmentExpression	code = 0		11002010	2		=			
ANR	11002018	Identifier	code		11002010	0					
ANR	11002019	PrimaryExpression	0		11002010	1					
ANR	11002020	IdentifierDeclStatement	"ref CIEdict1 , spacename ;"	2911:4:92974:92997	11002010	1	True				
ANR	11002021	IdentifierDecl	CIEdict1		11002010	0					
ANR	11002022	IdentifierDeclType	ref		11002010	0					
ANR	11002023	Identifier	CIEdict1		11002010	1					
ANR	11002024	IdentifierDecl	spacename		11002010	1					
ANR	11002025	IdentifierDeclType	ref		11002010	0					
ANR	11002026	Identifier	spacename		11002010	1					
ANR	11002027	ExpressionStatement	"code = array_get ( imemory , space , 0 , & spacename )"	2913:4:93004:93051	11002010	2	True				
ANR	11002028	AssignmentExpression	"code = array_get ( imemory , space , 0 , & spacename )"		11002010	0		=			
ANR	11002029	Identifier	code		11002010	0					
ANR	11002030	CallExpression	"array_get ( imemory , space , 0 , & spacename )"		11002010	1					
ANR	11002031	Callee	array_get		11002010	0					
ANR	11002032	Identifier	array_get		11002010	0					
ANR	11002033	ArgumentList	imemory		11002010	1					
ANR	11002034	Argument	imemory		11002010	0					
ANR	11002035	Identifier	imemory		11002010	0					
ANR	11002036	Argument	space		11002010	1					
ANR	11002037	Identifier	space		11002010	0					
ANR	11002038	Argument	0		11002010	2					
ANR	11002039	PrimaryExpression	0		11002010	0					
ANR	11002040	Argument	& spacename		11002010	3					
ANR	11002041	UnaryOperationExpression	& spacename		11002010	0					
ANR	11002042	UnaryOperator	&		11002010	0					
ANR	11002043	Identifier	spacename		11002010	1					
ANR	11002044	IfStatement	if ( code < 0 )		11002010	3					
ANR	11002045	Condition	code < 0	2914:8:93061:93068	11002010	0	True				
ANR	11002046	RelationalExpression	code < 0		11002010	0		<			
ANR	11002047	Identifier	code		11002010	0					
ANR	11002048	PrimaryExpression	0		11002010	1					
ANR	11002049	ReturnStatement	return 0 ;	2915:8:93079:93087	11002010	1	True				
ANR	11002050	PrimaryExpression	0		11002010	0					
ANR	11002051	ExpressionStatement	"gs_md5_append ( md5 , ( const gs_md5_byte_t * ) & spacename . value . pname , sizeof ( spacename . value . pname ) )"	2916:4:93093:93189	11002010	4	True				
ANR	11002052	CallExpression	"gs_md5_append ( md5 , ( const gs_md5_byte_t * ) & spacename . value . pname , sizeof ( spacename . value . pname ) )"		11002010	0					
ANR	11002053	Callee	gs_md5_append		11002010	0					
ANR	11002054	Identifier	gs_md5_append		11002010	0					
ANR	11002055	ArgumentList	md5		11002010	1					
ANR	11002056	Argument	md5		11002010	0					
ANR	11002057	Identifier	md5		11002010	0					
ANR	11002058	Argument	( const gs_md5_byte_t * ) & spacename . value . pname		11002010	1					
ANR	11002059	CastExpression	( const gs_md5_byte_t * ) & spacename . value . pname		11002010	0					
ANR	11002060	CastTarget	const gs_md5_byte_t *		11002010	0					
ANR	11002061	UnaryOperationExpression	& spacename . value . pname		11002010	1					
ANR	11002062	UnaryOperator	&		11002010	0					
ANR	11002063	MemberAccess	spacename . value . pname		11002010	1					
ANR	11002064	MemberAccess	spacename . value		11002010	0					
ANR	11002065	Identifier	spacename		11002010	0					
ANR	11002066	Identifier	value		11002010	1					
ANR	11002067	Identifier	pname		11002010	1					
ANR	11002068	Argument	sizeof ( spacename . value . pname )		11002010	2					
ANR	11002069	SizeofExpression	sizeof ( spacename . value . pname )		11002010	0					
ANR	11002070	Sizeof	sizeof		11002010	0					
ANR	11002071	MemberAccess	spacename . value . pname		11002010	1					
ANR	11002072	MemberAccess	spacename . value		11002010	0					
ANR	11002073	Identifier	spacename		11002010	0					
ANR	11002074	Identifier	value		11002010	1					
ANR	11002075	Identifier	pname		11002010	1					
ANR	11002076	ExpressionStatement	"code = array_get ( imemory , space , 1 , & CIEdict1 )"	2918:4:93196:93242	11002010	5	True				
ANR	11002077	AssignmentExpression	"code = array_get ( imemory , space , 1 , & CIEdict1 )"		11002010	0		=			
ANR	11002078	Identifier	code		11002010	0					
ANR	11002079	CallExpression	"array_get ( imemory , space , 1 , & CIEdict1 )"		11002010	1					
ANR	11002080	Callee	array_get		11002010	0					
ANR	11002081	Identifier	array_get		11002010	0					
ANR	11002082	ArgumentList	imemory		11002010	1					
ANR	11002083	Argument	imemory		11002010	0					
ANR	11002084	Identifier	imemory		11002010	0					
ANR	11002085	Argument	space		11002010	1					
ANR	11002086	Identifier	space		11002010	0					
ANR	11002087	Argument	1		11002010	2					
ANR	11002088	PrimaryExpression	1		11002010	0					
ANR	11002089	Argument	& CIEdict1		11002010	3					
ANR	11002090	UnaryOperationExpression	& CIEdict1		11002010	0					
ANR	11002091	UnaryOperator	&		11002010	0					
ANR	11002092	Identifier	CIEdict1		11002010	1					
ANR	11002093	IfStatement	if ( code < 0 )		11002010	6					
ANR	11002094	Condition	code < 0	2919:8:93252:93259	11002010	0	True				
ANR	11002095	RelationalExpression	code < 0		11002010	0		<			
ANR	11002096	Identifier	code		11002010	0					
ANR	11002097	PrimaryExpression	0		11002010	1					
ANR	11002098	ReturnStatement	return 0 ;	2920:8:93270:93278	11002010	1	True				
ANR	11002099	PrimaryExpression	0		11002010	0					
ANR	11002100	IfStatement	"if ( ! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""WhitePoint"" , md5 ) )"		11002010	7					
ANR	11002101	Condition	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""WhitePoint"" , md5 )"	2921:8:93288:93346	11002010	0	True				
ANR	11002102	UnaryOperationExpression	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""WhitePoint"" , md5 )"		11002010	0					
ANR	11002103	UnaryOperator	!		11002010	0					
ANR	11002104	CallExpression	"hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""WhitePoint"" , md5 )"		11002010	1					
ANR	11002105	Callee	hashdictkey		11002010	0					
ANR	11002106	Identifier	hashdictkey		11002010	0					
ANR	11002107	ArgumentList	i_ctx_p		11002010	1					
ANR	11002108	Argument	i_ctx_p		11002010	0					
ANR	11002109	Identifier	i_ctx_p		11002010	0					
ANR	11002110	Argument	& CIEdict1		11002010	1					
ANR	11002111	UnaryOperationExpression	& CIEdict1		11002010	0					
ANR	11002112	UnaryOperator	&		11002010	0					
ANR	11002113	Identifier	CIEdict1		11002010	1					
ANR	11002114	Argument	"( char * ) ""WhitePoint"""		11002010	2					
ANR	11002115	CastExpression	"( char * ) ""WhitePoint"""		11002010	0					
ANR	11002116	CastTarget	char *		11002010	0					
ANR	11002117	PrimaryExpression	"""WhitePoint"""		11002010	1					
ANR	11002118	Argument	md5		11002010	3					
ANR	11002119	Identifier	md5		11002010	0					
ANR	11002120	ReturnStatement	return 0 ;	2922:8:93357:93365	11002010	1	True				
ANR	11002121	PrimaryExpression	0		11002010	0					
ANR	11002122	IfStatement	"if ( ! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""BlackPoint"" , md5 ) )"		11002010	8					
ANR	11002123	Condition	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""BlackPoint"" , md5 )"	2923:8:93375:93433	11002010	0	True				
ANR	11002124	UnaryOperationExpression	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""BlackPoint"" , md5 )"		11002010	0					
ANR	11002125	UnaryOperator	!		11002010	0					
ANR	11002126	CallExpression	"hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""BlackPoint"" , md5 )"		11002010	1					
ANR	11002127	Callee	hashdictkey		11002010	0					
ANR	11002128	Identifier	hashdictkey		11002010	0					
ANR	11002129	ArgumentList	i_ctx_p		11002010	1					
ANR	11002130	Argument	i_ctx_p		11002010	0					
ANR	11002131	Identifier	i_ctx_p		11002010	0					
ANR	11002132	Argument	& CIEdict1		11002010	1					
ANR	11002133	UnaryOperationExpression	& CIEdict1		11002010	0					
ANR	11002134	UnaryOperator	&		11002010	0					
ANR	11002135	Identifier	CIEdict1		11002010	1					
ANR	11002136	Argument	"( char * ) ""BlackPoint"""		11002010	2					
ANR	11002137	CastExpression	"( char * ) ""BlackPoint"""		11002010	0					
ANR	11002138	CastTarget	char *		11002010	0					
ANR	11002139	PrimaryExpression	"""BlackPoint"""		11002010	1					
ANR	11002140	Argument	md5		11002010	3					
ANR	11002141	Identifier	md5		11002010	0					
ANR	11002142	ReturnStatement	return 0 ;	2924:8:93444:93452	11002010	1	True				
ANR	11002143	PrimaryExpression	0		11002010	0					
ANR	11002144	IfStatement	"if ( ! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""RangeABC"" , md5 ) )"		11002010	9					
ANR	11002145	Condition	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""RangeABC"" , md5 )"	2925:8:93462:93518	11002010	0	True				
ANR	11002146	UnaryOperationExpression	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""RangeABC"" , md5 )"		11002010	0					
ANR	11002147	UnaryOperator	!		11002010	0					
ANR	11002148	CallExpression	"hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""RangeABC"" , md5 )"		11002010	1					
ANR	11002149	Callee	hashdictkey		11002010	0					
ANR	11002150	Identifier	hashdictkey		11002010	0					
ANR	11002151	ArgumentList	i_ctx_p		11002010	1					
ANR	11002152	Argument	i_ctx_p		11002010	0					
ANR	11002153	Identifier	i_ctx_p		11002010	0					
ANR	11002154	Argument	& CIEdict1		11002010	1					
ANR	11002155	UnaryOperationExpression	& CIEdict1		11002010	0					
ANR	11002156	UnaryOperator	&		11002010	0					
ANR	11002157	Identifier	CIEdict1		11002010	1					
ANR	11002158	Argument	"( char * ) ""RangeABC"""		11002010	2					
ANR	11002159	CastExpression	"( char * ) ""RangeABC"""		11002010	0					
ANR	11002160	CastTarget	char *		11002010	0					
ANR	11002161	PrimaryExpression	"""RangeABC"""		11002010	1					
ANR	11002162	Argument	md5		11002010	3					
ANR	11002163	Identifier	md5		11002010	0					
ANR	11002164	ReturnStatement	return 0 ;	2926:8:93529:93537	11002010	1	True				
ANR	11002165	PrimaryExpression	0		11002010	0					
ANR	11002166	IfStatement	"if ( ! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""DecodeABC"" , md5 ) )"		11002010	10					
ANR	11002167	Condition	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""DecodeABC"" , md5 )"	2927:8:93547:93604	11002010	0	True				
ANR	11002168	UnaryOperationExpression	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""DecodeABC"" , md5 )"		11002010	0					
ANR	11002169	UnaryOperator	!		11002010	0					
ANR	11002170	CallExpression	"hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""DecodeABC"" , md5 )"		11002010	1					
ANR	11002171	Callee	hashdictkey		11002010	0					
ANR	11002172	Identifier	hashdictkey		11002010	0					
ANR	11002173	ArgumentList	i_ctx_p		11002010	1					
ANR	11002174	Argument	i_ctx_p		11002010	0					
ANR	11002175	Identifier	i_ctx_p		11002010	0					
ANR	11002176	Argument	& CIEdict1		11002010	1					
ANR	11002177	UnaryOperationExpression	& CIEdict1		11002010	0					
ANR	11002178	UnaryOperator	&		11002010	0					
ANR	11002179	Identifier	CIEdict1		11002010	1					
ANR	11002180	Argument	"( char * ) ""DecodeABC"""		11002010	2					
ANR	11002181	CastExpression	"( char * ) ""DecodeABC"""		11002010	0					
ANR	11002182	CastTarget	char *		11002010	0					
ANR	11002183	PrimaryExpression	"""DecodeABC"""		11002010	1					
ANR	11002184	Argument	md5		11002010	3					
ANR	11002185	Identifier	md5		11002010	0					
ANR	11002186	ReturnStatement	return 0 ;	2928:8:93615:93623	11002010	1	True				
ANR	11002187	PrimaryExpression	0		11002010	0					
ANR	11002188	IfStatement	"if ( ! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""MatrixABC"" , md5 ) )"		11002010	11					
ANR	11002189	Condition	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""MatrixABC"" , md5 )"	2929:8:93633:93690	11002010	0	True				
ANR	11002190	UnaryOperationExpression	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""MatrixABC"" , md5 )"		11002010	0					
ANR	11002191	UnaryOperator	!		11002010	0					
ANR	11002192	CallExpression	"hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""MatrixABC"" , md5 )"		11002010	1					
ANR	11002193	Callee	hashdictkey		11002010	0					
ANR	11002194	Identifier	hashdictkey		11002010	0					
ANR	11002195	ArgumentList	i_ctx_p		11002010	1					
ANR	11002196	Argument	i_ctx_p		11002010	0					
ANR	11002197	Identifier	i_ctx_p		11002010	0					
ANR	11002198	Argument	& CIEdict1		11002010	1					
ANR	11002199	UnaryOperationExpression	& CIEdict1		11002010	0					
ANR	11002200	UnaryOperator	&		11002010	0					
ANR	11002201	Identifier	CIEdict1		11002010	1					
ANR	11002202	Argument	"( char * ) ""MatrixABC"""		11002010	2					
ANR	11002203	CastExpression	"( char * ) ""MatrixABC"""		11002010	0					
ANR	11002204	CastTarget	char *		11002010	0					
ANR	11002205	PrimaryExpression	"""MatrixABC"""		11002010	1					
ANR	11002206	Argument	md5		11002010	3					
ANR	11002207	Identifier	md5		11002010	0					
ANR	11002208	ReturnStatement	return 0 ;	2930:8:93701:93709	11002010	1	True				
ANR	11002209	PrimaryExpression	0		11002010	0					
ANR	11002210	IfStatement	"if ( ! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""RangeLMN"" , md5 ) )"		11002010	12					
ANR	11002211	Condition	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""RangeLMN"" , md5 )"	2931:8:93719:93775	11002010	0	True				
ANR	11002212	UnaryOperationExpression	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""RangeLMN"" , md5 )"		11002010	0					
ANR	11002213	UnaryOperator	!		11002010	0					
ANR	11002214	CallExpression	"hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""RangeLMN"" , md5 )"		11002010	1					
ANR	11002215	Callee	hashdictkey		11002010	0					
ANR	11002216	Identifier	hashdictkey		11002010	0					
ANR	11002217	ArgumentList	i_ctx_p		11002010	1					
ANR	11002218	Argument	i_ctx_p		11002010	0					
ANR	11002219	Identifier	i_ctx_p		11002010	0					
ANR	11002220	Argument	& CIEdict1		11002010	1					
ANR	11002221	UnaryOperationExpression	& CIEdict1		11002010	0					
ANR	11002222	UnaryOperator	&		11002010	0					
ANR	11002223	Identifier	CIEdict1		11002010	1					
ANR	11002224	Argument	"( char * ) ""RangeLMN"""		11002010	2					
ANR	11002225	CastExpression	"( char * ) ""RangeLMN"""		11002010	0					
ANR	11002226	CastTarget	char *		11002010	0					
ANR	11002227	PrimaryExpression	"""RangeLMN"""		11002010	1					
ANR	11002228	Argument	md5		11002010	3					
ANR	11002229	Identifier	md5		11002010	0					
ANR	11002230	ReturnStatement	return 0 ;	2932:8:93786:93794	11002010	1	True				
ANR	11002231	PrimaryExpression	0		11002010	0					
ANR	11002232	IfStatement	"if ( ! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""DecodeLMN"" , md5 ) )"		11002010	13					
ANR	11002233	Condition	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""DecodeLMN"" , md5 )"	2933:8:93804:93861	11002010	0	True				
ANR	11002234	UnaryOperationExpression	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""DecodeLMN"" , md5 )"		11002010	0					
ANR	11002235	UnaryOperator	!		11002010	0					
ANR	11002236	CallExpression	"hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""DecodeLMN"" , md5 )"		11002010	1					
ANR	11002237	Callee	hashdictkey		11002010	0					
ANR	11002238	Identifier	hashdictkey		11002010	0					
ANR	11002239	ArgumentList	i_ctx_p		11002010	1					
ANR	11002240	Argument	i_ctx_p		11002010	0					
ANR	11002241	Identifier	i_ctx_p		11002010	0					
ANR	11002242	Argument	& CIEdict1		11002010	1					
ANR	11002243	UnaryOperationExpression	& CIEdict1		11002010	0					
ANR	11002244	UnaryOperator	&		11002010	0					
ANR	11002245	Identifier	CIEdict1		11002010	1					
ANR	11002246	Argument	"( char * ) ""DecodeLMN"""		11002010	2					
ANR	11002247	CastExpression	"( char * ) ""DecodeLMN"""		11002010	0					
ANR	11002248	CastTarget	char *		11002010	0					
ANR	11002249	PrimaryExpression	"""DecodeLMN"""		11002010	1					
ANR	11002250	Argument	md5		11002010	3					
ANR	11002251	Identifier	md5		11002010	0					
ANR	11002252	ReturnStatement	return 0 ;	2934:8:93872:93880	11002010	1	True				
ANR	11002253	PrimaryExpression	0		11002010	0					
ANR	11002254	IfStatement	"if ( ! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""MatrixMN"" , md5 ) )"		11002010	14					
ANR	11002255	Condition	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""MatrixMN"" , md5 )"	2935:8:93890:93946	11002010	0	True				
ANR	11002256	UnaryOperationExpression	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""MatrixMN"" , md5 )"		11002010	0					
ANR	11002257	UnaryOperator	!		11002010	0					
ANR	11002258	CallExpression	"hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""MatrixMN"" , md5 )"		11002010	1					
ANR	11002259	Callee	hashdictkey		11002010	0					
ANR	11002260	Identifier	hashdictkey		11002010	0					
ANR	11002261	ArgumentList	i_ctx_p		11002010	1					
ANR	11002262	Argument	i_ctx_p		11002010	0					
ANR	11002263	Identifier	i_ctx_p		11002010	0					
ANR	11002264	Argument	& CIEdict1		11002010	1					
ANR	11002265	UnaryOperationExpression	& CIEdict1		11002010	0					
ANR	11002266	UnaryOperator	&		11002010	0					
ANR	11002267	Identifier	CIEdict1		11002010	1					
ANR	11002268	Argument	"( char * ) ""MatrixMN"""		11002010	2					
ANR	11002269	CastExpression	"( char * ) ""MatrixMN"""		11002010	0					
ANR	11002270	CastTarget	char *		11002010	0					
ANR	11002271	PrimaryExpression	"""MatrixMN"""		11002010	1					
ANR	11002272	Argument	md5		11002010	3					
ANR	11002273	Identifier	md5		11002010	0					
ANR	11002274	ReturnStatement	return 0 ;	2936:8:93957:93965	11002010	1	True				
ANR	11002275	PrimaryExpression	0		11002010	0					
ANR	11002276	IfStatement	"if ( ! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""RangeDEFG"" , md5 ) )"		11002010	15					
ANR	11002277	Condition	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""RangeDEFG"" , md5 )"	2937:8:93975:94032	11002010	0	True				
ANR	11002278	UnaryOperationExpression	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""RangeDEFG"" , md5 )"		11002010	0					
ANR	11002279	UnaryOperator	!		11002010	0					
ANR	11002280	CallExpression	"hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""RangeDEFG"" , md5 )"		11002010	1					
ANR	11002281	Callee	hashdictkey		11002010	0					
ANR	11002282	Identifier	hashdictkey		11002010	0					
ANR	11002283	ArgumentList	i_ctx_p		11002010	1					
ANR	11002284	Argument	i_ctx_p		11002010	0					
ANR	11002285	Identifier	i_ctx_p		11002010	0					
ANR	11002286	Argument	& CIEdict1		11002010	1					
ANR	11002287	UnaryOperationExpression	& CIEdict1		11002010	0					
ANR	11002288	UnaryOperator	&		11002010	0					
ANR	11002289	Identifier	CIEdict1		11002010	1					
ANR	11002290	Argument	"( char * ) ""RangeDEFG"""		11002010	2					
ANR	11002291	CastExpression	"( char * ) ""RangeDEFG"""		11002010	0					
ANR	11002292	CastTarget	char *		11002010	0					
ANR	11002293	PrimaryExpression	"""RangeDEFG"""		11002010	1					
ANR	11002294	Argument	md5		11002010	3					
ANR	11002295	Identifier	md5		11002010	0					
ANR	11002296	ReturnStatement	return 0 ;	2938:8:94043:94051	11002010	1	True				
ANR	11002297	PrimaryExpression	0		11002010	0					
ANR	11002298	IfStatement	"if ( ! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""DecodeDEFG"" , md5 ) )"		11002010	16					
ANR	11002299	Condition	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""DecodeDEFG"" , md5 )"	2939:8:94061:94119	11002010	0	True				
ANR	11002300	UnaryOperationExpression	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""DecodeDEFG"" , md5 )"		11002010	0					
ANR	11002301	UnaryOperator	!		11002010	0					
ANR	11002302	CallExpression	"hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""DecodeDEFG"" , md5 )"		11002010	1					
ANR	11002303	Callee	hashdictkey		11002010	0					
ANR	11002304	Identifier	hashdictkey		11002010	0					
ANR	11002305	ArgumentList	i_ctx_p		11002010	1					
ANR	11002306	Argument	i_ctx_p		11002010	0					
ANR	11002307	Identifier	i_ctx_p		11002010	0					
ANR	11002308	Argument	& CIEdict1		11002010	1					
ANR	11002309	UnaryOperationExpression	& CIEdict1		11002010	0					
ANR	11002310	UnaryOperator	&		11002010	0					
ANR	11002311	Identifier	CIEdict1		11002010	1					
ANR	11002312	Argument	"( char * ) ""DecodeDEFG"""		11002010	2					
ANR	11002313	CastExpression	"( char * ) ""DecodeDEFG"""		11002010	0					
ANR	11002314	CastTarget	char *		11002010	0					
ANR	11002315	PrimaryExpression	"""DecodeDEFG"""		11002010	1					
ANR	11002316	Argument	md5		11002010	3					
ANR	11002317	Identifier	md5		11002010	0					
ANR	11002318	ReturnStatement	return 0 ;	2940:8:94130:94138	11002010	1	True				
ANR	11002319	PrimaryExpression	0		11002010	0					
ANR	11002320	IfStatement	"if ( ! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""RangeHIJK"" , md5 ) )"		11002010	17					
ANR	11002321	Condition	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""RangeHIJK"" , md5 )"	2941:8:94148:94205	11002010	0	True				
ANR	11002322	UnaryOperationExpression	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""RangeHIJK"" , md5 )"		11002010	0					
ANR	11002323	UnaryOperator	!		11002010	0					
ANR	11002324	CallExpression	"hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""RangeHIJK"" , md5 )"		11002010	1					
ANR	11002325	Callee	hashdictkey		11002010	0					
ANR	11002326	Identifier	hashdictkey		11002010	0					
ANR	11002327	ArgumentList	i_ctx_p		11002010	1					
ANR	11002328	Argument	i_ctx_p		11002010	0					
ANR	11002329	Identifier	i_ctx_p		11002010	0					
ANR	11002330	Argument	& CIEdict1		11002010	1					
ANR	11002331	UnaryOperationExpression	& CIEdict1		11002010	0					
ANR	11002332	UnaryOperator	&		11002010	0					
ANR	11002333	Identifier	CIEdict1		11002010	1					
ANR	11002334	Argument	"( char * ) ""RangeHIJK"""		11002010	2					
ANR	11002335	CastExpression	"( char * ) ""RangeHIJK"""		11002010	0					
ANR	11002336	CastTarget	char *		11002010	0					
ANR	11002337	PrimaryExpression	"""RangeHIJK"""		11002010	1					
ANR	11002338	Argument	md5		11002010	3					
ANR	11002339	Identifier	md5		11002010	0					
ANR	11002340	ReturnStatement	return 0 ;	2942:8:94216:94224	11002010	1	True				
ANR	11002341	PrimaryExpression	0		11002010	0					
ANR	11002342	IfStatement	"if ( ! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""Table"" , md5 ) )"		11002010	18					
ANR	11002343	Condition	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""Table"" , md5 )"	2943:8:94234:94287	11002010	0	True				
ANR	11002344	UnaryOperationExpression	"! hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""Table"" , md5 )"		11002010	0					
ANR	11002345	UnaryOperator	!		11002010	0					
ANR	11002346	CallExpression	"hashdictkey ( i_ctx_p , & CIEdict1 , ( char * ) ""Table"" , md5 )"		11002010	1					
ANR	11002347	Callee	hashdictkey		11002010	0					
ANR	11002348	Identifier	hashdictkey		11002010	0					
ANR	11002349	ArgumentList	i_ctx_p		11002010	1					
ANR	11002350	Argument	i_ctx_p		11002010	0					
ANR	11002351	Identifier	i_ctx_p		11002010	0					
ANR	11002352	Argument	& CIEdict1		11002010	1					
ANR	11002353	UnaryOperationExpression	& CIEdict1		11002010	0					
ANR	11002354	UnaryOperator	&		11002010	0					
ANR	11002355	Identifier	CIEdict1		11002010	1					
ANR	11002356	Argument	"( char * ) ""Table"""		11002010	2					
ANR	11002357	CastExpression	"( char * ) ""Table"""		11002010	0					
ANR	11002358	CastTarget	char *		11002010	0					
ANR	11002359	PrimaryExpression	"""Table"""		11002010	1					
ANR	11002360	Argument	md5		11002010	3					
ANR	11002361	Identifier	md5		11002010	0					
ANR	11002362	ReturnStatement	return 0 ;	2944:8:94298:94306	11002010	1	True				
ANR	11002363	PrimaryExpression	0		11002010	0					
ANR	11002364	ReturnStatement	return 1 ;	2945:4:94312:94320	11002010	19	True				
ANR	11002365	PrimaryExpression	1		11002010	0					
ANR	11002366	ReturnType	static int		11002010	1					
ANR	11002367	Identifier	hashciedefgspace		11002010	2					
ANR	11002368	ParameterList	"i_ctx_t * i_ctx_p , ref * space , gs_md5_state_t * md5"		11002010	3					
ANR	11002369	Parameter	i_ctx_t * i_ctx_p	2905:28:92794:92809	11002010	0	True				
ANR	11002370	ParameterType	i_ctx_t *		11002010	0					
ANR	11002371	Identifier	i_ctx_p		11002010	1					
ANR	11002372	Parameter	ref * space	2905:46:92812:92821	11002010	1	True				
ANR	11002373	ParameterType	ref *		11002010	0					
ANR	11002374	Identifier	space		11002010	1					
ANR	11002375	Parameter	gs_md5_state_t * md5	2905:58:92824:92842	11002010	2	True				
ANR	11002376	ParameterType	gs_md5_state_t *		11002010	0					
ANR	11002377	Identifier	md5		11002010	1					
ANR	11002378	CFGEntryNode	ENTRY		11002010		True				
ANR	11002379	CFGExitNode	EXIT		11002010		True				
ANR	11002380	Symbol	spacename		11002010						
ANR	11002381	Symbol	hashdictkey		11002010						
ANR	11002382	Symbol	code		11002010						
ANR	11002383	Symbol	& spacename		11002010						
ANR	11002384	Symbol	array_get		11002010						
ANR	11002385	Symbol	& CIEdict1		11002010						
ANR	11002386	Symbol	space		11002010						
ANR	11002387	Symbol	spacename . value . pname		11002010						
ANR	11002388	Symbol	i_ctx_p		11002010						
ANR	11002389	Symbol	& spacename . value . pname		11002010						
ANR	11002390	Symbol	spacename . value		11002010						
ANR	11002391	Symbol	& spacename . value		11002010						
ANR	11002392	Symbol	CIEdict1		11002010						
ANR	11002393	Symbol	imemory		11002010						
ANR	11002394	Symbol	md5		11002010						
ANR	11002395	Function	setciedefgspace	2948:0:94325:96080							
ANR	11002396	FunctionDef	"setciedefgspace (i_ctx_t * i_ctx_p , ref * r , int * stage , int * cont , int CIESubst)"		11002395	0					
ANR	11002397	CompoundStatement		2949:0:94416:96080	11002395	0					
ANR	11002398	IdentifierDeclStatement	int code = 0 ;	2950:4:94422:94434	11002395	0	True				
ANR	11002399	IdentifierDecl	code = 0		11002395	0					
ANR	11002400	IdentifierDeclType	int		11002395	0					
ANR	11002401	Identifier	code		11002395	1					
ANR	11002402	AssignmentExpression	code = 0		11002395	2		=			
ANR	11002403	Identifier	code		11002395	0					
ANR	11002404	PrimaryExpression	0		11002395	1					
ANR	11002405	IdentifierDeclStatement	"ref CIEDict , * nocie ;"	2951:4:94440:94459	11002395	1	True				
ANR	11002406	IdentifierDecl	CIEDict		11002395	0					
ANR	11002407	IdentifierDeclType	ref		11002395	0					
ANR	11002408	Identifier	CIEDict		11002395	1					
ANR	11002409	IdentifierDecl	* nocie		11002395	1					
ANR	11002410	IdentifierDeclType	ref *		11002395	0					
ANR	11002411	Identifier	nocie		11002395	1					
ANR	11002412	IdentifierDeclStatement	ulong dictkey ;	2952:4:94465:94478	11002395	2	True				
ANR	11002413	IdentifierDecl	dictkey		11002395	0					
ANR	11002414	IdentifierDeclType	ulong		11002395	0					
ANR	11002415	Identifier	dictkey		11002395	1					
ANR	11002416	IdentifierDeclStatement	gs_md5_state_t md5 ;	2953:4:94484:94502	11002395	3	True				
ANR	11002417	IdentifierDecl	md5		11002395	0					
ANR	11002418	IdentifierDeclType	gs_md5_state_t		11002395	0					
ANR	11002419	Identifier	md5		11002395	1					
ANR	11002420	IdentifierDeclStatement	byte key [ 16 ] ;	2954:4:94508:94520	11002395	4	True				
ANR	11002421	IdentifierDecl	key [ 16 ]		11002395	0					
ANR	11002422	IdentifierDeclType	byte [ 16 ]		11002395	0					
ANR	11002423	Identifier	key		11002395	1					
ANR	11002424	PrimaryExpression	16		11002395	2					
ANR	11002425	IfStatement	if ( i_ctx_p -> language_level < 3 )		11002395	5					
ANR	11002426	Condition	i_ctx_p -> language_level < 3	2956:8:94531:94557	11002395	0	True				
ANR	11002427	RelationalExpression	i_ctx_p -> language_level < 3		11002395	0		<			
ANR	11002428	PtrMemberAccess	i_ctx_p -> language_level		11002395	0					
ANR	11002429	Identifier	i_ctx_p		11002395	0					
ANR	11002430	Identifier	language_level		11002395	1					
ANR	11002431	PrimaryExpression	3		11002395	1					
ANR	11002432	ExpressionStatement	return_error ( gs_error_undefined )	2957:8:94568:94600	11002395	1	True				
ANR	11002433	CallExpression	return_error ( gs_error_undefined )		11002395	0					
ANR	11002434	Callee	return_error		11002395	0					
ANR	11002435	Identifier	return_error		11002395	0					
ANR	11002436	ArgumentList	gs_error_undefined		11002395	1					
ANR	11002437	Argument	gs_error_undefined		11002395	0					
ANR	11002438	Identifier	gs_error_undefined		11002395	0					
ANR	11002439	ExpressionStatement	"code = dict_find_string ( systemdict , ""NOCIE"" , & nocie )"	2959:4:94607:94659	11002395	6	True				
ANR	11002440	AssignmentExpression	"code = dict_find_string ( systemdict , ""NOCIE"" , & nocie )"		11002395	0		=			
ANR	11002441	Identifier	code		11002395	0					
ANR	11002442	CallExpression	"dict_find_string ( systemdict , ""NOCIE"" , & nocie )"		11002395	1					
ANR	11002443	Callee	dict_find_string		11002395	0					
ANR	11002444	Identifier	dict_find_string		11002395	0					
ANR	11002445	ArgumentList	systemdict		11002395	1					
ANR	11002446	Argument	systemdict		11002395	0					
ANR	11002447	Identifier	systemdict		11002395	0					
ANR	11002448	Argument	"""NOCIE"""		11002395	1					
ANR	11002449	PrimaryExpression	"""NOCIE"""		11002395	0					
ANR	11002450	Argument	& nocie		11002395	2					
ANR	11002451	UnaryOperationExpression	& nocie		11002395	0					
ANR	11002452	UnaryOperator	&		11002395	0					
ANR	11002453	Identifier	nocie		11002395	1					
ANR	11002454	IfStatement	if ( code > 0 )		11002395	7					
ANR	11002455	Condition	code > 0	2960:8:94669:94676	11002395	0	True				
ANR	11002456	RelationalExpression	code > 0		11002395	0		>			
ANR	11002457	Identifier	code		11002395	0					
ANR	11002458	PrimaryExpression	0		11002395	1					
ANR	11002459	CompoundStatement		12:18:262:262	11002395	1					
ANR	11002460	IfStatement	"if ( ! r_has_type ( nocie , t_boolean ) )"		11002395	0					
ANR	11002461	Condition	"! r_has_type ( nocie , t_boolean )"	2961:12:94693:94721	11002395	0	True				
ANR	11002462	UnaryOperationExpression	"! r_has_type ( nocie , t_boolean )"		11002395	0					
ANR	11002463	UnaryOperator	!		11002395	0					
ANR	11002464	CallExpression	"r_has_type ( nocie , t_boolean )"		11002395	1					
ANR	11002465	Callee	r_has_type		11002395	0					
ANR	11002466	Identifier	r_has_type		11002395	0					
ANR	11002467	ArgumentList	nocie		11002395	1					
ANR	11002468	Argument	nocie		11002395	0					
ANR	11002469	Identifier	nocie		11002395	0					
ANR	11002470	Argument	t_boolean		11002395	1					
ANR	11002471	Identifier	t_boolean		11002395	0					
ANR	11002472	ExpressionStatement	return_error ( gs_error_typecheck )	2962:12:94736:94768	11002395	1	True				
ANR	11002473	CallExpression	return_error ( gs_error_typecheck )		11002395	0					
ANR	11002474	Callee	return_error		11002395	0					
ANR	11002475	Identifier	return_error		11002395	0					
ANR	11002476	ArgumentList	gs_error_typecheck		11002395	1					
ANR	11002477	Argument	gs_error_typecheck		11002395	0					
ANR	11002478	Identifier	gs_error_typecheck		11002395	0					
ANR	11002479	IfStatement	if ( nocie -> value . boolval )		11002395	1					
ANR	11002480	Condition	nocie -> value . boolval	2963:12:94782:94801	11002395	0	True				
ANR	11002481	MemberAccess	nocie -> value . boolval		11002395	0					
ANR	11002482	PtrMemberAccess	nocie -> value		11002395	0					
ANR	11002483	Identifier	nocie		11002395	0					
ANR	11002484	Identifier	value		11002395	1					
ANR	11002485	Identifier	boolval		11002395	1					
ANR	11002486	ReturnStatement	"return setcmykspace ( i_ctx_p , r , stage , cont , 1 ) ;"	2964:12:94816:94863	11002395	1	True				
ANR	11002487	CallExpression	"setcmykspace ( i_ctx_p , r , stage , cont , 1 )"		11002395	0					
ANR	11002488	Callee	setcmykspace		11002395	0					
ANR	11002489	Identifier	setcmykspace		11002395	0					
ANR	11002490	ArgumentList	i_ctx_p		11002395	1					
ANR	11002491	Argument	i_ctx_p		11002395	0					
ANR	11002492	Identifier	i_ctx_p		11002395	0					
ANR	11002493	Argument	r		11002395	1					
ANR	11002494	Identifier	r		11002395	0					
ANR	11002495	Argument	stage		11002395	2					
ANR	11002496	Identifier	stage		11002395	0					
ANR	11002497	Argument	cont		11002395	3					
ANR	11002498	Identifier	cont		11002395	0					
ANR	11002499	Argument	1		11002395	4					
ANR	11002500	PrimaryExpression	1		11002395	0					
ANR	11002501	ExpressionStatement	* cont = 0	2967:4:94876:94885	11002395	8	True				
ANR	11002502	AssignmentExpression	* cont = 0		11002395	0		=			
ANR	11002503	UnaryOperationExpression	* cont		11002395	0					
ANR	11002504	UnaryOperator	*		11002395	0					
ANR	11002505	Identifier	cont		11002395	1					
ANR	11002506	PrimaryExpression	0		11002395	1					
ANR	11002507	ExpressionStatement	"code = array_get ( imemory , r , 1 , & CIEDict )"	2968:4:94891:94932	11002395	9	True				
ANR	11002508	AssignmentExpression	"code = array_get ( imemory , r , 1 , & CIEDict )"		11002395	0		=			
ANR	11002509	Identifier	code		11002395	0					
ANR	11002510	CallExpression	"array_get ( imemory , r , 1 , & CIEDict )"		11002395	1					
ANR	11002511	Callee	array_get		11002395	0					
ANR	11002512	Identifier	array_get		11002395	0					
ANR	11002513	ArgumentList	imemory		11002395	1					
ANR	11002514	Argument	imemory		11002395	0					
ANR	11002515	Identifier	imemory		11002395	0					
ANR	11002516	Argument	r		11002395	1					
ANR	11002517	Identifier	r		11002395	0					
ANR	11002518	Argument	1		11002395	2					
ANR	11002519	PrimaryExpression	1		11002395	0					
ANR	11002520	Argument	& CIEDict		11002395	3					
ANR	11002521	UnaryOperationExpression	& CIEDict		11002395	0					
ANR	11002522	UnaryOperator	&		11002395	0					
ANR	11002523	Identifier	CIEDict		11002395	1					
ANR	11002524	IfStatement	if ( code < 0 )		11002395	10					
ANR	11002525	Condition	code < 0	2969:8:94942:94949	11002395	0	True				
ANR	11002526	RelationalExpression	code < 0		11002395	0		<			
ANR	11002527	Identifier	code		11002395	0					
ANR	11002528	PrimaryExpression	0		11002395	1					
ANR	11002529	ReturnStatement	return code ;	2970:8:94960:94971	11002395	1	True				
ANR	11002530	Identifier	code		11002395	0					
ANR	11002531	IfStatement	if ( ( * stage ) > 0 )		11002395	11					
ANR	11002532	Condition	( * stage ) > 0	2971:8:94981:94992	11002395	0	True				
ANR	11002533	RelationalExpression	( * stage ) > 0		11002395	0		>			
ANR	11002534	UnaryOperationExpression	* stage		11002395	0					
ANR	11002535	UnaryOperator	*		11002395	0					
ANR	11002536	Identifier	stage		11002395	1					
ANR	11002537	PrimaryExpression	0		11002395	1					
ANR	11002538	CompoundStatement		25:8:616:621	11002395	1					
ANR	11002539	IdentifierDeclStatement	gs_client_color cc ;	2972:8:95005:95023	11002395	0	True				
ANR	11002540	IdentifierDecl	cc		11002395	0					
ANR	11002541	IdentifierDeclType	gs_client_color		11002395	0					
ANR	11002542	Identifier	cc		11002395	1					
ANR	11002543	IdentifierDeclStatement	int i ;	2973:8:95033:95038	11002395	1	True				
ANR	11002544	IdentifierDecl	i		11002395	0					
ANR	11002545	IdentifierDeclType	int		11002395	0					
ANR	11002546	Identifier	i		11002395	1					
ANR	11002547	ExpressionStatement	cc . pattern = 0x00	2975:8:95049:95066	11002395	2	True				
ANR	11002548	AssignmentExpression	cc . pattern = 0x00		11002395	0		=			
ANR	11002549	MemberAccess	cc . pattern		11002395	0					
ANR	11002550	Identifier	cc		11002395	0					
ANR	11002551	Identifier	pattern		11002395	1					
ANR	11002552	PrimaryExpression	0x00		11002395	1					
ANR	11002553	ForStatement	for ( i = 0 ; i < 4 ; i ++ )		11002395	3					
ANR	11002554	ForInit	i = 0 ;	2976:13:95081:95084	11002395	0	True				
ANR	11002555	AssignmentExpression	i = 0		11002395	0		=			
ANR	11002556	Identifier	i		11002395	0					
ANR	11002557	PrimaryExpression	0		11002395	1					
ANR	11002558	Condition	i < 4	2976:17:95085:95087	11002395	1	True				
ANR	11002559	RelationalExpression	i < 4		11002395	0		<			
ANR	11002560	Identifier	i		11002395	0					
ANR	11002561	PrimaryExpression	4		11002395	1					
ANR	11002562	PostIncDecOperationExpression	i ++	2976:21:95089:95091	11002395	2	True				
ANR	11002563	Identifier	i		11002395	0					
ANR	11002564	IncDec	++		11002395	1					
ANR	11002565	ExpressionStatement	cc . paint . values [ i ] = 0	2977:12:95106:95128	11002395	3	True				
ANR	11002566	AssignmentExpression	cc . paint . values [ i ] = 0		11002395	0		=			
ANR	11002567	ArrayIndexing	cc . paint . values [ i ]		11002395	0					
ANR	11002568	MemberAccess	cc . paint . values		11002395	0					
ANR	11002569	MemberAccess	cc . paint		11002395	0					
ANR	11002570	Identifier	cc		11002395	0					
ANR	11002571	Identifier	paint		11002395	1					
ANR	11002572	Identifier	values		11002395	1					
ANR	11002573	Identifier	i		11002395	1					
ANR	11002574	PrimaryExpression	0		11002395	1					
ANR	11002575	ExpressionStatement	"code = gs_setcolor ( igs , & cc )"	2978:8:95138:95166	11002395	4	True				
ANR	11002576	AssignmentExpression	"code = gs_setcolor ( igs , & cc )"		11002395	0		=			
ANR	11002577	Identifier	code		11002395	0					
ANR	11002578	CallExpression	"gs_setcolor ( igs , & cc )"		11002395	1					
ANR	11002579	Callee	gs_setcolor		11002395	0					
ANR	11002580	Identifier	gs_setcolor		11002395	0					
ANR	11002581	ArgumentList	igs		11002395	1					
ANR	11002582	Argument	igs		11002395	0					
ANR	11002583	Identifier	igs		11002395	0					
ANR	11002584	Argument	& cc		11002395	1					
ANR	11002585	UnaryOperationExpression	& cc		11002395	0					
ANR	11002586	UnaryOperator	&		11002395	0					
ANR	11002587	Identifier	cc		11002395	1					
ANR	11002588	ExpressionStatement	* stage = 0	2979:8:95176:95186	11002395	5	True				
ANR	11002589	AssignmentExpression	* stage = 0		11002395	0		=			
ANR	11002590	UnaryOperationExpression	* stage		11002395	0					
ANR	11002591	UnaryOperator	*		11002395	0					
ANR	11002592	Identifier	stage		11002395	1					
ANR	11002593	PrimaryExpression	0		11002395	1					
ANR	11002594	ReturnStatement	return code ;	2980:8:95196:95207	11002395	6	True				
ANR	11002595	Identifier	code		11002395	0					
ANR	11002596	ExpressionStatement	gs_md5_init ( & md5 )	2982:4:95219:95236	11002395	12	True				
ANR	11002597	CallExpression	gs_md5_init ( & md5 )		11002395	0					
ANR	11002598	Callee	gs_md5_init		11002395	0					
ANR	11002599	Identifier	gs_md5_init		11002395	0					
ANR	11002600	ArgumentList	& md5		11002395	1					
ANR	11002601	Argument	& md5		11002395	0					
ANR	11002602	UnaryOperationExpression	& md5		11002395	0					
ANR	11002603	UnaryOperator	&		11002395	0					
ANR	11002604	Identifier	md5		11002395	1					
ANR	11002605	ExpressionStatement	dictkey = 0	2987:4:95427:95438	11002395	13	True				
ANR	11002606	AssignmentExpression	dictkey = 0		11002395	0		=			
ANR	11002607	Identifier	dictkey		11002395	0					
ANR	11002608	PrimaryExpression	0		11002395	1					
ANR	11002609	IfStatement	"if ( hashciedefgspace ( i_ctx_p , r , & md5 ) )"		11002395	14					
ANR	11002610	Condition	"hashciedefgspace ( i_ctx_p , r , & md5 )"	2988:8:95448:95481	11002395	0	True				
ANR	11002611	CallExpression	"hashciedefgspace ( i_ctx_p , r , & md5 )"		11002395	0					
ANR	11002612	Callee	hashciedefgspace		11002395	0					
ANR	11002613	Identifier	hashciedefgspace		11002395	0					
ANR	11002614	ArgumentList	i_ctx_p		11002395	1					
ANR	11002615	Argument	i_ctx_p		11002395	0					
ANR	11002616	Identifier	i_ctx_p		11002395	0					
ANR	11002617	Argument	r		11002395	1					
ANR	11002618	Identifier	r		11002395	0					
ANR	11002619	Argument	& md5		11002395	2					
ANR	11002620	UnaryOperationExpression	& md5		11002395	0					
ANR	11002621	UnaryOperator	&		11002395	0					
ANR	11002622	Identifier	md5		11002395	1					
ANR	11002623	CompoundStatement		40:44:1067:1067	11002395	1					
ANR	11002624	ExpressionStatement	"gs_md5_finish ( & md5 , key )"	2995:8:95838:95862	11002395	0	True				
ANR	11002625	CallExpression	"gs_md5_finish ( & md5 , key )"		11002395	0					
ANR	11002626	Callee	gs_md5_finish		11002395	0					
ANR	11002627	Identifier	gs_md5_finish		11002395	0					
ANR	11002628	ArgumentList	& md5		11002395	1					
ANR	11002629	Argument	& md5		11002395	0					
ANR	11002630	UnaryOperationExpression	& md5		11002395	0					
ANR	11002631	UnaryOperator	&		11002395	0					
ANR	11002632	Identifier	md5		11002395	1					
ANR	11002633	Argument	key		11002395	1					
ANR	11002634	Identifier	key		11002395	0					
ANR	11002635	ExpressionStatement	dictkey = * ( ulong * ) & key [ sizeof ( key ) - sizeof ( ulong ) ]	2996:8:95872:95925	11002395	1	True				
ANR	11002636	AssignmentExpression	dictkey = * ( ulong * ) & key [ sizeof ( key ) - sizeof ( ulong ) ]		11002395	0		=			
ANR	11002637	Identifier	dictkey		11002395	0					
ANR	11002638	UnaryOperationExpression	* ( ulong * ) & key [ sizeof ( key ) - sizeof ( ulong ) ]		11002395	1					
ANR	11002639	UnaryOperator	*		11002395	0					
ANR	11002640	CastExpression	( ulong * ) & key [ sizeof ( key ) - sizeof ( ulong ) ]		11002395	1					
ANR	11002641	CastTarget	ulong *		11002395	0					
ANR	11002642	UnaryOperationExpression	& key [ sizeof ( key ) - sizeof ( ulong ) ]		11002395	1					
ANR	11002643	UnaryOperator	&		11002395	0					
ANR	11002644	ArrayIndexing	key [ sizeof ( key ) - sizeof ( ulong ) ]		11002395	1					
ANR	11002645	Identifier	key		11002395	0					
ANR	11002646	AdditiveExpression	sizeof ( key ) - sizeof ( ulong )		11002395	1		-			
ANR	11002647	SizeofExpression	sizeof ( key )		11002395	0					
ANR	11002648	Sizeof	sizeof		11002395	0					
ANR	11002649	SizeofOperand	key		11002395	1					
ANR	11002650	SizeofExpression	sizeof ( ulong )		11002395	1					
ANR	11002651	Sizeof	sizeof		11002395	0					
ANR	11002652	SizeofOperand	ulong		11002395	1					
ANR	11002653	ElseStatement	else		11002395	0					
ANR	11002654	CompoundStatement		49:11:1521:1521	11002395	0					
ANR	11002655	ExpressionStatement	"gs_md5_finish ( & md5 , key )"	2998:8:95948:95972	11002395	0	True				
ANR	11002656	CallExpression	"gs_md5_finish ( & md5 , key )"		11002395	0					
ANR	11002657	Callee	gs_md5_finish		11002395	0					
ANR	11002658	Identifier	gs_md5_finish		11002395	0					
ANR	11002659	ArgumentList	& md5		11002395	1					
ANR	11002660	Argument	& md5		11002395	0					
ANR	11002661	UnaryOperationExpression	& md5		11002395	0					
ANR	11002662	UnaryOperator	&		11002395	0					
ANR	11002663	Identifier	md5		11002395	1					
ANR	11002664	Argument	key		11002395	1					
ANR	11002665	Identifier	key		11002395	0					
ANR	11002666	ExpressionStatement	"code = ciedefgspace ( i_ctx_p , & CIEDict , dictkey )"	3000:4:95984:96030	11002395	15	True				
ANR	11002667	AssignmentExpression	"code = ciedefgspace ( i_ctx_p , & CIEDict , dictkey )"		11002395	0		=			
ANR	11002668	Identifier	code		11002395	0					
ANR	11002669	CallExpression	"ciedefgspace ( i_ctx_p , & CIEDict , dictkey )"		11002395	1					
ANR	11002670	Callee	ciedefgspace		11002395	0					
ANR	11002671	Identifier	ciedefgspace		11002395	0					
ANR	11002672	ArgumentList	i_ctx_p		11002395	1					
ANR	11002673	Argument	i_ctx_p		11002395	0					
ANR	11002674	Identifier	i_ctx_p		11002395	0					
ANR	11002675	Argument	& CIEDict		11002395	1					
ANR	11002676	UnaryOperationExpression	& CIEDict		11002395	0					
ANR	11002677	UnaryOperator	&		11002395	0					
ANR	11002678	Identifier	CIEDict		11002395	1					
ANR	11002679	Argument	dictkey		11002395	2					
ANR	11002680	Identifier	dictkey		11002395	0					
ANR	11002681	ExpressionStatement	* cont = 1	3001:4:96036:96045	11002395	16	True				
ANR	11002682	AssignmentExpression	* cont = 1		11002395	0		=			
ANR	11002683	UnaryOperationExpression	* cont		11002395	0					
ANR	11002684	UnaryOperator	*		11002395	0					
ANR	11002685	Identifier	cont		11002395	1					
ANR	11002686	PrimaryExpression	1		11002395	1					
ANR	11002687	ExpressionStatement	( * stage ) ++	3002:4:96051:96061	11002395	17	True				
ANR	11002688	PostIncDecOperationExpression	( * stage ) ++		11002395	0					
ANR	11002689	UnaryOperationExpression	* stage		11002395	0					
ANR	11002690	UnaryOperator	*		11002395	0					
ANR	11002691	Identifier	stage		11002395	1					
ANR	11002692	IncDec	++		11002395	1					
ANR	11002693	ReturnStatement	return code ;	3003:4:96067:96078	11002395	18	True				
ANR	11002694	Identifier	code		11002395	0					
ANR	11002695	ReturnType	static int		11002395	1					
ANR	11002696	Identifier	setciedefgspace		11002395	2					
ANR	11002697	ParameterList	"i_ctx_t * i_ctx_p , ref * r , int * stage , int * cont , int CIESubst"		11002395	3					
ANR	11002698	Parameter	i_ctx_t * i_ctx_p	2948:27:94352:94368	11002395	0	True				
ANR	11002699	ParameterType	i_ctx_t *		11002395	0					
ANR	11002700	Identifier	i_ctx_p		11002395	1					
ANR	11002701	Parameter	ref * r	2948:46:94371:94376	11002395	1	True				
ANR	11002702	ParameterType	ref *		11002395	0					
ANR	11002703	Identifier	r		11002395	1					
ANR	11002704	Parameter	int * stage	2948:54:94379:94388	11002395	2	True				
ANR	11002705	ParameterType	int *		11002395	0					
ANR	11002706	Identifier	stage		11002395	1					
ANR	11002707	Parameter	int * cont	2948:66:94391:94399	11002395	3	True				
ANR	11002708	ParameterType	int *		11002395	0					
ANR	11002709	Identifier	cont		11002395	1					
ANR	11002710	Parameter	int CIESubst	2948:77:94402:94413	11002395	4	True				
ANR	11002711	ParameterType	int		11002395	0					
ANR	11002712	Identifier	CIESubst		11002395	1					
ANR	11002713	CFGEntryNode	ENTRY		11002395		True				
ANR	11002714	CFGExitNode	EXIT		11002395		True				
ANR	11002715	Symbol	cc . pattern		11002395						
ANR	11002716	Symbol	* ( ulong * ) & key [ sizeof ( key ) - sizeof ( ulong ) ]		11002395						
ANR	11002717	Symbol	code		11002395						
ANR	11002718	Symbol	i_ctx_p -> language_level		11002395						
ANR	11002719	Symbol	* cc		11002395						
ANR	11002720	Symbol	nocie -> value		11002395						
ANR	11002721	Symbol	gs_error_undefined		11002395						
ANR	11002722	Symbol	gs_setcolor		11002395						
ANR	11002723	Symbol	* key		11002395						
ANR	11002724	Symbol	* nocie		11002395						
ANR	11002725	Symbol	& cc		11002395						
ANR	11002726	Symbol	nocie -> value . boolval		11002395						
ANR	11002727	Symbol	r_has_type		11002395						
ANR	11002728	Symbol	gs_error_typecheck		11002395						
ANR	11002729	Symbol	igs		11002395						
ANR	11002730	Symbol	* cc . paint . values		11002395						
ANR	11002731	Symbol	* i_ctx_p		11002395						
ANR	11002732	Symbol	imemory		11002395						
ANR	11002733	Symbol	cont		11002395						
ANR	11002734	Symbol	nocie		11002395						
ANR	11002735	Symbol	CIESubst		11002395						
ANR	11002736	Symbol	key		11002395						
ANR	11002737	Symbol	cc		11002395						
ANR	11002738	Symbol	* stage		11002395						
ANR	11002739	Symbol	& md5		11002395						
ANR	11002740	Symbol	dict_find_string		11002395						
ANR	11002741	Symbol	array_get		11002395						
ANR	11002742	Symbol	hashciedefgspace		11002395						
ANR	11002743	Symbol	i		11002395						
ANR	11002744	Symbol	dictkey		11002395						
ANR	11002745	Symbol	& nocie		11002395						
ANR	11002746	Symbol	t_boolean		11002395						
ANR	11002747	Symbol	r		11002395						
ANR	11002748	Symbol	* cc . paint		11002395						
ANR	11002749	Symbol	* i		11002395						
ANR	11002750	Symbol	stage		11002395						
ANR	11002751	Symbol	CIEDict		11002395						
ANR	11002752	Symbol	* cont		11002395						
ANR	11002753	Symbol	& CIEDict		11002395						
ANR	11002754	Symbol	i_ctx_p		11002395						
ANR	11002755	Symbol	ciedefgspace		11002395						
ANR	11002756	Symbol	cc . paint		11002395						
ANR	11002757	Symbol	cc . paint . values		11002395						
ANR	11002758	Symbol	systemdict		11002395						
ANR	11002759	Symbol	md5		11002395						
ANR	11002760	Symbol	setcmykspace		11002395						
ANR	11002761	Function	validateciedefgspace	3005:0:96082:99927							
ANR	11002762	FunctionDef	"validateciedefgspace (i_ctx_t * i_ctx_p , ref * * r)"		11002761	0					
ANR	11002763	CompoundStatement		3006:0:96142:99927	11002761	0					
ANR	11002764	IdentifierDeclStatement	"int code = 0 , i , j ;"	3007:4:96148:96166	11002761	0	True				
ANR	11002765	IdentifierDecl	code = 0		11002761	0					
ANR	11002766	IdentifierDeclType	int		11002761	0					
ANR	11002767	Identifier	code		11002761	1					
ANR	11002768	AssignmentExpression	code = 0		11002761	2		=			
ANR	11002769	Identifier	code		11002761	0					
ANR	11002770	PrimaryExpression	0		11002761	1					
ANR	11002771	IdentifierDecl	i		11002761	1					
ANR	11002772	IdentifierDeclType	int		11002761	0					
ANR	11002773	Identifier	i		11002761	1					
ANR	11002774	IdentifierDecl	j		11002761	2					
ANR	11002775	IdentifierDeclType	int		11002761	0					
ANR	11002776	Identifier	j		11002761	1					
ANR	11002777	IdentifierDeclStatement	float value [ 8 ] ;	3008:4:96172:96186	11002761	1	True				
ANR	11002778	IdentifierDecl	value [ 8 ]		11002761	0					
ANR	11002779	IdentifierDeclType	float [ 8 ]		11002761	0					
ANR	11002780	Identifier	value		11002761	1					
ANR	11002781	PrimaryExpression	8		11002761	2					
ANR	11002782	IdentifierDeclStatement	"ref CIEdict , * CIEspace = * r , tempref , arrayref , valref , * pref = & tempref ;"	3009:4:96192:96268	11002761	2	True				
ANR	11002783	IdentifierDecl	CIEdict		11002761	0					
ANR	11002784	IdentifierDeclType	ref		11002761	0					
ANR	11002785	Identifier	CIEdict		11002761	1					
ANR	11002786	IdentifierDecl	* CIEspace = * r		11002761	1					
ANR	11002787	IdentifierDeclType	ref *		11002761	0					
ANR	11002788	Identifier	CIEspace		11002761	1					
ANR	11002789	AssignmentExpression	* CIEspace = * r		11002761	2		=			
ANR	11002790	Identifier	CIEspace		11002761	0					
ANR	11002791	UnaryOperationExpression	* r		11002761	1					
ANR	11002792	UnaryOperator	*		11002761	0					
ANR	11002793	Identifier	r		11002761	1					
ANR	11002794	IdentifierDecl	tempref		11002761	2					
ANR	11002795	IdentifierDeclType	ref		11002761	0					
ANR	11002796	Identifier	tempref		11002761	1					
ANR	11002797	IdentifierDecl	arrayref		11002761	3					
ANR	11002798	IdentifierDeclType	ref		11002761	0					
ANR	11002799	Identifier	arrayref		11002761	1					
ANR	11002800	IdentifierDecl	valref		11002761	4					
ANR	11002801	IdentifierDeclType	ref		11002761	0					
ANR	11002802	Identifier	valref		11002761	1					
ANR	11002803	IdentifierDecl	* pref = & tempref		11002761	5					
ANR	11002804	IdentifierDeclType	ref *		11002761	0					
ANR	11002805	Identifier	pref		11002761	1					
ANR	11002806	AssignmentExpression	* pref = & tempref		11002761	2		=			
ANR	11002807	Identifier	pref		11002761	0					
ANR	11002808	UnaryOperationExpression	& tempref		11002761	1					
ANR	11002809	UnaryOperator	&		11002761	0					
ANR	11002810	Identifier	tempref		11002761	1					
ANR	11002811	IfStatement	if ( ! r_is_array ( CIEspace ) )		11002761	3					
ANR	11002812	Condition	! r_is_array ( CIEspace )	3011:8:96279:96299	11002761	0	True				
ANR	11002813	UnaryOperationExpression	! r_is_array ( CIEspace )		11002761	0					
ANR	11002814	UnaryOperator	!		11002761	0					
ANR	11002815	CallExpression	r_is_array ( CIEspace )		11002761	1					
ANR	11002816	Callee	r_is_array		11002761	0					
ANR	11002817	Identifier	r_is_array		11002761	0					
ANR	11002818	ArgumentList	CIEspace		11002761	1					
ANR	11002819	Argument	CIEspace		11002761	0					
ANR	11002820	Identifier	CIEspace		11002761	0					
ANR	11002821	ExpressionStatement	return_error ( gs_error_typecheck )	3012:8:96310:96342	11002761	1	True				
ANR	11002822	CallExpression	return_error ( gs_error_typecheck )		11002761	0					
ANR	11002823	Callee	return_error		11002761	0					
ANR	11002824	Identifier	return_error		11002761	0					
ANR	11002825	ArgumentList	gs_error_typecheck		11002761	1					
ANR	11002826	Argument	gs_error_typecheck		11002761	0					
ANR	11002827	Identifier	gs_error_typecheck		11002761	0					
ANR	11002828	IfStatement	if ( r_size ( CIEspace ) != 2 )		11002761	4					
ANR	11002829	Condition	r_size ( CIEspace ) != 2	3014:8:96413:96433	11002761	0	True				
ANR	11002830	EqualityExpression	r_size ( CIEspace ) != 2		11002761	0		!=			
ANR	11002831	CallExpression	r_size ( CIEspace )		11002761	0					
ANR	11002832	Callee	r_size		11002761	0					
ANR	11002833	Identifier	r_size		11002761	0					
ANR	11002834	ArgumentList	CIEspace		11002761	1					
ANR	11002835	Argument	CIEspace		11002761	0					
ANR	11002836	Identifier	CIEspace		11002761	0					
ANR	11002837	PrimaryExpression	2		11002761	1					
ANR	11002838	ExpressionStatement	return_error ( gs_error_rangecheck )	3015:8:96444:96477	11002761	1	True				
ANR	11002839	CallExpression	return_error ( gs_error_rangecheck )		11002761	0					
ANR	11002840	Callee	return_error		11002761	0					
ANR	11002841	Identifier	return_error		11002761	0					
ANR	11002842	ArgumentList	gs_error_rangecheck		11002761	1					
ANR	11002843	Argument	gs_error_rangecheck		11002761	0					
ANR	11002844	Identifier	gs_error_rangecheck		11002761	0					
ANR	11002845	ExpressionStatement	"code = array_get ( imemory , CIEspace , 1 , & CIEdict )"	3017:4:96484:96532	11002761	5	True				
ANR	11002846	AssignmentExpression	"code = array_get ( imemory , CIEspace , 1 , & CIEdict )"		11002761	0		=			
ANR	11002847	Identifier	code		11002761	0					
ANR	11002848	CallExpression	"array_get ( imemory , CIEspace , 1 , & CIEdict )"		11002761	1					
ANR	11002849	Callee	array_get		11002761	0					
ANR	11002850	Identifier	array_get		11002761	0					
ANR	11002851	ArgumentList	imemory		11002761	1					
ANR	11002852	Argument	imemory		11002761	0					
ANR	11002853	Identifier	imemory		11002761	0					
ANR	11002854	Argument	CIEspace		11002761	1					
ANR	11002855	Identifier	CIEspace		11002761	0					
ANR	11002856	Argument	1		11002761	2					
ANR	11002857	PrimaryExpression	1		11002761	0					
ANR	11002858	Argument	& CIEdict		11002761	3					
ANR	11002859	UnaryOperationExpression	& CIEdict		11002761	0					
ANR	11002860	UnaryOperator	&		11002761	0					
ANR	11002861	Identifier	CIEdict		11002761	1					
ANR	11002862	IfStatement	if ( code < 0 )		11002761	6					
ANR	11002863	Condition	code < 0	3018:8:96542:96549	11002761	0	True				
ANR	11002864	RelationalExpression	code < 0		11002761	0		<			
ANR	11002865	Identifier	code		11002761	0					
ANR	11002866	PrimaryExpression	0		11002761	1					
ANR	11002867	ReturnStatement	return code ;	3019:8:96560:96571	11002761	1	True				
ANR	11002868	Identifier	code		11002761	0					
ANR	11002869	ExpressionStatement	"check_read_type ( CIEdict , t_dictionary )"	3020:4:96577:96615	11002761	7	True				
ANR	11002870	CallExpression	"check_read_type ( CIEdict , t_dictionary )"		11002761	0					
ANR	11002871	Callee	check_read_type		11002761	0					
ANR	11002872	Identifier	check_read_type		11002761	0					
ANR	11002873	ArgumentList	CIEdict		11002761	1					
ANR	11002874	Argument	CIEdict		11002761	0					
ANR	11002875	Identifier	CIEdict		11002761	0					
ANR	11002876	Argument	t_dictionary		11002761	1					
ANR	11002877	Identifier	t_dictionary		11002761	0					
ANR	11002878	ExpressionStatement	"code = validatecieabcspace ( i_ctx_p , r )"	3022:4:96622:96660	11002761	8	True				
ANR	11002879	AssignmentExpression	"code = validatecieabcspace ( i_ctx_p , r )"		11002761	0		=			
ANR	11002880	Identifier	code		11002761	0					
ANR	11002881	CallExpression	"validatecieabcspace ( i_ctx_p , r )"		11002761	1					
ANR	11002882	Callee	validatecieabcspace		11002761	0					
ANR	11002883	Identifier	validatecieabcspace		11002761	0					
ANR	11002884	ArgumentList	i_ctx_p		11002761	1					
ANR	11002885	Argument	i_ctx_p		11002761	0					
ANR	11002886	Identifier	i_ctx_p		11002761	0					
ANR	11002887	Argument	r		11002761	1					
ANR	11002888	Identifier	r		11002761	0					
ANR	11002889	IfStatement	if ( code != 0 )		11002761	9					
ANR	11002890	Condition	code != 0	3023:8:96670:96678	11002761	0	True				
ANR	11002891	EqualityExpression	code != 0		11002761	0		!=			
ANR	11002892	Identifier	code		11002761	0					
ANR	11002893	PrimaryExpression	0		11002761	1					
ANR	11002894	ReturnStatement	return code ;	3024:8:96689:96700	11002761	1	True				
ANR	11002895	Identifier	code		11002761	0					
ANR	11002896	ExpressionStatement	"code = dict_find_string ( & CIEdict , ""Table"" , & pref )"	3026:4:96707:96756	11002761	10	True				
ANR	11002897	AssignmentExpression	"code = dict_find_string ( & CIEdict , ""Table"" , & pref )"		11002761	0		=			
ANR	11002898	Identifier	code		11002761	0					
ANR	11002899	CallExpression	"dict_find_string ( & CIEdict , ""Table"" , & pref )"		11002761	1					
ANR	11002900	Callee	dict_find_string		11002761	0					
ANR	11002901	Identifier	dict_find_string		11002761	0					
ANR	11002902	ArgumentList	& CIEdict		11002761	1					
ANR	11002903	Argument	& CIEdict		11002761	0					
ANR	11002904	UnaryOperationExpression	& CIEdict		11002761	0					
ANR	11002905	UnaryOperator	&		11002761	0					
ANR	11002906	Identifier	CIEdict		11002761	1					
ANR	11002907	Argument	"""Table"""		11002761	1					
ANR	11002908	PrimaryExpression	"""Table"""		11002761	0					
ANR	11002909	Argument	& pref		11002761	2					
ANR	11002910	UnaryOperationExpression	& pref		11002761	0					
ANR	11002911	UnaryOperator	&		11002761	0					
ANR	11002912	Identifier	pref		11002761	1					
ANR	11002913	IfStatement	if ( code > 0 )		11002761	11					
ANR	11002914	Condition	code > 0	3027:8:96766:96773	11002761	0	True				
ANR	11002915	RelationalExpression	code > 0		11002761	0		>			
ANR	11002916	Identifier	code		11002761	0					
ANR	11002917	PrimaryExpression	0		11002761	1					
ANR	11002918	CompoundStatement		22:18:633:633	11002761	1					
ANR	11002919	IfStatement	if ( ! r_is_array ( pref ) )		11002761	0					
ANR	11002920	Condition	! r_is_array ( pref )	3028:12:96790:96806	11002761	0	True				
ANR	11002921	UnaryOperationExpression	! r_is_array ( pref )		11002761	0					
ANR	11002922	UnaryOperator	!		11002761	0					
ANR	11002923	CallExpression	r_is_array ( pref )		11002761	1					
ANR	11002924	Callee	r_is_array		11002761	0					
ANR	11002925	Identifier	r_is_array		11002761	0					
ANR	11002926	ArgumentList	pref		11002761	1					
ANR	11002927	Argument	pref		11002761	0					
ANR	11002928	Identifier	pref		11002761	0					
ANR	11002929	ExpressionStatement	return_error ( gs_error_typecheck )	3029:12:96821:96853	11002761	1	True				
ANR	11002930	CallExpression	return_error ( gs_error_typecheck )		11002761	0					
ANR	11002931	Callee	return_error		11002761	0					
ANR	11002932	Identifier	return_error		11002761	0					
ANR	11002933	ArgumentList	gs_error_typecheck		11002761	1					
ANR	11002934	Argument	gs_error_typecheck		11002761	0					
ANR	11002935	Identifier	gs_error_typecheck		11002761	0					
ANR	11002936	IfStatement	if ( r_size ( pref ) != 5 )		11002761	1					
ANR	11002937	Condition	r_size ( pref ) != 5	3030:12:96867:96883	11002761	0	True				
ANR	11002938	EqualityExpression	r_size ( pref ) != 5		11002761	0		!=			
ANR	11002939	CallExpression	r_size ( pref )		11002761	0					
ANR	11002940	Callee	r_size		11002761	0					
ANR	11002941	Identifier	r_size		11002761	0					
ANR	11002942	ArgumentList	pref		11002761	1					
ANR	11002943	Argument	pref		11002761	0					
ANR	11002944	Identifier	pref		11002761	0					
ANR	11002945	PrimaryExpression	5		11002761	1					
ANR	11002946	ExpressionStatement	return_error ( gs_error_rangecheck )	3031:12:96898:96931	11002761	1	True				
ANR	11002947	CallExpression	return_error ( gs_error_rangecheck )		11002761	0					
ANR	11002948	Callee	return_error		11002761	0					
ANR	11002949	Identifier	return_error		11002761	0					
ANR	11002950	ArgumentList	gs_error_rangecheck		11002761	1					
ANR	11002951	Argument	gs_error_rangecheck		11002761	0					
ANR	11002952	Identifier	gs_error_rangecheck		11002761	0					
ANR	11002953	ForStatement	for ( i = 0 ; i < 4 ; i ++ )		11002761	2					
ANR	11002954	ForInit	i = 0 ;	3033:13:96947:96950	11002761	0	True				
ANR	11002955	AssignmentExpression	i = 0		11002761	0		=			
ANR	11002956	Identifier	i		11002761	0					
ANR	11002957	PrimaryExpression	0		11002761	1					
ANR	11002958	Condition	i < 4	3033:17:96951:96953	11002761	1	True				
ANR	11002959	RelationalExpression	i < 4		11002761	0		<			
ANR	11002960	Identifier	i		11002761	0					
ANR	11002961	PrimaryExpression	4		11002761	1					
ANR	11002962	PostIncDecOperationExpression	i ++	3033:21:96955:96957	11002761	2	True				
ANR	11002963	Identifier	i		11002761	0					
ANR	11002964	IncDec	++		11002761	1					
ANR	11002965	CompoundStatement		28:26:817:817	11002761	3					
ANR	11002966	ExpressionStatement	"code = array_get ( imemory , pref , i , & valref )"	3034:12:96974:97017	11002761	0	True				
ANR	11002967	AssignmentExpression	"code = array_get ( imemory , pref , i , & valref )"		11002761	0		=			
ANR	11002968	Identifier	code		11002761	0					
ANR	11002969	CallExpression	"array_get ( imemory , pref , i , & valref )"		11002761	1					
ANR	11002970	Callee	array_get		11002761	0					
ANR	11002971	Identifier	array_get		11002761	0					
ANR	11002972	ArgumentList	imemory		11002761	1					
ANR	11002973	Argument	imemory		11002761	0					
ANR	11002974	Identifier	imemory		11002761	0					
ANR	11002975	Argument	pref		11002761	1					
ANR	11002976	Identifier	pref		11002761	0					
ANR	11002977	Argument	i		11002761	2					
ANR	11002978	Identifier	i		11002761	0					
ANR	11002979	Argument	& valref		11002761	3					
ANR	11002980	UnaryOperationExpression	& valref		11002761	0					
ANR	11002981	UnaryOperator	&		11002761	0					
ANR	11002982	Identifier	valref		11002761	1					
ANR	11002983	IfStatement	if ( code < 0 )		11002761	1					
ANR	11002984	Condition	code < 0	3035:16:97035:97042	11002761	0	True				
ANR	11002985	RelationalExpression	code < 0		11002761	0		<			
ANR	11002986	Identifier	code		11002761	0					
ANR	11002987	PrimaryExpression	0		11002761	1					
ANR	11002988	ReturnStatement	return code ;	3036:16:97061:97072	11002761	1	True				
ANR	11002989	Identifier	code		11002761	0					
ANR	11002990	IfStatement	"if ( r_has_type ( & valref , t_integer ) )"		11002761	2					
ANR	11002991	Condition	"r_has_type ( & valref , t_integer )"	3037:16:97090:97119	11002761	0	True				
ANR	11002992	CallExpression	"r_has_type ( & valref , t_integer )"		11002761	0					
ANR	11002993	Callee	r_has_type		11002761	0					
ANR	11002994	Identifier	r_has_type		11002761	0					
ANR	11002995	ArgumentList	& valref		11002761	1					
ANR	11002996	Argument	& valref		11002761	0					
ANR	11002997	UnaryOperationExpression	& valref		11002761	0					
ANR	11002998	UnaryOperator	&		11002761	0					
ANR	11002999	Identifier	valref		11002761	1					
ANR	11003000	Argument	t_integer		11002761	1					
ANR	11003001	Identifier	t_integer		11002761	0					
ANR	11003002	ExpressionStatement	value [ i ] = ( float ) valref . value . intval	3038:16:97138:97175	11002761	1	True				
ANR	11003003	AssignmentExpression	value [ i ] = ( float ) valref . value . intval		11002761	0		=			
ANR	11003004	ArrayIndexing	value [ i ]		11002761	0					
ANR	11003005	Identifier	value		11002761	0					
ANR	11003006	Identifier	i		11002761	1					
ANR	11003007	CastExpression	( float ) valref . value . intval		11002761	1					
ANR	11003008	CastTarget	float		11002761	0					
ANR	11003009	MemberAccess	valref . value . intval		11002761	1					
ANR	11003010	MemberAccess	valref . value		11002761	0					
ANR	11003011	Identifier	valref		11002761	0					
ANR	11003012	Identifier	value		11002761	1					
ANR	11003013	Identifier	intval		11002761	1					
ANR	11003014	ElseStatement	else		11002761	0					
ANR	11003015	ExpressionStatement	return_error ( gs_error_typecheck )	3040:16:97210:97242	11002761	0	True				
ANR	11003016	CallExpression	return_error ( gs_error_typecheck )		11002761	0					
ANR	11003017	Callee	return_error		11002761	0					
ANR	11003018	Identifier	return_error		11002761	0					
ANR	11003019	ArgumentList	gs_error_typecheck		11002761	1					
ANR	11003020	Argument	gs_error_typecheck		11002761	0					
ANR	11003021	Identifier	gs_error_typecheck		11002761	0					
ANR	11003022	IfStatement	if ( value [ 0 ] <= 1 || value [ 1 ] <= 1 || value [ 2 ] <= 1 || value [ 3 ] <= 1 )		11002761	3					
ANR	11003023	Condition	value [ 0 ] <= 1 || value [ 1 ] <= 1 || value [ 2 ] <= 1 || value [ 3 ] <= 1	3042:12:97266:97329	11002761	0	True				
ANR	11003024	OrExpression	value [ 0 ] <= 1 || value [ 1 ] <= 1 || value [ 2 ] <= 1 || value [ 3 ] <= 1		11002761	0		||			
ANR	11003025	RelationalExpression	value [ 0 ] <= 1		11002761	0		<=			
ANR	11003026	ArrayIndexing	value [ 0 ]		11002761	0					
ANR	11003027	Identifier	value		11002761	0					
ANR	11003028	PrimaryExpression	0		11002761	1					
ANR	11003029	PrimaryExpression	1		11002761	1					
ANR	11003030	OrExpression	value [ 1 ] <= 1 || value [ 2 ] <= 1 || value [ 3 ] <= 1		11002761	1		||			
ANR	11003031	RelationalExpression	value [ 1 ] <= 1		11002761	0		<=			
ANR	11003032	ArrayIndexing	value [ 1 ]		11002761	0					
ANR	11003033	Identifier	value		11002761	0					
ANR	11003034	PrimaryExpression	1		11002761	1					
ANR	11003035	PrimaryExpression	1		11002761	1					
ANR	11003036	OrExpression	value [ 2 ] <= 1 || value [ 3 ] <= 1		11002761	1		||			
ANR	11003037	RelationalExpression	value [ 2 ] <= 1		11002761	0		<=			
ANR	11003038	ArrayIndexing	value [ 2 ]		11002761	0					
ANR	11003039	Identifier	value		11002761	0					
ANR	11003040	PrimaryExpression	2		11002761	1					
ANR	11003041	PrimaryExpression	1		11002761	1					
ANR	11003042	RelationalExpression	value [ 3 ] <= 1		11002761	1		<=			
ANR	11003043	ArrayIndexing	value [ 3 ]		11002761	0					
ANR	11003044	Identifier	value		11002761	0					
ANR	11003045	PrimaryExpression	3		11002761	1					
ANR	11003046	PrimaryExpression	1		11002761	1					
ANR	11003047	ExpressionStatement	return_error ( gs_error_rangecheck )	3043:12:97344:97377	11002761	1	True				
ANR	11003048	CallExpression	return_error ( gs_error_rangecheck )		11002761	0					
ANR	11003049	Callee	return_error		11002761	0					
ANR	11003050	Identifier	return_error		11002761	0					
ANR	11003051	ArgumentList	gs_error_rangecheck		11002761	1					
ANR	11003052	Argument	gs_error_rangecheck		11002761	0					
ANR	11003053	Identifier	gs_error_rangecheck		11002761	0					
ANR	11003054	ExpressionStatement	"code = array_get ( imemory , pref , 4 , & arrayref )"	3045:8:97388:97433	11002761	4	True				
ANR	11003055	AssignmentExpression	"code = array_get ( imemory , pref , 4 , & arrayref )"		11002761	0		=			
ANR	11003056	Identifier	code		11002761	0					
ANR	11003057	CallExpression	"array_get ( imemory , pref , 4 , & arrayref )"		11002761	1					
ANR	11003058	Callee	array_get		11002761	0					
ANR	11003059	Identifier	array_get		11002761	0					
ANR	11003060	ArgumentList	imemory		11002761	1					
ANR	11003061	Argument	imemory		11002761	0					
ANR	11003062	Identifier	imemory		11002761	0					
ANR	11003063	Argument	pref		11002761	1					
ANR	11003064	Identifier	pref		11002761	0					
ANR	11003065	Argument	4		11002761	2					
ANR	11003066	PrimaryExpression	4		11002761	0					
ANR	11003067	Argument	& arrayref		11002761	3					
ANR	11003068	UnaryOperationExpression	& arrayref		11002761	0					
ANR	11003069	UnaryOperator	&		11002761	0					
ANR	11003070	Identifier	arrayref		11002761	1					
ANR	11003071	IfStatement	if ( code < 0 )		11002761	5					
ANR	11003072	Condition	code < 0	3046:12:97447:97454	11002761	0	True				
ANR	11003073	RelationalExpression	code < 0		11002761	0		<			
ANR	11003074	Identifier	code		11002761	0					
ANR	11003075	PrimaryExpression	0		11002761	1					
ANR	11003076	ReturnStatement	return code ;	3047:12:97469:97480	11002761	1	True				
ANR	11003077	Identifier	code		11002761	0					
ANR	11003078	IfStatement	if ( ! r_is_array ( & arrayref ) )		11002761	6					
ANR	11003079	Condition	! r_is_array ( & arrayref )	3048:12:97494:97515	11002761	0	True				
ANR	11003080	UnaryOperationExpression	! r_is_array ( & arrayref )		11002761	0					
ANR	11003081	UnaryOperator	!		11002761	0					
ANR	11003082	CallExpression	r_is_array ( & arrayref )		11002761	1					
ANR	11003083	Callee	r_is_array		11002761	0					
ANR	11003084	Identifier	r_is_array		11002761	0					
ANR	11003085	ArgumentList	& arrayref		11002761	1					
ANR	11003086	Argument	& arrayref		11002761	0					
ANR	11003087	UnaryOperationExpression	& arrayref		11002761	0					
ANR	11003088	UnaryOperator	&		11002761	0					
ANR	11003089	Identifier	arrayref		11002761	1					
ANR	11003090	ExpressionStatement	return_error ( gs_error_typecheck )	3049:12:97530:97562	11002761	1	True				
ANR	11003091	CallExpression	return_error ( gs_error_typecheck )		11002761	0					
ANR	11003092	Callee	return_error		11002761	0					
ANR	11003093	Identifier	return_error		11002761	0					
ANR	11003094	ArgumentList	gs_error_typecheck		11002761	1					
ANR	11003095	Argument	gs_error_typecheck		11002761	0					
ANR	11003096	Identifier	gs_error_typecheck		11002761	0					
ANR	11003097	IfStatement	if ( r_size ( & arrayref ) != value [ 0 ] )		11002761	7					
ANR	11003098	Condition	r_size ( & arrayref ) != value [ 0 ]	3050:12:97576:97604	11002761	0	True				
ANR	11003099	EqualityExpression	r_size ( & arrayref ) != value [ 0 ]		11002761	0		!=			
ANR	11003100	CallExpression	r_size ( & arrayref )		11002761	0					
ANR	11003101	Callee	r_size		11002761	0					
ANR	11003102	Identifier	r_size		11002761	0					
ANR	11003103	ArgumentList	& arrayref		11002761	1					
ANR	11003104	Argument	& arrayref		11002761	0					
ANR	11003105	UnaryOperationExpression	& arrayref		11002761	0					
ANR	11003106	UnaryOperator	&		11002761	0					
ANR	11003107	Identifier	arrayref		11002761	1					
ANR	11003108	ArrayIndexing	value [ 0 ]		11002761	1					
ANR	11003109	Identifier	value		11002761	0					
ANR	11003110	PrimaryExpression	0		11002761	1					
ANR	11003111	ExpressionStatement	return_error ( gs_error_rangecheck )	3051:12:97619:97652	11002761	1	True				
ANR	11003112	CallExpression	return_error ( gs_error_rangecheck )		11002761	0					
ANR	11003113	Callee	return_error		11002761	0					
ANR	11003114	Identifier	return_error		11002761	0					
ANR	11003115	ArgumentList	gs_error_rangecheck		11002761	1					
ANR	11003116	Argument	gs_error_rangecheck		11002761	0					
ANR	11003117	Identifier	gs_error_rangecheck		11002761	0					
ANR	11003118	ForStatement	for ( i = 0 ; i < value [ 0 ] ; i ++ )		11002761	8					
ANR	11003119	ForInit	i = 0 ;	3053:13:97668:97671	11002761	0	True				
ANR	11003120	AssignmentExpression	i = 0		11002761	0		=			
ANR	11003121	Identifier	i		11002761	0					
ANR	11003122	PrimaryExpression	0		11002761	1					
ANR	11003123	Condition	i < value [ 0 ]	3053:17:97672:97681	11002761	1	True				
ANR	11003124	RelationalExpression	i < value [ 0 ]		11002761	0		<			
ANR	11003125	Identifier	i		11002761	0					
ANR	11003126	ArrayIndexing	value [ 0 ]		11002761	1					
ANR	11003127	Identifier	value		11002761	0					
ANR	11003128	PrimaryExpression	0		11002761	1					
ANR	11003129	PostIncDecOperationExpression	i ++	3053:28:97683:97685	11002761	2	True				
ANR	11003130	Identifier	i		11002761	0					
ANR	11003131	IncDec	++		11002761	1					
ANR	11003132	CompoundStatement		48:33:1545:1545	11002761	3					
ANR	11003133	ExpressionStatement	"code = array_get ( imemory , & arrayref , i , & tempref )"	3054:12:97702:97751	11002761	0	True				
ANR	11003134	AssignmentExpression	"code = array_get ( imemory , & arrayref , i , & tempref )"		11002761	0		=			
ANR	11003135	Identifier	code		11002761	0					
ANR	11003136	CallExpression	"array_get ( imemory , & arrayref , i , & tempref )"		11002761	1					
ANR	11003137	Callee	array_get		11002761	0					
ANR	11003138	Identifier	array_get		11002761	0					
ANR	11003139	ArgumentList	imemory		11002761	1					
ANR	11003140	Argument	imemory		11002761	0					
ANR	11003141	Identifier	imemory		11002761	0					
ANR	11003142	Argument	& arrayref		11002761	1					
ANR	11003143	UnaryOperationExpression	& arrayref		11002761	0					
ANR	11003144	UnaryOperator	&		11002761	0					
ANR	11003145	Identifier	arrayref		11002761	1					
ANR	11003146	Argument	i		11002761	2					
ANR	11003147	Identifier	i		11002761	0					
ANR	11003148	Argument	& tempref		11002761	3					
ANR	11003149	UnaryOperationExpression	& tempref		11002761	0					
ANR	11003150	UnaryOperator	&		11002761	0					
ANR	11003151	Identifier	tempref		11002761	1					
ANR	11003152	IfStatement	if ( code < 0 )		11002761	1					
ANR	11003153	Condition	code < 0	3055:16:97769:97776	11002761	0	True				
ANR	11003154	RelationalExpression	code < 0		11002761	0		<			
ANR	11003155	Identifier	code		11002761	0					
ANR	11003156	PrimaryExpression	0		11002761	1					
ANR	11003157	ReturnStatement	return code ;	3056:16:97795:97806	11002761	1	True				
ANR	11003158	Identifier	code		11002761	0					
ANR	11003159	ForStatement	for ( j = 0 ; j < value [ 1 ] ; j ++ )		11002761	2					
ANR	11003160	ForInit	j = 0 ;	3057:17:97825:97828	11002761	0	True				
ANR	11003161	AssignmentExpression	j = 0		11002761	0		=			
ANR	11003162	Identifier	j		11002761	0					
ANR	11003163	PrimaryExpression	0		11002761	1					
ANR	11003164	Condition	j < value [ 1 ]	3057:21:97829:97838	11002761	1	True				
ANR	11003165	RelationalExpression	j < value [ 1 ]		11002761	0		<			
ANR	11003166	Identifier	j		11002761	0					
ANR	11003167	ArrayIndexing	value [ 1 ]		11002761	1					
ANR	11003168	Identifier	value		11002761	0					
ANR	11003169	PrimaryExpression	1		11002761	1					
ANR	11003170	PostIncDecOperationExpression	j ++	3057:32:97840:97842	11002761	2	True				
ANR	11003171	Identifier	j		11002761	0					
ANR	11003172	IncDec	++		11002761	1					
ANR	11003173	CompoundStatement		52:37:1702:1702	11002761	3					
ANR	11003174	ExpressionStatement	"code = array_get ( imemory , & tempref , i , & valref )"	3058:16:97863:97910	11002761	0	True				
ANR	11003175	AssignmentExpression	"code = array_get ( imemory , & tempref , i , & valref )"		11002761	0		=			
ANR	11003176	Identifier	code		11002761	0					
ANR	11003177	CallExpression	"array_get ( imemory , & tempref , i , & valref )"		11002761	1					
ANR	11003178	Callee	array_get		11002761	0					
ANR	11003179	Identifier	array_get		11002761	0					
ANR	11003180	ArgumentList	imemory		11002761	1					
ANR	11003181	Argument	imemory		11002761	0					
ANR	11003182	Identifier	imemory		11002761	0					
ANR	11003183	Argument	& tempref		11002761	1					
ANR	11003184	UnaryOperationExpression	& tempref		11002761	0					
ANR	11003185	UnaryOperator	&		11002761	0					
ANR	11003186	Identifier	tempref		11002761	1					
ANR	11003187	Argument	i		11002761	2					
ANR	11003188	Identifier	i		11002761	0					
ANR	11003189	Argument	& valref		11002761	3					
ANR	11003190	UnaryOperationExpression	& valref		11002761	0					
ANR	11003191	UnaryOperator	&		11002761	0					
ANR	11003192	Identifier	valref		11002761	1					
ANR	11003193	IfStatement	if ( code < 0 )		11002761	1					
ANR	11003194	Condition	code < 0	3059:20:97932:97939	11002761	0	True				
ANR	11003195	RelationalExpression	code < 0		11002761	0		<			
ANR	11003196	Identifier	code		11002761	0					
ANR	11003197	PrimaryExpression	0		11002761	1					
ANR	11003198	ReturnStatement	return code ;	3060:20:97962:97973	11002761	1	True				
ANR	11003199	Identifier	code		11002761	0					
ANR	11003200	IfStatement	"if ( ! r_has_type ( & valref , t_string ) )"		11002761	2					
ANR	11003201	Condition	"! r_has_type ( & valref , t_string )"	3061:20:97995:98024	11002761	0	True				
ANR	11003202	UnaryOperationExpression	"! r_has_type ( & valref , t_string )"		11002761	0					
ANR	11003203	UnaryOperator	!		11002761	0					
ANR	11003204	CallExpression	"r_has_type ( & valref , t_string )"		11002761	1					
ANR	11003205	Callee	r_has_type		11002761	0					
ANR	11003206	Identifier	r_has_type		11002761	0					
ANR	11003207	ArgumentList	& valref		11002761	1					
ANR	11003208	Argument	& valref		11002761	0					
ANR	11003209	UnaryOperationExpression	& valref		11002761	0					
ANR	11003210	UnaryOperator	&		11002761	0					
ANR	11003211	Identifier	valref		11002761	1					
ANR	11003212	Argument	t_string		11002761	1					
ANR	11003213	Identifier	t_string		11002761	0					
ANR	11003214	ExpressionStatement	return_error ( gs_error_typecheck )	3062:20:98047:98079	11002761	1	True				
ANR	11003215	CallExpression	return_error ( gs_error_typecheck )		11002761	0					
ANR	11003216	Callee	return_error		11002761	0					
ANR	11003217	Identifier	return_error		11002761	0					
ANR	11003218	ArgumentList	gs_error_typecheck		11002761	1					
ANR	11003219	Argument	gs_error_typecheck		11002761	0					
ANR	11003220	Identifier	gs_error_typecheck		11002761	0					
ANR	11003221	IfStatement	if ( r_size ( & valref ) != ( 3 * value [ 2 ] * value [ 3 ] ) )		11002761	3					
ANR	11003222	Condition	r_size ( & valref ) != ( 3 * value [ 2 ] * value [ 3 ] )	3064:20:98102:98145	11002761	0	True				
ANR	11003223	EqualityExpression	r_size ( & valref ) != ( 3 * value [ 2 ] * value [ 3 ] )		11002761	0		!=			
ANR	11003224	CallExpression	r_size ( & valref )		11002761	0					
ANR	11003225	Callee	r_size		11002761	0					
ANR	11003226	Identifier	r_size		11002761	0					
ANR	11003227	ArgumentList	& valref		11002761	1					
ANR	11003228	Argument	& valref		11002761	0					
ANR	11003229	UnaryOperationExpression	& valref		11002761	0					
ANR	11003230	UnaryOperator	&		11002761	0					
ANR	11003231	Identifier	valref		11002761	1					
ANR	11003232	MultiplicativeExpression	3 * value [ 2 ] * value [ 3 ]		11002761	1		*			
ANR	11003233	PrimaryExpression	3		11002761	0					
ANR	11003234	MultiplicativeExpression	value [ 2 ] * value [ 3 ]		11002761	1		*			
ANR	11003235	ArrayIndexing	value [ 2 ]		11002761	0					
ANR	11003236	Identifier	value		11002761	0					
ANR	11003237	PrimaryExpression	2		11002761	1					
ANR	11003238	ArrayIndexing	value [ 3 ]		11002761	1					
ANR	11003239	Identifier	value		11002761	0					
ANR	11003240	PrimaryExpression	3		11002761	1					
ANR	11003241	ExpressionStatement	return_error ( gs_error_rangecheck )	3065:20:98168:98201	11002761	1	True				
ANR	11003242	CallExpression	return_error ( gs_error_rangecheck )		11002761	0					
ANR	11003243	Callee	return_error		11002761	0					
ANR	11003244	Identifier	return_error		11002761	0					
ANR	11003245	ArgumentList	gs_error_rangecheck		11002761	1					
ANR	11003246	Argument	gs_error_rangecheck		11002761	0					
ANR	11003247	Identifier	gs_error_rangecheck		11002761	0					
ANR	11003248	ElseStatement	else		11002761	0					
ANR	11003249	CompoundStatement		63:11:2095:2095	11002761	0					
ANR	11003250	ExpressionStatement	return_error ( gs_error_rangecheck )	3069:8:98248:98281	11002761	0	True				
ANR	11003251	CallExpression	return_error ( gs_error_rangecheck )		11002761	0					
ANR	11003252	Callee	return_error		11002761	0					
ANR	11003253	Identifier	return_error		11002761	0					
ANR	11003254	ArgumentList	gs_error_rangecheck		11002761	1					
ANR	11003255	Argument	gs_error_rangecheck		11002761	0					
ANR	11003256	Identifier	gs_error_rangecheck		11002761	0					
ANR	11003257	ExpressionStatement	"code = dict_find_string ( & CIEdict , ""RangeDEFG"" , & pref )"	3075:4:98397:98450	11002761	12	True				
ANR	11003258	AssignmentExpression	"code = dict_find_string ( & CIEdict , ""RangeDEFG"" , & pref )"		11002761	0		=			
ANR	11003259	Identifier	code		11002761	0					
ANR	11003260	CallExpression	"dict_find_string ( & CIEdict , ""RangeDEFG"" , & pref )"		11002761	1					
ANR	11003261	Callee	dict_find_string		11002761	0					
ANR	11003262	Identifier	dict_find_string		11002761	0					
ANR	11003263	ArgumentList	& CIEdict		11002761	1					
ANR	11003264	Argument	& CIEdict		11002761	0					
ANR	11003265	UnaryOperationExpression	& CIEdict		11002761	0					
ANR	11003266	UnaryOperator	&		11002761	0					
ANR	11003267	Identifier	CIEdict		11002761	1					
ANR	11003268	Argument	"""RangeDEFG"""		11002761	1					
ANR	11003269	PrimaryExpression	"""RangeDEFG"""		11002761	0					
ANR	11003270	Argument	& pref		11002761	2					
ANR	11003271	UnaryOperationExpression	& pref		11002761	0					
ANR	11003272	UnaryOperator	&		11002761	0					
ANR	11003273	Identifier	pref		11002761	1					
ANR	11003274	IfStatement	"if ( code > 0 && ! r_has_type ( pref , t_null ) )"		11002761	13					
ANR	11003275	Condition	"code > 0 && ! r_has_type ( pref , t_null )"	3076:8:98460:98496	11002761	0	True				
ANR	11003276	AndExpression	"code > 0 && ! r_has_type ( pref , t_null )"		11002761	0		&&			
ANR	11003277	RelationalExpression	code > 0		11002761	0		>			
ANR	11003278	Identifier	code		11002761	0					
ANR	11003279	PrimaryExpression	0		11002761	1					
ANR	11003280	UnaryOperationExpression	"! r_has_type ( pref , t_null )"		11002761	1					
ANR	11003281	UnaryOperator	!		11002761	0					
ANR	11003282	CallExpression	"r_has_type ( pref , t_null )"		11002761	1					
ANR	11003283	Callee	r_has_type		11002761	0					
ANR	11003284	Identifier	r_has_type		11002761	0					
ANR	11003285	ArgumentList	pref		11002761	1					
ANR	11003286	Argument	pref		11002761	0					
ANR	11003287	Identifier	pref		11002761	0					
ANR	11003288	Argument	t_null		11002761	1					
ANR	11003289	Identifier	t_null		11002761	0					
ANR	11003290	CompoundStatement		71:47:2356:2356	11002761	1					
ANR	11003291	IfStatement	if ( ! r_is_array ( pref ) )		11002761	0					
ANR	11003292	Condition	! r_is_array ( pref )	3077:12:98513:98529	11002761	0	True				
ANR	11003293	UnaryOperationExpression	! r_is_array ( pref )		11002761	0					
ANR	11003294	UnaryOperator	!		11002761	0					
ANR	11003295	CallExpression	r_is_array ( pref )		11002761	1					
ANR	11003296	Callee	r_is_array		11002761	0					
ANR	11003297	Identifier	r_is_array		11002761	0					
ANR	11003298	ArgumentList	pref		11002761	1					
ANR	11003299	Argument	pref		11002761	0					
ANR	11003300	Identifier	pref		11002761	0					
ANR	11003301	ExpressionStatement	return_error ( gs_error_typecheck )	3078:12:98544:98576	11002761	1	True				
ANR	11003302	CallExpression	return_error ( gs_error_typecheck )		11002761	0					
ANR	11003303	Callee	return_error		11002761	0					
ANR	11003304	Identifier	return_error		11002761	0					
ANR	11003305	ArgumentList	gs_error_typecheck		11002761	1					
ANR	11003306	Argument	gs_error_typecheck		11002761	0					
ANR	11003307	Identifier	gs_error_typecheck		11002761	0					
ANR	11003308	IfStatement	if ( r_size ( pref ) != 8 )		11002761	1					
ANR	11003309	Condition	r_size ( pref ) != 8	3079:12:98590:98606	11002761	0	True				
ANR	11003310	EqualityExpression	r_size ( pref ) != 8		11002761	0		!=			
ANR	11003311	CallExpression	r_size ( pref )		11002761	0					
ANR	11003312	Callee	r_size		11002761	0					
ANR	11003313	Identifier	r_size		11002761	0					
ANR	11003314	ArgumentList	pref		11002761	1					
ANR	11003315	Argument	pref		11002761	0					
ANR	11003316	Identifier	pref		11002761	0					
ANR	11003317	PrimaryExpression	8		11002761	1					
ANR	11003318	ExpressionStatement	return_error ( gs_error_rangecheck )	3080:12:98621:98654	11002761	1	True				
ANR	11003319	CallExpression	return_error ( gs_error_rangecheck )		11002761	0					
ANR	11003320	Callee	return_error		11002761	0					
ANR	11003321	Identifier	return_error		11002761	0					
ANR	11003322	ArgumentList	gs_error_rangecheck		11002761	1					
ANR	11003323	Argument	gs_error_rangecheck		11002761	0					
ANR	11003324	Identifier	gs_error_rangecheck		11002761	0					
ANR	11003325	ExpressionStatement	"code = get_cie_param_array ( imemory , pref , 8 , value )"	3081:8:98664:98715	11002761	2	True				
ANR	11003326	AssignmentExpression	"code = get_cie_param_array ( imemory , pref , 8 , value )"		11002761	0		=			
ANR	11003327	Identifier	code		11002761	0					
ANR	11003328	CallExpression	"get_cie_param_array ( imemory , pref , 8 , value )"		11002761	1					
ANR	11003329	Callee	get_cie_param_array		11002761	0					
ANR	11003330	Identifier	get_cie_param_array		11002761	0					
ANR	11003331	ArgumentList	imemory		11002761	1					
ANR	11003332	Argument	imemory		11002761	0					
ANR	11003333	Identifier	imemory		11002761	0					
ANR	11003334	Argument	pref		11002761	1					
ANR	11003335	Identifier	pref		11002761	0					
ANR	11003336	Argument	8		11002761	2					
ANR	11003337	PrimaryExpression	8		11002761	0					
ANR	11003338	Argument	value		11002761	3					
ANR	11003339	Identifier	value		11002761	0					
ANR	11003340	IfStatement	if ( code < 0 )		11002761	3					
ANR	11003341	Condition	code < 0	3082:12:98729:98736	11002761	0	True				
ANR	11003342	RelationalExpression	code < 0		11002761	0		<			
ANR	11003343	Identifier	code		11002761	0					
ANR	11003344	PrimaryExpression	0		11002761	1					
ANR	11003345	ReturnStatement	return code ;	3083:12:98751:98762	11002761	1	True				
ANR	11003346	Identifier	code		11002761	0					
ANR	11003347	IfStatement	if ( value [ 1 ] < value [ 0 ] || value [ 3 ] < value [ 2 ] || value [ 5 ] < value [ 4 ] || value [ 7 ] < value [ 6 ] )		11002761	4					
ANR	11003348	Condition	value [ 1 ] < value [ 0 ] || value [ 3 ] < value [ 2 ] || value [ 5 ] < value [ 4 ] || value [ 7 ] < value [ 6 ]	3084:12:98776:98863	11002761	0	True				
ANR	11003349	OrExpression	value [ 1 ] < value [ 0 ] || value [ 3 ] < value [ 2 ] || value [ 5 ] < value [ 4 ] || value [ 7 ] < value [ 6 ]		11002761	0		||			
ANR	11003350	RelationalExpression	value [ 1 ] < value [ 0 ]		11002761	0		<			
ANR	11003351	ArrayIndexing	value [ 1 ]		11002761	0					
ANR	11003352	Identifier	value		11002761	0					
ANR	11003353	PrimaryExpression	1		11002761	1					
ANR	11003354	ArrayIndexing	value [ 0 ]		11002761	1					
ANR	11003355	Identifier	value		11002761	0					
ANR	11003356	PrimaryExpression	0		11002761	1					
ANR	11003357	OrExpression	value [ 3 ] < value [ 2 ] || value [ 5 ] < value [ 4 ] || value [ 7 ] < value [ 6 ]		11002761	1		||			
ANR	11003358	RelationalExpression	value [ 3 ] < value [ 2 ]		11002761	0		<			
ANR	11003359	ArrayIndexing	value [ 3 ]		11002761	0					
ANR	11003360	Identifier	value		11002761	0					
ANR	11003361	PrimaryExpression	3		11002761	1					
ANR	11003362	ArrayIndexing	value [ 2 ]		11002761	1					
ANR	11003363	Identifier	value		11002761	0					
ANR	11003364	PrimaryExpression	2		11002761	1					
ANR	11003365	OrExpression	value [ 5 ] < value [ 4 ] || value [ 7 ] < value [ 6 ]		11002761	1		||			
ANR	11003366	RelationalExpression	value [ 5 ] < value [ 4 ]		11002761	0		<			
ANR	11003367	ArrayIndexing	value [ 5 ]		11002761	0					
ANR	11003368	Identifier	value		11002761	0					
ANR	11003369	PrimaryExpression	5		11002761	1					
ANR	11003370	ArrayIndexing	value [ 4 ]		11002761	1					
ANR	11003371	Identifier	value		11002761	0					
ANR	11003372	PrimaryExpression	4		11002761	1					
ANR	11003373	RelationalExpression	value [ 7 ] < value [ 6 ]		11002761	1		<			
ANR	11003374	ArrayIndexing	value [ 7 ]		11002761	0					
ANR	11003375	Identifier	value		11002761	0					
ANR	11003376	PrimaryExpression	7		11002761	1					
ANR	11003377	ArrayIndexing	value [ 6 ]		11002761	1					
ANR	11003378	Identifier	value		11002761	0					
ANR	11003379	PrimaryExpression	6		11002761	1					
ANR	11003380	ExpressionStatement	return_error ( gs_error_rangecheck )	3085:12:98878:98911	11002761	1	True				
ANR	11003381	CallExpression	return_error ( gs_error_rangecheck )		11002761	0					
ANR	11003382	Callee	return_error		11002761	0					
ANR	11003383	Identifier	return_error		11002761	0					
ANR	11003384	ArgumentList	gs_error_rangecheck		11002761	1					
ANR	11003385	Argument	gs_error_rangecheck		11002761	0					
ANR	11003386	Identifier	gs_error_rangecheck		11002761	0					
ANR	11003387	ExpressionStatement	"code = dict_find_string ( & CIEdict , ""DecodeDEFG"" , & pref )"	3088:4:98924:98978	11002761	14	True				
ANR	11003388	AssignmentExpression	"code = dict_find_string ( & CIEdict , ""DecodeDEFG"" , & pref )"		11002761	0		=			
ANR	11003389	Identifier	code		11002761	0					
ANR	11003390	CallExpression	"dict_find_string ( & CIEdict , ""DecodeDEFG"" , & pref )"		11002761	1					
ANR	11003391	Callee	dict_find_string		11002761	0					
ANR	11003392	Identifier	dict_find_string		11002761	0					
ANR	11003393	ArgumentList	& CIEdict		11002761	1					
ANR	11003394	Argument	& CIEdict		11002761	0					
ANR	11003395	UnaryOperationExpression	& CIEdict		11002761	0					
ANR	11003396	UnaryOperator	&		11002761	0					
ANR	11003397	Identifier	CIEdict		11002761	1					
ANR	11003398	Argument	"""DecodeDEFG"""		11002761	1					
ANR	11003399	PrimaryExpression	"""DecodeDEFG"""		11002761	0					
ANR	11003400	Argument	& pref		11002761	2					
ANR	11003401	UnaryOperationExpression	& pref		11002761	0					
ANR	11003402	UnaryOperator	&		11002761	0					
ANR	11003403	Identifier	pref		11002761	1					
ANR	11003404	IfStatement	"if ( code > 0 && ! r_has_type ( pref , t_null ) )"		11002761	15					
ANR	11003405	Condition	"code > 0 && ! r_has_type ( pref , t_null )"	3089:8:98988:99024	11002761	0	True				
ANR	11003406	AndExpression	"code > 0 && ! r_has_type ( pref , t_null )"		11002761	0		&&			
ANR	11003407	RelationalExpression	code > 0		11002761	0		>			
ANR	11003408	Identifier	code		11002761	0					
ANR	11003409	PrimaryExpression	0		11002761	1					
ANR	11003410	UnaryOperationExpression	"! r_has_type ( pref , t_null )"		11002761	1					
ANR	11003411	UnaryOperator	!		11002761	0					
ANR	11003412	CallExpression	"r_has_type ( pref , t_null )"		11002761	1					
ANR	11003413	Callee	r_has_type		11002761	0					
ANR	11003414	Identifier	r_has_type		11002761	0					
ANR	11003415	ArgumentList	pref		11002761	1					
ANR	11003416	Argument	pref		11002761	0					
ANR	11003417	Identifier	pref		11002761	0					
ANR	11003418	Argument	t_null		11002761	1					
ANR	11003419	Identifier	t_null		11002761	0					
ANR	11003420	CompoundStatement		84:47:2884:2884	11002761	1					
ANR	11003421	IfStatement	if ( ! r_is_array ( pref ) )		11002761	0					
ANR	11003422	Condition	! r_is_array ( pref )	3090:12:99041:99057	11002761	0	True				
ANR	11003423	UnaryOperationExpression	! r_is_array ( pref )		11002761	0					
ANR	11003424	UnaryOperator	!		11002761	0					
ANR	11003425	CallExpression	r_is_array ( pref )		11002761	1					
ANR	11003426	Callee	r_is_array		11002761	0					
ANR	11003427	Identifier	r_is_array		11002761	0					
ANR	11003428	ArgumentList	pref		11002761	1					
ANR	11003429	Argument	pref		11002761	0					
ANR	11003430	Identifier	pref		11002761	0					
ANR	11003431	ExpressionStatement	return_error ( gs_error_typecheck )	3091:12:99072:99104	11002761	1	True				
ANR	11003432	CallExpression	return_error ( gs_error_typecheck )		11002761	0					
ANR	11003433	Callee	return_error		11002761	0					
ANR	11003434	Identifier	return_error		11002761	0					
ANR	11003435	ArgumentList	gs_error_typecheck		11002761	1					
ANR	11003436	Argument	gs_error_typecheck		11002761	0					
ANR	11003437	Identifier	gs_error_typecheck		11002761	0					
ANR	11003438	IfStatement	if ( r_size ( pref ) != 4 )		11002761	1					
ANR	11003439	Condition	r_size ( pref ) != 4	3092:12:99118:99134	11002761	0	True				
ANR	11003440	EqualityExpression	r_size ( pref ) != 4		11002761	0		!=			
ANR	11003441	CallExpression	r_size ( pref )		11002761	0					
ANR	11003442	Callee	r_size		11002761	0					
ANR	11003443	Identifier	r_size		11002761	0					
ANR	11003444	ArgumentList	pref		11002761	1					
ANR	11003445	Argument	pref		11002761	0					
ANR	11003446	Identifier	pref		11002761	0					
ANR	11003447	PrimaryExpression	4		11002761	1					
ANR	11003448	ExpressionStatement	return_error ( gs_error_rangecheck )	3093:12:99149:99182	11002761	1	True				
ANR	11003449	CallExpression	return_error ( gs_error_rangecheck )		11002761	0					
ANR	11003450	Callee	return_error		11002761	0					
ANR	11003451	Identifier	return_error		11002761	0					
ANR	11003452	ArgumentList	gs_error_rangecheck		11002761	1					
ANR	11003453	Argument	gs_error_rangecheck		11002761	0					
ANR	11003454	Identifier	gs_error_rangecheck		11002761	0					
ANR	11003455	ForStatement	for ( i = 0 ; i < 4 ; i ++ )		11002761	2					
ANR	11003456	ForInit	i = 0 ;	3095:13:99198:99201	11002761	0	True				
ANR	11003457	AssignmentExpression	i = 0		11002761	0		=			
ANR	11003458	Identifier	i		11002761	0					
ANR	11003459	PrimaryExpression	0		11002761	1					
ANR	11003460	Condition	i < 4	3095:17:99202:99204	11002761	1	True				
ANR	11003461	RelationalExpression	i < 4		11002761	0		<			
ANR	11003462	Identifier	i		11002761	0					
ANR	11003463	PrimaryExpression	4		11002761	1					
ANR	11003464	PostIncDecOperationExpression	i ++	3095:21:99206:99208	11002761	2	True				
ANR	11003465	Identifier	i		11002761	0					
ANR	11003466	IncDec	++		11002761	1					
ANR	11003467	CompoundStatement		90:26:3068:3068	11002761	3					
ANR	11003468	ExpressionStatement	"code = array_get ( imemory , pref , i , & valref )"	3096:12:99225:99268	11002761	0	True				
ANR	11003469	AssignmentExpression	"code = array_get ( imemory , pref , i , & valref )"		11002761	0		=			
ANR	11003470	Identifier	code		11002761	0					
ANR	11003471	CallExpression	"array_get ( imemory , pref , i , & valref )"		11002761	1					
ANR	11003472	Callee	array_get		11002761	0					
ANR	11003473	Identifier	array_get		11002761	0					
ANR	11003474	ArgumentList	imemory		11002761	1					
ANR	11003475	Argument	imemory		11002761	0					
ANR	11003476	Identifier	imemory		11002761	0					
ANR	11003477	Argument	pref		11002761	1					
ANR	11003478	Identifier	pref		11002761	0					
ANR	11003479	Argument	i		11002761	2					
ANR	11003480	Identifier	i		11002761	0					
ANR	11003481	Argument	& valref		11002761	3					
ANR	11003482	UnaryOperationExpression	& valref		11002761	0					
ANR	11003483	UnaryOperator	&		11002761	0					
ANR	11003484	Identifier	valref		11002761	1					
ANR	11003485	IfStatement	if ( code < 0 )		11002761	1					
ANR	11003486	Condition	code < 0	3097:16:99286:99293	11002761	0	True				
ANR	11003487	RelationalExpression	code < 0		11002761	0		<			
ANR	11003488	Identifier	code		11002761	0					
ANR	11003489	PrimaryExpression	0		11002761	1					
ANR	11003490	ReturnStatement	return code ;	3098:16:99312:99323	11002761	1	True				
ANR	11003491	Identifier	code		11002761	0					
ANR	11003492	ExpressionStatement	check_proc ( valref )	3099:12:99337:99355	11002761	2	True				
ANR	11003493	CallExpression	check_proc ( valref )		11002761	0					
ANR	11003494	Callee	check_proc		11002761	0					
ANR	11003495	Identifier	check_proc		11002761	0					
ANR	11003496	ArgumentList	valref		11002761	1					
ANR	11003497	Argument	valref		11002761	0					
ANR	11003498	Identifier	valref		11002761	0					
ANR	11003499	ExpressionStatement	"code = dict_find_string ( & CIEdict , ""RangeHIJK"" , & pref )"	3103:4:99378:99431	11002761	16	True				
ANR	11003500	AssignmentExpression	"code = dict_find_string ( & CIEdict , ""RangeHIJK"" , & pref )"		11002761	0		=			
ANR	11003501	Identifier	code		11002761	0					
ANR	11003502	CallExpression	"dict_find_string ( & CIEdict , ""RangeHIJK"" , & pref )"		11002761	1					
ANR	11003503	Callee	dict_find_string		11002761	0					
ANR	11003504	Identifier	dict_find_string		11002761	0					
ANR	11003505	ArgumentList	& CIEdict		11002761	1					
ANR	11003506	Argument	& CIEdict		11002761	0					
ANR	11003507	UnaryOperationExpression	& CIEdict		11002761	0					
ANR	11003508	UnaryOperator	&		11002761	0					
ANR	11003509	Identifier	CIEdict		11002761	1					
ANR	11003510	Argument	"""RangeHIJK"""		11002761	1					
ANR	11003511	PrimaryExpression	"""RangeHIJK"""		11002761	0					
ANR	11003512	Argument	& pref		11002761	2					
ANR	11003513	UnaryOperationExpression	& pref		11002761	0					
ANR	11003514	UnaryOperator	&		11002761	0					
ANR	11003515	Identifier	pref		11002761	1					
ANR	11003516	IfStatement	"if ( code > 0 && ! r_has_type ( pref , t_null ) )"		11002761	17					
ANR	11003517	Condition	"code > 0 && ! r_has_type ( pref , t_null )"	3104:8:99441:99477	11002761	0	True				
ANR	11003518	AndExpression	"code > 0 && ! r_has_type ( pref , t_null )"		11002761	0		&&			
ANR	11003519	RelationalExpression	code > 0		11002761	0		>			
ANR	11003520	Identifier	code		11002761	0					
ANR	11003521	PrimaryExpression	0		11002761	1					
ANR	11003522	UnaryOperationExpression	"! r_has_type ( pref , t_null )"		11002761	1					
ANR	11003523	UnaryOperator	!		11002761	0					
ANR	11003524	CallExpression	"r_has_type ( pref , t_null )"		11002761	1					
ANR	11003525	Callee	r_has_type		11002761	0					
ANR	11003526	Identifier	r_has_type		11002761	0					
ANR	11003527	ArgumentList	pref		11002761	1					
ANR	11003528	Argument	pref		11002761	0					
ANR	11003529	Identifier	pref		11002761	0					
ANR	11003530	Argument	t_null		11002761	1					
ANR	11003531	Identifier	t_null		11002761	0					
ANR	11003532	CompoundStatement		99:47:3337:3337	11002761	1					
ANR	11003533	IfStatement	if ( ! r_is_array ( pref ) )		11002761	0					
ANR	11003534	Condition	! r_is_array ( pref )	3105:12:99494:99510	11002761	0	True				
ANR	11003535	UnaryOperationExpression	! r_is_array ( pref )		11002761	0					
ANR	11003536	UnaryOperator	!		11002761	0					
ANR	11003537	CallExpression	r_is_array ( pref )		11002761	1					
ANR	11003538	Callee	r_is_array		11002761	0					
ANR	11003539	Identifier	r_is_array		11002761	0					
ANR	11003540	ArgumentList	pref		11002761	1					
ANR	11003541	Argument	pref		11002761	0					
ANR	11003542	Identifier	pref		11002761	0					
ANR	11003543	ExpressionStatement	return_error ( gs_error_typecheck )	3106:12:99525:99557	11002761	1	True				
ANR	11003544	CallExpression	return_error ( gs_error_typecheck )		11002761	0					
ANR	11003545	Callee	return_error		11002761	0					
ANR	11003546	Identifier	return_error		11002761	0					
ANR	11003547	ArgumentList	gs_error_typecheck		11002761	1					
ANR	11003548	Argument	gs_error_typecheck		11002761	0					
ANR	11003549	Identifier	gs_error_typecheck		11002761	0					
ANR	11003550	IfStatement	if ( r_size ( pref ) != 8 )		11002761	1					
ANR	11003551	Condition	r_size ( pref ) != 8	3107:12:99571:99587	11002761	0	True				
ANR	11003552	EqualityExpression	r_size ( pref ) != 8		11002761	0		!=			
ANR	11003553	CallExpression	r_size ( pref )		11002761	0					
ANR	11003554	Callee	r_size		11002761	0					
ANR	11003555	Identifier	r_size		11002761	0					
ANR	11003556	ArgumentList	pref		11002761	1					
ANR	11003557	Argument	pref		11002761	0					
ANR	11003558	Identifier	pref		11002761	0					
ANR	11003559	PrimaryExpression	8		11002761	1					
ANR	11003560	ExpressionStatement	return_error ( gs_error_rangecheck )	3108:12:99602:99635	11002761	1	True				
ANR	11003561	CallExpression	return_error ( gs_error_rangecheck )		11002761	0					
ANR	11003562	Callee	return_error		11002761	0					
ANR	11003563	Identifier	return_error		11002761	0					
ANR	11003564	ArgumentList	gs_error_rangecheck		11002761	1					
ANR	11003565	Argument	gs_error_rangecheck		11002761	0					
ANR	11003566	Identifier	gs_error_rangecheck		11002761	0					
ANR	11003567	ExpressionStatement	"code = get_cie_param_array ( imemory , pref , 8 , value )"	3109:8:99645:99696	11002761	2	True				
ANR	11003568	AssignmentExpression	"code = get_cie_param_array ( imemory , pref , 8 , value )"		11002761	0		=			
ANR	11003569	Identifier	code		11002761	0					
ANR	11003570	CallExpression	"get_cie_param_array ( imemory , pref , 8 , value )"		11002761	1					
ANR	11003571	Callee	get_cie_param_array		11002761	0					
ANR	11003572	Identifier	get_cie_param_array		11002761	0					
ANR	11003573	ArgumentList	imemory		11002761	1					
ANR	11003574	Argument	imemory		11002761	0					
ANR	11003575	Identifier	imemory		11002761	0					
ANR	11003576	Argument	pref		11002761	1					
ANR	11003577	Identifier	pref		11002761	0					
ANR	11003578	Argument	8		11002761	2					
ANR	11003579	PrimaryExpression	8		11002761	0					
ANR	11003580	Argument	value		11002761	3					
ANR	11003581	Identifier	value		11002761	0					
ANR	11003582	IfStatement	if ( code < 0 )		11002761	3					
ANR	11003583	Condition	code < 0	3110:12:99710:99717	11002761	0	True				
ANR	11003584	RelationalExpression	code < 0		11002761	0		<			
ANR	11003585	Identifier	code		11002761	0					
ANR	11003586	PrimaryExpression	0		11002761	1					
ANR	11003587	ReturnStatement	return code ;	3111:12:99732:99743	11002761	1	True				
ANR	11003588	Identifier	code		11002761	0					
ANR	11003589	IfStatement	if ( value [ 1 ] < value [ 0 ] || value [ 3 ] < value [ 2 ] || value [ 5 ] < value [ 4 ] || value [ 7 ] < value [ 6 ] )		11002761	4					
ANR	11003590	Condition	value [ 1 ] < value [ 0 ] || value [ 3 ] < value [ 2 ] || value [ 5 ] < value [ 4 ] || value [ 7 ] < value [ 6 ]	3112:12:99757:99844	11002761	0	True				
ANR	11003591	OrExpression	value [ 1 ] < value [ 0 ] || value [ 3 ] < value [ 2 ] || value [ 5 ] < value [ 4 ] || value [ 7 ] < value [ 6 ]		11002761	0		||			
ANR	11003592	RelationalExpression	value [ 1 ] < value [ 0 ]		11002761	0		<			
ANR	11003593	ArrayIndexing	value [ 1 ]		11002761	0					
ANR	11003594	Identifier	value		11002761	0					
ANR	11003595	PrimaryExpression	1		11002761	1					
ANR	11003596	ArrayIndexing	value [ 0 ]		11002761	1					
ANR	11003597	Identifier	value		11002761	0					
ANR	11003598	PrimaryExpression	0		11002761	1					
ANR	11003599	OrExpression	value [ 3 ] < value [ 2 ] || value [ 5 ] < value [ 4 ] || value [ 7 ] < value [ 6 ]		11002761	1		||			
ANR	11003600	RelationalExpression	value [ 3 ] < value [ 2 ]		11002761	0		<			
ANR	11003601	ArrayIndexing	value [ 3 ]		11002761	0					
ANR	11003602	Identifier	value		11002761	0					
ANR	11003603	PrimaryExpression	3		11002761	1					
ANR	11003604	ArrayIndexing	value [ 2 ]		11002761	1					
ANR	11003605	Identifier	value		11002761	0					
ANR	11003606	PrimaryExpression	2		11002761	1					
ANR	11003607	OrExpression	value [ 5 ] < value [ 4 ] || value [ 7 ] < value [ 6 ]		11002761	1		||			
ANR	11003608	RelationalExpression	value [ 5 ] < value [ 4 ]		11002761	0		<			
ANR	11003609	ArrayIndexing	value [ 5 ]		11002761	0					
ANR	11003610	Identifier	value		11002761	0					
ANR	11003611	PrimaryExpression	5		11002761	1					
ANR	11003612	ArrayIndexing	value [ 4 ]		11002761	1					
ANR	11003613	Identifier	value		11002761	0					
ANR	11003614	PrimaryExpression	4		11002761	1					
ANR	11003615	RelationalExpression	value [ 7 ] < value [ 6 ]		11002761	1		<			
ANR	11003616	ArrayIndexing	value [ 7 ]		11002761	0					
ANR	11003617	Identifier	value		11002761	0					
ANR	11003618	PrimaryExpression	7		11002761	1					
ANR	11003619	ArrayIndexing	value [ 6 ]		11002761	1					
ANR	11003620	Identifier	value		11002761	0					
ANR	11003621	PrimaryExpression	6		11002761	1					
ANR	11003622	ExpressionStatement	return_error ( gs_error_rangecheck )	3113:12:99859:99892	11002761	1	True				
ANR	11003623	CallExpression	return_error ( gs_error_rangecheck )		11002761	0					
ANR	11003624	Callee	return_error		11002761	0					
ANR	11003625	Identifier	return_error		11002761	0					
ANR	11003626	ArgumentList	gs_error_rangecheck		11002761	1					
ANR	11003627	Argument	gs_error_rangecheck		11002761	0					
ANR	11003628	Identifier	gs_error_rangecheck		11002761	0					
ANR	11003629	ExpressionStatement	* r = 0	3116:4:99905:99911	11002761	18	True				
ANR	11003630	AssignmentExpression	* r = 0		11002761	0		=			
ANR	11003631	UnaryOperationExpression	* r		11002761	0					
ANR	11003632	UnaryOperator	*		11002761	0					
ANR	11003633	Identifier	r		11002761	1					
ANR	11003634	PrimaryExpression	0		11002761	1					
ANR	11003635	ReturnStatement	return 0 ;	3117:4:99917:99925	11002761	19	True				
ANR	11003636	PrimaryExpression	0		11002761	0					
ANR	11003637	ReturnType	static int		11002761	1					
ANR	11003638	Identifier	validateciedefgspace		11002761	2					
ANR	11003639	ParameterList	"i_ctx_t * i_ctx_p , ref * * r"		11002761	3					
ANR	11003640	Parameter	i_ctx_t * i_ctx_p	3005:32:96114:96130	11002761	0	True				
ANR	11003641	ParameterType	i_ctx_t *		11002761	0					
ANR	11003642	Identifier	i_ctx_p		11002761	1					
ANR	11003643	Parameter	ref * * r	3005:51:96133:96139	11002761	1	True				
ANR	11003644	ParameterType	ref * *		11002761	0					
ANR	11003645	Identifier	r		11002761	1					
ANR	11003646	CFGEntryNode	ENTRY		11002761		True				
ANR	11003647	CFGExitNode	EXIT		11002761		True				
ANR	11003648	Symbol	valref . value		11002761						
ANR	11003649	Symbol	code		11002761						
ANR	11003650	Symbol	t_dictionary		11002761						
ANR	11003651	Symbol	gs_error_rangecheck		11002761						
ANR	11003652	Symbol	& CIEdict		11002761						
ANR	11003653	Symbol	gs_error_typecheck		11002761						
ANR	11003654	Symbol	& pref		11002761						
ANR	11003655	Symbol	r_has_type		11002761						
ANR	11003656	Symbol	t_null		11002761						
ANR	11003657	Symbol	& valref		11002761						
ANR	11003658	Symbol	pref		11002761						
ANR	11003659	Symbol	r_size		11002761						
ANR	11003660	Symbol	CIEspace		11002761						
ANR	11003661	Symbol	CIEdict		11002761						
ANR	11003662	Symbol	imemory		11002761						
ANR	11003663	Symbol	value		11002761						
ANR	11003664	Symbol	tempref		11002761						
ANR	11003665	Symbol	dict_find_string		11002761						
ANR	11003666	Symbol	array_get		11002761						
ANR	11003667	Symbol	i		11002761						
ANR	11003668	Symbol	j		11002761						
ANR	11003669	Symbol	& tempref		11002761						
ANR	11003670	Symbol	arrayref		11002761						
ANR	11003671	Symbol	& arrayref		11002761						
ANR	11003672	Symbol	t_string		11002761						
ANR	11003673	Symbol	r		11002761						
ANR	11003674	Symbol	validatecieabcspace		11002761						
ANR	11003675	Symbol	* i		11002761						
ANR	11003676	Symbol	t_integer		11002761						
ANR	11003677	Symbol	valref . value . intval		11002761						
ANR	11003678	Symbol	i_ctx_p		11002761						
ANR	11003679	Symbol	* value		11002761						
ANR	11003680	Symbol	valref		11002761						
ANR	11003681	Symbol	r_is_array		11002761						
ANR	11003682	Symbol	* r		11002761						
ANR	11003683	Symbol	get_cie_param_array		11002761						
ANR	11003684	Function	ciedefgdomain	3119:0:99929:100543							
ANR	11003685	FunctionDef	"ciedefgdomain (i_ctx_t * i_ctx_p , ref * space , float * ptr)"		11003684	0					
ANR	11003686	CompoundStatement		3120:0:99997:100543	11003684	0					
ANR	11003687	IdentifierDeclStatement	int code ;	3121:4:100003:100011	11003684	0	True				
ANR	11003688	IdentifierDecl	code		11003684	0					
ANR	11003689	IdentifierDeclType	int		11003684	0					
ANR	11003690	Identifier	code		11003684	1					
ANR	11003691	IdentifierDeclStatement	"ref CIEdict , * tempref ;"	3122:4:100017:100038	11003684	1	True				
ANR	11003692	IdentifierDecl	CIEdict		11003684	0					
ANR	11003693	IdentifierDeclType	ref		11003684	0					
ANR	11003694	Identifier	CIEdict		11003684	1					
ANR	11003695	IdentifierDecl	* tempref		11003684	1					
ANR	11003696	IdentifierDeclType	ref *		11003684	0					
ANR	11003697	Identifier	tempref		11003684	1					
ANR	11003698	ExpressionStatement	"code = array_get ( imemory , space , 1 , & CIEdict )"	3124:4:100045:100090	11003684	2	True				
ANR	11003699	AssignmentExpression	"code = array_get ( imemory , space , 1 , & CIEdict )"		11003684	0		=			
ANR	11003700	Identifier	code		11003684	0					
ANR	11003701	CallExpression	"array_get ( imemory , space , 1 , & CIEdict )"		11003684	1					
ANR	11003702	Callee	array_get		11003684	0					
ANR	11003703	Identifier	array_get		11003684	0					
ANR	11003704	ArgumentList	imemory		11003684	1					
ANR	11003705	Argument	imemory		11003684	0					
ANR	11003706	Identifier	imemory		11003684	0					
ANR	11003707	Argument	space		11003684	1					
ANR	11003708	Identifier	space		11003684	0					
ANR	11003709	Argument	1		11003684	2					
ANR	11003710	PrimaryExpression	1		11003684	0					
ANR	11003711	Argument	& CIEdict		11003684	3					
ANR	11003712	UnaryOperationExpression	& CIEdict		11003684	0					
ANR	11003713	UnaryOperator	&		11003684	0					
ANR	11003714	Identifier	CIEdict		11003684	1					
ANR	11003715	IfStatement	if ( code < 0 )		11003684	3					
ANR	11003716	Condition	code < 0	3125:8:100100:100107	11003684	0	True				
ANR	11003717	RelationalExpression	code < 0		11003684	0		<			
ANR	11003718	Identifier	code		11003684	0					
ANR	11003719	PrimaryExpression	0		11003684	1					
ANR	11003720	ReturnStatement	return code ;	3126:8:100118:100129	11003684	1	True				
ANR	11003721	Identifier	code		11003684	0					
ANR	11003722	ExpressionStatement	"code = dict_find_string ( & CIEdict , ""RangeDEFG"" , & tempref )"	3129:4:100195:100251	11003684	4	True				
ANR	11003723	AssignmentExpression	"code = dict_find_string ( & CIEdict , ""RangeDEFG"" , & tempref )"		11003684	0		=			
ANR	11003724	Identifier	code		11003684	0					
ANR	11003725	CallExpression	"dict_find_string ( & CIEdict , ""RangeDEFG"" , & tempref )"		11003684	1					
ANR	11003726	Callee	dict_find_string		11003684	0					
ANR	11003727	Identifier	dict_find_string		11003684	0					
ANR	11003728	ArgumentList	& CIEdict		11003684	1					
ANR	11003729	Argument	& CIEdict		11003684	0					
ANR	11003730	UnaryOperationExpression	& CIEdict		11003684	0					
ANR	11003731	UnaryOperator	&		11003684	0					
ANR	11003732	Identifier	CIEdict		11003684	1					
ANR	11003733	Argument	"""RangeDEFG"""		11003684	1					
ANR	11003734	PrimaryExpression	"""RangeDEFG"""		11003684	0					
ANR	11003735	Argument	& tempref		11003684	2					
ANR	11003736	UnaryOperationExpression	& tempref		11003684	0					
ANR	11003737	UnaryOperator	&		11003684	0					
ANR	11003738	Identifier	tempref		11003684	1					
ANR	11003739	IfStatement	"if ( code > 0 && ! r_has_type ( tempref , t_null ) )"		11003684	5					
ANR	11003740	Condition	"code > 0 && ! r_has_type ( tempref , t_null )"	3130:8:100261:100300	11003684	0	True				
ANR	11003741	AndExpression	"code > 0 && ! r_has_type ( tempref , t_null )"		11003684	0		&&			
ANR	11003742	RelationalExpression	code > 0		11003684	0		>			
ANR	11003743	Identifier	code		11003684	0					
ANR	11003744	PrimaryExpression	0		11003684	1					
ANR	11003745	UnaryOperationExpression	"! r_has_type ( tempref , t_null )"		11003684	1					
ANR	11003746	UnaryOperator	!		11003684	0					
ANR	11003747	CallExpression	"r_has_type ( tempref , t_null )"		11003684	1					
ANR	11003748	Callee	r_has_type		11003684	0					
ANR	11003749	Identifier	r_has_type		11003684	0					
ANR	11003750	ArgumentList	tempref		11003684	1					
ANR	11003751	Argument	tempref		11003684	0					
ANR	11003752	Identifier	tempref		11003684	0					
ANR	11003753	Argument	t_null		11003684	1					
ANR	11003754	Identifier	t_null		11003684	0					
ANR	11003755	CompoundStatement		11:50:305:305	11003684	1					
ANR	11003756	ExpressionStatement	"code = get_cie_param_array ( imemory , tempref , 8 , ptr )"	3131:8:100313:100365	11003684	0	True				
ANR	11003757	AssignmentExpression	"code = get_cie_param_array ( imemory , tempref , 8 , ptr )"		11003684	0		=			
ANR	11003758	Identifier	code		11003684	0					
ANR	11003759	CallExpression	"get_cie_param_array ( imemory , tempref , 8 , ptr )"		11003684	1					
ANR	11003760	Callee	get_cie_param_array		11003684	0					
ANR	11003761	Identifier	get_cie_param_array		11003684	0					
ANR	11003762	ArgumentList	imemory		11003684	1					
ANR	11003763	Argument	imemory		11003684	0					
ANR	11003764	Identifier	imemory		11003684	0					
ANR	11003765	Argument	tempref		11003684	1					
ANR	11003766	Identifier	tempref		11003684	0					
ANR	11003767	Argument	8		11003684	2					
ANR	11003768	PrimaryExpression	8		11003684	0					
ANR	11003769	Argument	ptr		11003684	3					
ANR	11003770	Identifier	ptr		11003684	0					
ANR	11003771	IfStatement	if ( code < 0 )		11003684	1					
ANR	11003772	Condition	code < 0	3132:12:100379:100386	11003684	0	True				
ANR	11003773	RelationalExpression	code < 0		11003684	0		<			
ANR	11003774	Identifier	code		11003684	0					
ANR	11003775	PrimaryExpression	0		11003684	1					
ANR	11003776	ReturnStatement	return code ;	3133:12:100401:100412	11003684	1	True				
ANR	11003777	Identifier	code		11003684	0					
ANR	11003778	ElseStatement	else		11003684	0					
ANR	11003779	CompoundStatement		15:11:427:427	11003684	0					
ANR	11003780	ExpressionStatement	"memcpy ( ptr , default_0_1 , 8 * sizeof ( float ) )"	3136:5:100480:100521	11003684	0	True				
ANR	11003781	CallExpression	"memcpy ( ptr , default_0_1 , 8 * sizeof ( float ) )"		11003684	0					
ANR	11003782	Callee	memcpy		11003684	0					
ANR	11003783	Identifier	memcpy		11003684	0					
ANR	11003784	ArgumentList	ptr		11003684	1					
ANR	11003785	Argument	ptr		11003684	0					
ANR	11003786	Identifier	ptr		11003684	0					
ANR	11003787	Argument	default_0_1		11003684	1					
ANR	11003788	Identifier	default_0_1		11003684	0					
ANR	11003789	Argument	8 * sizeof ( float )		11003684	2					
ANR	11003790	MultiplicativeExpression	8 * sizeof ( float )		11003684	0		*			
ANR	11003791	PrimaryExpression	8		11003684	0					
ANR	11003792	SizeofExpression	sizeof ( float )		11003684	1					
ANR	11003793	Sizeof	sizeof		11003684	0					
ANR	11003794	SizeofOperand	float		11003684	1					
ANR	11003795	ReturnStatement	return 0 ;	3138:4:100533:100541	11003684	6	True				
ANR	11003796	PrimaryExpression	0		11003684	0					
ANR	11003797	ReturnType	static int		11003684	1					
ANR	11003798	Identifier	ciedefgdomain		11003684	2					
ANR	11003799	ParameterList	"i_ctx_t * i_ctx_p , ref * space , float * ptr"		11003684	3					
ANR	11003800	Parameter	i_ctx_t * i_ctx_p	3119:25:99954:99970	11003684	0	True				
ANR	11003801	ParameterType	i_ctx_t *		11003684	0					
ANR	11003802	Identifier	i_ctx_p		11003684	1					
ANR	11003803	Parameter	ref * space	3119:44:99973:99982	11003684	1	True				
ANR	11003804	ParameterType	ref *		11003684	0					
ANR	11003805	Identifier	space		11003684	1					
ANR	11003806	Parameter	float * ptr	3119:56:99985:99994	11003684	2	True				
ANR	11003807	ParameterType	float *		11003684	0					
ANR	11003808	Identifier	ptr		11003684	1					
ANR	11003809	CFGEntryNode	ENTRY		11003684		True				
ANR	11003810	CFGExitNode	EXIT		11003684		True				
ANR	11003811	Symbol	code		11003684						
ANR	11003812	Symbol	dict_find_string		11003684						
ANR	11003813	Symbol	array_get		11003684						
ANR	11003814	Symbol	& CIEdict		11003684						
ANR	11003815	Symbol	& tempref		11003684						
ANR	11003816	Symbol	space		11003684						
ANR	11003817	Symbol	ptr		11003684						
ANR	11003818	Symbol	r_has_type		11003684						
ANR	11003819	Symbol	t_null		11003684						
ANR	11003820	Symbol	i_ctx_p		11003684						
ANR	11003821	Symbol	CIEdict		11003684						
ANR	11003822	Symbol	imemory		11003684						
ANR	11003823	Symbol	get_cie_param_array		11003684						
ANR	11003824	Symbol	default_0_1		11003684						
ANR	11003825	Symbol	tempref		11003684						
ANR	11003826	Function	ciedefgrange	3140:0:100545:101158							
ANR	11003827	FunctionDef	"ciedefgrange (i_ctx_t * i_ctx_p , ref * space , float * ptr)"		11003826	0					
ANR	11003828	CompoundStatement		3141:0:100612:101158	11003826	0					
ANR	11003829	IdentifierDeclStatement	int code ;	3142:4:100618:100626	11003826	0	True				
ANR	11003830	IdentifierDecl	code		11003826	0					
ANR	11003831	IdentifierDeclType	int		11003826	0					
ANR	11003832	Identifier	code		11003826	1					
ANR	11003833	IdentifierDeclStatement	"ref CIEdict , * tempref ;"	3143:4:100632:100653	11003826	1	True				
ANR	11003834	IdentifierDecl	CIEdict		11003826	0					
ANR	11003835	IdentifierDeclType	ref		11003826	0					
ANR	11003836	Identifier	CIEdict		11003826	1					
ANR	11003837	IdentifierDecl	* tempref		11003826	1					
ANR	11003838	IdentifierDeclType	ref *		11003826	0					
ANR	11003839	Identifier	tempref		11003826	1					
ANR	11003840	ExpressionStatement	"code = array_get ( imemory , space , 1 , & CIEdict )"	3145:4:100660:100705	11003826	2	True				
ANR	11003841	AssignmentExpression	"code = array_get ( imemory , space , 1 , & CIEdict )"		11003826	0		=			
ANR	11003842	Identifier	code		11003826	0					
ANR	11003843	CallExpression	"array_get ( imemory , space , 1 , & CIEdict )"		11003826	1					
ANR	11003844	Callee	array_get		11003826	0					
ANR	11003845	Identifier	array_get		11003826	0					
ANR	11003846	ArgumentList	imemory		11003826	1					
ANR	11003847	Argument	imemory		11003826	0					
ANR	11003848	Identifier	imemory		11003826	0					
ANR	11003849	Argument	space		11003826	1					
ANR	11003850	Identifier	space		11003826	0					
ANR	11003851	Argument	1		11003826	2					
ANR	11003852	PrimaryExpression	1		11003826	0					
ANR	11003853	Argument	& CIEdict		11003826	3					
ANR	11003854	UnaryOperationExpression	& CIEdict		11003826	0					
ANR	11003855	UnaryOperator	&		11003826	0					
ANR	11003856	Identifier	CIEdict		11003826	1					
ANR	11003857	IfStatement	if ( code < 0 )		11003826	3					
ANR	11003858	Condition	code < 0	3146:8:100715:100722	11003826	0	True				
ANR	11003859	RelationalExpression	code < 0		11003826	0		<			
ANR	11003860	Identifier	code		11003826	0					
ANR	11003861	PrimaryExpression	0		11003826	1					
ANR	11003862	ReturnStatement	return code ;	3147:8:100733:100744	11003826	1	True				
ANR	11003863	Identifier	code		11003826	0					
ANR	11003864	ExpressionStatement	"code = dict_find_string ( & CIEdict , ""RangeDEFG"" , & tempref )"	3150:4:100810:100866	11003826	4	True				
ANR	11003865	AssignmentExpression	"code = dict_find_string ( & CIEdict , ""RangeDEFG"" , & tempref )"		11003826	0		=			
ANR	11003866	Identifier	code		11003826	0					
ANR	11003867	CallExpression	"dict_find_string ( & CIEdict , ""RangeDEFG"" , & tempref )"		11003826	1					
ANR	11003868	Callee	dict_find_string		11003826	0					
ANR	11003869	Identifier	dict_find_string		11003826	0					
ANR	11003870	ArgumentList	& CIEdict		11003826	1					
ANR	11003871	Argument	& CIEdict		11003826	0					
ANR	11003872	UnaryOperationExpression	& CIEdict		11003826	0					
ANR	11003873	UnaryOperator	&		11003826	0					
ANR	11003874	Identifier	CIEdict		11003826	1					
ANR	11003875	Argument	"""RangeDEFG"""		11003826	1					
ANR	11003876	PrimaryExpression	"""RangeDEFG"""		11003826	0					
ANR	11003877	Argument	& tempref		11003826	2					
ANR	11003878	UnaryOperationExpression	& tempref		11003826	0					
ANR	11003879	UnaryOperator	&		11003826	0					
ANR	11003880	Identifier	tempref		11003826	1					
ANR	11003881	IfStatement	"if ( code > 0 && ! r_has_type ( tempref , t_null ) )"		11003826	5					
ANR	11003882	Condition	"code > 0 && ! r_has_type ( tempref , t_null )"	3151:8:100876:100915	11003826	0	True				
ANR	11003883	AndExpression	"code > 0 && ! r_has_type ( tempref , t_null )"		11003826	0		&&			
ANR	11003884	RelationalExpression	code > 0		11003826	0		>			
ANR	11003885	Identifier	code		11003826	0					
ANR	11003886	PrimaryExpression	0		11003826	1					
ANR	11003887	UnaryOperationExpression	"! r_has_type ( tempref , t_null )"		11003826	1					
ANR	11003888	UnaryOperator	!		11003826	0					
ANR	11003889	CallExpression	"r_has_type ( tempref , t_null )"		11003826	1					
ANR	11003890	Callee	r_has_type		11003826	0					
ANR	11003891	Identifier	r_has_type		11003826	0					
ANR	11003892	ArgumentList	tempref		11003826	1					
ANR	11003893	Argument	tempref		11003826	0					
ANR	11003894	Identifier	tempref		11003826	0					
ANR	11003895	Argument	t_null		11003826	1					
ANR	11003896	Identifier	t_null		11003826	0					
ANR	11003897	CompoundStatement		11:50:305:305	11003826	1					
ANR	11003898	ExpressionStatement	"code = get_cie_param_array ( imemory , tempref , 8 , ptr )"	3152:8:100928:100980	11003826	0	True				
ANR	11003899	AssignmentExpression	"code = get_cie_param_array ( imemory , tempref , 8 , ptr )"		11003826	0		=			
ANR	11003900	Identifier	code		11003826	0					
ANR	11003901	CallExpression	"get_cie_param_array ( imemory , tempref , 8 , ptr )"		11003826	1					
ANR	11003902	Callee	get_cie_param_array		11003826	0					
ANR	11003903	Identifier	get_cie_param_array		11003826	0					
ANR	11003904	ArgumentList	imemory		11003826	1					
ANR	11003905	Argument	imemory		11003826	0					
ANR	11003906	Identifier	imemory		11003826	0					
ANR	11003907	Argument	tempref		11003826	1					
ANR	11003908	Identifier	tempref		11003826	0					
ANR	11003909	Argument	8		11003826	2					
ANR	11003910	PrimaryExpression	8		11003826	0					
ANR	11003911	Argument	ptr		11003826	3					
ANR	11003912	Identifier	ptr		11003826	0					
ANR	11003913	IfStatement	if ( code < 0 )		11003826	1					
ANR	11003914	Condition	code < 0	3153:12:100994:101001	11003826	0	True				
ANR	11003915	RelationalExpression	code < 0		11003826	0		<			
ANR	11003916	Identifier	code		11003826	0					
ANR	11003917	PrimaryExpression	0		11003826	1					
ANR	11003918	ReturnStatement	return code ;	3154:12:101016:101027	11003826	1	True				
ANR	11003919	Identifier	code		11003826	0					
ANR	11003920	ElseStatement	else		11003826	0					
ANR	11003921	CompoundStatement		15:11:427:427	11003826	0					
ANR	11003922	ExpressionStatement	"memcpy ( ptr , default_0_1 , 8 * sizeof ( float ) )"	3157:5:101095:101136	11003826	0	True				
ANR	11003923	CallExpression	"memcpy ( ptr , default_0_1 , 8 * sizeof ( float ) )"		11003826	0					
ANR	11003924	Callee	memcpy		11003826	0					
ANR	11003925	Identifier	memcpy		11003826	0					
ANR	11003926	ArgumentList	ptr		11003826	1					
ANR	11003927	Argument	ptr		11003826	0					
ANR	11003928	Identifier	ptr		11003826	0					
ANR	11003929	Argument	default_0_1		11003826	1					
ANR	11003930	Identifier	default_0_1		11003826	0					
ANR	11003931	Argument	8 * sizeof ( float )		11003826	2					
ANR	11003932	MultiplicativeExpression	8 * sizeof ( float )		11003826	0		*			
ANR	11003933	PrimaryExpression	8		11003826	0					
ANR	11003934	SizeofExpression	sizeof ( float )		11003826	1					
ANR	11003935	Sizeof	sizeof		11003826	0					
ANR	11003936	SizeofOperand	float		11003826	1					
ANR	11003937	ReturnStatement	return 0 ;	3159:4:101148:101156	11003826	6	True				
ANR	11003938	PrimaryExpression	0		11003826	0					
ANR	11003939	ReturnType	static int		11003826	1					
ANR	11003940	Identifier	ciedefgrange		11003826	2					
ANR	11003941	ParameterList	"i_ctx_t * i_ctx_p , ref * space , float * ptr"		11003826	3					
ANR	11003942	Parameter	i_ctx_t * i_ctx_p	3140:24:100569:100585	11003826	0	True				
ANR	11003943	ParameterType	i_ctx_t *		11003826	0					
ANR	11003944	Identifier	i_ctx_p		11003826	1					
ANR	11003945	Parameter	ref * space	3140:43:100588:100597	11003826	1	True				
ANR	11003946	ParameterType	ref *		11003826	0					
ANR	11003947	Identifier	space		11003826	1					
ANR	11003948	Parameter	float * ptr	3140:55:100600:100609	11003826	2	True				
ANR	11003949	ParameterType	float *		11003826	0					
ANR	11003950	Identifier	ptr		11003826	1					
ANR	11003951	CFGEntryNode	ENTRY		11003826		True				
ANR	11003952	CFGExitNode	EXIT		11003826		True				
ANR	11003953	Symbol	code		11003826						
ANR	11003954	Symbol	dict_find_string		11003826						
ANR	11003955	Symbol	array_get		11003826						
ANR	11003956	Symbol	& CIEdict		11003826						
ANR	11003957	Symbol	& tempref		11003826						
ANR	11003958	Symbol	space		11003826						
ANR	11003959	Symbol	ptr		11003826						
ANR	11003960	Symbol	r_has_type		11003826						
ANR	11003961	Symbol	t_null		11003826						
ANR	11003962	Symbol	i_ctx_p		11003826						
ANR	11003963	Symbol	CIEdict		11003826						
ANR	11003964	Symbol	imemory		11003826						
ANR	11003965	Symbol	get_cie_param_array		11003826						
ANR	11003966	Symbol	default_0_1		11003826						
ANR	11003967	Symbol	tempref		11003826						
ANR	11003968	Function	ciedefgvalidate	3161:0:101160:101539							
ANR	11003969	FunctionDef	"ciedefgvalidate (i_ctx_t * i_ctx_p , ref * space , float * values , int num_comps)"		11003968	0					
ANR	11003970	CompoundStatement		3162:0:101247:101539	11003968	0					
ANR	11003971	IdentifierDeclStatement	os_ptr op = osp ;	3163:4:101253:101268	11003968	0	True				
ANR	11003972	IdentifierDecl	op = osp		11003968	0					
ANR	11003973	IdentifierDeclType	os_ptr		11003968	0					
ANR	11003974	Identifier	op		11003968	1					
ANR	11003975	AssignmentExpression	op = osp		11003968	2		=			
ANR	11003976	Identifier	osp		11003968	0					
ANR	11003977	Identifier	osp		11003968	1					
ANR	11003978	IdentifierDeclStatement	int i ;	3164:4:101274:101279	11003968	1	True				
ANR	11003979	IdentifierDecl	i		11003968	0					
ANR	11003980	IdentifierDeclType	int		11003968	0					
ANR	11003981	Identifier	i		11003968	1					
ANR	11003982	IfStatement	if ( num_comps < 4 )		11003968	2					
ANR	11003983	Condition	num_comps < 4	3166:8:101290:101302	11003968	0	True				
ANR	11003984	RelationalExpression	num_comps < 4		11003968	0		<			
ANR	11003985	Identifier	num_comps		11003968	0					
ANR	11003986	PrimaryExpression	4		11003968	1					
ANR	11003987	ExpressionStatement	return_error ( gs_error_stackunderflow )	3167:8:101313:101350	11003968	1	True				
ANR	11003988	CallExpression	return_error ( gs_error_stackunderflow )		11003968	0					
ANR	11003989	Callee	return_error		11003968	0					
ANR	11003990	Identifier	return_error		11003968	0					
ANR	11003991	ArgumentList	gs_error_stackunderflow		11003968	1					
ANR	11003992	Argument	gs_error_stackunderflow		11003968	0					
ANR	11003993	Identifier	gs_error_stackunderflow		11003968	0					
ANR	11003994	ExpressionStatement	op -= 3	3169:4:101357:101364	11003968	3	True				
ANR	11003995	AssignmentExpression	op -= 3		11003968	0		-=			
ANR	11003996	Identifier	op		11003968	0					
ANR	11003997	PrimaryExpression	3		11003968	1					
ANR	11003998	ForStatement	for ( i = 0 ; i < 4 ; i ++ )		11003968	4					
ANR	11003999	ForInit	i = 0 ;	3170:9:101375:101378	11003968	0	True				
ANR	11004000	AssignmentExpression	i = 0		11003968	0		=			
ANR	11004001	Identifier	i		11003968	0					
ANR	11004002	PrimaryExpression	0		11003968	1					
ANR	11004003	Condition	i < 4	3170:13:101379:101383	11003968	1	True				
ANR	11004004	RelationalExpression	i < 4		11003968	0		<			
ANR	11004005	Identifier	i		11003968	0					
ANR	11004006	PrimaryExpression	4		11003968	1					
ANR	11004007	PostIncDecOperationExpression	i ++	3170:19:101385:101387	11003968	2	True				
ANR	11004008	Identifier	i		11003968	0					
ANR	11004009	IncDec	++		11003968	1					
ANR	11004010	CompoundStatement		9:24:142:142	11003968	3					
ANR	11004011	IfStatement	"if ( ! r_has_type ( op , t_integer ) && ! r_has_type ( op , t_real ) )"		11003968	0					
ANR	11004012	Condition	"! r_has_type ( op , t_integer ) && ! r_has_type ( op , t_real )"	3171:12:101404:101456	11003968	0	True				
ANR	11004013	AndExpression	"! r_has_type ( op , t_integer ) && ! r_has_type ( op , t_real )"		11003968	0		&&			
ANR	11004014	UnaryOperationExpression	"! r_has_type ( op , t_integer )"		11003968	0					
ANR	11004015	UnaryOperator	!		11003968	0					
ANR	11004016	CallExpression	"r_has_type ( op , t_integer )"		11003968	1					
ANR	11004017	Callee	r_has_type		11003968	0					
ANR	11004018	Identifier	r_has_type		11003968	0					
ANR	11004019	ArgumentList	op		11003968	1					
ANR	11004020	Argument	op		11003968	0					
ANR	11004021	Identifier	op		11003968	0					
ANR	11004022	Argument	t_integer		11003968	1					
ANR	11004023	Identifier	t_integer		11003968	0					
ANR	11004024	UnaryOperationExpression	"! r_has_type ( op , t_real )"		11003968	1					
ANR	11004025	UnaryOperator	!		11003968	0					
ANR	11004026	CallExpression	"r_has_type ( op , t_real )"		11003968	1					
ANR	11004027	Callee	r_has_type		11003968	0					
ANR	11004028	Identifier	r_has_type		11003968	0					
ANR	11004029	ArgumentList	op		11003968	1					
ANR	11004030	Argument	op		11003968	0					
ANR	11004031	Identifier	op		11003968	0					
ANR	11004032	Argument	t_real		11003968	1					
ANR	11004033	Identifier	t_real		11003968	0					
ANR	11004034	ExpressionStatement	return_error ( gs_error_typecheck )	3172:12:101471:101503	11003968	1	True				
ANR	11004035	CallExpression	return_error ( gs_error_typecheck )		11003968	0					
ANR	11004036	Callee	return_error		11003968	0					
ANR	11004037	Identifier	return_error		11003968	0					
ANR	11004038	ArgumentList	gs_error_typecheck		11003968	1					
ANR	11004039	Argument	gs_error_typecheck		11003968	0					
ANR	11004040	Identifier	gs_error_typecheck		11003968	0					
ANR	11004041	ExpressionStatement	op ++	3173:8:101513:101517	11003968	1	True				
ANR	11004042	PostIncDecOperationExpression	op ++		11003968	0					
ANR	11004043	Identifier	op		11003968	0					
ANR	11004044	IncDec	++		11003968	1					
ANR	11004045	ReturnStatement	return 0 ;	3175:4:101529:101537	11003968	5	True				
ANR	11004046	PrimaryExpression	0		11003968	0					
ANR	11004047	ReturnType	static int		11003968	1					
ANR	11004048	Identifier	ciedefgvalidate		11003968	2					
ANR	11004049	ParameterList	"i_ctx_t * i_ctx_p , ref * space , float * values , int num_comps"		11003968	3					
ANR	11004050	Parameter	i_ctx_t * i_ctx_p	3161:27:101187:101202	11003968	0	True				
ANR	11004051	ParameterType	i_ctx_t *		11003968	0					
ANR	11004052	Identifier	i_ctx_p		11003968	1					
ANR	11004053	Parameter	ref * space	3161:45:101205:101214	11003968	1	True				
ANR	11004054	ParameterType	ref *		11003968	0					
ANR	11004055	Identifier	space		11003968	1					
ANR	11004056	Parameter	float * values	3161:57:101217:101229	11003968	2	True				
ANR	11004057	ParameterType	float *		11003968	0					
ANR	11004058	Identifier	values		11003968	1					
ANR	11004059	Parameter	int num_comps	3161:72:101232:101244	11003968	3	True				
ANR	11004060	ParameterType	int		11003968	0					
ANR	11004061	Identifier	num_comps		11003968	1					
ANR	11004062	CFGEntryNode	ENTRY		11003968		True				
ANR	11004063	CFGExitNode	EXIT		11003968		True				
ANR	11004064	Symbol	op		11003968						
ANR	11004065	Symbol	r_has_type		11003968						
ANR	11004066	Symbol	gs_error_typecheck		11003968						
ANR	11004067	Symbol	t_integer		11003968						
ANR	11004068	Symbol	gs_error_stackunderflow		11003968						
ANR	11004069	Symbol	i_ctx_p		11003968						
ANR	11004070	Symbol	values		11003968						
ANR	11004071	Symbol	num_comps		11003968						
ANR	11004072	Symbol	i		11003968						
ANR	11004073	Symbol	t_real		11003968						
ANR	11004074	Symbol	osp		11003968						
ANR	11004075	Symbol	space		11003968						
ANR	11004076	Function	ciedefgcompareproc	3177:0:101541:103101							
ANR	11004077	FunctionDef	"ciedefgcompareproc (i_ctx_t * i_ctx_p , ref * space , ref * testspace)"		11004076	0					
ANR	11004078	CompoundStatement		3178:0:101617:103101	11004076	0					
ANR	11004079	IdentifierDeclStatement	int code = 0 ;	3182:4:101728:101740	11004076	0	True				
ANR	11004080	IdentifierDecl	code = 0		11004076	0					
ANR	11004081	IdentifierDeclType	int		11004076	0					
ANR	11004082	Identifier	code		11004076	1					
ANR	11004083	AssignmentExpression	code = 0		11004076	2		=			
ANR	11004084	Identifier	code		11004076	0					
ANR	11004085	PrimaryExpression	0		11004076	1					
ANR	11004086	IdentifierDeclStatement	"ref CIEdict1 , CIEdict2 ;"	3183:4:101746:101768	11004076	1	True				
ANR	11004087	IdentifierDecl	CIEdict1		11004076	0					
ANR	11004088	IdentifierDeclType	ref		11004076	0					
ANR	11004089	Identifier	CIEdict1		11004076	1					
ANR	11004090	IdentifierDecl	CIEdict2		11004076	1					
ANR	11004091	IdentifierDeclType	ref		11004076	0					
ANR	11004092	Identifier	CIEdict2		11004076	1					
ANR	11004093	ExpressionStatement	"code = array_get ( imemory , space , 1 , & CIEdict1 )"	3185:4:101775:101821	11004076	2	True				
ANR	11004094	AssignmentExpression	"code = array_get ( imemory , space , 1 , & CIEdict1 )"		11004076	0		=			
ANR	11004095	Identifier	code		11004076	0					
ANR	11004096	CallExpression	"array_get ( imemory , space , 1 , & CIEdict1 )"		11004076	1					
ANR	11004097	Callee	array_get		11004076	0					
ANR	11004098	Identifier	array_get		11004076	0					
ANR	11004099	ArgumentList	imemory		11004076	1					
ANR	11004100	Argument	imemory		11004076	0					
ANR	11004101	Identifier	imemory		11004076	0					
ANR	11004102	Argument	space		11004076	1					
ANR	11004103	Identifier	space		11004076	0					
ANR	11004104	Argument	1		11004076	2					
ANR	11004105	PrimaryExpression	1		11004076	0					
ANR	11004106	Argument	& CIEdict1		11004076	3					
ANR	11004107	UnaryOperationExpression	& CIEdict1		11004076	0					
ANR	11004108	UnaryOperator	&		11004076	0					
ANR	11004109	Identifier	CIEdict1		11004076	1					
ANR	11004110	IfStatement	if ( code < 0 )		11004076	3					
ANR	11004111	Condition	code < 0	3186:8:101831:101838	11004076	0	True				
ANR	11004112	RelationalExpression	code < 0		11004076	0		<			
ANR	11004113	Identifier	code		11004076	0					
ANR	11004114	PrimaryExpression	0		11004076	1					
ANR	11004115	ReturnStatement	return 0 ;	3187:8:101849:101857	11004076	1	True				
ANR	11004116	PrimaryExpression	0		11004076	0					
ANR	11004117	ExpressionStatement	"code = array_get ( imemory , testspace , 1 , & CIEdict2 )"	3188:4:101863:101913	11004076	4	True				
ANR	11004118	AssignmentExpression	"code = array_get ( imemory , testspace , 1 , & CIEdict2 )"		11004076	0		=			
ANR	11004119	Identifier	code		11004076	0					
ANR	11004120	CallExpression	"array_get ( imemory , testspace , 1 , & CIEdict2 )"		11004076	1					
ANR	11004121	Callee	array_get		11004076	0					
ANR	11004122	Identifier	array_get		11004076	0					
ANR	11004123	ArgumentList	imemory		11004076	1					
ANR	11004124	Argument	imemory		11004076	0					
ANR	11004125	Identifier	imemory		11004076	0					
ANR	11004126	Argument	testspace		11004076	1					
ANR	11004127	Identifier	testspace		11004076	0					
ANR	11004128	Argument	1		11004076	2					
ANR	11004129	PrimaryExpression	1		11004076	0					
ANR	11004130	Argument	& CIEdict2		11004076	3					
ANR	11004131	UnaryOperationExpression	& CIEdict2		11004076	0					
ANR	11004132	UnaryOperator	&		11004076	0					
ANR	11004133	Identifier	CIEdict2		11004076	1					
ANR	11004134	IfStatement	if ( code < 0 )		11004076	5					
ANR	11004135	Condition	code < 0	3189:8:101923:101930	11004076	0	True				
ANR	11004136	RelationalExpression	code < 0		11004076	0		<			
ANR	11004137	Identifier	code		11004076	0					
ANR	11004138	PrimaryExpression	0		11004076	1					
ANR	11004139	ReturnStatement	return 0 ;	3190:8:101941:101949	11004076	1	True				
ANR	11004140	PrimaryExpression	0		11004076	0					
ANR	11004141	IfStatement	"if ( ! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""WhitePoint"" ) )"		11004076	6					
ANR	11004142	Condition	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""WhitePoint"" )"	3191:8:101959:102026	11004076	0	True				
ANR	11004143	UnaryOperationExpression	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""WhitePoint"" )"		11004076	0					
ANR	11004144	UnaryOperator	!		11004076	0					
ANR	11004145	CallExpression	"comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""WhitePoint"" )"		11004076	1					
ANR	11004146	Callee	comparedictkey		11004076	0					
ANR	11004147	Identifier	comparedictkey		11004076	0					
ANR	11004148	ArgumentList	i_ctx_p		11004076	1					
ANR	11004149	Argument	i_ctx_p		11004076	0					
ANR	11004150	Identifier	i_ctx_p		11004076	0					
ANR	11004151	Argument	& CIEdict1		11004076	1					
ANR	11004152	UnaryOperationExpression	& CIEdict1		11004076	0					
ANR	11004153	UnaryOperator	&		11004076	0					
ANR	11004154	Identifier	CIEdict1		11004076	1					
ANR	11004155	Argument	& CIEdict2		11004076	2					
ANR	11004156	UnaryOperationExpression	& CIEdict2		11004076	0					
ANR	11004157	UnaryOperator	&		11004076	0					
ANR	11004158	Identifier	CIEdict2		11004076	1					
ANR	11004159	Argument	"( char * ) ""WhitePoint"""		11004076	3					
ANR	11004160	CastExpression	"( char * ) ""WhitePoint"""		11004076	0					
ANR	11004161	CastTarget	char *		11004076	0					
ANR	11004162	PrimaryExpression	"""WhitePoint"""		11004076	1					
ANR	11004163	ReturnStatement	return 0 ;	3192:8:102037:102045	11004076	1	True				
ANR	11004164	PrimaryExpression	0		11004076	0					
ANR	11004165	IfStatement	"if ( ! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""BlackPoint"" ) )"		11004076	7					
ANR	11004166	Condition	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""BlackPoint"" )"	3193:8:102055:102122	11004076	0	True				
ANR	11004167	UnaryOperationExpression	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""BlackPoint"" )"		11004076	0					
ANR	11004168	UnaryOperator	!		11004076	0					
ANR	11004169	CallExpression	"comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""BlackPoint"" )"		11004076	1					
ANR	11004170	Callee	comparedictkey		11004076	0					
ANR	11004171	Identifier	comparedictkey		11004076	0					
ANR	11004172	ArgumentList	i_ctx_p		11004076	1					
ANR	11004173	Argument	i_ctx_p		11004076	0					
ANR	11004174	Identifier	i_ctx_p		11004076	0					
ANR	11004175	Argument	& CIEdict1		11004076	1					
ANR	11004176	UnaryOperationExpression	& CIEdict1		11004076	0					
ANR	11004177	UnaryOperator	&		11004076	0					
ANR	11004178	Identifier	CIEdict1		11004076	1					
ANR	11004179	Argument	& CIEdict2		11004076	2					
ANR	11004180	UnaryOperationExpression	& CIEdict2		11004076	0					
ANR	11004181	UnaryOperator	&		11004076	0					
ANR	11004182	Identifier	CIEdict2		11004076	1					
ANR	11004183	Argument	"( char * ) ""BlackPoint"""		11004076	3					
ANR	11004184	CastExpression	"( char * ) ""BlackPoint"""		11004076	0					
ANR	11004185	CastTarget	char *		11004076	0					
ANR	11004186	PrimaryExpression	"""BlackPoint"""		11004076	1					
ANR	11004187	ReturnStatement	return 0 ;	3194:8:102133:102141	11004076	1	True				
ANR	11004188	PrimaryExpression	0		11004076	0					
ANR	11004189	IfStatement	"if ( ! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""RangeABC"" ) )"		11004076	8					
ANR	11004190	Condition	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""RangeABC"" )"	3195:8:102151:102216	11004076	0	True				
ANR	11004191	UnaryOperationExpression	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""RangeABC"" )"		11004076	0					
ANR	11004192	UnaryOperator	!		11004076	0					
ANR	11004193	CallExpression	"comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""RangeABC"" )"		11004076	1					
ANR	11004194	Callee	comparedictkey		11004076	0					
ANR	11004195	Identifier	comparedictkey		11004076	0					
ANR	11004196	ArgumentList	i_ctx_p		11004076	1					
ANR	11004197	Argument	i_ctx_p		11004076	0					
ANR	11004198	Identifier	i_ctx_p		11004076	0					
ANR	11004199	Argument	& CIEdict1		11004076	1					
ANR	11004200	UnaryOperationExpression	& CIEdict1		11004076	0					
ANR	11004201	UnaryOperator	&		11004076	0					
ANR	11004202	Identifier	CIEdict1		11004076	1					
ANR	11004203	Argument	& CIEdict2		11004076	2					
ANR	11004204	UnaryOperationExpression	& CIEdict2		11004076	0					
ANR	11004205	UnaryOperator	&		11004076	0					
ANR	11004206	Identifier	CIEdict2		11004076	1					
ANR	11004207	Argument	"( char * ) ""RangeABC"""		11004076	3					
ANR	11004208	CastExpression	"( char * ) ""RangeABC"""		11004076	0					
ANR	11004209	CastTarget	char *		11004076	0					
ANR	11004210	PrimaryExpression	"""RangeABC"""		11004076	1					
ANR	11004211	ReturnStatement	return 0 ;	3196:8:102227:102235	11004076	1	True				
ANR	11004212	PrimaryExpression	0		11004076	0					
ANR	11004213	IfStatement	"if ( ! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""DecodeABC"" ) )"		11004076	9					
ANR	11004214	Condition	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""DecodeABC"" )"	3197:8:102245:102311	11004076	0	True				
ANR	11004215	UnaryOperationExpression	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""DecodeABC"" )"		11004076	0					
ANR	11004216	UnaryOperator	!		11004076	0					
ANR	11004217	CallExpression	"comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""DecodeABC"" )"		11004076	1					
ANR	11004218	Callee	comparedictkey		11004076	0					
ANR	11004219	Identifier	comparedictkey		11004076	0					
ANR	11004220	ArgumentList	i_ctx_p		11004076	1					
ANR	11004221	Argument	i_ctx_p		11004076	0					
ANR	11004222	Identifier	i_ctx_p		11004076	0					
ANR	11004223	Argument	& CIEdict1		11004076	1					
ANR	11004224	UnaryOperationExpression	& CIEdict1		11004076	0					
ANR	11004225	UnaryOperator	&		11004076	0					
ANR	11004226	Identifier	CIEdict1		11004076	1					
ANR	11004227	Argument	& CIEdict2		11004076	2					
ANR	11004228	UnaryOperationExpression	& CIEdict2		11004076	0					
ANR	11004229	UnaryOperator	&		11004076	0					
ANR	11004230	Identifier	CIEdict2		11004076	1					
ANR	11004231	Argument	"( char * ) ""DecodeABC"""		11004076	3					
ANR	11004232	CastExpression	"( char * ) ""DecodeABC"""		11004076	0					
ANR	11004233	CastTarget	char *		11004076	0					
ANR	11004234	PrimaryExpression	"""DecodeABC"""		11004076	1					
ANR	11004235	ReturnStatement	return 0 ;	3198:8:102322:102330	11004076	1	True				
ANR	11004236	PrimaryExpression	0		11004076	0					
ANR	11004237	IfStatement	"if ( ! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""MatrixABC"" ) )"		11004076	10					
ANR	11004238	Condition	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""MatrixABC"" )"	3199:8:102340:102406	11004076	0	True				
ANR	11004239	UnaryOperationExpression	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""MatrixABC"" )"		11004076	0					
ANR	11004240	UnaryOperator	!		11004076	0					
ANR	11004241	CallExpression	"comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""MatrixABC"" )"		11004076	1					
ANR	11004242	Callee	comparedictkey		11004076	0					
ANR	11004243	Identifier	comparedictkey		11004076	0					
ANR	11004244	ArgumentList	i_ctx_p		11004076	1					
ANR	11004245	Argument	i_ctx_p		11004076	0					
ANR	11004246	Identifier	i_ctx_p		11004076	0					
ANR	11004247	Argument	& CIEdict1		11004076	1					
ANR	11004248	UnaryOperationExpression	& CIEdict1		11004076	0					
ANR	11004249	UnaryOperator	&		11004076	0					
ANR	11004250	Identifier	CIEdict1		11004076	1					
ANR	11004251	Argument	& CIEdict2		11004076	2					
ANR	11004252	UnaryOperationExpression	& CIEdict2		11004076	0					
ANR	11004253	UnaryOperator	&		11004076	0					
ANR	11004254	Identifier	CIEdict2		11004076	1					
ANR	11004255	Argument	"( char * ) ""MatrixABC"""		11004076	3					
ANR	11004256	CastExpression	"( char * ) ""MatrixABC"""		11004076	0					
ANR	11004257	CastTarget	char *		11004076	0					
ANR	11004258	PrimaryExpression	"""MatrixABC"""		11004076	1					
ANR	11004259	ReturnStatement	return 0 ;	3200:8:102417:102425	11004076	1	True				
ANR	11004260	PrimaryExpression	0		11004076	0					
ANR	11004261	IfStatement	"if ( ! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""RangeLMN"" ) )"		11004076	11					
ANR	11004262	Condition	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""RangeLMN"" )"	3201:8:102435:102500	11004076	0	True				
ANR	11004263	UnaryOperationExpression	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""RangeLMN"" )"		11004076	0					
ANR	11004264	UnaryOperator	!		11004076	0					
ANR	11004265	CallExpression	"comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""RangeLMN"" )"		11004076	1					
ANR	11004266	Callee	comparedictkey		11004076	0					
ANR	11004267	Identifier	comparedictkey		11004076	0					
ANR	11004268	ArgumentList	i_ctx_p		11004076	1					
ANR	11004269	Argument	i_ctx_p		11004076	0					
ANR	11004270	Identifier	i_ctx_p		11004076	0					
ANR	11004271	Argument	& CIEdict1		11004076	1					
ANR	11004272	UnaryOperationExpression	& CIEdict1		11004076	0					
ANR	11004273	UnaryOperator	&		11004076	0					
ANR	11004274	Identifier	CIEdict1		11004076	1					
ANR	11004275	Argument	& CIEdict2		11004076	2					
ANR	11004276	UnaryOperationExpression	& CIEdict2		11004076	0					
ANR	11004277	UnaryOperator	&		11004076	0					
ANR	11004278	Identifier	CIEdict2		11004076	1					
ANR	11004279	Argument	"( char * ) ""RangeLMN"""		11004076	3					
ANR	11004280	CastExpression	"( char * ) ""RangeLMN"""		11004076	0					
ANR	11004281	CastTarget	char *		11004076	0					
ANR	11004282	PrimaryExpression	"""RangeLMN"""		11004076	1					
ANR	11004283	ReturnStatement	return 0 ;	3202:8:102511:102519	11004076	1	True				
ANR	11004284	PrimaryExpression	0		11004076	0					
ANR	11004285	IfStatement	"if ( ! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""DecodeLMN"" ) )"		11004076	12					
ANR	11004286	Condition	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""DecodeLMN"" )"	3203:8:102529:102595	11004076	0	True				
ANR	11004287	UnaryOperationExpression	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""DecodeLMN"" )"		11004076	0					
ANR	11004288	UnaryOperator	!		11004076	0					
ANR	11004289	CallExpression	"comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""DecodeLMN"" )"		11004076	1					
ANR	11004290	Callee	comparedictkey		11004076	0					
ANR	11004291	Identifier	comparedictkey		11004076	0					
ANR	11004292	ArgumentList	i_ctx_p		11004076	1					
ANR	11004293	Argument	i_ctx_p		11004076	0					
ANR	11004294	Identifier	i_ctx_p		11004076	0					
ANR	11004295	Argument	& CIEdict1		11004076	1					
ANR	11004296	UnaryOperationExpression	& CIEdict1		11004076	0					
ANR	11004297	UnaryOperator	&		11004076	0					
ANR	11004298	Identifier	CIEdict1		11004076	1					
ANR	11004299	Argument	& CIEdict2		11004076	2					
ANR	11004300	UnaryOperationExpression	& CIEdict2		11004076	0					
ANR	11004301	UnaryOperator	&		11004076	0					
ANR	11004302	Identifier	CIEdict2		11004076	1					
ANR	11004303	Argument	"( char * ) ""DecodeLMN"""		11004076	3					
ANR	11004304	CastExpression	"( char * ) ""DecodeLMN"""		11004076	0					
ANR	11004305	CastTarget	char *		11004076	0					
ANR	11004306	PrimaryExpression	"""DecodeLMN"""		11004076	1					
ANR	11004307	ReturnStatement	return 0 ;	3204:8:102606:102614	11004076	1	True				
ANR	11004308	PrimaryExpression	0		11004076	0					
ANR	11004309	IfStatement	"if ( ! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""MatrixMN"" ) )"		11004076	13					
ANR	11004310	Condition	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""MatrixMN"" )"	3205:8:102624:102689	11004076	0	True				
ANR	11004311	UnaryOperationExpression	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""MatrixMN"" )"		11004076	0					
ANR	11004312	UnaryOperator	!		11004076	0					
ANR	11004313	CallExpression	"comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""MatrixMN"" )"		11004076	1					
ANR	11004314	Callee	comparedictkey		11004076	0					
ANR	11004315	Identifier	comparedictkey		11004076	0					
ANR	11004316	ArgumentList	i_ctx_p		11004076	1					
ANR	11004317	Argument	i_ctx_p		11004076	0					
ANR	11004318	Identifier	i_ctx_p		11004076	0					
ANR	11004319	Argument	& CIEdict1		11004076	1					
ANR	11004320	UnaryOperationExpression	& CIEdict1		11004076	0					
ANR	11004321	UnaryOperator	&		11004076	0					
ANR	11004322	Identifier	CIEdict1		11004076	1					
ANR	11004323	Argument	& CIEdict2		11004076	2					
ANR	11004324	UnaryOperationExpression	& CIEdict2		11004076	0					
ANR	11004325	UnaryOperator	&		11004076	0					
ANR	11004326	Identifier	CIEdict2		11004076	1					
ANR	11004327	Argument	"( char * ) ""MatrixMN"""		11004076	3					
ANR	11004328	CastExpression	"( char * ) ""MatrixMN"""		11004076	0					
ANR	11004329	CastTarget	char *		11004076	0					
ANR	11004330	PrimaryExpression	"""MatrixMN"""		11004076	1					
ANR	11004331	ReturnStatement	return 0 ;	3206:8:102700:102708	11004076	1	True				
ANR	11004332	PrimaryExpression	0		11004076	0					
ANR	11004333	IfStatement	"if ( ! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""RangeDEFG"" ) )"		11004076	14					
ANR	11004334	Condition	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""RangeDEFG"" )"	3207:8:102718:102784	11004076	0	True				
ANR	11004335	UnaryOperationExpression	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""RangeDEFG"" )"		11004076	0					
ANR	11004336	UnaryOperator	!		11004076	0					
ANR	11004337	CallExpression	"comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""RangeDEFG"" )"		11004076	1					
ANR	11004338	Callee	comparedictkey		11004076	0					
ANR	11004339	Identifier	comparedictkey		11004076	0					
ANR	11004340	ArgumentList	i_ctx_p		11004076	1					
ANR	11004341	Argument	i_ctx_p		11004076	0					
ANR	11004342	Identifier	i_ctx_p		11004076	0					
ANR	11004343	Argument	& CIEdict1		11004076	1					
ANR	11004344	UnaryOperationExpression	& CIEdict1		11004076	0					
ANR	11004345	UnaryOperator	&		11004076	0					
ANR	11004346	Identifier	CIEdict1		11004076	1					
ANR	11004347	Argument	& CIEdict2		11004076	2					
ANR	11004348	UnaryOperationExpression	& CIEdict2		11004076	0					
ANR	11004349	UnaryOperator	&		11004076	0					
ANR	11004350	Identifier	CIEdict2		11004076	1					
ANR	11004351	Argument	"( char * ) ""RangeDEFG"""		11004076	3					
ANR	11004352	CastExpression	"( char * ) ""RangeDEFG"""		11004076	0					
ANR	11004353	CastTarget	char *		11004076	0					
ANR	11004354	PrimaryExpression	"""RangeDEFG"""		11004076	1					
ANR	11004355	ReturnStatement	return 0 ;	3208:8:102795:102803	11004076	1	True				
ANR	11004356	PrimaryExpression	0		11004076	0					
ANR	11004357	IfStatement	"if ( ! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""DecodeDEFG"" ) )"		11004076	15					
ANR	11004358	Condition	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""DecodeDEFG"" )"	3209:8:102813:102880	11004076	0	True				
ANR	11004359	UnaryOperationExpression	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""DecodeDEFG"" )"		11004076	0					
ANR	11004360	UnaryOperator	!		11004076	0					
ANR	11004361	CallExpression	"comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""DecodeDEFG"" )"		11004076	1					
ANR	11004362	Callee	comparedictkey		11004076	0					
ANR	11004363	Identifier	comparedictkey		11004076	0					
ANR	11004364	ArgumentList	i_ctx_p		11004076	1					
ANR	11004365	Argument	i_ctx_p		11004076	0					
ANR	11004366	Identifier	i_ctx_p		11004076	0					
ANR	11004367	Argument	& CIEdict1		11004076	1					
ANR	11004368	UnaryOperationExpression	& CIEdict1		11004076	0					
ANR	11004369	UnaryOperator	&		11004076	0					
ANR	11004370	Identifier	CIEdict1		11004076	1					
ANR	11004371	Argument	& CIEdict2		11004076	2					
ANR	11004372	UnaryOperationExpression	& CIEdict2		11004076	0					
ANR	11004373	UnaryOperator	&		11004076	0					
ANR	11004374	Identifier	CIEdict2		11004076	1					
ANR	11004375	Argument	"( char * ) ""DecodeDEFG"""		11004076	3					
ANR	11004376	CastExpression	"( char * ) ""DecodeDEFG"""		11004076	0					
ANR	11004377	CastTarget	char *		11004076	0					
ANR	11004378	PrimaryExpression	"""DecodeDEFG"""		11004076	1					
ANR	11004379	ReturnStatement	return 0 ;	3210:8:102891:102899	11004076	1	True				
ANR	11004380	PrimaryExpression	0		11004076	0					
ANR	11004381	IfStatement	"if ( ! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""RangeHIJK"" ) )"		11004076	16					
ANR	11004382	Condition	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""RangeHIJK"" )"	3211:8:102909:102975	11004076	0	True				
ANR	11004383	UnaryOperationExpression	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""RangeHIJK"" )"		11004076	0					
ANR	11004384	UnaryOperator	!		11004076	0					
ANR	11004385	CallExpression	"comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""RangeHIJK"" )"		11004076	1					
ANR	11004386	Callee	comparedictkey		11004076	0					
ANR	11004387	Identifier	comparedictkey		11004076	0					
ANR	11004388	ArgumentList	i_ctx_p		11004076	1					
ANR	11004389	Argument	i_ctx_p		11004076	0					
ANR	11004390	Identifier	i_ctx_p		11004076	0					
ANR	11004391	Argument	& CIEdict1		11004076	1					
ANR	11004392	UnaryOperationExpression	& CIEdict1		11004076	0					
ANR	11004393	UnaryOperator	&		11004076	0					
ANR	11004394	Identifier	CIEdict1		11004076	1					
ANR	11004395	Argument	& CIEdict2		11004076	2					
ANR	11004396	UnaryOperationExpression	& CIEdict2		11004076	0					
ANR	11004397	UnaryOperator	&		11004076	0					
ANR	11004398	Identifier	CIEdict2		11004076	1					
ANR	11004399	Argument	"( char * ) ""RangeHIJK"""		11004076	3					
ANR	11004400	CastExpression	"( char * ) ""RangeHIJK"""		11004076	0					
ANR	11004401	CastTarget	char *		11004076	0					
ANR	11004402	PrimaryExpression	"""RangeHIJK"""		11004076	1					
ANR	11004403	ReturnStatement	return 0 ;	3212:8:102986:102994	11004076	1	True				
ANR	11004404	PrimaryExpression	0		11004076	0					
ANR	11004405	IfStatement	"if ( ! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""Table"" ) )"		11004076	17					
ANR	11004406	Condition	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""Table"" )"	3213:8:103004:103066	11004076	0	True				
ANR	11004407	UnaryOperationExpression	"! comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""Table"" )"		11004076	0					
ANR	11004408	UnaryOperator	!		11004076	0					
ANR	11004409	CallExpression	"comparedictkey ( i_ctx_p , & CIEdict1 , & CIEdict2 , ( char * ) ""Table"" )"		11004076	1					
ANR	11004410	Callee	comparedictkey		11004076	0					
ANR	11004411	Identifier	comparedictkey		11004076	0					
ANR	11004412	ArgumentList	i_ctx_p		11004076	1					
ANR	11004413	Argument	i_ctx_p		11004076	0					
ANR	11004414	Identifier	i_ctx_p		11004076	0					
ANR	11004415	Argument	& CIEdict1		11004076	1					
ANR	11004416	UnaryOperationExpression	& CIEdict1		11004076	0					
ANR	11004417	UnaryOperator	&		11004076	0					
ANR	11004418	Identifier	CIEdict1		11004076	1					
ANR	11004419	Argument	& CIEdict2		11004076	2					
ANR	11004420	UnaryOperationExpression	& CIEdict2		11004076	0					
ANR	11004421	UnaryOperator	&		11004076	0					
ANR	11004422	Identifier	CIEdict2		11004076	1					
ANR	11004423	Argument	"( char * ) ""Table"""		11004076	3					
ANR	11004424	CastExpression	"( char * ) ""Table"""		11004076	0					
ANR	11004425	CastTarget	char *		11004076	0					
ANR	11004426	PrimaryExpression	"""Table"""		11004076	1					
ANR	11004427	ReturnStatement	return 0 ;	3214:8:103077:103085	11004076	1	True				
ANR	11004428	PrimaryExpression	0		11004076	0					
ANR	11004429	ReturnStatement	return 1 ;	3215:4:103091:103099	11004076	18	True				
ANR	11004430	PrimaryExpression	1		11004076	0					
ANR	11004431	ReturnType	static int		11004076	1					
ANR	11004432	Identifier	ciedefgcompareproc		11004076	2					
ANR	11004433	ParameterList	"i_ctx_t * i_ctx_p , ref * space , ref * testspace"		11004076	3					
ANR	11004434	Parameter	i_ctx_t * i_ctx_p	3177:30:101571:101586	11004076	0	True				
ANR	11004435	ParameterType	i_ctx_t *		11004076	0					
ANR	11004436	Identifier	i_ctx_p		11004076	1					
ANR	11004437	Parameter	ref * space	3177:48:101589:101598	11004076	1	True				
ANR	11004438	ParameterType	ref *		11004076	0					
ANR	11004439	Identifier	space		11004076	1					
ANR	11004440	Parameter	ref * testspace	3177:60:101601:101614	11004076	2	True				
ANR	11004441	ParameterType	ref *		11004076	0					
ANR	11004442	Identifier	testspace		11004076	1					
ANR	11004443	CFGEntryNode	ENTRY		11004076		True				
ANR	11004444	CFGExitNode	EXIT		11004076		True				
ANR	11004445	Symbol	code		11004076						
ANR	11004446	Symbol	testspace		11004076						
ANR	11004447	Symbol	i_ctx_p		11004076						
ANR	11004448	Symbol	array_get		11004076						
ANR	11004449	Symbol	CIEdict1		11004076						
ANR	11004450	Symbol	CIEdict2		11004076						
ANR	11004451	Symbol	imemory		11004076						
ANR	11004452	Symbol	comparedictkey		11004076						
ANR	11004453	Symbol	& CIEdict2		11004076						
ANR	11004454	Symbol	& CIEdict1		11004076						
ANR	11004455	Symbol	space		11004076						
ANR	11004456	Function	ciebasecolor	3228:0:103416:105412							
ANR	11004457	FunctionDef	"ciebasecolor (i_ctx_t * i_ctx_p , ref * space , int base , int * stage , int * cont , int * stack_depth)"		11004456	0					
ANR	11004458	CompoundStatement		3229:0:103522:105412	11004456	0					
ANR	11004459	IdentifierDeclStatement	os_ptr op ;	3230:4:103528:103537	11004456	0	True				
ANR	11004460	IdentifierDecl	op		11004456	0					
ANR	11004461	IdentifierDeclType	os_ptr		11004456	0					
ANR	11004462	Identifier	op		11004456	1					
ANR	11004463	IdentifierDeclStatement	"ref * spacename , nref ;"	3231:4:103543:103563	11004456	1	True				
ANR	11004464	IdentifierDecl	* spacename		11004456	0					
ANR	11004465	IdentifierDeclType	ref *		11004456	0					
ANR	11004466	Identifier	spacename		11004456	1					
ANR	11004467	IdentifierDecl	nref		11004456	1					
ANR	11004468	IdentifierDeclType	ref		11004456	0					
ANR	11004469	Identifier	nref		11004456	1					
ANR	11004470	IdentifierDeclStatement	"int i , components = 1 , code ;"	3232:4:103569:103594	11004456	2	True				
ANR	11004471	IdentifierDecl	i		11004456	0					
ANR	11004472	IdentifierDeclType	int		11004456	0					
ANR	11004473	Identifier	i		11004456	1					
ANR	11004474	IdentifierDecl	components = 1		11004456	1					
ANR	11004475	IdentifierDeclType	int		11004456	0					
ANR	11004476	Identifier	components		11004456	1					
ANR	11004477	AssignmentExpression	components = 1		11004456	2		=			
ANR	11004478	Identifier	components		11004456	0					
ANR	11004479	PrimaryExpression	1		11004456	1					
ANR	11004480	IdentifierDecl	code		11004456	2					
ANR	11004481	IdentifierDeclType	int		11004456	0					
ANR	11004482	Identifier	code		11004456	1					
ANR	11004483	IfStatement	if ( r_is_array ( space ) )		11004456	3					
ANR	11004484	Condition	r_is_array ( space )	3235:8:103679:103695	11004456	0	True				
ANR	11004485	CallExpression	r_is_array ( space )		11004456	0					
ANR	11004486	Callee	r_is_array		11004456	0					
ANR	11004487	Identifier	r_is_array		11004456	0					
ANR	11004488	ArgumentList	space		11004456	1					
ANR	11004489	Argument	space		11004456	0					
ANR	11004490	Identifier	space		11004456	0					
ANR	11004491	ExpressionStatement	spacename = space -> value . refs	3236:8:103706:103735	11004456	1	True				
ANR	11004492	AssignmentExpression	spacename = space -> value . refs		11004456	0		=			
ANR	11004493	Identifier	spacename		11004456	0					
ANR	11004494	MemberAccess	space -> value . refs		11004456	1					
ANR	11004495	PtrMemberAccess	space -> value		11004456	0					
ANR	11004496	Identifier	space		11004456	0					
ANR	11004497	Identifier	value		11004456	1					
ANR	11004498	Identifier	refs		11004456	1					
ANR	11004499	ElseStatement	else		11004456	0					
ANR	11004500	ExpressionStatement	spacename = space	3238:8:103754:103771	11004456	0	True				
ANR	11004501	AssignmentExpression	spacename = space		11004456	0		=			
ANR	11004502	Identifier	spacename		11004456	0					
ANR	11004503	Identifier	space		11004456	1					
ANR	11004504	IfStatement	"if ( ! r_has_type ( spacename , t_name ) )"		11004456	4					
ANR	11004505	Condition	"! r_has_type ( spacename , t_name )"	3240:8:103822:103851	11004456	0	True				
ANR	11004506	UnaryOperationExpression	"! r_has_type ( spacename , t_name )"		11004456	0					
ANR	11004507	UnaryOperator	!		11004456	0					
ANR	11004508	CallExpression	"r_has_type ( spacename , t_name )"		11004456	1					
ANR	11004509	Callee	r_has_type		11004456	0					
ANR	11004510	Identifier	r_has_type		11004456	0					
ANR	11004511	ArgumentList	spacename		11004456	1					
ANR	11004512	Argument	spacename		11004456	0					
ANR	11004513	Identifier	spacename		11004456	0					
ANR	11004514	Argument	t_name		11004456	1					
ANR	11004515	Identifier	t_name		11004456	0					
ANR	11004516	ExpressionStatement	return_error ( gs_error_typecheck )	3241:8:103862:103894	11004456	1	True				
ANR	11004517	CallExpression	return_error ( gs_error_typecheck )		11004456	0					
ANR	11004518	Callee	return_error		11004456	0					
ANR	11004519	Identifier	return_error		11004456	0					
ANR	11004520	ArgumentList	gs_error_typecheck		11004456	1					
ANR	11004521	Argument	gs_error_typecheck		11004456	0					
ANR	11004522	Identifier	gs_error_typecheck		11004456	0					
ANR	11004523	ForStatement	for ( i = 0 ; i < 4 ; i ++ )		11004456	5					
ANR	11004524	ForInit	i = 0 ;	3244:9:103953:103956	11004456	0	True				
ANR	11004525	AssignmentExpression	i = 0		11004456	0		=			
ANR	11004526	Identifier	i		11004456	0					
ANR	11004527	PrimaryExpression	0		11004456	1					
ANR	11004528	Condition	i < 4	3244:13:103957:103959	11004456	1	True				
ANR	11004529	RelationalExpression	i < 4		11004456	0		<			
ANR	11004530	Identifier	i		11004456	0					
ANR	11004531	PrimaryExpression	4		11004456	1					
ANR	11004532	PostIncDecOperationExpression	i ++	3244:17:103961:103963	11004456	2	True				
ANR	11004533	Identifier	i		11004456	0					
ANR	11004534	IncDec	++		11004456	1					
ANR	11004535	CompoundStatement		16:22:443:443	11004456	3					
ANR	11004536	ExpressionStatement	"code = names_ref ( imemory -> gs_lib_ctx -> gs_name_table , ( const byte * ) CIESpaces [ i ] , strlen ( CIESpaces [ i ] ) , & nref , 0 )"	3245:8:103976:104088	11004456	0	True				
ANR	11004537	AssignmentExpression	"code = names_ref ( imemory -> gs_lib_ctx -> gs_name_table , ( const byte * ) CIESpaces [ i ] , strlen ( CIESpaces [ i ] ) , & nref , 0 )"		11004456	0		=			
ANR	11004538	Identifier	code		11004456	0					
ANR	11004539	CallExpression	"names_ref ( imemory -> gs_lib_ctx -> gs_name_table , ( const byte * ) CIESpaces [ i ] , strlen ( CIESpaces [ i ] ) , & nref , 0 )"		11004456	1					
ANR	11004540	Callee	names_ref		11004456	0					
ANR	11004541	Identifier	names_ref		11004456	0					
ANR	11004542	ArgumentList	imemory -> gs_lib_ctx -> gs_name_table		11004456	1					
ANR	11004543	Argument	imemory -> gs_lib_ctx -> gs_name_table		11004456	0					
ANR	11004544	PtrMemberAccess	imemory -> gs_lib_ctx -> gs_name_table		11004456	0					
ANR	11004545	PtrMemberAccess	imemory -> gs_lib_ctx		11004456	0					
ANR	11004546	Identifier	imemory		11004456	0					
ANR	11004547	Identifier	gs_lib_ctx		11004456	1					
ANR	11004548	Identifier	gs_name_table		11004456	1					
ANR	11004549	Argument	( const byte * ) CIESpaces [ i ]		11004456	1					
ANR	11004550	CastExpression	( const byte * ) CIESpaces [ i ]		11004456	0					
ANR	11004551	CastTarget	const byte *		11004456	0					
ANR	11004552	ArrayIndexing	CIESpaces [ i ]		11004456	1					
ANR	11004553	Identifier	CIESpaces		11004456	0					
ANR	11004554	Identifier	i		11004456	1					
ANR	11004555	Argument	strlen ( CIESpaces [ i ] )		11004456	2					
ANR	11004556	CallExpression	strlen ( CIESpaces [ i ] )		11004456	0					
ANR	11004557	Callee	strlen		11004456	0					
ANR	11004558	Identifier	strlen		11004456	0					
ANR	11004559	ArgumentList	CIESpaces [ i ]		11004456	1					
ANR	11004560	Argument	CIESpaces [ i ]		11004456	0					
ANR	11004561	ArrayIndexing	CIESpaces [ i ]		11004456	0					
ANR	11004562	Identifier	CIESpaces		11004456	0					
ANR	11004563	Identifier	i		11004456	1					
ANR	11004564	Argument	& nref		11004456	3					
ANR	11004565	UnaryOperationExpression	& nref		11004456	0					
ANR	11004566	UnaryOperator	&		11004456	0					
ANR	11004567	Identifier	nref		11004456	1					
ANR	11004568	Argument	0		11004456	4					
ANR	11004569	PrimaryExpression	0		11004456	0					
ANR	11004570	IfStatement	if ( code < 0 )		11004456	1					
ANR	11004571	Condition	code < 0	3246:12:104102:104109	11004456	0	True				
ANR	11004572	RelationalExpression	code < 0		11004456	0		<			
ANR	11004573	Identifier	code		11004456	0					
ANR	11004574	PrimaryExpression	0		11004456	1					
ANR	11004575	ReturnStatement	return code ;	3247:12:104124:104135	11004456	1	True				
ANR	11004576	Identifier	code		11004456	0					
ANR	11004577	IfStatement	"if ( name_eq ( spacename , & nref ) )"		11004456	2					
ANR	11004578	Condition	"name_eq ( spacename , & nref )"	3248:12:104149:104173	11004456	0	True				
ANR	11004579	CallExpression	"name_eq ( spacename , & nref )"		11004456	0					
ANR	11004580	Callee	name_eq		11004456	0					
ANR	11004581	Identifier	name_eq		11004456	0					
ANR	11004582	ArgumentList	spacename		11004456	1					
ANR	11004583	Argument	spacename		11004456	0					
ANR	11004584	Identifier	spacename		11004456	0					
ANR	11004585	Argument	& nref		11004456	1					
ANR	11004586	UnaryOperationExpression	& nref		11004456	0					
ANR	11004587	UnaryOperator	&		11004456	0					
ANR	11004588	Identifier	nref		11004456	1					
ANR	11004589	CompoundStatement		20:39:653:653	11004456	1					
ANR	11004590	BreakStatement	break ;	3249:12:104190:104195	11004456	0	True				
ANR	11004591	SwitchStatement	switch ( i )		11004456	6					
ANR	11004592	Condition	i	3255:11:104343:104343	11004456	0	True				
ANR	11004593	Identifier	i		11004456	0					
ANR	11004594	CompoundStatement		27:13:822:822	11004456	1					
ANR	11004595	Label	case 0 :	3256:8:104355:104361	11004456	0	True				
ANR	11004596	ExpressionStatement	components = 1	3257:12:104375:104389	11004456	1	True				
ANR	11004597	AssignmentExpression	components = 1		11004456	0		=			
ANR	11004598	Identifier	components		11004456	0					
ANR	11004599	PrimaryExpression	1		11004456	1					
ANR	11004600	BreakStatement	break ;	3258:12:104403:104408	11004456	2	True				
ANR	11004601	Label	case 1 :	3259:8:104418:104424	11004456	3	True				
ANR	11004602	Label	case 2 :	3260:8:104434:104440	11004456	4	True				
ANR	11004603	ExpressionStatement	components = 3	3261:12:104454:104468	11004456	5	True				
ANR	11004604	AssignmentExpression	components = 3		11004456	0		=			
ANR	11004605	Identifier	components		11004456	0					
ANR	11004606	PrimaryExpression	3		11004456	1					
ANR	11004607	BreakStatement	break ;	3262:12:104482:104487	11004456	6	True				
ANR	11004608	Label	case 3 :	3263:8:104497:104503	11004456	7	True				
ANR	11004609	ExpressionStatement	components = 4	3264:12:104517:104531	11004456	8	True				
ANR	11004610	AssignmentExpression	components = 4		11004456	0		=			
ANR	11004611	Identifier	components		11004456	0					
ANR	11004612	PrimaryExpression	4		11004456	1					
ANR	11004613	BreakStatement	break ;	3265:12:104545:104550	11004456	9	True				
ANR	11004614	ExpressionStatement	pop ( components )	3268:4:104610:104625	11004456	7	True				
ANR	11004615	CallExpression	pop ( components )		11004456	0					
ANR	11004616	Callee	pop		11004456	0					
ANR	11004617	Identifier	pop		11004456	0					
ANR	11004618	ArgumentList	components		11004456	1					
ANR	11004619	Argument	components		11004456	0					
ANR	11004620	Identifier	components		11004456	0					
ANR	11004621	ExpressionStatement	op = osp	3269:4:104631:104639	11004456	8	True				
ANR	11004622	AssignmentExpression	op = osp		11004456	0		=			
ANR	11004623	Identifier	op		11004456	0					
ANR	11004624	Identifier	osp		11004456	1					
ANR	11004625	SwitchStatement	switch ( base )		11004456	9					
ANR	11004626	Condition	base	3273:11:104756:104759	11004456	0	True				
ANR	11004627	Identifier	base		11004456	0					
ANR	11004628	CompoundStatement		45:17:1239:1239	11004456	1					
ANR	11004629	Label	case 0 :	3274:8:104772:104778	11004456	0	True				
ANR	11004630	ExpressionStatement	components = 1	3275:12:104792:104806	11004456	1	True				
ANR	11004631	AssignmentExpression	components = 1		11004456	0		=			
ANR	11004632	Identifier	components		11004456	0					
ANR	11004633	PrimaryExpression	1		11004456	1					
ANR	11004634	BreakStatement	break ;	3276:12:104820:104825	11004456	2	True				
ANR	11004635	Label	case 1 :	3277:8:104835:104841	11004456	3	True				
ANR	11004636	Label	case 2 :	3278:8:104851:104857	11004456	4	True				
ANR	11004637	ExpressionStatement	components = 3	3279:12:104871:104885	11004456	5	True				
ANR	11004638	AssignmentExpression	components = 3		11004456	0		=			
ANR	11004639	Identifier	components		11004456	0					
ANR	11004640	PrimaryExpression	3		11004456	1					
ANR	11004641	BreakStatement	break ;	3280:12:104899:104904	11004456	6	True				
ANR	11004642	Label	case 3 :	3281:8:104914:104920	11004456	7	True				
ANR	11004643	ExpressionStatement	components = 4	3282:12:104934:104948	11004456	8	True				
ANR	11004644	AssignmentExpression	components = 4		11004456	0		=			
ANR	11004645	Identifier	components		11004456	0					
ANR	11004646	PrimaryExpression	4		11004456	1					
ANR	11004647	BreakStatement	break ;	3283:12:104962:104967	11004456	9	True				
ANR	11004648	ExpressionStatement	push ( components )	3285:4:104979:104995	11004456	10	True				
ANR	11004649	CallExpression	push ( components )		11004456	0					
ANR	11004650	Callee	push		11004456	0					
ANR	11004651	Identifier	push		11004456	0					
ANR	11004652	ArgumentList	components		11004456	1					
ANR	11004653	Argument	components		11004456	0					
ANR	11004654	Identifier	components		11004456	0					
ANR	11004655	ExpressionStatement	op -= components - 1	3287:4:105075:105093	11004456	11	True				
ANR	11004656	AssignmentExpression	op -= components - 1		11004456	0		-=			
ANR	11004657	Identifier	op		11004456	0					
ANR	11004658	AdditiveExpression	components - 1		11004456	1		-			
ANR	11004659	Identifier	components		11004456	0					
ANR	11004660	PrimaryExpression	1		11004456	1					
ANR	11004661	ForStatement	for ( i = 0 ; i < components ; i ++ )		11004456	12					
ANR	11004662	ForInit	i = 0 ;	3288:9:105104:105107	11004456	0	True				
ANR	11004663	AssignmentExpression	i = 0		11004456	0		=			
ANR	11004664	Identifier	i		11004456	0					
ANR	11004665	PrimaryExpression	0		11004456	1					
ANR	11004666	Condition	i < components	3288:13:105108:105119	11004456	1	True				
ANR	11004667	RelationalExpression	i < components		11004456	0		<			
ANR	11004668	Identifier	i		11004456	0					
ANR	11004669	Identifier	components		11004456	1					
ANR	11004670	PostIncDecOperationExpression	i ++	3288:26:105121:105123	11004456	2	True				
ANR	11004671	Identifier	i		11004456	0					
ANR	11004672	IncDec	++		11004456	1					
ANR	11004673	CompoundStatement		60:31:1603:1603	11004456	3					
ANR	11004674	ExpressionStatement	"make_real ( op , ( float ) 0 )"	3289:8:105136:105159	11004456	0	True				
ANR	11004675	CallExpression	"make_real ( op , ( float ) 0 )"		11004456	0					
ANR	11004676	Callee	make_real		11004456	0					
ANR	11004677	Identifier	make_real		11004456	0					
ANR	11004678	ArgumentList	op		11004456	1					
ANR	11004679	Argument	op		11004456	0					
ANR	11004680	Identifier	op		11004456	0					
ANR	11004681	Argument	( float ) 0		11004456	1					
ANR	11004682	CastExpression	( float ) 0		11004456	0					
ANR	11004683	CastTarget	float		11004456	0					
ANR	11004684	PrimaryExpression	0		11004456	1					
ANR	11004685	ExpressionStatement	op ++	3290:8:105169:105173	11004456	1	True				
ANR	11004686	PostIncDecOperationExpression	op ++		11004456	0					
ANR	11004687	Identifier	op		11004456	0					
ANR	11004688	IncDec	++		11004456	1					
ANR	11004689	IfStatement	if ( components == 4 )		11004456	13					
ANR	11004690	Condition	components == 4	3295:8:105295:105309	11004456	0	True				
ANR	11004691	EqualityExpression	components == 4		11004456	0		==			
ANR	11004692	Identifier	components		11004456	0					
ANR	11004693	PrimaryExpression	4		11004456	1					
ANR	11004694	CompoundStatement		67:25:1789:1789	11004456	1					
ANR	11004695	ExpressionStatement	op --	3296:8:105322:105326	11004456	0	True				
ANR	11004696	PostIncDecOperationExpression	op --		11004456	0					
ANR	11004697	Identifier	op		11004456	0					
ANR	11004698	IncDec	--		11004456	1					
ANR	11004699	ExpressionStatement	"make_real ( op , ( float ) 1 )"	3297:8:105336:105359	11004456	1	True				
ANR	11004700	CallExpression	"make_real ( op , ( float ) 1 )"		11004456	0					
ANR	11004701	Callee	make_real		11004456	0					
ANR	11004702	Identifier	make_real		11004456	0					
ANR	11004703	ArgumentList	op		11004456	1					
ANR	11004704	Argument	op		11004456	0					
ANR	11004705	Identifier	op		11004456	0					
ANR	11004706	Argument	( float ) 1		11004456	1					
ANR	11004707	CastExpression	( float ) 1		11004456	0					
ANR	11004708	CastTarget	float		11004456	0					
ANR	11004709	PrimaryExpression	1		11004456	1					
ANR	11004710	ExpressionStatement	* stage = 0	3299:4:105371:105381	11004456	14	True				
ANR	11004711	AssignmentExpression	* stage = 0		11004456	0		=			
ANR	11004712	UnaryOperationExpression	* stage		11004456	0					
ANR	11004713	UnaryOperator	*		11004456	0					
ANR	11004714	Identifier	stage		11004456	1					
ANR	11004715	PrimaryExpression	0		11004456	1					
ANR	11004716	ExpressionStatement	* cont = 0	3300:4:105387:105396	11004456	15	True				
ANR	11004717	AssignmentExpression	* cont = 0		11004456	0		=			
ANR	11004718	UnaryOperationExpression	* cont		11004456	0					
ANR	11004719	UnaryOperator	*		11004456	0					
ANR	11004720	Identifier	cont		11004456	1					
ANR	11004721	PrimaryExpression	0		11004456	1					
ANR	11004722	ReturnStatement	return 0 ;	3301:4:105402:105410	11004456	16	True				
ANR	11004723	PrimaryExpression	0		11004456	0					
ANR	11004724	ReturnType	static int		11004456	1					
ANR	11004725	Identifier	ciebasecolor		11004456	2					
ANR	11004726	ParameterList	"i_ctx_t * i_ctx_p , ref * space , int base , int * stage , int * cont , int * stack_depth"		11004456	3					
ANR	11004727	Parameter	i_ctx_t * i_ctx_p	3228:24:103440:103456	11004456	0	True				
ANR	11004728	ParameterType	i_ctx_t *		11004456	0					
ANR	11004729	Identifier	i_ctx_p		11004456	1					
ANR	11004730	Parameter	ref * space	3228:43:103459:103468	11004456	1	True				
ANR	11004731	ParameterType	ref *		11004456	0					
ANR	11004732	Identifier	space		11004456	1					
ANR	11004733	Parameter	int base	3228:55:103471:103478	11004456	2	True				
ANR	11004734	ParameterType	int		11004456	0					
ANR	11004735	Identifier	base		11004456	1					
ANR	11004736	Parameter	int * stage	3228:65:103481:103490	11004456	3	True				
ANR	11004737	ParameterType	int *		11004456	0					
ANR	11004738	Identifier	stage		11004456	1					
ANR	11004739	Parameter	int * cont	3228:77:103493:103501	11004456	4	True				
ANR	11004740	ParameterType	int *		11004456	0					
ANR	11004741	Identifier	cont		11004456	1					
ANR	11004742	Parameter	int * stack_depth	3228:88:103504:103519	11004456	5	True				
ANR	11004743	ParameterType	int *		11004456	0					
ANR	11004744	Identifier	stack_depth		11004456	1					
ANR	11004745	CFGEntryNode	ENTRY		11004456		True				
ANR	11004746	CFGExitNode	EXIT		11004456		True				
ANR	11004747	Symbol	* imemory -> gs_lib_ctx		11004456						
ANR	11004748	Symbol	stack_depth		11004456						
ANR	11004749	Symbol	components		11004456						
ANR	11004750	Symbol	name_eq		11004456						
ANR	11004751	Symbol	code		11004456						
ANR	11004752	Symbol	imemory -> gs_lib_ctx -> gs_name_table		11004456						
ANR	11004753	Symbol	space -> value		11004456						
ANR	11004754	Symbol	names_ref		11004456						
ANR	11004755	Symbol	CIESpaces		11004456						
ANR	11004756	Symbol	osp		11004456						
ANR	11004757	Symbol	space		11004456						
ANR	11004758	Symbol	imemory -> gs_lib_ctx		11004456						
ANR	11004759	Symbol	strlen		11004456						
ANR	11004760	Symbol	& nref		11004456						
ANR	11004761	Symbol	r_has_type		11004456						
ANR	11004762	Symbol	gs_error_typecheck		11004456						
ANR	11004763	Symbol	nref		11004456						
ANR	11004764	Symbol	t_name		11004456						
ANR	11004765	Symbol	imemory		11004456						
ANR	11004766	Symbol	cont		11004456						
ANR	11004767	Symbol	op		11004456						
ANR	11004768	Symbol	spacename		11004456						
ANR	11004769	Symbol	* stage		11004456						
ANR	11004770	Symbol	* imemory		11004456						
ANR	11004771	Symbol	i		11004456						
ANR	11004772	Symbol	* CIESpaces		11004456						
ANR	11004773	Symbol	* i		11004456						
ANR	11004774	Symbol	stage		11004456						
ANR	11004775	Symbol	* cont		11004456						
ANR	11004776	Symbol	i_ctx_p		11004456						
ANR	11004777	Symbol	* space		11004456						
ANR	11004778	Symbol	* * imemory		11004456						
ANR	11004779	Symbol	r_is_array		11004456						
ANR	11004780	Symbol	space -> value . refs		11004456						
ANR	11004781	Symbol	base		11004456						
ANR	11004782	Function	convert_transform	3309:0:105633:106310							
ANR	11004783	FunctionDef	"convert_transform (i_ctx_t * i_ctx_p , ref * arr , ref * pproc)"		11004782	0					
ANR	11004784	CompoundStatement		3310:0:105703:106310	11004782	0					
ANR	11004785	IdentifierDeclStatement	os_ptr op = osp ;	3311:4:105709:105724	11004782	0	True				
ANR	11004786	IdentifierDecl	op = osp		11004782	0					
ANR	11004787	IdentifierDeclType	os_ptr		11004782	0					
ANR	11004788	Identifier	op		11004782	1					
ANR	11004789	AssignmentExpression	op = osp		11004782	2		=			
ANR	11004790	Identifier	osp		11004782	0					
ANR	11004791	Identifier	osp		11004782	1					
ANR	11004792	IdentifierDeclStatement	int code ;	3312:4:105763:105771	11004782	1	True				
ANR	11004793	IdentifierDecl	code		11004782	0					
ANR	11004794	IdentifierDeclType	int		11004782	0					
ANR	11004795	Identifier	code		11004782	1					
ANR	11004796	ExpressionStatement	push ( 1 )	3318:4:105950:105957	11004782	2	True				
ANR	11004797	CallExpression	push ( 1 )		11004782	0					
ANR	11004798	Callee	push		11004782	0					
ANR	11004799	Identifier	push		11004782	0					
ANR	11004800	ArgumentList	1		11004782	1					
ANR	11004801	Argument	1		11004782	0					
ANR	11004802	PrimaryExpression	1		11004782	0					
ANR	11004803	ExpressionStatement	"code = buildfunction ( i_ctx_p , arr , pproc , 4 )"	3320:4:106007:106051	11004782	3	True				
ANR	11004804	AssignmentExpression	"code = buildfunction ( i_ctx_p , arr , pproc , 4 )"		11004782	0		=			
ANR	11004805	Identifier	code		11004782	0					
ANR	11004806	CallExpression	"buildfunction ( i_ctx_p , arr , pproc , 4 )"		11004782	1					
ANR	11004807	Callee	buildfunction		11004782	0					
ANR	11004808	Identifier	buildfunction		11004782	0					
ANR	11004809	ArgumentList	i_ctx_p		11004782	1					
ANR	11004810	Argument	i_ctx_p		11004782	0					
ANR	11004811	Identifier	i_ctx_p		11004782	0					
ANR	11004812	Argument	arr		11004782	1					
ANR	11004813	Identifier	arr		11004782	0					
ANR	11004814	Argument	pproc		11004782	2					
ANR	11004815	Identifier	pproc		11004782	0					
ANR	11004816	Argument	4		11004782	3					
ANR	11004817	PrimaryExpression	4		11004782	0					
ANR	11004818	IfStatement	if ( code < 0 )		11004782	4					
ANR	11004819	Condition	code < 0	3322:8:106062:106069	11004782	0	True				
ANR	11004820	RelationalExpression	code < 0		11004782	0		<			
ANR	11004821	Identifier	code		11004782	0					
ANR	11004822	PrimaryExpression	0		11004782	1					
ANR	11004823	ExpressionStatement	"code = buildfunction ( i_ctx_p , arr , pproc , 0 )"	3327:8:106246:106290	11004782	1	True				
ANR	11004824	AssignmentExpression	"code = buildfunction ( i_ctx_p , arr , pproc , 0 )"		11004782	0		=			
ANR	11004825	Identifier	code		11004782	0					
ANR	11004826	CallExpression	"buildfunction ( i_ctx_p , arr , pproc , 0 )"		11004782	1					
ANR	11004827	Callee	buildfunction		11004782	0					
ANR	11004828	Identifier	buildfunction		11004782	0					
ANR	11004829	ArgumentList	i_ctx_p		11004782	1					
ANR	11004830	Argument	i_ctx_p		11004782	0					
ANR	11004831	Identifier	i_ctx_p		11004782	0					
ANR	11004832	Argument	arr		11004782	1					
ANR	11004833	Identifier	arr		11004782	0					
ANR	11004834	Argument	pproc		11004782	2					
ANR	11004835	Identifier	pproc		11004782	0					
ANR	11004836	Argument	0		11004782	3					
ANR	11004837	PrimaryExpression	0		11004782	0					
ANR	11004838	ReturnStatement	return code ;	3329:4:106297:106308	11004782	5	True				
ANR	11004839	Identifier	code		11004782	0					
ANR	11004840	ReturnType	static int		11004782	1					
ANR	11004841	Identifier	convert_transform		11004782	2					
ANR	11004842	ParameterList	"i_ctx_t * i_ctx_p , ref * arr , ref * pproc"		11004782	3					
ANR	11004843	Parameter	i_ctx_t * i_ctx_p	3309:29:105662:105678	11004782	0	True				
ANR	11004844	ParameterType	i_ctx_t *		11004782	0					
ANR	11004845	Identifier	i_ctx_p		11004782	1					
ANR	11004846	Parameter	ref * arr	3309:48:105681:105688	11004782	1	True				
ANR	11004847	ParameterType	ref *		11004782	0					
ANR	11004848	Identifier	arr		11004782	1					
ANR	11004849	Parameter	ref * pproc	3309:58:105691:105700	11004782	2	True				
ANR	11004850	ParameterType	ref *		11004782	0					
ANR	11004851	Identifier	pproc		11004782	1					
ANR	11004852	CFGEntryNode	ENTRY		11004782		True				
ANR	11004853	CFGExitNode	EXIT		11004782		True				
ANR	11004854	Symbol	arr		11004782						
ANR	11004855	Symbol	op		11004782						
ANR	11004856	Symbol	code		11004782						
ANR	11004857	Symbol	i_ctx_p		11004782						
ANR	11004858	Symbol	pproc		11004782						
ANR	11004859	Symbol	buildfunction		11004782						
ANR	11004860	Symbol	osp		11004782						
ANR	11004861	Function	setseparationspace	3333:0:106330:109774							
ANR	11004862	FunctionDef	"setseparationspace (i_ctx_t * i_ctx_p , ref * sepspace , int * stage , int * cont , int CIESubst)"		11004861	0					
ANR	11004863	CompoundStatement		3334:0:106431:109774	11004861	0					
ANR	11004864	IdentifierDeclStatement	os_ptr op = osp ;	3335:4:106437:106452	11004861	0	True				
ANR	11004865	IdentifierDecl	op = osp		11004861	0					
ANR	11004866	IdentifierDeclType	os_ptr		11004861	0					
ANR	11004867	Identifier	op		11004861	1					
ANR	11004868	AssignmentExpression	op = osp		11004861	2		=			
ANR	11004869	Identifier	osp		11004861	0					
ANR	11004870	Identifier	osp		11004861	1					
ANR	11004871	IdentifierDeclStatement	int code = 0 ;	3336:4:106491:106503	11004861	1	True				
ANR	11004872	IdentifierDecl	code = 0		11004861	0					
ANR	11004873	IdentifierDeclType	int		11004861	0					
ANR	11004874	Identifier	code		11004861	1					
ANR	11004875	AssignmentExpression	code = 0		11004861	2		=			
ANR	11004876	Identifier	code		11004861	0					
ANR	11004877	PrimaryExpression	0		11004861	1					
ANR	11004878	IdentifierDeclStatement	"ref sname , proc ;"	3337:4:106509:106524	11004861	2	True				
ANR	11004879	IdentifierDecl	sname		11004861	0					
ANR	11004880	IdentifierDeclType	ref		11004861	0					
ANR	11004881	Identifier	sname		11004861	1					
ANR	11004882	IdentifierDecl	proc		11004861	1					
ANR	11004883	IdentifierDeclType	ref		11004861	0					
ANR	11004884	Identifier	proc		11004861	1					
ANR	11004885	IdentifierDeclStatement	"ref name_none , name_all ;"	3338:4:106530:106553	11004861	3	True				
ANR	11004886	IdentifierDecl	name_none		11004861	0					
ANR	11004887	IdentifierDeclType	ref		11004861	0					
ANR	11004888	Identifier	name_none		11004861	1					
ANR	11004889	IdentifierDecl	name_all		11004861	1					
ANR	11004890	IdentifierDeclType	ref		11004861	0					
ANR	11004891	Identifier	name_all		11004861	1					
ANR	11004892	IdentifierDeclStatement	separation_type sep_type ;	3339:4:106559:106583	11004861	4	True				
ANR	11004893	IdentifierDecl	sep_type		11004861	0					
ANR	11004894	IdentifierDeclType	separation_type		11004861	0					
ANR	11004895	Identifier	sep_type		11004861	1					
ANR	11004896	IdentifierDeclStatement	ref_colorspace cspace_old ;	3340:4:106589:106614	11004861	5	True				
ANR	11004897	IdentifierDecl	cspace_old		11004861	0					
ANR	11004898	IdentifierDeclType	ref_colorspace		11004861	0					
ANR	11004899	Identifier	cspace_old		11004861	1					
ANR	11004900	IdentifierDeclStatement	gs_color_space * pcs ;	3341:4:106620:106639	11004861	6	True				
ANR	11004901	IdentifierDecl	* pcs		11004861	0					
ANR	11004902	IdentifierDeclType	gs_color_space *		11004861	0					
ANR	11004903	Identifier	pcs		11004861	1					
ANR	11004904	IdentifierDeclStatement	gs_color_space * pacs ;	3342:4:106645:106666	11004861	7	True				
ANR	11004905	IdentifierDecl	* pacs		11004861	0					
ANR	11004906	IdentifierDeclType	gs_color_space *		11004861	0					
ANR	11004907	Identifier	pacs		11004861	1					
ANR	11004908	IdentifierDeclStatement	gs_function_t * pfn = NULL ;	3343:4:106672:106697	11004861	8	True				
ANR	11004909	IdentifierDecl	* pfn = NULL		11004861	0					
ANR	11004910	IdentifierDeclType	gs_function_t *		11004861	0					
ANR	11004911	Identifier	pfn		11004861	1					
ANR	11004912	AssignmentExpression	* pfn = NULL		11004861	2		=			
ANR	11004913	Identifier	NULL		11004861	0					
ANR	11004914	Identifier	NULL		11004861	1					
ANR	11004915	IdentifierDeclStatement	gs_client_color cc ;	3344:4:106703:106721	11004861	9	True				
ANR	11004916	IdentifierDecl	cc		11004861	0					
ANR	11004917	IdentifierDeclType	gs_client_color		11004861	0					
ANR	11004918	Identifier	cc		11004861	1					
ANR	11004919	IfStatement	if ( i_ctx_p -> language_level < 2 )		11004861	10					
ANR	11004920	Condition	i_ctx_p -> language_level < 2	3346:8:106732:106758	11004861	0	True				
ANR	11004921	RelationalExpression	i_ctx_p -> language_level < 2		11004861	0		<			
ANR	11004922	PtrMemberAccess	i_ctx_p -> language_level		11004861	0					
ANR	11004923	Identifier	i_ctx_p		11004861	0					
ANR	11004924	Identifier	language_level		11004861	1					
ANR	11004925	PrimaryExpression	2		11004861	1					
ANR	11004926	ExpressionStatement	return_error ( gs_error_undefined )	3347:8:106769:106801	11004861	1	True				
ANR	11004927	CallExpression	return_error ( gs_error_undefined )		11004861	0					
ANR	11004928	Callee	return_error		11004861	0					
ANR	11004929	Identifier	return_error		11004861	0					
ANR	11004930	ArgumentList	gs_error_undefined		11004861	1					
ANR	11004931	Argument	gs_error_undefined		11004861	0					
ANR	11004932	Identifier	gs_error_undefined		11004861	0					
ANR	11004933	ExpressionStatement	* cont = 0	3349:4:106808:106817	11004861	11	True				
ANR	11004934	AssignmentExpression	* cont = 0		11004861	0		=			
ANR	11004935	UnaryOperationExpression	* cont		11004861	0					
ANR	11004936	UnaryOperator	*		11004861	0					
ANR	11004937	Identifier	cont		11004861	1					
ANR	11004938	PrimaryExpression	0		11004861	1					
ANR	11004939	IfStatement	if ( ( * stage ) == 0 )		11004861	12					
ANR	11004940	Condition	( * stage ) == 0	3350:8:106827:106839	11004861	0	True				
ANR	11004941	EqualityExpression	( * stage ) == 0		11004861	0		==			
ANR	11004942	UnaryOperationExpression	* stage		11004861	0					
ANR	11004943	UnaryOperator	*		11004861	0					
ANR	11004944	Identifier	stage		11004861	1					
ANR	11004945	PrimaryExpression	0		11004861	1					
ANR	11004946	CompoundStatement		17:23:410:410	11004861	1					
ANR	11004947	ExpressionStatement	"code = array_get ( imemory , sepspace , 3 , & proc )"	3351:8:106852:106897	11004861	0	True				
ANR	11004948	AssignmentExpression	"code = array_get ( imemory , sepspace , 3 , & proc )"		11004861	0		=			
ANR	11004949	Identifier	code		11004861	0					
ANR	11004950	CallExpression	"array_get ( imemory , sepspace , 3 , & proc )"		11004861	1					
ANR	11004951	Callee	array_get		11004861	0					
ANR	11004952	Identifier	array_get		11004861	0					
ANR	11004953	ArgumentList	imemory		11004861	1					
ANR	11004954	Argument	imemory		11004861	0					
ANR	11004955	Identifier	imemory		11004861	0					
ANR	11004956	Argument	sepspace		11004861	1					
ANR	11004957	Identifier	sepspace		11004861	0					
ANR	11004958	Argument	3		11004861	2					
ANR	11004959	PrimaryExpression	3		11004861	0					
ANR	11004960	Argument	& proc		11004861	3					
ANR	11004961	UnaryOperationExpression	& proc		11004861	0					
ANR	11004962	UnaryOperator	&		11004861	0					
ANR	11004963	Identifier	proc		11004861	1					
ANR	11004964	IfStatement	if ( code < 0 )		11004861	1					
ANR	11004965	Condition	code < 0	3352:12:106911:106918	11004861	0	True				
ANR	11004966	RelationalExpression	code < 0		11004861	0		<			
ANR	11004967	Identifier	code		11004861	0					
ANR	11004968	PrimaryExpression	0		11004861	1					
ANR	11004969	ReturnStatement	return code ;	3353:12:106933:106944	11004861	1	True				
ANR	11004970	Identifier	code		11004861	0					
ANR	11004971	ExpressionStatement	pfn = ref_function ( & proc )	3355:8:107032:107057	11004861	2	True				
ANR	11004972	AssignmentExpression	pfn = ref_function ( & proc )		11004861	0		=			
ANR	11004973	Identifier	pfn		11004861	0					
ANR	11004974	CallExpression	ref_function ( & proc )		11004861	1					
ANR	11004975	Callee	ref_function		11004861	0					
ANR	11004976	Identifier	ref_function		11004861	0					
ANR	11004977	ArgumentList	& proc		11004861	1					
ANR	11004978	Argument	& proc		11004861	0					
ANR	11004979	UnaryOperationExpression	& proc		11004861	0					
ANR	11004980	UnaryOperator	&		11004861	0					
ANR	11004981	Identifier	proc		11004861	1					
ANR	11004982	IfStatement	if ( pfn == NULL )		11004861	3					
ANR	11004983	Condition	pfn == NULL	3356:12:107071:107081	11004861	0	True				
ANR	11004984	EqualityExpression	pfn == NULL		11004861	0		==			
ANR	11004985	Identifier	pfn		11004861	0					
ANR	11004986	Identifier	NULL		11004861	1					
ANR	11004987	CompoundStatement		23:25:652:652	11004861	1					
ANR	11004988	ExpressionStatement	"code = convert_transform ( i_ctx_p , sepspace , & proc )"	3358:12:107164:107214	11004861	0	True				
ANR	11004989	AssignmentExpression	"code = convert_transform ( i_ctx_p , sepspace , & proc )"		11004861	0		=			
ANR	11004990	Identifier	code		11004861	0					
ANR	11004991	CallExpression	"convert_transform ( i_ctx_p , sepspace , & proc )"		11004861	1					
ANR	11004992	Callee	convert_transform		11004861	0					
ANR	11004993	Identifier	convert_transform		11004861	0					
ANR	11004994	ArgumentList	i_ctx_p		11004861	1					
ANR	11004995	Argument	i_ctx_p		11004861	0					
ANR	11004996	Identifier	i_ctx_p		11004861	0					
ANR	11004997	Argument	sepspace		11004861	1					
ANR	11004998	Identifier	sepspace		11004861	0					
ANR	11004999	Argument	& proc		11004861	2					
ANR	11005000	UnaryOperationExpression	& proc		11004861	0					
ANR	11005001	UnaryOperator	&		11004861	0					
ANR	11005002	Identifier	proc		11004861	1					
ANR	11005003	IfStatement	if ( code < 0 )		11004861	1					
ANR	11005004	Condition	code < 0	3359:16:107232:107239	11004861	0	True				
ANR	11005005	RelationalExpression	code < 0		11004861	0		<			
ANR	11005006	Identifier	code		11004861	0					
ANR	11005007	PrimaryExpression	0		11004861	1					
ANR	11005008	ReturnStatement	return code ;	3360:16:107258:107269	11004861	1	True				
ANR	11005009	Identifier	code		11004861	0					
ANR	11005010	IfStatement	if ( code > 0 )		11004861	2					
ANR	11005011	Condition	code > 0	3361:16:107287:107294	11004861	0	True				
ANR	11005012	RelationalExpression	code > 0		11004861	0		>			
ANR	11005013	Identifier	code		11004861	0					
ANR	11005014	PrimaryExpression	0		11004861	1					
ANR	11005015	CompoundStatement		28:26:865:865	11004861	1					
ANR	11005016	ExpressionStatement	* cont = 1	3362:16:107315:107324	11004861	0	True				
ANR	11005017	AssignmentExpression	* cont = 1		11004861	0		=			
ANR	11005018	UnaryOperationExpression	* cont		11004861	0					
ANR	11005019	UnaryOperator	*		11004861	0					
ANR	11005020	Identifier	cont		11004861	1					
ANR	11005021	PrimaryExpression	1		11004861	1					
ANR	11005022	ExpressionStatement	( * stage ) ++	3363:16:107342:107352	11004861	1	True				
ANR	11005023	PostIncDecOperationExpression	( * stage ) ++		11004861	0					
ANR	11005024	UnaryOperationExpression	* stage		11004861	0					
ANR	11005025	UnaryOperator	*		11004861	0					
ANR	11005026	Identifier	stage		11004861	1					
ANR	11005027	IncDec	++		11004861	1					
ANR	11005028	ReturnStatement	return code ;	3364:16:107370:107381	11004861	2	True				
ANR	11005029	Identifier	code		11004861	0					
ANR	11005030	ExpressionStatement	op = osp	3370:12:107649:107657	11004861	3	True				
ANR	11005031	AssignmentExpression	op = osp		11004861	0		=			
ANR	11005032	Identifier	op		11004861	0					
ANR	11005033	Identifier	osp		11004861	1					
ANR	11005034	ExpressionStatement	pfn = ref_function ( op )	3371:12:107671:107693	11004861	4	True				
ANR	11005035	AssignmentExpression	pfn = ref_function ( op )		11004861	0		=			
ANR	11005036	Identifier	pfn		11004861	0					
ANR	11005037	CallExpression	ref_function ( op )		11004861	1					
ANR	11005038	Callee	ref_function		11004861	0					
ANR	11005039	Identifier	ref_function		11004861	0					
ANR	11005040	ArgumentList	op		11004861	1					
ANR	11005041	Argument	op		11004861	0					
ANR	11005042	Identifier	op		11004861	0					
ANR	11005043	ExpressionStatement	pop ( 1 )	3372:12:107707:107714	11004861	5	True				
ANR	11005044	CallExpression	pop ( 1 )		11004861	0					
ANR	11005045	Callee	pop		11004861	0					
ANR	11005046	Identifier	pop		11004861	0					
ANR	11005047	ArgumentList	1		11004861	1					
ANR	11005048	Argument	1		11004861	0					
ANR	11005049	PrimaryExpression	1		11004861	0					
ANR	11005050	ElseStatement	else		11004861	0					
ANR	11005051	CompoundStatement		41:11:1305:1305	11004861	0					
ANR	11005052	ExpressionStatement	op = osp	3376:8:107807:107815	11004861	0	True				
ANR	11005053	AssignmentExpression	op = osp		11004861	0		=			
ANR	11005054	Identifier	op		11004861	0					
ANR	11005055	Identifier	osp		11004861	1					
ANR	11005056	ExpressionStatement	pfn = ref_function ( op )	3377:8:107825:107847	11004861	1	True				
ANR	11005057	AssignmentExpression	pfn = ref_function ( op )		11004861	0		=			
ANR	11005058	Identifier	pfn		11004861	0					
ANR	11005059	CallExpression	ref_function ( op )		11004861	1					
ANR	11005060	Callee	ref_function		11004861	0					
ANR	11005061	Identifier	ref_function		11004861	0					
ANR	11005062	ArgumentList	op		11004861	1					
ANR	11005063	Argument	op		11004861	0					
ANR	11005064	Identifier	op		11004861	0					
ANR	11005065	ExpressionStatement	pop ( 1 )	3378:8:107857:107864	11004861	2	True				
ANR	11005066	CallExpression	pop ( 1 )		11004861	0					
ANR	11005067	Callee	pop		11004861	0					
ANR	11005068	Identifier	pop		11004861	0					
ANR	11005069	ArgumentList	1		11004861	1					
ANR	11005070	Argument	1		11004861	0					
ANR	11005071	PrimaryExpression	1		11004861	0					
ANR	11005072	ExpressionStatement	* stage = 0	3381:4:107877:107887	11004861	13	True				
ANR	11005073	AssignmentExpression	* stage = 0		11004861	0		=			
ANR	11005074	UnaryOperationExpression	* stage		11004861	0					
ANR	11005075	UnaryOperator	*		11004861	0					
ANR	11005076	Identifier	stage		11004861	1					
ANR	11005077	PrimaryExpression	0		11004861	1					
ANR	11005078	IfStatement	"if ( ( code = name_ref ( imemory , ( const byte * ) ""All"" , 3 , & name_all , 0 ) ) < 0 )"		11004861	14					
ANR	11005079	Condition	"( code = name_ref ( imemory , ( const byte * ) ""All"" , 3 , & name_all , 0 ) ) < 0"	3382:8:107897:107964	11004861	0	True				
ANR	11005080	RelationalExpression	"( code = name_ref ( imemory , ( const byte * ) ""All"" , 3 , & name_all , 0 ) ) < 0"		11004861	0		<			
ANR	11005081	AssignmentExpression	"code = name_ref ( imemory , ( const byte * ) ""All"" , 3 , & name_all , 0 )"		11004861	0		=			
ANR	11005082	Identifier	code		11004861	0					
ANR	11005083	CallExpression	"name_ref ( imemory , ( const byte * ) ""All"" , 3 , & name_all , 0 )"		11004861	1					
ANR	11005084	Callee	name_ref		11004861	0					
ANR	11005085	Identifier	name_ref		11004861	0					
ANR	11005086	ArgumentList	imemory		11004861	1					
ANR	11005087	Argument	imemory		11004861	0					
ANR	11005088	Identifier	imemory		11004861	0					
ANR	11005089	Argument	"( const byte * ) ""All"""		11004861	1					
ANR	11005090	CastExpression	"( const byte * ) ""All"""		11004861	0					
ANR	11005091	CastTarget	const byte *		11004861	0					
ANR	11005092	PrimaryExpression	"""All"""		11004861	1					
ANR	11005093	Argument	3		11004861	2					
ANR	11005094	PrimaryExpression	3		11004861	0					
ANR	11005095	Argument	& name_all		11004861	3					
ANR	11005096	UnaryOperationExpression	& name_all		11004861	0					
ANR	11005097	UnaryOperator	&		11004861	0					
ANR	11005098	Identifier	name_all		11004861	1					
ANR	11005099	Argument	0		11004861	4					
ANR	11005100	PrimaryExpression	0		11004861	0					
ANR	11005101	PrimaryExpression	0		11004861	1					
ANR	11005102	ReturnStatement	return code ;	3383:8:107975:107986	11004861	1	True				
ANR	11005103	Identifier	code		11004861	0					
ANR	11005104	IfStatement	"if ( ( code = name_ref ( imemory , ( const byte * ) ""None"" , 4 , & name_none , 0 ) ) < 0 )"		11004861	15					
ANR	11005105	Condition	"( code = name_ref ( imemory , ( const byte * ) ""None"" , 4 , & name_none , 0 ) ) < 0"	3384:8:107996:108065	11004861	0	True				
ANR	11005106	RelationalExpression	"( code = name_ref ( imemory , ( const byte * ) ""None"" , 4 , & name_none , 0 ) ) < 0"		11004861	0		<			
ANR	11005107	AssignmentExpression	"code = name_ref ( imemory , ( const byte * ) ""None"" , 4 , & name_none , 0 )"		11004861	0		=			
ANR	11005108	Identifier	code		11004861	0					
ANR	11005109	CallExpression	"name_ref ( imemory , ( const byte * ) ""None"" , 4 , & name_none , 0 )"		11004861	1					
ANR	11005110	Callee	name_ref		11004861	0					
ANR	11005111	Identifier	name_ref		11004861	0					
ANR	11005112	ArgumentList	imemory		11004861	1					
ANR	11005113	Argument	imemory		11004861	0					
ANR	11005114	Identifier	imemory		11004861	0					
ANR	11005115	Argument	"( const byte * ) ""None"""		11004861	1					
ANR	11005116	CastExpression	"( const byte * ) ""None"""		11004861	0					
ANR	11005117	CastTarget	const byte *		11004861	0					
ANR	11005118	PrimaryExpression	"""None"""		11004861	1					
ANR	11005119	Argument	4		11004861	2					
ANR	11005120	PrimaryExpression	4		11004861	0					
ANR	11005121	Argument	& name_none		11004861	3					
ANR	11005122	UnaryOperationExpression	& name_none		11004861	0					
ANR	11005123	UnaryOperator	&		11004861	0					
ANR	11005124	Identifier	name_none		11004861	1					
ANR	11005125	Argument	0		11004861	4					
ANR	11005126	PrimaryExpression	0		11004861	0					
ANR	11005127	PrimaryExpression	0		11004861	1					
ANR	11005128	ReturnStatement	return code ;	3385:8:108076:108087	11004861	1	True				
ANR	11005129	Identifier	code		11004861	0					
ANR	11005130	ExpressionStatement	"code = array_get ( imemory , sepspace , 1 , & sname )"	3387:4:108152:108198	11004861	16	True				
ANR	11005131	AssignmentExpression	"code = array_get ( imemory , sepspace , 1 , & sname )"		11004861	0		=			
ANR	11005132	Identifier	code		11004861	0					
ANR	11005133	CallExpression	"array_get ( imemory , sepspace , 1 , & sname )"		11004861	1					
ANR	11005134	Callee	array_get		11004861	0					
ANR	11005135	Identifier	array_get		11004861	0					
ANR	11005136	ArgumentList	imemory		11004861	1					
ANR	11005137	Argument	imemory		11004861	0					
ANR	11005138	Identifier	imemory		11004861	0					
ANR	11005139	Argument	sepspace		11004861	1					
ANR	11005140	Identifier	sepspace		11004861	0					
ANR	11005141	Argument	1		11004861	2					
ANR	11005142	PrimaryExpression	1		11004861	0					
ANR	11005143	Argument	& sname		11004861	3					
ANR	11005144	UnaryOperationExpression	& sname		11004861	0					
ANR	11005145	UnaryOperator	&		11004861	0					
ANR	11005146	Identifier	sname		11004861	1					
ANR	11005147	IfStatement	if ( code < 0 )		11004861	17					
ANR	11005148	Condition	code < 0	3388:8:108208:108215	11004861	0	True				
ANR	11005149	RelationalExpression	code < 0		11004861	0		<			
ANR	11005150	Identifier	code		11004861	0					
ANR	11005151	PrimaryExpression	0		11004861	1					
ANR	11005152	ReturnStatement	return code ;	3389:8:108226:108237	11004861	1	True				
ANR	11005153	Identifier	code		11004861	0					
ANR	11005154	IfStatement	"if ( r_has_type ( & sname , t_string ) )"		11004861	18					
ANR	11005155	Condition	"r_has_type ( & sname , t_string )"	3391:8:108248:108275	11004861	0	True				
ANR	11005156	CallExpression	"r_has_type ( & sname , t_string )"		11004861	0					
ANR	11005157	Callee	r_has_type		11004861	0					
ANR	11005158	Identifier	r_has_type		11004861	0					
ANR	11005159	ArgumentList	& sname		11004861	1					
ANR	11005160	Argument	& sname		11004861	0					
ANR	11005161	UnaryOperationExpression	& sname		11004861	0					
ANR	11005162	UnaryOperator	&		11004861	0					
ANR	11005163	Identifier	sname		11004861	1					
ANR	11005164	Argument	t_string		11004861	1					
ANR	11005165	Identifier	t_string		11004861	0					
ANR	11005166	CompoundStatement		58:38:1846:1846	11004861	1					
ANR	11005167	ExpressionStatement	"code = name_from_string ( imemory , & sname , & sname )"	3392:8:108288:108336	11004861	0	True				
ANR	11005168	AssignmentExpression	"code = name_from_string ( imemory , & sname , & sname )"		11004861	0		=			
ANR	11005169	Identifier	code		11004861	0					
ANR	11005170	CallExpression	"name_from_string ( imemory , & sname , & sname )"		11004861	1					
ANR	11005171	Callee	name_from_string		11004861	0					
ANR	11005172	Identifier	name_from_string		11004861	0					
ANR	11005173	ArgumentList	imemory		11004861	1					
ANR	11005174	Argument	imemory		11004861	0					
ANR	11005175	Identifier	imemory		11004861	0					
ANR	11005176	Argument	& sname		11004861	1					
ANR	11005177	UnaryOperationExpression	& sname		11004861	0					
ANR	11005178	UnaryOperator	&		11004861	0					
ANR	11005179	Identifier	sname		11004861	1					
ANR	11005180	Argument	& sname		11004861	2					
ANR	11005181	UnaryOperationExpression	& sname		11004861	0					
ANR	11005182	UnaryOperator	&		11004861	0					
ANR	11005183	Identifier	sname		11004861	1					
ANR	11005184	IfStatement	if ( code < 0 )		11004861	1					
ANR	11005185	Condition	code < 0	3393:12:108350:108357	11004861	0	True				
ANR	11005186	RelationalExpression	code < 0		11004861	0		<			
ANR	11005187	Identifier	code		11004861	0					
ANR	11005188	PrimaryExpression	0		11004861	1					
ANR	11005189	ReturnStatement	return code ;	3394:12:108372:108383	11004861	1	True				
ANR	11005190	Identifier	code		11004861	0					
ANR	11005191	ExpressionStatement	"sep_type = ( name_eq ( & sname , & name_all ) ? SEP_ALL : name_eq ( & sname , & name_none ) ? SEP_NONE : SEP_OTHER )"	3396:4:108395:108515	11004861	19	True				
ANR	11005192	AssignmentExpression	"sep_type = ( name_eq ( & sname , & name_all ) ? SEP_ALL : name_eq ( & sname , & name_none ) ? SEP_NONE : SEP_OTHER )"		11004861	0		=			
ANR	11005193	Identifier	sep_type		11004861	0					
ANR	11005194	ConditionalExpression	"name_eq ( & sname , & name_all ) ? SEP_ALL : name_eq ( & sname , & name_none ) ? SEP_NONE : SEP_OTHER"		11004861	1					
ANR	11005195	Condition	"name_eq ( & sname , & name_all )"		11004861	0					
ANR	11005196	CallExpression	"name_eq ( & sname , & name_all )"		11004861	0					
ANR	11005197	Callee	name_eq		11004861	0					
ANR	11005198	Identifier	name_eq		11004861	0					
ANR	11005199	ArgumentList	& sname		11004861	1					
ANR	11005200	Argument	& sname		11004861	0					
ANR	11005201	UnaryOperationExpression	& sname		11004861	0					
ANR	11005202	UnaryOperator	&		11004861	0					
ANR	11005203	Identifier	sname		11004861	1					
ANR	11005204	Argument	& name_all		11004861	1					
ANR	11005205	UnaryOperationExpression	& name_all		11004861	0					
ANR	11005206	UnaryOperator	&		11004861	0					
ANR	11005207	Identifier	name_all		11004861	1					
ANR	11005208	Identifier	SEP_ALL		11004861	1					
ANR	11005209	ConditionalExpression	"name_eq ( & sname , & name_none ) ? SEP_NONE : SEP_OTHER"		11004861	2					
ANR	11005210	Condition	"name_eq ( & sname , & name_none )"		11004861	0					
ANR	11005211	CallExpression	"name_eq ( & sname , & name_none )"		11004861	0					
ANR	11005212	Callee	name_eq		11004861	0					
ANR	11005213	Identifier	name_eq		11004861	0					
ANR	11005214	ArgumentList	& sname		11004861	1					
ANR	11005215	Argument	& sname		11004861	0					
ANR	11005216	UnaryOperationExpression	& sname		11004861	0					
ANR	11005217	UnaryOperator	&		11004861	0					
ANR	11005218	Identifier	sname		11004861	1					
ANR	11005219	Argument	& name_none		11004861	1					
ANR	11005220	UnaryOperationExpression	& name_none		11004861	0					
ANR	11005221	UnaryOperator	&		11004861	0					
ANR	11005222	Identifier	name_none		11004861	1					
ANR	11005223	Identifier	SEP_NONE		11004861	1					
ANR	11005224	Identifier	SEP_OTHER		11004861	2					
ANR	11005225	ExpressionStatement	pacs = gs_currentcolorspace ( igs )	3400:4:108603:108635	11004861	20	True				
ANR	11005226	AssignmentExpression	pacs = gs_currentcolorspace ( igs )		11004861	0		=			
ANR	11005227	Identifier	pacs		11004861	0					
ANR	11005228	CallExpression	gs_currentcolorspace ( igs )		11004861	1					
ANR	11005229	Callee	gs_currentcolorspace		11004861	0					
ANR	11005230	Identifier	gs_currentcolorspace		11004861	0					
ANR	11005231	ArgumentList	igs		11004861	1					
ANR	11005232	Argument	igs		11004861	0					
ANR	11005233	Identifier	igs		11004861	0					
ANR	11005234	ExpressionStatement	cspace_old = istate -> colorspace [ 0 ]	3402:4:108642:108676	11004861	21	True				
ANR	11005235	AssignmentExpression	cspace_old = istate -> colorspace [ 0 ]		11004861	0		=			
ANR	11005236	Identifier	cspace_old		11004861	0					
ANR	11005237	ArrayIndexing	istate -> colorspace [ 0 ]		11004861	1					
ANR	11005238	PtrMemberAccess	istate -> colorspace		11004861	0					
ANR	11005239	Identifier	istate		11004861	0					
ANR	11005240	Identifier	colorspace		11004861	1					
ANR	11005241	PrimaryExpression	0		11004861	1					
ANR	11005242	ExpressionStatement	"code = gs_cspace_new_Separation ( & pcs , pacs , imemory )"	3404:4:108738:108790	11004861	22	True				
ANR	11005243	AssignmentExpression	"code = gs_cspace_new_Separation ( & pcs , pacs , imemory )"		11004861	0		=			
ANR	11005244	Identifier	code		11004861	0					
ANR	11005245	CallExpression	"gs_cspace_new_Separation ( & pcs , pacs , imemory )"		11004861	1					
ANR	11005246	Callee	gs_cspace_new_Separation		11004861	0					
ANR	11005247	Identifier	gs_cspace_new_Separation		11004861	0					
ANR	11005248	ArgumentList	& pcs		11004861	1					
ANR	11005249	Argument	& pcs		11004861	0					
ANR	11005250	UnaryOperationExpression	& pcs		11004861	0					
ANR	11005251	UnaryOperator	&		11004861	0					
ANR	11005252	Identifier	pcs		11004861	1					
ANR	11005253	Argument	pacs		11004861	1					
ANR	11005254	Identifier	pacs		11004861	0					
ANR	11005255	Argument	imemory		11004861	2					
ANR	11005256	Identifier	imemory		11004861	0					
ANR	11005257	IfStatement	if ( code < 0 )		11004861	23					
ANR	11005258	Condition	code < 0	3405:8:108800:108807	11004861	0	True				
ANR	11005259	RelationalExpression	code < 0		11004861	0		<			
ANR	11005260	Identifier	code		11004861	0					
ANR	11005261	PrimaryExpression	0		11004861	1					
ANR	11005262	ReturnStatement	return code ;	3406:8:108818:108829	11004861	1	True				
ANR	11005263	Identifier	code		11004861	0					
ANR	11005264	ExpressionStatement	pcs -> params . separation . sep_type = sep_type	3407:4:108835:108877	11004861	24	True				
ANR	11005265	AssignmentExpression	pcs -> params . separation . sep_type = sep_type		11004861	0		=			
ANR	11005266	MemberAccess	pcs -> params . separation . sep_type		11004861	0					
ANR	11005267	MemberAccess	pcs -> params . separation		11004861	0					
ANR	11005268	PtrMemberAccess	pcs -> params		11004861	0					
ANR	11005269	Identifier	pcs		11004861	0					
ANR	11005270	Identifier	params		11004861	1					
ANR	11005271	Identifier	separation		11004861	1					
ANR	11005272	Identifier	sep_type		11004861	1					
ANR	11005273	Identifier	sep_type		11004861	1					
ANR	11005274	ExpressionStatement	"pcs -> params . separation . sep_name = name_index ( imemory , & sname )"	3408:4:108883:108944	11004861	25	True				
ANR	11005275	AssignmentExpression	"pcs -> params . separation . sep_name = name_index ( imemory , & sname )"		11004861	0		=			
ANR	11005276	MemberAccess	pcs -> params . separation . sep_name		11004861	0					
ANR	11005277	MemberAccess	pcs -> params . separation		11004861	0					
ANR	11005278	PtrMemberAccess	pcs -> params		11004861	0					
ANR	11005279	Identifier	pcs		11004861	0					
ANR	11005280	Identifier	params		11004861	1					
ANR	11005281	Identifier	separation		11004861	1					
ANR	11005282	Identifier	sep_name		11004861	1					
ANR	11005283	CallExpression	"name_index ( imemory , & sname )"		11004861	1					
ANR	11005284	Callee	name_index		11004861	0					
ANR	11005285	Identifier	name_index		11004861	0					
ANR	11005286	ArgumentList	imemory		11004861	1					
ANR	11005287	Argument	imemory		11004861	0					
ANR	11005288	Identifier	imemory		11004861	0					
ANR	11005289	Argument	& sname		11004861	1					
ANR	11005290	UnaryOperationExpression	& sname		11004861	0					
ANR	11005291	UnaryOperator	&		11004861	0					
ANR	11005292	Identifier	sname		11004861	1					
ANR	11005293	ExpressionStatement	pcs -> params . separation . get_colorname_string = gs_get_colorname_string	3409:4:108950:109019	11004861	26	True				
ANR	11005294	AssignmentExpression	pcs -> params . separation . get_colorname_string = gs_get_colorname_string		11004861	0		=			
ANR	11005295	MemberAccess	pcs -> params . separation . get_colorname_string		11004861	0					
ANR	11005296	MemberAccess	pcs -> params . separation		11004861	0					
ANR	11005297	PtrMemberAccess	pcs -> params		11004861	0					
ANR	11005298	Identifier	pcs		11004861	0					
ANR	11005299	Identifier	params		11004861	1					
ANR	11005300	Identifier	separation		11004861	1					
ANR	11005301	Identifier	get_colorname_string		11004861	1					
ANR	11005302	Identifier	gs_get_colorname_string		11004861	1					
ANR	11005303	ExpressionStatement	"code = array_get ( imemory , sepspace , 1 , & proc )"	3410:4:109025:109070	11004861	27	True				
ANR	11005304	AssignmentExpression	"code = array_get ( imemory , sepspace , 1 , & proc )"		11004861	0		=			
ANR	11005305	Identifier	code		11004861	0					
ANR	11005306	CallExpression	"array_get ( imemory , sepspace , 1 , & proc )"		11004861	1					
ANR	11005307	Callee	array_get		11004861	0					
ANR	11005308	Identifier	array_get		11004861	0					
ANR	11005309	ArgumentList	imemory		11004861	1					
ANR	11005310	Argument	imemory		11004861	0					
ANR	11005311	Identifier	imemory		11004861	0					
ANR	11005312	Argument	sepspace		11004861	1					
ANR	11005313	Identifier	sepspace		11004861	0					
ANR	11005314	Argument	1		11004861	2					
ANR	11005315	PrimaryExpression	1		11004861	0					
ANR	11005316	Argument	& proc		11004861	3					
ANR	11005317	UnaryOperationExpression	& proc		11004861	0					
ANR	11005318	UnaryOperator	&		11004861	0					
ANR	11005319	Identifier	proc		11004861	1					
ANR	11005320	IfStatement	if ( code < 0 )		11004861	28					
ANR	11005321	Condition	code < 0	3411:8:109080:109087	11004861	0	True				
ANR	11005322	RelationalExpression	code < 0		11004861	0		<			
ANR	11005323	Identifier	code		11004861	0					
ANR	11005324	PrimaryExpression	0		11004861	1					
ANR	11005325	ReturnStatement	return code ;	3412:8:109098:109109	11004861	1	True				
ANR	11005326	Identifier	code		11004861	0					
ANR	11005327	ExpressionStatement	istate -> colorspace [ 0 ] . procs . special . separation . layer_name = proc	3413:4:109115:109179	11004861	29	True				
ANR	11005328	AssignmentExpression	istate -> colorspace [ 0 ] . procs . special . separation . layer_name = proc		11004861	0		=			
ANR	11005329	MemberAccess	istate -> colorspace [ 0 ] . procs . special . separation . layer_name		11004861	0					
ANR	11005330	MemberAccess	istate -> colorspace [ 0 ] . procs . special . separation		11004861	0					
ANR	11005331	MemberAccess	istate -> colorspace [ 0 ] . procs . special		11004861	0					
ANR	11005332	MemberAccess	istate -> colorspace [ 0 ] . procs		11004861	0					
ANR	11005333	ArrayIndexing	istate -> colorspace [ 0 ]		11004861	0					
ANR	11005334	PtrMemberAccess	istate -> colorspace		11004861	0					
ANR	11005335	Identifier	istate		11004861	0					
ANR	11005336	Identifier	colorspace		11004861	1					
ANR	11005337	PrimaryExpression	0		11004861	1					
ANR	11005338	Identifier	procs		11004861	1					
ANR	11005339	Identifier	special		11004861	1					
ANR	11005340	Identifier	separation		11004861	1					
ANR	11005341	Identifier	layer_name		11004861	1					
ANR	11005342	Identifier	proc		11004861	1					
ANR	11005343	ExpressionStatement	"code = array_get ( imemory , sepspace , 3 , & proc )"	3414:4:109185:109230	11004861	30	True				
ANR	11005344	AssignmentExpression	"code = array_get ( imemory , sepspace , 3 , & proc )"		11004861	0		=			
ANR	11005345	Identifier	code		11004861	0					
ANR	11005346	CallExpression	"array_get ( imemory , sepspace , 3 , & proc )"		11004861	1					
ANR	11005347	Callee	array_get		11004861	0					
ANR	11005348	Identifier	array_get		11004861	0					
ANR	11005349	ArgumentList	imemory		11004861	1					
ANR	11005350	Argument	imemory		11004861	0					
ANR	11005351	Identifier	imemory		11004861	0					
ANR	11005352	Argument	sepspace		11004861	1					
ANR	11005353	Identifier	sepspace		11004861	0					
ANR	11005354	Argument	3		11004861	2					
ANR	11005355	PrimaryExpression	3		11004861	0					
ANR	11005356	Argument	& proc		11004861	3					
ANR	11005357	UnaryOperationExpression	& proc		11004861	0					
ANR	11005358	UnaryOperator	&		11004861	0					
ANR	11005359	Identifier	proc		11004861	1					
ANR	11005360	IfStatement	if ( code < 0 )		11004861	31					
ANR	11005361	Condition	code < 0	3415:8:109240:109247	11004861	0	True				
ANR	11005362	RelationalExpression	code < 0		11004861	0		<			
ANR	11005363	Identifier	code		11004861	0					
ANR	11005364	PrimaryExpression	0		11004861	1					
ANR	11005365	ReturnStatement	return code ;	3416:8:109258:109269	11004861	1	True				
ANR	11005366	Identifier	code		11004861	0					
ANR	11005367	ExpressionStatement	istate -> colorspace [ 0 ] . procs . special . separation . tint_transform = proc	3417:4:109275:109343	11004861	32	True				
ANR	11005368	AssignmentExpression	istate -> colorspace [ 0 ] . procs . special . separation . tint_transform = proc		11004861	0		=			
ANR	11005369	MemberAccess	istate -> colorspace [ 0 ] . procs . special . separation . tint_transform		11004861	0					
ANR	11005370	MemberAccess	istate -> colorspace [ 0 ] . procs . special . separation		11004861	0					
ANR	11005371	MemberAccess	istate -> colorspace [ 0 ] . procs . special		11004861	0					
ANR	11005372	MemberAccess	istate -> colorspace [ 0 ] . procs		11004861	0					
ANR	11005373	ArrayIndexing	istate -> colorspace [ 0 ]		11004861	0					
ANR	11005374	PtrMemberAccess	istate -> colorspace		11004861	0					
ANR	11005375	Identifier	istate		11004861	0					
ANR	11005376	Identifier	colorspace		11004861	1					
ANR	11005377	PrimaryExpression	0		11004861	1					
ANR	11005378	Identifier	procs		11004861	1					
ANR	11005379	Identifier	special		11004861	1					
ANR	11005380	Identifier	separation		11004861	1					
ANR	11005381	Identifier	tint_transform		11004861	1					
ANR	11005382	Identifier	proc		11004861	1					
ANR	11005383	IfStatement	if ( code >= 0 )		11004861	33					
ANR	11005384	Condition	code >= 0	3418:8:109353:109361	11004861	0	True				
ANR	11005385	RelationalExpression	code >= 0		11004861	0		>=			
ANR	11005386	Identifier	code		11004861	0					
ANR	11005387	PrimaryExpression	0		11004861	1					
ANR	11005388	ExpressionStatement	"code = gs_cspace_set_sepr_function ( pcs , pfn )"	3419:8:109372:109416	11004861	1	True				
ANR	11005389	AssignmentExpression	"code = gs_cspace_set_sepr_function ( pcs , pfn )"		11004861	0		=			
ANR	11005390	Identifier	code		11004861	0					
ANR	11005391	CallExpression	"gs_cspace_set_sepr_function ( pcs , pfn )"		11004861	1					
ANR	11005392	Callee	gs_cspace_set_sepr_function		11004861	0					
ANR	11005393	Identifier	gs_cspace_set_sepr_function		11004861	0					
ANR	11005394	ArgumentList	pcs		11004861	1					
ANR	11005395	Argument	pcs		11004861	0					
ANR	11005396	Identifier	pcs		11004861	0					
ANR	11005397	Argument	pfn		11004861	1					
ANR	11005398	Identifier	pfn		11004861	0					
ANR	11005399	IfStatement	if ( code >= 0 )		11004861	34					
ANR	11005400	Condition	code >= 0	3420:8:109426:109434	11004861	0	True				
ANR	11005401	RelationalExpression	code >= 0		11004861	0		>=			
ANR	11005402	Identifier	code		11004861	0					
ANR	11005403	PrimaryExpression	0		11004861	1					
ANR	11005404	ExpressionStatement	"code = gs_setcolorspace ( igs , pcs )"	3421:8:109445:109478	11004861	1	True				
ANR	11005405	AssignmentExpression	"code = gs_setcolorspace ( igs , pcs )"		11004861	0		=			
ANR	11005406	Identifier	code		11004861	0					
ANR	11005407	CallExpression	"gs_setcolorspace ( igs , pcs )"		11004861	1					
ANR	11005408	Callee	gs_setcolorspace		11004861	0					
ANR	11005409	Identifier	gs_setcolorspace		11004861	0					
ANR	11005410	ArgumentList	igs		11004861	1					
ANR	11005411	Argument	igs		11004861	0					
ANR	11005412	Identifier	igs		11004861	0					
ANR	11005413	Argument	pcs		11004861	1					
ANR	11005414	Identifier	pcs		11004861	0					
ANR	11005415	ExpressionStatement	"rc_decrement_only_cs ( pcs , ""setseparationspace"" )"	3423:4:109530:109577	11004861	35	True				
ANR	11005416	CallExpression	"rc_decrement_only_cs ( pcs , ""setseparationspace"" )"		11004861	0					
ANR	11005417	Callee	rc_decrement_only_cs		11004861	0					
ANR	11005418	Identifier	rc_decrement_only_cs		11004861	0					
ANR	11005419	ArgumentList	pcs		11004861	1					
ANR	11005420	Argument	pcs		11004861	0					
ANR	11005421	Identifier	pcs		11004861	0					
ANR	11005422	Argument	"""setseparationspace"""		11004861	1					
ANR	11005423	PrimaryExpression	"""setseparationspace"""		11004861	0					
ANR	11005424	IfStatement	if ( code < 0 )		11004861	36					
ANR	11005425	Condition	code < 0	3424:8:109587:109594	11004861	0	True				
ANR	11005426	RelationalExpression	code < 0		11004861	0		<			
ANR	11005427	Identifier	code		11004861	0					
ANR	11005428	PrimaryExpression	0		11004861	1					
ANR	11005429	CompoundStatement		91:18:3165:3165	11004861	1					
ANR	11005430	ExpressionStatement	istate -> colorspace [ 0 ] = cspace_old	3425:8:109607:109641	11004861	0	True				
ANR	11005431	AssignmentExpression	istate -> colorspace [ 0 ] = cspace_old		11004861	0		=			
ANR	11005432	ArrayIndexing	istate -> colorspace [ 0 ]		11004861	0					
ANR	11005433	PtrMemberAccess	istate -> colorspace		11004861	0					
ANR	11005434	Identifier	istate		11004861	0					
ANR	11005435	Identifier	colorspace		11004861	1					
ANR	11005436	PrimaryExpression	0		11004861	1					
ANR	11005437	Identifier	cspace_old		11004861	1					
ANR	11005438	ReturnStatement	return code ;	3426:8:109651:109662	11004861	1	True				
ANR	11005439	Identifier	code		11004861	0					
ANR	11005440	ExpressionStatement	cc . pattern = 0x00	3428:4:109674:109691	11004861	37	True				
ANR	11005441	AssignmentExpression	cc . pattern = 0x00		11004861	0		=			
ANR	11005442	MemberAccess	cc . pattern		11004861	0					
ANR	11005443	Identifier	cc		11004861	0					
ANR	11005444	Identifier	pattern		11004861	1					
ANR	11005445	PrimaryExpression	0x00		11004861	1					
ANR	11005446	ExpressionStatement	cc . paint . values [ 0 ] = 1.0	3429:4:109697:109721	11004861	38	True				
ANR	11005447	AssignmentExpression	cc . paint . values [ 0 ] = 1.0		11004861	0		=			
ANR	11005448	ArrayIndexing	cc . paint . values [ 0 ]		11004861	0					
ANR	11005449	MemberAccess	cc . paint . values		11004861	0					
ANR	11005450	MemberAccess	cc . paint		11004861	0					
ANR	11005451	Identifier	cc		11004861	0					
ANR	11005452	Identifier	paint		11004861	1					
ANR	11005453	Identifier	values		11004861	1					
ANR	11005454	PrimaryExpression	0		11004861	1					
ANR	11005455	PrimaryExpression	1.0		11004861	1					
ANR	11005456	ExpressionStatement	"code = gs_setcolor ( igs , & cc )"	3430:4:109727:109755	11004861	39	True				
ANR	11005457	AssignmentExpression	"code = gs_setcolor ( igs , & cc )"		11004861	0		=			
ANR	11005458	Identifier	code		11004861	0					
ANR	11005459	CallExpression	"gs_setcolor ( igs , & cc )"		11004861	1					
ANR	11005460	Callee	gs_setcolor		11004861	0					
ANR	11005461	Identifier	gs_setcolor		11004861	0					
ANR	11005462	ArgumentList	igs		11004861	1					
ANR	11005463	Argument	igs		11004861	0					
ANR	11005464	Identifier	igs		11004861	0					
ANR	11005465	Argument	& cc		11004861	1					
ANR	11005466	UnaryOperationExpression	& cc		11004861	0					
ANR	11005467	UnaryOperator	&		11004861	0					
ANR	11005468	Identifier	cc		11004861	1					
ANR	11005469	ReturnStatement	return code ;	3431:4:109761:109772	11004861	40	True				
ANR	11005470	Identifier	code		11004861	0					
ANR	11005471	ReturnType	static int		11004861	1					
ANR	11005472	Identifier	setseparationspace		11004861	2					
ANR	11005473	ParameterList	"i_ctx_t * i_ctx_p , ref * sepspace , int * stage , int * cont , int CIESubst"		11004861	3					
ANR	11005474	Parameter	i_ctx_t * i_ctx_p	3333:30:106360:106376	11004861	0	True				
ANR	11005475	ParameterType	i_ctx_t *		11004861	0					
ANR	11005476	Identifier	i_ctx_p		11004861	1					
ANR	11005477	Parameter	ref * sepspace	3333:49:106379:106391	11004861	1	True				
ANR	11005478	ParameterType	ref *		11004861	0					
ANR	11005479	Identifier	sepspace		11004861	1					
ANR	11005480	Parameter	int * stage	3333:64:106394:106403	11004861	2	True				
ANR	11005481	ParameterType	int *		11004861	0					
ANR	11005482	Identifier	stage		11004861	1					
ANR	11005483	Parameter	int * cont	3333:76:106406:106414	11004861	3	True				
ANR	11005484	ParameterType	int *		11004861	0					
ANR	11005485	Identifier	cont		11004861	1					
ANR	11005486	Parameter	int CIESubst	3333:87:106417:106428	11004861	4	True				
ANR	11005487	ParameterType	int		11004861	0					
ANR	11005488	Identifier	CIESubst		11004861	1					
ANR	11005489	CFGEntryNode	ENTRY		11004861		True				
ANR	11005490	CFGExitNode	EXIT		11004861		True				
ANR	11005491	Symbol	convert_transform		11004861						
ANR	11005492	Symbol	i_ctx_p -> language_level		11004861						
ANR	11005493	Symbol	* cc		11004861						
ANR	11005494	Symbol	pcs -> params . separation . sep_type		11004861						
ANR	11005495	Symbol	gs_error_undefined		11004861						
ANR	11005496	Symbol	& name_all		11004861						
ANR	11005497	Symbol	* pcs		11004861						
ANR	11005498	Symbol	& cc		11004861						
ANR	11005499	Symbol	istate -> colorspace [ 0 ] . procs . special . separation		11004861						
ANR	11005500	Symbol	osp		11004861						
ANR	11005501	Symbol	* istate		11004861						
ANR	11005502	Symbol	gs_cspace_set_sepr_function		11004861						
ANR	11005503	Symbol	name_from_string		11004861						
ANR	11005504	Symbol	r_has_type		11004861						
ANR	11005505	Symbol	igs		11004861						
ANR	11005506	Symbol	pacs		11004861						
ANR	11005507	Symbol	gs_currentcolorspace		11004861						
ANR	11005508	Symbol	* cc . paint . values		11004861						
ANR	11005509	Symbol	istate -> colorspace [ 0 ] . procs		11004861						
ANR	11005510	Symbol	* i_ctx_p		11004861						
ANR	11005511	Symbol	istate -> colorspace		11004861						
ANR	11005512	Symbol	gs_get_colorname_string		11004861						
ANR	11005513	Symbol	imemory		11004861						
ANR	11005514	Symbol	cont		11004861						
ANR	11005515	Symbol	NULL		11004861						
ANR	11005516	Symbol	istate -> colorspace [ 0 ] . procs . special . separation . tint_transform		11004861						
ANR	11005517	Symbol	istate -> colorspace [ 0 ] . procs . special		11004861						
ANR	11005518	Symbol	i_ctx_p		11004861						
ANR	11005519	Symbol	pfn		11004861						
ANR	11005520	Symbol	cc . paint . values		11004861						
ANR	11005521	Symbol	* * istate		11004861						
ANR	11005522	Symbol	& pcs		11004861						
ANR	11005523	Symbol	name_eq		11004861						
ANR	11005524	Symbol	cc . pattern		11004861						
ANR	11005525	Symbol	code		11004861						
ANR	11005526	Symbol	gs_setcolor		11004861						
ANR	11005527	Symbol	ref_function		11004861						
ANR	11005528	Symbol	gs_setcolorspace		11004861						
ANR	11005529	Symbol	& sname		11004861						
ANR	11005530	Symbol	sepspace		11004861						
ANR	11005531	Symbol	pcs -> params . separation		11004861						
ANR	11005532	Symbol	pcs -> params . separation . sep_name		11004861						
ANR	11005533	Symbol	name_all		11004861						
ANR	11005534	Symbol	name_index		11004861						
ANR	11005535	Symbol	pcs -> params . separation . get_colorname_string		11004861						
ANR	11005536	Symbol	& name_none		11004861						
ANR	11005537	Symbol	CIESubst		11004861						
ANR	11005538	Symbol	& proc		11004861						
ANR	11005539	Symbol	SEP_OTHER		11004861						
ANR	11005540	Symbol	* istate -> colorspace		11004861						
ANR	11005541	Symbol	cc		11004861						
ANR	11005542	Symbol	op		11004861						
ANR	11005543	Symbol	pcs		11004861						
ANR	11005544	Symbol	proc		11004861						
ANR	11005545	Symbol	* stage		11004861						
ANR	11005546	Symbol	name_none		11004861						
ANR	11005547	Symbol	name_ref		11004861						
ANR	11005548	Symbol	array_get		11004861						
ANR	11005549	Symbol	pcs -> params		11004861						
ANR	11005550	Symbol	istate -> colorspace [ 0 ] . procs . special . separation . layer_name		11004861						
ANR	11005551	Symbol	SEP_NONE		11004861						
ANR	11005552	Symbol	t_string		11004861						
ANR	11005553	Symbol	* cc . paint		11004861						
ANR	11005554	Symbol	stage		11004861						
ANR	11005555	Symbol	* cont		11004861						
ANR	11005556	Symbol	sname		11004861						
ANR	11005557	Symbol	sep_type		11004861						
ANR	11005558	Symbol	SEP_ALL		11004861						
ANR	11005559	Symbol	cc . paint		11004861						
ANR	11005560	Symbol	cspace_old		11004861						
ANR	11005561	Symbol	gs_cspace_new_Separation		11004861						
ANR	11005562	Symbol	istate		11004861						
ANR	11005563	Function	validateseparationspace	3433:0:109776:112168							
ANR	11005564	FunctionDef	"validateseparationspace (i_ctx_t * i_ctx_p , ref * * space)"		11005563	0					
ANR	11005565	CompoundStatement		3434:0:109843:112168	11005563	0					
ANR	11005566	IdentifierDeclStatement	int code = 0 ;	3435:4:109849:109861	11005563	0	True				
ANR	11005567	IdentifierDecl	code = 0		11005563	0					
ANR	11005568	IdentifierDeclType	int		11005563	0					
ANR	11005569	Identifier	code		11005563	1					
ANR	11005570	AssignmentExpression	code = 0		11005563	2		=			
ANR	11005571	Identifier	code		11005563	0					
ANR	11005572	PrimaryExpression	0		11005563	1					
ANR	11005573	IdentifierDeclStatement	ref * sepspace = * space ;	3436:4:109867:109889	11005563	1	True				
ANR	11005574	IdentifierDecl	* sepspace = * space		11005563	0					
ANR	11005575	IdentifierDeclType	ref *		11005563	0					
ANR	11005576	Identifier	sepspace		11005563	1					
ANR	11005577	AssignmentExpression	* sepspace = * space		11005563	2		=			
ANR	11005578	Identifier	sepspace		11005563	0					
ANR	11005579	UnaryOperationExpression	* space		11005563	1					
ANR	11005580	UnaryOperator	*		11005563	0					
ANR	11005581	Identifier	space		11005563	1					
ANR	11005582	IdentifierDeclStatement	"ref nameref , sref , sname , altspace , tref ;"	3437:4:109895:109935	11005563	2	True				
ANR	11005583	IdentifierDecl	nameref		11005563	0					
ANR	11005584	IdentifierDeclType	ref		11005563	0					
ANR	11005585	Identifier	nameref		11005563	1					
ANR	11005586	IdentifierDecl	sref		11005563	1					
ANR	11005587	IdentifierDeclType	ref		11005563	0					
ANR	11005588	Identifier	sref		11005563	1					
ANR	11005589	IdentifierDecl	sname		11005563	2					
ANR	11005590	IdentifierDeclType	ref		11005563	0					
ANR	11005591	Identifier	sname		11005563	1					
ANR	11005592	IdentifierDecl	altspace		11005563	3					
ANR	11005593	IdentifierDeclType	ref		11005563	0					
ANR	11005594	Identifier	altspace		11005563	1					
ANR	11005595	IdentifierDecl	tref		11005563	4					
ANR	11005596	IdentifierDeclType	ref		11005563	0					
ANR	11005597	Identifier	tref		11005563	1					
ANR	11005598	IfStatement	if ( ! r_is_array ( sepspace ) )		11005563	3					
ANR	11005599	Condition	! r_is_array ( sepspace )	3439:8:109946:109966	11005563	0	True				
ANR	11005600	UnaryOperationExpression	! r_is_array ( sepspace )		11005563	0					
ANR	11005601	UnaryOperator	!		11005563	0					
ANR	11005602	CallExpression	r_is_array ( sepspace )		11005563	1					
ANR	11005603	Callee	r_is_array		11005563	0					
ANR	11005604	Identifier	r_is_array		11005563	0					
ANR	11005605	ArgumentList	sepspace		11005563	1					
ANR	11005606	Argument	sepspace		11005563	0					
ANR	11005607	Identifier	sepspace		11005563	0					
ANR	11005608	ExpressionStatement	return_error ( gs_error_typecheck )	3440:8:109977:110009	11005563	1	True				
ANR	11005609	CallExpression	return_error ( gs_error_typecheck )		11005563	0					
ANR	11005610	Callee	return_error		11005563	0					
ANR	11005611	Identifier	return_error		11005563	0					
ANR	11005612	ArgumentList	gs_error_typecheck		11005563	1					
ANR	11005613	Argument	gs_error_typecheck		11005563	0					
ANR	11005614	Identifier	gs_error_typecheck		11005563	0					
ANR	11005615	IfStatement	if ( r_size ( sepspace ) != 4 )		11005563	4					
ANR	11005616	Condition	r_size ( sepspace ) != 4	3442:8:110080:110100	11005563	0	True				
ANR	11005617	EqualityExpression	r_size ( sepspace ) != 4		11005563	0		!=			
ANR	11005618	CallExpression	r_size ( sepspace )		11005563	0					
ANR	11005619	Callee	r_size		11005563	0					
ANR	11005620	Identifier	r_size		11005563	0					
ANR	11005621	ArgumentList	sepspace		11005563	1					
ANR	11005622	Argument	sepspace		11005563	0					
ANR	11005623	Identifier	sepspace		11005563	0					
ANR	11005624	PrimaryExpression	4		11005563	1					
ANR	11005625	ExpressionStatement	return_error ( gs_error_rangecheck )	3443:8:110111:110144	11005563	1	True				
ANR	11005626	CallExpression	return_error ( gs_error_rangecheck )		11005563	0					
ANR	11005627	Callee	return_error		11005563	0					
ANR	11005628	Identifier	return_error		11005563	0					
ANR	11005629	ArgumentList	gs_error_rangecheck		11005563	1					
ANR	11005630	Argument	gs_error_rangecheck		11005563	0					
ANR	11005631	Identifier	gs_error_rangecheck		11005563	0					
ANR	11005632	ExpressionStatement	"code = array_get ( imemory , sepspace , 1 , & sname )"	3446:4:110210:110256	11005563	5	True				
ANR	11005633	AssignmentExpression	"code = array_get ( imemory , sepspace , 1 , & sname )"		11005563	0		=			
ANR	11005634	Identifier	code		11005563	0					
ANR	11005635	CallExpression	"array_get ( imemory , sepspace , 1 , & sname )"		11005563	1					
ANR	11005636	Callee	array_get		11005563	0					
ANR	11005637	Identifier	array_get		11005563	0					
ANR	11005638	ArgumentList	imemory		11005563	1					
ANR	11005639	Argument	imemory		11005563	0					
ANR	11005640	Identifier	imemory		11005563	0					
ANR	11005641	Argument	sepspace		11005563	1					
ANR	11005642	Identifier	sepspace		11005563	0					
ANR	11005643	Argument	1		11005563	2					
ANR	11005644	PrimaryExpression	1		11005563	0					
ANR	11005645	Argument	& sname		11005563	3					
ANR	11005646	UnaryOperationExpression	& sname		11005563	0					
ANR	11005647	UnaryOperator	&		11005563	0					
ANR	11005648	Identifier	sname		11005563	1					
ANR	11005649	IfStatement	if ( code < 0 )		11005563	6					
ANR	11005650	Condition	code < 0	3447:8:110266:110273	11005563	0	True				
ANR	11005651	RelationalExpression	code < 0		11005563	0		<			
ANR	11005652	Identifier	code		11005563	0					
ANR	11005653	PrimaryExpression	0		11005563	1					
ANR	11005654	ReturnStatement	return code ;	3448:8:110284:110295	11005563	1	True				
ANR	11005655	Identifier	code		11005563	0					
ANR	11005656	IfStatement	"if ( ! r_has_type ( & sname , t_name ) )"		11005563	7					
ANR	11005657	Condition	"! r_has_type ( & sname , t_name )"	3449:8:110305:110331	11005563	0	True				
ANR	11005658	UnaryOperationExpression	"! r_has_type ( & sname , t_name )"		11005563	0					
ANR	11005659	UnaryOperator	!		11005563	0					
ANR	11005660	CallExpression	"r_has_type ( & sname , t_name )"		11005563	1					
ANR	11005661	Callee	r_has_type		11005563	0					
ANR	11005662	Identifier	r_has_type		11005563	0					
ANR	11005663	ArgumentList	& sname		11005563	1					
ANR	11005664	Argument	& sname		11005563	0					
ANR	11005665	UnaryOperationExpression	& sname		11005563	0					
ANR	11005666	UnaryOperator	&		11005563	0					
ANR	11005667	Identifier	sname		11005563	1					
ANR	11005668	Argument	t_name		11005563	1					
ANR	11005669	Identifier	t_name		11005563	0					
ANR	11005670	CompoundStatement		16:37:490:490	11005563	1					
ANR	11005671	IfStatement	"if ( ! r_has_type ( & sname , t_string ) )"		11005563	0					
ANR	11005672	Condition	"! r_has_type ( & sname , t_string )"	3450:12:110348:110376	11005563	0	True				
ANR	11005673	UnaryOperationExpression	"! r_has_type ( & sname , t_string )"		11005563	0					
ANR	11005674	UnaryOperator	!		11005563	0					
ANR	11005675	CallExpression	"r_has_type ( & sname , t_string )"		11005563	1					
ANR	11005676	Callee	r_has_type		11005563	0					
ANR	11005677	Identifier	r_has_type		11005563	0					
ANR	11005678	ArgumentList	& sname		11005563	1					
ANR	11005679	Argument	& sname		11005563	0					
ANR	11005680	UnaryOperationExpression	& sname		11005563	0					
ANR	11005681	UnaryOperator	&		11005563	0					
ANR	11005682	Identifier	sname		11005563	1					
ANR	11005683	Argument	t_string		11005563	1					
ANR	11005684	Identifier	t_string		11005563	0					
ANR	11005685	ExpressionStatement	return_error ( gs_error_typecheck )	3451:12:110391:110423	11005563	1	True				
ANR	11005686	CallExpression	return_error ( gs_error_typecheck )		11005563	0					
ANR	11005687	Callee	return_error		11005563	0					
ANR	11005688	Identifier	return_error		11005563	0					
ANR	11005689	ArgumentList	gs_error_typecheck		11005563	1					
ANR	11005690	Argument	gs_error_typecheck		11005563	0					
ANR	11005691	Identifier	gs_error_typecheck		11005563	0					
ANR	11005692	ElseStatement	else		11005563	0					
ANR	11005693	CompoundStatement		19:13:594:594	11005563	0					
ANR	11005694	ExpressionStatement	"code = name_from_string ( imemory , & sname , & sname )"	3453:12:110452:110500	11005563	0	True				
ANR	11005695	AssignmentExpression	"code = name_from_string ( imemory , & sname , & sname )"		11005563	0		=			
ANR	11005696	Identifier	code		11005563	0					
ANR	11005697	CallExpression	"name_from_string ( imemory , & sname , & sname )"		11005563	1					
ANR	11005698	Callee	name_from_string		11005563	0					
ANR	11005699	Identifier	name_from_string		11005563	0					
ANR	11005700	ArgumentList	imemory		11005563	1					
ANR	11005701	Argument	imemory		11005563	0					
ANR	11005702	Identifier	imemory		11005563	0					
ANR	11005703	Argument	& sname		11005563	1					
ANR	11005704	UnaryOperationExpression	& sname		11005563	0					
ANR	11005705	UnaryOperator	&		11005563	0					
ANR	11005706	Identifier	sname		11005563	1					
ANR	11005707	Argument	& sname		11005563	2					
ANR	11005708	UnaryOperationExpression	& sname		11005563	0					
ANR	11005709	UnaryOperator	&		11005563	0					
ANR	11005710	Identifier	sname		11005563	1					
ANR	11005711	IfStatement	if ( code < 0 )		11005563	1					
ANR	11005712	Condition	code < 0	3454:16:110518:110525	11005563	0	True				
ANR	11005713	RelationalExpression	code < 0		11005563	0		<			
ANR	11005714	Identifier	code		11005563	0					
ANR	11005715	PrimaryExpression	0		11005563	1					
ANR	11005716	ReturnStatement	return code ;	3455:16:110544:110555	11005563	1	True				
ANR	11005717	Identifier	code		11005563	0					
ANR	11005718	ExpressionStatement	"code = array_get ( imemory , sepspace , 3 , & tref )"	3460:4:110628:110673	11005563	8	True				
ANR	11005719	AssignmentExpression	"code = array_get ( imemory , sepspace , 3 , & tref )"		11005563	0		=			
ANR	11005720	Identifier	code		11005563	0					
ANR	11005721	CallExpression	"array_get ( imemory , sepspace , 3 , & tref )"		11005563	1					
ANR	11005722	Callee	array_get		11005563	0					
ANR	11005723	Identifier	array_get		11005563	0					
ANR	11005724	ArgumentList	imemory		11005563	1					
ANR	11005725	Argument	imemory		11005563	0					
ANR	11005726	Identifier	imemory		11005563	0					
ANR	11005727	Argument	sepspace		11005563	1					
ANR	11005728	Identifier	sepspace		11005563	0					
ANR	11005729	Argument	3		11005563	2					
ANR	11005730	PrimaryExpression	3		11005563	0					
ANR	11005731	Argument	& tref		11005563	3					
ANR	11005732	UnaryOperationExpression	& tref		11005563	0					
ANR	11005733	UnaryOperator	&		11005563	0					
ANR	11005734	Identifier	tref		11005563	1					
ANR	11005735	IfStatement	if ( code < 0 )		11005563	9					
ANR	11005736	Condition	code < 0	3461:8:110683:110690	11005563	0	True				
ANR	11005737	RelationalExpression	code < 0		11005563	0		<			
ANR	11005738	Identifier	code		11005563	0					
ANR	11005739	PrimaryExpression	0		11005563	1					
ANR	11005740	ReturnStatement	return code ;	3462:8:110701:110712	11005563	1	True				
ANR	11005741	Identifier	code		11005563	0					
ANR	11005742	ExpressionStatement	check_proc ( tref )	3463:4:110718:110734	11005563	10	True				
ANR	11005743	CallExpression	check_proc ( tref )		11005563	0					
ANR	11005744	Callee	check_proc		11005563	0					
ANR	11005745	Identifier	check_proc		11005563	0					
ANR	11005746	ArgumentList	tref		11005563	1					
ANR	11005747	Argument	tref		11005563	0					
ANR	11005748	Identifier	tref		11005563	0					
ANR	11005749	ExpressionStatement	"code = array_get ( imemory , sepspace , 2 , & altspace )"	3466:4:110787:110836	11005563	11	True				
ANR	11005750	AssignmentExpression	"code = array_get ( imemory , sepspace , 2 , & altspace )"		11005563	0		=			
ANR	11005751	Identifier	code		11005563	0					
ANR	11005752	CallExpression	"array_get ( imemory , sepspace , 2 , & altspace )"		11005563	1					
ANR	11005753	Callee	array_get		11005563	0					
ANR	11005754	Identifier	array_get		11005563	0					
ANR	11005755	ArgumentList	imemory		11005563	1					
ANR	11005756	Argument	imemory		11005563	0					
ANR	11005757	Identifier	imemory		11005563	0					
ANR	11005758	Argument	sepspace		11005563	1					
ANR	11005759	Identifier	sepspace		11005563	0					
ANR	11005760	Argument	2		11005563	2					
ANR	11005761	PrimaryExpression	2		11005563	0					
ANR	11005762	Argument	& altspace		11005563	3					
ANR	11005763	UnaryOperationExpression	& altspace		11005563	0					
ANR	11005764	UnaryOperator	&		11005563	0					
ANR	11005765	Identifier	altspace		11005563	1					
ANR	11005766	IfStatement	if ( code < 0 )		11005563	12					
ANR	11005767	Condition	code < 0	3467:8:110846:110853	11005563	0	True				
ANR	11005768	RelationalExpression	code < 0		11005563	0		<			
ANR	11005769	Identifier	code		11005563	0					
ANR	11005770	PrimaryExpression	0		11005563	1					
ANR	11005771	ReturnStatement	return code ;	3468:8:110864:110875	11005563	1	True				
ANR	11005772	Identifier	code		11005563	0					
ANR	11005773	IfStatement	"if ( r_has_type ( & altspace , t_name ) )"		11005563	13					
ANR	11005774	Condition	"r_has_type ( & altspace , t_name )"	3469:8:110885:110913	11005563	0	True				
ANR	11005775	CallExpression	"r_has_type ( & altspace , t_name )"		11005563	0					
ANR	11005776	Callee	r_has_type		11005563	0					
ANR	11005777	Identifier	r_has_type		11005563	0					
ANR	11005778	ArgumentList	& altspace		11005563	1					
ANR	11005779	Argument	& altspace		11005563	0					
ANR	11005780	UnaryOperationExpression	& altspace		11005563	0					
ANR	11005781	UnaryOperator	&		11005563	0					
ANR	11005782	Identifier	altspace		11005563	1					
ANR	11005783	Argument	t_name		11005563	1					
ANR	11005784	Identifier	t_name		11005563	0					
ANR	11005785	ExpressionStatement	"ref_assign ( & nameref , & altspace )"	3470:8:110924:110955	11005563	1	True				
ANR	11005786	CallExpression	"ref_assign ( & nameref , & altspace )"		11005563	0					
ANR	11005787	Callee	ref_assign		11005563	0					
ANR	11005788	Identifier	ref_assign		11005563	0					
ANR	11005789	ArgumentList	& nameref		11005563	1					
ANR	11005790	Argument	& nameref		11005563	0					
ANR	11005791	UnaryOperationExpression	& nameref		11005563	0					
ANR	11005792	UnaryOperator	&		11005563	0					
ANR	11005793	Identifier	nameref		11005563	1					
ANR	11005794	Argument	& altspace		11005563	1					
ANR	11005795	UnaryOperationExpression	& altspace		11005563	0					
ANR	11005796	UnaryOperator	&		11005563	0					
ANR	11005797	Identifier	altspace		11005563	1					
ANR	11005798	ElseStatement	else		11005563	0					
ANR	11005799	CompoundStatement		38:9:1122:1122	11005563	0					
ANR	11005800	IfStatement	if ( ! r_is_array ( & altspace ) )		11005563	0					
ANR	11005801	Condition	! r_is_array ( & altspace )	3473:12:111036:111057	11005563	0	True				
ANR	11005802	UnaryOperationExpression	! r_is_array ( & altspace )		11005563	0					
ANR	11005803	UnaryOperator	!		11005563	0					
ANR	11005804	CallExpression	r_is_array ( & altspace )		11005563	1					
ANR	11005805	Callee	r_is_array		11005563	0					
ANR	11005806	Identifier	r_is_array		11005563	0					
ANR	11005807	ArgumentList	& altspace		11005563	1					
ANR	11005808	Argument	& altspace		11005563	0					
ANR	11005809	UnaryOperationExpression	& altspace		11005563	0					
ANR	11005810	UnaryOperator	&		11005563	0					
ANR	11005811	Identifier	altspace		11005563	1					
ANR	11005812	ExpressionStatement	return_error ( gs_error_typecheck )	3474:12:111072:111104	11005563	1	True				
ANR	11005813	CallExpression	return_error ( gs_error_typecheck )		11005563	0					
ANR	11005814	Callee	return_error		11005563	0					
ANR	11005815	Identifier	return_error		11005563	0					
ANR	11005816	ArgumentList	gs_error_typecheck		11005563	1					
ANR	11005817	Argument	gs_error_typecheck		11005563	0					
ANR	11005818	Identifier	gs_error_typecheck		11005563	0					
ANR	11005819	ExpressionStatement	"code = array_get ( imemory , & altspace , 0 , & tref )"	3476:8:111156:111202	11005563	1	True				
ANR	11005820	AssignmentExpression	"code = array_get ( imemory , & altspace , 0 , & tref )"		11005563	0		=			
ANR	11005821	Identifier	code		11005563	0					
ANR	11005822	CallExpression	"array_get ( imemory , & altspace , 0 , & tref )"		11005563	1					
ANR	11005823	Callee	array_get		11005563	0					
ANR	11005824	Identifier	array_get		11005563	0					
ANR	11005825	ArgumentList	imemory		11005563	1					
ANR	11005826	Argument	imemory		11005563	0					
ANR	11005827	Identifier	imemory		11005563	0					
ANR	11005828	Argument	& altspace		11005563	1					
ANR	11005829	UnaryOperationExpression	& altspace		11005563	0					
ANR	11005830	UnaryOperator	&		11005563	0					
ANR	11005831	Identifier	altspace		11005563	1					
ANR	11005832	Argument	0		11005563	2					
ANR	11005833	PrimaryExpression	0		11005563	0					
ANR	11005834	Argument	& tref		11005563	3					
ANR	11005835	UnaryOperationExpression	& tref		11005563	0					
ANR	11005836	UnaryOperator	&		11005563	0					
ANR	11005837	Identifier	tref		11005563	1					
ANR	11005838	IfStatement	if ( code < 0 )		11005563	2					
ANR	11005839	Condition	code < 0	3477:12:111216:111223	11005563	0	True				
ANR	11005840	RelationalExpression	code < 0		11005563	0		<			
ANR	11005841	Identifier	code		11005563	0					
ANR	11005842	PrimaryExpression	0		11005563	1					
ANR	11005843	ReturnStatement	return code ;	3478:12:111238:111249	11005563	1	True				
ANR	11005844	Identifier	code		11005563	0					
ANR	11005845	IfStatement	"if ( ! r_has_type ( & tref , t_name ) )"		11005563	3					
ANR	11005846	Condition	"! r_has_type ( & tref , t_name )"	3479:12:111263:111288	11005563	0	True				
ANR	11005847	UnaryOperationExpression	"! r_has_type ( & tref , t_name )"		11005563	0					
ANR	11005848	UnaryOperator	!		11005563	0					
ANR	11005849	CallExpression	"r_has_type ( & tref , t_name )"		11005563	1					
ANR	11005850	Callee	r_has_type		11005563	0					
ANR	11005851	Identifier	r_has_type		11005563	0					
ANR	11005852	ArgumentList	& tref		11005563	1					
ANR	11005853	Argument	& tref		11005563	0					
ANR	11005854	UnaryOperationExpression	& tref		11005563	0					
ANR	11005855	UnaryOperator	&		11005563	0					
ANR	11005856	Identifier	tref		11005563	1					
ANR	11005857	Argument	t_name		11005563	1					
ANR	11005858	Identifier	t_name		11005563	0					
ANR	11005859	ExpressionStatement	return_error ( gs_error_typecheck )	3480:12:111303:111335	11005563	1	True				
ANR	11005860	CallExpression	return_error ( gs_error_typecheck )		11005563	0					
ANR	11005861	Callee	return_error		11005563	0					
ANR	11005862	Identifier	return_error		11005563	0					
ANR	11005863	ArgumentList	gs_error_typecheck		11005563	1					
ANR	11005864	Argument	gs_error_typecheck		11005563	0					
ANR	11005865	Identifier	gs_error_typecheck		11005563	0					
ANR	11005866	ExpressionStatement	"ref_assign ( & nameref , & tref )"	3481:8:111345:111372	11005563	4	True				
ANR	11005867	CallExpression	"ref_assign ( & nameref , & tref )"		11005563	0					
ANR	11005868	Callee	ref_assign		11005563	0					
ANR	11005869	Identifier	ref_assign		11005563	0					
ANR	11005870	ArgumentList	& nameref		11005563	1					
ANR	11005871	Argument	& nameref		11005563	0					
ANR	11005872	UnaryOperationExpression	& nameref		11005563	0					
ANR	11005873	UnaryOperator	&		11005563	0					
ANR	11005874	Identifier	nameref		11005563	1					
ANR	11005875	Argument	& tref		11005563	1					
ANR	11005876	UnaryOperationExpression	& tref		11005563	0					
ANR	11005877	UnaryOperator	&		11005563	0					
ANR	11005878	Identifier	tref		11005563	1					
ANR	11005879	ExpressionStatement	"name_string_ref ( imemory , & nameref , & sref )"	3485:4:111434:111475	11005563	14	True				
ANR	11005880	CallExpression	"name_string_ref ( imemory , & nameref , & sref )"		11005563	0					
ANR	11005881	Callee	name_string_ref		11005563	0					
ANR	11005882	Identifier	name_string_ref		11005563	0					
ANR	11005883	ArgumentList	imemory		11005563	1					
ANR	11005884	Argument	imemory		11005563	0					
ANR	11005885	Identifier	imemory		11005563	0					
ANR	11005886	Argument	& nameref		11005563	1					
ANR	11005887	UnaryOperationExpression	& nameref		11005563	0					
ANR	11005888	UnaryOperator	&		11005563	0					
ANR	11005889	Identifier	nameref		11005563	1					
ANR	11005890	Argument	& sref		11005563	2					
ANR	11005891	UnaryOperationExpression	& sref		11005563	0					
ANR	11005892	UnaryOperator	&		11005563	0					
ANR	11005893	Identifier	sref		11005563	1					
ANR	11005894	IfStatement	if ( r_size ( & sref ) == 7 )		11005563	15					
ANR	11005895	Condition	r_size ( & sref ) == 7	3487:8:111542:111559	11005563	0	True				
ANR	11005896	EqualityExpression	r_size ( & sref ) == 7		11005563	0		==			
ANR	11005897	CallExpression	r_size ( & sref )		11005563	0					
ANR	11005898	Callee	r_size		11005563	0					
ANR	11005899	Identifier	r_size		11005563	0					
ANR	11005900	ArgumentList	& sref		11005563	1					
ANR	11005901	Argument	& sref		11005563	0					
ANR	11005902	UnaryOperationExpression	& sref		11005563	0					
ANR	11005903	UnaryOperator	&		11005563	0					
ANR	11005904	Identifier	sref		11005563	1					
ANR	11005905	PrimaryExpression	7		11005563	1					
ANR	11005906	CompoundStatement		54:28:1718:1718	11005563	1					
ANR	11005907	IfStatement	"if ( strncmp ( ( const char * ) sref . value . const_bytes , ""Indexed"" , 7 ) == 0 )"		11005563	0					
ANR	11005908	Condition	"strncmp ( ( const char * ) sref . value . const_bytes , ""Indexed"" , 7 ) == 0"	3488:12:111576:111639	11005563	0	True				
ANR	11005909	EqualityExpression	"strncmp ( ( const char * ) sref . value . const_bytes , ""Indexed"" , 7 ) == 0"		11005563	0		==			
ANR	11005910	CallExpression	"strncmp ( ( const char * ) sref . value . const_bytes , ""Indexed"" , 7 )"		11005563	0					
ANR	11005911	Callee	strncmp		11005563	0					
ANR	11005912	Identifier	strncmp		11005563	0					
ANR	11005913	ArgumentList	( const char * ) sref . value . const_bytes		11005563	1					
ANR	11005914	Argument	( const char * ) sref . value . const_bytes		11005563	0					
ANR	11005915	CastExpression	( const char * ) sref . value . const_bytes		11005563	0					
ANR	11005916	CastTarget	const char *		11005563	0					
ANR	11005917	MemberAccess	sref . value . const_bytes		11005563	1					
ANR	11005918	MemberAccess	sref . value		11005563	0					
ANR	11005919	Identifier	sref		11005563	0					
ANR	11005920	Identifier	value		11005563	1					
ANR	11005921	Identifier	const_bytes		11005563	1					
ANR	11005922	Argument	"""Indexed"""		11005563	1					
ANR	11005923	PrimaryExpression	"""Indexed"""		11005563	0					
ANR	11005924	Argument	7		11005563	2					
ANR	11005925	PrimaryExpression	7		11005563	0					
ANR	11005926	PrimaryExpression	0		11005563	1					
ANR	11005927	ExpressionStatement	return_error ( gs_error_typecheck )	3489:12:111654:111686	11005563	1	True				
ANR	11005928	CallExpression	return_error ( gs_error_typecheck )		11005563	0					
ANR	11005929	Callee	return_error		11005563	0					
ANR	11005930	Identifier	return_error		11005563	0					
ANR	11005931	ArgumentList	gs_error_typecheck		11005563	1					
ANR	11005932	Argument	gs_error_typecheck		11005563	0					
ANR	11005933	Identifier	gs_error_typecheck		11005563	0					
ANR	11005934	IfStatement	"if ( strncmp ( ( const char * ) sref . value . const_bytes , ""Pattern"" , 7 ) == 0 )"		11005563	1					
ANR	11005935	Condition	"strncmp ( ( const char * ) sref . value . const_bytes , ""Pattern"" , 7 ) == 0"	3490:12:111700:111763	11005563	0	True				
ANR	11005936	EqualityExpression	"strncmp ( ( const char * ) sref . value . const_bytes , ""Pattern"" , 7 ) == 0"		11005563	0		==			
ANR	11005937	CallExpression	"strncmp ( ( const char * ) sref . value . const_bytes , ""Pattern"" , 7 )"		11005563	0					
ANR	11005938	Callee	strncmp		11005563	0					
ANR	11005939	Identifier	strncmp		11005563	0					
ANR	11005940	ArgumentList	( const char * ) sref . value . const_bytes		11005563	1					
ANR	11005941	Argument	( const char * ) sref . value . const_bytes		11005563	0					
ANR	11005942	CastExpression	( const char * ) sref . value . const_bytes		11005563	0					
ANR	11005943	CastTarget	const char *		11005563	0					
ANR	11005944	MemberAccess	sref . value . const_bytes		11005563	1					
ANR	11005945	MemberAccess	sref . value		11005563	0					
ANR	11005946	Identifier	sref		11005563	0					
ANR	11005947	Identifier	value		11005563	1					
ANR	11005948	Identifier	const_bytes		11005563	1					
ANR	11005949	Argument	"""Pattern"""		11005563	1					
ANR	11005950	PrimaryExpression	"""Pattern"""		11005563	0					
ANR	11005951	Argument	7		11005563	2					
ANR	11005952	PrimaryExpression	7		11005563	0					
ANR	11005953	PrimaryExpression	0		11005563	1					
ANR	11005954	ExpressionStatement	return_error ( gs_error_typecheck )	3491:12:111778:111810	11005563	1	True				
ANR	11005955	CallExpression	return_error ( gs_error_typecheck )		11005563	0					
ANR	11005956	Callee	return_error		11005563	0					
ANR	11005957	Identifier	return_error		11005563	0					
ANR	11005958	ArgumentList	gs_error_typecheck		11005563	1					
ANR	11005959	Argument	gs_error_typecheck		11005563	0					
ANR	11005960	Identifier	gs_error_typecheck		11005563	0					
ANR	11005961	IfStatement	"if ( strncmp ( ( const char * ) sref . value . const_bytes , ""DeviceN"" , 7 ) == 0 )"		11005563	2					
ANR	11005962	Condition	"strncmp ( ( const char * ) sref . value . const_bytes , ""DeviceN"" , 7 ) == 0"	3492:12:111824:111887	11005563	0	True				
ANR	11005963	EqualityExpression	"strncmp ( ( const char * ) sref . value . const_bytes , ""DeviceN"" , 7 ) == 0"		11005563	0		==			
ANR	11005964	CallExpression	"strncmp ( ( const char * ) sref . value . const_bytes , ""DeviceN"" , 7 )"		11005563	0					
ANR	11005965	Callee	strncmp		11005563	0					
ANR	11005966	Identifier	strncmp		11005563	0					
ANR	11005967	ArgumentList	( const char * ) sref . value . const_bytes		11005563	1					
ANR	11005968	Argument	( const char * ) sref . value . const_bytes		11005563	0					
ANR	11005969	CastExpression	( const char * ) sref . value . const_bytes		11005563	0					
ANR	11005970	CastTarget	const char *		11005563	0					
ANR	11005971	MemberAccess	sref . value . const_bytes		11005563	1					
ANR	11005972	MemberAccess	sref . value		11005563	0					
ANR	11005973	Identifier	sref		11005563	0					
ANR	11005974	Identifier	value		11005563	1					
ANR	11005975	Identifier	const_bytes		11005563	1					
ANR	11005976	Argument	"""DeviceN"""		11005563	1					
ANR	11005977	PrimaryExpression	"""DeviceN"""		11005563	0					
ANR	11005978	Argument	7		11005563	2					
ANR	11005979	PrimaryExpression	7		11005563	0					
ANR	11005980	PrimaryExpression	0		11005563	1					
ANR	11005981	ExpressionStatement	return_error ( gs_error_typecheck )	3493:12:111902:111934	11005563	1	True				
ANR	11005982	CallExpression	return_error ( gs_error_typecheck )		11005563	0					
ANR	11005983	Callee	return_error		11005563	0					
ANR	11005984	Identifier	return_error		11005563	0					
ANR	11005985	ArgumentList	gs_error_typecheck		11005563	1					
ANR	11005986	Argument	gs_error_typecheck		11005563	0					
ANR	11005987	Identifier	gs_error_typecheck		11005563	0					
ANR	11005988	IfStatement	"if ( r_size ( & sref ) == 9 && strncmp ( ( const char * ) sref . value . const_bytes , ""Separation"" , 9 ) == 0 )"		11005563	16					
ANR	11005989	Condition	"r_size ( & sref ) == 9 && strncmp ( ( const char * ) sref . value . const_bytes , ""Separation"" , 9 ) == 0"	3496:8:111985:112073	11005563	0	True				
ANR	11005990	AndExpression	"r_size ( & sref ) == 9 && strncmp ( ( const char * ) sref . value . const_bytes , ""Separation"" , 9 ) == 0"		11005563	0		&&			
ANR	11005991	EqualityExpression	r_size ( & sref ) == 9		11005563	0		==			
ANR	11005992	CallExpression	r_size ( & sref )		11005563	0					
ANR	11005993	Callee	r_size		11005563	0					
ANR	11005994	Identifier	r_size		11005563	0					
ANR	11005995	ArgumentList	& sref		11005563	1					
ANR	11005996	Argument	& sref		11005563	0					
ANR	11005997	UnaryOperationExpression	& sref		11005563	0					
ANR	11005998	UnaryOperator	&		11005563	0					
ANR	11005999	Identifier	sref		11005563	1					
ANR	11006000	PrimaryExpression	9		11005563	1					
ANR	11006001	EqualityExpression	"strncmp ( ( const char * ) sref . value . const_bytes , ""Separation"" , 9 ) == 0"		11005563	1		==			
ANR	11006002	CallExpression	"strncmp ( ( const char * ) sref . value . const_bytes , ""Separation"" , 9 )"		11005563	0					
ANR	11006003	Callee	strncmp		11005563	0					
ANR	11006004	Identifier	strncmp		11005563	0					
ANR	11006005	ArgumentList	( const char * ) sref . value . const_bytes		11005563	1					
ANR	11006006	Argument	( const char * ) sref . value . const_bytes		11005563	0					
ANR	11006007	CastExpression	( const char * ) sref . value . const_bytes		11005563	0					
ANR	11006008	CastTarget	const char *		11005563	0					
ANR	11006009	MemberAccess	sref . value . const_bytes		11005563	1					
ANR	11006010	MemberAccess	sref . value		11005563	0					
ANR	11006011	Identifier	sref		11005563	0					
ANR	11006012	Identifier	value		11005563	1					
ANR	11006013	Identifier	const_bytes		11005563	1					
ANR	11006014	Argument	"""Separation"""		11005563	1					
ANR	11006015	PrimaryExpression	"""Separation"""		11005563	0					
ANR	11006016	Argument	9		11005563	2					
ANR	11006017	PrimaryExpression	9		11005563	0					
ANR	11006018	PrimaryExpression	0		11005563	1					
ANR	11006019	ExpressionStatement	return_error ( gs_error_typecheck )	3497:8:112084:112116	11005563	1	True				
ANR	11006020	CallExpression	return_error ( gs_error_typecheck )		11005563	0					
ANR	11006021	Callee	return_error		11005563	0					
ANR	11006022	Identifier	return_error		11005563	0					
ANR	11006023	ArgumentList	gs_error_typecheck		11005563	1					
ANR	11006024	Argument	gs_error_typecheck		11005563	0					
ANR	11006025	Identifier	gs_error_typecheck		11005563	0					
ANR	11006026	ExpressionStatement	"ref_assign ( * space , & altspace )"	3499:4:112123:112152	11005563	17	True				
ANR	11006027	CallExpression	"ref_assign ( * space , & altspace )"		11005563	0					
ANR	11006028	Callee	ref_assign		11005563	0					
ANR	11006029	Identifier	ref_assign		11005563	0					
ANR	11006030	ArgumentList	* space		11005563	1					
ANR	11006031	Argument	* space		11005563	0					
ANR	11006032	UnaryOperationExpression	* space		11005563	0					
ANR	11006033	UnaryOperator	*		11005563	0					
ANR	11006034	Identifier	space		11005563	1					
ANR	11006035	Argument	& altspace		11005563	1					
ANR	11006036	UnaryOperationExpression	& altspace		11005563	0					
ANR	11006037	UnaryOperator	&		11005563	0					
ANR	11006038	Identifier	altspace		11005563	1					
ANR	11006039	ReturnStatement	return 0 ;	3500:4:112158:112166	11005563	18	True				
ANR	11006040	PrimaryExpression	0		11005563	0					
ANR	11006041	ReturnType	static int		11005563	1					
ANR	11006042	Identifier	validateseparationspace		11005563	2					
ANR	11006043	ParameterList	"i_ctx_t * i_ctx_p , ref * * space"		11005563	3					
ANR	11006044	Parameter	i_ctx_t * i_ctx_p	3433:35:109811:109827	11005563	0	True				
ANR	11006045	ParameterType	i_ctx_t *		11005563	0					
ANR	11006046	Identifier	i_ctx_p		11005563	1					
ANR	11006047	Parameter	ref * * space	3433:54:109830:109840	11005563	1	True				
ANR	11006048	ParameterType	ref * *		11005563	0					
ANR	11006049	Identifier	space		11005563	1					
ANR	11006050	CFGEntryNode	ENTRY		11005563		True				
ANR	11006051	CFGExitNode	EXIT		11005563		True				
ANR	11006052	Symbol	code		11005563						
ANR	11006053	Symbol	gs_error_rangecheck		11005563						
ANR	11006054	Symbol	& tref		11005563						
ANR	11006055	Symbol	nameref		11005563						
ANR	11006056	Symbol	& sname		11005563						
ANR	11006057	Symbol	sepspace		11005563						
ANR	11006058	Symbol	space		11005563						
ANR	11006059	Symbol	name_from_string		11005563						
ANR	11006060	Symbol	strncmp		11005563						
ANR	11006061	Symbol	gs_error_typecheck		11005563						
ANR	11006062	Symbol	r_has_type		11005563						
ANR	11006063	Symbol	altspace		11005563						
ANR	11006064	Symbol	& altspace		11005563						
ANR	11006065	Symbol	t_name		11005563						
ANR	11006066	Symbol	r_size		11005563						
ANR	11006067	Symbol	sref . value . const_bytes		11005563						
ANR	11006068	Symbol	imemory		11005563						
ANR	11006069	Symbol	& nameref		11005563						
ANR	11006070	Symbol	array_get		11005563						
ANR	11006071	Symbol	tref		11005563						
ANR	11006072	Symbol	& sref		11005563						
ANR	11006073	Symbol	t_string		11005563						
ANR	11006074	Symbol	sref . value		11005563						
ANR	11006075	Symbol	sref		11005563						
ANR	11006076	Symbol	i_ctx_p		11005563						
ANR	11006077	Symbol	sname		11005563						
ANR	11006078	Symbol	* space		11005563						
ANR	11006079	Symbol	r_is_array		11005563						
ANR	11006080	Function	separationalternatespace	3502:0:112170:112426							
ANR	11006081	FunctionDef	"separationalternatespace (i_ctx_t * i_ctx_p , ref * sepspace , ref * * r , int * CIESubst)"		11006080	0					
ANR	11006082	CompoundStatement		3503:0:112264:112426	11006080	0					
ANR	11006083	IdentifierDeclStatement	ref tref ;	3504:4:112270:112278	11006080	0	True				
ANR	11006084	IdentifierDecl	tref		11006080	0					
ANR	11006085	IdentifierDeclType	ref		11006080	0					
ANR	11006086	Identifier	tref		11006080	1					
ANR	11006087	IdentifierDeclStatement	int code ;	3505:4:112284:112292	11006080	1	True				
ANR	11006088	IdentifierDecl	code		11006080	0					
ANR	11006089	IdentifierDeclType	int		11006080	0					
ANR	11006090	Identifier	code		11006080	1					
ANR	11006091	ExpressionStatement	"code = array_get ( imemory , sepspace , 2 , & tref )"	3507:4:112299:112344	11006080	2	True				
ANR	11006092	AssignmentExpression	"code = array_get ( imemory , sepspace , 2 , & tref )"		11006080	0		=			
ANR	11006093	Identifier	code		11006080	0					
ANR	11006094	CallExpression	"array_get ( imemory , sepspace , 2 , & tref )"		11006080	1					
ANR	11006095	Callee	array_get		11006080	0					
ANR	11006096	Identifier	array_get		11006080	0					
ANR	11006097	ArgumentList	imemory		11006080	1					
ANR	11006098	Argument	imemory		11006080	0					
ANR	11006099	Identifier	imemory		11006080	0					
ANR	11006100	Argument	sepspace		11006080	1					
ANR	11006101	Identifier	sepspace		11006080	0					
ANR	11006102	Argument	2		11006080	2					
ANR	11006103	PrimaryExpression	2		11006080	0					
ANR	11006104	Argument	& tref		11006080	3					
ANR	11006105	UnaryOperationExpression	& tref		11006080	0					
ANR	11006106	UnaryOperator	&		11006080	0					
ANR	11006107	Identifier	tref		11006080	1					
ANR	11006108	IfStatement	if ( code < 0 )		11006080	3					
ANR	11006109	Condition	code < 0	3508:8:112354:112361	11006080	0	True				
ANR	11006110	RelationalExpression	code < 0		11006080	0		<			
ANR	11006111	Identifier	code		11006080	0					
ANR	11006112	PrimaryExpression	0		11006080	1					
ANR	11006113	ReturnStatement	return code ;	3509:8:112372:112383	11006080	1	True				
ANR	11006114	Identifier	code		11006080	0					
ANR	11006115	ExpressionStatement	"ref_assign ( * r , & tref )"	3510:4:112389:112410	11006080	4	True				
ANR	11006116	CallExpression	"ref_assign ( * r , & tref )"		11006080	0					
ANR	11006117	Callee	ref_assign		11006080	0					
ANR	11006118	Identifier	ref_assign		11006080	0					
ANR	11006119	ArgumentList	* r		11006080	1					
ANR	11006120	Argument	* r		11006080	0					
ANR	11006121	UnaryOperationExpression	* r		11006080	0					
ANR	11006122	UnaryOperator	*		11006080	0					
ANR	11006123	Identifier	r		11006080	1					
ANR	11006124	Argument	& tref		11006080	1					
ANR	11006125	UnaryOperationExpression	& tref		11006080	0					
ANR	11006126	UnaryOperator	&		11006080	0					
ANR	11006127	Identifier	tref		11006080	1					
ANR	11006128	ReturnStatement	return 0 ;	3511:4:112416:112424	11006080	5	True				
ANR	11006129	PrimaryExpression	0		11006080	0					
ANR	11006130	ReturnType	static int		11006080	1					
ANR	11006131	Identifier	separationalternatespace		11006080	2					
ANR	11006132	ParameterList	"i_ctx_t * i_ctx_p , ref * sepspace , ref * * r , int * CIESubst"		11006080	3					
ANR	11006133	Parameter	i_ctx_t * i_ctx_p	3502:36:112206:112222	11006080	0	True				
ANR	11006134	ParameterType	i_ctx_t *		11006080	0					
ANR	11006135	Identifier	i_ctx_p		11006080	1					
ANR	11006136	Parameter	ref * sepspace	3502:55:112225:112237	11006080	1	True				
ANR	11006137	ParameterType	ref *		11006080	0					
ANR	11006138	Identifier	sepspace		11006080	1					
ANR	11006139	Parameter	ref * * r	3502:70:112240:112246	11006080	2	True				
ANR	11006140	ParameterType	ref * *		11006080	0					
ANR	11006141	Identifier	r		11006080	1					
ANR	11006142	Parameter	int * CIESubst	3502:79:112249:112261	11006080	3	True				
ANR	11006143	ParameterType	int *		11006080	0					
ANR	11006144	Identifier	CIESubst		11006080	1					
ANR	11006145	CFGEntryNode	ENTRY		11006080		True				
ANR	11006146	CFGExitNode	EXIT		11006080		True				
ANR	11006147	Symbol	r		11006080						
ANR	11006148	Symbol	code		11006080						
ANR	11006149	Symbol	i_ctx_p		11006080						
ANR	11006150	Symbol	array_get		11006080						
ANR	11006151	Symbol	& tref		11006080						
ANR	11006152	Symbol	tref		11006080						
ANR	11006153	Symbol	imemory		11006080						
ANR	11006154	Symbol	sepspace		11006080						
ANR	11006155	Symbol	* r		11006080						
ANR	11006156	Symbol	CIESubst		11006080						
ANR	11006157	Function	sepdomain	3513:0:112428:112540							
ANR	11006158	FunctionDef	"sepdomain (i_ctx_t * i_ctx_p , ref * space , float * ptr)"		11006157	0					
ANR	11006159	CompoundStatement		3514:0:112492:112540	11006157	0					
ANR	11006160	ExpressionStatement	ptr [ 0 ] = 0	3515:4:112498:112508	11006157	0	True				
ANR	11006161	AssignmentExpression	ptr [ 0 ] = 0		11006157	0		=			
ANR	11006162	ArrayIndexing	ptr [ 0 ]		11006157	0					
ANR	11006163	Identifier	ptr		11006157	0					
ANR	11006164	PrimaryExpression	0		11006157	1					
ANR	11006165	PrimaryExpression	0		11006157	1					
ANR	11006166	ExpressionStatement	ptr [ 1 ] = 1	3516:4:112514:112524	11006157	1	True				
ANR	11006167	AssignmentExpression	ptr [ 1 ] = 1		11006157	0		=			
ANR	11006168	ArrayIndexing	ptr [ 1 ]		11006157	0					
ANR	11006169	Identifier	ptr		11006157	0					
ANR	11006170	PrimaryExpression	1		11006157	1					
ANR	11006171	PrimaryExpression	1		11006157	1					
ANR	11006172	ReturnStatement	return 0 ;	3517:4:112530:112538	11006157	2	True				
ANR	11006173	PrimaryExpression	0		11006157	0					
ANR	11006174	ReturnType	static int		11006157	1					
ANR	11006175	Identifier	sepdomain		11006157	2					
ANR	11006176	ParameterList	"i_ctx_t * i_ctx_p , ref * space , float * ptr"		11006157	3					
ANR	11006177	Parameter	i_ctx_t * i_ctx_p	3513:21:112449:112465	11006157	0	True				
ANR	11006178	ParameterType	i_ctx_t *		11006157	0					
ANR	11006179	Identifier	i_ctx_p		11006157	1					
ANR	11006180	Parameter	ref * space	3513:40:112468:112477	11006157	1	True				
ANR	11006181	ParameterType	ref *		11006157	0					
ANR	11006182	Identifier	space		11006157	1					
ANR	11006183	Parameter	float * ptr	3513:52:112480:112489	11006157	2	True				
ANR	11006184	ParameterType	float *		11006157	0					
ANR	11006185	Identifier	ptr		11006157	1					
ANR	11006186	CFGEntryNode	ENTRY		11006157		True				
ANR	11006187	CFGExitNode	EXIT		11006157		True				
ANR	11006188	Symbol	i_ctx_p		11006157						
ANR	11006189	Symbol	* ptr		11006157						
ANR	11006190	Symbol	space		11006157						
ANR	11006191	Symbol	ptr		11006157						
ANR	11006192	Function	seprange	3519:0:112542:112653							
ANR	11006193	FunctionDef	"seprange (i_ctx_t * i_ctx_p , ref * space , float * ptr)"		11006192	0					
ANR	11006194	CompoundStatement		3520:0:112605:112653	11006192	0					
ANR	11006195	ExpressionStatement	ptr [ 0 ] = 0	3521:4:112611:112621	11006192	0	True				
ANR	11006196	AssignmentExpression	ptr [ 0 ] = 0		11006192	0		=			
ANR	11006197	ArrayIndexing	ptr [ 0 ]		11006192	0					
ANR	11006198	Identifier	ptr		11006192	0					
ANR	11006199	PrimaryExpression	0		11006192	1					
ANR	11006200	PrimaryExpression	0		11006192	1					
ANR	11006201	ExpressionStatement	ptr [ 1 ] = 1	3522:4:112627:112637	11006192	1	True				
ANR	11006202	AssignmentExpression	ptr [ 1 ] = 1		11006192	0		=			
ANR	11006203	ArrayIndexing	ptr [ 1 ]		11006192	0					
ANR	11006204	Identifier	ptr		11006192	0					
ANR	11006205	PrimaryExpression	1		11006192	1					
ANR	11006206	PrimaryExpression	1		11006192	1					
ANR	11006207	ReturnStatement	return 0 ;	3523:4:112643:112651	11006192	2	True				
ANR	11006208	PrimaryExpression	0		11006192	0					
ANR	11006209	ReturnType	static int		11006192	1					
ANR	11006210	Identifier	seprange		11006192	2					
ANR	11006211	ParameterList	"i_ctx_t * i_ctx_p , ref * space , float * ptr"		11006192	3					
ANR	11006212	Parameter	i_ctx_t * i_ctx_p	3519:20:112562:112578	11006192	0	True				
ANR	11006213	ParameterType	i_ctx_t *		11006192	0					
ANR	11006214	Identifier	i_ctx_p		11006192	1					
ANR	11006215	Parameter	ref * space	3519:39:112581:112590	11006192	1	True				
ANR	11006216	ParameterType	ref *		11006192	0					
ANR	11006217	Identifier	space		11006192	1					
ANR	11006218	Parameter	float * ptr	3519:51:112593:112602	11006192	2	True				
ANR	11006219	ParameterType	float *		11006192	0					
ANR	11006220	Identifier	ptr		11006192	1					
ANR	11006221	CFGEntryNode	ENTRY		11006192		True				
ANR	11006222	CFGExitNode	EXIT		11006192		True				
ANR	11006223	Symbol	i_ctx_p		11006192						
ANR	11006224	Symbol	* ptr		11006192						
ANR	11006225	Symbol	space		11006192						
ANR	11006226	Symbol	ptr		11006192						
ANR	11006227	Function	septransform	3525:0:112655:114219							
ANR	11006228	FunctionDef	"septransform (i_ctx_t * i_ctx_p , ref * sepspace , int * usealternate , int * stage , int * stack_depth)"		11006227	0					
ANR	11006229	CompoundStatement		3526:0:112761:114219	11006227	0					
ANR	11006230	IdentifierDeclStatement	gx_device * dev = igs -> device ;	3527:4:112767:112796	11006227	0	True				
ANR	11006231	IdentifierDecl	* dev = igs -> device		11006227	0					
ANR	11006232	IdentifierDeclType	gx_device *		11006227	0					
ANR	11006233	Identifier	dev		11006227	1					
ANR	11006234	AssignmentExpression	* dev = igs -> device		11006227	2		=			
ANR	11006235	Identifier	dev		11006227	0					
ANR	11006236	PtrMemberAccess	igs -> device		11006227	1					
ANR	11006237	Identifier	igs		11006227	0					
ANR	11006238	Identifier	device		11006227	1					
ANR	11006239	IdentifierDeclStatement	"ref sname , proc ;"	3528:4:112802:112817	11006227	1	True				
ANR	11006240	IdentifierDecl	sname		11006227	0					
ANR	11006241	IdentifierDeclType	ref		11006227	0					
ANR	11006242	Identifier	sname		11006227	1					
ANR	11006243	IdentifierDecl	proc		11006227	1					
ANR	11006244	IdentifierDeclType	ref		11006227	0					
ANR	11006245	Identifier	proc		11006227	1					
ANR	11006246	IdentifierDeclStatement	"int code , colorant_number ;"	3529:4:112823:112848	11006227	2	True				
ANR	11006247	IdentifierDecl	code		11006227	0					
ANR	11006248	IdentifierDeclType	int		11006227	0					
ANR	11006249	Identifier	code		11006227	1					
ANR	11006250	IdentifierDecl	colorant_number		11006227	1					
ANR	11006251	IdentifierDeclType	int		11006227	0					
ANR	11006252	Identifier	colorant_number		11006227	1					
ANR	11006253	ExpressionStatement	"code = array_get ( imemory , sepspace , 1 , & sname )"	3531:4:112855:112901	11006227	3	True				
ANR	11006254	AssignmentExpression	"code = array_get ( imemory , sepspace , 1 , & sname )"		11006227	0		=			
ANR	11006255	Identifier	code		11006227	0					
ANR	11006256	CallExpression	"array_get ( imemory , sepspace , 1 , & sname )"		11006227	1					
ANR	11006257	Callee	array_get		11006227	0					
ANR	11006258	Identifier	array_get		11006227	0					
ANR	11006259	ArgumentList	imemory		11006227	1					
ANR	11006260	Argument	imemory		11006227	0					
ANR	11006261	Identifier	imemory		11006227	0					
ANR	11006262	Argument	sepspace		11006227	1					
ANR	11006263	Identifier	sepspace		11006227	0					
ANR	11006264	Argument	1		11006227	2					
ANR	11006265	PrimaryExpression	1		11006227	0					
ANR	11006266	Argument	& sname		11006227	3					
ANR	11006267	UnaryOperationExpression	& sname		11006227	0					
ANR	11006268	UnaryOperator	&		11006227	0					
ANR	11006269	Identifier	sname		11006227	1					
ANR	11006270	IfStatement	if ( code < 0 )		11006227	4					
ANR	11006271	Condition	code < 0	3532:8:112911:112918	11006227	0	True				
ANR	11006272	RelationalExpression	code < 0		11006227	0		<			
ANR	11006273	Identifier	code		11006227	0					
ANR	11006274	PrimaryExpression	0		11006227	1					
ANR	11006275	ReturnStatement	return code ;	3533:8:112929:112940	11006227	1	True				
ANR	11006276	Identifier	code		11006227	0					
ANR	11006277	IfStatement	"if ( r_has_type ( & sname , t_name ) )"		11006227	5					
ANR	11006278	Condition	"r_has_type ( & sname , t_name )"	3534:8:112950:112975	11006227	0	True				
ANR	11006279	CallExpression	"r_has_type ( & sname , t_name )"		11006227	0					
ANR	11006280	Callee	r_has_type		11006227	0					
ANR	11006281	Identifier	r_has_type		11006227	0					
ANR	11006282	ArgumentList	& sname		11006227	1					
ANR	11006283	Argument	& sname		11006227	0					
ANR	11006284	UnaryOperationExpression	& sname		11006227	0					
ANR	11006285	UnaryOperator	&		11006227	0					
ANR	11006286	Identifier	sname		11006227	1					
ANR	11006287	Argument	t_name		11006227	1					
ANR	11006288	Identifier	t_name		11006227	0					
ANR	11006289	CompoundStatement		9:36:216:216	11006227	1					
ANR	11006290	ExpressionStatement	"name_string_ref ( imemory , & sname , & sname )"	3535:8:112988:113028	11006227	0	True				
ANR	11006291	CallExpression	"name_string_ref ( imemory , & sname , & sname )"		11006227	0					
ANR	11006292	Callee	name_string_ref		11006227	0					
ANR	11006293	Identifier	name_string_ref		11006227	0					
ANR	11006294	ArgumentList	imemory		11006227	1					
ANR	11006295	Argument	imemory		11006227	0					
ANR	11006296	Identifier	imemory		11006227	0					
ANR	11006297	Argument	& sname		11006227	1					
ANR	11006298	UnaryOperationExpression	& sname		11006227	0					
ANR	11006299	UnaryOperator	&		11006227	0					
ANR	11006300	Identifier	sname		11006227	1					
ANR	11006301	Argument	& sname		11006227	2					
ANR	11006302	UnaryOperationExpression	& sname		11006227	0					
ANR	11006303	UnaryOperator	&		11006227	0					
ANR	11006304	Identifier	sname		11006227	1					
ANR	11006305	IfStatement	"if ( r_size ( & sname ) == 3 && strncmp ( ""All"" , ( const char * ) sname . value . bytes , r_size ( & sname ) ) == 0 )"		11006227	6					
ANR	11006306	Condition	"r_size ( & sname ) == 3 && strncmp ( ""All"" , ( const char * ) sname . value . bytes , r_size ( & sname ) ) == 0"	3539:8:113116:113214	11006227	0	True				
ANR	11006307	AndExpression	"r_size ( & sname ) == 3 && strncmp ( ""All"" , ( const char * ) sname . value . bytes , r_size ( & sname ) ) == 0"		11006227	0		&&			
ANR	11006308	EqualityExpression	r_size ( & sname ) == 3		11006227	0		==			
ANR	11006309	CallExpression	r_size ( & sname )		11006227	0					
ANR	11006310	Callee	r_size		11006227	0					
ANR	11006311	Identifier	r_size		11006227	0					
ANR	11006312	ArgumentList	& sname		11006227	1					
ANR	11006313	Argument	& sname		11006227	0					
ANR	11006314	UnaryOperationExpression	& sname		11006227	0					
ANR	11006315	UnaryOperator	&		11006227	0					
ANR	11006316	Identifier	sname		11006227	1					
ANR	11006317	PrimaryExpression	3		11006227	1					
ANR	11006318	EqualityExpression	"strncmp ( ""All"" , ( const char * ) sname . value . bytes , r_size ( & sname ) ) == 0"		11006227	1		==			
ANR	11006319	CallExpression	"strncmp ( ""All"" , ( const char * ) sname . value . bytes , r_size ( & sname ) )"		11006227	0					
ANR	11006320	Callee	strncmp		11006227	0					
ANR	11006321	Identifier	strncmp		11006227	0					
ANR	11006322	ArgumentList	"""All"""		11006227	1					
ANR	11006323	Argument	"""All"""		11006227	0					
ANR	11006324	PrimaryExpression	"""All"""		11006227	0					
ANR	11006325	Argument	( const char * ) sname . value . bytes		11006227	1					
ANR	11006326	CastExpression	( const char * ) sname . value . bytes		11006227	0					
ANR	11006327	CastTarget	const char *		11006227	0					
ANR	11006328	MemberAccess	sname . value . bytes		11006227	1					
ANR	11006329	MemberAccess	sname . value		11006227	0					
ANR	11006330	Identifier	sname		11006227	0					
ANR	11006331	Identifier	value		11006227	1					
ANR	11006332	Identifier	bytes		11006227	1					
ANR	11006333	Argument	r_size ( & sname )		11006227	2					
ANR	11006334	CallExpression	r_size ( & sname )		11006227	0					
ANR	11006335	Callee	r_size		11006227	0					
ANR	11006336	Identifier	r_size		11006227	0					
ANR	11006337	ArgumentList	& sname		11006227	1					
ANR	11006338	Argument	& sname		11006227	0					
ANR	11006339	UnaryOperationExpression	& sname		11006227	0					
ANR	11006340	UnaryOperator	&		11006227	0					
ANR	11006341	Identifier	sname		11006227	1					
ANR	11006342	PrimaryExpression	0		11006227	1					
ANR	11006343	CompoundStatement		15:78:455:455	11006227	1					
ANR	11006344	ExpressionStatement	* usealternate = 0	3541:8:113227:113244	11006227	0	True				
ANR	11006345	AssignmentExpression	* usealternate = 0		11006227	0		=			
ANR	11006346	UnaryOperationExpression	* usealternate		11006227	0					
ANR	11006347	UnaryOperator	*		11006227	0					
ANR	11006348	Identifier	usealternate		11006227	1					
ANR	11006349	PrimaryExpression	0		11006227	1					
ANR	11006350	ReturnStatement	return 0 ;	3542:8:113254:113262	11006227	1	True				
ANR	11006351	PrimaryExpression	0		11006227	0					
ANR	11006352	IfStatement	"if ( r_size ( & sname ) == 4 && strncmp ( ""None"" , ( const char * ) sname . value . bytes , r_size ( & sname ) ) == 0 )"		11006227	7					
ANR	11006353	Condition	"r_size ( & sname ) == 4 && strncmp ( ""None"" , ( const char * ) sname . value . bytes , r_size ( & sname ) ) == 0"	3544:8:113278:113377	11006227	0	True				
ANR	11006354	AndExpression	"r_size ( & sname ) == 4 && strncmp ( ""None"" , ( const char * ) sname . value . bytes , r_size ( & sname ) ) == 0"		11006227	0		&&			
ANR	11006355	EqualityExpression	r_size ( & sname ) == 4		11006227	0		==			
ANR	11006356	CallExpression	r_size ( & sname )		11006227	0					
ANR	11006357	Callee	r_size		11006227	0					
ANR	11006358	Identifier	r_size		11006227	0					
ANR	11006359	ArgumentList	& sname		11006227	1					
ANR	11006360	Argument	& sname		11006227	0					
ANR	11006361	UnaryOperationExpression	& sname		11006227	0					
ANR	11006362	UnaryOperator	&		11006227	0					
ANR	11006363	Identifier	sname		11006227	1					
ANR	11006364	PrimaryExpression	4		11006227	1					
ANR	11006365	EqualityExpression	"strncmp ( ""None"" , ( const char * ) sname . value . bytes , r_size ( & sname ) ) == 0"		11006227	1		==			
ANR	11006366	CallExpression	"strncmp ( ""None"" , ( const char * ) sname . value . bytes , r_size ( & sname ) )"		11006227	0					
ANR	11006367	Callee	strncmp		11006227	0					
ANR	11006368	Identifier	strncmp		11006227	0					
ANR	11006369	ArgumentList	"""None"""		11006227	1					
ANR	11006370	Argument	"""None"""		11006227	0					
ANR	11006371	PrimaryExpression	"""None"""		11006227	0					
ANR	11006372	Argument	( const char * ) sname . value . bytes		11006227	1					
ANR	11006373	CastExpression	( const char * ) sname . value . bytes		11006227	0					
ANR	11006374	CastTarget	const char *		11006227	0					
ANR	11006375	MemberAccess	sname . value . bytes		11006227	1					
ANR	11006376	MemberAccess	sname . value		11006227	0					
ANR	11006377	Identifier	sname		11006227	0					
ANR	11006378	Identifier	value		11006227	1					
ANR	11006379	Identifier	bytes		11006227	1					
ANR	11006380	Argument	r_size ( & sname )		11006227	2					
ANR	11006381	CallExpression	r_size ( & sname )		11006227	0					
ANR	11006382	Callee	r_size		11006227	0					
ANR	11006383	Identifier	r_size		11006227	0					
ANR	11006384	ArgumentList	& sname		11006227	1					
ANR	11006385	Argument	& sname		11006227	0					
ANR	11006386	UnaryOperationExpression	& sname		11006227	0					
ANR	11006387	UnaryOperator	&		11006227	0					
ANR	11006388	Identifier	sname		11006227	1					
ANR	11006389	PrimaryExpression	0		11006227	1					
ANR	11006390	CompoundStatement		20:79:618:618	11006227	1					
ANR	11006391	ExpressionStatement	* usealternate = 0	3546:8:113390:113407	11006227	0	True				
ANR	11006392	AssignmentExpression	* usealternate = 0		11006227	0		=			
ANR	11006393	UnaryOperationExpression	* usealternate		11006227	0					
ANR	11006394	UnaryOperator	*		11006227	0					
ANR	11006395	Identifier	usealternate		11006227	1					
ANR	11006396	PrimaryExpression	0		11006227	1					
ANR	11006397	ReturnStatement	return 0 ;	3547:8:113417:113425	11006227	1	True				
ANR	11006398	PrimaryExpression	0		11006227	0					
ANR	11006399	ExpressionStatement	"colorant_number = ( * dev_proc ( dev , get_color_comp_index ) ) ( dev , ( const char * ) sname . value . bytes , r_size ( & sname ) , SEPARATION_NAME )"	3555:4:113681:113825	11006227	8	True				
ANR	11006400	AssignmentExpression	"colorant_number = ( * dev_proc ( dev , get_color_comp_index ) ) ( dev , ( const char * ) sname . value . bytes , r_size ( & sname ) , SEPARATION_NAME )"		11006227	0		=			
ANR	11006401	Identifier	colorant_number		11006227	0					
ANR	11006402	CallExpression	"( * dev_proc ( dev , get_color_comp_index ) ) ( dev , ( const char * ) sname . value . bytes , r_size ( & sname ) , SEPARATION_NAME )"		11006227	1					
ANR	11006403	Callee	"* dev_proc ( dev , get_color_comp_index )"		11006227	0					
ANR	11006404	UnaryOperationExpression	"* dev_proc ( dev , get_color_comp_index )"		11006227	0					
ANR	11006405	UnaryOperator	*		11006227	0					
ANR	11006406	CallExpression	"dev_proc ( dev , get_color_comp_index )"		11006227	1					
ANR	11006407	Callee	dev_proc		11006227	0					
ANR	11006408	Identifier	dev_proc		11006227	0					
ANR	11006409	ArgumentList	dev		11006227	1					
ANR	11006410	Argument	dev		11006227	0					
ANR	11006411	Identifier	dev		11006227	0					
ANR	11006412	Argument	get_color_comp_index		11006227	1					
ANR	11006413	Identifier	get_color_comp_index		11006227	0					
ANR	11006414	ArgumentList	dev		11006227	1					
ANR	11006415	Argument	dev		11006227	0					
ANR	11006416	Identifier	dev		11006227	0					
ANR	11006417	Argument	( const char * ) sname . value . bytes		11006227	1					
ANR	11006418	CastExpression	( const char * ) sname . value . bytes		11006227	0					
ANR	11006419	CastTarget	const char *		11006227	0					
ANR	11006420	MemberAccess	sname . value . bytes		11006227	1					
ANR	11006421	MemberAccess	sname . value		11006227	0					
ANR	11006422	Identifier	sname		11006227	0					
ANR	11006423	Identifier	value		11006227	1					
ANR	11006424	Identifier	bytes		11006227	1					
ANR	11006425	Argument	r_size ( & sname )		11006227	2					
ANR	11006426	CallExpression	r_size ( & sname )		11006227	0					
ANR	11006427	Callee	r_size		11006227	0					
ANR	11006428	Identifier	r_size		11006227	0					
ANR	11006429	ArgumentList	& sname		11006227	1					
ANR	11006430	Argument	& sname		11006227	0					
ANR	11006431	UnaryOperationExpression	& sname		11006227	0					
ANR	11006432	UnaryOperator	&		11006227	0					
ANR	11006433	Identifier	sname		11006227	1					
ANR	11006434	Argument	SEPARATION_NAME		11006227	3					
ANR	11006435	Identifier	SEPARATION_NAME		11006227	0					
ANR	11006436	IfStatement	if ( colorant_number >= 0 )		11006227	9					
ANR	11006437	Condition	colorant_number >= 0	3557:8:113835:113854	11006227	0	True				
ANR	11006438	RelationalExpression	colorant_number >= 0		11006227	0		>=			
ANR	11006439	Identifier	colorant_number		11006227	0					
ANR	11006440	PrimaryExpression	0		11006227	1					
ANR	11006441	CompoundStatement		32:30:1095:1095	11006227	1					
ANR	11006442	ExpressionStatement	* usealternate = 0	3558:8:113897:113914	11006227	0	True				
ANR	11006443	AssignmentExpression	* usealternate = 0		11006227	0		=			
ANR	11006444	UnaryOperationExpression	* usealternate		11006227	0					
ANR	11006445	UnaryOperator	*		11006227	0					
ANR	11006446	Identifier	usealternate		11006227	1					
ANR	11006447	PrimaryExpression	0		11006227	1					
ANR	11006448	ElseStatement	else		11006227	0					
ANR	11006449	ExpressionStatement	* usealternate = 1	3560:8:113935:113952	11006227	0	True				
ANR	11006450	AssignmentExpression	* usealternate = 1		11006227	0		=			
ANR	11006451	UnaryOperationExpression	* usealternate		11006227	0					
ANR	11006452	UnaryOperator	*		11006227	0					
ANR	11006453	Identifier	usealternate		11006227	1					
ANR	11006454	PrimaryExpression	1		11006227	1					
ANR	11006455	IfStatement	if ( * usealternate && * stage == 0 )		11006227	10					
ANR	11006456	Condition	* usealternate && * stage == 0	3562:8:113963:113990	11006227	0	True				
ANR	11006457	AndExpression	* usealternate && * stage == 0		11006227	0		&&			
ANR	11006458	UnaryOperationExpression	* usealternate		11006227	0					
ANR	11006459	UnaryOperator	*		11006227	0					
ANR	11006460	Identifier	usealternate		11006227	1					
ANR	11006461	EqualityExpression	* stage == 0		11006227	1		==			
ANR	11006462	UnaryOperationExpression	* stage		11006227	0					
ANR	11006463	UnaryOperator	*		11006227	0					
ANR	11006464	Identifier	stage		11006227	1					
ANR	11006465	PrimaryExpression	0		11006227	1					
ANR	11006466	CompoundStatement		37:38:1231:1231	11006227	1					
ANR	11006467	ExpressionStatement	( * stage ) ++	3563:8:114003:114013	11006227	0	True				
ANR	11006468	PostIncDecOperationExpression	( * stage ) ++		11006227	0					
ANR	11006469	UnaryOperationExpression	* stage		11006227	0					
ANR	11006470	UnaryOperator	*		11006227	0					
ANR	11006471	Identifier	stage		11006227	1					
ANR	11006472	IncDec	++		11006227	1					
ANR	11006473	ExpressionStatement	esp ++	3564:8:114023:114028	11006227	1	True				
ANR	11006474	PostIncDecOperationExpression	esp ++		11006227	0					
ANR	11006475	Identifier	esp		11006227	0					
ANR	11006476	IncDec	++		11006227	1					
ANR	11006477	ExpressionStatement	"code = array_get ( imemory , sepspace , 3 , & proc )"	3565:8:114038:114083	11006227	2	True				
ANR	11006478	AssignmentExpression	"code = array_get ( imemory , sepspace , 3 , & proc )"		11006227	0		=			
ANR	11006479	Identifier	code		11006227	0					
ANR	11006480	CallExpression	"array_get ( imemory , sepspace , 3 , & proc )"		11006227	1					
ANR	11006481	Callee	array_get		11006227	0					
ANR	11006482	Identifier	array_get		11006227	0					
ANR	11006483	ArgumentList	imemory		11006227	1					
ANR	11006484	Argument	imemory		11006227	0					
ANR	11006485	Identifier	imemory		11006227	0					
ANR	11006486	Argument	sepspace		11006227	1					
ANR	11006487	Identifier	sepspace		11006227	0					
ANR	11006488	Argument	3		11006227	2					
ANR	11006489	PrimaryExpression	3		11006227	0					
ANR	11006490	Argument	& proc		11006227	3					
ANR	11006491	UnaryOperationExpression	& proc		11006227	0					
ANR	11006492	UnaryOperator	&		11006227	0					
ANR	11006493	Identifier	proc		11006227	1					
ANR	11006494	IfStatement	if ( code < 0 )		11006227	3					
ANR	11006495	Condition	code < 0	3566:12:114097:114104	11006227	0	True				
ANR	11006496	RelationalExpression	code < 0		11006227	0		<			
ANR	11006497	Identifier	code		11006227	0					
ANR	11006498	PrimaryExpression	0		11006227	1					
ANR	11006499	ReturnStatement	return code ;	3567:12:114119:114130	11006227	1	True				
ANR	11006500	Identifier	code		11006227	0					
ANR	11006501	ExpressionStatement	* esp = proc	3568:8:114140:114151	11006227	4	True				
ANR	11006502	AssignmentExpression	* esp = proc		11006227	0		=			
ANR	11006503	UnaryOperationExpression	* esp		11006227	0					
ANR	11006504	UnaryOperator	*		11006227	0					
ANR	11006505	Identifier	esp		11006227	1					
ANR	11006506	Identifier	proc		11006227	1					
ANR	11006507	ReturnStatement	return o_push_estack ;	3569:8:114161:114181	11006227	5	True				
ANR	11006508	Identifier	o_push_estack		11006227	0					
ANR	11006509	ExpressionStatement	* stage = 0	3571:4:114193:114203	11006227	11	True				
ANR	11006510	AssignmentExpression	* stage = 0		11006227	0		=			
ANR	11006511	UnaryOperationExpression	* stage		11006227	0					
ANR	11006512	UnaryOperator	*		11006227	0					
ANR	11006513	Identifier	stage		11006227	1					
ANR	11006514	PrimaryExpression	0		11006227	1					
ANR	11006515	ReturnStatement	return 0 ;	3572:4:114209:114217	11006227	12	True				
ANR	11006516	PrimaryExpression	0		11006227	0					
ANR	11006517	ReturnType	static int		11006227	1					
ANR	11006518	Identifier	septransform		11006227	2					
ANR	11006519	ParameterList	"i_ctx_t * i_ctx_p , ref * sepspace , int * usealternate , int * stage , int * stack_depth"		11006227	3					
ANR	11006520	Parameter	i_ctx_t * i_ctx_p	3525:24:112679:112694	11006227	0	True				
ANR	11006521	ParameterType	i_ctx_t *		11006227	0					
ANR	11006522	Identifier	i_ctx_p		11006227	1					
ANR	11006523	Parameter	ref * sepspace	3525:42:112697:112709	11006227	1	True				
ANR	11006524	ParameterType	ref *		11006227	0					
ANR	11006525	Identifier	sepspace		11006227	1					
ANR	11006526	Parameter	int * usealternate	3525:57:112712:112728	11006227	2	True				
ANR	11006527	ParameterType	int *		11006227	0					
ANR	11006528	Identifier	usealternate		11006227	1					
ANR	11006529	Parameter	int * stage	3525:76:112731:112740	11006227	3	True				
ANR	11006530	ParameterType	int *		11006227	0					
ANR	11006531	Identifier	stage		11006227	1					
ANR	11006532	Parameter	int * stack_depth	3525:88:112743:112758	11006227	4	True				
ANR	11006533	ParameterType	int *		11006227	0					
ANR	11006534	Identifier	stack_depth		11006227	1					
ANR	11006535	CFGEntryNode	ENTRY		11006227		True				
ANR	11006536	CFGExitNode	EXIT		11006227		True				
ANR	11006537	Symbol	* igs		11006227						
ANR	11006538	Symbol	stack_depth		11006227						
ANR	11006539	Symbol	code		11006227						
ANR	11006540	Symbol	esp		11006227						
ANR	11006541	Symbol	* dev_proc		11006227						
ANR	11006542	Symbol	& sname		11006227						
ANR	11006543	Symbol	sepspace		11006227						
ANR	11006544	Symbol	strncmp		11006227						
ANR	11006545	Symbol	r_has_type		11006227						
ANR	11006546	Symbol	* esp		11006227						
ANR	11006547	Symbol	dev		11006227						
ANR	11006548	Symbol	igs		11006227						
ANR	11006549	Symbol	t_name		11006227						
ANR	11006550	Symbol	dev_proc		11006227						
ANR	11006551	Symbol	r_size		11006227						
ANR	11006552	Symbol	imemory		11006227						
ANR	11006553	Symbol	& proc		11006227						
ANR	11006554	Symbol	o_push_estack		11006227						
ANR	11006555	Symbol	proc		11006227						
ANR	11006556	Symbol	get_color_comp_index		11006227						
ANR	11006557	Symbol	* stage		11006227						
ANR	11006558	Symbol	array_get		11006227						
ANR	11006559	Symbol	sname . value . bytes		11006227						
ANR	11006560	Symbol	usealternate		11006227						
ANR	11006561	Symbol	SEPARATION_NAME		11006227						
ANR	11006562	Symbol	colorant_number		11006227						
ANR	11006563	Symbol	stage		11006227						
ANR	11006564	Symbol	sname . value		11006227						
ANR	11006565	Symbol	* usealternate		11006227						
ANR	11006566	Symbol	i_ctx_p		11006227						
ANR	11006567	Symbol	sname		11006227						
ANR	11006568	Symbol	"* dev_proc ( dev , get_color_comp_index )"		11006227						
ANR	11006569	Symbol	igs -> device		11006227						
ANR	11006570	Function	sepbasecolor	3574:0:114221:115369							
ANR	11006571	FunctionDef	"sepbasecolor (i_ctx_t * i_ctx_p , ref * space , int base , int * stage , int * cont , int * stack_depth)"		11006570	0					
ANR	11006572	CompoundStatement		3575:0:114327:115369	11006570	0					
ANR	11006573	IdentifierDeclStatement	os_ptr op = osp ;	3576:4:114333:114348	11006570	0	True				
ANR	11006574	IdentifierDecl	op = osp		11006570	0					
ANR	11006575	IdentifierDeclType	os_ptr		11006570	0					
ANR	11006576	Identifier	op		11006570	1					
ANR	11006577	AssignmentExpression	op = osp		11006570	2		=			
ANR	11006578	Identifier	osp		11006570	0					
ANR	11006579	Identifier	osp		11006570	1					
ANR	11006580	IdentifierDeclStatement	"int use , code ;"	3577:4:114387:114400	11006570	1	True				
ANR	11006581	IdentifierDecl	use		11006570	0					
ANR	11006582	IdentifierDeclType	int		11006570	0					
ANR	11006583	Identifier	use		11006570	1					
ANR	11006584	IdentifierDecl	code		11006570	1					
ANR	11006585	IdentifierDeclType	int		11006570	0					
ANR	11006586	Identifier	code		11006570	1					
ANR	11006587	ExpressionStatement	"code = septransform ( i_ctx_p , space , & use , stage , stack_depth )"	3579:8:114411:114472	11006570	2	True				
ANR	11006588	AssignmentExpression	"code = septransform ( i_ctx_p , space , & use , stage , stack_depth )"		11006570	0		=			
ANR	11006589	Identifier	code		11006570	0					
ANR	11006590	CallExpression	"septransform ( i_ctx_p , space , & use , stage , stack_depth )"		11006570	1					
ANR	11006591	Callee	septransform		11006570	0					
ANR	11006592	Identifier	septransform		11006570	0					
ANR	11006593	ArgumentList	i_ctx_p		11006570	1					
ANR	11006594	Argument	i_ctx_p		11006570	0					
ANR	11006595	Identifier	i_ctx_p		11006570	0					
ANR	11006596	Argument	space		11006570	1					
ANR	11006597	Identifier	space		11006570	0					
ANR	11006598	Argument	& use		11006570	2					
ANR	11006599	UnaryOperationExpression	& use		11006570	0					
ANR	11006600	UnaryOperator	&		11006570	0					
ANR	11006601	Identifier	use		11006570	1					
ANR	11006602	Argument	stage		11006570	3					
ANR	11006603	Identifier	stage		11006570	0					
ANR	11006604	Argument	stack_depth		11006570	4					
ANR	11006605	Identifier	stack_depth		11006570	0					
ANR	11006606	IfStatement	if ( code != 0 )		11006570	3					
ANR	11006607	Condition	code != 0	3580:12:114486:114494	11006570	0	True				
ANR	11006608	EqualityExpression	code != 0		11006570	0		!=			
ANR	11006609	Identifier	code		11006570	0					
ANR	11006610	PrimaryExpression	0		11006570	1					
ANR	11006611	ReturnStatement	return code ;	3581:12:114509:114520	11006570	1	True				
ANR	11006612	Identifier	code		11006570	0					
ANR	11006613	IfStatement	if ( ! use )		11006570	4					
ANR	11006614	Condition	! use	3582:12:114534:114537	11006570	0	True				
ANR	11006615	UnaryOperationExpression	! use		11006570	0					
ANR	11006616	UnaryOperator	!		11006570	0					
ANR	11006617	Identifier	use		11006570	1					
ANR	11006618	CompoundStatement		8:18:212:212	11006570	1					
ANR	11006619	ExpressionStatement	* stage = 0	3583:12:114554:114564	11006570	0	True				
ANR	11006620	AssignmentExpression	* stage = 0		11006570	0		=			
ANR	11006621	UnaryOperationExpression	* stage		11006570	0					
ANR	11006622	UnaryOperator	*		11006570	0					
ANR	11006623	Identifier	stage		11006570	1					
ANR	11006624	PrimaryExpression	0		11006570	1					
ANR	11006625	ExpressionStatement	* cont = 0	3584:12:114578:114587	11006570	1	True				
ANR	11006626	AssignmentExpression	* cont = 0		11006570	0		=			
ANR	11006627	UnaryOperationExpression	* cont		11006570	0					
ANR	11006628	UnaryOperator	*		11006570	0					
ANR	11006629	Identifier	cont		11006570	1					
ANR	11006630	PrimaryExpression	0		11006570	1					
ANR	11006631	ExpressionStatement	pop ( 1 )	3585:12:114601:114607	11006570	2	True				
ANR	11006632	CallExpression	pop ( 1 )		11006570	0					
ANR	11006633	Callee	pop		11006570	0					
ANR	11006634	Identifier	pop		11006570	0					
ANR	11006635	ArgumentList	1		11006570	1					
ANR	11006636	Argument	1		11006570	0					
ANR	11006637	PrimaryExpression	1		11006570	0					
ANR	11006638	ExpressionStatement	op = osp	3586:12:114621:114629	11006570	3	True				
ANR	11006639	AssignmentExpression	op = osp		11006570	0		=			
ANR	11006640	Identifier	op		11006570	0					
ANR	11006641	Identifier	osp		11006570	1					
ANR	11006642	SwitchStatement	switch ( base )		11006570	4					
ANR	11006643	Condition	base	3587:19:114650:114653	11006570	0	True				
ANR	11006644	Identifier	base		11006570	0					
ANR	11006645	CompoundStatement		13:25:328:328	11006570	1					
ANR	11006646	Label	case 0 :	3588:16:114674:114680	11006570	0	True				
ANR	11006647	ExpressionStatement	push ( 1 )	3589:20:114702:114709	11006570	1	True				
ANR	11006648	CallExpression	push ( 1 )		11006570	0					
ANR	11006649	Callee	push		11006570	0					
ANR	11006650	Identifier	push		11006570	0					
ANR	11006651	ArgumentList	1		11006570	1					
ANR	11006652	Argument	1		11006570	0					
ANR	11006653	PrimaryExpression	1		11006570	0					
ANR	11006654	ExpressionStatement	"make_real ( op , 0.0 )"	3590:20:114731:114749	11006570	2	True				
ANR	11006655	CallExpression	"make_real ( op , 0.0 )"		11006570	0					
ANR	11006656	Callee	make_real		11006570	0					
ANR	11006657	Identifier	make_real		11006570	0					
ANR	11006658	ArgumentList	op		11006570	1					
ANR	11006659	Argument	op		11006570	0					
ANR	11006660	Identifier	op		11006570	0					
ANR	11006661	Argument	0.0		11006570	1					
ANR	11006662	PrimaryExpression	0.0		11006570	0					
ANR	11006663	BreakStatement	break ;	3591:20:114771:114776	11006570	3	True				
ANR	11006664	Label	case 1 :	3592:16:114794:114800	11006570	4	True				
ANR	11006665	Label	case 2 :	3593:16:114818:114824	11006570	5	True				
ANR	11006666	ExpressionStatement	push ( 3 )	3594:20:114846:114853	11006570	6	True				
ANR	11006667	CallExpression	push ( 3 )		11006570	0					
ANR	11006668	Callee	push		11006570	0					
ANR	11006669	Identifier	push		11006570	0					
ANR	11006670	ArgumentList	3		11006570	1					
ANR	11006671	Argument	3		11006570	0					
ANR	11006672	PrimaryExpression	3		11006570	0					
ANR	11006673	ExpressionStatement	"make_real ( & op [ - 2 ] , 0.0 )"	3595:20:114875:114898	11006570	7	True				
ANR	11006674	CallExpression	"make_real ( & op [ - 2 ] , 0.0 )"		11006570	0					
ANR	11006675	Callee	make_real		11006570	0					
ANR	11006676	Identifier	make_real		11006570	0					
ANR	11006677	ArgumentList	& op [ - 2 ]		11006570	1					
ANR	11006678	Argument	& op [ - 2 ]		11006570	0					
ANR	11006679	UnaryOperationExpression	& op [ - 2 ]		11006570	0					
ANR	11006680	UnaryOperator	&		11006570	0					
ANR	11006681	ArrayIndexing	op [ - 2 ]		11006570	1					
ANR	11006682	Identifier	op		11006570	0					
ANR	11006683	UnaryOperationExpression	- 2		11006570	1					
ANR	11006684	UnaryOperator	-		11006570	0					
ANR	11006685	PrimaryExpression	2		11006570	1					
ANR	11006686	Argument	0.0		11006570	1					
ANR	11006687	PrimaryExpression	0.0		11006570	0					
ANR	11006688	ExpressionStatement	"make_real ( & op [ - 1 ] , 0.0 )"	3596:20:114920:114943	11006570	8	True				
ANR	11006689	CallExpression	"make_real ( & op [ - 1 ] , 0.0 )"		11006570	0					
ANR	11006690	Callee	make_real		11006570	0					
ANR	11006691	Identifier	make_real		11006570	0					
ANR	11006692	ArgumentList	& op [ - 1 ]		11006570	1					
ANR	11006693	Argument	& op [ - 1 ]		11006570	0					
ANR	11006694	UnaryOperationExpression	& op [ - 1 ]		11006570	0					
ANR	11006695	UnaryOperator	&		11006570	0					
ANR	11006696	ArrayIndexing	op [ - 1 ]		11006570	1					
ANR	11006697	Identifier	op		11006570	0					
ANR	11006698	UnaryOperationExpression	- 1		11006570	1					
ANR	11006699	UnaryOperator	-		11006570	0					
ANR	11006700	PrimaryExpression	1		11006570	1					
ANR	11006701	Argument	0.0		11006570	1					
ANR	11006702	PrimaryExpression	0.0		11006570	0					
ANR	11006703	ExpressionStatement	"make_real ( op , 0.0 )"	3597:20:114965:114983	11006570	9	True				
ANR	11006704	CallExpression	"make_real ( op , 0.0 )"		11006570	0					
ANR	11006705	Callee	make_real		11006570	0					
ANR	11006706	Identifier	make_real		11006570	0					
ANR	11006707	ArgumentList	op		11006570	1					
ANR	11006708	Argument	op		11006570	0					
ANR	11006709	Identifier	op		11006570	0					
ANR	11006710	Argument	0.0		11006570	1					
ANR	11006711	PrimaryExpression	0.0		11006570	0					
ANR	11006712	BreakStatement	break ;	3598:20:115005:115010	11006570	10	True				
ANR	11006713	Label	case 3 :	3599:16:115028:115034	11006570	11	True				
ANR	11006714	ExpressionStatement	push ( 4 )	3600:20:115056:115063	11006570	12	True				
ANR	11006715	CallExpression	push ( 4 )		11006570	0					
ANR	11006716	Callee	push		11006570	0					
ANR	11006717	Identifier	push		11006570	0					
ANR	11006718	ArgumentList	4		11006570	1					
ANR	11006719	Argument	4		11006570	0					
ANR	11006720	PrimaryExpression	4		11006570	0					
ANR	11006721	ExpressionStatement	"make_real ( & op [ - 3 ] , 0.0 )"	3601:20:115085:115108	11006570	13	True				
ANR	11006722	CallExpression	"make_real ( & op [ - 3 ] , 0.0 )"		11006570	0					
ANR	11006723	Callee	make_real		11006570	0					
ANR	11006724	Identifier	make_real		11006570	0					
ANR	11006725	ArgumentList	& op [ - 3 ]		11006570	1					
ANR	11006726	Argument	& op [ - 3 ]		11006570	0					
ANR	11006727	UnaryOperationExpression	& op [ - 3 ]		11006570	0					
ANR	11006728	UnaryOperator	&		11006570	0					
ANR	11006729	ArrayIndexing	op [ - 3 ]		11006570	1					
ANR	11006730	Identifier	op		11006570	0					
ANR	11006731	UnaryOperationExpression	- 3		11006570	1					
ANR	11006732	UnaryOperator	-		11006570	0					
ANR	11006733	PrimaryExpression	3		11006570	1					
ANR	11006734	Argument	0.0		11006570	1					
ANR	11006735	PrimaryExpression	0.0		11006570	0					
ANR	11006736	ExpressionStatement	"make_real ( & op [ - 2 ] , 0.0 )"	3602:20:115130:115153	11006570	14	True				
ANR	11006737	CallExpression	"make_real ( & op [ - 2 ] , 0.0 )"		11006570	0					
ANR	11006738	Callee	make_real		11006570	0					
ANR	11006739	Identifier	make_real		11006570	0					
ANR	11006740	ArgumentList	& op [ - 2 ]		11006570	1					
ANR	11006741	Argument	& op [ - 2 ]		11006570	0					
ANR	11006742	UnaryOperationExpression	& op [ - 2 ]		11006570	0					
ANR	11006743	UnaryOperator	&		11006570	0					
ANR	11006744	ArrayIndexing	op [ - 2 ]		11006570	1					
ANR	11006745	Identifier	op		11006570	0					
ANR	11006746	UnaryOperationExpression	- 2		11006570	1					
ANR	11006747	UnaryOperator	-		11006570	0					
ANR	11006748	PrimaryExpression	2		11006570	1					
ANR	11006749	Argument	0.0		11006570	1					
ANR	11006750	PrimaryExpression	0.0		11006570	0					
ANR	11006751	ExpressionStatement	"make_real ( & op [ - 1 ] , 0.0 )"	3603:20:115175:115198	11006570	15	True				
ANR	11006752	CallExpression	"make_real ( & op [ - 1 ] , 0.0 )"		11006570	0					
ANR	11006753	Callee	make_real		11006570	0					
ANR	11006754	Identifier	make_real		11006570	0					
ANR	11006755	ArgumentList	& op [ - 1 ]		11006570	1					
ANR	11006756	Argument	& op [ - 1 ]		11006570	0					
ANR	11006757	UnaryOperationExpression	& op [ - 1 ]		11006570	0					
ANR	11006758	UnaryOperator	&		11006570	0					
ANR	11006759	ArrayIndexing	op [ - 1 ]		11006570	1					
ANR	11006760	Identifier	op		11006570	0					
ANR	11006761	UnaryOperationExpression	- 1		11006570	1					
ANR	11006762	UnaryOperator	-		11006570	0					
ANR	11006763	PrimaryExpression	1		11006570	1					
ANR	11006764	Argument	0.0		11006570	1					
ANR	11006765	PrimaryExpression	0.0		11006570	0					
ANR	11006766	ExpressionStatement	"make_real ( op , 0.0 )"	3604:20:115220:115238	11006570	16	True				
ANR	11006767	CallExpression	"make_real ( op , 0.0 )"		11006570	0					
ANR	11006768	Callee	make_real		11006570	0					
ANR	11006769	Identifier	make_real		11006570	0					
ANR	11006770	ArgumentList	op		11006570	1					
ANR	11006771	Argument	op		11006570	0					
ANR	11006772	Identifier	op		11006570	0					
ANR	11006773	Argument	0.0		11006570	1					
ANR	11006774	PrimaryExpression	0.0		11006570	0					
ANR	11006775	BreakStatement	break ;	3605:20:115260:115265	11006570	17	True				
ANR	11006776	ElseStatement	else		11006570	0					
ANR	11006777	CompoundStatement		33:15:968:968	11006570	0					
ANR	11006778	ExpressionStatement	* stage = 0	3608:12:115310:115320	11006570	0	True				
ANR	11006779	AssignmentExpression	* stage = 0		11006570	0		=			
ANR	11006780	UnaryOperationExpression	* stage		11006570	0					
ANR	11006781	UnaryOperator	*		11006570	0					
ANR	11006782	Identifier	stage		11006570	1					
ANR	11006783	PrimaryExpression	0		11006570	1					
ANR	11006784	ExpressionStatement	* cont = 1	3609:12:115334:115343	11006570	1	True				
ANR	11006785	AssignmentExpression	* cont = 1		11006570	0		=			
ANR	11006786	UnaryOperationExpression	* cont		11006570	0					
ANR	11006787	UnaryOperator	*		11006570	0					
ANR	11006788	Identifier	cont		11006570	1					
ANR	11006789	PrimaryExpression	1		11006570	1					
ANR	11006790	ReturnStatement	return 0 ;	3611:4:115359:115367	11006570	5	True				
ANR	11006791	PrimaryExpression	0		11006570	0					
ANR	11006792	ReturnType	static int		11006570	1					
ANR	11006793	Identifier	sepbasecolor		11006570	2					
ANR	11006794	ParameterList	"i_ctx_t * i_ctx_p , ref * space , int base , int * stage , int * cont , int * stack_depth"		11006570	3					
ANR	11006795	Parameter	i_ctx_t * i_ctx_p	3574:24:114245:114261	11006570	0	True				
ANR	11006796	ParameterType	i_ctx_t *		11006570	0					
ANR	11006797	Identifier	i_ctx_p		11006570	1					
ANR	11006798	Parameter	ref * space	3574:43:114264:114273	11006570	1	True				
ANR	11006799	ParameterType	ref *		11006570	0					
ANR	11006800	Identifier	space		11006570	1					
ANR	11006801	Parameter	int base	3574:55:114276:114283	11006570	2	True				
ANR	11006802	ParameterType	int		11006570	0					
ANR	11006803	Identifier	base		11006570	1					
ANR	11006804	Parameter	int * stage	3574:65:114286:114295	11006570	3	True				
ANR	11006805	ParameterType	int *		11006570	0					
ANR	11006806	Identifier	stage		11006570	1					
ANR	11006807	Parameter	int * cont	3574:77:114298:114306	11006570	4	True				
ANR	11006808	ParameterType	int *		11006570	0					
ANR	11006809	Identifier	cont		11006570	1					
ANR	11006810	Parameter	int * stack_depth	3574:88:114309:114324	11006570	5	True				
ANR	11006811	ParameterType	int *		11006570	0					
ANR	11006812	Identifier	stack_depth		11006570	1					
ANR	11006813	CFGEntryNode	ENTRY		11006570		True				
ANR	11006814	CFGExitNode	EXIT		11006570		True				
ANR	11006815	Symbol	stack_depth		11006570						
ANR	11006816	Symbol	op		11006570						
ANR	11006817	Symbol	code		11006570						
ANR	11006818	Symbol	* stage		11006570						
ANR	11006819	Symbol	use		11006570						
ANR	11006820	Symbol	septransform		11006570						
ANR	11006821	Symbol	& use		11006570						
ANR	11006822	Symbol	osp		11006570						
ANR	11006823	Symbol	space		11006570						
ANR	11006824	Symbol	stage		11006570						
ANR	11006825	Symbol	* cont		11006570						
ANR	11006826	Symbol	i_ctx_p		11006570						
ANR	11006827	Symbol	cont		11006570						
ANR	11006828	Symbol	base		11006570						
ANR	11006829	Function	sepvalidate	3613:0:115371:115763							
ANR	11006830	FunctionDef	"sepvalidate (i_ctx_t * i_ctx_p , ref * space , float * values , int num_comps)"		11006829	0					
ANR	11006831	CompoundStatement		3614:0:115454:115763	11006829	0					
ANR	11006832	IdentifierDeclStatement	os_ptr op = osp ;	3615:4:115460:115475	11006829	0	True				
ANR	11006833	IdentifierDecl	op = osp		11006829	0					
ANR	11006834	IdentifierDeclType	os_ptr		11006829	0					
ANR	11006835	Identifier	op		11006829	1					
ANR	11006836	AssignmentExpression	op = osp		11006829	2		=			
ANR	11006837	Identifier	osp		11006829	0					
ANR	11006838	Identifier	osp		11006829	1					
ANR	11006839	IfStatement	if ( num_comps < 1 )		11006829	1					
ANR	11006840	Condition	num_comps < 1	3617:8:115486:115498	11006829	0	True				
ANR	11006841	RelationalExpression	num_comps < 1		11006829	0		<			
ANR	11006842	Identifier	num_comps		11006829	0					
ANR	11006843	PrimaryExpression	1		11006829	1					
ANR	11006844	ExpressionStatement	return_error ( gs_error_stackunderflow )	3618:8:115509:115546	11006829	1	True				
ANR	11006845	CallExpression	return_error ( gs_error_stackunderflow )		11006829	0					
ANR	11006846	Callee	return_error		11006829	0					
ANR	11006847	Identifier	return_error		11006829	0					
ANR	11006848	ArgumentList	gs_error_stackunderflow		11006829	1					
ANR	11006849	Argument	gs_error_stackunderflow		11006829	0					
ANR	11006850	Identifier	gs_error_stackunderflow		11006829	0					
ANR	11006851	IfStatement	"if ( ! r_has_type ( op , t_integer ) && ! r_has_type ( op , t_real ) )"		11006829	2					
ANR	11006852	Condition	"! r_has_type ( op , t_integer ) && ! r_has_type ( op , t_real )"	3620:8:115557:115609	11006829	0	True				
ANR	11006853	AndExpression	"! r_has_type ( op , t_integer ) && ! r_has_type ( op , t_real )"		11006829	0		&&			
ANR	11006854	UnaryOperationExpression	"! r_has_type ( op , t_integer )"		11006829	0					
ANR	11006855	UnaryOperator	!		11006829	0					
ANR	11006856	CallExpression	"r_has_type ( op , t_integer )"		11006829	1					
ANR	11006857	Callee	r_has_type		11006829	0					
ANR	11006858	Identifier	r_has_type		11006829	0					
ANR	11006859	ArgumentList	op		11006829	1					
ANR	11006860	Argument	op		11006829	0					
ANR	11006861	Identifier	op		11006829	0					
ANR	11006862	Argument	t_integer		11006829	1					
ANR	11006863	Identifier	t_integer		11006829	0					
ANR	11006864	UnaryOperationExpression	"! r_has_type ( op , t_real )"		11006829	1					
ANR	11006865	UnaryOperator	!		11006829	0					
ANR	11006866	CallExpression	"r_has_type ( op , t_real )"		11006829	1					
ANR	11006867	Callee	r_has_type		11006829	0					
ANR	11006868	Identifier	r_has_type		11006829	0					
ANR	11006869	ArgumentList	op		11006829	1					
ANR	11006870	Argument	op		11006829	0					
ANR	11006871	Identifier	op		11006829	0					
ANR	11006872	Argument	t_real		11006829	1					
ANR	11006873	Identifier	t_real		11006829	0					
ANR	11006874	ExpressionStatement	return_error ( gs_error_typecheck )	3621:8:115620:115652	11006829	1	True				
ANR	11006875	CallExpression	return_error ( gs_error_typecheck )		11006829	0					
ANR	11006876	Callee	return_error		11006829	0					
ANR	11006877	Identifier	return_error		11006829	0					
ANR	11006878	ArgumentList	gs_error_typecheck		11006829	1					
ANR	11006879	Argument	gs_error_typecheck		11006829	0					
ANR	11006880	Identifier	gs_error_typecheck		11006829	0					
ANR	11006881	IfStatement	if ( * values > 1.0 )		11006829	3					
ANR	11006882	Condition	* values > 1.0	3623:8:115663:115675	11006829	0	True				
ANR	11006883	RelationalExpression	* values > 1.0		11006829	0		>			
ANR	11006884	UnaryOperationExpression	* values		11006829	0					
ANR	11006885	UnaryOperator	*		11006829	0					
ANR	11006886	Identifier	values		11006829	1					
ANR	11006887	PrimaryExpression	1.0		11006829	1					
ANR	11006888	ExpressionStatement	* values = 1.0	3624:8:115686:115699	11006829	1	True				
ANR	11006889	AssignmentExpression	* values = 1.0		11006829	0		=			
ANR	11006890	UnaryOperationExpression	* values		11006829	0					
ANR	11006891	UnaryOperator	*		11006829	0					
ANR	11006892	Identifier	values		11006829	1					
ANR	11006893	PrimaryExpression	1.0		11006829	1					
ANR	11006894	IfStatement	if ( * values < 0.0 )		11006829	4					
ANR	11006895	Condition	* values < 0.0	3626:8:115710:115722	11006829	0	True				
ANR	11006896	RelationalExpression	* values < 0.0		11006829	0		<			
ANR	11006897	UnaryOperationExpression	* values		11006829	0					
ANR	11006898	UnaryOperator	*		11006829	0					
ANR	11006899	Identifier	values		11006829	1					
ANR	11006900	PrimaryExpression	0.0		11006829	1					
ANR	11006901	ExpressionStatement	* values = 0.0	3627:8:115733:115746	11006829	1	True				
ANR	11006902	AssignmentExpression	* values = 0.0		11006829	0		=			
ANR	11006903	UnaryOperationExpression	* values		11006829	0					
ANR	11006904	UnaryOperator	*		11006829	0					
ANR	11006905	Identifier	values		11006829	1					
ANR	11006906	PrimaryExpression	0.0		11006829	1					
ANR	11006907	ReturnStatement	return 0 ;	3629:4:115753:115761	11006829	5	True				
ANR	11006908	PrimaryExpression	0		11006829	0					
ANR	11006909	ReturnType	static int		11006829	1					
ANR	11006910	Identifier	sepvalidate		11006829	2					
ANR	11006911	ParameterList	"i_ctx_t * i_ctx_p , ref * space , float * values , int num_comps"		11006829	3					
ANR	11006912	Parameter	i_ctx_t * i_ctx_p	3613:23:115394:115409	11006829	0	True				
ANR	11006913	ParameterType	i_ctx_t *		11006829	0					
ANR	11006914	Identifier	i_ctx_p		11006829	1					
ANR	11006915	Parameter	ref * space	3613:41:115412:115421	11006829	1	True				
ANR	11006916	ParameterType	ref *		11006829	0					
ANR	11006917	Identifier	space		11006829	1					
ANR	11006918	Parameter	float * values	3613:53:115424:115436	11006829	2	True				
ANR	11006919	ParameterType	float *		11006829	0					
ANR	11006920	Identifier	values		11006829	1					
ANR	11006921	Parameter	int num_comps	3613:68:115439:115451	11006829	3	True				
ANR	11006922	ParameterType	int		11006829	0					
ANR	11006923	Identifier	num_comps		11006829	1					
ANR	11006924	CFGEntryNode	ENTRY		11006829		True				
ANR	11006925	CFGExitNode	EXIT		11006829		True				
ANR	11006926	Symbol	op		11006829						
ANR	11006927	Symbol	r_has_type		11006829						
ANR	11006928	Symbol	gs_error_typecheck		11006829						
ANR	11006929	Symbol	t_integer		11006829						
ANR	11006930	Symbol	gs_error_stackunderflow		11006829						
ANR	11006931	Symbol	i_ctx_p		11006829						
ANR	11006932	Symbol	* values		11006829						
ANR	11006933	Symbol	values		11006829						
ANR	11006934	Symbol	num_comps		11006829						
ANR	11006935	Symbol	t_real		11006829						
ANR	11006936	Symbol	osp		11006829						
ANR	11006937	Symbol	space		11006829						
ANR	11006938	Function	sepcompareproc	3631:0:115765:117303							
ANR	11006939	FunctionDef	"sepcompareproc (i_ctx_t * i_ctx_p , ref * space , ref * testspace)"		11006938	0					
ANR	11006940	CompoundStatement		3632:0:115837:117303	11006938	0					
ANR	11006941	IdentifierDeclStatement	"ref sname1 , sname2 ;"	3633:4:115843:115861	11006938	0	True				
ANR	11006942	IdentifierDecl	sname1		11006938	0					
ANR	11006943	IdentifierDeclType	ref		11006938	0					
ANR	11006944	Identifier	sname1		11006938	1					
ANR	11006945	IdentifierDecl	sname2		11006938	1					
ANR	11006946	IdentifierDeclType	ref		11006938	0					
ANR	11006947	Identifier	sname2		11006938	1					
ANR	11006948	IdentifierDeclStatement	int code ;	3634:4:115867:115875	11006938	1	True				
ANR	11006949	IdentifierDecl	code		11006938	0					
ANR	11006950	IdentifierDeclType	int		11006938	0					
ANR	11006951	Identifier	code		11006938	1					
ANR	11006952	ExpressionStatement	"code = array_get ( imemory , space , 1 , & sname1 )"	3636:4:115882:115926	11006938	2	True				
ANR	11006953	AssignmentExpression	"code = array_get ( imemory , space , 1 , & sname1 )"		11006938	0		=			
ANR	11006954	Identifier	code		11006938	0					
ANR	11006955	CallExpression	"array_get ( imemory , space , 1 , & sname1 )"		11006938	1					
ANR	11006956	Callee	array_get		11006938	0					
ANR	11006957	Identifier	array_get		11006938	0					
ANR	11006958	ArgumentList	imemory		11006938	1					
ANR	11006959	Argument	imemory		11006938	0					
ANR	11006960	Identifier	imemory		11006938	0					
ANR	11006961	Argument	space		11006938	1					
ANR	11006962	Identifier	space		11006938	0					
ANR	11006963	Argument	1		11006938	2					
ANR	11006964	PrimaryExpression	1		11006938	0					
ANR	11006965	Argument	& sname1		11006938	3					
ANR	11006966	UnaryOperationExpression	& sname1		11006938	0					
ANR	11006967	UnaryOperator	&		11006938	0					
ANR	11006968	Identifier	sname1		11006938	1					
ANR	11006969	IfStatement	if ( code < 0 )		11006938	3					
ANR	11006970	Condition	code < 0	3637:8:115936:115943	11006938	0	True				
ANR	11006971	RelationalExpression	code < 0		11006938	0		<			
ANR	11006972	Identifier	code		11006938	0					
ANR	11006973	PrimaryExpression	0		11006938	1					
ANR	11006974	ReturnStatement	return 0 ;	3638:8:115954:115962	11006938	1	True				
ANR	11006975	PrimaryExpression	0		11006938	0					
ANR	11006976	ExpressionStatement	"code = array_get ( imemory , testspace , 1 , & sname2 )"	3640:4:115969:116017	11006938	4	True				
ANR	11006977	AssignmentExpression	"code = array_get ( imemory , testspace , 1 , & sname2 )"		11006938	0		=			
ANR	11006978	Identifier	code		11006938	0					
ANR	11006979	CallExpression	"array_get ( imemory , testspace , 1 , & sname2 )"		11006938	1					
ANR	11006980	Callee	array_get		11006938	0					
ANR	11006981	Identifier	array_get		11006938	0					
ANR	11006982	ArgumentList	imemory		11006938	1					
ANR	11006983	Argument	imemory		11006938	0					
ANR	11006984	Identifier	imemory		11006938	0					
ANR	11006985	Argument	testspace		11006938	1					
ANR	11006986	Identifier	testspace		11006938	0					
ANR	11006987	Argument	1		11006938	2					
ANR	11006988	PrimaryExpression	1		11006938	0					
ANR	11006989	Argument	& sname2		11006938	3					
ANR	11006990	UnaryOperationExpression	& sname2		11006938	0					
ANR	11006991	UnaryOperator	&		11006938	0					
ANR	11006992	Identifier	sname2		11006938	1					
ANR	11006993	IfStatement	if ( code < 0 )		11006938	5					
ANR	11006994	Condition	code < 0	3641:8:116027:116034	11006938	0	True				
ANR	11006995	RelationalExpression	code < 0		11006938	0		<			
ANR	11006996	Identifier	code		11006938	0					
ANR	11006997	PrimaryExpression	0		11006938	1					
ANR	11006998	ReturnStatement	return 0 ;	3642:8:116045:116053	11006938	1	True				
ANR	11006999	PrimaryExpression	0		11006938	0					
ANR	11007000	IfStatement	if ( r_type ( & sname1 ) != r_type ( & sname2 ) )		11006938	6					
ANR	11007001	Condition	r_type ( & sname1 ) != r_type ( & sname2 )	3644:8:116064:116097	11006938	0	True				
ANR	11007002	EqualityExpression	r_type ( & sname1 ) != r_type ( & sname2 )		11006938	0		!=			
ANR	11007003	CallExpression	r_type ( & sname1 )		11006938	0					
ANR	11007004	Callee	r_type		11006938	0					
ANR	11007005	Identifier	r_type		11006938	0					
ANR	11007006	ArgumentList	& sname1		11006938	1					
ANR	11007007	Argument	& sname1		11006938	0					
ANR	11007008	UnaryOperationExpression	& sname1		11006938	0					
ANR	11007009	UnaryOperator	&		11006938	0					
ANR	11007010	Identifier	sname1		11006938	1					
ANR	11007011	CallExpression	r_type ( & sname2 )		11006938	1					
ANR	11007012	Callee	r_type		11006938	0					
ANR	11007013	Identifier	r_type		11006938	0					
ANR	11007014	ArgumentList	& sname2		11006938	1					
ANR	11007015	Argument	& sname2		11006938	0					
ANR	11007016	UnaryOperationExpression	& sname2		11006938	0					
ANR	11007017	UnaryOperator	&		11006938	0					
ANR	11007018	Identifier	sname2		11006938	1					
ANR	11007019	ReturnStatement	return 0 ;	3645:8:116108:116116	11006938	1	True				
ANR	11007020	PrimaryExpression	0		11006938	0					
ANR	11007021	SwitchStatement	switch ( r_type ( & sname1 ) )		11006938	7					
ANR	11007022	Condition	r_type ( & sname1 )	3647:11:116130:116144	11006938	0	True				
ANR	11007023	CallExpression	r_type ( & sname1 )		11006938	0					
ANR	11007024	Callee	r_type		11006938	0					
ANR	11007025	Identifier	r_type		11006938	0					
ANR	11007026	ArgumentList	& sname1		11006938	1					
ANR	11007027	Argument	& sname1		11006938	0					
ANR	11007028	UnaryOperationExpression	& sname1		11006938	0					
ANR	11007029	UnaryOperator	&		11006938	0					
ANR	11007030	Identifier	sname1		11006938	1					
ANR	11007031	CompoundStatement		16:28:309:309	11006938	1					
ANR	11007032	Label	case t_name :	3648:8:116157:116168	11006938	0	True				
ANR	11007033	Identifier	t_name		11006938	0					
ANR	11007034	IfStatement	"if ( ! name_eq ( & sname1 , & sname2 ) )"		11006938	1					
ANR	11007035	Condition	"! name_eq ( & sname1 , & sname2 )"	3649:16:116186:116211	11006938	0	True				
ANR	11007036	UnaryOperationExpression	"! name_eq ( & sname1 , & sname2 )"		11006938	0					
ANR	11007037	UnaryOperator	!		11006938	0					
ANR	11007038	CallExpression	"name_eq ( & sname1 , & sname2 )"		11006938	1					
ANR	11007039	Callee	name_eq		11006938	0					
ANR	11007040	Identifier	name_eq		11006938	0					
ANR	11007041	ArgumentList	& sname1		11006938	1					
ANR	11007042	Argument	& sname1		11006938	0					
ANR	11007043	UnaryOperationExpression	& sname1		11006938	0					
ANR	11007044	UnaryOperator	&		11006938	0					
ANR	11007045	Identifier	sname1		11006938	1					
ANR	11007046	Argument	& sname2		11006938	1					
ANR	11007047	UnaryOperationExpression	& sname2		11006938	0					
ANR	11007048	UnaryOperator	&		11006938	0					
ANR	11007049	Identifier	sname2		11006938	1					
ANR	11007050	ReturnStatement	return 0 ;	3650:16:116230:116238	11006938	1	True				
ANR	11007051	PrimaryExpression	0		11006938	0					
ANR	11007052	BreakStatement	break ;	3651:12:116252:116257	11006938	2	True				
ANR	11007053	Label	case t_string :	3652:8:116267:116280	11006938	3	True				
ANR	11007054	Identifier	t_string		11006938	0					
ANR	11007055	IfStatement	if ( r_size ( & sname1 ) != r_size ( & sname2 ) )		11006938	4					
ANR	11007056	Condition	r_size ( & sname1 ) != r_size ( & sname2 )	3653:16:116298:116331	11006938	0	True				
ANR	11007057	EqualityExpression	r_size ( & sname1 ) != r_size ( & sname2 )		11006938	0		!=			
ANR	11007058	CallExpression	r_size ( & sname1 )		11006938	0					
ANR	11007059	Callee	r_size		11006938	0					
ANR	11007060	Identifier	r_size		11006938	0					
ANR	11007061	ArgumentList	& sname1		11006938	1					
ANR	11007062	Argument	& sname1		11006938	0					
ANR	11007063	UnaryOperationExpression	& sname1		11006938	0					
ANR	11007064	UnaryOperator	&		11006938	0					
ANR	11007065	Identifier	sname1		11006938	1					
ANR	11007066	CallExpression	r_size ( & sname2 )		11006938	1					
ANR	11007067	Callee	r_size		11006938	0					
ANR	11007068	Identifier	r_size		11006938	0					
ANR	11007069	ArgumentList	& sname2		11006938	1					
ANR	11007070	Argument	& sname2		11006938	0					
ANR	11007071	UnaryOperationExpression	& sname2		11006938	0					
ANR	11007072	UnaryOperator	&		11006938	0					
ANR	11007073	Identifier	sname2		11006938	1					
ANR	11007074	ReturnStatement	return 0 ;	3654:16:116350:116358	11006938	1	True				
ANR	11007075	PrimaryExpression	0		11006938	0					
ANR	11007076	IfStatement	"if ( strncmp ( ( const char * ) sname1 . value . const_bytes , ( const char * ) sname2 . value . const_bytes , r_size ( & sname1 ) ) != 0 )"		11006938	5					
ANR	11007077	Condition	"strncmp ( ( const char * ) sname1 . value . const_bytes , ( const char * ) sname2 . value . const_bytes , r_size ( & sname1 ) ) != 0"	3655:16:116376:116484	11006938	0	True				
ANR	11007078	EqualityExpression	"strncmp ( ( const char * ) sname1 . value . const_bytes , ( const char * ) sname2 . value . const_bytes , r_size ( & sname1 ) ) != 0"		11006938	0		!=			
ANR	11007079	CallExpression	"strncmp ( ( const char * ) sname1 . value . const_bytes , ( const char * ) sname2 . value . const_bytes , r_size ( & sname1 ) )"		11006938	0					
ANR	11007080	Callee	strncmp		11006938	0					
ANR	11007081	Identifier	strncmp		11006938	0					
ANR	11007082	ArgumentList	( const char * ) sname1 . value . const_bytes		11006938	1					
ANR	11007083	Argument	( const char * ) sname1 . value . const_bytes		11006938	0					
ANR	11007084	CastExpression	( const char * ) sname1 . value . const_bytes		11006938	0					
ANR	11007085	CastTarget	const char *		11006938	0					
ANR	11007086	MemberAccess	sname1 . value . const_bytes		11006938	1					
ANR	11007087	MemberAccess	sname1 . value		11006938	0					
ANR	11007088	Identifier	sname1		11006938	0					
ANR	11007089	Identifier	value		11006938	1					
ANR	11007090	Identifier	const_bytes		11006938	1					
ANR	11007091	Argument	( const char * ) sname2 . value . const_bytes		11006938	1					
ANR	11007092	CastExpression	( const char * ) sname2 . value . const_bytes		11006938	0					
ANR	11007093	CastTarget	const char *		11006938	0					
ANR	11007094	MemberAccess	sname2 . value . const_bytes		11006938	1					
ANR	11007095	MemberAccess	sname2 . value		11006938	0					
ANR	11007096	Identifier	sname2		11006938	0					
ANR	11007097	Identifier	value		11006938	1					
ANR	11007098	Identifier	const_bytes		11006938	1					
ANR	11007099	Argument	r_size ( & sname1 )		11006938	2					
ANR	11007100	CallExpression	r_size ( & sname1 )		11006938	0					
ANR	11007101	Callee	r_size		11006938	0					
ANR	11007102	Identifier	r_size		11006938	0					
ANR	11007103	ArgumentList	& sname1		11006938	1					
ANR	11007104	Argument	& sname1		11006938	0					
ANR	11007105	UnaryOperationExpression	& sname1		11006938	0					
ANR	11007106	UnaryOperator	&		11006938	0					
ANR	11007107	Identifier	sname1		11006938	1					
ANR	11007108	PrimaryExpression	0		11006938	1					
ANR	11007109	ReturnStatement	return 0 ;	3656:16:116503:116511	11006938	1	True				
ANR	11007110	PrimaryExpression	0		11006938	0					
ANR	11007111	BreakStatement	break ;	3657:12:116525:116530	11006938	6	True				
ANR	11007112	Label	default :	3658:8:116540:116547	11006938	7	True				
ANR	11007113	Identifier	default		11006938	0					
ANR	11007114	ReturnStatement	return 0 ;	3659:12:116561:116569	11006938	8	True				
ANR	11007115	PrimaryExpression	0		11006938	0					
ANR	11007116	ExpressionStatement	"code = array_get ( imemory , testspace , 2 , & sname1 )"	3661:4:116581:116629	11006938	8	True				
ANR	11007117	AssignmentExpression	"code = array_get ( imemory , testspace , 2 , & sname1 )"		11006938	0		=			
ANR	11007118	Identifier	code		11006938	0					
ANR	11007119	CallExpression	"array_get ( imemory , testspace , 2 , & sname1 )"		11006938	1					
ANR	11007120	Callee	array_get		11006938	0					
ANR	11007121	Identifier	array_get		11006938	0					
ANR	11007122	ArgumentList	imemory		11006938	1					
ANR	11007123	Argument	imemory		11006938	0					
ANR	11007124	Identifier	imemory		11006938	0					
ANR	11007125	Argument	testspace		11006938	1					
ANR	11007126	Identifier	testspace		11006938	0					
ANR	11007127	Argument	2		11006938	2					
ANR	11007128	PrimaryExpression	2		11006938	0					
ANR	11007129	Argument	& sname1		11006938	3					
ANR	11007130	UnaryOperationExpression	& sname1		11006938	0					
ANR	11007131	UnaryOperator	&		11006938	0					
ANR	11007132	Identifier	sname1		11006938	1					
ANR	11007133	IfStatement	if ( code < 0 )		11006938	9					
ANR	11007134	Condition	code < 0	3662:8:116639:116646	11006938	0	True				
ANR	11007135	RelationalExpression	code < 0		11006938	0		<			
ANR	11007136	Identifier	code		11006938	0					
ANR	11007137	PrimaryExpression	0		11006938	1					
ANR	11007138	ReturnStatement	return 0 ;	3663:8:116657:116665	11006938	1	True				
ANR	11007139	PrimaryExpression	0		11006938	0					
ANR	11007140	ExpressionStatement	"code = array_get ( imemory , testspace , 2 , & sname2 )"	3664:4:116671:116719	11006938	10	True				
ANR	11007141	AssignmentExpression	"code = array_get ( imemory , testspace , 2 , & sname2 )"		11006938	0		=			
ANR	11007142	Identifier	code		11006938	0					
ANR	11007143	CallExpression	"array_get ( imemory , testspace , 2 , & sname2 )"		11006938	1					
ANR	11007144	Callee	array_get		11006938	0					
ANR	11007145	Identifier	array_get		11006938	0					
ANR	11007146	ArgumentList	imemory		11006938	1					
ANR	11007147	Argument	imemory		11006938	0					
ANR	11007148	Identifier	imemory		11006938	0					
ANR	11007149	Argument	testspace		11006938	1					
ANR	11007150	Identifier	testspace		11006938	0					
ANR	11007151	Argument	2		11006938	2					
ANR	11007152	PrimaryExpression	2		11006938	0					
ANR	11007153	Argument	& sname2		11006938	3					
ANR	11007154	UnaryOperationExpression	& sname2		11006938	0					
ANR	11007155	UnaryOperator	&		11006938	0					
ANR	11007156	Identifier	sname2		11006938	1					
ANR	11007157	IfStatement	if ( code < 0 )		11006938	11					
ANR	11007158	Condition	code < 0	3665:8:116729:116736	11006938	0	True				
ANR	11007159	RelationalExpression	code < 0		11006938	0		<			
ANR	11007160	Identifier	code		11006938	0					
ANR	11007161	PrimaryExpression	0		11006938	1					
ANR	11007162	ReturnStatement	return 0 ;	3666:8:116747:116755	11006938	1	True				
ANR	11007163	PrimaryExpression	0		11006938	0					
ANR	11007164	IfStatement	if ( r_type ( & sname1 ) != r_type ( & sname2 ) )		11006938	12					
ANR	11007165	Condition	r_type ( & sname1 ) != r_type ( & sname2 )	3667:8:116765:116798	11006938	0	True				
ANR	11007166	EqualityExpression	r_type ( & sname1 ) != r_type ( & sname2 )		11006938	0		!=			
ANR	11007167	CallExpression	r_type ( & sname1 )		11006938	0					
ANR	11007168	Callee	r_type		11006938	0					
ANR	11007169	Identifier	r_type		11006938	0					
ANR	11007170	ArgumentList	& sname1		11006938	1					
ANR	11007171	Argument	& sname1		11006938	0					
ANR	11007172	UnaryOperationExpression	& sname1		11006938	0					
ANR	11007173	UnaryOperator	&		11006938	0					
ANR	11007174	Identifier	sname1		11006938	1					
ANR	11007175	CallExpression	r_type ( & sname2 )		11006938	1					
ANR	11007176	Callee	r_type		11006938	0					
ANR	11007177	Identifier	r_type		11006938	0					
ANR	11007178	ArgumentList	& sname2		11006938	1					
ANR	11007179	Argument	& sname2		11006938	0					
ANR	11007180	UnaryOperationExpression	& sname2		11006938	0					
ANR	11007181	UnaryOperator	&		11006938	0					
ANR	11007182	Identifier	sname2		11006938	1					
ANR	11007183	ReturnStatement	return 0 ;	3668:8:116809:116817	11006938	1	True				
ANR	11007184	PrimaryExpression	0		11006938	0					
ANR	11007185	IfStatement	if ( r_is_array ( & sname1 ) )		11006938	13					
ANR	11007186	Condition	r_is_array ( & sname1 )	3670:8:116828:116846	11006938	0	True				
ANR	11007187	CallExpression	r_is_array ( & sname1 )		11006938	0					
ANR	11007188	Callee	r_is_array		11006938	0					
ANR	11007189	Identifier	r_is_array		11006938	0					
ANR	11007190	ArgumentList	& sname1		11006938	1					
ANR	11007191	Argument	& sname1		11006938	0					
ANR	11007192	UnaryOperationExpression	& sname1		11006938	0					
ANR	11007193	UnaryOperator	&		11006938	0					
ANR	11007194	Identifier	sname1		11006938	1					
ANR	11007195	CompoundStatement		39:29:1011:1011	11006938	1					
ANR	11007196	IfStatement	"if ( ! comparearrays ( i_ctx_p , & sname1 , & sname2 ) )"		11006938	0					
ANR	11007197	Condition	"! comparearrays ( i_ctx_p , & sname1 , & sname2 )"	3671:12:116863:116903	11006938	0	True				
ANR	11007198	UnaryOperationExpression	"! comparearrays ( i_ctx_p , & sname1 , & sname2 )"		11006938	0					
ANR	11007199	UnaryOperator	!		11006938	0					
ANR	11007200	CallExpression	"comparearrays ( i_ctx_p , & sname1 , & sname2 )"		11006938	1					
ANR	11007201	Callee	comparearrays		11006938	0					
ANR	11007202	Identifier	comparearrays		11006938	0					
ANR	11007203	ArgumentList	i_ctx_p		11006938	1					
ANR	11007204	Argument	i_ctx_p		11006938	0					
ANR	11007205	Identifier	i_ctx_p		11006938	0					
ANR	11007206	Argument	& sname1		11006938	1					
ANR	11007207	UnaryOperationExpression	& sname1		11006938	0					
ANR	11007208	UnaryOperator	&		11006938	0					
ANR	11007209	Identifier	sname1		11006938	1					
ANR	11007210	Argument	& sname2		11006938	2					
ANR	11007211	UnaryOperationExpression	& sname2		11006938	0					
ANR	11007212	UnaryOperator	&		11006938	0					
ANR	11007213	Identifier	sname2		11006938	1					
ANR	11007214	ReturnStatement	return 0 ;	3672:12:116918:116926	11006938	1	True				
ANR	11007215	PrimaryExpression	0		11006938	0					
ANR	11007216	ElseStatement	else		11006938	0					
ANR	11007217	CompoundStatement		42:11:1101:1101	11006938	0					
ANR	11007218	IfStatement	"if ( ! r_has_type ( & sname1 , t_name ) )"		11006938	0					
ANR	11007219	Condition	"! r_has_type ( & sname1 , t_name )"	3674:12:116953:116980	11006938	0	True				
ANR	11007220	UnaryOperationExpression	"! r_has_type ( & sname1 , t_name )"		11006938	0					
ANR	11007221	UnaryOperator	!		11006938	0					
ANR	11007222	CallExpression	"r_has_type ( & sname1 , t_name )"		11006938	1					
ANR	11007223	Callee	r_has_type		11006938	0					
ANR	11007224	Identifier	r_has_type		11006938	0					
ANR	11007225	ArgumentList	& sname1		11006938	1					
ANR	11007226	Argument	& sname1		11006938	0					
ANR	11007227	UnaryOperationExpression	& sname1		11006938	0					
ANR	11007228	UnaryOperator	&		11006938	0					
ANR	11007229	Identifier	sname1		11006938	1					
ANR	11007230	Argument	t_name		11006938	1					
ANR	11007231	Identifier	t_name		11006938	0					
ANR	11007232	ReturnStatement	return 0 ;	3675:12:116995:117003	11006938	1	True				
ANR	11007233	PrimaryExpression	0		11006938	0					
ANR	11007234	IfStatement	"if ( ! name_eq ( & sname1 , & sname2 ) )"		11006938	1					
ANR	11007235	Condition	"! name_eq ( & sname1 , & sname2 )"	3676:12:117017:117042	11006938	0	True				
ANR	11007236	UnaryOperationExpression	"! name_eq ( & sname1 , & sname2 )"		11006938	0					
ANR	11007237	UnaryOperator	!		11006938	0					
ANR	11007238	CallExpression	"name_eq ( & sname1 , & sname2 )"		11006938	1					
ANR	11007239	Callee	name_eq		11006938	0					
ANR	11007240	Identifier	name_eq		11006938	0					
ANR	11007241	ArgumentList	& sname1		11006938	1					
ANR	11007242	Argument	& sname1		11006938	0					
ANR	11007243	UnaryOperationExpression	& sname1		11006938	0					
ANR	11007244	UnaryOperator	&		11006938	0					
ANR	11007245	Identifier	sname1		11006938	1					
ANR	11007246	Argument	& sname2		11006938	1					
ANR	11007247	UnaryOperationExpression	& sname2		11006938	0					
ANR	11007248	UnaryOperator	&		11006938	0					
ANR	11007249	Identifier	sname2		11006938	1					
ANR	11007250	ReturnStatement	return 0 ;	3677:12:117057:117065	11006938	1	True				
ANR	11007251	PrimaryExpression	0		11006938	0					
ANR	11007252	ExpressionStatement	"code = array_get ( imemory , space , 3 , & sname1 )"	3679:4:117077:117121	11006938	14	True				
ANR	11007253	AssignmentExpression	"code = array_get ( imemory , space , 3 , & sname1 )"		11006938	0		=			
ANR	11007254	Identifier	code		11006938	0					
ANR	11007255	CallExpression	"array_get ( imemory , space , 3 , & sname1 )"		11006938	1					
ANR	11007256	Callee	array_get		11006938	0					
ANR	11007257	Identifier	array_get		11006938	0					
ANR	11007258	ArgumentList	imemory		11006938	1					
ANR	11007259	Argument	imemory		11006938	0					
ANR	11007260	Identifier	imemory		11006938	0					
ANR	11007261	Argument	space		11006938	1					
ANR	11007262	Identifier	space		11006938	0					
ANR	11007263	Argument	3		11006938	2					
ANR	11007264	PrimaryExpression	3		11006938	0					
ANR	11007265	Argument	& sname1		11006938	3					
ANR	11007266	UnaryOperationExpression	& sname1		11006938	0					
ANR	11007267	UnaryOperator	&		11006938	0					
ANR	11007268	Identifier	sname1		11006938	1					
ANR	11007269	IfStatement	if ( code < 0 )		11006938	15					
ANR	11007270	Condition	code < 0	3680:8:117131:117138	11006938	0	True				
ANR	11007271	RelationalExpression	code < 0		11006938	0		<			
ANR	11007272	Identifier	code		11006938	0					
ANR	11007273	PrimaryExpression	0		11006938	1					
ANR	11007274	ReturnStatement	return 0 ;	3681:8:117149:117157	11006938	1	True				
ANR	11007275	PrimaryExpression	0		11006938	0					
ANR	11007276	ExpressionStatement	"code = array_get ( imemory , testspace , 3 , & sname2 )"	3682:4:117163:117211	11006938	16	True				
ANR	11007277	AssignmentExpression	"code = array_get ( imemory , testspace , 3 , & sname2 )"		11006938	0		=			
ANR	11007278	Identifier	code		11006938	0					
ANR	11007279	CallExpression	"array_get ( imemory , testspace , 3 , & sname2 )"		11006938	1					
ANR	11007280	Callee	array_get		11006938	0					
ANR	11007281	Identifier	array_get		11006938	0					
ANR	11007282	ArgumentList	imemory		11006938	1					
ANR	11007283	Argument	imemory		11006938	0					
ANR	11007284	Identifier	imemory		11006938	0					
ANR	11007285	Argument	testspace		11006938	1					
ANR	11007286	Identifier	testspace		11006938	0					
ANR	11007287	Argument	3		11006938	2					
ANR	11007288	PrimaryExpression	3		11006938	0					
ANR	11007289	Argument	& sname2		11006938	3					
ANR	11007290	UnaryOperationExpression	& sname2		11006938	0					
ANR	11007291	UnaryOperator	&		11006938	0					
ANR	11007292	Identifier	sname2		11006938	1					
ANR	11007293	IfStatement	if ( code < 0 )		11006938	17					
ANR	11007294	Condition	code < 0	3683:8:117221:117228	11006938	0	True				
ANR	11007295	RelationalExpression	code < 0		11006938	0		<			
ANR	11007296	Identifier	code		11006938	0					
ANR	11007297	PrimaryExpression	0		11006938	1					
ANR	11007298	ReturnStatement	return 0 ;	3684:8:117239:117247	11006938	1	True				
ANR	11007299	PrimaryExpression	0		11006938	0					
ANR	11007300	ReturnStatement	"return ( comparearrays ( i_ctx_p , & sname1 , & sname2 ) ) ;"	3685:4:117253:117301	11006938	18	True				
ANR	11007301	CallExpression	"comparearrays ( i_ctx_p , & sname1 , & sname2 )"		11006938	0					
ANR	11007302	Callee	comparearrays		11006938	0					
ANR	11007303	Identifier	comparearrays		11006938	0					
ANR	11007304	ArgumentList	i_ctx_p		11006938	1					
ANR	11007305	Argument	i_ctx_p		11006938	0					
ANR	11007306	Identifier	i_ctx_p		11006938	0					
ANR	11007307	Argument	& sname1		11006938	1					
ANR	11007308	UnaryOperationExpression	& sname1		11006938	0					
ANR	11007309	UnaryOperator	&		11006938	0					
ANR	11007310	Identifier	sname1		11006938	1					
ANR	11007311	Argument	& sname2		11006938	2					
ANR	11007312	UnaryOperationExpression	& sname2		11006938	0					
ANR	11007313	UnaryOperator	&		11006938	0					
ANR	11007314	Identifier	sname2		11006938	1					
ANR	11007315	ReturnType	static int		11006938	1					
ANR	11007316	Identifier	sepcompareproc		11006938	2					
ANR	11007317	ParameterList	"i_ctx_t * i_ctx_p , ref * space , ref * testspace"		11006938	3					
ANR	11007318	Parameter	i_ctx_t * i_ctx_p	3631:26:115791:115806	11006938	0	True				
ANR	11007319	ParameterType	i_ctx_t *		11006938	0					
ANR	11007320	Identifier	i_ctx_p		11006938	1					
ANR	11007321	Parameter	ref * space	3631:44:115809:115818	11006938	1	True				
ANR	11007322	ParameterType	ref *		11006938	0					
ANR	11007323	Identifier	space		11006938	1					
ANR	11007324	Parameter	ref * testspace	3631:56:115821:115834	11006938	2	True				
ANR	11007325	ParameterType	ref *		11006938	0					
ANR	11007326	Identifier	testspace		11006938	1					
ANR	11007327	CFGEntryNode	ENTRY		11006938		True				
ANR	11007328	CFGExitNode	EXIT		11006938		True				
ANR	11007329	Symbol	& sname1		11006938						
ANR	11007330	Symbol	comparearrays		11006938						
ANR	11007331	Symbol	name_eq		11006938						
ANR	11007332	Symbol	code		11006938						
ANR	11007333	Symbol	& sname2		11006938						
ANR	11007334	Symbol	sname2 . value . const_bytes		11006938						
ANR	11007335	Symbol	array_get		11006938						
ANR	11007336	Symbol	sname1		11006938						
ANR	11007337	Symbol	sname2		11006938						
ANR	11007338	Symbol	space		11006938						
ANR	11007339	Symbol	sname1 . value		11006938						
ANR	11007340	Symbol	sname1 . value . const_bytes		11006938						
ANR	11007341	Symbol	strncmp		11006938						
ANR	11007342	Symbol	sname2 . value		11006938						
ANR	11007343	Symbol	r_has_type		11006938						
ANR	11007344	Symbol	testspace		11006938						
ANR	11007345	Symbol	i_ctx_p		11006938						
ANR	11007346	Symbol	t_name		11006938						
ANR	11007347	Symbol	r_size		11006938						
ANR	11007348	Symbol	imemory		11006938						
ANR	11007349	Symbol	r_is_array		11006938						
ANR	11007350	Symbol	r_type		11006938						
ANR	11007351	Function	sepinitialproc	3687:0:117305:117475							
ANR	11007352	FunctionDef	"sepinitialproc (i_ctx_t * i_ctx_p , ref * space)"		11007351	0					
ANR	11007353	CompoundStatement		3688:0:117361:117475	11007351	0					
ANR	11007354	IdentifierDeclStatement	gs_client_color cc ;	3689:4:117367:117385	11007351	0	True				
ANR	11007355	IdentifierDecl	cc		11007351	0					
ANR	11007356	IdentifierDeclType	gs_client_color		11007351	0					
ANR	11007357	Identifier	cc		11007351	1					
ANR	11007358	ExpressionStatement	cc . pattern = 0x00	3691:4:117392:117409	11007351	1	True				
ANR	11007359	AssignmentExpression	cc . pattern = 0x00		11007351	0		=			
ANR	11007360	MemberAccess	cc . pattern		11007351	0					
ANR	11007361	Identifier	cc		11007351	0					
ANR	11007362	Identifier	pattern		11007351	1					
ANR	11007363	PrimaryExpression	0x00		11007351	1					
ANR	11007364	ExpressionStatement	cc . paint . values [ 0 ] = 1.0	3692:4:117415:117439	11007351	2	True				
ANR	11007365	AssignmentExpression	cc . paint . values [ 0 ] = 1.0		11007351	0		=			
ANR	11007366	ArrayIndexing	cc . paint . values [ 0 ]		11007351	0					
ANR	11007367	MemberAccess	cc . paint . values		11007351	0					
ANR	11007368	MemberAccess	cc . paint		11007351	0					
ANR	11007369	Identifier	cc		11007351	0					
ANR	11007370	Identifier	paint		11007351	1					
ANR	11007371	Identifier	values		11007351	1					
ANR	11007372	PrimaryExpression	0		11007351	1					
ANR	11007373	PrimaryExpression	1.0		11007351	1					
ANR	11007374	ReturnStatement	"return gs_setcolor ( igs , & cc ) ;"	3693:4:117445:117473	11007351	3	True				
ANR	11007375	CallExpression	"gs_setcolor ( igs , & cc )"		11007351	0					
ANR	11007376	Callee	gs_setcolor		11007351	0					
ANR	11007377	Identifier	gs_setcolor		11007351	0					
ANR	11007378	ArgumentList	igs		11007351	1					
ANR	11007379	Argument	igs		11007351	0					
ANR	11007380	Identifier	igs		11007351	0					
ANR	11007381	Argument	& cc		11007351	1					
ANR	11007382	UnaryOperationExpression	& cc		11007351	0					
ANR	11007383	UnaryOperator	&		11007351	0					
ANR	11007384	Identifier	cc		11007351	1					
ANR	11007385	ReturnType	static int		11007351	1					
ANR	11007386	Identifier	sepinitialproc		11007351	2					
ANR	11007387	ParameterList	"i_ctx_t * i_ctx_p , ref * space"		11007351	3					
ANR	11007388	Parameter	i_ctx_t * i_ctx_p	3687:26:117331:117346	11007351	0	True				
ANR	11007389	ParameterType	i_ctx_t *		11007351	0					
ANR	11007390	Identifier	i_ctx_p		11007351	1					
ANR	11007391	Parameter	ref * space	3687:44:117349:117358	11007351	1	True				
ANR	11007392	ParameterType	ref *		11007351	0					
ANR	11007393	Identifier	space		11007351	1					
ANR	11007394	CFGEntryNode	ENTRY		11007351		True				
ANR	11007395	CFGExitNode	EXIT		11007351		True				
ANR	11007396	Symbol	cc		11007351						
ANR	11007397	Symbol	cc . pattern		11007351						
ANR	11007398	Symbol	* cc . paint		11007351						
ANR	11007399	Symbol	igs		11007351						
ANR	11007400	Symbol	* cc		11007351						
ANR	11007401	Symbol	* cc . paint . values		11007351						
ANR	11007402	Symbol	i_ctx_p		11007351						
ANR	11007403	Symbol	cc . paint		11007351						
ANR	11007404	Symbol	gs_setcolor		11007351						
ANR	11007405	Symbol	& cc		11007351						
ANR	11007406	Symbol	cc . paint . values		11007351						
ANR	11007407	Symbol	space		11007351						
ANR	11007408	Function	devicencolorants_cont	3697:0:117492:119990							
ANR	11007409	FunctionDef	devicencolorants_cont (i_ctx_t * i_ctx_p)		11007408	0					
ANR	11007410	CompoundStatement		3698:0:117543:119990	11007408	0					
ANR	11007411	IdentifierDeclStatement	"ref dict , * pdict = & dict , space [ 2 ] , sname ;"	3699:4:117549:117590	11007408	0	True				
ANR	11007412	IdentifierDecl	dict		11007408	0					
ANR	11007413	IdentifierDeclType	ref		11007408	0					
ANR	11007414	Identifier	dict		11007408	1					
ANR	11007415	IdentifierDecl	* pdict = & dict		11007408	1					
ANR	11007416	IdentifierDeclType	ref *		11007408	0					
ANR	11007417	Identifier	pdict		11007408	1					
ANR	11007418	AssignmentExpression	* pdict = & dict		11007408	2		=			
ANR	11007419	Identifier	pdict		11007408	0					
ANR	11007420	UnaryOperationExpression	& dict		11007408	1					
ANR	11007421	UnaryOperator	&		11007408	0					
ANR	11007422	Identifier	dict		11007408	1					
ANR	11007423	IdentifierDecl	space [ 2 ]		11007408	2					
ANR	11007424	IdentifierDeclType	ref [ 2 ]		11007408	0					
ANR	11007425	Identifier	space		11007408	1					
ANR	11007426	PrimaryExpression	2		11007408	2					
ANR	11007427	IdentifierDecl	sname		11007408	3					
ANR	11007428	IdentifierDeclType	ref		11007408	0					
ANR	11007429	Identifier	sname		11007408	1					
ANR	11007430	IdentifierDeclStatement	"int index , code , depth , stage ;"	3700:4:117596:117625	11007408	1	True				
ANR	11007431	IdentifierDecl	index		11007408	0					
ANR	11007432	IdentifierDeclType	int		11007408	0					
ANR	11007433	Identifier	index		11007408	1					
ANR	11007434	IdentifierDecl	code		11007408	1					
ANR	11007435	IdentifierDeclType	int		11007408	0					
ANR	11007436	Identifier	code		11007408	1					
ANR	11007437	IdentifierDecl	depth		11007408	2					
ANR	11007438	IdentifierDeclType	int		11007408	0					
ANR	11007439	Identifier	depth		11007408	1					
ANR	11007440	IdentifierDecl	stage		11007408	3					
ANR	11007441	IdentifierDeclType	int		11007408	0					
ANR	11007442	Identifier	stage		11007408	1					
ANR	11007443	IdentifierDeclStatement	"es_ptr ep = esp , pindex , pstage ;"	3701:4:117631:117662	11007408	2	True				
ANR	11007444	IdentifierDecl	ep = esp		11007408	0					
ANR	11007445	IdentifierDeclType	es_ptr		11007408	0					
ANR	11007446	Identifier	ep		11007408	1					
ANR	11007447	AssignmentExpression	ep = esp		11007408	2		=			
ANR	11007448	Identifier	esp		11007408	0					
ANR	11007449	Identifier	esp		11007408	1					
ANR	11007450	IdentifierDecl	pindex		11007408	1					
ANR	11007451	IdentifierDeclType	es_ptr		11007408	0					
ANR	11007452	Identifier	pindex		11007408	1					
ANR	11007453	IdentifierDecl	pstage		11007408	2					
ANR	11007454	IdentifierDeclType	es_ptr		11007408	0					
ANR	11007455	Identifier	pstage		11007408	1					
ANR	11007456	IdentifierDeclStatement	os_ptr op = osp ;	3702:4:117668:117683	11007408	3	True				
ANR	11007457	IdentifierDecl	op = osp		11007408	0					
ANR	11007458	IdentifierDeclType	os_ptr		11007408	0					
ANR	11007459	Identifier	op		11007408	1					
ANR	11007460	AssignmentExpression	op = osp		11007408	2		=			
ANR	11007461	Identifier	osp		11007408	0					
ANR	11007462	Identifier	osp		11007408	1					
ANR	11007463	IdentifierDeclStatement	gs_separation_name sep_name ;	3703:4:117689:117716	11007408	4	True				
ANR	11007464	IdentifierDecl	sep_name		11007408	0					
ANR	11007465	IdentifierDeclType	gs_separation_name		11007408	0					
ANR	11007466	Identifier	sep_name		11007408	1					
ANR	11007467	ExpressionStatement	pindex = & ep [ - 2 ]	3705:4:117723:117739	11007408	5	True				
ANR	11007468	AssignmentExpression	pindex = & ep [ - 2 ]		11007408	0		=			
ANR	11007469	Identifier	pindex		11007408	0					
ANR	11007470	UnaryOperationExpression	& ep [ - 2 ]		11007408	1					
ANR	11007471	UnaryOperator	&		11007408	0					
ANR	11007472	ArrayIndexing	ep [ - 2 ]		11007408	1					
ANR	11007473	Identifier	ep		11007408	0					
ANR	11007474	UnaryOperationExpression	- 2		11007408	1					
ANR	11007475	UnaryOperator	-		11007408	0					
ANR	11007476	PrimaryExpression	2		11007408	1					
ANR	11007477	ExpressionStatement	pstage = & ep [ - 1 ]	3706:4:117745:117761	11007408	6	True				
ANR	11007478	AssignmentExpression	pstage = & ep [ - 1 ]		11007408	0		=			
ANR	11007479	Identifier	pstage		11007408	0					
ANR	11007480	UnaryOperationExpression	& ep [ - 1 ]		11007408	1					
ANR	11007481	UnaryOperator	&		11007408	0					
ANR	11007482	ArrayIndexing	ep [ - 1 ]		11007408	1					
ANR	11007483	Identifier	ep		11007408	0					
ANR	11007484	UnaryOperationExpression	- 1		11007408	1					
ANR	11007485	UnaryOperator	-		11007408	0					
ANR	11007486	PrimaryExpression	1		11007408	1					
ANR	11007487	ExpressionStatement	index = ( int ) pindex -> value . intval	3707:4:117767:117800	11007408	7	True				
ANR	11007488	AssignmentExpression	index = ( int ) pindex -> value . intval		11007408	0		=			
ANR	11007489	Identifier	index		11007408	0					
ANR	11007490	CastExpression	( int ) pindex -> value . intval		11007408	1					
ANR	11007491	CastTarget	int		11007408	0					
ANR	11007492	MemberAccess	pindex -> value . intval		11007408	1					
ANR	11007493	PtrMemberAccess	pindex -> value		11007408	0					
ANR	11007494	Identifier	pindex		11007408	0					
ANR	11007495	Identifier	value		11007408	1					
ANR	11007496	Identifier	intval		11007408	1					
ANR	11007497	ExpressionStatement	stage = ( int ) pstage -> value . intval	3708:4:117806:117839	11007408	8	True				
ANR	11007498	AssignmentExpression	stage = ( int ) pstage -> value . intval		11007408	0		=			
ANR	11007499	Identifier	stage		11007408	0					
ANR	11007500	CastExpression	( int ) pstage -> value . intval		11007408	1					
ANR	11007501	CastTarget	int		11007408	0					
ANR	11007502	MemberAccess	pstage -> value . intval		11007408	1					
ANR	11007503	PtrMemberAccess	pstage -> value		11007408	0					
ANR	11007504	Identifier	pstage		11007408	0					
ANR	11007505	Identifier	value		11007408	1					
ANR	11007506	Identifier	intval		11007408	1					
ANR	11007507	ExpressionStatement	"ref_assign ( & dict , ep )"	3709:4:117845:117866	11007408	9	True				
ANR	11007508	CallExpression	"ref_assign ( & dict , ep )"		11007408	0					
ANR	11007509	Callee	ref_assign		11007408	0					
ANR	11007510	Identifier	ref_assign		11007408	0					
ANR	11007511	ArgumentList	& dict		11007408	1					
ANR	11007512	Argument	& dict		11007408	0					
ANR	11007513	UnaryOperationExpression	& dict		11007408	0					
ANR	11007514	UnaryOperator	&		11007408	0					
ANR	11007515	Identifier	dict		11007408	1					
ANR	11007516	Argument	ep		11007408	1					
ANR	11007517	Identifier	ep		11007408	0					
ANR	11007518	DoStatement	do		11007408	10					
ANR	11007519	CompoundStatement		14:7:332:332	11007408	0					
ANR	11007520	ExpressionStatement	"index = dict_next ( pdict , index , ( ref * ) & space )"	3712:8:117886:117932	11007408	0	True				
ANR	11007521	AssignmentExpression	"index = dict_next ( pdict , index , ( ref * ) & space )"		11007408	0		=			
ANR	11007522	Identifier	index		11007408	0					
ANR	11007523	CallExpression	"dict_next ( pdict , index , ( ref * ) & space )"		11007408	1					
ANR	11007524	Callee	dict_next		11007408	0					
ANR	11007525	Identifier	dict_next		11007408	0					
ANR	11007526	ArgumentList	pdict		11007408	1					
ANR	11007527	Argument	pdict		11007408	0					
ANR	11007528	Identifier	pdict		11007408	0					
ANR	11007529	Argument	index		11007408	1					
ANR	11007530	Identifier	index		11007408	0					
ANR	11007531	Argument	( ref * ) & space		11007408	2					
ANR	11007532	CastExpression	( ref * ) & space		11007408	0					
ANR	11007533	CastTarget	ref *		11007408	0					
ANR	11007534	UnaryOperationExpression	& space		11007408	1					
ANR	11007535	UnaryOperator	&		11007408	0					
ANR	11007536	Identifier	space		11007408	1					
ANR	11007537	IfStatement	if ( index == - 1 )		11007408	1					
ANR	11007538	Condition	index == - 1	3713:12:117946:117956	11007408	0	True				
ANR	11007539	EqualityExpression	index == - 1		11007408	0		==			
ANR	11007540	Identifier	index		11007408	0					
ANR	11007541	UnaryOperationExpression	- 1		11007408	1					
ANR	11007542	UnaryOperator	-		11007408	0					
ANR	11007543	PrimaryExpression	1		11007408	1					
ANR	11007544	CompoundStatement		16:25:415:415	11007408	1					
ANR	11007545	ExpressionStatement	esp -= 4	3714:12:117973:117981	11007408	0	True				
ANR	11007546	AssignmentExpression	esp -= 4		11007408	0		-=			
ANR	11007547	Identifier	esp		11007408	0					
ANR	11007548	PrimaryExpression	4		11007408	1					
ANR	11007549	ReturnStatement	return o_pop_estack ;	3715:12:117995:118014	11007408	1	True				
ANR	11007550	Identifier	o_pop_estack		11007408	0					
ANR	11007551	IfStatement	if ( stage == 0 )		11007408	2					
ANR	11007552	Condition	stage == 0	3718:12:118039:118048	11007408	0	True				
ANR	11007553	EqualityExpression	stage == 0		11007408	0		==			
ANR	11007554	Identifier	stage		11007408	0					
ANR	11007555	PrimaryExpression	0		11007408	1					
ANR	11007556	CompoundStatement		21:24:507:507	11007408	1					
ANR	11007557	ExpressionStatement	code = gs_gsave ( igs )	3719:12:118065:118085	11007408	0	True				
ANR	11007558	AssignmentExpression	code = gs_gsave ( igs )		11007408	0		=			
ANR	11007559	Identifier	code		11007408	0					
ANR	11007560	CallExpression	gs_gsave ( igs )		11007408	1					
ANR	11007561	Callee	gs_gsave		11007408	0					
ANR	11007562	Identifier	gs_gsave		11007408	0					
ANR	11007563	ArgumentList	igs		11007408	1					
ANR	11007564	Argument	igs		11007408	0					
ANR	11007565	Identifier	igs		11007408	0					
ANR	11007566	IfStatement	if ( code < 0 )		11007408	1					
ANR	11007567	Condition	code < 0	3720:16:118103:118110	11007408	0	True				
ANR	11007568	RelationalExpression	code < 0		11007408	0		<			
ANR	11007569	Identifier	code		11007408	0					
ANR	11007570	PrimaryExpression	0		11007408	1					
ANR	11007571	ReturnStatement	return code ;	3721:16:118129:118140	11007408	1	True				
ANR	11007572	Identifier	code		11007408	0					
ANR	11007573	ExpressionStatement	"code = validate_spaces ( i_ctx_p , & space [ 1 ] , & depth )"	3723:12:118155:118205	11007408	2	True				
ANR	11007574	AssignmentExpression	"code = validate_spaces ( i_ctx_p , & space [ 1 ] , & depth )"		11007408	0		=			
ANR	11007575	Identifier	code		11007408	0					
ANR	11007576	CallExpression	"validate_spaces ( i_ctx_p , & space [ 1 ] , & depth )"		11007408	1					
ANR	11007577	Callee	validate_spaces		11007408	0					
ANR	11007578	Identifier	validate_spaces		11007408	0					
ANR	11007579	ArgumentList	i_ctx_p		11007408	1					
ANR	11007580	Argument	i_ctx_p		11007408	0					
ANR	11007581	Identifier	i_ctx_p		11007408	0					
ANR	11007582	Argument	& space [ 1 ]		11007408	1					
ANR	11007583	UnaryOperationExpression	& space [ 1 ]		11007408	0					
ANR	11007584	UnaryOperator	&		11007408	0					
ANR	11007585	ArrayIndexing	space [ 1 ]		11007408	1					
ANR	11007586	Identifier	space		11007408	0					
ANR	11007587	PrimaryExpression	1		11007408	1					
ANR	11007588	Argument	& depth		11007408	2					
ANR	11007589	UnaryOperationExpression	& depth		11007408	0					
ANR	11007590	UnaryOperator	&		11007408	0					
ANR	11007591	Identifier	depth		11007408	1					
ANR	11007592	IfStatement	if ( code < 0 )		11007408	3					
ANR	11007593	Condition	code < 0	3724:16:118223:118230	11007408	0	True				
ANR	11007594	RelationalExpression	code < 0		11007408	0		<			
ANR	11007595	Identifier	code		11007408	0					
ANR	11007596	PrimaryExpression	0		11007408	1					
ANR	11007597	CompoundStatement		27:26:689:689	11007408	1					
ANR	11007598	ExpressionStatement	( void ) gs_grestore ( igs )	3725:16:118251:118273	11007408	0	True				
ANR	11007599	CastExpression	( void ) gs_grestore ( igs )		11007408	0					
ANR	11007600	CastTarget	void		11007408	0					
ANR	11007601	CallExpression	gs_grestore ( igs )		11007408	1					
ANR	11007602	Callee	gs_grestore		11007408	0					
ANR	11007603	Identifier	gs_grestore		11007408	0					
ANR	11007604	ArgumentList	igs		11007408	1					
ANR	11007605	Argument	igs		11007408	0					
ANR	11007606	Identifier	igs		11007408	0					
ANR	11007607	ReturnStatement	return code ;	3726:16:118291:118302	11007408	1	True				
ANR	11007608	Identifier	code		11007408	0					
ANR	11007609	ExpressionStatement	check_estack ( 1 )	3733:12:118607:118622	11007408	4	True				
ANR	11007610	CallExpression	check_estack ( 1 )		11007408	0					
ANR	11007611	Callee	check_estack		11007408	0					
ANR	11007612	Identifier	check_estack		11007408	0					
ANR	11007613	ArgumentList	1		11007408	1					
ANR	11007614	Argument	1		11007408	0					
ANR	11007615	PrimaryExpression	1		11007408	0					
ANR	11007616	ExpressionStatement	push ( 1 )	3734:12:118636:118643	11007408	5	True				
ANR	11007617	CallExpression	push ( 1 )		11007408	0					
ANR	11007618	Callee	push		11007408	0					
ANR	11007619	Identifier	push		11007408	0					
ANR	11007620	ArgumentList	1		11007408	1					
ANR	11007621	Argument	1		11007408	0					
ANR	11007622	PrimaryExpression	1		11007408	0					
ANR	11007623	ExpressionStatement	push_op_estack ( devicencolorants_cont )	3736:12:118747:118784	11007408	6	True				
ANR	11007624	CallExpression	push_op_estack ( devicencolorants_cont )		11007408	0					
ANR	11007625	Callee	push_op_estack		11007408	0					
ANR	11007626	Identifier	push_op_estack		11007408	0					
ANR	11007627	ArgumentList	devicencolorants_cont		11007408	1					
ANR	11007628	Argument	devicencolorants_cont		11007408	0					
ANR	11007629	Identifier	devicencolorants_cont		11007408	0					
ANR	11007630	ExpressionStatement	"make_int ( pstage , 1 )"	3738:12:118799:118818	11007408	7	True				
ANR	11007631	CallExpression	"make_int ( pstage , 1 )"		11007408	0					
ANR	11007632	Callee	make_int		11007408	0					
ANR	11007633	Identifier	make_int		11007408	0					
ANR	11007634	ArgumentList	pstage		11007408	1					
ANR	11007635	Argument	pstage		11007408	0					
ANR	11007636	Identifier	pstage		11007408	0					
ANR	11007637	Argument	1		11007408	1					
ANR	11007638	PrimaryExpression	1		11007408	0					
ANR	11007639	ExpressionStatement	* op = space [ 1 ]	3739:12:118832:118846	11007408	8	True				
ANR	11007640	AssignmentExpression	* op = space [ 1 ]		11007408	0		=			
ANR	11007641	UnaryOperationExpression	* op		11007408	0					
ANR	11007642	UnaryOperator	*		11007408	0					
ANR	11007643	Identifier	op		11007408	1					
ANR	11007644	ArrayIndexing	space [ 1 ]		11007408	1					
ANR	11007645	Identifier	space		11007408	0					
ANR	11007646	PrimaryExpression	1		11007408	1					
ANR	11007647	ExpressionStatement	code = zsetcolorspace ( i_ctx_p )	3740:12:118860:118890	11007408	9	True				
ANR	11007648	AssignmentExpression	code = zsetcolorspace ( i_ctx_p )		11007408	0		=			
ANR	11007649	Identifier	code		11007408	0					
ANR	11007650	CallExpression	zsetcolorspace ( i_ctx_p )		11007408	1					
ANR	11007651	Callee	zsetcolorspace		11007408	0					
ANR	11007652	Identifier	zsetcolorspace		11007408	0					
ANR	11007653	ArgumentList	i_ctx_p		11007408	1					
ANR	11007654	Argument	i_ctx_p		11007408	0					
ANR	11007655	Identifier	i_ctx_p		11007408	0					
ANR	11007656	IfStatement	if ( code < 0 )		11007408	10					
ANR	11007657	Condition	code < 0	3741:16:118908:118915	11007408	0	True				
ANR	11007658	RelationalExpression	code < 0		11007408	0		<			
ANR	11007659	Identifier	code		11007408	0					
ANR	11007660	PrimaryExpression	0		11007408	1					
ANR	11007661	CompoundStatement		44:26:1374:1374	11007408	1					
ANR	11007662	ExpressionStatement	( void ) gs_grestore ( igs )	3742:16:118936:118958	11007408	0	True				
ANR	11007663	CastExpression	( void ) gs_grestore ( igs )		11007408	0					
ANR	11007664	CastTarget	void		11007408	0					
ANR	11007665	CallExpression	gs_grestore ( igs )		11007408	1					
ANR	11007666	Callee	gs_grestore		11007408	0					
ANR	11007667	Identifier	gs_grestore		11007408	0					
ANR	11007668	ArgumentList	igs		11007408	1					
ANR	11007669	Argument	igs		11007408	0					
ANR	11007670	Identifier	igs		11007408	0					
ANR	11007671	ReturnStatement	return code ;	3743:16:118976:118987	11007408	1	True				
ANR	11007672	Identifier	code		11007408	0					
ANR	11007673	ElseStatement	else		11007408	0					
ANR	11007674	ReturnStatement	return code ;	3745:16:119024:119035	11007408	0	True				
ANR	11007675	Identifier	code		11007408	0					
ANR	11007676	ElseStatement	else		11007408	0					
ANR	11007677	CompoundStatement		49:15:1508:1508	11007408	0					
ANR	11007678	ExpressionStatement	stage = 0	3747:12:119066:119075	11007408	0	True				
ANR	11007679	AssignmentExpression	stage = 0		11007408	0		=			
ANR	11007680	Identifier	stage		11007408	0					
ANR	11007681	PrimaryExpression	0		11007408	1					
ANR	11007682	SwitchStatement	switch ( r_type ( & space [ 0 ] ) )		11007408	1					
ANR	11007683	Condition	r_type ( & space [ 0 ] )	3749:20:119098:119114	11007408	0	True				
ANR	11007684	CallExpression	r_type ( & space [ 0 ] )		11007408	0					
ANR	11007685	Callee	r_type		11007408	0					
ANR	11007686	Identifier	r_type		11007408	0					
ANR	11007687	ArgumentList	& space [ 0 ]		11007408	1					
ANR	11007688	Argument	& space [ 0 ]		11007408	0					
ANR	11007689	UnaryOperationExpression	& space [ 0 ]		11007408	0					
ANR	11007690	UnaryOperator	&		11007408	0					
ANR	11007691	ArrayIndexing	space [ 0 ]		11007408	1					
ANR	11007692	Identifier	space		11007408	0					
ANR	11007693	PrimaryExpression	0		11007408	1					
ANR	11007694	CompoundStatement		52:39:1573:1573	11007408	1					
ANR	11007695	Label	case t_string :	3750:16:119135:119148	11007408	0	True				
ANR	11007696	Identifier	t_string		11007408	0					
ANR	11007697	ExpressionStatement	"code = name_from_string ( imemory , & space [ 0 ] , & sname )"	3751:20:119170:119221	11007408	1	True				
ANR	11007698	AssignmentExpression	"code = name_from_string ( imemory , & space [ 0 ] , & sname )"		11007408	0		=			
ANR	11007699	Identifier	code		11007408	0					
ANR	11007700	CallExpression	"name_from_string ( imemory , & space [ 0 ] , & sname )"		11007408	1					
ANR	11007701	Callee	name_from_string		11007408	0					
ANR	11007702	Identifier	name_from_string		11007408	0					
ANR	11007703	ArgumentList	imemory		11007408	1					
ANR	11007704	Argument	imemory		11007408	0					
ANR	11007705	Identifier	imemory		11007408	0					
ANR	11007706	Argument	& space [ 0 ]		11007408	1					
ANR	11007707	UnaryOperationExpression	& space [ 0 ]		11007408	0					
ANR	11007708	UnaryOperator	&		11007408	0					
ANR	11007709	ArrayIndexing	space [ 0 ]		11007408	1					
ANR	11007710	Identifier	space		11007408	0					
ANR	11007711	PrimaryExpression	0		11007408	1					
ANR	11007712	Argument	& sname		11007408	2					
ANR	11007713	UnaryOperationExpression	& sname		11007408	0					
ANR	11007714	UnaryOperator	&		11007408	0					
ANR	11007715	Identifier	sname		11007408	1					
ANR	11007716	IfStatement	if ( code < 0 )		11007408	2					
ANR	11007717	Condition	code < 0	3752:24:119247:119254	11007408	0	True				
ANR	11007718	RelationalExpression	code < 0		11007408	0		<			
ANR	11007719	Identifier	code		11007408	0					
ANR	11007720	PrimaryExpression	0		11007408	1					
ANR	11007721	CompoundStatement		55:33:1712:1712	11007408	1					
ANR	11007722	ExpressionStatement	( void ) gs_grestore ( igs )	3753:24:119282:119304	11007408	0	True				
ANR	11007723	CastExpression	( void ) gs_grestore ( igs )		11007408	0					
ANR	11007724	CastTarget	void		11007408	0					
ANR	11007725	CallExpression	gs_grestore ( igs )		11007408	1					
ANR	11007726	Callee	gs_grestore		11007408	0					
ANR	11007727	Identifier	gs_grestore		11007408	0					
ANR	11007728	ArgumentList	igs		11007408	1					
ANR	11007729	Argument	igs		11007408	0					
ANR	11007730	Identifier	igs		11007408	0					
ANR	11007731	ReturnStatement	return code ;	3754:24:119330:119341	11007408	1	True				
ANR	11007732	Identifier	code		11007408	0					
ANR	11007733	ExpressionStatement	"sep_name = name_index ( imemory , & sname )"	3756:20:119385:119423	11007408	3	True				
ANR	11007734	AssignmentExpression	"sep_name = name_index ( imemory , & sname )"		11007408	0		=			
ANR	11007735	Identifier	sep_name		11007408	0					
ANR	11007736	CallExpression	"name_index ( imemory , & sname )"		11007408	1					
ANR	11007737	Callee	name_index		11007408	0					
ANR	11007738	Identifier	name_index		11007408	0					
ANR	11007739	ArgumentList	imemory		11007408	1					
ANR	11007740	Argument	imemory		11007408	0					
ANR	11007741	Identifier	imemory		11007408	0					
ANR	11007742	Argument	& sname		11007408	1					
ANR	11007743	UnaryOperationExpression	& sname		11007408	0					
ANR	11007744	UnaryOperator	&		11007408	0					
ANR	11007745	Identifier	sname		11007408	1					
ANR	11007746	BreakStatement	break ;	3757:20:119445:119450	11007408	4	True				
ANR	11007747	Label	case t_name :	3758:16:119468:119479	11007408	5	True				
ANR	11007748	Identifier	t_name		11007408	0					
ANR	11007749	ExpressionStatement	"sep_name = name_index ( imemory , & space [ 0 ] )"	3759:20:119501:119542	11007408	6	True				
ANR	11007750	AssignmentExpression	"sep_name = name_index ( imemory , & space [ 0 ] )"		11007408	0		=			
ANR	11007751	Identifier	sep_name		11007408	0					
ANR	11007752	CallExpression	"name_index ( imemory , & space [ 0 ] )"		11007408	1					
ANR	11007753	Callee	name_index		11007408	0					
ANR	11007754	Identifier	name_index		11007408	0					
ANR	11007755	ArgumentList	imemory		11007408	1					
ANR	11007756	Argument	imemory		11007408	0					
ANR	11007757	Identifier	imemory		11007408	0					
ANR	11007758	Argument	& space [ 0 ]		11007408	1					
ANR	11007759	UnaryOperationExpression	& space [ 0 ]		11007408	0					
ANR	11007760	UnaryOperator	&		11007408	0					
ANR	11007761	ArrayIndexing	space [ 0 ]		11007408	1					
ANR	11007762	Identifier	space		11007408	0					
ANR	11007763	PrimaryExpression	0		11007408	1					
ANR	11007764	BreakStatement	break ;	3760:20:119564:119569	11007408	7	True				
ANR	11007765	Label	default :	3761:16:119587:119594	11007408	8	True				
ANR	11007766	Identifier	default		11007408	0					
ANR	11007767	ExpressionStatement	( void ) gs_grestore ( igs )	3762:20:119616:119638	11007408	9	True				
ANR	11007768	CastExpression	( void ) gs_grestore ( igs )		11007408	0					
ANR	11007769	CastTarget	void		11007408	0					
ANR	11007770	CallExpression	gs_grestore ( igs )		11007408	1					
ANR	11007771	Callee	gs_grestore		11007408	0					
ANR	11007772	Identifier	gs_grestore		11007408	0					
ANR	11007773	ArgumentList	igs		11007408	1					
ANR	11007774	Argument	igs		11007408	0					
ANR	11007775	Identifier	igs		11007408	0					
ANR	11007776	ExpressionStatement	return_error ( gs_error_typecheck )	3763:20:119660:119692	11007408	10	True				
ANR	11007777	CallExpression	return_error ( gs_error_typecheck )		11007408	0					
ANR	11007778	Callee	return_error		11007408	0					
ANR	11007779	Identifier	return_error		11007408	0					
ANR	11007780	ArgumentList	gs_error_typecheck		11007408	1					
ANR	11007781	Argument	gs_error_typecheck		11007408	0					
ANR	11007782	Identifier	gs_error_typecheck		11007408	0					
ANR	11007783	BreakStatement	break ;	3764:20:119714:119719	11007408	11	True				
ANR	11007784	ExpressionStatement	"make_int ( pindex , index )"	3767:12:119748:119771	11007408	2	True				
ANR	11007785	CallExpression	"make_int ( pindex , index )"		11007408	0					
ANR	11007786	Callee	make_int		11007408	0					
ANR	11007787	Identifier	make_int		11007408	0					
ANR	11007788	ArgumentList	pindex		11007408	1					
ANR	11007789	Argument	pindex		11007408	0					
ANR	11007790	Identifier	pindex		11007408	0					
ANR	11007791	Argument	index		11007408	1					
ANR	11007792	Identifier	index		11007408	0					
ANR	11007793	ExpressionStatement	"make_int ( pstage , stage )"	3768:12:119785:119808	11007408	3	True				
ANR	11007794	CallExpression	"make_int ( pstage , stage )"		11007408	0					
ANR	11007795	Callee	make_int		11007408	0					
ANR	11007796	Identifier	make_int		11007408	0					
ANR	11007797	ArgumentList	pstage		11007408	1					
ANR	11007798	Argument	pstage		11007408	0					
ANR	11007799	Identifier	pstage		11007408	0					
ANR	11007800	Argument	stage		11007408	1					
ANR	11007801	Identifier	stage		11007408	0					
ANR	11007802	ExpressionStatement	"gs_attachattributecolorspace ( sep_name , igs )"	3769:12:119822:119865	11007408	4	True				
ANR	11007803	CallExpression	"gs_attachattributecolorspace ( sep_name , igs )"		11007408	0					
ANR	11007804	Callee	gs_attachattributecolorspace		11007408	0					
ANR	11007805	Identifier	gs_attachattributecolorspace		11007408	0					
ANR	11007806	ArgumentList	sep_name		11007408	1					
ANR	11007807	Argument	sep_name		11007408	0					
ANR	11007808	Identifier	sep_name		11007408	0					
ANR	11007809	Argument	igs		11007408	1					
ANR	11007810	Identifier	igs		11007408	0					
ANR	11007811	ExpressionStatement	code = gs_grestore ( igs )	3771:12:119880:119903	11007408	5	True				
ANR	11007812	AssignmentExpression	code = gs_grestore ( igs )		11007408	0		=			
ANR	11007813	Identifier	code		11007408	0					
ANR	11007814	CallExpression	gs_grestore ( igs )		11007408	1					
ANR	11007815	Callee	gs_grestore		11007408	0					
ANR	11007816	Identifier	gs_grestore		11007408	0					
ANR	11007817	ArgumentList	igs		11007408	1					
ANR	11007818	Argument	igs		11007408	0					
ANR	11007819	Identifier	igs		11007408	0					
ANR	11007820	IfStatement	if ( code < 0 )		11007408	6					
ANR	11007821	Condition	code < 0	3772:16:119921:119928	11007408	0	True				
ANR	11007822	RelationalExpression	code < 0		11007408	0		<			
ANR	11007823	Identifier	code		11007408	0					
ANR	11007824	PrimaryExpression	0		11007408	1					
ANR	11007825	ReturnStatement	return code ;	3773:16:119947:119958	11007408	1	True				
ANR	11007826	Identifier	code		11007408	0					
ANR	11007827	Condition	1	3776:10:119986:119986	11007408	1	True				
ANR	11007828	PrimaryExpression	1		11007408	0					
ANR	11007829	ReturnType	static int		11007408	1					
ANR	11007830	Identifier	devicencolorants_cont		11007408	2					
ANR	11007831	ParameterList	i_ctx_t * i_ctx_p		11007408	3					
ANR	11007832	Parameter	i_ctx_t * i_ctx_p	3697:33:117525:117540	11007408	0	True				
ANR	11007833	ParameterType	i_ctx_t *		11007408	0					
ANR	11007834	Identifier	i_ctx_p		11007408	1					
ANR	11007835	CFGEntryNode	ENTRY		11007408		True				
ANR	11007836	CFGExitNode	EXIT		11007408		True				
ANR	11007837	Symbol	code		11007408						
ANR	11007838	Symbol	esp		11007408						
ANR	11007839	Symbol	* op		11007408						
ANR	11007840	Symbol	sep_name		11007408						
ANR	11007841	Symbol	* pindex		11007408						
ANR	11007842	Symbol	o_pop_estack		11007408						
ANR	11007843	Symbol	& sname		11007408						
ANR	11007844	Symbol	osp		11007408						
ANR	11007845	Symbol	space		11007408						
ANR	11007846	Symbol	name_from_string		11007408						
ANR	11007847	Symbol	gs_grestore		11007408						
ANR	11007848	Symbol	pstage -> value . intval		11007408						
ANR	11007849	Symbol	gs_gsave		11007408						
ANR	11007850	Symbol	gs_error_typecheck		11007408						
ANR	11007851	Symbol	igs		11007408						
ANR	11007852	Symbol	zsetcolorspace		11007408						
ANR	11007853	Symbol	name_index		11007408						
ANR	11007854	Symbol	dict		11007408						
ANR	11007855	Symbol	imemory		11007408						
ANR	11007856	Symbol	dict_next		11007408						
ANR	11007857	Symbol	& space		11007408						
ANR	11007858	Symbol	r_type		11007408						
ANR	11007859	Symbol	op		11007408						
ANR	11007860	Symbol	validate_spaces		11007408						
ANR	11007861	Symbol	* pstage		11007408						
ANR	11007862	Symbol	pstage		11007408						
ANR	11007863	Symbol	index		11007408						
ANR	11007864	Symbol	ep		11007408						
ANR	11007865	Symbol	pstage -> value		11007408						
ANR	11007866	Symbol	devicencolorants_cont		11007408						
ANR	11007867	Symbol	& depth		11007408						
ANR	11007868	Symbol	depth		11007408						
ANR	11007869	Symbol	stage		11007408						
ANR	11007870	Symbol	i_ctx_p		11007408						
ANR	11007871	Symbol	sname		11007408						
ANR	11007872	Symbol	* space		11007408						
ANR	11007873	Symbol	& dict		11007408						
ANR	11007874	Symbol	pindex		11007408						
ANR	11007875	Symbol	pindex -> value		11007408						
ANR	11007876	Symbol	pdict		11007408						
ANR	11007877	Symbol	pindex -> value . intval		11007408						
ANR	11007878	Function	setdevicenspace	3779:0:119993:127738							
ANR	11007879	FunctionDef	"setdevicenspace (i_ctx_t * i_ctx_p , ref * devicenspace , int * stage , int * cont , int CIESubst)"		11007878	0					
ANR	11007880	CompoundStatement		3780:0:120095:127738	11007878	0					
ANR	11007881	IdentifierDeclStatement	os_ptr op = osp ;	3781:4:120101:120117	11007878	0	True				
ANR	11007882	IdentifierDecl	op = osp		11007878	0					
ANR	11007883	IdentifierDeclType	os_ptr		11007878	0					
ANR	11007884	Identifier	op		11007878	1					
ANR	11007885	AssignmentExpression	op = osp		11007878	2		=			
ANR	11007886	Identifier	osp		11007878	0					
ANR	11007887	Identifier	osp		11007878	1					
ANR	11007888	IdentifierDeclStatement	"int code = 0 , num_components , i ;"	3782:4:120156:120187	11007878	1	True				
ANR	11007889	IdentifierDecl	code = 0		11007878	0					
ANR	11007890	IdentifierDeclType	int		11007878	0					
ANR	11007891	Identifier	code		11007878	1					
ANR	11007892	AssignmentExpression	code = 0		11007878	2		=			
ANR	11007893	Identifier	code		11007878	0					
ANR	11007894	PrimaryExpression	0		11007878	1					
ANR	11007895	IdentifierDecl	num_components		11007878	1					
ANR	11007896	IdentifierDeclType	int		11007878	0					
ANR	11007897	Identifier	num_components		11007878	1					
ANR	11007898	IdentifierDecl	i		11007878	2					
ANR	11007899	IdentifierDeclType	int		11007878	0					
ANR	11007900	Identifier	i		11007878	1					
ANR	11007901	IdentifierDeclStatement	"ref namesarray , proc , sname , tname , sref ;"	3783:4:120193:120233	11007878	2	True				
ANR	11007902	IdentifierDecl	namesarray		11007878	0					
ANR	11007903	IdentifierDeclType	ref		11007878	0					
ANR	11007904	Identifier	namesarray		11007878	1					
ANR	11007905	IdentifierDecl	proc		11007878	1					
ANR	11007906	IdentifierDeclType	ref		11007878	0					
ANR	11007907	Identifier	proc		11007878	1					
ANR	11007908	IdentifierDecl	sname		11007878	2					
ANR	11007909	IdentifierDeclType	ref		11007878	0					
ANR	11007910	Identifier	sname		11007878	1					
ANR	11007911	IdentifierDecl	tname		11007878	3					
ANR	11007912	IdentifierDeclType	ref		11007878	0					
ANR	11007913	Identifier	tname		11007878	1					
ANR	11007914	IdentifierDecl	sref		11007878	4					
ANR	11007915	IdentifierDeclType	ref		11007878	0					
ANR	11007916	Identifier	sref		11007878	1					
ANR	11007917	IdentifierDeclStatement	ref_colorspace cspace_old ;	3784:4:120239:120264	11007878	3	True				
ANR	11007918	IdentifierDecl	cspace_old		11007878	0					
ANR	11007919	IdentifierDeclType	ref_colorspace		11007878	0					
ANR	11007920	Identifier	cspace_old		11007878	1					
ANR	11007921	IdentifierDeclStatement	gs_color_space * pcs ;	3785:4:120270:120289	11007878	4	True				
ANR	11007922	IdentifierDecl	* pcs		11007878	0					
ANR	11007923	IdentifierDeclType	gs_color_space *		11007878	0					
ANR	11007924	Identifier	pcs		11007878	1					
ANR	11007925	IdentifierDeclStatement	gs_color_space * pacs ;	3786:4:120295:120316	11007878	5	True				
ANR	11007926	IdentifierDecl	* pacs		11007878	0					
ANR	11007927	IdentifierDeclType	gs_color_space *		11007878	0					
ANR	11007928	Identifier	pacs		11007878	1					
ANR	11007929	IdentifierDeclStatement	gs_function_t * pfn = NULL ;	3787:4:120322:120347	11007878	6	True				
ANR	11007930	IdentifierDecl	* pfn = NULL		11007878	0					
ANR	11007931	IdentifierDeclType	gs_function_t *		11007878	0					
ANR	11007932	Identifier	pfn		11007878	1					
ANR	11007933	AssignmentExpression	* pfn = NULL		11007878	2		=			
ANR	11007934	Identifier	NULL		11007878	0					
ANR	11007935	Identifier	NULL		11007878	1					
ANR	11007936	IdentifierDeclStatement	gs_separation_name * names ;	3788:4:120353:120378	11007878	7	True				
ANR	11007937	IdentifierDecl	* names		11007878	0					
ANR	11007938	IdentifierDeclType	gs_separation_name *		11007878	0					
ANR	11007939	Identifier	names		11007878	1					
ANR	11007940	IdentifierDeclStatement	gs_client_color cc ;	3789:4:120384:120402	11007878	8	True				
ANR	11007941	IdentifierDecl	cc		11007878	0					
ANR	11007942	IdentifierDeclType	gs_client_color		11007878	0					
ANR	11007943	Identifier	cc		11007878	1					
ANR	11007944	IfStatement	if ( i_ctx_p -> language_level < 3 )		11007878	9					
ANR	11007945	Condition	i_ctx_p -> language_level < 3	3791:8:120413:120439	11007878	0	True				
ANR	11007946	RelationalExpression	i_ctx_p -> language_level < 3		11007878	0		<			
ANR	11007947	PtrMemberAccess	i_ctx_p -> language_level		11007878	0					
ANR	11007948	Identifier	i_ctx_p		11007878	0					
ANR	11007949	Identifier	language_level		11007878	1					
ANR	11007950	PrimaryExpression	3		11007878	1					
ANR	11007951	ExpressionStatement	return_error ( gs_error_undefined )	3792:8:120450:120482	11007878	1	True				
ANR	11007952	CallExpression	return_error ( gs_error_undefined )		11007878	0					
ANR	11007953	Callee	return_error		11007878	0					
ANR	11007954	Identifier	return_error		11007878	0					
ANR	11007955	ArgumentList	gs_error_undefined		11007878	1					
ANR	11007956	Argument	gs_error_undefined		11007878	0					
ANR	11007957	Identifier	gs_error_undefined		11007878	0					
ANR	11007958	ExpressionStatement	* cont = 0	3794:4:120489:120498	11007878	10	True				
ANR	11007959	AssignmentExpression	* cont = 0		11007878	0		=			
ANR	11007960	UnaryOperationExpression	* cont		11007878	0					
ANR	11007961	UnaryOperator	*		11007878	0					
ANR	11007962	Identifier	cont		11007878	1					
ANR	11007963	PrimaryExpression	0		11007878	1					
ANR	11007964	IfStatement	if ( ( * stage ) == 2 )		11007878	11					
ANR	11007965	Condition	( * stage ) == 2	3795:8:120508:120520	11007878	0	True				
ANR	11007966	EqualityExpression	( * stage ) == 2		11007878	0		==			
ANR	11007967	UnaryOperationExpression	* stage		11007878	0					
ANR	11007968	UnaryOperator	*		11007878	0					
ANR	11007969	Identifier	stage		11007878	1					
ANR	11007970	PrimaryExpression	2		11007878	1					
ANR	11007971	CompoundStatement		16:23:427:427	11007878	1					
ANR	11007972	IfStatement	if ( r_size ( devicenspace ) == 5 )		11007878	0					
ANR	11007973	Condition	r_size ( devicenspace ) == 5	3796:12:120537:120561	11007878	0	True				
ANR	11007974	EqualityExpression	r_size ( devicenspace ) == 5		11007878	0		==			
ANR	11007975	CallExpression	r_size ( devicenspace )		11007878	0					
ANR	11007976	Callee	r_size		11007878	0					
ANR	11007977	Identifier	r_size		11007878	0					
ANR	11007978	ArgumentList	devicenspace		11007878	1					
ANR	11007979	Argument	devicenspace		11007878	0					
ANR	11007980	Identifier	devicenspace		11007878	0					
ANR	11007981	PrimaryExpression	5		11007878	1					
ANR	11007982	CompoundStatement		25:9:977:991	11007878	1					
ANR	11007983	IdentifierDeclStatement	ref * colorants ;	3804:9:121073:121087	11007878	0	True				
ANR	11007984	IdentifierDecl	* colorants		11007878	0					
ANR	11007985	IdentifierDeclType	ref *		11007878	0					
ANR	11007986	Identifier	colorants		11007878	1					
ANR	11007987	ExpressionStatement	"code = array_get ( imemory , devicenspace , 4 , & sref )"	3806:12:121102:121151	11007878	1	True				
ANR	11007988	AssignmentExpression	"code = array_get ( imemory , devicenspace , 4 , & sref )"		11007878	0		=			
ANR	11007989	Identifier	code		11007878	0					
ANR	11007990	CallExpression	"array_get ( imemory , devicenspace , 4 , & sref )"		11007878	1					
ANR	11007991	Callee	array_get		11007878	0					
ANR	11007992	Identifier	array_get		11007878	0					
ANR	11007993	ArgumentList	imemory		11007878	1					
ANR	11007994	Argument	imemory		11007878	0					
ANR	11007995	Identifier	imemory		11007878	0					
ANR	11007996	Argument	devicenspace		11007878	1					
ANR	11007997	Identifier	devicenspace		11007878	0					
ANR	11007998	Argument	4		11007878	2					
ANR	11007999	PrimaryExpression	4		11007878	0					
ANR	11008000	Argument	& sref		11007878	3					
ANR	11008001	UnaryOperationExpression	& sref		11007878	0					
ANR	11008002	UnaryOperator	&		11007878	0					
ANR	11008003	Identifier	sref		11007878	1					
ANR	11008004	IfStatement	if ( code < 0 )		11007878	2					
ANR	11008005	Condition	code < 0	3807:16:121169:121176	11007878	0	True				
ANR	11008006	RelationalExpression	code < 0		11007878	0		<			
ANR	11008007	Identifier	code		11007878	0					
ANR	11008008	PrimaryExpression	0		11007878	1					
ANR	11008009	ReturnStatement	return code ;	3808:16:121195:121206	11007878	1	True				
ANR	11008010	Identifier	code		11007878	0					
ANR	11008011	IfStatement	"if ( ! r_has_type ( & sref , t_dictionary ) )"		11007878	3					
ANR	11008012	Condition	"! r_has_type ( & sref , t_dictionary )"	3809:16:121224:121255	11007878	0	True				
ANR	11008013	UnaryOperationExpression	"! r_has_type ( & sref , t_dictionary )"		11007878	0					
ANR	11008014	UnaryOperator	!		11007878	0					
ANR	11008015	CallExpression	"r_has_type ( & sref , t_dictionary )"		11007878	1					
ANR	11008016	Callee	r_has_type		11007878	0					
ANR	11008017	Identifier	r_has_type		11007878	0					
ANR	11008018	ArgumentList	& sref		11007878	1					
ANR	11008019	Argument	& sref		11007878	0					
ANR	11008020	UnaryOperationExpression	& sref		11007878	0					
ANR	11008021	UnaryOperator	&		11007878	0					
ANR	11008022	Identifier	sref		11007878	1					
ANR	11008023	Argument	t_dictionary		11007878	1					
ANR	11008024	Identifier	t_dictionary		11007878	0					
ANR	11008025	CompoundStatement		30:50:1162:1162	11007878	1					
ANR	11008026	ExpressionStatement	* stage = 0	3810:16:121276:121286	11007878	0	True				
ANR	11008027	AssignmentExpression	* stage = 0		11007878	0		=			
ANR	11008028	UnaryOperationExpression	* stage		11007878	0					
ANR	11008029	UnaryOperator	*		11007878	0					
ANR	11008030	Identifier	stage		11007878	1					
ANR	11008031	PrimaryExpression	0		11007878	1					
ANR	11008032	ReturnStatement	return 0 ;	3811:16:121304:121312	11007878	1	True				
ANR	11008033	PrimaryExpression	0		11007878	0					
ANR	11008034	IfStatement	"if ( dict_find_string ( & sref , ""Colorants"" , & colorants ) <= 0 )"		11007878	4					
ANR	11008035	Condition	"dict_find_string ( & sref , ""Colorants"" , & colorants ) <= 0"	3813:16:121344:121396	11007878	0	True				
ANR	11008036	RelationalExpression	"dict_find_string ( & sref , ""Colorants"" , & colorants ) <= 0"		11007878	0		<=			
ANR	11008037	CallExpression	"dict_find_string ( & sref , ""Colorants"" , & colorants )"		11007878	0					
ANR	11008038	Callee	dict_find_string		11007878	0					
ANR	11008039	Identifier	dict_find_string		11007878	0					
ANR	11008040	ArgumentList	& sref		11007878	1					
ANR	11008041	Argument	& sref		11007878	0					
ANR	11008042	UnaryOperationExpression	& sref		11007878	0					
ANR	11008043	UnaryOperator	&		11007878	0					
ANR	11008044	Identifier	sref		11007878	1					
ANR	11008045	Argument	"""Colorants"""		11007878	1					
ANR	11008046	PrimaryExpression	"""Colorants"""		11007878	0					
ANR	11008047	Argument	& colorants		11007878	2					
ANR	11008048	UnaryOperationExpression	& colorants		11007878	0					
ANR	11008049	UnaryOperator	&		11007878	0					
ANR	11008050	Identifier	colorants		11007878	1					
ANR	11008051	PrimaryExpression	0		11007878	1					
ANR	11008052	CompoundStatement		34:71:1303:1303	11007878	1					
ANR	11008053	ExpressionStatement	* stage = 0	3814:16:121417:121427	11007878	0	True				
ANR	11008054	AssignmentExpression	* stage = 0		11007878	0		=			
ANR	11008055	UnaryOperationExpression	* stage		11007878	0					
ANR	11008056	UnaryOperator	*		11007878	0					
ANR	11008057	Identifier	stage		11007878	1					
ANR	11008058	PrimaryExpression	0		11007878	1					
ANR	11008059	ReturnStatement	return 0 ;	3815:16:121445:121453	11007878	1	True				
ANR	11008060	PrimaryExpression	0		11007878	0					
ANR	11008061	IfStatement	"if ( ! r_has_type ( colorants , t_dictionary ) )"		11007878	5					
ANR	11008062	Condition	"! r_has_type ( colorants , t_dictionary )"	3817:16:121485:121520	11007878	0	True				
ANR	11008063	UnaryOperationExpression	"! r_has_type ( colorants , t_dictionary )"		11007878	0					
ANR	11008064	UnaryOperator	!		11007878	0					
ANR	11008065	CallExpression	"r_has_type ( colorants , t_dictionary )"		11007878	1					
ANR	11008066	Callee	r_has_type		11007878	0					
ANR	11008067	Identifier	r_has_type		11007878	0					
ANR	11008068	ArgumentList	colorants		11007878	1					
ANR	11008069	Argument	colorants		11007878	0					
ANR	11008070	Identifier	colorants		11007878	0					
ANR	11008071	Argument	t_dictionary		11007878	1					
ANR	11008072	Identifier	t_dictionary		11007878	0					
ANR	11008073	CompoundStatement		38:54:1427:1427	11007878	1					
ANR	11008074	ExpressionStatement	* stage = 0	3818:16:121541:121551	11007878	0	True				
ANR	11008075	AssignmentExpression	* stage = 0		11007878	0		=			
ANR	11008076	UnaryOperationExpression	* stage		11007878	0					
ANR	11008077	UnaryOperator	*		11007878	0					
ANR	11008078	Identifier	stage		11007878	1					
ANR	11008079	PrimaryExpression	0		11007878	1					
ANR	11008080	ReturnStatement	return 0 ;	3819:16:121569:121577	11007878	1	True				
ANR	11008081	PrimaryExpression	0		11007878	0					
ANR	11008082	ExpressionStatement	* stage = 3	3821:12:121605:121615	11007878	6	True				
ANR	11008083	AssignmentExpression	* stage = 3		11007878	0		=			
ANR	11008084	UnaryOperationExpression	* stage		11007878	0					
ANR	11008085	UnaryOperator	*		11007878	0					
ANR	11008086	Identifier	stage		11007878	1					
ANR	11008087	PrimaryExpression	3		11007878	1					
ANR	11008088	ExpressionStatement	* cont = 1	3822:12:121629:121638	11007878	7	True				
ANR	11008089	AssignmentExpression	* cont = 1		11007878	0		=			
ANR	11008090	UnaryOperationExpression	* cont		11007878	0					
ANR	11008091	UnaryOperator	*		11007878	0					
ANR	11008092	Identifier	cont		11007878	1					
ANR	11008093	PrimaryExpression	1		11007878	1					
ANR	11008094	ExpressionStatement	check_estack ( 5 )	3823:12:121652:121667	11007878	8	True				
ANR	11008095	CallExpression	check_estack ( 5 )		11007878	0					
ANR	11008096	Callee	check_estack		11007878	0					
ANR	11008097	Identifier	check_estack		11007878	0					
ANR	11008098	ArgumentList	5		11007878	1					
ANR	11008099	Argument	5		11007878	0					
ANR	11008100	PrimaryExpression	5		11007878	0					
ANR	11008101	ExpressionStatement	"push_mark_estack ( es_other , colour_cleanup )"	3824:12:121681:121723	11007878	9	True				
ANR	11008102	CallExpression	"push_mark_estack ( es_other , colour_cleanup )"		11007878	0					
ANR	11008103	Callee	push_mark_estack		11007878	0					
ANR	11008104	Identifier	push_mark_estack		11007878	0					
ANR	11008105	ArgumentList	es_other		11007878	1					
ANR	11008106	Argument	es_other		11007878	0					
ANR	11008107	Identifier	es_other		11007878	0					
ANR	11008108	Argument	colour_cleanup		11007878	1					
ANR	11008109	Identifier	colour_cleanup		11007878	0					
ANR	11008110	ExpressionStatement	esp ++	3825:12:121737:121742	11007878	10	True				
ANR	11008111	PostIncDecOperationExpression	esp ++		11007878	0					
ANR	11008112	Identifier	esp		11007878	0					
ANR	11008113	IncDec	++		11007878	1					
ANR	11008114	ExpressionStatement	"make_int ( esp , dict_first ( colorants ) )"	3827:12:121830:121866	11007878	11	True				
ANR	11008115	CallExpression	"make_int ( esp , dict_first ( colorants ) )"		11007878	0					
ANR	11008116	Callee	make_int		11007878	0					
ANR	11008117	Identifier	make_int		11007878	0					
ANR	11008118	ArgumentList	esp		11007878	1					
ANR	11008119	Argument	esp		11007878	0					
ANR	11008120	Identifier	esp		11007878	0					
ANR	11008121	Argument	dict_first ( colorants )		11007878	1					
ANR	11008122	CallExpression	dict_first ( colorants )		11007878	0					
ANR	11008123	Callee	dict_first		11007878	0					
ANR	11008124	Identifier	dict_first		11007878	0					
ANR	11008125	ArgumentList	colorants		11007878	1					
ANR	11008126	Argument	colorants		11007878	0					
ANR	11008127	Identifier	colorants		11007878	0					
ANR	11008128	ExpressionStatement	esp ++	3828:12:121880:121885	11007878	12	True				
ANR	11008129	PostIncDecOperationExpression	esp ++		11007878	0					
ANR	11008130	Identifier	esp		11007878	0					
ANR	11008131	IncDec	++		11007878	1					
ANR	11008132	ExpressionStatement	"make_int ( esp , 0 )"	3830:12:121950:121966	11007878	13	True				
ANR	11008133	CallExpression	"make_int ( esp , 0 )"		11007878	0					
ANR	11008134	Callee	make_int		11007878	0					
ANR	11008135	Identifier	make_int		11007878	0					
ANR	11008136	ArgumentList	esp		11007878	1					
ANR	11008137	Argument	esp		11007878	0					
ANR	11008138	Identifier	esp		11007878	0					
ANR	11008139	Argument	0		11007878	1					
ANR	11008140	PrimaryExpression	0		11007878	0					
ANR	11008141	ExpressionStatement	esp ++	3831:12:121980:121985	11007878	14	True				
ANR	11008142	PostIncDecOperationExpression	esp ++		11007878	0					
ANR	11008143	Identifier	esp		11007878	0					
ANR	11008144	IncDec	++		11007878	1					
ANR	11008145	ExpressionStatement	"ref_assign ( esp , colorants )"	3834:12:122074:122100	11007878	15	True				
ANR	11008146	CallExpression	"ref_assign ( esp , colorants )"		11007878	0					
ANR	11008147	Callee	ref_assign		11007878	0					
ANR	11008148	Identifier	ref_assign		11007878	0					
ANR	11008149	ArgumentList	esp		11007878	1					
ANR	11008150	Argument	esp		11007878	0					
ANR	11008151	Identifier	esp		11007878	0					
ANR	11008152	Argument	colorants		11007878	1					
ANR	11008153	Identifier	colorants		11007878	0					
ANR	11008154	ExpressionStatement	push_op_estack ( devicencolorants_cont )	3835:12:122114:122151	11007878	16	True				
ANR	11008155	CallExpression	push_op_estack ( devicencolorants_cont )		11007878	0					
ANR	11008156	Callee	push_op_estack		11007878	0					
ANR	11008157	Identifier	push_op_estack		11007878	0					
ANR	11008158	ArgumentList	devicencolorants_cont		11007878	1					
ANR	11008159	Argument	devicencolorants_cont		11007878	0					
ANR	11008160	Identifier	devicencolorants_cont		11007878	0					
ANR	11008161	ReturnStatement	return o_push_estack ;	3836:12:122165:122185	11007878	17	True				
ANR	11008162	Identifier	o_push_estack		11007878	0					
ANR	11008163	ElseStatement	else		11007878	0					
ANR	11008164	CompoundStatement		58:15:2106:2106	11007878	0					
ANR	11008165	ExpressionStatement	* stage = 0	3838:12:122216:122226	11007878	0	True				
ANR	11008166	AssignmentExpression	* stage = 0		11007878	0		=			
ANR	11008167	UnaryOperationExpression	* stage		11007878	0					
ANR	11008168	UnaryOperator	*		11007878	0					
ANR	11008169	Identifier	stage		11007878	1					
ANR	11008170	PrimaryExpression	0		11007878	1					
ANR	11008171	ReturnStatement	return 0 ;	3839:12:122240:122248	11007878	1	True				
ANR	11008172	PrimaryExpression	0		11007878	0					
ANR	11008173	IfStatement	if ( ( * stage ) == 3 )		11007878	12					
ANR	11008174	Condition	( * stage ) == 3	3842:8:122274:122286	11007878	0	True				
ANR	11008175	EqualityExpression	( * stage ) == 3		11007878	0		==			
ANR	11008176	UnaryOperationExpression	* stage		11007878	0					
ANR	11008177	UnaryOperator	*		11007878	0					
ANR	11008178	Identifier	stage		11007878	1					
ANR	11008179	PrimaryExpression	3		11007878	1					
ANR	11008180	CompoundStatement		63:23:2193:2193	11007878	1					
ANR	11008181	ExpressionStatement	* stage = 0	3843:8:122299:122309	11007878	0	True				
ANR	11008182	AssignmentExpression	* stage = 0		11007878	0		=			
ANR	11008183	UnaryOperationExpression	* stage		11007878	0					
ANR	11008184	UnaryOperator	*		11007878	0					
ANR	11008185	Identifier	stage		11007878	1					
ANR	11008186	PrimaryExpression	0		11007878	1					
ANR	11008187	ReturnStatement	return 0 ;	3844:8:122319:122327	11007878	1	True				
ANR	11008188	PrimaryExpression	0		11007878	0					
ANR	11008189	IfStatement	if ( ( * stage ) == 0 )		11007878	13					
ANR	11008190	Condition	( * stage ) == 0	3846:8:122343:122355	11007878	0	True				
ANR	11008191	EqualityExpression	( * stage ) == 0		11007878	0		==			
ANR	11008192	UnaryOperationExpression	* stage		11007878	0					
ANR	11008193	UnaryOperator	*		11007878	0					
ANR	11008194	Identifier	stage		11007878	1					
ANR	11008195	PrimaryExpression	0		11007878	1					
ANR	11008196	CompoundStatement		67:23:2262:2262	11007878	1					
ANR	11008197	ExpressionStatement	"code = array_get ( imemory , devicenspace , 3 , & proc )"	3847:8:122368:122417	11007878	0	True				
ANR	11008198	AssignmentExpression	"code = array_get ( imemory , devicenspace , 3 , & proc )"		11007878	0		=			
ANR	11008199	Identifier	code		11007878	0					
ANR	11008200	CallExpression	"array_get ( imemory , devicenspace , 3 , & proc )"		11007878	1					
ANR	11008201	Callee	array_get		11007878	0					
ANR	11008202	Identifier	array_get		11007878	0					
ANR	11008203	ArgumentList	imemory		11007878	1					
ANR	11008204	Argument	imemory		11007878	0					
ANR	11008205	Identifier	imemory		11007878	0					
ANR	11008206	Argument	devicenspace		11007878	1					
ANR	11008207	Identifier	devicenspace		11007878	0					
ANR	11008208	Argument	3		11007878	2					
ANR	11008209	PrimaryExpression	3		11007878	0					
ANR	11008210	Argument	& proc		11007878	3					
ANR	11008211	UnaryOperationExpression	& proc		11007878	0					
ANR	11008212	UnaryOperator	&		11007878	0					
ANR	11008213	Identifier	proc		11007878	1					
ANR	11008214	IfStatement	if ( code < 0 )		11007878	1					
ANR	11008215	Condition	code < 0	3848:12:122431:122438	11007878	0	True				
ANR	11008216	RelationalExpression	code < 0		11007878	0		<			
ANR	11008217	Identifier	code		11007878	0					
ANR	11008218	PrimaryExpression	0		11007878	1					
ANR	11008219	ReturnStatement	return code ;	3849:12:122453:122464	11007878	1	True				
ANR	11008220	Identifier	code		11007878	0					
ANR	11008221	ExpressionStatement	pfn = ref_function ( & proc )	3850:8:122474:122499	11007878	2	True				
ANR	11008222	AssignmentExpression	pfn = ref_function ( & proc )		11007878	0		=			
ANR	11008223	Identifier	pfn		11007878	0					
ANR	11008224	CallExpression	ref_function ( & proc )		11007878	1					
ANR	11008225	Callee	ref_function		11007878	0					
ANR	11008226	Identifier	ref_function		11007878	0					
ANR	11008227	ArgumentList	& proc		11007878	1					
ANR	11008228	Argument	& proc		11007878	0					
ANR	11008229	UnaryOperationExpression	& proc		11007878	0					
ANR	11008230	UnaryOperator	&		11007878	0					
ANR	11008231	Identifier	proc		11007878	1					
ANR	11008232	IfStatement	if ( pfn == NULL )		11007878	3					
ANR	11008233	Condition	pfn == NULL	3851:12:122513:122523	11007878	0	True				
ANR	11008234	EqualityExpression	pfn == NULL		11007878	0		==			
ANR	11008235	Identifier	pfn		11007878	0					
ANR	11008236	Identifier	NULL		11007878	1					
ANR	11008237	CompoundStatement		72:25:2430:2430	11007878	1					
ANR	11008238	ExpressionStatement	"code = convert_transform ( i_ctx_p , devicenspace , & proc )"	3853:12:122606:122660	11007878	0	True				
ANR	11008239	AssignmentExpression	"code = convert_transform ( i_ctx_p , devicenspace , & proc )"		11007878	0		=			
ANR	11008240	Identifier	code		11007878	0					
ANR	11008241	CallExpression	"convert_transform ( i_ctx_p , devicenspace , & proc )"		11007878	1					
ANR	11008242	Callee	convert_transform		11007878	0					
ANR	11008243	Identifier	convert_transform		11007878	0					
ANR	11008244	ArgumentList	i_ctx_p		11007878	1					
ANR	11008245	Argument	i_ctx_p		11007878	0					
ANR	11008246	Identifier	i_ctx_p		11007878	0					
ANR	11008247	Argument	devicenspace		11007878	1					
ANR	11008248	Identifier	devicenspace		11007878	0					
ANR	11008249	Argument	& proc		11007878	2					
ANR	11008250	UnaryOperationExpression	& proc		11007878	0					
ANR	11008251	UnaryOperator	&		11007878	0					
ANR	11008252	Identifier	proc		11007878	1					
ANR	11008253	IfStatement	if ( code < 0 )		11007878	1					
ANR	11008254	Condition	code < 0	3854:16:122678:122685	11007878	0	True				
ANR	11008255	RelationalExpression	code < 0		11007878	0		<			
ANR	11008256	Identifier	code		11007878	0					
ANR	11008257	PrimaryExpression	0		11007878	1					
ANR	11008258	ReturnStatement	return code ;	3855:16:122704:122715	11007878	1	True				
ANR	11008259	Identifier	code		11007878	0					
ANR	11008260	IfStatement	if ( code > 0 )		11007878	2					
ANR	11008261	Condition	code > 0	3856:16:122733:122740	11007878	0	True				
ANR	11008262	RelationalExpression	code > 0		11007878	0		>			
ANR	11008263	Identifier	code		11007878	0					
ANR	11008264	PrimaryExpression	0		11007878	1					
ANR	11008265	CompoundStatement		77:26:2647:2647	11007878	1					
ANR	11008266	ExpressionStatement	* cont = 1	3857:16:122761:122770	11007878	0	True				
ANR	11008267	AssignmentExpression	* cont = 1		11007878	0		=			
ANR	11008268	UnaryOperationExpression	* cont		11007878	0					
ANR	11008269	UnaryOperator	*		11007878	0					
ANR	11008270	Identifier	cont		11007878	1					
ANR	11008271	PrimaryExpression	1		11007878	1					
ANR	11008272	ExpressionStatement	* stage = 1	3858:16:122788:122798	11007878	1	True				
ANR	11008273	AssignmentExpression	* stage = 1		11007878	0		=			
ANR	11008274	UnaryOperationExpression	* stage		11007878	0					
ANR	11008275	UnaryOperator	*		11007878	0					
ANR	11008276	Identifier	stage		11007878	1					
ANR	11008277	PrimaryExpression	1		11007878	1					
ANR	11008278	ReturnStatement	return code ;	3859:16:122816:122827	11007878	2	True				
ANR	11008279	Identifier	code		11007878	0					
ANR	11008280	ExpressionStatement	op = osp	3865:12:123095:123103	11007878	3	True				
ANR	11008281	AssignmentExpression	op = osp		11007878	0		=			
ANR	11008282	Identifier	op		11007878	0					
ANR	11008283	Identifier	osp		11007878	1					
ANR	11008284	ExpressionStatement	pfn = ref_function ( op )	3866:12:123117:123139	11007878	4	True				
ANR	11008285	AssignmentExpression	pfn = ref_function ( op )		11007878	0		=			
ANR	11008286	Identifier	pfn		11007878	0					
ANR	11008287	CallExpression	ref_function ( op )		11007878	1					
ANR	11008288	Callee	ref_function		11007878	0					
ANR	11008289	Identifier	ref_function		11007878	0					
ANR	11008290	ArgumentList	op		11007878	1					
ANR	11008291	Argument	op		11007878	0					
ANR	11008292	Identifier	op		11007878	0					
ANR	11008293	ExpressionStatement	pop ( 1 )	3867:12:123153:123160	11007878	5	True				
ANR	11008294	CallExpression	pop ( 1 )		11007878	0					
ANR	11008295	Callee	pop		11007878	0					
ANR	11008296	Identifier	pop		11007878	0					
ANR	11008297	ArgumentList	1		11007878	1					
ANR	11008298	Argument	1		11007878	0					
ANR	11008299	PrimaryExpression	1		11007878	0					
ANR	11008300	ElseStatement	else		11007878	0					
ANR	11008301	CompoundStatement		90:11:3087:3087	11007878	0					
ANR	11008302	ExpressionStatement	op = osp	3871:8:123253:123261	11007878	0	True				
ANR	11008303	AssignmentExpression	op = osp		11007878	0		=			
ANR	11008304	Identifier	op		11007878	0					
ANR	11008305	Identifier	osp		11007878	1					
ANR	11008306	ExpressionStatement	pfn = ref_function ( op )	3872:8:123271:123293	11007878	1	True				
ANR	11008307	AssignmentExpression	pfn = ref_function ( op )		11007878	0		=			
ANR	11008308	Identifier	pfn		11007878	0					
ANR	11008309	CallExpression	ref_function ( op )		11007878	1					
ANR	11008310	Callee	ref_function		11007878	0					
ANR	11008311	Identifier	ref_function		11007878	0					
ANR	11008312	ArgumentList	op		11007878	1					
ANR	11008313	Argument	op		11007878	0					
ANR	11008314	Identifier	op		11007878	0					
ANR	11008315	ExpressionStatement	pop ( 1 )	3873:8:123303:123310	11007878	2	True				
ANR	11008316	CallExpression	pop ( 1 )		11007878	0					
ANR	11008317	Callee	pop		11007878	0					
ANR	11008318	Identifier	pop		11007878	0					
ANR	11008319	ArgumentList	1		11007878	1					
ANR	11008320	Argument	1		11007878	0					
ANR	11008321	PrimaryExpression	1		11007878	0					
ANR	11008322	ExpressionStatement	* stage = 2	3876:4:123323:123333	11007878	14	True				
ANR	11008323	AssignmentExpression	* stage = 2		11007878	0		=			
ANR	11008324	UnaryOperationExpression	* stage		11007878	0					
ANR	11008325	UnaryOperator	*		11007878	0					
ANR	11008326	Identifier	stage		11007878	1					
ANR	11008327	PrimaryExpression	2		11007878	1					
ANR	11008328	ExpressionStatement	"code = array_get ( imemory , devicenspace , 1 , & namesarray )"	3878:4:123340:123395	11007878	15	True				
ANR	11008329	AssignmentExpression	"code = array_get ( imemory , devicenspace , 1 , & namesarray )"		11007878	0		=			
ANR	11008330	Identifier	code		11007878	0					
ANR	11008331	CallExpression	"array_get ( imemory , devicenspace , 1 , & namesarray )"		11007878	1					
ANR	11008332	Callee	array_get		11007878	0					
ANR	11008333	Identifier	array_get		11007878	0					
ANR	11008334	ArgumentList	imemory		11007878	1					
ANR	11008335	Argument	imemory		11007878	0					
ANR	11008336	Identifier	imemory		11007878	0					
ANR	11008337	Argument	devicenspace		11007878	1					
ANR	11008338	Identifier	devicenspace		11007878	0					
ANR	11008339	Argument	1		11007878	2					
ANR	11008340	PrimaryExpression	1		11007878	0					
ANR	11008341	Argument	& namesarray		11007878	3					
ANR	11008342	UnaryOperationExpression	& namesarray		11007878	0					
ANR	11008343	UnaryOperator	&		11007878	0					
ANR	11008344	Identifier	namesarray		11007878	1					
ANR	11008345	IfStatement	if ( code < 0 )		11007878	16					
ANR	11008346	Condition	code < 0	3879:8:123405:123412	11007878	0	True				
ANR	11008347	RelationalExpression	code < 0		11007878	0		<			
ANR	11008348	Identifier	code		11007878	0					
ANR	11008349	PrimaryExpression	0		11007878	1					
ANR	11008350	ReturnStatement	return code ;	3880:8:123423:123434	11007878	1	True				
ANR	11008351	Identifier	code		11007878	0					
ANR	11008352	ExpressionStatement	num_components = r_size ( & namesarray )	3881:4:123440:123476	11007878	17	True				
ANR	11008353	AssignmentExpression	num_components = r_size ( & namesarray )		11007878	0		=			
ANR	11008354	Identifier	num_components		11007878	0					
ANR	11008355	CallExpression	r_size ( & namesarray )		11007878	1					
ANR	11008356	Callee	r_size		11007878	0					
ANR	11008357	Identifier	r_size		11007878	0					
ANR	11008358	ArgumentList	& namesarray		11007878	1					
ANR	11008359	Argument	& namesarray		11007878	0					
ANR	11008360	UnaryOperationExpression	& namesarray		11007878	0					
ANR	11008361	UnaryOperator	&		11007878	0					
ANR	11008362	Identifier	namesarray		11007878	1					
ANR	11008363	ExpressionStatement	pacs = gs_currentcolorspace ( igs )	3883:4:123563:123595	11007878	18	True				
ANR	11008364	AssignmentExpression	pacs = gs_currentcolorspace ( igs )		11007878	0		=			
ANR	11008365	Identifier	pacs		11007878	0					
ANR	11008366	CallExpression	gs_currentcolorspace ( igs )		11007878	1					
ANR	11008367	Callee	gs_currentcolorspace		11007878	0					
ANR	11008368	Identifier	gs_currentcolorspace		11007878	0					
ANR	11008369	ArgumentList	igs		11007878	1					
ANR	11008370	Argument	igs		11007878	0					
ANR	11008371	Identifier	igs		11007878	0					
ANR	11008372	IfStatement	if ( num_components == 1 )		11007878	19					
ANR	11008373	Condition	num_components == 1	3885:8:123606:123624	11007878	0	True				
ANR	11008374	EqualityExpression	num_components == 1		11007878	0		==			
ANR	11008375	Identifier	num_components		11007878	0					
ANR	11008376	PrimaryExpression	1		11007878	1					
ANR	11008377	CompoundStatement		106:29:3531:3531	11007878	1					
ANR	11008378	ExpressionStatement	"array_get ( imemory , & namesarray , ( long ) 0 , & sname )"	3886:8:123637:123685	11007878	0	True				
ANR	11008379	CallExpression	"array_get ( imemory , & namesarray , ( long ) 0 , & sname )"		11007878	0					
ANR	11008380	Callee	array_get		11007878	0					
ANR	11008381	Identifier	array_get		11007878	0					
ANR	11008382	ArgumentList	imemory		11007878	1					
ANR	11008383	Argument	imemory		11007878	0					
ANR	11008384	Identifier	imemory		11007878	0					
ANR	11008385	Argument	& namesarray		11007878	1					
ANR	11008386	UnaryOperationExpression	& namesarray		11007878	0					
ANR	11008387	UnaryOperator	&		11007878	0					
ANR	11008388	Identifier	namesarray		11007878	1					
ANR	11008389	Argument	( long ) 0		11007878	2					
ANR	11008390	CastExpression	( long ) 0		11007878	0					
ANR	11008391	CastTarget	long		11007878	0					
ANR	11008392	PrimaryExpression	0		11007878	1					
ANR	11008393	Argument	& sname		11007878	3					
ANR	11008394	UnaryOperationExpression	& sname		11007878	0					
ANR	11008395	UnaryOperator	&		11007878	0					
ANR	11008396	Identifier	sname		11007878	1					
ANR	11008397	SwitchStatement	switch ( r_type ( & sname ) )		11007878	1					
ANR	11008398	Condition	r_type ( & sname )	3887:16:123703:123716	11007878	0	True				
ANR	11008399	CallExpression	r_type ( & sname )		11007878	0					
ANR	11008400	Callee	r_type		11007878	0					
ANR	11008401	Identifier	r_type		11007878	0					
ANR	11008402	ArgumentList	& sname		11007878	1					
ANR	11008403	Argument	& sname		11007878	0					
ANR	11008404	UnaryOperationExpression	& sname		11007878	0					
ANR	11008405	UnaryOperator	&		11007878	0					
ANR	11008406	Identifier	sname		11007878	1					
ANR	11008407	CompoundStatement		108:32:3623:3623	11007878	1					
ANR	11008408	Label	case t_string :	3888:12:123733:123746	11007878	0	True				
ANR	11008409	Identifier	t_string		11007878	0					
ANR	11008410	ExpressionStatement	tname = sname	3889:16:123764:123777	11007878	1	True				
ANR	11008411	AssignmentExpression	tname = sname		11007878	0		=			
ANR	11008412	Identifier	tname		11007878	0					
ANR	11008413	Identifier	sname		11007878	1					
ANR	11008414	BreakStatement	break ;	3890:16:123795:123800	11007878	2	True				
ANR	11008415	Label	case t_name :	3891:12:123814:123825	11007878	3	True				
ANR	11008416	Identifier	t_name		11007878	0					
ANR	11008417	ExpressionStatement	"name_string_ref ( imemory , & sname , & tname )"	3892:16:123843:123883	11007878	4	True				
ANR	11008418	CallExpression	"name_string_ref ( imemory , & sname , & tname )"		11007878	0					
ANR	11008419	Callee	name_string_ref		11007878	0					
ANR	11008420	Identifier	name_string_ref		11007878	0					
ANR	11008421	ArgumentList	imemory		11007878	1					
ANR	11008422	Argument	imemory		11007878	0					
ANR	11008423	Identifier	imemory		11007878	0					
ANR	11008424	Argument	& sname		11007878	1					
ANR	11008425	UnaryOperationExpression	& sname		11007878	0					
ANR	11008426	UnaryOperator	&		11007878	0					
ANR	11008427	Identifier	sname		11007878	1					
ANR	11008428	Argument	& tname		11007878	2					
ANR	11008429	UnaryOperationExpression	& tname		11007878	0					
ANR	11008430	UnaryOperator	&		11007878	0					
ANR	11008431	Identifier	tname		11007878	1					
ANR	11008432	BreakStatement	break ;	3893:16:123901:123906	11007878	5	True				
ANR	11008433	Label	default :	3894:12:123920:123927	11007878	6	True				
ANR	11008434	Identifier	default		11007878	0					
ANR	11008435	ExpressionStatement	return_error ( gs_error_typecheck )	3895:16:123945:123977	11007878	7	True				
ANR	11008436	CallExpression	return_error ( gs_error_typecheck )		11007878	0					
ANR	11008437	Callee	return_error		11007878	0					
ANR	11008438	Identifier	return_error		11007878	0					
ANR	11008439	ArgumentList	gs_error_typecheck		11007878	1					
ANR	11008440	Argument	gs_error_typecheck		11007878	0					
ANR	11008441	Identifier	gs_error_typecheck		11007878	0					
ANR	11008442	BreakStatement	break ;	3896:16:123995:124000	11007878	8	True				
ANR	11008443	IfStatement	"if ( strncmp ( ( const char * ) tname . value . const_bytes , ""All"" , 3 ) == 0 && r_size ( & tname ) == 3 )"		11007878	2					
ANR	11008444	Condition	"strncmp ( ( const char * ) tname . value . const_bytes , ""All"" , 3 ) == 0 && r_size ( & tname ) == 3"	3898:12:124024:124107	11007878	0	True				
ANR	11008445	AndExpression	"strncmp ( ( const char * ) tname . value . const_bytes , ""All"" , 3 ) == 0 && r_size ( & tname ) == 3"		11007878	0		&&			
ANR	11008446	EqualityExpression	"strncmp ( ( const char * ) tname . value . const_bytes , ""All"" , 3 ) == 0"		11007878	0		==			
ANR	11008447	CallExpression	"strncmp ( ( const char * ) tname . value . const_bytes , ""All"" , 3 )"		11007878	0					
ANR	11008448	Callee	strncmp		11007878	0					
ANR	11008449	Identifier	strncmp		11007878	0					
ANR	11008450	ArgumentList	( const char * ) tname . value . const_bytes		11007878	1					
ANR	11008451	Argument	( const char * ) tname . value . const_bytes		11007878	0					
ANR	11008452	CastExpression	( const char * ) tname . value . const_bytes		11007878	0					
ANR	11008453	CastTarget	const char *		11007878	0					
ANR	11008454	MemberAccess	tname . value . const_bytes		11007878	1					
ANR	11008455	MemberAccess	tname . value		11007878	0					
ANR	11008456	Identifier	tname		11007878	0					
ANR	11008457	Identifier	value		11007878	1					
ANR	11008458	Identifier	const_bytes		11007878	1					
ANR	11008459	Argument	"""All"""		11007878	1					
ANR	11008460	PrimaryExpression	"""All"""		11007878	0					
ANR	11008461	Argument	3		11007878	2					
ANR	11008462	PrimaryExpression	3		11007878	0					
ANR	11008463	PrimaryExpression	0		11007878	1					
ANR	11008464	EqualityExpression	r_size ( & tname ) == 3		11007878	1		==			
ANR	11008465	CallExpression	r_size ( & tname )		11007878	0					
ANR	11008466	Callee	r_size		11007878	0					
ANR	11008467	Identifier	r_size		11007878	0					
ANR	11008468	ArgumentList	& tname		11007878	1					
ANR	11008469	Argument	& tname		11007878	0					
ANR	11008470	UnaryOperationExpression	& tname		11007878	0					
ANR	11008471	UnaryOperator	&		11007878	0					
ANR	11008472	Identifier	tname		11007878	1					
ANR	11008473	PrimaryExpression	3		11007878	1					
ANR	11008474	CompoundStatement		120:12:4028:4052	11007878	1					
ANR	11008475	IdentifierDeclStatement	separation_type sep_type ;	3899:12:124124:124148	11007878	0	True				
ANR	11008476	IdentifierDecl	sep_type		11007878	0					
ANR	11008477	IdentifierDeclType	separation_type		11007878	0					
ANR	11008478	Identifier	sep_type		11007878	1					
ANR	11008479	ExpressionStatement	sep_type = SEP_ALL	3904:12:124310:124328	11007878	1	True				
ANR	11008480	AssignmentExpression	sep_type = SEP_ALL		11007878	0		=			
ANR	11008481	Identifier	sep_type		11007878	0					
ANR	11008482	Identifier	SEP_ALL		11007878	1					
ANR	11008483	ExpressionStatement	pacs = gs_currentcolorspace ( igs )	3907:12:124432:124464	11007878	2	True				
ANR	11008484	AssignmentExpression	pacs = gs_currentcolorspace ( igs )		11007878	0		=			
ANR	11008485	Identifier	pacs		11007878	0					
ANR	11008486	CallExpression	gs_currentcolorspace ( igs )		11007878	1					
ANR	11008487	Callee	gs_currentcolorspace		11007878	0					
ANR	11008488	Identifier	gs_currentcolorspace		11007878	0					
ANR	11008489	ArgumentList	igs		11007878	1					
ANR	11008490	Argument	igs		11007878	0					
ANR	11008491	Identifier	igs		11007878	0					
ANR	11008492	ExpressionStatement	cspace_old = istate -> colorspace [ 0 ]	3909:12:124479:124513	11007878	3	True				
ANR	11008493	AssignmentExpression	cspace_old = istate -> colorspace [ 0 ]		11007878	0		=			
ANR	11008494	Identifier	cspace_old		11007878	0					
ANR	11008495	ArrayIndexing	istate -> colorspace [ 0 ]		11007878	1					
ANR	11008496	PtrMemberAccess	istate -> colorspace		11007878	0					
ANR	11008497	Identifier	istate		11007878	0					
ANR	11008498	Identifier	colorspace		11007878	1					
ANR	11008499	PrimaryExpression	0		11007878	1					
ANR	11008500	ExpressionStatement	"code = gs_cspace_new_Separation ( & pcs , pacs , imemory )"	3911:12:124591:124643	11007878	4	True				
ANR	11008501	AssignmentExpression	"code = gs_cspace_new_Separation ( & pcs , pacs , imemory )"		11007878	0		=			
ANR	11008502	Identifier	code		11007878	0					
ANR	11008503	CallExpression	"gs_cspace_new_Separation ( & pcs , pacs , imemory )"		11007878	1					
ANR	11008504	Callee	gs_cspace_new_Separation		11007878	0					
ANR	11008505	Identifier	gs_cspace_new_Separation		11007878	0					
ANR	11008506	ArgumentList	& pcs		11007878	1					
ANR	11008507	Argument	& pcs		11007878	0					
ANR	11008508	UnaryOperationExpression	& pcs		11007878	0					
ANR	11008509	UnaryOperator	&		11007878	0					
ANR	11008510	Identifier	pcs		11007878	1					
ANR	11008511	Argument	pacs		11007878	1					
ANR	11008512	Identifier	pacs		11007878	0					
ANR	11008513	Argument	imemory		11007878	2					
ANR	11008514	Identifier	imemory		11007878	0					
ANR	11008515	IfStatement	if ( code < 0 )		11007878	5					
ANR	11008516	Condition	code < 0	3912:16:124661:124668	11007878	0	True				
ANR	11008517	RelationalExpression	code < 0		11007878	0		<			
ANR	11008518	Identifier	code		11007878	0					
ANR	11008519	PrimaryExpression	0		11007878	1					
ANR	11008520	ReturnStatement	return code ;	3913:16:124687:124698	11007878	1	True				
ANR	11008521	Identifier	code		11007878	0					
ANR	11008522	ExpressionStatement	pcs -> params . separation . sep_type = sep_type	3914:12:124712:124754	11007878	6	True				
ANR	11008523	AssignmentExpression	pcs -> params . separation . sep_type = sep_type		11007878	0		=			
ANR	11008524	MemberAccess	pcs -> params . separation . sep_type		11007878	0					
ANR	11008525	MemberAccess	pcs -> params . separation		11007878	0					
ANR	11008526	PtrMemberAccess	pcs -> params		11007878	0					
ANR	11008527	Identifier	pcs		11007878	0					
ANR	11008528	Identifier	params		11007878	1					
ANR	11008529	Identifier	separation		11007878	1					
ANR	11008530	Identifier	sep_type		11007878	1					
ANR	11008531	Identifier	sep_type		11007878	1					
ANR	11008532	ExpressionStatement	"pcs -> params . separation . sep_name = name_index ( imemory , & sname )"	3915:12:124768:124829	11007878	7	True				
ANR	11008533	AssignmentExpression	"pcs -> params . separation . sep_name = name_index ( imemory , & sname )"		11007878	0		=			
ANR	11008534	MemberAccess	pcs -> params . separation . sep_name		11007878	0					
ANR	11008535	MemberAccess	pcs -> params . separation		11007878	0					
ANR	11008536	PtrMemberAccess	pcs -> params		11007878	0					
ANR	11008537	Identifier	pcs		11007878	0					
ANR	11008538	Identifier	params		11007878	1					
ANR	11008539	Identifier	separation		11007878	1					
ANR	11008540	Identifier	sep_name		11007878	1					
ANR	11008541	CallExpression	"name_index ( imemory , & sname )"		11007878	1					
ANR	11008542	Callee	name_index		11007878	0					
ANR	11008543	Identifier	name_index		11007878	0					
ANR	11008544	ArgumentList	imemory		11007878	1					
ANR	11008545	Argument	imemory		11007878	0					
ANR	11008546	Identifier	imemory		11007878	0					
ANR	11008547	Argument	& sname		11007878	1					
ANR	11008548	UnaryOperationExpression	& sname		11007878	0					
ANR	11008549	UnaryOperator	&		11007878	0					
ANR	11008550	Identifier	sname		11007878	1					
ANR	11008551	ExpressionStatement	pcs -> params . separation . get_colorname_string = gs_get_colorname_string	3916:12:124843:124912	11007878	8	True				
ANR	11008552	AssignmentExpression	pcs -> params . separation . get_colorname_string = gs_get_colorname_string		11007878	0		=			
ANR	11008553	MemberAccess	pcs -> params . separation . get_colorname_string		11007878	0					
ANR	11008554	MemberAccess	pcs -> params . separation		11007878	0					
ANR	11008555	PtrMemberAccess	pcs -> params		11007878	0					
ANR	11008556	Identifier	pcs		11007878	0					
ANR	11008557	Identifier	params		11007878	1					
ANR	11008558	Identifier	separation		11007878	1					
ANR	11008559	Identifier	get_colorname_string		11007878	1					
ANR	11008560	Identifier	gs_get_colorname_string		11007878	1					
ANR	11008561	ExpressionStatement	"code = array_get ( imemory , & namesarray , ( long ) 0 , & sname )"	3917:12:124926:124981	11007878	9	True				
ANR	11008562	AssignmentExpression	"code = array_get ( imemory , & namesarray , ( long ) 0 , & sname )"		11007878	0		=			
ANR	11008563	Identifier	code		11007878	0					
ANR	11008564	CallExpression	"array_get ( imemory , & namesarray , ( long ) 0 , & sname )"		11007878	1					
ANR	11008565	Callee	array_get		11007878	0					
ANR	11008566	Identifier	array_get		11007878	0					
ANR	11008567	ArgumentList	imemory		11007878	1					
ANR	11008568	Argument	imemory		11007878	0					
ANR	11008569	Identifier	imemory		11007878	0					
ANR	11008570	Argument	& namesarray		11007878	1					
ANR	11008571	UnaryOperationExpression	& namesarray		11007878	0					
ANR	11008572	UnaryOperator	&		11007878	0					
ANR	11008573	Identifier	namesarray		11007878	1					
ANR	11008574	Argument	( long ) 0		11007878	2					
ANR	11008575	CastExpression	( long ) 0		11007878	0					
ANR	11008576	CastTarget	long		11007878	0					
ANR	11008577	PrimaryExpression	0		11007878	1					
ANR	11008578	Argument	& sname		11007878	3					
ANR	11008579	UnaryOperationExpression	& sname		11007878	0					
ANR	11008580	UnaryOperator	&		11007878	0					
ANR	11008581	Identifier	sname		11007878	1					
ANR	11008582	IfStatement	if ( code < 0 )		11007878	10					
ANR	11008583	Condition	code < 0	3918:16:124999:125006	11007878	0	True				
ANR	11008584	RelationalExpression	code < 0		11007878	0		<			
ANR	11008585	Identifier	code		11007878	0					
ANR	11008586	PrimaryExpression	0		11007878	1					
ANR	11008587	ReturnStatement	return code ;	3919:16:125025:125036	11007878	1	True				
ANR	11008588	Identifier	code		11007878	0					
ANR	11008589	ExpressionStatement	istate -> colorspace [ 0 ] . procs . special . separation . layer_name = sname	3920:12:125050:125115	11007878	11	True				
ANR	11008590	AssignmentExpression	istate -> colorspace [ 0 ] . procs . special . separation . layer_name = sname		11007878	0		=			
ANR	11008591	MemberAccess	istate -> colorspace [ 0 ] . procs . special . separation . layer_name		11007878	0					
ANR	11008592	MemberAccess	istate -> colorspace [ 0 ] . procs . special . separation		11007878	0					
ANR	11008593	MemberAccess	istate -> colorspace [ 0 ] . procs . special		11007878	0					
ANR	11008594	MemberAccess	istate -> colorspace [ 0 ] . procs		11007878	0					
ANR	11008595	ArrayIndexing	istate -> colorspace [ 0 ]		11007878	0					
ANR	11008596	PtrMemberAccess	istate -> colorspace		11007878	0					
ANR	11008597	Identifier	istate		11007878	0					
ANR	11008598	Identifier	colorspace		11007878	1					
ANR	11008599	PrimaryExpression	0		11007878	1					
ANR	11008600	Identifier	procs		11007878	1					
ANR	11008601	Identifier	special		11007878	1					
ANR	11008602	Identifier	separation		11007878	1					
ANR	11008603	Identifier	layer_name		11007878	1					
ANR	11008604	Identifier	sname		11007878	1					
ANR	11008605	ExpressionStatement	"code = array_get ( imemory , devicenspace , 3 , & proc )"	3921:12:125129:125178	11007878	12	True				
ANR	11008606	AssignmentExpression	"code = array_get ( imemory , devicenspace , 3 , & proc )"		11007878	0		=			
ANR	11008607	Identifier	code		11007878	0					
ANR	11008608	CallExpression	"array_get ( imemory , devicenspace , 3 , & proc )"		11007878	1					
ANR	11008609	Callee	array_get		11007878	0					
ANR	11008610	Identifier	array_get		11007878	0					
ANR	11008611	ArgumentList	imemory		11007878	1					
ANR	11008612	Argument	imemory		11007878	0					
ANR	11008613	Identifier	imemory		11007878	0					
ANR	11008614	Argument	devicenspace		11007878	1					
ANR	11008615	Identifier	devicenspace		11007878	0					
ANR	11008616	Argument	3		11007878	2					
ANR	11008617	PrimaryExpression	3		11007878	0					
ANR	11008618	Argument	& proc		11007878	3					
ANR	11008619	UnaryOperationExpression	& proc		11007878	0					
ANR	11008620	UnaryOperator	&		11007878	0					
ANR	11008621	Identifier	proc		11007878	1					
ANR	11008622	IfStatement	if ( code < 0 )		11007878	13					
ANR	11008623	Condition	code < 0	3922:16:125196:125203	11007878	0	True				
ANR	11008624	RelationalExpression	code < 0		11007878	0		<			
ANR	11008625	Identifier	code		11007878	0					
ANR	11008626	PrimaryExpression	0		11007878	1					
ANR	11008627	ReturnStatement	return code ;	3923:16:125222:125233	11007878	1	True				
ANR	11008628	Identifier	code		11007878	0					
ANR	11008629	ExpressionStatement	istate -> colorspace [ 0 ] . procs . special . separation . tint_transform = proc	3924:12:125247:125315	11007878	14	True				
ANR	11008630	AssignmentExpression	istate -> colorspace [ 0 ] . procs . special . separation . tint_transform = proc		11007878	0		=			
ANR	11008631	MemberAccess	istate -> colorspace [ 0 ] . procs . special . separation . tint_transform		11007878	0					
ANR	11008632	MemberAccess	istate -> colorspace [ 0 ] . procs . special . separation		11007878	0					
ANR	11008633	MemberAccess	istate -> colorspace [ 0 ] . procs . special		11007878	0					
ANR	11008634	MemberAccess	istate -> colorspace [ 0 ] . procs		11007878	0					
ANR	11008635	ArrayIndexing	istate -> colorspace [ 0 ]		11007878	0					
ANR	11008636	PtrMemberAccess	istate -> colorspace		11007878	0					
ANR	11008637	Identifier	istate		11007878	0					
ANR	11008638	Identifier	colorspace		11007878	1					
ANR	11008639	PrimaryExpression	0		11007878	1					
ANR	11008640	Identifier	procs		11007878	1					
ANR	11008641	Identifier	special		11007878	1					
ANR	11008642	Identifier	separation		11007878	1					
ANR	11008643	Identifier	tint_transform		11007878	1					
ANR	11008644	Identifier	proc		11007878	1					
ANR	11008645	IfStatement	if ( code >= 0 )		11007878	15					
ANR	11008646	Condition	code >= 0	3925:16:125333:125341	11007878	0	True				
ANR	11008647	RelationalExpression	code >= 0		11007878	0		>=			
ANR	11008648	Identifier	code		11007878	0					
ANR	11008649	PrimaryExpression	0		11007878	1					
ANR	11008650	ExpressionStatement	"code = gs_cspace_set_sepr_function ( pcs , pfn )"	3926:16:125360:125404	11007878	1	True				
ANR	11008651	AssignmentExpression	"code = gs_cspace_set_sepr_function ( pcs , pfn )"		11007878	0		=			
ANR	11008652	Identifier	code		11007878	0					
ANR	11008653	CallExpression	"gs_cspace_set_sepr_function ( pcs , pfn )"		11007878	1					
ANR	11008654	Callee	gs_cspace_set_sepr_function		11007878	0					
ANR	11008655	Identifier	gs_cspace_set_sepr_function		11007878	0					
ANR	11008656	ArgumentList	pcs		11007878	1					
ANR	11008657	Argument	pcs		11007878	0					
ANR	11008658	Identifier	pcs		11007878	0					
ANR	11008659	Argument	pfn		11007878	1					
ANR	11008660	Identifier	pfn		11007878	0					
ANR	11008661	IfStatement	if ( code >= 0 )		11007878	16					
ANR	11008662	Condition	code >= 0	3927:16:125422:125430	11007878	0	True				
ANR	11008663	RelationalExpression	code >= 0		11007878	0		>=			
ANR	11008664	Identifier	code		11007878	0					
ANR	11008665	PrimaryExpression	0		11007878	1					
ANR	11008666	ExpressionStatement	"code = gs_setcolorspace ( igs , pcs )"	3928:16:125449:125482	11007878	1	True				
ANR	11008667	AssignmentExpression	"code = gs_setcolorspace ( igs , pcs )"		11007878	0		=			
ANR	11008668	Identifier	code		11007878	0					
ANR	11008669	CallExpression	"gs_setcolorspace ( igs , pcs )"		11007878	1					
ANR	11008670	Callee	gs_setcolorspace		11007878	0					
ANR	11008671	Identifier	gs_setcolorspace		11007878	0					
ANR	11008672	ArgumentList	igs		11007878	1					
ANR	11008673	Argument	igs		11007878	0					
ANR	11008674	Identifier	igs		11007878	0					
ANR	11008675	Argument	pcs		11007878	1					
ANR	11008676	Identifier	pcs		11007878	0					
ANR	11008677	ExpressionStatement	"rc_decrement_only_cs ( pcs , ""setseparationspace"" )"	3930:12:125550:125597	11007878	17	True				
ANR	11008678	CallExpression	"rc_decrement_only_cs ( pcs , ""setseparationspace"" )"		11007878	0					
ANR	11008679	Callee	rc_decrement_only_cs		11007878	0					
ANR	11008680	Identifier	rc_decrement_only_cs		11007878	0					
ANR	11008681	ArgumentList	pcs		11007878	1					
ANR	11008682	Argument	pcs		11007878	0					
ANR	11008683	Identifier	pcs		11007878	0					
ANR	11008684	Argument	"""setseparationspace"""		11007878	1					
ANR	11008685	PrimaryExpression	"""setseparationspace"""		11007878	0					
ANR	11008686	IfStatement	if ( code < 0 )		11007878	18					
ANR	11008687	Condition	code < 0	3931:16:125615:125622	11007878	0	True				
ANR	11008688	RelationalExpression	code < 0		11007878	0		<			
ANR	11008689	Identifier	code		11007878	0					
ANR	11008690	PrimaryExpression	0		11007878	1					
ANR	11008691	CompoundStatement		152:26:5529:5529	11007878	1					
ANR	11008692	ExpressionStatement	istate -> colorspace [ 0 ] = cspace_old	3932:16:125643:125677	11007878	0	True				
ANR	11008693	AssignmentExpression	istate -> colorspace [ 0 ] = cspace_old		11007878	0		=			
ANR	11008694	ArrayIndexing	istate -> colorspace [ 0 ]		11007878	0					
ANR	11008695	PtrMemberAccess	istate -> colorspace		11007878	0					
ANR	11008696	Identifier	istate		11007878	0					
ANR	11008697	Identifier	colorspace		11007878	1					
ANR	11008698	PrimaryExpression	0		11007878	1					
ANR	11008699	Identifier	cspace_old		11007878	1					
ANR	11008700	ReturnStatement	return code ;	3933:16:125695:125706	11007878	1	True				
ANR	11008701	Identifier	code		11007878	0					
ANR	11008702	ExpressionStatement	cc . pattern = 0x00	3935:12:125734:125751	11007878	19	True				
ANR	11008703	AssignmentExpression	cc . pattern = 0x00		11007878	0		=			
ANR	11008704	MemberAccess	cc . pattern		11007878	0					
ANR	11008705	Identifier	cc		11007878	0					
ANR	11008706	Identifier	pattern		11007878	1					
ANR	11008707	PrimaryExpression	0x00		11007878	1					
ANR	11008708	ExpressionStatement	cc . paint . values [ 0 ] = 1.0	3936:12:125765:125789	11007878	20	True				
ANR	11008709	AssignmentExpression	cc . paint . values [ 0 ] = 1.0		11007878	0		=			
ANR	11008710	ArrayIndexing	cc . paint . values [ 0 ]		11007878	0					
ANR	11008711	MemberAccess	cc . paint . values		11007878	0					
ANR	11008712	MemberAccess	cc . paint		11007878	0					
ANR	11008713	Identifier	cc		11007878	0					
ANR	11008714	Identifier	paint		11007878	1					
ANR	11008715	Identifier	values		11007878	1					
ANR	11008716	PrimaryExpression	0		11007878	1					
ANR	11008717	PrimaryExpression	1.0		11007878	1					
ANR	11008718	ExpressionStatement	"code = gs_setcolor ( igs , & cc )"	3937:12:125803:125831	11007878	21	True				
ANR	11008719	AssignmentExpression	"code = gs_setcolor ( igs , & cc )"		11007878	0		=			
ANR	11008720	Identifier	code		11007878	0					
ANR	11008721	CallExpression	"gs_setcolor ( igs , & cc )"		11007878	1					
ANR	11008722	Callee	gs_setcolor		11007878	0					
ANR	11008723	Identifier	gs_setcolor		11007878	0					
ANR	11008724	ArgumentList	igs		11007878	1					
ANR	11008725	Argument	igs		11007878	0					
ANR	11008726	Identifier	igs		11007878	0					
ANR	11008727	Argument	& cc		11007878	1					
ANR	11008728	UnaryOperationExpression	& cc		11007878	0					
ANR	11008729	UnaryOperator	&		11007878	0					
ANR	11008730	Identifier	cc		11007878	1					
ANR	11008731	ReturnStatement	return code ;	3938:12:125845:125856	11007878	22	True				
ANR	11008732	Identifier	code		11007878	0					
ANR	11008733	ExpressionStatement	"code = gs_cspace_new_DeviceN ( & pcs , num_components , pacs , imemory )"	3941:4:125878:125943	11007878	20	True				
ANR	11008734	AssignmentExpression	"code = gs_cspace_new_DeviceN ( & pcs , num_components , pacs , imemory )"		11007878	0		=			
ANR	11008735	Identifier	code		11007878	0					
ANR	11008736	CallExpression	"gs_cspace_new_DeviceN ( & pcs , num_components , pacs , imemory )"		11007878	1					
ANR	11008737	Callee	gs_cspace_new_DeviceN		11007878	0					
ANR	11008738	Identifier	gs_cspace_new_DeviceN		11007878	0					
ANR	11008739	ArgumentList	& pcs		11007878	1					
ANR	11008740	Argument	& pcs		11007878	0					
ANR	11008741	UnaryOperationExpression	& pcs		11007878	0					
ANR	11008742	UnaryOperator	&		11007878	0					
ANR	11008743	Identifier	pcs		11007878	1					
ANR	11008744	Argument	num_components		11007878	1					
ANR	11008745	Identifier	num_components		11007878	0					
ANR	11008746	Argument	pacs		11007878	2					
ANR	11008747	Identifier	pacs		11007878	0					
ANR	11008748	Argument	imemory		11007878	3					
ANR	11008749	Identifier	imemory		11007878	0					
ANR	11008750	IfStatement	if ( code < 0 )		11007878	21					
ANR	11008751	Condition	code < 0	3942:8:125953:125960	11007878	0	True				
ANR	11008752	RelationalExpression	code < 0		11007878	0		<			
ANR	11008753	Identifier	code		11007878	0					
ANR	11008754	PrimaryExpression	0		11007878	1					
ANR	11008755	ReturnStatement	return code ;	3943:8:125971:125982	11007878	1	True				
ANR	11008756	Identifier	code		11007878	0					
ANR	11008757	ExpressionStatement	names = pcs -> params . device_n . names	3944:4:125988:126022	11007878	22	True				
ANR	11008758	AssignmentExpression	names = pcs -> params . device_n . names		11007878	0		=			
ANR	11008759	Identifier	names		11007878	0					
ANR	11008760	MemberAccess	pcs -> params . device_n . names		11007878	1					
ANR	11008761	MemberAccess	pcs -> params . device_n		11007878	0					
ANR	11008762	PtrMemberAccess	pcs -> params		11007878	0					
ANR	11008763	Identifier	pcs		11007878	0					
ANR	11008764	Identifier	params		11007878	1					
ANR	11008765	Identifier	device_n		11007878	1					
ANR	11008766	Identifier	names		11007878	1					
ANR	11008767	ExpressionStatement	pcs -> params . device_n . get_colorname_string = gs_get_colorname_string	3945:4:126028:126095	11007878	23	True				
ANR	11008768	AssignmentExpression	pcs -> params . device_n . get_colorname_string = gs_get_colorname_string		11007878	0		=			
ANR	11008769	MemberAccess	pcs -> params . device_n . get_colorname_string		11007878	0					
ANR	11008770	MemberAccess	pcs -> params . device_n		11007878	0					
ANR	11008771	PtrMemberAccess	pcs -> params		11007878	0					
ANR	11008772	Identifier	pcs		11007878	0					
ANR	11008773	Identifier	params		11007878	1					
ANR	11008774	Identifier	device_n		11007878	1					
ANR	11008775	Identifier	get_colorname_string		11007878	1					
ANR	11008776	Identifier	gs_get_colorname_string		11007878	1					
ANR	11008777	CompoundStatement		171:8:6078:6087	11007878	24					
ANR	11008778	IdentifierDeclStatement	uint i ;	3949:8:126158:126164	11007878	0	True				
ANR	11008779	IdentifierDecl	i		11007878	0					
ANR	11008780	IdentifierDeclType	uint		11007878	0					
ANR	11008781	Identifier	i		11007878	1					
ANR	11008782	IdentifierDeclStatement	ref sname ;	3950:8:126174:126183	11007878	1	True				
ANR	11008783	IdentifierDecl	sname		11007878	0					
ANR	11008784	IdentifierDeclType	ref		11007878	0					
ANR	11008785	Identifier	sname		11007878	1					
ANR	11008786	ForStatement	for ( i = 0 ; i < num_components ; ++ i )		11007878	2					
ANR	11008787	ForInit	i = 0 ;	3952:13:126199:126204	11007878	0	True				
ANR	11008788	AssignmentExpression	i = 0		11007878	0		=			
ANR	11008789	Identifier	i		11007878	0					
ANR	11008790	PrimaryExpression	0		11007878	1					
ANR	11008791	Condition	i < num_components	3952:20:126206:126223	11007878	1	True				
ANR	11008792	RelationalExpression	i < num_components		11007878	0		<			
ANR	11008793	Identifier	i		11007878	0					
ANR	11008794	Identifier	num_components		11007878	1					
ANR	11008795	UnaryExpression	++ i	3952:40:126226:126228	11007878	2	True				
ANR	11008796	IncDec	++		11007878	0					
ANR	11008797	Identifier	i		11007878	1					
ANR	11008798	CompoundStatement		173:45:6135:6135	11007878	3					
ANR	11008799	ExpressionStatement	"array_get ( imemory , & namesarray , ( long ) i , & sname )"	3953:12:126245:126293	11007878	0	True				
ANR	11008800	CallExpression	"array_get ( imemory , & namesarray , ( long ) i , & sname )"		11007878	0					
ANR	11008801	Callee	array_get		11007878	0					
ANR	11008802	Identifier	array_get		11007878	0					
ANR	11008803	ArgumentList	imemory		11007878	1					
ANR	11008804	Argument	imemory		11007878	0					
ANR	11008805	Identifier	imemory		11007878	0					
ANR	11008806	Argument	& namesarray		11007878	1					
ANR	11008807	UnaryOperationExpression	& namesarray		11007878	0					
ANR	11008808	UnaryOperator	&		11007878	0					
ANR	11008809	Identifier	namesarray		11007878	1					
ANR	11008810	Argument	( long ) i		11007878	2					
ANR	11008811	CastExpression	( long ) i		11007878	0					
ANR	11008812	CastTarget	long		11007878	0					
ANR	11008813	Identifier	i		11007878	1					
ANR	11008814	Argument	& sname		11007878	3					
ANR	11008815	UnaryOperationExpression	& sname		11007878	0					
ANR	11008816	UnaryOperator	&		11007878	0					
ANR	11008817	Identifier	sname		11007878	1					
ANR	11008818	SwitchStatement	switch ( r_type ( & sname ) )		11007878	1					
ANR	11008819	Condition	r_type ( & sname )	3954:20:126315:126328	11007878	0	True				
ANR	11008820	CallExpression	r_type ( & sname )		11007878	0					
ANR	11008821	Callee	r_type		11007878	0					
ANR	11008822	Identifier	r_type		11007878	0					
ANR	11008823	ArgumentList	& sname		11007878	1					
ANR	11008824	Argument	& sname		11007878	0					
ANR	11008825	UnaryOperationExpression	& sname		11007878	0					
ANR	11008826	UnaryOperator	&		11007878	0					
ANR	11008827	Identifier	sname		11007878	1					
ANR	11008828	CompoundStatement		175:36:6235:6235	11007878	1					
ANR	11008829	Label	case t_string :	3955:16:126349:126362	11007878	0	True				
ANR	11008830	Identifier	t_string		11007878	0					
ANR	11008831	ExpressionStatement	"code = name_from_string ( imemory , & sname , & sname )"	3956:20:126384:126432	11007878	1	True				
ANR	11008832	AssignmentExpression	"code = name_from_string ( imemory , & sname , & sname )"		11007878	0		=			
ANR	11008833	Identifier	code		11007878	0					
ANR	11008834	CallExpression	"name_from_string ( imemory , & sname , & sname )"		11007878	1					
ANR	11008835	Callee	name_from_string		11007878	0					
ANR	11008836	Identifier	name_from_string		11007878	0					
ANR	11008837	ArgumentList	imemory		11007878	1					
ANR	11008838	Argument	imemory		11007878	0					
ANR	11008839	Identifier	imemory		11007878	0					
ANR	11008840	Argument	& sname		11007878	1					
ANR	11008841	UnaryOperationExpression	& sname		11007878	0					
ANR	11008842	UnaryOperator	&		11007878	0					
ANR	11008843	Identifier	sname		11007878	1					
ANR	11008844	Argument	& sname		11007878	2					
ANR	11008845	UnaryOperationExpression	& sname		11007878	0					
ANR	11008846	UnaryOperator	&		11007878	0					
ANR	11008847	Identifier	sname		11007878	1					
ANR	11008848	IfStatement	if ( code < 0 )		11007878	2					
ANR	11008849	Condition	code < 0	3957:24:126458:126465	11007878	0	True				
ANR	11008850	RelationalExpression	code < 0		11007878	0		<			
ANR	11008851	Identifier	code		11007878	0					
ANR	11008852	PrimaryExpression	0		11007878	1					
ANR	11008853	CompoundStatement		178:34:6372:6372	11007878	1					
ANR	11008854	ExpressionStatement	"rc_decrement_cs ( pcs , ""setdevicenspace"" )"	3958:24:126494:126533	11007878	0	True				
ANR	11008855	CallExpression	"rc_decrement_cs ( pcs , ""setdevicenspace"" )"		11007878	0					
ANR	11008856	Callee	rc_decrement_cs		11007878	0					
ANR	11008857	Identifier	rc_decrement_cs		11007878	0					
ANR	11008858	ArgumentList	pcs		11007878	1					
ANR	11008859	Argument	pcs		11007878	0					
ANR	11008860	Identifier	pcs		11007878	0					
ANR	11008861	Argument	"""setdevicenspace"""		11007878	1					
ANR	11008862	PrimaryExpression	"""setdevicenspace"""		11007878	0					
ANR	11008863	ReturnStatement	return code ;	3959:24:126559:126570	11007878	1	True				
ANR	11008864	Identifier	code		11007878	0					
ANR	11008865	Label	case t_name :	3962:16:126650:126661	11007878	3	True				
ANR	11008866	Identifier	t_name		11007878	0					
ANR	11008867	ExpressionStatement	"names [ i ] = name_index ( imemory , & sname )"	3963:20:126683:126721	11007878	4	True				
ANR	11008868	AssignmentExpression	"names [ i ] = name_index ( imemory , & sname )"		11007878	0		=			
ANR	11008869	ArrayIndexing	names [ i ]		11007878	0					
ANR	11008870	Identifier	names		11007878	0					
ANR	11008871	Identifier	i		11007878	1					
ANR	11008872	CallExpression	"name_index ( imemory , & sname )"		11007878	1					
ANR	11008873	Callee	name_index		11007878	0					
ANR	11008874	Identifier	name_index		11007878	0					
ANR	11008875	ArgumentList	imemory		11007878	1					
ANR	11008876	Argument	imemory		11007878	0					
ANR	11008877	Identifier	imemory		11007878	0					
ANR	11008878	Argument	& sname		11007878	1					
ANR	11008879	UnaryOperationExpression	& sname		11007878	0					
ANR	11008880	UnaryOperator	&		11007878	0					
ANR	11008881	Identifier	sname		11007878	1					
ANR	11008882	BreakStatement	break ;	3964:20:126743:126748	11007878	5	True				
ANR	11008883	Label	default :	3965:16:126766:126773	11007878	6	True				
ANR	11008884	Identifier	default		11007878	0					
ANR	11008885	ExpressionStatement	"rc_decrement_cs ( pcs , ""setdevicenspace"" )"	3966:20:126795:126834	11007878	7	True				
ANR	11008886	CallExpression	"rc_decrement_cs ( pcs , ""setdevicenspace"" )"		11007878	0					
ANR	11008887	Callee	rc_decrement_cs		11007878	0					
ANR	11008888	Identifier	rc_decrement_cs		11007878	0					
ANR	11008889	ArgumentList	pcs		11007878	1					
ANR	11008890	Argument	pcs		11007878	0					
ANR	11008891	Identifier	pcs		11007878	0					
ANR	11008892	Argument	"""setdevicenspace"""		11007878	1					
ANR	11008893	PrimaryExpression	"""setdevicenspace"""		11007878	0					
ANR	11008894	ExpressionStatement	return_error ( gs_error_typecheck )	3967:20:126856:126888	11007878	8	True				
ANR	11008895	CallExpression	return_error ( gs_error_typecheck )		11007878	0					
ANR	11008896	Callee	return_error		11007878	0					
ANR	11008897	Identifier	return_error		11007878	0					
ANR	11008898	ArgumentList	gs_error_typecheck		11007878	1					
ANR	11008899	Argument	gs_error_typecheck		11007878	0					
ANR	11008900	Identifier	gs_error_typecheck		11007878	0					
ANR	11008901	ExpressionStatement	cspace_old = istate -> colorspace [ 0 ]	3974:4:126979:127013	11007878	25	True				
ANR	11008902	AssignmentExpression	cspace_old = istate -> colorspace [ 0 ]		11007878	0		=			
ANR	11008903	Identifier	cspace_old		11007878	0					
ANR	11008904	ArrayIndexing	istate -> colorspace [ 0 ]		11007878	1					
ANR	11008905	PtrMemberAccess	istate -> colorspace		11007878	0					
ANR	11008906	Identifier	istate		11007878	0					
ANR	11008907	Identifier	colorspace		11007878	1					
ANR	11008908	PrimaryExpression	0		11007878	1					
ANR	11008909	ExpressionStatement	istate -> colorspace [ 0 ] . procs . special . device_n . layer_names = namesarray	3975:4:127019:127088	11007878	26	True				
ANR	11008910	AssignmentExpression	istate -> colorspace [ 0 ] . procs . special . device_n . layer_names = namesarray		11007878	0		=			
ANR	11008911	MemberAccess	istate -> colorspace [ 0 ] . procs . special . device_n . layer_names		11007878	0					
ANR	11008912	MemberAccess	istate -> colorspace [ 0 ] . procs . special . device_n		11007878	0					
ANR	11008913	MemberAccess	istate -> colorspace [ 0 ] . procs . special		11007878	0					
ANR	11008914	MemberAccess	istate -> colorspace [ 0 ] . procs		11007878	0					
ANR	11008915	ArrayIndexing	istate -> colorspace [ 0 ]		11007878	0					
ANR	11008916	PtrMemberAccess	istate -> colorspace		11007878	0					
ANR	11008917	Identifier	istate		11007878	0					
ANR	11008918	Identifier	colorspace		11007878	1					
ANR	11008919	PrimaryExpression	0		11007878	1					
ANR	11008920	Identifier	procs		11007878	1					
ANR	11008921	Identifier	special		11007878	1					
ANR	11008922	Identifier	device_n		11007878	1					
ANR	11008923	Identifier	layer_names		11007878	1					
ANR	11008924	Identifier	namesarray		11007878	1					
ANR	11008925	ExpressionStatement	"code = array_get ( imemory , devicenspace , 3 , & proc )"	3976:4:127094:127143	11007878	27	True				
ANR	11008926	AssignmentExpression	"code = array_get ( imemory , devicenspace , 3 , & proc )"		11007878	0		=			
ANR	11008927	Identifier	code		11007878	0					
ANR	11008928	CallExpression	"array_get ( imemory , devicenspace , 3 , & proc )"		11007878	1					
ANR	11008929	Callee	array_get		11007878	0					
ANR	11008930	Identifier	array_get		11007878	0					
ANR	11008931	ArgumentList	imemory		11007878	1					
ANR	11008932	Argument	imemory		11007878	0					
ANR	11008933	Identifier	imemory		11007878	0					
ANR	11008934	Argument	devicenspace		11007878	1					
ANR	11008935	Identifier	devicenspace		11007878	0					
ANR	11008936	Argument	3		11007878	2					
ANR	11008937	PrimaryExpression	3		11007878	0					
ANR	11008938	Argument	& proc		11007878	3					
ANR	11008939	UnaryOperationExpression	& proc		11007878	0					
ANR	11008940	UnaryOperator	&		11007878	0					
ANR	11008941	Identifier	proc		11007878	1					
ANR	11008942	IfStatement	if ( code < 0 )		11007878	28					
ANR	11008943	Condition	code < 0	3977:8:127153:127160	11007878	0	True				
ANR	11008944	RelationalExpression	code < 0		11007878	0		<			
ANR	11008945	Identifier	code		11007878	0					
ANR	11008946	PrimaryExpression	0		11007878	1					
ANR	11008947	ReturnStatement	return code ;	3978:8:127171:127182	11007878	1	True				
ANR	11008948	Identifier	code		11007878	0					
ANR	11008949	ExpressionStatement	istate -> colorspace [ 0 ] . procs . special . device_n . tint_transform = proc	3979:4:127188:127254	11007878	29	True				
ANR	11008950	AssignmentExpression	istate -> colorspace [ 0 ] . procs . special . device_n . tint_transform = proc		11007878	0		=			
ANR	11008951	MemberAccess	istate -> colorspace [ 0 ] . procs . special . device_n . tint_transform		11007878	0					
ANR	11008952	MemberAccess	istate -> colorspace [ 0 ] . procs . special . device_n		11007878	0					
ANR	11008953	MemberAccess	istate -> colorspace [ 0 ] . procs . special		11007878	0					
ANR	11008954	MemberAccess	istate -> colorspace [ 0 ] . procs		11007878	0					
ANR	11008955	ArrayIndexing	istate -> colorspace [ 0 ]		11007878	0					
ANR	11008956	PtrMemberAccess	istate -> colorspace		11007878	0					
ANR	11008957	Identifier	istate		11007878	0					
ANR	11008958	Identifier	colorspace		11007878	1					
ANR	11008959	PrimaryExpression	0		11007878	1					
ANR	11008960	Identifier	procs		11007878	1					
ANR	11008961	Identifier	special		11007878	1					
ANR	11008962	Identifier	device_n		11007878	1					
ANR	11008963	Identifier	tint_transform		11007878	1					
ANR	11008964	Identifier	proc		11007878	1					
ANR	11008965	ExpressionStatement	"code = gs_cspace_set_devn_function ( pcs , pfn )"	3980:4:127260:127304	11007878	30	True				
ANR	11008966	AssignmentExpression	"code = gs_cspace_set_devn_function ( pcs , pfn )"		11007878	0		=			
ANR	11008967	Identifier	code		11007878	0					
ANR	11008968	CallExpression	"gs_cspace_set_devn_function ( pcs , pfn )"		11007878	1					
ANR	11008969	Callee	gs_cspace_set_devn_function		11007878	0					
ANR	11008970	Identifier	gs_cspace_set_devn_function		11007878	0					
ANR	11008971	ArgumentList	pcs		11007878	1					
ANR	11008972	Argument	pcs		11007878	0					
ANR	11008973	Identifier	pcs		11007878	0					
ANR	11008974	Argument	pfn		11007878	1					
ANR	11008975	Identifier	pfn		11007878	0					
ANR	11008976	IfStatement	if ( code < 0 )		11007878	31					
ANR	11008977	Condition	code < 0	3981:8:127314:127321	11007878	0	True				
ANR	11008978	RelationalExpression	code < 0		11007878	0		<			
ANR	11008979	Identifier	code		11007878	0					
ANR	11008980	PrimaryExpression	0		11007878	1					
ANR	11008981	CompoundStatement		202:18:7228:7228	11007878	1					
ANR	11008982	ReturnStatement	return code ;	3982:8:127334:127345	11007878	0	True				
ANR	11008983	Identifier	code		11007878	0					
ANR	11008984	ExpressionStatement	"code = gs_setcolorspace ( igs , pcs )"	3984:4:127357:127390	11007878	32	True				
ANR	11008985	AssignmentExpression	"code = gs_setcolorspace ( igs , pcs )"		11007878	0		=			
ANR	11008986	Identifier	code		11007878	0					
ANR	11008987	CallExpression	"gs_setcolorspace ( igs , pcs )"		11007878	1					
ANR	11008988	Callee	gs_setcolorspace		11007878	0					
ANR	11008989	Identifier	gs_setcolorspace		11007878	0					
ANR	11008990	ArgumentList	igs		11007878	1					
ANR	11008991	Argument	igs		11007878	0					
ANR	11008992	Identifier	igs		11007878	0					
ANR	11008993	Argument	pcs		11007878	1					
ANR	11008994	Identifier	pcs		11007878	0					
ANR	11008995	ExpressionStatement	"rc_decrement_only_cs ( pcs , ""setdevicenspace"" )"	3986:4:127442:127486	11007878	33	True				
ANR	11008996	CallExpression	"rc_decrement_only_cs ( pcs , ""setdevicenspace"" )"		11007878	0					
ANR	11008997	Callee	rc_decrement_only_cs		11007878	0					
ANR	11008998	Identifier	rc_decrement_only_cs		11007878	0					
ANR	11008999	ArgumentList	pcs		11007878	1					
ANR	11009000	Argument	pcs		11007878	0					
ANR	11009001	Identifier	pcs		11007878	0					
ANR	11009002	Argument	"""setdevicenspace"""		11007878	1					
ANR	11009003	PrimaryExpression	"""setdevicenspace"""		11007878	0					
ANR	11009004	IfStatement	if ( code < 0 )		11007878	34					
ANR	11009005	Condition	code < 0	3987:8:127496:127503	11007878	0	True				
ANR	11009006	RelationalExpression	code < 0		11007878	0		<			
ANR	11009007	Identifier	code		11007878	0					
ANR	11009008	PrimaryExpression	0		11007878	1					
ANR	11009009	CompoundStatement		208:18:7410:7410	11007878	1					
ANR	11009010	ExpressionStatement	istate -> colorspace [ 0 ] = cspace_old	3988:8:127516:127550	11007878	0	True				
ANR	11009011	AssignmentExpression	istate -> colorspace [ 0 ] = cspace_old		11007878	0		=			
ANR	11009012	ArrayIndexing	istate -> colorspace [ 0 ]		11007878	0					
ANR	11009013	PtrMemberAccess	istate -> colorspace		11007878	0					
ANR	11009014	Identifier	istate		11007878	0					
ANR	11009015	Identifier	colorspace		11007878	1					
ANR	11009016	PrimaryExpression	0		11007878	1					
ANR	11009017	Identifier	cspace_old		11007878	1					
ANR	11009018	ReturnStatement	return code ;	3989:8:127560:127571	11007878	1	True				
ANR	11009019	Identifier	code		11007878	0					
ANR	11009020	ExpressionStatement	cc . pattern = 0x00	3992:4:127584:127601	11007878	35	True				
ANR	11009021	AssignmentExpression	cc . pattern = 0x00		11007878	0		=			
ANR	11009022	MemberAccess	cc . pattern		11007878	0					
ANR	11009023	Identifier	cc		11007878	0					
ANR	11009024	Identifier	pattern		11007878	1					
ANR	11009025	PrimaryExpression	0x00		11007878	1					
ANR	11009026	ForStatement	for ( i = 0 ; i < num_components ; i ++ )		11007878	36					
ANR	11009027	ForInit	i = 0 ;	3993:9:127612:127615	11007878	0	True				
ANR	11009028	AssignmentExpression	i = 0		11007878	0		=			
ANR	11009029	Identifier	i		11007878	0					
ANR	11009030	PrimaryExpression	0		11007878	1					
ANR	11009031	Condition	i < num_components	3993:13:127616:127631	11007878	1	True				
ANR	11009032	RelationalExpression	i < num_components		11007878	0		<			
ANR	11009033	Identifier	i		11007878	0					
ANR	11009034	Identifier	num_components		11007878	1					
ANR	11009035	PostIncDecOperationExpression	i ++	3993:30:127633:127635	11007878	2	True				
ANR	11009036	Identifier	i		11007878	0					
ANR	11009037	IncDec	++		11007878	1					
ANR	11009038	ExpressionStatement	cc . paint . values [ i ] = 1.0	3994:8:127646:127670	11007878	3	True				
ANR	11009039	AssignmentExpression	cc . paint . values [ i ] = 1.0		11007878	0		=			
ANR	11009040	ArrayIndexing	cc . paint . values [ i ]		11007878	0					
ANR	11009041	MemberAccess	cc . paint . values		11007878	0					
ANR	11009042	MemberAccess	cc . paint		11007878	0					
ANR	11009043	Identifier	cc		11007878	0					
ANR	11009044	Identifier	paint		11007878	1					
ANR	11009045	Identifier	values		11007878	1					
ANR	11009046	Identifier	i		11007878	1					
ANR	11009047	PrimaryExpression	1.0		11007878	1					
ANR	11009048	ExpressionStatement	"code = gs_setcolor ( igs , & cc )"	3995:4:127676:127704	11007878	37	True				
ANR	11009049	AssignmentExpression	"code = gs_setcolor ( igs , & cc )"		11007878	0		=			
ANR	11009050	Identifier	code		11007878	0					
ANR	11009051	CallExpression	"gs_setcolor ( igs , & cc )"		11007878	1					
ANR	11009052	Callee	gs_setcolor		11007878	0					
ANR	11009053	Identifier	gs_setcolor		11007878	0					
ANR	11009054	ArgumentList	igs		11007878	1					
ANR	11009055	Argument	igs		11007878	0					
ANR	11009056	Identifier	igs		11007878	0					
ANR	11009057	Argument	& cc		11007878	1					
ANR	11009058	UnaryOperationExpression	& cc		11007878	0					
ANR	11009059	UnaryOperator	&		11007878	0					
ANR	11009060	Identifier	cc		11007878	1					
ANR	11009061	ExpressionStatement	* cont = 1	3996:4:127710:127719	11007878	38	True				
ANR	11009062	AssignmentExpression	* cont = 1		11007878	0		=			
ANR	11009063	UnaryOperationExpression	* cont		11007878	0					
ANR	11009064	UnaryOperator	*		11007878	0					
ANR	11009065	Identifier	cont		11007878	1					
ANR	11009066	PrimaryExpression	1		11007878	1					
ANR	11009067	ReturnStatement	return code ;	3997:4:127725:127736	11007878	39	True				
ANR	11009068	Identifier	code		11007878	0					
ANR	11009069	ReturnType	static int		11007878	1					
ANR	11009070	Identifier	setdevicenspace		11007878	2					
ANR	11009071	ParameterList	"i_ctx_t * i_ctx_p , ref * devicenspace , int * stage , int * cont , int CIESubst"		11007878	3					
ANR	11009072	Parameter	i_ctx_t * i_ctx_p	3779:27:120020:120036	11007878	0	True				
ANR	11009073	ParameterType	i_ctx_t *		11007878	0					
ANR	11009074	Identifier	i_ctx_p		11007878	1					
ANR	11009075	Parameter	ref * devicenspace	3779:46:120039:120055	11007878	1	True				
ANR	11009076	ParameterType	ref *		11007878	0					
ANR	11009077	Identifier	devicenspace		11007878	1					
ANR	11009078	Parameter	int * stage	3779:65:120058:120067	11007878	2	True				
ANR	11009079	ParameterType	int *		11007878	0					
ANR	11009080	Identifier	stage		11007878	1					
ANR	11009081	Parameter	int * cont	3779:77:120070:120078	11007878	3	True				
ANR	11009082	ParameterType	int *		11007878	0					
ANR	11009083	Identifier	cont		11007878	1					
ANR	11009084	Parameter	int CIESubst	3779:88:120081:120092	11007878	4	True				
ANR	11009085	ParameterType	int		11007878	0					
ANR	11009086	Identifier	CIESubst		11007878	1					
ANR	11009087	CFGEntryNode	ENTRY		11007878		True				
ANR	11009088	CFGExitNode	EXIT		11007878		True				
ANR	11009089	Symbol	convert_transform		11007878						
ANR	11009090	Symbol	* cc		11007878						
ANR	11009091	Symbol	pcs -> params . separation . sep_type		11007878						
ANR	11009092	Symbol	osp		11007878						
ANR	11009093	Symbol	* istate		11007878						
ANR	11009094	Symbol	name_from_string		11007878						
ANR	11009095	Symbol	strncmp		11007878						
ANR	11009096	Symbol	igs		11007878						
ANR	11009097	Symbol	pacs		11007878						
ANR	11009098	Symbol	gs_currentcolorspace		11007878						
ANR	11009099	Symbol	cont		11007878						
ANR	11009100	Symbol	r_type		11007878						
ANR	11009101	Symbol	pcs -> params . device_n . names		11007878						
ANR	11009102	Symbol	gs_cspace_new_DeviceN		11007878						
ANR	11009103	Symbol	& sref		11007878						
ANR	11009104	Symbol	i_ctx_p		11007878						
ANR	11009105	Symbol	pfn		11007878						
ANR	11009106	Symbol	cc . paint . values		11007878						
ANR	11009107	Symbol	cc . pattern		11007878						
ANR	11009108	Symbol	t_dictionary		11007878						
ANR	11009109	Symbol	ref_function		11007878						
ANR	11009110	Symbol	gs_setcolorspace		11007878						
ANR	11009111	Symbol	& sname		11007878						
ANR	11009112	Symbol	* names		11007878						
ANR	11009113	Symbol	gs_error_typecheck		11007878						
ANR	11009114	Symbol	r_size		11007878						
ANR	11009115	Symbol	colorants		11007878						
ANR	11009116	Symbol	name_index		11007878						
ANR	11009117	Symbol	CIESubst		11007878						
ANR	11009118	Symbol	* istate -> colorspace		11007878						
ANR	11009119	Symbol	cc		11007878						
ANR	11009120	Symbol	proc		11007878						
ANR	11009121	Symbol	* stage		11007878						
ANR	11009122	Symbol	array_get		11007878						
ANR	11009123	Symbol	pcs -> params		11007878						
ANR	11009124	Symbol	istate -> colorspace [ 0 ] . procs . special . separation . layer_name		11007878						
ANR	11009125	Symbol	i		11007878						
ANR	11009126	Symbol	tname		11007878						
ANR	11009127	Symbol	colour_cleanup		11007878						
ANR	11009128	Symbol	num_components		11007878						
ANR	11009129	Symbol	devicencolorants_cont		11007878						
ANR	11009130	Symbol	names		11007878						
ANR	11009131	Symbol	stage		11007878						
ANR	11009132	Symbol	sref		11007878						
ANR	11009133	Symbol	cc . paint		11007878						
ANR	11009134	Symbol	gs_cspace_new_Separation		11007878						
ANR	11009135	Symbol	istate		11007878						
ANR	11009136	Symbol	istate -> colorspace [ 0 ] . procs . special . device_n		11007878						
ANR	11009137	Symbol	pcs -> params . device_n		11007878						
ANR	11009138	Symbol	esp		11007878						
ANR	11009139	Symbol	i_ctx_p -> language_level		11007878						
ANR	11009140	Symbol	gs_cspace_set_devn_function		11007878						
ANR	11009141	Symbol	gs_error_undefined		11007878						
ANR	11009142	Symbol	* pcs		11007878						
ANR	11009143	Symbol	& cc		11007878						
ANR	11009144	Symbol	istate -> colorspace [ 0 ] . procs . special . separation		11007878						
ANR	11009145	Symbol	es_other		11007878						
ANR	11009146	Symbol	gs_cspace_set_sepr_function		11007878						
ANR	11009147	Symbol	r_has_type		11007878						
ANR	11009148	Symbol	* cc . paint . values		11007878						
ANR	11009149	Symbol	istate -> colorspace [ 0 ] . procs		11007878						
ANR	11009150	Symbol	* i_ctx_p		11007878						
ANR	11009151	Symbol	istate -> colorspace		11007878						
ANR	11009152	Symbol	gs_get_colorname_string		11007878						
ANR	11009153	Symbol	imemory		11007878						
ANR	11009154	Symbol	devicenspace		11007878						
ANR	11009155	Symbol	NULL		11007878						
ANR	11009156	Symbol	dict_find_string		11007878						
ANR	11009157	Symbol	pcs -> params . device_n . get_colorname_string		11007878						
ANR	11009158	Symbol	istate -> colorspace [ 0 ] . procs . special . separation . tint_transform		11007878						
ANR	11009159	Symbol	tname . value		11007878						
ANR	11009160	Symbol	istate -> colorspace [ 0 ] . procs . special		11007878						
ANR	11009161	Symbol	& namesarray		11007878						
ANR	11009162	Symbol	* * istate		11007878						
ANR	11009163	Symbol	& pcs		11007878						
ANR	11009164	Symbol	code		11007878						
ANR	11009165	Symbol	gs_setcolor		11007878						
ANR	11009166	Symbol	pcs -> params . separation		11007878						
ANR	11009167	Symbol	pcs -> params . separation . sep_name		11007878						
ANR	11009168	Symbol	pcs -> params . separation . get_colorname_string		11007878						
ANR	11009169	Symbol	& tname		11007878						
ANR	11009170	Symbol	o_push_estack		11007878						
ANR	11009171	Symbol	& proc		11007878						
ANR	11009172	Symbol	op		11007878						
ANR	11009173	Symbol	pcs		11007878						
ANR	11009174	Symbol	namesarray		11007878						
ANR	11009175	Symbol	& colorants		11007878						
ANR	11009176	Symbol	* cc . paint		11007878						
ANR	11009177	Symbol	dict_first		11007878						
ANR	11009178	Symbol	* i		11007878						
ANR	11009179	Symbol	* cont		11007878						
ANR	11009180	Symbol	sname		11007878						
ANR	11009181	Symbol	sep_type		11007878						
ANR	11009182	Symbol	SEP_ALL		11007878						
ANR	11009183	Symbol	istate -> colorspace [ 0 ] . procs . special . device_n . tint_transform		11007878						
ANR	11009184	Symbol	cspace_old		11007878						
ANR	11009185	Symbol	tname . value . const_bytes		11007878						
ANR	11009186	Symbol	istate -> colorspace [ 0 ] . procs . special . device_n . layer_names		11007878						
ANR	11009187	Function	validatedevicenspace	3999:0:127740:130553							
ANR	11009188	FunctionDef	"validatedevicenspace (i_ctx_t * i_ctx_p , ref * * space)"		11009187	0					
ANR	11009189	CompoundStatement		4000:0:127804:130553	11009187	0					
ANR	11009190	IdentifierDeclStatement	"int i , code = 0 ;"	4001:4:127810:127825	11009187	0	True				
ANR	11009191	IdentifierDecl	i		11009187	0					
ANR	11009192	IdentifierDeclType	int		11009187	0					
ANR	11009193	Identifier	i		11009187	1					
ANR	11009194	IdentifierDecl	code = 0		11009187	1					
ANR	11009195	IdentifierDeclType	int		11009187	0					
ANR	11009196	Identifier	code		11009187	1					
ANR	11009197	AssignmentExpression	code = 0		11009187	2		=			
ANR	11009198	Identifier	code		11009187	0					
ANR	11009199	PrimaryExpression	0		11009187	1					
ANR	11009200	IdentifierDeclStatement	"ref * devicenspace = * space , proc ;"	4002:4:127831:127863	11009187	1	True				
ANR	11009201	IdentifierDecl	* devicenspace = * space		11009187	0					
ANR	11009202	IdentifierDeclType	ref *		11009187	0					
ANR	11009203	Identifier	devicenspace		11009187	1					
ANR	11009204	AssignmentExpression	* devicenspace = * space		11009187	2		=			
ANR	11009205	Identifier	devicenspace		11009187	0					
ANR	11009206	UnaryOperationExpression	* space		11009187	1					
ANR	11009207	UnaryOperator	*		11009187	0					
ANR	11009208	Identifier	space		11009187	1					
ANR	11009209	IdentifierDecl	proc		11009187	1					
ANR	11009210	IdentifierDeclType	ref		11009187	0					
ANR	11009211	Identifier	proc		11009187	1					
ANR	11009212	IdentifierDeclStatement	"ref nameref , sref , altspace , namesarray , sname ;"	4003:4:127869:127915	11009187	2	True				
ANR	11009213	IdentifierDecl	nameref		11009187	0					
ANR	11009214	IdentifierDeclType	ref		11009187	0					
ANR	11009215	Identifier	nameref		11009187	1					
ANR	11009216	IdentifierDecl	sref		11009187	1					
ANR	11009217	IdentifierDeclType	ref		11009187	0					
ANR	11009218	Identifier	sref		11009187	1					
ANR	11009219	IdentifierDecl	altspace		11009187	2					
ANR	11009220	IdentifierDeclType	ref		11009187	0					
ANR	11009221	Identifier	altspace		11009187	1					
ANR	11009222	IdentifierDecl	namesarray		11009187	3					
ANR	11009223	IdentifierDeclType	ref		11009187	0					
ANR	11009224	Identifier	namesarray		11009187	1					
ANR	11009225	IdentifierDecl	sname		11009187	4					
ANR	11009226	IdentifierDeclType	ref		11009187	0					
ANR	11009227	Identifier	sname		11009187	1					
ANR	11009228	IfStatement	if ( r_size ( devicenspace ) < 4 )		11009187	3					
ANR	11009229	Condition	r_size ( devicenspace ) < 4	4006:8:127972:127995	11009187	0	True				
ANR	11009230	RelationalExpression	r_size ( devicenspace ) < 4		11009187	0		<			
ANR	11009231	CallExpression	r_size ( devicenspace )		11009187	0					
ANR	11009232	Callee	r_size		11009187	0					
ANR	11009233	Identifier	r_size		11009187	0					
ANR	11009234	ArgumentList	devicenspace		11009187	1					
ANR	11009235	Argument	devicenspace		11009187	0					
ANR	11009236	Identifier	devicenspace		11009187	0					
ANR	11009237	PrimaryExpression	4		11009187	1					
ANR	11009238	ExpressionStatement	return_error ( gs_error_rangecheck )	4007:8:128006:128039	11009187	1	True				
ANR	11009239	CallExpression	return_error ( gs_error_rangecheck )		11009187	0					
ANR	11009240	Callee	return_error		11009187	0					
ANR	11009241	Identifier	return_error		11009187	0					
ANR	11009242	ArgumentList	gs_error_rangecheck		11009187	1					
ANR	11009243	Argument	gs_error_rangecheck		11009187	0					
ANR	11009244	Identifier	gs_error_rangecheck		11009187	0					
ANR	11009245	ExpressionStatement	"code = array_get ( imemory , devicenspace , 1 , & namesarray )"	4009:4:128093:128148	11009187	4	True				
ANR	11009246	AssignmentExpression	"code = array_get ( imemory , devicenspace , 1 , & namesarray )"		11009187	0		=			
ANR	11009247	Identifier	code		11009187	0					
ANR	11009248	CallExpression	"array_get ( imemory , devicenspace , 1 , & namesarray )"		11009187	1					
ANR	11009249	Callee	array_get		11009187	0					
ANR	11009250	Identifier	array_get		11009187	0					
ANR	11009251	ArgumentList	imemory		11009187	1					
ANR	11009252	Argument	imemory		11009187	0					
ANR	11009253	Identifier	imemory		11009187	0					
ANR	11009254	Argument	devicenspace		11009187	1					
ANR	11009255	Identifier	devicenspace		11009187	0					
ANR	11009256	Argument	1		11009187	2					
ANR	11009257	PrimaryExpression	1		11009187	0					
ANR	11009258	Argument	& namesarray		11009187	3					
ANR	11009259	UnaryOperationExpression	& namesarray		11009187	0					
ANR	11009260	UnaryOperator	&		11009187	0					
ANR	11009261	Identifier	namesarray		11009187	1					
ANR	11009262	IfStatement	if ( code < 0 )		11009187	5					
ANR	11009263	Condition	code < 0	4010:8:128158:128165	11009187	0	True				
ANR	11009264	RelationalExpression	code < 0		11009187	0		<			
ANR	11009265	Identifier	code		11009187	0					
ANR	11009266	PrimaryExpression	0		11009187	1					
ANR	11009267	ReturnStatement	return code ;	4011:8:128176:128187	11009187	1	True				
ANR	11009268	Identifier	code		11009187	0					
ANR	11009269	IfStatement	if ( ! r_is_array ( & namesarray ) )		11009187	6					
ANR	11009270	Condition	! r_is_array ( & namesarray )	4012:8:128197:128220	11009187	0	True				
ANR	11009271	UnaryOperationExpression	! r_is_array ( & namesarray )		11009187	0					
ANR	11009272	UnaryOperator	!		11009187	0					
ANR	11009273	CallExpression	r_is_array ( & namesarray )		11009187	1					
ANR	11009274	Callee	r_is_array		11009187	0					
ANR	11009275	Identifier	r_is_array		11009187	0					
ANR	11009276	ArgumentList	& namesarray		11009187	1					
ANR	11009277	Argument	& namesarray		11009187	0					
ANR	11009278	UnaryOperationExpression	& namesarray		11009187	0					
ANR	11009279	UnaryOperator	&		11009187	0					
ANR	11009280	Identifier	namesarray		11009187	1					
ANR	11009281	ExpressionStatement	return_error ( gs_error_typecheck )	4013:8:128231:128263	11009187	1	True				
ANR	11009282	CallExpression	return_error ( gs_error_typecheck )		11009187	0					
ANR	11009283	Callee	return_error		11009187	0					
ANR	11009284	Identifier	return_error		11009187	0					
ANR	11009285	ArgumentList	gs_error_typecheck		11009187	1					
ANR	11009286	Argument	gs_error_typecheck		11009187	0					
ANR	11009287	Identifier	gs_error_typecheck		11009187	0					
ANR	11009288	IfStatement	if ( r_size ( & namesarray ) < 1 )		11009187	7					
ANR	11009289	Condition	r_size ( & namesarray ) < 1	4015:8:128315:128337	11009187	0	True				
ANR	11009290	RelationalExpression	r_size ( & namesarray ) < 1		11009187	0		<			
ANR	11009291	CallExpression	r_size ( & namesarray )		11009187	0					
ANR	11009292	Callee	r_size		11009187	0					
ANR	11009293	Identifier	r_size		11009187	0					
ANR	11009294	ArgumentList	& namesarray		11009187	1					
ANR	11009295	Argument	& namesarray		11009187	0					
ANR	11009296	UnaryOperationExpression	& namesarray		11009187	0					
ANR	11009297	UnaryOperator	&		11009187	0					
ANR	11009298	Identifier	namesarray		11009187	1					
ANR	11009299	PrimaryExpression	1		11009187	1					
ANR	11009300	ExpressionStatement	return_error ( gs_error_typecheck )	4016:8:128348:128380	11009187	1	True				
ANR	11009301	CallExpression	return_error ( gs_error_typecheck )		11009187	0					
ANR	11009302	Callee	return_error		11009187	0					
ANR	11009303	Identifier	return_error		11009187	0					
ANR	11009304	ArgumentList	gs_error_typecheck		11009187	1					
ANR	11009305	Argument	gs_error_typecheck		11009187	0					
ANR	11009306	Identifier	gs_error_typecheck		11009187	0					
ANR	11009307	IfStatement	if ( r_size ( & namesarray ) > MAX_COMPONENTS_IN_DEVN )		11009187	8					
ANR	11009308	Condition	r_size ( & namesarray ) > MAX_COMPONENTS_IN_DEVN	4018:8:128445:128488	11009187	0	True				
ANR	11009309	RelationalExpression	r_size ( & namesarray ) > MAX_COMPONENTS_IN_DEVN		11009187	0		>			
ANR	11009310	CallExpression	r_size ( & namesarray )		11009187	0					
ANR	11009311	Callee	r_size		11009187	0					
ANR	11009312	Identifier	r_size		11009187	0					
ANR	11009313	ArgumentList	& namesarray		11009187	1					
ANR	11009314	Argument	& namesarray		11009187	0					
ANR	11009315	UnaryOperationExpression	& namesarray		11009187	0					
ANR	11009316	UnaryOperator	&		11009187	0					
ANR	11009317	Identifier	namesarray		11009187	1					
ANR	11009318	Identifier	MAX_COMPONENTS_IN_DEVN		11009187	1					
ANR	11009319	ExpressionStatement	return_error ( gs_error_limitcheck )	4019:8:128556:128589	11009187	1	True				
ANR	11009320	CallExpression	return_error ( gs_error_limitcheck )		11009187	0					
ANR	11009321	Callee	return_error		11009187	0					
ANR	11009322	Identifier	return_error		11009187	0					
ANR	11009323	ArgumentList	gs_error_limitcheck		11009187	1					
ANR	11009324	Argument	gs_error_limitcheck		11009187	0					
ANR	11009325	Identifier	gs_error_limitcheck		11009187	0					
ANR	11009326	ExpressionStatement	"code = array_get ( imemory , devicenspace , 3 , & proc )"	4021:4:128645:128694	11009187	9	True				
ANR	11009327	AssignmentExpression	"code = array_get ( imemory , devicenspace , 3 , & proc )"		11009187	0		=			
ANR	11009328	Identifier	code		11009187	0					
ANR	11009329	CallExpression	"array_get ( imemory , devicenspace , 3 , & proc )"		11009187	1					
ANR	11009330	Callee	array_get		11009187	0					
ANR	11009331	Identifier	array_get		11009187	0					
ANR	11009332	ArgumentList	imemory		11009187	1					
ANR	11009333	Argument	imemory		11009187	0					
ANR	11009334	Identifier	imemory		11009187	0					
ANR	11009335	Argument	devicenspace		11009187	1					
ANR	11009336	Identifier	devicenspace		11009187	0					
ANR	11009337	Argument	3		11009187	2					
ANR	11009338	PrimaryExpression	3		11009187	0					
ANR	11009339	Argument	& proc		11009187	3					
ANR	11009340	UnaryOperationExpression	& proc		11009187	0					
ANR	11009341	UnaryOperator	&		11009187	0					
ANR	11009342	Identifier	proc		11009187	1					
ANR	11009343	IfStatement	if ( code < 0 )		11009187	10					
ANR	11009344	Condition	code < 0	4022:8:128704:128711	11009187	0	True				
ANR	11009345	RelationalExpression	code < 0		11009187	0		<			
ANR	11009346	Identifier	code		11009187	0					
ANR	11009347	PrimaryExpression	0		11009187	1					
ANR	11009348	ReturnStatement	return code ;	4023:8:128722:128733	11009187	1	True				
ANR	11009349	Identifier	code		11009187	0					
ANR	11009350	ExpressionStatement	check_proc ( proc )	4024:4:128739:128755	11009187	11	True				
ANR	11009351	CallExpression	check_proc ( proc )		11009187	0					
ANR	11009352	Callee	check_proc		11009187	0					
ANR	11009353	Identifier	check_proc		11009187	0					
ANR	11009354	ArgumentList	proc		11009187	1					
ANR	11009355	Argument	proc		11009187	0					
ANR	11009356	Identifier	proc		11009187	0					
ANR	11009357	ForStatement	for ( i = 0 ; i < r_size ( & namesarray ) ; ++ i )		11009187	12					
ANR	11009358	ForInit	i = 0 ;	4027:9:128837:128842	11009187	0	True				
ANR	11009359	AssignmentExpression	i = 0		11009187	0		=			
ANR	11009360	Identifier	i		11009187	0					
ANR	11009361	PrimaryExpression	0		11009187	1					
ANR	11009362	Condition	i < r_size ( & namesarray )	4027:16:128844:128866	11009187	1	True				
ANR	11009363	RelationalExpression	i < r_size ( & namesarray )		11009187	0		<			
ANR	11009364	Identifier	i		11009187	0					
ANR	11009365	CallExpression	r_size ( & namesarray )		11009187	1					
ANR	11009366	Callee	r_size		11009187	0					
ANR	11009367	Identifier	r_size		11009187	0					
ANR	11009368	ArgumentList	& namesarray		11009187	1					
ANR	11009369	Argument	& namesarray		11009187	0					
ANR	11009370	UnaryOperationExpression	& namesarray		11009187	0					
ANR	11009371	UnaryOperator	&		11009187	0					
ANR	11009372	Identifier	namesarray		11009187	1					
ANR	11009373	UnaryExpression	++ i	4027:41:128869:128871	11009187	2	True				
ANR	11009374	IncDec	++		11009187	0					
ANR	11009375	Identifier	i		11009187	1					
ANR	11009376	CompoundStatement		28:46:1069:1069	11009187	3					
ANR	11009377	ExpressionStatement	"array_get ( imemory , & namesarray , ( long ) i , & sname )"	4028:8:128884:128932	11009187	0	True				
ANR	11009378	CallExpression	"array_get ( imemory , & namesarray , ( long ) i , & sname )"		11009187	0					
ANR	11009379	Callee	array_get		11009187	0					
ANR	11009380	Identifier	array_get		11009187	0					
ANR	11009381	ArgumentList	imemory		11009187	1					
ANR	11009382	Argument	imemory		11009187	0					
ANR	11009383	Identifier	imemory		11009187	0					
ANR	11009384	Argument	& namesarray		11009187	1					
ANR	11009385	UnaryOperationExpression	& namesarray		11009187	0					
ANR	11009386	UnaryOperator	&		11009187	0					
ANR	11009387	Identifier	namesarray		11009187	1					
ANR	11009388	Argument	( long ) i		11009187	2					
ANR	11009389	CastExpression	( long ) i		11009187	0					
ANR	11009390	CastTarget	long		11009187	0					
ANR	11009391	Identifier	i		11009187	1					
ANR	11009392	Argument	& sname		11009187	3					
ANR	11009393	UnaryOperationExpression	& sname		11009187	0					
ANR	11009394	UnaryOperator	&		11009187	0					
ANR	11009395	Identifier	sname		11009187	1					
ANR	11009396	SwitchStatement	switch ( r_type ( & sname ) )		11009187	1					
ANR	11009397	Condition	r_type ( & sname )	4029:16:128950:128963	11009187	0	True				
ANR	11009398	CallExpression	r_type ( & sname )		11009187	0					
ANR	11009399	Callee	r_type		11009187	0					
ANR	11009400	Identifier	r_type		11009187	0					
ANR	11009401	ArgumentList	& sname		11009187	1					
ANR	11009402	Argument	& sname		11009187	0					
ANR	11009403	UnaryOperationExpression	& sname		11009187	0					
ANR	11009404	UnaryOperator	&		11009187	0					
ANR	11009405	Identifier	sname		11009187	1					
ANR	11009406	CompoundStatement		30:32:1161:1161	11009187	1					
ANR	11009407	Label	case t_string :	4030:16:128984:128997	11009187	0	True				
ANR	11009408	Identifier	t_string		11009187	0					
ANR	11009409	Label	case t_name :	4031:16:129015:129026	11009187	1	True				
ANR	11009410	Identifier	t_name		11009187	0					
ANR	11009411	BreakStatement	break ;	4032:20:129048:129053	11009187	2	True				
ANR	11009412	Label	default :	4033:16:129071:129078	11009187	3	True				
ANR	11009413	Identifier	default		11009187	0					
ANR	11009414	ExpressionStatement	return_error ( gs_error_typecheck )	4034:20:129100:129132	11009187	4	True				
ANR	11009415	CallExpression	return_error ( gs_error_typecheck )		11009187	0					
ANR	11009416	Callee	return_error		11009187	0					
ANR	11009417	Identifier	return_error		11009187	0					
ANR	11009418	ArgumentList	gs_error_typecheck		11009187	1					
ANR	11009419	Argument	gs_error_typecheck		11009187	0					
ANR	11009420	Identifier	gs_error_typecheck		11009187	0					
ANR	11009421	ExpressionStatement	"code = array_get ( imemory , devicenspace , 2 , & altspace )"	4039:4:129201:129254	11009187	13	True				
ANR	11009422	AssignmentExpression	"code = array_get ( imemory , devicenspace , 2 , & altspace )"		11009187	0		=			
ANR	11009423	Identifier	code		11009187	0					
ANR	11009424	CallExpression	"array_get ( imemory , devicenspace , 2 , & altspace )"		11009187	1					
ANR	11009425	Callee	array_get		11009187	0					
ANR	11009426	Identifier	array_get		11009187	0					
ANR	11009427	ArgumentList	imemory		11009187	1					
ANR	11009428	Argument	imemory		11009187	0					
ANR	11009429	Identifier	imemory		11009187	0					
ANR	11009430	Argument	devicenspace		11009187	1					
ANR	11009431	Identifier	devicenspace		11009187	0					
ANR	11009432	Argument	2		11009187	2					
ANR	11009433	PrimaryExpression	2		11009187	0					
ANR	11009434	Argument	& altspace		11009187	3					
ANR	11009435	UnaryOperationExpression	& altspace		11009187	0					
ANR	11009436	UnaryOperator	&		11009187	0					
ANR	11009437	Identifier	altspace		11009187	1					
ANR	11009438	IfStatement	if ( code < 0 )		11009187	14					
ANR	11009439	Condition	code < 0	4040:8:129264:129271	11009187	0	True				
ANR	11009440	RelationalExpression	code < 0		11009187	0		<			
ANR	11009441	Identifier	code		11009187	0					
ANR	11009442	PrimaryExpression	0		11009187	1					
ANR	11009443	ReturnStatement	return code ;	4041:8:129282:129293	11009187	1	True				
ANR	11009444	Identifier	code		11009187	0					
ANR	11009445	IfStatement	"if ( r_has_type ( & altspace , t_name ) )"		11009187	15					
ANR	11009446	Condition	"r_has_type ( & altspace , t_name )"	4042:8:129303:129331	11009187	0	True				
ANR	11009447	CallExpression	"r_has_type ( & altspace , t_name )"		11009187	0					
ANR	11009448	Callee	r_has_type		11009187	0					
ANR	11009449	Identifier	r_has_type		11009187	0					
ANR	11009450	ArgumentList	& altspace		11009187	1					
ANR	11009451	Argument	& altspace		11009187	0					
ANR	11009452	UnaryOperationExpression	& altspace		11009187	0					
ANR	11009453	UnaryOperator	&		11009187	0					
ANR	11009454	Identifier	altspace		11009187	1					
ANR	11009455	Argument	t_name		11009187	1					
ANR	11009456	Identifier	t_name		11009187	0					
ANR	11009457	ExpressionStatement	"ref_assign ( & nameref , & altspace )"	4043:8:129342:129373	11009187	1	True				
ANR	11009458	CallExpression	"ref_assign ( & nameref , & altspace )"		11009187	0					
ANR	11009459	Callee	ref_assign		11009187	0					
ANR	11009460	Identifier	ref_assign		11009187	0					
ANR	11009461	ArgumentList	& nameref		11009187	1					
ANR	11009462	Argument	& nameref		11009187	0					
ANR	11009463	UnaryOperationExpression	& nameref		11009187	0					
ANR	11009464	UnaryOperator	&		11009187	0					
ANR	11009465	Identifier	nameref		11009187	1					
ANR	11009466	Argument	& altspace		11009187	1					
ANR	11009467	UnaryOperationExpression	& altspace		11009187	0					
ANR	11009468	UnaryOperator	&		11009187	0					
ANR	11009469	Identifier	altspace		11009187	1					
ANR	11009470	ElseStatement	else		11009187	0					
ANR	11009471	CompoundStatement		45:9:1579:1579	11009187	0					
ANR	11009472	IfStatement	if ( ! r_is_array ( & altspace ) )		11009187	0					
ANR	11009473	Condition	! r_is_array ( & altspace )	4046:12:129454:129475	11009187	0	True				
ANR	11009474	UnaryOperationExpression	! r_is_array ( & altspace )		11009187	0					
ANR	11009475	UnaryOperator	!		11009187	0					
ANR	11009476	CallExpression	r_is_array ( & altspace )		11009187	1					
ANR	11009477	Callee	r_is_array		11009187	0					
ANR	11009478	Identifier	r_is_array		11009187	0					
ANR	11009479	ArgumentList	& altspace		11009187	1					
ANR	11009480	Argument	& altspace		11009187	0					
ANR	11009481	UnaryOperationExpression	& altspace		11009187	0					
ANR	11009482	UnaryOperator	&		11009187	0					
ANR	11009483	Identifier	altspace		11009187	1					
ANR	11009484	ExpressionStatement	return_error ( gs_error_typecheck )	4047:12:129490:129522	11009187	1	True				
ANR	11009485	CallExpression	return_error ( gs_error_typecheck )		11009187	0					
ANR	11009486	Callee	return_error		11009187	0					
ANR	11009487	Identifier	return_error		11009187	0					
ANR	11009488	ArgumentList	gs_error_typecheck		11009187	1					
ANR	11009489	Argument	gs_error_typecheck		11009187	0					
ANR	11009490	Identifier	gs_error_typecheck		11009187	0					
ANR	11009491	ExpressionStatement	"code = array_get ( imemory , & altspace , 0 , & nameref )"	4049:8:129574:129623	11009187	1	True				
ANR	11009492	AssignmentExpression	"code = array_get ( imemory , & altspace , 0 , & nameref )"		11009187	0		=			
ANR	11009493	Identifier	code		11009187	0					
ANR	11009494	CallExpression	"array_get ( imemory , & altspace , 0 , & nameref )"		11009187	1					
ANR	11009495	Callee	array_get		11009187	0					
ANR	11009496	Identifier	array_get		11009187	0					
ANR	11009497	ArgumentList	imemory		11009187	1					
ANR	11009498	Argument	imemory		11009187	0					
ANR	11009499	Identifier	imemory		11009187	0					
ANR	11009500	Argument	& altspace		11009187	1					
ANR	11009501	UnaryOperationExpression	& altspace		11009187	0					
ANR	11009502	UnaryOperator	&		11009187	0					
ANR	11009503	Identifier	altspace		11009187	1					
ANR	11009504	Argument	0		11009187	2					
ANR	11009505	PrimaryExpression	0		11009187	0					
ANR	11009506	Argument	& nameref		11009187	3					
ANR	11009507	UnaryOperationExpression	& nameref		11009187	0					
ANR	11009508	UnaryOperator	&		11009187	0					
ANR	11009509	Identifier	nameref		11009187	1					
ANR	11009510	IfStatement	if ( code < 0 )		11009187	2					
ANR	11009511	Condition	code < 0	4050:12:129637:129644	11009187	0	True				
ANR	11009512	RelationalExpression	code < 0		11009187	0		<			
ANR	11009513	Identifier	code		11009187	0					
ANR	11009514	PrimaryExpression	0		11009187	1					
ANR	11009515	ReturnStatement	return code ;	4051:12:129659:129670	11009187	1	True				
ANR	11009516	Identifier	code		11009187	0					
ANR	11009517	IfStatement	"if ( ! r_has_type ( & nameref , t_name ) )"		11009187	3					
ANR	11009518	Condition	"! r_has_type ( & nameref , t_name )"	4052:12:129684:129712	11009187	0	True				
ANR	11009519	UnaryOperationExpression	"! r_has_type ( & nameref , t_name )"		11009187	0					
ANR	11009520	UnaryOperator	!		11009187	0					
ANR	11009521	CallExpression	"r_has_type ( & nameref , t_name )"		11009187	1					
ANR	11009522	Callee	r_has_type		11009187	0					
ANR	11009523	Identifier	r_has_type		11009187	0					
ANR	11009524	ArgumentList	& nameref		11009187	1					
ANR	11009525	Argument	& nameref		11009187	0					
ANR	11009526	UnaryOperationExpression	& nameref		11009187	0					
ANR	11009527	UnaryOperator	&		11009187	0					
ANR	11009528	Identifier	nameref		11009187	1					
ANR	11009529	Argument	t_name		11009187	1					
ANR	11009530	Identifier	t_name		11009187	0					
ANR	11009531	ExpressionStatement	return_error ( gs_error_typecheck )	4053:12:129727:129759	11009187	1	True				
ANR	11009532	CallExpression	return_error ( gs_error_typecheck )		11009187	0					
ANR	11009533	Callee	return_error		11009187	0					
ANR	11009534	Identifier	return_error		11009187	0					
ANR	11009535	ArgumentList	gs_error_typecheck		11009187	1					
ANR	11009536	Argument	gs_error_typecheck		11009187	0					
ANR	11009537	Identifier	gs_error_typecheck		11009187	0					
ANR	11009538	ExpressionStatement	"name_string_ref ( imemory , & nameref , & sref )"	4056:4:129820:129861	11009187	16	True				
ANR	11009539	CallExpression	"name_string_ref ( imemory , & nameref , & sref )"		11009187	0					
ANR	11009540	Callee	name_string_ref		11009187	0					
ANR	11009541	Identifier	name_string_ref		11009187	0					
ANR	11009542	ArgumentList	imemory		11009187	1					
ANR	11009543	Argument	imemory		11009187	0					
ANR	11009544	Identifier	imemory		11009187	0					
ANR	11009545	Argument	& nameref		11009187	1					
ANR	11009546	UnaryOperationExpression	& nameref		11009187	0					
ANR	11009547	UnaryOperator	&		11009187	0					
ANR	11009548	Identifier	nameref		11009187	1					
ANR	11009549	Argument	& sref		11009187	2					
ANR	11009550	UnaryOperationExpression	& sref		11009187	0					
ANR	11009551	UnaryOperator	&		11009187	0					
ANR	11009552	Identifier	sref		11009187	1					
ANR	11009553	IfStatement	if ( r_size ( & sref ) == 7 )		11009187	17					
ANR	11009554	Condition	r_size ( & sref ) == 7	4058:8:129924:129941	11009187	0	True				
ANR	11009555	EqualityExpression	r_size ( & sref ) == 7		11009187	0		==			
ANR	11009556	CallExpression	r_size ( & sref )		11009187	0					
ANR	11009557	Callee	r_size		11009187	0					
ANR	11009558	Identifier	r_size		11009187	0					
ANR	11009559	ArgumentList	& sref		11009187	1					
ANR	11009560	Argument	& sref		11009187	0					
ANR	11009561	UnaryOperationExpression	& sref		11009187	0					
ANR	11009562	UnaryOperator	&		11009187	0					
ANR	11009563	Identifier	sref		11009187	1					
ANR	11009564	PrimaryExpression	7		11009187	1					
ANR	11009565	CompoundStatement		59:28:2139:2139	11009187	1					
ANR	11009566	IfStatement	"if ( strncmp ( ( const char * ) sref . value . const_bytes , ""Indexed"" , 7 ) == 0 )"		11009187	0					
ANR	11009567	Condition	"strncmp ( ( const char * ) sref . value . const_bytes , ""Indexed"" , 7 ) == 0"	4059:12:129958:130021	11009187	0	True				
ANR	11009568	EqualityExpression	"strncmp ( ( const char * ) sref . value . const_bytes , ""Indexed"" , 7 ) == 0"		11009187	0		==			
ANR	11009569	CallExpression	"strncmp ( ( const char * ) sref . value . const_bytes , ""Indexed"" , 7 )"		11009187	0					
ANR	11009570	Callee	strncmp		11009187	0					
ANR	11009571	Identifier	strncmp		11009187	0					
ANR	11009572	ArgumentList	( const char * ) sref . value . const_bytes		11009187	1					
ANR	11009573	Argument	( const char * ) sref . value . const_bytes		11009187	0					
ANR	11009574	CastExpression	( const char * ) sref . value . const_bytes		11009187	0					
ANR	11009575	CastTarget	const char *		11009187	0					
ANR	11009576	MemberAccess	sref . value . const_bytes		11009187	1					
ANR	11009577	MemberAccess	sref . value		11009187	0					
ANR	11009578	Identifier	sref		11009187	0					
ANR	11009579	Identifier	value		11009187	1					
ANR	11009580	Identifier	const_bytes		11009187	1					
ANR	11009581	Argument	"""Indexed"""		11009187	1					
ANR	11009582	PrimaryExpression	"""Indexed"""		11009187	0					
ANR	11009583	Argument	7		11009187	2					
ANR	11009584	PrimaryExpression	7		11009187	0					
ANR	11009585	PrimaryExpression	0		11009187	1					
ANR	11009586	ExpressionStatement	return_error ( gs_error_typecheck )	4060:12:130036:130068	11009187	1	True				
ANR	11009587	CallExpression	return_error ( gs_error_typecheck )		11009187	0					
ANR	11009588	Callee	return_error		11009187	0					
ANR	11009589	Identifier	return_error		11009187	0					
ANR	11009590	ArgumentList	gs_error_typecheck		11009187	1					
ANR	11009591	Argument	gs_error_typecheck		11009187	0					
ANR	11009592	Identifier	gs_error_typecheck		11009187	0					
ANR	11009593	IfStatement	"if ( strncmp ( ( const char * ) sref . value . const_bytes , ""Pattern"" , 7 ) == 0 )"		11009187	1					
ANR	11009594	Condition	"strncmp ( ( const char * ) sref . value . const_bytes , ""Pattern"" , 7 ) == 0"	4061:12:130082:130145	11009187	0	True				
ANR	11009595	EqualityExpression	"strncmp ( ( const char * ) sref . value . const_bytes , ""Pattern"" , 7 ) == 0"		11009187	0		==			
ANR	11009596	CallExpression	"strncmp ( ( const char * ) sref . value . const_bytes , ""Pattern"" , 7 )"		11009187	0					
ANR	11009597	Callee	strncmp		11009187	0					
ANR	11009598	Identifier	strncmp		11009187	0					
ANR	11009599	ArgumentList	( const char * ) sref . value . const_bytes		11009187	1					
ANR	11009600	Argument	( const char * ) sref . value . const_bytes		11009187	0					
ANR	11009601	CastExpression	( const char * ) sref . value . const_bytes		11009187	0					
ANR	11009602	CastTarget	const char *		11009187	0					
ANR	11009603	MemberAccess	sref . value . const_bytes		11009187	1					
ANR	11009604	MemberAccess	sref . value		11009187	0					
ANR	11009605	Identifier	sref		11009187	0					
ANR	11009606	Identifier	value		11009187	1					
ANR	11009607	Identifier	const_bytes		11009187	1					
ANR	11009608	Argument	"""Pattern"""		11009187	1					
ANR	11009609	PrimaryExpression	"""Pattern"""		11009187	0					
ANR	11009610	Argument	7		11009187	2					
ANR	11009611	PrimaryExpression	7		11009187	0					
ANR	11009612	PrimaryExpression	0		11009187	1					
ANR	11009613	ExpressionStatement	return_error ( gs_error_typecheck )	4062:12:130160:130192	11009187	1	True				
ANR	11009614	CallExpression	return_error ( gs_error_typecheck )		11009187	0					
ANR	11009615	Callee	return_error		11009187	0					
ANR	11009616	Identifier	return_error		11009187	0					
ANR	11009617	ArgumentList	gs_error_typecheck		11009187	1					
ANR	11009618	Argument	gs_error_typecheck		11009187	0					
ANR	11009619	Identifier	gs_error_typecheck		11009187	0					
ANR	11009620	IfStatement	"if ( strncmp ( ( const char * ) sref . value . const_bytes , ""DeviceN"" , 7 ) == 0 )"		11009187	2					
ANR	11009621	Condition	"strncmp ( ( const char * ) sref . value . const_bytes , ""DeviceN"" , 7 ) == 0"	4063:12:130206:130269	11009187	0	True				
ANR	11009622	EqualityExpression	"strncmp ( ( const char * ) sref . value . const_bytes , ""DeviceN"" , 7 ) == 0"		11009187	0		==			
ANR	11009623	CallExpression	"strncmp ( ( const char * ) sref . value . const_bytes , ""DeviceN"" , 7 )"		11009187	0					
ANR	11009624	Callee	strncmp		11009187	0					
ANR	11009625	Identifier	strncmp		11009187	0					
ANR	11009626	ArgumentList	( const char * ) sref . value . const_bytes		11009187	1					
ANR	11009627	Argument	( const char * ) sref . value . const_bytes		11009187	0					
ANR	11009628	CastExpression	( const char * ) sref . value . const_bytes		11009187	0					
ANR	11009629	CastTarget	const char *		11009187	0					
ANR	11009630	MemberAccess	sref . value . const_bytes		11009187	1					
ANR	11009631	MemberAccess	sref . value		11009187	0					
ANR	11009632	Identifier	sref		11009187	0					
ANR	11009633	Identifier	value		11009187	1					
ANR	11009634	Identifier	const_bytes		11009187	1					
ANR	11009635	Argument	"""DeviceN"""		11009187	1					
ANR	11009636	PrimaryExpression	"""DeviceN"""		11009187	0					
ANR	11009637	Argument	7		11009187	2					
ANR	11009638	PrimaryExpression	7		11009187	0					
ANR	11009639	PrimaryExpression	0		11009187	1					
ANR	11009640	ExpressionStatement	return_error ( gs_error_typecheck )	4064:12:130284:130316	11009187	1	True				
ANR	11009641	CallExpression	return_error ( gs_error_typecheck )		11009187	0					
ANR	11009642	Callee	return_error		11009187	0					
ANR	11009643	Identifier	return_error		11009187	0					
ANR	11009644	ArgumentList	gs_error_typecheck		11009187	1					
ANR	11009645	Argument	gs_error_typecheck		11009187	0					
ANR	11009646	Identifier	gs_error_typecheck		11009187	0					
ANR	11009647	IfStatement	"if ( r_size ( & sref ) == 9 && strncmp ( ( const char * ) sref . value . const_bytes , ""Separation"" , 9 ) == 0 )"		11009187	18					
ANR	11009648	Condition	"r_size ( & sref ) == 9 && strncmp ( ( const char * ) sref . value . const_bytes , ""Separation"" , 9 ) == 0"	4067:8:130367:130455	11009187	0	True				
ANR	11009649	AndExpression	"r_size ( & sref ) == 9 && strncmp ( ( const char * ) sref . value . const_bytes , ""Separation"" , 9 ) == 0"		11009187	0		&&			
ANR	11009650	EqualityExpression	r_size ( & sref ) == 9		11009187	0		==			
ANR	11009651	CallExpression	r_size ( & sref )		11009187	0					
ANR	11009652	Callee	r_size		11009187	0					
ANR	11009653	Identifier	r_size		11009187	0					
ANR	11009654	ArgumentList	& sref		11009187	1					
ANR	11009655	Argument	& sref		11009187	0					
ANR	11009656	UnaryOperationExpression	& sref		11009187	0					
ANR	11009657	UnaryOperator	&		11009187	0					
ANR	11009658	Identifier	sref		11009187	1					
ANR	11009659	PrimaryExpression	9		11009187	1					
ANR	11009660	EqualityExpression	"strncmp ( ( const char * ) sref . value . const_bytes , ""Separation"" , 9 ) == 0"		11009187	1		==			
ANR	11009661	CallExpression	"strncmp ( ( const char * ) sref . value . const_bytes , ""Separation"" , 9 )"		11009187	0					
ANR	11009662	Callee	strncmp		11009187	0					
ANR	11009663	Identifier	strncmp		11009187	0					
ANR	11009664	ArgumentList	( const char * ) sref . value . const_bytes		11009187	1					
ANR	11009665	Argument	( const char * ) sref . value . const_bytes		11009187	0					
ANR	11009666	CastExpression	( const char * ) sref . value . const_bytes		11009187	0					
ANR	11009667	CastTarget	const char *		11009187	0					
ANR	11009668	MemberAccess	sref . value . const_bytes		11009187	1					
ANR	11009669	MemberAccess	sref . value		11009187	0					
ANR	11009670	Identifier	sref		11009187	0					
ANR	11009671	Identifier	value		11009187	1					
ANR	11009672	Identifier	const_bytes		11009187	1					
ANR	11009673	Argument	"""Separation"""		11009187	1					
ANR	11009674	PrimaryExpression	"""Separation"""		11009187	0					
ANR	11009675	Argument	9		11009187	2					
ANR	11009676	PrimaryExpression	9		11009187	0					
ANR	11009677	PrimaryExpression	0		11009187	1					
ANR	11009678	ExpressionStatement	return_error ( gs_error_typecheck )	4068:11:130469:130501	11009187	1	True				
ANR	11009679	CallExpression	return_error ( gs_error_typecheck )		11009187	0					
ANR	11009680	Callee	return_error		11009187	0					
ANR	11009681	Identifier	return_error		11009187	0					
ANR	11009682	ArgumentList	gs_error_typecheck		11009187	1					
ANR	11009683	Argument	gs_error_typecheck		11009187	0					
ANR	11009684	Identifier	gs_error_typecheck		11009187	0					
ANR	11009685	ExpressionStatement	"ref_assign ( * space , & altspace )"	4070:4:130508:130537	11009187	19	True				
ANR	11009686	CallExpression	"ref_assign ( * space , & altspace )"		11009187	0					
ANR	11009687	Callee	ref_assign		11009187	0					
ANR	11009688	Identifier	ref_assign		11009187	0					
ANR	11009689	ArgumentList	* space		11009187	1					
ANR	11009690	Argument	* space		11009187	0					
ANR	11009691	UnaryOperationExpression	* space		11009187	0					
ANR	11009692	UnaryOperator	*		11009187	0					
ANR	11009693	Identifier	space		11009187	1					
ANR	11009694	Argument	& altspace		11009187	1					
ANR	11009695	UnaryOperationExpression	& altspace		11009187	0					
ANR	11009696	UnaryOperator	&		11009187	0					
ANR	11009697	Identifier	altspace		11009187	1					
ANR	11009698	ReturnStatement	return 0 ;	4071:4:130543:130551	11009187	20	True				
ANR	11009699	PrimaryExpression	0		11009187	0					
ANR	11009700	ReturnType	static int		11009187	1					
ANR	11009701	Identifier	validatedevicenspace		11009187	2					
ANR	11009702	ParameterList	"i_ctx_t * i_ctx_p , ref * * space"		11009187	3					
ANR	11009703	Parameter	i_ctx_t * i_ctx_p	3999:32:127772:127788	11009187	0	True				
ANR	11009704	ParameterType	i_ctx_t *		11009187	0					
ANR	11009705	Identifier	i_ctx_p		11009187	1					
ANR	11009706	Parameter	ref * * space	3999:51:127791:127801	11009187	1	True				
ANR	11009707	ParameterType	ref * *		11009187	0					
ANR	11009708	Identifier	space		11009187	1					
ANR	11009709	CFGEntryNode	ENTRY		11009187		True				
ANR	11009710	CFGExitNode	EXIT		11009187		True				
ANR	11009711	Symbol	code		11009187						
ANR	11009712	Symbol	gs_error_rangecheck		11009187						
ANR	11009713	Symbol	nameref		11009187						
ANR	11009714	Symbol	& sname		11009187						
ANR	11009715	Symbol	space		11009187						
ANR	11009716	Symbol	strncmp		11009187						
ANR	11009717	Symbol	gs_error_typecheck		11009187						
ANR	11009718	Symbol	MAX_COMPONENTS_IN_DEVN		11009187						
ANR	11009719	Symbol	r_has_type		11009187						
ANR	11009720	Symbol	altspace		11009187						
ANR	11009721	Symbol	& altspace		11009187						
ANR	11009722	Symbol	t_name		11009187						
ANR	11009723	Symbol	r_size		11009187						
ANR	11009724	Symbol	gs_error_limitcheck		11009187						
ANR	11009725	Symbol	sref . value . const_bytes		11009187						
ANR	11009726	Symbol	imemory		11009187						
ANR	11009727	Symbol	devicenspace		11009187						
ANR	11009728	Symbol	r_type		11009187						
ANR	11009729	Symbol	& proc		11009187						
ANR	11009730	Symbol	& nameref		11009187						
ANR	11009731	Symbol	proc		11009187						
ANR	11009732	Symbol	array_get		11009187						
ANR	11009733	Symbol	i		11009187						
ANR	11009734	Symbol	namesarray		11009187						
ANR	11009735	Symbol	& sref		11009187						
ANR	11009736	Symbol	sref . value		11009187						
ANR	11009737	Symbol	sref		11009187						
ANR	11009738	Symbol	i_ctx_p		11009187						
ANR	11009739	Symbol	sname		11009187						
ANR	11009740	Symbol	* space		11009187						
ANR	11009741	Symbol	& namesarray		11009187						
ANR	11009742	Symbol	r_is_array		11009187						
ANR	11009743	Function	devicenalternatespace	4073:0:130555:130814							
ANR	11009744	FunctionDef	"devicenalternatespace (i_ctx_t * i_ctx_p , ref * space , ref * * r , int * CIESubst)"		11009743	0					
ANR	11009745	CompoundStatement		4074:0:130643:130814	11009743	0					
ANR	11009746	IdentifierDeclStatement	ref altspace ;	4075:4:130649:130661	11009743	0	True				
ANR	11009747	IdentifierDecl	altspace		11009743	0					
ANR	11009748	IdentifierDeclType	ref		11009743	0					
ANR	11009749	Identifier	altspace		11009743	1					
ANR	11009750	IdentifierDeclStatement	int code ;	4076:4:130667:130675	11009743	1	True				
ANR	11009751	IdentifierDecl	code		11009743	0					
ANR	11009752	IdentifierDeclType	int		11009743	0					
ANR	11009753	Identifier	code		11009743	1					
ANR	11009754	ExpressionStatement	"code = array_get ( imemory , space , 2 , & altspace )"	4078:4:130682:130728	11009743	2	True				
ANR	11009755	AssignmentExpression	"code = array_get ( imemory , space , 2 , & altspace )"		11009743	0		=			
ANR	11009756	Identifier	code		11009743	0					
ANR	11009757	CallExpression	"array_get ( imemory , space , 2 , & altspace )"		11009743	1					
ANR	11009758	Callee	array_get		11009743	0					
ANR	11009759	Identifier	array_get		11009743	0					
ANR	11009760	ArgumentList	imemory		11009743	1					
ANR	11009761	Argument	imemory		11009743	0					
ANR	11009762	Identifier	imemory		11009743	0					
ANR	11009763	Argument	space		11009743	1					
ANR	11009764	Identifier	space		11009743	0					
ANR	11009765	Argument	2		11009743	2					
ANR	11009766	PrimaryExpression	2		11009743	0					
ANR	11009767	Argument	& altspace		11009743	3					
ANR	11009768	UnaryOperationExpression	& altspace		11009743	0					
ANR	11009769	UnaryOperator	&		11009743	0					
ANR	11009770	Identifier	altspace		11009743	1					
ANR	11009771	IfStatement	if ( code < 0 )		11009743	3					
ANR	11009772	Condition	code < 0	4079:8:130738:130745	11009743	0	True				
ANR	11009773	RelationalExpression	code < 0		11009743	0		<			
ANR	11009774	Identifier	code		11009743	0					
ANR	11009775	PrimaryExpression	0		11009743	1					
ANR	11009776	ReturnStatement	return code ;	4080:8:130756:130767	11009743	1	True				
ANR	11009777	Identifier	code		11009743	0					
ANR	11009778	ExpressionStatement	"ref_assign ( * r , & altspace )"	4081:4:130773:130798	11009743	4	True				
ANR	11009779	CallExpression	"ref_assign ( * r , & altspace )"		11009743	0					
ANR	11009780	Callee	ref_assign		11009743	0					
ANR	11009781	Identifier	ref_assign		11009743	0					
ANR	11009782	ArgumentList	* r		11009743	1					
ANR	11009783	Argument	* r		11009743	0					
ANR	11009784	UnaryOperationExpression	* r		11009743	0					
ANR	11009785	UnaryOperator	*		11009743	0					
ANR	11009786	Identifier	r		11009743	1					
ANR	11009787	Argument	& altspace		11009743	1					
ANR	11009788	UnaryOperationExpression	& altspace		11009743	0					
ANR	11009789	UnaryOperator	&		11009743	0					
ANR	11009790	Identifier	altspace		11009743	1					
ANR	11009791	ReturnStatement	return 0 ;	4082:4:130804:130812	11009743	5	True				
ANR	11009792	PrimaryExpression	0		11009743	0					
ANR	11009793	ReturnType	static int		11009743	1					
ANR	11009794	Identifier	devicenalternatespace		11009743	2					
ANR	11009795	ParameterList	"i_ctx_t * i_ctx_p , ref * space , ref * * r , int * CIESubst"		11009743	3					
ANR	11009796	Parameter	i_ctx_t * i_ctx_p	4073:33:130588:130604	11009743	0	True				
ANR	11009797	ParameterType	i_ctx_t *		11009743	0					
ANR	11009798	Identifier	i_ctx_p		11009743	1					
ANR	11009799	Parameter	ref * space	4073:52:130607:130616	11009743	1	True				
ANR	11009800	ParameterType	ref *		11009743	0					
ANR	11009801	Identifier	space		11009743	1					
ANR	11009802	Parameter	ref * * r	4073:64:130619:130625	11009743	2	True				
ANR	11009803	ParameterType	ref * *		11009743	0					
ANR	11009804	Identifier	r		11009743	1					
ANR	11009805	Parameter	int * CIESubst	4073:73:130628:130640	11009743	3	True				
ANR	11009806	ParameterType	int *		11009743	0					
ANR	11009807	Identifier	CIESubst		11009743	1					
ANR	11009808	CFGEntryNode	ENTRY		11009743		True				
ANR	11009809	CFGExitNode	EXIT		11009743		True				
ANR	11009810	Symbol	r		11009743						
ANR	11009811	Symbol	altspace		11009743						
ANR	11009812	Symbol	code		11009743						
ANR	11009813	Symbol	& altspace		11009743						
ANR	11009814	Symbol	i_ctx_p		11009743						
ANR	11009815	Symbol	array_get		11009743						
ANR	11009816	Symbol	imemory		11009743						
ANR	11009817	Symbol	* r		11009743						
ANR	11009818	Symbol	space		11009743						
ANR	11009819	Symbol	CIESubst		11009743						
ANR	11009820	Function	devicencomponents	4084:0:130816:131058							
ANR	11009821	FunctionDef	"devicencomponents (i_ctx_t * i_ctx_p , ref * space , int * n)"		11009820	0					
ANR	11009822	CompoundStatement		4085:0:130884:131058	11009820	0					
ANR	11009823	IdentifierDeclStatement	ref namesarray ;	4086:4:130890:130904	11009820	0	True				
ANR	11009824	IdentifierDecl	namesarray		11009820	0					
ANR	11009825	IdentifierDeclType	ref		11009820	0					
ANR	11009826	Identifier	namesarray		11009820	1					
ANR	11009827	IdentifierDeclStatement	int code ;	4087:4:130910:130918	11009820	1	True				
ANR	11009828	IdentifierDecl	code		11009820	0					
ANR	11009829	IdentifierDeclType	int		11009820	0					
ANR	11009830	Identifier	code		11009820	1					
ANR	11009831	ExpressionStatement	"code = array_get ( imemory , space , 1 , & namesarray )"	4089:4:130925:130973	11009820	2	True				
ANR	11009832	AssignmentExpression	"code = array_get ( imemory , space , 1 , & namesarray )"		11009820	0		=			
ANR	11009833	Identifier	code		11009820	0					
ANR	11009834	CallExpression	"array_get ( imemory , space , 1 , & namesarray )"		11009820	1					
ANR	11009835	Callee	array_get		11009820	0					
ANR	11009836	Identifier	array_get		11009820	0					
ANR	11009837	ArgumentList	imemory		11009820	1					
ANR	11009838	Argument	imemory		11009820	0					
ANR	11009839	Identifier	imemory		11009820	0					
ANR	11009840	Argument	space		11009820	1					
ANR	11009841	Identifier	space		11009820	0					
ANR	11009842	Argument	1		11009820	2					
ANR	11009843	PrimaryExpression	1		11009820	0					
ANR	11009844	Argument	& namesarray		11009820	3					
ANR	11009845	UnaryOperationExpression	& namesarray		11009820	0					
ANR	11009846	UnaryOperator	&		11009820	0					
ANR	11009847	Identifier	namesarray		11009820	1					
ANR	11009848	IfStatement	if ( code < 0 )		11009820	3					
ANR	11009849	Condition	code < 0	4090:8:130983:130990	11009820	0	True				
ANR	11009850	RelationalExpression	code < 0		11009820	0		<			
ANR	11009851	Identifier	code		11009820	0					
ANR	11009852	PrimaryExpression	0		11009820	1					
ANR	11009853	ReturnStatement	return code ;	4091:8:131001:131012	11009820	1	True				
ANR	11009854	Identifier	code		11009820	0					
ANR	11009855	ExpressionStatement	* n = r_size ( & namesarray )	4092:4:131018:131042	11009820	4	True				
ANR	11009856	AssignmentExpression	* n = r_size ( & namesarray )		11009820	0		=			
ANR	11009857	UnaryOperationExpression	* n		11009820	0					
ANR	11009858	UnaryOperator	*		11009820	0					
ANR	11009859	Identifier	n		11009820	1					
ANR	11009860	CallExpression	r_size ( & namesarray )		11009820	1					
ANR	11009861	Callee	r_size		11009820	0					
ANR	11009862	Identifier	r_size		11009820	0					
ANR	11009863	ArgumentList	& namesarray		11009820	1					
ANR	11009864	Argument	& namesarray		11009820	0					
ANR	11009865	UnaryOperationExpression	& namesarray		11009820	0					
ANR	11009866	UnaryOperator	&		11009820	0					
ANR	11009867	Identifier	namesarray		11009820	1					
ANR	11009868	ReturnStatement	return 0 ;	4093:4:131048:131056	11009820	5	True				
ANR	11009869	PrimaryExpression	0		11009820	0					
ANR	11009870	ReturnType	static int		11009820	1					
ANR	11009871	Identifier	devicencomponents		11009820	2					
ANR	11009872	ParameterList	"i_ctx_t * i_ctx_p , ref * space , int * n"		11009820	3					
ANR	11009873	Parameter	i_ctx_t * i_ctx_p	4084:29:130845:130861	11009820	0	True				
ANR	11009874	ParameterType	i_ctx_t *		11009820	0					
ANR	11009875	Identifier	i_ctx_p		11009820	1					
ANR	11009876	Parameter	ref * space	4084:48:130864:130873	11009820	1	True				
ANR	11009877	ParameterType	ref *		11009820	0					
ANR	11009878	Identifier	space		11009820	1					
ANR	11009879	Parameter	int * n	4084:60:130876:130881	11009820	2	True				
ANR	11009880	ParameterType	int *		11009820	0					
ANR	11009881	Identifier	n		11009820	1					
ANR	11009882	CFGEntryNode	ENTRY		11009820		True				
ANR	11009883	CFGExitNode	EXIT		11009820		True				
ANR	11009884	Symbol	code		11009820						
ANR	11009885	Symbol	i_ctx_p		11009820						
ANR	11009886	Symbol	array_get		11009820						
ANR	11009887	Symbol	r_size		11009820						
ANR	11009888	Symbol	* n		11009820						
ANR	11009889	Symbol	namesarray		11009820						
ANR	11009890	Symbol	imemory		11009820						
ANR	11009891	Symbol	& namesarray		11009820						
ANR	11009892	Symbol	space		11009820						
ANR	11009893	Symbol	n		11009820						
ANR	11009894	Function	devicendomain	4095:0:131060:131401							
ANR	11009895	FunctionDef	"devicendomain (i_ctx_t * i_ctx_p , ref * space , float * ptr)"		11009894	0					
ANR	11009896	CompoundStatement		4096:0:131128:131401	11009894	0					
ANR	11009897	IdentifierDeclStatement	"int i , limit , code ;"	4097:4:131134:131152	11009894	0	True				
ANR	11009898	IdentifierDecl	i		11009894	0					
ANR	11009899	IdentifierDeclType	int		11009894	0					
ANR	11009900	Identifier	i		11009894	1					
ANR	11009901	IdentifierDecl	limit		11009894	1					
ANR	11009902	IdentifierDeclType	int		11009894	0					
ANR	11009903	Identifier	limit		11009894	1					
ANR	11009904	IdentifierDecl	code		11009894	2					
ANR	11009905	IdentifierDeclType	int		11009894	0					
ANR	11009906	Identifier	code		11009894	1					
ANR	11009907	IdentifierDeclStatement	ref namesarray ;	4098:4:131158:131172	11009894	1	True				
ANR	11009908	IdentifierDecl	namesarray		11009894	0					
ANR	11009909	IdentifierDeclType	ref		11009894	0					
ANR	11009910	Identifier	namesarray		11009894	1					
ANR	11009911	ExpressionStatement	"code = array_get ( imemory , space , 1 , & namesarray )"	4100:4:131179:131227	11009894	2	True				
ANR	11009912	AssignmentExpression	"code = array_get ( imemory , space , 1 , & namesarray )"		11009894	0		=			
ANR	11009913	Identifier	code		11009894	0					
ANR	11009914	CallExpression	"array_get ( imemory , space , 1 , & namesarray )"		11009894	1					
ANR	11009915	Callee	array_get		11009894	0					
ANR	11009916	Identifier	array_get		11009894	0					
ANR	11009917	ArgumentList	imemory		11009894	1					
ANR	11009918	Argument	imemory		11009894	0					
ANR	11009919	Identifier	imemory		11009894	0					
ANR	11009920	Argument	space		11009894	1					
ANR	11009921	Identifier	space		11009894	0					
ANR	11009922	Argument	1		11009894	2					
ANR	11009923	PrimaryExpression	1		11009894	0					
ANR	11009924	Argument	& namesarray		11009894	3					
ANR	11009925	UnaryOperationExpression	& namesarray		11009894	0					
ANR	11009926	UnaryOperator	&		11009894	0					
ANR	11009927	Identifier	namesarray		11009894	1					
ANR	11009928	IfStatement	if ( code < 0 )		11009894	3					
ANR	11009929	Condition	code < 0	4101:8:131237:131244	11009894	0	True				
ANR	11009930	RelationalExpression	code < 0		11009894	0		<			
ANR	11009931	Identifier	code		11009894	0					
ANR	11009932	PrimaryExpression	0		11009894	1					
ANR	11009933	ReturnStatement	return code ;	4102:8:131255:131266	11009894	1	True				
ANR	11009934	Identifier	code		11009894	0					
ANR	11009935	ExpressionStatement	limit = r_size ( & namesarray ) * 2	4104:4:131273:131304	11009894	4	True				
ANR	11009936	AssignmentExpression	limit = r_size ( & namesarray ) * 2		11009894	0		=			
ANR	11009937	Identifier	limit		11009894	0					
ANR	11009938	MultiplicativeExpression	r_size ( & namesarray ) * 2		11009894	1		*			
ANR	11009939	CallExpression	r_size ( & namesarray )		11009894	0					
ANR	11009940	Callee	r_size		11009894	0					
ANR	11009941	Identifier	r_size		11009894	0					
ANR	11009942	ArgumentList	& namesarray		11009894	1					
ANR	11009943	Argument	& namesarray		11009894	0					
ANR	11009944	UnaryOperationExpression	& namesarray		11009894	0					
ANR	11009945	UnaryOperator	&		11009894	0					
ANR	11009946	Identifier	namesarray		11009894	1					
ANR	11009947	PrimaryExpression	2		11009894	1					
ANR	11009948	ForStatement	for ( i = 0 ; i < limit ; i += 2 )		11009894	5					
ANR	11009949	ForInit	i = 0 ;	4105:9:131315:131320	11009894	0	True				
ANR	11009950	AssignmentExpression	i = 0		11009894	0		=			
ANR	11009951	Identifier	i		11009894	0					
ANR	11009952	PrimaryExpression	0		11009894	1					
ANR	11009953	Condition	i < limit	4105:15:131321:131329	11009894	1	True				
ANR	11009954	RelationalExpression	i < limit		11009894	0		<			
ANR	11009955	Identifier	i		11009894	0					
ANR	11009956	Identifier	limit		11009894	1					
ANR	11009957	AssignmentExpression	i += 2	4105:25:131331:131334	11009894	2	True	+=			
ANR	11009958	Identifier	i		11009894	0					
ANR	11009959	PrimaryExpression	2		11009894	1					
ANR	11009960	CompoundStatement		10:31:208:208	11009894	3					
ANR	11009961	ExpressionStatement	ptr [ i ] = 0	4106:8:131347:131357	11009894	0	True				
ANR	11009962	AssignmentExpression	ptr [ i ] = 0		11009894	0		=			
ANR	11009963	ArrayIndexing	ptr [ i ]		11009894	0					
ANR	11009964	Identifier	ptr		11009894	0					
ANR	11009965	Identifier	i		11009894	1					
ANR	11009966	PrimaryExpression	0		11009894	1					
ANR	11009967	ExpressionStatement	ptr [ i + 1 ] = 1	4107:8:131367:131379	11009894	1	True				
ANR	11009968	AssignmentExpression	ptr [ i + 1 ] = 1		11009894	0		=			
ANR	11009969	ArrayIndexing	ptr [ i + 1 ]		11009894	0					
ANR	11009970	Identifier	ptr		11009894	0					
ANR	11009971	AdditiveExpression	i + 1		11009894	1		+			
ANR	11009972	Identifier	i		11009894	0					
ANR	11009973	PrimaryExpression	1		11009894	1					
ANR	11009974	PrimaryExpression	1		11009894	1					
ANR	11009975	ReturnStatement	return 0 ;	4109:4:131391:131399	11009894	6	True				
ANR	11009976	PrimaryExpression	0		11009894	0					
ANR	11009977	ReturnType	static int		11009894	1					
ANR	11009978	Identifier	devicendomain		11009894	2					
ANR	11009979	ParameterList	"i_ctx_t * i_ctx_p , ref * space , float * ptr"		11009894	3					
ANR	11009980	Parameter	i_ctx_t * i_ctx_p	4095:25:131085:131101	11009894	0	True				
ANR	11009981	ParameterType	i_ctx_t *		11009894	0					
ANR	11009982	Identifier	i_ctx_p		11009894	1					
ANR	11009983	Parameter	ref * space	4095:44:131104:131113	11009894	1	True				
ANR	11009984	ParameterType	ref *		11009894	0					
ANR	11009985	Identifier	space		11009894	1					
ANR	11009986	Parameter	float * ptr	4095:56:131116:131125	11009894	2	True				
ANR	11009987	ParameterType	float *		11009894	0					
ANR	11009988	Identifier	ptr		11009894	1					
ANR	11009989	CFGEntryNode	ENTRY		11009894		True				
ANR	11009990	CFGExitNode	EXIT		11009894		True				
ANR	11009991	Symbol	code		11009894						
ANR	11009992	Symbol	array_get		11009894						
ANR	11009993	Symbol	i		11009894						
ANR	11009994	Symbol	namesarray		11009894						
ANR	11009995	Symbol	space		11009894						
ANR	11009996	Symbol	ptr		11009894						
ANR	11009997	Symbol	* i		11009894						
ANR	11009998	Symbol	i_ctx_p		11009894						
ANR	11009999	Symbol	r_size		11009894						
ANR	11010000	Symbol	limit		11009894						
ANR	11010001	Symbol	* ptr		11009894						
ANR	11010002	Symbol	imemory		11009894						
ANR	11010003	Symbol	& namesarray		11009894						
ANR	11010004	Function	devicenrange	4111:0:131403:131938							
ANR	11010005	FunctionDef	"devicenrange (i_ctx_t * i_ctx_p , ref * space , float * ptr)"		11010004	0					
ANR	11010006	CompoundStatement		4112:0:131470:131938	11010004	0					
ANR	11010007	IdentifierDeclStatement	"int i , limit , code ;"	4113:4:131476:131494	11010004	0	True				
ANR	11010008	IdentifierDecl	i		11010004	0					
ANR	11010009	IdentifierDeclType	int		11010004	0					
ANR	11010010	Identifier	i		11010004	1					
ANR	11010011	IdentifierDecl	limit		11010004	1					
ANR	11010012	IdentifierDeclType	int		11010004	0					
ANR	11010013	Identifier	limit		11010004	1					
ANR	11010014	IdentifierDecl	code		11010004	2					
ANR	11010015	IdentifierDeclType	int		11010004	0					
ANR	11010016	Identifier	code		11010004	1					
ANR	11010017	IdentifierDeclStatement	PS_colour_space_t * cspace ;	4114:4:131500:131525	11010004	1	True				
ANR	11010018	IdentifierDecl	* cspace		11010004	0					
ANR	11010019	IdentifierDeclType	PS_colour_space_t *		11010004	0					
ANR	11010020	Identifier	cspace		11010004	1					
ANR	11010021	IdentifierDeclStatement	ref altspace ;	4116:4:131532:131544	11010004	2	True				
ANR	11010022	IdentifierDecl	altspace		11010004	0					
ANR	11010023	IdentifierDeclType	ref		11010004	0					
ANR	11010024	Identifier	altspace		11010004	1					
ANR	11010025	ExpressionStatement	"code = array_get ( imemory , space , 1 , & altspace )"	4118:4:131551:131597	11010004	3	True				
ANR	11010026	AssignmentExpression	"code = array_get ( imemory , space , 1 , & altspace )"		11010004	0		=			
ANR	11010027	Identifier	code		11010004	0					
ANR	11010028	CallExpression	"array_get ( imemory , space , 1 , & altspace )"		11010004	1					
ANR	11010029	Callee	array_get		11010004	0					
ANR	11010030	Identifier	array_get		11010004	0					
ANR	11010031	ArgumentList	imemory		11010004	1					
ANR	11010032	Argument	imemory		11010004	0					
ANR	11010033	Identifier	imemory		11010004	0					
ANR	11010034	Argument	space		11010004	1					
ANR	11010035	Identifier	space		11010004	0					
ANR	11010036	Argument	1		11010004	2					
ANR	11010037	PrimaryExpression	1		11010004	0					
ANR	11010038	Argument	& altspace		11010004	3					
ANR	11010039	UnaryOperationExpression	& altspace		11010004	0					
ANR	11010040	UnaryOperator	&		11010004	0					
ANR	11010041	Identifier	altspace		11010004	1					
ANR	11010042	IfStatement	if ( code < 0 )		11010004	4					
ANR	11010043	Condition	code < 0	4119:8:131607:131614	11010004	0	True				
ANR	11010044	RelationalExpression	code < 0		11010004	0		<			
ANR	11010045	Identifier	code		11010004	0					
ANR	11010046	PrimaryExpression	0		11010004	1					
ANR	11010047	ReturnStatement	return code ;	4120:8:131625:131636	11010004	1	True				
ANR	11010048	Identifier	code		11010004	0					
ANR	11010049	ExpressionStatement	"code = get_space_object ( i_ctx_p , & altspace , & cspace )"	4122:4:131643:131695	11010004	5	True				
ANR	11010050	AssignmentExpression	"code = get_space_object ( i_ctx_p , & altspace , & cspace )"		11010004	0		=			
ANR	11010051	Identifier	code		11010004	0					
ANR	11010052	CallExpression	"get_space_object ( i_ctx_p , & altspace , & cspace )"		11010004	1					
ANR	11010053	Callee	get_space_object		11010004	0					
ANR	11010054	Identifier	get_space_object		11010004	0					
ANR	11010055	ArgumentList	i_ctx_p		11010004	1					
ANR	11010056	Argument	i_ctx_p		11010004	0					
ANR	11010057	Identifier	i_ctx_p		11010004	0					
ANR	11010058	Argument	& altspace		11010004	1					
ANR	11010059	UnaryOperationExpression	& altspace		11010004	0					
ANR	11010060	UnaryOperator	&		11010004	0					
ANR	11010061	Identifier	altspace		11010004	1					
ANR	11010062	Argument	& cspace		11010004	2					
ANR	11010063	UnaryOperationExpression	& cspace		11010004	0					
ANR	11010064	UnaryOperator	&		11010004	0					
ANR	11010065	Identifier	cspace		11010004	1					
ANR	11010066	IfStatement	if ( code < 0 )		11010004	6					
ANR	11010067	Condition	code < 0	4123:8:131705:131712	11010004	0	True				
ANR	11010068	RelationalExpression	code < 0		11010004	0		<			
ANR	11010069	Identifier	code		11010004	0					
ANR	11010070	PrimaryExpression	0		11010004	1					
ANR	11010071	ReturnStatement	return code ;	4124:8:131723:131734	11010004	1	True				
ANR	11010072	Identifier	code		11010004	0					
ANR	11010073	ExpressionStatement	"code = cspace -> numcomponents ( i_ctx_p , & altspace , & limit )"	4126:4:131741:131797	11010004	7	True				
ANR	11010074	AssignmentExpression	"code = cspace -> numcomponents ( i_ctx_p , & altspace , & limit )"		11010004	0		=			
ANR	11010075	Identifier	code		11010004	0					
ANR	11010076	CallExpression	"cspace -> numcomponents ( i_ctx_p , & altspace , & limit )"		11010004	1					
ANR	11010077	Callee	cspace -> numcomponents		11010004	0					
ANR	11010078	PtrMemberAccess	cspace -> numcomponents		11010004	0					
ANR	11010079	Identifier	cspace		11010004	0					
ANR	11010080	Identifier	numcomponents		11010004	1					
ANR	11010081	ArgumentList	i_ctx_p		11010004	1					
ANR	11010082	Argument	i_ctx_p		11010004	0					
ANR	11010083	Identifier	i_ctx_p		11010004	0					
ANR	11010084	Argument	& altspace		11010004	1					
ANR	11010085	UnaryOperationExpression	& altspace		11010004	0					
ANR	11010086	UnaryOperator	&		11010004	0					
ANR	11010087	Identifier	altspace		11010004	1					
ANR	11010088	Argument	& limit		11010004	2					
ANR	11010089	UnaryOperationExpression	& limit		11010004	0					
ANR	11010090	UnaryOperator	&		11010004	0					
ANR	11010091	Identifier	limit		11010004	1					
ANR	11010092	IfStatement	if ( code < 0 )		11010004	8					
ANR	11010093	Condition	code < 0	4127:8:131807:131814	11010004	0	True				
ANR	11010094	RelationalExpression	code < 0		11010004	0		<			
ANR	11010095	Identifier	code		11010004	0					
ANR	11010096	PrimaryExpression	0		11010004	1					
ANR	11010097	ReturnStatement	return code ;	4128:8:131825:131836	11010004	1	True				
ANR	11010098	Identifier	code		11010004	0					
ANR	11010099	ForStatement	for ( i = 0 ; i < limit * 2 ; i += 2 )		11010004	9					
ANR	11010100	ForInit	i = 0 ;	4130:9:131848:131853	11010004	0	True				
ANR	11010101	AssignmentExpression	i = 0		11010004	0		=			
ANR	11010102	Identifier	i		11010004	0					
ANR	11010103	PrimaryExpression	0		11010004	1					
ANR	11010104	Condition	i < limit * 2	4130:15:131854:131866	11010004	1	True				
ANR	11010105	RelationalExpression	i < limit * 2		11010004	0		<			
ANR	11010106	Identifier	i		11010004	0					
ANR	11010107	MultiplicativeExpression	limit * 2		11010004	1		*			
ANR	11010108	Identifier	limit		11010004	0					
ANR	11010109	PrimaryExpression	2		11010004	1					
ANR	11010110	AssignmentExpression	i += 2	4130:29:131868:131871	11010004	2	True	+=			
ANR	11010111	Identifier	i		11010004	0					
ANR	11010112	PrimaryExpression	2		11010004	1					
ANR	11010113	CompoundStatement		19:35:403:403	11010004	3					
ANR	11010114	ExpressionStatement	ptr [ i ] = 0	4131:8:131884:131894	11010004	0	True				
ANR	11010115	AssignmentExpression	ptr [ i ] = 0		11010004	0		=			
ANR	11010116	ArrayIndexing	ptr [ i ]		11010004	0					
ANR	11010117	Identifier	ptr		11010004	0					
ANR	11010118	Identifier	i		11010004	1					
ANR	11010119	PrimaryExpression	0		11010004	1					
ANR	11010120	ExpressionStatement	ptr [ i + 1 ] = 1	4132:8:131904:131916	11010004	1	True				
ANR	11010121	AssignmentExpression	ptr [ i + 1 ] = 1		11010004	0		=			
ANR	11010122	ArrayIndexing	ptr [ i + 1 ]		11010004	0					
ANR	11010123	Identifier	ptr		11010004	0					
ANR	11010124	AdditiveExpression	i + 1		11010004	1		+			
ANR	11010125	Identifier	i		11010004	0					
ANR	11010126	PrimaryExpression	1		11010004	1					
ANR	11010127	PrimaryExpression	1		11010004	1					
ANR	11010128	ReturnStatement	return 0 ;	4134:4:131928:131936	11010004	10	True				
ANR	11010129	PrimaryExpression	0		11010004	0					
ANR	11010130	ReturnType	static int		11010004	1					
ANR	11010131	Identifier	devicenrange		11010004	2					
ANR	11010132	ParameterList	"i_ctx_t * i_ctx_p , ref * space , float * ptr"		11010004	3					
ANR	11010133	Parameter	i_ctx_t * i_ctx_p	4111:24:131427:131443	11010004	0	True				
ANR	11010134	ParameterType	i_ctx_t *		11010004	0					
ANR	11010135	Identifier	i_ctx_p		11010004	1					
ANR	11010136	Parameter	ref * space	4111:43:131446:131455	11010004	1	True				
ANR	11010137	ParameterType	ref *		11010004	0					
ANR	11010138	Identifier	space		11010004	1					
ANR	11010139	Parameter	float * ptr	4111:55:131458:131467	11010004	2	True				
ANR	11010140	ParameterType	float *		11010004	0					
ANR	11010141	Identifier	ptr		11010004	1					
ANR	11010142	CFGEntryNode	ENTRY		11010004		True				
ANR	11010143	CFGExitNode	EXIT		11010004		True				
ANR	11010144	Symbol	code		11010004						
ANR	11010145	Symbol	array_get		11010004						
ANR	11010146	Symbol	* cspace		11010004						
ANR	11010147	Symbol	i		11010004						
ANR	11010148	Symbol	& limit		11010004						
ANR	11010149	Symbol	get_space_object		11010004						
ANR	11010150	Symbol	space		11010004						
ANR	11010151	Symbol	ptr		11010004						
ANR	11010152	Symbol	& cspace		11010004						
ANR	11010153	Symbol	altspace		11010004						
ANR	11010154	Symbol	* i		11010004						
ANR	11010155	Symbol	& altspace		11010004						
ANR	11010156	Symbol	cspace -> numcomponents		11010004						
ANR	11010157	Symbol	i_ctx_p		11010004						
ANR	11010158	Symbol	limit		11010004						
ANR	11010159	Symbol	* ptr		11010004						
ANR	11010160	Symbol	cspace		11010004						
ANR	11010161	Symbol	imemory		11010004						
ANR	11010162	Function	devicentransform	4136:0:131940:133832							
ANR	11010163	FunctionDef	"devicentransform (i_ctx_t * i_ctx_p , ref * devicenspace , int * usealternate , int * stage , int * stack_depth)"		11010162	0					
ANR	11010164	CompoundStatement		4137:0:132054:133832	11010162	0					
ANR	11010165	IdentifierDeclStatement	gx_device * dev = igs -> device ;	4138:4:132060:132089	11010162	0	True				
ANR	11010166	IdentifierDecl	* dev = igs -> device		11010162	0					
ANR	11010167	IdentifierDeclType	gx_device *		11010162	0					
ANR	11010168	Identifier	dev		11010162	1					
ANR	11010169	AssignmentExpression	* dev = igs -> device		11010162	2		=			
ANR	11010170	Identifier	dev		11010162	0					
ANR	11010171	PtrMemberAccess	igs -> device		11010162	1					
ANR	11010172	Identifier	igs		11010162	0					
ANR	11010173	Identifier	device		11010162	1					
ANR	11010174	IdentifierDeclStatement	"ref narray , sname , proc ;"	4139:4:132095:132118	11010162	1	True				
ANR	11010175	IdentifierDecl	narray		11010162	0					
ANR	11010176	IdentifierDeclType	ref		11010162	0					
ANR	11010177	Identifier	narray		11010162	1					
ANR	11010178	IdentifierDecl	sname		11010162	1					
ANR	11010179	IdentifierDeclType	ref		11010162	0					
ANR	11010180	Identifier	sname		11010162	1					
ANR	11010181	IdentifierDecl	proc		11010162	2					
ANR	11010182	IdentifierDeclType	ref		11010162	0					
ANR	11010183	Identifier	proc		11010162	1					
ANR	11010184	IdentifierDeclStatement	"int i , code , colorant_number ;"	4140:4:132124:132152	11010162	2	True				
ANR	11010185	IdentifierDecl	i		11010162	0					
ANR	11010186	IdentifierDeclType	int		11010162	0					
ANR	11010187	Identifier	i		11010162	1					
ANR	11010188	IdentifierDecl	code		11010162	1					
ANR	11010189	IdentifierDeclType	int		11010162	0					
ANR	11010190	Identifier	code		11010162	1					
ANR	11010191	IdentifierDecl	colorant_number		11010162	2					
ANR	11010192	IdentifierDeclType	int		11010162	0					
ANR	11010193	Identifier	colorant_number		11010162	1					
ANR	11010194	ExpressionStatement	* usealternate = 0	4142:4:132159:132176	11010162	3	True				
ANR	11010195	AssignmentExpression	* usealternate = 0		11010162	0		=			
ANR	11010196	UnaryOperationExpression	* usealternate		11010162	0					
ANR	11010197	UnaryOperator	*		11010162	0					
ANR	11010198	Identifier	usealternate		11010162	1					
ANR	11010199	PrimaryExpression	0		11010162	1					
ANR	11010200	ExpressionStatement	"code = array_get ( imemory , devicenspace , 1 , & narray )"	4143:4:132182:132233	11010162	4	True				
ANR	11010201	AssignmentExpression	"code = array_get ( imemory , devicenspace , 1 , & narray )"		11010162	0		=			
ANR	11010202	Identifier	code		11010162	0					
ANR	11010203	CallExpression	"array_get ( imemory , devicenspace , 1 , & narray )"		11010162	1					
ANR	11010204	Callee	array_get		11010162	0					
ANR	11010205	Identifier	array_get		11010162	0					
ANR	11010206	ArgumentList	imemory		11010162	1					
ANR	11010207	Argument	imemory		11010162	0					
ANR	11010208	Identifier	imemory		11010162	0					
ANR	11010209	Argument	devicenspace		11010162	1					
ANR	11010210	Identifier	devicenspace		11010162	0					
ANR	11010211	Argument	1		11010162	2					
ANR	11010212	PrimaryExpression	1		11010162	0					
ANR	11010213	Argument	& narray		11010162	3					
ANR	11010214	UnaryOperationExpression	& narray		11010162	0					
ANR	11010215	UnaryOperator	&		11010162	0					
ANR	11010216	Identifier	narray		11010162	1					
ANR	11010217	IfStatement	if ( code < 0 )		11010162	5					
ANR	11010218	Condition	code < 0	4144:8:132243:132250	11010162	0	True				
ANR	11010219	RelationalExpression	code < 0		11010162	0		<			
ANR	11010220	Identifier	code		11010162	0					
ANR	11010221	PrimaryExpression	0		11010162	1					
ANR	11010222	ReturnStatement	return code ;	4145:8:132261:132272	11010162	1	True				
ANR	11010223	Identifier	code		11010162	0					
ANR	11010224	IfStatement	if ( ! r_is_array ( & narray ) )		11010162	6					
ANR	11010225	Condition	! r_is_array ( & narray )	4146:8:132282:132301	11010162	0	True				
ANR	11010226	UnaryOperationExpression	! r_is_array ( & narray )		11010162	0					
ANR	11010227	UnaryOperator	!		11010162	0					
ANR	11010228	CallExpression	r_is_array ( & narray )		11010162	1					
ANR	11010229	Callee	r_is_array		11010162	0					
ANR	11010230	Identifier	r_is_array		11010162	0					
ANR	11010231	ArgumentList	& narray		11010162	1					
ANR	11010232	Argument	& narray		11010162	0					
ANR	11010233	UnaryOperationExpression	& narray		11010162	0					
ANR	11010234	UnaryOperator	&		11010162	0					
ANR	11010235	Identifier	narray		11010162	1					
ANR	11010236	ExpressionStatement	return_error ( gs_error_typecheck )	4147:8:132312:132344	11010162	1	True				
ANR	11010237	CallExpression	return_error ( gs_error_typecheck )		11010162	0					
ANR	11010238	Callee	return_error		11010162	0					
ANR	11010239	Identifier	return_error		11010162	0					
ANR	11010240	ArgumentList	gs_error_typecheck		11010162	1					
ANR	11010241	Argument	gs_error_typecheck		11010162	0					
ANR	11010242	Identifier	gs_error_typecheck		11010162	0					
ANR	11010243	ForStatement	for ( i = 0 ; i < r_size ( & narray ) ; i ++ )		11010162	7					
ANR	11010244	ForInit	i = 0 ;	4149:9:132356:132359	11010162	0	True				
ANR	11010245	AssignmentExpression	i = 0		11010162	0		=			
ANR	11010246	Identifier	i		11010162	0					
ANR	11010247	PrimaryExpression	0		11010162	1					
ANR	11010248	Condition	i < r_size ( & narray )	4149:13:132360:132376	11010162	1	True				
ANR	11010249	RelationalExpression	i < r_size ( & narray )		11010162	0		<			
ANR	11010250	Identifier	i		11010162	0					
ANR	11010251	CallExpression	r_size ( & narray )		11010162	1					
ANR	11010252	Callee	r_size		11010162	0					
ANR	11010253	Identifier	r_size		11010162	0					
ANR	11010254	ArgumentList	& narray		11010162	1					
ANR	11010255	Argument	& narray		11010162	0					
ANR	11010256	UnaryOperationExpression	& narray		11010162	0					
ANR	11010257	UnaryOperator	&		11010162	0					
ANR	11010258	Identifier	narray		11010162	1					
ANR	11010259	PostIncDecOperationExpression	i ++	4149:31:132378:132380	11010162	2	True				
ANR	11010260	Identifier	i		11010162	0					
ANR	11010261	IncDec	++		11010162	1					
ANR	11010262	CompoundStatement		13:36:328:328	11010162	3					
ANR	11010263	ExpressionStatement	"code = array_get ( imemory , & narray , i , & sname )"	4150:8:132393:132438	11010162	0	True				
ANR	11010264	AssignmentExpression	"code = array_get ( imemory , & narray , i , & sname )"		11010162	0		=			
ANR	11010265	Identifier	code		11010162	0					
ANR	11010266	CallExpression	"array_get ( imemory , & narray , i , & sname )"		11010162	1					
ANR	11010267	Callee	array_get		11010162	0					
ANR	11010268	Identifier	array_get		11010162	0					
ANR	11010269	ArgumentList	imemory		11010162	1					
ANR	11010270	Argument	imemory		11010162	0					
ANR	11010271	Identifier	imemory		11010162	0					
ANR	11010272	Argument	& narray		11010162	1					
ANR	11010273	UnaryOperationExpression	& narray		11010162	0					
ANR	11010274	UnaryOperator	&		11010162	0					
ANR	11010275	Identifier	narray		11010162	1					
ANR	11010276	Argument	i		11010162	2					
ANR	11010277	Identifier	i		11010162	0					
ANR	11010278	Argument	& sname		11010162	3					
ANR	11010279	UnaryOperationExpression	& sname		11010162	0					
ANR	11010280	UnaryOperator	&		11010162	0					
ANR	11010281	Identifier	sname		11010162	1					
ANR	11010282	IfStatement	if ( code < 0 )		11010162	1					
ANR	11010283	Condition	code < 0	4151:12:132452:132459	11010162	0	True				
ANR	11010284	RelationalExpression	code < 0		11010162	0		<			
ANR	11010285	Identifier	code		11010162	0					
ANR	11010286	PrimaryExpression	0		11010162	1					
ANR	11010287	ReturnStatement	return code ;	4152:12:132474:132485	11010162	1	True				
ANR	11010288	Identifier	code		11010162	0					
ANR	11010289	IfStatement	"if ( r_has_type ( & sname , t_name ) )"		11010162	2					
ANR	11010290	Condition	"r_has_type ( & sname , t_name )"	4153:12:132499:132524	11010162	0	True				
ANR	11010291	CallExpression	"r_has_type ( & sname , t_name )"		11010162	0					
ANR	11010292	Callee	r_has_type		11010162	0					
ANR	11010293	Identifier	r_has_type		11010162	0					
ANR	11010294	ArgumentList	& sname		11010162	1					
ANR	11010295	Argument	& sname		11010162	0					
ANR	11010296	UnaryOperationExpression	& sname		11010162	0					
ANR	11010297	UnaryOperator	&		11010162	0					
ANR	11010298	Identifier	sname		11010162	1					
ANR	11010299	Argument	t_name		11010162	1					
ANR	11010300	Identifier	t_name		11010162	0					
ANR	11010301	CompoundStatement		17:40:472:472	11010162	1					
ANR	11010302	ExpressionStatement	"name_string_ref ( imemory , & sname , & sname )"	4154:12:132541:132581	11010162	0	True				
ANR	11010303	CallExpression	"name_string_ref ( imemory , & sname , & sname )"		11010162	0					
ANR	11010304	Callee	name_string_ref		11010162	0					
ANR	11010305	Identifier	name_string_ref		11010162	0					
ANR	11010306	ArgumentList	imemory		11010162	1					
ANR	11010307	Argument	imemory		11010162	0					
ANR	11010308	Identifier	imemory		11010162	0					
ANR	11010309	Argument	& sname		11010162	1					
ANR	11010310	UnaryOperationExpression	& sname		11010162	0					
ANR	11010311	UnaryOperator	&		11010162	0					
ANR	11010312	Identifier	sname		11010162	1					
ANR	11010313	Argument	& sname		11010162	2					
ANR	11010314	UnaryOperationExpression	& sname		11010162	0					
ANR	11010315	UnaryOperator	&		11010162	0					
ANR	11010316	Identifier	sname		11010162	1					
ANR	11010317	IfStatement	"if ( r_size ( & sname ) == 3 && strncmp ( ""All"" , ( const char * ) sname . value . bytes , r_size ( & sname ) ) == 0 )"		11010162	3					
ANR	11010318	Condition	"r_size ( & sname ) == 3 && strncmp ( ""All"" , ( const char * ) sname . value . bytes , r_size ( & sname ) ) == 0"	4158:12:132681:132783	11010162	0	True				
ANR	11010319	AndExpression	"r_size ( & sname ) == 3 && strncmp ( ""All"" , ( const char * ) sname . value . bytes , r_size ( & sname ) ) == 0"		11010162	0		&&			
ANR	11010320	EqualityExpression	r_size ( & sname ) == 3		11010162	0		==			
ANR	11010321	CallExpression	r_size ( & sname )		11010162	0					
ANR	11010322	Callee	r_size		11010162	0					
ANR	11010323	Identifier	r_size		11010162	0					
ANR	11010324	ArgumentList	& sname		11010162	1					
ANR	11010325	Argument	& sname		11010162	0					
ANR	11010326	UnaryOperationExpression	& sname		11010162	0					
ANR	11010327	UnaryOperator	&		11010162	0					
ANR	11010328	Identifier	sname		11010162	1					
ANR	11010329	PrimaryExpression	3		11010162	1					
ANR	11010330	EqualityExpression	"strncmp ( ""All"" , ( const char * ) sname . value . bytes , r_size ( & sname ) ) == 0"		11010162	1		==			
ANR	11010331	CallExpression	"strncmp ( ""All"" , ( const char * ) sname . value . bytes , r_size ( & sname ) )"		11010162	0					
ANR	11010332	Callee	strncmp		11010162	0					
ANR	11010333	Identifier	strncmp		11010162	0					
ANR	11010334	ArgumentList	"""All"""		11010162	1					
ANR	11010335	Argument	"""All"""		11010162	0					
ANR	11010336	PrimaryExpression	"""All"""		11010162	0					
ANR	11010337	Argument	( const char * ) sname . value . bytes		11010162	1					
ANR	11010338	CastExpression	( const char * ) sname . value . bytes		11010162	0					
ANR	11010339	CastTarget	const char *		11010162	0					
ANR	11010340	MemberAccess	sname . value . bytes		11010162	1					
ANR	11010341	MemberAccess	sname . value		11010162	0					
ANR	11010342	Identifier	sname		11010162	0					
ANR	11010343	Identifier	value		11010162	1					
ANR	11010344	Identifier	bytes		11010162	1					
ANR	11010345	Argument	r_size ( & sname )		11010162	2					
ANR	11010346	CallExpression	r_size ( & sname )		11010162	0					
ANR	11010347	Callee	r_size		11010162	0					
ANR	11010348	Identifier	r_size		11010162	0					
ANR	11010349	ArgumentList	& sname		11010162	1					
ANR	11010350	Argument	& sname		11010162	0					
ANR	11010351	UnaryOperationExpression	& sname		11010162	0					
ANR	11010352	UnaryOperator	&		11010162	0					
ANR	11010353	Identifier	sname		11010162	1					
ANR	11010354	PrimaryExpression	0		11010162	1					
ANR	11010355	ContinueStatement	continue ;	4160:12:132798:132806	11010162	1	True				
ANR	11010356	IfStatement	"if ( r_size ( & sname ) == 4 && strncmp ( ""None"" , ( const char * ) sname . value . bytes , r_size ( & sname ) ) == 0 )"		11010162	4					
ANR	11010357	Condition	"r_size ( & sname ) == 4 && strncmp ( ""None"" , ( const char * ) sname . value . bytes , r_size ( & sname ) ) == 0"	4161:12:132820:132923	11010162	0	True				
ANR	11010358	AndExpression	"r_size ( & sname ) == 4 && strncmp ( ""None"" , ( const char * ) sname . value . bytes , r_size ( & sname ) ) == 0"		11010162	0		&&			
ANR	11010359	EqualityExpression	r_size ( & sname ) == 4		11010162	0		==			
ANR	11010360	CallExpression	r_size ( & sname )		11010162	0					
ANR	11010361	Callee	r_size		11010162	0					
ANR	11010362	Identifier	r_size		11010162	0					
ANR	11010363	ArgumentList	& sname		11010162	1					
ANR	11010364	Argument	& sname		11010162	0					
ANR	11010365	UnaryOperationExpression	& sname		11010162	0					
ANR	11010366	UnaryOperator	&		11010162	0					
ANR	11010367	Identifier	sname		11010162	1					
ANR	11010368	PrimaryExpression	4		11010162	1					
ANR	11010369	EqualityExpression	"strncmp ( ""None"" , ( const char * ) sname . value . bytes , r_size ( & sname ) ) == 0"		11010162	1		==			
ANR	11010370	CallExpression	"strncmp ( ""None"" , ( const char * ) sname . value . bytes , r_size ( & sname ) )"		11010162	0					
ANR	11010371	Callee	strncmp		11010162	0					
ANR	11010372	Identifier	strncmp		11010162	0					
ANR	11010373	ArgumentList	"""None"""		11010162	1					
ANR	11010374	Argument	"""None"""		11010162	0					
ANR	11010375	PrimaryExpression	"""None"""		11010162	0					
ANR	11010376	Argument	( const char * ) sname . value . bytes		11010162	1					
ANR	11010377	CastExpression	( const char * ) sname . value . bytes		11010162	0					
ANR	11010378	CastTarget	const char *		11010162	0					
ANR	11010379	MemberAccess	sname . value . bytes		11010162	1					
ANR	11010380	MemberAccess	sname . value		11010162	0					
ANR	11010381	Identifier	sname		11010162	0					
ANR	11010382	Identifier	value		11010162	1					
ANR	11010383	Identifier	bytes		11010162	1					
ANR	11010384	Argument	r_size ( & sname )		11010162	2					
ANR	11010385	CallExpression	r_size ( & sname )		11010162	0					
ANR	11010386	Callee	r_size		11010162	0					
ANR	11010387	Identifier	r_size		11010162	0					
ANR	11010388	ArgumentList	& sname		11010162	1					
ANR	11010389	Argument	& sname		11010162	0					
ANR	11010390	UnaryOperationExpression	& sname		11010162	0					
ANR	11010391	UnaryOperator	&		11010162	0					
ANR	11010392	Identifier	sname		11010162	1					
ANR	11010393	PrimaryExpression	0		11010162	1					
ANR	11010394	ContinueStatement	continue ;	4163:12:132938:132946	11010162	1	True				
ANR	11010395	ExpressionStatement	"colorant_number = ( * dev_proc ( dev , get_color_comp_index ) ) ( dev , ( const char * ) sname . value . bytes , r_size ( & sname ) , SEPARATION_NAME )"	4170:8:133224:133368	11010162	5	True				
ANR	11010396	AssignmentExpression	"colorant_number = ( * dev_proc ( dev , get_color_comp_index ) ) ( dev , ( const char * ) sname . value . bytes , r_size ( & sname ) , SEPARATION_NAME )"		11010162	0		=			
ANR	11010397	Identifier	colorant_number		11010162	0					
ANR	11010398	CallExpression	"( * dev_proc ( dev , get_color_comp_index ) ) ( dev , ( const char * ) sname . value . bytes , r_size ( & sname ) , SEPARATION_NAME )"		11010162	1					
ANR	11010399	Callee	"* dev_proc ( dev , get_color_comp_index )"		11010162	0					
ANR	11010400	UnaryOperationExpression	"* dev_proc ( dev , get_color_comp_index )"		11010162	0					
ANR	11010401	UnaryOperator	*		11010162	0					
ANR	11010402	CallExpression	"dev_proc ( dev , get_color_comp_index )"		11010162	1					
ANR	11010403	Callee	dev_proc		11010162	0					
ANR	11010404	Identifier	dev_proc		11010162	0					
ANR	11010405	ArgumentList	dev		11010162	1					
ANR	11010406	Argument	dev		11010162	0					
ANR	11010407	Identifier	dev		11010162	0					
ANR	11010408	Argument	get_color_comp_index		11010162	1					
ANR	11010409	Identifier	get_color_comp_index		11010162	0					
ANR	11010410	ArgumentList	dev		11010162	1					
ANR	11010411	Argument	dev		11010162	0					
ANR	11010412	Identifier	dev		11010162	0					
ANR	11010413	Argument	( const char * ) sname . value . bytes		11010162	1					
ANR	11010414	CastExpression	( const char * ) sname . value . bytes		11010162	0					
ANR	11010415	CastTarget	const char *		11010162	0					
ANR	11010416	MemberAccess	sname . value . bytes		11010162	1					
ANR	11010417	MemberAccess	sname . value		11010162	0					
ANR	11010418	Identifier	sname		11010162	0					
ANR	11010419	Identifier	value		11010162	1					
ANR	11010420	Identifier	bytes		11010162	1					
ANR	11010421	Argument	r_size ( & sname )		11010162	2					
ANR	11010422	CallExpression	r_size ( & sname )		11010162	0					
ANR	11010423	Callee	r_size		11010162	0					
ANR	11010424	Identifier	r_size		11010162	0					
ANR	11010425	ArgumentList	& sname		11010162	1					
ANR	11010426	Argument	& sname		11010162	0					
ANR	11010427	UnaryOperationExpression	& sname		11010162	0					
ANR	11010428	UnaryOperator	&		11010162	0					
ANR	11010429	Identifier	sname		11010162	1					
ANR	11010430	Argument	SEPARATION_NAME		11010162	3					
ANR	11010431	Identifier	SEPARATION_NAME		11010162	0					
ANR	11010432	IfStatement	if ( colorant_number < 0 )		11010162	6					
ANR	11010433	Condition	colorant_number < 0	4172:12:133382:133400	11010162	0	True				
ANR	11010434	RelationalExpression	colorant_number < 0		11010162	0		<			
ANR	11010435	Identifier	colorant_number		11010162	0					
ANR	11010436	PrimaryExpression	0		11010162	1					
ANR	11010437	CompoundStatement		36:33:1348:1348	11010162	1					
ANR	11010438	ExpressionStatement	* usealternate = 1	4173:12:133451:133468	11010162	0	True				
ANR	11010439	AssignmentExpression	* usealternate = 1		11010162	0		=			
ANR	11010440	UnaryOperationExpression	* usealternate		11010162	0					
ANR	11010441	UnaryOperator	*		11010162	0					
ANR	11010442	Identifier	usealternate		11010162	1					
ANR	11010443	PrimaryExpression	1		11010162	1					
ANR	11010444	BreakStatement	break ;	4174:12:133482:133487	11010162	1	True				
ANR	11010445	IfStatement	if ( * usealternate && * stage == 0 )		11010162	8					
ANR	11010446	Condition	* usealternate && * stage == 0	4177:8:133513:133540	11010162	0	True				
ANR	11010447	AndExpression	* usealternate && * stage == 0		11010162	0		&&			
ANR	11010448	UnaryOperationExpression	* usealternate		11010162	0					
ANR	11010449	UnaryOperator	*		11010162	0					
ANR	11010450	Identifier	usealternate		11010162	1					
ANR	11010451	EqualityExpression	* stage == 0		11010162	1		==			
ANR	11010452	UnaryOperationExpression	* stage		11010162	0					
ANR	11010453	UnaryOperator	*		11010162	0					
ANR	11010454	Identifier	stage		11010162	1					
ANR	11010455	PrimaryExpression	0		11010162	1					
ANR	11010456	CompoundStatement		41:38:1488:1488	11010162	1					
ANR	11010457	ExpressionStatement	( * stage ) ++	4178:8:133553:133563	11010162	0	True				
ANR	11010458	PostIncDecOperationExpression	( * stage ) ++		11010162	0					
ANR	11010459	UnaryOperationExpression	* stage		11010162	0					
ANR	11010460	UnaryOperator	*		11010162	0					
ANR	11010461	Identifier	stage		11010162	1					
ANR	11010462	IncDec	++		11010162	1					
ANR	11010463	ExpressionStatement	esp ++	4179:8:133573:133578	11010162	1	True				
ANR	11010464	PostIncDecOperationExpression	esp ++		11010162	0					
ANR	11010465	Identifier	esp		11010162	0					
ANR	11010466	IncDec	++		11010162	1					
ANR	11010467	ExpressionStatement	"code = array_get ( imemory , devicenspace , 3 , & proc )"	4180:8:133588:133637	11010162	2	True				
ANR	11010468	AssignmentExpression	"code = array_get ( imemory , devicenspace , 3 , & proc )"		11010162	0		=			
ANR	11010469	Identifier	code		11010162	0					
ANR	11010470	CallExpression	"array_get ( imemory , devicenspace , 3 , & proc )"		11010162	1					
ANR	11010471	Callee	array_get		11010162	0					
ANR	11010472	Identifier	array_get		11010162	0					
ANR	11010473	ArgumentList	imemory		11010162	1					
ANR	11010474	Argument	imemory		11010162	0					
ANR	11010475	Identifier	imemory		11010162	0					
ANR	11010476	Argument	devicenspace		11010162	1					
ANR	11010477	Identifier	devicenspace		11010162	0					
ANR	11010478	Argument	3		11010162	2					
ANR	11010479	PrimaryExpression	3		11010162	0					
ANR	11010480	Argument	& proc		11010162	3					
ANR	11010481	UnaryOperationExpression	& proc		11010162	0					
ANR	11010482	UnaryOperator	&		11010162	0					
ANR	11010483	Identifier	proc		11010162	1					
ANR	11010484	IfStatement	if ( code < 0 )		11010162	3					
ANR	11010485	Condition	code < 0	4181:12:133651:133658	11010162	0	True				
ANR	11010486	RelationalExpression	code < 0		11010162	0		<			
ANR	11010487	Identifier	code		11010162	0					
ANR	11010488	PrimaryExpression	0		11010162	1					
ANR	11010489	ReturnStatement	return code ;	4182:12:133673:133684	11010162	1	True				
ANR	11010490	Identifier	code		11010162	0					
ANR	11010491	ExpressionStatement	* esp = proc	4183:8:133694:133705	11010162	4	True				
ANR	11010492	AssignmentExpression	* esp = proc		11010162	0		=			
ANR	11010493	UnaryOperationExpression	* esp		11010162	0					
ANR	11010494	UnaryOperator	*		11010162	0					
ANR	11010495	Identifier	esp		11010162	1					
ANR	11010496	Identifier	proc		11010162	1					
ANR	11010497	ReturnStatement	return o_push_estack ;	4184:8:133715:133735	11010162	5	True				
ANR	11010498	Identifier	o_push_estack		11010162	0					
ANR	11010499	IfStatement	if ( * stage == 1 )		11010162	9					
ANR	11010500	Condition	* stage == 1	4187:8:133752:133762	11010162	0	True				
ANR	11010501	EqualityExpression	* stage == 1		11010162	0		==			
ANR	11010502	UnaryOperationExpression	* stage		11010162	0					
ANR	11010503	UnaryOperator	*		11010162	0					
ANR	11010504	Identifier	stage		11010162	1					
ANR	11010505	PrimaryExpression	1		11010162	1					
ANR	11010506	CompoundStatement		51:20:1709:1709	11010162	1					
ANR	11010507	ExpressionStatement	* stack_depth = 0	4188:8:133774:133790	11010162	0	True				
ANR	11010508	AssignmentExpression	* stack_depth = 0		11010162	0		=			
ANR	11010509	UnaryOperationExpression	* stack_depth		11010162	0					
ANR	11010510	UnaryOperator	*		11010162	0					
ANR	11010511	Identifier	stack_depth		11010162	1					
ANR	11010512	PrimaryExpression	0		11010162	1					
ANR	11010513	ExpressionStatement	* stage = 0	4189:8:133800:133810	11010162	1	True				
ANR	11010514	AssignmentExpression	* stage = 0		11010162	0		=			
ANR	11010515	UnaryOperationExpression	* stage		11010162	0					
ANR	11010516	UnaryOperator	*		11010162	0					
ANR	11010517	Identifier	stage		11010162	1					
ANR	11010518	PrimaryExpression	0		11010162	1					
ANR	11010519	ReturnStatement	return 0 ;	4191:4:133822:133830	11010162	10	True				
ANR	11010520	PrimaryExpression	0		11010162	0					
ANR	11010521	ReturnType	static int		11010162	1					
ANR	11010522	Identifier	devicentransform		11010162	2					
ANR	11010523	ParameterList	"i_ctx_t * i_ctx_p , ref * devicenspace , int * usealternate , int * stage , int * stack_depth"		11010162	3					
ANR	11010524	Parameter	i_ctx_t * i_ctx_p	4136:28:131968:131983	11010162	0	True				
ANR	11010525	ParameterType	i_ctx_t *		11010162	0					
ANR	11010526	Identifier	i_ctx_p		11010162	1					
ANR	11010527	Parameter	ref * devicenspace	4136:46:131986:132002	11010162	1	True				
ANR	11010528	ParameterType	ref *		11010162	0					
ANR	11010529	Identifier	devicenspace		11010162	1					
ANR	11010530	Parameter	int * usealternate	4136:65:132005:132021	11010162	2	True				
ANR	11010531	ParameterType	int *		11010162	0					
ANR	11010532	Identifier	usealternate		11010162	1					
ANR	11010533	Parameter	int * stage	4136:84:132024:132033	11010162	3	True				
ANR	11010534	ParameterType	int *		11010162	0					
ANR	11010535	Identifier	stage		11010162	1					
ANR	11010536	Parameter	int * stack_depth	4136:96:132036:132051	11010162	4	True				
ANR	11010537	ParameterType	int *		11010162	0					
ANR	11010538	Identifier	stack_depth		11010162	1					
ANR	11010539	CFGEntryNode	ENTRY		11010162		True				
ANR	11010540	CFGExitNode	EXIT		11010162		True				
ANR	11010541	Symbol	* igs		11010162						
ANR	11010542	Symbol	stack_depth		11010162						
ANR	11010543	Symbol	code		11010162						
ANR	11010544	Symbol	esp		11010162						
ANR	11010545	Symbol	* dev_proc		11010162						
ANR	11010546	Symbol	& sname		11010162						
ANR	11010547	Symbol	& narray		11010162						
ANR	11010548	Symbol	strncmp		11010162						
ANR	11010549	Symbol	gs_error_typecheck		11010162						
ANR	11010550	Symbol	r_has_type		11010162						
ANR	11010551	Symbol	* esp		11010162						
ANR	11010552	Symbol	dev		11010162						
ANR	11010553	Symbol	igs		11010162						
ANR	11010554	Symbol	t_name		11010162						
ANR	11010555	Symbol	dev_proc		11010162						
ANR	11010556	Symbol	r_size		11010162						
ANR	11010557	Symbol	* stack_depth		11010162						
ANR	11010558	Symbol	imemory		11010162						
ANR	11010559	Symbol	devicenspace		11010162						
ANR	11010560	Symbol	& proc		11010162						
ANR	11010561	Symbol	o_push_estack		11010162						
ANR	11010562	Symbol	proc		11010162						
ANR	11010563	Symbol	get_color_comp_index		11010162						
ANR	11010564	Symbol	* stage		11010162						
ANR	11010565	Symbol	array_get		11010162						
ANR	11010566	Symbol	sname . value . bytes		11010162						
ANR	11010567	Symbol	i		11010162						
ANR	11010568	Symbol	usealternate		11010162						
ANR	11010569	Symbol	narray		11010162						
ANR	11010570	Symbol	SEPARATION_NAME		11010162						
ANR	11010571	Symbol	colorant_number		11010162						
ANR	11010572	Symbol	stage		11010162						
ANR	11010573	Symbol	* usealternate		11010162						
ANR	11010574	Symbol	sname . value		11010162						
ANR	11010575	Symbol	i_ctx_p		11010162						
ANR	11010576	Symbol	sname		11010162						
ANR	11010577	Symbol	"* dev_proc ( dev , get_color_comp_index )"		11010162						
ANR	11010578	Symbol	r_is_array		11010162						
ANR	11010579	Symbol	igs -> device		11010162						
ANR	11010580	Function	devicenbasecolor	4193:0:133834:134956							
ANR	11010581	FunctionDef	"devicenbasecolor (i_ctx_t * i_ctx_p , ref * space , int base , int * stage , int * cont , int * stack_depth)"		11010580	0					
ANR	11010582	CompoundStatement		4194:0:133944:134956	11010580	0					
ANR	11010583	IdentifierDeclStatement	os_ptr op = osp ;	4195:4:133950:133966	11010580	0	True				
ANR	11010584	IdentifierDecl	op = osp		11010580	0					
ANR	11010585	IdentifierDeclType	os_ptr		11010580	0					
ANR	11010586	Identifier	op		11010580	1					
ANR	11010587	AssignmentExpression	op = osp		11010580	2		=			
ANR	11010588	Identifier	osp		11010580	0					
ANR	11010589	Identifier	osp		11010580	1					
ANR	11010590	IdentifierDeclStatement	"int code , use , n_comp ;"	4196:4:134005:134026	11010580	1	True				
ANR	11010591	IdentifierDecl	code		11010580	0					
ANR	11010592	IdentifierDeclType	int		11010580	0					
ANR	11010593	Identifier	code		11010580	1					
ANR	11010594	IdentifierDecl	use		11010580	1					
ANR	11010595	IdentifierDeclType	int		11010580	0					
ANR	11010596	Identifier	use		11010580	1					
ANR	11010597	IdentifierDecl	n_comp		11010580	2					
ANR	11010598	IdentifierDeclType	int		11010580	0					
ANR	11010599	Identifier	n_comp		11010580	1					
ANR	11010600	IdentifierDeclStatement	ref narray ;	4197:4:134032:134042	11010580	2	True				
ANR	11010601	IdentifierDecl	narray		11010580	0					
ANR	11010602	IdentifierDeclType	ref		11010580	0					
ANR	11010603	Identifier	narray		11010580	1					
ANR	11010604	ExpressionStatement	"code = devicentransform ( i_ctx_p , space , & use , stage , stack_depth )"	4199:4:134049:134114	11010580	3	True				
ANR	11010605	AssignmentExpression	"code = devicentransform ( i_ctx_p , space , & use , stage , stack_depth )"		11010580	0		=			
ANR	11010606	Identifier	code		11010580	0					
ANR	11010607	CallExpression	"devicentransform ( i_ctx_p , space , & use , stage , stack_depth )"		11010580	1					
ANR	11010608	Callee	devicentransform		11010580	0					
ANR	11010609	Identifier	devicentransform		11010580	0					
ANR	11010610	ArgumentList	i_ctx_p		11010580	1					
ANR	11010611	Argument	i_ctx_p		11010580	0					
ANR	11010612	Identifier	i_ctx_p		11010580	0					
ANR	11010613	Argument	space		11010580	1					
ANR	11010614	Identifier	space		11010580	0					
ANR	11010615	Argument	& use		11010580	2					
ANR	11010616	UnaryOperationExpression	& use		11010580	0					
ANR	11010617	UnaryOperator	&		11010580	0					
ANR	11010618	Identifier	use		11010580	1					
ANR	11010619	Argument	stage		11010580	3					
ANR	11010620	Identifier	stage		11010580	0					
ANR	11010621	Argument	stack_depth		11010580	4					
ANR	11010622	Identifier	stack_depth		11010580	0					
ANR	11010623	IfStatement	if ( code != 0 )		11010580	4					
ANR	11010624	Condition	code != 0	4200:8:134124:134133	11010580	0	True				
ANR	11010625	EqualityExpression	code != 0		11010580	0		!=			
ANR	11010626	Identifier	code		11010580	0					
ANR	11010627	PrimaryExpression	0		11010580	1					
ANR	11010628	ReturnStatement	return code ;	4201:8:134144:134155	11010580	1	True				
ANR	11010629	Identifier	code		11010580	0					
ANR	11010630	IfStatement	if ( ! use )		11010580	5					
ANR	11010631	Condition	! use	4202:8:134165:134168	11010580	0	True				
ANR	11010632	UnaryOperationExpression	! use		11010580	0					
ANR	11010633	UnaryOperator	!		11010580	0					
ANR	11010634	Identifier	use		11010580	1					
ANR	11010635	CompoundStatement		9:14:226:226	11010580	1					
ANR	11010636	ExpressionStatement	* stage = 0	4203:8:134181:134191	11010580	0	True				
ANR	11010637	AssignmentExpression	* stage = 0		11010580	0		=			
ANR	11010638	UnaryOperationExpression	* stage		11010580	0					
ANR	11010639	UnaryOperator	*		11010580	0					
ANR	11010640	Identifier	stage		11010580	1					
ANR	11010641	PrimaryExpression	0		11010580	1					
ANR	11010642	ExpressionStatement	* cont = 0	4204:8:134201:134210	11010580	1	True				
ANR	11010643	AssignmentExpression	* cont = 0		11010580	0		=			
ANR	11010644	UnaryOperationExpression	* cont		11010580	0					
ANR	11010645	UnaryOperator	*		11010580	0					
ANR	11010646	Identifier	cont		11010580	1					
ANR	11010647	PrimaryExpression	0		11010580	1					
ANR	11010648	ExpressionStatement	"code = array_get ( imemory , space , 1 , & narray )"	4205:8:134220:134264	11010580	2	True				
ANR	11010649	AssignmentExpression	"code = array_get ( imemory , space , 1 , & narray )"		11010580	0		=			
ANR	11010650	Identifier	code		11010580	0					
ANR	11010651	CallExpression	"array_get ( imemory , space , 1 , & narray )"		11010580	1					
ANR	11010652	Callee	array_get		11010580	0					
ANR	11010653	Identifier	array_get		11010580	0					
ANR	11010654	ArgumentList	imemory		11010580	1					
ANR	11010655	Argument	imemory		11010580	0					
ANR	11010656	Identifier	imemory		11010580	0					
ANR	11010657	Argument	space		11010580	1					
ANR	11010658	Identifier	space		11010580	0					
ANR	11010659	Argument	1		11010580	2					
ANR	11010660	PrimaryExpression	1		11010580	0					
ANR	11010661	Argument	& narray		11010580	3					
ANR	11010662	UnaryOperationExpression	& narray		11010580	0					
ANR	11010663	UnaryOperator	&		11010580	0					
ANR	11010664	Identifier	narray		11010580	1					
ANR	11010665	IfStatement	if ( code < 0 )		11010580	3					
ANR	11010666	Condition	code < 0	4206:12:134278:134285	11010580	0	True				
ANR	11010667	RelationalExpression	code < 0		11010580	0		<			
ANR	11010668	Identifier	code		11010580	0					
ANR	11010669	PrimaryExpression	0		11010580	1					
ANR	11010670	ReturnStatement	return code ;	4207:12:134300:134311	11010580	1	True				
ANR	11010671	Identifier	code		11010580	0					
ANR	11010672	ExpressionStatement	n_comp = r_size ( & narray )	4208:8:134321:134345	11010580	4	True				
ANR	11010673	AssignmentExpression	n_comp = r_size ( & narray )		11010580	0		=			
ANR	11010674	Identifier	n_comp		11010580	0					
ANR	11010675	CallExpression	r_size ( & narray )		11010580	1					
ANR	11010676	Callee	r_size		11010580	0					
ANR	11010677	Identifier	r_size		11010580	0					
ANR	11010678	ArgumentList	& narray		11010580	1					
ANR	11010679	Argument	& narray		11010580	0					
ANR	11010680	UnaryOperationExpression	& narray		11010580	0					
ANR	11010681	UnaryOperator	&		11010580	0					
ANR	11010682	Identifier	narray		11010580	1					
ANR	11010683	ExpressionStatement	pop ( n_comp )	4209:8:134355:134366	11010580	5	True				
ANR	11010684	CallExpression	pop ( n_comp )		11010580	0					
ANR	11010685	Callee	pop		11010580	0					
ANR	11010686	Identifier	pop		11010580	0					
ANR	11010687	ArgumentList	n_comp		11010580	1					
ANR	11010688	Argument	n_comp		11010580	0					
ANR	11010689	Identifier	n_comp		11010580	0					
ANR	11010690	ExpressionStatement	op = osp	4210:8:134376:134384	11010580	6	True				
ANR	11010691	AssignmentExpression	op = osp		11010580	0		=			
ANR	11010692	Identifier	op		11010580	0					
ANR	11010693	Identifier	osp		11010580	1					
ANR	11010694	SwitchStatement	switch ( base )		11010580	7					
ANR	11010695	Condition	base	4211:15:134401:134404	11010580	0	True				
ANR	11010696	Identifier	base		11010580	0					
ANR	11010697	CompoundStatement		18:21:462:462	11010580	1					
ANR	11010698	Label	case 0 :	4212:8:134417:134423	11010580	0	True				
ANR	11010699	ExpressionStatement	push ( 1 )	4213:12:134437:134444	11010580	1	True				
ANR	11010700	CallExpression	push ( 1 )		11010580	0					
ANR	11010701	Callee	push		11010580	0					
ANR	11010702	Identifier	push		11010580	0					
ANR	11010703	ArgumentList	1		11010580	1					
ANR	11010704	Argument	1		11010580	0					
ANR	11010705	PrimaryExpression	1		11010580	0					
ANR	11010706	ExpressionStatement	"make_real ( op , 0.0 )"	4214:12:134458:134476	11010580	2	True				
ANR	11010707	CallExpression	"make_real ( op , 0.0 )"		11010580	0					
ANR	11010708	Callee	make_real		11010580	0					
ANR	11010709	Identifier	make_real		11010580	0					
ANR	11010710	ArgumentList	op		11010580	1					
ANR	11010711	Argument	op		11010580	0					
ANR	11010712	Identifier	op		11010580	0					
ANR	11010713	Argument	0.0		11010580	1					
ANR	11010714	PrimaryExpression	0.0		11010580	0					
ANR	11010715	BreakStatement	break ;	4215:12:134490:134495	11010580	3	True				
ANR	11010716	Label	case 1 :	4216:8:134505:134511	11010580	4	True				
ANR	11010717	Label	case 2 :	4217:8:134521:134527	11010580	5	True				
ANR	11010718	ExpressionStatement	push ( 3 )	4218:12:134541:134548	11010580	6	True				
ANR	11010719	CallExpression	push ( 3 )		11010580	0					
ANR	11010720	Callee	push		11010580	0					
ANR	11010721	Identifier	push		11010580	0					
ANR	11010722	ArgumentList	3		11010580	1					
ANR	11010723	Argument	3		11010580	0					
ANR	11010724	PrimaryExpression	3		11010580	0					
ANR	11010725	ExpressionStatement	"make_real ( & op [ - 2 ] , 0.0 )"	4219:12:134562:134585	11010580	7	True				
ANR	11010726	CallExpression	"make_real ( & op [ - 2 ] , 0.0 )"		11010580	0					
ANR	11010727	Callee	make_real		11010580	0					
ANR	11010728	Identifier	make_real		11010580	0					
ANR	11010729	ArgumentList	& op [ - 2 ]		11010580	1					
ANR	11010730	Argument	& op [ - 2 ]		11010580	0					
ANR	11010731	UnaryOperationExpression	& op [ - 2 ]		11010580	0					
ANR	11010732	UnaryOperator	&		11010580	0					
ANR	11010733	ArrayIndexing	op [ - 2 ]		11010580	1					
ANR	11010734	Identifier	op		11010580	0					
ANR	11010735	UnaryOperationExpression	- 2		11010580	1					
ANR	11010736	UnaryOperator	-		11010580	0					
ANR	11010737	PrimaryExpression	2		11010580	1					
ANR	11010738	Argument	0.0		11010580	1					
ANR	11010739	PrimaryExpression	0.0		11010580	0					
ANR	11010740	ExpressionStatement	"make_real ( & op [ - 1 ] , 0.0 )"	4220:12:134599:134622	11010580	8	True				
ANR	11010741	CallExpression	"make_real ( & op [ - 1 ] , 0.0 )"		11010580	0					
ANR	11010742	Callee	make_real		11010580	0					
ANR	11010743	Identifier	make_real		11010580	0					
ANR	11010744	ArgumentList	& op [ - 1 ]		11010580	1					
ANR	11010745	Argument	& op [ - 1 ]		11010580	0					
ANR	11010746	UnaryOperationExpression	& op [ - 1 ]		11010580	0					
ANR	11010747	UnaryOperator	&		11010580	0					
ANR	11010748	ArrayIndexing	op [ - 1 ]		11010580	1					
ANR	11010749	Identifier	op		11010580	0					
ANR	11010750	UnaryOperationExpression	- 1		11010580	1					
ANR	11010751	UnaryOperator	-		11010580	0					
ANR	11010752	PrimaryExpression	1		11010580	1					
ANR	11010753	Argument	0.0		11010580	1					
ANR	11010754	PrimaryExpression	0.0		11010580	0					
ANR	11010755	ExpressionStatement	"make_real ( op , 0.0 )"	4221:12:134636:134654	11010580	9	True				
ANR	11010756	CallExpression	"make_real ( op , 0.0 )"		11010580	0					
ANR	11010757	Callee	make_real		11010580	0					
ANR	11010758	Identifier	make_real		11010580	0					
ANR	11010759	ArgumentList	op		11010580	1					
ANR	11010760	Argument	op		11010580	0					
ANR	11010761	Identifier	op		11010580	0					
ANR	11010762	Argument	0.0		11010580	1					
ANR	11010763	PrimaryExpression	0.0		11010580	0					
ANR	11010764	BreakStatement	break ;	4222:12:134668:134673	11010580	10	True				
ANR	11010765	Label	case 3 :	4223:8:134683:134689	11010580	11	True				
ANR	11010766	ExpressionStatement	push ( 4 )	4224:12:134703:134710	11010580	12	True				
ANR	11010767	CallExpression	push ( 4 )		11010580	0					
ANR	11010768	Callee	push		11010580	0					
ANR	11010769	Identifier	push		11010580	0					
ANR	11010770	ArgumentList	4		11010580	1					
ANR	11010771	Argument	4		11010580	0					
ANR	11010772	PrimaryExpression	4		11010580	0					
ANR	11010773	ExpressionStatement	"make_real ( & op [ - 3 ] , 0.0 )"	4225:12:134724:134747	11010580	13	True				
ANR	11010774	CallExpression	"make_real ( & op [ - 3 ] , 0.0 )"		11010580	0					
ANR	11010775	Callee	make_real		11010580	0					
ANR	11010776	Identifier	make_real		11010580	0					
ANR	11010777	ArgumentList	& op [ - 3 ]		11010580	1					
ANR	11010778	Argument	& op [ - 3 ]		11010580	0					
ANR	11010779	UnaryOperationExpression	& op [ - 3 ]		11010580	0					
ANR	11010780	UnaryOperator	&		11010580	0					
ANR	11010781	ArrayIndexing	op [ - 3 ]		11010580	1					
ANR	11010782	Identifier	op		11010580	0					
ANR	11010783	UnaryOperationExpression	- 3		11010580	1					
ANR	11010784	UnaryOperator	-		11010580	0					
ANR	11010785	PrimaryExpression	3		11010580	1					
ANR	11010786	Argument	0.0		11010580	1					
ANR	11010787	PrimaryExpression	0.0		11010580	0					
ANR	11010788	ExpressionStatement	"make_real ( & op [ - 2 ] , 0.0 )"	4226:12:134761:134784	11010580	14	True				
ANR	11010789	CallExpression	"make_real ( & op [ - 2 ] , 0.0 )"		11010580	0					
ANR	11010790	Callee	make_real		11010580	0					
ANR	11010791	Identifier	make_real		11010580	0					
ANR	11010792	ArgumentList	& op [ - 2 ]		11010580	1					
ANR	11010793	Argument	& op [ - 2 ]		11010580	0					
ANR	11010794	UnaryOperationExpression	& op [ - 2 ]		11010580	0					
ANR	11010795	UnaryOperator	&		11010580	0					
ANR	11010796	ArrayIndexing	op [ - 2 ]		11010580	1					
ANR	11010797	Identifier	op		11010580	0					
ANR	11010798	UnaryOperationExpression	- 2		11010580	1					
ANR	11010799	UnaryOperator	-		11010580	0					
ANR	11010800	PrimaryExpression	2		11010580	1					
ANR	11010801	Argument	0.0		11010580	1					
ANR	11010802	PrimaryExpression	0.0		11010580	0					
ANR	11010803	ExpressionStatement	"make_real ( & op [ - 1 ] , 0.0 )"	4227:12:134798:134821	11010580	15	True				
ANR	11010804	CallExpression	"make_real ( & op [ - 1 ] , 0.0 )"		11010580	0					
ANR	11010805	Callee	make_real		11010580	0					
ANR	11010806	Identifier	make_real		11010580	0					
ANR	11010807	ArgumentList	& op [ - 1 ]		11010580	1					
ANR	11010808	Argument	& op [ - 1 ]		11010580	0					
ANR	11010809	UnaryOperationExpression	& op [ - 1 ]		11010580	0					
ANR	11010810	UnaryOperator	&		11010580	0					
ANR	11010811	ArrayIndexing	op [ - 1 ]		11010580	1					
ANR	11010812	Identifier	op		11010580	0					
ANR	11010813	UnaryOperationExpression	- 1		11010580	1					
ANR	11010814	UnaryOperator	-		11010580	0					
ANR	11010815	PrimaryExpression	1		11010580	1					
ANR	11010816	Argument	0.0		11010580	1					
ANR	11010817	PrimaryExpression	0.0		11010580	0					
ANR	11010818	ExpressionStatement	"make_real ( op , 0.0 )"	4228:12:134835:134853	11010580	16	True				
ANR	11010819	CallExpression	"make_real ( op , 0.0 )"		11010580	0					
ANR	11010820	Callee	make_real		11010580	0					
ANR	11010821	Identifier	make_real		11010580	0					
ANR	11010822	ArgumentList	op		11010580	1					
ANR	11010823	Argument	op		11010580	0					
ANR	11010824	Identifier	op		11010580	0					
ANR	11010825	Argument	0.0		11010580	1					
ANR	11010826	PrimaryExpression	0.0		11010580	0					
ANR	11010827	BreakStatement	break ;	4229:12:134867:134872	11010580	17	True				
ANR	11010828	ElseStatement	else		11010580	0					
ANR	11010829	CompoundStatement		38:11:950:950	11010580	0					
ANR	11010830	ExpressionStatement	* stage = 0	4232:8:134905:134915	11010580	0	True				
ANR	11010831	AssignmentExpression	* stage = 0		11010580	0		=			
ANR	11010832	UnaryOperationExpression	* stage		11010580	0					
ANR	11010833	UnaryOperator	*		11010580	0					
ANR	11010834	Identifier	stage		11010580	1					
ANR	11010835	PrimaryExpression	0		11010580	1					
ANR	11010836	ExpressionStatement	* cont = 1	4233:8:134925:134934	11010580	1	True				
ANR	11010837	AssignmentExpression	* cont = 1		11010580	0		=			
ANR	11010838	UnaryOperationExpression	* cont		11010580	0					
ANR	11010839	UnaryOperator	*		11010580	0					
ANR	11010840	Identifier	cont		11010580	1					
ANR	11010841	PrimaryExpression	1		11010580	1					
ANR	11010842	ReturnStatement	return 0 ;	4235:4:134946:134954	11010580	6	True				
ANR	11010843	PrimaryExpression	0		11010580	0					
ANR	11010844	ReturnType	static int		11010580	1					
ANR	11010845	Identifier	devicenbasecolor		11010580	2					
ANR	11010846	ParameterList	"i_ctx_t * i_ctx_p , ref * space , int base , int * stage , int * cont , int * stack_depth"		11010580	3					
ANR	11010847	Parameter	i_ctx_t * i_ctx_p	4193:28:133862:133878	11010580	0	True				
ANR	11010848	ParameterType	i_ctx_t *		11010580	0					
ANR	11010849	Identifier	i_ctx_p		11010580	1					
ANR	11010850	Parameter	ref * space	4193:47:133881:133890	11010580	1	True				
ANR	11010851	ParameterType	ref *		11010580	0					
ANR	11010852	Identifier	space		11010580	1					
ANR	11010853	Parameter	int base	4193:59:133893:133900	11010580	2	True				
ANR	11010854	ParameterType	int		11010580	0					
ANR	11010855	Identifier	base		11010580	1					
ANR	11010856	Parameter	int * stage	4193:69:133903:133912	11010580	3	True				
ANR	11010857	ParameterType	int *		11010580	0					
ANR	11010858	Identifier	stage		11010580	1					
ANR	11010859	Parameter	int * cont	4193:81:133915:133923	11010580	4	True				
ANR	11010860	ParameterType	int *		11010580	0					
ANR	11010861	Identifier	cont		11010580	1					
ANR	11010862	Parameter	int * stack_depth	4193:92:133926:133941	11010580	5	True				
ANR	11010863	ParameterType	int *		11010580	0					
ANR	11010864	Identifier	stack_depth		11010580	1					
ANR	11010865	CFGEntryNode	ENTRY		11010580		True				
ANR	11010866	CFGExitNode	EXIT		11010580		True				
ANR	11010867	Symbol	stack_depth		11010580						
ANR	11010868	Symbol	op		11010580						
ANR	11010869	Symbol	code		11010580						
ANR	11010870	Symbol	* stage		11010580						
ANR	11010871	Symbol	use		11010580						
ANR	11010872	Symbol	array_get		11010580						
ANR	11010873	Symbol	narray		11010580						
ANR	11010874	Symbol	devicentransform		11010580						
ANR	11010875	Symbol	& use		11010580						
ANR	11010876	Symbol	osp		11010580						
ANR	11010877	Symbol	space		11010580						
ANR	11010878	Symbol	& narray		11010580						
ANR	11010879	Symbol	stage		11010580						
ANR	11010880	Symbol	* cont		11010580						
ANR	11010881	Symbol	i_ctx_p		11010580						
ANR	11010882	Symbol	r_size		11010580						
ANR	11010883	Symbol	imemory		11010580						
ANR	11010884	Symbol	cont		11010580						
ANR	11010885	Symbol	n_comp		11010580						
ANR	11010886	Symbol	base		11010580						
ANR	11010887	Function	devicenvalidate	4237:0:134958:135688							
ANR	11010888	FunctionDef	"devicenvalidate (i_ctx_t * i_ctx_p , ref * space , float * values , int num_comps)"		11010887	0					
ANR	11010889	CompoundStatement		4238:0:135045:135688	11010887	0					
ANR	11010890	IdentifierDeclStatement	"int i , code ;"	4239:4:135051:135062	11010887	0	True				
ANR	11010891	IdentifierDecl	i		11010887	0					
ANR	11010892	IdentifierDeclType	int		11010887	0					
ANR	11010893	Identifier	i		11010887	1					
ANR	11010894	IdentifierDecl	code		11010887	1					
ANR	11010895	IdentifierDeclType	int		11010887	0					
ANR	11010896	Identifier	code		11010887	1					
ANR	11010897	IdentifierDeclStatement	ref narray ;	4240:4:135068:135078	11010887	1	True				
ANR	11010898	IdentifierDecl	narray		11010887	0					
ANR	11010899	IdentifierDeclType	ref		11010887	0					
ANR	11010900	Identifier	narray		11010887	1					
ANR	11010901	IdentifierDeclStatement	os_ptr op = osp ;	4241:4:135084:135099	11010887	2	True				
ANR	11010902	IdentifierDecl	op = osp		11010887	0					
ANR	11010903	IdentifierDeclType	os_ptr		11010887	0					
ANR	11010904	Identifier	op		11010887	1					
ANR	11010905	AssignmentExpression	op = osp		11010887	2		=			
ANR	11010906	Identifier	osp		11010887	0					
ANR	11010907	Identifier	osp		11010887	1					
ANR	11010908	ExpressionStatement	"code = array_get ( imemory , space , 1 , & narray )"	4243:4:135106:135150	11010887	3	True				
ANR	11010909	AssignmentExpression	"code = array_get ( imemory , space , 1 , & narray )"		11010887	0		=			
ANR	11010910	Identifier	code		11010887	0					
ANR	11010911	CallExpression	"array_get ( imemory , space , 1 , & narray )"		11010887	1					
ANR	11010912	Callee	array_get		11010887	0					
ANR	11010913	Identifier	array_get		11010887	0					
ANR	11010914	ArgumentList	imemory		11010887	1					
ANR	11010915	Argument	imemory		11010887	0					
ANR	11010916	Identifier	imemory		11010887	0					
ANR	11010917	Argument	space		11010887	1					
ANR	11010918	Identifier	space		11010887	0					
ANR	11010919	Argument	1		11010887	2					
ANR	11010920	PrimaryExpression	1		11010887	0					
ANR	11010921	Argument	& narray		11010887	3					
ANR	11010922	UnaryOperationExpression	& narray		11010887	0					
ANR	11010923	UnaryOperator	&		11010887	0					
ANR	11010924	Identifier	narray		11010887	1					
ANR	11010925	IfStatement	if ( code < 0 )		11010887	4					
ANR	11010926	Condition	code < 0	4244:8:135160:135167	11010887	0	True				
ANR	11010927	RelationalExpression	code < 0		11010887	0		<			
ANR	11010928	Identifier	code		11010887	0					
ANR	11010929	PrimaryExpression	0		11010887	1					
ANR	11010930	ReturnStatement	return code ;	4245:8:135178:135189	11010887	1	True				
ANR	11010931	Identifier	code		11010887	0					
ANR	11010932	IfStatement	if ( ! r_is_array ( & narray ) )		11010887	5					
ANR	11010933	Condition	! r_is_array ( & narray )	4246:8:135199:135218	11010887	0	True				
ANR	11010934	UnaryOperationExpression	! r_is_array ( & narray )		11010887	0					
ANR	11010935	UnaryOperator	!		11010887	0					
ANR	11010936	CallExpression	r_is_array ( & narray )		11010887	1					
ANR	11010937	Callee	r_is_array		11010887	0					
ANR	11010938	Identifier	r_is_array		11010887	0					
ANR	11010939	ArgumentList	& narray		11010887	1					
ANR	11010940	Argument	& narray		11010887	0					
ANR	11010941	UnaryOperationExpression	& narray		11010887	0					
ANR	11010942	UnaryOperator	&		11010887	0					
ANR	11010943	Identifier	narray		11010887	1					
ANR	11010944	ExpressionStatement	return_error ( gs_error_typecheck )	4247:8:135229:135261	11010887	1	True				
ANR	11010945	CallExpression	return_error ( gs_error_typecheck )		11010887	0					
ANR	11010946	Callee	return_error		11010887	0					
ANR	11010947	Identifier	return_error		11010887	0					
ANR	11010948	ArgumentList	gs_error_typecheck		11010887	1					
ANR	11010949	Argument	gs_error_typecheck		11010887	0					
ANR	11010950	Identifier	gs_error_typecheck		11010887	0					
ANR	11010951	IfStatement	if ( num_comps < r_size ( & narray ) )		11010887	6					
ANR	11010952	Condition	num_comps < r_size ( & narray )	4249:8:135272:135298	11010887	0	True				
ANR	11010953	RelationalExpression	num_comps < r_size ( & narray )		11010887	0		<			
ANR	11010954	Identifier	num_comps		11010887	0					
ANR	11010955	CallExpression	r_size ( & narray )		11010887	1					
ANR	11010956	Callee	r_size		11010887	0					
ANR	11010957	Identifier	r_size		11010887	0					
ANR	11010958	ArgumentList	& narray		11010887	1					
ANR	11010959	Argument	& narray		11010887	0					
ANR	11010960	UnaryOperationExpression	& narray		11010887	0					
ANR	11010961	UnaryOperator	&		11010887	0					
ANR	11010962	Identifier	narray		11010887	1					
ANR	11010963	ExpressionStatement	return_error ( gs_error_stackunderflow )	4250:8:135309:135346	11010887	1	True				
ANR	11010964	CallExpression	return_error ( gs_error_stackunderflow )		11010887	0					
ANR	11010965	Callee	return_error		11010887	0					
ANR	11010966	Identifier	return_error		11010887	0					
ANR	11010967	ArgumentList	gs_error_stackunderflow		11010887	1					
ANR	11010968	Argument	gs_error_stackunderflow		11010887	0					
ANR	11010969	Identifier	gs_error_stackunderflow		11010887	0					
ANR	11010970	ExpressionStatement	op -= r_size ( & narray ) - 1	4252:4:135353:135378	11010887	7	True				
ANR	11010971	AssignmentExpression	op -= r_size ( & narray ) - 1		11010887	0		-=			
ANR	11010972	Identifier	op		11010887	0					
ANR	11010973	AdditiveExpression	r_size ( & narray ) - 1		11010887	1		-			
ANR	11010974	CallExpression	r_size ( & narray )		11010887	0					
ANR	11010975	Callee	r_size		11010887	0					
ANR	11010976	Identifier	r_size		11010887	0					
ANR	11010977	ArgumentList	& narray		11010887	1					
ANR	11010978	Argument	& narray		11010887	0					
ANR	11010979	UnaryOperationExpression	& narray		11010887	0					
ANR	11010980	UnaryOperator	&		11010887	0					
ANR	11010981	Identifier	narray		11010887	1					
ANR	11010982	PrimaryExpression	1		11010887	1					
ANR	11010983	ForStatement	for ( i = 0 ; i < r_size ( & narray ) ; i ++ )		11010887	8					
ANR	11010984	ForInit	i = 0 ;	4254:9:135390:135393	11010887	0	True				
ANR	11010985	AssignmentExpression	i = 0		11010887	0		=			
ANR	11010986	Identifier	i		11010887	0					
ANR	11010987	PrimaryExpression	0		11010887	1					
ANR	11010988	Condition	i < r_size ( & narray )	4254:13:135394:135412	11010887	1	True				
ANR	11010989	RelationalExpression	i < r_size ( & narray )		11010887	0		<			
ANR	11010990	Identifier	i		11010887	0					
ANR	11010991	CallExpression	r_size ( & narray )		11010887	1					
ANR	11010992	Callee	r_size		11010887	0					
ANR	11010993	Identifier	r_size		11010887	0					
ANR	11010994	ArgumentList	& narray		11010887	1					
ANR	11010995	Argument	& narray		11010887	0					
ANR	11010996	UnaryOperationExpression	& narray		11010887	0					
ANR	11010997	UnaryOperator	&		11010887	0					
ANR	11010998	Identifier	narray		11010887	1					
ANR	11010999	PostIncDecOperationExpression	i ++	4254:34:135415:135417	11010887	2	True				
ANR	11011000	Identifier	i		11010887	0					
ANR	11011001	IncDec	++		11010887	1					
ANR	11011002	CompoundStatement		17:39:374:374	11010887	3					
ANR	11011003	IfStatement	"if ( ! r_has_type ( op , t_integer ) && ! r_has_type ( op , t_real ) )"		11010887	0					
ANR	11011004	Condition	"! r_has_type ( op , t_integer ) && ! r_has_type ( op , t_real )"	4255:12:135434:135486	11010887	0	True				
ANR	11011005	AndExpression	"! r_has_type ( op , t_integer ) && ! r_has_type ( op , t_real )"		11010887	0		&&			
ANR	11011006	UnaryOperationExpression	"! r_has_type ( op , t_integer )"		11010887	0					
ANR	11011007	UnaryOperator	!		11010887	0					
ANR	11011008	CallExpression	"r_has_type ( op , t_integer )"		11010887	1					
ANR	11011009	Callee	r_has_type		11010887	0					
ANR	11011010	Identifier	r_has_type		11010887	0					
ANR	11011011	ArgumentList	op		11010887	1					
ANR	11011012	Argument	op		11010887	0					
ANR	11011013	Identifier	op		11010887	0					
ANR	11011014	Argument	t_integer		11010887	1					
ANR	11011015	Identifier	t_integer		11010887	0					
ANR	11011016	UnaryOperationExpression	"! r_has_type ( op , t_real )"		11010887	1					
ANR	11011017	UnaryOperator	!		11010887	0					
ANR	11011018	CallExpression	"r_has_type ( op , t_real )"		11010887	1					
ANR	11011019	Callee	r_has_type		11010887	0					
ANR	11011020	Identifier	r_has_type		11010887	0					
ANR	11011021	ArgumentList	op		11010887	1					
ANR	11011022	Argument	op		11010887	0					
ANR	11011023	Identifier	op		11010887	0					
ANR	11011024	Argument	t_real		11010887	1					
ANR	11011025	Identifier	t_real		11010887	0					
ANR	11011026	ExpressionStatement	return_error ( gs_error_typecheck )	4256:12:135501:135533	11010887	1	True				
ANR	11011027	CallExpression	return_error ( gs_error_typecheck )		11010887	0					
ANR	11011028	Callee	return_error		11010887	0					
ANR	11011029	Identifier	return_error		11010887	0					
ANR	11011030	ArgumentList	gs_error_typecheck		11010887	1					
ANR	11011031	Argument	gs_error_typecheck		11010887	0					
ANR	11011032	Identifier	gs_error_typecheck		11010887	0					
ANR	11011033	IfStatement	if ( values [ i ] > 1.0 )		11010887	1					
ANR	11011034	Condition	values [ i ] > 1.0	4258:12:135548:135562	11010887	0	True				
ANR	11011035	RelationalExpression	values [ i ] > 1.0		11010887	0		>			
ANR	11011036	ArrayIndexing	values [ i ]		11010887	0					
ANR	11011037	Identifier	values		11010887	0					
ANR	11011038	Identifier	i		11010887	1					
ANR	11011039	PrimaryExpression	1.0		11010887	1					
ANR	11011040	ExpressionStatement	values [ i ] = 1.0	4259:12:135577:135592	11010887	1	True				
ANR	11011041	AssignmentExpression	values [ i ] = 1.0		11010887	0		=			
ANR	11011042	ArrayIndexing	values [ i ]		11010887	0					
ANR	11011043	Identifier	values		11010887	0					
ANR	11011044	Identifier	i		11010887	1					
ANR	11011045	PrimaryExpression	1.0		11010887	1					
ANR	11011046	IfStatement	if ( values [ i ] < 0.0 )		11010887	2					
ANR	11011047	Condition	values [ i ] < 0.0	4261:12:135607:135621	11010887	0	True				
ANR	11011048	RelationalExpression	values [ i ] < 0.0		11010887	0		<			
ANR	11011049	ArrayIndexing	values [ i ]		11010887	0					
ANR	11011050	Identifier	values		11010887	0					
ANR	11011051	Identifier	i		11010887	1					
ANR	11011052	PrimaryExpression	0.0		11010887	1					
ANR	11011053	ExpressionStatement	values [ i ] = 0.0	4262:12:135636:135651	11010887	1	True				
ANR	11011054	AssignmentExpression	values [ i ] = 0.0		11010887	0		=			
ANR	11011055	ArrayIndexing	values [ i ]		11010887	0					
ANR	11011056	Identifier	values		11010887	0					
ANR	11011057	Identifier	i		11010887	1					
ANR	11011058	PrimaryExpression	0.0		11010887	1					
ANR	11011059	ExpressionStatement	op ++	4263:8:135661:135665	11010887	3	True				
ANR	11011060	PostIncDecOperationExpression	op ++		11010887	0					
ANR	11011061	Identifier	op		11010887	0					
ANR	11011062	IncDec	++		11010887	1					
ANR	11011063	ReturnStatement	return 0 ;	4266:4:135678:135686	11010887	9	True				
ANR	11011064	PrimaryExpression	0		11010887	0					
ANR	11011065	ReturnType	static int		11010887	1					
ANR	11011066	Identifier	devicenvalidate		11010887	2					
ANR	11011067	ParameterList	"i_ctx_t * i_ctx_p , ref * space , float * values , int num_comps"		11010887	3					
ANR	11011068	Parameter	i_ctx_t * i_ctx_p	4237:27:134985:135000	11010887	0	True				
ANR	11011069	ParameterType	i_ctx_t *		11010887	0					
ANR	11011070	Identifier	i_ctx_p		11010887	1					
ANR	11011071	Parameter	ref * space	4237:45:135003:135012	11010887	1	True				
ANR	11011072	ParameterType	ref *		11010887	0					
ANR	11011073	Identifier	space		11010887	1					
ANR	11011074	Parameter	float * values	4237:57:135015:135027	11010887	2	True				
ANR	11011075	ParameterType	float *		11010887	0					
ANR	11011076	Identifier	values		11010887	1					
ANR	11011077	Parameter	int num_comps	4237:72:135030:135042	11010887	3	True				
ANR	11011078	ParameterType	int		11010887	0					
ANR	11011079	Identifier	num_comps		11010887	1					
ANR	11011080	CFGEntryNode	ENTRY		11010887		True				
ANR	11011081	CFGExitNode	EXIT		11010887		True				
ANR	11011082	Symbol	op		11010887						
ANR	11011083	Symbol	code		11010887						
ANR	11011084	Symbol	array_get		11010887						
ANR	11011085	Symbol	* values		11010887						
ANR	11011086	Symbol	values		11010887						
ANR	11011087	Symbol	i		11010887						
ANR	11011088	Symbol	narray		11010887						
ANR	11011089	Symbol	t_real		11010887						
ANR	11011090	Symbol	osp		11010887						
ANR	11011091	Symbol	space		11010887						
ANR	11011092	Symbol	& narray		11010887						
ANR	11011093	Symbol	gs_error_typecheck		11010887						
ANR	11011094	Symbol	r_has_type		11010887						
ANR	11011095	Symbol	* i		11010887						
ANR	11011096	Symbol	t_integer		11010887						
ANR	11011097	Symbol	gs_error_stackunderflow		11010887						
ANR	11011098	Symbol	i_ctx_p		11010887						
ANR	11011099	Symbol	num_comps		11010887						
ANR	11011100	Symbol	r_size		11010887						
ANR	11011101	Symbol	imemory		11010887						
ANR	11011102	Symbol	r_is_array		11010887						
ANR	11011103	Function	devicencompareproc	4268:0:135690:136878							
ANR	11011104	FunctionDef	"devicencompareproc (i_ctx_t * i_ctx_p , ref * space , ref * testspace)"		11011103	0					
ANR	11011105	CompoundStatement		4269:0:135766:136878	11011103	0					
ANR	11011106	IdentifierDeclStatement	"ref sname1 , sname2 ;"	4270:4:135772:135790	11011103	0	True				
ANR	11011107	IdentifierDecl	sname1		11011103	0					
ANR	11011108	IdentifierDeclType	ref		11011103	0					
ANR	11011109	Identifier	sname1		11011103	1					
ANR	11011110	IdentifierDecl	sname2		11011103	1					
ANR	11011111	IdentifierDeclType	ref		11011103	0					
ANR	11011112	Identifier	sname2		11011103	1					
ANR	11011113	IdentifierDeclStatement	int code ;	4271:4:135796:135804	11011103	1	True				
ANR	11011114	IdentifierDecl	code		11011103	0					
ANR	11011115	IdentifierDeclType	int		11011103	0					
ANR	11011116	Identifier	code		11011103	1					
ANR	11011117	ExpressionStatement	"code = array_get ( imemory , space , 1 , & sname1 )"	4273:4:135811:135855	11011103	2	True				
ANR	11011118	AssignmentExpression	"code = array_get ( imemory , space , 1 , & sname1 )"		11011103	0		=			
ANR	11011119	Identifier	code		11011103	0					
ANR	11011120	CallExpression	"array_get ( imemory , space , 1 , & sname1 )"		11011103	1					
ANR	11011121	Callee	array_get		11011103	0					
ANR	11011122	Identifier	array_get		11011103	0					
ANR	11011123	ArgumentList	imemory		11011103	1					
ANR	11011124	Argument	imemory		11011103	0					
ANR	11011125	Identifier	imemory		11011103	0					
ANR	11011126	Argument	space		11011103	1					
ANR	11011127	Identifier	space		11011103	0					
ANR	11011128	Argument	1		11011103	2					
ANR	11011129	PrimaryExpression	1		11011103	0					
ANR	11011130	Argument	& sname1		11011103	3					
ANR	11011131	UnaryOperationExpression	& sname1		11011103	0					
ANR	11011132	UnaryOperator	&		11011103	0					
ANR	11011133	Identifier	sname1		11011103	1					
ANR	11011134	IfStatement	if ( code < 0 )		11011103	3					
ANR	11011135	Condition	code < 0	4274:8:135865:135872	11011103	0	True				
ANR	11011136	RelationalExpression	code < 0		11011103	0		<			
ANR	11011137	Identifier	code		11011103	0					
ANR	11011138	PrimaryExpression	0		11011103	1					
ANR	11011139	ReturnStatement	return 0 ;	4275:8:135883:135891	11011103	1	True				
ANR	11011140	PrimaryExpression	0		11011103	0					
ANR	11011141	ExpressionStatement	"code = array_get ( imemory , testspace , 1 , & sname2 )"	4277:4:135898:135946	11011103	4	True				
ANR	11011142	AssignmentExpression	"code = array_get ( imemory , testspace , 1 , & sname2 )"		11011103	0		=			
ANR	11011143	Identifier	code		11011103	0					
ANR	11011144	CallExpression	"array_get ( imemory , testspace , 1 , & sname2 )"		11011103	1					
ANR	11011145	Callee	array_get		11011103	0					
ANR	11011146	Identifier	array_get		11011103	0					
ANR	11011147	ArgumentList	imemory		11011103	1					
ANR	11011148	Argument	imemory		11011103	0					
ANR	11011149	Identifier	imemory		11011103	0					
ANR	11011150	Argument	testspace		11011103	1					
ANR	11011151	Identifier	testspace		11011103	0					
ANR	11011152	Argument	1		11011103	2					
ANR	11011153	PrimaryExpression	1		11011103	0					
ANR	11011154	Argument	& sname2		11011103	3					
ANR	11011155	UnaryOperationExpression	& sname2		11011103	0					
ANR	11011156	UnaryOperator	&		11011103	0					
ANR	11011157	Identifier	sname2		11011103	1					
ANR	11011158	IfStatement	if ( code < 0 )		11011103	5					
ANR	11011159	Condition	code < 0	4278:8:135956:135963	11011103	0	True				
ANR	11011160	RelationalExpression	code < 0		11011103	0		<			
ANR	11011161	Identifier	code		11011103	0					
ANR	11011162	PrimaryExpression	0		11011103	1					
ANR	11011163	ReturnStatement	return 0 ;	4279:8:135974:135982	11011103	1	True				
ANR	11011164	PrimaryExpression	0		11011103	0					
ANR	11011165	IfStatement	if ( ! r_is_array ( & sname1 ) )		11011103	6					
ANR	11011166	Condition	! r_is_array ( & sname1 )	4281:8:135993:136012	11011103	0	True				
ANR	11011167	UnaryOperationExpression	! r_is_array ( & sname1 )		11011103	0					
ANR	11011168	UnaryOperator	!		11011103	0					
ANR	11011169	CallExpression	r_is_array ( & sname1 )		11011103	1					
ANR	11011170	Callee	r_is_array		11011103	0					
ANR	11011171	Identifier	r_is_array		11011103	0					
ANR	11011172	ArgumentList	& sname1		11011103	1					
ANR	11011173	Argument	& sname1		11011103	0					
ANR	11011174	UnaryOperationExpression	& sname1		11011103	0					
ANR	11011175	UnaryOperator	&		11011103	0					
ANR	11011176	Identifier	sname1		11011103	1					
ANR	11011177	ReturnStatement	return 0 ;	4282:8:136023:136031	11011103	1	True				
ANR	11011178	PrimaryExpression	0		11011103	0					
ANR	11011179	IfStatement	if ( ! r_is_array ( & sname2 ) )		11011103	7					
ANR	11011180	Condition	! r_is_array ( & sname2 )	4283:8:136041:136060	11011103	0	True				
ANR	11011181	UnaryOperationExpression	! r_is_array ( & sname2 )		11011103	0					
ANR	11011182	UnaryOperator	!		11011103	0					
ANR	11011183	CallExpression	r_is_array ( & sname2 )		11011103	1					
ANR	11011184	Callee	r_is_array		11011103	0					
ANR	11011185	Identifier	r_is_array		11011103	0					
ANR	11011186	ArgumentList	& sname2		11011103	1					
ANR	11011187	Argument	& sname2		11011103	0					
ANR	11011188	UnaryOperationExpression	& sname2		11011103	0					
ANR	11011189	UnaryOperator	&		11011103	0					
ANR	11011190	Identifier	sname2		11011103	1					
ANR	11011191	ReturnStatement	return 0 ;	4284:8:136071:136079	11011103	1	True				
ANR	11011192	PrimaryExpression	0		11011103	0					
ANR	11011193	IfStatement	"if ( ! comparearrays ( i_ctx_p , & sname1 , & sname2 ) )"		11011103	8					
ANR	11011194	Condition	"! comparearrays ( i_ctx_p , & sname1 , & sname2 )"	4286:8:136090:136130	11011103	0	True				
ANR	11011195	UnaryOperationExpression	"! comparearrays ( i_ctx_p , & sname1 , & sname2 )"		11011103	0					
ANR	11011196	UnaryOperator	!		11011103	0					
ANR	11011197	CallExpression	"comparearrays ( i_ctx_p , & sname1 , & sname2 )"		11011103	1					
ANR	11011198	Callee	comparearrays		11011103	0					
ANR	11011199	Identifier	comparearrays		11011103	0					
ANR	11011200	ArgumentList	i_ctx_p		11011103	1					
ANR	11011201	Argument	i_ctx_p		11011103	0					
ANR	11011202	Identifier	i_ctx_p		11011103	0					
ANR	11011203	Argument	& sname1		11011103	1					
ANR	11011204	UnaryOperationExpression	& sname1		11011103	0					
ANR	11011205	UnaryOperator	&		11011103	0					
ANR	11011206	Identifier	sname1		11011103	1					
ANR	11011207	Argument	& sname2		11011103	2					
ANR	11011208	UnaryOperationExpression	& sname2		11011103	0					
ANR	11011209	UnaryOperator	&		11011103	0					
ANR	11011210	Identifier	sname2		11011103	1					
ANR	11011211	ReturnStatement	return 0 ;	4287:8:136141:136149	11011103	1	True				
ANR	11011212	PrimaryExpression	0		11011103	0					
ANR	11011213	ExpressionStatement	"code = array_get ( imemory , testspace , 2 , & sname1 )"	4289:4:136156:136204	11011103	9	True				
ANR	11011214	AssignmentExpression	"code = array_get ( imemory , testspace , 2 , & sname1 )"		11011103	0		=			
ANR	11011215	Identifier	code		11011103	0					
ANR	11011216	CallExpression	"array_get ( imemory , testspace , 2 , & sname1 )"		11011103	1					
ANR	11011217	Callee	array_get		11011103	0					
ANR	11011218	Identifier	array_get		11011103	0					
ANR	11011219	ArgumentList	imemory		11011103	1					
ANR	11011220	Argument	imemory		11011103	0					
ANR	11011221	Identifier	imemory		11011103	0					
ANR	11011222	Argument	testspace		11011103	1					
ANR	11011223	Identifier	testspace		11011103	0					
ANR	11011224	Argument	2		11011103	2					
ANR	11011225	PrimaryExpression	2		11011103	0					
ANR	11011226	Argument	& sname1		11011103	3					
ANR	11011227	UnaryOperationExpression	& sname1		11011103	0					
ANR	11011228	UnaryOperator	&		11011103	0					
ANR	11011229	Identifier	sname1		11011103	1					
ANR	11011230	IfStatement	if ( code < 0 )		11011103	10					
ANR	11011231	Condition	code < 0	4290:8:136214:136221	11011103	0	True				
ANR	11011232	RelationalExpression	code < 0		11011103	0		<			
ANR	11011233	Identifier	code		11011103	0					
ANR	11011234	PrimaryExpression	0		11011103	1					
ANR	11011235	ReturnStatement	return 0 ;	4291:8:136232:136240	11011103	1	True				
ANR	11011236	PrimaryExpression	0		11011103	0					
ANR	11011237	ExpressionStatement	"code = array_get ( imemory , testspace , 2 , & sname2 )"	4292:4:136246:136294	11011103	11	True				
ANR	11011238	AssignmentExpression	"code = array_get ( imemory , testspace , 2 , & sname2 )"		11011103	0		=			
ANR	11011239	Identifier	code		11011103	0					
ANR	11011240	CallExpression	"array_get ( imemory , testspace , 2 , & sname2 )"		11011103	1					
ANR	11011241	Callee	array_get		11011103	0					
ANR	11011242	Identifier	array_get		11011103	0					
ANR	11011243	ArgumentList	imemory		11011103	1					
ANR	11011244	Argument	imemory		11011103	0					
ANR	11011245	Identifier	imemory		11011103	0					
ANR	11011246	Argument	testspace		11011103	1					
ANR	11011247	Identifier	testspace		11011103	0					
ANR	11011248	Argument	2		11011103	2					
ANR	11011249	PrimaryExpression	2		11011103	0					
ANR	11011250	Argument	& sname2		11011103	3					
ANR	11011251	UnaryOperationExpression	& sname2		11011103	0					
ANR	11011252	UnaryOperator	&		11011103	0					
ANR	11011253	Identifier	sname2		11011103	1					
ANR	11011254	IfStatement	if ( code < 0 )		11011103	12					
ANR	11011255	Condition	code < 0	4293:8:136304:136311	11011103	0	True				
ANR	11011256	RelationalExpression	code < 0		11011103	0		<			
ANR	11011257	Identifier	code		11011103	0					
ANR	11011258	PrimaryExpression	0		11011103	1					
ANR	11011259	ReturnStatement	return 0 ;	4294:8:136322:136330	11011103	1	True				
ANR	11011260	PrimaryExpression	0		11011103	0					
ANR	11011261	IfStatement	if ( r_type ( & sname1 ) != r_type ( & sname2 ) )		11011103	13					
ANR	11011262	Condition	r_type ( & sname1 ) != r_type ( & sname2 )	4295:8:136340:136373	11011103	0	True				
ANR	11011263	EqualityExpression	r_type ( & sname1 ) != r_type ( & sname2 )		11011103	0		!=			
ANR	11011264	CallExpression	r_type ( & sname1 )		11011103	0					
ANR	11011265	Callee	r_type		11011103	0					
ANR	11011266	Identifier	r_type		11011103	0					
ANR	11011267	ArgumentList	& sname1		11011103	1					
ANR	11011268	Argument	& sname1		11011103	0					
ANR	11011269	UnaryOperationExpression	& sname1		11011103	0					
ANR	11011270	UnaryOperator	&		11011103	0					
ANR	11011271	Identifier	sname1		11011103	1					
ANR	11011272	CallExpression	r_type ( & sname2 )		11011103	1					
ANR	11011273	Callee	r_type		11011103	0					
ANR	11011274	Identifier	r_type		11011103	0					
ANR	11011275	ArgumentList	& sname2		11011103	1					
ANR	11011276	Argument	& sname2		11011103	0					
ANR	11011277	UnaryOperationExpression	& sname2		11011103	0					
ANR	11011278	UnaryOperator	&		11011103	0					
ANR	11011279	Identifier	sname2		11011103	1					
ANR	11011280	ReturnStatement	return 0 ;	4296:8:136384:136392	11011103	1	True				
ANR	11011281	PrimaryExpression	0		11011103	0					
ANR	11011282	IfStatement	if ( r_is_array ( & sname1 ) )		11011103	14					
ANR	11011283	Condition	r_is_array ( & sname1 )	4298:8:136403:136421	11011103	0	True				
ANR	11011284	CallExpression	r_is_array ( & sname1 )		11011103	0					
ANR	11011285	Callee	r_is_array		11011103	0					
ANR	11011286	Identifier	r_is_array		11011103	0					
ANR	11011287	ArgumentList	& sname1		11011103	1					
ANR	11011288	Argument	& sname1		11011103	0					
ANR	11011289	UnaryOperationExpression	& sname1		11011103	0					
ANR	11011290	UnaryOperator	&		11011103	0					
ANR	11011291	Identifier	sname1		11011103	1					
ANR	11011292	CompoundStatement		30:29:657:657	11011103	1					
ANR	11011293	IfStatement	"if ( ! comparearrays ( i_ctx_p , & sname1 , & sname2 ) )"		11011103	0					
ANR	11011294	Condition	"! comparearrays ( i_ctx_p , & sname1 , & sname2 )"	4299:12:136438:136478	11011103	0	True				
ANR	11011295	UnaryOperationExpression	"! comparearrays ( i_ctx_p , & sname1 , & sname2 )"		11011103	0					
ANR	11011296	UnaryOperator	!		11011103	0					
ANR	11011297	CallExpression	"comparearrays ( i_ctx_p , & sname1 , & sname2 )"		11011103	1					
ANR	11011298	Callee	comparearrays		11011103	0					
ANR	11011299	Identifier	comparearrays		11011103	0					
ANR	11011300	ArgumentList	i_ctx_p		11011103	1					
ANR	11011301	Argument	i_ctx_p		11011103	0					
ANR	11011302	Identifier	i_ctx_p		11011103	0					
ANR	11011303	Argument	& sname1		11011103	1					
ANR	11011304	UnaryOperationExpression	& sname1		11011103	0					
ANR	11011305	UnaryOperator	&		11011103	0					
ANR	11011306	Identifier	sname1		11011103	1					
ANR	11011307	Argument	& sname2		11011103	2					
ANR	11011308	UnaryOperationExpression	& sname2		11011103	0					
ANR	11011309	UnaryOperator	&		11011103	0					
ANR	11011310	Identifier	sname2		11011103	1					
ANR	11011311	ReturnStatement	return 0 ;	4300:12:136493:136501	11011103	1	True				
ANR	11011312	PrimaryExpression	0		11011103	0					
ANR	11011313	ElseStatement	else		11011103	0					
ANR	11011314	CompoundStatement		33:11:747:747	11011103	0					
ANR	11011315	IfStatement	"if ( ! r_has_type ( & sname1 , t_name ) )"		11011103	0					
ANR	11011316	Condition	"! r_has_type ( & sname1 , t_name )"	4302:12:136528:136555	11011103	0	True				
ANR	11011317	UnaryOperationExpression	"! r_has_type ( & sname1 , t_name )"		11011103	0					
ANR	11011318	UnaryOperator	!		11011103	0					
ANR	11011319	CallExpression	"r_has_type ( & sname1 , t_name )"		11011103	1					
ANR	11011320	Callee	r_has_type		11011103	0					
ANR	11011321	Identifier	r_has_type		11011103	0					
ANR	11011322	ArgumentList	& sname1		11011103	1					
ANR	11011323	Argument	& sname1		11011103	0					
ANR	11011324	UnaryOperationExpression	& sname1		11011103	0					
ANR	11011325	UnaryOperator	&		11011103	0					
ANR	11011326	Identifier	sname1		11011103	1					
ANR	11011327	Argument	t_name		11011103	1					
ANR	11011328	Identifier	t_name		11011103	0					
ANR	11011329	ReturnStatement	return 0 ;	4303:12:136570:136578	11011103	1	True				
ANR	11011330	PrimaryExpression	0		11011103	0					
ANR	11011331	IfStatement	"if ( ! name_eq ( & sname1 , & sname2 ) )"		11011103	1					
ANR	11011332	Condition	"! name_eq ( & sname1 , & sname2 )"	4304:12:136592:136617	11011103	0	True				
ANR	11011333	UnaryOperationExpression	"! name_eq ( & sname1 , & sname2 )"		11011103	0					
ANR	11011334	UnaryOperator	!		11011103	0					
ANR	11011335	CallExpression	"name_eq ( & sname1 , & sname2 )"		11011103	1					
ANR	11011336	Callee	name_eq		11011103	0					
ANR	11011337	Identifier	name_eq		11011103	0					
ANR	11011338	ArgumentList	& sname1		11011103	1					
ANR	11011339	Argument	& sname1		11011103	0					
ANR	11011340	UnaryOperationExpression	& sname1		11011103	0					
ANR	11011341	UnaryOperator	&		11011103	0					
ANR	11011342	Identifier	sname1		11011103	1					
ANR	11011343	Argument	& sname2		11011103	1					
ANR	11011344	UnaryOperationExpression	& sname2		11011103	0					
ANR	11011345	UnaryOperator	&		11011103	0					
ANR	11011346	Identifier	sname2		11011103	1					
ANR	11011347	ReturnStatement	return 0 ;	4305:12:136632:136640	11011103	1	True				
ANR	11011348	PrimaryExpression	0		11011103	0					
ANR	11011349	ExpressionStatement	"code = array_get ( imemory , space , 3 , & sname1 )"	4307:4:136652:136696	11011103	15	True				
ANR	11011350	AssignmentExpression	"code = array_get ( imemory , space , 3 , & sname1 )"		11011103	0		=			
ANR	11011351	Identifier	code		11011103	0					
ANR	11011352	CallExpression	"array_get ( imemory , space , 3 , & sname1 )"		11011103	1					
ANR	11011353	Callee	array_get		11011103	0					
ANR	11011354	Identifier	array_get		11011103	0					
ANR	11011355	ArgumentList	imemory		11011103	1					
ANR	11011356	Argument	imemory		11011103	0					
ANR	11011357	Identifier	imemory		11011103	0					
ANR	11011358	Argument	space		11011103	1					
ANR	11011359	Identifier	space		11011103	0					
ANR	11011360	Argument	3		11011103	2					
ANR	11011361	PrimaryExpression	3		11011103	0					
ANR	11011362	Argument	& sname1		11011103	3					
ANR	11011363	UnaryOperationExpression	& sname1		11011103	0					
ANR	11011364	UnaryOperator	&		11011103	0					
ANR	11011365	Identifier	sname1		11011103	1					
ANR	11011366	IfStatement	if ( code < 0 )		11011103	16					
ANR	11011367	Condition	code < 0	4308:8:136706:136713	11011103	0	True				
ANR	11011368	RelationalExpression	code < 0		11011103	0		<			
ANR	11011369	Identifier	code		11011103	0					
ANR	11011370	PrimaryExpression	0		11011103	1					
ANR	11011371	ReturnStatement	return 0 ;	4309:8:136724:136732	11011103	1	True				
ANR	11011372	PrimaryExpression	0		11011103	0					
ANR	11011373	ExpressionStatement	"code = array_get ( imemory , testspace , 3 , & sname2 )"	4310:4:136738:136786	11011103	17	True				
ANR	11011374	AssignmentExpression	"code = array_get ( imemory , testspace , 3 , & sname2 )"		11011103	0		=			
ANR	11011375	Identifier	code		11011103	0					
ANR	11011376	CallExpression	"array_get ( imemory , testspace , 3 , & sname2 )"		11011103	1					
ANR	11011377	Callee	array_get		11011103	0					
ANR	11011378	Identifier	array_get		11011103	0					
ANR	11011379	ArgumentList	imemory		11011103	1					
ANR	11011380	Argument	imemory		11011103	0					
ANR	11011381	Identifier	imemory		11011103	0					
ANR	11011382	Argument	testspace		11011103	1					
ANR	11011383	Identifier	testspace		11011103	0					
ANR	11011384	Argument	3		11011103	2					
ANR	11011385	PrimaryExpression	3		11011103	0					
ANR	11011386	Argument	& sname2		11011103	3					
ANR	11011387	UnaryOperationExpression	& sname2		11011103	0					
ANR	11011388	UnaryOperator	&		11011103	0					
ANR	11011389	Identifier	sname2		11011103	1					
ANR	11011390	IfStatement	if ( code < 0 )		11011103	18					
ANR	11011391	Condition	code < 0	4311:8:136796:136803	11011103	0	True				
ANR	11011392	RelationalExpression	code < 0		11011103	0		<			
ANR	11011393	Identifier	code		11011103	0					
ANR	11011394	PrimaryExpression	0		11011103	1					
ANR	11011395	ReturnStatement	return 0 ;	4312:8:136814:136822	11011103	1	True				
ANR	11011396	PrimaryExpression	0		11011103	0					
ANR	11011397	ReturnStatement	"return ( comparearrays ( i_ctx_p , & sname1 , & sname2 ) ) ;"	4313:4:136828:136876	11011103	19	True				
ANR	11011398	CallExpression	"comparearrays ( i_ctx_p , & sname1 , & sname2 )"		11011103	0					
ANR	11011399	Callee	comparearrays		11011103	0					
ANR	11011400	Identifier	comparearrays		11011103	0					
ANR	11011401	ArgumentList	i_ctx_p		11011103	1					
ANR	11011402	Argument	i_ctx_p		11011103	0					
ANR	11011403	Identifier	i_ctx_p		11011103	0					
ANR	11011404	Argument	& sname1		11011103	1					
ANR	11011405	UnaryOperationExpression	& sname1		11011103	0					
ANR	11011406	UnaryOperator	&		11011103	0					
ANR	11011407	Identifier	sname1		11011103	1					
ANR	11011408	Argument	& sname2		11011103	2					
ANR	11011409	UnaryOperationExpression	& sname2		11011103	0					
ANR	11011410	UnaryOperator	&		11011103	0					
ANR	11011411	Identifier	sname2		11011103	1					
ANR	11011412	ReturnType	static int		11011103	1					
ANR	11011413	Identifier	devicencompareproc		11011103	2					
ANR	11011414	ParameterList	"i_ctx_t * i_ctx_p , ref * space , ref * testspace"		11011103	3					
ANR	11011415	Parameter	i_ctx_t * i_ctx_p	4268:30:135720:135735	11011103	0	True				
ANR	11011416	ParameterType	i_ctx_t *		11011103	0					
ANR	11011417	Identifier	i_ctx_p		11011103	1					
ANR	11011418	Parameter	ref * space	4268:48:135738:135747	11011103	1	True				
ANR	11011419	ParameterType	ref *		11011103	0					
ANR	11011420	Identifier	space		11011103	1					
ANR	11011421	Parameter	ref * testspace	4268:60:135750:135763	11011103	2	True				
ANR	11011422	ParameterType	ref *		11011103	0					
ANR	11011423	Identifier	testspace		11011103	1					
ANR	11011424	CFGEntryNode	ENTRY		11011103		True				
ANR	11011425	CFGExitNode	EXIT		11011103		True				
ANR	11011426	Symbol	& sname1		11011103						
ANR	11011427	Symbol	comparearrays		11011103						
ANR	11011428	Symbol	name_eq		11011103						
ANR	11011429	Symbol	code		11011103						
ANR	11011430	Symbol	& sname2		11011103						
ANR	11011431	Symbol	array_get		11011103						
ANR	11011432	Symbol	sname1		11011103						
ANR	11011433	Symbol	sname2		11011103						
ANR	11011434	Symbol	space		11011103						
ANR	11011435	Symbol	r_has_type		11011103						
ANR	11011436	Symbol	testspace		11011103						
ANR	11011437	Symbol	i_ctx_p		11011103						
ANR	11011438	Symbol	t_name		11011103						
ANR	11011439	Symbol	imemory		11011103						
ANR	11011440	Symbol	r_is_array		11011103						
ANR	11011441	Symbol	r_type		11011103						
ANR	11011442	Function	deviceninitialproc	4315:0:136880:137281							
ANR	11011443	FunctionDef	"deviceninitialproc (i_ctx_t * i_ctx_p , ref * space)"		11011442	0					
ANR	11011444	CompoundStatement		4316:0:136940:137281	11011442	0					
ANR	11011445	IdentifierDeclStatement	gs_client_color cc ;	4317:4:136946:136964	11011442	0	True				
ANR	11011446	IdentifierDecl	cc		11011442	0					
ANR	11011447	IdentifierDeclType	gs_client_color		11011442	0					
ANR	11011448	Identifier	cc		11011442	1					
ANR	11011449	IdentifierDeclStatement	"int i , num_components , code ;"	4318:4:136970:136997	11011442	1	True				
ANR	11011450	IdentifierDecl	i		11011442	0					
ANR	11011451	IdentifierDeclType	int		11011442	0					
ANR	11011452	Identifier	i		11011442	1					
ANR	11011453	IdentifierDecl	num_components		11011442	1					
ANR	11011454	IdentifierDeclType	int		11011442	0					
ANR	11011455	Identifier	num_components		11011442	1					
ANR	11011456	IdentifierDecl	code		11011442	2					
ANR	11011457	IdentifierDeclType	int		11011442	0					
ANR	11011458	Identifier	code		11011442	1					
ANR	11011459	IdentifierDeclStatement	ref namesarray ;	4319:4:137003:137017	11011442	2	True				
ANR	11011460	IdentifierDecl	namesarray		11011442	0					
ANR	11011461	IdentifierDeclType	ref		11011442	0					
ANR	11011462	Identifier	namesarray		11011442	1					
ANR	11011463	ExpressionStatement	"code = array_get ( imemory , space , 1 , & namesarray )"	4321:4:137024:137072	11011442	3	True				
ANR	11011464	AssignmentExpression	"code = array_get ( imemory , space , 1 , & namesarray )"		11011442	0		=			
ANR	11011465	Identifier	code		11011442	0					
ANR	11011466	CallExpression	"array_get ( imemory , space , 1 , & namesarray )"		11011442	1					
ANR	11011467	Callee	array_get		11011442	0					
ANR	11011468	Identifier	array_get		11011442	0					
ANR	11011469	ArgumentList	imemory		11011442	1					
ANR	11011470	Argument	imemory		11011442	0					
ANR	11011471	Identifier	imemory		11011442	0					
ANR	11011472	Argument	space		11011442	1					
ANR	11011473	Identifier	space		11011442	0					
ANR	11011474	Argument	1		11011442	2					
ANR	11011475	PrimaryExpression	1		11011442	0					
ANR	11011476	Argument	& namesarray		11011442	3					
ANR	11011477	UnaryOperationExpression	& namesarray		11011442	0					
ANR	11011478	UnaryOperator	&		11011442	0					
ANR	11011479	Identifier	namesarray		11011442	1					
ANR	11011480	IfStatement	if ( code < 0 )		11011442	4					
ANR	11011481	Condition	code < 0	4322:8:137082:137089	11011442	0	True				
ANR	11011482	RelationalExpression	code < 0		11011442	0		<			
ANR	11011483	Identifier	code		11011442	0					
ANR	11011484	PrimaryExpression	0		11011442	1					
ANR	11011485	ReturnStatement	return code ;	4323:8:137100:137111	11011442	1	True				
ANR	11011486	Identifier	code		11011442	0					
ANR	11011487	ExpressionStatement	num_components = r_size ( & namesarray )	4324:4:137117:137153	11011442	5	True				
ANR	11011488	AssignmentExpression	num_components = r_size ( & namesarray )		11011442	0		=			
ANR	11011489	Identifier	num_components		11011442	0					
ANR	11011490	CallExpression	r_size ( & namesarray )		11011442	1					
ANR	11011491	Callee	r_size		11011442	0					
ANR	11011492	Identifier	r_size		11011442	0					
ANR	11011493	ArgumentList	& namesarray		11011442	1					
ANR	11011494	Argument	& namesarray		11011442	0					
ANR	11011495	UnaryOperationExpression	& namesarray		11011442	0					
ANR	11011496	UnaryOperator	&		11011442	0					
ANR	11011497	Identifier	namesarray		11011442	1					
ANR	11011498	ExpressionStatement	cc . pattern = 0x00	4325:4:137159:137176	11011442	6	True				
ANR	11011499	AssignmentExpression	cc . pattern = 0x00		11011442	0		=			
ANR	11011500	MemberAccess	cc . pattern		11011442	0					
ANR	11011501	Identifier	cc		11011442	0					
ANR	11011502	Identifier	pattern		11011442	1					
ANR	11011503	PrimaryExpression	0x00		11011442	1					
ANR	11011504	ForStatement	for ( i = 0 ; i < num_components ; i ++ )		11011442	7					
ANR	11011505	ForInit	i = 0 ;	4326:9:137187:137190	11011442	0	True				
ANR	11011506	AssignmentExpression	i = 0		11011442	0		=			
ANR	11011507	Identifier	i		11011442	0					
ANR	11011508	PrimaryExpression	0		11011442	1					
ANR	11011509	Condition	i < num_components	4326:13:137191:137206	11011442	1	True				
ANR	11011510	RelationalExpression	i < num_components		11011442	0		<			
ANR	11011511	Identifier	i		11011442	0					
ANR	11011512	Identifier	num_components		11011442	1					
ANR	11011513	PostIncDecOperationExpression	i ++	4326:30:137208:137210	11011442	2	True				
ANR	11011514	Identifier	i		11011442	0					
ANR	11011515	IncDec	++		11011442	1					
ANR	11011516	ExpressionStatement	cc . paint . values [ i ] = 1.0	4327:8:137221:137245	11011442	3	True				
ANR	11011517	AssignmentExpression	cc . paint . values [ i ] = 1.0		11011442	0		=			
ANR	11011518	ArrayIndexing	cc . paint . values [ i ]		11011442	0					
ANR	11011519	MemberAccess	cc . paint . values		11011442	0					
ANR	11011520	MemberAccess	cc . paint		11011442	0					
ANR	11011521	Identifier	cc		11011442	0					
ANR	11011522	Identifier	paint		11011442	1					
ANR	11011523	Identifier	values		11011442	1					
ANR	11011524	Identifier	i		11011442	1					
ANR	11011525	PrimaryExpression	1.0		11011442	1					
ANR	11011526	ReturnStatement	"return gs_setcolor ( igs , & cc ) ;"	4328:4:137251:137279	11011442	8	True				
ANR	11011527	CallExpression	"gs_setcolor ( igs , & cc )"		11011442	0					
ANR	11011528	Callee	gs_setcolor		11011442	0					
ANR	11011529	Identifier	gs_setcolor		11011442	0					
ANR	11011530	ArgumentList	igs		11011442	1					
ANR	11011531	Argument	igs		11011442	0					
ANR	11011532	Identifier	igs		11011442	0					
ANR	11011533	Argument	& cc		11011442	1					
ANR	11011534	UnaryOperationExpression	& cc		11011442	0					
ANR	11011535	UnaryOperator	&		11011442	0					
ANR	11011536	Identifier	cc		11011442	1					
ANR	11011537	ReturnType	static int		11011442	1					
ANR	11011538	Identifier	deviceninitialproc		11011442	2					
ANR	11011539	ParameterList	"i_ctx_t * i_ctx_p , ref * space"		11011442	3					
ANR	11011540	Parameter	i_ctx_t * i_ctx_p	4315:30:136910:136925	11011442	0	True				
ANR	11011541	ParameterType	i_ctx_t *		11011442	0					
ANR	11011542	Identifier	i_ctx_p		11011442	1					
ANR	11011543	Parameter	ref * space	4315:48:136928:136937	11011442	1	True				
ANR	11011544	ParameterType	ref *		11011442	0					
ANR	11011545	Identifier	space		11011442	1					
ANR	11011546	CFGEntryNode	ENTRY		11011442		True				
ANR	11011547	CFGExitNode	EXIT		11011442		True				
ANR	11011548	Symbol	cc		11011442						
ANR	11011549	Symbol	cc . pattern		11011442						
ANR	11011550	Symbol	code		11011442						
ANR	11011551	Symbol	* cc		11011442						
ANR	11011552	Symbol	array_get		11011442						
ANR	11011553	Symbol	gs_setcolor		11011442						
ANR	11011554	Symbol	i		11011442						
ANR	11011555	Symbol	namesarray		11011442						
ANR	11011556	Symbol	num_components		11011442						
ANR	11011557	Symbol	& cc		11011442						
ANR	11011558	Symbol	space		11011442						
ANR	11011559	Symbol	* cc . paint		11011442						
ANR	11011560	Symbol	* i		11011442						
ANR	11011561	Symbol	igs		11011442						
ANR	11011562	Symbol	* cc . paint . values		11011442						
ANR	11011563	Symbol	i_ctx_p		11011442						
ANR	11011564	Symbol	r_size		11011442						
ANR	11011565	Symbol	cc . paint		11011442						
ANR	11011566	Symbol	& namesarray		11011442						
ANR	11011567	Symbol	imemory		11011442						
ANR	11011568	Symbol	cc . paint . values		11011442						
ANR	11011569	Function	indexed_cont	4337:0:137500:138264							
ANR	11011570	FunctionDef	indexed_cont (i_ctx_t * i_ctx_p)		11011569	0					
ANR	11011571	CompoundStatement		4339:0:137542:138264	11011569	0					
ANR	11011572	IdentifierDeclStatement	os_ptr op = osp ;	4340:4:137548:137563	11011569	0	True				
ANR	11011573	IdentifierDecl	op = osp		11011569	0					
ANR	11011574	IdentifierDeclType	os_ptr		11011569	0					
ANR	11011575	Identifier	op		11011569	1					
ANR	11011576	AssignmentExpression	op = osp		11011569	2		=			
ANR	11011577	Identifier	osp		11011569	0					
ANR	11011578	Identifier	osp		11011569	1					
ANR	11011579	IdentifierDeclStatement	es_ptr ep = esp ;	4341:4:137569:137584	11011569	1	True				
ANR	11011580	IdentifierDecl	ep = esp		11011569	0					
ANR	11011581	IdentifierDeclType	es_ptr		11011569	0					
ANR	11011582	Identifier	ep		11011569	1					
ANR	11011583	AssignmentExpression	ep = esp		11011569	2		=			
ANR	11011584	Identifier	esp		11011569	0					
ANR	11011585	Identifier	esp		11011569	1					
ANR	11011586	IdentifierDeclStatement	int i = ( int ) ep [ csme_index ] . value . intval ;	4342:4:137590:137630	11011569	2	True				
ANR	11011587	IdentifierDecl	i = ( int ) ep [ csme_index ] . value . intval		11011569	0					
ANR	11011588	IdentifierDeclType	int		11011569	0					
ANR	11011589	Identifier	i		11011569	1					
ANR	11011590	AssignmentExpression	i = ( int ) ep [ csme_index ] . value . intval		11011569	2		=			
ANR	11011591	Identifier	i		11011569	0					
ANR	11011592	CastExpression	( int ) ep [ csme_index ] . value . intval		11011569	1					
ANR	11011593	CastTarget	int		11011569	0					
ANR	11011594	MemberAccess	ep [ csme_index ] . value . intval		11011569	1					
ANR	11011595	MemberAccess	ep [ csme_index ] . value		11011569	0					
ANR	11011596	ArrayIndexing	ep [ csme_index ]		11011569	0					
ANR	11011597	Identifier	ep		11011569	0					
ANR	11011598	Identifier	csme_index		11011569	1					
ANR	11011599	Identifier	value		11011569	1					
ANR	11011600	Identifier	intval		11011569	1					
ANR	11011601	IfStatement	if ( i >= 0 )		11011569	3					
ANR	11011602	Condition	i >= 0	4344:8:137641:137646	11011569	0	True				
ANR	11011603	RelationalExpression	i >= 0		11011569	0		>=			
ANR	11011604	Identifier	i		11011569	0					
ANR	11011605	PrimaryExpression	0		11011569	1					
ANR	11011606	CompoundStatement		8:8:203:287	11011569	1					
ANR	11011607	IdentifierDeclStatement	int m = ( int ) ep [ csme_num_components ] . value . intval ;	4345:8:137687:137736	11011569	0	True				
ANR	11011608	IdentifierDecl	m = ( int ) ep [ csme_num_components ] . value . intval		11011569	0					
ANR	11011609	IdentifierDeclType	int		11011569	0					
ANR	11011610	Identifier	m		11011569	1					
ANR	11011611	AssignmentExpression	m = ( int ) ep [ csme_num_components ] . value . intval		11011569	2		=			
ANR	11011612	Identifier	m		11011569	0					
ANR	11011613	CastExpression	( int ) ep [ csme_num_components ] . value . intval		11011569	1					
ANR	11011614	CastTarget	int		11011569	0					
ANR	11011615	MemberAccess	ep [ csme_num_components ] . value . intval		11011569	1					
ANR	11011616	MemberAccess	ep [ csme_num_components ] . value		11011569	0					
ANR	11011617	ArrayIndexing	ep [ csme_num_components ]		11011569	0					
ANR	11011618	Identifier	ep		11011569	0					
ANR	11011619	Identifier	csme_num_components		11011569	1					
ANR	11011620	Identifier	value		11011569	1					
ANR	11011621	Identifier	intval		11011569	1					
ANR	11011622	IdentifierDeclStatement	"int code = float_params ( op , m , & r_ptr ( & ep [ csme_map ] , gs_indexed_map ) -> values [ i * m ] ) ;"	4346:8:137746:137830	11011569	1	True				
ANR	11011623	IdentifierDecl	"code = float_params ( op , m , & r_ptr ( & ep [ csme_map ] , gs_indexed_map ) -> values [ i * m ] )"		11011569	0					
ANR	11011624	IdentifierDeclType	int		11011569	0					
ANR	11011625	Identifier	code		11011569	1					
ANR	11011626	AssignmentExpression	"code = float_params ( op , m , & r_ptr ( & ep [ csme_map ] , gs_indexed_map ) -> values [ i * m ] )"		11011569	2		=			
ANR	11011627	Identifier	code		11011569	0					
ANR	11011628	CallExpression	"float_params ( op , m , & r_ptr ( & ep [ csme_map ] , gs_indexed_map ) -> values [ i * m ] )"		11011569	1					
ANR	11011629	Callee	float_params		11011569	0					
ANR	11011630	Identifier	float_params		11011569	0					
ANR	11011631	ArgumentList	op		11011569	1					
ANR	11011632	Argument	op		11011569	0					
ANR	11011633	Identifier	op		11011569	0					
ANR	11011634	Argument	m		11011569	1					
ANR	11011635	Identifier	m		11011569	0					
ANR	11011636	Argument	"& r_ptr ( & ep [ csme_map ] , gs_indexed_map ) -> values [ i * m ]"		11011569	2					
ANR	11011637	UnaryOperationExpression	"& r_ptr ( & ep [ csme_map ] , gs_indexed_map ) -> values [ i * m ]"		11011569	0					
ANR	11011638	UnaryOperator	&		11011569	0					
ANR	11011639	ArrayIndexing	"r_ptr ( & ep [ csme_map ] , gs_indexed_map ) -> values [ i * m ]"		11011569	1					
ANR	11011640	PtrMemberAccess	"r_ptr ( & ep [ csme_map ] , gs_indexed_map ) -> values"		11011569	0					
ANR	11011641	CallExpression	"r_ptr ( & ep [ csme_map ] , gs_indexed_map )"		11011569	0					
ANR	11011642	Callee	r_ptr		11011569	0					
ANR	11011643	Identifier	r_ptr		11011569	0					
ANR	11011644	ArgumentList	& ep [ csme_map ]		11011569	1					
ANR	11011645	Argument	& ep [ csme_map ]		11011569	0					
ANR	11011646	UnaryOperationExpression	& ep [ csme_map ]		11011569	0					
ANR	11011647	UnaryOperator	&		11011569	0					
ANR	11011648	ArrayIndexing	ep [ csme_map ]		11011569	1					
ANR	11011649	Identifier	ep		11011569	0					
ANR	11011650	Identifier	csme_map		11011569	1					
ANR	11011651	Argument	gs_indexed_map		11011569	1					
ANR	11011652	Identifier	gs_indexed_map		11011569	0					
ANR	11011653	Identifier	values		11011569	1					
ANR	11011654	MultiplicativeExpression	i * m		11011569	1		*			
ANR	11011655	Identifier	i		11011569	0					
ANR	11011656	Identifier	m		11011569	1					
ANR	11011657	IfStatement	if ( code < 0 )		11011569	2					
ANR	11011658	Condition	code < 0	4348:12:137845:137852	11011569	0	True				
ANR	11011659	RelationalExpression	code < 0		11011569	0		<			
ANR	11011660	Identifier	code		11011569	0					
ANR	11011661	PrimaryExpression	0		11011569	1					
ANR	11011662	ReturnStatement	return code ;	4349:12:137867:137878	11011569	1	True				
ANR	11011663	Identifier	code		11011569	0					
ANR	11011664	ExpressionStatement	pop ( m )	4350:8:137888:137894	11011569	3	True				
ANR	11011665	CallExpression	pop ( m )		11011569	0					
ANR	11011666	Callee	pop		11011569	0					
ANR	11011667	Identifier	pop		11011569	0					
ANR	11011668	ArgumentList	m		11011569	1					
ANR	11011669	Argument	m		11011569	0					
ANR	11011670	Identifier	m		11011569	0					
ANR	11011671	ExpressionStatement	op -= m	4351:8:137904:137911	11011569	4	True				
ANR	11011672	AssignmentExpression	op -= m		11011569	0		-=			
ANR	11011673	Identifier	op		11011569	0					
ANR	11011674	Identifier	m		11011569	1					
ANR	11011675	IfStatement	if ( i == ( int ) ep [ csme_hival ] . value . intval )		11011569	5					
ANR	11011676	Condition	i == ( int ) ep [ csme_hival ] . value . intval	4352:12:137925:137961	11011569	0	True				
ANR	11011677	EqualityExpression	i == ( int ) ep [ csme_hival ] . value . intval		11011569	0		==			
ANR	11011678	Identifier	i		11011569	0					
ANR	11011679	CastExpression	( int ) ep [ csme_hival ] . value . intval		11011569	1					
ANR	11011680	CastTarget	int		11011569	0					
ANR	11011681	MemberAccess	ep [ csme_hival ] . value . intval		11011569	1					
ANR	11011682	MemberAccess	ep [ csme_hival ] . value		11011569	0					
ANR	11011683	ArrayIndexing	ep [ csme_hival ]		11011569	0					
ANR	11011684	Identifier	ep		11011569	0					
ANR	11011685	Identifier	csme_hival		11011569	1					
ANR	11011686	Identifier	value		11011569	1					
ANR	11011687	Identifier	intval		11011569	1					
ANR	11011688	CompoundStatement		14:51:421:421	11011569	1					
ANR	11011689	ExpressionStatement	esp -= num_csme	4353:12:137994:138009	11011569	0	True				
ANR	11011690	AssignmentExpression	esp -= num_csme		11011569	0		-=			
ANR	11011691	Identifier	esp		11011569	0					
ANR	11011692	Identifier	num_csme		11011569	1					
ANR	11011693	ReturnStatement	return o_pop_estack ;	4354:12:138023:138042	11011569	1	True				
ANR	11011694	Identifier	o_pop_estack		11011569	0					
ANR	11011695	ExpressionStatement	push ( 1 )	4357:4:138064:138071	11011569	4	True				
ANR	11011696	CallExpression	push ( 1 )		11011569	0					
ANR	11011697	Callee	push		11011569	0					
ANR	11011698	Identifier	push		11011569	0					
ANR	11011699	ArgumentList	1		11011569	1					
ANR	11011700	Argument	1		11011569	0					
ANR	11011701	PrimaryExpression	1		11011569	0					
ANR	11011702	ExpressionStatement	ep [ csme_index ] . value . intval = ++ i	4358:4:138077:138110	11011569	5	True				
ANR	11011703	AssignmentExpression	ep [ csme_index ] . value . intval = ++ i		11011569	0		=			
ANR	11011704	MemberAccess	ep [ csme_index ] . value . intval		11011569	0					
ANR	11011705	MemberAccess	ep [ csme_index ] . value		11011569	0					
ANR	11011706	ArrayIndexing	ep [ csme_index ]		11011569	0					
ANR	11011707	Identifier	ep		11011569	0					
ANR	11011708	Identifier	csme_index		11011569	1					
ANR	11011709	Identifier	value		11011569	1					
ANR	11011710	Identifier	intval		11011569	1					
ANR	11011711	UnaryExpression	++ i		11011569	1					
ANR	11011712	IncDec	++		11011569	0					
ANR	11011713	Identifier	i		11011569	1					
ANR	11011714	ExpressionStatement	"make_int ( op , i )"	4359:4:138116:138131	11011569	6	True				
ANR	11011715	CallExpression	"make_int ( op , i )"		11011569	0					
ANR	11011716	Callee	make_int		11011569	0					
ANR	11011717	Identifier	make_int		11011569	0					
ANR	11011718	ArgumentList	op		11011569	1					
ANR	11011719	Argument	op		11011569	0					
ANR	11011720	Identifier	op		11011569	0					
ANR	11011721	Argument	i		11011569	1					
ANR	11011722	Identifier	i		11011569	0					
ANR	11011723	ExpressionStatement	"make_op_estack ( ep + 1 , indexed_cont )"	4360:4:138137:138173	11011569	7	True				
ANR	11011724	CallExpression	"make_op_estack ( ep + 1 , indexed_cont )"		11011569	0					
ANR	11011725	Callee	make_op_estack		11011569	0					
ANR	11011726	Identifier	make_op_estack		11011569	0					
ANR	11011727	ArgumentList	ep + 1		11011569	1					
ANR	11011728	Argument	ep + 1		11011569	0					
ANR	11011729	AdditiveExpression	ep + 1		11011569	0		+			
ANR	11011730	Identifier	ep		11011569	0					
ANR	11011731	PrimaryExpression	1		11011569	1					
ANR	11011732	Argument	indexed_cont		11011569	1					
ANR	11011733	Identifier	indexed_cont		11011569	0					
ANR	11011734	ExpressionStatement	ep [ 2 ] = ep [ csme_proc ]	4361:4:138179:138200	11011569	8	True				
ANR	11011735	AssignmentExpression	ep [ 2 ] = ep [ csme_proc ]		11011569	0		=			
ANR	11011736	ArrayIndexing	ep [ 2 ]		11011569	0					
ANR	11011737	Identifier	ep		11011569	0					
ANR	11011738	PrimaryExpression	2		11011569	1					
ANR	11011739	ArrayIndexing	ep [ csme_proc ]		11011569	1					
ANR	11011740	Identifier	ep		11011569	0					
ANR	11011741	Identifier	csme_proc		11011569	1					
ANR	11011742	ExpressionStatement	esp = ep + 2	4362:4:138224:138236	11011569	9	True				
ANR	11011743	AssignmentExpression	esp = ep + 2		11011569	0		=			
ANR	11011744	Identifier	esp		11011569	0					
ANR	11011745	AdditiveExpression	ep + 2		11011569	1		+			
ANR	11011746	Identifier	ep		11011569	0					
ANR	11011747	PrimaryExpression	2		11011569	1					
ANR	11011748	ReturnStatement	return o_push_estack ;	4363:4:138242:138262	11011569	10	True				
ANR	11011749	Identifier	o_push_estack		11011569	0					
ANR	11011750	ReturnType	static int		11011569	1					
ANR	11011751	Identifier	indexed_cont		11011569	2					
ANR	11011752	ParameterList	i_ctx_t * i_ctx_p		11011569	3					
ANR	11011753	Parameter	i_ctx_t * i_ctx_p	4338:13:137524:137539	11011569	0	True				
ANR	11011754	ParameterType	i_ctx_t *		11011569	0					
ANR	11011755	Identifier	i_ctx_p		11011569	1					
ANR	11011756	CFGEntryNode	ENTRY		11011569		True				
ANR	11011757	CFGExitNode	EXIT		11011569		True				
ANR	11011758	Symbol	* csme_num_components		11011569						
ANR	11011759	Symbol	indexed_cont		11011569						
ANR	11011760	Symbol	esp		11011569						
ANR	11011761	Symbol	code		11011569						
ANR	11011762	Symbol	ep [ csme_hival ] . value		11011569						
ANR	11011763	Symbol	csme_proc		11011569						
ANR	11011764	Symbol	num_csme		11011569						
ANR	11011765	Symbol	o_pop_estack		11011569						
ANR	11011766	Symbol	ep [ csme_index ] . value . intval		11011569						
ANR	11011767	Symbol	osp		11011569						
ANR	11011768	Symbol	r_ptr		11011569						
ANR	11011769	Symbol	* csme_proc		11011569						
ANR	11011770	Symbol	csme_map		11011569						
ANR	11011771	Symbol	ep [ csme_num_components ] . value . intval		11011569						
ANR	11011772	Symbol	gs_indexed_map		11011569						
ANR	11011773	Symbol	o_push_estack		11011569						
ANR	11011774	Symbol	op		11011569						
ANR	11011775	Symbol	* csme_hival		11011569						
ANR	11011776	Symbol	ep [ csme_index ] . value		11011569						
ANR	11011777	Symbol	float_params		11011569						
ANR	11011778	Symbol	csme_hival		11011569						
ANR	11011779	Symbol	i		11011569						
ANR	11011780	Symbol	csme_index		11011569						
ANR	11011781	Symbol	ep		11011569						
ANR	11011782	Symbol	m		11011569						
ANR	11011783	Symbol	"r_ptr ( & ep [ csme_map ] , gs_indexed_map ) -> values"		11011569						
ANR	11011784	Symbol	* ep		11011569						
ANR	11011785	Symbol	i_ctx_p		11011569						
ANR	11011786	Symbol	ep [ csme_hival ] . value . intval		11011569						
ANR	11011787	Symbol	csme_num_components		11011569						
ANR	11011788	Symbol	* csme_index		11011569						
ANR	11011789	Symbol	ep [ csme_num_components ] . value		11011569						
ANR	11011790	Symbol	* r_ptr		11011569						
ANR	11011791	Function	setindexedspace	4365:0:138266:142443							
ANR	11011792	FunctionDef	"setindexedspace (i_ctx_t * i_ctx_p , ref * r , int * stage , int * cont , int CIESubst)"		11011791	0					
ANR	11011793	CompoundStatement		4366:0:138357:142443	11011791	0					
ANR	11011794	IdentifierDeclStatement	ref * pproc = & istate -> colorspace [ 0 ] . procs . special . index_proc ;	4367:4:138363:138423	11011791	0	True				
ANR	11011795	IdentifierDecl	* pproc = & istate -> colorspace [ 0 ] . procs . special . index_proc		11011791	0					
ANR	11011796	IdentifierDeclType	ref *		11011791	0					
ANR	11011797	Identifier	pproc		11011791	1					
ANR	11011798	AssignmentExpression	* pproc = & istate -> colorspace [ 0 ] . procs . special . index_proc		11011791	2		=			
ANR	11011799	Identifier	pproc		11011791	0					
ANR	11011800	UnaryOperationExpression	& istate -> colorspace [ 0 ] . procs . special . index_proc		11011791	1					
ANR	11011801	UnaryOperator	&		11011791	0					
ANR	11011802	MemberAccess	istate -> colorspace [ 0 ] . procs . special . index_proc		11011791	1					
ANR	11011803	MemberAccess	istate -> colorspace [ 0 ] . procs . special		11011791	0					
ANR	11011804	MemberAccess	istate -> colorspace [ 0 ] . procs		11011791	0					
ANR	11011805	ArrayIndexing	istate -> colorspace [ 0 ]		11011791	0					
ANR	11011806	PtrMemberAccess	istate -> colorspace		11011791	0					
ANR	11011807	Identifier	istate		11011791	0					
ANR	11011808	Identifier	colorspace		11011791	1					
ANR	11011809	PrimaryExpression	0		11011791	1					
ANR	11011810	Identifier	procs		11011791	1					
ANR	11011811	Identifier	special		11011791	1					
ANR	11011812	Identifier	index_proc		11011791	1					
ANR	11011813	IdentifierDeclStatement	int code = 0 ;	4368:4:138429:138441	11011791	1	True				
ANR	11011814	IdentifierDecl	code = 0		11011791	0					
ANR	11011815	IdentifierDeclType	int		11011791	0					
ANR	11011816	Identifier	code		11011791	1					
ANR	11011817	AssignmentExpression	code = 0		11011791	2		=			
ANR	11011818	Identifier	code		11011791	0					
ANR	11011819	PrimaryExpression	0		11011791	1					
ANR	11011820	IdentifierDeclStatement	uint edepth = ref_stack_count ( & e_stack ) ;	4369:4:138447:138486	11011791	2	True				
ANR	11011821	IdentifierDecl	edepth = ref_stack_count ( & e_stack )		11011791	0					
ANR	11011822	IdentifierDeclType	uint		11011791	0					
ANR	11011823	Identifier	edepth		11011791	1					
ANR	11011824	AssignmentExpression	edepth = ref_stack_count ( & e_stack )		11011791	2		=			
ANR	11011825	Identifier	edepth		11011791	0					
ANR	11011826	CallExpression	ref_stack_count ( & e_stack )		11011791	1					
ANR	11011827	Callee	ref_stack_count		11011791	0					
ANR	11011828	Identifier	ref_stack_count		11011791	0					
ANR	11011829	ArgumentList	& e_stack		11011791	1					
ANR	11011830	Argument	& e_stack		11011791	0					
ANR	11011831	UnaryOperationExpression	& e_stack		11011791	0					
ANR	11011832	UnaryOperator	&		11011791	0					
ANR	11011833	Identifier	e_stack		11011791	1					
ANR	11011834	IdentifierDeclStatement	ref_colorspace cspace_old ;	4370:4:138492:138517	11011791	3	True				
ANR	11011835	IdentifierDecl	cspace_old		11011791	0					
ANR	11011836	IdentifierDeclType	ref_colorspace		11011791	0					
ANR	11011837	Identifier	cspace_old		11011791	1					
ANR	11011838	IdentifierDeclStatement	"ref hival , lookup ;"	4371:4:138523:138540	11011791	4	True				
ANR	11011839	IdentifierDecl	hival		11011791	0					
ANR	11011840	IdentifierDeclType	ref		11011791	0					
ANR	11011841	Identifier	hival		11011791	1					
ANR	11011842	IdentifierDecl	lookup		11011791	1					
ANR	11011843	IdentifierDeclType	ref		11011791	0					
ANR	11011844	Identifier	lookup		11011791	1					
ANR	11011845	IdentifierDeclStatement	gs_color_space * pcs ;	4372:4:138546:138565	11011791	5	True				
ANR	11011846	IdentifierDecl	* pcs		11011791	0					
ANR	11011847	IdentifierDeclType	gs_color_space *		11011791	0					
ANR	11011848	Identifier	pcs		11011791	1					
ANR	11011849	IdentifierDeclStatement	gs_color_space * pcs_base ;	4373:4:138571:138595	11011791	6	True				
ANR	11011850	IdentifierDecl	* pcs_base		11011791	0					
ANR	11011851	IdentifierDeclType	gs_color_space *		11011791	0					
ANR	11011852	Identifier	pcs_base		11011791	1					
ANR	11011853	IdentifierDeclStatement	gs_color_space_index base_type ;	4374:4:138601:138631	11011791	7	True				
ANR	11011854	IdentifierDecl	base_type		11011791	0					
ANR	11011855	IdentifierDeclType	gs_color_space_index		11011791	0					
ANR	11011856	Identifier	base_type		11011791	1					
ANR	11011857	IfStatement	if ( i_ctx_p -> language_level < 2 )		11011791	8					
ANR	11011858	Condition	i_ctx_p -> language_level < 2	4376:8:138642:138668	11011791	0	True				
ANR	11011859	RelationalExpression	i_ctx_p -> language_level < 2		11011791	0		<			
ANR	11011860	PtrMemberAccess	i_ctx_p -> language_level		11011791	0					
ANR	11011861	Identifier	i_ctx_p		11011791	0					
ANR	11011862	Identifier	language_level		11011791	1					
ANR	11011863	PrimaryExpression	2		11011791	1					
ANR	11011864	ExpressionStatement	return_error ( gs_error_undefined )	4377:8:138679:138711	11011791	1	True				
ANR	11011865	CallExpression	return_error ( gs_error_undefined )		11011791	0					
ANR	11011866	Callee	return_error		11011791	0					
ANR	11011867	Identifier	return_error		11011791	0					
ANR	11011868	ArgumentList	gs_error_undefined		11011791	1					
ANR	11011869	Argument	gs_error_undefined		11011791	0					
ANR	11011870	Identifier	gs_error_undefined		11011791	0					
ANR	11011871	ExpressionStatement	* cont = 0	4379:4:138718:138727	11011791	9	True				
ANR	11011872	AssignmentExpression	* cont = 0		11011791	0		=			
ANR	11011873	UnaryOperationExpression	* cont		11011791	0					
ANR	11011874	UnaryOperator	*		11011791	0					
ANR	11011875	Identifier	cont		11011791	1					
ANR	11011876	PrimaryExpression	0		11011791	1					
ANR	11011877	IfStatement	if ( * stage == 1 )		11011791	10					
ANR	11011878	Condition	* stage == 1	4380:8:138737:138747	11011791	0	True				
ANR	11011879	EqualityExpression	* stage == 1		11011791	0		==			
ANR	11011880	UnaryOperationExpression	* stage		11011791	0					
ANR	11011881	UnaryOperator	*		11011791	0					
ANR	11011882	Identifier	stage		11011791	1					
ANR	11011883	PrimaryExpression	1		11011791	1					
ANR	11011884	CompoundStatement		15:21:392:392	11011791	1					
ANR	11011885	ExpressionStatement	* stage = 0	4381:8:138760:138770	11011791	0	True				
ANR	11011886	AssignmentExpression	* stage = 0		11011791	0		=			
ANR	11011887	UnaryOperationExpression	* stage		11011791	0					
ANR	11011888	UnaryOperator	*		11011791	0					
ANR	11011889	Identifier	stage		11011791	1					
ANR	11011890	PrimaryExpression	0		11011791	1					
ANR	11011891	ReturnStatement	return 0 ;	4382:8:138780:138788	11011791	1	True				
ANR	11011892	PrimaryExpression	0		11011791	0					
ANR	11011893	ExpressionStatement	cspace_old = istate -> colorspace [ 0 ]	4385:4:138801:138835	11011791	11	True				
ANR	11011894	AssignmentExpression	cspace_old = istate -> colorspace [ 0 ]		11011791	0		=			
ANR	11011895	Identifier	cspace_old		11011791	0					
ANR	11011896	ArrayIndexing	istate -> colorspace [ 0 ]		11011791	1					
ANR	11011897	PtrMemberAccess	istate -> colorspace		11011791	0					
ANR	11011898	Identifier	istate		11011791	0					
ANR	11011899	Identifier	colorspace		11011791	1					
ANR	11011900	PrimaryExpression	0		11011791	1					
ANR	11011901	ExpressionStatement	pcs_base = gs_currentcolorspace ( igs )	4387:4:138842:138878	11011791	12	True				
ANR	11011902	AssignmentExpression	pcs_base = gs_currentcolorspace ( igs )		11011791	0		=			
ANR	11011903	Identifier	pcs_base		11011791	0					
ANR	11011904	CallExpression	gs_currentcolorspace ( igs )		11011791	1					
ANR	11011905	Callee	gs_currentcolorspace		11011791	0					
ANR	11011906	Identifier	gs_currentcolorspace		11011791	0					
ANR	11011907	ArgumentList	igs		11011791	1					
ANR	11011908	Argument	igs		11011791	0					
ANR	11011909	Identifier	igs		11011791	0					
ANR	11011910	ExpressionStatement	base_type = gs_color_space_get_index ( pcs_base )	4388:4:138884:138930	11011791	13	True				
ANR	11011911	AssignmentExpression	base_type = gs_color_space_get_index ( pcs_base )		11011791	0		=			
ANR	11011912	Identifier	base_type		11011791	0					
ANR	11011913	CallExpression	gs_color_space_get_index ( pcs_base )		11011791	1					
ANR	11011914	Callee	gs_color_space_get_index		11011791	0					
ANR	11011915	Identifier	gs_color_space_get_index		11011791	0					
ANR	11011916	ArgumentList	pcs_base		11011791	1					
ANR	11011917	Argument	pcs_base		11011791	0					
ANR	11011918	Identifier	pcs_base		11011791	0					
ANR	11011919	ExpressionStatement	"code = array_get ( imemory , r , 3 , & lookup )"	4390:4:138937:138977	11011791	14	True				
ANR	11011920	AssignmentExpression	"code = array_get ( imemory , r , 3 , & lookup )"		11011791	0		=			
ANR	11011921	Identifier	code		11011791	0					
ANR	11011922	CallExpression	"array_get ( imemory , r , 3 , & lookup )"		11011791	1					
ANR	11011923	Callee	array_get		11011791	0					
ANR	11011924	Identifier	array_get		11011791	0					
ANR	11011925	ArgumentList	imemory		11011791	1					
ANR	11011926	Argument	imemory		11011791	0					
ANR	11011927	Identifier	imemory		11011791	0					
ANR	11011928	Argument	r		11011791	1					
ANR	11011929	Identifier	r		11011791	0					
ANR	11011930	Argument	3		11011791	2					
ANR	11011931	PrimaryExpression	3		11011791	0					
ANR	11011932	Argument	& lookup		11011791	3					
ANR	11011933	UnaryOperationExpression	& lookup		11011791	0					
ANR	11011934	UnaryOperator	&		11011791	0					
ANR	11011935	Identifier	lookup		11011791	1					
ANR	11011936	IfStatement	if ( code < 0 )		11011791	15					
ANR	11011937	Condition	code < 0	4391:8:138987:138994	11011791	0	True				
ANR	11011938	RelationalExpression	code < 0		11011791	0		<			
ANR	11011939	Identifier	code		11011791	0					
ANR	11011940	PrimaryExpression	0		11011791	1					
ANR	11011941	ReturnStatement	return code ;	4392:8:139005:139016	11011791	1	True				
ANR	11011942	Identifier	code		11011791	0					
ANR	11011943	ExpressionStatement	"code = array_get ( imemory , r , 2 , & hival )"	4393:4:139022:139061	11011791	16	True				
ANR	11011944	AssignmentExpression	"code = array_get ( imemory , r , 2 , & hival )"		11011791	0		=			
ANR	11011945	Identifier	code		11011791	0					
ANR	11011946	CallExpression	"array_get ( imemory , r , 2 , & hival )"		11011791	1					
ANR	11011947	Callee	array_get		11011791	0					
ANR	11011948	Identifier	array_get		11011791	0					
ANR	11011949	ArgumentList	imemory		11011791	1					
ANR	11011950	Argument	imemory		11011791	0					
ANR	11011951	Identifier	imemory		11011791	0					
ANR	11011952	Argument	r		11011791	1					
ANR	11011953	Identifier	r		11011791	0					
ANR	11011954	Argument	2		11011791	2					
ANR	11011955	PrimaryExpression	2		11011791	0					
ANR	11011956	Argument	& hival		11011791	3					
ANR	11011957	UnaryOperationExpression	& hival		11011791	0					
ANR	11011958	UnaryOperator	&		11011791	0					
ANR	11011959	Identifier	hival		11011791	1					
ANR	11011960	IfStatement	if ( code < 0 )		11011791	17					
ANR	11011961	Condition	code < 0	4394:8:139071:139078	11011791	0	True				
ANR	11011962	RelationalExpression	code < 0		11011791	0		<			
ANR	11011963	Identifier	code		11011791	0					
ANR	11011964	PrimaryExpression	0		11011791	1					
ANR	11011965	ReturnStatement	return code ;	4395:8:139089:139100	11011791	1	True				
ANR	11011966	Identifier	code		11011791	0					
ANR	11011967	IfStatement	"if ( r_has_type ( & lookup , t_string ) )"		11011791	18					
ANR	11011968	Condition	"r_has_type ( & lookup , t_string )"	4396:8:139110:139138	11011791	0	True				
ANR	11011969	CallExpression	"r_has_type ( & lookup , t_string )"		11011791	0					
ANR	11011970	Callee	r_has_type		11011791	0					
ANR	11011971	Identifier	r_has_type		11011791	0					
ANR	11011972	ArgumentList	& lookup		11011791	1					
ANR	11011973	Argument	& lookup		11011791	0					
ANR	11011974	UnaryOperationExpression	& lookup		11011791	0					
ANR	11011975	UnaryOperator	&		11011791	0					
ANR	11011976	Identifier	lookup		11011791	1					
ANR	11011977	Argument	t_string		11011791	1					
ANR	11011978	Identifier	t_string		11011791	0					
ANR	11011979	CompoundStatement		33:8:874:888	11011791	1					
ANR	11011980	IdentifierDeclStatement	int num_values = ( hival . value . intval + 1 ) * cs_num_components ( pcs_base ) ;	4397:8:139151:139222	11011791	0	True				
ANR	11011981	IdentifierDecl	num_values = ( hival . value . intval + 1 ) * cs_num_components ( pcs_base )		11011791	0					
ANR	11011982	IdentifierDeclType	int		11011791	0					
ANR	11011983	Identifier	num_values		11011791	1					
ANR	11011984	AssignmentExpression	num_values = ( hival . value . intval + 1 ) * cs_num_components ( pcs_base )		11011791	2		=			
ANR	11011985	Identifier	num_values		11011791	0					
ANR	11011986	MultiplicativeExpression	( hival . value . intval + 1 ) * cs_num_components ( pcs_base )		11011791	1		*			
ANR	11011987	AdditiveExpression	hival . value . intval + 1		11011791	0		+			
ANR	11011988	MemberAccess	hival . value . intval		11011791	0					
ANR	11011989	MemberAccess	hival . value		11011791	0					
ANR	11011990	Identifier	hival		11011791	0					
ANR	11011991	Identifier	value		11011791	1					
ANR	11011992	Identifier	intval		11011791	1					
ANR	11011993	PrimaryExpression	1		11011791	1					
ANR	11011994	CallExpression	cs_num_components ( pcs_base )		11011791	1					
ANR	11011995	Callee	cs_num_components		11011791	0					
ANR	11011996	Identifier	cs_num_components		11011791	0					
ANR	11011997	ArgumentList	pcs_base		11011791	1					
ANR	11011998	Argument	pcs_base		11011791	0					
ANR	11011999	Identifier	pcs_base		11011791	0					
ANR	11012000	IdentifierDeclStatement	byte * data_tmp ;	4398:8:139232:139246	11011791	1	True				
ANR	11012001	IdentifierDecl	* data_tmp		11011791	0					
ANR	11012002	IdentifierDeclType	byte *		11011791	0					
ANR	11012003	Identifier	data_tmp		11011791	1					
ANR	11012004	ExpressionStatement	check_read ( lookup )	4400:8:139257:139275	11011791	2	True				
ANR	11012005	CallExpression	check_read ( lookup )		11011791	0					
ANR	11012006	Callee	check_read		11011791	0					
ANR	11012007	Identifier	check_read		11011791	0					
ANR	11012008	ArgumentList	lookup		11011791	1					
ANR	11012009	Argument	lookup		11011791	0					
ANR	11012010	Identifier	lookup		11011791	0					
ANR	11012011	IfStatement	if ( r_size ( & lookup ) < num_values )		11011791	3					
ANR	11012012	Condition	r_size ( & lookup ) < num_values	4407:12:139615:139642	11011791	0	True				
ANR	11012013	RelationalExpression	r_size ( & lookup ) < num_values		11011791	0		<			
ANR	11012014	CallExpression	r_size ( & lookup )		11011791	0					
ANR	11012015	Callee	r_size		11011791	0					
ANR	11012016	Identifier	r_size		11011791	0					
ANR	11012017	ArgumentList	& lookup		11011791	1					
ANR	11012018	Argument	& lookup		11011791	0					
ANR	11012019	UnaryOperationExpression	& lookup		11011791	0					
ANR	11012020	UnaryOperator	&		11011791	0					
ANR	11012021	Identifier	lookup		11011791	1					
ANR	11012022	Identifier	num_values		11011791	1					
ANR	11012023	ExpressionStatement	return_error ( gs_error_rangecheck )	4408:12:139657:139690	11011791	1	True				
ANR	11012024	CallExpression	return_error ( gs_error_rangecheck )		11011791	0					
ANR	11012025	Callee	return_error		11011791	0					
ANR	11012026	Identifier	return_error		11011791	0					
ANR	11012027	ArgumentList	gs_error_rangecheck		11011791	1					
ANR	11012028	Argument	gs_error_rangecheck		11011791	0					
ANR	11012029	Identifier	gs_error_rangecheck		11011791	0					
ANR	11012030	IfStatement	if ( igs -> icc_manager -> device_named != NULL && ( base_type == gs_color_space_index_Separation || base_type == gs_color_space_index_DeviceN ) )		11011791	4					
ANR	11012031	Condition	igs -> icc_manager -> device_named != NULL && ( base_type == gs_color_space_index_Separation || base_type == gs_color_space_index_DeviceN )	4412:12:139900:140058	11011791	0	True				
ANR	11012032	AndExpression	igs -> icc_manager -> device_named != NULL && ( base_type == gs_color_space_index_Separation || base_type == gs_color_space_index_DeviceN )		11011791	0		&&			
ANR	11012033	EqualityExpression	igs -> icc_manager -> device_named != NULL		11011791	0		!=			
ANR	11012034	PtrMemberAccess	igs -> icc_manager -> device_named		11011791	0					
ANR	11012035	PtrMemberAccess	igs -> icc_manager		11011791	0					
ANR	11012036	Identifier	igs		11011791	0					
ANR	11012037	Identifier	icc_manager		11011791	1					
ANR	11012038	Identifier	device_named		11011791	1					
ANR	11012039	Identifier	NULL		11011791	1					
ANR	11012040	OrExpression	base_type == gs_color_space_index_Separation || base_type == gs_color_space_index_DeviceN		11011791	1		||			
ANR	11012041	EqualityExpression	base_type == gs_color_space_index_Separation		11011791	0		==			
ANR	11012042	Identifier	base_type		11011791	0					
ANR	11012043	Identifier	gs_color_space_index_Separation		11011791	1					
ANR	11012044	EqualityExpression	base_type == gs_color_space_index_DeviceN		11011791	1		==			
ANR	11012045	Identifier	base_type		11011791	0					
ANR	11012046	Identifier	gs_color_space_index_DeviceN		11011791	1					
ANR	11012047	ExpressionStatement	"pcs = gs_cspace_alloc ( imemory , & gs_color_space_type_Indexed_Named )"	4415:12:140073:140139	11011791	1	True				
ANR	11012048	AssignmentExpression	"pcs = gs_cspace_alloc ( imemory , & gs_color_space_type_Indexed_Named )"		11011791	0		=			
ANR	11012049	Identifier	pcs		11011791	0					
ANR	11012050	CallExpression	"gs_cspace_alloc ( imemory , & gs_color_space_type_Indexed_Named )"		11011791	1					
ANR	11012051	Callee	gs_cspace_alloc		11011791	0					
ANR	11012052	Identifier	gs_cspace_alloc		11011791	0					
ANR	11012053	ArgumentList	imemory		11011791	1					
ANR	11012054	Argument	imemory		11011791	0					
ANR	11012055	Identifier	imemory		11011791	0					
ANR	11012056	Argument	& gs_color_space_type_Indexed_Named		11011791	1					
ANR	11012057	UnaryOperationExpression	& gs_color_space_type_Indexed_Named		11011791	0					
ANR	11012058	UnaryOperator	&		11011791	0					
ANR	11012059	Identifier	gs_color_space_type_Indexed_Named		11011791	1					
ANR	11012060	ElseStatement	else		11011791	0					
ANR	11012061	ExpressionStatement	"pcs = gs_cspace_alloc ( imemory , & gs_color_space_type_Indexed )"	4417:12:140166:140226	11011791	0	True				
ANR	11012062	AssignmentExpression	"pcs = gs_cspace_alloc ( imemory , & gs_color_space_type_Indexed )"		11011791	0		=			
ANR	11012063	Identifier	pcs		11011791	0					
ANR	11012064	CallExpression	"gs_cspace_alloc ( imemory , & gs_color_space_type_Indexed )"		11011791	1					
ANR	11012065	Callee	gs_cspace_alloc		11011791	0					
ANR	11012066	Identifier	gs_cspace_alloc		11011791	0					
ANR	11012067	ArgumentList	imemory		11011791	1					
ANR	11012068	Argument	imemory		11011791	0					
ANR	11012069	Identifier	imemory		11011791	0					
ANR	11012070	Argument	& gs_color_space_type_Indexed		11011791	1					
ANR	11012071	UnaryOperationExpression	& gs_color_space_type_Indexed		11011791	0					
ANR	11012072	UnaryOperator	&		11011791	0					
ANR	11012073	Identifier	gs_color_space_type_Indexed		11011791	1					
ANR	11012074	IfStatement	if ( ! pcs )		11011791	5					
ANR	11012075	Condition	! pcs	4418:12:140240:140243	11011791	0	True				
ANR	11012076	UnaryOperationExpression	! pcs		11011791	0					
ANR	11012077	UnaryOperator	!		11011791	0					
ANR	11012078	Identifier	pcs		11011791	1					
ANR	11012079	CompoundStatement		53:18:1888:1888	11011791	1					
ANR	11012080	ExpressionStatement	return_error ( gs_error_VMerror )	4419:12:140260:140290	11011791	0	True				
ANR	11012081	CallExpression	return_error ( gs_error_VMerror )		11011791	0					
ANR	11012082	Callee	return_error		11011791	0					
ANR	11012083	Identifier	return_error		11011791	0					
ANR	11012084	ArgumentList	gs_error_VMerror		11011791	1					
ANR	11012085	Argument	gs_error_VMerror		11011791	0					
ANR	11012086	Identifier	gs_error_VMerror		11011791	0					
ANR	11012087	ExpressionStatement	pcs -> base_space = pcs_base	4421:8:140310:140336	11011791	6	True				
ANR	11012088	AssignmentExpression	pcs -> base_space = pcs_base		11011791	0		=			
ANR	11012089	PtrMemberAccess	pcs -> base_space		11011791	0					
ANR	11012090	Identifier	pcs		11011791	0					
ANR	11012091	Identifier	base_space		11011791	1					
ANR	11012092	Identifier	pcs_base		11011791	1					
ANR	11012093	ExpressionStatement	rc_increment_cs ( pcs_base )	4422:8:140346:140371	11011791	7	True				
ANR	11012094	CallExpression	rc_increment_cs ( pcs_base )		11011791	0					
ANR	11012095	Callee	rc_increment_cs		11011791	0					
ANR	11012096	Identifier	rc_increment_cs		11011791	0					
ANR	11012097	ArgumentList	pcs_base		11011791	1					
ANR	11012098	Argument	pcs_base		11011791	0					
ANR	11012099	Identifier	pcs_base		11011791	0					
ANR	11012100	ExpressionStatement	"data_tmp = ( byte * ) ( pcs -> params . indexed . lookup . table . data = ialloc_string ( lookup . tas . rsize , ""setindexedspace"" ) )"	4424:8:140382:140495	11011791	8	True				
ANR	11012101	AssignmentExpression	"data_tmp = ( byte * ) ( pcs -> params . indexed . lookup . table . data = ialloc_string ( lookup . tas . rsize , ""setindexedspace"" ) )"		11011791	0		=			
ANR	11012102	Identifier	data_tmp		11011791	0					
ANR	11012103	CastExpression	"( byte * ) ( pcs -> params . indexed . lookup . table . data = ialloc_string ( lookup . tas . rsize , ""setindexedspace"" ) )"		11011791	1					
ANR	11012104	CastTarget	byte *		11011791	0					
ANR	11012105	AssignmentExpression	"pcs -> params . indexed . lookup . table . data = ialloc_string ( lookup . tas . rsize , ""setindexedspace"" )"		11011791	1		=			
ANR	11012106	MemberAccess	pcs -> params . indexed . lookup . table . data		11011791	0					
ANR	11012107	MemberAccess	pcs -> params . indexed . lookup . table		11011791	0					
ANR	11012108	MemberAccess	pcs -> params . indexed . lookup		11011791	0					
ANR	11012109	MemberAccess	pcs -> params . indexed		11011791	0					
ANR	11012110	PtrMemberAccess	pcs -> params		11011791	0					
ANR	11012111	Identifier	pcs		11011791	0					
ANR	11012112	Identifier	params		11011791	1					
ANR	11012113	Identifier	indexed		11011791	1					
ANR	11012114	Identifier	lookup		11011791	1					
ANR	11012115	Identifier	table		11011791	1					
ANR	11012116	Identifier	data		11011791	1					
ANR	11012117	CallExpression	"ialloc_string ( lookup . tas . rsize , ""setindexedspace"" )"		11011791	1					
ANR	11012118	Callee	ialloc_string		11011791	0					
ANR	11012119	Identifier	ialloc_string		11011791	0					
ANR	11012120	ArgumentList	lookup . tas . rsize		11011791	1					
ANR	11012121	Argument	lookup . tas . rsize		11011791	0					
ANR	11012122	MemberAccess	lookup . tas . rsize		11011791	0					
ANR	11012123	MemberAccess	lookup . tas		11011791	0					
ANR	11012124	Identifier	lookup		11011791	0					
ANR	11012125	Identifier	tas		11011791	1					
ANR	11012126	Identifier	rsize		11011791	1					
ANR	11012127	Argument	"""setindexedspace"""		11011791	1					
ANR	11012128	PrimaryExpression	"""setindexedspace"""		11011791	0					
ANR	11012129	IfStatement	if ( ! data_tmp )		11011791	9					
ANR	11012130	Condition	! data_tmp	4425:12:140509:140517	11011791	0	True				
ANR	11012131	UnaryOperationExpression	! data_tmp		11011791	0					
ANR	11012132	UnaryOperator	!		11011791	0					
ANR	11012133	Identifier	data_tmp		11011791	1					
ANR	11012134	CompoundStatement		60:23:2162:2162	11011791	1					
ANR	11012135	ExpressionStatement	"rc_decrement ( pcs , ""setindexedspace"" )"	4426:12:140534:140570	11011791	0	True				
ANR	11012136	CallExpression	"rc_decrement ( pcs , ""setindexedspace"" )"		11011791	0					
ANR	11012137	Callee	rc_decrement		11011791	0					
ANR	11012138	Identifier	rc_decrement		11011791	0					
ANR	11012139	ArgumentList	pcs		11011791	1					
ANR	11012140	Argument	pcs		11011791	0					
ANR	11012141	Identifier	pcs		11011791	0					
ANR	11012142	Argument	"""setindexedspace"""		11011791	1					
ANR	11012143	PrimaryExpression	"""setindexedspace"""		11011791	0					
ANR	11012144	ExpressionStatement	return_error ( gs_error_VMerror )	4427:12:140584:140614	11011791	1	True				
ANR	11012145	CallExpression	return_error ( gs_error_VMerror )		11011791	0					
ANR	11012146	Callee	return_error		11011791	0					
ANR	11012147	Identifier	return_error		11011791	0					
ANR	11012148	ArgumentList	gs_error_VMerror		11011791	1					
ANR	11012149	Argument	gs_error_VMerror		11011791	0					
ANR	11012150	Identifier	gs_error_VMerror		11011791	0					
ANR	11012151	ExpressionStatement	"memcpy ( data_tmp , lookup . value . const_bytes , lookup . tas . rsize )"	4430:8:140635:140695	11011791	10	True				
ANR	11012152	CallExpression	"memcpy ( data_tmp , lookup . value . const_bytes , lookup . tas . rsize )"		11011791	0					
ANR	11012153	Callee	memcpy		11011791	0					
ANR	11012154	Identifier	memcpy		11011791	0					
ANR	11012155	ArgumentList	data_tmp		11011791	1					
ANR	11012156	Argument	data_tmp		11011791	0					
ANR	11012157	Identifier	data_tmp		11011791	0					
ANR	11012158	Argument	lookup . value . const_bytes		11011791	1					
ANR	11012159	MemberAccess	lookup . value . const_bytes		11011791	0					
ANR	11012160	MemberAccess	lookup . value		11011791	0					
ANR	11012161	Identifier	lookup		11011791	0					
ANR	11012162	Identifier	value		11011791	1					
ANR	11012163	Identifier	const_bytes		11011791	1					
ANR	11012164	Argument	lookup . tas . rsize		11011791	2					
ANR	11012165	MemberAccess	lookup . tas . rsize		11011791	0					
ANR	11012166	MemberAccess	lookup . tas		11011791	0					
ANR	11012167	Identifier	lookup		11011791	0					
ANR	11012168	Identifier	tas		11011791	1					
ANR	11012169	Identifier	rsize		11011791	1					
ANR	11012170	ExpressionStatement	pcs -> params . indexed . lookup . table . size = num_values	4432:8:140706:140756	11011791	11	True				
ANR	11012171	AssignmentExpression	pcs -> params . indexed . lookup . table . size = num_values		11011791	0		=			
ANR	11012172	MemberAccess	pcs -> params . indexed . lookup . table . size		11011791	0					
ANR	11012173	MemberAccess	pcs -> params . indexed . lookup . table		11011791	0					
ANR	11012174	MemberAccess	pcs -> params . indexed . lookup		11011791	0					
ANR	11012175	MemberAccess	pcs -> params . indexed		11011791	0					
ANR	11012176	PtrMemberAccess	pcs -> params		11011791	0					
ANR	11012177	Identifier	pcs		11011791	0					
ANR	11012178	Identifier	params		11011791	1					
ANR	11012179	Identifier	indexed		11011791	1					
ANR	11012180	Identifier	lookup		11011791	1					
ANR	11012181	Identifier	table		11011791	1					
ANR	11012182	Identifier	size		11011791	1					
ANR	11012183	Identifier	num_values		11011791	1					
ANR	11012184	ExpressionStatement	pcs -> params . indexed . use_proc = 0	4433:8:140766:140798	11011791	12	True				
ANR	11012185	AssignmentExpression	pcs -> params . indexed . use_proc = 0		11011791	0		=			
ANR	11012186	MemberAccess	pcs -> params . indexed . use_proc		11011791	0					
ANR	11012187	MemberAccess	pcs -> params . indexed		11011791	0					
ANR	11012188	PtrMemberAccess	pcs -> params		11011791	0					
ANR	11012189	Identifier	pcs		11011791	0					
ANR	11012190	Identifier	params		11011791	1					
ANR	11012191	Identifier	indexed		11011791	1					
ANR	11012192	Identifier	use_proc		11011791	1					
ANR	11012193	PrimaryExpression	0		11011791	1					
ANR	11012194	ExpressionStatement	make_null ( pproc )	4434:8:140808:140824	11011791	13	True				
ANR	11012195	CallExpression	make_null ( pproc )		11011791	0					
ANR	11012196	Callee	make_null		11011791	0					
ANR	11012197	Identifier	make_null		11011791	0					
ANR	11012198	ArgumentList	pproc		11011791	1					
ANR	11012199	Argument	pproc		11011791	0					
ANR	11012200	Identifier	pproc		11011791	0					
ANR	11012201	ElseStatement	else		11011791	0					
ANR	11012202	CompoundStatement		71:8:2489:2508	11011791	0					
ANR	11012203	IdentifierDeclStatement	gs_indexed_map * map ;	4436:8:140847:140866	11011791	0	True				
ANR	11012204	IdentifierDecl	* map		11011791	0					
ANR	11012205	IdentifierDeclType	gs_indexed_map *		11011791	0					
ANR	11012206	Identifier	map		11011791	1					
ANR	11012207	ExpressionStatement	"code = zcs_begin_map ( i_ctx_p , & map , & lookup , ( hival . value . intval + 1 ) , pcs_base , indexed_cont )"	4443:8:141095:141218	11011791	1	True				
ANR	11012208	AssignmentExpression	"code = zcs_begin_map ( i_ctx_p , & map , & lookup , ( hival . value . intval + 1 ) , pcs_base , indexed_cont )"		11011791	0		=			
ANR	11012209	Identifier	code		11011791	0					
ANR	11012210	CallExpression	"zcs_begin_map ( i_ctx_p , & map , & lookup , ( hival . value . intval + 1 ) , pcs_base , indexed_cont )"		11011791	1					
ANR	11012211	Callee	zcs_begin_map		11011791	0					
ANR	11012212	Identifier	zcs_begin_map		11011791	0					
ANR	11012213	ArgumentList	i_ctx_p		11011791	1					
ANR	11012214	Argument	i_ctx_p		11011791	0					
ANR	11012215	Identifier	i_ctx_p		11011791	0					
ANR	11012216	Argument	& map		11011791	1					
ANR	11012217	UnaryOperationExpression	& map		11011791	0					
ANR	11012218	UnaryOperator	&		11011791	0					
ANR	11012219	Identifier	map		11011791	1					
ANR	11012220	Argument	& lookup		11011791	2					
ANR	11012221	UnaryOperationExpression	& lookup		11011791	0					
ANR	11012222	UnaryOperator	&		11011791	0					
ANR	11012223	Identifier	lookup		11011791	1					
ANR	11012224	Argument	hival . value . intval + 1		11011791	3					
ANR	11012225	AdditiveExpression	hival . value . intval + 1		11011791	0		+			
ANR	11012226	MemberAccess	hival . value . intval		11011791	0					
ANR	11012227	MemberAccess	hival . value		11011791	0					
ANR	11012228	Identifier	hival		11011791	0					
ANR	11012229	Identifier	value		11011791	1					
ANR	11012230	Identifier	intval		11011791	1					
ANR	11012231	PrimaryExpression	1		11011791	1					
ANR	11012232	Argument	pcs_base		11011791	4					
ANR	11012233	Identifier	pcs_base		11011791	0					
ANR	11012234	Argument	indexed_cont		11011791	5					
ANR	11012235	Identifier	indexed_cont		11011791	0					
ANR	11012236	IfStatement	if ( code < 0 )		11011791	2					
ANR	11012237	Condition	code < 0	4445:12:141232:141239	11011791	0	True				
ANR	11012238	RelationalExpression	code < 0		11011791	0		<			
ANR	11012239	Identifier	code		11011791	0					
ANR	11012240	PrimaryExpression	0		11011791	1					
ANR	11012241	ReturnStatement	return code ;	4446:12:141254:141265	11011791	1	True				
ANR	11012242	Identifier	code		11011791	0					
ANR	11012243	IfStatement	if ( igs -> icc_manager -> device_named != NULL && ( base_type == gs_color_space_index_Separation || base_type == gs_color_space_index_DeviceN ) )		11011791	3					
ANR	11012244	Condition	igs -> icc_manager -> device_named != NULL && ( base_type == gs_color_space_index_Separation || base_type == gs_color_space_index_DeviceN )	4447:12:141279:141436	11011791	0	True				
ANR	11012245	AndExpression	igs -> icc_manager -> device_named != NULL && ( base_type == gs_color_space_index_Separation || base_type == gs_color_space_index_DeviceN )		11011791	0		&&			
ANR	11012246	EqualityExpression	igs -> icc_manager -> device_named != NULL		11011791	0		!=			
ANR	11012247	PtrMemberAccess	igs -> icc_manager -> device_named		11011791	0					
ANR	11012248	PtrMemberAccess	igs -> icc_manager		11011791	0					
ANR	11012249	Identifier	igs		11011791	0					
ANR	11012250	Identifier	icc_manager		11011791	1					
ANR	11012251	Identifier	device_named		11011791	1					
ANR	11012252	Identifier	NULL		11011791	1					
ANR	11012253	OrExpression	base_type == gs_color_space_index_Separation || base_type == gs_color_space_index_DeviceN		11011791	1		||			
ANR	11012254	EqualityExpression	base_type == gs_color_space_index_Separation		11011791	0		==			
ANR	11012255	Identifier	base_type		11011791	0					
ANR	11012256	Identifier	gs_color_space_index_Separation		11011791	1					
ANR	11012257	EqualityExpression	base_type == gs_color_space_index_DeviceN		11011791	1		==			
ANR	11012258	Identifier	base_type		11011791	0					
ANR	11012259	Identifier	gs_color_space_index_DeviceN		11011791	1					
ANR	11012260	ExpressionStatement	"pcs = gs_cspace_alloc ( imemory , & gs_color_space_type_Indexed_Named )"	4450:12:141451:141517	11011791	1	True				
ANR	11012261	AssignmentExpression	"pcs = gs_cspace_alloc ( imemory , & gs_color_space_type_Indexed_Named )"		11011791	0		=			
ANR	11012262	Identifier	pcs		11011791	0					
ANR	11012263	CallExpression	"gs_cspace_alloc ( imemory , & gs_color_space_type_Indexed_Named )"		11011791	1					
ANR	11012264	Callee	gs_cspace_alloc		11011791	0					
ANR	11012265	Identifier	gs_cspace_alloc		11011791	0					
ANR	11012266	ArgumentList	imemory		11011791	1					
ANR	11012267	Argument	imemory		11011791	0					
ANR	11012268	Identifier	imemory		11011791	0					
ANR	11012269	Argument	& gs_color_space_type_Indexed_Named		11011791	1					
ANR	11012270	UnaryOperationExpression	& gs_color_space_type_Indexed_Named		11011791	0					
ANR	11012271	UnaryOperator	&		11011791	0					
ANR	11012272	Identifier	gs_color_space_type_Indexed_Named		11011791	1					
ANR	11012273	ElseStatement	else		11011791	0					
ANR	11012274	ExpressionStatement	"pcs = gs_cspace_alloc ( imemory , & gs_color_space_type_Indexed )"	4452:12:141544:141604	11011791	0	True				
ANR	11012275	AssignmentExpression	"pcs = gs_cspace_alloc ( imemory , & gs_color_space_type_Indexed )"		11011791	0		=			
ANR	11012276	Identifier	pcs		11011791	0					
ANR	11012277	CallExpression	"gs_cspace_alloc ( imemory , & gs_color_space_type_Indexed )"		11011791	1					
ANR	11012278	Callee	gs_cspace_alloc		11011791	0					
ANR	11012279	Identifier	gs_cspace_alloc		11011791	0					
ANR	11012280	ArgumentList	imemory		11011791	1					
ANR	11012281	Argument	imemory		11011791	0					
ANR	11012282	Identifier	imemory		11011791	0					
ANR	11012283	Argument	& gs_color_space_type_Indexed		11011791	1					
ANR	11012284	UnaryOperationExpression	& gs_color_space_type_Indexed		11011791	0					
ANR	11012285	UnaryOperator	&		11011791	0					
ANR	11012286	Identifier	gs_color_space_type_Indexed		11011791	1					
ANR	11012287	ExpressionStatement	pcs -> base_space = pcs_base	4453:8:141614:141640	11011791	4	True				
ANR	11012288	AssignmentExpression	pcs -> base_space = pcs_base		11011791	0		=			
ANR	11012289	PtrMemberAccess	pcs -> base_space		11011791	0					
ANR	11012290	Identifier	pcs		11011791	0					
ANR	11012291	Identifier	base_space		11011791	1					
ANR	11012292	Identifier	pcs_base		11011791	1					
ANR	11012293	ExpressionStatement	rc_increment_cs ( pcs_base )	4454:8:141650:141675	11011791	5	True				
ANR	11012294	CallExpression	rc_increment_cs ( pcs_base )		11011791	0					
ANR	11012295	Callee	rc_increment_cs		11011791	0					
ANR	11012296	Identifier	rc_increment_cs		11011791	0					
ANR	11012297	ArgumentList	pcs_base		11011791	1					
ANR	11012298	Argument	pcs_base		11011791	0					
ANR	11012299	Identifier	pcs_base		11011791	0					
ANR	11012300	ExpressionStatement	pcs -> params . indexed . use_proc = 1	4455:8:141685:141717	11011791	6	True				
ANR	11012301	AssignmentExpression	pcs -> params . indexed . use_proc = 1		11011791	0		=			
ANR	11012302	MemberAccess	pcs -> params . indexed . use_proc		11011791	0					
ANR	11012303	MemberAccess	pcs -> params . indexed		11011791	0					
ANR	11012304	PtrMemberAccess	pcs -> params		11011791	0					
ANR	11012305	Identifier	pcs		11011791	0					
ANR	11012306	Identifier	params		11011791	1					
ANR	11012307	Identifier	indexed		11011791	1					
ANR	11012308	Identifier	use_proc		11011791	1					
ANR	11012309	PrimaryExpression	1		11011791	1					
ANR	11012310	ExpressionStatement	* pproc = lookup	4456:8:141727:141742	11011791	7	True				
ANR	11012311	AssignmentExpression	* pproc = lookup		11011791	0		=			
ANR	11012312	UnaryOperationExpression	* pproc		11011791	0					
ANR	11012313	UnaryOperator	*		11011791	0					
ANR	11012314	Identifier	pproc		11011791	1					
ANR	11012315	Identifier	lookup		11011791	1					
ANR	11012316	ExpressionStatement	map -> proc . lookup_index = lookup_indexed_map	4457:8:141752:141795	11011791	8	True				
ANR	11012317	AssignmentExpression	map -> proc . lookup_index = lookup_indexed_map		11011791	0		=			
ANR	11012318	MemberAccess	map -> proc . lookup_index		11011791	0					
ANR	11012319	PtrMemberAccess	map -> proc		11011791	0					
ANR	11012320	Identifier	map		11011791	0					
ANR	11012321	Identifier	proc		11011791	1					
ANR	11012322	Identifier	lookup_index		11011791	1					
ANR	11012323	Identifier	lookup_indexed_map		11011791	1					
ANR	11012324	ExpressionStatement	pcs -> params . indexed . lookup . map = map	4458:8:141805:141841	11011791	9	True				
ANR	11012325	AssignmentExpression	pcs -> params . indexed . lookup . map = map		11011791	0		=			
ANR	11012326	MemberAccess	pcs -> params . indexed . lookup . map		11011791	0					
ANR	11012327	MemberAccess	pcs -> params . indexed . lookup		11011791	0					
ANR	11012328	MemberAccess	pcs -> params . indexed		11011791	0					
ANR	11012329	PtrMemberAccess	pcs -> params		11011791	0					
ANR	11012330	Identifier	pcs		11011791	0					
ANR	11012331	Identifier	params		11011791	1					
ANR	11012332	Identifier	indexed		11011791	1					
ANR	11012333	Identifier	lookup		11011791	1					
ANR	11012334	Identifier	map		11011791	1					
ANR	11012335	Identifier	map		11011791	1					
ANR	11012336	ExpressionStatement	pcs -> params . indexed . hival = hival . value . intval	4460:4:141853:141899	11011791	19	True				
ANR	11012337	AssignmentExpression	pcs -> params . indexed . hival = hival . value . intval		11011791	0		=			
ANR	11012338	MemberAccess	pcs -> params . indexed . hival		11011791	0					
ANR	11012339	MemberAccess	pcs -> params . indexed		11011791	0					
ANR	11012340	PtrMemberAccess	pcs -> params		11011791	0					
ANR	11012341	Identifier	pcs		11011791	0					
ANR	11012342	Identifier	params		11011791	1					
ANR	11012343	Identifier	indexed		11011791	1					
ANR	11012344	Identifier	hival		11011791	1					
ANR	11012345	MemberAccess	hival . value . intval		11011791	1					
ANR	11012346	MemberAccess	hival . value		11011791	0					
ANR	11012347	Identifier	hival		11011791	0					
ANR	11012348	Identifier	value		11011791	1					
ANR	11012349	Identifier	intval		11011791	1					
ANR	11012350	ExpressionStatement	pcs -> params . indexed . n_comps = cs_num_components ( pcs_base )	4461:4:141905:141962	11011791	20	True				
ANR	11012351	AssignmentExpression	pcs -> params . indexed . n_comps = cs_num_components ( pcs_base )		11011791	0		=			
ANR	11012352	MemberAccess	pcs -> params . indexed . n_comps		11011791	0					
ANR	11012353	MemberAccess	pcs -> params . indexed		11011791	0					
ANR	11012354	PtrMemberAccess	pcs -> params		11011791	0					
ANR	11012355	Identifier	pcs		11011791	0					
ANR	11012356	Identifier	params		11011791	1					
ANR	11012357	Identifier	indexed		11011791	1					
ANR	11012358	Identifier	n_comps		11011791	1					
ANR	11012359	CallExpression	cs_num_components ( pcs_base )		11011791	1					
ANR	11012360	Callee	cs_num_components		11011791	0					
ANR	11012361	Identifier	cs_num_components		11011791	0					
ANR	11012362	ArgumentList	pcs_base		11011791	1					
ANR	11012363	Argument	pcs_base		11011791	0					
ANR	11012364	Identifier	pcs_base		11011791	0					
ANR	11012365	ExpressionStatement	"code = gs_setcolorspace ( igs , pcs )"	4462:4:141968:142001	11011791	21	True				
ANR	11012366	AssignmentExpression	"code = gs_setcolorspace ( igs , pcs )"		11011791	0		=			
ANR	11012367	Identifier	code		11011791	0					
ANR	11012368	CallExpression	"gs_setcolorspace ( igs , pcs )"		11011791	1					
ANR	11012369	Callee	gs_setcolorspace		11011791	0					
ANR	11012370	Identifier	gs_setcolorspace		11011791	0					
ANR	11012371	ArgumentList	igs		11011791	1					
ANR	11012372	Argument	igs		11011791	0					
ANR	11012373	Identifier	igs		11011791	0					
ANR	11012374	Argument	pcs		11011791	1					
ANR	11012375	Identifier	pcs		11011791	0					
ANR	11012376	ExpressionStatement	"rc_decrement_only_cs ( pcs , ""setindexedspace"" )"	4464:4:142053:142097	11011791	22	True				
ANR	11012377	CallExpression	"rc_decrement_only_cs ( pcs , ""setindexedspace"" )"		11011791	0					
ANR	11012378	Callee	rc_decrement_only_cs		11011791	0					
ANR	11012379	Identifier	rc_decrement_only_cs		11011791	0					
ANR	11012380	ArgumentList	pcs		11011791	1					
ANR	11012381	Argument	pcs		11011791	0					
ANR	11012382	Identifier	pcs		11011791	0					
ANR	11012383	Argument	"""setindexedspace"""		11011791	1					
ANR	11012384	PrimaryExpression	"""setindexedspace"""		11011791	0					
ANR	11012385	IfStatement	if ( code < 0 )		11011791	23					
ANR	11012386	Condition	code < 0	4465:8:142107:142114	11011791	0	True				
ANR	11012387	RelationalExpression	code < 0		11011791	0		<			
ANR	11012388	Identifier	code		11011791	0					
ANR	11012389	PrimaryExpression	0		11011791	1					
ANR	11012390	CompoundStatement		100:18:3759:3759	11011791	1					
ANR	11012391	ExpressionStatement	istate -> colorspace [ 0 ] = cspace_old	4466:8:142127:142161	11011791	0	True				
ANR	11012392	AssignmentExpression	istate -> colorspace [ 0 ] = cspace_old		11011791	0		=			
ANR	11012393	ArrayIndexing	istate -> colorspace [ 0 ]		11011791	0					
ANR	11012394	PtrMemberAccess	istate -> colorspace		11011791	0					
ANR	11012395	Identifier	istate		11011791	0					
ANR	11012396	Identifier	colorspace		11011791	1					
ANR	11012397	PrimaryExpression	0		11011791	1					
ANR	11012398	Identifier	cspace_old		11011791	1					
ANR	11012399	ExpressionStatement	"ref_stack_pop_to ( & e_stack , edepth )"	4467:8:142171:142205	11011791	1	True				
ANR	11012400	CallExpression	"ref_stack_pop_to ( & e_stack , edepth )"		11011791	0					
ANR	11012401	Callee	ref_stack_pop_to		11011791	0					
ANR	11012402	Identifier	ref_stack_pop_to		11011791	0					
ANR	11012403	ArgumentList	& e_stack		11011791	1					
ANR	11012404	Argument	& e_stack		11011791	0					
ANR	11012405	UnaryOperationExpression	& e_stack		11011791	0					
ANR	11012406	UnaryOperator	&		11011791	0					
ANR	11012407	Identifier	e_stack		11011791	1					
ANR	11012408	Argument	edepth		11011791	1					
ANR	11012409	Identifier	edepth		11011791	0					
ANR	11012410	ReturnStatement	return code ;	4468:8:142215:142226	11011791	2	True				
ANR	11012411	Identifier	code		11011791	0					
ANR	11012412	ExpressionStatement	* stage = 0	4470:4:142238:142248	11011791	24	True				
ANR	11012413	AssignmentExpression	* stage = 0		11011791	0		=			
ANR	11012414	UnaryOperationExpression	* stage		11011791	0					
ANR	11012415	UnaryOperator	*		11011791	0					
ANR	11012416	Identifier	stage		11011791	1					
ANR	11012417	PrimaryExpression	0		11011791	1					
ANR	11012418	IfStatement	if ( ref_stack_count ( & e_stack ) == edepth )		11011791	25					
ANR	11012419	Condition	ref_stack_count ( & e_stack ) == edepth	4471:8:142258:142292	11011791	0	True				
ANR	11012420	EqualityExpression	ref_stack_count ( & e_stack ) == edepth		11011791	0		==			
ANR	11012421	CallExpression	ref_stack_count ( & e_stack )		11011791	0					
ANR	11012422	Callee	ref_stack_count		11011791	0					
ANR	11012423	Identifier	ref_stack_count		11011791	0					
ANR	11012424	ArgumentList	& e_stack		11011791	1					
ANR	11012425	Argument	& e_stack		11011791	0					
ANR	11012426	UnaryOperationExpression	& e_stack		11011791	0					
ANR	11012427	UnaryOperator	&		11011791	0					
ANR	11012428	Identifier	e_stack		11011791	1					
ANR	11012429	Identifier	edepth		11011791	1					
ANR	11012430	CompoundStatement		106:45:3937:3937	11011791	1					
ANR	11012431	ReturnStatement	return 0 ;	4472:8:142305:142313	11011791	0	True				
ANR	11012432	PrimaryExpression	0		11011791	0					
ANR	11012433	ElseStatement	else		11011791	0					
ANR	11012434	CompoundStatement		108:11:3968:3968	11011791	0					
ANR	11012435	ExpressionStatement	* cont = 1	4474:8:142336:142345	11011791	0	True				
ANR	11012436	AssignmentExpression	* cont = 1		11011791	0		=			
ANR	11012437	UnaryOperationExpression	* cont		11011791	0					
ANR	11012438	UnaryOperator	*		11011791	0					
ANR	11012439	Identifier	cont		11011791	1					
ANR	11012440	PrimaryExpression	1		11011791	1					
ANR	11012441	ExpressionStatement	* stage = 1	4475:8:142355:142365	11011791	1	True				
ANR	11012442	AssignmentExpression	* stage = 1		11011791	0		=			
ANR	11012443	UnaryOperationExpression	* stage		11011791	0					
ANR	11012444	UnaryOperator	*		11011791	0					
ANR	11012445	Identifier	stage		11011791	1					
ANR	11012446	PrimaryExpression	1		11011791	1					
ANR	11012447	ReturnStatement	return o_push_estack ;	4476:8:142375:142395	11011791	2	True				
ANR	11012448	Identifier	o_push_estack		11011791	0					
ANR	11012449	ReturnType	static int		11011791	1					
ANR	11012450	Identifier	setindexedspace		11011791	2					
ANR	11012451	ParameterList	"i_ctx_t * i_ctx_p , ref * r , int * stage , int * cont , int CIESubst"		11011791	3					
ANR	11012452	Parameter	i_ctx_t * i_ctx_p	4365:27:138293:138309	11011791	0	True				
ANR	11012453	ParameterType	i_ctx_t *		11011791	0					
ANR	11012454	Identifier	i_ctx_p		11011791	1					
ANR	11012455	Parameter	ref * r	4365:46:138312:138317	11011791	1	True				
ANR	11012456	ParameterType	ref *		11011791	0					
ANR	11012457	Identifier	r		11011791	1					
ANR	11012458	Parameter	int * stage	4365:54:138320:138329	11011791	2	True				
ANR	11012459	ParameterType	int *		11011791	0					
ANR	11012460	Identifier	stage		11011791	1					
ANR	11012461	Parameter	int * cont	4365:66:138332:138340	11011791	3	True				
ANR	11012462	ParameterType	int *		11011791	0					
ANR	11012463	Identifier	cont		11011791	1					
ANR	11012464	Parameter	int CIESubst	4365:77:138343:138354	11011791	4	True				
ANR	11012465	ParameterType	int		11011791	0					
ANR	11012466	Identifier	CIESubst		11011791	1					
ANR	11012467	CFGEntryNode	ENTRY		11011791		True				
ANR	11012468	CFGExitNode	EXIT		11011791		True				
ANR	11012469	Symbol	& gs_color_space_type_Indexed		11011791						
ANR	11012470	Symbol	indexed_cont		11011791						
ANR	11012471	Symbol	i_ctx_p -> language_level		11011791						
ANR	11012472	Symbol	gs_error_rangecheck		11011791						
ANR	11012473	Symbol	zcs_begin_map		11011791						
ANR	11012474	Symbol	pcs -> params . indexed . n_comps		11011791						
ANR	11012475	Symbol	* map		11011791						
ANR	11012476	Symbol	gs_error_undefined		11011791						
ANR	11012477	Symbol	* pcs		11011791						
ANR	11012478	Symbol	* istate		11011791						
ANR	11012479	Symbol	gs_color_space_index_DeviceN		11011791						
ANR	11012480	Symbol	& gs_color_space_type_Indexed_Named		11011791						
ANR	11012481	Symbol	r_has_type		11011791						
ANR	11012482	Symbol	lookup . value		11011791						
ANR	11012483	Symbol	igs		11011791						
ANR	11012484	Symbol	gs_currentcolorspace		11011791						
ANR	11012485	Symbol	hival . value . intval		11011791						
ANR	11012486	Symbol	istate -> colorspace [ 0 ] . procs		11011791						
ANR	11012487	Symbol	pproc		11011791						
ANR	11012488	Symbol	* i_ctx_p		11011791						
ANR	11012489	Symbol	istate -> colorspace		11011791						
ANR	11012490	Symbol	imemory		11011791						
ANR	11012491	Symbol	cont		11011791						
ANR	11012492	Symbol	NULL		11011791						
ANR	11012493	Symbol	pcs -> params . indexed		11011791						
ANR	11012494	Symbol	data_tmp		11011791						
ANR	11012495	Symbol	map -> proc		11011791						
ANR	11012496	Symbol	pcs -> params . indexed . lookup . table . data		11011791						
ANR	11012497	Symbol	igs -> icc_manager -> device_named		11011791						
ANR	11012498	Symbol	istate -> colorspace [ 0 ] . procs . special		11011791						
ANR	11012499	Symbol	& hival		11011791						
ANR	11012500	Symbol	i_ctx_p		11011791						
ANR	11012501	Symbol	& istate -> colorspace [ 0 ] . procs . special		11011791						
ANR	11012502	Symbol	cs_num_components		11011791						
ANR	11012503	Symbol	ref_stack_count		11011791						
ANR	11012504	Symbol	lookup . tas . rsize		11011791						
ANR	11012505	Symbol	gs_color_space_get_index		11011791						
ANR	11012506	Symbol	lookup . value . const_bytes		11011791						
ANR	11012507	Symbol	* * istate		11011791						
ANR	11012508	Symbol	* igs		11011791						
ANR	11012509	Symbol	gs_color_space_index_Separation		11011791						
ANR	11012510	Symbol	* igs -> icc_manager		11011791						
ANR	11012511	Symbol	code		11011791						
ANR	11012512	Symbol	pcs -> params . indexed . use_proc		11011791						
ANR	11012513	Symbol	& map		11011791						
ANR	11012514	Symbol	gs_setcolorspace		11011791						
ANR	11012515	Symbol	ialloc_string		11011791						
ANR	11012516	Symbol	& istate -> colorspace [ 0 ] . procs		11011791						
ANR	11012517	Symbol	base_type		11011791						
ANR	11012518	Symbol	pcs -> params . indexed . lookup		11011791						
ANR	11012519	Symbol	r_size		11011791						
ANR	11012520	Symbol	map		11011791						
ANR	11012521	Symbol	CIESubst		11011791						
ANR	11012522	Symbol	* istate -> colorspace		11011791						
ANR	11012523	Symbol	hival . value		11011791						
ANR	11012524	Symbol	map -> proc . lookup_index		11011791						
ANR	11012525	Symbol	pcs -> params . indexed . hival		11011791						
ANR	11012526	Symbol	o_push_estack		11011791						
ANR	11012527	Symbol	lookup		11011791						
ANR	11012528	Symbol	pcs		11011791						
ANR	11012529	Symbol	igs -> icc_manager		11011791						
ANR	11012530	Symbol	pcs_base		11011791						
ANR	11012531	Symbol	* stage		11011791						
ANR	11012532	Symbol	pcs -> params . indexed . lookup . table		11011791						
ANR	11012533	Symbol	array_get		11011791						
ANR	11012534	Symbol	pcs -> params		11011791						
ANR	11012535	Symbol	* * igs		11011791						
ANR	11012536	Symbol	lookup . tas		11011791						
ANR	11012537	Symbol	hival		11011791						
ANR	11012538	Symbol	lookup_indexed_map		11011791						
ANR	11012539	Symbol	* pproc		11011791						
ANR	11012540	Symbol	pcs -> params . indexed . lookup . map		11011791						
ANR	11012541	Symbol	num_values		11011791						
ANR	11012542	Symbol	t_string		11011791						
ANR	11012543	Symbol	gs_error_VMerror		11011791						
ANR	11012544	Symbol	r		11011791						
ANR	11012545	Symbol	pcs -> base_space		11011791						
ANR	11012546	Symbol	stage		11011791						
ANR	11012547	Symbol	edepth		11011791						
ANR	11012548	Symbol	* cont		11011791						
ANR	11012549	Symbol	pcs -> params . indexed . lookup . table . size		11011791						
ANR	11012550	Symbol	cspace_old		11011791						
ANR	11012551	Symbol	& lookup		11011791						
ANR	11012552	Symbol	gs_cspace_alloc		11011791						
ANR	11012553	Symbol	& istate -> colorspace [ 0 ] . procs . special . index_proc		11011791						
ANR	11012554	Symbol	& e_stack		11011791						
ANR	11012555	Symbol	istate		11011791						
ANR	11012556	Function	validateindexedspace	4479:0:142445:144299							
ANR	11012557	FunctionDef	"validateindexedspace (i_ctx_t * i_ctx_p , ref * * space)"		11012556	0					
ANR	11012558	CompoundStatement		4480:0:142509:144299	11012556	0					
ANR	11012559	IdentifierDeclStatement	int code = 0 ;	4481:4:142515:142527	11012556	0	True				
ANR	11012560	IdentifierDecl	code = 0		11012556	0					
ANR	11012561	IdentifierDeclType	int		11012556	0					
ANR	11012562	Identifier	code		11012556	1					
ANR	11012563	AssignmentExpression	code = 0		11012556	2		=			
ANR	11012564	Identifier	code		11012556	0					
ANR	11012565	PrimaryExpression	0		11012556	1					
ANR	11012566	IdentifierDeclStatement	ref * r = * space ;	4482:4:142533:142548	11012556	1	True				
ANR	11012567	IdentifierDecl	* r = * space		11012556	0					
ANR	11012568	IdentifierDeclType	ref *		11012556	0					
ANR	11012569	Identifier	r		11012556	1					
ANR	11012570	AssignmentExpression	* r = * space		11012556	2		=			
ANR	11012571	Identifier	r		11012556	0					
ANR	11012572	UnaryOperationExpression	* space		11012556	1					
ANR	11012573	UnaryOperator	*		11012556	0					
ANR	11012574	Identifier	space		11012556	1					
ANR	11012575	IdentifierDeclStatement	"ref nameref , sref , hival , lookup , altspace ;"	4483:4:142554:142596	11012556	2	True				
ANR	11012576	IdentifierDecl	nameref		11012556	0					
ANR	11012577	IdentifierDeclType	ref		11012556	0					
ANR	11012578	Identifier	nameref		11012556	1					
ANR	11012579	IdentifierDecl	sref		11012556	1					
ANR	11012580	IdentifierDeclType	ref		11012556	0					
ANR	11012581	Identifier	sref		11012556	1					
ANR	11012582	IdentifierDecl	hival		11012556	2					
ANR	11012583	IdentifierDeclType	ref		11012556	0					
ANR	11012584	Identifier	hival		11012556	1					
ANR	11012585	IdentifierDecl	lookup		11012556	3					
ANR	11012586	IdentifierDeclType	ref		11012556	0					
ANR	11012587	Identifier	lookup		11012556	1					
ANR	11012588	IdentifierDecl	altspace		11012556	4					
ANR	11012589	IdentifierDeclType	ref		11012556	0					
ANR	11012590	Identifier	altspace		11012556	1					
ANR	11012591	IfStatement	if ( ! r_is_array ( r ) )		11012556	3					
ANR	11012592	Condition	! r_is_array ( r )	4485:8:142607:142620	11012556	0	True				
ANR	11012593	UnaryOperationExpression	! r_is_array ( r )		11012556	0					
ANR	11012594	UnaryOperator	!		11012556	0					
ANR	11012595	CallExpression	r_is_array ( r )		11012556	1					
ANR	11012596	Callee	r_is_array		11012556	0					
ANR	11012597	Identifier	r_is_array		11012556	0					
ANR	11012598	ArgumentList	r		11012556	1					
ANR	11012599	Argument	r		11012556	0					
ANR	11012600	Identifier	r		11012556	0					
ANR	11012601	ExpressionStatement	return_error ( gs_error_typecheck )	4486:8:142631:142663	11012556	1	True				
ANR	11012602	CallExpression	return_error ( gs_error_typecheck )		11012556	0					
ANR	11012603	Callee	return_error		11012556	0					
ANR	11012604	Identifier	return_error		11012556	0					
ANR	11012605	ArgumentList	gs_error_typecheck		11012556	1					
ANR	11012606	Argument	gs_error_typecheck		11012556	0					
ANR	11012607	Identifier	gs_error_typecheck		11012556	0					
ANR	11012608	IfStatement	if ( r_size ( r ) != 4 )		11012556	4					
ANR	11012609	Condition	r_size ( r ) != 4	4488:8:142734:142747	11012556	0	True				
ANR	11012610	EqualityExpression	r_size ( r ) != 4		11012556	0		!=			
ANR	11012611	CallExpression	r_size ( r )		11012556	0					
ANR	11012612	Callee	r_size		11012556	0					
ANR	11012613	Identifier	r_size		11012556	0					
ANR	11012614	ArgumentList	r		11012556	1					
ANR	11012615	Argument	r		11012556	0					
ANR	11012616	Identifier	r		11012556	0					
ANR	11012617	PrimaryExpression	4		11012556	1					
ANR	11012618	ExpressionStatement	return_error ( gs_error_rangecheck )	4489:8:142758:142791	11012556	1	True				
ANR	11012619	CallExpression	return_error ( gs_error_rangecheck )		11012556	0					
ANR	11012620	Callee	return_error		11012556	0					
ANR	11012621	Identifier	return_error		11012556	0					
ANR	11012622	ArgumentList	gs_error_rangecheck		11012556	1					
ANR	11012623	Argument	gs_error_rangecheck		11012556	0					
ANR	11012624	Identifier	gs_error_rangecheck		11012556	0					
ANR	11012625	ExpressionStatement	"code = array_get ( imemory , r , 2 , & hival )"	4492:4:142871:142910	11012556	5	True				
ANR	11012626	AssignmentExpression	"code = array_get ( imemory , r , 2 , & hival )"		11012556	0		=			
ANR	11012627	Identifier	code		11012556	0					
ANR	11012628	CallExpression	"array_get ( imemory , r , 2 , & hival )"		11012556	1					
ANR	11012629	Callee	array_get		11012556	0					
ANR	11012630	Identifier	array_get		11012556	0					
ANR	11012631	ArgumentList	imemory		11012556	1					
ANR	11012632	Argument	imemory		11012556	0					
ANR	11012633	Identifier	imemory		11012556	0					
ANR	11012634	Argument	r		11012556	1					
ANR	11012635	Identifier	r		11012556	0					
ANR	11012636	Argument	2		11012556	2					
ANR	11012637	PrimaryExpression	2		11012556	0					
ANR	11012638	Argument	& hival		11012556	3					
ANR	11012639	UnaryOperationExpression	& hival		11012556	0					
ANR	11012640	UnaryOperator	&		11012556	0					
ANR	11012641	Identifier	hival		11012556	1					
ANR	11012642	IfStatement	if ( code < 0 )		11012556	6					
ANR	11012643	Condition	code < 0	4493:8:142920:142927	11012556	0	True				
ANR	11012644	RelationalExpression	code < 0		11012556	0		<			
ANR	11012645	Identifier	code		11012556	0					
ANR	11012646	PrimaryExpression	0		11012556	1					
ANR	11012647	ReturnStatement	return code ;	4494:8:142938:142949	11012556	1	True				
ANR	11012648	Identifier	code		11012556	0					
ANR	11012649	IfStatement	"if ( ! r_has_type ( & hival , t_integer ) )"		11012556	7					
ANR	11012650	Condition	"! r_has_type ( & hival , t_integer )"	4495:8:142959:142988	11012556	0	True				
ANR	11012651	UnaryOperationExpression	"! r_has_type ( & hival , t_integer )"		11012556	0					
ANR	11012652	UnaryOperator	!		11012556	0					
ANR	11012653	CallExpression	"r_has_type ( & hival , t_integer )"		11012556	1					
ANR	11012654	Callee	r_has_type		11012556	0					
ANR	11012655	Identifier	r_has_type		11012556	0					
ANR	11012656	ArgumentList	& hival		11012556	1					
ANR	11012657	Argument	& hival		11012556	0					
ANR	11012658	UnaryOperationExpression	& hival		11012556	0					
ANR	11012659	UnaryOperator	&		11012556	0					
ANR	11012660	Identifier	hival		11012556	1					
ANR	11012661	Argument	t_integer		11012556	1					
ANR	11012662	Identifier	t_integer		11012556	0					
ANR	11012663	ExpressionStatement	return_error ( gs_error_typecheck )	4496:8:142999:143031	11012556	1	True				
ANR	11012664	CallExpression	return_error ( gs_error_typecheck )		11012556	0					
ANR	11012665	Callee	return_error		11012556	0					
ANR	11012666	Identifier	return_error		11012556	0					
ANR	11012667	ArgumentList	gs_error_typecheck		11012556	1					
ANR	11012668	Argument	gs_error_typecheck		11012556	0					
ANR	11012669	Identifier	gs_error_typecheck		11012556	0					
ANR	11012670	IfStatement	if ( hival . value . intval < 0 || hival . value . intval > 4096 )		11012556	8					
ANR	11012671	Condition	hival . value . intval < 0 || hival . value . intval > 4096	4498:8:143093:143143	11012556	0	True				
ANR	11012672	OrExpression	hival . value . intval < 0 || hival . value . intval > 4096		11012556	0		||			
ANR	11012673	RelationalExpression	hival . value . intval < 0		11012556	0		<			
ANR	11012674	MemberAccess	hival . value . intval		11012556	0					
ANR	11012675	MemberAccess	hival . value		11012556	0					
ANR	11012676	Identifier	hival		11012556	0					
ANR	11012677	Identifier	value		11012556	1					
ANR	11012678	Identifier	intval		11012556	1					
ANR	11012679	PrimaryExpression	0		11012556	1					
ANR	11012680	RelationalExpression	hival . value . intval > 4096		11012556	1		>			
ANR	11012681	MemberAccess	hival . value . intval		11012556	0					
ANR	11012682	MemberAccess	hival . value		11012556	0					
ANR	11012683	Identifier	hival		11012556	0					
ANR	11012684	Identifier	value		11012556	1					
ANR	11012685	Identifier	intval		11012556	1					
ANR	11012686	PrimaryExpression	4096		11012556	1					
ANR	11012687	ExpressionStatement	return_error ( gs_error_rangecheck )	4499:8:143154:143187	11012556	1	True				
ANR	11012688	CallExpression	return_error ( gs_error_rangecheck )		11012556	0					
ANR	11012689	Callee	return_error		11012556	0					
ANR	11012690	Identifier	return_error		11012556	0					
ANR	11012691	ArgumentList	gs_error_rangecheck		11012556	1					
ANR	11012692	Argument	gs_error_rangecheck		11012556	0					
ANR	11012693	Identifier	gs_error_rangecheck		11012556	0					
ANR	11012694	ExpressionStatement	"code = array_get ( imemory , r , 3 , & lookup )"	4501:4:143257:143297	11012556	9	True				
ANR	11012695	AssignmentExpression	"code = array_get ( imemory , r , 3 , & lookup )"		11012556	0		=			
ANR	11012696	Identifier	code		11012556	0					
ANR	11012697	CallExpression	"array_get ( imemory , r , 3 , & lookup )"		11012556	1					
ANR	11012698	Callee	array_get		11012556	0					
ANR	11012699	Identifier	array_get		11012556	0					
ANR	11012700	ArgumentList	imemory		11012556	1					
ANR	11012701	Argument	imemory		11012556	0					
ANR	11012702	Identifier	imemory		11012556	0					
ANR	11012703	Argument	r		11012556	1					
ANR	11012704	Identifier	r		11012556	0					
ANR	11012705	Argument	3		11012556	2					
ANR	11012706	PrimaryExpression	3		11012556	0					
ANR	11012707	Argument	& lookup		11012556	3					
ANR	11012708	UnaryOperationExpression	& lookup		11012556	0					
ANR	11012709	UnaryOperator	&		11012556	0					
ANR	11012710	Identifier	lookup		11012556	1					
ANR	11012711	IfStatement	if ( code < 0 )		11012556	10					
ANR	11012712	Condition	code < 0	4502:8:143307:143314	11012556	0	True				
ANR	11012713	RelationalExpression	code < 0		11012556	0		<			
ANR	11012714	Identifier	code		11012556	0					
ANR	11012715	PrimaryExpression	0		11012556	1					
ANR	11012716	ReturnStatement	return code ;	4503:8:143325:143336	11012556	1	True				
ANR	11012717	Identifier	code		11012556	0					
ANR	11012718	IfStatement	"if ( ! r_has_type ( & lookup , t_string ) )"		11012556	11					
ANR	11012719	Condition	"! r_has_type ( & lookup , t_string )"	4504:8:143346:143375	11012556	0	True				
ANR	11012720	UnaryOperationExpression	"! r_has_type ( & lookup , t_string )"		11012556	0					
ANR	11012721	UnaryOperator	!		11012556	0					
ANR	11012722	CallExpression	"r_has_type ( & lookup , t_string )"		11012556	1					
ANR	11012723	Callee	r_has_type		11012556	0					
ANR	11012724	Identifier	r_has_type		11012556	0					
ANR	11012725	ArgumentList	& lookup		11012556	1					
ANR	11012726	Argument	& lookup		11012556	0					
ANR	11012727	UnaryOperationExpression	& lookup		11012556	0					
ANR	11012728	UnaryOperator	&		11012556	0					
ANR	11012729	Identifier	lookup		11012556	1					
ANR	11012730	Argument	t_string		11012556	1					
ANR	11012731	Identifier	t_string		11012556	0					
ANR	11012732	ExpressionStatement	check_proc ( lookup )	4505:8:143386:143404	11012556	1	True				
ANR	11012733	CallExpression	check_proc ( lookup )		11012556	0					
ANR	11012734	Callee	check_proc		11012556	0					
ANR	11012735	Identifier	check_proc		11012556	0					
ANR	11012736	ArgumentList	lookup		11012556	1					
ANR	11012737	Argument	lookup		11012556	0					
ANR	11012738	Identifier	lookup		11012556	0					
ANR	11012739	ExpressionStatement	"code = array_get ( imemory , r , 1 , & altspace )"	4508:4:143457:143499	11012556	12	True				
ANR	11012740	AssignmentExpression	"code = array_get ( imemory , r , 1 , & altspace )"		11012556	0		=			
ANR	11012741	Identifier	code		11012556	0					
ANR	11012742	CallExpression	"array_get ( imemory , r , 1 , & altspace )"		11012556	1					
ANR	11012743	Callee	array_get		11012556	0					
ANR	11012744	Identifier	array_get		11012556	0					
ANR	11012745	ArgumentList	imemory		11012556	1					
ANR	11012746	Argument	imemory		11012556	0					
ANR	11012747	Identifier	imemory		11012556	0					
ANR	11012748	Argument	r		11012556	1					
ANR	11012749	Identifier	r		11012556	0					
ANR	11012750	Argument	1		11012556	2					
ANR	11012751	PrimaryExpression	1		11012556	0					
ANR	11012752	Argument	& altspace		11012556	3					
ANR	11012753	UnaryOperationExpression	& altspace		11012556	0					
ANR	11012754	UnaryOperator	&		11012556	0					
ANR	11012755	Identifier	altspace		11012556	1					
ANR	11012756	IfStatement	if ( code < 0 )		11012556	13					
ANR	11012757	Condition	code < 0	4509:8:143509:143516	11012556	0	True				
ANR	11012758	RelationalExpression	code < 0		11012556	0		<			
ANR	11012759	Identifier	code		11012556	0					
ANR	11012760	PrimaryExpression	0		11012556	1					
ANR	11012761	ReturnStatement	return code ;	4510:8:143527:143538	11012556	1	True				
ANR	11012762	Identifier	code		11012556	0					
ANR	11012763	IfStatement	"if ( r_has_type ( & altspace , t_name ) )"		11012556	14					
ANR	11012764	Condition	"r_has_type ( & altspace , t_name )"	4511:8:143548:143576	11012556	0	True				
ANR	11012765	CallExpression	"r_has_type ( & altspace , t_name )"		11012556	0					
ANR	11012766	Callee	r_has_type		11012556	0					
ANR	11012767	Identifier	r_has_type		11012556	0					
ANR	11012768	ArgumentList	& altspace		11012556	1					
ANR	11012769	Argument	& altspace		11012556	0					
ANR	11012770	UnaryOperationExpression	& altspace		11012556	0					
ANR	11012771	UnaryOperator	&		11012556	0					
ANR	11012772	Identifier	altspace		11012556	1					
ANR	11012773	Argument	t_name		11012556	1					
ANR	11012774	Identifier	t_name		11012556	0					
ANR	11012775	ExpressionStatement	"ref_assign ( & nameref , & altspace )"	4512:8:143587:143618	11012556	1	True				
ANR	11012776	CallExpression	"ref_assign ( & nameref , & altspace )"		11012556	0					
ANR	11012777	Callee	ref_assign		11012556	0					
ANR	11012778	Identifier	ref_assign		11012556	0					
ANR	11012779	ArgumentList	& nameref		11012556	1					
ANR	11012780	Argument	& nameref		11012556	0					
ANR	11012781	UnaryOperationExpression	& nameref		11012556	0					
ANR	11012782	UnaryOperator	&		11012556	0					
ANR	11012783	Identifier	nameref		11012556	1					
ANR	11012784	Argument	& altspace		11012556	1					
ANR	11012785	UnaryOperationExpression	& altspace		11012556	0					
ANR	11012786	UnaryOperator	&		11012556	0					
ANR	11012787	Identifier	altspace		11012556	1					
ANR	11012788	ElseStatement	else		11012556	0					
ANR	11012789	CompoundStatement		34:9:1119:1119	11012556	0					
ANR	11012790	IfStatement	if ( ! r_is_array ( & altspace ) )		11012556	0					
ANR	11012791	Condition	! r_is_array ( & altspace )	4514:12:143643:143664	11012556	0	True				
ANR	11012792	UnaryOperationExpression	! r_is_array ( & altspace )		11012556	0					
ANR	11012793	UnaryOperator	!		11012556	0					
ANR	11012794	CallExpression	r_is_array ( & altspace )		11012556	1					
ANR	11012795	Callee	r_is_array		11012556	0					
ANR	11012796	Identifier	r_is_array		11012556	0					
ANR	11012797	ArgumentList	& altspace		11012556	1					
ANR	11012798	Argument	& altspace		11012556	0					
ANR	11012799	UnaryOperationExpression	& altspace		11012556	0					
ANR	11012800	UnaryOperator	&		11012556	0					
ANR	11012801	Identifier	altspace		11012556	1					
ANR	11012802	ExpressionStatement	return_error ( gs_error_typecheck )	4515:12:143679:143711	11012556	1	True				
ANR	11012803	CallExpression	return_error ( gs_error_typecheck )		11012556	0					
ANR	11012804	Callee	return_error		11012556	0					
ANR	11012805	Identifier	return_error		11012556	0					
ANR	11012806	ArgumentList	gs_error_typecheck		11012556	1					
ANR	11012807	Argument	gs_error_typecheck		11012556	0					
ANR	11012808	Identifier	gs_error_typecheck		11012556	0					
ANR	11012809	ExpressionStatement	"code = array_get ( imemory , & altspace , 0 , & nameref )"	4516:8:143721:143770	11012556	1	True				
ANR	11012810	AssignmentExpression	"code = array_get ( imemory , & altspace , 0 , & nameref )"		11012556	0		=			
ANR	11012811	Identifier	code		11012556	0					
ANR	11012812	CallExpression	"array_get ( imemory , & altspace , 0 , & nameref )"		11012556	1					
ANR	11012813	Callee	array_get		11012556	0					
ANR	11012814	Identifier	array_get		11012556	0					
ANR	11012815	ArgumentList	imemory		11012556	1					
ANR	11012816	Argument	imemory		11012556	0					
ANR	11012817	Identifier	imemory		11012556	0					
ANR	11012818	Argument	& altspace		11012556	1					
ANR	11012819	UnaryOperationExpression	& altspace		11012556	0					
ANR	11012820	UnaryOperator	&		11012556	0					
ANR	11012821	Identifier	altspace		11012556	1					
ANR	11012822	Argument	0		11012556	2					
ANR	11012823	PrimaryExpression	0		11012556	0					
ANR	11012824	Argument	& nameref		11012556	3					
ANR	11012825	UnaryOperationExpression	& nameref		11012556	0					
ANR	11012826	UnaryOperator	&		11012556	0					
ANR	11012827	Identifier	nameref		11012556	1					
ANR	11012828	IfStatement	if ( code < 0 )		11012556	2					
ANR	11012829	Condition	code < 0	4517:12:143784:143791	11012556	0	True				
ANR	11012830	RelationalExpression	code < 0		11012556	0		<			
ANR	11012831	Identifier	code		11012556	0					
ANR	11012832	PrimaryExpression	0		11012556	1					
ANR	11012833	ReturnStatement	return code ;	4518:12:143806:143817	11012556	1	True				
ANR	11012834	Identifier	code		11012556	0					
ANR	11012835	ExpressionStatement	"name_string_ref ( imemory , & nameref , & sref )"	4521:4:143878:143919	11012556	15	True				
ANR	11012836	CallExpression	"name_string_ref ( imemory , & nameref , & sref )"		11012556	0					
ANR	11012837	Callee	name_string_ref		11012556	0					
ANR	11012838	Identifier	name_string_ref		11012556	0					
ANR	11012839	ArgumentList	imemory		11012556	1					
ANR	11012840	Argument	imemory		11012556	0					
ANR	11012841	Identifier	imemory		11012556	0					
ANR	11012842	Argument	& nameref		11012556	1					
ANR	11012843	UnaryOperationExpression	& nameref		11012556	0					
ANR	11012844	UnaryOperator	&		11012556	0					
ANR	11012845	Identifier	nameref		11012556	1					
ANR	11012846	Argument	& sref		11012556	2					
ANR	11012847	UnaryOperationExpression	& sref		11012556	0					
ANR	11012848	UnaryOperator	&		11012556	0					
ANR	11012849	Identifier	sref		11012556	1					
ANR	11012850	IfStatement	if ( r_size ( & sref ) == 7 )		11012556	16					
ANR	11012851	Condition	r_size ( & sref ) == 7	4523:8:143974:143991	11012556	0	True				
ANR	11012852	EqualityExpression	r_size ( & sref ) == 7		11012556	0		==			
ANR	11012853	CallExpression	r_size ( & sref )		11012556	0					
ANR	11012854	Callee	r_size		11012556	0					
ANR	11012855	Identifier	r_size		11012556	0					
ANR	11012856	ArgumentList	& sref		11012556	1					
ANR	11012857	Argument	& sref		11012556	0					
ANR	11012858	UnaryOperationExpression	& sref		11012556	0					
ANR	11012859	UnaryOperator	&		11012556	0					
ANR	11012860	Identifier	sref		11012556	1					
ANR	11012861	PrimaryExpression	7		11012556	1					
ANR	11012862	CompoundStatement		44:28:1484:1484	11012556	1					
ANR	11012863	IfStatement	"if ( strncmp ( ( const char * ) sref . value . const_bytes , ""Indexed"" , 7 ) == 0 )"		11012556	0					
ANR	11012864	Condition	"strncmp ( ( const char * ) sref . value . const_bytes , ""Indexed"" , 7 ) == 0"	4524:12:144008:144071	11012556	0	True				
ANR	11012865	EqualityExpression	"strncmp ( ( const char * ) sref . value . const_bytes , ""Indexed"" , 7 ) == 0"		11012556	0		==			
ANR	11012866	CallExpression	"strncmp ( ( const char * ) sref . value . const_bytes , ""Indexed"" , 7 )"		11012556	0					
ANR	11012867	Callee	strncmp		11012556	0					
ANR	11012868	Identifier	strncmp		11012556	0					
ANR	11012869	ArgumentList	( const char * ) sref . value . const_bytes		11012556	1					
ANR	11012870	Argument	( const char * ) sref . value . const_bytes		11012556	0					
ANR	11012871	CastExpression	( const char * ) sref . value . const_bytes		11012556	0					
ANR	11012872	CastTarget	const char *		11012556	0					
ANR	11012873	MemberAccess	sref . value . const_bytes		11012556	1					
ANR	11012874	MemberAccess	sref . value		11012556	0					
ANR	11012875	Identifier	sref		11012556	0					
ANR	11012876	Identifier	value		11012556	1					
ANR	11012877	Identifier	const_bytes		11012556	1					
ANR	11012878	Argument	"""Indexed"""		11012556	1					
ANR	11012879	PrimaryExpression	"""Indexed"""		11012556	0					
ANR	11012880	Argument	7		11012556	2					
ANR	11012881	PrimaryExpression	7		11012556	0					
ANR	11012882	PrimaryExpression	0		11012556	1					
ANR	11012883	ExpressionStatement	return_error ( gs_error_typecheck )	4525:12:144086:144118	11012556	1	True				
ANR	11012884	CallExpression	return_error ( gs_error_typecheck )		11012556	0					
ANR	11012885	Callee	return_error		11012556	0					
ANR	11012886	Identifier	return_error		11012556	0					
ANR	11012887	ArgumentList	gs_error_typecheck		11012556	1					
ANR	11012888	Argument	gs_error_typecheck		11012556	0					
ANR	11012889	Identifier	gs_error_typecheck		11012556	0					
ANR	11012890	IfStatement	"if ( strncmp ( ( const char * ) sref . value . const_bytes , ""Pattern"" , 7 ) == 0 )"		11012556	1					
ANR	11012891	Condition	"strncmp ( ( const char * ) sref . value . const_bytes , ""Pattern"" , 7 ) == 0"	4526:12:144132:144195	11012556	0	True				
ANR	11012892	EqualityExpression	"strncmp ( ( const char * ) sref . value . const_bytes , ""Pattern"" , 7 ) == 0"		11012556	0		==			
ANR	11012893	CallExpression	"strncmp ( ( const char * ) sref . value . const_bytes , ""Pattern"" , 7 )"		11012556	0					
ANR	11012894	Callee	strncmp		11012556	0					
ANR	11012895	Identifier	strncmp		11012556	0					
ANR	11012896	ArgumentList	( const char * ) sref . value . const_bytes		11012556	1					
ANR	11012897	Argument	( const char * ) sref . value . const_bytes		11012556	0					
ANR	11012898	CastExpression	( const char * ) sref . value . const_bytes		11012556	0					
ANR	11012899	CastTarget	const char *		11012556	0					
ANR	11012900	MemberAccess	sref . value . const_bytes		11012556	1					
ANR	11012901	MemberAccess	sref . value		11012556	0					
ANR	11012902	Identifier	sref		11012556	0					
ANR	11012903	Identifier	value		11012556	1					
ANR	11012904	Identifier	const_bytes		11012556	1					
ANR	11012905	Argument	"""Pattern"""		11012556	1					
ANR	11012906	PrimaryExpression	"""Pattern"""		11012556	0					
ANR	11012907	Argument	7		11012556	2					
ANR	11012908	PrimaryExpression	7		11012556	0					
ANR	11012909	PrimaryExpression	0		11012556	1					
ANR	11012910	ExpressionStatement	return_error ( gs_error_typecheck )	4527:12:144210:144242	11012556	1	True				
ANR	11012911	CallExpression	return_error ( gs_error_typecheck )		11012556	0					
ANR	11012912	Callee	return_error		11012556	0					
ANR	11012913	Identifier	return_error		11012556	0					
ANR	11012914	ArgumentList	gs_error_typecheck		11012556	1					
ANR	11012915	Argument	gs_error_typecheck		11012556	0					
ANR	11012916	Identifier	gs_error_typecheck		11012556	0					
ANR	11012917	ExpressionStatement	"ref_assign ( * space , & altspace )"	4529:4:144254:144283	11012556	17	True				
ANR	11012918	CallExpression	"ref_assign ( * space , & altspace )"		11012556	0					
ANR	11012919	Callee	ref_assign		11012556	0					
ANR	11012920	Identifier	ref_assign		11012556	0					
ANR	11012921	ArgumentList	* space		11012556	1					
ANR	11012922	Argument	* space		11012556	0					
ANR	11012923	UnaryOperationExpression	* space		11012556	0					
ANR	11012924	UnaryOperator	*		11012556	0					
ANR	11012925	Identifier	space		11012556	1					
ANR	11012926	Argument	& altspace		11012556	1					
ANR	11012927	UnaryOperationExpression	& altspace		11012556	0					
ANR	11012928	UnaryOperator	&		11012556	0					
ANR	11012929	Identifier	altspace		11012556	1					
ANR	11012930	ReturnStatement	return 0 ;	4530:4:144289:144297	11012556	18	True				
ANR	11012931	PrimaryExpression	0		11012556	0					
ANR	11012932	ReturnType	static int		11012556	1					
ANR	11012933	Identifier	validateindexedspace		11012556	2					
ANR	11012934	ParameterList	"i_ctx_t * i_ctx_p , ref * * space"		11012556	3					
ANR	11012935	Parameter	i_ctx_t * i_ctx_p	4479:32:142477:142493	11012556	0	True				
ANR	11012936	ParameterType	i_ctx_t *		11012556	0					
ANR	11012937	Identifier	i_ctx_p		11012556	1					
ANR	11012938	Parameter	ref * * space	4479:51:142496:142506	11012556	1	True				
ANR	11012939	ParameterType	ref * *		11012556	0					
ANR	11012940	Identifier	space		11012556	1					
ANR	11012941	CFGEntryNode	ENTRY		11012556		True				
ANR	11012942	CFGExitNode	EXIT		11012556		True				
ANR	11012943	Symbol	code		11012556						
ANR	11012944	Symbol	gs_error_rangecheck		11012556						
ANR	11012945	Symbol	nameref		11012556						
ANR	11012946	Symbol	space		11012556						
ANR	11012947	Symbol	strncmp		11012556						
ANR	11012948	Symbol	gs_error_typecheck		11012556						
ANR	11012949	Symbol	r_has_type		11012556						
ANR	11012950	Symbol	altspace		11012556						
ANR	11012951	Symbol	hival . value . intval		11012556						
ANR	11012952	Symbol	& altspace		11012556						
ANR	11012953	Symbol	t_name		11012556						
ANR	11012954	Symbol	r_size		11012556						
ANR	11012955	Symbol	sref . value . const_bytes		11012556						
ANR	11012956	Symbol	imemory		11012556						
ANR	11012957	Symbol	hival . value		11012556						
ANR	11012958	Symbol	& nameref		11012556						
ANR	11012959	Symbol	lookup		11012556						
ANR	11012960	Symbol	array_get		11012556						
ANR	11012961	Symbol	hival		11012556						
ANR	11012962	Symbol	& sref		11012556						
ANR	11012963	Symbol	t_string		11012556						
ANR	11012964	Symbol	sref . value		11012556						
ANR	11012965	Symbol	r		11012556						
ANR	11012966	Symbol	& hival		11012556						
ANR	11012967	Symbol	t_integer		11012556						
ANR	11012968	Symbol	sref		11012556						
ANR	11012969	Symbol	i_ctx_p		11012556						
ANR	11012970	Symbol	* space		11012556						
ANR	11012971	Symbol	r_is_array		11012556						
ANR	11012972	Symbol	& lookup		11012556						
ANR	11012973	Function	indexedalternatespace	4532:0:144301:144542							
ANR	11012974	FunctionDef	"indexedalternatespace (i_ctx_t * i_ctx_p , ref * space , ref * * r , int * CIESubst)"		11012973	0					
ANR	11012975	CompoundStatement		4533:0:144389:144542	11012973	0					
ANR	11012976	IdentifierDeclStatement	ref alt ;	4534:4:144395:144402	11012973	0	True				
ANR	11012977	IdentifierDecl	alt		11012973	0					
ANR	11012978	IdentifierDeclType	ref		11012973	0					
ANR	11012979	Identifier	alt		11012973	1					
ANR	11012980	IdentifierDeclStatement	int code ;	4535:4:144408:144416	11012973	1	True				
ANR	11012981	IdentifierDecl	code		11012973	0					
ANR	11012982	IdentifierDeclType	int		11012973	0					
ANR	11012983	Identifier	code		11012973	1					
ANR	11012984	ExpressionStatement	"code = array_get ( imemory , * r , 1 , & alt )"	4537:4:144423:144461	11012973	2	True				
ANR	11012985	AssignmentExpression	"code = array_get ( imemory , * r , 1 , & alt )"		11012973	0		=			
ANR	11012986	Identifier	code		11012973	0					
ANR	11012987	CallExpression	"array_get ( imemory , * r , 1 , & alt )"		11012973	1					
ANR	11012988	Callee	array_get		11012973	0					
ANR	11012989	Identifier	array_get		11012973	0					
ANR	11012990	ArgumentList	imemory		11012973	1					
ANR	11012991	Argument	imemory		11012973	0					
ANR	11012992	Identifier	imemory		11012973	0					
ANR	11012993	Argument	* r		11012973	1					
ANR	11012994	UnaryOperationExpression	* r		11012973	0					
ANR	11012995	UnaryOperator	*		11012973	0					
ANR	11012996	Identifier	r		11012973	1					
ANR	11012997	Argument	1		11012973	2					
ANR	11012998	PrimaryExpression	1		11012973	0					
ANR	11012999	Argument	& alt		11012973	3					
ANR	11013000	UnaryOperationExpression	& alt		11012973	0					
ANR	11013001	UnaryOperator	&		11012973	0					
ANR	11013002	Identifier	alt		11012973	1					
ANR	11013003	IfStatement	if ( code < 0 )		11012973	3					
ANR	11013004	Condition	code < 0	4538:8:144471:144478	11012973	0	True				
ANR	11013005	RelationalExpression	code < 0		11012973	0		<			
ANR	11013006	Identifier	code		11012973	0					
ANR	11013007	PrimaryExpression	0		11012973	1					
ANR	11013008	ReturnStatement	return code ;	4539:8:144489:144500	11012973	1	True				
ANR	11013009	Identifier	code		11012973	0					
ANR	11013010	ExpressionStatement	"ref_assign ( * r , & alt )"	4540:4:144506:144526	11012973	4	True				
ANR	11013011	CallExpression	"ref_assign ( * r , & alt )"		11012973	0					
ANR	11013012	Callee	ref_assign		11012973	0					
ANR	11013013	Identifier	ref_assign		11012973	0					
ANR	11013014	ArgumentList	* r		11012973	1					
ANR	11013015	Argument	* r		11012973	0					
ANR	11013016	UnaryOperationExpression	* r		11012973	0					
ANR	11013017	UnaryOperator	*		11012973	0					
ANR	11013018	Identifier	r		11012973	1					
ANR	11013019	Argument	& alt		11012973	1					
ANR	11013020	UnaryOperationExpression	& alt		11012973	0					
ANR	11013021	UnaryOperator	&		11012973	0					
ANR	11013022	Identifier	alt		11012973	1					
ANR	11013023	ReturnStatement	return 0 ;	4541:4:144532:144540	11012973	5	True				
ANR	11013024	PrimaryExpression	0		11012973	0					
ANR	11013025	ReturnType	static int		11012973	1					
ANR	11013026	Identifier	indexedalternatespace		11012973	2					
ANR	11013027	ParameterList	"i_ctx_t * i_ctx_p , ref * space , ref * * r , int * CIESubst"		11012973	3					
ANR	11013028	Parameter	i_ctx_t * i_ctx_p	4532:33:144334:144350	11012973	0	True				
ANR	11013029	ParameterType	i_ctx_t *		11012973	0					
ANR	11013030	Identifier	i_ctx_p		11012973	1					
ANR	11013031	Parameter	ref * space	4532:52:144353:144362	11012973	1	True				
ANR	11013032	ParameterType	ref *		11012973	0					
ANR	11013033	Identifier	space		11012973	1					
ANR	11013034	Parameter	ref * * r	4532:64:144365:144371	11012973	2	True				
ANR	11013035	ParameterType	ref * *		11012973	0					
ANR	11013036	Identifier	r		11012973	1					
ANR	11013037	Parameter	int * CIESubst	4532:73:144374:144386	11012973	3	True				
ANR	11013038	ParameterType	int *		11012973	0					
ANR	11013039	Identifier	CIESubst		11012973	1					
ANR	11013040	CFGEntryNode	ENTRY		11012973		True				
ANR	11013041	CFGExitNode	EXIT		11012973		True				
ANR	11013042	Symbol	r		11012973						
ANR	11013043	Symbol	code		11012973						
ANR	11013044	Symbol	i_ctx_p		11012973						
ANR	11013045	Symbol	array_get		11012973						
ANR	11013046	Symbol	alt		11012973						
ANR	11013047	Symbol	& alt		11012973						
ANR	11013048	Symbol	imemory		11012973						
ANR	11013049	Symbol	* r		11012973						
ANR	11013050	Symbol	space		11012973						
ANR	11013051	Symbol	CIESubst		11012973						
ANR	11013052	Function	indexeddomain	4543:0:144544:144802							
ANR	11013053	FunctionDef	"indexeddomain (i_ctx_t * i_ctx_p , ref * space , float * ptr)"		11013052	0					
ANR	11013054	CompoundStatement		4544:0:144612:144802	11013052	0					
ANR	11013055	IdentifierDeclStatement	ref hival ;	4545:4:144618:144627	11013052	0	True				
ANR	11013056	IdentifierDecl	hival		11013052	0					
ANR	11013057	IdentifierDeclType	ref		11013052	0					
ANR	11013058	Identifier	hival		11013052	1					
ANR	11013059	IdentifierDeclStatement	int code ;	4546:4:144633:144641	11013052	1	True				
ANR	11013060	IdentifierDecl	code		11013052	0					
ANR	11013061	IdentifierDeclType	int		11013052	0					
ANR	11013062	Identifier	code		11013052	1					
ANR	11013063	ExpressionStatement	"code = array_get ( imemory , space , 2 , & hival )"	4548:4:144648:144691	11013052	2	True				
ANR	11013064	AssignmentExpression	"code = array_get ( imemory , space , 2 , & hival )"		11013052	0		=			
ANR	11013065	Identifier	code		11013052	0					
ANR	11013066	CallExpression	"array_get ( imemory , space , 2 , & hival )"		11013052	1					
ANR	11013067	Callee	array_get		11013052	0					
ANR	11013068	Identifier	array_get		11013052	0					
ANR	11013069	ArgumentList	imemory		11013052	1					
ANR	11013070	Argument	imemory		11013052	0					
ANR	11013071	Identifier	imemory		11013052	0					
ANR	11013072	Argument	space		11013052	1					
ANR	11013073	Identifier	space		11013052	0					
ANR	11013074	Argument	2		11013052	2					
ANR	11013075	PrimaryExpression	2		11013052	0					
ANR	11013076	Argument	& hival		11013052	3					
ANR	11013077	UnaryOperationExpression	& hival		11013052	0					
ANR	11013078	UnaryOperator	&		11013052	0					
ANR	11013079	Identifier	hival		11013052	1					
ANR	11013080	IfStatement	if ( code < 0 )		11013052	3					
ANR	11013081	Condition	code < 0	4549:8:144701:144708	11013052	0	True				
ANR	11013082	RelationalExpression	code < 0		11013052	0		<			
ANR	11013083	Identifier	code		11013052	0					
ANR	11013084	PrimaryExpression	0		11013052	1					
ANR	11013085	ReturnStatement	return code ;	4550:8:144719:144730	11013052	1	True				
ANR	11013086	Identifier	code		11013052	0					
ANR	11013087	ExpressionStatement	ptr [ 0 ] = 0	4551:4:144736:144746	11013052	4	True				
ANR	11013088	AssignmentExpression	ptr [ 0 ] = 0		11013052	0		=			
ANR	11013089	ArrayIndexing	ptr [ 0 ]		11013052	0					
ANR	11013090	Identifier	ptr		11013052	0					
ANR	11013091	PrimaryExpression	0		11013052	1					
ANR	11013092	PrimaryExpression	0		11013052	1					
ANR	11013093	ExpressionStatement	ptr [ 1 ] = ( float ) hival . value . intval	4552:4:144752:144786	11013052	5	True				
ANR	11013094	AssignmentExpression	ptr [ 1 ] = ( float ) hival . value . intval		11013052	0		=			
ANR	11013095	ArrayIndexing	ptr [ 1 ]		11013052	0					
ANR	11013096	Identifier	ptr		11013052	0					
ANR	11013097	PrimaryExpression	1		11013052	1					
ANR	11013098	CastExpression	( float ) hival . value . intval		11013052	1					
ANR	11013099	CastTarget	float		11013052	0					
ANR	11013100	MemberAccess	hival . value . intval		11013052	1					
ANR	11013101	MemberAccess	hival . value		11013052	0					
ANR	11013102	Identifier	hival		11013052	0					
ANR	11013103	Identifier	value		11013052	1					
ANR	11013104	Identifier	intval		11013052	1					
ANR	11013105	ReturnStatement	return 0 ;	4553:4:144792:144800	11013052	6	True				
ANR	11013106	PrimaryExpression	0		11013052	0					
ANR	11013107	ReturnType	static int		11013052	1					
ANR	11013108	Identifier	indexeddomain		11013052	2					
ANR	11013109	ParameterList	"i_ctx_t * i_ctx_p , ref * space , float * ptr"		11013052	3					
ANR	11013110	Parameter	i_ctx_t * i_ctx_p	4543:25:144569:144585	11013052	0	True				
ANR	11013111	ParameterType	i_ctx_t *		11013052	0					
ANR	11013112	Identifier	i_ctx_p		11013052	1					
ANR	11013113	Parameter	ref * space	4543:44:144588:144597	11013052	1	True				
ANR	11013114	ParameterType	ref *		11013052	0					
ANR	11013115	Identifier	space		11013052	1					
ANR	11013116	Parameter	float * ptr	4543:56:144600:144609	11013052	2	True				
ANR	11013117	ParameterType	float *		11013052	0					
ANR	11013118	Identifier	ptr		11013052	1					
ANR	11013119	CFGEntryNode	ENTRY		11013052		True				
ANR	11013120	CFGExitNode	EXIT		11013052		True				
ANR	11013121	Symbol	code		11013052						
ANR	11013122	Symbol	& hival		11013052						
ANR	11013123	Symbol	hival . value . intval		11013052						
ANR	11013124	Symbol	i_ctx_p		11013052						
ANR	11013125	Symbol	array_get		11013052						
ANR	11013126	Symbol	* ptr		11013052						
ANR	11013127	Symbol	hival		11013052						
ANR	11013128	Symbol	imemory		11013052						
ANR	11013129	Symbol	space		11013052						
ANR	11013130	Symbol	ptr		11013052						
ANR	11013131	Symbol	hival . value		11013052						
ANR	11013132	Function	indexedrange	4555:0:144804:145061							
ANR	11013133	FunctionDef	"indexedrange (i_ctx_t * i_ctx_p , ref * space , float * ptr)"		11013132	0					
ANR	11013134	CompoundStatement		4556:0:144871:145061	11013132	0					
ANR	11013135	IdentifierDeclStatement	ref hival ;	4557:4:144877:144886	11013132	0	True				
ANR	11013136	IdentifierDecl	hival		11013132	0					
ANR	11013137	IdentifierDeclType	ref		11013132	0					
ANR	11013138	Identifier	hival		11013132	1					
ANR	11013139	IdentifierDeclStatement	int code ;	4558:4:144892:144900	11013132	1	True				
ANR	11013140	IdentifierDecl	code		11013132	0					
ANR	11013141	IdentifierDeclType	int		11013132	0					
ANR	11013142	Identifier	code		11013132	1					
ANR	11013143	ExpressionStatement	"code = array_get ( imemory , space , 2 , & hival )"	4560:4:144907:144950	11013132	2	True				
ANR	11013144	AssignmentExpression	"code = array_get ( imemory , space , 2 , & hival )"		11013132	0		=			
ANR	11013145	Identifier	code		11013132	0					
ANR	11013146	CallExpression	"array_get ( imemory , space , 2 , & hival )"		11013132	1					
ANR	11013147	Callee	array_get		11013132	0					
ANR	11013148	Identifier	array_get		11013132	0					
ANR	11013149	ArgumentList	imemory		11013132	1					
ANR	11013150	Argument	imemory		11013132	0					
ANR	11013151	Identifier	imemory		11013132	0					
ANR	11013152	Argument	space		11013132	1					
ANR	11013153	Identifier	space		11013132	0					
ANR	11013154	Argument	2		11013132	2					
ANR	11013155	PrimaryExpression	2		11013132	0					
ANR	11013156	Argument	& hival		11013132	3					
ANR	11013157	UnaryOperationExpression	& hival		11013132	0					
ANR	11013158	UnaryOperator	&		11013132	0					
ANR	11013159	Identifier	hival		11013132	1					
ANR	11013160	IfStatement	if ( code < 0 )		11013132	3					
ANR	11013161	Condition	code < 0	4561:8:144960:144967	11013132	0	True				
ANR	11013162	RelationalExpression	code < 0		11013132	0		<			
ANR	11013163	Identifier	code		11013132	0					
ANR	11013164	PrimaryExpression	0		11013132	1					
ANR	11013165	ReturnStatement	return code ;	4562:8:144978:144989	11013132	1	True				
ANR	11013166	Identifier	code		11013132	0					
ANR	11013167	ExpressionStatement	ptr [ 0 ] = 0	4563:4:144995:145005	11013132	4	True				
ANR	11013168	AssignmentExpression	ptr [ 0 ] = 0		11013132	0		=			
ANR	11013169	ArrayIndexing	ptr [ 0 ]		11013132	0					
ANR	11013170	Identifier	ptr		11013132	0					
ANR	11013171	PrimaryExpression	0		11013132	1					
ANR	11013172	PrimaryExpression	0		11013132	1					
ANR	11013173	ExpressionStatement	ptr [ 1 ] = ( float ) hival . value . intval	4564:4:145011:145045	11013132	5	True				
ANR	11013174	AssignmentExpression	ptr [ 1 ] = ( float ) hival . value . intval		11013132	0		=			
ANR	11013175	ArrayIndexing	ptr [ 1 ]		11013132	0					
ANR	11013176	Identifier	ptr		11013132	0					
ANR	11013177	PrimaryExpression	1		11013132	1					
ANR	11013178	CastExpression	( float ) hival . value . intval		11013132	1					
ANR	11013179	CastTarget	float		11013132	0					
ANR	11013180	MemberAccess	hival . value . intval		11013132	1					
ANR	11013181	MemberAccess	hival . value		11013132	0					
ANR	11013182	Identifier	hival		11013132	0					
ANR	11013183	Identifier	value		11013132	1					
ANR	11013184	Identifier	intval		11013132	1					
ANR	11013185	ReturnStatement	return 0 ;	4565:4:145051:145059	11013132	6	True				
ANR	11013186	PrimaryExpression	0		11013132	0					
ANR	11013187	ReturnType	static int		11013132	1					
ANR	11013188	Identifier	indexedrange		11013132	2					
ANR	11013189	ParameterList	"i_ctx_t * i_ctx_p , ref * space , float * ptr"		11013132	3					
ANR	11013190	Parameter	i_ctx_t * i_ctx_p	4555:24:144828:144844	11013132	0	True				
ANR	11013191	ParameterType	i_ctx_t *		11013132	0					
ANR	11013192	Identifier	i_ctx_p		11013132	1					
ANR	11013193	Parameter	ref * space	4555:43:144847:144856	11013132	1	True				
ANR	11013194	ParameterType	ref *		11013132	0					
ANR	11013195	Identifier	space		11013132	1					
ANR	11013196	Parameter	float * ptr	4555:55:144859:144868	11013132	2	True				
ANR	11013197	ParameterType	float *		11013132	0					
ANR	11013198	Identifier	ptr		11013132	1					
ANR	11013199	CFGEntryNode	ENTRY		11013132		True				
ANR	11013200	CFGExitNode	EXIT		11013132		True				
ANR	11013201	Symbol	code		11013132						
ANR	11013202	Symbol	& hival		11013132						
ANR	11013203	Symbol	hival . value . intval		11013132						
ANR	11013204	Symbol	i_ctx_p		11013132						
ANR	11013205	Symbol	array_get		11013132						
ANR	11013206	Symbol	* ptr		11013132						
ANR	11013207	Symbol	hival		11013132						
ANR	11013208	Symbol	imemory		11013132						
ANR	11013209	Symbol	space		11013132						
ANR	11013210	Symbol	ptr		11013132						
ANR	11013211	Symbol	hival . value		11013132						
ANR	11013212	Function	indexedbasecolor	4567:0:145063:147660							
ANR	11013213	FunctionDef	"indexedbasecolor (i_ctx_t * i_ctx_p , ref * space , int base , int * stage , int * cont , int * stack_depth)"		11013212	0					
ANR	11013214	CompoundStatement		4568:0:145173:147660	11013212	0					
ANR	11013215	IdentifierDeclStatement	int code ;	4569:4:145179:145187	11013212	0	True				
ANR	11013216	IdentifierDecl	code		11013212	0					
ANR	11013217	IdentifierDeclType	int		11013212	0					
ANR	11013218	Identifier	code		11013212	1					
ANR	11013219	IfStatement	if ( * stage == 0 )		11013212	1					
ANR	11013220	Condition	* stage == 0	4571:8:145198:145208	11013212	0	True				
ANR	11013221	EqualityExpression	* stage == 0		11013212	0		==			
ANR	11013222	UnaryOperationExpression	* stage		11013212	0					
ANR	11013223	UnaryOperator	*		11013212	0					
ANR	11013224	Identifier	stage		11013212	1					
ANR	11013225	PrimaryExpression	0		11013212	1					
ANR	11013226	CompoundStatement		8:8:201:220	11013212	1					
ANR	11013227	IdentifierDeclStatement	gs_color_space * pcs ;	4575:8:145375:145394	11013212	0	True				
ANR	11013228	IdentifierDecl	* pcs		11013212	0					
ANR	11013229	IdentifierDeclType	gs_color_space *		11013212	0					
ANR	11013230	Identifier	pcs		11013212	1					
ANR	11013231	ExpressionStatement	pcs = gs_currentcolorspace ( igs )	4576:8:145404:145435	11013212	1	True				
ANR	11013232	AssignmentExpression	pcs = gs_currentcolorspace ( igs )		11013212	0		=			
ANR	11013233	Identifier	pcs		11013212	0					
ANR	11013234	CallExpression	gs_currentcolorspace ( igs )		11013212	1					
ANR	11013235	Callee	gs_currentcolorspace		11013212	0					
ANR	11013236	Identifier	gs_currentcolorspace		11013212	0					
ANR	11013237	ArgumentList	igs		11013212	1					
ANR	11013238	Argument	igs		11013212	0					
ANR	11013239	Identifier	igs		11013212	0					
ANR	11013240	ExpressionStatement	* stage = 1	4579:8:145480:145490	11013212	2	True				
ANR	11013241	AssignmentExpression	* stage = 1		11013212	0		=			
ANR	11013242	UnaryOperationExpression	* stage		11013212	0					
ANR	11013243	UnaryOperator	*		11013212	0					
ANR	11013244	Identifier	stage		11013212	1					
ANR	11013245	PrimaryExpression	1		11013212	1					
ANR	11013246	ExpressionStatement	* cont = 1	4580:8:145500:145509	11013212	3	True				
ANR	11013247	AssignmentExpression	* cont = 1		11013212	0		=			
ANR	11013248	UnaryOperationExpression	* cont		11013212	0					
ANR	11013249	UnaryOperator	*		11013212	0					
ANR	11013250	Identifier	cont		11013212	1					
ANR	11013251	PrimaryExpression	1		11013212	1					
ANR	11013252	IfStatement	if ( pcs -> params . indexed . use_proc )		11013212	4					
ANR	11013253	Condition	pcs -> params . indexed . use_proc	4585:12:145631:145658	11013212	0	True				
ANR	11013254	MemberAccess	pcs -> params . indexed . use_proc		11013212	0					
ANR	11013255	MemberAccess	pcs -> params . indexed		11013212	0					
ANR	11013256	PtrMemberAccess	pcs -> params		11013212	0					
ANR	11013257	Identifier	pcs		11013212	0					
ANR	11013258	Identifier	params		11013212	1					
ANR	11013259	Identifier	indexed		11013212	1					
ANR	11013260	Identifier	use_proc		11013212	1					
ANR	11013261	CompoundStatement		20:12:532:540	11013212	1					
ANR	11013262	IdentifierDeclStatement	es_ptr ep = ++ esp ;	4586:12:145675:145692	11013212	0	True				
ANR	11013263	IdentifierDecl	ep = ++ esp		11013212	0					
ANR	11013264	IdentifierDeclType	es_ptr		11013212	0					
ANR	11013265	Identifier	ep		11013212	1					
ANR	11013266	AssignmentExpression	ep = ++ esp		11013212	2		=			
ANR	11013267	Identifier	ep		11013212	0					
ANR	11013268	UnaryExpression	++ esp		11013212	1					
ANR	11013269	IncDec	++		11013212	0					
ANR	11013270	Identifier	esp		11013212	1					
ANR	11013271	IdentifierDeclStatement	ref proc ;	4587:12:145706:145714	11013212	1	True				
ANR	11013272	IdentifierDecl	proc		11013212	0					
ANR	11013273	IdentifierDeclType	ref		11013212	0					
ANR	11013274	Identifier	proc		11013212	1					
ANR	11013275	ExpressionStatement	check_estack ( 1 )	4592:12:145893:145908	11013212	2	True				
ANR	11013276	CallExpression	check_estack ( 1 )		11013212	0					
ANR	11013277	Callee	check_estack		11013212	0					
ANR	11013278	Identifier	check_estack		11013212	0					
ANR	11013279	ArgumentList	1		11013212	1					
ANR	11013280	Argument	1		11013212	0					
ANR	11013281	PrimaryExpression	1		11013212	0					
ANR	11013282	ExpressionStatement	"code = array_get ( imemory , space , 3 , & proc )"	4593:12:145922:145964	11013212	3	True				
ANR	11013283	AssignmentExpression	"code = array_get ( imemory , space , 3 , & proc )"		11013212	0		=			
ANR	11013284	Identifier	code		11013212	0					
ANR	11013285	CallExpression	"array_get ( imemory , space , 3 , & proc )"		11013212	1					
ANR	11013286	Callee	array_get		11013212	0					
ANR	11013287	Identifier	array_get		11013212	0					
ANR	11013288	ArgumentList	imemory		11013212	1					
ANR	11013289	Argument	imemory		11013212	0					
ANR	11013290	Identifier	imemory		11013212	0					
ANR	11013291	Argument	space		11013212	1					
ANR	11013292	Identifier	space		11013212	0					
ANR	11013293	Argument	3		11013212	2					
ANR	11013294	PrimaryExpression	3		11013212	0					
ANR	11013295	Argument	& proc		11013212	3					
ANR	11013296	UnaryOperationExpression	& proc		11013212	0					
ANR	11013297	UnaryOperator	&		11013212	0					
ANR	11013298	Identifier	proc		11013212	1					
ANR	11013299	IfStatement	if ( code < 0 )		11013212	4					
ANR	11013300	Condition	code < 0	4594:16:145982:145989	11013212	0	True				
ANR	11013301	RelationalExpression	code < 0		11013212	0		<			
ANR	11013302	Identifier	code		11013212	0					
ANR	11013303	PrimaryExpression	0		11013212	1					
ANR	11013304	ReturnStatement	return code ;	4595:16:146008:146019	11013212	1	True				
ANR	11013305	Identifier	code		11013212	0					
ANR	11013306	ExpressionStatement	* ep = proc	4596:12:146033:146043	11013212	5	True				
ANR	11013307	AssignmentExpression	* ep = proc		11013212	0		=			
ANR	11013308	UnaryOperationExpression	* ep		11013212	0					
ANR	11013309	UnaryOperator	*		11013212	0					
ANR	11013310	Identifier	ep		11013212	1					
ANR	11013311	Identifier	proc		11013212	1					
ANR	11013312	ReturnStatement	return o_push_estack ;	4597:12:146075:146095	11013212	6	True				
ANR	11013313	Identifier	o_push_estack		11013212	0					
ANR	11013314	ElseStatement	else		11013212	0					
ANR	11013315	CompoundStatement		34:12:1007:1082	11013212	0					
ANR	11013316	IdentifierDeclStatement	"int i , index ;"	4599:12:146126:146138	11013212	0	True				
ANR	11013317	IdentifierDecl	i		11013212	0					
ANR	11013318	IdentifierDeclType	int		11013212	0					
ANR	11013319	Identifier	i		11013212	1					
ANR	11013320	IdentifierDecl	index		11013212	1					
ANR	11013321	IdentifierDeclType	int		11013212	0					
ANR	11013322	Identifier	index		11013212	1					
ANR	11013323	IdentifierDeclStatement	os_ptr op = osp ;	4600:12:146152:146167	11013212	1	True				
ANR	11013324	IdentifierDecl	op = osp		11013212	0					
ANR	11013325	IdentifierDeclType	os_ptr		11013212	0					
ANR	11013326	Identifier	op		11013212	1					
ANR	11013327	AssignmentExpression	op = osp		11013212	2		=			
ANR	11013328	Identifier	osp		11013212	0					
ANR	11013329	Identifier	osp		11013212	1					
ANR	11013330	IdentifierDeclStatement	unsigned char * ptr = ( unsigned char * ) pcs -> params . indexed . lookup . table . data ;	4601:12:146181:146256	11013212	2	True				
ANR	11013331	IdentifierDecl	* ptr = ( unsigned char * ) pcs -> params . indexed . lookup . table . data		11013212	0					
ANR	11013332	IdentifierDeclType	unsigned char *		11013212	0					
ANR	11013333	Identifier	ptr		11013212	1					
ANR	11013334	AssignmentExpression	* ptr = ( unsigned char * ) pcs -> params . indexed . lookup . table . data		11013212	2		=			
ANR	11013335	Identifier	ptr		11013212	0					
ANR	11013336	CastExpression	( unsigned char * ) pcs -> params . indexed . lookup . table . data		11013212	1					
ANR	11013337	CastTarget	unsigned char *		11013212	0					
ANR	11013338	MemberAccess	pcs -> params . indexed . lookup . table . data		11013212	1					
ANR	11013339	MemberAccess	pcs -> params . indexed . lookup . table		11013212	0					
ANR	11013340	MemberAccess	pcs -> params . indexed . lookup		11013212	0					
ANR	11013341	MemberAccess	pcs -> params . indexed		11013212	0					
ANR	11013342	PtrMemberAccess	pcs -> params		11013212	0					
ANR	11013343	Identifier	pcs		11013212	0					
ANR	11013344	Identifier	params		11013212	1					
ANR	11013345	Identifier	indexed		11013212	1					
ANR	11013346	Identifier	lookup		11013212	1					
ANR	11013347	Identifier	table		11013212	1					
ANR	11013348	Identifier	data		11013212	1					
ANR	11013349	ExpressionStatement	* stage = 0	4603:12:146271:146281	11013212	3	True				
ANR	11013350	AssignmentExpression	* stage = 0		11013212	0		=			
ANR	11013351	UnaryOperationExpression	* stage		11013212	0					
ANR	11013352	UnaryOperator	*		11013212	0					
ANR	11013353	Identifier	stage		11013212	1					
ANR	11013354	PrimaryExpression	0		11013212	1					
ANR	11013355	IfStatement	"if ( ! r_has_type ( op , t_integer ) )"		11013212	4					
ANR	11013356	Condition	"! r_has_type ( op , t_integer )"	4606:16:146427:146452	11013212	0	True				
ANR	11013357	UnaryOperationExpression	"! r_has_type ( op , t_integer )"		11013212	0					
ANR	11013358	UnaryOperator	!		11013212	0					
ANR	11013359	CallExpression	"r_has_type ( op , t_integer )"		11013212	1					
ANR	11013360	Callee	r_has_type		11013212	0					
ANR	11013361	Identifier	r_has_type		11013212	0					
ANR	11013362	ArgumentList	op		11013212	1					
ANR	11013363	Argument	op		11013212	0					
ANR	11013364	Identifier	op		11013212	0					
ANR	11013365	Argument	t_integer		11013212	1					
ANR	11013366	Identifier	t_integer		11013212	0					
ANR	11013367	ExpressionStatement	return_error ( gs_error_typecheck )	4607:16:146471:146504	11013212	1	True				
ANR	11013368	CallExpression	return_error ( gs_error_typecheck )		11013212	0					
ANR	11013369	Callee	return_error		11013212	0					
ANR	11013370	Identifier	return_error		11013212	0					
ANR	11013371	ArgumentList	gs_error_typecheck		11013212	1					
ANR	11013372	Argument	gs_error_typecheck		11013212	0					
ANR	11013373	Identifier	gs_error_typecheck		11013212	0					
ANR	11013374	ExpressionStatement	index = op -> value . intval	4608:12:146518:146542	11013212	5	True				
ANR	11013375	AssignmentExpression	index = op -> value . intval		11013212	0		=			
ANR	11013376	Identifier	index		11013212	0					
ANR	11013377	MemberAccess	op -> value . intval		11013212	1					
ANR	11013378	PtrMemberAccess	op -> value		11013212	0					
ANR	11013379	Identifier	op		11013212	0					
ANR	11013380	Identifier	value		11013212	1					
ANR	11013381	Identifier	intval		11013212	1					
ANR	11013382	ExpressionStatement	pop ( 1 )	4610:12:146604:146610	11013212	6	True				
ANR	11013383	CallExpression	pop ( 1 )		11013212	0					
ANR	11013384	Callee	pop		11013212	0					
ANR	11013385	Identifier	pop		11013212	0					
ANR	11013386	ArgumentList	1		11013212	1					
ANR	11013387	Argument	1		11013212	0					
ANR	11013388	PrimaryExpression	1		11013212	0					
ANR	11013389	ExpressionStatement	op = osp	4611:12:146624:146632	11013212	7	True				
ANR	11013390	AssignmentExpression	op = osp		11013212	0		=			
ANR	11013391	Identifier	op		11013212	0					
ANR	11013392	Identifier	osp		11013212	1					
ANR	11013393	ExpressionStatement	push ( pcs -> params . indexed . n_comps )	4616:12:146800:146833	11013212	8	True				
ANR	11013394	CallExpression	push ( pcs -> params . indexed . n_comps )		11013212	0					
ANR	11013395	Callee	push		11013212	0					
ANR	11013396	Identifier	push		11013212	0					
ANR	11013397	ArgumentList	pcs -> params . indexed . n_comps		11013212	1					
ANR	11013398	Argument	pcs -> params . indexed . n_comps		11013212	0					
ANR	11013399	MemberAccess	pcs -> params . indexed . n_comps		11013212	0					
ANR	11013400	MemberAccess	pcs -> params . indexed		11013212	0					
ANR	11013401	PtrMemberAccess	pcs -> params		11013212	0					
ANR	11013402	Identifier	pcs		11013212	0					
ANR	11013403	Identifier	params		11013212	1					
ANR	11013404	Identifier	indexed		11013212	1					
ANR	11013405	Identifier	n_comps		11013212	1					
ANR	11013406	ExpressionStatement	op -= pcs -> params . indexed . n_comps - 1	4617:12:146847:146884	11013212	9	True				
ANR	11013407	AssignmentExpression	op -= pcs -> params . indexed . n_comps - 1		11013212	0		-=			
ANR	11013408	Identifier	op		11013212	0					
ANR	11013409	AdditiveExpression	pcs -> params . indexed . n_comps - 1		11013212	1		-			
ANR	11013410	MemberAccess	pcs -> params . indexed . n_comps		11013212	0					
ANR	11013411	MemberAccess	pcs -> params . indexed		11013212	0					
ANR	11013412	PtrMemberAccess	pcs -> params		11013212	0					
ANR	11013413	Identifier	pcs		11013212	0					
ANR	11013414	Identifier	params		11013212	1					
ANR	11013415	Identifier	indexed		11013212	1					
ANR	11013416	Identifier	n_comps		11013212	1					
ANR	11013417	PrimaryExpression	1		11013212	1					
ANR	11013418	ExpressionStatement	ptr += index * pcs -> params . indexed . n_comps	4622:12:147069:147111	11013212	10	True				
ANR	11013419	AssignmentExpression	ptr += index * pcs -> params . indexed . n_comps		11013212	0		+=			
ANR	11013420	Identifier	ptr		11013212	0					
ANR	11013421	MultiplicativeExpression	index * pcs -> params . indexed . n_comps		11013212	1		*			
ANR	11013422	Identifier	index		11013212	0					
ANR	11013423	MemberAccess	pcs -> params . indexed . n_comps		11013212	1					
ANR	11013424	MemberAccess	pcs -> params . indexed		11013212	0					
ANR	11013425	PtrMemberAccess	pcs -> params		11013212	0					
ANR	11013426	Identifier	pcs		11013212	0					
ANR	11013427	Identifier	params		11013212	1					
ANR	11013428	Identifier	indexed		11013212	1					
ANR	11013429	Identifier	n_comps		11013212	1					
ANR	11013430	ForStatement	"for ( i = 0 ; i < pcs -> params . indexed . n_comps ; i ++ , op ++ )"		11013212	11					
ANR	11013431	ForInit	i = 0 ;	4629:17:147401:147406	11013212	0	True				
ANR	11013432	AssignmentExpression	i = 0		11013212	0		=			
ANR	11013433	Identifier	i		11013212	0					
ANR	11013434	PrimaryExpression	0		11013212	1					
ANR	11013435	Condition	i < pcs -> params . indexed . n_comps	4629:24:147408:147438	11013212	1	True				
ANR	11013436	RelationalExpression	i < pcs -> params . indexed . n_comps		11013212	0		<			
ANR	11013437	Identifier	i		11013212	0					
ANR	11013438	MemberAccess	pcs -> params . indexed . n_comps		11013212	1					
ANR	11013439	MemberAccess	pcs -> params . indexed		11013212	0					
ANR	11013440	PtrMemberAccess	pcs -> params		11013212	0					
ANR	11013441	Identifier	pcs		11013212	0					
ANR	11013442	Identifier	params		11013212	1					
ANR	11013443	Identifier	indexed		11013212	1					
ANR	11013444	Identifier	n_comps		11013212	1					
ANR	11013445	Expression	"i ++ , op ++"	4629:57:147441:147449	11013212	2	True				
ANR	11013446	PostIncDecOperationExpression	i ++		11013212	0					
ANR	11013447	Identifier	i		11013212	0					
ANR	11013448	IncDec	++		11013212	1					
ANR	11013449	PostIncDecOperationExpression	op ++		11013212	1					
ANR	11013450	Identifier	op		11013212	0					
ANR	11013451	IncDec	++		11013212	1					
ANR	11013452	CompoundStatement		63:16:2296:2325	11013212	3					
ANR	11013453	IdentifierDeclStatement	float rval = ( * ptr ++ ) / 255.0 ;	4630:16:147470:147499	11013212	0	True				
ANR	11013454	IdentifierDecl	rval = ( * ptr ++ ) / 255.0		11013212	0					
ANR	11013455	IdentifierDeclType	float		11013212	0					
ANR	11013456	Identifier	rval		11013212	1					
ANR	11013457	AssignmentExpression	rval = ( * ptr ++ ) / 255.0		11013212	2		=			
ANR	11013458	Identifier	rval		11013212	0					
ANR	11013459	MultiplicativeExpression	( * ptr ++ ) / 255.0		11013212	1		/			
ANR	11013460	UnaryOperationExpression	* ptr ++		11013212	0					
ANR	11013461	UnaryOperator	*		11013212	0					
ANR	11013462	PostIncDecOperationExpression	ptr ++		11013212	1					
ANR	11013463	Identifier	ptr		11013212	0					
ANR	11013464	IncDec	++		11013212	1					
ANR	11013465	PrimaryExpression	255.0		11013212	1					
ANR	11013466	ExpressionStatement	"make_real ( op , rval )"	4631:16:147517:147536	11013212	1	True				
ANR	11013467	CallExpression	"make_real ( op , rval )"		11013212	0					
ANR	11013468	Callee	make_real		11013212	0					
ANR	11013469	Identifier	make_real		11013212	0					
ANR	11013470	ArgumentList	op		11013212	1					
ANR	11013471	Argument	op		11013212	0					
ANR	11013472	Identifier	op		11013212	0					
ANR	11013473	Argument	rval		11013212	1					
ANR	11013474	Identifier	rval		11013212	0					
ANR	11013475	ReturnStatement	return 0 ;	4633:12:147564:147572	11013212	12	True				
ANR	11013476	PrimaryExpression	0		11013212	0					
ANR	11013477	ElseStatement	else		11013212	0					
ANR	11013478	CompoundStatement		68:11:2421:2421	11013212	0					
ANR	11013479	ExpressionStatement	* stage = 0	4636:8:147605:147615	11013212	0	True				
ANR	11013480	AssignmentExpression	* stage = 0		11013212	0		=			
ANR	11013481	UnaryOperationExpression	* stage		11013212	0					
ANR	11013482	UnaryOperator	*		11013212	0					
ANR	11013483	Identifier	stage		11013212	1					
ANR	11013484	PrimaryExpression	0		11013212	1					
ANR	11013485	ExpressionStatement	* cont = 1	4637:8:147625:147634	11013212	1	True				
ANR	11013486	AssignmentExpression	* cont = 1		11013212	0		=			
ANR	11013487	UnaryOperationExpression	* cont		11013212	0					
ANR	11013488	UnaryOperator	*		11013212	0					
ANR	11013489	Identifier	cont		11013212	1					
ANR	11013490	PrimaryExpression	1		11013212	1					
ANR	11013491	ReturnStatement	return 0 ;	4638:8:147644:147652	11013212	2	True				
ANR	11013492	PrimaryExpression	0		11013212	0					
ANR	11013493	ReturnType	static int		11013212	1					
ANR	11013494	Identifier	indexedbasecolor		11013212	2					
ANR	11013495	ParameterList	"i_ctx_t * i_ctx_p , ref * space , int base , int * stage , int * cont , int * stack_depth"		11013212	3					
ANR	11013496	Parameter	i_ctx_t * i_ctx_p	4567:28:145091:145107	11013212	0	True				
ANR	11013497	ParameterType	i_ctx_t *		11013212	0					
ANR	11013498	Identifier	i_ctx_p		11013212	1					
ANR	11013499	Parameter	ref * space	4567:47:145110:145119	11013212	1	True				
ANR	11013500	ParameterType	ref *		11013212	0					
ANR	11013501	Identifier	space		11013212	1					
ANR	11013502	Parameter	int base	4567:59:145122:145129	11013212	2	True				
ANR	11013503	ParameterType	int		11013212	0					
ANR	11013504	Identifier	base		11013212	1					
ANR	11013505	Parameter	int * stage	4567:69:145132:145141	11013212	3	True				
ANR	11013506	ParameterType	int *		11013212	0					
ANR	11013507	Identifier	stage		11013212	1					
ANR	11013508	Parameter	int * cont	4567:81:145144:145152	11013212	4	True				
ANR	11013509	ParameterType	int *		11013212	0					
ANR	11013510	Identifier	cont		11013212	1					
ANR	11013511	Parameter	int * stack_depth	4567:92:145155:145170	11013212	5	True				
ANR	11013512	ParameterType	int *		11013212	0					
ANR	11013513	Identifier	stack_depth		11013212	1					
ANR	11013514	CFGEntryNode	ENTRY		11013212		True				
ANR	11013515	CFGExitNode	EXIT		11013212		True				
ANR	11013516	Symbol	stack_depth		11013212						
ANR	11013517	Symbol	code		11013212						
ANR	11013518	Symbol	esp		11013212						
ANR	11013519	Symbol	pcs -> params . indexed . use_proc		11013212						
ANR	11013520	Symbol	* op		11013212						
ANR	11013521	Symbol	pcs -> params . indexed . n_comps		11013212						
ANR	11013522	Symbol	* pcs		11013212						
ANR	11013523	Symbol	osp		11013212						
ANR	11013524	Symbol	space		11013212						
ANR	11013525	Symbol	r_has_type		11013212						
ANR	11013526	Symbol	gs_error_typecheck		11013212						
ANR	11013527	Symbol	igs		11013212						
ANR	11013528	Symbol	gs_currentcolorspace		11013212						
ANR	11013529	Symbol	pcs -> params . indexed . lookup		11013212						
ANR	11013530	Symbol	op -> value		11013212						
ANR	11013531	Symbol	rval		11013212						
ANR	11013532	Symbol	imemory		11013212						
ANR	11013533	Symbol	cont		11013212						
ANR	11013534	Symbol	& proc		11013212						
ANR	11013535	Symbol	o_push_estack		11013212						
ANR	11013536	Symbol	pcs		11013212						
ANR	11013537	Symbol	op		11013212						
ANR	11013538	Symbol	proc		11013212						
ANR	11013539	Symbol	* stage		11013212						
ANR	11013540	Symbol	pcs -> params . indexed		11013212						
ANR	11013541	Symbol	pcs -> params . indexed . lookup . table		11013212						
ANR	11013542	Symbol	array_get		11013212						
ANR	11013543	Symbol	* ptr ++		11013212						
ANR	11013544	Symbol	pcs -> params		11013212						
ANR	11013545	Symbol	index		11013212						
ANR	11013546	Symbol	i		11013212						
ANR	11013547	Symbol	pcs -> params . indexed . lookup . table . data		11013212						
ANR	11013548	Symbol	ep		11013212						
ANR	11013549	Symbol	ptr		11013212						
ANR	11013550	Symbol	* ep		11013212						
ANR	11013551	Symbol	stage		11013212						
ANR	11013552	Symbol	t_integer		11013212						
ANR	11013553	Symbol	* cont		11013212						
ANR	11013554	Symbol	i_ctx_p		11013212						
ANR	11013555	Symbol	op -> value . intval		11013212						
ANR	11013556	Symbol	base		11013212						
ANR	11013557	Function	indexedvalidate	4641:0:147662:149003							
ANR	11013558	FunctionDef	"indexedvalidate (i_ctx_t * i_ctx_p , ref * space , float * values , int num_comps)"		11013557	0					
ANR	11013559	CompoundStatement		4642:0:147749:149003	11013557	0					
ANR	11013560	IdentifierDeclStatement	"int code , integer ;"	4643:4:147755:147772	11013557	0	True				
ANR	11013561	IdentifierDecl	code		11013557	0					
ANR	11013562	IdentifierDeclType	int		11013557	0					
ANR	11013563	Identifier	code		11013557	1					
ANR	11013564	IdentifierDecl	integer		11013557	1					
ANR	11013565	IdentifierDeclType	int		11013557	0					
ANR	11013566	Identifier	integer		11013557	1					
ANR	11013567	IdentifierDeclStatement	float fraction ;	4644:4:147778:147792	11013557	1	True				
ANR	11013568	IdentifierDecl	fraction		11013557	0					
ANR	11013569	IdentifierDeclType	float		11013557	0					
ANR	11013570	Identifier	fraction		11013557	1					
ANR	11013571	IdentifierDeclStatement	ref hival ;	4645:4:147798:147807	11013557	2	True				
ANR	11013572	IdentifierDecl	hival		11013557	0					
ANR	11013573	IdentifierDeclType	ref		11013557	0					
ANR	11013574	Identifier	hival		11013557	1					
ANR	11013575	IdentifierDeclStatement	os_ptr op = osp ;	4646:4:147813:147828	11013557	3	True				
ANR	11013576	IdentifierDecl	op = osp		11013557	0					
ANR	11013577	IdentifierDeclType	os_ptr		11013557	0					
ANR	11013578	Identifier	op		11013557	1					
ANR	11013579	AssignmentExpression	op = osp		11013557	2		=			
ANR	11013580	Identifier	osp		11013557	0					
ANR	11013581	Identifier	osp		11013557	1					
ANR	11013582	IfStatement	if ( num_comps < 1 )		11013557	4					
ANR	11013583	Condition	num_comps < 1	4648:8:147839:147851	11013557	0	True				
ANR	11013584	RelationalExpression	num_comps < 1		11013557	0		<			
ANR	11013585	Identifier	num_comps		11013557	0					
ANR	11013586	PrimaryExpression	1		11013557	1					
ANR	11013587	ExpressionStatement	return_error ( gs_error_stackunderflow )	4649:8:147862:147899	11013557	1	True				
ANR	11013588	CallExpression	return_error ( gs_error_stackunderflow )		11013557	0					
ANR	11013589	Callee	return_error		11013557	0					
ANR	11013590	Identifier	return_error		11013557	0					
ANR	11013591	ArgumentList	gs_error_stackunderflow		11013557	1					
ANR	11013592	Argument	gs_error_stackunderflow		11013557	0					
ANR	11013593	Identifier	gs_error_stackunderflow		11013557	0					
ANR	11013594	IfStatement	"if ( ! r_has_type ( op , t_integer ) && ! r_has_type ( op , t_real ) )"		11013557	5					
ANR	11013595	Condition	"! r_has_type ( op , t_integer ) && ! r_has_type ( op , t_real )"	4651:8:147910:147962	11013557	0	True				
ANR	11013596	AndExpression	"! r_has_type ( op , t_integer ) && ! r_has_type ( op , t_real )"		11013557	0		&&			
ANR	11013597	UnaryOperationExpression	"! r_has_type ( op , t_integer )"		11013557	0					
ANR	11013598	UnaryOperator	!		11013557	0					
ANR	11013599	CallExpression	"r_has_type ( op , t_integer )"		11013557	1					
ANR	11013600	Callee	r_has_type		11013557	0					
ANR	11013601	Identifier	r_has_type		11013557	0					
ANR	11013602	ArgumentList	op		11013557	1					
ANR	11013603	Argument	op		11013557	0					
ANR	11013604	Identifier	op		11013557	0					
ANR	11013605	Argument	t_integer		11013557	1					
ANR	11013606	Identifier	t_integer		11013557	0					
ANR	11013607	UnaryOperationExpression	"! r_has_type ( op , t_real )"		11013557	1					
ANR	11013608	UnaryOperator	!		11013557	0					
ANR	11013609	CallExpression	"r_has_type ( op , t_real )"		11013557	1					
ANR	11013610	Callee	r_has_type		11013557	0					
ANR	11013611	Identifier	r_has_type		11013557	0					
ANR	11013612	ArgumentList	op		11013557	1					
ANR	11013613	Argument	op		11013557	0					
ANR	11013614	Identifier	op		11013557	0					
ANR	11013615	Argument	t_real		11013557	1					
ANR	11013616	Identifier	t_real		11013557	0					
ANR	11013617	ExpressionStatement	return_error ( gs_error_typecheck )	4652:8:147973:148005	11013557	1	True				
ANR	11013618	CallExpression	return_error ( gs_error_typecheck )		11013557	0					
ANR	11013619	Callee	return_error		11013557	0					
ANR	11013620	Identifier	return_error		11013557	0					
ANR	11013621	ArgumentList	gs_error_typecheck		11013557	1					
ANR	11013622	Argument	gs_error_typecheck		11013557	0					
ANR	11013623	Identifier	gs_error_typecheck		11013557	0					
ANR	11013624	ExpressionStatement	"code = array_get ( imemory , space , 2 , & hival )"	4654:4:148012:148055	11013557	6	True				
ANR	11013625	AssignmentExpression	"code = array_get ( imemory , space , 2 , & hival )"		11013557	0		=			
ANR	11013626	Identifier	code		11013557	0					
ANR	11013627	CallExpression	"array_get ( imemory , space , 2 , & hival )"		11013557	1					
ANR	11013628	Callee	array_get		11013557	0					
ANR	11013629	Identifier	array_get		11013557	0					
ANR	11013630	ArgumentList	imemory		11013557	1					
ANR	11013631	Argument	imemory		11013557	0					
ANR	11013632	Identifier	imemory		11013557	0					
ANR	11013633	Argument	space		11013557	1					
ANR	11013634	Identifier	space		11013557	0					
ANR	11013635	Argument	2		11013557	2					
ANR	11013636	PrimaryExpression	2		11013557	0					
ANR	11013637	Argument	& hival		11013557	3					
ANR	11013638	UnaryOperationExpression	& hival		11013557	0					
ANR	11013639	UnaryOperator	&		11013557	0					
ANR	11013640	Identifier	hival		11013557	1					
ANR	11013641	IfStatement	if ( code < 0 )		11013557	7					
ANR	11013642	Condition	code < 0	4655:8:148065:148072	11013557	0	True				
ANR	11013643	RelationalExpression	code < 0		11013557	0		<			
ANR	11013644	Identifier	code		11013557	0					
ANR	11013645	PrimaryExpression	0		11013557	1					
ANR	11013646	ReturnStatement	return code ;	4656:8:148083:148094	11013557	1	True				
ANR	11013647	Identifier	code		11013557	0					
ANR	11013648	IfStatement	if ( * values > hival . value . intval )		11013557	8					
ANR	11013649	Condition	* values > hival . value . intval	4658:8:148105:148132	11013557	0	True				
ANR	11013650	RelationalExpression	* values > hival . value . intval		11013557	0		>			
ANR	11013651	UnaryOperationExpression	* values		11013557	0					
ANR	11013652	UnaryOperator	*		11013557	0					
ANR	11013653	Identifier	values		11013557	1					
ANR	11013654	MemberAccess	hival . value . intval		11013557	1					
ANR	11013655	MemberAccess	hival . value		11013557	0					
ANR	11013656	Identifier	hival		11013557	0					
ANR	11013657	Identifier	value		11013557	1					
ANR	11013658	Identifier	intval		11013557	1					
ANR	11013659	ExpressionStatement	* values = ( float ) hival . value . intval	4659:8:148143:148178	11013557	1	True				
ANR	11013660	AssignmentExpression	* values = ( float ) hival . value . intval		11013557	0		=			
ANR	11013661	UnaryOperationExpression	* values		11013557	0					
ANR	11013662	UnaryOperator	*		11013557	0					
ANR	11013663	Identifier	values		11013557	1					
ANR	11013664	CastExpression	( float ) hival . value . intval		11013557	1					
ANR	11013665	CastTarget	float		11013557	0					
ANR	11013666	MemberAccess	hival . value . intval		11013557	1					
ANR	11013667	MemberAccess	hival . value		11013557	0					
ANR	11013668	Identifier	hival		11013557	0					
ANR	11013669	Identifier	value		11013557	1					
ANR	11013670	Identifier	intval		11013557	1					
ANR	11013671	IfStatement	if ( * values < 0 )		11013557	9					
ANR	11013672	Condition	* values < 0	4661:8:148189:148199	11013557	0	True				
ANR	11013673	RelationalExpression	* values < 0		11013557	0		<			
ANR	11013674	UnaryOperationExpression	* values		11013557	0					
ANR	11013675	UnaryOperator	*		11013557	0					
ANR	11013676	Identifier	values		11013557	1					
ANR	11013677	PrimaryExpression	0		11013557	1					
ANR	11013678	ExpressionStatement	* values = 0	4662:8:148210:148221	11013557	1	True				
ANR	11013679	AssignmentExpression	* values = 0		11013557	0		=			
ANR	11013680	UnaryOperationExpression	* values		11013557	0					
ANR	11013681	UnaryOperator	*		11013557	0					
ANR	11013682	Identifier	values		11013557	1					
ANR	11013683	PrimaryExpression	0		11013557	1					
ANR	11013684	ExpressionStatement	integer = ( int ) floor ( * values )	4673:4:148814:148843	11013557	10	True				
ANR	11013685	AssignmentExpression	integer = ( int ) floor ( * values )		11013557	0		=			
ANR	11013686	Identifier	integer		11013557	0					
ANR	11013687	CastExpression	( int ) floor ( * values )		11013557	1					
ANR	11013688	CastTarget	int		11013557	0					
ANR	11013689	CallExpression	floor ( * values )		11013557	1					
ANR	11013690	Callee	floor		11013557	0					
ANR	11013691	Identifier	floor		11013557	0					
ANR	11013692	ArgumentList	* values		11013557	1					
ANR	11013693	Argument	* values		11013557	0					
ANR	11013694	UnaryOperationExpression	* values		11013557	0					
ANR	11013695	UnaryOperator	*		11013557	0					
ANR	11013696	Identifier	values		11013557	1					
ANR	11013697	ExpressionStatement	fraction = * values - integer	4674:4:148849:148877	11013557	11	True				
ANR	11013698	AssignmentExpression	fraction = * values - integer		11013557	0		=			
ANR	11013699	Identifier	fraction		11013557	0					
ANR	11013700	AdditiveExpression	* values - integer		11013557	1		-			
ANR	11013701	UnaryOperationExpression	* values		11013557	0					
ANR	11013702	UnaryOperator	*		11013557	0					
ANR	11013703	Identifier	values		11013557	1					
ANR	11013704	Identifier	integer		11013557	1					
ANR	11013705	IfStatement	if ( fraction >= 0.5 )		11013557	12					
ANR	11013706	Condition	fraction >= 0.5	4676:8:148888:148902	11013557	0	True				
ANR	11013707	RelationalExpression	fraction >= 0.5		11013557	0		>=			
ANR	11013708	Identifier	fraction		11013557	0					
ANR	11013709	PrimaryExpression	0.5		11013557	1					
ANR	11013710	ExpressionStatement	* values = ( float ) ( integer + 1 )	4677:8:148913:148943	11013557	1	True				
ANR	11013711	AssignmentExpression	* values = ( float ) ( integer + 1 )		11013557	0		=			
ANR	11013712	UnaryOperationExpression	* values		11013557	0					
ANR	11013713	UnaryOperator	*		11013557	0					
ANR	11013714	Identifier	values		11013557	1					
ANR	11013715	CastExpression	( float ) ( integer + 1 )		11013557	1					
ANR	11013716	CastTarget	float		11013557	0					
ANR	11013717	AdditiveExpression	integer + 1		11013557	1		+			
ANR	11013718	Identifier	integer		11013557	0					
ANR	11013719	PrimaryExpression	1		11013557	1					
ANR	11013720	ElseStatement	else		11013557	0					
ANR	11013721	ExpressionStatement	* values = ( float ) integer	4679:8:148962:148986	11013557	0	True				
ANR	11013722	AssignmentExpression	* values = ( float ) integer		11013557	0		=			
ANR	11013723	UnaryOperationExpression	* values		11013557	0					
ANR	11013724	UnaryOperator	*		11013557	0					
ANR	11013725	Identifier	values		11013557	1					
ANR	11013726	CastExpression	( float ) integer		11013557	1					
ANR	11013727	CastTarget	float		11013557	0					
ANR	11013728	Identifier	integer		11013557	1					
ANR	11013729	ReturnStatement	return 0 ;	4681:4:148993:149001	11013557	13	True				
ANR	11013730	PrimaryExpression	0		11013557	0					
ANR	11013731	ReturnType	static int		11013557	1					
ANR	11013732	Identifier	indexedvalidate		11013557	2					
ANR	11013733	ParameterList	"i_ctx_t * i_ctx_p , ref * space , float * values , int num_comps"		11013557	3					
ANR	11013734	Parameter	i_ctx_t * i_ctx_p	4641:27:147689:147704	11013557	0	True				
ANR	11013735	ParameterType	i_ctx_t *		11013557	0					
ANR	11013736	Identifier	i_ctx_p		11013557	1					
ANR	11013737	Parameter	ref * space	4641:45:147707:147716	11013557	1	True				
ANR	11013738	ParameterType	ref *		11013557	0					
ANR	11013739	Identifier	space		11013557	1					
ANR	11013740	Parameter	float * values	4641:57:147719:147731	11013557	2	True				
ANR	11013741	ParameterType	float *		11013557	0					
ANR	11013742	Identifier	values		11013557	1					
ANR	11013743	Parameter	int num_comps	4641:72:147734:147746	11013557	3	True				
ANR	11013744	ParameterType	int		11013557	0					
ANR	11013745	Identifier	num_comps		11013557	1					
ANR	11013746	CFGEntryNode	ENTRY		11013557		True				
ANR	11013747	CFGExitNode	EXIT		11013557		True				
ANR	11013748	Symbol	op		11013557						
ANR	11013749	Symbol	code		11013557						
ANR	11013750	Symbol	array_get		11013557						
ANR	11013751	Symbol	* values		11013557						
ANR	11013752	Symbol	values		11013557						
ANR	11013753	Symbol	integer		11013557						
ANR	11013754	Symbol	hival		11013557						
ANR	11013755	Symbol	t_real		11013557						
ANR	11013756	Symbol	osp		11013557						
ANR	11013757	Symbol	space		11013557						
ANR	11013758	Symbol	fraction		11013557						
ANR	11013759	Symbol	r_has_type		11013557						
ANR	11013760	Symbol	gs_error_typecheck		11013557						
ANR	11013761	Symbol	t_integer		11013557						
ANR	11013762	Symbol	& hival		11013557						
ANR	11013763	Symbol	gs_error_stackunderflow		11013557						
ANR	11013764	Symbol	hival . value . intval		11013557						
ANR	11013765	Symbol	i_ctx_p		11013557						
ANR	11013766	Symbol	num_comps		11013557						
ANR	11013767	Symbol	imemory		11013557						
ANR	11013768	Symbol	floor		11013557						
ANR	11013769	Symbol	hival . value		11013557						
ANR	11013770	Function	setpatternspace	4685:0:149020:150454							
ANR	11013771	FunctionDef	"setpatternspace (i_ctx_t * i_ctx_p , ref * r , int * stage , int * cont , int CIESubst)"		11013770	0					
ANR	11013772	CompoundStatement		4686:0:149111:150454	11013770	0					
ANR	11013773	IdentifierDeclStatement	gs_color_space * pcs ;	4687:4:149117:149136	11013770	0	True				
ANR	11013774	IdentifierDecl	* pcs		11013770	0					
ANR	11013775	IdentifierDeclType	gs_color_space *		11013770	0					
ANR	11013776	Identifier	pcs		11013770	1					
ANR	11013777	IdentifierDeclStatement	gs_color_space * pcs_base ;	4688:4:149142:149166	11013770	1	True				
ANR	11013778	IdentifierDecl	* pcs_base		11013770	0					
ANR	11013779	IdentifierDeclType	gs_color_space *		11013770	0					
ANR	11013780	Identifier	pcs_base		11013770	1					
ANR	11013781	IdentifierDeclStatement	uint edepth = ref_stack_count ( & e_stack ) ;	4689:4:149172:149211	11013770	2	True				
ANR	11013782	IdentifierDecl	edepth = ref_stack_count ( & e_stack )		11013770	0					
ANR	11013783	IdentifierDeclType	uint		11013770	0					
ANR	11013784	Identifier	edepth		11013770	1					
ANR	11013785	AssignmentExpression	edepth = ref_stack_count ( & e_stack )		11013770	2		=			
ANR	11013786	Identifier	edepth		11013770	0					
ANR	11013787	CallExpression	ref_stack_count ( & e_stack )		11013770	1					
ANR	11013788	Callee	ref_stack_count		11013770	0					
ANR	11013789	Identifier	ref_stack_count		11013770	0					
ANR	11013790	ArgumentList	& e_stack		11013770	1					
ANR	11013791	Argument	& e_stack		11013770	0					
ANR	11013792	UnaryOperationExpression	& e_stack		11013770	0					
ANR	11013793	UnaryOperator	&		11013770	0					
ANR	11013794	Identifier	e_stack		11013770	1					
ANR	11013795	IdentifierDeclStatement	int code = 0 ;	4690:4:149217:149229	11013770	3	True				
ANR	11013796	IdentifierDecl	code = 0		11013770	0					
ANR	11013797	IdentifierDeclType	int		11013770	0					
ANR	11013798	Identifier	code		11013770	1					
ANR	11013799	AssignmentExpression	code = 0		11013770	2		=			
ANR	11013800	Identifier	code		11013770	0					
ANR	11013801	PrimaryExpression	0		11013770	1					
ANR	11013802	IfStatement	if ( i_ctx_p -> language_level < 2 )		11013770	4					
ANR	11013803	Condition	i_ctx_p -> language_level < 2	4692:8:149240:149266	11013770	0	True				
ANR	11013804	RelationalExpression	i_ctx_p -> language_level < 2		11013770	0		<			
ANR	11013805	PtrMemberAccess	i_ctx_p -> language_level		11013770	0					
ANR	11013806	Identifier	i_ctx_p		11013770	0					
ANR	11013807	Identifier	language_level		11013770	1					
ANR	11013808	PrimaryExpression	2		11013770	1					
ANR	11013809	ExpressionStatement	return_error ( gs_error_undefined )	4693:8:149277:149309	11013770	1	True				
ANR	11013810	CallExpression	return_error ( gs_error_undefined )		11013770	0					
ANR	11013811	Callee	return_error		11013770	0					
ANR	11013812	Identifier	return_error		11013770	0					
ANR	11013813	ArgumentList	gs_error_undefined		11013770	1					
ANR	11013814	Argument	gs_error_undefined		11013770	0					
ANR	11013815	Identifier	gs_error_undefined		11013770	0					
ANR	11013816	ExpressionStatement	* cont = 0	4695:4:149316:149325	11013770	5	True				
ANR	11013817	AssignmentExpression	* cont = 0		11013770	0		=			
ANR	11013818	UnaryOperationExpression	* cont		11013770	0					
ANR	11013819	UnaryOperator	*		11013770	0					
ANR	11013820	Identifier	cont		11013770	1					
ANR	11013821	PrimaryExpression	0		11013770	1					
ANR	11013822	ExpressionStatement	pcs_base = NULL	4696:4:149331:149346	11013770	6	True				
ANR	11013823	AssignmentExpression	pcs_base = NULL		11013770	0		=			
ANR	11013824	Identifier	pcs_base		11013770	0					
ANR	11013825	Identifier	NULL		11013770	1					
ANR	11013826	IfStatement	if ( r_is_array ( r ) )		11013770	7					
ANR	11013827	Condition	r_is_array ( r )	4697:8:149356:149368	11013770	0	True				
ANR	11013828	CallExpression	r_is_array ( r )		11013770	0					
ANR	11013829	Callee	r_is_array		11013770	0					
ANR	11013830	Identifier	r_is_array		11013770	0					
ANR	11013831	ArgumentList	r		11013770	1					
ANR	11013832	Argument	r		11013770	0					
ANR	11013833	Identifier	r		11013770	0					
ANR	11013834	CompoundStatement		12:23:259:259	11013770	1					
ANR	11013835	ExpressionStatement	check_read ( * r )	4698:8:149381:149395	11013770	0	True				
ANR	11013836	CallExpression	check_read ( * r )		11013770	0					
ANR	11013837	Callee	check_read		11013770	0					
ANR	11013838	Identifier	check_read		11013770	0					
ANR	11013839	ArgumentList	* r		11013770	1					
ANR	11013840	Argument	* r		11013770	0					
ANR	11013841	UnaryOperationExpression	* r		11013770	0					
ANR	11013842	UnaryOperator	*		11013770	0					
ANR	11013843	Identifier	r		11013770	1					
ANR	11013844	SwitchStatement	switch ( r_size ( r ) )		11013770	1					
ANR	11013845	Condition	r_size ( r )	4700:16:149414:149422	11013770	0	True				
ANR	11013846	CallExpression	r_size ( r )		11013770	0					
ANR	11013847	Callee	r_size		11013770	0					
ANR	11013848	Identifier	r_size		11013770	0					
ANR	11013849	ArgumentList	r		11013770	1					
ANR	11013850	Argument	r		11013770	0					
ANR	11013851	Identifier	r		11013770	0					
ANR	11013852	CompoundStatement		15:27:313:313	11013770	1					
ANR	11013853	Label	case 1 :	4701:12:149439:149445	11013770	0	True				
ANR	11013854	ExpressionStatement	pcs_base = NULL	4702:16:149484:149499	11013770	1	True				
ANR	11013855	AssignmentExpression	pcs_base = NULL		11013770	0		=			
ANR	11013856	Identifier	pcs_base		11013770	0					
ANR	11013857	Identifier	NULL		11013770	1					
ANR	11013858	BreakStatement	break ;	4703:16:149517:149522	11013770	2	True				
ANR	11013859	Label	default :	4704:12:149536:149543	11013770	3	True				
ANR	11013860	Identifier	default		11013770	0					
ANR	11013861	ExpressionStatement	return_error ( gs_error_rangecheck )	4705:16:149561:149594	11013770	4	True				
ANR	11013862	CallExpression	return_error ( gs_error_rangecheck )		11013770	0					
ANR	11013863	Callee	return_error		11013770	0					
ANR	11013864	Identifier	return_error		11013770	0					
ANR	11013865	ArgumentList	gs_error_rangecheck		11013770	1					
ANR	11013866	Argument	gs_error_rangecheck		11013770	0					
ANR	11013867	Identifier	gs_error_rangecheck		11013770	0					
ANR	11013868	Label	case 2 :	4706:12:149608:149614	11013770	5	True				
ANR	11013869	ExpressionStatement	pcs_base = gs_currentcolorspace ( igs )	4707:16:149632:149668	11013770	6	True				
ANR	11013870	AssignmentExpression	pcs_base = gs_currentcolorspace ( igs )		11013770	0		=			
ANR	11013871	Identifier	pcs_base		11013770	0					
ANR	11013872	CallExpression	gs_currentcolorspace ( igs )		11013770	1					
ANR	11013873	Callee	gs_currentcolorspace		11013770	0					
ANR	11013874	Identifier	gs_currentcolorspace		11013770	0					
ANR	11013875	ArgumentList	igs		11013770	1					
ANR	11013876	Argument	igs		11013770	0					
ANR	11013877	Identifier	igs		11013770	0					
ANR	11013878	IfStatement	if ( cs_num_components ( pcs_base ) < 0 )		11013770	7					
ANR	11013879	Condition	cs_num_components ( pcs_base ) < 0	4708:20:149690:149720	11013770	0	True				
ANR	11013880	RelationalExpression	cs_num_components ( pcs_base ) < 0		11013770	0		<			
ANR	11013881	CallExpression	cs_num_components ( pcs_base )		11013770	0					
ANR	11013882	Callee	cs_num_components		11013770	0					
ANR	11013883	Identifier	cs_num_components		11013770	0					
ANR	11013884	ArgumentList	pcs_base		11013770	1					
ANR	11013885	Argument	pcs_base		11013770	0					
ANR	11013886	Identifier	pcs_base		11013770	0					
ANR	11013887	PrimaryExpression	0		11013770	1					
ANR	11013888	ExpressionStatement	return_error ( gs_error_rangecheck )	4709:20:149775:149808	11013770	1	True				
ANR	11013889	CallExpression	return_error ( gs_error_rangecheck )		11013770	0					
ANR	11013890	Callee	return_error		11013770	0					
ANR	11013891	Identifier	return_error		11013770	0					
ANR	11013892	ArgumentList	gs_error_rangecheck		11013770	1					
ANR	11013893	Argument	gs_error_rangecheck		11013770	0					
ANR	11013894	Identifier	gs_error_rangecheck		11013770	0					
ANR	11013895	ExpressionStatement	"pcs = gs_cspace_alloc ( imemory , & gs_color_space_type_Pattern )"	4712:4:149830:149890	11013770	8	True				
ANR	11013896	AssignmentExpression	"pcs = gs_cspace_alloc ( imemory , & gs_color_space_type_Pattern )"		11013770	0		=			
ANR	11013897	Identifier	pcs		11013770	0					
ANR	11013898	CallExpression	"gs_cspace_alloc ( imemory , & gs_color_space_type_Pattern )"		11013770	1					
ANR	11013899	Callee	gs_cspace_alloc		11013770	0					
ANR	11013900	Identifier	gs_cspace_alloc		11013770	0					
ANR	11013901	ArgumentList	imemory		11013770	1					
ANR	11013902	Argument	imemory		11013770	0					
ANR	11013903	Identifier	imemory		11013770	0					
ANR	11013904	Argument	& gs_color_space_type_Pattern		11013770	1					
ANR	11013905	UnaryOperationExpression	& gs_color_space_type_Pattern		11013770	0					
ANR	11013906	UnaryOperator	&		11013770	0					
ANR	11013907	Identifier	gs_color_space_type_Pattern		11013770	1					
ANR	11013908	ExpressionStatement	pcs -> base_space = pcs_base	4713:4:149896:149922	11013770	9	True				
ANR	11013909	AssignmentExpression	pcs -> base_space = pcs_base		11013770	0		=			
ANR	11013910	PtrMemberAccess	pcs -> base_space		11013770	0					
ANR	11013911	Identifier	pcs		11013770	0					
ANR	11013912	Identifier	base_space		11013770	1					
ANR	11013913	Identifier	pcs_base		11013770	1					
ANR	11013914	ExpressionStatement	pcs -> params . pattern . has_base_space = ( pcs_base != NULL )	4714:4:149928:149983	11013770	10	True				
ANR	11013915	AssignmentExpression	pcs -> params . pattern . has_base_space = ( pcs_base != NULL )		11013770	0		=			
ANR	11013916	MemberAccess	pcs -> params . pattern . has_base_space		11013770	0					
ANR	11013917	MemberAccess	pcs -> params . pattern		11013770	0					
ANR	11013918	PtrMemberAccess	pcs -> params		11013770	0					
ANR	11013919	Identifier	pcs		11013770	0					
ANR	11013920	Identifier	params		11013770	1					
ANR	11013921	Identifier	pattern		11013770	1					
ANR	11013922	Identifier	has_base_space		11013770	1					
ANR	11013923	EqualityExpression	pcs_base != NULL		11013770	1		!=			
ANR	11013924	Identifier	pcs_base		11013770	0					
ANR	11013925	Identifier	NULL		11013770	1					
ANR	11013926	ExpressionStatement	rc_increment_cs ( pcs_base )	4715:4:149989:150014	11013770	11	True				
ANR	11013927	CallExpression	rc_increment_cs ( pcs_base )		11013770	0					
ANR	11013928	Callee	rc_increment_cs		11013770	0					
ANR	11013929	Identifier	rc_increment_cs		11013770	0					
ANR	11013930	ArgumentList	pcs_base		11013770	1					
ANR	11013931	Argument	pcs_base		11013770	0					
ANR	11013932	Identifier	pcs_base		11013770	0					
ANR	11013933	ExpressionStatement	"code = gs_setcolorspace ( igs , pcs )"	4716:4:150020:150053	11013770	12	True				
ANR	11013934	AssignmentExpression	"code = gs_setcolorspace ( igs , pcs )"		11013770	0		=			
ANR	11013935	Identifier	code		11013770	0					
ANR	11013936	CallExpression	"gs_setcolorspace ( igs , pcs )"		11013770	1					
ANR	11013937	Callee	gs_setcolorspace		11013770	0					
ANR	11013938	Identifier	gs_setcolorspace		11013770	0					
ANR	11013939	ArgumentList	igs		11013770	1					
ANR	11013940	Argument	igs		11013770	0					
ANR	11013941	Identifier	igs		11013770	0					
ANR	11013942	Argument	pcs		11013770	1					
ANR	11013943	Identifier	pcs		11013770	0					
ANR	11013944	ExpressionStatement	"rc_decrement_only_cs ( pcs , ""zsetpatternspace"" )"	4718:4:150105:150150	11013770	13	True				
ANR	11013945	CallExpression	"rc_decrement_only_cs ( pcs , ""zsetpatternspace"" )"		11013770	0					
ANR	11013946	Callee	rc_decrement_only_cs		11013770	0					
ANR	11013947	Identifier	rc_decrement_only_cs		11013770	0					
ANR	11013948	ArgumentList	pcs		11013770	1					
ANR	11013949	Argument	pcs		11013770	0					
ANR	11013950	Identifier	pcs		11013770	0					
ANR	11013951	Argument	"""zsetpatternspace"""		11013770	1					
ANR	11013952	PrimaryExpression	"""zsetpatternspace"""		11013770	0					
ANR	11013953	IfStatement	if ( code < 0 )		11013770	14					
ANR	11013954	Condition	code < 0	4719:8:150160:150167	11013770	0	True				
ANR	11013955	RelationalExpression	code < 0		11013770	0		<			
ANR	11013956	Identifier	code		11013770	0					
ANR	11013957	PrimaryExpression	0		11013770	1					
ANR	11013958	CompoundStatement		34:18:1058:1058	11013770	1					
ANR	11013959	ExpressionStatement	"ref_stack_pop_to ( & e_stack , edepth )"	4720:8:150180:150214	11013770	0	True				
ANR	11013960	CallExpression	"ref_stack_pop_to ( & e_stack , edepth )"		11013770	0					
ANR	11013961	Callee	ref_stack_pop_to		11013770	0					
ANR	11013962	Identifier	ref_stack_pop_to		11013770	0					
ANR	11013963	ArgumentList	& e_stack		11013770	1					
ANR	11013964	Argument	& e_stack		11013770	0					
ANR	11013965	UnaryOperationExpression	& e_stack		11013770	0					
ANR	11013966	UnaryOperator	&		11013770	0					
ANR	11013967	Identifier	e_stack		11013770	1					
ANR	11013968	Argument	edepth		11013770	1					
ANR	11013969	Identifier	edepth		11013770	0					
ANR	11013970	ReturnStatement	return code ;	4721:8:150224:150235	11013770	1	True				
ANR	11013971	Identifier	code		11013770	0					
ANR	11013972	ExpressionStatement	make_null ( & istate -> pattern [ 0 ] )	4723:4:150247:150277	11013770	15	True				
ANR	11013973	CallExpression	make_null ( & istate -> pattern [ 0 ] )		11013770	0					
ANR	11013974	Callee	make_null		11013770	0					
ANR	11013975	Identifier	make_null		11013770	0					
ANR	11013976	ArgumentList	& istate -> pattern [ 0 ]		11013770	1					
ANR	11013977	Argument	& istate -> pattern [ 0 ]		11013770	0					
ANR	11013978	UnaryOperationExpression	& istate -> pattern [ 0 ]		11013770	0					
ANR	11013979	UnaryOperator	&		11013770	0					
ANR	11013980	ArrayIndexing	istate -> pattern [ 0 ]		11013770	1					
ANR	11013981	PtrMemberAccess	istate -> pattern		11013770	0					
ANR	11013982	Identifier	istate		11013770	0					
ANR	11013983	Identifier	pattern		11013770	1					
ANR	11013984	PrimaryExpression	0		11013770	1					
ANR	11013985	ExpressionStatement	* stage = 0	4724:4:150332:150342	11013770	16	True				
ANR	11013986	AssignmentExpression	* stage = 0		11013770	0		=			
ANR	11013987	UnaryOperationExpression	* stage		11013770	0					
ANR	11013988	UnaryOperator	*		11013770	0					
ANR	11013989	Identifier	stage		11013770	1					
ANR	11013990	PrimaryExpression	0		11013770	1					
ANR	11013991	ReturnStatement	return ( ref_stack_count ( & e_stack ) == edepth ? 0 : o_push_estack ) ;	4725:4:150348:150412	11013770	17	True				
ANR	11013992	ConditionalExpression	ref_stack_count ( & e_stack ) == edepth ? 0 : o_push_estack		11013770	0					
ANR	11013993	Condition	ref_stack_count ( & e_stack ) == edepth		11013770	0					
ANR	11013994	EqualityExpression	ref_stack_count ( & e_stack ) == edepth		11013770	0		==			
ANR	11013995	CallExpression	ref_stack_count ( & e_stack )		11013770	0					
ANR	11013996	Callee	ref_stack_count		11013770	0					
ANR	11013997	Identifier	ref_stack_count		11013770	0					
ANR	11013998	ArgumentList	& e_stack		11013770	1					
ANR	11013999	Argument	& e_stack		11013770	0					
ANR	11014000	UnaryOperationExpression	& e_stack		11013770	0					
ANR	11014001	UnaryOperator	&		11013770	0					
ANR	11014002	Identifier	e_stack		11013770	1					
ANR	11014003	Identifier	edepth		11013770	1					
ANR	11014004	PrimaryExpression	0		11013770	1					
ANR	11014005	Identifier	o_push_estack		11013770	2					
ANR	11014006	ReturnType	static int		11013770	1					
ANR	11014007	Identifier	setpatternspace		11013770	2					
ANR	11014008	ParameterList	"i_ctx_t * i_ctx_p , ref * r , int * stage , int * cont , int CIESubst"		11013770	3					
ANR	11014009	Parameter	i_ctx_t * i_ctx_p	4685:27:149047:149063	11013770	0	True				
ANR	11014010	ParameterType	i_ctx_t *		11013770	0					
ANR	11014011	Identifier	i_ctx_p		11013770	1					
ANR	11014012	Parameter	ref * r	4685:46:149066:149071	11013770	1	True				
ANR	11014013	ParameterType	ref *		11013770	0					
ANR	11014014	Identifier	r		11013770	1					
ANR	11014015	Parameter	int * stage	4685:54:149074:149083	11013770	2	True				
ANR	11014016	ParameterType	int *		11013770	0					
ANR	11014017	Identifier	stage		11013770	1					
ANR	11014018	Parameter	int * cont	4685:66:149086:149094	11013770	3	True				
ANR	11014019	ParameterType	int *		11013770	0					
ANR	11014020	Identifier	cont		11013770	1					
ANR	11014021	Parameter	int CIESubst	4685:77:149097:149108	11013770	4	True				
ANR	11014022	ParameterType	int		11013770	0					
ANR	11014023	Identifier	CIESubst		11013770	1					
ANR	11014024	CFGEntryNode	ENTRY		11013770		True				
ANR	11014025	CFGExitNode	EXIT		11013770		True				
ANR	11014026	Symbol	code		11013770						
ANR	11014027	Symbol	i_ctx_p -> language_level		11013770						
ANR	11014028	Symbol	gs_error_rangecheck		11013770						
ANR	11014029	Symbol	pcs -> params . pattern		11013770						
ANR	11014030	Symbol	gs_error_undefined		11013770						
ANR	11014031	Symbol	* pcs		11013770						
ANR	11014032	Symbol	gs_setcolorspace		11013770						
ANR	11014033	Symbol	* istate		11013770						
ANR	11014034	Symbol	igs		11013770						
ANR	11014035	Symbol	gs_currentcolorspace		11013770						
ANR	11014036	Symbol	r_size		11013770						
ANR	11014037	Symbol	istate -> pattern		11013770						
ANR	11014038	Symbol	* i_ctx_p		11013770						
ANR	11014039	Symbol	imemory		11013770						
ANR	11014040	Symbol	cont		11013770						
ANR	11014041	Symbol	CIESubst		11013770						
ANR	11014042	Symbol	o_push_estack		11013770						
ANR	11014043	Symbol	pcs		11013770						
ANR	11014044	Symbol	pcs_base		11013770						
ANR	11014045	Symbol	NULL		11013770						
ANR	11014046	Symbol	* stage		11013770						
ANR	11014047	Symbol	& gs_color_space_type_Pattern		11013770						
ANR	11014048	Symbol	pcs -> params		11013770						
ANR	11014049	Symbol	r		11013770						
ANR	11014050	Symbol	pcs -> base_space		11013770						
ANR	11014051	Symbol	stage		11013770						
ANR	11014052	Symbol	edepth		11013770						
ANR	11014053	Symbol	pcs -> params . pattern . has_base_space		11013770						
ANR	11014054	Symbol	* cont		11013770						
ANR	11014055	Symbol	i_ctx_p		11013770						
ANR	11014056	Symbol	cs_num_components		11013770						
ANR	11014057	Symbol	ref_stack_count		11013770						
ANR	11014058	Symbol	r_is_array		11013770						
ANR	11014059	Symbol	gs_cspace_alloc		11013770						
ANR	11014060	Symbol	* r		11013770						
ANR	11014061	Symbol	& e_stack		11013770						
ANR	11014062	Symbol	istate		11013770						
ANR	11014063	Function	validatepatternspace	4727:0:150456:151036							
ANR	11014064	FunctionDef	"validatepatternspace (i_ctx_t * i_ctx_p , ref * * r)"		11014063	0					
ANR	11014065	CompoundStatement		4728:0:150516:151036	11014063	0					
ANR	11014066	IdentifierDeclStatement	int code ;	4729:4:150522:150530	11014063	0	True				
ANR	11014067	IdentifierDecl	code		11014063	0					
ANR	11014068	IdentifierDeclType	int		11014063	0					
ANR	11014069	Identifier	code		11014063	1					
ANR	11014070	IdentifierDeclStatement	ref tref ;	4730:4:150536:150544	11014063	1	True				
ANR	11014071	IdentifierDecl	tref		11014063	0					
ANR	11014072	IdentifierDeclType	ref		11014063	0					
ANR	11014073	Identifier	tref		11014063	1					
ANR	11014074	IfStatement	"if ( ! r_has_type ( * r , t_name ) )"		11014063	2					
ANR	11014075	Condition	"! r_has_type ( * r , t_name )"	4733:8:150641:150663	11014063	0	True				
ANR	11014076	UnaryOperationExpression	"! r_has_type ( * r , t_name )"		11014063	0					
ANR	11014077	UnaryOperator	!		11014063	0					
ANR	11014078	CallExpression	"r_has_type ( * r , t_name )"		11014063	1					
ANR	11014079	Callee	r_has_type		11014063	0					
ANR	11014080	Identifier	r_has_type		11014063	0					
ANR	11014081	ArgumentList	* r		11014063	1					
ANR	11014082	Argument	* r		11014063	0					
ANR	11014083	UnaryOperationExpression	* r		11014063	0					
ANR	11014084	UnaryOperator	*		11014063	0					
ANR	11014085	Identifier	r		11014063	1					
ANR	11014086	Argument	t_name		11014063	1					
ANR	11014087	Identifier	t_name		11014063	0					
ANR	11014088	CompoundStatement		6:33:149:149	11014063	1					
ANR	11014089	IfStatement	if ( r_is_array ( * r ) )		11014063	0					
ANR	11014090	Condition	r_is_array ( * r )	4734:12:150680:150693	11014063	0	True				
ANR	11014091	CallExpression	r_is_array ( * r )		11014063	0					
ANR	11014092	Callee	r_is_array		11014063	0					
ANR	11014093	Identifier	r_is_array		11014063	0					
ANR	11014094	ArgumentList	* r		11014063	1					
ANR	11014095	Argument	* r		11014063	0					
ANR	11014096	UnaryOperationExpression	* r		11014063	0					
ANR	11014097	UnaryOperator	*		11014063	0					
ANR	11014098	Identifier	r		11014063	1					
ANR	11014099	CompoundStatement		7:28:179:179	11014063	1					
ANR	11014100	IfStatement	if ( r_size ( * r ) > 1 )		11014063	0					
ANR	11014101	Condition	r_size ( * r ) > 1	4735:16:150714:150727	11014063	0	True				
ANR	11014102	RelationalExpression	r_size ( * r ) > 1		11014063	0		>			
ANR	11014103	CallExpression	r_size ( * r )		11014063	0					
ANR	11014104	Callee	r_size		11014063	0					
ANR	11014105	Identifier	r_size		11014063	0					
ANR	11014106	ArgumentList	* r		11014063	1					
ANR	11014107	Argument	* r		11014063	0					
ANR	11014108	UnaryOperationExpression	* r		11014063	0					
ANR	11014109	UnaryOperator	*		11014063	0					
ANR	11014110	Identifier	r		11014063	1					
ANR	11014111	PrimaryExpression	1		11014063	1					
ANR	11014112	CompoundStatement		8:32:213:213	11014063	1					
ANR	11014113	ExpressionStatement	"code = array_get ( imemory , * r , 1 , & tref )"	4736:16:150748:150787	11014063	0	True				
ANR	11014114	AssignmentExpression	"code = array_get ( imemory , * r , 1 , & tref )"		11014063	0		=			
ANR	11014115	Identifier	code		11014063	0					
ANR	11014116	CallExpression	"array_get ( imemory , * r , 1 , & tref )"		11014063	1					
ANR	11014117	Callee	array_get		11014063	0					
ANR	11014118	Identifier	array_get		11014063	0					
ANR	11014119	ArgumentList	imemory		11014063	1					
ANR	11014120	Argument	imemory		11014063	0					
ANR	11014121	Identifier	imemory		11014063	0					
ANR	11014122	Argument	* r		11014063	1					
ANR	11014123	UnaryOperationExpression	* r		11014063	0					
ANR	11014124	UnaryOperator	*		11014063	0					
ANR	11014125	Identifier	r		11014063	1					
ANR	11014126	Argument	1		11014063	2					
ANR	11014127	PrimaryExpression	1		11014063	0					
ANR	11014128	Argument	& tref		11014063	3					
ANR	11014129	UnaryOperationExpression	& tref		11014063	0					
ANR	11014130	UnaryOperator	&		11014063	0					
ANR	11014131	Identifier	tref		11014063	1					
ANR	11014132	IfStatement	if ( code < 0 )		11014063	1					
ANR	11014133	Condition	code < 0	4737:20:150809:150816	11014063	0	True				
ANR	11014134	RelationalExpression	code < 0		11014063	0		<			
ANR	11014135	Identifier	code		11014063	0					
ANR	11014136	PrimaryExpression	0		11014063	1					
ANR	11014137	ReturnStatement	return code ;	4738:20:150839:150850	11014063	1	True				
ANR	11014138	Identifier	code		11014063	0					
ANR	11014139	ExpressionStatement	"ref_assign ( * r , & tref )"	4739:16:150868:150889	11014063	2	True				
ANR	11014140	CallExpression	"ref_assign ( * r , & tref )"		11014063	0					
ANR	11014141	Callee	ref_assign		11014063	0					
ANR	11014142	Identifier	ref_assign		11014063	0					
ANR	11014143	ArgumentList	* r		11014063	1					
ANR	11014144	Argument	* r		11014063	0					
ANR	11014145	UnaryOperationExpression	* r		11014063	0					
ANR	11014146	UnaryOperator	*		11014063	0					
ANR	11014147	Identifier	r		11014063	1					
ANR	11014148	Argument	& tref		11014063	1					
ANR	11014149	UnaryOperationExpression	& tref		11014063	0					
ANR	11014150	UnaryOperator	&		11014063	0					
ANR	11014151	Identifier	tref		11014063	1					
ANR	11014152	ElseStatement	else		11014063	0					
ANR	11014153	ExpressionStatement	* r = 0	4741:16:150926:150932	11014063	0	True				
ANR	11014154	AssignmentExpression	* r = 0		11014063	0		=			
ANR	11014155	UnaryOperationExpression	* r		11014063	0					
ANR	11014156	UnaryOperator	*		11014063	0					
ANR	11014157	Identifier	r		11014063	1					
ANR	11014158	PrimaryExpression	0		11014063	1					
ANR	11014159	ElseStatement	else		11014063	0					
ANR	11014160	ExpressionStatement	return_error ( gs_error_typecheck )	4743:12:150961:150993	11014063	0	True				
ANR	11014161	CallExpression	return_error ( gs_error_typecheck )		11014063	0					
ANR	11014162	Callee	return_error		11014063	0					
ANR	11014163	Identifier	return_error		11014063	0					
ANR	11014164	ArgumentList	gs_error_typecheck		11014063	1					
ANR	11014165	Argument	gs_error_typecheck		11014063	0					
ANR	11014166	Identifier	gs_error_typecheck		11014063	0					
ANR	11014167	ElseStatement	else		11014063	0					
ANR	11014168	ExpressionStatement	* r = 0	4745:8:151014:151020	11014063	0	True				
ANR	11014169	AssignmentExpression	* r = 0		11014063	0		=			
ANR	11014170	UnaryOperationExpression	* r		11014063	0					
ANR	11014171	UnaryOperator	*		11014063	0					
ANR	11014172	Identifier	r		11014063	1					
ANR	11014173	PrimaryExpression	0		11014063	1					
ANR	11014174	ReturnStatement	return 0 ;	4746:4:151026:151034	11014063	3	True				
ANR	11014175	PrimaryExpression	0		11014063	0					
ANR	11014176	ReturnType	static int		11014063	1					
ANR	11014177	Identifier	validatepatternspace		11014063	2					
ANR	11014178	ParameterList	"i_ctx_t * i_ctx_p , ref * * r"		11014063	3					
ANR	11014179	Parameter	i_ctx_t * i_ctx_p	4727:32:150488:150504	11014063	0	True				
ANR	11014180	ParameterType	i_ctx_t *		11014063	0					
ANR	11014181	Identifier	i_ctx_p		11014063	1					
ANR	11014182	Parameter	ref * * r	4727:51:150507:150513	11014063	1	True				
ANR	11014183	ParameterType	ref * *		11014063	0					
ANR	11014184	Identifier	r		11014063	1					
ANR	11014185	CFGEntryNode	ENTRY		11014063		True				
ANR	11014186	CFGExitNode	EXIT		11014063		True				
ANR	11014187	Symbol	code		11014063						
ANR	11014188	Symbol	array_get		11014063						
ANR	11014189	Symbol	& tref		11014063						
ANR	11014190	Symbol	tref		11014063						
ANR	11014191	Symbol	r		11014063						
ANR	11014192	Symbol	r_has_type		11014063						
ANR	11014193	Symbol	gs_error_typecheck		11014063						
ANR	11014194	Symbol	i_ctx_p		11014063						
ANR	11014195	Symbol	t_name		11014063						
ANR	11014196	Symbol	r_size		11014063						
ANR	11014197	Symbol	r_is_array		11014063						
ANR	11014198	Symbol	imemory		11014063						
ANR	11014199	Symbol	* r		11014063						
ANR	11014200	Function	patternalternatespace	4748:0:151038:151563							
ANR	11014201	FunctionDef	"patternalternatespace (i_ctx_t * i_ctx_p , ref * space , ref * * r , int * CIESubst)"		11014200	0					
ANR	11014202	CompoundStatement		4749:0:151126:151563	11014200	0					
ANR	11014203	IdentifierDeclStatement	ref tref ;	4750:4:151132:151140	11014200	0	True				
ANR	11014204	IdentifierDecl	tref		11014200	0					
ANR	11014205	IdentifierDeclType	ref		11014200	0					
ANR	11014206	Identifier	tref		11014200	1					
ANR	11014207	IdentifierDeclStatement	int code ;	4751:4:151146:151154	11014200	1	True				
ANR	11014208	IdentifierDecl	code		11014200	0					
ANR	11014209	IdentifierDeclType	int		11014200	0					
ANR	11014210	Identifier	code		11014200	1					
ANR	11014211	IfStatement	"if ( ! r_has_type ( * r , t_name ) )"		11014200	2					
ANR	11014212	Condition	"! r_has_type ( * r , t_name )"	4753:8:151165:151187	11014200	0	True				
ANR	11014213	UnaryOperationExpression	"! r_has_type ( * r , t_name )"		11014200	0					
ANR	11014214	UnaryOperator	!		11014200	0					
ANR	11014215	CallExpression	"r_has_type ( * r , t_name )"		11014200	1					
ANR	11014216	Callee	r_has_type		11014200	0					
ANR	11014217	Identifier	r_has_type		11014200	0					
ANR	11014218	ArgumentList	* r		11014200	1					
ANR	11014219	Argument	* r		11014200	0					
ANR	11014220	UnaryOperationExpression	* r		11014200	0					
ANR	11014221	UnaryOperator	*		11014200	0					
ANR	11014222	Identifier	r		11014200	1					
ANR	11014223	Argument	t_name		11014200	1					
ANR	11014224	Identifier	t_name		11014200	0					
ANR	11014225	CompoundStatement		5:33:63:63	11014200	1					
ANR	11014226	IfStatement	if ( r_is_array ( * r ) )		11014200	0					
ANR	11014227	Condition	r_is_array ( * r )	4754:12:151204:151217	11014200	0	True				
ANR	11014228	CallExpression	r_is_array ( * r )		11014200	0					
ANR	11014229	Callee	r_is_array		11014200	0					
ANR	11014230	Identifier	r_is_array		11014200	0					
ANR	11014231	ArgumentList	* r		11014200	1					
ANR	11014232	Argument	* r		11014200	0					
ANR	11014233	UnaryOperationExpression	* r		11014200	0					
ANR	11014234	UnaryOperator	*		11014200	0					
ANR	11014235	Identifier	r		11014200	1					
ANR	11014236	CompoundStatement		6:28:93:93	11014200	1					
ANR	11014237	IfStatement	if ( r_size ( * r ) > 1 )		11014200	0					
ANR	11014238	Condition	r_size ( * r ) > 1	4755:16:151238:151251	11014200	0	True				
ANR	11014239	RelationalExpression	r_size ( * r ) > 1		11014200	0		>			
ANR	11014240	CallExpression	r_size ( * r )		11014200	0					
ANR	11014241	Callee	r_size		11014200	0					
ANR	11014242	Identifier	r_size		11014200	0					
ANR	11014243	ArgumentList	* r		11014200	1					
ANR	11014244	Argument	* r		11014200	0					
ANR	11014245	UnaryOperationExpression	* r		11014200	0					
ANR	11014246	UnaryOperator	*		11014200	0					
ANR	11014247	Identifier	r		11014200	1					
ANR	11014248	PrimaryExpression	1		11014200	1					
ANR	11014249	CompoundStatement		7:32:127:127	11014200	1					
ANR	11014250	ExpressionStatement	"code = array_get ( imemory , space , 1 , & tref )"	4756:16:151272:151314	11014200	0	True				
ANR	11014251	AssignmentExpression	"code = array_get ( imemory , space , 1 , & tref )"		11014200	0		=			
ANR	11014252	Identifier	code		11014200	0					
ANR	11014253	CallExpression	"array_get ( imemory , space , 1 , & tref )"		11014200	1					
ANR	11014254	Callee	array_get		11014200	0					
ANR	11014255	Identifier	array_get		11014200	0					
ANR	11014256	ArgumentList	imemory		11014200	1					
ANR	11014257	Argument	imemory		11014200	0					
ANR	11014258	Identifier	imemory		11014200	0					
ANR	11014259	Argument	space		11014200	1					
ANR	11014260	Identifier	space		11014200	0					
ANR	11014261	Argument	1		11014200	2					
ANR	11014262	PrimaryExpression	1		11014200	0					
ANR	11014263	Argument	& tref		11014200	3					
ANR	11014264	UnaryOperationExpression	& tref		11014200	0					
ANR	11014265	UnaryOperator	&		11014200	0					
ANR	11014266	Identifier	tref		11014200	1					
ANR	11014267	IfStatement	if ( code < 0 )		11014200	1					
ANR	11014268	Condition	code < 0	4757:20:151336:151343	11014200	0	True				
ANR	11014269	RelationalExpression	code < 0		11014200	0		<			
ANR	11014270	Identifier	code		11014200	0					
ANR	11014271	PrimaryExpression	0		11014200	1					
ANR	11014272	ReturnStatement	return code ;	4758:20:151366:151377	11014200	1	True				
ANR	11014273	Identifier	code		11014200	0					
ANR	11014274	ExpressionStatement	"ref_assign ( * r , & tref )"	4759:16:151395:151416	11014200	2	True				
ANR	11014275	CallExpression	"ref_assign ( * r , & tref )"		11014200	0					
ANR	11014276	Callee	ref_assign		11014200	0					
ANR	11014277	Identifier	ref_assign		11014200	0					
ANR	11014278	ArgumentList	* r		11014200	1					
ANR	11014279	Argument	* r		11014200	0					
ANR	11014280	UnaryOperationExpression	* r		11014200	0					
ANR	11014281	UnaryOperator	*		11014200	0					
ANR	11014282	Identifier	r		11014200	1					
ANR	11014283	Argument	& tref		11014200	1					
ANR	11014284	UnaryOperationExpression	& tref		11014200	0					
ANR	11014285	UnaryOperator	&		11014200	0					
ANR	11014286	Identifier	tref		11014200	1					
ANR	11014287	ElseStatement	else		11014200	0					
ANR	11014288	ExpressionStatement	* r = 0	4761:16:151453:151459	11014200	0	True				
ANR	11014289	AssignmentExpression	* r = 0		11014200	0		=			
ANR	11014290	UnaryOperationExpression	* r		11014200	0					
ANR	11014291	UnaryOperator	*		11014200	0					
ANR	11014292	Identifier	r		11014200	1					
ANR	11014293	PrimaryExpression	0		11014200	1					
ANR	11014294	ElseStatement	else		11014200	0					
ANR	11014295	ExpressionStatement	return_error ( gs_error_typecheck )	4763:12:151488:151520	11014200	0	True				
ANR	11014296	CallExpression	return_error ( gs_error_typecheck )		11014200	0					
ANR	11014297	Callee	return_error		11014200	0					
ANR	11014298	Identifier	return_error		11014200	0					
ANR	11014299	ArgumentList	gs_error_typecheck		11014200	1					
ANR	11014300	Argument	gs_error_typecheck		11014200	0					
ANR	11014301	Identifier	gs_error_typecheck		11014200	0					
ANR	11014302	ElseStatement	else		11014200	0					
ANR	11014303	ExpressionStatement	* r = 0	4765:8:151541:151547	11014200	0	True				
ANR	11014304	AssignmentExpression	* r = 0		11014200	0		=			
ANR	11014305	UnaryOperationExpression	* r		11014200	0					
ANR	11014306	UnaryOperator	*		11014200	0					
ANR	11014307	Identifier	r		11014200	1					
ANR	11014308	PrimaryExpression	0		11014200	1					
ANR	11014309	ReturnStatement	return 0 ;	4766:4:151553:151561	11014200	3	True				
ANR	11014310	PrimaryExpression	0		11014200	0					
ANR	11014311	ReturnType	static int		11014200	1					
ANR	11014312	Identifier	patternalternatespace		11014200	2					
ANR	11014313	ParameterList	"i_ctx_t * i_ctx_p , ref * space , ref * * r , int * CIESubst"		11014200	3					
ANR	11014314	Parameter	i_ctx_t * i_ctx_p	4748:33:151071:151087	11014200	0	True				
ANR	11014315	ParameterType	i_ctx_t *		11014200	0					
ANR	11014316	Identifier	i_ctx_p		11014200	1					
ANR	11014317	Parameter	ref * space	4748:52:151090:151099	11014200	1	True				
ANR	11014318	ParameterType	ref *		11014200	0					
ANR	11014319	Identifier	space		11014200	1					
ANR	11014320	Parameter	ref * * r	4748:64:151102:151108	11014200	2	True				
ANR	11014321	ParameterType	ref * *		11014200	0					
ANR	11014322	Identifier	r		11014200	1					
ANR	11014323	Parameter	int * CIESubst	4748:73:151111:151123	11014200	3	True				
ANR	11014324	ParameterType	int *		11014200	0					
ANR	11014325	Identifier	CIESubst		11014200	1					
ANR	11014326	CFGEntryNode	ENTRY		11014200		True				
ANR	11014327	CFGExitNode	EXIT		11014200		True				
ANR	11014328	Symbol	code		11014200						
ANR	11014329	Symbol	array_get		11014200						
ANR	11014330	Symbol	& tref		11014200						
ANR	11014331	Symbol	tref		11014200						
ANR	11014332	Symbol	space		11014200						
ANR	11014333	Symbol	r		11014200						
ANR	11014334	Symbol	r_has_type		11014200						
ANR	11014335	Symbol	gs_error_typecheck		11014200						
ANR	11014336	Symbol	i_ctx_p		11014200						
ANR	11014337	Symbol	t_name		11014200						
ANR	11014338	Symbol	r_size		11014200						
ANR	11014339	Symbol	r_is_array		11014200						
ANR	11014340	Symbol	imemory		11014200						
ANR	11014341	Symbol	* r		11014200						
ANR	11014342	Symbol	CIESubst		11014200						
ANR	11014343	Function	patterncomponent	4768:0:151565:152522							
ANR	11014344	FunctionDef	"patterncomponent (i_ctx_t * i_ctx_p , ref * space , int * n)"		11014343	0					
ANR	11014345	CompoundStatement		4769:0:151632:152522	11014343	0					
ANR	11014346	IdentifierDeclStatement	os_ptr op = osp ;	4770:4:151638:151653	11014343	0	True				
ANR	11014347	IdentifierDecl	op = osp		11014343	0					
ANR	11014348	IdentifierDeclType	os_ptr		11014343	0					
ANR	11014349	Identifier	op		11014343	1					
ANR	11014350	AssignmentExpression	op = osp		11014343	2		=			
ANR	11014351	Identifier	osp		11014343	0					
ANR	11014352	Identifier	osp		11014343	1					
ANR	11014353	IdentifierDeclStatement	"int n_comps , code ;"	4771:4:151659:151676	11014343	1	True				
ANR	11014354	IdentifierDecl	n_comps		11014343	0					
ANR	11014355	IdentifierDeclType	int		11014343	0					
ANR	11014356	Identifier	n_comps		11014343	1					
ANR	11014357	IdentifierDecl	code		11014343	1					
ANR	11014358	IdentifierDeclType	int		11014343	0					
ANR	11014359	Identifier	code		11014343	1					
ANR	11014360	IdentifierDeclStatement	const gs_color_space * pcs = gs_currentcolorspace ( igs ) ;	4772:4:151682:151737	11014343	2	True				
ANR	11014361	IdentifierDecl	* pcs = gs_currentcolorspace ( igs )		11014343	0					
ANR	11014362	IdentifierDeclType	const gs_color_space *		11014343	0					
ANR	11014363	Identifier	pcs		11014343	1					
ANR	11014364	AssignmentExpression	* pcs = gs_currentcolorspace ( igs )		11014343	2		=			
ANR	11014365	Identifier	pcs		11014343	0					
ANR	11014366	CallExpression	gs_currentcolorspace ( igs )		11014343	1					
ANR	11014367	Callee	gs_currentcolorspace		11014343	0					
ANR	11014368	Identifier	gs_currentcolorspace		11014343	0					
ANR	11014369	ArgumentList	igs		11014343	1					
ANR	11014370	Argument	igs		11014343	0					
ANR	11014371	Identifier	igs		11014343	0					
ANR	11014372	IdentifierDeclStatement	gs_client_color cc ;	4773:4:151743:151769	11014343	3	True				
ANR	11014373	IdentifierDecl	cc		11014343	0					
ANR	11014374	IdentifierDeclType	gs_client_color		11014343	0					
ANR	11014375	Identifier	cc		11014343	1					
ANR	11014376	IfStatement	if ( ( n_comps = cs_num_components ( pcs ) ) < 0 )		11014343	4					
ANR	11014377	Condition	( n_comps = cs_num_components ( pcs ) ) < 0	4776:8:151822:151859	11014343	0	True				
ANR	11014378	RelationalExpression	( n_comps = cs_num_components ( pcs ) ) < 0		11014343	0		<			
ANR	11014379	AssignmentExpression	n_comps = cs_num_components ( pcs )		11014343	0		=			
ANR	11014380	Identifier	n_comps		11014343	0					
ANR	11014381	CallExpression	cs_num_components ( pcs )		11014343	1					
ANR	11014382	Callee	cs_num_components		11014343	0					
ANR	11014383	Identifier	cs_num_components		11014343	0					
ANR	11014384	ArgumentList	pcs		11014343	1					
ANR	11014385	Argument	pcs		11014343	0					
ANR	11014386	Identifier	pcs		11014343	0					
ANR	11014387	PrimaryExpression	0		11014343	1					
ANR	11014388	CompoundStatement		8:48:229:229	11014343	1					
ANR	11014389	ExpressionStatement	n_comps = - n_comps	4777:8:151872:151890	11014343	0	True				
ANR	11014390	AssignmentExpression	n_comps = - n_comps		11014343	0		=			
ANR	11014391	Identifier	n_comps		11014343	0					
ANR	11014392	UnaryOperationExpression	- n_comps		11014343	1					
ANR	11014393	UnaryOperator	-		11014343	0					
ANR	11014394	Identifier	n_comps		11014343	1					
ANR	11014395	IfStatement	"if ( r_has_type ( op , t_dictionary ) )"		11014343	1					
ANR	11014396	Condition	"r_has_type ( op , t_dictionary )"	4778:12:151904:151931	11014343	0	True				
ANR	11014397	CallExpression	"r_has_type ( op , t_dictionary )"		11014343	0					
ANR	11014398	Callee	r_has_type		11014343	0					
ANR	11014399	Identifier	r_has_type		11014343	0					
ANR	11014400	ArgumentList	op		11014343	1					
ANR	11014401	Argument	op		11014343	0					
ANR	11014402	Identifier	op		11014343	0					
ANR	11014403	Argument	t_dictionary		11014343	1					
ANR	11014404	Identifier	t_dictionary		11014343	0					
ANR	11014405	CompoundStatement		11:12:315:339	11014343	1					
ANR	11014406	IdentifierDeclStatement	"ref * pImpl , pPatInst ;"	4779:12:151948:151972	11014343	0	True				
ANR	11014407	IdentifierDecl	* pImpl		11014343	0					
ANR	11014408	IdentifierDeclType	ref *		11014343	0					
ANR	11014409	Identifier	pImpl		11014343	1					
ANR	11014410	IdentifierDecl	pPatInst		11014343	1					
ANR	11014411	IdentifierDeclType	ref		11014343	0					
ANR	11014412	Identifier	pPatInst		11014343	1					
ANR	11014413	ExpressionStatement	"code = dict_find_string ( op , ""Implementation"" , & pImpl )"	4781:12:151987:152040	11014343	1	True				
ANR	11014414	AssignmentExpression	"code = dict_find_string ( op , ""Implementation"" , & pImpl )"		11014343	0		=			
ANR	11014415	Identifier	code		11014343	0					
ANR	11014416	CallExpression	"dict_find_string ( op , ""Implementation"" , & pImpl )"		11014343	1					
ANR	11014417	Callee	dict_find_string		11014343	0					
ANR	11014418	Identifier	dict_find_string		11014343	0					
ANR	11014419	ArgumentList	op		11014343	1					
ANR	11014420	Argument	op		11014343	0					
ANR	11014421	Identifier	op		11014343	0					
ANR	11014422	Argument	"""Implementation"""		11014343	1					
ANR	11014423	PrimaryExpression	"""Implementation"""		11014343	0					
ANR	11014424	Argument	& pImpl		11014343	2					
ANR	11014425	UnaryOperationExpression	& pImpl		11014343	0					
ANR	11014426	UnaryOperator	&		11014343	0					
ANR	11014427	Identifier	pImpl		11014343	1					
ANR	11014428	IfStatement	if ( code > 0 )		11014343	2					
ANR	11014429	Condition	code > 0	4782:12:152054:152061	11014343	0	True				
ANR	11014430	RelationalExpression	code > 0		11014343	0		>			
ANR	11014431	Identifier	code		11014343	0					
ANR	11014432	PrimaryExpression	0		11014343	1					
ANR	11014433	CompoundStatement		14:22:431:431	11014343	1					
ANR	11014434	ExpressionStatement	"code = array_get ( imemory , pImpl , 0 , & pPatInst )"	4783:12:152078:152124	11014343	0	True				
ANR	11014435	AssignmentExpression	"code = array_get ( imemory , pImpl , 0 , & pPatInst )"		11014343	0		=			
ANR	11014436	Identifier	code		11014343	0					
ANR	11014437	CallExpression	"array_get ( imemory , pImpl , 0 , & pPatInst )"		11014343	1					
ANR	11014438	Callee	array_get		11014343	0					
ANR	11014439	Identifier	array_get		11014343	0					
ANR	11014440	ArgumentList	imemory		11014343	1					
ANR	11014441	Argument	imemory		11014343	0					
ANR	11014442	Identifier	imemory		11014343	0					
ANR	11014443	Argument	pImpl		11014343	1					
ANR	11014444	Identifier	pImpl		11014343	0					
ANR	11014445	Argument	0		11014343	2					
ANR	11014446	PrimaryExpression	0		11014343	0					
ANR	11014447	Argument	& pPatInst		11014343	3					
ANR	11014448	UnaryOperationExpression	& pPatInst		11014343	0					
ANR	11014449	UnaryOperator	&		11014343	0					
ANR	11014450	Identifier	pPatInst		11014343	1					
ANR	11014451	IfStatement	if ( code < 0 )		11014343	1					
ANR	11014452	Condition	code < 0	4784:16:152142:152149	11014343	0	True				
ANR	11014453	RelationalExpression	code < 0		11014343	0		<			
ANR	11014454	Identifier	code		11014343	0					
ANR	11014455	PrimaryExpression	0		11014343	1					
ANR	11014456	ReturnStatement	return code ;	4785:16:152168:152179	11014343	1	True				
ANR	11014457	Identifier	code		11014343	0					
ANR	11014458	ExpressionStatement	"cc . pattern = r_ptr ( & pPatInst , gs_pattern_instance_t )"	4786:12:152193:152245	11014343	2	True				
ANR	11014459	AssignmentExpression	"cc . pattern = r_ptr ( & pPatInst , gs_pattern_instance_t )"		11014343	0		=			
ANR	11014460	MemberAccess	cc . pattern		11014343	0					
ANR	11014461	Identifier	cc		11014343	0					
ANR	11014462	Identifier	pattern		11014343	1					
ANR	11014463	CallExpression	"r_ptr ( & pPatInst , gs_pattern_instance_t )"		11014343	1					
ANR	11014464	Callee	r_ptr		11014343	0					
ANR	11014465	Identifier	r_ptr		11014343	0					
ANR	11014466	ArgumentList	& pPatInst		11014343	1					
ANR	11014467	Argument	& pPatInst		11014343	0					
ANR	11014468	UnaryOperationExpression	& pPatInst		11014343	0					
ANR	11014469	UnaryOperator	&		11014343	0					
ANR	11014470	Identifier	pPatInst		11014343	1					
ANR	11014471	Argument	gs_pattern_instance_t		11014343	1					
ANR	11014472	Identifier	gs_pattern_instance_t		11014343	0					
ANR	11014473	IfStatement	if ( pattern_instance_uses_base_space ( cc . pattern ) )		11014343	3					
ANR	11014474	Condition	pattern_instance_uses_base_space ( cc . pattern )	4787:16:152263:152306	11014343	0	True				
ANR	11014475	CallExpression	pattern_instance_uses_base_space ( cc . pattern )		11014343	0					
ANR	11014476	Callee	pattern_instance_uses_base_space		11014343	0					
ANR	11014477	Identifier	pattern_instance_uses_base_space		11014343	0					
ANR	11014478	ArgumentList	cc . pattern		11014343	1					
ANR	11014479	Argument	cc . pattern		11014343	0					
ANR	11014480	MemberAccess	cc . pattern		11014343	0					
ANR	11014481	Identifier	cc		11014343	0					
ANR	11014482	Identifier	pattern		11014343	1					
ANR	11014483	ExpressionStatement	* n = n_comps	4788:16:152325:152337	11014343	1	True				
ANR	11014484	AssignmentExpression	* n = n_comps		11014343	0		=			
ANR	11014485	UnaryOperationExpression	* n		11014343	0					
ANR	11014486	UnaryOperator	*		11014343	0					
ANR	11014487	Identifier	n		11014343	1					
ANR	11014488	Identifier	n_comps		11014343	1					
ANR	11014489	ElseStatement	else		11014343	0					
ANR	11014490	ExpressionStatement	* n = 1	4790:16:152372:152378	11014343	0	True				
ANR	11014491	AssignmentExpression	* n = 1		11014343	0		=			
ANR	11014492	UnaryOperationExpression	* n		11014343	0					
ANR	11014493	UnaryOperator	*		11014343	0					
ANR	11014494	Identifier	n		11014343	1					
ANR	11014495	PrimaryExpression	1		11014343	1					
ANR	11014496	ElseStatement	else		11014343	0					
ANR	11014497	ExpressionStatement	* n = 1	4792:12:152411:152417	11014343	0	True				
ANR	11014498	AssignmentExpression	* n = 1		11014343	0		=			
ANR	11014499	UnaryOperationExpression	* n		11014343	0					
ANR	11014500	UnaryOperator	*		11014343	0					
ANR	11014501	Identifier	n		11014343	1					
ANR	11014502	PrimaryExpression	1		11014343	1					
ANR	11014503	ElseStatement	else		11014343	0					
ANR	11014504	ExpressionStatement	* n = 1	4794:12:152446:152452	11014343	0	True				
ANR	11014505	AssignmentExpression	* n = 1		11014343	0		=			
ANR	11014506	UnaryOperationExpression	* n		11014343	0					
ANR	11014507	UnaryOperator	*		11014343	0					
ANR	11014508	Identifier	n		11014343	1					
ANR	11014509	PrimaryExpression	1		11014343	1					
ANR	11014510	ElseStatement	else		11014343	0					
ANR	11014511	ExpressionStatement	return_error ( gs_error_typecheck )	4796:8:152473:152505	11014343	0	True				
ANR	11014512	CallExpression	return_error ( gs_error_typecheck )		11014343	0					
ANR	11014513	Callee	return_error		11014343	0					
ANR	11014514	Identifier	return_error		11014343	0					
ANR	11014515	ArgumentList	gs_error_typecheck		11014343	1					
ANR	11014516	Argument	gs_error_typecheck		11014343	0					
ANR	11014517	Identifier	gs_error_typecheck		11014343	0					
ANR	11014518	ReturnStatement	return 0 ;	4798:4:152512:152520	11014343	5	True				
ANR	11014519	PrimaryExpression	0		11014343	0					
ANR	11014520	ReturnType	static int		11014343	1					
ANR	11014521	Identifier	patterncomponent		11014343	2					
ANR	11014522	ParameterList	"i_ctx_t * i_ctx_p , ref * space , int * n"		11014343	3					
ANR	11014523	Parameter	i_ctx_t * i_ctx_p	4768:28:151593:151609	11014343	0	True				
ANR	11014524	ParameterType	i_ctx_t *		11014343	0					
ANR	11014525	Identifier	i_ctx_p		11014343	1					
ANR	11014526	Parameter	ref * space	4768:47:151612:151621	11014343	1	True				
ANR	11014527	ParameterType	ref *		11014343	0					
ANR	11014528	Identifier	space		11014343	1					
ANR	11014529	Parameter	int * n	4768:59:151624:151629	11014343	2	True				
ANR	11014530	ParameterType	int *		11014343	0					
ANR	11014531	Identifier	n		11014343	1					
ANR	11014532	CFGEntryNode	ENTRY		11014343		True				
ANR	11014533	CFGExitNode	EXIT		11014343		True				
ANR	11014534	Symbol	n_comps		11014343						
ANR	11014535	Symbol	cc . pattern		11014343						
ANR	11014536	Symbol	code		11014343						
ANR	11014537	Symbol	t_dictionary		11014343						
ANR	11014538	Symbol	& pPatInst		11014343						
ANR	11014539	Symbol	osp		11014343						
ANR	11014540	Symbol	space		11014343						
ANR	11014541	Symbol	r_has_type		11014343						
ANR	11014542	Symbol	r_ptr		11014343						
ANR	11014543	Symbol	pattern_instance_uses_base_space		11014343						
ANR	11014544	Symbol	gs_error_typecheck		11014343						
ANR	11014545	Symbol	igs		11014343						
ANR	11014546	Symbol	gs_currentcolorspace		11014343						
ANR	11014547	Symbol	imemory		11014343						
ANR	11014548	Symbol	cc		11014343						
ANR	11014549	Symbol	op		11014343						
ANR	11014550	Symbol	pcs		11014343						
ANR	11014551	Symbol	& pImpl		11014343						
ANR	11014552	Symbol	dict_find_string		11014343						
ANR	11014553	Symbol	array_get		11014343						
ANR	11014554	Symbol	n		11014343						
ANR	11014555	Symbol	gs_pattern_instance_t		11014343						
ANR	11014556	Symbol	i_ctx_p		11014343						
ANR	11014557	Symbol	cs_num_components		11014343						
ANR	11014558	Symbol	pPatInst		11014343						
ANR	11014559	Symbol	* n		11014343						
ANR	11014560	Symbol	pImpl		11014343						
ANR	11014561	Function	patternbasecolor	4800:0:152524:153962							
ANR	11014562	FunctionDef	"patternbasecolor (i_ctx_t * i_ctx_p , ref * space , int base , int * stage , int * cont , int * stack_depth)"		11014561	0					
ANR	11014563	CompoundStatement		4801:0:152634:153962	11014561	0					
ANR	11014564	IdentifierDeclStatement	os_ptr op ;	4802:4:152640:152649	11014561	0	True				
ANR	11014565	IdentifierDecl	op		11014561	0					
ANR	11014566	IdentifierDeclType	os_ptr		11014561	0					
ANR	11014567	Identifier	op		11014561	1					
ANR	11014568	IdentifierDeclStatement	"int i , components = 0 ;"	4803:4:152655:152674	11014561	1	True				
ANR	11014569	IdentifierDecl	i		11014561	0					
ANR	11014570	IdentifierDeclType	int		11014561	0					
ANR	11014571	Identifier	i		11014561	1					
ANR	11014572	IdentifierDecl	components = 0		11014561	1					
ANR	11014573	IdentifierDeclType	int		11014561	0					
ANR	11014574	Identifier	components		11014561	1					
ANR	11014575	AssignmentExpression	components = 0		11014561	2		=			
ANR	11014576	Identifier	components		11014561	0					
ANR	11014577	PrimaryExpression	0		11014561	1					
ANR	11014578	IfStatement	if ( r_size ( space ) > 1 )		11014561	2					
ANR	11014579	Condition	r_size ( space ) > 1	4805:8:152685:152701	11014561	0	True				
ANR	11014580	RelationalExpression	r_size ( space ) > 1		11014561	0		>			
ANR	11014581	CallExpression	r_size ( space )		11014561	0					
ANR	11014582	Callee	r_size		11014561	0					
ANR	11014583	Identifier	r_size		11014561	0					
ANR	11014584	ArgumentList	space		11014561	1					
ANR	11014585	Argument	space		11014561	0					
ANR	11014586	Identifier	space		11014561	0					
ANR	11014587	PrimaryExpression	1		11014561	1					
ANR	11014588	CompoundStatement		10:8:318:362	11014561	1					
ANR	11014589	IdentifierDeclStatement	const gs_color_space * pcs = gs_currentcolorspace ( igs ) ;	4806:8:152714:152769	11014561	0	True				
ANR	11014590	IdentifierDecl	* pcs = gs_currentcolorspace ( igs )		11014561	0					
ANR	11014591	IdentifierDeclType	const gs_color_space *		11014561	0					
ANR	11014592	Identifier	pcs		11014561	1					
ANR	11014593	AssignmentExpression	* pcs = gs_currentcolorspace ( igs )		11014561	2		=			
ANR	11014594	Identifier	pcs		11014561	0					
ANR	11014595	CallExpression	gs_currentcolorspace ( igs )		11014561	1					
ANR	11014596	Callee	gs_currentcolorspace		11014561	0					
ANR	11014597	Identifier	gs_currentcolorspace		11014561	0					
ANR	11014598	ArgumentList	igs		11014561	1					
ANR	11014599	Argument	igs		11014561	0					
ANR	11014600	Identifier	igs		11014561	0					
ANR	11014601	IdentifierDeclStatement	const gs_client_color * pcc = gs_currentcolor ( igs ) ;	4807:8:152779:152829	11014561	1	True				
ANR	11014602	IdentifierDecl	* pcc = gs_currentcolor ( igs )		11014561	0					
ANR	11014603	IdentifierDeclType	const gs_client_color *		11014561	0					
ANR	11014604	Identifier	pcc		11014561	1					
ANR	11014605	AssignmentExpression	* pcc = gs_currentcolor ( igs )		11014561	2		=			
ANR	11014606	Identifier	pcc		11014561	0					
ANR	11014607	CallExpression	gs_currentcolor ( igs )		11014561	1					
ANR	11014608	Callee	gs_currentcolor		11014561	0					
ANR	11014609	Identifier	gs_currentcolor		11014561	0					
ANR	11014610	ArgumentList	igs		11014561	1					
ANR	11014611	Argument	igs		11014561	0					
ANR	11014612	Identifier	igs		11014561	0					
ANR	11014613	IdentifierDeclStatement	int n = cs_num_components ( pcs ) ;	4808:8:152839:152889	11014561	2	True				
ANR	11014614	IdentifierDecl	n = cs_num_components ( pcs )		11014561	0					
ANR	11014615	IdentifierDeclType	int		11014561	0					
ANR	11014616	Identifier	n		11014561	1					
ANR	11014617	AssignmentExpression	n = cs_num_components ( pcs )		11014561	2		=			
ANR	11014618	Identifier	n		11014561	0					
ANR	11014619	CallExpression	cs_num_components ( pcs )		11014561	1					
ANR	11014620	Callee	cs_num_components		11014561	0					
ANR	11014621	Identifier	cs_num_components		11014561	0					
ANR	11014622	ArgumentList	pcs		11014561	1					
ANR	11014623	Argument	pcs		11014561	0					
ANR	11014624	Identifier	pcs		11014561	0					
ANR	11014625	IdentifierDeclStatement	bool push_pattern = n < 0 ;	4809:8:152899:152943	11014561	3	True				
ANR	11014626	IdentifierDecl	push_pattern = n < 0		11014561	0					
ANR	11014627	IdentifierDeclType	bool		11014561	0					
ANR	11014628	Identifier	push_pattern		11014561	1					
ANR	11014629	AssignmentExpression	push_pattern = n < 0		11014561	2		=			
ANR	11014630	Identifier	push_pattern		11014561	0					
ANR	11014631	RelationalExpression	n < 0		11014561	1		<			
ANR	11014632	Identifier	n		11014561	0					
ANR	11014633	PrimaryExpression	0		11014561	1					
ANR	11014634	IdentifierDeclStatement	gs_pattern_instance_t * pinst = pcc -> pattern ;	4810:8:152953:152997	11014561	4	True				
ANR	11014635	IdentifierDecl	* pinst = pcc -> pattern		11014561	0					
ANR	11014636	IdentifierDeclType	gs_pattern_instance_t *		11014561	0					
ANR	11014637	Identifier	pinst		11014561	1					
ANR	11014638	AssignmentExpression	* pinst = pcc -> pattern		11014561	2		=			
ANR	11014639	Identifier	pinst		11014561	0					
ANR	11014640	PtrMemberAccess	pcc -> pattern		11014561	1					
ANR	11014641	Identifier	pcc		11014561	0					
ANR	11014642	Identifier	pattern		11014561	1					
ANR	11014643	IfStatement	if ( pinst != 0 && pattern_instance_uses_base_space ( pinst ) )		11014561	5					
ANR	11014644	Condition	pinst != 0 && pattern_instance_uses_base_space ( pinst )	4812:12:153012:153064	11014561	0	True				
ANR	11014645	AndExpression	pinst != 0 && pattern_instance_uses_base_space ( pinst )		11014561	0		&&			
ANR	11014646	EqualityExpression	pinst != 0		11014561	0		!=			
ANR	11014647	Identifier	pinst		11014561	0					
ANR	11014648	PrimaryExpression	0		11014561	1					
ANR	11014649	CallExpression	pattern_instance_uses_base_space ( pinst )		11014561	1					
ANR	11014650	Callee	pattern_instance_uses_base_space		11014561	0					
ANR	11014651	Identifier	pattern_instance_uses_base_space		11014561	0					
ANR	11014652	ArgumentList	pinst		11014561	1					
ANR	11014653	Argument	pinst		11014561	0					
ANR	11014654	Identifier	pinst		11014561	0					
ANR	11014655	CompoundStatement		12:67:432:432	11014561	1					
ANR	11014656	IfStatement	if ( push_pattern )		11014561	0					
ANR	11014657	Condition	push_pattern	4814:16:153121:153132	11014561	0	True				
ANR	11014658	Identifier	push_pattern		11014561	0					
ANR	11014659	ExpressionStatement	pop ( 1 )	4815:16:153151:153157	11014561	1	True				
ANR	11014660	CallExpression	pop ( 1 )		11014561	0					
ANR	11014661	Callee	pop		11014561	0					
ANR	11014662	Identifier	pop		11014561	0					
ANR	11014663	ArgumentList	1		11014561	1					
ANR	11014664	Argument	1		11014561	0					
ANR	11014665	PrimaryExpression	1		11014561	0					
ANR	11014666	ExpressionStatement	* stage = 0	4816:12:153202:153212	11014561	1	True				
ANR	11014667	AssignmentExpression	* stage = 0		11014561	0		=			
ANR	11014668	UnaryOperationExpression	* stage		11014561	0					
ANR	11014669	UnaryOperator	*		11014561	0					
ANR	11014670	Identifier	stage		11014561	1					
ANR	11014671	PrimaryExpression	0		11014561	1					
ANR	11014672	ExpressionStatement	* cont = 1	4817:12:153226:153235	11014561	2	True				
ANR	11014673	AssignmentExpression	* cont = 1		11014561	0		=			
ANR	11014674	UnaryOperationExpression	* cont		11014561	0					
ANR	11014675	UnaryOperator	*		11014561	0					
ANR	11014676	Identifier	cont		11014561	1					
ANR	11014677	PrimaryExpression	1		11014561	1					
ANR	11014678	ReturnStatement	return 0 ;	4818:12:153249:153257	11014561	3	True				
ANR	11014679	PrimaryExpression	0		11014561	0					
ANR	11014680	ExpressionStatement	pop ( 1 )	4826:4:153453:153459	11014561	3	True				
ANR	11014681	CallExpression	pop ( 1 )		11014561	0					
ANR	11014682	Callee	pop		11014561	0					
ANR	11014683	Identifier	pop		11014561	0					
ANR	11014684	ArgumentList	1		11014561	1					
ANR	11014685	Argument	1		11014561	0					
ANR	11014686	PrimaryExpression	1		11014561	0					
ANR	11014687	ExpressionStatement	op = osp	4827:4:153465:153473	11014561	4	True				
ANR	11014688	AssignmentExpression	op = osp		11014561	0		=			
ANR	11014689	Identifier	op		11014561	0					
ANR	11014690	Identifier	osp		11014561	1					
ANR	11014691	SwitchStatement	switch ( base )		11014561	5					
ANR	11014692	Condition	base	4828:11:153486:153489	11014561	0	True				
ANR	11014693	Identifier	base		11014561	0					
ANR	11014694	CompoundStatement		28:17:857:857	11014561	1					
ANR	11014695	Label	case 0 :	4829:8:153502:153508	11014561	0	True				
ANR	11014696	ExpressionStatement	components = 1	4830:12:153522:153536	11014561	1	True				
ANR	11014697	AssignmentExpression	components = 1		11014561	0		=			
ANR	11014698	Identifier	components		11014561	0					
ANR	11014699	PrimaryExpression	1		11014561	1					
ANR	11014700	BreakStatement	break ;	4831:12:153550:153555	11014561	2	True				
ANR	11014701	Label	case 1 :	4832:8:153565:153571	11014561	3	True				
ANR	11014702	Label	case 2 :	4833:8:153581:153587	11014561	4	True				
ANR	11014703	ExpressionStatement	components = 3	4834:12:153601:153615	11014561	5	True				
ANR	11014704	AssignmentExpression	components = 3		11014561	0		=			
ANR	11014705	Identifier	components		11014561	0					
ANR	11014706	PrimaryExpression	3		11014561	1					
ANR	11014707	BreakStatement	break ;	4835:12:153629:153634	11014561	6	True				
ANR	11014708	Label	case 3 :	4836:8:153644:153650	11014561	7	True				
ANR	11014709	ExpressionStatement	components = 4	4837:12:153664:153678	11014561	8	True				
ANR	11014710	AssignmentExpression	components = 4		11014561	0		=			
ANR	11014711	Identifier	components		11014561	0					
ANR	11014712	PrimaryExpression	4		11014561	1					
ANR	11014713	BreakStatement	break ;	4838:12:153692:153697	11014561	9	True				
ANR	11014714	ExpressionStatement	push ( components )	4840:4:153709:153725	11014561	6	True				
ANR	11014715	CallExpression	push ( components )		11014561	0					
ANR	11014716	Callee	push		11014561	0					
ANR	11014717	Identifier	push		11014561	0					
ANR	11014718	ArgumentList	components		11014561	1					
ANR	11014719	Argument	components		11014561	0					
ANR	11014720	Identifier	components		11014561	0					
ANR	11014721	ExpressionStatement	op -= components - 1	4841:4:153731:153749	11014561	7	True				
ANR	11014722	AssignmentExpression	op -= components - 1		11014561	0		-=			
ANR	11014723	Identifier	op		11014561	0					
ANR	11014724	AdditiveExpression	components - 1		11014561	1		-			
ANR	11014725	Identifier	components		11014561	0					
ANR	11014726	PrimaryExpression	1		11014561	1					
ANR	11014727	ForStatement	for ( i = 0 ; i < components ; i ++ )		11014561	8					
ANR	11014728	ForInit	i = 0 ;	4842:9:153760:153763	11014561	0	True				
ANR	11014729	AssignmentExpression	i = 0		11014561	0		=			
ANR	11014730	Identifier	i		11014561	0					
ANR	11014731	PrimaryExpression	0		11014561	1					
ANR	11014732	Condition	i < components	4842:13:153764:153775	11014561	1	True				
ANR	11014733	RelationalExpression	i < components		11014561	0		<			
ANR	11014734	Identifier	i		11014561	0					
ANR	11014735	Identifier	components		11014561	1					
ANR	11014736	PostIncDecOperationExpression	i ++	4842:26:153777:153779	11014561	2	True				
ANR	11014737	Identifier	i		11014561	0					
ANR	11014738	IncDec	++		11014561	1					
ANR	11014739	CompoundStatement		42:31:1147:1147	11014561	3					
ANR	11014740	ExpressionStatement	"make_real ( op , ( float ) 0 )"	4843:8:153792:153815	11014561	0	True				
ANR	11014741	CallExpression	"make_real ( op , ( float ) 0 )"		11014561	0					
ANR	11014742	Callee	make_real		11014561	0					
ANR	11014743	Identifier	make_real		11014561	0					
ANR	11014744	ArgumentList	op		11014561	1					
ANR	11014745	Argument	op		11014561	0					
ANR	11014746	Identifier	op		11014561	0					
ANR	11014747	Argument	( float ) 0		11014561	1					
ANR	11014748	CastExpression	( float ) 0		11014561	0					
ANR	11014749	CastTarget	float		11014561	0					
ANR	11014750	PrimaryExpression	0		11014561	1					
ANR	11014751	ExpressionStatement	op ++	4844:8:153825:153829	11014561	1	True				
ANR	11014752	PostIncDecOperationExpression	op ++		11014561	0					
ANR	11014753	Identifier	op		11014561	0					
ANR	11014754	IncDec	++		11014561	1					
ANR	11014755	IfStatement	if ( components == 4 )		11014561	9					
ANR	11014756	Condition	components == 4	4846:8:153845:153859	11014561	0	True				
ANR	11014757	EqualityExpression	components == 4		11014561	0		==			
ANR	11014758	Identifier	components		11014561	0					
ANR	11014759	PrimaryExpression	4		11014561	1					
ANR	11014760	CompoundStatement		46:25:1227:1227	11014561	1					
ANR	11014761	ExpressionStatement	op --	4847:8:153872:153876	11014561	0	True				
ANR	11014762	PostIncDecOperationExpression	op --		11014561	0					
ANR	11014763	Identifier	op		11014561	0					
ANR	11014764	IncDec	--		11014561	1					
ANR	11014765	ExpressionStatement	"make_real ( op , ( float ) 1 )"	4848:8:153886:153909	11014561	1	True				
ANR	11014766	CallExpression	"make_real ( op , ( float ) 1 )"		11014561	0					
ANR	11014767	Callee	make_real		11014561	0					
ANR	11014768	Identifier	make_real		11014561	0					
ANR	11014769	ArgumentList	op		11014561	1					
ANR	11014770	Argument	op		11014561	0					
ANR	11014771	Identifier	op		11014561	0					
ANR	11014772	Argument	( float ) 1		11014561	1					
ANR	11014773	CastExpression	( float ) 1		11014561	0					
ANR	11014774	CastTarget	float		11014561	0					
ANR	11014775	PrimaryExpression	1		11014561	1					
ANR	11014776	ExpressionStatement	* stage = 0	4850:4:153921:153931	11014561	10	True				
ANR	11014777	AssignmentExpression	* stage = 0		11014561	0		=			
ANR	11014778	UnaryOperationExpression	* stage		11014561	0					
ANR	11014779	UnaryOperator	*		11014561	0					
ANR	11014780	Identifier	stage		11014561	1					
ANR	11014781	PrimaryExpression	0		11014561	1					
ANR	11014782	ExpressionStatement	* cont = 0	4851:4:153937:153946	11014561	11	True				
ANR	11014783	AssignmentExpression	* cont = 0		11014561	0		=			
ANR	11014784	UnaryOperationExpression	* cont		11014561	0					
ANR	11014785	UnaryOperator	*		11014561	0					
ANR	11014786	Identifier	cont		11014561	1					
ANR	11014787	PrimaryExpression	0		11014561	1					
ANR	11014788	ReturnStatement	return 0 ;	4852:4:153952:153960	11014561	12	True				
ANR	11014789	PrimaryExpression	0		11014561	0					
ANR	11014790	ReturnType	static int		11014561	1					
ANR	11014791	Identifier	patternbasecolor		11014561	2					
ANR	11014792	ParameterList	"i_ctx_t * i_ctx_p , ref * space , int base , int * stage , int * cont , int * stack_depth"		11014561	3					
ANR	11014793	Parameter	i_ctx_t * i_ctx_p	4800:28:152552:152568	11014561	0	True				
ANR	11014794	ParameterType	i_ctx_t *		11014561	0					
ANR	11014795	Identifier	i_ctx_p		11014561	1					
ANR	11014796	Parameter	ref * space	4800:47:152571:152580	11014561	1	True				
ANR	11014797	ParameterType	ref *		11014561	0					
ANR	11014798	Identifier	space		11014561	1					
ANR	11014799	Parameter	int base	4800:59:152583:152590	11014561	2	True				
ANR	11014800	ParameterType	int		11014561	0					
ANR	11014801	Identifier	base		11014561	1					
ANR	11014802	Parameter	int * stage	4800:69:152593:152602	11014561	3	True				
ANR	11014803	ParameterType	int *		11014561	0					
ANR	11014804	Identifier	stage		11014561	1					
ANR	11014805	Parameter	int * cont	4800:81:152605:152613	11014561	4	True				
ANR	11014806	ParameterType	int *		11014561	0					
ANR	11014807	Identifier	cont		11014561	1					
ANR	11014808	Parameter	int * stack_depth	4800:92:152616:152631	11014561	5	True				
ANR	11014809	ParameterType	int *		11014561	0					
ANR	11014810	Identifier	stack_depth		11014561	1					
ANR	11014811	CFGEntryNode	ENTRY		11014561		True				
ANR	11014812	CFGExitNode	EXIT		11014561		True				
ANR	11014813	Symbol	stack_depth		11014561						
ANR	11014814	Symbol	components		11014561						
ANR	11014815	Symbol	pcc -> pattern		11014561						
ANR	11014816	Symbol	osp		11014561						
ANR	11014817	Symbol	space		11014561						
ANR	11014818	Symbol	pcc		11014561						
ANR	11014819	Symbol	pattern_instance_uses_base_space		11014561						
ANR	11014820	Symbol	igs		11014561						
ANR	11014821	Symbol	gs_currentcolorspace		11014561						
ANR	11014822	Symbol	r_size		11014561						
ANR	11014823	Symbol	push_pattern		11014561						
ANR	11014824	Symbol	cont		11014561						
ANR	11014825	Symbol	op		11014561						
ANR	11014826	Symbol	pcs		11014561						
ANR	11014827	Symbol	* stage		11014561						
ANR	11014828	Symbol	i		11014561						
ANR	11014829	Symbol	pinst		11014561						
ANR	11014830	Symbol	n		11014561						
ANR	11014831	Symbol	gs_currentcolor		11014561						
ANR	11014832	Symbol	stage		11014561						
ANR	11014833	Symbol	* cont		11014561						
ANR	11014834	Symbol	i_ctx_p		11014561						
ANR	11014835	Symbol	cs_num_components		11014561						
ANR	11014836	Symbol	* pcc		11014561						
ANR	11014837	Symbol	base		11014561						
ANR	11014838	Function	patternvalidate	4854:0:153964:154216							
ANR	11014839	FunctionDef	"patternvalidate (i_ctx_t * i_ctx_p , ref * space , float * values , int num_comps)"		11014838	0					
ANR	11014840	CompoundStatement		4855:0:154051:154216	11014838	0					
ANR	11014841	IdentifierDeclStatement	os_ptr op = osp ;	4856:4:154057:154072	11014838	0	True				
ANR	11014842	IdentifierDecl	op = osp		11014838	0					
ANR	11014843	IdentifierDeclType	os_ptr		11014838	0					
ANR	11014844	Identifier	op		11014838	1					
ANR	11014845	AssignmentExpression	op = osp		11014838	2		=			
ANR	11014846	Identifier	osp		11014838	0					
ANR	11014847	Identifier	osp		11014838	1					
ANR	11014848	ExpressionStatement	check_op ( 1 )	4858:4:154079:154090	11014838	1	True				
ANR	11014849	CallExpression	check_op ( 1 )		11014838	0					
ANR	11014850	Callee	check_op		11014838	0					
ANR	11014851	Identifier	check_op		11014838	0					
ANR	11014852	ArgumentList	1		11014838	1					
ANR	11014853	Argument	1		11014838	0					
ANR	11014854	PrimaryExpression	1		11014838	0					
ANR	11014855	IfStatement	"if ( ! r_has_type ( op , t_dictionary ) && ! r_has_type ( op , t_null ) )"		11014838	2					
ANR	11014856	Condition	"! r_has_type ( op , t_dictionary ) && ! r_has_type ( op , t_null )"	4860:8:154101:154156	11014838	0	True				
ANR	11014857	AndExpression	"! r_has_type ( op , t_dictionary ) && ! r_has_type ( op , t_null )"		11014838	0		&&			
ANR	11014858	UnaryOperationExpression	"! r_has_type ( op , t_dictionary )"		11014838	0					
ANR	11014859	UnaryOperator	!		11014838	0					
ANR	11014860	CallExpression	"r_has_type ( op , t_dictionary )"		11014838	1					
ANR	11014861	Callee	r_has_type		11014838	0					
ANR	11014862	Identifier	r_has_type		11014838	0					
ANR	11014863	ArgumentList	op		11014838	1					
ANR	11014864	Argument	op		11014838	0					
ANR	11014865	Identifier	op		11014838	0					
ANR	11014866	Argument	t_dictionary		11014838	1					
ANR	11014867	Identifier	t_dictionary		11014838	0					
ANR	11014868	UnaryOperationExpression	"! r_has_type ( op , t_null )"		11014838	1					
ANR	11014869	UnaryOperator	!		11014838	0					
ANR	11014870	CallExpression	"r_has_type ( op , t_null )"		11014838	1					
ANR	11014871	Callee	r_has_type		11014838	0					
ANR	11014872	Identifier	r_has_type		11014838	0					
ANR	11014873	ArgumentList	op		11014838	1					
ANR	11014874	Argument	op		11014838	0					
ANR	11014875	Identifier	op		11014838	0					
ANR	11014876	Argument	t_null		11014838	1					
ANR	11014877	Identifier	t_null		11014838	0					
ANR	11014878	ExpressionStatement	return_error ( gs_error_typecheck )	4861:8:154167:154199	11014838	1	True				
ANR	11014879	CallExpression	return_error ( gs_error_typecheck )		11014838	0					
ANR	11014880	Callee	return_error		11014838	0					
ANR	11014881	Identifier	return_error		11014838	0					
ANR	11014882	ArgumentList	gs_error_typecheck		11014838	1					
ANR	11014883	Argument	gs_error_typecheck		11014838	0					
ANR	11014884	Identifier	gs_error_typecheck		11014838	0					
ANR	11014885	ReturnStatement	return 0 ;	4863:4:154206:154214	11014838	3	True				
ANR	11014886	PrimaryExpression	0		11014838	0					
ANR	11014887	ReturnType	static int		11014838	1					
ANR	11014888	Identifier	patternvalidate		11014838	2					
ANR	11014889	ParameterList	"i_ctx_t * i_ctx_p , ref * space , float * values , int num_comps"		11014838	3					
ANR	11014890	Parameter	i_ctx_t * i_ctx_p	4854:27:153991:154006	11014838	0	True				
ANR	11014891	ParameterType	i_ctx_t *		11014838	0					
ANR	11014892	Identifier	i_ctx_p		11014838	1					
ANR	11014893	Parameter	ref * space	4854:45:154009:154018	11014838	1	True				
ANR	11014894	ParameterType	ref *		11014838	0					
ANR	11014895	Identifier	space		11014838	1					
ANR	11014896	Parameter	float * values	4854:57:154021:154033	11014838	2	True				
ANR	11014897	ParameterType	float *		11014838	0					
ANR	11014898	Identifier	values		11014838	1					
ANR	11014899	Parameter	int num_comps	4854:72:154036:154048	11014838	3	True				
ANR	11014900	ParameterType	int		11014838	0					
ANR	11014901	Identifier	num_comps		11014838	1					
ANR	11014902	CFGEntryNode	ENTRY		11014838		True				
ANR	11014903	CFGExitNode	EXIT		11014838		True				
ANR	11014904	Symbol	op		11014838						
ANR	11014905	Symbol	r_has_type		11014838						
ANR	11014906	Symbol	t_null		11014838						
ANR	11014907	Symbol	gs_error_typecheck		11014838						
ANR	11014908	Symbol	t_dictionary		11014838						
ANR	11014909	Symbol	i_ctx_p		11014838						
ANR	11014910	Symbol	values		11014838						
ANR	11014911	Symbol	num_comps		11014838						
ANR	11014912	Symbol	osp		11014838						
ANR	11014913	Symbol	space		11014838						
ANR	11014914	Function	setdevicepspace	4867:0:154237:155264							
ANR	11014915	FunctionDef	"setdevicepspace (i_ctx_t * i_ctx_p , ref * r , int * stage , int * cont , int CIESubst)"		11014914	0					
ANR	11014916	CompoundStatement		4868:0:154328:155264	11014914	0					
ANR	11014917	IdentifierDeclStatement	int code = 0 ;	4869:4:154334:154346	11014914	0	True				
ANR	11014918	IdentifierDecl	code = 0		11014914	0					
ANR	11014919	IdentifierDeclType	int		11014914	0					
ANR	11014920	Identifier	code		11014914	1					
ANR	11014921	AssignmentExpression	code = 0		11014914	2		=			
ANR	11014922	Identifier	code		11014914	0					
ANR	11014923	PrimaryExpression	0		11014914	1					
ANR	11014924	IdentifierDeclStatement	gs_color_space * pcs ;	4870:4:154352:154371	11014914	1	True				
ANR	11014925	IdentifierDecl	* pcs		11014914	0					
ANR	11014926	IdentifierDeclType	gs_color_space *		11014914	0					
ANR	11014927	Identifier	pcs		11014914	1					
ANR	11014928	IdentifierDeclStatement	ref bpp ;	4871:4:154377:154384	11014914	2	True				
ANR	11014929	IdentifierDecl	bpp		11014914	0					
ANR	11014930	IdentifierDeclType	ref		11014914	0					
ANR	11014931	Identifier	bpp		11014914	1					
ANR	11014932	IfStatement	if ( i_ctx_p -> language_level < 2 )		11014914	3					
ANR	11014933	Condition	i_ctx_p -> language_level < 2	4879:8:154729:154755	11014914	0	True				
ANR	11014934	RelationalExpression	i_ctx_p -> language_level < 2		11014914	0		<			
ANR	11014935	PtrMemberAccess	i_ctx_p -> language_level		11014914	0					
ANR	11014936	Identifier	i_ctx_p		11014914	0					
ANR	11014937	Identifier	language_level		11014914	1					
ANR	11014938	PrimaryExpression	2		11014914	1					
ANR	11014939	ExpressionStatement	return_error ( gs_error_undefined )	4880:8:154766:154798	11014914	1	True				
ANR	11014940	CallExpression	return_error ( gs_error_undefined )		11014914	0					
ANR	11014941	Callee	return_error		11014914	0					
ANR	11014942	Identifier	return_error		11014914	0					
ANR	11014943	ArgumentList	gs_error_undefined		11014914	1					
ANR	11014944	Argument	gs_error_undefined		11014914	0					
ANR	11014945	Identifier	gs_error_undefined		11014914	0					
ANR	11014946	ExpressionStatement	* cont = 0	4882:4:154805:154814	11014914	4	True				
ANR	11014947	AssignmentExpression	* cont = 0		11014914	0		=			
ANR	11014948	UnaryOperationExpression	* cont		11014914	0					
ANR	11014949	UnaryOperator	*		11014914	0					
ANR	11014950	Identifier	cont		11014914	1					
ANR	11014951	PrimaryExpression	0		11014914	1					
ANR	11014952	ExpressionStatement	"code = array_get ( imemory , r , 1 , & bpp )"	4883:4:154820:154857	11014914	5	True				
ANR	11014953	AssignmentExpression	"code = array_get ( imemory , r , 1 , & bpp )"		11014914	0		=			
ANR	11014954	Identifier	code		11014914	0					
ANR	11014955	CallExpression	"array_get ( imemory , r , 1 , & bpp )"		11014914	1					
ANR	11014956	Callee	array_get		11014914	0					
ANR	11014957	Identifier	array_get		11014914	0					
ANR	11014958	ArgumentList	imemory		11014914	1					
ANR	11014959	Argument	imemory		11014914	0					
ANR	11014960	Identifier	imemory		11014914	0					
ANR	11014961	Argument	r		11014914	1					
ANR	11014962	Identifier	r		11014914	0					
ANR	11014963	Argument	1		11014914	2					
ANR	11014964	PrimaryExpression	1		11014914	0					
ANR	11014965	Argument	& bpp		11014914	3					
ANR	11014966	UnaryOperationExpression	& bpp		11014914	0					
ANR	11014967	UnaryOperator	&		11014914	0					
ANR	11014968	Identifier	bpp		11014914	1					
ANR	11014969	IfStatement	if ( code < 0 )		11014914	6					
ANR	11014970	Condition	code < 0	4884:8:154867:154874	11014914	0	True				
ANR	11014971	RelationalExpression	code < 0		11014914	0		<			
ANR	11014972	Identifier	code		11014914	0					
ANR	11014973	PrimaryExpression	0		11014914	1					
ANR	11014974	ReturnStatement	return code ;	4885:8:154885:154896	11014914	1	True				
ANR	11014975	Identifier	code		11014914	0					
ANR	11014976	IfStatement	"if ( ! r_has_type ( & bpp , t_integer ) )"		11014914	7					
ANR	11014977	Condition	"! r_has_type ( & bpp , t_integer )"	4886:8:154906:154933	11014914	0	True				
ANR	11014978	UnaryOperationExpression	"! r_has_type ( & bpp , t_integer )"		11014914	0					
ANR	11014979	UnaryOperator	!		11014914	0					
ANR	11014980	CallExpression	"r_has_type ( & bpp , t_integer )"		11014914	1					
ANR	11014981	Callee	r_has_type		11014914	0					
ANR	11014982	Identifier	r_has_type		11014914	0					
ANR	11014983	ArgumentList	& bpp		11014914	1					
ANR	11014984	Argument	& bpp		11014914	0					
ANR	11014985	UnaryOperationExpression	& bpp		11014914	0					
ANR	11014986	UnaryOperator	&		11014914	0					
ANR	11014987	Identifier	bpp		11014914	1					
ANR	11014988	Argument	t_integer		11014914	1					
ANR	11014989	Identifier	t_integer		11014914	0					
ANR	11014990	ExpressionStatement	return_error ( gs_error_typecheck )	4887:8:154944:154976	11014914	1	True				
ANR	11014991	CallExpression	return_error ( gs_error_typecheck )		11014914	0					
ANR	11014992	Callee	return_error		11014914	0					
ANR	11014993	Identifier	return_error		11014914	0					
ANR	11014994	ArgumentList	gs_error_typecheck		11014914	1					
ANR	11014995	Argument	gs_error_typecheck		11014914	0					
ANR	11014996	Identifier	gs_error_typecheck		11014914	0					
ANR	11014997	ExpressionStatement	"code = gs_cspace_new_DevicePixel ( imemory , & pcs , ( int ) bpp . value . intval )"	4888:4:154982:155052	11014914	8	True				
ANR	11014998	AssignmentExpression	"code = gs_cspace_new_DevicePixel ( imemory , & pcs , ( int ) bpp . value . intval )"		11014914	0		=			
ANR	11014999	Identifier	code		11014914	0					
ANR	11015000	CallExpression	"gs_cspace_new_DevicePixel ( imemory , & pcs , ( int ) bpp . value . intval )"		11014914	1					
ANR	11015001	Callee	gs_cspace_new_DevicePixel		11014914	0					
ANR	11015002	Identifier	gs_cspace_new_DevicePixel		11014914	0					
ANR	11015003	ArgumentList	imemory		11014914	1					
ANR	11015004	Argument	imemory		11014914	0					
ANR	11015005	Identifier	imemory		11014914	0					
ANR	11015006	Argument	& pcs		11014914	1					
ANR	11015007	UnaryOperationExpression	& pcs		11014914	0					
ANR	11015008	UnaryOperator	&		11014914	0					
ANR	11015009	Identifier	pcs		11014914	1					
ANR	11015010	Argument	( int ) bpp . value . intval		11014914	2					
ANR	11015011	CastExpression	( int ) bpp . value . intval		11014914	0					
ANR	11015012	CastTarget	int		11014914	0					
ANR	11015013	MemberAccess	bpp . value . intval		11014914	1					
ANR	11015014	MemberAccess	bpp . value		11014914	0					
ANR	11015015	Identifier	bpp		11014914	0					
ANR	11015016	Identifier	value		11014914	1					
ANR	11015017	Identifier	intval		11014914	1					
ANR	11015018	IfStatement	if ( code < 0 )		11014914	9					
ANR	11015019	Condition	code < 0	4889:8:155062:155069	11014914	0	True				
ANR	11015020	RelationalExpression	code < 0		11014914	0		<			
ANR	11015021	Identifier	code		11014914	0					
ANR	11015022	PrimaryExpression	0		11014914	1					
ANR	11015023	ReturnStatement	return code ;	4890:8:155080:155091	11014914	1	True				
ANR	11015024	Identifier	code		11014914	0					
ANR	11015025	ExpressionStatement	"code = gs_setcolorspace ( igs , pcs )"	4891:4:155097:155130	11014914	10	True				
ANR	11015026	AssignmentExpression	"code = gs_setcolorspace ( igs , pcs )"		11014914	0		=			
ANR	11015027	Identifier	code		11014914	0					
ANR	11015028	CallExpression	"gs_setcolorspace ( igs , pcs )"		11014914	1					
ANR	11015029	Callee	gs_setcolorspace		11014914	0					
ANR	11015030	Identifier	gs_setcolorspace		11014914	0					
ANR	11015031	ArgumentList	igs		11014914	1					
ANR	11015032	Argument	igs		11014914	0					
ANR	11015033	Identifier	igs		11014914	0					
ANR	11015034	Argument	pcs		11014914	1					
ANR	11015035	Identifier	pcs		11014914	0					
ANR	11015036	ExpressionStatement	* stage = 0	4893:4:155182:155192	11014914	11	True				
ANR	11015037	AssignmentExpression	* stage = 0		11014914	0		=			
ANR	11015038	UnaryOperationExpression	* stage		11014914	0					
ANR	11015039	UnaryOperator	*		11014914	0					
ANR	11015040	Identifier	stage		11014914	1					
ANR	11015041	PrimaryExpression	0		11014914	1					
ANR	11015042	ExpressionStatement	"rc_decrement_only_cs ( pcs , ""setseparationspace"" )"	4894:4:155198:155245	11014914	12	True				
ANR	11015043	CallExpression	"rc_decrement_only_cs ( pcs , ""setseparationspace"" )"		11014914	0					
ANR	11015044	Callee	rc_decrement_only_cs		11014914	0					
ANR	11015045	Identifier	rc_decrement_only_cs		11014914	0					
ANR	11015046	ArgumentList	pcs		11014914	1					
ANR	11015047	Argument	pcs		11014914	0					
ANR	11015048	Identifier	pcs		11014914	0					
ANR	11015049	Argument	"""setseparationspace"""		11014914	1					
ANR	11015050	PrimaryExpression	"""setseparationspace"""		11014914	0					
ANR	11015051	ReturnStatement	return code ;	4895:4:155251:155262	11014914	13	True				
ANR	11015052	Identifier	code		11014914	0					
ANR	11015053	ReturnType	static int		11014914	1					
ANR	11015054	Identifier	setdevicepspace		11014914	2					
ANR	11015055	ParameterList	"i_ctx_t * i_ctx_p , ref * r , int * stage , int * cont , int CIESubst"		11014914	3					
ANR	11015056	Parameter	i_ctx_t * i_ctx_p	4867:27:154264:154280	11014914	0	True				
ANR	11015057	ParameterType	i_ctx_t *		11014914	0					
ANR	11015058	Identifier	i_ctx_p		11014914	1					
ANR	11015059	Parameter	ref * r	4867:46:154283:154288	11014914	1	True				
ANR	11015060	ParameterType	ref *		11014914	0					
ANR	11015061	Identifier	r		11014914	1					
ANR	11015062	Parameter	int * stage	4867:54:154291:154300	11014914	2	True				
ANR	11015063	ParameterType	int *		11014914	0					
ANR	11015064	Identifier	stage		11014914	1					
ANR	11015065	Parameter	int * cont	4867:66:154303:154311	11014914	3	True				
ANR	11015066	ParameterType	int *		11014914	0					
ANR	11015067	Identifier	cont		11014914	1					
ANR	11015068	Parameter	int CIESubst	4867:77:154314:154325	11014914	4	True				
ANR	11015069	ParameterType	int		11014914	0					
ANR	11015070	Identifier	CIESubst		11014914	1					
ANR	11015071	CFGEntryNode	ENTRY		11014914		True				
ANR	11015072	CFGExitNode	EXIT		11014914		True				
ANR	11015073	Symbol	& pcs		11014914						
ANR	11015074	Symbol	code		11014914						
ANR	11015075	Symbol	i_ctx_p -> language_level		11014914						
ANR	11015076	Symbol	gs_error_undefined		11014914						
ANR	11015077	Symbol	gs_setcolorspace		11014914						
ANR	11015078	Symbol	& bpp		11014914						
ANR	11015079	Symbol	r_has_type		11014914						
ANR	11015080	Symbol	gs_error_typecheck		11014914						
ANR	11015081	Symbol	gs_cspace_new_DevicePixel		11014914						
ANR	11015082	Symbol	igs		11014914						
ANR	11015083	Symbol	* i_ctx_p		11014914						
ANR	11015084	Symbol	imemory		11014914						
ANR	11015085	Symbol	cont		11014914						
ANR	11015086	Symbol	CIESubst		11014914						
ANR	11015087	Symbol	pcs		11014914						
ANR	11015088	Symbol	bpp		11014914						
ANR	11015089	Symbol	* stage		11014914						
ANR	11015090	Symbol	array_get		11014914						
ANR	11015091	Symbol	bpp . value		11014914						
ANR	11015092	Symbol	r		11014914						
ANR	11015093	Symbol	stage		11014914						
ANR	11015094	Symbol	t_integer		11014914						
ANR	11015095	Symbol	* cont		11014914						
ANR	11015096	Symbol	i_ctx_p		11014914						
ANR	11015097	Symbol	bpp . value . intval		11014914						
ANR	11015098	Function	validatedevicepspace	4897:0:155266:155976							
ANR	11015099	FunctionDef	"validatedevicepspace (i_ctx_t * i_ctx_p , ref * * space)"		11015098	0					
ANR	11015100	CompoundStatement		4898:0:155330:155976	11015098	0					
ANR	11015101	IdentifierDeclStatement	int code = 0 ;	4899:4:155336:155348	11015098	0	True				
ANR	11015102	IdentifierDecl	code = 0		11015098	0					
ANR	11015103	IdentifierDeclType	int		11015098	0					
ANR	11015104	Identifier	code		11015098	1					
ANR	11015105	AssignmentExpression	code = 0		11015098	2		=			
ANR	11015106	Identifier	code		11015098	0					
ANR	11015107	PrimaryExpression	0		11015098	1					
ANR	11015108	IdentifierDeclStatement	"ref * r = * space , bpp ;"	4900:4:155354:155374	11015098	1	True				
ANR	11015109	IdentifierDecl	* r = * space		11015098	0					
ANR	11015110	IdentifierDeclType	ref *		11015098	0					
ANR	11015111	Identifier	r		11015098	1					
ANR	11015112	AssignmentExpression	* r = * space		11015098	2		=			
ANR	11015113	Identifier	r		11015098	0					
ANR	11015114	UnaryOperationExpression	* space		11015098	1					
ANR	11015115	UnaryOperator	*		11015098	0					
ANR	11015116	Identifier	space		11015098	1					
ANR	11015117	IdentifierDecl	bpp		11015098	1					
ANR	11015118	IdentifierDeclType	ref		11015098	0					
ANR	11015119	Identifier	bpp		11015098	1					
ANR	11015120	IfStatement	if ( ! r_is_array ( r ) )		11015098	2					
ANR	11015121	Condition	! r_is_array ( r )	4902:8:155385:155398	11015098	0	True				
ANR	11015122	UnaryOperationExpression	! r_is_array ( r )		11015098	0					
ANR	11015123	UnaryOperator	!		11015098	0					
ANR	11015124	CallExpression	r_is_array ( r )		11015098	1					
ANR	11015125	Callee	r_is_array		11015098	0					
ANR	11015126	Identifier	r_is_array		11015098	0					
ANR	11015127	ArgumentList	r		11015098	1					
ANR	11015128	Argument	r		11015098	0					
ANR	11015129	Identifier	r		11015098	0					
ANR	11015130	ExpressionStatement	return_error ( gs_error_typecheck )	4903:8:155409:155441	11015098	1	True				
ANR	11015131	CallExpression	return_error ( gs_error_typecheck )		11015098	0					
ANR	11015132	Callee	return_error		11015098	0					
ANR	11015133	Identifier	return_error		11015098	0					
ANR	11015134	ArgumentList	gs_error_typecheck		11015098	1					
ANR	11015135	Argument	gs_error_typecheck		11015098	0					
ANR	11015136	Identifier	gs_error_typecheck		11015098	0					
ANR	11015137	IfStatement	if ( r_size ( r ) != 2 )		11015098	3					
ANR	11015138	Condition	r_size ( r ) != 2	4905:8:155512:155525	11015098	0	True				
ANR	11015139	EqualityExpression	r_size ( r ) != 2		11015098	0		!=			
ANR	11015140	CallExpression	r_size ( r )		11015098	0					
ANR	11015141	Callee	r_size		11015098	0					
ANR	11015142	Identifier	r_size		11015098	0					
ANR	11015143	ArgumentList	r		11015098	1					
ANR	11015144	Argument	r		11015098	0					
ANR	11015145	Identifier	r		11015098	0					
ANR	11015146	PrimaryExpression	2		11015098	1					
ANR	11015147	ExpressionStatement	return_error ( gs_error_rangecheck )	4906:8:155536:155569	11015098	1	True				
ANR	11015148	CallExpression	return_error ( gs_error_rangecheck )		11015098	0					
ANR	11015149	Callee	return_error		11015098	0					
ANR	11015150	Identifier	return_error		11015098	0					
ANR	11015151	ArgumentList	gs_error_rangecheck		11015098	1					
ANR	11015152	Argument	gs_error_rangecheck		11015098	0					
ANR	11015153	Identifier	gs_error_rangecheck		11015098	0					
ANR	11015154	ExpressionStatement	"code = array_get ( imemory , r , 1 , & bpp )"	4908:4:155626:155663	11015098	4	True				
ANR	11015155	AssignmentExpression	"code = array_get ( imemory , r , 1 , & bpp )"		11015098	0		=			
ANR	11015156	Identifier	code		11015098	0					
ANR	11015157	CallExpression	"array_get ( imemory , r , 1 , & bpp )"		11015098	1					
ANR	11015158	Callee	array_get		11015098	0					
ANR	11015159	Identifier	array_get		11015098	0					
ANR	11015160	ArgumentList	imemory		11015098	1					
ANR	11015161	Argument	imemory		11015098	0					
ANR	11015162	Identifier	imemory		11015098	0					
ANR	11015163	Argument	r		11015098	1					
ANR	11015164	Identifier	r		11015098	0					
ANR	11015165	Argument	1		11015098	2					
ANR	11015166	PrimaryExpression	1		11015098	0					
ANR	11015167	Argument	& bpp		11015098	3					
ANR	11015168	UnaryOperationExpression	& bpp		11015098	0					
ANR	11015169	UnaryOperator	&		11015098	0					
ANR	11015170	Identifier	bpp		11015098	1					
ANR	11015171	IfStatement	if ( code < 0 )		11015098	5					
ANR	11015172	Condition	code < 0	4909:8:155673:155680	11015098	0	True				
ANR	11015173	RelationalExpression	code < 0		11015098	0		<			
ANR	11015174	Identifier	code		11015098	0					
ANR	11015175	PrimaryExpression	0		11015098	1					
ANR	11015176	ReturnStatement	return code ;	4910:8:155691:155702	11015098	1	True				
ANR	11015177	Identifier	code		11015098	0					
ANR	11015178	IfStatement	"if ( ! r_has_type ( & bpp , t_integer ) )"		11015098	6					
ANR	11015179	Condition	"! r_has_type ( & bpp , t_integer )"	4911:8:155712:155739	11015098	0	True				
ANR	11015180	UnaryOperationExpression	"! r_has_type ( & bpp , t_integer )"		11015098	0					
ANR	11015181	UnaryOperator	!		11015098	0					
ANR	11015182	CallExpression	"r_has_type ( & bpp , t_integer )"		11015098	1					
ANR	11015183	Callee	r_has_type		11015098	0					
ANR	11015184	Identifier	r_has_type		11015098	0					
ANR	11015185	ArgumentList	& bpp		11015098	1					
ANR	11015186	Argument	& bpp		11015098	0					
ANR	11015187	UnaryOperationExpression	& bpp		11015098	0					
ANR	11015188	UnaryOperator	&		11015098	0					
ANR	11015189	Identifier	bpp		11015098	1					
ANR	11015190	Argument	t_integer		11015098	1					
ANR	11015191	Identifier	t_integer		11015098	0					
ANR	11015192	ExpressionStatement	return_error ( gs_error_typecheck )	4912:8:155750:155782	11015098	1	True				
ANR	11015193	CallExpression	return_error ( gs_error_typecheck )		11015098	0					
ANR	11015194	Callee	return_error		11015098	0					
ANR	11015195	Identifier	return_error		11015098	0					
ANR	11015196	ArgumentList	gs_error_typecheck		11015098	1					
ANR	11015197	Argument	gs_error_typecheck		11015098	0					
ANR	11015198	Identifier	gs_error_typecheck		11015098	0					
ANR	11015199	IfStatement	if ( bpp . value . intval < 0 || bpp . value . intval > 31 )		11015098	7					
ANR	11015200	Condition	bpp . value . intval < 0 || bpp . value . intval > 31	4915:8:155852:155896	11015098	0	True				
ANR	11015201	OrExpression	bpp . value . intval < 0 || bpp . value . intval > 31		11015098	0		||			
ANR	11015202	RelationalExpression	bpp . value . intval < 0		11015098	0		<			
ANR	11015203	MemberAccess	bpp . value . intval		11015098	0					
ANR	11015204	MemberAccess	bpp . value		11015098	0					
ANR	11015205	Identifier	bpp		11015098	0					
ANR	11015206	Identifier	value		11015098	1					
ANR	11015207	Identifier	intval		11015098	1					
ANR	11015208	PrimaryExpression	0		11015098	1					
ANR	11015209	RelationalExpression	bpp . value . intval > 31		11015098	1		>			
ANR	11015210	MemberAccess	bpp . value . intval		11015098	0					
ANR	11015211	MemberAccess	bpp . value		11015098	0					
ANR	11015212	Identifier	bpp		11015098	0					
ANR	11015213	Identifier	value		11015098	1					
ANR	11015214	Identifier	intval		11015098	1					
ANR	11015215	PrimaryExpression	31		11015098	1					
ANR	11015216	ExpressionStatement	return_error ( gs_error_rangecheck )	4916:8:155907:155940	11015098	1	True				
ANR	11015217	CallExpression	return_error ( gs_error_rangecheck )		11015098	0					
ANR	11015218	Callee	return_error		11015098	0					
ANR	11015219	Identifier	return_error		11015098	0					
ANR	11015220	ArgumentList	gs_error_rangecheck		11015098	1					
ANR	11015221	Argument	gs_error_rangecheck		11015098	0					
ANR	11015222	Identifier	gs_error_rangecheck		11015098	0					
ANR	11015223	ExpressionStatement	* space = 0	4918:4:155947:155957	11015098	8	True				
ANR	11015224	AssignmentExpression	* space = 0		11015098	0		=			
ANR	11015225	UnaryOperationExpression	* space		11015098	0					
ANR	11015226	UnaryOperator	*		11015098	0					
ANR	11015227	Identifier	space		11015098	1					
ANR	11015228	PrimaryExpression	0		11015098	1					
ANR	11015229	ReturnStatement	return code ;	4919:4:155963:155974	11015098	9	True				
ANR	11015230	Identifier	code		11015098	0					
ANR	11015231	ReturnType	static int		11015098	1					
ANR	11015232	Identifier	validatedevicepspace		11015098	2					
ANR	11015233	ParameterList	"i_ctx_t * i_ctx_p , ref * * space"		11015098	3					
ANR	11015234	Parameter	i_ctx_t * i_ctx_p	4897:32:155298:155314	11015098	0	True				
ANR	11015235	ParameterType	i_ctx_t *		11015098	0					
ANR	11015236	Identifier	i_ctx_p		11015098	1					
ANR	11015237	Parameter	ref * * space	4897:51:155317:155327	11015098	1	True				
ANR	11015238	ParameterType	ref * *		11015098	0					
ANR	11015239	Identifier	space		11015098	1					
ANR	11015240	CFGEntryNode	ENTRY		11015098		True				
ANR	11015241	CFGExitNode	EXIT		11015098		True				
ANR	11015242	Symbol	code		11015098						
ANR	11015243	Symbol	bpp		11015098						
ANR	11015244	Symbol	gs_error_rangecheck		11015098						
ANR	11015245	Symbol	array_get		11015098						
ANR	11015246	Symbol	bpp . value		11015098						
ANR	11015247	Symbol	space		11015098						
ANR	11015248	Symbol	& bpp		11015098						
ANR	11015249	Symbol	r		11015098						
ANR	11015250	Symbol	gs_error_typecheck		11015098						
ANR	11015251	Symbol	r_has_type		11015098						
ANR	11015252	Symbol	t_integer		11015098						
ANR	11015253	Symbol	i_ctx_p		11015098						
ANR	11015254	Symbol	r_size		11015098						
ANR	11015255	Symbol	* space		11015098						
ANR	11015256	Symbol	r_is_array		11015098						
ANR	11015257	Symbol	imemory		11015098						
ANR	11015258	Symbol	bpp . value . intval		11015098						
ANR	11015259	Function	devicepdomain	4921:0:155978:156240							
ANR	11015260	FunctionDef	"devicepdomain (i_ctx_t * i_ctx_p , ref * space , float * ptr)"		11015259	0					
ANR	11015261	CompoundStatement		4922:0:156046:156240	11015259	0					
ANR	11015262	IdentifierDeclStatement	int code ;	4923:4:156052:156060	11015259	0	True				
ANR	11015263	IdentifierDecl	code		11015259	0					
ANR	11015264	IdentifierDeclType	int		11015259	0					
ANR	11015265	Identifier	code		11015259	1					
ANR	11015266	IdentifierDeclStatement	ref tref ;	4924:4:156066:156074	11015259	1	True				
ANR	11015267	IdentifierDecl	tref		11015259	0					
ANR	11015268	IdentifierDeclType	ref		11015259	0					
ANR	11015269	Identifier	tref		11015259	1					
ANR	11015270	ExpressionStatement	"code = array_get ( imemory , space , 1 , & tref )"	4926:4:156081:156123	11015259	2	True				
ANR	11015271	AssignmentExpression	"code = array_get ( imemory , space , 1 , & tref )"		11015259	0		=			
ANR	11015272	Identifier	code		11015259	0					
ANR	11015273	CallExpression	"array_get ( imemory , space , 1 , & tref )"		11015259	1					
ANR	11015274	Callee	array_get		11015259	0					
ANR	11015275	Identifier	array_get		11015259	0					
ANR	11015276	ArgumentList	imemory		11015259	1					
ANR	11015277	Argument	imemory		11015259	0					
ANR	11015278	Identifier	imemory		11015259	0					
ANR	11015279	Argument	space		11015259	1					
ANR	11015280	Identifier	space		11015259	0					
ANR	11015281	Argument	1		11015259	2					
ANR	11015282	PrimaryExpression	1		11015259	0					
ANR	11015283	Argument	& tref		11015259	3					
ANR	11015284	UnaryOperationExpression	& tref		11015259	0					
ANR	11015285	UnaryOperator	&		11015259	0					
ANR	11015286	Identifier	tref		11015259	1					
ANR	11015287	IfStatement	if ( code < 0 )		11015259	3					
ANR	11015288	Condition	code < 0	4927:8:156133:156140	11015259	0	True				
ANR	11015289	RelationalExpression	code < 0		11015259	0		<			
ANR	11015290	Identifier	code		11015259	0					
ANR	11015291	PrimaryExpression	0		11015259	1					
ANR	11015292	ReturnStatement	return code ;	4928:8:156151:156162	11015259	1	True				
ANR	11015293	Identifier	code		11015259	0					
ANR	11015294	ExpressionStatement	ptr [ 0 ] = 0	4929:4:156168:156178	11015259	4	True				
ANR	11015295	AssignmentExpression	ptr [ 0 ] = 0		11015259	0		=			
ANR	11015296	ArrayIndexing	ptr [ 0 ]		11015259	0					
ANR	11015297	Identifier	ptr		11015259	0					
ANR	11015298	PrimaryExpression	0		11015259	1					
ANR	11015299	PrimaryExpression	0		11015259	1					
ANR	11015300	ExpressionStatement	ptr [ 1 ] = ( float ) ( 1 << tref . value . intval )	4930:4:156184:156224	11015259	5	True				
ANR	11015301	AssignmentExpression	ptr [ 1 ] = ( float ) ( 1 << tref . value . intval )		11015259	0		=			
ANR	11015302	ArrayIndexing	ptr [ 1 ]		11015259	0					
ANR	11015303	Identifier	ptr		11015259	0					
ANR	11015304	PrimaryExpression	1		11015259	1					
ANR	11015305	CastExpression	( float ) ( 1 << tref . value . intval )		11015259	1					
ANR	11015306	CastTarget	float		11015259	0					
ANR	11015307	ShiftExpression	1 << tref . value . intval		11015259	1		<<			
ANR	11015308	PrimaryExpression	1		11015259	0					
ANR	11015309	MemberAccess	tref . value . intval		11015259	1					
ANR	11015310	MemberAccess	tref . value		11015259	0					
ANR	11015311	Identifier	tref		11015259	0					
ANR	11015312	Identifier	value		11015259	1					
ANR	11015313	Identifier	intval		11015259	1					
ANR	11015314	ReturnStatement	return 0 ;	4931:4:156230:156238	11015259	6	True				
ANR	11015315	PrimaryExpression	0		11015259	0					
ANR	11015316	ReturnType	static int		11015259	1					
ANR	11015317	Identifier	devicepdomain		11015259	2					
ANR	11015318	ParameterList	"i_ctx_t * i_ctx_p , ref * space , float * ptr"		11015259	3					
ANR	11015319	Parameter	i_ctx_t * i_ctx_p	4921:25:156003:156019	11015259	0	True				
ANR	11015320	ParameterType	i_ctx_t *		11015259	0					
ANR	11015321	Identifier	i_ctx_p		11015259	1					
ANR	11015322	Parameter	ref * space	4921:44:156022:156031	11015259	1	True				
ANR	11015323	ParameterType	ref *		11015259	0					
ANR	11015324	Identifier	space		11015259	1					
ANR	11015325	Parameter	float * ptr	4921:56:156034:156043	11015259	2	True				
ANR	11015326	ParameterType	float *		11015259	0					
ANR	11015327	Identifier	ptr		11015259	1					
ANR	11015328	CFGEntryNode	ENTRY		11015259		True				
ANR	11015329	CFGExitNode	EXIT		11015259		True				
ANR	11015330	Symbol	tref . value . intval		11015259						
ANR	11015331	Symbol	code		11015259						
ANR	11015332	Symbol	i_ctx_p		11015259						
ANR	11015333	Symbol	array_get		11015259						
ANR	11015334	Symbol	& tref		11015259						
ANR	11015335	Symbol	* ptr		11015259						
ANR	11015336	Symbol	tref		11015259						
ANR	11015337	Symbol	imemory		11015259						
ANR	11015338	Symbol	space		11015259						
ANR	11015339	Symbol	tref . value		11015259						
ANR	11015340	Symbol	ptr		11015259						
ANR	11015341	Function	deviceprange	4933:0:156242:156503							
ANR	11015342	FunctionDef	"deviceprange (i_ctx_t * i_ctx_p , ref * space , float * ptr)"		11015341	0					
ANR	11015343	CompoundStatement		4934:0:156309:156503	11015341	0					
ANR	11015344	IdentifierDeclStatement	int code ;	4935:4:156315:156323	11015341	0	True				
ANR	11015345	IdentifierDecl	code		11015341	0					
ANR	11015346	IdentifierDeclType	int		11015341	0					
ANR	11015347	Identifier	code		11015341	1					
ANR	11015348	IdentifierDeclStatement	ref tref ;	4936:4:156329:156337	11015341	1	True				
ANR	11015349	IdentifierDecl	tref		11015341	0					
ANR	11015350	IdentifierDeclType	ref		11015341	0					
ANR	11015351	Identifier	tref		11015341	1					
ANR	11015352	ExpressionStatement	"code = array_get ( imemory , space , 1 , & tref )"	4938:4:156344:156386	11015341	2	True				
ANR	11015353	AssignmentExpression	"code = array_get ( imemory , space , 1 , & tref )"		11015341	0		=			
ANR	11015354	Identifier	code		11015341	0					
ANR	11015355	CallExpression	"array_get ( imemory , space , 1 , & tref )"		11015341	1					
ANR	11015356	Callee	array_get		11015341	0					
ANR	11015357	Identifier	array_get		11015341	0					
ANR	11015358	ArgumentList	imemory		11015341	1					
ANR	11015359	Argument	imemory		11015341	0					
ANR	11015360	Identifier	imemory		11015341	0					
ANR	11015361	Argument	space		11015341	1					
ANR	11015362	Identifier	space		11015341	0					
ANR	11015363	Argument	1		11015341	2					
ANR	11015364	PrimaryExpression	1		11015341	0					
ANR	11015365	Argument	& tref		11015341	3					
ANR	11015366	UnaryOperationExpression	& tref		11015341	0					
ANR	11015367	UnaryOperator	&		11015341	0					
ANR	11015368	Identifier	tref		11015341	1					
ANR	11015369	IfStatement	if ( code < 0 )		11015341	3					
ANR	11015370	Condition	code < 0	4939:8:156396:156403	11015341	0	True				
ANR	11015371	RelationalExpression	code < 0		11015341	0		<			
ANR	11015372	Identifier	code		11015341	0					
ANR	11015373	PrimaryExpression	0		11015341	1					
ANR	11015374	ReturnStatement	return code ;	4940:8:156414:156425	11015341	1	True				
ANR	11015375	Identifier	code		11015341	0					
ANR	11015376	ExpressionStatement	ptr [ 0 ] = 0	4941:4:156431:156441	11015341	4	True				
ANR	11015377	AssignmentExpression	ptr [ 0 ] = 0		11015341	0		=			
ANR	11015378	ArrayIndexing	ptr [ 0 ]		11015341	0					
ANR	11015379	Identifier	ptr		11015341	0					
ANR	11015380	PrimaryExpression	0		11015341	1					
ANR	11015381	PrimaryExpression	0		11015341	1					
ANR	11015382	ExpressionStatement	ptr [ 1 ] = ( float ) ( 1 << tref . value . intval )	4942:4:156447:156487	11015341	5	True				
ANR	11015383	AssignmentExpression	ptr [ 1 ] = ( float ) ( 1 << tref . value . intval )		11015341	0		=			
ANR	11015384	ArrayIndexing	ptr [ 1 ]		11015341	0					
ANR	11015385	Identifier	ptr		11015341	0					
ANR	11015386	PrimaryExpression	1		11015341	1					
ANR	11015387	CastExpression	( float ) ( 1 << tref . value . intval )		11015341	1					
ANR	11015388	CastTarget	float		11015341	0					
ANR	11015389	ShiftExpression	1 << tref . value . intval		11015341	1		<<			
ANR	11015390	PrimaryExpression	1		11015341	0					
ANR	11015391	MemberAccess	tref . value . intval		11015341	1					
ANR	11015392	MemberAccess	tref . value		11015341	0					
ANR	11015393	Identifier	tref		11015341	0					
ANR	11015394	Identifier	value		11015341	1					
ANR	11015395	Identifier	intval		11015341	1					
ANR	11015396	ReturnStatement	return 0 ;	4943:4:156493:156501	11015341	6	True				
ANR	11015397	PrimaryExpression	0		11015341	0					
ANR	11015398	ReturnType	static int		11015341	1					
ANR	11015399	Identifier	deviceprange		11015341	2					
ANR	11015400	ParameterList	"i_ctx_t * i_ctx_p , ref * space , float * ptr"		11015341	3					
ANR	11015401	Parameter	i_ctx_t * i_ctx_p	4933:24:156266:156282	11015341	0	True				
ANR	11015402	ParameterType	i_ctx_t *		11015341	0					
ANR	11015403	Identifier	i_ctx_p		11015341	1					
ANR	11015404	Parameter	ref * space	4933:43:156285:156294	11015341	1	True				
ANR	11015405	ParameterType	ref *		11015341	0					
ANR	11015406	Identifier	space		11015341	1					
ANR	11015407	Parameter	float * ptr	4933:55:156297:156306	11015341	2	True				
ANR	11015408	ParameterType	float *		11015341	0					
ANR	11015409	Identifier	ptr		11015341	1					
ANR	11015410	CFGEntryNode	ENTRY		11015341		True				
ANR	11015411	CFGExitNode	EXIT		11015341		True				
ANR	11015412	Symbol	tref . value . intval		11015341						
ANR	11015413	Symbol	code		11015341						
ANR	11015414	Symbol	i_ctx_p		11015341						
ANR	11015415	Symbol	array_get		11015341						
ANR	11015416	Symbol	& tref		11015341						
ANR	11015417	Symbol	* ptr		11015341						
ANR	11015418	Symbol	tref		11015341						
ANR	11015419	Symbol	imemory		11015341						
ANR	11015420	Symbol	space		11015341						
ANR	11015421	Symbol	tref . value		11015341						
ANR	11015422	Symbol	ptr		11015341						
ANR	11015423	Function	devicepbasecolor	4945:0:156505:156706							
ANR	11015424	FunctionDef	"devicepbasecolor (i_ctx_t * i_ctx_p , ref * space , int base , int * stage , int * cont , int * stack_depth)"		11015423	0					
ANR	11015425	CompoundStatement		4946:0:156615:156706	11015423	0					
ANR	11015426	IdentifierDeclStatement	os_ptr op = osp ;	4947:4:156621:156637	11015423	0	True				
ANR	11015427	IdentifierDecl	op = osp		11015423	0					
ANR	11015428	IdentifierDeclType	os_ptr		11015423	0					
ANR	11015429	Identifier	op		11015423	1					
ANR	11015430	AssignmentExpression	op = osp		11015423	2		=			
ANR	11015431	Identifier	osp		11015423	0					
ANR	11015432	Identifier	osp		11015423	1					
ANR	11015433	ExpressionStatement	* stage = 0	4949:4:156644:156654	11015423	1	True				
ANR	11015434	AssignmentExpression	* stage = 0		11015423	0		=			
ANR	11015435	UnaryOperationExpression	* stage		11015423	0					
ANR	11015436	UnaryOperator	*		11015423	0					
ANR	11015437	Identifier	stage		11015423	1					
ANR	11015438	PrimaryExpression	0		11015423	1					
ANR	11015439	ExpressionStatement	* cont = 0	4950:4:156660:156669	11015423	2	True				
ANR	11015440	AssignmentExpression	* cont = 0		11015423	0		=			
ANR	11015441	UnaryOperationExpression	* cont		11015423	0					
ANR	11015442	UnaryOperator	*		11015423	0					
ANR	11015443	Identifier	cont		11015423	1					
ANR	11015444	PrimaryExpression	0		11015423	1					
ANR	11015445	ExpressionStatement	"make_int ( op , 0 )"	4951:4:156675:156690	11015423	3	True				
ANR	11015446	CallExpression	"make_int ( op , 0 )"		11015423	0					
ANR	11015447	Callee	make_int		11015423	0					
ANR	11015448	Identifier	make_int		11015423	0					
ANR	11015449	ArgumentList	op		11015423	1					
ANR	11015450	Argument	op		11015423	0					
ANR	11015451	Identifier	op		11015423	0					
ANR	11015452	Argument	0		11015423	1					
ANR	11015453	PrimaryExpression	0		11015423	0					
ANR	11015454	ReturnStatement	return 0 ;	4952:4:156696:156704	11015423	4	True				
ANR	11015455	PrimaryExpression	0		11015423	0					
ANR	11015456	ReturnType	static int		11015423	1					
ANR	11015457	Identifier	devicepbasecolor		11015423	2					
ANR	11015458	ParameterList	"i_ctx_t * i_ctx_p , ref * space , int base , int * stage , int * cont , int * stack_depth"		11015423	3					
ANR	11015459	Parameter	i_ctx_t * i_ctx_p	4945:28:156533:156549	11015423	0	True				
ANR	11015460	ParameterType	i_ctx_t *		11015423	0					
ANR	11015461	Identifier	i_ctx_p		11015423	1					
ANR	11015462	Parameter	ref * space	4945:47:156552:156561	11015423	1	True				
ANR	11015463	ParameterType	ref *		11015423	0					
ANR	11015464	Identifier	space		11015423	1					
ANR	11015465	Parameter	int base	4945:59:156564:156571	11015423	2	True				
ANR	11015466	ParameterType	int		11015423	0					
ANR	11015467	Identifier	base		11015423	1					
ANR	11015468	Parameter	int * stage	4945:69:156574:156583	11015423	3	True				
ANR	11015469	ParameterType	int *		11015423	0					
ANR	11015470	Identifier	stage		11015423	1					
ANR	11015471	Parameter	int * cont	4945:81:156586:156594	11015423	4	True				
ANR	11015472	ParameterType	int *		11015423	0					
ANR	11015473	Identifier	cont		11015423	1					
ANR	11015474	Parameter	int * stack_depth	4945:92:156597:156612	11015423	5	True				
ANR	11015475	ParameterType	int *		11015423	0					
ANR	11015476	Identifier	stack_depth		11015423	1					
ANR	11015477	CFGEntryNode	ENTRY		11015423		True				
ANR	11015478	CFGExitNode	EXIT		11015423		True				
ANR	11015479	Symbol	stack_depth		11015423						
ANR	11015480	Symbol	op		11015423						
ANR	11015481	Symbol	* stage		11015423						
ANR	11015482	Symbol	stage		11015423						
ANR	11015483	Symbol	* cont		11015423						
ANR	11015484	Symbol	i_ctx_p		11015423						
ANR	11015485	Symbol	cont		11015423						
ANR	11015486	Symbol	osp		11015423						
ANR	11015487	Symbol	space		11015423						
ANR	11015488	Symbol	base		11015423						
ANR	11015489	Function	devicepvalidate	4954:0:156708:156811							
ANR	11015490	FunctionDef	"devicepvalidate (i_ctx_t * i_ctx_p , ref * space , float * values , int num_comps)"		11015489	0					
ANR	11015491	CompoundStatement		4955:0:156795:156811	11015489	0					
ANR	11015492	ReturnStatement	return 0 ;	4956:4:156801:156809	11015489	0	True				
ANR	11015493	PrimaryExpression	0		11015489	0					
ANR	11015494	ReturnType	static int		11015489	1					
ANR	11015495	Identifier	devicepvalidate		11015489	2					
ANR	11015496	ParameterList	"i_ctx_t * i_ctx_p , ref * space , float * values , int num_comps"		11015489	3					
ANR	11015497	Parameter	i_ctx_t * i_ctx_p	4954:27:156735:156750	11015489	0	True				
ANR	11015498	ParameterType	i_ctx_t *		11015489	0					
ANR	11015499	Identifier	i_ctx_p		11015489	1					
ANR	11015500	Parameter	ref * space	4954:45:156753:156762	11015489	1	True				
ANR	11015501	ParameterType	ref *		11015489	0					
ANR	11015502	Identifier	space		11015489	1					
ANR	11015503	Parameter	float * values	4954:57:156765:156777	11015489	2	True				
ANR	11015504	ParameterType	float *		11015489	0					
ANR	11015505	Identifier	values		11015489	1					
ANR	11015506	Parameter	int num_comps	4954:72:156780:156792	11015489	3	True				
ANR	11015507	ParameterType	int		11015489	0					
ANR	11015508	Identifier	num_comps		11015489	1					
ANR	11015509	CFGEntryNode	ENTRY		11015489		True				
ANR	11015510	CFGExitNode	EXIT		11015489		True				
ANR	11015511	Symbol	i_ctx_p		11015489						
ANR	11015512	Symbol	values		11015489						
ANR	11015513	Symbol	num_comps		11015489						
ANR	11015514	Symbol	space		11015489						
ANR	11015515	Function	set_dev_space	4959:0:156814:157364							
ANR	11015516	FunctionDef	"set_dev_space (i_ctx_t * i_ctx_p , int components)"		11015515	0					
ANR	11015517	CompoundStatement		4960:0:156874:157364	11015515	0					
ANR	11015518	IdentifierDeclStatement	"int code , stage = 1 , cont = 0 ;"	4961:4:156880:156909	11015515	0	True				
ANR	11015519	IdentifierDecl	code		11015515	0					
ANR	11015520	IdentifierDeclType	int		11015515	0					
ANR	11015521	Identifier	code		11015515	1					
ANR	11015522	IdentifierDecl	stage = 1		11015515	1					
ANR	11015523	IdentifierDeclType	int		11015515	0					
ANR	11015524	Identifier	stage		11015515	1					
ANR	11015525	AssignmentExpression	stage = 1		11015515	2		=			
ANR	11015526	Identifier	stage		11015515	0					
ANR	11015527	PrimaryExpression	1		11015515	1					
ANR	11015528	IdentifierDecl	cont = 0		11015515	2					
ANR	11015529	IdentifierDeclType	int		11015515	0					
ANR	11015530	Identifier	cont		11015515	1					
ANR	11015531	AssignmentExpression	cont = 0		11015515	2		=			
ANR	11015532	Identifier	cont		11015515	0					
ANR	11015533	PrimaryExpression	0		11015515	1					
ANR	11015534	SwitchStatement	switch ( components )		11015515	1					
ANR	11015535	Condition	components	4962:11:156922:156931	11015515	0	True				
ANR	11015536	Identifier	components		11015515	0					
ANR	11015537	CompoundStatement		3:23:59:59	11015515	1					
ANR	11015538	Label	case 1 :	4963:8:156944:156950	11015515	0	True				
ANR	11015539	ExpressionStatement	"code = setgrayspace ( i_ctx_p , ( ref * ) 0 , & stage , & cont , 1 )"	4964:12:156964:157020	11015515	1	True				
ANR	11015540	AssignmentExpression	"code = setgrayspace ( i_ctx_p , ( ref * ) 0 , & stage , & cont , 1 )"		11015515	0		=			
ANR	11015541	Identifier	code		11015515	0					
ANR	11015542	CallExpression	"setgrayspace ( i_ctx_p , ( ref * ) 0 , & stage , & cont , 1 )"		11015515	1					
ANR	11015543	Callee	setgrayspace		11015515	0					
ANR	11015544	Identifier	setgrayspace		11015515	0					
ANR	11015545	ArgumentList	i_ctx_p		11015515	1					
ANR	11015546	Argument	i_ctx_p		11015515	0					
ANR	11015547	Identifier	i_ctx_p		11015515	0					
ANR	11015548	Argument	( ref * ) 0		11015515	1					
ANR	11015549	CastExpression	( ref * ) 0		11015515	0					
ANR	11015550	CastTarget	ref *		11015515	0					
ANR	11015551	PrimaryExpression	0		11015515	1					
ANR	11015552	Argument	& stage		11015515	2					
ANR	11015553	UnaryOperationExpression	& stage		11015515	0					
ANR	11015554	UnaryOperator	&		11015515	0					
ANR	11015555	Identifier	stage		11015515	1					
ANR	11015556	Argument	& cont		11015515	3					
ANR	11015557	UnaryOperationExpression	& cont		11015515	0					
ANR	11015558	UnaryOperator	&		11015515	0					
ANR	11015559	Identifier	cont		11015515	1					
ANR	11015560	Argument	1		11015515	4					
ANR	11015561	PrimaryExpression	1		11015515	0					
ANR	11015562	BreakStatement	break ;	4965:12:157034:157039	11015515	2	True				
ANR	11015563	Label	case 3 :	4966:8:157049:157055	11015515	3	True				
ANR	11015564	ExpressionStatement	"code = setrgbspace ( i_ctx_p , ( ref * ) 0 , & stage , & cont , 1 )"	4967:12:157069:157124	11015515	4	True				
ANR	11015565	AssignmentExpression	"code = setrgbspace ( i_ctx_p , ( ref * ) 0 , & stage , & cont , 1 )"		11015515	0		=			
ANR	11015566	Identifier	code		11015515	0					
ANR	11015567	CallExpression	"setrgbspace ( i_ctx_p , ( ref * ) 0 , & stage , & cont , 1 )"		11015515	1					
ANR	11015568	Callee	setrgbspace		11015515	0					
ANR	11015569	Identifier	setrgbspace		11015515	0					
ANR	11015570	ArgumentList	i_ctx_p		11015515	1					
ANR	11015571	Argument	i_ctx_p		11015515	0					
ANR	11015572	Identifier	i_ctx_p		11015515	0					
ANR	11015573	Argument	( ref * ) 0		11015515	1					
ANR	11015574	CastExpression	( ref * ) 0		11015515	0					
ANR	11015575	CastTarget	ref *		11015515	0					
ANR	11015576	PrimaryExpression	0		11015515	1					
ANR	11015577	Argument	& stage		11015515	2					
ANR	11015578	UnaryOperationExpression	& stage		11015515	0					
ANR	11015579	UnaryOperator	&		11015515	0					
ANR	11015580	Identifier	stage		11015515	1					
ANR	11015581	Argument	& cont		11015515	3					
ANR	11015582	UnaryOperationExpression	& cont		11015515	0					
ANR	11015583	UnaryOperator	&		11015515	0					
ANR	11015584	Identifier	cont		11015515	1					
ANR	11015585	Argument	1		11015515	4					
ANR	11015586	PrimaryExpression	1		11015515	0					
ANR	11015587	BreakStatement	break ;	4968:12:157138:157143	11015515	5	True				
ANR	11015588	Label	case 4 :	4969:8:157153:157159	11015515	6	True				
ANR	11015589	ExpressionStatement	"code = setcmykspace ( i_ctx_p , ( ref * ) 0 , & stage , & cont , 1 )"	4970:12:157173:157229	11015515	7	True				
ANR	11015590	AssignmentExpression	"code = setcmykspace ( i_ctx_p , ( ref * ) 0 , & stage , & cont , 1 )"		11015515	0		=			
ANR	11015591	Identifier	code		11015515	0					
ANR	11015592	CallExpression	"setcmykspace ( i_ctx_p , ( ref * ) 0 , & stage , & cont , 1 )"		11015515	1					
ANR	11015593	Callee	setcmykspace		11015515	0					
ANR	11015594	Identifier	setcmykspace		11015515	0					
ANR	11015595	ArgumentList	i_ctx_p		11015515	1					
ANR	11015596	Argument	i_ctx_p		11015515	0					
ANR	11015597	Identifier	i_ctx_p		11015515	0					
ANR	11015598	Argument	( ref * ) 0		11015515	1					
ANR	11015599	CastExpression	( ref * ) 0		11015515	0					
ANR	11015600	CastTarget	ref *		11015515	0					
ANR	11015601	PrimaryExpression	0		11015515	1					
ANR	11015602	Argument	& stage		11015515	2					
ANR	11015603	UnaryOperationExpression	& stage		11015515	0					
ANR	11015604	UnaryOperator	&		11015515	0					
ANR	11015605	Identifier	stage		11015515	1					
ANR	11015606	Argument	& cont		11015515	3					
ANR	11015607	UnaryOperationExpression	& cont		11015515	0					
ANR	11015608	UnaryOperator	&		11015515	0					
ANR	11015609	Identifier	cont		11015515	1					
ANR	11015610	Argument	1		11015515	4					
ANR	11015611	PrimaryExpression	1		11015515	0					
ANR	11015612	BreakStatement	break ;	4971:12:157243:157248	11015515	8	True				
ANR	11015613	Label	default :	4972:8:157258:157265	11015515	9	True				
ANR	11015614	Identifier	default		11015515	0					
ANR	11015615	ExpressionStatement	code = gs_note_error ( gs_error_rangecheck )	4973:12:157279:157320	11015515	10	True				
ANR	11015616	AssignmentExpression	code = gs_note_error ( gs_error_rangecheck )		11015515	0		=			
ANR	11015617	Identifier	code		11015515	0					
ANR	11015618	CallExpression	gs_note_error ( gs_error_rangecheck )		11015515	1					
ANR	11015619	Callee	gs_note_error		11015515	0					
ANR	11015620	Identifier	gs_note_error		11015515	0					
ANR	11015621	ArgumentList	gs_error_rangecheck		11015515	1					
ANR	11015622	Argument	gs_error_rangecheck		11015515	0					
ANR	11015623	Identifier	gs_error_rangecheck		11015515	0					
ANR	11015624	BreakStatement	break ;	4974:12:157334:157339	11015515	11	True				
ANR	11015625	ReturnStatement	return code ;	4976:4:157351:157362	11015515	2	True				
ANR	11015626	Identifier	code		11015515	0					
ANR	11015627	ReturnType	static int		11015515	1					
ANR	11015628	Identifier	set_dev_space		11015515	2					
ANR	11015629	ParameterList	"i_ctx_t * i_ctx_p , int components"		11015515	3					
ANR	11015630	Parameter	i_ctx_t * i_ctx_p	4959:25:156839:156855	11015515	0	True				
ANR	11015631	ParameterType	i_ctx_t *		11015515	0					
ANR	11015632	Identifier	i_ctx_p		11015515	1					
ANR	11015633	Parameter	int components	4959:44:156858:156871	11015515	1	True				
ANR	11015634	ParameterType	int		11015515	0					
ANR	11015635	Identifier	components		11015515	1					
ANR	11015636	CFGEntryNode	ENTRY		11015515		True				
ANR	11015637	CFGExitNode	EXIT		11015515		True				
ANR	11015638	Symbol	components		11015515						
ANR	11015639	Symbol	gs_note_error		11015515						
ANR	11015640	Symbol	code		11015515						
ANR	11015641	Symbol	stage		11015515						
ANR	11015642	Symbol	gs_error_rangecheck		11015515						
ANR	11015643	Symbol	& cont		11015515						
ANR	11015644	Symbol	i_ctx_p		11015515						
ANR	11015645	Symbol	& stage		11015515						
ANR	11015646	Symbol	setrgbspace		11015515						
ANR	11015647	Symbol	cont		11015515						
ANR	11015648	Symbol	setgrayspace		11015515						
ANR	11015649	Symbol	setcmykspace		11015515						
ANR	11015650	Function	checkrangeab	4982:0:157439:158390							
ANR	11015651	FunctionDef	"checkrangeab (i_ctx_t * i_ctx_p , ref * labdict)"		11015650	0					
ANR	11015652	CompoundStatement		4983:0:157496:158390	11015650	0					
ANR	11015653	IdentifierDeclStatement	"int code = 0 , i ;"	4984:4:157502:157517	11015650	0	True				
ANR	11015654	IdentifierDecl	code = 0		11015650	0					
ANR	11015655	IdentifierDeclType	int		11015650	0					
ANR	11015656	Identifier	code		11015650	1					
ANR	11015657	AssignmentExpression	code = 0		11015650	2		=			
ANR	11015658	Identifier	code		11015650	0					
ANR	11015659	PrimaryExpression	0		11015650	1					
ANR	11015660	IdentifierDecl	i		11015650	1					
ANR	11015661	IdentifierDeclType	int		11015650	0					
ANR	11015662	Identifier	i		11015650	1					
ANR	11015663	IdentifierDeclStatement	float value [ 4 ] ;	4985:4:157523:157537	11015650	1	True				
ANR	11015664	IdentifierDecl	value [ 4 ]		11015650	0					
ANR	11015665	IdentifierDeclType	float [ 4 ]		11015650	0					
ANR	11015666	Identifier	value		11015650	1					
ANR	11015667	PrimaryExpression	4		11015650	2					
ANR	11015668	IdentifierDeclStatement	"ref * tempref , valref ;"	4986:4:157543:157563	11015650	2	True				
ANR	11015669	IdentifierDecl	* tempref		11015650	0					
ANR	11015670	IdentifierDeclType	ref *		11015650	0					
ANR	11015671	Identifier	tempref		11015650	1					
ANR	11015672	IdentifierDecl	valref		11015650	1					
ANR	11015673	IdentifierDeclType	ref		11015650	0					
ANR	11015674	Identifier	valref		11015650	1					
ANR	11015675	ExpressionStatement	"code = dict_find_string ( labdict , ""Range"" , & tempref )"	4988:4:157570:157621	11015650	3	True				
ANR	11015676	AssignmentExpression	"code = dict_find_string ( labdict , ""Range"" , & tempref )"		11015650	0		=			
ANR	11015677	Identifier	code		11015650	0					
ANR	11015678	CallExpression	"dict_find_string ( labdict , ""Range"" , & tempref )"		11015650	1					
ANR	11015679	Callee	dict_find_string		11015650	0					
ANR	11015680	Identifier	dict_find_string		11015650	0					
ANR	11015681	ArgumentList	labdict		11015650	1					
ANR	11015682	Argument	labdict		11015650	0					
ANR	11015683	Identifier	labdict		11015650	0					
ANR	11015684	Argument	"""Range"""		11015650	1					
ANR	11015685	PrimaryExpression	"""Range"""		11015650	0					
ANR	11015686	Argument	& tempref		11015650	2					
ANR	11015687	UnaryOperationExpression	& tempref		11015650	0					
ANR	11015688	UnaryOperator	&		11015650	0					
ANR	11015689	Identifier	tempref		11015650	1					
ANR	11015690	IfStatement	"if ( code > 0 && ! r_has_type ( tempref , t_null ) )"		11015650	4					
ANR	11015691	Condition	"code > 0 && ! r_has_type ( tempref , t_null )"	4989:8:157631:157670	11015650	0	True				
ANR	11015692	AndExpression	"code > 0 && ! r_has_type ( tempref , t_null )"		11015650	0		&&			
ANR	11015693	RelationalExpression	code > 0		11015650	0		>			
ANR	11015694	Identifier	code		11015650	0					
ANR	11015695	PrimaryExpression	0		11015650	1					
ANR	11015696	UnaryOperationExpression	"! r_has_type ( tempref , t_null )"		11015650	1					
ANR	11015697	UnaryOperator	!		11015650	0					
ANR	11015698	CallExpression	"r_has_type ( tempref , t_null )"		11015650	1					
ANR	11015699	Callee	r_has_type		11015650	0					
ANR	11015700	Identifier	r_has_type		11015650	0					
ANR	11015701	ArgumentList	tempref		11015650	1					
ANR	11015702	Argument	tempref		11015650	0					
ANR	11015703	Identifier	tempref		11015650	0					
ANR	11015704	Argument	t_null		11015650	1					
ANR	11015705	Identifier	t_null		11015650	0					
ANR	11015706	CompoundStatement		7:50:176:176	11015650	1					
ANR	11015707	IfStatement	if ( ! r_is_array ( tempref ) )		11015650	0					
ANR	11015708	Condition	! r_is_array ( tempref )	4990:12:157687:157706	11015650	0	True				
ANR	11015709	UnaryOperationExpression	! r_is_array ( tempref )		11015650	0					
ANR	11015710	UnaryOperator	!		11015650	0					
ANR	11015711	CallExpression	r_is_array ( tempref )		11015650	1					
ANR	11015712	Callee	r_is_array		11015650	0					
ANR	11015713	Identifier	r_is_array		11015650	0					
ANR	11015714	ArgumentList	tempref		11015650	1					
ANR	11015715	Argument	tempref		11015650	0					
ANR	11015716	Identifier	tempref		11015650	0					
ANR	11015717	ExpressionStatement	return_error ( gs_error_typecheck )	4991:12:157721:157753	11015650	1	True				
ANR	11015718	CallExpression	return_error ( gs_error_typecheck )		11015650	0					
ANR	11015719	Callee	return_error		11015650	0					
ANR	11015720	Identifier	return_error		11015650	0					
ANR	11015721	ArgumentList	gs_error_typecheck		11015650	1					
ANR	11015722	Argument	gs_error_typecheck		11015650	0					
ANR	11015723	Identifier	gs_error_typecheck		11015650	0					
ANR	11015724	IfStatement	if ( r_size ( tempref ) != 4 )		11015650	1					
ANR	11015725	Condition	r_size ( tempref ) != 4	4992:12:157767:157786	11015650	0	True				
ANR	11015726	EqualityExpression	r_size ( tempref ) != 4		11015650	0		!=			
ANR	11015727	CallExpression	r_size ( tempref )		11015650	0					
ANR	11015728	Callee	r_size		11015650	0					
ANR	11015729	Identifier	r_size		11015650	0					
ANR	11015730	ArgumentList	tempref		11015650	1					
ANR	11015731	Argument	tempref		11015650	0					
ANR	11015732	Identifier	tempref		11015650	0					
ANR	11015733	PrimaryExpression	4		11015650	1					
ANR	11015734	ExpressionStatement	return_error ( gs_error_rangecheck )	4993:12:157801:157834	11015650	1	True				
ANR	11015735	CallExpression	return_error ( gs_error_rangecheck )		11015650	0					
ANR	11015736	Callee	return_error		11015650	0					
ANR	11015737	Identifier	return_error		11015650	0					
ANR	11015738	ArgumentList	gs_error_rangecheck		11015650	1					
ANR	11015739	Argument	gs_error_rangecheck		11015650	0					
ANR	11015740	Identifier	gs_error_rangecheck		11015650	0					
ANR	11015741	ForStatement	for ( i = 0 ; i < 4 ; i ++ )		11015650	2					
ANR	11015742	ForInit	i = 0 ;	4995:13:157850:157853	11015650	0	True				
ANR	11015743	AssignmentExpression	i = 0		11015650	0		=			
ANR	11015744	Identifier	i		11015650	0					
ANR	11015745	PrimaryExpression	0		11015650	1					
ANR	11015746	Condition	i < 4	4995:17:157854:157856	11015650	1	True				
ANR	11015747	RelationalExpression	i < 4		11015650	0		<			
ANR	11015748	Identifier	i		11015650	0					
ANR	11015749	PrimaryExpression	4		11015650	1					
ANR	11015750	PostIncDecOperationExpression	i ++	4995:21:157858:157860	11015650	2	True				
ANR	11015751	Identifier	i		11015650	0					
ANR	11015752	IncDec	++		11015650	1					
ANR	11015753	CompoundStatement		13:26:366:366	11015650	3					
ANR	11015754	ExpressionStatement	"code = array_get ( imemory , tempref , i , & valref )"	4996:12:157877:157923	11015650	0	True				
ANR	11015755	AssignmentExpression	"code = array_get ( imemory , tempref , i , & valref )"		11015650	0		=			
ANR	11015756	Identifier	code		11015650	0					
ANR	11015757	CallExpression	"array_get ( imemory , tempref , i , & valref )"		11015650	1					
ANR	11015758	Callee	array_get		11015650	0					
ANR	11015759	Identifier	array_get		11015650	0					
ANR	11015760	ArgumentList	imemory		11015650	1					
ANR	11015761	Argument	imemory		11015650	0					
ANR	11015762	Identifier	imemory		11015650	0					
ANR	11015763	Argument	tempref		11015650	1					
ANR	11015764	Identifier	tempref		11015650	0					
ANR	11015765	Argument	i		11015650	2					
ANR	11015766	Identifier	i		11015650	0					
ANR	11015767	Argument	& valref		11015650	3					
ANR	11015768	UnaryOperationExpression	& valref		11015650	0					
ANR	11015769	UnaryOperator	&		11015650	0					
ANR	11015770	Identifier	valref		11015650	1					
ANR	11015771	IfStatement	if ( code < 0 )		11015650	1					
ANR	11015772	Condition	code < 0	4997:16:157941:157948	11015650	0	True				
ANR	11015773	RelationalExpression	code < 0		11015650	0		<			
ANR	11015774	Identifier	code		11015650	0					
ANR	11015775	PrimaryExpression	0		11015650	1					
ANR	11015776	ReturnStatement	return code ;	4998:16:157967:157978	11015650	1	True				
ANR	11015777	Identifier	code		11015650	0					
ANR	11015778	IfStatement	"if ( r_has_type ( & valref , t_integer ) )"		11015650	2					
ANR	11015779	Condition	"r_has_type ( & valref , t_integer )"	4999:16:157996:158025	11015650	0	True				
ANR	11015780	CallExpression	"r_has_type ( & valref , t_integer )"		11015650	0					
ANR	11015781	Callee	r_has_type		11015650	0					
ANR	11015782	Identifier	r_has_type		11015650	0					
ANR	11015783	ArgumentList	& valref		11015650	1					
ANR	11015784	Argument	& valref		11015650	0					
ANR	11015785	UnaryOperationExpression	& valref		11015650	0					
ANR	11015786	UnaryOperator	&		11015650	0					
ANR	11015787	Identifier	valref		11015650	1					
ANR	11015788	Argument	t_integer		11015650	1					
ANR	11015789	Identifier	t_integer		11015650	0					
ANR	11015790	ExpressionStatement	value [ i ] = ( float ) valref . value . intval	5000:16:158044:158081	11015650	1	True				
ANR	11015791	AssignmentExpression	value [ i ] = ( float ) valref . value . intval		11015650	0		=			
ANR	11015792	ArrayIndexing	value [ i ]		11015650	0					
ANR	11015793	Identifier	value		11015650	0					
ANR	11015794	Identifier	i		11015650	1					
ANR	11015795	CastExpression	( float ) valref . value . intval		11015650	1					
ANR	11015796	CastTarget	float		11015650	0					
ANR	11015797	MemberAccess	valref . value . intval		11015650	1					
ANR	11015798	MemberAccess	valref . value		11015650	0					
ANR	11015799	Identifier	valref		11015650	0					
ANR	11015800	Identifier	value		11015650	1					
ANR	11015801	Identifier	intval		11015650	1					
ANR	11015802	ElseStatement	else		11015650	0					
ANR	11015803	IfStatement	"if ( r_has_type ( & valref , t_real ) )"		11015650	0					
ANR	11015804	Condition	"r_has_type ( & valref , t_real )"	5001:21:158104:158130	11015650	0	True				
ANR	11015805	CallExpression	"r_has_type ( & valref , t_real )"		11015650	0					
ANR	11015806	Callee	r_has_type		11015650	0					
ANR	11015807	Identifier	r_has_type		11015650	0					
ANR	11015808	ArgumentList	& valref		11015650	1					
ANR	11015809	Argument	& valref		11015650	0					
ANR	11015810	UnaryOperationExpression	& valref		11015650	0					
ANR	11015811	UnaryOperator	&		11015650	0					
ANR	11015812	Identifier	valref		11015650	1					
ANR	11015813	Argument	t_real		11015650	1					
ANR	11015814	Identifier	t_real		11015650	0					
ANR	11015815	ExpressionStatement	value [ i ] = ( float ) valref . value . realval	5002:16:158149:158187	11015650	1	True				
ANR	11015816	AssignmentExpression	value [ i ] = ( float ) valref . value . realval		11015650	0		=			
ANR	11015817	ArrayIndexing	value [ i ]		11015650	0					
ANR	11015818	Identifier	value		11015650	0					
ANR	11015819	Identifier	i		11015650	1					
ANR	11015820	CastExpression	( float ) valref . value . realval		11015650	1					
ANR	11015821	CastTarget	float		11015650	0					
ANR	11015822	MemberAccess	valref . value . realval		11015650	1					
ANR	11015823	MemberAccess	valref . value		11015650	0					
ANR	11015824	Identifier	valref		11015650	0					
ANR	11015825	Identifier	value		11015650	1					
ANR	11015826	Identifier	realval		11015650	1					
ANR	11015827	ElseStatement	else		11015650	0					
ANR	11015828	ExpressionStatement	return_error ( gs_error_typecheck )	5004:16:158222:158254	11015650	0	True				
ANR	11015829	CallExpression	return_error ( gs_error_typecheck )		11015650	0					
ANR	11015830	Callee	return_error		11015650	0					
ANR	11015831	Identifier	return_error		11015650	0					
ANR	11015832	ArgumentList	gs_error_typecheck		11015650	1					
ANR	11015833	Argument	gs_error_typecheck		11015650	0					
ANR	11015834	Identifier	gs_error_typecheck		11015650	0					
ANR	11015835	IfStatement	if ( value [ 1 ] < value [ 0 ] || value [ 3 ] < value [ 2 ] )		11015650	3					
ANR	11015836	Condition	value [ 1 ] < value [ 0 ] || value [ 3 ] < value [ 2 ]	5006:12:158278:158319	11015650	0	True				
ANR	11015837	OrExpression	value [ 1 ] < value [ 0 ] || value [ 3 ] < value [ 2 ]		11015650	0		||			
ANR	11015838	RelationalExpression	value [ 1 ] < value [ 0 ]		11015650	0		<			
ANR	11015839	ArrayIndexing	value [ 1 ]		11015650	0					
ANR	11015840	Identifier	value		11015650	0					
ANR	11015841	PrimaryExpression	1		11015650	1					
ANR	11015842	ArrayIndexing	value [ 0 ]		11015650	1					
ANR	11015843	Identifier	value		11015650	0					
ANR	11015844	PrimaryExpression	0		11015650	1					
ANR	11015845	RelationalExpression	value [ 3 ] < value [ 2 ]		11015650	1		<			
ANR	11015846	ArrayIndexing	value [ 3 ]		11015650	0					
ANR	11015847	Identifier	value		11015650	0					
ANR	11015848	PrimaryExpression	3		11015650	1					
ANR	11015849	ArrayIndexing	value [ 2 ]		11015650	1					
ANR	11015850	Identifier	value		11015650	0					
ANR	11015851	PrimaryExpression	2		11015650	1					
ANR	11015852	ExpressionStatement	return_error ( gs_error_rangecheck )	5007:12:158335:158368	11015650	1	True				
ANR	11015853	CallExpression	return_error ( gs_error_rangecheck )		11015650	0					
ANR	11015854	Callee	return_error		11015650	0					
ANR	11015855	Identifier	return_error		11015650	0					
ANR	11015856	ArgumentList	gs_error_rangecheck		11015650	1					
ANR	11015857	Argument	gs_error_rangecheck		11015650	0					
ANR	11015858	Identifier	gs_error_rangecheck		11015650	0					
ANR	11015859	ReturnStatement	return 0 ;	5009:4:158380:158388	11015650	5	True				
ANR	11015860	PrimaryExpression	0		11015650	0					
ANR	11015861	ReturnType	static int		11015650	1					
ANR	11015862	Identifier	checkrangeab		11015650	2					
ANR	11015863	ParameterList	"i_ctx_t * i_ctx_p , ref * labdict"		11015650	3					
ANR	11015864	Parameter	i_ctx_t * i_ctx_p	4982:24:157463:157479	11015650	0	True				
ANR	11015865	ParameterType	i_ctx_t *		11015650	0					
ANR	11015866	Identifier	i_ctx_p		11015650	1					
ANR	11015867	Parameter	ref * labdict	4982:43:157482:157493	11015650	1	True				
ANR	11015868	ParameterType	ref *		11015650	0					
ANR	11015869	Identifier	labdict		11015650	1					
ANR	11015870	CFGEntryNode	ENTRY		11015650		True				
ANR	11015871	CFGExitNode	EXIT		11015650		True				
ANR	11015872	Symbol	valref . value		11015650						
ANR	11015873	Symbol	code		11015650						
ANR	11015874	Symbol	gs_error_rangecheck		11015650						
ANR	11015875	Symbol	valref . value . realval		11015650						
ANR	11015876	Symbol	r_has_type		11015650						
ANR	11015877	Symbol	t_null		11015650						
ANR	11015878	Symbol	gs_error_typecheck		11015650						
ANR	11015879	Symbol	& valref		11015650						
ANR	11015880	Symbol	r_size		11015650						
ANR	11015881	Symbol	imemory		11015650						
ANR	11015882	Symbol	value		11015650						
ANR	11015883	Symbol	tempref		11015650						
ANR	11015884	Symbol	dict_find_string		11015650						
ANR	11015885	Symbol	array_get		11015650						
ANR	11015886	Symbol	i		11015650						
ANR	11015887	Symbol	& tempref		11015650						
ANR	11015888	Symbol	t_real		11015650						
ANR	11015889	Symbol	* i		11015650						
ANR	11015890	Symbol	t_integer		11015650						
ANR	11015891	Symbol	valref . value . intval		11015650						
ANR	11015892	Symbol	i_ctx_p		11015650						
ANR	11015893	Symbol	* value		11015650						
ANR	11015894	Symbol	valref		11015650						
ANR	11015895	Symbol	labdict		11015650						
ANR	11015896	Symbol	r_is_array		11015650						
ANR	11015897	Function	setlabspace	5012:0:158393:159982							
ANR	11015898	FunctionDef	"setlabspace (i_ctx_t * i_ctx_p , ref * r , int * stage , int * cont , int CIESubst)"		11015897	0					
ANR	11015899	CompoundStatement		5014:0:158503:159982	11015897	0					
ANR	11015900	IdentifierDeclStatement	ref labdict ;	5017:4:158611:158622	11015897	0	True				
ANR	11015901	IdentifierDecl	labdict		11015897	0					
ANR	11015902	IdentifierDeclType	ref		11015897	0					
ANR	11015903	Identifier	labdict		11015897	1					
ANR	11015904	IdentifierDeclStatement	int code = 0 ;	5018:4:158628:158640	11015897	1	True				
ANR	11015905	IdentifierDecl	code = 0		11015897	0					
ANR	11015906	IdentifierDeclType	int		11015897	0					
ANR	11015907	Identifier	code		11015897	1					
ANR	11015908	AssignmentExpression	code = 0		11015897	2		=			
ANR	11015909	Identifier	code		11015897	0					
ANR	11015910	PrimaryExpression	0		11015897	1					
ANR	11015911	IdentifierDeclStatement	"float range_buff [ 4 ] , white [ 3 ] , black [ 3 ] ;"	5019:4:158646:158703	11015897	2	True				
ANR	11015912	IdentifierDecl	range_buff [ 4 ]		11015897	0					
ANR	11015913	IdentifierDeclType	float [ 4 ]		11015897	0					
ANR	11015914	Identifier	range_buff		11015897	1					
ANR	11015915	PrimaryExpression	4		11015897	2					
ANR	11015916	IdentifierDecl	white [ 3 ]		11015897	1					
ANR	11015917	IdentifierDeclType	float [ 3 ]		11015897	0					
ANR	11015918	Identifier	white		11015897	1					
ANR	11015919	PrimaryExpression	3		11015897	2					
ANR	11015920	IdentifierDecl	black [ 3 ]		11015897	2					
ANR	11015921	IdentifierDeclType	float [ 3 ]		11015897	0					
ANR	11015922	Identifier	black		11015897	1					
ANR	11015923	PrimaryExpression	3		11015897	2					
ANR	11015924	Statement	static	5020:4:158709:158714	11015897	3	True				
ANR	11015925	IdentifierDeclStatement	"const float dflt_range [ 4 ] = { - 100 , 100 , - 100 , 100 } ;"	5020:11:158716:158773	11015897	4	True				
ANR	11015926	IdentifierDecl	"dflt_range [ 4 ] = { - 100 , 100 , - 100 , 100 }"		11015897	0					
ANR	11015927	IdentifierDeclType	const float [ 4 ]		11015897	0					
ANR	11015928	Identifier	dflt_range		11015897	1					
ANR	11015929	PrimaryExpression	4		11015897	2					
ANR	11015930	AssignmentExpression	"dflt_range [ 4 ] = { - 100 , 100 , - 100 , 100 }"		11015897	3		=			
ANR	11015931	Identifier	dflt_range		11015897	0					
ANR	11015932	InitializerList	- 100		11015897	1					
ANR	11015933	UnaryOperationExpression	- 100		11015897	0					
ANR	11015934	UnaryOperator	-		11015897	0					
ANR	11015935	PrimaryExpression	100		11015897	1					
ANR	11015936	PrimaryExpression	100		11015897	1					
ANR	11015937	UnaryOperationExpression	- 100		11015897	2					
ANR	11015938	UnaryOperator	-		11015897	0					
ANR	11015939	PrimaryExpression	100		11015897	1					
ANR	11015940	PrimaryExpression	100		11015897	3					
ANR	11015941	Statement	static	5021:4:158779:158784	11015897	5	True				
ANR	11015942	IdentifierDeclStatement	"const float dflt_black [ 3 ] = { 0 , 0 , 0 } , dflt_white [ 3 ] = { 0 , 0 , 0 } ;"	5021:11:158786:158851	11015897	6	True				
ANR	11015943	IdentifierDecl	"dflt_black [ 3 ] = { 0 , 0 , 0 }"		11015897	0					
ANR	11015944	IdentifierDeclType	const float [ 3 ]		11015897	0					
ANR	11015945	Identifier	dflt_black		11015897	1					
ANR	11015946	PrimaryExpression	3		11015897	2					
ANR	11015947	AssignmentExpression	"dflt_black [ 3 ] = { 0 , 0 , 0 }"		11015897	3		=			
ANR	11015948	Identifier	dflt_black		11015897	0					
ANR	11015949	InitializerList	0		11015897	1					
ANR	11015950	PrimaryExpression	0		11015897	0					
ANR	11015951	PrimaryExpression	0		11015897	1					
ANR	11015952	PrimaryExpression	0		11015897	2					
ANR	11015953	IdentifierDecl	"dflt_white [ 3 ] = { 0 , 0 , 0 }"		11015897	1					
ANR	11015954	IdentifierDeclType	const float [ 3 ]		11015897	0					
ANR	11015955	Identifier	dflt_white		11015897	1					
ANR	11015956	PrimaryExpression	3		11015897	2					
ANR	11015957	AssignmentExpression	"dflt_white [ 3 ] = { 0 , 0 , 0 }"		11015897	3		=			
ANR	11015958	Identifier	dflt_white		11015897	0					
ANR	11015959	InitializerList	0		11015897	1					
ANR	11015960	PrimaryExpression	0		11015897	0					
ANR	11015961	PrimaryExpression	0		11015897	1					
ANR	11015962	PrimaryExpression	0		11015897	2					
ANR	11015963	IdentifierDeclStatement	int i ;	5022:4:158857:158862	11015897	7	True				
ANR	11015964	IdentifierDecl	i		11015897	0					
ANR	11015965	IdentifierDeclType	int		11015897	0					
ANR	11015966	Identifier	i		11015897	1					
ANR	11015967	IdentifierDeclStatement	gs_client_color cc ;	5023:4:158868:158886	11015897	8	True				
ANR	11015968	IdentifierDecl	cc		11015897	0					
ANR	11015969	IdentifierDeclType	gs_client_color		11015897	0					
ANR	11015970	Identifier	cc		11015897	1					
ANR	11015971	ExpressionStatement	* cont = 0	5025:4:158893:158902	11015897	9	True				
ANR	11015972	AssignmentExpression	* cont = 0		11015897	0		=			
ANR	11015973	UnaryOperationExpression	* cont		11015897	0					
ANR	11015974	UnaryOperator	*		11015897	0					
ANR	11015975	Identifier	cont		11015897	1					
ANR	11015976	PrimaryExpression	0		11015897	1					
ANR	11015977	ExpressionStatement	"code = array_get ( imemory , r , 1 , & labdict )"	5026:4:158908:158949	11015897	10	True				
ANR	11015978	AssignmentExpression	"code = array_get ( imemory , r , 1 , & labdict )"		11015897	0		=			
ANR	11015979	Identifier	code		11015897	0					
ANR	11015980	CallExpression	"array_get ( imemory , r , 1 , & labdict )"		11015897	1					
ANR	11015981	Callee	array_get		11015897	0					
ANR	11015982	Identifier	array_get		11015897	0					
ANR	11015983	ArgumentList	imemory		11015897	1					
ANR	11015984	Argument	imemory		11015897	0					
ANR	11015985	Identifier	imemory		11015897	0					
ANR	11015986	Argument	r		11015897	1					
ANR	11015987	Identifier	r		11015897	0					
ANR	11015988	Argument	1		11015897	2					
ANR	11015989	PrimaryExpression	1		11015897	0					
ANR	11015990	Argument	& labdict		11015897	3					
ANR	11015991	UnaryOperationExpression	& labdict		11015897	0					
ANR	11015992	UnaryOperator	&		11015897	0					
ANR	11015993	Identifier	labdict		11015897	1					
ANR	11015994	IfStatement	if ( code < 0 )		11015897	11					
ANR	11015995	Condition	code < 0	5027:8:158959:158966	11015897	0	True				
ANR	11015996	RelationalExpression	code < 0		11015897	0		<			
ANR	11015997	Identifier	code		11015897	0					
ANR	11015998	PrimaryExpression	0		11015897	1					
ANR	11015999	ReturnStatement	return code ;	5028:8:158977:158988	11015897	1	True				
ANR	11016000	Identifier	code		11015897	0					
ANR	11016001	ExpressionStatement	"code = dict_floats_param ( imemory , & labdict , ""Range"" , 4 , range_buff , dflt_range )"	5030:4:159018:159129	11015897	12	True				
ANR	11016002	AssignmentExpression	"code = dict_floats_param ( imemory , & labdict , ""Range"" , 4 , range_buff , dflt_range )"		11015897	0		=			
ANR	11016003	Identifier	code		11015897	0					
ANR	11016004	CallExpression	"dict_floats_param ( imemory , & labdict , ""Range"" , 4 , range_buff , dflt_range )"		11015897	1					
ANR	11016005	Callee	dict_floats_param		11015897	0					
ANR	11016006	Identifier	dict_floats_param		11015897	0					
ANR	11016007	ArgumentList	imemory		11015897	1					
ANR	11016008	Argument	imemory		11015897	0					
ANR	11016009	Identifier	imemory		11015897	0					
ANR	11016010	Argument	& labdict		11015897	1					
ANR	11016011	UnaryOperationExpression	& labdict		11015897	0					
ANR	11016012	UnaryOperator	&		11015897	0					
ANR	11016013	Identifier	labdict		11015897	1					
ANR	11016014	Argument	"""Range"""		11015897	2					
ANR	11016015	PrimaryExpression	"""Range"""		11015897	0					
ANR	11016016	Argument	4		11015897	3					
ANR	11016017	PrimaryExpression	4		11015897	0					
ANR	11016018	Argument	range_buff		11015897	4					
ANR	11016019	Identifier	range_buff		11015897	0					
ANR	11016020	Argument	dflt_range		11015897	5					
ANR	11016021	Identifier	dflt_range		11015897	0					
ANR	11016022	IfStatement	if ( code < 0 )		11015897	13					
ANR	11016023	Condition	code < 0	5032:8:159139:159146	11015897	0	True				
ANR	11016024	RelationalExpression	code < 0		11015897	0		<			
ANR	11016025	Identifier	code		11015897	0					
ANR	11016026	PrimaryExpression	0		11015897	1					
ANR	11016027	ReturnStatement	return code ;	5033:8:159157:159168	11015897	1	True				
ANR	11016028	Identifier	code		11015897	0					
ANR	11016029	ForStatement	for ( i = 0 ; i < 4 && range_buff [ i + 1 ] >= range_buff [ i ] ; i += 2 )		11015897	14					
ANR	11016030	ForInit	i = 0 ;	5034:9:159179:159184	11015897	0	True				
ANR	11016031	AssignmentExpression	i = 0		11015897	0		=			
ANR	11016032	Identifier	i		11015897	0					
ANR	11016033	PrimaryExpression	0		11015897	1					
ANR	11016034	Condition	i < 4 && range_buff [ i + 1 ] >= range_buff [ i ]	5034:16:159186:159228	11015897	1	True				
ANR	11016035	AndExpression	i < 4 && range_buff [ i + 1 ] >= range_buff [ i ]		11015897	0		&&			
ANR	11016036	RelationalExpression	i < 4		11015897	0		<			
ANR	11016037	Identifier	i		11015897	0					
ANR	11016038	PrimaryExpression	4		11015897	1					
ANR	11016039	RelationalExpression	range_buff [ i + 1 ] >= range_buff [ i ]		11015897	1		>=			
ANR	11016040	ArrayIndexing	range_buff [ i + 1 ]		11015897	0					
ANR	11016041	Identifier	range_buff		11015897	0					
ANR	11016042	AdditiveExpression	i + 1		11015897	1		+			
ANR	11016043	Identifier	i		11015897	0					
ANR	11016044	PrimaryExpression	1		11015897	1					
ANR	11016045	ArrayIndexing	range_buff [ i ]		11015897	1					
ANR	11016046	Identifier	range_buff		11015897	0					
ANR	11016047	Identifier	i		11015897	1					
ANR	11016048	AssignmentExpression	i += 2	5034:61:159231:159236	11015897	2	True	+=			
ANR	11016049	Identifier	i		11015897	0					
ANR	11016050	PrimaryExpression	2		11015897	1					
ANR	11016051	ExpressionStatement		5034:68:159238:159238	11015897	3	True				
ANR	11016052	IfStatement	if ( i != 4 )		11015897	15					
ANR	11016053	Condition	i != 4	5035:8:159248:159253	11015897	0	True				
ANR	11016054	EqualityExpression	i != 4		11015897	0		!=			
ANR	11016055	Identifier	i		11015897	0					
ANR	11016056	PrimaryExpression	4		11015897	1					
ANR	11016057	ExpressionStatement	return_error ( gs_error_rangecheck )	5036:8:159264:159297	11015897	1	True				
ANR	11016058	CallExpression	return_error ( gs_error_rangecheck )		11015897	0					
ANR	11016059	Callee	return_error		11015897	0					
ANR	11016060	Identifier	return_error		11015897	0					
ANR	11016061	ArgumentList	gs_error_rangecheck		11015897	1					
ANR	11016062	Argument	gs_error_rangecheck		11015897	0					
ANR	11016063	Identifier	gs_error_rangecheck		11015897	0					
ANR	11016064	ExpressionStatement	"code = dict_floats_param ( imemory , & labdict , ""BlackPoint"" , 3 , black , dflt_black )"	5037:4:159303:159414	11015897	16	True				
ANR	11016065	AssignmentExpression	"code = dict_floats_param ( imemory , & labdict , ""BlackPoint"" , 3 , black , dflt_black )"		11015897	0		=			
ANR	11016066	Identifier	code		11015897	0					
ANR	11016067	CallExpression	"dict_floats_param ( imemory , & labdict , ""BlackPoint"" , 3 , black , dflt_black )"		11015897	1					
ANR	11016068	Callee	dict_floats_param		11015897	0					
ANR	11016069	Identifier	dict_floats_param		11015897	0					
ANR	11016070	ArgumentList	imemory		11015897	1					
ANR	11016071	Argument	imemory		11015897	0					
ANR	11016072	Identifier	imemory		11015897	0					
ANR	11016073	Argument	& labdict		11015897	1					
ANR	11016074	UnaryOperationExpression	& labdict		11015897	0					
ANR	11016075	UnaryOperator	&		11015897	0					
ANR	11016076	Identifier	labdict		11015897	1					
ANR	11016077	Argument	"""BlackPoint"""		11015897	2					
ANR	11016078	PrimaryExpression	"""BlackPoint"""		11015897	0					
ANR	11016079	Argument	3		11015897	3					
ANR	11016080	PrimaryExpression	3		11015897	0					
ANR	11016081	Argument	black		11015897	4					
ANR	11016082	Identifier	black		11015897	0					
ANR	11016083	Argument	dflt_black		11015897	5					
ANR	11016084	Identifier	dflt_black		11015897	0					
ANR	11016085	IfStatement	if ( code < 0 )		11015897	17					
ANR	11016086	Condition	code < 0	5039:8:159424:159431	11015897	0	True				
ANR	11016087	RelationalExpression	code < 0		11015897	0		<			
ANR	11016088	Identifier	code		11015897	0					
ANR	11016089	PrimaryExpression	0		11015897	1					
ANR	11016090	ReturnStatement	return code ;	5040:8:159442:159453	11015897	1	True				
ANR	11016091	Identifier	code		11015897	0					
ANR	11016092	ExpressionStatement	"code = dict_floats_param ( imemory , & labdict , ""WhitePoint"" , 3 , white , dflt_white )"	5041:4:159459:159570	11015897	18	True				
ANR	11016093	AssignmentExpression	"code = dict_floats_param ( imemory , & labdict , ""WhitePoint"" , 3 , white , dflt_white )"		11015897	0		=			
ANR	11016094	Identifier	code		11015897	0					
ANR	11016095	CallExpression	"dict_floats_param ( imemory , & labdict , ""WhitePoint"" , 3 , white , dflt_white )"		11015897	1					
ANR	11016096	Callee	dict_floats_param		11015897	0					
ANR	11016097	Identifier	dict_floats_param		11015897	0					
ANR	11016098	ArgumentList	imemory		11015897	1					
ANR	11016099	Argument	imemory		11015897	0					
ANR	11016100	Identifier	imemory		11015897	0					
ANR	11016101	Argument	& labdict		11015897	1					
ANR	11016102	UnaryOperationExpression	& labdict		11015897	0					
ANR	11016103	UnaryOperator	&		11015897	0					
ANR	11016104	Identifier	labdict		11015897	1					
ANR	11016105	Argument	"""WhitePoint"""		11015897	2					
ANR	11016106	PrimaryExpression	"""WhitePoint"""		11015897	0					
ANR	11016107	Argument	3		11015897	3					
ANR	11016108	PrimaryExpression	3		11015897	0					
ANR	11016109	Argument	white		11015897	4					
ANR	11016110	Identifier	white		11015897	0					
ANR	11016111	Argument	dflt_white		11015897	5					
ANR	11016112	Identifier	dflt_white		11015897	0					
ANR	11016113	IfStatement	if ( code < 0 )		11015897	19					
ANR	11016114	Condition	code < 0	5043:8:159580:159587	11015897	0	True				
ANR	11016115	RelationalExpression	code < 0		11015897	0		<			
ANR	11016116	Identifier	code		11015897	0					
ANR	11016117	PrimaryExpression	0		11015897	1					
ANR	11016118	ReturnStatement	return code ;	5044:8:159598:159609	11015897	1	True				
ANR	11016119	Identifier	code		11015897	0					
ANR	11016120	IfStatement	if ( white [ 0 ] <= 0 || white [ 1 ] != 1.0 || white [ 2 ] <= 0 )		11015897	20					
ANR	11016121	Condition	white [ 0 ] <= 0 || white [ 1 ] != 1.0 || white [ 2 ] <= 0	5045:8:159619:159667	11015897	0	True				
ANR	11016122	OrExpression	white [ 0 ] <= 0 || white [ 1 ] != 1.0 || white [ 2 ] <= 0		11015897	0		||			
ANR	11016123	RelationalExpression	white [ 0 ] <= 0		11015897	0		<=			
ANR	11016124	ArrayIndexing	white [ 0 ]		11015897	0					
ANR	11016125	Identifier	white		11015897	0					
ANR	11016126	PrimaryExpression	0		11015897	1					
ANR	11016127	PrimaryExpression	0		11015897	1					
ANR	11016128	OrExpression	white [ 1 ] != 1.0 || white [ 2 ] <= 0		11015897	1		||			
ANR	11016129	EqualityExpression	white [ 1 ] != 1.0		11015897	0		!=			
ANR	11016130	ArrayIndexing	white [ 1 ]		11015897	0					
ANR	11016131	Identifier	white		11015897	0					
ANR	11016132	PrimaryExpression	1		11015897	1					
ANR	11016133	PrimaryExpression	1.0		11015897	1					
ANR	11016134	RelationalExpression	white [ 2 ] <= 0		11015897	1		<=			
ANR	11016135	ArrayIndexing	white [ 2 ]		11015897	0					
ANR	11016136	Identifier	white		11015897	0					
ANR	11016137	PrimaryExpression	2		11015897	1					
ANR	11016138	PrimaryExpression	0		11015897	1					
ANR	11016139	ExpressionStatement	return_error ( gs_error_rangecheck )	5046:8:159678:159711	11015897	1	True				
ANR	11016140	CallExpression	return_error ( gs_error_rangecheck )		11015897	0					
ANR	11016141	Callee	return_error		11015897	0					
ANR	11016142	Identifier	return_error		11015897	0					
ANR	11016143	ArgumentList	gs_error_rangecheck		11015897	1					
ANR	11016144	Argument	gs_error_rangecheck		11015897	0					
ANR	11016145	Identifier	gs_error_rangecheck		11015897	0					
ANR	11016146	ExpressionStatement	"code = seticc_lab ( i_ctx_p , white , black , range_buff )"	5047:4:159717:159769	11015897	21	True				
ANR	11016147	AssignmentExpression	"code = seticc_lab ( i_ctx_p , white , black , range_buff )"		11015897	0		=			
ANR	11016148	Identifier	code		11015897	0					
ANR	11016149	CallExpression	"seticc_lab ( i_ctx_p , white , black , range_buff )"		11015897	1					
ANR	11016150	Callee	seticc_lab		11015897	0					
ANR	11016151	Identifier	seticc_lab		11015897	0					
ANR	11016152	ArgumentList	i_ctx_p		11015897	1					
ANR	11016153	Argument	i_ctx_p		11015897	0					
ANR	11016154	Identifier	i_ctx_p		11015897	0					
ANR	11016155	Argument	white		11015897	1					
ANR	11016156	Identifier	white		11015897	0					
ANR	11016157	Argument	black		11015897	2					
ANR	11016158	Identifier	black		11015897	0					
ANR	11016159	Argument	range_buff		11015897	3					
ANR	11016160	Identifier	range_buff		11015897	0					
ANR	11016161	IfStatement	if ( code < 0 )		11015897	22					
ANR	11016162	Condition	code < 0	5048:9:159780:159787	11015897	0	True				
ANR	11016163	RelationalExpression	code < 0		11015897	0		<			
ANR	11016164	Identifier	code		11015897	0					
ANR	11016165	PrimaryExpression	0		11015897	1					
ANR	11016166	ReturnStatement	"return gs_rethrow ( code , ""setting PDF lab color space"" ) ;"	5049:8:159798:159852	11015897	1	True				
ANR	11016167	CallExpression	"gs_rethrow ( code , ""setting PDF lab color space"" )"		11015897	0					
ANR	11016168	Callee	gs_rethrow		11015897	0					
ANR	11016169	Identifier	gs_rethrow		11015897	0					
ANR	11016170	ArgumentList	code		11015897	1					
ANR	11016171	Argument	code		11015897	0					
ANR	11016172	Identifier	code		11015897	0					
ANR	11016173	Argument	"""setting PDF lab color space"""		11015897	1					
ANR	11016174	PrimaryExpression	"""setting PDF lab color space"""		11015897	0					
ANR	11016175	ExpressionStatement	cc . pattern = 0x00	5050:4:159858:159875	11015897	23	True				
ANR	11016176	AssignmentExpression	cc . pattern = 0x00		11015897	0		=			
ANR	11016177	MemberAccess	cc . pattern		11015897	0					
ANR	11016178	Identifier	cc		11015897	0					
ANR	11016179	Identifier	pattern		11015897	1					
ANR	11016180	PrimaryExpression	0x00		11015897	1					
ANR	11016181	ForStatement	for ( i = 0 ; i < 3 ; i ++ )		11015897	24					
ANR	11016182	ForInit	i = 0 ;	5051:9:159886:159889	11015897	0	True				
ANR	11016183	AssignmentExpression	i = 0		11015897	0		=			
ANR	11016184	Identifier	i		11015897	0					
ANR	11016185	PrimaryExpression	0		11015897	1					
ANR	11016186	Condition	i < 3	5051:13:159890:159892	11015897	1	True				
ANR	11016187	RelationalExpression	i < 3		11015897	0		<			
ANR	11016188	Identifier	i		11015897	0					
ANR	11016189	PrimaryExpression	3		11015897	1					
ANR	11016190	PostIncDecOperationExpression	i ++	5051:17:159894:159896	11015897	2	True				
ANR	11016191	Identifier	i		11015897	0					
ANR	11016192	IncDec	++		11015897	1					
ANR	11016193	ExpressionStatement	cc . paint . values [ i ] = 0	5052:8:159907:159929	11015897	3	True				
ANR	11016194	AssignmentExpression	cc . paint . values [ i ] = 0		11015897	0		=			
ANR	11016195	ArrayIndexing	cc . paint . values [ i ]		11015897	0					
ANR	11016196	MemberAccess	cc . paint . values		11015897	0					
ANR	11016197	MemberAccess	cc . paint		11015897	0					
ANR	11016198	Identifier	cc		11015897	0					
ANR	11016199	Identifier	paint		11015897	1					
ANR	11016200	Identifier	values		11015897	1					
ANR	11016201	Identifier	i		11015897	1					
ANR	11016202	PrimaryExpression	0		11015897	1					
ANR	11016203	ExpressionStatement	"code = gs_setcolor ( igs , & cc )"	5053:4:159935:159963	11015897	25	True				
ANR	11016204	AssignmentExpression	"code = gs_setcolor ( igs , & cc )"		11015897	0		=			
ANR	11016205	Identifier	code		11015897	0					
ANR	11016206	CallExpression	"gs_setcolor ( igs , & cc )"		11015897	1					
ANR	11016207	Callee	gs_setcolor		11015897	0					
ANR	11016208	Identifier	gs_setcolor		11015897	0					
ANR	11016209	ArgumentList	igs		11015897	1					
ANR	11016210	Argument	igs		11015897	0					
ANR	11016211	Identifier	igs		11015897	0					
ANR	11016212	Argument	& cc		11015897	1					
ANR	11016213	UnaryOperationExpression	& cc		11015897	0					
ANR	11016214	UnaryOperator	&		11015897	0					
ANR	11016215	Identifier	cc		11015897	1					
ANR	11016216	ReturnStatement	return code ;	5054:4:159969:159980	11015897	26	True				
ANR	11016217	Identifier	code		11015897	0					
ANR	11016218	ReturnType	static int		11015897	1					
ANR	11016219	Identifier	setlabspace		11015897	2					
ANR	11016220	ParameterList	"i_ctx_t * i_ctx_p , ref * r , int * stage , int * cont , int CIESubst"		11015897	3					
ANR	11016221	Parameter	i_ctx_t * i_ctx_p	5012:23:158416:158432	11015897	0	True				
ANR	11016222	ParameterType	i_ctx_t *		11015897	0					
ANR	11016223	Identifier	i_ctx_p		11015897	1					
ANR	11016224	Parameter	ref * r	5012:42:158435:158440	11015897	1	True				
ANR	11016225	ParameterType	ref *		11015897	0					
ANR	11016226	Identifier	r		11015897	1					
ANR	11016227	Parameter	int * stage	5012:50:158443:158452	11015897	2	True				
ANR	11016228	ParameterType	int *		11015897	0					
ANR	11016229	Identifier	stage		11015897	1					
ANR	11016230	Parameter	int * cont	5012:62:158455:158463	11015897	3	True				
ANR	11016231	ParameterType	int *		11015897	0					
ANR	11016232	Identifier	cont		11015897	1					
ANR	11016233	Parameter	int CIESubst	5013:23:158489:158500	11015897	4	True				
ANR	11016234	ParameterType	int		11015897	0					
ANR	11016235	Identifier	CIESubst		11015897	1					
ANR	11016236	CFGEntryNode	ENTRY		11015897		True				
ANR	11016237	CFGExitNode	EXIT		11015897		True				
ANR	11016238	Symbol	& labdict		11015897						
ANR	11016239	Symbol	cc . pattern		11015897						
ANR	11016240	Symbol	code		11015897						
ANR	11016241	Symbol	gs_error_rangecheck		11015897						
ANR	11016242	Symbol	* cc		11015897						
ANR	11016243	Symbol	* range_buff		11015897						
ANR	11016244	Symbol	gs_setcolor		11015897						
ANR	11016245	Symbol	& cc		11015897						
ANR	11016246	Symbol	gs_rethrow		11015897						
ANR	11016247	Symbol	white		11015897						
ANR	11016248	Symbol	dflt_white		11015897						
ANR	11016249	Symbol	dict_floats_param		11015897						
ANR	11016250	Symbol	igs		11015897						
ANR	11016251	Symbol	* cc . paint . values		11015897						
ANR	11016252	Symbol	imemory		11015897						
ANR	11016253	Symbol	cont		11015897						
ANR	11016254	Symbol	range_buff		11015897						
ANR	11016255	Symbol	CIESubst		11015897						
ANR	11016256	Symbol	dflt_range		11015897						
ANR	11016257	Symbol	cc		11015897						
ANR	11016258	Symbol	array_get		11015897						
ANR	11016259	Symbol	black		11015897						
ANR	11016260	Symbol	i		11015897						
ANR	11016261	Symbol	* white		11015897						
ANR	11016262	Symbol	dflt_black		11015897						
ANR	11016263	Symbol	r		11015897						
ANR	11016264	Symbol	* cc . paint		11015897						
ANR	11016265	Symbol	* i		11015897						
ANR	11016266	Symbol	stage		11015897						
ANR	11016267	Symbol	* cont		11015897						
ANR	11016268	Symbol	i_ctx_p		11015897						
ANR	11016269	Symbol	seticc_lab		11015897						
ANR	11016270	Symbol	labdict		11015897						
ANR	11016271	Symbol	cc . paint		11015897						
ANR	11016272	Symbol	cc . paint . values		11015897						
ANR	11016273	Function	validatelabspace	5057:0:159985:160876							
ANR	11016274	FunctionDef	"validatelabspace (i_ctx_t * i_ctx_p , ref * * r)"		11016273	0					
ANR	11016275	CompoundStatement		5058:0:160041:160876	11016273	0					
ANR	11016276	IdentifierDeclStatement	int code = 0 ;	5059:4:160047:160057	11016273	0	True				
ANR	11016277	IdentifierDecl	code = 0		11016273	0					
ANR	11016278	IdentifierDeclType	int		11016273	0					
ANR	11016279	Identifier	code		11016273	1					
ANR	11016280	AssignmentExpression	code = 0		11016273	2		=			
ANR	11016281	Identifier	code		11016273	0					
ANR	11016282	PrimaryExpression	0		11016273	1					
ANR	11016283	IdentifierDeclStatement	"ref * space , labdict ;"	5060:4:160063:160082	11016273	1	True				
ANR	11016284	IdentifierDecl	* space		11016273	0					
ANR	11016285	IdentifierDeclType	ref *		11016273	0					
ANR	11016286	Identifier	space		11016273	1					
ANR	11016287	IdentifierDecl	labdict		11016273	1					
ANR	11016288	IdentifierDeclType	ref		11016273	0					
ANR	11016289	Identifier	labdict		11016273	1					
ANR	11016290	ExpressionStatement	space = * r	5062:4:160089:160099	11016273	2	True				
ANR	11016291	AssignmentExpression	space = * r		11016273	0		=			
ANR	11016292	Identifier	space		11016273	0					
ANR	11016293	UnaryOperationExpression	* r		11016273	1					
ANR	11016294	UnaryOperator	*		11016273	0					
ANR	11016295	Identifier	r		11016273	1					
ANR	11016296	IfStatement	if ( ! r_is_array ( space ) )		11016273	3					
ANR	11016297	Condition	! r_is_array ( space )	5063:8:160109:160126	11016273	0	True				
ANR	11016298	UnaryOperationExpression	! r_is_array ( space )		11016273	0					
ANR	11016299	UnaryOperator	!		11016273	0					
ANR	11016300	CallExpression	r_is_array ( space )		11016273	1					
ANR	11016301	Callee	r_is_array		11016273	0					
ANR	11016302	Identifier	r_is_array		11016273	0					
ANR	11016303	ArgumentList	space		11016273	1					
ANR	11016304	Argument	space		11016273	0					
ANR	11016305	Identifier	space		11016273	0					
ANR	11016306	ExpressionStatement	return_error ( gs_error_typecheck )	5064:8:160137:160169	11016273	1	True				
ANR	11016307	CallExpression	return_error ( gs_error_typecheck )		11016273	0					
ANR	11016308	Callee	return_error		11016273	0					
ANR	11016309	Identifier	return_error		11016273	0					
ANR	11016310	ArgumentList	gs_error_typecheck		11016273	1					
ANR	11016311	Argument	gs_error_typecheck		11016273	0					
ANR	11016312	Identifier	gs_error_typecheck		11016273	0					
ANR	11016313	IfStatement	if ( r_size ( space ) < 2 )		11016273	4					
ANR	11016314	Condition	r_size ( space ) < 2	5066:8:160240:160256	11016273	0	True				
ANR	11016315	RelationalExpression	r_size ( space ) < 2		11016273	0		<			
ANR	11016316	CallExpression	r_size ( space )		11016273	0					
ANR	11016317	Callee	r_size		11016273	0					
ANR	11016318	Identifier	r_size		11016273	0					
ANR	11016319	ArgumentList	space		11016273	1					
ANR	11016320	Argument	space		11016273	0					
ANR	11016321	Identifier	space		11016273	0					
ANR	11016322	PrimaryExpression	2		11016273	1					
ANR	11016323	ExpressionStatement	return_error ( gs_error_rangecheck )	5067:8:160267:160300	11016273	1	True				
ANR	11016324	CallExpression	return_error ( gs_error_rangecheck )		11016273	0					
ANR	11016325	Callee	return_error		11016273	0					
ANR	11016326	Identifier	return_error		11016273	0					
ANR	11016327	ArgumentList	gs_error_rangecheck		11016273	1					
ANR	11016328	Argument	gs_error_rangecheck		11016273	0					
ANR	11016329	Identifier	gs_error_rangecheck		11016273	0					
ANR	11016330	ExpressionStatement	"code = array_get ( imemory , space , 1 , & labdict )"	5068:4:160306:160351	11016273	5	True				
ANR	11016331	AssignmentExpression	"code = array_get ( imemory , space , 1 , & labdict )"		11016273	0		=			
ANR	11016332	Identifier	code		11016273	0					
ANR	11016333	CallExpression	"array_get ( imemory , space , 1 , & labdict )"		11016273	1					
ANR	11016334	Callee	array_get		11016273	0					
ANR	11016335	Identifier	array_get		11016273	0					
ANR	11016336	ArgumentList	imemory		11016273	1					
ANR	11016337	Argument	imemory		11016273	0					
ANR	11016338	Identifier	imemory		11016273	0					
ANR	11016339	Argument	space		11016273	1					
ANR	11016340	Identifier	space		11016273	0					
ANR	11016341	Argument	1		11016273	2					
ANR	11016342	PrimaryExpression	1		11016273	0					
ANR	11016343	Argument	& labdict		11016273	3					
ANR	11016344	UnaryOperationExpression	& labdict		11016273	0					
ANR	11016345	UnaryOperator	&		11016273	0					
ANR	11016346	Identifier	labdict		11016273	1					
ANR	11016347	IfStatement	if ( code < 0 )		11016273	6					
ANR	11016348	Condition	code < 0	5069:8:160361:160368	11016273	0	True				
ANR	11016349	RelationalExpression	code < 0		11016273	0		<			
ANR	11016350	Identifier	code		11016273	0					
ANR	11016351	PrimaryExpression	0		11016273	1					
ANR	11016352	ReturnStatement	return code ;	5070:8:160379:160390	11016273	1	True				
ANR	11016353	Identifier	code		11016273	0					
ANR	11016354	ExpressionStatement	"check_type ( labdict , t_dictionary )"	5071:4:160396:160429	11016273	7	True				
ANR	11016355	CallExpression	"check_type ( labdict , t_dictionary )"		11016273	0					
ANR	11016356	Callee	check_type		11016273	0					
ANR	11016357	Identifier	check_type		11016273	0					
ANR	11016358	ArgumentList	labdict		11016273	1					
ANR	11016359	Argument	labdict		11016273	0					
ANR	11016360	Identifier	labdict		11016273	0					
ANR	11016361	Argument	t_dictionary		11016273	1					
ANR	11016362	Identifier	t_dictionary		11016273	0					
ANR	11016363	ExpressionStatement	"code = checkWhitePoint ( i_ctx_p , & labdict )"	5073:4:160487:160528	11016273	8	True				
ANR	11016364	AssignmentExpression	"code = checkWhitePoint ( i_ctx_p , & labdict )"		11016273	0		=			
ANR	11016365	Identifier	code		11016273	0					
ANR	11016366	CallExpression	"checkWhitePoint ( i_ctx_p , & labdict )"		11016273	1					
ANR	11016367	Callee	checkWhitePoint		11016273	0					
ANR	11016368	Identifier	checkWhitePoint		11016273	0					
ANR	11016369	ArgumentList	i_ctx_p		11016273	1					
ANR	11016370	Argument	i_ctx_p		11016273	0					
ANR	11016371	Identifier	i_ctx_p		11016273	0					
ANR	11016372	Argument	& labdict		11016273	1					
ANR	11016373	UnaryOperationExpression	& labdict		11016273	0					
ANR	11016374	UnaryOperator	&		11016273	0					
ANR	11016375	Identifier	labdict		11016273	1					
ANR	11016376	IfStatement	if ( code != 0 )		11016273	9					
ANR	11016377	Condition	code != 0	5074:8:160538:160546	11016273	0	True				
ANR	11016378	EqualityExpression	code != 0		11016273	0		!=			
ANR	11016379	Identifier	code		11016273	0					
ANR	11016380	PrimaryExpression	0		11016273	1					
ANR	11016381	ReturnStatement	return code ;	5075:8:160557:160568	11016273	1	True				
ANR	11016382	Identifier	code		11016273	0					
ANR	11016383	ExpressionStatement	"code = checkBlackPoint ( i_ctx_p , & labdict )"	5077:4:160632:160673	11016273	10	True				
ANR	11016384	AssignmentExpression	"code = checkBlackPoint ( i_ctx_p , & labdict )"		11016273	0		=			
ANR	11016385	Identifier	code		11016273	0					
ANR	11016386	CallExpression	"checkBlackPoint ( i_ctx_p , & labdict )"		11016273	1					
ANR	11016387	Callee	checkBlackPoint		11016273	0					
ANR	11016388	Identifier	checkBlackPoint		11016273	0					
ANR	11016389	ArgumentList	i_ctx_p		11016273	1					
ANR	11016390	Argument	i_ctx_p		11016273	0					
ANR	11016391	Identifier	i_ctx_p		11016273	0					
ANR	11016392	Argument	& labdict		11016273	1					
ANR	11016393	UnaryOperationExpression	& labdict		11016273	0					
ANR	11016394	UnaryOperator	&		11016273	0					
ANR	11016395	Identifier	labdict		11016273	1					
ANR	11016396	IfStatement	if ( code < 0 )		11016273	11					
ANR	11016397	Condition	code < 0	5078:8:160683:160690	11016273	0	True				
ANR	11016398	RelationalExpression	code < 0		11016273	0		<			
ANR	11016399	Identifier	code		11016273	0					
ANR	11016400	PrimaryExpression	0		11016273	1					
ANR	11016401	ReturnStatement	return code ;	5079:8:160701:160712	11016273	1	True				
ANR	11016402	Identifier	code		11016273	0					
ANR	11016403	ExpressionStatement	"code = checkrangeab ( i_ctx_p , & labdict )"	5081:4:160748:160786	11016273	12	True				
ANR	11016404	AssignmentExpression	"code = checkrangeab ( i_ctx_p , & labdict )"		11016273	0		=			
ANR	11016405	Identifier	code		11016273	0					
ANR	11016406	CallExpression	"checkrangeab ( i_ctx_p , & labdict )"		11016273	1					
ANR	11016407	Callee	checkrangeab		11016273	0					
ANR	11016408	Identifier	checkrangeab		11016273	0					
ANR	11016409	ArgumentList	i_ctx_p		11016273	1					
ANR	11016410	Argument	i_ctx_p		11016273	0					
ANR	11016411	Identifier	i_ctx_p		11016273	0					
ANR	11016412	Argument	& labdict		11016273	1					
ANR	11016413	UnaryOperationExpression	& labdict		11016273	0					
ANR	11016414	UnaryOperator	&		11016273	0					
ANR	11016415	Identifier	labdict		11016273	1					
ANR	11016416	IfStatement	if ( code < 0 )		11016273	13					
ANR	11016417	Condition	code < 0	5082:8:160796:160803	11016273	0	True				
ANR	11016418	RelationalExpression	code < 0		11016273	0		<			
ANR	11016419	Identifier	code		11016273	0					
ANR	11016420	PrimaryExpression	0		11016273	1					
ANR	11016421	ReturnStatement	return code ;	5083:8:160814:160825	11016273	1	True				
ANR	11016422	Identifier	code		11016273	0					
ANR	11016423	ExpressionStatement	* r = 0	5084:4:160831:160837	11016273	14	True				
ANR	11016424	AssignmentExpression	* r = 0		11016273	0		=			
ANR	11016425	UnaryOperationExpression	* r		11016273	0					
ANR	11016426	UnaryOperator	*		11016273	0					
ANR	11016427	Identifier	r		11016273	1					
ANR	11016428	PrimaryExpression	0		11016273	1					
ANR	11016429	ReturnStatement	return 0 ;	5085:4:160866:160874	11016273	15	True				
ANR	11016430	PrimaryExpression	0		11016273	0					
ANR	11016431	ReturnType	static int		11016273	1					
ANR	11016432	Identifier	validatelabspace		11016273	2					
ANR	11016433	ParameterList	"i_ctx_t * i_ctx_p , ref * * r"		11016273	3					
ANR	11016434	Parameter	i_ctx_t * i_ctx_p	5057:28:160013:160029	11016273	0	True				
ANR	11016435	ParameterType	i_ctx_t *		11016273	0					
ANR	11016436	Identifier	i_ctx_p		11016273	1					
ANR	11016437	Parameter	ref * * r	5057:47:160032:160038	11016273	1	True				
ANR	11016438	ParameterType	ref * *		11016273	0					
ANR	11016439	Identifier	r		11016273	1					
ANR	11016440	CFGEntryNode	ENTRY		11016273		True				
ANR	11016441	CFGExitNode	EXIT		11016273		True				
ANR	11016442	Symbol	& labdict		11016273						
ANR	11016443	Symbol	checkrangeab		11016273						
ANR	11016444	Symbol	code		11016273						
ANR	11016445	Symbol	t_dictionary		11016273						
ANR	11016446	Symbol	gs_error_rangecheck		11016273						
ANR	11016447	Symbol	array_get		11016273						
ANR	11016448	Symbol	space		11016273						
ANR	11016449	Symbol	r		11016273						
ANR	11016450	Symbol	gs_error_typecheck		11016273						
ANR	11016451	Symbol	checkBlackPoint		11016273						
ANR	11016452	Symbol	i_ctx_p		11016273						
ANR	11016453	Symbol	r_size		11016273						
ANR	11016454	Symbol	labdict		11016273						
ANR	11016455	Symbol	r_is_array		11016273						
ANR	11016456	Symbol	imemory		11016273						
ANR	11016457	Symbol	checkWhitePoint		11016273						
ANR	11016458	Symbol	* r		11016273						
ANR	11016459	Function	labrange	5088:0:160879:161863							
ANR	11016460	FunctionDef	"labrange (i_ctx_t * i_ctx_p , ref * space , float * ptr)"		11016459	0					
ANR	11016461	CompoundStatement		5089:0:160942:161863	11016459	0					
ANR	11016462	IdentifierDeclStatement	"int i , code ;"	5090:4:160948:160959	11016459	0	True				
ANR	11016463	IdentifierDecl	i		11016459	0					
ANR	11016464	IdentifierDeclType	int		11016459	0					
ANR	11016465	Identifier	i		11016459	1					
ANR	11016466	IdentifierDecl	code		11016459	1					
ANR	11016467	IdentifierDeclType	int		11016459	0					
ANR	11016468	Identifier	code		11016459	1					
ANR	11016469	IdentifierDeclStatement	"ref CIEdict , * tempref , valref ;"	5091:4:160965:160998	11016459	1	True				
ANR	11016470	IdentifierDecl	CIEdict		11016459	0					
ANR	11016471	IdentifierDeclType	ref		11016459	0					
ANR	11016472	Identifier	CIEdict		11016459	1					
ANR	11016473	IdentifierDecl	* tempref		11016459	1					
ANR	11016474	IdentifierDeclType	ref *		11016459	0					
ANR	11016475	Identifier	tempref		11016459	1					
ANR	11016476	IdentifierDecl	valref		11016459	2					
ANR	11016477	IdentifierDeclType	ref		11016459	0					
ANR	11016478	Identifier	valref		11016459	1					
ANR	11016479	ExpressionStatement	"code = array_get ( imemory , space , 1 , & CIEdict )"	5093:4:161005:161050	11016459	2	True				
ANR	11016480	AssignmentExpression	"code = array_get ( imemory , space , 1 , & CIEdict )"		11016459	0		=			
ANR	11016481	Identifier	code		11016459	0					
ANR	11016482	CallExpression	"array_get ( imemory , space , 1 , & CIEdict )"		11016459	1					
ANR	11016483	Callee	array_get		11016459	0					
ANR	11016484	Identifier	array_get		11016459	0					
ANR	11016485	ArgumentList	imemory		11016459	1					
ANR	11016486	Argument	imemory		11016459	0					
ANR	11016487	Identifier	imemory		11016459	0					
ANR	11016488	Argument	space		11016459	1					
ANR	11016489	Identifier	space		11016459	0					
ANR	11016490	Argument	1		11016459	2					
ANR	11016491	PrimaryExpression	1		11016459	0					
ANR	11016492	Argument	& CIEdict		11016459	3					
ANR	11016493	UnaryOperationExpression	& CIEdict		11016459	0					
ANR	11016494	UnaryOperator	&		11016459	0					
ANR	11016495	Identifier	CIEdict		11016459	1					
ANR	11016496	IfStatement	if ( code < 0 )		11016459	3					
ANR	11016497	Condition	code < 0	5094:8:161060:161067	11016459	0	True				
ANR	11016498	RelationalExpression	code < 0		11016459	0		<			
ANR	11016499	Identifier	code		11016459	0					
ANR	11016500	PrimaryExpression	0		11016459	1					
ANR	11016501	ReturnStatement	return code ;	5095:8:161078:161089	11016459	1	True				
ANR	11016502	Identifier	code		11016459	0					
ANR	11016503	ExpressionStatement	"code = dict_find_string ( & CIEdict , ""Range"" , & tempref )"	5098:4:161157:161209	11016459	4	True				
ANR	11016504	AssignmentExpression	"code = dict_find_string ( & CIEdict , ""Range"" , & tempref )"		11016459	0		=			
ANR	11016505	Identifier	code		11016459	0					
ANR	11016506	CallExpression	"dict_find_string ( & CIEdict , ""Range"" , & tempref )"		11016459	1					
ANR	11016507	Callee	dict_find_string		11016459	0					
ANR	11016508	Identifier	dict_find_string		11016459	0					
ANR	11016509	ArgumentList	& CIEdict		11016459	1					
ANR	11016510	Argument	& CIEdict		11016459	0					
ANR	11016511	UnaryOperationExpression	& CIEdict		11016459	0					
ANR	11016512	UnaryOperator	&		11016459	0					
ANR	11016513	Identifier	CIEdict		11016459	1					
ANR	11016514	Argument	"""Range"""		11016459	1					
ANR	11016515	PrimaryExpression	"""Range"""		11016459	0					
ANR	11016516	Argument	& tempref		11016459	2					
ANR	11016517	UnaryOperationExpression	& tempref		11016459	0					
ANR	11016518	UnaryOperator	&		11016459	0					
ANR	11016519	Identifier	tempref		11016459	1					
ANR	11016520	IfStatement	"if ( code > 0 && ! r_has_type ( tempref , t_null ) )"		11016459	5					
ANR	11016521	Condition	"code > 0 && ! r_has_type ( tempref , t_null )"	5099:8:161219:161258	11016459	0	True				
ANR	11016522	AndExpression	"code > 0 && ! r_has_type ( tempref , t_null )"		11016459	0		&&			
ANR	11016523	RelationalExpression	code > 0		11016459	0		>			
ANR	11016524	Identifier	code		11016459	0					
ANR	11016525	PrimaryExpression	0		11016459	1					
ANR	11016526	UnaryOperationExpression	"! r_has_type ( tempref , t_null )"		11016459	1					
ANR	11016527	UnaryOperator	!		11016459	0					
ANR	11016528	CallExpression	"r_has_type ( tempref , t_null )"		11016459	1					
ANR	11016529	Callee	r_has_type		11016459	0					
ANR	11016530	Identifier	r_has_type		11016459	0					
ANR	11016531	ArgumentList	tempref		11016459	1					
ANR	11016532	Argument	tempref		11016459	0					
ANR	11016533	Identifier	tempref		11016459	0					
ANR	11016534	Argument	t_null		11016459	1					
ANR	11016535	Identifier	t_null		11016459	0					
ANR	11016536	CompoundStatement		11:50:318:318	11016459	1					
ANR	11016537	ForStatement	for ( i = 0 ; i < 4 ; i ++ )		11016459	0					
ANR	11016538	ForInit	i = 0 ;	5100:13:161276:161279	11016459	0	True				
ANR	11016539	AssignmentExpression	i = 0		11016459	0		=			
ANR	11016540	Identifier	i		11016459	0					
ANR	11016541	PrimaryExpression	0		11016459	1					
ANR	11016542	Condition	i < 4	5100:17:161280:161282	11016459	1	True				
ANR	11016543	RelationalExpression	i < 4		11016459	0		<			
ANR	11016544	Identifier	i		11016459	0					
ANR	11016545	PrimaryExpression	4		11016459	1					
ANR	11016546	PostIncDecOperationExpression	i ++	5100:21:161284:161286	11016459	2	True				
ANR	11016547	Identifier	i		11016459	0					
ANR	11016548	IncDec	++		11016459	1					
ANR	11016549	CompoundStatement		12:26:346:346	11016459	3					
ANR	11016550	ExpressionStatement	"code = array_get ( imemory , tempref , i , & valref )"	5101:12:161303:161349	11016459	0	True				
ANR	11016551	AssignmentExpression	"code = array_get ( imemory , tempref , i , & valref )"		11016459	0		=			
ANR	11016552	Identifier	code		11016459	0					
ANR	11016553	CallExpression	"array_get ( imemory , tempref , i , & valref )"		11016459	1					
ANR	11016554	Callee	array_get		11016459	0					
ANR	11016555	Identifier	array_get		11016459	0					
ANR	11016556	ArgumentList	imemory		11016459	1					
ANR	11016557	Argument	imemory		11016459	0					
ANR	11016558	Identifier	imemory		11016459	0					
ANR	11016559	Argument	tempref		11016459	1					
ANR	11016560	Identifier	tempref		11016459	0					
ANR	11016561	Argument	i		11016459	2					
ANR	11016562	Identifier	i		11016459	0					
ANR	11016563	Argument	& valref		11016459	3					
ANR	11016564	UnaryOperationExpression	& valref		11016459	0					
ANR	11016565	UnaryOperator	&		11016459	0					
ANR	11016566	Identifier	valref		11016459	1					
ANR	11016567	IfStatement	if ( code < 0 )		11016459	1					
ANR	11016568	Condition	code < 0	5102:16:161367:161374	11016459	0	True				
ANR	11016569	RelationalExpression	code < 0		11016459	0		<			
ANR	11016570	Identifier	code		11016459	0					
ANR	11016571	PrimaryExpression	0		11016459	1					
ANR	11016572	ReturnStatement	return code ;	5103:16:161393:161404	11016459	1	True				
ANR	11016573	Identifier	code		11016459	0					
ANR	11016574	IfStatement	"if ( r_has_type ( & valref , t_integer ) )"		11016459	2					
ANR	11016575	Condition	"r_has_type ( & valref , t_integer )"	5104:16:161422:161451	11016459	0	True				
ANR	11016576	CallExpression	"r_has_type ( & valref , t_integer )"		11016459	0					
ANR	11016577	Callee	r_has_type		11016459	0					
ANR	11016578	Identifier	r_has_type		11016459	0					
ANR	11016579	ArgumentList	& valref		11016459	1					
ANR	11016580	Argument	& valref		11016459	0					
ANR	11016581	UnaryOperationExpression	& valref		11016459	0					
ANR	11016582	UnaryOperator	&		11016459	0					
ANR	11016583	Identifier	valref		11016459	1					
ANR	11016584	Argument	t_integer		11016459	1					
ANR	11016585	Identifier	t_integer		11016459	0					
ANR	11016586	ExpressionStatement	ptr [ i ] = ( float ) valref . value . intval	5105:16:161470:161505	11016459	1	True				
ANR	11016587	AssignmentExpression	ptr [ i ] = ( float ) valref . value . intval		11016459	0		=			
ANR	11016588	ArrayIndexing	ptr [ i ]		11016459	0					
ANR	11016589	Identifier	ptr		11016459	0					
ANR	11016590	Identifier	i		11016459	1					
ANR	11016591	CastExpression	( float ) valref . value . intval		11016459	1					
ANR	11016592	CastTarget	float		11016459	0					
ANR	11016593	MemberAccess	valref . value . intval		11016459	1					
ANR	11016594	MemberAccess	valref . value		11016459	0					
ANR	11016595	Identifier	valref		11016459	0					
ANR	11016596	Identifier	value		11016459	1					
ANR	11016597	Identifier	intval		11016459	1					
ANR	11016598	ElseStatement	else		11016459	0					
ANR	11016599	IfStatement	"if ( r_has_type ( & valref , t_real ) )"		11016459	0					
ANR	11016600	Condition	"r_has_type ( & valref , t_real )"	5106:21:161528:161554	11016459	0	True				
ANR	11016601	CallExpression	"r_has_type ( & valref , t_real )"		11016459	0					
ANR	11016602	Callee	r_has_type		11016459	0					
ANR	11016603	Identifier	r_has_type		11016459	0					
ANR	11016604	ArgumentList	& valref		11016459	1					
ANR	11016605	Argument	& valref		11016459	0					
ANR	11016606	UnaryOperationExpression	& valref		11016459	0					
ANR	11016607	UnaryOperator	&		11016459	0					
ANR	11016608	Identifier	valref		11016459	1					
ANR	11016609	Argument	t_real		11016459	1					
ANR	11016610	Identifier	t_real		11016459	0					
ANR	11016611	ExpressionStatement	ptr [ i ] = ( float ) valref . value . realval	5107:16:161573:161609	11016459	1	True				
ANR	11016612	AssignmentExpression	ptr [ i ] = ( float ) valref . value . realval		11016459	0		=			
ANR	11016613	ArrayIndexing	ptr [ i ]		11016459	0					
ANR	11016614	Identifier	ptr		11016459	0					
ANR	11016615	Identifier	i		11016459	1					
ANR	11016616	CastExpression	( float ) valref . value . realval		11016459	1					
ANR	11016617	CastTarget	float		11016459	0					
ANR	11016618	MemberAccess	valref . value . realval		11016459	1					
ANR	11016619	MemberAccess	valref . value		11016459	0					
ANR	11016620	Identifier	valref		11016459	0					
ANR	11016621	Identifier	value		11016459	1					
ANR	11016622	Identifier	realval		11016459	1					
ANR	11016623	ElseStatement	else		11016459	0					
ANR	11016624	ExpressionStatement	return_error ( gs_error_typecheck )	5109:16:161644:161676	11016459	0	True				
ANR	11016625	CallExpression	return_error ( gs_error_typecheck )		11016459	0					
ANR	11016626	Callee	return_error		11016459	0					
ANR	11016627	Identifier	return_error		11016459	0					
ANR	11016628	ArgumentList	gs_error_typecheck		11016459	1					
ANR	11016629	Argument	gs_error_typecheck		11016459	0					
ANR	11016630	Identifier	gs_error_typecheck		11016459	0					
ANR	11016631	ElseStatement	else		11016459	0					
ANR	11016632	CompoundStatement		23:11:756:756	11016459	0					
ANR	11016633	ForStatement	for ( i = 0 ; i < 2 ; i ++ )		11016459	0					
ANR	11016634	ForInit	i = 0 ;	5113:13:161751:161754	11016459	0	True				
ANR	11016635	AssignmentExpression	i = 0		11016459	0		=			
ANR	11016636	Identifier	i		11016459	0					
ANR	11016637	PrimaryExpression	0		11016459	1					
ANR	11016638	Condition	i < 2	5113:17:161755:161757	11016459	1	True				
ANR	11016639	RelationalExpression	i < 2		11016459	0		<			
ANR	11016640	Identifier	i		11016459	0					
ANR	11016641	PrimaryExpression	2		11016459	1					
ANR	11016642	PostIncDecOperationExpression	i ++	5113:21:161759:161761	11016459	2	True				
ANR	11016643	Identifier	i		11016459	0					
ANR	11016644	IncDec	++		11016459	1					
ANR	11016645	CompoundStatement		25:26:821:821	11016459	3					
ANR	11016646	ExpressionStatement	ptr [ 2 * i ] = - 100	5114:12:161778:161795	11016459	0	True				
ANR	11016647	AssignmentExpression	ptr [ 2 * i ] = - 100		11016459	0		=			
ANR	11016648	ArrayIndexing	ptr [ 2 * i ]		11016459	0					
ANR	11016649	Identifier	ptr		11016459	0					
ANR	11016650	MultiplicativeExpression	2 * i		11016459	1		*			
ANR	11016651	PrimaryExpression	2		11016459	0					
ANR	11016652	Identifier	i		11016459	1					
ANR	11016653	UnaryOperationExpression	- 100		11016459	1					
ANR	11016654	UnaryOperator	-		11016459	0					
ANR	11016655	PrimaryExpression	100		11016459	1					
ANR	11016656	ExpressionStatement	ptr [ ( 2 * i ) + 1 ] = 100	5115:12:161809:161831	11016459	1	True				
ANR	11016657	AssignmentExpression	ptr [ ( 2 * i ) + 1 ] = 100		11016459	0		=			
ANR	11016658	ArrayIndexing	ptr [ ( 2 * i ) + 1 ]		11016459	0					
ANR	11016659	Identifier	ptr		11016459	0					
ANR	11016660	AdditiveExpression	( 2 * i ) + 1		11016459	1		+			
ANR	11016661	MultiplicativeExpression	2 * i		11016459	0		*			
ANR	11016662	PrimaryExpression	2		11016459	0					
ANR	11016663	Identifier	i		11016459	1					
ANR	11016664	PrimaryExpression	1		11016459	1					
ANR	11016665	PrimaryExpression	100		11016459	1					
ANR	11016666	ReturnStatement	return 0 ;	5118:4:161853:161861	11016459	6	True				
ANR	11016667	PrimaryExpression	0		11016459	0					
ANR	11016668	ReturnType	static int		11016459	1					
ANR	11016669	Identifier	labrange		11016459	2					
ANR	11016670	ParameterList	"i_ctx_t * i_ctx_p , ref * space , float * ptr"		11016459	3					
ANR	11016671	Parameter	i_ctx_t * i_ctx_p	5088:20:160899:160915	11016459	0	True				
ANR	11016672	ParameterType	i_ctx_t *		11016459	0					
ANR	11016673	Identifier	i_ctx_p		11016459	1					
ANR	11016674	Parameter	ref * space	5088:39:160918:160927	11016459	1	True				
ANR	11016675	ParameterType	ref *		11016459	0					
ANR	11016676	Identifier	space		11016459	1					
ANR	11016677	Parameter	float * ptr	5088:51:160930:160939	11016459	2	True				
ANR	11016678	ParameterType	float *		11016459	0					
ANR	11016679	Identifier	ptr		11016459	1					
ANR	11016680	CFGEntryNode	ENTRY		11016459		True				
ANR	11016681	CFGExitNode	EXIT		11016459		True				
ANR	11016682	Symbol	valref . value		11016459						
ANR	11016683	Symbol	code		11016459						
ANR	11016684	Symbol	dict_find_string		11016459						
ANR	11016685	Symbol	array_get		11016459						
ANR	11016686	Symbol	& CIEdict		11016459						
ANR	11016687	Symbol	i		11016459						
ANR	11016688	Symbol	& tempref		11016459						
ANR	11016689	Symbol	t_real		11016459						
ANR	11016690	Symbol	space		11016459						
ANR	11016691	Symbol	valref . value . realval		11016459						
ANR	11016692	Symbol	ptr		11016459						
ANR	11016693	Symbol	r_has_type		11016459						
ANR	11016694	Symbol	t_null		11016459						
ANR	11016695	Symbol	gs_error_typecheck		11016459						
ANR	11016696	Symbol	* i		11016459						
ANR	11016697	Symbol	t_integer		11016459						
ANR	11016698	Symbol	valref . value . intval		11016459						
ANR	11016699	Symbol	& valref		11016459						
ANR	11016700	Symbol	i_ctx_p		11016459						
ANR	11016701	Symbol	valref		11016459						
ANR	11016702	Symbol	* ptr		11016459						
ANR	11016703	Symbol	CIEdict		11016459						
ANR	11016704	Symbol	imemory		11016459						
ANR	11016705	Symbol	tempref		11016459						
ANR	11016706	Function	labdomain	5121:0:161866:162845							
ANR	11016707	FunctionDef	"labdomain (i_ctx_t * i_ctx_p , ref * space , float * ptr)"		11016706	0					
ANR	11016708	CompoundStatement		5122:0:161930:162845	11016706	0					
ANR	11016709	IdentifierDeclStatement	"int i , code ;"	5123:4:161936:161947	11016706	0	True				
ANR	11016710	IdentifierDecl	i		11016706	0					
ANR	11016711	IdentifierDeclType	int		11016706	0					
ANR	11016712	Identifier	i		11016706	1					
ANR	11016713	IdentifierDecl	code		11016706	1					
ANR	11016714	IdentifierDeclType	int		11016706	0					
ANR	11016715	Identifier	code		11016706	1					
ANR	11016716	IdentifierDeclStatement	"ref CIEdict , * tempref , valref ;"	5124:4:161953:161986	11016706	1	True				
ANR	11016717	IdentifierDecl	CIEdict		11016706	0					
ANR	11016718	IdentifierDeclType	ref		11016706	0					
ANR	11016719	Identifier	CIEdict		11016706	1					
ANR	11016720	IdentifierDecl	* tempref		11016706	1					
ANR	11016721	IdentifierDeclType	ref *		11016706	0					
ANR	11016722	Identifier	tempref		11016706	1					
ANR	11016723	IdentifierDecl	valref		11016706	2					
ANR	11016724	IdentifierDeclType	ref		11016706	0					
ANR	11016725	Identifier	valref		11016706	1					
ANR	11016726	ExpressionStatement	"code = array_get ( imemory , space , 1 , & CIEdict )"	5126:4:161993:162038	11016706	2	True				
ANR	11016727	AssignmentExpression	"code = array_get ( imemory , space , 1 , & CIEdict )"		11016706	0		=			
ANR	11016728	Identifier	code		11016706	0					
ANR	11016729	CallExpression	"array_get ( imemory , space , 1 , & CIEdict )"		11016706	1					
ANR	11016730	Callee	array_get		11016706	0					
ANR	11016731	Identifier	array_get		11016706	0					
ANR	11016732	ArgumentList	imemory		11016706	1					
ANR	11016733	Argument	imemory		11016706	0					
ANR	11016734	Identifier	imemory		11016706	0					
ANR	11016735	Argument	space		11016706	1					
ANR	11016736	Identifier	space		11016706	0					
ANR	11016737	Argument	1		11016706	2					
ANR	11016738	PrimaryExpression	1		11016706	0					
ANR	11016739	Argument	& CIEdict		11016706	3					
ANR	11016740	UnaryOperationExpression	& CIEdict		11016706	0					
ANR	11016741	UnaryOperator	&		11016706	0					
ANR	11016742	Identifier	CIEdict		11016706	1					
ANR	11016743	IfStatement	if ( code < 0 )		11016706	3					
ANR	11016744	Condition	code < 0	5127:8:162048:162055	11016706	0	True				
ANR	11016745	RelationalExpression	code < 0		11016706	0		<			
ANR	11016746	Identifier	code		11016706	0					
ANR	11016747	PrimaryExpression	0		11016706	1					
ANR	11016748	ReturnStatement	return code ;	5128:8:162066:162077	11016706	1	True				
ANR	11016749	Identifier	code		11016706	0					
ANR	11016750	ExpressionStatement	"code = dict_find_string ( & CIEdict , ""Range"" , & tempref )"	5131:4:162139:162191	11016706	4	True				
ANR	11016751	AssignmentExpression	"code = dict_find_string ( & CIEdict , ""Range"" , & tempref )"		11016706	0		=			
ANR	11016752	Identifier	code		11016706	0					
ANR	11016753	CallExpression	"dict_find_string ( & CIEdict , ""Range"" , & tempref )"		11016706	1					
ANR	11016754	Callee	dict_find_string		11016706	0					
ANR	11016755	Identifier	dict_find_string		11016706	0					
ANR	11016756	ArgumentList	& CIEdict		11016706	1					
ANR	11016757	Argument	& CIEdict		11016706	0					
ANR	11016758	UnaryOperationExpression	& CIEdict		11016706	0					
ANR	11016759	UnaryOperator	&		11016706	0					
ANR	11016760	Identifier	CIEdict		11016706	1					
ANR	11016761	Argument	"""Range"""		11016706	1					
ANR	11016762	PrimaryExpression	"""Range"""		11016706	0					
ANR	11016763	Argument	& tempref		11016706	2					
ANR	11016764	UnaryOperationExpression	& tempref		11016706	0					
ANR	11016765	UnaryOperator	&		11016706	0					
ANR	11016766	Identifier	tempref		11016706	1					
ANR	11016767	IfStatement	"if ( code > 0 && ! r_has_type ( tempref , t_null ) )"		11016706	5					
ANR	11016768	Condition	"code > 0 && ! r_has_type ( tempref , t_null )"	5132:8:162201:162240	11016706	0	True				
ANR	11016769	AndExpression	"code > 0 && ! r_has_type ( tempref , t_null )"		11016706	0		&&			
ANR	11016770	RelationalExpression	code > 0		11016706	0		>			
ANR	11016771	Identifier	code		11016706	0					
ANR	11016772	PrimaryExpression	0		11016706	1					
ANR	11016773	UnaryOperationExpression	"! r_has_type ( tempref , t_null )"		11016706	1					
ANR	11016774	UnaryOperator	!		11016706	0					
ANR	11016775	CallExpression	"r_has_type ( tempref , t_null )"		11016706	1					
ANR	11016776	Callee	r_has_type		11016706	0					
ANR	11016777	Identifier	r_has_type		11016706	0					
ANR	11016778	ArgumentList	tempref		11016706	1					
ANR	11016779	Argument	tempref		11016706	0					
ANR	11016780	Identifier	tempref		11016706	0					
ANR	11016781	Argument	t_null		11016706	1					
ANR	11016782	Identifier	t_null		11016706	0					
ANR	11016783	CompoundStatement		11:50:312:312	11016706	1					
ANR	11016784	ForStatement	for ( i = 0 ; i < 4 ; i ++ )		11016706	0					
ANR	11016785	ForInit	i = 0 ;	5133:13:162258:162261	11016706	0	True				
ANR	11016786	AssignmentExpression	i = 0		11016706	0		=			
ANR	11016787	Identifier	i		11016706	0					
ANR	11016788	PrimaryExpression	0		11016706	1					
ANR	11016789	Condition	i < 4	5133:17:162262:162264	11016706	1	True				
ANR	11016790	RelationalExpression	i < 4		11016706	0		<			
ANR	11016791	Identifier	i		11016706	0					
ANR	11016792	PrimaryExpression	4		11016706	1					
ANR	11016793	PostIncDecOperationExpression	i ++	5133:21:162266:162268	11016706	2	True				
ANR	11016794	Identifier	i		11016706	0					
ANR	11016795	IncDec	++		11016706	1					
ANR	11016796	CompoundStatement		12:26:340:340	11016706	3					
ANR	11016797	ExpressionStatement	"code = array_get ( imemory , tempref , i , & valref )"	5134:12:162285:162331	11016706	0	True				
ANR	11016798	AssignmentExpression	"code = array_get ( imemory , tempref , i , & valref )"		11016706	0		=			
ANR	11016799	Identifier	code		11016706	0					
ANR	11016800	CallExpression	"array_get ( imemory , tempref , i , & valref )"		11016706	1					
ANR	11016801	Callee	array_get		11016706	0					
ANR	11016802	Identifier	array_get		11016706	0					
ANR	11016803	ArgumentList	imemory		11016706	1					
ANR	11016804	Argument	imemory		11016706	0					
ANR	11016805	Identifier	imemory		11016706	0					
ANR	11016806	Argument	tempref		11016706	1					
ANR	11016807	Identifier	tempref		11016706	0					
ANR	11016808	Argument	i		11016706	2					
ANR	11016809	Identifier	i		11016706	0					
ANR	11016810	Argument	& valref		11016706	3					
ANR	11016811	UnaryOperationExpression	& valref		11016706	0					
ANR	11016812	UnaryOperator	&		11016706	0					
ANR	11016813	Identifier	valref		11016706	1					
ANR	11016814	IfStatement	if ( code < 0 )		11016706	1					
ANR	11016815	Condition	code < 0	5135:16:162349:162356	11016706	0	True				
ANR	11016816	RelationalExpression	code < 0		11016706	0		<			
ANR	11016817	Identifier	code		11016706	0					
ANR	11016818	PrimaryExpression	0		11016706	1					
ANR	11016819	ReturnStatement	return code ;	5136:16:162375:162386	11016706	1	True				
ANR	11016820	Identifier	code		11016706	0					
ANR	11016821	IfStatement	"if ( r_has_type ( & valref , t_integer ) )"		11016706	2					
ANR	11016822	Condition	"r_has_type ( & valref , t_integer )"	5137:16:162404:162433	11016706	0	True				
ANR	11016823	CallExpression	"r_has_type ( & valref , t_integer )"		11016706	0					
ANR	11016824	Callee	r_has_type		11016706	0					
ANR	11016825	Identifier	r_has_type		11016706	0					
ANR	11016826	ArgumentList	& valref		11016706	1					
ANR	11016827	Argument	& valref		11016706	0					
ANR	11016828	UnaryOperationExpression	& valref		11016706	0					
ANR	11016829	UnaryOperator	&		11016706	0					
ANR	11016830	Identifier	valref		11016706	1					
ANR	11016831	Argument	t_integer		11016706	1					
ANR	11016832	Identifier	t_integer		11016706	0					
ANR	11016833	ExpressionStatement	ptr [ i ] = ( float ) valref . value . intval	5138:16:162452:162487	11016706	1	True				
ANR	11016834	AssignmentExpression	ptr [ i ] = ( float ) valref . value . intval		11016706	0		=			
ANR	11016835	ArrayIndexing	ptr [ i ]		11016706	0					
ANR	11016836	Identifier	ptr		11016706	0					
ANR	11016837	Identifier	i		11016706	1					
ANR	11016838	CastExpression	( float ) valref . value . intval		11016706	1					
ANR	11016839	CastTarget	float		11016706	0					
ANR	11016840	MemberAccess	valref . value . intval		11016706	1					
ANR	11016841	MemberAccess	valref . value		11016706	0					
ANR	11016842	Identifier	valref		11016706	0					
ANR	11016843	Identifier	value		11016706	1					
ANR	11016844	Identifier	intval		11016706	1					
ANR	11016845	ElseStatement	else		11016706	0					
ANR	11016846	IfStatement	"if ( r_has_type ( & valref , t_real ) )"		11016706	0					
ANR	11016847	Condition	"r_has_type ( & valref , t_real )"	5139:21:162510:162536	11016706	0	True				
ANR	11016848	CallExpression	"r_has_type ( & valref , t_real )"		11016706	0					
ANR	11016849	Callee	r_has_type		11016706	0					
ANR	11016850	Identifier	r_has_type		11016706	0					
ANR	11016851	ArgumentList	& valref		11016706	1					
ANR	11016852	Argument	& valref		11016706	0					
ANR	11016853	UnaryOperationExpression	& valref		11016706	0					
ANR	11016854	UnaryOperator	&		11016706	0					
ANR	11016855	Identifier	valref		11016706	1					
ANR	11016856	Argument	t_real		11016706	1					
ANR	11016857	Identifier	t_real		11016706	0					
ANR	11016858	ExpressionStatement	ptr [ i ] = ( float ) valref . value . realval	5140:16:162555:162591	11016706	1	True				
ANR	11016859	AssignmentExpression	ptr [ i ] = ( float ) valref . value . realval		11016706	0		=			
ANR	11016860	ArrayIndexing	ptr [ i ]		11016706	0					
ANR	11016861	Identifier	ptr		11016706	0					
ANR	11016862	Identifier	i		11016706	1					
ANR	11016863	CastExpression	( float ) valref . value . realval		11016706	1					
ANR	11016864	CastTarget	float		11016706	0					
ANR	11016865	MemberAccess	valref . value . realval		11016706	1					
ANR	11016866	MemberAccess	valref . value		11016706	0					
ANR	11016867	Identifier	valref		11016706	0					
ANR	11016868	Identifier	value		11016706	1					
ANR	11016869	Identifier	realval		11016706	1					
ANR	11016870	ElseStatement	else		11016706	0					
ANR	11016871	ExpressionStatement	return_error ( gs_error_typecheck )	5142:16:162626:162658	11016706	0	True				
ANR	11016872	CallExpression	return_error ( gs_error_typecheck )		11016706	0					
ANR	11016873	Callee	return_error		11016706	0					
ANR	11016874	Identifier	return_error		11016706	0					
ANR	11016875	ArgumentList	gs_error_typecheck		11016706	1					
ANR	11016876	Argument	gs_error_typecheck		11016706	0					
ANR	11016877	Identifier	gs_error_typecheck		11016706	0					
ANR	11016878	ElseStatement	else		11016706	0					
ANR	11016879	CompoundStatement		23:11:750:750	11016706	0					
ANR	11016880	ForStatement	for ( i = 0 ; i < 2 ; i ++ )		11016706	0					
ANR	11016881	ForInit	i = 0 ;	5146:13:162733:162736	11016706	0	True				
ANR	11016882	AssignmentExpression	i = 0		11016706	0		=			
ANR	11016883	Identifier	i		11016706	0					
ANR	11016884	PrimaryExpression	0		11016706	1					
ANR	11016885	Condition	i < 2	5146:17:162737:162739	11016706	1	True				
ANR	11016886	RelationalExpression	i < 2		11016706	0		<			
ANR	11016887	Identifier	i		11016706	0					
ANR	11016888	PrimaryExpression	2		11016706	1					
ANR	11016889	PostIncDecOperationExpression	i ++	5146:21:162741:162743	11016706	2	True				
ANR	11016890	Identifier	i		11016706	0					
ANR	11016891	IncDec	++		11016706	1					
ANR	11016892	CompoundStatement		25:26:815:815	11016706	3					
ANR	11016893	ExpressionStatement	ptr [ 2 * i ] = - 100	5147:12:162760:162777	11016706	0	True				
ANR	11016894	AssignmentExpression	ptr [ 2 * i ] = - 100		11016706	0		=			
ANR	11016895	ArrayIndexing	ptr [ 2 * i ]		11016706	0					
ANR	11016896	Identifier	ptr		11016706	0					
ANR	11016897	MultiplicativeExpression	2 * i		11016706	1		*			
ANR	11016898	PrimaryExpression	2		11016706	0					
ANR	11016899	Identifier	i		11016706	1					
ANR	11016900	UnaryOperationExpression	- 100		11016706	1					
ANR	11016901	UnaryOperator	-		11016706	0					
ANR	11016902	PrimaryExpression	100		11016706	1					
ANR	11016903	ExpressionStatement	ptr [ ( 2 * i ) + 1 ] = 100	5148:12:162791:162813	11016706	1	True				
ANR	11016904	AssignmentExpression	ptr [ ( 2 * i ) + 1 ] = 100		11016706	0		=			
ANR	11016905	ArrayIndexing	ptr [ ( 2 * i ) + 1 ]		11016706	0					
ANR	11016906	Identifier	ptr		11016706	0					
ANR	11016907	AdditiveExpression	( 2 * i ) + 1		11016706	1		+			
ANR	11016908	MultiplicativeExpression	2 * i		11016706	0		*			
ANR	11016909	PrimaryExpression	2		11016706	0					
ANR	11016910	Identifier	i		11016706	1					
ANR	11016911	PrimaryExpression	1		11016706	1					
ANR	11016912	PrimaryExpression	100		11016706	1					
ANR	11016913	ReturnStatement	return 0 ;	5151:4:162835:162843	11016706	6	True				
ANR	11016914	PrimaryExpression	0		11016706	0					
ANR	11016915	ReturnType	static int		11016706	1					
ANR	11016916	Identifier	labdomain		11016706	2					
ANR	11016917	ParameterList	"i_ctx_t * i_ctx_p , ref * space , float * ptr"		11016706	3					
ANR	11016918	Parameter	i_ctx_t * i_ctx_p	5121:21:161887:161903	11016706	0	True				
ANR	11016919	ParameterType	i_ctx_t *		11016706	0					
ANR	11016920	Identifier	i_ctx_p		11016706	1					
ANR	11016921	Parameter	ref * space	5121:40:161906:161915	11016706	1	True				
ANR	11016922	ParameterType	ref *		11016706	0					
ANR	11016923	Identifier	space		11016706	1					
ANR	11016924	Parameter	float * ptr	5121:52:161918:161927	11016706	2	True				
ANR	11016925	ParameterType	float *		11016706	0					
ANR	11016926	Identifier	ptr		11016706	1					
ANR	11016927	CFGEntryNode	ENTRY		11016706		True				
ANR	11016928	CFGExitNode	EXIT		11016706		True				
ANR	11016929	Symbol	valref . value		11016706						
ANR	11016930	Symbol	code		11016706						
ANR	11016931	Symbol	dict_find_string		11016706						
ANR	11016932	Symbol	array_get		11016706						
ANR	11016933	Symbol	& CIEdict		11016706						
ANR	11016934	Symbol	i		11016706						
ANR	11016935	Symbol	& tempref		11016706						
ANR	11016936	Symbol	t_real		11016706						
ANR	11016937	Symbol	space		11016706						
ANR	11016938	Symbol	valref . value . realval		11016706						
ANR	11016939	Symbol	ptr		11016706						
ANR	11016940	Symbol	r_has_type		11016706						
ANR	11016941	Symbol	t_null		11016706						
ANR	11016942	Symbol	gs_error_typecheck		11016706						
ANR	11016943	Symbol	* i		11016706						
ANR	11016944	Symbol	t_integer		11016706						
ANR	11016945	Symbol	valref . value . intval		11016706						
ANR	11016946	Symbol	& valref		11016706						
ANR	11016947	Symbol	i_ctx_p		11016706						
ANR	11016948	Symbol	valref		11016706						
ANR	11016949	Symbol	* ptr		11016706						
ANR	11016950	Symbol	CIEdict		11016706						
ANR	11016951	Symbol	imemory		11016706						
ANR	11016952	Symbol	tempref		11016706						
ANR	11016953	Function	labbasecolor	5154:0:162848:163249							
ANR	11016954	FunctionDef	"labbasecolor (i_ctx_t * i_ctx_p , ref * space , int base , int * stage , int * cont , int * stack_depth)"		11016953	0					
ANR	11016955	CompoundStatement		5155:0:162954:163249	11016953	0					
ANR	11016956	IdentifierDeclStatement	os_ptr op ;	5156:4:162960:162969	11016953	0	True				
ANR	11016957	IdentifierDecl	op		11016953	0					
ANR	11016958	IdentifierDeclType	os_ptr		11016953	0					
ANR	11016959	Identifier	op		11016953	1					
ANR	11016960	IdentifierDeclStatement	"int i , components = 1 ;"	5157:4:162975:162994	11016953	1	True				
ANR	11016961	IdentifierDecl	i		11016953	0					
ANR	11016962	IdentifierDeclType	int		11016953	0					
ANR	11016963	Identifier	i		11016953	1					
ANR	11016964	IdentifierDecl	components = 1		11016953	1					
ANR	11016965	IdentifierDeclType	int		11016953	0					
ANR	11016966	Identifier	components		11016953	1					
ANR	11016967	AssignmentExpression	components = 1		11016953	2		=			
ANR	11016968	Identifier	components		11016953	0					
ANR	11016969	PrimaryExpression	1		11016953	1					
ANR	11016970	ExpressionStatement	components = 3	5159:4:163001:163015	11016953	2	True				
ANR	11016971	AssignmentExpression	components = 3		11016953	0		=			
ANR	11016972	Identifier	components		11016953	0					
ANR	11016973	PrimaryExpression	3		11016953	1					
ANR	11016974	ExpressionStatement	pop ( components )	5160:4:163021:163036	11016953	3	True				
ANR	11016975	CallExpression	pop ( components )		11016953	0					
ANR	11016976	Callee	pop		11016953	0					
ANR	11016977	Identifier	pop		11016953	0					
ANR	11016978	ArgumentList	components		11016953	1					
ANR	11016979	Argument	components		11016953	0					
ANR	11016980	Identifier	components		11016953	0					
ANR	11016981	ExpressionStatement	op = osp	5161:4:163042:163050	11016953	4	True				
ANR	11016982	AssignmentExpression	op = osp		11016953	0		=			
ANR	11016983	Identifier	op		11016953	0					
ANR	11016984	Identifier	osp		11016953	1					
ANR	11016985	ExpressionStatement	components = 3	5162:4:163056:163070	11016953	5	True				
ANR	11016986	AssignmentExpression	components = 3		11016953	0		=			
ANR	11016987	Identifier	components		11016953	0					
ANR	11016988	PrimaryExpression	3		11016953	1					
ANR	11016989	ExpressionStatement	push ( components )	5163:4:163076:163092	11016953	6	True				
ANR	11016990	CallExpression	push ( components )		11016953	0					
ANR	11016991	Callee	push		11016953	0					
ANR	11016992	Identifier	push		11016953	0					
ANR	11016993	ArgumentList	components		11016953	1					
ANR	11016994	Argument	components		11016953	0					
ANR	11016995	Identifier	components		11016953	0					
ANR	11016996	ExpressionStatement	op -= components - 1	5164:4:163098:163116	11016953	7	True				
ANR	11016997	AssignmentExpression	op -= components - 1		11016953	0		-=			
ANR	11016998	Identifier	op		11016953	0					
ANR	11016999	AdditiveExpression	components - 1		11016953	1		-			
ANR	11017000	Identifier	components		11016953	0					
ANR	11017001	PrimaryExpression	1		11016953	1					
ANR	11017002	ForStatement	for ( i = 0 ; i < components ; i ++ )		11016953	8					
ANR	11017003	ForInit	i = 0 ;	5165:9:163127:163130	11016953	0	True				
ANR	11017004	AssignmentExpression	i = 0		11016953	0		=			
ANR	11017005	Identifier	i		11016953	0					
ANR	11017006	PrimaryExpression	0		11016953	1					
ANR	11017007	Condition	i < components	5165:13:163131:163142	11016953	1	True				
ANR	11017008	RelationalExpression	i < components		11016953	0		<			
ANR	11017009	Identifier	i		11016953	0					
ANR	11017010	Identifier	components		11016953	1					
ANR	11017011	PostIncDecOperationExpression	i ++	5165:26:163144:163146	11016953	2	True				
ANR	11017012	Identifier	i		11016953	0					
ANR	11017013	IncDec	++		11016953	1					
ANR	11017014	CompoundStatement		11:31:194:194	11016953	3					
ANR	11017015	ExpressionStatement	"make_real ( op , ( float ) 0 )"	5166:8:163159:163182	11016953	0	True				
ANR	11017016	CallExpression	"make_real ( op , ( float ) 0 )"		11016953	0					
ANR	11017017	Callee	make_real		11016953	0					
ANR	11017018	Identifier	make_real		11016953	0					
ANR	11017019	ArgumentList	op		11016953	1					
ANR	11017020	Argument	op		11016953	0					
ANR	11017021	Identifier	op		11016953	0					
ANR	11017022	Argument	( float ) 0		11016953	1					
ANR	11017023	CastExpression	( float ) 0		11016953	0					
ANR	11017024	CastTarget	float		11016953	0					
ANR	11017025	PrimaryExpression	0		11016953	1					
ANR	11017026	ExpressionStatement	op ++	5167:8:163192:163196	11016953	1	True				
ANR	11017027	PostIncDecOperationExpression	op ++		11016953	0					
ANR	11017028	Identifier	op		11016953	0					
ANR	11017029	IncDec	++		11016953	1					
ANR	11017030	ExpressionStatement	* stage = 0	5169:4:163208:163218	11016953	9	True				
ANR	11017031	AssignmentExpression	* stage = 0		11016953	0		=			
ANR	11017032	UnaryOperationExpression	* stage		11016953	0					
ANR	11017033	UnaryOperator	*		11016953	0					
ANR	11017034	Identifier	stage		11016953	1					
ANR	11017035	PrimaryExpression	0		11016953	1					
ANR	11017036	ExpressionStatement	* cont = 0	5170:4:163224:163233	11016953	10	True				
ANR	11017037	AssignmentExpression	* cont = 0		11016953	0		=			
ANR	11017038	UnaryOperationExpression	* cont		11016953	0					
ANR	11017039	UnaryOperator	*		11016953	0					
ANR	11017040	Identifier	cont		11016953	1					
ANR	11017041	PrimaryExpression	0		11016953	1					
ANR	11017042	ReturnStatement	return 0 ;	5171:4:163239:163247	11016953	11	True				
ANR	11017043	PrimaryExpression	0		11016953	0					
ANR	11017044	ReturnType	static int		11016953	1					
ANR	11017045	Identifier	labbasecolor		11016953	2					
ANR	11017046	ParameterList	"i_ctx_t * i_ctx_p , ref * space , int base , int * stage , int * cont , int * stack_depth"		11016953	3					
ANR	11017047	Parameter	i_ctx_t * i_ctx_p	5154:24:162872:162888	11016953	0	True				
ANR	11017048	ParameterType	i_ctx_t *		11016953	0					
ANR	11017049	Identifier	i_ctx_p		11016953	1					
ANR	11017050	Parameter	ref * space	5154:43:162891:162900	11016953	1	True				
ANR	11017051	ParameterType	ref *		11016953	0					
ANR	11017052	Identifier	space		11016953	1					
ANR	11017053	Parameter	int base	5154:55:162903:162910	11016953	2	True				
ANR	11017054	ParameterType	int		11016953	0					
ANR	11017055	Identifier	base		11016953	1					
ANR	11017056	Parameter	int * stage	5154:65:162913:162922	11016953	3	True				
ANR	11017057	ParameterType	int *		11016953	0					
ANR	11017058	Identifier	stage		11016953	1					
ANR	11017059	Parameter	int * cont	5154:77:162925:162933	11016953	4	True				
ANR	11017060	ParameterType	int *		11016953	0					
ANR	11017061	Identifier	cont		11016953	1					
ANR	11017062	Parameter	int * stack_depth	5154:88:162936:162951	11016953	5	True				
ANR	11017063	ParameterType	int *		11016953	0					
ANR	11017064	Identifier	stack_depth		11016953	1					
ANR	11017065	CFGEntryNode	ENTRY		11016953		True				
ANR	11017066	CFGExitNode	EXIT		11016953		True				
ANR	11017067	Symbol	stack_depth		11016953						
ANR	11017068	Symbol	op		11016953						
ANR	11017069	Symbol	components		11016953						
ANR	11017070	Symbol	* stage		11016953						
ANR	11017071	Symbol	stage		11016953						
ANR	11017072	Symbol	* cont		11016953						
ANR	11017073	Symbol	i_ctx_p		11016953						
ANR	11017074	Symbol	i		11016953						
ANR	11017075	Symbol	cont		11016953						
ANR	11017076	Symbol	osp		11016953						
ANR	11017077	Symbol	space		11016953						
ANR	11017078	Symbol	base		11016953						
ANR	11017079	Function	labvalidate	5174:0:163252:163624							
ANR	11017080	FunctionDef	"labvalidate (i_ctx_t * i_ctx_p , ref * space , float * values , int num_comps)"		11017079	0					
ANR	11017081	CompoundStatement		5175:0:163335:163624	11017079	0					
ANR	11017082	IdentifierDeclStatement	os_ptr op = osp ;	5176:4:163341:163356	11017079	0	True				
ANR	11017083	IdentifierDecl	op = osp		11017079	0					
ANR	11017084	IdentifierDeclType	os_ptr		11017079	0					
ANR	11017085	Identifier	op		11017079	1					
ANR	11017086	AssignmentExpression	op = osp		11017079	2		=			
ANR	11017087	Identifier	osp		11017079	0					
ANR	11017088	Identifier	osp		11017079	1					
ANR	11017089	IdentifierDeclStatement	int i ;	5177:4:163362:163367	11017079	1	True				
ANR	11017090	IdentifierDecl	i		11017079	0					
ANR	11017091	IdentifierDeclType	int		11017079	0					
ANR	11017092	Identifier	i		11017079	1					
ANR	11017093	IfStatement	if ( num_comps < 3 )		11017079	2					
ANR	11017094	Condition	num_comps < 3	5179:8:163378:163390	11017079	0	True				
ANR	11017095	RelationalExpression	num_comps < 3		11017079	0		<			
ANR	11017096	Identifier	num_comps		11017079	0					
ANR	11017097	PrimaryExpression	3		11017079	1					
ANR	11017098	ExpressionStatement	return_error ( gs_error_stackunderflow )	5180:8:163401:163438	11017079	1	True				
ANR	11017099	CallExpression	return_error ( gs_error_stackunderflow )		11017079	0					
ANR	11017100	Callee	return_error		11017079	0					
ANR	11017101	Identifier	return_error		11017079	0					
ANR	11017102	ArgumentList	gs_error_stackunderflow		11017079	1					
ANR	11017103	Argument	gs_error_stackunderflow		11017079	0					
ANR	11017104	Identifier	gs_error_stackunderflow		11017079	0					
ANR	11017105	ExpressionStatement	op -= 2	5181:4:163444:163451	11017079	3	True				
ANR	11017106	AssignmentExpression	op -= 2		11017079	0		-=			
ANR	11017107	Identifier	op		11017079	0					
ANR	11017108	PrimaryExpression	2		11017079	1					
ANR	11017109	ForStatement	for ( i = 0 ; i < 3 ; i ++ )		11017079	4					
ANR	11017110	ForInit	i = 0 ;	5182:9:163462:163465	11017079	0	True				
ANR	11017111	AssignmentExpression	i = 0		11017079	0		=			
ANR	11017112	Identifier	i		11017079	0					
ANR	11017113	PrimaryExpression	0		11017079	1					
ANR	11017114	Condition	i < 3	5182:13:163466:163468	11017079	1	True				
ANR	11017115	RelationalExpression	i < 3		11017079	0		<			
ANR	11017116	Identifier	i		11017079	0					
ANR	11017117	PrimaryExpression	3		11017079	1					
ANR	11017118	PostIncDecOperationExpression	i ++	5182:17:163470:163472	11017079	2	True				
ANR	11017119	Identifier	i		11017079	0					
ANR	11017120	IncDec	++		11017079	1					
ANR	11017121	CompoundStatement		8:22:139:139	11017079	3					
ANR	11017122	IfStatement	"if ( ! r_has_type ( op , t_integer ) && ! r_has_type ( op , t_real ) )"		11017079	0					
ANR	11017123	Condition	"! r_has_type ( op , t_integer ) && ! r_has_type ( op , t_real )"	5183:12:163489:163541	11017079	0	True				
ANR	11017124	AndExpression	"! r_has_type ( op , t_integer ) && ! r_has_type ( op , t_real )"		11017079	0		&&			
ANR	11017125	UnaryOperationExpression	"! r_has_type ( op , t_integer )"		11017079	0					
ANR	11017126	UnaryOperator	!		11017079	0					
ANR	11017127	CallExpression	"r_has_type ( op , t_integer )"		11017079	1					
ANR	11017128	Callee	r_has_type		11017079	0					
ANR	11017129	Identifier	r_has_type		11017079	0					
ANR	11017130	ArgumentList	op		11017079	1					
ANR	11017131	Argument	op		11017079	0					
ANR	11017132	Identifier	op		11017079	0					
ANR	11017133	Argument	t_integer		11017079	1					
ANR	11017134	Identifier	t_integer		11017079	0					
ANR	11017135	UnaryOperationExpression	"! r_has_type ( op , t_real )"		11017079	1					
ANR	11017136	UnaryOperator	!		11017079	0					
ANR	11017137	CallExpression	"r_has_type ( op , t_real )"		11017079	1					
ANR	11017138	Callee	r_has_type		11017079	0					
ANR	11017139	Identifier	r_has_type		11017079	0					
ANR	11017140	ArgumentList	op		11017079	1					
ANR	11017141	Argument	op		11017079	0					
ANR	11017142	Identifier	op		11017079	0					
ANR	11017143	Argument	t_real		11017079	1					
ANR	11017144	Identifier	t_real		11017079	0					
ANR	11017145	ExpressionStatement	return_error ( gs_error_typecheck )	5184:12:163556:163588	11017079	1	True				
ANR	11017146	CallExpression	return_error ( gs_error_typecheck )		11017079	0					
ANR	11017147	Callee	return_error		11017079	0					
ANR	11017148	Identifier	return_error		11017079	0					
ANR	11017149	ArgumentList	gs_error_typecheck		11017079	1					
ANR	11017150	Argument	gs_error_typecheck		11017079	0					
ANR	11017151	Identifier	gs_error_typecheck		11017079	0					
ANR	11017152	ExpressionStatement	op ++	5185:8:163598:163602	11017079	1	True				
ANR	11017153	PostIncDecOperationExpression	op ++		11017079	0					
ANR	11017154	Identifier	op		11017079	0					
ANR	11017155	IncDec	++		11017079	1					
ANR	11017156	ReturnStatement	return 0 ;	5187:4:163614:163622	11017079	5	True				
ANR	11017157	PrimaryExpression	0		11017079	0					
ANR	11017158	ReturnType	static int		11017079	1					
ANR	11017159	Identifier	labvalidate		11017079	2					
ANR	11017160	ParameterList	"i_ctx_t * i_ctx_p , ref * space , float * values , int num_comps"		11017079	3					
ANR	11017161	Parameter	i_ctx_t * i_ctx_p	5174:23:163275:163290	11017079	0	True				
ANR	11017162	ParameterType	i_ctx_t *		11017079	0					
ANR	11017163	Identifier	i_ctx_p		11017079	1					
ANR	11017164	Parameter	ref * space	5174:41:163293:163302	11017079	1	True				
ANR	11017165	ParameterType	ref *		11017079	0					
ANR	11017166	Identifier	space		11017079	1					
ANR	11017167	Parameter	float * values	5174:53:163305:163317	11017079	2	True				
ANR	11017168	ParameterType	float *		11017079	0					
ANR	11017169	Identifier	values		11017079	1					
ANR	11017170	Parameter	int num_comps	5174:68:163320:163332	11017079	3	True				
ANR	11017171	ParameterType	int		11017079	0					
ANR	11017172	Identifier	num_comps		11017079	1					
ANR	11017173	CFGEntryNode	ENTRY		11017079		True				
ANR	11017174	CFGExitNode	EXIT		11017079		True				
ANR	11017175	Symbol	op		11017079						
ANR	11017176	Symbol	r_has_type		11017079						
ANR	11017177	Symbol	gs_error_typecheck		11017079						
ANR	11017178	Symbol	t_integer		11017079						
ANR	11017179	Symbol	gs_error_stackunderflow		11017079						
ANR	11017180	Symbol	i_ctx_p		11017079						
ANR	11017181	Symbol	values		11017079						
ANR	11017182	Symbol	num_comps		11017079						
ANR	11017183	Symbol	i		11017079						
ANR	11017184	Symbol	t_real		11017079						
ANR	11017185	Symbol	osp		11017079						
ANR	11017186	Symbol	space		11017079						
ANR	11017187	Function	checkCalMatrix	5191:0:163694:164210							
ANR	11017188	FunctionDef	"checkCalMatrix (i_ctx_t * i_ctx_p , ref * CIEdict)"		11017187	0					
ANR	11017189	CompoundStatement		5192:0:163753:164210	11017187	0					
ANR	11017190	IdentifierDeclStatement	int code ;	5193:4:163759:163767	11017187	0	True				
ANR	11017191	IdentifierDecl	code		11017187	0					
ANR	11017192	IdentifierDeclType	int		11017187	0					
ANR	11017193	Identifier	code		11017187	1					
ANR	11017194	IdentifierDeclStatement	float value [ 9 ] ;	5194:4:163773:163787	11017187	1	True				
ANR	11017195	IdentifierDecl	value [ 9 ]		11017187	0					
ANR	11017196	IdentifierDeclType	float [ 9 ]		11017187	0					
ANR	11017197	Identifier	value		11017187	1					
ANR	11017198	PrimaryExpression	9		11017187	2					
ANR	11017199	IdentifierDeclStatement	ref * tempref ;	5195:4:163793:163805	11017187	2	True				
ANR	11017200	IdentifierDecl	* tempref		11017187	0					
ANR	11017201	IdentifierDeclType	ref *		11017187	0					
ANR	11017202	Identifier	tempref		11017187	1					
ANR	11017203	ExpressionStatement	"code = dict_find_string ( CIEdict , ""Matrix"" , & tempref )"	5197:4:163812:163864	11017187	3	True				
ANR	11017204	AssignmentExpression	"code = dict_find_string ( CIEdict , ""Matrix"" , & tempref )"		11017187	0		=			
ANR	11017205	Identifier	code		11017187	0					
ANR	11017206	CallExpression	"dict_find_string ( CIEdict , ""Matrix"" , & tempref )"		11017187	1					
ANR	11017207	Callee	dict_find_string		11017187	0					
ANR	11017208	Identifier	dict_find_string		11017187	0					
ANR	11017209	ArgumentList	CIEdict		11017187	1					
ANR	11017210	Argument	CIEdict		11017187	0					
ANR	11017211	Identifier	CIEdict		11017187	0					
ANR	11017212	Argument	"""Matrix"""		11017187	1					
ANR	11017213	PrimaryExpression	"""Matrix"""		11017187	0					
ANR	11017214	Argument	& tempref		11017187	2					
ANR	11017215	UnaryOperationExpression	& tempref		11017187	0					
ANR	11017216	UnaryOperator	&		11017187	0					
ANR	11017217	Identifier	tempref		11017187	1					
ANR	11017218	IfStatement	"if ( code > 0 && ! r_has_type ( tempref , t_null ) )"		11017187	4					
ANR	11017219	Condition	"code > 0 && ! r_has_type ( tempref , t_null )"	5198:8:163874:163913	11017187	0	True				
ANR	11017220	AndExpression	"code > 0 && ! r_has_type ( tempref , t_null )"		11017187	0		&&			
ANR	11017221	RelationalExpression	code > 0		11017187	0		>			
ANR	11017222	Identifier	code		11017187	0					
ANR	11017223	PrimaryExpression	0		11017187	1					
ANR	11017224	UnaryOperationExpression	"! r_has_type ( tempref , t_null )"		11017187	1					
ANR	11017225	UnaryOperator	!		11017187	0					
ANR	11017226	CallExpression	"r_has_type ( tempref , t_null )"		11017187	1					
ANR	11017227	Callee	r_has_type		11017187	0					
ANR	11017228	Identifier	r_has_type		11017187	0					
ANR	11017229	ArgumentList	tempref		11017187	1					
ANR	11017230	Argument	tempref		11017187	0					
ANR	11017231	Identifier	tempref		11017187	0					
ANR	11017232	Argument	t_null		11017187	1					
ANR	11017233	Identifier	t_null		11017187	0					
ANR	11017234	CompoundStatement		7:50:162:162	11017187	1					
ANR	11017235	IfStatement	if ( ! r_is_array ( tempref ) )		11017187	0					
ANR	11017236	Condition	! r_is_array ( tempref )	5199:12:163930:163949	11017187	0	True				
ANR	11017237	UnaryOperationExpression	! r_is_array ( tempref )		11017187	0					
ANR	11017238	UnaryOperator	!		11017187	0					
ANR	11017239	CallExpression	r_is_array ( tempref )		11017187	1					
ANR	11017240	Callee	r_is_array		11017187	0					
ANR	11017241	Identifier	r_is_array		11017187	0					
ANR	11017242	ArgumentList	tempref		11017187	1					
ANR	11017243	Argument	tempref		11017187	0					
ANR	11017244	Identifier	tempref		11017187	0					
ANR	11017245	ExpressionStatement	return_error ( gs_error_typecheck )	5200:12:163964:163996	11017187	1	True				
ANR	11017246	CallExpression	return_error ( gs_error_typecheck )		11017187	0					
ANR	11017247	Callee	return_error		11017187	0					
ANR	11017248	Identifier	return_error		11017187	0					
ANR	11017249	ArgumentList	gs_error_typecheck		11017187	1					
ANR	11017250	Argument	gs_error_typecheck		11017187	0					
ANR	11017251	Identifier	gs_error_typecheck		11017187	0					
ANR	11017252	IfStatement	if ( r_size ( tempref ) != 9 )		11017187	1					
ANR	11017253	Condition	r_size ( tempref ) != 9	5201:12:164010:164029	11017187	0	True				
ANR	11017254	EqualityExpression	r_size ( tempref ) != 9		11017187	0		!=			
ANR	11017255	CallExpression	r_size ( tempref )		11017187	0					
ANR	11017256	Callee	r_size		11017187	0					
ANR	11017257	Identifier	r_size		11017187	0					
ANR	11017258	ArgumentList	tempref		11017187	1					
ANR	11017259	Argument	tempref		11017187	0					
ANR	11017260	Identifier	tempref		11017187	0					
ANR	11017261	PrimaryExpression	9		11017187	1					
ANR	11017262	ExpressionStatement	return_error ( gs_error_rangecheck )	5202:12:164044:164077	11017187	1	True				
ANR	11017263	CallExpression	return_error ( gs_error_rangecheck )		11017187	0					
ANR	11017264	Callee	return_error		11017187	0					
ANR	11017265	Identifier	return_error		11017187	0					
ANR	11017266	ArgumentList	gs_error_rangecheck		11017187	1					
ANR	11017267	Argument	gs_error_rangecheck		11017187	0					
ANR	11017268	Identifier	gs_error_rangecheck		11017187	0					
ANR	11017269	ExpressionStatement	"code = get_cie_param_array ( imemory , tempref , 9 , value )"	5203:8:164087:164141	11017187	2	True				
ANR	11017270	AssignmentExpression	"code = get_cie_param_array ( imemory , tempref , 9 , value )"		11017187	0		=			
ANR	11017271	Identifier	code		11017187	0					
ANR	11017272	CallExpression	"get_cie_param_array ( imemory , tempref , 9 , value )"		11017187	1					
ANR	11017273	Callee	get_cie_param_array		11017187	0					
ANR	11017274	Identifier	get_cie_param_array		11017187	0					
ANR	11017275	ArgumentList	imemory		11017187	1					
ANR	11017276	Argument	imemory		11017187	0					
ANR	11017277	Identifier	imemory		11017187	0					
ANR	11017278	Argument	tempref		11017187	1					
ANR	11017279	Identifier	tempref		11017187	0					
ANR	11017280	Argument	9		11017187	2					
ANR	11017281	PrimaryExpression	9		11017187	0					
ANR	11017282	Argument	value		11017187	3					
ANR	11017283	Identifier	value		11017187	0					
ANR	11017284	IfStatement	if ( code < 0 )		11017187	3					
ANR	11017285	Condition	code < 0	5204:12:164155:164162	11017187	0	True				
ANR	11017286	RelationalExpression	code < 0		11017187	0		<			
ANR	11017287	Identifier	code		11017187	0					
ANR	11017288	PrimaryExpression	0		11017187	1					
ANR	11017289	ReturnStatement	return code ;	5205:12:164177:164188	11017187	1	True				
ANR	11017290	Identifier	code		11017187	0					
ANR	11017291	ReturnStatement	return 0 ;	5207:4:164200:164208	11017187	5	True				
ANR	11017292	PrimaryExpression	0		11017187	0					
ANR	11017293	ReturnType	static int		11017187	1					
ANR	11017294	Identifier	checkCalMatrix		11017187	2					
ANR	11017295	ParameterList	"i_ctx_t * i_ctx_p , ref * CIEdict"		11017187	3					
ANR	11017296	Parameter	i_ctx_t * i_ctx_p	5191:26:163720:163736	11017187	0	True				
ANR	11017297	ParameterType	i_ctx_t *		11017187	0					
ANR	11017298	Identifier	i_ctx_p		11017187	1					
ANR	11017299	Parameter	ref * CIEdict	5191:45:163739:163750	11017187	1	True				
ANR	11017300	ParameterType	ref *		11017187	0					
ANR	11017301	Identifier	CIEdict		11017187	1					
ANR	11017302	CFGEntryNode	ENTRY		11017187		True				
ANR	11017303	CFGExitNode	EXIT		11017187		True				
ANR	11017304	Symbol	code		11017187						
ANR	11017305	Symbol	dict_find_string		11017187						
ANR	11017306	Symbol	gs_error_rangecheck		11017187						
ANR	11017307	Symbol	& tempref		11017187						
ANR	11017308	Symbol	t_null		11017187						
ANR	11017309	Symbol	r_has_type		11017187						
ANR	11017310	Symbol	gs_error_typecheck		11017187						
ANR	11017311	Symbol	i_ctx_p		11017187						
ANR	11017312	Symbol	r_size		11017187						
ANR	11017313	Symbol	CIEdict		11017187						
ANR	11017314	Symbol	r_is_array		11017187						
ANR	11017315	Symbol	imemory		11017187						
ANR	11017316	Symbol	get_cie_param_array		11017187						
ANR	11017317	Symbol	value		11017187						
ANR	11017318	Symbol	tempref		11017187						
ANR	11017319	Function	checkGamma	5211:0:164279:165772							
ANR	11017320	FunctionDef	"checkGamma (i_ctx_t * i_ctx_p , ref * CIEdict , int numvalues)"		11017319	0					
ANR	11017321	CompoundStatement		5212:0:164349:165772	11017319	0					
ANR	11017322	IdentifierDeclStatement	"int code = 0 , i ;"	5213:4:164355:164370	11017319	0	True				
ANR	11017323	IdentifierDecl	code = 0		11017319	0					
ANR	11017324	IdentifierDeclType	int		11017319	0					
ANR	11017325	Identifier	code		11017319	1					
ANR	11017326	AssignmentExpression	code = 0		11017319	2		=			
ANR	11017327	Identifier	code		11017319	0					
ANR	11017328	PrimaryExpression	0		11017319	1					
ANR	11017329	IdentifierDecl	i		11017319	1					
ANR	11017330	IdentifierDeclType	int		11017319	0					
ANR	11017331	Identifier	i		11017319	1					
ANR	11017332	IdentifierDeclStatement	float value [ 3 ] ;	5214:4:164376:164390	11017319	1	True				
ANR	11017333	IdentifierDecl	value [ 3 ]		11017319	0					
ANR	11017334	IdentifierDeclType	float [ 3 ]		11017319	0					
ANR	11017335	Identifier	value		11017319	1					
ANR	11017336	PrimaryExpression	3		11017319	2					
ANR	11017337	IdentifierDeclStatement	"ref * tempref , valref ;"	5215:4:164396:164416	11017319	2	True				
ANR	11017338	IdentifierDecl	* tempref		11017319	0					
ANR	11017339	IdentifierDeclType	ref *		11017319	0					
ANR	11017340	Identifier	tempref		11017319	1					
ANR	11017341	IdentifierDecl	valref		11017319	1					
ANR	11017342	IdentifierDeclType	ref		11017319	0					
ANR	11017343	Identifier	valref		11017319	1					
ANR	11017344	ExpressionStatement	"code = dict_find_string ( CIEdict , ""Gamma"" , & tempref )"	5217:4:164423:164474	11017319	3	True				
ANR	11017345	AssignmentExpression	"code = dict_find_string ( CIEdict , ""Gamma"" , & tempref )"		11017319	0		=			
ANR	11017346	Identifier	code		11017319	0					
ANR	11017347	CallExpression	"dict_find_string ( CIEdict , ""Gamma"" , & tempref )"		11017319	1					
ANR	11017348	Callee	dict_find_string		11017319	0					
ANR	11017349	Identifier	dict_find_string		11017319	0					
ANR	11017350	ArgumentList	CIEdict		11017319	1					
ANR	11017351	Argument	CIEdict		11017319	0					
ANR	11017352	Identifier	CIEdict		11017319	0					
ANR	11017353	Argument	"""Gamma"""		11017319	1					
ANR	11017354	PrimaryExpression	"""Gamma"""		11017319	0					
ANR	11017355	Argument	& tempref		11017319	2					
ANR	11017356	UnaryOperationExpression	& tempref		11017319	0					
ANR	11017357	UnaryOperator	&		11017319	0					
ANR	11017358	Identifier	tempref		11017319	1					
ANR	11017359	IfStatement	"if ( code > 0 && ! r_has_type ( tempref , t_null ) )"		11017319	4					
ANR	11017360	Condition	"code > 0 && ! r_has_type ( tempref , t_null )"	5218:8:164484:164523	11017319	0	True				
ANR	11017361	AndExpression	"code > 0 && ! r_has_type ( tempref , t_null )"		11017319	0		&&			
ANR	11017362	RelationalExpression	code > 0		11017319	0		>			
ANR	11017363	Identifier	code		11017319	0					
ANR	11017364	PrimaryExpression	0		11017319	1					
ANR	11017365	UnaryOperationExpression	"! r_has_type ( tempref , t_null )"		11017319	1					
ANR	11017366	UnaryOperator	!		11017319	0					
ANR	11017367	CallExpression	"r_has_type ( tempref , t_null )"		11017319	1					
ANR	11017368	Callee	r_has_type		11017319	0					
ANR	11017369	Identifier	r_has_type		11017319	0					
ANR	11017370	ArgumentList	tempref		11017319	1					
ANR	11017371	Argument	tempref		11017319	0					
ANR	11017372	Identifier	tempref		11017319	0					
ANR	11017373	Argument	t_null		11017319	1					
ANR	11017374	Identifier	t_null		11017319	0					
ANR	11017375	CompoundStatement		7:50:176:176	11017319	1					
ANR	11017376	IfStatement	if ( numvalues > 1 )		11017319	0					
ANR	11017377	Condition	numvalues > 1	5219:12:164540:164552	11017319	0	True				
ANR	11017378	RelationalExpression	numvalues > 1		11017319	0		>			
ANR	11017379	Identifier	numvalues		11017319	0					
ANR	11017380	PrimaryExpression	1		11017319	1					
ANR	11017381	CompoundStatement		8:27:205:205	11017319	1					
ANR	11017382	IfStatement	if ( ! r_is_array ( tempref ) )		11017319	0					
ANR	11017383	Condition	! r_is_array ( tempref )	5221:16:164613:164632	11017319	0	True				
ANR	11017384	UnaryOperationExpression	! r_is_array ( tempref )		11017319	0					
ANR	11017385	UnaryOperator	!		11017319	0					
ANR	11017386	CallExpression	r_is_array ( tempref )		11017319	1					
ANR	11017387	Callee	r_is_array		11017319	0					
ANR	11017388	Identifier	r_is_array		11017319	0					
ANR	11017389	ArgumentList	tempref		11017319	1					
ANR	11017390	Argument	tempref		11017319	0					
ANR	11017391	Identifier	tempref		11017319	0					
ANR	11017392	ExpressionStatement	return_error ( gs_error_typecheck )	5222:16:164651:164683	11017319	1	True				
ANR	11017393	CallExpression	return_error ( gs_error_typecheck )		11017319	0					
ANR	11017394	Callee	return_error		11017319	0					
ANR	11017395	Identifier	return_error		11017319	0					
ANR	11017396	ArgumentList	gs_error_typecheck		11017319	1					
ANR	11017397	Argument	gs_error_typecheck		11017319	0					
ANR	11017398	Identifier	gs_error_typecheck		11017319	0					
ANR	11017399	IfStatement	if ( r_size ( tempref ) != numvalues )		11017319	1					
ANR	11017400	Condition	r_size ( tempref ) != numvalues	5223:16:164701:164728	11017319	0	True				
ANR	11017401	EqualityExpression	r_size ( tempref ) != numvalues		11017319	0		!=			
ANR	11017402	CallExpression	r_size ( tempref )		11017319	0					
ANR	11017403	Callee	r_size		11017319	0					
ANR	11017404	Identifier	r_size		11017319	0					
ANR	11017405	ArgumentList	tempref		11017319	1					
ANR	11017406	Argument	tempref		11017319	0					
ANR	11017407	Identifier	tempref		11017319	0					
ANR	11017408	Identifier	numvalues		11017319	1					
ANR	11017409	ExpressionStatement	return_error ( gs_error_rangecheck )	5224:16:164747:164780	11017319	1	True				
ANR	11017410	CallExpression	return_error ( gs_error_rangecheck )		11017319	0					
ANR	11017411	Callee	return_error		11017319	0					
ANR	11017412	Identifier	return_error		11017319	0					
ANR	11017413	ArgumentList	gs_error_rangecheck		11017319	1					
ANR	11017414	Argument	gs_error_rangecheck		11017319	0					
ANR	11017415	Identifier	gs_error_rangecheck		11017319	0					
ANR	11017416	ForStatement	for ( i = 0 ; i < numvalues ; i ++ )		11017319	2					
ANR	11017417	ForInit	i = 0 ;	5225:17:164799:164802	11017319	0	True				
ANR	11017418	AssignmentExpression	i = 0		11017319	0		=			
ANR	11017419	Identifier	i		11017319	0					
ANR	11017420	PrimaryExpression	0		11017319	1					
ANR	11017421	Condition	i < numvalues	5225:21:164803:164813	11017319	1	True				
ANR	11017422	RelationalExpression	i < numvalues		11017319	0		<			
ANR	11017423	Identifier	i		11017319	0					
ANR	11017424	Identifier	numvalues		11017319	1					
ANR	11017425	PostIncDecOperationExpression	i ++	5225:33:164815:164817	11017319	2	True				
ANR	11017426	Identifier	i		11017319	0					
ANR	11017427	IncDec	++		11017319	1					
ANR	11017428	CompoundStatement		14:38:470:470	11017319	3					
ANR	11017429	ExpressionStatement	"code = array_get ( imemory , tempref , i , & valref )"	5226:16:164838:164884	11017319	0	True				
ANR	11017430	AssignmentExpression	"code = array_get ( imemory , tempref , i , & valref )"		11017319	0		=			
ANR	11017431	Identifier	code		11017319	0					
ANR	11017432	CallExpression	"array_get ( imemory , tempref , i , & valref )"		11017319	1					
ANR	11017433	Callee	array_get		11017319	0					
ANR	11017434	Identifier	array_get		11017319	0					
ANR	11017435	ArgumentList	imemory		11017319	1					
ANR	11017436	Argument	imemory		11017319	0					
ANR	11017437	Identifier	imemory		11017319	0					
ANR	11017438	Argument	tempref		11017319	1					
ANR	11017439	Identifier	tempref		11017319	0					
ANR	11017440	Argument	i		11017319	2					
ANR	11017441	Identifier	i		11017319	0					
ANR	11017442	Argument	& valref		11017319	3					
ANR	11017443	UnaryOperationExpression	& valref		11017319	0					
ANR	11017444	UnaryOperator	&		11017319	0					
ANR	11017445	Identifier	valref		11017319	1					
ANR	11017446	IfStatement	if ( code < 0 )		11017319	1					
ANR	11017447	Condition	code < 0	5227:20:164906:164913	11017319	0	True				
ANR	11017448	RelationalExpression	code < 0		11017319	0		<			
ANR	11017449	Identifier	code		11017319	0					
ANR	11017450	PrimaryExpression	0		11017319	1					
ANR	11017451	ReturnStatement	return code ;	5228:20:164936:164947	11017319	1	True				
ANR	11017452	Identifier	code		11017319	0					
ANR	11017453	IfStatement	"if ( r_has_type ( & valref , t_integer ) )"		11017319	2					
ANR	11017454	Condition	"r_has_type ( & valref , t_integer )"	5229:20:164969:164998	11017319	0	True				
ANR	11017455	CallExpression	"r_has_type ( & valref , t_integer )"		11017319	0					
ANR	11017456	Callee	r_has_type		11017319	0					
ANR	11017457	Identifier	r_has_type		11017319	0					
ANR	11017458	ArgumentList	& valref		11017319	1					
ANR	11017459	Argument	& valref		11017319	0					
ANR	11017460	UnaryOperationExpression	& valref		11017319	0					
ANR	11017461	UnaryOperator	&		11017319	0					
ANR	11017462	Identifier	valref		11017319	1					
ANR	11017463	Argument	t_integer		11017319	1					
ANR	11017464	Identifier	t_integer		11017319	0					
ANR	11017465	ExpressionStatement	value [ i ] = ( float ) valref . value . intval	5230:20:165021:165058	11017319	1	True				
ANR	11017466	AssignmentExpression	value [ i ] = ( float ) valref . value . intval		11017319	0		=			
ANR	11017467	ArrayIndexing	value [ i ]		11017319	0					
ANR	11017468	Identifier	value		11017319	0					
ANR	11017469	Identifier	i		11017319	1					
ANR	11017470	CastExpression	( float ) valref . value . intval		11017319	1					
ANR	11017471	CastTarget	float		11017319	0					
ANR	11017472	MemberAccess	valref . value . intval		11017319	1					
ANR	11017473	MemberAccess	valref . value		11017319	0					
ANR	11017474	Identifier	valref		11017319	0					
ANR	11017475	Identifier	value		11017319	1					
ANR	11017476	Identifier	intval		11017319	1					
ANR	11017477	ElseStatement	else		11017319	0					
ANR	11017478	IfStatement	"if ( r_has_type ( & valref , t_real ) )"		11017319	0					
ANR	11017479	Condition	"r_has_type ( & valref , t_real )"	5231:25:165085:165111	11017319	0	True				
ANR	11017480	CallExpression	"r_has_type ( & valref , t_real )"		11017319	0					
ANR	11017481	Callee	r_has_type		11017319	0					
ANR	11017482	Identifier	r_has_type		11017319	0					
ANR	11017483	ArgumentList	& valref		11017319	1					
ANR	11017484	Argument	& valref		11017319	0					
ANR	11017485	UnaryOperationExpression	& valref		11017319	0					
ANR	11017486	UnaryOperator	&		11017319	0					
ANR	11017487	Identifier	valref		11017319	1					
ANR	11017488	Argument	t_real		11017319	1					
ANR	11017489	Identifier	t_real		11017319	0					
ANR	11017490	ExpressionStatement	value [ i ] = ( float ) valref . value . realval	5232:20:165134:165172	11017319	1	True				
ANR	11017491	AssignmentExpression	value [ i ] = ( float ) valref . value . realval		11017319	0		=			
ANR	11017492	ArrayIndexing	value [ i ]		11017319	0					
ANR	11017493	Identifier	value		11017319	0					
ANR	11017494	Identifier	i		11017319	1					
ANR	11017495	CastExpression	( float ) valref . value . realval		11017319	1					
ANR	11017496	CastTarget	float		11017319	0					
ANR	11017497	MemberAccess	valref . value . realval		11017319	1					
ANR	11017498	MemberAccess	valref . value		11017319	0					
ANR	11017499	Identifier	valref		11017319	0					
ANR	11017500	Identifier	value		11017319	1					
ANR	11017501	Identifier	realval		11017319	1					
ANR	11017502	ElseStatement	else		11017319	0					
ANR	11017503	ExpressionStatement	return_error ( gs_error_typecheck )	5234:20:165215:165247	11017319	0	True				
ANR	11017504	CallExpression	return_error ( gs_error_typecheck )		11017319	0					
ANR	11017505	Callee	return_error		11017319	0					
ANR	11017506	Identifier	return_error		11017319	0					
ANR	11017507	ArgumentList	gs_error_typecheck		11017319	1					
ANR	11017508	Argument	gs_error_typecheck		11017319	0					
ANR	11017509	Identifier	gs_error_typecheck		11017319	0					
ANR	11017510	IfStatement	if ( value [ i ] <= 0 )		11017319	3					
ANR	11017511	Condition	value [ i ] <= 0	5235:20:165269:165281	11017319	0	True				
ANR	11017512	RelationalExpression	value [ i ] <= 0		11017319	0		<=			
ANR	11017513	ArrayIndexing	value [ i ]		11017319	0					
ANR	11017514	Identifier	value		11017319	0					
ANR	11017515	Identifier	i		11017319	1					
ANR	11017516	PrimaryExpression	0		11017319	1					
ANR	11017517	ExpressionStatement	return_error ( gs_error_rangecheck )	5235:35:165284:165317	11017319	1	True				
ANR	11017518	CallExpression	return_error ( gs_error_rangecheck )		11017319	0					
ANR	11017519	Callee	return_error		11017319	0					
ANR	11017520	Identifier	return_error		11017319	0					
ANR	11017521	ArgumentList	gs_error_rangecheck		11017319	1					
ANR	11017522	Argument	gs_error_rangecheck		11017319	0					
ANR	11017523	Identifier	gs_error_rangecheck		11017319	0					
ANR	11017524	ElseStatement	else		11017319	0					
ANR	11017525	CompoundStatement		26:15:998:998	11017319	0					
ANR	11017526	IfStatement	"if ( r_has_type ( tempref , t_real ) )"		11017319	0					
ANR	11017527	Condition	"r_has_type ( tempref , t_real )"	5239:16:165404:165430	11017319	0	True				
ANR	11017528	CallExpression	"r_has_type ( tempref , t_real )"		11017319	0					
ANR	11017529	Callee	r_has_type		11017319	0					
ANR	11017530	Identifier	r_has_type		11017319	0					
ANR	11017531	ArgumentList	tempref		11017319	1					
ANR	11017532	Argument	tempref		11017319	0					
ANR	11017533	Identifier	tempref		11017319	0					
ANR	11017534	Argument	t_real		11017319	1					
ANR	11017535	Identifier	t_real		11017319	0					
ANR	11017536	ExpressionStatement	value [ 0 ] = ( float ) ( tempref -> value . realval )	5240:16:165449:165491	11017319	1	True				
ANR	11017537	AssignmentExpression	value [ 0 ] = ( float ) ( tempref -> value . realval )		11017319	0		=			
ANR	11017538	ArrayIndexing	value [ 0 ]		11017319	0					
ANR	11017539	Identifier	value		11017319	0					
ANR	11017540	PrimaryExpression	0		11017319	1					
ANR	11017541	CastExpression	( float ) ( tempref -> value . realval )		11017319	1					
ANR	11017542	CastTarget	float		11017319	0					
ANR	11017543	MemberAccess	tempref -> value . realval		11017319	1					
ANR	11017544	PtrMemberAccess	tempref -> value		11017319	0					
ANR	11017545	Identifier	tempref		11017319	0					
ANR	11017546	Identifier	value		11017319	1					
ANR	11017547	Identifier	realval		11017319	1					
ANR	11017548	ElseStatement	else		11017319	0					
ANR	11017549	IfStatement	"if ( r_has_type ( tempref , t_integer ) )"		11017319	0					
ANR	11017550	Condition	"r_has_type ( tempref , t_integer )"	5241:21:165514:165543	11017319	0	True				
ANR	11017551	CallExpression	"r_has_type ( tempref , t_integer )"		11017319	0					
ANR	11017552	Callee	r_has_type		11017319	0					
ANR	11017553	Identifier	r_has_type		11017319	0					
ANR	11017554	ArgumentList	tempref		11017319	1					
ANR	11017555	Argument	tempref		11017319	0					
ANR	11017556	Identifier	tempref		11017319	0					
ANR	11017557	Argument	t_integer		11017319	1					
ANR	11017558	Identifier	t_integer		11017319	0					
ANR	11017559	ExpressionStatement	value [ 0 ] = ( float ) ( tempref -> value . intval )	5242:20:165566:165607	11017319	1	True				
ANR	11017560	AssignmentExpression	value [ 0 ] = ( float ) ( tempref -> value . intval )		11017319	0		=			
ANR	11017561	ArrayIndexing	value [ 0 ]		11017319	0					
ANR	11017562	Identifier	value		11017319	0					
ANR	11017563	PrimaryExpression	0		11017319	1					
ANR	11017564	CastExpression	( float ) ( tempref -> value . intval )		11017319	1					
ANR	11017565	CastTarget	float		11017319	0					
ANR	11017566	MemberAccess	tempref -> value . intval		11017319	1					
ANR	11017567	PtrMemberAccess	tempref -> value		11017319	0					
ANR	11017568	Identifier	tempref		11017319	0					
ANR	11017569	Identifier	value		11017319	1					
ANR	11017570	Identifier	intval		11017319	1					
ANR	11017571	ElseStatement	else		11017319	0					
ANR	11017572	ExpressionStatement	return_error ( gs_error_typecheck )	5244:16:165642:165674	11017319	0	True				
ANR	11017573	CallExpression	return_error ( gs_error_typecheck )		11017319	0					
ANR	11017574	Callee	return_error		11017319	0					
ANR	11017575	Identifier	return_error		11017319	0					
ANR	11017576	ArgumentList	gs_error_typecheck		11017319	1					
ANR	11017577	Argument	gs_error_typecheck		11017319	0					
ANR	11017578	Identifier	gs_error_typecheck		11017319	0					
ANR	11017579	IfStatement	if ( value [ 0 ] <= 0 )		11017319	1					
ANR	11017580	Condition	value [ 0 ] <= 0	5245:16:165692:165704	11017319	0	True				
ANR	11017581	RelationalExpression	value [ 0 ] <= 0		11017319	0		<=			
ANR	11017582	ArrayIndexing	value [ 0 ]		11017319	0					
ANR	11017583	Identifier	value		11017319	0					
ANR	11017584	PrimaryExpression	0		11017319	1					
ANR	11017585	PrimaryExpression	0		11017319	1					
ANR	11017586	ExpressionStatement	return_error ( gs_error_rangecheck )	5245:31:165707:165740	11017319	1	True				
ANR	11017587	CallExpression	return_error ( gs_error_rangecheck )		11017319	0					
ANR	11017588	Callee	return_error		11017319	0					
ANR	11017589	Identifier	return_error		11017319	0					
ANR	11017590	ArgumentList	gs_error_rangecheck		11017319	1					
ANR	11017591	Argument	gs_error_rangecheck		11017319	0					
ANR	11017592	Identifier	gs_error_rangecheck		11017319	0					
ANR	11017593	ReturnStatement	return 0 ;	5248:4:165762:165770	11017319	5	True				
ANR	11017594	PrimaryExpression	0		11017319	0					
ANR	11017595	ReturnType	static int		11017319	1					
ANR	11017596	Identifier	checkGamma		11017319	2					
ANR	11017597	ParameterList	"i_ctx_t * i_ctx_p , ref * CIEdict , int numvalues"		11017319	3					
ANR	11017598	Parameter	i_ctx_t * i_ctx_p	5211:22:164301:164317	11017319	0	True				
ANR	11017599	ParameterType	i_ctx_t *		11017319	0					
ANR	11017600	Identifier	i_ctx_p		11017319	1					
ANR	11017601	Parameter	ref * CIEdict	5211:41:164320:164331	11017319	1	True				
ANR	11017602	ParameterType	ref *		11017319	0					
ANR	11017603	Identifier	CIEdict		11017319	1					
ANR	11017604	Parameter	int numvalues	5211:55:164334:164346	11017319	2	True				
ANR	11017605	ParameterType	int		11017319	0					
ANR	11017606	Identifier	numvalues		11017319	1					
ANR	11017607	CFGEntryNode	ENTRY		11017319		True				
ANR	11017608	CFGExitNode	EXIT		11017319		True				
ANR	11017609	Symbol	valref . value		11017319						
ANR	11017610	Symbol	code		11017319						
ANR	11017611	Symbol	gs_error_rangecheck		11017319						
ANR	11017612	Symbol	* tempref		11017319						
ANR	11017613	Symbol	tempref -> value . realval		11017319						
ANR	11017614	Symbol	valref . value . realval		11017319						
ANR	11017615	Symbol	r_has_type		11017319						
ANR	11017616	Symbol	t_null		11017319						
ANR	11017617	Symbol	gs_error_typecheck		11017319						
ANR	11017618	Symbol	& valref		11017319						
ANR	11017619	Symbol	numvalues		11017319						
ANR	11017620	Symbol	r_size		11017319						
ANR	11017621	Symbol	CIEdict		11017319						
ANR	11017622	Symbol	imemory		11017319						
ANR	11017623	Symbol	value		11017319						
ANR	11017624	Symbol	tempref		11017319						
ANR	11017625	Symbol	tempref -> value . intval		11017319						
ANR	11017626	Symbol	dict_find_string		11017319						
ANR	11017627	Symbol	array_get		11017319						
ANR	11017628	Symbol	i		11017319						
ANR	11017629	Symbol	& tempref		11017319						
ANR	11017630	Symbol	t_real		11017319						
ANR	11017631	Symbol	tempref -> value		11017319						
ANR	11017632	Symbol	* i		11017319						
ANR	11017633	Symbol	t_integer		11017319						
ANR	11017634	Symbol	valref . value . intval		11017319						
ANR	11017635	Symbol	i_ctx_p		11017319						
ANR	11017636	Symbol	* value		11017319						
ANR	11017637	Symbol	valref		11017319						
ANR	11017638	Symbol	r_is_array		11017319						
ANR	11017639	Function	setcalgrayspace	5252:0:165847:167447							
ANR	11017640	FunctionDef	"setcalgrayspace (i_ctx_t * i_ctx_p , ref * r , int * stage , int * cont , int CIESubst)"		11017639	0					
ANR	11017641	CompoundStatement		5253:0:165938:167447	11017639	0					
ANR	11017642	IdentifierDeclStatement	ref graydict ;	5254:4:165944:165956	11017639	0	True				
ANR	11017643	IdentifierDecl	graydict		11017639	0					
ANR	11017644	IdentifierDeclType	ref		11017639	0					
ANR	11017645	Identifier	graydict		11017639	1					
ANR	11017646	IdentifierDeclStatement	int code = 0 ;	5255:4:165962:165974	11017639	1	True				
ANR	11017647	IdentifierDecl	code = 0		11017639	0					
ANR	11017648	IdentifierDeclType	int		11017639	0					
ANR	11017649	Identifier	code		11017639	1					
ANR	11017650	AssignmentExpression	code = 0		11017639	2		=			
ANR	11017651	Identifier	code		11017639	0					
ANR	11017652	PrimaryExpression	0		11017639	1					
ANR	11017653	IdentifierDeclStatement	"float gamma , white [ 3 ] , black [ 3 ] ;"	5256:4:165980:166029	11017639	2	True				
ANR	11017654	IdentifierDecl	gamma		11017639	0					
ANR	11017655	IdentifierDeclType	float		11017639	0					
ANR	11017656	Identifier	gamma		11017639	1					
ANR	11017657	IdentifierDecl	white [ 3 ]		11017639	1					
ANR	11017658	IdentifierDeclType	float [ 3 ]		11017639	0					
ANR	11017659	Identifier	white		11017639	1					
ANR	11017660	PrimaryExpression	3		11017639	2					
ANR	11017661	IdentifierDecl	black [ 3 ]		11017639	2					
ANR	11017662	IdentifierDeclType	float [ 3 ]		11017639	0					
ANR	11017663	Identifier	black		11017639	1					
ANR	11017664	PrimaryExpression	3		11017639	2					
ANR	11017665	IdentifierDeclStatement	double dflt_gamma = 1.0 ;	5257:4:166035:166075	11017639	3	True				
ANR	11017666	IdentifierDecl	dflt_gamma = 1.0		11017639	0					
ANR	11017667	IdentifierDeclType	double		11017639	0					
ANR	11017668	Identifier	dflt_gamma		11017639	1					
ANR	11017669	AssignmentExpression	dflt_gamma = 1.0		11017639	2		=			
ANR	11017670	Identifier	dflt_gamma		11017639	0					
ANR	11017671	PrimaryExpression	1.0		11017639	1					
ANR	11017672	Statement	static	5258:4:166081:166086	11017639	4	True				
ANR	11017673	IdentifierDeclStatement	"const float dflt_black [ 3 ] = { 0 , 0 , 0 } , dflt_white [ 3 ] = { 0 , 0 , 0 } ;"	5258:11:166088:166153	11017639	5	True				
ANR	11017674	IdentifierDecl	"dflt_black [ 3 ] = { 0 , 0 , 0 }"		11017639	0					
ANR	11017675	IdentifierDeclType	const float [ 3 ]		11017639	0					
ANR	11017676	Identifier	dflt_black		11017639	1					
ANR	11017677	PrimaryExpression	3		11017639	2					
ANR	11017678	AssignmentExpression	"dflt_black [ 3 ] = { 0 , 0 , 0 }"		11017639	3		=			
ANR	11017679	Identifier	dflt_black		11017639	0					
ANR	11017680	InitializerList	0		11017639	1					
ANR	11017681	PrimaryExpression	0		11017639	0					
ANR	11017682	PrimaryExpression	0		11017639	1					
ANR	11017683	PrimaryExpression	0		11017639	2					
ANR	11017684	IdentifierDecl	"dflt_white [ 3 ] = { 0 , 0 , 0 }"		11017639	1					
ANR	11017685	IdentifierDeclType	const float [ 3 ]		11017639	0					
ANR	11017686	Identifier	dflt_white		11017639	1					
ANR	11017687	PrimaryExpression	3		11017639	2					
ANR	11017688	AssignmentExpression	"dflt_white [ 3 ] = { 0 , 0 , 0 }"		11017639	3		=			
ANR	11017689	Identifier	dflt_white		11017639	0					
ANR	11017690	InitializerList	0		11017639	1					
ANR	11017691	PrimaryExpression	0		11017639	0					
ANR	11017692	PrimaryExpression	0		11017639	1					
ANR	11017693	PrimaryExpression	0		11017639	2					
ANR	11017694	IdentifierDeclStatement	gs_client_color cc ;	5259:4:166159:166177	11017639	6	True				
ANR	11017695	IdentifierDecl	cc		11017639	0					
ANR	11017696	IdentifierDeclType	gs_client_color		11017639	0					
ANR	11017697	Identifier	cc		11017639	1					
ANR	11017698	ExpressionStatement	* cont = 0	5261:4:166184:166193	11017639	7	True				
ANR	11017699	AssignmentExpression	* cont = 0		11017639	0		=			
ANR	11017700	UnaryOperationExpression	* cont		11017639	0					
ANR	11017701	UnaryOperator	*		11017639	0					
ANR	11017702	Identifier	cont		11017639	1					
ANR	11017703	PrimaryExpression	0		11017639	1					
ANR	11017704	ExpressionStatement	"code = array_get ( imemory , r , 1 , & graydict )"	5262:4:166199:166241	11017639	8	True				
ANR	11017705	AssignmentExpression	"code = array_get ( imemory , r , 1 , & graydict )"		11017639	0		=			
ANR	11017706	Identifier	code		11017639	0					
ANR	11017707	CallExpression	"array_get ( imemory , r , 1 , & graydict )"		11017639	1					
ANR	11017708	Callee	array_get		11017639	0					
ANR	11017709	Identifier	array_get		11017639	0					
ANR	11017710	ArgumentList	imemory		11017639	1					
ANR	11017711	Argument	imemory		11017639	0					
ANR	11017712	Identifier	imemory		11017639	0					
ANR	11017713	Argument	r		11017639	1					
ANR	11017714	Identifier	r		11017639	0					
ANR	11017715	Argument	1		11017639	2					
ANR	11017716	PrimaryExpression	1		11017639	0					
ANR	11017717	Argument	& graydict		11017639	3					
ANR	11017718	UnaryOperationExpression	& graydict		11017639	0					
ANR	11017719	UnaryOperator	&		11017639	0					
ANR	11017720	Identifier	graydict		11017639	1					
ANR	11017721	IfStatement	if ( code < 0 )		11017639	9					
ANR	11017722	Condition	code < 0	5263:8:166251:166258	11017639	0	True				
ANR	11017723	RelationalExpression	code < 0		11017639	0		<			
ANR	11017724	Identifier	code		11017639	0					
ANR	11017725	PrimaryExpression	0		11017639	1					
ANR	11017726	ReturnStatement	return code ;	5264:8:166269:166280	11017639	1	True				
ANR	11017727	Identifier	code		11017639	0					
ANR	11017728	ExpressionStatement	"code = dict_float_param ( & graydict , ""Gamma"" , dflt_gamma , & gamma )"	5266:4:166310:166390	11017639	10	True				
ANR	11017729	AssignmentExpression	"code = dict_float_param ( & graydict , ""Gamma"" , dflt_gamma , & gamma )"		11017639	0		=			
ANR	11017730	Identifier	code		11017639	0					
ANR	11017731	CallExpression	"dict_float_param ( & graydict , ""Gamma"" , dflt_gamma , & gamma )"		11017639	1					
ANR	11017732	Callee	dict_float_param		11017639	0					
ANR	11017733	Identifier	dict_float_param		11017639	0					
ANR	11017734	ArgumentList	& graydict		11017639	1					
ANR	11017735	Argument	& graydict		11017639	0					
ANR	11017736	UnaryOperationExpression	& graydict		11017639	0					
ANR	11017737	UnaryOperator	&		11017639	0					
ANR	11017738	Identifier	graydict		11017639	1					
ANR	11017739	Argument	"""Gamma"""		11017639	1					
ANR	11017740	PrimaryExpression	"""Gamma"""		11017639	0					
ANR	11017741	Argument	dflt_gamma		11017639	2					
ANR	11017742	Identifier	dflt_gamma		11017639	0					
ANR	11017743	Argument	& gamma		11017639	3					
ANR	11017744	UnaryOperationExpression	& gamma		11017639	0					
ANR	11017745	UnaryOperator	&		11017639	0					
ANR	11017746	Identifier	gamma		11017639	1					
ANR	11017747	IfStatement	if ( code < 0 )		11017639	11					
ANR	11017748	Condition	code < 0	5268:8:166400:166407	11017639	0	True				
ANR	11017749	RelationalExpression	code < 0		11017639	0		<			
ANR	11017750	Identifier	code		11017639	0					
ANR	11017751	PrimaryExpression	0		11017639	1					
ANR	11017752	ReturnStatement	return code ;	5269:8:166418:166429	11017639	1	True				
ANR	11017753	Identifier	code		11017639	0					
ANR	11017754	IfStatement	if ( gamma <= 0 )		11017639	12					
ANR	11017755	Condition	gamma <= 0	5270:8:166439:166448	11017639	0	True				
ANR	11017756	RelationalExpression	gamma <= 0		11017639	0		<=			
ANR	11017757	Identifier	gamma		11017639	0					
ANR	11017758	PrimaryExpression	0		11017639	1					
ANR	11017759	ExpressionStatement	return_error ( gs_error_rangecheck )	5271:8:166460:166493	11017639	1	True				
ANR	11017760	CallExpression	return_error ( gs_error_rangecheck )		11017639	0					
ANR	11017761	Callee	return_error		11017639	0					
ANR	11017762	Identifier	return_error		11017639	0					
ANR	11017763	ArgumentList	gs_error_rangecheck		11017639	1					
ANR	11017764	Argument	gs_error_rangecheck		11017639	0					
ANR	11017765	Identifier	gs_error_rangecheck		11017639	0					
ANR	11017766	ExpressionStatement	"code = dict_floats_param ( imemory , & graydict , ""BlackPoint"" , 3 , black , dflt_black )"	5272:4:166499:166731	11017639	13	True				
ANR	11017767	AssignmentExpression	"code = dict_floats_param ( imemory , & graydict , ""BlackPoint"" , 3 , black , dflt_black )"		11017639	0		=			
ANR	11017768	Identifier	code		11017639	0					
ANR	11017769	CallExpression	"dict_floats_param ( imemory , & graydict , ""BlackPoint"" , 3 , black , dflt_black )"		11017639	1					
ANR	11017770	Callee	dict_floats_param		11017639	0					
ANR	11017771	Identifier	dict_floats_param		11017639	0					
ANR	11017772	ArgumentList	imemory		11017639	1					
ANR	11017773	Argument	imemory		11017639	0					
ANR	11017774	Identifier	imemory		11017639	0					
ANR	11017775	Argument	& graydict		11017639	1					
ANR	11017776	UnaryOperationExpression	& graydict		11017639	0					
ANR	11017777	UnaryOperator	&		11017639	0					
ANR	11017778	Identifier	graydict		11017639	1					
ANR	11017779	Argument	"""BlackPoint"""		11017639	2					
ANR	11017780	PrimaryExpression	"""BlackPoint"""		11017639	0					
ANR	11017781	Argument	3		11017639	3					
ANR	11017782	PrimaryExpression	3		11017639	0					
ANR	11017783	Argument	black		11017639	4					
ANR	11017784	Identifier	black		11017639	0					
ANR	11017785	Argument	dflt_black		11017639	5					
ANR	11017786	Identifier	dflt_black		11017639	0					
ANR	11017787	IfStatement	if ( code < 0 )		11017639	14					
ANR	11017788	Condition	code < 0	5278:8:166741:166748	11017639	0	True				
ANR	11017789	RelationalExpression	code < 0		11017639	0		<			
ANR	11017790	Identifier	code		11017639	0					
ANR	11017791	PrimaryExpression	0		11017639	1					
ANR	11017792	ReturnStatement	return code ;	5279:8:166759:166770	11017639	1	True				
ANR	11017793	Identifier	code		11017639	0					
ANR	11017794	ExpressionStatement	"code = dict_floats_param ( imemory , & graydict , ""WhitePoint"" , 3 , white , dflt_white )"	5280:4:166776:167008	11017639	15	True				
ANR	11017795	AssignmentExpression	"code = dict_floats_param ( imemory , & graydict , ""WhitePoint"" , 3 , white , dflt_white )"		11017639	0		=			
ANR	11017796	Identifier	code		11017639	0					
ANR	11017797	CallExpression	"dict_floats_param ( imemory , & graydict , ""WhitePoint"" , 3 , white , dflt_white )"		11017639	1					
ANR	11017798	Callee	dict_floats_param		11017639	0					
ANR	11017799	Identifier	dict_floats_param		11017639	0					
ANR	11017800	ArgumentList	imemory		11017639	1					
ANR	11017801	Argument	imemory		11017639	0					
ANR	11017802	Identifier	imemory		11017639	0					
ANR	11017803	Argument	& graydict		11017639	1					
ANR	11017804	UnaryOperationExpression	& graydict		11017639	0					
ANR	11017805	UnaryOperator	&		11017639	0					
ANR	11017806	Identifier	graydict		11017639	1					
ANR	11017807	Argument	"""WhitePoint"""		11017639	2					
ANR	11017808	PrimaryExpression	"""WhitePoint"""		11017639	0					
ANR	11017809	Argument	3		11017639	3					
ANR	11017810	PrimaryExpression	3		11017639	0					
ANR	11017811	Argument	white		11017639	4					
ANR	11017812	Identifier	white		11017639	0					
ANR	11017813	Argument	dflt_white		11017639	5					
ANR	11017814	Identifier	dflt_white		11017639	0					
ANR	11017815	IfStatement	if ( code < 0 )		11017639	16					
ANR	11017816	Condition	code < 0	5286:8:167018:167025	11017639	0	True				
ANR	11017817	RelationalExpression	code < 0		11017639	0		<			
ANR	11017818	Identifier	code		11017639	0					
ANR	11017819	PrimaryExpression	0		11017639	1					
ANR	11017820	ReturnStatement	return code ;	5287:8:167036:167047	11017639	1	True				
ANR	11017821	Identifier	code		11017639	0					
ANR	11017822	IfStatement	if ( white [ 0 ] <= 0 || white [ 1 ] != 1.0 || white [ 2 ] <= 0 )		11017639	17					
ANR	11017823	Condition	white [ 0 ] <= 0 || white [ 1 ] != 1.0 || white [ 2 ] <= 0	5288:8:167057:167105	11017639	0	True				
ANR	11017824	OrExpression	white [ 0 ] <= 0 || white [ 1 ] != 1.0 || white [ 2 ] <= 0		11017639	0		||			
ANR	11017825	RelationalExpression	white [ 0 ] <= 0		11017639	0		<=			
ANR	11017826	ArrayIndexing	white [ 0 ]		11017639	0					
ANR	11017827	Identifier	white		11017639	0					
ANR	11017828	PrimaryExpression	0		11017639	1					
ANR	11017829	PrimaryExpression	0		11017639	1					
ANR	11017830	OrExpression	white [ 1 ] != 1.0 || white [ 2 ] <= 0		11017639	1		||			
ANR	11017831	EqualityExpression	white [ 1 ] != 1.0		11017639	0		!=			
ANR	11017832	ArrayIndexing	white [ 1 ]		11017639	0					
ANR	11017833	Identifier	white		11017639	0					
ANR	11017834	PrimaryExpression	1		11017639	1					
ANR	11017835	PrimaryExpression	1.0		11017639	1					
ANR	11017836	RelationalExpression	white [ 2 ] <= 0		11017639	1		<=			
ANR	11017837	ArrayIndexing	white [ 2 ]		11017639	0					
ANR	11017838	Identifier	white		11017639	0					
ANR	11017839	PrimaryExpression	2		11017639	1					
ANR	11017840	PrimaryExpression	0		11017639	1					
ANR	11017841	ExpressionStatement	return_error ( gs_error_rangecheck )	5289:8:167116:167149	11017639	1	True				
ANR	11017842	CallExpression	return_error ( gs_error_rangecheck )		11017639	0					
ANR	11017843	Callee	return_error		11017639	0					
ANR	11017844	Identifier	return_error		11017639	0					
ANR	11017845	ArgumentList	gs_error_rangecheck		11017639	1					
ANR	11017846	Argument	gs_error_rangecheck		11017639	0					
ANR	11017847	Identifier	gs_error_rangecheck		11017639	0					
ANR	11017848	ExpressionStatement	"code = seticc_cal ( i_ctx_p , white , black , & gamma , NULL , 1 , graydict . value . saveid )"	5290:4:167155:167259	11017639	18	True				
ANR	11017849	AssignmentExpression	"code = seticc_cal ( i_ctx_p , white , black , & gamma , NULL , 1 , graydict . value . saveid )"		11017639	0		=			
ANR	11017850	Identifier	code		11017639	0					
ANR	11017851	CallExpression	"seticc_cal ( i_ctx_p , white , black , & gamma , NULL , 1 , graydict . value . saveid )"		11017639	1					
ANR	11017852	Callee	seticc_cal		11017639	0					
ANR	11017853	Identifier	seticc_cal		11017639	0					
ANR	11017854	ArgumentList	i_ctx_p		11017639	1					
ANR	11017855	Argument	i_ctx_p		11017639	0					
ANR	11017856	Identifier	i_ctx_p		11017639	0					
ANR	11017857	Argument	white		11017639	1					
ANR	11017858	Identifier	white		11017639	0					
ANR	11017859	Argument	black		11017639	2					
ANR	11017860	Identifier	black		11017639	0					
ANR	11017861	Argument	& gamma		11017639	3					
ANR	11017862	UnaryOperationExpression	& gamma		11017639	0					
ANR	11017863	UnaryOperator	&		11017639	0					
ANR	11017864	Identifier	gamma		11017639	1					
ANR	11017865	Argument	NULL		11017639	4					
ANR	11017866	Identifier	NULL		11017639	0					
ANR	11017867	Argument	1		11017639	5					
ANR	11017868	PrimaryExpression	1		11017639	0					
ANR	11017869	Argument	graydict . value . saveid		11017639	6					
ANR	11017870	MemberAccess	graydict . value . saveid		11017639	0					
ANR	11017871	MemberAccess	graydict . value		11017639	0					
ANR	11017872	Identifier	graydict		11017639	0					
ANR	11017873	Identifier	value		11017639	1					
ANR	11017874	Identifier	saveid		11017639	1					
ANR	11017875	IfStatement	if ( code < 0 )		11017639	19					
ANR	11017876	Condition	code < 0	5292:9:167270:167277	11017639	0	True				
ANR	11017877	RelationalExpression	code < 0		11017639	0		<			
ANR	11017878	Identifier	code		11017639	0					
ANR	11017879	PrimaryExpression	0		11017639	1					
ANR	11017880	ReturnStatement	"return gs_rethrow ( code , ""setting CalGray  color space"" ) ;"	5293:8:167288:167343	11017639	1	True				
ANR	11017881	CallExpression	"gs_rethrow ( code , ""setting CalGray  color space"" )"		11017639	0					
ANR	11017882	Callee	gs_rethrow		11017639	0					
ANR	11017883	Identifier	gs_rethrow		11017639	0					
ANR	11017884	ArgumentList	code		11017639	1					
ANR	11017885	Argument	code		11017639	0					
ANR	11017886	Identifier	code		11017639	0					
ANR	11017887	Argument	"""setting CalGray  color space"""		11017639	1					
ANR	11017888	PrimaryExpression	"""setting CalGray  color space"""		11017639	0					
ANR	11017889	ExpressionStatement	cc . pattern = 0x00	5294:4:167349:167366	11017639	20	True				
ANR	11017890	AssignmentExpression	cc . pattern = 0x00		11017639	0		=			
ANR	11017891	MemberAccess	cc . pattern		11017639	0					
ANR	11017892	Identifier	cc		11017639	0					
ANR	11017893	Identifier	pattern		11017639	1					
ANR	11017894	PrimaryExpression	0x00		11017639	1					
ANR	11017895	ExpressionStatement	cc . paint . values [ 0 ] = 0	5295:4:167372:167394	11017639	21	True				
ANR	11017896	AssignmentExpression	cc . paint . values [ 0 ] = 0		11017639	0		=			
ANR	11017897	ArrayIndexing	cc . paint . values [ 0 ]		11017639	0					
ANR	11017898	MemberAccess	cc . paint . values		11017639	0					
ANR	11017899	MemberAccess	cc . paint		11017639	0					
ANR	11017900	Identifier	cc		11017639	0					
ANR	11017901	Identifier	paint		11017639	1					
ANR	11017902	Identifier	values		11017639	1					
ANR	11017903	PrimaryExpression	0		11017639	1					
ANR	11017904	PrimaryExpression	0		11017639	1					
ANR	11017905	ExpressionStatement	"code = gs_setcolor ( igs , & cc )"	5296:4:167400:167428	11017639	22	True				
ANR	11017906	AssignmentExpression	"code = gs_setcolor ( igs , & cc )"		11017639	0		=			
ANR	11017907	Identifier	code		11017639	0					
ANR	11017908	CallExpression	"gs_setcolor ( igs , & cc )"		11017639	1					
ANR	11017909	Callee	gs_setcolor		11017639	0					
ANR	11017910	Identifier	gs_setcolor		11017639	0					
ANR	11017911	ArgumentList	igs		11017639	1					
ANR	11017912	Argument	igs		11017639	0					
ANR	11017913	Identifier	igs		11017639	0					
ANR	11017914	Argument	& cc		11017639	1					
ANR	11017915	UnaryOperationExpression	& cc		11017639	0					
ANR	11017916	UnaryOperator	&		11017639	0					
ANR	11017917	Identifier	cc		11017639	1					
ANR	11017918	ReturnStatement	return code ;	5297:4:167434:167445	11017639	23	True				
ANR	11017919	Identifier	code		11017639	0					
ANR	11017920	ReturnType	static int		11017639	1					
ANR	11017921	Identifier	setcalgrayspace		11017639	2					
ANR	11017922	ParameterList	"i_ctx_t * i_ctx_p , ref * r , int * stage , int * cont , int CIESubst"		11017639	3					
ANR	11017923	Parameter	i_ctx_t * i_ctx_p	5252:27:165874:165890	11017639	0	True				
ANR	11017924	ParameterType	i_ctx_t *		11017639	0					
ANR	11017925	Identifier	i_ctx_p		11017639	1					
ANR	11017926	Parameter	ref * r	5252:46:165893:165898	11017639	1	True				
ANR	11017927	ParameterType	ref *		11017639	0					
ANR	11017928	Identifier	r		11017639	1					
ANR	11017929	Parameter	int * stage	5252:54:165901:165910	11017639	2	True				
ANR	11017930	ParameterType	int *		11017639	0					
ANR	11017931	Identifier	stage		11017639	1					
ANR	11017932	Parameter	int * cont	5252:66:165913:165921	11017639	3	True				
ANR	11017933	ParameterType	int *		11017639	0					
ANR	11017934	Identifier	cont		11017639	1					
ANR	11017935	Parameter	int CIESubst	5252:77:165924:165935	11017639	4	True				
ANR	11017936	ParameterType	int		11017639	0					
ANR	11017937	Identifier	CIESubst		11017639	1					
ANR	11017938	CFGEntryNode	ENTRY		11017639		True				
ANR	11017939	CFGExitNode	EXIT		11017639		True				
ANR	11017940	Symbol	cc . pattern		11017639						
ANR	11017941	Symbol	code		11017639						
ANR	11017942	Symbol	gs_error_rangecheck		11017639						
ANR	11017943	Symbol	* cc		11017639						
ANR	11017944	Symbol	dict_float_param		11017639						
ANR	11017945	Symbol	gs_setcolor		11017639						
ANR	11017946	Symbol	dflt_gamma		11017639						
ANR	11017947	Symbol	& cc		11017639						
ANR	11017948	Symbol	& gamma		11017639						
ANR	11017949	Symbol	gs_rethrow		11017639						
ANR	11017950	Symbol	white		11017639						
ANR	11017951	Symbol	dflt_white		11017639						
ANR	11017952	Symbol	dict_floats_param		11017639						
ANR	11017953	Symbol	igs		11017639						
ANR	11017954	Symbol	* cc . paint . values		11017639						
ANR	11017955	Symbol	imemory		11017639						
ANR	11017956	Symbol	cont		11017639						
ANR	11017957	Symbol	CIESubst		11017639						
ANR	11017958	Symbol	cc		11017639						
ANR	11017959	Symbol	& graydict		11017639						
ANR	11017960	Symbol	NULL		11017639						
ANR	11017961	Symbol	graydict		11017639						
ANR	11017962	Symbol	array_get		11017639						
ANR	11017963	Symbol	black		11017639						
ANR	11017964	Symbol	* white		11017639						
ANR	11017965	Symbol	dflt_black		11017639						
ANR	11017966	Symbol	r		11017639						
ANR	11017967	Symbol	* cc . paint		11017639						
ANR	11017968	Symbol	stage		11017639						
ANR	11017969	Symbol	* cont		11017639						
ANR	11017970	Symbol	seticc_cal		11017639						
ANR	11017971	Symbol	graydict . value . saveid		11017639						
ANR	11017972	Symbol	i_ctx_p		11017639						
ANR	11017973	Symbol	cc . paint		11017639						
ANR	11017974	Symbol	graydict . value		11017639						
ANR	11017975	Symbol	cc . paint . values		11017639						
ANR	11017976	Symbol	gamma		11017639						
ANR	11017977	Function	validatecalgrayspace	5300:0:167450:168477							
ANR	11017978	FunctionDef	"validatecalgrayspace (i_ctx_t * i_ctx_p , ref * * r)"		11017977	0					
ANR	11017979	CompoundStatement		5301:0:167510:168477	11017977	0					
ANR	11017980	IdentifierDeclStatement	int code = 0 ;	5302:4:167516:167526	11017977	0	True				
ANR	11017981	IdentifierDecl	code = 0		11017977	0					
ANR	11017982	IdentifierDeclType	int		11017977	0					
ANR	11017983	Identifier	code		11017977	1					
ANR	11017984	AssignmentExpression	code = 0		11017977	2		=			
ANR	11017985	Identifier	code		11017977	0					
ANR	11017986	PrimaryExpression	0		11017977	1					
ANR	11017987	IdentifierDeclStatement	"ref * space , calgraydict ;"	5303:4:167532:167555	11017977	1	True				
ANR	11017988	IdentifierDecl	* space		11017977	0					
ANR	11017989	IdentifierDeclType	ref *		11017977	0					
ANR	11017990	Identifier	space		11017977	1					
ANR	11017991	IdentifierDecl	calgraydict		11017977	1					
ANR	11017992	IdentifierDeclType	ref		11017977	0					
ANR	11017993	Identifier	calgraydict		11017977	1					
ANR	11017994	ExpressionStatement	space = * r	5305:4:167562:167572	11017977	2	True				
ANR	11017995	AssignmentExpression	space = * r		11017977	0		=			
ANR	11017996	Identifier	space		11017977	0					
ANR	11017997	UnaryOperationExpression	* r		11017977	1					
ANR	11017998	UnaryOperator	*		11017977	0					
ANR	11017999	Identifier	r		11017977	1					
ANR	11018000	IfStatement	if ( ! r_is_array ( space ) )		11017977	3					
ANR	11018001	Condition	! r_is_array ( space )	5306:8:167582:167599	11017977	0	True				
ANR	11018002	UnaryOperationExpression	! r_is_array ( space )		11017977	0					
ANR	11018003	UnaryOperator	!		11017977	0					
ANR	11018004	CallExpression	r_is_array ( space )		11017977	1					
ANR	11018005	Callee	r_is_array		11017977	0					
ANR	11018006	Identifier	r_is_array		11017977	0					
ANR	11018007	ArgumentList	space		11017977	1					
ANR	11018008	Argument	space		11017977	0					
ANR	11018009	Identifier	space		11017977	0					
ANR	11018010	ExpressionStatement	return_error ( gs_error_typecheck )	5307:8:167610:167642	11017977	1	True				
ANR	11018011	CallExpression	return_error ( gs_error_typecheck )		11017977	0					
ANR	11018012	Callee	return_error		11017977	0					
ANR	11018013	Identifier	return_error		11017977	0					
ANR	11018014	ArgumentList	gs_error_typecheck		11017977	1					
ANR	11018015	Argument	gs_error_typecheck		11017977	0					
ANR	11018016	Identifier	gs_error_typecheck		11017977	0					
ANR	11018017	IfStatement	if ( r_size ( space ) < 2 )		11017977	4					
ANR	11018018	Condition	r_size ( space ) < 2	5309:8:167713:167729	11017977	0	True				
ANR	11018019	RelationalExpression	r_size ( space ) < 2		11017977	0		<			
ANR	11018020	CallExpression	r_size ( space )		11017977	0					
ANR	11018021	Callee	r_size		11017977	0					
ANR	11018022	Identifier	r_size		11017977	0					
ANR	11018023	ArgumentList	space		11017977	1					
ANR	11018024	Argument	space		11017977	0					
ANR	11018025	Identifier	space		11017977	0					
ANR	11018026	PrimaryExpression	2		11017977	1					
ANR	11018027	ExpressionStatement	return_error ( gs_error_rangecheck )	5310:8:167740:167773	11017977	1	True				
ANR	11018028	CallExpression	return_error ( gs_error_rangecheck )		11017977	0					
ANR	11018029	Callee	return_error		11017977	0					
ANR	11018030	Identifier	return_error		11017977	0					
ANR	11018031	ArgumentList	gs_error_rangecheck		11017977	1					
ANR	11018032	Argument	gs_error_rangecheck		11017977	0					
ANR	11018033	Identifier	gs_error_rangecheck		11017977	0					
ANR	11018034	ExpressionStatement	"code = array_get ( imemory , space , 1 , & calgraydict )"	5311:4:167779:167828	11017977	5	True				
ANR	11018035	AssignmentExpression	"code = array_get ( imemory , space , 1 , & calgraydict )"		11017977	0		=			
ANR	11018036	Identifier	code		11017977	0					
ANR	11018037	CallExpression	"array_get ( imemory , space , 1 , & calgraydict )"		11017977	1					
ANR	11018038	Callee	array_get		11017977	0					
ANR	11018039	Identifier	array_get		11017977	0					
ANR	11018040	ArgumentList	imemory		11017977	1					
ANR	11018041	Argument	imemory		11017977	0					
ANR	11018042	Identifier	imemory		11017977	0					
ANR	11018043	Argument	space		11017977	1					
ANR	11018044	Identifier	space		11017977	0					
ANR	11018045	Argument	1		11017977	2					
ANR	11018046	PrimaryExpression	1		11017977	0					
ANR	11018047	Argument	& calgraydict		11017977	3					
ANR	11018048	UnaryOperationExpression	& calgraydict		11017977	0					
ANR	11018049	UnaryOperator	&		11017977	0					
ANR	11018050	Identifier	calgraydict		11017977	1					
ANR	11018051	IfStatement	if ( code < 0 )		11017977	6					
ANR	11018052	Condition	code < 0	5312:8:167838:167845	11017977	0	True				
ANR	11018053	RelationalExpression	code < 0		11017977	0		<			
ANR	11018054	Identifier	code		11017977	0					
ANR	11018055	PrimaryExpression	0		11017977	1					
ANR	11018056	ReturnStatement	return code ;	5313:8:167856:167867	11017977	1	True				
ANR	11018057	Identifier	code		11017977	0					
ANR	11018058	ExpressionStatement	"check_type ( calgraydict , t_dictionary )"	5314:4:167873:167910	11017977	7	True				
ANR	11018059	CallExpression	"check_type ( calgraydict , t_dictionary )"		11017977	0					
ANR	11018060	Callee	check_type		11017977	0					
ANR	11018061	Identifier	check_type		11017977	0					
ANR	11018062	ArgumentList	calgraydict		11017977	1					
ANR	11018063	Argument	calgraydict		11017977	0					
ANR	11018064	Identifier	calgraydict		11017977	0					
ANR	11018065	Argument	t_dictionary		11017977	1					
ANR	11018066	Identifier	t_dictionary		11017977	0					
ANR	11018067	ExpressionStatement	"code = checkWhitePoint ( i_ctx_p , & calgraydict )"	5318:4:168076:168121	11017977	8	True				
ANR	11018068	AssignmentExpression	"code = checkWhitePoint ( i_ctx_p , & calgraydict )"		11017977	0		=			
ANR	11018069	Identifier	code		11017977	0					
ANR	11018070	CallExpression	"checkWhitePoint ( i_ctx_p , & calgraydict )"		11017977	1					
ANR	11018071	Callee	checkWhitePoint		11017977	0					
ANR	11018072	Identifier	checkWhitePoint		11017977	0					
ANR	11018073	ArgumentList	i_ctx_p		11017977	1					
ANR	11018074	Argument	i_ctx_p		11017977	0					
ANR	11018075	Identifier	i_ctx_p		11017977	0					
ANR	11018076	Argument	& calgraydict		11017977	1					
ANR	11018077	UnaryOperationExpression	& calgraydict		11017977	0					
ANR	11018078	UnaryOperator	&		11017977	0					
ANR	11018079	Identifier	calgraydict		11017977	1					
ANR	11018080	IfStatement	if ( code != 0 )		11017977	9					
ANR	11018081	Condition	code != 0	5319:8:168131:168139	11017977	0	True				
ANR	11018082	EqualityExpression	code != 0		11017977	0		!=			
ANR	11018083	Identifier	code		11017977	0					
ANR	11018084	PrimaryExpression	0		11017977	1					
ANR	11018085	ReturnStatement	return code ;	5320:8:168150:168161	11017977	1	True				
ANR	11018086	Identifier	code		11017977	0					
ANR	11018087	ExpressionStatement	"code = checkBlackPoint ( i_ctx_p , & calgraydict )"	5322:4:168225:168270	11017977	10	True				
ANR	11018088	AssignmentExpression	"code = checkBlackPoint ( i_ctx_p , & calgraydict )"		11017977	0		=			
ANR	11018089	Identifier	code		11017977	0					
ANR	11018090	CallExpression	"checkBlackPoint ( i_ctx_p , & calgraydict )"		11017977	1					
ANR	11018091	Callee	checkBlackPoint		11017977	0					
ANR	11018092	Identifier	checkBlackPoint		11017977	0					
ANR	11018093	ArgumentList	i_ctx_p		11017977	1					
ANR	11018094	Argument	i_ctx_p		11017977	0					
ANR	11018095	Identifier	i_ctx_p		11017977	0					
ANR	11018096	Argument	& calgraydict		11017977	1					
ANR	11018097	UnaryOperationExpression	& calgraydict		11017977	0					
ANR	11018098	UnaryOperator	&		11017977	0					
ANR	11018099	Identifier	calgraydict		11017977	1					
ANR	11018100	IfStatement	if ( code < 0 )		11017977	11					
ANR	11018101	Condition	code < 0	5323:8:168280:168287	11017977	0	True				
ANR	11018102	RelationalExpression	code < 0		11017977	0		<			
ANR	11018103	Identifier	code		11017977	0					
ANR	11018104	PrimaryExpression	0		11017977	1					
ANR	11018105	ReturnStatement	return code ;	5324:8:168298:168309	11017977	1	True				
ANR	11018106	Identifier	code		11017977	0					
ANR	11018107	ExpressionStatement	"code = checkGamma ( i_ctx_p , & calgraydict , 1 )"	5326:4:168344:168387	11017977	12	True				
ANR	11018108	AssignmentExpression	"code = checkGamma ( i_ctx_p , & calgraydict , 1 )"		11017977	0		=			
ANR	11018109	Identifier	code		11017977	0					
ANR	11018110	CallExpression	"checkGamma ( i_ctx_p , & calgraydict , 1 )"		11017977	1					
ANR	11018111	Callee	checkGamma		11017977	0					
ANR	11018112	Identifier	checkGamma		11017977	0					
ANR	11018113	ArgumentList	i_ctx_p		11017977	1					
ANR	11018114	Argument	i_ctx_p		11017977	0					
ANR	11018115	Identifier	i_ctx_p		11017977	0					
ANR	11018116	Argument	& calgraydict		11017977	1					
ANR	11018117	UnaryOperationExpression	& calgraydict		11017977	0					
ANR	11018118	UnaryOperator	&		11017977	0					
ANR	11018119	Identifier	calgraydict		11017977	1					
ANR	11018120	Argument	1		11017977	2					
ANR	11018121	PrimaryExpression	1		11017977	0					
ANR	11018122	IfStatement	if ( code < 0 )		11017977	13					
ANR	11018123	Condition	code < 0	5327:8:168397:168404	11017977	0	True				
ANR	11018124	RelationalExpression	code < 0		11017977	0		<			
ANR	11018125	Identifier	code		11017977	0					
ANR	11018126	PrimaryExpression	0		11017977	1					
ANR	11018127	ReturnStatement	return code ;	5328:8:168415:168426	11017977	1	True				
ANR	11018128	Identifier	code		11017977	0					
ANR	11018129	ExpressionStatement	* r = 0	5329:4:168432:168438	11017977	14	True				
ANR	11018130	AssignmentExpression	* r = 0		11017977	0		=			
ANR	11018131	UnaryOperationExpression	* r		11017977	0					
ANR	11018132	UnaryOperator	*		11017977	0					
ANR	11018133	Identifier	r		11017977	1					
ANR	11018134	PrimaryExpression	0		11017977	1					
ANR	11018135	ReturnStatement	return 0 ;	5330:4:168467:168475	11017977	15	True				
ANR	11018136	PrimaryExpression	0		11017977	0					
ANR	11018137	ReturnType	static int		11017977	1					
ANR	11018138	Identifier	validatecalgrayspace		11017977	2					
ANR	11018139	ParameterList	"i_ctx_t * i_ctx_p , ref * * r"		11017977	3					
ANR	11018140	Parameter	i_ctx_t * i_ctx_p	5300:32:167482:167498	11017977	0	True				
ANR	11018141	ParameterType	i_ctx_t *		11017977	0					
ANR	11018142	Identifier	i_ctx_p		11017977	1					
ANR	11018143	Parameter	ref * * r	5300:51:167501:167507	11017977	1	True				
ANR	11018144	ParameterType	ref * *		11017977	0					
ANR	11018145	Identifier	r		11017977	1					
ANR	11018146	CFGEntryNode	ENTRY		11017977		True				
ANR	11018147	CFGExitNode	EXIT		11017977		True				
ANR	11018148	Symbol	code		11017977						
ANR	11018149	Symbol	t_dictionary		11017977						
ANR	11018150	Symbol	gs_error_rangecheck		11017977						
ANR	11018151	Symbol	& calgraydict		11017977						
ANR	11018152	Symbol	calgraydict		11017977						
ANR	11018153	Symbol	array_get		11017977						
ANR	11018154	Symbol	space		11017977						
ANR	11018155	Symbol	r		11017977						
ANR	11018156	Symbol	gs_error_typecheck		11017977						
ANR	11018157	Symbol	checkBlackPoint		11017977						
ANR	11018158	Symbol	i_ctx_p		11017977						
ANR	11018159	Symbol	r_size		11017977						
ANR	11018160	Symbol	r_is_array		11017977						
ANR	11018161	Symbol	imemory		11017977						
ANR	11018162	Symbol	checkWhitePoint		11017977						
ANR	11018163	Symbol	* r		11017977						
ANR	11018164	Symbol	checkGamma		11017977						
ANR	11018165	Function	setcalrgbspace	5334:0:168551:170711							
ANR	11018166	FunctionDef	"setcalrgbspace (i_ctx_t * i_ctx_p , ref * r , int * stage , int * cont , int CIESubst)"		11018165	0					
ANR	11018167	CompoundStatement		5335:0:168641:170711	11018165	0					
ANR	11018168	IdentifierDeclStatement	ref rgbdict ;	5336:4:168647:168658	11018165	0	True				
ANR	11018169	IdentifierDecl	rgbdict		11018165	0					
ANR	11018170	IdentifierDeclType	ref		11018165	0					
ANR	11018171	Identifier	rgbdict		11018165	1					
ANR	11018172	IdentifierDeclStatement	int code = 0 ;	5337:4:168664:168676	11018165	1	True				
ANR	11018173	IdentifierDecl	code = 0		11018165	0					
ANR	11018174	IdentifierDeclType	int		11018165	0					
ANR	11018175	Identifier	code		11018165	1					
ANR	11018176	AssignmentExpression	code = 0		11018165	2		=			
ANR	11018177	Identifier	code		11018165	0					
ANR	11018178	PrimaryExpression	0		11018165	1					
ANR	11018179	IdentifierDeclStatement	"float gamma [ 3 ] , white [ 3 ] , black [ 3 ] , matrix [ 9 ] ;"	5338:4:168682:168745	11018165	2	True				
ANR	11018180	IdentifierDecl	gamma [ 3 ]		11018165	0					
ANR	11018181	IdentifierDeclType	float [ 3 ]		11018165	0					
ANR	11018182	Identifier	gamma		11018165	1					
ANR	11018183	PrimaryExpression	3		11018165	2					
ANR	11018184	IdentifierDecl	white [ 3 ]		11018165	1					
ANR	11018185	IdentifierDeclType	float [ 3 ]		11018165	0					
ANR	11018186	Identifier	white		11018165	1					
ANR	11018187	PrimaryExpression	3		11018165	2					
ANR	11018188	IdentifierDecl	black [ 3 ]		11018165	2					
ANR	11018189	IdentifierDeclType	float [ 3 ]		11018165	0					
ANR	11018190	Identifier	black		11018165	1					
ANR	11018191	PrimaryExpression	3		11018165	2					
ANR	11018192	IdentifierDecl	matrix [ 9 ]		11018165	3					
ANR	11018193	IdentifierDeclType	float [ 9 ]		11018165	0					
ANR	11018194	Identifier	matrix		11018165	1					
ANR	11018195	PrimaryExpression	9		11018165	2					
ANR	11018196	Statement	static	5339:4:168751:168756	11018165	3	True				
ANR	11018197	IdentifierDeclStatement	"const float dflt_gamma [ 3 ] = { 1.0 , 1.0 , 1.0 } ;"	5339:11:168758:168808	11018165	4	True				
ANR	11018198	IdentifierDecl	"dflt_gamma [ 3 ] = { 1.0 , 1.0 , 1.0 }"		11018165	0					
ANR	11018199	IdentifierDeclType	const float [ 3 ]		11018165	0					
ANR	11018200	Identifier	dflt_gamma		11018165	1					
ANR	11018201	PrimaryExpression	3		11018165	2					
ANR	11018202	AssignmentExpression	"dflt_gamma [ 3 ] = { 1.0 , 1.0 , 1.0 }"		11018165	3		=			
ANR	11018203	Identifier	dflt_gamma		11018165	0					
ANR	11018204	InitializerList	1.0		11018165	1					
ANR	11018205	PrimaryExpression	1.0		11018165	0					
ANR	11018206	PrimaryExpression	1.0		11018165	1					
ANR	11018207	PrimaryExpression	1.0		11018165	2					
ANR	11018208	Statement	static	5340:4:168814:168819	11018165	5	True				
ANR	11018209	IdentifierDeclStatement	"const float dflt_black [ 3 ] = { 0 , 0 , 0 } , dflt_white [ 3 ] = { 0 , 0 , 0 } ;"	5340:11:168821:168886	11018165	6	True				
ANR	11018210	IdentifierDecl	"dflt_black [ 3 ] = { 0 , 0 , 0 }"		11018165	0					
ANR	11018211	IdentifierDeclType	const float [ 3 ]		11018165	0					
ANR	11018212	Identifier	dflt_black		11018165	1					
ANR	11018213	PrimaryExpression	3		11018165	2					
ANR	11018214	AssignmentExpression	"dflt_black [ 3 ] = { 0 , 0 , 0 }"		11018165	3		=			
ANR	11018215	Identifier	dflt_black		11018165	0					
ANR	11018216	InitializerList	0		11018165	1					
ANR	11018217	PrimaryExpression	0		11018165	0					
ANR	11018218	PrimaryExpression	0		11018165	1					
ANR	11018219	PrimaryExpression	0		11018165	2					
ANR	11018220	IdentifierDecl	"dflt_white [ 3 ] = { 0 , 0 , 0 }"		11018165	1					
ANR	11018221	IdentifierDeclType	const float [ 3 ]		11018165	0					
ANR	11018222	Identifier	dflt_white		11018165	1					
ANR	11018223	PrimaryExpression	3		11018165	2					
ANR	11018224	AssignmentExpression	"dflt_white [ 3 ] = { 0 , 0 , 0 }"		11018165	3		=			
ANR	11018225	Identifier	dflt_white		11018165	0					
ANR	11018226	InitializerList	0		11018165	1					
ANR	11018227	PrimaryExpression	0		11018165	0					
ANR	11018228	PrimaryExpression	0		11018165	1					
ANR	11018229	PrimaryExpression	0		11018165	2					
ANR	11018230	Statement	static	5341:4:168892:168897	11018165	7	True				
ANR	11018231	IdentifierDeclStatement	"const float dflt_matrix [ 9 ] = { 1 , 0 , 0 , 0 , 1 , 0 , 0 , 0 , 1 } ;"	5341:11:168899:168952	11018165	8	True				
ANR	11018232	IdentifierDecl	"dflt_matrix [ 9 ] = { 1 , 0 , 0 , 0 , 1 , 0 , 0 , 0 , 1 }"		11018165	0					
ANR	11018233	IdentifierDeclType	const float [ 9 ]		11018165	0					
ANR	11018234	Identifier	dflt_matrix		11018165	1					
ANR	11018235	PrimaryExpression	9		11018165	2					
ANR	11018236	AssignmentExpression	"dflt_matrix [ 9 ] = { 1 , 0 , 0 , 0 , 1 , 0 , 0 , 0 , 1 }"		11018165	3		=			
ANR	11018237	Identifier	dflt_matrix		11018165	0					
ANR	11018238	InitializerList	1		11018165	1					
ANR	11018239	PrimaryExpression	1		11018165	0					
ANR	11018240	PrimaryExpression	0		11018165	1					
ANR	11018241	PrimaryExpression	0		11018165	2					
ANR	11018242	PrimaryExpression	0		11018165	3					
ANR	11018243	PrimaryExpression	1		11018165	4					
ANR	11018244	PrimaryExpression	0		11018165	5					
ANR	11018245	PrimaryExpression	0		11018165	6					
ANR	11018246	PrimaryExpression	0		11018165	7					
ANR	11018247	PrimaryExpression	1		11018165	8					
ANR	11018248	IdentifierDeclStatement	int i ;	5342:4:168958:168963	11018165	9	True				
ANR	11018249	IdentifierDecl	i		11018165	0					
ANR	11018250	IdentifierDeclType	int		11018165	0					
ANR	11018251	Identifier	i		11018165	1					
ANR	11018252	IdentifierDeclStatement	gs_client_color cc ;	5343:4:168969:168987	11018165	10	True				
ANR	11018253	IdentifierDecl	cc		11018165	0					
ANR	11018254	IdentifierDeclType	gs_client_color		11018165	0					
ANR	11018255	Identifier	cc		11018165	1					
ANR	11018256	ExpressionStatement	* cont = 0	5345:4:168994:169003	11018165	11	True				
ANR	11018257	AssignmentExpression	* cont = 0		11018165	0		=			
ANR	11018258	UnaryOperationExpression	* cont		11018165	0					
ANR	11018259	UnaryOperator	*		11018165	0					
ANR	11018260	Identifier	cont		11018165	1					
ANR	11018261	PrimaryExpression	0		11018165	1					
ANR	11018262	ExpressionStatement	"code = array_get ( imemory , r , 1 , & rgbdict )"	5346:4:169009:169050	11018165	12	True				
ANR	11018263	AssignmentExpression	"code = array_get ( imemory , r , 1 , & rgbdict )"		11018165	0		=			
ANR	11018264	Identifier	code		11018165	0					
ANR	11018265	CallExpression	"array_get ( imemory , r , 1 , & rgbdict )"		11018165	1					
ANR	11018266	Callee	array_get		11018165	0					
ANR	11018267	Identifier	array_get		11018165	0					
ANR	11018268	ArgumentList	imemory		11018165	1					
ANR	11018269	Argument	imemory		11018165	0					
ANR	11018270	Identifier	imemory		11018165	0					
ANR	11018271	Argument	r		11018165	1					
ANR	11018272	Identifier	r		11018165	0					
ANR	11018273	Argument	1		11018165	2					
ANR	11018274	PrimaryExpression	1		11018165	0					
ANR	11018275	Argument	& rgbdict		11018165	3					
ANR	11018276	UnaryOperationExpression	& rgbdict		11018165	0					
ANR	11018277	UnaryOperator	&		11018165	0					
ANR	11018278	Identifier	rgbdict		11018165	1					
ANR	11018279	IfStatement	if ( code < 0 )		11018165	13					
ANR	11018280	Condition	code < 0	5347:8:169060:169067	11018165	0	True				
ANR	11018281	RelationalExpression	code < 0		11018165	0		<			
ANR	11018282	Identifier	code		11018165	0					
ANR	11018283	PrimaryExpression	0		11018165	1					
ANR	11018284	ReturnStatement	return code ;	5348:8:169078:169089	11018165	1	True				
ANR	11018285	Identifier	code		11018165	0					
ANR	11018286	ExpressionStatement	"code = dict_floats_param ( imemory , & rgbdict , ""Gamma"" , 3 , gamma , dflt_gamma )"	5350:4:169119:169345	11018165	14	True				
ANR	11018287	AssignmentExpression	"code = dict_floats_param ( imemory , & rgbdict , ""Gamma"" , 3 , gamma , dflt_gamma )"		11018165	0		=			
ANR	11018288	Identifier	code		11018165	0					
ANR	11018289	CallExpression	"dict_floats_param ( imemory , & rgbdict , ""Gamma"" , 3 , gamma , dflt_gamma )"		11018165	1					
ANR	11018290	Callee	dict_floats_param		11018165	0					
ANR	11018291	Identifier	dict_floats_param		11018165	0					
ANR	11018292	ArgumentList	imemory		11018165	1					
ANR	11018293	Argument	imemory		11018165	0					
ANR	11018294	Identifier	imemory		11018165	0					
ANR	11018295	Argument	& rgbdict		11018165	1					
ANR	11018296	UnaryOperationExpression	& rgbdict		11018165	0					
ANR	11018297	UnaryOperator	&		11018165	0					
ANR	11018298	Identifier	rgbdict		11018165	1					
ANR	11018299	Argument	"""Gamma"""		11018165	2					
ANR	11018300	PrimaryExpression	"""Gamma"""		11018165	0					
ANR	11018301	Argument	3		11018165	3					
ANR	11018302	PrimaryExpression	3		11018165	0					
ANR	11018303	Argument	gamma		11018165	4					
ANR	11018304	Identifier	gamma		11018165	0					
ANR	11018305	Argument	dflt_gamma		11018165	5					
ANR	11018306	Identifier	dflt_gamma		11018165	0					
ANR	11018307	IfStatement	if ( code < 0 )		11018165	15					
ANR	11018308	Condition	code < 0	5356:8:169355:169362	11018165	0	True				
ANR	11018309	RelationalExpression	code < 0		11018165	0		<			
ANR	11018310	Identifier	code		11018165	0					
ANR	11018311	PrimaryExpression	0		11018165	1					
ANR	11018312	ReturnStatement	return code ;	5357:8:169373:169384	11018165	1	True				
ANR	11018313	Identifier	code		11018165	0					
ANR	11018314	IfStatement	if ( gamma [ 0 ] <= 0 || gamma [ 1 ] <= 0 || gamma [ 2 ] <= 0 )		11018165	16					
ANR	11018315	Condition	gamma [ 0 ] <= 0 || gamma [ 1 ] <= 0 || gamma [ 2 ] <= 0	5358:8:169394:169440	11018165	0	True				
ANR	11018316	OrExpression	gamma [ 0 ] <= 0 || gamma [ 1 ] <= 0 || gamma [ 2 ] <= 0		11018165	0		||			
ANR	11018317	RelationalExpression	gamma [ 0 ] <= 0		11018165	0		<=			
ANR	11018318	ArrayIndexing	gamma [ 0 ]		11018165	0					
ANR	11018319	Identifier	gamma		11018165	0					
ANR	11018320	PrimaryExpression	0		11018165	1					
ANR	11018321	PrimaryExpression	0		11018165	1					
ANR	11018322	OrExpression	gamma [ 1 ] <= 0 || gamma [ 2 ] <= 0		11018165	1		||			
ANR	11018323	RelationalExpression	gamma [ 1 ] <= 0		11018165	0		<=			
ANR	11018324	ArrayIndexing	gamma [ 1 ]		11018165	0					
ANR	11018325	Identifier	gamma		11018165	0					
ANR	11018326	PrimaryExpression	1		11018165	1					
ANR	11018327	PrimaryExpression	0		11018165	1					
ANR	11018328	RelationalExpression	gamma [ 2 ] <= 0		11018165	1		<=			
ANR	11018329	ArrayIndexing	gamma [ 2 ]		11018165	0					
ANR	11018330	Identifier	gamma		11018165	0					
ANR	11018331	PrimaryExpression	2		11018165	1					
ANR	11018332	PrimaryExpression	0		11018165	1					
ANR	11018333	ExpressionStatement	return_error ( gs_error_rangecheck )	5359:8:169451:169484	11018165	1	True				
ANR	11018334	CallExpression	return_error ( gs_error_rangecheck )		11018165	0					
ANR	11018335	Callee	return_error		11018165	0					
ANR	11018336	Identifier	return_error		11018165	0					
ANR	11018337	ArgumentList	gs_error_rangecheck		11018165	1					
ANR	11018338	Argument	gs_error_rangecheck		11018165	0					
ANR	11018339	Identifier	gs_error_rangecheck		11018165	0					
ANR	11018340	ExpressionStatement	"code = dict_floats_param ( imemory , & rgbdict , ""BlackPoint"" , 3 , black , dflt_black )"	5360:4:169490:169721	11018165	17	True				
ANR	11018341	AssignmentExpression	"code = dict_floats_param ( imemory , & rgbdict , ""BlackPoint"" , 3 , black , dflt_black )"		11018165	0		=			
ANR	11018342	Identifier	code		11018165	0					
ANR	11018343	CallExpression	"dict_floats_param ( imemory , & rgbdict , ""BlackPoint"" , 3 , black , dflt_black )"		11018165	1					
ANR	11018344	Callee	dict_floats_param		11018165	0					
ANR	11018345	Identifier	dict_floats_param		11018165	0					
ANR	11018346	ArgumentList	imemory		11018165	1					
ANR	11018347	Argument	imemory		11018165	0					
ANR	11018348	Identifier	imemory		11018165	0					
ANR	11018349	Argument	& rgbdict		11018165	1					
ANR	11018350	UnaryOperationExpression	& rgbdict		11018165	0					
ANR	11018351	UnaryOperator	&		11018165	0					
ANR	11018352	Identifier	rgbdict		11018165	1					
ANR	11018353	Argument	"""BlackPoint"""		11018165	2					
ANR	11018354	PrimaryExpression	"""BlackPoint"""		11018165	0					
ANR	11018355	Argument	3		11018165	3					
ANR	11018356	PrimaryExpression	3		11018165	0					
ANR	11018357	Argument	black		11018165	4					
ANR	11018358	Identifier	black		11018165	0					
ANR	11018359	Argument	dflt_black		11018165	5					
ANR	11018360	Identifier	dflt_black		11018165	0					
ANR	11018361	IfStatement	if ( code < 0 )		11018165	18					
ANR	11018362	Condition	code < 0	5366:8:169731:169738	11018165	0	True				
ANR	11018363	RelationalExpression	code < 0		11018165	0		<			
ANR	11018364	Identifier	code		11018165	0					
ANR	11018365	PrimaryExpression	0		11018165	1					
ANR	11018366	ReturnStatement	return code ;	5367:8:169749:169760	11018165	1	True				
ANR	11018367	Identifier	code		11018165	0					
ANR	11018368	ExpressionStatement	"code = dict_floats_param ( imemory , & rgbdict , ""WhitePoint"" , 3 , white , dflt_white )"	5368:4:169766:169997	11018165	19	True				
ANR	11018369	AssignmentExpression	"code = dict_floats_param ( imemory , & rgbdict , ""WhitePoint"" , 3 , white , dflt_white )"		11018165	0		=			
ANR	11018370	Identifier	code		11018165	0					
ANR	11018371	CallExpression	"dict_floats_param ( imemory , & rgbdict , ""WhitePoint"" , 3 , white , dflt_white )"		11018165	1					
ANR	11018372	Callee	dict_floats_param		11018165	0					
ANR	11018373	Identifier	dict_floats_param		11018165	0					
ANR	11018374	ArgumentList	imemory		11018165	1					
ANR	11018375	Argument	imemory		11018165	0					
ANR	11018376	Identifier	imemory		11018165	0					
ANR	11018377	Argument	& rgbdict		11018165	1					
ANR	11018378	UnaryOperationExpression	& rgbdict		11018165	0					
ANR	11018379	UnaryOperator	&		11018165	0					
ANR	11018380	Identifier	rgbdict		11018165	1					
ANR	11018381	Argument	"""WhitePoint"""		11018165	2					
ANR	11018382	PrimaryExpression	"""WhitePoint"""		11018165	0					
ANR	11018383	Argument	3		11018165	3					
ANR	11018384	PrimaryExpression	3		11018165	0					
ANR	11018385	Argument	white		11018165	4					
ANR	11018386	Identifier	white		11018165	0					
ANR	11018387	Argument	dflt_white		11018165	5					
ANR	11018388	Identifier	dflt_white		11018165	0					
ANR	11018389	IfStatement	if ( code < 0 )		11018165	20					
ANR	11018390	Condition	code < 0	5374:8:170007:170014	11018165	0	True				
ANR	11018391	RelationalExpression	code < 0		11018165	0		<			
ANR	11018392	Identifier	code		11018165	0					
ANR	11018393	PrimaryExpression	0		11018165	1					
ANR	11018394	ReturnStatement	return code ;	5375:8:170025:170036	11018165	1	True				
ANR	11018395	Identifier	code		11018165	0					
ANR	11018396	IfStatement	if ( white [ 0 ] <= 0 || white [ 1 ] != 1.0 || white [ 2 ] <= 0 )		11018165	21					
ANR	11018397	Condition	white [ 0 ] <= 0 || white [ 1 ] != 1.0 || white [ 2 ] <= 0	5376:8:170046:170094	11018165	0	True				
ANR	11018398	OrExpression	white [ 0 ] <= 0 || white [ 1 ] != 1.0 || white [ 2 ] <= 0		11018165	0		||			
ANR	11018399	RelationalExpression	white [ 0 ] <= 0		11018165	0		<=			
ANR	11018400	ArrayIndexing	white [ 0 ]		11018165	0					
ANR	11018401	Identifier	white		11018165	0					
ANR	11018402	PrimaryExpression	0		11018165	1					
ANR	11018403	PrimaryExpression	0		11018165	1					
ANR	11018404	OrExpression	white [ 1 ] != 1.0 || white [ 2 ] <= 0		11018165	1		||			
ANR	11018405	EqualityExpression	white [ 1 ] != 1.0		11018165	0		!=			
ANR	11018406	ArrayIndexing	white [ 1 ]		11018165	0					
ANR	11018407	Identifier	white		11018165	0					
ANR	11018408	PrimaryExpression	1		11018165	1					
ANR	11018409	PrimaryExpression	1.0		11018165	1					
ANR	11018410	RelationalExpression	white [ 2 ] <= 0		11018165	1		<=			
ANR	11018411	ArrayIndexing	white [ 2 ]		11018165	0					
ANR	11018412	Identifier	white		11018165	0					
ANR	11018413	PrimaryExpression	2		11018165	1					
ANR	11018414	PrimaryExpression	0		11018165	1					
ANR	11018415	ExpressionStatement	return_error ( gs_error_rangecheck )	5377:8:170105:170138	11018165	1	True				
ANR	11018416	CallExpression	return_error ( gs_error_rangecheck )		11018165	0					
ANR	11018417	Callee	return_error		11018165	0					
ANR	11018418	Identifier	return_error		11018165	0					
ANR	11018419	ArgumentList	gs_error_rangecheck		11018165	1					
ANR	11018420	Argument	gs_error_rangecheck		11018165	0					
ANR	11018421	Identifier	gs_error_rangecheck		11018165	0					
ANR	11018422	ExpressionStatement	"code = dict_floats_param ( imemory , & rgbdict , ""Matrix"" , 9 , matrix , dflt_matrix )"	5378:4:170144:170373	11018165	22	True				
ANR	11018423	AssignmentExpression	"code = dict_floats_param ( imemory , & rgbdict , ""Matrix"" , 9 , matrix , dflt_matrix )"		11018165	0		=			
ANR	11018424	Identifier	code		11018165	0					
ANR	11018425	CallExpression	"dict_floats_param ( imemory , & rgbdict , ""Matrix"" , 9 , matrix , dflt_matrix )"		11018165	1					
ANR	11018426	Callee	dict_floats_param		11018165	0					
ANR	11018427	Identifier	dict_floats_param		11018165	0					
ANR	11018428	ArgumentList	imemory		11018165	1					
ANR	11018429	Argument	imemory		11018165	0					
ANR	11018430	Identifier	imemory		11018165	0					
ANR	11018431	Argument	& rgbdict		11018165	1					
ANR	11018432	UnaryOperationExpression	& rgbdict		11018165	0					
ANR	11018433	UnaryOperator	&		11018165	0					
ANR	11018434	Identifier	rgbdict		11018165	1					
ANR	11018435	Argument	"""Matrix"""		11018165	2					
ANR	11018436	PrimaryExpression	"""Matrix"""		11018165	0					
ANR	11018437	Argument	9		11018165	3					
ANR	11018438	PrimaryExpression	9		11018165	0					
ANR	11018439	Argument	matrix		11018165	4					
ANR	11018440	Identifier	matrix		11018165	0					
ANR	11018441	Argument	dflt_matrix		11018165	5					
ANR	11018442	Identifier	dflt_matrix		11018165	0					
ANR	11018443	IfStatement	if ( code < 0 )		11018165	23					
ANR	11018444	Condition	code < 0	5384:8:170383:170390	11018165	0	True				
ANR	11018445	RelationalExpression	code < 0		11018165	0		<			
ANR	11018446	Identifier	code		11018165	0					
ANR	11018447	PrimaryExpression	0		11018165	1					
ANR	11018448	ReturnStatement	return code ;	5385:8:170401:170412	11018165	1	True				
ANR	11018449	Identifier	code		11018165	0					
ANR	11018450	ExpressionStatement	"code = seticc_cal ( i_ctx_p , white , black , gamma , matrix , 3 , rgbdict . value . saveid )"	5386:4:170418:170498	11018165	24	True				
ANR	11018451	AssignmentExpression	"code = seticc_cal ( i_ctx_p , white , black , gamma , matrix , 3 , rgbdict . value . saveid )"		11018165	0		=			
ANR	11018452	Identifier	code		11018165	0					
ANR	11018453	CallExpression	"seticc_cal ( i_ctx_p , white , black , gamma , matrix , 3 , rgbdict . value . saveid )"		11018165	1					
ANR	11018454	Callee	seticc_cal		11018165	0					
ANR	11018455	Identifier	seticc_cal		11018165	0					
ANR	11018456	ArgumentList	i_ctx_p		11018165	1					
ANR	11018457	Argument	i_ctx_p		11018165	0					
ANR	11018458	Identifier	i_ctx_p		11018165	0					
ANR	11018459	Argument	white		11018165	1					
ANR	11018460	Identifier	white		11018165	0					
ANR	11018461	Argument	black		11018165	2					
ANR	11018462	Identifier	black		11018165	0					
ANR	11018463	Argument	gamma		11018165	3					
ANR	11018464	Identifier	gamma		11018165	0					
ANR	11018465	Argument	matrix		11018165	4					
ANR	11018466	Identifier	matrix		11018165	0					
ANR	11018467	Argument	3		11018165	5					
ANR	11018468	PrimaryExpression	3		11018165	0					
ANR	11018469	Argument	rgbdict . value . saveid		11018165	6					
ANR	11018470	MemberAccess	rgbdict . value . saveid		11018165	0					
ANR	11018471	MemberAccess	rgbdict . value		11018165	0					
ANR	11018472	Identifier	rgbdict		11018165	0					
ANR	11018473	Identifier	value		11018165	1					
ANR	11018474	Identifier	saveid		11018165	1					
ANR	11018475	IfStatement	if ( code < 0 )		11018165	25					
ANR	11018476	Condition	code < 0	5387:9:170509:170516	11018165	0	True				
ANR	11018477	RelationalExpression	code < 0		11018165	0		<			
ANR	11018478	Identifier	code		11018165	0					
ANR	11018479	PrimaryExpression	0		11018165	1					
ANR	11018480	ReturnStatement	"return gs_rethrow ( code , ""setting CalRGB  color space"" ) ;"	5388:8:170527:170581	11018165	1	True				
ANR	11018481	CallExpression	"gs_rethrow ( code , ""setting CalRGB  color space"" )"		11018165	0					
ANR	11018482	Callee	gs_rethrow		11018165	0					
ANR	11018483	Identifier	gs_rethrow		11018165	0					
ANR	11018484	ArgumentList	code		11018165	1					
ANR	11018485	Argument	code		11018165	0					
ANR	11018486	Identifier	code		11018165	0					
ANR	11018487	Argument	"""setting CalRGB  color space"""		11018165	1					
ANR	11018488	PrimaryExpression	"""setting CalRGB  color space"""		11018165	0					
ANR	11018489	ExpressionStatement	cc . pattern = 0x00	5389:4:170587:170604	11018165	26	True				
ANR	11018490	AssignmentExpression	cc . pattern = 0x00		11018165	0		=			
ANR	11018491	MemberAccess	cc . pattern		11018165	0					
ANR	11018492	Identifier	cc		11018165	0					
ANR	11018493	Identifier	pattern		11018165	1					
ANR	11018494	PrimaryExpression	0x00		11018165	1					
ANR	11018495	ForStatement	for ( i = 0 ; i < 3 ; i ++ )		11018165	27					
ANR	11018496	ForInit	i = 0 ;	5390:9:170615:170618	11018165	0	True				
ANR	11018497	AssignmentExpression	i = 0		11018165	0		=			
ANR	11018498	Identifier	i		11018165	0					
ANR	11018499	PrimaryExpression	0		11018165	1					
ANR	11018500	Condition	i < 3	5390:13:170619:170621	11018165	1	True				
ANR	11018501	RelationalExpression	i < 3		11018165	0		<			
ANR	11018502	Identifier	i		11018165	0					
ANR	11018503	PrimaryExpression	3		11018165	1					
ANR	11018504	PostIncDecOperationExpression	i ++	5390:17:170623:170625	11018165	2	True				
ANR	11018505	Identifier	i		11018165	0					
ANR	11018506	IncDec	++		11018165	1					
ANR	11018507	ExpressionStatement	cc . paint . values [ i ] = 0	5391:8:170636:170658	11018165	3	True				
ANR	11018508	AssignmentExpression	cc . paint . values [ i ] = 0		11018165	0		=			
ANR	11018509	ArrayIndexing	cc . paint . values [ i ]		11018165	0					
ANR	11018510	MemberAccess	cc . paint . values		11018165	0					
ANR	11018511	MemberAccess	cc . paint		11018165	0					
ANR	11018512	Identifier	cc		11018165	0					
ANR	11018513	Identifier	paint		11018165	1					
ANR	11018514	Identifier	values		11018165	1					
ANR	11018515	Identifier	i		11018165	1					
ANR	11018516	PrimaryExpression	0		11018165	1					
ANR	11018517	ExpressionStatement	"code = gs_setcolor ( igs , & cc )"	5392:4:170664:170692	11018165	28	True				
ANR	11018518	AssignmentExpression	"code = gs_setcolor ( igs , & cc )"		11018165	0		=			
ANR	11018519	Identifier	code		11018165	0					
ANR	11018520	CallExpression	"gs_setcolor ( igs , & cc )"		11018165	1					
ANR	11018521	Callee	gs_setcolor		11018165	0					
ANR	11018522	Identifier	gs_setcolor		11018165	0					
ANR	11018523	ArgumentList	igs		11018165	1					
ANR	11018524	Argument	igs		11018165	0					
ANR	11018525	Identifier	igs		11018165	0					
ANR	11018526	Argument	& cc		11018165	1					
ANR	11018527	UnaryOperationExpression	& cc		11018165	0					
ANR	11018528	UnaryOperator	&		11018165	0					
ANR	11018529	Identifier	cc		11018165	1					
ANR	11018530	ReturnStatement	return code ;	5393:4:170698:170709	11018165	29	True				
ANR	11018531	Identifier	code		11018165	0					
ANR	11018532	ReturnType	static int		11018165	1					
ANR	11018533	Identifier	setcalrgbspace		11018165	2					
ANR	11018534	ParameterList	"i_ctx_t * i_ctx_p , ref * r , int * stage , int * cont , int CIESubst"		11018165	3					
ANR	11018535	Parameter	i_ctx_t * i_ctx_p	5334:26:168577:168593	11018165	0	True				
ANR	11018536	ParameterType	i_ctx_t *		11018165	0					
ANR	11018537	Identifier	i_ctx_p		11018165	1					
ANR	11018538	Parameter	ref * r	5334:45:168596:168601	11018165	1	True				
ANR	11018539	ParameterType	ref *		11018165	0					
ANR	11018540	Identifier	r		11018165	1					
ANR	11018541	Parameter	int * stage	5334:53:168604:168613	11018165	2	True				
ANR	11018542	ParameterType	int *		11018165	0					
ANR	11018543	Identifier	stage		11018165	1					
ANR	11018544	Parameter	int * cont	5334:65:168616:168624	11018165	3	True				
ANR	11018545	ParameterType	int *		11018165	0					
ANR	11018546	Identifier	cont		11018165	1					
ANR	11018547	Parameter	int CIESubst	5334:76:168627:168638	11018165	4	True				
ANR	11018548	ParameterType	int		11018165	0					
ANR	11018549	Identifier	CIESubst		11018165	1					
ANR	11018550	CFGEntryNode	ENTRY		11018165		True				
ANR	11018551	CFGExitNode	EXIT		11018165		True				
ANR	11018552	Symbol	cc . pattern		11018165						
ANR	11018553	Symbol	code		11018165						
ANR	11018554	Symbol	gs_error_rangecheck		11018165						
ANR	11018555	Symbol	* cc		11018165						
ANR	11018556	Symbol	gs_setcolor		11018165						
ANR	11018557	Symbol	dflt_gamma		11018165						
ANR	11018558	Symbol	* gamma		11018165						
ANR	11018559	Symbol	& cc		11018165						
ANR	11018560	Symbol	matrix		11018165						
ANR	11018561	Symbol	gs_rethrow		11018165						
ANR	11018562	Symbol	white		11018165						
ANR	11018563	Symbol	dflt_white		11018165						
ANR	11018564	Symbol	dict_floats_param		11018165						
ANR	11018565	Symbol	igs		11018165						
ANR	11018566	Symbol	* cc . paint . values		11018165						
ANR	11018567	Symbol	imemory		11018165						
ANR	11018568	Symbol	cont		11018165						
ANR	11018569	Symbol	CIESubst		11018165						
ANR	11018570	Symbol	rgbdict		11018165						
ANR	11018571	Symbol	cc		11018165						
ANR	11018572	Symbol	& rgbdict		11018165						
ANR	11018573	Symbol	rgbdict . value		11018165						
ANR	11018574	Symbol	array_get		11018165						
ANR	11018575	Symbol	black		11018165						
ANR	11018576	Symbol	i		11018165						
ANR	11018577	Symbol	dflt_matrix		11018165						
ANR	11018578	Symbol	* white		11018165						
ANR	11018579	Symbol	dflt_black		11018165						
ANR	11018580	Symbol	r		11018165						
ANR	11018581	Symbol	* cc . paint		11018165						
ANR	11018582	Symbol	* i		11018165						
ANR	11018583	Symbol	stage		11018165						
ANR	11018584	Symbol	* cont		11018165						
ANR	11018585	Symbol	rgbdict . value . saveid		11018165						
ANR	11018586	Symbol	seticc_cal		11018165						
ANR	11018587	Symbol	i_ctx_p		11018165						
ANR	11018588	Symbol	cc . paint		11018165						
ANR	11018589	Symbol	cc . paint . values		11018165						
ANR	11018590	Symbol	gamma		11018165						
ANR	11018591	Function	validatecalrgbspace	5396:0:170714:171784							
ANR	11018592	FunctionDef	"validatecalrgbspace (i_ctx_t * i_ctx_p , ref * * r)"		11018591	0					
ANR	11018593	CompoundStatement		5397:0:170773:171784	11018591	0					
ANR	11018594	IdentifierDeclStatement	int code = 0 ;	5398:4:170779:170789	11018591	0	True				
ANR	11018595	IdentifierDecl	code = 0		11018591	0					
ANR	11018596	IdentifierDeclType	int		11018591	0					
ANR	11018597	Identifier	code		11018591	1					
ANR	11018598	AssignmentExpression	code = 0		11018591	2		=			
ANR	11018599	Identifier	code		11018591	0					
ANR	11018600	PrimaryExpression	0		11018591	1					
ANR	11018601	IdentifierDeclStatement	"ref * space , calrgbdict ;"	5399:4:170795:170817	11018591	1	True				
ANR	11018602	IdentifierDecl	* space		11018591	0					
ANR	11018603	IdentifierDeclType	ref *		11018591	0					
ANR	11018604	Identifier	space		11018591	1					
ANR	11018605	IdentifierDecl	calrgbdict		11018591	1					
ANR	11018606	IdentifierDeclType	ref		11018591	0					
ANR	11018607	Identifier	calrgbdict		11018591	1					
ANR	11018608	ExpressionStatement	space = * r	5401:4:170824:170834	11018591	2	True				
ANR	11018609	AssignmentExpression	space = * r		11018591	0		=			
ANR	11018610	Identifier	space		11018591	0					
ANR	11018611	UnaryOperationExpression	* r		11018591	1					
ANR	11018612	UnaryOperator	*		11018591	0					
ANR	11018613	Identifier	r		11018591	1					
ANR	11018614	IfStatement	if ( ! r_is_array ( space ) )		11018591	3					
ANR	11018615	Condition	! r_is_array ( space )	5402:8:170844:170861	11018591	0	True				
ANR	11018616	UnaryOperationExpression	! r_is_array ( space )		11018591	0					
ANR	11018617	UnaryOperator	!		11018591	0					
ANR	11018618	CallExpression	r_is_array ( space )		11018591	1					
ANR	11018619	Callee	r_is_array		11018591	0					
ANR	11018620	Identifier	r_is_array		11018591	0					
ANR	11018621	ArgumentList	space		11018591	1					
ANR	11018622	Argument	space		11018591	0					
ANR	11018623	Identifier	space		11018591	0					
ANR	11018624	ExpressionStatement	return_error ( gs_error_typecheck )	5403:8:170872:170904	11018591	1	True				
ANR	11018625	CallExpression	return_error ( gs_error_typecheck )		11018591	0					
ANR	11018626	Callee	return_error		11018591	0					
ANR	11018627	Identifier	return_error		11018591	0					
ANR	11018628	ArgumentList	gs_error_typecheck		11018591	1					
ANR	11018629	Argument	gs_error_typecheck		11018591	0					
ANR	11018630	Identifier	gs_error_typecheck		11018591	0					
ANR	11018631	IfStatement	if ( r_size ( space ) < 2 )		11018591	4					
ANR	11018632	Condition	r_size ( space ) < 2	5405:8:170975:170991	11018591	0	True				
ANR	11018633	RelationalExpression	r_size ( space ) < 2		11018591	0		<			
ANR	11018634	CallExpression	r_size ( space )		11018591	0					
ANR	11018635	Callee	r_size		11018591	0					
ANR	11018636	Identifier	r_size		11018591	0					
ANR	11018637	ArgumentList	space		11018591	1					
ANR	11018638	Argument	space		11018591	0					
ANR	11018639	Identifier	space		11018591	0					
ANR	11018640	PrimaryExpression	2		11018591	1					
ANR	11018641	ExpressionStatement	return_error ( gs_error_rangecheck )	5406:8:171002:171035	11018591	1	True				
ANR	11018642	CallExpression	return_error ( gs_error_rangecheck )		11018591	0					
ANR	11018643	Callee	return_error		11018591	0					
ANR	11018644	Identifier	return_error		11018591	0					
ANR	11018645	ArgumentList	gs_error_rangecheck		11018591	1					
ANR	11018646	Argument	gs_error_rangecheck		11018591	0					
ANR	11018647	Identifier	gs_error_rangecheck		11018591	0					
ANR	11018648	ExpressionStatement	"code = array_get ( imemory , space , 1 , & calrgbdict )"	5407:4:171041:171089	11018591	5	True				
ANR	11018649	AssignmentExpression	"code = array_get ( imemory , space , 1 , & calrgbdict )"		11018591	0		=			
ANR	11018650	Identifier	code		11018591	0					
ANR	11018651	CallExpression	"array_get ( imemory , space , 1 , & calrgbdict )"		11018591	1					
ANR	11018652	Callee	array_get		11018591	0					
ANR	11018653	Identifier	array_get		11018591	0					
ANR	11018654	ArgumentList	imemory		11018591	1					
ANR	11018655	Argument	imemory		11018591	0					
ANR	11018656	Identifier	imemory		11018591	0					
ANR	11018657	Argument	space		11018591	1					
ANR	11018658	Identifier	space		11018591	0					
ANR	11018659	Argument	1		11018591	2					
ANR	11018660	PrimaryExpression	1		11018591	0					
ANR	11018661	Argument	& calrgbdict		11018591	3					
ANR	11018662	UnaryOperationExpression	& calrgbdict		11018591	0					
ANR	11018663	UnaryOperator	&		11018591	0					
ANR	11018664	Identifier	calrgbdict		11018591	1					
ANR	11018665	IfStatement	if ( code < 0 )		11018591	6					
ANR	11018666	Condition	code < 0	5408:8:171099:171106	11018591	0	True				
ANR	11018667	RelationalExpression	code < 0		11018591	0		<			
ANR	11018668	Identifier	code		11018591	0					
ANR	11018669	PrimaryExpression	0		11018591	1					
ANR	11018670	ReturnStatement	return code ;	5409:8:171117:171128	11018591	1	True				
ANR	11018671	Identifier	code		11018591	0					
ANR	11018672	IfStatement	"if ( ! r_has_type ( & calrgbdict , t_dictionary ) )"		11018591	7					
ANR	11018673	Condition	"! r_has_type ( & calrgbdict , t_dictionary )"	5410:8:171138:171175	11018591	0	True				
ANR	11018674	UnaryOperationExpression	"! r_has_type ( & calrgbdict , t_dictionary )"		11018591	0					
ANR	11018675	UnaryOperator	!		11018591	0					
ANR	11018676	CallExpression	"r_has_type ( & calrgbdict , t_dictionary )"		11018591	1					
ANR	11018677	Callee	r_has_type		11018591	0					
ANR	11018678	Identifier	r_has_type		11018591	0					
ANR	11018679	ArgumentList	& calrgbdict		11018591	1					
ANR	11018680	Argument	& calrgbdict		11018591	0					
ANR	11018681	UnaryOperationExpression	& calrgbdict		11018591	0					
ANR	11018682	UnaryOperator	&		11018591	0					
ANR	11018683	Identifier	calrgbdict		11018591	1					
ANR	11018684	Argument	t_dictionary		11018591	1					
ANR	11018685	Identifier	t_dictionary		11018591	0					
ANR	11018686	ExpressionStatement	return_error ( gs_error_typecheck )	5411:8:171186:171218	11018591	1	True				
ANR	11018687	CallExpression	return_error ( gs_error_typecheck )		11018591	0					
ANR	11018688	Callee	return_error		11018591	0					
ANR	11018689	Identifier	return_error		11018591	0					
ANR	11018690	ArgumentList	gs_error_typecheck		11018591	1					
ANR	11018691	Argument	gs_error_typecheck		11018591	0					
ANR	11018692	Identifier	gs_error_typecheck		11018591	0					
ANR	11018693	ExpressionStatement	"code = checkWhitePoint ( i_ctx_p , & calrgbdict )"	5413:4:171275:171319	11018591	8	True				
ANR	11018694	AssignmentExpression	"code = checkWhitePoint ( i_ctx_p , & calrgbdict )"		11018591	0		=			
ANR	11018695	Identifier	code		11018591	0					
ANR	11018696	CallExpression	"checkWhitePoint ( i_ctx_p , & calrgbdict )"		11018591	1					
ANR	11018697	Callee	checkWhitePoint		11018591	0					
ANR	11018698	Identifier	checkWhitePoint		11018591	0					
ANR	11018699	ArgumentList	i_ctx_p		11018591	1					
ANR	11018700	Argument	i_ctx_p		11018591	0					
ANR	11018701	Identifier	i_ctx_p		11018591	0					
ANR	11018702	Argument	& calrgbdict		11018591	1					
ANR	11018703	UnaryOperationExpression	& calrgbdict		11018591	0					
ANR	11018704	UnaryOperator	&		11018591	0					
ANR	11018705	Identifier	calrgbdict		11018591	1					
ANR	11018706	IfStatement	if ( code != 0 )		11018591	9					
ANR	11018707	Condition	code != 0	5414:8:171329:171337	11018591	0	True				
ANR	11018708	EqualityExpression	code != 0		11018591	0		!=			
ANR	11018709	Identifier	code		11018591	0					
ANR	11018710	PrimaryExpression	0		11018591	1					
ANR	11018711	ReturnStatement	return code ;	5415:8:171348:171359	11018591	1	True				
ANR	11018712	Identifier	code		11018591	0					
ANR	11018713	ExpressionStatement	"code = checkBlackPoint ( i_ctx_p , & calrgbdict )"	5417:4:171423:171467	11018591	10	True				
ANR	11018714	AssignmentExpression	"code = checkBlackPoint ( i_ctx_p , & calrgbdict )"		11018591	0		=			
ANR	11018715	Identifier	code		11018591	0					
ANR	11018716	CallExpression	"checkBlackPoint ( i_ctx_p , & calrgbdict )"		11018591	1					
ANR	11018717	Callee	checkBlackPoint		11018591	0					
ANR	11018718	Identifier	checkBlackPoint		11018591	0					
ANR	11018719	ArgumentList	i_ctx_p		11018591	1					
ANR	11018720	Argument	i_ctx_p		11018591	0					
ANR	11018721	Identifier	i_ctx_p		11018591	0					
ANR	11018722	Argument	& calrgbdict		11018591	1					
ANR	11018723	UnaryOperationExpression	& calrgbdict		11018591	0					
ANR	11018724	UnaryOperator	&		11018591	0					
ANR	11018725	Identifier	calrgbdict		11018591	1					
ANR	11018726	IfStatement	if ( code < 0 )		11018591	11					
ANR	11018727	Condition	code < 0	5418:8:171477:171484	11018591	0	True				
ANR	11018728	RelationalExpression	code < 0		11018591	0		<			
ANR	11018729	Identifier	code		11018591	0					
ANR	11018730	PrimaryExpression	0		11018591	1					
ANR	11018731	ReturnStatement	return code ;	5419:8:171495:171506	11018591	1	True				
ANR	11018732	Identifier	code		11018591	0					
ANR	11018733	ExpressionStatement	"code = checkGamma ( i_ctx_p , & calrgbdict , 3 )"	5421:4:171541:171583	11018591	12	True				
ANR	11018734	AssignmentExpression	"code = checkGamma ( i_ctx_p , & calrgbdict , 3 )"		11018591	0		=			
ANR	11018735	Identifier	code		11018591	0					
ANR	11018736	CallExpression	"checkGamma ( i_ctx_p , & calrgbdict , 3 )"		11018591	1					
ANR	11018737	Callee	checkGamma		11018591	0					
ANR	11018738	Identifier	checkGamma		11018591	0					
ANR	11018739	ArgumentList	i_ctx_p		11018591	1					
ANR	11018740	Argument	i_ctx_p		11018591	0					
ANR	11018741	Identifier	i_ctx_p		11018591	0					
ANR	11018742	Argument	& calrgbdict		11018591	1					
ANR	11018743	UnaryOperationExpression	& calrgbdict		11018591	0					
ANR	11018744	UnaryOperator	&		11018591	0					
ANR	11018745	Identifier	calrgbdict		11018591	1					
ANR	11018746	Argument	3		11018591	2					
ANR	11018747	PrimaryExpression	3		11018591	0					
ANR	11018748	IfStatement	if ( code < 0 )		11018591	13					
ANR	11018749	Condition	code < 0	5422:8:171593:171600	11018591	0	True				
ANR	11018750	RelationalExpression	code < 0		11018591	0		<			
ANR	11018751	Identifier	code		11018591	0					
ANR	11018752	PrimaryExpression	0		11018591	1					
ANR	11018753	ReturnStatement	return code ;	5423:8:171611:171622	11018591	1	True				
ANR	11018754	Identifier	code		11018591	0					
ANR	11018755	ExpressionStatement	"code = checkCalMatrix ( i_ctx_p , & calrgbdict )"	5425:4:171651:171694	11018591	14	True				
ANR	11018756	AssignmentExpression	"code = checkCalMatrix ( i_ctx_p , & calrgbdict )"		11018591	0		=			
ANR	11018757	Identifier	code		11018591	0					
ANR	11018758	CallExpression	"checkCalMatrix ( i_ctx_p , & calrgbdict )"		11018591	1					
ANR	11018759	Callee	checkCalMatrix		11018591	0					
ANR	11018760	Identifier	checkCalMatrix		11018591	0					
ANR	11018761	ArgumentList	i_ctx_p		11018591	1					
ANR	11018762	Argument	i_ctx_p		11018591	0					
ANR	11018763	Identifier	i_ctx_p		11018591	0					
ANR	11018764	Argument	& calrgbdict		11018591	1					
ANR	11018765	UnaryOperationExpression	& calrgbdict		11018591	0					
ANR	11018766	UnaryOperator	&		11018591	0					
ANR	11018767	Identifier	calrgbdict		11018591	1					
ANR	11018768	IfStatement	if ( code < 0 )		11018591	15					
ANR	11018769	Condition	code < 0	5426:8:171704:171711	11018591	0	True				
ANR	11018770	RelationalExpression	code < 0		11018591	0		<			
ANR	11018771	Identifier	code		11018591	0					
ANR	11018772	PrimaryExpression	0		11018591	1					
ANR	11018773	ReturnStatement	return code ;	5427:8:171722:171733	11018591	1	True				
ANR	11018774	Identifier	code		11018591	0					
ANR	11018775	ExpressionStatement	* r = 0	5428:4:171739:171745	11018591	16	True				
ANR	11018776	AssignmentExpression	* r = 0		11018591	0		=			
ANR	11018777	UnaryOperationExpression	* r		11018591	0					
ANR	11018778	UnaryOperator	*		11018591	0					
ANR	11018779	Identifier	r		11018591	1					
ANR	11018780	PrimaryExpression	0		11018591	1					
ANR	11018781	ReturnStatement	return 0 ;	5429:4:171774:171782	11018591	17	True				
ANR	11018782	PrimaryExpression	0		11018591	0					
ANR	11018783	ReturnType	static int		11018591	1					
ANR	11018784	Identifier	validatecalrgbspace		11018591	2					
ANR	11018785	ParameterList	"i_ctx_t * i_ctx_p , ref * * r"		11018591	3					
ANR	11018786	Parameter	i_ctx_t * i_ctx_p	5396:31:170745:170761	11018591	0	True				
ANR	11018787	ParameterType	i_ctx_t *		11018591	0					
ANR	11018788	Identifier	i_ctx_p		11018591	1					
ANR	11018789	Parameter	ref * * r	5396:50:170764:170770	11018591	1	True				
ANR	11018790	ParameterType	ref * *		11018591	0					
ANR	11018791	Identifier	r		11018591	1					
ANR	11018792	CFGEntryNode	ENTRY		11018591		True				
ANR	11018793	CFGExitNode	EXIT		11018591		True				
ANR	11018794	Symbol	checkCalMatrix		11018591						
ANR	11018795	Symbol	code		11018591						
ANR	11018796	Symbol	t_dictionary		11018591						
ANR	11018797	Symbol	calrgbdict		11018591						
ANR	11018798	Symbol	gs_error_rangecheck		11018591						
ANR	11018799	Symbol	array_get		11018591						
ANR	11018800	Symbol	& calrgbdict		11018591						
ANR	11018801	Symbol	space		11018591						
ANR	11018802	Symbol	r		11018591						
ANR	11018803	Symbol	gs_error_typecheck		11018591						
ANR	11018804	Symbol	r_has_type		11018591						
ANR	11018805	Symbol	checkBlackPoint		11018591						
ANR	11018806	Symbol	i_ctx_p		11018591						
ANR	11018807	Symbol	r_size		11018591						
ANR	11018808	Symbol	r_is_array		11018591						
ANR	11018809	Symbol	imemory		11018591						
ANR	11018810	Symbol	checkWhitePoint		11018591						
ANR	11018811	Symbol	* r		11018591						
ANR	11018812	Symbol	checkGamma		11018591						
ANR	11018813	DeclStmt									
ANR	11018814	Decl							int	"int ( i_ctx_t * i_ctx_p , ref * space , float * ptr )"	iccrange
ANR	11018815	Function	seticcspace	5434:0:171866:177105							
ANR	11018816	FunctionDef	"seticcspace (i_ctx_t * i_ctx_p , ref * r , int * stage , int * cont , int CIESubst)"		11018815	0					
ANR	11018817	CompoundStatement		5435:0:171953:177105	11018815	0					
ANR	11018818	IdentifierDeclStatement	os_ptr op = osp ;	5436:4:171959:171974	11018815	0	True				
ANR	11018819	IdentifierDecl	op = osp		11018815	0					
ANR	11018820	IdentifierDeclType	os_ptr		11018815	0					
ANR	11018821	Identifier	op		11018815	1					
ANR	11018822	AssignmentExpression	op = osp		11018815	2		=			
ANR	11018823	Identifier	osp		11018815	0					
ANR	11018824	Identifier	osp		11018815	1					
ANR	11018825	IdentifierDeclStatement	"ref ICCdict , * tempref , * altref = NULL , * nocie = NULL ;"	5437:4:171980:172034	11018815	1	True				
ANR	11018826	IdentifierDecl	ICCdict		11018815	0					
ANR	11018827	IdentifierDeclType	ref		11018815	0					
ANR	11018828	Identifier	ICCdict		11018815	1					
ANR	11018829	IdentifierDecl	* tempref		11018815	1					
ANR	11018830	IdentifierDeclType	ref *		11018815	0					
ANR	11018831	Identifier	tempref		11018815	1					
ANR	11018832	IdentifierDecl	* altref = NULL		11018815	2					
ANR	11018833	IdentifierDeclType	ref *		11018815	0					
ANR	11018834	Identifier	altref		11018815	1					
ANR	11018835	AssignmentExpression	* altref = NULL		11018815	2		=			
ANR	11018836	Identifier	NULL		11018815	0					
ANR	11018837	Identifier	NULL		11018815	1					
ANR	11018838	IdentifierDecl	* nocie = NULL		11018815	3					
ANR	11018839	IdentifierDeclType	ref *		11018815	0					
ANR	11018840	Identifier	nocie		11018815	1					
ANR	11018841	AssignmentExpression	* nocie = NULL		11018815	2		=			
ANR	11018842	Identifier	NULL		11018815	0					
ANR	11018843	Identifier	NULL		11018815	1					
ANR	11018844	IdentifierDeclStatement	"int components , code ;"	5438:4:172040:172060	11018815	2	True				
ANR	11018845	IdentifierDecl	components		11018815	0					
ANR	11018846	IdentifierDeclType	int		11018815	0					
ANR	11018847	Identifier	components		11018815	1					
ANR	11018848	IdentifierDecl	code		11018815	1					
ANR	11018849	IdentifierDeclType	int		11018815	0					
ANR	11018850	Identifier	code		11018815	1					
ANR	11018851	IdentifierDeclStatement	float range [ 8 ] ;	5439:4:172066:172080	11018815	3	True				
ANR	11018852	IdentifierDecl	range [ 8 ]		11018815	0					
ANR	11018853	IdentifierDeclType	float [ 8 ]		11018815	0					
ANR	11018854	Identifier	range		11018815	1					
ANR	11018855	PrimaryExpression	8		11018815	2					
ANR	11018856	ExpressionStatement	"code = dict_find_string ( systemdict , ""NOCIE"" , & nocie )"	5441:4:172087:172139	11018815	4	True				
ANR	11018857	AssignmentExpression	"code = dict_find_string ( systemdict , ""NOCIE"" , & nocie )"		11018815	0		=			
ANR	11018858	Identifier	code		11018815	0					
ANR	11018859	CallExpression	"dict_find_string ( systemdict , ""NOCIE"" , & nocie )"		11018815	1					
ANR	11018860	Callee	dict_find_string		11018815	0					
ANR	11018861	Identifier	dict_find_string		11018815	0					
ANR	11018862	ArgumentList	systemdict		11018815	1					
ANR	11018863	Argument	systemdict		11018815	0					
ANR	11018864	Identifier	systemdict		11018815	0					
ANR	11018865	Argument	"""NOCIE"""		11018815	1					
ANR	11018866	PrimaryExpression	"""NOCIE"""		11018815	0					
ANR	11018867	Argument	& nocie		11018815	2					
ANR	11018868	UnaryOperationExpression	& nocie		11018815	0					
ANR	11018869	UnaryOperator	&		11018815	0					
ANR	11018870	Identifier	nocie		11018815	1					
ANR	11018871	IfStatement	if ( code > 0 )		11018815	5					
ANR	11018872	Condition	code > 0	5442:8:172149:172156	11018815	0	True				
ANR	11018873	RelationalExpression	code > 0		11018815	0		>			
ANR	11018874	Identifier	code		11018815	0					
ANR	11018875	PrimaryExpression	0		11018815	1					
ANR	11018876	CompoundStatement		8:18:205:205	11018815	1					
ANR	11018877	IfStatement	"if ( ! r_has_type ( nocie , t_boolean ) )"		11018815	0					
ANR	11018878	Condition	"! r_has_type ( nocie , t_boolean )"	5443:12:172173:172201	11018815	0	True				
ANR	11018879	UnaryOperationExpression	"! r_has_type ( nocie , t_boolean )"		11018815	0					
ANR	11018880	UnaryOperator	!		11018815	0					
ANR	11018881	CallExpression	"r_has_type ( nocie , t_boolean )"		11018815	1					
ANR	11018882	Callee	r_has_type		11018815	0					
ANR	11018883	Identifier	r_has_type		11018815	0					
ANR	11018884	ArgumentList	nocie		11018815	1					
ANR	11018885	Argument	nocie		11018815	0					
ANR	11018886	Identifier	nocie		11018815	0					
ANR	11018887	Argument	t_boolean		11018815	1					
ANR	11018888	Identifier	t_boolean		11018815	0					
ANR	11018889	ExpressionStatement	return_error ( gs_error_typecheck )	5444:12:172216:172248	11018815	1	True				
ANR	11018890	CallExpression	return_error ( gs_error_typecheck )		11018815	0					
ANR	11018891	Callee	return_error		11018815	0					
ANR	11018892	Identifier	return_error		11018815	0					
ANR	11018893	ArgumentList	gs_error_typecheck		11018815	1					
ANR	11018894	Argument	gs_error_typecheck		11018815	0					
ANR	11018895	Identifier	gs_error_typecheck		11018815	0					
ANR	11018896	ExpressionStatement	* cont = 0	5446:4:172260:172269	11018815	6	True				
ANR	11018897	AssignmentExpression	* cont = 0		11018815	0		=			
ANR	11018898	UnaryOperationExpression	* cont		11018815	0					
ANR	11018899	UnaryOperator	*		11018815	0					
ANR	11018900	Identifier	cont		11018815	1					
ANR	11018901	PrimaryExpression	0		11018815	1					
ANR	11018902	DoStatement	do		11018815	7					
ANR	11018903	CompoundStatement		13:7:324:324	11018815	0					
ANR	11018904	SwitchStatement	switch ( * stage )		11018815	0					
ANR	11018905	Condition	* stage	5448:15:172295:172300	11018815	0	True				
ANR	11018906	UnaryOperationExpression	* stage		11018815	0					
ANR	11018907	UnaryOperator	*		11018815	0					
ANR	11018908	Identifier	stage		11018815	1					
ANR	11018909	CompoundStatement		14:23:349:349	11018815	1					
ANR	11018910	Label	case 0 :	5449:12:172317:172323	11018815	0	True				
ANR	11018911	ExpressionStatement	( * stage ) ++	5450:16:172341:172351	11018815	1	True				
ANR	11018912	PostIncDecOperationExpression	( * stage ) ++		11018815	0					
ANR	11018913	UnaryOperationExpression	* stage		11018815	0					
ANR	11018914	UnaryOperator	*		11018815	0					
ANR	11018915	Identifier	stage		11018815	1					
ANR	11018916	IncDec	++		11018815	1					
ANR	11018917	ExpressionStatement	"code = array_get ( imemory , r , 1 , & ICCdict )"	5451:16:172369:172410	11018815	2	True				
ANR	11018918	AssignmentExpression	"code = array_get ( imemory , r , 1 , & ICCdict )"		11018815	0		=			
ANR	11018919	Identifier	code		11018815	0					
ANR	11018920	CallExpression	"array_get ( imemory , r , 1 , & ICCdict )"		11018815	1					
ANR	11018921	Callee	array_get		11018815	0					
ANR	11018922	Identifier	array_get		11018815	0					
ANR	11018923	ArgumentList	imemory		11018815	1					
ANR	11018924	Argument	imemory		11018815	0					
ANR	11018925	Identifier	imemory		11018815	0					
ANR	11018926	Argument	r		11018815	1					
ANR	11018927	Identifier	r		11018815	0					
ANR	11018928	Argument	1		11018815	2					
ANR	11018929	PrimaryExpression	1		11018815	0					
ANR	11018930	Argument	& ICCdict		11018815	3					
ANR	11018931	UnaryOperationExpression	& ICCdict		11018815	0					
ANR	11018932	UnaryOperator	&		11018815	0					
ANR	11018933	Identifier	ICCdict		11018815	1					
ANR	11018934	IfStatement	if ( code < 0 )		11018815	3					
ANR	11018935	Condition	code < 0	5452:20:172432:172439	11018815	0	True				
ANR	11018936	RelationalExpression	code < 0		11018815	0		<			
ANR	11018937	Identifier	code		11018815	0					
ANR	11018938	PrimaryExpression	0		11018815	1					
ANR	11018939	ReturnStatement	return code ;	5453:20:172462:172473	11018815	1	True				
ANR	11018940	Identifier	code		11018815	0					
ANR	11018941	ExpressionStatement	"code = dict_find_string ( & ICCdict , ""N"" , & tempref )"	5454:16:172491:172539	11018815	4	True				
ANR	11018942	AssignmentExpression	"code = dict_find_string ( & ICCdict , ""N"" , & tempref )"		11018815	0		=			
ANR	11018943	Identifier	code		11018815	0					
ANR	11018944	CallExpression	"dict_find_string ( & ICCdict , ""N"" , & tempref )"		11018815	1					
ANR	11018945	Callee	dict_find_string		11018815	0					
ANR	11018946	Identifier	dict_find_string		11018815	0					
ANR	11018947	ArgumentList	& ICCdict		11018815	1					
ANR	11018948	Argument	& ICCdict		11018815	0					
ANR	11018949	UnaryOperationExpression	& ICCdict		11018815	0					
ANR	11018950	UnaryOperator	&		11018815	0					
ANR	11018951	Identifier	ICCdict		11018815	1					
ANR	11018952	Argument	"""N"""		11018815	1					
ANR	11018953	PrimaryExpression	"""N"""		11018815	0					
ANR	11018954	Argument	& tempref		11018815	2					
ANR	11018955	UnaryOperationExpression	& tempref		11018815	0					
ANR	11018956	UnaryOperator	&		11018815	0					
ANR	11018957	Identifier	tempref		11018815	1					
ANR	11018958	IfStatement	if ( code < 0 )		11018815	5					
ANR	11018959	Condition	code < 0	5455:20:172561:172568	11018815	0	True				
ANR	11018960	RelationalExpression	code < 0		11018815	0		<			
ANR	11018961	Identifier	code		11018815	0					
ANR	11018962	PrimaryExpression	0		11018815	1					
ANR	11018963	ReturnStatement	return code ;	5456:20:172591:172602	11018815	1	True				
ANR	11018964	Identifier	code		11018815	0					
ANR	11018965	IfStatement	if ( code == 0 )		11018815	6					
ANR	11018966	Condition	code == 0	5457:20:172624:172632	11018815	0	True				
ANR	11018967	EqualityExpression	code == 0		11018815	0		==			
ANR	11018968	Identifier	code		11018815	0					
ANR	11018969	PrimaryExpression	0		11018815	1					
ANR	11018970	ReturnStatement	return gs_note_error ( gs_error_undefined ) ;	5458:20:172655:172695	11018815	1	True				
ANR	11018971	CallExpression	gs_note_error ( gs_error_undefined )		11018815	0					
ANR	11018972	Callee	gs_note_error		11018815	0					
ANR	11018973	Identifier	gs_note_error		11018815	0					
ANR	11018974	ArgumentList	gs_error_undefined		11018815	1					
ANR	11018975	Argument	gs_error_undefined		11018815	0					
ANR	11018976	Identifier	gs_error_undefined		11018815	0					
ANR	11018977	ExpressionStatement	components = tempref -> value . intval	5459:16:172713:172747	11018815	7	True				
ANR	11018978	AssignmentExpression	components = tempref -> value . intval		11018815	0		=			
ANR	11018979	Identifier	components		11018815	0					
ANR	11018980	MemberAccess	tempref -> value . intval		11018815	1					
ANR	11018981	PtrMemberAccess	tempref -> value		11018815	0					
ANR	11018982	Identifier	tempref		11018815	0					
ANR	11018983	Identifier	value		11018815	1					
ANR	11018984	Identifier	intval		11018815	1					
ANR	11018985	IfStatement	if ( components > count_of ( range ) / 2 )		11018815	8					
ANR	11018986	Condition	components > count_of ( range ) / 2	5460:20:172769:172798	11018815	0	True				
ANR	11018987	RelationalExpression	components > count_of ( range ) / 2		11018815	0		>			
ANR	11018988	Identifier	components		11018815	0					
ANR	11018989	MultiplicativeExpression	count_of ( range ) / 2		11018815	1		/			
ANR	11018990	CallExpression	count_of ( range )		11018815	0					
ANR	11018991	Callee	count_of		11018815	0					
ANR	11018992	Identifier	count_of		11018815	0					
ANR	11018993	ArgumentList	range		11018815	1					
ANR	11018994	Argument	range		11018815	0					
ANR	11018995	Identifier	range		11018815	0					
ANR	11018996	PrimaryExpression	2		11018815	1					
ANR	11018997	ExpressionStatement	return_error ( gs_error_rangecheck )	5461:20:172821:172854	11018815	1	True				
ANR	11018998	CallExpression	return_error ( gs_error_rangecheck )		11018815	0					
ANR	11018999	Callee	return_error		11018815	0					
ANR	11019000	Identifier	return_error		11018815	0					
ANR	11019001	ArgumentList	gs_error_rangecheck		11018815	1					
ANR	11019002	Argument	gs_error_rangecheck		11018815	0					
ANR	11019003	Identifier	gs_error_rangecheck		11018815	0					
ANR	11019004	IfStatement	if ( nocie && nocie -> value . boolval )		11018815	9					
ANR	11019005	Condition	nocie && nocie -> value . boolval	5464:20:172944:172972	11018815	0	True				
ANR	11019006	AndExpression	nocie && nocie -> value . boolval		11018815	0		&&			
ANR	11019007	Identifier	nocie		11018815	0					
ANR	11019008	MemberAccess	nocie -> value . boolval		11018815	1					
ANR	11019009	PtrMemberAccess	nocie -> value		11018815	0					
ANR	11019010	Identifier	nocie		11018815	0					
ANR	11019011	Identifier	value		11018815	1					
ANR	11019012	Identifier	boolval		11018815	1					
ANR	11019013	CompoundStatement		30:51:1021:1021	11018815	1					
ANR	11019014	ExpressionStatement	"code = dict_find_string ( & ICCdict , ""Alternate"" , & altref )"	5465:20:172997:173052	11018815	0	True				
ANR	11019015	AssignmentExpression	"code = dict_find_string ( & ICCdict , ""Alternate"" , & altref )"		11018815	0		=			
ANR	11019016	Identifier	code		11018815	0					
ANR	11019017	CallExpression	"dict_find_string ( & ICCdict , ""Alternate"" , & altref )"		11018815	1					
ANR	11019018	Callee	dict_find_string		11018815	0					
ANR	11019019	Identifier	dict_find_string		11018815	0					
ANR	11019020	ArgumentList	& ICCdict		11018815	1					
ANR	11019021	Argument	& ICCdict		11018815	0					
ANR	11019022	UnaryOperationExpression	& ICCdict		11018815	0					
ANR	11019023	UnaryOperator	&		11018815	0					
ANR	11019024	Identifier	ICCdict		11018815	1					
ANR	11019025	Argument	"""Alternate"""		11018815	1					
ANR	11019026	PrimaryExpression	"""Alternate"""		11018815	0					
ANR	11019027	Argument	& altref		11018815	2					
ANR	11019028	UnaryOperationExpression	& altref		11018815	0					
ANR	11019029	UnaryOperator	&		11018815	0					
ANR	11019030	Identifier	altref		11018815	1					
ANR	11019031	IfStatement	if ( code > 0 && ( altref != NULL ) && ( r_type ( altref ) != t_null ) )		11018815	1					
ANR	11019032	Condition	code > 0 && ( altref != NULL ) && ( r_type ( altref ) != t_null )	5466:24:173106:173163	11018815	0	True				
ANR	11019033	AndExpression	code > 0 && ( altref != NULL ) && ( r_type ( altref ) != t_null )		11018815	0		&&			
ANR	11019034	RelationalExpression	code > 0		11018815	0		>			
ANR	11019035	Identifier	code		11018815	0					
ANR	11019036	PrimaryExpression	0		11018815	1					
ANR	11019037	AndExpression	( altref != NULL ) && ( r_type ( altref ) != t_null )		11018815	1		&&			
ANR	11019038	EqualityExpression	altref != NULL		11018815	0		!=			
ANR	11019039	Identifier	altref		11018815	0					
ANR	11019040	Identifier	NULL		11018815	1					
ANR	11019041	EqualityExpression	r_type ( altref ) != t_null		11018815	1		!=			
ANR	11019042	CallExpression	r_type ( altref )		11018815	0					
ANR	11019043	Callee	r_type		11018815	0					
ANR	11019044	Identifier	r_type		11018815	0					
ANR	11019045	ArgumentList	altref		11018815	1					
ANR	11019046	Argument	altref		11018815	0					
ANR	11019047	Identifier	altref		11018815	0					
ANR	11019048	Identifier	t_null		11018815	1					
ANR	11019049	CompoundStatement		32:84:1212:1212	11018815	1					
ANR	11019050	ExpressionStatement	push ( 1 )	5471:24:173448:173455	11018815	0	True				
ANR	11019051	CallExpression	push ( 1 )		11018815	0					
ANR	11019052	Callee	push		11018815	0					
ANR	11019053	Identifier	push		11018815	0					
ANR	11019054	ArgumentList	1		11018815	1					
ANR	11019055	Argument	1		11018815	0					
ANR	11019056	PrimaryExpression	1		11018815	0					
ANR	11019057	ExpressionStatement	"ref_assign ( op , altref )"	5472:24:173481:173503	11018815	1	True				
ANR	11019058	CallExpression	"ref_assign ( op , altref )"		11018815	0					
ANR	11019059	Callee	ref_assign		11018815	0					
ANR	11019060	Identifier	ref_assign		11018815	0					
ANR	11019061	ArgumentList	op		11018815	1					
ANR	11019062	Argument	op		11018815	0					
ANR	11019063	Identifier	op		11018815	0					
ANR	11019064	Argument	altref		11018815	1					
ANR	11019065	Identifier	altref		11018815	0					
ANR	11019066	ReturnStatement	return setcolorspace_nosubst ( i_ctx_p ) ;	5476:24:173709:173746	11018815	2	True				
ANR	11019067	CallExpression	setcolorspace_nosubst ( i_ctx_p )		11018815	0					
ANR	11019068	Callee	setcolorspace_nosubst		11018815	0					
ANR	11019069	Identifier	setcolorspace_nosubst		11018815	0					
ANR	11019070	ArgumentList	i_ctx_p		11018815	1					
ANR	11019071	Argument	i_ctx_p		11018815	0					
ANR	11019072	Identifier	i_ctx_p		11018815	0					
ANR	11019073	ElseStatement	else		11018815	0					
ANR	11019074	CompoundStatement		43:27:1821:1821	11018815	0					
ANR	11019075	ExpressionStatement	"code = set_dev_space ( i_ctx_p , components )"	5481:24:173998:174039	11018815	0	True				
ANR	11019076	AssignmentExpression	"code = set_dev_space ( i_ctx_p , components )"		11018815	0		=			
ANR	11019077	Identifier	code		11018815	0					
ANR	11019078	CallExpression	"set_dev_space ( i_ctx_p , components )"		11018815	1					
ANR	11019079	Callee	set_dev_space		11018815	0					
ANR	11019080	Identifier	set_dev_space		11018815	0					
ANR	11019081	ArgumentList	i_ctx_p		11018815	1					
ANR	11019082	Argument	i_ctx_p		11018815	0					
ANR	11019083	Identifier	i_ctx_p		11018815	0					
ANR	11019084	Argument	components		11018815	1					
ANR	11019085	Identifier	components		11018815	0					
ANR	11019086	IfStatement	if ( code != 0 )		11018815	1					
ANR	11019087	Condition	code != 0	5482:28:174069:174077	11018815	0	True				
ANR	11019088	EqualityExpression	code != 0		11018815	0		!=			
ANR	11019089	Identifier	code		11018815	0					
ANR	11019090	PrimaryExpression	0		11018815	1					
ANR	11019091	ReturnStatement	return code ;	5483:28:174108:174119	11018815	1	True				
ANR	11019092	Identifier	code		11018815	0					
ANR	11019093	ExpressionStatement	* stage = 0	5484:24:174145:174155	11018815	2	True				
ANR	11019094	AssignmentExpression	* stage = 0		11018815	0		=			
ANR	11019095	UnaryOperationExpression	* stage		11018815	0					
ANR	11019096	UnaryOperator	*		11018815	0					
ANR	11019097	Identifier	stage		11018815	1					
ANR	11019098	PrimaryExpression	0		11018815	1					
ANR	11019099	ElseStatement	else		11018815	0					
ANR	11019100	CompoundStatement		52:23:2248:2248	11018815	0					
ANR	11019101	ExpressionStatement	"code = iccrange ( i_ctx_p , r , ( float * ) & range )"	5487:20:174224:174268	11018815	0	True				
ANR	11019102	AssignmentExpression	"code = iccrange ( i_ctx_p , r , ( float * ) & range )"		11018815	0		=			
ANR	11019103	Identifier	code		11018815	0					
ANR	11019104	CallExpression	"iccrange ( i_ctx_p , r , ( float * ) & range )"		11018815	1					
ANR	11019105	Callee	iccrange		11018815	0					
ANR	11019106	Identifier	iccrange		11018815	0					
ANR	11019107	ArgumentList	i_ctx_p		11018815	1					
ANR	11019108	Argument	i_ctx_p		11018815	0					
ANR	11019109	Identifier	i_ctx_p		11018815	0					
ANR	11019110	Argument	r		11018815	1					
ANR	11019111	Identifier	r		11018815	0					
ANR	11019112	Argument	( float * ) & range		11018815	2					
ANR	11019113	CastExpression	( float * ) & range		11018815	0					
ANR	11019114	CastTarget	float *		11018815	0					
ANR	11019115	UnaryOperationExpression	& range		11018815	1					
ANR	11019116	UnaryOperator	&		11018815	0					
ANR	11019117	Identifier	range		11018815	1					
ANR	11019118	IfStatement	if ( code < 0 )		11018815	1					
ANR	11019119	Condition	code < 0	5488:24:174294:174301	11018815	0	True				
ANR	11019120	RelationalExpression	code < 0		11018815	0		<			
ANR	11019121	Identifier	code		11018815	0					
ANR	11019122	PrimaryExpression	0		11018815	1					
ANR	11019123	ReturnStatement	return code ;	5489:24:174328:174339	11018815	1	True				
ANR	11019124	Identifier	code		11018815	0					
ANR	11019125	ExpressionStatement	"code = dict_find_string ( & ICCdict , ""DataSource"" , & tempref )"	5490:20:174361:174418	11018815	2	True				
ANR	11019126	AssignmentExpression	"code = dict_find_string ( & ICCdict , ""DataSource"" , & tempref )"		11018815	0		=			
ANR	11019127	Identifier	code		11018815	0					
ANR	11019128	CallExpression	"dict_find_string ( & ICCdict , ""DataSource"" , & tempref )"		11018815	1					
ANR	11019129	Callee	dict_find_string		11018815	0					
ANR	11019130	Identifier	dict_find_string		11018815	0					
ANR	11019131	ArgumentList	& ICCdict		11018815	1					
ANR	11019132	Argument	& ICCdict		11018815	0					
ANR	11019133	UnaryOperationExpression	& ICCdict		11018815	0					
ANR	11019134	UnaryOperator	&		11018815	0					
ANR	11019135	Identifier	ICCdict		11018815	1					
ANR	11019136	Argument	"""DataSource"""		11018815	1					
ANR	11019137	PrimaryExpression	"""DataSource"""		11018815	0					
ANR	11019138	Argument	& tempref		11018815	2					
ANR	11019139	UnaryOperationExpression	& tempref		11018815	0					
ANR	11019140	UnaryOperator	&		11018815	0					
ANR	11019141	Identifier	tempref		11018815	1					
ANR	11019142	IfStatement	if ( code == 0 )		11018815	3					
ANR	11019143	Condition	code == 0	5491:24:174444:174452	11018815	0	True				
ANR	11019144	EqualityExpression	code == 0		11018815	0		==			
ANR	11019145	Identifier	code		11018815	0					
ANR	11019146	PrimaryExpression	0		11018815	1					
ANR	11019147	ReturnStatement	return gs_note_error ( gs_error_undefined ) ;	5492:24:174479:174519	11018815	1	True				
ANR	11019148	CallExpression	gs_note_error ( gs_error_undefined )		11018815	0					
ANR	11019149	Callee	gs_note_error		11018815	0					
ANR	11019150	Identifier	gs_note_error		11018815	0					
ANR	11019151	ArgumentList	gs_error_undefined		11018815	1					
ANR	11019152	Argument	gs_error_undefined		11018815	0					
ANR	11019153	Identifier	gs_error_undefined		11018815	0					
ANR	11019154	IfStatement	"if ( r_has_type ( tempref , t_string ) )"		11018815	4					
ANR	11019155	Condition	"r_has_type ( tempref , t_string )"	5494:24:174620:174648	11018815	0	True				
ANR	11019156	CallExpression	"r_has_type ( tempref , t_string )"		11018815	0					
ANR	11019157	Callee	r_has_type		11018815	0					
ANR	11019158	Identifier	r_has_type		11018815	0					
ANR	11019159	ArgumentList	tempref		11018815	1					
ANR	11019160	Argument	tempref		11018815	0					
ANR	11019161	Identifier	tempref		11018815	0					
ANR	11019162	Argument	t_string		11018815	1					
ANR	11019163	Identifier	t_string		11018815	0					
ANR	11019164	CompoundStatement		62:24:2772:2779	11018815	1					
ANR	11019165	IdentifierDeclStatement	uint n = r_size ( tempref ) ;	5495:24:174676:174700	11018815	0	True				
ANR	11019166	IdentifierDecl	n = r_size ( tempref )		11018815	0					
ANR	11019167	IdentifierDeclType	uint		11018815	0					
ANR	11019168	Identifier	n		11018815	1					
ANR	11019169	AssignmentExpression	n = r_size ( tempref )		11018815	2		=			
ANR	11019170	Identifier	n		11018815	0					
ANR	11019171	CallExpression	r_size ( tempref )		11018815	1					
ANR	11019172	Callee	r_size		11018815	0					
ANR	11019173	Identifier	r_size		11018815	0					
ANR	11019174	ArgumentList	tempref		11018815	1					
ANR	11019175	Argument	tempref		11018815	0					
ANR	11019176	Identifier	tempref		11018815	0					
ANR	11019177	IdentifierDeclStatement	ref rss ;	5496:24:174726:174733	11018815	1	True				
ANR	11019178	IdentifierDecl	rss		11018815	0					
ANR	11019179	IdentifierDeclType	ref		11018815	0					
ANR	11019180	Identifier	rss		11018815	1					
ANR	11019181	ExpressionStatement	"code = make_rss ( i_ctx_p , & rss , tempref -> value . const_bytes , n , r_space ( tempref ) , 0L , n , false )"	5498:24:174760:174853	11018815	2	True				
ANR	11019182	AssignmentExpression	"code = make_rss ( i_ctx_p , & rss , tempref -> value . const_bytes , n , r_space ( tempref ) , 0L , n , false )"		11018815	0		=			
ANR	11019183	Identifier	code		11018815	0					
ANR	11019184	CallExpression	"make_rss ( i_ctx_p , & rss , tempref -> value . const_bytes , n , r_space ( tempref ) , 0L , n , false )"		11018815	1					
ANR	11019185	Callee	make_rss		11018815	0					
ANR	11019186	Identifier	make_rss		11018815	0					
ANR	11019187	ArgumentList	i_ctx_p		11018815	1					
ANR	11019188	Argument	i_ctx_p		11018815	0					
ANR	11019189	Identifier	i_ctx_p		11018815	0					
ANR	11019190	Argument	& rss		11018815	1					
ANR	11019191	UnaryOperationExpression	& rss		11018815	0					
ANR	11019192	UnaryOperator	&		11018815	0					
ANR	11019193	Identifier	rss		11018815	1					
ANR	11019194	Argument	tempref -> value . const_bytes		11018815	2					
ANR	11019195	MemberAccess	tempref -> value . const_bytes		11018815	0					
ANR	11019196	PtrMemberAccess	tempref -> value		11018815	0					
ANR	11019197	Identifier	tempref		11018815	0					
ANR	11019198	Identifier	value		11018815	1					
ANR	11019199	Identifier	const_bytes		11018815	1					
ANR	11019200	Argument	n		11018815	3					
ANR	11019201	Identifier	n		11018815	0					
ANR	11019202	Argument	r_space ( tempref )		11018815	4					
ANR	11019203	CallExpression	r_space ( tempref )		11018815	0					
ANR	11019204	Callee	r_space		11018815	0					
ANR	11019205	Identifier	r_space		11018815	0					
ANR	11019206	ArgumentList	tempref		11018815	1					
ANR	11019207	Argument	tempref		11018815	0					
ANR	11019208	Identifier	tempref		11018815	0					
ANR	11019209	Argument	0L		11018815	5					
ANR	11019210	PrimaryExpression	0L		11018815	0					
ANR	11019211	Argument	n		11018815	6					
ANR	11019212	Identifier	n		11018815	0					
ANR	11019213	Argument	false		11018815	7					
ANR	11019214	Identifier	false		11018815	0					
ANR	11019215	IfStatement	if ( code < 0 )		11018815	3					
ANR	11019216	Condition	code < 0	5499:28:174883:174890	11018815	0	True				
ANR	11019217	RelationalExpression	code < 0		11018815	0		<			
ANR	11019218	Identifier	code		11018815	0					
ANR	11019219	PrimaryExpression	0		11018815	1					
ANR	11019220	ReturnStatement	return code ;	5500:28:174921:174932	11018815	1	True				
ANR	11019221	Identifier	code		11018815	0					
ANR	11019222	ExpressionStatement	"ref_assign ( tempref , & rss )"	5501:24:174958:174983	11018815	4	True				
ANR	11019223	CallExpression	"ref_assign ( tempref , & rss )"		11018815	0					
ANR	11019224	Callee	ref_assign		11018815	0					
ANR	11019225	Identifier	ref_assign		11018815	0					
ANR	11019226	ArgumentList	tempref		11018815	1					
ANR	11019227	Argument	tempref		11018815	0					
ANR	11019228	Identifier	tempref		11018815	0					
ANR	11019229	Argument	& rss		11018815	1					
ANR	11019230	UnaryOperationExpression	& rss		11018815	0					
ANR	11019231	UnaryOperator	&		11018815	0					
ANR	11019232	Identifier	rss		11018815	1					
ANR	11019233	ExpressionStatement	push ( 1 )	5504:20:175108:175115	11018815	5	True				
ANR	11019234	CallExpression	push ( 1 )		11018815	0					
ANR	11019235	Callee	push		11018815	0					
ANR	11019236	Identifier	push		11018815	0					
ANR	11019237	ArgumentList	1		11018815	1					
ANR	11019238	Argument	1		11018815	0					
ANR	11019239	PrimaryExpression	1		11018815	0					
ANR	11019240	ExpressionStatement	"ref_assign ( op , & ICCdict )"	5505:20:175137:175161	11018815	6	True				
ANR	11019241	CallExpression	"ref_assign ( op , & ICCdict )"		11018815	0					
ANR	11019242	Callee	ref_assign		11018815	0					
ANR	11019243	Identifier	ref_assign		11018815	0					
ANR	11019244	ArgumentList	op		11018815	1					
ANR	11019245	Argument	op		11018815	0					
ANR	11019246	Identifier	op		11018815	0					
ANR	11019247	Argument	& ICCdict		11018815	1					
ANR	11019248	UnaryOperationExpression	& ICCdict		11018815	0					
ANR	11019249	UnaryOperator	&		11018815	0					
ANR	11019250	Identifier	ICCdict		11018815	1					
ANR	11019251	ExpressionStatement	"code = seticc ( i_ctx_p , components , op , ( float * ) & range )"	5506:20:175183:175238	11018815	7	True				
ANR	11019252	AssignmentExpression	"code = seticc ( i_ctx_p , components , op , ( float * ) & range )"		11018815	0		=			
ANR	11019253	Identifier	code		11018815	0					
ANR	11019254	CallExpression	"seticc ( i_ctx_p , components , op , ( float * ) & range )"		11018815	1					
ANR	11019255	Callee	seticc		11018815	0					
ANR	11019256	Identifier	seticc		11018815	0					
ANR	11019257	ArgumentList	i_ctx_p		11018815	1					
ANR	11019258	Argument	i_ctx_p		11018815	0					
ANR	11019259	Identifier	i_ctx_p		11018815	0					
ANR	11019260	Argument	components		11018815	1					
ANR	11019261	Identifier	components		11018815	0					
ANR	11019262	Argument	op		11018815	2					
ANR	11019263	Identifier	op		11018815	0					
ANR	11019264	Argument	( float * ) & range		11018815	3					
ANR	11019265	CastExpression	( float * ) & range		11018815	0					
ANR	11019266	CastTarget	float *		11018815	0					
ANR	11019267	UnaryOperationExpression	& range		11018815	1					
ANR	11019268	UnaryOperator	&		11018815	0					
ANR	11019269	Identifier	range		11018815	1					
ANR	11019270	IfStatement	if ( code < 0 )		11018815	8					
ANR	11019271	Condition	code < 0	5507:24:175264:175271	11018815	0	True				
ANR	11019272	RelationalExpression	code < 0		11018815	0		<			
ANR	11019273	Identifier	code		11018815	0					
ANR	11019274	PrimaryExpression	0		11018815	1					
ANR	11019275	CompoundStatement		73:34:3320:3320	11018815	1					
ANR	11019276	ExpressionStatement	"code = dict_find_string ( & ICCdict , ""Alternate"" , & altref )"	5508:24:175300:175355	11018815	0	True				
ANR	11019277	AssignmentExpression	"code = dict_find_string ( & ICCdict , ""Alternate"" , & altref )"		11018815	0		=			
ANR	11019278	Identifier	code		11018815	0					
ANR	11019279	CallExpression	"dict_find_string ( & ICCdict , ""Alternate"" , & altref )"		11018815	1					
ANR	11019280	Callee	dict_find_string		11018815	0					
ANR	11019281	Identifier	dict_find_string		11018815	0					
ANR	11019282	ArgumentList	& ICCdict		11018815	1					
ANR	11019283	Argument	& ICCdict		11018815	0					
ANR	11019284	UnaryOperationExpression	& ICCdict		11018815	0					
ANR	11019285	UnaryOperator	&		11018815	0					
ANR	11019286	Identifier	ICCdict		11018815	1					
ANR	11019287	Argument	"""Alternate"""		11018815	1					
ANR	11019288	PrimaryExpression	"""Alternate"""		11018815	0					
ANR	11019289	Argument	& altref		11018815	2					
ANR	11019290	UnaryOperationExpression	& altref		11018815	0					
ANR	11019291	UnaryOperator	&		11018815	0					
ANR	11019292	Identifier	altref		11018815	1					
ANR	11019293	IfStatement	if ( code > 0 && ( altref != NULL ) && ( r_type ( altref ) != t_null ) )		11018815	1					
ANR	11019294	Condition	code > 0 && ( altref != NULL ) && ( r_type ( altref ) != t_null )	5509:28:175413:175470	11018815	0	True				
ANR	11019295	AndExpression	code > 0 && ( altref != NULL ) && ( r_type ( altref ) != t_null )		11018815	0		&&			
ANR	11019296	RelationalExpression	code > 0		11018815	0		>			
ANR	11019297	Identifier	code		11018815	0					
ANR	11019298	PrimaryExpression	0		11018815	1					
ANR	11019299	AndExpression	( altref != NULL ) && ( r_type ( altref ) != t_null )		11018815	1		&&			
ANR	11019300	EqualityExpression	altref != NULL		11018815	0		!=			
ANR	11019301	Identifier	altref		11018815	0					
ANR	11019302	Identifier	NULL		11018815	1					
ANR	11019303	EqualityExpression	r_type ( altref ) != t_null		11018815	1		!=			
ANR	11019304	CallExpression	r_type ( altref )		11018815	0					
ANR	11019305	Callee	r_type		11018815	0					
ANR	11019306	Identifier	r_type		11018815	0					
ANR	11019307	ArgumentList	altref		11018815	1					
ANR	11019308	Argument	altref		11018815	0					
ANR	11019309	Identifier	altref		11018815	0					
ANR	11019310	Identifier	t_null		11018815	1					
ANR	11019311	CompoundStatement		75:88:3519:3519	11018815	1					
ANR	11019312	ExpressionStatement	"ref_assign ( op , ( ref * ) altref )"	5514:28:175776:175805	11018815	0	True				
ANR	11019313	CallExpression	"ref_assign ( op , ( ref * ) altref )"		11018815	0					
ANR	11019314	Callee	ref_assign		11018815	0					
ANR	11019315	Identifier	ref_assign		11018815	0					
ANR	11019316	ArgumentList	op		11018815	1					
ANR	11019317	Argument	op		11018815	0					
ANR	11019318	Identifier	op		11018815	0					
ANR	11019319	Argument	( ref * ) altref		11018815	1					
ANR	11019320	CastExpression	( ref * ) altref		11018815	0					
ANR	11019321	CastTarget	ref *		11018815	0					
ANR	11019322	Identifier	altref		11018815	1					
ANR	11019323	IfStatement	if ( CIESubst )		11018815	1					
ANR	11019324	Condition	CIESubst	5518:32:176031:176038	11018815	0	True				
ANR	11019325	Identifier	CIESubst		11018815	0					
ANR	11019326	ReturnStatement	return setcolorspace_nosubst ( i_ctx_p ) ;	5519:32:176073:176110	11018815	1	True				
ANR	11019327	CallExpression	setcolorspace_nosubst ( i_ctx_p )		11018815	0					
ANR	11019328	Callee	setcolorspace_nosubst		11018815	0					
ANR	11019329	Identifier	setcolorspace_nosubst		11018815	0					
ANR	11019330	ArgumentList	i_ctx_p		11018815	1					
ANR	11019331	Argument	i_ctx_p		11018815	0					
ANR	11019332	Identifier	i_ctx_p		11018815	0					
ANR	11019333	ElseStatement	else		11018815	0					
ANR	11019334	ReturnStatement	return zsetcolorspace ( i_ctx_p ) ;	5521:32:176177:176207	11018815	0	True				
ANR	11019335	CallExpression	zsetcolorspace ( i_ctx_p )		11018815	0					
ANR	11019336	Callee	zsetcolorspace		11018815	0					
ANR	11019337	Identifier	zsetcolorspace		11018815	0					
ANR	11019338	ArgumentList	i_ctx_p		11018815	1					
ANR	11019339	Argument	i_ctx_p		11018815	0					
ANR	11019340	Identifier	i_ctx_p		11018815	0					
ANR	11019341	ElseStatement	else		11018815	0					
ANR	11019342	CompoundStatement		88:31:4286:4286	11018815	0					
ANR	11019343	ExpressionStatement	"code = set_dev_space ( i_ctx_p , components )"	5526:28:176464:176505	11018815	0	True				
ANR	11019344	AssignmentExpression	"code = set_dev_space ( i_ctx_p , components )"		11018815	0		=			
ANR	11019345	Identifier	code		11018815	0					
ANR	11019346	CallExpression	"set_dev_space ( i_ctx_p , components )"		11018815	1					
ANR	11019347	Callee	set_dev_space		11018815	0					
ANR	11019348	Identifier	set_dev_space		11018815	0					
ANR	11019349	ArgumentList	i_ctx_p		11018815	1					
ANR	11019350	Argument	i_ctx_p		11018815	0					
ANR	11019351	Identifier	i_ctx_p		11018815	0					
ANR	11019352	Argument	components		11018815	1					
ANR	11019353	Identifier	components		11018815	0					
ANR	11019354	IfStatement	if ( code != 0 )		11018815	1					
ANR	11019355	Condition	code != 0	5527:32:176539:176547	11018815	0	True				
ANR	11019356	EqualityExpression	code != 0		11018815	0		!=			
ANR	11019357	Identifier	code		11018815	0					
ANR	11019358	PrimaryExpression	0		11018815	1					
ANR	11019359	ReturnStatement	return code ;	5528:32:176582:176593	11018815	1	True				
ANR	11019360	Identifier	code		11018815	0					
ANR	11019361	ExpressionStatement	* stage = 0	5529:28:176623:176633	11018815	2	True				
ANR	11019362	AssignmentExpression	* stage = 0		11018815	0		=			
ANR	11019363	UnaryOperationExpression	* stage		11018815	0					
ANR	11019364	UnaryOperator	*		11018815	0					
ANR	11019365	Identifier	stage		11018815	1					
ANR	11019366	PrimaryExpression	0		11018815	1					
ANR	11019367	ExpressionStatement	pop ( 1 )	5531:24:176685:176691	11018815	2	True				
ANR	11019368	CallExpression	pop ( 1 )		11018815	0					
ANR	11019369	Callee	pop		11018815	0					
ANR	11019370	Identifier	pop		11018815	0					
ANR	11019371	ArgumentList	1		11018815	1					
ANR	11019372	Argument	1		11018815	0					
ANR	11019373	PrimaryExpression	1		11018815	0					
ANR	11019374	IfStatement	if ( code != 0 )		11018815	9					
ANR	11019375	Condition	code != 0	5533:24:176739:176747	11018815	0	True				
ANR	11019376	EqualityExpression	code != 0		11018815	0		!=			
ANR	11019377	Identifier	code		11018815	0					
ANR	11019378	PrimaryExpression	0		11018815	1					
ANR	11019379	ReturnStatement	return code ;	5534:24:176774:176785	11018815	1	True				
ANR	11019380	Identifier	code		11018815	0					
ANR	11019381	BreakStatement	break ;	5536:16:176821:176826	11018815	10	True				
ANR	11019382	Label	case 1 :	5537:12:176840:176846	11018815	11	True				
ANR	11019383	ExpressionStatement	* stage = 0	5539:16:176901:176911	11018815	12	True				
ANR	11019384	AssignmentExpression	* stage = 0		11018815	0		=			
ANR	11019385	UnaryOperationExpression	* stage		11018815	0					
ANR	11019386	UnaryOperator	*		11018815	0					
ANR	11019387	Identifier	stage		11018815	1					
ANR	11019388	PrimaryExpression	0		11018815	1					
ANR	11019389	ExpressionStatement	code = 0	5540:16:176929:176937	11018815	13	True				
ANR	11019390	AssignmentExpression	code = 0		11018815	0		=			
ANR	11019391	Identifier	code		11018815	0					
ANR	11019392	PrimaryExpression	0		11018815	1					
ANR	11019393	BreakStatement	break ;	5541:16:176955:176960	11018815	14	True				
ANR	11019394	Label	default :	5542:12:176974:176981	11018815	15	True				
ANR	11019395	Identifier	default		11018815	0					
ANR	11019396	ExpressionStatement	return_error ( gs_error_rangecheck )	5543:16:176999:177033	11018815	16	True				
ANR	11019397	CallExpression	return_error ( gs_error_rangecheck )		11018815	0					
ANR	11019398	Callee	return_error		11018815	0					
ANR	11019399	Identifier	return_error		11018815	0					
ANR	11019400	ArgumentList	gs_error_rangecheck		11018815	1					
ANR	11019401	Argument	gs_error_rangecheck		11018815	0					
ANR	11019402	Identifier	gs_error_rangecheck		11018815	0					
ANR	11019403	BreakStatement	break ;	5544:16:177051:177056	11018815	17	True				
ANR	11019404	Condition	* stage	5546:11:177079:177084	11018815	1	True				
ANR	11019405	UnaryOperationExpression	* stage		11018815	0					
ANR	11019406	UnaryOperator	*		11018815	0					
ANR	11019407	Identifier	stage		11018815	1					
ANR	11019408	ReturnStatement	return code ;	5547:4:177092:177103	11018815	8	True				
ANR	11019409	Identifier	code		11018815	0					
ANR	11019410	ReturnType	static int		11018815	1					
ANR	11019411	Identifier	seticcspace		11018815	2					
ANR	11019412	ParameterList	"i_ctx_t * i_ctx_p , ref * r , int * stage , int * cont , int CIESubst"		11018815	3					
ANR	11019413	Parameter	i_ctx_t * i_ctx_p	5434:23:171889:171905	11018815	0	True				
ANR	11019414	ParameterType	i_ctx_t *		11018815	0					
ANR	11019415	Identifier	i_ctx_p		11018815	1					
ANR	11019416	Parameter	ref * r	5434:42:171908:171913	11018815	1	True				
ANR	11019417	ParameterType	ref *		11018815	0					
ANR	11019418	Identifier	r		11018815	1					
ANR	11019419	Parameter	int * stage	5434:50:171916:171925	11018815	2	True				
ANR	11019420	ParameterType	int *		11018815	0					
ANR	11019421	Identifier	stage		11018815	1					
ANR	11019422	Parameter	int * cont	5434:62:171928:171936	11018815	3	True				
ANR	11019423	ParameterType	int *		11018815	0					
ANR	11019424	Identifier	cont		11018815	1					
ANR	11019425	Parameter	int CIESubst	5434:73:171939:171950	11018815	4	True				
ANR	11019426	ParameterType	int		11018815	0					
ANR	11019427	Identifier	CIESubst		11018815	1					
ANR	11019428	CFGEntryNode	ENTRY		11018815		True				
ANR	11019429	CFGExitNode	EXIT		11018815		True				
ANR	11019430	Symbol	gs_error_rangecheck		11018815						
ANR	11019431	Symbol	nocie -> value		11018815						
ANR	11019432	Symbol	gs_error_undefined		11018815						
ANR	11019433	Symbol	* tempref		11018815						
ANR	11019434	Symbol	osp		11018815						
ANR	11019435	Symbol	& ICCdict		11018815						
ANR	11019436	Symbol	nocie -> value . boolval		11018815						
ANR	11019437	Symbol	r_has_type		11018815						
ANR	11019438	Symbol	t_null		11018815						
ANR	11019439	Symbol	set_dev_space		11018815						
ANR	11019440	Symbol	zsetcolorspace		11018815						
ANR	11019441	Symbol	imemory		11018815						
ANR	11019442	Symbol	cont		11018815						
ANR	11019443	Symbol	nocie		11018815						
ANR	11019444	Symbol	iccrange		11018815						
ANR	11019445	Symbol	r_type		11018815						
ANR	11019446	Symbol	NULL		11018815						
ANR	11019447	Symbol	dict_find_string		11018815						
ANR	11019448	Symbol	t_boolean		11018815						
ANR	11019449	Symbol	tempref -> value		11018815						
ANR	11019450	Symbol	i_ctx_p		11018815						
ANR	11019451	Symbol	systemdict		11018815						
ANR	11019452	Symbol	components		11018815						
ANR	11019453	Symbol	code		11018815						
ANR	11019454	Symbol	ICCdict		11018815						
ANR	11019455	Symbol	range		11018815						
ANR	11019456	Symbol	* nocie		11018815						
ANR	11019457	Symbol	gs_error_typecheck		11018815						
ANR	11019458	Symbol	r_space		11018815						
ANR	11019459	Symbol	rss		11018815						
ANR	11019460	Symbol	count_of		11018815						
ANR	11019461	Symbol	r_size		11018815						
ANR	11019462	Symbol	CIESubst		11018815						
ANR	11019463	Symbol	tempref		11018815						
ANR	11019464	Symbol	tempref -> value . intval		11018815						
ANR	11019465	Symbol	op		11018815						
ANR	11019466	Symbol	* stage		11018815						
ANR	11019467	Symbol	altref		11018815						
ANR	11019468	Symbol	seticc		11018815						
ANR	11019469	Symbol	array_get		11018815						
ANR	11019470	Symbol	& altref		11018815						
ANR	11019471	Symbol	false		11018815						
ANR	11019472	Symbol	& tempref		11018815						
ANR	11019473	Symbol	& nocie		11018815						
ANR	11019474	Symbol	n		11018815						
ANR	11019475	Symbol	make_rss		11018815						
ANR	11019476	Symbol	t_string		11018815						
ANR	11019477	Symbol	r		11018815						
ANR	11019478	Symbol	gs_note_error		11018815						
ANR	11019479	Symbol	stage		11018815						
ANR	11019480	Symbol	* cont		11018815						
ANR	11019481	Symbol	tempref -> value . const_bytes		11018815						
ANR	11019482	Symbol	setcolorspace_nosubst		11018815						
ANR	11019483	Symbol	& range		11018815						
ANR	11019484	Symbol	& rss		11018815						
ANR	11019485	Function	iccompareproc	5550:0:177108:178404							
ANR	11019486	FunctionDef	"iccompareproc (i_ctx_t * i_ctx_p , ref * space , ref * testspace)"		11019485	0					
ANR	11019487	CompoundStatement		5551:0:177179:178404	11019485	0					
ANR	11019488	IdentifierDeclStatement	"int code1 , code2 ;"	5552:4:177185:177201	11019485	0	True				
ANR	11019489	IdentifierDecl	code1		11019485	0					
ANR	11019490	IdentifierDeclType	int		11019485	0					
ANR	11019491	Identifier	code1		11019485	1					
ANR	11019492	IdentifierDecl	code2		11019485	1					
ANR	11019493	IdentifierDeclType	int		11019485	0					
ANR	11019494	Identifier	code2		11019485	1					
ANR	11019495	IdentifierDeclStatement	"ref ICCdict1 , ICCdict2 , * tempref1 , * tempref2 ;"	5553:4:177207:177251	11019485	1	True				
ANR	11019496	IdentifierDecl	ICCdict1		11019485	0					
ANR	11019497	IdentifierDeclType	ref		11019485	0					
ANR	11019498	Identifier	ICCdict1		11019485	1					
ANR	11019499	IdentifierDecl	ICCdict2		11019485	1					
ANR	11019500	IdentifierDeclType	ref		11019485	0					
ANR	11019501	Identifier	ICCdict2		11019485	1					
ANR	11019502	IdentifierDecl	* tempref1		11019485	2					
ANR	11019503	IdentifierDeclType	ref *		11019485	0					
ANR	11019504	Identifier	tempref1		11019485	1					
ANR	11019505	IdentifierDecl	* tempref2		11019485	3					
ANR	11019506	IdentifierDeclType	ref *		11019485	0					
ANR	11019507	Identifier	tempref2		11019485	1					
ANR	11019508	IdentifierDeclStatement	int buff_size ;	5554:4:177257:177270	11019485	2	True				
ANR	11019509	IdentifierDecl	buff_size		11019485	0					
ANR	11019510	IdentifierDeclType	int		11019485	0					
ANR	11019511	Identifier	buff_size		11019485	1					
ANR	11019512	ExpressionStatement	"code1 = array_get ( imemory , space , 1 , & ICCdict1 )"	5556:4:177277:177324	11019485	3	True				
ANR	11019513	AssignmentExpression	"code1 = array_get ( imemory , space , 1 , & ICCdict1 )"		11019485	0		=			
ANR	11019514	Identifier	code1		11019485	0					
ANR	11019515	CallExpression	"array_get ( imemory , space , 1 , & ICCdict1 )"		11019485	1					
ANR	11019516	Callee	array_get		11019485	0					
ANR	11019517	Identifier	array_get		11019485	0					
ANR	11019518	ArgumentList	imemory		11019485	1					
ANR	11019519	Argument	imemory		11019485	0					
ANR	11019520	Identifier	imemory		11019485	0					
ANR	11019521	Argument	space		11019485	1					
ANR	11019522	Identifier	space		11019485	0					
ANR	11019523	Argument	1		11019485	2					
ANR	11019524	PrimaryExpression	1		11019485	0					
ANR	11019525	Argument	& ICCdict1		11019485	3					
ANR	11019526	UnaryOperationExpression	& ICCdict1		11019485	0					
ANR	11019527	UnaryOperator	&		11019485	0					
ANR	11019528	Identifier	ICCdict1		11019485	1					
ANR	11019529	IfStatement	if ( code1 < 0 )		11019485	4					
ANR	11019530	Condition	code1 < 0	5557:8:177334:177342	11019485	0	True				
ANR	11019531	RelationalExpression	code1 < 0		11019485	0		<			
ANR	11019532	Identifier	code1		11019485	0					
ANR	11019533	PrimaryExpression	0		11019485	1					
ANR	11019534	ReturnStatement	return 0 ;	5558:8:177353:177361	11019485	1	True				
ANR	11019535	PrimaryExpression	0		11019485	0					
ANR	11019536	ExpressionStatement	"code2 = array_get ( imemory , testspace , 1 , & ICCdict2 )"	5559:4:177367:177418	11019485	5	True				
ANR	11019537	AssignmentExpression	"code2 = array_get ( imemory , testspace , 1 , & ICCdict2 )"		11019485	0		=			
ANR	11019538	Identifier	code2		11019485	0					
ANR	11019539	CallExpression	"array_get ( imemory , testspace , 1 , & ICCdict2 )"		11019485	1					
ANR	11019540	Callee	array_get		11019485	0					
ANR	11019541	Identifier	array_get		11019485	0					
ANR	11019542	ArgumentList	imemory		11019485	1					
ANR	11019543	Argument	imemory		11019485	0					
ANR	11019544	Identifier	imemory		11019485	0					
ANR	11019545	Argument	testspace		11019485	1					
ANR	11019546	Identifier	testspace		11019485	0					
ANR	11019547	Argument	1		11019485	2					
ANR	11019548	PrimaryExpression	1		11019485	0					
ANR	11019549	Argument	& ICCdict2		11019485	3					
ANR	11019550	UnaryOperationExpression	& ICCdict2		11019485	0					
ANR	11019551	UnaryOperator	&		11019485	0					
ANR	11019552	Identifier	ICCdict2		11019485	1					
ANR	11019553	IfStatement	if ( code2 < 0 )		11019485	6					
ANR	11019554	Condition	code2 < 0	5560:8:177428:177436	11019485	0	True				
ANR	11019555	RelationalExpression	code2 < 0		11019485	0		<			
ANR	11019556	Identifier	code2		11019485	0					
ANR	11019557	PrimaryExpression	0		11019485	1					
ANR	11019558	ReturnStatement	return 0 ;	5561:8:177447:177455	11019485	1	True				
ANR	11019559	PrimaryExpression	0		11019485	0					
ANR	11019560	IfStatement	if ( ICCdict1 . value . bytes == ICCdict2 . value . bytes )		11019485	7					
ANR	11019561	Condition	ICCdict1 . value . bytes == ICCdict2 . value . bytes	5564:8:177523:177566	11019485	0	True				
ANR	11019562	EqualityExpression	ICCdict1 . value . bytes == ICCdict2 . value . bytes		11019485	0		==			
ANR	11019563	MemberAccess	ICCdict1 . value . bytes		11019485	0					
ANR	11019564	MemberAccess	ICCdict1 . value		11019485	0					
ANR	11019565	Identifier	ICCdict1		11019485	0					
ANR	11019566	Identifier	value		11019485	1					
ANR	11019567	Identifier	bytes		11019485	1					
ANR	11019568	MemberAccess	ICCdict2 . value . bytes		11019485	1					
ANR	11019569	MemberAccess	ICCdict2 . value		11019485	0					
ANR	11019570	Identifier	ICCdict2		11019485	0					
ANR	11019571	Identifier	value		11019485	1					
ANR	11019572	Identifier	bytes		11019485	1					
ANR	11019573	ReturnStatement	return 1 ;	5565:9:177579:177587	11019485	1	True				
ANR	11019574	PrimaryExpression	1		11019485	0					
ANR	11019575	ExpressionStatement	"code1 = dict_find_string ( & ICCdict1 , ""N"" , & tempref1 )"	5568:4:177640:177691	11019485	8	True				
ANR	11019576	AssignmentExpression	"code1 = dict_find_string ( & ICCdict1 , ""N"" , & tempref1 )"		11019485	0		=			
ANR	11019577	Identifier	code1		11019485	0					
ANR	11019578	CallExpression	"dict_find_string ( & ICCdict1 , ""N"" , & tempref1 )"		11019485	1					
ANR	11019579	Callee	dict_find_string		11019485	0					
ANR	11019580	Identifier	dict_find_string		11019485	0					
ANR	11019581	ArgumentList	& ICCdict1		11019485	1					
ANR	11019582	Argument	& ICCdict1		11019485	0					
ANR	11019583	UnaryOperationExpression	& ICCdict1		11019485	0					
ANR	11019584	UnaryOperator	&		11019485	0					
ANR	11019585	Identifier	ICCdict1		11019485	1					
ANR	11019586	Argument	"""N"""		11019485	1					
ANR	11019587	PrimaryExpression	"""N"""		11019485	0					
ANR	11019588	Argument	& tempref1		11019485	2					
ANR	11019589	UnaryOperationExpression	& tempref1		11019485	0					
ANR	11019590	UnaryOperator	&		11019485	0					
ANR	11019591	Identifier	tempref1		11019485	1					
ANR	11019592	ExpressionStatement	"code2 = dict_find_string ( & ICCdict2 , ""N"" , & tempref2 )"	5569:4:177697:177748	11019485	9	True				
ANR	11019593	AssignmentExpression	"code2 = dict_find_string ( & ICCdict2 , ""N"" , & tempref2 )"		11019485	0		=			
ANR	11019594	Identifier	code2		11019485	0					
ANR	11019595	CallExpression	"dict_find_string ( & ICCdict2 , ""N"" , & tempref2 )"		11019485	1					
ANR	11019596	Callee	dict_find_string		11019485	0					
ANR	11019597	Identifier	dict_find_string		11019485	0					
ANR	11019598	ArgumentList	& ICCdict2		11019485	1					
ANR	11019599	Argument	& ICCdict2		11019485	0					
ANR	11019600	UnaryOperationExpression	& ICCdict2		11019485	0					
ANR	11019601	UnaryOperator	&		11019485	0					
ANR	11019602	Identifier	ICCdict2		11019485	1					
ANR	11019603	Argument	"""N"""		11019485	1					
ANR	11019604	PrimaryExpression	"""N"""		11019485	0					
ANR	11019605	Argument	& tempref2		11019485	2					
ANR	11019606	UnaryOperationExpression	& tempref2		11019485	0					
ANR	11019607	UnaryOperator	&		11019485	0					
ANR	11019608	Identifier	tempref2		11019485	1					
ANR	11019609	IfStatement	if ( code1 != code2 )		11019485	10					
ANR	11019610	Condition	code1 != code2	5570:8:177758:177771	11019485	0	True				
ANR	11019611	EqualityExpression	code1 != code2		11019485	0		!=			
ANR	11019612	Identifier	code1		11019485	0					
ANR	11019613	Identifier	code2		11019485	1					
ANR	11019614	ReturnStatement	return 0 ;	5571:8:177782:177790	11019485	1	True				
ANR	11019615	PrimaryExpression	0		11019485	0					
ANR	11019616	IfStatement	if ( tempref1 -> value . intval != tempref2 -> value . intval )		11019485	11					
ANR	11019617	Condition	tempref1 -> value . intval != tempref2 -> value . intval	5572:8:177800:177847	11019485	0	True				
ANR	11019618	EqualityExpression	tempref1 -> value . intval != tempref2 -> value . intval		11019485	0		!=			
ANR	11019619	MemberAccess	tempref1 -> value . intval		11019485	0					
ANR	11019620	PtrMemberAccess	tempref1 -> value		11019485	0					
ANR	11019621	Identifier	tempref1		11019485	0					
ANR	11019622	Identifier	value		11019485	1					
ANR	11019623	Identifier	intval		11019485	1					
ANR	11019624	MemberAccess	tempref2 -> value . intval		11019485	1					
ANR	11019625	PtrMemberAccess	tempref2 -> value		11019485	0					
ANR	11019626	Identifier	tempref2		11019485	0					
ANR	11019627	Identifier	value		11019485	1					
ANR	11019628	Identifier	intval		11019485	1					
ANR	11019629	ReturnStatement	return 0 ;	5573:8:177858:177866	11019485	1	True				
ANR	11019630	PrimaryExpression	0		11019485	0					
ANR	11019631	IfStatement	"if ( ! comparedictkey ( i_ctx_p , & ICCdict1 , & ICCdict2 , ( char * ) ""Range"" ) )"		11019485	12					
ANR	11019632	Condition	"! comparedictkey ( i_ctx_p , & ICCdict1 , & ICCdict2 , ( char * ) ""Range"" )"	5575:8:177877:177939	11019485	0	True				
ANR	11019633	UnaryOperationExpression	"! comparedictkey ( i_ctx_p , & ICCdict1 , & ICCdict2 , ( char * ) ""Range"" )"		11019485	0					
ANR	11019634	UnaryOperator	!		11019485	0					
ANR	11019635	CallExpression	"comparedictkey ( i_ctx_p , & ICCdict1 , & ICCdict2 , ( char * ) ""Range"" )"		11019485	1					
ANR	11019636	Callee	comparedictkey		11019485	0					
ANR	11019637	Identifier	comparedictkey		11019485	0					
ANR	11019638	ArgumentList	i_ctx_p		11019485	1					
ANR	11019639	Argument	i_ctx_p		11019485	0					
ANR	11019640	Identifier	i_ctx_p		11019485	0					
ANR	11019641	Argument	& ICCdict1		11019485	1					
ANR	11019642	UnaryOperationExpression	& ICCdict1		11019485	0					
ANR	11019643	UnaryOperator	&		11019485	0					
ANR	11019644	Identifier	ICCdict1		11019485	1					
ANR	11019645	Argument	& ICCdict2		11019485	2					
ANR	11019646	UnaryOperationExpression	& ICCdict2		11019485	0					
ANR	11019647	UnaryOperator	&		11019485	0					
ANR	11019648	Identifier	ICCdict2		11019485	1					
ANR	11019649	Argument	"( char * ) ""Range"""		11019485	3					
ANR	11019650	CastExpression	"( char * ) ""Range"""		11019485	0					
ANR	11019651	CastTarget	char *		11019485	0					
ANR	11019652	PrimaryExpression	"""Range"""		11019485	1					
ANR	11019653	ReturnStatement	return 0 ;	5576:8:177950:177958	11019485	1	True				
ANR	11019654	PrimaryExpression	0		11019485	0					
ANR	11019655	ExpressionStatement	"code1 = dict_find_string ( & ICCdict1 , ""DataSource"" , & tempref1 )"	5578:4:177965:178025	11019485	13	True				
ANR	11019656	AssignmentExpression	"code1 = dict_find_string ( & ICCdict1 , ""DataSource"" , & tempref1 )"		11019485	0		=			
ANR	11019657	Identifier	code1		11019485	0					
ANR	11019658	CallExpression	"dict_find_string ( & ICCdict1 , ""DataSource"" , & tempref1 )"		11019485	1					
ANR	11019659	Callee	dict_find_string		11019485	0					
ANR	11019660	Identifier	dict_find_string		11019485	0					
ANR	11019661	ArgumentList	& ICCdict1		11019485	1					
ANR	11019662	Argument	& ICCdict1		11019485	0					
ANR	11019663	UnaryOperationExpression	& ICCdict1		11019485	0					
ANR	11019664	UnaryOperator	&		11019485	0					
ANR	11019665	Identifier	ICCdict1		11019485	1					
ANR	11019666	Argument	"""DataSource"""		11019485	1					
ANR	11019667	PrimaryExpression	"""DataSource"""		11019485	0					
ANR	11019668	Argument	& tempref1		11019485	2					
ANR	11019669	UnaryOperationExpression	& tempref1		11019485	0					
ANR	11019670	UnaryOperator	&		11019485	0					
ANR	11019671	Identifier	tempref1		11019485	1					
ANR	11019672	IfStatement	if ( code1 <= 0 )		11019485	14					
ANR	11019673	Condition	code1 <= 0	5579:8:178035:178044	11019485	0	True				
ANR	11019674	RelationalExpression	code1 <= 0		11019485	0		<=			
ANR	11019675	Identifier	code1		11019485	0					
ANR	11019676	PrimaryExpression	0		11019485	1					
ANR	11019677	ReturnStatement	return 0 ;	5580:8:178055:178063	11019485	1	True				
ANR	11019678	PrimaryExpression	0		11019485	0					
ANR	11019679	ExpressionStatement	"code2 = dict_find_string ( & ICCdict2 , ""DataSource"" , & tempref2 )"	5581:4:178069:178129	11019485	15	True				
ANR	11019680	AssignmentExpression	"code2 = dict_find_string ( & ICCdict2 , ""DataSource"" , & tempref2 )"		11019485	0		=			
ANR	11019681	Identifier	code2		11019485	0					
ANR	11019682	CallExpression	"dict_find_string ( & ICCdict2 , ""DataSource"" , & tempref2 )"		11019485	1					
ANR	11019683	Callee	dict_find_string		11019485	0					
ANR	11019684	Identifier	dict_find_string		11019485	0					
ANR	11019685	ArgumentList	& ICCdict2		11019485	1					
ANR	11019686	Argument	& ICCdict2		11019485	0					
ANR	11019687	UnaryOperationExpression	& ICCdict2		11019485	0					
ANR	11019688	UnaryOperator	&		11019485	0					
ANR	11019689	Identifier	ICCdict2		11019485	1					
ANR	11019690	Argument	"""DataSource"""		11019485	1					
ANR	11019691	PrimaryExpression	"""DataSource"""		11019485	0					
ANR	11019692	Argument	& tempref2		11019485	2					
ANR	11019693	UnaryOperationExpression	& tempref2		11019485	0					
ANR	11019694	UnaryOperator	&		11019485	0					
ANR	11019695	Identifier	tempref2		11019485	1					
ANR	11019696	IfStatement	if ( code2 <= 0 )		11019485	16					
ANR	11019697	Condition	code2 <= 0	5582:8:178139:178148	11019485	0	True				
ANR	11019698	RelationalExpression	code2 <= 0		11019485	0		<=			
ANR	11019699	Identifier	code2		11019485	0					
ANR	11019700	PrimaryExpression	0		11019485	1					
ANR	11019701	ReturnStatement	return 0 ;	5583:8:178159:178167	11019485	1	True				
ANR	11019702	PrimaryExpression	0		11019485	0					
ANR	11019703	IfStatement	if ( r_size ( tempref1 ) != r_size ( tempref2 ) )		11019485	17					
ANR	11019704	Condition	r_size ( tempref1 ) != r_size ( tempref2 )	5584:8:178177:178212	11019485	0	True				
ANR	11019705	EqualityExpression	r_size ( tempref1 ) != r_size ( tempref2 )		11019485	0		!=			
ANR	11019706	CallExpression	r_size ( tempref1 )		11019485	0					
ANR	11019707	Callee	r_size		11019485	0					
ANR	11019708	Identifier	r_size		11019485	0					
ANR	11019709	ArgumentList	tempref1		11019485	1					
ANR	11019710	Argument	tempref1		11019485	0					
ANR	11019711	Identifier	tempref1		11019485	0					
ANR	11019712	CallExpression	r_size ( tempref2 )		11019485	1					
ANR	11019713	Callee	r_size		11019485	0					
ANR	11019714	Identifier	r_size		11019485	0					
ANR	11019715	ArgumentList	tempref2		11019485	1					
ANR	11019716	Argument	tempref2		11019485	0					
ANR	11019717	Identifier	tempref2		11019485	0					
ANR	11019718	ReturnStatement	return 0 ;	5585:8:178224:178232	11019485	1	True				
ANR	11019719	PrimaryExpression	0		11019485	0					
ANR	11019720	ExpressionStatement	buff_size = r_size ( tempref1 )	5587:4:178239:178267	11019485	18	True				
ANR	11019721	AssignmentExpression	buff_size = r_size ( tempref1 )		11019485	0		=			
ANR	11019722	Identifier	buff_size		11019485	0					
ANR	11019723	CallExpression	r_size ( tempref1 )		11019485	1					
ANR	11019724	Callee	r_size		11019485	0					
ANR	11019725	Identifier	r_size		11019485	0					
ANR	11019726	ArgumentList	tempref1		11019485	1					
ANR	11019727	Argument	tempref1		11019485	0					
ANR	11019728	Identifier	tempref1		11019485	0					
ANR	11019729	IfStatement	"if ( memcmp ( tempref1 -> value . const_bytes , tempref2 -> value . const_bytes , buff_size ) == 0 )"		11019485	19					
ANR	11019730	Condition	"memcmp ( tempref1 -> value . const_bytes , tempref2 -> value . const_bytes , buff_size ) == 0"	5588:8:178277:178356	11019485	0	True				
ANR	11019731	EqualityExpression	"memcmp ( tempref1 -> value . const_bytes , tempref2 -> value . const_bytes , buff_size ) == 0"		11019485	0		==			
ANR	11019732	CallExpression	"memcmp ( tempref1 -> value . const_bytes , tempref2 -> value . const_bytes , buff_size )"		11019485	0					
ANR	11019733	Callee	memcmp		11019485	0					
ANR	11019734	Identifier	memcmp		11019485	0					
ANR	11019735	ArgumentList	tempref1 -> value . const_bytes		11019485	1					
ANR	11019736	Argument	tempref1 -> value . const_bytes		11019485	0					
ANR	11019737	MemberAccess	tempref1 -> value . const_bytes		11019485	0					
ANR	11019738	PtrMemberAccess	tempref1 -> value		11019485	0					
ANR	11019739	Identifier	tempref1		11019485	0					
ANR	11019740	Identifier	value		11019485	1					
ANR	11019741	Identifier	const_bytes		11019485	1					
ANR	11019742	Argument	tempref2 -> value . const_bytes		11019485	1					
ANR	11019743	MemberAccess	tempref2 -> value . const_bytes		11019485	0					
ANR	11019744	PtrMemberAccess	tempref2 -> value		11019485	0					
ANR	11019745	Identifier	tempref2		11019485	0					
ANR	11019746	Identifier	value		11019485	1					
ANR	11019747	Identifier	const_bytes		11019485	1					
ANR	11019748	Argument	buff_size		11019485	2					
ANR	11019749	Identifier	buff_size		11019485	0					
ANR	11019750	PrimaryExpression	0		11019485	1					
ANR	11019751	ReturnStatement	return 1 ;	5589:8:178367:178375	11019485	1	True				
ANR	11019752	PrimaryExpression	1		11019485	0					
ANR	11019753	ElseStatement	else		11019485	0					
ANR	11019754	ReturnStatement	return 0 ;	5591:8:178394:178402	11019485	0	True				
ANR	11019755	PrimaryExpression	0		11019485	0					
ANR	11019756	ReturnType	static int		11019485	1					
ANR	11019757	Identifier	iccompareproc		11019485	2					
ANR	11019758	ParameterList	"i_ctx_t * i_ctx_p , ref * space , ref * testspace"		11019485	3					
ANR	11019759	Parameter	i_ctx_t * i_ctx_p	5550:25:177133:177148	11019485	0	True				
ANR	11019760	ParameterType	i_ctx_t *		11019485	0					
ANR	11019761	Identifier	i_ctx_p		11019485	1					
ANR	11019762	Parameter	ref * space	5550:43:177151:177160	11019485	1	True				
ANR	11019763	ParameterType	ref *		11019485	0					
ANR	11019764	Identifier	space		11019485	1					
ANR	11019765	Parameter	ref * testspace	5550:55:177163:177176	11019485	2	True				
ANR	11019766	ParameterType	ref *		11019485	0					
ANR	11019767	Identifier	testspace		11019485	1					
ANR	11019768	CFGEntryNode	ENTRY		11019485		True				
ANR	11019769	CFGExitNode	EXIT		11019485		True				
ANR	11019770	Symbol	code2		11019485						
ANR	11019771	Symbol	code1		11019485						
ANR	11019772	Symbol	ICCdict1 . value . bytes		11019485						
ANR	11019773	Symbol	comparedictkey		11019485						
ANR	11019774	Symbol	ICCdict1		11019485						
ANR	11019775	Symbol	ICCdict2		11019485						
ANR	11019776	Symbol	space		11019485						
ANR	11019777	Symbol	tempref1 -> value . const_bytes		11019485						
ANR	11019778	Symbol	* tempref1		11019485						
ANR	11019779	Symbol	* tempref2		11019485						
ANR	11019780	Symbol	tempref1 -> value		11019485						
ANR	11019781	Symbol	memcmp		11019485						
ANR	11019782	Symbol	r_size		11019485						
ANR	11019783	Symbol	imemory		11019485						
ANR	11019784	Symbol	& ICCdict2		11019485						
ANR	11019785	Symbol	tempref1 -> value . intval		11019485						
ANR	11019786	Symbol	& ICCdict1		11019485						
ANR	11019787	Symbol	tempref2 -> value . intval		11019485						
ANR	11019788	Symbol	tempref2 -> value		11019485						
ANR	11019789	Symbol	dict_find_string		11019485						
ANR	11019790	Symbol	array_get		11019485						
ANR	11019791	Symbol	ICCdict1 . value		11019485						
ANR	11019792	Symbol	ICCdict2 . value		11019485						
ANR	11019793	Symbol	tempref2		11019485						
ANR	11019794	Symbol	tempref1		11019485						
ANR	11019795	Symbol	tempref2 -> value . const_bytes		11019485						
ANR	11019796	Symbol	ICCdict2 . value . bytes		11019485						
ANR	11019797	Symbol	testspace		11019485						
ANR	11019798	Symbol	i_ctx_p		11019485						
ANR	11019799	Symbol	buff_size		11019485						
ANR	11019800	Symbol	& tempref1		11019485						
ANR	11019801	Symbol	& tempref2		11019485						
ANR	11019802	Function	validateiccspace	5594:0:178407:182509							
ANR	11019803	FunctionDef	"validateiccspace (i_ctx_t * i_ctx_p , ref * * r)"		11019802	0					
ANR	11019804	CompoundStatement		5595:0:178463:182509	11019802	0					
ANR	11019805	IdentifierDeclStatement	"int code = 0 , i , components = 0 ;"	5596:4:178469:178498	11019802	0	True				
ANR	11019806	IdentifierDecl	code = 0		11019802	0					
ANR	11019807	IdentifierDeclType	int		11019802	0					
ANR	11019808	Identifier	code		11019802	1					
ANR	11019809	AssignmentExpression	code = 0		11019802	2		=			
ANR	11019810	Identifier	code		11019802	0					
ANR	11019811	PrimaryExpression	0		11019802	1					
ANR	11019812	IdentifierDecl	i		11019802	1					
ANR	11019813	IdentifierDeclType	int		11019802	0					
ANR	11019814	Identifier	i		11019802	1					
ANR	11019815	IdentifierDecl	components = 0		11019802	2					
ANR	11019816	IdentifierDeclType	int		11019802	0					
ANR	11019817	Identifier	components		11019802	1					
ANR	11019818	AssignmentExpression	components = 0		11019802	2		=			
ANR	11019819	Identifier	components		11019802	0					
ANR	11019820	PrimaryExpression	0		11019802	1					
ANR	11019821	IdentifierDeclStatement	"ref * space , * tempref , valref , ICCdict , sref ;"	5597:4:178504:178547	11019802	1	True				
ANR	11019822	IdentifierDecl	* space		11019802	0					
ANR	11019823	IdentifierDeclType	ref *		11019802	0					
ANR	11019824	Identifier	space		11019802	1					
ANR	11019825	IdentifierDecl	* tempref		11019802	1					
ANR	11019826	IdentifierDeclType	ref *		11019802	0					
ANR	11019827	Identifier	tempref		11019802	1					
ANR	11019828	IdentifierDecl	valref		11019802	2					
ANR	11019829	IdentifierDeclType	ref		11019802	0					
ANR	11019830	Identifier	valref		11019802	1					
ANR	11019831	IdentifierDecl	ICCdict		11019802	3					
ANR	11019832	IdentifierDeclType	ref		11019802	0					
ANR	11019833	Identifier	ICCdict		11019802	1					
ANR	11019834	IdentifierDecl	sref		11019802	4					
ANR	11019835	IdentifierDeclType	ref		11019802	0					
ANR	11019836	Identifier	sref		11019802	1					
ANR	11019837	ExpressionStatement	space = * r	5599:4:178554:178564	11019802	2	True				
ANR	11019838	AssignmentExpression	space = * r		11019802	0		=			
ANR	11019839	Identifier	space		11019802	0					
ANR	11019840	UnaryOperationExpression	* r		11019802	1					
ANR	11019841	UnaryOperator	*		11019802	0					
ANR	11019842	Identifier	r		11019802	1					
ANR	11019843	IfStatement	if ( ! r_is_array ( space ) )		11019802	3					
ANR	11019844	Condition	! r_is_array ( space )	5600:8:178574:178591	11019802	0	True				
ANR	11019845	UnaryOperationExpression	! r_is_array ( space )		11019802	0					
ANR	11019846	UnaryOperator	!		11019802	0					
ANR	11019847	CallExpression	r_is_array ( space )		11019802	1					
ANR	11019848	Callee	r_is_array		11019802	0					
ANR	11019849	Identifier	r_is_array		11019802	0					
ANR	11019850	ArgumentList	space		11019802	1					
ANR	11019851	Argument	space		11019802	0					
ANR	11019852	Identifier	space		11019802	0					
ANR	11019853	ExpressionStatement	return_error ( gs_error_typecheck )	5601:8:178602:178634	11019802	1	True				
ANR	11019854	CallExpression	return_error ( gs_error_typecheck )		11019802	0					
ANR	11019855	Callee	return_error		11019802	0					
ANR	11019856	Identifier	return_error		11019802	0					
ANR	11019857	ArgumentList	gs_error_typecheck		11019802	1					
ANR	11019858	Argument	gs_error_typecheck		11019802	0					
ANR	11019859	Identifier	gs_error_typecheck		11019802	0					
ANR	11019860	IfStatement	if ( r_size ( space ) != 2 )		11019802	4					
ANR	11019861	Condition	r_size ( space ) != 2	5603:8:178705:178722	11019802	0	True				
ANR	11019862	EqualityExpression	r_size ( space ) != 2		11019802	0		!=			
ANR	11019863	CallExpression	r_size ( space )		11019802	0					
ANR	11019864	Callee	r_size		11019802	0					
ANR	11019865	Identifier	r_size		11019802	0					
ANR	11019866	ArgumentList	space		11019802	1					
ANR	11019867	Argument	space		11019802	0					
ANR	11019868	Identifier	space		11019802	0					
ANR	11019869	PrimaryExpression	2		11019802	1					
ANR	11019870	ExpressionStatement	return_error ( gs_error_rangecheck )	5604:8:178733:178766	11019802	1	True				
ANR	11019871	CallExpression	return_error ( gs_error_rangecheck )		11019802	0					
ANR	11019872	Callee	return_error		11019802	0					
ANR	11019873	Identifier	return_error		11019802	0					
ANR	11019874	ArgumentList	gs_error_rangecheck		11019802	1					
ANR	11019875	Argument	gs_error_rangecheck		11019802	0					
ANR	11019876	Identifier	gs_error_rangecheck		11019802	0					
ANR	11019877	ExpressionStatement	"code = array_get ( imemory , space , 1 , & ICCdict )"	5606:4:178773:178818	11019802	5	True				
ANR	11019878	AssignmentExpression	"code = array_get ( imemory , space , 1 , & ICCdict )"		11019802	0		=			
ANR	11019879	Identifier	code		11019802	0					
ANR	11019880	CallExpression	"array_get ( imemory , space , 1 , & ICCdict )"		11019802	1					
ANR	11019881	Callee	array_get		11019802	0					
ANR	11019882	Identifier	array_get		11019802	0					
ANR	11019883	ArgumentList	imemory		11019802	1					
ANR	11019884	Argument	imemory		11019802	0					
ANR	11019885	Identifier	imemory		11019802	0					
ANR	11019886	Argument	space		11019802	1					
ANR	11019887	Identifier	space		11019802	0					
ANR	11019888	Argument	1		11019802	2					
ANR	11019889	PrimaryExpression	1		11019802	0					
ANR	11019890	Argument	& ICCdict		11019802	3					
ANR	11019891	UnaryOperationExpression	& ICCdict		11019802	0					
ANR	11019892	UnaryOperator	&		11019802	0					
ANR	11019893	Identifier	ICCdict		11019802	1					
ANR	11019894	IfStatement	if ( code < 0 )		11019802	6					
ANR	11019895	Condition	code < 0	5607:8:178828:178835	11019802	0	True				
ANR	11019896	RelationalExpression	code < 0		11019802	0		<			
ANR	11019897	Identifier	code		11019802	0					
ANR	11019898	PrimaryExpression	0		11019802	1					
ANR	11019899	ReturnStatement	return code ;	5608:8:178846:178857	11019802	1	True				
ANR	11019900	Identifier	code		11019802	0					
ANR	11019901	ExpressionStatement	"check_type ( ICCdict , t_dictionary )"	5610:4:178864:178897	11019802	7	True				
ANR	11019902	CallExpression	"check_type ( ICCdict , t_dictionary )"		11019802	0					
ANR	11019903	Callee	check_type		11019802	0					
ANR	11019904	Identifier	check_type		11019802	0					
ANR	11019905	ArgumentList	ICCdict		11019802	1					
ANR	11019906	Argument	ICCdict		11019802	0					
ANR	11019907	Identifier	ICCdict		11019802	0					
ANR	11019908	Argument	t_dictionary		11019802	1					
ANR	11019909	Identifier	t_dictionary		11019802	0					
ANR	11019910	ExpressionStatement	"code = dict_find_string ( & ICCdict , ""N"" , & tempref )"	5612:4:178904:178952	11019802	8	True				
ANR	11019911	AssignmentExpression	"code = dict_find_string ( & ICCdict , ""N"" , & tempref )"		11019802	0		=			
ANR	11019912	Identifier	code		11019802	0					
ANR	11019913	CallExpression	"dict_find_string ( & ICCdict , ""N"" , & tempref )"		11019802	1					
ANR	11019914	Callee	dict_find_string		11019802	0					
ANR	11019915	Identifier	dict_find_string		11019802	0					
ANR	11019916	ArgumentList	& ICCdict		11019802	1					
ANR	11019917	Argument	& ICCdict		11019802	0					
ANR	11019918	UnaryOperationExpression	& ICCdict		11019802	0					
ANR	11019919	UnaryOperator	&		11019802	0					
ANR	11019920	Identifier	ICCdict		11019802	1					
ANR	11019921	Argument	"""N"""		11019802	1					
ANR	11019922	PrimaryExpression	"""N"""		11019802	0					
ANR	11019923	Argument	& tempref		11019802	2					
ANR	11019924	UnaryOperationExpression	& tempref		11019802	0					
ANR	11019925	UnaryOperator	&		11019802	0					
ANR	11019926	Identifier	tempref		11019802	1					
ANR	11019927	IfStatement	if ( code < 0 )		11019802	9					
ANR	11019928	Condition	code < 0	5613:8:178962:178969	11019802	0	True				
ANR	11019929	RelationalExpression	code < 0		11019802	0		<			
ANR	11019930	Identifier	code		11019802	0					
ANR	11019931	PrimaryExpression	0		11019802	1					
ANR	11019932	ReturnStatement	return code ;	5614:8:178980:178991	11019802	1	True				
ANR	11019933	Identifier	code		11019802	0					
ANR	11019934	IfStatement	if ( code == 0 )		11019802	10					
ANR	11019935	Condition	code == 0	5615:8:179001:179009	11019802	0	True				
ANR	11019936	EqualityExpression	code == 0		11019802	0		==			
ANR	11019937	Identifier	code		11019802	0					
ANR	11019938	PrimaryExpression	0		11019802	1					
ANR	11019939	ReturnStatement	return gs_note_error ( gs_error_undefined ) ;	5616:8:179020:179060	11019802	1	True				
ANR	11019940	CallExpression	gs_note_error ( gs_error_undefined )		11019802	0					
ANR	11019941	Callee	gs_note_error		11019802	0					
ANR	11019942	Identifier	gs_note_error		11019802	0					
ANR	11019943	ArgumentList	gs_error_undefined		11019802	1					
ANR	11019944	Argument	gs_error_undefined		11019802	0					
ANR	11019945	Identifier	gs_error_undefined		11019802	0					
ANR	11019946	IfStatement	"if ( ! r_has_type ( tempref , t_null ) )"		11019802	11					
ANR	11019947	Condition	"! r_has_type ( tempref , t_null )"	5617:8:179070:179097	11019802	0	True				
ANR	11019948	UnaryOperationExpression	"! r_has_type ( tempref , t_null )"		11019802	0					
ANR	11019949	UnaryOperator	!		11019802	0					
ANR	11019950	CallExpression	"r_has_type ( tempref , t_null )"		11019802	1					
ANR	11019951	Callee	r_has_type		11019802	0					
ANR	11019952	Identifier	r_has_type		11019802	0					
ANR	11019953	ArgumentList	tempref		11019802	1					
ANR	11019954	Argument	tempref		11019802	0					
ANR	11019955	Identifier	tempref		11019802	0					
ANR	11019956	Argument	t_null		11019802	1					
ANR	11019957	Identifier	t_null		11019802	0					
ANR	11019958	CompoundStatement		23:38:636:636	11019802	1					
ANR	11019959	IfStatement	"if ( ! r_has_type ( tempref , t_integer ) )"		11019802	0					
ANR	11019960	Condition	"! r_has_type ( tempref , t_integer )"	5618:12:179114:179144	11019802	0	True				
ANR	11019961	UnaryOperationExpression	"! r_has_type ( tempref , t_integer )"		11019802	0					
ANR	11019962	UnaryOperator	!		11019802	0					
ANR	11019963	CallExpression	"r_has_type ( tempref , t_integer )"		11019802	1					
ANR	11019964	Callee	r_has_type		11019802	0					
ANR	11019965	Identifier	r_has_type		11019802	0					
ANR	11019966	ArgumentList	tempref		11019802	1					
ANR	11019967	Argument	tempref		11019802	0					
ANR	11019968	Identifier	tempref		11019802	0					
ANR	11019969	Argument	t_integer		11019802	1					
ANR	11019970	Identifier	t_integer		11019802	0					
ANR	11019971	ExpressionStatement	return_error ( gs_error_typecheck )	5619:12:179159:179191	11019802	1	True				
ANR	11019972	CallExpression	return_error ( gs_error_typecheck )		11019802	0					
ANR	11019973	Callee	return_error		11019802	0					
ANR	11019974	Identifier	return_error		11019802	0					
ANR	11019975	ArgumentList	gs_error_typecheck		11019802	1					
ANR	11019976	Argument	gs_error_typecheck		11019802	0					
ANR	11019977	Identifier	gs_error_typecheck		11019802	0					
ANR	11019978	ExpressionStatement	components = tempref -> value . intval	5620:8:179201:179235	11019802	1	True				
ANR	11019979	AssignmentExpression	components = tempref -> value . intval		11019802	0		=			
ANR	11019980	Identifier	components		11019802	0					
ANR	11019981	MemberAccess	tempref -> value . intval		11019802	1					
ANR	11019982	PtrMemberAccess	tempref -> value		11019802	0					
ANR	11019983	Identifier	tempref		11019802	0					
ANR	11019984	Identifier	value		11019802	1					
ANR	11019985	Identifier	intval		11019802	1					
ANR	11019986	ElseStatement	else		11019802	0					
ANR	11019987	ExpressionStatement	return_error ( gs_error_typecheck )	5622:8:179256:179288	11019802	0	True				
ANR	11019988	CallExpression	return_error ( gs_error_typecheck )		11019802	0					
ANR	11019989	Callee	return_error		11019802	0					
ANR	11019990	Identifier	return_error		11019802	0					
ANR	11019991	ArgumentList	gs_error_typecheck		11019802	1					
ANR	11019992	Argument	gs_error_typecheck		11019802	0					
ANR	11019993	Identifier	gs_error_typecheck		11019802	0					
ANR	11019994	ExpressionStatement	"code = dict_find_string ( & ICCdict , ""DataSource"" , & tempref )"	5623:4:179294:179351	11019802	12	True				
ANR	11019995	AssignmentExpression	"code = dict_find_string ( & ICCdict , ""DataSource"" , & tempref )"		11019802	0		=			
ANR	11019996	Identifier	code		11019802	0					
ANR	11019997	CallExpression	"dict_find_string ( & ICCdict , ""DataSource"" , & tempref )"		11019802	1					
ANR	11019998	Callee	dict_find_string		11019802	0					
ANR	11019999	Identifier	dict_find_string		11019802	0					
ANR	11020000	ArgumentList	& ICCdict		11019802	1					
ANR	11020001	Argument	& ICCdict		11019802	0					
ANR	11020002	UnaryOperationExpression	& ICCdict		11019802	0					
ANR	11020003	UnaryOperator	&		11019802	0					
ANR	11020004	Identifier	ICCdict		11019802	1					
ANR	11020005	Argument	"""DataSource"""		11019802	1					
ANR	11020006	PrimaryExpression	"""DataSource"""		11019802	0					
ANR	11020007	Argument	& tempref		11019802	2					
ANR	11020008	UnaryOperationExpression	& tempref		11019802	0					
ANR	11020009	UnaryOperator	&		11019802	0					
ANR	11020010	Identifier	tempref		11019802	1					
ANR	11020011	IfStatement	if ( code <= 0 )		11019802	13					
ANR	11020012	Condition	code <= 0	5624:8:179361:179369	11019802	0	True				
ANR	11020013	RelationalExpression	code <= 0		11019802	0		<=			
ANR	11020014	Identifier	code		11019802	0					
ANR	11020015	PrimaryExpression	0		11019802	1					
ANR	11020016	ExpressionStatement	return_error ( gs_error_typecheck )	5625:8:179380:179412	11019802	1	True				
ANR	11020017	CallExpression	return_error ( gs_error_typecheck )		11019802	0					
ANR	11020018	Callee	return_error		11019802	0					
ANR	11020019	Identifier	return_error		11019802	0					
ANR	11020020	ArgumentList	gs_error_typecheck		11019802	1					
ANR	11020021	Argument	gs_error_typecheck		11019802	0					
ANR	11020022	Identifier	gs_error_typecheck		11019802	0					
ANR	11020023	IfStatement	"if ( ! r_has_type ( tempref , t_null ) )"		11019802	14					
ANR	11020024	Condition	"! r_has_type ( tempref , t_null )"	5626:8:179422:179449	11019802	0	True				
ANR	11020025	UnaryOperationExpression	"! r_has_type ( tempref , t_null )"		11019802	0					
ANR	11020026	UnaryOperator	!		11019802	0					
ANR	11020027	CallExpression	"r_has_type ( tempref , t_null )"		11019802	1					
ANR	11020028	Callee	r_has_type		11019802	0					
ANR	11020029	Identifier	r_has_type		11019802	0					
ANR	11020030	ArgumentList	tempref		11019802	1					
ANR	11020031	Argument	tempref		11019802	0					
ANR	11020032	Identifier	tempref		11019802	0					
ANR	11020033	Argument	t_null		11019802	1					
ANR	11020034	Identifier	t_null		11019802	0					
ANR	11020035	CompoundStatement		32:38:988:988	11019802	1					
ANR	11020036	IfStatement	"if ( ! r_has_type ( tempref , t_string ) && ! r_has_type ( tempref , t_file ) )"		11019802	0					
ANR	11020037	Condition	"! r_has_type ( tempref , t_string ) && ! r_has_type ( tempref , t_file )"	5627:12:179466:179527	11019802	0	True				
ANR	11020038	AndExpression	"! r_has_type ( tempref , t_string ) && ! r_has_type ( tempref , t_file )"		11019802	0		&&			
ANR	11020039	UnaryOperationExpression	"! r_has_type ( tempref , t_string )"		11019802	0					
ANR	11020040	UnaryOperator	!		11019802	0					
ANR	11020041	CallExpression	"r_has_type ( tempref , t_string )"		11019802	1					
ANR	11020042	Callee	r_has_type		11019802	0					
ANR	11020043	Identifier	r_has_type		11019802	0					
ANR	11020044	ArgumentList	tempref		11019802	1					
ANR	11020045	Argument	tempref		11019802	0					
ANR	11020046	Identifier	tempref		11019802	0					
ANR	11020047	Argument	t_string		11019802	1					
ANR	11020048	Identifier	t_string		11019802	0					
ANR	11020049	UnaryOperationExpression	"! r_has_type ( tempref , t_file )"		11019802	1					
ANR	11020050	UnaryOperator	!		11019802	0					
ANR	11020051	CallExpression	"r_has_type ( tempref , t_file )"		11019802	1					
ANR	11020052	Callee	r_has_type		11019802	0					
ANR	11020053	Identifier	r_has_type		11019802	0					
ANR	11020054	ArgumentList	tempref		11019802	1					
ANR	11020055	Argument	tempref		11019802	0					
ANR	11020056	Identifier	tempref		11019802	0					
ANR	11020057	Argument	t_file		11019802	1					
ANR	11020058	Identifier	t_file		11019802	0					
ANR	11020059	ExpressionStatement	return_error ( gs_error_typecheck )	5628:12:179542:179574	11019802	1	True				
ANR	11020060	CallExpression	return_error ( gs_error_typecheck )		11019802	0					
ANR	11020061	Callee	return_error		11019802	0					
ANR	11020062	Identifier	return_error		11019802	0					
ANR	11020063	ArgumentList	gs_error_typecheck		11019802	1					
ANR	11020064	Argument	gs_error_typecheck		11019802	0					
ANR	11020065	Identifier	gs_error_typecheck		11019802	0					
ANR	11020066	ElseStatement	else		11019802	0					
ANR	11020067	ExpressionStatement	return_error ( gs_error_typecheck )	5630:8:179595:179627	11019802	0	True				
ANR	11020068	CallExpression	return_error ( gs_error_typecheck )		11019802	0					
ANR	11020069	Callee	return_error		11019802	0					
ANR	11020070	Identifier	return_error		11019802	0					
ANR	11020071	ArgumentList	gs_error_typecheck		11019802	1					
ANR	11020072	Argument	gs_error_typecheck		11019802	0					
ANR	11020073	Identifier	gs_error_typecheck		11019802	0					
ANR	11020074	ExpressionStatement	"code = dict_find_string ( & ICCdict , ""Range"" , & tempref )"	5633:4:179675:179727	11019802	15	True				
ANR	11020075	AssignmentExpression	"code = dict_find_string ( & ICCdict , ""Range"" , & tempref )"		11019802	0		=			
ANR	11020076	Identifier	code		11019802	0					
ANR	11020077	CallExpression	"dict_find_string ( & ICCdict , ""Range"" , & tempref )"		11019802	1					
ANR	11020078	Callee	dict_find_string		11019802	0					
ANR	11020079	Identifier	dict_find_string		11019802	0					
ANR	11020080	ArgumentList	& ICCdict		11019802	1					
ANR	11020081	Argument	& ICCdict		11019802	0					
ANR	11020082	UnaryOperationExpression	& ICCdict		11019802	0					
ANR	11020083	UnaryOperator	&		11019802	0					
ANR	11020084	Identifier	ICCdict		11019802	1					
ANR	11020085	Argument	"""Range"""		11019802	1					
ANR	11020086	PrimaryExpression	"""Range"""		11019802	0					
ANR	11020087	Argument	& tempref		11019802	2					
ANR	11020088	UnaryOperationExpression	& tempref		11019802	0					
ANR	11020089	UnaryOperator	&		11019802	0					
ANR	11020090	Identifier	tempref		11019802	1					
ANR	11020091	IfStatement	"if ( code > 0 && ! r_has_type ( tempref , t_null ) )"		11019802	16					
ANR	11020092	Condition	"code > 0 && ! r_has_type ( tempref , t_null )"	5634:8:179737:179776	11019802	0	True				
ANR	11020093	AndExpression	"code > 0 && ! r_has_type ( tempref , t_null )"		11019802	0		&&			
ANR	11020094	RelationalExpression	code > 0		11019802	0		>			
ANR	11020095	Identifier	code		11019802	0					
ANR	11020096	PrimaryExpression	0		11019802	1					
ANR	11020097	UnaryOperationExpression	"! r_has_type ( tempref , t_null )"		11019802	1					
ANR	11020098	UnaryOperator	!		11019802	0					
ANR	11020099	CallExpression	"r_has_type ( tempref , t_null )"		11019802	1					
ANR	11020100	Callee	r_has_type		11019802	0					
ANR	11020101	Identifier	r_has_type		11019802	0					
ANR	11020102	ArgumentList	tempref		11019802	1					
ANR	11020103	Argument	tempref		11019802	0					
ANR	11020104	Identifier	tempref		11019802	0					
ANR	11020105	Argument	t_null		11019802	1					
ANR	11020106	Identifier	t_null		11019802	0					
ANR	11020107	CompoundStatement		40:50:1315:1315	11019802	1					
ANR	11020108	IfStatement	if ( ! r_is_array ( tempref ) )		11019802	0					
ANR	11020109	Condition	! r_is_array ( tempref )	5635:12:179793:179812	11019802	0	True				
ANR	11020110	UnaryOperationExpression	! r_is_array ( tempref )		11019802	0					
ANR	11020111	UnaryOperator	!		11019802	0					
ANR	11020112	CallExpression	r_is_array ( tempref )		11019802	1					
ANR	11020113	Callee	r_is_array		11019802	0					
ANR	11020114	Identifier	r_is_array		11019802	0					
ANR	11020115	ArgumentList	tempref		11019802	1					
ANR	11020116	Argument	tempref		11019802	0					
ANR	11020117	Identifier	tempref		11019802	0					
ANR	11020118	ExpressionStatement	return_error ( gs_error_typecheck )	5636:12:179827:179859	11019802	1	True				
ANR	11020119	CallExpression	return_error ( gs_error_typecheck )		11019802	0					
ANR	11020120	Callee	return_error		11019802	0					
ANR	11020121	Identifier	return_error		11019802	0					
ANR	11020122	ArgumentList	gs_error_typecheck		11019802	1					
ANR	11020123	Argument	gs_error_typecheck		11019802	0					
ANR	11020124	Identifier	gs_error_typecheck		11019802	0					
ANR	11020125	IfStatement	if ( r_size ( tempref ) < ( components * 2 ) )		11019802	1					
ANR	11020126	Condition	r_size ( tempref ) < ( components * 2 )	5637:12:179873:179906	11019802	0	True				
ANR	11020127	RelationalExpression	r_size ( tempref ) < ( components * 2 )		11019802	0		<			
ANR	11020128	CallExpression	r_size ( tempref )		11019802	0					
ANR	11020129	Callee	r_size		11019802	0					
ANR	11020130	Identifier	r_size		11019802	0					
ANR	11020131	ArgumentList	tempref		11019802	1					
ANR	11020132	Argument	tempref		11019802	0					
ANR	11020133	Identifier	tempref		11019802	0					
ANR	11020134	MultiplicativeExpression	components * 2		11019802	1		*			
ANR	11020135	Identifier	components		11019802	0					
ANR	11020136	PrimaryExpression	2		11019802	1					
ANR	11020137	ExpressionStatement	return_error ( gs_error_rangecheck )	5638:12:179921:179954	11019802	1	True				
ANR	11020138	CallExpression	return_error ( gs_error_rangecheck )		11019802	0					
ANR	11020139	Callee	return_error		11019802	0					
ANR	11020140	Identifier	return_error		11019802	0					
ANR	11020141	ArgumentList	gs_error_rangecheck		11019802	1					
ANR	11020142	Argument	gs_error_rangecheck		11019802	0					
ANR	11020143	Identifier	gs_error_rangecheck		11019802	0					
ANR	11020144	ForStatement	for ( i = 0 ; i < components * 2 ; i ++ )		11019802	2					
ANR	11020145	ForInit	i = 0 ;	5639:13:179969:179972	11019802	0	True				
ANR	11020146	AssignmentExpression	i = 0		11019802	0		=			
ANR	11020147	Identifier	i		11019802	0					
ANR	11020148	PrimaryExpression	0		11019802	1					
ANR	11020149	Condition	i < components * 2	5639:17:179973:179988	11019802	1	True				
ANR	11020150	RelationalExpression	i < components * 2		11019802	0		<			
ANR	11020151	Identifier	i		11019802	0					
ANR	11020152	MultiplicativeExpression	components * 2		11019802	1		*			
ANR	11020153	Identifier	components		11019802	0					
ANR	11020154	PrimaryExpression	2		11019802	1					
ANR	11020155	PostIncDecOperationExpression	i ++	5639:34:179990:179992	11019802	2	True				
ANR	11020156	Identifier	i		11019802	0					
ANR	11020157	IncDec	++		11019802	1					
ANR	11020158	CompoundStatement		45:39:1531:1531	11019802	3					
ANR	11020159	ExpressionStatement	"code = array_get ( imemory , tempref , i , & valref )"	5640:12:180009:180055	11019802	0	True				
ANR	11020160	AssignmentExpression	"code = array_get ( imemory , tempref , i , & valref )"		11019802	0		=			
ANR	11020161	Identifier	code		11019802	0					
ANR	11020162	CallExpression	"array_get ( imemory , tempref , i , & valref )"		11019802	1					
ANR	11020163	Callee	array_get		11019802	0					
ANR	11020164	Identifier	array_get		11019802	0					
ANR	11020165	ArgumentList	imemory		11019802	1					
ANR	11020166	Argument	imemory		11019802	0					
ANR	11020167	Identifier	imemory		11019802	0					
ANR	11020168	Argument	tempref		11019802	1					
ANR	11020169	Identifier	tempref		11019802	0					
ANR	11020170	Argument	i		11019802	2					
ANR	11020171	Identifier	i		11019802	0					
ANR	11020172	Argument	& valref		11019802	3					
ANR	11020173	UnaryOperationExpression	& valref		11019802	0					
ANR	11020174	UnaryOperator	&		11019802	0					
ANR	11020175	Identifier	valref		11019802	1					
ANR	11020176	IfStatement	if ( code < 0 )		11019802	1					
ANR	11020177	Condition	code < 0	5641:16:180073:180080	11019802	0	True				
ANR	11020178	RelationalExpression	code < 0		11019802	0		<			
ANR	11020179	Identifier	code		11019802	0					
ANR	11020180	PrimaryExpression	0		11019802	1					
ANR	11020181	ReturnStatement	return code ;	5642:16:180099:180110	11019802	1	True				
ANR	11020182	Identifier	code		11019802	0					
ANR	11020183	IfStatement	"if ( ! r_has_type ( & valref , t_integer ) && ! r_has_type ( & valref , t_real ) )"		11019802	2					
ANR	11020184	Condition	"! r_has_type ( & valref , t_integer ) && ! r_has_type ( & valref , t_real )"	5643:16:180128:180190	11019802	0	True				
ANR	11020185	AndExpression	"! r_has_type ( & valref , t_integer ) && ! r_has_type ( & valref , t_real )"		11019802	0		&&			
ANR	11020186	UnaryOperationExpression	"! r_has_type ( & valref , t_integer )"		11019802	0					
ANR	11020187	UnaryOperator	!		11019802	0					
ANR	11020188	CallExpression	"r_has_type ( & valref , t_integer )"		11019802	1					
ANR	11020189	Callee	r_has_type		11019802	0					
ANR	11020190	Identifier	r_has_type		11019802	0					
ANR	11020191	ArgumentList	& valref		11019802	1					
ANR	11020192	Argument	& valref		11019802	0					
ANR	11020193	UnaryOperationExpression	& valref		11019802	0					
ANR	11020194	UnaryOperator	&		11019802	0					
ANR	11020195	Identifier	valref		11019802	1					
ANR	11020196	Argument	t_integer		11019802	1					
ANR	11020197	Identifier	t_integer		11019802	0					
ANR	11020198	UnaryOperationExpression	"! r_has_type ( & valref , t_real )"		11019802	1					
ANR	11020199	UnaryOperator	!		11019802	0					
ANR	11020200	CallExpression	"r_has_type ( & valref , t_real )"		11019802	1					
ANR	11020201	Callee	r_has_type		11019802	0					
ANR	11020202	Identifier	r_has_type		11019802	0					
ANR	11020203	ArgumentList	& valref		11019802	1					
ANR	11020204	Argument	& valref		11019802	0					
ANR	11020205	UnaryOperationExpression	& valref		11019802	0					
ANR	11020206	UnaryOperator	&		11019802	0					
ANR	11020207	Identifier	valref		11019802	1					
ANR	11020208	Argument	t_real		11019802	1					
ANR	11020209	Identifier	t_real		11019802	0					
ANR	11020210	ExpressionStatement	return_error ( gs_error_typecheck )	5644:16:180209:180241	11019802	1	True				
ANR	11020211	CallExpression	return_error ( gs_error_typecheck )		11019802	0					
ANR	11020212	Callee	return_error		11019802	0					
ANR	11020213	Identifier	return_error		11019802	0					
ANR	11020214	ArgumentList	gs_error_typecheck		11019802	1					
ANR	11020215	Argument	gs_error_typecheck		11019802	0					
ANR	11020216	Identifier	gs_error_typecheck		11019802	0					
ANR	11020217	ExpressionStatement	"code = dict_find_string ( & ICCdict , ""Alternate"" , & tempref )"	5647:4:180263:180319	11019802	17	True				
ANR	11020218	AssignmentExpression	"code = dict_find_string ( & ICCdict , ""Alternate"" , & tempref )"		11019802	0		=			
ANR	11020219	Identifier	code		11019802	0					
ANR	11020220	CallExpression	"dict_find_string ( & ICCdict , ""Alternate"" , & tempref )"		11019802	1					
ANR	11020221	Callee	dict_find_string		11019802	0					
ANR	11020222	Identifier	dict_find_string		11019802	0					
ANR	11020223	ArgumentList	& ICCdict		11019802	1					
ANR	11020224	Argument	& ICCdict		11019802	0					
ANR	11020225	UnaryOperationExpression	& ICCdict		11019802	0					
ANR	11020226	UnaryOperator	&		11019802	0					
ANR	11020227	Identifier	ICCdict		11019802	1					
ANR	11020228	Argument	"""Alternate"""		11019802	1					
ANR	11020229	PrimaryExpression	"""Alternate"""		11019802	0					
ANR	11020230	Argument	& tempref		11019802	2					
ANR	11020231	UnaryOperationExpression	& tempref		11019802	0					
ANR	11020232	UnaryOperator	&		11019802	0					
ANR	11020233	Identifier	tempref		11019802	1					
ANR	11020234	IfStatement	"if ( code > 0 && ! r_has_type ( tempref , t_null ) )"		11019802	18					
ANR	11020235	Condition	"code > 0 && ! r_has_type ( tempref , t_null )"	5648:8:180329:180368	11019802	0	True				
ANR	11020236	AndExpression	"code > 0 && ! r_has_type ( tempref , t_null )"		11019802	0		&&			
ANR	11020237	RelationalExpression	code > 0		11019802	0		>			
ANR	11020238	Identifier	code		11019802	0					
ANR	11020239	PrimaryExpression	0		11019802	1					
ANR	11020240	UnaryOperationExpression	"! r_has_type ( tempref , t_null )"		11019802	1					
ANR	11020241	UnaryOperator	!		11019802	0					
ANR	11020242	CallExpression	"r_has_type ( tempref , t_null )"		11019802	1					
ANR	11020243	Callee	r_has_type		11019802	0					
ANR	11020244	Identifier	r_has_type		11019802	0					
ANR	11020245	ArgumentList	tempref		11019802	1					
ANR	11020246	Argument	tempref		11019802	0					
ANR	11020247	Identifier	tempref		11019802	0					
ANR	11020248	Argument	t_null		11019802	1					
ANR	11020249	Identifier	t_null		11019802	0					
ANR	11020250	CompoundStatement		54:50:1907:1907	11019802	1					
ANR	11020251	ExpressionStatement	"ref_assign ( * r , tempref )"	5649:8:180381:180404	11019802	0	True				
ANR	11020252	CallExpression	"ref_assign ( * r , tempref )"		11019802	0					
ANR	11020253	Callee	ref_assign		11019802	0					
ANR	11020254	Identifier	ref_assign		11019802	0					
ANR	11020255	ArgumentList	* r		11019802	1					
ANR	11020256	Argument	* r		11019802	0					
ANR	11020257	UnaryOperationExpression	* r		11019802	0					
ANR	11020258	UnaryOperator	*		11019802	0					
ANR	11020259	Identifier	r		11019802	1					
ANR	11020260	Argument	tempref		11019802	1					
ANR	11020261	Identifier	tempref		11019802	0					
ANR	11020262	IfStatement	"if ( r_has_type ( tempref , t_name ) )"		11019802	1					
ANR	11020263	Condition	"r_has_type ( tempref , t_name )"	5650:12:180418:180444	11019802	0	True				
ANR	11020264	CallExpression	"r_has_type ( tempref , t_name )"		11019802	0					
ANR	11020265	Callee	r_has_type		11019802	0					
ANR	11020266	Identifier	r_has_type		11019802	0					
ANR	11020267	ArgumentList	tempref		11019802	1					
ANR	11020268	Argument	tempref		11019802	0					
ANR	11020269	Identifier	tempref		11019802	0					
ANR	11020270	Argument	t_name		11019802	1					
ANR	11020271	Identifier	t_name		11019802	0					
ANR	11020272	CompoundStatement		56:41:1983:1983	11019802	1					
ANR	11020273	ExpressionStatement	"name_string_ref ( imemory , tempref , & sref )"	5651:12:180461:180501	11019802	0	True				
ANR	11020274	CallExpression	"name_string_ref ( imemory , tempref , & sref )"		11019802	0					
ANR	11020275	Callee	name_string_ref		11019802	0					
ANR	11020276	Identifier	name_string_ref		11019802	0					
ANR	11020277	ArgumentList	imemory		11019802	1					
ANR	11020278	Argument	imemory		11019802	0					
ANR	11020279	Identifier	imemory		11019802	0					
ANR	11020280	Argument	tempref		11019802	1					
ANR	11020281	Identifier	tempref		11019802	0					
ANR	11020282	Argument	& sref		11019802	2					
ANR	11020283	UnaryOperationExpression	& sref		11019802	0					
ANR	11020284	UnaryOperator	&		11019802	0					
ANR	11020285	Identifier	sref		11019802	1					
ANR	11020286	IfStatement	"if ( sref . value . bytes && strncmp ( ( const char * ) sref . value . bytes , ""Pattern"" , 7 ) == 0 )"		11019802	1					
ANR	11020287	Condition	"sref . value . bytes && strncmp ( ( const char * ) sref . value . bytes , ""Pattern"" , 7 ) == 0"	5652:16:180519:180596	11019802	0	True				
ANR	11020288	AndExpression	"sref . value . bytes && strncmp ( ( const char * ) sref . value . bytes , ""Pattern"" , 7 ) == 0"		11019802	0		&&			
ANR	11020289	MemberAccess	sref . value . bytes		11019802	0					
ANR	11020290	MemberAccess	sref . value		11019802	0					
ANR	11020291	Identifier	sref		11019802	0					
ANR	11020292	Identifier	value		11019802	1					
ANR	11020293	Identifier	bytes		11019802	1					
ANR	11020294	EqualityExpression	"strncmp ( ( const char * ) sref . value . bytes , ""Pattern"" , 7 ) == 0"		11019802	1		==			
ANR	11020295	CallExpression	"strncmp ( ( const char * ) sref . value . bytes , ""Pattern"" , 7 )"		11019802	0					
ANR	11020296	Callee	strncmp		11019802	0					
ANR	11020297	Identifier	strncmp		11019802	0					
ANR	11020298	ArgumentList	( const char * ) sref . value . bytes		11019802	1					
ANR	11020299	Argument	( const char * ) sref . value . bytes		11019802	0					
ANR	11020300	CastExpression	( const char * ) sref . value . bytes		11019802	0					
ANR	11020301	CastTarget	const char *		11019802	0					
ANR	11020302	MemberAccess	sref . value . bytes		11019802	1					
ANR	11020303	MemberAccess	sref . value		11019802	0					
ANR	11020304	Identifier	sref		11019802	0					
ANR	11020305	Identifier	value		11019802	1					
ANR	11020306	Identifier	bytes		11019802	1					
ANR	11020307	Argument	"""Pattern"""		11019802	1					
ANR	11020308	PrimaryExpression	"""Pattern"""		11019802	0					
ANR	11020309	Argument	7		11019802	2					
ANR	11020310	PrimaryExpression	7		11019802	0					
ANR	11020311	PrimaryExpression	0		11019802	1					
ANR	11020312	ExpressionStatement	return_error ( gs_error_typecheck )	5653:16:180615:180647	11019802	1	True				
ANR	11020313	CallExpression	return_error ( gs_error_typecheck )		11019802	0					
ANR	11020314	Callee	return_error		11019802	0					
ANR	11020315	Identifier	return_error		11019802	0					
ANR	11020316	ArgumentList	gs_error_typecheck		11019802	1					
ANR	11020317	Argument	gs_error_typecheck		11019802	0					
ANR	11020318	Identifier	gs_error_typecheck		11019802	0					
ANR	11020319	ElseStatement	else		11019802	0					
ANR	11020320	CompoundStatement		60:15:2200:2200	11019802	0					
ANR	11020321	IfStatement	if ( r_is_array ( tempref ) )		11019802	0					
ANR	11020322	Condition	r_is_array ( tempref )	5655:16:180682:180700	11019802	0	True				
ANR	11020323	CallExpression	r_is_array ( tempref )		11019802	0					
ANR	11020324	Callee	r_is_array		11019802	0					
ANR	11020325	Identifier	r_is_array		11019802	0					
ANR	11020326	ArgumentList	tempref		11019802	1					
ANR	11020327	Argument	tempref		11019802	0					
ANR	11020328	Identifier	tempref		11019802	0					
ANR	11020329	CompoundStatement		61:37:2239:2239	11019802	1					
ANR	11020330	ExpressionStatement	"code = array_get ( imemory , tempref , 0 , & valref )"	5656:16:180721:180767	11019802	0	True				
ANR	11020331	AssignmentExpression	"code = array_get ( imemory , tempref , 0 , & valref )"		11019802	0		=			
ANR	11020332	Identifier	code		11019802	0					
ANR	11020333	CallExpression	"array_get ( imemory , tempref , 0 , & valref )"		11019802	1					
ANR	11020334	Callee	array_get		11019802	0					
ANR	11020335	Identifier	array_get		11019802	0					
ANR	11020336	ArgumentList	imemory		11019802	1					
ANR	11020337	Argument	imemory		11019802	0					
ANR	11020338	Identifier	imemory		11019802	0					
ANR	11020339	Argument	tempref		11019802	1					
ANR	11020340	Identifier	tempref		11019802	0					
ANR	11020341	Argument	0		11019802	2					
ANR	11020342	PrimaryExpression	0		11019802	0					
ANR	11020343	Argument	& valref		11019802	3					
ANR	11020344	UnaryOperationExpression	& valref		11019802	0					
ANR	11020345	UnaryOperator	&		11019802	0					
ANR	11020346	Identifier	valref		11019802	1					
ANR	11020347	IfStatement	if ( code < 0 )		11019802	1					
ANR	11020348	Condition	code < 0	5657:20:180789:180796	11019802	0	True				
ANR	11020349	RelationalExpression	code < 0		11019802	0		<			
ANR	11020350	Identifier	code		11019802	0					
ANR	11020351	PrimaryExpression	0		11019802	1					
ANR	11020352	ReturnStatement	return code ;	5658:20:180819:180830	11019802	1	True				
ANR	11020353	Identifier	code		11019802	0					
ANR	11020354	IfStatement	"if ( ! r_has_type ( & valref , t_name ) && ! r_has_type ( & valref , t_string ) )"		11019802	2					
ANR	11020355	Condition	"! r_has_type ( & valref , t_name ) && ! r_has_type ( & valref , t_string )"	5659:20:180852:180913	11019802	0	True				
ANR	11020356	AndExpression	"! r_has_type ( & valref , t_name ) && ! r_has_type ( & valref , t_string )"		11019802	0		&&			
ANR	11020357	UnaryOperationExpression	"! r_has_type ( & valref , t_name )"		11019802	0					
ANR	11020358	UnaryOperator	!		11019802	0					
ANR	11020359	CallExpression	"r_has_type ( & valref , t_name )"		11019802	1					
ANR	11020360	Callee	r_has_type		11019802	0					
ANR	11020361	Identifier	r_has_type		11019802	0					
ANR	11020362	ArgumentList	& valref		11019802	1					
ANR	11020363	Argument	& valref		11019802	0					
ANR	11020364	UnaryOperationExpression	& valref		11019802	0					
ANR	11020365	UnaryOperator	&		11019802	0					
ANR	11020366	Identifier	valref		11019802	1					
ANR	11020367	Argument	t_name		11019802	1					
ANR	11020368	Identifier	t_name		11019802	0					
ANR	11020369	UnaryOperationExpression	"! r_has_type ( & valref , t_string )"		11019802	1					
ANR	11020370	UnaryOperator	!		11019802	0					
ANR	11020371	CallExpression	"r_has_type ( & valref , t_string )"		11019802	1					
ANR	11020372	Callee	r_has_type		11019802	0					
ANR	11020373	Identifier	r_has_type		11019802	0					
ANR	11020374	ArgumentList	& valref		11019802	1					
ANR	11020375	Argument	& valref		11019802	0					
ANR	11020376	UnaryOperationExpression	& valref		11019802	0					
ANR	11020377	UnaryOperator	&		11019802	0					
ANR	11020378	Identifier	valref		11019802	1					
ANR	11020379	Argument	t_string		11019802	1					
ANR	11020380	Identifier	t_string		11019802	0					
ANR	11020381	ExpressionStatement	return_error ( gs_error_typecheck )	5660:20:180936:180968	11019802	1	True				
ANR	11020382	CallExpression	return_error ( gs_error_typecheck )		11019802	0					
ANR	11020383	Callee	return_error		11019802	0					
ANR	11020384	Identifier	return_error		11019802	0					
ANR	11020385	ArgumentList	gs_error_typecheck		11019802	1					
ANR	11020386	Argument	gs_error_typecheck		11019802	0					
ANR	11020387	Identifier	gs_error_typecheck		11019802	0					
ANR	11020388	IfStatement	"if ( r_has_type ( & valref , t_name ) )"		11019802	3					
ANR	11020389	Condition	"r_has_type ( & valref , t_name )"	5661:20:180990:181016	11019802	0	True				
ANR	11020390	CallExpression	"r_has_type ( & valref , t_name )"		11019802	0					
ANR	11020391	Callee	r_has_type		11019802	0					
ANR	11020392	Identifier	r_has_type		11019802	0					
ANR	11020393	ArgumentList	& valref		11019802	1					
ANR	11020394	Argument	& valref		11019802	0					
ANR	11020395	UnaryOperationExpression	& valref		11019802	0					
ANR	11020396	UnaryOperator	&		11019802	0					
ANR	11020397	Identifier	valref		11019802	1					
ANR	11020398	Argument	t_name		11019802	1					
ANR	11020399	Identifier	t_name		11019802	0					
ANR	11020400	ExpressionStatement	"name_string_ref ( imemory , & valref , & sref )"	5662:20:181039:181079	11019802	1	True				
ANR	11020401	CallExpression	"name_string_ref ( imemory , & valref , & sref )"		11019802	0					
ANR	11020402	Callee	name_string_ref		11019802	0					
ANR	11020403	Identifier	name_string_ref		11019802	0					
ANR	11020404	ArgumentList	imemory		11019802	1					
ANR	11020405	Argument	imemory		11019802	0					
ANR	11020406	Identifier	imemory		11019802	0					
ANR	11020407	Argument	& valref		11019802	1					
ANR	11020408	UnaryOperationExpression	& valref		11019802	0					
ANR	11020409	UnaryOperator	&		11019802	0					
ANR	11020410	Identifier	valref		11019802	1					
ANR	11020411	Argument	& sref		11019802	2					
ANR	11020412	UnaryOperationExpression	& sref		11019802	0					
ANR	11020413	UnaryOperator	&		11019802	0					
ANR	11020414	Identifier	sref		11019802	1					
ANR	11020415	ElseStatement	else		11019802	0					
ANR	11020416	ExpressionStatement	sref . value . bytes = valref . value . bytes	5664:20:181122:181159	11019802	0	True				
ANR	11020417	AssignmentExpression	sref . value . bytes = valref . value . bytes		11019802	0		=			
ANR	11020418	MemberAccess	sref . value . bytes		11019802	0					
ANR	11020419	MemberAccess	sref . value		11019802	0					
ANR	11020420	Identifier	sref		11019802	0					
ANR	11020421	Identifier	value		11019802	1					
ANR	11020422	Identifier	bytes		11019802	1					
ANR	11020423	MemberAccess	valref . value . bytes		11019802	1					
ANR	11020424	MemberAccess	valref . value		11019802	0					
ANR	11020425	Identifier	valref		11019802	0					
ANR	11020426	Identifier	value		11019802	1					
ANR	11020427	Identifier	bytes		11019802	1					
ANR	11020428	IfStatement	"if ( sref . value . bytes && strncmp ( ( const char * ) sref . value . bytes , ""Pattern"" , 7 ) == 0 )"		11019802	4					
ANR	11020429	Condition	"sref . value . bytes && strncmp ( ( const char * ) sref . value . bytes , ""Pattern"" , 7 ) == 0"	5665:20:181181:181258	11019802	0	True				
ANR	11020430	AndExpression	"sref . value . bytes && strncmp ( ( const char * ) sref . value . bytes , ""Pattern"" , 7 ) == 0"		11019802	0		&&			
ANR	11020431	MemberAccess	sref . value . bytes		11019802	0					
ANR	11020432	MemberAccess	sref . value		11019802	0					
ANR	11020433	Identifier	sref		11019802	0					
ANR	11020434	Identifier	value		11019802	1					
ANR	11020435	Identifier	bytes		11019802	1					
ANR	11020436	EqualityExpression	"strncmp ( ( const char * ) sref . value . bytes , ""Pattern"" , 7 ) == 0"		11019802	1		==			
ANR	11020437	CallExpression	"strncmp ( ( const char * ) sref . value . bytes , ""Pattern"" , 7 )"		11019802	0					
ANR	11020438	Callee	strncmp		11019802	0					
ANR	11020439	Identifier	strncmp		11019802	0					
ANR	11020440	ArgumentList	( const char * ) sref . value . bytes		11019802	1					
ANR	11020441	Argument	( const char * ) sref . value . bytes		11019802	0					
ANR	11020442	CastExpression	( const char * ) sref . value . bytes		11019802	0					
ANR	11020443	CastTarget	const char *		11019802	0					
ANR	11020444	MemberAccess	sref . value . bytes		11019802	1					
ANR	11020445	MemberAccess	sref . value		11019802	0					
ANR	11020446	Identifier	sref		11019802	0					
ANR	11020447	Identifier	value		11019802	1					
ANR	11020448	Identifier	bytes		11019802	1					
ANR	11020449	Argument	"""Pattern"""		11019802	1					
ANR	11020450	PrimaryExpression	"""Pattern"""		11019802	0					
ANR	11020451	Argument	7		11019802	2					
ANR	11020452	PrimaryExpression	7		11019802	0					
ANR	11020453	PrimaryExpression	0		11019802	1					
ANR	11020454	ExpressionStatement	return_error ( gs_error_typecheck )	5666:20:181281:181313	11019802	1	True				
ANR	11020455	CallExpression	return_error ( gs_error_typecheck )		11019802	0					
ANR	11020456	Callee	return_error		11019802	0					
ANR	11020457	Identifier	return_error		11019802	0					
ANR	11020458	ArgumentList	gs_error_typecheck		11019802	1					
ANR	11020459	Argument	gs_error_typecheck		11019802	0					
ANR	11020460	Identifier	gs_error_typecheck		11019802	0					
ANR	11020461	ElseStatement	else		11019802	0					
ANR	11020462	ExpressionStatement	return_error ( gs_error_typecheck )	5668:16:181350:181382	11019802	0	True				
ANR	11020463	CallExpression	return_error ( gs_error_typecheck )		11019802	0					
ANR	11020464	Callee	return_error		11019802	0					
ANR	11020465	Identifier	return_error		11019802	0					
ANR	11020466	ArgumentList	gs_error_typecheck		11019802	1					
ANR	11020467	Argument	gs_error_typecheck		11019802	0					
ANR	11020468	Identifier	gs_error_typecheck		11019802	0					
ANR	11020469	ElseStatement	else		11019802	0					
ANR	11020470	CompoundStatement		77:8:2951:2962	11019802	0					
ANR	11020471	IdentifierDeclStatement	ref nameref ;	5671:8:181415:181426	11019802	0	True				
ANR	11020472	IdentifierDecl	nameref		11019802	0					
ANR	11020473	IdentifierDeclType	ref		11019802	0					
ANR	11020474	Identifier	nameref		11019802	1					
ANR	11020475	SwitchStatement	switch ( components )		11019802	1					
ANR	11020476	Condition	components	5673:16:181445:181454	11019802	0	True				
ANR	11020477	Identifier	components		11019802	0					
ANR	11020478	CompoundStatement		79:28:2993:2993	11019802	1					
ANR	11020479	Label	case 1 :	5674:12:181471:181477	11019802	0	True				
ANR	11020480	ExpressionStatement	"code = name_enter_string ( imemory , ""DeviceGray"" , & nameref )"	5675:16:181495:181552	11019802	1	True				
ANR	11020481	AssignmentExpression	"code = name_enter_string ( imemory , ""DeviceGray"" , & nameref )"		11019802	0		=			
ANR	11020482	Identifier	code		11019802	0					
ANR	11020483	CallExpression	"name_enter_string ( imemory , ""DeviceGray"" , & nameref )"		11019802	1					
ANR	11020484	Callee	name_enter_string		11019802	0					
ANR	11020485	Identifier	name_enter_string		11019802	0					
ANR	11020486	ArgumentList	imemory		11019802	1					
ANR	11020487	Argument	imemory		11019802	0					
ANR	11020488	Identifier	imemory		11019802	0					
ANR	11020489	Argument	"""DeviceGray"""		11019802	1					
ANR	11020490	PrimaryExpression	"""DeviceGray"""		11019802	0					
ANR	11020491	Argument	& nameref		11019802	2					
ANR	11020492	UnaryOperationExpression	& nameref		11019802	0					
ANR	11020493	UnaryOperator	&		11019802	0					
ANR	11020494	Identifier	nameref		11019802	1					
ANR	11020495	BreakStatement	break ;	5676:16:181570:181575	11019802	2	True				
ANR	11020496	Label	case 3 :	5677:12:181589:181595	11019802	3	True				
ANR	11020497	ExpressionStatement	"code = name_enter_string ( imemory , ""DeviceRGB"" , & nameref )"	5678:16:181613:181669	11019802	4	True				
ANR	11020498	AssignmentExpression	"code = name_enter_string ( imemory , ""DeviceRGB"" , & nameref )"		11019802	0		=			
ANR	11020499	Identifier	code		11019802	0					
ANR	11020500	CallExpression	"name_enter_string ( imemory , ""DeviceRGB"" , & nameref )"		11019802	1					
ANR	11020501	Callee	name_enter_string		11019802	0					
ANR	11020502	Identifier	name_enter_string		11019802	0					
ANR	11020503	ArgumentList	imemory		11019802	1					
ANR	11020504	Argument	imemory		11019802	0					
ANR	11020505	Identifier	imemory		11019802	0					
ANR	11020506	Argument	"""DeviceRGB"""		11019802	1					
ANR	11020507	PrimaryExpression	"""DeviceRGB"""		11019802	0					
ANR	11020508	Argument	& nameref		11019802	2					
ANR	11020509	UnaryOperationExpression	& nameref		11019802	0					
ANR	11020510	UnaryOperator	&		11019802	0					
ANR	11020511	Identifier	nameref		11019802	1					
ANR	11020512	BreakStatement	break ;	5679:16:181687:181692	11019802	5	True				
ANR	11020513	Label	case 4 :	5680:12:181706:181712	11019802	6	True				
ANR	11020514	ExpressionStatement	"code = name_enter_string ( imemory , ""DeviceCMYK"" , & nameref )"	5681:16:181730:181787	11019802	7	True				
ANR	11020515	AssignmentExpression	"code = name_enter_string ( imemory , ""DeviceCMYK"" , & nameref )"		11019802	0		=			
ANR	11020516	Identifier	code		11019802	0					
ANR	11020517	CallExpression	"name_enter_string ( imemory , ""DeviceCMYK"" , & nameref )"		11019802	1					
ANR	11020518	Callee	name_enter_string		11019802	0					
ANR	11020519	Identifier	name_enter_string		11019802	0					
ANR	11020520	ArgumentList	imemory		11019802	1					
ANR	11020521	Argument	imemory		11019802	0					
ANR	11020522	Identifier	imemory		11019802	0					
ANR	11020523	Argument	"""DeviceCMYK"""		11019802	1					
ANR	11020524	PrimaryExpression	"""DeviceCMYK"""		11019802	0					
ANR	11020525	Argument	& nameref		11019802	2					
ANR	11020526	UnaryOperationExpression	& nameref		11019802	0					
ANR	11020527	UnaryOperator	&		11019802	0					
ANR	11020528	Identifier	nameref		11019802	1					
ANR	11020529	BreakStatement	break ;	5682:16:181805:181810	11019802	8	True				
ANR	11020530	Label	default :	5683:12:181824:181831	11019802	9	True				
ANR	11020531	Identifier	default		11019802	0					
ANR	11020532	ExpressionStatement	return_error ( gs_error_rangecheck )	5684:16:181849:181882	11019802	10	True				
ANR	11020533	CallExpression	return_error ( gs_error_rangecheck )		11019802	0					
ANR	11020534	Callee	return_error		11019802	0					
ANR	11020535	Identifier	return_error		11019802	0					
ANR	11020536	ArgumentList	gs_error_rangecheck		11019802	1					
ANR	11020537	Argument	gs_error_rangecheck		11019802	0					
ANR	11020538	Identifier	gs_error_rangecheck		11019802	0					
ANR	11020539	IfStatement	if ( code < 0 )		11019802	2					
ANR	11020540	Condition	code < 0	5686:12:181906:181913	11019802	0	True				
ANR	11020541	RelationalExpression	code < 0		11019802	0		<			
ANR	11020542	Identifier	code		11019802	0					
ANR	11020543	PrimaryExpression	0		11019802	1					
ANR	11020544	ReturnStatement	return code ;	5687:12:181928:181939	11019802	1	True				
ANR	11020545	Identifier	code		11019802	0					
ANR	11020546	ExpressionStatement	"code = idict_put_string ( & ICCdict , ""Alternate"" , & nameref )"	5693:8:182268:182324	11019802	3	True				
ANR	11020547	AssignmentExpression	"code = idict_put_string ( & ICCdict , ""Alternate"" , & nameref )"		11019802	0		=			
ANR	11020548	Identifier	code		11019802	0					
ANR	11020549	CallExpression	"idict_put_string ( & ICCdict , ""Alternate"" , & nameref )"		11019802	1					
ANR	11020550	Callee	idict_put_string		11019802	0					
ANR	11020551	Identifier	idict_put_string		11019802	0					
ANR	11020552	ArgumentList	& ICCdict		11019802	1					
ANR	11020553	Argument	& ICCdict		11019802	0					
ANR	11020554	UnaryOperationExpression	& ICCdict		11019802	0					
ANR	11020555	UnaryOperator	&		11019802	0					
ANR	11020556	Identifier	ICCdict		11019802	1					
ANR	11020557	Argument	"""Alternate"""		11019802	1					
ANR	11020558	PrimaryExpression	"""Alternate"""		11019802	0					
ANR	11020559	Argument	& nameref		11019802	2					
ANR	11020560	UnaryOperationExpression	& nameref		11019802	0					
ANR	11020561	UnaryOperator	&		11019802	0					
ANR	11020562	Identifier	nameref		11019802	1					
ANR	11020563	IfStatement	if ( code < 0 )		11019802	4					
ANR	11020564	Condition	code < 0	5694:12:182338:182345	11019802	0	True				
ANR	11020565	RelationalExpression	code < 0		11019802	0		<			
ANR	11020566	Identifier	code		11019802	0					
ANR	11020567	PrimaryExpression	0		11019802	1					
ANR	11020568	ReturnStatement	return code ;	5695:12:182360:182371	11019802	1	True				
ANR	11020569	Identifier	code		11019802	0					
ANR	11020570	ReturnStatement	"return validateiccspace ( i_ctx_p , r ) ;"	5698:8:182449:182484	11019802	5	True				
ANR	11020571	CallExpression	"validateiccspace ( i_ctx_p , r )"		11019802	0					
ANR	11020572	Callee	validateiccspace		11019802	0					
ANR	11020573	Identifier	validateiccspace		11019802	0					
ANR	11020574	ArgumentList	i_ctx_p		11019802	1					
ANR	11020575	Argument	i_ctx_p		11019802	0					
ANR	11020576	Identifier	i_ctx_p		11019802	0					
ANR	11020577	Argument	r		11019802	1					
ANR	11020578	Identifier	r		11019802	0					
ANR	11020579	ReturnStatement	return code ;	5700:4:182496:182507	11019802	19	True				
ANR	11020580	Identifier	code		11019802	0					
ANR	11020581	ReturnType	static int		11019802	1					
ANR	11020582	Identifier	validateiccspace		11019802	2					
ANR	11020583	ParameterList	"i_ctx_t * i_ctx_p , ref * * r"		11019802	3					
ANR	11020584	Parameter	i_ctx_t * i_ctx_p	5594:28:178435:178451	11019802	0	True				
ANR	11020585	ParameterType	i_ctx_t *		11019802	0					
ANR	11020586	Identifier	i_ctx_p		11019802	1					
ANR	11020587	Parameter	ref * * r	5594:47:178454:178460	11019802	1	True				
ANR	11020588	ParameterType	ref * *		11019802	0					
ANR	11020589	Identifier	r		11019802	1					
ANR	11020590	CFGEntryNode	ENTRY		11019802		True				
ANR	11020591	CFGExitNode	EXIT		11019802		True				
ANR	11020592	Symbol	components		11019802						
ANR	11020593	Symbol	valref . value		11019802						
ANR	11020594	Symbol	code		11019802						
ANR	11020595	Symbol	t_dictionary		11019802						
ANR	11020596	Symbol	gs_error_rangecheck		11019802						
ANR	11020597	Symbol	ICCdict		11019802						
ANR	11020598	Symbol	gs_error_undefined		11019802						
ANR	11020599	Symbol	* tempref		11019802						
ANR	11020600	Symbol	nameref		11019802						
ANR	11020601	Symbol	& ICCdict		11019802						
ANR	11020602	Symbol	space		11019802						
ANR	11020603	Symbol	strncmp		11019802						
ANR	11020604	Symbol	valref . value . bytes		11019802						
ANR	11020605	Symbol	gs_error_typecheck		11019802						
ANR	11020606	Symbol	t_null		11019802						
ANR	11020607	Symbol	r_has_type		11019802						
ANR	11020608	Symbol	& valref		11019802						
ANR	11020609	Symbol	t_name		11019802						
ANR	11020610	Symbol	r_size		11019802						
ANR	11020611	Symbol	sref . value . bytes		11019802						
ANR	11020612	Symbol	imemory		11019802						
ANR	11020613	Symbol	idict_put_string		11019802						
ANR	11020614	Symbol	tempref		11019802						
ANR	11020615	Symbol	& nameref		11019802						
ANR	11020616	Symbol	tempref -> value . intval		11019802						
ANR	11020617	Symbol	dict_find_string		11019802						
ANR	11020618	Symbol	array_get		11019802						
ANR	11020619	Symbol	i		11019802						
ANR	11020620	Symbol	& tempref		11019802						
ANR	11020621	Symbol	t_real		11019802						
ANR	11020622	Symbol	& sref		11019802						
ANR	11020623	Symbol	validateiccspace		11019802						
ANR	11020624	Symbol	name_enter_string		11019802						
ANR	11020625	Symbol	t_string		11019802						
ANR	11020626	Symbol	sref . value		11019802						
ANR	11020627	Symbol	r		11019802						
ANR	11020628	Symbol	gs_note_error		11019802						
ANR	11020629	Symbol	tempref -> value		11019802						
ANR	11020630	Symbol	t_integer		11019802						
ANR	11020631	Symbol	sref		11019802						
ANR	11020632	Symbol	i_ctx_p		11019802						
ANR	11020633	Symbol	valref		11019802						
ANR	11020634	Symbol	r_is_array		11019802						
ANR	11020635	Symbol	t_file		11019802						
ANR	11020636	Symbol	* r		11019802						
ANR	11020637	Function	iccalternatespace	5703:0:182512:183792							
ANR	11020638	FunctionDef	"iccalternatespace (i_ctx_t * i_ctx_p , ref * space , ref * * r , int * CIESubst)"		11020637	0					
ANR	11020639	CompoundStatement		5704:0:182596:183792	11020637	0					
ANR	11020640	IdentifierDeclStatement	"int components , code = 0 ;"	5705:4:182602:182626	11020637	0	True				
ANR	11020641	IdentifierDecl	components		11020637	0					
ANR	11020642	IdentifierDeclType	int		11020637	0					
ANR	11020643	Identifier	components		11020637	1					
ANR	11020644	IdentifierDecl	code = 0		11020637	1					
ANR	11020645	IdentifierDeclType	int		11020637	0					
ANR	11020646	Identifier	code		11020637	1					
ANR	11020647	AssignmentExpression	code = 0		11020637	2		=			
ANR	11020648	Identifier	code		11020637	0					
ANR	11020649	PrimaryExpression	0		11020637	1					
ANR	11020650	IdentifierDeclStatement	"ref * tempref , ICCdict ;"	5706:4:182632:182653	11020637	1	True				
ANR	11020651	IdentifierDecl	* tempref		11020637	0					
ANR	11020652	IdentifierDeclType	ref *		11020637	0					
ANR	11020653	Identifier	tempref		11020637	1					
ANR	11020654	IdentifierDecl	ICCdict		11020637	1					
ANR	11020655	IdentifierDeclType	ref		11020637	0					
ANR	11020656	Identifier	ICCdict		11020637	1					
ANR	11020657	IfStatement	if ( ! r_is_array ( space ) )		11020637	2					
ANR	11020658	Condition	! r_is_array ( space )	5708:8:182664:182681	11020637	0	True				
ANR	11020659	UnaryOperationExpression	! r_is_array ( space )		11020637	0					
ANR	11020660	UnaryOperator	!		11020637	0					
ANR	11020661	CallExpression	r_is_array ( space )		11020637	1					
ANR	11020662	Callee	r_is_array		11020637	0					
ANR	11020663	Identifier	r_is_array		11020637	0					
ANR	11020664	ArgumentList	space		11020637	1					
ANR	11020665	Argument	space		11020637	0					
ANR	11020666	Identifier	space		11020637	0					
ANR	11020667	ExpressionStatement	return_error ( gs_error_typecheck )	5709:8:182692:182724	11020637	1	True				
ANR	11020668	CallExpression	return_error ( gs_error_typecheck )		11020637	0					
ANR	11020669	Callee	return_error		11020637	0					
ANR	11020670	Identifier	return_error		11020637	0					
ANR	11020671	ArgumentList	gs_error_typecheck		11020637	1					
ANR	11020672	Argument	gs_error_typecheck		11020637	0					
ANR	11020673	Identifier	gs_error_typecheck		11020637	0					
ANR	11020674	IfStatement	if ( r_size ( space ) != 2 )		11020637	3					
ANR	11020675	Condition	r_size ( space ) != 2	5711:8:182795:182812	11020637	0	True				
ANR	11020676	EqualityExpression	r_size ( space ) != 2		11020637	0		!=			
ANR	11020677	CallExpression	r_size ( space )		11020637	0					
ANR	11020678	Callee	r_size		11020637	0					
ANR	11020679	Identifier	r_size		11020637	0					
ANR	11020680	ArgumentList	space		11020637	1					
ANR	11020681	Argument	space		11020637	0					
ANR	11020682	Identifier	space		11020637	0					
ANR	11020683	PrimaryExpression	2		11020637	1					
ANR	11020684	ExpressionStatement	return_error ( gs_error_rangecheck )	5712:8:182823:182856	11020637	1	True				
ANR	11020685	CallExpression	return_error ( gs_error_rangecheck )		11020637	0					
ANR	11020686	Callee	return_error		11020637	0					
ANR	11020687	Identifier	return_error		11020637	0					
ANR	11020688	ArgumentList	gs_error_rangecheck		11020637	1					
ANR	11020689	Argument	gs_error_rangecheck		11020637	0					
ANR	11020690	Identifier	gs_error_rangecheck		11020637	0					
ANR	11020691	ExpressionStatement	"code = array_get ( imemory , space , 1 , & ICCdict )"	5714:4:182863:182908	11020637	4	True				
ANR	11020692	AssignmentExpression	"code = array_get ( imemory , space , 1 , & ICCdict )"		11020637	0		=			
ANR	11020693	Identifier	code		11020637	0					
ANR	11020694	CallExpression	"array_get ( imemory , space , 1 , & ICCdict )"		11020637	1					
ANR	11020695	Callee	array_get		11020637	0					
ANR	11020696	Identifier	array_get		11020637	0					
ANR	11020697	ArgumentList	imemory		11020637	1					
ANR	11020698	Argument	imemory		11020637	0					
ANR	11020699	Identifier	imemory		11020637	0					
ANR	11020700	Argument	space		11020637	1					
ANR	11020701	Identifier	space		11020637	0					
ANR	11020702	Argument	1		11020637	2					
ANR	11020703	PrimaryExpression	1		11020637	0					
ANR	11020704	Argument	& ICCdict		11020637	3					
ANR	11020705	UnaryOperationExpression	& ICCdict		11020637	0					
ANR	11020706	UnaryOperator	&		11020637	0					
ANR	11020707	Identifier	ICCdict		11020637	1					
ANR	11020708	IfStatement	if ( code < 0 )		11020637	5					
ANR	11020709	Condition	code < 0	5715:8:182918:182925	11020637	0	True				
ANR	11020710	RelationalExpression	code < 0		11020637	0		<			
ANR	11020711	Identifier	code		11020637	0					
ANR	11020712	PrimaryExpression	0		11020637	1					
ANR	11020713	ReturnStatement	return code ;	5716:8:182936:182947	11020637	1	True				
ANR	11020714	Identifier	code		11020637	0					
ANR	11020715	ExpressionStatement	"code = dict_find_string ( & ICCdict , ""N"" , & tempref )"	5718:4:182954:183002	11020637	6	True				
ANR	11020716	AssignmentExpression	"code = dict_find_string ( & ICCdict , ""N"" , & tempref )"		11020637	0		=			
ANR	11020717	Identifier	code		11020637	0					
ANR	11020718	CallExpression	"dict_find_string ( & ICCdict , ""N"" , & tempref )"		11020637	1					
ANR	11020719	Callee	dict_find_string		11020637	0					
ANR	11020720	Identifier	dict_find_string		11020637	0					
ANR	11020721	ArgumentList	& ICCdict		11020637	1					
ANR	11020722	Argument	& ICCdict		11020637	0					
ANR	11020723	UnaryOperationExpression	& ICCdict		11020637	0					
ANR	11020724	UnaryOperator	&		11020637	0					
ANR	11020725	Identifier	ICCdict		11020637	1					
ANR	11020726	Argument	"""N"""		11020637	1					
ANR	11020727	PrimaryExpression	"""N"""		11020637	0					
ANR	11020728	Argument	& tempref		11020637	2					
ANR	11020729	UnaryOperationExpression	& tempref		11020637	0					
ANR	11020730	UnaryOperator	&		11020637	0					
ANR	11020731	Identifier	tempref		11020637	1					
ANR	11020732	IfStatement	if ( code < 0 )		11020637	7					
ANR	11020733	Condition	code < 0	5719:8:183012:183019	11020637	0	True				
ANR	11020734	RelationalExpression	code < 0		11020637	0		<			
ANR	11020735	Identifier	code		11020637	0					
ANR	11020736	PrimaryExpression	0		11020637	1					
ANR	11020737	ReturnStatement	return code ;	5720:8:183030:183041	11020637	1	True				
ANR	11020738	Identifier	code		11020637	0					
ANR	11020739	IfStatement	if ( code == 0 )		11020637	8					
ANR	11020740	Condition	code == 0	5721:8:183051:183059	11020637	0	True				
ANR	11020741	EqualityExpression	code == 0		11020637	0		==			
ANR	11020742	Identifier	code		11020637	0					
ANR	11020743	PrimaryExpression	0		11020637	1					
ANR	11020744	ReturnStatement	return gs_note_error ( gs_error_undefined ) ;	5722:8:183070:183110	11020637	1	True				
ANR	11020745	CallExpression	gs_note_error ( gs_error_undefined )		11020637	0					
ANR	11020746	Callee	gs_note_error		11020637	0					
ANR	11020747	Identifier	gs_note_error		11020637	0					
ANR	11020748	ArgumentList	gs_error_undefined		11020637	1					
ANR	11020749	Argument	gs_error_undefined		11020637	0					
ANR	11020750	Identifier	gs_error_undefined		11020637	0					
ANR	11020751	ExpressionStatement	components = tempref -> value . intval	5724:4:183117:183151	11020637	9	True				
ANR	11020752	AssignmentExpression	components = tempref -> value . intval		11020637	0		=			
ANR	11020753	Identifier	components		11020637	0					
ANR	11020754	MemberAccess	tempref -> value . intval		11020637	1					
ANR	11020755	PtrMemberAccess	tempref -> value		11020637	0					
ANR	11020756	Identifier	tempref		11020637	0					
ANR	11020757	Identifier	value		11020637	1					
ANR	11020758	Identifier	intval		11020637	1					
ANR	11020759	ExpressionStatement	"code = dict_find_string ( & ICCdict , ""Alternate"" , & tempref )"	5726:4:183158:183214	11020637	10	True				
ANR	11020760	AssignmentExpression	"code = dict_find_string ( & ICCdict , ""Alternate"" , & tempref )"		11020637	0		=			
ANR	11020761	Identifier	code		11020637	0					
ANR	11020762	CallExpression	"dict_find_string ( & ICCdict , ""Alternate"" , & tempref )"		11020637	1					
ANR	11020763	Callee	dict_find_string		11020637	0					
ANR	11020764	Identifier	dict_find_string		11020637	0					
ANR	11020765	ArgumentList	& ICCdict		11020637	1					
ANR	11020766	Argument	& ICCdict		11020637	0					
ANR	11020767	UnaryOperationExpression	& ICCdict		11020637	0					
ANR	11020768	UnaryOperator	&		11020637	0					
ANR	11020769	Identifier	ICCdict		11020637	1					
ANR	11020770	Argument	"""Alternate"""		11020637	1					
ANR	11020771	PrimaryExpression	"""Alternate"""		11020637	0					
ANR	11020772	Argument	& tempref		11020637	2					
ANR	11020773	UnaryOperationExpression	& tempref		11020637	0					
ANR	11020774	UnaryOperator	&		11020637	0					
ANR	11020775	Identifier	tempref		11020637	1					
ANR	11020776	IfStatement	"if ( code > 0 && ! r_has_type ( tempref , t_null ) )"		11020637	11					
ANR	11020777	Condition	"code > 0 && ! r_has_type ( tempref , t_null )"	5727:8:183224:183263	11020637	0	True				
ANR	11020778	AndExpression	"code > 0 && ! r_has_type ( tempref , t_null )"		11020637	0		&&			
ANR	11020779	RelationalExpression	code > 0		11020637	0		>			
ANR	11020780	Identifier	code		11020637	0					
ANR	11020781	PrimaryExpression	0		11020637	1					
ANR	11020782	UnaryOperationExpression	"! r_has_type ( tempref , t_null )"		11020637	1					
ANR	11020783	UnaryOperator	!		11020637	0					
ANR	11020784	CallExpression	"r_has_type ( tempref , t_null )"		11020637	1					
ANR	11020785	Callee	r_has_type		11020637	0					
ANR	11020786	Identifier	r_has_type		11020637	0					
ANR	11020787	ArgumentList	tempref		11020637	1					
ANR	11020788	Argument	tempref		11020637	0					
ANR	11020789	Identifier	tempref		11020637	0					
ANR	11020790	Argument	t_null		11020637	1					
ANR	11020791	Identifier	t_null		11020637	0					
ANR	11020792	CompoundStatement		24:50:669:669	11020637	1					
ANR	11020793	ExpressionStatement	* r = tempref	5728:8:183276:183288	11020637	0	True				
ANR	11020794	AssignmentExpression	* r = tempref		11020637	0		=			
ANR	11020795	UnaryOperationExpression	* r		11020637	0					
ANR	11020796	UnaryOperator	*		11020637	0					
ANR	11020797	Identifier	r		11020637	1					
ANR	11020798	Identifier	tempref		11020637	1					
ANR	11020799	ElseStatement	else		11020637	0					
ANR	11020800	CompoundStatement		26:11:704:704	11020637	0					
ANR	11020801	SwitchStatement	switch ( components )		11020637	0					
ANR	11020802	Condition	components	5730:16:183319:183328	11020637	0	True				
ANR	11020803	Identifier	components		11020637	0					
ANR	11020804	CompoundStatement		27:28:734:734	11020637	1					
ANR	11020805	Label	case 1 :	5731:12:183345:183351	11020637	0	True				
ANR	11020806	ExpressionStatement	"code = name_enter_string ( imemory , ""DeviceGray"" , * r )"	5732:16:183369:183420	11020637	1	True				
ANR	11020807	AssignmentExpression	"code = name_enter_string ( imemory , ""DeviceGray"" , * r )"		11020637	0		=			
ANR	11020808	Identifier	code		11020637	0					
ANR	11020809	CallExpression	"name_enter_string ( imemory , ""DeviceGray"" , * r )"		11020637	1					
ANR	11020810	Callee	name_enter_string		11020637	0					
ANR	11020811	Identifier	name_enter_string		11020637	0					
ANR	11020812	ArgumentList	imemory		11020637	1					
ANR	11020813	Argument	imemory		11020637	0					
ANR	11020814	Identifier	imemory		11020637	0					
ANR	11020815	Argument	"""DeviceGray"""		11020637	1					
ANR	11020816	PrimaryExpression	"""DeviceGray"""		11020637	0					
ANR	11020817	Argument	* r		11020637	2					
ANR	11020818	UnaryOperationExpression	* r		11020637	0					
ANR	11020819	UnaryOperator	*		11020637	0					
ANR	11020820	Identifier	r		11020637	1					
ANR	11020821	BreakStatement	break ;	5733:16:183438:183443	11020637	2	True				
ANR	11020822	Label	case 3 :	5734:12:183457:183463	11020637	3	True				
ANR	11020823	ExpressionStatement	"code = name_enter_string ( imemory , ""DeviceRGB"" , * r )"	5735:16:183481:183531	11020637	4	True				
ANR	11020824	AssignmentExpression	"code = name_enter_string ( imemory , ""DeviceRGB"" , * r )"		11020637	0		=			
ANR	11020825	Identifier	code		11020637	0					
ANR	11020826	CallExpression	"name_enter_string ( imemory , ""DeviceRGB"" , * r )"		11020637	1					
ANR	11020827	Callee	name_enter_string		11020637	0					
ANR	11020828	Identifier	name_enter_string		11020637	0					
ANR	11020829	ArgumentList	imemory		11020637	1					
ANR	11020830	Argument	imemory		11020637	0					
ANR	11020831	Identifier	imemory		11020637	0					
ANR	11020832	Argument	"""DeviceRGB"""		11020637	1					
ANR	11020833	PrimaryExpression	"""DeviceRGB"""		11020637	0					
ANR	11020834	Argument	* r		11020637	2					
ANR	11020835	UnaryOperationExpression	* r		11020637	0					
ANR	11020836	UnaryOperator	*		11020637	0					
ANR	11020837	Identifier	r		11020637	1					
ANR	11020838	BreakStatement	break ;	5736:16:183549:183554	11020637	5	True				
ANR	11020839	Label	case 4 :	5737:12:183568:183574	11020637	6	True				
ANR	11020840	ExpressionStatement	"code = name_enter_string ( imemory , ""DeviceCMYK"" , * r )"	5738:16:183592:183643	11020637	7	True				
ANR	11020841	AssignmentExpression	"code = name_enter_string ( imemory , ""DeviceCMYK"" , * r )"		11020637	0		=			
ANR	11020842	Identifier	code		11020637	0					
ANR	11020843	CallExpression	"name_enter_string ( imemory , ""DeviceCMYK"" , * r )"		11020637	1					
ANR	11020844	Callee	name_enter_string		11020637	0					
ANR	11020845	Identifier	name_enter_string		11020637	0					
ANR	11020846	ArgumentList	imemory		11020637	1					
ANR	11020847	Argument	imemory		11020637	0					
ANR	11020848	Identifier	imemory		11020637	0					
ANR	11020849	Argument	"""DeviceCMYK"""		11020637	1					
ANR	11020850	PrimaryExpression	"""DeviceCMYK"""		11020637	0					
ANR	11020851	Argument	* r		11020637	2					
ANR	11020852	UnaryOperationExpression	* r		11020637	0					
ANR	11020853	UnaryOperator	*		11020637	0					
ANR	11020854	Identifier	r		11020637	1					
ANR	11020855	BreakStatement	break ;	5739:16:183661:183666	11020637	8	True				
ANR	11020856	Label	default :	5740:12:183680:183687	11020637	9	True				
ANR	11020857	Identifier	default		11020637	0					
ANR	11020858	ExpressionStatement	return_error ( gs_error_rangecheck )	5741:16:183705:183738	11020637	10	True				
ANR	11020859	CallExpression	return_error ( gs_error_rangecheck )		11020637	0					
ANR	11020860	Callee	return_error		11020637	0					
ANR	11020861	Identifier	return_error		11020637	0					
ANR	11020862	ArgumentList	gs_error_rangecheck		11020637	1					
ANR	11020863	Argument	gs_error_rangecheck		11020637	0					
ANR	11020864	Identifier	gs_error_rangecheck		11020637	0					
ANR	11020865	ExpressionStatement	* CIESubst = 1	5744:4:183760:183773	11020637	12	True				
ANR	11020866	AssignmentExpression	* CIESubst = 1		11020637	0		=			
ANR	11020867	UnaryOperationExpression	* CIESubst		11020637	0					
ANR	11020868	UnaryOperator	*		11020637	0					
ANR	11020869	Identifier	CIESubst		11020637	1					
ANR	11020870	PrimaryExpression	1		11020637	1					
ANR	11020871	ReturnStatement	return code ;	5745:4:183779:183790	11020637	13	True				
ANR	11020872	Identifier	code		11020637	0					
ANR	11020873	ReturnType	static int		11020637	1					
ANR	11020874	Identifier	iccalternatespace		11020637	2					
ANR	11020875	ParameterList	"i_ctx_t * i_ctx_p , ref * space , ref * * r , int * CIESubst"		11020637	3					
ANR	11020876	Parameter	i_ctx_t * i_ctx_p	5703:29:182541:182557	11020637	0	True				
ANR	11020877	ParameterType	i_ctx_t *		11020637	0					
ANR	11020878	Identifier	i_ctx_p		11020637	1					
ANR	11020879	Parameter	ref * space	5703:48:182560:182569	11020637	1	True				
ANR	11020880	ParameterType	ref *		11020637	0					
ANR	11020881	Identifier	space		11020637	1					
ANR	11020882	Parameter	ref * * r	5703:60:182572:182578	11020637	2	True				
ANR	11020883	ParameterType	ref * *		11020637	0					
ANR	11020884	Identifier	r		11020637	1					
ANR	11020885	Parameter	int * CIESubst	5703:69:182581:182593	11020637	3	True				
ANR	11020886	ParameterType	int *		11020637	0					
ANR	11020887	Identifier	CIESubst		11020637	1					
ANR	11020888	CFGEntryNode	ENTRY		11020637		True				
ANR	11020889	CFGExitNode	EXIT		11020637		True				
ANR	11020890	Symbol	components		11020637						
ANR	11020891	Symbol	code		11020637						
ANR	11020892	Symbol	gs_error_rangecheck		11020637						
ANR	11020893	Symbol	ICCdict		11020637						
ANR	11020894	Symbol	gs_error_undefined		11020637						
ANR	11020895	Symbol	* tempref		11020637						
ANR	11020896	Symbol	& ICCdict		11020637						
ANR	11020897	Symbol	space		11020637						
ANR	11020898	Symbol	* CIESubst		11020637						
ANR	11020899	Symbol	gs_error_typecheck		11020637						
ANR	11020900	Symbol	r_has_type		11020637						
ANR	11020901	Symbol	t_null		11020637						
ANR	11020902	Symbol	r_size		11020637						
ANR	11020903	Symbol	imemory		11020637						
ANR	11020904	Symbol	CIESubst		11020637						
ANR	11020905	Symbol	tempref		11020637						
ANR	11020906	Symbol	tempref -> value . intval		11020637						
ANR	11020907	Symbol	dict_find_string		11020637						
ANR	11020908	Symbol	array_get		11020637						
ANR	11020909	Symbol	& tempref		11020637						
ANR	11020910	Symbol	name_enter_string		11020637						
ANR	11020911	Symbol	r		11020637						
ANR	11020912	Symbol	gs_note_error		11020637						
ANR	11020913	Symbol	tempref -> value		11020637						
ANR	11020914	Symbol	i_ctx_p		11020637						
ANR	11020915	Symbol	r_is_array		11020637						
ANR	11020916	Symbol	* r		11020637						
ANR	11020917	Function	icccomponents	5747:0:183794:184205							
ANR	11020918	FunctionDef	"icccomponents (i_ctx_t * i_ctx_p , ref * space , int * n)"		11020917	0					
ANR	11020919	CompoundStatement		5748:0:183858:184205	11020917	0					
ANR	11020920	IdentifierDeclStatement	int code = 0 ;	5749:4:183864:183876	11020917	0	True				
ANR	11020921	IdentifierDecl	code = 0		11020917	0					
ANR	11020922	IdentifierDeclType	int		11020917	0					
ANR	11020923	Identifier	code		11020917	1					
ANR	11020924	AssignmentExpression	code = 0		11020917	2		=			
ANR	11020925	Identifier	code		11020917	0					
ANR	11020926	PrimaryExpression	0		11020917	1					
ANR	11020927	IdentifierDeclStatement	"ref * tempref , ICCdict ;"	5750:4:183882:183903	11020917	1	True				
ANR	11020928	IdentifierDecl	* tempref		11020917	0					
ANR	11020929	IdentifierDeclType	ref *		11020917	0					
ANR	11020930	Identifier	tempref		11020917	1					
ANR	11020931	IdentifierDecl	ICCdict		11020917	1					
ANR	11020932	IdentifierDeclType	ref		11020917	0					
ANR	11020933	Identifier	ICCdict		11020917	1					
ANR	11020934	ExpressionStatement	"code = array_get ( imemory , space , 1 , & ICCdict )"	5752:4:183910:183955	11020917	2	True				
ANR	11020935	AssignmentExpression	"code = array_get ( imemory , space , 1 , & ICCdict )"		11020917	0		=			
ANR	11020936	Identifier	code		11020917	0					
ANR	11020937	CallExpression	"array_get ( imemory , space , 1 , & ICCdict )"		11020917	1					
ANR	11020938	Callee	array_get		11020917	0					
ANR	11020939	Identifier	array_get		11020917	0					
ANR	11020940	ArgumentList	imemory		11020917	1					
ANR	11020941	Argument	imemory		11020917	0					
ANR	11020942	Identifier	imemory		11020917	0					
ANR	11020943	Argument	space		11020917	1					
ANR	11020944	Identifier	space		11020917	0					
ANR	11020945	Argument	1		11020917	2					
ANR	11020946	PrimaryExpression	1		11020917	0					
ANR	11020947	Argument	& ICCdict		11020917	3					
ANR	11020948	UnaryOperationExpression	& ICCdict		11020917	0					
ANR	11020949	UnaryOperator	&		11020917	0					
ANR	11020950	Identifier	ICCdict		11020917	1					
ANR	11020951	IfStatement	if ( code < 0 )		11020917	3					
ANR	11020952	Condition	code < 0	5753:8:183965:183972	11020917	0	True				
ANR	11020953	RelationalExpression	code < 0		11020917	0		<			
ANR	11020954	Identifier	code		11020917	0					
ANR	11020955	PrimaryExpression	0		11020917	1					
ANR	11020956	ReturnStatement	return code ;	5754:8:183983:183994	11020917	1	True				
ANR	11020957	Identifier	code		11020917	0					
ANR	11020958	ExpressionStatement	"code = dict_find_string ( & ICCdict , ""N"" , & tempref )"	5756:4:184001:184049	11020917	4	True				
ANR	11020959	AssignmentExpression	"code = dict_find_string ( & ICCdict , ""N"" , & tempref )"		11020917	0		=			
ANR	11020960	Identifier	code		11020917	0					
ANR	11020961	CallExpression	"dict_find_string ( & ICCdict , ""N"" , & tempref )"		11020917	1					
ANR	11020962	Callee	dict_find_string		11020917	0					
ANR	11020963	Identifier	dict_find_string		11020917	0					
ANR	11020964	ArgumentList	& ICCdict		11020917	1					
ANR	11020965	Argument	& ICCdict		11020917	0					
ANR	11020966	UnaryOperationExpression	& ICCdict		11020917	0					
ANR	11020967	UnaryOperator	&		11020917	0					
ANR	11020968	Identifier	ICCdict		11020917	1					
ANR	11020969	Argument	"""N"""		11020917	1					
ANR	11020970	PrimaryExpression	"""N"""		11020917	0					
ANR	11020971	Argument	& tempref		11020917	2					
ANR	11020972	UnaryOperationExpression	& tempref		11020917	0					
ANR	11020973	UnaryOperator	&		11020917	0					
ANR	11020974	Identifier	tempref		11020917	1					
ANR	11020975	IfStatement	if ( code < 0 )		11020917	5					
ANR	11020976	Condition	code < 0	5757:8:184059:184066	11020917	0	True				
ANR	11020977	RelationalExpression	code < 0		11020917	0		<			
ANR	11020978	Identifier	code		11020917	0					
ANR	11020979	PrimaryExpression	0		11020917	1					
ANR	11020980	ReturnStatement	return code ;	5758:8:184077:184088	11020917	1	True				
ANR	11020981	Identifier	code		11020917	0					
ANR	11020982	IfStatement	if ( code == 0 )		11020917	6					
ANR	11020983	Condition	code == 0	5759:8:184098:184106	11020917	0	True				
ANR	11020984	EqualityExpression	code == 0		11020917	0		==			
ANR	11020985	Identifier	code		11020917	0					
ANR	11020986	PrimaryExpression	0		11020917	1					
ANR	11020987	ReturnStatement	return gs_note_error ( gs_error_undefined ) ;	5760:8:184117:184157	11020917	1	True				
ANR	11020988	CallExpression	gs_note_error ( gs_error_undefined )		11020917	0					
ANR	11020989	Callee	gs_note_error		11020917	0					
ANR	11020990	Identifier	gs_note_error		11020917	0					
ANR	11020991	ArgumentList	gs_error_undefined		11020917	1					
ANR	11020992	Argument	gs_error_undefined		11020917	0					
ANR	11020993	Identifier	gs_error_undefined		11020917	0					
ANR	11020994	ExpressionStatement	* n = tempref -> value . intval	5761:4:184163:184189	11020917	7	True				
ANR	11020995	AssignmentExpression	* n = tempref -> value . intval		11020917	0		=			
ANR	11020996	UnaryOperationExpression	* n		11020917	0					
ANR	11020997	UnaryOperator	*		11020917	0					
ANR	11020998	Identifier	n		11020917	1					
ANR	11020999	MemberAccess	tempref -> value . intval		11020917	1					
ANR	11021000	PtrMemberAccess	tempref -> value		11020917	0					
ANR	11021001	Identifier	tempref		11020917	0					
ANR	11021002	Identifier	value		11020917	1					
ANR	11021003	Identifier	intval		11020917	1					
ANR	11021004	ReturnStatement	return 0 ;	5762:4:184195:184203	11020917	8	True				
ANR	11021005	PrimaryExpression	0		11020917	0					
ANR	11021006	ReturnType	static int		11020917	1					
ANR	11021007	Identifier	icccomponents		11020917	2					
ANR	11021008	ParameterList	"i_ctx_t * i_ctx_p , ref * space , int * n"		11020917	3					
ANR	11021009	Parameter	i_ctx_t * i_ctx_p	5747:25:183819:183835	11020917	0	True				
ANR	11021010	ParameterType	i_ctx_t *		11020917	0					
ANR	11021011	Identifier	i_ctx_p		11020917	1					
ANR	11021012	Parameter	ref * space	5747:44:183838:183847	11020917	1	True				
ANR	11021013	ParameterType	ref *		11020917	0					
ANR	11021014	Identifier	space		11020917	1					
ANR	11021015	Parameter	int * n	5747:56:183850:183855	11020917	2	True				
ANR	11021016	ParameterType	int *		11020917	0					
ANR	11021017	Identifier	n		11020917	1					
ANR	11021018	CFGEntryNode	ENTRY		11020917		True				
ANR	11021019	CFGExitNode	EXIT		11020917		True				
ANR	11021020	Symbol	tempref -> value . intval		11020917						
ANR	11021021	Symbol	code		11020917						
ANR	11021022	Symbol	dict_find_string		11020917						
ANR	11021023	Symbol	ICCdict		11020917						
ANR	11021024	Symbol	array_get		11020917						
ANR	11021025	Symbol	gs_error_undefined		11020917						
ANR	11021026	Symbol	* tempref		11020917						
ANR	11021027	Symbol	& tempref		11020917						
ANR	11021028	Symbol	& ICCdict		11020917						
ANR	11021029	Symbol	space		11020917						
ANR	11021030	Symbol	n		11020917						
ANR	11021031	Symbol	gs_note_error		11020917						
ANR	11021032	Symbol	tempref -> value		11020917						
ANR	11021033	Symbol	i_ctx_p		11020917						
ANR	11021034	Symbol	* n		11020917						
ANR	11021035	Symbol	imemory		11020917						
ANR	11021036	Symbol	tempref		11020917						
ANR	11021037	Function	iccdomain	5764:0:184207:185225							
ANR	11021038	FunctionDef	"iccdomain (i_ctx_t * i_ctx_p , ref * space , float * ptr)"		11021037	0					
ANR	11021039	CompoundStatement		5765:0:184271:185225	11021037	0					
ANR	11021040	IdentifierDeclStatement	"int components , i , code = 0 ;"	5766:4:184277:184304	11021037	0	True				
ANR	11021041	IdentifierDecl	components		11021037	0					
ANR	11021042	IdentifierDeclType	int		11021037	0					
ANR	11021043	Identifier	components		11021037	1					
ANR	11021044	IdentifierDecl	i		11021037	1					
ANR	11021045	IdentifierDeclType	int		11021037	0					
ANR	11021046	Identifier	i		11021037	1					
ANR	11021047	IdentifierDecl	code = 0		11021037	2					
ANR	11021048	IdentifierDeclType	int		11021037	0					
ANR	11021049	Identifier	code		11021037	1					
ANR	11021050	AssignmentExpression	code = 0		11021037	2		=			
ANR	11021051	Identifier	code		11021037	0					
ANR	11021052	PrimaryExpression	0		11021037	1					
ANR	11021053	IdentifierDeclStatement	"ref * tempref , ICCdict , valref ;"	5767:4:184310:184339	11021037	1	True				
ANR	11021054	IdentifierDecl	* tempref		11021037	0					
ANR	11021055	IdentifierDeclType	ref *		11021037	0					
ANR	11021056	Identifier	tempref		11021037	1					
ANR	11021057	IdentifierDecl	ICCdict		11021037	1					
ANR	11021058	IdentifierDeclType	ref		11021037	0					
ANR	11021059	Identifier	ICCdict		11021037	1					
ANR	11021060	IdentifierDecl	valref		11021037	2					
ANR	11021061	IdentifierDeclType	ref		11021037	0					
ANR	11021062	Identifier	valref		11021037	1					
ANR	11021063	ExpressionStatement	"code = array_get ( imemory , space , 1 , & ICCdict )"	5769:4:184346:184391	11021037	2	True				
ANR	11021064	AssignmentExpression	"code = array_get ( imemory , space , 1 , & ICCdict )"		11021037	0		=			
ANR	11021065	Identifier	code		11021037	0					
ANR	11021066	CallExpression	"array_get ( imemory , space , 1 , & ICCdict )"		11021037	1					
ANR	11021067	Callee	array_get		11021037	0					
ANR	11021068	Identifier	array_get		11021037	0					
ANR	11021069	ArgumentList	imemory		11021037	1					
ANR	11021070	Argument	imemory		11021037	0					
ANR	11021071	Identifier	imemory		11021037	0					
ANR	11021072	Argument	space		11021037	1					
ANR	11021073	Identifier	space		11021037	0					
ANR	11021074	Argument	1		11021037	2					
ANR	11021075	PrimaryExpression	1		11021037	0					
ANR	11021076	Argument	& ICCdict		11021037	3					
ANR	11021077	UnaryOperationExpression	& ICCdict		11021037	0					
ANR	11021078	UnaryOperator	&		11021037	0					
ANR	11021079	Identifier	ICCdict		11021037	1					
ANR	11021080	IfStatement	if ( code < 0 )		11021037	3					
ANR	11021081	Condition	code < 0	5770:8:184401:184408	11021037	0	True				
ANR	11021082	RelationalExpression	code < 0		11021037	0		<			
ANR	11021083	Identifier	code		11021037	0					
ANR	11021084	PrimaryExpression	0		11021037	1					
ANR	11021085	ReturnStatement	return code ;	5771:8:184419:184430	11021037	1	True				
ANR	11021086	Identifier	code		11021037	0					
ANR	11021087	ExpressionStatement	"code = dict_find_string ( & ICCdict , ""N"" , & tempref )"	5772:4:184436:184484	11021037	4	True				
ANR	11021088	AssignmentExpression	"code = dict_find_string ( & ICCdict , ""N"" , & tempref )"		11021037	0		=			
ANR	11021089	Identifier	code		11021037	0					
ANR	11021090	CallExpression	"dict_find_string ( & ICCdict , ""N"" , & tempref )"		11021037	1					
ANR	11021091	Callee	dict_find_string		11021037	0					
ANR	11021092	Identifier	dict_find_string		11021037	0					
ANR	11021093	ArgumentList	& ICCdict		11021037	1					
ANR	11021094	Argument	& ICCdict		11021037	0					
ANR	11021095	UnaryOperationExpression	& ICCdict		11021037	0					
ANR	11021096	UnaryOperator	&		11021037	0					
ANR	11021097	Identifier	ICCdict		11021037	1					
ANR	11021098	Argument	"""N"""		11021037	1					
ANR	11021099	PrimaryExpression	"""N"""		11021037	0					
ANR	11021100	Argument	& tempref		11021037	2					
ANR	11021101	UnaryOperationExpression	& tempref		11021037	0					
ANR	11021102	UnaryOperator	&		11021037	0					
ANR	11021103	Identifier	tempref		11021037	1					
ANR	11021104	IfStatement	if ( code < 0 )		11021037	5					
ANR	11021105	Condition	code < 0	5773:8:184494:184501	11021037	0	True				
ANR	11021106	RelationalExpression	code < 0		11021037	0		<			
ANR	11021107	Identifier	code		11021037	0					
ANR	11021108	PrimaryExpression	0		11021037	1					
ANR	11021109	ReturnStatement	return code ;	5774:8:184512:184523	11021037	1	True				
ANR	11021110	Identifier	code		11021037	0					
ANR	11021111	IfStatement	if ( code == 0 )		11021037	6					
ANR	11021112	Condition	code == 0	5775:8:184533:184541	11021037	0	True				
ANR	11021113	EqualityExpression	code == 0		11021037	0		==			
ANR	11021114	Identifier	code		11021037	0					
ANR	11021115	PrimaryExpression	0		11021037	1					
ANR	11021116	ReturnStatement	return gs_note_error ( gs_error_undefined ) ;	5776:8:184552:184592	11021037	1	True				
ANR	11021117	CallExpression	gs_note_error ( gs_error_undefined )		11021037	0					
ANR	11021118	Callee	gs_note_error		11021037	0					
ANR	11021119	Identifier	gs_note_error		11021037	0					
ANR	11021120	ArgumentList	gs_error_undefined		11021037	1					
ANR	11021121	Argument	gs_error_undefined		11021037	0					
ANR	11021122	Identifier	gs_error_undefined		11021037	0					
ANR	11021123	ExpressionStatement	components = tempref -> value . intval	5777:4:184598:184632	11021037	7	True				
ANR	11021124	AssignmentExpression	components = tempref -> value . intval		11021037	0		=			
ANR	11021125	Identifier	components		11021037	0					
ANR	11021126	MemberAccess	tempref -> value . intval		11021037	1					
ANR	11021127	PtrMemberAccess	tempref -> value		11021037	0					
ANR	11021128	Identifier	tempref		11021037	0					
ANR	11021129	Identifier	value		11021037	1					
ANR	11021130	Identifier	intval		11021037	1					
ANR	11021131	ExpressionStatement	"code = dict_find_string ( & ICCdict , ""Range"" , & tempref )"	5778:4:184638:184690	11021037	8	True				
ANR	11021132	AssignmentExpression	"code = dict_find_string ( & ICCdict , ""Range"" , & tempref )"		11021037	0		=			
ANR	11021133	Identifier	code		11021037	0					
ANR	11021134	CallExpression	"dict_find_string ( & ICCdict , ""Range"" , & tempref )"		11021037	1					
ANR	11021135	Callee	dict_find_string		11021037	0					
ANR	11021136	Identifier	dict_find_string		11021037	0					
ANR	11021137	ArgumentList	& ICCdict		11021037	1					
ANR	11021138	Argument	& ICCdict		11021037	0					
ANR	11021139	UnaryOperationExpression	& ICCdict		11021037	0					
ANR	11021140	UnaryOperator	&		11021037	0					
ANR	11021141	Identifier	ICCdict		11021037	1					
ANR	11021142	Argument	"""Range"""		11021037	1					
ANR	11021143	PrimaryExpression	"""Range"""		11021037	0					
ANR	11021144	Argument	& tempref		11021037	2					
ANR	11021145	UnaryOperationExpression	& tempref		11021037	0					
ANR	11021146	UnaryOperator	&		11021037	0					
ANR	11021147	Identifier	tempref		11021037	1					
ANR	11021148	IfStatement	"if ( code > 0 && ! r_has_type ( tempref , t_null ) )"		11021037	9					
ANR	11021149	Condition	"code > 0 && ! r_has_type ( tempref , t_null )"	5779:8:184700:184739	11021037	0	True				
ANR	11021150	AndExpression	"code > 0 && ! r_has_type ( tempref , t_null )"		11021037	0		&&			
ANR	11021151	RelationalExpression	code > 0		11021037	0		>			
ANR	11021152	Identifier	code		11021037	0					
ANR	11021153	PrimaryExpression	0		11021037	1					
ANR	11021154	UnaryOperationExpression	"! r_has_type ( tempref , t_null )"		11021037	1					
ANR	11021155	UnaryOperator	!		11021037	0					
ANR	11021156	CallExpression	"r_has_type ( tempref , t_null )"		11021037	1					
ANR	11021157	Callee	r_has_type		11021037	0					
ANR	11021158	Identifier	r_has_type		11021037	0					
ANR	11021159	ArgumentList	tempref		11021037	1					
ANR	11021160	Argument	tempref		11021037	0					
ANR	11021161	Identifier	tempref		11021037	0					
ANR	11021162	Argument	t_null		11021037	1					
ANR	11021163	Identifier	t_null		11021037	0					
ANR	11021164	CompoundStatement		15:50:470:470	11021037	1					
ANR	11021165	ForStatement	for ( i = 0 ; i < components * 2 ; i ++ )		11021037	0					
ANR	11021166	ForInit	i = 0 ;	5780:13:184757:184760	11021037	0	True				
ANR	11021167	AssignmentExpression	i = 0		11021037	0		=			
ANR	11021168	Identifier	i		11021037	0					
ANR	11021169	PrimaryExpression	0		11021037	1					
ANR	11021170	Condition	i < components * 2	5780:17:184761:184776	11021037	1	True				
ANR	11021171	RelationalExpression	i < components * 2		11021037	0		<			
ANR	11021172	Identifier	i		11021037	0					
ANR	11021173	MultiplicativeExpression	components * 2		11021037	1		*			
ANR	11021174	Identifier	components		11021037	0					
ANR	11021175	PrimaryExpression	2		11021037	1					
ANR	11021176	PostIncDecOperationExpression	i ++	5780:34:184778:184780	11021037	2	True				
ANR	11021177	Identifier	i		11021037	0					
ANR	11021178	IncDec	++		11021037	1					
ANR	11021179	CompoundStatement		16:39:511:511	11021037	3					
ANR	11021180	ExpressionStatement	"code = array_get ( imemory , tempref , i , & valref )"	5781:12:184797:184843	11021037	0	True				
ANR	11021181	AssignmentExpression	"code = array_get ( imemory , tempref , i , & valref )"		11021037	0		=			
ANR	11021182	Identifier	code		11021037	0					
ANR	11021183	CallExpression	"array_get ( imemory , tempref , i , & valref )"		11021037	1					
ANR	11021184	Callee	array_get		11021037	0					
ANR	11021185	Identifier	array_get		11021037	0					
ANR	11021186	ArgumentList	imemory		11021037	1					
ANR	11021187	Argument	imemory		11021037	0					
ANR	11021188	Identifier	imemory		11021037	0					
ANR	11021189	Argument	tempref		11021037	1					
ANR	11021190	Identifier	tempref		11021037	0					
ANR	11021191	Argument	i		11021037	2					
ANR	11021192	Identifier	i		11021037	0					
ANR	11021193	Argument	& valref		11021037	3					
ANR	11021194	UnaryOperationExpression	& valref		11021037	0					
ANR	11021195	UnaryOperator	&		11021037	0					
ANR	11021196	Identifier	valref		11021037	1					
ANR	11021197	IfStatement	if ( code < 0 )		11021037	1					
ANR	11021198	Condition	code < 0	5782:16:184861:184868	11021037	0	True				
ANR	11021199	RelationalExpression	code < 0		11021037	0		<			
ANR	11021200	Identifier	code		11021037	0					
ANR	11021201	PrimaryExpression	0		11021037	1					
ANR	11021202	ReturnStatement	return code ;	5783:16:184887:184898	11021037	1	True				
ANR	11021203	Identifier	code		11021037	0					
ANR	11021204	IfStatement	"if ( r_has_type ( & valref , t_integer ) )"		11021037	2					
ANR	11021205	Condition	"r_has_type ( & valref , t_integer )"	5784:16:184916:184945	11021037	0	True				
ANR	11021206	CallExpression	"r_has_type ( & valref , t_integer )"		11021037	0					
ANR	11021207	Callee	r_has_type		11021037	0					
ANR	11021208	Identifier	r_has_type		11021037	0					
ANR	11021209	ArgumentList	& valref		11021037	1					
ANR	11021210	Argument	& valref		11021037	0					
ANR	11021211	UnaryOperationExpression	& valref		11021037	0					
ANR	11021212	UnaryOperator	&		11021037	0					
ANR	11021213	Identifier	valref		11021037	1					
ANR	11021214	Argument	t_integer		11021037	1					
ANR	11021215	Identifier	t_integer		11021037	0					
ANR	11021216	ExpressionStatement	ptr [ i * 2 ] = ( float ) valref . value . intval	5785:16:184964:185003	11021037	1	True				
ANR	11021217	AssignmentExpression	ptr [ i * 2 ] = ( float ) valref . value . intval		11021037	0		=			
ANR	11021218	ArrayIndexing	ptr [ i * 2 ]		11021037	0					
ANR	11021219	Identifier	ptr		11021037	0					
ANR	11021220	MultiplicativeExpression	i * 2		11021037	1		*			
ANR	11021221	Identifier	i		11021037	0					
ANR	11021222	PrimaryExpression	2		11021037	1					
ANR	11021223	CastExpression	( float ) valref . value . intval		11021037	1					
ANR	11021224	CastTarget	float		11021037	0					
ANR	11021225	MemberAccess	valref . value . intval		11021037	1					
ANR	11021226	MemberAccess	valref . value		11021037	0					
ANR	11021227	Identifier	valref		11021037	0					
ANR	11021228	Identifier	value		11021037	1					
ANR	11021229	Identifier	intval		11021037	1					
ANR	11021230	ElseStatement	else		11021037	0					
ANR	11021231	ExpressionStatement	ptr [ i * 2 ] = valref . value . realval	5787:16:185038:185071	11021037	0	True				
ANR	11021232	AssignmentExpression	ptr [ i * 2 ] = valref . value . realval		11021037	0		=			
ANR	11021233	ArrayIndexing	ptr [ i * 2 ]		11021037	0					
ANR	11021234	Identifier	ptr		11021037	0					
ANR	11021235	MultiplicativeExpression	i * 2		11021037	1		*			
ANR	11021236	Identifier	i		11021037	0					
ANR	11021237	PrimaryExpression	2		11021037	1					
ANR	11021238	MemberAccess	valref . value . realval		11021037	1					
ANR	11021239	MemberAccess	valref . value		11021037	0					
ANR	11021240	Identifier	valref		11021037	0					
ANR	11021241	Identifier	value		11021037	1					
ANR	11021242	Identifier	realval		11021037	1					
ANR	11021243	ElseStatement	else		11021037	0					
ANR	11021244	CompoundStatement		25:11:822:822	11021037	0					
ANR	11021245	ForStatement	for ( i = 0 ; i < components ; i ++ )		11021037	0					
ANR	11021246	ForInit	i = 0 ;	5790:13:185109:185112	11021037	0	True				
ANR	11021247	AssignmentExpression	i = 0		11021037	0		=			
ANR	11021248	Identifier	i		11021037	0					
ANR	11021249	PrimaryExpression	0		11021037	1					
ANR	11021250	Condition	i < components	5790:17:185113:185124	11021037	1	True				
ANR	11021251	RelationalExpression	i < components		11021037	0		<			
ANR	11021252	Identifier	i		11021037	0					
ANR	11021253	Identifier	components		11021037	1					
ANR	11021254	PostIncDecOperationExpression	i ++	5790:30:185126:185128	11021037	2	True				
ANR	11021255	Identifier	i		11021037	0					
ANR	11021256	IncDec	++		11021037	1					
ANR	11021257	CompoundStatement		26:35:859:859	11021037	3					
ANR	11021258	ExpressionStatement	ptr [ i * 2 ] = 0	5791:12:185145:185159	11021037	0	True				
ANR	11021259	AssignmentExpression	ptr [ i * 2 ] = 0		11021037	0		=			
ANR	11021260	ArrayIndexing	ptr [ i * 2 ]		11021037	0					
ANR	11021261	Identifier	ptr		11021037	0					
ANR	11021262	MultiplicativeExpression	i * 2		11021037	1		*			
ANR	11021263	Identifier	i		11021037	0					
ANR	11021264	PrimaryExpression	2		11021037	1					
ANR	11021265	PrimaryExpression	0		11021037	1					
ANR	11021266	ExpressionStatement	ptr [ ( i * 2 ) + 1 ] = 1	5792:12:185173:185193	11021037	1	True				
ANR	11021267	AssignmentExpression	ptr [ ( i * 2 ) + 1 ] = 1		11021037	0		=			
ANR	11021268	ArrayIndexing	ptr [ ( i * 2 ) + 1 ]		11021037	0					
ANR	11021269	Identifier	ptr		11021037	0					
ANR	11021270	AdditiveExpression	( i * 2 ) + 1		11021037	1		+			
ANR	11021271	MultiplicativeExpression	i * 2		11021037	0		*			
ANR	11021272	Identifier	i		11021037	0					
ANR	11021273	PrimaryExpression	2		11021037	1					
ANR	11021274	PrimaryExpression	1		11021037	1					
ANR	11021275	PrimaryExpression	1		11021037	1					
ANR	11021276	ReturnStatement	return 0 ;	5795:4:185215:185223	11021037	10	True				
ANR	11021277	PrimaryExpression	0		11021037	0					
ANR	11021278	ReturnType	static int		11021037	1					
ANR	11021279	Identifier	iccdomain		11021037	2					
ANR	11021280	ParameterList	"i_ctx_t * i_ctx_p , ref * space , float * ptr"		11021037	3					
ANR	11021281	Parameter	i_ctx_t * i_ctx_p	5764:21:184228:184244	11021037	0	True				
ANR	11021282	ParameterType	i_ctx_t *		11021037	0					
ANR	11021283	Identifier	i_ctx_p		11021037	1					
ANR	11021284	Parameter	ref * space	5764:40:184247:184256	11021037	1	True				
ANR	11021285	ParameterType	ref *		11021037	0					
ANR	11021286	Identifier	space		11021037	1					
ANR	11021287	Parameter	float * ptr	5764:52:184259:184268	11021037	2	True				
ANR	11021288	ParameterType	float *		11021037	0					
ANR	11021289	Identifier	ptr		11021037	1					
ANR	11021290	CFGEntryNode	ENTRY		11021037		True				
ANR	11021291	CFGExitNode	EXIT		11021037		True				
ANR	11021292	Symbol	components		11021037						
ANR	11021293	Symbol	valref . value		11021037						
ANR	11021294	Symbol	code		11021037						
ANR	11021295	Symbol	ICCdict		11021037						
ANR	11021296	Symbol	gs_error_undefined		11021037						
ANR	11021297	Symbol	* tempref		11021037						
ANR	11021298	Symbol	& ICCdict		11021037						
ANR	11021299	Symbol	space		11021037						
ANR	11021300	Symbol	valref . value . realval		11021037						
ANR	11021301	Symbol	t_null		11021037						
ANR	11021302	Symbol	r_has_type		11021037						
ANR	11021303	Symbol	& valref		11021037						
ANR	11021304	Symbol	* ptr		11021037						
ANR	11021305	Symbol	imemory		11021037						
ANR	11021306	Symbol	tempref		11021037						
ANR	11021307	Symbol	tempref -> value . intval		11021037						
ANR	11021308	Symbol	dict_find_string		11021037						
ANR	11021309	Symbol	array_get		11021037						
ANR	11021310	Symbol	i		11021037						
ANR	11021311	Symbol	& tempref		11021037						
ANR	11021312	Symbol	ptr		11021037						
ANR	11021313	Symbol	gs_note_error		11021037						
ANR	11021314	Symbol	tempref -> value		11021037						
ANR	11021315	Symbol	* i		11021037						
ANR	11021316	Symbol	t_integer		11021037						
ANR	11021317	Symbol	valref . value . intval		11021037						
ANR	11021318	Symbol	i_ctx_p		11021037						
ANR	11021319	Symbol	valref		11021037						
ANR	11021320	Function	iccrange	5797:0:185227:186243							
ANR	11021321	FunctionDef	"iccrange (i_ctx_t * i_ctx_p , ref * space , float * ptr)"		11021320	0					
ANR	11021322	CompoundStatement		5798:0:185290:186243	11021320	0					
ANR	11021323	IdentifierDeclStatement	"int components , i , code = 0 ;"	5799:4:185296:185323	11021320	0	True				
ANR	11021324	IdentifierDecl	components		11021320	0					
ANR	11021325	IdentifierDeclType	int		11021320	0					
ANR	11021326	Identifier	components		11021320	1					
ANR	11021327	IdentifierDecl	i		11021320	1					
ANR	11021328	IdentifierDeclType	int		11021320	0					
ANR	11021329	Identifier	i		11021320	1					
ANR	11021330	IdentifierDecl	code = 0		11021320	2					
ANR	11021331	IdentifierDeclType	int		11021320	0					
ANR	11021332	Identifier	code		11021320	1					
ANR	11021333	AssignmentExpression	code = 0		11021320	2		=			
ANR	11021334	Identifier	code		11021320	0					
ANR	11021335	PrimaryExpression	0		11021320	1					
ANR	11021336	IdentifierDeclStatement	"ref * tempref , ICCdict , valref ;"	5800:4:185329:185358	11021320	1	True				
ANR	11021337	IdentifierDecl	* tempref		11021320	0					
ANR	11021338	IdentifierDeclType	ref *		11021320	0					
ANR	11021339	Identifier	tempref		11021320	1					
ANR	11021340	IdentifierDecl	ICCdict		11021320	1					
ANR	11021341	IdentifierDeclType	ref		11021320	0					
ANR	11021342	Identifier	ICCdict		11021320	1					
ANR	11021343	IdentifierDecl	valref		11021320	2					
ANR	11021344	IdentifierDeclType	ref		11021320	0					
ANR	11021345	Identifier	valref		11021320	1					
ANR	11021346	ExpressionStatement	"code = array_get ( imemory , space , 1 , & ICCdict )"	5802:4:185365:185410	11021320	2	True				
ANR	11021347	AssignmentExpression	"code = array_get ( imemory , space , 1 , & ICCdict )"		11021320	0		=			
ANR	11021348	Identifier	code		11021320	0					
ANR	11021349	CallExpression	"array_get ( imemory , space , 1 , & ICCdict )"		11021320	1					
ANR	11021350	Callee	array_get		11021320	0					
ANR	11021351	Identifier	array_get		11021320	0					
ANR	11021352	ArgumentList	imemory		11021320	1					
ANR	11021353	Argument	imemory		11021320	0					
ANR	11021354	Identifier	imemory		11021320	0					
ANR	11021355	Argument	space		11021320	1					
ANR	11021356	Identifier	space		11021320	0					
ANR	11021357	Argument	1		11021320	2					
ANR	11021358	PrimaryExpression	1		11021320	0					
ANR	11021359	Argument	& ICCdict		11021320	3					
ANR	11021360	UnaryOperationExpression	& ICCdict		11021320	0					
ANR	11021361	UnaryOperator	&		11021320	0					
ANR	11021362	Identifier	ICCdict		11021320	1					
ANR	11021363	IfStatement	if ( code < 0 )		11021320	3					
ANR	11021364	Condition	code < 0	5803:8:185420:185427	11021320	0	True				
ANR	11021365	RelationalExpression	code < 0		11021320	0		<			
ANR	11021366	Identifier	code		11021320	0					
ANR	11021367	PrimaryExpression	0		11021320	1					
ANR	11021368	ReturnStatement	return code ;	5804:8:185438:185449	11021320	1	True				
ANR	11021369	Identifier	code		11021320	0					
ANR	11021370	ExpressionStatement	"code = dict_find_string ( & ICCdict , ""N"" , & tempref )"	5805:4:185455:185503	11021320	4	True				
ANR	11021371	AssignmentExpression	"code = dict_find_string ( & ICCdict , ""N"" , & tempref )"		11021320	0		=			
ANR	11021372	Identifier	code		11021320	0					
ANR	11021373	CallExpression	"dict_find_string ( & ICCdict , ""N"" , & tempref )"		11021320	1					
ANR	11021374	Callee	dict_find_string		11021320	0					
ANR	11021375	Identifier	dict_find_string		11021320	0					
ANR	11021376	ArgumentList	& ICCdict		11021320	1					
ANR	11021377	Argument	& ICCdict		11021320	0					
ANR	11021378	UnaryOperationExpression	& ICCdict		11021320	0					
ANR	11021379	UnaryOperator	&		11021320	0					
ANR	11021380	Identifier	ICCdict		11021320	1					
ANR	11021381	Argument	"""N"""		11021320	1					
ANR	11021382	PrimaryExpression	"""N"""		11021320	0					
ANR	11021383	Argument	& tempref		11021320	2					
ANR	11021384	UnaryOperationExpression	& tempref		11021320	0					
ANR	11021385	UnaryOperator	&		11021320	0					
ANR	11021386	Identifier	tempref		11021320	1					
ANR	11021387	IfStatement	if ( code < 0 )		11021320	5					
ANR	11021388	Condition	code < 0	5806:8:185513:185520	11021320	0	True				
ANR	11021389	RelationalExpression	code < 0		11021320	0		<			
ANR	11021390	Identifier	code		11021320	0					
ANR	11021391	PrimaryExpression	0		11021320	1					
ANR	11021392	ReturnStatement	return code ;	5807:8:185531:185542	11021320	1	True				
ANR	11021393	Identifier	code		11021320	0					
ANR	11021394	IfStatement	if ( code == 0 )		11021320	6					
ANR	11021395	Condition	code == 0	5808:8:185552:185560	11021320	0	True				
ANR	11021396	EqualityExpression	code == 0		11021320	0		==			
ANR	11021397	Identifier	code		11021320	0					
ANR	11021398	PrimaryExpression	0		11021320	1					
ANR	11021399	ReturnStatement	return gs_note_error ( gs_error_undefined ) ;	5809:8:185571:185611	11021320	1	True				
ANR	11021400	CallExpression	gs_note_error ( gs_error_undefined )		11021320	0					
ANR	11021401	Callee	gs_note_error		11021320	0					
ANR	11021402	Identifier	gs_note_error		11021320	0					
ANR	11021403	ArgumentList	gs_error_undefined		11021320	1					
ANR	11021404	Argument	gs_error_undefined		11021320	0					
ANR	11021405	Identifier	gs_error_undefined		11021320	0					
ANR	11021406	ExpressionStatement	components = tempref -> value . intval	5810:4:185617:185651	11021320	7	True				
ANR	11021407	AssignmentExpression	components = tempref -> value . intval		11021320	0		=			
ANR	11021408	Identifier	components		11021320	0					
ANR	11021409	MemberAccess	tempref -> value . intval		11021320	1					
ANR	11021410	PtrMemberAccess	tempref -> value		11021320	0					
ANR	11021411	Identifier	tempref		11021320	0					
ANR	11021412	Identifier	value		11021320	1					
ANR	11021413	Identifier	intval		11021320	1					
ANR	11021414	ExpressionStatement	"code = dict_find_string ( & ICCdict , ""Range"" , & tempref )"	5811:4:185657:185709	11021320	8	True				
ANR	11021415	AssignmentExpression	"code = dict_find_string ( & ICCdict , ""Range"" , & tempref )"		11021320	0		=			
ANR	11021416	Identifier	code		11021320	0					
ANR	11021417	CallExpression	"dict_find_string ( & ICCdict , ""Range"" , & tempref )"		11021320	1					
ANR	11021418	Callee	dict_find_string		11021320	0					
ANR	11021419	Identifier	dict_find_string		11021320	0					
ANR	11021420	ArgumentList	& ICCdict		11021320	1					
ANR	11021421	Argument	& ICCdict		11021320	0					
ANR	11021422	UnaryOperationExpression	& ICCdict		11021320	0					
ANR	11021423	UnaryOperator	&		11021320	0					
ANR	11021424	Identifier	ICCdict		11021320	1					
ANR	11021425	Argument	"""Range"""		11021320	1					
ANR	11021426	PrimaryExpression	"""Range"""		11021320	0					
ANR	11021427	Argument	& tempref		11021320	2					
ANR	11021428	UnaryOperationExpression	& tempref		11021320	0					
ANR	11021429	UnaryOperator	&		11021320	0					
ANR	11021430	Identifier	tempref		11021320	1					
ANR	11021431	IfStatement	"if ( code > 0 && ! r_has_type ( tempref , t_null ) )"		11021320	9					
ANR	11021432	Condition	"code > 0 && ! r_has_type ( tempref , t_null )"	5812:8:185719:185758	11021320	0	True				
ANR	11021433	AndExpression	"code > 0 && ! r_has_type ( tempref , t_null )"		11021320	0		&&			
ANR	11021434	RelationalExpression	code > 0		11021320	0		>			
ANR	11021435	Identifier	code		11021320	0					
ANR	11021436	PrimaryExpression	0		11021320	1					
ANR	11021437	UnaryOperationExpression	"! r_has_type ( tempref , t_null )"		11021320	1					
ANR	11021438	UnaryOperator	!		11021320	0					
ANR	11021439	CallExpression	"r_has_type ( tempref , t_null )"		11021320	1					
ANR	11021440	Callee	r_has_type		11021320	0					
ANR	11021441	Identifier	r_has_type		11021320	0					
ANR	11021442	ArgumentList	tempref		11021320	1					
ANR	11021443	Argument	tempref		11021320	0					
ANR	11021444	Identifier	tempref		11021320	0					
ANR	11021445	Argument	t_null		11021320	1					
ANR	11021446	Identifier	t_null		11021320	0					
ANR	11021447	CompoundStatement		15:50:470:470	11021320	1					
ANR	11021448	ForStatement	for ( i = 0 ; i < components * 2 ; i ++ )		11021320	0					
ANR	11021449	ForInit	i = 0 ;	5813:13:185776:185779	11021320	0	True				
ANR	11021450	AssignmentExpression	i = 0		11021320	0		=			
ANR	11021451	Identifier	i		11021320	0					
ANR	11021452	PrimaryExpression	0		11021320	1					
ANR	11021453	Condition	i < components * 2	5813:17:185780:185795	11021320	1	True				
ANR	11021454	RelationalExpression	i < components * 2		11021320	0		<			
ANR	11021455	Identifier	i		11021320	0					
ANR	11021456	MultiplicativeExpression	components * 2		11021320	1		*			
ANR	11021457	Identifier	components		11021320	0					
ANR	11021458	PrimaryExpression	2		11021320	1					
ANR	11021459	PostIncDecOperationExpression	i ++	5813:34:185797:185799	11021320	2	True				
ANR	11021460	Identifier	i		11021320	0					
ANR	11021461	IncDec	++		11021320	1					
ANR	11021462	CompoundStatement		16:39:511:511	11021320	3					
ANR	11021463	ExpressionStatement	"code = array_get ( imemory , tempref , i , & valref )"	5814:12:185816:185862	11021320	0	True				
ANR	11021464	AssignmentExpression	"code = array_get ( imemory , tempref , i , & valref )"		11021320	0		=			
ANR	11021465	Identifier	code		11021320	0					
ANR	11021466	CallExpression	"array_get ( imemory , tempref , i , & valref )"		11021320	1					
ANR	11021467	Callee	array_get		11021320	0					
ANR	11021468	Identifier	array_get		11021320	0					
ANR	11021469	ArgumentList	imemory		11021320	1					
ANR	11021470	Argument	imemory		11021320	0					
ANR	11021471	Identifier	imemory		11021320	0					
ANR	11021472	Argument	tempref		11021320	1					
ANR	11021473	Identifier	tempref		11021320	0					
ANR	11021474	Argument	i		11021320	2					
ANR	11021475	Identifier	i		11021320	0					
ANR	11021476	Argument	& valref		11021320	3					
ANR	11021477	UnaryOperationExpression	& valref		11021320	0					
ANR	11021478	UnaryOperator	&		11021320	0					
ANR	11021479	Identifier	valref		11021320	1					
ANR	11021480	IfStatement	if ( code < 0 )		11021320	1					
ANR	11021481	Condition	code < 0	5815:16:185880:185887	11021320	0	True				
ANR	11021482	RelationalExpression	code < 0		11021320	0		<			
ANR	11021483	Identifier	code		11021320	0					
ANR	11021484	PrimaryExpression	0		11021320	1					
ANR	11021485	ReturnStatement	return code ;	5816:16:185906:185917	11021320	1	True				
ANR	11021486	Identifier	code		11021320	0					
ANR	11021487	IfStatement	"if ( r_has_type ( & valref , t_integer ) )"		11021320	2					
ANR	11021488	Condition	"r_has_type ( & valref , t_integer )"	5817:16:185935:185964	11021320	0	True				
ANR	11021489	CallExpression	"r_has_type ( & valref , t_integer )"		11021320	0					
ANR	11021490	Callee	r_has_type		11021320	0					
ANR	11021491	Identifier	r_has_type		11021320	0					
ANR	11021492	ArgumentList	& valref		11021320	1					
ANR	11021493	Argument	& valref		11021320	0					
ANR	11021494	UnaryOperationExpression	& valref		11021320	0					
ANR	11021495	UnaryOperator	&		11021320	0					
ANR	11021496	Identifier	valref		11021320	1					
ANR	11021497	Argument	t_integer		11021320	1					
ANR	11021498	Identifier	t_integer		11021320	0					
ANR	11021499	ExpressionStatement	ptr [ i ] = ( float ) valref . value . intval	5818:16:185983:186018	11021320	1	True				
ANR	11021500	AssignmentExpression	ptr [ i ] = ( float ) valref . value . intval		11021320	0		=			
ANR	11021501	ArrayIndexing	ptr [ i ]		11021320	0					
ANR	11021502	Identifier	ptr		11021320	0					
ANR	11021503	Identifier	i		11021320	1					
ANR	11021504	CastExpression	( float ) valref . value . intval		11021320	1					
ANR	11021505	CastTarget	float		11021320	0					
ANR	11021506	MemberAccess	valref . value . intval		11021320	1					
ANR	11021507	MemberAccess	valref . value		11021320	0					
ANR	11021508	Identifier	valref		11021320	0					
ANR	11021509	Identifier	value		11021320	1					
ANR	11021510	Identifier	intval		11021320	1					
ANR	11021511	ElseStatement	else		11021320	0					
ANR	11021512	ExpressionStatement	ptr [ i ] = ( float ) valref . value . realval	5820:16:186053:186089	11021320	0	True				
ANR	11021513	AssignmentExpression	ptr [ i ] = ( float ) valref . value . realval		11021320	0		=			
ANR	11021514	ArrayIndexing	ptr [ i ]		11021320	0					
ANR	11021515	Identifier	ptr		11021320	0					
ANR	11021516	Identifier	i		11021320	1					
ANR	11021517	CastExpression	( float ) valref . value . realval		11021320	1					
ANR	11021518	CastTarget	float		11021320	0					
ANR	11021519	MemberAccess	valref . value . realval		11021320	1					
ANR	11021520	MemberAccess	valref . value		11021320	0					
ANR	11021521	Identifier	valref		11021320	0					
ANR	11021522	Identifier	value		11021320	1					
ANR	11021523	Identifier	realval		11021320	1					
ANR	11021524	ElseStatement	else		11021320	0					
ANR	11021525	CompoundStatement		25:11:821:821	11021320	0					
ANR	11021526	ForStatement	for ( i = 0 ; i < components ; i ++ )		11021320	0					
ANR	11021527	ForInit	i = 0 ;	5823:13:186127:186130	11021320	0	True				
ANR	11021528	AssignmentExpression	i = 0		11021320	0		=			
ANR	11021529	Identifier	i		11021320	0					
ANR	11021530	PrimaryExpression	0		11021320	1					
ANR	11021531	Condition	i < components	5823:17:186131:186142	11021320	1	True				
ANR	11021532	RelationalExpression	i < components		11021320	0		<			
ANR	11021533	Identifier	i		11021320	0					
ANR	11021534	Identifier	components		11021320	1					
ANR	11021535	PostIncDecOperationExpression	i ++	5823:30:186144:186146	11021320	2	True				
ANR	11021536	Identifier	i		11021320	0					
ANR	11021537	IncDec	++		11021320	1					
ANR	11021538	CompoundStatement		26:35:858:858	11021320	3					
ANR	11021539	ExpressionStatement	ptr [ i * 2 ] = 0	5824:12:186163:186177	11021320	0	True				
ANR	11021540	AssignmentExpression	ptr [ i * 2 ] = 0		11021320	0		=			
ANR	11021541	ArrayIndexing	ptr [ i * 2 ]		11021320	0					
ANR	11021542	Identifier	ptr		11021320	0					
ANR	11021543	MultiplicativeExpression	i * 2		11021320	1		*			
ANR	11021544	Identifier	i		11021320	0					
ANR	11021545	PrimaryExpression	2		11021320	1					
ANR	11021546	PrimaryExpression	0		11021320	1					
ANR	11021547	ExpressionStatement	ptr [ ( i * 2 ) + 1 ] = 1	5825:12:186191:186211	11021320	1	True				
ANR	11021548	AssignmentExpression	ptr [ ( i * 2 ) + 1 ] = 1		11021320	0		=			
ANR	11021549	ArrayIndexing	ptr [ ( i * 2 ) + 1 ]		11021320	0					
ANR	11021550	Identifier	ptr		11021320	0					
ANR	11021551	AdditiveExpression	( i * 2 ) + 1		11021320	1		+			
ANR	11021552	MultiplicativeExpression	i * 2		11021320	0		*			
ANR	11021553	Identifier	i		11021320	0					
ANR	11021554	PrimaryExpression	2		11021320	1					
ANR	11021555	PrimaryExpression	1		11021320	1					
ANR	11021556	PrimaryExpression	1		11021320	1					
ANR	11021557	ReturnStatement	return 0 ;	5828:4:186233:186241	11021320	10	True				
ANR	11021558	PrimaryExpression	0		11021320	0					
ANR	11021559	ReturnType	static int		11021320	1					
ANR	11021560	Identifier	iccrange		11021320	2					
ANR	11021561	ParameterList	"i_ctx_t * i_ctx_p , ref * space , float * ptr"		11021320	3					
ANR	11021562	Parameter	i_ctx_t * i_ctx_p	5797:20:185247:185263	11021320	0	True				
ANR	11021563	ParameterType	i_ctx_t *		11021320	0					
ANR	11021564	Identifier	i_ctx_p		11021320	1					
ANR	11021565	Parameter	ref * space	5797:39:185266:185275	11021320	1	True				
ANR	11021566	ParameterType	ref *		11021320	0					
ANR	11021567	Identifier	space		11021320	1					
ANR	11021568	Parameter	float * ptr	5797:51:185278:185287	11021320	2	True				
ANR	11021569	ParameterType	float *		11021320	0					
ANR	11021570	Identifier	ptr		11021320	1					
ANR	11021571	CFGEntryNode	ENTRY		11021320		True				
ANR	11021572	CFGExitNode	EXIT		11021320		True				
ANR	11021573	Symbol	components		11021320						
ANR	11021574	Symbol	valref . value		11021320						
ANR	11021575	Symbol	code		11021320						
ANR	11021576	Symbol	ICCdict		11021320						
ANR	11021577	Symbol	gs_error_undefined		11021320						
ANR	11021578	Symbol	* tempref		11021320						
ANR	11021579	Symbol	& ICCdict		11021320						
ANR	11021580	Symbol	space		11021320						
ANR	11021581	Symbol	valref . value . realval		11021320						
ANR	11021582	Symbol	r_has_type		11021320						
ANR	11021583	Symbol	t_null		11021320						
ANR	11021584	Symbol	& valref		11021320						
ANR	11021585	Symbol	* ptr		11021320						
ANR	11021586	Symbol	imemory		11021320						
ANR	11021587	Symbol	tempref		11021320						
ANR	11021588	Symbol	tempref -> value . intval		11021320						
ANR	11021589	Symbol	dict_find_string		11021320						
ANR	11021590	Symbol	array_get		11021320						
ANR	11021591	Symbol	i		11021320						
ANR	11021592	Symbol	& tempref		11021320						
ANR	11021593	Symbol	ptr		11021320						
ANR	11021594	Symbol	gs_note_error		11021320						
ANR	11021595	Symbol	tempref -> value		11021320						
ANR	11021596	Symbol	* i		11021320						
ANR	11021597	Symbol	t_integer		11021320						
ANR	11021598	Symbol	valref . value . intval		11021320						
ANR	11021599	Symbol	i_ctx_p		11021320						
ANR	11021600	Symbol	valref		11021320						
ANR	11021601	Function	iccbasecolor	5830:0:186245:186398							
ANR	11021602	FunctionDef	"iccbasecolor (i_ctx_t * i_ctx_p , ref * space , int base , int * stage , int * cont , int * stack_depth)"		11021601	0					
ANR	11021603	CompoundStatement		5831:0:186351:186398	11021601	0					
ANR	11021604	ExpressionStatement	* stage = 0	5832:4:186357:186367	11021601	0	True				
ANR	11021605	AssignmentExpression	* stage = 0		11021601	0		=			
ANR	11021606	UnaryOperationExpression	* stage		11021601	0					
ANR	11021607	UnaryOperator	*		11021601	0					
ANR	11021608	Identifier	stage		11021601	1					
ANR	11021609	PrimaryExpression	0		11021601	1					
ANR	11021610	ExpressionStatement	* cont = 1	5833:4:186373:186382	11021601	1	True				
ANR	11021611	AssignmentExpression	* cont = 1		11021601	0		=			
ANR	11021612	UnaryOperationExpression	* cont		11021601	0					
ANR	11021613	UnaryOperator	*		11021601	0					
ANR	11021614	Identifier	cont		11021601	1					
ANR	11021615	PrimaryExpression	1		11021601	1					
ANR	11021616	ReturnStatement	return 0 ;	5834:4:186388:186396	11021601	2	True				
ANR	11021617	PrimaryExpression	0		11021601	0					
ANR	11021618	ReturnType	static int		11021601	1					
ANR	11021619	Identifier	iccbasecolor		11021601	2					
ANR	11021620	ParameterList	"i_ctx_t * i_ctx_p , ref * space , int base , int * stage , int * cont , int * stack_depth"		11021601	3					
ANR	11021621	Parameter	i_ctx_t * i_ctx_p	5830:24:186269:186285	11021601	0	True				
ANR	11021622	ParameterType	i_ctx_t *		11021601	0					
ANR	11021623	Identifier	i_ctx_p		11021601	1					
ANR	11021624	Parameter	ref * space	5830:43:186288:186297	11021601	1	True				
ANR	11021625	ParameterType	ref *		11021601	0					
ANR	11021626	Identifier	space		11021601	1					
ANR	11021627	Parameter	int base	5830:55:186300:186307	11021601	2	True				
ANR	11021628	ParameterType	int		11021601	0					
ANR	11021629	Identifier	base		11021601	1					
ANR	11021630	Parameter	int * stage	5830:65:186310:186319	11021601	3	True				
ANR	11021631	ParameterType	int *		11021601	0					
ANR	11021632	Identifier	stage		11021601	1					
ANR	11021633	Parameter	int * cont	5830:77:186322:186330	11021601	4	True				
ANR	11021634	ParameterType	int *		11021601	0					
ANR	11021635	Identifier	cont		11021601	1					
ANR	11021636	Parameter	int * stack_depth	5830:88:186333:186348	11021601	5	True				
ANR	11021637	ParameterType	int *		11021601	0					
ANR	11021638	Identifier	stack_depth		11021601	1					
ANR	11021639	CFGEntryNode	ENTRY		11021601		True				
ANR	11021640	CFGExitNode	EXIT		11021601		True				
ANR	11021641	Symbol	stack_depth		11021601						
ANR	11021642	Symbol	* stage		11021601						
ANR	11021643	Symbol	stage		11021601						
ANR	11021644	Symbol	* cont		11021601						
ANR	11021645	Symbol	i_ctx_p		11021601						
ANR	11021646	Symbol	cont		11021601						
ANR	11021647	Symbol	space		11021601						
ANR	11021648	Symbol	base		11021601						
ANR	11021649	Function	iccvalidate	5836:0:186400:186499							
ANR	11021650	FunctionDef	"iccvalidate (i_ctx_t * i_ctx_p , ref * space , float * values , int num_comps)"		11021649	0					
ANR	11021651	CompoundStatement		5837:0:186483:186499	11021649	0					
ANR	11021652	ReturnStatement	return 0 ;	5838:4:186489:186497	11021649	0	True				
ANR	11021653	PrimaryExpression	0		11021649	0					
ANR	11021654	ReturnType	static int		11021649	1					
ANR	11021655	Identifier	iccvalidate		11021649	2					
ANR	11021656	ParameterList	"i_ctx_t * i_ctx_p , ref * space , float * values , int num_comps"		11021649	3					
ANR	11021657	Parameter	i_ctx_t * i_ctx_p	5836:23:186423:186438	11021649	0	True				
ANR	11021658	ParameterType	i_ctx_t *		11021649	0					
ANR	11021659	Identifier	i_ctx_p		11021649	1					
ANR	11021660	Parameter	ref * space	5836:41:186441:186450	11021649	1	True				
ANR	11021661	ParameterType	ref *		11021649	0					
ANR	11021662	Identifier	space		11021649	1					
ANR	11021663	Parameter	float * values	5836:53:186453:186465	11021649	2	True				
ANR	11021664	ParameterType	float *		11021649	0					
ANR	11021665	Identifier	values		11021649	1					
ANR	11021666	Parameter	int num_comps	5836:68:186468:186480	11021649	3	True				
ANR	11021667	ParameterType	int		11021649	0					
ANR	11021668	Identifier	num_comps		11021649	1					
ANR	11021669	CFGEntryNode	ENTRY		11021649		True				
ANR	11021670	CFGExitNode	EXIT		11021649		True				
ANR	11021671	Symbol	i_ctx_p		11021649						
ANR	11021672	Symbol	values		11021649						
ANR	11021673	Symbol	num_comps		11021649						
ANR	11021674	Symbol	space		11021649						
ANR	11021675	Function	dummydomain	5841:0:186502:186584							
ANR	11021676	FunctionDef	"dummydomain (i_ctx_t * i_ctx_p , ref * space , float * ptr)"		11021675	0					
ANR	11021677	CompoundStatement		5842:0:186568:186584	11021675	0					
ANR	11021678	ReturnStatement	return 0 ;	5843:4:186574:186582	11021675	0	True				
ANR	11021679	PrimaryExpression	0		11021675	0					
ANR	11021680	ReturnType	static int		11021675	1					
ANR	11021681	Identifier	dummydomain		11021675	2					
ANR	11021682	ParameterList	"i_ctx_t * i_ctx_p , ref * space , float * ptr"		11021675	3					
ANR	11021683	Parameter	i_ctx_t * i_ctx_p	5841:23:186525:186541	11021675	0	True				
ANR	11021684	ParameterType	i_ctx_t *		11021675	0					
ANR	11021685	Identifier	i_ctx_p		11021675	1					
ANR	11021686	Parameter	ref * space	5841:42:186544:186553	11021675	1	True				
ANR	11021687	ParameterType	ref *		11021675	0					
ANR	11021688	Identifier	space		11021675	1					
ANR	11021689	Parameter	float * ptr	5841:54:186556:186565	11021675	2	True				
ANR	11021690	ParameterType	float *		11021675	0					
ANR	11021691	Identifier	ptr		11021675	1					
ANR	11021692	CFGEntryNode	ENTRY		11021675		True				
ANR	11021693	CFGExitNode	EXIT		11021675		True				
ANR	11021694	Symbol	i_ctx_p		11021675						
ANR	11021695	Symbol	space		11021675						
ANR	11021696	Symbol	ptr		11021675						
ANR	11021697	Function	dummyrange	5845:0:186586:186667							
ANR	11021698	FunctionDef	"dummyrange (i_ctx_t * i_ctx_p , ref * space , float * ptr)"		11021697	0					
ANR	11021699	CompoundStatement		5846:0:186651:186667	11021697	0					
ANR	11021700	ReturnStatement	return 0 ;	5847:4:186657:186665	11021697	0	True				
ANR	11021701	PrimaryExpression	0		11021697	0					
ANR	11021702	ReturnType	static int		11021697	1					
ANR	11021703	Identifier	dummyrange		11021697	2					
ANR	11021704	ParameterList	"i_ctx_t * i_ctx_p , ref * space , float * ptr"		11021697	3					
ANR	11021705	Parameter	i_ctx_t * i_ctx_p	5845:22:186608:186624	11021697	0	True				
ANR	11021706	ParameterType	i_ctx_t *		11021697	0					
ANR	11021707	Identifier	i_ctx_p		11021697	1					
ANR	11021708	Parameter	ref * space	5845:41:186627:186636	11021697	1	True				
ANR	11021709	ParameterType	ref *		11021697	0					
ANR	11021710	Identifier	space		11021697	1					
ANR	11021711	Parameter	float * ptr	5845:53:186639:186648	11021697	2	True				
ANR	11021712	ParameterType	float *		11021697	0					
ANR	11021713	Identifier	ptr		11021697	1					
ANR	11021714	CFGEntryNode	ENTRY		11021697		True				
ANR	11021715	CFGExitNode	EXIT		11021697		True				
ANR	11021716	Symbol	i_ctx_p		11021697						
ANR	11021717	Symbol	space		11021697						
ANR	11021718	Symbol	ptr		11021697						
ANR	11021719	Function	onecomponent	5849:0:186669:186760							
ANR	11021720	FunctionDef	"onecomponent (i_ctx_t * i_ctx_p , ref * space , int * n)"		11021719	0					
ANR	11021721	CompoundStatement		5850:0:186732:186760	11021719	0					
ANR	11021722	ExpressionStatement	* n = 1	5851:4:186738:186744	11021719	0	True				
ANR	11021723	AssignmentExpression	* n = 1		11021719	0		=			
ANR	11021724	UnaryOperationExpression	* n		11021719	0					
ANR	11021725	UnaryOperator	*		11021719	0					
ANR	11021726	Identifier	n		11021719	1					
ANR	11021727	PrimaryExpression	1		11021719	1					
ANR	11021728	ReturnStatement	return 0 ;	5852:4:186750:186758	11021719	1	True				
ANR	11021729	PrimaryExpression	0		11021719	0					
ANR	11021730	ReturnType	static int		11021719	1					
ANR	11021731	Identifier	onecomponent		11021719	2					
ANR	11021732	ParameterList	"i_ctx_t * i_ctx_p , ref * space , int * n"		11021719	3					
ANR	11021733	Parameter	i_ctx_t * i_ctx_p	5849:24:186693:186709	11021719	0	True				
ANR	11021734	ParameterType	i_ctx_t *		11021719	0					
ANR	11021735	Identifier	i_ctx_p		11021719	1					
ANR	11021736	Parameter	ref * space	5849:43:186712:186721	11021719	1	True				
ANR	11021737	ParameterType	ref *		11021719	0					
ANR	11021738	Identifier	space		11021719	1					
ANR	11021739	Parameter	int * n	5849:55:186724:186729	11021719	2	True				
ANR	11021740	ParameterType	int *		11021719	0					
ANR	11021741	Identifier	n		11021719	1					
ANR	11021742	CFGEntryNode	ENTRY		11021719		True				
ANR	11021743	CFGExitNode	EXIT		11021719		True				
ANR	11021744	Symbol	i_ctx_p		11021719						
ANR	11021745	Symbol	* n		11021719						
ANR	11021746	Symbol	space		11021719						
ANR	11021747	Symbol	n		11021719						
ANR	11021748	Function	threecomponent	5854:0:186762:186855							
ANR	11021749	FunctionDef	"threecomponent (i_ctx_t * i_ctx_p , ref * space , int * n)"		11021748	0					
ANR	11021750	CompoundStatement		5855:0:186827:186855	11021748	0					
ANR	11021751	ExpressionStatement	* n = 3	5856:4:186833:186839	11021748	0	True				
ANR	11021752	AssignmentExpression	* n = 3		11021748	0		=			
ANR	11021753	UnaryOperationExpression	* n		11021748	0					
ANR	11021754	UnaryOperator	*		11021748	0					
ANR	11021755	Identifier	n		11021748	1					
ANR	11021756	PrimaryExpression	3		11021748	1					
ANR	11021757	ReturnStatement	return 0 ;	5857:4:186845:186853	11021748	1	True				
ANR	11021758	PrimaryExpression	0		11021748	0					
ANR	11021759	ReturnType	static int		11021748	1					
ANR	11021760	Identifier	threecomponent		11021748	2					
ANR	11021761	ParameterList	"i_ctx_t * i_ctx_p , ref * space , int * n"		11021748	3					
ANR	11021762	Parameter	i_ctx_t * i_ctx_p	5854:26:186788:186804	11021748	0	True				
ANR	11021763	ParameterType	i_ctx_t *		11021748	0					
ANR	11021764	Identifier	i_ctx_p		11021748	1					
ANR	11021765	Parameter	ref * space	5854:45:186807:186816	11021748	1	True				
ANR	11021766	ParameterType	ref *		11021748	0					
ANR	11021767	Identifier	space		11021748	1					
ANR	11021768	Parameter	int * n	5854:57:186819:186824	11021748	2	True				
ANR	11021769	ParameterType	int *		11021748	0					
ANR	11021770	Identifier	n		11021748	1					
ANR	11021771	CFGEntryNode	ENTRY		11021748		True				
ANR	11021772	CFGExitNode	EXIT		11021748		True				
ANR	11021773	Symbol	i_ctx_p		11021748						
ANR	11021774	Symbol	* n		11021748						
ANR	11021775	Symbol	space		11021748						
ANR	11021776	Symbol	n		11021748						
ANR	11021777	Function	fourcomponent	5859:0:186857:186949							
ANR	11021778	FunctionDef	"fourcomponent (i_ctx_t * i_ctx_p , ref * space , int * n)"		11021777	0					
ANR	11021779	CompoundStatement		5860:0:186921:186949	11021777	0					
ANR	11021780	ExpressionStatement	* n = 4	5861:4:186927:186933	11021777	0	True				
ANR	11021781	AssignmentExpression	* n = 4		11021777	0		=			
ANR	11021782	UnaryOperationExpression	* n		11021777	0					
ANR	11021783	UnaryOperator	*		11021777	0					
ANR	11021784	Identifier	n		11021777	1					
ANR	11021785	PrimaryExpression	4		11021777	1					
ANR	11021786	ReturnStatement	return 0 ;	5862:4:186939:186947	11021777	1	True				
ANR	11021787	PrimaryExpression	0		11021777	0					
ANR	11021788	ReturnType	static int		11021777	1					
ANR	11021789	Identifier	fourcomponent		11021777	2					
ANR	11021790	ParameterList	"i_ctx_t * i_ctx_p , ref * space , int * n"		11021777	3					
ANR	11021791	Parameter	i_ctx_t * i_ctx_p	5859:25:186882:186898	11021777	0	True				
ANR	11021792	ParameterType	i_ctx_t *		11021777	0					
ANR	11021793	Identifier	i_ctx_p		11021777	1					
ANR	11021794	Parameter	ref * space	5859:44:186901:186910	11021777	1	True				
ANR	11021795	ParameterType	ref *		11021777	0					
ANR	11021796	Identifier	space		11021777	1					
ANR	11021797	Parameter	int * n	5859:56:186913:186918	11021777	2	True				
ANR	11021798	ParameterType	int *		11021777	0					
ANR	11021799	Identifier	n		11021777	1					
ANR	11021800	CFGEntryNode	ENTRY		11021777		True				
ANR	11021801	CFGExitNode	EXIT		11021777		True				
ANR	11021802	Symbol	i_ctx_p		11021777						
ANR	11021803	Symbol	* n		11021777						
ANR	11021804	Symbol	space		11021777						
ANR	11021805	Symbol	n		11021777						
ANR	11021806	Function	truecompareproc	5864:0:186951:187040							
ANR	11021807	FunctionDef	"truecompareproc (i_ctx_t * i_ctx_p , ref * space , ref * testspace)"		11021806	0					
ANR	11021808	CompoundStatement		5865:0:187024:187040	11021806	0					
ANR	11021809	ReturnStatement	return 1 ;	5866:4:187030:187038	11021806	0	True				
ANR	11021810	PrimaryExpression	1		11021806	0					
ANR	11021811	ReturnType	static int		11021806	1					
ANR	11021812	Identifier	truecompareproc		11021806	2					
ANR	11021813	ParameterList	"i_ctx_t * i_ctx_p , ref * space , ref * testspace"		11021806	3					
ANR	11021814	Parameter	i_ctx_t * i_ctx_p	5864:27:186978:186993	11021806	0	True				
ANR	11021815	ParameterType	i_ctx_t *		11021806	0					
ANR	11021816	Identifier	i_ctx_p		11021806	1					
ANR	11021817	Parameter	ref * space	5864:45:186996:187005	11021806	1	True				
ANR	11021818	ParameterType	ref *		11021806	0					
ANR	11021819	Identifier	space		11021806	1					
ANR	11021820	Parameter	ref * testspace	5864:57:187008:187021	11021806	2	True				
ANR	11021821	ParameterType	ref *		11021806	0					
ANR	11021822	Identifier	testspace		11021806	1					
ANR	11021823	CFGEntryNode	ENTRY		11021806		True				
ANR	11021824	CFGExitNode	EXIT		11021806		True				
ANR	11021825	Symbol	testspace		11021806						
ANR	11021826	Symbol	i_ctx_p		11021806						
ANR	11021827	Symbol	space		11021806						
ANR	11021828	Function	falsecompareproc	5868:0:187042:187132							
ANR	11021829	FunctionDef	"falsecompareproc (i_ctx_t * i_ctx_p , ref * space , ref * testspace)"		11021828	0					
ANR	11021830	CompoundStatement		5869:0:187116:187132	11021828	0					
ANR	11021831	ReturnStatement	return 0 ;	5870:4:187122:187130	11021828	0	True				
ANR	11021832	PrimaryExpression	0		11021828	0					
ANR	11021833	ReturnType	static int		11021828	1					
ANR	11021834	Identifier	falsecompareproc		11021828	2					
ANR	11021835	ParameterList	"i_ctx_t * i_ctx_p , ref * space , ref * testspace"		11021828	3					
ANR	11021836	Parameter	i_ctx_t * i_ctx_p	5868:28:187070:187085	11021828	0	True				
ANR	11021837	ParameterType	i_ctx_t *		11021828	0					
ANR	11021838	Identifier	i_ctx_p		11021828	1					
ANR	11021839	Parameter	ref * space	5868:46:187088:187097	11021828	1	True				
ANR	11021840	ParameterType	ref *		11021828	0					
ANR	11021841	Identifier	space		11021828	1					
ANR	11021842	Parameter	ref * testspace	5868:58:187100:187113	11021828	2	True				
ANR	11021843	ParameterType	ref *		11021828	0					
ANR	11021844	Identifier	testspace		11021828	1					
ANR	11021845	CFGEntryNode	ENTRY		11021828		True				
ANR	11021846	CFGExitNode	EXIT		11021828		True				
ANR	11021847	Symbol	testspace		11021828						
ANR	11021848	Symbol	i_ctx_p		11021828						
ANR	11021849	Symbol	space		11021828						
ANR	11021850	DeclStmt									
ANR	11021851	Decl							PS_colour_space_t	PS_colour_space_t [ ]	colorProcs
ANR	11021852	Function	get_space_object	5911:0:190051:191018							
ANR	11021853	FunctionDef	"get_space_object (i_ctx_t * i_ctx_p , ref * arr , PS_colour_space_t * * obj)"		11021852	0					
ANR	11021854	CompoundStatement		5912:0:190125:191018	11021852	0					
ANR	11021855	IdentifierDeclStatement	"ref spacename , nref ;"	5913:4:190131:190150	11021852	0	True				
ANR	11021856	IdentifierDecl	spacename		11021852	0					
ANR	11021857	IdentifierDeclType	ref		11021852	0					
ANR	11021858	Identifier	spacename		11021852	1					
ANR	11021859	IdentifierDecl	nref		11021852	1					
ANR	11021860	IdentifierDeclType	ref		11021852	0					
ANR	11021861	Identifier	nref		11021852	1					
ANR	11021862	IdentifierDeclStatement	"int i , nprocs = sizeof ( colorProcs ) / sizeof ( PS_colour_space_t ) , code ;"	5914:4:190156:190224	11021852	1	True				
ANR	11021863	IdentifierDecl	i		11021852	0					
ANR	11021864	IdentifierDeclType	int		11021852	0					
ANR	11021865	Identifier	i		11021852	1					
ANR	11021866	IdentifierDecl	nprocs = sizeof ( colorProcs ) / sizeof ( PS_colour_space_t )		11021852	1					
ANR	11021867	IdentifierDeclType	int		11021852	0					
ANR	11021868	Identifier	nprocs		11021852	1					
ANR	11021869	AssignmentExpression	nprocs = sizeof ( colorProcs ) / sizeof ( PS_colour_space_t )		11021852	2		=			
ANR	11021870	Identifier	nprocs		11021852	0					
ANR	11021871	MultiplicativeExpression	sizeof ( colorProcs ) / sizeof ( PS_colour_space_t )		11021852	1		/			
ANR	11021872	SizeofExpression	sizeof ( colorProcs )		11021852	0					
ANR	11021873	Sizeof	sizeof		11021852	0					
ANR	11021874	SizeofOperand	colorProcs		11021852	1					
ANR	11021875	SizeofExpression	sizeof ( PS_colour_space_t )		11021852	1					
ANR	11021876	Sizeof	sizeof		11021852	0					
ANR	11021877	SizeofOperand	PS_colour_space_t		11021852	1					
ANR	11021878	IdentifierDecl	code		11021852	2					
ANR	11021879	IdentifierDeclType	int		11021852	0					
ANR	11021880	Identifier	code		11021852	1					
ANR	11021881	IfStatement	if ( r_is_array ( arr ) )		11021852	2					
ANR	11021882	Condition	r_is_array ( arr )	5917:8:190309:190323	11021852	0	True				
ANR	11021883	CallExpression	r_is_array ( arr )		11021852	0					
ANR	11021884	Callee	r_is_array		11021852	0					
ANR	11021885	Identifier	r_is_array		11021852	0					
ANR	11021886	ArgumentList	arr		11021852	1					
ANR	11021887	Argument	arr		11021852	0					
ANR	11021888	Identifier	arr		11021852	0					
ANR	11021889	CompoundStatement		6:25:200:200	11021852	1					
ANR	11021890	ExpressionStatement	"code = array_get ( imemory , arr , 0 , & spacename )"	5918:8:190336:190381	11021852	0	True				
ANR	11021891	AssignmentExpression	"code = array_get ( imemory , arr , 0 , & spacename )"		11021852	0		=			
ANR	11021892	Identifier	code		11021852	0					
ANR	11021893	CallExpression	"array_get ( imemory , arr , 0 , & spacename )"		11021852	1					
ANR	11021894	Callee	array_get		11021852	0					
ANR	11021895	Identifier	array_get		11021852	0					
ANR	11021896	ArgumentList	imemory		11021852	1					
ANR	11021897	Argument	imemory		11021852	0					
ANR	11021898	Identifier	imemory		11021852	0					
ANR	11021899	Argument	arr		11021852	1					
ANR	11021900	Identifier	arr		11021852	0					
ANR	11021901	Argument	0		11021852	2					
ANR	11021902	PrimaryExpression	0		11021852	0					
ANR	11021903	Argument	& spacename		11021852	3					
ANR	11021904	UnaryOperationExpression	& spacename		11021852	0					
ANR	11021905	UnaryOperator	&		11021852	0					
ANR	11021906	Identifier	spacename		11021852	1					
ANR	11021907	IfStatement	if ( code < 0 )		11021852	1					
ANR	11021908	Condition	code < 0	5919:12:190395:190402	11021852	0	True				
ANR	11021909	RelationalExpression	code < 0		11021852	0		<			
ANR	11021910	Identifier	code		11021852	0					
ANR	11021911	PrimaryExpression	0		11021852	1					
ANR	11021912	ReturnStatement	return code ;	5920:12:190417:190428	11021852	1	True				
ANR	11021913	Identifier	code		11021852	0					
ANR	11021914	ElseStatement	else		11021852	0					
ANR	11021915	ExpressionStatement	"ref_assign ( & spacename , arr )"	5923:8:190453:190480	11021852	0	True				
ANR	11021916	CallExpression	"ref_assign ( & spacename , arr )"		11021852	0					
ANR	11021917	Callee	ref_assign		11021852	0					
ANR	11021918	Identifier	ref_assign		11021852	0					
ANR	11021919	ArgumentList	& spacename		11021852	1					
ANR	11021920	Argument	& spacename		11021852	0					
ANR	11021921	UnaryOperationExpression	& spacename		11021852	0					
ANR	11021922	UnaryOperator	&		11021852	0					
ANR	11021923	Identifier	spacename		11021852	1					
ANR	11021924	Argument	arr		11021852	1					
ANR	11021925	Identifier	arr		11021852	0					
ANR	11021926	IfStatement	"if ( ! r_has_type ( & spacename , t_name ) )"		11021852	3					
ANR	11021927	Condition	"! r_has_type ( & spacename , t_name )"	5926:8:190532:190562	11021852	0	True				
ANR	11021928	UnaryOperationExpression	"! r_has_type ( & spacename , t_name )"		11021852	0					
ANR	11021929	UnaryOperator	!		11021852	0					
ANR	11021930	CallExpression	"r_has_type ( & spacename , t_name )"		11021852	1					
ANR	11021931	Callee	r_has_type		11021852	0					
ANR	11021932	Identifier	r_has_type		11021852	0					
ANR	11021933	ArgumentList	& spacename		11021852	1					
ANR	11021934	Argument	& spacename		11021852	0					
ANR	11021935	UnaryOperationExpression	& spacename		11021852	0					
ANR	11021936	UnaryOperator	&		11021852	0					
ANR	11021937	Identifier	spacename		11021852	1					
ANR	11021938	Argument	t_name		11021852	1					
ANR	11021939	Identifier	t_name		11021852	0					
ANR	11021940	ExpressionStatement	return_error ( gs_error_typecheck )	5927:8:190573:190605	11021852	1	True				
ANR	11021941	CallExpression	return_error ( gs_error_typecheck )		11021852	0					
ANR	11021942	Callee	return_error		11021852	0					
ANR	11021943	Identifier	return_error		11021852	0					
ANR	11021944	ArgumentList	gs_error_typecheck		11021852	1					
ANR	11021945	Argument	gs_error_typecheck		11021852	0					
ANR	11021946	Identifier	gs_error_typecheck		11021852	0					
ANR	11021947	ForStatement	for ( i = 0 ; i < nprocs ; i ++ )		11021852	4					
ANR	11021948	ForInit	i = 0 ;	5930:9:190664:190667	11021852	0	True				
ANR	11021949	AssignmentExpression	i = 0		11021852	0		=			
ANR	11021950	Identifier	i		11021852	0					
ANR	11021951	PrimaryExpression	0		11021852	1					
ANR	11021952	Condition	i < nprocs	5930:13:190668:190675	11021852	1	True				
ANR	11021953	RelationalExpression	i < nprocs		11021852	0		<			
ANR	11021954	Identifier	i		11021852	0					
ANR	11021955	Identifier	nprocs		11021852	1					
ANR	11021956	PostIncDecOperationExpression	i ++	5930:22:190677:190679	11021852	2	True				
ANR	11021957	Identifier	i		11021852	0					
ANR	11021958	IncDec	++		11021852	1					
ANR	11021959	CompoundStatement		19:27:556:556	11021852	3					
ANR	11021960	ExpressionStatement	"code = names_ref ( imemory -> gs_lib_ctx -> gs_name_table , ( const byte * ) colorProcs [ i ] . name , strlen ( colorProcs [ i ] . name ) , & nref , 0 )"	5931:8:190692:190816	11021852	0	True				
ANR	11021961	AssignmentExpression	"code = names_ref ( imemory -> gs_lib_ctx -> gs_name_table , ( const byte * ) colorProcs [ i ] . name , strlen ( colorProcs [ i ] . name ) , & nref , 0 )"		11021852	0		=			
ANR	11021962	Identifier	code		11021852	0					
ANR	11021963	CallExpression	"names_ref ( imemory -> gs_lib_ctx -> gs_name_table , ( const byte * ) colorProcs [ i ] . name , strlen ( colorProcs [ i ] . name ) , & nref , 0 )"		11021852	1					
ANR	11021964	Callee	names_ref		11021852	0					
ANR	11021965	Identifier	names_ref		11021852	0					
ANR	11021966	ArgumentList	imemory -> gs_lib_ctx -> gs_name_table		11021852	1					
ANR	11021967	Argument	imemory -> gs_lib_ctx -> gs_name_table		11021852	0					
ANR	11021968	PtrMemberAccess	imemory -> gs_lib_ctx -> gs_name_table		11021852	0					
ANR	11021969	PtrMemberAccess	imemory -> gs_lib_ctx		11021852	0					
ANR	11021970	Identifier	imemory		11021852	0					
ANR	11021971	Identifier	gs_lib_ctx		11021852	1					
ANR	11021972	Identifier	gs_name_table		11021852	1					
ANR	11021973	Argument	( const byte * ) colorProcs [ i ] . name		11021852	1					
ANR	11021974	CastExpression	( const byte * ) colorProcs [ i ] . name		11021852	0					
ANR	11021975	CastTarget	const byte *		11021852	0					
ANR	11021976	MemberAccess	colorProcs [ i ] . name		11021852	1					
ANR	11021977	ArrayIndexing	colorProcs [ i ]		11021852	0					
ANR	11021978	Identifier	colorProcs		11021852	0					
ANR	11021979	Identifier	i		11021852	1					
ANR	11021980	Identifier	name		11021852	1					
ANR	11021981	Argument	strlen ( colorProcs [ i ] . name )		11021852	2					
ANR	11021982	CallExpression	strlen ( colorProcs [ i ] . name )		11021852	0					
ANR	11021983	Callee	strlen		11021852	0					
ANR	11021984	Identifier	strlen		11021852	0					
ANR	11021985	ArgumentList	colorProcs [ i ] . name		11021852	1					
ANR	11021986	Argument	colorProcs [ i ] . name		11021852	0					
ANR	11021987	MemberAccess	colorProcs [ i ] . name		11021852	0					
ANR	11021988	ArrayIndexing	colorProcs [ i ]		11021852	0					
ANR	11021989	Identifier	colorProcs		11021852	0					
ANR	11021990	Identifier	i		11021852	1					
ANR	11021991	Identifier	name		11021852	1					
ANR	11021992	Argument	& nref		11021852	3					
ANR	11021993	UnaryOperationExpression	& nref		11021852	0					
ANR	11021994	UnaryOperator	&		11021852	0					
ANR	11021995	Identifier	nref		11021852	1					
ANR	11021996	Argument	0		11021852	4					
ANR	11021997	PrimaryExpression	0		11021852	0					
ANR	11021998	IfStatement	if ( code < 0 )		11021852	1					
ANR	11021999	Condition	code < 0	5932:12:190830:190837	11021852	0	True				
ANR	11022000	RelationalExpression	code < 0		11021852	0		<			
ANR	11022001	Identifier	code		11021852	0					
ANR	11022002	PrimaryExpression	0		11021852	1					
ANR	11022003	ReturnStatement	return code ;	5933:12:190852:190863	11021852	1	True				
ANR	11022004	Identifier	code		11021852	0					
ANR	11022005	IfStatement	"if ( name_eq ( & spacename , & nref ) )"		11021852	2					
ANR	11022006	Condition	"name_eq ( & spacename , & nref )"	5934:12:190877:190902	11021852	0	True				
ANR	11022007	CallExpression	"name_eq ( & spacename , & nref )"		11021852	0					
ANR	11022008	Callee	name_eq		11021852	0					
ANR	11022009	Identifier	name_eq		11021852	0					
ANR	11022010	ArgumentList	& spacename		11021852	1					
ANR	11022011	Argument	& spacename		11021852	0					
ANR	11022012	UnaryOperationExpression	& spacename		11021852	0					
ANR	11022013	UnaryOperator	&		11021852	0					
ANR	11022014	Identifier	spacename		11021852	1					
ANR	11022015	Argument	& nref		11021852	1					
ANR	11022016	UnaryOperationExpression	& nref		11021852	0					
ANR	11022017	UnaryOperator	&		11021852	0					
ANR	11022018	Identifier	nref		11021852	1					
ANR	11022019	CompoundStatement		23:40:779:779	11021852	1					
ANR	11022020	ExpressionStatement	* obj = & colorProcs [ i ]	5935:12:190919:190940	11021852	0	True				
ANR	11022021	AssignmentExpression	* obj = & colorProcs [ i ]		11021852	0		=			
ANR	11022022	UnaryOperationExpression	* obj		11021852	0					
ANR	11022023	UnaryOperator	*		11021852	0					
ANR	11022024	Identifier	obj		11021852	1					
ANR	11022025	UnaryOperationExpression	& colorProcs [ i ]		11021852	1					
ANR	11022026	UnaryOperator	&		11021852	0					
ANR	11022027	ArrayIndexing	colorProcs [ i ]		11021852	1					
ANR	11022028	Identifier	colorProcs		11021852	0					
ANR	11022029	Identifier	i		11021852	1					
ANR	11022030	ReturnStatement	return 0 ;	5936:12:190954:190962	11021852	1	True				
ANR	11022031	PrimaryExpression	0		11021852	0					
ANR	11022032	ExpressionStatement	return_error ( gs_error_undefined )	5939:4:190984:191016	11021852	5	True				
ANR	11022033	CallExpression	return_error ( gs_error_undefined )		11021852	0					
ANR	11022034	Callee	return_error		11021852	0					
ANR	11022035	Identifier	return_error		11021852	0					
ANR	11022036	ArgumentList	gs_error_undefined		11021852	1					
ANR	11022037	Argument	gs_error_undefined		11021852	0					
ANR	11022038	Identifier	gs_error_undefined		11021852	0					
ANR	11022039	ReturnType	int		11021852	1					
ANR	11022040	Identifier	get_space_object		11021852	2					
ANR	11022041	ParameterList	"i_ctx_t * i_ctx_p , ref * arr , PS_colour_space_t * * obj"		11021852	3					
ANR	11022042	Parameter	i_ctx_t * i_ctx_p	5911:21:190072:190087	11021852	0	True				
ANR	11022043	ParameterType	i_ctx_t *		11021852	0					
ANR	11022044	Identifier	i_ctx_p		11021852	1					
ANR	11022045	Parameter	ref * arr	5911:39:190090:190097	11021852	1	True				
ANR	11022046	ParameterType	ref *		11021852	0					
ANR	11022047	Identifier	arr		11021852	1					
ANR	11022048	Parameter	PS_colour_space_t * * obj	5911:49:190100:190122	11021852	2	True				
ANR	11022049	ParameterType	PS_colour_space_t * *		11021852	0					
ANR	11022050	Identifier	obj		11021852	1					
ANR	11022051	CFGEntryNode	ENTRY		11021852		True				
ANR	11022052	CFGExitNode	EXIT		11021852		True				
ANR	11022053	Symbol	* imemory -> gs_lib_ctx		11021852						
ANR	11022054	Symbol	name_eq		11021852						
ANR	11022055	Symbol	code		11021852						
ANR	11022056	Symbol	imemory -> gs_lib_ctx -> gs_name_table		11021852						
ANR	11022057	Symbol	colorProcs [ i ] . name		11021852						
ANR	11022058	Symbol	& spacename		11021852						
ANR	11022059	Symbol	names_ref		11021852						
ANR	11022060	Symbol	gs_error_undefined		11021852						
ANR	11022061	Symbol	imemory -> gs_lib_ctx		11021852						
ANR	11022062	Symbol	& nref		11021852						
ANR	11022063	Symbol	strlen		11021852						
ANR	11022064	Symbol	r_has_type		11021852						
ANR	11022065	Symbol	gs_error_typecheck		11021852						
ANR	11022066	Symbol	nref		11021852						
ANR	11022067	Symbol	t_name		11021852						
ANR	11022068	Symbol	imemory		11021852						
ANR	11022069	Symbol	arr		11021852						
ANR	11022070	Symbol	spacename		11021852						
ANR	11022071	Symbol	* obj		11021852						
ANR	11022072	Symbol	* imemory		11021852						
ANR	11022073	Symbol	array_get		11021852						
ANR	11022074	Symbol	i		11021852						
ANR	11022075	Symbol	colorProcs		11021852						
ANR	11022076	Symbol	* i		11021852						
ANR	11022077	Symbol	i_ctx_p		11021852						
ANR	11022078	Symbol	obj		11021852						
ANR	11022079	Symbol	* colorProcs		11021852						
ANR	11022080	Symbol	* * imemory		11021852						
ANR	11022081	Symbol	nprocs		11021852						
ANR	11022082	Symbol	r_is_array		11021852						
ANR	11022083	Function	validate_spaces	5946:0:191217:191713							
ANR	11022084	FunctionDef	"validate_spaces (i_ctx_t * i_ctx_p , ref * arr , int * depth)"		11022083	0					
ANR	11022085	CompoundStatement		5947:0:191284:191713	11022083	0					
ANR	11022086	IdentifierDeclStatement	"ref space , * sp = & space ;"	5948:4:191290:191313	11022083	0	True				
ANR	11022087	IdentifierDecl	space		11022083	0					
ANR	11022088	IdentifierDeclType	ref		11022083	0					
ANR	11022089	Identifier	space		11022083	1					
ANR	11022090	IdentifierDecl	* sp = & space		11022083	1					
ANR	11022091	IdentifierDeclType	ref *		11022083	0					
ANR	11022092	Identifier	sp		11022083	1					
ANR	11022093	AssignmentExpression	* sp = & space		11022083	2		=			
ANR	11022094	Identifier	sp		11022083	0					
ANR	11022095	UnaryOperationExpression	& space		11022083	1					
ANR	11022096	UnaryOperator	&		11022083	0					
ANR	11022097	Identifier	space		11022083	1					
ANR	11022098	IdentifierDeclStatement	int code = 0 ;	5949:4:191319:191331	11022083	1	True				
ANR	11022099	IdentifierDecl	code = 0		11022083	0					
ANR	11022100	IdentifierDeclType	int		11022083	0					
ANR	11022101	Identifier	code		11022083	1					
ANR	11022102	AssignmentExpression	code = 0		11022083	2		=			
ANR	11022103	Identifier	code		11022083	0					
ANR	11022104	PrimaryExpression	0		11022083	1					
ANR	11022105	IdentifierDeclStatement	PS_colour_space_t * obj ;	5950:4:191337:191359	11022083	2	True				
ANR	11022106	IdentifierDecl	* obj		11022083	0					
ANR	11022107	IdentifierDeclType	PS_colour_space_t *		11022083	0					
ANR	11022108	Identifier	obj		11022083	1					
ANR	11022109	ExpressionStatement	"ref_assign ( & space , arr )"	5952:4:191366:191389	11022083	3	True				
ANR	11022110	CallExpression	"ref_assign ( & space , arr )"		11022083	0					
ANR	11022111	Callee	ref_assign		11022083	0					
ANR	11022112	Identifier	ref_assign		11022083	0					
ANR	11022113	ArgumentList	& space		11022083	1					
ANR	11022114	Argument	& space		11022083	0					
ANR	11022115	UnaryOperationExpression	& space		11022083	0					
ANR	11022116	UnaryOperator	&		11022083	0					
ANR	11022117	Identifier	space		11022083	1					
ANR	11022118	Argument	arr		11022083	1					
ANR	11022119	Identifier	arr		11022083	0					
ANR	11022120	ExpressionStatement	* depth = 0	5953:4:191395:191405	11022083	4	True				
ANR	11022121	AssignmentExpression	* depth = 0		11022083	0		=			
ANR	11022122	UnaryOperationExpression	* depth		11022083	0					
ANR	11022123	UnaryOperator	*		11022083	0					
ANR	11022124	Identifier	depth		11022083	1					
ANR	11022125	PrimaryExpression	0		11022083	1					
ANR	11022126	DoStatement	do		11022083	5					
ANR	11022127	CompoundStatement		8:7:129:129	11022083	0					
ANR	11022128	ExpressionStatement	"code = get_space_object ( i_ctx_p , sp , & obj )"	5955:8:191424:191466	11022083	0	True				
ANR	11022129	AssignmentExpression	"code = get_space_object ( i_ctx_p , sp , & obj )"		11022083	0		=			
ANR	11022130	Identifier	code		11022083	0					
ANR	11022131	CallExpression	"get_space_object ( i_ctx_p , sp , & obj )"		11022083	1					
ANR	11022132	Callee	get_space_object		11022083	0					
ANR	11022133	Identifier	get_space_object		11022083	0					
ANR	11022134	ArgumentList	i_ctx_p		11022083	1					
ANR	11022135	Argument	i_ctx_p		11022083	0					
ANR	11022136	Identifier	i_ctx_p		11022083	0					
ANR	11022137	Argument	sp		11022083	1					
ANR	11022138	Identifier	sp		11022083	0					
ANR	11022139	Argument	& obj		11022083	2					
ANR	11022140	UnaryOperationExpression	& obj		11022083	0					
ANR	11022141	UnaryOperator	&		11022083	0					
ANR	11022142	Identifier	obj		11022083	1					
ANR	11022143	IfStatement	if ( code < 0 )		11022083	1					
ANR	11022144	Condition	code < 0	5956:12:191480:191487	11022083	0	True				
ANR	11022145	RelationalExpression	code < 0		11022083	0		<			
ANR	11022146	Identifier	code		11022083	0					
ANR	11022147	PrimaryExpression	0		11022083	1					
ANR	11022148	ReturnStatement	return code ;	5957:12:191502:191513	11022083	1	True				
ANR	11022149	Identifier	code		11022083	0					
ANR	11022150	ExpressionStatement	( * depth ) ++	5959:8:191524:191534	11022083	2	True				
ANR	11022151	PostIncDecOperationExpression	( * depth ) ++		11022083	0					
ANR	11022152	UnaryOperationExpression	* depth		11022083	0					
ANR	11022153	UnaryOperator	*		11022083	0					
ANR	11022154	Identifier	depth		11022083	1					
ANR	11022155	IncDec	++		11022083	1					
ANR	11022156	IfStatement	if ( ! obj -> validateproc )		11022083	3					
ANR	11022157	Condition	! obj -> validateproc	5960:12:191548:191565	11022083	0	True				
ANR	11022158	UnaryOperationExpression	! obj -> validateproc		11022083	0					
ANR	11022159	UnaryOperator	!		11022083	0					
ANR	11022160	PtrMemberAccess	obj -> validateproc		11022083	1					
ANR	11022161	Identifier	obj		11022083	0					
ANR	11022162	Identifier	validateproc		11022083	1					
ANR	11022163	BreakStatement	break ;	5961:12:191580:191585	11022083	1	True				
ANR	11022164	ExpressionStatement	"code = obj -> validateproc ( i_ctx_p , & sp )"	5963:8:191596:191634	11022083	4	True				
ANR	11022165	AssignmentExpression	"code = obj -> validateproc ( i_ctx_p , & sp )"		11022083	0		=			
ANR	11022166	Identifier	code		11022083	0					
ANR	11022167	CallExpression	"obj -> validateproc ( i_ctx_p , & sp )"		11022083	1					
ANR	11022168	Callee	obj -> validateproc		11022083	0					
ANR	11022169	PtrMemberAccess	obj -> validateproc		11022083	0					
ANR	11022170	Identifier	obj		11022083	0					
ANR	11022171	Identifier	validateproc		11022083	1					
ANR	11022172	ArgumentList	i_ctx_p		11022083	1					
ANR	11022173	Argument	i_ctx_p		11022083	0					
ANR	11022174	Identifier	i_ctx_p		11022083	0					
ANR	11022175	Argument	& sp		11022083	1					
ANR	11022176	UnaryOperationExpression	& sp		11022083	0					
ANR	11022177	UnaryOperator	&		11022083	0					
ANR	11022178	Identifier	sp		11022083	1					
ANR	11022179	IfStatement	if ( code < 0 )		11022083	5					
ANR	11022180	Condition	code < 0	5964:12:191648:191655	11022083	0	True				
ANR	11022181	RelationalExpression	code < 0		11022083	0		<			
ANR	11022182	Identifier	code		11022083	0					
ANR	11022183	PrimaryExpression	0		11022083	1					
ANR	11022184	ReturnStatement	return code ;	5965:12:191670:191681	11022083	1	True				
ANR	11022185	Identifier	code		11022083	0					
ANR	11022186	Condition	sp	5966:11:191694:191695	11022083	1	True				
ANR	11022187	Identifier	sp		11022083	0					
ANR	11022188	ReturnStatement	return 0 ;	5967:4:191703:191711	11022083	6	True				
ANR	11022189	PrimaryExpression	0		11022083	0					
ANR	11022190	ReturnType	static int		11022083	1					
ANR	11022191	Identifier	validate_spaces		11022083	2					
ANR	11022192	ParameterList	"i_ctx_t * i_ctx_p , ref * arr , int * depth"		11022083	3					
ANR	11022193	Parameter	i_ctx_t * i_ctx_p	5946:27:191244:191259	11022083	0	True				
ANR	11022194	ParameterType	i_ctx_t *		11022083	0					
ANR	11022195	Identifier	i_ctx_p		11022083	1					
ANR	11022196	Parameter	ref * arr	5946:45:191262:191269	11022083	1	True				
ANR	11022197	ParameterType	ref *		11022083	0					
ANR	11022198	Identifier	arr		11022083	1					
ANR	11022199	Parameter	int * depth	5946:55:191272:191281	11022083	2	True				
ANR	11022200	ParameterType	int *		11022083	0					
ANR	11022201	Identifier	depth		11022083	1					
ANR	11022202	CFGEntryNode	ENTRY		11022083		True				
ANR	11022203	CFGExitNode	EXIT		11022083		True				
ANR	11022204	Symbol	arr		11022083						
ANR	11022205	Symbol	* obj		11022083						
ANR	11022206	Symbol	obj -> validateproc		11022083						
ANR	11022207	Symbol	code		11022083						
ANR	11022208	Symbol	& sp		11022083						
ANR	11022209	Symbol	get_space_object		11022083						
ANR	11022210	Symbol	space		11022083						
ANR	11022211	Symbol	depth		11022083						
ANR	11022212	Symbol	i_ctx_p		11022083						
ANR	11022213	Symbol	obj		11022083						
ANR	11022214	Symbol	& obj		11022083						
ANR	11022215	Symbol	& space		11022083						
ANR	11022216	Symbol	* depth		11022083						
ANR	11022217	Symbol	sp		11022083						
ANR	11022218	Function	setcolor_cont	5983:0:192575:194950							
ANR	11022219	FunctionDef	setcolor_cont (i_ctx_t * i_ctx_p)		11022218	0					
ANR	11022220	CompoundStatement		5985:0:192618:194950	11022218	0					
ANR	11022221	IdentifierDeclStatement	"ref arr , * parr = & arr ;"	5986:4:192624:192645	11022218	0	True				
ANR	11022222	IdentifierDecl	arr		11022218	0					
ANR	11022223	IdentifierDeclType	ref		11022218	0					
ANR	11022224	Identifier	arr		11022218	1					
ANR	11022225	IdentifierDecl	* parr = & arr		11022218	1					
ANR	11022226	IdentifierDeclType	ref *		11022218	0					
ANR	11022227	Identifier	parr		11022218	1					
ANR	11022228	AssignmentExpression	* parr = & arr		11022218	2		=			
ANR	11022229	Identifier	parr		11022218	0					
ANR	11022230	UnaryOperationExpression	& arr		11022218	1					
ANR	11022231	UnaryOperator	&		11022218	0					
ANR	11022232	Identifier	arr		11022218	1					
ANR	11022233	IdentifierDeclStatement	es_ptr ep = esp ;	5987:4:192651:192666	11022218	1	True				
ANR	11022234	IdentifierDecl	ep = esp		11022218	0					
ANR	11022235	IdentifierDeclType	es_ptr		11022218	0					
ANR	11022236	Identifier	ep		11022218	1					
ANR	11022237	AssignmentExpression	ep = esp		11022218	2		=			
ANR	11022238	Identifier	esp		11022218	0					
ANR	11022239	Identifier	esp		11022218	1					
ANR	11022240	IdentifierDeclStatement	"int i = 0 , code = 0 , usealternate , stage , stack_depth , CIESubst = 0 , IsICC = 0 ;"	5988:4:192672:192748	11022218	2	True				
ANR	11022241	IdentifierDecl	i = 0		11022218	0					
ANR	11022242	IdentifierDeclType	int		11022218	0					
ANR	11022243	Identifier	i		11022218	1					
ANR	11022244	AssignmentExpression	i = 0		11022218	2		=			
ANR	11022245	Identifier	i		11022218	0					
ANR	11022246	PrimaryExpression	0		11022218	1					
ANR	11022247	IdentifierDecl	code = 0		11022218	1					
ANR	11022248	IdentifierDeclType	int		11022218	0					
ANR	11022249	Identifier	code		11022218	1					
ANR	11022250	AssignmentExpression	code = 0		11022218	2		=			
ANR	11022251	Identifier	code		11022218	0					
ANR	11022252	PrimaryExpression	0		11022218	1					
ANR	11022253	IdentifierDecl	usealternate		11022218	2					
ANR	11022254	IdentifierDeclType	int		11022218	0					
ANR	11022255	Identifier	usealternate		11022218	1					
ANR	11022256	IdentifierDecl	stage		11022218	3					
ANR	11022257	IdentifierDeclType	int		11022218	0					
ANR	11022258	Identifier	stage		11022218	1					
ANR	11022259	IdentifierDecl	stack_depth		11022218	4					
ANR	11022260	IdentifierDeclType	int		11022218	0					
ANR	11022261	Identifier	stack_depth		11022218	1					
ANR	11022262	IdentifierDecl	CIESubst = 0		11022218	5					
ANR	11022263	IdentifierDeclType	int		11022218	0					
ANR	11022264	Identifier	CIESubst		11022218	1					
ANR	11022265	AssignmentExpression	CIESubst = 0		11022218	2		=			
ANR	11022266	Identifier	CIESubst		11022218	0					
ANR	11022267	PrimaryExpression	0		11022218	1					
ANR	11022268	IdentifierDecl	IsICC = 0		11022218	6					
ANR	11022269	IdentifierDeclType	int		11022218	0					
ANR	11022270	Identifier	IsICC		11022218	1					
ANR	11022271	AssignmentExpression	IsICC = 0		11022218	2		=			
ANR	11022272	Identifier	IsICC		11022218	0					
ANR	11022273	PrimaryExpression	0		11022218	1					
ANR	11022274	IdentifierDeclStatement	unsigned int depth ;	5989:4:192754:192772	11022218	3	True				
ANR	11022275	IdentifierDecl	depth		11022218	0					
ANR	11022276	IdentifierDeclType	unsigned int		11022218	0					
ANR	11022277	Identifier	depth		11022218	1					
ANR	11022278	IdentifierDeclStatement	PS_colour_space_t * obj ;	5990:4:192778:192800	11022218	4	True				
ANR	11022279	IdentifierDecl	* obj		11022218	0					
ANR	11022280	IdentifierDeclType	PS_colour_space_t *		11022218	0					
ANR	11022281	Identifier	obj		11022218	1					
ANR	11022282	ExpressionStatement	stack_depth = ( int ) ep [ - 3 ] . value . intval	5992:4:192807:192845	11022218	5	True				
ANR	11022283	AssignmentExpression	stack_depth = ( int ) ep [ - 3 ] . value . intval		11022218	0		=			
ANR	11022284	Identifier	stack_depth		11022218	0					
ANR	11022285	CastExpression	( int ) ep [ - 3 ] . value . intval		11022218	1					
ANR	11022286	CastTarget	int		11022218	0					
ANR	11022287	MemberAccess	ep [ - 3 ] . value . intval		11022218	1					
ANR	11022288	MemberAccess	ep [ - 3 ] . value		11022218	0					
ANR	11022289	ArrayIndexing	ep [ - 3 ]		11022218	0					
ANR	11022290	Identifier	ep		11022218	0					
ANR	11022291	UnaryOperationExpression	- 3		11022218	1					
ANR	11022292	UnaryOperator	-		11022218	0					
ANR	11022293	PrimaryExpression	3		11022218	1					
ANR	11022294	Identifier	value		11022218	1					
ANR	11022295	Identifier	intval		11022218	1					
ANR	11022296	ExpressionStatement	depth = ( unsigned int ) ep [ - 2 ] . value . intval	5993:4:192851:192892	11022218	6	True				
ANR	11022297	AssignmentExpression	depth = ( unsigned int ) ep [ - 2 ] . value . intval		11022218	0		=			
ANR	11022298	Identifier	depth		11022218	0					
ANR	11022299	CastExpression	( unsigned int ) ep [ - 2 ] . value . intval		11022218	1					
ANR	11022300	CastTarget	unsigned int		11022218	0					
ANR	11022301	MemberAccess	ep [ - 2 ] . value . intval		11022218	1					
ANR	11022302	MemberAccess	ep [ - 2 ] . value		11022218	0					
ANR	11022303	ArrayIndexing	ep [ - 2 ]		11022218	0					
ANR	11022304	Identifier	ep		11022218	0					
ANR	11022305	UnaryOperationExpression	- 2		11022218	1					
ANR	11022306	UnaryOperator	-		11022218	0					
ANR	11022307	PrimaryExpression	2		11022218	1					
ANR	11022308	Identifier	value		11022218	1					
ANR	11022309	Identifier	intval		11022218	1					
ANR	11022310	ExpressionStatement	stage = ( int ) ep [ - 1 ] . value . intval	5994:4:192898:192930	11022218	7	True				
ANR	11022311	AssignmentExpression	stage = ( int ) ep [ - 1 ] . value . intval		11022218	0		=			
ANR	11022312	Identifier	stage		11022218	0					
ANR	11022313	CastExpression	( int ) ep [ - 1 ] . value . intval		11022218	1					
ANR	11022314	CastTarget	int		11022218	0					
ANR	11022315	MemberAccess	ep [ - 1 ] . value . intval		11022218	1					
ANR	11022316	MemberAccess	ep [ - 1 ] . value		11022218	0					
ANR	11022317	ArrayIndexing	ep [ - 1 ]		11022218	0					
ANR	11022318	Identifier	ep		11022218	0					
ANR	11022319	UnaryOperationExpression	- 1		11022218	1					
ANR	11022320	UnaryOperator	-		11022218	0					
ANR	11022321	PrimaryExpression	1		11022218	1					
ANR	11022322	Identifier	value		11022218	1					
ANR	11022323	Identifier	intval		11022218	1					
ANR	11022324	ExpressionStatement	check_estack ( 1 )	5999:4:193180:193195	11022218	8	True				
ANR	11022325	CallExpression	check_estack ( 1 )		11022218	0					
ANR	11022326	Callee	check_estack		11022218	0					
ANR	11022327	Identifier	check_estack		11022218	0					
ANR	11022328	ArgumentList	1		11022218	1					
ANR	11022329	Argument	1		11022218	0					
ANR	11022330	PrimaryExpression	1		11022218	0					
ANR	11022331	ExpressionStatement	push_op_estack ( setcolor_cont )	6000:4:193201:193230	11022218	9	True				
ANR	11022332	CallExpression	push_op_estack ( setcolor_cont )		11022218	0					
ANR	11022333	Callee	push_op_estack		11022218	0					
ANR	11022334	Identifier	push_op_estack		11022218	0					
ANR	11022335	ArgumentList	setcolor_cont		11022218	1					
ANR	11022336	Argument	setcolor_cont		11022218	0					
ANR	11022337	Identifier	setcolor_cont		11022218	0					
ANR	11022338	WhileStatement	while ( code == 0 )		11022218	10					
ANR	11022339	Condition	code == 0	6002:11:193244:193252	11022218	0	True				
ANR	11022340	EqualityExpression	code == 0		11022218	0		==			
ANR	11022341	Identifier	code		11022218	0					
ANR	11022342	PrimaryExpression	0		11022218	1					
ANR	11022343	CompoundStatement		18:22:636:636	11022218	1					
ANR	11022344	ExpressionStatement	"ref_assign ( & arr , ep )"	6003:8:193265:193285	11022218	0	True				
ANR	11022345	CallExpression	"ref_assign ( & arr , ep )"		11022218	0					
ANR	11022346	Callee	ref_assign		11022218	0					
ANR	11022347	Identifier	ref_assign		11022218	0					
ANR	11022348	ArgumentList	& arr		11022218	1					
ANR	11022349	Argument	& arr		11022218	0					
ANR	11022350	UnaryOperationExpression	& arr		11022218	0					
ANR	11022351	UnaryOperator	&		11022218	0					
ANR	11022352	Identifier	arr		11022218	1					
ANR	11022353	Argument	ep		11022218	1					
ANR	11022354	Identifier	ep		11022218	0					
ANR	11022355	ForStatement	for ( i = 0 ; i <= depth ; i ++ )		11022218	1					
ANR	11022356	ForInit	i = 0 ;	6007:13:193447:193450	11022218	0	True				
ANR	11022357	AssignmentExpression	i = 0		11022218	0		=			
ANR	11022358	Identifier	i		11022218	0					
ANR	11022359	PrimaryExpression	0		11022218	1					
ANR	11022360	Condition	i <= depth	6007:17:193451:193458	11022218	1	True				
ANR	11022361	RelationalExpression	i <= depth		11022218	0		<=			
ANR	11022362	Identifier	i		11022218	0					
ANR	11022363	Identifier	depth		11022218	1					
ANR	11022364	PostIncDecOperationExpression	i ++	6007:26:193460:193462	11022218	2	True				
ANR	11022365	Identifier	i		11022218	0					
ANR	11022366	IncDec	++		11022218	1					
ANR	11022367	CompoundStatement		23:31:846:846	11022218	3					
ANR	11022368	ExpressionStatement	"code = get_space_object ( i_ctx_p , parr , & obj )"	6008:12:193479:193523	11022218	0	True				
ANR	11022369	AssignmentExpression	"code = get_space_object ( i_ctx_p , parr , & obj )"		11022218	0		=			
ANR	11022370	Identifier	code		11022218	0					
ANR	11022371	CallExpression	"get_space_object ( i_ctx_p , parr , & obj )"		11022218	1					
ANR	11022372	Callee	get_space_object		11022218	0					
ANR	11022373	Identifier	get_space_object		11022218	0					
ANR	11022374	ArgumentList	i_ctx_p		11022218	1					
ANR	11022375	Argument	i_ctx_p		11022218	0					
ANR	11022376	Identifier	i_ctx_p		11022218	0					
ANR	11022377	Argument	parr		11022218	1					
ANR	11022378	Identifier	parr		11022218	0					
ANR	11022379	Argument	& obj		11022218	2					
ANR	11022380	UnaryOperationExpression	& obj		11022218	0					
ANR	11022381	UnaryOperator	&		11022218	0					
ANR	11022382	Identifier	obj		11022218	1					
ANR	11022383	IfStatement	if ( code < 0 )		11022218	1					
ANR	11022384	Condition	code < 0	6009:16:193541:193548	11022218	0	True				
ANR	11022385	RelationalExpression	code < 0		11022218	0		<			
ANR	11022386	Identifier	code		11022218	0					
ANR	11022387	PrimaryExpression	0		11022218	1					
ANR	11022388	ReturnStatement	return code ;	6010:16:193567:193578	11022218	1	True				
ANR	11022389	Identifier	code		11022218	0					
ANR	11022390	IfStatement	"if ( strcmp ( obj -> name , ""ICCBased"" ) == 0 )"		11022218	2					
ANR	11022391	Condition	"strcmp ( obj -> name , ""ICCBased"" ) == 0"	6012:16:193597:193630	11022218	0	True				
ANR	11022392	EqualityExpression	"strcmp ( obj -> name , ""ICCBased"" ) == 0"		11022218	0		==			
ANR	11022393	CallExpression	"strcmp ( obj -> name , ""ICCBased"" )"		11022218	0					
ANR	11022394	Callee	strcmp		11022218	0					
ANR	11022395	Identifier	strcmp		11022218	0					
ANR	11022396	ArgumentList	obj -> name		11022218	1					
ANR	11022397	Argument	obj -> name		11022218	0					
ANR	11022398	PtrMemberAccess	obj -> name		11022218	0					
ANR	11022399	Identifier	obj		11022218	0					
ANR	11022400	Identifier	name		11022218	1					
ANR	11022401	Argument	"""ICCBased"""		11022218	1					
ANR	11022402	PrimaryExpression	"""ICCBased"""		11022218	0					
ANR	11022403	PrimaryExpression	0		11022218	1					
ANR	11022404	ExpressionStatement	IsICC = 1	6013:16:193649:193658	11022218	1	True				
ANR	11022405	AssignmentExpression	IsICC = 1		11022218	0		=			
ANR	11022406	Identifier	IsICC		11022218	0					
ANR	11022407	PrimaryExpression	1		11022218	1					
ANR	11022408	IfStatement	if ( i < ( depth ) )		11022218	3					
ANR	11022409	Condition	i < ( depth )	6015:16:193677:193687	11022218	0	True				
ANR	11022410	RelationalExpression	i < ( depth )		11022218	0		<			
ANR	11022411	Identifier	i		11022218	0					
ANR	11022412	Identifier	depth		11022218	1					
ANR	11022413	CompoundStatement		31:29:1071:1071	11022218	1					
ANR	11022414	IfStatement	if ( ! obj -> alternateproc )		11022218	0					
ANR	11022415	Condition	! obj -> alternateproc	6016:20:193712:193730	11022218	0	True				
ANR	11022416	UnaryOperationExpression	! obj -> alternateproc		11022218	0					
ANR	11022417	UnaryOperator	!		11022218	0					
ANR	11022418	PtrMemberAccess	obj -> alternateproc		11022218	1					
ANR	11022419	Identifier	obj		11022218	0					
ANR	11022420	Identifier	alternateproc		11022218	1					
ANR	11022421	CompoundStatement		32:41:1114:1114	11022218	1					
ANR	11022422	ExpressionStatement	return_error ( gs_error_typecheck )	6017:20:193755:193787	11022218	0	True				
ANR	11022423	CallExpression	return_error ( gs_error_typecheck )		11022218	0					
ANR	11022424	Callee	return_error		11022218	0					
ANR	11022425	Identifier	return_error		11022218	0					
ANR	11022426	ArgumentList	gs_error_typecheck		11022218	1					
ANR	11022427	Argument	gs_error_typecheck		11022218	0					
ANR	11022428	Identifier	gs_error_typecheck		11022218	0					
ANR	11022429	ExpressionStatement	"code = obj -> alternateproc ( i_ctx_p , parr , & parr , & CIESubst )"	6019:16:193823:193881	11022218	1	True				
ANR	11022430	AssignmentExpression	"code = obj -> alternateproc ( i_ctx_p , parr , & parr , & CIESubst )"		11022218	0		=			
ANR	11022431	Identifier	code		11022218	0					
ANR	11022432	CallExpression	"obj -> alternateproc ( i_ctx_p , parr , & parr , & CIESubst )"		11022218	1					
ANR	11022433	Callee	obj -> alternateproc		11022218	0					
ANR	11022434	PtrMemberAccess	obj -> alternateproc		11022218	0					
ANR	11022435	Identifier	obj		11022218	0					
ANR	11022436	Identifier	alternateproc		11022218	1					
ANR	11022437	ArgumentList	i_ctx_p		11022218	1					
ANR	11022438	Argument	i_ctx_p		11022218	0					
ANR	11022439	Identifier	i_ctx_p		11022218	0					
ANR	11022440	Argument	parr		11022218	1					
ANR	11022441	Identifier	parr		11022218	0					
ANR	11022442	Argument	& parr		11022218	2					
ANR	11022443	UnaryOperationExpression	& parr		11022218	0					
ANR	11022444	UnaryOperator	&		11022218	0					
ANR	11022445	Identifier	parr		11022218	1					
ANR	11022446	Argument	& CIESubst		11022218	3					
ANR	11022447	UnaryOperationExpression	& CIESubst		11022218	0					
ANR	11022448	UnaryOperator	&		11022218	0					
ANR	11022449	Identifier	CIESubst		11022218	1					
ANR	11022450	IfStatement	if ( code < 0 )		11022218	2					
ANR	11022451	Condition	code < 0	6020:20:193903:193910	11022218	0	True				
ANR	11022452	RelationalExpression	code < 0		11022218	0		<			
ANR	11022453	Identifier	code		11022218	0					
ANR	11022454	PrimaryExpression	0		11022218	1					
ANR	11022455	ReturnStatement	return code ;	6021:20:193933:193944	11022218	1	True				
ANR	11022456	Identifier	code		11022218	0					
ANR	11022457	IfStatement	if ( obj -> runtransformproc )		11022218	2					
ANR	11022458	Condition	obj -> runtransformproc	6024:12:193982:194002	11022218	0	True				
ANR	11022459	PtrMemberAccess	obj -> runtransformproc		11022218	0					
ANR	11022460	Identifier	obj		11022218	0					
ANR	11022461	Identifier	runtransformproc		11022218	1					
ANR	11022462	CompoundStatement		40:35:1386:1386	11022218	1					
ANR	11022463	ExpressionStatement	"code = obj -> runtransformproc ( i_ctx_p , & istate -> colorspace [ 0 ] . array , & usealternate , & stage , & stack_depth )"	6025:12:194019:194123	11022218	0	True				
ANR	11022464	AssignmentExpression	"code = obj -> runtransformproc ( i_ctx_p , & istate -> colorspace [ 0 ] . array , & usealternate , & stage , & stack_depth )"		11022218	0		=			
ANR	11022465	Identifier	code		11022218	0					
ANR	11022466	CallExpression	"obj -> runtransformproc ( i_ctx_p , & istate -> colorspace [ 0 ] . array , & usealternate , & stage , & stack_depth )"		11022218	1					
ANR	11022467	Callee	obj -> runtransformproc		11022218	0					
ANR	11022468	PtrMemberAccess	obj -> runtransformproc		11022218	0					
ANR	11022469	Identifier	obj		11022218	0					
ANR	11022470	Identifier	runtransformproc		11022218	1					
ANR	11022471	ArgumentList	i_ctx_p		11022218	1					
ANR	11022472	Argument	i_ctx_p		11022218	0					
ANR	11022473	Identifier	i_ctx_p		11022218	0					
ANR	11022474	Argument	& istate -> colorspace [ 0 ] . array		11022218	1					
ANR	11022475	UnaryOperationExpression	& istate -> colorspace [ 0 ] . array		11022218	0					
ANR	11022476	UnaryOperator	&		11022218	0					
ANR	11022477	MemberAccess	istate -> colorspace [ 0 ] . array		11022218	1					
ANR	11022478	ArrayIndexing	istate -> colorspace [ 0 ]		11022218	0					
ANR	11022479	PtrMemberAccess	istate -> colorspace		11022218	0					
ANR	11022480	Identifier	istate		11022218	0					
ANR	11022481	Identifier	colorspace		11022218	1					
ANR	11022482	PrimaryExpression	0		11022218	1					
ANR	11022483	Identifier	array		11022218	1					
ANR	11022484	Argument	& usealternate		11022218	2					
ANR	11022485	UnaryOperationExpression	& usealternate		11022218	0					
ANR	11022486	UnaryOperator	&		11022218	0					
ANR	11022487	Identifier	usealternate		11022218	1					
ANR	11022488	Argument	& stage		11022218	3					
ANR	11022489	UnaryOperationExpression	& stage		11022218	0					
ANR	11022490	UnaryOperator	&		11022218	0					
ANR	11022491	Identifier	stage		11022218	1					
ANR	11022492	Argument	& stack_depth		11022218	4					
ANR	11022493	UnaryOperationExpression	& stack_depth		11022218	0					
ANR	11022494	UnaryOperator	&		11022218	0					
ANR	11022495	Identifier	stack_depth		11022218	1					
ANR	11022496	ExpressionStatement	"make_int ( & ep [ - 3 ] , stack_depth )"	6026:12:194137:194167	11022218	1	True				
ANR	11022497	CallExpression	"make_int ( & ep [ - 3 ] , stack_depth )"		11022218	0					
ANR	11022498	Callee	make_int		11022218	0					
ANR	11022499	Identifier	make_int		11022218	0					
ANR	11022500	ArgumentList	& ep [ - 3 ]		11022218	1					
ANR	11022501	Argument	& ep [ - 3 ]		11022218	0					
ANR	11022502	UnaryOperationExpression	& ep [ - 3 ]		11022218	0					
ANR	11022503	UnaryOperator	&		11022218	0					
ANR	11022504	ArrayIndexing	ep [ - 3 ]		11022218	1					
ANR	11022505	Identifier	ep		11022218	0					
ANR	11022506	UnaryOperationExpression	- 3		11022218	1					
ANR	11022507	UnaryOperator	-		11022218	0					
ANR	11022508	PrimaryExpression	3		11022218	1					
ANR	11022509	Argument	stack_depth		11022218	1					
ANR	11022510	Identifier	stack_depth		11022218	0					
ANR	11022511	ExpressionStatement	"make_int ( & ep [ - 1 ] , stage )"	6027:12:194181:194205	11022218	2	True				
ANR	11022512	CallExpression	"make_int ( & ep [ - 1 ] , stage )"		11022218	0					
ANR	11022513	Callee	make_int		11022218	0					
ANR	11022514	Identifier	make_int		11022218	0					
ANR	11022515	ArgumentList	& ep [ - 1 ]		11022218	1					
ANR	11022516	Argument	& ep [ - 1 ]		11022218	0					
ANR	11022517	UnaryOperationExpression	& ep [ - 1 ]		11022218	0					
ANR	11022518	UnaryOperator	&		11022218	0					
ANR	11022519	ArrayIndexing	ep [ - 1 ]		11022218	1					
ANR	11022520	Identifier	ep		11022218	0					
ANR	11022521	UnaryOperationExpression	- 1		11022218	1					
ANR	11022522	UnaryOperator	-		11022218	0					
ANR	11022523	PrimaryExpression	1		11022218	1					
ANR	11022524	Argument	stage		11022218	1					
ANR	11022525	Identifier	stage		11022218	0					
ANR	11022526	IfStatement	if ( code != 0 )		11022218	3					
ANR	11022527	Condition	code != 0	6028:16:194223:194231	11022218	0	True				
ANR	11022528	EqualityExpression	code != 0		11022218	0		!=			
ANR	11022529	Identifier	code		11022218	0					
ANR	11022530	PrimaryExpression	0		11022218	1					
ANR	11022531	CompoundStatement		44:27:1615:1615	11022218	1					
ANR	11022532	ReturnStatement	return code ;	6029:16:194252:194263	11022218	0	True				
ANR	11022533	Identifier	code		11022218	0					
ANR	11022534	ExpressionStatement	"make_int ( & ep [ - 2 ] , ++ depth )"	6031:12:194291:194317	11022218	4	True				
ANR	11022535	CallExpression	"make_int ( & ep [ - 2 ] , ++ depth )"		11022218	0					
ANR	11022536	Callee	make_int		11022218	0					
ANR	11022537	Identifier	make_int		11022218	0					
ANR	11022538	ArgumentList	& ep [ - 2 ]		11022218	1					
ANR	11022539	Argument	& ep [ - 2 ]		11022218	0					
ANR	11022540	UnaryOperationExpression	& ep [ - 2 ]		11022218	0					
ANR	11022541	UnaryOperator	&		11022218	0					
ANR	11022542	ArrayIndexing	ep [ - 2 ]		11022218	1					
ANR	11022543	Identifier	ep		11022218	0					
ANR	11022544	UnaryOperationExpression	- 2		11022218	1					
ANR	11022545	UnaryOperator	-		11022218	0					
ANR	11022546	PrimaryExpression	2		11022218	1					
ANR	11022547	Argument	++ depth		11022218	1					
ANR	11022548	UnaryExpression	++ depth		11022218	0					
ANR	11022549	IncDec	++		11022218	0					
ANR	11022550	Identifier	depth		11022218	1					
ANR	11022551	IfStatement	if ( ! usealternate )		11022218	5					
ANR	11022552	Condition	! usealternate	6032:16:194335:194347	11022218	0	True				
ANR	11022553	UnaryOperationExpression	! usealternate		11022218	0					
ANR	11022554	UnaryOperator	!		11022218	0					
ANR	11022555	Identifier	usealternate		11022218	1					
ANR	11022556	BreakStatement	break ;	6033:16:194366:194371	11022218	1	True				
ANR	11022557	ElseStatement	else		11022218	0					
ANR	11022558	BreakStatement	break ;	6035:12:194400:194405	11022218	0	True				
ANR	11022559	IfStatement	if ( IsICC && depth == 0 )		11022218	11					
ANR	11022560	Condition	IsICC && depth == 0	6042:8:194680:194698	11022218	0	True				
ANR	11022561	AndExpression	IsICC && depth == 0		11022218	0		&&			
ANR	11022562	Identifier	IsICC		11022218	0					
ANR	11022563	EqualityExpression	depth == 0		11022218	1		==			
ANR	11022564	Identifier	depth		11022218	0					
ANR	11022565	PrimaryExpression	0		11022218	1					
ANR	11022566	CompoundStatement		58:29:2082:2082	11022218	1					
ANR	11022567	ExpressionStatement	code = gx_set_dev_color ( i_ctx_p -> pgs )	6043:8:194711:194748	11022218	0	True				
ANR	11022568	AssignmentExpression	code = gx_set_dev_color ( i_ctx_p -> pgs )		11022218	0		=			
ANR	11022569	Identifier	code		11022218	0					
ANR	11022570	CallExpression	gx_set_dev_color ( i_ctx_p -> pgs )		11022218	1					
ANR	11022571	Callee	gx_set_dev_color		11022218	0					
ANR	11022572	Identifier	gx_set_dev_color		11022218	0					
ANR	11022573	ArgumentList	i_ctx_p -> pgs		11022218	1					
ANR	11022574	Argument	i_ctx_p -> pgs		11022218	0					
ANR	11022575	PtrMemberAccess	i_ctx_p -> pgs		11022218	0					
ANR	11022576	Identifier	i_ctx_p		11022218	0					
ANR	11022577	Identifier	pgs		11022218	1					
ANR	11022578	IfStatement	if ( code < 0 )		11022218	1					
ANR	11022579	Condition	code < 0	6044:12:194762:194769	11022218	0	True				
ANR	11022580	RelationalExpression	code < 0		11022218	0		<			
ANR	11022581	Identifier	code		11022218	0					
ANR	11022582	PrimaryExpression	0		11022218	1					
ANR	11022583	ReturnStatement	return code ;	6045:12:194784:194795	11022218	1	True				
ANR	11022584	Identifier	code		11022218	0					
ANR	11022585	ExpressionStatement	"obj -> numcomponents ( i_ctx_p , parr , & i )"	6049:4:194860:194897	11022218	12	True				
ANR	11022586	CallExpression	"obj -> numcomponents ( i_ctx_p , parr , & i )"		11022218	0					
ANR	11022587	Callee	obj -> numcomponents		11022218	0					
ANR	11022588	PtrMemberAccess	obj -> numcomponents		11022218	0					
ANR	11022589	Identifier	obj		11022218	0					
ANR	11022590	Identifier	numcomponents		11022218	1					
ANR	11022591	ArgumentList	i_ctx_p		11022218	1					
ANR	11022592	Argument	i_ctx_p		11022218	0					
ANR	11022593	Identifier	i_ctx_p		11022218	0					
ANR	11022594	Argument	parr		11022218	1					
ANR	11022595	Identifier	parr		11022218	0					
ANR	11022596	Argument	& i		11022218	2					
ANR	11022597	UnaryOperationExpression	& i		11022218	0					
ANR	11022598	UnaryOperator	&		11022218	0					
ANR	11022599	Identifier	i		11022218	1					
ANR	11022600	ExpressionStatement	pop ( i )	6050:4:194903:194909	11022218	13	True				
ANR	11022601	CallExpression	pop ( i )		11022218	0					
ANR	11022602	Callee	pop		11022218	0					
ANR	11022603	Identifier	pop		11022218	0					
ANR	11022604	ArgumentList	i		11022218	1					
ANR	11022605	Argument	i		11022218	0					
ANR	11022606	Identifier	i		11022218	0					
ANR	11022607	ExpressionStatement	esp -= 5	6051:4:194915:194923	11022218	14	True				
ANR	11022608	AssignmentExpression	esp -= 5		11022218	0		-=			
ANR	11022609	Identifier	esp		11022218	0					
ANR	11022610	PrimaryExpression	5		11022218	1					
ANR	11022611	ReturnStatement	return o_pop_estack ;	6052:4:194929:194948	11022218	15	True				
ANR	11022612	Identifier	o_pop_estack		11022218	0					
ANR	11022613	ReturnType	static int		11022218	1					
ANR	11022614	Identifier	setcolor_cont		11022218	2					
ANR	11022615	ParameterList	i_ctx_t * i_ctx_p		11022218	3					
ANR	11022616	Parameter	i_ctx_t * i_ctx_p	5984:14:192600:192615	11022218	0	True				
ANR	11022617	ParameterType	i_ctx_t *		11022218	0					
ANR	11022618	Identifier	i_ctx_p		11022218	1					
ANR	11022619	CFGEntryNode	ENTRY		11022218		True				
ANR	11022620	CFGExitNode	EXIT		11022218		True				
ANR	11022621	Symbol	& arr		11022218						
ANR	11022622	Symbol	stack_depth		11022218						
ANR	11022623	Symbol	& istate -> colorspace [ 0 ] . array		11022218						
ANR	11022624	Symbol	obj -> alternateproc		11022218						
ANR	11022625	Symbol	esp		11022218						
ANR	11022626	Symbol	code		11022218						
ANR	11022627	Symbol	parr		11022218						
ANR	11022628	Symbol	i_ctx_p -> pgs		11022218						
ANR	11022629	Symbol	& usealternate		11022218						
ANR	11022630	Symbol	o_pop_estack		11022218						
ANR	11022631	Symbol	ep [ - 1 ] . value		11022218						
ANR	11022632	Symbol	obj -> name		11022218						
ANR	11022633	Symbol	* istate		11022218						
ANR	11022634	Symbol	gs_error_typecheck		11022218						
ANR	11022635	Symbol	& stage		11022218						
ANR	11022636	Symbol	ep [ - 3 ] . value		11022218						
ANR	11022637	Symbol	* i_ctx_p		11022218						
ANR	11022638	Symbol	setcolor_cont		11022218						
ANR	11022639	Symbol	& obj		11022218						
ANR	11022640	Symbol	istate -> colorspace		11022218						
ANR	11022641	Symbol	CIESubst		11022218						
ANR	11022642	Symbol	* istate -> colorspace		11022218						
ANR	11022643	Symbol	arr		11022218						
ANR	11022644	Symbol	strcmp		11022218						
ANR	11022645	Symbol	* obj		11022218						
ANR	11022646	Symbol	& parr		11022218						
ANR	11022647	Symbol	IsICC		11022218						
ANR	11022648	Symbol	& stack_depth		11022218						
ANR	11022649	Symbol	i		11022218						
ANR	11022650	Symbol	ep [ - 1 ] . value . intval		11022218						
ANR	11022651	Symbol	usealternate		11022218						
ANR	11022652	Symbol	ep		11022218						
ANR	11022653	Symbol	ep [ - 2 ] . value . intval		11022218						
ANR	11022654	Symbol	get_space_object		11022218						
ANR	11022655	Symbol	& CIESubst		11022218						
ANR	11022656	Symbol	gx_set_dev_color		11022218						
ANR	11022657	Symbol	& i		11022218						
ANR	11022658	Symbol	ep [ - 2 ] . value		11022218						
ANR	11022659	Symbol	* ep		11022218						
ANR	11022660	Symbol	depth		11022218						
ANR	11022661	Symbol	ep [ - 3 ] . value . intval		11022218						
ANR	11022662	Symbol	stage		11022218						
ANR	11022663	Symbol	i_ctx_p		11022218						
ANR	11022664	Symbol	obj		11022218						
ANR	11022665	Symbol	obj -> runtransformproc		11022218						
ANR	11022666	Symbol	* * istate		11022218						
ANR	11022667	Symbol	istate		11022218						
ANR	11022668	Function	setcolorspace_cont	6068:0:195778:197908							
ANR	11022669	FunctionDef	setcolorspace_cont (i_ctx_t * i_ctx_p)		11022668	0					
ANR	11022670	CompoundStatement		6070:0:195826:197908	11022668	0					
ANR	11022671	IdentifierDeclStatement	"ref arr , * parr = & arr ;"	6071:4:195832:195853	11022668	0	True				
ANR	11022672	IdentifierDecl	arr		11022668	0					
ANR	11022673	IdentifierDeclType	ref		11022668	0					
ANR	11022674	Identifier	arr		11022668	1					
ANR	11022675	IdentifierDecl	* parr = & arr		11022668	1					
ANR	11022676	IdentifierDeclType	ref *		11022668	0					
ANR	11022677	Identifier	parr		11022668	1					
ANR	11022678	AssignmentExpression	* parr = & arr		11022668	2		=			
ANR	11022679	Identifier	parr		11022668	0					
ANR	11022680	UnaryOperationExpression	& arr		11022668	1					
ANR	11022681	UnaryOperator	&		11022668	0					
ANR	11022682	Identifier	arr		11022668	1					
ANR	11022683	IdentifierDeclStatement	os_ptr op = osp ;	6072:4:195859:195874	11022668	1	True				
ANR	11022684	IdentifierDecl	op = osp		11022668	0					
ANR	11022685	IdentifierDeclType	os_ptr		11022668	0					
ANR	11022686	Identifier	op		11022668	1					
ANR	11022687	AssignmentExpression	op = osp		11022668	2		=			
ANR	11022688	Identifier	osp		11022668	0					
ANR	11022689	Identifier	osp		11022668	1					
ANR	11022690	IdentifierDeclStatement	"es_ptr ep = esp , pdepth , pstage , pCIESubst ;"	6073:4:195880:195922	11022668	2	True				
ANR	11022691	IdentifierDecl	ep = esp		11022668	0					
ANR	11022692	IdentifierDeclType	es_ptr		11022668	0					
ANR	11022693	Identifier	ep		11022668	1					
ANR	11022694	AssignmentExpression	ep = esp		11022668	2		=			
ANR	11022695	Identifier	esp		11022668	0					
ANR	11022696	Identifier	esp		11022668	1					
ANR	11022697	IdentifierDecl	pdepth		11022668	1					
ANR	11022698	IdentifierDeclType	es_ptr		11022668	0					
ANR	11022699	Identifier	pdepth		11022668	1					
ANR	11022700	IdentifierDecl	pstage		11022668	2					
ANR	11022701	IdentifierDeclType	es_ptr		11022668	0					
ANR	11022702	Identifier	pstage		11022668	1					
ANR	11022703	IdentifierDecl	pCIESubst		11022668	3					
ANR	11022704	IdentifierDeclType	es_ptr		11022668	0					
ANR	11022705	Identifier	pCIESubst		11022668	1					
ANR	11022706	IdentifierDeclStatement	"int i , code = 0 , stage , cont , CIESubst = 0 ;"	6074:4:195928:195970	11022668	3	True				
ANR	11022707	IdentifierDecl	i		11022668	0					
ANR	11022708	IdentifierDeclType	int		11022668	0					
ANR	11022709	Identifier	i		11022668	1					
ANR	11022710	IdentifierDecl	code = 0		11022668	1					
ANR	11022711	IdentifierDeclType	int		11022668	0					
ANR	11022712	Identifier	code		11022668	1					
ANR	11022713	AssignmentExpression	code = 0		11022668	2		=			
ANR	11022714	Identifier	code		11022668	0					
ANR	11022715	PrimaryExpression	0		11022668	1					
ANR	11022716	IdentifierDecl	stage		11022668	2					
ANR	11022717	IdentifierDeclType	int		11022668	0					
ANR	11022718	Identifier	stage		11022668	1					
ANR	11022719	IdentifierDecl	cont		11022668	3					
ANR	11022720	IdentifierDeclType	int		11022668	0					
ANR	11022721	Identifier	cont		11022668	1					
ANR	11022722	IdentifierDecl	CIESubst = 0		11022668	4					
ANR	11022723	IdentifierDeclType	int		11022668	0					
ANR	11022724	Identifier	CIESubst		11022668	1					
ANR	11022725	AssignmentExpression	CIESubst = 0		11022668	2		=			
ANR	11022726	Identifier	CIESubst		11022668	0					
ANR	11022727	PrimaryExpression	0		11022668	1					
ANR	11022728	IdentifierDeclStatement	unsigned int depth ;	6075:4:195976:195994	11022668	4	True				
ANR	11022729	IdentifierDecl	depth		11022668	0					
ANR	11022730	IdentifierDeclType	unsigned int		11022668	0					
ANR	11022731	Identifier	depth		11022668	1					
ANR	11022732	IdentifierDeclStatement	PS_colour_space_t * obj ;	6076:4:196000:196022	11022668	5	True				
ANR	11022733	IdentifierDecl	* obj		11022668	0					
ANR	11022734	IdentifierDeclType	PS_colour_space_t *		11022668	0					
ANR	11022735	Identifier	obj		11022668	1					
ANR	11022736	ExpressionStatement	pCIESubst = & ep [ - 3 ]	6078:4:196029:196048	11022668	6	True				
ANR	11022737	AssignmentExpression	pCIESubst = & ep [ - 3 ]		11022668	0		=			
ANR	11022738	Identifier	pCIESubst		11022668	0					
ANR	11022739	UnaryOperationExpression	& ep [ - 3 ]		11022668	1					
ANR	11022740	UnaryOperator	&		11022668	0					
ANR	11022741	ArrayIndexing	ep [ - 3 ]		11022668	1					
ANR	11022742	Identifier	ep		11022668	0					
ANR	11022743	UnaryOperationExpression	- 3		11022668	1					
ANR	11022744	UnaryOperator	-		11022668	0					
ANR	11022745	PrimaryExpression	3		11022668	1					
ANR	11022746	ExpressionStatement	pdepth = & ep [ - 2 ]	6079:4:196054:196070	11022668	7	True				
ANR	11022747	AssignmentExpression	pdepth = & ep [ - 2 ]		11022668	0		=			
ANR	11022748	Identifier	pdepth		11022668	0					
ANR	11022749	UnaryOperationExpression	& ep [ - 2 ]		11022668	1					
ANR	11022750	UnaryOperator	&		11022668	0					
ANR	11022751	ArrayIndexing	ep [ - 2 ]		11022668	1					
ANR	11022752	Identifier	ep		11022668	0					
ANR	11022753	UnaryOperationExpression	- 2		11022668	1					
ANR	11022754	UnaryOperator	-		11022668	0					
ANR	11022755	PrimaryExpression	2		11022668	1					
ANR	11022756	ExpressionStatement	pstage = & ep [ - 1 ]	6080:4:196076:196092	11022668	8	True				
ANR	11022757	AssignmentExpression	pstage = & ep [ - 1 ]		11022668	0		=			
ANR	11022758	Identifier	pstage		11022668	0					
ANR	11022759	UnaryOperationExpression	& ep [ - 1 ]		11022668	1					
ANR	11022760	UnaryOperator	&		11022668	0					
ANR	11022761	ArrayIndexing	ep [ - 1 ]		11022668	1					
ANR	11022762	Identifier	ep		11022668	0					
ANR	11022763	UnaryOperationExpression	- 1		11022668	1					
ANR	11022764	UnaryOperator	-		11022668	0					
ANR	11022765	PrimaryExpression	1		11022668	1					
ANR	11022766	ExpressionStatement	CIESubst = ( int ) pCIESubst -> value . intval	6082:4:196099:196138	11022668	9	True				
ANR	11022767	AssignmentExpression	CIESubst = ( int ) pCIESubst -> value . intval		11022668	0		=			
ANR	11022768	Identifier	CIESubst		11022668	0					
ANR	11022769	CastExpression	( int ) pCIESubst -> value . intval		11022668	1					
ANR	11022770	CastTarget	int		11022668	0					
ANR	11022771	MemberAccess	pCIESubst -> value . intval		11022668	1					
ANR	11022772	PtrMemberAccess	pCIESubst -> value		11022668	0					
ANR	11022773	Identifier	pCIESubst		11022668	0					
ANR	11022774	Identifier	value		11022668	1					
ANR	11022775	Identifier	intval		11022668	1					
ANR	11022776	ExpressionStatement	depth = ( unsigned int ) pdepth -> value . intval	6083:4:196144:196186	11022668	10	True				
ANR	11022777	AssignmentExpression	depth = ( unsigned int ) pdepth -> value . intval		11022668	0		=			
ANR	11022778	Identifier	depth		11022668	0					
ANR	11022779	CastExpression	( unsigned int ) pdepth -> value . intval		11022668	1					
ANR	11022780	CastTarget	unsigned int		11022668	0					
ANR	11022781	MemberAccess	pdepth -> value . intval		11022668	1					
ANR	11022782	PtrMemberAccess	pdepth -> value		11022668	0					
ANR	11022783	Identifier	pdepth		11022668	0					
ANR	11022784	Identifier	value		11022668	1					
ANR	11022785	Identifier	intval		11022668	1					
ANR	11022786	ExpressionStatement	stage = ( int ) pstage -> value . intval	6084:4:196192:196225	11022668	11	True				
ANR	11022787	AssignmentExpression	stage = ( int ) pstage -> value . intval		11022668	0		=			
ANR	11022788	Identifier	stage		11022668	0					
ANR	11022789	CastExpression	( int ) pstage -> value . intval		11022668	1					
ANR	11022790	CastTarget	int		11022668	0					
ANR	11022791	MemberAccess	pstage -> value . intval		11022668	1					
ANR	11022792	PtrMemberAccess	pstage -> value		11022668	0					
ANR	11022793	Identifier	pstage		11022668	0					
ANR	11022794	Identifier	value		11022668	1					
ANR	11022795	Identifier	intval		11022668	1					
ANR	11022796	ExpressionStatement	check_estack ( 1 )	6089:4:196475:196490	11022668	12	True				
ANR	11022797	CallExpression	check_estack ( 1 )		11022668	0					
ANR	11022798	Callee	check_estack		11022668	0					
ANR	11022799	Identifier	check_estack		11022668	0					
ANR	11022800	ArgumentList	1		11022668	1					
ANR	11022801	Argument	1		11022668	0					
ANR	11022802	PrimaryExpression	1		11022668	0					
ANR	11022803	ExpressionStatement	push_op_estack ( setcolorspace_cont )	6090:4:196496:196530	11022668	13	True				
ANR	11022804	CallExpression	push_op_estack ( setcolorspace_cont )		11022668	0					
ANR	11022805	Callee	push_op_estack		11022668	0					
ANR	11022806	Identifier	push_op_estack		11022668	0					
ANR	11022807	ArgumentList	setcolorspace_cont		11022668	1					
ANR	11022808	Argument	setcolorspace_cont		11022668	0					
ANR	11022809	Identifier	setcolorspace_cont		11022668	0					
ANR	11022810	WhileStatement	while ( code == 0 && depth )		11022668	14					
ANR	11022811	Condition	code == 0 && depth	6092:11:196544:196561	11022668	0	True				
ANR	11022812	AndExpression	code == 0 && depth		11022668	0		&&			
ANR	11022813	EqualityExpression	code == 0		11022668	0		==			
ANR	11022814	Identifier	code		11022668	0					
ANR	11022815	PrimaryExpression	0		11022668	1					
ANR	11022816	Identifier	depth		11022668	1					
ANR	11022817	CompoundStatement		23:31:737:737	11022668	1					
ANR	11022818	ExpressionStatement	"ref_assign ( & arr , ep )"	6093:8:196574:196594	11022668	0	True				
ANR	11022819	CallExpression	"ref_assign ( & arr , ep )"		11022668	0					
ANR	11022820	Callee	ref_assign		11022668	0					
ANR	11022821	Identifier	ref_assign		11022668	0					
ANR	11022822	ArgumentList	& arr		11022668	1					
ANR	11022823	Argument	& arr		11022668	0					
ANR	11022824	UnaryOperationExpression	& arr		11022668	0					
ANR	11022825	UnaryOperator	&		11022668	0					
ANR	11022826	Identifier	arr		11022668	1					
ANR	11022827	Argument	ep		11022668	1					
ANR	11022828	Identifier	ep		11022668	0					
ANR	11022829	ForStatement	for ( i = 0 ; i < depth ; i ++ )		11022668	1					
ANR	11022830	ForInit	i = 0 ;	6097:13:196757:196762	11022668	0	True				
ANR	11022831	AssignmentExpression	i = 0		11022668	0		=			
ANR	11022832	Identifier	i		11022668	0					
ANR	11022833	PrimaryExpression	0		11022668	1					
ANR	11022834	Condition	i < depth	6097:19:196763:196771	11022668	1	True				
ANR	11022835	RelationalExpression	i < depth		11022668	0		<			
ANR	11022836	Identifier	i		11022668	0					
ANR	11022837	Identifier	depth		11022668	1					
ANR	11022838	PostIncDecOperationExpression	i ++	6097:29:196773:196775	11022668	2	True				
ANR	11022839	Identifier	i		11022668	0					
ANR	11022840	IncDec	++		11022668	1					
ANR	11022841	CompoundStatement		28:34:951:951	11022668	3					
ANR	11022842	ExpressionStatement	"code = get_space_object ( i_ctx_p , parr , & obj )"	6098:12:196792:196836	11022668	0	True				
ANR	11022843	AssignmentExpression	"code = get_space_object ( i_ctx_p , parr , & obj )"		11022668	0		=			
ANR	11022844	Identifier	code		11022668	0					
ANR	11022845	CallExpression	"get_space_object ( i_ctx_p , parr , & obj )"		11022668	1					
ANR	11022846	Callee	get_space_object		11022668	0					
ANR	11022847	Identifier	get_space_object		11022668	0					
ANR	11022848	ArgumentList	i_ctx_p		11022668	1					
ANR	11022849	Argument	i_ctx_p		11022668	0					
ANR	11022850	Identifier	i_ctx_p		11022668	0					
ANR	11022851	Argument	parr		11022668	1					
ANR	11022852	Identifier	parr		11022668	0					
ANR	11022853	Argument	& obj		11022668	2					
ANR	11022854	UnaryOperationExpression	& obj		11022668	0					
ANR	11022855	UnaryOperator	&		11022668	0					
ANR	11022856	Identifier	obj		11022668	1					
ANR	11022857	IfStatement	if ( code < 0 )		11022668	1					
ANR	11022858	Condition	code < 0	6099:16:196854:196861	11022668	0	True				
ANR	11022859	RelationalExpression	code < 0		11022668	0		<			
ANR	11022860	Identifier	code		11022668	0					
ANR	11022861	PrimaryExpression	0		11022668	1					
ANR	11022862	ReturnStatement	return code ;	6100:16:196880:196891	11022668	1	True				
ANR	11022863	Identifier	code		11022668	0					
ANR	11022864	IfStatement	if ( i < ( depth - 1 ) )		11022668	2					
ANR	11022865	Condition	i < ( depth - 1 )	6102:16:196910:196924	11022668	0	True				
ANR	11022866	RelationalExpression	i < ( depth - 1 )		11022668	0		<			
ANR	11022867	Identifier	i		11022668	0					
ANR	11022868	AdditiveExpression	depth - 1		11022668	1		-			
ANR	11022869	Identifier	depth		11022668	0					
ANR	11022870	PrimaryExpression	1		11022668	1					
ANR	11022871	CompoundStatement		33:33:1100:1100	11022668	1					
ANR	11022872	IfStatement	if ( ! obj -> alternateproc )		11022668	0					
ANR	11022873	Condition	! obj -> alternateproc	6103:20:196949:196967	11022668	0	True				
ANR	11022874	UnaryOperationExpression	! obj -> alternateproc		11022668	0					
ANR	11022875	UnaryOperator	!		11022668	0					
ANR	11022876	PtrMemberAccess	obj -> alternateproc		11022668	1					
ANR	11022877	Identifier	obj		11022668	0					
ANR	11022878	Identifier	alternateproc		11022668	1					
ANR	11022879	CompoundStatement		34:41:1143:1143	11022668	1					
ANR	11022880	ExpressionStatement	return_error ( gs_error_typecheck )	6104:20:196992:197024	11022668	0	True				
ANR	11022881	CallExpression	return_error ( gs_error_typecheck )		11022668	0					
ANR	11022882	Callee	return_error		11022668	0					
ANR	11022883	Identifier	return_error		11022668	0					
ANR	11022884	ArgumentList	gs_error_typecheck		11022668	1					
ANR	11022885	Argument	gs_error_typecheck		11022668	0					
ANR	11022886	Identifier	gs_error_typecheck		11022668	0					
ANR	11022887	ExpressionStatement	"code = obj -> alternateproc ( i_ctx_p , parr , & parr , & CIESubst )"	6106:16:197060:197118	11022668	1	True				
ANR	11022888	AssignmentExpression	"code = obj -> alternateproc ( i_ctx_p , parr , & parr , & CIESubst )"		11022668	0		=			
ANR	11022889	Identifier	code		11022668	0					
ANR	11022890	CallExpression	"obj -> alternateproc ( i_ctx_p , parr , & parr , & CIESubst )"		11022668	1					
ANR	11022891	Callee	obj -> alternateproc		11022668	0					
ANR	11022892	PtrMemberAccess	obj -> alternateproc		11022668	0					
ANR	11022893	Identifier	obj		11022668	0					
ANR	11022894	Identifier	alternateproc		11022668	1					
ANR	11022895	ArgumentList	i_ctx_p		11022668	1					
ANR	11022896	Argument	i_ctx_p		11022668	0					
ANR	11022897	Identifier	i_ctx_p		11022668	0					
ANR	11022898	Argument	parr		11022668	1					
ANR	11022899	Identifier	parr		11022668	0					
ANR	11022900	Argument	& parr		11022668	2					
ANR	11022901	UnaryOperationExpression	& parr		11022668	0					
ANR	11022902	UnaryOperator	&		11022668	0					
ANR	11022903	Identifier	parr		11022668	1					
ANR	11022904	Argument	& CIESubst		11022668	3					
ANR	11022905	UnaryOperationExpression	& CIESubst		11022668	0					
ANR	11022906	UnaryOperator	&		11022668	0					
ANR	11022907	Identifier	CIESubst		11022668	1					
ANR	11022908	IfStatement	if ( code < 0 )		11022668	2					
ANR	11022909	Condition	code < 0	6107:20:197140:197147	11022668	0	True				
ANR	11022910	RelationalExpression	code < 0		11022668	0		<			
ANR	11022911	Identifier	code		11022668	0					
ANR	11022912	PrimaryExpression	0		11022668	1					
ANR	11022913	ReturnStatement	return code ;	6108:20:197170:197181	11022668	1	True				
ANR	11022914	Identifier	code		11022668	0					
ANR	11022915	ExpressionStatement	"code = obj -> setproc ( i_ctx_p , parr , & stage , & cont , CIESubst )"	6112:8:197216:197275	11022668	2	True				
ANR	11022916	AssignmentExpression	"code = obj -> setproc ( i_ctx_p , parr , & stage , & cont , CIESubst )"		11022668	0		=			
ANR	11022917	Identifier	code		11022668	0					
ANR	11022918	CallExpression	"obj -> setproc ( i_ctx_p , parr , & stage , & cont , CIESubst )"		11022668	1					
ANR	11022919	Callee	obj -> setproc		11022668	0					
ANR	11022920	PtrMemberAccess	obj -> setproc		11022668	0					
ANR	11022921	Identifier	obj		11022668	0					
ANR	11022922	Identifier	setproc		11022668	1					
ANR	11022923	ArgumentList	i_ctx_p		11022668	1					
ANR	11022924	Argument	i_ctx_p		11022668	0					
ANR	11022925	Identifier	i_ctx_p		11022668	0					
ANR	11022926	Argument	parr		11022668	1					
ANR	11022927	Identifier	parr		11022668	0					
ANR	11022928	Argument	& stage		11022668	2					
ANR	11022929	UnaryOperationExpression	& stage		11022668	0					
ANR	11022930	UnaryOperator	&		11022668	0					
ANR	11022931	Identifier	stage		11022668	1					
ANR	11022932	Argument	& cont		11022668	3					
ANR	11022933	UnaryOperationExpression	& cont		11022668	0					
ANR	11022934	UnaryOperator	&		11022668	0					
ANR	11022935	Identifier	cont		11022668	1					
ANR	11022936	Argument	CIESubst		11022668	4					
ANR	11022937	Identifier	CIESubst		11022668	0					
ANR	11022938	ExpressionStatement	"make_int ( pstage , stage )"	6113:8:197285:197308	11022668	3	True				
ANR	11022939	CallExpression	"make_int ( pstage , stage )"		11022668	0					
ANR	11022940	Callee	make_int		11022668	0					
ANR	11022941	Identifier	make_int		11022668	0					
ANR	11022942	ArgumentList	pstage		11022668	1					
ANR	11022943	Argument	pstage		11022668	0					
ANR	11022944	Identifier	pstage		11022668	0					
ANR	11022945	Argument	stage		11022668	1					
ANR	11022946	Identifier	stage		11022668	0					
ANR	11022947	IfStatement	if ( code != 0 )		11022668	4					
ANR	11022948	Condition	code != 0	6114:12:197322:197330	11022668	0	True				
ANR	11022949	EqualityExpression	code != 0		11022668	0		!=			
ANR	11022950	Identifier	code		11022668	0					
ANR	11022951	PrimaryExpression	0		11022668	1					
ANR	11022952	CompoundStatement		45:23:1506:1506	11022668	1					
ANR	11022953	IfStatement	if ( code < 0 && code != gs_error_stackoverflow )		11022668	0					
ANR	11022954	Condition	code < 0 && code != gs_error_stackoverflow	6115:16:197351:197392	11022668	0	True				
ANR	11022955	AndExpression	code < 0 && code != gs_error_stackoverflow		11022668	0		&&			
ANR	11022956	RelationalExpression	code < 0		11022668	0		<			
ANR	11022957	Identifier	code		11022668	0					
ANR	11022958	PrimaryExpression	0		11022668	1					
ANR	11022959	EqualityExpression	code != gs_error_stackoverflow		11022668	1		!=			
ANR	11022960	Identifier	code		11022668	0					
ANR	11022961	Identifier	gs_error_stackoverflow		11022668	1					
ANR	11022962	ExpressionStatement	esp -= 5	6116:16:197411:197419	11022668	1	True				
ANR	11022963	AssignmentExpression	esp -= 5		11022668	0		-=			
ANR	11022964	Identifier	esp		11022668	0					
ANR	11022965	PrimaryExpression	5		11022668	1					
ANR	11022966	ReturnStatement	return code ;	6117:12:197433:197444	11022668	1	True				
ANR	11022967	Identifier	code		11022668	0					
ANR	11022968	IfStatement	if ( ! cont )		11022668	5					
ANR	11022969	Condition	! cont	6119:12:197468:197472	11022668	0	True				
ANR	11022970	UnaryOperationExpression	! cont		11022668	0					
ANR	11022971	UnaryOperator	!		11022668	0					
ANR	11022972	Identifier	cont		11022668	1					
ANR	11022973	CompoundStatement		50:19:1648:1648	11022668	1					
ANR	11022974	ExpressionStatement	"make_int ( pdepth , -- depth )"	6121:12:197551:197576	11022668	0	True				
ANR	11022975	CallExpression	"make_int ( pdepth , -- depth )"		11022668	0					
ANR	11022976	Callee	make_int		11022668	0					
ANR	11022977	Identifier	make_int		11022668	0					
ANR	11022978	ArgumentList	pdepth		11022668	1					
ANR	11022979	Argument	pdepth		11022668	0					
ANR	11022980	Identifier	pdepth		11022668	0					
ANR	11022981	Argument	-- depth		11022668	1					
ANR	11022982	UnaryExpression	-- depth		11022668	0					
ANR	11022983	IncDec	--		11022668	0					
ANR	11022984	Identifier	depth		11022668	1					
ANR	11022985	ExpressionStatement	parr = & arr	6122:12:197590:197601	11022668	1	True				
ANR	11022986	AssignmentExpression	parr = & arr		11022668	0		=			
ANR	11022987	Identifier	parr		11022668	0					
ANR	11022988	UnaryOperationExpression	& arr		11022668	1					
ANR	11022989	UnaryOperator	&		11022668	0					
ANR	11022990	Identifier	arr		11022668	1					
ANR	11022991	IfStatement	if ( code == 0 )		11022668	15					
ANR	11022992	Condition	code == 0	6125:8:197627:197635	11022668	0	True				
ANR	11022993	EqualityExpression	code == 0		11022668	0		==			
ANR	11022994	Identifier	code		11022668	0					
ANR	11022995	PrimaryExpression	0		11022668	1					
ANR	11022996	CompoundStatement		56:19:1811:1811	11022668	1					
ANR	11022997	ExpressionStatement	esp -= 5	6127:8:197704:197712	11022668	0	True				
ANR	11022998	AssignmentExpression	esp -= 5		11022668	0		-=			
ANR	11022999	Identifier	esp		11022668	0					
ANR	11023000	PrimaryExpression	5		11022668	1					
ANR	11023001	ExpressionStatement	op = osp	6128:8:197722:197730	11022668	1	True				
ANR	11023002	AssignmentExpression	op = osp		11022668	0		=			
ANR	11023003	Identifier	op		11022668	0					
ANR	11023004	Identifier	osp		11022668	1					
ANR	11023005	ExpressionStatement	istate -> colorspace [ 0 ] . array = * op	6129:8:197740:197773	11022668	2	True				
ANR	11023006	AssignmentExpression	istate -> colorspace [ 0 ] . array = * op		11022668	0		=			
ANR	11023007	MemberAccess	istate -> colorspace [ 0 ] . array		11022668	0					
ANR	11023008	ArrayIndexing	istate -> colorspace [ 0 ]		11022668	0					
ANR	11023009	PtrMemberAccess	istate -> colorspace		11022668	0					
ANR	11023010	Identifier	istate		11022668	0					
ANR	11023011	Identifier	colorspace		11022668	1					
ANR	11023012	PrimaryExpression	0		11022668	1					
ANR	11023013	Identifier	array		11022668	1					
ANR	11023014	UnaryOperationExpression	* op		11022668	1					
ANR	11023015	UnaryOperator	*		11022668	0					
ANR	11023016	Identifier	op		11022668	1					
ANR	11023017	ExpressionStatement	pop ( 1 )	6131:8:197848:197854	11022668	3	True				
ANR	11023018	CallExpression	pop ( 1 )		11022668	0					
ANR	11023019	Callee	pop		11022668	0					
ANR	11023020	Identifier	pop		11022668	0					
ANR	11023021	ArgumentList	1		11022668	1					
ANR	11023022	Argument	1		11022668	0					
ANR	11023023	PrimaryExpression	1		11022668	0					
ANR	11023024	ExpressionStatement	code = o_pop_estack	6132:8:197864:197883	11022668	4	True				
ANR	11023025	AssignmentExpression	code = o_pop_estack		11022668	0		=			
ANR	11023026	Identifier	code		11022668	0					
ANR	11023027	Identifier	o_pop_estack		11022668	1					
ANR	11023028	ReturnStatement	return code ;	6134:4:197895:197906	11022668	16	True				
ANR	11023029	Identifier	code		11022668	0					
ANR	11023030	ReturnType	static int		11022668	1					
ANR	11023031	Identifier	setcolorspace_cont		11022668	2					
ANR	11023032	ParameterList	i_ctx_t * i_ctx_p		11022668	3					
ANR	11023033	Parameter	i_ctx_t * i_ctx_p	6069:19:195808:195823	11022668	0	True				
ANR	11023034	ParameterType	i_ctx_t *		11022668	0					
ANR	11023035	Identifier	i_ctx_p		11022668	1					
ANR	11023036	CFGEntryNode	ENTRY		11022668		True				
ANR	11023037	CFGExitNode	EXIT		11022668		True				
ANR	11023038	Symbol	& arr		11022668						
ANR	11023039	Symbol	pdepth -> value		11022668						
ANR	11023040	Symbol	* pdepth		11022668						
ANR	11023041	Symbol	istate -> colorspace [ 0 ] . array		11022668						
ANR	11023042	Symbol	obj -> alternateproc		11022668						
ANR	11023043	Symbol	esp		11022668						
ANR	11023044	Symbol	code		11022668						
ANR	11023045	Symbol	* op		11022668						
ANR	11023046	Symbol	parr		11022668						
ANR	11023047	Symbol	o_pop_estack		11022668						
ANR	11023048	Symbol	osp		11022668						
ANR	11023049	Symbol	* istate		11022668						
ANR	11023050	Symbol	pCIESubst -> value		11022668						
ANR	11023051	Symbol	pstage -> value . intval		11022668						
ANR	11023052	Symbol	gs_error_typecheck		11022668						
ANR	11023053	Symbol	& stage		11022668						
ANR	11023054	Symbol	setcolorspace_cont		11022668						
ANR	11023055	Symbol	& obj		11022668						
ANR	11023056	Symbol	istate -> colorspace		11022668						
ANR	11023057	Symbol	pdepth		11022668						
ANR	11023058	Symbol	cont		11022668						
ANR	11023059	Symbol	CIESubst		11022668						
ANR	11023060	Symbol	* istate -> colorspace		11022668						
ANR	11023061	Symbol	arr		11022668						
ANR	11023062	Symbol	op		11022668						
ANR	11023063	Symbol	* obj		11022668						
ANR	11023064	Symbol	& parr		11022668						
ANR	11023065	Symbol	obj -> setproc		11022668						
ANR	11023066	Symbol	pdepth -> value . intval		11022668						
ANR	11023067	Symbol	& cont		11022668						
ANR	11023068	Symbol	* pstage		11022668						
ANR	11023069	Symbol	pstage		11022668						
ANR	11023070	Symbol	i		11022668						
ANR	11023071	Symbol	ep		11022668						
ANR	11023072	Symbol	pstage -> value		11022668						
ANR	11023073	Symbol	get_space_object		11022668						
ANR	11023074	Symbol	& CIESubst		11022668						
ANR	11023075	Symbol	pCIESubst -> value . intval		11022668						
ANR	11023076	Symbol	depth		11022668						
ANR	11023077	Symbol	stage		11022668						
ANR	11023078	Symbol	i_ctx_p		11022668						
ANR	11023079	Symbol	obj		11022668						
ANR	11023080	Symbol	* pCIESubst		11022668						
ANR	11023081	Symbol	pCIESubst		11022668						
ANR	11023082	Symbol	gs_error_stackoverflow		11022668						
ANR	11023083	Symbol	* * istate		11022668						
ANR	11023084	Symbol	istate		11022668						
ANR	11023085	Function	setdevicecolor_cont	6149:0:198629:200513							
ANR	11023086	FunctionDef	setdevicecolor_cont (i_ctx_t * i_ctx_p)		11023085	0					
ANR	11023087	CompoundStatement		6151:0:198678:200513	11023085	0					
ANR	11023088	IdentifierDeclStatement	os_ptr op = osp ;	6152:4:198684:198699	11023085	0	True				
ANR	11023089	IdentifierDecl	op = osp		11023085	0					
ANR	11023090	IdentifierDeclType	os_ptr		11023085	0					
ANR	11023091	Identifier	op		11023085	1					
ANR	11023092	AssignmentExpression	op = osp		11023085	2		=			
ANR	11023093	Identifier	osp		11023085	0					
ANR	11023094	Identifier	osp		11023085	1					
ANR	11023095	IdentifierDeclStatement	"es_ptr ep = esp , pstage ;"	6153:4:198705:198728	11023085	1	True				
ANR	11023096	IdentifierDecl	ep = esp		11023085	0					
ANR	11023097	IdentifierDeclType	es_ptr		11023085	0					
ANR	11023098	Identifier	ep		11023085	1					
ANR	11023099	AssignmentExpression	ep = esp		11023085	2		=			
ANR	11023100	Identifier	esp		11023085	0					
ANR	11023101	Identifier	esp		11023085	1					
ANR	11023102	IdentifierDecl	pstage		11023085	1					
ANR	11023103	IdentifierDeclType	es_ptr		11023085	0					
ANR	11023104	Identifier	pstage		11023085	1					
ANR	11023105	IdentifierDeclStatement	"int code = 0 , stage , base ;"	6154:4:198734:198759	11023085	2	True				
ANR	11023106	IdentifierDecl	code = 0		11023085	0					
ANR	11023107	IdentifierDeclType	int		11023085	0					
ANR	11023108	Identifier	code		11023085	1					
ANR	11023109	AssignmentExpression	code = 0		11023085	2		=			
ANR	11023110	Identifier	code		11023085	0					
ANR	11023111	PrimaryExpression	0		11023085	1					
ANR	11023112	IdentifierDecl	stage		11023085	1					
ANR	11023113	IdentifierDeclType	int		11023085	0					
ANR	11023114	Identifier	stage		11023085	1					
ANR	11023115	IdentifierDecl	base		11023085	2					
ANR	11023116	IdentifierDeclType	int		11023085	0					
ANR	11023117	Identifier	base		11023085	1					
ANR	11023118	ExpressionStatement	pstage = ep	6156:4:198766:198777	11023085	3	True				
ANR	11023119	AssignmentExpression	pstage = ep		11023085	0		=			
ANR	11023120	Identifier	pstage		11023085	0					
ANR	11023121	Identifier	ep		11023085	1					
ANR	11023122	ExpressionStatement	base = ( int ) ep [ - 1 ] . value . intval	6157:4:198783:198814	11023085	4	True				
ANR	11023123	AssignmentExpression	base = ( int ) ep [ - 1 ] . value . intval		11023085	0		=			
ANR	11023124	Identifier	base		11023085	0					
ANR	11023125	CastExpression	( int ) ep [ - 1 ] . value . intval		11023085	1					
ANR	11023126	CastTarget	int		11023085	0					
ANR	11023127	MemberAccess	ep [ - 1 ] . value . intval		11023085	1					
ANR	11023128	MemberAccess	ep [ - 1 ] . value		11023085	0					
ANR	11023129	ArrayIndexing	ep [ - 1 ]		11023085	0					
ANR	11023130	Identifier	ep		11023085	0					
ANR	11023131	UnaryOperationExpression	- 1		11023085	1					
ANR	11023132	UnaryOperator	-		11023085	0					
ANR	11023133	PrimaryExpression	1		11023085	1					
ANR	11023134	Identifier	value		11023085	1					
ANR	11023135	Identifier	intval		11023085	1					
ANR	11023136	ExpressionStatement	stage = ( int ) pstage -> value . intval	6158:4:198820:198853	11023085	5	True				
ANR	11023137	AssignmentExpression	stage = ( int ) pstage -> value . intval		11023085	0		=			
ANR	11023138	Identifier	stage		11023085	0					
ANR	11023139	CastExpression	( int ) pstage -> value . intval		11023085	1					
ANR	11023140	CastTarget	int		11023085	0					
ANR	11023141	MemberAccess	pstage -> value . intval		11023085	1					
ANR	11023142	PtrMemberAccess	pstage -> value		11023085	0					
ANR	11023143	Identifier	pstage		11023085	0					
ANR	11023144	Identifier	value		11023085	1					
ANR	11023145	Identifier	intval		11023085	1					
ANR	11023146	ExpressionStatement	check_estack ( 1 )	6163:4:199103:199118	11023085	6	True				
ANR	11023147	CallExpression	check_estack ( 1 )		11023085	0					
ANR	11023148	Callee	check_estack		11023085	0					
ANR	11023149	Identifier	check_estack		11023085	0					
ANR	11023150	ArgumentList	1		11023085	1					
ANR	11023151	Argument	1		11023085	0					
ANR	11023152	PrimaryExpression	1		11023085	0					
ANR	11023153	ExpressionStatement	check_ostack ( 1 )	6165:4:199209:199224	11023085	7	True				
ANR	11023154	CallExpression	check_ostack ( 1 )		11023085	0					
ANR	11023155	Callee	check_ostack		11023085	0					
ANR	11023156	Identifier	check_ostack		11023085	0					
ANR	11023157	ArgumentList	1		11023085	1					
ANR	11023158	Argument	1		11023085	0					
ANR	11023159	PrimaryExpression	1		11023085	0					
ANR	11023160	ExpressionStatement	push_op_estack ( setdevicecolor_cont )	6167:4:199312:199347	11023085	8	True				
ANR	11023161	CallExpression	push_op_estack ( setdevicecolor_cont )		11023085	0					
ANR	11023162	Callee	push_op_estack		11023085	0					
ANR	11023163	Identifier	push_op_estack		11023085	0					
ANR	11023164	ArgumentList	setdevicecolor_cont		11023085	1					
ANR	11023165	Argument	setdevicecolor_cont		11023085	0					
ANR	11023166	Identifier	setdevicecolor_cont		11023085	0					
ANR	11023167	DoStatement	do		11023085	9					
ANR	11023168	CompoundStatement		19:7:678:678	11023085	0					
ANR	11023169	SwitchStatement	switch ( stage )		11023085	0					
ANR	11023170	Condition	stage	6170:15:199374:199378	11023085	0	True				
ANR	11023171	Identifier	stage		11023085	0					
ANR	11023172	CompoundStatement		20:22:702:702	11023085	1					
ANR	11023173	Label	case 0 :	6171:12:199395:199401	11023085	0	True				
ANR	11023174	ExpressionStatement	"make_int ( pstage , ++ stage )"	6172:16:199419:199444	11023085	1	True				
ANR	11023175	CallExpression	"make_int ( pstage , ++ stage )"		11023085	0					
ANR	11023176	Callee	make_int		11023085	0					
ANR	11023177	Identifier	make_int		11023085	0					
ANR	11023178	ArgumentList	pstage		11023085	1					
ANR	11023179	Argument	pstage		11023085	0					
ANR	11023180	Identifier	pstage		11023085	0					
ANR	11023181	Argument	++ stage		11023085	1					
ANR	11023182	UnaryExpression	++ stage		11023085	0					
ANR	11023183	IncDec	++		11023085	0					
ANR	11023184	Identifier	stage		11023085	1					
ANR	11023185	ExpressionStatement	push ( 1 )	6173:16:199462:199469	11023085	2	True				
ANR	11023186	CallExpression	push ( 1 )		11023085	0					
ANR	11023187	Callee	push		11023085	0					
ANR	11023188	Identifier	push		11023085	0					
ANR	11023189	ArgumentList	1		11023085	1					
ANR	11023190	Argument	1		11023085	0					
ANR	11023191	PrimaryExpression	1		11023085	0					
ANR	11023192	SwitchStatement	switch ( base )		11023085	3					
ANR	11023193	Condition	base	6174:23:199494:199497	11023085	0	True				
ANR	11023194	Identifier	base		11023085	0					
ANR	11023195	CompoundStatement		24:29:821:821	11023085	1					
ANR	11023196	Label	case 0 :	6175:20:199522:199528	11023085	0	True				
ANR	11023197	ExpressionStatement	"code = name_enter_string ( imemory , ""DeviceGray"" , op )"	6176:24:199571:199622	11023085	1	True				
ANR	11023198	AssignmentExpression	"code = name_enter_string ( imemory , ""DeviceGray"" , op )"		11023085	0		=			
ANR	11023199	Identifier	code		11023085	0					
ANR	11023200	CallExpression	"name_enter_string ( imemory , ""DeviceGray"" , op )"		11023085	1					
ANR	11023201	Callee	name_enter_string		11023085	0					
ANR	11023202	Identifier	name_enter_string		11023085	0					
ANR	11023203	ArgumentList	imemory		11023085	1					
ANR	11023204	Argument	imemory		11023085	0					
ANR	11023205	Identifier	imemory		11023085	0					
ANR	11023206	Argument	"""DeviceGray"""		11023085	1					
ANR	11023207	PrimaryExpression	"""DeviceGray"""		11023085	0					
ANR	11023208	Argument	op		11023085	2					
ANR	11023209	Identifier	op		11023085	0					
ANR	11023210	BreakStatement	break ;	6177:24:199648:199653	11023085	2	True				
ANR	11023211	Label	case 1 :	6178:20:199675:199681	11023085	3	True				
ANR	11023212	ExpressionStatement	"code = name_enter_string ( imemory , ""DeviceRGB"" , op )"	6179:24:199723:199773	11023085	4	True				
ANR	11023213	AssignmentExpression	"code = name_enter_string ( imemory , ""DeviceRGB"" , op )"		11023085	0		=			
ANR	11023214	Identifier	code		11023085	0					
ANR	11023215	CallExpression	"name_enter_string ( imemory , ""DeviceRGB"" , op )"		11023085	1					
ANR	11023216	Callee	name_enter_string		11023085	0					
ANR	11023217	Identifier	name_enter_string		11023085	0					
ANR	11023218	ArgumentList	imemory		11023085	1					
ANR	11023219	Argument	imemory		11023085	0					
ANR	11023220	Identifier	imemory		11023085	0					
ANR	11023221	Argument	"""DeviceRGB"""		11023085	1					
ANR	11023222	PrimaryExpression	"""DeviceRGB"""		11023085	0					
ANR	11023223	Argument	op		11023085	2					
ANR	11023224	Identifier	op		11023085	0					
ANR	11023225	BreakStatement	break ;	6180:24:199799:199804	11023085	5	True				
ANR	11023226	Label	case 2 :	6181:20:199826:199832	11023085	6	True				
ANR	11023227	ExpressionStatement	"code = name_enter_string ( imemory , ""DeviceCMYK"" , op )"	6182:24:199875:199926	11023085	7	True				
ANR	11023228	AssignmentExpression	"code = name_enter_string ( imemory , ""DeviceCMYK"" , op )"		11023085	0		=			
ANR	11023229	Identifier	code		11023085	0					
ANR	11023230	CallExpression	"name_enter_string ( imemory , ""DeviceCMYK"" , op )"		11023085	1					
ANR	11023231	Callee	name_enter_string		11023085	0					
ANR	11023232	Identifier	name_enter_string		11023085	0					
ANR	11023233	ArgumentList	imemory		11023085	1					
ANR	11023234	Argument	imemory		11023085	0					
ANR	11023235	Identifier	imemory		11023085	0					
ANR	11023236	Argument	"""DeviceCMYK"""		11023085	1					
ANR	11023237	PrimaryExpression	"""DeviceCMYK"""		11023085	0					
ANR	11023238	Argument	op		11023085	2					
ANR	11023239	Identifier	op		11023085	0					
ANR	11023240	BreakStatement	break ;	6183:24:199952:199957	11023085	8	True				
ANR	11023241	IfStatement	if ( code < 0 )		11023085	4					
ANR	11023242	Condition	code < 0	6185:20:199997:200004	11023085	0	True				
ANR	11023243	RelationalExpression	code < 0		11023085	0		<			
ANR	11023244	Identifier	code		11023085	0					
ANR	11023245	PrimaryExpression	0		11023085	1					
ANR	11023246	ReturnStatement	return code ;	6186:20:200027:200038	11023085	1	True				
ANR	11023247	Identifier	code		11023085	0					
ANR	11023248	ExpressionStatement	code = zsetcolorspace ( i_ctx_p )	6187:16:200056:200086	11023085	5	True				
ANR	11023249	AssignmentExpression	code = zsetcolorspace ( i_ctx_p )		11023085	0		=			
ANR	11023250	Identifier	code		11023085	0					
ANR	11023251	CallExpression	zsetcolorspace ( i_ctx_p )		11023085	1					
ANR	11023252	Callee	zsetcolorspace		11023085	0					
ANR	11023253	Identifier	zsetcolorspace		11023085	0					
ANR	11023254	ArgumentList	i_ctx_p		11023085	1					
ANR	11023255	Argument	i_ctx_p		11023085	0					
ANR	11023256	Identifier	i_ctx_p		11023085	0					
ANR	11023257	IfStatement	if ( code != 0 )		11023085	6					
ANR	11023258	Condition	code != 0	6188:20:200108:200116	11023085	0	True				
ANR	11023259	EqualityExpression	code != 0		11023085	0		!=			
ANR	11023260	Identifier	code		11023085	0					
ANR	11023261	PrimaryExpression	0		11023085	1					
ANR	11023262	ReturnStatement	return code ;	6189:20:200139:200150	11023085	1	True				
ANR	11023263	Identifier	code		11023085	0					
ANR	11023264	BreakStatement	break ;	6190:16:200168:200173	11023085	7	True				
ANR	11023265	Label	case 1 :	6191:12:200187:200193	11023085	8	True				
ANR	11023266	ExpressionStatement	"make_int ( pstage , ++ stage )"	6192:16:200211:200236	11023085	9	True				
ANR	11023267	CallExpression	"make_int ( pstage , ++ stage )"		11023085	0					
ANR	11023268	Callee	make_int		11023085	0					
ANR	11023269	Identifier	make_int		11023085	0					
ANR	11023270	ArgumentList	pstage		11023085	1					
ANR	11023271	Argument	pstage		11023085	0					
ANR	11023272	Identifier	pstage		11023085	0					
ANR	11023273	Argument	++ stage		11023085	1					
ANR	11023274	UnaryExpression	++ stage		11023085	0					
ANR	11023275	IncDec	++		11023085	0					
ANR	11023276	Identifier	stage		11023085	1					
ANR	11023277	ExpressionStatement	code = zsetcolor ( i_ctx_p )	6193:16:200254:200279	11023085	10	True				
ANR	11023278	AssignmentExpression	code = zsetcolor ( i_ctx_p )		11023085	0		=			
ANR	11023279	Identifier	code		11023085	0					
ANR	11023280	CallExpression	zsetcolor ( i_ctx_p )		11023085	1					
ANR	11023281	Callee	zsetcolor		11023085	0					
ANR	11023282	Identifier	zsetcolor		11023085	0					
ANR	11023283	ArgumentList	i_ctx_p		11023085	1					
ANR	11023284	Argument	i_ctx_p		11023085	0					
ANR	11023285	Identifier	i_ctx_p		11023085	0					
ANR	11023286	IfStatement	if ( code != 0 )		11023085	11					
ANR	11023287	Condition	code != 0	6194:20:200301:200309	11023085	0	True				
ANR	11023288	EqualityExpression	code != 0		11023085	0		!=			
ANR	11023289	Identifier	code		11023085	0					
ANR	11023290	PrimaryExpression	0		11023085	1					
ANR	11023291	ReturnStatement	return code ;	6195:20:200332:200343	11023085	1	True				
ANR	11023292	Identifier	code		11023085	0					
ANR	11023293	BreakStatement	break ;	6196:16:200361:200366	11023085	12	True				
ANR	11023294	Label	case 2 :	6197:12:200380:200386	11023085	13	True				
ANR	11023295	ExpressionStatement	esp -= 3	6198:16:200404:200412	11023085	14	True				
ANR	11023296	AssignmentExpression	esp -= 3		11023085	0		-=			
ANR	11023297	Identifier	esp		11023085	0					
ANR	11023298	PrimaryExpression	3		11023085	1					
ANR	11023299	ReturnStatement	return o_pop_estack ;	6199:16:200430:200449	11023085	15	True				
ANR	11023300	Identifier	o_pop_estack		11023085	0					
ANR	11023301	BreakStatement	break ;	6200:16:200467:200472	11023085	16	True				
ANR	11023302	Condition	1	6202:11:200495:200495	11023085	1	True				
ANR	11023303	PrimaryExpression	1		11023085	0					
ANR	11023304	ReturnStatement	return 0 ;	6203:4:200503:200511	11023085	10	True				
ANR	11023305	PrimaryExpression	0		11023085	0					
ANR	11023306	ReturnType	static int		11023085	1					
ANR	11023307	Identifier	setdevicecolor_cont		11023085	2					
ANR	11023308	ParameterList	i_ctx_t * i_ctx_p		11023085	3					
ANR	11023309	Parameter	i_ctx_t * i_ctx_p	6150:20:198660:198675	11023085	0	True				
ANR	11023310	ParameterType	i_ctx_t *		11023085	0					
ANR	11023311	Identifier	i_ctx_p		11023085	1					
ANR	11023312	CFGEntryNode	ENTRY		11023085		True				
ANR	11023313	CFGExitNode	EXIT		11023085		True				
ANR	11023314	Symbol	op		11023085						
ANR	11023315	Symbol	esp		11023085						
ANR	11023316	Symbol	code		11023085						
ANR	11023317	Symbol	* pstage		11023085						
ANR	11023318	Symbol	pstage		11023085						
ANR	11023319	Symbol	ep [ - 1 ] . value . intval		11023085						
ANR	11023320	Symbol	zsetcolor		11023085						
ANR	11023321	Symbol	ep		11023085						
ANR	11023322	Symbol	o_pop_estack		11023085						
ANR	11023323	Symbol	ep [ - 1 ] . value		11023085						
ANR	11023324	Symbol	pstage -> value		11023085						
ANR	11023325	Symbol	osp		11023085						
ANR	11023326	Symbol	name_enter_string		11023085						
ANR	11023327	Symbol	pstage -> value . intval		11023085						
ANR	11023328	Symbol	* ep		11023085						
ANR	11023329	Symbol	stage		11023085						
ANR	11023330	Symbol	i_ctx_p		11023085						
ANR	11023331	Symbol	zsetcolorspace		11023085						
ANR	11023332	Symbol	imemory		11023085						
ANR	11023333	Symbol	base		11023085						
ANR	11023334	Symbol	setdevicecolor_cont		11023085						
ANR	11023335	Function	zsetgray	6210:0:200701:201631							
ANR	11023336	FunctionDef	zsetgray (i_ctx_t * i_ctx_p)		11023335	0					
ANR	11023337	CompoundStatement		6212:0:200740:201631	11023335	0					
ANR	11023338	IdentifierDeclStatement	os_ptr op = osp ;	6213:4:200746:200762	11023335	0	True				
ANR	11023339	IdentifierDecl	op = osp		11023335	0					
ANR	11023340	IdentifierDeclType	os_ptr		11023335	0					
ANR	11023341	Identifier	op		11023335	1					
ANR	11023342	AssignmentExpression	op = osp		11023335	2		=			
ANR	11023343	Identifier	osp		11023335	0					
ANR	11023344	Identifier	osp		11023335	1					
ANR	11023345	IdentifierDeclStatement	float value ;	6214:4:200801:200812	11023335	1	True				
ANR	11023346	IdentifierDecl	value		11023335	0					
ANR	11023347	IdentifierDeclType	float		11023335	0					
ANR	11023348	Identifier	value		11023335	1					
ANR	11023349	IdentifierDeclStatement	int code ;	6215:4:200818:200826	11023335	2	True				
ANR	11023350	IdentifierDecl	code		11023335	0					
ANR	11023351	IdentifierDeclType	int		11023335	0					
ANR	11023352	Identifier	code		11023335	1					
ANR	11023353	ExpressionStatement	"code = float_params ( op , 1 , & value )"	6218:4:200875:200909	11023335	3	True				
ANR	11023354	AssignmentExpression	"code = float_params ( op , 1 , & value )"		11023335	0		=			
ANR	11023355	Identifier	code		11023335	0					
ANR	11023356	CallExpression	"float_params ( op , 1 , & value )"		11023335	1					
ANR	11023357	Callee	float_params		11023335	0					
ANR	11023358	Identifier	float_params		11023335	0					
ANR	11023359	ArgumentList	op		11023335	1					
ANR	11023360	Argument	op		11023335	0					
ANR	11023361	Identifier	op		11023335	0					
ANR	11023362	Argument	1		11023335	1					
ANR	11023363	PrimaryExpression	1		11023335	0					
ANR	11023364	Argument	& value		11023335	2					
ANR	11023365	UnaryOperationExpression	& value		11023335	0					
ANR	11023366	UnaryOperator	&		11023335	0					
ANR	11023367	Identifier	value		11023335	1					
ANR	11023368	IfStatement	if ( code < 0 )		11023335	4					
ANR	11023369	Condition	code < 0	6219:8:200919:200926	11023335	0	True				
ANR	11023370	RelationalExpression	code < 0		11023335	0		<			
ANR	11023371	Identifier	code		11023335	0					
ANR	11023372	PrimaryExpression	0		11023335	1					
ANR	11023373	ReturnStatement	return code ;	6220:8:200937:200948	11023335	1	True				
ANR	11023374	Identifier	code		11023335	0					
ANR	11023375	IfStatement	if ( value < 0 )		11023335	5					
ANR	11023376	Condition	value < 0	6222:8:200999:201007	11023335	0	True				
ANR	11023377	RelationalExpression	value < 0		11023335	0		<			
ANR	11023378	Identifier	value		11023335	0					
ANR	11023379	PrimaryExpression	0		11023335	1					
ANR	11023380	ExpressionStatement	value = 0	6223:8:201018:201027	11023335	1	True				
ANR	11023381	AssignmentExpression	value = 0		11023335	0		=			
ANR	11023382	Identifier	value		11023335	0					
ANR	11023383	PrimaryExpression	0		11023335	1					
ANR	11023384	ElseStatement	else		11023335	0					
ANR	11023385	IfStatement	if ( value > 1 )		11023335	0					
ANR	11023386	Condition	value > 1	6224:13:201042:201050	11023335	0	True				
ANR	11023387	RelationalExpression	value > 1		11023335	0		>			
ANR	11023388	Identifier	value		11023335	0					
ANR	11023389	PrimaryExpression	1		11023335	1					
ANR	11023390	ExpressionStatement	value = 1	6225:8:201061:201070	11023335	1	True				
ANR	11023391	AssignmentExpression	value = 1		11023335	0		=			
ANR	11023392	Identifier	value		11023335	0					
ANR	11023393	PrimaryExpression	1		11023335	1					
ANR	11023394	ExpressionStatement	"code = make_floats ( op , & value , 1 )"	6226:4:201076:201109	11023335	6	True				
ANR	11023395	AssignmentExpression	"code = make_floats ( op , & value , 1 )"		11023335	0		=			
ANR	11023396	Identifier	code		11023335	0					
ANR	11023397	CallExpression	"make_floats ( op , & value , 1 )"		11023335	1					
ANR	11023398	Callee	make_floats		11023335	0					
ANR	11023399	Identifier	make_floats		11023335	0					
ANR	11023400	ArgumentList	op		11023335	1					
ANR	11023401	Argument	op		11023335	0					
ANR	11023402	Identifier	op		11023335	0					
ANR	11023403	Argument	& value		11023335	1					
ANR	11023404	UnaryOperationExpression	& value		11023335	0					
ANR	11023405	UnaryOperator	&		11023335	0					
ANR	11023406	Identifier	value		11023335	1					
ANR	11023407	Argument	1		11023335	2					
ANR	11023408	PrimaryExpression	1		11023335	0					
ANR	11023409	IfStatement	if ( code < 0 )		11023335	7					
ANR	11023410	Condition	code < 0	6227:8:201119:201126	11023335	0	True				
ANR	11023411	RelationalExpression	code < 0		11023335	0		<			
ANR	11023412	Identifier	code		11023335	0					
ANR	11023413	PrimaryExpression	0		11023335	1					
ANR	11023414	ReturnStatement	return code ;	6228:8:201137:201148	11023335	1	True				
ANR	11023415	Identifier	code		11023335	0					
ANR	11023416	ExpressionStatement	check_estack ( 5 )	6232:4:201278:201293	11023335	8	True				
ANR	11023417	CallExpression	check_estack ( 5 )		11023335	0					
ANR	11023418	Callee	check_estack		11023335	0					
ANR	11023419	Identifier	check_estack		11023335	0					
ANR	11023420	ArgumentList	5		11023335	1					
ANR	11023421	Argument	5		11023335	0					
ANR	11023422	PrimaryExpression	5		11023335	0					
ANR	11023423	ExpressionStatement	"push_mark_estack ( es_other , colour_cleanup )"	6233:4:201299:201341	11023335	9	True				
ANR	11023424	CallExpression	"push_mark_estack ( es_other , colour_cleanup )"		11023335	0					
ANR	11023425	Callee	push_mark_estack		11023335	0					
ANR	11023426	Identifier	push_mark_estack		11023335	0					
ANR	11023427	ArgumentList	es_other		11023335	1					
ANR	11023428	Argument	es_other		11023335	0					
ANR	11023429	Identifier	es_other		11023335	0					
ANR	11023430	Argument	colour_cleanup		11023335	1					
ANR	11023431	Identifier	colour_cleanup		11023335	0					
ANR	11023432	ExpressionStatement	esp ++	6234:4:201347:201352	11023335	10	True				
ANR	11023433	PostIncDecOperationExpression	esp ++		11023335	0					
ANR	11023434	Identifier	esp		11023335	0					
ANR	11023435	IncDec	++		11023335	1					
ANR	11023436	ExpressionStatement	"make_int ( esp , 0 )"	6236:4:201406:201422	11023335	11	True				
ANR	11023437	CallExpression	"make_int ( esp , 0 )"		11023335	0					
ANR	11023438	Callee	make_int		11023335	0					
ANR	11023439	Identifier	make_int		11023335	0					
ANR	11023440	ArgumentList	esp		11023335	1					
ANR	11023441	Argument	esp		11023335	0					
ANR	11023442	Identifier	esp		11023335	0					
ANR	11023443	Argument	0		11023335	1					
ANR	11023444	PrimaryExpression	0		11023335	0					
ANR	11023445	ExpressionStatement	esp ++	6237:4:201428:201433	11023335	12	True				
ANR	11023446	PostIncDecOperationExpression	esp ++		11023335	0					
ANR	11023447	Identifier	esp		11023335	0					
ANR	11023448	IncDec	++		11023335	1					
ANR	11023449	ExpressionStatement	"make_int ( esp , 0 )"	6239:4:201495:201511	11023335	13	True				
ANR	11023450	CallExpression	"make_int ( esp , 0 )"		11023335	0					
ANR	11023451	Callee	make_int		11023335	0					
ANR	11023452	Identifier	make_int		11023335	0					
ANR	11023453	ArgumentList	esp		11023335	1					
ANR	11023454	Argument	esp		11023335	0					
ANR	11023455	Identifier	esp		11023335	0					
ANR	11023456	Argument	0		11023335	1					
ANR	11023457	PrimaryExpression	0		11023335	0					
ANR	11023458	ExpressionStatement	push_op_estack ( setdevicecolor_cont )	6241:4:201568:201603	11023335	14	True				
ANR	11023459	CallExpression	push_op_estack ( setdevicecolor_cont )		11023335	0					
ANR	11023460	Callee	push_op_estack		11023335	0					
ANR	11023461	Identifier	push_op_estack		11023335	0					
ANR	11023462	ArgumentList	setdevicecolor_cont		11023335	1					
ANR	11023463	Argument	setdevicecolor_cont		11023335	0					
ANR	11023464	Identifier	setdevicecolor_cont		11023335	0					
ANR	11023465	ReturnStatement	return o_push_estack ;	6242:4:201609:201629	11023335	15	True				
ANR	11023466	Identifier	o_push_estack		11023335	0					
ANR	11023467	ReturnType	static int		11023335	1					
ANR	11023468	Identifier	zsetgray		11023335	2					
ANR	11023469	ParameterList	i_ctx_t * i_ctx_p		11023335	3					
ANR	11023470	Parameter	i_ctx_t * i_ctx_p	6211:9:200721:200737	11023335	0	True				
ANR	11023471	ParameterType	i_ctx_t *		11023335	0					
ANR	11023472	Identifier	i_ctx_p		11023335	1					
ANR	11023473	CFGEntryNode	ENTRY		11023335		True				
ANR	11023474	CFGExitNode	EXIT		11023335		True				
ANR	11023475	Symbol	op		11023335						
ANR	11023476	Symbol	make_floats		11023335						
ANR	11023477	Symbol	code		11023335						
ANR	11023478	Symbol	& value		11023335						
ANR	11023479	Symbol	esp		11023335						
ANR	11023480	Symbol	float_params		11023335						
ANR	11023481	Symbol	colour_cleanup		11023335						
ANR	11023482	Symbol	osp		11023335						
ANR	11023483	Symbol	es_other		11023335						
ANR	11023484	Symbol	i_ctx_p		11023335						
ANR	11023485	Symbol	value		11023335						
ANR	11023486	Symbol	setdevicecolor_cont		11023335						
ANR	11023487	Symbol	o_push_estack		11023335						
ANR	11023488	Function	zsethsbcolor	6244:0:201633:202723							
ANR	11023489	FunctionDef	zsethsbcolor (i_ctx_t * i_ctx_p)		11023488	0					
ANR	11023490	CompoundStatement		6246:0:201676:202723	11023488	0					
ANR	11023491	IdentifierDeclStatement	os_ptr op = osp ;	6247:4:201682:201698	11023488	0	True				
ANR	11023492	IdentifierDecl	op = osp		11023488	0					
ANR	11023493	IdentifierDeclType	os_ptr		11023488	0					
ANR	11023494	Identifier	op		11023488	1					
ANR	11023495	AssignmentExpression	op = osp		11023488	2		=			
ANR	11023496	Identifier	osp		11023488	0					
ANR	11023497	Identifier	osp		11023488	1					
ANR	11023498	IdentifierDeclStatement	"int code , i ;"	6248:4:201737:201748	11023488	1	True				
ANR	11023499	IdentifierDecl	code		11023488	0					
ANR	11023500	IdentifierDeclType	int		11023488	0					
ANR	11023501	Identifier	code		11023488	1					
ANR	11023502	IdentifierDecl	i		11023488	1					
ANR	11023503	IdentifierDeclType	int		11023488	0					
ANR	11023504	Identifier	i		11023488	1					
ANR	11023505	IdentifierDeclStatement	float values [ 3 ] ;	6249:4:201754:201769	11023488	2	True				
ANR	11023506	IdentifierDecl	values [ 3 ]		11023488	0					
ANR	11023507	IdentifierDeclType	float [ 3 ]		11023488	0					
ANR	11023508	Identifier	values		11023488	1					
ANR	11023509	PrimaryExpression	3		11023488	2					
ANR	11023510	ExpressionStatement	"code = float_params ( op , 3 , ( float * ) & values )"	6252:4:201837:201881	11023488	3	True				
ANR	11023511	AssignmentExpression	"code = float_params ( op , 3 , ( float * ) & values )"		11023488	0		=			
ANR	11023512	Identifier	code		11023488	0					
ANR	11023513	CallExpression	"float_params ( op , 3 , ( float * ) & values )"		11023488	1					
ANR	11023514	Callee	float_params		11023488	0					
ANR	11023515	Identifier	float_params		11023488	0					
ANR	11023516	ArgumentList	op		11023488	1					
ANR	11023517	Argument	op		11023488	0					
ANR	11023518	Identifier	op		11023488	0					
ANR	11023519	Argument	3		11023488	1					
ANR	11023520	PrimaryExpression	3		11023488	0					
ANR	11023521	Argument	( float * ) & values		11023488	2					
ANR	11023522	CastExpression	( float * ) & values		11023488	0					
ANR	11023523	CastTarget	float *		11023488	0					
ANR	11023524	UnaryOperationExpression	& values		11023488	1					
ANR	11023525	UnaryOperator	&		11023488	0					
ANR	11023526	Identifier	values		11023488	1					
ANR	11023527	IfStatement	if ( code < 0 )		11023488	4					
ANR	11023528	Condition	code < 0	6253:8:201891:201898	11023488	0	True				
ANR	11023529	RelationalExpression	code < 0		11023488	0		<			
ANR	11023530	Identifier	code		11023488	0					
ANR	11023531	PrimaryExpression	0		11023488	1					
ANR	11023532	ReturnStatement	return code ;	6254:8:201909:201920	11023488	1	True				
ANR	11023533	Identifier	code		11023488	0					
ANR	11023534	ForStatement	for ( i = 0 ; i < 3 ; i ++ )		11023488	5					
ANR	11023535	ForInit	i = 0 ;	6256:9:201972:201977	11023488	0	True				
ANR	11023536	AssignmentExpression	i = 0		11023488	0		=			
ANR	11023537	Identifier	i		11023488	0					
ANR	11023538	PrimaryExpression	0		11023488	1					
ANR	11023539	Condition	i < 3	6256:15:201978:201982	11023488	1	True				
ANR	11023540	RelationalExpression	i < 3		11023488	0		<			
ANR	11023541	Identifier	i		11023488	0					
ANR	11023542	PrimaryExpression	3		11023488	1					
ANR	11023543	PostIncDecOperationExpression	i ++	6256:22:201985:201987	11023488	2	True				
ANR	11023544	Identifier	i		11023488	0					
ANR	11023545	IncDec	++		11023488	1					
ANR	11023546	CompoundStatement		11:27:313:313	11023488	3					
ANR	11023547	IfStatement	if ( values [ i ] < 0 )		11023488	0					
ANR	11023548	Condition	values [ i ] < 0	6257:12:202004:202016	11023488	0	True				
ANR	11023549	RelationalExpression	values [ i ] < 0		11023488	0		<			
ANR	11023550	ArrayIndexing	values [ i ]		11023488	0					
ANR	11023551	Identifier	values		11023488	0					
ANR	11023552	Identifier	i		11023488	1					
ANR	11023553	PrimaryExpression	0		11023488	1					
ANR	11023554	ExpressionStatement	values [ i ] = 0	6258:12:202031:202044	11023488	1	True				
ANR	11023555	AssignmentExpression	values [ i ] = 0		11023488	0		=			
ANR	11023556	ArrayIndexing	values [ i ]		11023488	0					
ANR	11023557	Identifier	values		11023488	0					
ANR	11023558	Identifier	i		11023488	1					
ANR	11023559	PrimaryExpression	0		11023488	1					
ANR	11023560	ElseStatement	else		11023488	0					
ANR	11023561	IfStatement	if ( values [ i ] > 1 )		11023488	0					
ANR	11023562	Condition	values [ i ] > 1	6259:17:202063:202075	11023488	0	True				
ANR	11023563	RelationalExpression	values [ i ] > 1		11023488	0		>			
ANR	11023564	ArrayIndexing	values [ i ]		11023488	0					
ANR	11023565	Identifier	values		11023488	0					
ANR	11023566	Identifier	i		11023488	1					
ANR	11023567	PrimaryExpression	1		11023488	1					
ANR	11023568	ExpressionStatement	values [ i ] = 1	6260:12:202090:202103	11023488	1	True				
ANR	11023569	AssignmentExpression	values [ i ] = 1		11023488	0		=			
ANR	11023570	ArrayIndexing	values [ i ]		11023488	0					
ANR	11023571	Identifier	values		11023488	0					
ANR	11023572	Identifier	i		11023488	1					
ANR	11023573	PrimaryExpression	1		11023488	1					
ANR	11023574	ExpressionStatement	hsb2rgb ( ( float * ) & values )	6263:4:202116:202141	11023488	6	True				
ANR	11023575	CallExpression	hsb2rgb ( ( float * ) & values )		11023488	0					
ANR	11023576	Callee	hsb2rgb		11023488	0					
ANR	11023577	Identifier	hsb2rgb		11023488	0					
ANR	11023578	ArgumentList	( float * ) & values		11023488	1					
ANR	11023579	Argument	( float * ) & values		11023488	0					
ANR	11023580	CastExpression	( float * ) & values		11023488	0					
ANR	11023581	CastTarget	float *		11023488	0					
ANR	11023582	UnaryOperationExpression	& values		11023488	1					
ANR	11023583	UnaryOperator	&		11023488	0					
ANR	11023584	Identifier	values		11023488	1					
ANR	11023585	ExpressionStatement	"code = make_floats ( & op [ - 2 ] , ( const float * ) & values , 3 )"	6265:4:202148:202202	11023488	7	True				
ANR	11023586	AssignmentExpression	"code = make_floats ( & op [ - 2 ] , ( const float * ) & values , 3 )"		11023488	0		=			
ANR	11023587	Identifier	code		11023488	0					
ANR	11023588	CallExpression	"make_floats ( & op [ - 2 ] , ( const float * ) & values , 3 )"		11023488	1					
ANR	11023589	Callee	make_floats		11023488	0					
ANR	11023590	Identifier	make_floats		11023488	0					
ANR	11023591	ArgumentList	& op [ - 2 ]		11023488	1					
ANR	11023592	Argument	& op [ - 2 ]		11023488	0					
ANR	11023593	UnaryOperationExpression	& op [ - 2 ]		11023488	0					
ANR	11023594	UnaryOperator	&		11023488	0					
ANR	11023595	ArrayIndexing	op [ - 2 ]		11023488	1					
ANR	11023596	Identifier	op		11023488	0					
ANR	11023597	UnaryOperationExpression	- 2		11023488	1					
ANR	11023598	UnaryOperator	-		11023488	0					
ANR	11023599	PrimaryExpression	2		11023488	1					
ANR	11023600	Argument	( const float * ) & values		11023488	1					
ANR	11023601	CastExpression	( const float * ) & values		11023488	0					
ANR	11023602	CastTarget	const float *		11023488	0					
ANR	11023603	UnaryOperationExpression	& values		11023488	1					
ANR	11023604	UnaryOperator	&		11023488	0					
ANR	11023605	Identifier	values		11023488	1					
ANR	11023606	Argument	3		11023488	2					
ANR	11023607	PrimaryExpression	3		11023488	0					
ANR	11023608	IfStatement	if ( code < 0 )		11023488	8					
ANR	11023609	Condition	code < 0	6266:8:202212:202219	11023488	0	True				
ANR	11023610	RelationalExpression	code < 0		11023488	0		<			
ANR	11023611	Identifier	code		11023488	0					
ANR	11023612	PrimaryExpression	0		11023488	1					
ANR	11023613	ReturnStatement	return code ;	6267:8:202230:202241	11023488	1	True				
ANR	11023614	Identifier	code		11023488	0					
ANR	11023615	ExpressionStatement	check_estack ( 5 )	6271:4:202371:202386	11023488	9	True				
ANR	11023616	CallExpression	check_estack ( 5 )		11023488	0					
ANR	11023617	Callee	check_estack		11023488	0					
ANR	11023618	Identifier	check_estack		11023488	0					
ANR	11023619	ArgumentList	5		11023488	1					
ANR	11023620	Argument	5		11023488	0					
ANR	11023621	PrimaryExpression	5		11023488	0					
ANR	11023622	ExpressionStatement	"push_mark_estack ( es_other , colour_cleanup )"	6272:4:202392:202434	11023488	10	True				
ANR	11023623	CallExpression	"push_mark_estack ( es_other , colour_cleanup )"		11023488	0					
ANR	11023624	Callee	push_mark_estack		11023488	0					
ANR	11023625	Identifier	push_mark_estack		11023488	0					
ANR	11023626	ArgumentList	es_other		11023488	1					
ANR	11023627	Argument	es_other		11023488	0					
ANR	11023628	Identifier	es_other		11023488	0					
ANR	11023629	Argument	colour_cleanup		11023488	1					
ANR	11023630	Identifier	colour_cleanup		11023488	0					
ANR	11023631	ExpressionStatement	esp ++	6273:4:202440:202445	11023488	11	True				
ANR	11023632	PostIncDecOperationExpression	esp ++		11023488	0					
ANR	11023633	Identifier	esp		11023488	0					
ANR	11023634	IncDec	++		11023488	1					
ANR	11023635	ExpressionStatement	"make_int ( esp , 1 )"	6275:4:202498:202514	11023488	12	True				
ANR	11023636	CallExpression	"make_int ( esp , 1 )"		11023488	0					
ANR	11023637	Callee	make_int		11023488	0					
ANR	11023638	Identifier	make_int		11023488	0					
ANR	11023639	ArgumentList	esp		11023488	1					
ANR	11023640	Argument	esp		11023488	0					
ANR	11023641	Identifier	esp		11023488	0					
ANR	11023642	Argument	1		11023488	1					
ANR	11023643	PrimaryExpression	1		11023488	0					
ANR	11023644	ExpressionStatement	esp ++	6276:4:202520:202525	11023488	13	True				
ANR	11023645	PostIncDecOperationExpression	esp ++		11023488	0					
ANR	11023646	Identifier	esp		11023488	0					
ANR	11023647	IncDec	++		11023488	1					
ANR	11023648	ExpressionStatement	"make_int ( esp , 0 )"	6278:4:202587:202603	11023488	14	True				
ANR	11023649	CallExpression	"make_int ( esp , 0 )"		11023488	0					
ANR	11023650	Callee	make_int		11023488	0					
ANR	11023651	Identifier	make_int		11023488	0					
ANR	11023652	ArgumentList	esp		11023488	1					
ANR	11023653	Argument	esp		11023488	0					
ANR	11023654	Identifier	esp		11023488	0					
ANR	11023655	Argument	0		11023488	1					
ANR	11023656	PrimaryExpression	0		11023488	0					
ANR	11023657	ExpressionStatement	push_op_estack ( setdevicecolor_cont )	6280:4:202660:202695	11023488	15	True				
ANR	11023658	CallExpression	push_op_estack ( setdevicecolor_cont )		11023488	0					
ANR	11023659	Callee	push_op_estack		11023488	0					
ANR	11023660	Identifier	push_op_estack		11023488	0					
ANR	11023661	ArgumentList	setdevicecolor_cont		11023488	1					
ANR	11023662	Argument	setdevicecolor_cont		11023488	0					
ANR	11023663	Identifier	setdevicecolor_cont		11023488	0					
ANR	11023664	ReturnStatement	return o_push_estack ;	6281:4:202701:202721	11023488	16	True				
ANR	11023665	Identifier	o_push_estack		11023488	0					
ANR	11023666	ReturnType	static int		11023488	1					
ANR	11023667	Identifier	zsethsbcolor		11023488	2					
ANR	11023668	ParameterList	i_ctx_t * i_ctx_p		11023488	3					
ANR	11023669	Parameter	i_ctx_t * i_ctx_p	6245:13:201657:201673	11023488	0	True				
ANR	11023670	ParameterType	i_ctx_t *		11023488	0					
ANR	11023671	Identifier	i_ctx_p		11023488	1					
ANR	11023672	CFGEntryNode	ENTRY		11023488		True				
ANR	11023673	CFGExitNode	EXIT		11023488		True				
ANR	11023674	Symbol	op		11023488						
ANR	11023675	Symbol	make_floats		11023488						
ANR	11023676	Symbol	code		11023488						
ANR	11023677	Symbol	esp		11023488						
ANR	11023678	Symbol	float_params		11023488						
ANR	11023679	Symbol	& values		11023488						
ANR	11023680	Symbol	* values		11023488						
ANR	11023681	Symbol	values		11023488						
ANR	11023682	Symbol	i		11023488						
ANR	11023683	Symbol	colour_cleanup		11023488						
ANR	11023684	Symbol	osp		11023488						
ANR	11023685	Symbol	es_other		11023488						
ANR	11023686	Symbol	* i		11023488						
ANR	11023687	Symbol	i_ctx_p		11023488						
ANR	11023688	Symbol	setdevicecolor_cont		11023488						
ANR	11023689	Symbol	o_push_estack		11023488						
ANR	11023690	Function	zsetrgbcolor	6283:0:202725:203783							
ANR	11023691	FunctionDef	zsetrgbcolor (i_ctx_t * i_ctx_p)		11023690	0					
ANR	11023692	CompoundStatement		6285:0:202768:203783	11023690	0					
ANR	11023693	IdentifierDeclStatement	os_ptr op = osp ;	6286:4:202774:202790	11023690	0	True				
ANR	11023694	IdentifierDecl	op = osp		11023690	0					
ANR	11023695	IdentifierDeclType	os_ptr		11023690	0					
ANR	11023696	Identifier	op		11023690	1					
ANR	11023697	AssignmentExpression	op = osp		11023690	2		=			
ANR	11023698	Identifier	osp		11023690	0					
ANR	11023699	Identifier	osp		11023690	1					
ANR	11023700	IdentifierDeclStatement	"int code , i ;"	6287:4:202829:202840	11023690	1	True				
ANR	11023701	IdentifierDecl	code		11023690	0					
ANR	11023702	IdentifierDeclType	int		11023690	0					
ANR	11023703	Identifier	code		11023690	1					
ANR	11023704	IdentifierDecl	i		11023690	1					
ANR	11023705	IdentifierDeclType	int		11023690	0					
ANR	11023706	Identifier	i		11023690	1					
ANR	11023707	IdentifierDeclStatement	float values [ 3 ] ;	6288:4:202846:202861	11023690	2	True				
ANR	11023708	IdentifierDecl	values [ 3 ]		11023690	0					
ANR	11023709	IdentifierDeclType	float [ 3 ]		11023690	0					
ANR	11023710	Identifier	values		11023690	1					
ANR	11023711	PrimaryExpression	3		11023690	2					
ANR	11023712	ExpressionStatement	"code = float_params ( op , 3 , ( float * ) & values )"	6291:4:202929:202973	11023690	3	True				
ANR	11023713	AssignmentExpression	"code = float_params ( op , 3 , ( float * ) & values )"		11023690	0		=			
ANR	11023714	Identifier	code		11023690	0					
ANR	11023715	CallExpression	"float_params ( op , 3 , ( float * ) & values )"		11023690	1					
ANR	11023716	Callee	float_params		11023690	0					
ANR	11023717	Identifier	float_params		11023690	0					
ANR	11023718	ArgumentList	op		11023690	1					
ANR	11023719	Argument	op		11023690	0					
ANR	11023720	Identifier	op		11023690	0					
ANR	11023721	Argument	3		11023690	1					
ANR	11023722	PrimaryExpression	3		11023690	0					
ANR	11023723	Argument	( float * ) & values		11023690	2					
ANR	11023724	CastExpression	( float * ) & values		11023690	0					
ANR	11023725	CastTarget	float *		11023690	0					
ANR	11023726	UnaryOperationExpression	& values		11023690	1					
ANR	11023727	UnaryOperator	&		11023690	0					
ANR	11023728	Identifier	values		11023690	1					
ANR	11023729	IfStatement	if ( code < 0 )		11023690	4					
ANR	11023730	Condition	code < 0	6292:8:202983:202990	11023690	0	True				
ANR	11023731	RelationalExpression	code < 0		11023690	0		<			
ANR	11023732	Identifier	code		11023690	0					
ANR	11023733	PrimaryExpression	0		11023690	1					
ANR	11023734	ReturnStatement	return code ;	6293:8:203001:203012	11023690	1	True				
ANR	11023735	Identifier	code		11023690	0					
ANR	11023736	ForStatement	for ( i = 0 ; i < 3 ; i ++ )		11023690	5					
ANR	11023737	ForInit	i = 0 ;	6295:9:203064:203069	11023690	0	True				
ANR	11023738	AssignmentExpression	i = 0		11023690	0		=			
ANR	11023739	Identifier	i		11023690	0					
ANR	11023740	PrimaryExpression	0		11023690	1					
ANR	11023741	Condition	i < 3	6295:15:203070:203074	11023690	1	True				
ANR	11023742	RelationalExpression	i < 3		11023690	0		<			
ANR	11023743	Identifier	i		11023690	0					
ANR	11023744	PrimaryExpression	3		11023690	1					
ANR	11023745	PostIncDecOperationExpression	i ++	6295:22:203077:203079	11023690	2	True				
ANR	11023746	Identifier	i		11023690	0					
ANR	11023747	IncDec	++		11023690	1					
ANR	11023748	CompoundStatement		11:27:313:313	11023690	3					
ANR	11023749	IfStatement	if ( values [ i ] < 0 )		11023690	0					
ANR	11023750	Condition	values [ i ] < 0	6296:12:203096:203108	11023690	0	True				
ANR	11023751	RelationalExpression	values [ i ] < 0		11023690	0		<			
ANR	11023752	ArrayIndexing	values [ i ]		11023690	0					
ANR	11023753	Identifier	values		11023690	0					
ANR	11023754	Identifier	i		11023690	1					
ANR	11023755	PrimaryExpression	0		11023690	1					
ANR	11023756	ExpressionStatement	values [ i ] = 0	6297:12:203123:203136	11023690	1	True				
ANR	11023757	AssignmentExpression	values [ i ] = 0		11023690	0		=			
ANR	11023758	ArrayIndexing	values [ i ]		11023690	0					
ANR	11023759	Identifier	values		11023690	0					
ANR	11023760	Identifier	i		11023690	1					
ANR	11023761	PrimaryExpression	0		11023690	1					
ANR	11023762	ElseStatement	else		11023690	0					
ANR	11023763	IfStatement	if ( values [ i ] > 1 )		11023690	0					
ANR	11023764	Condition	values [ i ] > 1	6298:17:203155:203167	11023690	0	True				
ANR	11023765	RelationalExpression	values [ i ] > 1		11023690	0		>			
ANR	11023766	ArrayIndexing	values [ i ]		11023690	0					
ANR	11023767	Identifier	values		11023690	0					
ANR	11023768	Identifier	i		11023690	1					
ANR	11023769	PrimaryExpression	1		11023690	1					
ANR	11023770	ExpressionStatement	values [ i ] = 1	6299:12:203182:203195	11023690	1	True				
ANR	11023771	AssignmentExpression	values [ i ] = 1		11023690	0		=			
ANR	11023772	ArrayIndexing	values [ i ]		11023690	0					
ANR	11023773	Identifier	values		11023690	0					
ANR	11023774	Identifier	i		11023690	1					
ANR	11023775	PrimaryExpression	1		11023690	1					
ANR	11023776	ExpressionStatement	"code = make_floats ( & op [ - 2 ] , ( const float * ) & values , 3 )"	6302:4:203208:203262	11023690	6	True				
ANR	11023777	AssignmentExpression	"code = make_floats ( & op [ - 2 ] , ( const float * ) & values , 3 )"		11023690	0		=			
ANR	11023778	Identifier	code		11023690	0					
ANR	11023779	CallExpression	"make_floats ( & op [ - 2 ] , ( const float * ) & values , 3 )"		11023690	1					
ANR	11023780	Callee	make_floats		11023690	0					
ANR	11023781	Identifier	make_floats		11023690	0					
ANR	11023782	ArgumentList	& op [ - 2 ]		11023690	1					
ANR	11023783	Argument	& op [ - 2 ]		11023690	0					
ANR	11023784	UnaryOperationExpression	& op [ - 2 ]		11023690	0					
ANR	11023785	UnaryOperator	&		11023690	0					
ANR	11023786	ArrayIndexing	op [ - 2 ]		11023690	1					
ANR	11023787	Identifier	op		11023690	0					
ANR	11023788	UnaryOperationExpression	- 2		11023690	1					
ANR	11023789	UnaryOperator	-		11023690	0					
ANR	11023790	PrimaryExpression	2		11023690	1					
ANR	11023791	Argument	( const float * ) & values		11023690	1					
ANR	11023792	CastExpression	( const float * ) & values		11023690	0					
ANR	11023793	CastTarget	const float *		11023690	0					
ANR	11023794	UnaryOperationExpression	& values		11023690	1					
ANR	11023795	UnaryOperator	&		11023690	0					
ANR	11023796	Identifier	values		11023690	1					
ANR	11023797	Argument	3		11023690	2					
ANR	11023798	PrimaryExpression	3		11023690	0					
ANR	11023799	IfStatement	if ( code < 0 )		11023690	7					
ANR	11023800	Condition	code < 0	6303:8:203272:203279	11023690	0	True				
ANR	11023801	RelationalExpression	code < 0		11023690	0		<			
ANR	11023802	Identifier	code		11023690	0					
ANR	11023803	PrimaryExpression	0		11023690	1					
ANR	11023804	ReturnStatement	return code ;	6304:8:203290:203301	11023690	1	True				
ANR	11023805	Identifier	code		11023690	0					
ANR	11023806	ExpressionStatement	check_estack ( 5 )	6308:4:203431:203446	11023690	8	True				
ANR	11023807	CallExpression	check_estack ( 5 )		11023690	0					
ANR	11023808	Callee	check_estack		11023690	0					
ANR	11023809	Identifier	check_estack		11023690	0					
ANR	11023810	ArgumentList	5		11023690	1					
ANR	11023811	Argument	5		11023690	0					
ANR	11023812	PrimaryExpression	5		11023690	0					
ANR	11023813	ExpressionStatement	"push_mark_estack ( es_other , colour_cleanup )"	6309:4:203452:203494	11023690	9	True				
ANR	11023814	CallExpression	"push_mark_estack ( es_other , colour_cleanup )"		11023690	0					
ANR	11023815	Callee	push_mark_estack		11023690	0					
ANR	11023816	Identifier	push_mark_estack		11023690	0					
ANR	11023817	ArgumentList	es_other		11023690	1					
ANR	11023818	Argument	es_other		11023690	0					
ANR	11023819	Identifier	es_other		11023690	0					
ANR	11023820	Argument	colour_cleanup		11023690	1					
ANR	11023821	Identifier	colour_cleanup		11023690	0					
ANR	11023822	ExpressionStatement	esp ++	6310:4:203500:203505	11023690	10	True				
ANR	11023823	PostIncDecOperationExpression	esp ++		11023690	0					
ANR	11023824	Identifier	esp		11023690	0					
ANR	11023825	IncDec	++		11023690	1					
ANR	11023826	ExpressionStatement	"make_int ( esp , 1 )"	6312:4:203558:203574	11023690	11	True				
ANR	11023827	CallExpression	"make_int ( esp , 1 )"		11023690	0					
ANR	11023828	Callee	make_int		11023690	0					
ANR	11023829	Identifier	make_int		11023690	0					
ANR	11023830	ArgumentList	esp		11023690	1					
ANR	11023831	Argument	esp		11023690	0					
ANR	11023832	Identifier	esp		11023690	0					
ANR	11023833	Argument	1		11023690	1					
ANR	11023834	PrimaryExpression	1		11023690	0					
ANR	11023835	ExpressionStatement	esp ++	6313:4:203580:203585	11023690	12	True				
ANR	11023836	PostIncDecOperationExpression	esp ++		11023690	0					
ANR	11023837	Identifier	esp		11023690	0					
ANR	11023838	IncDec	++		11023690	1					
ANR	11023839	ExpressionStatement	"make_int ( esp , 0 )"	6315:4:203647:203663	11023690	13	True				
ANR	11023840	CallExpression	"make_int ( esp , 0 )"		11023690	0					
ANR	11023841	Callee	make_int		11023690	0					
ANR	11023842	Identifier	make_int		11023690	0					
ANR	11023843	ArgumentList	esp		11023690	1					
ANR	11023844	Argument	esp		11023690	0					
ANR	11023845	Identifier	esp		11023690	0					
ANR	11023846	Argument	0		11023690	1					
ANR	11023847	PrimaryExpression	0		11023690	0					
ANR	11023848	ExpressionStatement	push_op_estack ( setdevicecolor_cont )	6317:4:203720:203755	11023690	14	True				
ANR	11023849	CallExpression	push_op_estack ( setdevicecolor_cont )		11023690	0					
ANR	11023850	Callee	push_op_estack		11023690	0					
ANR	11023851	Identifier	push_op_estack		11023690	0					
ANR	11023852	ArgumentList	setdevicecolor_cont		11023690	1					
ANR	11023853	Argument	setdevicecolor_cont		11023690	0					
ANR	11023854	Identifier	setdevicecolor_cont		11023690	0					
ANR	11023855	ReturnStatement	return o_push_estack ;	6318:4:203761:203781	11023690	15	True				
ANR	11023856	Identifier	o_push_estack		11023690	0					
ANR	11023857	ReturnType	static int		11023690	1					
ANR	11023858	Identifier	zsetrgbcolor		11023690	2					
ANR	11023859	ParameterList	i_ctx_t * i_ctx_p		11023690	3					
ANR	11023860	Parameter	i_ctx_t * i_ctx_p	6284:13:202749:202765	11023690	0	True				
ANR	11023861	ParameterType	i_ctx_t *		11023690	0					
ANR	11023862	Identifier	i_ctx_p		11023690	1					
ANR	11023863	CFGEntryNode	ENTRY		11023690		True				
ANR	11023864	CFGExitNode	EXIT		11023690		True				
ANR	11023865	Symbol	op		11023690						
ANR	11023866	Symbol	make_floats		11023690						
ANR	11023867	Symbol	code		11023690						
ANR	11023868	Symbol	esp		11023690						
ANR	11023869	Symbol	& values		11023690						
ANR	11023870	Symbol	float_params		11023690						
ANR	11023871	Symbol	* values		11023690						
ANR	11023872	Symbol	values		11023690						
ANR	11023873	Symbol	i		11023690						
ANR	11023874	Symbol	colour_cleanup		11023690						
ANR	11023875	Symbol	osp		11023690						
ANR	11023876	Symbol	es_other		11023690						
ANR	11023877	Symbol	* i		11023690						
ANR	11023878	Symbol	i_ctx_p		11023690						
ANR	11023879	Symbol	setdevicecolor_cont		11023690						
ANR	11023880	Symbol	o_push_estack		11023690						
ANR	11023881	Function	zsetcmykcolor	6321:0:203786:204846							
ANR	11023882	FunctionDef	zsetcmykcolor (i_ctx_t * i_ctx_p)		11023881	0					
ANR	11023883	CompoundStatement		6323:0:203830:204846	11023881	0					
ANR	11023884	IdentifierDeclStatement	os_ptr op = osp ;	6324:4:203836:203852	11023881	0	True				
ANR	11023885	IdentifierDecl	op = osp		11023881	0					
ANR	11023886	IdentifierDeclType	os_ptr		11023881	0					
ANR	11023887	Identifier	op		11023881	1					
ANR	11023888	AssignmentExpression	op = osp		11023881	2		=			
ANR	11023889	Identifier	osp		11023881	0					
ANR	11023890	Identifier	osp		11023881	1					
ANR	11023891	IdentifierDeclStatement	"int code , i ;"	6325:4:203891:203902	11023881	1	True				
ANR	11023892	IdentifierDecl	code		11023881	0					
ANR	11023893	IdentifierDeclType	int		11023881	0					
ANR	11023894	Identifier	code		11023881	1					
ANR	11023895	IdentifierDecl	i		11023881	1					
ANR	11023896	IdentifierDeclType	int		11023881	0					
ANR	11023897	Identifier	i		11023881	1					
ANR	11023898	IdentifierDeclStatement	float values [ 4 ] ;	6326:4:203908:203923	11023881	2	True				
ANR	11023899	IdentifierDecl	values [ 4 ]		11023881	0					
ANR	11023900	IdentifierDeclType	float [ 4 ]		11023881	0					
ANR	11023901	Identifier	values		11023881	1					
ANR	11023902	PrimaryExpression	4		11023881	2					
ANR	11023903	ExpressionStatement	"code = float_params ( op , 4 , ( float * ) & values )"	6329:4:203991:204035	11023881	3	True				
ANR	11023904	AssignmentExpression	"code = float_params ( op , 4 , ( float * ) & values )"		11023881	0		=			
ANR	11023905	Identifier	code		11023881	0					
ANR	11023906	CallExpression	"float_params ( op , 4 , ( float * ) & values )"		11023881	1					
ANR	11023907	Callee	float_params		11023881	0					
ANR	11023908	Identifier	float_params		11023881	0					
ANR	11023909	ArgumentList	op		11023881	1					
ANR	11023910	Argument	op		11023881	0					
ANR	11023911	Identifier	op		11023881	0					
ANR	11023912	Argument	4		11023881	1					
ANR	11023913	PrimaryExpression	4		11023881	0					
ANR	11023914	Argument	( float * ) & values		11023881	2					
ANR	11023915	CastExpression	( float * ) & values		11023881	0					
ANR	11023916	CastTarget	float *		11023881	0					
ANR	11023917	UnaryOperationExpression	& values		11023881	1					
ANR	11023918	UnaryOperator	&		11023881	0					
ANR	11023919	Identifier	values		11023881	1					
ANR	11023920	IfStatement	if ( code < 0 )		11023881	4					
ANR	11023921	Condition	code < 0	6330:8:204045:204052	11023881	0	True				
ANR	11023922	RelationalExpression	code < 0		11023881	0		<			
ANR	11023923	Identifier	code		11023881	0					
ANR	11023924	PrimaryExpression	0		11023881	1					
ANR	11023925	ReturnStatement	return code ;	6331:8:204063:204074	11023881	1	True				
ANR	11023926	Identifier	code		11023881	0					
ANR	11023927	ForStatement	for ( i = 0 ; i < 4 ; i ++ )		11023881	5					
ANR	11023928	ForInit	i = 0 ;	6333:9:204126:204131	11023881	0	True				
ANR	11023929	AssignmentExpression	i = 0		11023881	0		=			
ANR	11023930	Identifier	i		11023881	0					
ANR	11023931	PrimaryExpression	0		11023881	1					
ANR	11023932	Condition	i < 4	6333:15:204132:204136	11023881	1	True				
ANR	11023933	RelationalExpression	i < 4		11023881	0		<			
ANR	11023934	Identifier	i		11023881	0					
ANR	11023935	PrimaryExpression	4		11023881	1					
ANR	11023936	PostIncDecOperationExpression	i ++	6333:22:204139:204141	11023881	2	True				
ANR	11023937	Identifier	i		11023881	0					
ANR	11023938	IncDec	++		11023881	1					
ANR	11023939	CompoundStatement		11:27:313:313	11023881	3					
ANR	11023940	IfStatement	if ( values [ i ] < 0 )		11023881	0					
ANR	11023941	Condition	values [ i ] < 0	6334:12:204158:204170	11023881	0	True				
ANR	11023942	RelationalExpression	values [ i ] < 0		11023881	0		<			
ANR	11023943	ArrayIndexing	values [ i ]		11023881	0					
ANR	11023944	Identifier	values		11023881	0					
ANR	11023945	Identifier	i		11023881	1					
ANR	11023946	PrimaryExpression	0		11023881	1					
ANR	11023947	ExpressionStatement	values [ i ] = 0	6335:12:204185:204198	11023881	1	True				
ANR	11023948	AssignmentExpression	values [ i ] = 0		11023881	0		=			
ANR	11023949	ArrayIndexing	values [ i ]		11023881	0					
ANR	11023950	Identifier	values		11023881	0					
ANR	11023951	Identifier	i		11023881	1					
ANR	11023952	PrimaryExpression	0		11023881	1					
ANR	11023953	ElseStatement	else		11023881	0					
ANR	11023954	IfStatement	if ( values [ i ] > 1 )		11023881	0					
ANR	11023955	Condition	values [ i ] > 1	6336:17:204217:204229	11023881	0	True				
ANR	11023956	RelationalExpression	values [ i ] > 1		11023881	0		>			
ANR	11023957	ArrayIndexing	values [ i ]		11023881	0					
ANR	11023958	Identifier	values		11023881	0					
ANR	11023959	Identifier	i		11023881	1					
ANR	11023960	PrimaryExpression	1		11023881	1					
ANR	11023961	ExpressionStatement	values [ i ] = 1	6337:12:204244:204257	11023881	1	True				
ANR	11023962	AssignmentExpression	values [ i ] = 1		11023881	0		=			
ANR	11023963	ArrayIndexing	values [ i ]		11023881	0					
ANR	11023964	Identifier	values		11023881	0					
ANR	11023965	Identifier	i		11023881	1					
ANR	11023966	PrimaryExpression	1		11023881	1					
ANR	11023967	ExpressionStatement	"code = make_floats ( & op [ - 3 ] , ( const float * ) & values , 4 )"	6340:4:204270:204324	11023881	6	True				
ANR	11023968	AssignmentExpression	"code = make_floats ( & op [ - 3 ] , ( const float * ) & values , 4 )"		11023881	0		=			
ANR	11023969	Identifier	code		11023881	0					
ANR	11023970	CallExpression	"make_floats ( & op [ - 3 ] , ( const float * ) & values , 4 )"		11023881	1					
ANR	11023971	Callee	make_floats		11023881	0					
ANR	11023972	Identifier	make_floats		11023881	0					
ANR	11023973	ArgumentList	& op [ - 3 ]		11023881	1					
ANR	11023974	Argument	& op [ - 3 ]		11023881	0					
ANR	11023975	UnaryOperationExpression	& op [ - 3 ]		11023881	0					
ANR	11023976	UnaryOperator	&		11023881	0					
ANR	11023977	ArrayIndexing	op [ - 3 ]		11023881	1					
ANR	11023978	Identifier	op		11023881	0					
ANR	11023979	UnaryOperationExpression	- 3		11023881	1					
ANR	11023980	UnaryOperator	-		11023881	0					
ANR	11023981	PrimaryExpression	3		11023881	1					
ANR	11023982	Argument	( const float * ) & values		11023881	1					
ANR	11023983	CastExpression	( const float * ) & values		11023881	0					
ANR	11023984	CastTarget	const float *		11023881	0					
ANR	11023985	UnaryOperationExpression	& values		11023881	1					
ANR	11023986	UnaryOperator	&		11023881	0					
ANR	11023987	Identifier	values		11023881	1					
ANR	11023988	Argument	4		11023881	2					
ANR	11023989	PrimaryExpression	4		11023881	0					
ANR	11023990	IfStatement	if ( code < 0 )		11023881	7					
ANR	11023991	Condition	code < 0	6341:8:204334:204341	11023881	0	True				
ANR	11023992	RelationalExpression	code < 0		11023881	0		<			
ANR	11023993	Identifier	code		11023881	0					
ANR	11023994	PrimaryExpression	0		11023881	1					
ANR	11023995	ReturnStatement	return code ;	6342:8:204352:204363	11023881	1	True				
ANR	11023996	Identifier	code		11023881	0					
ANR	11023997	ExpressionStatement	check_estack ( 5 )	6346:4:204493:204508	11023881	8	True				
ANR	11023998	CallExpression	check_estack ( 5 )		11023881	0					
ANR	11023999	Callee	check_estack		11023881	0					
ANR	11024000	Identifier	check_estack		11023881	0					
ANR	11024001	ArgumentList	5		11023881	1					
ANR	11024002	Argument	5		11023881	0					
ANR	11024003	PrimaryExpression	5		11023881	0					
ANR	11024004	ExpressionStatement	"push_mark_estack ( es_other , colour_cleanup )"	6347:4:204514:204556	11023881	9	True				
ANR	11024005	CallExpression	"push_mark_estack ( es_other , colour_cleanup )"		11023881	0					
ANR	11024006	Callee	push_mark_estack		11023881	0					
ANR	11024007	Identifier	push_mark_estack		11023881	0					
ANR	11024008	ArgumentList	es_other		11023881	1					
ANR	11024009	Argument	es_other		11023881	0					
ANR	11024010	Identifier	es_other		11023881	0					
ANR	11024011	Argument	colour_cleanup		11023881	1					
ANR	11024012	Identifier	colour_cleanup		11023881	0					
ANR	11024013	ExpressionStatement	esp ++	6348:4:204562:204567	11023881	10	True				
ANR	11024014	PostIncDecOperationExpression	esp ++		11023881	0					
ANR	11024015	Identifier	esp		11023881	0					
ANR	11024016	IncDec	++		11023881	1					
ANR	11024017	ExpressionStatement	"make_int ( esp , 2 )"	6350:4:204621:204637	11023881	11	True				
ANR	11024018	CallExpression	"make_int ( esp , 2 )"		11023881	0					
ANR	11024019	Callee	make_int		11023881	0					
ANR	11024020	Identifier	make_int		11023881	0					
ANR	11024021	ArgumentList	esp		11023881	1					
ANR	11024022	Argument	esp		11023881	0					
ANR	11024023	Identifier	esp		11023881	0					
ANR	11024024	Argument	2		11023881	1					
ANR	11024025	PrimaryExpression	2		11023881	0					
ANR	11024026	ExpressionStatement	esp ++	6351:4:204643:204648	11023881	12	True				
ANR	11024027	PostIncDecOperationExpression	esp ++		11023881	0					
ANR	11024028	Identifier	esp		11023881	0					
ANR	11024029	IncDec	++		11023881	1					
ANR	11024030	ExpressionStatement	"make_int ( esp , 0 )"	6353:4:204710:204726	11023881	13	True				
ANR	11024031	CallExpression	"make_int ( esp , 0 )"		11023881	0					
ANR	11024032	Callee	make_int		11023881	0					
ANR	11024033	Identifier	make_int		11023881	0					
ANR	11024034	ArgumentList	esp		11023881	1					
ANR	11024035	Argument	esp		11023881	0					
ANR	11024036	Identifier	esp		11023881	0					
ANR	11024037	Argument	0		11023881	1					
ANR	11024038	PrimaryExpression	0		11023881	0					
ANR	11024039	ExpressionStatement	push_op_estack ( setdevicecolor_cont )	6355:4:204783:204818	11023881	14	True				
ANR	11024040	CallExpression	push_op_estack ( setdevicecolor_cont )		11023881	0					
ANR	11024041	Callee	push_op_estack		11023881	0					
ANR	11024042	Identifier	push_op_estack		11023881	0					
ANR	11024043	ArgumentList	setdevicecolor_cont		11023881	1					
ANR	11024044	Argument	setdevicecolor_cont		11023881	0					
ANR	11024045	Identifier	setdevicecolor_cont		11023881	0					
ANR	11024046	ReturnStatement	return o_push_estack ;	6356:4:204824:204844	11023881	15	True				
ANR	11024047	Identifier	o_push_estack		11023881	0					
ANR	11024048	ReturnType	static int		11023881	1					
ANR	11024049	Identifier	zsetcmykcolor		11023881	2					
ANR	11024050	ParameterList	i_ctx_t * i_ctx_p		11023881	3					
ANR	11024051	Parameter	i_ctx_t * i_ctx_p	6322:14:203811:203827	11023881	0	True				
ANR	11024052	ParameterType	i_ctx_t *		11023881	0					
ANR	11024053	Identifier	i_ctx_p		11023881	1					
ANR	11024054	CFGEntryNode	ENTRY		11023881		True				
ANR	11024055	CFGExitNode	EXIT		11023881		True				
ANR	11024056	Symbol	op		11023881						
ANR	11024057	Symbol	make_floats		11023881						
ANR	11024058	Symbol	code		11023881						
ANR	11024059	Symbol	esp		11023881						
ANR	11024060	Symbol	float_params		11023881						
ANR	11024061	Symbol	& values		11023881						
ANR	11024062	Symbol	* values		11023881						
ANR	11024063	Symbol	values		11023881						
ANR	11024064	Symbol	i		11023881						
ANR	11024065	Symbol	colour_cleanup		11023881						
ANR	11024066	Symbol	osp		11023881						
ANR	11024067	Symbol	es_other		11023881						
ANR	11024068	Symbol	* i		11023881						
ANR	11024069	Symbol	i_ctx_p		11023881						
ANR	11024070	Symbol	setdevicecolor_cont		11023881						
ANR	11024071	Symbol	o_push_estack		11023881						
ANR	11024072	Function	currentbasecolor_cont	6377:0:205787:207906							
ANR	11024073	FunctionDef	currentbasecolor_cont (i_ctx_t * i_ctx_p)		11024072	0					
ANR	11024074	CompoundStatement		6379:0:205838:207906	11024072	0					
ANR	11024075	IdentifierDeclStatement	"ref arr , * parr = & arr ;"	6380:4:205844:205865	11024072	0	True				
ANR	11024076	IdentifierDecl	arr		11024072	0					
ANR	11024077	IdentifierDeclType	ref		11024072	0					
ANR	11024078	Identifier	arr		11024072	1					
ANR	11024079	IdentifierDecl	* parr = & arr		11024072	1					
ANR	11024080	IdentifierDeclType	ref *		11024072	0					
ANR	11024081	Identifier	parr		11024072	1					
ANR	11024082	AssignmentExpression	* parr = & arr		11024072	2		=			
ANR	11024083	Identifier	parr		11024072	0					
ANR	11024084	UnaryOperationExpression	& arr		11024072	1					
ANR	11024085	UnaryOperator	&		11024072	0					
ANR	11024086	Identifier	arr		11024072	1					
ANR	11024087	IdentifierDeclStatement	es_ptr ep = esp ;	6381:4:205871:205886	11024072	1	True				
ANR	11024088	IdentifierDecl	ep = esp		11024072	0					
ANR	11024089	IdentifierDeclType	es_ptr		11024072	0					
ANR	11024090	Identifier	ep		11024072	1					
ANR	11024091	AssignmentExpression	ep = esp		11024072	2		=			
ANR	11024092	Identifier	esp		11024072	0					
ANR	11024093	Identifier	esp		11024072	1					
ANR	11024094	IdentifierDeclStatement	"int i , code = 0 , stage , base , cont = 1 , stack_depth = 0 , CIESubst = 0 ;"	6382:4:205892:205957	11024072	2	True				
ANR	11024095	IdentifierDecl	i		11024072	0					
ANR	11024096	IdentifierDeclType	int		11024072	0					
ANR	11024097	Identifier	i		11024072	1					
ANR	11024098	IdentifierDecl	code = 0		11024072	1					
ANR	11024099	IdentifierDeclType	int		11024072	0					
ANR	11024100	Identifier	code		11024072	1					
ANR	11024101	AssignmentExpression	code = 0		11024072	2		=			
ANR	11024102	Identifier	code		11024072	0					
ANR	11024103	PrimaryExpression	0		11024072	1					
ANR	11024104	IdentifierDecl	stage		11024072	2					
ANR	11024105	IdentifierDeclType	int		11024072	0					
ANR	11024106	Identifier	stage		11024072	1					
ANR	11024107	IdentifierDecl	base		11024072	3					
ANR	11024108	IdentifierDeclType	int		11024072	0					
ANR	11024109	Identifier	base		11024072	1					
ANR	11024110	IdentifierDecl	cont = 1		11024072	4					
ANR	11024111	IdentifierDeclType	int		11024072	0					
ANR	11024112	Identifier	cont		11024072	1					
ANR	11024113	AssignmentExpression	cont = 1		11024072	2		=			
ANR	11024114	Identifier	cont		11024072	0					
ANR	11024115	PrimaryExpression	1		11024072	1					
ANR	11024116	IdentifierDecl	stack_depth = 0		11024072	5					
ANR	11024117	IdentifierDeclType	int		11024072	0					
ANR	11024118	Identifier	stack_depth		11024072	1					
ANR	11024119	AssignmentExpression	stack_depth = 0		11024072	2		=			
ANR	11024120	Identifier	stack_depth		11024072	0					
ANR	11024121	PrimaryExpression	0		11024072	1					
ANR	11024122	IdentifierDecl	CIESubst = 0		11024072	6					
ANR	11024123	IdentifierDeclType	int		11024072	0					
ANR	11024124	Identifier	CIESubst		11024072	1					
ANR	11024125	AssignmentExpression	CIESubst = 0		11024072	2		=			
ANR	11024126	Identifier	CIESubst		11024072	0					
ANR	11024127	PrimaryExpression	0		11024072	1					
ANR	11024128	IdentifierDeclStatement	unsigned int depth ;	6383:4:205963:205981	11024072	3	True				
ANR	11024129	IdentifierDecl	depth		11024072	0					
ANR	11024130	IdentifierDeclType	unsigned int		11024072	0					
ANR	11024131	Identifier	depth		11024072	1					
ANR	11024132	IdentifierDeclStatement	PS_colour_space_t * obj ;	6384:4:205987:206009	11024072	4	True				
ANR	11024133	IdentifierDecl	* obj		11024072	0					
ANR	11024134	IdentifierDeclType	PS_colour_space_t *		11024072	0					
ANR	11024135	Identifier	obj		11024072	1					
ANR	11024136	ExpressionStatement	stack_depth = ( int ) ep [ - 4 ] . value . intval	6386:4:206016:206054	11024072	5	True				
ANR	11024137	AssignmentExpression	stack_depth = ( int ) ep [ - 4 ] . value . intval		11024072	0		=			
ANR	11024138	Identifier	stack_depth		11024072	0					
ANR	11024139	CastExpression	( int ) ep [ - 4 ] . value . intval		11024072	1					
ANR	11024140	CastTarget	int		11024072	0					
ANR	11024141	MemberAccess	ep [ - 4 ] . value . intval		11024072	1					
ANR	11024142	MemberAccess	ep [ - 4 ] . value		11024072	0					
ANR	11024143	ArrayIndexing	ep [ - 4 ]		11024072	0					
ANR	11024144	Identifier	ep		11024072	0					
ANR	11024145	UnaryOperationExpression	- 4		11024072	1					
ANR	11024146	UnaryOperator	-		11024072	0					
ANR	11024147	PrimaryExpression	4		11024072	1					
ANR	11024148	Identifier	value		11024072	1					
ANR	11024149	Identifier	intval		11024072	1					
ANR	11024150	ExpressionStatement	base = ( int ) ep [ - 3 ] . value . intval	6387:4:206060:206091	11024072	6	True				
ANR	11024151	AssignmentExpression	base = ( int ) ep [ - 3 ] . value . intval		11024072	0		=			
ANR	11024152	Identifier	base		11024072	0					
ANR	11024153	CastExpression	( int ) ep [ - 3 ] . value . intval		11024072	1					
ANR	11024154	CastTarget	int		11024072	0					
ANR	11024155	MemberAccess	ep [ - 3 ] . value . intval		11024072	1					
ANR	11024156	MemberAccess	ep [ - 3 ] . value		11024072	0					
ANR	11024157	ArrayIndexing	ep [ - 3 ]		11024072	0					
ANR	11024158	Identifier	ep		11024072	0					
ANR	11024159	UnaryOperationExpression	- 3		11024072	1					
ANR	11024160	UnaryOperator	-		11024072	0					
ANR	11024161	PrimaryExpression	3		11024072	1					
ANR	11024162	Identifier	value		11024072	1					
ANR	11024163	Identifier	intval		11024072	1					
ANR	11024164	ExpressionStatement	depth = ( unsigned int ) ep [ - 2 ] . value . intval	6388:4:206097:206138	11024072	7	True				
ANR	11024165	AssignmentExpression	depth = ( unsigned int ) ep [ - 2 ] . value . intval		11024072	0		=			
ANR	11024166	Identifier	depth		11024072	0					
ANR	11024167	CastExpression	( unsigned int ) ep [ - 2 ] . value . intval		11024072	1					
ANR	11024168	CastTarget	unsigned int		11024072	0					
ANR	11024169	MemberAccess	ep [ - 2 ] . value . intval		11024072	1					
ANR	11024170	MemberAccess	ep [ - 2 ] . value		11024072	0					
ANR	11024171	ArrayIndexing	ep [ - 2 ]		11024072	0					
ANR	11024172	Identifier	ep		11024072	0					
ANR	11024173	UnaryOperationExpression	- 2		11024072	1					
ANR	11024174	UnaryOperator	-		11024072	0					
ANR	11024175	PrimaryExpression	2		11024072	1					
ANR	11024176	Identifier	value		11024072	1					
ANR	11024177	Identifier	intval		11024072	1					
ANR	11024178	ExpressionStatement	stage = ( int ) ep [ - 1 ] . value . intval	6389:4:206144:206176	11024072	8	True				
ANR	11024179	AssignmentExpression	stage = ( int ) ep [ - 1 ] . value . intval		11024072	0		=			
ANR	11024180	Identifier	stage		11024072	0					
ANR	11024181	CastExpression	( int ) ep [ - 1 ] . value . intval		11024072	1					
ANR	11024182	CastTarget	int		11024072	0					
ANR	11024183	MemberAccess	ep [ - 1 ] . value . intval		11024072	1					
ANR	11024184	MemberAccess	ep [ - 1 ] . value		11024072	0					
ANR	11024185	ArrayIndexing	ep [ - 1 ]		11024072	0					
ANR	11024186	Identifier	ep		11024072	0					
ANR	11024187	UnaryOperationExpression	- 1		11024072	1					
ANR	11024188	UnaryOperator	-		11024072	0					
ANR	11024189	PrimaryExpression	1		11024072	1					
ANR	11024190	Identifier	value		11024072	1					
ANR	11024191	Identifier	intval		11024072	1					
ANR	11024192	IfStatement	if ( depth < 1 )		11024072	9					
ANR	11024193	Condition	depth < 1	6394:8:206310:206318	11024072	0	True				
ANR	11024194	RelationalExpression	depth < 1		11024072	0		<			
ANR	11024195	Identifier	depth		11024072	0					
ANR	11024196	PrimaryExpression	1		11024072	1					
ANR	11024197	ExpressionStatement	return_error ( gs_error_unknownerror )	6395:8:206329:206364	11024072	1	True				
ANR	11024198	CallExpression	return_error ( gs_error_unknownerror )		11024072	0					
ANR	11024199	Callee	return_error		11024072	0					
ANR	11024200	Identifier	return_error		11024072	0					
ANR	11024201	ArgumentList	gs_error_unknownerror		11024072	1					
ANR	11024202	Argument	gs_error_unknownerror		11024072	0					
ANR	11024203	Identifier	gs_error_unknownerror		11024072	0					
ANR	11024204	ExpressionStatement	check_estack ( 1 )	6401:4:206615:206630	11024072	10	True				
ANR	11024205	CallExpression	check_estack ( 1 )		11024072	0					
ANR	11024206	Callee	check_estack		11024072	0					
ANR	11024207	Identifier	check_estack		11024072	0					
ANR	11024208	ArgumentList	1		11024072	1					
ANR	11024209	Argument	1		11024072	0					
ANR	11024210	PrimaryExpression	1		11024072	0					
ANR	11024211	ExpressionStatement	push_op_estack ( currentbasecolor_cont )	6403:4:206718:206755	11024072	11	True				
ANR	11024212	CallExpression	push_op_estack ( currentbasecolor_cont )		11024072	0					
ANR	11024213	Callee	push_op_estack		11024072	0					
ANR	11024214	Identifier	push_op_estack		11024072	0					
ANR	11024215	ArgumentList	currentbasecolor_cont		11024072	1					
ANR	11024216	Argument	currentbasecolor_cont		11024072	0					
ANR	11024217	Identifier	currentbasecolor_cont		11024072	0					
ANR	11024218	WhileStatement	while ( code == 0 && cont )		11024072	12					
ANR	11024219	Condition	code == 0 && cont	6405:11:206769:206785	11024072	0	True				
ANR	11024220	AndExpression	code == 0 && cont		11024072	0		&&			
ANR	11024221	EqualityExpression	code == 0		11024072	0		==			
ANR	11024222	Identifier	code		11024072	0					
ANR	11024223	PrimaryExpression	0		11024072	1					
ANR	11024224	Identifier	cont		11024072	1					
ANR	11024225	CompoundStatement		27:30:949:949	11024072	1					
ANR	11024226	ExpressionStatement	"ref_assign ( & arr , ep )"	6406:8:206798:206818	11024072	0	True				
ANR	11024227	CallExpression	"ref_assign ( & arr , ep )"		11024072	0					
ANR	11024228	Callee	ref_assign		11024072	0					
ANR	11024229	Identifier	ref_assign		11024072	0					
ANR	11024230	ArgumentList	& arr		11024072	1					
ANR	11024231	Argument	& arr		11024072	0					
ANR	11024232	UnaryOperationExpression	& arr		11024072	0					
ANR	11024233	UnaryOperator	&		11024072	0					
ANR	11024234	Identifier	arr		11024072	1					
ANR	11024235	Argument	ep		11024072	1					
ANR	11024236	Identifier	ep		11024072	0					
ANR	11024237	ExpressionStatement	parr = & arr	6407:8:206828:206839	11024072	1	True				
ANR	11024238	AssignmentExpression	parr = & arr		11024072	0		=			
ANR	11024239	Identifier	parr		11024072	0					
ANR	11024240	UnaryOperationExpression	& arr		11024072	1					
ANR	11024241	UnaryOperator	&		11024072	0					
ANR	11024242	Identifier	arr		11024072	1					
ANR	11024243	ForStatement	for ( i = 0 ; i < depth ; i ++ )		11024072	2					
ANR	11024244	ForInit	i = 0 ;	6411:13:207002:207007	11024072	0	True				
ANR	11024245	AssignmentExpression	i = 0		11024072	0		=			
ANR	11024246	Identifier	i		11024072	0					
ANR	11024247	PrimaryExpression	0		11024072	1					
ANR	11024248	Condition	i < depth	6411:19:207008:207016	11024072	1	True				
ANR	11024249	RelationalExpression	i < depth		11024072	0		<			
ANR	11024250	Identifier	i		11024072	0					
ANR	11024251	Identifier	depth		11024072	1					
ANR	11024252	PostIncDecOperationExpression	i ++	6411:29:207018:207020	11024072	2	True				
ANR	11024253	Identifier	i		11024072	0					
ANR	11024254	IncDec	++		11024072	1					
ANR	11024255	CompoundStatement		33:34:1184:1184	11024072	3					
ANR	11024256	ExpressionStatement	"code = get_space_object ( i_ctx_p , parr , & obj )"	6412:12:207037:207081	11024072	0	True				
ANR	11024257	AssignmentExpression	"code = get_space_object ( i_ctx_p , parr , & obj )"		11024072	0		=			
ANR	11024258	Identifier	code		11024072	0					
ANR	11024259	CallExpression	"get_space_object ( i_ctx_p , parr , & obj )"		11024072	1					
ANR	11024260	Callee	get_space_object		11024072	0					
ANR	11024261	Identifier	get_space_object		11024072	0					
ANR	11024262	ArgumentList	i_ctx_p		11024072	1					
ANR	11024263	Argument	i_ctx_p		11024072	0					
ANR	11024264	Identifier	i_ctx_p		11024072	0					
ANR	11024265	Argument	parr		11024072	1					
ANR	11024266	Identifier	parr		11024072	0					
ANR	11024267	Argument	& obj		11024072	2					
ANR	11024268	UnaryOperationExpression	& obj		11024072	0					
ANR	11024269	UnaryOperator	&		11024072	0					
ANR	11024270	Identifier	obj		11024072	1					
ANR	11024271	IfStatement	if ( code < 0 )		11024072	1					
ANR	11024272	Condition	code < 0	6413:16:207099:207106	11024072	0	True				
ANR	11024273	RelationalExpression	code < 0		11024072	0		<			
ANR	11024274	Identifier	code		11024072	0					
ANR	11024275	PrimaryExpression	0		11024072	1					
ANR	11024276	ReturnStatement	return code ;	6414:16:207125:207136	11024072	1	True				
ANR	11024277	Identifier	code		11024072	0					
ANR	11024278	IfStatement	if ( i < ( depth - 1 ) )		11024072	2					
ANR	11024279	Condition	i < ( depth - 1 )	6416:16:207155:207169	11024072	0	True				
ANR	11024280	RelationalExpression	i < ( depth - 1 )		11024072	0		<			
ANR	11024281	Identifier	i		11024072	0					
ANR	11024282	AdditiveExpression	depth - 1		11024072	1		-			
ANR	11024283	Identifier	depth		11024072	0					
ANR	11024284	PrimaryExpression	1		11024072	1					
ANR	11024285	CompoundStatement		38:33:1333:1333	11024072	1					
ANR	11024286	IfStatement	if ( ! obj -> alternateproc )		11024072	0					
ANR	11024287	Condition	! obj -> alternateproc	6417:20:207194:207212	11024072	0	True				
ANR	11024288	UnaryOperationExpression	! obj -> alternateproc		11024072	0					
ANR	11024289	UnaryOperator	!		11024072	0					
ANR	11024290	PtrMemberAccess	obj -> alternateproc		11024072	1					
ANR	11024291	Identifier	obj		11024072	0					
ANR	11024292	Identifier	alternateproc		11024072	1					
ANR	11024293	CompoundStatement		39:41:1376:1376	11024072	1					
ANR	11024294	ExpressionStatement	return_error ( gs_error_typecheck )	6418:20:207237:207269	11024072	0	True				
ANR	11024295	CallExpression	return_error ( gs_error_typecheck )		11024072	0					
ANR	11024296	Callee	return_error		11024072	0					
ANR	11024297	Identifier	return_error		11024072	0					
ANR	11024298	ArgumentList	gs_error_typecheck		11024072	1					
ANR	11024299	Argument	gs_error_typecheck		11024072	0					
ANR	11024300	Identifier	gs_error_typecheck		11024072	0					
ANR	11024301	ExpressionStatement	"code = obj -> alternateproc ( i_ctx_p , parr , & parr , & CIESubst )"	6420:16:207305:207363	11024072	1	True				
ANR	11024302	AssignmentExpression	"code = obj -> alternateproc ( i_ctx_p , parr , & parr , & CIESubst )"		11024072	0		=			
ANR	11024303	Identifier	code		11024072	0					
ANR	11024304	CallExpression	"obj -> alternateproc ( i_ctx_p , parr , & parr , & CIESubst )"		11024072	1					
ANR	11024305	Callee	obj -> alternateproc		11024072	0					
ANR	11024306	PtrMemberAccess	obj -> alternateproc		11024072	0					
ANR	11024307	Identifier	obj		11024072	0					
ANR	11024308	Identifier	alternateproc		11024072	1					
ANR	11024309	ArgumentList	i_ctx_p		11024072	1					
ANR	11024310	Argument	i_ctx_p		11024072	0					
ANR	11024311	Identifier	i_ctx_p		11024072	0					
ANR	11024312	Argument	parr		11024072	1					
ANR	11024313	Identifier	parr		11024072	0					
ANR	11024314	Argument	& parr		11024072	2					
ANR	11024315	UnaryOperationExpression	& parr		11024072	0					
ANR	11024316	UnaryOperator	&		11024072	0					
ANR	11024317	Identifier	parr		11024072	1					
ANR	11024318	Argument	& CIESubst		11024072	3					
ANR	11024319	UnaryOperationExpression	& CIESubst		11024072	0					
ANR	11024320	UnaryOperator	&		11024072	0					
ANR	11024321	Identifier	CIESubst		11024072	1					
ANR	11024322	IfStatement	if ( code < 0 )		11024072	2					
ANR	11024323	Condition	code < 0	6421:20:207385:207392	11024072	0	True				
ANR	11024324	RelationalExpression	code < 0		11024072	0		<			
ANR	11024325	Identifier	code		11024072	0					
ANR	11024326	PrimaryExpression	0		11024072	1					
ANR	11024327	ReturnStatement	return code ;	6422:20:207415:207426	11024072	1	True				
ANR	11024328	Identifier	code		11024072	0					
ANR	11024329	ExpressionStatement	"code = obj -> basecolorproc ( i_ctx_p , parr , base , & stage , & cont , & stack_depth )"	6426:8:207461:207536	11024072	3	True				
ANR	11024330	AssignmentExpression	"code = obj -> basecolorproc ( i_ctx_p , parr , base , & stage , & cont , & stack_depth )"		11024072	0		=			
ANR	11024331	Identifier	code		11024072	0					
ANR	11024332	CallExpression	"obj -> basecolorproc ( i_ctx_p , parr , base , & stage , & cont , & stack_depth )"		11024072	1					
ANR	11024333	Callee	obj -> basecolorproc		11024072	0					
ANR	11024334	PtrMemberAccess	obj -> basecolorproc		11024072	0					
ANR	11024335	Identifier	obj		11024072	0					
ANR	11024336	Identifier	basecolorproc		11024072	1					
ANR	11024337	ArgumentList	i_ctx_p		11024072	1					
ANR	11024338	Argument	i_ctx_p		11024072	0					
ANR	11024339	Identifier	i_ctx_p		11024072	0					
ANR	11024340	Argument	parr		11024072	1					
ANR	11024341	Identifier	parr		11024072	0					
ANR	11024342	Argument	base		11024072	2					
ANR	11024343	Identifier	base		11024072	0					
ANR	11024344	Argument	& stage		11024072	3					
ANR	11024345	UnaryOperationExpression	& stage		11024072	0					
ANR	11024346	UnaryOperator	&		11024072	0					
ANR	11024347	Identifier	stage		11024072	1					
ANR	11024348	Argument	& cont		11024072	4					
ANR	11024349	UnaryOperationExpression	& cont		11024072	0					
ANR	11024350	UnaryOperator	&		11024072	0					
ANR	11024351	Identifier	cont		11024072	1					
ANR	11024352	Argument	& stack_depth		11024072	5					
ANR	11024353	UnaryOperationExpression	& stack_depth		11024072	0					
ANR	11024354	UnaryOperator	&		11024072	0					
ANR	11024355	Identifier	stack_depth		11024072	1					
ANR	11024356	ExpressionStatement	"make_int ( & ep [ - 4 ] , stack_depth )"	6427:8:207546:207576	11024072	4	True				
ANR	11024357	CallExpression	"make_int ( & ep [ - 4 ] , stack_depth )"		11024072	0					
ANR	11024358	Callee	make_int		11024072	0					
ANR	11024359	Identifier	make_int		11024072	0					
ANR	11024360	ArgumentList	& ep [ - 4 ]		11024072	1					
ANR	11024361	Argument	& ep [ - 4 ]		11024072	0					
ANR	11024362	UnaryOperationExpression	& ep [ - 4 ]		11024072	0					
ANR	11024363	UnaryOperator	&		11024072	0					
ANR	11024364	ArrayIndexing	ep [ - 4 ]		11024072	1					
ANR	11024365	Identifier	ep		11024072	0					
ANR	11024366	UnaryOperationExpression	- 4		11024072	1					
ANR	11024367	UnaryOperator	-		11024072	0					
ANR	11024368	PrimaryExpression	4		11024072	1					
ANR	11024369	Argument	stack_depth		11024072	1					
ANR	11024370	Identifier	stack_depth		11024072	0					
ANR	11024371	ExpressionStatement	"make_int ( & ep [ - 1 ] , stage )"	6428:8:207586:207610	11024072	5	True				
ANR	11024372	CallExpression	"make_int ( & ep [ - 1 ] , stage )"		11024072	0					
ANR	11024373	Callee	make_int		11024072	0					
ANR	11024374	Identifier	make_int		11024072	0					
ANR	11024375	ArgumentList	& ep [ - 1 ]		11024072	1					
ANR	11024376	Argument	& ep [ - 1 ]		11024072	0					
ANR	11024377	UnaryOperationExpression	& ep [ - 1 ]		11024072	0					
ANR	11024378	UnaryOperator	&		11024072	0					
ANR	11024379	ArrayIndexing	ep [ - 1 ]		11024072	1					
ANR	11024380	Identifier	ep		11024072	0					
ANR	11024381	UnaryOperationExpression	- 1		11024072	1					
ANR	11024382	UnaryOperator	-		11024072	0					
ANR	11024383	PrimaryExpression	1		11024072	1					
ANR	11024384	Argument	stage		11024072	1					
ANR	11024385	Identifier	stage		11024072	0					
ANR	11024386	IfStatement	if ( code > 0 )		11024072	6					
ANR	11024387	Condition	code > 0	6429:12:207624:207631	11024072	0	True				
ANR	11024388	RelationalExpression	code > 0		11024072	0		>			
ANR	11024389	Identifier	code		11024072	0					
ANR	11024390	PrimaryExpression	0		11024072	1					
ANR	11024391	ReturnStatement	return code ;	6430:12:207646:207657	11024072	1	True				
ANR	11024392	Identifier	code		11024072	0					
ANR	11024393	ExpressionStatement	"make_int ( & ep [ - 2 ] , ++ depth )"	6432:8:207725:207751	11024072	7	True				
ANR	11024394	CallExpression	"make_int ( & ep [ - 2 ] , ++ depth )"		11024072	0					
ANR	11024395	Callee	make_int		11024072	0					
ANR	11024396	Identifier	make_int		11024072	0					
ANR	11024397	ArgumentList	& ep [ - 2 ]		11024072	1					
ANR	11024398	Argument	& ep [ - 2 ]		11024072	0					
ANR	11024399	UnaryOperationExpression	& ep [ - 2 ]		11024072	0					
ANR	11024400	UnaryOperator	&		11024072	0					
ANR	11024401	ArrayIndexing	ep [ - 2 ]		11024072	1					
ANR	11024402	Identifier	ep		11024072	0					
ANR	11024403	UnaryOperationExpression	- 2		11024072	1					
ANR	11024404	UnaryOperator	-		11024072	0					
ANR	11024405	PrimaryExpression	2		11024072	1					
ANR	11024406	Argument	++ depth		11024072	1					
ANR	11024407	UnaryExpression	++ depth		11024072	0					
ANR	11024408	IncDec	++		11024072	0					
ANR	11024409	Identifier	depth		11024072	1					
ANR	11024410	IfStatement	if ( code <= 0 )		11024072	13					
ANR	11024411	Condition	code <= 0	6434:8:207767:207775	11024072	0	True				
ANR	11024412	RelationalExpression	code <= 0		11024072	0		<=			
ANR	11024413	Identifier	code		11024072	0					
ANR	11024414	PrimaryExpression	0		11024072	1					
ANR	11024415	CompoundStatement		56:19:1939:1939	11024072	1					
ANR	11024416	ExpressionStatement	esp -= 7	6436:8:207844:207852	11024072	0	True				
ANR	11024417	AssignmentExpression	esp -= 7		11024072	0		-=			
ANR	11024418	Identifier	esp		11024072	0					
ANR	11024419	PrimaryExpression	7		11024072	1					
ANR	11024420	ExpressionStatement	code = o_pop_estack	6437:8:207862:207881	11024072	1	True				
ANR	11024421	AssignmentExpression	code = o_pop_estack		11024072	0		=			
ANR	11024422	Identifier	code		11024072	0					
ANR	11024423	Identifier	o_pop_estack		11024072	1					
ANR	11024424	ReturnStatement	return code ;	6439:4:207893:207904	11024072	14	True				
ANR	11024425	Identifier	code		11024072	0					
ANR	11024426	ReturnType	static int		11024072	1					
ANR	11024427	Identifier	currentbasecolor_cont		11024072	2					
ANR	11024428	ParameterList	i_ctx_t * i_ctx_p		11024072	3					
ANR	11024429	Parameter	i_ctx_t * i_ctx_p	6378:22:205820:205835	11024072	0	True				
ANR	11024430	ParameterType	i_ctx_t *		11024072	0					
ANR	11024431	Identifier	i_ctx_p		11024072	1					
ANR	11024432	CFGEntryNode	ENTRY		11024072		True				
ANR	11024433	CFGExitNode	EXIT		11024072		True				
ANR	11024434	Symbol	& arr		11024072						
ANR	11024435	Symbol	stack_depth		11024072						
ANR	11024436	Symbol	obj -> alternateproc		11024072						
ANR	11024437	Symbol	esp		11024072						
ANR	11024438	Symbol	code		11024072						
ANR	11024439	Symbol	parr		11024072						
ANR	11024440	Symbol	o_pop_estack		11024072						
ANR	11024441	Symbol	ep [ - 1 ] . value		11024072						
ANR	11024442	Symbol	gs_error_typecheck		11024072						
ANR	11024443	Symbol	& stage		11024072						
ANR	11024444	Symbol	ep [ - 3 ] . value		11024072						
ANR	11024445	Symbol	& obj		11024072						
ANR	11024446	Symbol	cont		11024072						
ANR	11024447	Symbol	CIESubst		11024072						
ANR	11024448	Symbol	gs_error_unknownerror		11024072						
ANR	11024449	Symbol	arr		11024072						
ANR	11024450	Symbol	* obj		11024072						
ANR	11024451	Symbol	& parr		11024072						
ANR	11024452	Symbol	& cont		11024072						
ANR	11024453	Symbol	currentbasecolor_cont		11024072						
ANR	11024454	Symbol	& stack_depth		11024072						
ANR	11024455	Symbol	i		11024072						
ANR	11024456	Symbol	ep [ - 1 ] . value . intval		11024072						
ANR	11024457	Symbol	ep		11024072						
ANR	11024458	Symbol	ep [ - 2 ] . value . intval		11024072						
ANR	11024459	Symbol	get_space_object		11024072						
ANR	11024460	Symbol	& CIESubst		11024072						
ANR	11024461	Symbol	ep [ - 2 ] . value		11024072						
ANR	11024462	Symbol	* ep		11024072						
ANR	11024463	Symbol	ep [ - 4 ] . value . intval		11024072						
ANR	11024464	Symbol	depth		11024072						
ANR	11024465	Symbol	ep [ - 3 ] . value . intval		11024072						
ANR	11024466	Symbol	stage		11024072						
ANR	11024467	Symbol	obj -> basecolorproc		11024072						
ANR	11024468	Symbol	i_ctx_p		11024072						
ANR	11024469	Symbol	obj		11024072						
ANR	11024470	Symbol	ep [ - 4 ] . value		11024072						
ANR	11024471	Symbol	base		11024072						
ANR	11024472	Function	zcurrentgray	6445:0:208036:209199							
ANR	11024473	FunctionDef	zcurrentgray (i_ctx_t * i_ctx_p)		11024472	0					
ANR	11024474	CompoundStatement		6447:0:208079:209199	11024472	0					
ANR	11024475	IdentifierDeclStatement	"int code , depth ;"	6448:4:208085:208100	11024472	0	True				
ANR	11024476	IdentifierDecl	code		11024472	0					
ANR	11024477	IdentifierDeclType	int		11024472	0					
ANR	11024478	Identifier	code		11024472	1					
ANR	11024479	IdentifierDecl	depth		11024472	1					
ANR	11024480	IdentifierDeclType	int		11024472	0					
ANR	11024481	Identifier	depth		11024472	1					
ANR	11024482	ExpressionStatement	"code = validate_spaces ( i_ctx_p , & istate -> colorspace [ 0 ] . array , & depth )"	6450:4:208107:208176	11024472	1	True				
ANR	11024483	AssignmentExpression	"code = validate_spaces ( i_ctx_p , & istate -> colorspace [ 0 ] . array , & depth )"		11024472	0		=			
ANR	11024484	Identifier	code		11024472	0					
ANR	11024485	CallExpression	"validate_spaces ( i_ctx_p , & istate -> colorspace [ 0 ] . array , & depth )"		11024472	1					
ANR	11024486	Callee	validate_spaces		11024472	0					
ANR	11024487	Identifier	validate_spaces		11024472	0					
ANR	11024488	ArgumentList	i_ctx_p		11024472	1					
ANR	11024489	Argument	i_ctx_p		11024472	0					
ANR	11024490	Identifier	i_ctx_p		11024472	0					
ANR	11024491	Argument	& istate -> colorspace [ 0 ] . array		11024472	1					
ANR	11024492	UnaryOperationExpression	& istate -> colorspace [ 0 ] . array		11024472	0					
ANR	11024493	UnaryOperator	&		11024472	0					
ANR	11024494	MemberAccess	istate -> colorspace [ 0 ] . array		11024472	1					
ANR	11024495	ArrayIndexing	istate -> colorspace [ 0 ]		11024472	0					
ANR	11024496	PtrMemberAccess	istate -> colorspace		11024472	0					
ANR	11024497	Identifier	istate		11024472	0					
ANR	11024498	Identifier	colorspace		11024472	1					
ANR	11024499	PrimaryExpression	0		11024472	1					
ANR	11024500	Identifier	array		11024472	1					
ANR	11024501	Argument	& depth		11024472	2					
ANR	11024502	UnaryOperationExpression	& depth		11024472	0					
ANR	11024503	UnaryOperator	&		11024472	0					
ANR	11024504	Identifier	depth		11024472	1					
ANR	11024505	IfStatement	if ( code < 0 )		11024472	2					
ANR	11024506	Condition	code < 0	6451:8:208186:208193	11024472	0	True				
ANR	11024507	RelationalExpression	code < 0		11024472	0		<			
ANR	11024508	Identifier	code		11024472	0					
ANR	11024509	PrimaryExpression	0		11024472	1					
ANR	11024510	ReturnStatement	return code ;	6452:8:208204:208215	11024472	1	True				
ANR	11024511	Identifier	code		11024472	0					
ANR	11024512	ExpressionStatement	code = zcurrentcolor ( i_ctx_p )	6454:4:208222:208251	11024472	3	True				
ANR	11024513	AssignmentExpression	code = zcurrentcolor ( i_ctx_p )		11024472	0		=			
ANR	11024514	Identifier	code		11024472	0					
ANR	11024515	CallExpression	zcurrentcolor ( i_ctx_p )		11024472	1					
ANR	11024516	Callee	zcurrentcolor		11024472	0					
ANR	11024517	Identifier	zcurrentcolor		11024472	0					
ANR	11024518	ArgumentList	i_ctx_p		11024472	1					
ANR	11024519	Argument	i_ctx_p		11024472	0					
ANR	11024520	Identifier	i_ctx_p		11024472	0					
ANR	11024521	IfStatement	if ( code < 0 )		11024472	4					
ANR	11024522	Condition	code < 0	6455:8:208261:208268	11024472	0	True				
ANR	11024523	RelationalExpression	code < 0		11024472	0		<			
ANR	11024524	Identifier	code		11024472	0					
ANR	11024525	PrimaryExpression	0		11024472	1					
ANR	11024526	ReturnStatement	return code ;	6456:8:208279:208290	11024472	1	True				
ANR	11024527	Identifier	code		11024472	0					
ANR	11024528	ExpressionStatement	check_estack ( 7 )	6459:4:208419:208434	11024472	5	True				
ANR	11024529	CallExpression	check_estack ( 7 )		11024472	0					
ANR	11024530	Callee	check_estack		11024472	0					
ANR	11024531	Identifier	check_estack		11024472	0					
ANR	11024532	ArgumentList	7		11024472	1					
ANR	11024533	Argument	7		11024472	0					
ANR	11024534	PrimaryExpression	7		11024472	0					
ANR	11024535	ExpressionStatement	"push_mark_estack ( es_other , colour_cleanup )"	6460:4:208440:208482	11024472	6	True				
ANR	11024536	CallExpression	"push_mark_estack ( es_other , colour_cleanup )"		11024472	0					
ANR	11024537	Callee	push_mark_estack		11024472	0					
ANR	11024538	Identifier	push_mark_estack		11024472	0					
ANR	11024539	ArgumentList	es_other		11024472	1					
ANR	11024540	Argument	es_other		11024472	0					
ANR	11024541	Identifier	es_other		11024472	0					
ANR	11024542	Argument	colour_cleanup		11024472	1					
ANR	11024543	Identifier	colour_cleanup		11024472	0					
ANR	11024544	ExpressionStatement	esp ++	6461:4:208488:208493	11024472	7	True				
ANR	11024545	PostIncDecOperationExpression	esp ++		11024472	0					
ANR	11024546	Identifier	esp		11024472	0					
ANR	11024547	IncDec	++		11024472	1					
ANR	11024548	ExpressionStatement	"make_int ( & esp [ 0 ] , 0 )"	6463:4:208557:208577	11024472	8	True				
ANR	11024549	CallExpression	"make_int ( & esp [ 0 ] , 0 )"		11024472	0					
ANR	11024550	Callee	make_int		11024472	0					
ANR	11024551	Identifier	make_int		11024472	0					
ANR	11024552	ArgumentList	& esp [ 0 ]		11024472	1					
ANR	11024553	Argument	& esp [ 0 ]		11024472	0					
ANR	11024554	UnaryOperationExpression	& esp [ 0 ]		11024472	0					
ANR	11024555	UnaryOperator	&		11024472	0					
ANR	11024556	ArrayIndexing	esp [ 0 ]		11024472	1					
ANR	11024557	Identifier	esp		11024472	0					
ANR	11024558	PrimaryExpression	0		11024472	1					
ANR	11024559	Argument	0		11024472	1					
ANR	11024560	PrimaryExpression	0		11024472	0					
ANR	11024561	ExpressionStatement	esp ++	6464:4:208583:208588	11024472	9	True				
ANR	11024562	PostIncDecOperationExpression	esp ++		11024472	0					
ANR	11024563	Identifier	esp		11024472	0					
ANR	11024564	IncDec	++		11024472	1					
ANR	11024565	ExpressionStatement	"make_int ( & esp [ 0 ] , 0 )"	6466:4:208658:208678	11024472	10	True				
ANR	11024566	CallExpression	"make_int ( & esp [ 0 ] , 0 )"		11024472	0					
ANR	11024567	Callee	make_int		11024472	0					
ANR	11024568	Identifier	make_int		11024472	0					
ANR	11024569	ArgumentList	& esp [ 0 ]		11024472	1					
ANR	11024570	Argument	& esp [ 0 ]		11024472	0					
ANR	11024571	UnaryOperationExpression	& esp [ 0 ]		11024472	0					
ANR	11024572	UnaryOperator	&		11024472	0					
ANR	11024573	ArrayIndexing	esp [ 0 ]		11024472	1					
ANR	11024574	Identifier	esp		11024472	0					
ANR	11024575	PrimaryExpression	0		11024472	1					
ANR	11024576	Argument	0		11024472	1					
ANR	11024577	PrimaryExpression	0		11024472	0					
ANR	11024578	ExpressionStatement	"make_int ( & esp [ 1 ] , 1 )"	6467:4:208684:208704	11024472	11	True				
ANR	11024579	CallExpression	"make_int ( & esp [ 1 ] , 1 )"		11024472	0					
ANR	11024580	Callee	make_int		11024472	0					
ANR	11024581	Identifier	make_int		11024472	0					
ANR	11024582	ArgumentList	& esp [ 1 ]		11024472	1					
ANR	11024583	Argument	& esp [ 1 ]		11024472	0					
ANR	11024584	UnaryOperationExpression	& esp [ 1 ]		11024472	0					
ANR	11024585	UnaryOperator	&		11024472	0					
ANR	11024586	ArrayIndexing	esp [ 1 ]		11024472	1					
ANR	11024587	Identifier	esp		11024472	0					
ANR	11024588	PrimaryExpression	1		11024472	1					
ANR	11024589	Argument	1		11024472	1					
ANR	11024590	PrimaryExpression	1		11024472	0					
ANR	11024591	ExpressionStatement	"make_int ( & esp [ 2 ] , 0 )"	6469:4:208766:208786	11024472	12	True				
ANR	11024592	CallExpression	"make_int ( & esp [ 2 ] , 0 )"		11024472	0					
ANR	11024593	Callee	make_int		11024472	0					
ANR	11024594	Identifier	make_int		11024472	0					
ANR	11024595	ArgumentList	& esp [ 2 ]		11024472	1					
ANR	11024596	Argument	& esp [ 2 ]		11024472	0					
ANR	11024597	UnaryOperationExpression	& esp [ 2 ]		11024472	0					
ANR	11024598	UnaryOperator	&		11024472	0					
ANR	11024599	ArrayIndexing	esp [ 2 ]		11024472	1					
ANR	11024600	Identifier	esp		11024472	0					
ANR	11024601	PrimaryExpression	2		11024472	1					
ANR	11024602	Argument	0		11024472	1					
ANR	11024603	PrimaryExpression	0		11024472	0					
ANR	11024604	ExpressionStatement	esp [ 3 ] = istate -> colorspace [ 0 ] . array	6474:4:208965:209001	11024472	13	True				
ANR	11024605	AssignmentExpression	esp [ 3 ] = istate -> colorspace [ 0 ] . array		11024472	0		=			
ANR	11024606	ArrayIndexing	esp [ 3 ]		11024472	0					
ANR	11024607	Identifier	esp		11024472	0					
ANR	11024608	PrimaryExpression	3		11024472	1					
ANR	11024609	MemberAccess	istate -> colorspace [ 0 ] . array		11024472	1					
ANR	11024610	ArrayIndexing	istate -> colorspace [ 0 ]		11024472	0					
ANR	11024611	PtrMemberAccess	istate -> colorspace		11024472	0					
ANR	11024612	Identifier	istate		11024472	0					
ANR	11024613	Identifier	colorspace		11024472	1					
ANR	11024614	PrimaryExpression	0		11024472	1					
ANR	11024615	Identifier	array		11024472	1					
ANR	11024616	ExpressionStatement	esp += 3	6475:4:209007:209015	11024472	14	True				
ANR	11024617	AssignmentExpression	esp += 3		11024472	0		+=			
ANR	11024618	Identifier	esp		11024472	0					
ANR	11024619	PrimaryExpression	3		11024472	1					
ANR	11024620	ExpressionStatement	push_op_estack ( currentbasecolor_cont )	6477:4:209134:209171	11024472	15	True				
ANR	11024621	CallExpression	push_op_estack ( currentbasecolor_cont )		11024472	0					
ANR	11024622	Callee	push_op_estack		11024472	0					
ANR	11024623	Identifier	push_op_estack		11024472	0					
ANR	11024624	ArgumentList	currentbasecolor_cont		11024472	1					
ANR	11024625	Argument	currentbasecolor_cont		11024472	0					
ANR	11024626	Identifier	currentbasecolor_cont		11024472	0					
ANR	11024627	ReturnStatement	return o_push_estack ;	6478:4:209177:209197	11024472	16	True				
ANR	11024628	Identifier	o_push_estack		11024472	0					
ANR	11024629	ReturnType	static int		11024472	1					
ANR	11024630	Identifier	zcurrentgray		11024472	2					
ANR	11024631	ParameterList	i_ctx_t * i_ctx_p		11024472	3					
ANR	11024632	Parameter	i_ctx_t * i_ctx_p	6446:13:208060:208076	11024472	0	True				
ANR	11024633	ParameterType	i_ctx_t *		11024472	0					
ANR	11024634	Identifier	i_ctx_p		11024472	1					
ANR	11024635	CFGEntryNode	ENTRY		11024472		True				
ANR	11024636	CFGExitNode	EXIT		11024472		True				
ANR	11024637	Symbol	validate_spaces		11024472						
ANR	11024638	Symbol	& istate -> colorspace [ 0 ] . array		11024472						
ANR	11024639	Symbol	istate -> colorspace [ 0 ] . array		11024472						
ANR	11024640	Symbol	code		11024472						
ANR	11024641	Symbol	esp		11024472						
ANR	11024642	Symbol	currentbasecolor_cont		11024472						
ANR	11024643	Symbol	colour_cleanup		11024472						
ANR	11024644	Symbol	es_other		11024472						
ANR	11024645	Symbol	* istate		11024472						
ANR	11024646	Symbol	& depth		11024472						
ANR	11024647	Symbol	zcurrentcolor		11024472						
ANR	11024648	Symbol	depth		11024472						
ANR	11024649	Symbol	* esp		11024472						
ANR	11024650	Symbol	i_ctx_p		11024472						
ANR	11024651	Symbol	istate -> colorspace		11024472						
ANR	11024652	Symbol	* * istate		11024472						
ANR	11024653	Symbol	istate		11024472						
ANR	11024654	Symbol	* istate -> colorspace		11024472						
ANR	11024655	Symbol	o_push_estack		11024472						
ANR	11024656	Function	zcurrenthsbcolor	6480:0:209201:210367							
ANR	11024657	FunctionDef	zcurrenthsbcolor (i_ctx_t * i_ctx_p)		11024656	0					
ANR	11024658	CompoundStatement		6482:0:209248:210367	11024656	0					
ANR	11024659	IdentifierDeclStatement	"int code , depth ;"	6483:4:209254:209269	11024656	0	True				
ANR	11024660	IdentifierDecl	code		11024656	0					
ANR	11024661	IdentifierDeclType	int		11024656	0					
ANR	11024662	Identifier	code		11024656	1					
ANR	11024663	IdentifierDecl	depth		11024656	1					
ANR	11024664	IdentifierDeclType	int		11024656	0					
ANR	11024665	Identifier	depth		11024656	1					
ANR	11024666	ExpressionStatement	"code = validate_spaces ( i_ctx_p , & istate -> colorspace [ 0 ] . array , & depth )"	6485:4:209276:209345	11024656	1	True				
ANR	11024667	AssignmentExpression	"code = validate_spaces ( i_ctx_p , & istate -> colorspace [ 0 ] . array , & depth )"		11024656	0		=			
ANR	11024668	Identifier	code		11024656	0					
ANR	11024669	CallExpression	"validate_spaces ( i_ctx_p , & istate -> colorspace [ 0 ] . array , & depth )"		11024656	1					
ANR	11024670	Callee	validate_spaces		11024656	0					
ANR	11024671	Identifier	validate_spaces		11024656	0					
ANR	11024672	ArgumentList	i_ctx_p		11024656	1					
ANR	11024673	Argument	i_ctx_p		11024656	0					
ANR	11024674	Identifier	i_ctx_p		11024656	0					
ANR	11024675	Argument	& istate -> colorspace [ 0 ] . array		11024656	1					
ANR	11024676	UnaryOperationExpression	& istate -> colorspace [ 0 ] . array		11024656	0					
ANR	11024677	UnaryOperator	&		11024656	0					
ANR	11024678	MemberAccess	istate -> colorspace [ 0 ] . array		11024656	1					
ANR	11024679	ArrayIndexing	istate -> colorspace [ 0 ]		11024656	0					
ANR	11024680	PtrMemberAccess	istate -> colorspace		11024656	0					
ANR	11024681	Identifier	istate		11024656	0					
ANR	11024682	Identifier	colorspace		11024656	1					
ANR	11024683	PrimaryExpression	0		11024656	1					
ANR	11024684	Identifier	array		11024656	1					
ANR	11024685	Argument	& depth		11024656	2					
ANR	11024686	UnaryOperationExpression	& depth		11024656	0					
ANR	11024687	UnaryOperator	&		11024656	0					
ANR	11024688	Identifier	depth		11024656	1					
ANR	11024689	IfStatement	if ( code < 0 )		11024656	2					
ANR	11024690	Condition	code < 0	6486:8:209355:209362	11024656	0	True				
ANR	11024691	RelationalExpression	code < 0		11024656	0		<			
ANR	11024692	Identifier	code		11024656	0					
ANR	11024693	PrimaryExpression	0		11024656	1					
ANR	11024694	ReturnStatement	return code ;	6487:8:209373:209384	11024656	1	True				
ANR	11024695	Identifier	code		11024656	0					
ANR	11024696	ExpressionStatement	code = zcurrentcolor ( i_ctx_p )	6489:4:209391:209420	11024656	3	True				
ANR	11024697	AssignmentExpression	code = zcurrentcolor ( i_ctx_p )		11024656	0		=			
ANR	11024698	Identifier	code		11024656	0					
ANR	11024699	CallExpression	zcurrentcolor ( i_ctx_p )		11024656	1					
ANR	11024700	Callee	zcurrentcolor		11024656	0					
ANR	11024701	Identifier	zcurrentcolor		11024656	0					
ANR	11024702	ArgumentList	i_ctx_p		11024656	1					
ANR	11024703	Argument	i_ctx_p		11024656	0					
ANR	11024704	Identifier	i_ctx_p		11024656	0					
ANR	11024705	IfStatement	if ( code < 0 )		11024656	4					
ANR	11024706	Condition	code < 0	6490:8:209430:209437	11024656	0	True				
ANR	11024707	RelationalExpression	code < 0		11024656	0		<			
ANR	11024708	Identifier	code		11024656	0					
ANR	11024709	PrimaryExpression	0		11024656	1					
ANR	11024710	ReturnStatement	return code ;	6491:8:209448:209459	11024656	1	True				
ANR	11024711	Identifier	code		11024656	0					
ANR	11024712	ExpressionStatement	check_estack ( 7 )	6494:4:209588:209603	11024656	5	True				
ANR	11024713	CallExpression	check_estack ( 7 )		11024656	0					
ANR	11024714	Callee	check_estack		11024656	0					
ANR	11024715	Identifier	check_estack		11024656	0					
ANR	11024716	ArgumentList	7		11024656	1					
ANR	11024717	Argument	7		11024656	0					
ANR	11024718	PrimaryExpression	7		11024656	0					
ANR	11024719	ExpressionStatement	"push_mark_estack ( es_other , colour_cleanup )"	6495:4:209609:209651	11024656	6	True				
ANR	11024720	CallExpression	"push_mark_estack ( es_other , colour_cleanup )"		11024656	0					
ANR	11024721	Callee	push_mark_estack		11024656	0					
ANR	11024722	Identifier	push_mark_estack		11024656	0					
ANR	11024723	ArgumentList	es_other		11024656	1					
ANR	11024724	Argument	es_other		11024656	0					
ANR	11024725	Identifier	es_other		11024656	0					
ANR	11024726	Argument	colour_cleanup		11024656	1					
ANR	11024727	Identifier	colour_cleanup		11024656	0					
ANR	11024728	ExpressionStatement	esp ++	6496:4:209657:209662	11024656	7	True				
ANR	11024729	PostIncDecOperationExpression	esp ++		11024656	0					
ANR	11024730	Identifier	esp		11024656	0					
ANR	11024731	IncDec	++		11024656	1					
ANR	11024732	ExpressionStatement	"make_int ( & esp [ 0 ] , 0 )"	6498:4:209726:209746	11024656	8	True				
ANR	11024733	CallExpression	"make_int ( & esp [ 0 ] , 0 )"		11024656	0					
ANR	11024734	Callee	make_int		11024656	0					
ANR	11024735	Identifier	make_int		11024656	0					
ANR	11024736	ArgumentList	& esp [ 0 ]		11024656	1					
ANR	11024737	Argument	& esp [ 0 ]		11024656	0					
ANR	11024738	UnaryOperationExpression	& esp [ 0 ]		11024656	0					
ANR	11024739	UnaryOperator	&		11024656	0					
ANR	11024740	ArrayIndexing	esp [ 0 ]		11024656	1					
ANR	11024741	Identifier	esp		11024656	0					
ANR	11024742	PrimaryExpression	0		11024656	1					
ANR	11024743	Argument	0		11024656	1					
ANR	11024744	PrimaryExpression	0		11024656	0					
ANR	11024745	ExpressionStatement	esp ++	6499:4:209752:209757	11024656	9	True				
ANR	11024746	PostIncDecOperationExpression	esp ++		11024656	0					
ANR	11024747	Identifier	esp		11024656	0					
ANR	11024748	IncDec	++		11024656	1					
ANR	11024749	ExpressionStatement	"make_int ( & esp [ 0 ] , 1 )"	6501:4:209826:209846	11024656	10	True				
ANR	11024750	CallExpression	"make_int ( & esp [ 0 ] , 1 )"		11024656	0					
ANR	11024751	Callee	make_int		11024656	0					
ANR	11024752	Identifier	make_int		11024656	0					
ANR	11024753	ArgumentList	& esp [ 0 ]		11024656	1					
ANR	11024754	Argument	& esp [ 0 ]		11024656	0					
ANR	11024755	UnaryOperationExpression	& esp [ 0 ]		11024656	0					
ANR	11024756	UnaryOperator	&		11024656	0					
ANR	11024757	ArrayIndexing	esp [ 0 ]		11024656	1					
ANR	11024758	Identifier	esp		11024656	0					
ANR	11024759	PrimaryExpression	0		11024656	1					
ANR	11024760	Argument	1		11024656	1					
ANR	11024761	PrimaryExpression	1		11024656	0					
ANR	11024762	ExpressionStatement	"make_int ( & esp [ 1 ] , 1 )"	6502:4:209852:209872	11024656	11	True				
ANR	11024763	CallExpression	"make_int ( & esp [ 1 ] , 1 )"		11024656	0					
ANR	11024764	Callee	make_int		11024656	0					
ANR	11024765	Identifier	make_int		11024656	0					
ANR	11024766	ArgumentList	& esp [ 1 ]		11024656	1					
ANR	11024767	Argument	& esp [ 1 ]		11024656	0					
ANR	11024768	UnaryOperationExpression	& esp [ 1 ]		11024656	0					
ANR	11024769	UnaryOperator	&		11024656	0					
ANR	11024770	ArrayIndexing	esp [ 1 ]		11024656	1					
ANR	11024771	Identifier	esp		11024656	0					
ANR	11024772	PrimaryExpression	1		11024656	1					
ANR	11024773	Argument	1		11024656	1					
ANR	11024774	PrimaryExpression	1		11024656	0					
ANR	11024775	ExpressionStatement	"make_int ( & esp [ 2 ] , 0 )"	6504:4:209934:209954	11024656	12	True				
ANR	11024776	CallExpression	"make_int ( & esp [ 2 ] , 0 )"		11024656	0					
ANR	11024777	Callee	make_int		11024656	0					
ANR	11024778	Identifier	make_int		11024656	0					
ANR	11024779	ArgumentList	& esp [ 2 ]		11024656	1					
ANR	11024780	Argument	& esp [ 2 ]		11024656	0					
ANR	11024781	UnaryOperationExpression	& esp [ 2 ]		11024656	0					
ANR	11024782	UnaryOperator	&		11024656	0					
ANR	11024783	ArrayIndexing	esp [ 2 ]		11024656	1					
ANR	11024784	Identifier	esp		11024656	0					
ANR	11024785	PrimaryExpression	2		11024656	1					
ANR	11024786	Argument	0		11024656	1					
ANR	11024787	PrimaryExpression	0		11024656	0					
ANR	11024788	ExpressionStatement	esp [ 3 ] = istate -> colorspace [ 0 ] . array	6509:4:210133:210169	11024656	13	True				
ANR	11024789	AssignmentExpression	esp [ 3 ] = istate -> colorspace [ 0 ] . array		11024656	0		=			
ANR	11024790	ArrayIndexing	esp [ 3 ]		11024656	0					
ANR	11024791	Identifier	esp		11024656	0					
ANR	11024792	PrimaryExpression	3		11024656	1					
ANR	11024793	MemberAccess	istate -> colorspace [ 0 ] . array		11024656	1					
ANR	11024794	ArrayIndexing	istate -> colorspace [ 0 ]		11024656	0					
ANR	11024795	PtrMemberAccess	istate -> colorspace		11024656	0					
ANR	11024796	Identifier	istate		11024656	0					
ANR	11024797	Identifier	colorspace		11024656	1					
ANR	11024798	PrimaryExpression	0		11024656	1					
ANR	11024799	Identifier	array		11024656	1					
ANR	11024800	ExpressionStatement	esp += 3	6510:4:210175:210183	11024656	14	True				
ANR	11024801	AssignmentExpression	esp += 3		11024656	0		+=			
ANR	11024802	Identifier	esp		11024656	0					
ANR	11024803	PrimaryExpression	3		11024656	1					
ANR	11024804	ExpressionStatement	push_op_estack ( currentbasecolor_cont )	6512:4:210302:210339	11024656	15	True				
ANR	11024805	CallExpression	push_op_estack ( currentbasecolor_cont )		11024656	0					
ANR	11024806	Callee	push_op_estack		11024656	0					
ANR	11024807	Identifier	push_op_estack		11024656	0					
ANR	11024808	ArgumentList	currentbasecolor_cont		11024656	1					
ANR	11024809	Argument	currentbasecolor_cont		11024656	0					
ANR	11024810	Identifier	currentbasecolor_cont		11024656	0					
ANR	11024811	ReturnStatement	return o_push_estack ;	6513:4:210345:210365	11024656	16	True				
ANR	11024812	Identifier	o_push_estack		11024656	0					
ANR	11024813	ReturnType	static int		11024656	1					
ANR	11024814	Identifier	zcurrenthsbcolor		11024656	2					
ANR	11024815	ParameterList	i_ctx_t * i_ctx_p		11024656	3					
ANR	11024816	Parameter	i_ctx_t * i_ctx_p	6481:17:209229:209245	11024656	0	True				
ANR	11024817	ParameterType	i_ctx_t *		11024656	0					
ANR	11024818	Identifier	i_ctx_p		11024656	1					
ANR	11024819	CFGEntryNode	ENTRY		11024656		True				
ANR	11024820	CFGExitNode	EXIT		11024656		True				
ANR	11024821	Symbol	validate_spaces		11024656						
ANR	11024822	Symbol	& istate -> colorspace [ 0 ] . array		11024656						
ANR	11024823	Symbol	istate -> colorspace [ 0 ] . array		11024656						
ANR	11024824	Symbol	code		11024656						
ANR	11024825	Symbol	esp		11024656						
ANR	11024826	Symbol	currentbasecolor_cont		11024656						
ANR	11024827	Symbol	colour_cleanup		11024656						
ANR	11024828	Symbol	es_other		11024656						
ANR	11024829	Symbol	* istate		11024656						
ANR	11024830	Symbol	& depth		11024656						
ANR	11024831	Symbol	zcurrentcolor		11024656						
ANR	11024832	Symbol	depth		11024656						
ANR	11024833	Symbol	* esp		11024656						
ANR	11024834	Symbol	i_ctx_p		11024656						
ANR	11024835	Symbol	istate -> colorspace		11024656						
ANR	11024836	Symbol	* * istate		11024656						
ANR	11024837	Symbol	istate		11024656						
ANR	11024838	Symbol	* istate -> colorspace		11024656						
ANR	11024839	Symbol	o_push_estack		11024656						
ANR	11024840	Function	zcurrentrgbcolor	6515:0:210369:211413							
ANR	11024841	FunctionDef	zcurrentrgbcolor (i_ctx_t * i_ctx_p)		11024840	0					
ANR	11024842	CompoundStatement		6517:0:210416:211413	11024840	0					
ANR	11024843	IdentifierDeclStatement	int code ;	6518:4:210422:210430	11024840	0	True				
ANR	11024844	IdentifierDecl	code		11024840	0					
ANR	11024845	IdentifierDeclType	int		11024840	0					
ANR	11024846	Identifier	code		11024840	1					
ANR	11024847	ExpressionStatement	code = zcurrentcolor ( i_ctx_p )	6520:4:210437:210466	11024840	1	True				
ANR	11024848	AssignmentExpression	code = zcurrentcolor ( i_ctx_p )		11024840	0		=			
ANR	11024849	Identifier	code		11024840	0					
ANR	11024850	CallExpression	zcurrentcolor ( i_ctx_p )		11024840	1					
ANR	11024851	Callee	zcurrentcolor		11024840	0					
ANR	11024852	Identifier	zcurrentcolor		11024840	0					
ANR	11024853	ArgumentList	i_ctx_p		11024840	1					
ANR	11024854	Argument	i_ctx_p		11024840	0					
ANR	11024855	Identifier	i_ctx_p		11024840	0					
ANR	11024856	IfStatement	if ( code < 0 )		11024840	2					
ANR	11024857	Condition	code < 0	6521:8:210476:210483	11024840	0	True				
ANR	11024858	RelationalExpression	code < 0		11024840	0		<			
ANR	11024859	Identifier	code		11024840	0					
ANR	11024860	PrimaryExpression	0		11024840	1					
ANR	11024861	ReturnStatement	return code ;	6522:8:210494:210505	11024840	1	True				
ANR	11024862	Identifier	code		11024840	0					
ANR	11024863	ExpressionStatement	check_estack ( 7 )	6525:4:210634:210649	11024840	3	True				
ANR	11024864	CallExpression	check_estack ( 7 )		11024840	0					
ANR	11024865	Callee	check_estack		11024840	0					
ANR	11024866	Identifier	check_estack		11024840	0					
ANR	11024867	ArgumentList	7		11024840	1					
ANR	11024868	Argument	7		11024840	0					
ANR	11024869	PrimaryExpression	7		11024840	0					
ANR	11024870	ExpressionStatement	"push_mark_estack ( es_other , colour_cleanup )"	6526:4:210655:210697	11024840	4	True				
ANR	11024871	CallExpression	"push_mark_estack ( es_other , colour_cleanup )"		11024840	0					
ANR	11024872	Callee	push_mark_estack		11024840	0					
ANR	11024873	Identifier	push_mark_estack		11024840	0					
ANR	11024874	ArgumentList	es_other		11024840	1					
ANR	11024875	Argument	es_other		11024840	0					
ANR	11024876	Identifier	es_other		11024840	0					
ANR	11024877	Argument	colour_cleanup		11024840	1					
ANR	11024878	Identifier	colour_cleanup		11024840	0					
ANR	11024879	ExpressionStatement	esp ++	6527:4:210703:210708	11024840	5	True				
ANR	11024880	PostIncDecOperationExpression	esp ++		11024840	0					
ANR	11024881	Identifier	esp		11024840	0					
ANR	11024882	IncDec	++		11024840	1					
ANR	11024883	ExpressionStatement	"make_int ( & esp [ 0 ] , 0 )"	6529:4:210772:210792	11024840	6	True				
ANR	11024884	CallExpression	"make_int ( & esp [ 0 ] , 0 )"		11024840	0					
ANR	11024885	Callee	make_int		11024840	0					
ANR	11024886	Identifier	make_int		11024840	0					
ANR	11024887	ArgumentList	& esp [ 0 ]		11024840	1					
ANR	11024888	Argument	& esp [ 0 ]		11024840	0					
ANR	11024889	UnaryOperationExpression	& esp [ 0 ]		11024840	0					
ANR	11024890	UnaryOperator	&		11024840	0					
ANR	11024891	ArrayIndexing	esp [ 0 ]		11024840	1					
ANR	11024892	Identifier	esp		11024840	0					
ANR	11024893	PrimaryExpression	0		11024840	1					
ANR	11024894	Argument	0		11024840	1					
ANR	11024895	PrimaryExpression	0		11024840	0					
ANR	11024896	ExpressionStatement	esp ++	6530:4:210798:210803	11024840	7	True				
ANR	11024897	PostIncDecOperationExpression	esp ++		11024840	0					
ANR	11024898	Identifier	esp		11024840	0					
ANR	11024899	IncDec	++		11024840	1					
ANR	11024900	ExpressionStatement	"make_int ( & esp [ 0 ] , 2 )"	6532:4:210872:210892	11024840	8	True				
ANR	11024901	CallExpression	"make_int ( & esp [ 0 ] , 2 )"		11024840	0					
ANR	11024902	Callee	make_int		11024840	0					
ANR	11024903	Identifier	make_int		11024840	0					
ANR	11024904	ArgumentList	& esp [ 0 ]		11024840	1					
ANR	11024905	Argument	& esp [ 0 ]		11024840	0					
ANR	11024906	UnaryOperationExpression	& esp [ 0 ]		11024840	0					
ANR	11024907	UnaryOperator	&		11024840	0					
ANR	11024908	ArrayIndexing	esp [ 0 ]		11024840	1					
ANR	11024909	Identifier	esp		11024840	0					
ANR	11024910	PrimaryExpression	0		11024840	1					
ANR	11024911	Argument	2		11024840	1					
ANR	11024912	PrimaryExpression	2		11024840	0					
ANR	11024913	ExpressionStatement	"make_int ( & esp [ 1 ] , 1 )"	6533:4:210898:210918	11024840	9	True				
ANR	11024914	CallExpression	"make_int ( & esp [ 1 ] , 1 )"		11024840	0					
ANR	11024915	Callee	make_int		11024840	0					
ANR	11024916	Identifier	make_int		11024840	0					
ANR	11024917	ArgumentList	& esp [ 1 ]		11024840	1					
ANR	11024918	Argument	& esp [ 1 ]		11024840	0					
ANR	11024919	UnaryOperationExpression	& esp [ 1 ]		11024840	0					
ANR	11024920	UnaryOperator	&		11024840	0					
ANR	11024921	ArrayIndexing	esp [ 1 ]		11024840	1					
ANR	11024922	Identifier	esp		11024840	0					
ANR	11024923	PrimaryExpression	1		11024840	1					
ANR	11024924	Argument	1		11024840	1					
ANR	11024925	PrimaryExpression	1		11024840	0					
ANR	11024926	ExpressionStatement	"make_int ( & esp [ 2 ] , 0 )"	6535:4:210980:211000	11024840	10	True				
ANR	11024927	CallExpression	"make_int ( & esp [ 2 ] , 0 )"		11024840	0					
ANR	11024928	Callee	make_int		11024840	0					
ANR	11024929	Identifier	make_int		11024840	0					
ANR	11024930	ArgumentList	& esp [ 2 ]		11024840	1					
ANR	11024931	Argument	& esp [ 2 ]		11024840	0					
ANR	11024932	UnaryOperationExpression	& esp [ 2 ]		11024840	0					
ANR	11024933	UnaryOperator	&		11024840	0					
ANR	11024934	ArrayIndexing	esp [ 2 ]		11024840	1					
ANR	11024935	Identifier	esp		11024840	0					
ANR	11024936	PrimaryExpression	2		11024840	1					
ANR	11024937	Argument	0		11024840	1					
ANR	11024938	PrimaryExpression	0		11024840	0					
ANR	11024939	ExpressionStatement	esp [ 3 ] = istate -> colorspace [ 0 ] . array	6540:4:211179:211215	11024840	11	True				
ANR	11024940	AssignmentExpression	esp [ 3 ] = istate -> colorspace [ 0 ] . array		11024840	0		=			
ANR	11024941	ArrayIndexing	esp [ 3 ]		11024840	0					
ANR	11024942	Identifier	esp		11024840	0					
ANR	11024943	PrimaryExpression	3		11024840	1					
ANR	11024944	MemberAccess	istate -> colorspace [ 0 ] . array		11024840	1					
ANR	11024945	ArrayIndexing	istate -> colorspace [ 0 ]		11024840	0					
ANR	11024946	PtrMemberAccess	istate -> colorspace		11024840	0					
ANR	11024947	Identifier	istate		11024840	0					
ANR	11024948	Identifier	colorspace		11024840	1					
ANR	11024949	PrimaryExpression	0		11024840	1					
ANR	11024950	Identifier	array		11024840	1					
ANR	11024951	ExpressionStatement	esp += 3	6541:4:211221:211229	11024840	12	True				
ANR	11024952	AssignmentExpression	esp += 3		11024840	0		+=			
ANR	11024953	Identifier	esp		11024840	0					
ANR	11024954	PrimaryExpression	3		11024840	1					
ANR	11024955	ExpressionStatement	push_op_estack ( currentbasecolor_cont )	6543:4:211348:211385	11024840	13	True				
ANR	11024956	CallExpression	push_op_estack ( currentbasecolor_cont )		11024840	0					
ANR	11024957	Callee	push_op_estack		11024840	0					
ANR	11024958	Identifier	push_op_estack		11024840	0					
ANR	11024959	ArgumentList	currentbasecolor_cont		11024840	1					
ANR	11024960	Argument	currentbasecolor_cont		11024840	0					
ANR	11024961	Identifier	currentbasecolor_cont		11024840	0					
ANR	11024962	ReturnStatement	return o_push_estack ;	6544:4:211391:211411	11024840	14	True				
ANR	11024963	Identifier	o_push_estack		11024840	0					
ANR	11024964	ReturnType	static int		11024840	1					
ANR	11024965	Identifier	zcurrentrgbcolor		11024840	2					
ANR	11024966	ParameterList	i_ctx_t * i_ctx_p		11024840	3					
ANR	11024967	Parameter	i_ctx_t * i_ctx_p	6516:17:210397:210413	11024840	0	True				
ANR	11024968	ParameterType	i_ctx_t *		11024840	0					
ANR	11024969	Identifier	i_ctx_p		11024840	1					
ANR	11024970	CFGEntryNode	ENTRY		11024840		True				
ANR	11024971	CFGExitNode	EXIT		11024840		True				
ANR	11024972	Symbol	istate -> colorspace [ 0 ] . array		11024840						
ANR	11024973	Symbol	code		11024840						
ANR	11024974	Symbol	esp		11024840						
ANR	11024975	Symbol	currentbasecolor_cont		11024840						
ANR	11024976	Symbol	colour_cleanup		11024840						
ANR	11024977	Symbol	es_other		11024840						
ANR	11024978	Symbol	* istate		11024840						
ANR	11024979	Symbol	zcurrentcolor		11024840						
ANR	11024980	Symbol	* esp		11024840						
ANR	11024981	Symbol	i_ctx_p		11024840						
ANR	11024982	Symbol	istate -> colorspace		11024840						
ANR	11024983	Symbol	* * istate		11024840						
ANR	11024984	Symbol	istate		11024840						
ANR	11024985	Symbol	* istate -> colorspace		11024840						
ANR	11024986	Symbol	o_push_estack		11024840						
ANR	11024987	Function	zcurrentcmykcolor	6546:0:211415:212461							
ANR	11024988	FunctionDef	zcurrentcmykcolor (i_ctx_t * i_ctx_p)		11024987	0					
ANR	11024989	CompoundStatement		6548:0:211463:212461	11024987	0					
ANR	11024990	IdentifierDeclStatement	int code ;	6549:4:211469:211477	11024987	0	True				
ANR	11024991	IdentifierDecl	code		11024987	0					
ANR	11024992	IdentifierDeclType	int		11024987	0					
ANR	11024993	Identifier	code		11024987	1					
ANR	11024994	ExpressionStatement	code = zcurrentcolor ( i_ctx_p )	6551:4:211484:211513	11024987	1	True				
ANR	11024995	AssignmentExpression	code = zcurrentcolor ( i_ctx_p )		11024987	0		=			
ANR	11024996	Identifier	code		11024987	0					
ANR	11024997	CallExpression	zcurrentcolor ( i_ctx_p )		11024987	1					
ANR	11024998	Callee	zcurrentcolor		11024987	0					
ANR	11024999	Identifier	zcurrentcolor		11024987	0					
ANR	11025000	ArgumentList	i_ctx_p		11024987	1					
ANR	11025001	Argument	i_ctx_p		11024987	0					
ANR	11025002	Identifier	i_ctx_p		11024987	0					
ANR	11025003	IfStatement	if ( code < 0 )		11024987	2					
ANR	11025004	Condition	code < 0	6552:8:211523:211530	11024987	0	True				
ANR	11025005	RelationalExpression	code < 0		11024987	0		<			
ANR	11025006	Identifier	code		11024987	0					
ANR	11025007	PrimaryExpression	0		11024987	1					
ANR	11025008	ReturnStatement	return code ;	6553:8:211541:211552	11024987	1	True				
ANR	11025009	Identifier	code		11024987	0					
ANR	11025010	ExpressionStatement	check_estack ( 7 )	6556:4:211681:211696	11024987	3	True				
ANR	11025011	CallExpression	check_estack ( 7 )		11024987	0					
ANR	11025012	Callee	check_estack		11024987	0					
ANR	11025013	Identifier	check_estack		11024987	0					
ANR	11025014	ArgumentList	7		11024987	1					
ANR	11025015	Argument	7		11024987	0					
ANR	11025016	PrimaryExpression	7		11024987	0					
ANR	11025017	ExpressionStatement	"push_mark_estack ( es_other , colour_cleanup )"	6557:4:211702:211744	11024987	4	True				
ANR	11025018	CallExpression	"push_mark_estack ( es_other , colour_cleanup )"		11024987	0					
ANR	11025019	Callee	push_mark_estack		11024987	0					
ANR	11025020	Identifier	push_mark_estack		11024987	0					
ANR	11025021	ArgumentList	es_other		11024987	1					
ANR	11025022	Argument	es_other		11024987	0					
ANR	11025023	Identifier	es_other		11024987	0					
ANR	11025024	Argument	colour_cleanup		11024987	1					
ANR	11025025	Identifier	colour_cleanup		11024987	0					
ANR	11025026	ExpressionStatement	esp ++	6558:4:211750:211755	11024987	5	True				
ANR	11025027	PostIncDecOperationExpression	esp ++		11024987	0					
ANR	11025028	Identifier	esp		11024987	0					
ANR	11025029	IncDec	++		11024987	1					
ANR	11025030	ExpressionStatement	"make_int ( & esp [ 0 ] , 0 )"	6560:4:211819:211839	11024987	6	True				
ANR	11025031	CallExpression	"make_int ( & esp [ 0 ] , 0 )"		11024987	0					
ANR	11025032	Callee	make_int		11024987	0					
ANR	11025033	Identifier	make_int		11024987	0					
ANR	11025034	ArgumentList	& esp [ 0 ]		11024987	1					
ANR	11025035	Argument	& esp [ 0 ]		11024987	0					
ANR	11025036	UnaryOperationExpression	& esp [ 0 ]		11024987	0					
ANR	11025037	UnaryOperator	&		11024987	0					
ANR	11025038	ArrayIndexing	esp [ 0 ]		11024987	1					
ANR	11025039	Identifier	esp		11024987	0					
ANR	11025040	PrimaryExpression	0		11024987	1					
ANR	11025041	Argument	0		11024987	1					
ANR	11025042	PrimaryExpression	0		11024987	0					
ANR	11025043	ExpressionStatement	esp ++	6561:4:211845:211850	11024987	7	True				
ANR	11025044	PostIncDecOperationExpression	esp ++		11024987	0					
ANR	11025045	Identifier	esp		11024987	0					
ANR	11025046	IncDec	++		11024987	1					
ANR	11025047	ExpressionStatement	"make_int ( & esp [ 0 ] , 3 )"	6563:4:211920:211940	11024987	8	True				
ANR	11025048	CallExpression	"make_int ( & esp [ 0 ] , 3 )"		11024987	0					
ANR	11025049	Callee	make_int		11024987	0					
ANR	11025050	Identifier	make_int		11024987	0					
ANR	11025051	ArgumentList	& esp [ 0 ]		11024987	1					
ANR	11025052	Argument	& esp [ 0 ]		11024987	0					
ANR	11025053	UnaryOperationExpression	& esp [ 0 ]		11024987	0					
ANR	11025054	UnaryOperator	&		11024987	0					
ANR	11025055	ArrayIndexing	esp [ 0 ]		11024987	1					
ANR	11025056	Identifier	esp		11024987	0					
ANR	11025057	PrimaryExpression	0		11024987	1					
ANR	11025058	Argument	3		11024987	1					
ANR	11025059	PrimaryExpression	3		11024987	0					
ANR	11025060	ExpressionStatement	"make_int ( & esp [ 1 ] , 1 )"	6564:4:211946:211966	11024987	9	True				
ANR	11025061	CallExpression	"make_int ( & esp [ 1 ] , 1 )"		11024987	0					
ANR	11025062	Callee	make_int		11024987	0					
ANR	11025063	Identifier	make_int		11024987	0					
ANR	11025064	ArgumentList	& esp [ 1 ]		11024987	1					
ANR	11025065	Argument	& esp [ 1 ]		11024987	0					
ANR	11025066	UnaryOperationExpression	& esp [ 1 ]		11024987	0					
ANR	11025067	UnaryOperator	&		11024987	0					
ANR	11025068	ArrayIndexing	esp [ 1 ]		11024987	1					
ANR	11025069	Identifier	esp		11024987	0					
ANR	11025070	PrimaryExpression	1		11024987	1					
ANR	11025071	Argument	1		11024987	1					
ANR	11025072	PrimaryExpression	1		11024987	0					
ANR	11025073	ExpressionStatement	"make_int ( & esp [ 2 ] , 0 )"	6566:4:212028:212048	11024987	10	True				
ANR	11025074	CallExpression	"make_int ( & esp [ 2 ] , 0 )"		11024987	0					
ANR	11025075	Callee	make_int		11024987	0					
ANR	11025076	Identifier	make_int		11024987	0					
ANR	11025077	ArgumentList	& esp [ 2 ]		11024987	1					
ANR	11025078	Argument	& esp [ 2 ]		11024987	0					
ANR	11025079	UnaryOperationExpression	& esp [ 2 ]		11024987	0					
ANR	11025080	UnaryOperator	&		11024987	0					
ANR	11025081	ArrayIndexing	esp [ 2 ]		11024987	1					
ANR	11025082	Identifier	esp		11024987	0					
ANR	11025083	PrimaryExpression	2		11024987	1					
ANR	11025084	Argument	0		11024987	1					
ANR	11025085	PrimaryExpression	0		11024987	0					
ANR	11025086	ExpressionStatement	esp [ 3 ] = istate -> colorspace [ 0 ] . array	6571:4:212227:212263	11024987	11	True				
ANR	11025087	AssignmentExpression	esp [ 3 ] = istate -> colorspace [ 0 ] . array		11024987	0		=			
ANR	11025088	ArrayIndexing	esp [ 3 ]		11024987	0					
ANR	11025089	Identifier	esp		11024987	0					
ANR	11025090	PrimaryExpression	3		11024987	1					
ANR	11025091	MemberAccess	istate -> colorspace [ 0 ] . array		11024987	1					
ANR	11025092	ArrayIndexing	istate -> colorspace [ 0 ]		11024987	0					
ANR	11025093	PtrMemberAccess	istate -> colorspace		11024987	0					
ANR	11025094	Identifier	istate		11024987	0					
ANR	11025095	Identifier	colorspace		11024987	1					
ANR	11025096	PrimaryExpression	0		11024987	1					
ANR	11025097	Identifier	array		11024987	1					
ANR	11025098	ExpressionStatement	esp += 3	6572:4:212269:212277	11024987	12	True				
ANR	11025099	AssignmentExpression	esp += 3		11024987	0		+=			
ANR	11025100	Identifier	esp		11024987	0					
ANR	11025101	PrimaryExpression	3		11024987	1					
ANR	11025102	ExpressionStatement	push_op_estack ( currentbasecolor_cont )	6574:4:212396:212433	11024987	13	True				
ANR	11025103	CallExpression	push_op_estack ( currentbasecolor_cont )		11024987	0					
ANR	11025104	Callee	push_op_estack		11024987	0					
ANR	11025105	Identifier	push_op_estack		11024987	0					
ANR	11025106	ArgumentList	currentbasecolor_cont		11024987	1					
ANR	11025107	Argument	currentbasecolor_cont		11024987	0					
ANR	11025108	Identifier	currentbasecolor_cont		11024987	0					
ANR	11025109	ReturnStatement	return o_push_estack ;	6575:4:212439:212459	11024987	14	True				
ANR	11025110	Identifier	o_push_estack		11024987	0					
ANR	11025111	ReturnType	static int		11024987	1					
ANR	11025112	Identifier	zcurrentcmykcolor		11024987	2					
ANR	11025113	ParameterList	i_ctx_t * i_ctx_p		11024987	3					
ANR	11025114	Parameter	i_ctx_t * i_ctx_p	6547:18:211444:211460	11024987	0	True				
ANR	11025115	ParameterType	i_ctx_t *		11024987	0					
ANR	11025116	Identifier	i_ctx_p		11024987	1					
ANR	11025117	CFGEntryNode	ENTRY		11024987		True				
ANR	11025118	CFGExitNode	EXIT		11024987		True				
ANR	11025119	Symbol	istate -> colorspace [ 0 ] . array		11024987						
ANR	11025120	Symbol	code		11024987						
ANR	11025121	Symbol	esp		11024987						
ANR	11025122	Symbol	currentbasecolor_cont		11024987						
ANR	11025123	Symbol	colour_cleanup		11024987						
ANR	11025124	Symbol	es_other		11024987						
ANR	11025125	Symbol	* istate		11024987						
ANR	11025126	Symbol	zcurrentcolor		11024987						
ANR	11025127	Symbol	* esp		11024987						
ANR	11025128	Symbol	i_ctx_p		11024987						
ANR	11025129	Symbol	istate -> colorspace		11024987						
ANR	11025130	Symbol	* * istate		11024987						
ANR	11025131	Symbol	istate		11024987						
ANR	11025132	Symbol	* istate -> colorspace		11024987						
ANR	11025133	Symbol	o_push_estack		11024987						
ANR	11025134	Function	zswapcolors	6578:0:212464:212859							
ANR	11025135	FunctionDef	zswapcolors (i_ctx_t * i_ctx_p)		11025134	0					
ANR	11025136	CompoundStatement		6580:0:212506:212859	11025134	0					
ANR	11025137	IdentifierDeclStatement	ref_colorspace tmp_cs ;	6581:4:212512:212533	11025134	0	True				
ANR	11025138	IdentifierDecl	tmp_cs		11025134	0					
ANR	11025139	IdentifierDeclType	ref_colorspace		11025134	0					
ANR	11025140	Identifier	tmp_cs		11025134	1					
ANR	11025141	IdentifierDeclStatement	ref tmp_pat ;	6582:4:212539:212561	11025134	1	True				
ANR	11025142	IdentifierDecl	tmp_pat		11025134	0					
ANR	11025143	IdentifierDeclType	ref		11025134	0					
ANR	11025144	Identifier	tmp_pat		11025134	1					
ANR	11025145	ExpressionStatement	tmp_cs = istate -> colorspace [ 0 ]	6584:4:212568:212613	11025134	2	True				
ANR	11025146	AssignmentExpression	tmp_cs = istate -> colorspace [ 0 ]		11025134	0		=			
ANR	11025147	Identifier	tmp_cs		11025134	0					
ANR	11025148	ArrayIndexing	istate -> colorspace [ 0 ]		11025134	1					
ANR	11025149	PtrMemberAccess	istate -> colorspace		11025134	0					
ANR	11025150	Identifier	istate		11025134	0					
ANR	11025151	Identifier	colorspace		11025134	1					
ANR	11025152	PrimaryExpression	0		11025134	1					
ANR	11025153	ExpressionStatement	istate -> colorspace [ 0 ] = istate -> colorspace [ 1 ]	6585:4:212619:212664	11025134	3	True				
ANR	11025154	AssignmentExpression	istate -> colorspace [ 0 ] = istate -> colorspace [ 1 ]		11025134	0		=			
ANR	11025155	ArrayIndexing	istate -> colorspace [ 0 ]		11025134	0					
ANR	11025156	PtrMemberAccess	istate -> colorspace		11025134	0					
ANR	11025157	Identifier	istate		11025134	0					
ANR	11025158	Identifier	colorspace		11025134	1					
ANR	11025159	PrimaryExpression	0		11025134	1					
ANR	11025160	ArrayIndexing	istate -> colorspace [ 1 ]		11025134	1					
ANR	11025161	PtrMemberAccess	istate -> colorspace		11025134	0					
ANR	11025162	Identifier	istate		11025134	0					
ANR	11025163	Identifier	colorspace		11025134	1					
ANR	11025164	PrimaryExpression	1		11025134	1					
ANR	11025165	ExpressionStatement	istate -> colorspace [ 1 ] = tmp_cs	6586:4:212670:212700	11025134	4	True				
ANR	11025166	AssignmentExpression	istate -> colorspace [ 1 ] = tmp_cs		11025134	0		=			
ANR	11025167	ArrayIndexing	istate -> colorspace [ 1 ]		11025134	0					
ANR	11025168	PtrMemberAccess	istate -> colorspace		11025134	0					
ANR	11025169	Identifier	istate		11025134	0					
ANR	11025170	Identifier	colorspace		11025134	1					
ANR	11025171	PrimaryExpression	1		11025134	1					
ANR	11025172	Identifier	tmp_cs		11025134	1					
ANR	11025173	ExpressionStatement	tmp_pat = istate -> pattern [ 0 ]	6588:4:212707:212746	11025134	5	True				
ANR	11025174	AssignmentExpression	tmp_pat = istate -> pattern [ 0 ]		11025134	0		=			
ANR	11025175	Identifier	tmp_pat		11025134	0					
ANR	11025176	ArrayIndexing	istate -> pattern [ 0 ]		11025134	1					
ANR	11025177	PtrMemberAccess	istate -> pattern		11025134	0					
ANR	11025178	Identifier	istate		11025134	0					
ANR	11025179	Identifier	pattern		11025134	1					
ANR	11025180	PrimaryExpression	0		11025134	1					
ANR	11025181	ExpressionStatement	istate -> pattern [ 0 ] = istate -> pattern [ 1 ]	6589:4:212752:212791	11025134	6	True				
ANR	11025182	AssignmentExpression	istate -> pattern [ 0 ] = istate -> pattern [ 1 ]		11025134	0		=			
ANR	11025183	ArrayIndexing	istate -> pattern [ 0 ]		11025134	0					
ANR	11025184	PtrMemberAccess	istate -> pattern		11025134	0					
ANR	11025185	Identifier	istate		11025134	0					
ANR	11025186	Identifier	pattern		11025134	1					
ANR	11025187	PrimaryExpression	0		11025134	1					
ANR	11025188	ArrayIndexing	istate -> pattern [ 1 ]		11025134	1					
ANR	11025189	PtrMemberAccess	istate -> pattern		11025134	0					
ANR	11025190	Identifier	istate		11025134	0					
ANR	11025191	Identifier	pattern		11025134	1					
ANR	11025192	PrimaryExpression	1		11025134	1					
ANR	11025193	ExpressionStatement	istate -> pattern [ 1 ] = tmp_pat	6590:4:212797:212825	11025134	7	True				
ANR	11025194	AssignmentExpression	istate -> pattern [ 1 ] = tmp_pat		11025134	0		=			
ANR	11025195	ArrayIndexing	istate -> pattern [ 1 ]		11025134	0					
ANR	11025196	PtrMemberAccess	istate -> pattern		11025134	0					
ANR	11025197	Identifier	istate		11025134	0					
ANR	11025198	Identifier	pattern		11025134	1					
ANR	11025199	PrimaryExpression	1		11025134	1					
ANR	11025200	Identifier	tmp_pat		11025134	1					
ANR	11025201	ReturnStatement	return gs_swapcolors ( igs ) ;	6592:4:212832:212857	11025134	8	True				
ANR	11025202	CallExpression	gs_swapcolors ( igs )		11025134	0					
ANR	11025203	Callee	gs_swapcolors		11025134	0					
ANR	11025204	Identifier	gs_swapcolors		11025134	0					
ANR	11025205	ArgumentList	igs		11025134	1					
ANR	11025206	Argument	igs		11025134	0					
ANR	11025207	Identifier	igs		11025134	0					
ANR	11025208	ReturnType	static int		11025134	1					
ANR	11025209	Identifier	zswapcolors		11025134	2					
ANR	11025210	ParameterList	i_ctx_t * i_ctx_p		11025134	3					
ANR	11025211	Parameter	i_ctx_t * i_ctx_p	6579:12:212487:212503	11025134	0	True				
ANR	11025212	ParameterType	i_ctx_t *		11025134	0					
ANR	11025213	Identifier	i_ctx_p		11025134	1					
ANR	11025214	CFGEntryNode	ENTRY		11025134		True				
ANR	11025215	CFGExitNode	EXIT		11025134		True				
ANR	11025216	Symbol	tmp_pat		11025134						
ANR	11025217	Symbol	igs		11025134						
ANR	11025218	Symbol	i_ctx_p		11025134						
ANR	11025219	Symbol	istate -> pattern		11025134						
ANR	11025220	Symbol	istate -> colorspace		11025134						
ANR	11025221	Symbol	* istate -> pattern		11025134						
ANR	11025222	Symbol	gs_swapcolors		11025134						
ANR	11025223	Symbol	tmp_cs		11025134						
ANR	11025224	Symbol	* * istate		11025134						
ANR	11025225	Symbol	* istate		11025134						
ANR	11025226	Symbol	istate		11025134						
ANR	11025227	Symbol	* istate -> colorspace		11025134						
ANR	11025228	Function	zsetfillcolor	6595:0:212862:212939							
ANR	11025229	FunctionDef	zsetfillcolor (i_ctx_t * i_ctx_p)		11025228	0					
ANR	11025230	CompoundStatement		6597:0:212906:212939	11025228	0					
ANR	11025231	ReturnStatement	return zsetcolor ( i_ctx_p ) ;	6598:4:212912:212937	11025228	0	True				
ANR	11025232	CallExpression	zsetcolor ( i_ctx_p )		11025228	0					
ANR	11025233	Callee	zsetcolor		11025228	0					
ANR	11025234	Identifier	zsetcolor		11025228	0					
ANR	11025235	ArgumentList	i_ctx_p		11025228	1					
ANR	11025236	Argument	i_ctx_p		11025228	0					
ANR	11025237	Identifier	i_ctx_p		11025228	0					
ANR	11025238	ReturnType	static int		11025228	1					
ANR	11025239	Identifier	zsetfillcolor		11025228	2					
ANR	11025240	ParameterList	i_ctx_t * i_ctx_p		11025228	3					
ANR	11025241	Parameter	i_ctx_t * i_ctx_p	6596:14:212887:212903	11025228	0	True				
ANR	11025242	ParameterType	i_ctx_t *		11025228	0					
ANR	11025243	Identifier	i_ctx_p		11025228	1					
ANR	11025244	CFGEntryNode	ENTRY		11025228		True				
ANR	11025245	CFGExitNode	EXIT		11025228		True				
ANR	11025246	Symbol	i_ctx_p		11025228						
ANR	11025247	Symbol	zsetcolor		11025228						
ANR	11025248	Function	zsetfillcolorspace	6600:0:212941:213028							
ANR	11025249	FunctionDef	zsetfillcolorspace (i_ctx_t * i_ctx_p)		11025248	0					
ANR	11025250	CompoundStatement		6602:0:212990:213028	11025248	0					
ANR	11025251	ReturnStatement	return zsetcolorspace ( i_ctx_p ) ;	6603:4:212996:213026	11025248	0	True				
ANR	11025252	CallExpression	zsetcolorspace ( i_ctx_p )		11025248	0					
ANR	11025253	Callee	zsetcolorspace		11025248	0					
ANR	11025254	Identifier	zsetcolorspace		11025248	0					
ANR	11025255	ArgumentList	i_ctx_p		11025248	1					
ANR	11025256	Argument	i_ctx_p		11025248	0					
ANR	11025257	Identifier	i_ctx_p		11025248	0					
ANR	11025258	ReturnType	static int		11025248	1					
ANR	11025259	Identifier	zsetfillcolorspace		11025248	2					
ANR	11025260	ParameterList	i_ctx_t * i_ctx_p		11025248	3					
ANR	11025261	Parameter	i_ctx_t * i_ctx_p	6601:19:212971:212987	11025248	0	True				
ANR	11025262	ParameterType	i_ctx_t *		11025248	0					
ANR	11025263	Identifier	i_ctx_p		11025248	1					
ANR	11025264	CFGEntryNode	ENTRY		11025248		True				
ANR	11025265	CFGExitNode	EXIT		11025248		True				
ANR	11025266	Symbol	i_ctx_p		11025248						
ANR	11025267	Symbol	zsetcolorspace		11025248						
ANR	11025268	Function	setstrokecolor_cont	6605:0:213030:213115							
ANR	11025269	FunctionDef	setstrokecolor_cont (i_ctx_t * i_ctx_p)		11025268	0					
ANR	11025270	CompoundStatement		6607:0:213080:213115	11025268	0					
ANR	11025271	ReturnStatement	return zswapcolors ( i_ctx_p ) ;	6608:4:213086:213113	11025268	0	True				
ANR	11025272	CallExpression	zswapcolors ( i_ctx_p )		11025268	0					
ANR	11025273	Callee	zswapcolors		11025268	0					
ANR	11025274	Identifier	zswapcolors		11025268	0					
ANR	11025275	ArgumentList	i_ctx_p		11025268	1					
ANR	11025276	Argument	i_ctx_p		11025268	0					
ANR	11025277	Identifier	i_ctx_p		11025268	0					
ANR	11025278	ReturnType	static int		11025268	1					
ANR	11025279	Identifier	setstrokecolor_cont		11025268	2					
ANR	11025280	ParameterList	i_ctx_t * i_ctx_p		11025268	3					
ANR	11025281	Parameter	i_ctx_t * i_ctx_p	6606:20:213061:213077	11025268	0	True				
ANR	11025282	ParameterType	i_ctx_t *		11025268	0					
ANR	11025283	Identifier	i_ctx_p		11025268	1					
ANR	11025284	CFGEntryNode	ENTRY		11025268		True				
ANR	11025285	CFGExitNode	EXIT		11025268		True				
ANR	11025286	Symbol	i_ctx_p		11025268						
ANR	11025287	Symbol	zswapcolors		11025268						
ANR	11025288	Function	zsetstrokecolor	6610:0:213117:213615							
ANR	11025289	FunctionDef	zsetstrokecolor (i_ctx_t * i_ctx_p)		11025288	0					
ANR	11025290	CompoundStatement		6612:0:213163:213615	11025288	0					
ANR	11025291	IdentifierDeclStatement	int code ;	6613:4:213169:213177	11025288	0	True				
ANR	11025292	IdentifierDecl	code		11025288	0					
ANR	11025293	IdentifierDeclType	int		11025288	0					
ANR	11025294	Identifier	code		11025288	1					
ANR	11025295	ExpressionStatement	code = zswapcolors ( i_ctx_p )	6615:4:213184:213211	11025288	1	True				
ANR	11025296	AssignmentExpression	code = zswapcolors ( i_ctx_p )		11025288	0		=			
ANR	11025297	Identifier	code		11025288	0					
ANR	11025298	CallExpression	zswapcolors ( i_ctx_p )		11025288	1					
ANR	11025299	Callee	zswapcolors		11025288	0					
ANR	11025300	Identifier	zswapcolors		11025288	0					
ANR	11025301	ArgumentList	i_ctx_p		11025288	1					
ANR	11025302	Argument	i_ctx_p		11025288	0					
ANR	11025303	Identifier	i_ctx_p		11025288	0					
ANR	11025304	IfStatement	if ( code < 0 )		11025288	2					
ANR	11025305	Condition	code < 0	6616:8:213221:213228	11025288	0	True				
ANR	11025306	RelationalExpression	code < 0		11025288	0		<			
ANR	11025307	Identifier	code		11025288	0					
ANR	11025308	PrimaryExpression	0		11025288	1					
ANR	11025309	ReturnStatement	return code ;	6617:8:213239:213250	11025288	1	True				
ANR	11025310	Identifier	code		11025288	0					
ANR	11025311	ExpressionStatement	check_estack ( 1 )	6621:4:213410:213425	11025288	3	True				
ANR	11025312	CallExpression	check_estack ( 1 )		11025288	0					
ANR	11025313	Callee	check_estack		11025288	0					
ANR	11025314	Identifier	check_estack		11025288	0					
ANR	11025315	ArgumentList	1		11025288	1					
ANR	11025316	Argument	1		11025288	0					
ANR	11025317	PrimaryExpression	1		11025288	0					
ANR	11025318	ExpressionStatement	push_op_estack ( setstrokecolor_cont )	6623:4:213478:213513	11025288	4	True				
ANR	11025319	CallExpression	push_op_estack ( setstrokecolor_cont )		11025288	0					
ANR	11025320	Callee	push_op_estack		11025288	0					
ANR	11025321	Identifier	push_op_estack		11025288	0					
ANR	11025322	ArgumentList	setstrokecolor_cont		11025288	1					
ANR	11025323	Argument	setstrokecolor_cont		11025288	0					
ANR	11025324	Identifier	setstrokecolor_cont		11025288	0					
ANR	11025325	ExpressionStatement	code = zsetcolor ( i_ctx_p )	6625:4:213520:213545	11025288	5	True				
ANR	11025326	AssignmentExpression	code = zsetcolor ( i_ctx_p )		11025288	0		=			
ANR	11025327	Identifier	code		11025288	0					
ANR	11025328	CallExpression	zsetcolor ( i_ctx_p )		11025288	1					
ANR	11025329	Callee	zsetcolor		11025288	0					
ANR	11025330	Identifier	zsetcolor		11025288	0					
ANR	11025331	ArgumentList	i_ctx_p		11025288	1					
ANR	11025332	Argument	i_ctx_p		11025288	0					
ANR	11025333	Identifier	i_ctx_p		11025288	0					
ANR	11025334	IfStatement	if ( code >= 0 )		11025288	6					
ANR	11025335	Condition	code >= 0	6627:8:213556:213564	11025288	0	True				
ANR	11025336	RelationalExpression	code >= 0		11025288	0		>=			
ANR	11025337	Identifier	code		11025288	0					
ANR	11025338	PrimaryExpression	0		11025288	1					
ANR	11025339	ReturnStatement	return o_push_estack ;	6628:8:213575:213595	11025288	1	True				
ANR	11025340	Identifier	o_push_estack		11025288	0					
ANR	11025341	ReturnStatement	return code ;	6630:4:213602:213613	11025288	7	True				
ANR	11025342	Identifier	code		11025288	0					
ANR	11025343	ReturnType	static int		11025288	1					
ANR	11025344	Identifier	zsetstrokecolor		11025288	2					
ANR	11025345	ParameterList	i_ctx_t * i_ctx_p		11025288	3					
ANR	11025346	Parameter	i_ctx_t * i_ctx_p	6611:16:213144:213160	11025288	0	True				
ANR	11025347	ParameterType	i_ctx_t *		11025288	0					
ANR	11025348	Identifier	i_ctx_p		11025288	1					
ANR	11025349	CFGEntryNode	ENTRY		11025288		True				
ANR	11025350	CFGExitNode	EXIT		11025288		True				
ANR	11025351	Symbol	setstrokecolor_cont		11025288						
ANR	11025352	Symbol	code		11025288						
ANR	11025353	Symbol	i_ctx_p		11025288						
ANR	11025354	Symbol	zswapcolors		11025288						
ANR	11025355	Symbol	zsetcolor		11025288						
ANR	11025356	Symbol	o_push_estack		11025288						
ANR	11025357	Function	setstrokecolorspace_cont	6632:0:213617:213707							
ANR	11025358	FunctionDef	setstrokecolorspace_cont (i_ctx_t * i_ctx_p)		11025357	0					
ANR	11025359	CompoundStatement		6634:0:213672:213707	11025357	0					
ANR	11025360	ReturnStatement	return zswapcolors ( i_ctx_p ) ;	6635:4:213678:213705	11025357	0	True				
ANR	11025361	CallExpression	zswapcolors ( i_ctx_p )		11025357	0					
ANR	11025362	Callee	zswapcolors		11025357	0					
ANR	11025363	Identifier	zswapcolors		11025357	0					
ANR	11025364	ArgumentList	i_ctx_p		11025357	1					
ANR	11025365	Argument	i_ctx_p		11025357	0					
ANR	11025366	Identifier	i_ctx_p		11025357	0					
ANR	11025367	ReturnType	static int		11025357	1					
ANR	11025368	Identifier	setstrokecolorspace_cont		11025357	2					
ANR	11025369	ParameterList	i_ctx_t * i_ctx_p		11025357	3					
ANR	11025370	Parameter	i_ctx_t * i_ctx_p	6633:25:213653:213669	11025357	0	True				
ANR	11025371	ParameterType	i_ctx_t *		11025357	0					
ANR	11025372	Identifier	i_ctx_p		11025357	1					
ANR	11025373	CFGEntryNode	ENTRY		11025357		True				
ANR	11025374	CFGExitNode	EXIT		11025357		True				
ANR	11025375	Symbol	i_ctx_p		11025357						
ANR	11025376	Symbol	zswapcolors		11025357						
ANR	11025377	Function	zsetstrokecolorspace	6637:0:213709:214221							
ANR	11025378	FunctionDef	zsetstrokecolorspace (i_ctx_t * i_ctx_p)		11025377	0					
ANR	11025379	CompoundStatement		6639:0:213760:214221	11025377	0					
ANR	11025380	IdentifierDeclStatement	int code ;	6640:4:213766:213774	11025377	0	True				
ANR	11025381	IdentifierDecl	code		11025377	0					
ANR	11025382	IdentifierDeclType	int		11025377	0					
ANR	11025383	Identifier	code		11025377	1					
ANR	11025384	ExpressionStatement	code = zswapcolors ( i_ctx_p )	6642:4:213781:213808	11025377	1	True				
ANR	11025385	AssignmentExpression	code = zswapcolors ( i_ctx_p )		11025377	0		=			
ANR	11025386	Identifier	code		11025377	0					
ANR	11025387	CallExpression	zswapcolors ( i_ctx_p )		11025377	1					
ANR	11025388	Callee	zswapcolors		11025377	0					
ANR	11025389	Identifier	zswapcolors		11025377	0					
ANR	11025390	ArgumentList	i_ctx_p		11025377	1					
ANR	11025391	Argument	i_ctx_p		11025377	0					
ANR	11025392	Identifier	i_ctx_p		11025377	0					
ANR	11025393	IfStatement	if ( code < 0 )		11025377	2					
ANR	11025394	Condition	code < 0	6643:8:213818:213825	11025377	0	True				
ANR	11025395	RelationalExpression	code < 0		11025377	0		<			
ANR	11025396	Identifier	code		11025377	0					
ANR	11025397	PrimaryExpression	0		11025377	1					
ANR	11025398	ReturnStatement	return code ;	6644:8:213836:213847	11025377	1	True				
ANR	11025399	Identifier	code		11025377	0					
ANR	11025400	ExpressionStatement	check_estack ( 1 )	6648:4:214007:214022	11025377	3	True				
ANR	11025401	CallExpression	check_estack ( 1 )		11025377	0					
ANR	11025402	Callee	check_estack		11025377	0					
ANR	11025403	Identifier	check_estack		11025377	0					
ANR	11025404	ArgumentList	1		11025377	1					
ANR	11025405	Argument	1		11025377	0					
ANR	11025406	PrimaryExpression	1		11025377	0					
ANR	11025407	ExpressionStatement	push_op_estack ( setstrokecolorspace_cont )	6650:4:214075:214115	11025377	4	True				
ANR	11025408	CallExpression	push_op_estack ( setstrokecolorspace_cont )		11025377	0					
ANR	11025409	Callee	push_op_estack		11025377	0					
ANR	11025410	Identifier	push_op_estack		11025377	0					
ANR	11025411	ArgumentList	setstrokecolorspace_cont		11025377	1					
ANR	11025412	Argument	setstrokecolorspace_cont		11025377	0					
ANR	11025413	Identifier	setstrokecolorspace_cont		11025377	0					
ANR	11025414	ExpressionStatement	code = zsetcolorspace ( i_ctx_p )	6652:4:214122:214152	11025377	5	True				
ANR	11025415	AssignmentExpression	code = zsetcolorspace ( i_ctx_p )		11025377	0		=			
ANR	11025416	Identifier	code		11025377	0					
ANR	11025417	CallExpression	zsetcolorspace ( i_ctx_p )		11025377	1					
ANR	11025418	Callee	zsetcolorspace		11025377	0					
ANR	11025419	Identifier	zsetcolorspace		11025377	0					
ANR	11025420	ArgumentList	i_ctx_p		11025377	1					
ANR	11025421	Argument	i_ctx_p		11025377	0					
ANR	11025422	Identifier	i_ctx_p		11025377	0					
ANR	11025423	IfStatement	if ( code >= 0 )		11025377	6					
ANR	11025424	Condition	code >= 0	6653:8:214162:214170	11025377	0	True				
ANR	11025425	RelationalExpression	code >= 0		11025377	0		>=			
ANR	11025426	Identifier	code		11025377	0					
ANR	11025427	PrimaryExpression	0		11025377	1					
ANR	11025428	ReturnStatement	return o_push_estack ;	6654:8:214181:214201	11025377	1	True				
ANR	11025429	Identifier	o_push_estack		11025377	0					
ANR	11025430	ReturnStatement	return code ;	6656:4:214208:214219	11025377	7	True				
ANR	11025431	Identifier	code		11025377	0					
ANR	11025432	ReturnType	static int		11025377	1					
ANR	11025433	Identifier	zsetstrokecolorspace		11025377	2					
ANR	11025434	ParameterList	i_ctx_t * i_ctx_p		11025377	3					
ANR	11025435	Parameter	i_ctx_t * i_ctx_p	6638:21:213741:213757	11025377	0	True				
ANR	11025436	ParameterType	i_ctx_t *		11025377	0					
ANR	11025437	Identifier	i_ctx_p		11025377	1					
ANR	11025438	CFGEntryNode	ENTRY		11025377		True				
ANR	11025439	CFGExitNode	EXIT		11025377		True				
ANR	11025440	Symbol	code		11025377						
ANR	11025441	Symbol	i_ctx_p		11025377						
ANR	11025442	Symbol	zsetcolorspace		11025377						
ANR	11025443	Symbol	zswapcolors		11025377						
ANR	11025444	Symbol	setstrokecolorspace_cont		11025377						
ANR	11025445	Symbol	o_push_estack		11025377						
ANR	11025446	DeclStmt									
ANR	11025447	Decl							const op_def	const op_def [ ]	zcolor_op_defs
ANR	11025448	DeclStmt									
ANR	11025449	Decl							const op_def	const op_def [ ]	zcolor_ext_op_defs
ANR	11025450	DeclStmt									
ANR	11025451	Decl							const op_def	const op_def [ ]	zcolor_pdf_op_defs
