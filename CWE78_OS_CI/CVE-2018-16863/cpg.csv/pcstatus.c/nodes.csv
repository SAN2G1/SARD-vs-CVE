command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	8331635	File	data/converged/CVE-2018-16863_ghostpdl/pcstatus.c								
ANR	8331636	DeclStmt									
ANR	8331637	Decl							int	"int ( ushort * , int , ushort )"	status_add_symbol_id
ANR	8331638	Function	pcl_status_read	44:0:1204:1709							
ANR	8331639	FunctionDef	"pcl_status_read (byte * data , uint max_data , pcl_state_t * pcs)"		8331638	0					
ANR	8331640	CompoundStatement		46:0:1272:1709	8331638	0					
ANR	8331641	IdentifierDeclStatement	"uint count = min ( max_data , pcs -> status . write_pos - pcs -> status . read_pos ) ;"	47:4:1278:1371	8331638	0	True				
ANR	8331642	IdentifierDecl	"count = min ( max_data , pcs -> status . write_pos - pcs -> status . read_pos )"		8331638	0					
ANR	8331643	IdentifierDeclType	uint		8331638	0					
ANR	8331644	Identifier	count		8331638	1					
ANR	8331645	AssignmentExpression	"count = min ( max_data , pcs -> status . write_pos - pcs -> status . read_pos )"		8331638	2		=			
ANR	8331646	Identifier	count		8331638	0					
ANR	8331647	CallExpression	"min ( max_data , pcs -> status . write_pos - pcs -> status . read_pos )"		8331638	1					
ANR	8331648	Callee	min		8331638	0					
ANR	8331649	Identifier	min		8331638	0					
ANR	8331650	ArgumentList	max_data		8331638	1					
ANR	8331651	Argument	max_data		8331638	0					
ANR	8331652	Identifier	max_data		8331638	0					
ANR	8331653	Argument	pcs -> status . write_pos - pcs -> status . read_pos		8331638	1					
ANR	8331654	AdditiveExpression	pcs -> status . write_pos - pcs -> status . read_pos		8331638	0		-			
ANR	8331655	MemberAccess	pcs -> status . write_pos		8331638	0					
ANR	8331656	PtrMemberAccess	pcs -> status		8331638	0					
ANR	8331657	Identifier	pcs		8331638	0					
ANR	8331658	Identifier	status		8331638	1					
ANR	8331659	Identifier	write_pos		8331638	1					
ANR	8331660	MemberAccess	pcs -> status . read_pos		8331638	1					
ANR	8331661	PtrMemberAccess	pcs -> status		8331638	0					
ANR	8331662	Identifier	pcs		8331638	0					
ANR	8331663	Identifier	status		8331638	1					
ANR	8331664	Identifier	read_pos		8331638	1					
ANR	8331665	IfStatement	if ( count )		8331638	1					
ANR	8331666	Condition	count	50:8:1382:1386	8331638	0	True				
ANR	8331667	Identifier	count		8331638	0					
ANR	8331668	ExpressionStatement	"memcpy ( data , pcs -> status . buffer + pcs -> status . read_pos , count )"	51:8:1397:1459	8331638	1	True				
ANR	8331669	CallExpression	"memcpy ( data , pcs -> status . buffer + pcs -> status . read_pos , count )"		8331638	0					
ANR	8331670	Callee	memcpy		8331638	0					
ANR	8331671	Identifier	memcpy		8331638	0					
ANR	8331672	ArgumentList	data		8331638	1					
ANR	8331673	Argument	data		8331638	0					
ANR	8331674	Identifier	data		8331638	0					
ANR	8331675	Argument	pcs -> status . buffer + pcs -> status . read_pos		8331638	1					
ANR	8331676	AdditiveExpression	pcs -> status . buffer + pcs -> status . read_pos		8331638	0		+			
ANR	8331677	MemberAccess	pcs -> status . buffer		8331638	0					
ANR	8331678	PtrMemberAccess	pcs -> status		8331638	0					
ANR	8331679	Identifier	pcs		8331638	0					
ANR	8331680	Identifier	status		8331638	1					
ANR	8331681	Identifier	buffer		8331638	1					
ANR	8331682	MemberAccess	pcs -> status . read_pos		8331638	1					
ANR	8331683	PtrMemberAccess	pcs -> status		8331638	0					
ANR	8331684	Identifier	pcs		8331638	0					
ANR	8331685	Identifier	status		8331638	1					
ANR	8331686	Identifier	read_pos		8331638	1					
ANR	8331687	Argument	count		8331638	2					
ANR	8331688	Identifier	count		8331638	0					
ANR	8331689	ExpressionStatement	pcs -> status . read_pos += count	52:4:1465:1494	8331638	2	True				
ANR	8331690	AssignmentExpression	pcs -> status . read_pos += count		8331638	0		+=			
ANR	8331691	MemberAccess	pcs -> status . read_pos		8331638	0					
ANR	8331692	PtrMemberAccess	pcs -> status		8331638	0					
ANR	8331693	Identifier	pcs		8331638	0					
ANR	8331694	Identifier	status		8331638	1					
ANR	8331695	Identifier	read_pos		8331638	1					
ANR	8331696	Identifier	count		8331638	1					
ANR	8331697	IfStatement	if ( pcs -> status . read_pos == pcs -> status . write_pos )		8331638	3					
ANR	8331698	Condition	pcs -> status . read_pos == pcs -> status . write_pos	53:8:1504:1548	8331638	0	True				
ANR	8331699	EqualityExpression	pcs -> status . read_pos == pcs -> status . write_pos		8331638	0		==			
ANR	8331700	MemberAccess	pcs -> status . read_pos		8331638	0					
ANR	8331701	PtrMemberAccess	pcs -> status		8331638	0					
ANR	8331702	Identifier	pcs		8331638	0					
ANR	8331703	Identifier	status		8331638	1					
ANR	8331704	Identifier	read_pos		8331638	1					
ANR	8331705	MemberAccess	pcs -> status . write_pos		8331638	1					
ANR	8331706	PtrMemberAccess	pcs -> status		8331638	0					
ANR	8331707	Identifier	pcs		8331638	0					
ANR	8331708	Identifier	status		8331638	1					
ANR	8331709	Identifier	write_pos		8331638	1					
ANR	8331710	CompoundStatement		8:55:278:278	8331638	1					
ANR	8331711	ExpressionStatement	"gs_free_object ( pcs -> memory , pcs -> status . buffer , ""status buffer"" )"	54:8:1561:1625	8331638	0	True				
ANR	8331712	CallExpression	"gs_free_object ( pcs -> memory , pcs -> status . buffer , ""status buffer"" )"		8331638	0					
ANR	8331713	Callee	gs_free_object		8331638	0					
ANR	8331714	Identifier	gs_free_object		8331638	0					
ANR	8331715	ArgumentList	pcs -> memory		8331638	1					
ANR	8331716	Argument	pcs -> memory		8331638	0					
ANR	8331717	PtrMemberAccess	pcs -> memory		8331638	0					
ANR	8331718	Identifier	pcs		8331638	0					
ANR	8331719	Identifier	memory		8331638	1					
ANR	8331720	Argument	pcs -> status . buffer		8331638	1					
ANR	8331721	MemberAccess	pcs -> status . buffer		8331638	0					
ANR	8331722	PtrMemberAccess	pcs -> status		8331638	0					
ANR	8331723	Identifier	pcs		8331638	0					
ANR	8331724	Identifier	status		8331638	1					
ANR	8331725	Identifier	buffer		8331638	1					
ANR	8331726	Argument	"""status buffer"""		8331638	2					
ANR	8331727	PrimaryExpression	"""status buffer"""		8331638	0					
ANR	8331728	ExpressionStatement	pcs -> status . write_pos = pcs -> status . read_pos = 0	55:8:1635:1683	8331638	1	True				
ANR	8331729	AssignmentExpression	pcs -> status . write_pos = pcs -> status . read_pos = 0		8331638	0		=			
ANR	8331730	MemberAccess	pcs -> status . write_pos		8331638	0					
ANR	8331731	PtrMemberAccess	pcs -> status		8331638	0					
ANR	8331732	Identifier	pcs		8331638	0					
ANR	8331733	Identifier	status		8331638	1					
ANR	8331734	Identifier	write_pos		8331638	1					
ANR	8331735	AssignmentExpression	pcs -> status . read_pos = 0		8331638	1		=			
ANR	8331736	MemberAccess	pcs -> status . read_pos		8331638	0					
ANR	8331737	PtrMemberAccess	pcs -> status		8331638	0					
ANR	8331738	Identifier	pcs		8331638	0					
ANR	8331739	Identifier	status		8331638	1					
ANR	8331740	Identifier	read_pos		8331638	1					
ANR	8331741	PrimaryExpression	0		8331638	1					
ANR	8331742	ReturnStatement	return count ;	57:4:1695:1707	8331638	4	True				
ANR	8331743	Identifier	count		8331638	0					
ANR	8331744	ReturnType	uint		8331638	1					
ANR	8331745	Identifier	pcl_status_read		8331638	2					
ANR	8331746	ParameterList	"byte * data , uint max_data , pcl_state_t * pcs"		8331638	3					
ANR	8331747	Parameter	byte * data	45:16:1225:1235	8331638	0	True				
ANR	8331748	ParameterType	byte *		8331638	0					
ANR	8331749	Identifier	data		8331638	1					
ANR	8331750	Parameter	uint max_data	45:29:1238:1250	8331638	1	True				
ANR	8331751	ParameterType	uint		8331638	0					
ANR	8331752	Identifier	max_data		8331638	1					
ANR	8331753	Parameter	pcl_state_t * pcs	45:44:1253:1269	8331638	2	True				
ANR	8331754	ParameterType	pcl_state_t *		8331638	0					
ANR	8331755	Identifier	pcs		8331638	1					
ANR	8331756	CFGEntryNode	ENTRY		8331638		True				
ANR	8331757	CFGExitNode	EXIT		8331638		True				
ANR	8331758	Symbol	pcs		8331638						
ANR	8331759	Symbol	min		8331638						
ANR	8331760	Symbol	data		8331638						
ANR	8331761	Symbol	pcs -> status		8331638						
ANR	8331762	Symbol	pcs -> status . write_pos		8331638						
ANR	8331763	Symbol	count		8331638						
ANR	8331764	Symbol	* pcs		8331638						
ANR	8331765	Symbol	pcs -> status . buffer		8331638						
ANR	8331766	Symbol	pcs -> memory		8331638						
ANR	8331767	Symbol	pcs -> status . read_pos		8331638						
ANR	8331768	Symbol	max_data		8331638						
ANR	8331769	Function	stputs	61:0:1746:1881							
ANR	8331770	FunctionDef	"stputs (stream * s , const char * str)"		8331769	0					
ANR	8331771	CompoundStatement		63:0:1794:1881	8331769	0					
ANR	8331772	IdentifierDeclStatement	uint ignore_count ;	64:4:1800:1817	8331769	0	True				
ANR	8331773	IdentifierDecl	ignore_count		8331769	0					
ANR	8331774	IdentifierDeclType	uint		8331769	0					
ANR	8331775	Identifier	ignore_count		8331769	1					
ANR	8331776	ExpressionStatement	"sputs ( s , ( const byte * ) str , strlen ( str ) , & ignore_count )"	66:4:1824:1879	8331769	1	True				
ANR	8331777	CallExpression	"sputs ( s , ( const byte * ) str , strlen ( str ) , & ignore_count )"		8331769	0					
ANR	8331778	Callee	sputs		8331769	0					
ANR	8331779	Identifier	sputs		8331769	0					
ANR	8331780	ArgumentList	s		8331769	1					
ANR	8331781	Argument	s		8331769	0					
ANR	8331782	Identifier	s		8331769	0					
ANR	8331783	Argument	( const byte * ) str		8331769	1					
ANR	8331784	CastExpression	( const byte * ) str		8331769	0					
ANR	8331785	CastTarget	const byte *		8331769	0					
ANR	8331786	Identifier	str		8331769	1					
ANR	8331787	Argument	strlen ( str )		8331769	2					
ANR	8331788	CallExpression	strlen ( str )		8331769	0					
ANR	8331789	Callee	strlen		8331769	0					
ANR	8331790	Identifier	strlen		8331769	0					
ANR	8331791	ArgumentList	str		8331769	1					
ANR	8331792	Argument	str		8331769	0					
ANR	8331793	Identifier	str		8331769	0					
ANR	8331794	Argument	& ignore_count		8331769	3					
ANR	8331795	UnaryOperationExpression	& ignore_count		8331769	0					
ANR	8331796	UnaryOperator	&		8331769	0					
ANR	8331797	Identifier	ignore_count		8331769	1					
ANR	8331798	ReturnType	static void		8331769	1					
ANR	8331799	Identifier	stputs		8331769	2					
ANR	8331800	ParameterList	"stream * s , const char * str"		8331769	3					
ANR	8331801	Parameter	stream * s	62:7:1765:1774	8331769	0	True				
ANR	8331802	ParameterType	stream *		8331769	0					
ANR	8331803	Identifier	s		8331769	1					
ANR	8331804	Parameter	const char * str	62:19:1777:1791	8331769	1	True				
ANR	8331805	ParameterType	const char *		8331769	0					
ANR	8331806	Identifier	str		8331769	1					
ANR	8331807	CFGEntryNode	ENTRY		8331769		True				
ANR	8331808	CFGExitNode	EXIT		8331769		True				
ANR	8331809	Symbol	str		8331769						
ANR	8331810	Symbol	strlen		8331769						
ANR	8331811	Symbol	s		8331769						
ANR	8331812	Symbol	ignore_count		8331769						
ANR	8331813	Symbol	& ignore_count		8331769						
ANR	8331814	Function	stprintf	71:0:1960:2204							
ANR	8331815	FunctionDef	"stprintf (stream * s , const char * fmt)"		8331814	0					
ANR	8331816	CompoundStatement		73:0:2015:2204	8331814	0					
ANR	8331817	IdentifierDeclStatement	uint count ;	74:4:2021:2031	8331814	0	True				
ANR	8331818	IdentifierDecl	count		8331814	0					
ANR	8331819	IdentifierDeclType	uint		8331814	0					
ANR	8331820	Identifier	count		8331814	1					
ANR	8331821	IdentifierDeclStatement	va_list args ;	75:4:2037:2049	8331814	1	True				
ANR	8331822	IdentifierDecl	args		8331814	0					
ANR	8331823	IdentifierDeclType	va_list		8331814	0					
ANR	8331824	Identifier	args		8331814	1					
ANR	8331825	IdentifierDeclStatement	char buf [ 1024 ] ;	76:4:2055:2069	8331814	2	True				
ANR	8331826	IdentifierDecl	buf [ 1024 ]		8331814	0					
ANR	8331827	IdentifierDeclType	char [ 1024 ]		8331814	0					
ANR	8331828	Identifier	buf		8331814	1					
ANR	8331829	PrimaryExpression	1024		8331814	2					
ANR	8331830	ExpressionStatement	"va_start ( args , fmt )"	78:4:2076:2095	8331814	3	True				
ANR	8331831	CallExpression	"va_start ( args , fmt )"		8331814	0					
ANR	8331832	Callee	va_start		8331814	0					
ANR	8331833	Identifier	va_start		8331814	0					
ANR	8331834	ArgumentList	args		8331814	1					
ANR	8331835	Argument	args		8331814	0					
ANR	8331836	Identifier	args		8331814	0					
ANR	8331837	Argument	fmt		8331814	1					
ANR	8331838	Identifier	fmt		8331814	0					
ANR	8331839	ExpressionStatement	"count = gs_vsprintf ( buf , fmt , args )"	79:4:2101:2136	8331814	4	True				
ANR	8331840	AssignmentExpression	"count = gs_vsprintf ( buf , fmt , args )"		8331814	0		=			
ANR	8331841	Identifier	count		8331814	0					
ANR	8331842	CallExpression	"gs_vsprintf ( buf , fmt , args )"		8331814	1					
ANR	8331843	Callee	gs_vsprintf		8331814	0					
ANR	8331844	Identifier	gs_vsprintf		8331814	0					
ANR	8331845	ArgumentList	buf		8331814	1					
ANR	8331846	Argument	buf		8331814	0					
ANR	8331847	Identifier	buf		8331814	0					
ANR	8331848	Argument	fmt		8331814	1					
ANR	8331849	Identifier	fmt		8331814	0					
ANR	8331850	Argument	args		8331814	2					
ANR	8331851	Identifier	args		8331814	0					
ANR	8331852	ExpressionStatement	"sputs ( s , ( const byte * ) buf , count , & count )"	80:4:2142:2184	8331814	5	True				
ANR	8331853	CallExpression	"sputs ( s , ( const byte * ) buf , count , & count )"		8331814	0					
ANR	8331854	Callee	sputs		8331814	0					
ANR	8331855	Identifier	sputs		8331814	0					
ANR	8331856	ArgumentList	s		8331814	1					
ANR	8331857	Argument	s		8331814	0					
ANR	8331858	Identifier	s		8331814	0					
ANR	8331859	Argument	( const byte * ) buf		8331814	1					
ANR	8331860	CastExpression	( const byte * ) buf		8331814	0					
ANR	8331861	CastTarget	const byte *		8331814	0					
ANR	8331862	Identifier	buf		8331814	1					
ANR	8331863	Argument	count		8331814	2					
ANR	8331864	Identifier	count		8331814	0					
ANR	8331865	Argument	& count		8331814	3					
ANR	8331866	UnaryOperationExpression	& count		8331814	0					
ANR	8331867	UnaryOperator	&		8331814	0					
ANR	8331868	Identifier	count		8331814	1					
ANR	8331869	ExpressionStatement	va_end ( args )	81:4:2190:2202	8331814	6	True				
ANR	8331870	CallExpression	va_end ( args )		8331814	0					
ANR	8331871	Callee	va_end		8331814	0					
ANR	8331872	Identifier	va_end		8331814	0					
ANR	8331873	ArgumentList	args		8331814	1					
ANR	8331874	Argument	args		8331814	0					
ANR	8331875	Identifier	args		8331814	0					
ANR	8331876	ReturnType	static void		8331814	1					
ANR	8331877	Identifier	stprintf		8331814	2					
ANR	8331878	ParameterList	"stream * s , const char * fmt"		8331814	3					
ANR	8331879	Parameter	stream * s	72:9:1981:1990	8331814	0	True				
ANR	8331880	ParameterType	stream *		8331814	0					
ANR	8331881	Identifier	s		8331814	1					
ANR	8331882	Parameter	const char * fmt	72:21:1993:2007	8331814	1	True				
ANR	8331883	ParameterType	const char *		8331814	0					
ANR	8331884	Identifier	fmt		8331814	1					
ANR	8331885	CFGEntryNode	ENTRY		8331814		True				
ANR	8331886	CFGExitNode	EXIT		8331814		True				
ANR	8331887	Symbol	args		8331814						
ANR	8331888	Symbol	buf		8331814						
ANR	8331889	Symbol	s		8331814						
ANR	8331890	Symbol	count		8331814						
ANR	8331891	Symbol	& count		8331814						
ANR	8331892	Symbol	fmt		8331814						
ANR	8331893	Symbol	gs_vsprintf		8331814						
ANR	8331894	Function	status_begin	85:0:2265:3071							
ANR	8331895	FunctionDef	"status_begin (stream * s , pcl_state_t * pcs)"		8331894	0					
ANR	8331896	CompoundStatement		87:0:2321:3071	8331894	0					
ANR	8331897	IdentifierDeclStatement	byte * buffer = pcs -> status . buffer ;	88:4:2327:2360	8331894	0	True				
ANR	8331898	IdentifierDecl	* buffer = pcs -> status . buffer		8331894	0					
ANR	8331899	IdentifierDeclType	byte *		8331894	0					
ANR	8331900	Identifier	buffer		8331894	1					
ANR	8331901	AssignmentExpression	* buffer = pcs -> status . buffer		8331894	2		=			
ANR	8331902	Identifier	buffer		8331894	0					
ANR	8331903	MemberAccess	pcs -> status . buffer		8331894	1					
ANR	8331904	PtrMemberAccess	pcs -> status		8331894	0					
ANR	8331905	Identifier	pcs		8331894	0					
ANR	8331906	Identifier	status		8331894	1					
ANR	8331907	Identifier	buffer		8331894	1					
ANR	8331908	IfStatement	if ( pcs -> status . read_pos > 0 )		8331894	1					
ANR	8331909	Condition	pcs -> status . read_pos > 0	90:8:2371:2394	8331894	0	True				
ANR	8331910	RelationalExpression	pcs -> status . read_pos > 0		8331894	0		>			
ANR	8331911	MemberAccess	pcs -> status . read_pos		8331894	0					
ANR	8331912	PtrMemberAccess	pcs -> status		8331894	0					
ANR	8331913	Identifier	pcs		8331894	0					
ANR	8331914	Identifier	status		8331894	1					
ANR	8331915	Identifier	read_pos		8331894	1					
ANR	8331916	PrimaryExpression	0		8331894	1					
ANR	8331917	CompoundStatement		4:34:75:75	8331894	1					
ANR	8331918	ExpressionStatement	"memmove ( buffer , buffer + pcs -> status . read_pos , pcs -> status . write_pos - pcs -> status . read_pos )"	91:8:2407:2515	8331894	0	True				
ANR	8331919	CallExpression	"memmove ( buffer , buffer + pcs -> status . read_pos , pcs -> status . write_pos - pcs -> status . read_pos )"		8331894	0					
ANR	8331920	Callee	memmove		8331894	0					
ANR	8331921	Identifier	memmove		8331894	0					
ANR	8331922	ArgumentList	buffer		8331894	1					
ANR	8331923	Argument	buffer		8331894	0					
ANR	8331924	Identifier	buffer		8331894	0					
ANR	8331925	Argument	buffer + pcs -> status . read_pos		8331894	1					
ANR	8331926	AdditiveExpression	buffer + pcs -> status . read_pos		8331894	0		+			
ANR	8331927	Identifier	buffer		8331894	0					
ANR	8331928	MemberAccess	pcs -> status . read_pos		8331894	1					
ANR	8331929	PtrMemberAccess	pcs -> status		8331894	0					
ANR	8331930	Identifier	pcs		8331894	0					
ANR	8331931	Identifier	status		8331894	1					
ANR	8331932	Identifier	read_pos		8331894	1					
ANR	8331933	Argument	pcs -> status . write_pos - pcs -> status . read_pos		8331894	2					
ANR	8331934	AdditiveExpression	pcs -> status . write_pos - pcs -> status . read_pos		8331894	0		-			
ANR	8331935	MemberAccess	pcs -> status . write_pos		8331894	0					
ANR	8331936	PtrMemberAccess	pcs -> status		8331894	0					
ANR	8331937	Identifier	pcs		8331894	0					
ANR	8331938	Identifier	status		8331894	1					
ANR	8331939	Identifier	write_pos		8331894	1					
ANR	8331940	MemberAccess	pcs -> status . read_pos		8331894	1					
ANR	8331941	PtrMemberAccess	pcs -> status		8331894	0					
ANR	8331942	Identifier	pcs		8331894	0					
ANR	8331943	Identifier	status		8331894	1					
ANR	8331944	Identifier	read_pos		8331894	1					
ANR	8331945	ExpressionStatement	pcs -> status . write_pos -= pcs -> status . read_pos	93:8:2525:2570	8331894	1	True				
ANR	8331946	AssignmentExpression	pcs -> status . write_pos -= pcs -> status . read_pos		8331894	0		-=			
ANR	8331947	MemberAccess	pcs -> status . write_pos		8331894	0					
ANR	8331948	PtrMemberAccess	pcs -> status		8331894	0					
ANR	8331949	Identifier	pcs		8331894	0					
ANR	8331950	Identifier	status		8331894	1					
ANR	8331951	Identifier	write_pos		8331894	1					
ANR	8331952	MemberAccess	pcs -> status . read_pos		8331894	1					
ANR	8331953	PtrMemberAccess	pcs -> status		8331894	0					
ANR	8331954	Identifier	pcs		8331894	0					
ANR	8331955	Identifier	status		8331894	1					
ANR	8331956	Identifier	read_pos		8331894	1					
ANR	8331957	ExpressionStatement	pcs -> status . read_pos = 0	94:8:2580:2604	8331894	2	True				
ANR	8331958	AssignmentExpression	pcs -> status . read_pos = 0		8331894	0		=			
ANR	8331959	MemberAccess	pcs -> status . read_pos		8331894	0					
ANR	8331960	PtrMemberAccess	pcs -> status		8331894	0					
ANR	8331961	Identifier	pcs		8331894	0					
ANR	8331962	Identifier	status		8331894	1					
ANR	8331963	Identifier	read_pos		8331894	1					
ANR	8331964	PrimaryExpression	0		8331894	1					
ANR	8331965	IfStatement	if ( buffer == 0 )		8331894	2					
ANR	8331966	Condition	buffer == 0	96:8:2620:2630	8331894	0	True				
ANR	8331967	EqualityExpression	buffer == 0		8331894	0		==			
ANR	8331968	Identifier	buffer		8331894	0					
ANR	8331969	PrimaryExpression	0		8331894	1					
ANR	8331970	CompoundStatement		10:21:311:311	8331894	1					
ANR	8331971	ExpressionStatement	"buffer = gs_alloc_bytes ( pcs -> memory , STATUS_BUFFER_SIZE , ""status buffer"" )"	97:8:2643:2748	8331894	0	True				
ANR	8331972	AssignmentExpression	"buffer = gs_alloc_bytes ( pcs -> memory , STATUS_BUFFER_SIZE , ""status buffer"" )"		8331894	0		=			
ANR	8331973	Identifier	buffer		8331894	0					
ANR	8331974	CallExpression	"gs_alloc_bytes ( pcs -> memory , STATUS_BUFFER_SIZE , ""status buffer"" )"		8331894	1					
ANR	8331975	Callee	gs_alloc_bytes		8331894	0					
ANR	8331976	Identifier	gs_alloc_bytes		8331894	0					
ANR	8331977	ArgumentList	pcs -> memory		8331894	1					
ANR	8331978	Argument	pcs -> memory		8331894	0					
ANR	8331979	PtrMemberAccess	pcs -> memory		8331894	0					
ANR	8331980	Identifier	pcs		8331894	0					
ANR	8331981	Identifier	memory		8331894	1					
ANR	8331982	Argument	STATUS_BUFFER_SIZE		8331894	1					
ANR	8331983	Identifier	STATUS_BUFFER_SIZE		8331894	0					
ANR	8331984	Argument	"""status buffer"""		8331894	2					
ANR	8331985	PrimaryExpression	"""status buffer"""		8331894	0					
ANR	8331986	ExpressionStatement	pcs -> status . buffer = buffer	99:8:2758:2785	8331894	1	True				
ANR	8331987	AssignmentExpression	pcs -> status . buffer = buffer		8331894	0		=			
ANR	8331988	MemberAccess	pcs -> status . buffer		8331894	0					
ANR	8331989	PtrMemberAccess	pcs -> status		8331894	0					
ANR	8331990	Identifier	pcs		8331894	0					
ANR	8331991	Identifier	status		8331894	1					
ANR	8331992	Identifier	buffer		8331894	1					
ANR	8331993	Identifier	buffer		8331894	1					
ANR	8331994	IfStatement	if ( buffer == 0 )		8331894	3					
ANR	8331995	Condition	buffer == 0	101:8:2801:2811	8331894	0	True				
ANR	8331996	EqualityExpression	buffer == 0		8331894	0		==			
ANR	8331997	Identifier	buffer		8331894	0					
ANR	8331998	PrimaryExpression	0		8331894	1					
ANR	8331999	ExpressionStatement	"swrite_string ( s , pcs -> status . internal_buffer , sizeof ( pcs -> status . internal_buffer ) )"	102:8:2822:2926	8331894	1	True				
ANR	8332000	CallExpression	"swrite_string ( s , pcs -> status . internal_buffer , sizeof ( pcs -> status . internal_buffer ) )"		8331894	0					
ANR	8332001	Callee	swrite_string		8331894	0					
ANR	8332002	Identifier	swrite_string		8331894	0					
ANR	8332003	ArgumentList	s		8331894	1					
ANR	8332004	Argument	s		8331894	0					
ANR	8332005	Identifier	s		8331894	0					
ANR	8332006	Argument	pcs -> status . internal_buffer		8331894	1					
ANR	8332007	MemberAccess	pcs -> status . internal_buffer		8331894	0					
ANR	8332008	PtrMemberAccess	pcs -> status		8331894	0					
ANR	8332009	Identifier	pcs		8331894	0					
ANR	8332010	Identifier	status		8331894	1					
ANR	8332011	Identifier	internal_buffer		8331894	1					
ANR	8332012	Argument	sizeof ( pcs -> status . internal_buffer )		8331894	2					
ANR	8332013	SizeofExpression	sizeof ( pcs -> status . internal_buffer )		8331894	0					
ANR	8332014	Sizeof	sizeof		8331894	0					
ANR	8332015	MemberAccess	pcs -> status . internal_buffer		8331894	1					
ANR	8332016	PtrMemberAccess	pcs -> status		8331894	0					
ANR	8332017	Identifier	pcs		8331894	0					
ANR	8332018	Identifier	status		8331894	1					
ANR	8332019	Identifier	internal_buffer		8331894	1					
ANR	8332020	ElseStatement	else		8331894	0					
ANR	8332021	ExpressionStatement	"swrite_string ( s , buffer , gs_object_size ( pcs -> memory , buffer ) )"	105:8:2945:3006	8331894	0	True				
ANR	8332022	CallExpression	"swrite_string ( s , buffer , gs_object_size ( pcs -> memory , buffer ) )"		8331894	0					
ANR	8332023	Callee	swrite_string		8331894	0					
ANR	8332024	Identifier	swrite_string		8331894	0					
ANR	8332025	ArgumentList	s		8331894	1					
ANR	8332026	Argument	s		8331894	0					
ANR	8332027	Identifier	s		8331894	0					
ANR	8332028	Argument	buffer		8331894	1					
ANR	8332029	Identifier	buffer		8331894	0					
ANR	8332030	Argument	"gs_object_size ( pcs -> memory , buffer )"		8331894	2					
ANR	8332031	CallExpression	"gs_object_size ( pcs -> memory , buffer )"		8331894	0					
ANR	8332032	Callee	gs_object_size		8331894	0					
ANR	8332033	Identifier	gs_object_size		8331894	0					
ANR	8332034	ArgumentList	pcs -> memory		8331894	1					
ANR	8332035	Argument	pcs -> memory		8331894	0					
ANR	8332036	PtrMemberAccess	pcs -> memory		8331894	0					
ANR	8332037	Identifier	pcs		8331894	0					
ANR	8332038	Identifier	memory		8331894	1					
ANR	8332039	Argument	buffer		8331894	1					
ANR	8332040	Identifier	buffer		8331894	0					
ANR	8332041	ExpressionStatement	"sseek ( s , pcs -> status . write_pos )"	106:4:3012:3043	8331894	4	True				
ANR	8332042	CallExpression	"sseek ( s , pcs -> status . write_pos )"		8331894	0					
ANR	8332043	Callee	sseek		8331894	0					
ANR	8332044	Identifier	sseek		8331894	0					
ANR	8332045	ArgumentList	s		8331894	1					
ANR	8332046	Argument	s		8331894	0					
ANR	8332047	Identifier	s		8331894	0					
ANR	8332048	Argument	pcs -> status . write_pos		8331894	1					
ANR	8332049	MemberAccess	pcs -> status . write_pos		8331894	0					
ANR	8332050	PtrMemberAccess	pcs -> status		8331894	0					
ANR	8332051	Identifier	pcs		8331894	0					
ANR	8332052	Identifier	status		8331894	1					
ANR	8332053	Identifier	write_pos		8331894	1					
ANR	8332054	ExpressionStatement	"stputs ( s , ""PCL\\r\\n"" )"	107:4:3049:3069	8331894	5	True				
ANR	8332055	CallExpression	"stputs ( s , ""PCL\\r\\n"" )"		8331894	0					
ANR	8332056	Callee	stputs		8331894	0					
ANR	8332057	Identifier	stputs		8331894	0					
ANR	8332058	ArgumentList	s		8331894	1					
ANR	8332059	Argument	s		8331894	0					
ANR	8332060	Identifier	s		8331894	0					
ANR	8332061	Argument	"""PCL\\r\\n"""		8331894	1					
ANR	8332062	PrimaryExpression	"""PCL\\r\\n"""		8331894	0					
ANR	8332063	ReturnType	static void		8331894	1					
ANR	8332064	Identifier	status_begin		8331894	2					
ANR	8332065	ParameterList	"stream * s , pcl_state_t * pcs"		8331894	3					
ANR	8332066	Parameter	stream * s	86:13:2290:2299	8331894	0	True				
ANR	8332067	ParameterType	stream *		8331894	0					
ANR	8332068	Identifier	s		8331894	1					
ANR	8332069	Parameter	pcl_state_t * pcs	86:25:2302:2318	8331894	1	True				
ANR	8332070	ParameterType	pcl_state_t *		8331894	0					
ANR	8332071	Identifier	pcs		8331894	1					
ANR	8332072	CFGEntryNode	ENTRY		8331894		True				
ANR	8332073	CFGExitNode	EXIT		8331894		True				
ANR	8332074	Symbol	pcs		8331894						
ANR	8332075	Symbol	gs_alloc_bytes		8331894						
ANR	8332076	Symbol	pcs -> status . internal_buffer		8331894						
ANR	8332077	Symbol	STATUS_BUFFER_SIZE		8331894						
ANR	8332078	Symbol	* pcs		8331894						
ANR	8332079	Symbol	gs_object_size		8331894						
ANR	8332080	Symbol	s		8331894						
ANR	8332081	Symbol	pcs -> status		8331894						
ANR	8332082	Symbol	pcs -> status . write_pos		8331894						
ANR	8332083	Symbol	pcs -> status . buffer		8331894						
ANR	8332084	Symbol	pcs -> memory		8331894						
ANR	8332085	Symbol	buffer		8331894						
ANR	8332086	Symbol	pcs -> status . read_pos		8331894						
ANR	8332087	Function	status_put_id	111:0:3115:3464							
ANR	8332088	FunctionDef	"status_put_id (stream * s , const char * title , const char * id)"		8332087	0					
ANR	8332089	CompoundStatement		113:0:3188:3464	8332087	0					
ANR	8332090	IfStatement	if ( * s -> cursor . w . ptr == '\\n' )		8332087	0					
ANR	8332091	Condition	* s -> cursor . w . ptr == '\\n'	114:8:3299:3322	8332087	0	True				
ANR	8332092	EqualityExpression	* s -> cursor . w . ptr == '\\n'		8332087	0		==			
ANR	8332093	UnaryOperationExpression	* s -> cursor . w . ptr		8332087	0					
ANR	8332094	UnaryOperator	*		8332087	0					
ANR	8332095	MemberAccess	s -> cursor . w . ptr		8332087	1					
ANR	8332096	MemberAccess	s -> cursor . w		8332087	0					
ANR	8332097	PtrMemberAccess	s -> cursor		8332087	0					
ANR	8332098	Identifier	s		8332087	0					
ANR	8332099	Identifier	cursor		8332087	1					
ANR	8332100	Identifier	w		8332087	1					
ANR	8332101	Identifier	ptr		8332087	1					
ANR	8332102	PrimaryExpression	'\\n'		8332087	1					
ANR	8332103	CompoundStatement		2:34:136:136	8332087	1					
ANR	8332104	ExpressionStatement	"stprintf ( s , ""%s=\\""%s"" , title , id )"	115:8:3378:3411	8332087	0	True				
ANR	8332105	CallExpression	"stprintf ( s , ""%s=\\""%s"" , title , id )"		8332087	0					
ANR	8332106	Callee	stprintf		8332087	0					
ANR	8332107	Identifier	stprintf		8332087	0					
ANR	8332108	ArgumentList	s		8332087	1					
ANR	8332109	Argument	s		8332087	0					
ANR	8332110	Identifier	s		8332087	0					
ANR	8332111	Argument	"""%s=\\""%s"""		8332087	1					
ANR	8332112	PrimaryExpression	"""%s=\\""%s"""		8332087	0					
ANR	8332113	Argument	title		8332087	2					
ANR	8332114	Identifier	title		8332087	0					
ANR	8332115	Argument	id		8332087	3					
ANR	8332116	Identifier	id		8332087	0					
ANR	8332117	ElseStatement	else		8332087	0					
ANR	8332118	CompoundStatement		4:11:235:235	8332087	0					
ANR	8332119	ExpressionStatement	"stprintf ( s , "",%s"" , id )"	117:8:3434:3456	8332087	0	True				
ANR	8332120	CallExpression	"stprintf ( s , "",%s"" , id )"		8332087	0					
ANR	8332121	Callee	stprintf		8332087	0					
ANR	8332122	Identifier	stprintf		8332087	0					
ANR	8332123	ArgumentList	s		8332087	1					
ANR	8332124	Argument	s		8332087	0					
ANR	8332125	Identifier	s		8332087	0					
ANR	8332126	Argument	""",%s"""		8332087	1					
ANR	8332127	PrimaryExpression	""",%s"""		8332087	0					
ANR	8332128	Argument	id		8332087	2					
ANR	8332129	Identifier	id		8332087	0					
ANR	8332130	ReturnType	static void		8332087	1					
ANR	8332131	Identifier	status_put_id		8332087	2					
ANR	8332132	ParameterList	"stream * s , const char * title , const char * id"		8332087	3					
ANR	8332133	Parameter	stream * s	112:14:3141:3150	8332087	0	True				
ANR	8332134	ParameterType	stream *		8332087	0					
ANR	8332135	Identifier	s		8332087	1					
ANR	8332136	Parameter	const char * title	112:26:3153:3169	8332087	1	True				
ANR	8332137	ParameterType	const char *		8332087	0					
ANR	8332138	Identifier	title		8332087	1					
ANR	8332139	Parameter	const char * id	112:45:3172:3185	8332087	2	True				
ANR	8332140	ParameterType	const char *		8332087	0					
ANR	8332141	Identifier	id		8332087	1					
ANR	8332142	CFGEntryNode	ENTRY		8332087		True				
ANR	8332143	CFGExitNode	EXIT		8332087		True				
ANR	8332144	Symbol	s -> cursor		8332087						
ANR	8332145	Symbol	s -> cursor . w . ptr		8332087						
ANR	8332146	Symbol	s		8332087						
ANR	8332147	Symbol	s -> cursor . w		8332087						
ANR	8332148	Symbol	* s -> cursor . w . ptr		8332087						
ANR	8332149	Symbol	* * s		8332087						
ANR	8332150	Symbol	id		8332087						
ANR	8332151	Symbol	title		8332087						
ANR	8332152	Symbol	* s		8332087						
ANR	8332153	Symbol	* s -> cursor		8332087						
ANR	8332154	Symbol	* s -> cursor . w		8332087						
ANR	8332155	Function	status_end_id_list	122:0:3500:3709							
ANR	8332156	FunctionDef	status_end_id_list (stream * s)		8332155	0					
ANR	8332157	CompoundStatement		124:0:3543:3709	8332155	0					
ANR	8332158	IfStatement	if ( * s -> cursor . w . ptr != '\\n' )		8332155	0					
ANR	8332159	Condition	* s -> cursor . w . ptr != '\\n'	125:8:3654:3677	8332155	0	True				
ANR	8332160	EqualityExpression	* s -> cursor . w . ptr != '\\n'		8332155	0		!=			
ANR	8332161	UnaryOperationExpression	* s -> cursor . w . ptr		8332155	0					
ANR	8332162	UnaryOperator	*		8332155	0					
ANR	8332163	MemberAccess	s -> cursor . w . ptr		8332155	1					
ANR	8332164	MemberAccess	s -> cursor . w		8332155	0					
ANR	8332165	PtrMemberAccess	s -> cursor		8332155	0					
ANR	8332166	Identifier	s		8332155	0					
ANR	8332167	Identifier	cursor		8332155	1					
ANR	8332168	Identifier	w		8332155	1					
ANR	8332169	Identifier	ptr		8332155	1					
ANR	8332170	PrimaryExpression	'\\n'		8332155	1					
ANR	8332171	ExpressionStatement	"stputs ( s , ""\\""\\r\\n"" )"	126:8:3688:3707	8332155	1	True				
ANR	8332172	CallExpression	"stputs ( s , ""\\""\\r\\n"" )"		8332155	0					
ANR	8332173	Callee	stputs		8332155	0					
ANR	8332174	Identifier	stputs		8332155	0					
ANR	8332175	ArgumentList	s		8332155	1					
ANR	8332176	Argument	s		8332155	0					
ANR	8332177	Identifier	s		8332155	0					
ANR	8332178	Argument	"""\\""\\r\\n"""		8332155	1					
ANR	8332179	PrimaryExpression	"""\\""\\r\\n"""		8332155	0					
ANR	8332180	ReturnType	static void		8332155	1					
ANR	8332181	Identifier	status_end_id_list		8332155	2					
ANR	8332182	ParameterList	stream * s		8332155	3					
ANR	8332183	Parameter	stream * s	123:19:3531:3540	8332155	0	True				
ANR	8332184	ParameterType	stream *		8332155	0					
ANR	8332185	Identifier	s		8332155	1					
ANR	8332186	CFGEntryNode	ENTRY		8332155		True				
ANR	8332187	CFGExitNode	EXIT		8332155		True				
ANR	8332188	Symbol	s -> cursor		8332155						
ANR	8332189	Symbol	s -> cursor . w . ptr		8332155						
ANR	8332190	Symbol	s		8332155						
ANR	8332191	Symbol	s -> cursor . w		8332155						
ANR	8332192	Symbol	* s -> cursor . w . ptr		8332155						
ANR	8332193	Symbol	* * s		8332155						
ANR	8332194	Symbol	* s		8332155						
ANR	8332195	Symbol	* s -> cursor		8332155						
ANR	8332196	Symbol	* s -> cursor . w		8332155						
ANR	8332197	Function	status_print_idlist	129:0:3712:4130							
ANR	8332198	FunctionDef	"status_print_idlist (stream * s , const ushort * idlist , int nid , const char * title)"		8332197	0					
ANR	8332199	CompoundStatement		132:0:3827:4130	8332197	0					
ANR	8332200	IdentifierDeclStatement	int i ;	133:4:3833:3838	8332197	0	True				
ANR	8332201	IdentifierDecl	i		8332197	0					
ANR	8332202	IdentifierDeclType	int		8332197	0					
ANR	8332203	Identifier	i		8332197	1					
ANR	8332204	ForStatement	for ( i = 0 ; i < nid ; i ++ )		8332197	1					
ANR	8332205	ForInit	i = 0 ;	135:9:3850:3855	8332197	0	True				
ANR	8332206	AssignmentExpression	i = 0		8332197	0		=			
ANR	8332207	Identifier	i		8332197	0					
ANR	8332208	PrimaryExpression	0		8332197	1					
ANR	8332209	Condition	i < nid	135:16:3857:3863	8332197	1	True				
ANR	8332210	RelationalExpression	i < nid		8332197	0		<			
ANR	8332211	Identifier	i		8332197	0					
ANR	8332212	Identifier	nid		8332197	1					
ANR	8332213	PostIncDecOperationExpression	i ++	135:25:3866:3868	8332197	2	True				
ANR	8332214	Identifier	i		8332197	0					
ANR	8332215	IncDec	++		8332197	1					
ANR	8332216	CompoundStatement		6:8:108:116	8332197	3					
ANR	8332217	IdentifierDeclStatement	char idstr [ 6 ] ;	136:8:3881:3894	8332197	0	True				
ANR	8332218	IdentifierDecl	idstr [ 6 ]		8332197	0					
ANR	8332219	IdentifierDeclType	char [ 6 ]		8332197	0					
ANR	8332220	Identifier	idstr		8332197	1					
ANR	8332221	PrimaryExpression	6		8332197	2					
ANR	8332222	IdentifierDeclStatement	"int n , l ;"	137:8:3936:3944	8332197	1	True				
ANR	8332223	IdentifierDecl	n		8332197	0					
ANR	8332224	IdentifierDeclType	int		8332197	0					
ANR	8332225	Identifier	n		8332197	1					
ANR	8332226	IdentifierDecl	l		8332197	1					
ANR	8332227	IdentifierDeclType	int		8332197	0					
ANR	8332228	Identifier	l		8332197	1					
ANR	8332229	ExpressionStatement	n = idlist [ i ] >> 6	139:8:3955:3973	8332197	2	True				
ANR	8332230	AssignmentExpression	n = idlist [ i ] >> 6		8332197	0		=			
ANR	8332231	Identifier	n		8332197	0					
ANR	8332232	ShiftExpression	idlist [ i ] >> 6		8332197	1		>>			
ANR	8332233	ArrayIndexing	idlist [ i ]		8332197	0					
ANR	8332234	Identifier	idlist		8332197	0					
ANR	8332235	Identifier	i		8332197	1					
ANR	8332236	PrimaryExpression	6		8332197	1					
ANR	8332237	ExpressionStatement	l = ( idlist [ i ] & 077 ) + 'A' - 1	140:8:3983:4014	8332197	3	True				
ANR	8332238	AssignmentExpression	l = ( idlist [ i ] & 077 ) + 'A' - 1		8332197	0		=			
ANR	8332239	Identifier	l		8332197	0					
ANR	8332240	AdditiveExpression	( idlist [ i ] & 077 ) + 'A' - 1		8332197	1		+			
ANR	8332241	BitAndExpression	idlist [ i ] & 077		8332197	0		&			
ANR	8332242	ArrayIndexing	idlist [ i ]		8332197	0					
ANR	8332243	Identifier	idlist		8332197	0					
ANR	8332244	Identifier	i		8332197	1					
ANR	8332245	PrimaryExpression	077		8332197	1					
ANR	8332246	AdditiveExpression	'A' - 1		8332197	1		-			
ANR	8332247	PrimaryExpression	'A'		8332197	0					
ANR	8332248	PrimaryExpression	1		8332197	1					
ANR	8332249	ExpressionStatement	"gs_sprintf ( idstr , ""%d%c"" , n , l )"	141:8:4024:4055	8332197	4	True				
ANR	8332250	CallExpression	"gs_sprintf ( idstr , ""%d%c"" , n , l )"		8332197	0					
ANR	8332251	Callee	gs_sprintf		8332197	0					
ANR	8332252	Identifier	gs_sprintf		8332197	0					
ANR	8332253	ArgumentList	idstr		8332197	1					
ANR	8332254	Argument	idstr		8332197	0					
ANR	8332255	Identifier	idstr		8332197	0					
ANR	8332256	Argument	"""%d%c"""		8332197	1					
ANR	8332257	PrimaryExpression	"""%d%c"""		8332197	0					
ANR	8332258	Argument	n		8332197	2					
ANR	8332259	Identifier	n		8332197	0					
ANR	8332260	Argument	l		8332197	3					
ANR	8332261	Identifier	l		8332197	0					
ANR	8332262	ExpressionStatement	"status_put_id ( s , title , idstr )"	142:8:4065:4095	8332197	5	True				
ANR	8332263	CallExpression	"status_put_id ( s , title , idstr )"		8332197	0					
ANR	8332264	Callee	status_put_id		8332197	0					
ANR	8332265	Identifier	status_put_id		8332197	0					
ANR	8332266	ArgumentList	s		8332197	1					
ANR	8332267	Argument	s		8332197	0					
ANR	8332268	Identifier	s		8332197	0					
ANR	8332269	Argument	title		8332197	1					
ANR	8332270	Identifier	title		8332197	0					
ANR	8332271	Argument	idstr		8332197	2					
ANR	8332272	Identifier	idstr		8332197	0					
ANR	8332273	ExpressionStatement	status_end_id_list ( s )	144:4:4107:4128	8332197	2	True				
ANR	8332274	CallExpression	status_end_id_list ( s )		8332197	0					
ANR	8332275	Callee	status_end_id_list		8332197	0					
ANR	8332276	Identifier	status_end_id_list		8332197	0					
ANR	8332277	ArgumentList	s		8332197	1					
ANR	8332278	Argument	s		8332197	0					
ANR	8332279	Identifier	s		8332197	0					
ANR	8332280	ReturnType	static void		8332197	1					
ANR	8332281	Identifier	status_print_idlist		8332197	2					
ANR	8332282	ParameterList	"stream * s , const ushort * idlist , int nid , const char * title"		8332197	3					
ANR	8332283	Parameter	stream * s	130:20:3744:3753	8332197	0	True				
ANR	8332284	ParameterType	stream *		8332197	0					
ANR	8332285	Identifier	s		8332197	1					
ANR	8332286	Parameter	const ushort * idlist	130:32:3756:3776	8332197	1	True				
ANR	8332287	ParameterType	const ushort *		8332197	0					
ANR	8332288	Identifier	idlist		8332197	1					
ANR	8332289	Parameter	int nid	130:55:3779:3785	8332197	2	True				
ANR	8332290	ParameterType	int		8332197	0					
ANR	8332291	Identifier	nid		8332197	1					
ANR	8332292	Parameter	const char * title	131:20:3808:3824	8332197	3	True				
ANR	8332293	ParameterType	const char *		8332197	0					
ANR	8332294	Identifier	title		8332197	1					
ANR	8332295	CFGEntryNode	ENTRY		8332197		True				
ANR	8332296	CFGExitNode	EXIT		8332197		True				
ANR	8332297	Symbol	idstr		8332197						
ANR	8332298	Symbol	s		8332197						
ANR	8332299	Symbol	* i		8332197						
ANR	8332300	Symbol	* idlist		8332197						
ANR	8332301	Symbol	nid		8332197						
ANR	8332302	Symbol	idlist		8332197						
ANR	8332303	Symbol	i		8332197						
ANR	8332304	Symbol	title		8332197						
ANR	8332305	Symbol	l		8332197						
ANR	8332306	Symbol	n		8332197						
ANR	8332307	Function	status_put_floating	149:0:4284:4715							
ANR	8332308	FunctionDef	"status_put_floating (stream * s , double v)"		8332307	0					
ANR	8332309	CompoundStatement		151:0:4338:4715	8332307	0					
ANR	8332310	IdentifierDeclStatement	int vf = ( int ) ( v * 100 + ( ( v < 0 ) ? - 0.5 : 0.5 ) ) ;	153:4:4491:4539	8332307	0	True				
ANR	8332311	IdentifierDecl	vf = ( int ) ( v * 100 + ( ( v < 0 ) ? - 0.5 : 0.5 ) )		8332307	0					
ANR	8332312	IdentifierDeclType	int		8332307	0					
ANR	8332313	Identifier	vf		8332307	1					
ANR	8332314	AssignmentExpression	vf = ( int ) ( v * 100 + ( ( v < 0 ) ? - 0.5 : 0.5 ) )		8332307	2		=			
ANR	8332315	Identifier	vf		8332307	0					
ANR	8332316	CastExpression	( int ) ( v * 100 + ( ( v < 0 ) ? - 0.5 : 0.5 ) )		8332307	1					
ANR	8332317	CastTarget	int		8332307	0					
ANR	8332318	AdditiveExpression	v * 100 + ( ( v < 0 ) ? - 0.5 : 0.5 )		8332307	1		+			
ANR	8332319	MultiplicativeExpression	v * 100		8332307	0		*			
ANR	8332320	Identifier	v		8332307	0					
ANR	8332321	PrimaryExpression	100		8332307	1					
ANR	8332322	ConditionalExpression	( v < 0 ) ? - 0.5 : 0.5		8332307	1					
ANR	8332323	Condition	v < 0		8332307	0					
ANR	8332324	RelationalExpression	v < 0		8332307	0		<			
ANR	8332325	Identifier	v		8332307	0					
ANR	8332326	PrimaryExpression	0		8332307	1					
ANR	8332327	UnaryOperationExpression	- 0.5		8332307	1					
ANR	8332328	UnaryOperator	-		8332307	0					
ANR	8332329	PrimaryExpression	0.5		8332307	1					
ANR	8332330	PrimaryExpression	0.5		8332307	2					
ANR	8332331	IfStatement	if ( vf / 100 * 100 == vf )		8332307	1					
ANR	8332332	Condition	vf / 100 * 100 == vf	155:8:4550:4569	8332307	0	True				
ANR	8332333	EqualityExpression	vf / 100 * 100 == vf		8332307	0		==			
ANR	8332334	MultiplicativeExpression	vf / 100 * 100		8332307	0		/			
ANR	8332335	Identifier	vf		8332307	0					
ANR	8332336	MultiplicativeExpression	100 * 100		8332307	1		*			
ANR	8332337	PrimaryExpression	100		8332307	0					
ANR	8332338	PrimaryExpression	100		8332307	1					
ANR	8332339	Identifier	vf		8332307	1					
ANR	8332340	ExpressionStatement	"stprintf ( s , ""%d"" , vf / 100 )"	156:8:4580:4607	8332307	1	True				
ANR	8332341	CallExpression	"stprintf ( s , ""%d"" , vf / 100 )"		8332307	0					
ANR	8332342	Callee	stprintf		8332307	0					
ANR	8332343	Identifier	stprintf		8332307	0					
ANR	8332344	ArgumentList	s		8332307	1					
ANR	8332345	Argument	s		8332307	0					
ANR	8332346	Identifier	s		8332307	0					
ANR	8332347	Argument	"""%d"""		8332307	1					
ANR	8332348	PrimaryExpression	"""%d"""		8332307	0					
ANR	8332349	Argument	vf / 100		8332307	2					
ANR	8332350	MultiplicativeExpression	vf / 100		8332307	0		/			
ANR	8332351	Identifier	vf		8332307	0					
ANR	8332352	PrimaryExpression	100		8332307	1					
ANR	8332353	ElseStatement	else		8332307	0					
ANR	8332354	IfStatement	if ( vf / 10 * 10 == vf )		8332307	0					
ANR	8332355	Condition	vf / 10 * 10 == vf	157:13:4622:4639	8332307	0	True				
ANR	8332356	EqualityExpression	vf / 10 * 10 == vf		8332307	0		==			
ANR	8332357	MultiplicativeExpression	vf / 10 * 10		8332307	0		/			
ANR	8332358	Identifier	vf		8332307	0					
ANR	8332359	MultiplicativeExpression	10 * 10		8332307	1		*			
ANR	8332360	PrimaryExpression	10		8332307	0					
ANR	8332361	PrimaryExpression	10		8332307	1					
ANR	8332362	Identifier	vf		8332307	1					
ANR	8332363	ExpressionStatement	"stprintf ( s , ""%.1f"" , v )"	158:8:4650:4672	8332307	1	True				
ANR	8332364	CallExpression	"stprintf ( s , ""%.1f"" , v )"		8332307	0					
ANR	8332365	Callee	stprintf		8332307	0					
ANR	8332366	Identifier	stprintf		8332307	0					
ANR	8332367	ArgumentList	s		8332307	1					
ANR	8332368	Argument	s		8332307	0					
ANR	8332369	Identifier	s		8332307	0					
ANR	8332370	Argument	"""%.1f"""		8332307	1					
ANR	8332371	PrimaryExpression	"""%.1f"""		8332307	0					
ANR	8332372	Argument	v		8332307	2					
ANR	8332373	Identifier	v		8332307	0					
ANR	8332374	ElseStatement	else		8332307	0					
ANR	8332375	ExpressionStatement	"stprintf ( s , ""%.2f"" , v )"	160:8:4691:4713	8332307	0	True				
ANR	8332376	CallExpression	"stprintf ( s , ""%.2f"" , v )"		8332307	0					
ANR	8332377	Callee	stprintf		8332307	0					
ANR	8332378	Identifier	stprintf		8332307	0					
ANR	8332379	ArgumentList	s		8332307	1					
ANR	8332380	Argument	s		8332307	0					
ANR	8332381	Identifier	s		8332307	0					
ANR	8332382	Argument	"""%.2f"""		8332307	1					
ANR	8332383	PrimaryExpression	"""%.2f"""		8332307	0					
ANR	8332384	Argument	v		8332307	2					
ANR	8332385	Identifier	v		8332307	0					
ANR	8332386	ReturnType	static void		8332307	1					
ANR	8332387	Identifier	status_put_floating		8332307	2					
ANR	8332388	ParameterList	"stream * s , double v"		8332307	3					
ANR	8332389	Parameter	stream * s	150:20:4316:4325	8332307	0	True				
ANR	8332390	ParameterType	stream *		8332307	0					
ANR	8332391	Identifier	s		8332307	1					
ANR	8332392	Parameter	double v	150:32:4328:4335	8332307	1	True				
ANR	8332393	ParameterType	double		8332307	0					
ANR	8332394	Identifier	v		8332307	1					
ANR	8332395	CFGEntryNode	ENTRY		8332307		True				
ANR	8332396	CFGExitNode	EXIT		8332307		True				
ANR	8332397	Symbol	vf		8332307						
ANR	8332398	Symbol	s		8332307						
ANR	8332399	Symbol	v		8332307						
ANR	8332400	Function	status_put_font	165:0:4815:10805							
ANR	8332401	FunctionDef	"status_put_font (stream * s , pcl_state_t * pcs , uint font_id , uint internal_id , pl_font_t * plfont , int font_set , bool extended)"		8332400	0					
ANR	8332402	CompoundStatement		169:0:4986:10805	8332400	0					
ANR	8332403	IdentifierDeclStatement	char paren = ( font_set > 0 ? ')' : '(' ) ;	170:4:4992:5031	8332400	0	True				
ANR	8332404	IdentifierDecl	paren = ( font_set > 0 ? ')' : '(' )		8332400	0					
ANR	8332405	IdentifierDeclType	char		8332400	0					
ANR	8332406	Identifier	paren		8332400	1					
ANR	8332407	AssignmentExpression	paren = ( font_set > 0 ? ')' : '(' )		8332400	2		=			
ANR	8332408	Identifier	paren		8332400	0					
ANR	8332409	ConditionalExpression	font_set > 0 ? ')' : '('		8332400	1					
ANR	8332410	Condition	font_set > 0		8332400	0					
ANR	8332411	RelationalExpression	font_set > 0		8332400	0		>			
ANR	8332412	Identifier	font_set		8332400	0					
ANR	8332413	PrimaryExpression	0		8332400	1					
ANR	8332414	PrimaryExpression	')'		8332400	1					
ANR	8332415	PrimaryExpression	'('		8332400	2					
ANR	8332416	IdentifierDeclStatement	bool proportional = plfont -> params . proportional_spacing ;	171:4:5037:5092	8332400	1	True				
ANR	8332417	IdentifierDecl	proportional = plfont -> params . proportional_spacing		8332400	0					
ANR	8332418	IdentifierDeclType	bool		8332400	0					
ANR	8332419	Identifier	proportional		8332400	1					
ANR	8332420	AssignmentExpression	proportional = plfont -> params . proportional_spacing		8332400	2		=			
ANR	8332421	Identifier	proportional		8332400	0					
ANR	8332422	MemberAccess	plfont -> params . proportional_spacing		8332400	1					
ANR	8332423	PtrMemberAccess	plfont -> params		8332400	0					
ANR	8332424	Identifier	plfont		8332400	0					
ANR	8332425	Identifier	params		8332400	1					
ANR	8332426	Identifier	proportional_spacing		8332400	1					
ANR	8332427	ExpressionStatement	"stputs ( s , ""SELECT=\\"""" )"	174:4:5153:5175	8332400	2	True				
ANR	8332428	CallExpression	"stputs ( s , ""SELECT=\\"""" )"		8332400	0					
ANR	8332429	Callee	stputs		8332400	0					
ANR	8332430	Identifier	stputs		8332400	0					
ANR	8332431	ArgumentList	s		8332400	1					
ANR	8332432	Argument	s		8332400	0					
ANR	8332433	Identifier	s		8332400	0					
ANR	8332434	Argument	"""SELECT=\\"""""		8332400	1					
ANR	8332435	PrimaryExpression	"""SELECT=\\"""""		8332400	0					
ANR	8332436	IfStatement	if ( pl_font_is_bound ( plfont ) || font_set > 0 )		8332400	3					
ANR	8332437	Condition	pl_font_is_bound ( plfont ) || font_set > 0	175:8:5185:5224	8332400	0	True				
ANR	8332438	OrExpression	pl_font_is_bound ( plfont ) || font_set > 0		8332400	0		||			
ANR	8332439	CallExpression	pl_font_is_bound ( plfont )		8332400	0					
ANR	8332440	Callee	pl_font_is_bound		8332400	0					
ANR	8332441	Identifier	pl_font_is_bound		8332400	0					
ANR	8332442	ArgumentList	plfont		8332400	1					
ANR	8332443	Argument	plfont		8332400	0					
ANR	8332444	Identifier	plfont		8332400	0					
ANR	8332445	RelationalExpression	font_set > 0		8332400	1		>			
ANR	8332446	Identifier	font_set		8332400	0					
ANR	8332447	PrimaryExpression	0		8332400	1					
ANR	8332448	CompoundStatement		9:8:311:443	8332400	1					
ANR	8332449	IdentifierDeclStatement	uint symbol_set = font_set > 0 ? pcs -> font_selection [ font_set ] . params . symbol_set : plfont -> params . symbol_set ;	177:8:5298:5430	8332400	0	True				
ANR	8332450	IdentifierDecl	symbol_set = font_set > 0 ? pcs -> font_selection [ font_set ] . params . symbol_set : plfont -> params . symbol_set		8332400	0					
ANR	8332451	IdentifierDeclType	uint		8332400	0					
ANR	8332452	Identifier	symbol_set		8332400	1					
ANR	8332453	AssignmentExpression	symbol_set = font_set > 0 ? pcs -> font_selection [ font_set ] . params . symbol_set : plfont -> params . symbol_set		8332400	2		=			
ANR	8332454	Identifier	symbol_set		8332400	0					
ANR	8332455	ConditionalExpression	font_set > 0 ? pcs -> font_selection [ font_set ] . params . symbol_set : plfont -> params . symbol_set		8332400	1					
ANR	8332456	Condition	font_set > 0		8332400	0					
ANR	8332457	RelationalExpression	font_set > 0		8332400	0		>			
ANR	8332458	Identifier	font_set		8332400	0					
ANR	8332459	PrimaryExpression	0		8332400	1					
ANR	8332460	MemberAccess	pcs -> font_selection [ font_set ] . params . symbol_set		8332400	1					
ANR	8332461	MemberAccess	pcs -> font_selection [ font_set ] . params		8332400	0					
ANR	8332462	ArrayIndexing	pcs -> font_selection [ font_set ]		8332400	0					
ANR	8332463	PtrMemberAccess	pcs -> font_selection		8332400	0					
ANR	8332464	Identifier	pcs		8332400	0					
ANR	8332465	Identifier	font_selection		8332400	1					
ANR	8332466	Identifier	font_set		8332400	1					
ANR	8332467	Identifier	params		8332400	1					
ANR	8332468	Identifier	symbol_set		8332400	1					
ANR	8332469	MemberAccess	plfont -> params . symbol_set		8332400	2					
ANR	8332470	PtrMemberAccess	plfont -> params		8332400	0					
ANR	8332471	Identifier	plfont		8332400	0					
ANR	8332472	Identifier	params		8332400	1					
ANR	8332473	Identifier	symbol_set		8332400	1					
ANR	8332474	ExpressionStatement	"stprintf ( s , ""<Esc>%c%u%c"" , paren , symbol_set >> 5 , ( symbol_set & 31 ) + 'A' - 1 )"	180:8:5440:5536	8332400	1	True				
ANR	8332475	CallExpression	"stprintf ( s , ""<Esc>%c%u%c"" , paren , symbol_set >> 5 , ( symbol_set & 31 ) + 'A' - 1 )"		8332400	0					
ANR	8332476	Callee	stprintf		8332400	0					
ANR	8332477	Identifier	stprintf		8332400	0					
ANR	8332478	ArgumentList	s		8332400	1					
ANR	8332479	Argument	s		8332400	0					
ANR	8332480	Identifier	s		8332400	0					
ANR	8332481	Argument	"""<Esc>%c%u%c"""		8332400	1					
ANR	8332482	PrimaryExpression	"""<Esc>%c%u%c"""		8332400	0					
ANR	8332483	Argument	paren		8332400	2					
ANR	8332484	Identifier	paren		8332400	0					
ANR	8332485	Argument	symbol_set >> 5		8332400	3					
ANR	8332486	ShiftExpression	symbol_set >> 5		8332400	0		>>			
ANR	8332487	Identifier	symbol_set		8332400	0					
ANR	8332488	PrimaryExpression	5		8332400	1					
ANR	8332489	Argument	( symbol_set & 31 ) + 'A' - 1		8332400	4					
ANR	8332490	AdditiveExpression	( symbol_set & 31 ) + 'A' - 1		8332400	0		+			
ANR	8332491	BitAndExpression	symbol_set & 31		8332400	0		&			
ANR	8332492	Identifier	symbol_set		8332400	0					
ANR	8332493	PrimaryExpression	31		8332400	1					
ANR	8332494	AdditiveExpression	'A' - 1		8332400	1		-			
ANR	8332495	PrimaryExpression	'A'		8332400	0					
ANR	8332496	PrimaryExpression	1		8332400	1					
ANR	8332497	ExpressionStatement	"stprintf ( s , ""<Esc>%cs%dp"" , paren , proportional )"	185:4:5598:5645	8332400	4	True				
ANR	8332498	CallExpression	"stprintf ( s , ""<Esc>%cs%dp"" , paren , proportional )"		8332400	0					
ANR	8332499	Callee	stprintf		8332400	0					
ANR	8332500	Identifier	stprintf		8332400	0					
ANR	8332501	ArgumentList	s		8332400	1					
ANR	8332502	Argument	s		8332400	0					
ANR	8332503	Identifier	s		8332400	0					
ANR	8332504	Argument	"""<Esc>%cs%dp"""		8332400	1					
ANR	8332505	PrimaryExpression	"""<Esc>%cs%dp"""		8332400	0					
ANR	8332506	Argument	paren		8332400	2					
ANR	8332507	Identifier	paren		8332400	0					
ANR	8332508	Argument	proportional		8332400	3					
ANR	8332509	Identifier	proportional		8332400	0					
ANR	8332510	IfStatement	if ( plfont -> scaling_technology == plfst_bitmap )		8332400	5					
ANR	8332511	Condition	plfont -> scaling_technology == plfst_bitmap	186:8:5655:5696	8332400	0	True				
ANR	8332512	EqualityExpression	plfont -> scaling_technology == plfst_bitmap		8332400	0		==			
ANR	8332513	PtrMemberAccess	plfont -> scaling_technology		8332400	0					
ANR	8332514	Identifier	plfont		8332400	0					
ANR	8332515	Identifier	scaling_technology		8332400	1					
ANR	8332516	Identifier	plfst_bitmap		8332400	1					
ANR	8332517	CompoundStatement		18:52:712:712	8332400	1					
ANR	8332518	ExpressionStatement	"status_put_floating ( s , pl_fp_pitch_per_inch ( & plfont -> params ) )"	187:8:5729:5790	8332400	0	True				
ANR	8332519	CallExpression	"status_put_floating ( s , pl_fp_pitch_per_inch ( & plfont -> params ) )"		8332400	0					
ANR	8332520	Callee	status_put_floating		8332400	0					
ANR	8332521	Identifier	status_put_floating		8332400	0					
ANR	8332522	ArgumentList	s		8332400	1					
ANR	8332523	Argument	s		8332400	0					
ANR	8332524	Identifier	s		8332400	0					
ANR	8332525	Argument	pl_fp_pitch_per_inch ( & plfont -> params )		8332400	1					
ANR	8332526	CallExpression	pl_fp_pitch_per_inch ( & plfont -> params )		8332400	0					
ANR	8332527	Callee	pl_fp_pitch_per_inch		8332400	0					
ANR	8332528	Identifier	pl_fp_pitch_per_inch		8332400	0					
ANR	8332529	ArgumentList	& plfont -> params		8332400	1					
ANR	8332530	Argument	& plfont -> params		8332400	0					
ANR	8332531	UnaryOperationExpression	& plfont -> params		8332400	0					
ANR	8332532	UnaryOperator	&		8332400	0					
ANR	8332533	PtrMemberAccess	plfont -> params		8332400	1					
ANR	8332534	Identifier	plfont		8332400	0					
ANR	8332535	Identifier	params		8332400	1					
ANR	8332536	ExpressionStatement	"stputs ( s , ""h"" )"	188:8:5800:5814	8332400	1	True				
ANR	8332537	CallExpression	"stputs ( s , ""h"" )"		8332400	0					
ANR	8332538	Callee	stputs		8332400	0					
ANR	8332539	Identifier	stputs		8332400	0					
ANR	8332540	ArgumentList	s		8332400	1					
ANR	8332541	Argument	s		8332400	0					
ANR	8332542	Identifier	s		8332400	0					
ANR	8332543	Argument	"""h"""		8332400	1					
ANR	8332544	PrimaryExpression	"""h"""		8332400	0					
ANR	8332545	ExpressionStatement	"status_put_floating ( s , plfont -> params . height_4ths / 4.0 )"	189:8:5824:5880	8332400	2	True				
ANR	8332546	CallExpression	"status_put_floating ( s , plfont -> params . height_4ths / 4.0 )"		8332400	0					
ANR	8332547	Callee	status_put_floating		8332400	0					
ANR	8332548	Identifier	status_put_floating		8332400	0					
ANR	8332549	ArgumentList	s		8332400	1					
ANR	8332550	Argument	s		8332400	0					
ANR	8332551	Identifier	s		8332400	0					
ANR	8332552	Argument	plfont -> params . height_4ths / 4.0		8332400	1					
ANR	8332553	MultiplicativeExpression	plfont -> params . height_4ths / 4.0		8332400	0		/			
ANR	8332554	MemberAccess	plfont -> params . height_4ths		8332400	0					
ANR	8332555	PtrMemberAccess	plfont -> params		8332400	0					
ANR	8332556	Identifier	plfont		8332400	0					
ANR	8332557	Identifier	params		8332400	1					
ANR	8332558	Identifier	height_4ths		8332400	1					
ANR	8332559	PrimaryExpression	4.0		8332400	1					
ANR	8332560	ExpressionStatement	"stputs ( s , ""v"" )"	190:8:5890:5904	8332400	3	True				
ANR	8332561	CallExpression	"stputs ( s , ""v"" )"		8332400	0					
ANR	8332562	Callee	stputs		8332400	0					
ANR	8332563	Identifier	stputs		8332400	0					
ANR	8332564	ArgumentList	s		8332400	1					
ANR	8332565	Argument	s		8332400	0					
ANR	8332566	Identifier	s		8332400	0					
ANR	8332567	Argument	"""v"""		8332400	1					
ANR	8332568	PrimaryExpression	"""v"""		8332400	0					
ANR	8332569	ElseStatement	else		8332400	0					
ANR	8332570	CompoundStatement		23:11:930:930	8332400	0					
ANR	8332571	IfStatement	if ( font_set > 0 )		8332400	0					
ANR	8332572	Condition	font_set > 0	193:12:5995:6006	8332400	0	True				
ANR	8332573	RelationalExpression	font_set > 0		8332400	0		>			
ANR	8332574	Identifier	font_set		8332400	0					
ANR	8332575	PrimaryExpression	0		8332400	1					
ANR	8332576	CompoundStatement		25:26:1022:1022	8332400	1					
ANR	8332577	IfStatement	if ( proportional )		8332400	0					
ANR	8332578	Condition	proportional	196:16:6160:6171	8332400	0	True				
ANR	8332579	Identifier	proportional		8332400	0					
ANR	8332580	CompoundStatement		28:30:1187:1187	8332400	1					
ANR	8332581	ExpressionStatement	"status_put_floating ( s , pcs -> font_selection [ font_set ] . params . height_4ths / 4.0 )"	197:16:6192:6343	8332400	0	True				
ANR	8332582	CallExpression	"status_put_floating ( s , pcs -> font_selection [ font_set ] . params . height_4ths / 4.0 )"		8332400	0					
ANR	8332583	Callee	status_put_floating		8332400	0					
ANR	8332584	Identifier	status_put_floating		8332400	0					
ANR	8332585	ArgumentList	s		8332400	1					
ANR	8332586	Argument	s		8332400	0					
ANR	8332587	Identifier	s		8332400	0					
ANR	8332588	Argument	pcs -> font_selection [ font_set ] . params . height_4ths / 4.0		8332400	1					
ANR	8332589	MultiplicativeExpression	pcs -> font_selection [ font_set ] . params . height_4ths / 4.0		8332400	0		/			
ANR	8332590	MemberAccess	pcs -> font_selection [ font_set ] . params . height_4ths		8332400	0					
ANR	8332591	MemberAccess	pcs -> font_selection [ font_set ] . params		8332400	0					
ANR	8332592	ArrayIndexing	pcs -> font_selection [ font_set ]		8332400	0					
ANR	8332593	PtrMemberAccess	pcs -> font_selection		8332400	0					
ANR	8332594	Identifier	pcs		8332400	0					
ANR	8332595	Identifier	font_selection		8332400	1					
ANR	8332596	Identifier	font_set		8332400	1					
ANR	8332597	Identifier	params		8332400	1					
ANR	8332598	Identifier	height_4ths		8332400	1					
ANR	8332599	PrimaryExpression	4.0		8332400	1					
ANR	8332600	ExpressionStatement	"stputs ( s , ""h"" )"	200:16:6361:6375	8332400	1	True				
ANR	8332601	CallExpression	"stputs ( s , ""h"" )"		8332400	0					
ANR	8332602	Callee	stputs		8332400	0					
ANR	8332603	Identifier	stputs		8332400	0					
ANR	8332604	ArgumentList	s		8332400	1					
ANR	8332605	Argument	s		8332400	0					
ANR	8332606	Identifier	s		8332400	0					
ANR	8332607	Argument	"""h"""		8332400	1					
ANR	8332608	PrimaryExpression	"""h"""		8332400	0					
ANR	8332609	ElseStatement	else		8332400	0					
ANR	8332610	CompoundStatement		33:19:1409:1409	8332400	0					
ANR	8332611	ExpressionStatement	"status_put_floating ( s , pl_fp_pitch_per_inch ( & pcs -> font_selection [ font_set ] . params ) )"	202:16:6414:6649	8332400	0	True				
ANR	8332612	CallExpression	"status_put_floating ( s , pl_fp_pitch_per_inch ( & pcs -> font_selection [ font_set ] . params ) )"		8332400	0					
ANR	8332613	Callee	status_put_floating		8332400	0					
ANR	8332614	Identifier	status_put_floating		8332400	0					
ANR	8332615	ArgumentList	s		8332400	1					
ANR	8332616	Argument	s		8332400	0					
ANR	8332617	Identifier	s		8332400	0					
ANR	8332618	Argument	pl_fp_pitch_per_inch ( & pcs -> font_selection [ font_set ] . params )		8332400	1					
ANR	8332619	CallExpression	pl_fp_pitch_per_inch ( & pcs -> font_selection [ font_set ] . params )		8332400	0					
ANR	8332620	Callee	pl_fp_pitch_per_inch		8332400	0					
ANR	8332621	Identifier	pl_fp_pitch_per_inch		8332400	0					
ANR	8332622	ArgumentList	& pcs -> font_selection [ font_set ] . params		8332400	1					
ANR	8332623	Argument	& pcs -> font_selection [ font_set ] . params		8332400	0					
ANR	8332624	UnaryOperationExpression	& pcs -> font_selection [ font_set ] . params		8332400	0					
ANR	8332625	UnaryOperator	&		8332400	0					
ANR	8332626	MemberAccess	pcs -> font_selection [ font_set ] . params		8332400	1					
ANR	8332627	ArrayIndexing	pcs -> font_selection [ font_set ]		8332400	0					
ANR	8332628	PtrMemberAccess	pcs -> font_selection		8332400	0					
ANR	8332629	Identifier	pcs		8332400	0					
ANR	8332630	Identifier	font_selection		8332400	1					
ANR	8332631	Identifier	font_set		8332400	1					
ANR	8332632	Identifier	params		8332400	1					
ANR	8332633	ExpressionStatement	"stputs ( s , ""v"" )"	206:16:6667:6681	8332400	1	True				
ANR	8332634	CallExpression	"stputs ( s , ""v"" )"		8332400	0					
ANR	8332635	Callee	stputs		8332400	0					
ANR	8332636	Identifier	stputs		8332400	0					
ANR	8332637	ArgumentList	s		8332400	1					
ANR	8332638	Argument	s		8332400	0					
ANR	8332639	Identifier	s		8332400	0					
ANR	8332640	Argument	"""v"""		8332400	1					
ANR	8332641	PrimaryExpression	"""v"""		8332400	0					
ANR	8332642	ElseStatement	else		8332400	0					
ANR	8332643	CompoundStatement		40:15:1725:1725	8332400	0					
ANR	8332644	ExpressionStatement	"stputs ( s , proportional ? ""__v"" : ""__h"" )"	209:12:6726:6765	8332400	0	True				
ANR	8332645	CallExpression	"stputs ( s , proportional ? ""__v"" : ""__h"" )"		8332400	0					
ANR	8332646	Callee	stputs		8332400	0					
ANR	8332647	Identifier	stputs		8332400	0					
ANR	8332648	ArgumentList	s		8332400	1					
ANR	8332649	Argument	s		8332400	0					
ANR	8332650	Identifier	s		8332400	0					
ANR	8332651	Argument	"proportional ? ""__v"" : ""__h"""		8332400	1					
ANR	8332652	ConditionalExpression	"proportional ? ""__v"" : ""__h"""		8332400	0					
ANR	8332653	Condition	proportional		8332400	0					
ANR	8332654	Identifier	proportional		8332400	0					
ANR	8332655	PrimaryExpression	"""__v"""		8332400	1					
ANR	8332656	PrimaryExpression	"""__h"""		8332400	2					
ANR	8332657	ExpressionStatement	"stprintf ( s , ""%ds%db%uT"" , plfont -> params . style , plfont -> params . stroke_weight , plfont -> params . typeface_family )"	212:4:6787:6908	8332400	6	True				
ANR	8332658	CallExpression	"stprintf ( s , ""%ds%db%uT"" , plfont -> params . style , plfont -> params . stroke_weight , plfont -> params . typeface_family )"		8332400	0					
ANR	8332659	Callee	stprintf		8332400	0					
ANR	8332660	Identifier	stprintf		8332400	0					
ANR	8332661	ArgumentList	s		8332400	1					
ANR	8332662	Argument	s		8332400	0					
ANR	8332663	Identifier	s		8332400	0					
ANR	8332664	Argument	"""%ds%db%uT"""		8332400	1					
ANR	8332665	PrimaryExpression	"""%ds%db%uT"""		8332400	0					
ANR	8332666	Argument	plfont -> params . style		8332400	2					
ANR	8332667	MemberAccess	plfont -> params . style		8332400	0					
ANR	8332668	PtrMemberAccess	plfont -> params		8332400	0					
ANR	8332669	Identifier	plfont		8332400	0					
ANR	8332670	Identifier	params		8332400	1					
ANR	8332671	Identifier	style		8332400	1					
ANR	8332672	Argument	plfont -> params . stroke_weight		8332400	3					
ANR	8332673	MemberAccess	plfont -> params . stroke_weight		8332400	0					
ANR	8332674	PtrMemberAccess	plfont -> params		8332400	0					
ANR	8332675	Identifier	plfont		8332400	0					
ANR	8332676	Identifier	params		8332400	1					
ANR	8332677	Identifier	stroke_weight		8332400	1					
ANR	8332678	Argument	plfont -> params . typeface_family		8332400	4					
ANR	8332679	MemberAccess	plfont -> params . typeface_family		8332400	0					
ANR	8332680	PtrMemberAccess	plfont -> params		8332400	0					
ANR	8332681	Identifier	plfont		8332400	0					
ANR	8332682	Identifier	params		8332400	1					
ANR	8332683	Identifier	typeface_family		8332400	1					
ANR	8332684	IfStatement	if ( plfont -> storage & pcds_downloaded )		8332400	7					
ANR	8332685	Condition	plfont -> storage & pcds_downloaded	214:8:6918:6950	8332400	0	True				
ANR	8332686	BitAndExpression	plfont -> storage & pcds_downloaded		8332400	0		&			
ANR	8332687	PtrMemberAccess	plfont -> storage		8332400	0					
ANR	8332688	Identifier	plfont		8332400	0					
ANR	8332689	Identifier	storage		8332400	1					
ANR	8332690	Identifier	pcds_downloaded		8332400	1					
ANR	8332691	ExpressionStatement	"stprintf ( s , ""<Esc>%c%uX"" , paren , font_id )"	215:8:6961:7002	8332400	1	True				
ANR	8332692	CallExpression	"stprintf ( s , ""<Esc>%c%uX"" , paren , font_id )"		8332400	0					
ANR	8332693	Callee	stprintf		8332400	0					
ANR	8332694	Identifier	stprintf		8332400	0					
ANR	8332695	ArgumentList	s		8332400	1					
ANR	8332696	Argument	s		8332400	0					
ANR	8332697	Identifier	s		8332400	0					
ANR	8332698	Argument	"""<Esc>%c%uX"""		8332400	1					
ANR	8332699	PrimaryExpression	"""<Esc>%c%uX"""		8332400	0					
ANR	8332700	Argument	paren		8332400	2					
ANR	8332701	Identifier	paren		8332400	0					
ANR	8332702	Argument	font_id		8332400	3					
ANR	8332703	Identifier	font_id		8332400	0					
ANR	8332704	ExpressionStatement	"stputs ( s , ""\\""\\r\\n"" )"	216:4:7008:7027	8332400	8	True				
ANR	8332705	CallExpression	"stputs ( s , ""\\""\\r\\n"" )"		8332400	0					
ANR	8332706	Callee	stputs		8332400	0					
ANR	8332707	Identifier	stputs		8332400	0					
ANR	8332708	ArgumentList	s		8332400	1					
ANR	8332709	Argument	s		8332400	0					
ANR	8332710	Identifier	s		8332400	0					
ANR	8332711	Argument	"""\\""\\r\\n"""		8332400	1					
ANR	8332712	PrimaryExpression	"""\\""\\r\\n"""		8332400	0					
ANR	8332713	IfStatement	if ( ! pl_font_is_bound ( plfont ) && font_set < 0 )		8332400	9					
ANR	8332714	Condition	! pl_font_is_bound ( plfont ) && font_set < 0	217:8:7037:7077	8332400	0	True				
ANR	8332715	AndExpression	! pl_font_is_bound ( plfont ) && font_set < 0		8332400	0		&&			
ANR	8332716	UnaryOperationExpression	! pl_font_is_bound ( plfont )		8332400	0					
ANR	8332717	UnaryOperator	!		8332400	0					
ANR	8332718	CallExpression	pl_font_is_bound ( plfont )		8332400	1					
ANR	8332719	Callee	pl_font_is_bound		8332400	0					
ANR	8332720	Identifier	pl_font_is_bound		8332400	0					
ANR	8332721	ArgumentList	plfont		8332400	1					
ANR	8332722	Argument	plfont		8332400	0					
ANR	8332723	Identifier	plfont		8332400	0					
ANR	8332724	RelationalExpression	font_set < 0		8332400	1		<			
ANR	8332725	Identifier	font_set		8332400	0					
ANR	8332726	PrimaryExpression	0		8332400	1					
ANR	8332727	CompoundStatement		54:8:2203:2214	8332400	1					
ANR	8332728	IdentifierDeclStatement	int nid ;	218:8:7090:7097	8332400	0	True				
ANR	8332729	IdentifierDecl	nid		8332400	0					
ANR	8332730	IdentifierDeclType	int		8332400	0					
ANR	8332731	Identifier	nid		8332400	1					
ANR	8332732	IdentifierDeclStatement	ushort * idlist ;	219:8:7107:7121	8332400	1	True				
ANR	8332733	IdentifierDecl	* idlist		8332400	0					
ANR	8332734	IdentifierDeclType	ushort *		8332400	0					
ANR	8332735	Identifier	idlist		8332400	1					
ANR	8332736	IdentifierDeclStatement	pl_dict_enum_t denum ;	220:8:7131:7151	8332400	2	True				
ANR	8332737	IdentifierDecl	denum		8332400	0					
ANR	8332738	IdentifierDeclType	pl_dict_enum_t		8332400	0					
ANR	8332739	Identifier	denum		8332400	1					
ANR	8332740	IdentifierDeclStatement	gs_const_string key ;	221:8:7161:7180	8332400	3	True				
ANR	8332741	IdentifierDecl	key		8332400	0					
ANR	8332742	IdentifierDeclType	gs_const_string		8332400	0					
ANR	8332743	Identifier	key		8332400	1					
ANR	8332744	IdentifierDeclStatement	void * value ;	222:8:7190:7201	8332400	4	True				
ANR	8332745	IdentifierDecl	* value		8332400	0					
ANR	8332746	IdentifierDeclType	void *		8332400	0					
ANR	8332747	Identifier	value		8332400	1					
ANR	8332748	ExpressionStatement	"idlist = ( ushort * ) gs_alloc_bytes ( pcs -> memory , pl_dict_length ( & pcs -> soft_symbol_sets , false ) + pl_dict_length ( & pcs -> built_in_symbol_sets , false ) , ""status_fonts(idlist)"" )"	224:8:7212:7745	8332400	5	True				
ANR	8332749	AssignmentExpression	"idlist = ( ushort * ) gs_alloc_bytes ( pcs -> memory , pl_dict_length ( & pcs -> soft_symbol_sets , false ) + pl_dict_length ( & pcs -> built_in_symbol_sets , false ) , ""status_fonts(idlist)"" )"		8332400	0		=			
ANR	8332750	Identifier	idlist		8332400	0					
ANR	8332751	CastExpression	"( ushort * ) gs_alloc_bytes ( pcs -> memory , pl_dict_length ( & pcs -> soft_symbol_sets , false ) + pl_dict_length ( & pcs -> built_in_symbol_sets , false ) , ""status_fonts(idlist)"" )"		8332400	1					
ANR	8332752	CastTarget	ushort *		8332400	0					
ANR	8332753	CallExpression	"gs_alloc_bytes ( pcs -> memory , pl_dict_length ( & pcs -> soft_symbol_sets , false ) + pl_dict_length ( & pcs -> built_in_symbol_sets , false ) , ""status_fonts(idlist)"" )"		8332400	1					
ANR	8332754	Callee	gs_alloc_bytes		8332400	0					
ANR	8332755	Identifier	gs_alloc_bytes		8332400	0					
ANR	8332756	ArgumentList	pcs -> memory		8332400	1					
ANR	8332757	Argument	pcs -> memory		8332400	0					
ANR	8332758	PtrMemberAccess	pcs -> memory		8332400	0					
ANR	8332759	Identifier	pcs		8332400	0					
ANR	8332760	Identifier	memory		8332400	1					
ANR	8332761	Argument	"pl_dict_length ( & pcs -> soft_symbol_sets , false ) + pl_dict_length ( & pcs -> built_in_symbol_sets , false )"		8332400	1					
ANR	8332762	AdditiveExpression	"pl_dict_length ( & pcs -> soft_symbol_sets , false ) + pl_dict_length ( & pcs -> built_in_symbol_sets , false )"		8332400	0		+			
ANR	8332763	CallExpression	"pl_dict_length ( & pcs -> soft_symbol_sets , false )"		8332400	0					
ANR	8332764	Callee	pl_dict_length		8332400	0					
ANR	8332765	Identifier	pl_dict_length		8332400	0					
ANR	8332766	ArgumentList	& pcs -> soft_symbol_sets		8332400	1					
ANR	8332767	Argument	& pcs -> soft_symbol_sets		8332400	0					
ANR	8332768	UnaryOperationExpression	& pcs -> soft_symbol_sets		8332400	0					
ANR	8332769	UnaryOperator	&		8332400	0					
ANR	8332770	PtrMemberAccess	pcs -> soft_symbol_sets		8332400	1					
ANR	8332771	Identifier	pcs		8332400	0					
ANR	8332772	Identifier	soft_symbol_sets		8332400	1					
ANR	8332773	Argument	false		8332400	1					
ANR	8332774	Identifier	false		8332400	0					
ANR	8332775	CallExpression	"pl_dict_length ( & pcs -> built_in_symbol_sets , false )"		8332400	1					
ANR	8332776	Callee	pl_dict_length		8332400	0					
ANR	8332777	Identifier	pl_dict_length		8332400	0					
ANR	8332778	ArgumentList	& pcs -> built_in_symbol_sets		8332400	1					
ANR	8332779	Argument	& pcs -> built_in_symbol_sets		8332400	0					
ANR	8332780	UnaryOperationExpression	& pcs -> built_in_symbol_sets		8332400	0					
ANR	8332781	UnaryOperator	&		8332400	0					
ANR	8332782	PtrMemberAccess	pcs -> built_in_symbol_sets		8332400	1					
ANR	8332783	Identifier	pcs		8332400	0					
ANR	8332784	Identifier	built_in_symbol_sets		8332400	1					
ANR	8332785	Argument	false		8332400	1					
ANR	8332786	Identifier	false		8332400	0					
ANR	8332787	Argument	"""status_fonts(idlist)"""		8332400	2					
ANR	8332788	PrimaryExpression	"""status_fonts(idlist)"""		8332400	0					
ANR	8332789	IfStatement	if ( idlist == NULL )		8332400	6					
ANR	8332790	Condition	idlist == NULL	232:12:7759:7772	8332400	0	True				
ANR	8332791	EqualityExpression	idlist == NULL		8332400	0		==			
ANR	8332792	Identifier	idlist		8332400	0					
ANR	8332793	Identifier	NULL		8332400	1					
ANR	8332794	ReturnStatement	return e_Memory ;	233:12:7787:7802	8332400	1	True				
ANR	8332795	Identifier	e_Memory		8332400	0					
ANR	8332796	ExpressionStatement	nid = 0	234:8:7812:7819	8332400	7	True				
ANR	8332797	AssignmentExpression	nid = 0		8332400	0		=			
ANR	8332798	Identifier	nid		8332400	0					
ANR	8332799	PrimaryExpression	0		8332400	1					
ANR	8332800	ExpressionStatement	"pl_dict_set_parent ( & pcs -> soft_symbol_sets , & pcs -> built_in_symbol_sets )"	239:8:8027:8124	8332400	8	True				
ANR	8332801	CallExpression	"pl_dict_set_parent ( & pcs -> soft_symbol_sets , & pcs -> built_in_symbol_sets )"		8332400	0					
ANR	8332802	Callee	pl_dict_set_parent		8332400	0					
ANR	8332803	Identifier	pl_dict_set_parent		8332400	0					
ANR	8332804	ArgumentList	& pcs -> soft_symbol_sets		8332400	1					
ANR	8332805	Argument	& pcs -> soft_symbol_sets		8332400	0					
ANR	8332806	UnaryOperationExpression	& pcs -> soft_symbol_sets		8332400	0					
ANR	8332807	UnaryOperator	&		8332400	0					
ANR	8332808	PtrMemberAccess	pcs -> soft_symbol_sets		8332400	1					
ANR	8332809	Identifier	pcs		8332400	0					
ANR	8332810	Identifier	soft_symbol_sets		8332400	1					
ANR	8332811	Argument	& pcs -> built_in_symbol_sets		8332400	1					
ANR	8332812	UnaryOperationExpression	& pcs -> built_in_symbol_sets		8332400	0					
ANR	8332813	UnaryOperator	&		8332400	0					
ANR	8332814	PtrMemberAccess	pcs -> built_in_symbol_sets		8332400	1					
ANR	8332815	Identifier	pcs		8332400	0					
ANR	8332816	Identifier	built_in_symbol_sets		8332400	1					
ANR	8332817	ExpressionStatement	"pl_dict_enum_begin ( & pcs -> soft_symbol_sets , & denum )"	241:8:8134:8184	8332400	9	True				
ANR	8332818	CallExpression	"pl_dict_enum_begin ( & pcs -> soft_symbol_sets , & denum )"		8332400	0					
ANR	8332819	Callee	pl_dict_enum_begin		8332400	0					
ANR	8332820	Identifier	pl_dict_enum_begin		8332400	0					
ANR	8332821	ArgumentList	& pcs -> soft_symbol_sets		8332400	1					
ANR	8332822	Argument	& pcs -> soft_symbol_sets		8332400	0					
ANR	8332823	UnaryOperationExpression	& pcs -> soft_symbol_sets		8332400	0					
ANR	8332824	UnaryOperator	&		8332400	0					
ANR	8332825	PtrMemberAccess	pcs -> soft_symbol_sets		8332400	1					
ANR	8332826	Identifier	pcs		8332400	0					
ANR	8332827	Identifier	soft_symbol_sets		8332400	1					
ANR	8332828	Argument	& denum		8332400	1					
ANR	8332829	UnaryOperationExpression	& denum		8332400	0					
ANR	8332830	UnaryOperator	&		8332400	0					
ANR	8332831	Identifier	denum		8332400	1					
ANR	8332832	WhileStatement	"while ( pl_dict_enum_next ( & denum , & key , & value ) )"		8332400	10					
ANR	8332833	Condition	"pl_dict_enum_next ( & denum , & key , & value )"	242:15:8201:8239	8332400	0	True				
ANR	8332834	CallExpression	"pl_dict_enum_next ( & denum , & key , & value )"		8332400	0					
ANR	8332835	Callee	pl_dict_enum_next		8332400	0					
ANR	8332836	Identifier	pl_dict_enum_next		8332400	0					
ANR	8332837	ArgumentList	& denum		8332400	1					
ANR	8332838	Argument	& denum		8332400	0					
ANR	8332839	UnaryOperationExpression	& denum		8332400	0					
ANR	8332840	UnaryOperator	&		8332400	0					
ANR	8332841	Identifier	denum		8332400	1					
ANR	8332842	Argument	& key		8332400	1					
ANR	8332843	UnaryOperationExpression	& key		8332400	0					
ANR	8332844	UnaryOperator	&		8332400	0					
ANR	8332845	Identifier	key		8332400	1					
ANR	8332846	Argument	& value		8332400	2					
ANR	8332847	UnaryOperationExpression	& value		8332400	0					
ANR	8332848	UnaryOperator	&		8332400	0					
ANR	8332849	Identifier	value		8332400	1					
ANR	8332850	CompoundStatement		76:12:3333:3357	8332400	1					
ANR	8332851	IdentifierDeclStatement	pcl_symbol_set_t * ssp = ( pcl_symbol_set_t * ) value ;	243:12:8256:8306	8332400	0	True				
ANR	8332852	IdentifierDecl	* ssp = ( pcl_symbol_set_t * ) value		8332400	0					
ANR	8332853	IdentifierDeclType	pcl_symbol_set_t *		8332400	0					
ANR	8332854	Identifier	ssp		8332400	1					
ANR	8332855	AssignmentExpression	* ssp = ( pcl_symbol_set_t * ) value		8332400	2		=			
ANR	8332856	Identifier	ssp		8332400	0					
ANR	8332857	CastExpression	( pcl_symbol_set_t * ) value		8332400	1					
ANR	8332858	CastTarget	pcl_symbol_set_t *		8332400	0					
ANR	8332859	Identifier	value		8332400	1					
ANR	8332860	IdentifierDeclStatement	pl_glyph_vocabulary_t gx ;	244:12:8320:8344	8332400	1	True				
ANR	8332861	IdentifierDecl	gx		8332400	0					
ANR	8332862	IdentifierDeclType	pl_glyph_vocabulary_t		8332400	0					
ANR	8332863	Identifier	gx		8332400	1					
ANR	8332864	ForStatement	for ( gx = plgv_MSL ; gx < plgv_next ; gx ++ )		8332400	2					
ANR	8332865	ForInit	gx = plgv_MSL ;	246:17:8364:8377	8332400	0	True				
ANR	8332866	AssignmentExpression	gx = plgv_MSL		8332400	0		=			
ANR	8332867	Identifier	gx		8332400	0					
ANR	8332868	Identifier	plgv_MSL		8332400	1					
ANR	8332869	Condition	gx < plgv_next	246:32:8379:8392	8332400	1	True				
ANR	8332870	RelationalExpression	gx < plgv_next		8332400	0		<			
ANR	8332871	Identifier	gx		8332400	0					
ANR	8332872	Identifier	plgv_next		8332400	1					
ANR	8332873	PostIncDecOperationExpression	gx ++	246:48:8395:8398	8332400	2	True				
ANR	8332874	Identifier	gx		8332400	0					
ANR	8332875	IncDec	++		8332400	1					
ANR	8332876	IfStatement	"if ( ssp -> maps [ gx ] != NULL && pcl_check_symbol_support ( ssp -> maps [ gx ] -> character_requirements , plfont -> character_complement ) )"		8332400	3					
ANR	8332877	Condition	"ssp -> maps [ gx ] != NULL && pcl_check_symbol_support ( ssp -> maps [ gx ] -> character_requirements , plfont -> character_complement )"	247:20:8421:8649	8332400	0	True				
ANR	8332878	AndExpression	"ssp -> maps [ gx ] != NULL && pcl_check_symbol_support ( ssp -> maps [ gx ] -> character_requirements , plfont -> character_complement )"		8332400	0		&&			
ANR	8332879	EqualityExpression	ssp -> maps [ gx ] != NULL		8332400	0		!=			
ANR	8332880	ArrayIndexing	ssp -> maps [ gx ]		8332400	0					
ANR	8332881	PtrMemberAccess	ssp -> maps		8332400	0					
ANR	8332882	Identifier	ssp		8332400	0					
ANR	8332883	Identifier	maps		8332400	1					
ANR	8332884	Identifier	gx		8332400	1					
ANR	8332885	Identifier	NULL		8332400	1					
ANR	8332886	CallExpression	"pcl_check_symbol_support ( ssp -> maps [ gx ] -> character_requirements , plfont -> character_complement )"		8332400	1					
ANR	8332887	Callee	pcl_check_symbol_support		8332400	0					
ANR	8332888	Identifier	pcl_check_symbol_support		8332400	0					
ANR	8332889	ArgumentList	ssp -> maps [ gx ] -> character_requirements		8332400	1					
ANR	8332890	Argument	ssp -> maps [ gx ] -> character_requirements		8332400	0					
ANR	8332891	PtrMemberAccess	ssp -> maps [ gx ] -> character_requirements		8332400	0					
ANR	8332892	ArrayIndexing	ssp -> maps [ gx ]		8332400	0					
ANR	8332893	PtrMemberAccess	ssp -> maps		8332400	0					
ANR	8332894	Identifier	ssp		8332400	0					
ANR	8332895	Identifier	maps		8332400	1					
ANR	8332896	Identifier	gx		8332400	1					
ANR	8332897	Identifier	character_requirements		8332400	1					
ANR	8332898	Argument	plfont -> character_complement		8332400	1					
ANR	8332899	PtrMemberAccess	plfont -> character_complement		8332400	0					
ANR	8332900	Identifier	plfont		8332400	0					
ANR	8332901	Identifier	character_complement		8332400	1					
ANR	8332902	CompoundStatement		82:76:3665:3665	8332400	1					
ANR	8332903	ExpressionStatement	"nid = status_add_symbol_id ( idlist , nid , ( ssp -> maps [ gx ] -> id [ 0 ] << 8 ) + ssp -> maps [ gx ] -> id [ 1 ] )"	251:20:8674:8879	8332400	0	True				
ANR	8332904	AssignmentExpression	"nid = status_add_symbol_id ( idlist , nid , ( ssp -> maps [ gx ] -> id [ 0 ] << 8 ) + ssp -> maps [ gx ] -> id [ 1 ] )"		8332400	0		=			
ANR	8332905	Identifier	nid		8332400	0					
ANR	8332906	CallExpression	"status_add_symbol_id ( idlist , nid , ( ssp -> maps [ gx ] -> id [ 0 ] << 8 ) + ssp -> maps [ gx ] -> id [ 1 ] )"		8332400	1					
ANR	8332907	Callee	status_add_symbol_id		8332400	0					
ANR	8332908	Identifier	status_add_symbol_id		8332400	0					
ANR	8332909	ArgumentList	idlist		8332400	1					
ANR	8332910	Argument	idlist		8332400	0					
ANR	8332911	Identifier	idlist		8332400	0					
ANR	8332912	Argument	nid		8332400	1					
ANR	8332913	Identifier	nid		8332400	0					
ANR	8332914	Argument	( ssp -> maps [ gx ] -> id [ 0 ] << 8 ) + ssp -> maps [ gx ] -> id [ 1 ]		8332400	2					
ANR	8332915	AdditiveExpression	( ssp -> maps [ gx ] -> id [ 0 ] << 8 ) + ssp -> maps [ gx ] -> id [ 1 ]		8332400	0		+			
ANR	8332916	ShiftExpression	ssp -> maps [ gx ] -> id [ 0 ] << 8		8332400	0		<<			
ANR	8332917	ArrayIndexing	ssp -> maps [ gx ] -> id [ 0 ]		8332400	0					
ANR	8332918	PtrMemberAccess	ssp -> maps [ gx ] -> id		8332400	0					
ANR	8332919	ArrayIndexing	ssp -> maps [ gx ]		8332400	0					
ANR	8332920	PtrMemberAccess	ssp -> maps		8332400	0					
ANR	8332921	Identifier	ssp		8332400	0					
ANR	8332922	Identifier	maps		8332400	1					
ANR	8332923	Identifier	gx		8332400	1					
ANR	8332924	Identifier	id		8332400	1					
ANR	8332925	PrimaryExpression	0		8332400	1					
ANR	8332926	PrimaryExpression	8		8332400	1					
ANR	8332927	ArrayIndexing	ssp -> maps [ gx ] -> id [ 1 ]		8332400	1					
ANR	8332928	PtrMemberAccess	ssp -> maps [ gx ] -> id		8332400	0					
ANR	8332929	ArrayIndexing	ssp -> maps [ gx ]		8332400	0					
ANR	8332930	PtrMemberAccess	ssp -> maps		8332400	0					
ANR	8332931	Identifier	ssp		8332400	0					
ANR	8332932	Identifier	maps		8332400	1					
ANR	8332933	Identifier	gx		8332400	1					
ANR	8332934	Identifier	id		8332400	1					
ANR	8332935	PrimaryExpression	1		8332400	1					
ANR	8332936	BreakStatement	break ;	255:20:8901:8906	8332400	1	True				
ANR	8332937	ExpressionStatement	"pl_dict_set_parent ( & pcs -> soft_symbol_sets , NULL )"	258:8:8972:9020	8332400	11	True				
ANR	8332938	CallExpression	"pl_dict_set_parent ( & pcs -> soft_symbol_sets , NULL )"		8332400	0					
ANR	8332939	Callee	pl_dict_set_parent		8332400	0					
ANR	8332940	Identifier	pl_dict_set_parent		8332400	0					
ANR	8332941	ArgumentList	& pcs -> soft_symbol_sets		8332400	1					
ANR	8332942	Argument	& pcs -> soft_symbol_sets		8332400	0					
ANR	8332943	UnaryOperationExpression	& pcs -> soft_symbol_sets		8332400	0					
ANR	8332944	UnaryOperator	&		8332400	0					
ANR	8332945	PtrMemberAccess	pcs -> soft_symbol_sets		8332400	1					
ANR	8332946	Identifier	pcs		8332400	0					
ANR	8332947	Identifier	soft_symbol_sets		8332400	1					
ANR	8332948	Argument	NULL		8332400	1					
ANR	8332949	Identifier	NULL		8332400	0					
ANR	8332950	ExpressionStatement	"gs_free_object ( pcs -> memory , ( void * ) idlist , ""status_fonts(idlist)"" )"	261:8:9077:9144	8332400	12	True				
ANR	8332951	CallExpression	"gs_free_object ( pcs -> memory , ( void * ) idlist , ""status_fonts(idlist)"" )"		8332400	0					
ANR	8332952	Callee	gs_free_object		8332400	0					
ANR	8332953	Identifier	gs_free_object		8332400	0					
ANR	8332954	ArgumentList	pcs -> memory		8332400	1					
ANR	8332955	Argument	pcs -> memory		8332400	0					
ANR	8332956	PtrMemberAccess	pcs -> memory		8332400	0					
ANR	8332957	Identifier	pcs		8332400	0					
ANR	8332958	Identifier	memory		8332400	1					
ANR	8332959	Argument	( void * ) idlist		8332400	1					
ANR	8332960	CastExpression	( void * ) idlist		8332400	0					
ANR	8332961	CastTarget	void *		8332400	0					
ANR	8332962	Identifier	idlist		8332400	1					
ANR	8332963	Argument	"""status_fonts(idlist)"""		8332400	2					
ANR	8332964	PrimaryExpression	"""status_fonts(idlist)"""		8332400	0					
ANR	8332965	IfStatement	if ( extended )		8332400	10					
ANR	8332966	Condition	extended	263:8:9160:9167	8332400	0	True				
ANR	8332967	Identifier	extended		8332400	0					
ANR	8332968	CompoundStatement		95:18:4183:4183	8332400	1					
ANR	8332969	IfStatement	if ( plfont -> storage & pcds_temporary )		8332400	0					
ANR	8332970	Condition	plfont -> storage & pcds_temporary	264:12:9236:9267	8332400	0	True				
ANR	8332971	BitAndExpression	plfont -> storage & pcds_temporary		8332400	0		&			
ANR	8332972	PtrMemberAccess	plfont -> storage		8332400	0					
ANR	8332973	Identifier	plfont		8332400	0					
ANR	8332974	Identifier	storage		8332400	1					
ANR	8332975	Identifier	pcds_temporary		8332400	1					
ANR	8332976	ExpressionStatement	"stputs ( s , ""DEFID=NONE\\r\\n"" )"	265:12:9282:9309	8332400	1	True				
ANR	8332977	CallExpression	"stputs ( s , ""DEFID=NONE\\r\\n"" )"		8332400	0					
ANR	8332978	Callee	stputs		8332400	0					
ANR	8332979	Identifier	stputs		8332400	0					
ANR	8332980	ArgumentList	s		8332400	1					
ANR	8332981	Argument	s		8332400	0					
ANR	8332982	Identifier	s		8332400	0					
ANR	8332983	Argument	"""DEFID=NONE\\r\\n"""		8332400	1					
ANR	8332984	PrimaryExpression	"""DEFID=NONE\\r\\n"""		8332400	0					
ANR	8332985	ElseStatement	else		8332400	0					
ANR	8332986	CompoundStatement		98:13:4337:4337	8332400	0					
ANR	8332987	ExpressionStatement	"stputs ( s , ""DEFID=\\"""" )"	267:12:9338:9359	8332400	0	True				
ANR	8332988	CallExpression	"stputs ( s , ""DEFID=\\"""" )"		8332400	0					
ANR	8332989	Callee	stputs		8332400	0					
ANR	8332990	Identifier	stputs		8332400	0					
ANR	8332991	ArgumentList	s		8332400	1					
ANR	8332992	Argument	s		8332400	0					
ANR	8332993	Identifier	s		8332400	0					
ANR	8332994	Argument	"""DEFID=\\"""""		8332400	1					
ANR	8332995	PrimaryExpression	"""DEFID=\\"""""		8332400	0					
ANR	8332996	IfStatement	if ( plfont -> storage & pcds_all_cartridges )		8332400	1					
ANR	8332997	Condition	plfont -> storage & pcds_all_cartridges	268:16:9377:9413	8332400	0	True				
ANR	8332998	BitAndExpression	plfont -> storage & pcds_all_cartridges		8332400	0		&			
ANR	8332999	PtrMemberAccess	plfont -> storage		8332400	0					
ANR	8333000	Identifier	plfont		8332400	0					
ANR	8333001	Identifier	storage		8332400	1					
ANR	8333002	Identifier	pcds_all_cartridges		8332400	1					
ANR	8333003	CompoundStatement		102:16:4470:4561	8332400	1					
ANR	8333004	IdentifierDeclStatement	int c ;	269:16:9434:9439	8332400	0	True				
ANR	8333005	IdentifierDecl	c		8332400	0					
ANR	8333006	IdentifierDeclType	int		8332400	0					
ANR	8333007	Identifier	c		8332400	1					
ANR	8333008	IdentifierDeclStatement	int n = ( plfont -> storage & pcds_all_cartridges ) >> pcds_cartridge_shift ;	270:16:9457:9548	8332400	1	True				
ANR	8333009	IdentifierDecl	n = ( plfont -> storage & pcds_all_cartridges ) >> pcds_cartridge_shift		8332400	0					
ANR	8333010	IdentifierDeclType	int		8332400	0					
ANR	8333011	Identifier	n		8332400	1					
ANR	8333012	AssignmentExpression	n = ( plfont -> storage & pcds_all_cartridges ) >> pcds_cartridge_shift		8332400	2		=			
ANR	8333013	Identifier	n		8332400	0					
ANR	8333014	ShiftExpression	( plfont -> storage & pcds_all_cartridges ) >> pcds_cartridge_shift		8332400	1		>>			
ANR	8333015	BitAndExpression	plfont -> storage & pcds_all_cartridges		8332400	0		&			
ANR	8333016	PtrMemberAccess	plfont -> storage		8332400	0					
ANR	8333017	Identifier	plfont		8332400	0					
ANR	8333018	Identifier	storage		8332400	1					
ANR	8333019	Identifier	pcds_all_cartridges		8332400	1					
ANR	8333020	Identifier	pcds_cartridge_shift		8332400	1					
ANR	8333021	ForStatement	for ( c = 0 ; ( n & 1 ) == 0 ; c ++ )		8332400	2					
ANR	8333022	ForInit	c = 0 ;	274:21:9634:9639	8332400	0	True				
ANR	8333023	AssignmentExpression	c = 0		8332400	0		=			
ANR	8333024	Identifier	c		8332400	0					
ANR	8333025	PrimaryExpression	0		8332400	1					
ANR	8333026	Condition	( n & 1 ) == 0	274:28:9641:9652	8332400	1	True				
ANR	8333027	EqualityExpression	( n & 1 ) == 0		8332400	0		==			
ANR	8333028	BitAndExpression	n & 1		8332400	0		&			
ANR	8333029	Identifier	n		8332400	0					
ANR	8333030	PrimaryExpression	1		8332400	1					
ANR	8333031	PrimaryExpression	0		8332400	1					
ANR	8333032	PostIncDecOperationExpression	c ++	274:42:9655:9657	8332400	2	True				
ANR	8333033	Identifier	c		8332400	0					
ANR	8333034	IncDec	++		8332400	1					
ANR	8333035	ExpressionStatement	n >>= 1	275:20:9680:9687	8332400	3	True				
ANR	8333036	AssignmentExpression	n >>= 1		8332400	0		>>=			
ANR	8333037	Identifier	n		8332400	0					
ANR	8333038	PrimaryExpression	1		8332400	1					
ANR	8333039	ExpressionStatement	"stprintf ( s , ""C%d "" , c )"	276:16:9705:9727	8332400	3	True				
ANR	8333040	CallExpression	"stprintf ( s , ""C%d "" , c )"		8332400	0					
ANR	8333041	Callee	stprintf		8332400	0					
ANR	8333042	Identifier	stprintf		8332400	0					
ANR	8333043	ArgumentList	s		8332400	1					
ANR	8333044	Argument	s		8332400	0					
ANR	8333045	Identifier	s		8332400	0					
ANR	8333046	Argument	"""C%d """		8332400	1					
ANR	8333047	PrimaryExpression	"""C%d """		8332400	0					
ANR	8333048	Argument	c		8332400	2					
ANR	8333049	Identifier	c		8332400	0					
ANR	8333050	ElseStatement	else		8332400	0					
ANR	8333051	IfStatement	if ( plfont -> storage & pcds_all_simms )		8332400	0					
ANR	8333052	Condition	plfont -> storage & pcds_all_simms	277:23:9752:9783	8332400	0	True				
ANR	8333053	BitAndExpression	plfont -> storage & pcds_all_simms		8332400	0		&			
ANR	8333054	PtrMemberAccess	plfont -> storage		8332400	0					
ANR	8333055	Identifier	plfont		8332400	0					
ANR	8333056	Identifier	storage		8332400	1					
ANR	8333057	Identifier	pcds_all_simms		8332400	1					
ANR	8333058	CompoundStatement		111:16:4840:4901	8332400	1					
ANR	8333059	IdentifierDeclStatement	int m ;	278:16:9804:9809	8332400	0	True				
ANR	8333060	IdentifierDecl	m		8332400	0					
ANR	8333061	IdentifierDeclType	int		8332400	0					
ANR	8333062	Identifier	m		8332400	1					
ANR	8333063	IdentifierDeclStatement	int n = ( plfont -> storage & pcds_all_simms ) >> pcds_simm_shift ;	279:16:9827:9888	8332400	1	True				
ANR	8333064	IdentifierDecl	n = ( plfont -> storage & pcds_all_simms ) >> pcds_simm_shift		8332400	0					
ANR	8333065	IdentifierDeclType	int		8332400	0					
ANR	8333066	Identifier	n		8332400	1					
ANR	8333067	AssignmentExpression	n = ( plfont -> storage & pcds_all_simms ) >> pcds_simm_shift		8332400	2		=			
ANR	8333068	Identifier	n		8332400	0					
ANR	8333069	ShiftExpression	( plfont -> storage & pcds_all_simms ) >> pcds_simm_shift		8332400	1		>>			
ANR	8333070	BitAndExpression	plfont -> storage & pcds_all_simms		8332400	0		&			
ANR	8333071	PtrMemberAccess	plfont -> storage		8332400	0					
ANR	8333072	Identifier	plfont		8332400	0					
ANR	8333073	Identifier	storage		8332400	1					
ANR	8333074	Identifier	pcds_all_simms		8332400	1					
ANR	8333075	Identifier	pcds_simm_shift		8332400	1					
ANR	8333076	ForStatement	for ( m = 0 ; ( n & 1 ) == 0 ; m ++ )		8332400	2					
ANR	8333077	ForInit	m = 0 ;	282:21:9969:9974	8332400	0	True				
ANR	8333078	AssignmentExpression	m = 0		8332400	0		=			
ANR	8333079	Identifier	m		8332400	0					
ANR	8333080	PrimaryExpression	0		8332400	1					
ANR	8333081	Condition	( n & 1 ) == 0	282:28:9976:9987	8332400	1	True				
ANR	8333082	EqualityExpression	( n & 1 ) == 0		8332400	0		==			
ANR	8333083	BitAndExpression	n & 1		8332400	0		&			
ANR	8333084	Identifier	n		8332400	0					
ANR	8333085	PrimaryExpression	1		8332400	1					
ANR	8333086	PrimaryExpression	0		8332400	1					
ANR	8333087	PostIncDecOperationExpression	m ++	282:42:9990:9992	8332400	2	True				
ANR	8333088	Identifier	m		8332400	0					
ANR	8333089	IncDec	++		8332400	1					
ANR	8333090	ExpressionStatement	n >>= 1	283:20:10015:10022	8332400	3	True				
ANR	8333091	AssignmentExpression	n >>= 1		8332400	0		>>=			
ANR	8333092	Identifier	n		8332400	0					
ANR	8333093	PrimaryExpression	1		8332400	1					
ANR	8333094	ExpressionStatement	"stprintf ( s , ""M%d "" , m )"	284:16:10040:10062	8332400	3	True				
ANR	8333095	CallExpression	"stprintf ( s , ""M%d "" , m )"		8332400	0					
ANR	8333096	Callee	stprintf		8332400	0					
ANR	8333097	Identifier	stprintf		8332400	0					
ANR	8333098	ArgumentList	s		8332400	1					
ANR	8333099	Argument	s		8332400	0					
ANR	8333100	Identifier	s		8332400	0					
ANR	8333101	Argument	"""M%d """		8332400	1					
ANR	8333102	PrimaryExpression	"""M%d """		8332400	0					
ANR	8333103	Argument	m		8332400	2					
ANR	8333104	Identifier	m		8332400	0					
ANR	8333105	ElseStatement	else		8332400	0					
ANR	8333106	ExpressionStatement	"stputs ( s , ( plfont -> storage & pcds_internal ) ? ""I "" : ""S "" )"	287:16:10150:10208	8332400	0	True				
ANR	8333107	CallExpression	"stputs ( s , ( plfont -> storage & pcds_internal ) ? ""I "" : ""S "" )"		8332400	0					
ANR	8333108	Callee	stputs		8332400	0					
ANR	8333109	Identifier	stputs		8332400	0					
ANR	8333110	ArgumentList	s		8332400	1					
ANR	8333111	Argument	s		8332400	0					
ANR	8333112	Identifier	s		8332400	0					
ANR	8333113	Argument	"( plfont -> storage & pcds_internal ) ? ""I "" : ""S """		8332400	1					
ANR	8333114	ConditionalExpression	"( plfont -> storage & pcds_internal ) ? ""I "" : ""S """		8332400	0					
ANR	8333115	Condition	plfont -> storage & pcds_internal		8332400	0					
ANR	8333116	BitAndExpression	plfont -> storage & pcds_internal		8332400	0		&			
ANR	8333117	PtrMemberAccess	plfont -> storage		8332400	0					
ANR	8333118	Identifier	plfont		8332400	0					
ANR	8333119	Identifier	storage		8332400	1					
ANR	8333120	Identifier	pcds_internal		8332400	1					
ANR	8333121	PrimaryExpression	"""I """		8332400	1					
ANR	8333122	PrimaryExpression	"""S """		8332400	2					
ANR	8333123	ExpressionStatement	"stprintf ( s , ""%d\\""\\r\\n"" , internal_id )"	288:12:10222:10258	8332400	2	True				
ANR	8333124	CallExpression	"stprintf ( s , ""%d\\""\\r\\n"" , internal_id )"		8332400	0					
ANR	8333125	Callee	stprintf		8332400	0					
ANR	8333126	Identifier	stprintf		8332400	0					
ANR	8333127	ArgumentList	s		8332400	1					
ANR	8333128	Argument	s		8332400	0					
ANR	8333129	Identifier	s		8332400	0					
ANR	8333130	Argument	"""%d\\""\\r\\n"""		8332400	1					
ANR	8333131	PrimaryExpression	"""%d\\""\\r\\n"""		8332400	0					
ANR	8333132	Argument	internal_id		8332400	2					
ANR	8333133	Identifier	internal_id		8332400	0					
ANR	8333134	IfStatement	if ( ( plfont -> storage & pcds_downloaded ) && plfont -> header != NULL )		8332400	1					
ANR	8333135	Condition	( plfont -> storage & pcds_downloaded ) && plfont -> header != NULL	294:12:10447:10507	8332400	0	True				
ANR	8333136	AndExpression	( plfont -> storage & pcds_downloaded ) && plfont -> header != NULL		8332400	0		&&			
ANR	8333137	BitAndExpression	plfont -> storage & pcds_downloaded		8332400	0		&			
ANR	8333138	PtrMemberAccess	plfont -> storage		8332400	0					
ANR	8333139	Identifier	plfont		8332400	0					
ANR	8333140	Identifier	storage		8332400	1					
ANR	8333141	Identifier	pcds_downloaded		8332400	1					
ANR	8333142	EqualityExpression	plfont -> header != NULL		8332400	1		!=			
ANR	8333143	PtrMemberAccess	plfont -> header		8332400	0					
ANR	8333144	Identifier	plfont		8332400	0					
ANR	8333145	Identifier	header		8332400	1					
ANR	8333146	Identifier	NULL		8332400	1					
ANR	8333147	CompoundStatement		129:12:5660:5723	8332400	1					
ANR	8333148	IdentifierDeclStatement	pcl_font_header_t * hdr = ( pcl_font_header_t * ) ( plfont -> header ) ;	297:12:10647:10710	8332400	0	True				
ANR	8333149	IdentifierDecl	* hdr = ( pcl_font_header_t * ) ( plfont -> header )		8332400	0					
ANR	8333150	IdentifierDeclType	pcl_font_header_t *		8332400	0					
ANR	8333151	Identifier	hdr		8332400	1					
ANR	8333152	AssignmentExpression	* hdr = ( pcl_font_header_t * ) ( plfont -> header )		8332400	2		=			
ANR	8333153	Identifier	hdr		8332400	0					
ANR	8333154	CastExpression	( pcl_font_header_t * ) ( plfont -> header )		8332400	1					
ANR	8333155	CastTarget	pcl_font_header_t *		8332400	0					
ANR	8333156	PtrMemberAccess	plfont -> header		8332400	1					
ANR	8333157	Identifier	plfont		8332400	0					
ANR	8333158	Identifier	header		8332400	1					
ANR	8333159	ExpressionStatement	"stprintf ( s , ""NAME=\\""%.16s\\""\\r\\n"" , hdr -> FontName )"	299:12:10725:10773	8332400	1	True				
ANR	8333160	CallExpression	"stprintf ( s , ""NAME=\\""%.16s\\""\\r\\n"" , hdr -> FontName )"		8332400	0					
ANR	8333161	Callee	stprintf		8332400	0					
ANR	8333162	Identifier	stprintf		8332400	0					
ANR	8333163	ArgumentList	s		8332400	1					
ANR	8333164	Argument	s		8332400	0					
ANR	8333165	Identifier	s		8332400	0					
ANR	8333166	Argument	"""NAME=\\""%.16s\\""\\r\\n"""		8332400	1					
ANR	8333167	PrimaryExpression	"""NAME=\\""%.16s\\""\\r\\n"""		8332400	0					
ANR	8333168	Argument	hdr -> FontName		8332400	2					
ANR	8333169	PtrMemberAccess	hdr -> FontName		8332400	0					
ANR	8333170	Identifier	hdr		8332400	0					
ANR	8333171	Identifier	FontName		8332400	1					
ANR	8333172	ReturnStatement	return 0 ;	302:4:10795:10803	8332400	11	True				
ANR	8333173	PrimaryExpression	0		8332400	0					
ANR	8333174	ReturnType	static int		8332400	1					
ANR	8333175	Identifier	status_put_font		8332400	2					
ANR	8333176	ParameterList	"stream * s , pcl_state_t * pcs , uint font_id , uint internal_id , pl_font_t * plfont , int font_set , bool extended"		8332400	3					
ANR	8333177	Parameter	stream * s	166:16:4842:4851	8332400	0	True				
ANR	8333178	ParameterType	stream *		8332400	0					
ANR	8333179	Identifier	s		8332400	1					
ANR	8333180	Parameter	pcl_state_t * pcs	166:28:4854:4870	8332400	1	True				
ANR	8333181	ParameterType	pcl_state_t *		8332400	0					
ANR	8333182	Identifier	pcs		8332400	1					
ANR	8333183	Parameter	uint font_id	167:16:4889:4900	8332400	2	True				
ANR	8333184	ParameterType	uint		8332400	0					
ANR	8333185	Identifier	font_id		8332400	1					
ANR	8333186	Parameter	uint internal_id	167:30:4903:4918	8332400	3	True				
ANR	8333187	ParameterType	uint		8332400	0					
ANR	8333188	Identifier	internal_id		8332400	1					
ANR	8333189	Parameter	pl_font_t * plfont	168:16:4937:4954	8332400	4	True				
ANR	8333190	ParameterType	pl_font_t *		8332400	0					
ANR	8333191	Identifier	plfont		8332400	1					
ANR	8333192	Parameter	int font_set	168:36:4957:4968	8332400	5	True				
ANR	8333193	ParameterType	int		8332400	0					
ANR	8333194	Identifier	font_set		8332400	1					
ANR	8333195	Parameter	bool extended	168:50:4971:4983	8332400	6	True				
ANR	8333196	ParameterType	bool		8332400	0					
ANR	8333197	Identifier	extended		8332400	1					
ANR	8333198	CFGEntryNode	ENTRY		8332400		True				
ANR	8333199	CFGExitNode	EXIT		8332400		True				
ANR	8333200	Symbol	plgv_MSL		8332400						
ANR	8333201	Symbol	plfont -> scaling_technology		8332400						
ANR	8333202	Symbol	plfont -> params . height_4ths		8332400						
ANR	8333203	Symbol	ssp -> maps [ gx ] -> character_requirements		8332400						
ANR	8333204	Symbol	& value		8332400						
ANR	8333205	Symbol	plfont -> header		8332400						
ANR	8333206	Symbol	nid		8332400						
ANR	8333207	Symbol	* pcs		8332400						
ANR	8333208	Symbol	plfont		8332400						
ANR	8333209	Symbol	* * * ssp		8332400						
ANR	8333210	Symbol	& pcs -> font_selection [ font_set ] . params		8332400						
ANR	8333211	Symbol	ssp		8332400						
ANR	8333212	Symbol	& denum		8332400						
ANR	8333213	Symbol	pcds_all_cartridges		8332400						
ANR	8333214	Symbol	pcs -> font_selection [ font_set ] . params		8332400						
ANR	8333215	Symbol	pcl_check_symbol_support		8332400						
ANR	8333216	Symbol	ssp -> maps [ gx ] -> id		8332400						
ANR	8333217	Symbol	pcs -> memory		8332400						
ANR	8333218	Symbol	plgv_next		8332400						
ANR	8333219	Symbol	ssp -> maps		8332400						
ANR	8333220	Symbol	* ssp -> maps		8332400						
ANR	8333221	Symbol	plfont -> params . proportional_spacing		8332400						
ANR	8333222	Symbol	pcs -> font_selection [ font_set ] . params . symbol_set		8332400						
ANR	8333223	Symbol	pcds_simm_shift		8332400						
ANR	8333224	Symbol	pl_fp_pitch_per_inch		8332400						
ANR	8333225	Symbol	font_set		8332400						
ANR	8333226	Symbol	NULL		8332400						
ANR	8333227	Symbol	internal_id		8332400						
ANR	8333228	Symbol	plfont -> storage		8332400						
ANR	8333229	Symbol	pcds_internal		8332400						
ANR	8333230	Symbol	* * * ssp -> maps		8332400						
ANR	8333231	Symbol	plfont -> params . stroke_weight		8332400						
ANR	8333232	Symbol	pcds_all_simms		8332400						
ANR	8333233	Symbol	pcs -> font_selection		8332400						
ANR	8333234	Symbol	* * * gx		8332400						
ANR	8333235	Symbol	proportional		8332400						
ANR	8333236	Symbol	plfont -> character_complement		8332400						
ANR	8333237	Symbol	* ssp -> maps [ gx ] -> id		8332400						
ANR	8333238	Symbol	& pcs -> soft_symbol_sets		8332400						
ANR	8333239	Symbol	plfont -> params . style		8332400						
ANR	8333240	Symbol	* * pcs		8332400						
ANR	8333241	Symbol	* gx		8332400						
ANR	8333242	Symbol	* font_set		8332400						
ANR	8333243	Symbol	& key		8332400						
ANR	8333244	Symbol	plfst_bitmap		8332400						
ANR	8333245	Symbol	& pcs -> built_in_symbol_sets		8332400						
ANR	8333246	Symbol	pcds_cartridge_shift		8332400						
ANR	8333247	Symbol	extended		8332400						
ANR	8333248	Symbol	pl_font_is_bound		8332400						
ANR	8333249	Symbol	paren		8332400						
ANR	8333250	Symbol	denum		8332400						
ANR	8333251	Symbol	e_Memory		8332400						
ANR	8333252	Symbol	idlist		8332400						
ANR	8333253	Symbol	symbol_set		8332400						
ANR	8333254	Symbol	plfont -> params . typeface_family		8332400						
ANR	8333255	Symbol	value		8332400						
ANR	8333256	Symbol	* * ssp -> maps		8332400						
ANR	8333257	Symbol	key		8332400						
ANR	8333258	Symbol	* * gx		8332400						
ANR	8333259	Symbol	* hdr		8332400						
ANR	8333260	Symbol	& plfont -> params		8332400						
ANR	8333261	Symbol	pcs		8332400						
ANR	8333262	Symbol	font_id		8332400						
ANR	8333263	Symbol	gs_alloc_bytes		8332400						
ANR	8333264	Symbol	pl_dict_length		8332400						
ANR	8333265	Symbol	c		8332400						
ANR	8333266	Symbol	plfont -> params . symbol_set		8332400						
ANR	8333267	Symbol	* * ssp		8332400						
ANR	8333268	Symbol	false		8332400						
ANR	8333269	Symbol	* pcs -> font_selection		8332400						
ANR	8333270	Symbol	pcds_downloaded		8332400						
ANR	8333271	Symbol	* * * * ssp		8332400						
ANR	8333272	Symbol	m		8332400						
ANR	8333273	Symbol	pl_dict_enum_next		8332400						
ANR	8333274	Symbol	n		8332400						
ANR	8333275	Symbol	gx		8332400						
ANR	8333276	Symbol	pcds_temporary		8332400						
ANR	8333277	Symbol	s		8332400						
ANR	8333278	Symbol	plfont -> params		8332400						
ANR	8333279	Symbol	hdr		8332400						
ANR	8333280	Symbol	* plfont		8332400						
ANR	8333281	Symbol	* ssp		8332400						
ANR	8333282	Symbol	status_add_symbol_id		8332400						
ANR	8333283	Symbol	pcs -> font_selection [ font_set ] . params . height_4ths		8332400						
ANR	8333284	Symbol	hdr -> FontName		8332400						
ANR	8333285	Function	status_end	307:0:10896:11606							
ANR	8333286	FunctionDef	"status_end (stream * s , pcl_state_t * pcs)"		8333285	0					
ANR	8333287	CompoundStatement		309:0:10950:11606	8333285	0					
ANR	8333288	IfStatement	if ( sendwp ( s ) )		8333285	0					
ANR	8333289	Condition	sendwp ( s )	310:8:10960:10968	8333285	0	True				
ANR	8333290	CallExpression	sendwp ( s )		8333285	0					
ANR	8333291	Callee	sendwp		8333285	0					
ANR	8333292	Identifier	sendwp		8333285	0					
ANR	8333293	ArgumentList	s		8333285	1					
ANR	8333294	Argument	s		8333285	0					
ANR	8333295	Identifier	s		8333285	0					
ANR	8333296	CompoundStatement		7:8:331:351	8333285	1					
ANR	8333297	Statement	static	312:8:11095:11100	8333285	0	True				
ANR	8333298	IdentifierDeclStatement	"const char * error_line = ""ERROR=INTERNAL ERROR\\r\\n"" ;"	312:15:11102:11153	8333285	1	True				
ANR	8333299	IdentifierDecl	"* error_line = ""ERROR=INTERNAL ERROR\\r\\n"""		8333285	0					
ANR	8333300	IdentifierDeclType	const char *		8333285	0					
ANR	8333301	Identifier	error_line		8333285	1					
ANR	8333302	AssignmentExpression	"* error_line = ""ERROR=INTERNAL ERROR\\r\\n"""		8333285	2		=			
ANR	8333303	Identifier	error_line		8333285	0					
ANR	8333304	PrimaryExpression	"""ERROR=INTERNAL ERROR\\r\\n"""		8333285	1					
ANR	8333305	IdentifierDeclStatement	int error_size = strlen ( error_line ) + 1 ;	313:8:11163:11202	8333285	2	True				
ANR	8333306	IdentifierDecl	error_size = strlen ( error_line ) + 1		8333285	0					
ANR	8333307	IdentifierDeclType	int		8333285	0					
ANR	8333308	Identifier	error_size		8333285	1					
ANR	8333309	AssignmentExpression	error_size = strlen ( error_line ) + 1		8333285	2		=			
ANR	8333310	Identifier	error_size		8333285	0					
ANR	8333311	AdditiveExpression	strlen ( error_line ) + 1		8333285	1		+			
ANR	8333312	CallExpression	strlen ( error_line )		8333285	0					
ANR	8333313	Callee	strlen		8333285	0					
ANR	8333314	Identifier	strlen		8333285	0					
ANR	8333315	ArgumentList	error_line		8333285	1					
ANR	8333316	Argument	error_line		8333285	0					
ANR	8333317	Identifier	error_line		8333285	0					
ANR	8333318	PrimaryExpression	1		8333285	1					
ANR	8333319	IdentifierDeclStatement	"uint limit = gs_object_size ( pcs -> memory , pcs -> status . buffer ) ;"	314:8:11212:11272	8333285	3	True				
ANR	8333320	IdentifierDecl	"limit = gs_object_size ( pcs -> memory , pcs -> status . buffer )"		8333285	0					
ANR	8333321	IdentifierDeclType	uint		8333285	0					
ANR	8333322	Identifier	limit		8333285	1					
ANR	8333323	AssignmentExpression	"limit = gs_object_size ( pcs -> memory , pcs -> status . buffer )"		8333285	2		=			
ANR	8333324	Identifier	limit		8333285	0					
ANR	8333325	CallExpression	"gs_object_size ( pcs -> memory , pcs -> status . buffer )"		8333285	1					
ANR	8333326	Callee	gs_object_size		8333285	0					
ANR	8333327	Identifier	gs_object_size		8333285	0					
ANR	8333328	ArgumentList	pcs -> memory		8333285	1					
ANR	8333329	Argument	pcs -> memory		8333285	0					
ANR	8333330	PtrMemberAccess	pcs -> memory		8333285	0					
ANR	8333331	Identifier	pcs		8333285	0					
ANR	8333332	Identifier	memory		8333285	1					
ANR	8333333	Argument	pcs -> status . buffer		8333285	1					
ANR	8333334	MemberAccess	pcs -> status . buffer		8333285	0					
ANR	8333335	PtrMemberAccess	pcs -> status		8333285	0					
ANR	8333336	Identifier	pcs		8333285	0					
ANR	8333337	Identifier	status		8333285	1					
ANR	8333338	Identifier	buffer		8333285	1					
ANR	8333339	IdentifierDeclStatement	uint wpos = stell ( s ) ;	315:8:11282:11302	8333285	4	True				
ANR	8333340	IdentifierDecl	wpos = stell ( s )		8333285	0					
ANR	8333341	IdentifierDeclType	uint		8333285	0					
ANR	8333342	Identifier	wpos		8333285	1					
ANR	8333343	AssignmentExpression	wpos = stell ( s )		8333285	2		=			
ANR	8333344	Identifier	wpos		8333285	0					
ANR	8333345	CallExpression	stell ( s )		8333285	1					
ANR	8333346	Callee	stell		8333285	0					
ANR	8333347	Identifier	stell		8333285	0					
ANR	8333348	ArgumentList	s		8333285	1					
ANR	8333349	Argument	s		8333285	0					
ANR	8333350	Identifier	s		8333285	0					
ANR	8333351	WhileStatement	while ( limit - wpos < error_size || pcs -> status . buffer [ wpos - 1 ] != '\\n' )		8333285	5					
ANR	8333352	Condition	limit - wpos < error_size || pcs -> status . buffer [ wpos - 1 ] != '\\n'	317:15:11320:11399	8333285	0	True				
ANR	8333353	OrExpression	limit - wpos < error_size || pcs -> status . buffer [ wpos - 1 ] != '\\n'		8333285	0		||			
ANR	8333354	RelationalExpression	limit - wpos < error_size		8333285	0		<			
ANR	8333355	AdditiveExpression	limit - wpos		8333285	0		-			
ANR	8333356	Identifier	limit		8333285	0					
ANR	8333357	Identifier	wpos		8333285	1					
ANR	8333358	Identifier	error_size		8333285	1					
ANR	8333359	EqualityExpression	pcs -> status . buffer [ wpos - 1 ] != '\\n'		8333285	1		!=			
ANR	8333360	ArrayIndexing	pcs -> status . buffer [ wpos - 1 ]		8333285	0					
ANR	8333361	MemberAccess	pcs -> status . buffer		8333285	0					
ANR	8333362	PtrMemberAccess	pcs -> status		8333285	0					
ANR	8333363	Identifier	pcs		8333285	0					
ANR	8333364	Identifier	status		8333285	1					
ANR	8333365	Identifier	buffer		8333285	1					
ANR	8333366	AdditiveExpression	wpos - 1		8333285	1		-			
ANR	8333367	Identifier	wpos		8333285	0					
ANR	8333368	PrimaryExpression	1		8333285	1					
ANR	8333369	PrimaryExpression	'\\n'		8333285	1					
ANR	8333370	ExpressionStatement	-- wpos	319:12:11414:11420	8333285	1	True				
ANR	8333371	UnaryExpression	-- wpos		8333285	0					
ANR	8333372	IncDec	--		8333285	0					
ANR	8333373	Identifier	wpos		8333285	1					
ANR	8333374	ExpressionStatement	s -> end_status = 0	320:8:11430:11447	8333285	6	True				
ANR	8333375	AssignmentExpression	s -> end_status = 0		8333285	0		=			
ANR	8333376	PtrMemberAccess	s -> end_status		8333285	0					
ANR	8333377	Identifier	s		8333285	0					
ANR	8333378	Identifier	end_status		8333285	1					
ANR	8333379	PrimaryExpression	0		8333285	1					
ANR	8333380	ExpressionStatement	"sseek ( s , wpos )"	321:8:11497:11511	8333285	7	True				
ANR	8333381	CallExpression	"sseek ( s , wpos )"		8333285	0					
ANR	8333382	Callee	sseek		8333285	0					
ANR	8333383	Identifier	sseek		8333285	0					
ANR	8333384	ArgumentList	s		8333285	1					
ANR	8333385	Argument	s		8333285	0					
ANR	8333386	Identifier	s		8333285	0					
ANR	8333387	Argument	wpos		8333285	1					
ANR	8333388	Identifier	wpos		8333285	0					
ANR	8333389	ExpressionStatement	"stputs ( s , error_line )"	322:8:11521:11542	8333285	8	True				
ANR	8333390	CallExpression	"stputs ( s , error_line )"		8333285	0					
ANR	8333391	Callee	stputs		8333285	0					
ANR	8333392	Identifier	stputs		8333285	0					
ANR	8333393	ArgumentList	s		8333285	1					
ANR	8333394	Argument	s		8333285	0					
ANR	8333395	Identifier	s		8333285	0					
ANR	8333396	Argument	error_line		8333285	1					
ANR	8333397	Identifier	error_line		8333285	0					
ANR	8333398	ExpressionStatement	"sputc ( s , FF )"	324:4:11554:11566	8333285	1	True				
ANR	8333399	CallExpression	"sputc ( s , FF )"		8333285	0					
ANR	8333400	Callee	sputc		8333285	0					
ANR	8333401	Identifier	sputc		8333285	0					
ANR	8333402	ArgumentList	s		8333285	1					
ANR	8333403	Argument	s		8333285	0					
ANR	8333404	Identifier	s		8333285	0					
ANR	8333405	Argument	FF		8333285	1					
ANR	8333406	Identifier	FF		8333285	0					
ANR	8333407	ExpressionStatement	pcs -> status . write_pos = stell ( s )	325:4:11572:11604	8333285	2	True				
ANR	8333408	AssignmentExpression	pcs -> status . write_pos = stell ( s )		8333285	0		=			
ANR	8333409	MemberAccess	pcs -> status . write_pos		8333285	0					
ANR	8333410	PtrMemberAccess	pcs -> status		8333285	0					
ANR	8333411	Identifier	pcs		8333285	0					
ANR	8333412	Identifier	status		8333285	1					
ANR	8333413	Identifier	write_pos		8333285	1					
ANR	8333414	CallExpression	stell ( s )		8333285	1					
ANR	8333415	Callee	stell		8333285	0					
ANR	8333416	Identifier	stell		8333285	0					
ANR	8333417	ArgumentList	s		8333285	1					
ANR	8333418	Argument	s		8333285	0					
ANR	8333419	Identifier	s		8333285	0					
ANR	8333420	ReturnType	static void		8333285	1					
ANR	8333421	Identifier	status_end		8333285	2					
ANR	8333422	ParameterList	"stream * s , pcl_state_t * pcs"		8333285	3					
ANR	8333423	Parameter	stream * s	308:11:10919:10928	8333285	0	True				
ANR	8333424	ParameterType	stream *		8333285	0					
ANR	8333425	Identifier	s		8333285	1					
ANR	8333426	Parameter	pcl_state_t * pcs	308:23:10931:10947	8333285	1	True				
ANR	8333427	ParameterType	pcl_state_t *		8333285	0					
ANR	8333428	Identifier	pcs		8333285	1					
ANR	8333429	CFGEntryNode	ENTRY		8333285		True				
ANR	8333430	CFGExitNode	EXIT		8333285		True				
ANR	8333431	Symbol	FF		8333285						
ANR	8333432	Symbol	pcs		8333285						
ANR	8333433	Symbol	sendwp		8333285						
ANR	8333434	Symbol	* pcs -> status		8333285						
ANR	8333435	Symbol	error_line		8333285						
ANR	8333436	Symbol	* pcs		8333285						
ANR	8333437	Symbol	wpos		8333285						
ANR	8333438	Symbol	gs_object_size		8333285						
ANR	8333439	Symbol	stell		8333285						
ANR	8333440	Symbol	strlen		8333285						
ANR	8333441	Symbol	s		8333285						
ANR	8333442	Symbol	pcs -> status		8333285						
ANR	8333443	Symbol	* * pcs		8333285						
ANR	8333444	Symbol	* wpos		8333285						
ANR	8333445	Symbol	pcs -> status . write_pos		8333285						
ANR	8333446	Symbol	limit		8333285						
ANR	8333447	Symbol	* pcs -> status . buffer		8333285						
ANR	8333448	Symbol	pcs -> memory		8333285						
ANR	8333449	Symbol	pcs -> status . buffer		8333285						
ANR	8333450	Symbol	s -> end_status		8333285						
ANR	8333451	Symbol	error_size		8333285						
ANR	8333452	Symbol	* s		8333285						
ANR	8333453	Function	status_do_fonts	331:0:11700:12476							
ANR	8333454	FunctionDef	"status_do_fonts (stream * s , pcl_state_t * pcs , pcl_data_storage_t storage , bool extended)"		8333453	0					
ANR	8333455	CompoundStatement		334:0:11817:12476	8333453	0					
ANR	8333456	IdentifierDeclStatement	gs_const_string key ;	335:4:11823:11842	8333453	0	True				
ANR	8333457	IdentifierDecl	key		8333453	0					
ANR	8333458	IdentifierDeclType	gs_const_string		8333453	0					
ANR	8333459	Identifier	key		8333453	1					
ANR	8333460	IdentifierDeclStatement	void * value ;	336:4:11848:11859	8333453	1	True				
ANR	8333461	IdentifierDecl	* value		8333453	0					
ANR	8333462	IdentifierDeclType	void *		8333453	0					
ANR	8333463	Identifier	value		8333453	1					
ANR	8333464	IdentifierDeclStatement	pl_dict_enum_t denum ;	337:4:11865:11885	8333453	2	True				
ANR	8333465	IdentifierDecl	denum		8333453	0					
ANR	8333466	IdentifierDeclType	pl_dict_enum_t		8333453	0					
ANR	8333467	Identifier	denum		8333453	1					
ANR	8333468	IdentifierDeclStatement	int res ;	338:4:11891:11898	8333453	3	True				
ANR	8333469	IdentifierDecl	res		8333453	0					
ANR	8333470	IdentifierDeclType	int		8333453	0					
ANR	8333471	Identifier	res		8333453	1					
ANR	8333472	ExpressionStatement	"pl_dict_enum_begin ( & pcs -> soft_fonts , & denum )"	340:4:11905:11949	8333453	4	True				
ANR	8333473	CallExpression	"pl_dict_enum_begin ( & pcs -> soft_fonts , & denum )"		8333453	0					
ANR	8333474	Callee	pl_dict_enum_begin		8333453	0					
ANR	8333475	Identifier	pl_dict_enum_begin		8333453	0					
ANR	8333476	ArgumentList	& pcs -> soft_fonts		8333453	1					
ANR	8333477	Argument	& pcs -> soft_fonts		8333453	0					
ANR	8333478	UnaryOperationExpression	& pcs -> soft_fonts		8333453	0					
ANR	8333479	UnaryOperator	&		8333453	0					
ANR	8333480	PtrMemberAccess	pcs -> soft_fonts		8333453	1					
ANR	8333481	Identifier	pcs		8333453	0					
ANR	8333482	Identifier	soft_fonts		8333453	1					
ANR	8333483	Argument	& denum		8333453	1					
ANR	8333484	UnaryOperationExpression	& denum		8333453	0					
ANR	8333485	UnaryOperator	&		8333453	0					
ANR	8333486	Identifier	denum		8333453	1					
ANR	8333487	WhileStatement	"while ( pl_dict_enum_next ( & denum , & key , & value ) )"		8333453	5					
ANR	8333488	Condition	"pl_dict_enum_next ( & denum , & key , & value )"	341:11:11962:12000	8333453	0	True				
ANR	8333489	CallExpression	"pl_dict_enum_next ( & denum , & key , & value )"		8333453	0					
ANR	8333490	Callee	pl_dict_enum_next		8333453	0					
ANR	8333491	Identifier	pl_dict_enum_next		8333453	0					
ANR	8333492	ArgumentList	& denum		8333453	1					
ANR	8333493	Argument	& denum		8333453	0					
ANR	8333494	UnaryOperationExpression	& denum		8333453	0					
ANR	8333495	UnaryOperator	&		8333453	0					
ANR	8333496	Identifier	denum		8333453	1					
ANR	8333497	Argument	& key		8333453	1					
ANR	8333498	UnaryOperationExpression	& key		8333453	0					
ANR	8333499	UnaryOperator	&		8333453	0					
ANR	8333500	Identifier	key		8333453	1					
ANR	8333501	Argument	& value		8333453	2					
ANR	8333502	UnaryOperationExpression	& value		8333453	0					
ANR	8333503	UnaryOperator	&		8333453	0					
ANR	8333504	Identifier	value		8333453	1					
ANR	8333505	CompoundStatement		9:8:195:237	8333453	1					
ANR	8333506	IdentifierDeclStatement	uint id = ( key . data [ 0 ] << 8 ) + key . data [ 1 ] ;	342:8:12013:12055	8333453	0	True				
ANR	8333507	IdentifierDecl	id = ( key . data [ 0 ] << 8 ) + key . data [ 1 ]		8333453	0					
ANR	8333508	IdentifierDeclType	uint		8333453	0					
ANR	8333509	Identifier	id		8333453	1					
ANR	8333510	AssignmentExpression	id = ( key . data [ 0 ] << 8 ) + key . data [ 1 ]		8333453	2		=			
ANR	8333511	Identifier	id		8333453	0					
ANR	8333512	AdditiveExpression	( key . data [ 0 ] << 8 ) + key . data [ 1 ]		8333453	1		+			
ANR	8333513	ShiftExpression	key . data [ 0 ] << 8		8333453	0		<<			
ANR	8333514	ArrayIndexing	key . data [ 0 ]		8333453	0					
ANR	8333515	MemberAccess	key . data		8333453	0					
ANR	8333516	Identifier	key		8333453	0					
ANR	8333517	Identifier	data		8333453	1					
ANR	8333518	PrimaryExpression	0		8333453	1					
ANR	8333519	PrimaryExpression	8		8333453	1					
ANR	8333520	ArrayIndexing	key . data [ 1 ]		8333453	1					
ANR	8333521	MemberAccess	key . data		8333453	0					
ANR	8333522	Identifier	key		8333453	0					
ANR	8333523	Identifier	data		8333453	1					
ANR	8333524	PrimaryExpression	1		8333453	1					
ANR	8333525	IfStatement	if ( ( ( ( pl_font_t * ) value ) -> storage & storage ) != 0 || ( storage == 0 && pcs -> font == ( pl_font_t * ) value ) )		8333453	1					
ANR	8333526	Condition	( ( ( pl_font_t * ) value ) -> storage & storage ) != 0 || ( storage == 0 && pcs -> font == ( pl_font_t * ) value )	344:12:12070:12182	8333453	0	True				
ANR	8333527	OrExpression	( ( ( pl_font_t * ) value ) -> storage & storage ) != 0 || ( storage == 0 && pcs -> font == ( pl_font_t * ) value )		8333453	0		||			
ANR	8333528	EqualityExpression	( ( ( pl_font_t * ) value ) -> storage & storage ) != 0		8333453	0		!=			
ANR	8333529	BitAndExpression	( ( pl_font_t * ) value ) -> storage & storage		8333453	0		&			
ANR	8333530	PtrMemberAccess	( ( pl_font_t * ) value ) -> storage		8333453	0					
ANR	8333531	CastExpression	( pl_font_t * ) value		8333453	0					
ANR	8333532	CastTarget	pl_font_t *		8333453	0					
ANR	8333533	Identifier	value		8333453	1					
ANR	8333534	Identifier	storage		8333453	1					
ANR	8333535	Identifier	storage		8333453	1					
ANR	8333536	PrimaryExpression	0		8333453	1					
ANR	8333537	AndExpression	storage == 0 && pcs -> font == ( pl_font_t * ) value		8333453	1		&&			
ANR	8333538	EqualityExpression	storage == 0		8333453	0		==			
ANR	8333539	Identifier	storage		8333453	0					
ANR	8333540	PrimaryExpression	0		8333453	1					
ANR	8333541	EqualityExpression	pcs -> font == ( pl_font_t * ) value		8333453	1		==			
ANR	8333542	PtrMemberAccess	pcs -> font		8333453	0					
ANR	8333543	Identifier	pcs		8333453	0					
ANR	8333544	Identifier	font		8333453	1					
ANR	8333545	CastExpression	( pl_font_t * ) value		8333453	1					
ANR	8333546	CastTarget	pl_font_t *		8333453	0					
ANR	8333547	Identifier	value		8333453	1					
ANR	8333548	CompoundStatement		13:14:380:380	8333453	1					
ANR	8333549	ExpressionStatement	"res = status_put_font ( s , pcs , id , id , ( pl_font_t * ) value , ( storage != 0 ? - 1 : pcs -> font_selected ) , extended )"	347:12:12212:12390	8333453	0	True				
ANR	8333550	AssignmentExpression	"res = status_put_font ( s , pcs , id , id , ( pl_font_t * ) value , ( storage != 0 ? - 1 : pcs -> font_selected ) , extended )"		8333453	0		=			
ANR	8333551	Identifier	res		8333453	0					
ANR	8333552	CallExpression	"status_put_font ( s , pcs , id , id , ( pl_font_t * ) value , ( storage != 0 ? - 1 : pcs -> font_selected ) , extended )"		8333453	1					
ANR	8333553	Callee	status_put_font		8333453	0					
ANR	8333554	Identifier	status_put_font		8333453	0					
ANR	8333555	ArgumentList	s		8333453	1					
ANR	8333556	Argument	s		8333453	0					
ANR	8333557	Identifier	s		8333453	0					
ANR	8333558	Argument	pcs		8333453	1					
ANR	8333559	Identifier	pcs		8333453	0					
ANR	8333560	Argument	id		8333453	2					
ANR	8333561	Identifier	id		8333453	0					
ANR	8333562	Argument	id		8333453	3					
ANR	8333563	Identifier	id		8333453	0					
ANR	8333564	Argument	( pl_font_t * ) value		8333453	4					
ANR	8333565	CastExpression	( pl_font_t * ) value		8333453	0					
ANR	8333566	CastTarget	pl_font_t *		8333453	0					
ANR	8333567	Identifier	value		8333453	1					
ANR	8333568	Argument	storage != 0 ? - 1 : pcs -> font_selected		8333453	5					
ANR	8333569	ConditionalExpression	storage != 0 ? - 1 : pcs -> font_selected		8333453	0					
ANR	8333570	Condition	storage != 0		8333453	0					
ANR	8333571	EqualityExpression	storage != 0		8333453	0		!=			
ANR	8333572	Identifier	storage		8333453	0					
ANR	8333573	PrimaryExpression	0		8333453	1					
ANR	8333574	UnaryOperationExpression	- 1		8333453	1					
ANR	8333575	UnaryOperator	-		8333453	0					
ANR	8333576	PrimaryExpression	1		8333453	1					
ANR	8333577	PtrMemberAccess	pcs -> font_selected		8333453	2					
ANR	8333578	Identifier	pcs		8333453	0					
ANR	8333579	Identifier	font_selected		8333453	1					
ANR	8333580	Argument	extended		8333453	6					
ANR	8333581	Identifier	extended		8333453	0					
ANR	8333582	IfStatement	if ( res != 0 )		8333453	1					
ANR	8333583	Condition	res != 0	350:16:12408:12415	8333453	0	True				
ANR	8333584	EqualityExpression	res != 0		8333453	0		!=			
ANR	8333585	Identifier	res		8333453	0					
ANR	8333586	PrimaryExpression	0		8333453	1					
ANR	8333587	ReturnStatement	return res ;	351:16:12434:12444	8333453	1	True				
ANR	8333588	Identifier	res		8333453	0					
ANR	8333589	ReturnStatement	return 0 ;	354:4:12466:12474	8333453	6	True				
ANR	8333590	PrimaryExpression	0		8333453	0					
ANR	8333591	ReturnType	static int		8333453	1					
ANR	8333592	Identifier	status_do_fonts		8333453	2					
ANR	8333593	ParameterList	"stream * s , pcl_state_t * pcs , pcl_data_storage_t storage , bool extended"		8333453	3					
ANR	8333594	Parameter	stream * s	332:16:11727:11736	8333453	0	True				
ANR	8333595	ParameterType	stream *		8333453	0					
ANR	8333596	Identifier	s		8333453	1					
ANR	8333597	Parameter	pcl_state_t * pcs	332:28:11739:11755	8333453	1	True				
ANR	8333598	ParameterType	pcl_state_t *		8333453	0					
ANR	8333599	Identifier	pcs		8333453	1					
ANR	8333600	Parameter	pcl_data_storage_t storage	333:16:11774:11799	8333453	2	True				
ANR	8333601	ParameterType	pcl_data_storage_t		8333453	0					
ANR	8333602	Identifier	storage		8333453	1					
ANR	8333603	Parameter	bool extended	333:44:11802:11814	8333453	3	True				
ANR	8333604	ParameterType	bool		8333453	0					
ANR	8333605	Identifier	extended		8333453	1					
ANR	8333606	CFGEntryNode	ENTRY		8333453		True				
ANR	8333607	CFGExitNode	EXIT		8333453		True				
ANR	8333608	Symbol	* key . data		8333453						
ANR	8333609	Symbol	pcs		8333453						
ANR	8333610	Symbol	res		8333453						
ANR	8333611	Symbol	& key		8333453						
ANR	8333612	Symbol	& value		8333453						
ANR	8333613	Symbol	key . data		8333453						
ANR	8333614	Symbol	* key		8333453						
ANR	8333615	Symbol	* pcs		8333453						
ANR	8333616	Symbol	storage		8333453						
ANR	8333617	Symbol	extended		8333453						
ANR	8333618	Symbol	pl_dict_enum_next		8333453						
ANR	8333619	Symbol	pcs -> font		8333453						
ANR	8333620	Symbol	s		8333453						
ANR	8333621	Symbol	& denum		8333453						
ANR	8333622	Symbol	denum		8333453						
ANR	8333623	Symbol	& pcs -> soft_fonts		8333453						
ANR	8333624	Symbol	pcs -> font_selected		8333453						
ANR	8333625	Symbol	* value		8333453						
ANR	8333626	Symbol	status_put_font		8333453						
ANR	8333627	Symbol	id		8333453						
ANR	8333628	Symbol	value		8333453						
ANR	8333629	Symbol	( ( pl_font_t * ) value ) -> storage		8333453						
ANR	8333630	Symbol	key		8333453						
ANR	8333631	Function	status_fonts	357:0:12479:12616							
ANR	8333632	FunctionDef	"status_fonts (stream * s , pcl_state_t * pcs , pcl_data_storage_t storage)"		8333631	0					
ANR	8333633	CompoundStatement		359:0:12562:12616	8333631	0					
ANR	8333634	ReturnStatement	"return status_do_fonts ( s , pcs , storage , false ) ;"	360:4:12568:12614	8333631	0	True				
ANR	8333635	CallExpression	"status_do_fonts ( s , pcs , storage , false )"		8333631	0					
ANR	8333636	Callee	status_do_fonts		8333631	0					
ANR	8333637	Identifier	status_do_fonts		8333631	0					
ANR	8333638	ArgumentList	s		8333631	1					
ANR	8333639	Argument	s		8333631	0					
ANR	8333640	Identifier	s		8333631	0					
ANR	8333641	Argument	pcs		8333631	1					
ANR	8333642	Identifier	pcs		8333631	0					
ANR	8333643	Argument	storage		8333631	2					
ANR	8333644	Identifier	storage		8333631	0					
ANR	8333645	Argument	false		8333631	3					
ANR	8333646	Identifier	false		8333631	0					
ANR	8333647	ReturnType	static int		8333631	1					
ANR	8333648	Identifier	status_fonts		8333631	2					
ANR	8333649	ParameterList	"stream * s , pcl_state_t * pcs , pcl_data_storage_t storage"		8333631	3					
ANR	8333650	Parameter	stream * s	358:13:12503:12512	8333631	0	True				
ANR	8333651	ParameterType	stream *		8333631	0					
ANR	8333652	Identifier	s		8333631	1					
ANR	8333653	Parameter	pcl_state_t * pcs	358:25:12515:12531	8333631	1	True				
ANR	8333654	ParameterType	pcl_state_t *		8333631	0					
ANR	8333655	Identifier	pcs		8333631	1					
ANR	8333656	Parameter	pcl_data_storage_t storage	358:44:12534:12559	8333631	2	True				
ANR	8333657	ParameterType	pcl_data_storage_t		8333631	0					
ANR	8333658	Identifier	storage		8333631	1					
ANR	8333659	CFGEntryNode	ENTRY		8333631		True				
ANR	8333660	CFGExitNode	EXIT		8333631		True				
ANR	8333661	Symbol	pcs		8333631						
ANR	8333662	Symbol	s		8333631						
ANR	8333663	Symbol	false		8333631						
ANR	8333664	Symbol	status_do_fonts		8333631						
ANR	8333665	Symbol	storage		8333631						
ANR	8333666	Function	status_macros	363:0:12619:13229							
ANR	8333667	FunctionDef	"status_macros (stream * s , pcl_state_t * pcs , pcl_data_storage_t storage)"		8333666	0					
ANR	8333668	CompoundStatement		365:0:12703:13229	8333666	0					
ANR	8333669	IdentifierDeclStatement	gs_const_string key ;	366:4:12709:12728	8333666	0	True				
ANR	8333670	IdentifierDecl	key		8333666	0					
ANR	8333671	IdentifierDeclType	gs_const_string		8333666	0					
ANR	8333672	Identifier	key		8333666	1					
ANR	8333673	IdentifierDeclStatement	void * value ;	367:4:12734:12745	8333666	1	True				
ANR	8333674	IdentifierDecl	* value		8333666	0					
ANR	8333675	IdentifierDeclType	void *		8333666	0					
ANR	8333676	Identifier	value		8333666	1					
ANR	8333677	IdentifierDeclStatement	pl_dict_enum_t denum ;	368:4:12751:12771	8333666	2	True				
ANR	8333678	IdentifierDecl	denum		8333666	0					
ANR	8333679	IdentifierDeclType	pl_dict_enum_t		8333666	0					
ANR	8333680	Identifier	denum		8333666	1					
ANR	8333681	IfStatement	if ( storage == 0 )		8333666	3					
ANR	8333682	Condition	storage == 0	370:8:12782:12793	8333666	0	True				
ANR	8333683	EqualityExpression	storage == 0		8333666	0		==			
ANR	8333684	Identifier	storage		8333666	0					
ANR	8333685	PrimaryExpression	0		8333666	1					
ANR	8333686	ReturnStatement	return 0 ;	371:8:12804:12812	8333666	1	True				
ANR	8333687	PrimaryExpression	0		8333666	0					
ANR	8333688	ExpressionStatement	"pl_dict_enum_begin ( & pcs -> macros , & denum )"	372:4:12868:12908	8333666	4	True				
ANR	8333689	CallExpression	"pl_dict_enum_begin ( & pcs -> macros , & denum )"		8333666	0					
ANR	8333690	Callee	pl_dict_enum_begin		8333666	0					
ANR	8333691	Identifier	pl_dict_enum_begin		8333666	0					
ANR	8333692	ArgumentList	& pcs -> macros		8333666	1					
ANR	8333693	Argument	& pcs -> macros		8333666	0					
ANR	8333694	UnaryOperationExpression	& pcs -> macros		8333666	0					
ANR	8333695	UnaryOperator	&		8333666	0					
ANR	8333696	PtrMemberAccess	pcs -> macros		8333666	1					
ANR	8333697	Identifier	pcs		8333666	0					
ANR	8333698	Identifier	macros		8333666	1					
ANR	8333699	Argument	& denum		8333666	1					
ANR	8333700	UnaryOperationExpression	& denum		8333666	0					
ANR	8333701	UnaryOperator	&		8333666	0					
ANR	8333702	Identifier	denum		8333666	1					
ANR	8333703	WhileStatement	"while ( pl_dict_enum_next ( & denum , & key , & value ) )"		8333666	5					
ANR	8333704	Condition	"pl_dict_enum_next ( & denum , & key , & value )"	373:11:12921:12959	8333666	0	True				
ANR	8333705	CallExpression	"pl_dict_enum_next ( & denum , & key , & value )"		8333666	0					
ANR	8333706	Callee	pl_dict_enum_next		8333666	0					
ANR	8333707	Identifier	pl_dict_enum_next		8333666	0					
ANR	8333708	ArgumentList	& denum		8333666	1					
ANR	8333709	Argument	& denum		8333666	0					
ANR	8333710	UnaryOperationExpression	& denum		8333666	0					
ANR	8333711	UnaryOperator	&		8333666	0					
ANR	8333712	Identifier	denum		8333666	1					
ANR	8333713	Argument	& key		8333666	1					
ANR	8333714	UnaryOperationExpression	& key		8333666	0					
ANR	8333715	UnaryOperator	&		8333666	0					
ANR	8333716	Identifier	key		8333666	1					
ANR	8333717	Argument	& value		8333666	2					
ANR	8333718	UnaryOperationExpression	& value		8333666	0					
ANR	8333719	UnaryOperator	&		8333666	0					
ANR	8333720	Identifier	value		8333666	1					
ANR	8333721	IfStatement	if ( ( ( pcl_macro_t * ) value ) -> storage & storage )		8333666	1					
ANR	8333722	Condition	( ( pcl_macro_t * ) value ) -> storage & storage	374:12:12974:13015	8333666	0	True				
ANR	8333723	BitAndExpression	( ( pcl_macro_t * ) value ) -> storage & storage		8333666	0		&			
ANR	8333724	PtrMemberAccess	( ( pcl_macro_t * ) value ) -> storage		8333666	0					
ANR	8333725	CastExpression	( pcl_macro_t * ) value		8333666	0					
ANR	8333726	CastTarget	pcl_macro_t *		8333666	0					
ANR	8333727	Identifier	value		8333666	1					
ANR	8333728	Identifier	storage		8333666	1					
ANR	8333729	Identifier	storage		8333666	1					
ANR	8333730	CompoundStatement		11:12:328:345	8333666	1					
ANR	8333731	IdentifierDeclStatement	char id_string [ 6 ] ;	375:12:13032:13049	8333666	0	True				
ANR	8333732	IdentifierDecl	id_string [ 6 ]		8333666	0					
ANR	8333733	IdentifierDeclType	char [ 6 ]		8333666	0					
ANR	8333734	Identifier	id_string		8333666	1					
ANR	8333735	PrimaryExpression	6		8333666	2					
ANR	8333736	ExpressionStatement	"gs_sprintf ( id_string , ""%u"" , ( key . data [ 0 ] << 8 ) + key . data [ 1 ] )"	377:12:13064:13125	8333666	1	True				
ANR	8333737	CallExpression	"gs_sprintf ( id_string , ""%u"" , ( key . data [ 0 ] << 8 ) + key . data [ 1 ] )"		8333666	0					
ANR	8333738	Callee	gs_sprintf		8333666	0					
ANR	8333739	Identifier	gs_sprintf		8333666	0					
ANR	8333740	ArgumentList	id_string		8333666	1					
ANR	8333741	Argument	id_string		8333666	0					
ANR	8333742	Identifier	id_string		8333666	0					
ANR	8333743	Argument	"""%u"""		8333666	1					
ANR	8333744	PrimaryExpression	"""%u"""		8333666	0					
ANR	8333745	Argument	( key . data [ 0 ] << 8 ) + key . data [ 1 ]		8333666	2					
ANR	8333746	AdditiveExpression	( key . data [ 0 ] << 8 ) + key . data [ 1 ]		8333666	0		+			
ANR	8333747	ShiftExpression	key . data [ 0 ] << 8		8333666	0		<<			
ANR	8333748	ArrayIndexing	key . data [ 0 ]		8333666	0					
ANR	8333749	MemberAccess	key . data		8333666	0					
ANR	8333750	Identifier	key		8333666	0					
ANR	8333751	Identifier	data		8333666	1					
ANR	8333752	PrimaryExpression	0		8333666	1					
ANR	8333753	PrimaryExpression	8		8333666	1					
ANR	8333754	ArrayIndexing	key . data [ 1 ]		8333666	1					
ANR	8333755	MemberAccess	key . data		8333666	0					
ANR	8333756	Identifier	key		8333666	0					
ANR	8333757	Identifier	data		8333666	1					
ANR	8333758	PrimaryExpression	1		8333666	1					
ANR	8333759	ExpressionStatement	"status_put_id ( s , ""IDLIST"" , id_string )"	378:12:13139:13176	8333666	2	True				
ANR	8333760	CallExpression	"status_put_id ( s , ""IDLIST"" , id_string )"		8333666	0					
ANR	8333761	Callee	status_put_id		8333666	0					
ANR	8333762	Identifier	status_put_id		8333666	0					
ANR	8333763	ArgumentList	s		8333666	1					
ANR	8333764	Argument	s		8333666	0					
ANR	8333765	Identifier	s		8333666	0					
ANR	8333766	Argument	"""IDLIST"""		8333666	1					
ANR	8333767	PrimaryExpression	"""IDLIST"""		8333666	0					
ANR	8333768	Argument	id_string		8333666	2					
ANR	8333769	Identifier	id_string		8333666	0					
ANR	8333770	ExpressionStatement	status_end_id_list ( s )	380:4:13192:13213	8333666	6	True				
ANR	8333771	CallExpression	status_end_id_list ( s )		8333666	0					
ANR	8333772	Callee	status_end_id_list		8333666	0					
ANR	8333773	Identifier	status_end_id_list		8333666	0					
ANR	8333774	ArgumentList	s		8333666	1					
ANR	8333775	Argument	s		8333666	0					
ANR	8333776	Identifier	s		8333666	0					
ANR	8333777	ReturnStatement	return 0 ;	381:4:13219:13227	8333666	7	True				
ANR	8333778	PrimaryExpression	0		8333666	0					
ANR	8333779	ReturnType	static int		8333666	1					
ANR	8333780	Identifier	status_macros		8333666	2					
ANR	8333781	ParameterList	"stream * s , pcl_state_t * pcs , pcl_data_storage_t storage"		8333666	3					
ANR	8333782	Parameter	stream * s	364:14:12644:12653	8333666	0	True				
ANR	8333783	ParameterType	stream *		8333666	0					
ANR	8333784	Identifier	s		8333666	1					
ANR	8333785	Parameter	pcl_state_t * pcs	364:26:12656:12672	8333666	1	True				
ANR	8333786	ParameterType	pcl_state_t *		8333666	0					
ANR	8333787	Identifier	pcs		8333666	1					
ANR	8333788	Parameter	pcl_data_storage_t storage	364:45:12675:12700	8333666	2	True				
ANR	8333789	ParameterType	pcl_data_storage_t		8333666	0					
ANR	8333790	Identifier	storage		8333666	1					
ANR	8333791	CFGEntryNode	ENTRY		8333666		True				
ANR	8333792	CFGExitNode	EXIT		8333666		True				
ANR	8333793	Symbol	* key . data		8333666						
ANR	8333794	Symbol	pcs		8333666						
ANR	8333795	Symbol	& key		8333666						
ANR	8333796	Symbol	& value		8333666						
ANR	8333797	Symbol	& pcs -> macros		8333666						
ANR	8333798	Symbol	key . data		8333666						
ANR	8333799	Symbol	* key		8333666						
ANR	8333800	Symbol	storage		8333666						
ANR	8333801	Symbol	pl_dict_enum_next		8333666						
ANR	8333802	Symbol	( ( pcl_macro_t * ) value ) -> storage		8333666						
ANR	8333803	Symbol	s		8333666						
ANR	8333804	Symbol	& denum		8333666						
ANR	8333805	Symbol	denum		8333666						
ANR	8333806	Symbol	* value		8333666						
ANR	8333807	Symbol	id_string		8333666						
ANR	8333808	Symbol	value		8333666						
ANR	8333809	Symbol	key		8333666						
ANR	8333810	Function	status_patterns	389:0:13466:14298							
ANR	8333811	FunctionDef	"status_patterns (stream * s , pcl_state_t * pcs , pcl_data_storage_t storage)"		8333810	0					
ANR	8333812	CompoundStatement		391:0:13552:14298	8333810	0					
ANR	8333813	IfStatement	if ( storage == 0 )		8333810	0					
ANR	8333814	Condition	storage == 0	392:8:13562:13573	8333810	0	True				
ANR	8333815	EqualityExpression	storage == 0		8333810	0		==			
ANR	8333816	Identifier	storage		8333810	0					
ANR	8333817	PrimaryExpression	0		8333810	1					
ANR	8333818	CompoundStatement		4:8:75:132	8333810	1					
ANR	8333819	IdentifierDeclStatement	int id = pcs -> current_pattern_id ;	393:8:13586:13618	8333810	0	True				
ANR	8333820	IdentifierDecl	id = pcs -> current_pattern_id		8333810	0					
ANR	8333821	IdentifierDeclType	int		8333810	0					
ANR	8333822	Identifier	id		8333810	1					
ANR	8333823	AssignmentExpression	id = pcs -> current_pattern_id		8333810	2		=			
ANR	8333824	Identifier	id		8333810	0					
ANR	8333825	PtrMemberAccess	pcs -> current_pattern_id		8333810	1					
ANR	8333826	Identifier	pcs		8333810	0					
ANR	8333827	Identifier	current_pattern_id		8333810	1					
ANR	8333828	IdentifierDeclStatement	"pcl_pattern_t * pptrn = pcl_pattern_get_pcl_uptrn ( pcs , id ) ;"	394:8:13628:13685	8333810	1	True				
ANR	8333829	IdentifierDecl	"* pptrn = pcl_pattern_get_pcl_uptrn ( pcs , id )"		8333810	0					
ANR	8333830	IdentifierDeclType	pcl_pattern_t *		8333810	0					
ANR	8333831	Identifier	pptrn		8333810	1					
ANR	8333832	AssignmentExpression	"* pptrn = pcl_pattern_get_pcl_uptrn ( pcs , id )"		8333810	2		=			
ANR	8333833	Identifier	pptrn		8333810	0					
ANR	8333834	CallExpression	"pcl_pattern_get_pcl_uptrn ( pcs , id )"		8333810	1					
ANR	8333835	Callee	pcl_pattern_get_pcl_uptrn		8333810	0					
ANR	8333836	Identifier	pcl_pattern_get_pcl_uptrn		8333810	0					
ANR	8333837	ArgumentList	pcs		8333810	1					
ANR	8333838	Argument	pcs		8333810	0					
ANR	8333839	Identifier	pcs		8333810	0					
ANR	8333840	Argument	id		8333810	1					
ANR	8333841	Identifier	id		8333810	0					
ANR	8333842	IfStatement	if ( ( pptrn != 0 ) && ( pcs -> pattern_type == pcl_pattern_user_defined ) )		8333810	2					
ANR	8333843	Condition	( pptrn != 0 ) && ( pcs -> pattern_type == pcl_pattern_user_defined )	396:12:13700:13762	8333810	0	True				
ANR	8333844	AndExpression	( pptrn != 0 ) && ( pcs -> pattern_type == pcl_pattern_user_defined )		8333810	0		&&			
ANR	8333845	EqualityExpression	pptrn != 0		8333810	0		!=			
ANR	8333846	Identifier	pptrn		8333810	0					
ANR	8333847	PrimaryExpression	0		8333810	1					
ANR	8333848	EqualityExpression	pcs -> pattern_type == pcl_pattern_user_defined		8333810	1		==			
ANR	8333849	PtrMemberAccess	pcs -> pattern_type		8333810	0					
ANR	8333850	Identifier	pcs		8333810	0					
ANR	8333851	Identifier	pattern_type		8333810	1					
ANR	8333852	Identifier	pcl_pattern_user_defined		8333810	1					
ANR	8333853	CompoundStatement		7:12:226:243	8333810	1					
ANR	8333854	IdentifierDeclStatement	char id_string [ 6 ] ;	397:12:13779:13796	8333810	0	True				
ANR	8333855	IdentifierDecl	id_string [ 6 ]		8333810	0					
ANR	8333856	IdentifierDeclType	char [ 6 ]		8333810	0					
ANR	8333857	Identifier	id_string		8333810	1					
ANR	8333858	PrimaryExpression	6		8333810	2					
ANR	8333859	ExpressionStatement	"gs_sprintf ( id_string , ""%u"" , id )"	399:12:13811:13842	8333810	1	True				
ANR	8333860	CallExpression	"gs_sprintf ( id_string , ""%u"" , id )"		8333810	0					
ANR	8333861	Callee	gs_sprintf		8333810	0					
ANR	8333862	Identifier	gs_sprintf		8333810	0					
ANR	8333863	ArgumentList	id_string		8333810	1					
ANR	8333864	Argument	id_string		8333810	0					
ANR	8333865	Identifier	id_string		8333810	0					
ANR	8333866	Argument	"""%u"""		8333810	1					
ANR	8333867	PrimaryExpression	"""%u"""		8333810	0					
ANR	8333868	Argument	id		8333810	2					
ANR	8333869	Identifier	id		8333810	0					
ANR	8333870	ExpressionStatement	"status_put_id ( s , ""IDLIST"" , id_string )"	400:12:13856:13893	8333810	2	True				
ANR	8333871	CallExpression	"status_put_id ( s , ""IDLIST"" , id_string )"		8333810	0					
ANR	8333872	Callee	status_put_id		8333810	0					
ANR	8333873	Identifier	status_put_id		8333810	0					
ANR	8333874	ArgumentList	s		8333810	1					
ANR	8333875	Argument	s		8333810	0					
ANR	8333876	Identifier	s		8333810	0					
ANR	8333877	Argument	"""IDLIST"""		8333810	1					
ANR	8333878	PrimaryExpression	"""IDLIST"""		8333810	0					
ANR	8333879	Argument	id_string		8333810	2					
ANR	8333880	Identifier	id_string		8333810	0					
ANR	8333881	ElseStatement	else		8333810	0					
ANR	8333882	CompoundStatement		13:8:373:379	8333810	0					
ANR	8333883	IdentifierDeclStatement	int id ;	403:8:13926:13932	8333810	0	True				
ANR	8333884	IdentifierDecl	id		8333810	0					
ANR	8333885	IdentifierDeclType	int		8333810	0					
ANR	8333886	Identifier	id		8333810	1					
ANR	8333887	ForStatement	for ( id = 0 ; id < ( 1L << 15 ) - 1 ; id ++ )		8333810	1					
ANR	8333888	ForInit	id = 0 ;	405:13:13948:13954	8333810	0	True				
ANR	8333889	AssignmentExpression	id = 0		8333810	0		=			
ANR	8333890	Identifier	id		8333810	0					
ANR	8333891	PrimaryExpression	0		8333810	1					
ANR	8333892	Condition	id < ( 1L << 15 ) - 1	405:21:13956:13974	8333810	1	True				
ANR	8333893	RelationalExpression	id < ( 1L << 15 ) - 1		8333810	0		<			
ANR	8333894	Identifier	id		8333810	0					
ANR	8333895	AdditiveExpression	( 1L << 15 ) - 1		8333810	1		-			
ANR	8333896	ShiftExpression	1L << 15		8333810	0		<<			
ANR	8333897	PrimaryExpression	1L		8333810	0					
ANR	8333898	PrimaryExpression	15		8333810	1					
ANR	8333899	PrimaryExpression	1		8333810	1					
ANR	8333900	PostIncDecOperationExpression	id ++	405:42:13977:13980	8333810	2	True				
ANR	8333901	Identifier	id		8333810	0					
ANR	8333902	IncDec	++		8333810	1					
ANR	8333903	CompoundStatement		16:12:444:501	8333810	3					
ANR	8333904	IdentifierDeclStatement	"pcl_pattern_t * pptrn = pcl_pattern_get_pcl_uptrn ( pcs , id ) ;"	406:12:13997:14054	8333810	0	True				
ANR	8333905	IdentifierDecl	"* pptrn = pcl_pattern_get_pcl_uptrn ( pcs , id )"		8333810	0					
ANR	8333906	IdentifierDeclType	pcl_pattern_t *		8333810	0					
ANR	8333907	Identifier	pptrn		8333810	1					
ANR	8333908	AssignmentExpression	"* pptrn = pcl_pattern_get_pcl_uptrn ( pcs , id )"		8333810	2		=			
ANR	8333909	Identifier	pptrn		8333810	0					
ANR	8333910	CallExpression	"pcl_pattern_get_pcl_uptrn ( pcs , id )"		8333810	1					
ANR	8333911	Callee	pcl_pattern_get_pcl_uptrn		8333810	0					
ANR	8333912	Identifier	pcl_pattern_get_pcl_uptrn		8333810	0					
ANR	8333913	ArgumentList	pcs		8333810	1					
ANR	8333914	Argument	pcs		8333810	0					
ANR	8333915	Identifier	pcs		8333810	0					
ANR	8333916	Argument	id		8333810	1					
ANR	8333917	Identifier	id		8333810	0					
ANR	8333918	IfStatement	if ( pptrn != 0 )		8333810	1					
ANR	8333919	Condition	pptrn != 0	408:16:14073:14082	8333810	0	True				
ANR	8333920	EqualityExpression	pptrn != 0		8333810	0		!=			
ANR	8333921	Identifier	pptrn		8333810	0					
ANR	8333922	PrimaryExpression	0		8333810	1					
ANR	8333923	CompoundStatement		19:16:550:567	8333810	1					
ANR	8333924	IdentifierDeclStatement	char id_string [ 6 ] ;	409:16:14103:14120	8333810	0	True				
ANR	8333925	IdentifierDecl	id_string [ 6 ]		8333810	0					
ANR	8333926	IdentifierDeclType	char [ 6 ]		8333810	0					
ANR	8333927	Identifier	id_string		8333810	1					
ANR	8333928	PrimaryExpression	6		8333810	2					
ANR	8333929	ExpressionStatement	"gs_sprintf ( id_string , ""%u"" , id )"	411:16:14139:14170	8333810	1	True				
ANR	8333930	CallExpression	"gs_sprintf ( id_string , ""%u"" , id )"		8333810	0					
ANR	8333931	Callee	gs_sprintf		8333810	0					
ANR	8333932	Identifier	gs_sprintf		8333810	0					
ANR	8333933	ArgumentList	id_string		8333810	1					
ANR	8333934	Argument	id_string		8333810	0					
ANR	8333935	Identifier	id_string		8333810	0					
ANR	8333936	Argument	"""%u"""		8333810	1					
ANR	8333937	PrimaryExpression	"""%u"""		8333810	0					
ANR	8333938	Argument	id		8333810	2					
ANR	8333939	Identifier	id		8333810	0					
ANR	8333940	ExpressionStatement	"status_put_id ( s , ""IDLIST"" , id_string )"	412:16:14188:14225	8333810	2	True				
ANR	8333941	CallExpression	"status_put_id ( s , ""IDLIST"" , id_string )"		8333810	0					
ANR	8333942	Callee	status_put_id		8333810	0					
ANR	8333943	Identifier	status_put_id		8333810	0					
ANR	8333944	ArgumentList	s		8333810	1					
ANR	8333945	Argument	s		8333810	0					
ANR	8333946	Identifier	s		8333810	0					
ANR	8333947	Argument	"""IDLIST"""		8333810	1					
ANR	8333948	PrimaryExpression	"""IDLIST"""		8333810	0					
ANR	8333949	Argument	id_string		8333810	2					
ANR	8333950	Identifier	id_string		8333810	0					
ANR	8333951	ExpressionStatement	status_end_id_list ( s )	416:4:14261:14282	8333810	1	True				
ANR	8333952	CallExpression	status_end_id_list ( s )		8333810	0					
ANR	8333953	Callee	status_end_id_list		8333810	0					
ANR	8333954	Identifier	status_end_id_list		8333810	0					
ANR	8333955	ArgumentList	s		8333810	1					
ANR	8333956	Argument	s		8333810	0					
ANR	8333957	Identifier	s		8333810	0					
ANR	8333958	ReturnStatement	return 0 ;	417:4:14288:14296	8333810	2	True				
ANR	8333959	PrimaryExpression	0		8333810	0					
ANR	8333960	ReturnType	static int		8333810	1					
ANR	8333961	Identifier	status_patterns		8333810	2					
ANR	8333962	ParameterList	"stream * s , pcl_state_t * pcs , pcl_data_storage_t storage"		8333810	3					
ANR	8333963	Parameter	stream * s	390:16:13493:13502	8333810	0	True				
ANR	8333964	ParameterType	stream *		8333810	0					
ANR	8333965	Identifier	s		8333810	1					
ANR	8333966	Parameter	pcl_state_t * pcs	390:28:13505:13521	8333810	1	True				
ANR	8333967	ParameterType	pcl_state_t *		8333810	0					
ANR	8333968	Identifier	pcs		8333810	1					
ANR	8333969	Parameter	pcl_data_storage_t storage	390:47:13524:13549	8333810	2	True				
ANR	8333970	ParameterType	pcl_data_storage_t		8333810	0					
ANR	8333971	Identifier	storage		8333810	1					
ANR	8333972	CFGEntryNode	ENTRY		8333810		True				
ANR	8333973	CFGExitNode	EXIT		8333810		True				
ANR	8333974	Symbol	pcs		8333810						
ANR	8333975	Symbol	s		8333810						
ANR	8333976	Symbol	pcs -> current_pattern_id		8333810						
ANR	8333977	Symbol	pcl_pattern_user_defined		8333810						
ANR	8333978	Symbol	id_string		8333810						
ANR	8333979	Symbol	* pcs		8333810						
ANR	8333980	Symbol	pcl_pattern_get_pcl_uptrn		8333810						
ANR	8333981	Symbol	storage		8333810						
ANR	8333982	Symbol	id		8333810						
ANR	8333983	Symbol	pptrn		8333810						
ANR	8333984	Symbol	pcs -> pattern_type		8333810						
ANR	8333985	Function	status_check_symbol_set	420:0:14301:14968							
ANR	8333986	FunctionDef	"status_check_symbol_set (pcl_state_t * pcs , pl_symbol_map_t * mapp , pcl_data_storage_t storage)"		8333985	0					
ANR	8333987	CompoundStatement		423:0:14509:14968	8333985	0					
ANR	8333988	IdentifierDeclStatement	gs_const_string key ;	424:4:14515:14534	8333985	0	True				
ANR	8333989	IdentifierDecl	key		8333985	0					
ANR	8333990	IdentifierDeclType	gs_const_string		8333985	0					
ANR	8333991	Identifier	key		8333985	1					
ANR	8333992	IdentifierDeclStatement	void * value ;	425:4:14540:14551	8333985	1	True				
ANR	8333993	IdentifierDecl	* value		8333985	0					
ANR	8333994	IdentifierDeclType	void *		8333985	0					
ANR	8333995	Identifier	value		8333985	1					
ANR	8333996	IdentifierDeclStatement	pl_dict_enum_t fenum ;	426:4:14557:14577	8333985	2	True				
ANR	8333997	IdentifierDecl	fenum		8333985	0					
ANR	8333998	IdentifierDeclType	pl_dict_enum_t		8333985	0					
ANR	8333999	Identifier	fenum		8333985	1					
ANR	8334000	ExpressionStatement	"pl_dict_enum_begin ( & pcs -> soft_fonts , & fenum )"	428:4:14584:14628	8333985	3	True				
ANR	8334001	CallExpression	"pl_dict_enum_begin ( & pcs -> soft_fonts , & fenum )"		8333985	0					
ANR	8334002	Callee	pl_dict_enum_begin		8333985	0					
ANR	8334003	Identifier	pl_dict_enum_begin		8333985	0					
ANR	8334004	ArgumentList	& pcs -> soft_fonts		8333985	1					
ANR	8334005	Argument	& pcs -> soft_fonts		8333985	0					
ANR	8334006	UnaryOperationExpression	& pcs -> soft_fonts		8333985	0					
ANR	8334007	UnaryOperator	&		8333985	0					
ANR	8334008	PtrMemberAccess	pcs -> soft_fonts		8333985	1					
ANR	8334009	Identifier	pcs		8333985	0					
ANR	8334010	Identifier	soft_fonts		8333985	1					
ANR	8334011	Argument	& fenum		8333985	1					
ANR	8334012	UnaryOperationExpression	& fenum		8333985	0					
ANR	8334013	UnaryOperator	&		8333985	0					
ANR	8334014	Identifier	fenum		8333985	1					
ANR	8334015	WhileStatement	"while ( pl_dict_enum_next ( & fenum , & key , & value ) )"		8333985	4					
ANR	8334016	Condition	"pl_dict_enum_next ( & fenum , & key , & value )"	429:11:14641:14679	8333985	0	True				
ANR	8334017	CallExpression	"pl_dict_enum_next ( & fenum , & key , & value )"		8333985	0					
ANR	8334018	Callee	pl_dict_enum_next		8333985	0					
ANR	8334019	Identifier	pl_dict_enum_next		8333985	0					
ANR	8334020	ArgumentList	& fenum		8333985	1					
ANR	8334021	Argument	& fenum		8333985	0					
ANR	8334022	UnaryOperationExpression	& fenum		8333985	0					
ANR	8334023	UnaryOperator	&		8333985	0					
ANR	8334024	Identifier	fenum		8333985	1					
ANR	8334025	Argument	& key		8333985	1					
ANR	8334026	UnaryOperationExpression	& key		8333985	0					
ANR	8334027	UnaryOperator	&		8333985	0					
ANR	8334028	Identifier	key		8333985	1					
ANR	8334029	Argument	& value		8333985	2					
ANR	8334030	UnaryOperationExpression	& value		8333985	0					
ANR	8334031	UnaryOperator	&		8333985	0					
ANR	8334032	Identifier	value		8333985	1					
ANR	8334033	CompoundStatement		8:8:182:217	8333985	1					
ANR	8334034	IdentifierDeclStatement	pl_font_t * fp = ( pl_font_t * ) value ;	430:8:14692:14727	8333985	0	True				
ANR	8334035	IdentifierDecl	* fp = ( pl_font_t * ) value		8333985	0					
ANR	8334036	IdentifierDeclType	pl_font_t *		8333985	0					
ANR	8334037	Identifier	fp		8333985	1					
ANR	8334038	AssignmentExpression	* fp = ( pl_font_t * ) value		8333985	2		=			
ANR	8334039	Identifier	fp		8333985	0					
ANR	8334040	CastExpression	( pl_font_t * ) value		8333985	1					
ANR	8334041	CastTarget	pl_font_t *		8333985	0					
ANR	8334042	Identifier	value		8333985	1					
ANR	8334043	IfStatement	if ( fp -> storage != storage )		8333985	1					
ANR	8334044	Condition	fp -> storage != storage	432:12:14742:14763	8333985	0	True				
ANR	8334045	EqualityExpression	fp -> storage != storage		8333985	0		!=			
ANR	8334046	PtrMemberAccess	fp -> storage		8333985	0					
ANR	8334047	Identifier	fp		8333985	0					
ANR	8334048	Identifier	storage		8333985	1					
ANR	8334049	Identifier	storage		8333985	1					
ANR	8334050	ContinueStatement	continue ;	433:12:14778:14786	8333985	1	True				
ANR	8334051	IfStatement	"if ( pcl_check_symbol_support ( mapp -> character_requirements , fp -> character_complement ) )"		8333985	2					
ANR	8334052	Condition	"pcl_check_symbol_support ( mapp -> character_requirements , fp -> character_complement )"	434:12:14800:14916	8333985	0	True				
ANR	8334053	CallExpression	"pcl_check_symbol_support ( mapp -> character_requirements , fp -> character_complement )"		8333985	0					
ANR	8334054	Callee	pcl_check_symbol_support		8333985	0					
ANR	8334055	Identifier	pcl_check_symbol_support		8333985	0					
ANR	8334056	ArgumentList	mapp -> character_requirements		8333985	1					
ANR	8334057	Argument	mapp -> character_requirements		8333985	0					
ANR	8334058	PtrMemberAccess	mapp -> character_requirements		8333985	0					
ANR	8334059	Identifier	mapp		8333985	0					
ANR	8334060	Identifier	character_requirements		8333985	1					
ANR	8334061	Argument	fp -> character_complement		8333985	1					
ANR	8334062	PtrMemberAccess	fp -> character_complement		8333985	0					
ANR	8334063	Identifier	fp		8333985	0					
ANR	8334064	Identifier	character_complement		8333985	1					
ANR	8334065	ReturnStatement	return true ;	436:12:14931:14942	8333985	1	True				
ANR	8334066	Identifier	true		8333985	0					
ANR	8334067	ReturnStatement	return false ;	438:4:14954:14966	8333985	5	True				
ANR	8334068	Identifier	false		8333985	0					
ANR	8334069	ReturnType	static bool		8333985	1					
ANR	8334070	Identifier	status_check_symbol_set		8333985	2					
ANR	8334071	ParameterList	"pcl_state_t * pcs , pl_symbol_map_t * mapp , pcl_data_storage_t storage"		8333985	3					
ANR	8334072	Parameter	pcl_state_t * pcs	421:24:14414:14430	8333985	0	True				
ANR	8334073	ParameterType	pcl_state_t *		8333985	0					
ANR	8334074	Identifier	pcs		8333985	1					
ANR	8334075	Parameter	pl_symbol_map_t * mapp	421:43:14433:14454	8333985	1	True				
ANR	8334076	ParameterType	pl_symbol_map_t *		8333985	0					
ANR	8334077	Identifier	mapp		8333985	1					
ANR	8334078	Parameter	pcl_data_storage_t storage	422:24:14481:14506	8333985	2	True				
ANR	8334079	ParameterType	pcl_data_storage_t		8333985	0					
ANR	8334080	Identifier	storage		8333985	1					
ANR	8334081	CFGEntryNode	ENTRY		8333985		True				
ANR	8334082	CFGExitNode	EXIT		8333985		True				
ANR	8334083	Symbol	pcs		8333985						
ANR	8334084	Symbol	& key		8333985						
ANR	8334085	Symbol	& value		8333985						
ANR	8334086	Symbol	mapp		8333985						
ANR	8334087	Symbol	false		8333985						
ANR	8334088	Symbol	fp		8333985						
ANR	8334089	Symbol	storage		8333985						
ANR	8334090	Symbol	fenum		8333985						
ANR	8334091	Symbol	* mapp		8333985						
ANR	8334092	Symbol	pl_dict_enum_next		8333985						
ANR	8334093	Symbol	* fp		8333985						
ANR	8334094	Symbol	& pcs -> soft_fonts		8333985						
ANR	8334095	Symbol	fp -> storage		8333985						
ANR	8334096	Symbol	pcl_check_symbol_support		8333985						
ANR	8334097	Symbol	fp -> character_complement		8333985						
ANR	8334098	Symbol	true		8333985						
ANR	8334099	Symbol	& fenum		8333985						
ANR	8334100	Symbol	value		8333985						
ANR	8334101	Symbol	mapp -> character_requirements		8333985						
ANR	8334102	Symbol	key		8333985						
ANR	8334103	Function	status_add_symbol_id	441:0:14971:15519							
ANR	8334104	FunctionDef	"status_add_symbol_id (ushort * idlist , int nid , ushort new_id)"		8334103	0					
ANR	8334105	CompoundStatement		443:0:15128:15519	8334103	0					
ANR	8334106	IdentifierDeclStatement	int i ;	444:4:15134:15139	8334103	0	True				
ANR	8334107	IdentifierDecl	i		8334103	0					
ANR	8334108	IdentifierDeclType	int		8334103	0					
ANR	8334109	Identifier	i		8334103	1					
ANR	8334110	IdentifierDeclStatement	ushort * idp ;	445:4:15145:15156	8334103	1	True				
ANR	8334111	IdentifierDecl	* idp		8334103	0					
ANR	8334112	IdentifierDeclType	ushort *		8334103	0					
ANR	8334113	Identifier	idp		8334103	1					
ANR	8334114	IdentifierDeclStatement	"ushort t1 , t2 ;"	446:4:15162:15175	8334103	2	True				
ANR	8334115	IdentifierDecl	t1		8334103	0					
ANR	8334116	IdentifierDeclType	ushort		8334103	0					
ANR	8334117	Identifier	t1		8334103	1					
ANR	8334118	IdentifierDecl	t2		8334103	1					
ANR	8334119	IdentifierDeclType	ushort		8334103	0					
ANR	8334120	Identifier	t2		8334103	1					
ANR	8334121	ForStatement	"for ( i = 0 , idp = idlist ; i < nid ; i ++ )"		8334103	3					
ANR	8334122	ForInit	"i = 0 , idp = idlist ;"	448:9:15187:15206	8334103	0	True				
ANR	8334123	Expression	"i = 0 , idp = idlist"		8334103	0					
ANR	8334124	AssignmentExpression	i = 0		8334103	0		=			
ANR	8334125	Identifier	i		8334103	0					
ANR	8334126	PrimaryExpression	0		8334103	1					
ANR	8334127	AssignmentExpression	idp = idlist		8334103	1		=			
ANR	8334128	Identifier	idp		8334103	0					
ANR	8334129	Identifier	idlist		8334103	1					
ANR	8334130	Condition	i < nid	448:30:15208:15214	8334103	1	True				
ANR	8334131	RelationalExpression	i < nid		8334103	0		<			
ANR	8334132	Identifier	i		8334103	0					
ANR	8334133	Identifier	nid		8334103	1					
ANR	8334134	PostIncDecOperationExpression	i ++	448:39:15217:15219	8334103	2	True				
ANR	8334135	Identifier	i		8334103	0					
ANR	8334136	IncDec	++		8334103	1					
ANR	8334137	IfStatement	if ( new_id <= * idp )		8334103	3					
ANR	8334138	Condition	new_id <= * idp	449:12:15234:15247	8334103	0	True				
ANR	8334139	RelationalExpression	new_id <= * idp		8334103	0		<=			
ANR	8334140	Identifier	new_id		8334103	0					
ANR	8334141	UnaryOperationExpression	* idp		8334103	1					
ANR	8334142	UnaryOperator	*		8334103	0					
ANR	8334143	Identifier	idp		8334103	1					
ANR	8334144	BreakStatement	break ;	450:12:15262:15267	8334103	1	True				
ANR	8334145	IfStatement	if ( new_id == * idp )		8334103	4					
ANR	8334146	Condition	new_id == * idp	451:8:15277:15290	8334103	0	True				
ANR	8334147	EqualityExpression	new_id == * idp		8334103	0		==			
ANR	8334148	Identifier	new_id		8334103	0					
ANR	8334149	UnaryOperationExpression	* idp		8334103	1					
ANR	8334150	UnaryOperator	*		8334103	0					
ANR	8334151	Identifier	idp		8334103	1					
ANR	8334152	ReturnStatement	return nid ;	452:8:15330:15340	8334103	1	True				
ANR	8334153	Identifier	nid		8334103	0					
ANR	8334154	ForStatement	for ( t1 = new_id ; i < nid ; i ++ )		8334103	5					
ANR	8334155	ForInit	t1 = new_id ;	454:9:15392:15403	8334103	0	True				
ANR	8334156	AssignmentExpression	t1 = new_id		8334103	0		=			
ANR	8334157	Identifier	t1		8334103	0					
ANR	8334158	Identifier	new_id		8334103	1					
ANR	8334159	Condition	i < nid	454:22:15405:15411	8334103	1	True				
ANR	8334160	RelationalExpression	i < nid		8334103	0		<			
ANR	8334161	Identifier	i		8334103	0					
ANR	8334162	Identifier	nid		8334103	1					
ANR	8334163	PostIncDecOperationExpression	i ++	454:31:15414:15416	8334103	2	True				
ANR	8334164	Identifier	i		8334103	0					
ANR	8334165	IncDec	++		8334103	1					
ANR	8334166	CompoundStatement		12:36:290:290	8334103	3					
ANR	8334167	ExpressionStatement	t2 = * idp	455:8:15429:15438	8334103	0	True				
ANR	8334168	AssignmentExpression	t2 = * idp		8334103	0		=			
ANR	8334169	Identifier	t2		8334103	0					
ANR	8334170	UnaryOperationExpression	* idp		8334103	1					
ANR	8334171	UnaryOperator	*		8334103	0					
ANR	8334172	Identifier	idp		8334103	1					
ANR	8334173	ExpressionStatement	* idp ++ = t1	456:8:15448:15459	8334103	1	True				
ANR	8334174	AssignmentExpression	* idp ++ = t1		8334103	0		=			
ANR	8334175	UnaryOperationExpression	* idp ++		8334103	0					
ANR	8334176	UnaryOperator	*		8334103	0					
ANR	8334177	PostIncDecOperationExpression	idp ++		8334103	1					
ANR	8334178	Identifier	idp		8334103	0					
ANR	8334179	IncDec	++		8334103	1					
ANR	8334180	Identifier	t1		8334103	1					
ANR	8334181	ExpressionStatement	t1 = t2	457:8:15469:15476	8334103	2	True				
ANR	8334182	AssignmentExpression	t1 = t2		8334103	0		=			
ANR	8334183	Identifier	t1		8334103	0					
ANR	8334184	Identifier	t2		8334103	1					
ANR	8334185	ExpressionStatement	* idp = t1	459:4:15488:15497	8334103	6	True				
ANR	8334186	AssignmentExpression	* idp = t1		8334103	0		=			
ANR	8334187	UnaryOperationExpression	* idp		8334103	0					
ANR	8334188	UnaryOperator	*		8334103	0					
ANR	8334189	Identifier	idp		8334103	1					
ANR	8334190	Identifier	t1		8334103	1					
ANR	8334191	ReturnStatement	return nid + 1 ;	460:4:15503:15517	8334103	7	True				
ANR	8334192	AdditiveExpression	nid + 1		8334103	0		+			
ANR	8334193	Identifier	nid		8334103	0					
ANR	8334194	PrimaryExpression	1		8334103	1					
ANR	8334195	ReturnType	static int		8334103	1					
ANR	8334196	Identifier	status_add_symbol_id		8334103	2					
ANR	8334197	ParameterList	"ushort * idlist , int nid , ushort new_id"		8334103	3					
ANR	8334198	Parameter	ushort * idlist	442:21:15087:15101	8334103	0	True				
ANR	8334199	ParameterType	ushort *		8334103	0					
ANR	8334200	Identifier	idlist		8334103	1					
ANR	8334201	Parameter	int nid	442:38:15104:15110	8334103	1	True				
ANR	8334202	ParameterType	int		8334103	0					
ANR	8334203	Identifier	nid		8334103	1					
ANR	8334204	Parameter	ushort new_id	442:47:15113:15125	8334103	2	True				
ANR	8334205	ParameterType	ushort		8334103	0					
ANR	8334206	Identifier	new_id		8334103	1					
ANR	8334207	CFGEntryNode	ENTRY		8334103		True				
ANR	8334208	CFGExitNode	EXIT		8334103		True				
ANR	8334209	Symbol	* idp		8334103						
ANR	8334210	Symbol	new_id		8334103						
ANR	8334211	Symbol	idp		8334103						
ANR	8334212	Symbol	nid		8334103						
ANR	8334213	Symbol	idlist		8334103						
ANR	8334214	Symbol	i		8334103						
ANR	8334215	Symbol	* idp ++		8334103						
ANR	8334216	Symbol	t1		8334103						
ANR	8334217	Symbol	t2		8334103						
ANR	8334218	Function	status_symbol_sets	463:0:15522:17683							
ANR	8334219	FunctionDef	"status_symbol_sets (stream * s , pcl_state_t * pcs , pcl_data_storage_t storage)"		8334218	0					
ANR	8334220	CompoundStatement		465:0:15611:17683	8334218	0					
ANR	8334221	IdentifierDeclStatement	gs_const_string key ;	466:4:15617:15636	8334218	0	True				
ANR	8334222	IdentifierDecl	key		8334218	0					
ANR	8334223	IdentifierDeclType	gs_const_string		8334218	0					
ANR	8334224	Identifier	key		8334218	1					
ANR	8334225	IdentifierDeclStatement	void * value ;	467:4:15642:15653	8334218	1	True				
ANR	8334226	IdentifierDecl	* value		8334218	0					
ANR	8334227	IdentifierDeclType	void *		8334218	0					
ANR	8334228	Identifier	value		8334218	1					
ANR	8334229	IdentifierDeclStatement	pl_dict_enum_t denum ;	468:4:15659:15679	8334218	2	True				
ANR	8334230	IdentifierDecl	denum		8334218	0					
ANR	8334231	IdentifierDeclType	pl_dict_enum_t		8334218	0					
ANR	8334232	Identifier	denum		8334218	1					
ANR	8334233	IdentifierDeclStatement	ushort * idlist ;	469:4:15685:15699	8334218	3	True				
ANR	8334234	IdentifierDecl	* idlist		8334218	0					
ANR	8334235	IdentifierDeclType	ushort *		8334218	0					
ANR	8334236	Identifier	idlist		8334218	1					
ANR	8334237	IdentifierDeclStatement	int nid ;	470:4:15705:15712	8334218	4	True				
ANR	8334238	IdentifierDecl	nid		8334218	0					
ANR	8334239	IdentifierDeclType	int		8334218	0					
ANR	8334240	Identifier	nid		8334218	1					
ANR	8334241	IfStatement	if ( storage == 0 )		8334218	5					
ANR	8334242	Condition	storage == 0	472:8:15723:15734	8334218	0	True				
ANR	8334243	EqualityExpression	storage == 0		8334218	0		==			
ANR	8334244	Identifier	storage		8334218	0					
ANR	8334245	PrimaryExpression	0		8334218	1					
ANR	8334246	ReturnStatement	return 0 ;	473:8:15745:15753	8334218	1	True				
ANR	8334247	PrimaryExpression	0		8334218	0					
ANR	8334248	ExpressionStatement	"nid = pl_dict_length ( & pcs -> soft_symbol_sets , false ) + pl_dict_length ( & pcs -> built_in_symbol_sets , false )"	480:4:16074:16185	8334218	6	True				
ANR	8334249	AssignmentExpression	"nid = pl_dict_length ( & pcs -> soft_symbol_sets , false ) + pl_dict_length ( & pcs -> built_in_symbol_sets , false )"		8334218	0		=			
ANR	8334250	Identifier	nid		8334218	0					
ANR	8334251	AdditiveExpression	"pl_dict_length ( & pcs -> soft_symbol_sets , false ) + pl_dict_length ( & pcs -> built_in_symbol_sets , false )"		8334218	1		+			
ANR	8334252	CallExpression	"pl_dict_length ( & pcs -> soft_symbol_sets , false )"		8334218	0					
ANR	8334253	Callee	pl_dict_length		8334218	0					
ANR	8334254	Identifier	pl_dict_length		8334218	0					
ANR	8334255	ArgumentList	& pcs -> soft_symbol_sets		8334218	1					
ANR	8334256	Argument	& pcs -> soft_symbol_sets		8334218	0					
ANR	8334257	UnaryOperationExpression	& pcs -> soft_symbol_sets		8334218	0					
ANR	8334258	UnaryOperator	&		8334218	0					
ANR	8334259	PtrMemberAccess	pcs -> soft_symbol_sets		8334218	1					
ANR	8334260	Identifier	pcs		8334218	0					
ANR	8334261	Identifier	soft_symbol_sets		8334218	1					
ANR	8334262	Argument	false		8334218	1					
ANR	8334263	Identifier	false		8334218	0					
ANR	8334264	CallExpression	"pl_dict_length ( & pcs -> built_in_symbol_sets , false )"		8334218	1					
ANR	8334265	Callee	pl_dict_length		8334218	0					
ANR	8334266	Identifier	pl_dict_length		8334218	0					
ANR	8334267	ArgumentList	& pcs -> built_in_symbol_sets		8334218	1					
ANR	8334268	Argument	& pcs -> built_in_symbol_sets		8334218	0					
ANR	8334269	UnaryOperationExpression	& pcs -> built_in_symbol_sets		8334218	0					
ANR	8334270	UnaryOperator	&		8334218	0					
ANR	8334271	PtrMemberAccess	pcs -> built_in_symbol_sets		8334218	1					
ANR	8334272	Identifier	pcs		8334218	0					
ANR	8334273	Identifier	built_in_symbol_sets		8334218	1					
ANR	8334274	Argument	false		8334218	1					
ANR	8334275	Identifier	false		8334218	0					
ANR	8334276	ExpressionStatement	"idlist = ( ushort * ) gs_alloc_bytes ( pcs -> memory , nid * sizeof ( ushort ) , ""status_symbol_sets(idlist)"" )"	482:4:16191:16329	8334218	7	True				
ANR	8334277	AssignmentExpression	"idlist = ( ushort * ) gs_alloc_bytes ( pcs -> memory , nid * sizeof ( ushort ) , ""status_symbol_sets(idlist)"" )"		8334218	0		=			
ANR	8334278	Identifier	idlist		8334218	0					
ANR	8334279	CastExpression	"( ushort * ) gs_alloc_bytes ( pcs -> memory , nid * sizeof ( ushort ) , ""status_symbol_sets(idlist)"" )"		8334218	1					
ANR	8334280	CastTarget	ushort *		8334218	0					
ANR	8334281	CallExpression	"gs_alloc_bytes ( pcs -> memory , nid * sizeof ( ushort ) , ""status_symbol_sets(idlist)"" )"		8334218	1					
ANR	8334282	Callee	gs_alloc_bytes		8334218	0					
ANR	8334283	Identifier	gs_alloc_bytes		8334218	0					
ANR	8334284	ArgumentList	pcs -> memory		8334218	1					
ANR	8334285	Argument	pcs -> memory		8334218	0					
ANR	8334286	PtrMemberAccess	pcs -> memory		8334218	0					
ANR	8334287	Identifier	pcs		8334218	0					
ANR	8334288	Identifier	memory		8334218	1					
ANR	8334289	Argument	nid * sizeof ( ushort )		8334218	1					
ANR	8334290	MultiplicativeExpression	nid * sizeof ( ushort )		8334218	0		*			
ANR	8334291	Identifier	nid		8334218	0					
ANR	8334292	SizeofExpression	sizeof ( ushort )		8334218	1					
ANR	8334293	Sizeof	sizeof		8334218	0					
ANR	8334294	SizeofOperand	ushort		8334218	1					
ANR	8334295	Argument	"""status_symbol_sets(idlist)"""		8334218	2					
ANR	8334296	PrimaryExpression	"""status_symbol_sets(idlist)"""		8334218	0					
ANR	8334297	IfStatement	if ( idlist == NULL )		8334218	8					
ANR	8334298	Condition	idlist == NULL	484:8:16339:16352	8334218	0	True				
ANR	8334299	EqualityExpression	idlist == NULL		8334218	0		==			
ANR	8334300	Identifier	idlist		8334218	0					
ANR	8334301	Identifier	NULL		8334218	1					
ANR	8334302	ReturnStatement	return e_Memory ;	485:8:16363:16378	8334218	1	True				
ANR	8334303	Identifier	e_Memory		8334218	0					
ANR	8334304	ExpressionStatement	nid = 0	486:4:16384:16391	8334218	9	True				
ANR	8334305	AssignmentExpression	nid = 0		8334218	0		=			
ANR	8334306	Identifier	nid		8334218	0					
ANR	8334307	PrimaryExpression	0		8334218	1					
ANR	8334308	ExpressionStatement	"pl_dict_set_parent ( & pcs -> soft_symbol_sets , & pcs -> built_in_symbol_sets )"	495:4:16732:16802	8334218	10	True				
ANR	8334309	CallExpression	"pl_dict_set_parent ( & pcs -> soft_symbol_sets , & pcs -> built_in_symbol_sets )"		8334218	0					
ANR	8334310	Callee	pl_dict_set_parent		8334218	0					
ANR	8334311	Identifier	pl_dict_set_parent		8334218	0					
ANR	8334312	ArgumentList	& pcs -> soft_symbol_sets		8334218	1					
ANR	8334313	Argument	& pcs -> soft_symbol_sets		8334218	0					
ANR	8334314	UnaryOperationExpression	& pcs -> soft_symbol_sets		8334218	0					
ANR	8334315	UnaryOperator	&		8334218	0					
ANR	8334316	PtrMemberAccess	pcs -> soft_symbol_sets		8334218	1					
ANR	8334317	Identifier	pcs		8334218	0					
ANR	8334318	Identifier	soft_symbol_sets		8334218	1					
ANR	8334319	Argument	& pcs -> built_in_symbol_sets		8334218	1					
ANR	8334320	UnaryOperationExpression	& pcs -> built_in_symbol_sets		8334218	0					
ANR	8334321	UnaryOperator	&		8334218	0					
ANR	8334322	PtrMemberAccess	pcs -> built_in_symbol_sets		8334218	1					
ANR	8334323	Identifier	pcs		8334218	0					
ANR	8334324	Identifier	built_in_symbol_sets		8334218	1					
ANR	8334325	ExpressionStatement	"pl_dict_enum_begin ( & pcs -> soft_symbol_sets , & denum )"	496:4:16808:16858	8334218	11	True				
ANR	8334326	CallExpression	"pl_dict_enum_begin ( & pcs -> soft_symbol_sets , & denum )"		8334218	0					
ANR	8334327	Callee	pl_dict_enum_begin		8334218	0					
ANR	8334328	Identifier	pl_dict_enum_begin		8334218	0					
ANR	8334329	ArgumentList	& pcs -> soft_symbol_sets		8334218	1					
ANR	8334330	Argument	& pcs -> soft_symbol_sets		8334218	0					
ANR	8334331	UnaryOperationExpression	& pcs -> soft_symbol_sets		8334218	0					
ANR	8334332	UnaryOperator	&		8334218	0					
ANR	8334333	PtrMemberAccess	pcs -> soft_symbol_sets		8334218	1					
ANR	8334334	Identifier	pcs		8334218	0					
ANR	8334335	Identifier	soft_symbol_sets		8334218	1					
ANR	8334336	Argument	& denum		8334218	1					
ANR	8334337	UnaryOperationExpression	& denum		8334218	0					
ANR	8334338	UnaryOperator	&		8334218	0					
ANR	8334339	Identifier	denum		8334218	1					
ANR	8334340	WhileStatement	"while ( pl_dict_enum_next ( & denum , & key , & value ) )"		8334218	12					
ANR	8334341	Condition	"pl_dict_enum_next ( & denum , & key , & value )"	497:11:16871:16909	8334218	0	True				
ANR	8334342	CallExpression	"pl_dict_enum_next ( & denum , & key , & value )"		8334218	0					
ANR	8334343	Callee	pl_dict_enum_next		8334218	0					
ANR	8334344	Identifier	pl_dict_enum_next		8334218	0					
ANR	8334345	ArgumentList	& denum		8334218	1					
ANR	8334346	Argument	& denum		8334218	0					
ANR	8334347	UnaryOperationExpression	& denum		8334218	0					
ANR	8334348	UnaryOperator	&		8334218	0					
ANR	8334349	Identifier	denum		8334218	1					
ANR	8334350	Argument	& key		8334218	1					
ANR	8334351	UnaryOperationExpression	& key		8334218	0					
ANR	8334352	UnaryOperator	&		8334218	0					
ANR	8334353	Identifier	key		8334218	1					
ANR	8334354	Argument	& value		8334218	2					
ANR	8334355	UnaryOperationExpression	& value		8334218	0					
ANR	8334356	UnaryOperator	&		8334218	0					
ANR	8334357	Identifier	value		8334218	1					
ANR	8334358	CompoundStatement		35:8:1370:1394	8334218	1					
ANR	8334359	IdentifierDeclStatement	pcl_symbol_set_t * ssp = ( pcl_symbol_set_t * ) value ;	498:8:16922:16972	8334218	0	True				
ANR	8334360	IdentifierDecl	* ssp = ( pcl_symbol_set_t * ) value		8334218	0					
ANR	8334361	IdentifierDeclType	pcl_symbol_set_t *		8334218	0					
ANR	8334362	Identifier	ssp		8334218	1					
ANR	8334363	AssignmentExpression	* ssp = ( pcl_symbol_set_t * ) value		8334218	2		=			
ANR	8334364	Identifier	ssp		8334218	0					
ANR	8334365	CastExpression	( pcl_symbol_set_t * ) value		8334218	1					
ANR	8334366	CastTarget	pcl_symbol_set_t *		8334218	0					
ANR	8334367	Identifier	value		8334218	1					
ANR	8334368	IdentifierDeclStatement	pl_glyph_vocabulary_t gx ;	499:8:16982:17006	8334218	1	True				
ANR	8334369	IdentifierDecl	gx		8334218	0					
ANR	8334370	IdentifierDeclType	pl_glyph_vocabulary_t		8334218	0					
ANR	8334371	Identifier	gx		8334218	1					
ANR	8334372	ForStatement	for ( gx = plgv_MSL ; gx < plgv_next ; gx ++ )		8334218	2					
ANR	8334373	ForInit	gx = plgv_MSL ;	501:13:17022:17035	8334218	0	True				
ANR	8334374	AssignmentExpression	gx = plgv_MSL		8334218	0		=			
ANR	8334375	Identifier	gx		8334218	0					
ANR	8334376	Identifier	plgv_MSL		8334218	1					
ANR	8334377	Condition	gx < plgv_next	501:28:17037:17050	8334218	1	True				
ANR	8334378	RelationalExpression	gx < plgv_next		8334218	0		<			
ANR	8334379	Identifier	gx		8334218	0					
ANR	8334380	Identifier	plgv_next		8334218	1					
ANR	8334381	PostIncDecOperationExpression	gx ++	501:44:17053:17056	8334218	2	True				
ANR	8334382	Identifier	gx		8334218	0					
ANR	8334383	IncDec	++		8334218	1					
ANR	8334384	IfStatement	"if ( ssp -> maps [ gx ] != NULL && status_check_symbol_set ( pcs , ssp -> maps [ gx ] , storage ) )"		8334218	3					
ANR	8334385	Condition	"ssp -> maps [ gx ] != NULL && status_check_symbol_set ( pcs , ssp -> maps [ gx ] , storage )"	502:16:17075:17167	8334218	0	True				
ANR	8334386	AndExpression	"ssp -> maps [ gx ] != NULL && status_check_symbol_set ( pcs , ssp -> maps [ gx ] , storage )"		8334218	0		&&			
ANR	8334387	EqualityExpression	ssp -> maps [ gx ] != NULL		8334218	0		!=			
ANR	8334388	ArrayIndexing	ssp -> maps [ gx ]		8334218	0					
ANR	8334389	PtrMemberAccess	ssp -> maps		8334218	0					
ANR	8334390	Identifier	ssp		8334218	0					
ANR	8334391	Identifier	maps		8334218	1					
ANR	8334392	Identifier	gx		8334218	1					
ANR	8334393	Identifier	NULL		8334218	1					
ANR	8334394	CallExpression	"status_check_symbol_set ( pcs , ssp -> maps [ gx ] , storage )"		8334218	1					
ANR	8334395	Callee	status_check_symbol_set		8334218	0					
ANR	8334396	Identifier	status_check_symbol_set		8334218	0					
ANR	8334397	ArgumentList	pcs		8334218	1					
ANR	8334398	Argument	pcs		8334218	0					
ANR	8334399	Identifier	pcs		8334218	0					
ANR	8334400	Argument	ssp -> maps [ gx ]		8334218	1					
ANR	8334401	ArrayIndexing	ssp -> maps [ gx ]		8334218	0					
ANR	8334402	PtrMemberAccess	ssp -> maps		8334218	0					
ANR	8334403	Identifier	ssp		8334218	0					
ANR	8334404	Identifier	maps		8334218	1					
ANR	8334405	Identifier	gx		8334218	1					
ANR	8334406	Argument	storage		8334218	2					
ANR	8334407	Identifier	storage		8334218	0					
ANR	8334408	CompoundStatement		39:70:1558:1558	8334218	1					
ANR	8334409	ExpressionStatement	"nid = status_add_symbol_id ( idlist , nid , ( ssp -> maps [ gx ] -> id [ 0 ] << 8 ) + ssp -> maps [ gx ] -> id [ 1 ] )"	504:16:17188:17365	8334218	0	True				
ANR	8334410	AssignmentExpression	"nid = status_add_symbol_id ( idlist , nid , ( ssp -> maps [ gx ] -> id [ 0 ] << 8 ) + ssp -> maps [ gx ] -> id [ 1 ] )"		8334218	0		=			
ANR	8334411	Identifier	nid		8334218	0					
ANR	8334412	CallExpression	"status_add_symbol_id ( idlist , nid , ( ssp -> maps [ gx ] -> id [ 0 ] << 8 ) + ssp -> maps [ gx ] -> id [ 1 ] )"		8334218	1					
ANR	8334413	Callee	status_add_symbol_id		8334218	0					
ANR	8334414	Identifier	status_add_symbol_id		8334218	0					
ANR	8334415	ArgumentList	idlist		8334218	1					
ANR	8334416	Argument	idlist		8334218	0					
ANR	8334417	Identifier	idlist		8334218	0					
ANR	8334418	Argument	nid		8334218	1					
ANR	8334419	Identifier	nid		8334218	0					
ANR	8334420	Argument	( ssp -> maps [ gx ] -> id [ 0 ] << 8 ) + ssp -> maps [ gx ] -> id [ 1 ]		8334218	2					
ANR	8334421	AdditiveExpression	( ssp -> maps [ gx ] -> id [ 0 ] << 8 ) + ssp -> maps [ gx ] -> id [ 1 ]		8334218	0		+			
ANR	8334422	ShiftExpression	ssp -> maps [ gx ] -> id [ 0 ] << 8		8334218	0		<<			
ANR	8334423	ArrayIndexing	ssp -> maps [ gx ] -> id [ 0 ]		8334218	0					
ANR	8334424	PtrMemberAccess	ssp -> maps [ gx ] -> id		8334218	0					
ANR	8334425	ArrayIndexing	ssp -> maps [ gx ]		8334218	0					
ANR	8334426	PtrMemberAccess	ssp -> maps		8334218	0					
ANR	8334427	Identifier	ssp		8334218	0					
ANR	8334428	Identifier	maps		8334218	1					
ANR	8334429	Identifier	gx		8334218	1					
ANR	8334430	Identifier	id		8334218	1					
ANR	8334431	PrimaryExpression	0		8334218	1					
ANR	8334432	PrimaryExpression	8		8334218	1					
ANR	8334433	ArrayIndexing	ssp -> maps [ gx ] -> id [ 1 ]		8334218	1					
ANR	8334434	PtrMemberAccess	ssp -> maps [ gx ] -> id		8334218	0					
ANR	8334435	ArrayIndexing	ssp -> maps [ gx ]		8334218	0					
ANR	8334436	PtrMemberAccess	ssp -> maps		8334218	0					
ANR	8334437	Identifier	ssp		8334218	0					
ANR	8334438	Identifier	maps		8334218	1					
ANR	8334439	Identifier	gx		8334218	1					
ANR	8334440	Identifier	id		8334218	1					
ANR	8334441	PrimaryExpression	1		8334218	1					
ANR	8334442	BreakStatement	break ;	507:16:17383:17388	8334218	1	True				
ANR	8334443	ExpressionStatement	"pl_dict_set_parent ( & pcs -> soft_symbol_sets , NULL )"	510:4:17446:17494	8334218	13	True				
ANR	8334444	CallExpression	"pl_dict_set_parent ( & pcs -> soft_symbol_sets , NULL )"		8334218	0					
ANR	8334445	Callee	pl_dict_set_parent		8334218	0					
ANR	8334446	Identifier	pl_dict_set_parent		8334218	0					
ANR	8334447	ArgumentList	& pcs -> soft_symbol_sets		8334218	1					
ANR	8334448	Argument	& pcs -> soft_symbol_sets		8334218	0					
ANR	8334449	UnaryOperationExpression	& pcs -> soft_symbol_sets		8334218	0					
ANR	8334450	UnaryOperator	&		8334218	0					
ANR	8334451	PtrMemberAccess	pcs -> soft_symbol_sets		8334218	1					
ANR	8334452	Identifier	pcs		8334218	0					
ANR	8334453	Identifier	soft_symbol_sets		8334218	1					
ANR	8334454	Argument	NULL		8334218	1					
ANR	8334455	Identifier	NULL		8334218	0					
ANR	8334456	ExpressionStatement	"status_print_idlist ( s , idlist , nid , ""IDLIST"" )"	513:4:17543:17588	8334218	14	True				
ANR	8334457	CallExpression	"status_print_idlist ( s , idlist , nid , ""IDLIST"" )"		8334218	0					
ANR	8334458	Callee	status_print_idlist		8334218	0					
ANR	8334459	Identifier	status_print_idlist		8334218	0					
ANR	8334460	ArgumentList	s		8334218	1					
ANR	8334461	Argument	s		8334218	0					
ANR	8334462	Identifier	s		8334218	0					
ANR	8334463	Argument	idlist		8334218	1					
ANR	8334464	Identifier	idlist		8334218	0					
ANR	8334465	Argument	nid		8334218	2					
ANR	8334466	Identifier	nid		8334218	0					
ANR	8334467	Argument	"""IDLIST"""		8334218	3					
ANR	8334468	PrimaryExpression	"""IDLIST"""		8334218	0					
ANR	8334469	ExpressionStatement	"gs_free_object ( pcs -> memory , ( void * ) idlist , ""status_symbol_sets(idlist)"" )"	514:4:17594:17667	8334218	15	True				
ANR	8334470	CallExpression	"gs_free_object ( pcs -> memory , ( void * ) idlist , ""status_symbol_sets(idlist)"" )"		8334218	0					
ANR	8334471	Callee	gs_free_object		8334218	0					
ANR	8334472	Identifier	gs_free_object		8334218	0					
ANR	8334473	ArgumentList	pcs -> memory		8334218	1					
ANR	8334474	Argument	pcs -> memory		8334218	0					
ANR	8334475	PtrMemberAccess	pcs -> memory		8334218	0					
ANR	8334476	Identifier	pcs		8334218	0					
ANR	8334477	Identifier	memory		8334218	1					
ANR	8334478	Argument	( void * ) idlist		8334218	1					
ANR	8334479	CastExpression	( void * ) idlist		8334218	0					
ANR	8334480	CastTarget	void *		8334218	0					
ANR	8334481	Identifier	idlist		8334218	1					
ANR	8334482	Argument	"""status_symbol_sets(idlist)"""		8334218	2					
ANR	8334483	PrimaryExpression	"""status_symbol_sets(idlist)"""		8334218	0					
ANR	8334484	ReturnStatement	return 0 ;	515:4:17673:17681	8334218	16	True				
ANR	8334485	PrimaryExpression	0		8334218	0					
ANR	8334486	ReturnType	static int		8334218	1					
ANR	8334487	Identifier	status_symbol_sets		8334218	2					
ANR	8334488	ParameterList	"stream * s , pcl_state_t * pcs , pcl_data_storage_t storage"		8334218	3					
ANR	8334489	Parameter	stream * s	464:19:15552:15561	8334218	0	True				
ANR	8334490	ParameterType	stream *		8334218	0					
ANR	8334491	Identifier	s		8334218	1					
ANR	8334492	Parameter	pcl_state_t * pcs	464:31:15564:15580	8334218	1	True				
ANR	8334493	ParameterType	pcl_state_t *		8334218	0					
ANR	8334494	Identifier	pcs		8334218	1					
ANR	8334495	Parameter	pcl_data_storage_t storage	464:50:15583:15608	8334218	2	True				
ANR	8334496	ParameterType	pcl_data_storage_t		8334218	0					
ANR	8334497	Identifier	storage		8334218	1					
ANR	8334498	CFGEntryNode	ENTRY		8334218		True				
ANR	8334499	CFGExitNode	EXIT		8334218		True				
ANR	8334500	Symbol	plgv_MSL		8334218						
ANR	8334501	Symbol	& key		8334218						
ANR	8334502	Symbol	& value		8334218						
ANR	8334503	Symbol	nid		8334218						
ANR	8334504	Symbol	& pcs -> built_in_symbol_sets		8334218						
ANR	8334505	Symbol	* pcs		8334218						
ANR	8334506	Symbol	storage		8334218						
ANR	8334507	Symbol	* * * ssp		8334218						
ANR	8334508	Symbol	ssp		8334218						
ANR	8334509	Symbol	& denum		8334218						
ANR	8334510	Symbol	denum		8334218						
ANR	8334511	Symbol	e_Memory		8334218						
ANR	8334512	Symbol	ssp -> maps [ gx ] -> id		8334218						
ANR	8334513	Symbol	idlist		8334218						
ANR	8334514	Symbol	pcs -> memory		8334218						
ANR	8334515	Symbol	plgv_next		8334218						
ANR	8334516	Symbol	value		8334218						
ANR	8334517	Symbol	ssp -> maps		8334218						
ANR	8334518	Symbol	* * ssp -> maps		8334218						
ANR	8334519	Symbol	key		8334218						
ANR	8334520	Symbol	* ssp -> maps		8334218						
ANR	8334521	Symbol	* * gx		8334218						
ANR	8334522	Symbol	pcs		8334218						
ANR	8334523	Symbol	pl_dict_length		8334218						
ANR	8334524	Symbol	gs_alloc_bytes		8334218						
ANR	8334525	Symbol	NULL		8334218						
ANR	8334526	Symbol	* * ssp		8334218						
ANR	8334527	Symbol	* * * ssp -> maps		8334218						
ANR	8334528	Symbol	false		8334218						
ANR	8334529	Symbol	* * * gx		8334218						
ANR	8334530	Symbol	status_check_symbol_set		8334218						
ANR	8334531	Symbol	* * * * ssp		8334218						
ANR	8334532	Symbol	* ssp -> maps [ gx ] -> id		8334218						
ANR	8334533	Symbol	pl_dict_enum_next		8334218						
ANR	8334534	Symbol	& pcs -> soft_symbol_sets		8334218						
ANR	8334535	Symbol	gx		8334218						
ANR	8334536	Symbol	s		8334218						
ANR	8334537	Symbol	* gx		8334218						
ANR	8334538	Symbol	* ssp		8334218						
ANR	8334539	Symbol	status_add_symbol_id		8334218						
ANR	8334540	Function	status_fonts_extended	518:0:17686:17853							
ANR	8334541	FunctionDef	"status_fonts_extended (stream * s , pcl_state_t * pcs , pcl_data_storage_t storage)"		8334540	0					
ANR	8334542	CompoundStatement		521:0:17800:17853	8334540	0					
ANR	8334543	ReturnStatement	"return status_do_fonts ( s , pcs , storage , true ) ;"	522:4:17806:17851	8334540	0	True				
ANR	8334544	CallExpression	"status_do_fonts ( s , pcs , storage , true )"		8334540	0					
ANR	8334545	Callee	status_do_fonts		8334540	0					
ANR	8334546	Identifier	status_do_fonts		8334540	0					
ANR	8334547	ArgumentList	s		8334540	1					
ANR	8334548	Argument	s		8334540	0					
ANR	8334549	Identifier	s		8334540	0					
ANR	8334550	Argument	pcs		8334540	1					
ANR	8334551	Identifier	pcs		8334540	0					
ANR	8334552	Argument	storage		8334540	2					
ANR	8334553	Identifier	storage		8334540	0					
ANR	8334554	Argument	true		8334540	3					
ANR	8334555	Identifier	true		8334540	0					
ANR	8334556	ReturnType	static int		8334540	1					
ANR	8334557	Identifier	status_fonts_extended		8334540	2					
ANR	8334558	ParameterList	"stream * s , pcl_state_t * pcs , pcl_data_storage_t storage"		8334540	3					
ANR	8334559	Parameter	stream * s	519:22:17719:17728	8334540	0	True				
ANR	8334560	ParameterType	stream *		8334540	0					
ANR	8334561	Identifier	s		8334540	1					
ANR	8334562	Parameter	pcl_state_t * pcs	519:34:17731:17747	8334540	1	True				
ANR	8334563	ParameterType	pcl_state_t *		8334540	0					
ANR	8334564	Identifier	pcs		8334540	1					
ANR	8334565	Parameter	pcl_data_storage_t storage	520:22:17772:17797	8334540	2	True				
ANR	8334566	ParameterType	pcl_data_storage_t		8334540	0					
ANR	8334567	Identifier	storage		8334540	1					
ANR	8334568	CFGEntryNode	ENTRY		8334540		True				
ANR	8334569	CFGExitNode	EXIT		8334540		True				
ANR	8334570	Symbol	pcs		8334540						
ANR	8334571	Symbol	s		8334540						
ANR	8334572	Symbol	true		8334540						
ANR	8334573	Symbol	status_do_fonts		8334540						
ANR	8334574	Symbol	storage		8334540						
ANR	8334575	Function	pcl_set_readback_loc_type	532:0:18106:18284							
ANR	8334576	FunctionDef	"pcl_set_readback_loc_type (pcl_args_t * pargs , pcl_state_t * pcs)"		8334575	0					
ANR	8334577	CompoundStatement		534:0:18226:18284	8334575	0					
ANR	8334578	ExpressionStatement	pcs -> location_type = uint_arg ( pargs )	535:4:18232:18268	8334575	0	True				
ANR	8334579	AssignmentExpression	pcs -> location_type = uint_arg ( pargs )		8334575	0		=			
ANR	8334580	PtrMemberAccess	pcs -> location_type		8334575	0					
ANR	8334581	Identifier	pcs		8334575	0					
ANR	8334582	Identifier	location_type		8334575	1					
ANR	8334583	CallExpression	uint_arg ( pargs )		8334575	1					
ANR	8334584	Callee	uint_arg		8334575	0					
ANR	8334585	Identifier	uint_arg		8334575	0					
ANR	8334586	ArgumentList	pargs		8334575	1					
ANR	8334587	Argument	pargs		8334575	0					
ANR	8334588	Identifier	pargs		8334575	0					
ANR	8334589	ReturnStatement	return 0 ;	536:4:18274:18282	8334575	1	True				
ANR	8334590	PrimaryExpression	0		8334575	0					
ANR	8334591	ReturnType	static int		8334575	1					
ANR	8334592	Identifier	pcl_set_readback_loc_type		8334575	2					
ANR	8334593	ParameterList	"pcl_args_t * pargs , pcl_state_t * pcs"		8334575	3					
ANR	8334594	Parameter	pcl_args_t * pargs	533:26:18187:18204	8334575	0	True				
ANR	8334595	ParameterType	pcl_args_t *		8334575	0					
ANR	8334596	Identifier	pargs		8334575	1					
ANR	8334597	Parameter	pcl_state_t * pcs	533:46:18207:18223	8334575	1	True				
ANR	8334598	ParameterType	pcl_state_t *		8334575	0					
ANR	8334599	Identifier	pcs		8334575	1					
ANR	8334600	CFGEntryNode	ENTRY		8334575		True				
ANR	8334601	CFGExitNode	EXIT		8334575		True				
ANR	8334602	Symbol	pcs		8334575						
ANR	8334603	Symbol	pcs -> location_type		8334575						
ANR	8334604	Symbol	pargs		8334575						
ANR	8334605	Symbol	* pcs		8334575						
ANR	8334606	Symbol	uint_arg		8334575						
ANR	8334607	Function	pcl_set_readback_loc_unit	539:0:18287:18465							
ANR	8334608	FunctionDef	"pcl_set_readback_loc_unit (pcl_args_t * pargs , pcl_state_t * pcs)"		8334607	0					
ANR	8334609	CompoundStatement		541:0:18407:18465	8334607	0					
ANR	8334610	ExpressionStatement	pcs -> location_unit = uint_arg ( pargs )	542:4:18413:18449	8334607	0	True				
ANR	8334611	AssignmentExpression	pcs -> location_unit = uint_arg ( pargs )		8334607	0		=			
ANR	8334612	PtrMemberAccess	pcs -> location_unit		8334607	0					
ANR	8334613	Identifier	pcs		8334607	0					
ANR	8334614	Identifier	location_unit		8334607	1					
ANR	8334615	CallExpression	uint_arg ( pargs )		8334607	1					
ANR	8334616	Callee	uint_arg		8334607	0					
ANR	8334617	Identifier	uint_arg		8334607	0					
ANR	8334618	ArgumentList	pargs		8334607	1					
ANR	8334619	Argument	pargs		8334607	0					
ANR	8334620	Identifier	pargs		8334607	0					
ANR	8334621	ReturnStatement	return 0 ;	543:4:18455:18463	8334607	1	True				
ANR	8334622	PrimaryExpression	0		8334607	0					
ANR	8334623	ReturnType	static int		8334607	1					
ANR	8334624	Identifier	pcl_set_readback_loc_unit		8334607	2					
ANR	8334625	ParameterList	"pcl_args_t * pargs , pcl_state_t * pcs"		8334607	3					
ANR	8334626	Parameter	pcl_args_t * pargs	540:26:18368:18385	8334607	0	True				
ANR	8334627	ParameterType	pcl_args_t *		8334607	0					
ANR	8334628	Identifier	pargs		8334607	1					
ANR	8334629	Parameter	pcl_state_t * pcs	540:46:18388:18404	8334607	1	True				
ANR	8334630	ParameterType	pcl_state_t *		8334607	0					
ANR	8334631	Identifier	pcs		8334607	1					
ANR	8334632	CFGEntryNode	ENTRY		8334607		True				
ANR	8334633	CFGExitNode	EXIT		8334607		True				
ANR	8334634	Symbol	pcs		8334607						
ANR	8334635	Symbol	pargs		8334607						
ANR	8334636	Symbol	* pcs		8334607						
ANR	8334637	Symbol	uint_arg		8334607						
ANR	8334638	Symbol	pcs -> location_unit		8334607						
ANR	8334639	Function	pcl_inquire_readback_entity	546:0:18468:21368							
ANR	8334640	FunctionDef	"pcl_inquire_readback_entity (pcl_args_t * pargs , pcl_state_t * pcs)"		8334639	0					
ANR	8334641	CompoundStatement		548:0:18590:21368	8334639	0					
ANR	8334642	IdentifierDeclStatement	uint i = uint_arg ( pargs ) ;	549:4:18596:18620	8334639	0	True				
ANR	8334643	IdentifierDecl	i = uint_arg ( pargs )		8334639	0					
ANR	8334644	IdentifierDeclType	uint		8334639	0					
ANR	8334645	Identifier	i		8334639	1					
ANR	8334646	AssignmentExpression	i = uint_arg ( pargs )		8334639	2		=			
ANR	8334647	Identifier	i		8334639	0					
ANR	8334648	CallExpression	uint_arg ( pargs )		8334639	1					
ANR	8334649	Callee	uint_arg		8334639	0					
ANR	8334650	Identifier	uint_arg		8334639	0					
ANR	8334651	ArgumentList	pargs		8334639	1					
ANR	8334652	Argument	pargs		8334639	0					
ANR	8334653	Identifier	pargs		8334639	0					
ANR	8334654	IdentifierDeclStatement	int unit = pcs -> location_unit ;	550:4:18626:18655	8334639	1	True				
ANR	8334655	IdentifierDecl	unit = pcs -> location_unit		8334639	0					
ANR	8334656	IdentifierDeclType	int		8334639	0					
ANR	8334657	Identifier	unit		8334639	1					
ANR	8334658	AssignmentExpression	unit = pcs -> location_unit		8334639	2		=			
ANR	8334659	Identifier	unit		8334639	0					
ANR	8334660	PtrMemberAccess	pcs -> location_unit		8334639	1					
ANR	8334661	Identifier	pcs		8334639	0					
ANR	8334662	Identifier	location_unit		8334639	1					
ANR	8334663	IdentifierDeclStatement	stream st ;	551:4:18661:18670	8334639	2	True				
ANR	8334664	IdentifierDecl	st		8334639	0					
ANR	8334665	IdentifierDeclType	stream		8334639	0					
ANR	8334666	Identifier	st		8334639	1					
ANR	8334667	Statement	static	553:4:18677:18682	8334639	3	True				
ANR	8334668	IdentifierDeclStatement	"const char * entity_types [ ] = { ""FONTS"" , ""MACROS"" , ""PATTERNS"" , ""SYMBOLSETS"" , ""FONTS EXTENDED"" } ;"	553:11:18684:18790	8334639	4	True				
ANR	8334669	IdentifierDecl	"* entity_types [ ] = { ""FONTS"" , ""MACROS"" , ""PATTERNS"" , ""SYMBOLSETS"" , ""FONTS EXTENDED"" }"		8334639	0					
ANR	8334670	IdentifierDeclType	const char * [ ]		8334639	0					
ANR	8334671	Identifier	entity_types		8334639	1					
ANR	8334672	AssignmentExpression	"* entity_types [ ] = { ""FONTS"" , ""MACROS"" , ""PATTERNS"" , ""SYMBOLSETS"" , ""FONTS EXTENDED"" }"		8334639	2		=			
ANR	8334673	Identifier	entity_types		8334639	0					
ANR	8334674	InitializerList	"""FONTS"""		8334639	1					
ANR	8334675	PrimaryExpression	"""FONTS"""		8334639	0					
ANR	8334676	PrimaryExpression	"""MACROS"""		8334639	1					
ANR	8334677	PrimaryExpression	"""PATTERNS"""		8334639	2					
ANR	8334678	PrimaryExpression	"""SYMBOLSETS"""		8334639	3					
ANR	8334679	PrimaryExpression	"""FONTS EXTENDED"""		8334639	4					
ANR	8334680	IdentifierDeclStatement	pcl_data_storage_t storage ;	556:4:18796:18822	8334639	5	True				
ANR	8334681	IdentifierDecl	storage		8334639	0					
ANR	8334682	IdentifierDeclType	pcl_data_storage_t		8334639	0					
ANR	8334683	Identifier	storage		8334639	1					
ANR	8334684	IdentifierDeclStatement	int code = 0 ;	557:4:18828:18840	8334639	6	True				
ANR	8334685	IdentifierDecl	code = 0		8334639	0					
ANR	8334686	IdentifierDeclType	int		8334639	0					
ANR	8334687	Identifier	code		8334639	1					
ANR	8334688	AssignmentExpression	code = 0		8334639	2		=			
ANR	8334689	Identifier	code		8334639	0					
ANR	8334690	PrimaryExpression	0		8334639	1					
ANR	8334691	IdentifierDeclStatement	long pos ;	558:4:18846:18854	8334639	7	True				
ANR	8334692	IdentifierDecl	pos		8334639	0					
ANR	8334693	IdentifierDeclType	long		8334639	0					
ANR	8334694	Identifier	pos		8334639	1					
ANR	8334695	IfStatement	if ( i > 4 )		8334639	8					
ANR	8334696	Condition	i > 4	560:8:18865:18869	8334639	0	True				
ANR	8334697	RelationalExpression	i > 4		8334639	0		>			
ANR	8334698	Identifier	i		8334639	0					
ANR	8334699	PrimaryExpression	4		8334639	1					
ANR	8334700	ReturnStatement	return e_Range ;	561:8:18880:18894	8334639	1	True				
ANR	8334701	Identifier	e_Range		8334639	0					
ANR	8334702	ExpressionStatement	"status_begin ( & st , pcs )"	562:4:18900:18922	8334639	9	True				
ANR	8334703	CallExpression	"status_begin ( & st , pcs )"		8334639	0					
ANR	8334704	Callee	status_begin		8334639	0					
ANR	8334705	Identifier	status_begin		8334639	0					
ANR	8334706	ArgumentList	& st		8334639	1					
ANR	8334707	Argument	& st		8334639	0					
ANR	8334708	UnaryOperationExpression	& st		8334639	0					
ANR	8334709	UnaryOperator	&		8334639	0					
ANR	8334710	Identifier	st		8334639	1					
ANR	8334711	Argument	pcs		8334639	1					
ANR	8334712	Identifier	pcs		8334639	0					
ANR	8334713	ExpressionStatement	"stprintf ( & st , ""INFO %s\\r\\n"" , entity_types [ i ] )"	563:4:18928:18973	8334639	10	True				
ANR	8334714	CallExpression	"stprintf ( & st , ""INFO %s\\r\\n"" , entity_types [ i ] )"		8334639	0					
ANR	8334715	Callee	stprintf		8334639	0					
ANR	8334716	Identifier	stprintf		8334639	0					
ANR	8334717	ArgumentList	& st		8334639	1					
ANR	8334718	Argument	& st		8334639	0					
ANR	8334719	UnaryOperationExpression	& st		8334639	0					
ANR	8334720	UnaryOperator	&		8334639	0					
ANR	8334721	Identifier	st		8334639	1					
ANR	8334722	Argument	"""INFO %s\\r\\n"""		8334639	1					
ANR	8334723	PrimaryExpression	"""INFO %s\\r\\n"""		8334639	0					
ANR	8334724	Argument	entity_types [ i ]		8334639	2					
ANR	8334725	ArrayIndexing	entity_types [ i ]		8334639	0					
ANR	8334726	Identifier	entity_types		8334639	0					
ANR	8334727	Identifier	i		8334639	1					
ANR	8334728	SwitchStatement	switch ( pcs -> location_type )		8334639	11					
ANR	8334729	Condition	pcs -> location_type	564:12:18987:19004	8334639	0	True				
ANR	8334730	PtrMemberAccess	pcs -> location_type		8334639	0					
ANR	8334731	Identifier	pcs		8334639	0					
ANR	8334732	Identifier	location_type		8334639	1					
ANR	8334733	CompoundStatement		17:32:416:416	8334639	1					
ANR	8334734	Label	case 0 :	565:8:19017:19023	8334639	0	True				
ANR	8334735	ExpressionStatement	code = - 1	566:12:19075:19084	8334639	1	True				
ANR	8334736	AssignmentExpression	code = - 1		8334639	0		=			
ANR	8334737	Identifier	code		8334639	0					
ANR	8334738	UnaryOperationExpression	- 1		8334639	1					
ANR	8334739	UnaryOperator	-		8334639	0					
ANR	8334740	PrimaryExpression	1		8334639	1					
ANR	8334741	BreakStatement	break ;	567:12:19098:19103	8334639	2	True				
ANR	8334742	Label	case 1 :	568:8:19113:19119	8334639	3	True				
ANR	8334743	ExpressionStatement	storage = ( pcl_data_storage_t ) 0	569:12:19173:19205	8334639	4	True				
ANR	8334744	AssignmentExpression	storage = ( pcl_data_storage_t ) 0		8334639	0		=			
ANR	8334745	Identifier	storage		8334639	0					
ANR	8334746	CastExpression	( pcl_data_storage_t ) 0		8334639	1					
ANR	8334747	CastTarget	pcl_data_storage_t		8334639	0					
ANR	8334748	PrimaryExpression	0		8334639	1					
ANR	8334749	BreakStatement	break ;	570:12:19256:19261	8334639	5	True				
ANR	8334750	Label	case 2 :	571:8:19271:19277	8334639	6	True				
ANR	8334751	ExpressionStatement	storage = ( pcl_data_storage_t ) ~ 0	572:12:19326:19360	8334639	7	True				
ANR	8334752	AssignmentExpression	storage = ( pcl_data_storage_t ) ~ 0		8334639	0		=			
ANR	8334753	Identifier	storage		8334639	0					
ANR	8334754	CastExpression	( pcl_data_storage_t ) ~ 0		8334639	1					
ANR	8334755	CastTarget	pcl_data_storage_t		8334639	0					
ANR	8334756	UnaryOperationExpression	~ 0		8334639	1					
ANR	8334757	UnaryOperator	~		8334639	0					
ANR	8334758	PrimaryExpression	0		8334639	1					
ANR	8334759	BreakStatement	break ;	573:12:19374:19379	8334639	8	True				
ANR	8334760	Label	case 3 :	574:8:19389:19395	8334639	9	True				
ANR	8334761	IfStatement	if ( unit != 0 )		8334639	10					
ANR	8334762	Condition	unit != 0	575:16:19443:19451	8334639	0	True				
ANR	8334763	EqualityExpression	unit != 0		8334639	0		!=			
ANR	8334764	Identifier	unit		8334639	0					
ANR	8334765	PrimaryExpression	0		8334639	1					
ANR	8334766	CompoundStatement		28:27:863:863	8334639	1					
ANR	8334767	ExpressionStatement	code = - 1	576:16:19472:19481	8334639	0	True				
ANR	8334768	AssignmentExpression	code = - 1		8334639	0		=			
ANR	8334769	Identifier	code		8334639	0					
ANR	8334770	UnaryOperationExpression	- 1		8334639	1					
ANR	8334771	UnaryOperator	-		8334639	0					
ANR	8334772	PrimaryExpression	1		8334639	1					
ANR	8334773	BreakStatement	break ;	577:16:19499:19504	8334639	1	True				
ANR	8334774	ExpressionStatement	storage = pcds_internal	579:12:19532:19555	8334639	11	True				
ANR	8334775	AssignmentExpression	storage = pcds_internal		8334639	0		=			
ANR	8334776	Identifier	storage		8334639	0					
ANR	8334777	Identifier	pcds_internal		8334639	1					
ANR	8334778	BreakStatement	break ;	580:12:19569:19574	8334639	12	True				
ANR	8334779	Label	case 4 :	581:8:19584:19590	8334639	13	True				
ANR	8334780	IfStatement	if ( unit > 2 )		8334639	14					
ANR	8334781	Condition	unit > 2	582:16:19640:19647	8334639	0	True				
ANR	8334782	RelationalExpression	unit > 2		8334639	0		>			
ANR	8334783	Identifier	unit		8334639	0					
ANR	8334784	PrimaryExpression	2		8334639	1					
ANR	8334785	ExpressionStatement	code = - 1	583:16:19666:19675	8334639	1	True				
ANR	8334786	AssignmentExpression	code = - 1		8334639	0		=			
ANR	8334787	Identifier	code		8334639	0					
ANR	8334788	UnaryOperationExpression	- 1		8334639	1					
ANR	8334789	UnaryOperator	-		8334639	0					
ANR	8334790	PrimaryExpression	1		8334639	1					
ANR	8334791	ElseStatement	else		8334639	0					
ANR	8334792	CompoundStatement		38:23:1128:1253	8334639	0					
ANR	8334793	Statement	static	585:16:19712:19717	8334639	0	True				
ANR	8334794	IdentifierDeclStatement	"const pcl_data_storage_t dl_masks [ ] = { pcds_downloaded , pcds_temporary , pcds_permanent } ;"	585:23:19719:19844	8334639	1	True				
ANR	8334795	IdentifierDecl	"dl_masks [ ] = { pcds_downloaded , pcds_temporary , pcds_permanent }"		8334639	0					
ANR	8334796	IdentifierDeclType	const pcl_data_storage_t [ ]		8334639	0					
ANR	8334797	Identifier	dl_masks		8334639	1					
ANR	8334798	AssignmentExpression	"dl_masks [ ] = { pcds_downloaded , pcds_temporary , pcds_permanent }"		8334639	2		=			
ANR	8334799	Identifier	dl_masks		8334639	0					
ANR	8334800	InitializerList	pcds_downloaded		8334639	1					
ANR	8334801	Identifier	pcds_downloaded		8334639	0					
ANR	8334802	Identifier	pcds_temporary		8334639	1					
ANR	8334803	Identifier	pcds_permanent		8334639	2					
ANR	8334804	ExpressionStatement	storage = dl_masks [ unit ]	588:16:19862:19886	8334639	2	True				
ANR	8334805	AssignmentExpression	storage = dl_masks [ unit ]		8334639	0		=			
ANR	8334806	Identifier	storage		8334639	0					
ANR	8334807	ArrayIndexing	dl_masks [ unit ]		8334639	1					
ANR	8334808	Identifier	dl_masks		8334639	0					
ANR	8334809	Identifier	unit		8334639	1					
ANR	8334810	BreakStatement	break ;	590:12:19914:19919	8334639	15	True				
ANR	8334811	Label	case 5 :	591:8:19929:19935	8334639	16	True				
ANR	8334812	IfStatement	if ( unit == 0 )		8334639	17					
ANR	8334813	Condition	unit == 0	592:16:19985:19993	8334639	0	True				
ANR	8334814	EqualityExpression	unit == 0		8334639	0		==			
ANR	8334815	Identifier	unit		8334639	0					
ANR	8334816	PrimaryExpression	0		8334639	1					
ANR	8334817	ExpressionStatement	storage = ( pcl_data_storage_t ) pcds_all_cartridges	593:16:20012:20062	8334639	1	True				
ANR	8334818	AssignmentExpression	storage = ( pcl_data_storage_t ) pcds_all_cartridges		8334639	0		=			
ANR	8334819	Identifier	storage		8334639	0					
ANR	8334820	CastExpression	( pcl_data_storage_t ) pcds_all_cartridges		8334639	1					
ANR	8334821	CastTarget	pcl_data_storage_t		8334639	0					
ANR	8334822	Identifier	pcds_all_cartridges		8334639	1					
ANR	8334823	ElseStatement	else		8334639	0					
ANR	8334824	IfStatement	if ( unit <= pcds_cartridge_max )		8334639	0					
ANR	8334825	Condition	unit <= pcds_cartridge_max	594:21:20085:20110	8334639	0	True				
ANR	8334826	RelationalExpression	unit <= pcds_cartridge_max		8334639	0		<=			
ANR	8334827	Identifier	unit		8334639	0					
ANR	8334828	Identifier	pcds_cartridge_max		8334639	1					
ANR	8334829	ExpressionStatement	storage = ( pcl_data_storage_t ) ( 1 << ( pcds_cartridge_shift + unit - 1 ) )	595:16:20129:20220	8334639	1	True				
ANR	8334830	AssignmentExpression	storage = ( pcl_data_storage_t ) ( 1 << ( pcds_cartridge_shift + unit - 1 ) )		8334639	0		=			
ANR	8334831	Identifier	storage		8334639	0					
ANR	8334832	CastExpression	( pcl_data_storage_t ) ( 1 << ( pcds_cartridge_shift + unit - 1 ) )		8334639	1					
ANR	8334833	CastTarget	pcl_data_storage_t		8334639	0					
ANR	8334834	ShiftExpression	1 << ( pcds_cartridge_shift + unit - 1 )		8334639	1		<<			
ANR	8334835	PrimaryExpression	1		8334639	0					
ANR	8334836	AdditiveExpression	pcds_cartridge_shift + unit - 1		8334639	1		+			
ANR	8334837	Identifier	pcds_cartridge_shift		8334639	0					
ANR	8334838	AdditiveExpression	unit - 1		8334639	1		-			
ANR	8334839	Identifier	unit		8334639	0					
ANR	8334840	PrimaryExpression	1		8334639	1					
ANR	8334841	ElseStatement	else		8334639	0					
ANR	8334842	ExpressionStatement	code = - 1	598:16:20255:20264	8334639	0	True				
ANR	8334843	AssignmentExpression	code = - 1		8334639	0		=			
ANR	8334844	Identifier	code		8334639	0					
ANR	8334845	UnaryOperationExpression	- 1		8334639	1					
ANR	8334846	UnaryOperator	-		8334639	0					
ANR	8334847	PrimaryExpression	1		8334639	1					
ANR	8334848	BreakStatement	break ;	599:12:20278:20283	8334639	18	True				
ANR	8334849	Label	case 6 :	600:8:20293:20299	8334639	19	True				
ANR	8334850	IfStatement	if ( unit == 0 )		8334639	20					
ANR	8334851	Condition	unit == 0	601:16:20344:20352	8334639	0	True				
ANR	8334852	EqualityExpression	unit == 0		8334639	0		==			
ANR	8334853	Identifier	unit		8334639	0					
ANR	8334854	PrimaryExpression	0		8334639	1					
ANR	8334855	ExpressionStatement	storage = ( pcl_data_storage_t ) pcds_all_simms	602:16:20371:20416	8334639	1	True				
ANR	8334856	AssignmentExpression	storage = ( pcl_data_storage_t ) pcds_all_simms		8334639	0		=			
ANR	8334857	Identifier	storage		8334639	0					
ANR	8334858	CastExpression	( pcl_data_storage_t ) pcds_all_simms		8334639	1					
ANR	8334859	CastTarget	pcl_data_storage_t		8334639	0					
ANR	8334860	Identifier	pcds_all_simms		8334639	1					
ANR	8334861	ElseStatement	else		8334639	0					
ANR	8334862	IfStatement	if ( unit <= pcds_simm_max )		8334639	0					
ANR	8334863	Condition	unit <= pcds_simm_max	603:21:20439:20459	8334639	0	True				
ANR	8334864	RelationalExpression	unit <= pcds_simm_max		8334639	0		<=			
ANR	8334865	Identifier	unit		8334639	0					
ANR	8334866	Identifier	pcds_simm_max		8334639	1					
ANR	8334867	ExpressionStatement	storage = ( pcl_data_storage_t ) ( 1 << ( pcds_simm_shift + unit - 1 ) )	604:16:20478:20564	8334639	1	True				
ANR	8334868	AssignmentExpression	storage = ( pcl_data_storage_t ) ( 1 << ( pcds_simm_shift + unit - 1 ) )		8334639	0		=			
ANR	8334869	Identifier	storage		8334639	0					
ANR	8334870	CastExpression	( pcl_data_storage_t ) ( 1 << ( pcds_simm_shift + unit - 1 ) )		8334639	1					
ANR	8334871	CastTarget	pcl_data_storage_t		8334639	0					
ANR	8334872	ShiftExpression	1 << ( pcds_simm_shift + unit - 1 )		8334639	1		<<			
ANR	8334873	PrimaryExpression	1		8334639	0					
ANR	8334874	AdditiveExpression	pcds_simm_shift + unit - 1		8334639	1		+			
ANR	8334875	Identifier	pcds_simm_shift		8334639	0					
ANR	8334876	AdditiveExpression	unit - 1		8334639	1		-			
ANR	8334877	Identifier	unit		8334639	0					
ANR	8334878	PrimaryExpression	1		8334639	1					
ANR	8334879	ElseStatement	else		8334639	0					
ANR	8334880	ExpressionStatement	code = - 1	607:16:20599:20608	8334639	0	True				
ANR	8334881	AssignmentExpression	code = - 1		8334639	0		=			
ANR	8334882	Identifier	code		8334639	0					
ANR	8334883	UnaryOperationExpression	- 1		8334639	1					
ANR	8334884	UnaryOperator	-		8334639	0					
ANR	8334885	PrimaryExpression	1		8334639	1					
ANR	8334886	BreakStatement	break ;	608:12:20622:20627	8334639	21	True				
ANR	8334887	Label	default :	609:8:20637:20644	8334639	22	True				
ANR	8334888	Identifier	default		8334639	0					
ANR	8334889	ExpressionStatement	code = - 1	610:12:20658:20667	8334639	23	True				
ANR	8334890	AssignmentExpression	code = - 1		8334639	0		=			
ANR	8334891	Identifier	code		8334639	0					
ANR	8334892	UnaryOperationExpression	- 1		8334639	1					
ANR	8334893	UnaryOperator	-		8334639	0					
ANR	8334894	PrimaryExpression	1		8334639	1					
ANR	8334895	ExpressionStatement	"stputs ( & st , ""ERROR=INVALID ENTITY\\r\\n"" )"	611:12:20681:20720	8334639	24	True				
ANR	8334896	CallExpression	"stputs ( & st , ""ERROR=INVALID ENTITY\\r\\n"" )"		8334639	0					
ANR	8334897	Callee	stputs		8334639	0					
ANR	8334898	Identifier	stputs		8334639	0					
ANR	8334899	ArgumentList	& st		8334639	1					
ANR	8334900	Argument	& st		8334639	0					
ANR	8334901	UnaryOperationExpression	& st		8334639	0					
ANR	8334902	UnaryOperator	&		8334639	0					
ANR	8334903	Identifier	st		8334639	1					
ANR	8334904	Argument	"""ERROR=INVALID ENTITY\\r\\n"""		8334639	1					
ANR	8334905	PrimaryExpression	"""ERROR=INVALID ENTITY\\r\\n"""		8334639	0					
ANR	8334906	BreakStatement	break ;	612:12:20734:20739	8334639	25	True				
ANR	8334907	IfStatement	if ( code >= 0 )		8334639	12					
ANR	8334908	Condition	code >= 0	614:8:20755:20763	8334639	0	True				
ANR	8334909	RelationalExpression	code >= 0		8334639	0		>=			
ANR	8334910	Identifier	code		8334639	0					
ANR	8334911	PrimaryExpression	0		8334639	1					
ANR	8334912	CompoundStatement		67:19:2175:2175	8334639	1					
ANR	8334913	ExpressionStatement	pos = stell ( & st )	615:8:20776:20792	8334639	0	True				
ANR	8334914	AssignmentExpression	pos = stell ( & st )		8334639	0		=			
ANR	8334915	Identifier	pos		8334639	0					
ANR	8334916	CallExpression	stell ( & st )		8334639	1					
ANR	8334917	Callee	stell		8334639	0					
ANR	8334918	Identifier	stell		8334639	0					
ANR	8334919	ArgumentList	& st		8334639	1					
ANR	8334920	Argument	& st		8334639	0					
ANR	8334921	UnaryOperationExpression	& st		8334639	0					
ANR	8334922	UnaryOperator	&		8334639	0					
ANR	8334923	Identifier	st		8334639	1					
ANR	8334924	ExpressionStatement	"code = ( * status_write [ i ] ) ( & st , pcs , storage )"	616:8:20802:20847	8334639	1	True				
ANR	8334925	AssignmentExpression	"code = ( * status_write [ i ] ) ( & st , pcs , storage )"		8334639	0		=			
ANR	8334926	Identifier	code		8334639	0					
ANR	8334927	CallExpression	"( * status_write [ i ] ) ( & st , pcs , storage )"		8334639	1					
ANR	8334928	Callee	* status_write [ i ]		8334639	0					
ANR	8334929	UnaryOperationExpression	* status_write [ i ]		8334639	0					
ANR	8334930	UnaryOperator	*		8334639	0					
ANR	8334931	ArrayIndexing	status_write [ i ]		8334639	1					
ANR	8334932	Identifier	status_write		8334639	0					
ANR	8334933	Identifier	i		8334639	1					
ANR	8334934	ArgumentList	& st		8334639	1					
ANR	8334935	Argument	& st		8334639	0					
ANR	8334936	UnaryOperationExpression	& st		8334639	0					
ANR	8334937	UnaryOperator	&		8334639	0					
ANR	8334938	Identifier	st		8334639	1					
ANR	8334939	Argument	pcs		8334639	1					
ANR	8334940	Identifier	pcs		8334639	0					
ANR	8334941	Argument	storage		8334639	2					
ANR	8334942	Identifier	storage		8334639	0					
ANR	8334943	IfStatement	if ( code >= 0 )		8334639	2					
ANR	8334944	Condition	code >= 0	617:12:20861:20869	8334639	0	True				
ANR	8334945	RelationalExpression	code >= 0		8334639	0		>=			
ANR	8334946	Identifier	code		8334639	0					
ANR	8334947	PrimaryExpression	0		8334639	1					
ANR	8334948	CompoundStatement		70:23:2281:2281	8334639	1					
ANR	8334949	IfStatement	if ( stell ( & st ) == pos )		8334639	0					
ANR	8334950	Condition	stell ( & st ) == pos	618:16:20890:20906	8334639	0	True				
ANR	8334951	EqualityExpression	stell ( & st ) == pos		8334639	0		==			
ANR	8334952	CallExpression	stell ( & st )		8334639	0					
ANR	8334953	Callee	stell		8334639	0					
ANR	8334954	Identifier	stell		8334639	0					
ANR	8334955	ArgumentList	& st		8334639	1					
ANR	8334956	Argument	& st		8334639	0					
ANR	8334957	UnaryOperationExpression	& st		8334639	0					
ANR	8334958	UnaryOperator	&		8334639	0					
ANR	8334959	Identifier	st		8334639	1					
ANR	8334960	Identifier	pos		8334639	1					
ANR	8334961	ExpressionStatement	"stputs ( & st , ""ERROR=NONE\\r\\n"" )"	619:16:20925:20954	8334639	1	True				
ANR	8334962	CallExpression	"stputs ( & st , ""ERROR=NONE\\r\\n"" )"		8334639	0					
ANR	8334963	Callee	stputs		8334639	0					
ANR	8334964	Identifier	stputs		8334639	0					
ANR	8334965	ArgumentList	& st		8334639	1					
ANR	8334966	Argument	& st		8334639	0					
ANR	8334967	UnaryOperationExpression	& st		8334639	0					
ANR	8334968	UnaryOperator	&		8334639	0					
ANR	8334969	Identifier	st		8334639	1					
ANR	8334970	Argument	"""ERROR=NONE\\r\\n"""		8334639	1					
ANR	8334971	PrimaryExpression	"""ERROR=NONE\\r\\n"""		8334639	0					
ANR	8334972	ElseStatement	else		8334639	0					
ANR	8334973	IfStatement	if ( storage == 0 )		8334639	0					
ANR	8334974	Condition	storage == 0	620:21:20977:20988	8334639	0	True				
ANR	8334975	EqualityExpression	storage == 0		8334639	0		==			
ANR	8334976	Identifier	storage		8334639	0					
ANR	8334977	PrimaryExpression	0		8334639	1					
ANR	8334978	ExpressionStatement	"stprintf ( & st , ""LOCTYPE=%d\\r\\nLOCUNIT=%d\\r\\n"" , pcs -> location_type , unit )"	621:16:21037:21133	8334639	1	True				
ANR	8334979	CallExpression	"stprintf ( & st , ""LOCTYPE=%d\\r\\nLOCUNIT=%d\\r\\n"" , pcs -> location_type , unit )"		8334639	0					
ANR	8334980	Callee	stprintf		8334639	0					
ANR	8334981	Identifier	stprintf		8334639	0					
ANR	8334982	ArgumentList	& st		8334639	1					
ANR	8334983	Argument	& st		8334639	0					
ANR	8334984	UnaryOperationExpression	& st		8334639	0					
ANR	8334985	UnaryOperator	&		8334639	0					
ANR	8334986	Identifier	st		8334639	1					
ANR	8334987	Argument	"""LOCTYPE=%d\\r\\nLOCUNIT=%d\\r\\n"""		8334639	1					
ANR	8334988	PrimaryExpression	"""LOCTYPE=%d\\r\\nLOCUNIT=%d\\r\\n"""		8334639	0					
ANR	8334989	Argument	pcs -> location_type		8334639	2					
ANR	8334990	PtrMemberAccess	pcs -> location_type		8334639	0					
ANR	8334991	Identifier	pcs		8334639	0					
ANR	8334992	Identifier	location_type		8334639	1					
ANR	8334993	Argument	unit		8334639	3					
ANR	8334994	Identifier	unit		8334639	0					
ANR	8334995	IfStatement	if ( code < 0 )		8334639	13					
ANR	8334996	Condition	code < 0	625:8:21159:21166	8334639	0	True				
ANR	8334997	RelationalExpression	code < 0		8334639	0		<			
ANR	8334998	Identifier	code		8334639	0					
ANR	8334999	PrimaryExpression	0		8334639	1					
ANR	8335000	CompoundStatement		78:18:2578:2578	8334639	1					
ANR	8335001	IfStatement	if ( code == e_Memory )		8334639	0					
ANR	8335002	Condition	code == e_Memory	626:12:21183:21198	8334639	0	True				
ANR	8335003	EqualityExpression	code == e_Memory		8334639	0		==			
ANR	8335004	Identifier	code		8334639	0					
ANR	8335005	Identifier	e_Memory		8334639	1					
ANR	8335006	ExpressionStatement	"stputs ( & st , ""ERROR=INTERNAL ERROR\\r\\n"" )"	627:12:21213:21252	8334639	1	True				
ANR	8335007	CallExpression	"stputs ( & st , ""ERROR=INTERNAL ERROR\\r\\n"" )"		8334639	0					
ANR	8335008	Callee	stputs		8334639	0					
ANR	8335009	Identifier	stputs		8334639	0					
ANR	8335010	ArgumentList	& st		8334639	1					
ANR	8335011	Argument	& st		8334639	0					
ANR	8335012	UnaryOperationExpression	& st		8334639	0					
ANR	8335013	UnaryOperator	&		8334639	0					
ANR	8335014	Identifier	st		8334639	1					
ANR	8335015	Argument	"""ERROR=INTERNAL ERROR\\r\\n"""		8334639	1					
ANR	8335016	PrimaryExpression	"""ERROR=INTERNAL ERROR\\r\\n"""		8334639	0					
ANR	8335017	ElseStatement	else		8334639	0					
ANR	8335018	ExpressionStatement	"stputs ( & st , ""ERROR=INVALID LOCATION\\r\\n"" )"	629:12:21279:21320	8334639	0	True				
ANR	8335019	CallExpression	"stputs ( & st , ""ERROR=INVALID LOCATION\\r\\n"" )"		8334639	0					
ANR	8335020	Callee	stputs		8334639	0					
ANR	8335021	Identifier	stputs		8334639	0					
ANR	8335022	ArgumentList	& st		8334639	1					
ANR	8335023	Argument	& st		8334639	0					
ANR	8335024	UnaryOperationExpression	& st		8334639	0					
ANR	8335025	UnaryOperator	&		8334639	0					
ANR	8335026	Identifier	st		8334639	1					
ANR	8335027	Argument	"""ERROR=INVALID LOCATION\\r\\n"""		8334639	1					
ANR	8335028	PrimaryExpression	"""ERROR=INVALID LOCATION\\r\\n"""		8334639	0					
ANR	8335029	ExpressionStatement	"status_end ( & st , pcs )"	631:4:21332:21352	8334639	14	True				
ANR	8335030	CallExpression	"status_end ( & st , pcs )"		8334639	0					
ANR	8335031	Callee	status_end		8334639	0					
ANR	8335032	Identifier	status_end		8334639	0					
ANR	8335033	ArgumentList	& st		8334639	1					
ANR	8335034	Argument	& st		8334639	0					
ANR	8335035	UnaryOperationExpression	& st		8334639	0					
ANR	8335036	UnaryOperator	&		8334639	0					
ANR	8335037	Identifier	st		8334639	1					
ANR	8335038	Argument	pcs		8334639	1					
ANR	8335039	Identifier	pcs		8334639	0					
ANR	8335040	ReturnStatement	return 0 ;	632:4:21358:21366	8334639	15	True				
ANR	8335041	PrimaryExpression	0		8334639	0					
ANR	8335042	ReturnType	static int		8334639	1					
ANR	8335043	Identifier	pcl_inquire_readback_entity		8334639	2					
ANR	8335044	ParameterList	"pcl_args_t * pargs , pcl_state_t * pcs"		8334639	3					
ANR	8335045	Parameter	pcl_args_t * pargs	547:28:18551:18568	8334639	0	True				
ANR	8335046	ParameterType	pcl_args_t *		8334639	0					
ANR	8335047	Identifier	pargs		8334639	1					
ANR	8335048	Parameter	pcl_state_t * pcs	547:48:18571:18587	8334639	1	True				
ANR	8335049	ParameterType	pcl_state_t *		8334639	0					
ANR	8335050	Identifier	pcs		8334639	1					
ANR	8335051	CFGEntryNode	ENTRY		8334639		True				
ANR	8335052	CFGExitNode	EXIT		8334639		True				
ANR	8335053	Symbol	code		8334639						
ANR	8335054	Symbol	pcds_cartridge_max		8334639						
ANR	8335055	Symbol	* pcs		8334639						
ANR	8335056	Symbol	& st		8334639						
ANR	8335057	Symbol	pcds_cartridge_shift		8334639						
ANR	8335058	Symbol	storage		8334639						
ANR	8335059	Symbol	pcds_all_cartridges		8334639						
ANR	8335060	Symbol	pargs		8334639						
ANR	8335061	Symbol	pos		8334639						
ANR	8335062	Symbol	e_Memory		8334639						
ANR	8335063	Symbol	entity_types		8334639						
ANR	8335064	Symbol	* status_write [ i ]		8334639						
ANR	8335065	Symbol	* entity_types		8334639						
ANR	8335066	Symbol	pcds_permanent		8334639						
ANR	8335067	Symbol	* unit		8334639						
ANR	8335068	Symbol	e_Range		8334639						
ANR	8335069	Symbol	pcds_simm_shift		8334639						
ANR	8335070	Symbol	pcs		8334639						
ANR	8335071	Symbol	st		8334639						
ANR	8335072	Symbol	* * i		8334639						
ANR	8335073	Symbol	pcds_internal		8334639						
ANR	8335074	Symbol	* * status_write		8334639						
ANR	8335075	Symbol	pcds_all_simms		8334639						
ANR	8335076	Symbol	i		8334639						
ANR	8335077	Symbol	status_write		8334639						
ANR	8335078	Symbol	pcds_downloaded		8334639						
ANR	8335079	Symbol	uint_arg		8334639						
ANR	8335080	Symbol	stell		8334639						
ANR	8335081	Symbol	dl_masks		8334639						
ANR	8335082	Symbol	unit		8334639						
ANR	8335083	Symbol	pcds_temporary		8334639						
ANR	8335084	Symbol	* i		8334639						
ANR	8335085	Symbol	pcs -> location_type		8334639						
ANR	8335086	Symbol	* status_write		8334639						
ANR	8335087	Symbol	pcds_simm_max		8334639						
ANR	8335088	Symbol	* dl_masks		8334639						
ANR	8335089	Symbol	pcs -> location_unit		8334639						
ANR	8335090	Function	pcl_free_space	635:0:21371:22336							
ANR	8335091	FunctionDef	"pcl_free_space (pcl_args_t * pargs , pcl_state_t * pcs)"		8335090	0					
ANR	8335092	CompoundStatement		637:0:21475:22336	8335090	0					
ANR	8335093	IdentifierDeclStatement	stream st ;	638:4:21481:21490	8335090	0	True				
ANR	8335094	IdentifierDecl	st		8335090	0					
ANR	8335095	IdentifierDeclType	stream		8335090	0					
ANR	8335096	Identifier	st		8335090	1					
ANR	8335097	ExpressionStatement	"status_begin ( & st , pcs )"	640:4:21497:21519	8335090	1	True				
ANR	8335098	CallExpression	"status_begin ( & st , pcs )"		8335090	0					
ANR	8335099	Callee	status_begin		8335090	0					
ANR	8335100	Identifier	status_begin		8335090	0					
ANR	8335101	ArgumentList	& st		8335090	1					
ANR	8335102	Argument	& st		8335090	0					
ANR	8335103	UnaryOperationExpression	& st		8335090	0					
ANR	8335104	UnaryOperator	&		8335090	0					
ANR	8335105	Identifier	st		8335090	1					
ANR	8335106	Argument	pcs		8335090	1					
ANR	8335107	Identifier	pcs		8335090	0					
ANR	8335108	ExpressionStatement	"stprintf ( & st , ""INFO MEMORY\\r\\n"" )"	641:4:21525:21557	8335090	2	True				
ANR	8335109	CallExpression	"stprintf ( & st , ""INFO MEMORY\\r\\n"" )"		8335090	0					
ANR	8335110	Callee	stprintf		8335090	0					
ANR	8335111	Identifier	stprintf		8335090	0					
ANR	8335112	ArgumentList	& st		8335090	1					
ANR	8335113	Argument	& st		8335090	0					
ANR	8335114	UnaryOperationExpression	& st		8335090	0					
ANR	8335115	UnaryOperator	&		8335090	0					
ANR	8335116	Identifier	st		8335090	1					
ANR	8335117	Argument	"""INFO MEMORY\\r\\n"""		8335090	1					
ANR	8335118	PrimaryExpression	"""INFO MEMORY\\r\\n"""		8335090	0					
ANR	8335119	IfStatement	if ( int_arg ( pargs ) != 1 )		8335090	3					
ANR	8335120	Condition	int_arg ( pargs ) != 1	642:8:21567:21585	8335090	0	True				
ANR	8335121	EqualityExpression	int_arg ( pargs ) != 1		8335090	0		!=			
ANR	8335122	CallExpression	int_arg ( pargs )		8335090	0					
ANR	8335123	Callee	int_arg		8335090	0					
ANR	8335124	Identifier	int_arg		8335090	0					
ANR	8335125	ArgumentList	pargs		8335090	1					
ANR	8335126	Argument	pargs		8335090	0					
ANR	8335127	Identifier	pargs		8335090	0					
ANR	8335128	PrimaryExpression	1		8335090	1					
ANR	8335129	ExpressionStatement	"stprintf ( & st , ""ERROR=INVALID UNIT\\r\\n"" )"	643:8:21596:21635	8335090	1	True				
ANR	8335130	CallExpression	"stprintf ( & st , ""ERROR=INVALID UNIT\\r\\n"" )"		8335090	0					
ANR	8335131	Callee	stprintf		8335090	0					
ANR	8335132	Identifier	stprintf		8335090	0					
ANR	8335133	ArgumentList	& st		8335090	1					
ANR	8335134	Argument	& st		8335090	0					
ANR	8335135	UnaryOperationExpression	& st		8335090	0					
ANR	8335136	UnaryOperator	&		8335090	0					
ANR	8335137	Identifier	st		8335090	1					
ANR	8335138	Argument	"""ERROR=INVALID UNIT\\r\\n"""		8335090	1					
ANR	8335139	PrimaryExpression	"""ERROR=INVALID UNIT\\r\\n"""		8335090	0					
ANR	8335140	ElseStatement	else		8335090	0					
ANR	8335141	CompoundStatement		9:8:180:204	8335090	0					
ANR	8335142	IdentifierDeclStatement	gs_memory_status_t mstat ;	645:8:21656:21680	8335090	0	True				
ANR	8335143	IdentifierDecl	mstat		8335090	0					
ANR	8335144	IdentifierDeclType	gs_memory_status_t		8335090	0					
ANR	8335145	Identifier	mstat		8335090	1					
ANR	8335146	ExpressionStatement	"gs_memory_status ( pcs -> memory , & mstat )"	647:8:21691:21728	8335090	1	True				
ANR	8335147	CallExpression	"gs_memory_status ( pcs -> memory , & mstat )"		8335090	0					
ANR	8335148	Callee	gs_memory_status		8335090	0					
ANR	8335149	Identifier	gs_memory_status		8335090	0					
ANR	8335150	ArgumentList	pcs -> memory		8335090	1					
ANR	8335151	Argument	pcs -> memory		8335090	0					
ANR	8335152	PtrMemberAccess	pcs -> memory		8335090	0					
ANR	8335153	Identifier	pcs		8335090	0					
ANR	8335154	Identifier	memory		8335090	1					
ANR	8335155	Argument	& mstat		8335090	1					
ANR	8335156	UnaryOperationExpression	& mstat		8335090	0					
ANR	8335157	UnaryOperator	&		8335090	0					
ANR	8335158	Identifier	mstat		8335090	1					
ANR	8335159	IfStatement	if ( pcs -> memory != pcs -> memory -> non_gc_memory )		8335090	2					
ANR	8335160	Condition	pcs -> memory != pcs -> memory -> non_gc_memory	648:12:21742:21782	8335090	0	True				
ANR	8335161	EqualityExpression	pcs -> memory != pcs -> memory -> non_gc_memory		8335090	0		!=			
ANR	8335162	PtrMemberAccess	pcs -> memory		8335090	0					
ANR	8335163	Identifier	pcs		8335090	0					
ANR	8335164	Identifier	memory		8335090	1					
ANR	8335165	PtrMemberAccess	pcs -> memory -> non_gc_memory		8335090	1					
ANR	8335166	PtrMemberAccess	pcs -> memory		8335090	0					
ANR	8335167	Identifier	pcs		8335090	0					
ANR	8335168	Identifier	memory		8335090	1					
ANR	8335169	Identifier	non_gc_memory		8335090	1					
ANR	8335170	CompoundStatement		13:12:323:347	8335090	1					
ANR	8335171	IdentifierDeclStatement	gs_memory_status_t dstat ;	649:12:21799:21823	8335090	0	True				
ANR	8335172	IdentifierDecl	dstat		8335090	0					
ANR	8335173	IdentifierDeclType	gs_memory_status_t		8335090	0					
ANR	8335174	Identifier	dstat		8335090	1					
ANR	8335175	ExpressionStatement	"gs_memory_status ( pcs -> memory -> non_gc_memory , & dstat )"	651:12:21838:21890	8335090	1	True				
ANR	8335176	CallExpression	"gs_memory_status ( pcs -> memory -> non_gc_memory , & dstat )"		8335090	0					
ANR	8335177	Callee	gs_memory_status		8335090	0					
ANR	8335178	Identifier	gs_memory_status		8335090	0					
ANR	8335179	ArgumentList	pcs -> memory -> non_gc_memory		8335090	1					
ANR	8335180	Argument	pcs -> memory -> non_gc_memory		8335090	0					
ANR	8335181	PtrMemberAccess	pcs -> memory -> non_gc_memory		8335090	0					
ANR	8335182	PtrMemberAccess	pcs -> memory		8335090	0					
ANR	8335183	Identifier	pcs		8335090	0					
ANR	8335184	Identifier	memory		8335090	1					
ANR	8335185	Identifier	non_gc_memory		8335090	1					
ANR	8335186	Argument	& dstat		8335090	1					
ANR	8335187	UnaryOperationExpression	& dstat		8335090	0					
ANR	8335188	UnaryOperator	&		8335090	0					
ANR	8335189	Identifier	dstat		8335090	1					
ANR	8335190	ExpressionStatement	mstat . allocated += dstat . allocated	652:12:21904:21938	8335090	2	True				
ANR	8335191	AssignmentExpression	mstat . allocated += dstat . allocated		8335090	0		+=			
ANR	8335192	MemberAccess	mstat . allocated		8335090	0					
ANR	8335193	Identifier	mstat		8335090	0					
ANR	8335194	Identifier	allocated		8335090	1					
ANR	8335195	MemberAccess	dstat . allocated		8335090	1					
ANR	8335196	Identifier	dstat		8335090	0					
ANR	8335197	Identifier	allocated		8335090	1					
ANR	8335198	ExpressionStatement	mstat . used += dstat . used	653:12:21952:21976	8335090	3	True				
ANR	8335199	AssignmentExpression	mstat . used += dstat . used		8335090	0		+=			
ANR	8335200	MemberAccess	mstat . used		8335090	0					
ANR	8335201	Identifier	mstat		8335090	0					
ANR	8335202	Identifier	used		8335090	1					
ANR	8335203	MemberAccess	dstat . used		8335090	1					
ANR	8335204	Identifier	dstat		8335090	0					
ANR	8335205	Identifier	used		8335090	1					
ANR	8335206	ExpressionStatement	"stprintf ( & st , ""TOTAL=%ld\\r\\n"" , mstat . allocated - mstat . used )"	655:8:21996:22056	8335090	3	True				
ANR	8335207	CallExpression	"stprintf ( & st , ""TOTAL=%ld\\r\\n"" , mstat . allocated - mstat . used )"		8335090	0					
ANR	8335208	Callee	stprintf		8335090	0					
ANR	8335209	Identifier	stprintf		8335090	0					
ANR	8335210	ArgumentList	& st		8335090	1					
ANR	8335211	Argument	& st		8335090	0					
ANR	8335212	UnaryOperationExpression	& st		8335090	0					
ANR	8335213	UnaryOperator	&		8335090	0					
ANR	8335214	Identifier	st		8335090	1					
ANR	8335215	Argument	"""TOTAL=%ld\\r\\n"""		8335090	1					
ANR	8335216	PrimaryExpression	"""TOTAL=%ld\\r\\n"""		8335090	0					
ANR	8335217	Argument	mstat . allocated - mstat . used		8335090	2					
ANR	8335218	AdditiveExpression	mstat . allocated - mstat . used		8335090	0		-			
ANR	8335219	MemberAccess	mstat . allocated		8335090	0					
ANR	8335220	Identifier	mstat		8335090	0					
ANR	8335221	Identifier	allocated		8335090	1					
ANR	8335222	MemberAccess	mstat . used		8335090	1					
ANR	8335223	Identifier	mstat		8335090	0					
ANR	8335224	Identifier	used		8335090	1					
ANR	8335225	ExpressionStatement	"stprintf ( & st , ""LARGEST=%ld\\r\\n"" , ( mstat . allocated - mstat . used ) >> 2 )"	659:8:22219:22288	8335090	4	True				
ANR	8335226	CallExpression	"stprintf ( & st , ""LARGEST=%ld\\r\\n"" , ( mstat . allocated - mstat . used ) >> 2 )"		8335090	0					
ANR	8335227	Callee	stprintf		8335090	0					
ANR	8335228	Identifier	stprintf		8335090	0					
ANR	8335229	ArgumentList	& st		8335090	1					
ANR	8335230	Argument	& st		8335090	0					
ANR	8335231	UnaryOperationExpression	& st		8335090	0					
ANR	8335232	UnaryOperator	&		8335090	0					
ANR	8335233	Identifier	st		8335090	1					
ANR	8335234	Argument	"""LARGEST=%ld\\r\\n"""		8335090	1					
ANR	8335235	PrimaryExpression	"""LARGEST=%ld\\r\\n"""		8335090	0					
ANR	8335236	Argument	( mstat . allocated - mstat . used ) >> 2		8335090	2					
ANR	8335237	ShiftExpression	( mstat . allocated - mstat . used ) >> 2		8335090	0		>>			
ANR	8335238	AdditiveExpression	mstat . allocated - mstat . used		8335090	0		-			
ANR	8335239	MemberAccess	mstat . allocated		8335090	0					
ANR	8335240	Identifier	mstat		8335090	0					
ANR	8335241	Identifier	allocated		8335090	1					
ANR	8335242	MemberAccess	mstat . used		8335090	1					
ANR	8335243	Identifier	mstat		8335090	0					
ANR	8335244	Identifier	used		8335090	1					
ANR	8335245	PrimaryExpression	2		8335090	1					
ANR	8335246	ExpressionStatement	"status_end ( & st , pcs )"	661:4:22300:22320	8335090	4	True				
ANR	8335247	CallExpression	"status_end ( & st , pcs )"		8335090	0					
ANR	8335248	Callee	status_end		8335090	0					
ANR	8335249	Identifier	status_end		8335090	0					
ANR	8335250	ArgumentList	& st		8335090	1					
ANR	8335251	Argument	& st		8335090	0					
ANR	8335252	UnaryOperationExpression	& st		8335090	0					
ANR	8335253	UnaryOperator	&		8335090	0					
ANR	8335254	Identifier	st		8335090	1					
ANR	8335255	Argument	pcs		8335090	1					
ANR	8335256	Identifier	pcs		8335090	0					
ANR	8335257	ReturnStatement	return 0 ;	662:4:22326:22334	8335090	5	True				
ANR	8335258	PrimaryExpression	0		8335090	0					
ANR	8335259	ReturnType	static int		8335090	1					
ANR	8335260	Identifier	pcl_free_space		8335090	2					
ANR	8335261	ParameterList	"pcl_args_t * pargs , pcl_state_t * pcs"		8335090	3					
ANR	8335262	Parameter	pcl_args_t * pargs	636:15:21436:21453	8335090	0	True				
ANR	8335263	ParameterType	pcl_args_t *		8335090	0					
ANR	8335264	Identifier	pargs		8335090	1					
ANR	8335265	Parameter	pcl_state_t * pcs	636:35:21456:21472	8335090	1	True				
ANR	8335266	ParameterType	pcl_state_t *		8335090	0					
ANR	8335267	Identifier	pcs		8335090	1					
ANR	8335268	CFGEntryNode	ENTRY		8335090		True				
ANR	8335269	CFGExitNode	EXIT		8335090		True				
ANR	8335270	Symbol	pcs		8335090						
ANR	8335271	Symbol	st		8335090						
ANR	8335272	Symbol	& dstat		8335090						
ANR	8335273	Symbol	pcs -> memory -> non_gc_memory		8335090						
ANR	8335274	Symbol	dstat . allocated		8335090						
ANR	8335275	Symbol	dstat . used		8335090						
ANR	8335276	Symbol	& st		8335090						
ANR	8335277	Symbol	* pcs		8335090						
ANR	8335278	Symbol	dstat		8335090						
ANR	8335279	Symbol	mstat . used		8335090						
ANR	8335280	Symbol	int_arg		8335090						
ANR	8335281	Symbol	* * pcs		8335090						
ANR	8335282	Symbol	mstat . allocated		8335090						
ANR	8335283	Symbol	pargs		8335090						
ANR	8335284	Symbol	mstat		8335090						
ANR	8335285	Symbol	* pcs -> memory		8335090						
ANR	8335286	Symbol	pcs -> memory		8335090						
ANR	8335287	Symbol	& mstat		8335090						
ANR	8335288	Function	pcl_flush_all_pages	665:0:22339:22982							
ANR	8335289	FunctionDef	"pcl_flush_all_pages (pcl_args_t * pargs , pcl_state_t * pcs)"		8335288	0					
ANR	8335290	CompoundStatement		667:0:22453:22982	8335288	0					
ANR	8335291	SwitchStatement	switch ( uint_arg ( pargs ) )		8335288	0					
ANR	8335292	Condition	uint_arg ( pargs )	668:12:22467:22481	8335288	0	True				
ANR	8335293	CallExpression	uint_arg ( pargs )		8335288	0					
ANR	8335294	Callee	uint_arg		8335288	0					
ANR	8335295	Identifier	uint_arg		8335288	0					
ANR	8335296	ArgumentList	pargs		8335288	1					
ANR	8335297	Argument	pargs		8335288	0					
ANR	8335298	Identifier	pargs		8335288	0					
ANR	8335299	CompoundStatement		2:29:30:30	8335288	1					
ANR	8335300	Label	case 0 :	669:8:22494:22500	8335288	0	True				
ANR	8335301	CompoundStatement		4:12:60:60	8335288	1					
ANR	8335302	ReturnStatement	return 0 ;	672:16:22634:22642	8335288	0	True				
ANR	8335303	PrimaryExpression	0		8335288	0					
ANR	8335304	Label	case 1 :	674:8:22666:22672	8335288	2	True				
ANR	8335305	CompoundStatement		10:16:320:358	8335288	3					
ANR	8335306	IdentifierDeclStatement	int code = pcl_end_page_if_marked ( pcs ) ;	676:16:22774:22812	8335288	0	True				
ANR	8335307	IdentifierDecl	code = pcl_end_page_if_marked ( pcs )		8335288	0					
ANR	8335308	IdentifierDeclType	int		8335288	0					
ANR	8335309	Identifier	code		8335288	1					
ANR	8335310	AssignmentExpression	code = pcl_end_page_if_marked ( pcs )		8335288	2		=			
ANR	8335311	Identifier	code		8335288	0					
ANR	8335312	CallExpression	pcl_end_page_if_marked ( pcs )		8335288	1					
ANR	8335313	Callee	pcl_end_page_if_marked		8335288	0					
ANR	8335314	Identifier	pcl_end_page_if_marked		8335288	0					
ANR	8335315	ArgumentList	pcs		8335288	1					
ANR	8335316	Argument	pcs		8335288	0					
ANR	8335317	Identifier	pcs		8335288	0					
ANR	8335318	IfStatement	if ( code >= 0 )		8335288	1					
ANR	8335319	Condition	code >= 0	678:20:22835:22843	8335288	0	True				
ANR	8335320	RelationalExpression	code >= 0		8335288	0		>=			
ANR	8335321	Identifier	code		8335288	0					
ANR	8335322	PrimaryExpression	0		8335288	1					
ANR	8335323	ExpressionStatement	pcl_home_cursor ( pcs )	679:20:22866:22886	8335288	1	True				
ANR	8335324	CallExpression	pcl_home_cursor ( pcs )		8335288	0					
ANR	8335325	Callee	pcl_home_cursor		8335288	0					
ANR	8335326	Identifier	pcl_home_cursor		8335288	0					
ANR	8335327	ArgumentList	pcs		8335288	1					
ANR	8335328	Argument	pcs		8335288	0					
ANR	8335329	Identifier	pcs		8335288	0					
ANR	8335330	ReturnStatement	return code ;	680:16:22904:22915	8335288	2	True				
ANR	8335331	Identifier	code		8335288	0					
ANR	8335332	Label	default :	682:8:22939:22946	8335288	4	True				
ANR	8335333	Identifier	default		8335288	0					
ANR	8335334	ReturnStatement	return e_Range ;	683:12:22960:22974	8335288	5	True				
ANR	8335335	Identifier	e_Range		8335288	0					
ANR	8335336	ReturnType	static int		8335288	1					
ANR	8335337	Identifier	pcl_flush_all_pages		8335288	2					
ANR	8335338	ParameterList	"pcl_args_t * pargs , pcl_state_t * pcs"		8335288	3					
ANR	8335339	Parameter	pcl_args_t * pargs	666:20:22414:22431	8335288	0	True				
ANR	8335340	ParameterType	pcl_args_t *		8335288	0					
ANR	8335341	Identifier	pargs		8335288	1					
ANR	8335342	Parameter	pcl_state_t * pcs	666:40:22434:22450	8335288	1	True				
ANR	8335343	ParameterType	pcl_state_t *		8335288	0					
ANR	8335344	Identifier	pcs		8335288	1					
ANR	8335345	CFGEntryNode	ENTRY		8335288		True				
ANR	8335346	CFGExitNode	EXIT		8335288		True				
ANR	8335347	Symbol	e_Range		8335288						
ANR	8335348	Symbol	pcs		8335288						
ANR	8335349	Symbol	code		8335288						
ANR	8335350	Symbol	pargs		8335288						
ANR	8335351	Symbol	pcl_end_page_if_marked		8335288						
ANR	8335352	Symbol	uint_arg		8335288						
ANR	8335353	Function	pcl_echo	687:0:22985:23226							
ANR	8335354	FunctionDef	"pcl_echo (pcl_args_t * pargs , pcl_state_t * pcs)"		8335353	0					
ANR	8335355	CompoundStatement		689:0:23090:23226	8335353	0					
ANR	8335356	IdentifierDeclStatement	stream st ;	690:4:23096:23105	8335353	0	True				
ANR	8335357	IdentifierDecl	st		8335353	0					
ANR	8335358	IdentifierDeclType	stream		8335353	0					
ANR	8335359	Identifier	st		8335353	1					
ANR	8335360	ExpressionStatement	"status_begin ( & st , pcs )"	692:4:23112:23134	8335353	1	True				
ANR	8335361	CallExpression	"status_begin ( & st , pcs )"		8335353	0					
ANR	8335362	Callee	status_begin		8335353	0					
ANR	8335363	Identifier	status_begin		8335353	0					
ANR	8335364	ArgumentList	& st		8335353	1					
ANR	8335365	Argument	& st		8335353	0					
ANR	8335366	UnaryOperationExpression	& st		8335353	0					
ANR	8335367	UnaryOperator	&		8335353	0					
ANR	8335368	Identifier	st		8335353	1					
ANR	8335369	Argument	pcs		8335353	1					
ANR	8335370	Identifier	pcs		8335353	0					
ANR	8335371	ExpressionStatement	"stprintf ( & st , ""ECHO %d\\r\\n"" , int_arg ( pargs ) )"	693:4:23140:23184	8335353	2	True				
ANR	8335372	CallExpression	"stprintf ( & st , ""ECHO %d\\r\\n"" , int_arg ( pargs ) )"		8335353	0					
ANR	8335373	Callee	stprintf		8335353	0					
ANR	8335374	Identifier	stprintf		8335353	0					
ANR	8335375	ArgumentList	& st		8335353	1					
ANR	8335376	Argument	& st		8335353	0					
ANR	8335377	UnaryOperationExpression	& st		8335353	0					
ANR	8335378	UnaryOperator	&		8335353	0					
ANR	8335379	Identifier	st		8335353	1					
ANR	8335380	Argument	"""ECHO %d\\r\\n"""		8335353	1					
ANR	8335381	PrimaryExpression	"""ECHO %d\\r\\n"""		8335353	0					
ANR	8335382	Argument	int_arg ( pargs )		8335353	2					
ANR	8335383	CallExpression	int_arg ( pargs )		8335353	0					
ANR	8335384	Callee	int_arg		8335353	0					
ANR	8335385	Identifier	int_arg		8335353	0					
ANR	8335386	ArgumentList	pargs		8335353	1					
ANR	8335387	Argument	pargs		8335353	0					
ANR	8335388	Identifier	pargs		8335353	0					
ANR	8335389	ExpressionStatement	"status_end ( & st , pcs )"	694:4:23190:23210	8335353	3	True				
ANR	8335390	CallExpression	"status_end ( & st , pcs )"		8335353	0					
ANR	8335391	Callee	status_end		8335353	0					
ANR	8335392	Identifier	status_end		8335353	0					
ANR	8335393	ArgumentList	& st		8335353	1					
ANR	8335394	Argument	& st		8335353	0					
ANR	8335395	UnaryOperationExpression	& st		8335353	0					
ANR	8335396	UnaryOperator	&		8335353	0					
ANR	8335397	Identifier	st		8335353	1					
ANR	8335398	Argument	pcs		8335353	1					
ANR	8335399	Identifier	pcs		8335353	0					
ANR	8335400	ReturnStatement	return 0 ;	695:4:23216:23224	8335353	4	True				
ANR	8335401	PrimaryExpression	0		8335353	0					
ANR	8335402	ReturnType	static int		8335353	1					
ANR	8335403	Identifier	pcl_echo		8335353	2					
ANR	8335404	ParameterList	"pcl_args_t * pargs , pcl_state_t * pcs"		8335353	3					
ANR	8335405	Parameter	pcl_args_t * pargs	688:9:23051:23068	8335353	0	True				
ANR	8335406	ParameterType	pcl_args_t *		8335353	0					
ANR	8335407	Identifier	pargs		8335353	1					
ANR	8335408	Parameter	pcl_state_t * pcs	688:29:23071:23087	8335353	1	True				
ANR	8335409	ParameterType	pcl_state_t *		8335353	0					
ANR	8335410	Identifier	pcs		8335353	1					
ANR	8335411	CFGEntryNode	ENTRY		8335353		True				
ANR	8335412	CFGExitNode	EXIT		8335353		True				
ANR	8335413	Symbol	pcs		8335353						
ANR	8335414	Symbol	st		8335353						
ANR	8335415	Symbol	int_arg		8335353						
ANR	8335416	Symbol	pargs		8335353						
ANR	8335417	Symbol	& st		8335353						
ANR	8335418	Function	pcstatus_do_registration	699:0:23250:24482							
ANR	8335419	FunctionDef	"pcstatus_do_registration (pcl_parser_state_t * pcl_parser_state , gs_memory_t * mem)"		8335418	0					
ANR	8335420	CompoundStatement		702:0:23369:24482	8335418	0					
ANR	8335421	Statement	DEFINE_CLASS	703:4:23429:23440	8335418	0	True				
ANR	8335422	Statement	(	703:16:23441:23441	8335418	1	True				
ANR	8335423	Statement	'*'	703:17:23442:23444	8335418	2	True				
ANR	8335424	Statement	)	703:20:23445:23445	8335418	3	True				
ANR	8335425	CompoundStatement		2:22:77:77	8335418	4					
ANR	8335426	Statement	's'	704:4:23453:23455	8335418	0	True				
ANR	8335427	Statement	","	704:7:23456:23456	8335418	1	True				
ANR	8335428	Statement	'T'	704:9:23458:23460	8335418	2	True				
ANR	8335429	Statement	","	704:12:23461:23461	8335418	3	True				
ANR	8335430	Statement	PCL_COMMAND	705:12:23475:23485	8335418	4	True				
ANR	8335431	Statement	(	705:23:23486:23486	8335418	5	True				
ANR	8335432	Statement	"""Set Readback Location Type"""	705:24:23487:23514	8335418	6	True				
ANR	8335433	Statement	","	705:52:23515:23515	8335418	7	True				
ANR	8335434	Statement	pcl_set_readback_loc_type	706:28:23545:23569	8335418	8	True				
ANR	8335435	Statement	","	706:53:23570:23570	8335418	9	True				
ANR	8335436	Statement	pca_neg_error	707:28:23600:23612	8335418	10	True				
ANR	8335437	Statement	|	707:42:23614:23614	8335418	11	True				
ANR	8335438	Statement	pca_big_error	707:44:23616:23628	8335418	12	True				
ANR	8335439	Statement	)	707:57:23629:23629	8335418	13	True				
ANR	8335440	Statement	","	707:59:23631:23631	8335418	5	True				
ANR	8335441	CompoundStatement		6:61:263:263	8335418	6					
ANR	8335442	Statement	's'	708:4:23639:23641	8335418	0	True				
ANR	8335443	Statement	","	708:7:23642:23642	8335418	1	True				
ANR	8335444	Statement	'U'	708:9:23644:23646	8335418	2	True				
ANR	8335445	Statement	","	708:12:23647:23647	8335418	3	True				
ANR	8335446	Statement	PCL_COMMAND	709:12:23661:23671	8335418	4	True				
ANR	8335447	Statement	(	709:23:23672:23672	8335418	5	True				
ANR	8335448	Statement	"""Set Readback Location Unit"""	709:24:23673:23700	8335418	6	True				
ANR	8335449	Statement	","	709:52:23701:23701	8335418	7	True				
ANR	8335450	Statement	pcl_set_readback_loc_unit	710:28:23731:23755	8335418	8	True				
ANR	8335451	Statement	","	710:53:23756:23756	8335418	9	True				
ANR	8335452	Statement	pca_neg_error	711:28:23786:23798	8335418	10	True				
ANR	8335453	Statement	|	711:42:23800:23800	8335418	11	True				
ANR	8335454	Statement	pca_big_error	711:44:23802:23814	8335418	12	True				
ANR	8335455	Statement	)	711:57:23815:23815	8335418	13	True				
ANR	8335456	Statement	","	711:59:23817:23817	8335418	7	True				
ANR	8335457	CompoundStatement		10:61:449:449	8335418	8					
ANR	8335458	Statement	's'	712:4:23825:23827	8335418	0	True				
ANR	8335459	Statement	","	712:7:23828:23828	8335418	1	True				
ANR	8335460	Statement	'I'	712:9:23830:23832	8335418	2	True				
ANR	8335461	Statement	","	712:12:23833:23833	8335418	3	True				
ANR	8335462	Statement	PCL_COMMAND	713:12:23847:23857	8335418	4	True				
ANR	8335463	Statement	(	713:23:23858:23858	8335418	5	True				
ANR	8335464	Statement	"""Inquire Readback Entity"""	713:24:23859:23883	8335418	6	True				
ANR	8335465	Statement	","	713:49:23884:23884	8335418	7	True				
ANR	8335466	Statement	pcl_inquire_readback_entity	714:28:23914:23940	8335418	8	True				
ANR	8335467	Statement	","	714:55:23941:23941	8335418	9	True				
ANR	8335468	Statement	pca_neg_error	715:28:23971:23983	8335418	10	True				
ANR	8335469	Statement	|	715:42:23985:23985	8335418	11	True				
ANR	8335470	Statement	pca_big_error	715:44:23987:23999	8335418	12	True				
ANR	8335471	Statement	)	715:57:24000:24000	8335418	13	True				
ANR	8335472	Statement	","	715:59:24002:24002	8335418	9	True				
ANR	8335473	CompoundStatement		14:61:634:634	8335418	10					
ANR	8335474	Statement	's'	716:4:24010:24012	8335418	0	True				
ANR	8335475	Statement	","	716:7:24013:24013	8335418	1	True				
ANR	8335476	Statement	'M'	716:9:24015:24017	8335418	2	True				
ANR	8335477	Statement	","	716:12:24018:24018	8335418	3	True				
ANR	8335478	Statement	PCL_COMMAND	717:12:24032:24042	8335418	4	True				
ANR	8335479	Statement	(	717:23:24043:24043	8335418	5	True				
ANR	8335480	Statement	"""Free Space"""	717:24:24044:24055	8335418	6	True				
ANR	8335481	Statement	","	717:36:24056:24056	8335418	7	True				
ANR	8335482	Statement	pcl_free_space	717:38:24058:24071	8335418	8	True				
ANR	8335483	Statement	","	717:52:24072:24072	8335418	9	True				
ANR	8335484	Statement	pca_neg_ok	718:28:24102:24111	8335418	10	True				
ANR	8335485	Statement	|	718:39:24113:24113	8335418	11	True				
ANR	8335486	Statement	pca_big_ok	718:41:24115:24124	8335418	12	True				
ANR	8335487	Statement	)	718:51:24125:24125	8335418	13	True				
ANR	8335488	Statement	","	718:53:24127:24127	8335418	11	True				
ANR	8335489	Statement	END_CLASS	719:8:24137:24145	8335418	12	True				
ANR	8335490	Statement	DEFINE_CLASS_COMMAND_ARGS	720:8:24155:24179	8335418	13	True				
ANR	8335491	Statement	(	720:33:24180:24180	8335418	14	True				
ANR	8335492	Statement	'&'	720:34:24181:24183	8335418	15	True				
ANR	8335493	Statement	","	720:37:24184:24184	8335418	16	True				
ANR	8335494	Statement	'r'	720:39:24186:24188	8335418	17	True				
ANR	8335495	Statement	","	720:42:24189:24189	8335418	18	True				
ANR	8335496	Statement	'F'	720:44:24191:24193	8335418	19	True				
ANR	8335497	Statement	","	720:47:24194:24194	8335418	20	True				
ANR	8335498	Statement	"""Flush All Pages"""	720:49:24196:24212	8335418	21	True				
ANR	8335499	Statement	","	720:66:24213:24213	8335418	22	True				
ANR	8335500	Statement	pcl_flush_all_pages	721:34:24249:24267	8335418	23	True				
ANR	8335501	Statement	","	721:53:24268:24268	8335418	24	True				
ANR	8335502	Statement	pca_neg_error	722:34:24304:24316	8335418	25	True				
ANR	8335503	Statement	|	722:48:24318:24318	8335418	26	True				
ANR	8335504	Statement	pca_big_error	722:50:24320:24332	8335418	27	True				
ANR	8335505	Statement	)	722:63:24333:24333	8335418	28	True				
ANR	8335506	Statement	DEFINE_CLASS_COMMAND_ARGS	723:8:24343:24367	8335418	29	True				
ANR	8335507	Statement	(	723:33:24368:24368	8335418	30	True				
ANR	8335508	Statement	'*'	723:34:24369:24371	8335418	31	True				
ANR	8335509	Statement	","	723:37:24372:24372	8335418	32	True				
ANR	8335510	Statement	's'	723:39:24374:24376	8335418	33	True				
ANR	8335511	Statement	","	723:42:24377:24377	8335418	34	True				
ANR	8335512	Statement	'X'	723:44:24379:24381	8335418	35	True				
ANR	8335513	Statement	","	723:47:24382:24382	8335418	36	True				
ANR	8335514	Statement	"""Echo"""	723:49:24384:24389	8335418	37	True				
ANR	8335515	Statement	","	723:55:24390:24390	8335418	38	True				
ANR	8335516	Statement	pcl_echo	724:34:24426:24433	8335418	39	True				
ANR	8335517	Statement	","	724:42:24434:24434	8335418	40	True				
ANR	8335518	Statement	pca_neg_ok	724:44:24436:24445	8335418	41	True				
ANR	8335519	Statement	|	724:55:24447:24447	8335418	42	True				
ANR	8335520	Statement	pca_big_error	724:57:24449:24461	8335418	43	True				
ANR	8335521	Statement	)	724:70:24462:24462	8335418	44	True				
ANR	8335522	ReturnStatement	return 0 ;	725:8:24472:24480	8335418	45	True				
ANR	8335523	PrimaryExpression	0		8335418	0					
ANR	8335524	ReturnType	static int		8335418	1					
ANR	8335525	Identifier	pcstatus_do_registration		8335418	2					
ANR	8335526	ParameterList	"pcl_parser_state_t * pcl_parser_state , gs_memory_t * mem"		8335418	3					
ANR	8335527	Parameter	pcl_parser_state_t * pcl_parser_state	700:25:23286:23322	8335418	0	True				
ANR	8335528	ParameterType	pcl_parser_state_t *		8335418	0					
ANR	8335529	Identifier	pcl_parser_state		8335418	1					
ANR	8335530	Parameter	gs_memory_t * mem	701:25:23350:23366	8335418	1	True				
ANR	8335531	ParameterType	gs_memory_t *		8335418	0					
ANR	8335532	Identifier	mem		8335418	1					
ANR	8335533	CFGEntryNode	ENTRY		8335418		True				
ANR	8335534	CFGExitNode	EXIT		8335418		True				
ANR	8335535	Symbol	mem		8335418						
ANR	8335536	Symbol	pcl_parser_state		8335418						
ANR	8335537	Function	pcstatus_do_reset	727:0:24484:24863							
ANR	8335538	FunctionDef	"pcstatus_do_reset (pcl_state_t * pcs , pcl_reset_type_t type)"		8335537	0					
ANR	8335539	CompoundStatement		729:0:24555:24863	8335537	0					
ANR	8335540	IfStatement	if ( type & ( pcl_reset_initial | pcl_reset_printer ) )		8335537	0					
ANR	8335541	Condition	type & ( pcl_reset_initial | pcl_reset_printer )	730:8:24565:24610	8335537	0	True				
ANR	8335542	BitAndExpression	type & ( pcl_reset_initial | pcl_reset_printer )		8335537	0		&			
ANR	8335543	Identifier	type		8335537	0					
ANR	8335544	InclusiveOrExpression	pcl_reset_initial | pcl_reset_printer		8335537	1		|			
ANR	8335545	Identifier	pcl_reset_initial		8335537	0					
ANR	8335546	Identifier	pcl_reset_printer		8335537	1					
ANR	8335547	CompoundStatement		2:56:57:57	8335537	1					
ANR	8335548	IfStatement	if ( type & pcl_reset_initial )		8335537	0					
ANR	8335549	Condition	type & pcl_reset_initial	731:12:24627:24650	8335537	0	True				
ANR	8335550	BitAndExpression	type & pcl_reset_initial		8335537	0		&			
ANR	8335551	Identifier	type		8335537	0					
ANR	8335552	Identifier	pcl_reset_initial		8335537	1					
ANR	8335553	CompoundStatement		3:38:97:97	8335537	1					
ANR	8335554	ExpressionStatement	pcs -> status . buffer = 0	732:12:24667:24689	8335537	0	True				
ANR	8335555	AssignmentExpression	pcs -> status . buffer = 0		8335537	0		=			
ANR	8335556	MemberAccess	pcs -> status . buffer		8335537	0					
ANR	8335557	PtrMemberAccess	pcs -> status		8335537	0					
ANR	8335558	Identifier	pcs		8335537	0					
ANR	8335559	Identifier	status		8335537	1					
ANR	8335560	Identifier	buffer		8335537	1					
ANR	8335561	PrimaryExpression	0		8335537	1					
ANR	8335562	ExpressionStatement	pcs -> status . write_pos = 0	733:12:24703:24728	8335537	1	True				
ANR	8335563	AssignmentExpression	pcs -> status . write_pos = 0		8335537	0		=			
ANR	8335564	MemberAccess	pcs -> status . write_pos		8335537	0					
ANR	8335565	PtrMemberAccess	pcs -> status		8335537	0					
ANR	8335566	Identifier	pcs		8335537	0					
ANR	8335567	Identifier	status		8335537	1					
ANR	8335568	Identifier	write_pos		8335537	1					
ANR	8335569	PrimaryExpression	0		8335537	1					
ANR	8335570	ExpressionStatement	pcs -> status . read_pos = 0	734:12:24742:24766	8335537	2	True				
ANR	8335571	AssignmentExpression	pcs -> status . read_pos = 0		8335537	0		=			
ANR	8335572	MemberAccess	pcs -> status . read_pos		8335537	0					
ANR	8335573	PtrMemberAccess	pcs -> status		8335537	0					
ANR	8335574	Identifier	pcs		8335537	0					
ANR	8335575	Identifier	status		8335537	1					
ANR	8335576	Identifier	read_pos		8335537	1					
ANR	8335577	PrimaryExpression	0		8335537	1					
ANR	8335578	ExpressionStatement	pcs -> location_type = 0	736:8:24786:24808	8335537	1	True				
ANR	8335579	AssignmentExpression	pcs -> location_type = 0		8335537	0		=			
ANR	8335580	PtrMemberAccess	pcs -> location_type		8335537	0					
ANR	8335581	Identifier	pcs		8335537	0					
ANR	8335582	Identifier	location_type		8335537	1					
ANR	8335583	PrimaryExpression	0		8335537	1					
ANR	8335584	ExpressionStatement	pcs -> location_unit = 0	737:8:24818:24840	8335537	2	True				
ANR	8335585	AssignmentExpression	pcs -> location_unit = 0		8335537	0		=			
ANR	8335586	PtrMemberAccess	pcs -> location_unit		8335537	0					
ANR	8335587	Identifier	pcs		8335537	0					
ANR	8335588	Identifier	location_unit		8335537	1					
ANR	8335589	PrimaryExpression	0		8335537	1					
ANR	8335590	ReturnStatement	return 0 ;	740:4:24853:24861	8335537	1	True				
ANR	8335591	PrimaryExpression	0		8335537	0					
ANR	8335592	ReturnType	static int		8335537	1					
ANR	8335593	Identifier	pcstatus_do_reset		8335537	2					
ANR	8335594	ParameterList	"pcl_state_t * pcs , pcl_reset_type_t type"		8335537	3					
ANR	8335595	Parameter	pcl_state_t * pcs	728:18:24513:24529	8335537	0	True				
ANR	8335596	ParameterType	pcl_state_t *		8335537	0					
ANR	8335597	Identifier	pcs		8335537	1					
ANR	8335598	Parameter	pcl_reset_type_t type	728:37:24532:24552	8335537	1	True				
ANR	8335599	ParameterType	pcl_reset_type_t		8335537	0					
ANR	8335600	Identifier	type		8335537	1					
ANR	8335601	CFGEntryNode	ENTRY		8335537		True				
ANR	8335602	CFGExitNode	EXIT		8335537		True				
ANR	8335603	Symbol	pcs		8335537						
ANR	8335604	Symbol	pcs -> status		8335537						
ANR	8335605	Symbol	pcs -> location_type		8335537						
ANR	8335606	Symbol	pcs -> status . write_pos		8335537						
ANR	8335607	Symbol	pcl_reset_printer		8335537						
ANR	8335608	Symbol	* pcs		8335537						
ANR	8335609	Symbol	pcs -> status . buffer		8335537						
ANR	8335610	Symbol	type		8335537						
ANR	8335611	Symbol	pcs -> status . read_pos		8335537						
ANR	8335612	Symbol	pcl_reset_initial		8335537						
ANR	8335613	Symbol	pcs -> location_unit		8335537						
ANR	8335614	DeclStmt									
ANR	8335615	Decl							const pcl_init_t	const pcl_init_t	pcstatus_init
