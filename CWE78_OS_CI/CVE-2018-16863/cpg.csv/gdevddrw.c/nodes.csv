command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3998266	File	data/converged/CVE-2018-16863_ghostpdl/gdevddrw.c								
ANR	3998267	Function	fixed_mult_rem	43:0:1237:1406							
ANR	3998268	FunctionDef	"fixed_mult_rem (fixed a , fixed b , fixed c)"		3998267	0					
ANR	3998269	CompoundStatement		45:0:1292:1406	3998267	0					
ANR	3998270	ReturnStatement	"return a * b - fixed_mult_quo ( a , b , c ) * c ;"	47:4:1362:1404	3998267	0	True				
ANR	3998271	AdditiveExpression	"a * b - fixed_mult_quo ( a , b , c ) * c"		3998267	0		-			
ANR	3998272	MultiplicativeExpression	a * b		3998267	0		*			
ANR	3998273	Identifier	a		3998267	0					
ANR	3998274	Identifier	b		3998267	1					
ANR	3998275	MultiplicativeExpression	"fixed_mult_quo ( a , b , c ) * c"		3998267	1		*			
ANR	3998276	CallExpression	"fixed_mult_quo ( a , b , c )"		3998267	0					
ANR	3998277	Callee	fixed_mult_quo		3998267	0					
ANR	3998278	Identifier	fixed_mult_quo		3998267	0					
ANR	3998279	ArgumentList	a		3998267	1					
ANR	3998280	Argument	a		3998267	0					
ANR	3998281	Identifier	a		3998267	0					
ANR	3998282	Argument	b		3998267	1					
ANR	3998283	Identifier	b		3998267	0					
ANR	3998284	Argument	c		3998267	2					
ANR	3998285	Identifier	c		3998267	0					
ANR	3998286	Identifier	c		3998267	1					
ANR	3998287	ReturnType	static fixed		3998267	1					
ANR	3998288	Identifier	fixed_mult_rem		3998267	2					
ANR	3998289	ParameterList	"fixed a , fixed b , fixed c"		3998267	3					
ANR	3998290	Parameter	fixed a	44:15:1265:1271	3998267	0	True				
ANR	3998291	ParameterType	fixed		3998267	0					
ANR	3998292	Identifier	a		3998267	1					
ANR	3998293	Parameter	fixed b	44:24:1274:1280	3998267	1	True				
ANR	3998294	ParameterType	fixed		3998267	0					
ANR	3998295	Identifier	b		3998267	1					
ANR	3998296	Parameter	fixed c	44:33:1283:1289	3998267	2	True				
ANR	3998297	ParameterType	fixed		3998267	0					
ANR	3998298	Identifier	c		3998267	1					
ANR	3998299	CFGEntryNode	ENTRY		3998267		True				
ANR	3998300	CFGExitNode	EXIT		3998267		True				
ANR	3998301	Symbol	a		3998267						
ANR	3998302	Symbol	b		3998267						
ANR	3998303	Symbol	fixed_mult_quo		3998267						
ANR	3998304	Symbol	c		3998267						
ANR	3998305	ClassDef	trap_line_s	54:8:1554:2932							
ANR	3998306	DeclStmt									
ANR	3998307	Decl							fixed	fixed	h
ANR	3998308	DeclStmt									
ANR	3998309	Decl							int	int	di
ANR	3998310	DeclStmt									
ANR	3998311	Decl							fixed	fixed	df
ANR	3998312	DeclStmt									
ANR	3998313	Decl							fixed	fixed	x
ANR	3998314	Decl							fixed	fixed	xf
ANR	3998315	DeclStmt									
ANR	3998316	Decl							fixed	fixed	ldi
ANR	3998317	Decl							fixed	fixed	ldf
ANR	3998318	DeclStmt									
ANR	3998319	Decl							trap_line_s	trap_line_s	trap_line
ANR	3998320	ClassDef	trap_gradient_s	97:8:3086:3353							
ANR	3998321	DeclStmt									
ANR	3998322	Decl							frac31	frac31 *	c
ANR	3998323	DeclStmt									
ANR	3998324	Decl							int32_t	int32_t *	f
ANR	3998325	DeclStmt									
ANR	3998326	Decl							int32_t	int32_t *	num
ANR	3998327	DeclStmt									
ANR	3998328	Decl							int32_t	int32_t	den
ANR	3998329	DeclStmt									
ANR	3998330	Decl							trap_gradient_s	trap_gradient_s	trap_gradient
ANR	3998331	Function	compute_dx	109:0:3566:4121							
ANR	3998332	FunctionDef	"compute_dx (trap_line * tl , fixed xd , fixed ys)"		3998331	0					
ANR	3998333	CompoundStatement		111:0:3631:4121	3998331	0					
ANR	3998334	IdentifierDeclStatement	fixed h = tl -> h ;	112:4:3637:3652	3998331	0	True				
ANR	3998335	IdentifierDecl	h = tl -> h		3998331	0					
ANR	3998336	IdentifierDeclType	fixed		3998331	0					
ANR	3998337	Identifier	h		3998331	1					
ANR	3998338	AssignmentExpression	h = tl -> h		3998331	2		=			
ANR	3998339	Identifier	h		3998331	0					
ANR	3998340	PtrMemberAccess	tl -> h		3998331	1					
ANR	3998341	Identifier	tl		3998331	0					
ANR	3998342	Identifier	h		3998331	1					
ANR	3998343	IdentifierDeclStatement	int di ;	113:4:3658:3664	3998331	1	True				
ANR	3998344	IdentifierDecl	di		3998331	0					
ANR	3998345	IdentifierDeclType	int		3998331	0					
ANR	3998346	Identifier	di		3998331	1					
ANR	3998347	IfStatement	if ( xd >= 0 )		3998331	2					
ANR	3998348	Condition	xd >= 0	115:8:3675:3681	3998331	0	True				
ANR	3998349	RelationalExpression	xd >= 0		3998331	0		>=			
ANR	3998350	Identifier	xd		3998331	0					
ANR	3998351	PrimaryExpression	0		3998331	1					
ANR	3998352	CompoundStatement		5:17:52:52	3998331	1					
ANR	3998353	IfStatement	if ( xd < h )		3998331	0					
ANR	3998354	Condition	xd < h	116:12:3698:3703	3998331	0	True				
ANR	3998355	RelationalExpression	xd < h		3998331	0		<			
ANR	3998356	Identifier	xd		3998331	0					
ANR	3998357	Identifier	h		3998331	1					
ANR	3998358	ExpressionStatement	"tl -> di = 0 , tl -> df = xd"	117:12:3718:3741	3998331	1	True				
ANR	3998359	Expression	"tl -> di = 0 , tl -> df = xd"		3998331	0					
ANR	3998360	AssignmentExpression	tl -> di = 0		3998331	0		=			
ANR	3998361	PtrMemberAccess	tl -> di		3998331	0					
ANR	3998362	Identifier	tl		3998331	0					
ANR	3998363	Identifier	di		3998331	1					
ANR	3998364	PrimaryExpression	0		3998331	1					
ANR	3998365	AssignmentExpression	tl -> df = xd		3998331	1		=			
ANR	3998366	PtrMemberAccess	tl -> df		3998331	0					
ANR	3998367	Identifier	tl		3998331	0					
ANR	3998368	Identifier	df		3998331	1					
ANR	3998369	Identifier	xd		3998331	1					
ANR	3998370	ElseStatement	else		3998331	0					
ANR	3998371	CompoundStatement		8:13:124:124	3998331	0					
ANR	3998372	ExpressionStatement	tl -> di = di = ( int ) ( xd / h )	119:12:3770:3797	3998331	0	True				
ANR	3998373	AssignmentExpression	tl -> di = di = ( int ) ( xd / h )		3998331	0		=			
ANR	3998374	PtrMemberAccess	tl -> di		3998331	0					
ANR	3998375	Identifier	tl		3998331	0					
ANR	3998376	Identifier	di		3998331	1					
ANR	3998377	AssignmentExpression	di = ( int ) ( xd / h )		3998331	1		=			
ANR	3998378	Identifier	di		3998331	0					
ANR	3998379	CastExpression	( int ) ( xd / h )		3998331	1					
ANR	3998380	CastTarget	int		3998331	0					
ANR	3998381	MultiplicativeExpression	xd / h		3998331	1		/			
ANR	3998382	Identifier	xd		3998331	0					
ANR	3998383	Identifier	h		3998331	1					
ANR	3998384	ExpressionStatement	tl -> df = xd - di * h	120:12:3811:3831	3998331	1	True				
ANR	3998385	AssignmentExpression	tl -> df = xd - di * h		3998331	0		=			
ANR	3998386	PtrMemberAccess	tl -> df		3998331	0					
ANR	3998387	Identifier	tl		3998331	0					
ANR	3998388	Identifier	df		3998331	1					
ANR	3998389	AdditiveExpression	xd - di * h		3998331	1		-			
ANR	3998390	Identifier	xd		3998331	0					
ANR	3998391	MultiplicativeExpression	di * h		3998331	1		*			
ANR	3998392	Identifier	di		3998331	0					
ANR	3998393	Identifier	h		3998331	1					
ANR	3998394	ExpressionStatement	tl -> x += ys * di	121:12:3845:3861	3998331	2	True				
ANR	3998395	AssignmentExpression	tl -> x += ys * di		3998331	0		+=			
ANR	3998396	PtrMemberAccess	tl -> x		3998331	0					
ANR	3998397	Identifier	tl		3998331	0					
ANR	3998398	Identifier	x		3998331	1					
ANR	3998399	MultiplicativeExpression	ys * di		3998331	1		*			
ANR	3998400	Identifier	ys		3998331	0					
ANR	3998401	Identifier	di		3998331	1					
ANR	3998402	ElseStatement	else		3998331	0					
ANR	3998403	CompoundStatement		13:11:252:252	3998331	0					
ANR	3998404	IfStatement	if ( ( tl -> df = xd + h ) >= 0 )		3998331	0					
ANR	3998405	Condition	( tl -> df = xd + h ) >= 0	124:12:3898:3919	3998331	0	True				
ANR	3998406	RelationalExpression	( tl -> df = xd + h ) >= 0		3998331	0		>=			
ANR	3998407	AssignmentExpression	tl -> df = xd + h		3998331	0		=			
ANR	3998408	PtrMemberAccess	tl -> df		3998331	0					
ANR	3998409	Identifier	tl		3998331	0					
ANR	3998410	Identifier	df		3998331	1					
ANR	3998411	AdditiveExpression	xd + h		3998331	1		+			
ANR	3998412	Identifier	xd		3998331	0					
ANR	3998413	Identifier	h		3998331	1					
ANR	3998414	PrimaryExpression	0		3998331	1					
ANR	3998415	ExpressionStatement	"tl -> di = - 1 , tl -> x -= ys"	125:12:3949:3973	3998331	1	True				
ANR	3998416	Expression	"tl -> di = - 1 , tl -> x -= ys"		3998331	0					
ANR	3998417	AssignmentExpression	tl -> di = - 1		3998331	0		=			
ANR	3998418	PtrMemberAccess	tl -> di		3998331	0					
ANR	3998419	Identifier	tl		3998331	0					
ANR	3998420	Identifier	di		3998331	1					
ANR	3998421	UnaryOperationExpression	- 1		3998331	1					
ANR	3998422	UnaryOperator	-		3998331	0					
ANR	3998423	PrimaryExpression	1		3998331	1					
ANR	3998424	AssignmentExpression	tl -> x -= ys		3998331	1		-=			
ANR	3998425	PtrMemberAccess	tl -> x		3998331	0					
ANR	3998426	Identifier	tl		3998331	0					
ANR	3998427	Identifier	x		3998331	1					
ANR	3998428	Identifier	ys		3998331	1					
ANR	3998429	ElseStatement	else		3998331	0					
ANR	3998430	CompoundStatement		16:13:356:356	3998331	0					
ANR	3998431	ExpressionStatement	tl -> di = di = ( int ) ( ( xd + 1 ) / h - 1 )	127:12:4002:4039	3998331	0	True				
ANR	3998432	AssignmentExpression	tl -> di = di = ( int ) ( ( xd + 1 ) / h - 1 )		3998331	0		=			
ANR	3998433	PtrMemberAccess	tl -> di		3998331	0					
ANR	3998434	Identifier	tl		3998331	0					
ANR	3998435	Identifier	di		3998331	1					
ANR	3998436	AssignmentExpression	di = ( int ) ( ( xd + 1 ) / h - 1 )		3998331	1		=			
ANR	3998437	Identifier	di		3998331	0					
ANR	3998438	CastExpression	( int ) ( ( xd + 1 ) / h - 1 )		3998331	1					
ANR	3998439	CastTarget	int		3998331	0					
ANR	3998440	AdditiveExpression	( xd + 1 ) / h - 1		3998331	1		-			
ANR	3998441	MultiplicativeExpression	( xd + 1 ) / h		3998331	0		/			
ANR	3998442	AdditiveExpression	xd + 1		3998331	0		+			
ANR	3998443	Identifier	xd		3998331	0					
ANR	3998444	PrimaryExpression	1		3998331	1					
ANR	3998445	Identifier	h		3998331	1					
ANR	3998446	PrimaryExpression	1		3998331	1					
ANR	3998447	ExpressionStatement	tl -> df = xd - di * h	128:12:4053:4073	3998331	1	True				
ANR	3998448	AssignmentExpression	tl -> df = xd - di * h		3998331	0		=			
ANR	3998449	PtrMemberAccess	tl -> df		3998331	0					
ANR	3998450	Identifier	tl		3998331	0					
ANR	3998451	Identifier	df		3998331	1					
ANR	3998452	AdditiveExpression	xd - di * h		3998331	1		-			
ANR	3998453	Identifier	xd		3998331	0					
ANR	3998454	MultiplicativeExpression	di * h		3998331	1		*			
ANR	3998455	Identifier	di		3998331	0					
ANR	3998456	Identifier	h		3998331	1					
ANR	3998457	ExpressionStatement	tl -> x += ys * di	129:12:4087:4103	3998331	2	True				
ANR	3998458	AssignmentExpression	tl -> x += ys * di		3998331	0		+=			
ANR	3998459	PtrMemberAccess	tl -> x		3998331	0					
ANR	3998460	Identifier	tl		3998331	0					
ANR	3998461	Identifier	x		3998331	1					
ANR	3998462	MultiplicativeExpression	ys * di		3998331	1		*			
ANR	3998463	Identifier	ys		3998331	0					
ANR	3998464	Identifier	di		3998331	1					
ANR	3998465	ReturnType	static inline void		3998331	1					
ANR	3998466	Identifier	compute_dx		3998331	2					
ANR	3998467	ParameterList	"trap_line * tl , fixed xd , fixed ys"		3998331	3					
ANR	3998468	Parameter	trap_line * tl	110:11:3596:3608	3998331	0	True				
ANR	3998469	ParameterType	trap_line *		3998331	0					
ANR	3998470	Identifier	tl		3998331	1					
ANR	3998471	Parameter	fixed xd	110:26:3611:3618	3998331	1	True				
ANR	3998472	ParameterType	fixed		3998331	0					
ANR	3998473	Identifier	xd		3998331	1					
ANR	3998474	Parameter	fixed ys	110:36:3621:3628	3998331	2	True				
ANR	3998475	ParameterType	fixed		3998331	0					
ANR	3998476	Identifier	ys		3998331	1					
ANR	3998477	CFGEntryNode	ENTRY		3998331		True				
ANR	3998478	CFGExitNode	EXIT		3998331		True				
ANR	3998479	Symbol	tl -> df		3998331						
ANR	3998480	Symbol	di		3998331						
ANR	3998481	Symbol	tl -> h		3998331						
ANR	3998482	Symbol	tl -> di		3998331						
ANR	3998483	Symbol	tl -> x		3998331						
ANR	3998484	Symbol	tl		3998331						
ANR	3998485	Symbol	h		3998331						
ANR	3998486	Symbol	ys		3998331						
ANR	3998487	Symbol	xd		3998331						
ANR	3998488	Symbol	* tl		3998331						
ANR	3998489	Function	compute_ldx	137:0:4209:4907							
ANR	3998490	FunctionDef	"compute_ldx (trap_line * tl , fixed ys)"		3998489	0					
ANR	3998491	CompoundStatement		139:0:4265:4907	3998489	0					
ANR	3998492	IdentifierDeclStatement	int di = tl -> di ;	140:4:4271:4286	3998489	0	True				
ANR	3998493	IdentifierDecl	di = tl -> di		3998489	0					
ANR	3998494	IdentifierDeclType	int		3998489	0					
ANR	3998495	Identifier	di		3998489	1					
ANR	3998496	AssignmentExpression	di = tl -> di		3998489	2		=			
ANR	3998497	Identifier	di		3998489	0					
ANR	3998498	PtrMemberAccess	tl -> di		3998489	1					
ANR	3998499	Identifier	tl		3998489	0					
ANR	3998500	Identifier	di		3998489	1					
ANR	3998501	IdentifierDeclStatement	fixed df = tl -> df ;	141:4:4292:4309	3998489	1	True				
ANR	3998502	IdentifierDecl	df = tl -> df		3998489	0					
ANR	3998503	IdentifierDeclType	fixed		3998489	0					
ANR	3998504	Identifier	df		3998489	1					
ANR	3998505	AssignmentExpression	df = tl -> df		3998489	2		=			
ANR	3998506	Identifier	df		3998489	0					
ANR	3998507	PtrMemberAccess	tl -> df		3998489	1					
ANR	3998508	Identifier	tl		3998489	0					
ANR	3998509	Identifier	df		3998489	1					
ANR	3998510	IdentifierDeclStatement	fixed h = tl -> h ;	142:4:4315:4330	3998489	2	True				
ANR	3998511	IdentifierDecl	h = tl -> h		3998489	0					
ANR	3998512	IdentifierDeclType	fixed		3998489	0					
ANR	3998513	Identifier	h		3998489	1					
ANR	3998514	AssignmentExpression	h = tl -> h		3998489	2		=			
ANR	3998515	Identifier	h		3998489	0					
ANR	3998516	PtrMemberAccess	tl -> h		3998489	1					
ANR	3998517	Identifier	tl		3998489	0					
ANR	3998518	Identifier	h		3998489	1					
ANR	3998519	IfStatement	if ( df < YMULT_LIMIT )		3998489	3					
ANR	3998520	Condition	df < YMULT_LIMIT	144:9:4342:4357	3998489	0	True				
ANR	3998521	RelationalExpression	df < YMULT_LIMIT		3998489	0		<			
ANR	3998522	Identifier	df		3998489	0					
ANR	3998523	Identifier	YMULT_LIMIT		3998489	1					
ANR	3998524	CompoundStatement		6:28:95:95	3998489	1					
ANR	3998525	IfStatement	if ( df == 0 )		3998489	0					
ANR	3998526	Condition	df == 0	145:14:4377:4383	3998489	0	True				
ANR	3998527	EqualityExpression	df == 0		3998489	0		==			
ANR	3998528	Identifier	df		3998489	0					
ANR	3998529	PrimaryExpression	0		3998489	1					
ANR	3998530	ExpressionStatement	"tl -> ldi = int2fixed ( di ) , tl -> ldf = 0 , tl -> xf = - h"	146:13:4441:4490	3998489	1	True				
ANR	3998531	Expression	"tl -> ldi = int2fixed ( di ) , tl -> ldf = 0 , tl -> xf = - h"		3998489	0					
ANR	3998532	AssignmentExpression	tl -> ldi = int2fixed ( di )		3998489	0		=			
ANR	3998533	PtrMemberAccess	tl -> ldi		3998489	0					
ANR	3998534	Identifier	tl		3998489	0					
ANR	3998535	Identifier	ldi		3998489	1					
ANR	3998536	CallExpression	int2fixed ( di )		3998489	1					
ANR	3998537	Callee	int2fixed		3998489	0					
ANR	3998538	Identifier	int2fixed		3998489	0					
ANR	3998539	ArgumentList	di		3998489	1					
ANR	3998540	Argument	di		3998489	0					
ANR	3998541	Identifier	di		3998489	0					
ANR	3998542	Expression	"tl -> ldf = 0 , tl -> xf = - h"		3998489	1					
ANR	3998543	AssignmentExpression	tl -> ldf = 0		3998489	0		=			
ANR	3998544	PtrMemberAccess	tl -> ldf		3998489	0					
ANR	3998545	Identifier	tl		3998489	0					
ANR	3998546	Identifier	ldf		3998489	1					
ANR	3998547	PrimaryExpression	0		3998489	1					
ANR	3998548	AssignmentExpression	tl -> xf = - h		3998489	1		=			
ANR	3998549	PtrMemberAccess	tl -> xf		3998489	0					
ANR	3998550	Identifier	tl		3998489	0					
ANR	3998551	Identifier	xf		3998489	1					
ANR	3998552	UnaryOperationExpression	- h		3998489	1					
ANR	3998553	UnaryOperator	-		3998489	0					
ANR	3998554	Identifier	h		3998489	1					
ANR	3998555	ElseStatement	else		3998489	0					
ANR	3998556	CompoundStatement		9:14:240:240	3998489	0					
ANR	3998557	ExpressionStatement	tl -> ldi = int2fixed ( di ) + int2fixed ( df ) / h	148:13:4521:4564	3998489	0	True				
ANR	3998558	AssignmentExpression	tl -> ldi = int2fixed ( di ) + int2fixed ( df ) / h		3998489	0		=			
ANR	3998559	PtrMemberAccess	tl -> ldi		3998489	0					
ANR	3998560	Identifier	tl		3998489	0					
ANR	3998561	Identifier	ldi		3998489	1					
ANR	3998562	AdditiveExpression	int2fixed ( di ) + int2fixed ( df ) / h		3998489	1		+			
ANR	3998563	CallExpression	int2fixed ( di )		3998489	0					
ANR	3998564	Callee	int2fixed		3998489	0					
ANR	3998565	Identifier	int2fixed		3998489	0					
ANR	3998566	ArgumentList	di		3998489	1					
ANR	3998567	Argument	di		3998489	0					
ANR	3998568	Identifier	di		3998489	0					
ANR	3998569	MultiplicativeExpression	int2fixed ( df ) / h		3998489	1		/			
ANR	3998570	CallExpression	int2fixed ( df )		3998489	0					
ANR	3998571	Callee	int2fixed		3998489	0					
ANR	3998572	Identifier	int2fixed		3998489	0					
ANR	3998573	ArgumentList	df		3998489	1					
ANR	3998574	Argument	df		3998489	0					
ANR	3998575	Identifier	df		3998489	0					
ANR	3998576	Identifier	h		3998489	1					
ANR	3998577	ExpressionStatement	tl -> ldf = int2fixed ( df ) % h	149:13:4579:4606	3998489	1	True				
ANR	3998578	AssignmentExpression	tl -> ldf = int2fixed ( df ) % h		3998489	0		=			
ANR	3998579	PtrMemberAccess	tl -> ldf		3998489	0					
ANR	3998580	Identifier	tl		3998489	0					
ANR	3998581	Identifier	ldf		3998489	1					
ANR	3998582	MultiplicativeExpression	int2fixed ( df ) % h		3998489	1		%			
ANR	3998583	CallExpression	int2fixed ( df )		3998489	0					
ANR	3998584	Callee	int2fixed		3998489	0					
ANR	3998585	Identifier	int2fixed		3998489	0					
ANR	3998586	ArgumentList	df		3998489	1					
ANR	3998587	Argument	df		3998489	0					
ANR	3998588	Identifier	df		3998489	0					
ANR	3998589	Identifier	h		3998489	1					
ANR	3998590	ExpressionStatement	"tl -> xf = ( ys < fixed_1 ? ys * df % h : fixed_mult_rem ( ys , df , h ) ) - h"	150:13:4621:4707	3998489	2	True				
ANR	3998591	AssignmentExpression	"tl -> xf = ( ys < fixed_1 ? ys * df % h : fixed_mult_rem ( ys , df , h ) ) - h"		3998489	0		=			
ANR	3998592	PtrMemberAccess	tl -> xf		3998489	0					
ANR	3998593	Identifier	tl		3998489	0					
ANR	3998594	Identifier	xf		3998489	1					
ANR	3998595	AdditiveExpression	"( ys < fixed_1 ? ys * df % h : fixed_mult_rem ( ys , df , h ) ) - h"		3998489	1		-			
ANR	3998596	ConditionalExpression	"ys < fixed_1 ? ys * df % h : fixed_mult_rem ( ys , df , h )"		3998489	0					
ANR	3998597	Condition	ys < fixed_1		3998489	0					
ANR	3998598	RelationalExpression	ys < fixed_1		3998489	0		<			
ANR	3998599	Identifier	ys		3998489	0					
ANR	3998600	Identifier	fixed_1		3998489	1					
ANR	3998601	MultiplicativeExpression	ys * df % h		3998489	1		*			
ANR	3998602	Identifier	ys		3998489	0					
ANR	3998603	MultiplicativeExpression	df % h		3998489	1		%			
ANR	3998604	Identifier	df		3998489	0					
ANR	3998605	Identifier	h		3998489	1					
ANR	3998606	CallExpression	"fixed_mult_rem ( ys , df , h )"		3998489	2					
ANR	3998607	Callee	fixed_mult_rem		3998489	0					
ANR	3998608	Identifier	fixed_mult_rem		3998489	0					
ANR	3998609	ArgumentList	ys		3998489	1					
ANR	3998610	Argument	ys		3998489	0					
ANR	3998611	Identifier	ys		3998489	0					
ANR	3998612	Argument	df		3998489	1					
ANR	3998613	Identifier	df		3998489	0					
ANR	3998614	Argument	h		3998489	2					
ANR	3998615	Identifier	h		3998489	0					
ANR	3998616	Identifier	h		3998489	1					
ANR	3998617	ElseStatement	else		3998489	0					
ANR	3998618	CompoundStatement		16:9:469:469	3998489	0					
ANR	3998619	ExpressionStatement	"tl -> ldi = int2fixed ( di ) + fixed_mult_quo ( fixed_1 , df , h )"	155:8:4745:4801	3998489	0	True				
ANR	3998620	AssignmentExpression	"tl -> ldi = int2fixed ( di ) + fixed_mult_quo ( fixed_1 , df , h )"		3998489	0		=			
ANR	3998621	PtrMemberAccess	tl -> ldi		3998489	0					
ANR	3998622	Identifier	tl		3998489	0					
ANR	3998623	Identifier	ldi		3998489	1					
ANR	3998624	AdditiveExpression	"int2fixed ( di ) + fixed_mult_quo ( fixed_1 , df , h )"		3998489	1		+			
ANR	3998625	CallExpression	int2fixed ( di )		3998489	0					
ANR	3998626	Callee	int2fixed		3998489	0					
ANR	3998627	Identifier	int2fixed		3998489	0					
ANR	3998628	ArgumentList	di		3998489	1					
ANR	3998629	Argument	di		3998489	0					
ANR	3998630	Identifier	di		3998489	0					
ANR	3998631	CallExpression	"fixed_mult_quo ( fixed_1 , df , h )"		3998489	1					
ANR	3998632	Callee	fixed_mult_quo		3998489	0					
ANR	3998633	Identifier	fixed_mult_quo		3998489	0					
ANR	3998634	ArgumentList	fixed_1		3998489	1					
ANR	3998635	Argument	fixed_1		3998489	0					
ANR	3998636	Identifier	fixed_1		3998489	0					
ANR	3998637	Argument	df		3998489	1					
ANR	3998638	Identifier	df		3998489	0					
ANR	3998639	Argument	h		3998489	2					
ANR	3998640	Identifier	h		3998489	0					
ANR	3998641	ExpressionStatement	"tl -> ldf = fixed_mult_rem ( fixed_1 , df , h )"	156:8:4811:4851	3998489	1	True				
ANR	3998642	AssignmentExpression	"tl -> ldf = fixed_mult_rem ( fixed_1 , df , h )"		3998489	0		=			
ANR	3998643	PtrMemberAccess	tl -> ldf		3998489	0					
ANR	3998644	Identifier	tl		3998489	0					
ANR	3998645	Identifier	ldf		3998489	1					
ANR	3998646	CallExpression	"fixed_mult_rem ( fixed_1 , df , h )"		3998489	1					
ANR	3998647	Callee	fixed_mult_rem		3998489	0					
ANR	3998648	Identifier	fixed_mult_rem		3998489	0					
ANR	3998649	ArgumentList	fixed_1		3998489	1					
ANR	3998650	Argument	fixed_1		3998489	0					
ANR	3998651	Identifier	fixed_1		3998489	0					
ANR	3998652	Argument	df		3998489	1					
ANR	3998653	Identifier	df		3998489	0					
ANR	3998654	Argument	h		3998489	2					
ANR	3998655	Identifier	h		3998489	0					
ANR	3998656	ExpressionStatement	"tl -> xf = fixed_mult_rem ( ys , df , h ) - h"	157:8:4861:4899	3998489	2	True				
ANR	3998657	AssignmentExpression	"tl -> xf = fixed_mult_rem ( ys , df , h ) - h"		3998489	0		=			
ANR	3998658	PtrMemberAccess	tl -> xf		3998489	0					
ANR	3998659	Identifier	tl		3998489	0					
ANR	3998660	Identifier	xf		3998489	1					
ANR	3998661	AdditiveExpression	"fixed_mult_rem ( ys , df , h ) - h"		3998489	1		-			
ANR	3998662	CallExpression	"fixed_mult_rem ( ys , df , h )"		3998489	0					
ANR	3998663	Callee	fixed_mult_rem		3998489	0					
ANR	3998664	Identifier	fixed_mult_rem		3998489	0					
ANR	3998665	ArgumentList	ys		3998489	1					
ANR	3998666	Argument	ys		3998489	0					
ANR	3998667	Identifier	ys		3998489	0					
ANR	3998668	Argument	df		3998489	1					
ANR	3998669	Identifier	df		3998489	0					
ANR	3998670	Argument	h		3998489	2					
ANR	3998671	Identifier	h		3998489	0					
ANR	3998672	Identifier	h		3998489	1					
ANR	3998673	ReturnType	static inline void		3998489	1					
ANR	3998674	Identifier	compute_ldx		3998489	2					
ANR	3998675	ParameterList	"trap_line * tl , fixed ys"		3998489	3					
ANR	3998676	Parameter	trap_line * tl	138:12:4240:4252	3998489	0	True				
ANR	3998677	ParameterType	trap_line *		3998489	0					
ANR	3998678	Identifier	tl		3998489	1					
ANR	3998679	Parameter	fixed ys	138:27:4255:4262	3998489	1	True				
ANR	3998680	ParameterType	fixed		3998489	0					
ANR	3998681	Identifier	ys		3998489	1					
ANR	3998682	CFGEntryNode	ENTRY		3998489		True				
ANR	3998683	CFGExitNode	EXIT		3998489		True				
ANR	3998684	Symbol	YMULT_LIMIT		3998489						
ANR	3998685	Symbol	df		3998489						
ANR	3998686	Symbol	fixed_mult_quo		3998489						
ANR	3998687	Symbol	di		3998489						
ANR	3998688	Symbol	tl -> ldi		3998489						
ANR	3998689	Symbol	h		3998489						
ANR	3998690	Symbol	tl -> ldf		3998489						
ANR	3998691	Symbol	tl -> xf		3998489						
ANR	3998692	Symbol	tl -> df		3998489						
ANR	3998693	Symbol	fixed_mult_rem		3998489						
ANR	3998694	Symbol	fixed_1		3998489						
ANR	3998695	Symbol	tl -> di		3998489						
ANR	3998696	Symbol	tl -> h		3998489						
ANR	3998697	Symbol	int2fixed		3998489						
ANR	3998698	Symbol	tl		3998489						
ANR	3998699	Symbol	ys		3998489						
ANR	3998700	Symbol	* tl		3998489						
ANR	3998701	Function	init_gradient	161:0:4910:6101							
ANR	3998702	FunctionDef	"init_gradient (trap_gradient * g , const gs_fill_attributes * fa , const gs_linear_color_edge * e , const gs_linear_color_edge * e1 , const trap_line * l , fixed ybot , int num_components)"		3998701	0					
ANR	3998703	CompoundStatement		165:0:5137:6101	3998701	0					
ANR	3998704	IdentifierDeclStatement	int i ;	166:4:5143:5148	3998701	0	True				
ANR	3998705	IdentifierDecl	i		3998701	0					
ANR	3998706	IdentifierDeclType	int		3998701	0					
ANR	3998707	Identifier	i		3998701	1					
ANR	3998708	IdentifierDeclStatement	int64_t c ;	167:4:5154:5163	3998701	1	True				
ANR	3998709	IdentifierDecl	c		3998701	0					
ANR	3998710	IdentifierDeclType	int64_t		3998701	0					
ANR	3998711	Identifier	c		3998701	1					
ANR	3998712	IdentifierDeclStatement	int32_t d ;	168:4:5169:5178	3998701	2	True				
ANR	3998713	IdentifierDecl	d		3998701	0					
ANR	3998714	IdentifierDeclType	int32_t		3998701	0					
ANR	3998715	Identifier	d		3998701	1					
ANR	3998716	IfStatement	if ( e -> c1 == NULL || e -> c0 == NULL )		3998701	3					
ANR	3998717	Condition	e -> c1 == NULL || e -> c0 == NULL	170:8:5189:5218	3998701	0	True				
ANR	3998718	OrExpression	e -> c1 == NULL || e -> c0 == NULL		3998701	0		||			
ANR	3998719	EqualityExpression	e -> c1 == NULL		3998701	0		==			
ANR	3998720	PtrMemberAccess	e -> c1		3998701	0					
ANR	3998721	Identifier	e		3998701	0					
ANR	3998722	Identifier	c1		3998701	1					
ANR	3998723	Identifier	NULL		3998701	1					
ANR	3998724	EqualityExpression	e -> c0 == NULL		3998701	1		==			
ANR	3998725	PtrMemberAccess	e -> c0		3998701	0					
ANR	3998726	Identifier	e		3998701	0					
ANR	3998727	Identifier	c0		3998701	1					
ANR	3998728	Identifier	NULL		3998701	1					
ANR	3998729	ExpressionStatement	g -> den = 0	171:8:5229:5239	3998701	1	True				
ANR	3998730	AssignmentExpression	g -> den = 0		3998701	0		=			
ANR	3998731	PtrMemberAccess	g -> den		3998701	0					
ANR	3998732	Identifier	g		3998701	0					
ANR	3998733	Identifier	den		3998701	1					
ANR	3998734	PrimaryExpression	0		3998701	1					
ANR	3998735	ElseStatement	else		3998701	0					
ANR	3998736	CompoundStatement		9:8:177:231	3998701	0					
ANR	3998737	IdentifierDeclStatement	bool ends_from_fa = ( e1 -> c1 == NULL || e1 -> c0 == NULL ) ;	173:8:5315:5369	3998701	0	True				
ANR	3998738	IdentifierDecl	ends_from_fa = ( e1 -> c1 == NULL || e1 -> c0 == NULL )		3998701	0					
ANR	3998739	IdentifierDeclType	bool		3998701	0					
ANR	3998740	Identifier	ends_from_fa		3998701	1					
ANR	3998741	AssignmentExpression	ends_from_fa = ( e1 -> c1 == NULL || e1 -> c0 == NULL )		3998701	2		=			
ANR	3998742	Identifier	ends_from_fa		3998701	0					
ANR	3998743	OrExpression	e1 -> c1 == NULL || e1 -> c0 == NULL		3998701	1		||			
ANR	3998744	EqualityExpression	e1 -> c1 == NULL		3998701	0		==			
ANR	3998745	PtrMemberAccess	e1 -> c1		3998701	0					
ANR	3998746	Identifier	e1		3998701	0					
ANR	3998747	Identifier	c1		3998701	1					
ANR	3998748	Identifier	NULL		3998701	1					
ANR	3998749	EqualityExpression	e1 -> c0 == NULL		3998701	1		==			
ANR	3998750	PtrMemberAccess	e1 -> c0		3998701	0					
ANR	3998751	Identifier	e1		3998701	0					
ANR	3998752	Identifier	c0		3998701	1					
ANR	3998753	Identifier	NULL		3998701	1					
ANR	3998754	IfStatement	if ( ends_from_fa )		3998701	1					
ANR	3998755	Condition	ends_from_fa	175:12:5384:5395	3998701	0	True				
ANR	3998756	Identifier	ends_from_fa		3998701	0					
ANR	3998757	ExpressionStatement	g -> den = fa -> yend - fa -> ystart	176:12:5410:5440	3998701	1	True				
ANR	3998758	AssignmentExpression	g -> den = fa -> yend - fa -> ystart		3998701	0		=			
ANR	3998759	PtrMemberAccess	g -> den		3998701	0					
ANR	3998760	Identifier	g		3998701	0					
ANR	3998761	Identifier	den		3998701	1					
ANR	3998762	AdditiveExpression	fa -> yend - fa -> ystart		3998701	1		-			
ANR	3998763	PtrMemberAccess	fa -> yend		3998701	0					
ANR	3998764	Identifier	fa		3998701	0					
ANR	3998765	Identifier	yend		3998701	1					
ANR	3998766	PtrMemberAccess	fa -> ystart		3998701	1					
ANR	3998767	Identifier	fa		3998701	0					
ANR	3998768	Identifier	ystart		3998701	1					
ANR	3998769	ElseStatement	else		3998701	0					
ANR	3998770	CompoundStatement		13:13:317:317	3998701	0					
ANR	3998771	ExpressionStatement	g -> den = e -> end . y - e -> start . y	178:12:5469:5499	3998701	0	True				
ANR	3998772	AssignmentExpression	g -> den = e -> end . y - e -> start . y		3998701	0		=			
ANR	3998773	PtrMemberAccess	g -> den		3998701	0					
ANR	3998774	Identifier	g		3998701	0					
ANR	3998775	Identifier	den		3998701	1					
ANR	3998776	AdditiveExpression	e -> end . y - e -> start . y		3998701	1		-			
ANR	3998777	MemberAccess	e -> end . y		3998701	0					
ANR	3998778	PtrMemberAccess	e -> end		3998701	0					
ANR	3998779	Identifier	e		3998701	0					
ANR	3998780	Identifier	end		3998701	1					
ANR	3998781	Identifier	y		3998701	1					
ANR	3998782	MemberAccess	e -> start . y		3998701	1					
ANR	3998783	PtrMemberAccess	e -> start		3998701	0					
ANR	3998784	Identifier	e		3998701	0					
ANR	3998785	Identifier	start		3998701	1					
ANR	3998786	Identifier	y		3998701	1					
ANR	3998787	IfStatement	if ( g -> den != l -> h )		3998701	1					
ANR	3998788	Condition	g -> den != l -> h	179:16:5517:5530	3998701	0	True				
ANR	3998789	EqualityExpression	g -> den != l -> h		3998701	0		!=			
ANR	3998790	PtrMemberAccess	g -> den		3998701	0					
ANR	3998791	Identifier	g		3998701	0					
ANR	3998792	Identifier	den		3998701	1					
ANR	3998793	PtrMemberAccess	l -> h		3998701	1					
ANR	3998794	Identifier	l		3998701	0					
ANR	3998795	Identifier	h		3998701	1					
ANR	3998796	ExpressionStatement	return_error ( gs_error_unregistered )	180:16:5549:5584	3998701	1	True				
ANR	3998797	CallExpression	return_error ( gs_error_unregistered )		3998701	0					
ANR	3998798	Callee	return_error		3998701	0					
ANR	3998799	Identifier	return_error		3998701	0					
ANR	3998800	ArgumentList	gs_error_unregistered		3998701	1					
ANR	3998801	Argument	gs_error_unregistered		3998701	0					
ANR	3998802	Identifier	gs_error_unregistered		3998701	0					
ANR	3998803	ForStatement	for ( i = 0 ; i < num_components ; i ++ )		3998701	2					
ANR	3998804	ForInit	i = 0 ;	182:13:5632:5637	3998701	0	True				
ANR	3998805	AssignmentExpression	i = 0		3998701	0		=			
ANR	3998806	Identifier	i		3998701	0					
ANR	3998807	PrimaryExpression	0		3998701	1					
ANR	3998808	Condition	i < num_components	182:20:5639:5656	3998701	1	True				
ANR	3998809	RelationalExpression	i < num_components		3998701	0		<			
ANR	3998810	Identifier	i		3998701	0					
ANR	3998811	Identifier	num_components		3998701	1					
ANR	3998812	PostIncDecOperationExpression	i ++	182:40:5659:5661	3998701	2	True				
ANR	3998813	Identifier	i		3998701	0					
ANR	3998814	IncDec	++		3998701	1					
ANR	3998815	CompoundStatement		18:45:526:526	3998701	3					
ANR	3998816	ExpressionStatement	g -> num [ i ] = e -> c1 [ i ] - e -> c0 [ i ]	183:12:5678:5709	3998701	0	True				
ANR	3998817	AssignmentExpression	g -> num [ i ] = e -> c1 [ i ] - e -> c0 [ i ]		3998701	0		=			
ANR	3998818	ArrayIndexing	g -> num [ i ]		3998701	0					
ANR	3998819	PtrMemberAccess	g -> num		3998701	0					
ANR	3998820	Identifier	g		3998701	0					
ANR	3998821	Identifier	num		3998701	1					
ANR	3998822	Identifier	i		3998701	1					
ANR	3998823	AdditiveExpression	e -> c1 [ i ] - e -> c0 [ i ]		3998701	1		-			
ANR	3998824	ArrayIndexing	e -> c1 [ i ]		3998701	0					
ANR	3998825	PtrMemberAccess	e -> c1		3998701	0					
ANR	3998826	Identifier	e		3998701	0					
ANR	3998827	Identifier	c1		3998701	1					
ANR	3998828	Identifier	i		3998701	1					
ANR	3998829	ArrayIndexing	e -> c0 [ i ]		3998701	1					
ANR	3998830	PtrMemberAccess	e -> c0		3998701	0					
ANR	3998831	Identifier	e		3998701	0					
ANR	3998832	Identifier	c0		3998701	1					
ANR	3998833	Identifier	i		3998701	1					
ANR	3998834	ExpressionStatement	c = ( int64_t ) g -> num [ i ] * ( uint32_t ) ( ybot - ( ends_from_fa ? fa -> ystart : e -> start . y ) )	184:12:5723:5827	3998701	1	True				
ANR	3998835	AssignmentExpression	c = ( int64_t ) g -> num [ i ] * ( uint32_t ) ( ybot - ( ends_from_fa ? fa -> ystart : e -> start . y ) )		3998701	0		=			
ANR	3998836	Identifier	c		3998701	0					
ANR	3998837	MultiplicativeExpression	( int64_t ) g -> num [ i ] * ( uint32_t ) ( ybot - ( ends_from_fa ? fa -> ystart : e -> start . y ) )		3998701	1		*			
ANR	3998838	CastExpression	( int64_t ) g -> num [ i ]		3998701	0					
ANR	3998839	CastTarget	int64_t		3998701	0					
ANR	3998840	ArrayIndexing	g -> num [ i ]		3998701	1					
ANR	3998841	PtrMemberAccess	g -> num		3998701	0					
ANR	3998842	Identifier	g		3998701	0					
ANR	3998843	Identifier	num		3998701	1					
ANR	3998844	Identifier	i		3998701	1					
ANR	3998845	CastExpression	( uint32_t ) ( ybot - ( ends_from_fa ? fa -> ystart : e -> start . y ) )		3998701	1					
ANR	3998846	CastTarget	uint32_t		3998701	0					
ANR	3998847	AdditiveExpression	ybot - ( ends_from_fa ? fa -> ystart : e -> start . y )		3998701	1		-			
ANR	3998848	Identifier	ybot		3998701	0					
ANR	3998849	ConditionalExpression	ends_from_fa ? fa -> ystart : e -> start . y		3998701	1					
ANR	3998850	Condition	ends_from_fa		3998701	0					
ANR	3998851	Identifier	ends_from_fa		3998701	0					
ANR	3998852	PtrMemberAccess	fa -> ystart		3998701	1					
ANR	3998853	Identifier	fa		3998701	0					
ANR	3998854	Identifier	ystart		3998701	1					
ANR	3998855	MemberAccess	e -> start . y		3998701	2					
ANR	3998856	PtrMemberAccess	e -> start		3998701	0					
ANR	3998857	Identifier	e		3998701	0					
ANR	3998858	Identifier	start		3998701	1					
ANR	3998859	Identifier	y		3998701	1					
ANR	3998860	ExpressionStatement	d = ( int32_t ) ( c / g -> den )	186:12:5841:5866	3998701	2	True				
ANR	3998861	AssignmentExpression	d = ( int32_t ) ( c / g -> den )		3998701	0		=			
ANR	3998862	Identifier	d		3998701	0					
ANR	3998863	CastExpression	( int32_t ) ( c / g -> den )		3998701	1					
ANR	3998864	CastTarget	int32_t		3998701	0					
ANR	3998865	MultiplicativeExpression	c / g -> den		3998701	1		/			
ANR	3998866	Identifier	c		3998701	0					
ANR	3998867	PtrMemberAccess	g -> den		3998701	1					
ANR	3998868	Identifier	g		3998701	0					
ANR	3998869	Identifier	den		3998701	1					
ANR	3998870	ExpressionStatement	g -> c [ i ] = e -> c0 [ i ] + d	187:12:5880:5902	3998701	3	True				
ANR	3998871	AssignmentExpression	g -> c [ i ] = e -> c0 [ i ] + d		3998701	0		=			
ANR	3998872	ArrayIndexing	g -> c [ i ]		3998701	0					
ANR	3998873	PtrMemberAccess	g -> c		3998701	0					
ANR	3998874	Identifier	g		3998701	0					
ANR	3998875	Identifier	c		3998701	1					
ANR	3998876	Identifier	i		3998701	1					
ANR	3998877	AdditiveExpression	e -> c0 [ i ] + d		3998701	1		+			
ANR	3998878	ArrayIndexing	e -> c0 [ i ]		3998701	0					
ANR	3998879	PtrMemberAccess	e -> c0		3998701	0					
ANR	3998880	Identifier	e		3998701	0					
ANR	3998881	Identifier	c0		3998701	1					
ANR	3998882	Identifier	i		3998701	1					
ANR	3998883	Identifier	d		3998701	1					
ANR	3998884	ExpressionStatement	c -= ( int64_t ) d * g -> den	188:12:5916:5940	3998701	4	True				
ANR	3998885	AssignmentExpression	c -= ( int64_t ) d * g -> den		3998701	0		-=			
ANR	3998886	Identifier	c		3998701	0					
ANR	3998887	MultiplicativeExpression	( int64_t ) d * g -> den		3998701	1		*			
ANR	3998888	CastExpression	( int64_t ) d		3998701	0					
ANR	3998889	CastTarget	int64_t		3998701	0					
ANR	3998890	Identifier	d		3998701	1					
ANR	3998891	PtrMemberAccess	g -> den		3998701	1					
ANR	3998892	Identifier	g		3998701	0					
ANR	3998893	Identifier	den		3998701	1					
ANR	3998894	IfStatement	if ( c < 0 )		3998701	5					
ANR	3998895	Condition	c < 0	189:16:5958:5962	3998701	0	True				
ANR	3998896	RelationalExpression	c < 0		3998701	0		<			
ANR	3998897	Identifier	c		3998701	0					
ANR	3998898	PrimaryExpression	0		3998701	1					
ANR	3998899	CompoundStatement		25:23:827:827	3998701	1					
ANR	3998900	ExpressionStatement	g -> c [ i ] --	190:16:5983:5992	3998701	0	True				
ANR	3998901	PostIncDecOperationExpression	g -> c [ i ] --		3998701	0					
ANR	3998902	ArrayIndexing	g -> c [ i ]		3998701	0					
ANR	3998903	PtrMemberAccess	g -> c		3998701	0					
ANR	3998904	Identifier	g		3998701	0					
ANR	3998905	Identifier	c		3998701	1					
ANR	3998906	Identifier	i		3998701	1					
ANR	3998907	IncDec	--		3998701	1					
ANR	3998908	ExpressionStatement	c += g -> den	191:16:6010:6021	3998701	1	True				
ANR	3998909	AssignmentExpression	c += g -> den		3998701	0		+=			
ANR	3998910	Identifier	c		3998701	0					
ANR	3998911	PtrMemberAccess	g -> den		3998701	1					
ANR	3998912	Identifier	g		3998701	0					
ANR	3998913	Identifier	den		3998701	1					
ANR	3998914	ExpressionStatement	g -> f [ i ] = ( int32_t ) c	193:12:6049:6069	3998701	6	True				
ANR	3998915	AssignmentExpression	g -> f [ i ] = ( int32_t ) c		3998701	0		=			
ANR	3998916	ArrayIndexing	g -> f [ i ]		3998701	0					
ANR	3998917	PtrMemberAccess	g -> f		3998701	0					
ANR	3998918	Identifier	g		3998701	0					
ANR	3998919	Identifier	f		3998701	1					
ANR	3998920	Identifier	i		3998701	1					
ANR	3998921	CastExpression	( int32_t ) c		3998701	1					
ANR	3998922	CastTarget	int32_t		3998701	0					
ANR	3998923	Identifier	c		3998701	1					
ANR	3998924	ReturnStatement	return 0 ;	196:4:6091:6099	3998701	4	True				
ANR	3998925	PrimaryExpression	0		3998701	0					
ANR	3998926	ReturnType	static inline int		3998701	1					
ANR	3998927	Identifier	init_gradient		3998701	2					
ANR	3998928	ParameterList	"trap_gradient * g , const gs_fill_attributes * fa , const gs_linear_color_edge * e , const gs_linear_color_edge * e1 , const trap_line * l , fixed ybot , int num_components"		3998701	3					
ANR	3998929	Parameter	trap_gradient * g	162:14:4942:4957	3998701	0	True				
ANR	3998930	ParameterType	trap_gradient *		3998701	0					
ANR	3998931	Identifier	g		3998701	1					
ANR	3998932	Parameter	const gs_fill_attributes * fa	162:32:4960:4987	3998701	1	True				
ANR	3998933	ParameterType	const gs_fill_attributes *		3998701	0					
ANR	3998934	Identifier	fa		3998701	1					
ANR	3998935	Parameter	const gs_linear_color_edge * e	163:16:5006:5034	3998701	2	True				
ANR	3998936	ParameterType	const gs_linear_color_edge *		3998701	0					
ANR	3998937	Identifier	e		3998701	1					
ANR	3998938	Parameter	const gs_linear_color_edge * e1	163:47:5037:5066	3998701	3	True				
ANR	3998939	ParameterType	const gs_linear_color_edge *		3998701	0					
ANR	3998940	Identifier	e1		3998701	1					
ANR	3998941	Parameter	const trap_line * l	164:16:5085:5102	3998701	4	True				
ANR	3998942	ParameterType	const trap_line *		3998701	0					
ANR	3998943	Identifier	l		3998701	1					
ANR	3998944	Parameter	fixed ybot	164:36:5105:5114	3998701	5	True				
ANR	3998945	ParameterType	fixed		3998701	0					
ANR	3998946	Identifier	ybot		3998701	1					
ANR	3998947	Parameter	int num_components	164:48:5117:5134	3998701	6	True				
ANR	3998948	ParameterType	int		3998701	0					
ANR	3998949	Identifier	num_components		3998701	1					
ANR	3998950	CFGEntryNode	ENTRY		3998701		True				
ANR	3998951	CFGExitNode	EXIT		3998701		True				
ANR	3998952	Symbol	gs_error_unregistered		3998701						
ANR	3998953	Symbol	e -> c1		3998701						
ANR	3998954	Symbol	ends_from_fa		3998701						
ANR	3998955	Symbol	e -> c0		3998701						
ANR	3998956	Symbol	e -> end . y		3998701						
ANR	3998957	Symbol	fa -> ystart		3998701						
ANR	3998958	Symbol	e -> start		3998701						
ANR	3998959	Symbol	g -> f		3998701						
ANR	3998960	Symbol	l -> h		3998701						
ANR	3998961	Symbol	e1 -> c1		3998701						
ANR	3998962	Symbol	e1 -> c0		3998701						
ANR	3998963	Symbol	* g -> f		3998701						
ANR	3998964	Symbol	g -> den		3998701						
ANR	3998965	Symbol	g -> num		3998701						
ANR	3998966	Symbol	ybot		3998701						
ANR	3998967	Symbol	g -> c		3998701						
ANR	3998968	Symbol	* g -> c		3998701						
ANR	3998969	Symbol	* g -> num		3998701						
ANR	3998970	Symbol	e -> start . y		3998701						
ANR	3998971	Symbol	* fa		3998701						
ANR	3998972	Symbol	c		3998701						
ANR	3998973	Symbol	NULL		3998701						
ANR	3998974	Symbol	d		3998701						
ANR	3998975	Symbol	* * g		3998701						
ANR	3998976	Symbol	e		3998701						
ANR	3998977	Symbol	e -> end		3998701						
ANR	3998978	Symbol	* * e		3998701						
ANR	3998979	Symbol	g		3998701						
ANR	3998980	Symbol	i		3998701						
ANR	3998981	Symbol	num_components		3998701						
ANR	3998982	Symbol	* e -> c1		3998701						
ANR	3998983	Symbol	e1		3998701						
ANR	3998984	Symbol	l		3998701						
ANR	3998985	Symbol	* e -> c0		3998701						
ANR	3998986	Symbol	* e		3998701						
ANR	3998987	Symbol	* g		3998701						
ANR	3998988	Symbol	* e1		3998701						
ANR	3998989	Symbol	* i		3998701						
ANR	3998990	Symbol	* l		3998701						
ANR	3998991	Symbol	fa		3998701						
ANR	3998992	Symbol	fa -> yend		3998701						
ANR	3998993	Function	step_gradient	199:0:6104:6565							
ANR	3998994	FunctionDef	"step_gradient (trap_gradient * g , int num_components)"		3998993	0					
ANR	3998995	CompoundStatement		201:0:6175:6565	3998993	0					
ANR	3998996	IdentifierDeclStatement	int i ;	202:4:6181:6186	3998993	0	True				
ANR	3998997	IdentifierDecl	i		3998993	0					
ANR	3998998	IdentifierDeclType	int		3998993	0					
ANR	3998999	Identifier	i		3998993	1					
ANR	3999000	IfStatement	if ( g -> den == 0 )		3998993	1					
ANR	3999001	Condition	g -> den == 0	204:8:6197:6207	3998993	0	True				
ANR	3999002	EqualityExpression	g -> den == 0		3998993	0		==			
ANR	3999003	PtrMemberAccess	g -> den		3998993	0					
ANR	3999004	Identifier	g		3998993	0					
ANR	3999005	Identifier	den		3998993	1					
ANR	3999006	PrimaryExpression	0		3998993	1					
ANR	3999007	ReturnStatement	return ;	205:8:6218:6224	3998993	1	True				
ANR	3999008	ForStatement	for ( i = 0 ; i < num_components ; i ++ )		3998993	2					
ANR	3999009	ForInit	i = 0 ;	206:9:6235:6240	3998993	0	True				
ANR	3999010	AssignmentExpression	i = 0		3998993	0		=			
ANR	3999011	Identifier	i		3998993	0					
ANR	3999012	PrimaryExpression	0		3998993	1					
ANR	3999013	Condition	i < num_components	206:16:6242:6259	3998993	1	True				
ANR	3999014	RelationalExpression	i < num_components		3998993	0		<			
ANR	3999015	Identifier	i		3998993	0					
ANR	3999016	Identifier	num_components		3998993	1					
ANR	3999017	PostIncDecOperationExpression	i ++	206:36:6262:6264	3998993	2	True				
ANR	3999018	Identifier	i		3998993	0					
ANR	3999019	IncDec	++		3998993	1					
ANR	3999020	CompoundStatement		8:8:162:174	3998993	3					
ANR	3999021	IdentifierDeclStatement	int64_t fc = g -> f [ i ] + ( int64_t ) g -> num [ i ] * fixed_1 ;	207:8:6277:6328	3998993	0	True				
ANR	3999022	IdentifierDecl	fc = g -> f [ i ] + ( int64_t ) g -> num [ i ] * fixed_1		3998993	0					
ANR	3999023	IdentifierDeclType	int64_t		3998993	0					
ANR	3999024	Identifier	fc		3998993	1					
ANR	3999025	AssignmentExpression	fc = g -> f [ i ] + ( int64_t ) g -> num [ i ] * fixed_1		3998993	2		=			
ANR	3999026	Identifier	fc		3998993	0					
ANR	3999027	AdditiveExpression	g -> f [ i ] + ( int64_t ) g -> num [ i ] * fixed_1		3998993	1		+			
ANR	3999028	ArrayIndexing	g -> f [ i ]		3998993	0					
ANR	3999029	PtrMemberAccess	g -> f		3998993	0					
ANR	3999030	Identifier	g		3998993	0					
ANR	3999031	Identifier	f		3998993	1					
ANR	3999032	Identifier	i		3998993	1					
ANR	3999033	MultiplicativeExpression	( int64_t ) g -> num [ i ] * fixed_1		3998993	1		*			
ANR	3999034	CastExpression	( int64_t ) g -> num [ i ]		3998993	0					
ANR	3999035	CastTarget	int64_t		3998993	0					
ANR	3999036	ArrayIndexing	g -> num [ i ]		3998993	1					
ANR	3999037	PtrMemberAccess	g -> num		3998993	0					
ANR	3999038	Identifier	g		3998993	0					
ANR	3999039	Identifier	num		3998993	1					
ANR	3999040	Identifier	i		3998993	1					
ANR	3999041	Identifier	fixed_1		3998993	1					
ANR	3999042	IdentifierDeclStatement	int32_t fc32 ;	208:8:6338:6350	3998993	1	True				
ANR	3999043	IdentifierDecl	fc32		3998993	0					
ANR	3999044	IdentifierDeclType	int32_t		3998993	0					
ANR	3999045	Identifier	fc32		3998993	1					
ANR	3999046	ExpressionStatement	g -> c [ i ] += ( int32_t ) ( fc / g -> den )	210:8:6361:6394	3998993	2	True				
ANR	3999047	AssignmentExpression	g -> c [ i ] += ( int32_t ) ( fc / g -> den )		3998993	0		+=			
ANR	3999048	ArrayIndexing	g -> c [ i ]		3998993	0					
ANR	3999049	PtrMemberAccess	g -> c		3998993	0					
ANR	3999050	Identifier	g		3998993	0					
ANR	3999051	Identifier	c		3998993	1					
ANR	3999052	Identifier	i		3998993	1					
ANR	3999053	CastExpression	( int32_t ) ( fc / g -> den )		3998993	1					
ANR	3999054	CastTarget	int32_t		3998993	0					
ANR	3999055	MultiplicativeExpression	fc / g -> den		3998993	1		/			
ANR	3999056	Identifier	fc		3998993	0					
ANR	3999057	PtrMemberAccess	g -> den		3998993	1					
ANR	3999058	Identifier	g		3998993	0					
ANR	3999059	Identifier	den		3998993	1					
ANR	3999060	ExpressionStatement	fc32 = ( int32_t ) ( fc - fc / g -> den * g -> den )	211:8:6404:6448	3998993	3	True				
ANR	3999061	AssignmentExpression	fc32 = ( int32_t ) ( fc - fc / g -> den * g -> den )		3998993	0		=			
ANR	3999062	Identifier	fc32		3998993	0					
ANR	3999063	CastExpression	( int32_t ) ( fc - fc / g -> den * g -> den )		3998993	1					
ANR	3999064	CastTarget	int32_t		3998993	0					
ANR	3999065	AdditiveExpression	fc - fc / g -> den * g -> den		3998993	1		-			
ANR	3999066	Identifier	fc		3998993	0					
ANR	3999067	MultiplicativeExpression	fc / g -> den * g -> den		3998993	1		/			
ANR	3999068	Identifier	fc		3998993	0					
ANR	3999069	MultiplicativeExpression	g -> den * g -> den		3998993	1		*			
ANR	3999070	PtrMemberAccess	g -> den		3998993	0					
ANR	3999071	Identifier	g		3998993	0					
ANR	3999072	Identifier	den		3998993	1					
ANR	3999073	PtrMemberAccess	g -> den		3998993	1					
ANR	3999074	Identifier	g		3998993	0					
ANR	3999075	Identifier	den		3998993	1					
ANR	3999076	IfStatement	if ( fc32 < 0 )		3998993	4					
ANR	3999077	Condition	fc32 < 0	212:12:6462:6469	3998993	0	True				
ANR	3999078	RelationalExpression	fc32 < 0		3998993	0		<			
ANR	3999079	Identifier	fc32		3998993	0					
ANR	3999080	PrimaryExpression	0		3998993	1					
ANR	3999081	CompoundStatement		12:22:296:296	3998993	1					
ANR	3999082	ExpressionStatement	fc32 += g -> den	213:12:6486:6500	3998993	0	True				
ANR	3999083	AssignmentExpression	fc32 += g -> den		3998993	0		+=			
ANR	3999084	Identifier	fc32		3998993	0					
ANR	3999085	PtrMemberAccess	g -> den		3998993	1					
ANR	3999086	Identifier	g		3998993	0					
ANR	3999087	Identifier	den		3998993	1					
ANR	3999088	ExpressionStatement	g -> c [ i ] --	214:12:6514:6523	3998993	1	True				
ANR	3999089	PostIncDecOperationExpression	g -> c [ i ] --		3998993	0					
ANR	3999090	ArrayIndexing	g -> c [ i ]		3998993	0					
ANR	3999091	PtrMemberAccess	g -> c		3998993	0					
ANR	3999092	Identifier	g		3998993	0					
ANR	3999093	Identifier	c		3998993	1					
ANR	3999094	Identifier	i		3998993	1					
ANR	3999095	IncDec	--		3998993	1					
ANR	3999096	ExpressionStatement	g -> f [ i ] = fc32	216:8:6543:6557	3998993	5	True				
ANR	3999097	AssignmentExpression	g -> f [ i ] = fc32		3998993	0		=			
ANR	3999098	ArrayIndexing	g -> f [ i ]		3998993	0					
ANR	3999099	PtrMemberAccess	g -> f		3998993	0					
ANR	3999100	Identifier	g		3998993	0					
ANR	3999101	Identifier	f		3998993	1					
ANR	3999102	Identifier	i		3998993	1					
ANR	3999103	Identifier	fc32		3998993	1					
ANR	3999104	ReturnType	static inline void		3998993	1					
ANR	3999105	Identifier	step_gradient		3998993	2					
ANR	3999106	ParameterList	"trap_gradient * g , int num_components"		3998993	3					
ANR	3999107	Parameter	trap_gradient * g	200:14:6137:6152	3998993	0	True				
ANR	3999108	ParameterType	trap_gradient *		3998993	0					
ANR	3999109	Identifier	g		3998993	1					
ANR	3999110	Parameter	int num_components	200:32:6155:6172	3998993	1	True				
ANR	3999111	ParameterType	int		3998993	0					
ANR	3999112	Identifier	num_components		3998993	1					
ANR	3999113	CFGEntryNode	ENTRY		3998993		True				
ANR	3999114	CFGExitNode	EXIT		3998993		True				
ANR	3999115	Symbol	* * g		3998993						
ANR	3999116	Symbol	g		3998993						
ANR	3999117	Symbol	i		3998993						
ANR	3999118	Symbol	num_components		3998993						
ANR	3999119	Symbol	g -> f		3998993						
ANR	3999120	Symbol	* g		3998993						
ANR	3999121	Symbol	* g -> f		3998993						
ANR	3999122	Symbol	g -> den		3998993						
ANR	3999123	Symbol	* i		3998993						
ANR	3999124	Symbol	fc32		3998993						
ANR	3999125	Symbol	g -> num		3998993						
ANR	3999126	Symbol	fixed_1		3998993						
ANR	3999127	Symbol	g -> c		3998993						
ANR	3999128	Symbol	* g -> c		3998993						
ANR	3999129	Symbol	* g -> num		3998993						
ANR	3999130	Symbol	fc		3998993						
ANR	3999131	Function	check_gradient_overflow	220:0:6568:7702							
ANR	3999132	FunctionDef	"check_gradient_overflow (const gs_linear_color_edge * le , const gs_linear_color_edge * re)"		3999131	0					
ANR	3999133	CompoundStatement		222:0:6675:7702	3999131	0					
ANR	3999134	IfStatement	if ( le -> c1 == NULL || re -> c1 == NULL )		3999131	0					
ANR	3999135	Condition	le -> c1 == NULL || re -> c1 == NULL	223:8:6685:6716	3999131	0	True				
ANR	3999136	OrExpression	le -> c1 == NULL || re -> c1 == NULL		3999131	0		||			
ANR	3999137	EqualityExpression	le -> c1 == NULL		3999131	0		==			
ANR	3999138	PtrMemberAccess	le -> c1		3999131	0					
ANR	3999139	Identifier	le		3999131	0					
ANR	3999140	Identifier	c1		3999131	1					
ANR	3999141	Identifier	NULL		3999131	1					
ANR	3999142	EqualityExpression	re -> c1 == NULL		3999131	1		==			
ANR	3999143	PtrMemberAccess	re -> c1		3999131	0					
ANR	3999144	Identifier	re		3999131	0					
ANR	3999145	Identifier	c1		3999131	1					
ANR	3999146	Identifier	NULL		3999131	1					
ANR	3999147	CompoundStatement		2:42:43:43	3999131	1					
ANR	3999148	ReturnStatement	return false ;	225:8:6780:6792	3999131	0	True				
ANR	3999149	Identifier	false		3999131	0					
ANR	3999150	ElseStatement	else		3999131	0					
ANR	3999151	CompoundStatement		18:8:866:906	3999131	0					
ANR	3999152	IdentifierDeclStatement	"int32_t xl = min ( le -> start . x , le -> end . x ) ;"	238:8:7492:7532	3999131	0	True				
ANR	3999153	IdentifierDecl	"xl = min ( le -> start . x , le -> end . x )"		3999131	0					
ANR	3999154	IdentifierDeclType	int32_t		3999131	0					
ANR	3999155	Identifier	xl		3999131	1					
ANR	3999156	AssignmentExpression	"xl = min ( le -> start . x , le -> end . x )"		3999131	2		=			
ANR	3999157	Identifier	xl		3999131	0					
ANR	3999158	CallExpression	"min ( le -> start . x , le -> end . x )"		3999131	1					
ANR	3999159	Callee	min		3999131	0					
ANR	3999160	Identifier	min		3999131	0					
ANR	3999161	ArgumentList	le -> start . x		3999131	1					
ANR	3999162	Argument	le -> start . x		3999131	0					
ANR	3999163	MemberAccess	le -> start . x		3999131	0					
ANR	3999164	PtrMemberAccess	le -> start		3999131	0					
ANR	3999165	Identifier	le		3999131	0					
ANR	3999166	Identifier	start		3999131	1					
ANR	3999167	Identifier	x		3999131	1					
ANR	3999168	Argument	le -> end . x		3999131	1					
ANR	3999169	MemberAccess	le -> end . x		3999131	0					
ANR	3999170	PtrMemberAccess	le -> end		3999131	0					
ANR	3999171	Identifier	le		3999131	0					
ANR	3999172	Identifier	end		3999131	1					
ANR	3999173	Identifier	x		3999131	1					
ANR	3999174	IdentifierDeclStatement	"int32_t xr = min ( re -> start . x , re -> end . x ) ;"	239:8:7542:7582	3999131	1	True				
ANR	3999175	IdentifierDecl	"xr = min ( re -> start . x , re -> end . x )"		3999131	0					
ANR	3999176	IdentifierDeclType	int32_t		3999131	0					
ANR	3999177	Identifier	xr		3999131	1					
ANR	3999178	AssignmentExpression	"xr = min ( re -> start . x , re -> end . x )"		3999131	2		=			
ANR	3999179	Identifier	xr		3999131	0					
ANR	3999180	CallExpression	"min ( re -> start . x , re -> end . x )"		3999131	1					
ANR	3999181	Callee	min		3999131	0					
ANR	3999182	Identifier	min		3999131	0					
ANR	3999183	ArgumentList	re -> start . x		3999131	1					
ANR	3999184	Argument	re -> start . x		3999131	0					
ANR	3999185	MemberAccess	re -> start . x		3999131	0					
ANR	3999186	PtrMemberAccess	re -> start		3999131	0					
ANR	3999187	Identifier	re		3999131	0					
ANR	3999188	Identifier	start		3999131	1					
ANR	3999189	Identifier	x		3999131	1					
ANR	3999190	Argument	re -> end . x		3999131	1					
ANR	3999191	MemberAccess	re -> end . x		3999131	0					
ANR	3999192	PtrMemberAccess	re -> end		3999131	0					
ANR	3999193	Identifier	re		3999131	0					
ANR	3999194	Identifier	end		3999131	1					
ANR	3999195	Identifier	x		3999131	1					
ANR	3999196	ReturnStatement	return arith_rshift_1 ( xr ) - arith_rshift_1 ( xl ) >= 0x3FFFFFFE ;	241:8:7634:7694	3999131	2	True				
ANR	3999197	RelationalExpression	arith_rshift_1 ( xr ) - arith_rshift_1 ( xl ) >= 0x3FFFFFFE		3999131	0		>=			
ANR	3999198	AdditiveExpression	arith_rshift_1 ( xr ) - arith_rshift_1 ( xl )		3999131	0		-			
ANR	3999199	CallExpression	arith_rshift_1 ( xr )		3999131	0					
ANR	3999200	Callee	arith_rshift_1		3999131	0					
ANR	3999201	Identifier	arith_rshift_1		3999131	0					
ANR	3999202	ArgumentList	xr		3999131	1					
ANR	3999203	Argument	xr		3999131	0					
ANR	3999204	Identifier	xr		3999131	0					
ANR	3999205	CallExpression	arith_rshift_1 ( xl )		3999131	1					
ANR	3999206	Callee	arith_rshift_1		3999131	0					
ANR	3999207	Identifier	arith_rshift_1		3999131	0					
ANR	3999208	ArgumentList	xl		3999131	1					
ANR	3999209	Argument	xl		3999131	0					
ANR	3999210	Identifier	xl		3999131	0					
ANR	3999211	PrimaryExpression	0x3FFFFFFE		3999131	1					
ANR	3999212	ReturnType	static inline bool		3999131	1					
ANR	3999213	Identifier	check_gradient_overflow		3999131	2					
ANR	3999214	ParameterList	"const gs_linear_color_edge * le , const gs_linear_color_edge * re"		3999131	3					
ANR	3999215	Parameter	const gs_linear_color_edge * le	221:24:6611:6640	3999131	0	True				
ANR	3999216	ParameterType	const gs_linear_color_edge *		3999131	0					
ANR	3999217	Identifier	le		3999131	1					
ANR	3999218	Parameter	const gs_linear_color_edge * re	221:56:6643:6672	3999131	1	True				
ANR	3999219	ParameterType	const gs_linear_color_edge *		3999131	0					
ANR	3999220	Identifier	re		3999131	1					
ANR	3999221	CFGEntryNode	ENTRY		3999131		True				
ANR	3999222	CFGExitNode	EXIT		3999131		True				
ANR	3999223	Symbol	re -> end		3999131						
ANR	3999224	Symbol	NULL		3999131						
ANR	3999225	Symbol	le -> start		3999131						
ANR	3999226	Symbol	false		3999131						
ANR	3999227	Symbol	arith_rshift_1		3999131						
ANR	3999228	Symbol	le -> c1		3999131						
ANR	3999229	Symbol	re		3999131						
ANR	3999230	Symbol	min		3999131						
ANR	3999231	Symbol	le -> end		3999131						
ANR	3999232	Symbol	xl		3999131						
ANR	3999233	Symbol	le -> end . x		3999131						
ANR	3999234	Symbol	le		3999131						
ANR	3999235	Symbol	re -> start . x		3999131						
ANR	3999236	Symbol	* re		3999131						
ANR	3999237	Symbol	le -> start . x		3999131						
ANR	3999238	Symbol	xr		3999131						
ANR	3999239	Symbol	* le		3999131						
ANR	3999240	Symbol	re -> start		3999131						
ANR	3999241	Symbol	re -> c1		3999131						
ANR	3999242	Symbol	re -> end . x		3999131						
ANR	3999243	Function	set_x_gradient_nowedge	245:0:7705:10212							
ANR	3999244	FunctionDef	"set_x_gradient_nowedge (trap_gradient * xg , const trap_gradient * lg , const trap_gradient * rg , const trap_line * l , const trap_line * r , int il , int ir , int num_components)"		3999243	0					
ANR	3999245	CompoundStatement		248:0:7904:10212	3999243	0					
ANR	3999246	IdentifierDeclStatement	int32_t xl = l -> x - ( l -> xf == - l -> h ? 1 : 0 ) - fixed_half ;	251:4:8039:8096	3999243	0	True				
ANR	3999247	IdentifierDecl	xl = l -> x - ( l -> xf == - l -> h ? 1 : 0 ) - fixed_half		3999243	0					
ANR	3999248	IdentifierDeclType	int32_t		3999243	0					
ANR	3999249	Identifier	xl		3999243	1					
ANR	3999250	AssignmentExpression	xl = l -> x - ( l -> xf == - l -> h ? 1 : 0 ) - fixed_half		3999243	2		=			
ANR	3999251	Identifier	xl		3999243	0					
ANR	3999252	AdditiveExpression	l -> x - ( l -> xf == - l -> h ? 1 : 0 ) - fixed_half		3999243	1		-			
ANR	3999253	PtrMemberAccess	l -> x		3999243	0					
ANR	3999254	Identifier	l		3999243	0					
ANR	3999255	Identifier	x		3999243	1					
ANR	3999256	AdditiveExpression	( l -> xf == - l -> h ? 1 : 0 ) - fixed_half		3999243	1		-			
ANR	3999257	ConditionalExpression	l -> xf == - l -> h ? 1 : 0		3999243	0					
ANR	3999258	Condition	l -> xf == - l -> h		3999243	0					
ANR	3999259	EqualityExpression	l -> xf == - l -> h		3999243	0		==			
ANR	3999260	PtrMemberAccess	l -> xf		3999243	0					
ANR	3999261	Identifier	l		3999243	0					
ANR	3999262	Identifier	xf		3999243	1					
ANR	3999263	UnaryOperationExpression	- l -> h		3999243	1					
ANR	3999264	UnaryOperator	-		3999243	0					
ANR	3999265	PtrMemberAccess	l -> h		3999243	1					
ANR	3999266	Identifier	l		3999243	0					
ANR	3999267	Identifier	h		3999243	1					
ANR	3999268	PrimaryExpression	1		3999243	1					
ANR	3999269	PrimaryExpression	0		3999243	2					
ANR	3999270	Identifier	fixed_half		3999243	1					
ANR	3999271	IdentifierDeclStatement	int32_t xr = r -> x - ( r -> xf == - r -> h ? 1 : 0 ) - fixed_half ;	252:4:8144:8201	3999243	1	True				
ANR	3999272	IdentifierDecl	xr = r -> x - ( r -> xf == - r -> h ? 1 : 0 ) - fixed_half		3999243	0					
ANR	3999273	IdentifierDeclType	int32_t		3999243	0					
ANR	3999274	Identifier	xr		3999243	1					
ANR	3999275	AssignmentExpression	xr = r -> x - ( r -> xf == - r -> h ? 1 : 0 ) - fixed_half		3999243	2		=			
ANR	3999276	Identifier	xr		3999243	0					
ANR	3999277	AdditiveExpression	r -> x - ( r -> xf == - r -> h ? 1 : 0 ) - fixed_half		3999243	1		-			
ANR	3999278	PtrMemberAccess	r -> x		3999243	0					
ANR	3999279	Identifier	r		3999243	0					
ANR	3999280	Identifier	x		3999243	1					
ANR	3999281	AdditiveExpression	( r -> xf == - r -> h ? 1 : 0 ) - fixed_half		3999243	1		-			
ANR	3999282	ConditionalExpression	r -> xf == - r -> h ? 1 : 0		3999243	0					
ANR	3999283	Condition	r -> xf == - r -> h		3999243	0					
ANR	3999284	EqualityExpression	r -> xf == - r -> h		3999243	0		==			
ANR	3999285	PtrMemberAccess	r -> xf		3999243	0					
ANR	3999286	Identifier	r		3999243	0					
ANR	3999287	Identifier	xf		3999243	1					
ANR	3999288	UnaryOperationExpression	- r -> h		3999243	1					
ANR	3999289	UnaryOperator	-		3999243	0					
ANR	3999290	PtrMemberAccess	r -> h		3999243	1					
ANR	3999291	Identifier	r		3999243	0					
ANR	3999292	Identifier	h		3999243	1					
ANR	3999293	PrimaryExpression	1		3999243	1					
ANR	3999294	PrimaryExpression	0		3999243	2					
ANR	3999295	Identifier	fixed_half		3999243	1					
ANR	3999296	IdentifierDeclStatement	int32_t x0 = int2fixed ( il ) + fixed_half ;	254:4:8287:8326	3999243	2	True				
ANR	3999297	IdentifierDecl	x0 = int2fixed ( il ) + fixed_half		3999243	0					
ANR	3999298	IdentifierDeclType	int32_t		3999243	0					
ANR	3999299	Identifier	x0		3999243	1					
ANR	3999300	AssignmentExpression	x0 = int2fixed ( il ) + fixed_half		3999243	2		=			
ANR	3999301	Identifier	x0		3999243	0					
ANR	3999302	AdditiveExpression	int2fixed ( il ) + fixed_half		3999243	1		+			
ANR	3999303	CallExpression	int2fixed ( il )		3999243	0					
ANR	3999304	Callee	int2fixed		3999243	0					
ANR	3999305	Identifier	int2fixed		3999243	0					
ANR	3999306	ArgumentList	il		3999243	1					
ANR	3999307	Argument	il		3999243	0					
ANR	3999308	Identifier	il		3999243	0					
ANR	3999309	Identifier	fixed_half		3999243	1					
ANR	3999310	IdentifierDeclStatement	int32_t x1 = int2fixed ( ir ) - fixed_half ;	255:4:8365:8404	3999243	3	True				
ANR	3999311	IdentifierDecl	x1 = int2fixed ( ir ) - fixed_half		3999243	0					
ANR	3999312	IdentifierDeclType	int32_t		3999243	0					
ANR	3999313	Identifier	x1		3999243	1					
ANR	3999314	AssignmentExpression	x1 = int2fixed ( ir ) - fixed_half		3999243	2		=			
ANR	3999315	Identifier	x1		3999243	0					
ANR	3999316	AdditiveExpression	int2fixed ( ir ) - fixed_half		3999243	1		-			
ANR	3999317	CallExpression	int2fixed ( ir )		3999243	0					
ANR	3999318	Callee	int2fixed		3999243	0					
ANR	3999319	Identifier	int2fixed		3999243	0					
ANR	3999320	ArgumentList	ir		3999243	1					
ANR	3999321	Argument	ir		3999243	0					
ANR	3999322	Identifier	ir		3999243	0					
ANR	3999323	Identifier	fixed_half		3999243	1					
ANR	3999324	IdentifierDeclStatement	int i ;	256:4:8455:8460	3999243	4	True				
ANR	3999325	IdentifierDecl	i		3999243	0					
ANR	3999326	IdentifierDeclType	int		3999243	0					
ANR	3999327	Identifier	i		3999243	1					
ANR	3999328	Statement	ifdef	258:4:8467:8471	3999243	5	True				
ANR	3999329	Statement	DEBUG	258:10:8473:8477	3999243	6	True				
ANR	3999330	IfStatement	if ( arith_rshift_1 ( xr ) - arith_rshift_1 ( xl ) >= 0x3FFFFFFE )		3999243	7					
ANR	3999331	Condition	arith_rshift_1 ( xr ) - arith_rshift_1 ( xl ) >= 0x3FFFFFFE	259:12:8491:8543	3999243	0	True				
ANR	3999332	RelationalExpression	arith_rshift_1 ( xr ) - arith_rshift_1 ( xl ) >= 0x3FFFFFFE		3999243	0		>=			
ANR	3999333	AdditiveExpression	arith_rshift_1 ( xr ) - arith_rshift_1 ( xl )		3999243	0		-			
ANR	3999334	CallExpression	arith_rshift_1 ( xr )		3999243	0					
ANR	3999335	Callee	arith_rshift_1		3999243	0					
ANR	3999336	Identifier	arith_rshift_1		3999243	0					
ANR	3999337	ArgumentList	xr		3999243	1					
ANR	3999338	Argument	xr		3999243	0					
ANR	3999339	Identifier	xr		3999243	0					
ANR	3999340	CallExpression	arith_rshift_1 ( xl )		3999243	1					
ANR	3999341	Callee	arith_rshift_1		3999243	0					
ANR	3999342	Identifier	arith_rshift_1		3999243	0					
ANR	3999343	ArgumentList	xl		3999243	1					
ANR	3999344	Argument	xl		3999243	0					
ANR	3999345	Identifier	xl		3999243	0					
ANR	3999346	PrimaryExpression	0x3FFFFFFE		3999243	1					
ANR	3999347	ExpressionStatement	return_error ( gs_error_unregistered )	260:12:8579:8614	3999243	1	True				
ANR	3999348	CallExpression	return_error ( gs_error_unregistered )		3999243	0					
ANR	3999349	Callee	return_error		3999243	0					
ANR	3999350	Identifier	return_error		3999243	0					
ANR	3999351	ArgumentList	gs_error_unregistered		3999243	1					
ANR	3999352	Argument	gs_error_unregistered		3999243	0					
ANR	3999353	Identifier	gs_error_unregistered		3999243	0					
ANR	3999354	Statement	endif	261:4:8643:8647	3999243	8	True				
ANR	3999355	ExpressionStatement	xg -> den = fixed2int ( x1 - x0 )	268:4:8955:8983	3999243	9	True				
ANR	3999356	AssignmentExpression	xg -> den = fixed2int ( x1 - x0 )		3999243	0		=			
ANR	3999357	PtrMemberAccess	xg -> den		3999243	0					
ANR	3999358	Identifier	xg		3999243	0					
ANR	3999359	Identifier	den		3999243	1					
ANR	3999360	CallExpression	fixed2int ( x1 - x0 )		3999243	1					
ANR	3999361	Callee	fixed2int		3999243	0					
ANR	3999362	Identifier	fixed2int		3999243	0					
ANR	3999363	ArgumentList	x1 - x0		3999243	1					
ANR	3999364	Argument	x1 - x0		3999243	0					
ANR	3999365	AdditiveExpression	x1 - x0		3999243	0		-			
ANR	3999366	Identifier	x1		3999243	0					
ANR	3999367	Identifier	x0		3999243	1					
ANR	3999368	IfStatement	if ( xg -> den <= 0 )		3999243	10					
ANR	3999369	Condition	xg -> den <= 0	269:8:8993:9004	3999243	0	True				
ANR	3999370	RelationalExpression	xg -> den <= 0		3999243	0		<=			
ANR	3999371	PtrMemberAccess	xg -> den		3999243	0					
ANR	3999372	Identifier	xg		3999243	0					
ANR	3999373	Identifier	den		3999243	1					
ANR	3999374	PrimaryExpression	0		3999243	1					
ANR	3999375	CompoundStatement		22:22:1102:1102	3999243	1					
ANR	3999376	ExpressionStatement	xg -> den = 1	271:8:9103:9114	3999243	0	True				
ANR	3999377	AssignmentExpression	xg -> den = 1		3999243	0		=			
ANR	3999378	PtrMemberAccess	xg -> den		3999243	0					
ANR	3999379	Identifier	xg		3999243	0					
ANR	3999380	Identifier	den		3999243	1					
ANR	3999381	PrimaryExpression	1		3999243	1					
ANR	3999382	ForStatement	for ( i = 0 ; i < num_components ; i ++ )		3999243	11					
ANR	3999383	ForInit	i = 0 ;	273:9:9166:9171	3999243	0	True				
ANR	3999384	AssignmentExpression	i = 0		3999243	0		=			
ANR	3999385	Identifier	i		3999243	0					
ANR	3999386	PrimaryExpression	0		3999243	1					
ANR	3999387	Condition	i < num_components	273:16:9173:9190	3999243	1	True				
ANR	3999388	RelationalExpression	i < num_components		3999243	0		<			
ANR	3999389	Identifier	i		3999243	0					
ANR	3999390	Identifier	num_components		3999243	1					
ANR	3999391	PostIncDecOperationExpression	i ++	273:36:9193:9195	3999243	2	True				
ANR	3999392	Identifier	i		3999243	0					
ANR	3999393	IncDec	++		3999243	1					
ANR	3999394	CompoundStatement		35:8:1728:1799	3999243	3					
ANR	3999395	IdentifierDeclStatement	int32_t cl = lg -> c [ i ] ;	279:8:9490:9511	3999243	0	True				
ANR	3999396	IdentifierDecl	cl = lg -> c [ i ]		3999243	0					
ANR	3999397	IdentifierDeclType	int32_t		3999243	0					
ANR	3999398	Identifier	cl		3999243	1					
ANR	3999399	AssignmentExpression	cl = lg -> c [ i ]		3999243	2		=			
ANR	3999400	Identifier	cl		3999243	0					
ANR	3999401	ArrayIndexing	lg -> c [ i ]		3999243	1					
ANR	3999402	PtrMemberAccess	lg -> c		3999243	0					
ANR	3999403	Identifier	lg		3999243	0					
ANR	3999404	Identifier	c		3999243	1					
ANR	3999405	Identifier	i		3999243	1					
ANR	3999406	IdentifierDeclStatement	int32_t cr = rg -> c [ i ] ;	280:8:9521:9542	3999243	1	True				
ANR	3999407	IdentifierDecl	cr = rg -> c [ i ]		3999243	0					
ANR	3999408	IdentifierDeclType	int32_t		3999243	0					
ANR	3999409	Identifier	cr		3999243	1					
ANR	3999410	AssignmentExpression	cr = rg -> c [ i ]		3999243	2		=			
ANR	3999411	Identifier	cr		3999243	0					
ANR	3999412	ArrayIndexing	rg -> c [ i ]		3999243	1					
ANR	3999413	PtrMemberAccess	rg -> c		3999243	0					
ANR	3999414	Identifier	rg		3999243	0					
ANR	3999415	Identifier	c		3999243	1					
ANR	3999416	Identifier	i		3999243	1					
ANR	3999417	IdentifierDeclStatement	int32_t c0 = ( int32_t ) ( cl + ( ( int64_t ) cr - cl ) * ( x0 - xl ) / ( xr - xl ) ) ;	281:8:9552:9623	3999243	2	True				
ANR	3999418	IdentifierDecl	c0 = ( int32_t ) ( cl + ( ( int64_t ) cr - cl ) * ( x0 - xl ) / ( xr - xl ) )		3999243	0					
ANR	3999419	IdentifierDeclType	int32_t		3999243	0					
ANR	3999420	Identifier	c0		3999243	1					
ANR	3999421	AssignmentExpression	c0 = ( int32_t ) ( cl + ( ( int64_t ) cr - cl ) * ( x0 - xl ) / ( xr - xl ) )		3999243	2		=			
ANR	3999422	Identifier	c0		3999243	0					
ANR	3999423	CastExpression	( int32_t ) ( cl + ( ( int64_t ) cr - cl ) * ( x0 - xl ) / ( xr - xl ) )		3999243	1					
ANR	3999424	CastTarget	int32_t		3999243	0					
ANR	3999425	AdditiveExpression	cl + ( ( int64_t ) cr - cl ) * ( x0 - xl ) / ( xr - xl )		3999243	1		+			
ANR	3999426	Identifier	cl		3999243	0					
ANR	3999427	MultiplicativeExpression	( ( int64_t ) cr - cl ) * ( x0 - xl ) / ( xr - xl )		3999243	1		*			
ANR	3999428	AdditiveExpression	( int64_t ) cr - cl		3999243	0		-			
ANR	3999429	CastExpression	( int64_t ) cr		3999243	0					
ANR	3999430	CastTarget	int64_t		3999243	0					
ANR	3999431	Identifier	cr		3999243	1					
ANR	3999432	Identifier	cl		3999243	1					
ANR	3999433	MultiplicativeExpression	( x0 - xl ) / ( xr - xl )		3999243	1		/			
ANR	3999434	AdditiveExpression	x0 - xl		3999243	0		-			
ANR	3999435	Identifier	x0		3999243	0					
ANR	3999436	Identifier	xl		3999243	1					
ANR	3999437	AdditiveExpression	xr - xl		3999243	1		-			
ANR	3999438	Identifier	xr		3999243	0					
ANR	3999439	Identifier	xl		3999243	1					
ANR	3999440	IdentifierDeclStatement	int32_t c1 = ( int32_t ) ( cl + ( ( int64_t ) cr - cl ) * ( x1 - xl ) / ( xr - xl ) ) ;	282:8:9633:9704	3999243	3	True				
ANR	3999441	IdentifierDecl	c1 = ( int32_t ) ( cl + ( ( int64_t ) cr - cl ) * ( x1 - xl ) / ( xr - xl ) )		3999243	0					
ANR	3999442	IdentifierDeclType	int32_t		3999243	0					
ANR	3999443	Identifier	c1		3999243	1					
ANR	3999444	AssignmentExpression	c1 = ( int32_t ) ( cl + ( ( int64_t ) cr - cl ) * ( x1 - xl ) / ( xr - xl ) )		3999243	2		=			
ANR	3999445	Identifier	c1		3999243	0					
ANR	3999446	CastExpression	( int32_t ) ( cl + ( ( int64_t ) cr - cl ) * ( x1 - xl ) / ( xr - xl ) )		3999243	1					
ANR	3999447	CastTarget	int32_t		3999243	0					
ANR	3999448	AdditiveExpression	cl + ( ( int64_t ) cr - cl ) * ( x1 - xl ) / ( xr - xl )		3999243	1		+			
ANR	3999449	Identifier	cl		3999243	0					
ANR	3999450	MultiplicativeExpression	( ( int64_t ) cr - cl ) * ( x1 - xl ) / ( xr - xl )		3999243	1		*			
ANR	3999451	AdditiveExpression	( int64_t ) cr - cl		3999243	0		-			
ANR	3999452	CastExpression	( int64_t ) cr		3999243	0					
ANR	3999453	CastTarget	int64_t		3999243	0					
ANR	3999454	Identifier	cr		3999243	1					
ANR	3999455	Identifier	cl		3999243	1					
ANR	3999456	MultiplicativeExpression	( x1 - xl ) / ( xr - xl )		3999243	1		/			
ANR	3999457	AdditiveExpression	x1 - xl		3999243	0		-			
ANR	3999458	Identifier	x1		3999243	0					
ANR	3999459	Identifier	xl		3999243	1					
ANR	3999460	AdditiveExpression	xr - xl		3999243	1		-			
ANR	3999461	Identifier	xr		3999243	0					
ANR	3999462	Identifier	xl		3999243	1					
ANR	3999463	ExpressionStatement	xg -> c [ i ] = c0	284:8:9715:9728	3999243	4	True				
ANR	3999464	AssignmentExpression	xg -> c [ i ] = c0		3999243	0		=			
ANR	3999465	ArrayIndexing	xg -> c [ i ]		3999243	0					
ANR	3999466	PtrMemberAccess	xg -> c		3999243	0					
ANR	3999467	Identifier	xg		3999243	0					
ANR	3999468	Identifier	c		3999243	1					
ANR	3999469	Identifier	i		3999243	1					
ANR	3999470	Identifier	c0		3999243	1					
ANR	3999471	ExpressionStatement	xg -> f [ i ] = 0	285:8:9738:9750	3999243	5	True				
ANR	3999472	AssignmentExpression	xg -> f [ i ] = 0		3999243	0		=			
ANR	3999473	ArrayIndexing	xg -> f [ i ]		3999243	0					
ANR	3999474	PtrMemberAccess	xg -> f		3999243	0					
ANR	3999475	Identifier	xg		3999243	0					
ANR	3999476	Identifier	f		3999243	1					
ANR	3999477	Identifier	i		3999243	1					
ANR	3999478	PrimaryExpression	0		3999243	1					
ANR	3999479	ExpressionStatement	xg -> num [ i ] = c1 - c0	291:8:10170:10190	3999243	6	True				
ANR	3999480	AssignmentExpression	xg -> num [ i ] = c1 - c0		3999243	0		=			
ANR	3999481	ArrayIndexing	xg -> num [ i ]		3999243	0					
ANR	3999482	PtrMemberAccess	xg -> num		3999243	0					
ANR	3999483	Identifier	xg		3999243	0					
ANR	3999484	Identifier	num		3999243	1					
ANR	3999485	Identifier	i		3999243	1					
ANR	3999486	AdditiveExpression	c1 - c0		3999243	1		-			
ANR	3999487	Identifier	c1		3999243	0					
ANR	3999488	Identifier	c0		3999243	1					
ANR	3999489	ReturnStatement	return 0 ;	293:4:10202:10210	3999243	12	True				
ANR	3999490	PrimaryExpression	0		3999243	0					
ANR	3999491	ReturnType	static inline int		3999243	1					
ANR	3999492	Identifier	set_x_gradient_nowedge		3999243	2					
ANR	3999493	ParameterList	"trap_gradient * xg , const trap_gradient * lg , const trap_gradient * rg , const trap_line * l , const trap_line * r , int il , int ir , int num_components"		3999243	3					
ANR	3999494	Parameter	trap_gradient * xg	246:23:7746:7762	3999243	0	True				
ANR	3999495	ParameterType	trap_gradient *		3999243	0					
ANR	3999496	Identifier	xg		3999243	1					
ANR	3999497	Parameter	const trap_gradient * lg	246:42:7765:7787	3999243	1	True				
ANR	3999498	ParameterType	const trap_gradient *		3999243	0					
ANR	3999499	Identifier	lg		3999243	1					
ANR	3999500	Parameter	const trap_gradient * rg	246:67:7790:7812	3999243	2	True				
ANR	3999501	ParameterType	const trap_gradient *		3999243	0					
ANR	3999502	Identifier	rg		3999243	1					
ANR	3999503	Parameter	const trap_line * l	247:13:7828:7845	3999243	3	True				
ANR	3999504	ParameterType	const trap_line *		3999243	0					
ANR	3999505	Identifier	l		3999243	1					
ANR	3999506	Parameter	const trap_line * r	247:33:7848:7865	3999243	4	True				
ANR	3999507	ParameterType	const trap_line *		3999243	0					
ANR	3999508	Identifier	r		3999243	1					
ANR	3999509	Parameter	int il	247:53:7868:7873	3999243	5	True				
ANR	3999510	ParameterType	int		3999243	0					
ANR	3999511	Identifier	il		3999243	1					
ANR	3999512	Parameter	int ir	247:61:7876:7881	3999243	6	True				
ANR	3999513	ParameterType	int		3999243	0					
ANR	3999514	Identifier	ir		3999243	1					
ANR	3999515	Parameter	int num_components	247:69:7884:7901	3999243	7	True				
ANR	3999516	ParameterType	int		3999243	0					
ANR	3999517	Identifier	num_components		3999243	1					
ANR	3999518	CFGEntryNode	ENTRY		3999243		True				
ANR	3999519	CFGExitNode	EXIT		3999243		True				
ANR	3999520	Symbol	gs_error_unregistered		3999243						
ANR	3999521	Symbol	xg -> c		3999243						
ANR	3999522	Symbol	lg -> c		3999243						
ANR	3999523	Symbol	r -> h		3999243						
ANR	3999524	Symbol	* rg -> c		3999243						
ANR	3999525	Symbol	l -> h		3999243						
ANR	3999526	Symbol	fixed2int		3999243						
ANR	3999527	Symbol	xg -> f		3999243						
ANR	3999528	Symbol	xg -> num		3999243						
ANR	3999529	Symbol	r -> x		3999243						
ANR	3999530	Symbol	xg -> den		3999243						
ANR	3999531	Symbol	fixed_half		3999243						
ANR	3999532	Symbol	* * xg		3999243						
ANR	3999533	Symbol	* xg -> num		3999243						
ANR	3999534	Symbol	l -> xf		3999243						
ANR	3999535	Symbol	l -> x		3999243						
ANR	3999536	Symbol	rg -> c		3999243						
ANR	3999537	Symbol	* lg -> c		3999243						
ANR	3999538	Symbol	* lg		3999243						
ANR	3999539	Symbol	il		3999243						
ANR	3999540	Symbol	* * rg		3999243						
ANR	3999541	Symbol	* * lg		3999243						
ANR	3999542	Symbol	arith_rshift_1		3999243						
ANR	3999543	Symbol	* xg -> c		3999243						
ANR	3999544	Symbol	ir		3999243						
ANR	3999545	Symbol	i		3999243						
ANR	3999546	Symbol	cl		3999243						
ANR	3999547	Symbol	num_components		3999243						
ANR	3999548	Symbol	l		3999243						
ANR	3999549	Symbol	c0		3999243						
ANR	3999550	Symbol	c1		3999243						
ANR	3999551	Symbol	xg		3999243						
ANR	3999552	Symbol	cr		3999243						
ANR	3999553	Symbol	r		3999243						
ANR	3999554	Symbol	* i		3999243						
ANR	3999555	Symbol	xl		3999243						
ANR	3999556	Symbol	rg		3999243						
ANR	3999557	Symbol	* xg -> f		3999243						
ANR	3999558	Symbol	* l		3999243						
ANR	3999559	Symbol	* xg		3999243						
ANR	3999560	Symbol	r -> xf		3999243						
ANR	3999561	Symbol	int2fixed		3999243						
ANR	3999562	Symbol	x0		3999243						
ANR	3999563	Symbol	* rg		3999243						
ANR	3999564	Symbol	x1		3999243						
ANR	3999565	Symbol	xr		3999243						
ANR	3999566	Symbol	lg		3999243						
ANR	3999567	Symbol	* r		3999243						
ANR	3999568	Function	set_x_gradient	296:0:10215:10862							
ANR	3999569	FunctionDef	"set_x_gradient (trap_gradient * xg , const trap_gradient * lg , const trap_gradient * rg , const trap_line * l , const trap_line * r , int il , int ir , int num_components)"		3999568	0					
ANR	3999570	CompoundStatement		299:0:10406:10862	3999568	0					
ANR	3999571	IfStatement	if ( lg -> den == 0 || rg -> den == 0 )		3999568	0					
ANR	3999572	Condition	lg -> den == 0 || rg -> den == 0	300:8:10416:10443	3999568	0	True				
ANR	3999573	OrExpression	lg -> den == 0 || rg -> den == 0		3999568	0		||			
ANR	3999574	EqualityExpression	lg -> den == 0		3999568	0		==			
ANR	3999575	PtrMemberAccess	lg -> den		3999568	0					
ANR	3999576	Identifier	lg		3999568	0					
ANR	3999577	Identifier	den		3999568	1					
ANR	3999578	PrimaryExpression	0		3999568	1					
ANR	3999579	EqualityExpression	rg -> den == 0		3999568	1		==			
ANR	3999580	PtrMemberAccess	rg -> den		3999568	0					
ANR	3999581	Identifier	rg		3999568	0					
ANR	3999582	Identifier	den		3999568	1					
ANR	3999583	PrimaryExpression	0		3999568	1					
ANR	3999584	CompoundStatement		4:8:100:105	3999568	1					
ANR	3999585	IdentifierDeclStatement	int i ;	302:8:10507:10512	3999568	0	True				
ANR	3999586	IdentifierDecl	i		3999568	0					
ANR	3999587	IdentifierDeclType	int		3999568	0					
ANR	3999588	Identifier	i		3999568	1					
ANR	3999589	ExpressionStatement	xg -> den = 1	304:8:10523:10534	3999568	1	True				
ANR	3999590	AssignmentExpression	xg -> den = 1		3999568	0		=			
ANR	3999591	PtrMemberAccess	xg -> den		3999568	0					
ANR	3999592	Identifier	xg		3999568	0					
ANR	3999593	Identifier	den		3999568	1					
ANR	3999594	PrimaryExpression	1		3999568	1					
ANR	3999595	ForStatement	for ( i = 0 ; i < num_components ; i ++ )		3999568	2					
ANR	3999596	ForInit	i = 0 ;	305:13:10549:10554	3999568	0	True				
ANR	3999597	AssignmentExpression	i = 0		3999568	0		=			
ANR	3999598	Identifier	i		3999568	0					
ANR	3999599	PrimaryExpression	0		3999568	1					
ANR	3999600	Condition	i < num_components	305:20:10556:10573	3999568	1	True				
ANR	3999601	RelationalExpression	i < num_components		3999568	0		<			
ANR	3999602	Identifier	i		3999568	0					
ANR	3999603	Identifier	num_components		3999568	1					
ANR	3999604	PostIncDecOperationExpression	i ++	305:40:10576:10578	3999568	2	True				
ANR	3999605	Identifier	i		3999568	0					
ANR	3999606	IncDec	++		3999568	1					
ANR	3999607	CompoundStatement		7:45:174:174	3999568	3					
ANR	3999608	ExpressionStatement	xg -> c [ i ] = ( lg -> den == 0 ? rg -> c [ i ] : lg -> c [ i ] )	306:12:10595:10642	3999568	0	True				
ANR	3999609	AssignmentExpression	xg -> c [ i ] = ( lg -> den == 0 ? rg -> c [ i ] : lg -> c [ i ] )		3999568	0		=			
ANR	3999610	ArrayIndexing	xg -> c [ i ]		3999568	0					
ANR	3999611	PtrMemberAccess	xg -> c		3999568	0					
ANR	3999612	Identifier	xg		3999568	0					
ANR	3999613	Identifier	c		3999568	1					
ANR	3999614	Identifier	i		3999568	1					
ANR	3999615	ConditionalExpression	lg -> den == 0 ? rg -> c [ i ] : lg -> c [ i ]		3999568	1					
ANR	3999616	Condition	lg -> den == 0		3999568	0					
ANR	3999617	EqualityExpression	lg -> den == 0		3999568	0		==			
ANR	3999618	PtrMemberAccess	lg -> den		3999568	0					
ANR	3999619	Identifier	lg		3999568	0					
ANR	3999620	Identifier	den		3999568	1					
ANR	3999621	PrimaryExpression	0		3999568	1					
ANR	3999622	ArrayIndexing	rg -> c [ i ]		3999568	1					
ANR	3999623	PtrMemberAccess	rg -> c		3999568	0					
ANR	3999624	Identifier	rg		3999568	0					
ANR	3999625	Identifier	c		3999568	1					
ANR	3999626	Identifier	i		3999568	1					
ANR	3999627	ArrayIndexing	lg -> c [ i ]		3999568	2					
ANR	3999628	PtrMemberAccess	lg -> c		3999568	0					
ANR	3999629	Identifier	lg		3999568	0					
ANR	3999630	Identifier	c		3999568	1					
ANR	3999631	Identifier	i		3999568	1					
ANR	3999632	ExpressionStatement	xg -> f [ i ] = 0	307:12:10656:10668	3999568	1	True				
ANR	3999633	AssignmentExpression	xg -> f [ i ] = 0		3999568	0		=			
ANR	3999634	ArrayIndexing	xg -> f [ i ]		3999568	0					
ANR	3999635	PtrMemberAccess	xg -> f		3999568	0					
ANR	3999636	Identifier	xg		3999568	0					
ANR	3999637	Identifier	f		3999568	1					
ANR	3999638	Identifier	i		3999568	1					
ANR	3999639	PrimaryExpression	0		3999568	1					
ANR	3999640	ExpressionStatement	xg -> num [ i ] = 0	308:12:10726:10740	3999568	2	True				
ANR	3999641	AssignmentExpression	xg -> num [ i ] = 0		3999568	0		=			
ANR	3999642	ArrayIndexing	xg -> num [ i ]		3999568	0					
ANR	3999643	PtrMemberAccess	xg -> num		3999568	0					
ANR	3999644	Identifier	xg		3999568	0					
ANR	3999645	Identifier	num		3999568	1					
ANR	3999646	Identifier	i		3999568	1					
ANR	3999647	PrimaryExpression	0		3999568	1					
ANR	3999648	ReturnStatement	return 0 ;	310:8:10760:10768	3999568	3	True				
ANR	3999649	PrimaryExpression	0		3999568	0					
ANR	3999650	ElseStatement	else		3999568	0					
ANR	3999651	ReturnStatement	"return set_x_gradient_nowedge ( xg , lg , rg , l , r , il , ir , num_components ) ;"	312:8:10789:10860	3999568	0	True				
ANR	3999652	CallExpression	"set_x_gradient_nowedge ( xg , lg , rg , l , r , il , ir , num_components )"		3999568	0					
ANR	3999653	Callee	set_x_gradient_nowedge		3999568	0					
ANR	3999654	Identifier	set_x_gradient_nowedge		3999568	0					
ANR	3999655	ArgumentList	xg		3999568	1					
ANR	3999656	Argument	xg		3999568	0					
ANR	3999657	Identifier	xg		3999568	0					
ANR	3999658	Argument	lg		3999568	1					
ANR	3999659	Identifier	lg		3999568	0					
ANR	3999660	Argument	rg		3999568	2					
ANR	3999661	Identifier	rg		3999568	0					
ANR	3999662	Argument	l		3999568	3					
ANR	3999663	Identifier	l		3999568	0					
ANR	3999664	Argument	r		3999568	4					
ANR	3999665	Identifier	r		3999568	0					
ANR	3999666	Argument	il		3999568	5					
ANR	3999667	Identifier	il		3999568	0					
ANR	3999668	Argument	ir		3999568	6					
ANR	3999669	Identifier	ir		3999568	0					
ANR	3999670	Argument	num_components		3999568	7					
ANR	3999671	Identifier	num_components		3999568	0					
ANR	3999672	ReturnType	static inline int		3999568	1					
ANR	3999673	Identifier	set_x_gradient		3999568	2					
ANR	3999674	ParameterList	"trap_gradient * xg , const trap_gradient * lg , const trap_gradient * rg , const trap_line * l , const trap_line * r , int il , int ir , int num_components"		3999568	3					
ANR	3999675	Parameter	trap_gradient * xg	297:15:10248:10264	3999568	0	True				
ANR	3999676	ParameterType	trap_gradient *		3999568	0					
ANR	3999677	Identifier	xg		3999568	1					
ANR	3999678	Parameter	const trap_gradient * lg	297:34:10267:10289	3999568	1	True				
ANR	3999679	ParameterType	const trap_gradient *		3999568	0					
ANR	3999680	Identifier	lg		3999568	1					
ANR	3999681	Parameter	const trap_gradient * rg	297:59:10292:10314	3999568	2	True				
ANR	3999682	ParameterType	const trap_gradient *		3999568	0					
ANR	3999683	Identifier	rg		3999568	1					
ANR	3999684	Parameter	const trap_line * l	298:13:10330:10347	3999568	3	True				
ANR	3999685	ParameterType	const trap_line *		3999568	0					
ANR	3999686	Identifier	l		3999568	1					
ANR	3999687	Parameter	const trap_line * r	298:33:10350:10367	3999568	4	True				
ANR	3999688	ParameterType	const trap_line *		3999568	0					
ANR	3999689	Identifier	r		3999568	1					
ANR	3999690	Parameter	int il	298:53:10370:10375	3999568	5	True				
ANR	3999691	ParameterType	int		3999568	0					
ANR	3999692	Identifier	il		3999568	1					
ANR	3999693	Parameter	int ir	298:61:10378:10383	3999568	6	True				
ANR	3999694	ParameterType	int		3999568	0					
ANR	3999695	Identifier	ir		3999568	1					
ANR	3999696	Parameter	int num_components	298:69:10386:10403	3999568	7	True				
ANR	3999697	ParameterType	int		3999568	0					
ANR	3999698	Identifier	num_components		3999568	1					
ANR	3999699	CFGEntryNode	ENTRY		3999568		True				
ANR	3999700	CFGExitNode	EXIT		3999568		True				
ANR	3999701	Symbol	xg -> c		3999568						
ANR	3999702	Symbol	lg -> c		3999568						
ANR	3999703	Symbol	* rg -> c		3999568						
ANR	3999704	Symbol	xg -> f		3999568						
ANR	3999705	Symbol	xg -> num		3999568						
ANR	3999706	Symbol	xg -> den		3999568						
ANR	3999707	Symbol	* * xg		3999568						
ANR	3999708	Symbol	* xg -> num		3999568						
ANR	3999709	Symbol	rg -> c		3999568						
ANR	3999710	Symbol	* lg -> c		3999568						
ANR	3999711	Symbol	lg -> den		3999568						
ANR	3999712	Symbol	* lg		3999568						
ANR	3999713	Symbol	il		3999568						
ANR	3999714	Symbol	* * rg		3999568						
ANR	3999715	Symbol	* * lg		3999568						
ANR	3999716	Symbol	set_x_gradient_nowedge		3999568						
ANR	3999717	Symbol	* xg -> c		3999568						
ANR	3999718	Symbol	ir		3999568						
ANR	3999719	Symbol	i		3999568						
ANR	3999720	Symbol	num_components		3999568						
ANR	3999721	Symbol	l		3999568						
ANR	3999722	Symbol	xg		3999568						
ANR	3999723	Symbol	r		3999568						
ANR	3999724	Symbol	* i		3999568						
ANR	3999725	Symbol	rg -> den		3999568						
ANR	3999726	Symbol	rg		3999568						
ANR	3999727	Symbol	* xg -> f		3999568						
ANR	3999728	Symbol	* xg		3999568						
ANR	3999729	Symbol	* rg		3999568						
ANR	3999730	Symbol	lg		3999568						
ANR	3999731	Function	gx_default_fill_trapezoid	408:1:13329:14209							
ANR	3999732	FunctionDef	"gx_default_fill_trapezoid (gx_device * dev , const gs_fixed_edge * left , const gs_fixed_edge * right , fixed ybot , fixed ytop , bool swap_axes , const gx_device_color * pdevc , gs_logical_operation_t lop)"		3999731	0					
ANR	3999733	CompoundStatement		421:0:13680:14209	3999731	0					
ANR	3999734	IdentifierDeclStatement	"bool fill_direct = color_writes_pure ( pdevc , lop ) ;"	422:4:13686:13734	3999731	0	True				
ANR	3999735	IdentifierDecl	"fill_direct = color_writes_pure ( pdevc , lop )"		3999731	0					
ANR	3999736	IdentifierDeclType	bool		3999731	0					
ANR	3999737	Identifier	fill_direct		3999731	1					
ANR	3999738	AssignmentExpression	"fill_direct = color_writes_pure ( pdevc , lop )"		3999731	2		=			
ANR	3999739	Identifier	fill_direct		3999731	0					
ANR	3999740	CallExpression	"color_writes_pure ( pdevc , lop )"		3999731	1					
ANR	3999741	Callee	color_writes_pure		3999731	0					
ANR	3999742	Identifier	color_writes_pure		3999731	0					
ANR	3999743	ArgumentList	pdevc		3999731	1					
ANR	3999744	Argument	pdevc		3999731	0					
ANR	3999745	Identifier	pdevc		3999731	0					
ANR	3999746	Argument	lop		3999731	1					
ANR	3999747	Identifier	lop		3999731	0					
ANR	3999748	IfStatement	if ( swap_axes )		3999731	1					
ANR	3999749	Condition	swap_axes	424:8:13745:13753	3999731	0	True				
ANR	3999750	Identifier	swap_axes		3999731	0					
ANR	3999751	CompoundStatement		4:19:75:75	3999731	1					
ANR	3999752	IfStatement	if ( fill_direct )		3999731	0					
ANR	3999753	Condition	fill_direct	425:12:13770:13780	3999731	0	True				
ANR	3999754	Identifier	fill_direct		3999731	0					
ANR	3999755	ReturnStatement	"return gx_fill_trapezoid_as_fd ( dev , left , right , ybot , ytop , 0 , pdevc , lop ) ;"	426:12:13795:13870	3999731	1	True				
ANR	3999756	CallExpression	"gx_fill_trapezoid_as_fd ( dev , left , right , ybot , ytop , 0 , pdevc , lop )"		3999731	0					
ANR	3999757	Callee	gx_fill_trapezoid_as_fd		3999731	0					
ANR	3999758	Identifier	gx_fill_trapezoid_as_fd		3999731	0					
ANR	3999759	ArgumentList	dev		3999731	1					
ANR	3999760	Argument	dev		3999731	0					
ANR	3999761	Identifier	dev		3999731	0					
ANR	3999762	Argument	left		3999731	1					
ANR	3999763	Identifier	left		3999731	0					
ANR	3999764	Argument	right		3999731	2					
ANR	3999765	Identifier	right		3999731	0					
ANR	3999766	Argument	ybot		3999731	3					
ANR	3999767	Identifier	ybot		3999731	0					
ANR	3999768	Argument	ytop		3999731	4					
ANR	3999769	Identifier	ytop		3999731	0					
ANR	3999770	Argument	0		3999731	5					
ANR	3999771	PrimaryExpression	0		3999731	0					
ANR	3999772	Argument	pdevc		3999731	6					
ANR	3999773	Identifier	pdevc		3999731	0					
ANR	3999774	Argument	lop		3999731	7					
ANR	3999775	Identifier	lop		3999731	0					
ANR	3999776	ElseStatement	else		3999731	0					
ANR	3999777	ReturnStatement	"return gx_fill_trapezoid_as_nd ( dev , left , right , ybot , ytop , 0 , pdevc , lop ) ;"	428:12:13897:13972	3999731	0	True				
ANR	3999778	CallExpression	"gx_fill_trapezoid_as_nd ( dev , left , right , ybot , ytop , 0 , pdevc , lop )"		3999731	0					
ANR	3999779	Callee	gx_fill_trapezoid_as_nd		3999731	0					
ANR	3999780	Identifier	gx_fill_trapezoid_as_nd		3999731	0					
ANR	3999781	ArgumentList	dev		3999731	1					
ANR	3999782	Argument	dev		3999731	0					
ANR	3999783	Identifier	dev		3999731	0					
ANR	3999784	Argument	left		3999731	1					
ANR	3999785	Identifier	left		3999731	0					
ANR	3999786	Argument	right		3999731	2					
ANR	3999787	Identifier	right		3999731	0					
ANR	3999788	Argument	ybot		3999731	3					
ANR	3999789	Identifier	ybot		3999731	0					
ANR	3999790	Argument	ytop		3999731	4					
ANR	3999791	Identifier	ytop		3999731	0					
ANR	3999792	Argument	0		3999731	5					
ANR	3999793	PrimaryExpression	0		3999731	0					
ANR	3999794	Argument	pdevc		3999731	6					
ANR	3999795	Identifier	pdevc		3999731	0					
ANR	3999796	Argument	lop		3999731	7					
ANR	3999797	Identifier	lop		3999731	0					
ANR	3999798	ElseStatement	else		3999731	0					
ANR	3999799	CompoundStatement		9:11:304:304	3999731	0					
ANR	3999800	IfStatement	if ( fill_direct )		3999731	0					
ANR	3999801	Condition	fill_direct	430:12:13999:14009	3999731	0	True				
ANR	3999802	Identifier	fill_direct		3999731	0					
ANR	3999803	ReturnStatement	"return gx_fill_trapezoid_ns_fd ( dev , left , right , ybot , ytop , 0 , pdevc , lop ) ;"	431:12:14024:14099	3999731	1	True				
ANR	3999804	CallExpression	"gx_fill_trapezoid_ns_fd ( dev , left , right , ybot , ytop , 0 , pdevc , lop )"		3999731	0					
ANR	3999805	Callee	gx_fill_trapezoid_ns_fd		3999731	0					
ANR	3999806	Identifier	gx_fill_trapezoid_ns_fd		3999731	0					
ANR	3999807	ArgumentList	dev		3999731	1					
ANR	3999808	Argument	dev		3999731	0					
ANR	3999809	Identifier	dev		3999731	0					
ANR	3999810	Argument	left		3999731	1					
ANR	3999811	Identifier	left		3999731	0					
ANR	3999812	Argument	right		3999731	2					
ANR	3999813	Identifier	right		3999731	0					
ANR	3999814	Argument	ybot		3999731	3					
ANR	3999815	Identifier	ybot		3999731	0					
ANR	3999816	Argument	ytop		3999731	4					
ANR	3999817	Identifier	ytop		3999731	0					
ANR	3999818	Argument	0		3999731	5					
ANR	3999819	PrimaryExpression	0		3999731	0					
ANR	3999820	Argument	pdevc		3999731	6					
ANR	3999821	Identifier	pdevc		3999731	0					
ANR	3999822	Argument	lop		3999731	7					
ANR	3999823	Identifier	lop		3999731	0					
ANR	3999824	ElseStatement	else		3999731	0					
ANR	3999825	ReturnStatement	"return gx_fill_trapezoid_ns_nd ( dev , left , right , ybot , ytop , 0 , pdevc , lop ) ;"	433:12:14126:14201	3999731	0	True				
ANR	3999826	CallExpression	"gx_fill_trapezoid_ns_nd ( dev , left , right , ybot , ytop , 0 , pdevc , lop )"		3999731	0					
ANR	3999827	Callee	gx_fill_trapezoid_ns_nd		3999731	0					
ANR	3999828	Identifier	gx_fill_trapezoid_ns_nd		3999731	0					
ANR	3999829	ArgumentList	dev		3999731	1					
ANR	3999830	Argument	dev		3999731	0					
ANR	3999831	Identifier	dev		3999731	0					
ANR	3999832	Argument	left		3999731	1					
ANR	3999833	Identifier	left		3999731	0					
ANR	3999834	Argument	right		3999731	2					
ANR	3999835	Identifier	right		3999731	0					
ANR	3999836	Argument	ybot		3999731	3					
ANR	3999837	Identifier	ybot		3999731	0					
ANR	3999838	Argument	ytop		3999731	4					
ANR	3999839	Identifier	ytop		3999731	0					
ANR	3999840	Argument	0		3999731	5					
ANR	3999841	PrimaryExpression	0		3999731	0					
ANR	3999842	Argument	pdevc		3999731	6					
ANR	3999843	Identifier	pdevc		3999731	0					
ANR	3999844	Argument	lop		3999731	7					
ANR	3999845	Identifier	lop		3999731	0					
ANR	3999846	ReturnType	undef GX_FILL_TRAPEZOID undef CONTIGUOUS_FILL undef SWAP_AXES undef FILL_DIRECT undef EDGE_TYPE undef LINEAR_COLOR undef FILL_ATTRS int		3999731	1					
ANR	3999847	Identifier	gx_default_fill_trapezoid		3999731	2					
ANR	3999848	ParameterList	"gx_device * dev , const gs_fixed_edge * left , const gs_fixed_edge * right , fixed ybot , fixed ytop , bool swap_axes , const gx_device_color * pdevc , gs_logical_operation_t lop"		3999731	3					
ANR	3999849	Parameter	gx_device * dev	418:26:13499:13513	3999731	0	True				
ANR	3999850	ParameterType	gx_device *		3999731	0					
ANR	3999851	Identifier	dev		3999731	1					
ANR	3999852	Parameter	const gs_fixed_edge * left	418:43:13516:13541	3999731	1	True				
ANR	3999853	ParameterType	const gs_fixed_edge *		3999731	0					
ANR	3999854	Identifier	left		3999731	1					
ANR	3999855	Parameter	const gs_fixed_edge * right	419:4:13548:13574	3999731	2	True				
ANR	3999856	ParameterType	const gs_fixed_edge *		3999731	0					
ANR	3999857	Identifier	right		3999731	1					
ANR	3999858	Parameter	fixed ybot	419:33:13577:13586	3999731	3	True				
ANR	3999859	ParameterType	fixed		3999731	0					
ANR	3999860	Identifier	ybot		3999731	1					
ANR	3999861	Parameter	fixed ytop	419:45:13589:13598	3999731	4	True				
ANR	3999862	ParameterType	fixed		3999731	0					
ANR	3999863	Identifier	ytop		3999731	1					
ANR	3999864	Parameter	bool swap_axes	419:57:13601:13614	3999731	5	True				
ANR	3999865	ParameterType	bool		3999731	0					
ANR	3999866	Identifier	swap_axes		3999731	1					
ANR	3999867	Parameter	const gx_device_color * pdevc	420:4:13621:13649	3999731	6	True				
ANR	3999868	ParameterType	const gx_device_color *		3999731	0					
ANR	3999869	Identifier	pdevc		3999731	1					
ANR	3999870	Parameter	gs_logical_operation_t lop	420:35:13652:13677	3999731	7	True				
ANR	3999871	ParameterType	gs_logical_operation_t		3999731	0					
ANR	3999872	Identifier	lop		3999731	1					
ANR	3999873	CFGEntryNode	ENTRY		3999731		True				
ANR	3999874	CFGExitNode	EXIT		3999731		True				
ANR	3999875	Symbol	ytop		3999731						
ANR	3999876	Symbol	gx_fill_trapezoid_as_fd		3999731						
ANR	3999877	Symbol	pdevc		3999731						
ANR	3999878	Symbol	fill_direct		3999731						
ANR	3999879	Symbol	color_writes_pure		3999731						
ANR	3999880	Symbol	gx_fill_trapezoid_ns_fd		3999731						
ANR	3999881	Symbol	right		3999731						
ANR	3999882	Symbol	lop		3999731						
ANR	3999883	Symbol	gx_fill_trapezoid_ns_nd		3999731						
ANR	3999884	Symbol	dev		3999731						
ANR	3999885	Symbol	left		3999731						
ANR	3999886	Symbol	ybot		3999731						
ANR	3999887	Symbol	swap_axes		3999731						
ANR	3999888	Symbol	gx_fill_trapezoid_as_nd		3999731						
ANR	3999889	Function	fill_linear_color_trapezoid_nocheck	437:0:14212:14742							
ANR	3999890	FunctionDef	"fill_linear_color_trapezoid_nocheck (gx_device * dev , const gs_fill_attributes * fa , const gs_linear_color_edge * le , const gs_linear_color_edge * re)"		3999889	0					
ANR	3999891	CompoundStatement		440:0:14384:14742	3999889	0					
ANR	3999892	IdentifierDeclStatement	"fixed y02 = max ( le -> start . y , re -> start . y ) , ymin = max ( y02 , fa -> clip -> p . y ) ;"	441:4:14390:14463	3999889	0	True				
ANR	3999893	IdentifierDecl	"y02 = max ( le -> start . y , re -> start . y )"		3999889	0					
ANR	3999894	IdentifierDeclType	fixed		3999889	0					
ANR	3999895	Identifier	y02		3999889	1					
ANR	3999896	AssignmentExpression	"y02 = max ( le -> start . y , re -> start . y )"		3999889	2		=			
ANR	3999897	Identifier	y02		3999889	0					
ANR	3999898	CallExpression	"max ( le -> start . y , re -> start . y )"		3999889	1					
ANR	3999899	Callee	max		3999889	0					
ANR	3999900	Identifier	max		3999889	0					
ANR	3999901	ArgumentList	le -> start . y		3999889	1					
ANR	3999902	Argument	le -> start . y		3999889	0					
ANR	3999903	MemberAccess	le -> start . y		3999889	0					
ANR	3999904	PtrMemberAccess	le -> start		3999889	0					
ANR	3999905	Identifier	le		3999889	0					
ANR	3999906	Identifier	start		3999889	1					
ANR	3999907	Identifier	y		3999889	1					
ANR	3999908	Argument	re -> start . y		3999889	1					
ANR	3999909	MemberAccess	re -> start . y		3999889	0					
ANR	3999910	PtrMemberAccess	re -> start		3999889	0					
ANR	3999911	Identifier	re		3999889	0					
ANR	3999912	Identifier	start		3999889	1					
ANR	3999913	Identifier	y		3999889	1					
ANR	3999914	IdentifierDecl	"ymin = max ( y02 , fa -> clip -> p . y )"		3999889	1					
ANR	3999915	IdentifierDeclType	fixed		3999889	0					
ANR	3999916	Identifier	ymin		3999889	1					
ANR	3999917	AssignmentExpression	"ymin = max ( y02 , fa -> clip -> p . y )"		3999889	2		=			
ANR	3999918	Identifier	ymin		3999889	0					
ANR	3999919	CallExpression	"max ( y02 , fa -> clip -> p . y )"		3999889	1					
ANR	3999920	Callee	max		3999889	0					
ANR	3999921	Identifier	max		3999889	0					
ANR	3999922	ArgumentList	y02		3999889	1					
ANR	3999923	Argument	y02		3999889	0					
ANR	3999924	Identifier	y02		3999889	0					
ANR	3999925	Argument	fa -> clip -> p . y		3999889	1					
ANR	3999926	MemberAccess	fa -> clip -> p . y		3999889	0					
ANR	3999927	PtrMemberAccess	fa -> clip -> p		3999889	0					
ANR	3999928	PtrMemberAccess	fa -> clip		3999889	0					
ANR	3999929	Identifier	fa		3999889	0					
ANR	3999930	Identifier	clip		3999889	1					
ANR	3999931	Identifier	p		3999889	1					
ANR	3999932	Identifier	y		3999889	1					
ANR	3999933	IdentifierDeclStatement	"fixed y13 = min ( le -> end . y , re -> end . y ) , ymax = min ( y13 , fa -> clip -> q . y ) ;"	442:4:14469:14538	3999889	1	True				
ANR	3999934	IdentifierDecl	"y13 = min ( le -> end . y , re -> end . y )"		3999889	0					
ANR	3999935	IdentifierDeclType	fixed		3999889	0					
ANR	3999936	Identifier	y13		3999889	1					
ANR	3999937	AssignmentExpression	"y13 = min ( le -> end . y , re -> end . y )"		3999889	2		=			
ANR	3999938	Identifier	y13		3999889	0					
ANR	3999939	CallExpression	"min ( le -> end . y , re -> end . y )"		3999889	1					
ANR	3999940	Callee	min		3999889	0					
ANR	3999941	Identifier	min		3999889	0					
ANR	3999942	ArgumentList	le -> end . y		3999889	1					
ANR	3999943	Argument	le -> end . y		3999889	0					
ANR	3999944	MemberAccess	le -> end . y		3999889	0					
ANR	3999945	PtrMemberAccess	le -> end		3999889	0					
ANR	3999946	Identifier	le		3999889	0					
ANR	3999947	Identifier	end		3999889	1					
ANR	3999948	Identifier	y		3999889	1					
ANR	3999949	Argument	re -> end . y		3999889	1					
ANR	3999950	MemberAccess	re -> end . y		3999889	0					
ANR	3999951	PtrMemberAccess	re -> end		3999889	0					
ANR	3999952	Identifier	re		3999889	0					
ANR	3999953	Identifier	end		3999889	1					
ANR	3999954	Identifier	y		3999889	1					
ANR	3999955	IdentifierDecl	"ymax = min ( y13 , fa -> clip -> q . y )"		3999889	1					
ANR	3999956	IdentifierDeclType	fixed		3999889	0					
ANR	3999957	Identifier	ymax		3999889	1					
ANR	3999958	AssignmentExpression	"ymax = min ( y13 , fa -> clip -> q . y )"		3999889	2		=			
ANR	3999959	Identifier	ymax		3999889	0					
ANR	3999960	CallExpression	"min ( y13 , fa -> clip -> q . y )"		3999889	1					
ANR	3999961	Callee	min		3999889	0					
ANR	3999962	Identifier	min		3999889	0					
ANR	3999963	ArgumentList	y13		3999889	1					
ANR	3999964	Argument	y13		3999889	0					
ANR	3999965	Identifier	y13		3999889	0					
ANR	3999966	Argument	fa -> clip -> q . y		3999889	1					
ANR	3999967	MemberAccess	fa -> clip -> q . y		3999889	0					
ANR	3999968	PtrMemberAccess	fa -> clip -> q		3999889	0					
ANR	3999969	PtrMemberAccess	fa -> clip		3999889	0					
ANR	3999970	Identifier	fa		3999889	0					
ANR	3999971	Identifier	clip		3999889	1					
ANR	3999972	Identifier	q		3999889	1					
ANR	3999973	Identifier	y		3999889	1					
ANR	3999974	IdentifierDeclStatement	int code ;	443:4:14544:14552	3999889	2	True				
ANR	3999975	IdentifierDecl	code		3999889	0					
ANR	3999976	IdentifierDeclType	int		3999889	0					
ANR	3999977	Identifier	code		3999889	1					
ANR	3999978	ExpressionStatement	"code = ( fa -> swap_axes ? gx_fill_trapezoid_as_lc : gx_fill_trapezoid_ns_lc ) ( dev , le , re , ymin , ymax , 0 , NULL , fa )"	445:4:14559:14683	3999889	3	True				
ANR	3999979	AssignmentExpression	"code = ( fa -> swap_axes ? gx_fill_trapezoid_as_lc : gx_fill_trapezoid_ns_lc ) ( dev , le , re , ymin , ymax , 0 , NULL , fa )"		3999889	0		=			
ANR	3999980	Identifier	code		3999889	0					
ANR	3999981	CallExpression	"( fa -> swap_axes ? gx_fill_trapezoid_as_lc : gx_fill_trapezoid_ns_lc ) ( dev , le , re , ymin , ymax , 0 , NULL , fa )"		3999889	1					
ANR	3999982	Callee	fa -> swap_axes ? gx_fill_trapezoid_as_lc : gx_fill_trapezoid_ns_lc		3999889	0					
ANR	3999983	ConditionalExpression	fa -> swap_axes ? gx_fill_trapezoid_as_lc : gx_fill_trapezoid_ns_lc		3999889	0					
ANR	3999984	Condition	fa -> swap_axes		3999889	0					
ANR	3999985	PtrMemberAccess	fa -> swap_axes		3999889	0					
ANR	3999986	Identifier	fa		3999889	0					
ANR	3999987	Identifier	swap_axes		3999889	1					
ANR	3999988	Identifier	gx_fill_trapezoid_as_lc		3999889	1					
ANR	3999989	Identifier	gx_fill_trapezoid_ns_lc		3999889	2					
ANR	3999990	ArgumentList	dev		3999889	1					
ANR	3999991	Argument	dev		3999889	0					
ANR	3999992	Identifier	dev		3999889	0					
ANR	3999993	Argument	le		3999889	1					
ANR	3999994	Identifier	le		3999889	0					
ANR	3999995	Argument	re		3999889	2					
ANR	3999996	Identifier	re		3999889	0					
ANR	3999997	Argument	ymin		3999889	3					
ANR	3999998	Identifier	ymin		3999889	0					
ANR	3999999	Argument	ymax		3999889	4					
ANR	4000000	Identifier	ymax		3999889	0					
ANR	4000001	Argument	0		3999889	5					
ANR	4000002	PrimaryExpression	0		3999889	0					
ANR	4000003	Argument	NULL		3999889	6					
ANR	4000004	Identifier	NULL		3999889	0					
ANR	4000005	Argument	fa		3999889	7					
ANR	4000006	Identifier	fa		3999889	0					
ANR	4000007	IfStatement	if ( code < 0 )		3999889	4					
ANR	4000008	Condition	code < 0	447:8:14693:14700	3999889	0	True				
ANR	4000009	RelationalExpression	code < 0		3999889	0		<			
ANR	4000010	Identifier	code		3999889	0					
ANR	4000011	PrimaryExpression	0		3999889	1					
ANR	4000012	ReturnStatement	return code ;	448:8:14711:14722	3999889	1	True				
ANR	4000013	Identifier	code		3999889	0					
ANR	4000014	ReturnStatement	return ! code ;	449:4:14728:14740	3999889	5	True				
ANR	4000015	UnaryOperationExpression	! code		3999889	0					
ANR	4000016	UnaryOperator	!		3999889	0					
ANR	4000017	Identifier	code		3999889	1					
ANR	4000018	ReturnType	static inline int		3999889	1					
ANR	4000019	Identifier	fill_linear_color_trapezoid_nocheck		3999889	2					
ANR	4000020	ParameterList	"gx_device * dev , const gs_fill_attributes * fa , const gs_linear_color_edge * le , const gs_linear_color_edge * re"		3999889	3					
ANR	4000021	Parameter	gx_device * dev	438:36:14266:14279	3999889	0	True				
ANR	4000022	ParameterType	gx_device *		3999889	0					
ANR	4000023	Identifier	dev		3999889	1					
ANR	4000024	Parameter	const gs_fill_attributes * fa	438:52:14282:14309	3999889	1	True				
ANR	4000025	ParameterType	const gs_fill_attributes *		3999889	0					
ANR	4000026	Identifier	fa		3999889	1					
ANR	4000027	Parameter	const gs_linear_color_edge * le	439:8:14320:14349	3999889	2	True				
ANR	4000028	ParameterType	const gs_linear_color_edge *		3999889	0					
ANR	4000029	Identifier	le		3999889	1					
ANR	4000030	Parameter	const gs_linear_color_edge * re	439:40:14352:14381	3999889	3	True				
ANR	4000031	ParameterType	const gs_linear_color_edge *		3999889	0					
ANR	4000032	Identifier	re		3999889	1					
ANR	4000033	CFGEntryNode	ENTRY		3999889		True				
ANR	4000034	CFGExitNode	EXIT		3999889		True				
ANR	4000035	Symbol	ymin		3999889						
ANR	4000036	Symbol	code		3999889						
ANR	4000037	Symbol	le -> start		3999889						
ANR	4000038	Symbol	min		3999889						
ANR	4000039	Symbol	dev		3999889						
ANR	4000040	Symbol	fa -> clip -> q		3999889						
ANR	4000041	Symbol	gx_fill_trapezoid_ns_lc		3999889						
ANR	4000042	Symbol	fa -> clip -> p		3999889						
ANR	4000043	Symbol	y13		3999889						
ANR	4000044	Symbol	le -> start . y		3999889						
ANR	4000045	Symbol	re -> start		3999889						
ANR	4000046	Symbol	gx_fill_trapezoid_as_lc		3999889						
ANR	4000047	Symbol	re -> end . y		3999889						
ANR	4000048	Symbol	fa -> clip -> p . y		3999889						
ANR	4000049	Symbol	* fa		3999889						
ANR	4000050	Symbol	re -> end		3999889						
ANR	4000051	Symbol	NULL		3999889						
ANR	4000052	Symbol	* * fa		3999889						
ANR	4000053	Symbol	max		3999889						
ANR	4000054	Symbol	fa -> swap_axes		3999889						
ANR	4000055	Symbol	re		3999889						
ANR	4000056	Symbol	le -> end		3999889						
ANR	4000057	Symbol	ymax		3999889						
ANR	4000058	Symbol	le -> end . y		3999889						
ANR	4000059	Symbol	fa -> clip -> q . y		3999889						
ANR	4000060	Symbol	fa -> clip		3999889						
ANR	4000061	Symbol	re -> start . y		3999889						
ANR	4000062	Symbol	* fa -> clip		3999889						
ANR	4000063	Symbol	le		3999889						
ANR	4000064	Symbol	y02		3999889						
ANR	4000065	Symbol	* re		3999889						
ANR	4000066	Symbol	fa		3999889						
ANR	4000067	Symbol	* le		3999889						
ANR	4000068	Function	gx_default_fill_linear_color_trapezoid	467:0:15328:15991							
ANR	4000069	FunctionDef	"gx_default_fill_linear_color_trapezoid (gx_device * dev , const gs_fill_attributes * fa , const gs_fixed_point * p0 , const gs_fixed_point * p1 , const gs_fixed_point * p2 , const gs_fixed_point * p3 , const frac31 * c0 , const frac31 * c1 , const frac31 * c2 , const frac31 * c3)"		4000068	0					
ANR	4000070	CompoundStatement		473:0:15625:15991	4000068	0					
ANR	4000071	IdentifierDeclStatement	"gs_linear_color_edge le , re ;"	474:4:15631:15658	4000068	0	True				
ANR	4000072	IdentifierDecl	le		4000068	0					
ANR	4000073	IdentifierDeclType	gs_linear_color_edge		4000068	0					
ANR	4000074	Identifier	le		4000068	1					
ANR	4000075	IdentifierDecl	re		4000068	1					
ANR	4000076	IdentifierDeclType	gs_linear_color_edge		4000068	0					
ANR	4000077	Identifier	re		4000068	1					
ANR	4000078	ExpressionStatement	le . start = * p0	476:4:15665:15679	4000068	1	True				
ANR	4000079	AssignmentExpression	le . start = * p0		4000068	0		=			
ANR	4000080	MemberAccess	le . start		4000068	0					
ANR	4000081	Identifier	le		4000068	0					
ANR	4000082	Identifier	start		4000068	1					
ANR	4000083	UnaryOperationExpression	* p0		4000068	1					
ANR	4000084	UnaryOperator	*		4000068	0					
ANR	4000085	Identifier	p0		4000068	1					
ANR	4000086	ExpressionStatement	le . end = * p1	477:4:15685:15697	4000068	2	True				
ANR	4000087	AssignmentExpression	le . end = * p1		4000068	0		=			
ANR	4000088	MemberAccess	le . end		4000068	0					
ANR	4000089	Identifier	le		4000068	0					
ANR	4000090	Identifier	end		4000068	1					
ANR	4000091	UnaryOperationExpression	* p1		4000068	1					
ANR	4000092	UnaryOperator	*		4000068	0					
ANR	4000093	Identifier	p1		4000068	1					
ANR	4000094	ExpressionStatement	le . c0 = c0	478:4:15703:15713	4000068	3	True				
ANR	4000095	AssignmentExpression	le . c0 = c0		4000068	0		=			
ANR	4000096	MemberAccess	le . c0		4000068	0					
ANR	4000097	Identifier	le		4000068	0					
ANR	4000098	Identifier	c0		4000068	1					
ANR	4000099	Identifier	c0		4000068	1					
ANR	4000100	ExpressionStatement	le . c1 = c1	479:4:15719:15729	4000068	4	True				
ANR	4000101	AssignmentExpression	le . c1 = c1		4000068	0		=			
ANR	4000102	MemberAccess	le . c1		4000068	0					
ANR	4000103	Identifier	le		4000068	0					
ANR	4000104	Identifier	c1		4000068	1					
ANR	4000105	Identifier	c1		4000068	1					
ANR	4000106	ExpressionStatement	le . clip_x = fa -> clip -> p . x	480:4:15735:15760	4000068	5	True				
ANR	4000107	AssignmentExpression	le . clip_x = fa -> clip -> p . x		4000068	0		=			
ANR	4000108	MemberAccess	le . clip_x		4000068	0					
ANR	4000109	Identifier	le		4000068	0					
ANR	4000110	Identifier	clip_x		4000068	1					
ANR	4000111	MemberAccess	fa -> clip -> p . x		4000068	1					
ANR	4000112	PtrMemberAccess	fa -> clip -> p		4000068	0					
ANR	4000113	PtrMemberAccess	fa -> clip		4000068	0					
ANR	4000114	Identifier	fa		4000068	0					
ANR	4000115	Identifier	clip		4000068	1					
ANR	4000116	Identifier	p		4000068	1					
ANR	4000117	Identifier	x		4000068	1					
ANR	4000118	ExpressionStatement	re . start = * p2	481:4:15766:15780	4000068	6	True				
ANR	4000119	AssignmentExpression	re . start = * p2		4000068	0		=			
ANR	4000120	MemberAccess	re . start		4000068	0					
ANR	4000121	Identifier	re		4000068	0					
ANR	4000122	Identifier	start		4000068	1					
ANR	4000123	UnaryOperationExpression	* p2		4000068	1					
ANR	4000124	UnaryOperator	*		4000068	0					
ANR	4000125	Identifier	p2		4000068	1					
ANR	4000126	ExpressionStatement	re . end = * p3	482:4:15786:15798	4000068	7	True				
ANR	4000127	AssignmentExpression	re . end = * p3		4000068	0		=			
ANR	4000128	MemberAccess	re . end		4000068	0					
ANR	4000129	Identifier	re		4000068	0					
ANR	4000130	Identifier	end		4000068	1					
ANR	4000131	UnaryOperationExpression	* p3		4000068	1					
ANR	4000132	UnaryOperator	*		4000068	0					
ANR	4000133	Identifier	p3		4000068	1					
ANR	4000134	ExpressionStatement	re . c0 = c2	483:4:15804:15814	4000068	8	True				
ANR	4000135	AssignmentExpression	re . c0 = c2		4000068	0		=			
ANR	4000136	MemberAccess	re . c0		4000068	0					
ANR	4000137	Identifier	re		4000068	0					
ANR	4000138	Identifier	c0		4000068	1					
ANR	4000139	Identifier	c2		4000068	1					
ANR	4000140	ExpressionStatement	re . c1 = c3	484:4:15820:15830	4000068	9	True				
ANR	4000141	AssignmentExpression	re . c1 = c3		4000068	0		=			
ANR	4000142	MemberAccess	re . c1		4000068	0					
ANR	4000143	Identifier	re		4000068	0					
ANR	4000144	Identifier	c1		4000068	1					
ANR	4000145	Identifier	c3		4000068	1					
ANR	4000146	ExpressionStatement	re . clip_x = fa -> clip -> q . x	485:4:15836:15861	4000068	10	True				
ANR	4000147	AssignmentExpression	re . clip_x = fa -> clip -> q . x		4000068	0		=			
ANR	4000148	MemberAccess	re . clip_x		4000068	0					
ANR	4000149	Identifier	re		4000068	0					
ANR	4000150	Identifier	clip_x		4000068	1					
ANR	4000151	MemberAccess	fa -> clip -> q . x		4000068	1					
ANR	4000152	PtrMemberAccess	fa -> clip -> q		4000068	0					
ANR	4000153	PtrMemberAccess	fa -> clip		4000068	0					
ANR	4000154	Identifier	fa		4000068	0					
ANR	4000155	Identifier	clip		4000068	1					
ANR	4000156	Identifier	q		4000068	1					
ANR	4000157	Identifier	x		4000068	1					
ANR	4000158	IfStatement	"if ( check_gradient_overflow ( & le , & re ) )"		4000068	11					
ANR	4000159	Condition	"check_gradient_overflow ( & le , & re )"	486:8:15871:15903	4000068	0	True				
ANR	4000160	CallExpression	"check_gradient_overflow ( & le , & re )"		4000068	0					
ANR	4000161	Callee	check_gradient_overflow		4000068	0					
ANR	4000162	Identifier	check_gradient_overflow		4000068	0					
ANR	4000163	ArgumentList	& le		4000068	1					
ANR	4000164	Argument	& le		4000068	0					
ANR	4000165	UnaryOperationExpression	& le		4000068	0					
ANR	4000166	UnaryOperator	&		4000068	0					
ANR	4000167	Identifier	le		4000068	1					
ANR	4000168	Argument	& re		4000068	1					
ANR	4000169	UnaryOperationExpression	& re		4000068	0					
ANR	4000170	UnaryOperator	&		4000068	0					
ANR	4000171	Identifier	re		4000068	1					
ANR	4000172	ReturnStatement	return 0 ;	487:8:15914:15922	4000068	1	True				
ANR	4000173	PrimaryExpression	0		4000068	0					
ANR	4000174	ReturnStatement	"return fill_linear_color_trapezoid_nocheck ( dev , fa , & le , & re ) ;"	488:4:15928:15989	4000068	12	True				
ANR	4000175	CallExpression	"fill_linear_color_trapezoid_nocheck ( dev , fa , & le , & re )"		4000068	0					
ANR	4000176	Callee	fill_linear_color_trapezoid_nocheck		4000068	0					
ANR	4000177	Identifier	fill_linear_color_trapezoid_nocheck		4000068	0					
ANR	4000178	ArgumentList	dev		4000068	1					
ANR	4000179	Argument	dev		4000068	0					
ANR	4000180	Identifier	dev		4000068	0					
ANR	4000181	Argument	fa		4000068	1					
ANR	4000182	Identifier	fa		4000068	0					
ANR	4000183	Argument	& le		4000068	2					
ANR	4000184	UnaryOperationExpression	& le		4000068	0					
ANR	4000185	UnaryOperator	&		4000068	0					
ANR	4000186	Identifier	le		4000068	1					
ANR	4000187	Argument	& re		4000068	3					
ANR	4000188	UnaryOperationExpression	& re		4000068	0					
ANR	4000189	UnaryOperator	&		4000068	0					
ANR	4000190	Identifier	re		4000068	1					
ANR	4000191	ReturnType	int		4000068	1					
ANR	4000192	Identifier	gx_default_fill_linear_color_trapezoid		4000068	2					
ANR	4000193	ParameterList	"gx_device * dev , const gs_fill_attributes * fa , const gs_fixed_point * p0 , const gs_fixed_point * p1 , const gs_fixed_point * p2 , const gs_fixed_point * p3 , const frac31 * c0 , const frac31 * c1 , const frac31 * c2 , const frac31 * c3"		4000068	3					
ANR	4000194	Parameter	gx_device * dev	468:39:15371:15384	4000068	0	True				
ANR	4000195	ParameterType	gx_device *		4000068	0					
ANR	4000196	Identifier	dev		4000068	1					
ANR	4000197	Parameter	const gs_fill_attributes * fa	468:55:15387:15414	4000068	1	True				
ANR	4000198	ParameterType	const gs_fill_attributes *		4000068	0					
ANR	4000199	Identifier	fa		4000068	1					
ANR	4000200	Parameter	const gs_fixed_point * p0	469:8:15425:15448	4000068	2	True				
ANR	4000201	ParameterType	const gs_fixed_point *		4000068	0					
ANR	4000202	Identifier	p0		4000068	1					
ANR	4000203	Parameter	const gs_fixed_point * p1	469:34:15451:15474	4000068	3	True				
ANR	4000204	ParameterType	const gs_fixed_point *		4000068	0					
ANR	4000205	Identifier	p1		4000068	1					
ANR	4000206	Parameter	const gs_fixed_point * p2	470:8:15485:15508	4000068	4	True				
ANR	4000207	ParameterType	const gs_fixed_point *		4000068	0					
ANR	4000208	Identifier	p2		4000068	1					
ANR	4000209	Parameter	const gs_fixed_point * p3	470:34:15511:15534	4000068	5	True				
ANR	4000210	ParameterType	const gs_fixed_point *		4000068	0					
ANR	4000211	Identifier	p3		4000068	1					
ANR	4000212	Parameter	const frac31 * c0	471:8:15545:15560	4000068	6	True				
ANR	4000213	ParameterType	const frac31 *		4000068	0					
ANR	4000214	Identifier	c0		4000068	1					
ANR	4000215	Parameter	const frac31 * c1	471:26:15563:15578	4000068	7	True				
ANR	4000216	ParameterType	const frac31 *		4000068	0					
ANR	4000217	Identifier	c1		4000068	1					
ANR	4000218	Parameter	const frac31 * c2	472:8:15589:15604	4000068	8	True				
ANR	4000219	ParameterType	const frac31 *		4000068	0					
ANR	4000220	Identifier	c2		4000068	1					
ANR	4000221	Parameter	const frac31 * c3	472:26:15607:15622	4000068	9	True				
ANR	4000222	ParameterType	const frac31 *		4000068	0					
ANR	4000223	Identifier	c3		4000068	1					
ANR	4000224	CFGEntryNode	ENTRY		4000068		True				
ANR	4000225	CFGExitNode	EXIT		4000068		True				
ANR	4000226	Symbol	p0		4000068						
ANR	4000227	Symbol	p1		4000068						
ANR	4000228	Symbol	p2		4000068						
ANR	4000229	Symbol	p3		4000068						
ANR	4000230	Symbol	le . end		4000068						
ANR	4000231	Symbol	fill_linear_color_trapezoid_nocheck		4000068						
ANR	4000232	Symbol	check_gradient_overflow		4000068						
ANR	4000233	Symbol	le . clip_x		4000068						
ANR	4000234	Symbol	dev		4000068						
ANR	4000235	Symbol	re . c0		4000068						
ANR	4000236	Symbol	re . c1		4000068						
ANR	4000237	Symbol	fa -> clip -> q		4000068						
ANR	4000238	Symbol	fa -> clip -> p		4000068						
ANR	4000239	Symbol	re . start		4000068						
ANR	4000240	Symbol	fa -> clip -> p . x		4000068						
ANR	4000241	Symbol	* fa		4000068						
ANR	4000242	Symbol	& le		4000068						
ANR	4000243	Symbol	* p1		4000068						
ANR	4000244	Symbol	* p0		4000068						
ANR	4000245	Symbol	* * fa		4000068						
ANR	4000246	Symbol	re . clip_x		4000068						
ANR	4000247	Symbol	* p3		4000068						
ANR	4000248	Symbol	* p2		4000068						
ANR	4000249	Symbol	le . start		4000068						
ANR	4000250	Symbol	c0		4000068						
ANR	4000251	Symbol	c1		4000068						
ANR	4000252	Symbol	c2		4000068						
ANR	4000253	Symbol	c3		4000068						
ANR	4000254	Symbol	re . end		4000068						
ANR	4000255	Symbol	re		4000068						
ANR	4000256	Symbol	le . c0		4000068						
ANR	4000257	Symbol	fa -> clip -> q . x		4000068						
ANR	4000258	Symbol	le . c1		4000068						
ANR	4000259	Symbol	fa -> clip		4000068						
ANR	4000260	Symbol	* fa -> clip		4000068						
ANR	4000261	Symbol	le		4000068						
ANR	4000262	Symbol	fa		4000068						
ANR	4000263	Symbol	& re		4000068						
ANR	4000264	Function	fill_linear_color_triangle	491:0:15994:17793							
ANR	4000265	FunctionDef	"fill_linear_color_triangle (gx_device * dev , const gs_fill_attributes * fa , const gs_fixed_point * p0 , const gs_fixed_point * p1 , const gs_fixed_point * p2 , const frac31 * c0 , const frac31 * c1 , const frac31 * c2)"		4000264	0					
ANR	4000266	CompoundStatement		496:0:16241:17793	4000264	0					
ANR	4000267	IdentifierDeclStatement	int code ;	497:4:16285:16293	4000264	0	True				
ANR	4000268	IdentifierDecl	code		4000264	0					
ANR	4000269	IdentifierDeclType	int		4000264	0					
ANR	4000270	Identifier	code		4000264	1					
ANR	4000271	IdentifierDeclStatement	"gs_linear_color_edge e0 , e1 , e2 ;"	498:4:16299:16330	4000264	1	True				
ANR	4000272	IdentifierDecl	e0		4000264	0					
ANR	4000273	IdentifierDeclType	gs_linear_color_edge		4000264	0					
ANR	4000274	Identifier	e0		4000264	1					
ANR	4000275	IdentifierDecl	e1		4000264	1					
ANR	4000276	IdentifierDeclType	gs_linear_color_edge		4000264	0					
ANR	4000277	Identifier	e1		4000264	1					
ANR	4000278	IdentifierDecl	e2		4000264	2					
ANR	4000279	IdentifierDeclType	gs_linear_color_edge		4000264	0					
ANR	4000280	Identifier	e2		4000264	1					
ANR	4000281	IfStatement	if ( p0 -> y == p1 -> y )		4000264	2					
ANR	4000282	Condition	p0 -> y == p1 -> y	500:8:16341:16354	4000264	0	True				
ANR	4000283	EqualityExpression	p0 -> y == p1 -> y		4000264	0		==			
ANR	4000284	PtrMemberAccess	p0 -> y		4000264	0					
ANR	4000285	Identifier	p0		4000264	0					
ANR	4000286	Identifier	y		4000264	1					
ANR	4000287	PtrMemberAccess	p1 -> y		4000264	1					
ANR	4000288	Identifier	p1		4000264	0					
ANR	4000289	Identifier	y		4000264	1					
ANR	4000290	ReturnStatement	"return gx_default_fill_linear_color_trapezoid ( dev , fa , p0 , p2 , p1 , p2 , c0 , c2 , c1 , c2 ) ;"	501:8:16365:16451	4000264	1	True				
ANR	4000291	CallExpression	"gx_default_fill_linear_color_trapezoid ( dev , fa , p0 , p2 , p1 , p2 , c0 , c2 , c1 , c2 )"		4000264	0					
ANR	4000292	Callee	gx_default_fill_linear_color_trapezoid		4000264	0					
ANR	4000293	Identifier	gx_default_fill_linear_color_trapezoid		4000264	0					
ANR	4000294	ArgumentList	dev		4000264	1					
ANR	4000295	Argument	dev		4000264	0					
ANR	4000296	Identifier	dev		4000264	0					
ANR	4000297	Argument	fa		4000264	1					
ANR	4000298	Identifier	fa		4000264	0					
ANR	4000299	Argument	p0		4000264	2					
ANR	4000300	Identifier	p0		4000264	0					
ANR	4000301	Argument	p2		4000264	3					
ANR	4000302	Identifier	p2		4000264	0					
ANR	4000303	Argument	p1		4000264	4					
ANR	4000304	Identifier	p1		4000264	0					
ANR	4000305	Argument	p2		4000264	5					
ANR	4000306	Identifier	p2		4000264	0					
ANR	4000307	Argument	c0		4000264	6					
ANR	4000308	Identifier	c0		4000264	0					
ANR	4000309	Argument	c2		4000264	7					
ANR	4000310	Identifier	c2		4000264	0					
ANR	4000311	Argument	c1		4000264	8					
ANR	4000312	Identifier	c1		4000264	0					
ANR	4000313	Argument	c2		4000264	9					
ANR	4000314	Identifier	c2		4000264	0					
ANR	4000315	IfStatement	if ( p1 -> y == p2 -> y )		4000264	3					
ANR	4000316	Condition	p1 -> y == p2 -> y	502:8:16461:16474	4000264	0	True				
ANR	4000317	EqualityExpression	p1 -> y == p2 -> y		4000264	0		==			
ANR	4000318	PtrMemberAccess	p1 -> y		4000264	0					
ANR	4000319	Identifier	p1		4000264	0					
ANR	4000320	Identifier	y		4000264	1					
ANR	4000321	PtrMemberAccess	p2 -> y		4000264	1					
ANR	4000322	Identifier	p2		4000264	0					
ANR	4000323	Identifier	y		4000264	1					
ANR	4000324	ReturnStatement	"return gx_default_fill_linear_color_trapezoid ( dev , fa , p0 , p2 , p0 , p1 , c0 , c2 , c0 , c1 ) ;"	503:8:16485:16571	4000264	1	True				
ANR	4000325	CallExpression	"gx_default_fill_linear_color_trapezoid ( dev , fa , p0 , p2 , p0 , p1 , c0 , c2 , c0 , c1 )"		4000264	0					
ANR	4000326	Callee	gx_default_fill_linear_color_trapezoid		4000264	0					
ANR	4000327	Identifier	gx_default_fill_linear_color_trapezoid		4000264	0					
ANR	4000328	ArgumentList	dev		4000264	1					
ANR	4000329	Argument	dev		4000264	0					
ANR	4000330	Identifier	dev		4000264	0					
ANR	4000331	Argument	fa		4000264	1					
ANR	4000332	Identifier	fa		4000264	0					
ANR	4000333	Argument	p0		4000264	2					
ANR	4000334	Identifier	p0		4000264	0					
ANR	4000335	Argument	p2		4000264	3					
ANR	4000336	Identifier	p2		4000264	0					
ANR	4000337	Argument	p0		4000264	4					
ANR	4000338	Identifier	p0		4000264	0					
ANR	4000339	Argument	p1		4000264	5					
ANR	4000340	Identifier	p1		4000264	0					
ANR	4000341	Argument	c0		4000264	6					
ANR	4000342	Identifier	c0		4000264	0					
ANR	4000343	Argument	c2		4000264	7					
ANR	4000344	Identifier	c2		4000264	0					
ANR	4000345	Argument	c0		4000264	8					
ANR	4000346	Identifier	c0		4000264	0					
ANR	4000347	Argument	c1		4000264	9					
ANR	4000348	Identifier	c1		4000264	0					
ANR	4000349	ExpressionStatement	e0 . start = * p0	504:4:16577:16591	4000264	4	True				
ANR	4000350	AssignmentExpression	e0 . start = * p0		4000264	0		=			
ANR	4000351	MemberAccess	e0 . start		4000264	0					
ANR	4000352	Identifier	e0		4000264	0					
ANR	4000353	Identifier	start		4000264	1					
ANR	4000354	UnaryOperationExpression	* p0		4000264	1					
ANR	4000355	UnaryOperator	*		4000264	0					
ANR	4000356	Identifier	p0		4000264	1					
ANR	4000357	ExpressionStatement	e0 . end = * p2	505:4:16597:16609	4000264	5	True				
ANR	4000358	AssignmentExpression	e0 . end = * p2		4000264	0		=			
ANR	4000359	MemberAccess	e0 . end		4000264	0					
ANR	4000360	Identifier	e0		4000264	0					
ANR	4000361	Identifier	end		4000264	1					
ANR	4000362	UnaryOperationExpression	* p2		4000264	1					
ANR	4000363	UnaryOperator	*		4000264	0					
ANR	4000364	Identifier	p2		4000264	1					
ANR	4000365	ExpressionStatement	e0 . c0 = c0	506:4:16615:16625	4000264	6	True				
ANR	4000366	AssignmentExpression	e0 . c0 = c0		4000264	0		=			
ANR	4000367	MemberAccess	e0 . c0		4000264	0					
ANR	4000368	Identifier	e0		4000264	0					
ANR	4000369	Identifier	c0		4000264	1					
ANR	4000370	Identifier	c0		4000264	1					
ANR	4000371	ExpressionStatement	e0 . c1 = c2	507:4:16631:16641	4000264	7	True				
ANR	4000372	AssignmentExpression	e0 . c1 = c2		4000264	0		=			
ANR	4000373	MemberAccess	e0 . c1		4000264	0					
ANR	4000374	Identifier	e0		4000264	0					
ANR	4000375	Identifier	c1		4000264	1					
ANR	4000376	Identifier	c2		4000264	1					
ANR	4000377	ExpressionStatement	e0 . clip_x = fa -> clip -> p . x	508:4:16647:16672	4000264	8	True				
ANR	4000378	AssignmentExpression	e0 . clip_x = fa -> clip -> p . x		4000264	0		=			
ANR	4000379	MemberAccess	e0 . clip_x		4000264	0					
ANR	4000380	Identifier	e0		4000264	0					
ANR	4000381	Identifier	clip_x		4000264	1					
ANR	4000382	MemberAccess	fa -> clip -> p . x		4000264	1					
ANR	4000383	PtrMemberAccess	fa -> clip -> p		4000264	0					
ANR	4000384	PtrMemberAccess	fa -> clip		4000264	0					
ANR	4000385	Identifier	fa		4000264	0					
ANR	4000386	Identifier	clip		4000264	1					
ANR	4000387	Identifier	p		4000264	1					
ANR	4000388	Identifier	x		4000264	1					
ANR	4000389	ExpressionStatement	e1 . start = * p0	509:4:16678:16692	4000264	9	True				
ANR	4000390	AssignmentExpression	e1 . start = * p0		4000264	0		=			
ANR	4000391	MemberAccess	e1 . start		4000264	0					
ANR	4000392	Identifier	e1		4000264	0					
ANR	4000393	Identifier	start		4000264	1					
ANR	4000394	UnaryOperationExpression	* p0		4000264	1					
ANR	4000395	UnaryOperator	*		4000264	0					
ANR	4000396	Identifier	p0		4000264	1					
ANR	4000397	ExpressionStatement	e1 . end = * p1	510:4:16698:16710	4000264	10	True				
ANR	4000398	AssignmentExpression	e1 . end = * p1		4000264	0		=			
ANR	4000399	MemberAccess	e1 . end		4000264	0					
ANR	4000400	Identifier	e1		4000264	0					
ANR	4000401	Identifier	end		4000264	1					
ANR	4000402	UnaryOperationExpression	* p1		4000264	1					
ANR	4000403	UnaryOperator	*		4000264	0					
ANR	4000404	Identifier	p1		4000264	1					
ANR	4000405	ExpressionStatement	e1 . c0 = c0	511:4:16716:16726	4000264	11	True				
ANR	4000406	AssignmentExpression	e1 . c0 = c0		4000264	0		=			
ANR	4000407	MemberAccess	e1 . c0		4000264	0					
ANR	4000408	Identifier	e1		4000264	0					
ANR	4000409	Identifier	c0		4000264	1					
ANR	4000410	Identifier	c0		4000264	1					
ANR	4000411	ExpressionStatement	e1 . c1 = c1	512:4:16732:16742	4000264	12	True				
ANR	4000412	AssignmentExpression	e1 . c1 = c1		4000264	0		=			
ANR	4000413	MemberAccess	e1 . c1		4000264	0					
ANR	4000414	Identifier	e1		4000264	0					
ANR	4000415	Identifier	c1		4000264	1					
ANR	4000416	Identifier	c1		4000264	1					
ANR	4000417	ExpressionStatement	e1 . clip_x = fa -> clip -> q . x	513:4:16748:16773	4000264	13	True				
ANR	4000418	AssignmentExpression	e1 . clip_x = fa -> clip -> q . x		4000264	0		=			
ANR	4000419	MemberAccess	e1 . clip_x		4000264	0					
ANR	4000420	Identifier	e1		4000264	0					
ANR	4000421	Identifier	clip_x		4000264	1					
ANR	4000422	MemberAccess	fa -> clip -> q . x		4000264	1					
ANR	4000423	PtrMemberAccess	fa -> clip -> q		4000264	0					
ANR	4000424	PtrMemberAccess	fa -> clip		4000264	0					
ANR	4000425	Identifier	fa		4000264	0					
ANR	4000426	Identifier	clip		4000264	1					
ANR	4000427	Identifier	q		4000264	1					
ANR	4000428	Identifier	x		4000264	1					
ANR	4000429	IfStatement	if ( p0 -> y < p1 -> y && p1 -> y < p2 -> y )		4000264	14					
ANR	4000430	Condition	p0 -> y < p1 -> y && p1 -> y < p2 -> y	514:8:16783:16812	4000264	0	True				
ANR	4000431	AndExpression	p0 -> y < p1 -> y && p1 -> y < p2 -> y		4000264	0		&&			
ANR	4000432	RelationalExpression	p0 -> y < p1 -> y		4000264	0		<			
ANR	4000433	PtrMemberAccess	p0 -> y		4000264	0					
ANR	4000434	Identifier	p0		4000264	0					
ANR	4000435	Identifier	y		4000264	1					
ANR	4000436	PtrMemberAccess	p1 -> y		4000264	1					
ANR	4000437	Identifier	p1		4000264	0					
ANR	4000438	Identifier	y		4000264	1					
ANR	4000439	RelationalExpression	p1 -> y < p2 -> y		4000264	1		<			
ANR	4000440	PtrMemberAccess	p1 -> y		4000264	0					
ANR	4000441	Identifier	p1		4000264	0					
ANR	4000442	Identifier	y		4000264	1					
ANR	4000443	PtrMemberAccess	p2 -> y		4000264	1					
ANR	4000444	Identifier	p2		4000264	0					
ANR	4000445	Identifier	y		4000264	1					
ANR	4000446	CompoundStatement		19:40:573:573	4000264	1					
ANR	4000447	ExpressionStatement	e2 . start = * p1	515:8:16825:16839	4000264	0	True				
ANR	4000448	AssignmentExpression	e2 . start = * p1		4000264	0		=			
ANR	4000449	MemberAccess	e2 . start		4000264	0					
ANR	4000450	Identifier	e2		4000264	0					
ANR	4000451	Identifier	start		4000264	1					
ANR	4000452	UnaryOperationExpression	* p1		4000264	1					
ANR	4000453	UnaryOperator	*		4000264	0					
ANR	4000454	Identifier	p1		4000264	1					
ANR	4000455	ExpressionStatement	e2 . end = * p2	516:8:16849:16861	4000264	1	True				
ANR	4000456	AssignmentExpression	e2 . end = * p2		4000264	0		=			
ANR	4000457	MemberAccess	e2 . end		4000264	0					
ANR	4000458	Identifier	e2		4000264	0					
ANR	4000459	Identifier	end		4000264	1					
ANR	4000460	UnaryOperationExpression	* p2		4000264	1					
ANR	4000461	UnaryOperator	*		4000264	0					
ANR	4000462	Identifier	p2		4000264	1					
ANR	4000463	ExpressionStatement	e2 . c0 = c1	517:8:16871:16881	4000264	2	True				
ANR	4000464	AssignmentExpression	e2 . c0 = c1		4000264	0		=			
ANR	4000465	MemberAccess	e2 . c0		4000264	0					
ANR	4000466	Identifier	e2		4000264	0					
ANR	4000467	Identifier	c0		4000264	1					
ANR	4000468	Identifier	c1		4000264	1					
ANR	4000469	ExpressionStatement	e2 . c1 = c2	518:8:16891:16901	4000264	3	True				
ANR	4000470	AssignmentExpression	e2 . c1 = c2		4000264	0		=			
ANR	4000471	MemberAccess	e2 . c1		4000264	0					
ANR	4000472	Identifier	e2		4000264	0					
ANR	4000473	Identifier	c1		4000264	1					
ANR	4000474	Identifier	c2		4000264	1					
ANR	4000475	ExpressionStatement	e2 . clip_x = fa -> clip -> q . x	519:8:16911:16936	4000264	4	True				
ANR	4000476	AssignmentExpression	e2 . clip_x = fa -> clip -> q . x		4000264	0		=			
ANR	4000477	MemberAccess	e2 . clip_x		4000264	0					
ANR	4000478	Identifier	e2		4000264	0					
ANR	4000479	Identifier	clip_x		4000264	1					
ANR	4000480	MemberAccess	fa -> clip -> q . x		4000264	1					
ANR	4000481	PtrMemberAccess	fa -> clip -> q		4000264	0					
ANR	4000482	PtrMemberAccess	fa -> clip		4000264	0					
ANR	4000483	Identifier	fa		4000264	0					
ANR	4000484	Identifier	clip		4000264	1					
ANR	4000485	Identifier	q		4000264	1					
ANR	4000486	Identifier	x		4000264	1					
ANR	4000487	IfStatement	"if ( check_gradient_overflow ( & e0 , & e1 ) )"		4000264	5					
ANR	4000488	Condition	"check_gradient_overflow ( & e0 , & e1 )"	520:12:16950:16982	4000264	0	True				
ANR	4000489	CallExpression	"check_gradient_overflow ( & e0 , & e1 )"		4000264	0					
ANR	4000490	Callee	check_gradient_overflow		4000264	0					
ANR	4000491	Identifier	check_gradient_overflow		4000264	0					
ANR	4000492	ArgumentList	& e0		4000264	1					
ANR	4000493	Argument	& e0		4000264	0					
ANR	4000494	UnaryOperationExpression	& e0		4000264	0					
ANR	4000495	UnaryOperator	&		4000264	0					
ANR	4000496	Identifier	e0		4000264	1					
ANR	4000497	Argument	& e1		4000264	1					
ANR	4000498	UnaryOperationExpression	& e1		4000264	0					
ANR	4000499	UnaryOperator	&		4000264	0					
ANR	4000500	Identifier	e1		4000264	1					
ANR	4000501	ReturnStatement	return 0 ;	521:12:16997:17005	4000264	1	True				
ANR	4000502	PrimaryExpression	0		4000264	0					
ANR	4000503	IfStatement	"if ( check_gradient_overflow ( & e0 , & e2 ) )"		4000264	6					
ANR	4000504	Condition	"check_gradient_overflow ( & e0 , & e2 )"	522:12:17019:17051	4000264	0	True				
ANR	4000505	CallExpression	"check_gradient_overflow ( & e0 , & e2 )"		4000264	0					
ANR	4000506	Callee	check_gradient_overflow		4000264	0					
ANR	4000507	Identifier	check_gradient_overflow		4000264	0					
ANR	4000508	ArgumentList	& e0		4000264	1					
ANR	4000509	Argument	& e0		4000264	0					
ANR	4000510	UnaryOperationExpression	& e0		4000264	0					
ANR	4000511	UnaryOperator	&		4000264	0					
ANR	4000512	Identifier	e0		4000264	1					
ANR	4000513	Argument	& e2		4000264	1					
ANR	4000514	UnaryOperationExpression	& e2		4000264	0					
ANR	4000515	UnaryOperator	&		4000264	0					
ANR	4000516	Identifier	e2		4000264	1					
ANR	4000517	ReturnStatement	return 0 ;	523:12:17066:17074	4000264	1	True				
ANR	4000518	PrimaryExpression	0		4000264	0					
ANR	4000519	ExpressionStatement	"code = fill_linear_color_trapezoid_nocheck ( dev , fa , & e0 , & e1 )"	524:8:17084:17145	4000264	7	True				
ANR	4000520	AssignmentExpression	"code = fill_linear_color_trapezoid_nocheck ( dev , fa , & e0 , & e1 )"		4000264	0		=			
ANR	4000521	Identifier	code		4000264	0					
ANR	4000522	CallExpression	"fill_linear_color_trapezoid_nocheck ( dev , fa , & e0 , & e1 )"		4000264	1					
ANR	4000523	Callee	fill_linear_color_trapezoid_nocheck		4000264	0					
ANR	4000524	Identifier	fill_linear_color_trapezoid_nocheck		4000264	0					
ANR	4000525	ArgumentList	dev		4000264	1					
ANR	4000526	Argument	dev		4000264	0					
ANR	4000527	Identifier	dev		4000264	0					
ANR	4000528	Argument	fa		4000264	1					
ANR	4000529	Identifier	fa		4000264	0					
ANR	4000530	Argument	& e0		4000264	2					
ANR	4000531	UnaryOperationExpression	& e0		4000264	0					
ANR	4000532	UnaryOperator	&		4000264	0					
ANR	4000533	Identifier	e0		4000264	1					
ANR	4000534	Argument	& e1		4000264	3					
ANR	4000535	UnaryOperationExpression	& e1		4000264	0					
ANR	4000536	UnaryOperator	&		4000264	0					
ANR	4000537	Identifier	e1		4000264	1					
ANR	4000538	IfStatement	if ( code <= 0 )		4000264	8					
ANR	4000539	Condition	code <= 0	525:12:17159:17167	4000264	0	True				
ANR	4000540	RelationalExpression	code <= 0		4000264	0		<=			
ANR	4000541	Identifier	code		4000264	0					
ANR	4000542	PrimaryExpression	0		4000264	1					
ANR	4000543	ReturnStatement	return code ;	526:12:17193:17204	4000264	1	True				
ANR	4000544	Identifier	code		4000264	0					
ANR	4000545	ReturnStatement	"return fill_linear_color_trapezoid_nocheck ( dev , fa , & e0 , & e2 ) ;"	527:8:17214:17275	4000264	9	True				
ANR	4000546	CallExpression	"fill_linear_color_trapezoid_nocheck ( dev , fa , & e0 , & e2 )"		4000264	0					
ANR	4000547	Callee	fill_linear_color_trapezoid_nocheck		4000264	0					
ANR	4000548	Identifier	fill_linear_color_trapezoid_nocheck		4000264	0					
ANR	4000549	ArgumentList	dev		4000264	1					
ANR	4000550	Argument	dev		4000264	0					
ANR	4000551	Identifier	dev		4000264	0					
ANR	4000552	Argument	fa		4000264	1					
ANR	4000553	Identifier	fa		4000264	0					
ANR	4000554	Argument	& e0		4000264	2					
ANR	4000555	UnaryOperationExpression	& e0		4000264	0					
ANR	4000556	UnaryOperator	&		4000264	0					
ANR	4000557	Identifier	e0		4000264	1					
ANR	4000558	Argument	& e2		4000264	3					
ANR	4000559	UnaryOperationExpression	& e2		4000264	0					
ANR	4000560	UnaryOperator	&		4000264	0					
ANR	4000561	Identifier	e2		4000264	1					
ANR	4000562	ElseStatement	else		4000264	0					
ANR	4000563	CompoundStatement		33:11:1046:1046	4000264	0					
ANR	4000564	ExpressionStatement	e2 . start = * p2	529:8:17335:17349	4000264	0	True				
ANR	4000565	AssignmentExpression	e2 . start = * p2		4000264	0		=			
ANR	4000566	MemberAccess	e2 . start		4000264	0					
ANR	4000567	Identifier	e2		4000264	0					
ANR	4000568	Identifier	start		4000264	1					
ANR	4000569	UnaryOperationExpression	* p2		4000264	1					
ANR	4000570	UnaryOperator	*		4000264	0					
ANR	4000571	Identifier	p2		4000264	1					
ANR	4000572	ExpressionStatement	e2 . end = * p1	530:8:17359:17371	4000264	1	True				
ANR	4000573	AssignmentExpression	e2 . end = * p1		4000264	0		=			
ANR	4000574	MemberAccess	e2 . end		4000264	0					
ANR	4000575	Identifier	e2		4000264	0					
ANR	4000576	Identifier	end		4000264	1					
ANR	4000577	UnaryOperationExpression	* p1		4000264	1					
ANR	4000578	UnaryOperator	*		4000264	0					
ANR	4000579	Identifier	p1		4000264	1					
ANR	4000580	ExpressionStatement	e2 . c0 = c2	531:8:17381:17391	4000264	2	True				
ANR	4000581	AssignmentExpression	e2 . c0 = c2		4000264	0		=			
ANR	4000582	MemberAccess	e2 . c0		4000264	0					
ANR	4000583	Identifier	e2		4000264	0					
ANR	4000584	Identifier	c0		4000264	1					
ANR	4000585	Identifier	c2		4000264	1					
ANR	4000586	ExpressionStatement	e2 . c1 = c1	532:8:17401:17411	4000264	3	True				
ANR	4000587	AssignmentExpression	e2 . c1 = c1		4000264	0		=			
ANR	4000588	MemberAccess	e2 . c1		4000264	0					
ANR	4000589	Identifier	e2		4000264	0					
ANR	4000590	Identifier	c1		4000264	1					
ANR	4000591	Identifier	c1		4000264	1					
ANR	4000592	ExpressionStatement	e2 . clip_x = fa -> clip -> q . x	533:8:17421:17446	4000264	4	True				
ANR	4000593	AssignmentExpression	e2 . clip_x = fa -> clip -> q . x		4000264	0		=			
ANR	4000594	MemberAccess	e2 . clip_x		4000264	0					
ANR	4000595	Identifier	e2		4000264	0					
ANR	4000596	Identifier	clip_x		4000264	1					
ANR	4000597	MemberAccess	fa -> clip -> q . x		4000264	1					
ANR	4000598	PtrMemberAccess	fa -> clip -> q		4000264	0					
ANR	4000599	PtrMemberAccess	fa -> clip		4000264	0					
ANR	4000600	Identifier	fa		4000264	0					
ANR	4000601	Identifier	clip		4000264	1					
ANR	4000602	Identifier	q		4000264	1					
ANR	4000603	Identifier	x		4000264	1					
ANR	4000604	IfStatement	"if ( check_gradient_overflow ( & e0 , & e1 ) )"		4000264	5					
ANR	4000605	Condition	"check_gradient_overflow ( & e0 , & e1 )"	534:12:17460:17492	4000264	0	True				
ANR	4000606	CallExpression	"check_gradient_overflow ( & e0 , & e1 )"		4000264	0					
ANR	4000607	Callee	check_gradient_overflow		4000264	0					
ANR	4000608	Identifier	check_gradient_overflow		4000264	0					
ANR	4000609	ArgumentList	& e0		4000264	1					
ANR	4000610	Argument	& e0		4000264	0					
ANR	4000611	UnaryOperationExpression	& e0		4000264	0					
ANR	4000612	UnaryOperator	&		4000264	0					
ANR	4000613	Identifier	e0		4000264	1					
ANR	4000614	Argument	& e1		4000264	1					
ANR	4000615	UnaryOperationExpression	& e1		4000264	0					
ANR	4000616	UnaryOperator	&		4000264	0					
ANR	4000617	Identifier	e1		4000264	1					
ANR	4000618	ReturnStatement	return 0 ;	535:12:17507:17515	4000264	1	True				
ANR	4000619	PrimaryExpression	0		4000264	0					
ANR	4000620	IfStatement	"if ( check_gradient_overflow ( & e2 , & e1 ) )"		4000264	6					
ANR	4000621	Condition	"check_gradient_overflow ( & e2 , & e1 )"	536:12:17529:17561	4000264	0	True				
ANR	4000622	CallExpression	"check_gradient_overflow ( & e2 , & e1 )"		4000264	0					
ANR	4000623	Callee	check_gradient_overflow		4000264	0					
ANR	4000624	Identifier	check_gradient_overflow		4000264	0					
ANR	4000625	ArgumentList	& e2		4000264	1					
ANR	4000626	Argument	& e2		4000264	0					
ANR	4000627	UnaryOperationExpression	& e2		4000264	0					
ANR	4000628	UnaryOperator	&		4000264	0					
ANR	4000629	Identifier	e2		4000264	1					
ANR	4000630	Argument	& e1		4000264	1					
ANR	4000631	UnaryOperationExpression	& e1		4000264	0					
ANR	4000632	UnaryOperator	&		4000264	0					
ANR	4000633	Identifier	e1		4000264	1					
ANR	4000634	ReturnStatement	return 0 ;	537:12:17576:17584	4000264	1	True				
ANR	4000635	PrimaryExpression	0		4000264	0					
ANR	4000636	ExpressionStatement	"code = fill_linear_color_trapezoid_nocheck ( dev , fa , & e0 , & e1 )"	538:8:17594:17655	4000264	7	True				
ANR	4000637	AssignmentExpression	"code = fill_linear_color_trapezoid_nocheck ( dev , fa , & e0 , & e1 )"		4000264	0		=			
ANR	4000638	Identifier	code		4000264	0					
ANR	4000639	CallExpression	"fill_linear_color_trapezoid_nocheck ( dev , fa , & e0 , & e1 )"		4000264	1					
ANR	4000640	Callee	fill_linear_color_trapezoid_nocheck		4000264	0					
ANR	4000641	Identifier	fill_linear_color_trapezoid_nocheck		4000264	0					
ANR	4000642	ArgumentList	dev		4000264	1					
ANR	4000643	Argument	dev		4000264	0					
ANR	4000644	Identifier	dev		4000264	0					
ANR	4000645	Argument	fa		4000264	1					
ANR	4000646	Identifier	fa		4000264	0					
ANR	4000647	Argument	& e0		4000264	2					
ANR	4000648	UnaryOperationExpression	& e0		4000264	0					
ANR	4000649	UnaryOperator	&		4000264	0					
ANR	4000650	Identifier	e0		4000264	1					
ANR	4000651	Argument	& e1		4000264	3					
ANR	4000652	UnaryOperationExpression	& e1		4000264	0					
ANR	4000653	UnaryOperator	&		4000264	0					
ANR	4000654	Identifier	e1		4000264	1					
ANR	4000655	IfStatement	if ( code <= 0 )		4000264	8					
ANR	4000656	Condition	code <= 0	539:12:17669:17677	4000264	0	True				
ANR	4000657	RelationalExpression	code <= 0		4000264	0		<=			
ANR	4000658	Identifier	code		4000264	0					
ANR	4000659	PrimaryExpression	0		4000264	1					
ANR	4000660	ReturnStatement	return code ;	540:12:17703:17714	4000264	1	True				
ANR	4000661	Identifier	code		4000264	0					
ANR	4000662	ReturnStatement	"return fill_linear_color_trapezoid_nocheck ( dev , fa , & e2 , & e1 ) ;"	541:8:17724:17785	4000264	9	True				
ANR	4000663	CallExpression	"fill_linear_color_trapezoid_nocheck ( dev , fa , & e2 , & e1 )"		4000264	0					
ANR	4000664	Callee	fill_linear_color_trapezoid_nocheck		4000264	0					
ANR	4000665	Identifier	fill_linear_color_trapezoid_nocheck		4000264	0					
ANR	4000666	ArgumentList	dev		4000264	1					
ANR	4000667	Argument	dev		4000264	0					
ANR	4000668	Identifier	dev		4000264	0					
ANR	4000669	Argument	fa		4000264	1					
ANR	4000670	Identifier	fa		4000264	0					
ANR	4000671	Argument	& e2		4000264	2					
ANR	4000672	UnaryOperationExpression	& e2		4000264	0					
ANR	4000673	UnaryOperator	&		4000264	0					
ANR	4000674	Identifier	e2		4000264	1					
ANR	4000675	Argument	& e1		4000264	3					
ANR	4000676	UnaryOperationExpression	& e1		4000264	0					
ANR	4000677	UnaryOperator	&		4000264	0					
ANR	4000678	Identifier	e1		4000264	1					
ANR	4000679	ReturnType	static inline int		4000264	1					
ANR	4000680	Identifier	fill_linear_color_triangle		4000264	2					
ANR	4000681	ParameterList	"gx_device * dev , const gs_fill_attributes * fa , const gs_fixed_point * p0 , const gs_fixed_point * p1 , const gs_fixed_point * p2 , const frac31 * c0 , const frac31 * c1 , const frac31 * c2"		4000264	3					
ANR	4000682	Parameter	gx_device * dev	492:27:16039:16052	4000264	0	True				
ANR	4000683	ParameterType	gx_device *		4000264	0					
ANR	4000684	Identifier	dev		4000264	1					
ANR	4000685	Parameter	const gs_fill_attributes * fa	492:43:16055:16082	4000264	1	True				
ANR	4000686	ParameterType	const gs_fill_attributes *		4000264	0					
ANR	4000687	Identifier	fa		4000264	1					
ANR	4000688	Parameter	const gs_fixed_point * p0	493:8:16093:16116	4000264	2	True				
ANR	4000689	ParameterType	const gs_fixed_point *		4000264	0					
ANR	4000690	Identifier	p0		4000264	1					
ANR	4000691	Parameter	const gs_fixed_point * p1	493:34:16119:16142	4000264	3	True				
ANR	4000692	ParameterType	const gs_fixed_point *		4000264	0					
ANR	4000693	Identifier	p1		4000264	1					
ANR	4000694	Parameter	const gs_fixed_point * p2	494:8:16153:16176	4000264	4	True				
ANR	4000695	ParameterType	const gs_fixed_point *		4000264	0					
ANR	4000696	Identifier	p2		4000264	1					
ANR	4000697	Parameter	const frac31 * c0	495:8:16187:16202	4000264	5	True				
ANR	4000698	ParameterType	const frac31 *		4000264	0					
ANR	4000699	Identifier	c0		4000264	1					
ANR	4000700	Parameter	const frac31 * c1	495:26:16205:16220	4000264	6	True				
ANR	4000701	ParameterType	const frac31 *		4000264	0					
ANR	4000702	Identifier	c1		4000264	1					
ANR	4000703	Parameter	const frac31 * c2	495:44:16223:16238	4000264	7	True				
ANR	4000704	ParameterType	const frac31 *		4000264	0					
ANR	4000705	Identifier	c2		4000264	1					
ANR	4000706	CFGEntryNode	ENTRY		4000264		True				
ANR	4000707	CFGExitNode	EXIT		4000264		True				
ANR	4000708	Symbol	p0		4000264						
ANR	4000709	Symbol	e1 . start		4000264						
ANR	4000710	Symbol	p1		4000264						
ANR	4000711	Symbol	e0 . end		4000264						
ANR	4000712	Symbol	p2		4000264						
ANR	4000713	Symbol	code		4000264						
ANR	4000714	Symbol	e0 . start		4000264						
ANR	4000715	Symbol	e1 . clip_x		4000264						
ANR	4000716	Symbol	fill_linear_color_trapezoid_nocheck		4000264						
ANR	4000717	Symbol	p2 -> y		4000264						
ANR	4000718	Symbol	e0 . clip_x		4000264						
ANR	4000719	Symbol	check_gradient_overflow		4000264						
ANR	4000720	Symbol	p0 -> y		4000264						
ANR	4000721	Symbol	dev		4000264						
ANR	4000722	Symbol	fa -> clip -> q		4000264						
ANR	4000723	Symbol	e1 . c0		4000264						
ANR	4000724	Symbol	fa -> clip -> p		4000264						
ANR	4000725	Symbol	gx_default_fill_linear_color_trapezoid		4000264						
ANR	4000726	Symbol	e1 . c1		4000264						
ANR	4000727	Symbol	fa -> clip -> p . x		4000264						
ANR	4000728	Symbol	e0 . c0		4000264						
ANR	4000729	Symbol	* fa		4000264						
ANR	4000730	Symbol	e0 . c1		4000264						
ANR	4000731	Symbol	* p1		4000264						
ANR	4000732	Symbol	* p0		4000264						
ANR	4000733	Symbol	* * fa		4000264						
ANR	4000734	Symbol	p1 -> y		4000264						
ANR	4000735	Symbol	e0		4000264						
ANR	4000736	Symbol	* p2		4000264						
ANR	4000737	Symbol	e1		4000264						
ANR	4000738	Symbol	c0		4000264						
ANR	4000739	Symbol	e2		4000264						
ANR	4000740	Symbol	c1		4000264						
ANR	4000741	Symbol	e1 . end		4000264						
ANR	4000742	Symbol	c2		4000264						
ANR	4000743	Symbol	e2 . c0		4000264						
ANR	4000744	Symbol	e2 . c1		4000264						
ANR	4000745	Symbol	fa -> clip -> q . x		4000264						
ANR	4000746	Symbol	& e0		4000264						
ANR	4000747	Symbol	& e2		4000264						
ANR	4000748	Symbol	fa -> clip		4000264						
ANR	4000749	Symbol	e2 . end		4000264						
ANR	4000750	Symbol	& e1		4000264						
ANR	4000751	Symbol	* fa -> clip		4000264						
ANR	4000752	Symbol	fa		4000264						
ANR	4000753	Symbol	e2 . start		4000264						
ANR	4000754	Symbol	e2 . clip_x		4000264						
ANR	4000755	Function	gx_default_fill_linear_color_triangle	546:0:17840:18704							
ANR	4000756	FunctionDef	"gx_default_fill_linear_color_triangle (gx_device * dev , const gs_fill_attributes * fa , const gs_fixed_point * p0 , const gs_fixed_point * p1 , const gs_fixed_point * p2 , const frac31 * c0 , const frac31 * c1 , const frac31 * c2)"		4000755	0					
ANR	4000757	CompoundStatement		551:0:18084:18704	4000755	0					
ANR	4000758	IdentifierDeclStatement	"fixed dx1 = p1 -> x - p0 -> x , dy1 = p1 -> y - p0 -> y ;"	552:4:18090:18136	4000755	0	True				
ANR	4000759	IdentifierDecl	dx1 = p1 -> x - p0 -> x		4000755	0					
ANR	4000760	IdentifierDeclType	fixed		4000755	0					
ANR	4000761	Identifier	dx1		4000755	1					
ANR	4000762	AssignmentExpression	dx1 = p1 -> x - p0 -> x		4000755	2		=			
ANR	4000763	Identifier	dx1		4000755	0					
ANR	4000764	AdditiveExpression	p1 -> x - p0 -> x		4000755	1		-			
ANR	4000765	PtrMemberAccess	p1 -> x		4000755	0					
ANR	4000766	Identifier	p1		4000755	0					
ANR	4000767	Identifier	x		4000755	1					
ANR	4000768	PtrMemberAccess	p0 -> x		4000755	1					
ANR	4000769	Identifier	p0		4000755	0					
ANR	4000770	Identifier	x		4000755	1					
ANR	4000771	IdentifierDecl	dy1 = p1 -> y - p0 -> y		4000755	1					
ANR	4000772	IdentifierDeclType	fixed		4000755	0					
ANR	4000773	Identifier	dy1		4000755	1					
ANR	4000774	AssignmentExpression	dy1 = p1 -> y - p0 -> y		4000755	2		=			
ANR	4000775	Identifier	dy1		4000755	0					
ANR	4000776	AdditiveExpression	p1 -> y - p0 -> y		4000755	1		-			
ANR	4000777	PtrMemberAccess	p1 -> y		4000755	0					
ANR	4000778	Identifier	p1		4000755	0					
ANR	4000779	Identifier	y		4000755	1					
ANR	4000780	PtrMemberAccess	p0 -> y		4000755	1					
ANR	4000781	Identifier	p0		4000755	0					
ANR	4000782	Identifier	y		4000755	1					
ANR	4000783	IdentifierDeclStatement	"fixed dx2 = p2 -> x - p0 -> x , dy2 = p2 -> y - p0 -> y ;"	553:4:18142:18188	4000755	1	True				
ANR	4000784	IdentifierDecl	dx2 = p2 -> x - p0 -> x		4000755	0					
ANR	4000785	IdentifierDeclType	fixed		4000755	0					
ANR	4000786	Identifier	dx2		4000755	1					
ANR	4000787	AssignmentExpression	dx2 = p2 -> x - p0 -> x		4000755	2		=			
ANR	4000788	Identifier	dx2		4000755	0					
ANR	4000789	AdditiveExpression	p2 -> x - p0 -> x		4000755	1		-			
ANR	4000790	PtrMemberAccess	p2 -> x		4000755	0					
ANR	4000791	Identifier	p2		4000755	0					
ANR	4000792	Identifier	x		4000755	1					
ANR	4000793	PtrMemberAccess	p0 -> x		4000755	1					
ANR	4000794	Identifier	p0		4000755	0					
ANR	4000795	Identifier	x		4000755	1					
ANR	4000796	IdentifierDecl	dy2 = p2 -> y - p0 -> y		4000755	1					
ANR	4000797	IdentifierDeclType	fixed		4000755	0					
ANR	4000798	Identifier	dy2		4000755	1					
ANR	4000799	AssignmentExpression	dy2 = p2 -> y - p0 -> y		4000755	2		=			
ANR	4000800	Identifier	dy2		4000755	0					
ANR	4000801	AdditiveExpression	p2 -> y - p0 -> y		4000755	1		-			
ANR	4000802	PtrMemberAccess	p2 -> y		4000755	0					
ANR	4000803	Identifier	p2		4000755	0					
ANR	4000804	Identifier	y		4000755	1					
ANR	4000805	PtrMemberAccess	p0 -> y		4000755	1					
ANR	4000806	Identifier	p0		4000755	0					
ANR	4000807	Identifier	y		4000755	1					
ANR	4000808	IfStatement	if ( ( int64_t ) dx1 * dy2 < ( int64_t ) dx2 * dy1 )		4000755	2					
ANR	4000809	Condition	( int64_t ) dx1 * dy2 < ( int64_t ) dx2 * dy1	555:8:18199:18237	4000755	0	True				
ANR	4000810	RelationalExpression	( int64_t ) dx1 * dy2 < ( int64_t ) dx2 * dy1		4000755	0		<			
ANR	4000811	MultiplicativeExpression	( int64_t ) dx1 * dy2		4000755	0		*			
ANR	4000812	CastExpression	( int64_t ) dx1		4000755	0					
ANR	4000813	CastTarget	int64_t		4000755	0					
ANR	4000814	Identifier	dx1		4000755	1					
ANR	4000815	Identifier	dy2		4000755	1					
ANR	4000816	MultiplicativeExpression	( int64_t ) dx2 * dy1		4000755	1		*			
ANR	4000817	CastExpression	( int64_t ) dx2		4000755	0					
ANR	4000818	CastTarget	int64_t		4000755	0					
ANR	4000819	Identifier	dx2		4000755	1					
ANR	4000820	Identifier	dy1		4000755	1					
ANR	4000821	CompoundStatement		7:8:203:223	4000755	1					
ANR	4000822	IdentifierDeclStatement	const gs_fixed_point * p = p1 ;	556:8:18250:18278	4000755	0	True				
ANR	4000823	IdentifierDecl	* p = p1		4000755	0					
ANR	4000824	IdentifierDeclType	const gs_fixed_point *		4000755	0					
ANR	4000825	Identifier	p		4000755	1					
ANR	4000826	AssignmentExpression	* p = p1		4000755	2		=			
ANR	4000827	Identifier	p1		4000755	0					
ANR	4000828	Identifier	p1		4000755	1					
ANR	4000829	IdentifierDeclStatement	const frac31 * c = c1 ;	557:8:18288:18308	4000755	1	True				
ANR	4000830	IdentifierDecl	* c = c1		4000755	0					
ANR	4000831	IdentifierDeclType	const frac31 *		4000755	0					
ANR	4000832	Identifier	c		4000755	1					
ANR	4000833	AssignmentExpression	* c = c1		4000755	2		=			
ANR	4000834	Identifier	c1		4000755	0					
ANR	4000835	Identifier	c1		4000755	1					
ANR	4000836	ExpressionStatement	p1 = p2	559:8:18319:18326	4000755	2	True				
ANR	4000837	AssignmentExpression	p1 = p2		4000755	0		=			
ANR	4000838	Identifier	p1		4000755	0					
ANR	4000839	Identifier	p2		4000755	1					
ANR	4000840	ExpressionStatement	p2 = p	560:8:18336:18342	4000755	3	True				
ANR	4000841	AssignmentExpression	p2 = p		4000755	0		=			
ANR	4000842	Identifier	p2		4000755	0					
ANR	4000843	Identifier	p		4000755	1					
ANR	4000844	ExpressionStatement	c1 = c2	561:8:18352:18359	4000755	4	True				
ANR	4000845	AssignmentExpression	c1 = c2		4000755	0		=			
ANR	4000846	Identifier	c1		4000755	0					
ANR	4000847	Identifier	c2		4000755	1					
ANR	4000848	ExpressionStatement	c2 = c	562:8:18369:18375	4000755	5	True				
ANR	4000849	AssignmentExpression	c2 = c		4000755	0		=			
ANR	4000850	Identifier	c2		4000755	0					
ANR	4000851	Identifier	c		4000755	1					
ANR	4000852	IfStatement	if ( p0 -> y <= p1 -> y && p0 -> y <= p2 -> y )		4000755	3					
ANR	4000853	Condition	p0 -> y <= p1 -> y && p0 -> y <= p2 -> y	564:8:18391:18422	4000755	0	True				
ANR	4000854	AndExpression	p0 -> y <= p1 -> y && p0 -> y <= p2 -> y		4000755	0		&&			
ANR	4000855	RelationalExpression	p0 -> y <= p1 -> y		4000755	0		<=			
ANR	4000856	PtrMemberAccess	p0 -> y		4000755	0					
ANR	4000857	Identifier	p0		4000755	0					
ANR	4000858	Identifier	y		4000755	1					
ANR	4000859	PtrMemberAccess	p1 -> y		4000755	1					
ANR	4000860	Identifier	p1		4000755	0					
ANR	4000861	Identifier	y		4000755	1					
ANR	4000862	RelationalExpression	p0 -> y <= p2 -> y		4000755	1		<=			
ANR	4000863	PtrMemberAccess	p0 -> y		4000755	0					
ANR	4000864	Identifier	p0		4000755	0					
ANR	4000865	Identifier	y		4000755	1					
ANR	4000866	PtrMemberAccess	p2 -> y		4000755	1					
ANR	4000867	Identifier	p2		4000755	0					
ANR	4000868	Identifier	y		4000755	1					
ANR	4000869	ReturnStatement	"return fill_linear_color_triangle ( dev , fa , p0 , p1 , p2 , c0 , c1 , c2 ) ;"	565:8:18433:18499	4000755	1	True				
ANR	4000870	CallExpression	"fill_linear_color_triangle ( dev , fa , p0 , p1 , p2 , c0 , c1 , c2 )"		4000755	0					
ANR	4000871	Callee	fill_linear_color_triangle		4000755	0					
ANR	4000872	Identifier	fill_linear_color_triangle		4000755	0					
ANR	4000873	ArgumentList	dev		4000755	1					
ANR	4000874	Argument	dev		4000755	0					
ANR	4000875	Identifier	dev		4000755	0					
ANR	4000876	Argument	fa		4000755	1					
ANR	4000877	Identifier	fa		4000755	0					
ANR	4000878	Argument	p0		4000755	2					
ANR	4000879	Identifier	p0		4000755	0					
ANR	4000880	Argument	p1		4000755	3					
ANR	4000881	Identifier	p1		4000755	0					
ANR	4000882	Argument	p2		4000755	4					
ANR	4000883	Identifier	p2		4000755	0					
ANR	4000884	Argument	c0		4000755	5					
ANR	4000885	Identifier	c0		4000755	0					
ANR	4000886	Argument	c1		4000755	6					
ANR	4000887	Identifier	c1		4000755	0					
ANR	4000888	Argument	c2		4000755	7					
ANR	4000889	Identifier	c2		4000755	0					
ANR	4000890	IfStatement	if ( p1 -> y <= p0 -> y && p1 -> y <= p2 -> y )		4000755	4					
ANR	4000891	Condition	p1 -> y <= p0 -> y && p1 -> y <= p2 -> y	566:8:18509:18540	4000755	0	True				
ANR	4000892	AndExpression	p1 -> y <= p0 -> y && p1 -> y <= p2 -> y		4000755	0		&&			
ANR	4000893	RelationalExpression	p1 -> y <= p0 -> y		4000755	0		<=			
ANR	4000894	PtrMemberAccess	p1 -> y		4000755	0					
ANR	4000895	Identifier	p1		4000755	0					
ANR	4000896	Identifier	y		4000755	1					
ANR	4000897	PtrMemberAccess	p0 -> y		4000755	1					
ANR	4000898	Identifier	p0		4000755	0					
ANR	4000899	Identifier	y		4000755	1					
ANR	4000900	RelationalExpression	p1 -> y <= p2 -> y		4000755	1		<=			
ANR	4000901	PtrMemberAccess	p1 -> y		4000755	0					
ANR	4000902	Identifier	p1		4000755	0					
ANR	4000903	Identifier	y		4000755	1					
ANR	4000904	PtrMemberAccess	p2 -> y		4000755	1					
ANR	4000905	Identifier	p2		4000755	0					
ANR	4000906	Identifier	y		4000755	1					
ANR	4000907	ReturnStatement	"return fill_linear_color_triangle ( dev , fa , p1 , p2 , p0 , c1 , c2 , c0 ) ;"	567:8:18551:18617	4000755	1	True				
ANR	4000908	CallExpression	"fill_linear_color_triangle ( dev , fa , p1 , p2 , p0 , c1 , c2 , c0 )"		4000755	0					
ANR	4000909	Callee	fill_linear_color_triangle		4000755	0					
ANR	4000910	Identifier	fill_linear_color_triangle		4000755	0					
ANR	4000911	ArgumentList	dev		4000755	1					
ANR	4000912	Argument	dev		4000755	0					
ANR	4000913	Identifier	dev		4000755	0					
ANR	4000914	Argument	fa		4000755	1					
ANR	4000915	Identifier	fa		4000755	0					
ANR	4000916	Argument	p1		4000755	2					
ANR	4000917	Identifier	p1		4000755	0					
ANR	4000918	Argument	p2		4000755	3					
ANR	4000919	Identifier	p2		4000755	0					
ANR	4000920	Argument	p0		4000755	4					
ANR	4000921	Identifier	p0		4000755	0					
ANR	4000922	Argument	c1		4000755	5					
ANR	4000923	Identifier	c1		4000755	0					
ANR	4000924	Argument	c2		4000755	6					
ANR	4000925	Identifier	c2		4000755	0					
ANR	4000926	Argument	c0		4000755	7					
ANR	4000927	Identifier	c0		4000755	0					
ANR	4000928	ElseStatement	else		4000755	0					
ANR	4000929	ReturnStatement	"return fill_linear_color_triangle ( dev , fa , p2 , p0 , p1 , c2 , c0 , c1 ) ;"	569:8:18636:18702	4000755	0	True				
ANR	4000930	CallExpression	"fill_linear_color_triangle ( dev , fa , p2 , p0 , p1 , c2 , c0 , c1 )"		4000755	0					
ANR	4000931	Callee	fill_linear_color_triangle		4000755	0					
ANR	4000932	Identifier	fill_linear_color_triangle		4000755	0					
ANR	4000933	ArgumentList	dev		4000755	1					
ANR	4000934	Argument	dev		4000755	0					
ANR	4000935	Identifier	dev		4000755	0					
ANR	4000936	Argument	fa		4000755	1					
ANR	4000937	Identifier	fa		4000755	0					
ANR	4000938	Argument	p2		4000755	2					
ANR	4000939	Identifier	p2		4000755	0					
ANR	4000940	Argument	p0		4000755	3					
ANR	4000941	Identifier	p0		4000755	0					
ANR	4000942	Argument	p1		4000755	4					
ANR	4000943	Identifier	p1		4000755	0					
ANR	4000944	Argument	c2		4000755	5					
ANR	4000945	Identifier	c2		4000755	0					
ANR	4000946	Argument	c0		4000755	6					
ANR	4000947	Identifier	c0		4000755	0					
ANR	4000948	Argument	c1		4000755	7					
ANR	4000949	Identifier	c1		4000755	0					
ANR	4000950	ReturnType	int		4000755	1					
ANR	4000951	Identifier	gx_default_fill_linear_color_triangle		4000755	2					
ANR	4000952	ParameterList	"gx_device * dev , const gs_fill_attributes * fa , const gs_fixed_point * p0 , const gs_fixed_point * p1 , const gs_fixed_point * p2 , const frac31 * c0 , const frac31 * c1 , const frac31 * c2"		4000755	3					
ANR	4000953	Parameter	gx_device * dev	547:38:17882:17895	4000755	0	True				
ANR	4000954	ParameterType	gx_device *		4000755	0					
ANR	4000955	Identifier	dev		4000755	1					
ANR	4000956	Parameter	const gs_fill_attributes * fa	547:54:17898:17925	4000755	1	True				
ANR	4000957	ParameterType	const gs_fill_attributes *		4000755	0					
ANR	4000958	Identifier	fa		4000755	1					
ANR	4000959	Parameter	const gs_fixed_point * p0	548:8:17936:17959	4000755	2	True				
ANR	4000960	ParameterType	const gs_fixed_point *		4000755	0					
ANR	4000961	Identifier	p0		4000755	1					
ANR	4000962	Parameter	const gs_fixed_point * p1	548:34:17962:17985	4000755	3	True				
ANR	4000963	ParameterType	const gs_fixed_point *		4000755	0					
ANR	4000964	Identifier	p1		4000755	1					
ANR	4000965	Parameter	const gs_fixed_point * p2	549:8:17996:18019	4000755	4	True				
ANR	4000966	ParameterType	const gs_fixed_point *		4000755	0					
ANR	4000967	Identifier	p2		4000755	1					
ANR	4000968	Parameter	const frac31 * c0	550:8:18030:18045	4000755	5	True				
ANR	4000969	ParameterType	const frac31 *		4000755	0					
ANR	4000970	Identifier	c0		4000755	1					
ANR	4000971	Parameter	const frac31 * c1	550:26:18048:18063	4000755	6	True				
ANR	4000972	ParameterType	const frac31 *		4000755	0					
ANR	4000973	Identifier	c1		4000755	1					
ANR	4000974	Parameter	const frac31 * c2	550:44:18066:18081	4000755	7	True				
ANR	4000975	ParameterType	const frac31 *		4000755	0					
ANR	4000976	Identifier	c2		4000755	1					
ANR	4000977	CFGEntryNode	ENTRY		4000755		True				
ANR	4000978	CFGExitNode	EXIT		4000755		True				
ANR	4000979	Symbol	p0		4000755						
ANR	4000980	Symbol	p1		4000755						
ANR	4000981	Symbol	p2		4000755						
ANR	4000982	Symbol	p2 -> x		4000755						
ANR	4000983	Symbol	c		4000755						
ANR	4000984	Symbol	* p1		4000755						
ANR	4000985	Symbol	* p0		4000755						
ANR	4000986	Symbol	p1 -> y		4000755						
ANR	4000987	Symbol	p1 -> x		4000755						
ANR	4000988	Symbol	* p2		4000755						
ANR	4000989	Symbol	p2 -> y		4000755						
ANR	4000990	Symbol	c0		4000755						
ANR	4000991	Symbol	c1		4000755						
ANR	4000992	Symbol	c2		4000755						
ANR	4000993	Symbol	p0 -> y		4000755						
ANR	4000994	Symbol	p		4000755						
ANR	4000995	Symbol	p0 -> x		4000755						
ANR	4000996	Symbol	dev		4000755						
ANR	4000997	Symbol	fill_linear_color_triangle		4000755						
ANR	4000998	Symbol	fa		4000755						
ANR	4000999	Symbol	dx1		4000755						
ANR	4001000	Symbol	dy2		4000755						
ANR	4001001	Symbol	dy1		4000755						
ANR	4001002	Symbol	dx2		4000755						
ANR	4001003	Function	gx_default_fill_parallelogram	575:0:18916:22699							
ANR	4001004	FunctionDef	"gx_default_fill_parallelogram (gx_device * dev , fixed px , fixed py , fixed ax , fixed ay , fixed bx , fixed by , const gx_device_color * pdevc , gs_logical_operation_t lop)"		4001003	0					
ANR	4001005	CompoundStatement		579:0:19121:22699	4001003	0					
ANR	4001006	IdentifierDeclStatement	fixed t ;	580:4:19127:19134	4001003	0	True				
ANR	4001007	IdentifierDecl	t		4001003	0					
ANR	4001008	IdentifierDeclType	fixed		4001003	0					
ANR	4001009	Identifier	t		4001003	1					
ANR	4001010	IdentifierDeclStatement	"fixed qx , qy , ym ;"	581:4:19140:19156	4001003	1	True				
ANR	4001011	IdentifierDecl	qx		4001003	0					
ANR	4001012	IdentifierDeclType	fixed		4001003	0					
ANR	4001013	Identifier	qx		4001003	1					
ANR	4001014	IdentifierDecl	qy		4001003	1					
ANR	4001015	IdentifierDeclType	fixed		4001003	0					
ANR	4001016	Identifier	qy		4001003	1					
ANR	4001017	IdentifierDecl	ym		4001003	2					
ANR	4001018	IdentifierDeclType	fixed		4001003	0					
ANR	4001019	Identifier	ym		4001003	1					
ANR	4001020	ExpressionStatement	dev_proc_fill_trapezoid ( ( * fill_trapezoid ) )	582:4:19162:19204	4001003	2	True				
ANR	4001021	CallExpression	dev_proc_fill_trapezoid ( ( * fill_trapezoid ) )		4001003	0					
ANR	4001022	Callee	dev_proc_fill_trapezoid		4001003	0					
ANR	4001023	Identifier	dev_proc_fill_trapezoid		4001003	0					
ANR	4001024	ArgumentList	* fill_trapezoid		4001003	1					
ANR	4001025	Argument	* fill_trapezoid		4001003	0					
ANR	4001026	UnaryOperationExpression	* fill_trapezoid		4001003	0					
ANR	4001027	UnaryOperator	*		4001003	0					
ANR	4001028	Identifier	fill_trapezoid		4001003	1					
ANR	4001029	IdentifierDeclStatement	"gs_fixed_edge left , right ;"	583:4:19210:19235	4001003	3	True				
ANR	4001030	IdentifierDecl	left		4001003	0					
ANR	4001031	IdentifierDeclType	gs_fixed_edge		4001003	0					
ANR	4001032	Identifier	left		4001003	1					
ANR	4001033	IdentifierDecl	right		4001003	1					
ANR	4001034	IdentifierDeclType	gs_fixed_edge		4001003	0					
ANR	4001035	Identifier	right		4001003	1					
ANR	4001036	IdentifierDeclStatement	int code ;	584:4:19241:19249	4001003	4	True				
ANR	4001037	IdentifierDecl	code		4001003	0					
ANR	4001038	IdentifierDeclType	int		4001003	0					
ANR	4001039	Identifier	code		4001003	1					
ANR	4001040	IfStatement	"if ( PARALLELOGRAM_IS_RECT ( ax , ay , bx , by ) )"		4001003	5					
ANR	4001041	Condition	"PARALLELOGRAM_IS_RECT ( ax , ay , bx , by )"	587:8:19312:19348	4001003	0	True				
ANR	4001042	CallExpression	"PARALLELOGRAM_IS_RECT ( ax , ay , bx , by )"		4001003	0					
ANR	4001043	Callee	PARALLELOGRAM_IS_RECT		4001003	0					
ANR	4001044	Identifier	PARALLELOGRAM_IS_RECT		4001003	0					
ANR	4001045	ArgumentList	ax		4001003	1					
ANR	4001046	Argument	ax		4001003	0					
ANR	4001047	Identifier	ax		4001003	0					
ANR	4001048	Argument	ay		4001003	1					
ANR	4001049	Identifier	ay		4001003	0					
ANR	4001050	Argument	bx		4001003	2					
ANR	4001051	Identifier	bx		4001003	0					
ANR	4001052	Argument	by		4001003	3					
ANR	4001053	Identifier	by		4001003	0					
ANR	4001054	CompoundStatement		10:8:239:252	4001003	1					
ANR	4001055	IdentifierDeclStatement	gs_int_rect r ;	588:8:19361:19374	4001003	0	True				
ANR	4001056	IdentifierDecl	r		4001003	0					
ANR	4001057	IdentifierDeclType	gs_int_rect		4001003	0					
ANR	4001058	Identifier	r		4001003	1					
ANR	4001059	ExpressionStatement	"INT_RECT_FROM_PARALLELOGRAM ( & r , px , py , ax , ay , bx , by )"	590:8:19385:19440	4001003	1	True				
ANR	4001060	CallExpression	"INT_RECT_FROM_PARALLELOGRAM ( & r , px , py , ax , ay , bx , by )"		4001003	0					
ANR	4001061	Callee	INT_RECT_FROM_PARALLELOGRAM		4001003	0					
ANR	4001062	Identifier	INT_RECT_FROM_PARALLELOGRAM		4001003	0					
ANR	4001063	ArgumentList	& r		4001003	1					
ANR	4001064	Argument	& r		4001003	0					
ANR	4001065	UnaryOperationExpression	& r		4001003	0					
ANR	4001066	UnaryOperator	&		4001003	0					
ANR	4001067	Identifier	r		4001003	1					
ANR	4001068	Argument	px		4001003	1					
ANR	4001069	Identifier	px		4001003	0					
ANR	4001070	Argument	py		4001003	2					
ANR	4001071	Identifier	py		4001003	0					
ANR	4001072	Argument	ax		4001003	3					
ANR	4001073	Identifier	ax		4001003	0					
ANR	4001074	Argument	ay		4001003	4					
ANR	4001075	Identifier	ay		4001003	0					
ANR	4001076	Argument	bx		4001003	5					
ANR	4001077	Identifier	bx		4001003	0					
ANR	4001078	Argument	by		4001003	6					
ANR	4001079	Identifier	by		4001003	0					
ANR	4001080	ReturnStatement	"return gx_fill_rectangle_device_rop ( r . p . x , r . p . y , r . q . x - r . p . x , r . q . y - r . p . y , pdevc , dev , lop ) ;"	591:8:19450:19590	4001003	2	True				
ANR	4001081	CallExpression	"gx_fill_rectangle_device_rop ( r . p . x , r . p . y , r . q . x - r . p . x , r . q . y - r . p . y , pdevc , dev , lop )"		4001003	0					
ANR	4001082	Callee	gx_fill_rectangle_device_rop		4001003	0					
ANR	4001083	Identifier	gx_fill_rectangle_device_rop		4001003	0					
ANR	4001084	ArgumentList	r . p . x		4001003	1					
ANR	4001085	Argument	r . p . x		4001003	0					
ANR	4001086	MemberAccess	r . p . x		4001003	0					
ANR	4001087	MemberAccess	r . p		4001003	0					
ANR	4001088	Identifier	r		4001003	0					
ANR	4001089	Identifier	p		4001003	1					
ANR	4001090	Identifier	x		4001003	1					
ANR	4001091	Argument	r . p . y		4001003	1					
ANR	4001092	MemberAccess	r . p . y		4001003	0					
ANR	4001093	MemberAccess	r . p		4001003	0					
ANR	4001094	Identifier	r		4001003	0					
ANR	4001095	Identifier	p		4001003	1					
ANR	4001096	Identifier	y		4001003	1					
ANR	4001097	Argument	r . q . x - r . p . x		4001003	2					
ANR	4001098	AdditiveExpression	r . q . x - r . p . x		4001003	0		-			
ANR	4001099	MemberAccess	r . q . x		4001003	0					
ANR	4001100	MemberAccess	r . q		4001003	0					
ANR	4001101	Identifier	r		4001003	0					
ANR	4001102	Identifier	q		4001003	1					
ANR	4001103	Identifier	x		4001003	1					
ANR	4001104	MemberAccess	r . p . x		4001003	1					
ANR	4001105	MemberAccess	r . p		4001003	0					
ANR	4001106	Identifier	r		4001003	0					
ANR	4001107	Identifier	p		4001003	1					
ANR	4001108	Identifier	x		4001003	1					
ANR	4001109	Argument	r . q . y - r . p . y		4001003	3					
ANR	4001110	AdditiveExpression	r . q . y - r . p . y		4001003	0		-			
ANR	4001111	MemberAccess	r . q . y		4001003	0					
ANR	4001112	MemberAccess	r . q		4001003	0					
ANR	4001113	Identifier	r		4001003	0					
ANR	4001114	Identifier	q		4001003	1					
ANR	4001115	Identifier	y		4001003	1					
ANR	4001116	MemberAccess	r . p . y		4001003	1					
ANR	4001117	MemberAccess	r . p		4001003	0					
ANR	4001118	Identifier	r		4001003	0					
ANR	4001119	Identifier	p		4001003	1					
ANR	4001120	Identifier	y		4001003	1					
ANR	4001121	Argument	pdevc		4001003	4					
ANR	4001122	Identifier	pdevc		4001003	0					
ANR	4001123	Argument	dev		4001003	5					
ANR	4001124	Identifier	dev		4001003	0					
ANR	4001125	Argument	lop		4001003	6					
ANR	4001126	Identifier	lop		4001003	0					
ANR	4001127	IfStatement	if ( ay < 0 )		4001003	6					
ANR	4001128	Condition	ay < 0	600:8:19850:19855	4001003	0	True				
ANR	4001129	RelationalExpression	ay < 0		4001003	0		<			
ANR	4001130	Identifier	ay		4001003	0					
ANR	4001131	PrimaryExpression	0		4001003	1					
ANR	4001132	ExpressionStatement	"px += ax , py += ay , ax = - ax , ay = - ay"	601:8:19866:19904	4001003	1	True				
ANR	4001133	Expression	"px += ax , py += ay , ax = - ax , ay = - ay"		4001003	0					
ANR	4001134	AssignmentExpression	px += ax		4001003	0		+=			
ANR	4001135	Identifier	px		4001003	0					
ANR	4001136	Identifier	ax		4001003	1					
ANR	4001137	Expression	"py += ay , ax = - ax , ay = - ay"		4001003	1					
ANR	4001138	AssignmentExpression	py += ay		4001003	0		+=			
ANR	4001139	Identifier	py		4001003	0					
ANR	4001140	Identifier	ay		4001003	1					
ANR	4001141	Expression	"ax = - ax , ay = - ay"		4001003	1					
ANR	4001142	AssignmentExpression	ax = - ax		4001003	0		=			
ANR	4001143	Identifier	ax		4001003	0					
ANR	4001144	UnaryOperationExpression	- ax		4001003	1					
ANR	4001145	UnaryOperator	-		4001003	0					
ANR	4001146	Identifier	ax		4001003	1					
ANR	4001147	AssignmentExpression	ay = - ay		4001003	1		=			
ANR	4001148	Identifier	ay		4001003	0					
ANR	4001149	UnaryOperationExpression	- ay		4001003	1					
ANR	4001150	UnaryOperator	-		4001003	0					
ANR	4001151	Identifier	ay		4001003	1					
ANR	4001152	IfStatement	if ( by < 0 )		4001003	7					
ANR	4001153	Condition	by < 0	602:8:19914:19919	4001003	0	True				
ANR	4001154	RelationalExpression	by < 0		4001003	0		<			
ANR	4001155	Identifier	by		4001003	0					
ANR	4001156	PrimaryExpression	0		4001003	1					
ANR	4001157	ExpressionStatement	"px += bx , py += by , bx = - bx , by = - by"	603:8:19930:19968	4001003	1	True				
ANR	4001158	Expression	"px += bx , py += by , bx = - bx , by = - by"		4001003	0					
ANR	4001159	AssignmentExpression	px += bx		4001003	0		+=			
ANR	4001160	Identifier	px		4001003	0					
ANR	4001161	Identifier	bx		4001003	1					
ANR	4001162	Expression	"py += by , bx = - bx , by = - by"		4001003	1					
ANR	4001163	AssignmentExpression	py += by		4001003	0		+=			
ANR	4001164	Identifier	py		4001003	0					
ANR	4001165	Identifier	by		4001003	1					
ANR	4001166	Expression	"bx = - bx , by = - by"		4001003	1					
ANR	4001167	AssignmentExpression	bx = - bx		4001003	0		=			
ANR	4001168	Identifier	bx		4001003	0					
ANR	4001169	UnaryOperationExpression	- bx		4001003	1					
ANR	4001170	UnaryOperator	-		4001003	0					
ANR	4001171	Identifier	bx		4001003	1					
ANR	4001172	AssignmentExpression	by = - by		4001003	1		=			
ANR	4001173	Identifier	by		4001003	0					
ANR	4001174	UnaryOperationExpression	- by		4001003	1					
ANR	4001175	UnaryOperator	-		4001003	0					
ANR	4001176	Identifier	by		4001003	1					
ANR	4001177	ExpressionStatement	qx = px + ax + bx	604:4:19974:19991	4001003	8	True				
ANR	4001178	AssignmentExpression	qx = px + ax + bx		4001003	0		=			
ANR	4001179	Identifier	qx		4001003	0					
ANR	4001180	AdditiveExpression	px + ax + bx		4001003	1		+			
ANR	4001181	Identifier	px		4001003	0					
ANR	4001182	AdditiveExpression	ax + bx		4001003	1		+			
ANR	4001183	Identifier	ax		4001003	0					
ANR	4001184	Identifier	bx		4001003	1					
ANR	4001185	IfStatement	if ( ( ax ^ bx ) < 0 )		4001003	9					
ANR	4001186	Condition	( ax ^ bx ) < 0	605:8:20001:20013	4001003	0	True				
ANR	4001187	RelationalExpression	( ax ^ bx ) < 0		4001003	0		<			
ANR	4001188	ExclusiveOrExpression	ax ^ bx		4001003	0		^			
ANR	4001189	Identifier	ax		4001003	0					
ANR	4001190	Identifier	bx		4001003	1					
ANR	4001191	PrimaryExpression	0		4001003	1					
ANR	4001192	CompoundStatement		27:23:894:894	4001003	1					
ANR	4001193	IfStatement	if ( ax > bx )		4001003	0					
ANR	4001194	Condition	ax > bx	606:12:20083:20089	4001003	0	True				
ANR	4001195	RelationalExpression	ax > bx		4001003	0		>			
ANR	4001196	Identifier	ax		4001003	0					
ANR	4001197	Identifier	bx		4001003	1					
ANR	4001198	ExpressionStatement	"SWAP ( ax , bx , t ) , SWAP ( ay , by , t )"	607:12:20104:20136	4001003	1	True				
ANR	4001199	Expression	"SWAP ( ax , bx , t ) , SWAP ( ay , by , t )"		4001003	0					
ANR	4001200	CallExpression	"SWAP ( ax , bx , t )"		4001003	0					
ANR	4001201	Callee	SWAP		4001003	0					
ANR	4001202	Identifier	SWAP		4001003	0					
ANR	4001203	ArgumentList	ax		4001003	1					
ANR	4001204	Argument	ax		4001003	0					
ANR	4001205	Identifier	ax		4001003	0					
ANR	4001206	Argument	bx		4001003	1					
ANR	4001207	Identifier	bx		4001003	0					
ANR	4001208	Argument	t		4001003	2					
ANR	4001209	Identifier	t		4001003	0					
ANR	4001210	CallExpression	"SWAP ( ay , by , t )"		4001003	1					
ANR	4001211	Callee	SWAP		4001003	0					
ANR	4001212	Identifier	SWAP		4001003	0					
ANR	4001213	ArgumentList	ay		4001003	1					
ANR	4001214	Argument	ay		4001003	0					
ANR	4001215	Identifier	ay		4001003	0					
ANR	4001216	Argument	by		4001003	1					
ANR	4001217	Identifier	by		4001003	0					
ANR	4001218	Argument	t		4001003	2					
ANR	4001219	Identifier	t		4001003	0					
ANR	4001220	ElseStatement	else		4001003	0					
ANR	4001221	CompoundStatement		30:11:1027:1027	4001003	0					
ANR	4001222	IfStatement	if ( ( double ) ay * bx < ( double ) by * ax )		4001003	0					
ANR	4001223	Condition	( double ) ay * bx < ( double ) by * ax	617:12:20715:20747	4001003	0	True				
ANR	4001224	RelationalExpression	( double ) ay * bx < ( double ) by * ax		4001003	0		<			
ANR	4001225	MultiplicativeExpression	( double ) ay * bx		4001003	0		*			
ANR	4001226	CastExpression	( double ) ay		4001003	0					
ANR	4001227	CastTarget	double		4001003	0					
ANR	4001228	Identifier	ay		4001003	1					
ANR	4001229	Identifier	bx		4001003	1					
ANR	4001230	MultiplicativeExpression	( double ) by * ax		4001003	1		*			
ANR	4001231	CastExpression	( double ) by		4001003	0					
ANR	4001232	CastTarget	double		4001003	0					
ANR	4001233	Identifier	by		4001003	1					
ANR	4001234	Identifier	ax		4001003	1					
ANR	4001235	ExpressionStatement	"SWAP ( ax , bx , t ) , SWAP ( ay , by , t )"	618:12:20762:20794	4001003	1	True				
ANR	4001236	Expression	"SWAP ( ax , bx , t ) , SWAP ( ay , by , t )"		4001003	0					
ANR	4001237	CallExpression	"SWAP ( ax , bx , t )"		4001003	0					
ANR	4001238	Callee	SWAP		4001003	0					
ANR	4001239	Identifier	SWAP		4001003	0					
ANR	4001240	ArgumentList	ax		4001003	1					
ANR	4001241	Argument	ax		4001003	0					
ANR	4001242	Identifier	ax		4001003	0					
ANR	4001243	Argument	bx		4001003	1					
ANR	4001244	Identifier	bx		4001003	0					
ANR	4001245	Argument	t		4001003	2					
ANR	4001246	Identifier	t		4001003	0					
ANR	4001247	CallExpression	"SWAP ( ay , by , t )"		4001003	1					
ANR	4001248	Callee	SWAP		4001003	0					
ANR	4001249	Identifier	SWAP		4001003	0					
ANR	4001250	ArgumentList	ay		4001003	1					
ANR	4001251	Argument	ay		4001003	0					
ANR	4001252	Identifier	ay		4001003	0					
ANR	4001253	Argument	by		4001003	1					
ANR	4001254	Identifier	by		4001003	0					
ANR	4001255	Argument	t		4001003	2					
ANR	4001256	Identifier	t		4001003	0					
ANR	4001257	ExpressionStatement	"fill_trapezoid = dev_proc ( dev , fill_trapezoid )"	620:4:20806:20852	4001003	10	True				
ANR	4001258	AssignmentExpression	"fill_trapezoid = dev_proc ( dev , fill_trapezoid )"		4001003	0		=			
ANR	4001259	Identifier	fill_trapezoid		4001003	0					
ANR	4001260	CallExpression	"dev_proc ( dev , fill_trapezoid )"		4001003	1					
ANR	4001261	Callee	dev_proc		4001003	0					
ANR	4001262	Identifier	dev_proc		4001003	0					
ANR	4001263	ArgumentList	dev		4001003	1					
ANR	4001264	Argument	dev		4001003	0					
ANR	4001265	Identifier	dev		4001003	0					
ANR	4001266	Argument	fill_trapezoid		4001003	1					
ANR	4001267	Identifier	fill_trapezoid		4001003	0					
ANR	4001268	ExpressionStatement	qy = py + ay + by	621:4:20858:20875	4001003	11	True				
ANR	4001269	AssignmentExpression	qy = py + ay + by		4001003	0		=			
ANR	4001270	Identifier	qy		4001003	0					
ANR	4001271	AdditiveExpression	py + ay + by		4001003	1		+			
ANR	4001272	Identifier	py		4001003	0					
ANR	4001273	AdditiveExpression	ay + by		4001003	1		+			
ANR	4001274	Identifier	ay		4001003	0					
ANR	4001275	Identifier	by		4001003	1					
ANR	4001276	ExpressionStatement	left . start . x = right . start . x = px	622:4:20881:20914	4001003	12	True				
ANR	4001277	AssignmentExpression	left . start . x = right . start . x = px		4001003	0		=			
ANR	4001278	MemberAccess	left . start . x		4001003	0					
ANR	4001279	MemberAccess	left . start		4001003	0					
ANR	4001280	Identifier	left		4001003	0					
ANR	4001281	Identifier	start		4001003	1					
ANR	4001282	Identifier	x		4001003	1					
ANR	4001283	AssignmentExpression	right . start . x = px		4001003	1		=			
ANR	4001284	MemberAccess	right . start . x		4001003	0					
ANR	4001285	MemberAccess	right . start		4001003	0					
ANR	4001286	Identifier	right		4001003	0					
ANR	4001287	Identifier	start		4001003	1					
ANR	4001288	Identifier	x		4001003	1					
ANR	4001289	Identifier	px		4001003	1					
ANR	4001290	ExpressionStatement	left . start . y = right . start . y = py	623:4:20920:20953	4001003	13	True				
ANR	4001291	AssignmentExpression	left . start . y = right . start . y = py		4001003	0		=			
ANR	4001292	MemberAccess	left . start . y		4001003	0					
ANR	4001293	MemberAccess	left . start		4001003	0					
ANR	4001294	Identifier	left		4001003	0					
ANR	4001295	Identifier	start		4001003	1					
ANR	4001296	Identifier	y		4001003	1					
ANR	4001297	AssignmentExpression	right . start . y = py		4001003	1		=			
ANR	4001298	MemberAccess	right . start . y		4001003	0					
ANR	4001299	MemberAccess	right . start		4001003	0					
ANR	4001300	Identifier	right		4001003	0					
ANR	4001301	Identifier	start		4001003	1					
ANR	4001302	Identifier	y		4001003	1					
ANR	4001303	Identifier	py		4001003	1					
ANR	4001304	ExpressionStatement	left . end . x = px + ax	624:4:20959:20979	4001003	14	True				
ANR	4001305	AssignmentExpression	left . end . x = px + ax		4001003	0		=			
ANR	4001306	MemberAccess	left . end . x		4001003	0					
ANR	4001307	MemberAccess	left . end		4001003	0					
ANR	4001308	Identifier	left		4001003	0					
ANR	4001309	Identifier	end		4001003	1					
ANR	4001310	Identifier	x		4001003	1					
ANR	4001311	AdditiveExpression	px + ax		4001003	1		+			
ANR	4001312	Identifier	px		4001003	0					
ANR	4001313	Identifier	ax		4001003	1					
ANR	4001314	ExpressionStatement	left . end . y = py + ay	625:4:20985:21005	4001003	15	True				
ANR	4001315	AssignmentExpression	left . end . y = py + ay		4001003	0		=			
ANR	4001316	MemberAccess	left . end . y		4001003	0					
ANR	4001317	MemberAccess	left . end		4001003	0					
ANR	4001318	Identifier	left		4001003	0					
ANR	4001319	Identifier	end		4001003	1					
ANR	4001320	Identifier	y		4001003	1					
ANR	4001321	AdditiveExpression	py + ay		4001003	1		+			
ANR	4001322	Identifier	py		4001003	0					
ANR	4001323	Identifier	ay		4001003	1					
ANR	4001324	ExpressionStatement	right . end . x = px + bx	626:4:21011:21032	4001003	16	True				
ANR	4001325	AssignmentExpression	right . end . x = px + bx		4001003	0		=			
ANR	4001326	MemberAccess	right . end . x		4001003	0					
ANR	4001327	MemberAccess	right . end		4001003	0					
ANR	4001328	Identifier	right		4001003	0					
ANR	4001329	Identifier	end		4001003	1					
ANR	4001330	Identifier	x		4001003	1					
ANR	4001331	AdditiveExpression	px + bx		4001003	1		+			
ANR	4001332	Identifier	px		4001003	0					
ANR	4001333	Identifier	bx		4001003	1					
ANR	4001334	ExpressionStatement	right . end . y = py + by	627:4:21038:21059	4001003	17	True				
ANR	4001335	AssignmentExpression	right . end . y = py + by		4001003	0		=			
ANR	4001336	MemberAccess	right . end . y		4001003	0					
ANR	4001337	MemberAccess	right . end		4001003	0					
ANR	4001338	Identifier	right		4001003	0					
ANR	4001339	Identifier	end		4001003	1					
ANR	4001340	Identifier	y		4001003	1					
ANR	4001341	AdditiveExpression	py + by		4001003	1		+			
ANR	4001342	Identifier	py		4001003	0					
ANR	4001343	Identifier	by		4001003	1					
ANR	4001344	Statement	define	628:1:21062:21067	4001003	18	True				
ANR	4001345	Statement	ROUNDED_SAME	628:8:21069:21080	4001003	19	True				
ANR	4001346	Statement	(	628:20:21081:21081	4001003	20	True				
ANR	4001347	Statement	p1	628:21:21082:21083	4001003	21	True				
ANR	4001348	Statement	","	628:23:21084:21084	4001003	22	True				
ANR	4001349	Statement	p2	628:25:21086:21087	4001003	23	True				
ANR	4001350	Statement	)	628:27:21088:21088	4001003	24	True				
ANR	4001351	Statement	(	629:2:21093:21093	4001003	25	True				
ANR	4001352	Statement	fixed_pixround	629:3:21094:21107	4001003	26	True				
ANR	4001353	Statement	(	629:17:21108:21108	4001003	27	True				
ANR	4001354	Statement	p1	629:18:21109:21110	4001003	28	True				
ANR	4001355	Statement	)	629:20:21111:21111	4001003	29	True				
ANR	4001356	Statement	==	629:22:21113:21114	4001003	30	True				
ANR	4001357	Statement	fixed_pixround	629:25:21116:21129	4001003	31	True				
ANR	4001358	Statement	(	629:39:21130:21130	4001003	32	True				
ANR	4001359	Statement	p2	629:40:21131:21132	4001003	33	True				
ANR	4001360	Statement	)	629:42:21133:21133	4001003	34	True				
ANR	4001361	Statement	)	629:43:21134:21134	4001003	35	True				
ANR	4001362	IfStatement	if ( ay < by )		4001003	36					
ANR	4001363	Condition	ay < by	630:8:21144:21150	4001003	0	True				
ANR	4001364	RelationalExpression	ay < by		4001003	0		<			
ANR	4001365	Identifier	ay		4001003	0					
ANR	4001366	Identifier	by		4001003	1					
ANR	4001367	CompoundStatement		52:17:2031:2031	4001003	1					
ANR	4001368	IfStatement	"if ( ! ROUNDED_SAME ( py , left . end . y ) )"		4001003	0					
ANR	4001369	Condition	"! ROUNDED_SAME ( py , left . end . y )"	631:12:21167:21195	4001003	0	True				
ANR	4001370	UnaryOperationExpression	"! ROUNDED_SAME ( py , left . end . y )"		4001003	0					
ANR	4001371	UnaryOperator	!		4001003	0					
ANR	4001372	CallExpression	"ROUNDED_SAME ( py , left . end . y )"		4001003	1					
ANR	4001373	Callee	ROUNDED_SAME		4001003	0					
ANR	4001374	Identifier	ROUNDED_SAME		4001003	0					
ANR	4001375	ArgumentList	py		4001003	1					
ANR	4001376	Argument	py		4001003	0					
ANR	4001377	Identifier	py		4001003	0					
ANR	4001378	Argument	left . end . y		4001003	1					
ANR	4001379	MemberAccess	left . end . y		4001003	0					
ANR	4001380	MemberAccess	left . end		4001003	0					
ANR	4001381	Identifier	left		4001003	0					
ANR	4001382	Identifier	end		4001003	1					
ANR	4001383	Identifier	y		4001003	1					
ANR	4001384	CompoundStatement		53:43:2076:2076	4001003	1					
ANR	4001385	ExpressionStatement	"code = ( * fill_trapezoid ) ( dev , & left , & right , py , left . end . y , false , pdevc , lop )"	632:12:21212:21330	4001003	0	True				
ANR	4001386	AssignmentExpression	"code = ( * fill_trapezoid ) ( dev , & left , & right , py , left . end . y , false , pdevc , lop )"		4001003	0		=			
ANR	4001387	Identifier	code		4001003	0					
ANR	4001388	CallExpression	"( * fill_trapezoid ) ( dev , & left , & right , py , left . end . y , false , pdevc , lop )"		4001003	1					
ANR	4001389	Callee	* fill_trapezoid		4001003	0					
ANR	4001390	UnaryOperationExpression	* fill_trapezoid		4001003	0					
ANR	4001391	UnaryOperator	*		4001003	0					
ANR	4001392	Identifier	fill_trapezoid		4001003	1					
ANR	4001393	ArgumentList	dev		4001003	1					
ANR	4001394	Argument	dev		4001003	0					
ANR	4001395	Identifier	dev		4001003	0					
ANR	4001396	Argument	& left		4001003	1					
ANR	4001397	UnaryOperationExpression	& left		4001003	0					
ANR	4001398	UnaryOperator	&		4001003	0					
ANR	4001399	Identifier	left		4001003	1					
ANR	4001400	Argument	& right		4001003	2					
ANR	4001401	UnaryOperationExpression	& right		4001003	0					
ANR	4001402	UnaryOperator	&		4001003	0					
ANR	4001403	Identifier	right		4001003	1					
ANR	4001404	Argument	py		4001003	3					
ANR	4001405	Identifier	py		4001003	0					
ANR	4001406	Argument	left . end . y		4001003	4					
ANR	4001407	MemberAccess	left . end . y		4001003	0					
ANR	4001408	MemberAccess	left . end		4001003	0					
ANR	4001409	Identifier	left		4001003	0					
ANR	4001410	Identifier	end		4001003	1					
ANR	4001411	Identifier	y		4001003	1					
ANR	4001412	Argument	false		4001003	5					
ANR	4001413	Identifier	false		4001003	0					
ANR	4001414	Argument	pdevc		4001003	6					
ANR	4001415	Identifier	pdevc		4001003	0					
ANR	4001416	Argument	lop		4001003	7					
ANR	4001417	Identifier	lop		4001003	0					
ANR	4001418	IfStatement	if ( code < 0 )		4001003	1					
ANR	4001419	Condition	code < 0	634:16:21348:21355	4001003	0	True				
ANR	4001420	RelationalExpression	code < 0		4001003	0		<			
ANR	4001421	Identifier	code		4001003	0					
ANR	4001422	PrimaryExpression	0		4001003	1					
ANR	4001423	ReturnStatement	return code ;	635:16:21374:21385	4001003	1	True				
ANR	4001424	Identifier	code		4001003	0					
ANR	4001425	ExpressionStatement	left . start = left . end	637:8:21405:21426	4001003	1	True				
ANR	4001426	AssignmentExpression	left . start = left . end		4001003	0		=			
ANR	4001427	MemberAccess	left . start		4001003	0					
ANR	4001428	Identifier	left		4001003	0					
ANR	4001429	Identifier	start		4001003	1					
ANR	4001430	MemberAccess	left . end		4001003	1					
ANR	4001431	Identifier	left		4001003	0					
ANR	4001432	Identifier	end		4001003	1					
ANR	4001433	ExpressionStatement	"left . end . x = qx , left . end . y = qy"	638:8:21436:21468	4001003	2	True				
ANR	4001434	Expression	"left . end . x = qx , left . end . y = qy"		4001003	0					
ANR	4001435	AssignmentExpression	left . end . x = qx		4001003	0		=			
ANR	4001436	MemberAccess	left . end . x		4001003	0					
ANR	4001437	MemberAccess	left . end		4001003	0					
ANR	4001438	Identifier	left		4001003	0					
ANR	4001439	Identifier	end		4001003	1					
ANR	4001440	Identifier	x		4001003	1					
ANR	4001441	Identifier	qx		4001003	1					
ANR	4001442	AssignmentExpression	left . end . y = qy		4001003	1		=			
ANR	4001443	MemberAccess	left . end . y		4001003	0					
ANR	4001444	MemberAccess	left . end		4001003	0					
ANR	4001445	Identifier	left		4001003	0					
ANR	4001446	Identifier	end		4001003	1					
ANR	4001447	Identifier	y		4001003	1					
ANR	4001448	Identifier	qy		4001003	1					
ANR	4001449	ExpressionStatement	ym = right . end . y	639:8:21478:21494	4001003	3	True				
ANR	4001450	AssignmentExpression	ym = right . end . y		4001003	0		=			
ANR	4001451	Identifier	ym		4001003	0					
ANR	4001452	MemberAccess	right . end . y		4001003	1					
ANR	4001453	MemberAccess	right . end		4001003	0					
ANR	4001454	Identifier	right		4001003	0					
ANR	4001455	Identifier	end		4001003	1					
ANR	4001456	Identifier	y		4001003	1					
ANR	4001457	IfStatement	"if ( ! ROUNDED_SAME ( left . start . y , ym ) )"		4001003	4					
ANR	4001458	Condition	"! ROUNDED_SAME ( left . start . y , ym )"	640:12:21508:21538	4001003	0	True				
ANR	4001459	UnaryOperationExpression	"! ROUNDED_SAME ( left . start . y , ym )"		4001003	0					
ANR	4001460	UnaryOperator	!		4001003	0					
ANR	4001461	CallExpression	"ROUNDED_SAME ( left . start . y , ym )"		4001003	1					
ANR	4001462	Callee	ROUNDED_SAME		4001003	0					
ANR	4001463	Identifier	ROUNDED_SAME		4001003	0					
ANR	4001464	ArgumentList	left . start . y		4001003	1					
ANR	4001465	Argument	left . start . y		4001003	0					
ANR	4001466	MemberAccess	left . start . y		4001003	0					
ANR	4001467	MemberAccess	left . start		4001003	0					
ANR	4001468	Identifier	left		4001003	0					
ANR	4001469	Identifier	start		4001003	1					
ANR	4001470	Identifier	y		4001003	1					
ANR	4001471	Argument	ym		4001003	1					
ANR	4001472	Identifier	ym		4001003	0					
ANR	4001473	CompoundStatement		62:45:2419:2419	4001003	1					
ANR	4001474	ExpressionStatement	"code = ( * fill_trapezoid ) ( dev , & left , & right , left . start . y , ym , false , pdevc , lop )"	641:12:21555:21675	4001003	0	True				
ANR	4001475	AssignmentExpression	"code = ( * fill_trapezoid ) ( dev , & left , & right , left . start . y , ym , false , pdevc , lop )"		4001003	0		=			
ANR	4001476	Identifier	code		4001003	0					
ANR	4001477	CallExpression	"( * fill_trapezoid ) ( dev , & left , & right , left . start . y , ym , false , pdevc , lop )"		4001003	1					
ANR	4001478	Callee	* fill_trapezoid		4001003	0					
ANR	4001479	UnaryOperationExpression	* fill_trapezoid		4001003	0					
ANR	4001480	UnaryOperator	*		4001003	0					
ANR	4001481	Identifier	fill_trapezoid		4001003	1					
ANR	4001482	ArgumentList	dev		4001003	1					
ANR	4001483	Argument	dev		4001003	0					
ANR	4001484	Identifier	dev		4001003	0					
ANR	4001485	Argument	& left		4001003	1					
ANR	4001486	UnaryOperationExpression	& left		4001003	0					
ANR	4001487	UnaryOperator	&		4001003	0					
ANR	4001488	Identifier	left		4001003	1					
ANR	4001489	Argument	& right		4001003	2					
ANR	4001490	UnaryOperationExpression	& right		4001003	0					
ANR	4001491	UnaryOperator	&		4001003	0					
ANR	4001492	Identifier	right		4001003	1					
ANR	4001493	Argument	left . start . y		4001003	3					
ANR	4001494	MemberAccess	left . start . y		4001003	0					
ANR	4001495	MemberAccess	left . start		4001003	0					
ANR	4001496	Identifier	left		4001003	0					
ANR	4001497	Identifier	start		4001003	1					
ANR	4001498	Identifier	y		4001003	1					
ANR	4001499	Argument	ym		4001003	4					
ANR	4001500	Identifier	ym		4001003	0					
ANR	4001501	Argument	false		4001003	5					
ANR	4001502	Identifier	false		4001003	0					
ANR	4001503	Argument	pdevc		4001003	6					
ANR	4001504	Identifier	pdevc		4001003	0					
ANR	4001505	Argument	lop		4001003	7					
ANR	4001506	Identifier	lop		4001003	0					
ANR	4001507	IfStatement	if ( code < 0 )		4001003	1					
ANR	4001508	Condition	code < 0	643:16:21693:21700	4001003	0	True				
ANR	4001509	RelationalExpression	code < 0		4001003	0		<			
ANR	4001510	Identifier	code		4001003	0					
ANR	4001511	PrimaryExpression	0		4001003	1					
ANR	4001512	ReturnStatement	return code ;	644:16:21719:21730	4001003	1	True				
ANR	4001513	Identifier	code		4001003	0					
ANR	4001514	ExpressionStatement	right . start = right . end	646:8:21750:21773	4001003	5	True				
ANR	4001515	AssignmentExpression	right . start = right . end		4001003	0		=			
ANR	4001516	MemberAccess	right . start		4001003	0					
ANR	4001517	Identifier	right		4001003	0					
ANR	4001518	Identifier	start		4001003	1					
ANR	4001519	MemberAccess	right . end		4001003	1					
ANR	4001520	Identifier	right		4001003	0					
ANR	4001521	Identifier	end		4001003	1					
ANR	4001522	ExpressionStatement	"right . end . x = qx , right . end . y = qy"	647:8:21783:21817	4001003	6	True				
ANR	4001523	Expression	"right . end . x = qx , right . end . y = qy"		4001003	0					
ANR	4001524	AssignmentExpression	right . end . x = qx		4001003	0		=			
ANR	4001525	MemberAccess	right . end . x		4001003	0					
ANR	4001526	MemberAccess	right . end		4001003	0					
ANR	4001527	Identifier	right		4001003	0					
ANR	4001528	Identifier	end		4001003	1					
ANR	4001529	Identifier	x		4001003	1					
ANR	4001530	Identifier	qx		4001003	1					
ANR	4001531	AssignmentExpression	right . end . y = qy		4001003	1		=			
ANR	4001532	MemberAccess	right . end . y		4001003	0					
ANR	4001533	MemberAccess	right . end		4001003	0					
ANR	4001534	Identifier	right		4001003	0					
ANR	4001535	Identifier	end		4001003	1					
ANR	4001536	Identifier	y		4001003	1					
ANR	4001537	Identifier	qy		4001003	1					
ANR	4001538	ElseStatement	else		4001003	0					
ANR	4001539	CompoundStatement		70:11:2708:2708	4001003	0					
ANR	4001540	IfStatement	"if ( ! ROUNDED_SAME ( py , right . end . y ) )"		4001003	0					
ANR	4001541	Condition	"! ROUNDED_SAME ( py , right . end . y )"	649:12:21844:21873	4001003	0	True				
ANR	4001542	UnaryOperationExpression	"! ROUNDED_SAME ( py , right . end . y )"		4001003	0					
ANR	4001543	UnaryOperator	!		4001003	0					
ANR	4001544	CallExpression	"ROUNDED_SAME ( py , right . end . y )"		4001003	1					
ANR	4001545	Callee	ROUNDED_SAME		4001003	0					
ANR	4001546	Identifier	ROUNDED_SAME		4001003	0					
ANR	4001547	ArgumentList	py		4001003	1					
ANR	4001548	Argument	py		4001003	0					
ANR	4001549	Identifier	py		4001003	0					
ANR	4001550	Argument	right . end . y		4001003	1					
ANR	4001551	MemberAccess	right . end . y		4001003	0					
ANR	4001552	MemberAccess	right . end		4001003	0					
ANR	4001553	Identifier	right		4001003	0					
ANR	4001554	Identifier	end		4001003	1					
ANR	4001555	Identifier	y		4001003	1					
ANR	4001556	CompoundStatement		71:44:2754:2754	4001003	1					
ANR	4001557	ExpressionStatement	"code = ( * fill_trapezoid ) ( dev , & left , & right , py , right . end . y , false , pdevc , lop )"	650:12:21890:22009	4001003	0	True				
ANR	4001558	AssignmentExpression	"code = ( * fill_trapezoid ) ( dev , & left , & right , py , right . end . y , false , pdevc , lop )"		4001003	0		=			
ANR	4001559	Identifier	code		4001003	0					
ANR	4001560	CallExpression	"( * fill_trapezoid ) ( dev , & left , & right , py , right . end . y , false , pdevc , lop )"		4001003	1					
ANR	4001561	Callee	* fill_trapezoid		4001003	0					
ANR	4001562	UnaryOperationExpression	* fill_trapezoid		4001003	0					
ANR	4001563	UnaryOperator	*		4001003	0					
ANR	4001564	Identifier	fill_trapezoid		4001003	1					
ANR	4001565	ArgumentList	dev		4001003	1					
ANR	4001566	Argument	dev		4001003	0					
ANR	4001567	Identifier	dev		4001003	0					
ANR	4001568	Argument	& left		4001003	1					
ANR	4001569	UnaryOperationExpression	& left		4001003	0					
ANR	4001570	UnaryOperator	&		4001003	0					
ANR	4001571	Identifier	left		4001003	1					
ANR	4001572	Argument	& right		4001003	2					
ANR	4001573	UnaryOperationExpression	& right		4001003	0					
ANR	4001574	UnaryOperator	&		4001003	0					
ANR	4001575	Identifier	right		4001003	1					
ANR	4001576	Argument	py		4001003	3					
ANR	4001577	Identifier	py		4001003	0					
ANR	4001578	Argument	right . end . y		4001003	4					
ANR	4001579	MemberAccess	right . end . y		4001003	0					
ANR	4001580	MemberAccess	right . end		4001003	0					
ANR	4001581	Identifier	right		4001003	0					
ANR	4001582	Identifier	end		4001003	1					
ANR	4001583	Identifier	y		4001003	1					
ANR	4001584	Argument	false		4001003	5					
ANR	4001585	Identifier	false		4001003	0					
ANR	4001586	Argument	pdevc		4001003	6					
ANR	4001587	Identifier	pdevc		4001003	0					
ANR	4001588	Argument	lop		4001003	7					
ANR	4001589	Identifier	lop		4001003	0					
ANR	4001590	IfStatement	if ( code < 0 )		4001003	1					
ANR	4001591	Condition	code < 0	652:16:22027:22034	4001003	0	True				
ANR	4001592	RelationalExpression	code < 0		4001003	0		<			
ANR	4001593	Identifier	code		4001003	0					
ANR	4001594	PrimaryExpression	0		4001003	1					
ANR	4001595	ReturnStatement	return code ;	653:16:22053:22064	4001003	1	True				
ANR	4001596	Identifier	code		4001003	0					
ANR	4001597	ExpressionStatement	right . start = right . end	655:8:22084:22107	4001003	1	True				
ANR	4001598	AssignmentExpression	right . start = right . end		4001003	0		=			
ANR	4001599	MemberAccess	right . start		4001003	0					
ANR	4001600	Identifier	right		4001003	0					
ANR	4001601	Identifier	start		4001003	1					
ANR	4001602	MemberAccess	right . end		4001003	1					
ANR	4001603	Identifier	right		4001003	0					
ANR	4001604	Identifier	end		4001003	1					
ANR	4001605	ExpressionStatement	"right . end . x = qx , right . end . y = qy"	656:8:22117:22151	4001003	2	True				
ANR	4001606	Expression	"right . end . x = qx , right . end . y = qy"		4001003	0					
ANR	4001607	AssignmentExpression	right . end . x = qx		4001003	0		=			
ANR	4001608	MemberAccess	right . end . x		4001003	0					
ANR	4001609	MemberAccess	right . end		4001003	0					
ANR	4001610	Identifier	right		4001003	0					
ANR	4001611	Identifier	end		4001003	1					
ANR	4001612	Identifier	x		4001003	1					
ANR	4001613	Identifier	qx		4001003	1					
ANR	4001614	AssignmentExpression	right . end . y = qy		4001003	1		=			
ANR	4001615	MemberAccess	right . end . y		4001003	0					
ANR	4001616	MemberAccess	right . end		4001003	0					
ANR	4001617	Identifier	right		4001003	0					
ANR	4001618	Identifier	end		4001003	1					
ANR	4001619	Identifier	y		4001003	1					
ANR	4001620	Identifier	qy		4001003	1					
ANR	4001621	ExpressionStatement	ym = left . end . y	657:8:22161:22176	4001003	3	True				
ANR	4001622	AssignmentExpression	ym = left . end . y		4001003	0		=			
ANR	4001623	Identifier	ym		4001003	0					
ANR	4001624	MemberAccess	left . end . y		4001003	1					
ANR	4001625	MemberAccess	left . end		4001003	0					
ANR	4001626	Identifier	left		4001003	0					
ANR	4001627	Identifier	end		4001003	1					
ANR	4001628	Identifier	y		4001003	1					
ANR	4001629	IfStatement	"if ( ! ROUNDED_SAME ( right . start . y , ym ) )"		4001003	4					
ANR	4001630	Condition	"! ROUNDED_SAME ( right . start . y , ym )"	658:12:22190:22221	4001003	0	True				
ANR	4001631	UnaryOperationExpression	"! ROUNDED_SAME ( right . start . y , ym )"		4001003	0					
ANR	4001632	UnaryOperator	!		4001003	0					
ANR	4001633	CallExpression	"ROUNDED_SAME ( right . start . y , ym )"		4001003	1					
ANR	4001634	Callee	ROUNDED_SAME		4001003	0					
ANR	4001635	Identifier	ROUNDED_SAME		4001003	0					
ANR	4001636	ArgumentList	right . start . y		4001003	1					
ANR	4001637	Argument	right . start . y		4001003	0					
ANR	4001638	MemberAccess	right . start . y		4001003	0					
ANR	4001639	MemberAccess	right . start		4001003	0					
ANR	4001640	Identifier	right		4001003	0					
ANR	4001641	Identifier	start		4001003	1					
ANR	4001642	Identifier	y		4001003	1					
ANR	4001643	Argument	ym		4001003	1					
ANR	4001644	Identifier	ym		4001003	0					
ANR	4001645	CompoundStatement		80:46:3102:3102	4001003	1					
ANR	4001646	ExpressionStatement	"code = ( * fill_trapezoid ) ( dev , & left , & right , right . start . y , ym , false , pdevc , lop )"	659:12:22238:22359	4001003	0	True				
ANR	4001647	AssignmentExpression	"code = ( * fill_trapezoid ) ( dev , & left , & right , right . start . y , ym , false , pdevc , lop )"		4001003	0		=			
ANR	4001648	Identifier	code		4001003	0					
ANR	4001649	CallExpression	"( * fill_trapezoid ) ( dev , & left , & right , right . start . y , ym , false , pdevc , lop )"		4001003	1					
ANR	4001650	Callee	* fill_trapezoid		4001003	0					
ANR	4001651	UnaryOperationExpression	* fill_trapezoid		4001003	0					
ANR	4001652	UnaryOperator	*		4001003	0					
ANR	4001653	Identifier	fill_trapezoid		4001003	1					
ANR	4001654	ArgumentList	dev		4001003	1					
ANR	4001655	Argument	dev		4001003	0					
ANR	4001656	Identifier	dev		4001003	0					
ANR	4001657	Argument	& left		4001003	1					
ANR	4001658	UnaryOperationExpression	& left		4001003	0					
ANR	4001659	UnaryOperator	&		4001003	0					
ANR	4001660	Identifier	left		4001003	1					
ANR	4001661	Argument	& right		4001003	2					
ANR	4001662	UnaryOperationExpression	& right		4001003	0					
ANR	4001663	UnaryOperator	&		4001003	0					
ANR	4001664	Identifier	right		4001003	1					
ANR	4001665	Argument	right . start . y		4001003	3					
ANR	4001666	MemberAccess	right . start . y		4001003	0					
ANR	4001667	MemberAccess	right . start		4001003	0					
ANR	4001668	Identifier	right		4001003	0					
ANR	4001669	Identifier	start		4001003	1					
ANR	4001670	Identifier	y		4001003	1					
ANR	4001671	Argument	ym		4001003	4					
ANR	4001672	Identifier	ym		4001003	0					
ANR	4001673	Argument	false		4001003	5					
ANR	4001674	Identifier	false		4001003	0					
ANR	4001675	Argument	pdevc		4001003	6					
ANR	4001676	Identifier	pdevc		4001003	0					
ANR	4001677	Argument	lop		4001003	7					
ANR	4001678	Identifier	lop		4001003	0					
ANR	4001679	IfStatement	if ( code < 0 )		4001003	1					
ANR	4001680	Condition	code < 0	661:16:22377:22384	4001003	0	True				
ANR	4001681	RelationalExpression	code < 0		4001003	0		<			
ANR	4001682	Identifier	code		4001003	0					
ANR	4001683	PrimaryExpression	0		4001003	1					
ANR	4001684	ReturnStatement	return code ;	662:16:22403:22414	4001003	1	True				
ANR	4001685	Identifier	code		4001003	0					
ANR	4001686	ExpressionStatement	left . start = left . end	664:8:22434:22455	4001003	5	True				
ANR	4001687	AssignmentExpression	left . start = left . end		4001003	0		=			
ANR	4001688	MemberAccess	left . start		4001003	0					
ANR	4001689	Identifier	left		4001003	0					
ANR	4001690	Identifier	start		4001003	1					
ANR	4001691	MemberAccess	left . end		4001003	1					
ANR	4001692	Identifier	left		4001003	0					
ANR	4001693	Identifier	end		4001003	1					
ANR	4001694	ExpressionStatement	"left . end . x = qx , left . end . y = qy"	665:8:22465:22497	4001003	6	True				
ANR	4001695	Expression	"left . end . x = qx , left . end . y = qy"		4001003	0					
ANR	4001696	AssignmentExpression	left . end . x = qx		4001003	0		=			
ANR	4001697	MemberAccess	left . end . x		4001003	0					
ANR	4001698	MemberAccess	left . end		4001003	0					
ANR	4001699	Identifier	left		4001003	0					
ANR	4001700	Identifier	end		4001003	1					
ANR	4001701	Identifier	x		4001003	1					
ANR	4001702	Identifier	qx		4001003	1					
ANR	4001703	AssignmentExpression	left . end . y = qy		4001003	1		=			
ANR	4001704	MemberAccess	left . end . y		4001003	0					
ANR	4001705	MemberAccess	left . end		4001003	0					
ANR	4001706	Identifier	left		4001003	0					
ANR	4001707	Identifier	end		4001003	1					
ANR	4001708	Identifier	y		4001003	1					
ANR	4001709	Identifier	qy		4001003	1					
ANR	4001710	IfStatement	"if ( ! ROUNDED_SAME ( ym , qy ) )"		4001003	37					
ANR	4001711	Condition	"! ROUNDED_SAME ( ym , qy )"	667:8:22513:22533	4001003	0	True				
ANR	4001712	UnaryOperationExpression	"! ROUNDED_SAME ( ym , qy )"		4001003	0					
ANR	4001713	UnaryOperator	!		4001003	0					
ANR	4001714	CallExpression	"ROUNDED_SAME ( ym , qy )"		4001003	1					
ANR	4001715	Callee	ROUNDED_SAME		4001003	0					
ANR	4001716	Identifier	ROUNDED_SAME		4001003	0					
ANR	4001717	ArgumentList	ym		4001003	1					
ANR	4001718	Argument	ym		4001003	0					
ANR	4001719	Identifier	ym		4001003	0					
ANR	4001720	Argument	qy		4001003	1					
ANR	4001721	Identifier	qy		4001003	0					
ANR	4001722	ReturnStatement	"return ( * fill_trapezoid ) ( dev , & left , & right , ym , qy , false , pdevc , lop ) ;"	668:8:22544:22650	4001003	1	True				
ANR	4001723	CallExpression	"( * fill_trapezoid ) ( dev , & left , & right , ym , qy , false , pdevc , lop )"		4001003	0					
ANR	4001724	Callee	* fill_trapezoid		4001003	0					
ANR	4001725	UnaryOperationExpression	* fill_trapezoid		4001003	0					
ANR	4001726	UnaryOperator	*		4001003	0					
ANR	4001727	Identifier	fill_trapezoid		4001003	1					
ANR	4001728	ArgumentList	dev		4001003	1					
ANR	4001729	Argument	dev		4001003	0					
ANR	4001730	Identifier	dev		4001003	0					
ANR	4001731	Argument	& left		4001003	1					
ANR	4001732	UnaryOperationExpression	& left		4001003	0					
ANR	4001733	UnaryOperator	&		4001003	0					
ANR	4001734	Identifier	left		4001003	1					
ANR	4001735	Argument	& right		4001003	2					
ANR	4001736	UnaryOperationExpression	& right		4001003	0					
ANR	4001737	UnaryOperator	&		4001003	0					
ANR	4001738	Identifier	right		4001003	1					
ANR	4001739	Argument	ym		4001003	3					
ANR	4001740	Identifier	ym		4001003	0					
ANR	4001741	Argument	qy		4001003	4					
ANR	4001742	Identifier	qy		4001003	0					
ANR	4001743	Argument	false		4001003	5					
ANR	4001744	Identifier	false		4001003	0					
ANR	4001745	Argument	pdevc		4001003	6					
ANR	4001746	Identifier	pdevc		4001003	0					
ANR	4001747	Argument	lop		4001003	7					
ANR	4001748	Identifier	lop		4001003	0					
ANR	4001749	ElseStatement	else		4001003	0					
ANR	4001750	ReturnStatement	return 0 ;	671:8:22669:22677	4001003	0	True				
ANR	4001751	PrimaryExpression	0		4001003	0					
ANR	4001752	Statement	undef	672:1:22680:22684	4001003	38	True				
ANR	4001753	Statement	ROUNDED_SAME	672:7:22686:22697	4001003	39	True				
ANR	4001754	ReturnType	int		4001003	1					
ANR	4001755	Identifier	gx_default_fill_parallelogram		4001003	2					
ANR	4001756	ParameterList	"gx_device * dev , fixed px , fixed py , fixed ax , fixed ay , fixed bx , fixed by , const gx_device_color * pdevc , gs_logical_operation_t lop"		4001003	3					
ANR	4001757	Parameter	gx_device * dev	576:30:18950:18964	4001003	0	True				
ANR	4001758	ParameterType	gx_device *		4001003	0					
ANR	4001759	Identifier	dev		4001003	1					
ANR	4001760	Parameter	fixed px	577:17:18984:18991	4001003	1	True				
ANR	4001761	ParameterType	fixed		4001003	0					
ANR	4001762	Identifier	px		4001003	1					
ANR	4001763	Parameter	fixed py	577:27:18994:19001	4001003	2	True				
ANR	4001764	ParameterType	fixed		4001003	0					
ANR	4001765	Identifier	py		4001003	1					
ANR	4001766	Parameter	fixed ax	577:37:19004:19011	4001003	3	True				
ANR	4001767	ParameterType	fixed		4001003	0					
ANR	4001768	Identifier	ax		4001003	1					
ANR	4001769	Parameter	fixed ay	577:47:19014:19021	4001003	4	True				
ANR	4001770	ParameterType	fixed		4001003	0					
ANR	4001771	Identifier	ay		4001003	1					
ANR	4001772	Parameter	fixed bx	577:57:19024:19031	4001003	5	True				
ANR	4001773	ParameterType	fixed		4001003	0					
ANR	4001774	Identifier	bx		4001003	1					
ANR	4001775	Parameter	fixed by	577:67:19034:19041	4001003	6	True				
ANR	4001776	ParameterType	fixed		4001003	0					
ANR	4001777	Identifier	by		4001003	1					
ANR	4001778	Parameter	const gx_device_color * pdevc	578:18:19062:19090	4001003	7	True				
ANR	4001779	ParameterType	const gx_device_color *		4001003	0					
ANR	4001780	Identifier	pdevc		4001003	1					
ANR	4001781	Parameter	gs_logical_operation_t lop	578:49:19093:19118	4001003	8	True				
ANR	4001782	ParameterType	gs_logical_operation_t		4001003	0					
ANR	4001783	Identifier	lop		4001003	1					
ANR	4001784	CFGEntryNode	ENTRY		4001003		True				
ANR	4001785	CFGExitNode	EXIT		4001003		True				
ANR	4001786	Symbol	code		4001003						
ANR	4001787	Symbol	r . q		4001003						
ANR	4001788	Symbol	r . p		4001003						
ANR	4001789	Symbol	pdevc		4001003						
ANR	4001790	Symbol	px		4001003						
ANR	4001791	Symbol	py		4001003						
ANR	4001792	Symbol	lop		4001003						
ANR	4001793	Symbol	left . start		4001003						
ANR	4001794	Symbol	& left		4001003						
ANR	4001795	Symbol	left . end . x		4001003						
ANR	4001796	Symbol	left . end . y		4001003						
ANR	4001797	Symbol	dev		4001003						
ANR	4001798	Symbol	ym		4001003						
ANR	4001799	Symbol	bx		4001003						
ANR	4001800	Symbol	dev_proc		4001003						
ANR	4001801	Symbol	by		4001003						
ANR	4001802	Symbol	r . q . x		4001003						
ANR	4001803	Symbol	right . start		4001003						
ANR	4001804	Symbol	r . q . y		4001003						
ANR	4001805	Symbol	fill_trapezoid		4001003						
ANR	4001806	Symbol	& right		4001003						
ANR	4001807	Symbol	right . end . x		4001003						
ANR	4001808	Symbol	right . start . y		4001003						
ANR	4001809	Symbol	right . start . x		4001003						
ANR	4001810	Symbol	r . p . x		4001003						
ANR	4001811	Symbol	r . p . y		4001003						
ANR	4001812	Symbol	right . end		4001003						
ANR	4001813	Symbol	qx		4001003						
ANR	4001814	Symbol	right . end . y		4001003						
ANR	4001815	Symbol	ROUNDED_SAME		4001003						
ANR	4001816	Symbol	qy		4001003						
ANR	4001817	Symbol	false		4001003						
ANR	4001818	Symbol	left . end		4001003						
ANR	4001819	Symbol	gx_fill_rectangle_device_rop		4001003						
ANR	4001820	Symbol	right		4001003						
ANR	4001821	Symbol	left . start . y		4001003						
ANR	4001822	Symbol	r		4001003						
ANR	4001823	Symbol	left . start . x		4001003						
ANR	4001824	Symbol	* fill_trapezoid		4001003						
ANR	4001825	Symbol	t		4001003						
ANR	4001826	Symbol	left		4001003						
ANR	4001827	Symbol	ax		4001003						
ANR	4001828	Symbol	ay		4001003						
ANR	4001829	Symbol	& r		4001003						
ANR	4001830	Symbol	PARALLELOGRAM_IS_RECT		4001003						
ANR	4001831	Function	gx_default_fill_triangle	677:0:22820:25221							
ANR	4001832	FunctionDef	"gx_default_fill_triangle (gx_device * dev , fixed px , fixed py , fixed ax , fixed ay , fixed bx , fixed by , const gx_device_color * pdevc , gs_logical_operation_t lop)"		4001831	0					
ANR	4001833	CompoundStatement		681:0:23020:25221	4001831	0					
ANR	4001834	IdentifierDeclStatement	fixed t ;	682:4:23026:23033	4001831	0	True				
ANR	4001835	IdentifierDecl	t		4001831	0					
ANR	4001836	IdentifierDeclType	fixed		4001831	0					
ANR	4001837	Identifier	t		4001831	1					
ANR	4001838	IdentifierDeclStatement	fixed ym ;	683:4:23039:23047	4001831	1	True				
ANR	4001839	IdentifierDecl	ym		4001831	0					
ANR	4001840	IdentifierDeclType	fixed		4001831	0					
ANR	4001841	Identifier	ym		4001831	1					
ANR	4001842	ExpressionStatement	"dev_proc_fill_trapezoid ( ( * fill_trapezoid ) ) = dev_proc ( dev , fill_trapezoid )"	685:4:23054:23136	4001831	2	True				
ANR	4001843	AssignmentExpression	"dev_proc_fill_trapezoid ( ( * fill_trapezoid ) ) = dev_proc ( dev , fill_trapezoid )"		4001831	0		=			
ANR	4001844	CallExpression	dev_proc_fill_trapezoid ( ( * fill_trapezoid ) )		4001831	0					
ANR	4001845	Callee	dev_proc_fill_trapezoid		4001831	0					
ANR	4001846	Identifier	dev_proc_fill_trapezoid		4001831	0					
ANR	4001847	ArgumentList	* fill_trapezoid		4001831	1					
ANR	4001848	Argument	* fill_trapezoid		4001831	0					
ANR	4001849	UnaryOperationExpression	* fill_trapezoid		4001831	0					
ANR	4001850	UnaryOperator	*		4001831	0					
ANR	4001851	Identifier	fill_trapezoid		4001831	1					
ANR	4001852	CallExpression	"dev_proc ( dev , fill_trapezoid )"		4001831	1					
ANR	4001853	Callee	dev_proc		4001831	0					
ANR	4001854	Identifier	dev_proc		4001831	0					
ANR	4001855	ArgumentList	dev		4001831	1					
ANR	4001856	Argument	dev		4001831	0					
ANR	4001857	Identifier	dev		4001831	0					
ANR	4001858	Argument	fill_trapezoid		4001831	1					
ANR	4001859	Identifier	fill_trapezoid		4001831	0					
ANR	4001860	IdentifierDeclStatement	"gs_fixed_edge left , right ;"	687:4:23142:23167	4001831	3	True				
ANR	4001861	IdentifierDecl	left		4001831	0					
ANR	4001862	IdentifierDeclType	gs_fixed_edge		4001831	0					
ANR	4001863	Identifier	left		4001831	1					
ANR	4001864	IdentifierDecl	right		4001831	1					
ANR	4001865	IdentifierDeclType	gs_fixed_edge		4001831	0					
ANR	4001866	Identifier	right		4001831	1					
ANR	4001867	IdentifierDeclStatement	int code ;	688:4:23173:23181	4001831	4	True				
ANR	4001868	IdentifierDecl	code		4001831	0					
ANR	4001869	IdentifierDeclType	int		4001831	0					
ANR	4001870	Identifier	code		4001831	1					
ANR	4001871	IfStatement	if ( ay < 0 )		4001831	5					
ANR	4001872	Condition	ay < 0	691:8:23227:23232	4001831	0	True				
ANR	4001873	RelationalExpression	ay < 0		4001831	0		<			
ANR	4001874	Identifier	ay		4001831	0					
ANR	4001875	PrimaryExpression	0		4001831	1					
ANR	4001876	ExpressionStatement	"px += ax , py += ay , bx -= ax , by -= ay , ax = - ax , ay = - ay"	692:8:23243:23301	4001831	1	True				
ANR	4001877	Expression	"px += ax , py += ay , bx -= ax , by -= ay , ax = - ax , ay = - ay"		4001831	0					
ANR	4001878	AssignmentExpression	px += ax		4001831	0		+=			
ANR	4001879	Identifier	px		4001831	0					
ANR	4001880	Identifier	ax		4001831	1					
ANR	4001881	Expression	"py += ay , bx -= ax , by -= ay , ax = - ax , ay = - ay"		4001831	1					
ANR	4001882	AssignmentExpression	py += ay		4001831	0		+=			
ANR	4001883	Identifier	py		4001831	0					
ANR	4001884	Identifier	ay		4001831	1					
ANR	4001885	Expression	"bx -= ax , by -= ay , ax = - ax , ay = - ay"		4001831	1					
ANR	4001886	AssignmentExpression	bx -= ax		4001831	0		-=			
ANR	4001887	Identifier	bx		4001831	0					
ANR	4001888	Identifier	ax		4001831	1					
ANR	4001889	Expression	"by -= ay , ax = - ax , ay = - ay"		4001831	1					
ANR	4001890	AssignmentExpression	by -= ay		4001831	0		-=			
ANR	4001891	Identifier	by		4001831	0					
ANR	4001892	Identifier	ay		4001831	1					
ANR	4001893	Expression	"ax = - ax , ay = - ay"		4001831	1					
ANR	4001894	AssignmentExpression	ax = - ax		4001831	0		=			
ANR	4001895	Identifier	ax		4001831	0					
ANR	4001896	UnaryOperationExpression	- ax		4001831	1					
ANR	4001897	UnaryOperator	-		4001831	0					
ANR	4001898	Identifier	ax		4001831	1					
ANR	4001899	AssignmentExpression	ay = - ay		4001831	1		=			
ANR	4001900	Identifier	ay		4001831	0					
ANR	4001901	UnaryOperationExpression	- ay		4001831	1					
ANR	4001902	UnaryOperator	-		4001831	0					
ANR	4001903	Identifier	ay		4001831	1					
ANR	4001904	IfStatement	if ( by < 0 )		4001831	6					
ANR	4001905	Condition	by < 0	693:8:23311:23316	4001831	0	True				
ANR	4001906	RelationalExpression	by < 0		4001831	0		<			
ANR	4001907	Identifier	by		4001831	0					
ANR	4001908	PrimaryExpression	0		4001831	1					
ANR	4001909	ExpressionStatement	"px += bx , py += by , ax -= bx , ay -= by , bx = - bx , by = - by"	694:8:23327:23385	4001831	1	True				
ANR	4001910	Expression	"px += bx , py += by , ax -= bx , ay -= by , bx = - bx , by = - by"		4001831	0					
ANR	4001911	AssignmentExpression	px += bx		4001831	0		+=			
ANR	4001912	Identifier	px		4001831	0					
ANR	4001913	Identifier	bx		4001831	1					
ANR	4001914	Expression	"py += by , ax -= bx , ay -= by , bx = - bx , by = - by"		4001831	1					
ANR	4001915	AssignmentExpression	py += by		4001831	0		+=			
ANR	4001916	Identifier	py		4001831	0					
ANR	4001917	Identifier	by		4001831	1					
ANR	4001918	Expression	"ax -= bx , ay -= by , bx = - bx , by = - by"		4001831	1					
ANR	4001919	AssignmentExpression	ax -= bx		4001831	0		-=			
ANR	4001920	Identifier	ax		4001831	0					
ANR	4001921	Identifier	bx		4001831	1					
ANR	4001922	Expression	"ay -= by , bx = - bx , by = - by"		4001831	1					
ANR	4001923	AssignmentExpression	ay -= by		4001831	0		-=			
ANR	4001924	Identifier	ay		4001831	0					
ANR	4001925	Identifier	by		4001831	1					
ANR	4001926	Expression	"bx = - bx , by = - by"		4001831	1					
ANR	4001927	AssignmentExpression	bx = - bx		4001831	0		=			
ANR	4001928	Identifier	bx		4001831	0					
ANR	4001929	UnaryOperationExpression	- bx		4001831	1					
ANR	4001930	UnaryOperator	-		4001831	0					
ANR	4001931	Identifier	bx		4001831	1					
ANR	4001932	AssignmentExpression	by = - by		4001831	1		=			
ANR	4001933	Identifier	by		4001831	0					
ANR	4001934	UnaryOperationExpression	- by		4001831	1					
ANR	4001935	UnaryOperator	-		4001831	0					
ANR	4001936	Identifier	by		4001831	1					
ANR	4001937	IfStatement	if ( ay > by )		4001831	7					
ANR	4001938	Condition	ay > by	696:8:23422:23428	4001831	0	True				
ANR	4001939	RelationalExpression	ay > by		4001831	0		>			
ANR	4001940	Identifier	ay		4001831	0					
ANR	4001941	Identifier	by		4001831	1					
ANR	4001942	ExpressionStatement	"SWAP ( ax , bx , t ) , SWAP ( ay , by , t )"	697:8:23439:23471	4001831	1	True				
ANR	4001943	Expression	"SWAP ( ax , bx , t ) , SWAP ( ay , by , t )"		4001831	0					
ANR	4001944	CallExpression	"SWAP ( ax , bx , t )"		4001831	0					
ANR	4001945	Callee	SWAP		4001831	0					
ANR	4001946	Identifier	SWAP		4001831	0					
ANR	4001947	ArgumentList	ax		4001831	1					
ANR	4001948	Argument	ax		4001831	0					
ANR	4001949	Identifier	ax		4001831	0					
ANR	4001950	Argument	bx		4001831	1					
ANR	4001951	Identifier	bx		4001831	0					
ANR	4001952	Argument	t		4001831	2					
ANR	4001953	Identifier	t		4001831	0					
ANR	4001954	CallExpression	"SWAP ( ay , by , t )"		4001831	1					
ANR	4001955	Callee	SWAP		4001831	0					
ANR	4001956	Identifier	SWAP		4001831	0					
ANR	4001957	ArgumentList	ay		4001831	1					
ANR	4001958	Argument	ay		4001831	0					
ANR	4001959	Identifier	ay		4001831	0					
ANR	4001960	Argument	by		4001831	1					
ANR	4001961	Identifier	by		4001831	0					
ANR	4001962	Argument	t		4001831	2					
ANR	4001963	Identifier	t		4001831	0					
ANR	4001964	ExpressionStatement	left . start . x = right . start . x = px	702:4:23611:23644	4001831	8	True				
ANR	4001965	AssignmentExpression	left . start . x = right . start . x = px		4001831	0		=			
ANR	4001966	MemberAccess	left . start . x		4001831	0					
ANR	4001967	MemberAccess	left . start		4001831	0					
ANR	4001968	Identifier	left		4001831	0					
ANR	4001969	Identifier	start		4001831	1					
ANR	4001970	Identifier	x		4001831	1					
ANR	4001971	AssignmentExpression	right . start . x = px		4001831	1		=			
ANR	4001972	MemberAccess	right . start . x		4001831	0					
ANR	4001973	MemberAccess	right . start		4001831	0					
ANR	4001974	Identifier	right		4001831	0					
ANR	4001975	Identifier	start		4001831	1					
ANR	4001976	Identifier	x		4001831	1					
ANR	4001977	Identifier	px		4001831	1					
ANR	4001978	ExpressionStatement	left . start . y = right . start . y = py	703:4:23650:23683	4001831	9	True				
ANR	4001979	AssignmentExpression	left . start . y = right . start . y = py		4001831	0		=			
ANR	4001980	MemberAccess	left . start . y		4001831	0					
ANR	4001981	MemberAccess	left . start		4001831	0					
ANR	4001982	Identifier	left		4001831	0					
ANR	4001983	Identifier	start		4001831	1					
ANR	4001984	Identifier	y		4001831	1					
ANR	4001985	AssignmentExpression	right . start . y = py		4001831	1		=			
ANR	4001986	MemberAccess	right . start . y		4001831	0					
ANR	4001987	MemberAccess	right . start		4001831	0					
ANR	4001988	Identifier	right		4001831	0					
ANR	4001989	Identifier	start		4001831	1					
ANR	4001990	Identifier	y		4001831	1					
ANR	4001991	Identifier	py		4001831	1					
ANR	4001992	IfStatement	if ( ay == 0 )		4001831	10					
ANR	4001993	Condition	ay == 0	704:8:23693:23699	4001831	0	True				
ANR	4001994	EqualityExpression	ay == 0		4001831	0		==			
ANR	4001995	Identifier	ay		4001831	0					
ANR	4001996	PrimaryExpression	0		4001831	1					
ANR	4001997	CompoundStatement		24:17:681:681	4001831	1					
ANR	4001998	IfStatement	if ( ax < 0 )		4001831	0					
ANR	4001999	Condition	ax < 0	706:12:23739:23744	4001831	0	True				
ANR	4002000	RelationalExpression	ax < 0		4001831	0		<			
ANR	4002001	Identifier	ax		4001831	0					
ANR	4002002	PrimaryExpression	0		4001831	1					
ANR	4002003	ExpressionStatement	left . start . x = px + ax	707:12:23759:23781	4001831	1	True				
ANR	4002004	AssignmentExpression	left . start . x = px + ax		4001831	0		=			
ANR	4002005	MemberAccess	left . start . x		4001831	0					
ANR	4002006	MemberAccess	left . start		4001831	0					
ANR	4002007	Identifier	left		4001831	0					
ANR	4002008	Identifier	start		4001831	1					
ANR	4002009	Identifier	x		4001831	1					
ANR	4002010	AdditiveExpression	px + ax		4001831	1		+			
ANR	4002011	Identifier	px		4001831	0					
ANR	4002012	Identifier	ax		4001831	1					
ANR	4002013	ElseStatement	else		4001831	0					
ANR	4002014	ExpressionStatement	right . start . x = px + ax	709:12:23808:23831	4001831	0	True				
ANR	4002015	AssignmentExpression	right . start . x = px + ax		4001831	0		=			
ANR	4002016	MemberAccess	right . start . x		4001831	0					
ANR	4002017	MemberAccess	right . start		4001831	0					
ANR	4002018	Identifier	right		4001831	0					
ANR	4002019	Identifier	start		4001831	1					
ANR	4002020	Identifier	x		4001831	1					
ANR	4002021	AdditiveExpression	px + ax		4001831	1		+			
ANR	4002022	Identifier	px		4001831	0					
ANR	4002023	Identifier	ax		4001831	1					
ANR	4002024	ExpressionStatement	left . end . x = right . end . x = px + bx	710:8:23841:23875	4001831	1	True				
ANR	4002025	AssignmentExpression	left . end . x = right . end . x = px + bx		4001831	0		=			
ANR	4002026	MemberAccess	left . end . x		4001831	0					
ANR	4002027	MemberAccess	left . end		4001831	0					
ANR	4002028	Identifier	left		4001831	0					
ANR	4002029	Identifier	end		4001831	1					
ANR	4002030	Identifier	x		4001831	1					
ANR	4002031	AssignmentExpression	right . end . x = px + bx		4001831	1		=			
ANR	4002032	MemberAccess	right . end . x		4001831	0					
ANR	4002033	MemberAccess	right . end		4001831	0					
ANR	4002034	Identifier	right		4001831	0					
ANR	4002035	Identifier	end		4001831	1					
ANR	4002036	Identifier	x		4001831	1					
ANR	4002037	AdditiveExpression	px + bx		4001831	1		+			
ANR	4002038	Identifier	px		4001831	0					
ANR	4002039	Identifier	bx		4001831	1					
ANR	4002040	ExpressionStatement	left . end . y = right . end . y = py + by	711:8:23885:23919	4001831	2	True				
ANR	4002041	AssignmentExpression	left . end . y = right . end . y = py + by		4001831	0		=			
ANR	4002042	MemberAccess	left . end . y		4001831	0					
ANR	4002043	MemberAccess	left . end		4001831	0					
ANR	4002044	Identifier	left		4001831	0					
ANR	4002045	Identifier	end		4001831	1					
ANR	4002046	Identifier	y		4001831	1					
ANR	4002047	AssignmentExpression	right . end . y = py + by		4001831	1		=			
ANR	4002048	MemberAccess	right . end . y		4001831	0					
ANR	4002049	MemberAccess	right . end		4001831	0					
ANR	4002050	Identifier	right		4001831	0					
ANR	4002051	Identifier	end		4001831	1					
ANR	4002052	Identifier	y		4001831	1					
ANR	4002053	AdditiveExpression	py + by		4001831	1		+			
ANR	4002054	Identifier	py		4001831	0					
ANR	4002055	Identifier	by		4001831	1					
ANR	4002056	ExpressionStatement	ym = py	712:8:23929:23936	4001831	3	True				
ANR	4002057	AssignmentExpression	ym = py		4001831	0		=			
ANR	4002058	Identifier	ym		4001831	0					
ANR	4002059	Identifier	py		4001831	1					
ANR	4002060	ElseStatement	else		4001831	0					
ANR	4002061	IfStatement	if ( ay == by )		4001831	0					
ANR	4002062	Condition	ay == by	713:15:23953:23960	4001831	0	True				
ANR	4002063	EqualityExpression	ay == by		4001831	0		==			
ANR	4002064	Identifier	ay		4001831	0					
ANR	4002065	Identifier	by		4001831	1					
ANR	4002066	CompoundStatement		33:25:942:942	4001831	1					
ANR	4002067	IfStatement	if ( ax < bx )		4001831	0					
ANR	4002068	Condition	ax < bx	715:12:24003:24009	4001831	0	True				
ANR	4002069	RelationalExpression	ax < bx		4001831	0		<			
ANR	4002070	Identifier	ax		4001831	0					
ANR	4002071	Identifier	bx		4001831	1					
ANR	4002072	ExpressionStatement	"left . end . x = px + ax , right . end . x = px + bx"	716:12:24024:24067	4001831	1	True				
ANR	4002073	Expression	"left . end . x = px + ax , right . end . x = px + bx"		4001831	0					
ANR	4002074	AssignmentExpression	left . end . x = px + ax		4001831	0		=			
ANR	4002075	MemberAccess	left . end . x		4001831	0					
ANR	4002076	MemberAccess	left . end		4001831	0					
ANR	4002077	Identifier	left		4001831	0					
ANR	4002078	Identifier	end		4001831	1					
ANR	4002079	Identifier	x		4001831	1					
ANR	4002080	AdditiveExpression	px + ax		4001831	1		+			
ANR	4002081	Identifier	px		4001831	0					
ANR	4002082	Identifier	ax		4001831	1					
ANR	4002083	AssignmentExpression	right . end . x = px + bx		4001831	1		=			
ANR	4002084	MemberAccess	right . end . x		4001831	0					
ANR	4002085	MemberAccess	right . end		4001831	0					
ANR	4002086	Identifier	right		4001831	0					
ANR	4002087	Identifier	end		4001831	1					
ANR	4002088	Identifier	x		4001831	1					
ANR	4002089	AdditiveExpression	px + bx		4001831	1		+			
ANR	4002090	Identifier	px		4001831	0					
ANR	4002091	Identifier	bx		4001831	1					
ANR	4002092	ElseStatement	else		4001831	0					
ANR	4002093	ExpressionStatement	"left . end . x = px + bx , right . end . x = px + ax"	718:12:24094:24137	4001831	0	True				
ANR	4002094	Expression	"left . end . x = px + bx , right . end . x = px + ax"		4001831	0					
ANR	4002095	AssignmentExpression	left . end . x = px + bx		4001831	0		=			
ANR	4002096	MemberAccess	left . end . x		4001831	0					
ANR	4002097	MemberAccess	left . end		4001831	0					
ANR	4002098	Identifier	left		4001831	0					
ANR	4002099	Identifier	end		4001831	1					
ANR	4002100	Identifier	x		4001831	1					
ANR	4002101	AdditiveExpression	px + bx		4001831	1		+			
ANR	4002102	Identifier	px		4001831	0					
ANR	4002103	Identifier	bx		4001831	1					
ANR	4002104	AssignmentExpression	right . end . x = px + ax		4001831	1		=			
ANR	4002105	MemberAccess	right . end . x		4001831	0					
ANR	4002106	MemberAccess	right . end		4001831	0					
ANR	4002107	Identifier	right		4001831	0					
ANR	4002108	Identifier	end		4001831	1					
ANR	4002109	Identifier	x		4001831	1					
ANR	4002110	AdditiveExpression	px + ax		4001831	1		+			
ANR	4002111	Identifier	px		4001831	0					
ANR	4002112	Identifier	ax		4001831	1					
ANR	4002113	ExpressionStatement	left . end . y = right . end . y = py + by	719:8:24147:24181	4001831	1	True				
ANR	4002114	AssignmentExpression	left . end . y = right . end . y = py + by		4001831	0		=			
ANR	4002115	MemberAccess	left . end . y		4001831	0					
ANR	4002116	MemberAccess	left . end		4001831	0					
ANR	4002117	Identifier	left		4001831	0					
ANR	4002118	Identifier	end		4001831	1					
ANR	4002119	Identifier	y		4001831	1					
ANR	4002120	AssignmentExpression	right . end . y = py + by		4001831	1		=			
ANR	4002121	MemberAccess	right . end . y		4001831	0					
ANR	4002122	MemberAccess	right . end		4001831	0					
ANR	4002123	Identifier	right		4001831	0					
ANR	4002124	Identifier	end		4001831	1					
ANR	4002125	Identifier	y		4001831	1					
ANR	4002126	AdditiveExpression	py + by		4001831	1		+			
ANR	4002127	Identifier	py		4001831	0					
ANR	4002128	Identifier	by		4001831	1					
ANR	4002129	ExpressionStatement	ym = py	720:8:24191:24198	4001831	2	True				
ANR	4002130	AssignmentExpression	ym = py		4001831	0		=			
ANR	4002131	Identifier	ym		4001831	0					
ANR	4002132	Identifier	py		4001831	1					
ANR	4002133	ElseStatement	else		4001831	0					
ANR	4002134	CompoundStatement		41:11:1190:1190	4001831	0					
ANR	4002135	ExpressionStatement	ym = py + ay	722:8:24221:24233	4001831	0	True				
ANR	4002136	AssignmentExpression	ym = py + ay		4001831	0		=			
ANR	4002137	Identifier	ym		4001831	0					
ANR	4002138	AdditiveExpression	py + ay		4001831	1		+			
ANR	4002139	Identifier	py		4001831	0					
ANR	4002140	Identifier	ay		4001831	1					
ANR	4002141	IfStatement	"if ( fixed_mult_quo ( bx , ay , by ) < ax )"		4001831	1					
ANR	4002142	Condition	"fixed_mult_quo ( bx , ay , by ) < ax"	723:12:24247:24277	4001831	0	True				
ANR	4002143	RelationalExpression	"fixed_mult_quo ( bx , ay , by ) < ax"		4001831	0		<			
ANR	4002144	CallExpression	"fixed_mult_quo ( bx , ay , by )"		4001831	0					
ANR	4002145	Callee	fixed_mult_quo		4001831	0					
ANR	4002146	Identifier	fixed_mult_quo		4001831	0					
ANR	4002147	ArgumentList	bx		4001831	1					
ANR	4002148	Argument	bx		4001831	0					
ANR	4002149	Identifier	bx		4001831	0					
ANR	4002150	Argument	ay		4001831	1					
ANR	4002151	Identifier	ay		4001831	0					
ANR	4002152	Argument	by		4001831	2					
ANR	4002153	Identifier	by		4001831	0					
ANR	4002154	Identifier	ax		4001831	1					
ANR	4002155	CompoundStatement		43:45:1259:1259	4001831	1					
ANR	4002156	ExpressionStatement	"left . end . x = px + bx , left . end . y = py + by"	725:12:24357:24399	4001831	0	True				
ANR	4002157	Expression	"left . end . x = px + bx , left . end . y = py + by"		4001831	0					
ANR	4002158	AssignmentExpression	left . end . x = px + bx		4001831	0		=			
ANR	4002159	MemberAccess	left . end . x		4001831	0					
ANR	4002160	MemberAccess	left . end		4001831	0					
ANR	4002161	Identifier	left		4001831	0					
ANR	4002162	Identifier	end		4001831	1					
ANR	4002163	Identifier	x		4001831	1					
ANR	4002164	AdditiveExpression	px + bx		4001831	1		+			
ANR	4002165	Identifier	px		4001831	0					
ANR	4002166	Identifier	bx		4001831	1					
ANR	4002167	AssignmentExpression	left . end . y = py + by		4001831	1		=			
ANR	4002168	MemberAccess	left . end . y		4001831	0					
ANR	4002169	MemberAccess	left . end		4001831	0					
ANR	4002170	Identifier	left		4001831	0					
ANR	4002171	Identifier	end		4001831	1					
ANR	4002172	Identifier	y		4001831	1					
ANR	4002173	AdditiveExpression	py + by		4001831	1		+			
ANR	4002174	Identifier	py		4001831	0					
ANR	4002175	Identifier	by		4001831	1					
ANR	4002176	ExpressionStatement	"right . end . x = px + ax , right . end . y = py + ay"	726:12:24413:24457	4001831	1	True				
ANR	4002177	Expression	"right . end . x = px + ax , right . end . y = py + ay"		4001831	0					
ANR	4002178	AssignmentExpression	right . end . x = px + ax		4001831	0		=			
ANR	4002179	MemberAccess	right . end . x		4001831	0					
ANR	4002180	MemberAccess	right . end		4001831	0					
ANR	4002181	Identifier	right		4001831	0					
ANR	4002182	Identifier	end		4001831	1					
ANR	4002183	Identifier	x		4001831	1					
ANR	4002184	AdditiveExpression	px + ax		4001831	1		+			
ANR	4002185	Identifier	px		4001831	0					
ANR	4002186	Identifier	ax		4001831	1					
ANR	4002187	AssignmentExpression	right . end . y = py + ay		4001831	1		=			
ANR	4002188	MemberAccess	right . end . y		4001831	0					
ANR	4002189	MemberAccess	right . end		4001831	0					
ANR	4002190	Identifier	right		4001831	0					
ANR	4002191	Identifier	end		4001831	1					
ANR	4002192	Identifier	y		4001831	1					
ANR	4002193	AdditiveExpression	py + ay		4001831	1		+			
ANR	4002194	Identifier	py		4001831	0					
ANR	4002195	Identifier	ay		4001831	1					
ANR	4002196	ExpressionStatement	"code = ( * fill_trapezoid ) ( dev , & left , & right , py , ym , false , pdevc , lop )"	727:12:24471:24581	4001831	2	True				
ANR	4002197	AssignmentExpression	"code = ( * fill_trapezoid ) ( dev , & left , & right , py , ym , false , pdevc , lop )"		4001831	0		=			
ANR	4002198	Identifier	code		4001831	0					
ANR	4002199	CallExpression	"( * fill_trapezoid ) ( dev , & left , & right , py , ym , false , pdevc , lop )"		4001831	1					
ANR	4002200	Callee	* fill_trapezoid		4001831	0					
ANR	4002201	UnaryOperationExpression	* fill_trapezoid		4001831	0					
ANR	4002202	UnaryOperator	*		4001831	0					
ANR	4002203	Identifier	fill_trapezoid		4001831	1					
ANR	4002204	ArgumentList	dev		4001831	1					
ANR	4002205	Argument	dev		4001831	0					
ANR	4002206	Identifier	dev		4001831	0					
ANR	4002207	Argument	& left		4001831	1					
ANR	4002208	UnaryOperationExpression	& left		4001831	0					
ANR	4002209	UnaryOperator	&		4001831	0					
ANR	4002210	Identifier	left		4001831	1					
ANR	4002211	Argument	& right		4001831	2					
ANR	4002212	UnaryOperationExpression	& right		4001831	0					
ANR	4002213	UnaryOperator	&		4001831	0					
ANR	4002214	Identifier	right		4001831	1					
ANR	4002215	Argument	py		4001831	3					
ANR	4002216	Identifier	py		4001831	0					
ANR	4002217	Argument	ym		4001831	4					
ANR	4002218	Identifier	ym		4001831	0					
ANR	4002219	Argument	false		4001831	5					
ANR	4002220	Identifier	false		4001831	0					
ANR	4002221	Argument	pdevc		4001831	6					
ANR	4002222	Identifier	pdevc		4001831	0					
ANR	4002223	Argument	lop		4001831	7					
ANR	4002224	Identifier	lop		4001831	0					
ANR	4002225	ExpressionStatement	right . start = right . end	729:12:24595:24618	4001831	3	True				
ANR	4002226	AssignmentExpression	right . start = right . end		4001831	0		=			
ANR	4002227	MemberAccess	right . start		4001831	0					
ANR	4002228	Identifier	right		4001831	0					
ANR	4002229	Identifier	start		4001831	1					
ANR	4002230	MemberAccess	right . end		4001831	1					
ANR	4002231	Identifier	right		4001831	0					
ANR	4002232	Identifier	end		4001831	1					
ANR	4002233	ExpressionStatement	right . end = left . end	730:12:24632:24652	4001831	4	True				
ANR	4002234	AssignmentExpression	right . end = left . end		4001831	0		=			
ANR	4002235	MemberAccess	right . end		4001831	0					
ANR	4002236	Identifier	right		4001831	0					
ANR	4002237	Identifier	end		4001831	1					
ANR	4002238	MemberAccess	left . end		4001831	1					
ANR	4002239	Identifier	left		4001831	0					
ANR	4002240	Identifier	end		4001831	1					
ANR	4002241	ElseStatement	else		4001831	0					
ANR	4002242	CompoundStatement		51:15:1648:1648	4001831	0					
ANR	4002243	ExpressionStatement	"left . end . x = px + ax , left . end . y = py + ay"	733:12:24746:24788	4001831	0	True				
ANR	4002244	Expression	"left . end . x = px + ax , left . end . y = py + ay"		4001831	0					
ANR	4002245	AssignmentExpression	left . end . x = px + ax		4001831	0		=			
ANR	4002246	MemberAccess	left . end . x		4001831	0					
ANR	4002247	MemberAccess	left . end		4001831	0					
ANR	4002248	Identifier	left		4001831	0					
ANR	4002249	Identifier	end		4001831	1					
ANR	4002250	Identifier	x		4001831	1					
ANR	4002251	AdditiveExpression	px + ax		4001831	1		+			
ANR	4002252	Identifier	px		4001831	0					
ANR	4002253	Identifier	ax		4001831	1					
ANR	4002254	AssignmentExpression	left . end . y = py + ay		4001831	1		=			
ANR	4002255	MemberAccess	left . end . y		4001831	0					
ANR	4002256	MemberAccess	left . end		4001831	0					
ANR	4002257	Identifier	left		4001831	0					
ANR	4002258	Identifier	end		4001831	1					
ANR	4002259	Identifier	y		4001831	1					
ANR	4002260	AdditiveExpression	py + ay		4001831	1		+			
ANR	4002261	Identifier	py		4001831	0					
ANR	4002262	Identifier	ay		4001831	1					
ANR	4002263	ExpressionStatement	"right . end . x = px + bx , right . end . y = py + by"	734:12:24802:24846	4001831	1	True				
ANR	4002264	Expression	"right . end . x = px + bx , right . end . y = py + by"		4001831	0					
ANR	4002265	AssignmentExpression	right . end . x = px + bx		4001831	0		=			
ANR	4002266	MemberAccess	right . end . x		4001831	0					
ANR	4002267	MemberAccess	right . end		4001831	0					
ANR	4002268	Identifier	right		4001831	0					
ANR	4002269	Identifier	end		4001831	1					
ANR	4002270	Identifier	x		4001831	1					
ANR	4002271	AdditiveExpression	px + bx		4001831	1		+			
ANR	4002272	Identifier	px		4001831	0					
ANR	4002273	Identifier	bx		4001831	1					
ANR	4002274	AssignmentExpression	right . end . y = py + by		4001831	1		=			
ANR	4002275	MemberAccess	right . end . y		4001831	0					
ANR	4002276	MemberAccess	right . end		4001831	0					
ANR	4002277	Identifier	right		4001831	0					
ANR	4002278	Identifier	end		4001831	1					
ANR	4002279	Identifier	y		4001831	1					
ANR	4002280	AdditiveExpression	py + by		4001831	1		+			
ANR	4002281	Identifier	py		4001831	0					
ANR	4002282	Identifier	by		4001831	1					
ANR	4002283	ExpressionStatement	"code = ( * fill_trapezoid ) ( dev , & left , & right , py , ym , false , pdevc , lop )"	735:12:24860:24970	4001831	2	True				
ANR	4002284	AssignmentExpression	"code = ( * fill_trapezoid ) ( dev , & left , & right , py , ym , false , pdevc , lop )"		4001831	0		=			
ANR	4002285	Identifier	code		4001831	0					
ANR	4002286	CallExpression	"( * fill_trapezoid ) ( dev , & left , & right , py , ym , false , pdevc , lop )"		4001831	1					
ANR	4002287	Callee	* fill_trapezoid		4001831	0					
ANR	4002288	UnaryOperationExpression	* fill_trapezoid		4001831	0					
ANR	4002289	UnaryOperator	*		4001831	0					
ANR	4002290	Identifier	fill_trapezoid		4001831	1					
ANR	4002291	ArgumentList	dev		4001831	1					
ANR	4002292	Argument	dev		4001831	0					
ANR	4002293	Identifier	dev		4001831	0					
ANR	4002294	Argument	& left		4001831	1					
ANR	4002295	UnaryOperationExpression	& left		4001831	0					
ANR	4002296	UnaryOperator	&		4001831	0					
ANR	4002297	Identifier	left		4001831	1					
ANR	4002298	Argument	& right		4001831	2					
ANR	4002299	UnaryOperationExpression	& right		4001831	0					
ANR	4002300	UnaryOperator	&		4001831	0					
ANR	4002301	Identifier	right		4001831	1					
ANR	4002302	Argument	py		4001831	3					
ANR	4002303	Identifier	py		4001831	0					
ANR	4002304	Argument	ym		4001831	4					
ANR	4002305	Identifier	ym		4001831	0					
ANR	4002306	Argument	false		4001831	5					
ANR	4002307	Identifier	false		4001831	0					
ANR	4002308	Argument	pdevc		4001831	6					
ANR	4002309	Identifier	pdevc		4001831	0					
ANR	4002310	Argument	lop		4001831	7					
ANR	4002311	Identifier	lop		4001831	0					
ANR	4002312	ExpressionStatement	left . start = left . end	737:12:24984:25005	4001831	3	True				
ANR	4002313	AssignmentExpression	left . start = left . end		4001831	0		=			
ANR	4002314	MemberAccess	left . start		4001831	0					
ANR	4002315	Identifier	left		4001831	0					
ANR	4002316	Identifier	start		4001831	1					
ANR	4002317	MemberAccess	left . end		4001831	1					
ANR	4002318	Identifier	left		4001831	0					
ANR	4002319	Identifier	end		4001831	1					
ANR	4002320	ExpressionStatement	left . end = right . end	738:12:25019:25039	4001831	4	True				
ANR	4002321	AssignmentExpression	left . end = right . end		4001831	0		=			
ANR	4002322	MemberAccess	left . end		4001831	0					
ANR	4002323	Identifier	left		4001831	0					
ANR	4002324	Identifier	end		4001831	1					
ANR	4002325	MemberAccess	right . end		4001831	1					
ANR	4002326	Identifier	right		4001831	0					
ANR	4002327	Identifier	end		4001831	1					
ANR	4002328	IfStatement	if ( code < 0 )		4001831	2					
ANR	4002329	Condition	code < 0	740:12:25063:25070	4001831	0	True				
ANR	4002330	RelationalExpression	code < 0		4001831	0		<			
ANR	4002331	Identifier	code		4001831	0					
ANR	4002332	PrimaryExpression	0		4001831	1					
ANR	4002333	ReturnStatement	return code ;	741:12:25085:25096	4001831	1	True				
ANR	4002334	Identifier	code		4001831	0					
ANR	4002335	ReturnStatement	"return ( * fill_trapezoid ) ( dev , & left , & right , ym , right . end . y , false , pdevc , lop ) ;"	743:4:25108:25219	4001831	11	True				
ANR	4002336	CallExpression	"( * fill_trapezoid ) ( dev , & left , & right , ym , right . end . y , false , pdevc , lop )"		4001831	0					
ANR	4002337	Callee	* fill_trapezoid		4001831	0					
ANR	4002338	UnaryOperationExpression	* fill_trapezoid		4001831	0					
ANR	4002339	UnaryOperator	*		4001831	0					
ANR	4002340	Identifier	fill_trapezoid		4001831	1					
ANR	4002341	ArgumentList	dev		4001831	1					
ANR	4002342	Argument	dev		4001831	0					
ANR	4002343	Identifier	dev		4001831	0					
ANR	4002344	Argument	& left		4001831	1					
ANR	4002345	UnaryOperationExpression	& left		4001831	0					
ANR	4002346	UnaryOperator	&		4001831	0					
ANR	4002347	Identifier	left		4001831	1					
ANR	4002348	Argument	& right		4001831	2					
ANR	4002349	UnaryOperationExpression	& right		4001831	0					
ANR	4002350	UnaryOperator	&		4001831	0					
ANR	4002351	Identifier	right		4001831	1					
ANR	4002352	Argument	ym		4001831	3					
ANR	4002353	Identifier	ym		4001831	0					
ANR	4002354	Argument	right . end . y		4001831	4					
ANR	4002355	MemberAccess	right . end . y		4001831	0					
ANR	4002356	MemberAccess	right . end		4001831	0					
ANR	4002357	Identifier	right		4001831	0					
ANR	4002358	Identifier	end		4001831	1					
ANR	4002359	Identifier	y		4001831	1					
ANR	4002360	Argument	false		4001831	5					
ANR	4002361	Identifier	false		4001831	0					
ANR	4002362	Argument	pdevc		4001831	6					
ANR	4002363	Identifier	pdevc		4001831	0					
ANR	4002364	Argument	lop		4001831	7					
ANR	4002365	Identifier	lop		4001831	0					
ANR	4002366	ReturnType	int		4001831	1					
ANR	4002367	Identifier	gx_default_fill_triangle		4001831	2					
ANR	4002368	ParameterList	"gx_device * dev , fixed px , fixed py , fixed ax , fixed ay , fixed bx , fixed by , const gx_device_color * pdevc , gs_logical_operation_t lop"		4001831	3					
ANR	4002369	Parameter	gx_device * dev	678:25:22849:22863	4001831	0	True				
ANR	4002370	ParameterType	gx_device *		4001831	0					
ANR	4002371	Identifier	dev		4001831	1					
ANR	4002372	Parameter	fixed px	679:17:22883:22890	4001831	1	True				
ANR	4002373	ParameterType	fixed		4001831	0					
ANR	4002374	Identifier	px		4001831	1					
ANR	4002375	Parameter	fixed py	679:27:22893:22900	4001831	2	True				
ANR	4002376	ParameterType	fixed		4001831	0					
ANR	4002377	Identifier	py		4001831	1					
ANR	4002378	Parameter	fixed ax	679:37:22903:22910	4001831	3	True				
ANR	4002379	ParameterType	fixed		4001831	0					
ANR	4002380	Identifier	ax		4001831	1					
ANR	4002381	Parameter	fixed ay	679:47:22913:22920	4001831	4	True				
ANR	4002382	ParameterType	fixed		4001831	0					
ANR	4002383	Identifier	ay		4001831	1					
ANR	4002384	Parameter	fixed bx	679:57:22923:22930	4001831	5	True				
ANR	4002385	ParameterType	fixed		4001831	0					
ANR	4002386	Identifier	bx		4001831	1					
ANR	4002387	Parameter	fixed by	679:67:22933:22940	4001831	6	True				
ANR	4002388	ParameterType	fixed		4001831	0					
ANR	4002389	Identifier	by		4001831	1					
ANR	4002390	Parameter	const gx_device_color * pdevc	680:18:22961:22989	4001831	7	True				
ANR	4002391	ParameterType	const gx_device_color *		4001831	0					
ANR	4002392	Identifier	pdevc		4001831	1					
ANR	4002393	Parameter	gs_logical_operation_t lop	680:49:22992:23017	4001831	8	True				
ANR	4002394	ParameterType	gs_logical_operation_t		4001831	0					
ANR	4002395	Identifier	lop		4001831	1					
ANR	4002396	CFGEntryNode	ENTRY		4001831		True				
ANR	4002397	CFGExitNode	EXIT		4001831		True				
ANR	4002398	Symbol	fixed_mult_quo		4001831						
ANR	4002399	Symbol	code		4001831						
ANR	4002400	Symbol	pdevc		4001831						
ANR	4002401	Symbol	px		4001831						
ANR	4002402	Symbol	py		4001831						
ANR	4002403	Symbol	lop		4001831						
ANR	4002404	Symbol	left . start		4001831						
ANR	4002405	Symbol	& left		4001831						
ANR	4002406	Symbol	left . end . x		4001831						
ANR	4002407	Symbol	left . end . y		4001831						
ANR	4002408	Symbol	dev		4001831						
ANR	4002409	Symbol	ym		4001831						
ANR	4002410	Symbol	bx		4001831						
ANR	4002411	Symbol	dev_proc		4001831						
ANR	4002412	Symbol	by		4001831						
ANR	4002413	Symbol	right . start		4001831						
ANR	4002414	Symbol	fill_trapezoid		4001831						
ANR	4002415	Symbol	& right		4001831						
ANR	4002416	Symbol	right . end . x		4001831						
ANR	4002417	Symbol	right . start . y		4001831						
ANR	4002418	Symbol	right . start . x		4001831						
ANR	4002419	Symbol	right . end		4001831						
ANR	4002420	Symbol	right . end . y		4001831						
ANR	4002421	Symbol	false		4001831						
ANR	4002422	Symbol	left . end		4001831						
ANR	4002423	Symbol	right		4001831						
ANR	4002424	Symbol	dev_proc_fill_trapezoid		4001831						
ANR	4002425	Symbol	left . start . y		4001831						
ANR	4002426	Symbol	left . start . x		4001831						
ANR	4002427	Symbol	* fill_trapezoid		4001831						
ANR	4002428	Symbol	t		4001831						
ANR	4002429	Symbol	left		4001831						
ANR	4002430	Symbol	ax		4001831						
ANR	4002431	Symbol	ay		4001831						
ANR	4002432	Function	gx_default_draw_thin_line	748:0:25258:35171							
ANR	4002433	FunctionDef	"gx_default_draw_thin_line (gx_device * dev , fixed fx0 , fixed fy0 , fixed fx1 , fixed fy1 , const gx_device_color * pdevc , gs_logical_operation_t lop , fixed adjustx , fixed adjusty)"		4002432	0					
ANR	4002434	CompoundStatement		753:0:25510:35171	4002432	0					
ANR	4002435	IdentifierDeclStatement	"int ix , iy , itox , itoy ;"	754:4:25516:25538	4002432	0	True				
ANR	4002436	IdentifierDecl	ix		4002432	0					
ANR	4002437	IdentifierDeclType	int		4002432	0					
ANR	4002438	Identifier	ix		4002432	1					
ANR	4002439	IdentifierDecl	iy		4002432	1					
ANR	4002440	IdentifierDeclType	int		4002432	0					
ANR	4002441	Identifier	iy		4002432	1					
ANR	4002442	IdentifierDecl	itox		4002432	2					
ANR	4002443	IdentifierDeclType	int		4002432	0					
ANR	4002444	Identifier	itox		4002432	1					
ANR	4002445	IdentifierDecl	itoy		4002432	3					
ANR	4002446	IdentifierDeclType	int		4002432	0					
ANR	4002447	Identifier	itoy		4002432	1					
ANR	4002448	IdentifierDeclStatement	int epsilon ;	755:4:25544:25555	4002432	1	True				
ANR	4002449	IdentifierDecl	epsilon		4002432	0					
ANR	4002450	IdentifierDeclType	int		4002432	0					
ANR	4002451	Identifier	epsilon		4002432	1					
ANR	4002452	ExpressionStatement	return_if_interrupt ( dev -> memory )	757:4:25562:25594	4002432	2	True				
ANR	4002453	CallExpression	return_if_interrupt ( dev -> memory )		4002432	0					
ANR	4002454	Callee	return_if_interrupt		4002432	0					
ANR	4002455	Identifier	return_if_interrupt		4002432	0					
ANR	4002456	ArgumentList	dev -> memory		4002432	1					
ANR	4002457	Argument	dev -> memory		4002432	0					
ANR	4002458	PtrMemberAccess	dev -> memory		4002432	0					
ANR	4002459	Identifier	dev		4002432	0					
ANR	4002460	Identifier	memory		4002432	1					
ANR	4002461	ExpressionStatement	epsilon = ( ( adjustx | adjusty ) == 0 ? fixed_epsilon : 0 )	776:4:26521:26577	4002432	3	True				
ANR	4002462	AssignmentExpression	epsilon = ( ( adjustx | adjusty ) == 0 ? fixed_epsilon : 0 )		4002432	0		=			
ANR	4002463	Identifier	epsilon		4002432	0					
ANR	4002464	ConditionalExpression	( adjustx | adjusty ) == 0 ? fixed_epsilon : 0		4002432	1					
ANR	4002465	Condition	( adjustx | adjusty ) == 0		4002432	0					
ANR	4002466	EqualityExpression	( adjustx | adjusty ) == 0		4002432	0		==			
ANR	4002467	InclusiveOrExpression	adjustx | adjusty		4002432	0		|			
ANR	4002468	Identifier	adjustx		4002432	0					
ANR	4002469	Identifier	adjusty		4002432	1					
ANR	4002470	PrimaryExpression	0		4002432	1					
ANR	4002471	Identifier	fixed_epsilon		4002432	1					
ANR	4002472	PrimaryExpression	0		4002432	2					
ANR	4002473	CompoundStatement		31:8:1183:1208	4002432	4					
ANR	4002474	IdentifierDeclStatement	fixed h = fy1 - fy0 ;	779:8:26594:26613	4002432	0	True				
ANR	4002475	IdentifierDecl	h = fy1 - fy0		4002432	0					
ANR	4002476	IdentifierDeclType	fixed		4002432	0					
ANR	4002477	Identifier	h		4002432	1					
ANR	4002478	AssignmentExpression	h = fy1 - fy0		4002432	2		=			
ANR	4002479	Identifier	h		4002432	0					
ANR	4002480	AdditiveExpression	fy1 - fy0		4002432	1		-			
ANR	4002481	Identifier	fy1		4002432	0					
ANR	4002482	Identifier	fy0		4002432	1					
ANR	4002483	IdentifierDeclStatement	fixed w = fx1 - fx0 ;	780:8:26623:26642	4002432	1	True				
ANR	4002484	IdentifierDecl	w = fx1 - fx0		4002432	0					
ANR	4002485	IdentifierDeclType	fixed		4002432	0					
ANR	4002486	Identifier	w		4002432	1					
ANR	4002487	AssignmentExpression	w = fx1 - fx0		4002432	2		=			
ANR	4002488	Identifier	w		4002432	0					
ANR	4002489	AdditiveExpression	fx1 - fx0		4002432	1		-			
ANR	4002490	Identifier	fx1		4002432	0					
ANR	4002491	Identifier	fx0		4002432	1					
ANR	4002492	IdentifierDeclStatement	fixed tf ;	781:8:26652:26660	4002432	2	True				
ANR	4002493	IdentifierDecl	tf		4002432	0					
ANR	4002494	IdentifierDeclType	fixed		4002432	0					
ANR	4002495	Identifier	tf		4002432	1					
ANR	4002496	IdentifierDeclStatement	bool swap_axes ;	782:8:26670:26684	4002432	3	True				
ANR	4002497	IdentifierDecl	swap_axes		4002432	0					
ANR	4002498	IdentifierDeclType	bool		4002432	0					
ANR	4002499	Identifier	swap_axes		4002432	1					
ANR	4002500	IdentifierDeclStatement	"gs_fixed_edge left , right ;"	783:8:26694:26719	4002432	4	True				
ANR	4002501	IdentifierDecl	left		4002432	0					
ANR	4002502	IdentifierDeclType	gs_fixed_edge		4002432	0					
ANR	4002503	Identifier	left		4002432	1					
ANR	4002504	IdentifierDecl	right		4002432	1					
ANR	4002505	IdentifierDeclType	gs_fixed_edge		4002432	0					
ANR	4002506	Identifier	right		4002432	1					
ANR	4002507	IfStatement	if ( ( w < 0 ? - w : w ) <= ( h < 0 ? - h : h ) )		4002432	5					
ANR	4002508	Condition	( w < 0 ? - w : w ) <= ( h < 0 ? - h : h )	785:12:26734:26769	4002432	0	True				
ANR	4002509	RelationalExpression	( w < 0 ? - w : w ) <= ( h < 0 ? - h : h )		4002432	0		<=			
ANR	4002510	ConditionalExpression	w < 0 ? - w : w		4002432	0					
ANR	4002511	Condition	w < 0		4002432	0					
ANR	4002512	RelationalExpression	w < 0		4002432	0		<			
ANR	4002513	Identifier	w		4002432	0					
ANR	4002514	PrimaryExpression	0		4002432	1					
ANR	4002515	UnaryOperationExpression	- w		4002432	1					
ANR	4002516	UnaryOperator	-		4002432	0					
ANR	4002517	Identifier	w		4002432	1					
ANR	4002518	Identifier	w		4002432	2					
ANR	4002519	ConditionalExpression	h < 0 ? - h : h		4002432	1					
ANR	4002520	Condition	h < 0		4002432	0					
ANR	4002521	RelationalExpression	h < 0		4002432	0		<			
ANR	4002522	Identifier	h		4002432	0					
ANR	4002523	PrimaryExpression	0		4002432	1					
ANR	4002524	UnaryOperationExpression	- h		4002432	1					
ANR	4002525	UnaryOperator	-		4002432	0					
ANR	4002526	Identifier	h		4002432	1					
ANR	4002527	Identifier	h		4002432	2					
ANR	4002528	CompoundStatement		33:50:1261:1261	4002432	1					
ANR	4002529	IfStatement	if ( h < 0 )		4002432	0					
ANR	4002530	Condition	h < 0	787:16:26833:26837	4002432	0	True				
ANR	4002531	RelationalExpression	h < 0		4002432	0		<			
ANR	4002532	Identifier	h		4002432	0					
ANR	4002533	PrimaryExpression	0		4002432	1					
ANR	4002534	ExpressionStatement	"SWAP ( fx0 , fx1 , tf ) , SWAP ( fy0 , fy1 , tf ) , h = - h"	788:16:26856:26922	4002432	1	True				
ANR	4002535	Expression	"SWAP ( fx0 , fx1 , tf ) , SWAP ( fy0 , fy1 , tf ) , h = - h"		4002432	0					
ANR	4002536	CallExpression	"SWAP ( fx0 , fx1 , tf )"		4002432	0					
ANR	4002537	Callee	SWAP		4002432	0					
ANR	4002538	Identifier	SWAP		4002432	0					
ANR	4002539	ArgumentList	fx0		4002432	1					
ANR	4002540	Argument	fx0		4002432	0					
ANR	4002541	Identifier	fx0		4002432	0					
ANR	4002542	Argument	fx1		4002432	1					
ANR	4002543	Identifier	fx1		4002432	0					
ANR	4002544	Argument	tf		4002432	2					
ANR	4002545	Identifier	tf		4002432	0					
ANR	4002546	Expression	"SWAP ( fy0 , fy1 , tf ) , h = - h"		4002432	1					
ANR	4002547	CallExpression	"SWAP ( fy0 , fy1 , tf )"		4002432	0					
ANR	4002548	Callee	SWAP		4002432	0					
ANR	4002549	Identifier	SWAP		4002432	0					
ANR	4002550	ArgumentList	fy0		4002432	1					
ANR	4002551	Argument	fy0		4002432	0					
ANR	4002552	Identifier	fy0		4002432	0					
ANR	4002553	Argument	fy1		4002432	1					
ANR	4002554	Identifier	fy1		4002432	0					
ANR	4002555	Argument	tf		4002432	2					
ANR	4002556	Identifier	tf		4002432	0					
ANR	4002557	AssignmentExpression	h = - h		4002432	1		=			
ANR	4002558	Identifier	h		4002432	0					
ANR	4002559	UnaryOperationExpression	- h		4002432	1					
ANR	4002560	UnaryOperator	-		4002432	0					
ANR	4002561	Identifier	h		4002432	1					
ANR	4002562	IfStatement	if ( w == 0 && adjusty )		4002432	1					
ANR	4002563	Condition	w == 0 && adjusty	801:16:27643:27659	4002432	0	True				
ANR	4002564	AndExpression	w == 0 && adjusty		4002432	0		&&			
ANR	4002565	EqualityExpression	w == 0		4002432	0		==			
ANR	4002566	Identifier	w		4002432	0					
ANR	4002567	PrimaryExpression	0		4002432	1					
ANR	4002568	Identifier	adjusty		4002432	1					
ANR	4002569	CompoundStatement		50:16:2169:2179	4002432	1					
ANR	4002570	IdentifierDeclStatement	int deltay ;	802:16:27680:27690	4002432	0	True				
ANR	4002571	IdentifierDecl	deltay		4002432	0					
ANR	4002572	IdentifierDeclType	int		4002432	0					
ANR	4002573	Identifier	deltay		4002432	1					
ANR	4002574	ExpressionStatement	deltay = int2fixed ( fixed2int_var ( fy1 ) ) + fixed_half - fy1	803:16:27708:27764	4002432	1	True				
ANR	4002575	AssignmentExpression	deltay = int2fixed ( fixed2int_var ( fy1 ) ) + fixed_half - fy1		4002432	0		=			
ANR	4002576	Identifier	deltay		4002432	0					
ANR	4002577	AdditiveExpression	int2fixed ( fixed2int_var ( fy1 ) ) + fixed_half - fy1		4002432	1		+			
ANR	4002578	CallExpression	int2fixed ( fixed2int_var ( fy1 ) )		4002432	0					
ANR	4002579	Callee	int2fixed		4002432	0					
ANR	4002580	Identifier	int2fixed		4002432	0					
ANR	4002581	ArgumentList	fixed2int_var ( fy1 )		4002432	1					
ANR	4002582	Argument	fixed2int_var ( fy1 )		4002432	0					
ANR	4002583	CallExpression	fixed2int_var ( fy1 )		4002432	0					
ANR	4002584	Callee	fixed2int_var		4002432	0					
ANR	4002585	Identifier	fixed2int_var		4002432	0					
ANR	4002586	ArgumentList	fy1		4002432	1					
ANR	4002587	Argument	fy1		4002432	0					
ANR	4002588	Identifier	fy1		4002432	0					
ANR	4002589	AdditiveExpression	fixed_half - fy1		4002432	1		-			
ANR	4002590	Identifier	fixed_half		4002432	0					
ANR	4002591	Identifier	fy1		4002432	1					
ANR	4002592	IfStatement	if ( ( deltay > 0 ) && ( deltay <= fixed_half ) )		4002432	2					
ANR	4002593	Condition	( deltay > 0 ) && ( deltay <= fixed_half )	805:20:27787:27824	4002432	0	True				
ANR	4002594	AndExpression	( deltay > 0 ) && ( deltay <= fixed_half )		4002432	0		&&			
ANR	4002595	RelationalExpression	deltay > 0		4002432	0		>			
ANR	4002596	Identifier	deltay		4002432	0					
ANR	4002597	PrimaryExpression	0		4002432	1					
ANR	4002598	RelationalExpression	deltay <= fixed_half		4002432	1		<=			
ANR	4002599	Identifier	deltay		4002432	0					
ANR	4002600	Identifier	fixed_half		4002432	1					
ANR	4002601	CompoundStatement		55:20:2354:2563	4002432	1					
ANR	4002602	IdentifierDeclStatement	"int c = gx_fill_rectangle_device_rop ( fixed2int_var ( fx1 ) , fixed2int_var ( fy1 ) , 1 , 1 , pdevc , dev , lop ) ;"	807:20:27865:28074	4002432	0	True				
ANR	4002603	IdentifierDecl	"c = gx_fill_rectangle_device_rop ( fixed2int_var ( fx1 ) , fixed2int_var ( fy1 ) , 1 , 1 , pdevc , dev , lop )"		4002432	0					
ANR	4002604	IdentifierDeclType	int		4002432	0					
ANR	4002605	Identifier	c		4002432	1					
ANR	4002606	AssignmentExpression	"c = gx_fill_rectangle_device_rop ( fixed2int_var ( fx1 ) , fixed2int_var ( fy1 ) , 1 , 1 , pdevc , dev , lop )"		4002432	2		=			
ANR	4002607	Identifier	c		4002432	0					
ANR	4002608	CallExpression	"gx_fill_rectangle_device_rop ( fixed2int_var ( fx1 ) , fixed2int_var ( fy1 ) , 1 , 1 , pdevc , dev , lop )"		4002432	1					
ANR	4002609	Callee	gx_fill_rectangle_device_rop		4002432	0					
ANR	4002610	Identifier	gx_fill_rectangle_device_rop		4002432	0					
ANR	4002611	ArgumentList	fixed2int_var ( fx1 )		4002432	1					
ANR	4002612	Argument	fixed2int_var ( fx1 )		4002432	0					
ANR	4002613	CallExpression	fixed2int_var ( fx1 )		4002432	0					
ANR	4002614	Callee	fixed2int_var		4002432	0					
ANR	4002615	Identifier	fixed2int_var		4002432	0					
ANR	4002616	ArgumentList	fx1		4002432	1					
ANR	4002617	Argument	fx1		4002432	0					
ANR	4002618	Identifier	fx1		4002432	0					
ANR	4002619	Argument	fixed2int_var ( fy1 )		4002432	1					
ANR	4002620	CallExpression	fixed2int_var ( fy1 )		4002432	0					
ANR	4002621	Callee	fixed2int_var		4002432	0					
ANR	4002622	Identifier	fixed2int_var		4002432	0					
ANR	4002623	ArgumentList	fy1		4002432	1					
ANR	4002624	Argument	fy1		4002432	0					
ANR	4002625	Identifier	fy1		4002432	0					
ANR	4002626	Argument	1		4002432	2					
ANR	4002627	PrimaryExpression	1		4002432	0					
ANR	4002628	Argument	1		4002432	3					
ANR	4002629	PrimaryExpression	1		4002432	0					
ANR	4002630	Argument	pdevc		4002432	4					
ANR	4002631	Identifier	pdevc		4002432	0					
ANR	4002632	Argument	dev		4002432	5					
ANR	4002633	Identifier	dev		4002432	0					
ANR	4002634	Argument	lop		4002432	6					
ANR	4002635	Identifier	lop		4002432	0					
ANR	4002636	IfStatement	if ( c < 0 )		4002432	1					
ANR	4002637	Condition	c < 0	810:24:28100:28104	4002432	0	True				
ANR	4002638	RelationalExpression	c < 0		4002432	0		<			
ANR	4002639	Identifier	c		4002432	0					
ANR	4002640	PrimaryExpression	0		4002432	1					
ANR	4002641	ReturnStatement	return c ;	810:31:28107:28115	4002432	1	True				
ANR	4002642	Identifier	c		4002432	0					
ANR	4002643	ExpressionStatement	deltay = int2fixed ( fixed2int_var ( fy0 ) ) + fixed_half - fy0	812:16:28151:28207	4002432	3	True				
ANR	4002644	AssignmentExpression	deltay = int2fixed ( fixed2int_var ( fy0 ) ) + fixed_half - fy0		4002432	0		=			
ANR	4002645	Identifier	deltay		4002432	0					
ANR	4002646	AdditiveExpression	int2fixed ( fixed2int_var ( fy0 ) ) + fixed_half - fy0		4002432	1		+			
ANR	4002647	CallExpression	int2fixed ( fixed2int_var ( fy0 ) )		4002432	0					
ANR	4002648	Callee	int2fixed		4002432	0					
ANR	4002649	Identifier	int2fixed		4002432	0					
ANR	4002650	ArgumentList	fixed2int_var ( fy0 )		4002432	1					
ANR	4002651	Argument	fixed2int_var ( fy0 )		4002432	0					
ANR	4002652	CallExpression	fixed2int_var ( fy0 )		4002432	0					
ANR	4002653	Callee	fixed2int_var		4002432	0					
ANR	4002654	Identifier	fixed2int_var		4002432	0					
ANR	4002655	ArgumentList	fy0		4002432	1					
ANR	4002656	Argument	fy0		4002432	0					
ANR	4002657	Identifier	fy0		4002432	0					
ANR	4002658	AdditiveExpression	fixed_half - fy0		4002432	1		-			
ANR	4002659	Identifier	fixed_half		4002432	0					
ANR	4002660	Identifier	fy0		4002432	1					
ANR	4002661	IfStatement	if ( ( deltay < 0 ) && ( deltay >= - fixed_half ) )		4002432	4					
ANR	4002662	Condition	( deltay < 0 ) && ( deltay >= - fixed_half )	814:20:28230:28268	4002432	0	True				
ANR	4002663	AndExpression	( deltay < 0 ) && ( deltay >= - fixed_half )		4002432	0		&&			
ANR	4002664	RelationalExpression	deltay < 0		4002432	0		<			
ANR	4002665	Identifier	deltay		4002432	0					
ANR	4002666	PrimaryExpression	0		4002432	1					
ANR	4002667	RelationalExpression	deltay >= - fixed_half		4002432	1		>=			
ANR	4002668	Identifier	deltay		4002432	0					
ANR	4002669	UnaryOperationExpression	- fixed_half		4002432	1					
ANR	4002670	UnaryOperator	-		4002432	0					
ANR	4002671	Identifier	fixed_half		4002432	1					
ANR	4002672	CompoundStatement		64:20:2798:3007	4002432	1					
ANR	4002673	IdentifierDeclStatement	"int c = gx_fill_rectangle_device_rop ( fixed2int_var ( fx0 ) , fixed2int_var ( fy0 ) , 1 , 1 , pdevc , dev , lop ) ;"	816:20:28309:28518	4002432	0	True				
ANR	4002674	IdentifierDecl	"c = gx_fill_rectangle_device_rop ( fixed2int_var ( fx0 ) , fixed2int_var ( fy0 ) , 1 , 1 , pdevc , dev , lop )"		4002432	0					
ANR	4002675	IdentifierDeclType	int		4002432	0					
ANR	4002676	Identifier	c		4002432	1					
ANR	4002677	AssignmentExpression	"c = gx_fill_rectangle_device_rop ( fixed2int_var ( fx0 ) , fixed2int_var ( fy0 ) , 1 , 1 , pdevc , dev , lop )"		4002432	2		=			
ANR	4002678	Identifier	c		4002432	0					
ANR	4002679	CallExpression	"gx_fill_rectangle_device_rop ( fixed2int_var ( fx0 ) , fixed2int_var ( fy0 ) , 1 , 1 , pdevc , dev , lop )"		4002432	1					
ANR	4002680	Callee	gx_fill_rectangle_device_rop		4002432	0					
ANR	4002681	Identifier	gx_fill_rectangle_device_rop		4002432	0					
ANR	4002682	ArgumentList	fixed2int_var ( fx0 )		4002432	1					
ANR	4002683	Argument	fixed2int_var ( fx0 )		4002432	0					
ANR	4002684	CallExpression	fixed2int_var ( fx0 )		4002432	0					
ANR	4002685	Callee	fixed2int_var		4002432	0					
ANR	4002686	Identifier	fixed2int_var		4002432	0					
ANR	4002687	ArgumentList	fx0		4002432	1					
ANR	4002688	Argument	fx0		4002432	0					
ANR	4002689	Identifier	fx0		4002432	0					
ANR	4002690	Argument	fixed2int_var ( fy0 )		4002432	1					
ANR	4002691	CallExpression	fixed2int_var ( fy0 )		4002432	0					
ANR	4002692	Callee	fixed2int_var		4002432	0					
ANR	4002693	Identifier	fixed2int_var		4002432	0					
ANR	4002694	ArgumentList	fy0		4002432	1					
ANR	4002695	Argument	fy0		4002432	0					
ANR	4002696	Identifier	fy0		4002432	0					
ANR	4002697	Argument	1		4002432	2					
ANR	4002698	PrimaryExpression	1		4002432	0					
ANR	4002699	Argument	1		4002432	3					
ANR	4002700	PrimaryExpression	1		4002432	0					
ANR	4002701	Argument	pdevc		4002432	4					
ANR	4002702	Identifier	pdevc		4002432	0					
ANR	4002703	Argument	dev		4002432	5					
ANR	4002704	Identifier	dev		4002432	0					
ANR	4002705	Argument	lop		4002432	6					
ANR	4002706	Identifier	lop		4002432	0					
ANR	4002707	IfStatement	if ( c < 0 )		4002432	1					
ANR	4002708	Condition	c < 0	819:24:28544:28548	4002432	0	True				
ANR	4002709	RelationalExpression	c < 0		4002432	0		<			
ANR	4002710	Identifier	c		4002432	0					
ANR	4002711	PrimaryExpression	0		4002432	1					
ANR	4002712	ReturnStatement	return c ;	819:31:28551:28559	4002432	1	True				
ANR	4002713	Identifier	c		4002432	0					
ANR	4002714	ElseStatement	else		4002432	0					
ANR	4002715	IfStatement	if ( w != 0 )		4002432	0					
ANR	4002716	Condition	w != 0	821:23:28602:28607	4002432	0	True				
ANR	4002717	EqualityExpression	w != 0		4002432	0		!=			
ANR	4002718	Identifier	w		4002432	0					
ANR	4002719	PrimaryExpression	0		4002432	1					
ANR	4002720	CompoundStatement		70:16:3117:3135	4002432	1					
ANR	4002721	IdentifierDeclStatement	"int deltax , deltay ;"	822:16:28628:28646	4002432	0	True				
ANR	4002722	IdentifierDecl	deltax		4002432	0					
ANR	4002723	IdentifierDeclType	int		4002432	0					
ANR	4002724	Identifier	deltax		4002432	1					
ANR	4002725	IdentifierDecl	deltay		4002432	1					
ANR	4002726	IdentifierDeclType	int		4002432	0					
ANR	4002727	Identifier	deltay		4002432	1					
ANR	4002728	ExpressionStatement	deltay = int2fixed ( fixed2int_var ( fy1 ) ) + fixed_half - fy1	823:16:28664:28720	4002432	1	True				
ANR	4002729	AssignmentExpression	deltay = int2fixed ( fixed2int_var ( fy1 ) ) + fixed_half - fy1		4002432	0		=			
ANR	4002730	Identifier	deltay		4002432	0					
ANR	4002731	AdditiveExpression	int2fixed ( fixed2int_var ( fy1 ) ) + fixed_half - fy1		4002432	1		+			
ANR	4002732	CallExpression	int2fixed ( fixed2int_var ( fy1 ) )		4002432	0					
ANR	4002733	Callee	int2fixed		4002432	0					
ANR	4002734	Identifier	int2fixed		4002432	0					
ANR	4002735	ArgumentList	fixed2int_var ( fy1 )		4002432	1					
ANR	4002736	Argument	fixed2int_var ( fy1 )		4002432	0					
ANR	4002737	CallExpression	fixed2int_var ( fy1 )		4002432	0					
ANR	4002738	Callee	fixed2int_var		4002432	0					
ANR	4002739	Identifier	fixed2int_var		4002432	0					
ANR	4002740	ArgumentList	fy1		4002432	1					
ANR	4002741	Argument	fy1		4002432	0					
ANR	4002742	Identifier	fy1		4002432	0					
ANR	4002743	AdditiveExpression	fixed_half - fy1		4002432	1		-			
ANR	4002744	Identifier	fixed_half		4002432	0					
ANR	4002745	Identifier	fy1		4002432	1					
ANR	4002746	ExpressionStatement	deltax = int2fixed ( fixed2int_var ( fx1 ) ) + fixed_half - fx1	824:16:28738:28794	4002432	2	True				
ANR	4002747	AssignmentExpression	deltax = int2fixed ( fixed2int_var ( fx1 ) ) + fixed_half - fx1		4002432	0		=			
ANR	4002748	Identifier	deltax		4002432	0					
ANR	4002749	AdditiveExpression	int2fixed ( fixed2int_var ( fx1 ) ) + fixed_half - fx1		4002432	1		+			
ANR	4002750	CallExpression	int2fixed ( fixed2int_var ( fx1 ) )		4002432	0					
ANR	4002751	Callee	int2fixed		4002432	0					
ANR	4002752	Identifier	int2fixed		4002432	0					
ANR	4002753	ArgumentList	fixed2int_var ( fx1 )		4002432	1					
ANR	4002754	Argument	fixed2int_var ( fx1 )		4002432	0					
ANR	4002755	CallExpression	fixed2int_var ( fx1 )		4002432	0					
ANR	4002756	Callee	fixed2int_var		4002432	0					
ANR	4002757	Identifier	fixed2int_var		4002432	0					
ANR	4002758	ArgumentList	fx1		4002432	1					
ANR	4002759	Argument	fx1		4002432	0					
ANR	4002760	Identifier	fx1		4002432	0					
ANR	4002761	AdditiveExpression	fixed_half - fx1		4002432	1		-			
ANR	4002762	Identifier	fixed_half		4002432	0					
ANR	4002763	Identifier	fx1		4002432	1					
ANR	4002764	IfStatement	if ( deltax < 0 )		4002432	3					
ANR	4002765	Condition	deltax < 0	826:20:28817:28826	4002432	0	True				
ANR	4002766	RelationalExpression	deltax < 0		4002432	0		<			
ANR	4002767	Identifier	deltax		4002432	0					
ANR	4002768	PrimaryExpression	0		4002432	1					
ANR	4002769	ExpressionStatement	deltax = - deltax	826:32:28829:28843	4002432	1	True				
ANR	4002770	AssignmentExpression	deltax = - deltax		4002432	0		=			
ANR	4002771	Identifier	deltax		4002432	0					
ANR	4002772	UnaryOperationExpression	- deltax		4002432	1					
ANR	4002773	UnaryOperator	-		4002432	0					
ANR	4002774	Identifier	deltax		4002432	1					
ANR	4002775	IfStatement	if ( ( deltay > 0 ) && ( deltay <= fixed_half ) && ( deltay + deltax <= fixed_half ) )		4002432	4					
ANR	4002776	Condition	( deltay > 0 ) && ( deltay <= fixed_half ) && ( deltay + deltax <= fixed_half )	827:20:28865:28955	4002432	0	True				
ANR	4002777	AndExpression	( deltay > 0 ) && ( deltay <= fixed_half ) && ( deltay + deltax <= fixed_half )		4002432	0		&&			
ANR	4002778	RelationalExpression	deltay > 0		4002432	0		>			
ANR	4002779	Identifier	deltay		4002432	0					
ANR	4002780	PrimaryExpression	0		4002432	1					
ANR	4002781	AndExpression	( deltay <= fixed_half ) && ( deltay + deltax <= fixed_half )		4002432	1		&&			
ANR	4002782	RelationalExpression	deltay <= fixed_half		4002432	0		<=			
ANR	4002783	Identifier	deltay		4002432	0					
ANR	4002784	Identifier	fixed_half		4002432	1					
ANR	4002785	RelationalExpression	deltay + deltax <= fixed_half		4002432	1		<=			
ANR	4002786	AdditiveExpression	deltay + deltax		4002432	0		+			
ANR	4002787	Identifier	deltay		4002432	0					
ANR	4002788	Identifier	deltax		4002432	1					
ANR	4002789	Identifier	fixed_half		4002432	1					
ANR	4002790	CompoundStatement		78:20:3485:3694	4002432	1					
ANR	4002791	IdentifierDeclStatement	"int c = gx_fill_rectangle_device_rop ( fixed2int_var ( fx1 ) , fixed2int_var ( fy1 ) , 1 , 1 , pdevc , dev , lop ) ;"	830:20:28996:29205	4002432	0	True				
ANR	4002792	IdentifierDecl	"c = gx_fill_rectangle_device_rop ( fixed2int_var ( fx1 ) , fixed2int_var ( fy1 ) , 1 , 1 , pdevc , dev , lop )"		4002432	0					
ANR	4002793	IdentifierDeclType	int		4002432	0					
ANR	4002794	Identifier	c		4002432	1					
ANR	4002795	AssignmentExpression	"c = gx_fill_rectangle_device_rop ( fixed2int_var ( fx1 ) , fixed2int_var ( fy1 ) , 1 , 1 , pdevc , dev , lop )"		4002432	2		=			
ANR	4002796	Identifier	c		4002432	0					
ANR	4002797	CallExpression	"gx_fill_rectangle_device_rop ( fixed2int_var ( fx1 ) , fixed2int_var ( fy1 ) , 1 , 1 , pdevc , dev , lop )"		4002432	1					
ANR	4002798	Callee	gx_fill_rectangle_device_rop		4002432	0					
ANR	4002799	Identifier	gx_fill_rectangle_device_rop		4002432	0					
ANR	4002800	ArgumentList	fixed2int_var ( fx1 )		4002432	1					
ANR	4002801	Argument	fixed2int_var ( fx1 )		4002432	0					
ANR	4002802	CallExpression	fixed2int_var ( fx1 )		4002432	0					
ANR	4002803	Callee	fixed2int_var		4002432	0					
ANR	4002804	Identifier	fixed2int_var		4002432	0					
ANR	4002805	ArgumentList	fx1		4002432	1					
ANR	4002806	Argument	fx1		4002432	0					
ANR	4002807	Identifier	fx1		4002432	0					
ANR	4002808	Argument	fixed2int_var ( fy1 )		4002432	1					
ANR	4002809	CallExpression	fixed2int_var ( fy1 )		4002432	0					
ANR	4002810	Callee	fixed2int_var		4002432	0					
ANR	4002811	Identifier	fixed2int_var		4002432	0					
ANR	4002812	ArgumentList	fy1		4002432	1					
ANR	4002813	Argument	fy1		4002432	0					
ANR	4002814	Identifier	fy1		4002432	0					
ANR	4002815	Argument	1		4002432	2					
ANR	4002816	PrimaryExpression	1		4002432	0					
ANR	4002817	Argument	1		4002432	3					
ANR	4002818	PrimaryExpression	1		4002432	0					
ANR	4002819	Argument	pdevc		4002432	4					
ANR	4002820	Identifier	pdevc		4002432	0					
ANR	4002821	Argument	dev		4002432	5					
ANR	4002822	Identifier	dev		4002432	0					
ANR	4002823	Argument	lop		4002432	6					
ANR	4002824	Identifier	lop		4002432	0					
ANR	4002825	IfStatement	if ( c < 0 )		4002432	1					
ANR	4002826	Condition	c < 0	833:24:29231:29235	4002432	0	True				
ANR	4002827	RelationalExpression	c < 0		4002432	0		<			
ANR	4002828	Identifier	c		4002432	0					
ANR	4002829	PrimaryExpression	0		4002432	1					
ANR	4002830	ReturnStatement	return c ;	833:31:29238:29246	4002432	1	True				
ANR	4002831	Identifier	c		4002432	0					
ANR	4002832	ExpressionStatement	deltay = int2fixed ( fixed2int_var ( fy0 ) ) + fixed_half - fy0	835:16:29282:29338	4002432	5	True				
ANR	4002833	AssignmentExpression	deltay = int2fixed ( fixed2int_var ( fy0 ) ) + fixed_half - fy0		4002432	0		=			
ANR	4002834	Identifier	deltay		4002432	0					
ANR	4002835	AdditiveExpression	int2fixed ( fixed2int_var ( fy0 ) ) + fixed_half - fy0		4002432	1		+			
ANR	4002836	CallExpression	int2fixed ( fixed2int_var ( fy0 ) )		4002432	0					
ANR	4002837	Callee	int2fixed		4002432	0					
ANR	4002838	Identifier	int2fixed		4002432	0					
ANR	4002839	ArgumentList	fixed2int_var ( fy0 )		4002432	1					
ANR	4002840	Argument	fixed2int_var ( fy0 )		4002432	0					
ANR	4002841	CallExpression	fixed2int_var ( fy0 )		4002432	0					
ANR	4002842	Callee	fixed2int_var		4002432	0					
ANR	4002843	Identifier	fixed2int_var		4002432	0					
ANR	4002844	ArgumentList	fy0		4002432	1					
ANR	4002845	Argument	fy0		4002432	0					
ANR	4002846	Identifier	fy0		4002432	0					
ANR	4002847	AdditiveExpression	fixed_half - fy0		4002432	1		-			
ANR	4002848	Identifier	fixed_half		4002432	0					
ANR	4002849	Identifier	fy0		4002432	1					
ANR	4002850	ExpressionStatement	deltax = int2fixed ( fixed2int_var ( fx0 ) ) + fixed_half - fx0	836:16:29356:29412	4002432	6	True				
ANR	4002851	AssignmentExpression	deltax = int2fixed ( fixed2int_var ( fx0 ) ) + fixed_half - fx0		4002432	0		=			
ANR	4002852	Identifier	deltax		4002432	0					
ANR	4002853	AdditiveExpression	int2fixed ( fixed2int_var ( fx0 ) ) + fixed_half - fx0		4002432	1		+			
ANR	4002854	CallExpression	int2fixed ( fixed2int_var ( fx0 ) )		4002432	0					
ANR	4002855	Callee	int2fixed		4002432	0					
ANR	4002856	Identifier	int2fixed		4002432	0					
ANR	4002857	ArgumentList	fixed2int_var ( fx0 )		4002432	1					
ANR	4002858	Argument	fixed2int_var ( fx0 )		4002432	0					
ANR	4002859	CallExpression	fixed2int_var ( fx0 )		4002432	0					
ANR	4002860	Callee	fixed2int_var		4002432	0					
ANR	4002861	Identifier	fixed2int_var		4002432	0					
ANR	4002862	ArgumentList	fx0		4002432	1					
ANR	4002863	Argument	fx0		4002432	0					
ANR	4002864	Identifier	fx0		4002432	0					
ANR	4002865	AdditiveExpression	fixed_half - fx0		4002432	1		-			
ANR	4002866	Identifier	fixed_half		4002432	0					
ANR	4002867	Identifier	fx0		4002432	1					
ANR	4002868	IfStatement	if ( deltax < 0 )		4002432	7					
ANR	4002869	Condition	deltax < 0	838:20:29435:29444	4002432	0	True				
ANR	4002870	RelationalExpression	deltax < 0		4002432	0		<			
ANR	4002871	Identifier	deltax		4002432	0					
ANR	4002872	PrimaryExpression	0		4002432	1					
ANR	4002873	ExpressionStatement	deltax = - deltax	838:32:29447:29461	4002432	1	True				
ANR	4002874	AssignmentExpression	deltax = - deltax		4002432	0		=			
ANR	4002875	Identifier	deltax		4002432	0					
ANR	4002876	UnaryOperationExpression	- deltax		4002432	1					
ANR	4002877	UnaryOperator	-		4002432	0					
ANR	4002878	Identifier	deltax		4002432	1					
ANR	4002879	IfStatement	if ( ( deltay < 0 ) && ( deltay >= - fixed_half ) && ( - deltay + deltax <= fixed_half ) )		4002432	8					
ANR	4002880	Condition	( deltay < 0 ) && ( deltay >= - fixed_half ) && ( - deltay + deltax <= fixed_half )	839:20:29483:29575	4002432	0	True				
ANR	4002881	AndExpression	( deltay < 0 ) && ( deltay >= - fixed_half ) && ( - deltay + deltax <= fixed_half )		4002432	0		&&			
ANR	4002882	RelationalExpression	deltay < 0		4002432	0		<			
ANR	4002883	Identifier	deltay		4002432	0					
ANR	4002884	PrimaryExpression	0		4002432	1					
ANR	4002885	AndExpression	( deltay >= - fixed_half ) && ( - deltay + deltax <= fixed_half )		4002432	1		&&			
ANR	4002886	RelationalExpression	deltay >= - fixed_half		4002432	0		>=			
ANR	4002887	Identifier	deltay		4002432	0					
ANR	4002888	UnaryOperationExpression	- fixed_half		4002432	1					
ANR	4002889	UnaryOperator	-		4002432	0					
ANR	4002890	Identifier	fixed_half		4002432	1					
ANR	4002891	RelationalExpression	- deltay + deltax <= fixed_half		4002432	1		<=			
ANR	4002892	AdditiveExpression	- deltay + deltax		4002432	0		+			
ANR	4002893	UnaryOperationExpression	- deltay		4002432	0					
ANR	4002894	UnaryOperator	-		4002432	0					
ANR	4002895	Identifier	deltay		4002432	1					
ANR	4002896	Identifier	deltax		4002432	1					
ANR	4002897	Identifier	fixed_half		4002432	1					
ANR	4002898	CompoundStatement		90:20:4105:4314	4002432	1					
ANR	4002899	IdentifierDeclStatement	"int c = gx_fill_rectangle_device_rop ( fixed2int_var ( fx0 ) , fixed2int_var ( fy0 ) , 1 , 1 , pdevc , dev , lop ) ;"	842:20:29616:29825	4002432	0	True				
ANR	4002900	IdentifierDecl	"c = gx_fill_rectangle_device_rop ( fixed2int_var ( fx0 ) , fixed2int_var ( fy0 ) , 1 , 1 , pdevc , dev , lop )"		4002432	0					
ANR	4002901	IdentifierDeclType	int		4002432	0					
ANR	4002902	Identifier	c		4002432	1					
ANR	4002903	AssignmentExpression	"c = gx_fill_rectangle_device_rop ( fixed2int_var ( fx0 ) , fixed2int_var ( fy0 ) , 1 , 1 , pdevc , dev , lop )"		4002432	2		=			
ANR	4002904	Identifier	c		4002432	0					
ANR	4002905	CallExpression	"gx_fill_rectangle_device_rop ( fixed2int_var ( fx0 ) , fixed2int_var ( fy0 ) , 1 , 1 , pdevc , dev , lop )"		4002432	1					
ANR	4002906	Callee	gx_fill_rectangle_device_rop		4002432	0					
ANR	4002907	Identifier	gx_fill_rectangle_device_rop		4002432	0					
ANR	4002908	ArgumentList	fixed2int_var ( fx0 )		4002432	1					
ANR	4002909	Argument	fixed2int_var ( fx0 )		4002432	0					
ANR	4002910	CallExpression	fixed2int_var ( fx0 )		4002432	0					
ANR	4002911	Callee	fixed2int_var		4002432	0					
ANR	4002912	Identifier	fixed2int_var		4002432	0					
ANR	4002913	ArgumentList	fx0		4002432	1					
ANR	4002914	Argument	fx0		4002432	0					
ANR	4002915	Identifier	fx0		4002432	0					
ANR	4002916	Argument	fixed2int_var ( fy0 )		4002432	1					
ANR	4002917	CallExpression	fixed2int_var ( fy0 )		4002432	0					
ANR	4002918	Callee	fixed2int_var		4002432	0					
ANR	4002919	Identifier	fixed2int_var		4002432	0					
ANR	4002920	ArgumentList	fy0		4002432	1					
ANR	4002921	Argument	fy0		4002432	0					
ANR	4002922	Identifier	fy0		4002432	0					
ANR	4002923	Argument	1		4002432	2					
ANR	4002924	PrimaryExpression	1		4002432	0					
ANR	4002925	Argument	1		4002432	3					
ANR	4002926	PrimaryExpression	1		4002432	0					
ANR	4002927	Argument	pdevc		4002432	4					
ANR	4002928	Identifier	pdevc		4002432	0					
ANR	4002929	Argument	dev		4002432	5					
ANR	4002930	Identifier	dev		4002432	0					
ANR	4002931	Argument	lop		4002432	6					
ANR	4002932	Identifier	lop		4002432	0					
ANR	4002933	IfStatement	if ( c < 0 )		4002432	1					
ANR	4002934	Condition	c < 0	845:24:29851:29855	4002432	0	True				
ANR	4002935	RelationalExpression	c < 0		4002432	0		<			
ANR	4002936	Identifier	c		4002432	0					
ANR	4002937	PrimaryExpression	0		4002432	1					
ANR	4002938	ReturnStatement	return c ;	845:31:29858:29866	4002432	1	True				
ANR	4002939	Identifier	c		4002432	0					
ANR	4002940	ExpressionStatement	ix = fixed2int_var ( fx0 - epsilon )	849:12:29971:30004	4002432	2	True				
ANR	4002941	AssignmentExpression	ix = fixed2int_var ( fx0 - epsilon )		4002432	0		=			
ANR	4002942	Identifier	ix		4002432	0					
ANR	4002943	CallExpression	fixed2int_var ( fx0 - epsilon )		4002432	1					
ANR	4002944	Callee	fixed2int_var		4002432	0					
ANR	4002945	Identifier	fixed2int_var		4002432	0					
ANR	4002946	ArgumentList	fx0 - epsilon		4002432	1					
ANR	4002947	Argument	fx0 - epsilon		4002432	0					
ANR	4002948	AdditiveExpression	fx0 - epsilon		4002432	0		-			
ANR	4002949	Identifier	fx0		4002432	0					
ANR	4002950	Identifier	epsilon		4002432	1					
ANR	4002951	ExpressionStatement	itox = fixed2int_var ( fx1 - epsilon )	850:12:30018:30051	4002432	3	True				
ANR	4002952	AssignmentExpression	itox = fixed2int_var ( fx1 - epsilon )		4002432	0		=			
ANR	4002953	Identifier	itox		4002432	0					
ANR	4002954	CallExpression	fixed2int_var ( fx1 - epsilon )		4002432	1					
ANR	4002955	Callee	fixed2int_var		4002432	0					
ANR	4002956	Identifier	fixed2int_var		4002432	0					
ANR	4002957	ArgumentList	fx1 - epsilon		4002432	1					
ANR	4002958	Argument	fx1 - epsilon		4002432	0					
ANR	4002959	AdditiveExpression	fx1 - epsilon		4002432	0		-			
ANR	4002960	Identifier	fx1		4002432	0					
ANR	4002961	Identifier	epsilon		4002432	1					
ANR	4002962	IfStatement	if ( itox == ix )		4002432	4					
ANR	4002963	Condition	itox == ix	851:16:30069:30078	4002432	0	True				
ANR	4002964	EqualityExpression	itox == ix		4002432	0		==			
ANR	4002965	Identifier	itox		4002432	0					
ANR	4002966	Identifier	ix		4002432	1					
ANR	4002967	CompoundStatement		99:28:4570:4570	4002432	1					
ANR	4002968	ExpressionStatement	iy = fixed2int_var ( fy0 + fixed_half - fixed_epsilon )	854:16:30217:30267	4002432	0	True				
ANR	4002969	AssignmentExpression	iy = fixed2int_var ( fy0 + fixed_half - fixed_epsilon )		4002432	0		=			
ANR	4002970	Identifier	iy		4002432	0					
ANR	4002971	CallExpression	fixed2int_var ( fy0 + fixed_half - fixed_epsilon )		4002432	1					
ANR	4002972	Callee	fixed2int_var		4002432	0					
ANR	4002973	Identifier	fixed2int_var		4002432	0					
ANR	4002974	ArgumentList	fy0 + fixed_half - fixed_epsilon		4002432	1					
ANR	4002975	Argument	fy0 + fixed_half - fixed_epsilon		4002432	0					
ANR	4002976	AdditiveExpression	fy0 + fixed_half - fixed_epsilon		4002432	0		+			
ANR	4002977	Identifier	fy0		4002432	0					
ANR	4002978	AdditiveExpression	fixed_half - fixed_epsilon		4002432	1		-			
ANR	4002979	Identifier	fixed_half		4002432	0					
ANR	4002980	Identifier	fixed_epsilon		4002432	1					
ANR	4002981	ExpressionStatement	itoy = fixed2int_var ( fy1 + fixed_half - fixed_epsilon )	855:16:30285:30335	4002432	1	True				
ANR	4002982	AssignmentExpression	itoy = fixed2int_var ( fy1 + fixed_half - fixed_epsilon )		4002432	0		=			
ANR	4002983	Identifier	itoy		4002432	0					
ANR	4002984	CallExpression	fixed2int_var ( fy1 + fixed_half - fixed_epsilon )		4002432	1					
ANR	4002985	Callee	fixed2int_var		4002432	0					
ANR	4002986	Identifier	fixed2int_var		4002432	0					
ANR	4002987	ArgumentList	fy1 + fixed_half - fixed_epsilon		4002432	1					
ANR	4002988	Argument	fy1 + fixed_half - fixed_epsilon		4002432	0					
ANR	4002989	AdditiveExpression	fy1 + fixed_half - fixed_epsilon		4002432	0		+			
ANR	4002990	Identifier	fy1		4002432	0					
ANR	4002991	AdditiveExpression	fixed_half - fixed_epsilon		4002432	1		-			
ANR	4002992	Identifier	fixed_half		4002432	0					
ANR	4002993	Identifier	fixed_epsilon		4002432	1					
ANR	4002994	ExpressionStatement	itoy = itoy - iy	856:16:30353:30369	4002432	2	True				
ANR	4002995	AssignmentExpression	itoy = itoy - iy		4002432	0		=			
ANR	4002996	Identifier	itoy		4002432	0					
ANR	4002997	AdditiveExpression	itoy - iy		4002432	1		-			
ANR	4002998	Identifier	itoy		4002432	0					
ANR	4002999	Identifier	iy		4002432	1					
ANR	4003000	IfStatement	if ( itoy <= 0 )		4002432	3					
ANR	4003001	Condition	itoy <= 0	857:20:30391:30399	4002432	0	True				
ANR	4003002	RelationalExpression	itoy <= 0		4002432	0		<=			
ANR	4003003	Identifier	itoy		4002432	0					
ANR	4003004	PrimaryExpression	0		4002432	1					
ANR	4003005	CompoundStatement		105:31:4891:4891	4002432	1					
ANR	4003006	ReturnStatement	return 0 ;	860:20:30554:30562	4002432	0	True				
ANR	4003007	PrimaryExpression	0		4002432	0					
ANR	4003008	ReturnStatement	"return gx_fill_rectangle_device_rop ( ix , iy , 1 , itoy , pdevc , dev , lop ) ;"	862:16:30598:30719	4002432	4	True				
ANR	4003009	CallExpression	"gx_fill_rectangle_device_rop ( ix , iy , 1 , itoy , pdevc , dev , lop )"		4002432	0					
ANR	4003010	Callee	gx_fill_rectangle_device_rop		4002432	0					
ANR	4003011	Identifier	gx_fill_rectangle_device_rop		4002432	0					
ANR	4003012	ArgumentList	ix		4002432	1					
ANR	4003013	Argument	ix		4002432	0					
ANR	4003014	Identifier	ix		4002432	0					
ANR	4003015	Argument	iy		4002432	1					
ANR	4003016	Identifier	iy		4002432	0					
ANR	4003017	Argument	1		4002432	2					
ANR	4003018	PrimaryExpression	1		4002432	0					
ANR	4003019	Argument	itoy		4002432	3					
ANR	4003020	Identifier	itoy		4002432	0					
ANR	4003021	Argument	pdevc		4002432	4					
ANR	4003022	Identifier	pdevc		4002432	0					
ANR	4003023	Argument	dev		4002432	5					
ANR	4003024	Identifier	dev		4002432	0					
ANR	4003025	Argument	lop		4002432	6					
ANR	4003026	Identifier	lop		4002432	0					
ANR	4003027	ExpressionStatement	left . start . x = fx0 - fixed_half + fixed_epsilon - epsilon	865:12:30747:30804	4002432	5	True				
ANR	4003028	AssignmentExpression	left . start . x = fx0 - fixed_half + fixed_epsilon - epsilon		4002432	0		=			
ANR	4003029	MemberAccess	left . start . x		4002432	0					
ANR	4003030	MemberAccess	left . start		4002432	0					
ANR	4003031	Identifier	left		4002432	0					
ANR	4003032	Identifier	start		4002432	1					
ANR	4003033	Identifier	x		4002432	1					
ANR	4003034	AdditiveExpression	fx0 - fixed_half + fixed_epsilon - epsilon		4002432	1		-			
ANR	4003035	Identifier	fx0		4002432	0					
ANR	4003036	AdditiveExpression	fixed_half + fixed_epsilon - epsilon		4002432	1		+			
ANR	4003037	Identifier	fixed_half		4002432	0					
ANR	4003038	AdditiveExpression	fixed_epsilon - epsilon		4002432	1		-			
ANR	4003039	Identifier	fixed_epsilon		4002432	0					
ANR	4003040	Identifier	epsilon		4002432	1					
ANR	4003041	ExpressionStatement	right . start . x = left . start . x + fixed_1	866:12:30818:30856	4002432	6	True				
ANR	4003042	AssignmentExpression	right . start . x = left . start . x + fixed_1		4002432	0		=			
ANR	4003043	MemberAccess	right . start . x		4002432	0					
ANR	4003044	MemberAccess	right . start		4002432	0					
ANR	4003045	Identifier	right		4002432	0					
ANR	4003046	Identifier	start		4002432	1					
ANR	4003047	Identifier	x		4002432	1					
ANR	4003048	AdditiveExpression	left . start . x + fixed_1		4002432	1		+			
ANR	4003049	MemberAccess	left . start . x		4002432	0					
ANR	4003050	MemberAccess	left . start		4002432	0					
ANR	4003051	Identifier	left		4002432	0					
ANR	4003052	Identifier	start		4002432	1					
ANR	4003053	Identifier	x		4002432	1					
ANR	4003054	Identifier	fixed_1		4002432	1					
ANR	4003055	ExpressionStatement	left . end . x = fx1 - fixed_half + fixed_epsilon - epsilon	867:12:30870:30925	4002432	7	True				
ANR	4003056	AssignmentExpression	left . end . x = fx1 - fixed_half + fixed_epsilon - epsilon		4002432	0		=			
ANR	4003057	MemberAccess	left . end . x		4002432	0					
ANR	4003058	MemberAccess	left . end		4002432	0					
ANR	4003059	Identifier	left		4002432	0					
ANR	4003060	Identifier	end		4002432	1					
ANR	4003061	Identifier	x		4002432	1					
ANR	4003062	AdditiveExpression	fx1 - fixed_half + fixed_epsilon - epsilon		4002432	1		-			
ANR	4003063	Identifier	fx1		4002432	0					
ANR	4003064	AdditiveExpression	fixed_half + fixed_epsilon - epsilon		4002432	1		+			
ANR	4003065	Identifier	fixed_half		4002432	0					
ANR	4003066	AdditiveExpression	fixed_epsilon - epsilon		4002432	1		-			
ANR	4003067	Identifier	fixed_epsilon		4002432	0					
ANR	4003068	Identifier	epsilon		4002432	1					
ANR	4003069	ExpressionStatement	right . end . x = left . end . x + fixed_1	868:12:30939:30973	4002432	8	True				
ANR	4003070	AssignmentExpression	right . end . x = left . end . x + fixed_1		4002432	0		=			
ANR	4003071	MemberAccess	right . end . x		4002432	0					
ANR	4003072	MemberAccess	right . end		4002432	0					
ANR	4003073	Identifier	right		4002432	0					
ANR	4003074	Identifier	end		4002432	1					
ANR	4003075	Identifier	x		4002432	1					
ANR	4003076	AdditiveExpression	left . end . x + fixed_1		4002432	1		+			
ANR	4003077	MemberAccess	left . end . x		4002432	0					
ANR	4003078	MemberAccess	left . end		4002432	0					
ANR	4003079	Identifier	left		4002432	0					
ANR	4003080	Identifier	end		4002432	1					
ANR	4003081	Identifier	x		4002432	1					
ANR	4003082	Identifier	fixed_1		4002432	1					
ANR	4003083	ExpressionStatement	left . start . y = right . start . y = fy0	869:12:30987:31021	4002432	9	True				
ANR	4003084	AssignmentExpression	left . start . y = right . start . y = fy0		4002432	0		=			
ANR	4003085	MemberAccess	left . start . y		4002432	0					
ANR	4003086	MemberAccess	left . start		4002432	0					
ANR	4003087	Identifier	left		4002432	0					
ANR	4003088	Identifier	start		4002432	1					
ANR	4003089	Identifier	y		4002432	1					
ANR	4003090	AssignmentExpression	right . start . y = fy0		4002432	1		=			
ANR	4003091	MemberAccess	right . start . y		4002432	0					
ANR	4003092	MemberAccess	right . start		4002432	0					
ANR	4003093	Identifier	right		4002432	0					
ANR	4003094	Identifier	start		4002432	1					
ANR	4003095	Identifier	y		4002432	1					
ANR	4003096	Identifier	fy0		4002432	1					
ANR	4003097	ExpressionStatement	left . end . y = right . end . y = fy1	870:12:31035:31065	4002432	10	True				
ANR	4003098	AssignmentExpression	left . end . y = right . end . y = fy1		4002432	0		=			
ANR	4003099	MemberAccess	left . end . y		4002432	0					
ANR	4003100	MemberAccess	left . end		4002432	0					
ANR	4003101	Identifier	left		4002432	0					
ANR	4003102	Identifier	end		4002432	1					
ANR	4003103	Identifier	y		4002432	1					
ANR	4003104	AssignmentExpression	right . end . y = fy1		4002432	1		=			
ANR	4003105	MemberAccess	right . end . y		4002432	0					
ANR	4003106	MemberAccess	right . end		4002432	0					
ANR	4003107	Identifier	right		4002432	0					
ANR	4003108	Identifier	end		4002432	1					
ANR	4003109	Identifier	y		4002432	1					
ANR	4003110	Identifier	fy1		4002432	1					
ANR	4003111	ExpressionStatement	swap_axes = false	871:12:31079:31096	4002432	11	True				
ANR	4003112	AssignmentExpression	swap_axes = false		4002432	0		=			
ANR	4003113	Identifier	swap_axes		4002432	0					
ANR	4003114	Identifier	false		4002432	1					
ANR	4003115	ElseStatement	else		4002432	0					
ANR	4003116	CompoundStatement		120:15:5602:5602	4002432	0					
ANR	4003117	IfStatement	if ( w < 0 )		4002432	0					
ANR	4003118	Condition	w < 0	874:16:31176:31180	4002432	0	True				
ANR	4003119	RelationalExpression	w < 0		4002432	0		<			
ANR	4003120	Identifier	w		4002432	0					
ANR	4003121	PrimaryExpression	0		4002432	1					
ANR	4003122	ExpressionStatement	"SWAP ( fx0 , fx1 , tf ) , SWAP ( fy0 , fy1 , tf ) , w = - w"	875:16:31199:31265	4002432	1	True				
ANR	4003123	Expression	"SWAP ( fx0 , fx1 , tf ) , SWAP ( fy0 , fy1 , tf ) , w = - w"		4002432	0					
ANR	4003124	CallExpression	"SWAP ( fx0 , fx1 , tf )"		4002432	0					
ANR	4003125	Callee	SWAP		4002432	0					
ANR	4003126	Identifier	SWAP		4002432	0					
ANR	4003127	ArgumentList	fx0		4002432	1					
ANR	4003128	Argument	fx0		4002432	0					
ANR	4003129	Identifier	fx0		4002432	0					
ANR	4003130	Argument	fx1		4002432	1					
ANR	4003131	Identifier	fx1		4002432	0					
ANR	4003132	Argument	tf		4002432	2					
ANR	4003133	Identifier	tf		4002432	0					
ANR	4003134	Expression	"SWAP ( fy0 , fy1 , tf ) , w = - w"		4002432	1					
ANR	4003135	CallExpression	"SWAP ( fy0 , fy1 , tf )"		4002432	0					
ANR	4003136	Callee	SWAP		4002432	0					
ANR	4003137	Identifier	SWAP		4002432	0					
ANR	4003138	ArgumentList	fy0		4002432	1					
ANR	4003139	Argument	fy0		4002432	0					
ANR	4003140	Identifier	fy0		4002432	0					
ANR	4003141	Argument	fy1		4002432	1					
ANR	4003142	Identifier	fy1		4002432	0					
ANR	4003143	Argument	tf		4002432	2					
ANR	4003144	Identifier	tf		4002432	0					
ANR	4003145	AssignmentExpression	w = - w		4002432	1		=			
ANR	4003146	Identifier	w		4002432	0					
ANR	4003147	UnaryOperationExpression	- w		4002432	1					
ANR	4003148	UnaryOperator	-		4002432	0					
ANR	4003149	Identifier	w		4002432	1					
ANR	4003150	IfStatement	if ( h == 0 && adjustx )		4002432	1					
ANR	4003151	Condition	h == 0 && adjustx	880:16:31479:31495	4002432	0	True				
ANR	4003152	AndExpression	h == 0 && adjustx		4002432	0		&&			
ANR	4003153	EqualityExpression	h == 0		4002432	0		==			
ANR	4003154	Identifier	h		4002432	0					
ANR	4003155	PrimaryExpression	0		4002432	1					
ANR	4003156	Identifier	adjustx		4002432	1					
ANR	4003157	CompoundStatement		129:16:6005:6015	4002432	1					
ANR	4003158	IdentifierDeclStatement	int deltax ;	881:16:31516:31526	4002432	0	True				
ANR	4003159	IdentifierDecl	deltax		4002432	0					
ANR	4003160	IdentifierDeclType	int		4002432	0					
ANR	4003161	Identifier	deltax		4002432	1					
ANR	4003162	ExpressionStatement	deltax = int2fixed ( fixed2int_var ( fx1 ) ) + fixed_half - fx1	882:16:31544:31600	4002432	1	True				
ANR	4003163	AssignmentExpression	deltax = int2fixed ( fixed2int_var ( fx1 ) ) + fixed_half - fx1		4002432	0		=			
ANR	4003164	Identifier	deltax		4002432	0					
ANR	4003165	AdditiveExpression	int2fixed ( fixed2int_var ( fx1 ) ) + fixed_half - fx1		4002432	1		+			
ANR	4003166	CallExpression	int2fixed ( fixed2int_var ( fx1 ) )		4002432	0					
ANR	4003167	Callee	int2fixed		4002432	0					
ANR	4003168	Identifier	int2fixed		4002432	0					
ANR	4003169	ArgumentList	fixed2int_var ( fx1 )		4002432	1					
ANR	4003170	Argument	fixed2int_var ( fx1 )		4002432	0					
ANR	4003171	CallExpression	fixed2int_var ( fx1 )		4002432	0					
ANR	4003172	Callee	fixed2int_var		4002432	0					
ANR	4003173	Identifier	fixed2int_var		4002432	0					
ANR	4003174	ArgumentList	fx1		4002432	1					
ANR	4003175	Argument	fx1		4002432	0					
ANR	4003176	Identifier	fx1		4002432	0					
ANR	4003177	AdditiveExpression	fixed_half - fx1		4002432	1		-			
ANR	4003178	Identifier	fixed_half		4002432	0					
ANR	4003179	Identifier	fx1		4002432	1					
ANR	4003180	IfStatement	if ( ( deltax > 0 ) && ( deltax <= fixed_half ) )		4002432	2					
ANR	4003181	Condition	( deltax > 0 ) && ( deltax <= fixed_half )	884:20:31623:31660	4002432	0	True				
ANR	4003182	AndExpression	( deltax > 0 ) && ( deltax <= fixed_half )		4002432	0		&&			
ANR	4003183	RelationalExpression	deltax > 0		4002432	0		>			
ANR	4003184	Identifier	deltax		4002432	0					
ANR	4003185	PrimaryExpression	0		4002432	1					
ANR	4003186	RelationalExpression	deltax <= fixed_half		4002432	1		<=			
ANR	4003187	Identifier	deltax		4002432	0					
ANR	4003188	Identifier	fixed_half		4002432	1					
ANR	4003189	CompoundStatement		134:20:6190:6399	4002432	1					
ANR	4003190	IdentifierDeclStatement	"int c = gx_fill_rectangle_device_rop ( fixed2int_var ( fx1 ) , fixed2int_var ( fy1 ) , 1 , 1 , pdevc , dev , lop ) ;"	886:20:31701:31910	4002432	0	True				
ANR	4003191	IdentifierDecl	"c = gx_fill_rectangle_device_rop ( fixed2int_var ( fx1 ) , fixed2int_var ( fy1 ) , 1 , 1 , pdevc , dev , lop )"		4002432	0					
ANR	4003192	IdentifierDeclType	int		4002432	0					
ANR	4003193	Identifier	c		4002432	1					
ANR	4003194	AssignmentExpression	"c = gx_fill_rectangle_device_rop ( fixed2int_var ( fx1 ) , fixed2int_var ( fy1 ) , 1 , 1 , pdevc , dev , lop )"		4002432	2		=			
ANR	4003195	Identifier	c		4002432	0					
ANR	4003196	CallExpression	"gx_fill_rectangle_device_rop ( fixed2int_var ( fx1 ) , fixed2int_var ( fy1 ) , 1 , 1 , pdevc , dev , lop )"		4002432	1					
ANR	4003197	Callee	gx_fill_rectangle_device_rop		4002432	0					
ANR	4003198	Identifier	gx_fill_rectangle_device_rop		4002432	0					
ANR	4003199	ArgumentList	fixed2int_var ( fx1 )		4002432	1					
ANR	4003200	Argument	fixed2int_var ( fx1 )		4002432	0					
ANR	4003201	CallExpression	fixed2int_var ( fx1 )		4002432	0					
ANR	4003202	Callee	fixed2int_var		4002432	0					
ANR	4003203	Identifier	fixed2int_var		4002432	0					
ANR	4003204	ArgumentList	fx1		4002432	1					
ANR	4003205	Argument	fx1		4002432	0					
ANR	4003206	Identifier	fx1		4002432	0					
ANR	4003207	Argument	fixed2int_var ( fy1 )		4002432	1					
ANR	4003208	CallExpression	fixed2int_var ( fy1 )		4002432	0					
ANR	4003209	Callee	fixed2int_var		4002432	0					
ANR	4003210	Identifier	fixed2int_var		4002432	0					
ANR	4003211	ArgumentList	fy1		4002432	1					
ANR	4003212	Argument	fy1		4002432	0					
ANR	4003213	Identifier	fy1		4002432	0					
ANR	4003214	Argument	1		4002432	2					
ANR	4003215	PrimaryExpression	1		4002432	0					
ANR	4003216	Argument	1		4002432	3					
ANR	4003217	PrimaryExpression	1		4002432	0					
ANR	4003218	Argument	pdevc		4002432	4					
ANR	4003219	Identifier	pdevc		4002432	0					
ANR	4003220	Argument	dev		4002432	5					
ANR	4003221	Identifier	dev		4002432	0					
ANR	4003222	Argument	lop		4002432	6					
ANR	4003223	Identifier	lop		4002432	0					
ANR	4003224	IfStatement	if ( c < 0 )		4002432	1					
ANR	4003225	Condition	c < 0	889:24:31936:31940	4002432	0	True				
ANR	4003226	RelationalExpression	c < 0		4002432	0		<			
ANR	4003227	Identifier	c		4002432	0					
ANR	4003228	PrimaryExpression	0		4002432	1					
ANR	4003229	ReturnStatement	return c ;	889:31:31943:31951	4002432	1	True				
ANR	4003230	Identifier	c		4002432	0					
ANR	4003231	ExpressionStatement	deltax = int2fixed ( fixed2int_var ( fx0 ) ) + fixed_half - fx0	891:16:31987:32043	4002432	3	True				
ANR	4003232	AssignmentExpression	deltax = int2fixed ( fixed2int_var ( fx0 ) ) + fixed_half - fx0		4002432	0		=			
ANR	4003233	Identifier	deltax		4002432	0					
ANR	4003234	AdditiveExpression	int2fixed ( fixed2int_var ( fx0 ) ) + fixed_half - fx0		4002432	1		+			
ANR	4003235	CallExpression	int2fixed ( fixed2int_var ( fx0 ) )		4002432	0					
ANR	4003236	Callee	int2fixed		4002432	0					
ANR	4003237	Identifier	int2fixed		4002432	0					
ANR	4003238	ArgumentList	fixed2int_var ( fx0 )		4002432	1					
ANR	4003239	Argument	fixed2int_var ( fx0 )		4002432	0					
ANR	4003240	CallExpression	fixed2int_var ( fx0 )		4002432	0					
ANR	4003241	Callee	fixed2int_var		4002432	0					
ANR	4003242	Identifier	fixed2int_var		4002432	0					
ANR	4003243	ArgumentList	fx0		4002432	1					
ANR	4003244	Argument	fx0		4002432	0					
ANR	4003245	Identifier	fx0		4002432	0					
ANR	4003246	AdditiveExpression	fixed_half - fx0		4002432	1		-			
ANR	4003247	Identifier	fixed_half		4002432	0					
ANR	4003248	Identifier	fx0		4002432	1					
ANR	4003249	IfStatement	if ( ( deltax < 0 ) && ( deltax >= - fixed_half ) )		4002432	4					
ANR	4003250	Condition	( deltax < 0 ) && ( deltax >= - fixed_half )	893:20:32066:32104	4002432	0	True				
ANR	4003251	AndExpression	( deltax < 0 ) && ( deltax >= - fixed_half )		4002432	0		&&			
ANR	4003252	RelationalExpression	deltax < 0		4002432	0		<			
ANR	4003253	Identifier	deltax		4002432	0					
ANR	4003254	PrimaryExpression	0		4002432	1					
ANR	4003255	RelationalExpression	deltax >= - fixed_half		4002432	1		>=			
ANR	4003256	Identifier	deltax		4002432	0					
ANR	4003257	UnaryOperationExpression	- fixed_half		4002432	1					
ANR	4003258	UnaryOperator	-		4002432	0					
ANR	4003259	Identifier	fixed_half		4002432	1					
ANR	4003260	CompoundStatement		143:20:6634:6843	4002432	1					
ANR	4003261	IdentifierDeclStatement	"int c = gx_fill_rectangle_device_rop ( fixed2int_var ( fx0 ) , fixed2int_var ( fy0 ) , 1 , 1 , pdevc , dev , lop ) ;"	895:20:32145:32354	4002432	0	True				
ANR	4003262	IdentifierDecl	"c = gx_fill_rectangle_device_rop ( fixed2int_var ( fx0 ) , fixed2int_var ( fy0 ) , 1 , 1 , pdevc , dev , lop )"		4002432	0					
ANR	4003263	IdentifierDeclType	int		4002432	0					
ANR	4003264	Identifier	c		4002432	1					
ANR	4003265	AssignmentExpression	"c = gx_fill_rectangle_device_rop ( fixed2int_var ( fx0 ) , fixed2int_var ( fy0 ) , 1 , 1 , pdevc , dev , lop )"		4002432	2		=			
ANR	4003266	Identifier	c		4002432	0					
ANR	4003267	CallExpression	"gx_fill_rectangle_device_rop ( fixed2int_var ( fx0 ) , fixed2int_var ( fy0 ) , 1 , 1 , pdevc , dev , lop )"		4002432	1					
ANR	4003268	Callee	gx_fill_rectangle_device_rop		4002432	0					
ANR	4003269	Identifier	gx_fill_rectangle_device_rop		4002432	0					
ANR	4003270	ArgumentList	fixed2int_var ( fx0 )		4002432	1					
ANR	4003271	Argument	fixed2int_var ( fx0 )		4002432	0					
ANR	4003272	CallExpression	fixed2int_var ( fx0 )		4002432	0					
ANR	4003273	Callee	fixed2int_var		4002432	0					
ANR	4003274	Identifier	fixed2int_var		4002432	0					
ANR	4003275	ArgumentList	fx0		4002432	1					
ANR	4003276	Argument	fx0		4002432	0					
ANR	4003277	Identifier	fx0		4002432	0					
ANR	4003278	Argument	fixed2int_var ( fy0 )		4002432	1					
ANR	4003279	CallExpression	fixed2int_var ( fy0 )		4002432	0					
ANR	4003280	Callee	fixed2int_var		4002432	0					
ANR	4003281	Identifier	fixed2int_var		4002432	0					
ANR	4003282	ArgumentList	fy0		4002432	1					
ANR	4003283	Argument	fy0		4002432	0					
ANR	4003284	Identifier	fy0		4002432	0					
ANR	4003285	Argument	1		4002432	2					
ANR	4003286	PrimaryExpression	1		4002432	0					
ANR	4003287	Argument	1		4002432	3					
ANR	4003288	PrimaryExpression	1		4002432	0					
ANR	4003289	Argument	pdevc		4002432	4					
ANR	4003290	Identifier	pdevc		4002432	0					
ANR	4003291	Argument	dev		4002432	5					
ANR	4003292	Identifier	dev		4002432	0					
ANR	4003293	Argument	lop		4002432	6					
ANR	4003294	Identifier	lop		4002432	0					
ANR	4003295	IfStatement	if ( c < 0 )		4002432	1					
ANR	4003296	Condition	c < 0	898:24:32380:32384	4002432	0	True				
ANR	4003297	RelationalExpression	c < 0		4002432	0		<			
ANR	4003298	Identifier	c		4002432	0					
ANR	4003299	PrimaryExpression	0		4002432	1					
ANR	4003300	ReturnStatement	return c ;	898:31:32387:32395	4002432	1	True				
ANR	4003301	Identifier	c		4002432	0					
ANR	4003302	ElseStatement	else		4002432	0					
ANR	4003303	IfStatement	if ( h != 0 )		4002432	0					
ANR	4003304	Condition	h != 0	900:23:32438:32443	4002432	0	True				
ANR	4003305	EqualityExpression	h != 0		4002432	0		!=			
ANR	4003306	Identifier	h		4002432	0					
ANR	4003307	PrimaryExpression	0		4002432	1					
ANR	4003308	CompoundStatement		149:16:6953:6971	4002432	1					
ANR	4003309	IdentifierDeclStatement	"int deltax , deltay ;"	901:16:32464:32482	4002432	0	True				
ANR	4003310	IdentifierDecl	deltax		4002432	0					
ANR	4003311	IdentifierDeclType	int		4002432	0					
ANR	4003312	Identifier	deltax		4002432	1					
ANR	4003313	IdentifierDecl	deltay		4002432	1					
ANR	4003314	IdentifierDeclType	int		4002432	0					
ANR	4003315	Identifier	deltay		4002432	1					
ANR	4003316	ExpressionStatement	deltax = int2fixed ( fixed2int_var ( fx1 ) ) + fixed_half - fx1	902:16:32500:32556	4002432	1	True				
ANR	4003317	AssignmentExpression	deltax = int2fixed ( fixed2int_var ( fx1 ) ) + fixed_half - fx1		4002432	0		=			
ANR	4003318	Identifier	deltax		4002432	0					
ANR	4003319	AdditiveExpression	int2fixed ( fixed2int_var ( fx1 ) ) + fixed_half - fx1		4002432	1		+			
ANR	4003320	CallExpression	int2fixed ( fixed2int_var ( fx1 ) )		4002432	0					
ANR	4003321	Callee	int2fixed		4002432	0					
ANR	4003322	Identifier	int2fixed		4002432	0					
ANR	4003323	ArgumentList	fixed2int_var ( fx1 )		4002432	1					
ANR	4003324	Argument	fixed2int_var ( fx1 )		4002432	0					
ANR	4003325	CallExpression	fixed2int_var ( fx1 )		4002432	0					
ANR	4003326	Callee	fixed2int_var		4002432	0					
ANR	4003327	Identifier	fixed2int_var		4002432	0					
ANR	4003328	ArgumentList	fx1		4002432	1					
ANR	4003329	Argument	fx1		4002432	0					
ANR	4003330	Identifier	fx1		4002432	0					
ANR	4003331	AdditiveExpression	fixed_half - fx1		4002432	1		-			
ANR	4003332	Identifier	fixed_half		4002432	0					
ANR	4003333	Identifier	fx1		4002432	1					
ANR	4003334	ExpressionStatement	deltay = int2fixed ( fixed2int_var ( fy1 ) ) + fixed_half - fy1	903:16:32574:32630	4002432	2	True				
ANR	4003335	AssignmentExpression	deltay = int2fixed ( fixed2int_var ( fy1 ) ) + fixed_half - fy1		4002432	0		=			
ANR	4003336	Identifier	deltay		4002432	0					
ANR	4003337	AdditiveExpression	int2fixed ( fixed2int_var ( fy1 ) ) + fixed_half - fy1		4002432	1		+			
ANR	4003338	CallExpression	int2fixed ( fixed2int_var ( fy1 ) )		4002432	0					
ANR	4003339	Callee	int2fixed		4002432	0					
ANR	4003340	Identifier	int2fixed		4002432	0					
ANR	4003341	ArgumentList	fixed2int_var ( fy1 )		4002432	1					
ANR	4003342	Argument	fixed2int_var ( fy1 )		4002432	0					
ANR	4003343	CallExpression	fixed2int_var ( fy1 )		4002432	0					
ANR	4003344	Callee	fixed2int_var		4002432	0					
ANR	4003345	Identifier	fixed2int_var		4002432	0					
ANR	4003346	ArgumentList	fy1		4002432	1					
ANR	4003347	Argument	fy1		4002432	0					
ANR	4003348	Identifier	fy1		4002432	0					
ANR	4003349	AdditiveExpression	fixed_half - fy1		4002432	1		-			
ANR	4003350	Identifier	fixed_half		4002432	0					
ANR	4003351	Identifier	fy1		4002432	1					
ANR	4003352	IfStatement	if ( deltay < 0 )		4002432	3					
ANR	4003353	Condition	deltay < 0	905:20:32653:32662	4002432	0	True				
ANR	4003354	RelationalExpression	deltay < 0		4002432	0		<			
ANR	4003355	Identifier	deltay		4002432	0					
ANR	4003356	PrimaryExpression	0		4002432	1					
ANR	4003357	ExpressionStatement	deltay = - deltay	905:32:32665:32679	4002432	1	True				
ANR	4003358	AssignmentExpression	deltay = - deltay		4002432	0		=			
ANR	4003359	Identifier	deltay		4002432	0					
ANR	4003360	UnaryOperationExpression	- deltay		4002432	1					
ANR	4003361	UnaryOperator	-		4002432	0					
ANR	4003362	Identifier	deltay		4002432	1					
ANR	4003363	IfStatement	if ( ( deltax > 0 ) && ( deltax <= fixed_half ) && ( deltax + deltay <= fixed_half ) )		4002432	4					
ANR	4003364	Condition	( deltax > 0 ) && ( deltax <= fixed_half ) && ( deltax + deltay <= fixed_half )	906:20:32701:32791	4002432	0	True				
ANR	4003365	AndExpression	( deltax > 0 ) && ( deltax <= fixed_half ) && ( deltax + deltay <= fixed_half )		4002432	0		&&			
ANR	4003366	RelationalExpression	deltax > 0		4002432	0		>			
ANR	4003367	Identifier	deltax		4002432	0					
ANR	4003368	PrimaryExpression	0		4002432	1					
ANR	4003369	AndExpression	( deltax <= fixed_half ) && ( deltax + deltay <= fixed_half )		4002432	1		&&			
ANR	4003370	RelationalExpression	deltax <= fixed_half		4002432	0		<=			
ANR	4003371	Identifier	deltax		4002432	0					
ANR	4003372	Identifier	fixed_half		4002432	1					
ANR	4003373	RelationalExpression	deltax + deltay <= fixed_half		4002432	1		<=			
ANR	4003374	AdditiveExpression	deltax + deltay		4002432	0		+			
ANR	4003375	Identifier	deltax		4002432	0					
ANR	4003376	Identifier	deltay		4002432	1					
ANR	4003377	Identifier	fixed_half		4002432	1					
ANR	4003378	CompoundStatement		157:20:7321:7530	4002432	1					
ANR	4003379	IdentifierDeclStatement	"int c = gx_fill_rectangle_device_rop ( fixed2int_var ( fx1 ) , fixed2int_var ( fy1 ) , 1 , 1 , pdevc , dev , lop ) ;"	909:20:32832:33041	4002432	0	True				
ANR	4003380	IdentifierDecl	"c = gx_fill_rectangle_device_rop ( fixed2int_var ( fx1 ) , fixed2int_var ( fy1 ) , 1 , 1 , pdevc , dev , lop )"		4002432	0					
ANR	4003381	IdentifierDeclType	int		4002432	0					
ANR	4003382	Identifier	c		4002432	1					
ANR	4003383	AssignmentExpression	"c = gx_fill_rectangle_device_rop ( fixed2int_var ( fx1 ) , fixed2int_var ( fy1 ) , 1 , 1 , pdevc , dev , lop )"		4002432	2		=			
ANR	4003384	Identifier	c		4002432	0					
ANR	4003385	CallExpression	"gx_fill_rectangle_device_rop ( fixed2int_var ( fx1 ) , fixed2int_var ( fy1 ) , 1 , 1 , pdevc , dev , lop )"		4002432	1					
ANR	4003386	Callee	gx_fill_rectangle_device_rop		4002432	0					
ANR	4003387	Identifier	gx_fill_rectangle_device_rop		4002432	0					
ANR	4003388	ArgumentList	fixed2int_var ( fx1 )		4002432	1					
ANR	4003389	Argument	fixed2int_var ( fx1 )		4002432	0					
ANR	4003390	CallExpression	fixed2int_var ( fx1 )		4002432	0					
ANR	4003391	Callee	fixed2int_var		4002432	0					
ANR	4003392	Identifier	fixed2int_var		4002432	0					
ANR	4003393	ArgumentList	fx1		4002432	1					
ANR	4003394	Argument	fx1		4002432	0					
ANR	4003395	Identifier	fx1		4002432	0					
ANR	4003396	Argument	fixed2int_var ( fy1 )		4002432	1					
ANR	4003397	CallExpression	fixed2int_var ( fy1 )		4002432	0					
ANR	4003398	Callee	fixed2int_var		4002432	0					
ANR	4003399	Identifier	fixed2int_var		4002432	0					
ANR	4003400	ArgumentList	fy1		4002432	1					
ANR	4003401	Argument	fy1		4002432	0					
ANR	4003402	Identifier	fy1		4002432	0					
ANR	4003403	Argument	1		4002432	2					
ANR	4003404	PrimaryExpression	1		4002432	0					
ANR	4003405	Argument	1		4002432	3					
ANR	4003406	PrimaryExpression	1		4002432	0					
ANR	4003407	Argument	pdevc		4002432	4					
ANR	4003408	Identifier	pdevc		4002432	0					
ANR	4003409	Argument	dev		4002432	5					
ANR	4003410	Identifier	dev		4002432	0					
ANR	4003411	Argument	lop		4002432	6					
ANR	4003412	Identifier	lop		4002432	0					
ANR	4003413	IfStatement	if ( c < 0 )		4002432	1					
ANR	4003414	Condition	c < 0	912:24:33067:33071	4002432	0	True				
ANR	4003415	RelationalExpression	c < 0		4002432	0		<			
ANR	4003416	Identifier	c		4002432	0					
ANR	4003417	PrimaryExpression	0		4002432	1					
ANR	4003418	ReturnStatement	return c ;	912:31:33074:33082	4002432	1	True				
ANR	4003419	Identifier	c		4002432	0					
ANR	4003420	ExpressionStatement	deltax = int2fixed ( fixed2int_var ( fx0 ) ) + fixed_half - fx0	914:16:33118:33174	4002432	5	True				
ANR	4003421	AssignmentExpression	deltax = int2fixed ( fixed2int_var ( fx0 ) ) + fixed_half - fx0		4002432	0		=			
ANR	4003422	Identifier	deltax		4002432	0					
ANR	4003423	AdditiveExpression	int2fixed ( fixed2int_var ( fx0 ) ) + fixed_half - fx0		4002432	1		+			
ANR	4003424	CallExpression	int2fixed ( fixed2int_var ( fx0 ) )		4002432	0					
ANR	4003425	Callee	int2fixed		4002432	0					
ANR	4003426	Identifier	int2fixed		4002432	0					
ANR	4003427	ArgumentList	fixed2int_var ( fx0 )		4002432	1					
ANR	4003428	Argument	fixed2int_var ( fx0 )		4002432	0					
ANR	4003429	CallExpression	fixed2int_var ( fx0 )		4002432	0					
ANR	4003430	Callee	fixed2int_var		4002432	0					
ANR	4003431	Identifier	fixed2int_var		4002432	0					
ANR	4003432	ArgumentList	fx0		4002432	1					
ANR	4003433	Argument	fx0		4002432	0					
ANR	4003434	Identifier	fx0		4002432	0					
ANR	4003435	AdditiveExpression	fixed_half - fx0		4002432	1		-			
ANR	4003436	Identifier	fixed_half		4002432	0					
ANR	4003437	Identifier	fx0		4002432	1					
ANR	4003438	ExpressionStatement	deltay = int2fixed ( fixed2int_var ( fy0 ) ) + fixed_half - fy0	915:16:33192:33248	4002432	6	True				
ANR	4003439	AssignmentExpression	deltay = int2fixed ( fixed2int_var ( fy0 ) ) + fixed_half - fy0		4002432	0		=			
ANR	4003440	Identifier	deltay		4002432	0					
ANR	4003441	AdditiveExpression	int2fixed ( fixed2int_var ( fy0 ) ) + fixed_half - fy0		4002432	1		+			
ANR	4003442	CallExpression	int2fixed ( fixed2int_var ( fy0 ) )		4002432	0					
ANR	4003443	Callee	int2fixed		4002432	0					
ANR	4003444	Identifier	int2fixed		4002432	0					
ANR	4003445	ArgumentList	fixed2int_var ( fy0 )		4002432	1					
ANR	4003446	Argument	fixed2int_var ( fy0 )		4002432	0					
ANR	4003447	CallExpression	fixed2int_var ( fy0 )		4002432	0					
ANR	4003448	Callee	fixed2int_var		4002432	0					
ANR	4003449	Identifier	fixed2int_var		4002432	0					
ANR	4003450	ArgumentList	fy0		4002432	1					
ANR	4003451	Argument	fy0		4002432	0					
ANR	4003452	Identifier	fy0		4002432	0					
ANR	4003453	AdditiveExpression	fixed_half - fy0		4002432	1		-			
ANR	4003454	Identifier	fixed_half		4002432	0					
ANR	4003455	Identifier	fy0		4002432	1					
ANR	4003456	IfStatement	if ( deltay < 0 )		4002432	7					
ANR	4003457	Condition	deltay < 0	917:20:33271:33280	4002432	0	True				
ANR	4003458	RelationalExpression	deltay < 0		4002432	0		<			
ANR	4003459	Identifier	deltay		4002432	0					
ANR	4003460	PrimaryExpression	0		4002432	1					
ANR	4003461	ExpressionStatement	deltay = - deltay	917:32:33283:33297	4002432	1	True				
ANR	4003462	AssignmentExpression	deltay = - deltay		4002432	0		=			
ANR	4003463	Identifier	deltay		4002432	0					
ANR	4003464	UnaryOperationExpression	- deltay		4002432	1					
ANR	4003465	UnaryOperator	-		4002432	0					
ANR	4003466	Identifier	deltay		4002432	1					
ANR	4003467	IfStatement	if ( ( deltax < 0 ) && ( deltax >= - fixed_half ) && ( - deltax + deltay <= fixed_half ) )		4002432	8					
ANR	4003468	Condition	( deltax < 0 ) && ( deltax >= - fixed_half ) && ( - deltax + deltay <= fixed_half )	918:20:33319:33411	4002432	0	True				
ANR	4003469	AndExpression	( deltax < 0 ) && ( deltax >= - fixed_half ) && ( - deltax + deltay <= fixed_half )		4002432	0		&&			
ANR	4003470	RelationalExpression	deltax < 0		4002432	0		<			
ANR	4003471	Identifier	deltax		4002432	0					
ANR	4003472	PrimaryExpression	0		4002432	1					
ANR	4003473	AndExpression	( deltax >= - fixed_half ) && ( - deltax + deltay <= fixed_half )		4002432	1		&&			
ANR	4003474	RelationalExpression	deltax >= - fixed_half		4002432	0		>=			
ANR	4003475	Identifier	deltax		4002432	0					
ANR	4003476	UnaryOperationExpression	- fixed_half		4002432	1					
ANR	4003477	UnaryOperator	-		4002432	0					
ANR	4003478	Identifier	fixed_half		4002432	1					
ANR	4003479	RelationalExpression	- deltax + deltay <= fixed_half		4002432	1		<=			
ANR	4003480	AdditiveExpression	- deltax + deltay		4002432	0		+			
ANR	4003481	UnaryOperationExpression	- deltax		4002432	0					
ANR	4003482	UnaryOperator	-		4002432	0					
ANR	4003483	Identifier	deltax		4002432	1					
ANR	4003484	Identifier	deltay		4002432	1					
ANR	4003485	Identifier	fixed_half		4002432	1					
ANR	4003486	CompoundStatement		169:20:7941:8150	4002432	1					
ANR	4003487	IdentifierDeclStatement	"int c = gx_fill_rectangle_device_rop ( fixed2int_var ( fx0 ) , fixed2int_var ( fy0 ) , 1 , 1 , pdevc , dev , lop ) ;"	921:20:33452:33661	4002432	0	True				
ANR	4003488	IdentifierDecl	"c = gx_fill_rectangle_device_rop ( fixed2int_var ( fx0 ) , fixed2int_var ( fy0 ) , 1 , 1 , pdevc , dev , lop )"		4002432	0					
ANR	4003489	IdentifierDeclType	int		4002432	0					
ANR	4003490	Identifier	c		4002432	1					
ANR	4003491	AssignmentExpression	"c = gx_fill_rectangle_device_rop ( fixed2int_var ( fx0 ) , fixed2int_var ( fy0 ) , 1 , 1 , pdevc , dev , lop )"		4002432	2		=			
ANR	4003492	Identifier	c		4002432	0					
ANR	4003493	CallExpression	"gx_fill_rectangle_device_rop ( fixed2int_var ( fx0 ) , fixed2int_var ( fy0 ) , 1 , 1 , pdevc , dev , lop )"		4002432	1					
ANR	4003494	Callee	gx_fill_rectangle_device_rop		4002432	0					
ANR	4003495	Identifier	gx_fill_rectangle_device_rop		4002432	0					
ANR	4003496	ArgumentList	fixed2int_var ( fx0 )		4002432	1					
ANR	4003497	Argument	fixed2int_var ( fx0 )		4002432	0					
ANR	4003498	CallExpression	fixed2int_var ( fx0 )		4002432	0					
ANR	4003499	Callee	fixed2int_var		4002432	0					
ANR	4003500	Identifier	fixed2int_var		4002432	0					
ANR	4003501	ArgumentList	fx0		4002432	1					
ANR	4003502	Argument	fx0		4002432	0					
ANR	4003503	Identifier	fx0		4002432	0					
ANR	4003504	Argument	fixed2int_var ( fy0 )		4002432	1					
ANR	4003505	CallExpression	fixed2int_var ( fy0 )		4002432	0					
ANR	4003506	Callee	fixed2int_var		4002432	0					
ANR	4003507	Identifier	fixed2int_var		4002432	0					
ANR	4003508	ArgumentList	fy0		4002432	1					
ANR	4003509	Argument	fy0		4002432	0					
ANR	4003510	Identifier	fy0		4002432	0					
ANR	4003511	Argument	1		4002432	2					
ANR	4003512	PrimaryExpression	1		4002432	0					
ANR	4003513	Argument	1		4002432	3					
ANR	4003514	PrimaryExpression	1		4002432	0					
ANR	4003515	Argument	pdevc		4002432	4					
ANR	4003516	Identifier	pdevc		4002432	0					
ANR	4003517	Argument	dev		4002432	5					
ANR	4003518	Identifier	dev		4002432	0					
ANR	4003519	Argument	lop		4002432	6					
ANR	4003520	Identifier	lop		4002432	0					
ANR	4003521	IfStatement	if ( c < 0 )		4002432	1					
ANR	4003522	Condition	c < 0	924:24:33687:33691	4002432	0	True				
ANR	4003523	RelationalExpression	c < 0		4002432	0		<			
ANR	4003524	Identifier	c		4002432	0					
ANR	4003525	PrimaryExpression	0		4002432	1					
ANR	4003526	ReturnStatement	return c ;	924:31:33694:33702	4002432	1	True				
ANR	4003527	Identifier	c		4002432	0					
ANR	4003528	ExpressionStatement	iy = fixed2int_var ( fy0 - epsilon )	928:12:33811:33846	4002432	2	True				
ANR	4003529	AssignmentExpression	iy = fixed2int_var ( fy0 - epsilon )		4002432	0		=			
ANR	4003530	Identifier	iy		4002432	0					
ANR	4003531	CallExpression	fixed2int_var ( fy0 - epsilon )		4002432	1					
ANR	4003532	Callee	fixed2int_var		4002432	0					
ANR	4003533	Identifier	fixed2int_var		4002432	0					
ANR	4003534	ArgumentList	fy0 - epsilon		4002432	1					
ANR	4003535	Argument	fy0 - epsilon		4002432	0					
ANR	4003536	AdditiveExpression	fy0 - epsilon		4002432	0		-			
ANR	4003537	Identifier	fy0		4002432	0					
ANR	4003538	Identifier	epsilon		4002432	1					
ANR	4003539	ExpressionStatement	itoy = fixed2int_var ( fy1 - epsilon )	929:12:33860:33895	4002432	3	True				
ANR	4003540	AssignmentExpression	itoy = fixed2int_var ( fy1 - epsilon )		4002432	0		=			
ANR	4003541	Identifier	itoy		4002432	0					
ANR	4003542	CallExpression	fixed2int_var ( fy1 - epsilon )		4002432	1					
ANR	4003543	Callee	fixed2int_var		4002432	0					
ANR	4003544	Identifier	fixed2int_var		4002432	0					
ANR	4003545	ArgumentList	fy1 - epsilon		4002432	1					
ANR	4003546	Argument	fy1 - epsilon		4002432	0					
ANR	4003547	AdditiveExpression	fy1 - epsilon		4002432	0		-			
ANR	4003548	Identifier	fy1		4002432	0					
ANR	4003549	Identifier	epsilon		4002432	1					
ANR	4003550	IfStatement	if ( itoy == iy )		4002432	4					
ANR	4003551	Condition	itoy == iy	930:16:33913:33922	4002432	0	True				
ANR	4003552	EqualityExpression	itoy == iy		4002432	0		==			
ANR	4003553	Identifier	itoy		4002432	0					
ANR	4003554	Identifier	iy		4002432	1					
ANR	4003555	CompoundStatement		178:28:8414:8414	4002432	1					
ANR	4003556	ExpressionStatement	ix = fixed2int_var ( fx0 + fixed_half - fixed_epsilon )	933:16:34059:34109	4002432	0	True				
ANR	4003557	AssignmentExpression	ix = fixed2int_var ( fx0 + fixed_half - fixed_epsilon )		4002432	0		=			
ANR	4003558	Identifier	ix		4002432	0					
ANR	4003559	CallExpression	fixed2int_var ( fx0 + fixed_half - fixed_epsilon )		4002432	1					
ANR	4003560	Callee	fixed2int_var		4002432	0					
ANR	4003561	Identifier	fixed2int_var		4002432	0					
ANR	4003562	ArgumentList	fx0 + fixed_half - fixed_epsilon		4002432	1					
ANR	4003563	Argument	fx0 + fixed_half - fixed_epsilon		4002432	0					
ANR	4003564	AdditiveExpression	fx0 + fixed_half - fixed_epsilon		4002432	0		+			
ANR	4003565	Identifier	fx0		4002432	0					
ANR	4003566	AdditiveExpression	fixed_half - fixed_epsilon		4002432	1		-			
ANR	4003567	Identifier	fixed_half		4002432	0					
ANR	4003568	Identifier	fixed_epsilon		4002432	1					
ANR	4003569	ExpressionStatement	itox = fixed2int_var ( fx1 + fixed_half - fixed_epsilon )	934:16:34127:34177	4002432	1	True				
ANR	4003570	AssignmentExpression	itox = fixed2int_var ( fx1 + fixed_half - fixed_epsilon )		4002432	0		=			
ANR	4003571	Identifier	itox		4002432	0					
ANR	4003572	CallExpression	fixed2int_var ( fx1 + fixed_half - fixed_epsilon )		4002432	1					
ANR	4003573	Callee	fixed2int_var		4002432	0					
ANR	4003574	Identifier	fixed2int_var		4002432	0					
ANR	4003575	ArgumentList	fx1 + fixed_half - fixed_epsilon		4002432	1					
ANR	4003576	Argument	fx1 + fixed_half - fixed_epsilon		4002432	0					
ANR	4003577	AdditiveExpression	fx1 + fixed_half - fixed_epsilon		4002432	0		+			
ANR	4003578	Identifier	fx1		4002432	0					
ANR	4003579	AdditiveExpression	fixed_half - fixed_epsilon		4002432	1		-			
ANR	4003580	Identifier	fixed_half		4002432	0					
ANR	4003581	Identifier	fixed_epsilon		4002432	1					
ANR	4003582	ExpressionStatement	itox = itox - ix	935:16:34195:34211	4002432	2	True				
ANR	4003583	AssignmentExpression	itox = itox - ix		4002432	0		=			
ANR	4003584	Identifier	itox		4002432	0					
ANR	4003585	AdditiveExpression	itox - ix		4002432	1		-			
ANR	4003586	Identifier	itox		4002432	0					
ANR	4003587	Identifier	ix		4002432	1					
ANR	4003588	IfStatement	if ( itox <= 0 )		4002432	3					
ANR	4003589	Condition	itox <= 0	936:20:34233:34241	4002432	0	True				
ANR	4003590	RelationalExpression	itox <= 0		4002432	0		<=			
ANR	4003591	Identifier	itox		4002432	0					
ANR	4003592	PrimaryExpression	0		4002432	1					
ANR	4003593	CompoundStatement		184:31:8733:8733	4002432	1					
ANR	4003594	ReturnStatement	return 0 ;	939:20:34395:34403	4002432	0	True				
ANR	4003595	PrimaryExpression	0		4002432	0					
ANR	4003596	ReturnStatement	"return gx_fill_rectangle_device_rop ( ix , iy , itox , 1 , pdevc , dev , lop ) ;"	941:16:34439:34560	4002432	4	True				
ANR	4003597	CallExpression	"gx_fill_rectangle_device_rop ( ix , iy , itox , 1 , pdevc , dev , lop )"		4002432	0					
ANR	4003598	Callee	gx_fill_rectangle_device_rop		4002432	0					
ANR	4003599	Identifier	gx_fill_rectangle_device_rop		4002432	0					
ANR	4003600	ArgumentList	ix		4002432	1					
ANR	4003601	Argument	ix		4002432	0					
ANR	4003602	Identifier	ix		4002432	0					
ANR	4003603	Argument	iy		4002432	1					
ANR	4003604	Identifier	iy		4002432	0					
ANR	4003605	Argument	itox		4002432	2					
ANR	4003606	Identifier	itox		4002432	0					
ANR	4003607	Argument	1		4002432	3					
ANR	4003608	PrimaryExpression	1		4002432	0					
ANR	4003609	Argument	pdevc		4002432	4					
ANR	4003610	Identifier	pdevc		4002432	0					
ANR	4003611	Argument	dev		4002432	5					
ANR	4003612	Identifier	dev		4002432	0					
ANR	4003613	Argument	lop		4002432	6					
ANR	4003614	Identifier	lop		4002432	0					
ANR	4003615	ExpressionStatement	left . start . x = fy0 - fixed_half + fixed_epsilon - epsilon	944:12:34588:34645	4002432	5	True				
ANR	4003616	AssignmentExpression	left . start . x = fy0 - fixed_half + fixed_epsilon - epsilon		4002432	0		=			
ANR	4003617	MemberAccess	left . start . x		4002432	0					
ANR	4003618	MemberAccess	left . start		4002432	0					
ANR	4003619	Identifier	left		4002432	0					
ANR	4003620	Identifier	start		4002432	1					
ANR	4003621	Identifier	x		4002432	1					
ANR	4003622	AdditiveExpression	fy0 - fixed_half + fixed_epsilon - epsilon		4002432	1		-			
ANR	4003623	Identifier	fy0		4002432	0					
ANR	4003624	AdditiveExpression	fixed_half + fixed_epsilon - epsilon		4002432	1		+			
ANR	4003625	Identifier	fixed_half		4002432	0					
ANR	4003626	AdditiveExpression	fixed_epsilon - epsilon		4002432	1		-			
ANR	4003627	Identifier	fixed_epsilon		4002432	0					
ANR	4003628	Identifier	epsilon		4002432	1					
ANR	4003629	ExpressionStatement	right . start . x = left . start . x + fixed_1	945:12:34659:34697	4002432	6	True				
ANR	4003630	AssignmentExpression	right . start . x = left . start . x + fixed_1		4002432	0		=			
ANR	4003631	MemberAccess	right . start . x		4002432	0					
ANR	4003632	MemberAccess	right . start		4002432	0					
ANR	4003633	Identifier	right		4002432	0					
ANR	4003634	Identifier	start		4002432	1					
ANR	4003635	Identifier	x		4002432	1					
ANR	4003636	AdditiveExpression	left . start . x + fixed_1		4002432	1		+			
ANR	4003637	MemberAccess	left . start . x		4002432	0					
ANR	4003638	MemberAccess	left . start		4002432	0					
ANR	4003639	Identifier	left		4002432	0					
ANR	4003640	Identifier	start		4002432	1					
ANR	4003641	Identifier	x		4002432	1					
ANR	4003642	Identifier	fixed_1		4002432	1					
ANR	4003643	ExpressionStatement	left . end . x = fy1 - fixed_half + fixed_epsilon - epsilon	946:12:34711:34766	4002432	7	True				
ANR	4003644	AssignmentExpression	left . end . x = fy1 - fixed_half + fixed_epsilon - epsilon		4002432	0		=			
ANR	4003645	MemberAccess	left . end . x		4002432	0					
ANR	4003646	MemberAccess	left . end		4002432	0					
ANR	4003647	Identifier	left		4002432	0					
ANR	4003648	Identifier	end		4002432	1					
ANR	4003649	Identifier	x		4002432	1					
ANR	4003650	AdditiveExpression	fy1 - fixed_half + fixed_epsilon - epsilon		4002432	1		-			
ANR	4003651	Identifier	fy1		4002432	0					
ANR	4003652	AdditiveExpression	fixed_half + fixed_epsilon - epsilon		4002432	1		+			
ANR	4003653	Identifier	fixed_half		4002432	0					
ANR	4003654	AdditiveExpression	fixed_epsilon - epsilon		4002432	1		-			
ANR	4003655	Identifier	fixed_epsilon		4002432	0					
ANR	4003656	Identifier	epsilon		4002432	1					
ANR	4003657	ExpressionStatement	right . end . x = left . end . x + fixed_1	947:12:34780:34814	4002432	8	True				
ANR	4003658	AssignmentExpression	right . end . x = left . end . x + fixed_1		4002432	0		=			
ANR	4003659	MemberAccess	right . end . x		4002432	0					
ANR	4003660	MemberAccess	right . end		4002432	0					
ANR	4003661	Identifier	right		4002432	0					
ANR	4003662	Identifier	end		4002432	1					
ANR	4003663	Identifier	x		4002432	1					
ANR	4003664	AdditiveExpression	left . end . x + fixed_1		4002432	1		+			
ANR	4003665	MemberAccess	left . end . x		4002432	0					
ANR	4003666	MemberAccess	left . end		4002432	0					
ANR	4003667	Identifier	left		4002432	0					
ANR	4003668	Identifier	end		4002432	1					
ANR	4003669	Identifier	x		4002432	1					
ANR	4003670	Identifier	fixed_1		4002432	1					
ANR	4003671	ExpressionStatement	left . start . y = right . start . y = fx0	948:12:34828:34862	4002432	9	True				
ANR	4003672	AssignmentExpression	left . start . y = right . start . y = fx0		4002432	0		=			
ANR	4003673	MemberAccess	left . start . y		4002432	0					
ANR	4003674	MemberAccess	left . start		4002432	0					
ANR	4003675	Identifier	left		4002432	0					
ANR	4003676	Identifier	start		4002432	1					
ANR	4003677	Identifier	y		4002432	1					
ANR	4003678	AssignmentExpression	right . start . y = fx0		4002432	1		=			
ANR	4003679	MemberAccess	right . start . y		4002432	0					
ANR	4003680	MemberAccess	right . start		4002432	0					
ANR	4003681	Identifier	right		4002432	0					
ANR	4003682	Identifier	start		4002432	1					
ANR	4003683	Identifier	y		4002432	1					
ANR	4003684	Identifier	fx0		4002432	1					
ANR	4003685	ExpressionStatement	left . end . y = right . end . y = fx1	949:12:34876:34906	4002432	10	True				
ANR	4003686	AssignmentExpression	left . end . y = right . end . y = fx1		4002432	0		=			
ANR	4003687	MemberAccess	left . end . y		4002432	0					
ANR	4003688	MemberAccess	left . end		4002432	0					
ANR	4003689	Identifier	left		4002432	0					
ANR	4003690	Identifier	end		4002432	1					
ANR	4003691	Identifier	y		4002432	1					
ANR	4003692	AssignmentExpression	right . end . y = fx1		4002432	1		=			
ANR	4003693	MemberAccess	right . end . y		4002432	0					
ANR	4003694	MemberAccess	right . end		4002432	0					
ANR	4003695	Identifier	right		4002432	0					
ANR	4003696	Identifier	end		4002432	1					
ANR	4003697	Identifier	y		4002432	1					
ANR	4003698	Identifier	fx1		4002432	1					
ANR	4003699	ExpressionStatement	swap_axes = true	950:12:34920:34936	4002432	11	True				
ANR	4003700	AssignmentExpression	swap_axes = true		4002432	0		=			
ANR	4003701	Identifier	swap_axes		4002432	0					
ANR	4003702	Identifier	true		4002432	1					
ANR	4003703	ReturnStatement	"return ( * dev_proc ( dev , fill_trapezoid ) ) ( dev , & left , & right , left . start . y , left . end . y , swap_axes , pdevc , lop ) ;"	952:8:34956:35163	4002432	6	True				
ANR	4003704	CallExpression	"( * dev_proc ( dev , fill_trapezoid ) ) ( dev , & left , & right , left . start . y , left . end . y , swap_axes , pdevc , lop )"		4002432	0					
ANR	4003705	Callee	"* dev_proc ( dev , fill_trapezoid )"		4002432	0					
ANR	4003706	UnaryOperationExpression	"* dev_proc ( dev , fill_trapezoid )"		4002432	0					
ANR	4003707	UnaryOperator	*		4002432	0					
ANR	4003708	CallExpression	"dev_proc ( dev , fill_trapezoid )"		4002432	1					
ANR	4003709	Callee	dev_proc		4002432	0					
ANR	4003710	Identifier	dev_proc		4002432	0					
ANR	4003711	ArgumentList	dev		4002432	1					
ANR	4003712	Argument	dev		4002432	0					
ANR	4003713	Identifier	dev		4002432	0					
ANR	4003714	Argument	fill_trapezoid		4002432	1					
ANR	4003715	Identifier	fill_trapezoid		4002432	0					
ANR	4003716	ArgumentList	dev		4002432	1					
ANR	4003717	Argument	dev		4002432	0					
ANR	4003718	Identifier	dev		4002432	0					
ANR	4003719	Argument	& left		4002432	1					
ANR	4003720	UnaryOperationExpression	& left		4002432	0					
ANR	4003721	UnaryOperator	&		4002432	0					
ANR	4003722	Identifier	left		4002432	1					
ANR	4003723	Argument	& right		4002432	2					
ANR	4003724	UnaryOperationExpression	& right		4002432	0					
ANR	4003725	UnaryOperator	&		4002432	0					
ANR	4003726	Identifier	right		4002432	1					
ANR	4003727	Argument	left . start . y		4002432	3					
ANR	4003728	MemberAccess	left . start . y		4002432	0					
ANR	4003729	MemberAccess	left . start		4002432	0					
ANR	4003730	Identifier	left		4002432	0					
ANR	4003731	Identifier	start		4002432	1					
ANR	4003732	Identifier	y		4002432	1					
ANR	4003733	Argument	left . end . y		4002432	4					
ANR	4003734	MemberAccess	left . end . y		4002432	0					
ANR	4003735	MemberAccess	left . end		4002432	0					
ANR	4003736	Identifier	left		4002432	0					
ANR	4003737	Identifier	end		4002432	1					
ANR	4003738	Identifier	y		4002432	1					
ANR	4003739	Argument	swap_axes		4002432	5					
ANR	4003740	Identifier	swap_axes		4002432	0					
ANR	4003741	Argument	pdevc		4002432	6					
ANR	4003742	Identifier	pdevc		4002432	0					
ANR	4003743	Argument	lop		4002432	7					
ANR	4003744	Identifier	lop		4002432	0					
ANR	4003745	ReturnType	int		4002432	1					
ANR	4003746	Identifier	gx_default_draw_thin_line		4002432	2					
ANR	4003747	ParameterList	"gx_device * dev , fixed fx0 , fixed fy0 , fixed fx1 , fixed fy1 , const gx_device_color * pdevc , gs_logical_operation_t lop , fixed adjustx , fixed adjusty"		4002432	3					
ANR	4003748	Parameter	gx_device * dev	749:26:25288:25302	4002432	0	True				
ANR	4003749	ParameterType	gx_device *		4002432	0					
ANR	4003750	Identifier	dev		4002432	1					
ANR	4003751	Parameter	fixed fx0	750:26:25331:25339	4002432	1	True				
ANR	4003752	ParameterType	fixed		4002432	0					
ANR	4003753	Identifier	fx0		4002432	1					
ANR	4003754	Parameter	fixed fy0	750:37:25342:25350	4002432	2	True				
ANR	4003755	ParameterType	fixed		4002432	0					
ANR	4003756	Identifier	fy0		4002432	1					
ANR	4003757	Parameter	fixed fx1	750:48:25353:25361	4002432	3	True				
ANR	4003758	ParameterType	fixed		4002432	0					
ANR	4003759	Identifier	fx1		4002432	1					
ANR	4003760	Parameter	fixed fy1	750:59:25364:25372	4002432	4	True				
ANR	4003761	ParameterType	fixed		4002432	0					
ANR	4003762	Identifier	fy1		4002432	1					
ANR	4003763	Parameter	const gx_device_color * pdevc	751:20:25395:25423	4002432	5	True				
ANR	4003764	ParameterType	const gx_device_color *		4002432	0					
ANR	4003765	Identifier	pdevc		4002432	1					
ANR	4003766	Parameter	gs_logical_operation_t lop	751:51:25426:25451	4002432	6	True				
ANR	4003767	ParameterType	gs_logical_operation_t		4002432	0					
ANR	4003768	Identifier	lop		4002432	1					
ANR	4003769	Parameter	fixed adjustx	752:26:25480:25492	4002432	7	True				
ANR	4003770	ParameterType	fixed		4002432	0					
ANR	4003771	Identifier	adjustx		4002432	1					
ANR	4003772	Parameter	fixed adjusty	752:41:25495:25507	4002432	8	True				
ANR	4003773	ParameterType	fixed		4002432	0					
ANR	4003774	Identifier	adjusty		4002432	1					
ANR	4003775	CFGEntryNode	ENTRY		4002432		True				
ANR	4003776	CFGExitNode	EXIT		4002432		True				
ANR	4003777	Symbol	pdevc		4002432						
ANR	4003778	Symbol	& left		4002432						
ANR	4003779	Symbol	epsilon		4002432						
ANR	4003780	Symbol	left . end . x		4002432						
ANR	4003781	Symbol	left . end . y		4002432						
ANR	4003782	Symbol	dev		4002432						
ANR	4003783	Symbol	fixed_1		4002432						
ANR	4003784	Symbol	fill_trapezoid		4002432						
ANR	4003785	Symbol	fixed_epsilon		4002432						
ANR	4003786	Symbol	& right		4002432						
ANR	4003787	Symbol	fx1		4002432						
ANR	4003788	Symbol	fx0		4002432						
ANR	4003789	Symbol	right . end . x		4002432						
ANR	4003790	Symbol	adjustx		4002432						
ANR	4003791	Symbol	deltax		4002432						
ANR	4003792	Symbol	adjusty		4002432						
ANR	4003793	Symbol	deltay		4002432						
ANR	4003794	Symbol	right . end . y		4002432						
ANR	4003795	Symbol	left . end		4002432						
ANR	4003796	Symbol	gx_fill_rectangle_device_rop		4002432						
ANR	4003797	Symbol	ix		4002432						
ANR	4003798	Symbol	iy		4002432						
ANR	4003799	Symbol	left		4002432						
ANR	4003800	Symbol	true		4002432						
ANR	4003801	Symbol	fy0		4002432						
ANR	4003802	Symbol	fy1		4002432						
ANR	4003803	Symbol	* dev		4002432						
ANR	4003804	Symbol	* dev_proc		4002432						
ANR	4003805	Symbol	"* dev_proc ( dev , fill_trapezoid )"		4002432						
ANR	4003806	Symbol	lop		4002432						
ANR	4003807	Symbol	left . start		4002432						
ANR	4003808	Symbol	dev_proc		4002432						
ANR	4003809	Symbol	right . start		4002432						
ANR	4003810	Symbol	fixed_half		4002432						
ANR	4003811	Symbol	right . start . y		4002432						
ANR	4003812	Symbol	c		4002432						
ANR	4003813	Symbol	right . start . x		4002432						
ANR	4003814	Symbol	itoy		4002432						
ANR	4003815	Symbol	itox		4002432						
ANR	4003816	Symbol	right . end		4002432						
ANR	4003817	Symbol	h		4002432						
ANR	4003818	Symbol	false		4002432						
ANR	4003819	Symbol	right		4002432						
ANR	4003820	Symbol	left . start . y		4002432						
ANR	4003821	Symbol	dev -> memory		4002432						
ANR	4003822	Symbol	tf		4002432						
ANR	4003823	Symbol	left . start . x		4002432						
ANR	4003824	Symbol	w		4002432						
ANR	4003825	Symbol	int2fixed		4002432						
ANR	4003826	Symbol	swap_axes		4002432						
ANR	4003827	Symbol	fixed2int_var		4002432						
ANR	4003828	Function	gx_default_draw_line	959:0:35213:35347							
ANR	4003829	FunctionDef	"gx_default_draw_line (gx_device * dev , int x0 , int y0 , int x1 , int y1 , gx_color_index color)"		4003828	0					
ANR	4003830	CompoundStatement		962:0:35330:35347	4003828	0					
ANR	4003831	ReturnStatement	return - 1 ;	963:4:35336:35345	4003828	0	True				
ANR	4003832	UnaryOperationExpression	- 1		4003828	0					
ANR	4003833	UnaryOperator	-		4003828	0					
ANR	4003834	PrimaryExpression	1		4003828	1					
ANR	4003835	ReturnType	int		4003828	1					
ANR	4003836	Identifier	gx_default_draw_line		4003828	2					
ANR	4003837	ParameterList	"gx_device * dev , int x0 , int y0 , int x1 , int y1 , gx_color_index color"		4003828	3					
ANR	4003838	Parameter	gx_device * dev	960:21:35238:35252	4003828	0	True				
ANR	4003839	ParameterType	gx_device *		4003828	0					
ANR	4003840	Identifier	dev		4003828	1					
ANR	4003841	Parameter	int x0	961:21:35276:35281	4003828	1	True				
ANR	4003842	ParameterType	int		4003828	0					
ANR	4003843	Identifier	x0		4003828	1					
ANR	4003844	Parameter	int y0	961:29:35284:35289	4003828	2	True				
ANR	4003845	ParameterType	int		4003828	0					
ANR	4003846	Identifier	y0		4003828	1					
ANR	4003847	Parameter	int x1	961:37:35292:35297	4003828	3	True				
ANR	4003848	ParameterType	int		4003828	0					
ANR	4003849	Identifier	x1		4003828	1					
ANR	4003850	Parameter	int y1	961:45:35300:35305	4003828	4	True				
ANR	4003851	ParameterType	int		4003828	0					
ANR	4003852	Identifier	y1		4003828	1					
ANR	4003853	Parameter	gx_color_index color	961:53:35308:35327	4003828	5	True				
ANR	4003854	ParameterType	gx_color_index		4003828	0					
ANR	4003855	Identifier	color		4003828	1					
ANR	4003856	CFGEntryNode	ENTRY		4003828		True				
ANR	4003857	CFGExitNode	EXIT		4003828		True				
ANR	4003858	Symbol	dev		4003828						
ANR	4003859	Symbol	color		4003828						
ANR	4003860	Symbol	y0		4003828						
ANR	4003861	Symbol	x0		4003828						
ANR	4003862	Symbol	y1		4003828						
ANR	4003863	Symbol	x1		4003828						
ANR	4003864	Function	gx_no_begin_image	988:0:36020:36369							
ANR	4003865	FunctionDef	"gx_no_begin_image (gx_device * dev , const gs_gstate * pgs , const gs_image_t * pim , gs_image_format_t format , const gs_int_rect * prect , const gx_drawing_color * pdcolor , const gx_clip_path * pcpath , gs_memory_t * memory , gx_image_enum_common_t * * pinfo)"		4003864	0					
ANR	4003866	CompoundStatement		994:0:36352:36369	4003864	0					
ANR	4003867	ReturnStatement	return - 1 ;	995:4:36358:36367	4003864	0	True				
ANR	4003868	UnaryOperationExpression	- 1		4003864	0					
ANR	4003869	UnaryOperator	-		4003864	0					
ANR	4003870	PrimaryExpression	1		4003864	1					
ANR	4003871	ReturnType	static int		4003864	1					
ANR	4003872	Identifier	gx_no_begin_image		4003864	2					
ANR	4003873	ParameterList	"gx_device * dev , const gs_gstate * pgs , const gs_image_t * pim , gs_image_format_t format , const gs_int_rect * prect , const gx_drawing_color * pdcolor , const gx_clip_path * pcpath , gs_memory_t * memory , gx_image_enum_common_t * * pinfo"		4003864	3					
ANR	4003874	Parameter	gx_device * dev	989:18:36049:36063	4003864	0	True				
ANR	4003875	ParameterType	gx_device *		4003864	0					
ANR	4003876	Identifier	dev		4003864	1					
ANR	4003877	Parameter	const gs_gstate * pgs	990:18:36084:36104	4003864	1	True				
ANR	4003878	ParameterType	const gs_gstate *		4003864	0					
ANR	4003879	Identifier	pgs		4003864	1					
ANR	4003880	Parameter	const gs_image_t * pim	990:41:36107:36128	4003864	2	True				
ANR	4003881	ParameterType	const gs_image_t *		4003864	0					
ANR	4003882	Identifier	pim		4003864	1					
ANR	4003883	Parameter	gs_image_format_t format	991:18:36149:36172	4003864	3	True				
ANR	4003884	ParameterType	gs_image_format_t		4003864	0					
ANR	4003885	Identifier	format		4003864	1					
ANR	4003886	Parameter	const gs_int_rect * prect	991:44:36175:36199	4003864	4	True				
ANR	4003887	ParameterType	const gs_int_rect *		4003864	0					
ANR	4003888	Identifier	prect		4003864	1					
ANR	4003889	Parameter	const gx_drawing_color * pdcolor	992:14:36216:36247	4003864	5	True				
ANR	4003890	ParameterType	const gx_drawing_color *		4003864	0					
ANR	4003891	Identifier	pdcolor		4003864	1					
ANR	4003892	Parameter	const gx_clip_path * pcpath	992:48:36250:36276	4003864	6	True				
ANR	4003893	ParameterType	const gx_clip_path *		4003864	0					
ANR	4003894	Identifier	pcpath		4003864	1					
ANR	4003895	Parameter	gs_memory_t * memory	993:18:36297:36316	4003864	7	True				
ANR	4003896	ParameterType	gs_memory_t *		4003864	0					
ANR	4003897	Identifier	memory		4003864	1					
ANR	4003898	Parameter	gx_image_enum_common_t * * pinfo	993:40:36319:36349	4003864	8	True				
ANR	4003899	ParameterType	gx_image_enum_common_t * *		4003864	0					
ANR	4003900	Identifier	pinfo		4003864	1					
ANR	4003901	CFGEntryNode	ENTRY		4003864		True				
ANR	4003902	CFGExitNode	EXIT		4003864		True				
ANR	4003903	Symbol	memory		4003864						
ANR	4003904	Symbol	dev		4003864						
ANR	4003905	Symbol	pim		4003864						
ANR	4003906	Symbol	pinfo		4003864						
ANR	4003907	Symbol	format		4003864						
ANR	4003908	Symbol	pdcolor		4003864						
ANR	4003909	Symbol	prect		4003864						
ANR	4003910	Symbol	pgs		4003864						
ANR	4003911	Symbol	pcpath		4003864						
ANR	4003912	Function	gx_default_begin_image	997:0:36371:37393							
ANR	4003913	FunctionDef	"gx_default_begin_image (gx_device * dev , const gs_gstate * pgs , const gs_image_t * pim , gs_image_format_t format , const gs_int_rect * prect , const gx_drawing_color * pdcolor , const gx_clip_path * pcpath , gs_memory_t * memory , gx_image_enum_common_t * * pinfo)"		4003912	0					
ANR	4003914	CompoundStatement		1003:0:36716:37393	4003912	0					
ANR	4003915	ExpressionStatement	"dev_proc_begin_image ( ( * save_begin_image ) ) = dev_proc ( dev , begin_image )"	1008:4:36832:36902	4003912	0	True				
ANR	4003916	AssignmentExpression	"dev_proc_begin_image ( ( * save_begin_image ) ) = dev_proc ( dev , begin_image )"		4003912	0		=			
ANR	4003917	CallExpression	dev_proc_begin_image ( ( * save_begin_image ) )		4003912	0					
ANR	4003918	Callee	dev_proc_begin_image		4003912	0					
ANR	4003919	Identifier	dev_proc_begin_image		4003912	0					
ANR	4003920	ArgumentList	* save_begin_image		4003912	1					
ANR	4003921	Argument	* save_begin_image		4003912	0					
ANR	4003922	UnaryOperationExpression	* save_begin_image		4003912	0					
ANR	4003923	UnaryOperator	*		4003912	0					
ANR	4003924	Identifier	save_begin_image		4003912	1					
ANR	4003925	CallExpression	"dev_proc ( dev , begin_image )"		4003912	1					
ANR	4003926	Callee	dev_proc		4003912	0					
ANR	4003927	Identifier	dev_proc		4003912	0					
ANR	4003928	ArgumentList	dev		4003912	1					
ANR	4003929	Argument	dev		4003912	0					
ANR	4003930	Identifier	dev		4003912	0					
ANR	4003931	Argument	begin_image		4003912	1					
ANR	4003932	Identifier	begin_image		4003912	0					
ANR	4003933	IdentifierDeclStatement	gs_image_t image ;	1009:4:36908:36924	4003912	1	True				
ANR	4003934	IdentifierDecl	image		4003912	0					
ANR	4003935	IdentifierDeclType	gs_image_t		4003912	0					
ANR	4003936	Identifier	image		4003912	1					
ANR	4003937	IdentifierDeclStatement	const gs_image_t * ptim ;	1010:4:36930:36952	4003912	2	True				
ANR	4003938	IdentifierDecl	* ptim		4003912	0					
ANR	4003939	IdentifierDeclType	const gs_image_t *		4003912	0					
ANR	4003940	Identifier	ptim		4003912	1					
ANR	4003941	IdentifierDeclStatement	int code ;	1011:4:36958:36966	4003912	3	True				
ANR	4003942	IdentifierDecl	code		4003912	0					
ANR	4003943	IdentifierDeclType	int		4003912	0					
ANR	4003944	Identifier	code		4003912	1					
ANR	4003945	ExpressionStatement	"set_dev_proc ( dev , begin_image , gx_no_begin_image )"	1013:4:36973:37022	4003912	4	True				
ANR	4003946	CallExpression	"set_dev_proc ( dev , begin_image , gx_no_begin_image )"		4003912	0					
ANR	4003947	Callee	set_dev_proc		4003912	0					
ANR	4003948	Identifier	set_dev_proc		4003912	0					
ANR	4003949	ArgumentList	dev		4003912	1					
ANR	4003950	Argument	dev		4003912	0					
ANR	4003951	Identifier	dev		4003912	0					
ANR	4003952	Argument	begin_image		4003912	1					
ANR	4003953	Identifier	begin_image		4003912	0					
ANR	4003954	Argument	gx_no_begin_image		4003912	2					
ANR	4003955	Identifier	gx_no_begin_image		4003912	0					
ANR	4003956	IfStatement	if ( pim -> format == format )		4003912	5					
ANR	4003957	Condition	pim -> format == format	1014:8:37032:37052	4003912	0	True				
ANR	4003958	EqualityExpression	pim -> format == format		4003912	0		==			
ANR	4003959	PtrMemberAccess	pim -> format		4003912	0					
ANR	4003960	Identifier	pim		4003912	0					
ANR	4003961	Identifier	format		4003912	1					
ANR	4003962	Identifier	format		4003912	1					
ANR	4003963	ExpressionStatement	ptim = pim	1015:8:37063:37073	4003912	1	True				
ANR	4003964	AssignmentExpression	ptim = pim		4003912	0		=			
ANR	4003965	Identifier	ptim		4003912	0					
ANR	4003966	Identifier	pim		4003912	1					
ANR	4003967	ElseStatement	else		4003912	0					
ANR	4003968	CompoundStatement		14:9:367:367	4003912	0					
ANR	4003969	ExpressionStatement	image = * pim	1017:8:37094:37106	4003912	0	True				
ANR	4003970	AssignmentExpression	image = * pim		4003912	0		=			
ANR	4003971	Identifier	image		4003912	0					
ANR	4003972	UnaryOperationExpression	* pim		4003912	1					
ANR	4003973	UnaryOperator	*		4003912	0					
ANR	4003974	Identifier	pim		4003912	1					
ANR	4003975	ExpressionStatement	image . format = format	1018:8:37116:37137	4003912	1	True				
ANR	4003976	AssignmentExpression	image . format = format		4003912	0		=			
ANR	4003977	MemberAccess	image . format		4003912	0					
ANR	4003978	Identifier	image		4003912	0					
ANR	4003979	Identifier	format		4003912	1					
ANR	4003980	Identifier	format		4003912	1					
ANR	4003981	ExpressionStatement	ptim = & image	1019:8:37147:37160	4003912	2	True				
ANR	4003982	AssignmentExpression	ptim = & image		4003912	0		=			
ANR	4003983	Identifier	ptim		4003912	0					
ANR	4003984	UnaryOperationExpression	& image		4003912	1					
ANR	4003985	UnaryOperator	&		4003912	0					
ANR	4003986	Identifier	image		4003912	1					
ANR	4003987	ExpressionStatement	"code = ( * dev_proc ( dev , begin_typed_image ) ) ( dev , pgs , NULL , ( const gs_image_common_t * ) ptim , prect , pdcolor , pcpath , memory , pinfo )"	1021:4:37172:37320	4003912	6	True				
ANR	4003988	AssignmentExpression	"code = ( * dev_proc ( dev , begin_typed_image ) ) ( dev , pgs , NULL , ( const gs_image_common_t * ) ptim , prect , pdcolor , pcpath , memory , pinfo )"		4003912	0		=			
ANR	4003989	Identifier	code		4003912	0					
ANR	4003990	CallExpression	"( * dev_proc ( dev , begin_typed_image ) ) ( dev , pgs , NULL , ( const gs_image_common_t * ) ptim , prect , pdcolor , pcpath , memory , pinfo )"		4003912	1					
ANR	4003991	Callee	"* dev_proc ( dev , begin_typed_image )"		4003912	0					
ANR	4003992	UnaryOperationExpression	"* dev_proc ( dev , begin_typed_image )"		4003912	0					
ANR	4003993	UnaryOperator	*		4003912	0					
ANR	4003994	CallExpression	"dev_proc ( dev , begin_typed_image )"		4003912	1					
ANR	4003995	Callee	dev_proc		4003912	0					
ANR	4003996	Identifier	dev_proc		4003912	0					
ANR	4003997	ArgumentList	dev		4003912	1					
ANR	4003998	Argument	dev		4003912	0					
ANR	4003999	Identifier	dev		4003912	0					
ANR	4004000	Argument	begin_typed_image		4003912	1					
ANR	4004001	Identifier	begin_typed_image		4003912	0					
ANR	4004002	ArgumentList	dev		4003912	1					
ANR	4004003	Argument	dev		4003912	0					
ANR	4004004	Identifier	dev		4003912	0					
ANR	4004005	Argument	pgs		4003912	1					
ANR	4004006	Identifier	pgs		4003912	0					
ANR	4004007	Argument	NULL		4003912	2					
ANR	4004008	Identifier	NULL		4003912	0					
ANR	4004009	Argument	( const gs_image_common_t * ) ptim		4003912	3					
ANR	4004010	CastExpression	( const gs_image_common_t * ) ptim		4003912	0					
ANR	4004011	CastTarget	const gs_image_common_t *		4003912	0					
ANR	4004012	Identifier	ptim		4003912	1					
ANR	4004013	Argument	prect		4003912	4					
ANR	4004014	Identifier	prect		4003912	0					
ANR	4004015	Argument	pdcolor		4003912	5					
ANR	4004016	Identifier	pdcolor		4003912	0					
ANR	4004017	Argument	pcpath		4003912	6					
ANR	4004018	Identifier	pcpath		4003912	0					
ANR	4004019	Argument	memory		4003912	7					
ANR	4004020	Identifier	memory		4003912	0					
ANR	4004021	Argument	pinfo		4003912	8					
ANR	4004022	Identifier	pinfo		4003912	0					
ANR	4004023	ExpressionStatement	"set_dev_proc ( dev , begin_image , save_begin_image )"	1024:4:37326:37374	4003912	7	True				
ANR	4004024	CallExpression	"set_dev_proc ( dev , begin_image , save_begin_image )"		4003912	0					
ANR	4004025	Callee	set_dev_proc		4003912	0					
ANR	4004026	Identifier	set_dev_proc		4003912	0					
ANR	4004027	ArgumentList	dev		4003912	1					
ANR	4004028	Argument	dev		4003912	0					
ANR	4004029	Identifier	dev		4003912	0					
ANR	4004030	Argument	begin_image		4003912	1					
ANR	4004031	Identifier	begin_image		4003912	0					
ANR	4004032	Argument	save_begin_image		4003912	2					
ANR	4004033	Identifier	save_begin_image		4003912	0					
ANR	4004034	ReturnStatement	return code ;	1025:4:37380:37391	4003912	8	True				
ANR	4004035	Identifier	code		4003912	0					
ANR	4004036	ReturnType	int		4003912	1					
ANR	4004037	Identifier	gx_default_begin_image		4003912	2					
ANR	4004038	ParameterList	"gx_device * dev , const gs_gstate * pgs , const gs_image_t * pim , gs_image_format_t format , const gs_int_rect * prect , const gx_drawing_color * pdcolor , const gx_clip_path * pcpath , gs_memory_t * memory , gx_image_enum_common_t * * pinfo"		4003912	3					
ANR	4004039	Parameter	gx_device * dev	998:23:36398:36412	4003912	0	True				
ANR	4004040	ParameterType	gx_device *		4003912	0					
ANR	4004041	Identifier	dev		4003912	1					
ANR	4004042	Parameter	const gs_gstate * pgs	999:23:36438:36458	4003912	1	True				
ANR	4004043	ParameterType	const gs_gstate *		4003912	0					
ANR	4004044	Identifier	pgs		4003912	1					
ANR	4004045	Parameter	const gs_image_t * pim	999:46:36461:36482	4003912	2	True				
ANR	4004046	ParameterType	const gs_image_t *		4003912	0					
ANR	4004047	Identifier	pim		4003912	1					
ANR	4004048	Parameter	gs_image_format_t format	1000:23:36508:36531	4003912	3	True				
ANR	4004049	ParameterType	gs_image_format_t		4003912	0					
ANR	4004050	Identifier	format		4003912	1					
ANR	4004051	Parameter	const gs_int_rect * prect	1000:49:36534:36558	4003912	4	True				
ANR	4004052	ParameterType	const gs_int_rect *		4003912	0					
ANR	4004053	Identifier	prect		4003912	1					
ANR	4004054	Parameter	const gx_drawing_color * pdcolor	1001:14:36575:36606	4003912	5	True				
ANR	4004055	ParameterType	const gx_drawing_color *		4003912	0					
ANR	4004056	Identifier	pdcolor		4003912	1					
ANR	4004057	Parameter	const gx_clip_path * pcpath	1001:48:36609:36635	4003912	6	True				
ANR	4004058	ParameterType	const gx_clip_path *		4003912	0					
ANR	4004059	Identifier	pcpath		4003912	1					
ANR	4004060	Parameter	gs_memory_t * memory	1002:23:36661:36680	4003912	7	True				
ANR	4004061	ParameterType	gs_memory_t *		4003912	0					
ANR	4004062	Identifier	memory		4003912	1					
ANR	4004063	Parameter	gx_image_enum_common_t * * pinfo	1002:45:36683:36713	4003912	8	True				
ANR	4004064	ParameterType	gx_image_enum_common_t * *		4003912	0					
ANR	4004065	Identifier	pinfo		4003912	1					
ANR	4004066	CFGEntryNode	ENTRY		4003912		True				
ANR	4004067	CFGExitNode	EXIT		4003912		True				
ANR	4004068	Symbol	begin_typed_image		4003912						
ANR	4004069	Symbol	memory		4003912						
ANR	4004070	Symbol	code		4003912						
ANR	4004071	Symbol	pinfo		4003912						
ANR	4004072	Symbol	* dev_proc		4003912						
ANR	4004073	Symbol	gx_no_begin_image		4003912						
ANR	4004074	Symbol	prect		4003912						
ANR	4004075	Symbol	pim -> format		4003912						
ANR	4004076	Symbol	dev		4003912						
ANR	4004077	Symbol	pim		4003912						
ANR	4004078	Symbol	dev_proc		4003912						
ANR	4004079	Symbol	ptim		4003912						
ANR	4004080	Symbol	pgs		4003912						
ANR	4004081	Symbol	pcpath		4003912						
ANR	4004082	Symbol	image		4003912						
ANR	4004083	Symbol	& image		4003912						
ANR	4004084	Symbol	NULL		4003912						
ANR	4004085	Symbol	* save_begin_image		4003912						
ANR	4004086	Symbol	format		4003912						
ANR	4004087	Symbol	dev_proc_begin_image		4003912						
ANR	4004088	Symbol	pdcolor		4003912						
ANR	4004089	Symbol	begin_image		4003912						
ANR	4004090	Symbol	save_begin_image		4003912						
ANR	4004091	Symbol	"* dev_proc ( dev , begin_typed_image )"		4003912						
ANR	4004092	Symbol	image . format		4003912						
ANR	4004093	Symbol	* pim		4003912						
ANR	4004094	Function	gx_default_begin_typed_image	1028:0:37396:38419							
ANR	4004095	FunctionDef	"gx_default_begin_typed_image (gx_device * dev , const gs_gstate * pgs , const gs_matrix * pmat , const gs_image_common_t * pic , const gs_int_rect * prect , const gx_drawing_color * pdcolor , const gx_clip_path * pcpath , gs_memory_t * memory , gx_image_enum_common_t * * pinfo)"		4004094	0					
ANR	4004096	CompoundStatement		1034:0:37748:38419	4004094	0					
ANR	4004097	IfStatement	if ( pic -> type -> begin_typed_image == gx_begin_image1 )		4004094	0					
ANR	4004098	Condition	pic -> type -> begin_typed_image == gx_begin_image1	1038:8:37869:37915	4004094	0	True				
ANR	4004099	EqualityExpression	pic -> type -> begin_typed_image == gx_begin_image1		4004094	0		==			
ANR	4004100	PtrMemberAccess	pic -> type -> begin_typed_image		4004094	0					
ANR	4004101	PtrMemberAccess	pic -> type		4004094	0					
ANR	4004102	Identifier	pic		4004094	0					
ANR	4004103	Identifier	type		4004094	1					
ANR	4004104	Identifier	begin_typed_image		4004094	1					
ANR	4004105	Identifier	gx_begin_image1		4004094	1					
ANR	4004106	CompoundStatement		6:8:179:226	4004094	1					
ANR	4004107	IdentifierDeclStatement	const gs_image_t * pim = ( const gs_image_t * ) pic ;	1039:8:37928:37975	4004094	0	True				
ANR	4004108	IdentifierDecl	* pim = ( const gs_image_t * ) pic		4004094	0					
ANR	4004109	IdentifierDeclType	const gs_image_t *		4004094	0					
ANR	4004110	Identifier	pim		4004094	1					
ANR	4004111	AssignmentExpression	* pim = ( const gs_image_t * ) pic		4004094	2		=			
ANR	4004112	Identifier	pim		4004094	0					
ANR	4004113	CastExpression	( const gs_image_t * ) pic		4004094	1					
ANR	4004114	CastTarget	const gs_image_t *		4004094	0					
ANR	4004115	Identifier	pic		4004094	1					
ANR	4004116	IfStatement	"if ( pmat == 0 || ( pgs != 0 && ! gs_matrix_compare ( pmat , & ctm_only ( pgs ) ) ) )"		4004094	1					
ANR	4004117	Condition	"pmat == 0 || ( pgs != 0 && ! gs_matrix_compare ( pmat , & ctm_only ( pgs ) ) )"	1041:12:37990:38068	4004094	0	True				
ANR	4004118	OrExpression	"pmat == 0 || ( pgs != 0 && ! gs_matrix_compare ( pmat , & ctm_only ( pgs ) ) )"		4004094	0		||			
ANR	4004119	EqualityExpression	pmat == 0		4004094	0		==			
ANR	4004120	Identifier	pmat		4004094	0					
ANR	4004121	PrimaryExpression	0		4004094	1					
ANR	4004122	AndExpression	"pgs != 0 && ! gs_matrix_compare ( pmat , & ctm_only ( pgs ) )"		4004094	1		&&			
ANR	4004123	EqualityExpression	pgs != 0		4004094	0		!=			
ANR	4004124	Identifier	pgs		4004094	0					
ANR	4004125	PrimaryExpression	0		4004094	1					
ANR	4004126	UnaryOperationExpression	"! gs_matrix_compare ( pmat , & ctm_only ( pgs ) )"		4004094	1					
ANR	4004127	UnaryOperator	!		4004094	0					
ANR	4004128	CallExpression	"gs_matrix_compare ( pmat , & ctm_only ( pgs ) )"		4004094	1					
ANR	4004129	Callee	gs_matrix_compare		4004094	0					
ANR	4004130	Identifier	gs_matrix_compare		4004094	0					
ANR	4004131	ArgumentList	pmat		4004094	1					
ANR	4004132	Argument	pmat		4004094	0					
ANR	4004133	Identifier	pmat		4004094	0					
ANR	4004134	Argument	& ctm_only ( pgs )		4004094	1					
ANR	4004135	UnaryOperationExpression	& ctm_only ( pgs )		4004094	0					
ANR	4004136	UnaryOperator	&		4004094	0					
ANR	4004137	CallExpression	ctm_only ( pgs )		4004094	1					
ANR	4004138	Callee	ctm_only		4004094	0					
ANR	4004139	Identifier	ctm_only		4004094	0					
ANR	4004140	ArgumentList	pgs		4004094	1					
ANR	4004141	Argument	pgs		4004094	0					
ANR	4004142	Identifier	pgs		4004094	0					
ANR	4004143	CompoundStatement		11:12:349:482	4004094	1					
ANR	4004144	IdentifierDeclStatement	"int code = ( * dev_proc ( dev , begin_image ) ) ( dev , pgs , pim , pim -> format , prect , pdcolor , pcpath , memory , pinfo ) ;"	1044:12:38098:38231	4004094	0	True				
ANR	4004145	IdentifierDecl	"code = ( * dev_proc ( dev , begin_image ) ) ( dev , pgs , pim , pim -> format , prect , pdcolor , pcpath , memory , pinfo )"		4004094	0					
ANR	4004146	IdentifierDeclType	int		4004094	0					
ANR	4004147	Identifier	code		4004094	1					
ANR	4004148	AssignmentExpression	"code = ( * dev_proc ( dev , begin_image ) ) ( dev , pgs , pim , pim -> format , prect , pdcolor , pcpath , memory , pinfo )"		4004094	2		=			
ANR	4004149	Identifier	code		4004094	0					
ANR	4004150	CallExpression	"( * dev_proc ( dev , begin_image ) ) ( dev , pgs , pim , pim -> format , prect , pdcolor , pcpath , memory , pinfo )"		4004094	1					
ANR	4004151	Callee	"* dev_proc ( dev , begin_image )"		4004094	0					
ANR	4004152	UnaryOperationExpression	"* dev_proc ( dev , begin_image )"		4004094	0					
ANR	4004153	UnaryOperator	*		4004094	0					
ANR	4004154	CallExpression	"dev_proc ( dev , begin_image )"		4004094	1					
ANR	4004155	Callee	dev_proc		4004094	0					
ANR	4004156	Identifier	dev_proc		4004094	0					
ANR	4004157	ArgumentList	dev		4004094	1					
ANR	4004158	Argument	dev		4004094	0					
ANR	4004159	Identifier	dev		4004094	0					
ANR	4004160	Argument	begin_image		4004094	1					
ANR	4004161	Identifier	begin_image		4004094	0					
ANR	4004162	ArgumentList	dev		4004094	1					
ANR	4004163	Argument	dev		4004094	0					
ANR	4004164	Identifier	dev		4004094	0					
ANR	4004165	Argument	pgs		4004094	1					
ANR	4004166	Identifier	pgs		4004094	0					
ANR	4004167	Argument	pim		4004094	2					
ANR	4004168	Identifier	pim		4004094	0					
ANR	4004169	Argument	pim -> format		4004094	3					
ANR	4004170	PtrMemberAccess	pim -> format		4004094	0					
ANR	4004171	Identifier	pim		4004094	0					
ANR	4004172	Identifier	format		4004094	1					
ANR	4004173	Argument	prect		4004094	4					
ANR	4004174	Identifier	prect		4004094	0					
ANR	4004175	Argument	pdcolor		4004094	5					
ANR	4004176	Identifier	pdcolor		4004094	0					
ANR	4004177	Argument	pcpath		4004094	6					
ANR	4004178	Identifier	pcpath		4004094	0					
ANR	4004179	Argument	memory		4004094	7					
ANR	4004180	Identifier	memory		4004094	0					
ANR	4004181	Argument	pinfo		4004094	8					
ANR	4004182	Identifier	pinfo		4004094	0					
ANR	4004183	IfStatement	if ( code >= 0 )		4004094	1					
ANR	4004184	Condition	code >= 0	1048:16:38250:38258	4004094	0	True				
ANR	4004185	RelationalExpression	code >= 0		4004094	0		>=			
ANR	4004186	Identifier	code		4004094	0					
ANR	4004187	PrimaryExpression	0		4004094	1					
ANR	4004188	ReturnStatement	return code ;	1049:16:38277:38288	4004094	1	True				
ANR	4004189	Identifier	code		4004094	0					
ANR	4004190	ReturnStatement	"return ( * pic -> type -> begin_typed_image ) ( dev , pgs , pmat , pic , prect , pdcolor , pcpath , memory , pinfo ) ;"	1052:4:38310:38417	4004094	1	True				
ANR	4004191	CallExpression	"( * pic -> type -> begin_typed_image ) ( dev , pgs , pmat , pic , prect , pdcolor , pcpath , memory , pinfo )"		4004094	0					
ANR	4004192	Callee	* pic -> type -> begin_typed_image		4004094	0					
ANR	4004193	UnaryOperationExpression	* pic -> type -> begin_typed_image		4004094	0					
ANR	4004194	UnaryOperator	*		4004094	0					
ANR	4004195	PtrMemberAccess	pic -> type -> begin_typed_image		4004094	1					
ANR	4004196	PtrMemberAccess	pic -> type		4004094	0					
ANR	4004197	Identifier	pic		4004094	0					
ANR	4004198	Identifier	type		4004094	1					
ANR	4004199	Identifier	begin_typed_image		4004094	1					
ANR	4004200	ArgumentList	dev		4004094	1					
ANR	4004201	Argument	dev		4004094	0					
ANR	4004202	Identifier	dev		4004094	0					
ANR	4004203	Argument	pgs		4004094	1					
ANR	4004204	Identifier	pgs		4004094	0					
ANR	4004205	Argument	pmat		4004094	2					
ANR	4004206	Identifier	pmat		4004094	0					
ANR	4004207	Argument	pic		4004094	3					
ANR	4004208	Identifier	pic		4004094	0					
ANR	4004209	Argument	prect		4004094	4					
ANR	4004210	Identifier	prect		4004094	0					
ANR	4004211	Argument	pdcolor		4004094	5					
ANR	4004212	Identifier	pdcolor		4004094	0					
ANR	4004213	Argument	pcpath		4004094	6					
ANR	4004214	Identifier	pcpath		4004094	0					
ANR	4004215	Argument	memory		4004094	7					
ANR	4004216	Identifier	memory		4004094	0					
ANR	4004217	Argument	pinfo		4004094	8					
ANR	4004218	Identifier	pinfo		4004094	0					
ANR	4004219	ReturnType	int		4004094	1					
ANR	4004220	Identifier	gx_default_begin_typed_image		4004094	2					
ANR	4004221	ParameterList	"gx_device * dev , const gs_gstate * pgs , const gs_matrix * pmat , const gs_image_common_t * pic , const gs_int_rect * prect , const gx_drawing_color * pdcolor , const gx_clip_path * pcpath , gs_memory_t * memory , gx_image_enum_common_t * * pinfo"		4004094	3					
ANR	4004222	Parameter	gx_device * dev	1029:29:37429:37443	4004094	0	True				
ANR	4004223	ParameterType	gx_device *		4004094	0					
ANR	4004224	Identifier	dev		4004094	1					
ANR	4004225	Parameter	const gs_gstate * pgs	1030:24:37470:37490	4004094	1	True				
ANR	4004226	ParameterType	const gs_gstate *		4004094	0					
ANR	4004227	Identifier	pgs		4004094	1					
ANR	4004228	Parameter	const gs_matrix * pmat	1030:47:37493:37514	4004094	2	True				
ANR	4004229	ParameterType	const gs_matrix *		4004094	0					
ANR	4004230	Identifier	pmat		4004094	1					
ANR	4004231	Parameter	const gs_image_common_t * pic	1031:19:37536:37564	4004094	3	True				
ANR	4004232	ParameterType	const gs_image_common_t *		4004094	0					
ANR	4004233	Identifier	pic		4004094	1					
ANR	4004234	Parameter	const gs_int_rect * prect	1031:50:37567:37591	4004094	4	True				
ANR	4004235	ParameterType	const gs_int_rect *		4004094	0					
ANR	4004236	Identifier	prect		4004094	1					
ANR	4004237	Parameter	const gx_drawing_color * pdcolor	1032:14:37608:37639	4004094	5	True				
ANR	4004238	ParameterType	const gx_drawing_color *		4004094	0					
ANR	4004239	Identifier	pdcolor		4004094	1					
ANR	4004240	Parameter	const gx_clip_path * pcpath	1032:48:37642:37668	4004094	6	True				
ANR	4004241	ParameterType	const gx_clip_path *		4004094	0					
ANR	4004242	Identifier	pcpath		4004094	1					
ANR	4004243	Parameter	gs_memory_t * memory	1033:22:37693:37712	4004094	7	True				
ANR	4004244	ParameterType	gs_memory_t *		4004094	0					
ANR	4004245	Identifier	memory		4004094	1					
ANR	4004246	Parameter	gx_image_enum_common_t * * pinfo	1033:44:37715:37745	4004094	8	True				
ANR	4004247	ParameterType	gx_image_enum_common_t * *		4004094	0					
ANR	4004248	Identifier	pinfo		4004094	1					
ANR	4004249	CFGEntryNode	ENTRY		4004094		True				
ANR	4004250	CFGExitNode	EXIT		4004094		True				
ANR	4004251	Symbol	* pic -> type		4004094						
ANR	4004252	Symbol	memory		4004094						
ANR	4004253	Symbol	code		4004094						
ANR	4004254	Symbol	pmat		4004094						
ANR	4004255	Symbol	pinfo		4004094						
ANR	4004256	Symbol	* dev_proc		4004094						
ANR	4004257	Symbol	* * * pic		4004094						
ANR	4004258	Symbol	pic		4004094						
ANR	4004259	Symbol	prect		4004094						
ANR	4004260	Symbol	pim -> format		4004094						
ANR	4004261	Symbol	dev		4004094						
ANR	4004262	Symbol	pim		4004094						
ANR	4004263	Symbol	dev_proc		4004094						
ANR	4004264	Symbol	gx_begin_image1		4004094						
ANR	4004265	Symbol	pgs		4004094						
ANR	4004266	Symbol	pcpath		4004094						
ANR	4004267	Symbol	* * pic		4004094						
ANR	4004268	Symbol	& ctm_only		4004094						
ANR	4004269	Symbol	pdcolor		4004094						
ANR	4004270	Symbol	begin_image		4004094						
ANR	4004271	Symbol	* pic -> type -> begin_typed_image		4004094						
ANR	4004272	Symbol	* * pic -> type		4004094						
ANR	4004273	Symbol	* pic		4004094						
ANR	4004274	Symbol	pic -> type -> begin_typed_image		4004094						
ANR	4004275	Symbol	gs_matrix_compare		4004094						
ANR	4004276	Symbol	"* dev_proc ( dev , begin_image )"		4004094						
ANR	4004277	Symbol	pic -> type		4004094						
ANR	4004278	Symbol	* pim		4004094						
ANR	4004279	Function	gx_default_image_data	1058:0:38484:38734							
ANR	4004280	FunctionDef	"gx_default_image_data (gx_device * dev , gx_image_enum_common_t * info , const byte * * plane_data , int data_x , uint raster , int height)"		4004279	0					
ANR	4004281	CompoundStatement		1062:0:38664:38734	4004279	0					
ANR	4004282	ReturnStatement	"return gx_image_data ( info , plane_data , data_x , raster , height ) ;"	1063:4:38670:38732	4004279	0	True				
ANR	4004283	CallExpression	"gx_image_data ( info , plane_data , data_x , raster , height )"		4004279	0					
ANR	4004284	Callee	gx_image_data		4004279	0					
ANR	4004285	Identifier	gx_image_data		4004279	0					
ANR	4004286	ArgumentList	info		4004279	1					
ANR	4004287	Argument	info		4004279	0					
ANR	4004288	Identifier	info		4004279	0					
ANR	4004289	Argument	plane_data		4004279	1					
ANR	4004290	Identifier	plane_data		4004279	0					
ANR	4004291	Argument	data_x		4004279	2					
ANR	4004292	Identifier	data_x		4004279	0					
ANR	4004293	Argument	raster		4004279	3					
ANR	4004294	Identifier	raster		4004279	0					
ANR	4004295	Argument	height		4004279	4					
ANR	4004296	Identifier	height		4004279	0					
ANR	4004297	ReturnType	int		4004279	1					
ANR	4004298	Identifier	gx_default_image_data		4004279	2					
ANR	4004299	ParameterList	"gx_device * dev , gx_image_enum_common_t * info , const byte * * plane_data , int data_x , uint raster , int height"		4004279	3					
ANR	4004300	Parameter	gx_device * dev	1059:22:38510:38523	4004279	0	True				
ANR	4004301	ParameterType	gx_device *		4004279	0					
ANR	4004302	Identifier	dev		4004279	1					
ANR	4004303	Parameter	gx_image_enum_common_t * info	1059:38:38526:38554	4004279	1	True				
ANR	4004304	ParameterType	gx_image_enum_common_t *		4004279	0					
ANR	4004305	Identifier	info		4004279	1					
ANR	4004306	Parameter	const byte * * plane_data	1060:22:38579:38602	4004279	2	True				
ANR	4004307	ParameterType	const byte * *		4004279	0					
ANR	4004308	Identifier	plane_data		4004279	1					
ANR	4004309	Parameter	int data_x	1061:22:38627:38636	4004279	3	True				
ANR	4004310	ParameterType	int		4004279	0					
ANR	4004311	Identifier	data_x		4004279	1					
ANR	4004312	Parameter	uint raster	1061:34:38639:38649	4004279	4	True				
ANR	4004313	ParameterType	uint		4004279	0					
ANR	4004314	Identifier	raster		4004279	1					
ANR	4004315	Parameter	int height	1061:47:38652:38661	4004279	5	True				
ANR	4004316	ParameterType	int		4004279	0					
ANR	4004317	Identifier	height		4004279	1					
ANR	4004318	CFGEntryNode	ENTRY		4004279		True				
ANR	4004319	CFGExitNode	EXIT		4004279		True				
ANR	4004320	Symbol	data_x		4004279						
ANR	4004321	Symbol	dev		4004279						
ANR	4004322	Symbol	raster		4004279						
ANR	4004323	Symbol	gx_image_data		4004279						
ANR	4004324	Symbol	info		4004279						
ANR	4004325	Symbol	plane_data		4004279						
ANR	4004326	Symbol	height		4004279						
ANR	4004327	Function	gx_default_end_image	1066:0:38737:38890							
ANR	4004328	FunctionDef	"gx_default_end_image (gx_device * dev , gx_image_enum_common_t * info , bool draw_last)"		4004327	0					
ANR	4004329	CompoundStatement		1069:0:38846:38890	4004327	0					
ANR	4004330	ReturnStatement	"return gx_image_end ( info , draw_last ) ;"	1070:4:38852:38888	4004327	0	True				
ANR	4004331	CallExpression	"gx_image_end ( info , draw_last )"		4004327	0					
ANR	4004332	Callee	gx_image_end		4004327	0					
ANR	4004333	Identifier	gx_image_end		4004327	0					
ANR	4004334	ArgumentList	info		4004327	1					
ANR	4004335	Argument	info		4004327	0					
ANR	4004336	Identifier	info		4004327	0					
ANR	4004337	Argument	draw_last		4004327	1					
ANR	4004338	Identifier	draw_last		4004327	0					
ANR	4004339	ReturnType	int		4004327	1					
ANR	4004340	Identifier	gx_default_end_image		4004327	2					
ANR	4004341	ParameterList	"gx_device * dev , gx_image_enum_common_t * info , bool draw_last"		4004327	3					
ANR	4004342	Parameter	gx_device * dev	1067:21:38762:38775	4004327	0	True				
ANR	4004343	ParameterType	gx_device *		4004327	0					
ANR	4004344	Identifier	dev		4004327	1					
ANR	4004345	Parameter	gx_image_enum_common_t * info	1067:37:38778:38806	4004327	1	True				
ANR	4004346	ParameterType	gx_image_enum_common_t *		4004327	0					
ANR	4004347	Identifier	info		4004327	1					
ANR	4004348	Parameter	bool draw_last	1068:21:38830:38843	4004327	2	True				
ANR	4004349	ParameterType	bool		4004327	0					
ANR	4004350	Identifier	draw_last		4004327	1					
ANR	4004351	CFGEntryNode	ENTRY		4004327		True				
ANR	4004352	CFGExitNode	EXIT		4004327		True				
ANR	4004353	Symbol	gx_image_end		4004327						
ANR	4004354	Symbol	dev		4004327						
ANR	4004355	Symbol	draw_last		4004327						
ANR	4004356	Symbol	info		4004327						
ANR	4004357	Function	gx_default_fillpage	1073:0:38893:39637							
ANR	4004358	FunctionDef	"gx_default_fillpage (gx_device * dev , gs_gstate * pgs , gx_device_color * pdevc)"		4004357	0					
ANR	4004359	CompoundStatement		1075:0:38974:39637	4004357	0					
ANR	4004360	IdentifierDeclStatement	"bool hl_color_available = gx_hld_is_hl_color_available ( pgs , pdevc ) ;"	1076:4:38980:39046	4004357	0	True				
ANR	4004361	IdentifierDecl	"hl_color_available = gx_hld_is_hl_color_available ( pgs , pdevc )"		4004357	0					
ANR	4004362	IdentifierDeclType	bool		4004357	0					
ANR	4004363	Identifier	hl_color_available		4004357	1					
ANR	4004364	AssignmentExpression	"hl_color_available = gx_hld_is_hl_color_available ( pgs , pdevc )"		4004357	2		=			
ANR	4004365	Identifier	hl_color_available		4004357	0					
ANR	4004366	CallExpression	"gx_hld_is_hl_color_available ( pgs , pdevc )"		4004357	1					
ANR	4004367	Callee	gx_hld_is_hl_color_available		4004357	0					
ANR	4004368	Identifier	gx_hld_is_hl_color_available		4004357	0					
ANR	4004369	ArgumentList	pgs		4004357	1					
ANR	4004370	Argument	pgs		4004357	0					
ANR	4004371	Identifier	pgs		4004357	0					
ANR	4004372	Argument	pdevc		4004357	1					
ANR	4004373	Identifier	pdevc		4004357	0					
ANR	4004374	IdentifierDeclStatement	int code = 0 ;	1077:4:39052:39064	4004357	1	True				
ANR	4004375	IdentifierDecl	code = 0		4004357	0					
ANR	4004376	IdentifierDeclType	int		4004357	0					
ANR	4004377	Identifier	code		4004357	1					
ANR	4004378	AssignmentExpression	code = 0		4004357	2		=			
ANR	4004379	Identifier	code		4004357	0					
ANR	4004380	PrimaryExpression	0		4004357	1					
ANR	4004381	IfStatement	if ( hl_color_available )		4004357	2					
ANR	4004382	Condition	hl_color_available	1081:8:39164:39181	4004357	0	True				
ANR	4004383	Identifier	hl_color_available		4004357	0					
ANR	4004384	CompoundStatement		8:8:219:237	4004357	1					
ANR	4004385	IdentifierDeclStatement	gs_fixed_rect rect ;	1082:8:39194:39212	4004357	0	True				
ANR	4004386	IdentifierDecl	rect		4004357	0					
ANR	4004387	IdentifierDeclType	gs_fixed_rect		4004357	0					
ANR	4004388	Identifier	rect		4004357	1					
ANR	4004389	ExpressionStatement	rect . p . x = rect . p . y = 0	1084:8:39223:39246	4004357	1	True				
ANR	4004390	AssignmentExpression	rect . p . x = rect . p . y = 0		4004357	0		=			
ANR	4004391	MemberAccess	rect . p . x		4004357	0					
ANR	4004392	MemberAccess	rect . p		4004357	0					
ANR	4004393	Identifier	rect		4004357	0					
ANR	4004394	Identifier	p		4004357	1					
ANR	4004395	Identifier	x		4004357	1					
ANR	4004396	AssignmentExpression	rect . p . y = 0		4004357	1		=			
ANR	4004397	MemberAccess	rect . p . y		4004357	0					
ANR	4004398	MemberAccess	rect . p		4004357	0					
ANR	4004399	Identifier	rect		4004357	0					
ANR	4004400	Identifier	p		4004357	1					
ANR	4004401	Identifier	y		4004357	1					
ANR	4004402	PrimaryExpression	0		4004357	1					
ANR	4004403	ExpressionStatement	rect . q . x = int2fixed ( dev -> width )	1085:8:39256:39288	4004357	2	True				
ANR	4004404	AssignmentExpression	rect . q . x = int2fixed ( dev -> width )		4004357	0		=			
ANR	4004405	MemberAccess	rect . q . x		4004357	0					
ANR	4004406	MemberAccess	rect . q		4004357	0					
ANR	4004407	Identifier	rect		4004357	0					
ANR	4004408	Identifier	q		4004357	1					
ANR	4004409	Identifier	x		4004357	1					
ANR	4004410	CallExpression	int2fixed ( dev -> width )		4004357	1					
ANR	4004411	Callee	int2fixed		4004357	0					
ANR	4004412	Identifier	int2fixed		4004357	0					
ANR	4004413	ArgumentList	dev -> width		4004357	1					
ANR	4004414	Argument	dev -> width		4004357	0					
ANR	4004415	PtrMemberAccess	dev -> width		4004357	0					
ANR	4004416	Identifier	dev		4004357	0					
ANR	4004417	Identifier	width		4004357	1					
ANR	4004418	ExpressionStatement	rect . q . y = int2fixed ( dev -> height )	1086:8:39298:39331	4004357	3	True				
ANR	4004419	AssignmentExpression	rect . q . y = int2fixed ( dev -> height )		4004357	0		=			
ANR	4004420	MemberAccess	rect . q . y		4004357	0					
ANR	4004421	MemberAccess	rect . q		4004357	0					
ANR	4004422	Identifier	rect		4004357	0					
ANR	4004423	Identifier	q		4004357	1					
ANR	4004424	Identifier	y		4004357	1					
ANR	4004425	CallExpression	int2fixed ( dev -> height )		4004357	1					
ANR	4004426	Callee	int2fixed		4004357	0					
ANR	4004427	Identifier	int2fixed		4004357	0					
ANR	4004428	ArgumentList	dev -> height		4004357	1					
ANR	4004429	Argument	dev -> height		4004357	0					
ANR	4004430	PtrMemberAccess	dev -> height		4004357	0					
ANR	4004431	Identifier	dev		4004357	0					
ANR	4004432	Identifier	height		4004357	1					
ANR	4004433	ExpressionStatement	"code = dev_proc ( dev , fill_rectangle_hl_color ) ( dev , & rect , ( const gs_gstate * ) pgs , pdevc , NULL )"	1087:8:39341:39451	4004357	4	True				
ANR	4004434	AssignmentExpression	"code = dev_proc ( dev , fill_rectangle_hl_color ) ( dev , & rect , ( const gs_gstate * ) pgs , pdevc , NULL )"		4004357	0		=			
ANR	4004435	Identifier	code		4004357	0					
ANR	4004436	CallExpression	"dev_proc ( dev , fill_rectangle_hl_color ) ( dev , & rect , ( const gs_gstate * ) pgs , pdevc , NULL )"		4004357	1					
ANR	4004437	Callee	"dev_proc ( dev , fill_rectangle_hl_color )"		4004357	0					
ANR	4004438	CallExpression	"dev_proc ( dev , fill_rectangle_hl_color )"		4004357	0					
ANR	4004439	Callee	dev_proc		4004357	0					
ANR	4004440	Identifier	dev_proc		4004357	0					
ANR	4004441	ArgumentList	dev		4004357	1					
ANR	4004442	Argument	dev		4004357	0					
ANR	4004443	Identifier	dev		4004357	0					
ANR	4004444	Argument	fill_rectangle_hl_color		4004357	1					
ANR	4004445	Identifier	fill_rectangle_hl_color		4004357	0					
ANR	4004446	ArgumentList	dev		4004357	1					
ANR	4004447	Argument	dev		4004357	0					
ANR	4004448	Identifier	dev		4004357	0					
ANR	4004449	Argument	& rect		4004357	1					
ANR	4004450	UnaryOperationExpression	& rect		4004357	0					
ANR	4004451	UnaryOperator	&		4004357	0					
ANR	4004452	Identifier	rect		4004357	1					
ANR	4004453	Argument	( const gs_gstate * ) pgs		4004357	2					
ANR	4004454	CastExpression	( const gs_gstate * ) pgs		4004357	0					
ANR	4004455	CastTarget	const gs_gstate *		4004357	0					
ANR	4004456	Identifier	pgs		4004357	1					
ANR	4004457	Argument	pdevc		4004357	3					
ANR	4004458	Identifier	pdevc		4004357	0					
ANR	4004459	Argument	NULL		4004357	4					
ANR	4004460	Identifier	NULL		4004357	0					
ANR	4004461	IfStatement	if ( ! hl_color_available || code == gs_error_rangecheck )		4004357	3					
ANR	4004462	Condition	! hl_color_available || code == gs_error_rangecheck	1090:8:39467:39516	4004357	0	True				
ANR	4004463	OrExpression	! hl_color_available || code == gs_error_rangecheck		4004357	0		||			
ANR	4004464	UnaryOperationExpression	! hl_color_available		4004357	0					
ANR	4004465	UnaryOperator	!		4004357	0					
ANR	4004466	Identifier	hl_color_available		4004357	1					
ANR	4004467	EqualityExpression	code == gs_error_rangecheck		4004357	1		==			
ANR	4004468	Identifier	code		4004357	0					
ANR	4004469	Identifier	gs_error_rangecheck		4004357	1					
ANR	4004470	ExpressionStatement	"code = gx_fill_rectangle_device_rop ( 0 , 0 , dev -> width , dev -> height , pdevc , dev , lop_default )"	1091:8:39527:39618	4004357	1	True				
ANR	4004471	AssignmentExpression	"code = gx_fill_rectangle_device_rop ( 0 , 0 , dev -> width , dev -> height , pdevc , dev , lop_default )"		4004357	0		=			
ANR	4004472	Identifier	code		4004357	0					
ANR	4004473	CallExpression	"gx_fill_rectangle_device_rop ( 0 , 0 , dev -> width , dev -> height , pdevc , dev , lop_default )"		4004357	1					
ANR	4004474	Callee	gx_fill_rectangle_device_rop		4004357	0					
ANR	4004475	Identifier	gx_fill_rectangle_device_rop		4004357	0					
ANR	4004476	ArgumentList	0		4004357	1					
ANR	4004477	Argument	0		4004357	0					
ANR	4004478	PrimaryExpression	0		4004357	0					
ANR	4004479	Argument	0		4004357	1					
ANR	4004480	PrimaryExpression	0		4004357	0					
ANR	4004481	Argument	dev -> width		4004357	2					
ANR	4004482	PtrMemberAccess	dev -> width		4004357	0					
ANR	4004483	Identifier	dev		4004357	0					
ANR	4004484	Identifier	width		4004357	1					
ANR	4004485	Argument	dev -> height		4004357	3					
ANR	4004486	PtrMemberAccess	dev -> height		4004357	0					
ANR	4004487	Identifier	dev		4004357	0					
ANR	4004488	Identifier	height		4004357	1					
ANR	4004489	Argument	pdevc		4004357	4					
ANR	4004490	Identifier	pdevc		4004357	0					
ANR	4004491	Argument	dev		4004357	5					
ANR	4004492	Identifier	dev		4004357	0					
ANR	4004493	Argument	lop_default		4004357	6					
ANR	4004494	Identifier	lop_default		4004357	0					
ANR	4004495	ReturnStatement	return code ;	1092:4:39624:39635	4004357	4	True				
ANR	4004496	Identifier	code		4004357	0					
ANR	4004497	ReturnType	int		4004357	1					
ANR	4004498	Identifier	gx_default_fillpage		4004357	2					
ANR	4004499	ParameterList	"gx_device * dev , gs_gstate * pgs , gx_device_color * pdevc"		4004357	3					
ANR	4004500	Parameter	gx_device * dev	1074:20:38917:38930	4004357	0	True				
ANR	4004501	ParameterType	gx_device *		4004357	0					
ANR	4004502	Identifier	dev		4004357	1					
ANR	4004503	Parameter	gs_gstate * pgs	1074:36:38933:38947	4004357	1	True				
ANR	4004504	ParameterType	gs_gstate *		4004357	0					
ANR	4004505	Identifier	pgs		4004357	1					
ANR	4004506	Parameter	gx_device_color * pdevc	1074:53:38950:38971	4004357	2	True				
ANR	4004507	ParameterType	gx_device_color *		4004357	0					
ANR	4004508	Identifier	pdevc		4004357	1					
ANR	4004509	CFGEntryNode	ENTRY		4004357		True				
ANR	4004510	CFGExitNode	EXIT		4004357		True				
ANR	4004511	Symbol	* dev		4004357						
ANR	4004512	Symbol	code		4004357						
ANR	4004513	Symbol	NULL		4004357						
ANR	4004514	Symbol	gs_error_rangecheck		4004357						
ANR	4004515	Symbol	dev -> height		4004357						
ANR	4004516	Symbol	pdevc		4004357						
ANR	4004517	Symbol	hl_color_available		4004357						
ANR	4004518	Symbol	lop_default		4004357						
ANR	4004519	Symbol	fill_rectangle_hl_color		4004357						
ANR	4004520	Symbol	gx_fill_rectangle_device_rop		4004357						
ANR	4004521	Symbol	rect . q . y		4004357						
ANR	4004522	Symbol	& rect		4004357						
ANR	4004523	Symbol	rect . q . x		4004357						
ANR	4004524	Symbol	rect . p . x		4004357						
ANR	4004525	Symbol	rect		4004357						
ANR	4004526	Symbol	rect . p . y		4004357						
ANR	4004527	Symbol	dev		4004357						
ANR	4004528	Symbol	dev -> width		4004357						
ANR	4004529	Symbol	gx_hld_is_hl_color_available		4004357						
ANR	4004530	Symbol	dev_proc		4004357						
ANR	4004531	Symbol	int2fixed		4004357						
ANR	4004532	Symbol	pgs		4004357						
ANR	4004533	Symbol	rect . q		4004357						
ANR	4004534	Symbol	rect . p		4004357						
