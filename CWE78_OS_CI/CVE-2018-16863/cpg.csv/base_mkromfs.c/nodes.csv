command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1332505	File	data/converged/CVE-2018-16863_ghostpdl/base_mkromfs.c								
ANR	1332506	ClassDef	romfs_inode_s	106:8:3844:4260							
ANR	1332507	DeclStmt									
ANR	1332508	Decl							unsigned long	unsigned long	disc_length
ANR	1332509	DeclStmt									
ANR	1332510	Decl							unsigned long	unsigned long	length
ANR	1332511	DeclStmt									
ANR	1332512	Decl							char	char *	name
ANR	1332513	DeclStmt									
ANR	1332514	Decl							unsigned long	unsigned long *	data_lengths
ANR	1332515	DeclStmt									
ANR	1332516	Decl							unsigned char	unsigned char * *	data
ANR	1332517	DeclStmt									
ANR	1332518	Decl							romfs_inode_s	romfs_inode_s	romfs_inode
ANR	1332519	ClassDef	Xlist_element_s	115:8:4271:4355							
ANR	1332520	DeclStmt									
ANR	1332521	Decl							void	void *	next
ANR	1332522	DeclStmt									
ANR	1332523	Decl							char	char *	path
ANR	1332524	DeclStmt									
ANR	1332525	Decl							Xlist_element_s	Xlist_element_s	Xlist_element
ANR	1332526	Function	isbigendian	130:0:4553:4687							
ANR	1332527	FunctionDef	isbigendian ()		1332526	0					
ANR	1332528	CompoundStatement		131:0:4589:4687	1332526	0					
ANR	1332529	ClassDefStatement	union { int i ; char c [ sizeof ( int ) ] ; } u = { 1 } ;	132:4:4595:4660	1332526	0	True				
ANR	1332530	IdentifierDecl	u = { 1 }		1332526	0					
ANR	1332531	IdentifierDeclType			1332526	0					
ANR	1332532	Identifier	u		1332526	1					
ANR	1332533	AssignmentExpression	u = { 1 }		1332526	2		=			
ANR	1332534	Identifier	u		1332526	0					
ANR	1332535	InitializerList	1		1332526	1					
ANR	1332536	PrimaryExpression	1		1332526	0					
ANR	1332537	ReturnStatement	return u . c [ 0 ] != 1 ;	137:4:4667:4685	1332526	1	True				
ANR	1332538	EqualityExpression	u . c [ 0 ] != 1		1332526	0		!=			
ANR	1332539	ArrayIndexing	u . c [ 0 ]		1332526	0					
ANR	1332540	MemberAccess	u . c		1332526	0					
ANR	1332541	Identifier	u		1332526	0					
ANR	1332542	Identifier	c		1332526	1					
ANR	1332543	PrimaryExpression	0		1332526	1					
ANR	1332544	PrimaryExpression	1		1332526	1					
ANR	1332545	ReturnType	static inline int		1332526	1					
ANR	1332546	Identifier	isbigendian		1332526	2					
ANR	1332547	ParameterList			1332526	3					
ANR	1332548	CFGEntryNode	ENTRY		1332526		True				
ANR	1332549	CFGExitNode	EXIT		1332526		True				
ANR	1332550	Symbol	* u . c		1332526						
ANR	1332551	Symbol	u		1332526						
ANR	1332552	Symbol	u . c		1332526						
ANR	1332553	Symbol	* u		1332526						
ANR	1332554	DeclStmt									
ANR	1332555	Decl							const char	const char [ ]	msg_truncated
ANR	1332556	Function	outprintf	149:0:5146:5628							
ANR	1332557	FunctionDef	"outprintf (const gs_memory_t * mem , const char * fmt)"		1332556	0					
ANR	1332558	CompoundStatement		150:0:5206:5628	1332556	0					
ANR	1332559	IdentifierDeclStatement	int count ;	151:4:5212:5221	1332556	0	True				
ANR	1332560	IdentifierDecl	count		1332556	0					
ANR	1332561	IdentifierDeclType	int		1332556	0					
ANR	1332562	Identifier	count		1332556	1					
ANR	1332563	IdentifierDeclStatement	char buf [ PRINTF_BUF_LENGTH ] ;	152:4:5227:5254	1332556	1	True				
ANR	1332564	IdentifierDecl	buf [ PRINTF_BUF_LENGTH ]		1332556	0					
ANR	1332565	IdentifierDeclType	char [ PRINTF_BUF_LENGTH ]		1332556	0					
ANR	1332566	Identifier	buf		1332556	1					
ANR	1332567	Identifier	PRINTF_BUF_LENGTH		1332556	2					
ANR	1332568	IdentifierDeclStatement	va_list args ;	153:4:5260:5272	1332556	2	True				
ANR	1332569	IdentifierDecl	args		1332556	0					
ANR	1332570	IdentifierDeclType	va_list		1332556	0					
ANR	1332571	Identifier	args		1332556	1					
ANR	1332572	ExpressionStatement	"va_start ( args , fmt )"	155:4:5279:5298	1332556	3	True				
ANR	1332573	CallExpression	"va_start ( args , fmt )"		1332556	0					
ANR	1332574	Callee	va_start		1332556	0					
ANR	1332575	Identifier	va_start		1332556	0					
ANR	1332576	ArgumentList	args		1332556	1					
ANR	1332577	Argument	args		1332556	0					
ANR	1332578	Identifier	args		1332556	0					
ANR	1332579	Argument	fmt		1332556	1					
ANR	1332580	Identifier	fmt		1332556	0					
ANR	1332581	ExpressionStatement	"count = vsnprintf ( buf , sizeof ( buf ) , fmt , args )"	156:4:5304:5350	1332556	4	True				
ANR	1332582	AssignmentExpression	"count = vsnprintf ( buf , sizeof ( buf ) , fmt , args )"		1332556	0		=			
ANR	1332583	Identifier	count		1332556	0					
ANR	1332584	CallExpression	"vsnprintf ( buf , sizeof ( buf ) , fmt , args )"		1332556	1					
ANR	1332585	Callee	vsnprintf		1332556	0					
ANR	1332586	Identifier	vsnprintf		1332556	0					
ANR	1332587	ArgumentList	buf		1332556	1					
ANR	1332588	Argument	buf		1332556	0					
ANR	1332589	Identifier	buf		1332556	0					
ANR	1332590	Argument	sizeof ( buf )		1332556	1					
ANR	1332591	SizeofExpression	sizeof ( buf )		1332556	0					
ANR	1332592	Sizeof	sizeof		1332556	0					
ANR	1332593	SizeofOperand	buf		1332556	1					
ANR	1332594	Argument	fmt		1332556	2					
ANR	1332595	Identifier	fmt		1332556	0					
ANR	1332596	Argument	args		1332556	3					
ANR	1332597	Identifier	args		1332556	0					
ANR	1332598	IfStatement	if ( count >= sizeof ( buf ) || count < 0 )		1332556	5					
ANR	1332599	Condition	count >= sizeof ( buf ) || count < 0	157:8:5360:5392	1332556	0	True				
ANR	1332600	OrExpression	count >= sizeof ( buf ) || count < 0		1332556	0		||			
ANR	1332601	RelationalExpression	count >= sizeof ( buf )		1332556	0		>=			
ANR	1332602	Identifier	count		1332556	0					
ANR	1332603	SizeofExpression	sizeof ( buf )		1332556	1					
ANR	1332604	Sizeof	sizeof		1332556	0					
ANR	1332605	SizeofOperand	buf		1332556	1					
ANR	1332606	RelationalExpression	count < 0		1332556	1		<			
ANR	1332607	Identifier	count		1332556	0					
ANR	1332608	PrimaryExpression	0		1332556	1					
ANR	1332609	CompoundStatement		8:44:189:189	1332556	1					
ANR	1332610	ExpressionStatement	"fwrite ( buf , 1 , sizeof ( buf ) - 1 , stdout )"	158:8:5424:5463	1332556	0	True				
ANR	1332611	CallExpression	"fwrite ( buf , 1 , sizeof ( buf ) - 1 , stdout )"		1332556	0					
ANR	1332612	Callee	fwrite		1332556	0					
ANR	1332613	Identifier	fwrite		1332556	0					
ANR	1332614	ArgumentList	buf		1332556	1					
ANR	1332615	Argument	buf		1332556	0					
ANR	1332616	Identifier	buf		1332556	0					
ANR	1332617	Argument	1		1332556	1					
ANR	1332618	PrimaryExpression	1		1332556	0					
ANR	1332619	Argument	sizeof ( buf ) - 1		1332556	2					
ANR	1332620	AdditiveExpression	sizeof ( buf ) - 1		1332556	0		-			
ANR	1332621	SizeofExpression	sizeof ( buf )		1332556	0					
ANR	1332622	Sizeof	sizeof		1332556	0					
ANR	1332623	SizeofOperand	buf		1332556	1					
ANR	1332624	PrimaryExpression	1		1332556	1					
ANR	1332625	Argument	stdout		1332556	3					
ANR	1332626	Identifier	stdout		1332556	0					
ANR	1332627	ExpressionStatement	"fwrite ( msg_truncated , 1 , sizeof ( msg_truncated ) - 1 , stdout )"	159:8:5473:5532	1332556	1	True				
ANR	1332628	CallExpression	"fwrite ( msg_truncated , 1 , sizeof ( msg_truncated ) - 1 , stdout )"		1332556	0					
ANR	1332629	Callee	fwrite		1332556	0					
ANR	1332630	Identifier	fwrite		1332556	0					
ANR	1332631	ArgumentList	msg_truncated		1332556	1					
ANR	1332632	Argument	msg_truncated		1332556	0					
ANR	1332633	Identifier	msg_truncated		1332556	0					
ANR	1332634	Argument	1		1332556	1					
ANR	1332635	PrimaryExpression	1		1332556	0					
ANR	1332636	Argument	sizeof ( msg_truncated ) - 1		1332556	2					
ANR	1332637	AdditiveExpression	sizeof ( msg_truncated ) - 1		1332556	0		-			
ANR	1332638	SizeofExpression	sizeof ( msg_truncated )		1332556	0					
ANR	1332639	Sizeof	sizeof		1332556	0					
ANR	1332640	SizeofOperand	msg_truncated		1332556	1					
ANR	1332641	PrimaryExpression	1		1332556	1					
ANR	1332642	Argument	stdout		1332556	3					
ANR	1332643	Identifier	stdout		1332556	0					
ANR	1332644	ElseStatement	else		1332556	0					
ANR	1332645	CompoundStatement		11:11:338:338	1332556	0					
ANR	1332646	ExpressionStatement	"fwrite ( buf , 1 , count , stdout )"	161:8:5555:5584	1332556	0	True				
ANR	1332647	CallExpression	"fwrite ( buf , 1 , count , stdout )"		1332556	0					
ANR	1332648	Callee	fwrite		1332556	0					
ANR	1332649	Identifier	fwrite		1332556	0					
ANR	1332650	ArgumentList	buf		1332556	1					
ANR	1332651	Argument	buf		1332556	0					
ANR	1332652	Identifier	buf		1332556	0					
ANR	1332653	Argument	1		1332556	1					
ANR	1332654	PrimaryExpression	1		1332556	0					
ANR	1332655	Argument	count		1332556	2					
ANR	1332656	Identifier	count		1332556	0					
ANR	1332657	Argument	stdout		1332556	3					
ANR	1332658	Identifier	stdout		1332556	0					
ANR	1332659	ExpressionStatement	va_end ( args )	163:4:5596:5608	1332556	6	True				
ANR	1332660	CallExpression	va_end ( args )		1332556	0					
ANR	1332661	Callee	va_end		1332556	0					
ANR	1332662	Identifier	va_end		1332556	0					
ANR	1332663	ArgumentList	args		1332556	1					
ANR	1332664	Argument	args		1332556	0					
ANR	1332665	Identifier	args		1332556	0					
ANR	1332666	ReturnStatement	return count ;	164:4:5614:5626	1332556	7	True				
ANR	1332667	Identifier	count		1332556	0					
ANR	1332668	ReturnType	int		1332556	1					
ANR	1332669	Identifier	outprintf		1332556	2					
ANR	1332670	ParameterList	"const gs_memory_t * mem , const char * fmt"		1332556	3					
ANR	1332671	Parameter	const gs_memory_t * mem	149:14:5160:5181	1332556	0	True				
ANR	1332672	ParameterType	const gs_memory_t *		1332556	0					
ANR	1332673	Identifier	mem		1332556	1					
ANR	1332674	Parameter	const char * fmt	149:38:5184:5198	1332556	1	True				
ANR	1332675	ParameterType	const char *		1332556	0					
ANR	1332676	Identifier	fmt		1332556	1					
ANR	1332677	CFGEntryNode	ENTRY		1332556		True				
ANR	1332678	CFGExitNode	EXIT		1332556		True				
ANR	1332679	Symbol	args		1332556						
ANR	1332680	Symbol	buf		1332556						
ANR	1332681	Symbol	msg_truncated		1332556						
ANR	1332682	Symbol	mem		1332556						
ANR	1332683	Symbol	stdout		1332556						
ANR	1332684	Symbol	count		1332556						
ANR	1332685	Symbol	fmt		1332556						
ANR	1332686	Symbol	vsnprintf		1332556						
ANR	1332687	Function	errprintf_nomem	168:0:5653:6117							
ANR	1332688	FunctionDef	errprintf_nomem (const char * fmt)		1332687	0					
ANR	1332689	CompoundStatement		169:0:5695:6117	1332687	0					
ANR	1332690	IdentifierDeclStatement	int count ;	170:4:5701:5710	1332687	0	True				
ANR	1332691	IdentifierDecl	count		1332687	0					
ANR	1332692	IdentifierDeclType	int		1332687	0					
ANR	1332693	Identifier	count		1332687	1					
ANR	1332694	IdentifierDeclStatement	char buf [ PRINTF_BUF_LENGTH ] ;	171:4:5716:5743	1332687	1	True				
ANR	1332695	IdentifierDecl	buf [ PRINTF_BUF_LENGTH ]		1332687	0					
ANR	1332696	IdentifierDeclType	char [ PRINTF_BUF_LENGTH ]		1332687	0					
ANR	1332697	Identifier	buf		1332687	1					
ANR	1332698	Identifier	PRINTF_BUF_LENGTH		1332687	2					
ANR	1332699	IdentifierDeclStatement	va_list args ;	172:4:5749:5761	1332687	2	True				
ANR	1332700	IdentifierDecl	args		1332687	0					
ANR	1332701	IdentifierDeclType	va_list		1332687	0					
ANR	1332702	Identifier	args		1332687	1					
ANR	1332703	ExpressionStatement	"va_start ( args , fmt )"	174:4:5768:5787	1332687	3	True				
ANR	1332704	CallExpression	"va_start ( args , fmt )"		1332687	0					
ANR	1332705	Callee	va_start		1332687	0					
ANR	1332706	Identifier	va_start		1332687	0					
ANR	1332707	ArgumentList	args		1332687	1					
ANR	1332708	Argument	args		1332687	0					
ANR	1332709	Identifier	args		1332687	0					
ANR	1332710	Argument	fmt		1332687	1					
ANR	1332711	Identifier	fmt		1332687	0					
ANR	1332712	ExpressionStatement	"count = vsnprintf ( buf , sizeof ( buf ) , fmt , args )"	175:4:5793:5839	1332687	4	True				
ANR	1332713	AssignmentExpression	"count = vsnprintf ( buf , sizeof ( buf ) , fmt , args )"		1332687	0		=			
ANR	1332714	Identifier	count		1332687	0					
ANR	1332715	CallExpression	"vsnprintf ( buf , sizeof ( buf ) , fmt , args )"		1332687	1					
ANR	1332716	Callee	vsnprintf		1332687	0					
ANR	1332717	Identifier	vsnprintf		1332687	0					
ANR	1332718	ArgumentList	buf		1332687	1					
ANR	1332719	Argument	buf		1332687	0					
ANR	1332720	Identifier	buf		1332687	0					
ANR	1332721	Argument	sizeof ( buf )		1332687	1					
ANR	1332722	SizeofExpression	sizeof ( buf )		1332687	0					
ANR	1332723	Sizeof	sizeof		1332687	0					
ANR	1332724	SizeofOperand	buf		1332687	1					
ANR	1332725	Argument	fmt		1332687	2					
ANR	1332726	Identifier	fmt		1332687	0					
ANR	1332727	Argument	args		1332687	3					
ANR	1332728	Identifier	args		1332687	0					
ANR	1332729	IfStatement	if ( count >= sizeof ( buf ) || count < 0 )		1332687	5					
ANR	1332730	Condition	count >= sizeof ( buf ) || count < 0	176:8:5849:5881	1332687	0	True				
ANR	1332731	OrExpression	count >= sizeof ( buf ) || count < 0		1332687	0		||			
ANR	1332732	RelationalExpression	count >= sizeof ( buf )		1332687	0		>=			
ANR	1332733	Identifier	count		1332687	0					
ANR	1332734	SizeofExpression	sizeof ( buf )		1332687	1					
ANR	1332735	Sizeof	sizeof		1332687	0					
ANR	1332736	SizeofOperand	buf		1332687	1					
ANR	1332737	RelationalExpression	count < 0		1332687	1		<			
ANR	1332738	Identifier	count		1332687	0					
ANR	1332739	PrimaryExpression	0		1332687	1					
ANR	1332740	CompoundStatement		8:44:189:189	1332687	1					
ANR	1332741	ExpressionStatement	"fwrite ( buf , 1 , sizeof ( buf ) - 1 , stderr )"	177:8:5913:5952	1332687	0	True				
ANR	1332742	CallExpression	"fwrite ( buf , 1 , sizeof ( buf ) - 1 , stderr )"		1332687	0					
ANR	1332743	Callee	fwrite		1332687	0					
ANR	1332744	Identifier	fwrite		1332687	0					
ANR	1332745	ArgumentList	buf		1332687	1					
ANR	1332746	Argument	buf		1332687	0					
ANR	1332747	Identifier	buf		1332687	0					
ANR	1332748	Argument	1		1332687	1					
ANR	1332749	PrimaryExpression	1		1332687	0					
ANR	1332750	Argument	sizeof ( buf ) - 1		1332687	2					
ANR	1332751	AdditiveExpression	sizeof ( buf ) - 1		1332687	0		-			
ANR	1332752	SizeofExpression	sizeof ( buf )		1332687	0					
ANR	1332753	Sizeof	sizeof		1332687	0					
ANR	1332754	SizeofOperand	buf		1332687	1					
ANR	1332755	PrimaryExpression	1		1332687	1					
ANR	1332756	Argument	stderr		1332687	3					
ANR	1332757	Identifier	stderr		1332687	0					
ANR	1332758	ExpressionStatement	"fwrite ( msg_truncated , 1 , sizeof ( msg_truncated ) - 1 , stderr )"	178:8:5962:6021	1332687	1	True				
ANR	1332759	CallExpression	"fwrite ( msg_truncated , 1 , sizeof ( msg_truncated ) - 1 , stderr )"		1332687	0					
ANR	1332760	Callee	fwrite		1332687	0					
ANR	1332761	Identifier	fwrite		1332687	0					
ANR	1332762	ArgumentList	msg_truncated		1332687	1					
ANR	1332763	Argument	msg_truncated		1332687	0					
ANR	1332764	Identifier	msg_truncated		1332687	0					
ANR	1332765	Argument	1		1332687	1					
ANR	1332766	PrimaryExpression	1		1332687	0					
ANR	1332767	Argument	sizeof ( msg_truncated ) - 1		1332687	2					
ANR	1332768	AdditiveExpression	sizeof ( msg_truncated ) - 1		1332687	0		-			
ANR	1332769	SizeofExpression	sizeof ( msg_truncated )		1332687	0					
ANR	1332770	Sizeof	sizeof		1332687	0					
ANR	1332771	SizeofOperand	msg_truncated		1332687	1					
ANR	1332772	PrimaryExpression	1		1332687	1					
ANR	1332773	Argument	stderr		1332687	3					
ANR	1332774	Identifier	stderr		1332687	0					
ANR	1332775	ElseStatement	else		1332687	0					
ANR	1332776	CompoundStatement		11:11:338:338	1332687	0					
ANR	1332777	ExpressionStatement	"fwrite ( buf , 1 , count , stderr )"	180:8:6044:6073	1332687	0	True				
ANR	1332778	CallExpression	"fwrite ( buf , 1 , count , stderr )"		1332687	0					
ANR	1332779	Callee	fwrite		1332687	0					
ANR	1332780	Identifier	fwrite		1332687	0					
ANR	1332781	ArgumentList	buf		1332687	1					
ANR	1332782	Argument	buf		1332687	0					
ANR	1332783	Identifier	buf		1332687	0					
ANR	1332784	Argument	1		1332687	1					
ANR	1332785	PrimaryExpression	1		1332687	0					
ANR	1332786	Argument	count		1332687	2					
ANR	1332787	Identifier	count		1332687	0					
ANR	1332788	Argument	stderr		1332687	3					
ANR	1332789	Identifier	stderr		1332687	0					
ANR	1332790	ExpressionStatement	va_end ( args )	182:4:6085:6097	1332687	6	True				
ANR	1332791	CallExpression	va_end ( args )		1332687	0					
ANR	1332792	Callee	va_end		1332687	0					
ANR	1332793	Identifier	va_end		1332687	0					
ANR	1332794	ArgumentList	args		1332687	1					
ANR	1332795	Argument	args		1332687	0					
ANR	1332796	Identifier	args		1332687	0					
ANR	1332797	ReturnStatement	return count ;	183:4:6103:6115	1332687	7	True				
ANR	1332798	Identifier	count		1332687	0					
ANR	1332799	ReturnType	int		1332687	1					
ANR	1332800	Identifier	errprintf_nomem		1332687	2					
ANR	1332801	ParameterList	const char * fmt		1332687	3					
ANR	1332802	Parameter	const char * fmt	168:20:5673:5687	1332687	0	True				
ANR	1332803	ParameterType	const char *		1332687	0					
ANR	1332804	Identifier	fmt		1332687	1					
ANR	1332805	CFGEntryNode	ENTRY		1332687		True				
ANR	1332806	CFGExitNode	EXIT		1332687		True				
ANR	1332807	Symbol	args		1332687						
ANR	1332808	Symbol	buf		1332687						
ANR	1332809	Symbol	msg_truncated		1332687						
ANR	1332810	Symbol	count		1332687						
ANR	1332811	Symbol	fmt		1332687						
ANR	1332812	Symbol	vsnprintf		1332687						
ANR	1332813	Symbol	stderr		1332687						
ANR	1332814	Function	errprintf	187:0:6127:6609							
ANR	1332815	FunctionDef	"errprintf (const gs_memory_t * mem , const char * fmt)"		1332814	0					
ANR	1332816	CompoundStatement		188:0:6187:6609	1332814	0					
ANR	1332817	IdentifierDeclStatement	int count ;	189:4:6193:6202	1332814	0	True				
ANR	1332818	IdentifierDecl	count		1332814	0					
ANR	1332819	IdentifierDeclType	int		1332814	0					
ANR	1332820	Identifier	count		1332814	1					
ANR	1332821	IdentifierDeclStatement	char buf [ PRINTF_BUF_LENGTH ] ;	190:4:6208:6235	1332814	1	True				
ANR	1332822	IdentifierDecl	buf [ PRINTF_BUF_LENGTH ]		1332814	0					
ANR	1332823	IdentifierDeclType	char [ PRINTF_BUF_LENGTH ]		1332814	0					
ANR	1332824	Identifier	buf		1332814	1					
ANR	1332825	Identifier	PRINTF_BUF_LENGTH		1332814	2					
ANR	1332826	IdentifierDeclStatement	va_list args ;	191:4:6241:6253	1332814	2	True				
ANR	1332827	IdentifierDecl	args		1332814	0					
ANR	1332828	IdentifierDeclType	va_list		1332814	0					
ANR	1332829	Identifier	args		1332814	1					
ANR	1332830	ExpressionStatement	"va_start ( args , fmt )"	193:4:6260:6279	1332814	3	True				
ANR	1332831	CallExpression	"va_start ( args , fmt )"		1332814	0					
ANR	1332832	Callee	va_start		1332814	0					
ANR	1332833	Identifier	va_start		1332814	0					
ANR	1332834	ArgumentList	args		1332814	1					
ANR	1332835	Argument	args		1332814	0					
ANR	1332836	Identifier	args		1332814	0					
ANR	1332837	Argument	fmt		1332814	1					
ANR	1332838	Identifier	fmt		1332814	0					
ANR	1332839	ExpressionStatement	"count = vsnprintf ( buf , sizeof ( buf ) , fmt , args )"	194:4:6285:6331	1332814	4	True				
ANR	1332840	AssignmentExpression	"count = vsnprintf ( buf , sizeof ( buf ) , fmt , args )"		1332814	0		=			
ANR	1332841	Identifier	count		1332814	0					
ANR	1332842	CallExpression	"vsnprintf ( buf , sizeof ( buf ) , fmt , args )"		1332814	1					
ANR	1332843	Callee	vsnprintf		1332814	0					
ANR	1332844	Identifier	vsnprintf		1332814	0					
ANR	1332845	ArgumentList	buf		1332814	1					
ANR	1332846	Argument	buf		1332814	0					
ANR	1332847	Identifier	buf		1332814	0					
ANR	1332848	Argument	sizeof ( buf )		1332814	1					
ANR	1332849	SizeofExpression	sizeof ( buf )		1332814	0					
ANR	1332850	Sizeof	sizeof		1332814	0					
ANR	1332851	SizeofOperand	buf		1332814	1					
ANR	1332852	Argument	fmt		1332814	2					
ANR	1332853	Identifier	fmt		1332814	0					
ANR	1332854	Argument	args		1332814	3					
ANR	1332855	Identifier	args		1332814	0					
ANR	1332856	IfStatement	if ( count >= sizeof ( buf ) || count < 0 )		1332814	5					
ANR	1332857	Condition	count >= sizeof ( buf ) || count < 0	195:8:6341:6373	1332814	0	True				
ANR	1332858	OrExpression	count >= sizeof ( buf ) || count < 0		1332814	0		||			
ANR	1332859	RelationalExpression	count >= sizeof ( buf )		1332814	0		>=			
ANR	1332860	Identifier	count		1332814	0					
ANR	1332861	SizeofExpression	sizeof ( buf )		1332814	1					
ANR	1332862	Sizeof	sizeof		1332814	0					
ANR	1332863	SizeofOperand	buf		1332814	1					
ANR	1332864	RelationalExpression	count < 0		1332814	1		<			
ANR	1332865	Identifier	count		1332814	0					
ANR	1332866	PrimaryExpression	0		1332814	1					
ANR	1332867	CompoundStatement		8:44:189:189	1332814	1					
ANR	1332868	ExpressionStatement	"fwrite ( buf , 1 , sizeof ( buf ) - 1 , stderr )"	196:8:6405:6444	1332814	0	True				
ANR	1332869	CallExpression	"fwrite ( buf , 1 , sizeof ( buf ) - 1 , stderr )"		1332814	0					
ANR	1332870	Callee	fwrite		1332814	0					
ANR	1332871	Identifier	fwrite		1332814	0					
ANR	1332872	ArgumentList	buf		1332814	1					
ANR	1332873	Argument	buf		1332814	0					
ANR	1332874	Identifier	buf		1332814	0					
ANR	1332875	Argument	1		1332814	1					
ANR	1332876	PrimaryExpression	1		1332814	0					
ANR	1332877	Argument	sizeof ( buf ) - 1		1332814	2					
ANR	1332878	AdditiveExpression	sizeof ( buf ) - 1		1332814	0		-			
ANR	1332879	SizeofExpression	sizeof ( buf )		1332814	0					
ANR	1332880	Sizeof	sizeof		1332814	0					
ANR	1332881	SizeofOperand	buf		1332814	1					
ANR	1332882	PrimaryExpression	1		1332814	1					
ANR	1332883	Argument	stderr		1332814	3					
ANR	1332884	Identifier	stderr		1332814	0					
ANR	1332885	ExpressionStatement	"fwrite ( msg_truncated , 1 , sizeof ( msg_truncated ) - 1 , stderr )"	197:8:6454:6513	1332814	1	True				
ANR	1332886	CallExpression	"fwrite ( msg_truncated , 1 , sizeof ( msg_truncated ) - 1 , stderr )"		1332814	0					
ANR	1332887	Callee	fwrite		1332814	0					
ANR	1332888	Identifier	fwrite		1332814	0					
ANR	1332889	ArgumentList	msg_truncated		1332814	1					
ANR	1332890	Argument	msg_truncated		1332814	0					
ANR	1332891	Identifier	msg_truncated		1332814	0					
ANR	1332892	Argument	1		1332814	1					
ANR	1332893	PrimaryExpression	1		1332814	0					
ANR	1332894	Argument	sizeof ( msg_truncated ) - 1		1332814	2					
ANR	1332895	AdditiveExpression	sizeof ( msg_truncated ) - 1		1332814	0		-			
ANR	1332896	SizeofExpression	sizeof ( msg_truncated )		1332814	0					
ANR	1332897	Sizeof	sizeof		1332814	0					
ANR	1332898	SizeofOperand	msg_truncated		1332814	1					
ANR	1332899	PrimaryExpression	1		1332814	1					
ANR	1332900	Argument	stderr		1332814	3					
ANR	1332901	Identifier	stderr		1332814	0					
ANR	1332902	ElseStatement	else		1332814	0					
ANR	1332903	CompoundStatement		11:11:338:338	1332814	0					
ANR	1332904	ExpressionStatement	"fwrite ( buf , 1 , count , stderr )"	199:8:6536:6565	1332814	0	True				
ANR	1332905	CallExpression	"fwrite ( buf , 1 , count , stderr )"		1332814	0					
ANR	1332906	Callee	fwrite		1332814	0					
ANR	1332907	Identifier	fwrite		1332814	0					
ANR	1332908	ArgumentList	buf		1332814	1					
ANR	1332909	Argument	buf		1332814	0					
ANR	1332910	Identifier	buf		1332814	0					
ANR	1332911	Argument	1		1332814	1					
ANR	1332912	PrimaryExpression	1		1332814	0					
ANR	1332913	Argument	count		1332814	2					
ANR	1332914	Identifier	count		1332814	0					
ANR	1332915	Argument	stderr		1332814	3					
ANR	1332916	Identifier	stderr		1332814	0					
ANR	1332917	ExpressionStatement	va_end ( args )	201:4:6577:6589	1332814	6	True				
ANR	1332918	CallExpression	va_end ( args )		1332814	0					
ANR	1332919	Callee	va_end		1332814	0					
ANR	1332920	Identifier	va_end		1332814	0					
ANR	1332921	ArgumentList	args		1332814	1					
ANR	1332922	Argument	args		1332814	0					
ANR	1332923	Identifier	args		1332814	0					
ANR	1332924	ReturnStatement	return count ;	202:4:6595:6607	1332814	7	True				
ANR	1332925	Identifier	count		1332814	0					
ANR	1332926	ReturnType	int		1332814	1					
ANR	1332927	Identifier	errprintf		1332814	2					
ANR	1332928	ParameterList	"const gs_memory_t * mem , const char * fmt"		1332814	3					
ANR	1332929	Parameter	const gs_memory_t * mem	187:14:6141:6162	1332814	0	True				
ANR	1332930	ParameterType	const gs_memory_t *		1332814	0					
ANR	1332931	Identifier	mem		1332814	1					
ANR	1332932	Parameter	const char * fmt	187:38:6165:6179	1332814	1	True				
ANR	1332933	ParameterType	const char *		1332814	0					
ANR	1332934	Identifier	fmt		1332814	1					
ANR	1332935	CFGEntryNode	ENTRY		1332814		True				
ANR	1332936	CFGExitNode	EXIT		1332814		True				
ANR	1332937	Symbol	args		1332814						
ANR	1332938	Symbol	buf		1332814						
ANR	1332939	Symbol	msg_truncated		1332814						
ANR	1332940	Symbol	mem		1332814						
ANR	1332941	Symbol	count		1332814						
ANR	1332942	Symbol	fmt		1332814						
ANR	1332943	Symbol	vsnprintf		1332814						
ANR	1332944	Symbol	stderr		1332814						
ANR	1332945	Function	lprintf_file_and_line	208:0:6694:6784							
ANR	1332946	FunctionDef	"lprintf_file_and_line (const char * file , int line)"		1332945	0					
ANR	1332947	CompoundStatement		210:0:6749:6784	1332945	0					
ANR	1332948	ExpressionStatement	"epf ( ""%s(%d): "" , file , line )"	211:4:6755:6782	1332945	0	True				
ANR	1332949	CallExpression	"epf ( ""%s(%d): "" , file , line )"		1332945	0					
ANR	1332950	Callee	epf		1332945	0					
ANR	1332951	Identifier	epf		1332945	0					
ANR	1332952	ArgumentList	"""%s(%d): """		1332945	1					
ANR	1332953	Argument	"""%s(%d): """		1332945	0					
ANR	1332954	PrimaryExpression	"""%s(%d): """		1332945	0					
ANR	1332955	Argument	file		1332945	1					
ANR	1332956	Identifier	file		1332945	0					
ANR	1332957	Argument	line		1332945	2					
ANR	1332958	Identifier	line		1332945	0					
ANR	1332959	ReturnType	void		1332945	1					
ANR	1332960	Identifier	lprintf_file_and_line		1332945	2					
ANR	1332961	ParameterList	"const char * file , int line"		1332945	3					
ANR	1332962	Parameter	const char * file	209:22:6721:6736	1332945	0	True				
ANR	1332963	ParameterType	const char *		1332945	0					
ANR	1332964	Identifier	file		1332945	1					
ANR	1332965	Parameter	int line	209:40:6739:6746	1332945	1	True				
ANR	1332966	ParameterType	int		1332945	0					
ANR	1332967	Identifier	line		1332945	1					
ANR	1332968	CFGEntryNode	ENTRY		1332945		True				
ANR	1332969	CFGExitNode	EXIT		1332945		True				
ANR	1332970	Symbol	file		1332945						
ANR	1332971	Symbol	line		1332945						
ANR	1332972	Function	lprintf_file_only	214:0:6792:6871							
ANR	1332973	FunctionDef	"lprintf_file_only (FILE * f , const char * file)"		1332972	0					
ANR	1332974	CompoundStatement		216:0:6843:6871	1332972	0					
ANR	1332975	ExpressionStatement	"epf ( ""%s(?): "" , file )"	217:4:6849:6869	1332972	0	True				
ANR	1332976	CallExpression	"epf ( ""%s(?): "" , file )"		1332972	0					
ANR	1332977	Callee	epf		1332972	0					
ANR	1332978	Identifier	epf		1332972	0					
ANR	1332979	ArgumentList	"""%s(?): """		1332972	1					
ANR	1332980	Argument	"""%s(?): """		1332972	0					
ANR	1332981	PrimaryExpression	"""%s(?): """		1332972	0					
ANR	1332982	Argument	file		1332972	1					
ANR	1332983	Identifier	file		1332972	0					
ANR	1332984	ReturnType	void		1332972	1					
ANR	1332985	Identifier	lprintf_file_only		1332972	2					
ANR	1332986	ParameterList	"FILE * f , const char * file"		1332972	3					
ANR	1332987	Parameter	FILE * f	215:18:6815:6822	1332972	0	True				
ANR	1332988	ParameterType	FILE *		1332972	0					
ANR	1332989	Identifier	f		1332972	1					
ANR	1332990	Parameter	const char * file	215:28:6825:6840	1332972	1	True				
ANR	1332991	ParameterType	const char *		1332972	0					
ANR	1332992	Identifier	file		1332972	1					
ANR	1332993	CFGEntryNode	ENTRY		1332972		True				
ANR	1332994	CFGExitNode	EXIT		1332972		True				
ANR	1332995	Symbol	file		1332972						
ANR	1332996	Symbol	f		1332972						
ANR	1332997	Function	eprintf_program_ident	221:0:6881:7244							
ANR	1332998	FunctionDef	"eprintf_program_ident (const char * program_name , long revision_number)"		1332997	0					
ANR	1332999	CompoundStatement		224:0:6978:7244	1332997	0					
ANR	1333000	IfStatement	if ( program_name )		1332997	0					
ANR	1333001	Condition	program_name	225:8:6988:6999	1332997	0	True				
ANR	1333002	Identifier	program_name		1332997	0					
ANR	1333003	CompoundStatement		2:22:23:23	1332997	1					
ANR	1333004	ExpressionStatement	"epf ( ( revision_number ? ""%s "" : ""%s"" ) , program_name )"	226:8:7012:7063	1332997	0	True				
ANR	1333005	CallExpression	"epf ( ( revision_number ? ""%s "" : ""%s"" ) , program_name )"		1332997	0					
ANR	1333006	Callee	epf		1332997	0					
ANR	1333007	Identifier	epf		1332997	0					
ANR	1333008	ArgumentList	"revision_number ? ""%s "" : ""%s"""		1332997	1					
ANR	1333009	Argument	"revision_number ? ""%s "" : ""%s"""		1332997	0					
ANR	1333010	ConditionalExpression	"revision_number ? ""%s "" : ""%s"""		1332997	0					
ANR	1333011	Condition	revision_number		1332997	0					
ANR	1333012	Identifier	revision_number		1332997	0					
ANR	1333013	PrimaryExpression	"""%s """		1332997	1					
ANR	1333014	PrimaryExpression	"""%s"""		1332997	2					
ANR	1333015	Argument	program_name		1332997	1					
ANR	1333016	Identifier	program_name		1332997	0					
ANR	1333017	IfStatement	if ( revision_number )		1332997	1					
ANR	1333018	Condition	revision_number	227:12:7077:7091	1332997	0	True				
ANR	1333019	Identifier	revision_number		1332997	0					
ANR	1333020	CompoundStatement		5:12:129:162	1332997	1					
ANR	1333021	IdentifierDeclStatement	int fpart = revision_number % 100 ;	228:12:7108:7141	1332997	0	True				
ANR	1333022	IdentifierDecl	fpart = revision_number % 100		1332997	0					
ANR	1333023	IdentifierDeclType	int		1332997	0					
ANR	1333024	Identifier	fpart		1332997	1					
ANR	1333025	AssignmentExpression	fpart = revision_number % 100		1332997	2		=			
ANR	1333026	Identifier	fpart		1332997	0					
ANR	1333027	MultiplicativeExpression	revision_number % 100		1332997	1		%			
ANR	1333028	Identifier	revision_number		1332997	0					
ANR	1333029	PrimaryExpression	100		1332997	1					
ANR	1333030	ExpressionStatement	"epf ( ""%d.%02d"" , ( int ) ( revision_number / 100 ) , fpart )"	230:12:7156:7207	1332997	1	True				
ANR	1333031	CallExpression	"epf ( ""%d.%02d"" , ( int ) ( revision_number / 100 ) , fpart )"		1332997	0					
ANR	1333032	Callee	epf		1332997	0					
ANR	1333033	Identifier	epf		1332997	0					
ANR	1333034	ArgumentList	"""%d.%02d"""		1332997	1					
ANR	1333035	Argument	"""%d.%02d"""		1332997	0					
ANR	1333036	PrimaryExpression	"""%d.%02d"""		1332997	0					
ANR	1333037	Argument	( int ) ( revision_number / 100 )		1332997	1					
ANR	1333038	CastExpression	( int ) ( revision_number / 100 )		1332997	0					
ANR	1333039	CastTarget	int		1332997	0					
ANR	1333040	MultiplicativeExpression	revision_number / 100		1332997	1		/			
ANR	1333041	Identifier	revision_number		1332997	0					
ANR	1333042	PrimaryExpression	100		1332997	1					
ANR	1333043	Argument	fpart		1332997	2					
ANR	1333044	Identifier	fpart		1332997	0					
ANR	1333045	ExpressionStatement	"epf ( "": "" )"	232:8:7227:7236	1332997	2	True				
ANR	1333046	CallExpression	"epf ( "": "" )"		1332997	0					
ANR	1333047	Callee	epf		1332997	0					
ANR	1333048	Identifier	epf		1332997	0					
ANR	1333049	ArgumentList	""": """		1332997	1					
ANR	1333050	Argument	""": """		1332997	0					
ANR	1333051	PrimaryExpression	""": """		1332997	0					
ANR	1333052	ReturnType	void		1332997	1					
ANR	1333053	Identifier	eprintf_program_ident		1332997	2					
ANR	1333054	ParameterList	"const char * program_name , long revision_number"		1332997	3					
ANR	1333055	Parameter	const char * program_name	222:22:6908:6931	1332997	0	True				
ANR	1333056	ParameterType	const char *		1332997	0					
ANR	1333057	Identifier	program_name		1332997	1					
ANR	1333058	Parameter	long revision_number	223:22:6956:6975	1332997	1	True				
ANR	1333059	ParameterType	long		1332997	0					
ANR	1333060	Identifier	revision_number		1332997	1					
ANR	1333061	CFGEntryNode	ENTRY		1332997		True				
ANR	1333062	CFGExitNode	EXIT		1332997		True				
ANR	1333063	Symbol	revision_number		1332997						
ANR	1333064	Symbol	program_name		1332997						
ANR	1333065	Symbol	fpart		1332997						
ANR	1333066	Function	emprintf_program_ident	237:0:7254:7684							
ANR	1333067	FunctionDef	"emprintf_program_ident (const gs_memory_t * mem , const char * program_name , long revision_number)"		1333066	0					
ANR	1333068	CompoundStatement		241:0:7400:7684	1333066	0					
ANR	1333069	IfStatement	if ( program_name )		1333066	0					
ANR	1333070	Condition	program_name	242:8:7410:7421	1333066	0	True				
ANR	1333071	Identifier	program_name		1333066	0					
ANR	1333072	CompoundStatement		2:22:23:23	1333066	1					
ANR	1333073	ExpressionStatement	"epfm ( mem , ( revision_number ? ""%s "" : ""%s"" ) , program_name )"	243:8:7434:7491	1333066	0	True				
ANR	1333074	CallExpression	"epfm ( mem , ( revision_number ? ""%s "" : ""%s"" ) , program_name )"		1333066	0					
ANR	1333075	Callee	epfm		1333066	0					
ANR	1333076	Identifier	epfm		1333066	0					
ANR	1333077	ArgumentList	mem		1333066	1					
ANR	1333078	Argument	mem		1333066	0					
ANR	1333079	Identifier	mem		1333066	0					
ANR	1333080	Argument	"revision_number ? ""%s "" : ""%s"""		1333066	1					
ANR	1333081	ConditionalExpression	"revision_number ? ""%s "" : ""%s"""		1333066	0					
ANR	1333082	Condition	revision_number		1333066	0					
ANR	1333083	Identifier	revision_number		1333066	0					
ANR	1333084	PrimaryExpression	"""%s """		1333066	1					
ANR	1333085	PrimaryExpression	"""%s"""		1333066	2					
ANR	1333086	Argument	program_name		1333066	2					
ANR	1333087	Identifier	program_name		1333066	0					
ANR	1333088	IfStatement	if ( revision_number )		1333066	1					
ANR	1333089	Condition	revision_number	244:12:7505:7519	1333066	0	True				
ANR	1333090	Identifier	revision_number		1333066	0					
ANR	1333091	CompoundStatement		5:12:135:168	1333066	1					
ANR	1333092	IdentifierDeclStatement	int fpart = revision_number % 100 ;	245:12:7536:7569	1333066	0	True				
ANR	1333093	IdentifierDecl	fpart = revision_number % 100		1333066	0					
ANR	1333094	IdentifierDeclType	int		1333066	0					
ANR	1333095	Identifier	fpart		1333066	1					
ANR	1333096	AssignmentExpression	fpart = revision_number % 100		1333066	2		=			
ANR	1333097	Identifier	fpart		1333066	0					
ANR	1333098	MultiplicativeExpression	revision_number % 100		1333066	1		%			
ANR	1333099	Identifier	revision_number		1333066	0					
ANR	1333100	PrimaryExpression	100		1333066	1					
ANR	1333101	ExpressionStatement	"epfm ( mem , ""%d.%02d"" , ( int ) ( revision_number / 100 ) , fpart )"	247:12:7584:7641	1333066	1	True				
ANR	1333102	CallExpression	"epfm ( mem , ""%d.%02d"" , ( int ) ( revision_number / 100 ) , fpart )"		1333066	0					
ANR	1333103	Callee	epfm		1333066	0					
ANR	1333104	Identifier	epfm		1333066	0					
ANR	1333105	ArgumentList	mem		1333066	1					
ANR	1333106	Argument	mem		1333066	0					
ANR	1333107	Identifier	mem		1333066	0					
ANR	1333108	Argument	"""%d.%02d"""		1333066	1					
ANR	1333109	PrimaryExpression	"""%d.%02d"""		1333066	0					
ANR	1333110	Argument	( int ) ( revision_number / 100 )		1333066	2					
ANR	1333111	CastExpression	( int ) ( revision_number / 100 )		1333066	0					
ANR	1333112	CastTarget	int		1333066	0					
ANR	1333113	MultiplicativeExpression	revision_number / 100		1333066	1		/			
ANR	1333114	Identifier	revision_number		1333066	0					
ANR	1333115	PrimaryExpression	100		1333066	1					
ANR	1333116	Argument	fpart		1333066	3					
ANR	1333117	Identifier	fpart		1333066	0					
ANR	1333118	ExpressionStatement	"epfm ( mem , "": "" )"	249:8:7661:7676	1333066	2	True				
ANR	1333119	CallExpression	"epfm ( mem , "": "" )"		1333066	0					
ANR	1333120	Callee	epfm		1333066	0					
ANR	1333121	Identifier	epfm		1333066	0					
ANR	1333122	ArgumentList	mem		1333066	1					
ANR	1333123	Argument	mem		1333066	0					
ANR	1333124	Identifier	mem		1333066	0					
ANR	1333125	Argument	""": """		1333066	1					
ANR	1333126	PrimaryExpression	""": """		1333066	0					
ANR	1333127	ReturnType	void		1333066	1					
ANR	1333128	Identifier	emprintf_program_ident		1333066	2					
ANR	1333129	ParameterList	"const gs_memory_t * mem , const char * program_name , long revision_number"		1333066	3					
ANR	1333130	Parameter	const gs_memory_t * mem	238:23:7282:7303	1333066	0	True				
ANR	1333131	ParameterType	const gs_memory_t *		1333066	0					
ANR	1333132	Identifier	mem		1333066	1					
ANR	1333133	Parameter	const char * program_name	239:23:7329:7352	1333066	1	True				
ANR	1333134	ParameterType	const char *		1333066	0					
ANR	1333135	Identifier	program_name		1333066	1					
ANR	1333136	Parameter	long revision_number	240:23:7378:7397	1333066	2	True				
ANR	1333137	ParameterType	long		1333066	0					
ANR	1333138	Identifier	revision_number		1333066	1					
ANR	1333139	CFGEntryNode	ENTRY		1333066		True				
ANR	1333140	CFGExitNode	EXIT		1333066		True				
ANR	1333141	Symbol	mem		1333066						
ANR	1333142	Symbol	revision_number		1333066						
ANR	1333143	Symbol	program_name		1333066						
ANR	1333144	Symbol	fpart		1333066						
ANR	1333145	DeclStmt									
ANR	1333146	Decl							byte	"byte * ( gs_memory_t * mem , uint size , client_name_t cname )"	minimal_alloc_bytes
ANR	1333147	DeclStmt									
ANR	1333148	Decl							byte	"byte * ( gs_memory_t * mem , uint num_elements , uint elt_size , client_name_t cname )"	minimal_alloc_byte_array
ANR	1333149	DeclStmt									
ANR	1333150	Decl							void	"void * ( gs_memory_t * mem , gs_memory_type_ptr_t pstype , client_name_t cname )"	minimal_alloc_struct
ANR	1333151	DeclStmt									
ANR	1333152	Decl							void	"void ( gs_memory_t * mem , void * data , client_name_t cname )"	minimal_free_object
ANR	1333153	DeclStmt									
ANR	1333154	Decl							void	"void ( gs_memory_t * mem , byte * data , uint nbytes , client_name_t cname )"	minimal_free_string
ANR	1333155	Function	minimal_alloc_bytes	265:0:8426:8531							
ANR	1333156	FunctionDef	"minimal_alloc_bytes (gs_memory_t * mem , uint size , client_name_t cname)"		1333155	0					
ANR	1333157	CompoundStatement		267:0:8504:8531	1333155	0					
ANR	1333158	ReturnStatement	return malloc ( size ) ;	268:4:8510:8529	1333155	0	True				
ANR	1333159	CallExpression	malloc ( size )		1333155	0					
ANR	1333160	Callee	malloc		1333155	0					
ANR	1333161	Identifier	malloc		1333155	0					
ANR	1333162	ArgumentList	size		1333155	1					
ANR	1333163	Argument	size		1333155	0					
ANR	1333164	Identifier	size		1333155	0					
ANR	1333165	ReturnType	byte *		1333155	1					
ANR	1333166	Identifier	minimal_alloc_bytes		1333155	2					
ANR	1333167	ParameterList	"gs_memory_t * mem , uint size , client_name_t cname"		1333155	3					
ANR	1333168	Parameter	gs_memory_t * mem	266:20:8453:8469	1333155	0	True				
ANR	1333169	ParameterType	gs_memory_t *		1333155	0					
ANR	1333170	Identifier	mem		1333155	1					
ANR	1333171	Parameter	uint size	266:39:8472:8480	1333155	1	True				
ANR	1333172	ParameterType	uint		1333155	0					
ANR	1333173	Identifier	size		1333155	1					
ANR	1333174	Parameter	client_name_t cname	266:50:8483:8501	1333155	2	True				
ANR	1333175	ParameterType	client_name_t		1333155	0					
ANR	1333176	Identifier	cname		1333155	1					
ANR	1333177	CFGEntryNode	ENTRY		1333155		True				
ANR	1333178	CFGExitNode	EXIT		1333155		True				
ANR	1333179	Symbol	malloc		1333155						
ANR	1333180	Symbol	mem		1333155						
ANR	1333181	Symbol	size		1333155						
ANR	1333182	Symbol	cname		1333155						
ANR	1333183	Function	minimal_alloc_byte_array	271:0:8534:8715							
ANR	1333184	FunctionDef	"minimal_alloc_byte_array (gs_memory_t * mem , uint num_elements , uint elt_size , client_name_t cname)"		1333183	0					
ANR	1333185	CompoundStatement		274:0:8669:8715	1333183	0					
ANR	1333186	ReturnStatement	return malloc ( num_elements * elt_size ) ;	275:4:8675:8713	1333183	0	True				
ANR	1333187	CallExpression	malloc ( num_elements * elt_size )		1333183	0					
ANR	1333188	Callee	malloc		1333183	0					
ANR	1333189	Identifier	malloc		1333183	0					
ANR	1333190	ArgumentList	num_elements * elt_size		1333183	1					
ANR	1333191	Argument	num_elements * elt_size		1333183	0					
ANR	1333192	MultiplicativeExpression	num_elements * elt_size		1333183	0		*			
ANR	1333193	Identifier	num_elements		1333183	0					
ANR	1333194	Identifier	elt_size		1333183	1					
ANR	1333195	ReturnType	byte *		1333183	1					
ANR	1333196	Identifier	minimal_alloc_byte_array		1333183	2					
ANR	1333197	ParameterList	"gs_memory_t * mem , uint num_elements , uint elt_size , client_name_t cname"		1333183	3					
ANR	1333198	Parameter	gs_memory_t * mem	272:25:8566:8582	1333183	0	True				
ANR	1333199	ParameterType	gs_memory_t *		1333183	0					
ANR	1333200	Identifier	mem		1333183	1					
ANR	1333201	Parameter	uint num_elements	272:44:8585:8601	1333183	1	True				
ANR	1333202	ParameterType	uint		1333183	0					
ANR	1333203	Identifier	num_elements		1333183	1					
ANR	1333204	Parameter	uint elt_size	273:29:8633:8645	1333183	2	True				
ANR	1333205	ParameterType	uint		1333183	0					
ANR	1333206	Identifier	elt_size		1333183	1					
ANR	1333207	Parameter	client_name_t cname	273:44:8648:8666	1333183	3	True				
ANR	1333208	ParameterType	client_name_t		1333183	0					
ANR	1333209	Identifier	cname		1333183	1					
ANR	1333210	CFGEntryNode	ENTRY		1333183		True				
ANR	1333211	CFGExitNode	EXIT		1333183		True				
ANR	1333212	Symbol	malloc		1333183						
ANR	1333213	Symbol	mem		1333183						
ANR	1333214	Symbol	num_elements		1333183						
ANR	1333215	Symbol	cname		1333183						
ANR	1333216	Symbol	elt_size		1333183						
ANR	1333217	Function	minimal_alloc_struct	278:0:8718:8866							
ANR	1333218	FunctionDef	"minimal_alloc_struct (gs_memory_t * mem , gs_memory_type_ptr_t pstype , client_name_t cname)"		1333217	0					
ANR	1333219	CompoundStatement		281:0:8830:8866	1333217	0					
ANR	1333220	ReturnStatement	return malloc ( pstype -> ssize ) ;	282:4:8836:8864	1333217	0	True				
ANR	1333221	CallExpression	malloc ( pstype -> ssize )		1333217	0					
ANR	1333222	Callee	malloc		1333217	0					
ANR	1333223	Identifier	malloc		1333217	0					
ANR	1333224	ArgumentList	pstype -> ssize		1333217	1					
ANR	1333225	Argument	pstype -> ssize		1333217	0					
ANR	1333226	PtrMemberAccess	pstype -> ssize		1333217	0					
ANR	1333227	Identifier	pstype		1333217	0					
ANR	1333228	Identifier	ssize		1333217	1					
ANR	1333229	ReturnType	void *		1333217	1					
ANR	1333230	Identifier	minimal_alloc_struct		1333217	2					
ANR	1333231	ParameterList	"gs_memory_t * mem , gs_memory_type_ptr_t pstype , client_name_t cname"		1333217	3					
ANR	1333232	Parameter	gs_memory_t * mem	279:21:8746:8762	1333217	0	True				
ANR	1333233	ParameterType	gs_memory_t *		1333217	0					
ANR	1333234	Identifier	mem		1333217	1					
ANR	1333235	Parameter	gs_memory_type_ptr_t pstype	279:40:8765:8791	1333217	1	True				
ANR	1333236	ParameterType	gs_memory_type_ptr_t		1333217	0					
ANR	1333237	Identifier	pstype		1333217	1					
ANR	1333238	Parameter	client_name_t cname	280:15:8809:8827	1333217	2	True				
ANR	1333239	ParameterType	client_name_t		1333217	0					
ANR	1333240	Identifier	cname		1333217	1					
ANR	1333241	CFGEntryNode	ENTRY		1333217		True				
ANR	1333242	CFGExitNode	EXIT		1333217		True				
ANR	1333243	Symbol	pstype -> ssize		1333217						
ANR	1333244	Symbol	* pstype		1333217						
ANR	1333245	Symbol	malloc		1333217						
ANR	1333246	Symbol	mem		1333217						
ANR	1333247	Symbol	pstype		1333217						
ANR	1333248	Symbol	cname		1333217						
ANR	1333249	Function	minimal_free_object	285:0:8869:8977							
ANR	1333250	FunctionDef	"minimal_free_object (gs_memory_t * mem , void * data , client_name_t cname)"		1333249	0					
ANR	1333251	CompoundStatement		287:0:8947:8977	1333249	0					
ANR	1333252	ExpressionStatement	free ( data )	288:4:8953:8963	1333249	0	True				
ANR	1333253	CallExpression	free ( data )		1333249	0					
ANR	1333254	Callee	free		1333249	0					
ANR	1333255	Identifier	free		1333249	0					
ANR	1333256	ArgumentList	data		1333249	1					
ANR	1333257	Argument	data		1333249	0					
ANR	1333258	Identifier	data		1333249	0					
ANR	1333259	ReturnStatement	return ;	289:4:8969:8975	1333249	1	True				
ANR	1333260	ReturnType	void		1333249	1					
ANR	1333261	Identifier	minimal_free_object		1333249	2					
ANR	1333262	ParameterList	"gs_memory_t * mem , void * data , client_name_t cname"		1333249	3					
ANR	1333263	Parameter	gs_memory_t * mem	286:20:8894:8910	1333249	0	True				
ANR	1333264	ParameterType	gs_memory_t *		1333249	0					
ANR	1333265	Identifier	mem		1333249	1					
ANR	1333266	Parameter	void * data	286:39:8913:8923	1333249	1	True				
ANR	1333267	ParameterType	void *		1333249	0					
ANR	1333268	Identifier	data		1333249	1					
ANR	1333269	Parameter	client_name_t cname	286:52:8926:8944	1333249	2	True				
ANR	1333270	ParameterType	client_name_t		1333249	0					
ANR	1333271	Identifier	cname		1333249	1					
ANR	1333272	CFGEntryNode	ENTRY		1333249		True				
ANR	1333273	CFGExitNode	EXIT		1333249		True				
ANR	1333274	Symbol	mem		1333249						
ANR	1333275	Symbol	data		1333249						
ANR	1333276	Symbol	cname		1333249						
ANR	1333277	Function	minimal_free_string	292:0:8980:9101							
ANR	1333278	FunctionDef	"minimal_free_string (gs_memory_t * mem , byte * data , uint nbytes , client_name_t cname)"		1333277	0					
ANR	1333279	CompoundStatement		294:0:9071:9101	1333277	0					
ANR	1333280	ExpressionStatement	free ( data )	295:4:9077:9087	1333277	0	True				
ANR	1333281	CallExpression	free ( data )		1333277	0					
ANR	1333282	Callee	free		1333277	0					
ANR	1333283	Identifier	free		1333277	0					
ANR	1333284	ArgumentList	data		1333277	1					
ANR	1333285	Argument	data		1333277	0					
ANR	1333286	Identifier	data		1333277	0					
ANR	1333287	ReturnStatement	return ;	296:4:9093:9099	1333277	1	True				
ANR	1333288	ReturnType	void		1333277	1					
ANR	1333289	Identifier	minimal_free_string		1333277	2					
ANR	1333290	ParameterList	"gs_memory_t * mem , byte * data , uint nbytes , client_name_t cname"		1333277	3					
ANR	1333291	Parameter	gs_memory_t * mem	293:20:9005:9021	1333277	0	True				
ANR	1333292	ParameterType	gs_memory_t *		1333277	0					
ANR	1333293	Identifier	mem		1333277	1					
ANR	1333294	Parameter	byte * data	293:39:9024:9034	1333277	1	True				
ANR	1333295	ParameterType	byte *		1333277	0					
ANR	1333296	Identifier	data		1333277	1					
ANR	1333297	Parameter	uint nbytes	293:52:9037:9047	1333277	2	True				
ANR	1333298	ParameterType	uint		1333277	0					
ANR	1333299	Identifier	nbytes		1333277	1					
ANR	1333300	Parameter	client_name_t cname	293:65:9050:9068	1333277	3	True				
ANR	1333301	ParameterType	client_name_t		1333277	0					
ANR	1333302	Identifier	cname		1333277	1					
ANR	1333303	CFGEntryNode	ENTRY		1333277		True				
ANR	1333304	CFGExitNode	EXIT		1333277		True				
ANR	1333305	Symbol	mem		1333277						
ANR	1333306	Symbol	data		1333277						
ANR	1333307	Symbol	cname		1333277						
ANR	1333308	Symbol	nbytes		1333277						
ANR	1333309	DeclStmt									
ANR	1333310	Decl							void	void ( void )	basic_enum_ptrs
ANR	1333311	DeclStmt									
ANR	1333312	Decl							void	void ( void )	basic_reloc_ptrs
ANR	1333313	Function	basic_enum_ptrs	302:0:9162:9264							
ANR	1333314	FunctionDef	basic_enum_ptrs ()		1333313	0					
ANR	1333315	CompoundStatement		302:23:9185:9264	1333313	0					
ANR	1333316	ExpressionStatement	"printf ( ""basic_enum_ptrs is only called by a GC. Abort.\\n"" )"	303:4:9191:9249	1333313	0	True				
ANR	1333317	CallExpression	"printf ( ""basic_enum_ptrs is only called by a GC. Abort.\\n"" )"		1333313	0					
ANR	1333318	Callee	printf		1333313	0					
ANR	1333319	Identifier	printf		1333313	0					
ANR	1333320	ArgumentList	"""basic_enum_ptrs is only called by a GC. Abort.\\n"""		1333313	1					
ANR	1333321	Argument	"""basic_enum_ptrs is only called by a GC. Abort.\\n"""		1333313	0					
ANR	1333322	PrimaryExpression	"""basic_enum_ptrs is only called by a GC. Abort.\\n"""		1333313	0					
ANR	1333323	ExpressionStatement	exit ( 1 )	304:4:9255:9262	1333313	1	True				
ANR	1333324	CallExpression	exit ( 1 )		1333313	0					
ANR	1333325	Callee	exit		1333313	0					
ANR	1333326	Identifier	exit		1333313	0					
ANR	1333327	ArgumentList	1		1333313	1					
ANR	1333328	Argument	1		1333313	0					
ANR	1333329	PrimaryExpression	1		1333313	0					
ANR	1333330	ReturnType	void		1333313	1					
ANR	1333331	Identifier	basic_enum_ptrs		1333313	2					
ANR	1333332	ParameterList			1333313	3					
ANR	1333333	CFGEntryNode	ENTRY		1333313		True				
ANR	1333334	CFGExitNode	EXIT		1333313		True				
ANR	1333335	Function	basic_reloc_ptrs	307:0:9267:9371							
ANR	1333336	FunctionDef	basic_reloc_ptrs ()		1333335	0					
ANR	1333337	CompoundStatement		307:24:9291:9371	1333335	0					
ANR	1333338	ExpressionStatement	"printf ( ""basic_reloc_ptrs is only called by a GC. Abort.\\n"" )"	308:4:9297:9356	1333335	0	True				
ANR	1333339	CallExpression	"printf ( ""basic_reloc_ptrs is only called by a GC. Abort.\\n"" )"		1333335	0					
ANR	1333340	Callee	printf		1333335	0					
ANR	1333341	Identifier	printf		1333335	0					
ANR	1333342	ArgumentList	"""basic_reloc_ptrs is only called by a GC. Abort.\\n"""		1333335	1					
ANR	1333343	Argument	"""basic_reloc_ptrs is only called by a GC. Abort.\\n"""		1333335	0					
ANR	1333344	PrimaryExpression	"""basic_reloc_ptrs is only called by a GC. Abort.\\n"""		1333335	0					
ANR	1333345	ExpressionStatement	exit ( 1 )	309:4:9362:9369	1333335	1	True				
ANR	1333346	CallExpression	exit ( 1 )		1333335	0					
ANR	1333347	Callee	exit		1333335	0					
ANR	1333348	Identifier	exit		1333335	0					
ANR	1333349	ArgumentList	1		1333335	1					
ANR	1333350	Argument	1		1333335	0					
ANR	1333351	PrimaryExpression	1		1333335	0					
ANR	1333352	ReturnType	void		1333335	1					
ANR	1333353	Identifier	basic_reloc_ptrs		1333335	2					
ANR	1333354	ParameterList			1333335	3					
ANR	1333355	CFGEntryNode	ENTRY		1333335		True				
ANR	1333356	CFGExitNode	EXIT		1333335		True				
ANR	1333357	DeclStmt									
ANR	1333358	Decl							const gs_malloc_memory_t	const gs_malloc_memory_t	minimal_memory
ANR	1333359	DeclStmt									
ANR	1333360	Decl							int	"int ( const void * p1 , const void * p2 )"	cmpstringp
ANR	1333361	DeclStmt									
ANR	1333362	Decl							void	"void ( FILE * out , const unsigned int q )"	put_uint32
ANR	1333363	DeclStmt									
ANR	1333364	Decl							void	"void ( FILE * out , unsigned char * p , unsigned int len )"	put_bytes_padded
ANR	1333365	DeclStmt									
ANR	1333366	Decl							void	void ( romfs_inode * node )	inode_clear
ANR	1333367	DeclStmt									
ANR	1333368	Decl							void	"void ( FILE * out , romfs_inode * node , int compression , int inode_count , int * totlen )"	inode_write
ANR	1333369	DeclStmt									
ANR	1333370	Decl							void	"void ( char * path , const char * os_prefix , const char * rom_prefix , Xlist_element * Xlist_head , int compression , int compaction , int * inode_count , int * totlen , FILE * out )"	process_path
ANR	1333371	DeclStmt									
ANR	1333372	Decl							int	"int ( char * initfile , char * gconfig_h , const char * os_prefix , const char * rom_prefix , int compression , int * inode_count , int * totlen , FILE * out )"	process_initfile
ANR	1333373	DeclStmt									
ANR	1333374	Decl							FILE	"FILE * ( const char * os_prefix , const char * inname )"	prefix_open
ANR	1333375	DeclStmt									
ANR	1333376	Decl							void	"void ( const char * prefix , const char * filename , char * prefixed_path )"	prefix_add
ANR	1333377	Function	put_uint32	362:0:11467:11686							
ANR	1333378	FunctionDef	"put_uint32 (FILE * out , const unsigned int q)"		1333377	0					
ANR	1333379	CompoundStatement		363:0:11516:11686	1333377	0					
ANR	1333380	ExpressionStatement	"fprintf ( out , ""0x%08x,"" , q )"	365:4:11545:11572	1333377	0	True				
ANR	1333381	CallExpression	"fprintf ( out , ""0x%08x,"" , q )"		1333377	0					
ANR	1333382	Callee	fprintf		1333377	0					
ANR	1333383	Identifier	fprintf		1333377	0					
ANR	1333384	ArgumentList	out		1333377	1					
ANR	1333385	Argument	out		1333377	0					
ANR	1333386	Identifier	out		1333377	0					
ANR	1333387	Argument	"""0x%08x,"""		1333377	1					
ANR	1333388	PrimaryExpression	"""0x%08x,"""		1333377	0					
ANR	1333389	Argument	q		1333377	2					
ANR	1333390	Identifier	q		1333377	0					
ANR	1333391	ReturnType	void		1333377	1					
ANR	1333392	Identifier	put_uint32		1333377	2					
ANR	1333393	ParameterList	"FILE * out , const unsigned int q"		1333377	3					
ANR	1333394	Parameter	FILE * out	362:16:11483:11491	1333377	0	True				
ANR	1333395	ParameterType	FILE *		1333377	0					
ANR	1333396	Identifier	out		1333377	1					
ANR	1333397	Parameter	const unsigned int q	362:27:11494:11513	1333377	1	True				
ANR	1333398	ParameterType	const unsigned int		1333377	0					
ANR	1333399	Identifier	q		1333377	1					
ANR	1333400	CFGEntryNode	ENTRY		1333377		True				
ANR	1333401	CFGExitNode	EXIT		1333377		True				
ANR	1333402	Symbol	q		1333377						
ANR	1333403	Symbol	out		1333377						
ANR	1333404	Function	put_bytes_padded	372:0:11755:12979							
ANR	1333405	FunctionDef	"put_bytes_padded (FILE * out , unsigned char * p , unsigned int len)"		1333404	0					
ANR	1333406	CompoundStatement		373:0:11824:12979	1333404	0					
ANR	1333407	IdentifierDeclStatement	"int i , j = 0 ;"	374:4:11830:11840	1333404	0	True				
ANR	1333408	IdentifierDecl	i		1333404	0					
ANR	1333409	IdentifierDeclType	int		1333404	0					
ANR	1333410	Identifier	i		1333404	1					
ANR	1333411	IdentifierDecl	j = 0		1333404	1					
ANR	1333412	IdentifierDeclType	int		1333404	0					
ANR	1333413	Identifier	j		1333404	1					
ANR	1333414	AssignmentExpression	j = 0		1333404	2		=			
ANR	1333415	Identifier	j		1333404	0					
ANR	1333416	PrimaryExpression	0		1333404	1					
ANR	1333417	ClassDefStatement	union { uint32_t w ; struct { unsigned char c1 ; unsigned char c2 ; unsigned char c3 ; unsigned char c4 ; } c ; } w2c ;	375:4:11846:12033	1333404	1	True				
ANR	1333418	IdentifierDecl	w2c		1333404	0					
ANR	1333419	IdentifierDeclType			1333404	0					
ANR	1333420	Identifier	w2c		1333404	1					
ANR	1333421	ForStatement	for ( i = 0 ; i < ( len / 4 ) ; i ++ )		1333404	2					
ANR	1333422	ForInit	i = 0 ;	385:9:12045:12048	1333404	0	True				
ANR	1333423	AssignmentExpression	i = 0		1333404	0		=			
ANR	1333424	Identifier	i		1333404	0					
ANR	1333425	PrimaryExpression	0		1333404	1					
ANR	1333426	Condition	i < ( len / 4 )	385:14:12050:12058	1333404	1	True				
ANR	1333427	RelationalExpression	i < ( len / 4 )		1333404	0		<			
ANR	1333428	Identifier	i		1333404	0					
ANR	1333429	MultiplicativeExpression	len / 4		1333404	1		/			
ANR	1333430	Identifier	len		1333404	0					
ANR	1333431	PrimaryExpression	4		1333404	1					
ANR	1333432	PostIncDecOperationExpression	i ++	385:25:12061:12063	1333404	2	True				
ANR	1333433	Identifier	i		1333404	0					
ANR	1333434	IncDec	++		1333404	1					
ANR	1333435	CompoundStatement		13:30:241:241	1333404	3					
ANR	1333436	ExpressionStatement	j = i * 4	386:8:12076:12083	1333404	0	True				
ANR	1333437	AssignmentExpression	j = i * 4		1333404	0		=			
ANR	1333438	Identifier	j		1333404	0					
ANR	1333439	MultiplicativeExpression	i * 4		1333404	1		*			
ANR	1333440	Identifier	i		1333404	0					
ANR	1333441	PrimaryExpression	4		1333404	1					
ANR	1333442	ExpressionStatement	w2c . c . c1 = p [ j ++ ]	387:8:12093:12110	1333404	1	True				
ANR	1333443	AssignmentExpression	w2c . c . c1 = p [ j ++ ]		1333404	0		=			
ANR	1333444	MemberAccess	w2c . c . c1		1333404	0					
ANR	1333445	MemberAccess	w2c . c		1333404	0					
ANR	1333446	Identifier	w2c		1333404	0					
ANR	1333447	Identifier	c		1333404	1					
ANR	1333448	Identifier	c1		1333404	1					
ANR	1333449	ArrayIndexing	p [ j ++ ]		1333404	1					
ANR	1333450	Identifier	p		1333404	0					
ANR	1333451	PostIncDecOperationExpression	j ++		1333404	1					
ANR	1333452	Identifier	j		1333404	0					
ANR	1333453	IncDec	++		1333404	1					
ANR	1333454	ExpressionStatement	w2c . c . c2 = p [ j ++ ]	388:8:12120:12137	1333404	2	True				
ANR	1333455	AssignmentExpression	w2c . c . c2 = p [ j ++ ]		1333404	0		=			
ANR	1333456	MemberAccess	w2c . c . c2		1333404	0					
ANR	1333457	MemberAccess	w2c . c		1333404	0					
ANR	1333458	Identifier	w2c		1333404	0					
ANR	1333459	Identifier	c		1333404	1					
ANR	1333460	Identifier	c2		1333404	1					
ANR	1333461	ArrayIndexing	p [ j ++ ]		1333404	1					
ANR	1333462	Identifier	p		1333404	0					
ANR	1333463	PostIncDecOperationExpression	j ++		1333404	1					
ANR	1333464	Identifier	j		1333404	0					
ANR	1333465	IncDec	++		1333404	1					
ANR	1333466	ExpressionStatement	w2c . c . c3 = p [ j ++ ]	389:8:12147:12164	1333404	3	True				
ANR	1333467	AssignmentExpression	w2c . c . c3 = p [ j ++ ]		1333404	0		=			
ANR	1333468	MemberAccess	w2c . c . c3		1333404	0					
ANR	1333469	MemberAccess	w2c . c		1333404	0					
ANR	1333470	Identifier	w2c		1333404	0					
ANR	1333471	Identifier	c		1333404	1					
ANR	1333472	Identifier	c3		1333404	1					
ANR	1333473	ArrayIndexing	p [ j ++ ]		1333404	1					
ANR	1333474	Identifier	p		1333404	0					
ANR	1333475	PostIncDecOperationExpression	j ++		1333404	1					
ANR	1333476	Identifier	j		1333404	0					
ANR	1333477	IncDec	++		1333404	1					
ANR	1333478	ExpressionStatement	w2c . c . c4 = p [ j ++ ]	390:8:12174:12191	1333404	4	True				
ANR	1333479	AssignmentExpression	w2c . c . c4 = p [ j ++ ]		1333404	0		=			
ANR	1333480	MemberAccess	w2c . c . c4		1333404	0					
ANR	1333481	MemberAccess	w2c . c		1333404	0					
ANR	1333482	Identifier	w2c		1333404	0					
ANR	1333483	Identifier	c		1333404	1					
ANR	1333484	Identifier	c4		1333404	1					
ANR	1333485	ArrayIndexing	p [ j ++ ]		1333404	1					
ANR	1333486	Identifier	p		1333404	0					
ANR	1333487	PostIncDecOperationExpression	j ++		1333404	1					
ANR	1333488	Identifier	j		1333404	0					
ANR	1333489	IncDec	++		1333404	1					
ANR	1333490	IfStatement	if ( isbigendian ( ) != ARCH_IS_BIG_ENDIAN )		1333404	5					
ANR	1333491	Condition	isbigendian ( ) != ARCH_IS_BIG_ENDIAN	391:12:12205:12239	1333404	0	True				
ANR	1333492	EqualityExpression	isbigendian ( ) != ARCH_IS_BIG_ENDIAN		1333404	0		!=			
ANR	1333493	CallExpression	isbigendian ( )		1333404	0					
ANR	1333494	Callee	isbigendian		1333404	0					
ANR	1333495	Identifier	isbigendian		1333404	0					
ANR	1333496	ArgumentList			1333404	1					
ANR	1333497	Identifier	ARCH_IS_BIG_ENDIAN		1333404	1					
ANR	1333498	CompoundStatement		19:49:417:417	1333404	1					
ANR	1333499	ExpressionStatement	"fprintf ( out , ""0x%02x%02x%02x%02x,"" , ( w2c . w ) & 0xff , ( w2c . w >> 8 ) & 0xff , ( w2c . w >> 16 ) & 0xff , ( w2c . w >> 24 ) & 0xff )"	392:12:12256:12368	1333404	0	True				
ANR	1333500	CallExpression	"fprintf ( out , ""0x%02x%02x%02x%02x,"" , ( w2c . w ) & 0xff , ( w2c . w >> 8 ) & 0xff , ( w2c . w >> 16 ) & 0xff , ( w2c . w >> 24 ) & 0xff )"		1333404	0					
ANR	1333501	Callee	fprintf		1333404	0					
ANR	1333502	Identifier	fprintf		1333404	0					
ANR	1333503	ArgumentList	out		1333404	1					
ANR	1333504	Argument	out		1333404	0					
ANR	1333505	Identifier	out		1333404	0					
ANR	1333506	Argument	"""0x%02x%02x%02x%02x,"""		1333404	1					
ANR	1333507	PrimaryExpression	"""0x%02x%02x%02x%02x,"""		1333404	0					
ANR	1333508	Argument	( w2c . w ) & 0xff		1333404	2					
ANR	1333509	BitAndExpression	( w2c . w ) & 0xff		1333404	0		&			
ANR	1333510	MemberAccess	w2c . w		1333404	0					
ANR	1333511	Identifier	w2c		1333404	0					
ANR	1333512	Identifier	w		1333404	1					
ANR	1333513	PrimaryExpression	0xff		1333404	1					
ANR	1333514	Argument	( w2c . w >> 8 ) & 0xff		1333404	3					
ANR	1333515	BitAndExpression	( w2c . w >> 8 ) & 0xff		1333404	0		&			
ANR	1333516	ShiftExpression	w2c . w >> 8		1333404	0		>>			
ANR	1333517	MemberAccess	w2c . w		1333404	0					
ANR	1333518	Identifier	w2c		1333404	0					
ANR	1333519	Identifier	w		1333404	1					
ANR	1333520	PrimaryExpression	8		1333404	1					
ANR	1333521	PrimaryExpression	0xff		1333404	1					
ANR	1333522	Argument	( w2c . w >> 16 ) & 0xff		1333404	4					
ANR	1333523	BitAndExpression	( w2c . w >> 16 ) & 0xff		1333404	0		&			
ANR	1333524	ShiftExpression	w2c . w >> 16		1333404	0		>>			
ANR	1333525	MemberAccess	w2c . w		1333404	0					
ANR	1333526	Identifier	w2c		1333404	0					
ANR	1333527	Identifier	w		1333404	1					
ANR	1333528	PrimaryExpression	16		1333404	1					
ANR	1333529	PrimaryExpression	0xff		1333404	1					
ANR	1333530	Argument	( w2c . w >> 24 ) & 0xff		1333404	5					
ANR	1333531	BitAndExpression	( w2c . w >> 24 ) & 0xff		1333404	0		&			
ANR	1333532	ShiftExpression	w2c . w >> 24		1333404	0		>>			
ANR	1333533	MemberAccess	w2c . w		1333404	0					
ANR	1333534	Identifier	w2c		1333404	0					
ANR	1333535	Identifier	w		1333404	1					
ANR	1333536	PrimaryExpression	24		1333404	1					
ANR	1333537	PrimaryExpression	0xff		1333404	1					
ANR	1333538	ElseStatement	else		1333404	0					
ANR	1333539	CompoundStatement		22:13:568:568	1333404	0					
ANR	1333540	ExpressionStatement	"fprintf ( out , ""0x%08x,"" , w2c . w )"	395:12:12407:12437	1333404	0	True				
ANR	1333541	CallExpression	"fprintf ( out , ""0x%08x,"" , w2c . w )"		1333404	0					
ANR	1333542	Callee	fprintf		1333404	0					
ANR	1333543	Identifier	fprintf		1333404	0					
ANR	1333544	ArgumentList	out		1333404	1					
ANR	1333545	Argument	out		1333404	0					
ANR	1333546	Identifier	out		1333404	0					
ANR	1333547	Argument	"""0x%08x,"""		1333404	1					
ANR	1333548	PrimaryExpression	"""0x%08x,"""		1333404	0					
ANR	1333549	Argument	w2c . w		1333404	2					
ANR	1333550	MemberAccess	w2c . w		1333404	0					
ANR	1333551	Identifier	w2c		1333404	0					
ANR	1333552	Identifier	w		1333404	1					
ANR	1333553	IfStatement	if ( ( i & 7 ) == 7 )		1333404	6					
ANR	1333554	Condition	( i & 7 ) == 7	397:12:12461:12472	1333404	0	True				
ANR	1333555	EqualityExpression	( i & 7 ) == 7		1333404	0		==			
ANR	1333556	BitAndExpression	i & 7		1333404	0		&			
ANR	1333557	Identifier	i		1333404	0					
ANR	1333558	PrimaryExpression	7		1333404	1					
ANR	1333559	PrimaryExpression	7		1333404	1					
ANR	1333560	ExpressionStatement	"fprintf ( out , ""\\n\\t"" )"	398:12:12487:12507	1333404	1	True				
ANR	1333561	CallExpression	"fprintf ( out , ""\\n\\t"" )"		1333404	0					
ANR	1333562	Callee	fprintf		1333404	0					
ANR	1333563	Identifier	fprintf		1333404	0					
ANR	1333564	ArgumentList	out		1333404	1					
ANR	1333565	Argument	out		1333404	0					
ANR	1333566	Identifier	out		1333404	0					
ANR	1333567	Argument	"""\\n\\t"""		1333404	1					
ANR	1333568	PrimaryExpression	"""\\n\\t"""		1333404	0					
ANR	1333569	ExpressionStatement	w2c . w = 0	400:4:12519:12528	1333404	3	True				
ANR	1333570	AssignmentExpression	w2c . w = 0		1333404	0		=			
ANR	1333571	MemberAccess	w2c . w		1333404	0					
ANR	1333572	Identifier	w2c		1333404	0					
ANR	1333573	Identifier	w		1333404	1					
ANR	1333574	PrimaryExpression	0		1333404	1					
ANR	1333575	SwitchStatement	switch ( len - j )		1333404	4					
ANR	1333576	Condition	len - j	401:12:12542:12548	1333404	0	True				
ANR	1333577	AdditiveExpression	len - j		1333404	0		-			
ANR	1333578	Identifier	len		1333404	0					
ANR	1333579	Identifier	j		1333404	1					
ANR	1333580	CompoundStatement		29:21:726:726	1333404	1					
ANR	1333581	Label	case 3 :	402:6:12559:12565	1333404	0	True				
ANR	1333582	ExpressionStatement	w2c . c . c3 = p [ j + 2 ]	403:8:12575:12592	1333404	1	True				
ANR	1333583	AssignmentExpression	w2c . c . c3 = p [ j + 2 ]		1333404	0		=			
ANR	1333584	MemberAccess	w2c . c . c3		1333404	0					
ANR	1333585	MemberAccess	w2c . c		1333404	0					
ANR	1333586	Identifier	w2c		1333404	0					
ANR	1333587	Identifier	c		1333404	1					
ANR	1333588	Identifier	c3		1333404	1					
ANR	1333589	ArrayIndexing	p [ j + 2 ]		1333404	1					
ANR	1333590	Identifier	p		1333404	0					
ANR	1333591	AdditiveExpression	j + 2		1333404	1		+			
ANR	1333592	Identifier	j		1333404	0					
ANR	1333593	PrimaryExpression	2		1333404	1					
ANR	1333594	Label	case 2 :	404:6:12600:12606	1333404	2	True				
ANR	1333595	ExpressionStatement	w2c . c . c2 = p [ j + 1 ]	405:8:12616:12633	1333404	3	True				
ANR	1333596	AssignmentExpression	w2c . c . c2 = p [ j + 1 ]		1333404	0		=			
ANR	1333597	MemberAccess	w2c . c . c2		1333404	0					
ANR	1333598	MemberAccess	w2c . c		1333404	0					
ANR	1333599	Identifier	w2c		1333404	0					
ANR	1333600	Identifier	c		1333404	1					
ANR	1333601	Identifier	c2		1333404	1					
ANR	1333602	ArrayIndexing	p [ j + 1 ]		1333404	1					
ANR	1333603	Identifier	p		1333404	0					
ANR	1333604	AdditiveExpression	j + 1		1333404	1		+			
ANR	1333605	Identifier	j		1333404	0					
ANR	1333606	PrimaryExpression	1		1333404	1					
ANR	1333607	Label	case 1 :	406:6:12641:12647	1333404	4	True				
ANR	1333608	ExpressionStatement	w2c . c . c1 = p [ j ]	407:8:12657:12672	1333404	5	True				
ANR	1333609	AssignmentExpression	w2c . c . c1 = p [ j ]		1333404	0		=			
ANR	1333610	MemberAccess	w2c . c . c1		1333404	0					
ANR	1333611	MemberAccess	w2c . c		1333404	0					
ANR	1333612	Identifier	w2c		1333404	0					
ANR	1333613	Identifier	c		1333404	1					
ANR	1333614	Identifier	c1		1333404	1					
ANR	1333615	ArrayIndexing	p [ j ]		1333404	1					
ANR	1333616	Identifier	p		1333404	0					
ANR	1333617	Identifier	j		1333404	1					
ANR	1333618	IfStatement	if ( isbigendian ( ) != ARCH_IS_BIG_ENDIAN )		1333404	6					
ANR	1333619	Condition	isbigendian ( ) != ARCH_IS_BIG_ENDIAN	408:12:12686:12720	1333404	0	True				
ANR	1333620	EqualityExpression	isbigendian ( ) != ARCH_IS_BIG_ENDIAN		1333404	0		!=			
ANR	1333621	CallExpression	isbigendian ( )		1333404	0					
ANR	1333622	Callee	isbigendian		1333404	0					
ANR	1333623	Identifier	isbigendian		1333404	0					
ANR	1333624	ArgumentList			1333404	1					
ANR	1333625	Identifier	ARCH_IS_BIG_ENDIAN		1333404	1					
ANR	1333626	CompoundStatement		36:49:898:898	1333404	1					
ANR	1333627	ExpressionStatement	"fprintf ( out , ""0x%02x%02x%02x%02x,"" , ( w2c . w ) & 0xff , ( w2c . w >> 8 ) & 0xff , ( w2c . w >> 16 ) & 0xff , ( w2c . w >> 24 ) & 0xff )"	409:12:12737:12849	1333404	0	True				
ANR	1333628	CallExpression	"fprintf ( out , ""0x%02x%02x%02x%02x,"" , ( w2c . w ) & 0xff , ( w2c . w >> 8 ) & 0xff , ( w2c . w >> 16 ) & 0xff , ( w2c . w >> 24 ) & 0xff )"		1333404	0					
ANR	1333629	Callee	fprintf		1333404	0					
ANR	1333630	Identifier	fprintf		1333404	0					
ANR	1333631	ArgumentList	out		1333404	1					
ANR	1333632	Argument	out		1333404	0					
ANR	1333633	Identifier	out		1333404	0					
ANR	1333634	Argument	"""0x%02x%02x%02x%02x,"""		1333404	1					
ANR	1333635	PrimaryExpression	"""0x%02x%02x%02x%02x,"""		1333404	0					
ANR	1333636	Argument	( w2c . w ) & 0xff		1333404	2					
ANR	1333637	BitAndExpression	( w2c . w ) & 0xff		1333404	0		&			
ANR	1333638	MemberAccess	w2c . w		1333404	0					
ANR	1333639	Identifier	w2c		1333404	0					
ANR	1333640	Identifier	w		1333404	1					
ANR	1333641	PrimaryExpression	0xff		1333404	1					
ANR	1333642	Argument	( w2c . w >> 8 ) & 0xff		1333404	3					
ANR	1333643	BitAndExpression	( w2c . w >> 8 ) & 0xff		1333404	0		&			
ANR	1333644	ShiftExpression	w2c . w >> 8		1333404	0		>>			
ANR	1333645	MemberAccess	w2c . w		1333404	0					
ANR	1333646	Identifier	w2c		1333404	0					
ANR	1333647	Identifier	w		1333404	1					
ANR	1333648	PrimaryExpression	8		1333404	1					
ANR	1333649	PrimaryExpression	0xff		1333404	1					
ANR	1333650	Argument	( w2c . w >> 16 ) & 0xff		1333404	4					
ANR	1333651	BitAndExpression	( w2c . w >> 16 ) & 0xff		1333404	0		&			
ANR	1333652	ShiftExpression	w2c . w >> 16		1333404	0		>>			
ANR	1333653	MemberAccess	w2c . w		1333404	0					
ANR	1333654	Identifier	w2c		1333404	0					
ANR	1333655	Identifier	w		1333404	1					
ANR	1333656	PrimaryExpression	16		1333404	1					
ANR	1333657	PrimaryExpression	0xff		1333404	1					
ANR	1333658	Argument	( w2c . w >> 24 ) & 0xff		1333404	5					
ANR	1333659	BitAndExpression	( w2c . w >> 24 ) & 0xff		1333404	0		&			
ANR	1333660	ShiftExpression	w2c . w >> 24		1333404	0		>>			
ANR	1333661	MemberAccess	w2c . w		1333404	0					
ANR	1333662	Identifier	w2c		1333404	0					
ANR	1333663	Identifier	w		1333404	1					
ANR	1333664	PrimaryExpression	24		1333404	1					
ANR	1333665	PrimaryExpression	0xff		1333404	1					
ANR	1333666	ElseStatement	else		1333404	0					
ANR	1333667	CompoundStatement		39:13:1049:1049	1333404	0					
ANR	1333668	ExpressionStatement	"fprintf ( out , ""0x%08x,"" , w2c . w )"	412:12:12888:12918	1333404	0	True				
ANR	1333669	CallExpression	"fprintf ( out , ""0x%08x,"" , w2c . w )"		1333404	0					
ANR	1333670	Callee	fprintf		1333404	0					
ANR	1333671	Identifier	fprintf		1333404	0					
ANR	1333672	ArgumentList	out		1333404	1					
ANR	1333673	Argument	out		1333404	0					
ANR	1333674	Identifier	out		1333404	0					
ANR	1333675	Argument	"""0x%08x,"""		1333404	1					
ANR	1333676	PrimaryExpression	"""0x%08x,"""		1333404	0					
ANR	1333677	Argument	w2c . w		1333404	2					
ANR	1333678	MemberAccess	w2c . w		1333404	0					
ANR	1333679	Identifier	w2c		1333404	0					
ANR	1333680	Identifier	w		1333404	1					
ANR	1333681	Label	default :	414:6:12936:12943	1333404	7	True				
ANR	1333682	Identifier	default		1333404	0					
ANR	1333683	ExpressionStatement		414:15:12945:12945	1333404	8	True				
ANR	1333684	ExpressionStatement	"fprintf ( out , ""\\n\\t"" )"	416:4:12957:12977	1333404	5	True				
ANR	1333685	CallExpression	"fprintf ( out , ""\\n\\t"" )"		1333404	0					
ANR	1333686	Callee	fprintf		1333404	0					
ANR	1333687	Identifier	fprintf		1333404	0					
ANR	1333688	ArgumentList	out		1333404	1					
ANR	1333689	Argument	out		1333404	0					
ANR	1333690	Identifier	out		1333404	0					
ANR	1333691	Argument	"""\\n\\t"""		1333404	1					
ANR	1333692	PrimaryExpression	"""\\n\\t"""		1333404	0					
ANR	1333693	ReturnType	void		1333404	1					
ANR	1333694	Identifier	put_bytes_padded		1333404	2					
ANR	1333695	ParameterList	"FILE * out , unsigned char * p , unsigned int len"		1333404	3					
ANR	1333696	Parameter	FILE * out	372:22:11777:11785	1333404	0	True				
ANR	1333697	ParameterType	FILE *		1333404	0					
ANR	1333698	Identifier	out		1333404	1					
ANR	1333699	Parameter	unsigned char * p	372:33:11788:11803	1333404	1	True				
ANR	1333700	ParameterType	unsigned char *		1333404	0					
ANR	1333701	Identifier	p		1333404	1					
ANR	1333702	Parameter	unsigned int len	372:51:11806:11821	1333404	2	True				
ANR	1333703	ParameterType	unsigned int		1333404	0					
ANR	1333704	Identifier	len		1333404	1					
ANR	1333705	CFGEntryNode	ENTRY		1333404		True				
ANR	1333706	CFGExitNode	EXIT		1333404		True				
ANR	1333707	Symbol	isbigendian		1333404						
ANR	1333708	Symbol	w2c . c		1333404						
ANR	1333709	Symbol	i		1333404						
ANR	1333710	Symbol	w2c		1333404						
ANR	1333711	Symbol	j		1333404						
ANR	1333712	Symbol	out		1333404						
ANR	1333713	Symbol	p		1333404						
ANR	1333714	Symbol	w2c . c . c3		1333404						
ANR	1333715	Symbol	w2c . c . c2		1333404						
ANR	1333716	Symbol	ARCH_IS_BIG_ENDIAN		1333404						
ANR	1333717	Symbol	w2c . c . c4		1333404						
ANR	1333718	Symbol	len		1333404						
ANR	1333719	Symbol	* j		1333404						
ANR	1333720	Symbol	w2c . w		1333404						
ANR	1333721	Symbol	* p		1333404						
ANR	1333722	Symbol	w2c . c . c1		1333404						
ANR	1333723	Function	inode_clear	420:0:13026:13415							
ANR	1333724	FunctionDef	inode_clear (romfs_inode * node)		1333723	0					
ANR	1333725	CompoundStatement		421:0:13062:13415	1333723	0					
ANR	1333726	IdentifierDeclStatement	"int i , blocks ;"	422:4:13068:13081	1333723	0	True				
ANR	1333727	IdentifierDecl	i		1333723	0					
ANR	1333728	IdentifierDeclType	int		1333723	0					
ANR	1333729	Identifier	i		1333723	1					
ANR	1333730	IdentifierDecl	blocks		1333723	1					
ANR	1333731	IdentifierDeclType	int		1333723	0					
ANR	1333732	Identifier	blocks		1333723	1					
ANR	1333733	IfStatement	if ( node )		1333723	1					
ANR	1333734	Condition	node	424:8:13092:13095	1333723	0	True				
ANR	1333735	Identifier	node		1333723	0					
ANR	1333736	CompoundStatement		4:14:35:35	1333723	1					
ANR	1333737	ExpressionStatement	blocks = ( node -> disc_length + ROMFS_BLOCKSIZE - 1 ) / ROMFS_BLOCKSIZE	425:8:13108:13170	1333723	0	True				
ANR	1333738	AssignmentExpression	blocks = ( node -> disc_length + ROMFS_BLOCKSIZE - 1 ) / ROMFS_BLOCKSIZE		1333723	0		=			
ANR	1333739	Identifier	blocks		1333723	0					
ANR	1333740	MultiplicativeExpression	( node -> disc_length + ROMFS_BLOCKSIZE - 1 ) / ROMFS_BLOCKSIZE		1333723	1		/			
ANR	1333741	AdditiveExpression	node -> disc_length + ROMFS_BLOCKSIZE - 1		1333723	0		+			
ANR	1333742	PtrMemberAccess	node -> disc_length		1333723	0					
ANR	1333743	Identifier	node		1333723	0					
ANR	1333744	Identifier	disc_length		1333723	1					
ANR	1333745	AdditiveExpression	ROMFS_BLOCKSIZE - 1		1333723	1		-			
ANR	1333746	Identifier	ROMFS_BLOCKSIZE		1333723	0					
ANR	1333747	PrimaryExpression	1		1333723	1					
ANR	1333748	Identifier	ROMFS_BLOCKSIZE		1333723	1					
ANR	1333749	IfStatement	if ( node -> data )		1333723	1					
ANR	1333750	Condition	node -> data	426:12:13184:13193	1333723	0	True				
ANR	1333751	PtrMemberAccess	node -> data		1333723	0					
ANR	1333752	Identifier	node		1333723	0					
ANR	1333753	Identifier	data		1333723	1					
ANR	1333754	CompoundStatement		6:24:133:133	1333723	1					
ANR	1333755	ForStatement	for ( i = 0 ; i < blocks ; i ++ )		1333723	0					
ANR	1333756	ForInit	i = 0 ;	427:17:13215:13220	1333723	0	True				
ANR	1333757	AssignmentExpression	i = 0		1333723	0		=			
ANR	1333758	Identifier	i		1333723	0					
ANR	1333759	PrimaryExpression	0		1333723	1					
ANR	1333760	Condition	i < blocks	427:24:13222:13231	1333723	1	True				
ANR	1333761	RelationalExpression	i < blocks		1333723	0		<			
ANR	1333762	Identifier	i		1333723	0					
ANR	1333763	Identifier	blocks		1333723	1					
ANR	1333764	PostIncDecOperationExpression	i ++	427:36:13234:13236	1333723	2	True				
ANR	1333765	Identifier	i		1333723	0					
ANR	1333766	IncDec	++		1333723	1					
ANR	1333767	CompoundStatement		7:41:176:176	1333723	3					
ANR	1333768	IfStatement	if ( node -> data [ i ] )		1333723	0					
ANR	1333769	Condition	node -> data [ i ]	428:20:13261:13273	1333723	0	True				
ANR	1333770	ArrayIndexing	node -> data [ i ]		1333723	0					
ANR	1333771	PtrMemberAccess	node -> data		1333723	0					
ANR	1333772	Identifier	node		1333723	0					
ANR	1333773	Identifier	data		1333723	1					
ANR	1333774	Identifier	i		1333723	1					
ANR	1333775	ExpressionStatement	free ( node -> data [ i ] )	428:35:13276:13295	1333723	1	True				
ANR	1333776	CallExpression	free ( node -> data [ i ] )		1333723	0					
ANR	1333777	Callee	free		1333723	0					
ANR	1333778	Identifier	free		1333723	0					
ANR	1333779	ArgumentList	node -> data [ i ]		1333723	1					
ANR	1333780	Argument	node -> data [ i ]		1333723	0					
ANR	1333781	ArrayIndexing	node -> data [ i ]		1333723	0					
ANR	1333782	PtrMemberAccess	node -> data		1333723	0					
ANR	1333783	Identifier	node		1333723	0					
ANR	1333784	Identifier	data		1333723	1					
ANR	1333785	Identifier	i		1333723	1					
ANR	1333786	ExpressionStatement	free ( node -> data )	430:12:13323:13339	1333723	1	True				
ANR	1333787	CallExpression	free ( node -> data )		1333723	0					
ANR	1333788	Callee	free		1333723	0					
ANR	1333789	Identifier	free		1333723	0					
ANR	1333790	ArgumentList	node -> data		1333723	1					
ANR	1333791	Argument	node -> data		1333723	0					
ANR	1333792	PtrMemberAccess	node -> data		1333723	0					
ANR	1333793	Identifier	node		1333723	0					
ANR	1333794	Identifier	data		1333723	1					
ANR	1333795	IfStatement	if ( node -> data_lengths )		1333723	2					
ANR	1333796	Condition	node -> data_lengths	432:12:13363:13380	1333723	0	True				
ANR	1333797	PtrMemberAccess	node -> data_lengths		1333723	0					
ANR	1333798	Identifier	node		1333723	0					
ANR	1333799	Identifier	data_lengths		1333723	1					
ANR	1333800	ExpressionStatement	free ( node -> data_lengths )	432:32:13383:13407	1333723	1	True				
ANR	1333801	CallExpression	free ( node -> data_lengths )		1333723	0					
ANR	1333802	Callee	free		1333723	0					
ANR	1333803	Identifier	free		1333723	0					
ANR	1333804	ArgumentList	node -> data_lengths		1333723	1					
ANR	1333805	Argument	node -> data_lengths		1333723	0					
ANR	1333806	PtrMemberAccess	node -> data_lengths		1333723	0					
ANR	1333807	Identifier	node		1333723	0					
ANR	1333808	Identifier	data_lengths		1333723	1					
ANR	1333809	ReturnType	void		1333723	1					
ANR	1333810	Identifier	inode_clear		1333723	2					
ANR	1333811	ParameterList	romfs_inode * node		1333723	3					
ANR	1333812	Parameter	romfs_inode * node	420:17:13043:13059	1333723	0	True				
ANR	1333813	ParameterType	romfs_inode *		1333723	0					
ANR	1333814	Identifier	node		1333723	1					
ANR	1333815	CFGEntryNode	ENTRY		1333723		True				
ANR	1333816	CFGExitNode	EXIT		1333723		True				
ANR	1333817	Symbol	node		1333723						
ANR	1333818	Symbol	node -> data		1333723						
ANR	1333819	Symbol	node -> disc_length		1333723						
ANR	1333820	Symbol	* i		1333723						
ANR	1333821	Symbol	node -> data_lengths		1333723						
ANR	1333822	Symbol	* * node		1333723						
ANR	1333823	Symbol	blocks		1333723						
ANR	1333824	Symbol	i		1333723						
ANR	1333825	Symbol	* node		1333723						
ANR	1333826	Symbol	ROMFS_BLOCKSIZE		1333723						
ANR	1333827	Symbol	* node -> data		1333723						
ANR	1333828	Function	inode_write	437:0:13462:15130							
ANR	1333829	FunctionDef	"inode_write (FILE * out , romfs_inode * node , int compression , int inode_count , int * totlen)"		1333828	0					
ANR	1333830	CompoundStatement		439:0:13556:15130	1333828	0					
ANR	1333831	IdentifierDeclStatement	"int i , offset ;"	440:4:13562:13575	1333828	0	True				
ANR	1333832	IdentifierDecl	i		1333828	0					
ANR	1333833	IdentifierDeclType	int		1333828	0					
ANR	1333834	Identifier	i		1333828	1					
ANR	1333835	IdentifierDecl	offset		1333828	1					
ANR	1333836	IdentifierDeclType	int		1333828	0					
ANR	1333837	Identifier	offset		1333828	1					
ANR	1333838	IdentifierDeclStatement	int blocks = ( node -> length + ROMFS_BLOCKSIZE - 1 ) / ROMFS_BLOCKSIZE ;	441:4:13581:13642	1333828	1	True				
ANR	1333839	IdentifierDecl	blocks = ( node -> length + ROMFS_BLOCKSIZE - 1 ) / ROMFS_BLOCKSIZE		1333828	0					
ANR	1333840	IdentifierDeclType	int		1333828	0					
ANR	1333841	Identifier	blocks		1333828	1					
ANR	1333842	AssignmentExpression	blocks = ( node -> length + ROMFS_BLOCKSIZE - 1 ) / ROMFS_BLOCKSIZE		1333828	2		=			
ANR	1333843	Identifier	blocks		1333828	0					
ANR	1333844	MultiplicativeExpression	( node -> length + ROMFS_BLOCKSIZE - 1 ) / ROMFS_BLOCKSIZE		1333828	1		/			
ANR	1333845	AdditiveExpression	node -> length + ROMFS_BLOCKSIZE - 1		1333828	0		+			
ANR	1333846	PtrMemberAccess	node -> length		1333828	0					
ANR	1333847	Identifier	node		1333828	0					
ANR	1333848	Identifier	length		1333828	1					
ANR	1333849	AdditiveExpression	ROMFS_BLOCKSIZE - 1		1333828	1		-			
ANR	1333850	Identifier	ROMFS_BLOCKSIZE		1333828	0					
ANR	1333851	PrimaryExpression	1		1333828	1					
ANR	1333852	Identifier	ROMFS_BLOCKSIZE		1333828	1					
ANR	1333853	IdentifierDeclStatement	int namelen = strlen ( node -> name ) + 1 ;	442:4:13648:13684	1333828	2	True				
ANR	1333854	IdentifierDecl	namelen = strlen ( node -> name ) + 1		1333828	0					
ANR	1333855	IdentifierDeclType	int		1333828	0					
ANR	1333856	Identifier	namelen		1333828	1					
ANR	1333857	AssignmentExpression	namelen = strlen ( node -> name ) + 1		1333828	2		=			
ANR	1333858	Identifier	namelen		1333828	0					
ANR	1333859	AdditiveExpression	strlen ( node -> name ) + 1		1333828	1		+			
ANR	1333860	CallExpression	strlen ( node -> name )		1333828	0					
ANR	1333861	Callee	strlen		1333828	0					
ANR	1333862	Identifier	strlen		1333828	0					
ANR	1333863	ArgumentList	node -> name		1333828	1					
ANR	1333864	Argument	node -> name		1333828	0					
ANR	1333865	PtrMemberAccess	node -> name		1333828	0					
ANR	1333866	Identifier	node		1333828	0					
ANR	1333867	Identifier	name		1333828	1					
ANR	1333868	PrimaryExpression	1		1333828	1					
ANR	1333869	IdentifierDeclStatement	int clen = 0 ;	443:4:13722:13734	1333828	3	True				
ANR	1333870	IdentifierDecl	clen = 0		1333828	0					
ANR	1333871	IdentifierDeclType	int		1333828	0					
ANR	1333872	Identifier	clen		1333828	1					
ANR	1333873	AssignmentExpression	clen = 0		1333828	2		=			
ANR	1333874	Identifier	clen		1333828	0					
ANR	1333875	PrimaryExpression	0		1333828	1					
ANR	1333876	ExpressionStatement	"fprintf ( out , ""    static uint32_t node_%d[] = {\\n\\t"" , inode_count )"	446:4:13799:13864	1333828	4	True				
ANR	1333877	CallExpression	"fprintf ( out , ""    static uint32_t node_%d[] = {\\n\\t"" , inode_count )"		1333828	0					
ANR	1333878	Callee	fprintf		1333828	0					
ANR	1333879	Identifier	fprintf		1333828	0					
ANR	1333880	ArgumentList	out		1333828	1					
ANR	1333881	Argument	out		1333828	0					
ANR	1333882	Identifier	out		1333828	0					
ANR	1333883	Argument	"""    static uint32_t node_%d[] = {\\n\\t"""		1333828	1					
ANR	1333884	PrimaryExpression	"""    static uint32_t node_%d[] = {\\n\\t"""		1333828	0					
ANR	1333885	Argument	inode_count		1333828	2					
ANR	1333886	Identifier	inode_count		1333828	0					
ANR	1333887	ExpressionStatement	"put_uint32 ( out , node -> length | ( compression ? 0x80000000 : 0 ) )"	448:4:13930:13992	1333828	5	True				
ANR	1333888	CallExpression	"put_uint32 ( out , node -> length | ( compression ? 0x80000000 : 0 ) )"		1333828	0					
ANR	1333889	Callee	put_uint32		1333828	0					
ANR	1333890	Identifier	put_uint32		1333828	0					
ANR	1333891	ArgumentList	out		1333828	1					
ANR	1333892	Argument	out		1333828	0					
ANR	1333893	Identifier	out		1333828	0					
ANR	1333894	Argument	node -> length | ( compression ? 0x80000000 : 0 )		1333828	1					
ANR	1333895	InclusiveOrExpression	node -> length | ( compression ? 0x80000000 : 0 )		1333828	0		|			
ANR	1333896	PtrMemberAccess	node -> length		1333828	0					
ANR	1333897	Identifier	node		1333828	0					
ANR	1333898	Identifier	length		1333828	1					
ANR	1333899	ConditionalExpression	compression ? 0x80000000 : 0		1333828	1					
ANR	1333900	Condition	compression		1333828	0					
ANR	1333901	Identifier	compression		1333828	0					
ANR	1333902	PrimaryExpression	0x80000000		1333828	1					
ANR	1333903	PrimaryExpression	0		1333828	2					
ANR	1333904	ExpressionStatement	"fprintf ( out , ""\\t/* compression_flag_bit + file length */\\n\\t"" )"	449:4:13998:14060	1333828	6	True				
ANR	1333905	CallExpression	"fprintf ( out , ""\\t/* compression_flag_bit + file length */\\n\\t"" )"		1333828	0					
ANR	1333906	Callee	fprintf		1333828	0					
ANR	1333907	Identifier	fprintf		1333828	0					
ANR	1333908	ArgumentList	out		1333828	1					
ANR	1333909	Argument	out		1333828	0					
ANR	1333910	Identifier	out		1333828	0					
ANR	1333911	Argument	"""\\t/* compression_flag_bit + file length */\\n\\t"""		1333828	1					
ANR	1333912	PrimaryExpression	"""\\t/* compression_flag_bit + file length */\\n\\t"""		1333828	0					
ANR	1333913	ExpressionStatement	offset = 4 + ( 8 * blocks ) + ( ( namelen + 3 ) & ~3 )	452:4:14109:14153	1333828	7	True				
ANR	1333914	AssignmentExpression	offset = 4 + ( 8 * blocks ) + ( ( namelen + 3 ) & ~3 )		1333828	0		=			
ANR	1333915	Identifier	offset		1333828	0					
ANR	1333916	AdditiveExpression	4 + ( 8 * blocks ) + ( ( namelen + 3 ) & ~3 )		1333828	1		+			
ANR	1333917	PrimaryExpression	4		1333828	0					
ANR	1333918	AdditiveExpression	( 8 * blocks ) + ( ( namelen + 3 ) & ~3 )		1333828	1		+			
ANR	1333919	MultiplicativeExpression	8 * blocks		1333828	0		*			
ANR	1333920	PrimaryExpression	8		1333828	0					
ANR	1333921	Identifier	blocks		1333828	1					
ANR	1333922	BitAndExpression	( namelen + 3 ) & ~3		1333828	1		&			
ANR	1333923	AdditiveExpression	namelen + 3		1333828	0		+			
ANR	1333924	Identifier	namelen		1333828	0					
ANR	1333925	PrimaryExpression	3		1333828	1					
ANR	1333926	Identifier	~3		1333828	1					
ANR	1333927	ExpressionStatement	* totlen += offset	453:4:14159:14176	1333828	8	True				
ANR	1333928	AssignmentExpression	* totlen += offset		1333828	0		+=			
ANR	1333929	UnaryOperationExpression	* totlen		1333828	0					
ANR	1333930	UnaryOperator	*		1333828	0					
ANR	1333931	Identifier	totlen		1333828	1					
ANR	1333932	Identifier	offset		1333828	1					
ANR	1333933	ForStatement	for ( i = 0 ; i < blocks ; i ++ )		1333828	9					
ANR	1333934	ForInit	i = 0 ;	454:9:14218:14223	1333828	0	True				
ANR	1333935	AssignmentExpression	i = 0		1333828	0		=			
ANR	1333936	Identifier	i		1333828	0					
ANR	1333937	PrimaryExpression	0		1333828	1					
ANR	1333938	Condition	i < blocks	454:16:14225:14234	1333828	1	True				
ANR	1333939	RelationalExpression	i < blocks		1333828	0		<			
ANR	1333940	Identifier	i		1333828	0					
ANR	1333941	Identifier	blocks		1333828	1					
ANR	1333942	PostIncDecOperationExpression	i ++	454:28:14237:14239	1333828	2	True				
ANR	1333943	Identifier	i		1333828	0					
ANR	1333944	IncDec	++		1333828	1					
ANR	1333945	CompoundStatement		16:33:685:685	1333828	3					
ANR	1333946	ExpressionStatement	"put_uint32 ( out , node -> data_lengths [ i ] )"	455:8:14252:14290	1333828	0	True				
ANR	1333947	CallExpression	"put_uint32 ( out , node -> data_lengths [ i ] )"		1333828	0					
ANR	1333948	Callee	put_uint32		1333828	0					
ANR	1333949	Identifier	put_uint32		1333828	0					
ANR	1333950	ArgumentList	out		1333828	1					
ANR	1333951	Argument	out		1333828	0					
ANR	1333952	Identifier	out		1333828	0					
ANR	1333953	Argument	node -> data_lengths [ i ]		1333828	1					
ANR	1333954	ArrayIndexing	node -> data_lengths [ i ]		1333828	0					
ANR	1333955	PtrMemberAccess	node -> data_lengths		1333828	0					
ANR	1333956	Identifier	node		1333828	0					
ANR	1333957	Identifier	data_lengths		1333828	1					
ANR	1333958	Identifier	i		1333828	1					
ANR	1333959	ExpressionStatement	"put_uint32 ( out , offset )"	456:8:14300:14323	1333828	1	True				
ANR	1333960	CallExpression	"put_uint32 ( out , offset )"		1333828	0					
ANR	1333961	Callee	put_uint32		1333828	0					
ANR	1333962	Identifier	put_uint32		1333828	0					
ANR	1333963	ArgumentList	out		1333828	1					
ANR	1333964	Argument	out		1333828	0					
ANR	1333965	Identifier	out		1333828	0					
ANR	1333966	Argument	offset		1333828	1					
ANR	1333967	Identifier	offset		1333828	0					
ANR	1333968	ExpressionStatement	offset += ( node -> data_lengths [ i ] + 3 ) & ~3	457:8:14333:14373	1333828	2	True				
ANR	1333969	AssignmentExpression	offset += ( node -> data_lengths [ i ] + 3 ) & ~3		1333828	0		+=			
ANR	1333970	Identifier	offset		1333828	0					
ANR	1333971	BitAndExpression	( node -> data_lengths [ i ] + 3 ) & ~3		1333828	1		&			
ANR	1333972	AdditiveExpression	node -> data_lengths [ i ] + 3		1333828	0		+			
ANR	1333973	ArrayIndexing	node -> data_lengths [ i ]		1333828	0					
ANR	1333974	PtrMemberAccess	node -> data_lengths		1333828	0					
ANR	1333975	Identifier	node		1333828	0					
ANR	1333976	Identifier	data_lengths		1333828	1					
ANR	1333977	Identifier	i		1333828	1					
ANR	1333978	PrimaryExpression	3		1333828	1					
ANR	1333979	Identifier	~3		1333828	1					
ANR	1333980	ExpressionStatement	"fprintf ( out , ""\\t/* data_block_length, offset to data_block */\\n\\t"" )"	458:8:14383:14450	1333828	3	True				
ANR	1333981	CallExpression	"fprintf ( out , ""\\t/* data_block_length, offset to data_block */\\n\\t"" )"		1333828	0					
ANR	1333982	Callee	fprintf		1333828	0					
ANR	1333983	Identifier	fprintf		1333828	0					
ANR	1333984	ArgumentList	out		1333828	1					
ANR	1333985	Argument	out		1333828	0					
ANR	1333986	Identifier	out		1333828	0					
ANR	1333987	Argument	"""\\t/* data_block_length, offset to data_block */\\n\\t"""		1333828	1					
ANR	1333988	PrimaryExpression	"""\\t/* data_block_length, offset to data_block */\\n\\t"""		1333828	0					
ANR	1333989	ExpressionStatement	"fprintf ( out , ""\\t/* file name '%s' */\\n\\t"" , node -> name )"	461:4:14521:14575	1333828	10	True				
ANR	1333990	CallExpression	"fprintf ( out , ""\\t/* file name '%s' */\\n\\t"" , node -> name )"		1333828	0					
ANR	1333991	Callee	fprintf		1333828	0					
ANR	1333992	Identifier	fprintf		1333828	0					
ANR	1333993	ArgumentList	out		1333828	1					
ANR	1333994	Argument	out		1333828	0					
ANR	1333995	Identifier	out		1333828	0					
ANR	1333996	Argument	"""\\t/* file name '%s' */\\n\\t"""		1333828	1					
ANR	1333997	PrimaryExpression	"""\\t/* file name '%s' */\\n\\t"""		1333828	0					
ANR	1333998	Argument	node -> name		1333828	2					
ANR	1333999	PtrMemberAccess	node -> name		1333828	0					
ANR	1334000	Identifier	node		1333828	0					
ANR	1334001	Identifier	name		1333828	1					
ANR	1334002	ExpressionStatement	"put_bytes_padded ( out , ( unsigned char * ) node -> name , namelen )"	462:4:14581:14640	1333828	11	True				
ANR	1334003	CallExpression	"put_bytes_padded ( out , ( unsigned char * ) node -> name , namelen )"		1333828	0					
ANR	1334004	Callee	put_bytes_padded		1333828	0					
ANR	1334005	Identifier	put_bytes_padded		1333828	0					
ANR	1334006	ArgumentList	out		1333828	1					
ANR	1334007	Argument	out		1333828	0					
ANR	1334008	Identifier	out		1333828	0					
ANR	1334009	Argument	( unsigned char * ) node -> name		1333828	1					
ANR	1334010	CastExpression	( unsigned char * ) node -> name		1333828	0					
ANR	1334011	CastTarget	unsigned char *		1333828	0					
ANR	1334012	PtrMemberAccess	node -> name		1333828	1					
ANR	1334013	Identifier	node		1333828	0					
ANR	1334014	Identifier	name		1333828	1					
ANR	1334015	Argument	namelen		1333828	2					
ANR	1334016	Identifier	namelen		1333828	0					
ANR	1334017	ForStatement	for ( i = 0 ; i < blocks ; i ++ )		1333828	12					
ANR	1334018	ForInit	i = 0 ;	465:9:14677:14682	1333828	0	True				
ANR	1334019	AssignmentExpression	i = 0		1333828	0		=			
ANR	1334020	Identifier	i		1333828	0					
ANR	1334021	PrimaryExpression	0		1333828	1					
ANR	1334022	Condition	i < blocks	465:16:14684:14693	1333828	1	True				
ANR	1334023	RelationalExpression	i < blocks		1333828	0		<			
ANR	1334024	Identifier	i		1333828	0					
ANR	1334025	Identifier	blocks		1333828	1					
ANR	1334026	PostIncDecOperationExpression	i ++	465:28:14696:14698	1333828	2	True				
ANR	1334027	Identifier	i		1333828	0					
ANR	1334028	IncDec	++		1333828	1					
ANR	1334029	CompoundStatement		27:33:1144:1144	1333828	3					
ANR	1334030	ExpressionStatement	"put_bytes_padded ( out , node -> data [ i ] , node -> data_lengths [ i ] )"	466:8:14711:14770	1333828	0	True				
ANR	1334031	CallExpression	"put_bytes_padded ( out , node -> data [ i ] , node -> data_lengths [ i ] )"		1333828	0					
ANR	1334032	Callee	put_bytes_padded		1333828	0					
ANR	1334033	Identifier	put_bytes_padded		1333828	0					
ANR	1334034	ArgumentList	out		1333828	1					
ANR	1334035	Argument	out		1333828	0					
ANR	1334036	Identifier	out		1333828	0					
ANR	1334037	Argument	node -> data [ i ]		1333828	1					
ANR	1334038	ArrayIndexing	node -> data [ i ]		1333828	0					
ANR	1334039	PtrMemberAccess	node -> data		1333828	0					
ANR	1334040	Identifier	node		1333828	0					
ANR	1334041	Identifier	data		1333828	1					
ANR	1334042	Identifier	i		1333828	1					
ANR	1334043	Argument	node -> data_lengths [ i ]		1333828	2					
ANR	1334044	ArrayIndexing	node -> data_lengths [ i ]		1333828	0					
ANR	1334045	PtrMemberAccess	node -> data_lengths		1333828	0					
ANR	1334046	Identifier	node		1333828	0					
ANR	1334047	Identifier	data_lengths		1333828	1					
ANR	1334048	Identifier	i		1333828	1					
ANR	1334049	ExpressionStatement	clen += node -> data_lengths [ i ]	467:8:14780:14809	1333828	1	True				
ANR	1334050	AssignmentExpression	clen += node -> data_lengths [ i ]		1333828	0		+=			
ANR	1334051	Identifier	clen		1333828	0					
ANR	1334052	ArrayIndexing	node -> data_lengths [ i ]		1333828	1					
ANR	1334053	PtrMemberAccess	node -> data_lengths		1333828	0					
ANR	1334054	Identifier	node		1333828	0					
ANR	1334055	Identifier	data_lengths		1333828	1					
ANR	1334056	Identifier	i		1333828	1					
ANR	1334057	ExpressionStatement	* totlen += ( node -> data_lengths [ i ] + 3 ) & ~3	468:8:14819:14860	1333828	2	True				
ANR	1334058	AssignmentExpression	* totlen += ( node -> data_lengths [ i ] + 3 ) & ~3		1333828	0		+=			
ANR	1334059	UnaryOperationExpression	* totlen		1333828	0					
ANR	1334060	UnaryOperator	*		1333828	0					
ANR	1334061	Identifier	totlen		1333828	1					
ANR	1334062	BitAndExpression	( node -> data_lengths [ i ] + 3 ) & ~3		1333828	1		&			
ANR	1334063	AdditiveExpression	node -> data_lengths [ i ] + 3		1333828	0		+			
ANR	1334064	ArrayIndexing	node -> data_lengths [ i ]		1333828	0					
ANR	1334065	PtrMemberAccess	node -> data_lengths		1333828	0					
ANR	1334066	Identifier	node		1333828	0					
ANR	1334067	Identifier	data_lengths		1333828	1					
ANR	1334068	Identifier	i		1333828	1					
ANR	1334069	PrimaryExpression	3		1333828	1					
ANR	1334070	Identifier	~3		1333828	1					
ANR	1334071	ExpressionStatement	"fprintf ( out , ""\\t0 };\\t/* end-of-node */\\n"" )"	470:4:14898:14941	1333828	13	True				
ANR	1334072	CallExpression	"fprintf ( out , ""\\t0 };\\t/* end-of-node */\\n"" )"		1333828	0					
ANR	1334073	Callee	fprintf		1333828	0					
ANR	1334074	Identifier	fprintf		1333828	0					
ANR	1334075	ArgumentList	out		1333828	1					
ANR	1334076	Argument	out		1333828	0					
ANR	1334077	Identifier	out		1333828	0					
ANR	1334078	Argument	"""\\t0 };\\t/* end-of-node */\\n"""		1333828	1					
ANR	1334079	PrimaryExpression	"""\\t0 };\\t/* end-of-node */\\n"""		1333828	0					
ANR	1334080	ExpressionStatement	"printf ( ""node '%s' len=%ld"" , node -> name , node -> length )"	472:4:14948:15001	1333828	14	True				
ANR	1334081	CallExpression	"printf ( ""node '%s' len=%ld"" , node -> name , node -> length )"		1333828	0					
ANR	1334082	Callee	printf		1333828	0					
ANR	1334083	Identifier	printf		1333828	0					
ANR	1334084	ArgumentList	"""node '%s' len=%ld"""		1333828	1					
ANR	1334085	Argument	"""node '%s' len=%ld"""		1333828	0					
ANR	1334086	PrimaryExpression	"""node '%s' len=%ld"""		1333828	0					
ANR	1334087	Argument	node -> name		1333828	1					
ANR	1334088	PtrMemberAccess	node -> name		1333828	0					
ANR	1334089	Identifier	node		1333828	0					
ANR	1334090	Identifier	name		1333828	1					
ANR	1334091	Argument	node -> length		1333828	2					
ANR	1334092	PtrMemberAccess	node -> length		1333828	0					
ANR	1334093	Identifier	node		1333828	0					
ANR	1334094	Identifier	length		1333828	1					
ANR	1334095	ExpressionStatement	"printf ( "" %d blocks"" , blocks )"	473:4:15007:15035	1333828	15	True				
ANR	1334096	CallExpression	"printf ( "" %d blocks"" , blocks )"		1333828	0					
ANR	1334097	Callee	printf		1333828	0					
ANR	1334098	Identifier	printf		1333828	0					
ANR	1334099	ArgumentList	""" %d blocks"""		1333828	1					
ANR	1334100	Argument	""" %d blocks"""		1333828	0					
ANR	1334101	PrimaryExpression	""" %d blocks"""		1333828	0					
ANR	1334102	Argument	blocks		1333828	1					
ANR	1334103	Identifier	blocks		1333828	0					
ANR	1334104	IfStatement	if ( compression )		1333828	16					
ANR	1334105	Condition	compression	474:8:15045:15055	1333828	0	True				
ANR	1334106	Identifier	compression		1333828	0					
ANR	1334107	CompoundStatement		36:21:1501:1501	1333828	1					
ANR	1334108	ExpressionStatement	"printf ( "", compressed size=%d"" , clen )"	475:8:15068:15104	1333828	0	True				
ANR	1334109	CallExpression	"printf ( "", compressed size=%d"" , clen )"		1333828	0					
ANR	1334110	Callee	printf		1333828	0					
ANR	1334111	Identifier	printf		1333828	0					
ANR	1334112	ArgumentList	""", compressed size=%d"""		1333828	1					
ANR	1334113	Argument	""", compressed size=%d"""		1333828	0					
ANR	1334114	PrimaryExpression	""", compressed size=%d"""		1333828	0					
ANR	1334115	Argument	clen		1333828	1					
ANR	1334116	Identifier	clen		1333828	0					
ANR	1334117	ExpressionStatement	"printf ( ""\\n"" )"	477:4:15116:15128	1333828	17	True				
ANR	1334118	CallExpression	"printf ( ""\\n"" )"		1333828	0					
ANR	1334119	Callee	printf		1333828	0					
ANR	1334120	Identifier	printf		1333828	0					
ANR	1334121	ArgumentList	"""\\n"""		1333828	1					
ANR	1334122	Argument	"""\\n"""		1333828	0					
ANR	1334123	PrimaryExpression	"""\\n"""		1333828	0					
ANR	1334124	ReturnType	void		1333828	1					
ANR	1334125	Identifier	inode_write		1333828	2					
ANR	1334126	ParameterList	"FILE * out , romfs_inode * node , int compression , int inode_count , int * totlen"		1333828	3					
ANR	1334127	Parameter	FILE * out	438:12:13479:13487	1333828	0	True				
ANR	1334128	ParameterType	FILE *		1333828	0					
ANR	1334129	Identifier	out		1333828	1					
ANR	1334130	Parameter	romfs_inode * node	438:23:13490:13506	1333828	1	True				
ANR	1334131	ParameterType	romfs_inode *		1333828	0					
ANR	1334132	Identifier	node		1333828	1					
ANR	1334133	Parameter	int compression	438:42:13509:13523	1333828	2	True				
ANR	1334134	ParameterType	int		1333828	0					
ANR	1334135	Identifier	compression		1333828	1					
ANR	1334136	Parameter	int inode_count	438:59:13526:13540	1333828	3	True				
ANR	1334137	ParameterType	int		1333828	0					
ANR	1334138	Identifier	inode_count		1333828	1					
ANR	1334139	Parameter	int * totlen	438:76:13543:13553	1333828	4	True				
ANR	1334140	ParameterType	int *		1333828	0					
ANR	1334141	Identifier	totlen		1333828	1					
ANR	1334142	CFGEntryNode	ENTRY		1333828		True				
ANR	1334143	CFGExitNode	EXIT		1333828		True				
ANR	1334144	Symbol	offset		1333828						
ANR	1334145	Symbol	blocks		1333828						
ANR	1334146	Symbol	i		1333828						
ANR	1334147	Symbol	namelen		1333828						
ANR	1334148	Symbol	inode_count		1333828						
ANR	1334149	Symbol	out		1333828						
ANR	1334150	Symbol	ROMFS_BLOCKSIZE		1333828						
ANR	1334151	Symbol	* totlen		1333828						
ANR	1334152	Symbol	node		1333828						
ANR	1334153	Symbol	strlen		1333828						
ANR	1334154	Symbol	node -> data		1333828						
ANR	1334155	Symbol	node -> name		1333828						
ANR	1334156	Symbol	* i		1333828						
ANR	1334157	Symbol	node -> data_lengths		1333828						
ANR	1334158	Symbol	* * node		1333828						
ANR	1334159	Symbol	~3		1333828						
ANR	1334160	Symbol	* node -> data_lengths		1333828						
ANR	1334161	Symbol	totlen		1333828						
ANR	1334162	Symbol	node -> length		1333828						
ANR	1334163	Symbol	* node		1333828						
ANR	1334164	Symbol	compression		1333828						
ANR	1334165	Symbol	clen		1333828						
ANR	1334166	Symbol	* node -> data		1333828						
ANR	1334167	Function	prefix_add	480:0:15133:15627							
ANR	1334168	FunctionDef	"prefix_add (const char * prefix , const char * filename , char * prefixed_path)"		1334167	0					
ANR	1334169	CompoundStatement		482:0:15212:15627	1334167	0					
ANR	1334170	ExpressionStatement	prefixed_path [ 0 ] = 0	483:4:15218:15238	1334167	0	True				
ANR	1334171	AssignmentExpression	prefixed_path [ 0 ] = 0		1334167	0		=			
ANR	1334172	ArrayIndexing	prefixed_path [ 0 ]		1334167	0					
ANR	1334173	Identifier	prefixed_path		1334167	0					
ANR	1334174	PrimaryExpression	0		1334167	1					
ANR	1334175	PrimaryExpression	0		1334167	1					
ANR	1334176	ExpressionStatement	"strcat ( prefixed_path , prefix )"	484:4:15263:15292	1334167	1	True				
ANR	1334177	CallExpression	"strcat ( prefixed_path , prefix )"		1334167	0					
ANR	1334178	Callee	strcat		1334167	0					
ANR	1334179	Identifier	strcat		1334167	0					
ANR	1334180	ArgumentList	prefixed_path		1334167	1					
ANR	1334181	Argument	prefixed_path		1334167	0					
ANR	1334182	Identifier	prefixed_path		1334167	0					
ANR	1334183	Argument	prefix		1334167	1					
ANR	1334184	Identifier	prefix		1334167	0					
ANR	1334185	ExpressionStatement	"strcat ( prefixed_path , filename )"	485:4:15298:15329	1334167	2	True				
ANR	1334186	CallExpression	"strcat ( prefixed_path , filename )"		1334167	0					
ANR	1334187	Callee	strcat		1334167	0					
ANR	1334188	Identifier	strcat		1334167	0					
ANR	1334189	ArgumentList	prefixed_path		1334167	1					
ANR	1334190	Argument	prefixed_path		1334167	0					
ANR	1334191	Identifier	prefixed_path		1334167	0					
ANR	1334192	Argument	filename		1334167	1					
ANR	1334193	Identifier	filename		1334167	0					
ANR	1334194	CompoundStatement		8:8:263:268	1334167	3					
ANR	1334195	IdentifierDeclStatement	int i ;	489:8:15476:15481	1334167	0	True				
ANR	1334196	IdentifierDecl	i		1334167	0					
ANR	1334197	IdentifierDeclType	int		1334167	0					
ANR	1334198	Identifier	i		1334167	1					
ANR	1334199	ForStatement	for ( i = 0 ; i < strlen ( prefixed_path ) ; i ++ )		1334167	1					
ANR	1334200	ForInit	i = 0 ;	491:13:15497:15500	1334167	0	True				
ANR	1334201	AssignmentExpression	i = 0		1334167	0		=			
ANR	1334202	Identifier	i		1334167	0					
ANR	1334203	PrimaryExpression	0		1334167	1					
ANR	1334204	Condition	i < strlen ( prefixed_path )	491:18:15502:15524	1334167	1	True				
ANR	1334205	RelationalExpression	i < strlen ( prefixed_path )		1334167	0		<			
ANR	1334206	Identifier	i		1334167	0					
ANR	1334207	CallExpression	strlen ( prefixed_path )		1334167	1					
ANR	1334208	Callee	strlen		1334167	0					
ANR	1334209	Identifier	strlen		1334167	0					
ANR	1334210	ArgumentList	prefixed_path		1334167	1					
ANR	1334211	Argument	prefixed_path		1334167	0					
ANR	1334212	Identifier	prefixed_path		1334167	0					
ANR	1334213	PostIncDecOperationExpression	i ++	491:43:15527:15529	1334167	2	True				
ANR	1334214	Identifier	i		1334167	0					
ANR	1334215	IncDec	++		1334167	1					
ANR	1334216	IfStatement	if ( prefixed_path [ i ] == '\\\\' )		1334167	3					
ANR	1334217	Condition	prefixed_path [ i ] == '\\\\'	492:16:15548:15571	1334167	0	True				
ANR	1334218	EqualityExpression	prefixed_path [ i ] == '\\\\'		1334167	0		==			
ANR	1334219	ArrayIndexing	prefixed_path [ i ]		1334167	0					
ANR	1334220	Identifier	prefixed_path		1334167	0					
ANR	1334221	Identifier	i		1334167	1					
ANR	1334222	PrimaryExpression	'\\\\'		1334167	1					
ANR	1334223	ExpressionStatement	prefixed_path [ i ] = '/'	493:16:15590:15612	1334167	1	True				
ANR	1334224	AssignmentExpression	prefixed_path [ i ] = '/'		1334167	0		=			
ANR	1334225	ArrayIndexing	prefixed_path [ i ]		1334167	0					
ANR	1334226	Identifier	prefixed_path		1334167	0					
ANR	1334227	Identifier	i		1334167	1					
ANR	1334228	PrimaryExpression	'/'		1334167	1					
ANR	1334229	ReturnType	void		1334167	1					
ANR	1334230	Identifier	prefix_add		1334167	2					
ANR	1334231	ParameterList	"const char * prefix , const char * filename , char * prefixed_path"		1334167	3					
ANR	1334232	Parameter	const char * prefix	481:11:15149:15166	1334167	0	True				
ANR	1334233	ParameterType	const char *		1334167	0					
ANR	1334234	Identifier	prefix		1334167	1					
ANR	1334235	Parameter	const char * filename	481:31:15169:15188	1334167	1	True				
ANR	1334236	ParameterType	const char *		1334167	0					
ANR	1334237	Identifier	filename		1334167	1					
ANR	1334238	Parameter	char * prefixed_path	481:53:15191:15209	1334167	2	True				
ANR	1334239	ParameterType	char *		1334167	0					
ANR	1334240	Identifier	prefixed_path		1334167	1					
ANR	1334241	CFGEntryNode	ENTRY		1334167		True				
ANR	1334242	CFGExitNode	EXIT		1334167		True				
ANR	1334243	Symbol	prefixed_path		1334167						
ANR	1334244	Symbol	* prefixed_path		1334167						
ANR	1334245	Symbol	strlen		1334167						
ANR	1334246	Symbol	filename		1334167						
ANR	1334247	Symbol	* i		1334167						
ANR	1334248	Symbol	prefix		1334167						
ANR	1334249	Symbol	i		1334167						
ANR	1334250	ClassDef	<unnamed>	499:8:15710:15847							
ANR	1334251	DeclStmt									
ANR	1334252	Decl									psc_state
ANR	1334253	ClassDef	<unnamed>	512:8:15963:16345							
ANR	1334254	DeclStmt									
ANR	1334255	Decl							psc_state	psc_state	state
ANR	1334256	DeclStmt									
ANR	1334257	Decl							int	int	inpos
ANR	1334258	DeclStmt									
ANR	1334259	Decl							int	int	inmax
ANR	1334260	DeclStmt									
ANR	1334261	Decl							int	int	outpos
ANR	1334262	DeclStmt									
ANR	1334263	Decl							int	int	outend
ANR	1334264	DeclStmt									
ANR	1334265	Decl							int	int	outmax
ANR	1334266	DeclStmt									
ANR	1334267	Decl							int	int	buffercopy
ANR	1334268	DeclStmt									
ANR	1334269	Decl							int	int	wasascii
ANR	1334270	DeclStmt									
ANR	1334271	Decl							char	char *	bufferin
ANR	1334272	DeclStmt									
ANR	1334273	Decl							char	char *	bufferout
ANR	1334274	DeclStmt									
ANR	1334275	Decl							psc_getc	psc_getc *	pgetc
ANR	1334276	DeclStmt									
ANR	1334277	Decl							psc_ungetc	psc_ungetc *	unpgetc
ANR	1334278	DeclStmt									
ANR	1334279	Decl							psc_feof	psc_feof *	peof
ANR	1334280	DeclStmt									
ANR	1334281	Decl							void	void *	file
ANR	1334282	DeclStmt									
ANR	1334283	Decl							int	int	names
ANR	1334284	DeclStmt									
ANR	1334285	Decl							int	int	binary
ANR	1334286	DeclStmt									
ANR	1334287	Decl							int	int	noescape
ANR	1334288	DeclStmt									
ANR	1334289	Decl							int	int	escaping
ANR	1334290	DeclStmt									
ANR	1334291	Decl							int	int	paren
ANR	1334292	DeclStmt									
ANR	1334293	Decl							int	int	firstnum
ANR	1334294	DeclStmt									
ANR	1334295	Decl									pscompstate
ANR	1334296	Function	pscompact_start	535:0:16348:17084							
ANR	1334297	FunctionDef	"pscompact_start (pscompstate * psc , psc_getc * myfgetc , psc_ungetc * myungetc , psc_feof * myfeof , void * myfile , int names , int binary , int firstnum)"		1334296	0					
ANR	1334298	CompoundStatement		536:0:16504:17084	1334296	0					
ANR	1334299	ExpressionStatement	psc -> state = PSC_BufferIn	537:4:16510:16535	1334296	0	True				
ANR	1334300	AssignmentExpression	psc -> state = PSC_BufferIn		1334296	0		=			
ANR	1334301	PtrMemberAccess	psc -> state		1334296	0					
ANR	1334302	Identifier	psc		1334296	0					
ANR	1334303	Identifier	state		1334296	1					
ANR	1334304	Identifier	PSC_BufferIn		1334296	1					
ANR	1334305	ExpressionStatement	psc -> bufferin = malloc ( 80 )	538:4:16541:16567	1334296	1	True				
ANR	1334306	AssignmentExpression	psc -> bufferin = malloc ( 80 )		1334296	0		=			
ANR	1334307	PtrMemberAccess	psc -> bufferin		1334296	0					
ANR	1334308	Identifier	psc		1334296	0					
ANR	1334309	Identifier	bufferin		1334296	1					
ANR	1334310	CallExpression	malloc ( 80 )		1334296	1					
ANR	1334311	Callee	malloc		1334296	0					
ANR	1334312	Identifier	malloc		1334296	0					
ANR	1334313	ArgumentList	80		1334296	1					
ANR	1334314	Argument	80		1334296	0					
ANR	1334315	PrimaryExpression	80		1334296	0					
ANR	1334316	ExpressionStatement	psc -> bufferout = malloc ( 80 )	539:4:16573:16600	1334296	2	True				
ANR	1334317	AssignmentExpression	psc -> bufferout = malloc ( 80 )		1334296	0		=			
ANR	1334318	PtrMemberAccess	psc -> bufferout		1334296	0					
ANR	1334319	Identifier	psc		1334296	0					
ANR	1334320	Identifier	bufferout		1334296	1					
ANR	1334321	CallExpression	malloc ( 80 )		1334296	1					
ANR	1334322	Callee	malloc		1334296	0					
ANR	1334323	Identifier	malloc		1334296	0					
ANR	1334324	ArgumentList	80		1334296	1					
ANR	1334325	Argument	80		1334296	0					
ANR	1334326	PrimaryExpression	80		1334296	0					
ANR	1334327	IfStatement	if ( ( psc -> bufferin == NULL ) || ( psc -> bufferout == NULL ) )		1334296	3					
ANR	1334328	Condition	( psc -> bufferin == NULL ) || ( psc -> bufferout == NULL )	540:8:16610:16660	1334296	0	True				
ANR	1334329	OrExpression	( psc -> bufferin == NULL ) || ( psc -> bufferout == NULL )		1334296	0		||			
ANR	1334330	EqualityExpression	psc -> bufferin == NULL		1334296	0		==			
ANR	1334331	PtrMemberAccess	psc -> bufferin		1334296	0					
ANR	1334332	Identifier	psc		1334296	0					
ANR	1334333	Identifier	bufferin		1334296	1					
ANR	1334334	Identifier	NULL		1334296	1					
ANR	1334335	EqualityExpression	psc -> bufferout == NULL		1334296	1		==			
ANR	1334336	PtrMemberAccess	psc -> bufferout		1334296	0					
ANR	1334337	Identifier	psc		1334296	0					
ANR	1334338	Identifier	bufferout		1334296	1					
ANR	1334339	Identifier	NULL		1334296	1					
ANR	1334340	CompoundStatement		5:61:158:158	1334296	1					
ANR	1334341	ExpressionStatement	"fprintf ( stderr , ""Malloc failed in ps compaction\\n"" )"	541:8:16673:16724	1334296	0	True				
ANR	1334342	CallExpression	"fprintf ( stderr , ""Malloc failed in ps compaction\\n"" )"		1334296	0					
ANR	1334343	Callee	fprintf		1334296	0					
ANR	1334344	Identifier	fprintf		1334296	0					
ANR	1334345	ArgumentList	stderr		1334296	1					
ANR	1334346	Argument	stderr		1334296	0					
ANR	1334347	Identifier	stderr		1334296	0					
ANR	1334348	Argument	"""Malloc failed in ps compaction\\n"""		1334296	1					
ANR	1334349	PrimaryExpression	"""Malloc failed in ps compaction\\n"""		1334296	0					
ANR	1334350	ExpressionStatement	exit ( 1 )	542:8:16734:16741	1334296	1	True				
ANR	1334351	CallExpression	exit ( 1 )		1334296	0					
ANR	1334352	Callee	exit		1334296	0					
ANR	1334353	Identifier	exit		1334296	0					
ANR	1334354	ArgumentList	1		1334296	1					
ANR	1334355	Argument	1		1334296	0					
ANR	1334356	PrimaryExpression	1		1334296	0					
ANR	1334357	ExpressionStatement	psc -> inmax = 80	544:4:16753:16768	1334296	4	True				
ANR	1334358	AssignmentExpression	psc -> inmax = 80		1334296	0		=			
ANR	1334359	PtrMemberAccess	psc -> inmax		1334296	0					
ANR	1334360	Identifier	psc		1334296	0					
ANR	1334361	Identifier	inmax		1334296	1					
ANR	1334362	PrimaryExpression	80		1334296	1					
ANR	1334363	ExpressionStatement	psc -> outmax = 80	545:4:16774:16790	1334296	5	True				
ANR	1334364	AssignmentExpression	psc -> outmax = 80		1334296	0		=			
ANR	1334365	PtrMemberAccess	psc -> outmax		1334296	0					
ANR	1334366	Identifier	psc		1334296	0					
ANR	1334367	Identifier	outmax		1334296	1					
ANR	1334368	PrimaryExpression	80		1334296	1					
ANR	1334369	ExpressionStatement	psc -> inpos = 0	546:4:16796:16810	1334296	6	True				
ANR	1334370	AssignmentExpression	psc -> inpos = 0		1334296	0		=			
ANR	1334371	PtrMemberAccess	psc -> inpos		1334296	0					
ANR	1334372	Identifier	psc		1334296	0					
ANR	1334373	Identifier	inpos		1334296	1					
ANR	1334374	PrimaryExpression	0		1334296	1					
ANR	1334375	ExpressionStatement	psc -> wasascii = 0	547:4:16816:16833	1334296	7	True				
ANR	1334376	AssignmentExpression	psc -> wasascii = 0		1334296	0		=			
ANR	1334377	PtrMemberAccess	psc -> wasascii		1334296	0					
ANR	1334378	Identifier	psc		1334296	0					
ANR	1334379	Identifier	wasascii		1334296	1					
ANR	1334380	PrimaryExpression	0		1334296	1					
ANR	1334381	ExpressionStatement	psc -> pgetc = myfgetc	548:4:16839:16859	1334296	8	True				
ANR	1334382	AssignmentExpression	psc -> pgetc = myfgetc		1334296	0		=			
ANR	1334383	PtrMemberAccess	psc -> pgetc		1334296	0					
ANR	1334384	Identifier	psc		1334296	0					
ANR	1334385	Identifier	pgetc		1334296	1					
ANR	1334386	Identifier	myfgetc		1334296	1					
ANR	1334387	ExpressionStatement	psc -> unpgetc = myungetc	549:4:16865:16888	1334296	9	True				
ANR	1334388	AssignmentExpression	psc -> unpgetc = myungetc		1334296	0		=			
ANR	1334389	PtrMemberAccess	psc -> unpgetc		1334296	0					
ANR	1334390	Identifier	psc		1334296	0					
ANR	1334391	Identifier	unpgetc		1334296	1					
ANR	1334392	Identifier	myungetc		1334296	1					
ANR	1334393	ExpressionStatement	psc -> peof = myfeof	550:4:16894:16912	1334296	10	True				
ANR	1334394	AssignmentExpression	psc -> peof = myfeof		1334296	0		=			
ANR	1334395	PtrMemberAccess	psc -> peof		1334296	0					
ANR	1334396	Identifier	psc		1334296	0					
ANR	1334397	Identifier	peof		1334296	1					
ANR	1334398	Identifier	myfeof		1334296	1					
ANR	1334399	ExpressionStatement	psc -> file = myfile	551:4:16918:16936	1334296	11	True				
ANR	1334400	AssignmentExpression	psc -> file = myfile		1334296	0		=			
ANR	1334401	PtrMemberAccess	psc -> file		1334296	0					
ANR	1334402	Identifier	psc		1334296	0					
ANR	1334403	Identifier	file		1334296	1					
ANR	1334404	Identifier	myfile		1334296	1					
ANR	1334405	ExpressionStatement	psc -> names = names	552:4:16942:16960	1334296	12	True				
ANR	1334406	AssignmentExpression	psc -> names = names		1334296	0		=			
ANR	1334407	PtrMemberAccess	psc -> names		1334296	0					
ANR	1334408	Identifier	psc		1334296	0					
ANR	1334409	Identifier	names		1334296	1					
ANR	1334410	Identifier	names		1334296	1					
ANR	1334411	ExpressionStatement	psc -> binary = binary	553:4:16966:16986	1334296	13	True				
ANR	1334412	AssignmentExpression	psc -> binary = binary		1334296	0		=			
ANR	1334413	PtrMemberAccess	psc -> binary		1334296	0					
ANR	1334414	Identifier	psc		1334296	0					
ANR	1334415	Identifier	binary		1334296	1					
ANR	1334416	Identifier	binary		1334296	1					
ANR	1334417	ExpressionStatement	psc -> noescape = 0	554:4:16992:17009	1334296	14	True				
ANR	1334418	AssignmentExpression	psc -> noescape = 0		1334296	0		=			
ANR	1334419	PtrMemberAccess	psc -> noescape		1334296	0					
ANR	1334420	Identifier	psc		1334296	0					
ANR	1334421	Identifier	noescape		1334296	1					
ANR	1334422	PrimaryExpression	0		1334296	1					
ANR	1334423	ExpressionStatement	psc -> escaping = 0	555:4:17015:17032	1334296	15	True				
ANR	1334424	AssignmentExpression	psc -> escaping = 0		1334296	0		=			
ANR	1334425	PtrMemberAccess	psc -> escaping		1334296	0					
ANR	1334426	Identifier	psc		1334296	0					
ANR	1334427	Identifier	escaping		1334296	1					
ANR	1334428	PrimaryExpression	0		1334296	1					
ANR	1334429	ExpressionStatement	psc -> paren = 0	556:4:17038:17052	1334296	16	True				
ANR	1334430	AssignmentExpression	psc -> paren = 0		1334296	0		=			
ANR	1334431	PtrMemberAccess	psc -> paren		1334296	0					
ANR	1334432	Identifier	psc		1334296	0					
ANR	1334433	Identifier	paren		1334296	1					
ANR	1334434	PrimaryExpression	0		1334296	1					
ANR	1334435	ExpressionStatement	psc -> firstnum = firstnum	557:4:17058:17082	1334296	17	True				
ANR	1334436	AssignmentExpression	psc -> firstnum = firstnum		1334296	0		=			
ANR	1334437	PtrMemberAccess	psc -> firstnum		1334296	0					
ANR	1334438	Identifier	psc		1334296	0					
ANR	1334439	Identifier	firstnum		1334296	1					
ANR	1334440	Identifier	firstnum		1334296	1					
ANR	1334441	ReturnType	static void		1334296	1					
ANR	1334442	Identifier	pscompact_start		1334296	2					
ANR	1334443	ParameterList	"pscompstate * psc , psc_getc * myfgetc , psc_ungetc * myungetc , psc_feof * myfeof , void * myfile , int names , int binary , int firstnum"		1334296	3					
ANR	1334444	Parameter	pscompstate * psc	535:28:16376:16391	1334296	0	True				
ANR	1334445	ParameterType	pscompstate *		1334296	0					
ANR	1334446	Identifier	psc		1334296	1					
ANR	1334447	Parameter	psc_getc * myfgetc	535:46:16394:16410	1334296	1	True				
ANR	1334448	ParameterType	psc_getc *		1334296	0					
ANR	1334449	Identifier	myfgetc		1334296	1					
ANR	1334450	Parameter	psc_ungetc * myungetc	535:65:16413:16432	1334296	2	True				
ANR	1334451	ParameterType	psc_ungetc *		1334296	0					
ANR	1334452	Identifier	myungetc		1334296	1					
ANR	1334453	Parameter	psc_feof * myfeof	535:87:16435:16450	1334296	3	True				
ANR	1334454	ParameterType	psc_feof *		1334296	0					
ANR	1334455	Identifier	myfeof		1334296	1					
ANR	1334456	Parameter	void * myfile	535:105:16453:16464	1334296	4	True				
ANR	1334457	ParameterType	void *		1334296	0					
ANR	1334458	Identifier	myfile		1334296	1					
ANR	1334459	Parameter	int names	535:119:16467:16475	1334296	5	True				
ANR	1334460	ParameterType	int		1334296	0					
ANR	1334461	Identifier	names		1334296	1					
ANR	1334462	Parameter	int binary	535:130:16478:16487	1334296	6	True				
ANR	1334463	ParameterType	int		1334296	0					
ANR	1334464	Identifier	binary		1334296	1					
ANR	1334465	Parameter	int firstnum	535:142:16490:16501	1334296	7	True				
ANR	1334466	ParameterType	int		1334296	0					
ANR	1334467	Identifier	firstnum		1334296	1					
ANR	1334468	CFGEntryNode	ENTRY		1334296		True				
ANR	1334469	CFGExitNode	EXIT		1334296		True				
ANR	1334470	Symbol	psc		1334296						
ANR	1334471	Symbol	psc -> firstnum		1334296						
ANR	1334472	Symbol	psc -> bufferout		1334296						
ANR	1334473	Symbol	myungetc		1334296						
ANR	1334474	Symbol	psc -> bufferin		1334296						
ANR	1334475	Symbol	psc -> inmax		1334296						
ANR	1334476	Symbol	myfgetc		1334296						
ANR	1334477	Symbol	psc -> paren		1334296						
ANR	1334478	Symbol	psc -> wasascii		1334296						
ANR	1334479	Symbol	psc -> file		1334296						
ANR	1334480	Symbol	PSC_BufferIn		1334296						
ANR	1334481	Symbol	psc -> noescape		1334296						
ANR	1334482	Symbol	psc -> inpos		1334296						
ANR	1334483	Symbol	psc -> pgetc		1334296						
ANR	1334484	Symbol	myfeof		1334296						
ANR	1334485	Symbol	psc -> peof		1334296						
ANR	1334486	Symbol	malloc		1334296						
ANR	1334487	Symbol	psc -> unpgetc		1334296						
ANR	1334488	Symbol	NULL		1334296						
ANR	1334489	Symbol	psc -> state		1334296						
ANR	1334490	Symbol	psc -> escaping		1334296						
ANR	1334491	Symbol	* psc		1334296						
ANR	1334492	Symbol	stderr		1334296						
ANR	1334493	Symbol	psc -> outmax		1334296						
ANR	1334494	Symbol	psc -> names		1334296						
ANR	1334495	Symbol	firstnum		1334296						
ANR	1334496	Symbol	myfile		1334296						
ANR	1334497	Symbol	names		1334296						
ANR	1334498	Symbol	binary		1334296						
ANR	1334499	Symbol	psc -> binary		1334296						
ANR	1334500	Function	pscompact_end	560:0:17087:17184							
ANR	1334501	FunctionDef	pscompact_end (pscompstate * psc)		1334500	0					
ANR	1334502	CompoundStatement		561:0:17131:17184	1334500	0					
ANR	1334503	ExpressionStatement	free ( psc -> bufferin )	562:4:17137:17156	1334500	0	True				
ANR	1334504	CallExpression	free ( psc -> bufferin )		1334500	0					
ANR	1334505	Callee	free		1334500	0					
ANR	1334506	Identifier	free		1334500	0					
ANR	1334507	ArgumentList	psc -> bufferin		1334500	1					
ANR	1334508	Argument	psc -> bufferin		1334500	0					
ANR	1334509	PtrMemberAccess	psc -> bufferin		1334500	0					
ANR	1334510	Identifier	psc		1334500	0					
ANR	1334511	Identifier	bufferin		1334500	1					
ANR	1334512	ExpressionStatement	free ( psc -> bufferout )	563:4:17162:17182	1334500	1	True				
ANR	1334513	CallExpression	free ( psc -> bufferout )		1334500	0					
ANR	1334514	Callee	free		1334500	0					
ANR	1334515	Identifier	free		1334500	0					
ANR	1334516	ArgumentList	psc -> bufferout		1334500	1					
ANR	1334517	Argument	psc -> bufferout		1334500	0					
ANR	1334518	PtrMemberAccess	psc -> bufferout		1334500	0					
ANR	1334519	Identifier	psc		1334500	0					
ANR	1334520	Identifier	bufferout		1334500	1					
ANR	1334521	ReturnType	static void		1334500	1					
ANR	1334522	Identifier	pscompact_end		1334500	2					
ANR	1334523	ParameterList	pscompstate * psc		1334500	3					
ANR	1334524	Parameter	pscompstate * psc	560:26:17113:17128	1334500	0	True				
ANR	1334525	ParameterType	pscompstate *		1334500	0					
ANR	1334526	Identifier	psc		1334500	1					
ANR	1334527	CFGEntryNode	ENTRY		1334500		True				
ANR	1334528	CFGExitNode	EXIT		1334500		True				
ANR	1334529	Symbol	psc		1334500						
ANR	1334530	Symbol	psc -> bufferout		1334500						
ANR	1334531	Symbol	psc -> bufferin		1334500						
ANR	1334532	Symbol	* psc		1334500						
ANR	1334533	Function	pscompact_copy	566:0:17187:17440							
ANR	1334534	FunctionDef	"pscompact_copy (pscompstate * psc , int c , int n)"		1334533	0					
ANR	1334535	CompoundStatement		567:0:17246:17440	1334533	0					
ANR	1334536	ExpressionStatement	psc -> bufferout [ 0 ] = c	568:4:17252:17273	1334533	0	True				
ANR	1334537	AssignmentExpression	psc -> bufferout [ 0 ] = c		1334533	0		=			
ANR	1334538	ArrayIndexing	psc -> bufferout [ 0 ]		1334533	0					
ANR	1334539	PtrMemberAccess	psc -> bufferout		1334533	0					
ANR	1334540	Identifier	psc		1334533	0					
ANR	1334541	Identifier	bufferout		1334533	1					
ANR	1334542	PrimaryExpression	0		1334533	1					
ANR	1334543	Identifier	c		1334533	1					
ANR	1334544	ExpressionStatement	psc -> outend = 1	569:4:17279:17294	1334533	1	True				
ANR	1334545	AssignmentExpression	psc -> outend = 1		1334533	0		=			
ANR	1334546	PtrMemberAccess	psc -> outend		1334533	0					
ANR	1334547	Identifier	psc		1334533	0					
ANR	1334548	Identifier	outend		1334533	1					
ANR	1334549	PrimaryExpression	1		1334533	1					
ANR	1334550	ExpressionStatement	psc -> outpos = 0	570:4:17300:17315	1334533	2	True				
ANR	1334551	AssignmentExpression	psc -> outpos = 0		1334533	0		=			
ANR	1334552	PtrMemberAccess	psc -> outpos		1334533	0					
ANR	1334553	Identifier	psc		1334533	0					
ANR	1334554	Identifier	outpos		1334533	1					
ANR	1334555	PrimaryExpression	0		1334533	1					
ANR	1334556	ExpressionStatement	psc -> buffercopy = n	571:4:17321:17340	1334533	3	True				
ANR	1334557	AssignmentExpression	psc -> buffercopy = n		1334533	0		=			
ANR	1334558	PtrMemberAccess	psc -> buffercopy		1334533	0					
ANR	1334559	Identifier	psc		1334533	0					
ANR	1334560	Identifier	buffercopy		1334533	1					
ANR	1334561	Identifier	n		1334533	1					
ANR	1334562	IfStatement	if ( n == 0 )		1334533	4					
ANR	1334563	Condition	n == 0	572:8:17350:17355	1334533	0	True				
ANR	1334564	EqualityExpression	n == 0		1334533	0		==			
ANR	1334565	Identifier	n		1334533	0					
ANR	1334566	PrimaryExpression	0		1334533	1					
ANR	1334567	ExpressionStatement	psc -> state = PSC_BufferOut	573:8:17366:17392	1334533	1	True				
ANR	1334568	AssignmentExpression	psc -> state = PSC_BufferOut		1334533	0		=			
ANR	1334569	PtrMemberAccess	psc -> state		1334533	0					
ANR	1334570	Identifier	psc		1334533	0					
ANR	1334571	Identifier	state		1334533	1					
ANR	1334572	Identifier	PSC_BufferOut		1334533	1					
ANR	1334573	ElseStatement	else		1334533	0					
ANR	1334574	ExpressionStatement	psc -> state = PSC_BufferCopy	575:8:17411:17438	1334533	0	True				
ANR	1334575	AssignmentExpression	psc -> state = PSC_BufferCopy		1334533	0		=			
ANR	1334576	PtrMemberAccess	psc -> state		1334533	0					
ANR	1334577	Identifier	psc		1334533	0					
ANR	1334578	Identifier	state		1334533	1					
ANR	1334579	Identifier	PSC_BufferCopy		1334533	1					
ANR	1334580	ReturnType	static void		1334533	1					
ANR	1334581	Identifier	pscompact_copy		1334533	2					
ANR	1334582	ParameterList	"pscompstate * psc , int c , int n"		1334533	3					
ANR	1334583	Parameter	pscompstate * psc	566:27:17214:17229	1334533	0	True				
ANR	1334584	ParameterType	pscompstate *		1334533	0					
ANR	1334585	Identifier	psc		1334533	1					
ANR	1334586	Parameter	int c	566:45:17232:17236	1334533	1	True				
ANR	1334587	ParameterType	int		1334533	0					
ANR	1334588	Identifier	c		1334533	1					
ANR	1334589	Parameter	int n	566:52:17239:17243	1334533	2	True				
ANR	1334590	ParameterType	int		1334533	0					
ANR	1334591	Identifier	n		1334533	1					
ANR	1334592	CFGEntryNode	ENTRY		1334533		True				
ANR	1334593	CFGExitNode	EXIT		1334533		True				
ANR	1334594	Symbol	psc		1334533						
ANR	1334595	Symbol	psc -> bufferout		1334533						
ANR	1334596	Symbol	c		1334533						
ANR	1334597	Symbol	psc -> state		1334533						
ANR	1334598	Symbol	PSC_BufferCopy		1334533						
ANR	1334599	Symbol	* psc		1334533						
ANR	1334600	Symbol	PSC_BufferOut		1334533						
ANR	1334601	Symbol	n		1334533						
ANR	1334602	Symbol	psc -> buffercopy		1334533						
ANR	1334603	Symbol	* * psc		1334533						
ANR	1334604	Symbol	psc -> outend		1334533						
ANR	1334605	Symbol	* psc -> bufferout		1334533						
ANR	1334606	Symbol	psc -> outpos		1334533						
ANR	1334607	Function	pscompact_copy2	578:0:17443:17735							
ANR	1334608	FunctionDef	"pscompact_copy2 (pscompstate * psc , int c1 , int c2 , int n)"		1334607	0					
ANR	1334609	CompoundStatement		579:0:17512:17735	1334607	0					
ANR	1334610	ExpressionStatement	psc -> bufferout [ 0 ] = c1	580:4:17518:17540	1334607	0	True				
ANR	1334611	AssignmentExpression	psc -> bufferout [ 0 ] = c1		1334607	0		=			
ANR	1334612	ArrayIndexing	psc -> bufferout [ 0 ]		1334607	0					
ANR	1334613	PtrMemberAccess	psc -> bufferout		1334607	0					
ANR	1334614	Identifier	psc		1334607	0					
ANR	1334615	Identifier	bufferout		1334607	1					
ANR	1334616	PrimaryExpression	0		1334607	1					
ANR	1334617	Identifier	c1		1334607	1					
ANR	1334618	ExpressionStatement	psc -> bufferout [ 1 ] = c2	581:4:17546:17568	1334607	1	True				
ANR	1334619	AssignmentExpression	psc -> bufferout [ 1 ] = c2		1334607	0		=			
ANR	1334620	ArrayIndexing	psc -> bufferout [ 1 ]		1334607	0					
ANR	1334621	PtrMemberAccess	psc -> bufferout		1334607	0					
ANR	1334622	Identifier	psc		1334607	0					
ANR	1334623	Identifier	bufferout		1334607	1					
ANR	1334624	PrimaryExpression	1		1334607	1					
ANR	1334625	Identifier	c2		1334607	1					
ANR	1334626	ExpressionStatement	psc -> outend = 2	582:4:17574:17589	1334607	2	True				
ANR	1334627	AssignmentExpression	psc -> outend = 2		1334607	0		=			
ANR	1334628	PtrMemberAccess	psc -> outend		1334607	0					
ANR	1334629	Identifier	psc		1334607	0					
ANR	1334630	Identifier	outend		1334607	1					
ANR	1334631	PrimaryExpression	2		1334607	1					
ANR	1334632	ExpressionStatement	psc -> outpos = 0	583:4:17595:17610	1334607	3	True				
ANR	1334633	AssignmentExpression	psc -> outpos = 0		1334607	0		=			
ANR	1334634	PtrMemberAccess	psc -> outpos		1334607	0					
ANR	1334635	Identifier	psc		1334607	0					
ANR	1334636	Identifier	outpos		1334607	1					
ANR	1334637	PrimaryExpression	0		1334607	1					
ANR	1334638	ExpressionStatement	psc -> buffercopy = n	584:4:17616:17635	1334607	4	True				
ANR	1334639	AssignmentExpression	psc -> buffercopy = n		1334607	0		=			
ANR	1334640	PtrMemberAccess	psc -> buffercopy		1334607	0					
ANR	1334641	Identifier	psc		1334607	0					
ANR	1334642	Identifier	buffercopy		1334607	1					
ANR	1334643	Identifier	n		1334607	1					
ANR	1334644	IfStatement	if ( n == 0 )		1334607	5					
ANR	1334645	Condition	n == 0	585:8:17645:17650	1334607	0	True				
ANR	1334646	EqualityExpression	n == 0		1334607	0		==			
ANR	1334647	Identifier	n		1334607	0					
ANR	1334648	PrimaryExpression	0		1334607	1					
ANR	1334649	ExpressionStatement	psc -> state = PSC_BufferOut	586:8:17661:17687	1334607	1	True				
ANR	1334650	AssignmentExpression	psc -> state = PSC_BufferOut		1334607	0		=			
ANR	1334651	PtrMemberAccess	psc -> state		1334607	0					
ANR	1334652	Identifier	psc		1334607	0					
ANR	1334653	Identifier	state		1334607	1					
ANR	1334654	Identifier	PSC_BufferOut		1334607	1					
ANR	1334655	ElseStatement	else		1334607	0					
ANR	1334656	ExpressionStatement	psc -> state = PSC_BufferCopy	588:8:17706:17733	1334607	0	True				
ANR	1334657	AssignmentExpression	psc -> state = PSC_BufferCopy		1334607	0		=			
ANR	1334658	PtrMemberAccess	psc -> state		1334607	0					
ANR	1334659	Identifier	psc		1334607	0					
ANR	1334660	Identifier	state		1334607	1					
ANR	1334661	Identifier	PSC_BufferCopy		1334607	1					
ANR	1334662	ReturnType	static void		1334607	1					
ANR	1334663	Identifier	pscompact_copy2		1334607	2					
ANR	1334664	ParameterList	"pscompstate * psc , int c1 , int c2 , int n"		1334607	3					
ANR	1334665	Parameter	pscompstate * psc	578:28:17471:17486	1334607	0	True				
ANR	1334666	ParameterType	pscompstate *		1334607	0					
ANR	1334667	Identifier	psc		1334607	1					
ANR	1334668	Parameter	int c1	578:46:17489:17494	1334607	1	True				
ANR	1334669	ParameterType	int		1334607	0					
ANR	1334670	Identifier	c1		1334607	1					
ANR	1334671	Parameter	int c2	578:54:17497:17502	1334607	2	True				
ANR	1334672	ParameterType	int		1334607	0					
ANR	1334673	Identifier	c2		1334607	1					
ANR	1334674	Parameter	int n	578:62:17505:17509	1334607	3	True				
ANR	1334675	ParameterType	int		1334607	0					
ANR	1334676	Identifier	n		1334607	1					
ANR	1334677	CFGEntryNode	ENTRY		1334607		True				
ANR	1334678	CFGExitNode	EXIT		1334607		True				
ANR	1334679	Symbol	psc		1334607						
ANR	1334680	Symbol	psc -> bufferout		1334607						
ANR	1334681	Symbol	psc -> state		1334607						
ANR	1334682	Symbol	PSC_BufferCopy		1334607						
ANR	1334683	Symbol	* psc		1334607						
ANR	1334684	Symbol	PSC_BufferOut		1334607						
ANR	1334685	Symbol	c1		1334607						
ANR	1334686	Symbol	n		1334607						
ANR	1334687	Symbol	c2		1334607						
ANR	1334688	Symbol	psc -> buffercopy		1334607						
ANR	1334689	Symbol	* * psc		1334607						
ANR	1334690	Symbol	psc -> outend		1334607						
ANR	1334691	Symbol	* psc -> bufferout		1334607						
ANR	1334692	Symbol	psc -> outpos		1334607						
ANR	1334693	Function	pscompact_copy3	591:0:17738:18066							
ANR	1334694	FunctionDef	"pscompact_copy3 (pscompstate * psc , int c1 , int c2 , int c3 , int n)"		1334693	0					
ANR	1334695	CompoundStatement		592:0:17815:18066	1334693	0					
ANR	1334696	ExpressionStatement	psc -> bufferout [ 0 ] = c1	593:4:17821:17843	1334693	0	True				
ANR	1334697	AssignmentExpression	psc -> bufferout [ 0 ] = c1		1334693	0		=			
ANR	1334698	ArrayIndexing	psc -> bufferout [ 0 ]		1334693	0					
ANR	1334699	PtrMemberAccess	psc -> bufferout		1334693	0					
ANR	1334700	Identifier	psc		1334693	0					
ANR	1334701	Identifier	bufferout		1334693	1					
ANR	1334702	PrimaryExpression	0		1334693	1					
ANR	1334703	Identifier	c1		1334693	1					
ANR	1334704	ExpressionStatement	psc -> bufferout [ 1 ] = c2	594:4:17849:17871	1334693	1	True				
ANR	1334705	AssignmentExpression	psc -> bufferout [ 1 ] = c2		1334693	0		=			
ANR	1334706	ArrayIndexing	psc -> bufferout [ 1 ]		1334693	0					
ANR	1334707	PtrMemberAccess	psc -> bufferout		1334693	0					
ANR	1334708	Identifier	psc		1334693	0					
ANR	1334709	Identifier	bufferout		1334693	1					
ANR	1334710	PrimaryExpression	1		1334693	1					
ANR	1334711	Identifier	c2		1334693	1					
ANR	1334712	ExpressionStatement	psc -> bufferout [ 2 ] = c3	595:4:17877:17899	1334693	2	True				
ANR	1334713	AssignmentExpression	psc -> bufferout [ 2 ] = c3		1334693	0		=			
ANR	1334714	ArrayIndexing	psc -> bufferout [ 2 ]		1334693	0					
ANR	1334715	PtrMemberAccess	psc -> bufferout		1334693	0					
ANR	1334716	Identifier	psc		1334693	0					
ANR	1334717	Identifier	bufferout		1334693	1					
ANR	1334718	PrimaryExpression	2		1334693	1					
ANR	1334719	Identifier	c3		1334693	1					
ANR	1334720	ExpressionStatement	psc -> outend = 3	596:4:17905:17920	1334693	3	True				
ANR	1334721	AssignmentExpression	psc -> outend = 3		1334693	0		=			
ANR	1334722	PtrMemberAccess	psc -> outend		1334693	0					
ANR	1334723	Identifier	psc		1334693	0					
ANR	1334724	Identifier	outend		1334693	1					
ANR	1334725	PrimaryExpression	3		1334693	1					
ANR	1334726	ExpressionStatement	psc -> outpos = 0	597:4:17926:17941	1334693	4	True				
ANR	1334727	AssignmentExpression	psc -> outpos = 0		1334693	0		=			
ANR	1334728	PtrMemberAccess	psc -> outpos		1334693	0					
ANR	1334729	Identifier	psc		1334693	0					
ANR	1334730	Identifier	outpos		1334693	1					
ANR	1334731	PrimaryExpression	0		1334693	1					
ANR	1334732	ExpressionStatement	psc -> buffercopy = n	598:4:17947:17966	1334693	5	True				
ANR	1334733	AssignmentExpression	psc -> buffercopy = n		1334693	0		=			
ANR	1334734	PtrMemberAccess	psc -> buffercopy		1334693	0					
ANR	1334735	Identifier	psc		1334693	0					
ANR	1334736	Identifier	buffercopy		1334693	1					
ANR	1334737	Identifier	n		1334693	1					
ANR	1334738	IfStatement	if ( n == 0 )		1334693	6					
ANR	1334739	Condition	n == 0	599:8:17976:17981	1334693	0	True				
ANR	1334740	EqualityExpression	n == 0		1334693	0		==			
ANR	1334741	Identifier	n		1334693	0					
ANR	1334742	PrimaryExpression	0		1334693	1					
ANR	1334743	ExpressionStatement	psc -> state = PSC_BufferOut	600:8:17992:18018	1334693	1	True				
ANR	1334744	AssignmentExpression	psc -> state = PSC_BufferOut		1334693	0		=			
ANR	1334745	PtrMemberAccess	psc -> state		1334693	0					
ANR	1334746	Identifier	psc		1334693	0					
ANR	1334747	Identifier	state		1334693	1					
ANR	1334748	Identifier	PSC_BufferOut		1334693	1					
ANR	1334749	ElseStatement	else		1334693	0					
ANR	1334750	ExpressionStatement	psc -> state = PSC_BufferCopy	602:8:18037:18064	1334693	0	True				
ANR	1334751	AssignmentExpression	psc -> state = PSC_BufferCopy		1334693	0		=			
ANR	1334752	PtrMemberAccess	psc -> state		1334693	0					
ANR	1334753	Identifier	psc		1334693	0					
ANR	1334754	Identifier	state		1334693	1					
ANR	1334755	Identifier	PSC_BufferCopy		1334693	1					
ANR	1334756	ReturnType	static void		1334693	1					
ANR	1334757	Identifier	pscompact_copy3		1334693	2					
ANR	1334758	ParameterList	"pscompstate * psc , int c1 , int c2 , int c3 , int n"		1334693	3					
ANR	1334759	Parameter	pscompstate * psc	591:28:17766:17781	1334693	0	True				
ANR	1334760	ParameterType	pscompstate *		1334693	0					
ANR	1334761	Identifier	psc		1334693	1					
ANR	1334762	Parameter	int c1	591:46:17784:17789	1334693	1	True				
ANR	1334763	ParameterType	int		1334693	0					
ANR	1334764	Identifier	c1		1334693	1					
ANR	1334765	Parameter	int c2	591:54:17792:17797	1334693	2	True				
ANR	1334766	ParameterType	int		1334693	0					
ANR	1334767	Identifier	c2		1334693	1					
ANR	1334768	Parameter	int c3	591:62:17800:17805	1334693	3	True				
ANR	1334769	ParameterType	int		1334693	0					
ANR	1334770	Identifier	c3		1334693	1					
ANR	1334771	Parameter	int n	591:70:17808:17812	1334693	4	True				
ANR	1334772	ParameterType	int		1334693	0					
ANR	1334773	Identifier	n		1334693	1					
ANR	1334774	CFGEntryNode	ENTRY		1334693		True				
ANR	1334775	CFGExitNode	EXIT		1334693		True				
ANR	1334776	Symbol	psc		1334693						
ANR	1334777	Symbol	psc -> bufferout		1334693						
ANR	1334778	Symbol	psc -> state		1334693						
ANR	1334779	Symbol	PSC_BufferCopy		1334693						
ANR	1334780	Symbol	* psc		1334693						
ANR	1334781	Symbol	PSC_BufferOut		1334693						
ANR	1334782	Symbol	c1		1334693						
ANR	1334783	Symbol	n		1334693						
ANR	1334784	Symbol	c2		1334693						
ANR	1334785	Symbol	c3		1334693						
ANR	1334786	Symbol	psc -> buffercopy		1334693						
ANR	1334787	Symbol	* * psc		1334693						
ANR	1334788	Symbol	psc -> outend		1334693						
ANR	1334789	Symbol	* psc -> bufferout		1334693						
ANR	1334790	Symbol	psc -> outpos		1334693						
ANR	1334791	Function	pscompact_buffer	605:0:18069:18426							
ANR	1334792	FunctionDef	"pscompact_buffer (pscompstate * psc , int c)"		1334791	0					
ANR	1334793	CompoundStatement		606:0:18123:18426	1334791	0					
ANR	1334794	IfStatement	if ( psc -> inpos == psc -> inmax )		1334791	0					
ANR	1334795	Condition	psc -> inpos == psc -> inmax	607:8:18133:18156	1334791	0	True				
ANR	1334796	EqualityExpression	psc -> inpos == psc -> inmax		1334791	0		==			
ANR	1334797	PtrMemberAccess	psc -> inpos		1334791	0					
ANR	1334798	Identifier	psc		1334791	0					
ANR	1334799	Identifier	inpos		1334791	1					
ANR	1334800	PtrMemberAccess	psc -> inmax		1334791	1					
ANR	1334801	Identifier	psc		1334791	0					
ANR	1334802	Identifier	inmax		1334791	1					
ANR	1334803	CompoundStatement		2:34:35:35	1334791	1					
ANR	1334804	ExpressionStatement	psc -> inmax *= 2	608:8:18169:18184	1334791	0	True				
ANR	1334805	AssignmentExpression	psc -> inmax *= 2		1334791	0		*=			
ANR	1334806	PtrMemberAccess	psc -> inmax		1334791	0					
ANR	1334807	Identifier	psc		1334791	0					
ANR	1334808	Identifier	inmax		1334791	1					
ANR	1334809	PrimaryExpression	2		1334791	1					
ANR	1334810	ExpressionStatement	"psc -> bufferin = realloc ( psc -> bufferin , psc -> inmax * 2 )"	609:8:18194:18248	1334791	1	True				
ANR	1334811	AssignmentExpression	"psc -> bufferin = realloc ( psc -> bufferin , psc -> inmax * 2 )"		1334791	0		=			
ANR	1334812	PtrMemberAccess	psc -> bufferin		1334791	0					
ANR	1334813	Identifier	psc		1334791	0					
ANR	1334814	Identifier	bufferin		1334791	1					
ANR	1334815	CallExpression	"realloc ( psc -> bufferin , psc -> inmax * 2 )"		1334791	1					
ANR	1334816	Callee	realloc		1334791	0					
ANR	1334817	Identifier	realloc		1334791	0					
ANR	1334818	ArgumentList	psc -> bufferin		1334791	1					
ANR	1334819	Argument	psc -> bufferin		1334791	0					
ANR	1334820	PtrMemberAccess	psc -> bufferin		1334791	0					
ANR	1334821	Identifier	psc		1334791	0					
ANR	1334822	Identifier	bufferin		1334791	1					
ANR	1334823	Argument	psc -> inmax * 2		1334791	1					
ANR	1334824	MultiplicativeExpression	psc -> inmax * 2		1334791	0		*			
ANR	1334825	PtrMemberAccess	psc -> inmax		1334791	0					
ANR	1334826	Identifier	psc		1334791	0					
ANR	1334827	Identifier	inmax		1334791	1					
ANR	1334828	PrimaryExpression	2		1334791	1					
ANR	1334829	IfStatement	if ( psc -> bufferin == NULL )		1334791	2					
ANR	1334830	Condition	psc -> bufferin == NULL	610:12:18262:18282	1334791	0	True				
ANR	1334831	EqualityExpression	psc -> bufferin == NULL		1334791	0		==			
ANR	1334832	PtrMemberAccess	psc -> bufferin		1334791	0					
ANR	1334833	Identifier	psc		1334791	0					
ANR	1334834	Identifier	bufferin		1334791	1					
ANR	1334835	Identifier	NULL		1334791	1					
ANR	1334836	CompoundStatement		5:35:161:161	1334791	1					
ANR	1334837	ExpressionStatement	"fprintf ( stderr , ""Realloc failed in pscompaction\\n"" )"	611:12:18299:18350	1334791	0	True				
ANR	1334838	CallExpression	"fprintf ( stderr , ""Realloc failed in pscompaction\\n"" )"		1334791	0					
ANR	1334839	Callee	fprintf		1334791	0					
ANR	1334840	Identifier	fprintf		1334791	0					
ANR	1334841	ArgumentList	stderr		1334791	1					
ANR	1334842	Argument	stderr		1334791	0					
ANR	1334843	Identifier	stderr		1334791	0					
ANR	1334844	Argument	"""Realloc failed in pscompaction\\n"""		1334791	1					
ANR	1334845	PrimaryExpression	"""Realloc failed in pscompaction\\n"""		1334791	0					
ANR	1334846	ExpressionStatement	exit ( 1 )	612:12:18364:18371	1334791	1	True				
ANR	1334847	CallExpression	exit ( 1 )		1334791	0					
ANR	1334848	Callee	exit		1334791	0					
ANR	1334849	Identifier	exit		1334791	0					
ANR	1334850	ArgumentList	1		1334791	1					
ANR	1334851	Argument	1		1334791	0					
ANR	1334852	PrimaryExpression	1		1334791	0					
ANR	1334853	ExpressionStatement	psc -> bufferin [ psc -> inpos ++ ] = c	615:4:18393:18424	1334791	1	True				
ANR	1334854	AssignmentExpression	psc -> bufferin [ psc -> inpos ++ ] = c		1334791	0		=			
ANR	1334855	ArrayIndexing	psc -> bufferin [ psc -> inpos ++ ]		1334791	0					
ANR	1334856	PtrMemberAccess	psc -> bufferin		1334791	0					
ANR	1334857	Identifier	psc		1334791	0					
ANR	1334858	Identifier	bufferin		1334791	1					
ANR	1334859	PostIncDecOperationExpression	psc -> inpos ++		1334791	1					
ANR	1334860	PtrMemberAccess	psc -> inpos		1334791	0					
ANR	1334861	Identifier	psc		1334791	0					
ANR	1334862	Identifier	inpos		1334791	1					
ANR	1334863	IncDec	++		1334791	1					
ANR	1334864	Identifier	c		1334791	1					
ANR	1334865	ReturnType	static void		1334791	1					
ANR	1334866	Identifier	pscompact_buffer		1334791	2					
ANR	1334867	ParameterList	"pscompstate * psc , int c"		1334791	3					
ANR	1334868	Parameter	pscompstate * psc	605:29:18098:18113	1334791	0	True				
ANR	1334869	ParameterType	pscompstate *		1334791	0					
ANR	1334870	Identifier	psc		1334791	1					
ANR	1334871	Parameter	int c	605:47:18116:18120	1334791	1	True				
ANR	1334872	ParameterType	int		1334791	0					
ANR	1334873	Identifier	c		1334791	1					
ANR	1334874	CFGEntryNode	ENTRY		1334791		True				
ANR	1334875	CFGExitNode	EXIT		1334791		True				
ANR	1334876	Symbol	psc		1334791						
ANR	1334877	Symbol	* psc -> bufferin		1334791						
ANR	1334878	Symbol	c		1334791						
ANR	1334879	Symbol	NULL		1334791						
ANR	1334880	Symbol	* * psc		1334791						
ANR	1334881	Symbol	psc -> inpos		1334791						
ANR	1334882	Symbol	psc -> inmax		1334791						
ANR	1334883	Symbol	psc -> bufferin		1334791						
ANR	1334884	Symbol	* psc		1334791						
ANR	1334885	Symbol	realloc		1334791						
ANR	1334886	Symbol	stderr		1334791						
ANR	1334887	Function	pscompact_bufferatstart	618:0:18429:18857							
ANR	1334888	FunctionDef	"pscompact_bufferatstart (pscompstate * psc , int c)"		1334887	0					
ANR	1334889	CompoundStatement		619:0:18490:18857	1334887	0					
ANR	1334890	IfStatement	if ( psc -> inpos == psc -> inmax )		1334887	0					
ANR	1334891	Condition	psc -> inpos == psc -> inmax	620:8:18500:18523	1334887	0	True				
ANR	1334892	EqualityExpression	psc -> inpos == psc -> inmax		1334887	0		==			
ANR	1334893	PtrMemberAccess	psc -> inpos		1334887	0					
ANR	1334894	Identifier	psc		1334887	0					
ANR	1334895	Identifier	inpos		1334887	1					
ANR	1334896	PtrMemberAccess	psc -> inmax		1334887	1					
ANR	1334897	Identifier	psc		1334887	0					
ANR	1334898	Identifier	inmax		1334887	1					
ANR	1334899	CompoundStatement		2:34:35:35	1334887	1					
ANR	1334900	ExpressionStatement	psc -> inmax *= 2	621:8:18536:18551	1334887	0	True				
ANR	1334901	AssignmentExpression	psc -> inmax *= 2		1334887	0		*=			
ANR	1334902	PtrMemberAccess	psc -> inmax		1334887	0					
ANR	1334903	Identifier	psc		1334887	0					
ANR	1334904	Identifier	inmax		1334887	1					
ANR	1334905	PrimaryExpression	2		1334887	1					
ANR	1334906	ExpressionStatement	"psc -> bufferin = realloc ( psc -> bufferin , psc -> inmax * 2 )"	622:8:18561:18615	1334887	1	True				
ANR	1334907	AssignmentExpression	"psc -> bufferin = realloc ( psc -> bufferin , psc -> inmax * 2 )"		1334887	0		=			
ANR	1334908	PtrMemberAccess	psc -> bufferin		1334887	0					
ANR	1334909	Identifier	psc		1334887	0					
ANR	1334910	Identifier	bufferin		1334887	1					
ANR	1334911	CallExpression	"realloc ( psc -> bufferin , psc -> inmax * 2 )"		1334887	1					
ANR	1334912	Callee	realloc		1334887	0					
ANR	1334913	Identifier	realloc		1334887	0					
ANR	1334914	ArgumentList	psc -> bufferin		1334887	1					
ANR	1334915	Argument	psc -> bufferin		1334887	0					
ANR	1334916	PtrMemberAccess	psc -> bufferin		1334887	0					
ANR	1334917	Identifier	psc		1334887	0					
ANR	1334918	Identifier	bufferin		1334887	1					
ANR	1334919	Argument	psc -> inmax * 2		1334887	1					
ANR	1334920	MultiplicativeExpression	psc -> inmax * 2		1334887	0		*			
ANR	1334921	PtrMemberAccess	psc -> inmax		1334887	0					
ANR	1334922	Identifier	psc		1334887	0					
ANR	1334923	Identifier	inmax		1334887	1					
ANR	1334924	PrimaryExpression	2		1334887	1					
ANR	1334925	IfStatement	if ( psc -> bufferin == NULL )		1334887	2					
ANR	1334926	Condition	psc -> bufferin == NULL	623:12:18629:18649	1334887	0	True				
ANR	1334927	EqualityExpression	psc -> bufferin == NULL		1334887	0		==			
ANR	1334928	PtrMemberAccess	psc -> bufferin		1334887	0					
ANR	1334929	Identifier	psc		1334887	0					
ANR	1334930	Identifier	bufferin		1334887	1					
ANR	1334931	Identifier	NULL		1334887	1					
ANR	1334932	CompoundStatement		5:35:161:161	1334887	1					
ANR	1334933	ExpressionStatement	"fprintf ( stderr , ""Realloc failed in pscompaction\\n"" )"	624:12:18666:18717	1334887	0	True				
ANR	1334934	CallExpression	"fprintf ( stderr , ""Realloc failed in pscompaction\\n"" )"		1334887	0					
ANR	1334935	Callee	fprintf		1334887	0					
ANR	1334936	Identifier	fprintf		1334887	0					
ANR	1334937	ArgumentList	stderr		1334887	1					
ANR	1334938	Argument	stderr		1334887	0					
ANR	1334939	Identifier	stderr		1334887	0					
ANR	1334940	Argument	"""Realloc failed in pscompaction\\n"""		1334887	1					
ANR	1334941	PrimaryExpression	"""Realloc failed in pscompaction\\n"""		1334887	0					
ANR	1334942	ExpressionStatement	exit ( 1 )	625:12:18731:18738	1334887	1	True				
ANR	1334943	CallExpression	exit ( 1 )		1334887	0					
ANR	1334944	Callee	exit		1334887	0					
ANR	1334945	Identifier	exit		1334887	0					
ANR	1334946	ArgumentList	1		1334887	1					
ANR	1334947	Argument	1		1334887	0					
ANR	1334948	PrimaryExpression	1		1334887	0					
ANR	1334949	ExpressionStatement	"memmove ( psc -> bufferin + 1 , psc -> bufferin , psc -> inpos )"	628:4:18760:18811	1334887	1	True				
ANR	1334950	CallExpression	"memmove ( psc -> bufferin + 1 , psc -> bufferin , psc -> inpos )"		1334887	0					
ANR	1334951	Callee	memmove		1334887	0					
ANR	1334952	Identifier	memmove		1334887	0					
ANR	1334953	ArgumentList	psc -> bufferin + 1		1334887	1					
ANR	1334954	Argument	psc -> bufferin + 1		1334887	0					
ANR	1334955	AdditiveExpression	psc -> bufferin + 1		1334887	0		+			
ANR	1334956	PtrMemberAccess	psc -> bufferin		1334887	0					
ANR	1334957	Identifier	psc		1334887	0					
ANR	1334958	Identifier	bufferin		1334887	1					
ANR	1334959	PrimaryExpression	1		1334887	1					
ANR	1334960	Argument	psc -> bufferin		1334887	1					
ANR	1334961	PtrMemberAccess	psc -> bufferin		1334887	0					
ANR	1334962	Identifier	psc		1334887	0					
ANR	1334963	Identifier	bufferin		1334887	1					
ANR	1334964	Argument	psc -> inpos		1334887	2					
ANR	1334965	PtrMemberAccess	psc -> inpos		1334887	0					
ANR	1334966	Identifier	psc		1334887	0					
ANR	1334967	Identifier	inpos		1334887	1					
ANR	1334968	ExpressionStatement	psc -> inpos ++	629:4:18817:18829	1334887	2	True				
ANR	1334969	PostIncDecOperationExpression	psc -> inpos ++		1334887	0					
ANR	1334970	PtrMemberAccess	psc -> inpos		1334887	0					
ANR	1334971	Identifier	psc		1334887	0					
ANR	1334972	Identifier	inpos		1334887	1					
ANR	1334973	IncDec	++		1334887	1					
ANR	1334974	ExpressionStatement	psc -> bufferin [ 0 ] = c	630:4:18835:18855	1334887	3	True				
ANR	1334975	AssignmentExpression	psc -> bufferin [ 0 ] = c		1334887	0		=			
ANR	1334976	ArrayIndexing	psc -> bufferin [ 0 ]		1334887	0					
ANR	1334977	PtrMemberAccess	psc -> bufferin		1334887	0					
ANR	1334978	Identifier	psc		1334887	0					
ANR	1334979	Identifier	bufferin		1334887	1					
ANR	1334980	PrimaryExpression	0		1334887	1					
ANR	1334981	Identifier	c		1334887	1					
ANR	1334982	ReturnType	static void		1334887	1					
ANR	1334983	Identifier	pscompact_bufferatstart		1334887	2					
ANR	1334984	ParameterList	"pscompstate * psc , int c"		1334887	3					
ANR	1334985	Parameter	pscompstate * psc	618:36:18465:18480	1334887	0	True				
ANR	1334986	ParameterType	pscompstate *		1334887	0					
ANR	1334987	Identifier	psc		1334887	1					
ANR	1334988	Parameter	int c	618:54:18483:18487	1334887	1	True				
ANR	1334989	ParameterType	int		1334887	0					
ANR	1334990	Identifier	c		1334887	1					
ANR	1334991	CFGEntryNode	ENTRY		1334887		True				
ANR	1334992	CFGExitNode	EXIT		1334887		True				
ANR	1334993	Symbol	psc		1334887						
ANR	1334994	Symbol	* psc -> bufferin		1334887						
ANR	1334995	Symbol	c		1334887						
ANR	1334996	Symbol	NULL		1334887						
ANR	1334997	Symbol	* * psc		1334887						
ANR	1334998	Symbol	psc -> inpos		1334887						
ANR	1334999	Symbol	psc -> inmax		1334887						
ANR	1335000	Symbol	psc -> bufferin		1334887						
ANR	1335001	Symbol	* psc		1334887						
ANR	1335002	Symbol	realloc		1334887						
ANR	1335003	Symbol	stderr		1334887						
ANR	1335004	Function	pscompact_copyinout	633:0:18860:19343							
ANR	1335005	FunctionDef	pscompact_copyinout (pscompstate * psc)		1335004	0					
ANR	1335006	CompoundStatement		634:0:18910:19343	1335004	0					
ANR	1335007	IfStatement	if ( psc -> outmax < psc -> inpos )		1335004	0					
ANR	1335008	Condition	psc -> outmax < psc -> inpos	635:8:18920:18943	1335004	0	True				
ANR	1335009	RelationalExpression	psc -> outmax < psc -> inpos		1335004	0		<			
ANR	1335010	PtrMemberAccess	psc -> outmax		1335004	0					
ANR	1335011	Identifier	psc		1335004	0					
ANR	1335012	Identifier	outmax		1335004	1					
ANR	1335013	PtrMemberAccess	psc -> inpos		1335004	1					
ANR	1335014	Identifier	psc		1335004	0					
ANR	1335015	Identifier	inpos		1335004	1					
ANR	1335016	CompoundStatement		2:34:35:35	1335004	1					
ANR	1335017	ExpressionStatement	psc -> outmax = psc -> inmax	636:8:18956:18980	1335004	0	True				
ANR	1335018	AssignmentExpression	psc -> outmax = psc -> inmax		1335004	0		=			
ANR	1335019	PtrMemberAccess	psc -> outmax		1335004	0					
ANR	1335020	Identifier	psc		1335004	0					
ANR	1335021	Identifier	outmax		1335004	1					
ANR	1335022	PtrMemberAccess	psc -> inmax		1335004	1					
ANR	1335023	Identifier	psc		1335004	0					
ANR	1335024	Identifier	inmax		1335004	1					
ANR	1335025	ExpressionStatement	"psc -> bufferout = realloc ( psc -> bufferout , psc -> outmax )"	637:8:18990:19043	1335004	1	True				
ANR	1335026	AssignmentExpression	"psc -> bufferout = realloc ( psc -> bufferout , psc -> outmax )"		1335004	0		=			
ANR	1335027	PtrMemberAccess	psc -> bufferout		1335004	0					
ANR	1335028	Identifier	psc		1335004	0					
ANR	1335029	Identifier	bufferout		1335004	1					
ANR	1335030	CallExpression	"realloc ( psc -> bufferout , psc -> outmax )"		1335004	1					
ANR	1335031	Callee	realloc		1335004	0					
ANR	1335032	Identifier	realloc		1335004	0					
ANR	1335033	ArgumentList	psc -> bufferout		1335004	1					
ANR	1335034	Argument	psc -> bufferout		1335004	0					
ANR	1335035	PtrMemberAccess	psc -> bufferout		1335004	0					
ANR	1335036	Identifier	psc		1335004	0					
ANR	1335037	Identifier	bufferout		1335004	1					
ANR	1335038	Argument	psc -> outmax		1335004	1					
ANR	1335039	PtrMemberAccess	psc -> outmax		1335004	0					
ANR	1335040	Identifier	psc		1335004	0					
ANR	1335041	Identifier	outmax		1335004	1					
ANR	1335042	IfStatement	if ( psc -> bufferout == NULL )		1335004	2					
ANR	1335043	Condition	psc -> bufferout == NULL	638:12:19057:19078	1335004	0	True				
ANR	1335044	EqualityExpression	psc -> bufferout == NULL		1335004	0		==			
ANR	1335045	PtrMemberAccess	psc -> bufferout		1335004	0					
ANR	1335046	Identifier	psc		1335004	0					
ANR	1335047	Identifier	bufferout		1335004	1					
ANR	1335048	Identifier	NULL		1335004	1					
ANR	1335049	CompoundStatement		5:36:170:170	1335004	1					
ANR	1335050	ExpressionStatement	"fprintf ( stderr , ""Realloc failed in pscompaction\\n"" )"	639:12:19095:19146	1335004	0	True				
ANR	1335051	CallExpression	"fprintf ( stderr , ""Realloc failed in pscompaction\\n"" )"		1335004	0					
ANR	1335052	Callee	fprintf		1335004	0					
ANR	1335053	Identifier	fprintf		1335004	0					
ANR	1335054	ArgumentList	stderr		1335004	1					
ANR	1335055	Argument	stderr		1335004	0					
ANR	1335056	Identifier	stderr		1335004	0					
ANR	1335057	Argument	"""Realloc failed in pscompaction\\n"""		1335004	1					
ANR	1335058	PrimaryExpression	"""Realloc failed in pscompaction\\n"""		1335004	0					
ANR	1335059	ExpressionStatement	exit ( 1 )	640:12:19160:19167	1335004	1	True				
ANR	1335060	CallExpression	exit ( 1 )		1335004	0					
ANR	1335061	Callee	exit		1335004	0					
ANR	1335062	Identifier	exit		1335004	0					
ANR	1335063	ArgumentList	1		1335004	1					
ANR	1335064	Argument	1		1335004	0					
ANR	1335065	PrimaryExpression	1		1335004	0					
ANR	1335066	ExpressionStatement	"memcpy ( psc -> bufferout , psc -> bufferin , psc -> inpos )"	643:4:19189:19238	1335004	1	True				
ANR	1335067	CallExpression	"memcpy ( psc -> bufferout , psc -> bufferin , psc -> inpos )"		1335004	0					
ANR	1335068	Callee	memcpy		1335004	0					
ANR	1335069	Identifier	memcpy		1335004	0					
ANR	1335070	ArgumentList	psc -> bufferout		1335004	1					
ANR	1335071	Argument	psc -> bufferout		1335004	0					
ANR	1335072	PtrMemberAccess	psc -> bufferout		1335004	0					
ANR	1335073	Identifier	psc		1335004	0					
ANR	1335074	Identifier	bufferout		1335004	1					
ANR	1335075	Argument	psc -> bufferin		1335004	1					
ANR	1335076	PtrMemberAccess	psc -> bufferin		1335004	0					
ANR	1335077	Identifier	psc		1335004	0					
ANR	1335078	Identifier	bufferin		1335004	1					
ANR	1335079	Argument	psc -> inpos		1335004	2					
ANR	1335080	PtrMemberAccess	psc -> inpos		1335004	0					
ANR	1335081	Identifier	psc		1335004	0					
ANR	1335082	Identifier	inpos		1335004	1					
ANR	1335083	ExpressionStatement	psc -> outpos = 0	644:4:19244:19259	1335004	2	True				
ANR	1335084	AssignmentExpression	psc -> outpos = 0		1335004	0		=			
ANR	1335085	PtrMemberAccess	psc -> outpos		1335004	0					
ANR	1335086	Identifier	psc		1335004	0					
ANR	1335087	Identifier	outpos		1335004	1					
ANR	1335088	PrimaryExpression	0		1335004	1					
ANR	1335089	ExpressionStatement	psc -> outend = psc -> inpos	645:4:19265:19289	1335004	3	True				
ANR	1335090	AssignmentExpression	psc -> outend = psc -> inpos		1335004	0		=			
ANR	1335091	PtrMemberAccess	psc -> outend		1335004	0					
ANR	1335092	Identifier	psc		1335004	0					
ANR	1335093	Identifier	outend		1335004	1					
ANR	1335094	PtrMemberAccess	psc -> inpos		1335004	1					
ANR	1335095	Identifier	psc		1335004	0					
ANR	1335096	Identifier	inpos		1335004	1					
ANR	1335097	ExpressionStatement	psc -> state = PSC_BufferOut	646:4:19295:19321	1335004	4	True				
ANR	1335098	AssignmentExpression	psc -> state = PSC_BufferOut		1335004	0		=			
ANR	1335099	PtrMemberAccess	psc -> state		1335004	0					
ANR	1335100	Identifier	psc		1335004	0					
ANR	1335101	Identifier	state		1335004	1					
ANR	1335102	Identifier	PSC_BufferOut		1335004	1					
ANR	1335103	ExpressionStatement	psc -> inpos = 0	647:4:19327:19341	1335004	5	True				
ANR	1335104	AssignmentExpression	psc -> inpos = 0		1335004	0		=			
ANR	1335105	PtrMemberAccess	psc -> inpos		1335004	0					
ANR	1335106	Identifier	psc		1335004	0					
ANR	1335107	Identifier	inpos		1335004	1					
ANR	1335108	PrimaryExpression	0		1335004	1					
ANR	1335109	ReturnType	static void		1335004	1					
ANR	1335110	Identifier	pscompact_copyinout		1335004	2					
ANR	1335111	ParameterList	pscompstate * psc		1335004	3					
ANR	1335112	Parameter	pscompstate * psc	633:32:18892:18907	1335004	0	True				
ANR	1335113	ParameterType	pscompstate *		1335004	0					
ANR	1335114	Identifier	psc		1335004	1					
ANR	1335115	CFGEntryNode	ENTRY		1335004		True				
ANR	1335116	CFGExitNode	EXIT		1335004		True				
ANR	1335117	Symbol	psc		1335004						
ANR	1335118	Symbol	psc -> bufferout		1335004						
ANR	1335119	Symbol	NULL		1335004						
ANR	1335120	Symbol	psc -> state		1335004						
ANR	1335121	Symbol	psc -> inmax		1335004						
ANR	1335122	Symbol	psc -> bufferin		1335004						
ANR	1335123	Symbol	* psc		1335004						
ANR	1335124	Symbol	realloc		1335004						
ANR	1335125	Symbol	stderr		1335004						
ANR	1335126	Symbol	psc -> outmax		1335004						
ANR	1335127	Symbol	PSC_BufferOut		1335004						
ANR	1335128	Symbol	psc -> outend		1335004						
ANR	1335129	Symbol	psc -> inpos		1335004						
ANR	1335130	Symbol	psc -> outpos		1335004						
ANR	1335131	Function	pscompact_copyinout_bin	650:0:19346:19455							
ANR	1335132	FunctionDef	pscompact_copyinout_bin (pscompstate * psc)		1335131	0					
ANR	1335133	CompoundStatement		651:0:19400:19455	1335131	0					
ANR	1335134	ExpressionStatement	pscompact_copyinout ( psc )	652:4:19406:19430	1335131	0	True				
ANR	1335135	CallExpression	pscompact_copyinout ( psc )		1335131	0					
ANR	1335136	Callee	pscompact_copyinout		1335131	0					
ANR	1335137	Identifier	pscompact_copyinout		1335131	0					
ANR	1335138	ArgumentList	psc		1335131	1					
ANR	1335139	Argument	psc		1335131	0					
ANR	1335140	Identifier	psc		1335131	0					
ANR	1335141	ExpressionStatement	psc -> noescape = 1	653:4:19436:19453	1335131	1	True				
ANR	1335142	AssignmentExpression	psc -> noescape = 1		1335131	0		=			
ANR	1335143	PtrMemberAccess	psc -> noescape		1335131	0					
ANR	1335144	Identifier	psc		1335131	0					
ANR	1335145	Identifier	noescape		1335131	1					
ANR	1335146	PrimaryExpression	1		1335131	1					
ANR	1335147	ReturnType	static void		1335131	1					
ANR	1335148	Identifier	pscompact_copyinout_bin		1335131	2					
ANR	1335149	ParameterList	pscompstate * psc		1335131	3					
ANR	1335150	Parameter	pscompstate * psc	650:36:19382:19397	1335131	0	True				
ANR	1335151	ParameterType	pscompstate *		1335131	0					
ANR	1335152	Identifier	psc		1335131	1					
ANR	1335153	CFGEntryNode	ENTRY		1335131		True				
ANR	1335154	CFGExitNode	EXIT		1335131		True				
ANR	1335155	Symbol	psc		1335131						
ANR	1335156	Symbol	* psc		1335131						
ANR	1335157	Symbol	psc -> noescape		1335131						
ANR	1335158	Function	pscompact_hex2ascii	656:0:19458:20709							
ANR	1335159	FunctionDef	pscompact_hex2ascii (pscompstate * psc)		1335158	0					
ANR	1335160	CompoundStatement		657:0:19508:20709	1335158	0					
ANR	1335161	IdentifierDeclStatement	int i = 0 ;	658:4:19514:19523	1335158	0	True				
ANR	1335162	IdentifierDecl	i = 0		1335158	0					
ANR	1335163	IdentifierDeclType	int		1335158	0					
ANR	1335164	Identifier	i		1335158	1					
ANR	1335165	AssignmentExpression	i = 0		1335158	2		=			
ANR	1335166	Identifier	i		1335158	0					
ANR	1335167	PrimaryExpression	0		1335158	1					
ANR	1335168	IdentifierDeclStatement	int o = 0 ;	659:4:19529:19538	1335158	1	True				
ANR	1335169	IdentifierDecl	o = 0		1335158	0					
ANR	1335170	IdentifierDeclType	int		1335158	0					
ANR	1335171	Identifier	o		1335158	1					
ANR	1335172	AssignmentExpression	o = 0		1335158	2		=			
ANR	1335173	Identifier	o		1335158	0					
ANR	1335174	PrimaryExpression	0		1335158	1					
ANR	1335175	WhileStatement	while ( i < psc -> inpos )		1335158	2					
ANR	1335176	Condition	i < psc -> inpos	661:11:19552:19565	1335158	0	True				
ANR	1335177	RelationalExpression	i < psc -> inpos		1335158	0		<			
ANR	1335178	Identifier	i		1335158	0					
ANR	1335179	PtrMemberAccess	psc -> inpos		1335158	1					
ANR	1335180	Identifier	psc		1335158	0					
ANR	1335181	Identifier	inpos		1335158	1					
ANR	1335182	CompoundStatement		6:8:69:78	1335158	1					
ANR	1335183	IdentifierDeclStatement	int v = 0 ;	662:8:19578:19587	1335158	0	True				
ANR	1335184	IdentifierDecl	v = 0		1335158	0					
ANR	1335185	IdentifierDeclType	int		1335158	0					
ANR	1335186	Identifier	v		1335158	1					
ANR	1335187	AssignmentExpression	v = 0		1335158	2		=			
ANR	1335188	Identifier	v		1335158	0					
ANR	1335189	PrimaryExpression	0		1335158	1					
ANR	1335190	IfStatement	if ( ( psc -> bufferin [ i ] >= '0' ) && ( psc -> bufferin [ i ] <= '9' ) )		1335158	1					
ANR	1335191	Condition	( psc -> bufferin [ i ] >= '0' ) && ( psc -> bufferin [ i ] <= '9' )	664:12:19602:19655	1335158	0	True				
ANR	1335192	AndExpression	( psc -> bufferin [ i ] >= '0' ) && ( psc -> bufferin [ i ] <= '9' )		1335158	0		&&			
ANR	1335193	RelationalExpression	psc -> bufferin [ i ] >= '0'		1335158	0		>=			
ANR	1335194	ArrayIndexing	psc -> bufferin [ i ]		1335158	0					
ANR	1335195	PtrMemberAccess	psc -> bufferin		1335158	0					
ANR	1335196	Identifier	psc		1335158	0					
ANR	1335197	Identifier	bufferin		1335158	1					
ANR	1335198	Identifier	i		1335158	1					
ANR	1335199	PrimaryExpression	'0'		1335158	1					
ANR	1335200	RelationalExpression	psc -> bufferin [ i ] <= '9'		1335158	1		<=			
ANR	1335201	ArrayIndexing	psc -> bufferin [ i ]		1335158	0					
ANR	1335202	PtrMemberAccess	psc -> bufferin		1335158	0					
ANR	1335203	Identifier	psc		1335158	0					
ANR	1335204	Identifier	bufferin		1335158	1					
ANR	1335205	Identifier	i		1335158	1					
ANR	1335206	PrimaryExpression	'9'		1335158	1					
ANR	1335207	CompoundStatement		8:68:149:149	1335158	1					
ANR	1335208	ExpressionStatement	v = ( psc -> bufferin [ i ] - '0' ) << 4	665:12:19672:19703	1335158	0	True				
ANR	1335209	AssignmentExpression	v = ( psc -> bufferin [ i ] - '0' ) << 4		1335158	0		=			
ANR	1335210	Identifier	v		1335158	0					
ANR	1335211	ShiftExpression	( psc -> bufferin [ i ] - '0' ) << 4		1335158	1		<<			
ANR	1335212	AdditiveExpression	psc -> bufferin [ i ] - '0'		1335158	0		-			
ANR	1335213	ArrayIndexing	psc -> bufferin [ i ]		1335158	0					
ANR	1335214	PtrMemberAccess	psc -> bufferin		1335158	0					
ANR	1335215	Identifier	psc		1335158	0					
ANR	1335216	Identifier	bufferin		1335158	1					
ANR	1335217	Identifier	i		1335158	1					
ANR	1335218	PrimaryExpression	'0'		1335158	1					
ANR	1335219	PrimaryExpression	4		1335158	1					
ANR	1335220	ElseStatement	else		1335158	0					
ANR	1335221	IfStatement	if ( ( psc -> bufferin [ i ] >= 'a' ) && ( psc -> bufferin [ i ] <= 'f' ) )		1335158	0					
ANR	1335222	Condition	( psc -> bufferin [ i ] >= 'a' ) && ( psc -> bufferin [ i ] <= 'f' )	666:19:19724:19777	1335158	0	True				
ANR	1335223	AndExpression	( psc -> bufferin [ i ] >= 'a' ) && ( psc -> bufferin [ i ] <= 'f' )		1335158	0		&&			
ANR	1335224	RelationalExpression	psc -> bufferin [ i ] >= 'a'		1335158	0		>=			
ANR	1335225	ArrayIndexing	psc -> bufferin [ i ]		1335158	0					
ANR	1335226	PtrMemberAccess	psc -> bufferin		1335158	0					
ANR	1335227	Identifier	psc		1335158	0					
ANR	1335228	Identifier	bufferin		1335158	1					
ANR	1335229	Identifier	i		1335158	1					
ANR	1335230	PrimaryExpression	'a'		1335158	1					
ANR	1335231	RelationalExpression	psc -> bufferin [ i ] <= 'f'		1335158	1		<=			
ANR	1335232	ArrayIndexing	psc -> bufferin [ i ]		1335158	0					
ANR	1335233	PtrMemberAccess	psc -> bufferin		1335158	0					
ANR	1335234	Identifier	psc		1335158	0					
ANR	1335235	Identifier	bufferin		1335158	1					
ANR	1335236	Identifier	i		1335158	1					
ANR	1335237	PrimaryExpression	'f'		1335158	1					
ANR	1335238	CompoundStatement		10:75:271:271	1335158	1					
ANR	1335239	ExpressionStatement	v = ( psc -> bufferin [ i ] - 'a' + 10 ) << 4	667:12:19794:19830	1335158	0	True				
ANR	1335240	AssignmentExpression	v = ( psc -> bufferin [ i ] - 'a' + 10 ) << 4		1335158	0		=			
ANR	1335241	Identifier	v		1335158	0					
ANR	1335242	ShiftExpression	( psc -> bufferin [ i ] - 'a' + 10 ) << 4		1335158	1		<<			
ANR	1335243	AdditiveExpression	psc -> bufferin [ i ] - 'a' + 10		1335158	0		-			
ANR	1335244	ArrayIndexing	psc -> bufferin [ i ]		1335158	0					
ANR	1335245	PtrMemberAccess	psc -> bufferin		1335158	0					
ANR	1335246	Identifier	psc		1335158	0					
ANR	1335247	Identifier	bufferin		1335158	1					
ANR	1335248	Identifier	i		1335158	1					
ANR	1335249	AdditiveExpression	'a' + 10		1335158	1		+			
ANR	1335250	PrimaryExpression	'a'		1335158	0					
ANR	1335251	PrimaryExpression	10		1335158	1					
ANR	1335252	PrimaryExpression	4		1335158	1					
ANR	1335253	ElseStatement	else		1335158	0					
ANR	1335254	IfStatement	if ( ( psc -> bufferin [ i ] >= 'A' ) && ( psc -> bufferin [ i ] <= 'F' ) )		1335158	0					
ANR	1335255	Condition	( psc -> bufferin [ i ] >= 'A' ) && ( psc -> bufferin [ i ] <= 'F' )	668:19:19851:19904	1335158	0	True				
ANR	1335256	AndExpression	( psc -> bufferin [ i ] >= 'A' ) && ( psc -> bufferin [ i ] <= 'F' )		1335158	0		&&			
ANR	1335257	RelationalExpression	psc -> bufferin [ i ] >= 'A'		1335158	0		>=			
ANR	1335258	ArrayIndexing	psc -> bufferin [ i ]		1335158	0					
ANR	1335259	PtrMemberAccess	psc -> bufferin		1335158	0					
ANR	1335260	Identifier	psc		1335158	0					
ANR	1335261	Identifier	bufferin		1335158	1					
ANR	1335262	Identifier	i		1335158	1					
ANR	1335263	PrimaryExpression	'A'		1335158	1					
ANR	1335264	RelationalExpression	psc -> bufferin [ i ] <= 'F'		1335158	1		<=			
ANR	1335265	ArrayIndexing	psc -> bufferin [ i ]		1335158	0					
ANR	1335266	PtrMemberAccess	psc -> bufferin		1335158	0					
ANR	1335267	Identifier	psc		1335158	0					
ANR	1335268	Identifier	bufferin		1335158	1					
ANR	1335269	Identifier	i		1335158	1					
ANR	1335270	PrimaryExpression	'F'		1335158	1					
ANR	1335271	CompoundStatement		12:75:398:398	1335158	1					
ANR	1335272	ExpressionStatement	v = ( psc -> bufferin [ i ] - 'A' + 10 ) << 4	669:12:19921:19957	1335158	0	True				
ANR	1335273	AssignmentExpression	v = ( psc -> bufferin [ i ] - 'A' + 10 ) << 4		1335158	0		=			
ANR	1335274	Identifier	v		1335158	0					
ANR	1335275	ShiftExpression	( psc -> bufferin [ i ] - 'A' + 10 ) << 4		1335158	1		<<			
ANR	1335276	AdditiveExpression	psc -> bufferin [ i ] - 'A' + 10		1335158	0		-			
ANR	1335277	ArrayIndexing	psc -> bufferin [ i ]		1335158	0					
ANR	1335278	PtrMemberAccess	psc -> bufferin		1335158	0					
ANR	1335279	Identifier	psc		1335158	0					
ANR	1335280	Identifier	bufferin		1335158	1					
ANR	1335281	Identifier	i		1335158	1					
ANR	1335282	AdditiveExpression	'A' + 10		1335158	1		+			
ANR	1335283	PrimaryExpression	'A'		1335158	0					
ANR	1335284	PrimaryExpression	10		1335158	1					
ANR	1335285	PrimaryExpression	4		1335158	1					
ANR	1335286	ElseStatement	else		1335158	0					
ANR	1335287	CompoundStatement		14:15:465:465	1335158	0					
ANR	1335288	ExpressionStatement	"fprintf ( stderr , ""Malformed hexstring in pscompaction!\\n"" )"	671:12:19988:20045	1335158	0	True				
ANR	1335289	CallExpression	"fprintf ( stderr , ""Malformed hexstring in pscompaction!\\n"" )"		1335158	0					
ANR	1335290	Callee	fprintf		1335158	0					
ANR	1335291	Identifier	fprintf		1335158	0					
ANR	1335292	ArgumentList	stderr		1335158	1					
ANR	1335293	Argument	stderr		1335158	0					
ANR	1335294	Identifier	stderr		1335158	0					
ANR	1335295	Argument	"""Malformed hexstring in pscompaction!\\n"""		1335158	1					
ANR	1335296	PrimaryExpression	"""Malformed hexstring in pscompaction!\\n"""		1335158	0					
ANR	1335297	ExpressionStatement	exit ( 1 )	672:12:20059:20066	1335158	1	True				
ANR	1335298	CallExpression	exit ( 1 )		1335158	0					
ANR	1335299	Callee	exit		1335158	0					
ANR	1335300	Identifier	exit		1335158	0					
ANR	1335301	ArgumentList	1		1335158	1					
ANR	1335302	Argument	1		1335158	0					
ANR	1335303	PrimaryExpression	1		1335158	0					
ANR	1335304	ExpressionStatement	i ++	674:8:20086:20089	1335158	2	True				
ANR	1335305	PostIncDecOperationExpression	i ++		1335158	0					
ANR	1335306	Identifier	i		1335158	0					
ANR	1335307	IncDec	++		1335158	1					
ANR	1335308	IfStatement	if ( i == psc -> inpos )		1335158	3					
ANR	1335309	Condition	i == psc -> inpos	676:12:20104:20118	1335158	0	True				
ANR	1335310	EqualityExpression	i == psc -> inpos		1335158	0		==			
ANR	1335311	Identifier	i		1335158	0					
ANR	1335312	PtrMemberAccess	psc -> inpos		1335158	1					
ANR	1335313	Identifier	psc		1335158	0					
ANR	1335314	Identifier	inpos		1335158	1					
ANR	1335315	CompoundStatement		20:29:612:612	1335158	1					
ANR	1335316	ElseStatement	else		1335158	0					
ANR	1335317	IfStatement	if ( ( psc -> bufferin [ i ] >= '0' ) && ( psc -> bufferin [ i ] <= '9' ) )		1335158	0					
ANR	1335318	Condition	( psc -> bufferin [ i ] >= '0' ) && ( psc -> bufferin [ i ] <= '9' )	678:19:20174:20227	1335158	0	True				
ANR	1335319	AndExpression	( psc -> bufferin [ i ] >= '0' ) && ( psc -> bufferin [ i ] <= '9' )		1335158	0		&&			
ANR	1335320	RelationalExpression	psc -> bufferin [ i ] >= '0'		1335158	0		>=			
ANR	1335321	ArrayIndexing	psc -> bufferin [ i ]		1335158	0					
ANR	1335322	PtrMemberAccess	psc -> bufferin		1335158	0					
ANR	1335323	Identifier	psc		1335158	0					
ANR	1335324	Identifier	bufferin		1335158	1					
ANR	1335325	Identifier	i		1335158	1					
ANR	1335326	PrimaryExpression	'0'		1335158	1					
ANR	1335327	RelationalExpression	psc -> bufferin [ i ] <= '9'		1335158	1		<=			
ANR	1335328	ArrayIndexing	psc -> bufferin [ i ]		1335158	0					
ANR	1335329	PtrMemberAccess	psc -> bufferin		1335158	0					
ANR	1335330	Identifier	psc		1335158	0					
ANR	1335331	Identifier	bufferin		1335158	1					
ANR	1335332	Identifier	i		1335158	1					
ANR	1335333	PrimaryExpression	'9'		1335158	1					
ANR	1335334	CompoundStatement		22:75:721:721	1335158	1					
ANR	1335335	ExpressionStatement	v += psc -> bufferin [ i ] - '0'	679:12:20244:20271	1335158	0	True				
ANR	1335336	AssignmentExpression	v += psc -> bufferin [ i ] - '0'		1335158	0		+=			
ANR	1335337	Identifier	v		1335158	0					
ANR	1335338	AdditiveExpression	psc -> bufferin [ i ] - '0'		1335158	1		-			
ANR	1335339	ArrayIndexing	psc -> bufferin [ i ]		1335158	0					
ANR	1335340	PtrMemberAccess	psc -> bufferin		1335158	0					
ANR	1335341	Identifier	psc		1335158	0					
ANR	1335342	Identifier	bufferin		1335158	1					
ANR	1335343	Identifier	i		1335158	1					
ANR	1335344	PrimaryExpression	'0'		1335158	1					
ANR	1335345	ElseStatement	else		1335158	0					
ANR	1335346	IfStatement	if ( ( psc -> bufferin [ i ] >= 'a' ) && ( psc -> bufferin [ i ] <= 'f' ) )		1335158	0					
ANR	1335347	Condition	( psc -> bufferin [ i ] >= 'a' ) && ( psc -> bufferin [ i ] <= 'f' )	680:19:20292:20345	1335158	0	True				
ANR	1335348	AndExpression	( psc -> bufferin [ i ] >= 'a' ) && ( psc -> bufferin [ i ] <= 'f' )		1335158	0		&&			
ANR	1335349	RelationalExpression	psc -> bufferin [ i ] >= 'a'		1335158	0		>=			
ANR	1335350	ArrayIndexing	psc -> bufferin [ i ]		1335158	0					
ANR	1335351	PtrMemberAccess	psc -> bufferin		1335158	0					
ANR	1335352	Identifier	psc		1335158	0					
ANR	1335353	Identifier	bufferin		1335158	1					
ANR	1335354	Identifier	i		1335158	1					
ANR	1335355	PrimaryExpression	'a'		1335158	1					
ANR	1335356	RelationalExpression	psc -> bufferin [ i ] <= 'f'		1335158	1		<=			
ANR	1335357	ArrayIndexing	psc -> bufferin [ i ]		1335158	0					
ANR	1335358	PtrMemberAccess	psc -> bufferin		1335158	0					
ANR	1335359	Identifier	psc		1335158	0					
ANR	1335360	Identifier	bufferin		1335158	1					
ANR	1335361	Identifier	i		1335158	1					
ANR	1335362	PrimaryExpression	'f'		1335158	1					
ANR	1335363	CompoundStatement		24:75:839:839	1335158	1					
ANR	1335364	ExpressionStatement	v += psc -> bufferin [ i ] - 'a' + 10	681:12:20362:20394	1335158	0	True				
ANR	1335365	AssignmentExpression	v += psc -> bufferin [ i ] - 'a' + 10		1335158	0		+=			
ANR	1335366	Identifier	v		1335158	0					
ANR	1335367	AdditiveExpression	psc -> bufferin [ i ] - 'a' + 10		1335158	1		-			
ANR	1335368	ArrayIndexing	psc -> bufferin [ i ]		1335158	0					
ANR	1335369	PtrMemberAccess	psc -> bufferin		1335158	0					
ANR	1335370	Identifier	psc		1335158	0					
ANR	1335371	Identifier	bufferin		1335158	1					
ANR	1335372	Identifier	i		1335158	1					
ANR	1335373	AdditiveExpression	'a' + 10		1335158	1		+			
ANR	1335374	PrimaryExpression	'a'		1335158	0					
ANR	1335375	PrimaryExpression	10		1335158	1					
ANR	1335376	ElseStatement	else		1335158	0					
ANR	1335377	IfStatement	if ( ( psc -> bufferin [ i ] >= 'A' ) && ( psc -> bufferin [ i ] <= 'F' ) )		1335158	0					
ANR	1335378	Condition	( psc -> bufferin [ i ] >= 'A' ) && ( psc -> bufferin [ i ] <= 'F' )	682:19:20415:20468	1335158	0	True				
ANR	1335379	AndExpression	( psc -> bufferin [ i ] >= 'A' ) && ( psc -> bufferin [ i ] <= 'F' )		1335158	0		&&			
ANR	1335380	RelationalExpression	psc -> bufferin [ i ] >= 'A'		1335158	0		>=			
ANR	1335381	ArrayIndexing	psc -> bufferin [ i ]		1335158	0					
ANR	1335382	PtrMemberAccess	psc -> bufferin		1335158	0					
ANR	1335383	Identifier	psc		1335158	0					
ANR	1335384	Identifier	bufferin		1335158	1					
ANR	1335385	Identifier	i		1335158	1					
ANR	1335386	PrimaryExpression	'A'		1335158	1					
ANR	1335387	RelationalExpression	psc -> bufferin [ i ] <= 'F'		1335158	1		<=			
ANR	1335388	ArrayIndexing	psc -> bufferin [ i ]		1335158	0					
ANR	1335389	PtrMemberAccess	psc -> bufferin		1335158	0					
ANR	1335390	Identifier	psc		1335158	0					
ANR	1335391	Identifier	bufferin		1335158	1					
ANR	1335392	Identifier	i		1335158	1					
ANR	1335393	PrimaryExpression	'F'		1335158	1					
ANR	1335394	CompoundStatement		26:75:962:962	1335158	1					
ANR	1335395	ExpressionStatement	v += psc -> bufferin [ i ] - 'A' + 10	683:12:20485:20517	1335158	0	True				
ANR	1335396	AssignmentExpression	v += psc -> bufferin [ i ] - 'A' + 10		1335158	0		+=			
ANR	1335397	Identifier	v		1335158	0					
ANR	1335398	AdditiveExpression	psc -> bufferin [ i ] - 'A' + 10		1335158	1		-			
ANR	1335399	ArrayIndexing	psc -> bufferin [ i ]		1335158	0					
ANR	1335400	PtrMemberAccess	psc -> bufferin		1335158	0					
ANR	1335401	Identifier	psc		1335158	0					
ANR	1335402	Identifier	bufferin		1335158	1					
ANR	1335403	Identifier	i		1335158	1					
ANR	1335404	AdditiveExpression	'A' + 10		1335158	1		+			
ANR	1335405	PrimaryExpression	'A'		1335158	0					
ANR	1335406	PrimaryExpression	10		1335158	1					
ANR	1335407	ElseStatement	else		1335158	0					
ANR	1335408	CompoundStatement		28:15:1025:1025	1335158	0					
ANR	1335409	ExpressionStatement	"fprintf ( stderr , ""Malformed hexstring in pscompaction!\\n"" )"	685:12:20548:20605	1335158	0	True				
ANR	1335410	CallExpression	"fprintf ( stderr , ""Malformed hexstring in pscompaction!\\n"" )"		1335158	0					
ANR	1335411	Callee	fprintf		1335158	0					
ANR	1335412	Identifier	fprintf		1335158	0					
ANR	1335413	ArgumentList	stderr		1335158	1					
ANR	1335414	Argument	stderr		1335158	0					
ANR	1335415	Identifier	stderr		1335158	0					
ANR	1335416	Argument	"""Malformed hexstring in pscompaction!\\n"""		1335158	1					
ANR	1335417	PrimaryExpression	"""Malformed hexstring in pscompaction!\\n"""		1335158	0					
ANR	1335418	ExpressionStatement	exit ( 1 )	686:12:20619:20626	1335158	1	True				
ANR	1335419	CallExpression	exit ( 1 )		1335158	0					
ANR	1335420	Callee	exit		1335158	0					
ANR	1335421	Identifier	exit		1335158	0					
ANR	1335422	ArgumentList	1		1335158	1					
ANR	1335423	Argument	1		1335158	0					
ANR	1335424	PrimaryExpression	1		1335158	0					
ANR	1335425	ExpressionStatement	i ++	688:8:20646:20649	1335158	4	True				
ANR	1335426	PostIncDecOperationExpression	i ++		1335158	0					
ANR	1335427	Identifier	i		1335158	0					
ANR	1335428	IncDec	++		1335158	1					
ANR	1335429	ExpressionStatement	psc -> bufferin [ o ++ ] = v	689:8:20659:20681	1335158	5	True				
ANR	1335430	AssignmentExpression	psc -> bufferin [ o ++ ] = v		1335158	0		=			
ANR	1335431	ArrayIndexing	psc -> bufferin [ o ++ ]		1335158	0					
ANR	1335432	PtrMemberAccess	psc -> bufferin		1335158	0					
ANR	1335433	Identifier	psc		1335158	0					
ANR	1335434	Identifier	bufferin		1335158	1					
ANR	1335435	PostIncDecOperationExpression	o ++		1335158	1					
ANR	1335436	Identifier	o		1335158	0					
ANR	1335437	IncDec	++		1335158	1					
ANR	1335438	Identifier	v		1335158	1					
ANR	1335439	ExpressionStatement	psc -> inpos = o	691:4:20693:20707	1335158	3	True				
ANR	1335440	AssignmentExpression	psc -> inpos = o		1335158	0		=			
ANR	1335441	PtrMemberAccess	psc -> inpos		1335158	0					
ANR	1335442	Identifier	psc		1335158	0					
ANR	1335443	Identifier	inpos		1335158	1					
ANR	1335444	Identifier	o		1335158	1					
ANR	1335445	ReturnType	static void		1335158	1					
ANR	1335446	Identifier	pscompact_hex2ascii		1335158	2					
ANR	1335447	ParameterList	pscompstate * psc		1335158	3					
ANR	1335448	Parameter	pscompstate * psc	656:32:19490:19505	1335158	0	True				
ANR	1335449	ParameterType	pscompstate *		1335158	0					
ANR	1335450	Identifier	psc		1335158	1					
ANR	1335451	CFGEntryNode	ENTRY		1335158		True				
ANR	1335452	CFGExitNode	EXIT		1335158		True				
ANR	1335453	Symbol	psc		1335158						
ANR	1335454	Symbol	* psc -> bufferin		1335158						
ANR	1335455	Symbol	* i		1335158						
ANR	1335456	Symbol	* * psc		1335158						
ANR	1335457	Symbol	psc -> inpos		1335158						
ANR	1335458	Symbol	v		1335158						
ANR	1335459	Symbol	psc -> bufferin		1335158						
ANR	1335460	Symbol	i		1335158						
ANR	1335461	Symbol	* psc		1335158						
ANR	1335462	Symbol	stderr		1335158						
ANR	1335463	Symbol	o		1335158						
ANR	1335464	DeclStmt									
ANR	1335465	Decl							const char	const char * [ ]	pscompact_names
ANR	1335466	Function	pscompact_isname	924:0:23889:24342							
ANR	1335467	FunctionDef	"pscompact_isname (pscompstate * psc , int * i)"		1335466	0					
ANR	1335468	CompoundStatement		925:0:23943:24342	1335466	0					
ANR	1335469	IdentifierDeclStatement	int off = 0 ;	926:4:23949:23960	1335466	0	True				
ANR	1335470	IdentifierDecl	off = 0		1335466	0					
ANR	1335471	IdentifierDeclType	int		1335466	0					
ANR	1335472	Identifier	off		1335466	1					
ANR	1335473	AssignmentExpression	off = 0		1335466	2		=			
ANR	1335474	Identifier	off		1335466	0					
ANR	1335475	PrimaryExpression	0		1335466	1					
ANR	1335476	IdentifierDeclStatement	int n ;	927:4:23966:23971	1335466	1	True				
ANR	1335477	IdentifierDecl	n		1335466	0					
ANR	1335478	IdentifierDeclType	int		1335466	0					
ANR	1335479	Identifier	n		1335466	1					
ANR	1335480	IfStatement	if ( psc -> bufferin [ 0 ] == '/' )		1335466	2					
ANR	1335481	Condition	psc -> bufferin [ 0 ] == '/'	929:8:23982:24004	1335466	0	True				
ANR	1335482	EqualityExpression	psc -> bufferin [ 0 ] == '/'		1335466	0		==			
ANR	1335483	ArrayIndexing	psc -> bufferin [ 0 ]		1335466	0					
ANR	1335484	PtrMemberAccess	psc -> bufferin		1335466	0					
ANR	1335485	Identifier	psc		1335466	0					
ANR	1335486	Identifier	bufferin		1335466	1					
ANR	1335487	PrimaryExpression	0		1335466	1					
ANR	1335488	PrimaryExpression	'/'		1335466	1					
ANR	1335489	ExpressionStatement	off = 1	930:8:24015:24022	1335466	1	True				
ANR	1335490	AssignmentExpression	off = 1		1335466	0		=			
ANR	1335491	Identifier	off		1335466	0					
ANR	1335492	PrimaryExpression	1		1335466	1					
ANR	1335493	ForStatement	for ( n = 0 ; n < sizeof ( pscompact_names ) / sizeof ( char * ) ; n ++ )		1335466	3					
ANR	1335494	ForInit	n = 0 ;	931:9:24033:24038	1335466	0	True				
ANR	1335495	AssignmentExpression	n = 0		1335466	0		=			
ANR	1335496	Identifier	n		1335466	0					
ANR	1335497	PrimaryExpression	0		1335466	1					
ANR	1335498	Condition	n < sizeof ( pscompact_names ) / sizeof ( char * )	931:16:24040:24081	1335466	1	True				
ANR	1335499	RelationalExpression	n < sizeof ( pscompact_names ) / sizeof ( char * )		1335466	0		<			
ANR	1335500	Identifier	n		1335466	0					
ANR	1335501	MultiplicativeExpression	sizeof ( pscompact_names ) / sizeof ( char * )		1335466	1		/			
ANR	1335502	SizeofExpression	sizeof ( pscompact_names )		1335466	0					
ANR	1335503	Sizeof	sizeof		1335466	0					
ANR	1335504	SizeofOperand	pscompact_names		1335466	1					
ANR	1335505	SizeofExpression	sizeof ( char * )		1335466	1					
ANR	1335506	Sizeof	sizeof		1335466	0					
ANR	1335507	SizeofOperand	char *		1335466	1					
ANR	1335508	PostIncDecOperationExpression	n ++	931:60:24084:24086	1335466	2	True				
ANR	1335509	Identifier	n		1335466	0					
ANR	1335510	IncDec	++		1335466	1					
ANR	1335511	CompoundStatement		7:65:145:145	1335466	3					
ANR	1335512	IfStatement	"if ( strncmp ( pscompact_names [ n ] , & psc -> bufferin [ off ] , psc -> inpos - off ) == 0 )"		1335466	0					
ANR	1335513	Condition	"strncmp ( pscompact_names [ n ] , & psc -> bufferin [ off ] , psc -> inpos - off ) == 0"	932:12:24103:24171	1335466	0	True				
ANR	1335514	EqualityExpression	"strncmp ( pscompact_names [ n ] , & psc -> bufferin [ off ] , psc -> inpos - off ) == 0"		1335466	0		==			
ANR	1335515	CallExpression	"strncmp ( pscompact_names [ n ] , & psc -> bufferin [ off ] , psc -> inpos - off )"		1335466	0					
ANR	1335516	Callee	strncmp		1335466	0					
ANR	1335517	Identifier	strncmp		1335466	0					
ANR	1335518	ArgumentList	pscompact_names [ n ]		1335466	1					
ANR	1335519	Argument	pscompact_names [ n ]		1335466	0					
ANR	1335520	ArrayIndexing	pscompact_names [ n ]		1335466	0					
ANR	1335521	Identifier	pscompact_names		1335466	0					
ANR	1335522	Identifier	n		1335466	1					
ANR	1335523	Argument	& psc -> bufferin [ off ]		1335466	1					
ANR	1335524	UnaryOperationExpression	& psc -> bufferin [ off ]		1335466	0					
ANR	1335525	UnaryOperator	&		1335466	0					
ANR	1335526	ArrayIndexing	psc -> bufferin [ off ]		1335466	1					
ANR	1335527	PtrMemberAccess	psc -> bufferin		1335466	0					
ANR	1335528	Identifier	psc		1335466	0					
ANR	1335529	Identifier	bufferin		1335466	1					
ANR	1335530	Identifier	off		1335466	1					
ANR	1335531	Argument	psc -> inpos - off		1335466	2					
ANR	1335532	AdditiveExpression	psc -> inpos - off		1335466	0		-			
ANR	1335533	PtrMemberAccess	psc -> inpos		1335466	0					
ANR	1335534	Identifier	psc		1335466	0					
ANR	1335535	Identifier	inpos		1335466	1					
ANR	1335536	Identifier	off		1335466	1					
ANR	1335537	PrimaryExpression	0		1335466	1					
ANR	1335538	CompoundStatement		8:83:230:230	1335466	1					
ANR	1335539	IfStatement	if ( off )		1335466	0					
ANR	1335540	Condition	off	934:16:24217:24219	1335466	0	True				
ANR	1335541	Identifier	off		1335466	0					
ANR	1335542	ExpressionStatement	* i = - 1 - n	935:16:24238:24247	1335466	1	True				
ANR	1335543	AssignmentExpression	* i = - 1 - n		1335466	0		=			
ANR	1335544	UnaryOperationExpression	* i		1335466	0					
ANR	1335545	UnaryOperator	*		1335466	0					
ANR	1335546	Identifier	i		1335466	1					
ANR	1335547	AdditiveExpression	- 1 - n		1335466	1		-			
ANR	1335548	UnaryOperationExpression	- 1		1335466	0					
ANR	1335549	UnaryOperator	-		1335466	0					
ANR	1335550	PrimaryExpression	1		1335466	1					
ANR	1335551	Identifier	n		1335466	1					
ANR	1335552	ElseStatement	else		1335466	0					
ANR	1335553	ExpressionStatement	* i = n	937:16:24282:24288	1335466	0	True				
ANR	1335554	AssignmentExpression	* i = n		1335466	0		=			
ANR	1335555	UnaryOperationExpression	* i		1335466	0					
ANR	1335556	UnaryOperator	*		1335466	0					
ANR	1335557	Identifier	i		1335466	1					
ANR	1335558	Identifier	n		1335466	1					
ANR	1335559	ReturnStatement	return 1 ;	938:12:24302:24310	1335466	1	True				
ANR	1335560	PrimaryExpression	1		1335466	0					
ANR	1335561	ReturnStatement	return 0 ;	941:4:24332:24340	1335466	4	True				
ANR	1335562	PrimaryExpression	0		1335466	0					
ANR	1335563	ReturnType	static int		1335466	1					
ANR	1335564	Identifier	pscompact_isname		1335466	2					
ANR	1335565	ParameterList	"pscompstate * psc , int * i"		1335466	3					
ANR	1335566	Parameter	pscompstate * psc	924:28:23917:23932	1335466	0	True				
ANR	1335567	ParameterType	pscompstate *		1335466	0					
ANR	1335568	Identifier	psc		1335466	1					
ANR	1335569	Parameter	int * i	924:46:23935:23940	1335466	1	True				
ANR	1335570	ParameterType	int *		1335466	0					
ANR	1335571	Identifier	i		1335466	1					
ANR	1335572	CFGEntryNode	ENTRY		1335466		True				
ANR	1335573	CFGExitNode	EXIT		1335466		True				
ANR	1335574	Symbol	psc		1335466						
ANR	1335575	Symbol	psc -> bufferin		1335466						
ANR	1335576	Symbol	pscompact_names		1335466						
ANR	1335577	Symbol	* pscompact_names		1335466						
ANR	1335578	Symbol	i		1335466						
ANR	1335579	Symbol	* psc		1335466						
ANR	1335580	Symbol	off		1335466						
ANR	1335581	Symbol	n		1335466						
ANR	1335582	Symbol	strncmp		1335466						
ANR	1335583	Symbol	* psc -> bufferin		1335466						
ANR	1335584	Symbol	* i		1335466						
ANR	1335585	Symbol	* * psc		1335466						
ANR	1335586	Symbol	psc -> inpos		1335466						
ANR	1335587	Symbol	* n		1335466						
ANR	1335588	Function	pscompact_isint	944:0:24345:25663							
ANR	1335589	FunctionDef	"pscompact_isint (pscompstate * psc , int * i)"		1335588	0					
ANR	1335590	CompoundStatement		945:0:24398:25663	1335588	0					
ANR	1335591	IdentifierDeclStatement	int pos = 0 ;	946:4:24404:24415	1335588	0	True				
ANR	1335592	IdentifierDecl	pos = 0		1335588	0					
ANR	1335593	IdentifierDeclType	int		1335588	0					
ANR	1335594	Identifier	pos		1335588	1					
ANR	1335595	AssignmentExpression	pos = 0		1335588	2		=			
ANR	1335596	Identifier	pos		1335588	0					
ANR	1335597	PrimaryExpression	0		1335588	1					
ANR	1335598	IfStatement	if ( ( psc -> bufferin [ 0 ] == '+' ) || ( psc -> bufferin [ 0 ] == '-' ) )		1335588	1					
ANR	1335599	Condition	( psc -> bufferin [ 0 ] == '+' ) || ( psc -> bufferin [ 0 ] == '-' )	948:8:24426:24479	1335588	0	True				
ANR	1335600	OrExpression	( psc -> bufferin [ 0 ] == '+' ) || ( psc -> bufferin [ 0 ] == '-' )		1335588	0		||			
ANR	1335601	EqualityExpression	psc -> bufferin [ 0 ] == '+'		1335588	0		==			
ANR	1335602	ArrayIndexing	psc -> bufferin [ 0 ]		1335588	0					
ANR	1335603	PtrMemberAccess	psc -> bufferin		1335588	0					
ANR	1335604	Identifier	psc		1335588	0					
ANR	1335605	Identifier	bufferin		1335588	1					
ANR	1335606	PrimaryExpression	0		1335588	1					
ANR	1335607	PrimaryExpression	'+'		1335588	1					
ANR	1335608	EqualityExpression	psc -> bufferin [ 0 ] == '-'		1335588	1		==			
ANR	1335609	ArrayIndexing	psc -> bufferin [ 0 ]		1335588	0					
ANR	1335610	PtrMemberAccess	psc -> bufferin		1335588	0					
ANR	1335611	Identifier	psc		1335588	0					
ANR	1335612	Identifier	bufferin		1335588	1					
ANR	1335613	PrimaryExpression	0		1335588	1					
ANR	1335614	PrimaryExpression	'-'		1335588	1					
ANR	1335615	CompoundStatement		4:64:83:83	1335588	1					
ANR	1335616	ExpressionStatement	pos = 1	949:8:24492:24499	1335588	0	True				
ANR	1335617	AssignmentExpression	pos = 1		1335588	0		=			
ANR	1335618	Identifier	pos		1335588	0					
ANR	1335619	PrimaryExpression	1		1335588	1					
ANR	1335620	IfStatement	if ( pos >= psc -> inpos )		1335588	2					
ANR	1335621	Condition	pos >= psc -> inpos	951:8:24515:24531	1335588	0	True				
ANR	1335622	RelationalExpression	pos >= psc -> inpos		1335588	0		>=			
ANR	1335623	Identifier	pos		1335588	0					
ANR	1335624	PtrMemberAccess	psc -> inpos		1335588	1					
ANR	1335625	Identifier	psc		1335588	0					
ANR	1335626	Identifier	inpos		1335588	1					
ANR	1335627	ReturnStatement	return 0 ;	952:8:24542:24550	1335588	1	True				
ANR	1335628	PrimaryExpression	0		1335588	0					
ANR	1335629	IfStatement	"if ( ( psc -> inpos > pos + 3 ) && ( strncmp ( & psc -> bufferin [ pos ] , ""16#"" , 3 ) == 0 ) )"		1335588	3					
ANR	1335630	Condition	"( psc -> inpos > pos + 3 ) && ( strncmp ( & psc -> bufferin [ pos ] , ""16#"" , 3 ) == 0 )"	953:8:24560:24636	1335588	0	True				
ANR	1335631	AndExpression	"( psc -> inpos > pos + 3 ) && ( strncmp ( & psc -> bufferin [ pos ] , ""16#"" , 3 ) == 0 )"		1335588	0		&&			
ANR	1335632	RelationalExpression	psc -> inpos > pos + 3		1335588	0		>			
ANR	1335633	PtrMemberAccess	psc -> inpos		1335588	0					
ANR	1335634	Identifier	psc		1335588	0					
ANR	1335635	Identifier	inpos		1335588	1					
ANR	1335636	AdditiveExpression	pos + 3		1335588	1		+			
ANR	1335637	Identifier	pos		1335588	0					
ANR	1335638	PrimaryExpression	3		1335588	1					
ANR	1335639	EqualityExpression	"strncmp ( & psc -> bufferin [ pos ] , ""16#"" , 3 ) == 0"		1335588	1		==			
ANR	1335640	CallExpression	"strncmp ( & psc -> bufferin [ pos ] , ""16#"" , 3 )"		1335588	0					
ANR	1335641	Callee	strncmp		1335588	0					
ANR	1335642	Identifier	strncmp		1335588	0					
ANR	1335643	ArgumentList	& psc -> bufferin [ pos ]		1335588	1					
ANR	1335644	Argument	& psc -> bufferin [ pos ]		1335588	0					
ANR	1335645	UnaryOperationExpression	& psc -> bufferin [ pos ]		1335588	0					
ANR	1335646	UnaryOperator	&		1335588	0					
ANR	1335647	ArrayIndexing	psc -> bufferin [ pos ]		1335588	1					
ANR	1335648	PtrMemberAccess	psc -> bufferin		1335588	0					
ANR	1335649	Identifier	psc		1335588	0					
ANR	1335650	Identifier	bufferin		1335588	1					
ANR	1335651	Identifier	pos		1335588	1					
ANR	1335652	Argument	"""16#"""		1335588	1					
ANR	1335653	PrimaryExpression	"""16#"""		1335588	0					
ANR	1335654	Argument	3		1335588	2					
ANR	1335655	PrimaryExpression	3		1335588	0					
ANR	1335656	PrimaryExpression	0		1335588	1					
ANR	1335657	CompoundStatement		12:8:268:277	1335588	1					
ANR	1335658	IdentifierDeclStatement	int v = 0 ;	956:8:24667:24676	1335588	0	True				
ANR	1335659	IdentifierDecl	v = 0		1335588	0					
ANR	1335660	IdentifierDeclType	int		1335588	0					
ANR	1335661	Identifier	v		1335588	1					
ANR	1335662	AssignmentExpression	v = 0		1335588	2		=			
ANR	1335663	Identifier	v		1335588	0					
ANR	1335664	PrimaryExpression	0		1335588	1					
ANR	1335665	ExpressionStatement	pos += 3	957:8:24686:24694	1335588	1	True				
ANR	1335666	AssignmentExpression	pos += 3		1335588	0		+=			
ANR	1335667	Identifier	pos		1335588	0					
ANR	1335668	PrimaryExpression	3		1335588	1					
ANR	1335669	WhileStatement	while ( pos < psc -> inpos )		1335588	2					
ANR	1335670	Condition	pos < psc -> inpos	958:15:24711:24726	1335588	0	True				
ANR	1335671	RelationalExpression	pos < psc -> inpos		1335588	0		<			
ANR	1335672	Identifier	pos		1335588	0					
ANR	1335673	PtrMemberAccess	psc -> inpos		1335588	1					
ANR	1335674	Identifier	psc		1335588	0					
ANR	1335675	Identifier	inpos		1335588	1					
ANR	1335676	CompoundStatement		14:33:330:330	1335588	1					
ANR	1335677	IfStatement	if ( ( psc -> bufferin [ pos ] >= '0' ) && ( psc -> bufferin [ pos ] <= '9' ) )		1335588	0					
ANR	1335678	Condition	( psc -> bufferin [ pos ] >= '0' ) && ( psc -> bufferin [ pos ] <= '9' )	959:16:24747:24804	1335588	0	True				
ANR	1335679	AndExpression	( psc -> bufferin [ pos ] >= '0' ) && ( psc -> bufferin [ pos ] <= '9' )		1335588	0		&&			
ANR	1335680	RelationalExpression	psc -> bufferin [ pos ] >= '0'		1335588	0		>=			
ANR	1335681	ArrayIndexing	psc -> bufferin [ pos ]		1335588	0					
ANR	1335682	PtrMemberAccess	psc -> bufferin		1335588	0					
ANR	1335683	Identifier	psc		1335588	0					
ANR	1335684	Identifier	bufferin		1335588	1					
ANR	1335685	Identifier	pos		1335588	1					
ANR	1335686	PrimaryExpression	'0'		1335588	1					
ANR	1335687	RelationalExpression	psc -> bufferin [ pos ] <= '9'		1335588	1		<=			
ANR	1335688	ArrayIndexing	psc -> bufferin [ pos ]		1335588	0					
ANR	1335689	PtrMemberAccess	psc -> bufferin		1335588	0					
ANR	1335690	Identifier	psc		1335588	0					
ANR	1335691	Identifier	bufferin		1335588	1					
ANR	1335692	Identifier	pos		1335588	1					
ANR	1335693	PrimaryExpression	'9'		1335588	1					
ANR	1335694	ExpressionStatement	v = v * 16 + psc -> bufferin [ pos ] - '0'	960:16:24823:24858	1335588	1	True				
ANR	1335695	AssignmentExpression	v = v * 16 + psc -> bufferin [ pos ] - '0'		1335588	0		=			
ANR	1335696	Identifier	v		1335588	0					
ANR	1335697	AdditiveExpression	v * 16 + psc -> bufferin [ pos ] - '0'		1335588	1		+			
ANR	1335698	MultiplicativeExpression	v * 16		1335588	0		*			
ANR	1335699	Identifier	v		1335588	0					
ANR	1335700	PrimaryExpression	16		1335588	1					
ANR	1335701	AdditiveExpression	psc -> bufferin [ pos ] - '0'		1335588	1		-			
ANR	1335702	ArrayIndexing	psc -> bufferin [ pos ]		1335588	0					
ANR	1335703	PtrMemberAccess	psc -> bufferin		1335588	0					
ANR	1335704	Identifier	psc		1335588	0					
ANR	1335705	Identifier	bufferin		1335588	1					
ANR	1335706	Identifier	pos		1335588	1					
ANR	1335707	PrimaryExpression	'0'		1335588	1					
ANR	1335708	ElseStatement	else		1335588	0					
ANR	1335709	IfStatement	if ( ( psc -> bufferin [ pos ] >= 'a' ) && ( psc -> bufferin [ pos ] <= 'f' ) )		1335588	0					
ANR	1335710	Condition	( psc -> bufferin [ pos ] >= 'a' ) && ( psc -> bufferin [ pos ] <= 'f' )	961:21:24881:24938	1335588	0	True				
ANR	1335711	AndExpression	( psc -> bufferin [ pos ] >= 'a' ) && ( psc -> bufferin [ pos ] <= 'f' )		1335588	0		&&			
ANR	1335712	RelationalExpression	psc -> bufferin [ pos ] >= 'a'		1335588	0		>=			
ANR	1335713	ArrayIndexing	psc -> bufferin [ pos ]		1335588	0					
ANR	1335714	PtrMemberAccess	psc -> bufferin		1335588	0					
ANR	1335715	Identifier	psc		1335588	0					
ANR	1335716	Identifier	bufferin		1335588	1					
ANR	1335717	Identifier	pos		1335588	1					
ANR	1335718	PrimaryExpression	'a'		1335588	1					
ANR	1335719	RelationalExpression	psc -> bufferin [ pos ] <= 'f'		1335588	1		<=			
ANR	1335720	ArrayIndexing	psc -> bufferin [ pos ]		1335588	0					
ANR	1335721	PtrMemberAccess	psc -> bufferin		1335588	0					
ANR	1335722	Identifier	psc		1335588	0					
ANR	1335723	Identifier	bufferin		1335588	1					
ANR	1335724	Identifier	pos		1335588	1					
ANR	1335725	PrimaryExpression	'f'		1335588	1					
ANR	1335726	ExpressionStatement	v = v * 16 + psc -> bufferin [ pos ] - 'a' + 10	962:16:24957:24997	1335588	1	True				
ANR	1335727	AssignmentExpression	v = v * 16 + psc -> bufferin [ pos ] - 'a' + 10		1335588	0		=			
ANR	1335728	Identifier	v		1335588	0					
ANR	1335729	AdditiveExpression	v * 16 + psc -> bufferin [ pos ] - 'a' + 10		1335588	1		+			
ANR	1335730	MultiplicativeExpression	v * 16		1335588	0		*			
ANR	1335731	Identifier	v		1335588	0					
ANR	1335732	PrimaryExpression	16		1335588	1					
ANR	1335733	AdditiveExpression	psc -> bufferin [ pos ] - 'a' + 10		1335588	1		-			
ANR	1335734	ArrayIndexing	psc -> bufferin [ pos ]		1335588	0					
ANR	1335735	PtrMemberAccess	psc -> bufferin		1335588	0					
ANR	1335736	Identifier	psc		1335588	0					
ANR	1335737	Identifier	bufferin		1335588	1					
ANR	1335738	Identifier	pos		1335588	1					
ANR	1335739	AdditiveExpression	'a' + 10		1335588	1		+			
ANR	1335740	PrimaryExpression	'a'		1335588	0					
ANR	1335741	PrimaryExpression	10		1335588	1					
ANR	1335742	ElseStatement	else		1335588	0					
ANR	1335743	IfStatement	if ( ( psc -> bufferin [ pos ] >= 'A' ) && ( psc -> bufferin [ pos ] <= 'F' ) )		1335588	0					
ANR	1335744	Condition	( psc -> bufferin [ pos ] >= 'A' ) && ( psc -> bufferin [ pos ] <= 'F' )	963:21:25020:25077	1335588	0	True				
ANR	1335745	AndExpression	( psc -> bufferin [ pos ] >= 'A' ) && ( psc -> bufferin [ pos ] <= 'F' )		1335588	0		&&			
ANR	1335746	RelationalExpression	psc -> bufferin [ pos ] >= 'A'		1335588	0		>=			
ANR	1335747	ArrayIndexing	psc -> bufferin [ pos ]		1335588	0					
ANR	1335748	PtrMemberAccess	psc -> bufferin		1335588	0					
ANR	1335749	Identifier	psc		1335588	0					
ANR	1335750	Identifier	bufferin		1335588	1					
ANR	1335751	Identifier	pos		1335588	1					
ANR	1335752	PrimaryExpression	'A'		1335588	1					
ANR	1335753	RelationalExpression	psc -> bufferin [ pos ] <= 'F'		1335588	1		<=			
ANR	1335754	ArrayIndexing	psc -> bufferin [ pos ]		1335588	0					
ANR	1335755	PtrMemberAccess	psc -> bufferin		1335588	0					
ANR	1335756	Identifier	psc		1335588	0					
ANR	1335757	Identifier	bufferin		1335588	1					
ANR	1335758	Identifier	pos		1335588	1					
ANR	1335759	PrimaryExpression	'F'		1335588	1					
ANR	1335760	ExpressionStatement	v = v * 16 + psc -> bufferin [ pos ] - 'A' + 10	964:16:25096:25136	1335588	1	True				
ANR	1335761	AssignmentExpression	v = v * 16 + psc -> bufferin [ pos ] - 'A' + 10		1335588	0		=			
ANR	1335762	Identifier	v		1335588	0					
ANR	1335763	AdditiveExpression	v * 16 + psc -> bufferin [ pos ] - 'A' + 10		1335588	1		+			
ANR	1335764	MultiplicativeExpression	v * 16		1335588	0		*			
ANR	1335765	Identifier	v		1335588	0					
ANR	1335766	PrimaryExpression	16		1335588	1					
ANR	1335767	AdditiveExpression	psc -> bufferin [ pos ] - 'A' + 10		1335588	1		-			
ANR	1335768	ArrayIndexing	psc -> bufferin [ pos ]		1335588	0					
ANR	1335769	PtrMemberAccess	psc -> bufferin		1335588	0					
ANR	1335770	Identifier	psc		1335588	0					
ANR	1335771	Identifier	bufferin		1335588	1					
ANR	1335772	Identifier	pos		1335588	1					
ANR	1335773	AdditiveExpression	'A' + 10		1335588	1		+			
ANR	1335774	PrimaryExpression	'A'		1335588	0					
ANR	1335775	PrimaryExpression	10		1335588	1					
ANR	1335776	ElseStatement	else		1335588	0					
ANR	1335777	ReturnStatement	return 0 ;	966:16:25171:25179	1335588	0	True				
ANR	1335778	PrimaryExpression	0		1335588	0					
ANR	1335779	ExpressionStatement	pos ++	967:12:25193:25198	1335588	1	True				
ANR	1335780	PostIncDecOperationExpression	pos ++		1335588	0					
ANR	1335781	Identifier	pos		1335588	0					
ANR	1335782	IncDec	++		1335588	1					
ANR	1335783	IfStatement	if ( psc -> bufferin [ 0 ] == '-' )		1335588	3					
ANR	1335784	Condition	psc -> bufferin [ 0 ] == '-'	969:12:25222:25244	1335588	0	True				
ANR	1335785	EqualityExpression	psc -> bufferin [ 0 ] == '-'		1335588	0		==			
ANR	1335786	ArrayIndexing	psc -> bufferin [ 0 ]		1335588	0					
ANR	1335787	PtrMemberAccess	psc -> bufferin		1335588	0					
ANR	1335788	Identifier	psc		1335588	0					
ANR	1335789	Identifier	bufferin		1335588	1					
ANR	1335790	PrimaryExpression	0		1335588	1					
ANR	1335791	PrimaryExpression	'-'		1335588	1					
ANR	1335792	ExpressionStatement	v = - v	970:12:25259:25265	1335588	1	True				
ANR	1335793	AssignmentExpression	v = - v		1335588	0		=			
ANR	1335794	Identifier	v		1335588	0					
ANR	1335795	UnaryOperationExpression	- v		1335588	1					
ANR	1335796	UnaryOperator	-		1335588	0					
ANR	1335797	Identifier	v		1335588	1					
ANR	1335798	ExpressionStatement	* i = v	971:8:25275:25281	1335588	4	True				
ANR	1335799	AssignmentExpression	* i = v		1335588	0		=			
ANR	1335800	UnaryOperationExpression	* i		1335588	0					
ANR	1335801	UnaryOperator	*		1335588	0					
ANR	1335802	Identifier	i		1335588	1					
ANR	1335803	Identifier	v		1335588	1					
ANR	1335804	ReturnStatement	return 1 ;	972:8:25291:25299	1335588	5	True				
ANR	1335805	PrimaryExpression	1		1335588	0					
ANR	1335806	DoStatement	do		1335588	4					
ANR	1335807	CompoundStatement		31:7:916:916	1335588	0					
ANR	1335808	IfStatement	if ( ( psc -> bufferin [ pos ] < '0' ) || ( psc -> bufferin [ pos ] > '9' ) )		1335588	0					
ANR	1335809	Condition	( psc -> bufferin [ pos ] < '0' ) || ( psc -> bufferin [ pos ] > '9' )	976:12:25329:25384	1335588	0	True				
ANR	1335810	OrExpression	( psc -> bufferin [ pos ] < '0' ) || ( psc -> bufferin [ pos ] > '9' )		1335588	0		||			
ANR	1335811	RelationalExpression	psc -> bufferin [ pos ] < '0'		1335588	0		<			
ANR	1335812	ArrayIndexing	psc -> bufferin [ pos ]		1335588	0					
ANR	1335813	PtrMemberAccess	psc -> bufferin		1335588	0					
ANR	1335814	Identifier	psc		1335588	0					
ANR	1335815	Identifier	bufferin		1335588	1					
ANR	1335816	Identifier	pos		1335588	1					
ANR	1335817	PrimaryExpression	'0'		1335588	1					
ANR	1335818	RelationalExpression	psc -> bufferin [ pos ] > '9'		1335588	1		>			
ANR	1335819	ArrayIndexing	psc -> bufferin [ pos ]		1335588	0					
ANR	1335820	PtrMemberAccess	psc -> bufferin		1335588	0					
ANR	1335821	Identifier	psc		1335588	0					
ANR	1335822	Identifier	bufferin		1335588	1					
ANR	1335823	Identifier	pos		1335588	1					
ANR	1335824	PrimaryExpression	'9'		1335588	1					
ANR	1335825	ReturnStatement	return 0 ;	977:12:25399:25407	1335588	1	True				
ANR	1335826	PrimaryExpression	0		1335588	0					
ANR	1335827	ExpressionStatement	pos ++	978:8:25417:25422	1335588	1	True				
ANR	1335828	PostIncDecOperationExpression	pos ++		1335588	0					
ANR	1335829	Identifier	pos		1335588	0					
ANR	1335830	IncDec	++		1335588	1					
ANR	1335831	Condition	pos < psc -> inpos	979:13:25437:25452	1335588	1	True				
ANR	1335832	RelationalExpression	pos < psc -> inpos		1335588	0		<			
ANR	1335833	Identifier	pos		1335588	0					
ANR	1335834	PtrMemberAccess	psc -> inpos		1335588	1					
ANR	1335835	Identifier	psc		1335588	0					
ANR	1335836	Identifier	inpos		1335588	1					
ANR	1335837	IfStatement	if ( psc -> inpos == psc -> inmax )		1335588	5					
ANR	1335838	Condition	psc -> inpos == psc -> inmax	981:8:25465:25488	1335588	0	True				
ANR	1335839	EqualityExpression	psc -> inpos == psc -> inmax		1335588	0		==			
ANR	1335840	PtrMemberAccess	psc -> inpos		1335588	0					
ANR	1335841	Identifier	psc		1335588	0					
ANR	1335842	Identifier	inpos		1335588	1					
ANR	1335843	PtrMemberAccess	psc -> inmax		1335588	1					
ANR	1335844	Identifier	psc		1335588	0					
ANR	1335845	Identifier	inmax		1335588	1					
ANR	1335846	CompoundStatement		37:34:1092:1092	1335588	1					
ANR	1335847	ExpressionStatement	psc -> inmax *= 2	982:8:25501:25516	1335588	0	True				
ANR	1335848	AssignmentExpression	psc -> inmax *= 2		1335588	0		*=			
ANR	1335849	PtrMemberAccess	psc -> inmax		1335588	0					
ANR	1335850	Identifier	psc		1335588	0					
ANR	1335851	Identifier	inmax		1335588	1					
ANR	1335852	PrimaryExpression	2		1335588	1					
ANR	1335853	ExpressionStatement	"psc -> bufferin = realloc ( psc -> bufferin , psc -> inmax )"	983:8:25526:25576	1335588	1	True				
ANR	1335854	AssignmentExpression	"psc -> bufferin = realloc ( psc -> bufferin , psc -> inmax )"		1335588	0		=			
ANR	1335855	PtrMemberAccess	psc -> bufferin		1335588	0					
ANR	1335856	Identifier	psc		1335588	0					
ANR	1335857	Identifier	bufferin		1335588	1					
ANR	1335858	CallExpression	"realloc ( psc -> bufferin , psc -> inmax )"		1335588	1					
ANR	1335859	Callee	realloc		1335588	0					
ANR	1335860	Identifier	realloc		1335588	0					
ANR	1335861	ArgumentList	psc -> bufferin		1335588	1					
ANR	1335862	Argument	psc -> bufferin		1335588	0					
ANR	1335863	PtrMemberAccess	psc -> bufferin		1335588	0					
ANR	1335864	Identifier	psc		1335588	0					
ANR	1335865	Identifier	bufferin		1335588	1					
ANR	1335866	Argument	psc -> inmax		1335588	1					
ANR	1335867	PtrMemberAccess	psc -> inmax		1335588	0					
ANR	1335868	Identifier	psc		1335588	0					
ANR	1335869	Identifier	inmax		1335588	1					
ANR	1335870	ExpressionStatement	psc -> bufferin [ psc -> inpos ] = 0	985:4:25588:25617	1335588	6	True				
ANR	1335871	AssignmentExpression	psc -> bufferin [ psc -> inpos ] = 0		1335588	0		=			
ANR	1335872	ArrayIndexing	psc -> bufferin [ psc -> inpos ]		1335588	0					
ANR	1335873	PtrMemberAccess	psc -> bufferin		1335588	0					
ANR	1335874	Identifier	psc		1335588	0					
ANR	1335875	Identifier	bufferin		1335588	1					
ANR	1335876	PtrMemberAccess	psc -> inpos		1335588	1					
ANR	1335877	Identifier	psc		1335588	0					
ANR	1335878	Identifier	inpos		1335588	1					
ANR	1335879	PrimaryExpression	0		1335588	1					
ANR	1335880	ExpressionStatement	* i = atoi ( psc -> bufferin )	986:4:25623:25647	1335588	7	True				
ANR	1335881	AssignmentExpression	* i = atoi ( psc -> bufferin )		1335588	0		=			
ANR	1335882	UnaryOperationExpression	* i		1335588	0					
ANR	1335883	UnaryOperator	*		1335588	0					
ANR	1335884	Identifier	i		1335588	1					
ANR	1335885	CallExpression	atoi ( psc -> bufferin )		1335588	1					
ANR	1335886	Callee	atoi		1335588	0					
ANR	1335887	Identifier	atoi		1335588	0					
ANR	1335888	ArgumentList	psc -> bufferin		1335588	1					
ANR	1335889	Argument	psc -> bufferin		1335588	0					
ANR	1335890	PtrMemberAccess	psc -> bufferin		1335588	0					
ANR	1335891	Identifier	psc		1335588	0					
ANR	1335892	Identifier	bufferin		1335588	1					
ANR	1335893	ReturnStatement	return 1 ;	987:4:25653:25661	1335588	8	True				
ANR	1335894	PrimaryExpression	1		1335588	0					
ANR	1335895	ReturnType	static int		1335588	1					
ANR	1335896	Identifier	pscompact_isint		1335588	2					
ANR	1335897	ParameterList	"pscompstate * psc , int * i"		1335588	3					
ANR	1335898	Parameter	pscompstate * psc	944:27:24372:24387	1335588	0	True				
ANR	1335899	ParameterType	pscompstate *		1335588	0					
ANR	1335900	Identifier	psc		1335588	1					
ANR	1335901	Parameter	int * i	944:45:24390:24395	1335588	1	True				
ANR	1335902	ParameterType	int *		1335588	0					
ANR	1335903	Identifier	i		1335588	1					
ANR	1335904	CFGEntryNode	ENTRY		1335588		True				
ANR	1335905	CFGExitNode	EXIT		1335588		True				
ANR	1335906	Symbol	atoi		1335588						
ANR	1335907	Symbol	psc		1335588						
ANR	1335908	Symbol	psc -> bufferin		1335588						
ANR	1335909	Symbol	psc -> inmax		1335588						
ANR	1335910	Symbol	i		1335588						
ANR	1335911	Symbol	* psc		1335588						
ANR	1335912	Symbol	realloc		1335588						
ANR	1335913	Symbol	* psc -> inpos		1335588						
ANR	1335914	Symbol	strncmp		1335588						
ANR	1335915	Symbol	* psc -> bufferin		1335588						
ANR	1335916	Symbol	* i		1335588						
ANR	1335917	Symbol	* * psc		1335588						
ANR	1335918	Symbol	pos		1335588						
ANR	1335919	Symbol	psc -> inpos		1335588						
ANR	1335920	Symbol	v		1335588						
ANR	1335921	Symbol	* pos		1335588						
ANR	1335922	Function	pscompact_isfloat	990:0:25666:26504							
ANR	1335923	FunctionDef	"pscompact_isfloat (pscompstate * psc , float * f)"		1335922	0					
ANR	1335924	CompoundStatement		991:0:25723:26504	1335922	0					
ANR	1335925	IdentifierDeclStatement	int pos = 0 ;	992:4:25729:25740	1335922	0	True				
ANR	1335926	IdentifierDecl	pos = 0		1335922	0					
ANR	1335927	IdentifierDeclType	int		1335922	0					
ANR	1335928	Identifier	pos		1335922	1					
ANR	1335929	AssignmentExpression	pos = 0		1335922	2		=			
ANR	1335930	Identifier	pos		1335922	0					
ANR	1335931	PrimaryExpression	0		1335922	1					
ANR	1335932	IdentifierDeclStatement	int point = 0 ;	993:4:25746:25759	1335922	1	True				
ANR	1335933	IdentifierDecl	point = 0		1335922	0					
ANR	1335934	IdentifierDeclType	int		1335922	0					
ANR	1335935	Identifier	point		1335922	1					
ANR	1335936	AssignmentExpression	point = 0		1335922	2		=			
ANR	1335937	Identifier	point		1335922	0					
ANR	1335938	PrimaryExpression	0		1335922	1					
ANR	1335939	IfStatement	if ( ( psc -> bufferin [ 0 ] == '+' ) || ( psc -> bufferin [ 0 ] == '-' ) )		1335922	2					
ANR	1335940	Condition	( psc -> bufferin [ 0 ] == '+' ) || ( psc -> bufferin [ 0 ] == '-' )	995:8:25770:25823	1335922	0	True				
ANR	1335941	OrExpression	( psc -> bufferin [ 0 ] == '+' ) || ( psc -> bufferin [ 0 ] == '-' )		1335922	0		||			
ANR	1335942	EqualityExpression	psc -> bufferin [ 0 ] == '+'		1335922	0		==			
ANR	1335943	ArrayIndexing	psc -> bufferin [ 0 ]		1335922	0					
ANR	1335944	PtrMemberAccess	psc -> bufferin		1335922	0					
ANR	1335945	Identifier	psc		1335922	0					
ANR	1335946	Identifier	bufferin		1335922	1					
ANR	1335947	PrimaryExpression	0		1335922	1					
ANR	1335948	PrimaryExpression	'+'		1335922	1					
ANR	1335949	EqualityExpression	psc -> bufferin [ 0 ] == '-'		1335922	1		==			
ANR	1335950	ArrayIndexing	psc -> bufferin [ 0 ]		1335922	0					
ANR	1335951	PtrMemberAccess	psc -> bufferin		1335922	0					
ANR	1335952	Identifier	psc		1335922	0					
ANR	1335953	Identifier	bufferin		1335922	1					
ANR	1335954	PrimaryExpression	0		1335922	1					
ANR	1335955	PrimaryExpression	'-'		1335922	1					
ANR	1335956	CompoundStatement		5:64:102:102	1335922	1					
ANR	1335957	ExpressionStatement	pos = 1	996:8:25836:25843	1335922	0	True				
ANR	1335958	AssignmentExpression	pos = 1		1335922	0		=			
ANR	1335959	Identifier	pos		1335922	0					
ANR	1335960	PrimaryExpression	1		1335922	1					
ANR	1335961	IfStatement	if ( pos >= psc -> inpos )		1335922	3					
ANR	1335962	Condition	pos >= psc -> inpos	998:8:25859:25875	1335922	0	True				
ANR	1335963	RelationalExpression	pos >= psc -> inpos		1335922	0		>=			
ANR	1335964	Identifier	pos		1335922	0					
ANR	1335965	PtrMemberAccess	psc -> inpos		1335922	1					
ANR	1335966	Identifier	psc		1335922	0					
ANR	1335967	Identifier	inpos		1335922	1					
ANR	1335968	ReturnStatement	return 0 ;	999:8:25886:25894	1335922	1	True				
ANR	1335969	PrimaryExpression	0		1335922	0					
ANR	1335970	DoStatement	do		1335922	4					
ANR	1335971	CompoundStatement		10:7:179:179	1335922	0					
ANR	1335972	IfStatement	if ( ( psc -> bufferin [ pos ] >= '0' ) && ( psc -> bufferin [ pos ] <= '9' ) )		1335922	0					
ANR	1335973	Condition	( psc -> bufferin [ pos ] >= '0' ) && ( psc -> bufferin [ pos ] <= '9' )	1001:12:25917:25974	1335922	0	True				
ANR	1335974	AndExpression	( psc -> bufferin [ pos ] >= '0' ) && ( psc -> bufferin [ pos ] <= '9' )		1335922	0		&&			
ANR	1335975	RelationalExpression	psc -> bufferin [ pos ] >= '0'		1335922	0		>=			
ANR	1335976	ArrayIndexing	psc -> bufferin [ pos ]		1335922	0					
ANR	1335977	PtrMemberAccess	psc -> bufferin		1335922	0					
ANR	1335978	Identifier	psc		1335922	0					
ANR	1335979	Identifier	bufferin		1335922	1					
ANR	1335980	Identifier	pos		1335922	1					
ANR	1335981	PrimaryExpression	'0'		1335922	1					
ANR	1335982	RelationalExpression	psc -> bufferin [ pos ] <= '9'		1335922	1		<=			
ANR	1335983	ArrayIndexing	psc -> bufferin [ pos ]		1335922	0					
ANR	1335984	PtrMemberAccess	psc -> bufferin		1335922	0					
ANR	1335985	Identifier	psc		1335922	0					
ANR	1335986	Identifier	bufferin		1335922	1					
ANR	1335987	Identifier	pos		1335922	1					
ANR	1335988	PrimaryExpression	'9'		1335922	1					
ANR	1335989	CompoundStatement		11:72:253:253	1335922	1					
ANR	1335990	ElseStatement	else		1335922	0					
ANR	1335991	IfStatement	if ( ( psc -> bufferin [ pos ] == '.' ) && ( point == 0 ) )		1335922	0					
ANR	1335992	Condition	( psc -> bufferin [ pos ] == '.' ) && ( point == 0 )	1003:19:26030:26072	1335922	0	True				
ANR	1335993	AndExpression	( psc -> bufferin [ pos ] == '.' ) && ( point == 0 )		1335922	0		&&			
ANR	1335994	EqualityExpression	psc -> bufferin [ pos ] == '.'		1335922	0		==			
ANR	1335995	ArrayIndexing	psc -> bufferin [ pos ]		1335922	0					
ANR	1335996	PtrMemberAccess	psc -> bufferin		1335922	0					
ANR	1335997	Identifier	psc		1335922	0					
ANR	1335998	Identifier	bufferin		1335922	1					
ANR	1335999	Identifier	pos		1335922	1					
ANR	1336000	PrimaryExpression	'.'		1335922	1					
ANR	1336001	EqualityExpression	point == 0		1335922	1		==			
ANR	1336002	Identifier	point		1335922	0					
ANR	1336003	PrimaryExpression	0		1335922	1					
ANR	1336004	CompoundStatement		13:64:351:351	1335922	1					
ANR	1336005	ExpressionStatement	point = 1	1005:12:26145:26154	1335922	0	True				
ANR	1336006	AssignmentExpression	point = 1		1335922	0		=			
ANR	1336007	Identifier	point		1335922	0					
ANR	1336008	PrimaryExpression	1		1335922	1					
ANR	1336009	ElseStatement	else		1335922	0					
ANR	1336010	CompoundStatement		16:15:447:447	1335922	0					
ANR	1336011	ReturnStatement	return 0 ;	1008:12:26230:26238	1335922	0	True				
ANR	1336012	PrimaryExpression	0		1335922	0					
ANR	1336013	ExpressionStatement	pos ++	1010:8:26258:26263	1335922	1	True				
ANR	1336014	PostIncDecOperationExpression	pos ++		1335922	0					
ANR	1336015	Identifier	pos		1335922	0					
ANR	1336016	IncDec	++		1335922	1					
ANR	1336017	Condition	pos < psc -> inpos	1011:13:26278:26293	1335922	1	True				
ANR	1336018	RelationalExpression	pos < psc -> inpos		1335922	0		<			
ANR	1336019	Identifier	pos		1335922	0					
ANR	1336020	PtrMemberAccess	psc -> inpos		1335922	1					
ANR	1336021	Identifier	psc		1335922	0					
ANR	1336022	Identifier	inpos		1335922	1					
ANR	1336023	IfStatement	if ( psc -> inpos == psc -> inmax )		1335922	5					
ANR	1336024	Condition	psc -> inpos == psc -> inmax	1013:8:26306:26329	1335922	0	True				
ANR	1336025	EqualityExpression	psc -> inpos == psc -> inmax		1335922	0		==			
ANR	1336026	PtrMemberAccess	psc -> inpos		1335922	0					
ANR	1336027	Identifier	psc		1335922	0					
ANR	1336028	Identifier	inpos		1335922	1					
ANR	1336029	PtrMemberAccess	psc -> inmax		1335922	1					
ANR	1336030	Identifier	psc		1335922	0					
ANR	1336031	Identifier	inmax		1335922	1					
ANR	1336032	CompoundStatement		23:34:608:608	1335922	1					
ANR	1336033	ExpressionStatement	psc -> inmax *= 2	1014:8:26342:26357	1335922	0	True				
ANR	1336034	AssignmentExpression	psc -> inmax *= 2		1335922	0		*=			
ANR	1336035	PtrMemberAccess	psc -> inmax		1335922	0					
ANR	1336036	Identifier	psc		1335922	0					
ANR	1336037	Identifier	inmax		1335922	1					
ANR	1336038	PrimaryExpression	2		1335922	1					
ANR	1336039	ExpressionStatement	"psc -> bufferin = realloc ( psc -> bufferin , psc -> inmax )"	1015:8:26367:26417	1335922	1	True				
ANR	1336040	AssignmentExpression	"psc -> bufferin = realloc ( psc -> bufferin , psc -> inmax )"		1335922	0		=			
ANR	1336041	PtrMemberAccess	psc -> bufferin		1335922	0					
ANR	1336042	Identifier	psc		1335922	0					
ANR	1336043	Identifier	bufferin		1335922	1					
ANR	1336044	CallExpression	"realloc ( psc -> bufferin , psc -> inmax )"		1335922	1					
ANR	1336045	Callee	realloc		1335922	0					
ANR	1336046	Identifier	realloc		1335922	0					
ANR	1336047	ArgumentList	psc -> bufferin		1335922	1					
ANR	1336048	Argument	psc -> bufferin		1335922	0					
ANR	1336049	PtrMemberAccess	psc -> bufferin		1335922	0					
ANR	1336050	Identifier	psc		1335922	0					
ANR	1336051	Identifier	bufferin		1335922	1					
ANR	1336052	Argument	psc -> inmax		1335922	1					
ANR	1336053	PtrMemberAccess	psc -> inmax		1335922	0					
ANR	1336054	Identifier	psc		1335922	0					
ANR	1336055	Identifier	inmax		1335922	1					
ANR	1336056	ExpressionStatement	psc -> bufferin [ psc -> inpos ] = 0	1017:4:26429:26458	1335922	6	True				
ANR	1336057	AssignmentExpression	psc -> bufferin [ psc -> inpos ] = 0		1335922	0		=			
ANR	1336058	ArrayIndexing	psc -> bufferin [ psc -> inpos ]		1335922	0					
ANR	1336059	PtrMemberAccess	psc -> bufferin		1335922	0					
ANR	1336060	Identifier	psc		1335922	0					
ANR	1336061	Identifier	bufferin		1335922	1					
ANR	1336062	PtrMemberAccess	psc -> inpos		1335922	1					
ANR	1336063	Identifier	psc		1335922	0					
ANR	1336064	Identifier	inpos		1335922	1					
ANR	1336065	PrimaryExpression	0		1335922	1					
ANR	1336066	ExpressionStatement	* f = atof ( psc -> bufferin )	1018:4:26464:26488	1335922	7	True				
ANR	1336067	AssignmentExpression	* f = atof ( psc -> bufferin )		1335922	0		=			
ANR	1336068	UnaryOperationExpression	* f		1335922	0					
ANR	1336069	UnaryOperator	*		1335922	0					
ANR	1336070	Identifier	f		1335922	1					
ANR	1336071	CallExpression	atof ( psc -> bufferin )		1335922	1					
ANR	1336072	Callee	atof		1335922	0					
ANR	1336073	Identifier	atof		1335922	0					
ANR	1336074	ArgumentList	psc -> bufferin		1335922	1					
ANR	1336075	Argument	psc -> bufferin		1335922	0					
ANR	1336076	PtrMemberAccess	psc -> bufferin		1335922	0					
ANR	1336077	Identifier	psc		1335922	0					
ANR	1336078	Identifier	bufferin		1335922	1					
ANR	1336079	ReturnStatement	return 1 ;	1019:4:26494:26502	1335922	8	True				
ANR	1336080	PrimaryExpression	1		1335922	0					
ANR	1336081	ReturnType	static int		1335922	1					
ANR	1336082	Identifier	pscompact_isfloat		1335922	2					
ANR	1336083	ParameterList	"pscompstate * psc , float * f"		1335922	3					
ANR	1336084	Parameter	pscompstate * psc	990:29:25695:25710	1335922	0	True				
ANR	1336085	ParameterType	pscompstate *		1335922	0					
ANR	1336086	Identifier	psc		1335922	1					
ANR	1336087	Parameter	float * f	990:47:25713:25720	1335922	1	True				
ANR	1336088	ParameterType	float *		1335922	0					
ANR	1336089	Identifier	f		1335922	1					
ANR	1336090	CFGEntryNode	ENTRY		1335922		True				
ANR	1336091	CFGExitNode	EXIT		1335922		True				
ANR	1336092	Symbol	psc		1335922						
ANR	1336093	Symbol	f		1335922						
ANR	1336094	Symbol	psc -> bufferin		1335922						
ANR	1336095	Symbol	psc -> inmax		1335922						
ANR	1336096	Symbol	atof		1335922						
ANR	1336097	Symbol	* psc		1335922						
ANR	1336098	Symbol	realloc		1335922						
ANR	1336099	Symbol	* psc -> inpos		1335922						
ANR	1336100	Symbol	point		1335922						
ANR	1336101	Symbol	* f		1335922						
ANR	1336102	Symbol	* psc -> bufferin		1335922						
ANR	1336103	Symbol	* * psc		1335922						
ANR	1336104	Symbol	pos		1335922						
ANR	1336105	Symbol	psc -> inpos		1335922						
ANR	1336106	Symbol	* pos		1335922						
ANR	1336107	Function	pscompact_getcompactedblock	1022:0:26507:49124							
ANR	1336108	FunctionDef	"pscompact_getcompactedblock (pscompstate * psc , unsigned char * ubuf , unsigned long ulen)"		1336107	0					
ANR	1336109	CompoundStatement		1023:0:26615:49124	1336107	0					
ANR	1336110	IdentifierDeclStatement	unsigned char * out ;	1024:4:26621:26639	1336107	0	True				
ANR	1336111	IdentifierDecl	* out		1336107	0					
ANR	1336112	IdentifierDeclType	unsigned char *		1336107	0					
ANR	1336113	Identifier	out		1336107	1					
ANR	1336114	IdentifierDeclStatement	int c ;	1025:4:26645:26650	1336107	1	True				
ANR	1336115	IdentifierDecl	c		1336107	0					
ANR	1336116	IdentifierDeclType	int		1336107	0					
ANR	1336117	Identifier	c		1336107	1					
ANR	1336118	IfStatement	if ( ulen == 0 )		1336107	2					
ANR	1336119	Condition	ulen == 0	1027:8:26661:26669	1336107	0	True				
ANR	1336120	EqualityExpression	ulen == 0		1336107	0		==			
ANR	1336121	Identifier	ulen		1336107	0					
ANR	1336122	PrimaryExpression	0		1336107	1					
ANR	1336123	ReturnStatement	return 0 ;	1028:8:26680:26688	1336107	1	True				
ANR	1336124	PrimaryExpression	0		1336107	0					
ANR	1336125	ExpressionStatement	out = ubuf	1029:4:26694:26704	1336107	3	True				
ANR	1336126	AssignmentExpression	out = ubuf		1336107	0		=			
ANR	1336127	Identifier	out		1336107	0					
ANR	1336128	Identifier	ubuf		1336107	1					
ANR	1336129	DoStatement	do		1336107	4					
ANR	1336130	CompoundStatement		8:7:97:97	1336107	0					
ANR	1336131	SwitchStatement	switch ( psc -> state )		1336107	0					
ANR	1336132	Condition	psc -> state	1031:16:26731:26740	1336107	0	True				
ANR	1336133	PtrMemberAccess	psc -> state		1336107	0					
ANR	1336134	Identifier	psc		1336107	0					
ANR	1336135	Identifier	state		1336107	1					
ANR	1336136	CompoundStatement		9:28:127:127	1336107	1					
ANR	1336137	Label	case PSC_BufferIn :	1032:12:26757:26774	1336107	0	True				
ANR	1336138	Identifier	PSC_BufferIn		1336107	0					
ANR	1336139	ExpressionStatement	c = psc -> pgetc ( psc -> file )	1033:16:26792:26817	1336107	1	True				
ANR	1336140	AssignmentExpression	c = psc -> pgetc ( psc -> file )		1336107	0		=			
ANR	1336141	Identifier	c		1336107	0					
ANR	1336142	CallExpression	psc -> pgetc ( psc -> file )		1336107	1					
ANR	1336143	Callee	psc -> pgetc		1336107	0					
ANR	1336144	PtrMemberAccess	psc -> pgetc		1336107	0					
ANR	1336145	Identifier	psc		1336107	0					
ANR	1336146	Identifier	pgetc		1336107	1					
ANR	1336147	ArgumentList	psc -> file		1336107	1					
ANR	1336148	Argument	psc -> file		1336107	0					
ANR	1336149	PtrMemberAccess	psc -> file		1336107	0					
ANR	1336150	Identifier	psc		1336107	0					
ANR	1336151	Identifier	file		1336107	1					
ANR	1336152	IfStatement	if ( ( c <= 32 ) || ( c == EOF ) )		1336107	2					
ANR	1336153	Condition	( c <= 32 ) || ( c == EOF )	1034:20:26839:26861	1336107	0	True				
ANR	1336154	OrExpression	( c <= 32 ) || ( c == EOF )		1336107	0		||			
ANR	1336155	RelationalExpression	c <= 32		1336107	0		<=			
ANR	1336156	Identifier	c		1336107	0					
ANR	1336157	PrimaryExpression	32		1336107	1					
ANR	1336158	EqualityExpression	c == EOF		1336107	1		==			
ANR	1336159	Identifier	c		1336107	0					
ANR	1336160	Identifier	EOF		1336107	1					
ANR	1336161	CompoundStatement		12:45:248:248	1336107	1					
ANR	1336162	IfStatement	if ( psc -> inpos == 0 )		1336107	0					
ANR	1336163	Condition	psc -> inpos == 0	1036:24:26927:26941	1336107	0	True				
ANR	1336164	EqualityExpression	psc -> inpos == 0		1336107	0		==			
ANR	1336165	PtrMemberAccess	psc -> inpos		1336107	0					
ANR	1336166	Identifier	psc		1336107	0					
ANR	1336167	Identifier	inpos		1336107	1					
ANR	1336168	PrimaryExpression	0		1336107	1					
ANR	1336169	CompoundStatement		14:41:328:328	1336107	1					
ANR	1336170	BreakStatement	break ;	1038:24:27032:27037	1336107	0	True				
ANR	1336171	ElseStatement	else		1336107	0					
ANR	1336172	IfStatement	if ( c == '(' )		1336107	0					
ANR	1336173	Condition	c == '('	1040:27:27088:27095	1336107	0	True				
ANR	1336174	EqualityExpression	c == '('		1336107	0		==			
ANR	1336175	Identifier	c		1336107	0					
ANR	1336176	PrimaryExpression	'('		1336107	1					
ANR	1336177	CompoundStatement		18:37:482:482	1336107	1					
ANR	1336178	IfStatement	if ( psc -> inpos == 0 )		1336107	0					
ANR	1336179	Condition	psc -> inpos == 0	1042:24:27168:27182	1336107	0	True				
ANR	1336180	EqualityExpression	psc -> inpos == 0		1336107	0		==			
ANR	1336181	PtrMemberAccess	psc -> inpos		1336107	0					
ANR	1336182	Identifier	psc		1336107	0					
ANR	1336183	Identifier	inpos		1336107	1					
ANR	1336184	PrimaryExpression	0		1336107	1					
ANR	1336185	CompoundStatement		20:41:569:569	1336107	1					
ANR	1336186	ExpressionStatement	psc -> state = PSC_InString	1044:24:27262:27287	1336107	0	True				
ANR	1336187	AssignmentExpression	psc -> state = PSC_InString		1336107	0		=			
ANR	1336188	PtrMemberAccess	psc -> state		1336107	0					
ANR	1336189	Identifier	psc		1336107	0					
ANR	1336190	Identifier	state		1336107	1					
ANR	1336191	Identifier	PSC_InString		1336107	1					
ANR	1336192	ExpressionStatement	psc -> paren = 1	1045:24:27313:27327	1336107	1	True				
ANR	1336193	AssignmentExpression	psc -> paren = 1		1336107	0		=			
ANR	1336194	PtrMemberAccess	psc -> paren		1336107	0					
ANR	1336195	Identifier	psc		1336107	0					
ANR	1336196	Identifier	paren		1336107	1					
ANR	1336197	PrimaryExpression	1		1336107	1					
ANR	1336198	BreakStatement	break ;	1046:24:27353:27358	1336107	2	True				
ANR	1336199	ElseStatement	else		1336107	0					
ANR	1336200	IfStatement	if ( c == '>' )		1336107	0					
ANR	1336201	Condition	c == '>'	1048:27:27409:27416	1336107	0	True				
ANR	1336202	EqualityExpression	c == '>'		1336107	0		==			
ANR	1336203	Identifier	c		1336107	0					
ANR	1336204	PrimaryExpression	'>'		1336107	1					
ANR	1336205	CompoundStatement		26:37:803:803	1336107	1					
ANR	1336206	IfStatement	if ( psc -> inpos == 0 )		1336107	0					
ANR	1336207	Condition	psc -> inpos == 0	1050:24:27491:27505	1336107	0	True				
ANR	1336208	EqualityExpression	psc -> inpos == 0		1336107	0		==			
ANR	1336209	PtrMemberAccess	psc -> inpos		1336107	0					
ANR	1336210	Identifier	psc		1336107	0					
ANR	1336211	Identifier	inpos		1336107	1					
ANR	1336212	PrimaryExpression	0		1336107	1					
ANR	1336213	CompoundStatement		28:41:892:892	1336107	1					
ANR	1336214	ExpressionStatement	* out ++ = c	1052:24:27600:27610	1336107	0	True				
ANR	1336215	AssignmentExpression	* out ++ = c		1336107	0		=			
ANR	1336216	UnaryOperationExpression	* out ++		1336107	0					
ANR	1336217	UnaryOperator	*		1336107	0					
ANR	1336218	PostIncDecOperationExpression	out ++		1336107	1					
ANR	1336219	Identifier	out		1336107	0					
ANR	1336220	IncDec	++		1336107	1					
ANR	1336221	Identifier	c		1336107	1					
ANR	1336222	BreakStatement	break ;	1053:24:27636:27641	1336107	1	True				
ANR	1336223	ElseStatement	else		1336107	0					
ANR	1336224	IfStatement	if ( ( c == '{' ) || ( c == '}' ) || ( c == '[' ) || ( c == ']' ) )		1336107	0					
ANR	1336225	Condition	( c == '{' ) || ( c == '}' ) || ( c == '[' ) || ( c == ']' )	1055:27:27692:27770	1336107	0	True				
ANR	1336226	OrExpression	( c == '{' ) || ( c == '}' ) || ( c == '[' ) || ( c == ']' )		1336107	0		||			
ANR	1336227	EqualityExpression	c == '{'		1336107	0		==			
ANR	1336228	Identifier	c		1336107	0					
ANR	1336229	PrimaryExpression	'{'		1336107	1					
ANR	1336230	OrExpression	( c == '}' ) || ( c == '[' ) || ( c == ']' )		1336107	1		||			
ANR	1336231	EqualityExpression	c == '}'		1336107	0		==			
ANR	1336232	Identifier	c		1336107	0					
ANR	1336233	PrimaryExpression	'}'		1336107	1					
ANR	1336234	OrExpression	( c == '[' ) || ( c == ']' )		1336107	1		||			
ANR	1336235	EqualityExpression	c == '['		1336107	0		==			
ANR	1336236	Identifier	c		1336107	0					
ANR	1336237	PrimaryExpression	'['		1336107	1					
ANR	1336238	EqualityExpression	c == ']'		1336107	1		==			
ANR	1336239	Identifier	c		1336107	0					
ANR	1336240	PrimaryExpression	']'		1336107	1					
ANR	1336241	CompoundStatement		34:53:1157:1157	1336107	1					
ANR	1336242	IfStatement	if ( psc -> inpos == 0 )		1336107	0					
ANR	1336243	Condition	psc -> inpos == 0	1058:24:27849:27863	1336107	0	True				
ANR	1336244	EqualityExpression	psc -> inpos == 0		1336107	0		==			
ANR	1336245	PtrMemberAccess	psc -> inpos		1336107	0					
ANR	1336246	Identifier	psc		1336107	0					
ANR	1336247	Identifier	inpos		1336107	1					
ANR	1336248	PrimaryExpression	0		1336107	1					
ANR	1336249	CompoundStatement		36:41:1250:1250	1336107	1					
ANR	1336250	ExpressionStatement	* out ++ = c	1060:24:27954:27964	1336107	0	True				
ANR	1336251	AssignmentExpression	* out ++ = c		1336107	0		=			
ANR	1336252	UnaryOperationExpression	* out ++		1336107	0					
ANR	1336253	UnaryOperator	*		1336107	0					
ANR	1336254	PostIncDecOperationExpression	out ++		1336107	1					
ANR	1336255	Identifier	out		1336107	0					
ANR	1336256	IncDec	++		1336107	1					
ANR	1336257	Identifier	c		1336107	1					
ANR	1336258	ExpressionStatement	psc -> wasascii = 0	1061:24:27990:28007	1336107	1	True				
ANR	1336259	AssignmentExpression	psc -> wasascii = 0		1336107	0		=			
ANR	1336260	PtrMemberAccess	psc -> wasascii		1336107	0					
ANR	1336261	Identifier	psc		1336107	0					
ANR	1336262	Identifier	wasascii		1336107	1					
ANR	1336263	PrimaryExpression	0		1336107	1					
ANR	1336264	BreakStatement	break ;	1062:24:28033:28038	1336107	2	True				
ANR	1336265	ElseStatement	else		1336107	0					
ANR	1336266	IfStatement	if ( ( c >= 128 ) && ( c <= 131 ) )		1336107	0					
ANR	1336267	Condition	( c >= 128 ) && ( c <= 131 )	1064:27:28089:28112	1336107	0	True				
ANR	1336268	AndExpression	( c >= 128 ) && ( c <= 131 )		1336107	0		&&			
ANR	1336269	RelationalExpression	c >= 128		1336107	0		>=			
ANR	1336270	Identifier	c		1336107	0					
ANR	1336271	PrimaryExpression	128		1336107	1					
ANR	1336272	RelationalExpression	c <= 131		1336107	1		<=			
ANR	1336273	Identifier	c		1336107	0					
ANR	1336274	PrimaryExpression	131		1336107	1					
ANR	1336275	CompoundStatement		42:53:1499:1499	1336107	1					
ANR	1336276	ExpressionStatement	"fprintf ( stderr , ""Can't compact files with binary object sequences in!"" )"	1065:20:28137:28208	1336107	0	True				
ANR	1336277	CallExpression	"fprintf ( stderr , ""Can't compact files with binary object sequences in!"" )"		1336107	0					
ANR	1336278	Callee	fprintf		1336107	0					
ANR	1336279	Identifier	fprintf		1336107	0					
ANR	1336280	ArgumentList	stderr		1336107	1					
ANR	1336281	Argument	stderr		1336107	0					
ANR	1336282	Identifier	stderr		1336107	0					
ANR	1336283	Argument	"""Can't compact files with binary object sequences in!"""		1336107	1					
ANR	1336284	PrimaryExpression	"""Can't compact files with binary object sequences in!"""		1336107	0					
ANR	1336285	ExpressionStatement	exit ( 1 )	1066:20:28230:28237	1336107	1	True				
ANR	1336286	CallExpression	exit ( 1 )		1336107	0					
ANR	1336287	Callee	exit		1336107	0					
ANR	1336288	Identifier	exit		1336107	0					
ANR	1336289	ArgumentList	1		1336107	1					
ANR	1336290	Argument	1		1336107	0					
ANR	1336291	PrimaryExpression	1		1336107	0					
ANR	1336292	ElseStatement	else		1336107	0					
ANR	1336293	IfStatement	if ( ( c == 132 ) || ( c == 133 ) || ( c == 138 ) || ( c == 139 ) || ( c == 140 ) )		1336107	0					
ANR	1336294	Condition	( c == 132 ) || ( c == 133 ) || ( c == 138 ) || ( c == 139 ) || ( c == 140 )	1067:27:28266:28331	1336107	0	True				
ANR	1336295	OrExpression	( c == 132 ) || ( c == 133 ) || ( c == 138 ) || ( c == 139 ) || ( c == 140 )		1336107	0		||			
ANR	1336296	EqualityExpression	c == 132		1336107	0		==			
ANR	1336297	Identifier	c		1336107	0					
ANR	1336298	PrimaryExpression	132		1336107	1					
ANR	1336299	OrExpression	( c == 133 ) || ( c == 138 ) || ( c == 139 ) || ( c == 140 )		1336107	1		||			
ANR	1336300	EqualityExpression	c == 133		1336107	0		==			
ANR	1336301	Identifier	c		1336107	0					
ANR	1336302	PrimaryExpression	133		1336107	1					
ANR	1336303	OrExpression	( c == 138 ) || ( c == 139 ) || ( c == 140 )		1336107	1		||			
ANR	1336304	EqualityExpression	c == 138		1336107	0		==			
ANR	1336305	Identifier	c		1336107	0					
ANR	1336306	PrimaryExpression	138		1336107	1					
ANR	1336307	OrExpression	( c == 139 ) || ( c == 140 )		1336107	1		||			
ANR	1336308	EqualityExpression	c == 139		1336107	0		==			
ANR	1336309	Identifier	c		1336107	0					
ANR	1336310	PrimaryExpression	139		1336107	1					
ANR	1336311	EqualityExpression	c == 140		1336107	1		==			
ANR	1336312	Identifier	c		1336107	0					
ANR	1336313	PrimaryExpression	140		1336107	1					
ANR	1336314	CompoundStatement		45:95:1718:1718	1336107	1					
ANR	1336315	IfStatement	if ( psc -> inpos == 0 )		1336107	0					
ANR	1336316	Condition	psc -> inpos == 0	1069:24:28411:28425	1336107	0	True				
ANR	1336317	EqualityExpression	psc -> inpos == 0		1336107	0		==			
ANR	1336318	PtrMemberAccess	psc -> inpos		1336107	0					
ANR	1336319	Identifier	psc		1336107	0					
ANR	1336320	Identifier	inpos		1336107	1					
ANR	1336321	PrimaryExpression	0		1336107	1					
ANR	1336322	CompoundStatement		47:41:1812:1812	1336107	1					
ANR	1336323	ExpressionStatement	"pscompact_copy ( psc , c , 4 )"	1070:24:28454:28479	1336107	0	True				
ANR	1336324	CallExpression	"pscompact_copy ( psc , c , 4 )"		1336107	0					
ANR	1336325	Callee	pscompact_copy		1336107	0					
ANR	1336326	Identifier	pscompact_copy		1336107	0					
ANR	1336327	ArgumentList	psc		1336107	1					
ANR	1336328	Argument	psc		1336107	0					
ANR	1336329	Identifier	psc		1336107	0					
ANR	1336330	Argument	c		1336107	1					
ANR	1336331	Identifier	c		1336107	0					
ANR	1336332	Argument	4		1336107	2					
ANR	1336333	PrimaryExpression	4		1336107	0					
ANR	1336334	BreakStatement	break ;	1071:24:28505:28510	1336107	1	True				
ANR	1336335	ElseStatement	else		1336107	0					
ANR	1336336	IfStatement	if ( ( c == 134 ) || ( c == 135 ) )		1336107	0					
ANR	1336337	Condition	( c == 134 ) || ( c == 135 )	1073:27:28561:28584	1336107	0	True				
ANR	1336338	OrExpression	( c == 134 ) || ( c == 135 )		1336107	0		||			
ANR	1336339	EqualityExpression	c == 134		1336107	0		==			
ANR	1336340	Identifier	c		1336107	0					
ANR	1336341	PrimaryExpression	134		1336107	1					
ANR	1336342	EqualityExpression	c == 135		1336107	1		==			
ANR	1336343	Identifier	c		1336107	0					
ANR	1336344	PrimaryExpression	135		1336107	1					
ANR	1336345	CompoundStatement		51:53:1971:1971	1336107	1					
ANR	1336346	IfStatement	if ( psc -> inpos == 0 )		1336107	0					
ANR	1336347	Condition	psc -> inpos == 0	1075:24:28655:28669	1336107	0	True				
ANR	1336348	EqualityExpression	psc -> inpos == 0		1336107	0		==			
ANR	1336349	PtrMemberAccess	psc -> inpos		1336107	0					
ANR	1336350	Identifier	psc		1336107	0					
ANR	1336351	Identifier	inpos		1336107	1					
ANR	1336352	PrimaryExpression	0		1336107	1					
ANR	1336353	CompoundStatement		53:41:2056:2056	1336107	1					
ANR	1336354	ExpressionStatement	"pscompact_copy ( psc , c , 2 )"	1076:24:28698:28723	1336107	0	True				
ANR	1336355	CallExpression	"pscompact_copy ( psc , c , 2 )"		1336107	0					
ANR	1336356	Callee	pscompact_copy		1336107	0					
ANR	1336357	Identifier	pscompact_copy		1336107	0					
ANR	1336358	ArgumentList	psc		1336107	1					
ANR	1336359	Argument	psc		1336107	0					
ANR	1336360	Identifier	psc		1336107	0					
ANR	1336361	Argument	c		1336107	1					
ANR	1336362	Identifier	c		1336107	0					
ANR	1336363	Argument	2		1336107	2					
ANR	1336364	PrimaryExpression	2		1336107	0					
ANR	1336365	BreakStatement	break ;	1077:24:28749:28754	1336107	1	True				
ANR	1336366	ElseStatement	else		1336107	0					
ANR	1336367	IfStatement	if ( ( c == 136 ) || ( c == 141 ) || ( c == 145 ) || ( c == 146 ) || ( c == 147 ) || ( c == 148 ) )		1336107	0					
ANR	1336368	Condition	( c == 136 ) || ( c == 141 ) || ( c == 145 ) || ( c == 146 ) || ( c == 147 ) || ( c == 148 )	1079:27:28805:28911	1336107	0	True				
ANR	1336369	OrExpression	( c == 136 ) || ( c == 141 ) || ( c == 145 ) || ( c == 146 ) || ( c == 147 ) || ( c == 148 )		1336107	0		||			
ANR	1336370	EqualityExpression	c == 136		1336107	0		==			
ANR	1336371	Identifier	c		1336107	0					
ANR	1336372	PrimaryExpression	136		1336107	1					
ANR	1336373	OrExpression	( c == 141 ) || ( c == 145 ) || ( c == 146 ) || ( c == 147 ) || ( c == 148 )		1336107	1		||			
ANR	1336374	EqualityExpression	c == 141		1336107	0		==			
ANR	1336375	Identifier	c		1336107	0					
ANR	1336376	PrimaryExpression	141		1336107	1					
ANR	1336377	OrExpression	( c == 145 ) || ( c == 146 ) || ( c == 147 ) || ( c == 148 )		1336107	1		||			
ANR	1336378	EqualityExpression	c == 145		1336107	0		==			
ANR	1336379	Identifier	c		1336107	0					
ANR	1336380	PrimaryExpression	145		1336107	1					
ANR	1336381	OrExpression	( c == 146 ) || ( c == 147 ) || ( c == 148 )		1336107	1		||			
ANR	1336382	EqualityExpression	c == 146		1336107	0		==			
ANR	1336383	Identifier	c		1336107	0					
ANR	1336384	PrimaryExpression	146		1336107	1					
ANR	1336385	OrExpression	( c == 147 ) || ( c == 148 )		1336107	1		||			
ANR	1336386	EqualityExpression	c == 147		1336107	0		==			
ANR	1336387	Identifier	c		1336107	0					
ANR	1336388	PrimaryExpression	147		1336107	1					
ANR	1336389	EqualityExpression	c == 148		1336107	1		==			
ANR	1336390	Identifier	c		1336107	0					
ANR	1336391	PrimaryExpression	148		1336107	1					
ANR	1336392	CompoundStatement		58:67:2298:2298	1336107	1					
ANR	1336393	IfStatement	if ( psc -> inpos == 0 )		1336107	0					
ANR	1336394	Condition	psc -> inpos == 0	1082:24:29003:29017	1336107	0	True				
ANR	1336395	EqualityExpression	psc -> inpos == 0		1336107	0		==			
ANR	1336396	PtrMemberAccess	psc -> inpos		1336107	0					
ANR	1336397	Identifier	psc		1336107	0					
ANR	1336398	Identifier	inpos		1336107	1					
ANR	1336399	PrimaryExpression	0		1336107	1					
ANR	1336400	CompoundStatement		60:41:2404:2404	1336107	1					
ANR	1336401	ExpressionStatement	"pscompact_copy ( psc , c , 1 )"	1083:24:29046:29071	1336107	0	True				
ANR	1336402	CallExpression	"pscompact_copy ( psc , c , 1 )"		1336107	0					
ANR	1336403	Callee	pscompact_copy		1336107	0					
ANR	1336404	Identifier	pscompact_copy		1336107	0					
ANR	1336405	ArgumentList	psc		1336107	1					
ANR	1336406	Argument	psc		1336107	0					
ANR	1336407	Identifier	psc		1336107	0					
ANR	1336408	Argument	c		1336107	1					
ANR	1336409	Identifier	c		1336107	0					
ANR	1336410	Argument	1		1336107	2					
ANR	1336411	PrimaryExpression	1		1336107	0					
ANR	1336412	BreakStatement	break ;	1084:24:29097:29102	1336107	1	True				
ANR	1336413	ElseStatement	else		1336107	0					
ANR	1336414	IfStatement	if ( c == 137 )		1336107	0					
ANR	1336415	Condition	c == 137	1086:27:29153:29160	1336107	0	True				
ANR	1336416	EqualityExpression	c == 137		1336107	0		==			
ANR	1336417	Identifier	c		1336107	0					
ANR	1336418	PrimaryExpression	137		1336107	1					
ANR	1336419	CompoundStatement		64:37:2547:2547	1336107	1					
ANR	1336420	IfStatement	if ( psc -> inpos == 0 )		1336107	0					
ANR	1336421	Condition	psc -> inpos == 0	1088:24:29227:29241	1336107	0	True				
ANR	1336422	EqualityExpression	psc -> inpos == 0		1336107	0		==			
ANR	1336423	PtrMemberAccess	psc -> inpos		1336107	0					
ANR	1336424	Identifier	psc		1336107	0					
ANR	1336425	Identifier	inpos		1336107	1					
ANR	1336426	PrimaryExpression	0		1336107	1					
ANR	1336427	CompoundStatement		67:24:2654:2683	1336107	1					
ANR	1336428	IdentifierDeclStatement	int r = psc -> pgetc ( psc -> file ) ;	1089:24:29270:29299	1336107	0	True				
ANR	1336429	IdentifierDecl	r = psc -> pgetc ( psc -> file )		1336107	0					
ANR	1336430	IdentifierDeclType	int		1336107	0					
ANR	1336431	Identifier	r		1336107	1					
ANR	1336432	AssignmentExpression	r = psc -> pgetc ( psc -> file )		1336107	2		=			
ANR	1336433	Identifier	r		1336107	0					
ANR	1336434	CallExpression	psc -> pgetc ( psc -> file )		1336107	1					
ANR	1336435	Callee	psc -> pgetc		1336107	0					
ANR	1336436	PtrMemberAccess	psc -> pgetc		1336107	0					
ANR	1336437	Identifier	psc		1336107	0					
ANR	1336438	Identifier	pgetc		1336107	1					
ANR	1336439	ArgumentList	psc -> file		1336107	1					
ANR	1336440	Argument	psc -> file		1336107	0					
ANR	1336441	PtrMemberAccess	psc -> file		1336107	0					
ANR	1336442	Identifier	psc		1336107	0					
ANR	1336443	Identifier	file		1336107	1					
ANR	1336444	IfStatement	if ( r & 32 )		1336107	1					
ANR	1336445	Condition	r & 32	1090:28:29329:29334	1336107	0	True				
ANR	1336446	BitAndExpression	r & 32		1336107	0		&			
ANR	1336447	Identifier	r		1336107	0					
ANR	1336448	PrimaryExpression	32		1336107	1					
ANR	1336449	CompoundStatement		68:36:2721:2721	1336107	1					
ANR	1336450	ExpressionStatement	"pscompact_copy2 ( psc , c , r , 2 )"	1091:28:29367:29396	1336107	0	True				
ANR	1336451	CallExpression	"pscompact_copy2 ( psc , c , r , 2 )"		1336107	0					
ANR	1336452	Callee	pscompact_copy2		1336107	0					
ANR	1336453	Identifier	pscompact_copy2		1336107	0					
ANR	1336454	ArgumentList	psc		1336107	1					
ANR	1336455	Argument	psc		1336107	0					
ANR	1336456	Identifier	psc		1336107	0					
ANR	1336457	Argument	c		1336107	1					
ANR	1336458	Identifier	c		1336107	0					
ANR	1336459	Argument	r		1336107	2					
ANR	1336460	Identifier	r		1336107	0					
ANR	1336461	Argument	2		1336107	3					
ANR	1336462	PrimaryExpression	2		1336107	0					
ANR	1336463	ElseStatement	else		1336107	0					
ANR	1336464	CompoundStatement		70:31:2813:2813	1336107	0					
ANR	1336465	ExpressionStatement	"pscompact_copy2 ( psc , c , r , 4 )"	1093:28:29459:29488	1336107	0	True				
ANR	1336466	CallExpression	"pscompact_copy2 ( psc , c , r , 4 )"		1336107	0					
ANR	1336467	Callee	pscompact_copy2		1336107	0					
ANR	1336468	Identifier	pscompact_copy2		1336107	0					
ANR	1336469	ArgumentList	psc		1336107	1					
ANR	1336470	Argument	psc		1336107	0					
ANR	1336471	Identifier	psc		1336107	0					
ANR	1336472	Argument	c		1336107	1					
ANR	1336473	Identifier	c		1336107	0					
ANR	1336474	Argument	r		1336107	2					
ANR	1336475	Identifier	r		1336107	0					
ANR	1336476	Argument	4		1336107	3					
ANR	1336477	PrimaryExpression	4		1336107	0					
ANR	1336478	BreakStatement	break ;	1095:24:29540:29545	1336107	2	True				
ANR	1336479	ElseStatement	else		1336107	0					
ANR	1336480	IfStatement	if ( c == 142 )		1336107	0					
ANR	1336481	Condition	c == 142	1097:27:29596:29603	1336107	0	True				
ANR	1336482	EqualityExpression	c == 142		1336107	0		==			
ANR	1336483	Identifier	c		1336107	0					
ANR	1336484	PrimaryExpression	142		1336107	1					
ANR	1336485	CompoundStatement		75:37:2990:2990	1336107	1					
ANR	1336486	IfStatement	if ( psc -> inpos == 0 )		1336107	0					
ANR	1336487	Condition	psc -> inpos == 0	1099:24:29671:29685	1336107	0	True				
ANR	1336488	EqualityExpression	psc -> inpos == 0		1336107	0		==			
ANR	1336489	PtrMemberAccess	psc -> inpos		1336107	0					
ANR	1336490	Identifier	psc		1336107	0					
ANR	1336491	Identifier	inpos		1336107	1					
ANR	1336492	PrimaryExpression	0		1336107	1					
ANR	1336493	CompoundStatement		78:24:3098:3127	1336107	1					
ANR	1336494	IdentifierDeclStatement	int n = psc -> pgetc ( psc -> file ) ;	1100:24:29714:29743	1336107	0	True				
ANR	1336495	IdentifierDecl	n = psc -> pgetc ( psc -> file )		1336107	0					
ANR	1336496	IdentifierDeclType	int		1336107	0					
ANR	1336497	Identifier	n		1336107	1					
ANR	1336498	AssignmentExpression	n = psc -> pgetc ( psc -> file )		1336107	2		=			
ANR	1336499	Identifier	n		1336107	0					
ANR	1336500	CallExpression	psc -> pgetc ( psc -> file )		1336107	1					
ANR	1336501	Callee	psc -> pgetc		1336107	0					
ANR	1336502	PtrMemberAccess	psc -> pgetc		1336107	0					
ANR	1336503	Identifier	psc		1336107	0					
ANR	1336504	Identifier	pgetc		1336107	1					
ANR	1336505	ArgumentList	psc -> file		1336107	1					
ANR	1336506	Argument	psc -> file		1336107	0					
ANR	1336507	PtrMemberAccess	psc -> file		1336107	0					
ANR	1336508	Identifier	psc		1336107	0					
ANR	1336509	Identifier	file		1336107	1					
ANR	1336510	ExpressionStatement	"pscompact_copy2 ( psc , c , n , n )"	1101:24:29769:29798	1336107	1	True				
ANR	1336511	CallExpression	"pscompact_copy2 ( psc , c , n , n )"		1336107	0					
ANR	1336512	Callee	pscompact_copy2		1336107	0					
ANR	1336513	Identifier	pscompact_copy2		1336107	0					
ANR	1336514	ArgumentList	psc		1336107	1					
ANR	1336515	Argument	psc		1336107	0					
ANR	1336516	Identifier	psc		1336107	0					
ANR	1336517	Argument	c		1336107	1					
ANR	1336518	Identifier	c		1336107	0					
ANR	1336519	Argument	n		1336107	2					
ANR	1336520	Identifier	n		1336107	0					
ANR	1336521	Argument	n		1336107	3					
ANR	1336522	Identifier	n		1336107	0					
ANR	1336523	BreakStatement	break ;	1102:24:29824:29829	1336107	2	True				
ANR	1336524	ElseStatement	else		1336107	0					
ANR	1336525	IfStatement	if ( c == 143 )		1336107	0					
ANR	1336526	Condition	c == 143	1104:27:29880:29887	1336107	0	True				
ANR	1336527	EqualityExpression	c == 143		1336107	0		==			
ANR	1336528	Identifier	c		1336107	0					
ANR	1336529	PrimaryExpression	143		1336107	1					
ANR	1336530	CompoundStatement		82:37:3274:3274	1336107	1					
ANR	1336531	IfStatement	if ( psc -> inpos == 0 )		1336107	0					
ANR	1336532	Condition	psc -> inpos == 0	1106:24:29954:29968	1336107	0	True				
ANR	1336533	EqualityExpression	psc -> inpos == 0		1336107	0		==			
ANR	1336534	PtrMemberAccess	psc -> inpos		1336107	0					
ANR	1336535	Identifier	psc		1336107	0					
ANR	1336536	Identifier	inpos		1336107	1					
ANR	1336537	PrimaryExpression	0		1336107	1					
ANR	1336538	CompoundStatement		86:24:3437:3467	1336107	1					
ANR	1336539	IdentifierDeclStatement	int n1 = psc -> pgetc ( psc -> file ) ;	1107:24:29997:30027	1336107	0	True				
ANR	1336540	IdentifierDecl	n1 = psc -> pgetc ( psc -> file )		1336107	0					
ANR	1336541	IdentifierDeclType	int		1336107	0					
ANR	1336542	Identifier	n1		1336107	1					
ANR	1336543	AssignmentExpression	n1 = psc -> pgetc ( psc -> file )		1336107	2		=			
ANR	1336544	Identifier	n1		1336107	0					
ANR	1336545	CallExpression	psc -> pgetc ( psc -> file )		1336107	1					
ANR	1336546	Callee	psc -> pgetc		1336107	0					
ANR	1336547	PtrMemberAccess	psc -> pgetc		1336107	0					
ANR	1336548	Identifier	psc		1336107	0					
ANR	1336549	Identifier	pgetc		1336107	1					
ANR	1336550	ArgumentList	psc -> file		1336107	1					
ANR	1336551	Argument	psc -> file		1336107	0					
ANR	1336552	PtrMemberAccess	psc -> file		1336107	0					
ANR	1336553	Identifier	psc		1336107	0					
ANR	1336554	Identifier	file		1336107	1					
ANR	1336555	IdentifierDeclStatement	int n2 = psc -> pgetc ( psc -> file ) ;	1108:24:30053:30083	1336107	1	True				
ANR	1336556	IdentifierDecl	n2 = psc -> pgetc ( psc -> file )		1336107	0					
ANR	1336557	IdentifierDeclType	int		1336107	0					
ANR	1336558	Identifier	n2		1336107	1					
ANR	1336559	AssignmentExpression	n2 = psc -> pgetc ( psc -> file )		1336107	2		=			
ANR	1336560	Identifier	n2		1336107	0					
ANR	1336561	CallExpression	psc -> pgetc ( psc -> file )		1336107	1					
ANR	1336562	Callee	psc -> pgetc		1336107	0					
ANR	1336563	PtrMemberAccess	psc -> pgetc		1336107	0					
ANR	1336564	Identifier	psc		1336107	0					
ANR	1336565	Identifier	pgetc		1336107	1					
ANR	1336566	ArgumentList	psc -> file		1336107	1					
ANR	1336567	Argument	psc -> file		1336107	0					
ANR	1336568	PtrMemberAccess	psc -> file		1336107	0					
ANR	1336569	Identifier	psc		1336107	0					
ANR	1336570	Identifier	file		1336107	1					
ANR	1336571	ExpressionStatement	"pscompact_copy3 ( psc , c , n1 , n2 , ( n1 << 8 ) + n2 )"	1109:24:30109:30154	1336107	2	True				
ANR	1336572	CallExpression	"pscompact_copy3 ( psc , c , n1 , n2 , ( n1 << 8 ) + n2 )"		1336107	0					
ANR	1336573	Callee	pscompact_copy3		1336107	0					
ANR	1336574	Identifier	pscompact_copy3		1336107	0					
ANR	1336575	ArgumentList	psc		1336107	1					
ANR	1336576	Argument	psc		1336107	0					
ANR	1336577	Identifier	psc		1336107	0					
ANR	1336578	Argument	c		1336107	1					
ANR	1336579	Identifier	c		1336107	0					
ANR	1336580	Argument	n1		1336107	2					
ANR	1336581	Identifier	n1		1336107	0					
ANR	1336582	Argument	n2		1336107	3					
ANR	1336583	Identifier	n2		1336107	0					
ANR	1336584	Argument	( n1 << 8 ) + n2		1336107	4					
ANR	1336585	AdditiveExpression	( n1 << 8 ) + n2		1336107	0		+			
ANR	1336586	ShiftExpression	n1 << 8		1336107	0		<<			
ANR	1336587	Identifier	n1		1336107	0					
ANR	1336588	PrimaryExpression	8		1336107	1					
ANR	1336589	Identifier	n2		1336107	1					
ANR	1336590	BreakStatement	break ;	1110:24:30180:30185	1336107	3	True				
ANR	1336591	ElseStatement	else		1336107	0					
ANR	1336592	IfStatement	if ( c == 144 )		1336107	0					
ANR	1336593	Condition	c == 144	1112:27:30236:30243	1336107	0	True				
ANR	1336594	EqualityExpression	c == 144		1336107	0		==			
ANR	1336595	Identifier	c		1336107	0					
ANR	1336596	PrimaryExpression	144		1336107	1					
ANR	1336597	CompoundStatement		90:37:3630:3630	1336107	1					
ANR	1336598	IfStatement	if ( psc -> inpos == 0 )		1336107	0					
ANR	1336599	Condition	psc -> inpos == 0	1114:24:30310:30324	1336107	0	True				
ANR	1336600	EqualityExpression	psc -> inpos == 0		1336107	0		==			
ANR	1336601	PtrMemberAccess	psc -> inpos		1336107	0					
ANR	1336602	Identifier	psc		1336107	0					
ANR	1336603	Identifier	inpos		1336107	1					
ANR	1336604	PrimaryExpression	0		1336107	1					
ANR	1336605	CompoundStatement		94:24:3793:3823	1336107	1					
ANR	1336606	IdentifierDeclStatement	int n1 = psc -> pgetc ( psc -> file ) ;	1115:24:30353:30383	1336107	0	True				
ANR	1336607	IdentifierDecl	n1 = psc -> pgetc ( psc -> file )		1336107	0					
ANR	1336608	IdentifierDeclType	int		1336107	0					
ANR	1336609	Identifier	n1		1336107	1					
ANR	1336610	AssignmentExpression	n1 = psc -> pgetc ( psc -> file )		1336107	2		=			
ANR	1336611	Identifier	n1		1336107	0					
ANR	1336612	CallExpression	psc -> pgetc ( psc -> file )		1336107	1					
ANR	1336613	Callee	psc -> pgetc		1336107	0					
ANR	1336614	PtrMemberAccess	psc -> pgetc		1336107	0					
ANR	1336615	Identifier	psc		1336107	0					
ANR	1336616	Identifier	pgetc		1336107	1					
ANR	1336617	ArgumentList	psc -> file		1336107	1					
ANR	1336618	Argument	psc -> file		1336107	0					
ANR	1336619	PtrMemberAccess	psc -> file		1336107	0					
ANR	1336620	Identifier	psc		1336107	0					
ANR	1336621	Identifier	file		1336107	1					
ANR	1336622	IdentifierDeclStatement	int n2 = psc -> pgetc ( psc -> file ) ;	1116:24:30409:30439	1336107	1	True				
ANR	1336623	IdentifierDecl	n2 = psc -> pgetc ( psc -> file )		1336107	0					
ANR	1336624	IdentifierDeclType	int		1336107	0					
ANR	1336625	Identifier	n2		1336107	1					
ANR	1336626	AssignmentExpression	n2 = psc -> pgetc ( psc -> file )		1336107	2		=			
ANR	1336627	Identifier	n2		1336107	0					
ANR	1336628	CallExpression	psc -> pgetc ( psc -> file )		1336107	1					
ANR	1336629	Callee	psc -> pgetc		1336107	0					
ANR	1336630	PtrMemberAccess	psc -> pgetc		1336107	0					
ANR	1336631	Identifier	psc		1336107	0					
ANR	1336632	Identifier	pgetc		1336107	1					
ANR	1336633	ArgumentList	psc -> file		1336107	1					
ANR	1336634	Argument	psc -> file		1336107	0					
ANR	1336635	PtrMemberAccess	psc -> file		1336107	0					
ANR	1336636	Identifier	psc		1336107	0					
ANR	1336637	Identifier	file		1336107	1					
ANR	1336638	ExpressionStatement	"pscompact_copy3 ( psc , c , n1 , n2 , n1 + ( n2 << 8 ) )"	1117:24:30465:30510	1336107	2	True				
ANR	1336639	CallExpression	"pscompact_copy3 ( psc , c , n1 , n2 , n1 + ( n2 << 8 ) )"		1336107	0					
ANR	1336640	Callee	pscompact_copy3		1336107	0					
ANR	1336641	Identifier	pscompact_copy3		1336107	0					
ANR	1336642	ArgumentList	psc		1336107	1					
ANR	1336643	Argument	psc		1336107	0					
ANR	1336644	Identifier	psc		1336107	0					
ANR	1336645	Argument	c		1336107	1					
ANR	1336646	Identifier	c		1336107	0					
ANR	1336647	Argument	n1		1336107	2					
ANR	1336648	Identifier	n1		1336107	0					
ANR	1336649	Argument	n2		1336107	3					
ANR	1336650	Identifier	n2		1336107	0					
ANR	1336651	Argument	n1 + ( n2 << 8 )		1336107	4					
ANR	1336652	AdditiveExpression	n1 + ( n2 << 8 )		1336107	0		+			
ANR	1336653	Identifier	n1		1336107	0					
ANR	1336654	ShiftExpression	n2 << 8		1336107	1		<<			
ANR	1336655	Identifier	n2		1336107	0					
ANR	1336656	PrimaryExpression	8		1336107	1					
ANR	1336657	BreakStatement	break ;	1118:24:30536:30541	1336107	3	True				
ANR	1336658	ElseStatement	else		1336107	0					
ANR	1336659	IfStatement	if ( ( c >= 149 ) && ( c <= 159 ) )		1336107	0					
ANR	1336660	Condition	( c >= 149 ) && ( c <= 159 )	1120:27:30592:30615	1336107	0	True				
ANR	1336661	AndExpression	( c >= 149 ) && ( c <= 159 )		1336107	0		&&			
ANR	1336662	RelationalExpression	c >= 149		1336107	0		>=			
ANR	1336663	Identifier	c		1336107	0					
ANR	1336664	PrimaryExpression	149		1336107	1					
ANR	1336665	RelationalExpression	c <= 159		1336107	1		<=			
ANR	1336666	Identifier	c		1336107	0					
ANR	1336667	PrimaryExpression	159		1336107	1					
ANR	1336668	CompoundStatement		98:53:4002:4002	1336107	1					
ANR	1336669	ExpressionStatement	"fprintf ( stderr , ""Can't compact files with binary postscript byte %d in!"" , c )"	1121:20:30640:30716	1336107	0	True				
ANR	1336670	CallExpression	"fprintf ( stderr , ""Can't compact files with binary postscript byte %d in!"" , c )"		1336107	0					
ANR	1336671	Callee	fprintf		1336107	0					
ANR	1336672	Identifier	fprintf		1336107	0					
ANR	1336673	ArgumentList	stderr		1336107	1					
ANR	1336674	Argument	stderr		1336107	0					
ANR	1336675	Identifier	stderr		1336107	0					
ANR	1336676	Argument	"""Can't compact files with binary postscript byte %d in!"""		1336107	1					
ANR	1336677	PrimaryExpression	"""Can't compact files with binary postscript byte %d in!"""		1336107	0					
ANR	1336678	Argument	c		1336107	2					
ANR	1336679	Identifier	c		1336107	0					
ANR	1336680	ExpressionStatement	exit ( 1 )	1122:20:30738:30745	1336107	1	True				
ANR	1336681	CallExpression	exit ( 1 )		1336107	0					
ANR	1336682	Callee	exit		1336107	0					
ANR	1336683	Identifier	exit		1336107	0					
ANR	1336684	ArgumentList	1		1336107	1					
ANR	1336685	Argument	1		1336107	0					
ANR	1336686	PrimaryExpression	1		1336107	0					
ANR	1336687	ElseStatement	else		1336107	0					
ANR	1336688	IfStatement	if ( c == '%' )		1336107	0					
ANR	1336689	Condition	c == '%'	1123:27:30774:30781	1336107	0	True				
ANR	1336690	EqualityExpression	c == '%'		1336107	0		==			
ANR	1336691	Identifier	c		1336107	0					
ANR	1336692	PrimaryExpression	'%'		1336107	1					
ANR	1336693	CompoundStatement		101:37:4168:4168	1336107	1					
ANR	1336694	IfStatement	if ( psc -> inpos == 0 )		1336107	0					
ANR	1336695	Condition	psc -> inpos == 0	1124:24:30810:30824	1336107	0	True				
ANR	1336696	EqualityExpression	psc -> inpos == 0		1336107	0		==			
ANR	1336697	PtrMemberAccess	psc -> inpos		1336107	0					
ANR	1336698	Identifier	psc		1336107	0					
ANR	1336699	Identifier	inpos		1336107	1					
ANR	1336700	PrimaryExpression	0		1336107	1					
ANR	1336701	CompoundStatement		102:41:4211:4211	1336107	1					
ANR	1336702	ExpressionStatement	psc -> state = PSC_InComment	1125:24:30853:30879	1336107	0	True				
ANR	1336703	AssignmentExpression	psc -> state = PSC_InComment		1336107	0		=			
ANR	1336704	PtrMemberAccess	psc -> state		1336107	0					
ANR	1336705	Identifier	psc		1336107	0					
ANR	1336706	Identifier	state		1336107	1					
ANR	1336707	Identifier	PSC_InComment		1336107	1					
ANR	1336708	BreakStatement	break ;	1126:24:30905:30910	1336107	1	True				
ANR	1336709	ElseStatement	else		1336107	0					
ANR	1336710	IfStatement	if ( c == '<' )		1336107	0					
ANR	1336711	Condition	c == '<'	1128:27:30961:30968	1336107	0	True				
ANR	1336712	EqualityExpression	c == '<'		1336107	0		==			
ANR	1336713	Identifier	c		1336107	0					
ANR	1336714	PrimaryExpression	'<'		1336107	1					
ANR	1336715	CompoundStatement		106:37:4355:4355	1336107	1					
ANR	1336716	IfStatement	if ( psc -> inpos == 0 )		1336107	0					
ANR	1336717	Condition	psc -> inpos == 0	1129:24:30997:31011	1336107	0	True				
ANR	1336718	EqualityExpression	psc -> inpos == 0		1336107	0		==			
ANR	1336719	PtrMemberAccess	psc -> inpos		1336107	0					
ANR	1336720	Identifier	psc		1336107	0					
ANR	1336721	Identifier	inpos		1336107	1					
ANR	1336722	PrimaryExpression	0		1336107	1					
ANR	1336723	CompoundStatement		107:41:4398:4398	1336107	1					
ANR	1336724	ExpressionStatement	psc -> state = PSC_InHexString	1130:24:31040:31068	1336107	0	True				
ANR	1336725	AssignmentExpression	psc -> state = PSC_InHexString		1336107	0		=			
ANR	1336726	PtrMemberAccess	psc -> state		1336107	0					
ANR	1336727	Identifier	psc		1336107	0					
ANR	1336728	Identifier	state		1336107	1					
ANR	1336729	Identifier	PSC_InHexString		1336107	1					
ANR	1336730	BreakStatement	break ;	1131:24:31094:31099	1336107	1	True				
ANR	1336731	ElseStatement	else		1336107	0					
ANR	1336732	IfStatement	if ( ( c == '/' ) && ( psc -> inpos > 0 ) && ( psc -> bufferin [ psc -> inpos - 1 ] != '/' ) )		1336107	0					
ANR	1336733	Condition	( c == '/' ) && ( psc -> inpos > 0 ) && ( psc -> bufferin [ psc -> inpos - 1 ] != '/' )	1133:27:31150:31273	1336107	0	True				
ANR	1336734	AndExpression	( c == '/' ) && ( psc -> inpos > 0 ) && ( psc -> bufferin [ psc -> inpos - 1 ] != '/' )		1336107	0		&&			
ANR	1336735	EqualityExpression	c == '/'		1336107	0		==			
ANR	1336736	Identifier	c		1336107	0					
ANR	1336737	PrimaryExpression	'/'		1336107	1					
ANR	1336738	AndExpression	( psc -> inpos > 0 ) && ( psc -> bufferin [ psc -> inpos - 1 ] != '/' )		1336107	1		&&			
ANR	1336739	RelationalExpression	psc -> inpos > 0		1336107	0		>			
ANR	1336740	PtrMemberAccess	psc -> inpos		1336107	0					
ANR	1336741	Identifier	psc		1336107	0					
ANR	1336742	Identifier	inpos		1336107	1					
ANR	1336743	PrimaryExpression	0		1336107	1					
ANR	1336744	EqualityExpression	psc -> bufferin [ psc -> inpos - 1 ] != '/'		1336107	1		!=			
ANR	1336745	ArrayIndexing	psc -> bufferin [ psc -> inpos - 1 ]		1336107	0					
ANR	1336746	PtrMemberAccess	psc -> bufferin		1336107	0					
ANR	1336747	Identifier	psc		1336107	0					
ANR	1336748	Identifier	bufferin		1336107	1					
ANR	1336749	AdditiveExpression	psc -> inpos - 1		1336107	1		-			
ANR	1336750	PtrMemberAccess	psc -> inpos		1336107	0					
ANR	1336751	Identifier	psc		1336107	0					
ANR	1336752	Identifier	inpos		1336107	1					
ANR	1336753	PrimaryExpression	1		1336107	1					
ANR	1336754	PrimaryExpression	'/'		1336107	1					
ANR	1336755	CompoundStatement		113:65:4660:4660	1336107	1					
ANR	1336756	ElseStatement	else		1336107	0					
ANR	1336757	CompoundStatement		116:23:4797:4797	1336107	0					
ANR	1336758	ExpressionStatement	"pscompact_buffer ( psc , c )"	1140:20:31498:31522	1336107	0	True				
ANR	1336759	CallExpression	"pscompact_buffer ( psc , c )"		1336107	0					
ANR	1336760	Callee	pscompact_buffer		1336107	0					
ANR	1336761	Identifier	pscompact_buffer		1336107	0					
ANR	1336762	ArgumentList	psc		1336107	1					
ANR	1336763	Argument	psc		1336107	0					
ANR	1336764	Identifier	psc		1336107	0					
ANR	1336765	Argument	c		1336107	1					
ANR	1336766	Identifier	c		1336107	0					
ANR	1336767	BreakStatement	break ;	1141:20:31544:31549	1336107	1	True				
ANR	1336768	IfStatement	if ( c > 32 )		1336107	3					
ANR	1336769	Condition	c > 32	1145:20:31737:31742	1336107	0	True				
ANR	1336770	RelationalExpression	c > 32		1336107	0		>			
ANR	1336771	Identifier	c		1336107	0					
ANR	1336772	PrimaryExpression	32		1336107	1					
ANR	1336773	CompoundStatement		123:28:5129:5129	1336107	1					
ANR	1336774	ExpressionStatement	"psc -> unpgetc ( c , psc -> file )"	1147:20:31839:31865	1336107	0	True				
ANR	1336775	CallExpression	"psc -> unpgetc ( c , psc -> file )"		1336107	0					
ANR	1336776	Callee	psc -> unpgetc		1336107	0					
ANR	1336777	PtrMemberAccess	psc -> unpgetc		1336107	0					
ANR	1336778	Identifier	psc		1336107	0					
ANR	1336779	Identifier	unpgetc		1336107	1					
ANR	1336780	ArgumentList	c		1336107	1					
ANR	1336781	Argument	c		1336107	0					
ANR	1336782	Identifier	c		1336107	0					
ANR	1336783	Argument	psc -> file		1336107	1					
ANR	1336784	PtrMemberAccess	psc -> file		1336107	0					
ANR	1336785	Identifier	psc		1336107	0					
ANR	1336786	Identifier	file		1336107	1					
ANR	1336787	IfStatement	if ( psc -> binary )		1336107	4					
ANR	1336788	Condition	psc -> binary	1149:20:31905:31915	1336107	0	True				
ANR	1336789	PtrMemberAccess	psc -> binary		1336107	0					
ANR	1336790	Identifier	psc		1336107	0					
ANR	1336791	Identifier	binary		1336107	1					
ANR	1336792	CompoundStatement		129:20:5351:5358	1336107	1					
ANR	1336793	IdentifierDeclStatement	int i ;	1150:20:31940:31945	1336107	0	True				
ANR	1336794	IdentifierDecl	i		1336107	0					
ANR	1336795	IdentifierDeclType	int		1336107	0					
ANR	1336796	Identifier	i		1336107	1					
ANR	1336797	IdentifierDeclStatement	float f ;	1151:20:31967:31974	1336107	1	True				
ANR	1336798	IdentifierDecl	f		1336107	0					
ANR	1336799	IdentifierDeclType	float		1336107	0					
ANR	1336800	Identifier	f		1336107	1					
ANR	1336801	IfStatement	"if ( pscompact_isint ( psc , & i ) )"		1336107	2					
ANR	1336802	Condition	"pscompact_isint ( psc , & i )"	1153:24:32042:32065	1336107	0	True				
ANR	1336803	CallExpression	"pscompact_isint ( psc , & i )"		1336107	0					
ANR	1336804	Callee	pscompact_isint		1336107	0					
ANR	1336805	Identifier	pscompact_isint		1336107	0					
ANR	1336806	ArgumentList	psc		1336107	1					
ANR	1336807	Argument	psc		1336107	0					
ANR	1336808	Identifier	psc		1336107	0					
ANR	1336809	Argument	& i		1336107	1					
ANR	1336810	UnaryOperationExpression	& i		1336107	0					
ANR	1336811	UnaryOperator	&		1336107	0					
ANR	1336812	Identifier	i		1336107	1					
ANR	1336813	CompoundStatement		131:50:5452:5452	1336107	1					
ANR	1336814	IfStatement	if ( psc -> firstnum )		1336107	0					
ANR	1336815	Condition	psc -> firstnum	1154:28:32098:32110	1336107	0	True				
ANR	1336816	PtrMemberAccess	psc -> firstnum		1336107	0					
ANR	1336817	Identifier	psc		1336107	0					
ANR	1336818	Identifier	firstnum		1336107	1					
ANR	1336819	CompoundStatement		132:43:5497:5497	1336107	1					
ANR	1336820	ExpressionStatement	psc -> firstnum = 0	1156:28:32216:32233	1336107	0	True				
ANR	1336821	AssignmentExpression	psc -> firstnum = 0		1336107	0		=			
ANR	1336822	PtrMemberAccess	psc -> firstnum		1336107	0					
ANR	1336823	Identifier	psc		1336107	0					
ANR	1336824	Identifier	firstnum		1336107	1					
ANR	1336825	PrimaryExpression	0		1336107	1					
ANR	1336826	ElseStatement	else		1336107	0					
ANR	1336827	IfStatement	if ( ( i >= - 128 ) && ( i <= 127 ) )		1336107	0					
ANR	1336828	Condition	( i >= - 128 ) && ( i <= 127 )	1157:35:32270:32294	1336107	0	True				
ANR	1336829	AndExpression	( i >= - 128 ) && ( i <= 127 )		1336107	0		&&			
ANR	1336830	RelationalExpression	i >= - 128		1336107	0		>=			
ANR	1336831	Identifier	i		1336107	0					
ANR	1336832	UnaryOperationExpression	- 128		1336107	1					
ANR	1336833	UnaryOperator	-		1336107	0					
ANR	1336834	PrimaryExpression	128		1336107	1					
ANR	1336835	RelationalExpression	i <= 127		1336107	1		<=			
ANR	1336836	Identifier	i		1336107	0					
ANR	1336837	PrimaryExpression	127		1336107	1					
ANR	1336838	CompoundStatement		135:62:5681:5681	1336107	1					
ANR	1336839	ExpressionStatement	psc -> bufferout [ 0 ] = 136	1159:28:32387:32410	1336107	0	True				
ANR	1336840	AssignmentExpression	psc -> bufferout [ 0 ] = 136		1336107	0		=			
ANR	1336841	ArrayIndexing	psc -> bufferout [ 0 ]		1336107	0					
ANR	1336842	PtrMemberAccess	psc -> bufferout		1336107	0					
ANR	1336843	Identifier	psc		1336107	0					
ANR	1336844	Identifier	bufferout		1336107	1					
ANR	1336845	PrimaryExpression	0		1336107	1					
ANR	1336846	PrimaryExpression	136		1336107	1					
ANR	1336847	ExpressionStatement	psc -> bufferout [ 1 ] = i & 255	1160:28:32440:32467	1336107	1	True				
ANR	1336848	AssignmentExpression	psc -> bufferout [ 1 ] = i & 255		1336107	0		=			
ANR	1336849	ArrayIndexing	psc -> bufferout [ 1 ]		1336107	0					
ANR	1336850	PtrMemberAccess	psc -> bufferout		1336107	0					
ANR	1336851	Identifier	psc		1336107	0					
ANR	1336852	Identifier	bufferout		1336107	1					
ANR	1336853	PrimaryExpression	1		1336107	1					
ANR	1336854	BitAndExpression	i & 255		1336107	1		&			
ANR	1336855	Identifier	i		1336107	0					
ANR	1336856	PrimaryExpression	255		1336107	1					
ANR	1336857	ExpressionStatement	psc -> inpos = 0	1161:28:32497:32511	1336107	2	True				
ANR	1336858	AssignmentExpression	psc -> inpos = 0		1336107	0		=			
ANR	1336859	PtrMemberAccess	psc -> inpos		1336107	0					
ANR	1336860	Identifier	psc		1336107	0					
ANR	1336861	Identifier	inpos		1336107	1					
ANR	1336862	PrimaryExpression	0		1336107	1					
ANR	1336863	ExpressionStatement	psc -> outend = 2	1162:28:32541:32556	1336107	3	True				
ANR	1336864	AssignmentExpression	psc -> outend = 2		1336107	0		=			
ANR	1336865	PtrMemberAccess	psc -> outend		1336107	0					
ANR	1336866	Identifier	psc		1336107	0					
ANR	1336867	Identifier	outend		1336107	1					
ANR	1336868	PrimaryExpression	2		1336107	1					
ANR	1336869	ExpressionStatement	psc -> wasascii = 0	1163:28:32586:32603	1336107	4	True				
ANR	1336870	AssignmentExpression	psc -> wasascii = 0		1336107	0		=			
ANR	1336871	PtrMemberAccess	psc -> wasascii		1336107	0					
ANR	1336872	Identifier	psc		1336107	0					
ANR	1336873	Identifier	wasascii		1336107	1					
ANR	1336874	PrimaryExpression	0		1336107	1					
ANR	1336875	ExpressionStatement	psc -> noescape = 1	1164:28:32633:32650	1336107	5	True				
ANR	1336876	AssignmentExpression	psc -> noescape = 1		1336107	0		=			
ANR	1336877	PtrMemberAccess	psc -> noescape		1336107	0					
ANR	1336878	Identifier	psc		1336107	0					
ANR	1336879	Identifier	noescape		1336107	1					
ANR	1336880	PrimaryExpression	1		1336107	1					
ANR	1336881	ExpressionStatement	psc -> state = PSC_BufferOut	1165:28:32680:32706	1336107	6	True				
ANR	1336882	AssignmentExpression	psc -> state = PSC_BufferOut		1336107	0		=			
ANR	1336883	PtrMemberAccess	psc -> state		1336107	0					
ANR	1336884	Identifier	psc		1336107	0					
ANR	1336885	Identifier	state		1336107	1					
ANR	1336886	Identifier	PSC_BufferOut		1336107	1					
ANR	1336887	BreakStatement	break ;	1166:28:32736:32741	1336107	7	True				
ANR	1336888	ElseStatement	else		1336107	0					
ANR	1336889	IfStatement	if ( ( i >= - 0x8000 ) && ( i <= 0x7FFF ) )		1336107	0					
ANR	1336890	Condition	( i >= - 0x8000 ) && ( i <= 0x7FFF )	1167:35:32778:32808	1336107	0	True				
ANR	1336891	AndExpression	( i >= - 0x8000 ) && ( i <= 0x7FFF )		1336107	0		&&			
ANR	1336892	RelationalExpression	i >= - 0x8000		1336107	0		>=			
ANR	1336893	Identifier	i		1336107	0					
ANR	1336894	UnaryOperationExpression	- 0x8000		1336107	1					
ANR	1336895	UnaryOperator	-		1336107	0					
ANR	1336896	PrimaryExpression	0x8000		1336107	1					
ANR	1336897	RelationalExpression	i <= 0x7FFF		1336107	1		<=			
ANR	1336898	Identifier	i		1336107	0					
ANR	1336899	PrimaryExpression	0x7FFF		1336107	1					
ANR	1336900	CompoundStatement		145:68:6195:6195	1336107	1					
ANR	1336901	ExpressionStatement	psc -> bufferout [ 0 ] = 135	1169:28:32902:32925	1336107	0	True				
ANR	1336902	AssignmentExpression	psc -> bufferout [ 0 ] = 135		1336107	0		=			
ANR	1336903	ArrayIndexing	psc -> bufferout [ 0 ]		1336107	0					
ANR	1336904	PtrMemberAccess	psc -> bufferout		1336107	0					
ANR	1336905	Identifier	psc		1336107	0					
ANR	1336906	Identifier	bufferout		1336107	1					
ANR	1336907	PrimaryExpression	0		1336107	1					
ANR	1336908	PrimaryExpression	135		1336107	1					
ANR	1336909	ExpressionStatement	psc -> bufferout [ 1 ] = i & 255	1170:28:32955:32982	1336107	1	True				
ANR	1336910	AssignmentExpression	psc -> bufferout [ 1 ] = i & 255		1336107	0		=			
ANR	1336911	ArrayIndexing	psc -> bufferout [ 1 ]		1336107	0					
ANR	1336912	PtrMemberAccess	psc -> bufferout		1336107	0					
ANR	1336913	Identifier	psc		1336107	0					
ANR	1336914	Identifier	bufferout		1336107	1					
ANR	1336915	PrimaryExpression	1		1336107	1					
ANR	1336916	BitAndExpression	i & 255		1336107	1		&			
ANR	1336917	Identifier	i		1336107	0					
ANR	1336918	PrimaryExpression	255		1336107	1					
ANR	1336919	ExpressionStatement	psc -> bufferout [ 2 ] = ( i >> 8 ) & 255	1171:28:33012:33044	1336107	2	True				
ANR	1336920	AssignmentExpression	psc -> bufferout [ 2 ] = ( i >> 8 ) & 255		1336107	0		=			
ANR	1336921	ArrayIndexing	psc -> bufferout [ 2 ]		1336107	0					
ANR	1336922	PtrMemberAccess	psc -> bufferout		1336107	0					
ANR	1336923	Identifier	psc		1336107	0					
ANR	1336924	Identifier	bufferout		1336107	1					
ANR	1336925	PrimaryExpression	2		1336107	1					
ANR	1336926	BitAndExpression	( i >> 8 ) & 255		1336107	1		&			
ANR	1336927	ShiftExpression	i >> 8		1336107	0		>>			
ANR	1336928	Identifier	i		1336107	0					
ANR	1336929	PrimaryExpression	8		1336107	1					
ANR	1336930	PrimaryExpression	255		1336107	1					
ANR	1336931	ExpressionStatement	psc -> inpos = 0	1172:28:33074:33088	1336107	3	True				
ANR	1336932	AssignmentExpression	psc -> inpos = 0		1336107	0		=			
ANR	1336933	PtrMemberAccess	psc -> inpos		1336107	0					
ANR	1336934	Identifier	psc		1336107	0					
ANR	1336935	Identifier	inpos		1336107	1					
ANR	1336936	PrimaryExpression	0		1336107	1					
ANR	1336937	ExpressionStatement	psc -> outpos = 0	1173:28:33118:33133	1336107	4	True				
ANR	1336938	AssignmentExpression	psc -> outpos = 0		1336107	0		=			
ANR	1336939	PtrMemberAccess	psc -> outpos		1336107	0					
ANR	1336940	Identifier	psc		1336107	0					
ANR	1336941	Identifier	outpos		1336107	1					
ANR	1336942	PrimaryExpression	0		1336107	1					
ANR	1336943	ExpressionStatement	psc -> outend = 3	1174:28:33163:33178	1336107	5	True				
ANR	1336944	AssignmentExpression	psc -> outend = 3		1336107	0		=			
ANR	1336945	PtrMemberAccess	psc -> outend		1336107	0					
ANR	1336946	Identifier	psc		1336107	0					
ANR	1336947	Identifier	outend		1336107	1					
ANR	1336948	PrimaryExpression	3		1336107	1					
ANR	1336949	ExpressionStatement	psc -> wasascii = 0	1175:28:33208:33225	1336107	6	True				
ANR	1336950	AssignmentExpression	psc -> wasascii = 0		1336107	0		=			
ANR	1336951	PtrMemberAccess	psc -> wasascii		1336107	0					
ANR	1336952	Identifier	psc		1336107	0					
ANR	1336953	Identifier	wasascii		1336107	1					
ANR	1336954	PrimaryExpression	0		1336107	1					
ANR	1336955	ExpressionStatement	psc -> noescape = 1	1176:28:33255:33272	1336107	7	True				
ANR	1336956	AssignmentExpression	psc -> noescape = 1		1336107	0		=			
ANR	1336957	PtrMemberAccess	psc -> noescape		1336107	0					
ANR	1336958	Identifier	psc		1336107	0					
ANR	1336959	Identifier	noescape		1336107	1					
ANR	1336960	PrimaryExpression	1		1336107	1					
ANR	1336961	ExpressionStatement	psc -> state = PSC_BufferOut	1177:28:33302:33328	1336107	8	True				
ANR	1336962	AssignmentExpression	psc -> state = PSC_BufferOut		1336107	0		=			
ANR	1336963	PtrMemberAccess	psc -> state		1336107	0					
ANR	1336964	Identifier	psc		1336107	0					
ANR	1336965	Identifier	state		1336107	1					
ANR	1336966	Identifier	PSC_BufferOut		1336107	1					
ANR	1336967	BreakStatement	break ;	1178:28:33358:33363	1336107	9	True				
ANR	1336968	ElseStatement	else		1336107	0					
ANR	1336969	CompoundStatement		157:31:6780:6780	1336107	0					
ANR	1336970	ExpressionStatement	psc -> bufferout [ 0 ] = 133	1181:28:33487:33510	1336107	0	True				
ANR	1336971	AssignmentExpression	psc -> bufferout [ 0 ] = 133		1336107	0		=			
ANR	1336972	ArrayIndexing	psc -> bufferout [ 0 ]		1336107	0					
ANR	1336973	PtrMemberAccess	psc -> bufferout		1336107	0					
ANR	1336974	Identifier	psc		1336107	0					
ANR	1336975	Identifier	bufferout		1336107	1					
ANR	1336976	PrimaryExpression	0		1336107	1					
ANR	1336977	PrimaryExpression	133		1336107	1					
ANR	1336978	ExpressionStatement	psc -> bufferout [ 1 ] = i & 255	1182:28:33540:33567	1336107	1	True				
ANR	1336979	AssignmentExpression	psc -> bufferout [ 1 ] = i & 255		1336107	0		=			
ANR	1336980	ArrayIndexing	psc -> bufferout [ 1 ]		1336107	0					
ANR	1336981	PtrMemberAccess	psc -> bufferout		1336107	0					
ANR	1336982	Identifier	psc		1336107	0					
ANR	1336983	Identifier	bufferout		1336107	1					
ANR	1336984	PrimaryExpression	1		1336107	1					
ANR	1336985	BitAndExpression	i & 255		1336107	1		&			
ANR	1336986	Identifier	i		1336107	0					
ANR	1336987	PrimaryExpression	255		1336107	1					
ANR	1336988	ExpressionStatement	psc -> bufferout [ 2 ] = ( i >> 8 ) & 255	1183:28:33597:33629	1336107	2	True				
ANR	1336989	AssignmentExpression	psc -> bufferout [ 2 ] = ( i >> 8 ) & 255		1336107	0		=			
ANR	1336990	ArrayIndexing	psc -> bufferout [ 2 ]		1336107	0					
ANR	1336991	PtrMemberAccess	psc -> bufferout		1336107	0					
ANR	1336992	Identifier	psc		1336107	0					
ANR	1336993	Identifier	bufferout		1336107	1					
ANR	1336994	PrimaryExpression	2		1336107	1					
ANR	1336995	BitAndExpression	( i >> 8 ) & 255		1336107	1		&			
ANR	1336996	ShiftExpression	i >> 8		1336107	0		>>			
ANR	1336997	Identifier	i		1336107	0					
ANR	1336998	PrimaryExpression	8		1336107	1					
ANR	1336999	PrimaryExpression	255		1336107	1					
ANR	1337000	ExpressionStatement	psc -> bufferout [ 3 ] = ( i >> 16 ) & 255	1184:28:33659:33692	1336107	3	True				
ANR	1337001	AssignmentExpression	psc -> bufferout [ 3 ] = ( i >> 16 ) & 255		1336107	0		=			
ANR	1337002	ArrayIndexing	psc -> bufferout [ 3 ]		1336107	0					
ANR	1337003	PtrMemberAccess	psc -> bufferout		1336107	0					
ANR	1337004	Identifier	psc		1336107	0					
ANR	1337005	Identifier	bufferout		1336107	1					
ANR	1337006	PrimaryExpression	3		1336107	1					
ANR	1337007	BitAndExpression	( i >> 16 ) & 255		1336107	1		&			
ANR	1337008	ShiftExpression	i >> 16		1336107	0		>>			
ANR	1337009	Identifier	i		1336107	0					
ANR	1337010	PrimaryExpression	16		1336107	1					
ANR	1337011	PrimaryExpression	255		1336107	1					
ANR	1337012	ExpressionStatement	psc -> bufferout [ 4 ] = ( i >> 24 ) & 255	1185:28:33722:33755	1336107	4	True				
ANR	1337013	AssignmentExpression	psc -> bufferout [ 4 ] = ( i >> 24 ) & 255		1336107	0		=			
ANR	1337014	ArrayIndexing	psc -> bufferout [ 4 ]		1336107	0					
ANR	1337015	PtrMemberAccess	psc -> bufferout		1336107	0					
ANR	1337016	Identifier	psc		1336107	0					
ANR	1337017	Identifier	bufferout		1336107	1					
ANR	1337018	PrimaryExpression	4		1336107	1					
ANR	1337019	BitAndExpression	( i >> 24 ) & 255		1336107	1		&			
ANR	1337020	ShiftExpression	i >> 24		1336107	0		>>			
ANR	1337021	Identifier	i		1336107	0					
ANR	1337022	PrimaryExpression	24		1336107	1					
ANR	1337023	PrimaryExpression	255		1336107	1					
ANR	1337024	ExpressionStatement	psc -> inpos = 0	1186:28:33785:33799	1336107	5	True				
ANR	1337025	AssignmentExpression	psc -> inpos = 0		1336107	0		=			
ANR	1337026	PtrMemberAccess	psc -> inpos		1336107	0					
ANR	1337027	Identifier	psc		1336107	0					
ANR	1337028	Identifier	inpos		1336107	1					
ANR	1337029	PrimaryExpression	0		1336107	1					
ANR	1337030	ExpressionStatement	psc -> outpos = 0	1187:28:33829:33844	1336107	6	True				
ANR	1337031	AssignmentExpression	psc -> outpos = 0		1336107	0		=			
ANR	1337032	PtrMemberAccess	psc -> outpos		1336107	0					
ANR	1337033	Identifier	psc		1336107	0					
ANR	1337034	Identifier	outpos		1336107	1					
ANR	1337035	PrimaryExpression	0		1336107	1					
ANR	1337036	ExpressionStatement	psc -> outend = 5	1188:28:33874:33889	1336107	7	True				
ANR	1337037	AssignmentExpression	psc -> outend = 5		1336107	0		=			
ANR	1337038	PtrMemberAccess	psc -> outend		1336107	0					
ANR	1337039	Identifier	psc		1336107	0					
ANR	1337040	Identifier	outend		1336107	1					
ANR	1337041	PrimaryExpression	5		1336107	1					
ANR	1337042	ExpressionStatement	psc -> wasascii = 0	1189:28:33919:33936	1336107	8	True				
ANR	1337043	AssignmentExpression	psc -> wasascii = 0		1336107	0		=			
ANR	1337044	PtrMemberAccess	psc -> wasascii		1336107	0					
ANR	1337045	Identifier	psc		1336107	0					
ANR	1337046	Identifier	wasascii		1336107	1					
ANR	1337047	PrimaryExpression	0		1336107	1					
ANR	1337048	ExpressionStatement	psc -> noescape = 1	1190:28:33966:33983	1336107	9	True				
ANR	1337049	AssignmentExpression	psc -> noescape = 1		1336107	0		=			
ANR	1337050	PtrMemberAccess	psc -> noescape		1336107	0					
ANR	1337051	Identifier	psc		1336107	0					
ANR	1337052	Identifier	noescape		1336107	1					
ANR	1337053	PrimaryExpression	1		1336107	1					
ANR	1337054	ExpressionStatement	psc -> state = PSC_BufferOut	1191:28:34013:34039	1336107	10	True				
ANR	1337055	AssignmentExpression	psc -> state = PSC_BufferOut		1336107	0		=			
ANR	1337056	PtrMemberAccess	psc -> state		1336107	0					
ANR	1337057	Identifier	psc		1336107	0					
ANR	1337058	Identifier	state		1336107	1					
ANR	1337059	Identifier	PSC_BufferOut		1336107	1					
ANR	1337060	BreakStatement	break ;	1192:28:34069:34074	1336107	11	True				
ANR	1337061	ElseStatement	else		1336107	0					
ANR	1337062	IfStatement	"if ( ( sizeof ( float ) == 4 ) && pscompact_isfloat ( psc , & f ) )"		1336107	0					
ANR	1337063	Condition	"( sizeof ( float ) == 4 ) && pscompact_isfloat ( psc , & f )"	1194:31:34133:34182	1336107	0	True				
ANR	1337064	AndExpression	"( sizeof ( float ) == 4 ) && pscompact_isfloat ( psc , & f )"		1336107	0		&&			
ANR	1337065	EqualityExpression	sizeof ( float ) == 4		1336107	0		==			
ANR	1337066	SizeofExpression	sizeof ( float )		1336107	0					
ANR	1337067	Sizeof	sizeof		1336107	0					
ANR	1337068	SizeofOperand	float		1336107	1					
ANR	1337069	PrimaryExpression	4		1336107	1					
ANR	1337070	CallExpression	"pscompact_isfloat ( psc , & f )"		1336107	1					
ANR	1337071	Callee	pscompact_isfloat		1336107	0					
ANR	1337072	Identifier	pscompact_isfloat		1336107	0					
ANR	1337073	ArgumentList	psc		1336107	1					
ANR	1337074	Argument	psc		1336107	0					
ANR	1337075	Identifier	psc		1336107	0					
ANR	1337076	Argument	& f		1336107	1					
ANR	1337077	UnaryOperationExpression	& f		1336107	0					
ANR	1337078	UnaryOperator	&		1336107	0					
ANR	1337079	Identifier	f		1336107	1					
ANR	1337080	CompoundStatement		174:24:7650:7771	1336107	1					
ANR	1337081	ClassDefStatement	union { float f ; unsigned char c [ 4 ] ; } fc ;	1196:24:34266:34387	1336107	0	True				
ANR	1337082	IdentifierDecl	fc		1336107	0					
ANR	1337083	IdentifierDeclType			1336107	0					
ANR	1337084	Identifier	fc		1336107	1					
ANR	1337085	ExpressionStatement	fc . f = 1.0	1200:24:34413:34423	1336107	1	True				
ANR	1337086	AssignmentExpression	fc . f = 1.0		1336107	0		=			
ANR	1337087	MemberAccess	fc . f		1336107	0					
ANR	1337088	Identifier	fc		1336107	0					
ANR	1337089	Identifier	f		1336107	1					
ANR	1337090	PrimaryExpression	1.0		1336107	1					
ANR	1337091	IfStatement	if ( ( fc . c [ 0 ] == 0 ) && ( fc . c [ 1 ] == 0 ) && ( fc . c [ 2 ] == 0x80 ) && ( fc . c [ 3 ] == 0x3f ) )		1336107	2					
ANR	1337092	Condition	( fc . c [ 0 ] == 0 ) && ( fc . c [ 1 ] == 0 ) && ( fc . c [ 2 ] == 0x80 ) && ( fc . c [ 3 ] == 0x3f )	1201:28:34453:34554	1336107	0	True				
ANR	1337093	AndExpression	( fc . c [ 0 ] == 0 ) && ( fc . c [ 1 ] == 0 ) && ( fc . c [ 2 ] == 0x80 ) && ( fc . c [ 3 ] == 0x3f )		1336107	0		&&			
ANR	1337094	EqualityExpression	fc . c [ 0 ] == 0		1336107	0		==			
ANR	1337095	ArrayIndexing	fc . c [ 0 ]		1336107	0					
ANR	1337096	MemberAccess	fc . c		1336107	0					
ANR	1337097	Identifier	fc		1336107	0					
ANR	1337098	Identifier	c		1336107	1					
ANR	1337099	PrimaryExpression	0		1336107	1					
ANR	1337100	PrimaryExpression	0		1336107	1					
ANR	1337101	AndExpression	( fc . c [ 1 ] == 0 ) && ( fc . c [ 2 ] == 0x80 ) && ( fc . c [ 3 ] == 0x3f )		1336107	1		&&			
ANR	1337102	EqualityExpression	fc . c [ 1 ] == 0		1336107	0		==			
ANR	1337103	ArrayIndexing	fc . c [ 1 ]		1336107	0					
ANR	1337104	MemberAccess	fc . c		1336107	0					
ANR	1337105	Identifier	fc		1336107	0					
ANR	1337106	Identifier	c		1336107	1					
ANR	1337107	PrimaryExpression	1		1336107	1					
ANR	1337108	PrimaryExpression	0		1336107	1					
ANR	1337109	AndExpression	( fc . c [ 2 ] == 0x80 ) && ( fc . c [ 3 ] == 0x3f )		1336107	1		&&			
ANR	1337110	EqualityExpression	fc . c [ 2 ] == 0x80		1336107	0		==			
ANR	1337111	ArrayIndexing	fc . c [ 2 ]		1336107	0					
ANR	1337112	MemberAccess	fc . c		1336107	0					
ANR	1337113	Identifier	fc		1336107	0					
ANR	1337114	Identifier	c		1336107	1					
ANR	1337115	PrimaryExpression	2		1336107	1					
ANR	1337116	PrimaryExpression	0x80		1336107	1					
ANR	1337117	EqualityExpression	fc . c [ 3 ] == 0x3f		1336107	1		==			
ANR	1337118	ArrayIndexing	fc . c [ 3 ]		1336107	0					
ANR	1337119	MemberAccess	fc . c		1336107	0					
ANR	1337120	Identifier	fc		1336107	0					
ANR	1337121	Identifier	c		1336107	1					
ANR	1337122	PrimaryExpression	3		1336107	1					
ANR	1337123	PrimaryExpression	0x3f		1336107	1					
ANR	1337124	CompoundStatement		180:68:7941:7941	1336107	1					
ANR	1337125	ExpressionStatement	fc . f = f	1203:28:34587:34595	1336107	0	True				
ANR	1337126	AssignmentExpression	fc . f = f		1336107	0		=			
ANR	1337127	MemberAccess	fc . f		1336107	0					
ANR	1337128	Identifier	fc		1336107	0					
ANR	1337129	Identifier	f		1336107	1					
ANR	1337130	Identifier	f		1336107	1					
ANR	1337131	ExpressionStatement	psc -> bufferout [ 0 ] = 139	1204:28:34625:34648	1336107	1	True				
ANR	1337132	AssignmentExpression	psc -> bufferout [ 0 ] = 139		1336107	0		=			
ANR	1337133	ArrayIndexing	psc -> bufferout [ 0 ]		1336107	0					
ANR	1337134	PtrMemberAccess	psc -> bufferout		1336107	0					
ANR	1337135	Identifier	psc		1336107	0					
ANR	1337136	Identifier	bufferout		1336107	1					
ANR	1337137	PrimaryExpression	0		1336107	1					
ANR	1337138	PrimaryExpression	139		1336107	1					
ANR	1337139	ExpressionStatement	psc -> bufferout [ 1 ] = ( char ) fc . c [ 0 ]	1205:28:34678:34711	1336107	2	True				
ANR	1337140	AssignmentExpression	psc -> bufferout [ 1 ] = ( char ) fc . c [ 0 ]		1336107	0		=			
ANR	1337141	ArrayIndexing	psc -> bufferout [ 1 ]		1336107	0					
ANR	1337142	PtrMemberAccess	psc -> bufferout		1336107	0					
ANR	1337143	Identifier	psc		1336107	0					
ANR	1337144	Identifier	bufferout		1336107	1					
ANR	1337145	PrimaryExpression	1		1336107	1					
ANR	1337146	CastExpression	( char ) fc . c [ 0 ]		1336107	1					
ANR	1337147	CastTarget	char		1336107	0					
ANR	1337148	ArrayIndexing	fc . c [ 0 ]		1336107	1					
ANR	1337149	MemberAccess	fc . c		1336107	0					
ANR	1337150	Identifier	fc		1336107	0					
ANR	1337151	Identifier	c		1336107	1					
ANR	1337152	PrimaryExpression	0		1336107	1					
ANR	1337153	ExpressionStatement	psc -> bufferout [ 2 ] = ( char ) fc . c [ 1 ]	1206:28:34741:34774	1336107	3	True				
ANR	1337154	AssignmentExpression	psc -> bufferout [ 2 ] = ( char ) fc . c [ 1 ]		1336107	0		=			
ANR	1337155	ArrayIndexing	psc -> bufferout [ 2 ]		1336107	0					
ANR	1337156	PtrMemberAccess	psc -> bufferout		1336107	0					
ANR	1337157	Identifier	psc		1336107	0					
ANR	1337158	Identifier	bufferout		1336107	1					
ANR	1337159	PrimaryExpression	2		1336107	1					
ANR	1337160	CastExpression	( char ) fc . c [ 1 ]		1336107	1					
ANR	1337161	CastTarget	char		1336107	0					
ANR	1337162	ArrayIndexing	fc . c [ 1 ]		1336107	1					
ANR	1337163	MemberAccess	fc . c		1336107	0					
ANR	1337164	Identifier	fc		1336107	0					
ANR	1337165	Identifier	c		1336107	1					
ANR	1337166	PrimaryExpression	1		1336107	1					
ANR	1337167	ExpressionStatement	psc -> bufferout [ 3 ] = ( char ) fc . c [ 2 ]	1207:28:34804:34837	1336107	4	True				
ANR	1337168	AssignmentExpression	psc -> bufferout [ 3 ] = ( char ) fc . c [ 2 ]		1336107	0		=			
ANR	1337169	ArrayIndexing	psc -> bufferout [ 3 ]		1336107	0					
ANR	1337170	PtrMemberAccess	psc -> bufferout		1336107	0					
ANR	1337171	Identifier	psc		1336107	0					
ANR	1337172	Identifier	bufferout		1336107	1					
ANR	1337173	PrimaryExpression	3		1336107	1					
ANR	1337174	CastExpression	( char ) fc . c [ 2 ]		1336107	1					
ANR	1337175	CastTarget	char		1336107	0					
ANR	1337176	ArrayIndexing	fc . c [ 2 ]		1336107	1					
ANR	1337177	MemberAccess	fc . c		1336107	0					
ANR	1337178	Identifier	fc		1336107	0					
ANR	1337179	Identifier	c		1336107	1					
ANR	1337180	PrimaryExpression	2		1336107	1					
ANR	1337181	ExpressionStatement	psc -> bufferout [ 4 ] = ( char ) fc . c [ 3 ]	1208:28:34867:34900	1336107	5	True				
ANR	1337182	AssignmentExpression	psc -> bufferout [ 4 ] = ( char ) fc . c [ 3 ]		1336107	0		=			
ANR	1337183	ArrayIndexing	psc -> bufferout [ 4 ]		1336107	0					
ANR	1337184	PtrMemberAccess	psc -> bufferout		1336107	0					
ANR	1337185	Identifier	psc		1336107	0					
ANR	1337186	Identifier	bufferout		1336107	1					
ANR	1337187	PrimaryExpression	4		1336107	1					
ANR	1337188	CastExpression	( char ) fc . c [ 3 ]		1336107	1					
ANR	1337189	CastTarget	char		1336107	0					
ANR	1337190	ArrayIndexing	fc . c [ 3 ]		1336107	1					
ANR	1337191	MemberAccess	fc . c		1336107	0					
ANR	1337192	Identifier	fc		1336107	0					
ANR	1337193	Identifier	c		1336107	1					
ANR	1337194	PrimaryExpression	3		1336107	1					
ANR	1337195	ExpressionStatement	psc -> inpos = 0	1209:28:34930:34944	1336107	6	True				
ANR	1337196	AssignmentExpression	psc -> inpos = 0		1336107	0		=			
ANR	1337197	PtrMemberAccess	psc -> inpos		1336107	0					
ANR	1337198	Identifier	psc		1336107	0					
ANR	1337199	Identifier	inpos		1336107	1					
ANR	1337200	PrimaryExpression	0		1336107	1					
ANR	1337201	ExpressionStatement	psc -> outpos = 0	1210:28:34974:34989	1336107	7	True				
ANR	1337202	AssignmentExpression	psc -> outpos = 0		1336107	0		=			
ANR	1337203	PtrMemberAccess	psc -> outpos		1336107	0					
ANR	1337204	Identifier	psc		1336107	0					
ANR	1337205	Identifier	outpos		1336107	1					
ANR	1337206	PrimaryExpression	0		1336107	1					
ANR	1337207	ExpressionStatement	psc -> outend = 5	1211:28:35019:35034	1336107	8	True				
ANR	1337208	AssignmentExpression	psc -> outend = 5		1336107	0		=			
ANR	1337209	PtrMemberAccess	psc -> outend		1336107	0					
ANR	1337210	Identifier	psc		1336107	0					
ANR	1337211	Identifier	outend		1336107	1					
ANR	1337212	PrimaryExpression	5		1336107	1					
ANR	1337213	ExpressionStatement	psc -> wasascii = 0	1212:28:35064:35081	1336107	9	True				
ANR	1337214	AssignmentExpression	psc -> wasascii = 0		1336107	0		=			
ANR	1337215	PtrMemberAccess	psc -> wasascii		1336107	0					
ANR	1337216	Identifier	psc		1336107	0					
ANR	1337217	Identifier	wasascii		1336107	1					
ANR	1337218	PrimaryExpression	0		1336107	1					
ANR	1337219	ExpressionStatement	psc -> noescape = 1	1213:28:35111:35128	1336107	10	True				
ANR	1337220	AssignmentExpression	psc -> noescape = 1		1336107	0		=			
ANR	1337221	PtrMemberAccess	psc -> noescape		1336107	0					
ANR	1337222	Identifier	psc		1336107	0					
ANR	1337223	Identifier	noescape		1336107	1					
ANR	1337224	PrimaryExpression	1		1336107	1					
ANR	1337225	ExpressionStatement	psc -> state = PSC_BufferOut	1214:28:35158:35184	1336107	11	True				
ANR	1337226	AssignmentExpression	psc -> state = PSC_BufferOut		1336107	0		=			
ANR	1337227	PtrMemberAccess	psc -> state		1336107	0					
ANR	1337228	Identifier	psc		1336107	0					
ANR	1337229	Identifier	state		1336107	1					
ANR	1337230	Identifier	PSC_BufferOut		1336107	1					
ANR	1337231	BreakStatement	break ;	1215:28:35214:35219	1336107	12	True				
ANR	1337232	ElseStatement	else		1336107	0					
ANR	1337233	IfStatement	if ( ( fc . c [ 0 ] == 0x3f ) && ( fc . c [ 1 ] == 0x80 ) && ( fc . c [ 2 ] == 0 ) && ( fc . c [ 3 ] == 0 ) )		1336107	0					
ANR	1337234	Condition	( fc . c [ 0 ] == 0x3f ) && ( fc . c [ 1 ] == 0x80 ) && ( fc . c [ 2 ] == 0 ) && ( fc . c [ 3 ] == 0 )	1216:35:35256:35364	1336107	0	True				
ANR	1337235	AndExpression	( fc . c [ 0 ] == 0x3f ) && ( fc . c [ 1 ] == 0x80 ) && ( fc . c [ 2 ] == 0 ) && ( fc . c [ 3 ] == 0 )		1336107	0		&&			
ANR	1337236	EqualityExpression	fc . c [ 0 ] == 0x3f		1336107	0		==			
ANR	1337237	ArrayIndexing	fc . c [ 0 ]		1336107	0					
ANR	1337238	MemberAccess	fc . c		1336107	0					
ANR	1337239	Identifier	fc		1336107	0					
ANR	1337240	Identifier	c		1336107	1					
ANR	1337241	PrimaryExpression	0		1336107	1					
ANR	1337242	PrimaryExpression	0x3f		1336107	1					
ANR	1337243	AndExpression	( fc . c [ 1 ] == 0x80 ) && ( fc . c [ 2 ] == 0 ) && ( fc . c [ 3 ] == 0 )		1336107	1		&&			
ANR	1337244	EqualityExpression	fc . c [ 1 ] == 0x80		1336107	0		==			
ANR	1337245	ArrayIndexing	fc . c [ 1 ]		1336107	0					
ANR	1337246	MemberAccess	fc . c		1336107	0					
ANR	1337247	Identifier	fc		1336107	0					
ANR	1337248	Identifier	c		1336107	1					
ANR	1337249	PrimaryExpression	1		1336107	1					
ANR	1337250	PrimaryExpression	0x80		1336107	1					
ANR	1337251	AndExpression	( fc . c [ 2 ] == 0 ) && ( fc . c [ 3 ] == 0 )		1336107	1		&&			
ANR	1337252	EqualityExpression	fc . c [ 2 ] == 0		1336107	0		==			
ANR	1337253	ArrayIndexing	fc . c [ 2 ]		1336107	0					
ANR	1337254	MemberAccess	fc . c		1336107	0					
ANR	1337255	Identifier	fc		1336107	0					
ANR	1337256	Identifier	c		1336107	1					
ANR	1337257	PrimaryExpression	2		1336107	1					
ANR	1337258	PrimaryExpression	0		1336107	1					
ANR	1337259	EqualityExpression	fc . c [ 3 ] == 0		1336107	1		==			
ANR	1337260	ArrayIndexing	fc . c [ 3 ]		1336107	0					
ANR	1337261	MemberAccess	fc . c		1336107	0					
ANR	1337262	Identifier	fc		1336107	0					
ANR	1337263	Identifier	c		1336107	1					
ANR	1337264	PrimaryExpression	3		1336107	1					
ANR	1337265	PrimaryExpression	0		1336107	1					
ANR	1337266	CompoundStatement		195:69:8751:8751	1336107	1					
ANR	1337267	ExpressionStatement	fc . f = f	1218:28:35397:35405	1336107	0	True				
ANR	1337268	AssignmentExpression	fc . f = f		1336107	0		=			
ANR	1337269	MemberAccess	fc . f		1336107	0					
ANR	1337270	Identifier	fc		1336107	0					
ANR	1337271	Identifier	f		1336107	1					
ANR	1337272	Identifier	f		1336107	1					
ANR	1337273	ExpressionStatement	psc -> bufferout [ 0 ] = 139	1219:28:35435:35458	1336107	1	True				
ANR	1337274	AssignmentExpression	psc -> bufferout [ 0 ] = 139		1336107	0		=			
ANR	1337275	ArrayIndexing	psc -> bufferout [ 0 ]		1336107	0					
ANR	1337276	PtrMemberAccess	psc -> bufferout		1336107	0					
ANR	1337277	Identifier	psc		1336107	0					
ANR	1337278	Identifier	bufferout		1336107	1					
ANR	1337279	PrimaryExpression	0		1336107	1					
ANR	1337280	PrimaryExpression	139		1336107	1					
ANR	1337281	ExpressionStatement	psc -> bufferout [ 1 ] = ( char ) fc . c [ 3 ]	1220:28:35488:35521	1336107	2	True				
ANR	1337282	AssignmentExpression	psc -> bufferout [ 1 ] = ( char ) fc . c [ 3 ]		1336107	0		=			
ANR	1337283	ArrayIndexing	psc -> bufferout [ 1 ]		1336107	0					
ANR	1337284	PtrMemberAccess	psc -> bufferout		1336107	0					
ANR	1337285	Identifier	psc		1336107	0					
ANR	1337286	Identifier	bufferout		1336107	1					
ANR	1337287	PrimaryExpression	1		1336107	1					
ANR	1337288	CastExpression	( char ) fc . c [ 3 ]		1336107	1					
ANR	1337289	CastTarget	char		1336107	0					
ANR	1337290	ArrayIndexing	fc . c [ 3 ]		1336107	1					
ANR	1337291	MemberAccess	fc . c		1336107	0					
ANR	1337292	Identifier	fc		1336107	0					
ANR	1337293	Identifier	c		1336107	1					
ANR	1337294	PrimaryExpression	3		1336107	1					
ANR	1337295	ExpressionStatement	psc -> bufferout [ 2 ] = ( char ) fc . c [ 2 ]	1221:28:35551:35584	1336107	3	True				
ANR	1337296	AssignmentExpression	psc -> bufferout [ 2 ] = ( char ) fc . c [ 2 ]		1336107	0		=			
ANR	1337297	ArrayIndexing	psc -> bufferout [ 2 ]		1336107	0					
ANR	1337298	PtrMemberAccess	psc -> bufferout		1336107	0					
ANR	1337299	Identifier	psc		1336107	0					
ANR	1337300	Identifier	bufferout		1336107	1					
ANR	1337301	PrimaryExpression	2		1336107	1					
ANR	1337302	CastExpression	( char ) fc . c [ 2 ]		1336107	1					
ANR	1337303	CastTarget	char		1336107	0					
ANR	1337304	ArrayIndexing	fc . c [ 2 ]		1336107	1					
ANR	1337305	MemberAccess	fc . c		1336107	0					
ANR	1337306	Identifier	fc		1336107	0					
ANR	1337307	Identifier	c		1336107	1					
ANR	1337308	PrimaryExpression	2		1336107	1					
ANR	1337309	ExpressionStatement	psc -> bufferout [ 3 ] = ( char ) fc . c [ 1 ]	1222:28:35614:35647	1336107	4	True				
ANR	1337310	AssignmentExpression	psc -> bufferout [ 3 ] = ( char ) fc . c [ 1 ]		1336107	0		=			
ANR	1337311	ArrayIndexing	psc -> bufferout [ 3 ]		1336107	0					
ANR	1337312	PtrMemberAccess	psc -> bufferout		1336107	0					
ANR	1337313	Identifier	psc		1336107	0					
ANR	1337314	Identifier	bufferout		1336107	1					
ANR	1337315	PrimaryExpression	3		1336107	1					
ANR	1337316	CastExpression	( char ) fc . c [ 1 ]		1336107	1					
ANR	1337317	CastTarget	char		1336107	0					
ANR	1337318	ArrayIndexing	fc . c [ 1 ]		1336107	1					
ANR	1337319	MemberAccess	fc . c		1336107	0					
ANR	1337320	Identifier	fc		1336107	0					
ANR	1337321	Identifier	c		1336107	1					
ANR	1337322	PrimaryExpression	1		1336107	1					
ANR	1337323	ExpressionStatement	psc -> bufferout [ 4 ] = ( char ) fc . c [ 0 ]	1223:28:35677:35710	1336107	5	True				
ANR	1337324	AssignmentExpression	psc -> bufferout [ 4 ] = ( char ) fc . c [ 0 ]		1336107	0		=			
ANR	1337325	ArrayIndexing	psc -> bufferout [ 4 ]		1336107	0					
ANR	1337326	PtrMemberAccess	psc -> bufferout		1336107	0					
ANR	1337327	Identifier	psc		1336107	0					
ANR	1337328	Identifier	bufferout		1336107	1					
ANR	1337329	PrimaryExpression	4		1336107	1					
ANR	1337330	CastExpression	( char ) fc . c [ 0 ]		1336107	1					
ANR	1337331	CastTarget	char		1336107	0					
ANR	1337332	ArrayIndexing	fc . c [ 0 ]		1336107	1					
ANR	1337333	MemberAccess	fc . c		1336107	0					
ANR	1337334	Identifier	fc		1336107	0					
ANR	1337335	Identifier	c		1336107	1					
ANR	1337336	PrimaryExpression	0		1336107	1					
ANR	1337337	ExpressionStatement	psc -> inpos = 0	1224:28:35740:35754	1336107	6	True				
ANR	1337338	AssignmentExpression	psc -> inpos = 0		1336107	0		=			
ANR	1337339	PtrMemberAccess	psc -> inpos		1336107	0					
ANR	1337340	Identifier	psc		1336107	0					
ANR	1337341	Identifier	inpos		1336107	1					
ANR	1337342	PrimaryExpression	0		1336107	1					
ANR	1337343	ExpressionStatement	psc -> outpos = 0	1225:28:35784:35799	1336107	7	True				
ANR	1337344	AssignmentExpression	psc -> outpos = 0		1336107	0		=			
ANR	1337345	PtrMemberAccess	psc -> outpos		1336107	0					
ANR	1337346	Identifier	psc		1336107	0					
ANR	1337347	Identifier	outpos		1336107	1					
ANR	1337348	PrimaryExpression	0		1336107	1					
ANR	1337349	ExpressionStatement	psc -> outend = 5	1226:28:35829:35844	1336107	8	True				
ANR	1337350	AssignmentExpression	psc -> outend = 5		1336107	0		=			
ANR	1337351	PtrMemberAccess	psc -> outend		1336107	0					
ANR	1337352	Identifier	psc		1336107	0					
ANR	1337353	Identifier	outend		1336107	1					
ANR	1337354	PrimaryExpression	5		1336107	1					
ANR	1337355	ExpressionStatement	psc -> wasascii = 0	1227:28:35874:35891	1336107	9	True				
ANR	1337356	AssignmentExpression	psc -> wasascii = 0		1336107	0		=			
ANR	1337357	PtrMemberAccess	psc -> wasascii		1336107	0					
ANR	1337358	Identifier	psc		1336107	0					
ANR	1337359	Identifier	wasascii		1336107	1					
ANR	1337360	PrimaryExpression	0		1336107	1					
ANR	1337361	ExpressionStatement	psc -> noescape = 1	1228:28:35921:35938	1336107	10	True				
ANR	1337362	AssignmentExpression	psc -> noescape = 1		1336107	0		=			
ANR	1337363	PtrMemberAccess	psc -> noescape		1336107	0					
ANR	1337364	Identifier	psc		1336107	0					
ANR	1337365	Identifier	noescape		1336107	1					
ANR	1337366	PrimaryExpression	1		1336107	1					
ANR	1337367	ExpressionStatement	psc -> state = PSC_BufferOut	1229:28:35968:35994	1336107	11	True				
ANR	1337368	AssignmentExpression	psc -> state = PSC_BufferOut		1336107	0		=			
ANR	1337369	PtrMemberAccess	psc -> state		1336107	0					
ANR	1337370	Identifier	psc		1336107	0					
ANR	1337371	Identifier	state		1336107	1					
ANR	1337372	Identifier	PSC_BufferOut		1336107	1					
ANR	1337373	BreakStatement	break ;	1230:28:36024:36029	1336107	12	True				
ANR	1337374	IfStatement	"if ( ( psc -> inpos == 4 ) && ( strncmp ( psc -> bufferin , ""true"" , 4 ) == 0 ) )"		1336107	3					
ANR	1337375	Condition	"( psc -> inpos == 4 ) && ( strncmp ( psc -> bufferin , ""true"" , 4 ) == 0 )"	1233:24:36103:36187	1336107	0	True				
ANR	1337376	AndExpression	"( psc -> inpos == 4 ) && ( strncmp ( psc -> bufferin , ""true"" , 4 ) == 0 )"		1336107	0		&&			
ANR	1337377	EqualityExpression	psc -> inpos == 4		1336107	0		==			
ANR	1337378	PtrMemberAccess	psc -> inpos		1336107	0					
ANR	1337379	Identifier	psc		1336107	0					
ANR	1337380	Identifier	inpos		1336107	1					
ANR	1337381	PrimaryExpression	4		1336107	1					
ANR	1337382	EqualityExpression	"strncmp ( psc -> bufferin , ""true"" , 4 ) == 0"		1336107	1		==			
ANR	1337383	CallExpression	"strncmp ( psc -> bufferin , ""true"" , 4 )"		1336107	0					
ANR	1337384	Callee	strncmp		1336107	0					
ANR	1337385	Identifier	strncmp		1336107	0					
ANR	1337386	ArgumentList	psc -> bufferin		1336107	1					
ANR	1337387	Argument	psc -> bufferin		1336107	0					
ANR	1337388	PtrMemberAccess	psc -> bufferin		1336107	0					
ANR	1337389	Identifier	psc		1336107	0					
ANR	1337390	Identifier	bufferin		1336107	1					
ANR	1337391	Argument	"""true"""		1336107	1					
ANR	1337392	PrimaryExpression	"""true"""		1336107	0					
ANR	1337393	Argument	4		1336107	2					
ANR	1337394	PrimaryExpression	4		1336107	0					
ANR	1337395	PrimaryExpression	0		1336107	1					
ANR	1337396	CompoundStatement		212:66:9574:9574	1336107	1					
ANR	1337397	ExpressionStatement	psc -> bufferout [ 0 ] = 141	1236:24:36273:36296	1336107	0	True				
ANR	1337398	AssignmentExpression	psc -> bufferout [ 0 ] = 141		1336107	0		=			
ANR	1337399	ArrayIndexing	psc -> bufferout [ 0 ]		1336107	0					
ANR	1337400	PtrMemberAccess	psc -> bufferout		1336107	0					
ANR	1337401	Identifier	psc		1336107	0					
ANR	1337402	Identifier	bufferout		1336107	1					
ANR	1337403	PrimaryExpression	0		1336107	1					
ANR	1337404	PrimaryExpression	141		1336107	1					
ANR	1337405	ExpressionStatement	psc -> bufferout [ 1 ] = 1	1237:24:36322:36343	1336107	1	True				
ANR	1337406	AssignmentExpression	psc -> bufferout [ 1 ] = 1		1336107	0		=			
ANR	1337407	ArrayIndexing	psc -> bufferout [ 1 ]		1336107	0					
ANR	1337408	PtrMemberAccess	psc -> bufferout		1336107	0					
ANR	1337409	Identifier	psc		1336107	0					
ANR	1337410	Identifier	bufferout		1336107	1					
ANR	1337411	PrimaryExpression	1		1336107	1					
ANR	1337412	PrimaryExpression	1		1336107	1					
ANR	1337413	ExpressionStatement	psc -> inpos = 0	1238:24:36369:36383	1336107	2	True				
ANR	1337414	AssignmentExpression	psc -> inpos = 0		1336107	0		=			
ANR	1337415	PtrMemberAccess	psc -> inpos		1336107	0					
ANR	1337416	Identifier	psc		1336107	0					
ANR	1337417	Identifier	inpos		1336107	1					
ANR	1337418	PrimaryExpression	0		1336107	1					
ANR	1337419	ExpressionStatement	psc -> outpos = 0	1239:24:36409:36424	1336107	3	True				
ANR	1337420	AssignmentExpression	psc -> outpos = 0		1336107	0		=			
ANR	1337421	PtrMemberAccess	psc -> outpos		1336107	0					
ANR	1337422	Identifier	psc		1336107	0					
ANR	1337423	Identifier	outpos		1336107	1					
ANR	1337424	PrimaryExpression	0		1336107	1					
ANR	1337425	ExpressionStatement	psc -> outend = 2	1240:24:36450:36465	1336107	4	True				
ANR	1337426	AssignmentExpression	psc -> outend = 2		1336107	0		=			
ANR	1337427	PtrMemberAccess	psc -> outend		1336107	0					
ANR	1337428	Identifier	psc		1336107	0					
ANR	1337429	Identifier	outend		1336107	1					
ANR	1337430	PrimaryExpression	2		1336107	1					
ANR	1337431	ExpressionStatement	psc -> wasascii = 0	1241:24:36491:36508	1336107	5	True				
ANR	1337432	AssignmentExpression	psc -> wasascii = 0		1336107	0		=			
ANR	1337433	PtrMemberAccess	psc -> wasascii		1336107	0					
ANR	1337434	Identifier	psc		1336107	0					
ANR	1337435	Identifier	wasascii		1336107	1					
ANR	1337436	PrimaryExpression	0		1336107	1					
ANR	1337437	ExpressionStatement	psc -> noescape = 1	1242:24:36534:36551	1336107	6	True				
ANR	1337438	AssignmentExpression	psc -> noescape = 1		1336107	0		=			
ANR	1337439	PtrMemberAccess	psc -> noescape		1336107	0					
ANR	1337440	Identifier	psc		1336107	0					
ANR	1337441	Identifier	noescape		1336107	1					
ANR	1337442	PrimaryExpression	1		1336107	1					
ANR	1337443	ExpressionStatement	psc -> state = PSC_BufferOut	1243:24:36577:36603	1336107	7	True				
ANR	1337444	AssignmentExpression	psc -> state = PSC_BufferOut		1336107	0		=			
ANR	1337445	PtrMemberAccess	psc -> state		1336107	0					
ANR	1337446	Identifier	psc		1336107	0					
ANR	1337447	Identifier	state		1336107	1					
ANR	1337448	Identifier	PSC_BufferOut		1336107	1					
ANR	1337449	BreakStatement	break ;	1244:24:36629:36634	1336107	8	True				
ANR	1337450	IfStatement	"if ( ( psc -> inpos == 5 ) && ( strncmp ( psc -> bufferin , ""false"" , 5 ) == 0 ) )"		1336107	4					
ANR	1337451	Condition	"( psc -> inpos == 5 ) && ( strncmp ( psc -> bufferin , ""false"" , 5 ) == 0 )"	1246:24:36682:36767	1336107	0	True				
ANR	1337452	AndExpression	"( psc -> inpos == 5 ) && ( strncmp ( psc -> bufferin , ""false"" , 5 ) == 0 )"		1336107	0		&&			
ANR	1337453	EqualityExpression	psc -> inpos == 5		1336107	0		==			
ANR	1337454	PtrMemberAccess	psc -> inpos		1336107	0					
ANR	1337455	Identifier	psc		1336107	0					
ANR	1337456	Identifier	inpos		1336107	1					
ANR	1337457	PrimaryExpression	5		1336107	1					
ANR	1337458	EqualityExpression	"strncmp ( psc -> bufferin , ""false"" , 5 ) == 0"		1336107	1		==			
ANR	1337459	CallExpression	"strncmp ( psc -> bufferin , ""false"" , 5 )"		1336107	0					
ANR	1337460	Callee	strncmp		1336107	0					
ANR	1337461	Identifier	strncmp		1336107	0					
ANR	1337462	ArgumentList	psc -> bufferin		1336107	1					
ANR	1337463	Argument	psc -> bufferin		1336107	0					
ANR	1337464	PtrMemberAccess	psc -> bufferin		1336107	0					
ANR	1337465	Identifier	psc		1336107	0					
ANR	1337466	Identifier	bufferin		1336107	1					
ANR	1337467	Argument	"""false"""		1336107	1					
ANR	1337468	PrimaryExpression	"""false"""		1336107	0					
ANR	1337469	Argument	5		1336107	2					
ANR	1337470	PrimaryExpression	5		1336107	0					
ANR	1337471	PrimaryExpression	0		1336107	1					
ANR	1337472	CompoundStatement		225:67:10154:10154	1336107	1					
ANR	1337473	ExpressionStatement	psc -> bufferout [ 0 ] = 141	1249:24:36853:36876	1336107	0	True				
ANR	1337474	AssignmentExpression	psc -> bufferout [ 0 ] = 141		1336107	0		=			
ANR	1337475	ArrayIndexing	psc -> bufferout [ 0 ]		1336107	0					
ANR	1337476	PtrMemberAccess	psc -> bufferout		1336107	0					
ANR	1337477	Identifier	psc		1336107	0					
ANR	1337478	Identifier	bufferout		1336107	1					
ANR	1337479	PrimaryExpression	0		1336107	1					
ANR	1337480	PrimaryExpression	141		1336107	1					
ANR	1337481	ExpressionStatement	psc -> bufferout [ 1 ] = 0	1250:24:36902:36923	1336107	1	True				
ANR	1337482	AssignmentExpression	psc -> bufferout [ 1 ] = 0		1336107	0		=			
ANR	1337483	ArrayIndexing	psc -> bufferout [ 1 ]		1336107	0					
ANR	1337484	PtrMemberAccess	psc -> bufferout		1336107	0					
ANR	1337485	Identifier	psc		1336107	0					
ANR	1337486	Identifier	bufferout		1336107	1					
ANR	1337487	PrimaryExpression	1		1336107	1					
ANR	1337488	PrimaryExpression	0		1336107	1					
ANR	1337489	ExpressionStatement	psc -> inpos = 0	1251:24:36949:36963	1336107	2	True				
ANR	1337490	AssignmentExpression	psc -> inpos = 0		1336107	0		=			
ANR	1337491	PtrMemberAccess	psc -> inpos		1336107	0					
ANR	1337492	Identifier	psc		1336107	0					
ANR	1337493	Identifier	inpos		1336107	1					
ANR	1337494	PrimaryExpression	0		1336107	1					
ANR	1337495	ExpressionStatement	psc -> outpos = 0	1252:24:36989:37004	1336107	3	True				
ANR	1337496	AssignmentExpression	psc -> outpos = 0		1336107	0		=			
ANR	1337497	PtrMemberAccess	psc -> outpos		1336107	0					
ANR	1337498	Identifier	psc		1336107	0					
ANR	1337499	Identifier	outpos		1336107	1					
ANR	1337500	PrimaryExpression	0		1336107	1					
ANR	1337501	ExpressionStatement	psc -> outend = 2	1253:24:37030:37045	1336107	4	True				
ANR	1337502	AssignmentExpression	psc -> outend = 2		1336107	0		=			
ANR	1337503	PtrMemberAccess	psc -> outend		1336107	0					
ANR	1337504	Identifier	psc		1336107	0					
ANR	1337505	Identifier	outend		1336107	1					
ANR	1337506	PrimaryExpression	2		1336107	1					
ANR	1337507	ExpressionStatement	psc -> wasascii = 0	1254:24:37071:37088	1336107	5	True				
ANR	1337508	AssignmentExpression	psc -> wasascii = 0		1336107	0		=			
ANR	1337509	PtrMemberAccess	psc -> wasascii		1336107	0					
ANR	1337510	Identifier	psc		1336107	0					
ANR	1337511	Identifier	wasascii		1336107	1					
ANR	1337512	PrimaryExpression	0		1336107	1					
ANR	1337513	ExpressionStatement	psc -> noescape = 1	1255:24:37114:37131	1336107	6	True				
ANR	1337514	AssignmentExpression	psc -> noescape = 1		1336107	0		=			
ANR	1337515	PtrMemberAccess	psc -> noescape		1336107	0					
ANR	1337516	Identifier	psc		1336107	0					
ANR	1337517	Identifier	noescape		1336107	1					
ANR	1337518	PrimaryExpression	1		1336107	1					
ANR	1337519	ExpressionStatement	psc -> state = PSC_BufferOut	1256:24:37157:37183	1336107	7	True				
ANR	1337520	AssignmentExpression	psc -> state = PSC_BufferOut		1336107	0		=			
ANR	1337521	PtrMemberAccess	psc -> state		1336107	0					
ANR	1337522	Identifier	psc		1336107	0					
ANR	1337523	Identifier	state		1336107	1					
ANR	1337524	Identifier	PSC_BufferOut		1336107	1					
ANR	1337525	BreakStatement	break ;	1257:24:37209:37214	1336107	8	True				
ANR	1337526	IfStatement	"if ( psc -> binary && psc -> names && pscompact_isname ( psc , & i ) )"		1336107	5					
ANR	1337527	Condition	"psc -> binary && psc -> names && pscompact_isname ( psc , & i )"	1259:24:37262:37315	1336107	0	True				
ANR	1337528	AndExpression	"psc -> binary && psc -> names && pscompact_isname ( psc , & i )"		1336107	0		&&			
ANR	1337529	PtrMemberAccess	psc -> binary		1336107	0					
ANR	1337530	Identifier	psc		1336107	0					
ANR	1337531	Identifier	binary		1336107	1					
ANR	1337532	AndExpression	"psc -> names && pscompact_isname ( psc , & i )"		1336107	1		&&			
ANR	1337533	PtrMemberAccess	psc -> names		1336107	0					
ANR	1337534	Identifier	psc		1336107	0					
ANR	1337535	Identifier	names		1336107	1					
ANR	1337536	CallExpression	"pscompact_isname ( psc , & i )"		1336107	1					
ANR	1337537	Callee	pscompact_isname		1336107	0					
ANR	1337538	Identifier	pscompact_isname		1336107	0					
ANR	1337539	ArgumentList	psc		1336107	1					
ANR	1337540	Argument	psc		1336107	0					
ANR	1337541	Identifier	psc		1336107	0					
ANR	1337542	Argument	& i		1336107	1					
ANR	1337543	UnaryOperationExpression	& i		1336107	0					
ANR	1337544	UnaryOperator	&		1336107	0					
ANR	1337545	Identifier	i		1336107	1					
ANR	1337546	CompoundStatement		237:80:10702:10702	1336107	1					
ANR	1337547	IfStatement	if ( i >= 0 )		1336107	0					
ANR	1337548	Condition	i >= 0	1261:28:37402:37407	1336107	0	True				
ANR	1337549	RelationalExpression	i >= 0		1336107	0		>=			
ANR	1337550	Identifier	i		1336107	0					
ANR	1337551	PrimaryExpression	0		1336107	1					
ANR	1337552	CompoundStatement		239:36:10794:10794	1336107	1					
ANR	1337553	ExpressionStatement	psc -> bufferout [ 0 ] = 146	1263:28:37485:37508	1336107	0	True				
ANR	1337554	AssignmentExpression	psc -> bufferout [ 0 ] = 146		1336107	0		=			
ANR	1337555	ArrayIndexing	psc -> bufferout [ 0 ]		1336107	0					
ANR	1337556	PtrMemberAccess	psc -> bufferout		1336107	0					
ANR	1337557	Identifier	psc		1336107	0					
ANR	1337558	Identifier	bufferout		1336107	1					
ANR	1337559	PrimaryExpression	0		1336107	1					
ANR	1337560	PrimaryExpression	146		1336107	1					
ANR	1337561	ExpressionStatement	psc -> bufferout [ 1 ] = i	1264:28:37538:37559	1336107	1	True				
ANR	1337562	AssignmentExpression	psc -> bufferout [ 1 ] = i		1336107	0		=			
ANR	1337563	ArrayIndexing	psc -> bufferout [ 1 ]		1336107	0					
ANR	1337564	PtrMemberAccess	psc -> bufferout		1336107	0					
ANR	1337565	Identifier	psc		1336107	0					
ANR	1337566	Identifier	bufferout		1336107	1					
ANR	1337567	PrimaryExpression	1		1336107	1					
ANR	1337568	Identifier	i		1336107	1					
ANR	1337569	ElseStatement	else		1336107	0					
ANR	1337570	CompoundStatement		243:31:10976:10976	1336107	0					
ANR	1337571	ExpressionStatement	psc -> bufferout [ 0 ] = 145	1267:28:37664:37687	1336107	0	True				
ANR	1337572	AssignmentExpression	psc -> bufferout [ 0 ] = 145		1336107	0		=			
ANR	1337573	ArrayIndexing	psc -> bufferout [ 0 ]		1336107	0					
ANR	1337574	PtrMemberAccess	psc -> bufferout		1336107	0					
ANR	1337575	Identifier	psc		1336107	0					
ANR	1337576	Identifier	bufferout		1336107	1					
ANR	1337577	PrimaryExpression	0		1336107	1					
ANR	1337578	PrimaryExpression	145		1336107	1					
ANR	1337579	ExpressionStatement	psc -> bufferout [ 1 ] = 1 - i	1268:28:37717:37740	1336107	1	True				
ANR	1337580	AssignmentExpression	psc -> bufferout [ 1 ] = 1 - i		1336107	0		=			
ANR	1337581	ArrayIndexing	psc -> bufferout [ 1 ]		1336107	0					
ANR	1337582	PtrMemberAccess	psc -> bufferout		1336107	0					
ANR	1337583	Identifier	psc		1336107	0					
ANR	1337584	Identifier	bufferout		1336107	1					
ANR	1337585	PrimaryExpression	1		1336107	1					
ANR	1337586	AdditiveExpression	1 - i		1336107	1		-			
ANR	1337587	PrimaryExpression	1		1336107	0					
ANR	1337588	Identifier	i		1336107	1					
ANR	1337589	ExpressionStatement	psc -> inpos = 0	1270:24:37792:37806	1336107	1	True				
ANR	1337590	AssignmentExpression	psc -> inpos = 0		1336107	0		=			
ANR	1337591	PtrMemberAccess	psc -> inpos		1336107	0					
ANR	1337592	Identifier	psc		1336107	0					
ANR	1337593	Identifier	inpos		1336107	1					
ANR	1337594	PrimaryExpression	0		1336107	1					
ANR	1337595	ExpressionStatement	psc -> outpos = 0	1271:24:37832:37847	1336107	2	True				
ANR	1337596	AssignmentExpression	psc -> outpos = 0		1336107	0		=			
ANR	1337597	PtrMemberAccess	psc -> outpos		1336107	0					
ANR	1337598	Identifier	psc		1336107	0					
ANR	1337599	Identifier	outpos		1336107	1					
ANR	1337600	PrimaryExpression	0		1336107	1					
ANR	1337601	ExpressionStatement	psc -> outend = 2	1272:24:37873:37888	1336107	3	True				
ANR	1337602	AssignmentExpression	psc -> outend = 2		1336107	0		=			
ANR	1337603	PtrMemberAccess	psc -> outend		1336107	0					
ANR	1337604	Identifier	psc		1336107	0					
ANR	1337605	Identifier	outend		1336107	1					
ANR	1337606	PrimaryExpression	2		1336107	1					
ANR	1337607	ExpressionStatement	psc -> wasascii = 0	1273:24:37914:37931	1336107	4	True				
ANR	1337608	AssignmentExpression	psc -> wasascii = 0		1336107	0		=			
ANR	1337609	PtrMemberAccess	psc -> wasascii		1336107	0					
ANR	1337610	Identifier	psc		1336107	0					
ANR	1337611	Identifier	wasascii		1336107	1					
ANR	1337612	PrimaryExpression	0		1336107	1					
ANR	1337613	ExpressionStatement	psc -> noescape = 1	1274:24:37957:37974	1336107	5	True				
ANR	1337614	AssignmentExpression	psc -> noescape = 1		1336107	0		=			
ANR	1337615	PtrMemberAccess	psc -> noescape		1336107	0					
ANR	1337616	Identifier	psc		1336107	0					
ANR	1337617	Identifier	noescape		1336107	1					
ANR	1337618	PrimaryExpression	1		1336107	1					
ANR	1337619	ExpressionStatement	psc -> state = PSC_BufferOut	1275:24:38000:38026	1336107	6	True				
ANR	1337620	AssignmentExpression	psc -> state = PSC_BufferOut		1336107	0		=			
ANR	1337621	PtrMemberAccess	psc -> state		1336107	0					
ANR	1337622	Identifier	psc		1336107	0					
ANR	1337623	Identifier	state		1336107	1					
ANR	1337624	Identifier	PSC_BufferOut		1336107	1					
ANR	1337625	BreakStatement	break ;	1276:24:38052:38057	1336107	7	True				
ANR	1337626	IfStatement	if ( ( psc -> wasascii ) && ( psc -> bufferin [ 0 ] != '/' ) )		1336107	5					
ANR	1337627	Condition	( psc -> wasascii ) && ( psc -> bufferin [ 0 ] != '/' )	1279:20:38119:38160	1336107	0	True				
ANR	1337628	AndExpression	( psc -> wasascii ) && ( psc -> bufferin [ 0 ] != '/' )		1336107	0		&&			
ANR	1337629	PtrMemberAccess	psc -> wasascii		1336107	0					
ANR	1337630	Identifier	psc		1336107	0					
ANR	1337631	Identifier	wasascii		1336107	1					
ANR	1337632	EqualityExpression	psc -> bufferin [ 0 ] != '/'		1336107	1		!=			
ANR	1337633	ArrayIndexing	psc -> bufferin [ 0 ]		1336107	0					
ANR	1337634	PtrMemberAccess	psc -> bufferin		1336107	0					
ANR	1337635	Identifier	psc		1336107	0					
ANR	1337636	Identifier	bufferin		1336107	1					
ANR	1337637	PrimaryExpression	0		1336107	1					
ANR	1337638	PrimaryExpression	'/'		1336107	1					
ANR	1337639	ExpressionStatement	* out ++ = 32	1280:20:38183:38194	1336107	1	True				
ANR	1337640	AssignmentExpression	* out ++ = 32		1336107	0		=			
ANR	1337641	UnaryOperationExpression	* out ++		1336107	0					
ANR	1337642	UnaryOperator	*		1336107	0					
ANR	1337643	PostIncDecOperationExpression	out ++		1336107	1					
ANR	1337644	Identifier	out		1336107	0					
ANR	1337645	IncDec	++		1336107	1					
ANR	1337646	PrimaryExpression	32		1336107	1					
ANR	1337647	ExpressionStatement	pscompact_copyinout ( psc )	1281:16:38212:38236	1336107	6	True				
ANR	1337648	CallExpression	pscompact_copyinout ( psc )		1336107	0					
ANR	1337649	Callee	pscompact_copyinout		1336107	0					
ANR	1337650	Identifier	pscompact_copyinout		1336107	0					
ANR	1337651	ArgumentList	psc		1336107	1					
ANR	1337652	Argument	psc		1336107	0					
ANR	1337653	Identifier	psc		1336107	0					
ANR	1337654	ExpressionStatement	psc -> wasascii = 1	1282:16:38254:38271	1336107	7	True				
ANR	1337655	AssignmentExpression	psc -> wasascii = 1		1336107	0		=			
ANR	1337656	PtrMemberAccess	psc -> wasascii		1336107	0					
ANR	1337657	Identifier	psc		1336107	0					
ANR	1337658	Identifier	wasascii		1336107	1					
ANR	1337659	PrimaryExpression	1		1336107	1					
ANR	1337660	BreakStatement	break ;	1283:16:38289:38294	1336107	8	True				
ANR	1337661	Label	case PSC_BufferOut :	1284:12:38308:38326	1336107	9	True				
ANR	1337662	Identifier	PSC_BufferOut		1336107	0					
ANR	1337663	CompoundStatement		264:16:11742:11789	1336107	10					
ANR	1337664	IdentifierDeclStatement	unsigned char c = psc -> bufferout [ psc -> outpos ++ ] ;	1286:16:38358:38405	1336107	0	True				
ANR	1337665	IdentifierDecl	c = psc -> bufferout [ psc -> outpos ++ ]		1336107	0					
ANR	1337666	IdentifierDeclType	unsigned char		1336107	0					
ANR	1337667	Identifier	c		1336107	1					
ANR	1337668	AssignmentExpression	c = psc -> bufferout [ psc -> outpos ++ ]		1336107	2		=			
ANR	1337669	Identifier	c		1336107	0					
ANR	1337670	ArrayIndexing	psc -> bufferout [ psc -> outpos ++ ]		1336107	1					
ANR	1337671	PtrMemberAccess	psc -> bufferout		1336107	0					
ANR	1337672	Identifier	psc		1336107	0					
ANR	1337673	Identifier	bufferout		1336107	1					
ANR	1337674	PostIncDecOperationExpression	psc -> outpos ++		1336107	1					
ANR	1337675	PtrMemberAccess	psc -> outpos		1336107	0					
ANR	1337676	Identifier	psc		1336107	0					
ANR	1337677	Identifier	outpos		1336107	1					
ANR	1337678	IncDec	++		1336107	1					
ANR	1337679	IfStatement	if ( psc -> noescape )		1336107	1					
ANR	1337680	Condition	psc -> noescape	1287:20:38427:38439	1336107	0	True				
ANR	1337681	PtrMemberAccess	psc -> noescape		1336107	0					
ANR	1337682	Identifier	psc		1336107	0					
ANR	1337683	Identifier	noescape		1336107	1					
ANR	1337684	CompoundStatement		265:35:11826:11826	1336107	1					
ANR	1337685	ElseStatement	else		1336107	0					
ANR	1337686	IfStatement	if ( ( c == 10 ) && ( psc -> outpos < psc -> outend ) )		1336107	0					
ANR	1337687	Condition	( c == 10 ) && ( psc -> outpos < psc -> outend )	1288:27:38471:38510	1336107	0	True				
ANR	1337688	AndExpression	( c == 10 ) && ( psc -> outpos < psc -> outend )		1336107	0		&&			
ANR	1337689	EqualityExpression	c == 10		1336107	0		==			
ANR	1337690	Identifier	c		1336107	0					
ANR	1337691	PrimaryExpression	10		1336107	1					
ANR	1337692	RelationalExpression	psc -> outpos < psc -> outend		1336107	1		<			
ANR	1337693	PtrMemberAccess	psc -> outpos		1336107	0					
ANR	1337694	Identifier	psc		1336107	0					
ANR	1337695	Identifier	outpos		1336107	1					
ANR	1337696	PtrMemberAccess	psc -> outend		1336107	1					
ANR	1337697	Identifier	psc		1336107	0					
ANR	1337698	Identifier	outend		1336107	1					
ANR	1337699	CompoundStatement		266:69:11897:11897	1336107	1					
ANR	1337700	IfStatement	if ( ! psc -> escaping )		1336107	0					
ANR	1337701	Condition	! psc -> escaping	1289:24:38539:38552	1336107	0	True				
ANR	1337702	UnaryOperationExpression	! psc -> escaping		1336107	0					
ANR	1337703	UnaryOperator	!		1336107	0					
ANR	1337704	PtrMemberAccess	psc -> escaping		1336107	1					
ANR	1337705	Identifier	psc		1336107	0					
ANR	1337706	Identifier	escaping		1336107	1					
ANR	1337707	CompoundStatement		267:40:11939:11939	1336107	1					
ANR	1337708	ExpressionStatement	c = '\\\\'	1290:24:38581:38589	1336107	0	True				
ANR	1337709	AssignmentExpression	c = '\\\\'		1336107	0		=			
ANR	1337710	Identifier	c		1336107	0					
ANR	1337711	PrimaryExpression	'\\\\'		1336107	1					
ANR	1337712	ExpressionStatement	psc -> outpos --	1291:24:38615:38628	1336107	1	True				
ANR	1337713	PostIncDecOperationExpression	psc -> outpos --		1336107	0					
ANR	1337714	PtrMemberAccess	psc -> outpos		1336107	0					
ANR	1337715	Identifier	psc		1336107	0					
ANR	1337716	Identifier	outpos		1336107	1					
ANR	1337717	IncDec	--		1336107	1					
ANR	1337718	ExpressionStatement	psc -> escaping = 1	1292:24:38654:38671	1336107	2	True				
ANR	1337719	AssignmentExpression	psc -> escaping = 1		1336107	0		=			
ANR	1337720	PtrMemberAccess	psc -> escaping		1336107	0					
ANR	1337721	Identifier	psc		1336107	0					
ANR	1337722	Identifier	escaping		1336107	1					
ANR	1337723	PrimaryExpression	1		1336107	1					
ANR	1337724	ElseStatement	else		1336107	0					
ANR	1337725	CompoundStatement		271:27:12084:12084	1336107	0					
ANR	1337726	ExpressionStatement	c = 'n'	1294:24:38726:38733	1336107	0	True				
ANR	1337727	AssignmentExpression	c = 'n'		1336107	0		=			
ANR	1337728	Identifier	c		1336107	0					
ANR	1337729	PrimaryExpression	'n'		1336107	1					
ANR	1337730	ExpressionStatement	psc -> escaping = 0	1295:24:38759:38776	1336107	1	True				
ANR	1337731	AssignmentExpression	psc -> escaping = 0		1336107	0		=			
ANR	1337732	PtrMemberAccess	psc -> escaping		1336107	0					
ANR	1337733	Identifier	psc		1336107	0					
ANR	1337734	Identifier	escaping		1336107	1					
ANR	1337735	PrimaryExpression	0		1336107	1					
ANR	1337736	ElseStatement	else		1336107	0					
ANR	1337737	IfStatement	if ( c == 9 )		1336107	0					
ANR	1337738	Condition	c == 9	1297:27:38827:38832	1336107	0	True				
ANR	1337739	EqualityExpression	c == 9		1336107	0		==			
ANR	1337740	Identifier	c		1336107	0					
ANR	1337741	PrimaryExpression	9		1336107	1					
ANR	1337742	CompoundStatement		275:35:12219:12219	1336107	1					
ANR	1337743	IfStatement	if ( ! psc -> escaping )		1336107	0					
ANR	1337744	Condition	! psc -> escaping	1298:24:38861:38874	1336107	0	True				
ANR	1337745	UnaryOperationExpression	! psc -> escaping		1336107	0					
ANR	1337746	UnaryOperator	!		1336107	0					
ANR	1337747	PtrMemberAccess	psc -> escaping		1336107	1					
ANR	1337748	Identifier	psc		1336107	0					
ANR	1337749	Identifier	escaping		1336107	1					
ANR	1337750	CompoundStatement		276:40:12261:12261	1336107	1					
ANR	1337751	ExpressionStatement	c = '\\\\'	1299:24:38903:38911	1336107	0	True				
ANR	1337752	AssignmentExpression	c = '\\\\'		1336107	0		=			
ANR	1337753	Identifier	c		1336107	0					
ANR	1337754	PrimaryExpression	'\\\\'		1336107	1					
ANR	1337755	ExpressionStatement	psc -> outpos --	1300:24:38937:38950	1336107	1	True				
ANR	1337756	PostIncDecOperationExpression	psc -> outpos --		1336107	0					
ANR	1337757	PtrMemberAccess	psc -> outpos		1336107	0					
ANR	1337758	Identifier	psc		1336107	0					
ANR	1337759	Identifier	outpos		1336107	1					
ANR	1337760	IncDec	--		1336107	1					
ANR	1337761	ExpressionStatement	psc -> escaping = 1	1301:24:38976:38993	1336107	2	True				
ANR	1337762	AssignmentExpression	psc -> escaping = 1		1336107	0		=			
ANR	1337763	PtrMemberAccess	psc -> escaping		1336107	0					
ANR	1337764	Identifier	psc		1336107	0					
ANR	1337765	Identifier	escaping		1336107	1					
ANR	1337766	PrimaryExpression	1		1336107	1					
ANR	1337767	ElseStatement	else		1336107	0					
ANR	1337768	CompoundStatement		280:27:12406:12406	1336107	0					
ANR	1337769	ExpressionStatement	c = 't'	1303:24:39048:39055	1336107	0	True				
ANR	1337770	AssignmentExpression	c = 't'		1336107	0		=			
ANR	1337771	Identifier	c		1336107	0					
ANR	1337772	PrimaryExpression	't'		1336107	1					
ANR	1337773	ExpressionStatement	psc -> escaping = 0	1304:24:39081:39098	1336107	1	True				
ANR	1337774	AssignmentExpression	psc -> escaping = 0		1336107	0		=			
ANR	1337775	PtrMemberAccess	psc -> escaping		1336107	0					
ANR	1337776	Identifier	psc		1336107	0					
ANR	1337777	Identifier	escaping		1336107	1					
ANR	1337778	PrimaryExpression	0		1336107	1					
ANR	1337779	ElseStatement	else		1336107	0					
ANR	1337780	IfStatement	if ( c == 8 )		1336107	0					
ANR	1337781	Condition	c == 8	1306:27:39149:39154	1336107	0	True				
ANR	1337782	EqualityExpression	c == 8		1336107	0		==			
ANR	1337783	Identifier	c		1336107	0					
ANR	1337784	PrimaryExpression	8		1336107	1					
ANR	1337785	CompoundStatement		284:35:12541:12541	1336107	1					
ANR	1337786	IfStatement	if ( ! psc -> escaping )		1336107	0					
ANR	1337787	Condition	! psc -> escaping	1307:24:39183:39196	1336107	0	True				
ANR	1337788	UnaryOperationExpression	! psc -> escaping		1336107	0					
ANR	1337789	UnaryOperator	!		1336107	0					
ANR	1337790	PtrMemberAccess	psc -> escaping		1336107	1					
ANR	1337791	Identifier	psc		1336107	0					
ANR	1337792	Identifier	escaping		1336107	1					
ANR	1337793	CompoundStatement		285:40:12583:12583	1336107	1					
ANR	1337794	ExpressionStatement	c = '\\\\'	1308:24:39225:39233	1336107	0	True				
ANR	1337795	AssignmentExpression	c = '\\\\'		1336107	0		=			
ANR	1337796	Identifier	c		1336107	0					
ANR	1337797	PrimaryExpression	'\\\\'		1336107	1					
ANR	1337798	ExpressionStatement	psc -> outpos --	1309:24:39259:39272	1336107	1	True				
ANR	1337799	PostIncDecOperationExpression	psc -> outpos --		1336107	0					
ANR	1337800	PtrMemberAccess	psc -> outpos		1336107	0					
ANR	1337801	Identifier	psc		1336107	0					
ANR	1337802	Identifier	outpos		1336107	1					
ANR	1337803	IncDec	--		1336107	1					
ANR	1337804	ExpressionStatement	psc -> escaping = 1	1310:24:39298:39315	1336107	2	True				
ANR	1337805	AssignmentExpression	psc -> escaping = 1		1336107	0		=			
ANR	1337806	PtrMemberAccess	psc -> escaping		1336107	0					
ANR	1337807	Identifier	psc		1336107	0					
ANR	1337808	Identifier	escaping		1336107	1					
ANR	1337809	PrimaryExpression	1		1336107	1					
ANR	1337810	ElseStatement	else		1336107	0					
ANR	1337811	CompoundStatement		289:27:12728:12728	1336107	0					
ANR	1337812	ExpressionStatement	c = 'b'	1312:24:39370:39377	1336107	0	True				
ANR	1337813	AssignmentExpression	c = 'b'		1336107	0		=			
ANR	1337814	Identifier	c		1336107	0					
ANR	1337815	PrimaryExpression	'b'		1336107	1					
ANR	1337816	ExpressionStatement	psc -> escaping = 0	1313:24:39403:39420	1336107	1	True				
ANR	1337817	AssignmentExpression	psc -> escaping = 0		1336107	0		=			
ANR	1337818	PtrMemberAccess	psc -> escaping		1336107	0					
ANR	1337819	Identifier	psc		1336107	0					
ANR	1337820	Identifier	escaping		1336107	1					
ANR	1337821	PrimaryExpression	0		1336107	1					
ANR	1337822	ElseStatement	else		1336107	0					
ANR	1337823	IfStatement	if ( c == 12 )		1336107	0					
ANR	1337824	Condition	c == 12	1315:27:39471:39477	1336107	0	True				
ANR	1337825	EqualityExpression	c == 12		1336107	0		==			
ANR	1337826	Identifier	c		1336107	0					
ANR	1337827	PrimaryExpression	12		1336107	1					
ANR	1337828	CompoundStatement		293:36:12864:12864	1336107	1					
ANR	1337829	IfStatement	if ( ! psc -> escaping )		1336107	0					
ANR	1337830	Condition	! psc -> escaping	1316:24:39506:39519	1336107	0	True				
ANR	1337831	UnaryOperationExpression	! psc -> escaping		1336107	0					
ANR	1337832	UnaryOperator	!		1336107	0					
ANR	1337833	PtrMemberAccess	psc -> escaping		1336107	1					
ANR	1337834	Identifier	psc		1336107	0					
ANR	1337835	Identifier	escaping		1336107	1					
ANR	1337836	CompoundStatement		294:40:12906:12906	1336107	1					
ANR	1337837	ExpressionStatement	c = '\\\\'	1317:24:39548:39556	1336107	0	True				
ANR	1337838	AssignmentExpression	c = '\\\\'		1336107	0		=			
ANR	1337839	Identifier	c		1336107	0					
ANR	1337840	PrimaryExpression	'\\\\'		1336107	1					
ANR	1337841	ExpressionStatement	psc -> outpos --	1318:24:39582:39595	1336107	1	True				
ANR	1337842	PostIncDecOperationExpression	psc -> outpos --		1336107	0					
ANR	1337843	PtrMemberAccess	psc -> outpos		1336107	0					
ANR	1337844	Identifier	psc		1336107	0					
ANR	1337845	Identifier	outpos		1336107	1					
ANR	1337846	IncDec	--		1336107	1					
ANR	1337847	ExpressionStatement	psc -> escaping = 1	1319:24:39621:39638	1336107	2	True				
ANR	1337848	AssignmentExpression	psc -> escaping = 1		1336107	0		=			
ANR	1337849	PtrMemberAccess	psc -> escaping		1336107	0					
ANR	1337850	Identifier	psc		1336107	0					
ANR	1337851	Identifier	escaping		1336107	1					
ANR	1337852	PrimaryExpression	1		1336107	1					
ANR	1337853	ElseStatement	else		1336107	0					
ANR	1337854	CompoundStatement		298:27:13051:13051	1336107	0					
ANR	1337855	ExpressionStatement	c = 'f'	1321:24:39693:39700	1336107	0	True				
ANR	1337856	AssignmentExpression	c = 'f'		1336107	0		=			
ANR	1337857	Identifier	c		1336107	0					
ANR	1337858	PrimaryExpression	'f'		1336107	1					
ANR	1337859	ExpressionStatement	psc -> escaping = 0	1322:24:39726:39743	1336107	1	True				
ANR	1337860	AssignmentExpression	psc -> escaping = 0		1336107	0		=			
ANR	1337861	PtrMemberAccess	psc -> escaping		1336107	0					
ANR	1337862	Identifier	psc		1336107	0					
ANR	1337863	Identifier	escaping		1336107	1					
ANR	1337864	PrimaryExpression	0		1336107	1					
ANR	1337865	ElseStatement	else		1336107	0					
ANR	1337866	IfStatement	if ( c == 13 )		1336107	0					
ANR	1337867	Condition	c == 13	1324:27:39794:39800	1336107	0	True				
ANR	1337868	EqualityExpression	c == 13		1336107	0		==			
ANR	1337869	Identifier	c		1336107	0					
ANR	1337870	PrimaryExpression	13		1336107	1					
ANR	1337871	CompoundStatement		302:36:13187:13187	1336107	1					
ANR	1337872	IfStatement	if ( ! psc -> escaping )		1336107	0					
ANR	1337873	Condition	! psc -> escaping	1325:24:39829:39842	1336107	0	True				
ANR	1337874	UnaryOperationExpression	! psc -> escaping		1336107	0					
ANR	1337875	UnaryOperator	!		1336107	0					
ANR	1337876	PtrMemberAccess	psc -> escaping		1336107	1					
ANR	1337877	Identifier	psc		1336107	0					
ANR	1337878	Identifier	escaping		1336107	1					
ANR	1337879	CompoundStatement		303:40:13229:13229	1336107	1					
ANR	1337880	ExpressionStatement	c = '\\\\'	1326:24:39871:39879	1336107	0	True				
ANR	1337881	AssignmentExpression	c = '\\\\'		1336107	0		=			
ANR	1337882	Identifier	c		1336107	0					
ANR	1337883	PrimaryExpression	'\\\\'		1336107	1					
ANR	1337884	ExpressionStatement	psc -> outpos --	1327:24:39905:39918	1336107	1	True				
ANR	1337885	PostIncDecOperationExpression	psc -> outpos --		1336107	0					
ANR	1337886	PtrMemberAccess	psc -> outpos		1336107	0					
ANR	1337887	Identifier	psc		1336107	0					
ANR	1337888	Identifier	outpos		1336107	1					
ANR	1337889	IncDec	--		1336107	1					
ANR	1337890	ExpressionStatement	psc -> escaping = 1	1328:24:39944:39961	1336107	2	True				
ANR	1337891	AssignmentExpression	psc -> escaping = 1		1336107	0		=			
ANR	1337892	PtrMemberAccess	psc -> escaping		1336107	0					
ANR	1337893	Identifier	psc		1336107	0					
ANR	1337894	Identifier	escaping		1336107	1					
ANR	1337895	PrimaryExpression	1		1336107	1					
ANR	1337896	ElseStatement	else		1336107	0					
ANR	1337897	CompoundStatement		307:27:13374:13374	1336107	0					
ANR	1337898	ExpressionStatement	c = 'r'	1330:24:40016:40023	1336107	0	True				
ANR	1337899	AssignmentExpression	c = 'r'		1336107	0		=			
ANR	1337900	Identifier	c		1336107	0					
ANR	1337901	PrimaryExpression	'r'		1336107	1					
ANR	1337902	ExpressionStatement	psc -> escaping = 0	1331:24:40049:40066	1336107	1	True				
ANR	1337903	AssignmentExpression	psc -> escaping = 0		1336107	0		=			
ANR	1337904	PtrMemberAccess	psc -> escaping		1336107	0					
ANR	1337905	Identifier	psc		1336107	0					
ANR	1337906	Identifier	escaping		1336107	1					
ANR	1337907	PrimaryExpression	0		1336107	1					
ANR	1337908	ElseStatement	else		1336107	0					
ANR	1337909	IfStatement	if ( c == '\\\\' )		1336107	0					
ANR	1337910	Condition	c == '\\\\'	1333:27:40117:40125	1336107	0	True				
ANR	1337911	EqualityExpression	c == '\\\\'		1336107	0		==			
ANR	1337912	Identifier	c		1336107	0					
ANR	1337913	PrimaryExpression	'\\\\'		1336107	1					
ANR	1337914	CompoundStatement		311:38:13512:13512	1336107	1					
ANR	1337915	IfStatement	if ( ! psc -> escaping )		1336107	0					
ANR	1337916	Condition	! psc -> escaping	1334:24:40154:40167	1336107	0	True				
ANR	1337917	UnaryOperationExpression	! psc -> escaping		1336107	0					
ANR	1337918	UnaryOperator	!		1336107	0					
ANR	1337919	PtrMemberAccess	psc -> escaping		1336107	1					
ANR	1337920	Identifier	psc		1336107	0					
ANR	1337921	Identifier	escaping		1336107	1					
ANR	1337922	CompoundStatement		312:40:13554:13554	1336107	1					
ANR	1337923	ExpressionStatement	psc -> outpos --	1335:24:40196:40209	1336107	0	True				
ANR	1337924	PostIncDecOperationExpression	psc -> outpos --		1336107	0					
ANR	1337925	PtrMemberAccess	psc -> outpos		1336107	0					
ANR	1337926	Identifier	psc		1336107	0					
ANR	1337927	Identifier	outpos		1336107	1					
ANR	1337928	IncDec	--		1336107	1					
ANR	1337929	ExpressionStatement	psc -> escaping = 1	1336:24:40235:40252	1336107	1	True				
ANR	1337930	AssignmentExpression	psc -> escaping = 1		1336107	0		=			
ANR	1337931	PtrMemberAccess	psc -> escaping		1336107	0					
ANR	1337932	Identifier	psc		1336107	0					
ANR	1337933	Identifier	escaping		1336107	1					
ANR	1337934	PrimaryExpression	1		1336107	1					
ANR	1337935	ElseStatement	else		1336107	0					
ANR	1337936	CompoundStatement		315:27:13665:13665	1336107	0					
ANR	1337937	ExpressionStatement	psc -> escaping = 0	1338:24:40307:40324	1336107	0	True				
ANR	1337938	AssignmentExpression	psc -> escaping = 0		1336107	0		=			
ANR	1337939	PtrMemberAccess	psc -> escaping		1336107	0					
ANR	1337940	Identifier	psc		1336107	0					
ANR	1337941	Identifier	escaping		1336107	1					
ANR	1337942	PrimaryExpression	0		1336107	1					
ANR	1337943	ElseStatement	else		1336107	0					
ANR	1337944	IfStatement	if ( ( c == ')' ) && ( psc -> outpos < psc -> outend ) )		1336107	0					
ANR	1337945	Condition	( c == ')' ) && ( psc -> outpos < psc -> outend )	1340:27:40375:40415	1336107	0	True				
ANR	1337946	AndExpression	( c == ')' ) && ( psc -> outpos < psc -> outend )		1336107	0		&&			
ANR	1337947	EqualityExpression	c == ')'		1336107	0		==			
ANR	1337948	Identifier	c		1336107	0					
ANR	1337949	PrimaryExpression	')'		1336107	1					
ANR	1337950	RelationalExpression	psc -> outpos < psc -> outend		1336107	1		<			
ANR	1337951	PtrMemberAccess	psc -> outpos		1336107	0					
ANR	1337952	Identifier	psc		1336107	0					
ANR	1337953	Identifier	outpos		1336107	1					
ANR	1337954	PtrMemberAccess	psc -> outend		1336107	1					
ANR	1337955	Identifier	psc		1336107	0					
ANR	1337956	Identifier	outend		1336107	1					
ANR	1337957	CompoundStatement		318:70:13802:13802	1336107	1					
ANR	1337958	IfStatement	if ( ! psc -> escaping )		1336107	0					
ANR	1337959	Condition	! psc -> escaping	1341:24:40444:40457	1336107	0	True				
ANR	1337960	UnaryOperationExpression	! psc -> escaping		1336107	0					
ANR	1337961	UnaryOperator	!		1336107	0					
ANR	1337962	PtrMemberAccess	psc -> escaping		1336107	1					
ANR	1337963	Identifier	psc		1336107	0					
ANR	1337964	Identifier	escaping		1336107	1					
ANR	1337965	CompoundStatement		319:40:13844:13844	1336107	1					
ANR	1337966	ExpressionStatement	c = '\\\\'	1342:24:40486:40494	1336107	0	True				
ANR	1337967	AssignmentExpression	c = '\\\\'		1336107	0		=			
ANR	1337968	Identifier	c		1336107	0					
ANR	1337969	PrimaryExpression	'\\\\'		1336107	1					
ANR	1337970	ExpressionStatement	psc -> outpos --	1343:24:40520:40533	1336107	1	True				
ANR	1337971	PostIncDecOperationExpression	psc -> outpos --		1336107	0					
ANR	1337972	PtrMemberAccess	psc -> outpos		1336107	0					
ANR	1337973	Identifier	psc		1336107	0					
ANR	1337974	Identifier	outpos		1336107	1					
ANR	1337975	IncDec	--		1336107	1					
ANR	1337976	ExpressionStatement	psc -> escaping = 1	1344:24:40559:40576	1336107	2	True				
ANR	1337977	AssignmentExpression	psc -> escaping = 1		1336107	0		=			
ANR	1337978	PtrMemberAccess	psc -> escaping		1336107	0					
ANR	1337979	Identifier	psc		1336107	0					
ANR	1337980	Identifier	escaping		1336107	1					
ANR	1337981	PrimaryExpression	1		1336107	1					
ANR	1337982	ElseStatement	else		1336107	0					
ANR	1337983	CompoundStatement		323:27:13989:13989	1336107	0					
ANR	1337984	ExpressionStatement	c = ')'	1346:24:40631:40638	1336107	0	True				
ANR	1337985	AssignmentExpression	c = ')'		1336107	0		=			
ANR	1337986	Identifier	c		1336107	0					
ANR	1337987	PrimaryExpression	')'		1336107	1					
ANR	1337988	ExpressionStatement	psc -> escaping = 0	1347:24:40664:40681	1336107	1	True				
ANR	1337989	AssignmentExpression	psc -> escaping = 0		1336107	0		=			
ANR	1337990	PtrMemberAccess	psc -> escaping		1336107	0					
ANR	1337991	Identifier	psc		1336107	0					
ANR	1337992	Identifier	escaping		1336107	1					
ANR	1337993	PrimaryExpression	0		1336107	1					
ANR	1337994	ElseStatement	else		1336107	0					
ANR	1337995	IfStatement	if ( ( c == '(' ) && ( psc -> outpos > 1 ) )		1336107	0					
ANR	1337996	Condition	( c == '(' ) && ( psc -> outpos > 1 )	1349:27:40732:40762	1336107	0	True				
ANR	1337997	AndExpression	( c == '(' ) && ( psc -> outpos > 1 )		1336107	0		&&			
ANR	1337998	EqualityExpression	c == '('		1336107	0		==			
ANR	1337999	Identifier	c		1336107	0					
ANR	1338000	PrimaryExpression	'('		1336107	1					
ANR	1338001	RelationalExpression	psc -> outpos > 1		1336107	1		>			
ANR	1338002	PtrMemberAccess	psc -> outpos		1336107	0					
ANR	1338003	Identifier	psc		1336107	0					
ANR	1338004	Identifier	outpos		1336107	1					
ANR	1338005	PrimaryExpression	1		1336107	1					
ANR	1338006	CompoundStatement		327:60:14149:14149	1336107	1					
ANR	1338007	IfStatement	if ( ! psc -> escaping )		1336107	0					
ANR	1338008	Condition	! psc -> escaping	1350:24:40791:40804	1336107	0	True				
ANR	1338009	UnaryOperationExpression	! psc -> escaping		1336107	0					
ANR	1338010	UnaryOperator	!		1336107	0					
ANR	1338011	PtrMemberAccess	psc -> escaping		1336107	1					
ANR	1338012	Identifier	psc		1336107	0					
ANR	1338013	Identifier	escaping		1336107	1					
ANR	1338014	CompoundStatement		328:40:14191:14191	1336107	1					
ANR	1338015	ExpressionStatement	c = '\\\\'	1351:24:40833:40841	1336107	0	True				
ANR	1338016	AssignmentExpression	c = '\\\\'		1336107	0		=			
ANR	1338017	Identifier	c		1336107	0					
ANR	1338018	PrimaryExpression	'\\\\'		1336107	1					
ANR	1338019	ExpressionStatement	psc -> outpos --	1352:24:40867:40880	1336107	1	True				
ANR	1338020	PostIncDecOperationExpression	psc -> outpos --		1336107	0					
ANR	1338021	PtrMemberAccess	psc -> outpos		1336107	0					
ANR	1338022	Identifier	psc		1336107	0					
ANR	1338023	Identifier	outpos		1336107	1					
ANR	1338024	IncDec	--		1336107	1					
ANR	1338025	ExpressionStatement	psc -> escaping = 1	1353:24:40906:40923	1336107	2	True				
ANR	1338026	AssignmentExpression	psc -> escaping = 1		1336107	0		=			
ANR	1338027	PtrMemberAccess	psc -> escaping		1336107	0					
ANR	1338028	Identifier	psc		1336107	0					
ANR	1338029	Identifier	escaping		1336107	1					
ANR	1338030	PrimaryExpression	1		1336107	1					
ANR	1338031	ElseStatement	else		1336107	0					
ANR	1338032	CompoundStatement		332:27:14336:14336	1336107	0					
ANR	1338033	ExpressionStatement	c = '('	1355:24:40978:40985	1336107	0	True				
ANR	1338034	AssignmentExpression	c = '('		1336107	0		=			
ANR	1338035	Identifier	c		1336107	0					
ANR	1338036	PrimaryExpression	'('		1336107	1					
ANR	1338037	ExpressionStatement	psc -> escaping = 0	1356:24:41011:41028	1336107	1	True				
ANR	1338038	AssignmentExpression	psc -> escaping = 0		1336107	0		=			
ANR	1338039	PtrMemberAccess	psc -> escaping		1336107	0					
ANR	1338040	Identifier	psc		1336107	0					
ANR	1338041	Identifier	escaping		1336107	1					
ANR	1338042	PrimaryExpression	0		1336107	1					
ANR	1338043	ElseStatement	else		1336107	0					
ANR	1338044	IfStatement	if ( ( ( c < 32 ) && ( c != 10 ) ) || ( c >= 128 ) )		1336107	0					
ANR	1338045	Condition	( ( c < 32 ) && ( c != 10 ) ) || ( c >= 128 )	1358:27:41079:41115	1336107	0	True				
ANR	1338046	OrExpression	( ( c < 32 ) && ( c != 10 ) ) || ( c >= 128 )		1336107	0		||			
ANR	1338047	AndExpression	( c < 32 ) && ( c != 10 )		1336107	0		&&			
ANR	1338048	RelationalExpression	c < 32		1336107	0		<			
ANR	1338049	Identifier	c		1336107	0					
ANR	1338050	PrimaryExpression	32		1336107	1					
ANR	1338051	EqualityExpression	c != 10		1336107	1		!=			
ANR	1338052	Identifier	c		1336107	0					
ANR	1338053	PrimaryExpression	10		1336107	1					
ANR	1338054	RelationalExpression	c >= 128		1336107	1		>=			
ANR	1338055	Identifier	c		1336107	0					
ANR	1338056	PrimaryExpression	128		1336107	1					
ANR	1338057	CompoundStatement		336:66:14502:14502	1336107	1					
ANR	1338058	IfStatement	if ( psc -> escaping == 0 )		1336107	0					
ANR	1338059	Condition	psc -> escaping == 0	1359:24:41144:41161	1336107	0	True				
ANR	1338060	EqualityExpression	psc -> escaping == 0		1336107	0		==			
ANR	1338061	PtrMemberAccess	psc -> escaping		1336107	0					
ANR	1338062	Identifier	psc		1336107	0					
ANR	1338063	Identifier	escaping		1336107	1					
ANR	1338064	PrimaryExpression	0		1336107	1					
ANR	1338065	CompoundStatement		337:44:14548:14548	1336107	1					
ANR	1338066	ExpressionStatement	c = '\\\\'	1360:24:41190:41198	1336107	0	True				
ANR	1338067	AssignmentExpression	c = '\\\\'		1336107	0		=			
ANR	1338068	Identifier	c		1336107	0					
ANR	1338069	PrimaryExpression	'\\\\'		1336107	1					
ANR	1338070	ExpressionStatement	psc -> outpos --	1361:24:41224:41237	1336107	1	True				
ANR	1338071	PostIncDecOperationExpression	psc -> outpos --		1336107	0					
ANR	1338072	PtrMemberAccess	psc -> outpos		1336107	0					
ANR	1338073	Identifier	psc		1336107	0					
ANR	1338074	Identifier	outpos		1336107	1					
ANR	1338075	IncDec	--		1336107	1					
ANR	1338076	ExpressionStatement	psc -> escaping = 1	1362:24:41263:41280	1336107	2	True				
ANR	1338077	AssignmentExpression	psc -> escaping = 1		1336107	0		=			
ANR	1338078	PtrMemberAccess	psc -> escaping		1336107	0					
ANR	1338079	Identifier	psc		1336107	0					
ANR	1338080	Identifier	escaping		1336107	1					
ANR	1338081	PrimaryExpression	1		1336107	1					
ANR	1338082	ElseStatement	else		1336107	0					
ANR	1338083	IfStatement	if ( psc -> escaping == 1 )		1336107	0					
ANR	1338084	Condition	psc -> escaping == 1	1363:31:41313:41330	1336107	0	True				
ANR	1338085	EqualityExpression	psc -> escaping == 1		1336107	0		==			
ANR	1338086	PtrMemberAccess	psc -> escaping		1336107	0					
ANR	1338087	Identifier	psc		1336107	0					
ANR	1338088	Identifier	escaping		1336107	1					
ANR	1338089	PrimaryExpression	1		1336107	1					
ANR	1338090	CompoundStatement		341:51:14717:14717	1336107	1					
ANR	1338091	ExpressionStatement	c = '0' + ( ( c >> 6 ) & 3 )	1364:24:41359:41381	1336107	0	True				
ANR	1338092	AssignmentExpression	c = '0' + ( ( c >> 6 ) & 3 )		1336107	0		=			
ANR	1338093	Identifier	c		1336107	0					
ANR	1338094	AdditiveExpression	'0' + ( ( c >> 6 ) & 3 )		1336107	1		+			
ANR	1338095	PrimaryExpression	'0'		1336107	0					
ANR	1338096	BitAndExpression	( c >> 6 ) & 3		1336107	1		&			
ANR	1338097	ShiftExpression	c >> 6		1336107	0		>>			
ANR	1338098	Identifier	c		1336107	0					
ANR	1338099	PrimaryExpression	6		1336107	1					
ANR	1338100	PrimaryExpression	3		1336107	1					
ANR	1338101	ExpressionStatement	psc -> outpos --	1365:24:41407:41420	1336107	1	True				
ANR	1338102	PostIncDecOperationExpression	psc -> outpos --		1336107	0					
ANR	1338103	PtrMemberAccess	psc -> outpos		1336107	0					
ANR	1338104	Identifier	psc		1336107	0					
ANR	1338105	Identifier	outpos		1336107	1					
ANR	1338106	IncDec	--		1336107	1					
ANR	1338107	ExpressionStatement	psc -> escaping = 2	1366:24:41446:41463	1336107	2	True				
ANR	1338108	AssignmentExpression	psc -> escaping = 2		1336107	0		=			
ANR	1338109	PtrMemberAccess	psc -> escaping		1336107	0					
ANR	1338110	Identifier	psc		1336107	0					
ANR	1338111	Identifier	escaping		1336107	1					
ANR	1338112	PrimaryExpression	2		1336107	1					
ANR	1338113	ElseStatement	else		1336107	0					
ANR	1338114	IfStatement	if ( psc -> escaping == 2 )		1336107	0					
ANR	1338115	Condition	psc -> escaping == 2	1367:31:41496:41513	1336107	0	True				
ANR	1338116	EqualityExpression	psc -> escaping == 2		1336107	0		==			
ANR	1338117	PtrMemberAccess	psc -> escaping		1336107	0					
ANR	1338118	Identifier	psc		1336107	0					
ANR	1338119	Identifier	escaping		1336107	1					
ANR	1338120	PrimaryExpression	2		1336107	1					
ANR	1338121	CompoundStatement		345:51:14900:14900	1336107	1					
ANR	1338122	ExpressionStatement	c = '0' + ( ( c >> 3 ) & 7 )	1368:24:41542:41564	1336107	0	True				
ANR	1338123	AssignmentExpression	c = '0' + ( ( c >> 3 ) & 7 )		1336107	0		=			
ANR	1338124	Identifier	c		1336107	0					
ANR	1338125	AdditiveExpression	'0' + ( ( c >> 3 ) & 7 )		1336107	1		+			
ANR	1338126	PrimaryExpression	'0'		1336107	0					
ANR	1338127	BitAndExpression	( c >> 3 ) & 7		1336107	1		&			
ANR	1338128	ShiftExpression	c >> 3		1336107	0		>>			
ANR	1338129	Identifier	c		1336107	0					
ANR	1338130	PrimaryExpression	3		1336107	1					
ANR	1338131	PrimaryExpression	7		1336107	1					
ANR	1338132	ExpressionStatement	psc -> outpos --	1369:24:41590:41603	1336107	1	True				
ANR	1338133	PostIncDecOperationExpression	psc -> outpos --		1336107	0					
ANR	1338134	PtrMemberAccess	psc -> outpos		1336107	0					
ANR	1338135	Identifier	psc		1336107	0					
ANR	1338136	Identifier	outpos		1336107	1					
ANR	1338137	IncDec	--		1336107	1					
ANR	1338138	ExpressionStatement	psc -> escaping = 3	1370:24:41629:41646	1336107	2	True				
ANR	1338139	AssignmentExpression	psc -> escaping = 3		1336107	0		=			
ANR	1338140	PtrMemberAccess	psc -> escaping		1336107	0					
ANR	1338141	Identifier	psc		1336107	0					
ANR	1338142	Identifier	escaping		1336107	1					
ANR	1338143	PrimaryExpression	3		1336107	1					
ANR	1338144	ElseStatement	else		1336107	0					
ANR	1338145	IfStatement	if ( psc -> escaping == 3 )		1336107	0					
ANR	1338146	Condition	psc -> escaping == 3	1371:31:41679:41696	1336107	0	True				
ANR	1338147	EqualityExpression	psc -> escaping == 3		1336107	0		==			
ANR	1338148	PtrMemberAccess	psc -> escaping		1336107	0					
ANR	1338149	Identifier	psc		1336107	0					
ANR	1338150	Identifier	escaping		1336107	1					
ANR	1338151	PrimaryExpression	3		1336107	1					
ANR	1338152	CompoundStatement		349:51:15083:15083	1336107	1					
ANR	1338153	ExpressionStatement	c = '0' + ( c & 7 )	1372:24:41725:41740	1336107	0	True				
ANR	1338154	AssignmentExpression	c = '0' + ( c & 7 )		1336107	0		=			
ANR	1338155	Identifier	c		1336107	0					
ANR	1338156	AdditiveExpression	'0' + ( c & 7 )		1336107	1		+			
ANR	1338157	PrimaryExpression	'0'		1336107	0					
ANR	1338158	BitAndExpression	c & 7		1336107	1		&			
ANR	1338159	Identifier	c		1336107	0					
ANR	1338160	PrimaryExpression	7		1336107	1					
ANR	1338161	ExpressionStatement	psc -> escaping = 0	1373:24:41766:41783	1336107	1	True				
ANR	1338162	AssignmentExpression	psc -> escaping = 0		1336107	0		=			
ANR	1338163	PtrMemberAccess	psc -> escaping		1336107	0					
ANR	1338164	Identifier	psc		1336107	0					
ANR	1338165	Identifier	escaping		1336107	1					
ANR	1338166	PrimaryExpression	0		1336107	1					
ANR	1338167	ExpressionStatement	* out ++ = c	1376:16:41841:41851	1336107	2	True				
ANR	1338168	AssignmentExpression	* out ++ = c		1336107	0		=			
ANR	1338169	UnaryOperationExpression	* out ++		1336107	0					
ANR	1338170	UnaryOperator	*		1336107	0					
ANR	1338171	PostIncDecOperationExpression	out ++		1336107	1					
ANR	1338172	Identifier	out		1336107	0					
ANR	1338173	IncDec	++		1336107	1					
ANR	1338174	Identifier	c		1336107	1					
ANR	1338175	IfStatement	if ( psc -> outpos == psc -> outend )		1336107	3					
ANR	1338176	Condition	psc -> outpos == psc -> outend	1377:20:41873:41898	1336107	0	True				
ANR	1338177	EqualityExpression	psc -> outpos == psc -> outend		1336107	0		==			
ANR	1338178	PtrMemberAccess	psc -> outpos		1336107	0					
ANR	1338179	Identifier	psc		1336107	0					
ANR	1338180	Identifier	outpos		1336107	1					
ANR	1338181	PtrMemberAccess	psc -> outend		1336107	1					
ANR	1338182	Identifier	psc		1336107	0					
ANR	1338183	Identifier	outend		1336107	1					
ANR	1338184	CompoundStatement		355:48:15285:15285	1336107	1					
ANR	1338185	ExpressionStatement	psc -> outpos = 0	1378:20:41923:41938	1336107	0	True				
ANR	1338186	AssignmentExpression	psc -> outpos = 0		1336107	0		=			
ANR	1338187	PtrMemberAccess	psc -> outpos		1336107	0					
ANR	1338188	Identifier	psc		1336107	0					
ANR	1338189	Identifier	outpos		1336107	1					
ANR	1338190	PrimaryExpression	0		1336107	1					
ANR	1338191	ExpressionStatement	psc -> outend = 0	1379:20:41960:41975	1336107	1	True				
ANR	1338192	AssignmentExpression	psc -> outend = 0		1336107	0		=			
ANR	1338193	PtrMemberAccess	psc -> outend		1336107	0					
ANR	1338194	Identifier	psc		1336107	0					
ANR	1338195	Identifier	outend		1336107	1					
ANR	1338196	PrimaryExpression	0		1336107	1					
ANR	1338197	ExpressionStatement	psc -> noescape = 0	1380:20:41997:42014	1336107	2	True				
ANR	1338198	AssignmentExpression	psc -> noescape = 0		1336107	0		=			
ANR	1338199	PtrMemberAccess	psc -> noescape		1336107	0					
ANR	1338200	Identifier	psc		1336107	0					
ANR	1338201	Identifier	noescape		1336107	1					
ANR	1338202	PrimaryExpression	0		1336107	1					
ANR	1338203	ExpressionStatement	psc -> state = PSC_BufferIn	1381:20:42036:42061	1336107	3	True				
ANR	1338204	AssignmentExpression	psc -> state = PSC_BufferIn		1336107	0		=			
ANR	1338205	PtrMemberAccess	psc -> state		1336107	0					
ANR	1338206	Identifier	psc		1336107	0					
ANR	1338207	Identifier	state		1336107	1					
ANR	1338208	Identifier	PSC_BufferIn		1336107	1					
ANR	1338209	BreakStatement	break ;	1383:16:42097:42102	1336107	4	True				
ANR	1338210	Label	case PSC_BufferCopy :	1385:12:42130:42149	1336107	11	True				
ANR	1338211	Identifier	PSC_BufferCopy		1336107	0					
ANR	1338212	IfStatement	if ( psc -> outpos < psc -> outend )		1336107	12					
ANR	1338213	Condition	psc -> outpos < psc -> outend	1386:20:42171:42195	1336107	0	True				
ANR	1338214	RelationalExpression	psc -> outpos < psc -> outend		1336107	0		<			
ANR	1338215	PtrMemberAccess	psc -> outpos		1336107	0					
ANR	1338216	Identifier	psc		1336107	0					
ANR	1338217	Identifier	outpos		1336107	1					
ANR	1338218	PtrMemberAccess	psc -> outend		1336107	1					
ANR	1338219	Identifier	psc		1336107	0					
ANR	1338220	Identifier	outend		1336107	1					
ANR	1338221	CompoundStatement		364:47:15582:15582	1336107	1					
ANR	1338222	ExpressionStatement	* out ++ = psc -> bufferout [ psc -> outpos ++ ]	1387:20:42220:42258	1336107	0	True				
ANR	1338223	AssignmentExpression	* out ++ = psc -> bufferout [ psc -> outpos ++ ]		1336107	0		=			
ANR	1338224	UnaryOperationExpression	* out ++		1336107	0					
ANR	1338225	UnaryOperator	*		1336107	0					
ANR	1338226	PostIncDecOperationExpression	out ++		1336107	1					
ANR	1338227	Identifier	out		1336107	0					
ANR	1338228	IncDec	++		1336107	1					
ANR	1338229	ArrayIndexing	psc -> bufferout [ psc -> outpos ++ ]		1336107	1					
ANR	1338230	PtrMemberAccess	psc -> bufferout		1336107	0					
ANR	1338231	Identifier	psc		1336107	0					
ANR	1338232	Identifier	bufferout		1336107	1					
ANR	1338233	PostIncDecOperationExpression	psc -> outpos ++		1336107	1					
ANR	1338234	PtrMemberAccess	psc -> outpos		1336107	0					
ANR	1338235	Identifier	psc		1336107	0					
ANR	1338236	Identifier	outpos		1336107	1					
ANR	1338237	IncDec	++		1336107	1					
ANR	1338238	BreakStatement	break ;	1388:20:42280:42285	1336107	1	True				
ANR	1338239	ExpressionStatement	* out ++ = psc -> pgetc ( psc -> file )	1390:16:42321:42351	1336107	13	True				
ANR	1338240	AssignmentExpression	* out ++ = psc -> pgetc ( psc -> file )		1336107	0		=			
ANR	1338241	UnaryOperationExpression	* out ++		1336107	0					
ANR	1338242	UnaryOperator	*		1336107	0					
ANR	1338243	PostIncDecOperationExpression	out ++		1336107	1					
ANR	1338244	Identifier	out		1336107	0					
ANR	1338245	IncDec	++		1336107	1					
ANR	1338246	CallExpression	psc -> pgetc ( psc -> file )		1336107	1					
ANR	1338247	Callee	psc -> pgetc		1336107	0					
ANR	1338248	PtrMemberAccess	psc -> pgetc		1336107	0					
ANR	1338249	Identifier	psc		1336107	0					
ANR	1338250	Identifier	pgetc		1336107	1					
ANR	1338251	ArgumentList	psc -> file		1336107	1					
ANR	1338252	Argument	psc -> file		1336107	0					
ANR	1338253	PtrMemberAccess	psc -> file		1336107	0					
ANR	1338254	Identifier	psc		1336107	0					
ANR	1338255	Identifier	file		1336107	1					
ANR	1338256	ExpressionStatement	psc -> buffercopy --	1391:16:42369:42386	1336107	14	True				
ANR	1338257	PostIncDecOperationExpression	psc -> buffercopy --		1336107	0					
ANR	1338258	PtrMemberAccess	psc -> buffercopy		1336107	0					
ANR	1338259	Identifier	psc		1336107	0					
ANR	1338260	Identifier	buffercopy		1336107	1					
ANR	1338261	IncDec	--		1336107	1					
ANR	1338262	IfStatement	if ( psc -> buffercopy == 0 )		1336107	15					
ANR	1338263	Condition	psc -> buffercopy == 0	1392:20:42408:42427	1336107	0	True				
ANR	1338264	EqualityExpression	psc -> buffercopy == 0		1336107	0		==			
ANR	1338265	PtrMemberAccess	psc -> buffercopy		1336107	0					
ANR	1338266	Identifier	psc		1336107	0					
ANR	1338267	Identifier	buffercopy		1336107	1					
ANR	1338268	PrimaryExpression	0		1336107	1					
ANR	1338269	CompoundStatement		370:42:15814:15814	1336107	1					
ANR	1338270	ExpressionStatement	psc -> outpos = 0	1393:20:42452:42467	1336107	0	True				
ANR	1338271	AssignmentExpression	psc -> outpos = 0		1336107	0		=			
ANR	1338272	PtrMemberAccess	psc -> outpos		1336107	0					
ANR	1338273	Identifier	psc		1336107	0					
ANR	1338274	Identifier	outpos		1336107	1					
ANR	1338275	PrimaryExpression	0		1336107	1					
ANR	1338276	ExpressionStatement	psc -> outend = 0	1394:20:42489:42504	1336107	1	True				
ANR	1338277	AssignmentExpression	psc -> outend = 0		1336107	0		=			
ANR	1338278	PtrMemberAccess	psc -> outend		1336107	0					
ANR	1338279	Identifier	psc		1336107	0					
ANR	1338280	Identifier	outend		1336107	1					
ANR	1338281	PrimaryExpression	0		1336107	1					
ANR	1338282	ExpressionStatement	psc -> state = PSC_BufferIn	1395:20:42526:42551	1336107	2	True				
ANR	1338283	AssignmentExpression	psc -> state = PSC_BufferIn		1336107	0		=			
ANR	1338284	PtrMemberAccess	psc -> state		1336107	0					
ANR	1338285	Identifier	psc		1336107	0					
ANR	1338286	Identifier	state		1336107	1					
ANR	1338287	Identifier	PSC_BufferIn		1336107	1					
ANR	1338288	BreakStatement	break ;	1397:16:42587:42592	1336107	16	True				
ANR	1338289	Label	case PSC_InString :	1398:12:42606:42623	1336107	17	True				
ANR	1338290	Identifier	PSC_InString		1336107	0					
ANR	1338291	ExpressionStatement	c = psc -> pgetc ( psc -> file )	1399:16:42641:42666	1336107	18	True				
ANR	1338292	AssignmentExpression	c = psc -> pgetc ( psc -> file )		1336107	0		=			
ANR	1338293	Identifier	c		1336107	0					
ANR	1338294	CallExpression	psc -> pgetc ( psc -> file )		1336107	1					
ANR	1338295	Callee	psc -> pgetc		1336107	0					
ANR	1338296	PtrMemberAccess	psc -> pgetc		1336107	0					
ANR	1338297	Identifier	psc		1336107	0					
ANR	1338298	Identifier	pgetc		1336107	1					
ANR	1338299	ArgumentList	psc -> file		1336107	1					
ANR	1338300	Argument	psc -> file		1336107	0					
ANR	1338301	PtrMemberAccess	psc -> file		1336107	0					
ANR	1338302	Identifier	psc		1336107	0					
ANR	1338303	Identifier	file		1336107	1					
ANR	1338304	IfStatement	if ( ( c == ')' ) && ( -- psc -> paren == 0 ) )		1336107	19					
ANR	1338305	Condition	( c == ')' ) && ( -- psc -> paren == 0 )	1400:20:42688:42720	1336107	0	True				
ANR	1338306	AndExpression	( c == ')' ) && ( -- psc -> paren == 0 )		1336107	0		&&			
ANR	1338307	EqualityExpression	c == ')'		1336107	0		==			
ANR	1338308	Identifier	c		1336107	0					
ANR	1338309	PrimaryExpression	')'		1336107	1					
ANR	1338310	EqualityExpression	-- psc -> paren == 0		1336107	1		==			
ANR	1338311	UnaryExpression	-- psc -> paren		1336107	0					
ANR	1338312	IncDec	--		1336107	0					
ANR	1338313	PtrMemberAccess	psc -> paren		1336107	1					
ANR	1338314	Identifier	psc		1336107	0					
ANR	1338315	Identifier	paren		1336107	1					
ANR	1338316	PrimaryExpression	0		1336107	1					
ANR	1338317	CompoundStatement		378:55:16107:16107	1336107	1					
ANR	1338318	ExpressionStatement	psc -> wasascii = 0	1401:20:42745:42762	1336107	0	True				
ANR	1338319	AssignmentExpression	psc -> wasascii = 0		1336107	0		=			
ANR	1338320	PtrMemberAccess	psc -> wasascii		1336107	0					
ANR	1338321	Identifier	psc		1336107	0					
ANR	1338322	Identifier	wasascii		1336107	1					
ANR	1338323	PrimaryExpression	0		1336107	1					
ANR	1338324	IfStatement	if ( psc -> binary )		1336107	1					
ANR	1338325	Condition	psc -> binary	1402:24:42788:42798	1336107	0	True				
ANR	1338326	PtrMemberAccess	psc -> binary		1336107	0					
ANR	1338327	Identifier	psc		1336107	0					
ANR	1338328	Identifier	binary		1336107	1					
ANR	1338329	CompoundStatement		380:37:16185:16185	1336107	1					
ANR	1338330	IfStatement	if ( psc -> inpos < 256 )		1336107	0					
ANR	1338331	Condition	psc -> inpos < 256	1404:28:42892:42907	1336107	0	True				
ANR	1338332	RelationalExpression	psc -> inpos < 256		1336107	0		<			
ANR	1338333	PtrMemberAccess	psc -> inpos		1336107	0					
ANR	1338334	Identifier	psc		1336107	0					
ANR	1338335	Identifier	inpos		1336107	1					
ANR	1338336	PrimaryExpression	256		1336107	1					
ANR	1338337	CompoundStatement		382:46:16294:16294	1336107	1					
ANR	1338338	ExpressionStatement	"pscompact_bufferatstart ( psc , psc -> inpos )"	1405:28:42940:42980	1336107	0	True				
ANR	1338339	CallExpression	"pscompact_bufferatstart ( psc , psc -> inpos )"		1336107	0					
ANR	1338340	Callee	pscompact_bufferatstart		1336107	0					
ANR	1338341	Identifier	pscompact_bufferatstart		1336107	0					
ANR	1338342	ArgumentList	psc		1336107	1					
ANR	1338343	Argument	psc		1336107	0					
ANR	1338344	Identifier	psc		1336107	0					
ANR	1338345	Argument	psc -> inpos		1336107	1					
ANR	1338346	PtrMemberAccess	psc -> inpos		1336107	0					
ANR	1338347	Identifier	psc		1336107	0					
ANR	1338348	Identifier	inpos		1336107	1					
ANR	1338349	ExpressionStatement	"pscompact_bufferatstart ( psc , 142 )"	1406:28:43010:43043	1336107	1	True				
ANR	1338350	CallExpression	"pscompact_bufferatstart ( psc , 142 )"		1336107	0					
ANR	1338351	Callee	pscompact_bufferatstart		1336107	0					
ANR	1338352	Identifier	pscompact_bufferatstart		1336107	0					
ANR	1338353	ArgumentList	psc		1336107	1					
ANR	1338354	Argument	psc		1336107	0					
ANR	1338355	Identifier	psc		1336107	0					
ANR	1338356	Argument	142		1336107	1					
ANR	1338357	PrimaryExpression	142		1336107	0					
ANR	1338358	ExpressionStatement	pscompact_copyinout_bin ( psc )	1407:28:43073:43101	1336107	2	True				
ANR	1338359	CallExpression	pscompact_copyinout_bin ( psc )		1336107	0					
ANR	1338360	Callee	pscompact_copyinout_bin		1336107	0					
ANR	1338361	Identifier	pscompact_copyinout_bin		1336107	0					
ANR	1338362	ArgumentList	psc		1336107	1					
ANR	1338363	Argument	psc		1336107	0					
ANR	1338364	Identifier	psc		1336107	0					
ANR	1338365	BreakStatement	break ;	1408:28:43131:43136	1336107	3	True				
ANR	1338366	ElseStatement	else		1336107	0					
ANR	1338367	IfStatement	if ( psc -> inpos < 65536 )		1336107	0					
ANR	1338368	Condition	psc -> inpos < 65536	1409:35:43173:43190	1336107	0	True				
ANR	1338369	RelationalExpression	psc -> inpos < 65536		1336107	0		<			
ANR	1338370	PtrMemberAccess	psc -> inpos		1336107	0					
ANR	1338371	Identifier	psc		1336107	0					
ANR	1338372	Identifier	inpos		1336107	1					
ANR	1338373	PrimaryExpression	65536		1336107	1					
ANR	1338374	CompoundStatement		387:55:16577:16577	1336107	1					
ANR	1338375	ExpressionStatement	"pscompact_bufferatstart ( psc , psc -> inpos >> 8 )"	1410:28:43223:43266	1336107	0	True				
ANR	1338376	CallExpression	"pscompact_bufferatstart ( psc , psc -> inpos >> 8 )"		1336107	0					
ANR	1338377	Callee	pscompact_bufferatstart		1336107	0					
ANR	1338378	Identifier	pscompact_bufferatstart		1336107	0					
ANR	1338379	ArgumentList	psc		1336107	1					
ANR	1338380	Argument	psc		1336107	0					
ANR	1338381	Identifier	psc		1336107	0					
ANR	1338382	Argument	psc -> inpos >> 8		1336107	1					
ANR	1338383	ShiftExpression	psc -> inpos >> 8		1336107	0		>>			
ANR	1338384	PtrMemberAccess	psc -> inpos		1336107	0					
ANR	1338385	Identifier	psc		1336107	0					
ANR	1338386	Identifier	inpos		1336107	1					
ANR	1338387	PrimaryExpression	8		1336107	1					
ANR	1338388	ExpressionStatement	"pscompact_bufferatstart ( psc , psc -> inpos & 255 )"	1411:28:43296:43342	1336107	1	True				
ANR	1338389	CallExpression	"pscompact_bufferatstart ( psc , psc -> inpos & 255 )"		1336107	0					
ANR	1338390	Callee	pscompact_bufferatstart		1336107	0					
ANR	1338391	Identifier	pscompact_bufferatstart		1336107	0					
ANR	1338392	ArgumentList	psc		1336107	1					
ANR	1338393	Argument	psc		1336107	0					
ANR	1338394	Identifier	psc		1336107	0					
ANR	1338395	Argument	psc -> inpos & 255		1336107	1					
ANR	1338396	BitAndExpression	psc -> inpos & 255		1336107	0		&			
ANR	1338397	PtrMemberAccess	psc -> inpos		1336107	0					
ANR	1338398	Identifier	psc		1336107	0					
ANR	1338399	Identifier	inpos		1336107	1					
ANR	1338400	PrimaryExpression	255		1336107	1					
ANR	1338401	ExpressionStatement	"pscompact_bufferatstart ( psc , 144 )"	1412:28:43372:43405	1336107	2	True				
ANR	1338402	CallExpression	"pscompact_bufferatstart ( psc , 144 )"		1336107	0					
ANR	1338403	Callee	pscompact_bufferatstart		1336107	0					
ANR	1338404	Identifier	pscompact_bufferatstart		1336107	0					
ANR	1338405	ArgumentList	psc		1336107	1					
ANR	1338406	Argument	psc		1336107	0					
ANR	1338407	Identifier	psc		1336107	0					
ANR	1338408	Argument	144		1336107	1					
ANR	1338409	PrimaryExpression	144		1336107	0					
ANR	1338410	ExpressionStatement	pscompact_copyinout_bin ( psc )	1413:28:43435:43463	1336107	3	True				
ANR	1338411	CallExpression	pscompact_copyinout_bin ( psc )		1336107	0					
ANR	1338412	Callee	pscompact_copyinout_bin		1336107	0					
ANR	1338413	Identifier	pscompact_copyinout_bin		1336107	0					
ANR	1338414	ArgumentList	psc		1336107	1					
ANR	1338415	Argument	psc		1336107	0					
ANR	1338416	Identifier	psc		1336107	0					
ANR	1338417	BreakStatement	break ;	1414:28:43493:43498	1336107	4	True				
ANR	1338418	ExpressionStatement	"pscompact_bufferatstart ( psc , '(' )"	1419:20:43674:43707	1336107	2	True				
ANR	1338419	CallExpression	"pscompact_bufferatstart ( psc , '(' )"		1336107	0					
ANR	1338420	Callee	pscompact_bufferatstart		1336107	0					
ANR	1338421	Identifier	pscompact_bufferatstart		1336107	0					
ANR	1338422	ArgumentList	psc		1336107	1					
ANR	1338423	Argument	psc		1336107	0					
ANR	1338424	Identifier	psc		1336107	0					
ANR	1338425	Argument	'('		1336107	1					
ANR	1338426	PrimaryExpression	'('		1336107	0					
ANR	1338427	ExpressionStatement	"pscompact_buffer ( psc , ')' )"	1420:20:43729:43755	1336107	3	True				
ANR	1338428	CallExpression	"pscompact_buffer ( psc , ')' )"		1336107	0					
ANR	1338429	Callee	pscompact_buffer		1336107	0					
ANR	1338430	Identifier	pscompact_buffer		1336107	0					
ANR	1338431	ArgumentList	psc		1336107	1					
ANR	1338432	Argument	psc		1336107	0					
ANR	1338433	Identifier	psc		1336107	0					
ANR	1338434	Argument	')'		1336107	1					
ANR	1338435	PrimaryExpression	')'		1336107	0					
ANR	1338436	ExpressionStatement	pscompact_copyinout ( psc )	1421:20:43777:43801	1336107	4	True				
ANR	1338437	CallExpression	pscompact_copyinout ( psc )		1336107	0					
ANR	1338438	Callee	pscompact_copyinout		1336107	0					
ANR	1338439	Identifier	pscompact_copyinout		1336107	0					
ANR	1338440	ArgumentList	psc		1336107	1					
ANR	1338441	Argument	psc		1336107	0					
ANR	1338442	Identifier	psc		1336107	0					
ANR	1338443	BreakStatement	break ;	1422:20:43823:43828	1336107	5	True				
ANR	1338444	ElseStatement	else		1336107	0					
ANR	1338445	IfStatement	if ( c == '\\\\' )		1336107	0					
ANR	1338446	Condition	c == '\\\\'	1423:27:43857:43865	1336107	0	True				
ANR	1338447	EqualityExpression	c == '\\\\'		1336107	0		==			
ANR	1338448	Identifier	c		1336107	0					
ANR	1338449	PrimaryExpression	'\\\\'		1336107	1					
ANR	1338450	CompoundStatement		401:38:17252:17252	1336107	1					
ANR	1338451	ExpressionStatement	c = psc -> pgetc ( psc -> file )	1424:20:43890:43915	1336107	0	True				
ANR	1338452	AssignmentExpression	c = psc -> pgetc ( psc -> file )		1336107	0		=			
ANR	1338453	Identifier	c		1336107	0					
ANR	1338454	CallExpression	psc -> pgetc ( psc -> file )		1336107	1					
ANR	1338455	Callee	psc -> pgetc		1336107	0					
ANR	1338456	PtrMemberAccess	psc -> pgetc		1336107	0					
ANR	1338457	Identifier	psc		1336107	0					
ANR	1338458	Identifier	pgetc		1336107	1					
ANR	1338459	ArgumentList	psc -> file		1336107	1					
ANR	1338460	Argument	psc -> file		1336107	0					
ANR	1338461	PtrMemberAccess	psc -> file		1336107	0					
ANR	1338462	Identifier	psc		1336107	0					
ANR	1338463	Identifier	file		1336107	1					
ANR	1338464	IfStatement	if ( c == 10 )		1336107	1					
ANR	1338465	Condition	c == 10	1425:24:43941:43947	1336107	0	True				
ANR	1338466	EqualityExpression	c == 10		1336107	0		==			
ANR	1338467	Identifier	c		1336107	0					
ANR	1338468	PrimaryExpression	10		1336107	1					
ANR	1338469	BreakStatement	break ;	1426:24:43974:43979	1336107	1	True				
ANR	1338470	ElseStatement	else		1336107	0					
ANR	1338471	IfStatement	if ( c == 'b' )		1336107	0					
ANR	1338472	Condition	c == 'b'	1427:29:44010:44017	1336107	0	True				
ANR	1338473	EqualityExpression	c == 'b'		1336107	0		==			
ANR	1338474	Identifier	c		1336107	0					
ANR	1338475	PrimaryExpression	'b'		1336107	1					
ANR	1338476	ExpressionStatement	c = 8	1428:24:44044:44049	1336107	1	True				
ANR	1338477	AssignmentExpression	c = 8		1336107	0		=			
ANR	1338478	Identifier	c		1336107	0					
ANR	1338479	PrimaryExpression	8		1336107	1					
ANR	1338480	ElseStatement	else		1336107	0					
ANR	1338481	IfStatement	if ( c == 't' )		1336107	0					
ANR	1338482	Condition	c == 't'	1429:29:44080:44087	1336107	0	True				
ANR	1338483	EqualityExpression	c == 't'		1336107	0		==			
ANR	1338484	Identifier	c		1336107	0					
ANR	1338485	PrimaryExpression	't'		1336107	1					
ANR	1338486	ExpressionStatement	c = 9	1430:24:44114:44119	1336107	1	True				
ANR	1338487	AssignmentExpression	c = 9		1336107	0		=			
ANR	1338488	Identifier	c		1336107	0					
ANR	1338489	PrimaryExpression	9		1336107	1					
ANR	1338490	ElseStatement	else		1336107	0					
ANR	1338491	IfStatement	if ( c == 'n' )		1336107	0					
ANR	1338492	Condition	c == 'n'	1431:29:44150:44157	1336107	0	True				
ANR	1338493	EqualityExpression	c == 'n'		1336107	0		==			
ANR	1338494	Identifier	c		1336107	0					
ANR	1338495	PrimaryExpression	'n'		1336107	1					
ANR	1338496	ExpressionStatement	c = 10	1432:24:44184:44190	1336107	1	True				
ANR	1338497	AssignmentExpression	c = 10		1336107	0		=			
ANR	1338498	Identifier	c		1336107	0					
ANR	1338499	PrimaryExpression	10		1336107	1					
ANR	1338500	ElseStatement	else		1336107	0					
ANR	1338501	IfStatement	if ( c == 'f' )		1336107	0					
ANR	1338502	Condition	c == 'f'	1433:29:44221:44228	1336107	0	True				
ANR	1338503	EqualityExpression	c == 'f'		1336107	0		==			
ANR	1338504	Identifier	c		1336107	0					
ANR	1338505	PrimaryExpression	'f'		1336107	1					
ANR	1338506	ExpressionStatement	c = 12	1434:24:44255:44261	1336107	1	True				
ANR	1338507	AssignmentExpression	c = 12		1336107	0		=			
ANR	1338508	Identifier	c		1336107	0					
ANR	1338509	PrimaryExpression	12		1336107	1					
ANR	1338510	ElseStatement	else		1336107	0					
ANR	1338511	IfStatement	if ( c == 'r' )		1336107	0					
ANR	1338512	Condition	c == 'r'	1435:29:44292:44299	1336107	0	True				
ANR	1338513	EqualityExpression	c == 'r'		1336107	0		==			
ANR	1338514	Identifier	c		1336107	0					
ANR	1338515	PrimaryExpression	'r'		1336107	1					
ANR	1338516	ExpressionStatement	c = 13	1436:24:44326:44332	1336107	1	True				
ANR	1338517	AssignmentExpression	c = 13		1336107	0		=			
ANR	1338518	Identifier	c		1336107	0					
ANR	1338519	PrimaryExpression	13		1336107	1					
ANR	1338520	ElseStatement	else		1336107	0					
ANR	1338521	IfStatement	if ( ( c >= '0' ) && ( c <= '7' ) )		1336107	0					
ANR	1338522	Condition	( c >= '0' ) && ( c <= '7' )	1437:29:44363:44386	1336107	0	True				
ANR	1338523	AndExpression	( c >= '0' ) && ( c <= '7' )		1336107	0		&&			
ANR	1338524	RelationalExpression	c >= '0'		1336107	0		>=			
ANR	1338525	Identifier	c		1336107	0					
ANR	1338526	PrimaryExpression	'0'		1336107	1					
ANR	1338527	RelationalExpression	c <= '7'		1336107	1		<=			
ANR	1338528	Identifier	c		1336107	0					
ANR	1338529	PrimaryExpression	'7'		1336107	1					
ANR	1338530	CompoundStatement		416:24:17799:17804	1336107	1					
ANR	1338531	IdentifierDeclStatement	int d ;	1438:24:44415:44420	1336107	0	True				
ANR	1338532	IdentifierDecl	d		1336107	0					
ANR	1338533	IdentifierDeclType	int		1336107	0					
ANR	1338534	Identifier	d		1336107	1					
ANR	1338535	ExpressionStatement	c = ( c - '0' )	1439:24:44446:44459	1336107	1	True				
ANR	1338536	AssignmentExpression	c = ( c - '0' )		1336107	0		=			
ANR	1338537	Identifier	c		1336107	0					
ANR	1338538	AdditiveExpression	c - '0'		1336107	1		-			
ANR	1338539	Identifier	c		1336107	0					
ANR	1338540	PrimaryExpression	'0'		1336107	1					
ANR	1338541	ExpressionStatement	d = psc -> pgetc ( psc -> file )	1440:24:44485:44510	1336107	2	True				
ANR	1338542	AssignmentExpression	d = psc -> pgetc ( psc -> file )		1336107	0		=			
ANR	1338543	Identifier	d		1336107	0					
ANR	1338544	CallExpression	psc -> pgetc ( psc -> file )		1336107	1					
ANR	1338545	Callee	psc -> pgetc		1336107	0					
ANR	1338546	PtrMemberAccess	psc -> pgetc		1336107	0					
ANR	1338547	Identifier	psc		1336107	0					
ANR	1338548	Identifier	pgetc		1336107	1					
ANR	1338549	ArgumentList	psc -> file		1336107	1					
ANR	1338550	Argument	psc -> file		1336107	0					
ANR	1338551	PtrMemberAccess	psc -> file		1336107	0					
ANR	1338552	Identifier	psc		1336107	0					
ANR	1338553	Identifier	file		1336107	1					
ANR	1338554	IfStatement	if ( ( d >= '0' ) && ( d <= '7' ) )		1336107	3					
ANR	1338555	Condition	( d >= '0' ) && ( d <= '7' )	1441:28:44540:44563	1336107	0	True				
ANR	1338556	AndExpression	( d >= '0' ) && ( d <= '7' )		1336107	0		&&			
ANR	1338557	RelationalExpression	d >= '0'		1336107	0		>=			
ANR	1338558	Identifier	d		1336107	0					
ANR	1338559	PrimaryExpression	'0'		1336107	1					
ANR	1338560	RelationalExpression	d <= '7'		1336107	1		<=			
ANR	1338561	Identifier	d		1336107	0					
ANR	1338562	PrimaryExpression	'7'		1336107	1					
ANR	1338563	CompoundStatement		419:54:17950:17950	1336107	1					
ANR	1338564	ExpressionStatement	c = ( c << 3 ) + ( d - '0' )	1442:28:44596:44616	1336107	0	True				
ANR	1338565	AssignmentExpression	c = ( c << 3 ) + ( d - '0' )		1336107	0		=			
ANR	1338566	Identifier	c		1336107	0					
ANR	1338567	AdditiveExpression	( c << 3 ) + ( d - '0' )		1336107	1		+			
ANR	1338568	ShiftExpression	c << 3		1336107	0		<<			
ANR	1338569	Identifier	c		1336107	0					
ANR	1338570	PrimaryExpression	3		1336107	1					
ANR	1338571	AdditiveExpression	d - '0'		1336107	1		-			
ANR	1338572	Identifier	d		1336107	0					
ANR	1338573	PrimaryExpression	'0'		1336107	1					
ANR	1338574	ExpressionStatement	d = psc -> pgetc ( psc -> file )	1443:28:44646:44671	1336107	1	True				
ANR	1338575	AssignmentExpression	d = psc -> pgetc ( psc -> file )		1336107	0		=			
ANR	1338576	Identifier	d		1336107	0					
ANR	1338577	CallExpression	psc -> pgetc ( psc -> file )		1336107	1					
ANR	1338578	Callee	psc -> pgetc		1336107	0					
ANR	1338579	PtrMemberAccess	psc -> pgetc		1336107	0					
ANR	1338580	Identifier	psc		1336107	0					
ANR	1338581	Identifier	pgetc		1336107	1					
ANR	1338582	ArgumentList	psc -> file		1336107	1					
ANR	1338583	Argument	psc -> file		1336107	0					
ANR	1338584	PtrMemberAccess	psc -> file		1336107	0					
ANR	1338585	Identifier	psc		1336107	0					
ANR	1338586	Identifier	file		1336107	1					
ANR	1338587	IfStatement	if ( ( d >= '0' ) && ( d <= '7' ) )		1336107	2					
ANR	1338588	Condition	( d >= '0' ) && ( d <= '7' )	1444:32:44705:44728	1336107	0	True				
ANR	1338589	AndExpression	( d >= '0' ) && ( d <= '7' )		1336107	0		&&			
ANR	1338590	RelationalExpression	d >= '0'		1336107	0		>=			
ANR	1338591	Identifier	d		1336107	0					
ANR	1338592	PrimaryExpression	'0'		1336107	1					
ANR	1338593	RelationalExpression	d <= '7'		1336107	1		<=			
ANR	1338594	Identifier	d		1336107	0					
ANR	1338595	PrimaryExpression	'7'		1336107	1					
ANR	1338596	CompoundStatement		422:58:18115:18115	1336107	1					
ANR	1338597	ExpressionStatement	c = ( c << 3 ) + ( d - '0' )	1445:32:44765:44785	1336107	0	True				
ANR	1338598	AssignmentExpression	c = ( c << 3 ) + ( d - '0' )		1336107	0		=			
ANR	1338599	Identifier	c		1336107	0					
ANR	1338600	AdditiveExpression	( c << 3 ) + ( d - '0' )		1336107	1		+			
ANR	1338601	ShiftExpression	c << 3		1336107	0		<<			
ANR	1338602	Identifier	c		1336107	0					
ANR	1338603	PrimaryExpression	3		1336107	1					
ANR	1338604	AdditiveExpression	d - '0'		1336107	1		-			
ANR	1338605	Identifier	d		1336107	0					
ANR	1338606	PrimaryExpression	'0'		1336107	1					
ANR	1338607	ElseStatement	else		1336107	0					
ANR	1338608	CompoundStatement		424:35:18206:18206	1336107	0					
ANR	1338609	ExpressionStatement	"psc -> unpgetc ( d , psc -> file )"	1447:32:44856:44882	1336107	0	True				
ANR	1338610	CallExpression	"psc -> unpgetc ( d , psc -> file )"		1336107	0					
ANR	1338611	Callee	psc -> unpgetc		1336107	0					
ANR	1338612	PtrMemberAccess	psc -> unpgetc		1336107	0					
ANR	1338613	Identifier	psc		1336107	0					
ANR	1338614	Identifier	unpgetc		1336107	1					
ANR	1338615	ArgumentList	d		1336107	1					
ANR	1338616	Argument	d		1336107	0					
ANR	1338617	Identifier	d		1336107	0					
ANR	1338618	Argument	psc -> file		1336107	1					
ANR	1338619	PtrMemberAccess	psc -> file		1336107	0					
ANR	1338620	Identifier	psc		1336107	0					
ANR	1338621	Identifier	file		1336107	1					
ANR	1338622	ElseStatement	else		1336107	0					
ANR	1338623	CompoundStatement		427:31:18329:18329	1336107	0					
ANR	1338624	ExpressionStatement	"psc -> unpgetc ( d , psc -> file )"	1450:28:44975:45001	1336107	0	True				
ANR	1338625	CallExpression	"psc -> unpgetc ( d , psc -> file )"		1336107	0					
ANR	1338626	Callee	psc -> unpgetc		1336107	0					
ANR	1338627	PtrMemberAccess	psc -> unpgetc		1336107	0					
ANR	1338628	Identifier	psc		1336107	0					
ANR	1338629	Identifier	unpgetc		1336107	1					
ANR	1338630	ArgumentList	d		1336107	1					
ANR	1338631	Argument	d		1336107	0					
ANR	1338632	Identifier	d		1336107	0					
ANR	1338633	Argument	psc -> file		1336107	1					
ANR	1338634	PtrMemberAccess	psc -> file		1336107	0					
ANR	1338635	Identifier	psc		1336107	0					
ANR	1338636	Identifier	file		1336107	1					
ANR	1338637	ExpressionStatement	c &= 0xFF	1452:24:45053:45062	1336107	4	True				
ANR	1338638	AssignmentExpression	c &= 0xFF		1336107	0		&=			
ANR	1338639	Identifier	c		1336107	0					
ANR	1338640	PrimaryExpression	0xFF		1336107	1					
ANR	1338641	ElseStatement	else		1336107	0					
ANR	1338642	IfStatement	if ( c == '(' )		1336107	0					
ANR	1338643	Condition	c == '('	1454:27:45113:45120	1336107	0	True				
ANR	1338644	EqualityExpression	c == '('		1336107	0		==			
ANR	1338645	Identifier	c		1336107	0					
ANR	1338646	PrimaryExpression	'('		1336107	1					
ANR	1338647	CompoundStatement		432:37:18507:18507	1336107	1					
ANR	1338648	ExpressionStatement	psc -> paren ++	1455:20:45145:45157	1336107	0	True				
ANR	1338649	PostIncDecOperationExpression	psc -> paren ++		1336107	0					
ANR	1338650	PtrMemberAccess	psc -> paren		1336107	0					
ANR	1338651	Identifier	psc		1336107	0					
ANR	1338652	Identifier	paren		1336107	1					
ANR	1338653	IncDec	++		1336107	1					
ANR	1338654	ExpressionStatement	"pscompact_buffer ( psc , c )"	1457:16:45193:45217	1336107	20	True				
ANR	1338655	CallExpression	"pscompact_buffer ( psc , c )"		1336107	0					
ANR	1338656	Callee	pscompact_buffer		1336107	0					
ANR	1338657	Identifier	pscompact_buffer		1336107	0					
ANR	1338658	ArgumentList	psc		1336107	1					
ANR	1338659	Argument	psc		1336107	0					
ANR	1338660	Identifier	psc		1336107	0					
ANR	1338661	Argument	c		1336107	1					
ANR	1338662	Identifier	c		1336107	0					
ANR	1338663	BreakStatement	break ;	1458:16:45235:45240	1336107	21	True				
ANR	1338664	Label	case PSC_InComment :	1459:12:45254:45272	1336107	22	True				
ANR	1338665	Identifier	PSC_InComment		1336107	0					
ANR	1338666	ExpressionStatement	c = psc -> pgetc ( psc -> file )	1461:16:45348:45373	1336107	23	True				
ANR	1338667	AssignmentExpression	c = psc -> pgetc ( psc -> file )		1336107	0		=			
ANR	1338668	Identifier	c		1336107	0					
ANR	1338669	CallExpression	psc -> pgetc ( psc -> file )		1336107	1					
ANR	1338670	Callee	psc -> pgetc		1336107	0					
ANR	1338671	PtrMemberAccess	psc -> pgetc		1336107	0					
ANR	1338672	Identifier	psc		1336107	0					
ANR	1338673	Identifier	pgetc		1336107	1					
ANR	1338674	ArgumentList	psc -> file		1336107	1					
ANR	1338675	Argument	psc -> file		1336107	0					
ANR	1338676	PtrMemberAccess	psc -> file		1336107	0					
ANR	1338677	Identifier	psc		1336107	0					
ANR	1338678	Identifier	file		1336107	1					
ANR	1338679	IfStatement	if ( ( c == 13 ) || ( c == 10 ) )		1336107	24					
ANR	1338680	Condition	( c == 13 ) || ( c == 10 )	1462:20:45395:45416	1336107	0	True				
ANR	1338681	OrExpression	( c == 13 ) || ( c == 10 )		1336107	0		||			
ANR	1338682	EqualityExpression	c == 13		1336107	0		==			
ANR	1338683	Identifier	c		1336107	0					
ANR	1338684	PrimaryExpression	13		1336107	1					
ANR	1338685	EqualityExpression	c == 10		1336107	1		==			
ANR	1338686	Identifier	c		1336107	0					
ANR	1338687	PrimaryExpression	10		1336107	1					
ANR	1338688	CompoundStatement		440:44:18803:18803	1336107	1					
ANR	1338689	IfStatement	"if ( ( psc -> inpos >= 3 ) && ( strncmp ( psc -> bufferin , ""END"" , 3 ) == 0 ) )"		1336107	0					
ANR	1338690	Condition	"( psc -> inpos >= 3 ) && ( strncmp ( psc -> bufferin , ""END"" , 3 ) == 0 )"	1463:24:45445:45528	1336107	0	True				
ANR	1338691	AndExpression	"( psc -> inpos >= 3 ) && ( strncmp ( psc -> bufferin , ""END"" , 3 ) == 0 )"		1336107	0		&&			
ANR	1338692	RelationalExpression	psc -> inpos >= 3		1336107	0		>=			
ANR	1338693	PtrMemberAccess	psc -> inpos		1336107	0					
ANR	1338694	Identifier	psc		1336107	0					
ANR	1338695	Identifier	inpos		1336107	1					
ANR	1338696	PrimaryExpression	3		1336107	1					
ANR	1338697	EqualityExpression	"strncmp ( psc -> bufferin , ""END"" , 3 ) == 0"		1336107	1		==			
ANR	1338698	CallExpression	"strncmp ( psc -> bufferin , ""END"" , 3 )"		1336107	0					
ANR	1338699	Callee	strncmp		1336107	0					
ANR	1338700	Identifier	strncmp		1336107	0					
ANR	1338701	ArgumentList	psc -> bufferin		1336107	1					
ANR	1338702	Argument	psc -> bufferin		1336107	0					
ANR	1338703	PtrMemberAccess	psc -> bufferin		1336107	0					
ANR	1338704	Identifier	psc		1336107	0					
ANR	1338705	Identifier	bufferin		1336107	1					
ANR	1338706	Argument	"""END"""		1336107	1					
ANR	1338707	PrimaryExpression	"""END"""		1336107	0					
ANR	1338708	Argument	3		1336107	2					
ANR	1338709	PrimaryExpression	3		1336107	0					
ANR	1338710	PrimaryExpression	0		1336107	1					
ANR	1338711	CompoundStatement		442:65:18915:18915	1336107	1					
ANR	1338712	ExpressionStatement	"pscompact_bufferatstart ( psc , '%' )"	1466:24:45613:45646	1336107	0	True				
ANR	1338713	CallExpression	"pscompact_bufferatstart ( psc , '%' )"		1336107	0					
ANR	1338714	Callee	pscompact_bufferatstart		1336107	0					
ANR	1338715	Identifier	pscompact_bufferatstart		1336107	0					
ANR	1338716	ArgumentList	psc		1336107	1					
ANR	1338717	Argument	psc		1336107	0					
ANR	1338718	Identifier	psc		1336107	0					
ANR	1338719	Argument	'%'		1336107	1					
ANR	1338720	PrimaryExpression	'%'		1336107	0					
ANR	1338721	ExpressionStatement	"pscompact_buffer ( psc , 10 )"	1467:24:45672:45697	1336107	1	True				
ANR	1338722	CallExpression	"pscompact_buffer ( psc , 10 )"		1336107	0					
ANR	1338723	Callee	pscompact_buffer		1336107	0					
ANR	1338724	Identifier	pscompact_buffer		1336107	0					
ANR	1338725	ArgumentList	psc		1336107	1					
ANR	1338726	Argument	psc		1336107	0					
ANR	1338727	Identifier	psc		1336107	0					
ANR	1338728	Argument	10		1336107	1					
ANR	1338729	PrimaryExpression	10		1336107	0					
ANR	1338730	ExpressionStatement	pscompact_copyinout ( psc )	1468:24:45723:45747	1336107	2	True				
ANR	1338731	CallExpression	pscompact_copyinout ( psc )		1336107	0					
ANR	1338732	Callee	pscompact_copyinout		1336107	0					
ANR	1338733	Identifier	pscompact_copyinout		1336107	0					
ANR	1338734	ArgumentList	psc		1336107	1					
ANR	1338735	Argument	psc		1336107	0					
ANR	1338736	Identifier	psc		1336107	0					
ANR	1338737	BreakStatement	break ;	1469:24:45773:45778	1336107	3	True				
ANR	1338738	IfStatement	"if ( ( psc -> inpos >= 7 ) && ( strncmp ( psc -> bufferin , ""NAMESOK"" , 7 ) == 0 ) )"		1336107	1					
ANR	1338739	Condition	"( psc -> inpos >= 7 ) && ( strncmp ( psc -> bufferin , ""NAMESOK"" , 7 ) == 0 )"	1471:24:45826:45913	1336107	0	True				
ANR	1338740	AndExpression	"( psc -> inpos >= 7 ) && ( strncmp ( psc -> bufferin , ""NAMESOK"" , 7 ) == 0 )"		1336107	0		&&			
ANR	1338741	RelationalExpression	psc -> inpos >= 7		1336107	0		>=			
ANR	1338742	PtrMemberAccess	psc -> inpos		1336107	0					
ANR	1338743	Identifier	psc		1336107	0					
ANR	1338744	Identifier	inpos		1336107	1					
ANR	1338745	PrimaryExpression	7		1336107	1					
ANR	1338746	EqualityExpression	"strncmp ( psc -> bufferin , ""NAMESOK"" , 7 ) == 0"		1336107	1		==			
ANR	1338747	CallExpression	"strncmp ( psc -> bufferin , ""NAMESOK"" , 7 )"		1336107	0					
ANR	1338748	Callee	strncmp		1336107	0					
ANR	1338749	Identifier	strncmp		1336107	0					
ANR	1338750	ArgumentList	psc -> bufferin		1336107	1					
ANR	1338751	Argument	psc -> bufferin		1336107	0					
ANR	1338752	PtrMemberAccess	psc -> bufferin		1336107	0					
ANR	1338753	Identifier	psc		1336107	0					
ANR	1338754	Identifier	bufferin		1336107	1					
ANR	1338755	Argument	"""NAMESOK"""		1336107	1					
ANR	1338756	PrimaryExpression	"""NAMESOK"""		1336107	0					
ANR	1338757	Argument	7		1336107	2					
ANR	1338758	PrimaryExpression	7		1336107	0					
ANR	1338759	PrimaryExpression	0		1336107	1					
ANR	1338760	CompoundStatement		450:69:19300:19300	1336107	1					
ANR	1338761	ExpressionStatement	psc -> names = 1	1473:24:45942:45956	1336107	0	True				
ANR	1338762	AssignmentExpression	psc -> names = 1		1336107	0		=			
ANR	1338763	PtrMemberAccess	psc -> names		1336107	0					
ANR	1338764	Identifier	psc		1336107	0					
ANR	1338765	Identifier	names		1336107	1					
ANR	1338766	PrimaryExpression	1		1336107	1					
ANR	1338767	ExpressionStatement	"pscompact_bufferatstart ( psc , '%' )"	1474:24:45982:46015	1336107	1	True				
ANR	1338768	CallExpression	"pscompact_bufferatstart ( psc , '%' )"		1336107	0					
ANR	1338769	Callee	pscompact_bufferatstart		1336107	0					
ANR	1338770	Identifier	pscompact_bufferatstart		1336107	0					
ANR	1338771	ArgumentList	psc		1336107	1					
ANR	1338772	Argument	psc		1336107	0					
ANR	1338773	Identifier	psc		1336107	0					
ANR	1338774	Argument	'%'		1336107	1					
ANR	1338775	PrimaryExpression	'%'		1336107	0					
ANR	1338776	ExpressionStatement	"pscompact_buffer ( psc , 10 )"	1475:24:46041:46066	1336107	2	True				
ANR	1338777	CallExpression	"pscompact_buffer ( psc , 10 )"		1336107	0					
ANR	1338778	Callee	pscompact_buffer		1336107	0					
ANR	1338779	Identifier	pscompact_buffer		1336107	0					
ANR	1338780	ArgumentList	psc		1336107	1					
ANR	1338781	Argument	psc		1336107	0					
ANR	1338782	Identifier	psc		1336107	0					
ANR	1338783	Argument	10		1336107	1					
ANR	1338784	PrimaryExpression	10		1336107	0					
ANR	1338785	ExpressionStatement	pscompact_copyinout ( psc )	1476:24:46092:46116	1336107	3	True				
ANR	1338786	CallExpression	pscompact_copyinout ( psc )		1336107	0					
ANR	1338787	Callee	pscompact_copyinout		1336107	0					
ANR	1338788	Identifier	pscompact_copyinout		1336107	0					
ANR	1338789	ArgumentList	psc		1336107	1					
ANR	1338790	Argument	psc		1336107	0					
ANR	1338791	Identifier	psc		1336107	0					
ANR	1338792	BreakStatement	break ;	1477:24:46142:46147	1336107	4	True				
ANR	1338793	IfStatement	"if ( ( psc -> inpos >= 8 ) && ( strncmp ( psc -> bufferin , ""BINARYOK"" , 8 ) == 0 ) )"		1336107	2					
ANR	1338794	Condition	"( psc -> inpos >= 8 ) && ( strncmp ( psc -> bufferin , ""BINARYOK"" , 8 ) == 0 )"	1479:24:46195:46283	1336107	0	True				
ANR	1338795	AndExpression	"( psc -> inpos >= 8 ) && ( strncmp ( psc -> bufferin , ""BINARYOK"" , 8 ) == 0 )"		1336107	0		&&			
ANR	1338796	RelationalExpression	psc -> inpos >= 8		1336107	0		>=			
ANR	1338797	PtrMemberAccess	psc -> inpos		1336107	0					
ANR	1338798	Identifier	psc		1336107	0					
ANR	1338799	Identifier	inpos		1336107	1					
ANR	1338800	PrimaryExpression	8		1336107	1					
ANR	1338801	EqualityExpression	"strncmp ( psc -> bufferin , ""BINARYOK"" , 8 ) == 0"		1336107	1		==			
ANR	1338802	CallExpression	"strncmp ( psc -> bufferin , ""BINARYOK"" , 8 )"		1336107	0					
ANR	1338803	Callee	strncmp		1336107	0					
ANR	1338804	Identifier	strncmp		1336107	0					
ANR	1338805	ArgumentList	psc -> bufferin		1336107	1					
ANR	1338806	Argument	psc -> bufferin		1336107	0					
ANR	1338807	PtrMemberAccess	psc -> bufferin		1336107	0					
ANR	1338808	Identifier	psc		1336107	0					
ANR	1338809	Identifier	bufferin		1336107	1					
ANR	1338810	Argument	"""BINARYOK"""		1336107	1					
ANR	1338811	PrimaryExpression	"""BINARYOK"""		1336107	0					
ANR	1338812	Argument	8		1336107	2					
ANR	1338813	PrimaryExpression	8		1336107	0					
ANR	1338814	PrimaryExpression	0		1336107	1					
ANR	1338815	CompoundStatement		458:70:19670:19670	1336107	1					
ANR	1338816	ExpressionStatement	psc -> binary = 1	1481:24:46312:46327	1336107	0	True				
ANR	1338817	AssignmentExpression	psc -> binary = 1		1336107	0		=			
ANR	1338818	PtrMemberAccess	psc -> binary		1336107	0					
ANR	1338819	Identifier	psc		1336107	0					
ANR	1338820	Identifier	binary		1336107	1					
ANR	1338821	PrimaryExpression	1		1336107	1					
ANR	1338822	ExpressionStatement	"pscompact_bufferatstart ( psc , '%' )"	1482:24:46353:46386	1336107	1	True				
ANR	1338823	CallExpression	"pscompact_bufferatstart ( psc , '%' )"		1336107	0					
ANR	1338824	Callee	pscompact_bufferatstart		1336107	0					
ANR	1338825	Identifier	pscompact_bufferatstart		1336107	0					
ANR	1338826	ArgumentList	psc		1336107	1					
ANR	1338827	Argument	psc		1336107	0					
ANR	1338828	Identifier	psc		1336107	0					
ANR	1338829	Argument	'%'		1336107	1					
ANR	1338830	PrimaryExpression	'%'		1336107	0					
ANR	1338831	ExpressionStatement	"pscompact_buffer ( psc , 10 )"	1483:24:46412:46437	1336107	2	True				
ANR	1338832	CallExpression	"pscompact_buffer ( psc , 10 )"		1336107	0					
ANR	1338833	Callee	pscompact_buffer		1336107	0					
ANR	1338834	Identifier	pscompact_buffer		1336107	0					
ANR	1338835	ArgumentList	psc		1336107	1					
ANR	1338836	Argument	psc		1336107	0					
ANR	1338837	Identifier	psc		1336107	0					
ANR	1338838	Argument	10		1336107	1					
ANR	1338839	PrimaryExpression	10		1336107	0					
ANR	1338840	ExpressionStatement	pscompact_copyinout ( psc )	1484:24:46463:46487	1336107	3	True				
ANR	1338841	CallExpression	pscompact_copyinout ( psc )		1336107	0					
ANR	1338842	Callee	pscompact_copyinout		1336107	0					
ANR	1338843	Identifier	pscompact_copyinout		1336107	0					
ANR	1338844	ArgumentList	psc		1336107	1					
ANR	1338845	Argument	psc		1336107	0					
ANR	1338846	Identifier	psc		1336107	0					
ANR	1338847	BreakStatement	break ;	1485:24:46513:46518	1336107	4	True				
ANR	1338848	ExpressionStatement	psc -> inpos = 0	1488:20:46643:46657	1336107	3	True				
ANR	1338849	AssignmentExpression	psc -> inpos = 0		1336107	0		=			
ANR	1338850	PtrMemberAccess	psc -> inpos		1336107	0					
ANR	1338851	Identifier	psc		1336107	0					
ANR	1338852	Identifier	inpos		1336107	1					
ANR	1338853	PrimaryExpression	0		1336107	1					
ANR	1338854	ExpressionStatement	psc -> state = PSC_BufferIn	1489:20:46679:46704	1336107	4	True				
ANR	1338855	AssignmentExpression	psc -> state = PSC_BufferIn		1336107	0		=			
ANR	1338856	PtrMemberAccess	psc -> state		1336107	0					
ANR	1338857	Identifier	psc		1336107	0					
ANR	1338858	Identifier	state		1336107	1					
ANR	1338859	Identifier	PSC_BufferIn		1336107	1					
ANR	1338860	BreakStatement	break ;	1490:20:46726:46731	1336107	5	True				
ANR	1338861	ExpressionStatement	"pscompact_buffer ( psc , c )"	1492:16:46767:46791	1336107	25	True				
ANR	1338862	CallExpression	"pscompact_buffer ( psc , c )"		1336107	0					
ANR	1338863	Callee	pscompact_buffer		1336107	0					
ANR	1338864	Identifier	pscompact_buffer		1336107	0					
ANR	1338865	ArgumentList	psc		1336107	1					
ANR	1338866	Argument	psc		1336107	0					
ANR	1338867	Identifier	psc		1336107	0					
ANR	1338868	Argument	c		1336107	1					
ANR	1338869	Identifier	c		1336107	0					
ANR	1338870	BreakStatement	break ;	1493:16:46809:46814	1336107	26	True				
ANR	1338871	Label	case PSC_InHexString :	1494:12:46828:46848	1336107	27	True				
ANR	1338872	Identifier	PSC_InHexString		1336107	0					
ANR	1338873	ExpressionStatement	c = psc -> pgetc ( psc -> file )	1495:16:46866:46891	1336107	28	True				
ANR	1338874	AssignmentExpression	c = psc -> pgetc ( psc -> file )		1336107	0		=			
ANR	1338875	Identifier	c		1336107	0					
ANR	1338876	CallExpression	psc -> pgetc ( psc -> file )		1336107	1					
ANR	1338877	Callee	psc -> pgetc		1336107	0					
ANR	1338878	PtrMemberAccess	psc -> pgetc		1336107	0					
ANR	1338879	Identifier	psc		1336107	0					
ANR	1338880	Identifier	pgetc		1336107	1					
ANR	1338881	ArgumentList	psc -> file		1336107	1					
ANR	1338882	Argument	psc -> file		1336107	0					
ANR	1338883	PtrMemberAccess	psc -> file		1336107	0					
ANR	1338884	Identifier	psc		1336107	0					
ANR	1338885	Identifier	file		1336107	1					
ANR	1338886	IfStatement	if ( c == '<' )		1336107	29					
ANR	1338887	Condition	c == '<'	1496:20:46913:46920	1336107	0	True				
ANR	1338888	EqualityExpression	c == '<'		1336107	0		==			
ANR	1338889	Identifier	c		1336107	0					
ANR	1338890	PrimaryExpression	'<'		1336107	1					
ANR	1338891	CompoundStatement		474:30:20307:20307	1336107	1					
ANR	1338892	ExpressionStatement	"pscompact_copy2 ( psc , '<' , '<' , 0 )"	1498:20:46982:47015	1336107	0	True				
ANR	1338893	CallExpression	"pscompact_copy2 ( psc , '<' , '<' , 0 )"		1336107	0					
ANR	1338894	Callee	pscompact_copy2		1336107	0					
ANR	1338895	Identifier	pscompact_copy2		1336107	0					
ANR	1338896	ArgumentList	psc		1336107	1					
ANR	1338897	Argument	psc		1336107	0					
ANR	1338898	Identifier	psc		1336107	0					
ANR	1338899	Argument	'<'		1336107	1					
ANR	1338900	PrimaryExpression	'<'		1336107	0					
ANR	1338901	Argument	'<'		1336107	2					
ANR	1338902	PrimaryExpression	'<'		1336107	0					
ANR	1338903	Argument	0		1336107	3					
ANR	1338904	PrimaryExpression	0		1336107	0					
ANR	1338905	BreakStatement	break ;	1499:20:47037:47042	1336107	1	True				
ANR	1338906	ElseStatement	else		1336107	0					
ANR	1338907	IfStatement	if ( c == '~' )		1336107	0					
ANR	1338908	Condition	c == '~'	1500:27:47071:47078	1336107	0	True				
ANR	1338909	EqualityExpression	c == '~'		1336107	0		==			
ANR	1338910	Identifier	c		1336107	0					
ANR	1338911	PrimaryExpression	'~'		1336107	1					
ANR	1338912	CompoundStatement		478:37:20465:20465	1336107	1					
ANR	1338913	ExpressionStatement	"fprintf ( stderr , ""ASCII85 encoded strings unsupported in pscompaction\\n"" )"	1502:20:47153:47225	1336107	0	True				
ANR	1338914	CallExpression	"fprintf ( stderr , ""ASCII85 encoded strings unsupported in pscompaction\\n"" )"		1336107	0					
ANR	1338915	Callee	fprintf		1336107	0					
ANR	1338916	Identifier	fprintf		1336107	0					
ANR	1338917	ArgumentList	stderr		1336107	1					
ANR	1338918	Argument	stderr		1336107	0					
ANR	1338919	Identifier	stderr		1336107	0					
ANR	1338920	Argument	"""ASCII85 encoded strings unsupported in pscompaction\\n"""		1336107	1					
ANR	1338921	PrimaryExpression	"""ASCII85 encoded strings unsupported in pscompaction\\n"""		1336107	0					
ANR	1338922	ExpressionStatement	exit ( 1 )	1503:20:47247:47254	1336107	1	True				
ANR	1338923	CallExpression	exit ( 1 )		1336107	0					
ANR	1338924	Callee	exit		1336107	0					
ANR	1338925	Identifier	exit		1336107	0					
ANR	1338926	ArgumentList	1		1336107	1					
ANR	1338927	Argument	1		1336107	0					
ANR	1338928	PrimaryExpression	1		1336107	0					
ANR	1338929	ElseStatement	else		1336107	0					
ANR	1338930	IfStatement	if ( c == '>' )		1336107	0					
ANR	1338931	Condition	c == '>'	1504:27:47283:47290	1336107	0	True				
ANR	1338932	EqualityExpression	c == '>'		1336107	0		==			
ANR	1338933	Identifier	c		1336107	0					
ANR	1338934	PrimaryExpression	'>'		1336107	1					
ANR	1338935	CompoundStatement		482:37:20677:20677	1336107	1					
ANR	1338936	ExpressionStatement	psc -> wasascii = 0	1505:20:47315:47332	1336107	0	True				
ANR	1338937	AssignmentExpression	psc -> wasascii = 0		1336107	0		=			
ANR	1338938	PtrMemberAccess	psc -> wasascii		1336107	0					
ANR	1338939	Identifier	psc		1336107	0					
ANR	1338940	Identifier	wasascii		1336107	1					
ANR	1338941	PrimaryExpression	0		1336107	1					
ANR	1338942	IfStatement	if ( psc -> binary )		1336107	1					
ANR	1338943	Condition	psc -> binary	1506:24:47358:47368	1336107	0	True				
ANR	1338944	PtrMemberAccess	psc -> binary		1336107	0					
ANR	1338945	Identifier	psc		1336107	0					
ANR	1338946	Identifier	binary		1336107	1					
ANR	1338947	CompoundStatement		484:37:20755:20755	1336107	1					
ANR	1338948	ExpressionStatement	pscompact_hex2ascii ( psc )	1507:24:47397:47421	1336107	0	True				
ANR	1338949	CallExpression	pscompact_hex2ascii ( psc )		1336107	0					
ANR	1338950	Callee	pscompact_hex2ascii		1336107	0					
ANR	1338951	Identifier	pscompact_hex2ascii		1336107	0					
ANR	1338952	ArgumentList	psc		1336107	1					
ANR	1338953	Argument	psc		1336107	0					
ANR	1338954	Identifier	psc		1336107	0					
ANR	1338955	IfStatement	if ( psc -> inpos < 256 )		1336107	1					
ANR	1338956	Condition	psc -> inpos < 256	1508:28:47451:47466	1336107	0	True				
ANR	1338957	RelationalExpression	psc -> inpos < 256		1336107	0		<			
ANR	1338958	PtrMemberAccess	psc -> inpos		1336107	0					
ANR	1338959	Identifier	psc		1336107	0					
ANR	1338960	Identifier	inpos		1336107	1					
ANR	1338961	PrimaryExpression	256		1336107	1					
ANR	1338962	CompoundStatement		486:46:20853:20853	1336107	1					
ANR	1338963	ExpressionStatement	"pscompact_bufferatstart ( psc , psc -> inpos )"	1509:28:47499:47539	1336107	0	True				
ANR	1338964	CallExpression	"pscompact_bufferatstart ( psc , psc -> inpos )"		1336107	0					
ANR	1338965	Callee	pscompact_bufferatstart		1336107	0					
ANR	1338966	Identifier	pscompact_bufferatstart		1336107	0					
ANR	1338967	ArgumentList	psc		1336107	1					
ANR	1338968	Argument	psc		1336107	0					
ANR	1338969	Identifier	psc		1336107	0					
ANR	1338970	Argument	psc -> inpos		1336107	1					
ANR	1338971	PtrMemberAccess	psc -> inpos		1336107	0					
ANR	1338972	Identifier	psc		1336107	0					
ANR	1338973	Identifier	inpos		1336107	1					
ANR	1338974	ExpressionStatement	"pscompact_bufferatstart ( psc , 142 )"	1510:28:47569:47602	1336107	1	True				
ANR	1338975	CallExpression	"pscompact_bufferatstart ( psc , 142 )"		1336107	0					
ANR	1338976	Callee	pscompact_bufferatstart		1336107	0					
ANR	1338977	Identifier	pscompact_bufferatstart		1336107	0					
ANR	1338978	ArgumentList	psc		1336107	1					
ANR	1338979	Argument	psc		1336107	0					
ANR	1338980	Identifier	psc		1336107	0					
ANR	1338981	Argument	142		1336107	1					
ANR	1338982	PrimaryExpression	142		1336107	0					
ANR	1338983	ExpressionStatement	pscompact_copyinout_bin ( psc )	1511:28:47632:47660	1336107	2	True				
ANR	1338984	CallExpression	pscompact_copyinout_bin ( psc )		1336107	0					
ANR	1338985	Callee	pscompact_copyinout_bin		1336107	0					
ANR	1338986	Identifier	pscompact_copyinout_bin		1336107	0					
ANR	1338987	ArgumentList	psc		1336107	1					
ANR	1338988	Argument	psc		1336107	0					
ANR	1338989	Identifier	psc		1336107	0					
ANR	1338990	ElseStatement	else		1336107	0					
ANR	1338991	IfStatement	if ( psc -> inpos < 65536 )		1336107	0					
ANR	1338992	Condition	psc -> inpos < 65536	1512:35:47697:47714	1336107	0	True				
ANR	1338993	RelationalExpression	psc -> inpos < 65536		1336107	0		<			
ANR	1338994	PtrMemberAccess	psc -> inpos		1336107	0					
ANR	1338995	Identifier	psc		1336107	0					
ANR	1338996	Identifier	inpos		1336107	1					
ANR	1338997	PrimaryExpression	65536		1336107	1					
ANR	1338998	CompoundStatement		490:55:21101:21101	1336107	1					
ANR	1338999	ExpressionStatement	"pscompact_bufferatstart ( psc , psc -> inpos >> 8 )"	1513:28:47747:47790	1336107	0	True				
ANR	1339000	CallExpression	"pscompact_bufferatstart ( psc , psc -> inpos >> 8 )"		1336107	0					
ANR	1339001	Callee	pscompact_bufferatstart		1336107	0					
ANR	1339002	Identifier	pscompact_bufferatstart		1336107	0					
ANR	1339003	ArgumentList	psc		1336107	1					
ANR	1339004	Argument	psc		1336107	0					
ANR	1339005	Identifier	psc		1336107	0					
ANR	1339006	Argument	psc -> inpos >> 8		1336107	1					
ANR	1339007	ShiftExpression	psc -> inpos >> 8		1336107	0		>>			
ANR	1339008	PtrMemberAccess	psc -> inpos		1336107	0					
ANR	1339009	Identifier	psc		1336107	0					
ANR	1339010	Identifier	inpos		1336107	1					
ANR	1339011	PrimaryExpression	8		1336107	1					
ANR	1339012	ExpressionStatement	"pscompact_bufferatstart ( psc , psc -> inpos & 255 )"	1514:28:47820:47866	1336107	1	True				
ANR	1339013	CallExpression	"pscompact_bufferatstart ( psc , psc -> inpos & 255 )"		1336107	0					
ANR	1339014	Callee	pscompact_bufferatstart		1336107	0					
ANR	1339015	Identifier	pscompact_bufferatstart		1336107	0					
ANR	1339016	ArgumentList	psc		1336107	1					
ANR	1339017	Argument	psc		1336107	0					
ANR	1339018	Identifier	psc		1336107	0					
ANR	1339019	Argument	psc -> inpos & 255		1336107	1					
ANR	1339020	BitAndExpression	psc -> inpos & 255		1336107	0		&			
ANR	1339021	PtrMemberAccess	psc -> inpos		1336107	0					
ANR	1339022	Identifier	psc		1336107	0					
ANR	1339023	Identifier	inpos		1336107	1					
ANR	1339024	PrimaryExpression	255		1336107	1					
ANR	1339025	ExpressionStatement	"pscompact_bufferatstart ( psc , 144 )"	1515:28:47896:47929	1336107	2	True				
ANR	1339026	CallExpression	"pscompact_bufferatstart ( psc , 144 )"		1336107	0					
ANR	1339027	Callee	pscompact_bufferatstart		1336107	0					
ANR	1339028	Identifier	pscompact_bufferatstart		1336107	0					
ANR	1339029	ArgumentList	psc		1336107	1					
ANR	1339030	Argument	psc		1336107	0					
ANR	1339031	Identifier	psc		1336107	0					
ANR	1339032	Argument	144		1336107	1					
ANR	1339033	PrimaryExpression	144		1336107	0					
ANR	1339034	ExpressionStatement	pscompact_copyinout_bin ( psc )	1516:28:47959:47987	1336107	3	True				
ANR	1339035	CallExpression	pscompact_copyinout_bin ( psc )		1336107	0					
ANR	1339036	Callee	pscompact_copyinout_bin		1336107	0					
ANR	1339037	Identifier	pscompact_copyinout_bin		1336107	0					
ANR	1339038	ArgumentList	psc		1336107	1					
ANR	1339039	Argument	psc		1336107	0					
ANR	1339040	Identifier	psc		1336107	0					
ANR	1339041	ElseStatement	else		1336107	0					
ANR	1339042	CompoundStatement		495:31:21404:21404	1336107	0					
ANR	1339043	ExpressionStatement	"fprintf ( stderr , ""HexString more than 64K in pscompaction\\n"" )"	1518:28:48050:48110	1336107	0	True				
ANR	1339044	CallExpression	"fprintf ( stderr , ""HexString more than 64K in pscompaction\\n"" )"		1336107	0					
ANR	1339045	Callee	fprintf		1336107	0					
ANR	1339046	Identifier	fprintf		1336107	0					
ANR	1339047	ArgumentList	stderr		1336107	1					
ANR	1339048	Argument	stderr		1336107	0					
ANR	1339049	Identifier	stderr		1336107	0					
ANR	1339050	Argument	"""HexString more than 64K in pscompaction\\n"""		1336107	1					
ANR	1339051	PrimaryExpression	"""HexString more than 64K in pscompaction\\n"""		1336107	0					
ANR	1339052	ExpressionStatement	exit ( 1 )	1519:28:48140:48147	1336107	1	True				
ANR	1339053	CallExpression	exit ( 1 )		1336107	0					
ANR	1339054	Callee	exit		1336107	0					
ANR	1339055	Identifier	exit		1336107	0					
ANR	1339056	ArgumentList	1		1336107	1					
ANR	1339057	Argument	1		1336107	0					
ANR	1339058	PrimaryExpression	1		1336107	0					
ANR	1339059	BreakStatement	break ;	1521:24:48199:48204	1336107	2	True				
ANR	1339060	ExpressionStatement	"pscompact_bufferatstart ( psc , '<' )"	1525:20:48357:48390	1336107	2	True				
ANR	1339061	CallExpression	"pscompact_bufferatstart ( psc , '<' )"		1336107	0					
ANR	1339062	Callee	pscompact_bufferatstart		1336107	0					
ANR	1339063	Identifier	pscompact_bufferatstart		1336107	0					
ANR	1339064	ArgumentList	psc		1336107	1					
ANR	1339065	Argument	psc		1336107	0					
ANR	1339066	Identifier	psc		1336107	0					
ANR	1339067	Argument	'<'		1336107	1					
ANR	1339068	PrimaryExpression	'<'		1336107	0					
ANR	1339069	ExpressionStatement	"pscompact_buffer ( psc , '>' )"	1526:20:48412:48438	1336107	3	True				
ANR	1339070	CallExpression	"pscompact_buffer ( psc , '>' )"		1336107	0					
ANR	1339071	Callee	pscompact_buffer		1336107	0					
ANR	1339072	Identifier	pscompact_buffer		1336107	0					
ANR	1339073	ArgumentList	psc		1336107	1					
ANR	1339074	Argument	psc		1336107	0					
ANR	1339075	Identifier	psc		1336107	0					
ANR	1339076	Argument	'>'		1336107	1					
ANR	1339077	PrimaryExpression	'>'		1336107	0					
ANR	1339078	ExpressionStatement	pscompact_copyinout ( psc )	1527:20:48460:48484	1336107	4	True				
ANR	1339079	CallExpression	pscompact_copyinout ( psc )		1336107	0					
ANR	1339080	Callee	pscompact_copyinout		1336107	0					
ANR	1339081	Identifier	pscompact_copyinout		1336107	0					
ANR	1339082	ArgumentList	psc		1336107	1					
ANR	1339083	Argument	psc		1336107	0					
ANR	1339084	Identifier	psc		1336107	0					
ANR	1339085	BreakStatement	break ;	1528:20:48506:48511	1336107	5	True				
ANR	1339086	ElseStatement	else		1336107	0					
ANR	1339087	IfStatement	if ( c <= 32 )		1336107	0					
ANR	1339088	Condition	c <= 32	1529:27:48540:48546	1336107	0	True				
ANR	1339089	RelationalExpression	c <= 32		1336107	0		<=			
ANR	1339090	Identifier	c		1336107	0					
ANR	1339091	PrimaryExpression	32		1336107	1					
ANR	1339092	CompoundStatement		507:36:21933:21933	1336107	1					
ANR	1339093	BreakStatement	break ;	1531:20:48616:48621	1336107	0	True				
ANR	1339094	ElseStatement	else		1336107	0					
ANR	1339095	IfStatement	if ( ( ( c >= 'A' ) && ( c <= 'Z' ) ) || ( ( c >= 'a' ) && ( c <= 'z' ) ) || ( ( c >= '0' ) && ( c <= '9' ) ) )		1336107	0					
ANR	1339096	Condition	( ( c >= 'A' ) && ( c <= 'Z' ) ) || ( ( c >= 'a' ) && ( c <= 'z' ) ) || ( ( c >= '0' ) && ( c <= '9' ) )	1532:27:48650:48789	1336107	0	True				
ANR	1339097	OrExpression	( ( c >= 'A' ) && ( c <= 'Z' ) ) || ( ( c >= 'a' ) && ( c <= 'z' ) ) || ( ( c >= '0' ) && ( c <= '9' ) )		1336107	0		||			
ANR	1339098	AndExpression	( c >= 'A' ) && ( c <= 'Z' )		1336107	0		&&			
ANR	1339099	RelationalExpression	c >= 'A'		1336107	0		>=			
ANR	1339100	Identifier	c		1336107	0					
ANR	1339101	PrimaryExpression	'A'		1336107	1					
ANR	1339102	RelationalExpression	c <= 'Z'		1336107	1		<=			
ANR	1339103	Identifier	c		1336107	0					
ANR	1339104	PrimaryExpression	'Z'		1336107	1					
ANR	1339105	OrExpression	( ( c >= 'a' ) && ( c <= 'z' ) ) || ( ( c >= '0' ) && ( c <= '9' ) )		1336107	1		||			
ANR	1339106	AndExpression	( c >= 'a' ) && ( c <= 'z' )		1336107	0		&&			
ANR	1339107	RelationalExpression	c >= 'a'		1336107	0		>=			
ANR	1339108	Identifier	c		1336107	0					
ANR	1339109	PrimaryExpression	'a'		1336107	1					
ANR	1339110	RelationalExpression	c <= 'z'		1336107	1		<=			
ANR	1339111	Identifier	c		1336107	0					
ANR	1339112	PrimaryExpression	'z'		1336107	1					
ANR	1339113	AndExpression	( c >= '0' ) && ( c <= '9' )		1336107	1		&&			
ANR	1339114	RelationalExpression	c >= '0'		1336107	0		>=			
ANR	1339115	Identifier	c		1336107	0					
ANR	1339116	PrimaryExpression	'0'		1336107	1					
ANR	1339117	RelationalExpression	c <= '9'		1336107	1		<=			
ANR	1339118	Identifier	c		1336107	0					
ANR	1339119	PrimaryExpression	'9'		1336107	1					
ANR	1339120	CompoundStatement		512:55:22176:22176	1336107	1					
ANR	1339121	ExpressionStatement	"pscompact_buffer ( psc , c )"	1535:20:48814:48838	1336107	0	True				
ANR	1339122	CallExpression	"pscompact_buffer ( psc , c )"		1336107	0					
ANR	1339123	Callee	pscompact_buffer		1336107	0					
ANR	1339124	Identifier	pscompact_buffer		1336107	0					
ANR	1339125	ArgumentList	psc		1336107	1					
ANR	1339126	Argument	psc		1336107	0					
ANR	1339127	Identifier	psc		1336107	0					
ANR	1339128	Argument	c		1336107	1					
ANR	1339129	Identifier	c		1336107	0					
ANR	1339130	ElseStatement	else		1336107	0					
ANR	1339131	CompoundStatement		514:23:22247:22247	1336107	0					
ANR	1339132	ExpressionStatement	"fprintf ( stderr , ""Unexpected char when parsing hexstring in pscompaction\\n"" )"	1537:20:48885:48960	1336107	0	True				
ANR	1339133	CallExpression	"fprintf ( stderr , ""Unexpected char when parsing hexstring in pscompaction\\n"" )"		1336107	0					
ANR	1339134	Callee	fprintf		1336107	0					
ANR	1339135	Identifier	fprintf		1336107	0					
ANR	1339136	ArgumentList	stderr		1336107	1					
ANR	1339137	Argument	stderr		1336107	0					
ANR	1339138	Identifier	stderr		1336107	0					
ANR	1339139	Argument	"""Unexpected char when parsing hexstring in pscompaction\\n"""		1336107	1					
ANR	1339140	PrimaryExpression	"""Unexpected char when parsing hexstring in pscompaction\\n"""		1336107	0					
ANR	1339141	ExpressionStatement	exit ( 1 )	1538:20:48982:48989	1336107	1	True				
ANR	1339142	CallExpression	exit ( 1 )		1336107	0					
ANR	1339143	Callee	exit		1336107	0					
ANR	1339144	Identifier	exit		1336107	0					
ANR	1339145	ArgumentList	1		1336107	1					
ANR	1339146	Argument	1		1336107	0					
ANR	1339147	PrimaryExpression	1		1336107	0					
ANR	1339148	BreakStatement	break ;	1540:16:49025:49030	1336107	30	True				
ANR	1339149	Condition	( out - ubuf != ulen ) && ( ! psc -> peof ( psc -> file ) )	1542:13:49055:49099	1336107	1	True				
ANR	1339150	AndExpression	( out - ubuf != ulen ) && ( ! psc -> peof ( psc -> file ) )		1336107	0		&&			
ANR	1339151	EqualityExpression	out - ubuf != ulen		1336107	0		!=			
ANR	1339152	AdditiveExpression	out - ubuf		1336107	0		-			
ANR	1339153	Identifier	out		1336107	0					
ANR	1339154	Identifier	ubuf		1336107	1					
ANR	1339155	Identifier	ulen		1336107	1					
ANR	1339156	UnaryOperationExpression	! psc -> peof ( psc -> file )		1336107	1					
ANR	1339157	UnaryOperator	!		1336107	0					
ANR	1339158	CallExpression	psc -> peof ( psc -> file )		1336107	1					
ANR	1339159	Callee	psc -> peof		1336107	0					
ANR	1339160	PtrMemberAccess	psc -> peof		1336107	0					
ANR	1339161	Identifier	psc		1336107	0					
ANR	1339162	Identifier	peof		1336107	1					
ANR	1339163	ArgumentList	psc -> file		1336107	1					
ANR	1339164	Argument	psc -> file		1336107	0					
ANR	1339165	PtrMemberAccess	psc -> file		1336107	0					
ANR	1339166	Identifier	psc		1336107	0					
ANR	1339167	Identifier	file		1336107	1					
ANR	1339168	ReturnStatement	return out - ubuf ;	1543:4:49107:49122	1336107	5	True				
ANR	1339169	AdditiveExpression	out - ubuf		1336107	0		-			
ANR	1339170	Identifier	out		1336107	0					
ANR	1339171	Identifier	ubuf		1336107	1					
ANR	1339172	ReturnType	static unsigned long		1336107	1					
ANR	1339173	Identifier	pscompact_getcompactedblock		1336107	2					
ANR	1339174	ParameterList	"pscompstate * psc , unsigned char * ubuf , unsigned long ulen"		1336107	3					
ANR	1339175	Parameter	pscompstate * psc	1022:49:26556:26571	1336107	0	True				
ANR	1339176	ParameterType	pscompstate *		1336107	0					
ANR	1339177	Identifier	psc		1336107	1					
ANR	1339178	Parameter	unsigned char * ubuf	1022:67:26574:26592	1336107	1	True				
ANR	1339179	ParameterType	unsigned char *		1336107	0					
ANR	1339180	Identifier	ubuf		1336107	1					
ANR	1339181	Parameter	unsigned long ulen	1022:88:26595:26612	1336107	2	True				
ANR	1339182	ParameterType	unsigned long		1336107	0					
ANR	1339183	Identifier	ulen		1336107	1					
ANR	1339184	CFGEntryNode	ENTRY		1336107		True				
ANR	1339185	CFGExitNode	EXIT		1336107		True				
ANR	1339186	Symbol	fc . f		1336107						
ANR	1339187	Symbol	n1		1336107						
ANR	1339188	Symbol	n2		1336107						
ANR	1339189	Symbol	pscompact_isint		1336107						
ANR	1339190	Symbol	psc -> paren		1336107						
ANR	1339191	Symbol	pscompact_isfloat		1336107						
ANR	1339192	Symbol	psc -> wasascii		1336107						
ANR	1339193	Symbol	* fc . c		1336107						
ANR	1339194	Symbol	PSC_BufferIn		1336107						
ANR	1339195	Symbol	strncmp		1336107						
ANR	1339196	Symbol	psc -> buffercopy		1336107						
ANR	1339197	Symbol	* * psc		1336107						
ANR	1339198	Symbol	psc -> outend		1336107						
ANR	1339199	Symbol	psc -> inpos		1336107						
ANR	1339200	Symbol	PSC_InHexString		1336107						
ANR	1339201	Symbol	psc -> outpos		1336107						
ANR	1339202	Symbol	fc . c		1336107						
ANR	1339203	Symbol	psc -> state		1336107						
ANR	1339204	Symbol	* psc		1336107						
ANR	1339205	Symbol	stderr		1336107						
ANR	1339206	Symbol	PSC_BufferOut		1336107						
ANR	1339207	Symbol	PSC_InComment		1336107						
ANR	1339208	Symbol	pscompact_isname		1336107						
ANR	1339209	Symbol	ulen		1336107						
ANR	1339210	Symbol	psc -> binary		1336107						
ANR	1339211	Symbol	fc		1336107						
ANR	1339212	Symbol	psc		1336107						
ANR	1339213	Symbol	psc -> firstnum		1336107						
ANR	1339214	Symbol	psc -> bufferout		1336107						
ANR	1339215	Symbol	psc -> bufferin		1336107						
ANR	1339216	Symbol	psc -> file		1336107						
ANR	1339217	Symbol	psc -> noescape		1336107						
ANR	1339218	Symbol	out		1336107						
ANR	1339219	Symbol	PSC_InString		1336107						
ANR	1339220	Symbol	psc -> pgetc		1336107						
ANR	1339221	Symbol	EOF		1336107						
ANR	1339222	Symbol	* psc -> bufferout		1336107						
ANR	1339223	Symbol	psc -> peof		1336107						
ANR	1339224	Symbol	* out ++		1336107						
ANR	1339225	Symbol	* fc		1336107						
ANR	1339226	Symbol	c		1336107						
ANR	1339227	Symbol	psc -> escaping		1336107						
ANR	1339228	Symbol	d		1336107						
ANR	1339229	Symbol	f		1336107						
ANR	1339230	Symbol	ubuf		1336107						
ANR	1339231	Symbol	i		1336107						
ANR	1339232	Symbol	* psc -> inpos		1336107						
ANR	1339233	Symbol	& f		1336107						
ANR	1339234	Symbol	n		1336107						
ANR	1339235	Symbol	psc -> names		1336107						
ANR	1339236	Symbol	& i		1336107						
ANR	1339237	Symbol	r		1336107						
ANR	1339238	Symbol	* psc -> bufferin		1336107						
ANR	1339239	Function	cmpstringp	1546:0:49127:49426							
ANR	1339240	FunctionDef	"cmpstringp (const void * p1 , const void * p2)"		1339239	0					
ANR	1339241	CompoundStatement		1547:0:49174:49426	1339239	0					
ANR	1339242	Statement	return	1552:3:49365:49370	1339239	0	True				
ANR	1339243	Statement	strcmp	1552:10:49372:49377	1339239	1	True				
ANR	1339244	Statement	(	1552:16:49378:49378	1339239	2	True				
ANR	1339245	Statement	*	1552:17:49379:49379	1339239	3	True				
ANR	1339246	Statement	(	1552:19:49381:49381	1339239	4	True				
ANR	1339247	Statement	char	1552:20:49382:49385	1339239	5	True				
ANR	1339248	Statement	*	1552:25:49387:49387	1339239	6	True				
ANR	1339249	Statement	const	1552:27:49389:49393	1339239	7	True				
ANR	1339250	Statement	*	1552:33:49395:49395	1339239	8	True				
ANR	1339251	Statement	)	1552:34:49396:49396	1339239	9	True				
ANR	1339252	Statement	p1	1552:36:49398:49399	1339239	10	True				
ANR	1339253	Statement	","	1552:38:49400:49400	1339239	11	True				
ANR	1339254	Statement	*	1552:40:49402:49402	1339239	12	True				
ANR	1339255	Statement	(	1552:42:49404:49404	1339239	13	True				
ANR	1339256	Statement	char	1552:43:49405:49408	1339239	14	True				
ANR	1339257	Statement	*	1552:48:49410:49410	1339239	15	True				
ANR	1339258	Statement	const	1552:50:49412:49416	1339239	16	True				
ANR	1339259	Statement	*	1552:56:49418:49418	1339239	17	True				
ANR	1339260	Statement	)	1552:57:49419:49419	1339239	18	True				
ANR	1339261	Statement	p2	1552:59:49421:49422	1339239	19	True				
ANR	1339262	Statement	)	1552:61:49423:49423	1339239	20	True				
ANR	1339263	ExpressionStatement		1552:62:49424:49424	1339239	21	True				
ANR	1339264	ReturnType	int		1339239	1					
ANR	1339265	Identifier	cmpstringp		1339239	2					
ANR	1339266	ParameterList	"const void * p1 , const void * p2"		1339239	3					
ANR	1339267	Parameter	const void * p1	1546:15:49142:49155	1339239	0	True				
ANR	1339268	ParameterType	const void *		1339239	0					
ANR	1339269	Identifier	p1		1339239	1					
ANR	1339270	Parameter	const void * p2	1546:31:49158:49171	1339239	1	True				
ANR	1339271	ParameterType	const void *		1339239	0					
ANR	1339272	Identifier	p2		1339239	1					
ANR	1339273	CFGEntryNode	ENTRY		1339239		True				
ANR	1339274	CFGExitNode	EXIT		1339239		True				
ANR	1339275	Symbol	p1		1339239						
ANR	1339276	Symbol	p2		1339239						
ANR	1339277	Function	process_path	1558:0:49655:55232							
ANR	1339278	FunctionDef	"process_path (char * path , const char * os_prefix , const char * rom_prefix , Xlist_element * Xlist_head , int compression , int compaction , int * inode_count , int * totlen , FILE * out)"		1339277	0					
ANR	1339279	CompoundStatement		1561:0:49870:55232	1339277	0					
ANR	1339280	IdentifierDeclStatement	"int i , namelen , excluded , save_count = * inode_count ;"	1562:4:49876:49925	1339277	0	True				
ANR	1339281	IdentifierDecl	i		1339277	0					
ANR	1339282	IdentifierDeclType	int		1339277	0					
ANR	1339283	Identifier	i		1339277	1					
ANR	1339284	IdentifierDecl	namelen		1339277	1					
ANR	1339285	IdentifierDeclType	int		1339277	0					
ANR	1339286	Identifier	namelen		1339277	1					
ANR	1339287	IdentifierDecl	excluded		1339277	2					
ANR	1339288	IdentifierDeclType	int		1339277	0					
ANR	1339289	Identifier	excluded		1339277	1					
ANR	1339290	IdentifierDecl	save_count = * inode_count		1339277	3					
ANR	1339291	IdentifierDeclType	int		1339277	0					
ANR	1339292	Identifier	save_count		1339277	1					
ANR	1339293	AssignmentExpression	save_count = * inode_count		1339277	2		=			
ANR	1339294	Identifier	save_count		1339277	0					
ANR	1339295	UnaryOperationExpression	* inode_count		1339277	1					
ANR	1339296	UnaryOperator	*		1339277	0					
ANR	1339297	Identifier	inode_count		1339277	1					
ANR	1339298	IdentifierDeclStatement	Xlist_element * Xlist_scan ;	1563:4:49931:49956	1339277	1	True				
ANR	1339299	IdentifierDecl	* Xlist_scan		1339277	0					
ANR	1339300	IdentifierDeclType	Xlist_element *		1339277	0					
ANR	1339301	Identifier	Xlist_scan		1339277	1					
ANR	1339302	IdentifierDeclStatement	char * prefixed_path ;	1564:4:49962:49981	1339277	2	True				
ANR	1339303	IdentifierDecl	* prefixed_path		1339277	0					
ANR	1339304	IdentifierDeclType	char *		1339277	0					
ANR	1339305	Identifier	prefixed_path		1339277	1					
ANR	1339306	IdentifierDeclStatement	"char * found_path , * rom_filename ;"	1565:4:49987:50018	1339277	3	True				
ANR	1339307	IdentifierDecl	* found_path		1339277	0					
ANR	1339308	IdentifierDeclType	char *		1339277	0					
ANR	1339309	Identifier	found_path		1339277	1					
ANR	1339310	IdentifierDecl	* rom_filename		1339277	1					
ANR	1339311	IdentifierDeclType	char *		1339277	0					
ANR	1339312	Identifier	rom_filename		1339277	1					
ANR	1339313	IdentifierDeclStatement	file_enum * pfenum ;	1566:4:50024:50041	1339277	4	True				
ANR	1339314	IdentifierDecl	* pfenum		1339277	0					
ANR	1339315	IdentifierDeclType	file_enum *		1339277	0					
ANR	1339316	Identifier	pfenum		1339277	1					
ANR	1339317	IdentifierDeclStatement	"int ret , block , blocks ;"	1567:4:50047:50069	1339277	5	True				
ANR	1339318	IdentifierDecl	ret		1339277	0					
ANR	1339319	IdentifierDeclType	int		1339277	0					
ANR	1339320	Identifier	ret		1339277	1					
ANR	1339321	IdentifierDecl	block		1339277	1					
ANR	1339322	IdentifierDeclType	int		1339277	0					
ANR	1339323	Identifier	block		1339277	1					
ANR	1339324	IdentifierDecl	blocks		1339277	2					
ANR	1339325	IdentifierDeclType	int		1339277	0					
ANR	1339326	Identifier	blocks		1339277	1					
ANR	1339327	IdentifierDeclStatement	romfs_inode * node ;	1568:4:50075:50092	1339277	6	True				
ANR	1339328	IdentifierDecl	* node		1339277	0					
ANR	1339329	IdentifierDeclType	romfs_inode *		1339277	0					
ANR	1339330	Identifier	node		1339277	1					
ANR	1339331	IdentifierDeclStatement	"unsigned char * ubuf , * cbuf ;"	1569:4:50098:50124	1339277	7	True				
ANR	1339332	IdentifierDecl	* ubuf		1339277	0					
ANR	1339333	IdentifierDeclType	unsigned char *		1339277	0					
ANR	1339334	Identifier	ubuf		1339277	1					
ANR	1339335	IdentifierDecl	* cbuf		1339277	1					
ANR	1339336	IdentifierDeclType	unsigned char *		1339277	0					
ANR	1339337	Identifier	cbuf		1339277	1					
ANR	1339338	IdentifierDeclStatement	"unsigned long ulen , clen ;"	1570:4:50130:50154	1339277	8	True				
ANR	1339339	IdentifierDecl	ulen		1339277	0					
ANR	1339340	IdentifierDeclType	unsigned long		1339277	0					
ANR	1339341	Identifier	ulen		1339277	1					
ANR	1339342	IdentifierDecl	clen		1339277	1					
ANR	1339343	IdentifierDeclType	unsigned long		1339277	0					
ANR	1339344	Identifier	clen		1339277	1					
ANR	1339345	IdentifierDeclStatement	FILE * in ;	1571:4:50160:50168	1339277	9	True				
ANR	1339346	IdentifierDecl	* in		1339277	0					
ANR	1339347	IdentifierDeclType	FILE *		1339277	0					
ANR	1339348	Identifier	in		1339277	1					
ANR	1339349	IdentifierDeclStatement	unsigned long psc_len ;	1572:4:50174:50195	1339277	10	True				
ANR	1339350	IdentifierDecl	psc_len		1339277	0					
ANR	1339351	IdentifierDeclType	unsigned long		1339277	0					
ANR	1339352	Identifier	psc_len		1339277	1					
ANR	1339353	IdentifierDeclStatement	pscompstate psc = { 0 } ;	1573:4:50201:50224	1339277	11	True				
ANR	1339354	IdentifierDecl	psc = { 0 }		1339277	0					
ANR	1339355	IdentifierDeclType	pscompstate		1339277	0					
ANR	1339356	Identifier	psc		1339277	1					
ANR	1339357	AssignmentExpression	psc = { 0 }		1339277	2		=			
ANR	1339358	Identifier	psc		1339277	0					
ANR	1339359	InitializerList	0		1339277	1					
ANR	1339360	PrimaryExpression	0		1339277	0					
ANR	1339361	IdentifierDeclStatement	unsigned long numfiles = 0 ;	1574:4:50230:50256	1339277	12	True				
ANR	1339362	IdentifierDecl	numfiles = 0		1339277	0					
ANR	1339363	IdentifierDeclType	unsigned long		1339277	0					
ANR	1339364	Identifier	numfiles		1339277	1					
ANR	1339365	AssignmentExpression	numfiles = 0		1339277	2		=			
ANR	1339366	Identifier	numfiles		1339277	0					
ANR	1339367	PrimaryExpression	0		1339277	1					
ANR	1339368	IdentifierDeclStatement	"char * * foundfiles = NULL , * temp ;"	1575:4:50262:50293	1339277	13	True				
ANR	1339369	IdentifierDecl	* * foundfiles = NULL		1339277	0					
ANR	1339370	IdentifierDeclType	char * *		1339277	0					
ANR	1339371	Identifier	foundfiles		1339277	1					
ANR	1339372	AssignmentExpression	* * foundfiles = NULL		1339277	2		=			
ANR	1339373	Identifier	NULL		1339277	0					
ANR	1339374	Identifier	NULL		1339277	1					
ANR	1339375	IdentifierDecl	* temp		1339277	1					
ANR	1339376	IdentifierDeclType	char *		1339277	0					
ANR	1339377	Identifier	temp		1339277	1					
ANR	1339378	ExpressionStatement	prefixed_path = malloc ( PATH_STR_LEN )	1577:4:50300:50336	1339277	14	True				
ANR	1339379	AssignmentExpression	prefixed_path = malloc ( PATH_STR_LEN )		1339277	0		=			
ANR	1339380	Identifier	prefixed_path		1339277	0					
ANR	1339381	CallExpression	malloc ( PATH_STR_LEN )		1339277	1					
ANR	1339382	Callee	malloc		1339277	0					
ANR	1339383	Identifier	malloc		1339277	0					
ANR	1339384	ArgumentList	PATH_STR_LEN		1339277	1					
ANR	1339385	Argument	PATH_STR_LEN		1339277	0					
ANR	1339386	Identifier	PATH_STR_LEN		1339277	0					
ANR	1339387	ExpressionStatement	found_path = malloc ( PATH_STR_LEN )	1578:4:50342:50375	1339277	15	True				
ANR	1339388	AssignmentExpression	found_path = malloc ( PATH_STR_LEN )		1339277	0		=			
ANR	1339389	Identifier	found_path		1339277	0					
ANR	1339390	CallExpression	malloc ( PATH_STR_LEN )		1339277	1					
ANR	1339391	Callee	malloc		1339277	0					
ANR	1339392	Identifier	malloc		1339277	0					
ANR	1339393	ArgumentList	PATH_STR_LEN		1339277	1					
ANR	1339394	Argument	PATH_STR_LEN		1339277	0					
ANR	1339395	Identifier	PATH_STR_LEN		1339277	0					
ANR	1339396	ExpressionStatement	rom_filename = malloc ( PATH_STR_LEN )	1579:4:50381:50416	1339277	16	True				
ANR	1339397	AssignmentExpression	rom_filename = malloc ( PATH_STR_LEN )		1339277	0		=			
ANR	1339398	Identifier	rom_filename		1339277	0					
ANR	1339399	CallExpression	malloc ( PATH_STR_LEN )		1339277	1					
ANR	1339400	Callee	malloc		1339277	0					
ANR	1339401	Identifier	malloc		1339277	0					
ANR	1339402	ArgumentList	PATH_STR_LEN		1339277	1					
ANR	1339403	Argument	PATH_STR_LEN		1339277	0					
ANR	1339404	Identifier	PATH_STR_LEN		1339277	0					
ANR	1339405	ExpressionStatement	ubuf = malloc ( ROMFS_BLOCKSIZE )	1580:4:50422:50452	1339277	17	True				
ANR	1339406	AssignmentExpression	ubuf = malloc ( ROMFS_BLOCKSIZE )		1339277	0		=			
ANR	1339407	Identifier	ubuf		1339277	0					
ANR	1339408	CallExpression	malloc ( ROMFS_BLOCKSIZE )		1339277	1					
ANR	1339409	Callee	malloc		1339277	0					
ANR	1339410	Identifier	malloc		1339277	0					
ANR	1339411	ArgumentList	ROMFS_BLOCKSIZE		1339277	1					
ANR	1339412	Argument	ROMFS_BLOCKSIZE		1339277	0					
ANR	1339413	Identifier	ROMFS_BLOCKSIZE		1339277	0					
ANR	1339414	ExpressionStatement	cbuf = malloc ( ROMFS_CBUFSIZE )	1581:4:50458:50487	1339277	18	True				
ANR	1339415	AssignmentExpression	cbuf = malloc ( ROMFS_CBUFSIZE )		1339277	0		=			
ANR	1339416	Identifier	cbuf		1339277	0					
ANR	1339417	CallExpression	malloc ( ROMFS_CBUFSIZE )		1339277	1					
ANR	1339418	Callee	malloc		1339277	0					
ANR	1339419	Identifier	malloc		1339277	0					
ANR	1339420	ArgumentList	ROMFS_CBUFSIZE		1339277	1					
ANR	1339421	Argument	ROMFS_CBUFSIZE		1339277	0					
ANR	1339422	Identifier	ROMFS_CBUFSIZE		1339277	0					
ANR	1339423	IfStatement	if ( ubuf == NULL || cbuf == NULL || prefixed_path == NULL || found_path == NULL || rom_filename == NULL )		1339277	19					
ANR	1339424	Condition	ubuf == NULL || cbuf == NULL || prefixed_path == NULL || found_path == NULL || rom_filename == NULL	1582:8:50497:50611	1339277	0	True				
ANR	1339425	OrExpression	ubuf == NULL || cbuf == NULL || prefixed_path == NULL || found_path == NULL || rom_filename == NULL		1339277	0		||			
ANR	1339426	EqualityExpression	ubuf == NULL		1339277	0		==			
ANR	1339427	Identifier	ubuf		1339277	0					
ANR	1339428	Identifier	NULL		1339277	1					
ANR	1339429	OrExpression	cbuf == NULL || prefixed_path == NULL || found_path == NULL || rom_filename == NULL		1339277	1		||			
ANR	1339430	EqualityExpression	cbuf == NULL		1339277	0		==			
ANR	1339431	Identifier	cbuf		1339277	0					
ANR	1339432	Identifier	NULL		1339277	1					
ANR	1339433	OrExpression	prefixed_path == NULL || found_path == NULL || rom_filename == NULL		1339277	1		||			
ANR	1339434	EqualityExpression	prefixed_path == NULL		1339277	0		==			
ANR	1339435	Identifier	prefixed_path		1339277	0					
ANR	1339436	Identifier	NULL		1339277	1					
ANR	1339437	OrExpression	found_path == NULL || rom_filename == NULL		1339277	1		||			
ANR	1339438	EqualityExpression	found_path == NULL		1339277	0		==			
ANR	1339439	Identifier	found_path		1339277	0					
ANR	1339440	Identifier	NULL		1339277	1					
ANR	1339441	EqualityExpression	rom_filename == NULL		1339277	1		==			
ANR	1339442	Identifier	rom_filename		1339277	0					
ANR	1339443	Identifier	NULL		1339277	1					
ANR	1339444	CompoundStatement		23:60:743:743	1339277	1					
ANR	1339445	ExpressionStatement	"printf ( ""malloc fail in process_path\\n"" )"	1584:8:50624:50663	1339277	0	True				
ANR	1339446	CallExpression	"printf ( ""malloc fail in process_path\\n"" )"		1339277	0					
ANR	1339447	Callee	printf		1339277	0					
ANR	1339448	Identifier	printf		1339277	0					
ANR	1339449	ArgumentList	"""malloc fail in process_path\\n"""		1339277	1					
ANR	1339450	Argument	"""malloc fail in process_path\\n"""		1339277	0					
ANR	1339451	PrimaryExpression	"""malloc fail in process_path\\n"""		1339277	0					
ANR	1339452	ExpressionStatement	exit ( 1 )	1585:8:50673:50680	1339277	1	True				
ANR	1339453	CallExpression	exit ( 1 )		1339277	0					
ANR	1339454	Callee	exit		1339277	0					
ANR	1339455	Identifier	exit		1339277	0					
ANR	1339456	ArgumentList	1		1339277	1					
ANR	1339457	Argument	1		1339277	0					
ANR	1339458	PrimaryExpression	1		1339277	0					
ANR	1339459	ExpressionStatement	"prefix_add ( os_prefix , path , prefixed_path )"	1587:4:50692:50734	1339277	20	True				
ANR	1339460	CallExpression	"prefix_add ( os_prefix , path , prefixed_path )"		1339277	0					
ANR	1339461	Callee	prefix_add		1339277	0					
ANR	1339462	Identifier	prefix_add		1339277	0					
ANR	1339463	ArgumentList	os_prefix		1339277	1					
ANR	1339464	Argument	os_prefix		1339277	0					
ANR	1339465	Identifier	os_prefix		1339277	0					
ANR	1339466	Argument	path		1339277	1					
ANR	1339467	Identifier	path		1339277	0					
ANR	1339468	Argument	prefixed_path		1339277	2					
ANR	1339469	Identifier	prefixed_path		1339277	0					
ANR	1339470	ExpressionStatement	"prefix_add ( rom_prefix , """" , rom_filename )"	1588:4:50740:50780	1339277	21	True				
ANR	1339471	CallExpression	"prefix_add ( rom_prefix , """" , rom_filename )"		1339277	0					
ANR	1339472	Callee	prefix_add		1339277	0					
ANR	1339473	Identifier	prefix_add		1339277	0					
ANR	1339474	ArgumentList	rom_prefix		1339277	1					
ANR	1339475	Argument	rom_prefix		1339277	0					
ANR	1339476	Identifier	rom_prefix		1339277	0					
ANR	1339477	Argument	""""""		1339277	1					
ANR	1339478	PrimaryExpression	""""""		1339277	0					
ANR	1339479	Argument	rom_filename		1339277	2					
ANR	1339480	Identifier	rom_filename		1339277	0					
ANR	1339481	ExpressionStatement	"strcpy ( rom_filename , rom_prefix )"	1589:4:50786:50818	1339277	22	True				
ANR	1339482	CallExpression	"strcpy ( rom_filename , rom_prefix )"		1339277	0					
ANR	1339483	Callee	strcpy		1339277	0					
ANR	1339484	Identifier	strcpy		1339277	0					
ANR	1339485	ArgumentList	rom_filename		1339277	1					
ANR	1339486	Argument	rom_filename		1339277	0					
ANR	1339487	Identifier	rom_filename		1339277	0					
ANR	1339488	Argument	rom_prefix		1339277	1					
ANR	1339489	Identifier	rom_prefix		1339277	0					
ANR	1339490	ExpressionStatement	"pfenum = gp_enumerate_files_init ( prefixed_path , strlen ( prefixed_path ) , ( gs_memory_t * ) & minimal_memory )"	1592:4:50867:50993	1339277	23	True				
ANR	1339491	AssignmentExpression	"pfenum = gp_enumerate_files_init ( prefixed_path , strlen ( prefixed_path ) , ( gs_memory_t * ) & minimal_memory )"		1339277	0		=			
ANR	1339492	Identifier	pfenum		1339277	0					
ANR	1339493	CallExpression	"gp_enumerate_files_init ( prefixed_path , strlen ( prefixed_path ) , ( gs_memory_t * ) & minimal_memory )"		1339277	1					
ANR	1339494	Callee	gp_enumerate_files_init		1339277	0					
ANR	1339495	Identifier	gp_enumerate_files_init		1339277	0					
ANR	1339496	ArgumentList	prefixed_path		1339277	1					
ANR	1339497	Argument	prefixed_path		1339277	0					
ANR	1339498	Identifier	prefixed_path		1339277	0					
ANR	1339499	Argument	strlen ( prefixed_path )		1339277	1					
ANR	1339500	CallExpression	strlen ( prefixed_path )		1339277	0					
ANR	1339501	Callee	strlen		1339277	0					
ANR	1339502	Identifier	strlen		1339277	0					
ANR	1339503	ArgumentList	prefixed_path		1339277	1					
ANR	1339504	Argument	prefixed_path		1339277	0					
ANR	1339505	Identifier	prefixed_path		1339277	0					
ANR	1339506	Argument	( gs_memory_t * ) & minimal_memory		1339277	2					
ANR	1339507	CastExpression	( gs_memory_t * ) & minimal_memory		1339277	0					
ANR	1339508	CastTarget	gs_memory_t *		1339277	0					
ANR	1339509	UnaryOperationExpression	& minimal_memory		1339277	1					
ANR	1339510	UnaryOperator	&		1339277	0					
ANR	1339511	Identifier	minimal_memory		1339277	1					
ANR	1339512	IfStatement	if ( pfenum == NULL )		1339277	24					
ANR	1339513	Condition	pfenum == NULL	1594:8:51003:51016	1339277	0	True				
ANR	1339514	EqualityExpression	pfenum == NULL		1339277	0		==			
ANR	1339515	Identifier	pfenum		1339277	0					
ANR	1339516	Identifier	NULL		1339277	1					
ANR	1339517	CompoundStatement		34:24:1148:1148	1339277	1					
ANR	1339518	ExpressionStatement	"printf ( ""gp_enumerate_files_init failed.\\n"" )"	1595:8:51029:51072	1339277	0	True				
ANR	1339519	CallExpression	"printf ( ""gp_enumerate_files_init failed.\\n"" )"		1339277	0					
ANR	1339520	Callee	printf		1339277	0					
ANR	1339521	Identifier	printf		1339277	0					
ANR	1339522	ArgumentList	"""gp_enumerate_files_init failed.\\n"""		1339277	1					
ANR	1339523	Argument	"""gp_enumerate_files_init failed.\\n"""		1339277	0					
ANR	1339524	PrimaryExpression	"""gp_enumerate_files_init failed.\\n"""		1339277	0					
ANR	1339525	ExpressionStatement	exit ( 1 )	1596:8:51082:51089	1339277	1	True				
ANR	1339526	CallExpression	exit ( 1 )		1339277	0					
ANR	1339527	Callee	exit		1339277	0					
ANR	1339528	Identifier	exit		1339277	0					
ANR	1339529	ArgumentList	1		1339277	1					
ANR	1339530	Argument	1		1339277	0					
ANR	1339531	PrimaryExpression	1		1339277	0					
ANR	1339532	WhileStatement	"while ( ( namelen = gp_enumerate_files_next ( pfenum , found_path , 1024 ) ) >= 0 )"		1339277	25					
ANR	1339533	Condition	"( namelen = gp_enumerate_files_next ( pfenum , found_path , 1024 ) ) >= 0"	1598:11:51108:51171	1339277	0	True				
ANR	1339534	RelationalExpression	"( namelen = gp_enumerate_files_next ( pfenum , found_path , 1024 ) ) >= 0"		1339277	0		>=			
ANR	1339535	AssignmentExpression	"namelen = gp_enumerate_files_next ( pfenum , found_path , 1024 )"		1339277	0		=			
ANR	1339536	Identifier	namelen		1339277	0					
ANR	1339537	CallExpression	"gp_enumerate_files_next ( pfenum , found_path , 1024 )"		1339277	1					
ANR	1339538	Callee	gp_enumerate_files_next		1339277	0					
ANR	1339539	Identifier	gp_enumerate_files_next		1339277	0					
ANR	1339540	ArgumentList	pfenum		1339277	1					
ANR	1339541	Argument	pfenum		1339277	0					
ANR	1339542	Identifier	pfenum		1339277	0					
ANR	1339543	Argument	found_path		1339277	1					
ANR	1339544	Identifier	found_path		1339277	0					
ANR	1339545	Argument	1024		1339277	2					
ANR	1339546	PrimaryExpression	1024		1339277	0					
ANR	1339547	PrimaryExpression	0		1339277	1					
ANR	1339548	CompoundStatement		38:77:1303:1303	1339277	1					
ANR	1339549	ExpressionStatement	excluded = 0	1599:8:51184:51196	1339277	0	True				
ANR	1339550	AssignmentExpression	excluded = 0		1339277	0		=			
ANR	1339551	Identifier	excluded		1339277	0					
ANR	1339552	PrimaryExpression	0		1339277	1					
ANR	1339553	ExpressionStatement	found_path [ namelen ] = 0	1600:8:51206:51229	1339277	1	True				
ANR	1339554	AssignmentExpression	found_path [ namelen ] = 0		1339277	0		=			
ANR	1339555	ArrayIndexing	found_path [ namelen ]		1339277	0					
ANR	1339556	Identifier	found_path		1339277	0					
ANR	1339557	Identifier	namelen		1339277	1					
ANR	1339558	PrimaryExpression	0		1339277	1					
ANR	1339559	ForStatement	for ( Xlist_scan = Xlist_head ; Xlist_scan != NULL ; Xlist_scan = Xlist_scan -> next )		1339277	2					
ANR	1339560	ForInit	Xlist_scan = Xlist_head ;	1602:13:51366:51389	1339277	0	True				
ANR	1339561	AssignmentExpression	Xlist_scan = Xlist_head		1339277	0		=			
ANR	1339562	Identifier	Xlist_scan		1339277	0					
ANR	1339563	Identifier	Xlist_head		1339277	1					
ANR	1339564	Condition	Xlist_scan != NULL	1602:38:51391:51408	1339277	1	True				
ANR	1339565	EqualityExpression	Xlist_scan != NULL		1339277	0		!=			
ANR	1339566	Identifier	Xlist_scan		1339277	0					
ANR	1339567	Identifier	NULL		1339277	1					
ANR	1339568	AssignmentExpression	Xlist_scan = Xlist_scan -> next	1602:58:51411:51439	1339277	2	True	=			
ANR	1339569	Identifier	Xlist_scan		1339277	0					
ANR	1339570	PtrMemberAccess	Xlist_scan -> next		1339277	1					
ANR	1339571	Identifier	Xlist_scan		1339277	0					
ANR	1339572	Identifier	next		1339277	1					
ANR	1339573	CompoundStatement		42:89:1571:1571	1339277	3					
ANR	1339574	IfStatement	if ( strlen ( found_path ) >= strlen ( Xlist_scan -> path ) )		1339277	0					
ANR	1339575	Condition	strlen ( found_path ) >= strlen ( Xlist_scan -> path )	1603:16:51460:51505	1339277	0	True				
ANR	1339576	RelationalExpression	strlen ( found_path ) >= strlen ( Xlist_scan -> path )		1339277	0		>=			
ANR	1339577	CallExpression	strlen ( found_path )		1339277	0					
ANR	1339578	Callee	strlen		1339277	0					
ANR	1339579	Identifier	strlen		1339277	0					
ANR	1339580	ArgumentList	found_path		1339277	1					
ANR	1339581	Argument	found_path		1339277	0					
ANR	1339582	Identifier	found_path		1339277	0					
ANR	1339583	CallExpression	strlen ( Xlist_scan -> path )		1339277	1					
ANR	1339584	Callee	strlen		1339277	0					
ANR	1339585	Identifier	strlen		1339277	0					
ANR	1339586	ArgumentList	Xlist_scan -> path		1339277	1					
ANR	1339587	Argument	Xlist_scan -> path		1339277	0					
ANR	1339588	PtrMemberAccess	Xlist_scan -> path		1339277	0					
ANR	1339589	Identifier	Xlist_scan		1339277	0					
ANR	1339590	Identifier	path		1339277	1					
ANR	1339591	CompoundStatement		43:64:1637:1637	1339277	1					
ANR	1339592	IfStatement	"if ( strcmp ( Xlist_scan -> path , found_path + strlen ( found_path ) - strlen ( Xlist_scan -> path ) ) == 0 )"		1339277	0					
ANR	1339593	Condition	"strcmp ( Xlist_scan -> path , found_path + strlen ( found_path ) - strlen ( Xlist_scan -> path ) ) == 0"	1604:20:51530:51614	1339277	0	True				
ANR	1339594	EqualityExpression	"strcmp ( Xlist_scan -> path , found_path + strlen ( found_path ) - strlen ( Xlist_scan -> path ) ) == 0"		1339277	0		==			
ANR	1339595	CallExpression	"strcmp ( Xlist_scan -> path , found_path + strlen ( found_path ) - strlen ( Xlist_scan -> path ) )"		1339277	0					
ANR	1339596	Callee	strcmp		1339277	0					
ANR	1339597	Identifier	strcmp		1339277	0					
ANR	1339598	ArgumentList	Xlist_scan -> path		1339277	1					
ANR	1339599	Argument	Xlist_scan -> path		1339277	0					
ANR	1339600	PtrMemberAccess	Xlist_scan -> path		1339277	0					
ANR	1339601	Identifier	Xlist_scan		1339277	0					
ANR	1339602	Identifier	path		1339277	1					
ANR	1339603	Argument	found_path + strlen ( found_path ) - strlen ( Xlist_scan -> path )		1339277	1					
ANR	1339604	AdditiveExpression	found_path + strlen ( found_path ) - strlen ( Xlist_scan -> path )		1339277	0		+			
ANR	1339605	Identifier	found_path		1339277	0					
ANR	1339606	AdditiveExpression	strlen ( found_path ) - strlen ( Xlist_scan -> path )		1339277	1		-			
ANR	1339607	CallExpression	strlen ( found_path )		1339277	0					
ANR	1339608	Callee	strlen		1339277	0					
ANR	1339609	Identifier	strlen		1339277	0					
ANR	1339610	ArgumentList	found_path		1339277	1					
ANR	1339611	Argument	found_path		1339277	0					
ANR	1339612	Identifier	found_path		1339277	0					
ANR	1339613	CallExpression	strlen ( Xlist_scan -> path )		1339277	1					
ANR	1339614	Callee	strlen		1339277	0					
ANR	1339615	Identifier	strlen		1339277	0					
ANR	1339616	ArgumentList	Xlist_scan -> path		1339277	1					
ANR	1339617	Argument	Xlist_scan -> path		1339277	0					
ANR	1339618	PtrMemberAccess	Xlist_scan -> path		1339277	0					
ANR	1339619	Identifier	Xlist_scan		1339277	0					
ANR	1339620	Identifier	path		1339277	1					
ANR	1339621	PrimaryExpression	0		1339277	1					
ANR	1339622	CompoundStatement		44:107:1746:1746	1339277	1					
ANR	1339623	ExpressionStatement	excluded = 1	1605:20:51639:51651	1339277	0	True				
ANR	1339624	AssignmentExpression	excluded = 1		1339277	0		=			
ANR	1339625	Identifier	excluded		1339277	0					
ANR	1339626	PrimaryExpression	1		1339277	1					
ANR	1339627	BreakStatement	break ;	1606:20:51673:51678	1339277	1	True				
ANR	1339628	IfStatement	if ( excluded )		1339277	3					
ANR	1339629	Condition	excluded	1610:12:51734:51741	1339277	0	True				
ANR	1339630	Identifier	excluded		1339277	0					
ANR	1339631	ContinueStatement	continue ;	1611:12:51756:51764	1339277	1	True				
ANR	1339632	ExpressionStatement	numfiles ++	1613:8:51775:51785	1339277	4	True				
ANR	1339633	PostIncDecOperationExpression	numfiles ++		1339277	0					
ANR	1339634	Identifier	numfiles		1339277	0					
ANR	1339635	IncDec	++		1339277	1					
ANR	1339636	ExpressionStatement	"temp = realloc ( foundfiles , sizeof ( char * ) * numfiles )"	1614:8:51795:51848	1339277	5	True				
ANR	1339637	AssignmentExpression	"temp = realloc ( foundfiles , sizeof ( char * ) * numfiles )"		1339277	0		=			
ANR	1339638	Identifier	temp		1339277	0					
ANR	1339639	CallExpression	"realloc ( foundfiles , sizeof ( char * ) * numfiles )"		1339277	1					
ANR	1339640	Callee	realloc		1339277	0					
ANR	1339641	Identifier	realloc		1339277	0					
ANR	1339642	ArgumentList	foundfiles		1339277	1					
ANR	1339643	Argument	foundfiles		1339277	0					
ANR	1339644	Identifier	foundfiles		1339277	0					
ANR	1339645	Argument	sizeof ( char * ) * numfiles		1339277	1					
ANR	1339646	MultiplicativeExpression	sizeof ( char * ) * numfiles		1339277	0		*			
ANR	1339647	SizeofExpression	sizeof ( char * )		1339277	0					
ANR	1339648	Sizeof	sizeof		1339277	0					
ANR	1339649	SizeofOperand	char *		1339277	1					
ANR	1339650	Identifier	numfiles		1339277	1					
ANR	1339651	IfStatement	if ( temp == NULL )		1339277	6					
ANR	1339652	Condition	temp == NULL	1615:12:51862:51873	1339277	0	True				
ANR	1339653	EqualityExpression	temp == NULL		1339277	0		==			
ANR	1339654	Identifier	temp		1339277	0					
ANR	1339655	Identifier	NULL		1339277	1					
ANR	1339656	CompoundStatement		55:26:2005:2005	1339277	1					
ANR	1339657	ExpressionStatement	free ( cbuf )	1616:12:51890:51900	1339277	0	True				
ANR	1339658	CallExpression	free ( cbuf )		1339277	0					
ANR	1339659	Callee	free		1339277	0					
ANR	1339660	Identifier	free		1339277	0					
ANR	1339661	ArgumentList	cbuf		1339277	1					
ANR	1339662	Argument	cbuf		1339277	0					
ANR	1339663	Identifier	cbuf		1339277	0					
ANR	1339664	ExpressionStatement	free ( ubuf )	1617:12:51914:51924	1339277	1	True				
ANR	1339665	CallExpression	free ( ubuf )		1339277	0					
ANR	1339666	Callee	free		1339277	0					
ANR	1339667	Identifier	free		1339277	0					
ANR	1339668	ArgumentList	ubuf		1339277	1					
ANR	1339669	Argument	ubuf		1339277	0					
ANR	1339670	Identifier	ubuf		1339277	0					
ANR	1339671	ExpressionStatement	free ( found_path )	1618:12:51938:51954	1339277	2	True				
ANR	1339672	CallExpression	free ( found_path )		1339277	0					
ANR	1339673	Callee	free		1339277	0					
ANR	1339674	Identifier	free		1339277	0					
ANR	1339675	ArgumentList	found_path		1339277	1					
ANR	1339676	Argument	found_path		1339277	0					
ANR	1339677	Identifier	found_path		1339277	0					
ANR	1339678	ExpressionStatement	free ( foundfiles )	1619:12:51968:51984	1339277	3	True				
ANR	1339679	CallExpression	free ( foundfiles )		1339277	0					
ANR	1339680	Callee	free		1339277	0					
ANR	1339681	Identifier	free		1339277	0					
ANR	1339682	ArgumentList	foundfiles		1339277	1					
ANR	1339683	Argument	foundfiles		1339277	0					
ANR	1339684	Identifier	foundfiles		1339277	0					
ANR	1339685	ExpressionStatement	free ( prefixed_path )	1620:12:51998:52017	1339277	4	True				
ANR	1339686	CallExpression	free ( prefixed_path )		1339277	0					
ANR	1339687	Callee	free		1339277	0					
ANR	1339688	Identifier	free		1339277	0					
ANR	1339689	ArgumentList	prefixed_path		1339277	1					
ANR	1339690	Argument	prefixed_path		1339277	0					
ANR	1339691	Identifier	prefixed_path		1339277	0					
ANR	1339692	ExpressionStatement	free ( rom_filename )	1621:12:52031:52049	1339277	5	True				
ANR	1339693	CallExpression	free ( rom_filename )		1339277	0					
ANR	1339694	Callee	free		1339277	0					
ANR	1339695	Identifier	free		1339277	0					
ANR	1339696	ArgumentList	rom_filename		1339277	1					
ANR	1339697	Argument	rom_filename		1339277	0					
ANR	1339698	Identifier	rom_filename		1339277	0					
ANR	1339699	ExpressionStatement	"printf ( ""realloc failed in process_path.\\n"" )"	1622:12:52063:52106	1339277	6	True				
ANR	1339700	CallExpression	"printf ( ""realloc failed in process_path.\\n"" )"		1339277	0					
ANR	1339701	Callee	printf		1339277	0					
ANR	1339702	Identifier	printf		1339277	0					
ANR	1339703	ArgumentList	"""realloc failed in process_path.\\n"""		1339277	1					
ANR	1339704	Argument	"""realloc failed in process_path.\\n"""		1339277	0					
ANR	1339705	PrimaryExpression	"""realloc failed in process_path.\\n"""		1339277	0					
ANR	1339706	ExpressionStatement	exit ( 1 )	1623:12:52120:52127	1339277	7	True				
ANR	1339707	CallExpression	exit ( 1 )		1339277	0					
ANR	1339708	Callee	exit		1339277	0					
ANR	1339709	Identifier	exit		1339277	0					
ANR	1339710	ArgumentList	1		1339277	1					
ANR	1339711	Argument	1		1339277	0					
ANR	1339712	PrimaryExpression	1		1339277	0					
ANR	1339713	ExpressionStatement	foundfiles = ( char * * ) temp	1625:8:52147:52173	1339277	7	True				
ANR	1339714	AssignmentExpression	foundfiles = ( char * * ) temp		1339277	0		=			
ANR	1339715	Identifier	foundfiles		1339277	0					
ANR	1339716	CastExpression	( char * * ) temp		1339277	1					
ANR	1339717	CastTarget	char * *		1339277	0					
ANR	1339718	Identifier	temp		1339277	1					
ANR	1339719	ExpressionStatement	foundfiles [ numfiles - 1 ] = strdup ( found_path )	1626:8:52183:52228	1339277	8	True				
ANR	1339720	AssignmentExpression	foundfiles [ numfiles - 1 ] = strdup ( found_path )		1339277	0		=			
ANR	1339721	ArrayIndexing	foundfiles [ numfiles - 1 ]		1339277	0					
ANR	1339722	Identifier	foundfiles		1339277	0					
ANR	1339723	AdditiveExpression	numfiles - 1		1339277	1		-			
ANR	1339724	Identifier	numfiles		1339277	0					
ANR	1339725	PrimaryExpression	1		1339277	1					
ANR	1339726	CallExpression	strdup ( found_path )		1339277	1					
ANR	1339727	Callee	strdup		1339277	0					
ANR	1339728	Identifier	strdup		1339277	0					
ANR	1339729	ArgumentList	found_path		1339277	1					
ANR	1339730	Argument	found_path		1339277	0					
ANR	1339731	Identifier	found_path		1339277	0					
ANR	1339732	ExpressionStatement	"qsort ( foundfiles , numfiles , sizeof ( char * ) , cmpstringp )"	1629:4:52241:52296	1339277	26	True				
ANR	1339733	CallExpression	"qsort ( foundfiles , numfiles , sizeof ( char * ) , cmpstringp )"		1339277	0					
ANR	1339734	Callee	qsort		1339277	0					
ANR	1339735	Identifier	qsort		1339277	0					
ANR	1339736	ArgumentList	foundfiles		1339277	1					
ANR	1339737	Argument	foundfiles		1339277	0					
ANR	1339738	Identifier	foundfiles		1339277	0					
ANR	1339739	Argument	numfiles		1339277	1					
ANR	1339740	Identifier	numfiles		1339277	0					
ANR	1339741	Argument	sizeof ( char * )		1339277	2					
ANR	1339742	SizeofExpression	sizeof ( char * )		1339277	0					
ANR	1339743	Sizeof	sizeof		1339277	0					
ANR	1339744	SizeofOperand	char *		1339277	1					
ANR	1339745	Argument	cmpstringp		1339277	3					
ANR	1339746	Identifier	cmpstringp		1339277	0					
ANR	1339747	ForStatement	for ( i = 0 ; i < numfiles ; i ++ )		1339277	27					
ANR	1339748	ForInit	i = 0 ;	1631:9:52308:52313	1339277	0	True				
ANR	1339749	AssignmentExpression	i = 0		1339277	0		=			
ANR	1339750	Identifier	i		1339277	0					
ANR	1339751	PrimaryExpression	0		1339277	1					
ANR	1339752	Condition	i < numfiles	1631:16:52315:52326	1339277	1	True				
ANR	1339753	RelationalExpression	i < numfiles		1339277	0		<			
ANR	1339754	Identifier	i		1339277	0					
ANR	1339755	Identifier	numfiles		1339277	1					
ANR	1339756	PostIncDecOperationExpression	i ++	1631:30:52329:52331	1339277	2	True				
ANR	1339757	Identifier	i		1339277	0					
ANR	1339758	IncDec	++		1339277	1					
ANR	1339759	CompoundStatement		72:8:2473:2500	1339277	3					
ANR	1339760	IdentifierDeclStatement	char * fpath = foundfiles [ i ] ;	1632:8:52344:52371	1339277	0	True				
ANR	1339761	IdentifierDecl	* fpath = foundfiles [ i ]		1339277	0					
ANR	1339762	IdentifierDeclType	char *		1339277	0					
ANR	1339763	Identifier	fpath		1339277	1					
ANR	1339764	AssignmentExpression	* fpath = foundfiles [ i ]		1339277	2		=			
ANR	1339765	Identifier	fpath		1339277	0					
ANR	1339766	ArrayIndexing	foundfiles [ i ]		1339277	1					
ANR	1339767	Identifier	foundfiles		1339277	0					
ANR	1339768	Identifier	i		1339277	1					
ANR	1339769	ExpressionStatement	"node = calloc ( 1 , sizeof ( romfs_inode ) )"	1635:8:52411:52448	1339277	1	True				
ANR	1339770	AssignmentExpression	"node = calloc ( 1 , sizeof ( romfs_inode ) )"		1339277	0		=			
ANR	1339771	Identifier	node		1339277	0					
ANR	1339772	CallExpression	"calloc ( 1 , sizeof ( romfs_inode ) )"		1339277	1					
ANR	1339773	Callee	calloc		1339277	0					
ANR	1339774	Identifier	calloc		1339277	0					
ANR	1339775	ArgumentList	1		1339277	1					
ANR	1339776	Argument	1		1339277	0					
ANR	1339777	PrimaryExpression	1		1339277	0					
ANR	1339778	Argument	sizeof ( romfs_inode )		1339277	1					
ANR	1339779	SizeofExpression	sizeof ( romfs_inode )		1339277	0					
ANR	1339780	Sizeof	sizeof		1339277	0					
ANR	1339781	SizeofOperand	romfs_inode		1339277	1					
ANR	1339782	ExpressionStatement	"in = fopen ( fpath , ""rb"" )"	1637:8:52495:52518	1339277	2	True				
ANR	1339783	AssignmentExpression	"in = fopen ( fpath , ""rb"" )"		1339277	0		=			
ANR	1339784	Identifier	in		1339277	0					
ANR	1339785	CallExpression	"fopen ( fpath , ""rb"" )"		1339277	1					
ANR	1339786	Callee	fopen		1339277	0					
ANR	1339787	Identifier	fopen		1339277	0					
ANR	1339788	ArgumentList	fpath		1339277	1					
ANR	1339789	Argument	fpath		1339277	0					
ANR	1339790	Identifier	fpath		1339277	0					
ANR	1339791	Argument	"""rb"""		1339277	1					
ANR	1339792	PrimaryExpression	"""rb"""		1339277	0					
ANR	1339793	IfStatement	if ( in == NULL )		1339277	3					
ANR	1339794	Condition	in == NULL	1638:12:52532:52541	1339277	0	True				
ANR	1339795	EqualityExpression	in == NULL		1339277	0		==			
ANR	1339796	Identifier	in		1339277	0					
ANR	1339797	Identifier	NULL		1339277	1					
ANR	1339798	CompoundStatement		78:24:2673:2673	1339277	1					
ANR	1339799	ExpressionStatement	"printf ( ""unable to open file for processing: %s\\n"" , fpath )"	1639:12:52558:52615	1339277	0	True				
ANR	1339800	CallExpression	"printf ( ""unable to open file for processing: %s\\n"" , fpath )"		1339277	0					
ANR	1339801	Callee	printf		1339277	0					
ANR	1339802	Identifier	printf		1339277	0					
ANR	1339803	ArgumentList	"""unable to open file for processing: %s\\n"""		1339277	1					
ANR	1339804	Argument	"""unable to open file for processing: %s\\n"""		1339277	0					
ANR	1339805	PrimaryExpression	"""unable to open file for processing: %s\\n"""		1339277	0					
ANR	1339806	Argument	fpath		1339277	1					
ANR	1339807	Identifier	fpath		1339277	0					
ANR	1339808	ContinueStatement	continue ;	1640:12:52629:52637	1339277	1	True				
ANR	1339809	ExpressionStatement	rom_filename [ strlen ( rom_prefix ) ] = 0	1645:8:52880:52916	1339277	4	True				
ANR	1339810	AssignmentExpression	rom_filename [ strlen ( rom_prefix ) ] = 0		1339277	0		=			
ANR	1339811	ArrayIndexing	rom_filename [ strlen ( rom_prefix ) ]		1339277	0					
ANR	1339812	Identifier	rom_filename		1339277	0					
ANR	1339813	CallExpression	strlen ( rom_prefix )		1339277	1					
ANR	1339814	Callee	strlen		1339277	0					
ANR	1339815	Identifier	strlen		1339277	0					
ANR	1339816	ArgumentList	rom_prefix		1339277	1					
ANR	1339817	Argument	rom_prefix		1339277	0					
ANR	1339818	Identifier	rom_prefix		1339277	0					
ANR	1339819	PrimaryExpression	0		1339277	1					
ANR	1339820	ExpressionStatement	"strcat ( rom_filename , fpath + strlen ( os_prefix ) )"	1646:8:52956:53003	1339277	5	True				
ANR	1339821	CallExpression	"strcat ( rom_filename , fpath + strlen ( os_prefix ) )"		1339277	0					
ANR	1339822	Callee	strcat		1339277	0					
ANR	1339823	Identifier	strcat		1339277	0					
ANR	1339824	ArgumentList	rom_filename		1339277	1					
ANR	1339825	Argument	rom_filename		1339277	0					
ANR	1339826	Identifier	rom_filename		1339277	0					
ANR	1339827	Argument	fpath + strlen ( os_prefix )		1339277	1					
ANR	1339828	AdditiveExpression	fpath + strlen ( os_prefix )		1339277	0		+			
ANR	1339829	Identifier	fpath		1339277	0					
ANR	1339830	CallExpression	strlen ( os_prefix )		1339277	1					
ANR	1339831	Callee	strlen		1339277	0					
ANR	1339832	Identifier	strlen		1339277	0					
ANR	1339833	ArgumentList	os_prefix		1339277	1					
ANR	1339834	Argument	os_prefix		1339277	0					
ANR	1339835	Identifier	os_prefix		1339277	0					
ANR	1339836	ExpressionStatement	node -> name = rom_filename	1647:8:53013:53038	1339277	6	True				
ANR	1339837	AssignmentExpression	node -> name = rom_filename		1339277	0		=			
ANR	1339838	PtrMemberAccess	node -> name		1339277	0					
ANR	1339839	Identifier	node		1339277	0					
ANR	1339840	Identifier	name		1339277	1					
ANR	1339841	Identifier	rom_filename		1339277	1					
ANR	1339842	ExpressionStatement	"fseek ( in , 0 , SEEK_END )"	1648:8:53092:53114	1339277	7	True				
ANR	1339843	CallExpression	"fseek ( in , 0 , SEEK_END )"		1339277	0					
ANR	1339844	Callee	fseek		1339277	0					
ANR	1339845	Identifier	fseek		1339277	0					
ANR	1339846	ArgumentList	in		1339277	1					
ANR	1339847	Argument	in		1339277	0					
ANR	1339848	Identifier	in		1339277	0					
ANR	1339849	Argument	0		1339277	1					
ANR	1339850	PrimaryExpression	0		1339277	0					
ANR	1339851	Argument	SEEK_END		1339277	2					
ANR	1339852	Identifier	SEEK_END		1339277	0					
ANR	1339853	ExpressionStatement	node -> disc_length = node -> length = ftell ( in )	1649:8:53124:53168	1339277	8	True				
ANR	1339854	AssignmentExpression	node -> disc_length = node -> length = ftell ( in )		1339277	0		=			
ANR	1339855	PtrMemberAccess	node -> disc_length		1339277	0					
ANR	1339856	Identifier	node		1339277	0					
ANR	1339857	Identifier	disc_length		1339277	1					
ANR	1339858	AssignmentExpression	node -> length = ftell ( in )		1339277	1		=			
ANR	1339859	PtrMemberAccess	node -> length		1339277	0					
ANR	1339860	Identifier	node		1339277	0					
ANR	1339861	Identifier	length		1339277	1					
ANR	1339862	CallExpression	ftell ( in )		1339277	1					
ANR	1339863	Callee	ftell		1339277	0					
ANR	1339864	Identifier	ftell		1339277	0					
ANR	1339865	ArgumentList	in		1339277	1					
ANR	1339866	Argument	in		1339277	0					
ANR	1339867	Identifier	in		1339277	0					
ANR	1339868	ExpressionStatement	blocks = ( node -> length + ROMFS_BLOCKSIZE - 1 ) / ROMFS_BLOCKSIZE + 1	1650:8:53178:53241	1339277	9	True				
ANR	1339869	AssignmentExpression	blocks = ( node -> length + ROMFS_BLOCKSIZE - 1 ) / ROMFS_BLOCKSIZE + 1		1339277	0		=			
ANR	1339870	Identifier	blocks		1339277	0					
ANR	1339871	AdditiveExpression	( node -> length + ROMFS_BLOCKSIZE - 1 ) / ROMFS_BLOCKSIZE + 1		1339277	1		+			
ANR	1339872	MultiplicativeExpression	( node -> length + ROMFS_BLOCKSIZE - 1 ) / ROMFS_BLOCKSIZE		1339277	0		/			
ANR	1339873	AdditiveExpression	node -> length + ROMFS_BLOCKSIZE - 1		1339277	0		+			
ANR	1339874	PtrMemberAccess	node -> length		1339277	0					
ANR	1339875	Identifier	node		1339277	0					
ANR	1339876	Identifier	length		1339277	1					
ANR	1339877	AdditiveExpression	ROMFS_BLOCKSIZE - 1		1339277	1		-			
ANR	1339878	Identifier	ROMFS_BLOCKSIZE		1339277	0					
ANR	1339879	PrimaryExpression	1		1339277	1					
ANR	1339880	Identifier	ROMFS_BLOCKSIZE		1339277	1					
ANR	1339881	PrimaryExpression	1		1339277	1					
ANR	1339882	ExpressionStatement	"node -> data_lengths = calloc ( blocks , sizeof ( * node -> data_lengths ) )"	1651:8:53251:53315	1339277	10	True				
ANR	1339883	AssignmentExpression	"node -> data_lengths = calloc ( blocks , sizeof ( * node -> data_lengths ) )"		1339277	0		=			
ANR	1339884	PtrMemberAccess	node -> data_lengths		1339277	0					
ANR	1339885	Identifier	node		1339277	0					
ANR	1339886	Identifier	data_lengths		1339277	1					
ANR	1339887	CallExpression	"calloc ( blocks , sizeof ( * node -> data_lengths ) )"		1339277	1					
ANR	1339888	Callee	calloc		1339277	0					
ANR	1339889	Identifier	calloc		1339277	0					
ANR	1339890	ArgumentList	blocks		1339277	1					
ANR	1339891	Argument	blocks		1339277	0					
ANR	1339892	Identifier	blocks		1339277	0					
ANR	1339893	Argument	sizeof ( * node -> data_lengths )		1339277	1					
ANR	1339894	SizeofExpression	sizeof ( * node -> data_lengths )		1339277	0					
ANR	1339895	Sizeof	sizeof		1339277	0					
ANR	1339896	UnaryOperationExpression	* node -> data_lengths		1339277	1					
ANR	1339897	UnaryOperator	*		1339277	0					
ANR	1339898	PtrMemberAccess	node -> data_lengths		1339277	1					
ANR	1339899	Identifier	node		1339277	0					
ANR	1339900	Identifier	data_lengths		1339277	1					
ANR	1339901	ExpressionStatement	"node -> data = calloc ( blocks , sizeof ( * node -> data ) )"	1652:8:53325:53373	1339277	11	True				
ANR	1339902	AssignmentExpression	"node -> data = calloc ( blocks , sizeof ( * node -> data ) )"		1339277	0		=			
ANR	1339903	PtrMemberAccess	node -> data		1339277	0					
ANR	1339904	Identifier	node		1339277	0					
ANR	1339905	Identifier	data		1339277	1					
ANR	1339906	CallExpression	"calloc ( blocks , sizeof ( * node -> data ) )"		1339277	1					
ANR	1339907	Callee	calloc		1339277	0					
ANR	1339908	Identifier	calloc		1339277	0					
ANR	1339909	ArgumentList	blocks		1339277	1					
ANR	1339910	Argument	blocks		1339277	0					
ANR	1339911	Identifier	blocks		1339277	0					
ANR	1339912	Argument	sizeof ( * node -> data )		1339277	1					
ANR	1339913	SizeofExpression	sizeof ( * node -> data )		1339277	0					
ANR	1339914	Sizeof	sizeof		1339277	0					
ANR	1339915	UnaryOperationExpression	* node -> data		1339277	1					
ANR	1339916	UnaryOperator	*		1339277	0					
ANR	1339917	PtrMemberAccess	node -> data		1339277	1					
ANR	1339918	Identifier	node		1339277	0					
ANR	1339919	Identifier	data		1339277	1					
ANR	1339920	ExpressionStatement	fclose ( in )	1653:8:53383:53393	1339277	12	True				
ANR	1339921	CallExpression	fclose ( in )		1339277	0					
ANR	1339922	Callee	fclose		1339277	0					
ANR	1339923	Identifier	fclose		1339277	0					
ANR	1339924	ArgumentList	in		1339277	1					
ANR	1339925	Argument	in		1339277	0					
ANR	1339926	Identifier	in		1339277	0					
ANR	1339927	ExpressionStatement	"in = fopen ( fpath , ""rb"" )"	1654:8:53403:53426	1339277	13	True				
ANR	1339928	AssignmentExpression	"in = fopen ( fpath , ""rb"" )"		1339277	0		=			
ANR	1339929	Identifier	in		1339277	0					
ANR	1339930	CallExpression	"fopen ( fpath , ""rb"" )"		1339277	1					
ANR	1339931	Callee	fopen		1339277	0					
ANR	1339932	Identifier	fopen		1339277	0					
ANR	1339933	ArgumentList	fpath		1339277	1					
ANR	1339934	Argument	fpath		1339277	0					
ANR	1339935	Identifier	fpath		1339277	0					
ANR	1339936	Argument	"""rb"""		1339277	1					
ANR	1339937	PrimaryExpression	"""rb"""		1339277	0					
ANR	1339938	ExpressionStatement	ulen = strlen ( fpath )	1655:8:53436:53456	1339277	14	True				
ANR	1339939	AssignmentExpression	ulen = strlen ( fpath )		1339277	0		=			
ANR	1339940	Identifier	ulen		1339277	0					
ANR	1339941	CallExpression	strlen ( fpath )		1339277	1					
ANR	1339942	Callee	strlen		1339277	0					
ANR	1339943	Identifier	strlen		1339277	0					
ANR	1339944	ArgumentList	fpath		1339277	1					
ANR	1339945	Argument	fpath		1339277	0					
ANR	1339946	Identifier	fpath		1339277	0					
ANR	1339947	ExpressionStatement	block = 0	1656:8:53466:53475	1339277	15	True				
ANR	1339948	AssignmentExpression	block = 0		1339277	0		=			
ANR	1339949	Identifier	block		1339277	0					
ANR	1339950	PrimaryExpression	0		1339277	1					
ANR	1339951	ExpressionStatement	psc_len = 0	1657:8:53485:53496	1339277	16	True				
ANR	1339952	AssignmentExpression	psc_len = 0		1339277	0		=			
ANR	1339953	Identifier	psc_len		1339277	0					
ANR	1339954	PrimaryExpression	0		1339277	1					
ANR	1339955	IfStatement	if ( compaction )		1339277	17					
ANR	1339956	Condition	compaction	1658:12:53510:53519	1339277	0	True				
ANR	1339957	Identifier	compaction		1339277	0					
ANR	1339958	ExpressionStatement	"pscompact_start ( & psc , ( psc_getc * ) & fgetc , ( psc_ungetc * ) & ungetc , ( psc_feof * ) & feof , in , 1 , 0 , 0 )"	1659:12:53534:53627	1339277	1	True				
ANR	1339959	CallExpression	"pscompact_start ( & psc , ( psc_getc * ) & fgetc , ( psc_ungetc * ) & ungetc , ( psc_feof * ) & feof , in , 1 , 0 , 0 )"		1339277	0					
ANR	1339960	Callee	pscompact_start		1339277	0					
ANR	1339961	Identifier	pscompact_start		1339277	0					
ANR	1339962	ArgumentList	& psc		1339277	1					
ANR	1339963	Argument	& psc		1339277	0					
ANR	1339964	UnaryOperationExpression	& psc		1339277	0					
ANR	1339965	UnaryOperator	&		1339277	0					
ANR	1339966	Identifier	psc		1339277	1					
ANR	1339967	Argument	( psc_getc * ) & fgetc		1339277	1					
ANR	1339968	CastExpression	( psc_getc * ) & fgetc		1339277	0					
ANR	1339969	CastTarget	psc_getc *		1339277	0					
ANR	1339970	UnaryOperationExpression	& fgetc		1339277	1					
ANR	1339971	UnaryOperator	&		1339277	0					
ANR	1339972	Identifier	fgetc		1339277	1					
ANR	1339973	Argument	( psc_ungetc * ) & ungetc		1339277	2					
ANR	1339974	CastExpression	( psc_ungetc * ) & ungetc		1339277	0					
ANR	1339975	CastTarget	psc_ungetc *		1339277	0					
ANR	1339976	UnaryOperationExpression	& ungetc		1339277	1					
ANR	1339977	UnaryOperator	&		1339277	0					
ANR	1339978	Identifier	ungetc		1339277	1					
ANR	1339979	Argument	( psc_feof * ) & feof		1339277	3					
ANR	1339980	CastExpression	( psc_feof * ) & feof		1339277	0					
ANR	1339981	CastTarget	psc_feof *		1339277	0					
ANR	1339982	UnaryOperationExpression	& feof		1339277	1					
ANR	1339983	UnaryOperator	&		1339277	0					
ANR	1339984	Identifier	feof		1339277	1					
ANR	1339985	Argument	in		1339277	4					
ANR	1339986	Identifier	in		1339277	0					
ANR	1339987	Argument	1		1339277	5					
ANR	1339988	PrimaryExpression	1		1339277	0					
ANR	1339989	Argument	0		1339277	6					
ANR	1339990	PrimaryExpression	0		1339277	0					
ANR	1339991	Argument	0		1339277	7					
ANR	1339992	PrimaryExpression	0		1339277	0					
ANR	1339993	WhileStatement	while ( ! feof ( in ) )		1339277	18					
ANR	1339994	Condition	! feof ( in )	1660:15:53644:53652	1339277	0	True				
ANR	1339995	UnaryOperationExpression	! feof ( in )		1339277	0					
ANR	1339996	UnaryOperator	!		1339277	0					
ANR	1339997	CallExpression	feof ( in )		1339277	1					
ANR	1339998	Callee	feof		1339277	0					
ANR	1339999	Identifier	feof		1339277	0					
ANR	1340000	ArgumentList	in		1339277	1					
ANR	1340001	Argument	in		1339277	0					
ANR	1340002	Identifier	in		1339277	0					
ANR	1340003	CompoundStatement		100:26:3784:3784	1339277	1					
ANR	1340004	IfStatement	if ( compaction )		1339277	0					
ANR	1340005	Condition	compaction	1661:16:53673:53682	1339277	0	True				
ANR	1340006	Identifier	compaction		1339277	0					
ANR	1340007	ExpressionStatement	"ulen = pscompact_getcompactedblock ( & psc , ubuf , ROMFS_BLOCKSIZE )"	1662:16:53701:53764	1339277	1	True				
ANR	1340008	AssignmentExpression	"ulen = pscompact_getcompactedblock ( & psc , ubuf , ROMFS_BLOCKSIZE )"		1339277	0		=			
ANR	1340009	Identifier	ulen		1339277	0					
ANR	1340010	CallExpression	"pscompact_getcompactedblock ( & psc , ubuf , ROMFS_BLOCKSIZE )"		1339277	1					
ANR	1340011	Callee	pscompact_getcompactedblock		1339277	0					
ANR	1340012	Identifier	pscompact_getcompactedblock		1339277	0					
ANR	1340013	ArgumentList	& psc		1339277	1					
ANR	1340014	Argument	& psc		1339277	0					
ANR	1340015	UnaryOperationExpression	& psc		1339277	0					
ANR	1340016	UnaryOperator	&		1339277	0					
ANR	1340017	Identifier	psc		1339277	1					
ANR	1340018	Argument	ubuf		1339277	1					
ANR	1340019	Identifier	ubuf		1339277	0					
ANR	1340020	Argument	ROMFS_BLOCKSIZE		1339277	2					
ANR	1340021	Identifier	ROMFS_BLOCKSIZE		1339277	0					
ANR	1340022	ElseStatement	else		1339277	0					
ANR	1340023	ExpressionStatement	"ulen = fread ( ubuf , 1 , ROMFS_BLOCKSIZE , in )"	1664:16:53799:53841	1339277	0	True				
ANR	1340024	AssignmentExpression	"ulen = fread ( ubuf , 1 , ROMFS_BLOCKSIZE , in )"		1339277	0		=			
ANR	1340025	Identifier	ulen		1339277	0					
ANR	1340026	CallExpression	"fread ( ubuf , 1 , ROMFS_BLOCKSIZE , in )"		1339277	1					
ANR	1340027	Callee	fread		1339277	0					
ANR	1340028	Identifier	fread		1339277	0					
ANR	1340029	ArgumentList	ubuf		1339277	1					
ANR	1340030	Argument	ubuf		1339277	0					
ANR	1340031	Identifier	ubuf		1339277	0					
ANR	1340032	Argument	1		1339277	1					
ANR	1340033	PrimaryExpression	1		1339277	0					
ANR	1340034	Argument	ROMFS_BLOCKSIZE		1339277	2					
ANR	1340035	Identifier	ROMFS_BLOCKSIZE		1339277	0					
ANR	1340036	Argument	in		1339277	3					
ANR	1340037	Identifier	in		1339277	0					
ANR	1340038	ExpressionStatement	psc_len += ulen	1665:12:53855:53870	1339277	1	True				
ANR	1340039	AssignmentExpression	psc_len += ulen		1339277	0		+=			
ANR	1340040	Identifier	psc_len		1339277	0					
ANR	1340041	Identifier	ulen		1339277	1					
ANR	1340042	IfStatement	if ( ! ulen )		1339277	2					
ANR	1340043	Condition	! ulen	1666:16:53888:53892	1339277	0	True				
ANR	1340044	UnaryOperationExpression	! ulen		1339277	0					
ANR	1340045	UnaryOperator	!		1339277	0					
ANR	1340046	Identifier	ulen		1339277	1					
ANR	1340047	BreakStatement	break ;	1666:23:53895:53900	1339277	1	True				
ANR	1340048	ExpressionStatement	clen = ROMFS_CBUFSIZE	1667:12:53914:53935	1339277	3	True				
ANR	1340049	AssignmentExpression	clen = ROMFS_CBUFSIZE		1339277	0		=			
ANR	1340050	Identifier	clen		1339277	0					
ANR	1340051	Identifier	ROMFS_CBUFSIZE		1339277	1					
ANR	1340052	IfStatement	if ( compression )		1339277	4					
ANR	1340053	Condition	compression	1668:16:53953:53963	1339277	0	True				
ANR	1340054	Identifier	compression		1339277	0					
ANR	1340055	CompoundStatement		108:29:4095:4095	1339277	1					
ANR	1340056	ExpressionStatement	"ret = compress ( cbuf , & clen , ubuf , ulen )"	1670:16:54025:54064	1339277	0	True				
ANR	1340057	AssignmentExpression	"ret = compress ( cbuf , & clen , ubuf , ulen )"		1339277	0		=			
ANR	1340058	Identifier	ret		1339277	0					
ANR	1340059	CallExpression	"compress ( cbuf , & clen , ubuf , ulen )"		1339277	1					
ANR	1340060	Callee	compress		1339277	0					
ANR	1340061	Identifier	compress		1339277	0					
ANR	1340062	ArgumentList	cbuf		1339277	1					
ANR	1340063	Argument	cbuf		1339277	0					
ANR	1340064	Identifier	cbuf		1339277	0					
ANR	1340065	Argument	& clen		1339277	1					
ANR	1340066	UnaryOperationExpression	& clen		1339277	0					
ANR	1340067	UnaryOperator	&		1339277	0					
ANR	1340068	Identifier	clen		1339277	1					
ANR	1340069	Argument	ubuf		1339277	2					
ANR	1340070	Identifier	ubuf		1339277	0					
ANR	1340071	Argument	ulen		1339277	3					
ANR	1340072	Identifier	ulen		1339277	0					
ANR	1340073	IfStatement	if ( ret != Z_OK )		1339277	1					
ANR	1340074	Condition	ret != Z_OK	1671:20:54086:54096	1339277	0	True				
ANR	1340075	EqualityExpression	ret != Z_OK		1339277	0		!=			
ANR	1340076	Identifier	ret		1339277	0					
ANR	1340077	Identifier	Z_OK		1339277	1					
ANR	1340078	CompoundStatement		111:33:4228:4228	1339277	1					
ANR	1340079	ExpressionStatement	"printf ( ""error compressing data block!\\n"" )"	1672:20:54121:54162	1339277	0	True				
ANR	1340080	CallExpression	"printf ( ""error compressing data block!\\n"" )"		1339277	0					
ANR	1340081	Callee	printf		1339277	0					
ANR	1340082	Identifier	printf		1339277	0					
ANR	1340083	ArgumentList	"""error compressing data block!\\n"""		1339277	1					
ANR	1340084	Argument	"""error compressing data block!\\n"""		1339277	0					
ANR	1340085	PrimaryExpression	"""error compressing data block!\\n"""		1339277	0					
ANR	1340086	ExpressionStatement	exit ( 1 )	1673:20:54184:54191	1339277	1	True				
ANR	1340087	CallExpression	exit ( 1 )		1339277	0					
ANR	1340088	Callee	exit		1339277	0					
ANR	1340089	Identifier	exit		1339277	0					
ANR	1340090	ArgumentList	1		1339277	1					
ANR	1340091	Argument	1		1339277	0					
ANR	1340092	PrimaryExpression	1		1339277	0					
ANR	1340093	ElseStatement	else		1339277	0					
ANR	1340094	CompoundStatement		115:19:4359:4359	1339277	0					
ANR	1340095	ExpressionStatement	"memcpy ( cbuf , ubuf , ulen )"	1676:16:54248:54272	1339277	0	True				
ANR	1340096	CallExpression	"memcpy ( cbuf , ubuf , ulen )"		1339277	0					
ANR	1340097	Callee	memcpy		1339277	0					
ANR	1340098	Identifier	memcpy		1339277	0					
ANR	1340099	ArgumentList	cbuf		1339277	1					
ANR	1340100	Argument	cbuf		1339277	0					
ANR	1340101	Identifier	cbuf		1339277	0					
ANR	1340102	Argument	ubuf		1339277	1					
ANR	1340103	Identifier	ubuf		1339277	0					
ANR	1340104	Argument	ulen		1339277	2					
ANR	1340105	Identifier	ulen		1339277	0					
ANR	1340106	ExpressionStatement	clen = ulen	1677:16:54290:54301	1339277	1	True				
ANR	1340107	AssignmentExpression	clen = ulen		1339277	0		=			
ANR	1340108	Identifier	clen		1339277	0					
ANR	1340109	Identifier	ulen		1339277	1					
ANR	1340110	ExpressionStatement	node -> data_lengths [ block ] = clen	1679:12:54329:54361	1339277	5	True				
ANR	1340111	AssignmentExpression	node -> data_lengths [ block ] = clen		1339277	0		=			
ANR	1340112	ArrayIndexing	node -> data_lengths [ block ]		1339277	0					
ANR	1340113	PtrMemberAccess	node -> data_lengths		1339277	0					
ANR	1340114	Identifier	node		1339277	0					
ANR	1340115	Identifier	data_lengths		1339277	1					
ANR	1340116	Identifier	block		1339277	1					
ANR	1340117	Identifier	clen		1339277	1					
ANR	1340118	ExpressionStatement	node -> data [ block ] = malloc ( clen )	1680:12:54375:54407	1339277	6	True				
ANR	1340119	AssignmentExpression	node -> data [ block ] = malloc ( clen )		1339277	0		=			
ANR	1340120	ArrayIndexing	node -> data [ block ]		1339277	0					
ANR	1340121	PtrMemberAccess	node -> data		1339277	0					
ANR	1340122	Identifier	node		1339277	0					
ANR	1340123	Identifier	data		1339277	1					
ANR	1340124	Identifier	block		1339277	1					
ANR	1340125	CallExpression	malloc ( clen )		1339277	1					
ANR	1340126	Callee	malloc		1339277	0					
ANR	1340127	Identifier	malloc		1339277	0					
ANR	1340128	ArgumentList	clen		1339277	1					
ANR	1340129	Argument	clen		1339277	0					
ANR	1340130	Identifier	clen		1339277	0					
ANR	1340131	ExpressionStatement	"memcpy ( node -> data [ block ] , cbuf , clen )"	1681:12:54421:54458	1339277	7	True				
ANR	1340132	CallExpression	"memcpy ( node -> data [ block ] , cbuf , clen )"		1339277	0					
ANR	1340133	Callee	memcpy		1339277	0					
ANR	1340134	Identifier	memcpy		1339277	0					
ANR	1340135	ArgumentList	node -> data [ block ]		1339277	1					
ANR	1340136	Argument	node -> data [ block ]		1339277	0					
ANR	1340137	ArrayIndexing	node -> data [ block ]		1339277	0					
ANR	1340138	PtrMemberAccess	node -> data		1339277	0					
ANR	1340139	Identifier	node		1339277	0					
ANR	1340140	Identifier	data		1339277	1					
ANR	1340141	Identifier	block		1339277	1					
ANR	1340142	Argument	cbuf		1339277	1					
ANR	1340143	Identifier	cbuf		1339277	0					
ANR	1340144	Argument	clen		1339277	2					
ANR	1340145	Identifier	clen		1339277	0					
ANR	1340146	ExpressionStatement	block ++	1682:12:54472:54479	1339277	8	True				
ANR	1340147	PostIncDecOperationExpression	block ++		1339277	0					
ANR	1340148	Identifier	block		1339277	0					
ANR	1340149	IncDec	++		1339277	1					
ANR	1340150	ExpressionStatement	fclose ( in )	1684:8:54499:54509	1339277	19	True				
ANR	1340151	CallExpression	fclose ( in )		1339277	0					
ANR	1340152	Callee	fclose		1339277	0					
ANR	1340153	Identifier	fclose		1339277	0					
ANR	1340154	ArgumentList	in		1339277	1					
ANR	1340155	Argument	in		1339277	0					
ANR	1340156	Identifier	in		1339277	0					
ANR	1340157	IfStatement	if ( compaction )		1339277	20					
ANR	1340158	Condition	compaction	1685:12:54523:54532	1339277	0	True				
ANR	1340159	Identifier	compaction		1339277	0					
ANR	1340160	CompoundStatement		125:24:4664:4664	1339277	1					
ANR	1340161	ExpressionStatement	pscompact_end ( & psc )	1688:12:54684:54703	1339277	0	True				
ANR	1340162	CallExpression	pscompact_end ( & psc )		1339277	0					
ANR	1340163	Callee	pscompact_end		1339277	0					
ANR	1340164	Identifier	pscompact_end		1339277	0					
ANR	1340165	ArgumentList	& psc		1339277	1					
ANR	1340166	Argument	& psc		1339277	0					
ANR	1340167	UnaryOperationExpression	& psc		1339277	0					
ANR	1340168	UnaryOperator	&		1339277	0					
ANR	1340169	Identifier	psc		1339277	1					
ANR	1340170	ExpressionStatement	node -> length = psc_len	1689:12:54717:54739	1339277	1	True				
ANR	1340171	AssignmentExpression	node -> length = psc_len		1339277	0		=			
ANR	1340172	PtrMemberAccess	node -> length		1339277	0					
ANR	1340173	Identifier	node		1339277	0					
ANR	1340174	Identifier	length		1339277	1					
ANR	1340175	Identifier	psc_len		1339277	1					
ANR	1340176	ExpressionStatement	"inode_write ( out , node , compression , * inode_count , totlen )"	1692:8:54802:54859	1339277	21	True				
ANR	1340177	CallExpression	"inode_write ( out , node , compression , * inode_count , totlen )"		1339277	0					
ANR	1340178	Callee	inode_write		1339277	0					
ANR	1340179	Identifier	inode_write		1339277	0					
ANR	1340180	ArgumentList	out		1339277	1					
ANR	1340181	Argument	out		1339277	0					
ANR	1340182	Identifier	out		1339277	0					
ANR	1340183	Argument	node		1339277	1					
ANR	1340184	Identifier	node		1339277	0					
ANR	1340185	Argument	compression		1339277	2					
ANR	1340186	Identifier	compression		1339277	0					
ANR	1340187	Argument	* inode_count		1339277	3					
ANR	1340188	UnaryOperationExpression	* inode_count		1339277	0					
ANR	1340189	UnaryOperator	*		1339277	0					
ANR	1340190	Identifier	inode_count		1339277	1					
ANR	1340191	Argument	totlen		1339277	4					
ANR	1340192	Identifier	totlen		1339277	0					
ANR	1340193	ExpressionStatement	inode_clear ( node )	1694:8:54892:54909	1339277	22	True				
ANR	1340194	CallExpression	inode_clear ( node )		1339277	0					
ANR	1340195	Callee	inode_clear		1339277	0					
ANR	1340196	Identifier	inode_clear		1339277	0					
ANR	1340197	ArgumentList	node		1339277	1					
ANR	1340198	Argument	node		1339277	0					
ANR	1340199	Identifier	node		1339277	0					
ANR	1340200	ExpressionStatement	free ( node )	1695:8:54919:54929	1339277	23	True				
ANR	1340201	CallExpression	free ( node )		1339277	0					
ANR	1340202	Callee	free		1339277	0					
ANR	1340203	Identifier	free		1339277	0					
ANR	1340204	ArgumentList	node		1339277	1					
ANR	1340205	Argument	node		1339277	0					
ANR	1340206	Identifier	node		1339277	0					
ANR	1340207	ExpressionStatement	( * inode_count ) ++	1696:8:54939:54955	1339277	24	True				
ANR	1340208	PostIncDecOperationExpression	( * inode_count ) ++		1339277	0					
ANR	1340209	UnaryOperationExpression	* inode_count		1339277	0					
ANR	1340210	UnaryOperator	*		1339277	0					
ANR	1340211	Identifier	inode_count		1339277	1					
ANR	1340212	IncDec	++		1339277	1					
ANR	1340213	ExpressionStatement	free ( fpath )	1697:8:54965:54976	1339277	25	True				
ANR	1340214	CallExpression	free ( fpath )		1339277	0					
ANR	1340215	Callee	free		1339277	0					
ANR	1340216	Identifier	free		1339277	0					
ANR	1340217	ArgumentList	fpath		1339277	1					
ANR	1340218	Argument	fpath		1339277	0					
ANR	1340219	Identifier	fpath		1339277	0					
ANR	1340220	ExpressionStatement	free ( cbuf )	1699:4:54988:54998	1339277	28	True				
ANR	1340221	CallExpression	free ( cbuf )		1339277	0					
ANR	1340222	Callee	free		1339277	0					
ANR	1340223	Identifier	free		1339277	0					
ANR	1340224	ArgumentList	cbuf		1339277	1					
ANR	1340225	Argument	cbuf		1339277	0					
ANR	1340226	Identifier	cbuf		1339277	0					
ANR	1340227	ExpressionStatement	free ( ubuf )	1700:4:55004:55014	1339277	29	True				
ANR	1340228	CallExpression	free ( ubuf )		1339277	0					
ANR	1340229	Callee	free		1339277	0					
ANR	1340230	Identifier	free		1339277	0					
ANR	1340231	ArgumentList	ubuf		1339277	1					
ANR	1340232	Argument	ubuf		1339277	0					
ANR	1340233	Identifier	ubuf		1339277	0					
ANR	1340234	ExpressionStatement	free ( found_path )	1701:4:55020:55036	1339277	30	True				
ANR	1340235	CallExpression	free ( found_path )		1339277	0					
ANR	1340236	Callee	free		1339277	0					
ANR	1340237	Identifier	free		1339277	0					
ANR	1340238	ArgumentList	found_path		1339277	1					
ANR	1340239	Argument	found_path		1339277	0					
ANR	1340240	Identifier	found_path		1339277	0					
ANR	1340241	ExpressionStatement	free ( foundfiles )	1702:4:55042:55058	1339277	31	True				
ANR	1340242	CallExpression	free ( foundfiles )		1339277	0					
ANR	1340243	Callee	free		1339277	0					
ANR	1340244	Identifier	free		1339277	0					
ANR	1340245	ArgumentList	foundfiles		1339277	1					
ANR	1340246	Argument	foundfiles		1339277	0					
ANR	1340247	Identifier	foundfiles		1339277	0					
ANR	1340248	ExpressionStatement	free ( prefixed_path )	1703:4:55064:55083	1339277	32	True				
ANR	1340249	CallExpression	free ( prefixed_path )		1339277	0					
ANR	1340250	Callee	free		1339277	0					
ANR	1340251	Identifier	free		1339277	0					
ANR	1340252	ArgumentList	prefixed_path		1339277	1					
ANR	1340253	Argument	prefixed_path		1339277	0					
ANR	1340254	Identifier	prefixed_path		1339277	0					
ANR	1340255	ExpressionStatement	free ( rom_filename )	1704:4:55089:55107	1339277	33	True				
ANR	1340256	CallExpression	free ( rom_filename )		1339277	0					
ANR	1340257	Callee	free		1339277	0					
ANR	1340258	Identifier	free		1339277	0					
ANR	1340259	ArgumentList	rom_filename		1339277	1					
ANR	1340260	Argument	rom_filename		1339277	0					
ANR	1340261	Identifier	rom_filename		1339277	0					
ANR	1340262	IfStatement	if ( save_count == * inode_count )		1339277	34					
ANR	1340263	Condition	save_count == * inode_count	1705:8:55117:55142	1339277	0	True				
ANR	1340264	EqualityExpression	save_count == * inode_count		1339277	0		==			
ANR	1340265	Identifier	save_count		1339277	0					
ANR	1340266	UnaryOperationExpression	* inode_count		1339277	1					
ANR	1340267	UnaryOperator	*		1339277	0					
ANR	1340268	Identifier	inode_count		1339277	1					
ANR	1340269	CompoundStatement		145:36:5274:5274	1339277	1					
ANR	1340270	ExpressionStatement	"printf ( ""warning: no files found from path '%s%s'\\n"" , os_prefix , path )"	1706:8:55155:55224	1339277	0	True				
ANR	1340271	CallExpression	"printf ( ""warning: no files found from path '%s%s'\\n"" , os_prefix , path )"		1339277	0					
ANR	1340272	Callee	printf		1339277	0					
ANR	1340273	Identifier	printf		1339277	0					
ANR	1340274	ArgumentList	"""warning: no files found from path '%s%s'\\n"""		1339277	1					
ANR	1340275	Argument	"""warning: no files found from path '%s%s'\\n"""		1339277	0					
ANR	1340276	PrimaryExpression	"""warning: no files found from path '%s%s'\\n"""		1339277	0					
ANR	1340277	Argument	os_prefix		1339277	1					
ANR	1340278	Identifier	os_prefix		1339277	0					
ANR	1340279	Argument	path		1339277	2					
ANR	1340280	Identifier	path		1339277	0					
ANR	1340281	ReturnType	void		1339277	1					
ANR	1340282	Identifier	process_path		1339277	2					
ANR	1340283	ParameterList	"char * path , const char * os_prefix , const char * rom_prefix , Xlist_element * Xlist_head , int compression , int compaction , int * inode_count , int * totlen , FILE * out"		1339277	3					
ANR	1340284	Parameter	char * path	1558:18:49673:49682	1339277	0	True				
ANR	1340285	ParameterType	char *		1339277	0					
ANR	1340286	Identifier	path		1339277	1					
ANR	1340287	Parameter	const char * os_prefix	1558:30:49685:49705	1339277	1	True				
ANR	1340288	ParameterType	const char *		1339277	0					
ANR	1340289	Identifier	os_prefix		1339277	1					
ANR	1340290	Parameter	const char * rom_prefix	1558:53:49708:49729	1339277	2	True				
ANR	1340291	ParameterType	const char *		1339277	0					
ANR	1340292	Identifier	rom_prefix		1339277	1					
ANR	1340293	Parameter	Xlist_element * Xlist_head	1559:18:49750:49774	1339277	3	True				
ANR	1340294	ParameterType	Xlist_element *		1339277	0					
ANR	1340295	Identifier	Xlist_head		1339277	1					
ANR	1340296	Parameter	int compression	1559:45:49777:49791	1339277	4	True				
ANR	1340297	ParameterType	int		1339277	0					
ANR	1340298	Identifier	compression		1339277	1					
ANR	1340299	Parameter	int compaction	1560:18:49812:49825	1339277	5	True				
ANR	1340300	ParameterType	int		1339277	0					
ANR	1340301	Identifier	compaction		1339277	1					
ANR	1340302	Parameter	int * inode_count	1560:34:49828:49843	1339277	6	True				
ANR	1340303	ParameterType	int *		1339277	0					
ANR	1340304	Identifier	inode_count		1339277	1					
ANR	1340305	Parameter	int * totlen	1560:52:49846:49856	1339277	7	True				
ANR	1340306	ParameterType	int *		1339277	0					
ANR	1340307	Identifier	totlen		1339277	1					
ANR	1340308	Parameter	FILE * out	1560:65:49859:49867	1339277	8	True				
ANR	1340309	ParameterType	FILE *		1339277	0					
ANR	1340310	Identifier	out		1339277	1					
ANR	1340311	CFGEntryNode	ENTRY		1339277		True				
ANR	1340312	CFGExitNode	EXIT		1339277		True				
ANR	1340313	Symbol	prefixed_path		1339277						
ANR	1340314	Symbol	psc_len		1339277						
ANR	1340315	Symbol	save_count		1339277						
ANR	1340316	Symbol	PATH_STR_LEN		1339277						
ANR	1340317	Symbol	* numfiles		1339277						
ANR	1340318	Symbol	namelen		1339277						
ANR	1340319	Symbol	realloc		1339277						
ANR	1340320	Symbol	foundfiles		1339277						
ANR	1340321	Symbol	* inode_count		1339277						
ANR	1340322	Symbol	excluded		1339277						
ANR	1340323	Symbol	gp_enumerate_files_init		1339277						
ANR	1340324	Symbol	path		1339277						
ANR	1340325	Symbol	strlen		1339277						
ANR	1340326	Symbol	node -> data		1339277						
ANR	1340327	Symbol	pscompact_getcompactedblock		1339277						
ANR	1340328	Symbol	Xlist_scan -> path		1339277						
ANR	1340329	Symbol	os_prefix		1339277						
ANR	1340330	Symbol	block		1339277						
ANR	1340331	Symbol	* node		1339277						
ANR	1340332	Symbol	found_path		1339277						
ANR	1340333	Symbol	pfenum		1339277						
ANR	1340334	Symbol	cmpstringp		1339277						
ANR	1340335	Symbol	cbuf		1339277						
ANR	1340336	Symbol	* foundfiles		1339277						
ANR	1340337	Symbol	* node -> data		1339277						
ANR	1340338	Symbol	ret		1339277						
ANR	1340339	Symbol	strcmp		1339277						
ANR	1340340	Symbol	NULL		1339277						
ANR	1340341	Symbol	rom_prefix		1339277						
ANR	1340342	Symbol	in		1339277						
ANR	1340343	Symbol	Xlist_scan -> next		1339277						
ANR	1340344	Symbol	compress		1339277						
ANR	1340345	Symbol	* rom_filename		1339277						
ANR	1340346	Symbol	& fgetc		1339277						
ANR	1340347	Symbol	inode_count		1339277						
ANR	1340348	Symbol	fread		1339277						
ANR	1340349	Symbol	gp_enumerate_files_next		1339277						
ANR	1340350	Symbol	node		1339277						
ANR	1340351	Symbol	* * node		1339277						
ANR	1340352	Symbol	rom_filename		1339277						
ANR	1340353	Symbol	* node -> data_lengths		1339277						
ANR	1340354	Symbol	ulen		1339277						
ANR	1340355	Symbol	* namelen		1339277						
ANR	1340356	Symbol	& ungetc		1339277						
ANR	1340357	Symbol	compression		1339277						
ANR	1340358	Symbol	psc		1339277						
ANR	1340359	Symbol	node -> disc_length		1339277						
ANR	1340360	Symbol	ftell		1339277						
ANR	1340361	Symbol	& clen		1339277						
ANR	1340362	Symbol	Xlist_head		1339277						
ANR	1340363	Symbol	calloc		1339277						
ANR	1340364	Symbol	Z_OK		1339277						
ANR	1340365	Symbol	ROMFS_CBUFSIZE		1339277						
ANR	1340366	Symbol	out		1339277						
ANR	1340367	Symbol	totlen		1339277						
ANR	1340368	Symbol	node -> length		1339277						
ANR	1340369	Symbol	compaction		1339277						
ANR	1340370	Symbol	fpath		1339277						
ANR	1340371	Symbol	& feof		1339277						
ANR	1340372	Symbol	& minimal_memory		1339277						
ANR	1340373	Symbol	* Xlist_scan		1339277						
ANR	1340374	Symbol	malloc		1339277						
ANR	1340375	Symbol	fopen		1339277						
ANR	1340376	Symbol	& psc		1339277						
ANR	1340377	Symbol	temp		1339277						
ANR	1340378	Symbol	blocks		1339277						
ANR	1340379	Symbol	ubuf		1339277						
ANR	1340380	Symbol	i		1339277						
ANR	1340381	Symbol	* found_path		1339277						
ANR	1340382	Symbol	Xlist_scan		1339277						
ANR	1340383	Symbol	ROMFS_BLOCKSIZE		1339277						
ANR	1340384	Symbol	SEEK_END		1339277						
ANR	1340385	Symbol	* block		1339277						
ANR	1340386	Symbol	* i		1339277						
ANR	1340387	Symbol	node -> name		1339277						
ANR	1340388	Symbol	node -> data_lengths		1339277						
ANR	1340389	Symbol	* strlen		1339277						
ANR	1340390	Symbol	numfiles		1339277						
ANR	1340391	Symbol	feof		1339277						
ANR	1340392	Symbol	strdup		1339277						
ANR	1340393	Symbol	clen		1339277						
ANR	1340394	DeclStmt									
ANR	1340395	Decl							void	"void ( const char * os_prefix , const char * inname , FILE * in , FILE * config )"	merge_to_ps
ANR	1340396	DeclStmt									
ANR	1340397	Decl							int	int ( char * )	write_init
ANR	1340398	DeclStmt									
ANR	1340399	Decl							bool	"bool ( FILE * in , char * str , int len )"	rl
ANR	1340400	DeclStmt									
ANR	1340401	Decl							void	"void ( const byte * str , int len )"	wsc
ANR	1340402	DeclStmt									
ANR	1340403	Decl							void	"void ( const byte * str , int len )"	ws
ANR	1340404	DeclStmt									
ANR	1340405	Decl							void	void ( const char * str )	wl
ANR	1340406	DeclStmt									
ANR	1340407	Decl							char	"char * ( char * line , bool intact )"	doit
ANR	1340408	DeclStmt									
ANR	1340409	Decl							void	void ( FILE * in )	hex_string_to_binary
ANR	1340410	DeclStmt									
ANR	1340411	Decl							void	void ( char * buf )	flush_buf
ANR	1340412	DeclStmt									
ANR	1340413	Decl							void	"void ( const char * os_prefix , const char * inname , FILE * in , FILE * config , bool intact )"	mergefile
ANR	1340414	DeclStmt									
ANR	1340415	Decl							void	void ( int len )	flush_line_buf
ANR	1340416	DeclStmt									
ANR	1340417	Decl							struct in_block_s	struct in_block_s	in_block_t
ANR	1340418	ClassDef	in_block_s	1742:0:56454:56544							
ANR	1340419	DeclStmt									
ANR	1340420	Decl							struct in_block_s	struct in_block_s *	next
ANR	1340421	DeclStmt									
ANR	1340422	Decl							unsigned char	unsigned char [ ROMFS_BLOCKSIZE ]	data
ANR	1340423	DeclStmt									
ANR	1340424	Decl							char	char [ LINE_SIZE * 2 ]	linebuf
ANR	1340425	DeclStmt									
ANR	1340426	Decl							in_block_t	in_block_t *	in_block_head
ANR	1340427	DeclStmt									
ANR	1340428	Decl							in_block_t	in_block_t *	in_block_tail
ANR	1340429	DeclStmt									
ANR	1340430	Decl							unsigned char	unsigned char *	curr_block_p
ANR	1340431	Decl							unsigned char	unsigned char *	curr_block_end
ANR	1340432	ClassDef	<unnamed>	1755:8:56811:56884							
ANR	1340433	DeclStmt									
ANR	1340434	Decl							in_block_t	in_block_t *	block
ANR	1340435	DeclStmt									
ANR	1340436	Decl							int	int	pos
ANR	1340437	DeclStmt									
ANR	1340438	Decl							int	int	eof
ANR	1340439	DeclStmt									
ANR	1340440	Decl									in_block_file
ANR	1340441	Function	ib_getc	1761:0:56887:57223							
ANR	1340442	FunctionDef	ib_getc (in_block_file * ibf)		1340441	0					
ANR	1340443	CompoundStatement		1761:39:56926:57223	1340441	0					
ANR	1340444	IfStatement	if ( ( ibf -> block == in_block_tail ) && ( ibf -> pos == curr_block_p - in_block_tail -> data ) )		1340441	0					
ANR	1340445	Condition	( ibf -> block == in_block_tail ) && ( ibf -> pos == curr_block_p - in_block_tail -> data )	1762:8:56936:57024	1340441	0	True				
ANR	1340446	AndExpression	( ibf -> block == in_block_tail ) && ( ibf -> pos == curr_block_p - in_block_tail -> data )		1340441	0		&&			
ANR	1340447	EqualityExpression	ibf -> block == in_block_tail		1340441	0		==			
ANR	1340448	PtrMemberAccess	ibf -> block		1340441	0					
ANR	1340449	Identifier	ibf		1340441	0					
ANR	1340450	Identifier	block		1340441	1					
ANR	1340451	Identifier	in_block_tail		1340441	1					
ANR	1340452	EqualityExpression	ibf -> pos == curr_block_p - in_block_tail -> data		1340441	1		==			
ANR	1340453	PtrMemberAccess	ibf -> pos		1340441	0					
ANR	1340454	Identifier	ibf		1340441	0					
ANR	1340455	Identifier	pos		1340441	1					
ANR	1340456	AdditiveExpression	curr_block_p - in_block_tail -> data		1340441	1		-			
ANR	1340457	Identifier	curr_block_p		1340441	0					
ANR	1340458	PtrMemberAccess	in_block_tail -> data		1340441	1					
ANR	1340459	Identifier	in_block_tail		1340441	0					
ANR	1340460	Identifier	data		1340441	1					
ANR	1340461	CompoundStatement		3:58:100:100	1340441	1					
ANR	1340462	ExpressionStatement	ibf -> eof = 1	1764:8:57037:57049	1340441	0	True				
ANR	1340463	AssignmentExpression	ibf -> eof = 1		1340441	0		=			
ANR	1340464	PtrMemberAccess	ibf -> eof		1340441	0					
ANR	1340465	Identifier	ibf		1340441	0					
ANR	1340466	Identifier	eof		1340441	1					
ANR	1340467	PrimaryExpression	1		1340441	1					
ANR	1340468	ReturnStatement	return - 1 ;	1765:8:57059:57068	1340441	1	True				
ANR	1340469	UnaryOperationExpression	- 1		1340441	0					
ANR	1340470	UnaryOperator	-		1340441	0					
ANR	1340471	PrimaryExpression	1		1340441	1					
ANR	1340472	IfStatement	if ( ibf -> pos == ROMFS_BLOCKSIZE )		1340441	1					
ANR	1340473	Condition	ibf -> pos == ROMFS_BLOCKSIZE	1767:8:57084:57110	1340441	0	True				
ANR	1340474	EqualityExpression	ibf -> pos == ROMFS_BLOCKSIZE		1340441	0		==			
ANR	1340475	PtrMemberAccess	ibf -> pos		1340441	0					
ANR	1340476	Identifier	ibf		1340441	0					
ANR	1340477	Identifier	pos		1340441	1					
ANR	1340478	Identifier	ROMFS_BLOCKSIZE		1340441	1					
ANR	1340479	CompoundStatement		7:37:186:186	1340441	1					
ANR	1340480	ExpressionStatement	ibf -> block = ibf -> block -> next	1768:8:57123:57152	1340441	0	True				
ANR	1340481	AssignmentExpression	ibf -> block = ibf -> block -> next		1340441	0		=			
ANR	1340482	PtrMemberAccess	ibf -> block		1340441	0					
ANR	1340483	Identifier	ibf		1340441	0					
ANR	1340484	Identifier	block		1340441	1					
ANR	1340485	PtrMemberAccess	ibf -> block -> next		1340441	1					
ANR	1340486	PtrMemberAccess	ibf -> block		1340441	0					
ANR	1340487	Identifier	ibf		1340441	0					
ANR	1340488	Identifier	block		1340441	1					
ANR	1340489	Identifier	next		1340441	1					
ANR	1340490	ExpressionStatement	ibf -> pos = 0	1769:8:57162:57174	1340441	1	True				
ANR	1340491	AssignmentExpression	ibf -> pos = 0		1340441	0		=			
ANR	1340492	PtrMemberAccess	ibf -> pos		1340441	0					
ANR	1340493	Identifier	ibf		1340441	0					
ANR	1340494	Identifier	pos		1340441	1					
ANR	1340495	PrimaryExpression	0		1340441	1					
ANR	1340496	ReturnStatement	return ibf -> block -> data [ ibf -> pos ++ ] ;	1771:4:57186:57221	1340441	2	True				
ANR	1340497	ArrayIndexing	ibf -> block -> data [ ibf -> pos ++ ]		1340441	0					
ANR	1340498	PtrMemberAccess	ibf -> block -> data		1340441	0					
ANR	1340499	PtrMemberAccess	ibf -> block		1340441	0					
ANR	1340500	Identifier	ibf		1340441	0					
ANR	1340501	Identifier	block		1340441	1					
ANR	1340502	Identifier	data		1340441	1					
ANR	1340503	PostIncDecOperationExpression	ibf -> pos ++		1340441	1					
ANR	1340504	PtrMemberAccess	ibf -> pos		1340441	0					
ANR	1340505	Identifier	ibf		1340441	0					
ANR	1340506	Identifier	pos		1340441	1					
ANR	1340507	IncDec	++		1340441	1					
ANR	1340508	ReturnType	static int		1340441	1					
ANR	1340509	Identifier	ib_getc		1340441	2					
ANR	1340510	ParameterList	in_block_file * ibf		1340441	3					
ANR	1340511	Parameter	in_block_file * ibf	1761:19:56906:56923	1340441	0	True				
ANR	1340512	ParameterType	in_block_file *		1340441	0					
ANR	1340513	Identifier	ibf		1340441	1					
ANR	1340514	CFGEntryNode	ENTRY		1340441		True				
ANR	1340515	CFGExitNode	EXIT		1340441		True				
ANR	1340516	Symbol	* * ibf		1340441						
ANR	1340517	Symbol	in_block_tail -> data		1340441						
ANR	1340518	Symbol	* ibf -> block -> data		1340441						
ANR	1340519	Symbol	* ibf		1340441						
ANR	1340520	Symbol	* * * ibf		1340441						
ANR	1340521	Symbol	ibf		1340441						
ANR	1340522	Symbol	ibf -> pos		1340441						
ANR	1340523	Symbol	ibf -> block -> next		1340441						
ANR	1340524	Symbol	ROMFS_BLOCKSIZE		1340441						
ANR	1340525	Symbol	* ibf -> block		1340441						
ANR	1340526	Symbol	ibf -> block -> data		1340441						
ANR	1340527	Symbol	ibf -> block		1340441						
ANR	1340528	Symbol	ibf -> eof		1340441						
ANR	1340529	Symbol	in_block_tail		1340441						
ANR	1340530	Symbol	* in_block_tail		1340441						
ANR	1340531	Symbol	* * ibf -> block		1340441						
ANR	1340532	Symbol	curr_block_p		1340441						
ANR	1340533	Function	ib_ungetc	1774:0:57226:57293							
ANR	1340534	FunctionDef	"ib_ungetc (int c , in_block_file * ibf)"		1340533	0					
ANR	1340535	CompoundStatement		1775:0:57275:57293	1340533	0					
ANR	1340536	ExpressionStatement	ibf -> pos --	1776:4:57281:57291	1340533	0	True				
ANR	1340537	PostIncDecOperationExpression	ibf -> pos --		1340533	0					
ANR	1340538	PtrMemberAccess	ibf -> pos		1340533	0					
ANR	1340539	Identifier	ibf		1340533	0					
ANR	1340540	Identifier	pos		1340533	1					
ANR	1340541	IncDec	--		1340533	1					
ANR	1340542	ReturnType	static void		1340533	1					
ANR	1340543	Identifier	ib_ungetc		1340533	2					
ANR	1340544	ParameterList	"int c , in_block_file * ibf"		1340533	3					
ANR	1340545	Parameter	int c	1774:22:57248:57252	1340533	0	True				
ANR	1340546	ParameterType	int		1340533	0					
ANR	1340547	Identifier	c		1340533	1					
ANR	1340548	Parameter	in_block_file * ibf	1774:29:57255:57272	1340533	1	True				
ANR	1340549	ParameterType	in_block_file *		1340533	0					
ANR	1340550	Identifier	ibf		1340533	1					
ANR	1340551	CFGEntryNode	ENTRY		1340533		True				
ANR	1340552	CFGExitNode	EXIT		1340533		True				
ANR	1340553	Symbol	c		1340533						
ANR	1340554	Symbol	* ibf		1340533						
ANR	1340555	Symbol	ibf		1340533						
ANR	1340556	Symbol	ibf -> pos		1340533						
ANR	1340557	Function	ib_feof	1779:0:57296:57358							
ANR	1340558	FunctionDef	ib_feof (in_block_file * ibf)		1340557	0					
ANR	1340559	CompoundStatement		1780:0:57335:57358	1340557	0					
ANR	1340560	ReturnStatement	return ibf -> eof ;	1781:4:57341:57356	1340557	0	True				
ANR	1340561	PtrMemberAccess	ibf -> eof		1340557	0					
ANR	1340562	Identifier	ibf		1340557	0					
ANR	1340563	Identifier	eof		1340557	1					
ANR	1340564	ReturnType	static int		1340557	1					
ANR	1340565	Identifier	ib_feof		1340557	2					
ANR	1340566	ParameterList	in_block_file * ibf		1340557	3					
ANR	1340567	Parameter	in_block_file * ibf	1779:19:57315:57332	1340557	0	True				
ANR	1340568	ParameterType	in_block_file *		1340557	0					
ANR	1340569	Identifier	ibf		1340557	1					
ANR	1340570	CFGEntryNode	ENTRY		1340557		True				
ANR	1340571	CFGExitNode	EXIT		1340557		True				
ANR	1340572	Symbol	ibf -> eof		1340557						
ANR	1340573	Symbol	* ibf		1340557						
ANR	1340574	Symbol	ibf		1340557						
ANR	1340575	Function	process_initfile	1784:0:57361:61652							
ANR	1340576	FunctionDef	"process_initfile (char * initfile , char * gconfig_h , const char * os_prefix , const char * rom_prefix , int compression , int * inode_count , int * totlen , FILE * out)"		1340575	0					
ANR	1340577	CompoundStatement		1788:0:57555:61652	1340575	0					
ANR	1340578	IdentifierDeclStatement	"int ret , block , blocks ;"	1789:4:57561:57583	1340575	0	True				
ANR	1340579	IdentifierDecl	ret		1340575	0					
ANR	1340580	IdentifierDeclType	int		1340575	0					
ANR	1340581	Identifier	ret		1340575	1					
ANR	1340582	IdentifierDecl	block		1340575	1					
ANR	1340583	IdentifierDeclType	int		1340575	0					
ANR	1340584	Identifier	block		1340575	1					
ANR	1340585	IdentifierDecl	blocks		1340575	2					
ANR	1340586	IdentifierDeclType	int		1340575	0					
ANR	1340587	Identifier	blocks		1340575	1					
ANR	1340588	IdentifierDeclStatement	romfs_inode * node = NULL ;	1790:4:57589:57613	1340575	1	True				
ANR	1340589	IdentifierDecl	* node = NULL		1340575	0					
ANR	1340590	IdentifierDeclType	romfs_inode *		1340575	0					
ANR	1340591	Identifier	node		1340575	1					
ANR	1340592	AssignmentExpression	* node = NULL		1340575	2		=			
ANR	1340593	Identifier	NULL		1340575	0					
ANR	1340594	Identifier	NULL		1340575	1					
ANR	1340595	IdentifierDeclStatement	"unsigned char * ubuf = NULL , * cbuf = NULL ;"	1791:4:57619:57659	1340575	2	True				
ANR	1340596	IdentifierDecl	* ubuf = NULL		1340575	0					
ANR	1340597	IdentifierDeclType	unsigned char *		1340575	0					
ANR	1340598	Identifier	ubuf		1340575	1					
ANR	1340599	AssignmentExpression	* ubuf = NULL		1340575	2		=			
ANR	1340600	Identifier	NULL		1340575	0					
ANR	1340601	Identifier	NULL		1340575	1					
ANR	1340602	IdentifierDecl	* cbuf = NULL		1340575	1					
ANR	1340603	IdentifierDeclType	unsigned char *		1340575	0					
ANR	1340604	Identifier	cbuf		1340575	1					
ANR	1340605	AssignmentExpression	* cbuf = NULL		1340575	2		=			
ANR	1340606	Identifier	NULL		1340575	0					
ANR	1340607	Identifier	NULL		1340575	1					
ANR	1340608	IdentifierDeclStatement	"char * prefixed_path = NULL , * rom_filename = NULL ;"	1792:4:57665:57713	1340575	3	True				
ANR	1340609	IdentifierDecl	* prefixed_path = NULL		1340575	0					
ANR	1340610	IdentifierDeclType	char *		1340575	0					
ANR	1340611	Identifier	prefixed_path		1340575	1					
ANR	1340612	AssignmentExpression	* prefixed_path = NULL		1340575	2		=			
ANR	1340613	Identifier	NULL		1340575	0					
ANR	1340614	Identifier	NULL		1340575	1					
ANR	1340615	IdentifierDecl	* rom_filename = NULL		1340575	1					
ANR	1340616	IdentifierDeclType	char *		1340575	0					
ANR	1340617	Identifier	rom_filename		1340575	1					
ANR	1340618	AssignmentExpression	* rom_filename = NULL		1340575	2		=			
ANR	1340619	Identifier	NULL		1340575	0					
ANR	1340620	Identifier	NULL		1340575	1					
ANR	1340621	IdentifierDeclStatement	unsigned long clen ;	1793:4:57719:57737	1340575	4	True				
ANR	1340622	IdentifierDecl	clen		1340575	0					
ANR	1340623	IdentifierDeclType	unsigned long		1340575	0					
ANR	1340624	Identifier	clen		1340575	1					
ANR	1340625	IdentifierDeclStatement	FILE * in ;	1794:4:57743:57751	1340575	5	True				
ANR	1340626	IdentifierDecl	* in		1340575	0					
ANR	1340627	IdentifierDeclType	FILE *		1340575	0					
ANR	1340628	Identifier	in		1340575	1					
ANR	1340629	IdentifierDeclStatement	FILE * config ;	1795:4:57757:57769	1340575	6	True				
ANR	1340630	IdentifierDecl	* config		1340575	0					
ANR	1340631	IdentifierDeclType	FILE *		1340575	0					
ANR	1340632	Identifier	config		1340575	1					
ANR	1340633	IdentifierDeclStatement	in_block_t * in_block = NULL ;	1796:4:57775:57802	1340575	7	True				
ANR	1340634	IdentifierDecl	* in_block = NULL		1340575	0					
ANR	1340635	IdentifierDeclType	in_block_t *		1340575	0					
ANR	1340636	Identifier	in_block		1340575	1					
ANR	1340637	AssignmentExpression	* in_block = NULL		1340575	2		=			
ANR	1340638	Identifier	NULL		1340575	0					
ANR	1340639	Identifier	NULL		1340575	1					
ANR	1340640	IdentifierDeclStatement	int compaction = 1 ;	1797:4:57808:57826	1340575	8	True				
ANR	1340641	IdentifierDecl	compaction = 1		1340575	0					
ANR	1340642	IdentifierDeclType	int		1340575	0					
ANR	1340643	Identifier	compaction		1340575	1					
ANR	1340644	AssignmentExpression	compaction = 1		1340575	2		=			
ANR	1340645	Identifier	compaction		1340575	0					
ANR	1340646	PrimaryExpression	1		1340575	1					
ANR	1340647	IdentifierDeclStatement	int code = 0 ;	1798:4:57832:57844	1340575	9	True				
ANR	1340648	IdentifierDecl	code = 0		1340575	0					
ANR	1340649	IdentifierDeclType	int		1340575	0					
ANR	1340650	Identifier	code		1340575	1					
ANR	1340651	AssignmentExpression	code = 0		1340575	2		=			
ANR	1340652	Identifier	code		1340575	0					
ANR	1340653	PrimaryExpression	0		1340575	1					
ANR	1340654	ExpressionStatement	ubuf = malloc ( ROMFS_BLOCKSIZE )	1800:4:57851:57881	1340575	10	True				
ANR	1340655	AssignmentExpression	ubuf = malloc ( ROMFS_BLOCKSIZE )		1340575	0		=			
ANR	1340656	Identifier	ubuf		1340575	0					
ANR	1340657	CallExpression	malloc ( ROMFS_BLOCKSIZE )		1340575	1					
ANR	1340658	Callee	malloc		1340575	0					
ANR	1340659	Identifier	malloc		1340575	0					
ANR	1340660	ArgumentList	ROMFS_BLOCKSIZE		1340575	1					
ANR	1340661	Argument	ROMFS_BLOCKSIZE		1340575	0					
ANR	1340662	Identifier	ROMFS_BLOCKSIZE		1340575	0					
ANR	1340663	ExpressionStatement	cbuf = malloc ( ROMFS_CBUFSIZE )	1801:4:57887:57916	1340575	11	True				
ANR	1340664	AssignmentExpression	cbuf = malloc ( ROMFS_CBUFSIZE )		1340575	0		=			
ANR	1340665	Identifier	cbuf		1340575	0					
ANR	1340666	CallExpression	malloc ( ROMFS_CBUFSIZE )		1340575	1					
ANR	1340667	Callee	malloc		1340575	0					
ANR	1340668	Identifier	malloc		1340575	0					
ANR	1340669	ArgumentList	ROMFS_CBUFSIZE		1340575	1					
ANR	1340670	Argument	ROMFS_CBUFSIZE		1340575	0					
ANR	1340671	Identifier	ROMFS_CBUFSIZE		1340575	0					
ANR	1340672	ExpressionStatement	prefixed_path = malloc ( 1024 )	1802:4:57922:57950	1340575	12	True				
ANR	1340673	AssignmentExpression	prefixed_path = malloc ( 1024 )		1340575	0		=			
ANR	1340674	Identifier	prefixed_path		1340575	0					
ANR	1340675	CallExpression	malloc ( 1024 )		1340575	1					
ANR	1340676	Callee	malloc		1340575	0					
ANR	1340677	Identifier	malloc		1340575	0					
ANR	1340678	ArgumentList	1024		1340575	1					
ANR	1340679	Argument	1024		1340575	0					
ANR	1340680	PrimaryExpression	1024		1340575	0					
ANR	1340681	ExpressionStatement	rom_filename = malloc ( 1024 )	1803:4:57956:57983	1340575	13	True				
ANR	1340682	AssignmentExpression	rom_filename = malloc ( 1024 )		1340575	0		=			
ANR	1340683	Identifier	rom_filename		1340575	0					
ANR	1340684	CallExpression	malloc ( 1024 )		1340575	1					
ANR	1340685	Callee	malloc		1340575	0					
ANR	1340686	Identifier	malloc		1340575	0					
ANR	1340687	ArgumentList	1024		1340575	1					
ANR	1340688	Argument	1024		1340575	0					
ANR	1340689	PrimaryExpression	1024		1340575	0					
ANR	1340690	IfStatement	if ( ubuf == NULL || cbuf == NULL || prefixed_path == NULL || rom_filename == NULL )		1340575	14					
ANR	1340691	Condition	ubuf == NULL || cbuf == NULL || prefixed_path == NULL || rom_filename == NULL	1804:8:57993:58077	1340575	0	True				
ANR	1340692	OrExpression	ubuf == NULL || cbuf == NULL || prefixed_path == NULL || rom_filename == NULL		1340575	0		||			
ANR	1340693	EqualityExpression	ubuf == NULL		1340575	0		==			
ANR	1340694	Identifier	ubuf		1340575	0					
ANR	1340695	Identifier	NULL		1340575	1					
ANR	1340696	OrExpression	cbuf == NULL || prefixed_path == NULL || rom_filename == NULL		1340575	1		||			
ANR	1340697	EqualityExpression	cbuf == NULL		1340575	0		==			
ANR	1340698	Identifier	cbuf		1340575	0					
ANR	1340699	Identifier	NULL		1340575	1					
ANR	1340700	OrExpression	prefixed_path == NULL || rom_filename == NULL		1340575	1		||			
ANR	1340701	EqualityExpression	prefixed_path == NULL		1340575	0		==			
ANR	1340702	Identifier	prefixed_path		1340575	0					
ANR	1340703	Identifier	NULL		1340575	1					
ANR	1340704	EqualityExpression	rom_filename == NULL		1340575	1		==			
ANR	1340705	Identifier	rom_filename		1340575	0					
ANR	1340706	Identifier	NULL		1340575	1					
ANR	1340707	CompoundStatement		18:30:524:524	1340575	1					
ANR	1340708	ExpressionStatement	"printf ( ""malloc fail in process_initfile\\n"" )"	1806:8:58090:58133	1340575	0	True				
ANR	1340709	CallExpression	"printf ( ""malloc fail in process_initfile\\n"" )"		1340575	0					
ANR	1340710	Callee	printf		1340575	0					
ANR	1340711	Identifier	printf		1340575	0					
ANR	1340712	ArgumentList	"""malloc fail in process_initfile\\n"""		1340575	1					
ANR	1340713	Argument	"""malloc fail in process_initfile\\n"""		1340575	0					
ANR	1340714	PrimaryExpression	"""malloc fail in process_initfile\\n"""		1340575	0					
ANR	1340715	ExpressionStatement	code = - 1	1808:8:58219:58228	1340575	1	True				
ANR	1340716	AssignmentExpression	code = - 1		1340575	0		=			
ANR	1340717	Identifier	code		1340575	0					
ANR	1340718	UnaryOperationExpression	- 1		1340575	1					
ANR	1340719	UnaryOperator	-		1340575	0					
ANR	1340720	PrimaryExpression	1		1340575	1					
ANR	1340721	GotoStatement	goto done ;	1809:8:58238:58247	1340575	2	True				
ANR	1340722	Identifier	done		1340575	0					
ANR	1340723	ExpressionStatement	"prefix_add ( os_prefix , initfile , prefixed_path )"	1812:4:58260:58306	1340575	15	True				
ANR	1340724	CallExpression	"prefix_add ( os_prefix , initfile , prefixed_path )"		1340575	0					
ANR	1340725	Callee	prefix_add		1340575	0					
ANR	1340726	Identifier	prefix_add		1340575	0					
ANR	1340727	ArgumentList	os_prefix		1340575	1					
ANR	1340728	Argument	os_prefix		1340575	0					
ANR	1340729	Identifier	os_prefix		1340575	0					
ANR	1340730	Argument	initfile		1340575	1					
ANR	1340731	Identifier	initfile		1340575	0					
ANR	1340732	Argument	prefixed_path		1340575	2					
ANR	1340733	Identifier	prefixed_path		1340575	0					
ANR	1340734	ExpressionStatement	"prefix_add ( rom_prefix , initfile , rom_filename )"	1813:4:58312:58358	1340575	16	True				
ANR	1340735	CallExpression	"prefix_add ( rom_prefix , initfile , rom_filename )"		1340575	0					
ANR	1340736	Callee	prefix_add		1340575	0					
ANR	1340737	Identifier	prefix_add		1340575	0					
ANR	1340738	ArgumentList	rom_prefix		1340575	1					
ANR	1340739	Argument	rom_prefix		1340575	0					
ANR	1340740	Identifier	rom_prefix		1340575	0					
ANR	1340741	Argument	initfile		1340575	1					
ANR	1340742	Identifier	initfile		1340575	0					
ANR	1340743	Argument	rom_filename		1340575	2					
ANR	1340744	Identifier	rom_filename		1340575	0					
ANR	1340745	ExpressionStatement	"in = fopen ( prefixed_path , ""r"" )"	1815:4:58365:58395	1340575	17	True				
ANR	1340746	AssignmentExpression	"in = fopen ( prefixed_path , ""r"" )"		1340575	0		=			
ANR	1340747	Identifier	in		1340575	0					
ANR	1340748	CallExpression	"fopen ( prefixed_path , ""r"" )"		1340575	1					
ANR	1340749	Callee	fopen		1340575	0					
ANR	1340750	Identifier	fopen		1340575	0					
ANR	1340751	ArgumentList	prefixed_path		1340575	1					
ANR	1340752	Argument	prefixed_path		1340575	0					
ANR	1340753	Identifier	prefixed_path		1340575	0					
ANR	1340754	Argument	"""r"""		1340575	1					
ANR	1340755	PrimaryExpression	"""r"""		1340575	0					
ANR	1340756	IfStatement	if ( in == 0 )		1340575	18					
ANR	1340757	Condition	in == 0	1816:8:58405:58411	1340575	0	True				
ANR	1340758	EqualityExpression	in == 0		1340575	0		==			
ANR	1340759	Identifier	in		1340575	0					
ANR	1340760	PrimaryExpression	0		1340575	1					
ANR	1340761	CompoundStatement		29:17:858:858	1340575	1					
ANR	1340762	ExpressionStatement	"printf ( ""cannot open initfile at: %s\\n"" , prefixed_path )"	1817:8:58424:58478	1340575	0	True				
ANR	1340763	CallExpression	"printf ( ""cannot open initfile at: %s\\n"" , prefixed_path )"		1340575	0					
ANR	1340764	Callee	printf		1340575	0					
ANR	1340765	Identifier	printf		1340575	0					
ANR	1340766	ArgumentList	"""cannot open initfile at: %s\\n"""		1340575	1					
ANR	1340767	Argument	"""cannot open initfile at: %s\\n"""		1340575	0					
ANR	1340768	PrimaryExpression	"""cannot open initfile at: %s\\n"""		1340575	0					
ANR	1340769	Argument	prefixed_path		1340575	1					
ANR	1340770	Identifier	prefixed_path		1340575	0					
ANR	1340771	ExpressionStatement	code = - 1	1818:8:58488:58497	1340575	1	True				
ANR	1340772	AssignmentExpression	code = - 1		1340575	0		=			
ANR	1340773	Identifier	code		1340575	0					
ANR	1340774	UnaryOperationExpression	- 1		1340575	1					
ANR	1340775	UnaryOperator	-		1340575	0					
ANR	1340776	PrimaryExpression	1		1340575	1					
ANR	1340777	GotoStatement	goto done ;	1819:8:58507:58516	1340575	2	True				
ANR	1340778	Identifier	done		1340575	0					
ANR	1340779	ExpressionStatement	"config = fopen ( gconfig_h , ""r"" )"	1821:4:58528:58558	1340575	19	True				
ANR	1340780	AssignmentExpression	"config = fopen ( gconfig_h , ""r"" )"		1340575	0		=			
ANR	1340781	Identifier	config		1340575	0					
ANR	1340782	CallExpression	"fopen ( gconfig_h , ""r"" )"		1340575	1					
ANR	1340783	Callee	fopen		1340575	0					
ANR	1340784	Identifier	fopen		1340575	0					
ANR	1340785	ArgumentList	gconfig_h		1340575	1					
ANR	1340786	Argument	gconfig_h		1340575	0					
ANR	1340787	Identifier	gconfig_h		1340575	0					
ANR	1340788	Argument	"""r"""		1340575	1					
ANR	1340789	PrimaryExpression	"""r"""		1340575	0					
ANR	1340790	IfStatement	if ( config == 0 )		1340575	20					
ANR	1340791	Condition	config == 0	1822:8:58568:58578	1340575	0	True				
ANR	1340792	EqualityExpression	config == 0		1340575	0		==			
ANR	1340793	Identifier	config		1340575	0					
ANR	1340794	PrimaryExpression	0		1340575	1					
ANR	1340795	CompoundStatement		35:21:1025:1025	1340575	1					
ANR	1340796	ExpressionStatement	"printf ( ""Cannot open gconfig file %s\\n"" , gconfig_h )"	1823:8:58591:58641	1340575	0	True				
ANR	1340797	CallExpression	"printf ( ""Cannot open gconfig file %s\\n"" , gconfig_h )"		1340575	0					
ANR	1340798	Callee	printf		1340575	0					
ANR	1340799	Identifier	printf		1340575	0					
ANR	1340800	ArgumentList	"""Cannot open gconfig file %s\\n"""		1340575	1					
ANR	1340801	Argument	"""Cannot open gconfig file %s\\n"""		1340575	0					
ANR	1340802	PrimaryExpression	"""Cannot open gconfig file %s\\n"""		1340575	0					
ANR	1340803	Argument	gconfig_h		1340575	1					
ANR	1340804	Identifier	gconfig_h		1340575	0					
ANR	1340805	ExpressionStatement	fclose ( in )	1824:8:58651:58661	1340575	1	True				
ANR	1340806	CallExpression	fclose ( in )		1340575	0					
ANR	1340807	Callee	fclose		1340575	0					
ANR	1340808	Identifier	fclose		1340575	0					
ANR	1340809	ArgumentList	in		1340575	1					
ANR	1340810	Argument	in		1340575	0					
ANR	1340811	Identifier	in		1340575	0					
ANR	1340812	ExpressionStatement	code = - 1	1825:8:58671:58680	1340575	2	True				
ANR	1340813	AssignmentExpression	code = - 1		1340575	0		=			
ANR	1340814	Identifier	code		1340575	0					
ANR	1340815	UnaryOperationExpression	- 1		1340575	1					
ANR	1340816	UnaryOperator	-		1340575	0					
ANR	1340817	PrimaryExpression	1		1340575	1					
ANR	1340818	GotoStatement	goto done ;	1826:8:58690:58699	1340575	3	True				
ANR	1340819	Identifier	done		1340575	0					
ANR	1340820	ExpressionStatement	"memset ( linebuf , 0 , sizeof ( linebuf ) )"	1828:4:58711:58746	1340575	21	True				
ANR	1340821	CallExpression	"memset ( linebuf , 0 , sizeof ( linebuf ) )"		1340575	0					
ANR	1340822	Callee	memset		1340575	0					
ANR	1340823	Identifier	memset		1340575	0					
ANR	1340824	ArgumentList	linebuf		1340575	1					
ANR	1340825	Argument	linebuf		1340575	0					
ANR	1340826	Identifier	linebuf		1340575	0					
ANR	1340827	Argument	0		1340575	1					
ANR	1340828	PrimaryExpression	0		1340575	0					
ANR	1340829	Argument	sizeof ( linebuf )		1340575	2					
ANR	1340830	SizeofExpression	sizeof ( linebuf )		1340575	0					
ANR	1340831	Sizeof	sizeof		1340575	0					
ANR	1340832	SizeofOperand	linebuf		1340575	1					
ANR	1340833	ExpressionStatement	"node = calloc ( 1 , sizeof ( romfs_inode ) )"	1829:4:58752:58789	1340575	22	True				
ANR	1340834	AssignmentExpression	"node = calloc ( 1 , sizeof ( romfs_inode ) )"		1340575	0		=			
ANR	1340835	Identifier	node		1340575	0					
ANR	1340836	CallExpression	"calloc ( 1 , sizeof ( romfs_inode ) )"		1340575	1					
ANR	1340837	Callee	calloc		1340575	0					
ANR	1340838	Identifier	calloc		1340575	0					
ANR	1340839	ArgumentList	1		1340575	1					
ANR	1340840	Argument	1		1340575	0					
ANR	1340841	PrimaryExpression	1		1340575	0					
ANR	1340842	Argument	sizeof ( romfs_inode )		1340575	1					
ANR	1340843	SizeofExpression	sizeof ( romfs_inode )		1340575	0					
ANR	1340844	Sizeof	sizeof		1340575	0					
ANR	1340845	SizeofOperand	romfs_inode		1340575	1					
ANR	1340846	ExpressionStatement	node -> name = rom_filename	1830:4:58795:58820	1340575	23	True				
ANR	1340847	AssignmentExpression	node -> name = rom_filename		1340575	0		=			
ANR	1340848	PtrMemberAccess	node -> name		1340575	0					
ANR	1340849	Identifier	node		1340575	0					
ANR	1340850	Identifier	name		1340575	1					
ANR	1340851	Identifier	rom_filename		1340575	1					
ANR	1340852	ExpressionStatement	"merge_to_ps ( os_prefix , initfile , in , config )"	1832:4:58871:58915	1340575	24	True				
ANR	1340853	CallExpression	"merge_to_ps ( os_prefix , initfile , in , config )"		1340575	0					
ANR	1340854	Callee	merge_to_ps		1340575	0					
ANR	1340855	Identifier	merge_to_ps		1340575	0					
ANR	1340856	ArgumentList	os_prefix		1340575	1					
ANR	1340857	Argument	os_prefix		1340575	0					
ANR	1340858	Identifier	os_prefix		1340575	0					
ANR	1340859	Argument	initfile		1340575	1					
ANR	1340860	Identifier	initfile		1340575	0					
ANR	1340861	Argument	in		1340575	2					
ANR	1340862	Identifier	in		1340575	0					
ANR	1340863	Argument	config		1340575	3					
ANR	1340864	Identifier	config		1340575	0					
ANR	1340865	ExpressionStatement	fclose ( in )	1834:4:58922:58932	1340575	25	True				
ANR	1340866	CallExpression	fclose ( in )		1340575	0					
ANR	1340867	Callee	fclose		1340575	0					
ANR	1340868	Identifier	fclose		1340575	0					
ANR	1340869	ArgumentList	in		1340575	1					
ANR	1340870	Argument	in		1340575	0					
ANR	1340871	Identifier	in		1340575	0					
ANR	1340872	ExpressionStatement	fclose ( config )	1835:4:58938:58952	1340575	26	True				
ANR	1340873	CallExpression	fclose ( config )		1340575	0					
ANR	1340874	Callee	fclose		1340575	0					
ANR	1340875	Identifier	fclose		1340575	0					
ANR	1340876	ArgumentList	config		1340575	1					
ANR	1340877	Argument	config		1340575	0					
ANR	1340878	Identifier	config		1340575	0					
ANR	1340879	IfStatement	if ( compaction )		1340575	27					
ANR	1340880	Condition	compaction	1837:8:58963:58972	1340575	0	True				
ANR	1340881	Identifier	compaction		1340575	0					
ANR	1340882	CompoundStatement		56:8:1560:1568	1340575	1					
ANR	1340883	IdentifierDeclStatement	in_block_t * comp_block_head ;	1839:8:58989:59016	1340575	0	True				
ANR	1340884	IdentifierDecl	* comp_block_head		1340575	0					
ANR	1340885	IdentifierDeclType	in_block_t *		1340575	0					
ANR	1340886	Identifier	comp_block_head		1340575	1					
ANR	1340887	IdentifierDeclStatement	in_block_t * comp_block ;	1840:8:59026:59048	1340575	1	True				
ANR	1340888	IdentifierDecl	* comp_block		1340575	0					
ANR	1340889	IdentifierDeclType	in_block_t *		1340575	0					
ANR	1340890	Identifier	comp_block		1340575	1					
ANR	1340891	IdentifierDeclStatement	pscompstate psc = { 0 } ;	1841:8:59058:59079	1340575	2	True				
ANR	1340892	IdentifierDecl	psc = { 0 }		1340575	0					
ANR	1340893	IdentifierDeclType	pscompstate		1340575	0					
ANR	1340894	Identifier	psc		1340575	1					
ANR	1340895	AssignmentExpression	psc = { 0 }		1340575	2		=			
ANR	1340896	Identifier	psc		1340575	0					
ANR	1340897	InitializerList	0		1340575	1					
ANR	1340898	PrimaryExpression	0		1340575	0					
ANR	1340899	IdentifierDeclStatement	in_block_file ibf ;	1842:8:59089:59106	1340575	3	True				
ANR	1340900	IdentifierDecl	ibf		1340575	0					
ANR	1340901	IdentifierDeclType	in_block_file		1340575	0					
ANR	1340902	Identifier	ibf		1340575	1					
ANR	1340903	IdentifierDeclStatement	int ulen ;	1843:8:59116:59124	1340575	4	True				
ANR	1340904	IdentifierDecl	ulen		1340575	0					
ANR	1340905	IdentifierDeclType	int		1340575	0					
ANR	1340906	Identifier	ulen		1340575	1					
ANR	1340907	ExpressionStatement	ibf . block = in_block_head	1845:8:59135:59160	1340575	5	True				
ANR	1340908	AssignmentExpression	ibf . block = in_block_head		1340575	0		=			
ANR	1340909	MemberAccess	ibf . block		1340575	0					
ANR	1340910	Identifier	ibf		1340575	0					
ANR	1340911	Identifier	block		1340575	1					
ANR	1340912	Identifier	in_block_head		1340575	1					
ANR	1340913	ExpressionStatement	ibf . pos = 0	1846:8:59170:59181	1340575	6	True				
ANR	1340914	AssignmentExpression	ibf . pos = 0		1340575	0		=			
ANR	1340915	MemberAccess	ibf . pos		1340575	0					
ANR	1340916	Identifier	ibf		1340575	0					
ANR	1340917	Identifier	pos		1340575	1					
ANR	1340918	PrimaryExpression	0		1340575	1					
ANR	1340919	ExpressionStatement	ibf . eof = 0	1847:8:59191:59202	1340575	7	True				
ANR	1340920	AssignmentExpression	ibf . eof = 0		1340575	0		=			
ANR	1340921	MemberAccess	ibf . eof		1340575	0					
ANR	1340922	Identifier	ibf		1340575	0					
ANR	1340923	Identifier	eof		1340575	1					
ANR	1340924	PrimaryExpression	0		1340575	1					
ANR	1340925	ExpressionStatement	comp_block = malloc ( sizeof ( * comp_block ) )	1849:8:59213:59253	1340575	8	True				
ANR	1340926	AssignmentExpression	comp_block = malloc ( sizeof ( * comp_block ) )		1340575	0		=			
ANR	1340927	Identifier	comp_block		1340575	0					
ANR	1340928	CallExpression	malloc ( sizeof ( * comp_block ) )		1340575	1					
ANR	1340929	Callee	malloc		1340575	0					
ANR	1340930	Identifier	malloc		1340575	0					
ANR	1340931	ArgumentList	sizeof ( * comp_block )		1340575	1					
ANR	1340932	Argument	sizeof ( * comp_block )		1340575	0					
ANR	1340933	SizeofExpression	sizeof ( * comp_block )		1340575	0					
ANR	1340934	Sizeof	sizeof		1340575	0					
ANR	1340935	UnaryOperationExpression	* comp_block		1340575	1					
ANR	1340936	UnaryOperator	*		1340575	0					
ANR	1340937	Identifier	comp_block		1340575	1					
ANR	1340938	ExpressionStatement	comp_block_head = comp_block	1850:8:59263:59291	1340575	9	True				
ANR	1340939	AssignmentExpression	comp_block_head = comp_block		1340575	0		=			
ANR	1340940	Identifier	comp_block_head		1340575	0					
ANR	1340941	Identifier	comp_block		1340575	1					
ANR	1340942	ExpressionStatement	"pscompact_start ( & psc , ( psc_getc * ) & ib_getc , ( psc_ungetc * ) & ib_ungetc , ( psc_feof * ) & ib_feof , & ibf , 0 , 0 , 1 )"	1851:8:59301:59404	1340575	10	True				
ANR	1340943	CallExpression	"pscompact_start ( & psc , ( psc_getc * ) & ib_getc , ( psc_ungetc * ) & ib_ungetc , ( psc_feof * ) & ib_feof , & ibf , 0 , 0 , 1 )"		1340575	0					
ANR	1340944	Callee	pscompact_start		1340575	0					
ANR	1340945	Identifier	pscompact_start		1340575	0					
ANR	1340946	ArgumentList	& psc		1340575	1					
ANR	1340947	Argument	& psc		1340575	0					
ANR	1340948	UnaryOperationExpression	& psc		1340575	0					
ANR	1340949	UnaryOperator	&		1340575	0					
ANR	1340950	Identifier	psc		1340575	1					
ANR	1340951	Argument	( psc_getc * ) & ib_getc		1340575	1					
ANR	1340952	CastExpression	( psc_getc * ) & ib_getc		1340575	0					
ANR	1340953	CastTarget	psc_getc *		1340575	0					
ANR	1340954	UnaryOperationExpression	& ib_getc		1340575	1					
ANR	1340955	UnaryOperator	&		1340575	0					
ANR	1340956	Identifier	ib_getc		1340575	1					
ANR	1340957	Argument	( psc_ungetc * ) & ib_ungetc		1340575	2					
ANR	1340958	CastExpression	( psc_ungetc * ) & ib_ungetc		1340575	0					
ANR	1340959	CastTarget	psc_ungetc *		1340575	0					
ANR	1340960	UnaryOperationExpression	& ib_ungetc		1340575	1					
ANR	1340961	UnaryOperator	&		1340575	0					
ANR	1340962	Identifier	ib_ungetc		1340575	1					
ANR	1340963	Argument	( psc_feof * ) & ib_feof		1340575	3					
ANR	1340964	CastExpression	( psc_feof * ) & ib_feof		1340575	0					
ANR	1340965	CastTarget	psc_feof *		1340575	0					
ANR	1340966	UnaryOperationExpression	& ib_feof		1340575	1					
ANR	1340967	UnaryOperator	&		1340575	0					
ANR	1340968	Identifier	ib_feof		1340575	1					
ANR	1340969	Argument	& ibf		1340575	4					
ANR	1340970	UnaryOperationExpression	& ibf		1340575	0					
ANR	1340971	UnaryOperator	&		1340575	0					
ANR	1340972	Identifier	ibf		1340575	1					
ANR	1340973	Argument	0		1340575	5					
ANR	1340974	PrimaryExpression	0		1340575	0					
ANR	1340975	Argument	0		1340575	6					
ANR	1340976	PrimaryExpression	0		1340575	0					
ANR	1340977	Argument	1		1340575	7					
ANR	1340978	PrimaryExpression	1		1340575	0					
ANR	1340979	DoStatement	do		1340575	11					
ANR	1340980	CompoundStatement		65:11:1861:1861	1340575	0					
ANR	1340981	ExpressionStatement	"ulen = pscompact_getcompactedblock ( & psc , comp_block -> data , ROMFS_BLOCKSIZE )"	1853:12:59431:59506	1340575	0	True				
ANR	1340982	AssignmentExpression	"ulen = pscompact_getcompactedblock ( & psc , comp_block -> data , ROMFS_BLOCKSIZE )"		1340575	0		=			
ANR	1340983	Identifier	ulen		1340575	0					
ANR	1340984	CallExpression	"pscompact_getcompactedblock ( & psc , comp_block -> data , ROMFS_BLOCKSIZE )"		1340575	1					
ANR	1340985	Callee	pscompact_getcompactedblock		1340575	0					
ANR	1340986	Identifier	pscompact_getcompactedblock		1340575	0					
ANR	1340987	ArgumentList	& psc		1340575	1					
ANR	1340988	Argument	& psc		1340575	0					
ANR	1340989	UnaryOperationExpression	& psc		1340575	0					
ANR	1340990	UnaryOperator	&		1340575	0					
ANR	1340991	Identifier	psc		1340575	1					
ANR	1340992	Argument	comp_block -> data		1340575	1					
ANR	1340993	PtrMemberAccess	comp_block -> data		1340575	0					
ANR	1340994	Identifier	comp_block		1340575	0					
ANR	1340995	Identifier	data		1340575	1					
ANR	1340996	Argument	ROMFS_BLOCKSIZE		1340575	2					
ANR	1340997	Identifier	ROMFS_BLOCKSIZE		1340575	0					
ANR	1340998	ExpressionStatement	comp_block -> next = NULL	1854:12:59520:59543	1340575	1	True				
ANR	1340999	AssignmentExpression	comp_block -> next = NULL		1340575	0		=			
ANR	1341000	PtrMemberAccess	comp_block -> next		1340575	0					
ANR	1341001	Identifier	comp_block		1340575	0					
ANR	1341002	Identifier	next		1340575	1					
ANR	1341003	Identifier	NULL		1340575	1					
ANR	1341004	IfStatement	if ( ulen == ROMFS_BLOCKSIZE )		1340575	2					
ANR	1341005	Condition	ulen == ROMFS_BLOCKSIZE	1855:16:59561:59583	1340575	0	True				
ANR	1341006	EqualityExpression	ulen == ROMFS_BLOCKSIZE		1340575	0		==			
ANR	1341007	Identifier	ulen		1340575	0					
ANR	1341008	Identifier	ROMFS_BLOCKSIZE		1340575	1					
ANR	1341009	CompoundStatement		68:41:2030:2030	1340575	1					
ANR	1341010	ExpressionStatement	comp_block -> next = malloc ( sizeof ( * comp_block ) )	1856:16:59604:59650	1340575	0	True				
ANR	1341011	AssignmentExpression	comp_block -> next = malloc ( sizeof ( * comp_block ) )		1340575	0		=			
ANR	1341012	PtrMemberAccess	comp_block -> next		1340575	0					
ANR	1341013	Identifier	comp_block		1340575	0					
ANR	1341014	Identifier	next		1340575	1					
ANR	1341015	CallExpression	malloc ( sizeof ( * comp_block ) )		1340575	1					
ANR	1341016	Callee	malloc		1340575	0					
ANR	1341017	Identifier	malloc		1340575	0					
ANR	1341018	ArgumentList	sizeof ( * comp_block )		1340575	1					
ANR	1341019	Argument	sizeof ( * comp_block )		1340575	0					
ANR	1341020	SizeofExpression	sizeof ( * comp_block )		1340575	0					
ANR	1341021	Sizeof	sizeof		1340575	0					
ANR	1341022	UnaryOperationExpression	* comp_block		1340575	1					
ANR	1341023	UnaryOperator	*		1340575	0					
ANR	1341024	Identifier	comp_block		1340575	1					
ANR	1341025	ExpressionStatement	comp_block = comp_block -> next	1857:16:59668:59697	1340575	1	True				
ANR	1341026	AssignmentExpression	comp_block = comp_block -> next		1340575	0		=			
ANR	1341027	Identifier	comp_block		1340575	0					
ANR	1341028	PtrMemberAccess	comp_block -> next		1340575	1					
ANR	1341029	Identifier	comp_block		1340575	0					
ANR	1341030	Identifier	next		1340575	1					
ANR	1341031	Condition	ulen == ROMFS_BLOCKSIZE	1859:17:59730:59752	1340575	1	True				
ANR	1341032	EqualityExpression	ulen == ROMFS_BLOCKSIZE		1340575	0		==			
ANR	1341033	Identifier	ulen		1340575	0					
ANR	1341034	Identifier	ROMFS_BLOCKSIZE		1340575	1					
ANR	1341035	ExpressionStatement	pscompact_end ( & psc )	1860:8:59764:59783	1340575	12	True				
ANR	1341036	CallExpression	pscompact_end ( & psc )		1340575	0					
ANR	1341037	Callee	pscompact_end		1340575	0					
ANR	1341038	Identifier	pscompact_end		1340575	0					
ANR	1341039	ArgumentList	& psc		1340575	1					
ANR	1341040	Argument	& psc		1340575	0					
ANR	1341041	UnaryOperationExpression	& psc		1340575	0					
ANR	1341042	UnaryOperator	&		1340575	0					
ANR	1341043	Identifier	psc		1340575	1					
ANR	1341044	WhileStatement	while ( in_block_head != NULL )		1340575	13					
ANR	1341045	Condition	in_block_head != NULL	1861:15:59800:59820	1340575	0	True				
ANR	1341046	EqualityExpression	in_block_head != NULL		1340575	0		!=			
ANR	1341047	Identifier	in_block_head		1340575	0					
ANR	1341048	Identifier	NULL		1340575	1					
ANR	1341049	CompoundStatement		74:38:2267:2267	1340575	1					
ANR	1341050	ExpressionStatement	in_block = in_block_head -> next	1862:12:59837:59867	1340575	0	True				
ANR	1341051	AssignmentExpression	in_block = in_block_head -> next		1340575	0		=			
ANR	1341052	Identifier	in_block		1340575	0					
ANR	1341053	PtrMemberAccess	in_block_head -> next		1340575	1					
ANR	1341054	Identifier	in_block_head		1340575	0					
ANR	1341055	Identifier	next		1340575	1					
ANR	1341056	ExpressionStatement	free ( in_block_head )	1863:12:59881:59900	1340575	1	True				
ANR	1341057	CallExpression	free ( in_block_head )		1340575	0					
ANR	1341058	Callee	free		1340575	0					
ANR	1341059	Identifier	free		1340575	0					
ANR	1341060	ArgumentList	in_block_head		1340575	1					
ANR	1341061	Argument	in_block_head		1340575	0					
ANR	1341062	Identifier	in_block_head		1340575	0					
ANR	1341063	ExpressionStatement	in_block_head = in_block	1864:12:59914:59938	1340575	2	True				
ANR	1341064	AssignmentExpression	in_block_head = in_block		1340575	0		=			
ANR	1341065	Identifier	in_block_head		1340575	0					
ANR	1341066	Identifier	in_block		1340575	1					
ANR	1341067	ExpressionStatement	in_block_head = comp_block_head	1866:8:59958:59989	1340575	14	True				
ANR	1341068	AssignmentExpression	in_block_head = comp_block_head		1340575	0		=			
ANR	1341069	Identifier	in_block_head		1340575	0					
ANR	1341070	Identifier	comp_block_head		1340575	1					
ANR	1341071	ExpressionStatement	in_block_tail = comp_block	1867:8:59999:60025	1340575	15	True				
ANR	1341072	AssignmentExpression	in_block_tail = comp_block		1340575	0		=			
ANR	1341073	Identifier	in_block_tail		1340575	0					
ANR	1341074	Identifier	comp_block		1340575	1					
ANR	1341075	ExpressionStatement	curr_block_p = in_block_tail -> data + ulen	1868:8:60035:60076	1340575	16	True				
ANR	1341076	AssignmentExpression	curr_block_p = in_block_tail -> data + ulen		1340575	0		=			
ANR	1341077	Identifier	curr_block_p		1340575	0					
ANR	1341078	AdditiveExpression	in_block_tail -> data + ulen		1340575	1		+			
ANR	1341079	PtrMemberAccess	in_block_tail -> data		1340575	0					
ANR	1341080	Identifier	in_block_tail		1340575	0					
ANR	1341081	Identifier	data		1340575	1					
ANR	1341082	Identifier	ulen		1340575	1					
ANR	1341083	ExpressionStatement	node -> length = 0	1871:4:60089:60105	1340575	28	True				
ANR	1341084	AssignmentExpression	node -> length = 0		1340575	0		=			
ANR	1341085	PtrMemberAccess	node -> length		1340575	0					
ANR	1341086	Identifier	node		1340575	0					
ANR	1341087	Identifier	length		1340575	1					
ANR	1341088	PrimaryExpression	0		1340575	1					
ANR	1341089	ExpressionStatement	in_block = in_block_head	1872:4:60111:60135	1340575	29	True				
ANR	1341090	AssignmentExpression	in_block = in_block_head		1340575	0		=			
ANR	1341091	Identifier	in_block		1340575	0					
ANR	1341092	Identifier	in_block_head		1340575	1					
ANR	1341093	WhileStatement	while ( in_block != NULL )		1340575	30					
ANR	1341094	Condition	in_block != NULL	1873:11:60148:60163	1340575	0	True				
ANR	1341095	EqualityExpression	in_block != NULL		1340575	0		!=			
ANR	1341096	Identifier	in_block		1340575	0					
ANR	1341097	Identifier	NULL		1340575	1					
ANR	1341098	CompoundStatement		86:29:2610:2610	1340575	1					
ANR	1341099	ExpressionStatement	node -> length += in_block != in_block_tail ? ROMFS_BLOCKSIZE : curr_block_p - in_block -> data	1874:8:60176:60279	1340575	0	True				
ANR	1341100	AssignmentExpression	node -> length += in_block != in_block_tail ? ROMFS_BLOCKSIZE : curr_block_p - in_block -> data		1340575	0		+=			
ANR	1341101	PtrMemberAccess	node -> length		1340575	0					
ANR	1341102	Identifier	node		1340575	0					
ANR	1341103	Identifier	length		1340575	1					
ANR	1341104	ConditionalExpression	in_block != in_block_tail ? ROMFS_BLOCKSIZE : curr_block_p - in_block -> data		1340575	1					
ANR	1341105	Condition	in_block != in_block_tail		1340575	0					
ANR	1341106	EqualityExpression	in_block != in_block_tail		1340575	0		!=			
ANR	1341107	Identifier	in_block		1340575	0					
ANR	1341108	Identifier	in_block_tail		1340575	1					
ANR	1341109	Identifier	ROMFS_BLOCKSIZE		1340575	1					
ANR	1341110	AdditiveExpression	curr_block_p - in_block -> data		1340575	2		-			
ANR	1341111	Identifier	curr_block_p		1340575	0					
ANR	1341112	PtrMemberAccess	in_block -> data		1340575	1					
ANR	1341113	Identifier	in_block		1340575	0					
ANR	1341114	Identifier	data		1340575	1					
ANR	1341115	ExpressionStatement	in_block = in_block -> next	1876:8:60289:60314	1340575	1	True				
ANR	1341116	AssignmentExpression	in_block = in_block -> next		1340575	0		=			
ANR	1341117	Identifier	in_block		1340575	0					
ANR	1341118	PtrMemberAccess	in_block -> next		1340575	1					
ANR	1341119	Identifier	in_block		1340575	0					
ANR	1341120	Identifier	next		1340575	1					
ANR	1341121	ExpressionStatement	node -> disc_length = node -> length	1878:4:60326:60358	1340575	31	True				
ANR	1341122	AssignmentExpression	node -> disc_length = node -> length		1340575	0		=			
ANR	1341123	PtrMemberAccess	node -> disc_length		1340575	0					
ANR	1341124	Identifier	node		1340575	0					
ANR	1341125	Identifier	disc_length		1340575	1					
ANR	1341126	PtrMemberAccess	node -> length		1340575	1					
ANR	1341127	Identifier	node		1340575	0					
ANR	1341128	Identifier	length		1340575	1					
ANR	1341129	ExpressionStatement	blocks = ( node -> length + ROMFS_BLOCKSIZE - 1 ) / ROMFS_BLOCKSIZE + 1	1880:4:60365:60428	1340575	32	True				
ANR	1341130	AssignmentExpression	blocks = ( node -> length + ROMFS_BLOCKSIZE - 1 ) / ROMFS_BLOCKSIZE + 1		1340575	0		=			
ANR	1341131	Identifier	blocks		1340575	0					
ANR	1341132	AdditiveExpression	( node -> length + ROMFS_BLOCKSIZE - 1 ) / ROMFS_BLOCKSIZE + 1		1340575	1		+			
ANR	1341133	MultiplicativeExpression	( node -> length + ROMFS_BLOCKSIZE - 1 ) / ROMFS_BLOCKSIZE		1340575	0		/			
ANR	1341134	AdditiveExpression	node -> length + ROMFS_BLOCKSIZE - 1		1340575	0		+			
ANR	1341135	PtrMemberAccess	node -> length		1340575	0					
ANR	1341136	Identifier	node		1340575	0					
ANR	1341137	Identifier	length		1340575	1					
ANR	1341138	AdditiveExpression	ROMFS_BLOCKSIZE - 1		1340575	1		-			
ANR	1341139	Identifier	ROMFS_BLOCKSIZE		1340575	0					
ANR	1341140	PrimaryExpression	1		1340575	1					
ANR	1341141	Identifier	ROMFS_BLOCKSIZE		1340575	1					
ANR	1341142	PrimaryExpression	1		1340575	1					
ANR	1341143	ExpressionStatement	"node -> data_lengths = calloc ( blocks , sizeof ( * node -> data_lengths ) )"	1881:4:60434:60498	1340575	33	True				
ANR	1341144	AssignmentExpression	"node -> data_lengths = calloc ( blocks , sizeof ( * node -> data_lengths ) )"		1340575	0		=			
ANR	1341145	PtrMemberAccess	node -> data_lengths		1340575	0					
ANR	1341146	Identifier	node		1340575	0					
ANR	1341147	Identifier	data_lengths		1340575	1					
ANR	1341148	CallExpression	"calloc ( blocks , sizeof ( * node -> data_lengths ) )"		1340575	1					
ANR	1341149	Callee	calloc		1340575	0					
ANR	1341150	Identifier	calloc		1340575	0					
ANR	1341151	ArgumentList	blocks		1340575	1					
ANR	1341152	Argument	blocks		1340575	0					
ANR	1341153	Identifier	blocks		1340575	0					
ANR	1341154	Argument	sizeof ( * node -> data_lengths )		1340575	1					
ANR	1341155	SizeofExpression	sizeof ( * node -> data_lengths )		1340575	0					
ANR	1341156	Sizeof	sizeof		1340575	0					
ANR	1341157	UnaryOperationExpression	* node -> data_lengths		1340575	1					
ANR	1341158	UnaryOperator	*		1340575	0					
ANR	1341159	PtrMemberAccess	node -> data_lengths		1340575	1					
ANR	1341160	Identifier	node		1340575	0					
ANR	1341161	Identifier	data_lengths		1340575	1					
ANR	1341162	ExpressionStatement	"node -> data = calloc ( blocks , sizeof ( * node -> data ) )"	1882:4:60504:60552	1340575	34	True				
ANR	1341163	AssignmentExpression	"node -> data = calloc ( blocks , sizeof ( * node -> data ) )"		1340575	0		=			
ANR	1341164	PtrMemberAccess	node -> data		1340575	0					
ANR	1341165	Identifier	node		1340575	0					
ANR	1341166	Identifier	data		1340575	1					
ANR	1341167	CallExpression	"calloc ( blocks , sizeof ( * node -> data ) )"		1340575	1					
ANR	1341168	Callee	calloc		1340575	0					
ANR	1341169	Identifier	calloc		1340575	0					
ANR	1341170	ArgumentList	blocks		1340575	1					
ANR	1341171	Argument	blocks		1340575	0					
ANR	1341172	Identifier	blocks		1340575	0					
ANR	1341173	Argument	sizeof ( * node -> data )		1340575	1					
ANR	1341174	SizeofExpression	sizeof ( * node -> data )		1340575	0					
ANR	1341175	Sizeof	sizeof		1340575	0					
ANR	1341176	UnaryOperationExpression	* node -> data		1340575	1					
ANR	1341177	UnaryOperator	*		1340575	0					
ANR	1341178	PtrMemberAccess	node -> data		1340575	1					
ANR	1341179	Identifier	node		1340575	0					
ANR	1341180	Identifier	data		1340575	1					
ANR	1341181	ExpressionStatement	block = 0	1883:4:60558:60567	1340575	35	True				
ANR	1341182	AssignmentExpression	block = 0		1340575	0		=			
ANR	1341183	Identifier	block		1340575	0					
ANR	1341184	PrimaryExpression	0		1340575	1					
ANR	1341185	ExpressionStatement	in_block = in_block_head	1885:4:60574:60598	1340575	36	True				
ANR	1341186	AssignmentExpression	in_block = in_block_head		1340575	0		=			
ANR	1341187	Identifier	in_block		1340575	0					
ANR	1341188	Identifier	in_block_head		1340575	1					
ANR	1341189	WhileStatement	while ( in_block != NULL )		1340575	37					
ANR	1341190	Condition	in_block != NULL	1886:11:60611:60626	1340575	0	True				
ANR	1341191	EqualityExpression	in_block != NULL		1340575	0		!=			
ANR	1341192	Identifier	in_block		1340575	0					
ANR	1341193	Identifier	NULL		1340575	1					
ANR	1341194	CompoundStatement		100:8:3083:3190	1340575	1					
ANR	1341195	IdentifierDeclStatement	int block_len = in_block != in_block_tail ? ROMFS_BLOCKSIZE : curr_block_p - in_block -> data ;	1887:8:60639:60746	1340575	0	True				
ANR	1341196	IdentifierDecl	block_len = in_block != in_block_tail ? ROMFS_BLOCKSIZE : curr_block_p - in_block -> data		1340575	0					
ANR	1341197	IdentifierDeclType	int		1340575	0					
ANR	1341198	Identifier	block_len		1340575	1					
ANR	1341199	AssignmentExpression	block_len = in_block != in_block_tail ? ROMFS_BLOCKSIZE : curr_block_p - in_block -> data		1340575	2		=			
ANR	1341200	Identifier	block_len		1340575	0					
ANR	1341201	ConditionalExpression	in_block != in_block_tail ? ROMFS_BLOCKSIZE : curr_block_p - in_block -> data		1340575	1					
ANR	1341202	Condition	in_block != in_block_tail		1340575	0					
ANR	1341203	EqualityExpression	in_block != in_block_tail		1340575	0		!=			
ANR	1341204	Identifier	in_block		1340575	0					
ANR	1341205	Identifier	in_block_tail		1340575	1					
ANR	1341206	Identifier	ROMFS_BLOCKSIZE		1340575	1					
ANR	1341207	AdditiveExpression	curr_block_p - in_block -> data		1340575	2		-			
ANR	1341208	Identifier	curr_block_p		1340575	0					
ANR	1341209	PtrMemberAccess	in_block -> data		1340575	1					
ANR	1341210	Identifier	in_block		1340575	0					
ANR	1341211	Identifier	data		1340575	1					
ANR	1341212	ExpressionStatement	clen = ROMFS_CBUFSIZE	1890:8:60757:60778	1340575	1	True				
ANR	1341213	AssignmentExpression	clen = ROMFS_CBUFSIZE		1340575	0		=			
ANR	1341214	Identifier	clen		1340575	0					
ANR	1341215	Identifier	ROMFS_CBUFSIZE		1340575	1					
ANR	1341216	IfStatement	if ( compression )		1340575	2					
ANR	1341217	Condition	compression	1891:12:60792:60802	1340575	0	True				
ANR	1341218	Identifier	compression		1340575	0					
ANR	1341219	CompoundStatement		104:25:3249:3249	1340575	1					
ANR	1341220	ExpressionStatement	"ret = compress ( cbuf , & clen , in_block -> data , block_len )"	1893:12:60856:60910	1340575	0	True				
ANR	1341221	AssignmentExpression	"ret = compress ( cbuf , & clen , in_block -> data , block_len )"		1340575	0		=			
ANR	1341222	Identifier	ret		1340575	0					
ANR	1341223	CallExpression	"compress ( cbuf , & clen , in_block -> data , block_len )"		1340575	1					
ANR	1341224	Callee	compress		1340575	0					
ANR	1341225	Identifier	compress		1340575	0					
ANR	1341226	ArgumentList	cbuf		1340575	1					
ANR	1341227	Argument	cbuf		1340575	0					
ANR	1341228	Identifier	cbuf		1340575	0					
ANR	1341229	Argument	& clen		1340575	1					
ANR	1341230	UnaryOperationExpression	& clen		1340575	0					
ANR	1341231	UnaryOperator	&		1340575	0					
ANR	1341232	Identifier	clen		1340575	1					
ANR	1341233	Argument	in_block -> data		1340575	2					
ANR	1341234	PtrMemberAccess	in_block -> data		1340575	0					
ANR	1341235	Identifier	in_block		1340575	0					
ANR	1341236	Identifier	data		1340575	1					
ANR	1341237	Argument	block_len		1340575	3					
ANR	1341238	Identifier	block_len		1340575	0					
ANR	1341239	IfStatement	if ( ret != Z_OK )		1340575	1					
ANR	1341240	Condition	ret != Z_OK	1894:16:60928:60938	1340575	0	True				
ANR	1341241	EqualityExpression	ret != Z_OK		1340575	0		!=			
ANR	1341242	Identifier	ret		1340575	0					
ANR	1341243	Identifier	Z_OK		1340575	1					
ANR	1341244	CompoundStatement		107:29:3385:3385	1340575	1					
ANR	1341245	ExpressionStatement	"printf ( ""error compressing data block!\\n"" )"	1895:16:60959:61000	1340575	0	True				
ANR	1341246	CallExpression	"printf ( ""error compressing data block!\\n"" )"		1340575	0					
ANR	1341247	Callee	printf		1340575	0					
ANR	1341248	Identifier	printf		1340575	0					
ANR	1341249	ArgumentList	"""error compressing data block!\\n"""		1340575	1					
ANR	1341250	Argument	"""error compressing data block!\\n"""		1340575	0					
ANR	1341251	PrimaryExpression	"""error compressing data block!\\n"""		1340575	0					
ANR	1341252	ExpressionStatement	code = - 1	1896:16:61018:61027	1340575	1	True				
ANR	1341253	AssignmentExpression	code = - 1		1340575	0		=			
ANR	1341254	Identifier	code		1340575	0					
ANR	1341255	UnaryOperationExpression	- 1		1340575	1					
ANR	1341256	UnaryOperator	-		1340575	0					
ANR	1341257	PrimaryExpression	1		1340575	1					
ANR	1341258	GotoStatement	goto done ;	1897:16:61045:61054	1340575	2	True				
ANR	1341259	Identifier	done		1340575	0					
ANR	1341260	ElseStatement	else		1340575	0					
ANR	1341261	CompoundStatement		112:15:3529:3529	1340575	0					
ANR	1341262	ExpressionStatement	"memcpy ( cbuf , in_block -> data , block_len )"	1900:12:61099:61138	1340575	0	True				
ANR	1341263	CallExpression	"memcpy ( cbuf , in_block -> data , block_len )"		1340575	0					
ANR	1341264	Callee	memcpy		1340575	0					
ANR	1341265	Identifier	memcpy		1340575	0					
ANR	1341266	ArgumentList	cbuf		1340575	1					
ANR	1341267	Argument	cbuf		1340575	0					
ANR	1341268	Identifier	cbuf		1340575	0					
ANR	1341269	Argument	in_block -> data		1340575	1					
ANR	1341270	PtrMemberAccess	in_block -> data		1340575	0					
ANR	1341271	Identifier	in_block		1340575	0					
ANR	1341272	Identifier	data		1340575	1					
ANR	1341273	Argument	block_len		1340575	2					
ANR	1341274	Identifier	block_len		1340575	0					
ANR	1341275	ExpressionStatement	clen = block_len	1901:12:61152:61168	1340575	1	True				
ANR	1341276	AssignmentExpression	clen = block_len		1340575	0		=			
ANR	1341277	Identifier	clen		1340575	0					
ANR	1341278	Identifier	block_len		1340575	1					
ANR	1341279	ExpressionStatement	node -> data_lengths [ block ] = clen	1903:8:61188:61220	1340575	3	True				
ANR	1341280	AssignmentExpression	node -> data_lengths [ block ] = clen		1340575	0		=			
ANR	1341281	ArrayIndexing	node -> data_lengths [ block ]		1340575	0					
ANR	1341282	PtrMemberAccess	node -> data_lengths		1340575	0					
ANR	1341283	Identifier	node		1340575	0					
ANR	1341284	Identifier	data_lengths		1340575	1					
ANR	1341285	Identifier	block		1340575	1					
ANR	1341286	Identifier	clen		1340575	1					
ANR	1341287	ExpressionStatement	node -> data [ block ] = malloc ( clen )	1904:8:61230:61262	1340575	4	True				
ANR	1341288	AssignmentExpression	node -> data [ block ] = malloc ( clen )		1340575	0		=			
ANR	1341289	ArrayIndexing	node -> data [ block ]		1340575	0					
ANR	1341290	PtrMemberAccess	node -> data		1340575	0					
ANR	1341291	Identifier	node		1340575	0					
ANR	1341292	Identifier	data		1340575	1					
ANR	1341293	Identifier	block		1340575	1					
ANR	1341294	CallExpression	malloc ( clen )		1340575	1					
ANR	1341295	Callee	malloc		1340575	0					
ANR	1341296	Identifier	malloc		1340575	0					
ANR	1341297	ArgumentList	clen		1340575	1					
ANR	1341298	Argument	clen		1340575	0					
ANR	1341299	Identifier	clen		1340575	0					
ANR	1341300	ExpressionStatement	"memcpy ( node -> data [ block ] , cbuf , clen )"	1905:8:61272:61309	1340575	5	True				
ANR	1341301	CallExpression	"memcpy ( node -> data [ block ] , cbuf , clen )"		1340575	0					
ANR	1341302	Callee	memcpy		1340575	0					
ANR	1341303	Identifier	memcpy		1340575	0					
ANR	1341304	ArgumentList	node -> data [ block ]		1340575	1					
ANR	1341305	Argument	node -> data [ block ]		1340575	0					
ANR	1341306	ArrayIndexing	node -> data [ block ]		1340575	0					
ANR	1341307	PtrMemberAccess	node -> data		1340575	0					
ANR	1341308	Identifier	node		1340575	0					
ANR	1341309	Identifier	data		1340575	1					
ANR	1341310	Identifier	block		1340575	1					
ANR	1341311	Argument	cbuf		1340575	1					
ANR	1341312	Identifier	cbuf		1340575	0					
ANR	1341313	Argument	clen		1340575	2					
ANR	1341314	Identifier	clen		1340575	0					
ANR	1341315	ExpressionStatement	block ++	1906:8:61319:61326	1340575	6	True				
ANR	1341316	PostIncDecOperationExpression	block ++		1340575	0					
ANR	1341317	Identifier	block		1340575	0					
ANR	1341318	IncDec	++		1340575	1					
ANR	1341319	ExpressionStatement	in_block = in_block -> next	1907:8:61336:61361	1340575	7	True				
ANR	1341320	AssignmentExpression	in_block = in_block -> next		1340575	0		=			
ANR	1341321	Identifier	in_block		1340575	0					
ANR	1341322	PtrMemberAccess	in_block -> next		1340575	1					
ANR	1341323	Identifier	in_block		1340575	0					
ANR	1341324	Identifier	next		1340575	1					
ANR	1341325	ExpressionStatement	"inode_write ( out , node , compression , * inode_count , totlen )"	1911:4:61409:61466	1340575	38	True				
ANR	1341326	CallExpression	"inode_write ( out , node , compression , * inode_count , totlen )"		1340575	0					
ANR	1341327	Callee	inode_write		1340575	0					
ANR	1341328	Identifier	inode_write		1340575	0					
ANR	1341329	ArgumentList	out		1340575	1					
ANR	1341330	Argument	out		1340575	0					
ANR	1341331	Identifier	out		1340575	0					
ANR	1341332	Argument	node		1340575	1					
ANR	1341333	Identifier	node		1340575	0					
ANR	1341334	Argument	compression		1340575	2					
ANR	1341335	Identifier	compression		1340575	0					
ANR	1341336	Argument	* inode_count		1340575	3					
ANR	1341337	UnaryOperationExpression	* inode_count		1340575	0					
ANR	1341338	UnaryOperator	*		1340575	0					
ANR	1341339	Identifier	inode_count		1340575	1					
ANR	1341340	Argument	totlen		1340575	4					
ANR	1341341	Identifier	totlen		1340575	0					
ANR	1341342	ExpressionStatement	inode_clear ( node )	1913:4:61491:61508	1340575	39	True				
ANR	1341343	CallExpression	inode_clear ( node )		1340575	0					
ANR	1341344	Callee	inode_clear		1340575	0					
ANR	1341345	Identifier	inode_clear		1340575	0					
ANR	1341346	ArgumentList	node		1340575	1					
ANR	1341347	Argument	node		1340575	0					
ANR	1341348	Identifier	node		1340575	0					
ANR	1341349	ExpressionStatement	( * inode_count ) ++	1914:4:61514:61530	1340575	40	True				
ANR	1341350	PostIncDecOperationExpression	( * inode_count ) ++		1340575	0					
ANR	1341351	UnaryOperationExpression	* inode_count		1340575	0					
ANR	1341352	UnaryOperator	*		1340575	0					
ANR	1341353	Identifier	inode_count		1340575	1					
ANR	1341354	IncDec	++		1340575	1					
ANR	1341355	Label	done :	1915:0:61532:61536	1340575	41	True				
ANR	1341356	Identifier	done		1340575	0					
ANR	1341357	ExpressionStatement	free ( node )	1916:4:61542:61552	1340575	42	True				
ANR	1341358	CallExpression	free ( node )		1340575	0					
ANR	1341359	Callee	free		1340575	0					
ANR	1341360	Identifier	free		1340575	0					
ANR	1341361	ArgumentList	node		1340575	1					
ANR	1341362	Argument	node		1340575	0					
ANR	1341363	Identifier	node		1340575	0					
ANR	1341364	ExpressionStatement	free ( cbuf )	1917:4:61558:61568	1340575	43	True				
ANR	1341365	CallExpression	free ( cbuf )		1340575	0					
ANR	1341366	Callee	free		1340575	0					
ANR	1341367	Identifier	free		1340575	0					
ANR	1341368	ArgumentList	cbuf		1340575	1					
ANR	1341369	Argument	cbuf		1340575	0					
ANR	1341370	Identifier	cbuf		1340575	0					
ANR	1341371	ExpressionStatement	free ( ubuf )	1918:4:61574:61584	1340575	44	True				
ANR	1341372	CallExpression	free ( ubuf )		1340575	0					
ANR	1341373	Callee	free		1340575	0					
ANR	1341374	Identifier	free		1340575	0					
ANR	1341375	ArgumentList	ubuf		1340575	1					
ANR	1341376	Argument	ubuf		1340575	0					
ANR	1341377	Identifier	ubuf		1340575	0					
ANR	1341378	ExpressionStatement	free ( prefixed_path )	1919:4:61590:61609	1340575	45	True				
ANR	1341379	CallExpression	free ( prefixed_path )		1340575	0					
ANR	1341380	Callee	free		1340575	0					
ANR	1341381	Identifier	free		1340575	0					
ANR	1341382	ArgumentList	prefixed_path		1340575	1					
ANR	1341383	Argument	prefixed_path		1340575	0					
ANR	1341384	Identifier	prefixed_path		1340575	0					
ANR	1341385	ExpressionStatement	free ( rom_filename )	1920:4:61615:61633	1340575	46	True				
ANR	1341386	CallExpression	free ( rom_filename )		1340575	0					
ANR	1341387	Callee	free		1340575	0					
ANR	1341388	Identifier	free		1340575	0					
ANR	1341389	ArgumentList	rom_filename		1340575	1					
ANR	1341390	Argument	rom_filename		1340575	0					
ANR	1341391	Identifier	rom_filename		1340575	0					
ANR	1341392	ReturnStatement	return code ;	1921:4:61639:61650	1340575	47	True				
ANR	1341393	Identifier	code		1340575	0					
ANR	1341394	ReturnType	int		1340575	1					
ANR	1341395	Identifier	process_initfile		1340575	2					
ANR	1341396	ParameterList	"char * initfile , char * gconfig_h , const char * os_prefix , const char * rom_prefix , int compression , int * inode_count , int * totlen , FILE * out"		1340575	3					
ANR	1341397	Parameter	char * initfile	1785:17:57382:57395	1340575	0	True				
ANR	1341398	ParameterType	char *		1340575	0					
ANR	1341399	Identifier	initfile		1340575	1					
ANR	1341400	Parameter	char * gconfig_h	1785:33:57398:57412	1340575	1	True				
ANR	1341401	ParameterType	char *		1340575	0					
ANR	1341402	Identifier	gconfig_h		1340575	1					
ANR	1341403	Parameter	const char * os_prefix	1785:50:57415:57435	1340575	2	True				
ANR	1341404	ParameterType	const char *		1340575	0					
ANR	1341405	Identifier	os_prefix		1340575	1					
ANR	1341406	Parameter	const char * rom_prefix	1786:17:57455:57476	1340575	3	True				
ANR	1341407	ParameterType	const char *		1340575	0					
ANR	1341408	Identifier	rom_prefix		1340575	1					
ANR	1341409	Parameter	int compression	1786:41:57479:57493	1340575	4	True				
ANR	1341410	ParameterType	int		1340575	0					
ANR	1341411	Identifier	compression		1340575	1					
ANR	1341412	Parameter	int * inode_count	1786:58:57496:57511	1340575	5	True				
ANR	1341413	ParameterType	int *		1340575	0					
ANR	1341414	Identifier	inode_count		1340575	1					
ANR	1341415	Parameter	int * totlen	1787:17:57531:57541	1340575	6	True				
ANR	1341416	ParameterType	int *		1340575	0					
ANR	1341417	Identifier	totlen		1340575	1					
ANR	1341418	Parameter	FILE * out	1787:30:57544:57552	1340575	7	True				
ANR	1341419	ParameterType	FILE *		1340575	0					
ANR	1341420	Identifier	out		1340575	1					
ANR	1341421	CFGEntryNode	ENTRY		1340575		True				
ANR	1341422	CFGExitNode	EXIT		1340575		True				
ANR	1341423	Symbol	prefixed_path		1340575						
ANR	1341424	Symbol	initfile		1340575						
ANR	1341425	Symbol	in_block -> data		1340575						
ANR	1341426	Symbol	comp_block_head		1340575						
ANR	1341427	Symbol	ibf . block		1340575						
ANR	1341428	Symbol	in_block		1340575						
ANR	1341429	Symbol	* comp_block		1340575						
ANR	1341430	Symbol	* inode_count		1340575						
ANR	1341431	Symbol	node -> data		1340575						
ANR	1341432	Symbol	pscompact_getcompactedblock		1340575						
ANR	1341433	Symbol	os_prefix		1340575						
ANR	1341434	Symbol	block		1340575						
ANR	1341435	Symbol	* node		1340575						
ANR	1341436	Symbol	cbuf		1340575						
ANR	1341437	Symbol	curr_block_p		1340575						
ANR	1341438	Symbol	* node -> data		1340575						
ANR	1341439	Symbol	ret		1340575						
ANR	1341440	Symbol	comp_block -> next		1340575						
ANR	1341441	Symbol	NULL		1340575						
ANR	1341442	Symbol	& ib_feof		1340575						
ANR	1341443	Symbol	rom_prefix		1340575						
ANR	1341444	Symbol	ibf . eof		1340575						
ANR	1341445	Symbol	in		1340575						
ANR	1341446	Symbol	compress		1340575						
ANR	1341447	Symbol	inode_count		1340575						
ANR	1341448	Symbol	node		1340575						
ANR	1341449	Symbol	* * node		1340575						
ANR	1341450	Symbol	rom_filename		1340575						
ANR	1341451	Symbol	* node -> data_lengths		1340575						
ANR	1341452	Symbol	ulen		1340575						
ANR	1341453	Symbol	in_block_head		1340575						
ANR	1341454	Symbol	compression		1340575						
ANR	1341455	Symbol	comp_block		1340575						
ANR	1341456	Symbol	in_block_tail		1340575						
ANR	1341457	Symbol	* in_block		1340575						
ANR	1341458	Symbol	psc		1340575						
ANR	1341459	Symbol	node -> disc_length		1340575						
ANR	1341460	Symbol	code		1340575						
ANR	1341461	Symbol	in_block_tail -> data		1340575						
ANR	1341462	Symbol	& clen		1340575						
ANR	1341463	Symbol	calloc		1340575						
ANR	1341464	Symbol	in_block_head -> next		1340575						
ANR	1341465	Symbol	Z_OK		1340575						
ANR	1341466	Symbol	ROMFS_CBUFSIZE		1340575						
ANR	1341467	Symbol	out		1340575						
ANR	1341468	Symbol	& ibf		1340575						
ANR	1341469	Symbol	totlen		1340575						
ANR	1341470	Symbol	node -> length		1340575						
ANR	1341471	Symbol	compaction		1340575						
ANR	1341472	Symbol	in_block -> next		1340575						
ANR	1341473	Symbol	& ib_getc		1340575						
ANR	1341474	Symbol	ibf . pos		1340575						
ANR	1341475	Symbol	malloc		1340575						
ANR	1341476	Symbol	fopen		1340575						
ANR	1341477	Symbol	& psc		1340575						
ANR	1341478	Symbol	* in_block_head		1340575						
ANR	1341479	Symbol	gconfig_h		1340575						
ANR	1341480	Symbol	blocks		1340575						
ANR	1341481	Symbol	block_len		1340575						
ANR	1341482	Symbol	ubuf		1340575						
ANR	1341483	Symbol	& ib_ungetc		1340575						
ANR	1341484	Symbol	ibf		1340575						
ANR	1341485	Symbol	comp_block -> data		1340575						
ANR	1341486	Symbol	ROMFS_BLOCKSIZE		1340575						
ANR	1341487	Symbol	* block		1340575						
ANR	1341488	Symbol	node -> name		1340575						
ANR	1341489	Symbol	node -> data_lengths		1340575						
ANR	1341490	Symbol	linebuf		1340575						
ANR	1341491	Symbol	clen		1340575						
ANR	1341492	Symbol	config		1340575						
ANR	1341493	Symbol	* in_block_tail		1340575						
ANR	1341494	Function	flush_line_buf	1924:0:61655:63177							
ANR	1341495	FunctionDef	flush_line_buf (int len)		1341494	0					
ANR	1341496	CompoundStatement		1925:24:61684:63177	1341494	0					
ANR	1341497	IdentifierDeclStatement	int remaining_len = len ;	1926:4:61690:61713	1341494	0	True				
ANR	1341498	IdentifierDecl	remaining_len = len		1341494	0					
ANR	1341499	IdentifierDeclType	int		1341494	0					
ANR	1341500	Identifier	remaining_len		1341494	1					
ANR	1341501	AssignmentExpression	remaining_len = len		1341494	2		=			
ANR	1341502	Identifier	len		1341494	0					
ANR	1341503	Identifier	len		1341494	1					
ANR	1341504	IdentifierDeclStatement	int move_len ;	1927:4:61719:61731	1341494	1	True				
ANR	1341505	IdentifierDecl	move_len		1341494	0					
ANR	1341506	IdentifierDeclType	int		1341494	0					
ANR	1341507	Identifier	move_len		1341494	1					
ANR	1341508	IdentifierDeclStatement	int line_offset = 0 ;	1928:4:61737:61756	1341494	2	True				
ANR	1341509	IdentifierDecl	line_offset = 0		1341494	0					
ANR	1341510	IdentifierDeclType	int		1341494	0					
ANR	1341511	Identifier	line_offset		1341494	1					
ANR	1341512	AssignmentExpression	line_offset = 0		1341494	2		=			
ANR	1341513	Identifier	line_offset		1341494	0					
ANR	1341514	PrimaryExpression	0		1341494	1					
ANR	1341515	IfStatement	if ( len > LINE_SIZE )		1341494	3					
ANR	1341516	Condition	len > LINE_SIZE	1930:8:61767:61781	1341494	0	True				
ANR	1341517	RelationalExpression	len > LINE_SIZE		1341494	0		>			
ANR	1341518	Identifier	len		1341494	0					
ANR	1341519	Identifier	LINE_SIZE		1341494	1					
ANR	1341520	CompoundStatement		6:25:99:99	1341494	1					
ANR	1341521	ExpressionStatement	"printf ( ""*** warning, flush_line called with len (%d) > LINE_SIZE (%d)\\n"" , len , LINE_SIZE )"	1931:8:61794:61899	1341494	0	True				
ANR	1341522	CallExpression	"printf ( ""*** warning, flush_line called with len (%d) > LINE_SIZE (%d)\\n"" , len , LINE_SIZE )"		1341494	0					
ANR	1341523	Callee	printf		1341494	0					
ANR	1341524	Identifier	printf		1341494	0					
ANR	1341525	ArgumentList	"""*** warning, flush_line called with len (%d) > LINE_SIZE (%d)\\n"""		1341494	1					
ANR	1341526	Argument	"""*** warning, flush_line called with len (%d) > LINE_SIZE (%d)\\n"""		1341494	0					
ANR	1341527	PrimaryExpression	"""*** warning, flush_line called with len (%d) > LINE_SIZE (%d)\\n"""		1341494	0					
ANR	1341528	Argument	len		1341494	1					
ANR	1341529	Identifier	len		1341494	0					
ANR	1341530	Argument	LINE_SIZE		1341494	2					
ANR	1341531	Identifier	LINE_SIZE		1341494	0					
ANR	1341532	ReturnStatement	return ;	1933:8:61909:61915	1341494	1	True				
ANR	1341533	IfStatement	if ( in_block_tail == NULL )		1341494	4					
ANR	1341534	Condition	in_block_tail == NULL	1936:8:62001:62021	1341494	0	True				
ANR	1341535	EqualityExpression	in_block_tail == NULL		1341494	0		==			
ANR	1341536	Identifier	in_block_tail		1341494	0					
ANR	1341537	Identifier	NULL		1341494	1					
ANR	1341538	CompoundStatement		12:31:339:339	1341494	1					
ANR	1341539	ExpressionStatement	"in_block_head = in_block_tail = calloc ( 1 , sizeof ( in_block_t ) )"	1937:8:62034:62095	1341494	0	True				
ANR	1341540	AssignmentExpression	"in_block_head = in_block_tail = calloc ( 1 , sizeof ( in_block_t ) )"		1341494	0		=			
ANR	1341541	Identifier	in_block_head		1341494	0					
ANR	1341542	AssignmentExpression	"in_block_tail = calloc ( 1 , sizeof ( in_block_t ) )"		1341494	1		=			
ANR	1341543	Identifier	in_block_tail		1341494	0					
ANR	1341544	CallExpression	"calloc ( 1 , sizeof ( in_block_t ) )"		1341494	1					
ANR	1341545	Callee	calloc		1341494	0					
ANR	1341546	Identifier	calloc		1341494	0					
ANR	1341547	ArgumentList	1		1341494	1					
ANR	1341548	Argument	1		1341494	0					
ANR	1341549	PrimaryExpression	1		1341494	0					
ANR	1341550	Argument	sizeof ( in_block_t )		1341494	1					
ANR	1341551	SizeofExpression	sizeof ( in_block_t )		1341494	0					
ANR	1341552	Sizeof	sizeof		1341494	0					
ANR	1341553	SizeofOperand	in_block_t		1341494	1					
ANR	1341554	ExpressionStatement	in_block_tail -> next = NULL	1938:8:62105:62131	1341494	1	True				
ANR	1341555	AssignmentExpression	in_block_tail -> next = NULL		1341494	0		=			
ANR	1341556	PtrMemberAccess	in_block_tail -> next		1341494	0					
ANR	1341557	Identifier	in_block_tail		1341494	0					
ANR	1341558	Identifier	next		1341494	1					
ANR	1341559	Identifier	NULL		1341494	1					
ANR	1341560	ExpressionStatement	curr_block_p = in_block_head -> data	1939:8:62179:62213	1341494	2	True				
ANR	1341561	AssignmentExpression	curr_block_p = in_block_head -> data		1341494	0		=			
ANR	1341562	Identifier	curr_block_p		1341494	0					
ANR	1341563	PtrMemberAccess	in_block_head -> data		1341494	1					
ANR	1341564	Identifier	in_block_head		1341494	0					
ANR	1341565	Identifier	data		1341494	1					
ANR	1341566	ExpressionStatement	curr_block_end = curr_block_p + ROMFS_BLOCKSIZE	1940:8:62223:62270	1341494	3	True				
ANR	1341567	AssignmentExpression	curr_block_end = curr_block_p + ROMFS_BLOCKSIZE		1341494	0		=			
ANR	1341568	Identifier	curr_block_end		1341494	0					
ANR	1341569	AdditiveExpression	curr_block_p + ROMFS_BLOCKSIZE		1341494	1		+			
ANR	1341570	Identifier	curr_block_p		1341494	0					
ANR	1341571	Identifier	ROMFS_BLOCKSIZE		1341494	1					
ANR	1341572	DoStatement	do		1341494	5					
ANR	1341573	CompoundStatement		19:7:649:649	1341494	0					
ANR	1341574	ExpressionStatement	"move_len = min ( remaining_len , curr_block_end - curr_block_p )"	1944:8:62344:62404	1341494	0	True				
ANR	1341575	AssignmentExpression	"move_len = min ( remaining_len , curr_block_end - curr_block_p )"		1341494	0		=			
ANR	1341576	Identifier	move_len		1341494	0					
ANR	1341577	CallExpression	"min ( remaining_len , curr_block_end - curr_block_p )"		1341494	1					
ANR	1341578	Callee	min		1341494	0					
ANR	1341579	Identifier	min		1341494	0					
ANR	1341580	ArgumentList	remaining_len		1341494	1					
ANR	1341581	Argument	remaining_len		1341494	0					
ANR	1341582	Identifier	remaining_len		1341494	0					
ANR	1341583	Argument	curr_block_end - curr_block_p		1341494	1					
ANR	1341584	AdditiveExpression	curr_block_end - curr_block_p		1341494	0		-			
ANR	1341585	Identifier	curr_block_end		1341494	0					
ANR	1341586	Identifier	curr_block_p		1341494	1					
ANR	1341587	ExpressionStatement	"memcpy ( curr_block_p , linebuf + line_offset , move_len )"	1945:8:62414:62467	1341494	1	True				
ANR	1341588	CallExpression	"memcpy ( curr_block_p , linebuf + line_offset , move_len )"		1341494	0					
ANR	1341589	Callee	memcpy		1341494	0					
ANR	1341590	Identifier	memcpy		1341494	0					
ANR	1341591	ArgumentList	curr_block_p		1341494	1					
ANR	1341592	Argument	curr_block_p		1341494	0					
ANR	1341593	Identifier	curr_block_p		1341494	0					
ANR	1341594	Argument	linebuf + line_offset		1341494	1					
ANR	1341595	AdditiveExpression	linebuf + line_offset		1341494	0		+			
ANR	1341596	Identifier	linebuf		1341494	0					
ANR	1341597	Identifier	line_offset		1341494	1					
ANR	1341598	Argument	move_len		1341494	2					
ANR	1341599	Identifier	move_len		1341494	0					
ANR	1341600	ExpressionStatement	curr_block_p += move_len	1946:8:62477:62501	1341494	2	True				
ANR	1341601	AssignmentExpression	curr_block_p += move_len		1341494	0		+=			
ANR	1341602	Identifier	curr_block_p		1341494	0					
ANR	1341603	Identifier	move_len		1341494	1					
ANR	1341604	ExpressionStatement	line_offset += move_len	1947:8:62511:62534	1341494	3	True				
ANR	1341605	AssignmentExpression	line_offset += move_len		1341494	0		+=			
ANR	1341606	Identifier	line_offset		1341494	0					
ANR	1341607	Identifier	move_len		1341494	1					
ANR	1341608	IfStatement	if ( curr_block_p == curr_block_end )		1341494	4					
ANR	1341609	Condition	curr_block_p == curr_block_end	1948:12:62548:62577	1341494	0	True				
ANR	1341610	EqualityExpression	curr_block_p == curr_block_end		1341494	0		==			
ANR	1341611	Identifier	curr_block_p		1341494	0					
ANR	1341612	Identifier	curr_block_end		1341494	1					
ANR	1341613	CompoundStatement		24:44:895:895	1341494	1					
ANR	1341614	ExpressionStatement	"in_block_tail -> next = calloc ( 1 , sizeof ( in_block_t ) )"	1950:12:62666:62718	1341494	0	True				
ANR	1341615	AssignmentExpression	"in_block_tail -> next = calloc ( 1 , sizeof ( in_block_t ) )"		1341494	0		=			
ANR	1341616	PtrMemberAccess	in_block_tail -> next		1341494	0					
ANR	1341617	Identifier	in_block_tail		1341494	0					
ANR	1341618	Identifier	next		1341494	1					
ANR	1341619	CallExpression	"calloc ( 1 , sizeof ( in_block_t ) )"		1341494	1					
ANR	1341620	Callee	calloc		1341494	0					
ANR	1341621	Identifier	calloc		1341494	0					
ANR	1341622	ArgumentList	1		1341494	1					
ANR	1341623	Argument	1		1341494	0					
ANR	1341624	PrimaryExpression	1		1341494	0					
ANR	1341625	Argument	sizeof ( in_block_t )		1341494	1					
ANR	1341626	SizeofExpression	sizeof ( in_block_t )		1341494	0					
ANR	1341627	Sizeof	sizeof		1341494	0					
ANR	1341628	SizeofOperand	in_block_t		1341494	1					
ANR	1341629	ExpressionStatement	in_block_tail = in_block_tail -> next	1951:12:62732:62767	1341494	1	True				
ANR	1341630	AssignmentExpression	in_block_tail = in_block_tail -> next		1341494	0		=			
ANR	1341631	Identifier	in_block_tail		1341494	0					
ANR	1341632	PtrMemberAccess	in_block_tail -> next		1341494	1					
ANR	1341633	Identifier	in_block_tail		1341494	0					
ANR	1341634	Identifier	next		1341494	1					
ANR	1341635	ExpressionStatement	in_block_tail -> next = NULL	1952:12:62781:62807	1341494	2	True				
ANR	1341636	AssignmentExpression	in_block_tail -> next = NULL		1341494	0		=			
ANR	1341637	PtrMemberAccess	in_block_tail -> next		1341494	0					
ANR	1341638	Identifier	in_block_tail		1341494	0					
ANR	1341639	Identifier	next		1341494	1					
ANR	1341640	Identifier	NULL		1341494	1					
ANR	1341641	ExpressionStatement	curr_block_p = in_block_tail -> data	1953:12:62859:62893	1341494	3	True				
ANR	1341642	AssignmentExpression	curr_block_p = in_block_tail -> data		1341494	0		=			
ANR	1341643	Identifier	curr_block_p		1341494	0					
ANR	1341644	PtrMemberAccess	in_block_tail -> data		1341494	1					
ANR	1341645	Identifier	in_block_tail		1341494	0					
ANR	1341646	Identifier	data		1341494	1					
ANR	1341647	ExpressionStatement	curr_block_end = curr_block_p + ROMFS_BLOCKSIZE	1954:12:62907:62954	1341494	4	True				
ANR	1341648	AssignmentExpression	curr_block_end = curr_block_p + ROMFS_BLOCKSIZE		1341494	0		=			
ANR	1341649	Identifier	curr_block_end		1341494	0					
ANR	1341650	AdditiveExpression	curr_block_p + ROMFS_BLOCKSIZE		1341494	1		+			
ANR	1341651	Identifier	curr_block_p		1341494	0					
ANR	1341652	Identifier	ROMFS_BLOCKSIZE		1341494	1					
ANR	1341653	ExpressionStatement	"remaining_len = max ( 0 , remaining_len - move_len )"	1956:8:62974:63022	1341494	5	True				
ANR	1341654	AssignmentExpression	"remaining_len = max ( 0 , remaining_len - move_len )"		1341494	0		=			
ANR	1341655	Identifier	remaining_len		1341494	0					
ANR	1341656	CallExpression	"max ( 0 , remaining_len - move_len )"		1341494	1					
ANR	1341657	Callee	max		1341494	0					
ANR	1341658	Identifier	max		1341494	0					
ANR	1341659	ArgumentList	0		1341494	1					
ANR	1341660	Argument	0		1341494	0					
ANR	1341661	PrimaryExpression	0		1341494	0					
ANR	1341662	Argument	remaining_len - move_len		1341494	1					
ANR	1341663	AdditiveExpression	remaining_len - move_len		1341494	0		-			
ANR	1341664	Identifier	remaining_len		1341494	0					
ANR	1341665	Identifier	move_len		1341494	1					
ANR	1341666	Condition	remaining_len > 0	1957:13:63037:63053	1341494	1	True				
ANR	1341667	RelationalExpression	remaining_len > 0		1341494	0		>			
ANR	1341668	Identifier	remaining_len		1341494	0					
ANR	1341669	PrimaryExpression	0		1341494	1					
ANR	1341670	ExpressionStatement	"memset ( linebuf , 0 , sizeof ( linebuf ) )"	1960:4:63140:63175	1341494	6	True				
ANR	1341671	CallExpression	"memset ( linebuf , 0 , sizeof ( linebuf ) )"		1341494	0					
ANR	1341672	Callee	memset		1341494	0					
ANR	1341673	Identifier	memset		1341494	0					
ANR	1341674	ArgumentList	linebuf		1341494	1					
ANR	1341675	Argument	linebuf		1341494	0					
ANR	1341676	Identifier	linebuf		1341494	0					
ANR	1341677	Argument	0		1341494	1					
ANR	1341678	PrimaryExpression	0		1341494	0					
ANR	1341679	Argument	sizeof ( linebuf )		1341494	2					
ANR	1341680	SizeofExpression	sizeof ( linebuf )		1341494	0					
ANR	1341681	Sizeof	sizeof		1341494	0					
ANR	1341682	SizeofOperand	linebuf		1341494	1					
ANR	1341683	ReturnType	void		1341494	1					
ANR	1341684	Identifier	flush_line_buf		1341494	2					
ANR	1341685	ParameterList	int len		1341494	3					
ANR	1341686	Parameter	int len	1925:15:61675:61681	1341494	0	True				
ANR	1341687	ParameterType	int		1341494	0					
ANR	1341688	Identifier	len		1341494	1					
ANR	1341689	CFGEntryNode	ENTRY		1341494		True				
ANR	1341690	CFGExitNode	EXIT		1341494		True				
ANR	1341691	Symbol	LINE_SIZE		1341494						
ANR	1341692	Symbol	NULL		1341494						
ANR	1341693	Symbol	in_block_head -> data		1341494						
ANR	1341694	Symbol	* in_block_head		1341494						
ANR	1341695	Symbol	in_block_tail -> data		1341494						
ANR	1341696	Symbol	max		1341494						
ANR	1341697	Symbol	calloc		1341494						
ANR	1341698	Symbol	in_block_tail -> next		1341494						
ANR	1341699	Symbol	move_len		1341494						
ANR	1341700	Symbol	ROMFS_BLOCKSIZE		1341494						
ANR	1341701	Symbol	min		1341494						
ANR	1341702	Symbol	len		1341494						
ANR	1341703	Symbol	linebuf		1341494						
ANR	1341704	Symbol	in_block_head		1341494						
ANR	1341705	Symbol	in_block_tail		1341494						
ANR	1341706	Symbol	curr_block_end		1341494						
ANR	1341707	Symbol	remaining_len		1341494						
ANR	1341708	Symbol	line_offset		1341494						
ANR	1341709	Symbol	* in_block_tail		1341494						
ANR	1341710	Symbol	curr_block_p		1341494						
ANR	1341711	Function	rl	1964:0:63214:63853							
ANR	1341712	FunctionDef	"rl (FILE * in , char * str , int len)"		1341711	0					
ANR	1341713	CompoundStatement		1966:0:63253:63853	1341711	0					
ANR	1341714	IdentifierDeclStatement	"int i = 0 , c = getc ( in ) ;"	1972:4:63430:63453	1341711	0	True				
ANR	1341715	IdentifierDecl	i = 0		1341711	0					
ANR	1341716	IdentifierDeclType	int		1341711	0					
ANR	1341717	Identifier	i		1341711	1					
ANR	1341718	AssignmentExpression	i = 0		1341711	2		=			
ANR	1341719	Identifier	i		1341711	0					
ANR	1341720	PrimaryExpression	0		1341711	1					
ANR	1341721	IdentifierDecl	c = getc ( in )		1341711	1					
ANR	1341722	IdentifierDeclType	int		1341711	0					
ANR	1341723	Identifier	c		1341711	1					
ANR	1341724	AssignmentExpression	c = getc ( in )		1341711	2		=			
ANR	1341725	Identifier	c		1341711	0					
ANR	1341726	CallExpression	getc ( in )		1341711	1					
ANR	1341727	Callee	getc		1341711	0					
ANR	1341728	Identifier	getc		1341711	0					
ANR	1341729	ArgumentList	in		1341711	1					
ANR	1341730	Argument	in		1341711	0					
ANR	1341731	Identifier	in		1341711	0					
ANR	1341732	IfStatement	if ( c < 0 )		1341711	1					
ANR	1341733	Condition	c < 0	1974:8:63464:63468	1341711	0	True				
ANR	1341734	RelationalExpression	c < 0		1341711	0		<			
ANR	1341735	Identifier	c		1341711	0					
ANR	1341736	PrimaryExpression	0		1341711	1					
ANR	1341737	ReturnStatement	return false ;	1975:8:63479:63491	1341711	1	True				
ANR	1341738	Identifier	false		1341711	0					
ANR	1341739	WhileStatement	while ( i < len - 1 )		1341711	2					
ANR	1341740	Condition	i < len - 1	1976:11:63504:63514	1341711	0	True				
ANR	1341741	RelationalExpression	i < len - 1		1341711	0		<			
ANR	1341742	Identifier	i		1341711	0					
ANR	1341743	AdditiveExpression	len - 1		1341711	1		-			
ANR	1341744	Identifier	len		1341711	0					
ANR	1341745	PrimaryExpression	1		1341711	1					
ANR	1341746	CompoundStatement		11:24:263:263	1341711	1					
ANR	1341747	IfStatement	if ( c < 0 || c == 10 )		1341711	0					
ANR	1341748	Condition	c < 0 || c == 10	1977:12:63531:63546	1341711	0	True				
ANR	1341749	OrExpression	c < 0 || c == 10		1341711	0		||			
ANR	1341750	RelationalExpression	c < 0		1341711	0		<			
ANR	1341751	Identifier	c		1341711	0					
ANR	1341752	PrimaryExpression	0		1341711	1					
ANR	1341753	EqualityExpression	c == 10		1341711	1		==			
ANR	1341754	Identifier	c		1341711	0					
ANR	1341755	PrimaryExpression	10		1341711	1					
ANR	1341756	BreakStatement	break ;	1978:12:63581:63586	1341711	1	True				
ANR	1341757	IfStatement	if ( c == 13 )		1341711	1					
ANR	1341758	Condition	c == 13	1979:12:63600:63606	1341711	0	True				
ANR	1341759	EqualityExpression	c == 13		1341711	0		==			
ANR	1341760	Identifier	c		1341711	0					
ANR	1341761	PrimaryExpression	13		1341711	1					
ANR	1341762	CompoundStatement		14:21:355:355	1341711	1					
ANR	1341763	ExpressionStatement	c = getc ( in )	1980:12:63642:63654	1341711	0	True				
ANR	1341764	AssignmentExpression	c = getc ( in )		1341711	0		=			
ANR	1341765	Identifier	c		1341711	0					
ANR	1341766	CallExpression	getc ( in )		1341711	1					
ANR	1341767	Callee	getc		1341711	0					
ANR	1341768	Identifier	getc		1341711	0					
ANR	1341769	ArgumentList	in		1341711	1					
ANR	1341770	Argument	in		1341711	0					
ANR	1341771	Identifier	in		1341711	0					
ANR	1341772	IfStatement	if ( c != 10 && c >= 0 )		1341711	1					
ANR	1341773	Condition	c != 10 && c >= 0	1981:16:63672:63688	1341711	0	True				
ANR	1341774	AndExpression	c != 10 && c >= 0		1341711	0		&&			
ANR	1341775	EqualityExpression	c != 10		1341711	0		!=			
ANR	1341776	Identifier	c		1341711	0					
ANR	1341777	PrimaryExpression	10		1341711	1					
ANR	1341778	RelationalExpression	c >= 0		1341711	1		>=			
ANR	1341779	Identifier	c		1341711	0					
ANR	1341780	PrimaryExpression	0		1341711	1					
ANR	1341781	ExpressionStatement	"ungetc ( c , in )"	1982:16:63726:63739	1341711	1	True				
ANR	1341782	CallExpression	"ungetc ( c , in )"		1341711	0					
ANR	1341783	Callee	ungetc		1341711	0					
ANR	1341784	Identifier	ungetc		1341711	0					
ANR	1341785	ArgumentList	c		1341711	1					
ANR	1341786	Argument	c		1341711	0					
ANR	1341787	Identifier	c		1341711	0					
ANR	1341788	Argument	in		1341711	1					
ANR	1341789	Identifier	in		1341711	0					
ANR	1341790	BreakStatement	break ;	1983:12:63753:63758	1341711	2	True				
ANR	1341791	ExpressionStatement	str [ i ++ ] = c	1985:8:63778:63790	1341711	2	True				
ANR	1341792	AssignmentExpression	str [ i ++ ] = c		1341711	0		=			
ANR	1341793	ArrayIndexing	str [ i ++ ]		1341711	0					
ANR	1341794	Identifier	str		1341711	0					
ANR	1341795	PostIncDecOperationExpression	i ++		1341711	1					
ANR	1341796	Identifier	i		1341711	0					
ANR	1341797	IncDec	++		1341711	1					
ANR	1341798	Identifier	c		1341711	1					
ANR	1341799	ExpressionStatement	c = getc ( in )	1986:8:63800:63812	1341711	3	True				
ANR	1341800	AssignmentExpression	c = getc ( in )		1341711	0		=			
ANR	1341801	Identifier	c		1341711	0					
ANR	1341802	CallExpression	getc ( in )		1341711	1					
ANR	1341803	Callee	getc		1341711	0					
ANR	1341804	Identifier	getc		1341711	0					
ANR	1341805	ArgumentList	in		1341711	1					
ANR	1341806	Argument	in		1341711	0					
ANR	1341807	Identifier	in		1341711	0					
ANR	1341808	ExpressionStatement	str [ i ] = 0	1988:4:63824:63834	1341711	3	True				
ANR	1341809	AssignmentExpression	str [ i ] = 0		1341711	0		=			
ANR	1341810	ArrayIndexing	str [ i ]		1341711	0					
ANR	1341811	Identifier	str		1341711	0					
ANR	1341812	Identifier	i		1341711	1					
ANR	1341813	PrimaryExpression	0		1341711	1					
ANR	1341814	ReturnStatement	return true ;	1989:4:63840:63851	1341711	4	True				
ANR	1341815	Identifier	true		1341711	0					
ANR	1341816	ReturnType	bool		1341711	1					
ANR	1341817	Identifier	rl		1341711	2					
ANR	1341818	ParameterList	"FILE * in , char * str , int len"		1341711	3					
ANR	1341819	Parameter	FILE * in	1965:3:63222:63230	1341711	0	True				
ANR	1341820	ParameterType	FILE *		1341711	0					
ANR	1341821	Identifier	in		1341711	1					
ANR	1341822	Parameter	char * str	1965:14:63233:63241	1341711	1	True				
ANR	1341823	ParameterType	char *		1341711	0					
ANR	1341824	Identifier	str		1341711	1					
ANR	1341825	Parameter	int len	1965:25:63244:63250	1341711	2	True				
ANR	1341826	ParameterType	int		1341711	0					
ANR	1341827	Identifier	len		1341711	1					
ANR	1341828	CFGEntryNode	ENTRY		1341711		True				
ANR	1341829	CFGExitNode	EXIT		1341711		True				
ANR	1341830	Symbol	str		1341711						
ANR	1341831	Symbol	c		1341711						
ANR	1341832	Symbol	* i		1341711						
ANR	1341833	Symbol	len		1341711						
ANR	1341834	Symbol	in		1341711						
ANR	1341835	Symbol	false		1341711						
ANR	1341836	Symbol	true		1341711						
ANR	1341837	Symbol	i		1341711						
ANR	1341838	Symbol	* str		1341711						
ANR	1341839	Symbol	getc		1341711						
ANR	1341840	Function	wsc	1993:0:63902:64504							
ANR	1341841	FunctionDef	"wsc (const byte * str , int len)"		1341840	0					
ANR	1341842	CompoundStatement		1995:0:63937:64504	1341840	0					
ANR	1341843	IdentifierDeclStatement	int n = 0 ;	1996:4:63943:63952	1341840	0	True				
ANR	1341844	IdentifierDecl	n = 0		1341840	0					
ANR	1341845	IdentifierDeclType	int		1341840	0					
ANR	1341846	Identifier	n		1341840	1					
ANR	1341847	AssignmentExpression	n = 0		1341840	2		=			
ANR	1341848	Identifier	n		1341840	0					
ANR	1341849	PrimaryExpression	0		1341840	1					
ANR	1341850	IdentifierDeclStatement	int i ;	1997:4:63958:63963	1341840	1	True				
ANR	1341851	IdentifierDecl	i		1341840	0					
ANR	1341852	IdentifierDeclType	int		1341840	0					
ANR	1341853	Identifier	i		1341840	1					
ANR	1341854	IfStatement	if ( len >= LINE_SIZE )		1341840	2					
ANR	1341855	Condition	len >= LINE_SIZE	1999:8:63974:63989	1341840	0	True				
ANR	1341856	RelationalExpression	len >= LINE_SIZE		1341840	0		>=			
ANR	1341857	Identifier	len		1341840	0					
ANR	1341858	Identifier	LINE_SIZE		1341840	1					
ANR	1341859	ExpressionStatement	exit ( 1 )	2000:8:64000:64007	1341840	1	True				
ANR	1341860	CallExpression	exit ( 1 )		1341840	0					
ANR	1341861	Callee	exit		1341840	0					
ANR	1341862	Identifier	exit		1341840	0					
ANR	1341863	ArgumentList	1		1341840	1					
ANR	1341864	Argument	1		1341840	0					
ANR	1341865	PrimaryExpression	1		1341840	0					
ANR	1341866	ForStatement	for ( i = 0 ; i < len ; ++ i )		1341840	3					
ANR	1341867	ForInit	i = 0 ;	2002:9:64019:64024	1341840	0	True				
ANR	1341868	AssignmentExpression	i = 0		1341840	0		=			
ANR	1341869	Identifier	i		1341840	0					
ANR	1341870	PrimaryExpression	0		1341840	1					
ANR	1341871	Condition	i < len	2002:16:64026:64032	1341840	1	True				
ANR	1341872	RelationalExpression	i < len		1341840	0		<			
ANR	1341873	Identifier	i		1341840	0					
ANR	1341874	Identifier	len		1341840	1					
ANR	1341875	UnaryExpression	++ i	2002:25:64035:64037	1341840	2	True				
ANR	1341876	IncDec	++		1341840	0					
ANR	1341877	Identifier	i		1341840	1					
ANR	1341878	CompoundStatement		9:8:112:126	1341840	3					
ANR	1341879	IdentifierDeclStatement	int c = str [ i ] ;	2003:8:64050:64064	1341840	0	True				
ANR	1341880	IdentifierDecl	c = str [ i ]		1341840	0					
ANR	1341881	IdentifierDeclType	int		1341840	0					
ANR	1341882	Identifier	c		1341840	1					
ANR	1341883	AssignmentExpression	c = str [ i ]		1341840	2		=			
ANR	1341884	Identifier	c		1341840	0					
ANR	1341885	ArrayIndexing	str [ i ]		1341840	1					
ANR	1341886	Identifier	str		1341840	0					
ANR	1341887	Identifier	i		1341840	1					
ANR	1341888	ExpressionStatement	"sprintf ( linebuf , ( c < 32 || c >= 127 ? ""%d,"" : c == '\\'' || c == '\\\\' ? ""'\\\\%c',"" : ""'%c',"" ) , c )"	2005:8:64075:64220	1341840	1	True				
ANR	1341889	CallExpression	"sprintf ( linebuf , ( c < 32 || c >= 127 ? ""%d,"" : c == '\\'' || c == '\\\\' ? ""'\\\\%c',"" : ""'%c',"" ) , c )"		1341840	0					
ANR	1341890	Callee	sprintf		1341840	0					
ANR	1341891	Identifier	sprintf		1341840	0					
ANR	1341892	ArgumentList	linebuf		1341840	1					
ANR	1341893	Argument	linebuf		1341840	0					
ANR	1341894	Identifier	linebuf		1341840	0					
ANR	1341895	Argument	"c < 32 || c >= 127 ? ""%d,"" : c == '\\'' || c == '\\\\' ? ""'\\\\%c',"" : ""'%c',"""		1341840	1					
ANR	1341896	ConditionalExpression	"c < 32 || c >= 127 ? ""%d,"" : c == '\\'' || c == '\\\\' ? ""'\\\\%c',"" : ""'%c',"""		1341840	0					
ANR	1341897	Condition	c < 32 || c >= 127		1341840	0					
ANR	1341898	OrExpression	c < 32 || c >= 127		1341840	0		||			
ANR	1341899	RelationalExpression	c < 32		1341840	0		<			
ANR	1341900	Identifier	c		1341840	0					
ANR	1341901	PrimaryExpression	32		1341840	1					
ANR	1341902	RelationalExpression	c >= 127		1341840	1		>=			
ANR	1341903	Identifier	c		1341840	0					
ANR	1341904	PrimaryExpression	127		1341840	1					
ANR	1341905	PrimaryExpression	"""%d,"""		1341840	1					
ANR	1341906	ConditionalExpression	"c == '\\'' || c == '\\\\' ? ""'\\\\%c',"" : ""'%c',"""		1341840	2					
ANR	1341907	Condition	c == '\\'' || c == '\\\\'		1341840	0					
ANR	1341908	OrExpression	c == '\\'' || c == '\\\\'		1341840	0		||			
ANR	1341909	EqualityExpression	c == '\\''		1341840	0		==			
ANR	1341910	Identifier	c		1341840	0					
ANR	1341911	PrimaryExpression	'\\''		1341840	1					
ANR	1341912	EqualityExpression	c == '\\\\'		1341840	1		==			
ANR	1341913	Identifier	c		1341840	0					
ANR	1341914	PrimaryExpression	'\\\\'		1341840	1					
ANR	1341915	PrimaryExpression	"""'\\\\%c',"""		1341840	1					
ANR	1341916	PrimaryExpression	"""'%c',"""		1341840	2					
ANR	1341917	Argument	c		1341840	2					
ANR	1341918	Identifier	c		1341840	0					
ANR	1341919	ExpressionStatement	flush_line_buf ( strlen ( linebuf ) )	2009:8:64230:64261	1341840	2	True				
ANR	1341920	CallExpression	flush_line_buf ( strlen ( linebuf ) )		1341840	0					
ANR	1341921	Callee	flush_line_buf		1341840	0					
ANR	1341922	Identifier	flush_line_buf		1341840	0					
ANR	1341923	ArgumentList	strlen ( linebuf )		1341840	1					
ANR	1341924	Argument	strlen ( linebuf )		1341840	0					
ANR	1341925	CallExpression	strlen ( linebuf )		1341840	0					
ANR	1341926	Callee	strlen		1341840	0					
ANR	1341927	Identifier	strlen		1341840	0					
ANR	1341928	ArgumentList	linebuf		1341840	1					
ANR	1341929	Argument	linebuf		1341840	0					
ANR	1341930	Identifier	linebuf		1341840	0					
ANR	1341931	IfStatement	if ( ++ n == 15 )		1341840	3					
ANR	1341932	Condition	++ n == 15	2010:12:64275:64283	1341840	0	True				
ANR	1341933	EqualityExpression	++ n == 15		1341840	0		==			
ANR	1341934	UnaryExpression	++ n		1341840	0					
ANR	1341935	IncDec	++		1341840	0					
ANR	1341936	Identifier	n		1341840	1					
ANR	1341937	PrimaryExpression	15		1341840	1					
ANR	1341938	CompoundStatement		16:23:348:348	1341840	1					
ANR	1341939	ExpressionStatement	linebuf [ 0 ] = '\\n'	2011:12:64300:64317	1341840	0	True				
ANR	1341940	AssignmentExpression	linebuf [ 0 ] = '\\n'		1341840	0		=			
ANR	1341941	ArrayIndexing	linebuf [ 0 ]		1341840	0					
ANR	1341942	Identifier	linebuf		1341840	0					
ANR	1341943	PrimaryExpression	0		1341840	1					
ANR	1341944	PrimaryExpression	'\\n'		1341840	1					
ANR	1341945	ExpressionStatement	flush_line_buf ( 1 )	2012:12:64331:64348	1341840	1	True				
ANR	1341946	CallExpression	flush_line_buf ( 1 )		1341840	0					
ANR	1341947	Callee	flush_line_buf		1341840	0					
ANR	1341948	Identifier	flush_line_buf		1341840	0					
ANR	1341949	ArgumentList	1		1341840	1					
ANR	1341950	Argument	1		1341840	0					
ANR	1341951	PrimaryExpression	1		1341840	0					
ANR	1341952	ExpressionStatement	n = 0	2013:12:64362:64367	1341840	2	True				
ANR	1341953	AssignmentExpression	n = 0		1341840	0		=			
ANR	1341954	Identifier	n		1341840	0					
ANR	1341955	PrimaryExpression	0		1341840	1					
ANR	1341956	IfStatement	if ( n != 0 )		1341840	4					
ANR	1341957	Condition	n != 0	2016:8:64393:64398	1341840	0	True				
ANR	1341958	EqualityExpression	n != 0		1341840	0		!=			
ANR	1341959	Identifier	n		1341840	0					
ANR	1341960	PrimaryExpression	0		1341840	1					
ANR	1341961	CompoundStatement		22:16:463:463	1341840	1					
ANR	1341962	ExpressionStatement	flush_line_buf ( strlen ( linebuf ) )	2017:8:64411:64442	1341840	0	True				
ANR	1341963	CallExpression	flush_line_buf ( strlen ( linebuf ) )		1341840	0					
ANR	1341964	Callee	flush_line_buf		1341840	0					
ANR	1341965	Identifier	flush_line_buf		1341840	0					
ANR	1341966	ArgumentList	strlen ( linebuf )		1341840	1					
ANR	1341967	Argument	strlen ( linebuf )		1341840	0					
ANR	1341968	CallExpression	strlen ( linebuf )		1341840	0					
ANR	1341969	Callee	strlen		1341840	0					
ANR	1341970	Identifier	strlen		1341840	0					
ANR	1341971	ArgumentList	linebuf		1341840	1					
ANR	1341972	Argument	linebuf		1341840	0					
ANR	1341973	Identifier	linebuf		1341840	0					
ANR	1341974	ExpressionStatement	linebuf [ 0 ] = '\\n'	2018:8:64452:64469	1341840	1	True				
ANR	1341975	AssignmentExpression	linebuf [ 0 ] = '\\n'		1341840	0		=			
ANR	1341976	ArrayIndexing	linebuf [ 0 ]		1341840	0					
ANR	1341977	Identifier	linebuf		1341840	0					
ANR	1341978	PrimaryExpression	0		1341840	1					
ANR	1341979	PrimaryExpression	'\\n'		1341840	1					
ANR	1341980	ExpressionStatement	flush_line_buf ( 1 )	2019:8:64479:64496	1341840	2	True				
ANR	1341981	CallExpression	flush_line_buf ( 1 )		1341840	0					
ANR	1341982	Callee	flush_line_buf		1341840	0					
ANR	1341983	Identifier	flush_line_buf		1341840	0					
ANR	1341984	ArgumentList	1		1341840	1					
ANR	1341985	Argument	1		1341840	0					
ANR	1341986	PrimaryExpression	1		1341840	0					
ANR	1341987	ReturnType	void		1341840	1					
ANR	1341988	Identifier	wsc		1341840	2					
ANR	1341989	ParameterList	"const byte * str , int len"		1341840	3					
ANR	1341990	Parameter	const byte * str	1994:4:63911:63925	1341840	0	True				
ANR	1341991	ParameterType	const byte *		1341840	0					
ANR	1341992	Identifier	str		1341840	1					
ANR	1341993	Parameter	int len	1994:21:63928:63934	1341840	1	True				
ANR	1341994	ParameterType	int		1341840	0					
ANR	1341995	Identifier	len		1341840	1					
ANR	1341996	CFGEntryNode	ENTRY		1341840		True				
ANR	1341997	CFGExitNode	EXIT		1341840		True				
ANR	1341998	Symbol	str		1341840						
ANR	1341999	Symbol	LINE_SIZE		1341840						
ANR	1342000	Symbol	strlen		1341840						
ANR	1342001	Symbol	* linebuf		1341840						
ANR	1342002	Symbol	c		1341840						
ANR	1342003	Symbol	* i		1341840						
ANR	1342004	Symbol	len		1341840						
ANR	1342005	Symbol	linebuf		1341840						
ANR	1342006	Symbol	i		1341840						
ANR	1342007	Symbol	* str		1341840						
ANR	1342008	Symbol	n		1341840						
ANR	1342009	Function	ws	2022:0:64506:64642							
ANR	1342010	FunctionDef	"ws (const byte * str , int len)"		1342009	0					
ANR	1342011	CompoundStatement		2024:0:64540:64642	1342009	0					
ANR	1342012	IfStatement	if ( len >= LINE_SIZE )		1342009	0					
ANR	1342013	Condition	len >= LINE_SIZE	2025:8:64550:64565	1342009	0	True				
ANR	1342014	RelationalExpression	len >= LINE_SIZE		1342009	0		>=			
ANR	1342015	Identifier	len		1342009	0					
ANR	1342016	Identifier	LINE_SIZE		1342009	1					
ANR	1342017	ExpressionStatement	exit ( 1 )	2026:8:64576:64583	1342009	1	True				
ANR	1342018	CallExpression	exit ( 1 )		1342009	0					
ANR	1342019	Callee	exit		1342009	0					
ANR	1342020	Identifier	exit		1342009	0					
ANR	1342021	ArgumentList	1		1342009	1					
ANR	1342022	Argument	1		1342009	0					
ANR	1342023	PrimaryExpression	1		1342009	0					
ANR	1342024	ExpressionStatement	"memcpy ( linebuf , str , len )"	2028:4:64590:64615	1342009	1	True				
ANR	1342025	CallExpression	"memcpy ( linebuf , str , len )"		1342009	0					
ANR	1342026	Callee	memcpy		1342009	0					
ANR	1342027	Identifier	memcpy		1342009	0					
ANR	1342028	ArgumentList	linebuf		1342009	1					
ANR	1342029	Argument	linebuf		1342009	0					
ANR	1342030	Identifier	linebuf		1342009	0					
ANR	1342031	Argument	str		1342009	1					
ANR	1342032	Identifier	str		1342009	0					
ANR	1342033	Argument	len		1342009	2					
ANR	1342034	Identifier	len		1342009	0					
ANR	1342035	ExpressionStatement	flush_line_buf ( len )	2029:4:64621:64640	1342009	2	True				
ANR	1342036	CallExpression	flush_line_buf ( len )		1342009	0					
ANR	1342037	Callee	flush_line_buf		1342009	0					
ANR	1342038	Identifier	flush_line_buf		1342009	0					
ANR	1342039	ArgumentList	len		1342009	1					
ANR	1342040	Argument	len		1342009	0					
ANR	1342041	Identifier	len		1342009	0					
ANR	1342042	ReturnType	void		1342009	1					
ANR	1342043	Identifier	ws		1342009	2					
ANR	1342044	ParameterList	"const byte * str , int len"		1342009	3					
ANR	1342045	Parameter	const byte * str	2023:3:64514:64528	1342009	0	True				
ANR	1342046	ParameterType	const byte *		1342009	0					
ANR	1342047	Identifier	str		1342009	1					
ANR	1342048	Parameter	int len	2023:20:64531:64537	1342009	1	True				
ANR	1342049	ParameterType	int		1342009	0					
ANR	1342050	Identifier	len		1342009	1					
ANR	1342051	CFGEntryNode	ENTRY		1342009		True				
ANR	1342052	CFGExitNode	EXIT		1342009		True				
ANR	1342053	Symbol	str		1342009						
ANR	1342054	Symbol	LINE_SIZE		1342009						
ANR	1342055	Symbol	len		1342009						
ANR	1342056	Symbol	linebuf		1342009						
ANR	1342057	Function	wl	2032:0:64645:64743							
ANR	1342058	FunctionDef	wl (const char * str)		1342057	0					
ANR	1342059	CompoundStatement		2034:0:64670:64743	1342057	0					
ANR	1342060	ExpressionStatement	"ws ( ( const byte * ) str , strlen ( str ) )"	2035:4:64676:64710	1342057	0	True				
ANR	1342061	CallExpression	"ws ( ( const byte * ) str , strlen ( str ) )"		1342057	0					
ANR	1342062	Callee	ws		1342057	0					
ANR	1342063	Identifier	ws		1342057	0					
ANR	1342064	ArgumentList	( const byte * ) str		1342057	1					
ANR	1342065	Argument	( const byte * ) str		1342057	0					
ANR	1342066	CastExpression	( const byte * ) str		1342057	0					
ANR	1342067	CastTarget	const byte *		1342057	0					
ANR	1342068	Identifier	str		1342057	1					
ANR	1342069	Argument	strlen ( str )		1342057	1					
ANR	1342070	CallExpression	strlen ( str )		1342057	0					
ANR	1342071	Callee	strlen		1342057	0					
ANR	1342072	Identifier	strlen		1342057	0					
ANR	1342073	ArgumentList	str		1342057	1					
ANR	1342074	Argument	str		1342057	0					
ANR	1342075	Identifier	str		1342057	0					
ANR	1342076	ExpressionStatement	"ws ( ( const byte * ) ""\\n"" , 1 )"	2036:4:64716:64741	1342057	1	True				
ANR	1342077	CallExpression	"ws ( ( const byte * ) ""\\n"" , 1 )"		1342057	0					
ANR	1342078	Callee	ws		1342057	0					
ANR	1342079	Identifier	ws		1342057	0					
ANR	1342080	ArgumentList	"( const byte * ) ""\\n"""		1342057	1					
ANR	1342081	Argument	"( const byte * ) ""\\n"""		1342057	0					
ANR	1342082	CastExpression	"( const byte * ) ""\\n"""		1342057	0					
ANR	1342083	CastTarget	const byte *		1342057	0					
ANR	1342084	PrimaryExpression	"""\\n"""		1342057	1					
ANR	1342085	Argument	1		1342057	1					
ANR	1342086	PrimaryExpression	1		1342057	0					
ANR	1342087	ReturnType	void		1342057	1					
ANR	1342088	Identifier	wl		1342057	2					
ANR	1342089	ParameterList	const char * str		1342057	3					
ANR	1342090	Parameter	const char * str	2033:3:64653:64667	1342057	0	True				
ANR	1342091	ParameterType	const char *		1342057	0					
ANR	1342092	Identifier	str		1342057	1					
ANR	1342093	CFGEntryNode	ENTRY		1342057		True				
ANR	1342094	CFGExitNode	EXIT		1342057		True				
ANR	1342095	Symbol	str		1342057						
ANR	1342096	Symbol	strlen		1342057						
ANR	1342097	Function	doit	2044:0:64940:66797							
ANR	1342098	FunctionDef	"doit (char * line , bool intact)"		1342097	0					
ANR	1342099	CompoundStatement		2046:0:64977:66797	1342097	0					
ANR	1342100	IdentifierDeclStatement	char * str = line ;	2047:4:64983:64999	1342097	0	True				
ANR	1342101	IdentifierDecl	* str = line		1342097	0					
ANR	1342102	IdentifierDeclType	char *		1342097	0					
ANR	1342103	Identifier	str		1342097	1					
ANR	1342104	AssignmentExpression	* str = line		1342097	2		=			
ANR	1342105	Identifier	line		1342097	0					
ANR	1342106	Identifier	line		1342097	1					
ANR	1342107	IdentifierDeclStatement	char * from ;	2048:4:65005:65015	1342097	1	True				
ANR	1342108	IdentifierDecl	* from		1342097	0					
ANR	1342109	IdentifierDeclType	char *		1342097	0					
ANR	1342110	Identifier	from		1342097	1					
ANR	1342111	IdentifierDeclStatement	char * to ;	2049:4:65021:65029	1342097	2	True				
ANR	1342112	IdentifierDecl	* to		1342097	0					
ANR	1342113	IdentifierDeclType	char *		1342097	0					
ANR	1342114	Identifier	to		1342097	1					
ANR	1342115	IdentifierDeclStatement	int in_string = 0 ;	2050:4:65035:65052	1342097	3	True				
ANR	1342116	IdentifierDecl	in_string = 0		1342097	0					
ANR	1342117	IdentifierDeclType	int		1342097	0					
ANR	1342118	Identifier	in_string		1342097	1					
ANR	1342119	AssignmentExpression	in_string = 0		1342097	2		=			
ANR	1342120	Identifier	in_string		1342097	0					
ANR	1342121	PrimaryExpression	0		1342097	1					
ANR	1342122	IfStatement	if ( intact )		1342097	4					
ANR	1342123	Condition	intact	2052:8:65063:65068	1342097	0	True				
ANR	1342124	Identifier	intact		1342097	0					
ANR	1342125	ReturnStatement	return str ;	2053:8:65079:65089	1342097	1	True				
ANR	1342126	Identifier	str		1342097	0					
ANR	1342127	WhileStatement	while ( * str == ' ' || * str == '\\t' )		1342097	5					
ANR	1342128	Condition	* str == ' ' || * str == '\\t'	2054:11:65102:65128	1342097	0	True				
ANR	1342129	OrExpression	* str == ' ' || * str == '\\t'		1342097	0		||			
ANR	1342130	EqualityExpression	* str == ' '		1342097	0		==			
ANR	1342131	UnaryOperationExpression	* str		1342097	0					
ANR	1342132	UnaryOperator	*		1342097	0					
ANR	1342133	Identifier	str		1342097	1					
ANR	1342134	PrimaryExpression	' '		1342097	1					
ANR	1342135	EqualityExpression	* str == '\\t'		1342097	1		==			
ANR	1342136	UnaryOperationExpression	* str		1342097	0					
ANR	1342137	UnaryOperator	*		1342097	0					
ANR	1342138	Identifier	str		1342097	1					
ANR	1342139	PrimaryExpression	'\\t'		1342097	1					
ANR	1342140	ExpressionStatement	++ str	2055:8:65171:65176	1342097	1	True				
ANR	1342141	UnaryExpression	++ str		1342097	0					
ANR	1342142	IncDec	++		1342097	0					
ANR	1342143	Identifier	str		1342097	1					
ANR	1342144	IfStatement	if ( * str == 0 )		1342097	6					
ANR	1342145	Condition	* str == 0	2056:8:65186:65194	1342097	0	True				
ANR	1342146	EqualityExpression	* str == 0		1342097	0		==			
ANR	1342147	UnaryOperationExpression	* str		1342097	0					
ANR	1342148	UnaryOperator	*		1342097	0					
ANR	1342149	Identifier	str		1342097	1					
ANR	1342150	PrimaryExpression	0		1342097	1					
ANR	1342151	ReturnStatement	return NULL ;	2057:8:65227:65238	1342097	1	True				
ANR	1342152	Identifier	NULL		1342097	0					
ANR	1342153	IfStatement	"if ( ! strncmp ( str , ""%END"" , 4 ) )"		1342097	7					
ANR	1342154	Condition	"! strncmp ( str , ""%END"" , 4 )"	2058:8:65248:65271	1342097	0	True				
ANR	1342155	UnaryOperationExpression	"! strncmp ( str , ""%END"" , 4 )"		1342097	0					
ANR	1342156	UnaryOperator	!		1342097	0					
ANR	1342157	CallExpression	"strncmp ( str , ""%END"" , 4 )"		1342097	1					
ANR	1342158	Callee	strncmp		1342097	0					
ANR	1342159	Identifier	strncmp		1342097	0					
ANR	1342160	ArgumentList	str		1342097	1					
ANR	1342161	Argument	str		1342097	0					
ANR	1342162	Identifier	str		1342097	0					
ANR	1342163	Argument	"""%END"""		1342097	1					
ANR	1342164	PrimaryExpression	"""%END"""		1342097	0					
ANR	1342165	Argument	4		1342097	2					
ANR	1342166	PrimaryExpression	4		1342097	0					
ANR	1342167	ReturnStatement	return str ;	2059:8:65312:65322	1342097	1	True				
ANR	1342168	Identifier	str		1342097	0					
ANR	1342169	IfStatement	if ( str [ 0 ] == '%' )		1342097	8					
ANR	1342170	Condition	str [ 0 ] == '%'	2060:8:65332:65344	1342097	0	True				
ANR	1342171	EqualityExpression	str [ 0 ] == '%'		1342097	0		==			
ANR	1342172	ArrayIndexing	str [ 0 ]		1342097	0					
ANR	1342173	Identifier	str		1342097	0					
ANR	1342174	PrimaryExpression	0		1342097	1					
ANR	1342175	PrimaryExpression	'%'		1342097	1					
ANR	1342176	ReturnStatement	return NULL ;	2061:8:65377:65388	1342097	1	True				
ANR	1342177	Identifier	NULL		1342097	0					
ANR	1342178	ForStatement	"for ( to = from = str ; ( * to = * from ) != 0 ; ++ from , ++ to )"		1342097	9					
ANR	1342179	ForInit	to = from = str ;	2069:9:65637:65652	1342097	0	True				
ANR	1342180	AssignmentExpression	to = from = str		1342097	0		=			
ANR	1342181	Identifier	to		1342097	0					
ANR	1342182	AssignmentExpression	from = str		1342097	1		=			
ANR	1342183	Identifier	from		1342097	0					
ANR	1342184	Identifier	str		1342097	1					
ANR	1342185	Condition	( * to = * from ) != 0	2069:26:65654:65671	1342097	1	True				
ANR	1342186	EqualityExpression	( * to = * from ) != 0		1342097	0		!=			
ANR	1342187	AssignmentExpression	* to = * from		1342097	0		=			
ANR	1342188	UnaryOperationExpression	* to		1342097	0					
ANR	1342189	UnaryOperator	*		1342097	0					
ANR	1342190	Identifier	to		1342097	1					
ANR	1342191	UnaryOperationExpression	* from		1342097	1					
ANR	1342192	UnaryOperator	*		1342097	0					
ANR	1342193	Identifier	from		1342097	1					
ANR	1342194	PrimaryExpression	0		1342097	1					
ANR	1342195	Expression	"++ from , ++ to"	2069:46:65674:65685	1342097	2	True				
ANR	1342196	UnaryExpression	++ from		1342097	0					
ANR	1342197	IncDec	++		1342097	0					
ANR	1342198	Identifier	from		1342097	1					
ANR	1342199	UnaryExpression	++ to		1342097	1					
ANR	1342200	IncDec	++		1342097	0					
ANR	1342201	Identifier	to		1342097	1					
ANR	1342202	CompoundStatement		24:60:710:710	1342097	3					
ANR	1342203	SwitchStatement	switch ( * from )		1342097	0					
ANR	1342204	Condition	* from	2070:16:65706:65710	1342097	0	True				
ANR	1342205	UnaryOperationExpression	* from		1342097	0					
ANR	1342206	UnaryOperator	*		1342097	0					
ANR	1342207	Identifier	from		1342097	1					
ANR	1342208	CompoundStatement		25:23:735:735	1342097	1					
ANR	1342209	Label	case '%' :	2071:12:65727:65735	1342097	0	True				
ANR	1342210	IfStatement	if ( ! in_string )		1342097	1					
ANR	1342211	Condition	! in_string	2072:20:65757:65766	1342097	0	True				
ANR	1342212	UnaryOperationExpression	! in_string		1342097	0					
ANR	1342213	UnaryOperator	!		1342097	0					
ANR	1342214	Identifier	in_string		1342097	1					
ANR	1342215	BreakStatement	break ;	2073:20:65789:65794	1342097	1	True				
ANR	1342216	ContinueStatement	continue ;	2074:16:65812:65820	1342097	2	True				
ANR	1342217	Label	case ' ' :	2075:12:65834:65842	1342097	3	True				
ANR	1342218	Label	case '\\t' :	2076:12:65856:65865	1342097	4	True				
ANR	1342219	IfStatement	"if ( to > str && ! in_string && strchr ( "" \\t>[]{})"" , to [ - 1 ] ) )"		1342097	5					
ANR	1342220	Condition	"to > str && ! in_string && strchr ( "" \\t>[]{})"" , to [ - 1 ] )"	2077:20:65887:65939	1342097	0	True				
ANR	1342221	AndExpression	"to > str && ! in_string && strchr ( "" \\t>[]{})"" , to [ - 1 ] )"		1342097	0		&&			
ANR	1342222	RelationalExpression	to > str		1342097	0		>			
ANR	1342223	Identifier	to		1342097	0					
ANR	1342224	Identifier	str		1342097	1					
ANR	1342225	AndExpression	"! in_string && strchr ( "" \\t>[]{})"" , to [ - 1 ] )"		1342097	1		&&			
ANR	1342226	UnaryOperationExpression	! in_string		1342097	0					
ANR	1342227	UnaryOperator	!		1342097	0					
ANR	1342228	Identifier	in_string		1342097	1					
ANR	1342229	CallExpression	"strchr ( "" \\t>[]{})"" , to [ - 1 ] )"		1342097	1					
ANR	1342230	Callee	strchr		1342097	0					
ANR	1342231	Identifier	strchr		1342097	0					
ANR	1342232	ArgumentList	""" \\t>[]{})"""		1342097	1					
ANR	1342233	Argument	""" \\t>[]{})"""		1342097	0					
ANR	1342234	PrimaryExpression	""" \\t>[]{})"""		1342097	0					
ANR	1342235	Argument	to [ - 1 ]		1342097	1					
ANR	1342236	ArrayIndexing	to [ - 1 ]		1342097	0					
ANR	1342237	Identifier	to		1342097	0					
ANR	1342238	UnaryOperationExpression	- 1		1342097	1					
ANR	1342239	UnaryOperator	-		1342097	0					
ANR	1342240	PrimaryExpression	1		1342097	1					
ANR	1342241	ExpressionStatement	-- to	2078:20:65962:65966	1342097	1	True				
ANR	1342242	UnaryExpression	-- to		1342097	0					
ANR	1342243	IncDec	--		1342097	0					
ANR	1342244	Identifier	to		1342097	1					
ANR	1342245	ContinueStatement	continue ;	2079:16:65984:65992	1342097	6	True				
ANR	1342246	Label	case '(' :	2080:12:66006:66014	1342097	7	True				
ANR	1342247	Label	case '<' :	2081:12:66028:66036	1342097	8	True				
ANR	1342248	Label	case '/' :	2082:12:66050:66058	1342097	9	True				
ANR	1342249	Label	case '[' :	2083:12:66072:66080	1342097	10	True				
ANR	1342250	Label	case ']' :	2084:12:66094:66102	1342097	11	True				
ANR	1342251	Label	case '{' :	2085:12:66116:66124	1342097	12	True				
ANR	1342252	Label	case '}' :	2086:12:66138:66146	1342097	13	True				
ANR	1342253	IfStatement	"if ( to > str && ! in_string && strchr ( "" \\t"" , to [ - 1 ] ) )"		1342097	14					
ANR	1342254	Condition	"to > str && ! in_string && strchr ( "" \\t"" , to [ - 1 ] )"	2087:20:66168:66214	1342097	0	True				
ANR	1342255	AndExpression	"to > str && ! in_string && strchr ( "" \\t"" , to [ - 1 ] )"		1342097	0		&&			
ANR	1342256	RelationalExpression	to > str		1342097	0		>			
ANR	1342257	Identifier	to		1342097	0					
ANR	1342258	Identifier	str		1342097	1					
ANR	1342259	AndExpression	"! in_string && strchr ( "" \\t"" , to [ - 1 ] )"		1342097	1		&&			
ANR	1342260	UnaryOperationExpression	! in_string		1342097	0					
ANR	1342261	UnaryOperator	!		1342097	0					
ANR	1342262	Identifier	in_string		1342097	1					
ANR	1342263	CallExpression	"strchr ( "" \\t"" , to [ - 1 ] )"		1342097	1					
ANR	1342264	Callee	strchr		1342097	0					
ANR	1342265	Identifier	strchr		1342097	0					
ANR	1342266	ArgumentList	""" \\t"""		1342097	1					
ANR	1342267	Argument	""" \\t"""		1342097	0					
ANR	1342268	PrimaryExpression	""" \\t"""		1342097	0					
ANR	1342269	Argument	to [ - 1 ]		1342097	1					
ANR	1342270	ArrayIndexing	to [ - 1 ]		1342097	0					
ANR	1342271	Identifier	to		1342097	0					
ANR	1342272	UnaryOperationExpression	- 1		1342097	1					
ANR	1342273	UnaryOperator	-		1342097	0					
ANR	1342274	PrimaryExpression	1		1342097	1					
ANR	1342275	ExpressionStatement	* -- to = * from	2088:20:66237:66250	1342097	1	True				
ANR	1342276	AssignmentExpression	* -- to = * from		1342097	0		=			
ANR	1342277	UnaryOperationExpression	* -- to		1342097	0					
ANR	1342278	UnaryOperator	*		1342097	0					
ANR	1342279	UnaryExpression	-- to		1342097	1					
ANR	1342280	IncDec	--		1342097	0					
ANR	1342281	Identifier	to		1342097	1					
ANR	1342282	UnaryOperationExpression	* from		1342097	1					
ANR	1342283	UnaryOperator	*		1342097	0					
ANR	1342284	Identifier	from		1342097	1					
ANR	1342285	IfStatement	if ( * from == '(' )		1342097	15					
ANR	1342286	Condition	* from == '('	2089:20:66272:66283	1342097	0	True				
ANR	1342287	EqualityExpression	* from == '('		1342097	0		==			
ANR	1342288	UnaryOperationExpression	* from		1342097	0					
ANR	1342289	UnaryOperator	*		1342097	0					
ANR	1342290	Identifier	from		1342097	1					
ANR	1342291	PrimaryExpression	'('		1342097	1					
ANR	1342292	ExpressionStatement	++ in_string	2090:20:66306:66317	1342097	1	True				
ANR	1342293	UnaryExpression	++ in_string		1342097	0					
ANR	1342294	IncDec	++		1342097	0					
ANR	1342295	Identifier	in_string		1342097	1					
ANR	1342296	ContinueStatement	continue ;	2091:16:66335:66343	1342097	16	True				
ANR	1342297	Label	case ')' :	2092:12:66357:66365	1342097	17	True				
ANR	1342298	ExpressionStatement	-- in_string	2093:16:66383:66394	1342097	18	True				
ANR	1342299	UnaryExpression	-- in_string		1342097	0					
ANR	1342300	IncDec	--		1342097	0					
ANR	1342301	Identifier	in_string		1342097	1					
ANR	1342302	ContinueStatement	continue ;	2094:16:66412:66420	1342097	19	True				
ANR	1342303	Label	case '\\\\' :	2095:12:66434:66443	1342097	20	True				
ANR	1342304	IfStatement	if ( from [ 1 ] == '\\\\' || from [ 1 ] == '(' || from [ 1 ] == ')' )		1342097	21					
ANR	1342305	Condition	from [ 1 ] == '\\\\' || from [ 1 ] == '(' || from [ 1 ] == ')'	2096:20:66465:66515	1342097	0	True				
ANR	1342306	OrExpression	from [ 1 ] == '\\\\' || from [ 1 ] == '(' || from [ 1 ] == ')'		1342097	0		||			
ANR	1342307	EqualityExpression	from [ 1 ] == '\\\\'		1342097	0		==			
ANR	1342308	ArrayIndexing	from [ 1 ]		1342097	0					
ANR	1342309	Identifier	from		1342097	0					
ANR	1342310	PrimaryExpression	1		1342097	1					
ANR	1342311	PrimaryExpression	'\\\\'		1342097	1					
ANR	1342312	OrExpression	from [ 1 ] == '(' || from [ 1 ] == ')'		1342097	1		||			
ANR	1342313	EqualityExpression	from [ 1 ] == '('		1342097	0		==			
ANR	1342314	ArrayIndexing	from [ 1 ]		1342097	0					
ANR	1342315	Identifier	from		1342097	0					
ANR	1342316	PrimaryExpression	1		1342097	1					
ANR	1342317	PrimaryExpression	'('		1342097	1					
ANR	1342318	EqualityExpression	from [ 1 ] == ')'		1342097	1		==			
ANR	1342319	ArrayIndexing	from [ 1 ]		1342097	0					
ANR	1342320	Identifier	from		1342097	0					
ANR	1342321	PrimaryExpression	1		1342097	1					
ANR	1342322	PrimaryExpression	')'		1342097	1					
ANR	1342323	ExpressionStatement	* ++ to = * ++ from	2097:20:66538:66553	1342097	1	True				
ANR	1342324	AssignmentExpression	* ++ to = * ++ from		1342097	0		=			
ANR	1342325	UnaryOperationExpression	* ++ to		1342097	0					
ANR	1342326	UnaryOperator	*		1342097	0					
ANR	1342327	UnaryExpression	++ to		1342097	1					
ANR	1342328	IncDec	++		1342097	0					
ANR	1342329	Identifier	to		1342097	1					
ANR	1342330	UnaryOperationExpression	* ++ from		1342097	1					
ANR	1342331	UnaryOperator	*		1342097	0					
ANR	1342332	UnaryExpression	++ from		1342097	1					
ANR	1342333	IncDec	++		1342097	0					
ANR	1342334	Identifier	from		1342097	1					
ANR	1342335	ContinueStatement	continue ;	2098:16:66571:66579	1342097	22	True				
ANR	1342336	Label	default :	2099:12:66593:66600	1342097	23	True				
ANR	1342337	Identifier	default		1342097	0					
ANR	1342338	ContinueStatement	continue ;	2100:16:66618:66626	1342097	24	True				
ANR	1342339	BreakStatement	break ;	2102:8:66646:66651	1342097	1	True				
ANR	1342340	WhileStatement	while ( to > str && ( to [ - 1 ] == ' ' || to [ - 1 ] == '\\t' ) )		1342097	10					
ANR	1342341	Condition	to > str && ( to [ - 1 ] == ' ' || to [ - 1 ] == '\\t' )	2105:11:66707:66751	1342097	0	True				
ANR	1342342	AndExpression	to > str && ( to [ - 1 ] == ' ' || to [ - 1 ] == '\\t' )		1342097	0		&&			
ANR	1342343	RelationalExpression	to > str		1342097	0		>			
ANR	1342344	Identifier	to		1342097	0					
ANR	1342345	Identifier	str		1342097	1					
ANR	1342346	OrExpression	to [ - 1 ] == ' ' || to [ - 1 ] == '\\t'		1342097	1		||			
ANR	1342347	EqualityExpression	to [ - 1 ] == ' '		1342097	0		==			
ANR	1342348	ArrayIndexing	to [ - 1 ]		1342097	0					
ANR	1342349	Identifier	to		1342097	0					
ANR	1342350	UnaryOperationExpression	- 1		1342097	1					
ANR	1342351	UnaryOperator	-		1342097	0					
ANR	1342352	PrimaryExpression	1		1342097	1					
ANR	1342353	PrimaryExpression	' '		1342097	1					
ANR	1342354	EqualityExpression	to [ - 1 ] == '\\t'		1342097	1		==			
ANR	1342355	ArrayIndexing	to [ - 1 ]		1342097	0					
ANR	1342356	Identifier	to		1342097	0					
ANR	1342357	UnaryOperationExpression	- 1		1342097	1					
ANR	1342358	UnaryOperator	-		1342097	0					
ANR	1342359	PrimaryExpression	1		1342097	1					
ANR	1342360	PrimaryExpression	'\\t'		1342097	1					
ANR	1342361	ExpressionStatement	-- to	2106:8:66762:66766	1342097	1	True				
ANR	1342362	UnaryExpression	-- to		1342097	0					
ANR	1342363	IncDec	--		1342097	0					
ANR	1342364	Identifier	to		1342097	1					
ANR	1342365	ExpressionStatement	* to = 0	2107:4:66772:66779	1342097	11	True				
ANR	1342366	AssignmentExpression	* to = 0		1342097	0		=			
ANR	1342367	UnaryOperationExpression	* to		1342097	0					
ANR	1342368	UnaryOperator	*		1342097	0					
ANR	1342369	Identifier	to		1342097	1					
ANR	1342370	PrimaryExpression	0		1342097	1					
ANR	1342371	ReturnStatement	return str ;	2108:4:66785:66795	1342097	12	True				
ANR	1342372	Identifier	str		1342097	0					
ANR	1342373	ReturnType	char *		1342097	1					
ANR	1342374	Identifier	doit		1342097	2					
ANR	1342375	ParameterList	"char * line , bool intact"		1342097	3					
ANR	1342376	Parameter	char * line	2045:5:64952:64961	1342097	0	True				
ANR	1342377	ParameterType	char *		1342097	0					
ANR	1342378	Identifier	line		1342097	1					
ANR	1342379	Parameter	bool intact	2045:17:64964:64974	1342097	1	True				
ANR	1342380	ParameterType	bool		1342097	0					
ANR	1342381	Identifier	intact		1342097	1					
ANR	1342382	CFGEntryNode	ENTRY		1342097		True				
ANR	1342383	CFGExitNode	EXIT		1342097		True				
ANR	1342384	Symbol	* to		1342097						
ANR	1342385	Symbol	NULL		1342097						
ANR	1342386	Symbol	line		1342097						
ANR	1342387	Symbol	strchr		1342097						
ANR	1342388	Symbol	* -- to		1342097						
ANR	1342389	Symbol	* ++ from		1342097						
ANR	1342390	Symbol	str		1342097						
ANR	1342391	Symbol	strncmp		1342097						
ANR	1342392	Symbol	intact		1342097						
ANR	1342393	Symbol	in_string		1342097						
ANR	1342394	Symbol	* ++ to		1342097						
ANR	1342395	Symbol	from		1342097						
ANR	1342396	Symbol	to		1342097						
ANR	1342397	Symbol	* str		1342097						
ANR	1342398	Symbol	* from		1342097						
ANR	1342399	Function	hex_string_to_binary	2112:0:66857:68152							
ANR	1342400	FunctionDef	hex_string_to_binary (FILE * in)		1342399	0					
ANR	1342401	CompoundStatement		2114:0:66893:68152	1342399	0					
ANR	1342402	Statement	define	2115:1:66896:66901	1342399	0	True				
ANR	1342403	Statement	MAX_STR	2115:8:66903:66909	1342399	1	True				
ANR	1342404	Statement	0xffff	2115:16:66911:66916	1342399	2	True				
ANR	1342405	IdentifierDeclStatement	byte * strbuf = ( byte * ) malloc ( MAX_STR ) ;	2116:4:66969:67007	1342399	3	True				
ANR	1342406	IdentifierDecl	* strbuf = ( byte * ) malloc ( MAX_STR )		1342399	0					
ANR	1342407	IdentifierDeclType	byte *		1342399	0					
ANR	1342408	Identifier	strbuf		1342399	1					
ANR	1342409	AssignmentExpression	* strbuf = ( byte * ) malloc ( MAX_STR )		1342399	2		=			
ANR	1342410	Identifier	strbuf		1342399	0					
ANR	1342411	CastExpression	( byte * ) malloc ( MAX_STR )		1342399	1					
ANR	1342412	CastTarget	byte *		1342399	0					
ANR	1342413	CallExpression	malloc ( MAX_STR )		1342399	1					
ANR	1342414	Callee	malloc		1342399	0					
ANR	1342415	Identifier	malloc		1342399	0					
ANR	1342416	ArgumentList	MAX_STR		1342399	1					
ANR	1342417	Argument	MAX_STR		1342399	0					
ANR	1342418	Identifier	MAX_STR		1342399	0					
ANR	1342419	IdentifierDeclStatement	byte * q = strbuf ;	2117:4:67013:67029	1342399	4	True				
ANR	1342420	IdentifierDecl	* q = strbuf		1342399	0					
ANR	1342421	IdentifierDeclType	byte *		1342399	0					
ANR	1342422	Identifier	q		1342399	1					
ANR	1342423	AssignmentExpression	* q = strbuf		1342399	2		=			
ANR	1342424	Identifier	strbuf		1342399	0					
ANR	1342425	Identifier	strbuf		1342399	1					
ANR	1342426	IdentifierDeclStatement	int c ;	2118:4:67035:67040	1342399	5	True				
ANR	1342427	IdentifierDecl	c		1342399	0					
ANR	1342428	IdentifierDeclType	int		1342399	0					
ANR	1342429	Identifier	c		1342399	1					
ANR	1342430	IdentifierDeclStatement	bool which = false ;	2119:4:67046:67064	1342399	6	True				
ANR	1342431	IdentifierDecl	which = false		1342399	0					
ANR	1342432	IdentifierDeclType	bool		1342399	0					
ANR	1342433	Identifier	which		1342399	1					
ANR	1342434	AssignmentExpression	which = false		1342399	2		=			
ANR	1342435	Identifier	false		1342399	0					
ANR	1342436	Identifier	false		1342399	1					
ANR	1342437	IdentifierDeclStatement	int len ;	2120:4:67070:67077	1342399	7	True				
ANR	1342438	IdentifierDecl	len		1342399	0					
ANR	1342439	IdentifierDeclType	int		1342399	0					
ANR	1342440	Identifier	len		1342399	1					
ANR	1342441	IdentifierDeclStatement	byte prefix [ 3 ] ;	2121:4:67083:67097	1342399	8	True				
ANR	1342442	IdentifierDecl	prefix [ 3 ]		1342399	0					
ANR	1342443	IdentifierDeclType	byte [ 3 ]		1342399	0					
ANR	1342444	Identifier	prefix		1342399	1					
ANR	1342445	PrimaryExpression	3		1342399	2					
ANR	1342446	IfStatement	if ( strbuf == 0 )		1342399	9					
ANR	1342447	Condition	strbuf == 0	2123:8:67108:67118	1342399	0	True				
ANR	1342448	EqualityExpression	strbuf == 0		1342399	0		==			
ANR	1342449	Identifier	strbuf		1342399	0					
ANR	1342450	PrimaryExpression	0		1342399	1					
ANR	1342451	CompoundStatement		10:21:227:227	1342399	1					
ANR	1342452	ExpressionStatement	"printf ( ""Unable to allocate string token buffer.\\n"" )"	2124:8:67131:67182	1342399	0	True				
ANR	1342453	CallExpression	"printf ( ""Unable to allocate string token buffer.\\n"" )"		1342399	0					
ANR	1342454	Callee	printf		1342399	0					
ANR	1342455	Identifier	printf		1342399	0					
ANR	1342456	ArgumentList	"""Unable to allocate string token buffer.\\n"""		1342399	1					
ANR	1342457	Argument	"""Unable to allocate string token buffer.\\n"""		1342399	0					
ANR	1342458	PrimaryExpression	"""Unable to allocate string token buffer.\\n"""		1342399	0					
ANR	1342459	ExpressionStatement	exit ( 1 )	2125:8:67192:67199	1342399	1	True				
ANR	1342460	CallExpression	exit ( 1 )		1342399	0					
ANR	1342461	Callee	exit		1342399	0					
ANR	1342462	Identifier	exit		1342399	0					
ANR	1342463	ArgumentList	1		1342399	1					
ANR	1342464	Argument	1		1342399	0					
ANR	1342465	PrimaryExpression	1		1342399	0					
ANR	1342466	WhileStatement	while ( ( c = getc ( in ) ) >= 0 )		1342399	10					
ANR	1342467	Condition	( c = getc ( in ) ) >= 0	2127:11:67218:67236	1342399	0	True				
ANR	1342468	RelationalExpression	( c = getc ( in ) ) >= 0		1342399	0		>=			
ANR	1342469	AssignmentExpression	c = getc ( in )		1342399	0		=			
ANR	1342470	Identifier	c		1342399	0					
ANR	1342471	CallExpression	getc ( in )		1342399	1					
ANR	1342472	Callee	getc		1342399	0					
ANR	1342473	Identifier	getc		1342399	0					
ANR	1342474	ArgumentList	in		1342399	1					
ANR	1342475	Argument	in		1342399	0					
ANR	1342476	Identifier	in		1342399	0					
ANR	1342477	PrimaryExpression	0		1342399	1					
ANR	1342478	CompoundStatement		14:32:345:345	1342399	1					
ANR	1342479	IfStatement	if ( isxdigit ( c ) )		1342399	0					
ANR	1342480	Condition	isxdigit ( c )	2128:12:67253:67263	1342399	0	True				
ANR	1342481	CallExpression	isxdigit ( c )		1342399	0					
ANR	1342482	Callee	isxdigit		1342399	0					
ANR	1342483	Identifier	isxdigit		1342399	0					
ANR	1342484	ArgumentList	c		1342399	1					
ANR	1342485	Argument	c		1342399	0					
ANR	1342486	Identifier	c		1342399	0					
ANR	1342487	CompoundStatement		15:25:372:372	1342399	1					
ANR	1342488	ExpressionStatement	c -= ( isdigit ( c ) ? '0' : islower ( c ) ? 'a' : 'A' )	2129:12:67280:67328	1342399	0	True				
ANR	1342489	AssignmentExpression	c -= ( isdigit ( c ) ? '0' : islower ( c ) ? 'a' : 'A' )		1342399	0		-=			
ANR	1342490	Identifier	c		1342399	0					
ANR	1342491	ConditionalExpression	isdigit ( c ) ? '0' : islower ( c ) ? 'a' : 'A'		1342399	1					
ANR	1342492	Condition	isdigit ( c )		1342399	0					
ANR	1342493	CallExpression	isdigit ( c )		1342399	0					
ANR	1342494	Callee	isdigit		1342399	0					
ANR	1342495	Identifier	isdigit		1342399	0					
ANR	1342496	ArgumentList	c		1342399	1					
ANR	1342497	Argument	c		1342399	0					
ANR	1342498	Identifier	c		1342399	0					
ANR	1342499	PrimaryExpression	'0'		1342399	1					
ANR	1342500	ConditionalExpression	islower ( c ) ? 'a' : 'A'		1342399	2					
ANR	1342501	Condition	islower ( c )		1342399	0					
ANR	1342502	CallExpression	islower ( c )		1342399	0					
ANR	1342503	Callee	islower		1342399	0					
ANR	1342504	Identifier	islower		1342399	0					
ANR	1342505	ArgumentList	c		1342399	1					
ANR	1342506	Argument	c		1342399	0					
ANR	1342507	Identifier	c		1342399	0					
ANR	1342508	PrimaryExpression	'a'		1342399	1					
ANR	1342509	PrimaryExpression	'A'		1342399	2					
ANR	1342510	IfStatement	if ( ( which = ! which ) )		1342399	1					
ANR	1342511	Condition	which = ! which	2130:16:67346:67361	1342399	0	True				
ANR	1342512	AssignmentExpression	which = ! which		1342399	0		=			
ANR	1342513	Identifier	which		1342399	0					
ANR	1342514	UnaryOperationExpression	! which		1342399	1					
ANR	1342515	UnaryOperator	!		1342399	0					
ANR	1342516	Identifier	which		1342399	1					
ANR	1342517	CompoundStatement		17:34:470:470	1342399	1					
ANR	1342518	IfStatement	if ( q == strbuf + MAX_STR )		1342399	0					
ANR	1342519	Condition	q == strbuf + MAX_STR	2131:20:67386:67406	1342399	0	True				
ANR	1342520	EqualityExpression	q == strbuf + MAX_STR		1342399	0		==			
ANR	1342521	Identifier	q		1342399	0					
ANR	1342522	AdditiveExpression	strbuf + MAX_STR		1342399	1		+			
ANR	1342523	Identifier	strbuf		1342399	0					
ANR	1342524	Identifier	MAX_STR		1342399	1					
ANR	1342525	CompoundStatement		18:43:515:515	1342399	1					
ANR	1342526	ExpressionStatement	"printf ( ""Can't handle string token > %d bytes.\\n"" , MAX_STR )"	2132:20:67431:67517	1342399	0	True				
ANR	1342527	CallExpression	"printf ( ""Can't handle string token > %d bytes.\\n"" , MAX_STR )"		1342399	0					
ANR	1342528	Callee	printf		1342399	0					
ANR	1342529	Identifier	printf		1342399	0					
ANR	1342530	ArgumentList	"""Can't handle string token > %d bytes.\\n"""		1342399	1					
ANR	1342531	Argument	"""Can't handle string token > %d bytes.\\n"""		1342399	0					
ANR	1342532	PrimaryExpression	"""Can't handle string token > %d bytes.\\n"""		1342399	0					
ANR	1342533	Argument	MAX_STR		1342399	1					
ANR	1342534	Identifier	MAX_STR		1342399	0					
ANR	1342535	ExpressionStatement	exit ( 1 )	2134:20:67539:67546	1342399	1	True				
ANR	1342536	CallExpression	exit ( 1 )		1342399	0					
ANR	1342537	Callee	exit		1342399	0					
ANR	1342538	Identifier	exit		1342399	0					
ANR	1342539	ArgumentList	1		1342399	1					
ANR	1342540	Argument	1		1342399	0					
ANR	1342541	PrimaryExpression	1		1342399	0					
ANR	1342542	ExpressionStatement	* q ++ = c << 4	2136:16:67582:67595	1342399	1	True				
ANR	1342543	AssignmentExpression	* q ++ = c << 4		1342399	0		=			
ANR	1342544	UnaryOperationExpression	* q ++		1342399	0					
ANR	1342545	UnaryOperator	*		1342399	0					
ANR	1342546	PostIncDecOperationExpression	q ++		1342399	1					
ANR	1342547	Identifier	q		1342399	0					
ANR	1342548	IncDec	++		1342399	1					
ANR	1342549	ShiftExpression	c << 4		1342399	1		<<			
ANR	1342550	Identifier	c		1342399	0					
ANR	1342551	PrimaryExpression	4		1342399	1					
ANR	1342552	ElseStatement	else		1342399	0					
ANR	1342553	ExpressionStatement	q [ - 1 ] += c	2138:16:67632:67642	1342399	0	True				
ANR	1342554	AssignmentExpression	q [ - 1 ] += c		1342399	0		+=			
ANR	1342555	ArrayIndexing	q [ - 1 ]		1342399	0					
ANR	1342556	Identifier	q		1342399	0					
ANR	1342557	UnaryOperationExpression	- 1		1342399	1					
ANR	1342558	UnaryOperator	-		1342399	0					
ANR	1342559	PrimaryExpression	1		1342399	1					
ANR	1342560	Identifier	c		1342399	1					
ANR	1342561	ElseStatement	else		1342399	0					
ANR	1342562	IfStatement	if ( isspace ( c ) )		1342399	0					
ANR	1342563	Condition	isspace ( c )	2139:19:67663:67672	1342399	0	True				
ANR	1342564	CallExpression	isspace ( c )		1342399	0					
ANR	1342565	Callee	isspace		1342399	0					
ANR	1342566	Identifier	isspace		1342399	0					
ANR	1342567	ArgumentList	c		1342399	1					
ANR	1342568	Argument	c		1342399	0					
ANR	1342569	Identifier	c		1342399	0					
ANR	1342570	ContinueStatement	continue ;	2140:12:67687:67695	1342399	1	True				
ANR	1342571	ElseStatement	else		1342399	0					
ANR	1342572	IfStatement	if ( c == '>' )		1342399	0					
ANR	1342573	Condition	c == '>'	2141:17:67714:67721	1342399	0	True				
ANR	1342574	EqualityExpression	c == '>'		1342399	0		==			
ANR	1342575	Identifier	c		1342399	0					
ANR	1342576	PrimaryExpression	'>'		1342399	1					
ANR	1342577	BreakStatement	break ;	2142:12:67736:67741	1342399	1	True				
ANR	1342578	ElseStatement	else		1342399	0					
ANR	1342579	ExpressionStatement	"printf ( ""Unknown character in ASCIIHex string: %c\\n"" , c )"	2144:12:67768:67823	1342399	0	True				
ANR	1342580	CallExpression	"printf ( ""Unknown character in ASCIIHex string: %c\\n"" , c )"		1342399	0					
ANR	1342581	Callee	printf		1342399	0					
ANR	1342582	Identifier	printf		1342399	0					
ANR	1342583	ArgumentList	"""Unknown character in ASCIIHex string: %c\\n"""		1342399	1					
ANR	1342584	Argument	"""Unknown character in ASCIIHex string: %c\\n"""		1342399	0					
ANR	1342585	PrimaryExpression	"""Unknown character in ASCIIHex string: %c\\n"""		1342399	0					
ANR	1342586	Argument	c		1342399	1					
ANR	1342587	Identifier	c		1342399	0					
ANR	1342588	ExpressionStatement	len = q - strbuf	2146:4:67835:67851	1342399	11	True				
ANR	1342589	AssignmentExpression	len = q - strbuf		1342399	0		=			
ANR	1342590	Identifier	len		1342399	0					
ANR	1342591	AdditiveExpression	q - strbuf		1342399	1		-			
ANR	1342592	Identifier	q		1342399	0					
ANR	1342593	Identifier	strbuf		1342399	1					
ANR	1342594	IfStatement	if ( len <= 255 )		1342399	12					
ANR	1342595	Condition	len <= 255	2147:8:67861:67870	1342399	0	True				
ANR	1342596	RelationalExpression	len <= 255		1342399	0		<=			
ANR	1342597	Identifier	len		1342399	0					
ANR	1342598	PrimaryExpression	255		1342399	1					
ANR	1342599	CompoundStatement		34:20:979:979	1342399	1					
ANR	1342600	ExpressionStatement	prefix [ 0 ] = 142	2148:8:67883:67898	1342399	0	True				
ANR	1342601	AssignmentExpression	prefix [ 0 ] = 142		1342399	0		=			
ANR	1342602	ArrayIndexing	prefix [ 0 ]		1342399	0					
ANR	1342603	Identifier	prefix		1342399	0					
ANR	1342604	PrimaryExpression	0		1342399	1					
ANR	1342605	PrimaryExpression	142		1342399	1					
ANR	1342606	ExpressionStatement	prefix [ 1 ] = ( byte ) len	2149:8:67908:67929	1342399	1	True				
ANR	1342607	AssignmentExpression	prefix [ 1 ] = ( byte ) len		1342399	0		=			
ANR	1342608	ArrayIndexing	prefix [ 1 ]		1342399	0					
ANR	1342609	Identifier	prefix		1342399	0					
ANR	1342610	PrimaryExpression	1		1342399	1					
ANR	1342611	CastExpression	( byte ) len		1342399	1					
ANR	1342612	CastTarget	byte		1342399	0					
ANR	1342613	Identifier	len		1342399	1					
ANR	1342614	ExpressionStatement	"ws ( prefix , 2 )"	2150:8:67939:67952	1342399	2	True				
ANR	1342615	CallExpression	"ws ( prefix , 2 )"		1342399	0					
ANR	1342616	Callee	ws		1342399	0					
ANR	1342617	Identifier	ws		1342399	0					
ANR	1342618	ArgumentList	prefix		1342399	1					
ANR	1342619	Argument	prefix		1342399	0					
ANR	1342620	Identifier	prefix		1342399	0					
ANR	1342621	Argument	2		1342399	1					
ANR	1342622	PrimaryExpression	2		1342399	0					
ANR	1342623	ElseStatement	else		1342399	0					
ANR	1342624	CompoundStatement		38:11:1071:1071	1342399	0					
ANR	1342625	ExpressionStatement	prefix [ 0 ] = 143	2152:8:67975:67990	1342399	0	True				
ANR	1342626	AssignmentExpression	prefix [ 0 ] = 143		1342399	0		=			
ANR	1342627	ArrayIndexing	prefix [ 0 ]		1342399	0					
ANR	1342628	Identifier	prefix		1342399	0					
ANR	1342629	PrimaryExpression	0		1342399	1					
ANR	1342630	PrimaryExpression	143		1342399	1					
ANR	1342631	ExpressionStatement	prefix [ 1 ] = ( byte ) ( len >> 8 )	2153:8:68000:68028	1342399	1	True				
ANR	1342632	AssignmentExpression	prefix [ 1 ] = ( byte ) ( len >> 8 )		1342399	0		=			
ANR	1342633	ArrayIndexing	prefix [ 1 ]		1342399	0					
ANR	1342634	Identifier	prefix		1342399	0					
ANR	1342635	PrimaryExpression	1		1342399	1					
ANR	1342636	CastExpression	( byte ) ( len >> 8 )		1342399	1					
ANR	1342637	CastTarget	byte		1342399	0					
ANR	1342638	ShiftExpression	len >> 8		1342399	1		>>			
ANR	1342639	Identifier	len		1342399	0					
ANR	1342640	PrimaryExpression	8		1342399	1					
ANR	1342641	ExpressionStatement	prefix [ 2 ] = ( byte ) len	2154:8:68038:68059	1342399	2	True				
ANR	1342642	AssignmentExpression	prefix [ 2 ] = ( byte ) len		1342399	0		=			
ANR	1342643	ArrayIndexing	prefix [ 2 ]		1342399	0					
ANR	1342644	Identifier	prefix		1342399	0					
ANR	1342645	PrimaryExpression	2		1342399	1					
ANR	1342646	CastExpression	( byte ) len		1342399	1					
ANR	1342647	CastTarget	byte		1342399	0					
ANR	1342648	Identifier	len		1342399	1					
ANR	1342649	ExpressionStatement	"ws ( prefix , 3 )"	2155:8:68069:68082	1342399	3	True				
ANR	1342650	CallExpression	"ws ( prefix , 3 )"		1342399	0					
ANR	1342651	Callee	ws		1342399	0					
ANR	1342652	Identifier	ws		1342399	0					
ANR	1342653	ArgumentList	prefix		1342399	1					
ANR	1342654	Argument	prefix		1342399	0					
ANR	1342655	Identifier	prefix		1342399	0					
ANR	1342656	Argument	3		1342399	1					
ANR	1342657	PrimaryExpression	3		1342399	0					
ANR	1342658	ExpressionStatement	"ws ( strbuf , len )"	2157:4:68094:68109	1342399	13	True				
ANR	1342659	CallExpression	"ws ( strbuf , len )"		1342399	0					
ANR	1342660	Callee	ws		1342399	0					
ANR	1342661	Identifier	ws		1342399	0					
ANR	1342662	ArgumentList	strbuf		1342399	1					
ANR	1342663	Argument	strbuf		1342399	0					
ANR	1342664	Identifier	strbuf		1342399	0					
ANR	1342665	Argument	len		1342399	1					
ANR	1342666	Identifier	len		1342399	0					
ANR	1342667	ExpressionStatement	free ( ( char * ) strbuf )	2158:4:68115:68135	1342399	14	True				
ANR	1342668	CallExpression	free ( ( char * ) strbuf )		1342399	0					
ANR	1342669	Callee	free		1342399	0					
ANR	1342670	Identifier	free		1342399	0					
ANR	1342671	ArgumentList	( char * ) strbuf		1342399	1					
ANR	1342672	Argument	( char * ) strbuf		1342399	0					
ANR	1342673	CastExpression	( char * ) strbuf		1342399	0					
ANR	1342674	CastTarget	char *		1342399	0					
ANR	1342675	Identifier	strbuf		1342399	1					
ANR	1342676	Statement	undef	2159:1:68138:68142	1342399	15	True				
ANR	1342677	Statement	MAX_STR	2159:7:68144:68150	1342399	16	True				
ANR	1342678	ReturnType	void		1342399	1					
ANR	1342679	Identifier	hex_string_to_binary		1342399	2					
ANR	1342680	ParameterList	FILE * in		1342399	3					
ANR	1342681	Parameter	FILE * in	2113:21:66883:66890	1342399	0	True				
ANR	1342682	ParameterType	FILE *		1342399	0					
ANR	1342683	Identifier	in		1342399	1					
ANR	1342684	CFGEntryNode	ENTRY		1342399		True				
ANR	1342685	CFGExitNode	EXIT		1342399		True				
ANR	1342686	Symbol	which		1342399						
ANR	1342687	Symbol	malloc		1342399						
ANR	1342688	Symbol	c		1342399						
ANR	1342689	Symbol	in		1342399						
ANR	1342690	Symbol	* prefix		1342399						
ANR	1342691	Symbol	prefix		1342399						
ANR	1342692	Symbol	islower		1342399						
ANR	1342693	Symbol	* q ++		1342399						
ANR	1342694	Symbol	false		1342399						
ANR	1342695	Symbol	isspace		1342399						
ANR	1342696	Symbol	q		1342399						
ANR	1342697	Symbol	len		1342399						
ANR	1342698	Symbol	strbuf		1342399						
ANR	1342699	Symbol	MAX_STR		1342399						
ANR	1342700	Symbol	* q		1342399						
ANR	1342701	Symbol	getc		1342399						
ANR	1342702	Symbol	isdigit		1342399						
ANR	1342703	Symbol	isxdigit		1342399						
ANR	1342704	Function	flush_buf	2163:0:68196:68290							
ANR	1342705	FunctionDef	flush_buf (char * buf)		1342704	0					
ANR	1342706	CompoundStatement		2165:0:68222:68290	1342704	0					
ANR	1342707	IfStatement	if ( buf [ 0 ] != 0 )		1342704	0					
ANR	1342708	Condition	buf [ 0 ] != 0	2166:8:68232:68242	1342704	0	True				
ANR	1342709	EqualityExpression	buf [ 0 ] != 0		1342704	0		!=			
ANR	1342710	ArrayIndexing	buf [ 0 ]		1342704	0					
ANR	1342711	Identifier	buf		1342704	0					
ANR	1342712	PrimaryExpression	0		1342704	1					
ANR	1342713	PrimaryExpression	0		1342704	1					
ANR	1342714	CompoundStatement		2:21:22:22	1342704	1					
ANR	1342715	ExpressionStatement	wl ( buf )	2167:8:68255:68262	1342704	0	True				
ANR	1342716	CallExpression	wl ( buf )		1342704	0					
ANR	1342717	Callee	wl		1342704	0					
ANR	1342718	Identifier	wl		1342704	0					
ANR	1342719	ArgumentList	buf		1342704	1					
ANR	1342720	Argument	buf		1342704	0					
ANR	1342721	Identifier	buf		1342704	0					
ANR	1342722	ExpressionStatement	buf [ 0 ] = 0	2168:8:68272:68282	1342704	1	True				
ANR	1342723	AssignmentExpression	buf [ 0 ] = 0		1342704	0		=			
ANR	1342724	ArrayIndexing	buf [ 0 ]		1342704	0					
ANR	1342725	Identifier	buf		1342704	0					
ANR	1342726	PrimaryExpression	0		1342704	1					
ANR	1342727	PrimaryExpression	0		1342704	1					
ANR	1342728	ReturnType	void		1342704	1					
ANR	1342729	Identifier	flush_buf		1342704	2					
ANR	1342730	ParameterList	char * buf		1342704	3					
ANR	1342731	Parameter	char * buf	2164:10:68211:68219	1342704	0	True				
ANR	1342732	ParameterType	char *		1342704	0					
ANR	1342733	Identifier	buf		1342704	1					
ANR	1342734	CFGEntryNode	ENTRY		1342704		True				
ANR	1342735	CFGExitNode	EXIT		1342704		True				
ANR	1342736	Symbol	buf		1342704						
ANR	1342737	Symbol	* buf		1342704						
ANR	1342738	Function	prefix_open	2172:0:68293:68730							
ANR	1342739	FunctionDef	"prefix_open (const char * os_prefix , const char * filename)"		1342738	0					
ANR	1342740	CompoundStatement		2174:0:68357:68730	1342738	0					
ANR	1342741	IdentifierDeclStatement	char * prefixed_path ;	2175:4:68363:68382	1342738	0	True				
ANR	1342742	IdentifierDecl	* prefixed_path		1342738	0					
ANR	1342743	IdentifierDeclType	char *		1342738	0					
ANR	1342744	Identifier	prefixed_path		1342738	1					
ANR	1342745	IdentifierDeclStatement	FILE * filep ;	2176:4:68388:68399	1342738	1	True				
ANR	1342746	IdentifierDecl	* filep		1342738	0					
ANR	1342747	IdentifierDeclType	FILE *		1342738	0					
ANR	1342748	Identifier	filep		1342738	1					
ANR	1342749	ExpressionStatement	prefixed_path = malloc ( 1024 )	2178:4:68406:68434	1342738	2	True				
ANR	1342750	AssignmentExpression	prefixed_path = malloc ( 1024 )		1342738	0		=			
ANR	1342751	Identifier	prefixed_path		1342738	0					
ANR	1342752	CallExpression	malloc ( 1024 )		1342738	1					
ANR	1342753	Callee	malloc		1342738	0					
ANR	1342754	Identifier	malloc		1342738	0					
ANR	1342755	ArgumentList	1024		1342738	1					
ANR	1342756	Argument	1024		1342738	0					
ANR	1342757	PrimaryExpression	1024		1342738	0					
ANR	1342758	IfStatement	if ( prefixed_path == NULL )		1342738	3					
ANR	1342759	Condition	prefixed_path == NULL	2179:8:68444:68464	1342738	0	True				
ANR	1342760	EqualityExpression	prefixed_path == NULL		1342738	0		==			
ANR	1342761	Identifier	prefixed_path		1342738	0					
ANR	1342762	Identifier	NULL		1342738	1					
ANR	1342763	CompoundStatement		6:31:109:109	1342738	1					
ANR	1342764	ExpressionStatement	"printf ( ""malloc problem in prefix_open\\n"" )"	2180:8:68477:68518	1342738	0	True				
ANR	1342765	CallExpression	"printf ( ""malloc problem in prefix_open\\n"" )"		1342738	0					
ANR	1342766	Callee	printf		1342738	0					
ANR	1342767	Identifier	printf		1342738	0					
ANR	1342768	ArgumentList	"""malloc problem in prefix_open\\n"""		1342738	1					
ANR	1342769	Argument	"""malloc problem in prefix_open\\n"""		1342738	0					
ANR	1342770	PrimaryExpression	"""malloc problem in prefix_open\\n"""		1342738	0					
ANR	1342771	ReturnStatement	return NULL ;	2181:8:68528:68539	1342738	1	True				
ANR	1342772	Identifier	NULL		1342738	0					
ANR	1342773	ExpressionStatement	"prefix_add ( os_prefix , filename , prefixed_path )"	2183:4:68551:68597	1342738	4	True				
ANR	1342774	CallExpression	"prefix_add ( os_prefix , filename , prefixed_path )"		1342738	0					
ANR	1342775	Callee	prefix_add		1342738	0					
ANR	1342776	Identifier	prefix_add		1342738	0					
ANR	1342777	ArgumentList	os_prefix		1342738	1					
ANR	1342778	Argument	os_prefix		1342738	0					
ANR	1342779	Identifier	os_prefix		1342738	0					
ANR	1342780	Argument	filename		1342738	1					
ANR	1342781	Identifier	filename		1342738	0					
ANR	1342782	Argument	prefixed_path		1342738	2					
ANR	1342783	Identifier	prefixed_path		1342738	0					
ANR	1342784	ExpressionStatement	"printf ( ""including: '%s'\\n"" , prefixed_path )"	2184:4:68603:68645	1342738	5	True				
ANR	1342785	CallExpression	"printf ( ""including: '%s'\\n"" , prefixed_path )"		1342738	0					
ANR	1342786	Callee	printf		1342738	0					
ANR	1342787	Identifier	printf		1342738	0					
ANR	1342788	ArgumentList	"""including: '%s'\\n"""		1342738	1					
ANR	1342789	Argument	"""including: '%s'\\n"""		1342738	0					
ANR	1342790	PrimaryExpression	"""including: '%s'\\n"""		1342738	0					
ANR	1342791	Argument	prefixed_path		1342738	1					
ANR	1342792	Identifier	prefixed_path		1342738	0					
ANR	1342793	ExpressionStatement	"filep = fopen ( prefixed_path , ""rb"" )"	2185:4:68651:68685	1342738	6	True				
ANR	1342794	AssignmentExpression	"filep = fopen ( prefixed_path , ""rb"" )"		1342738	0		=			
ANR	1342795	Identifier	filep		1342738	0					
ANR	1342796	CallExpression	"fopen ( prefixed_path , ""rb"" )"		1342738	1					
ANR	1342797	Callee	fopen		1342738	0					
ANR	1342798	Identifier	fopen		1342738	0					
ANR	1342799	ArgumentList	prefixed_path		1342738	1					
ANR	1342800	Argument	prefixed_path		1342738	0					
ANR	1342801	Identifier	prefixed_path		1342738	0					
ANR	1342802	Argument	"""rb"""		1342738	1					
ANR	1342803	PrimaryExpression	"""rb"""		1342738	0					
ANR	1342804	ExpressionStatement	free ( prefixed_path )	2186:4:68691:68710	1342738	7	True				
ANR	1342805	CallExpression	free ( prefixed_path )		1342738	0					
ANR	1342806	Callee	free		1342738	0					
ANR	1342807	Identifier	free		1342738	0					
ANR	1342808	ArgumentList	prefixed_path		1342738	1					
ANR	1342809	Argument	prefixed_path		1342738	0					
ANR	1342810	Identifier	prefixed_path		1342738	0					
ANR	1342811	ReturnStatement	return filep ;	2187:4:68716:68728	1342738	8	True				
ANR	1342812	Identifier	filep		1342738	0					
ANR	1342813	ReturnType	FILE *		1342738	1					
ANR	1342814	Identifier	prefix_open		1342738	2					
ANR	1342815	ParameterList	"const char * os_prefix , const char * filename"		1342738	3					
ANR	1342816	Parameter	const char * os_prefix	2173:12:68312:68332	1342738	0	True				
ANR	1342817	ParameterType	const char *		1342738	0					
ANR	1342818	Identifier	os_prefix		1342738	1					
ANR	1342819	Parameter	const char * filename	2173:35:68335:68354	1342738	1	True				
ANR	1342820	ParameterType	const char *		1342738	0					
ANR	1342821	Identifier	filename		1342738	1					
ANR	1342822	CFGEntryNode	ENTRY		1342738		True				
ANR	1342823	CFGExitNode	EXIT		1342738		True				
ANR	1342824	Symbol	prefixed_path		1342738						
ANR	1342825	Symbol	malloc		1342738						
ANR	1342826	Symbol	fopen		1342738						
ANR	1342827	Symbol	filename		1342738						
ANR	1342828	Symbol	NULL		1342738						
ANR	1342829	Symbol	os_prefix		1342738						
ANR	1342830	Symbol	filep		1342738						
ANR	1342831	Function	mergefile	2190:0:68733:72167							
ANR	1342832	FunctionDef	"mergefile (const char * os_prefix , const char * inname , FILE * in , FILE * config , bool intact)"		1342831	0					
ANR	1342833	CompoundStatement		2193:0:68840:72167	1342831	0					
ANR	1342834	IdentifierDeclStatement	char line [ LINE_SIZE + 1 ] ;	2194:4:68846:68870	1342831	0	True				
ANR	1342835	IdentifierDecl	line [ LINE_SIZE + 1 ]		1342831	0					
ANR	1342836	IdentifierDeclType	char [ LINE_SIZE + 1 ]		1342831	0					
ANR	1342837	Identifier	line		1342831	1					
ANR	1342838	AdditiveExpression	LINE_SIZE + 1		1342831	2		+			
ANR	1342839	Identifier	LINE_SIZE		1342831	0					
ANR	1342840	PrimaryExpression	1		1342831	1					
ANR	1342841	IdentifierDeclStatement	char buf [ LINE_SIZE + 1 ] ;	2195:4:68876:68899	1342831	1	True				
ANR	1342842	IdentifierDecl	buf [ LINE_SIZE + 1 ]		1342831	0					
ANR	1342843	IdentifierDeclType	char [ LINE_SIZE + 1 ]		1342831	0					
ANR	1342844	Identifier	buf		1342831	1					
ANR	1342845	AdditiveExpression	LINE_SIZE + 1		1342831	2		+			
ANR	1342846	Identifier	LINE_SIZE		1342831	0					
ANR	1342847	PrimaryExpression	1		1342831	1					
ANR	1342848	IdentifierDeclStatement	char * str ;	2196:4:68905:68914	1342831	2	True				
ANR	1342849	IdentifierDecl	* str		1342831	0					
ANR	1342850	IdentifierDeclType	char *		1342831	0					
ANR	1342851	Identifier	str		1342831	1					
ANR	1342852	IdentifierDeclStatement	int level = 1 ;	2197:4:68920:68933	1342831	3	True				
ANR	1342853	IdentifierDecl	level = 1		1342831	0					
ANR	1342854	IdentifierDeclType	int		1342831	0					
ANR	1342855	Identifier	level		1342831	1					
ANR	1342856	AssignmentExpression	level = 1		1342831	2		=			
ANR	1342857	Identifier	level		1342831	0					
ANR	1342858	PrimaryExpression	1		1342831	1					
ANR	1342859	IdentifierDeclStatement	bool first = true ;	2198:4:68939:68956	1342831	4	True				
ANR	1342860	IdentifierDecl	first = true		1342831	0					
ANR	1342861	IdentifierDeclType	bool		1342831	0					
ANR	1342862	Identifier	first		1342831	1					
ANR	1342863	AssignmentExpression	first = true		1342831	2		=			
ANR	1342864	Identifier	true		1342831	0					
ANR	1342865	Identifier	true		1342831	1					
ANR	1342866	ExpressionStatement	buf [ 0 ] = 0	2200:4:68963:68973	1342831	5	True				
ANR	1342867	AssignmentExpression	buf [ 0 ] = 0		1342831	0		=			
ANR	1342868	ArrayIndexing	buf [ 0 ]		1342831	0					
ANR	1342869	Identifier	buf		1342831	0					
ANR	1342870	PrimaryExpression	0		1342831	1					
ANR	1342871	PrimaryExpression	0		1342831	1					
ANR	1342872	WhileStatement	"while ( rl ( in , line , LINE_SIZE ) )"		1342831	6					
ANR	1342873	Condition	"rl ( in , line , LINE_SIZE )"	2201:11:68986:69008	1342831	0	True				
ANR	1342874	CallExpression	"rl ( in , line , LINE_SIZE )"		1342831	0					
ANR	1342875	Callee	rl		1342831	0					
ANR	1342876	Identifier	rl		1342831	0					
ANR	1342877	ArgumentList	in		1342831	1					
ANR	1342878	Argument	in		1342831	0					
ANR	1342879	Identifier	in		1342831	0					
ANR	1342880	Argument	line		1342831	1					
ANR	1342881	Identifier	line		1342831	0					
ANR	1342882	Argument	LINE_SIZE		1342831	2					
ANR	1342883	Identifier	LINE_SIZE		1342831	0					
ANR	1342884	CompoundStatement		11:8:216:226	1342831	1					
ANR	1342885	IdentifierDeclStatement	char psname [ LINE_SIZE + 1 ] ;	2202:8:69021:69047	1342831	0	True				
ANR	1342886	IdentifierDecl	psname [ LINE_SIZE + 1 ]		1342831	0					
ANR	1342887	IdentifierDeclType	char [ LINE_SIZE + 1 ]		1342831	0					
ANR	1342888	Identifier	psname		1342831	1					
ANR	1342889	AdditiveExpression	LINE_SIZE + 1		1342831	2		+			
ANR	1342890	Identifier	LINE_SIZE		1342831	0					
ANR	1342891	PrimaryExpression	1		1342831	1					
ANR	1342892	IdentifierDeclStatement	int nlines ;	2203:8:69057:69067	1342831	1	True				
ANR	1342893	IdentifierDecl	nlines		1342831	0					
ANR	1342894	IdentifierDeclType	int		1342831	0					
ANR	1342895	Identifier	nlines		1342831	1					
ANR	1342896	IfStatement	"if ( ! strncmp ( line , ""%% Replace"" , 10 ) && sscanf ( line + 11 , ""%d %s"" , & nlines , psname ) == 2 )"		1342831	2					
ANR	1342897	Condition	"! strncmp ( line , ""%% Replace"" , 10 ) && sscanf ( line + 11 , ""%d %s"" , & nlines , psname ) == 2"	2205:12:69082:69177	1342831	0	True				
ANR	1342898	AndExpression	"! strncmp ( line , ""%% Replace"" , 10 ) && sscanf ( line + 11 , ""%d %s"" , & nlines , psname ) == 2"		1342831	0		&&			
ANR	1342899	UnaryOperationExpression	"! strncmp ( line , ""%% Replace"" , 10 )"		1342831	0					
ANR	1342900	UnaryOperator	!		1342831	0					
ANR	1342901	CallExpression	"strncmp ( line , ""%% Replace"" , 10 )"		1342831	1					
ANR	1342902	Callee	strncmp		1342831	0					
ANR	1342903	Identifier	strncmp		1342831	0					
ANR	1342904	ArgumentList	line		1342831	1					
ANR	1342905	Argument	line		1342831	0					
ANR	1342906	Identifier	line		1342831	0					
ANR	1342907	Argument	"""%% Replace"""		1342831	1					
ANR	1342908	PrimaryExpression	"""%% Replace"""		1342831	0					
ANR	1342909	Argument	10		1342831	2					
ANR	1342910	PrimaryExpression	10		1342831	0					
ANR	1342911	EqualityExpression	"sscanf ( line + 11 , ""%d %s"" , & nlines , psname ) == 2"		1342831	1		==			
ANR	1342912	CallExpression	"sscanf ( line + 11 , ""%d %s"" , & nlines , psname )"		1342831	0					
ANR	1342913	Callee	sscanf		1342831	0					
ANR	1342914	Identifier	sscanf		1342831	0					
ANR	1342915	ArgumentList	line + 11		1342831	1					
ANR	1342916	Argument	line + 11		1342831	0					
ANR	1342917	AdditiveExpression	line + 11		1342831	0		+			
ANR	1342918	Identifier	line		1342831	0					
ANR	1342919	PrimaryExpression	11		1342831	1					
ANR	1342920	Argument	"""%d %s"""		1342831	1					
ANR	1342921	PrimaryExpression	"""%d %s"""		1342831	0					
ANR	1342922	Argument	& nlines		1342831	2					
ANR	1342923	UnaryOperationExpression	& nlines		1342831	0					
ANR	1342924	UnaryOperator	&		1342831	0					
ANR	1342925	Identifier	nlines		1342831	1					
ANR	1342926	Argument	psname		1342831	3					
ANR	1342927	Identifier	psname		1342831	0					
ANR	1342928	PrimaryExpression	2		1342831	1					
ANR	1342929	CompoundStatement		16:12:366:400	1342831	1					
ANR	1342930	IdentifierDeclStatement	bool do_intact = ( line [ 10 ] == '%' ) ;	2208:12:69207:69241	1342831	0	True				
ANR	1342931	IdentifierDecl	do_intact = ( line [ 10 ] == '%' )		1342831	0					
ANR	1342932	IdentifierDeclType	bool		1342831	0					
ANR	1342933	Identifier	do_intact		1342831	1					
ANR	1342934	AssignmentExpression	do_intact = ( line [ 10 ] == '%' )		1342831	2		=			
ANR	1342935	Identifier	do_intact		1342831	0					
ANR	1342936	EqualityExpression	line [ 10 ] == '%'		1342831	1		==			
ANR	1342937	ArrayIndexing	line [ 10 ]		1342831	0					
ANR	1342938	Identifier	line		1342831	0					
ANR	1342939	PrimaryExpression	10		1342831	1					
ANR	1342940	PrimaryExpression	'%'		1342831	1					
ANR	1342941	ExpressionStatement	flush_buf ( buf )	2210:12:69256:69270	1342831	1	True				
ANR	1342942	CallExpression	flush_buf ( buf )		1342831	0					
ANR	1342943	Callee	flush_buf		1342831	0					
ANR	1342944	Identifier	flush_buf		1342831	0					
ANR	1342945	ArgumentList	buf		1342831	1					
ANR	1342946	Argument	buf		1342831	0					
ANR	1342947	Identifier	buf		1342831	0					
ANR	1342948	WhileStatement	while ( nlines -- > 0 )		1342831	2					
ANR	1342949	Condition	nlines -- > 0	2211:19:69291:69302	1342831	0	True				
ANR	1342950	RelationalExpression	nlines -- > 0		1342831	0		>			
ANR	1342951	PostIncDecOperationExpression	nlines --		1342831	0					
ANR	1342952	Identifier	nlines		1342831	0					
ANR	1342953	IncDec	--		1342831	1					
ANR	1342954	PrimaryExpression	0		1342831	1					
ANR	1342955	ExpressionStatement	"rl ( in , line , LINE_SIZE )"	2212:16:69321:69344	1342831	1	True				
ANR	1342956	CallExpression	"rl ( in , line , LINE_SIZE )"		1342831	0					
ANR	1342957	Callee	rl		1342831	0					
ANR	1342958	Identifier	rl		1342831	0					
ANR	1342959	ArgumentList	in		1342831	1					
ANR	1342960	Argument	in		1342831	0					
ANR	1342961	Identifier	in		1342831	0					
ANR	1342962	Argument	line		1342831	1					
ANR	1342963	Identifier	line		1342831	0					
ANR	1342964	Argument	LINE_SIZE		1342831	2					
ANR	1342965	Identifier	LINE_SIZE		1342831	0					
ANR	1342966	IfStatement	if ( psname [ 0 ] == '(' )		1342831	3					
ANR	1342967	Condition	psname [ 0 ] == '('	2213:16:69362:69377	1342831	0	True				
ANR	1342968	EqualityExpression	psname [ 0 ] == '('		1342831	0		==			
ANR	1342969	ArrayIndexing	psname [ 0 ]		1342831	0					
ANR	1342970	Identifier	psname		1342831	0					
ANR	1342971	PrimaryExpression	0		1342831	1					
ANR	1342972	PrimaryExpression	'('		1342831	1					
ANR	1342973	CompoundStatement		22:16:557:565	1342831	1					
ANR	1342974	IdentifierDeclStatement	FILE * ps ;	2214:16:69398:69406	1342831	0	True				
ANR	1342975	IdentifierDecl	* ps		1342831	0					
ANR	1342976	IdentifierDeclType	FILE *		1342831	0					
ANR	1342977	Identifier	ps		1342831	1					
ANR	1342978	ExpressionStatement	psname [ strlen ( psname ) - 1 ] = 0	2216:16:69425:69455	1342831	1	True				
ANR	1342979	AssignmentExpression	psname [ strlen ( psname ) - 1 ] = 0		1342831	0		=			
ANR	1342980	ArrayIndexing	psname [ strlen ( psname ) - 1 ]		1342831	0					
ANR	1342981	Identifier	psname		1342831	0					
ANR	1342982	AdditiveExpression	strlen ( psname ) - 1		1342831	1		-			
ANR	1342983	CallExpression	strlen ( psname )		1342831	0					
ANR	1342984	Callee	strlen		1342831	0					
ANR	1342985	Identifier	strlen		1342831	0					
ANR	1342986	ArgumentList	psname		1342831	1					
ANR	1342987	Argument	psname		1342831	0					
ANR	1342988	Identifier	psname		1342831	0					
ANR	1342989	PrimaryExpression	1		1342831	1					
ANR	1342990	PrimaryExpression	0		1342831	1					
ANR	1342991	ExpressionStatement	"ps = prefix_open ( os_prefix , psname + 1 )"	2217:16:69473:69512	1342831	2	True				
ANR	1342992	AssignmentExpression	"ps = prefix_open ( os_prefix , psname + 1 )"		1342831	0		=			
ANR	1342993	Identifier	ps		1342831	0					
ANR	1342994	CallExpression	"prefix_open ( os_prefix , psname + 1 )"		1342831	1					
ANR	1342995	Callee	prefix_open		1342831	0					
ANR	1342996	Identifier	prefix_open		1342831	0					
ANR	1342997	ArgumentList	os_prefix		1342831	1					
ANR	1342998	Argument	os_prefix		1342831	0					
ANR	1342999	Identifier	os_prefix		1342831	0					
ANR	1343000	Argument	psname + 1		1342831	1					
ANR	1343001	AdditiveExpression	psname + 1		1342831	0		+			
ANR	1343002	Identifier	psname		1342831	0					
ANR	1343003	PrimaryExpression	1		1342831	1					
ANR	1343004	IfStatement	if ( ps == 0 )		1342831	3					
ANR	1343005	Condition	ps == 0	2218:20:69534:69540	1342831	0	True				
ANR	1343006	EqualityExpression	ps == 0		1342831	0		==			
ANR	1343007	Identifier	ps		1342831	0					
ANR	1343008	PrimaryExpression	0		1342831	1					
ANR	1343009	CompoundStatement		26:29:702:702	1342831	1					
ANR	1343010	ExpressionStatement	"fprintf ( stderr , ""Failed to open '%s' - aborting\\n"" , psname + 1 )"	2219:20:69565:69626	1342831	0	True				
ANR	1343011	CallExpression	"fprintf ( stderr , ""Failed to open '%s' - aborting\\n"" , psname + 1 )"		1342831	0					
ANR	1343012	Callee	fprintf		1342831	0					
ANR	1343013	Identifier	fprintf		1342831	0					
ANR	1343014	ArgumentList	stderr		1342831	1					
ANR	1343015	Argument	stderr		1342831	0					
ANR	1343016	Identifier	stderr		1342831	0					
ANR	1343017	Argument	"""Failed to open '%s' - aborting\\n"""		1342831	1					
ANR	1343018	PrimaryExpression	"""Failed to open '%s' - aborting\\n"""		1342831	0					
ANR	1343019	Argument	psname + 1		1342831	2					
ANR	1343020	AdditiveExpression	psname + 1		1342831	0		+			
ANR	1343021	Identifier	psname		1342831	0					
ANR	1343022	PrimaryExpression	1		1342831	1					
ANR	1343023	ExpressionStatement	exit ( 1 )	2220:20:69648:69655	1342831	1	True				
ANR	1343024	CallExpression	exit ( 1 )		1342831	0					
ANR	1343025	Callee	exit		1342831	0					
ANR	1343026	Identifier	exit		1342831	0					
ANR	1343027	ArgumentList	1		1342831	1					
ANR	1343028	Argument	1		1342831	0					
ANR	1343029	PrimaryExpression	1		1342831	0					
ANR	1343030	ExpressionStatement	"mergefile ( os_prefix , psname + 1 , ps , config , intact || do_intact )"	2222:16:69691:69756	1342831	4	True				
ANR	1343031	CallExpression	"mergefile ( os_prefix , psname + 1 , ps , config , intact || do_intact )"		1342831	0					
ANR	1343032	Callee	mergefile		1342831	0					
ANR	1343033	Identifier	mergefile		1342831	0					
ANR	1343034	ArgumentList	os_prefix		1342831	1					
ANR	1343035	Argument	os_prefix		1342831	0					
ANR	1343036	Identifier	os_prefix		1342831	0					
ANR	1343037	Argument	psname + 1		1342831	1					
ANR	1343038	AdditiveExpression	psname + 1		1342831	0		+			
ANR	1343039	Identifier	psname		1342831	0					
ANR	1343040	PrimaryExpression	1		1342831	1					
ANR	1343041	Argument	ps		1342831	2					
ANR	1343042	Identifier	ps		1342831	0					
ANR	1343043	Argument	config		1342831	3					
ANR	1343044	Identifier	config		1342831	0					
ANR	1343045	Argument	intact || do_intact		1342831	4					
ANR	1343046	OrExpression	intact || do_intact		1342831	0		||			
ANR	1343047	Identifier	intact		1342831	0					
ANR	1343048	Identifier	do_intact		1342831	1					
ANR	1343049	ElseStatement	else		1342831	0					
ANR	1343050	IfStatement	"if ( ! strcmp ( psname , ""INITFILES"" ) )"		1342831	0					
ANR	1343051	Condition	"! strcmp ( psname , ""INITFILES"" )"	2223:23:69781:69808	1342831	0	True				
ANR	1343052	UnaryOperationExpression	"! strcmp ( psname , ""INITFILES"" )"		1342831	0					
ANR	1343053	UnaryOperator	!		1342831	0					
ANR	1343054	CallExpression	"strcmp ( psname , ""INITFILES"" )"		1342831	1					
ANR	1343055	Callee	strcmp		1342831	0					
ANR	1343056	Identifier	strcmp		1342831	0					
ANR	1343057	ArgumentList	psname		1342831	1					
ANR	1343058	Argument	psname		1342831	0					
ANR	1343059	Identifier	psname		1342831	0					
ANR	1343060	Argument	"""INITFILES"""		1342831	1					
ANR	1343061	PrimaryExpression	"""INITFILES"""		1342831	0					
ANR	1343062	CompoundStatement		31:53:970:970	1342831	1					
ANR	1343063	ExpressionStatement	rewind ( config )	2228:16:70003:70017	1342831	0	True				
ANR	1343064	CallExpression	rewind ( config )		1342831	0					
ANR	1343065	Callee	rewind		1342831	0					
ANR	1343066	Identifier	rewind		1342831	0					
ANR	1343067	ArgumentList	config		1342831	1					
ANR	1343068	Argument	config		1342831	0					
ANR	1343069	Identifier	config		1342831	0					
ANR	1343070	WhileStatement	"while ( rl ( config , psname , LINE_SIZE ) )"		1342831	1					
ANR	1343071	Condition	"rl ( config , psname , LINE_SIZE )"	2229:23:70042:70070	1342831	0	True				
ANR	1343072	CallExpression	"rl ( config , psname , LINE_SIZE )"		1342831	0					
ANR	1343073	Callee	rl		1342831	0					
ANR	1343074	Identifier	rl		1342831	0					
ANR	1343075	ArgumentList	config		1342831	1					
ANR	1343076	Argument	config		1342831	0					
ANR	1343077	Identifier	config		1342831	0					
ANR	1343078	Argument	psname		1342831	1					
ANR	1343079	Identifier	psname		1342831	0					
ANR	1343080	Argument	LINE_SIZE		1342831	2					
ANR	1343081	Identifier	LINE_SIZE		1342831	0					
ANR	1343082	IfStatement	"if ( ! strncmp ( psname , ""psfile_(\\"""" , 9 ) )"		1342831	1					
ANR	1343083	Condition	"! strncmp ( psname , ""psfile_(\\"""" , 9 )"	2230:24:70097:70129	1342831	0	True				
ANR	1343084	UnaryOperationExpression	"! strncmp ( psname , ""psfile_(\\"""" , 9 )"		1342831	0					
ANR	1343085	UnaryOperator	!		1342831	0					
ANR	1343086	CallExpression	"strncmp ( psname , ""psfile_(\\"""" , 9 )"		1342831	1					
ANR	1343087	Callee	strncmp		1342831	0					
ANR	1343088	Identifier	strncmp		1342831	0					
ANR	1343089	ArgumentList	psname		1342831	1					
ANR	1343090	Argument	psname		1342831	0					
ANR	1343091	Identifier	psname		1342831	0					
ANR	1343092	Argument	"""psfile_(\\"""""		1342831	1					
ANR	1343093	PrimaryExpression	"""psfile_(\\"""""		1342831	0					
ANR	1343094	Argument	9		1342831	2					
ANR	1343095	PrimaryExpression	9		1342831	0					
ANR	1343096	CompoundStatement		40:24:1351:1388	1342831	1					
ANR	1343097	IdentifierDeclStatement	FILE * ps ;	2231:24:70158:70166	1342831	0	True				
ANR	1343098	IdentifierDecl	* ps		1342831	0					
ANR	1343099	IdentifierDeclType	FILE *		1342831	0					
ANR	1343100	Identifier	ps		1342831	1					
ANR	1343101	IdentifierDeclStatement	"char * quote = strchr ( psname + 9 , '""' ) ;"	2232:24:70192:70229	1342831	1	True				
ANR	1343102	IdentifierDecl	"* quote = strchr ( psname + 9 , '""' )"		1342831	0					
ANR	1343103	IdentifierDeclType	char *		1342831	0					
ANR	1343104	Identifier	quote		1342831	1					
ANR	1343105	AssignmentExpression	"* quote = strchr ( psname + 9 , '""' )"		1342831	2		=			
ANR	1343106	Identifier	quote		1342831	0					
ANR	1343107	CallExpression	"strchr ( psname + 9 , '""' )"		1342831	1					
ANR	1343108	Callee	strchr		1342831	0					
ANR	1343109	Identifier	strchr		1342831	0					
ANR	1343110	ArgumentList	psname + 9		1342831	1					
ANR	1343111	Argument	psname + 9		1342831	0					
ANR	1343112	AdditiveExpression	psname + 9		1342831	0		+			
ANR	1343113	Identifier	psname		1342831	0					
ANR	1343114	PrimaryExpression	9		1342831	1					
ANR	1343115	Argument	"'""'"		1342831	1					
ANR	1343116	PrimaryExpression	"'""'"		1342831	0					
ANR	1343117	IfStatement	if ( quote == NULL )		1342831	2					
ANR	1343118	Condition	quote == NULL	2233:28:70259:70271	1342831	0	True				
ANR	1343119	EqualityExpression	quote == NULL		1342831	0		==			
ANR	1343120	Identifier	quote		1342831	0					
ANR	1343121	Identifier	NULL		1342831	1					
ANR	1343122	ExpressionStatement	exit ( 1 )	2234:28:70302:70309	1342831	1	True				
ANR	1343123	CallExpression	exit ( 1 )		1342831	0					
ANR	1343124	Callee	exit		1342831	0					
ANR	1343125	Identifier	exit		1342831	0					
ANR	1343126	ArgumentList	1		1342831	1					
ANR	1343127	Argument	1		1342831	0					
ANR	1343128	PrimaryExpression	1		1342831	0					
ANR	1343129	ExpressionStatement	* quote = 0	2236:24:70336:70346	1342831	3	True				
ANR	1343130	AssignmentExpression	* quote = 0		1342831	0		=			
ANR	1343131	UnaryOperationExpression	* quote		1342831	0					
ANR	1343132	UnaryOperator	*		1342831	0					
ANR	1343133	Identifier	quote		1342831	1					
ANR	1343134	PrimaryExpression	0		1342831	1					
ANR	1343135	ExpressionStatement	"ps = prefix_open ( os_prefix , psname + 9 )"	2237:24:70372:70411	1342831	4	True				
ANR	1343136	AssignmentExpression	"ps = prefix_open ( os_prefix , psname + 9 )"		1342831	0		=			
ANR	1343137	Identifier	ps		1342831	0					
ANR	1343138	CallExpression	"prefix_open ( os_prefix , psname + 9 )"		1342831	1					
ANR	1343139	Callee	prefix_open		1342831	0					
ANR	1343140	Identifier	prefix_open		1342831	0					
ANR	1343141	ArgumentList	os_prefix		1342831	1					
ANR	1343142	Argument	os_prefix		1342831	0					
ANR	1343143	Identifier	os_prefix		1342831	0					
ANR	1343144	Argument	psname + 9		1342831	1					
ANR	1343145	AdditiveExpression	psname + 9		1342831	0		+			
ANR	1343146	Identifier	psname		1342831	0					
ANR	1343147	PrimaryExpression	9		1342831	1					
ANR	1343148	IfStatement	if ( ps == 0 )		1342831	5					
ANR	1343149	Condition	ps == 0	2238:28:70441:70447	1342831	0	True				
ANR	1343150	EqualityExpression	ps == 0		1342831	0		==			
ANR	1343151	Identifier	ps		1342831	0					
ANR	1343152	PrimaryExpression	0		1342831	1					
ANR	1343153	ExpressionStatement	exit ( 1 )	2239:28:70478:70485	1342831	1	True				
ANR	1343154	CallExpression	exit ( 1 )		1342831	0					
ANR	1343155	Callee	exit		1342831	0					
ANR	1343156	Identifier	exit		1342831	0					
ANR	1343157	ArgumentList	1		1342831	1					
ANR	1343158	Argument	1		1342831	0					
ANR	1343159	PrimaryExpression	1		1342831	0					
ANR	1343160	ExpressionStatement	"mergefile ( os_prefix , psname + 9 , ps , config , false )"	2240:24:70511:70562	1342831	6	True				
ANR	1343161	CallExpression	"mergefile ( os_prefix , psname + 9 , ps , config , false )"		1342831	0					
ANR	1343162	Callee	mergefile		1342831	0					
ANR	1343163	Identifier	mergefile		1342831	0					
ANR	1343164	ArgumentList	os_prefix		1342831	1					
ANR	1343165	Argument	os_prefix		1342831	0					
ANR	1343166	Identifier	os_prefix		1342831	0					
ANR	1343167	Argument	psname + 9		1342831	1					
ANR	1343168	AdditiveExpression	psname + 9		1342831	0		+			
ANR	1343169	Identifier	psname		1342831	0					
ANR	1343170	PrimaryExpression	9		1342831	1					
ANR	1343171	Argument	ps		1342831	2					
ANR	1343172	Identifier	ps		1342831	0					
ANR	1343173	Argument	config		1342831	3					
ANR	1343174	Identifier	config		1342831	0					
ANR	1343175	Argument	false		1342831	4					
ANR	1343176	Identifier	false		1342831	0					
ANR	1343177	ElseStatement	else		1342831	0					
ANR	1343178	CompoundStatement		50:19:1764:1764	1342831	0					
ANR	1343179	ExpressionStatement	"printf ( ""Unknown %%%% Replace %d %s\\n"" , nlines , psname )"	2243:16:70623:70701	1342831	0	True				
ANR	1343180	CallExpression	"printf ( ""Unknown %%%% Replace %d %s\\n"" , nlines , psname )"		1342831	0					
ANR	1343181	Callee	printf		1342831	0					
ANR	1343182	Identifier	printf		1342831	0					
ANR	1343183	ArgumentList	"""Unknown %%%% Replace %d %s\\n"""		1342831	1					
ANR	1343184	Argument	"""Unknown %%%% Replace %d %s\\n"""		1342831	0					
ANR	1343185	PrimaryExpression	"""Unknown %%%% Replace %d %s\\n"""		1342831	0					
ANR	1343186	Argument	nlines		1342831	1					
ANR	1343187	Identifier	nlines		1342831	0					
ANR	1343188	Argument	psname		1342831	2					
ANR	1343189	Identifier	psname		1342831	0					
ANR	1343190	ExpressionStatement	exit ( 1 )	2245:16:70719:70726	1342831	1	True				
ANR	1343191	CallExpression	exit ( 1 )		1342831	0					
ANR	1343192	Callee	exit		1342831	0					
ANR	1343193	Identifier	exit		1342831	0					
ANR	1343194	ArgumentList	1		1342831	1					
ANR	1343195	Argument	1		1342831	0					
ANR	1343196	PrimaryExpression	1		1342831	0					
ANR	1343197	ElseStatement	else		1342831	0					
ANR	1343198	IfStatement	"if ( ! strcmp ( line , ""currentfile closefile"" ) )"		1342831	0					
ANR	1343199	Condition	"! strcmp ( line , ""currentfile closefile"" )"	2247:19:70761:70798	1342831	0	True				
ANR	1343200	UnaryOperationExpression	"! strcmp ( line , ""currentfile closefile"" )"		1342831	0					
ANR	1343201	UnaryOperator	!		1342831	0					
ANR	1343202	CallExpression	"strcmp ( line , ""currentfile closefile"" )"		1342831	1					
ANR	1343203	Callee	strcmp		1342831	0					
ANR	1343204	Identifier	strcmp		1342831	0					
ANR	1343205	ArgumentList	line		1342831	1					
ANR	1343206	Argument	line		1342831	0					
ANR	1343207	Identifier	line		1342831	0					
ANR	1343208	Argument	"""currentfile closefile"""		1342831	1					
ANR	1343209	PrimaryExpression	"""currentfile closefile"""		1342831	0					
ANR	1343210	CompoundStatement		55:59:1960:1960	1342831	1					
ANR	1343211	BreakStatement	break ;	2249:12:70884:70889	1342831	0	True				
ANR	1343212	ElseStatement	else		1342831	0					
ANR	1343213	CompoundStatement		59:12:2079:2086	1342831	0					
ANR	1343214	IdentifierDeclStatement	int len ;	2251:12:70920:70927	1342831	0	True				
ANR	1343215	IdentifierDecl	len		1342831	0					
ANR	1343216	IdentifierDeclType	int		1342831	0					
ANR	1343217	Identifier	len		1342831	1					
ANR	1343218	ExpressionStatement	"str = doit ( line , intact )"	2253:12:70942:70966	1342831	1	True				
ANR	1343219	AssignmentExpression	"str = doit ( line , intact )"		1342831	0		=			
ANR	1343220	Identifier	str		1342831	0					
ANR	1343221	CallExpression	"doit ( line , intact )"		1342831	1					
ANR	1343222	Callee	doit		1342831	0					
ANR	1343223	Identifier	doit		1342831	0					
ANR	1343224	ArgumentList	line		1342831	1					
ANR	1343225	Argument	line		1342831	0					
ANR	1343226	Identifier	line		1342831	0					
ANR	1343227	Argument	intact		1342831	1					
ANR	1343228	Identifier	intact		1342831	0					
ANR	1343229	IfStatement	if ( str == 0 )		1342831	2					
ANR	1343230	Condition	str == 0	2254:16:70984:70991	1342831	0	True				
ANR	1343231	EqualityExpression	str == 0		1342831	0		==			
ANR	1343232	Identifier	str		1342831	0					
ANR	1343233	PrimaryExpression	0		1342831	1					
ANR	1343234	ContinueStatement	continue ;	2255:16:71010:71018	1342831	1	True				
ANR	1343235	ExpressionStatement	len = strlen ( str )	2256:12:71032:71049	1342831	3	True				
ANR	1343236	AssignmentExpression	len = strlen ( str )		1342831	0		=			
ANR	1343237	Identifier	len		1342831	0					
ANR	1343238	CallExpression	strlen ( str )		1342831	1					
ANR	1343239	Callee	strlen		1342831	0					
ANR	1343240	Identifier	strlen		1342831	0					
ANR	1343241	ArgumentList	str		1342831	1					
ANR	1343242	Argument	str		1342831	0					
ANR	1343243	Identifier	str		1342831	0					
ANR	1343244	IfStatement	if ( first && len >= 2 && str [ len - 2 ] == '<' && ( str [ len - 1 ] == '<' || str [ len - 1 ] == '~' ) )		1342831	4					
ANR	1343245	Condition	first && len >= 2 && str [ len - 2 ] == '<' && ( str [ len - 1 ] == '<' || str [ len - 1 ] == '~' )	2257:16:71067:71170	1342831	0	True				
ANR	1343246	AndExpression	first && len >= 2 && str [ len - 2 ] == '<' && ( str [ len - 1 ] == '<' || str [ len - 1 ] == '~' )		1342831	0		&&			
ANR	1343247	Identifier	first		1342831	0					
ANR	1343248	AndExpression	len >= 2 && str [ len - 2 ] == '<' && ( str [ len - 1 ] == '<' || str [ len - 1 ] == '~' )		1342831	1		&&			
ANR	1343249	RelationalExpression	len >= 2		1342831	0		>=			
ANR	1343250	Identifier	len		1342831	0					
ANR	1343251	PrimaryExpression	2		1342831	1					
ANR	1343252	AndExpression	str [ len - 2 ] == '<' && ( str [ len - 1 ] == '<' || str [ len - 1 ] == '~' )		1342831	1		&&			
ANR	1343253	EqualityExpression	str [ len - 2 ] == '<'		1342831	0		==			
ANR	1343254	ArrayIndexing	str [ len - 2 ]		1342831	0					
ANR	1343255	Identifier	str		1342831	0					
ANR	1343256	AdditiveExpression	len - 2		1342831	1		-			
ANR	1343257	Identifier	len		1342831	0					
ANR	1343258	PrimaryExpression	2		1342831	1					
ANR	1343259	PrimaryExpression	'<'		1342831	1					
ANR	1343260	OrExpression	str [ len - 1 ] == '<' || str [ len - 1 ] == '~'		1342831	1		||			
ANR	1343261	EqualityExpression	str [ len - 1 ] == '<'		1342831	0		==			
ANR	1343262	ArrayIndexing	str [ len - 1 ]		1342831	0					
ANR	1343263	Identifier	str		1342831	0					
ANR	1343264	AdditiveExpression	len - 1		1342831	1		-			
ANR	1343265	Identifier	len		1342831	0					
ANR	1343266	PrimaryExpression	1		1342831	1					
ANR	1343267	PrimaryExpression	'<'		1342831	1					
ANR	1343268	EqualityExpression	str [ len - 1 ] == '~'		1342831	1		==			
ANR	1343269	ArrayIndexing	str [ len - 1 ]		1342831	0					
ANR	1343270	Identifier	str		1342831	0					
ANR	1343271	AdditiveExpression	len - 1		1342831	1		-			
ANR	1343272	Identifier	len		1342831	0					
ANR	1343273	PrimaryExpression	1		1342831	1					
ANR	1343274	PrimaryExpression	'~'		1342831	1					
ANR	1343275	CompoundStatement		67:18:2349:2349	1342831	1					
ANR	1343276	ExpressionStatement	"wl ( ""currentobjectformat 1 setobjectformat\\n"" )"	2260:16:71208:71253	1342831	0	True				
ANR	1343277	CallExpression	"wl ( ""currentobjectformat 1 setobjectformat\\n"" )"		1342831	0					
ANR	1343278	Callee	wl		1342831	0					
ANR	1343279	Identifier	wl		1342831	0					
ANR	1343280	ArgumentList	"""currentobjectformat 1 setobjectformat\\n"""		1342831	1					
ANR	1343281	Argument	"""currentobjectformat 1 setobjectformat\\n"""		1342831	0					
ANR	1343282	PrimaryExpression	"""currentobjectformat 1 setobjectformat\\n"""		1342831	0					
ANR	1343283	ExpressionStatement	level = 2	2261:16:71271:71280	1342831	1	True				
ANR	1343284	AssignmentExpression	level = 2		1342831	0		=			
ANR	1343285	Identifier	level		1342831	0					
ANR	1343286	PrimaryExpression	2		1342831	1					
ANR	1343287	IfStatement	if ( level > 1 && len > 0 && str [ len - 1 ] == '<' && ( len < 2 || str [ len - 2 ] != '<' ) )		1342831	5					
ANR	1343288	Condition	level > 1 && len > 0 && str [ len - 1 ] == '<' && ( len < 2 || str [ len - 2 ] != '<' )	2263:16:71312:71406	1342831	0	True				
ANR	1343289	AndExpression	level > 1 && len > 0 && str [ len - 1 ] == '<' && ( len < 2 || str [ len - 2 ] != '<' )		1342831	0		&&			
ANR	1343290	RelationalExpression	level > 1		1342831	0		>			
ANR	1343291	Identifier	level		1342831	0					
ANR	1343292	PrimaryExpression	1		1342831	1					
ANR	1343293	AndExpression	len > 0 && str [ len - 1 ] == '<' && ( len < 2 || str [ len - 2 ] != '<' )		1342831	1		&&			
ANR	1343294	RelationalExpression	len > 0		1342831	0		>			
ANR	1343295	Identifier	len		1342831	0					
ANR	1343296	PrimaryExpression	0		1342831	1					
ANR	1343297	AndExpression	str [ len - 1 ] == '<' && ( len < 2 || str [ len - 2 ] != '<' )		1342831	1		&&			
ANR	1343298	EqualityExpression	str [ len - 1 ] == '<'		1342831	0		==			
ANR	1343299	ArrayIndexing	str [ len - 1 ]		1342831	0					
ANR	1343300	Identifier	str		1342831	0					
ANR	1343301	AdditiveExpression	len - 1		1342831	1		-			
ANR	1343302	Identifier	len		1342831	0					
ANR	1343303	PrimaryExpression	1		1342831	1					
ANR	1343304	PrimaryExpression	'<'		1342831	1					
ANR	1343305	OrExpression	len < 2 || str [ len - 2 ] != '<'		1342831	1		||			
ANR	1343306	RelationalExpression	len < 2		1342831	0		<			
ANR	1343307	Identifier	len		1342831	0					
ANR	1343308	PrimaryExpression	2		1342831	1					
ANR	1343309	EqualityExpression	str [ len - 2 ] != '<'		1342831	1		!=			
ANR	1343310	ArrayIndexing	str [ len - 2 ]		1342831	0					
ANR	1343311	Identifier	str		1342831	0					
ANR	1343312	AdditiveExpression	len - 2		1342831	1		-			
ANR	1343313	Identifier	len		1342831	0					
ANR	1343314	PrimaryExpression	2		1342831	1					
ANR	1343315	PrimaryExpression	'<'		1342831	1					
ANR	1343316	CompoundStatement		73:18:2585:2585	1342831	1					
ANR	1343317	ExpressionStatement	flush_buf ( buf )	2267:16:71506:71520	1342831	0	True				
ANR	1343318	CallExpression	flush_buf ( buf )		1342831	0					
ANR	1343319	Callee	flush_buf		1342831	0					
ANR	1343320	Identifier	flush_buf		1342831	0					
ANR	1343321	ArgumentList	buf		1342831	1					
ANR	1343322	Argument	buf		1342831	0					
ANR	1343323	Identifier	buf		1342831	0					
ANR	1343324	ExpressionStatement	str [ len - 1 ] = 0	2268:16:71538:71554	1342831	1	True				
ANR	1343325	AssignmentExpression	str [ len - 1 ] = 0		1342831	0		=			
ANR	1343326	ArrayIndexing	str [ len - 1 ]		1342831	0					
ANR	1343327	Identifier	str		1342831	0					
ANR	1343328	AdditiveExpression	len - 1		1342831	1		-			
ANR	1343329	Identifier	len		1342831	0					
ANR	1343330	PrimaryExpression	1		1342831	1					
ANR	1343331	PrimaryExpression	0		1342831	1					
ANR	1343332	ExpressionStatement	wl ( str )	2269:16:71572:71579	1342831	2	True				
ANR	1343333	CallExpression	wl ( str )		1342831	0					
ANR	1343334	Callee	wl		1342831	0					
ANR	1343335	Identifier	wl		1342831	0					
ANR	1343336	ArgumentList	str		1342831	1					
ANR	1343337	Argument	str		1342831	0					
ANR	1343338	Identifier	str		1342831	0					
ANR	1343339	ExpressionStatement	hex_string_to_binary ( in )	2270:16:71597:71621	1342831	3	True				
ANR	1343340	CallExpression	hex_string_to_binary ( in )		1342831	0					
ANR	1343341	Callee	hex_string_to_binary		1342831	0					
ANR	1343342	Identifier	hex_string_to_binary		1342831	0					
ANR	1343343	ArgumentList	in		1342831	1					
ANR	1343344	Argument	in		1342831	0					
ANR	1343345	Identifier	in		1342831	0					
ANR	1343346	ContinueStatement	continue ;	2271:16:71639:71647	1342831	4	True				
ANR	1343347	IfStatement	"if ( buf [ 0 ] != '%' && strlen ( buf ) + len < LINE_SIZE && ( strchr ( ""(/[]{}"" , str [ 0 ] ) || ( buf [ 0 ] != 0 && strchr ( "")[]{}"" , buf [ strlen ( buf ) - 1 ] ) ) ) )"		1342831	6					
ANR	1343348	Condition	"buf [ 0 ] != '%' && strlen ( buf ) + len < LINE_SIZE && ( strchr ( ""(/[]{}"" , str [ 0 ] ) || ( buf [ 0 ] != 0 && strchr ( "")[]{}"" , buf [ strlen ( buf ) - 1 ] ) ) )"	2273:16:71679:71901	1342831	0	True				
ANR	1343349	AndExpression	"buf [ 0 ] != '%' && strlen ( buf ) + len < LINE_SIZE && ( strchr ( ""(/[]{}"" , str [ 0 ] ) || ( buf [ 0 ] != 0 && strchr ( "")[]{}"" , buf [ strlen ( buf ) - 1 ] ) ) )"		1342831	0		&&			
ANR	1343350	EqualityExpression	buf [ 0 ] != '%'		1342831	0		!=			
ANR	1343351	ArrayIndexing	buf [ 0 ]		1342831	0					
ANR	1343352	Identifier	buf		1342831	0					
ANR	1343353	PrimaryExpression	0		1342831	1					
ANR	1343354	PrimaryExpression	'%'		1342831	1					
ANR	1343355	AndExpression	"strlen ( buf ) + len < LINE_SIZE && ( strchr ( ""(/[]{}"" , str [ 0 ] ) || ( buf [ 0 ] != 0 && strchr ( "")[]{}"" , buf [ strlen ( buf ) - 1 ] ) ) )"		1342831	1		&&			
ANR	1343356	RelationalExpression	strlen ( buf ) + len < LINE_SIZE		1342831	0		<			
ANR	1343357	AdditiveExpression	strlen ( buf ) + len		1342831	0		+			
ANR	1343358	CallExpression	strlen ( buf )		1342831	0					
ANR	1343359	Callee	strlen		1342831	0					
ANR	1343360	Identifier	strlen		1342831	0					
ANR	1343361	ArgumentList	buf		1342831	1					
ANR	1343362	Argument	buf		1342831	0					
ANR	1343363	Identifier	buf		1342831	0					
ANR	1343364	Identifier	len		1342831	1					
ANR	1343365	Identifier	LINE_SIZE		1342831	1					
ANR	1343366	OrExpression	"strchr ( ""(/[]{}"" , str [ 0 ] ) || ( buf [ 0 ] != 0 && strchr ( "")[]{}"" , buf [ strlen ( buf ) - 1 ] ) )"		1342831	1		||			
ANR	1343367	CallExpression	"strchr ( ""(/[]{}"" , str [ 0 ] )"		1342831	0					
ANR	1343368	Callee	strchr		1342831	0					
ANR	1343369	Identifier	strchr		1342831	0					
ANR	1343370	ArgumentList	"""(/[]{}"""		1342831	1					
ANR	1343371	Argument	"""(/[]{}"""		1342831	0					
ANR	1343372	PrimaryExpression	"""(/[]{}"""		1342831	0					
ANR	1343373	Argument	str [ 0 ]		1342831	1					
ANR	1343374	ArrayIndexing	str [ 0 ]		1342831	0					
ANR	1343375	Identifier	str		1342831	0					
ANR	1343376	PrimaryExpression	0		1342831	1					
ANR	1343377	AndExpression	"buf [ 0 ] != 0 && strchr ( "")[]{}"" , buf [ strlen ( buf ) - 1 ] )"		1342831	1		&&			
ANR	1343378	EqualityExpression	buf [ 0 ] != 0		1342831	0		!=			
ANR	1343379	ArrayIndexing	buf [ 0 ]		1342831	0					
ANR	1343380	Identifier	buf		1342831	0					
ANR	1343381	PrimaryExpression	0		1342831	1					
ANR	1343382	PrimaryExpression	0		1342831	1					
ANR	1343383	CallExpression	"strchr ( "")[]{}"" , buf [ strlen ( buf ) - 1 ] )"		1342831	1					
ANR	1343384	Callee	strchr		1342831	0					
ANR	1343385	Identifier	strchr		1342831	0					
ANR	1343386	ArgumentList	""")[]{}"""		1342831	1					
ANR	1343387	Argument	""")[]{}"""		1342831	0					
ANR	1343388	PrimaryExpression	""")[]{}"""		1342831	0					
ANR	1343389	Argument	buf [ strlen ( buf ) - 1 ]		1342831	1					
ANR	1343390	ArrayIndexing	buf [ strlen ( buf ) - 1 ]		1342831	0					
ANR	1343391	Identifier	buf		1342831	0					
ANR	1343392	AdditiveExpression	strlen ( buf ) - 1		1342831	1		-			
ANR	1343393	CallExpression	strlen ( buf )		1342831	0					
ANR	1343394	Callee	strlen		1342831	0					
ANR	1343395	Identifier	strlen		1342831	0					
ANR	1343396	ArgumentList	buf		1342831	1					
ANR	1343397	Argument	buf		1342831	0					
ANR	1343398	Identifier	buf		1342831	0					
ANR	1343399	PrimaryExpression	1		1342831	1					
ANR	1343400	ExpressionStatement	"strcat ( buf , str )"	2278:16:71937:71953	1342831	1	True				
ANR	1343401	CallExpression	"strcat ( buf , str )"		1342831	0					
ANR	1343402	Callee	strcat		1342831	0					
ANR	1343403	Identifier	strcat		1342831	0					
ANR	1343404	ArgumentList	buf		1342831	1					
ANR	1343405	Argument	buf		1342831	0					
ANR	1343406	Identifier	buf		1342831	0					
ANR	1343407	Argument	str		1342831	1					
ANR	1343408	Identifier	str		1342831	0					
ANR	1343409	ElseStatement	else		1342831	0					
ANR	1343410	CompoundStatement		87:17:3131:3131	1342831	0					
ANR	1343411	ExpressionStatement	flush_buf ( buf )	2280:16:71990:72004	1342831	0	True				
ANR	1343412	CallExpression	flush_buf ( buf )		1342831	0					
ANR	1343413	Callee	flush_buf		1342831	0					
ANR	1343414	Identifier	flush_buf		1342831	0					
ANR	1343415	ArgumentList	buf		1342831	1					
ANR	1343416	Argument	buf		1342831	0					
ANR	1343417	Identifier	buf		1342831	0					
ANR	1343418	ExpressionStatement	"strcpy ( buf , str )"	2281:16:72022:72038	1342831	1	True				
ANR	1343419	CallExpression	"strcpy ( buf , str )"		1342831	0					
ANR	1343420	Callee	strcpy		1342831	0					
ANR	1343421	Identifier	strcpy		1342831	0					
ANR	1343422	ArgumentList	buf		1342831	1					
ANR	1343423	Argument	buf		1342831	0					
ANR	1343424	Identifier	buf		1342831	0					
ANR	1343425	Argument	str		1342831	1					
ANR	1343426	Identifier	str		1342831	0					
ANR	1343427	ExpressionStatement	first = false	2283:12:72066:72079	1342831	7	True				
ANR	1343428	AssignmentExpression	first = false		1342831	0		=			
ANR	1343429	Identifier	first		1342831	0					
ANR	1343430	Identifier	false		1342831	1					
ANR	1343431	ExpressionStatement	flush_buf ( buf )	2286:4:72101:72115	1342831	7	True				
ANR	1343432	CallExpression	flush_buf ( buf )		1342831	0					
ANR	1343433	Callee	flush_buf		1342831	0					
ANR	1343434	Identifier	flush_buf		1342831	0					
ANR	1343435	ArgumentList	buf		1342831	1					
ANR	1343436	Argument	buf		1342831	0					
ANR	1343437	Identifier	buf		1342831	0					
ANR	1343438	IfStatement	if ( level > 1 )		1342831	8					
ANR	1343439	Condition	level > 1	2287:8:72125:72133	1342831	0	True				
ANR	1343440	RelationalExpression	level > 1		1342831	0		>			
ANR	1343441	Identifier	level		1342831	0					
ANR	1343442	PrimaryExpression	1		1342831	1					
ANR	1343443	ExpressionStatement	"wl ( ""setobjectformat"" )"	2288:8:72144:72165	1342831	1	True				
ANR	1343444	CallExpression	"wl ( ""setobjectformat"" )"		1342831	0					
ANR	1343445	Callee	wl		1342831	0					
ANR	1343446	Identifier	wl		1342831	0					
ANR	1343447	ArgumentList	"""setobjectformat"""		1342831	1					
ANR	1343448	Argument	"""setobjectformat"""		1342831	0					
ANR	1343449	PrimaryExpression	"""setobjectformat"""		1342831	0					
ANR	1343450	ReturnType	void		1342831	1					
ANR	1343451	Identifier	mergefile		1342831	2					
ANR	1343452	ParameterList	"const char * os_prefix , const char * inname , FILE * in , FILE * config , bool intact"		1342831	3					
ANR	1343453	Parameter	const char * os_prefix	2191:10:68748:68768	1342831	0	True				
ANR	1343454	ParameterType	const char *		1342831	0					
ANR	1343455	Identifier	os_prefix		1342831	1					
ANR	1343456	Parameter	const char * inname	2191:33:68771:68788	1342831	1	True				
ANR	1343457	ParameterType	const char *		1342831	0					
ANR	1343458	Identifier	inname		1342831	1					
ANR	1343459	Parameter	FILE * in	2191:53:68791:68799	1342831	2	True				
ANR	1343460	ParameterType	FILE *		1342831	0					
ANR	1343461	Identifier	in		1342831	1					
ANR	1343462	Parameter	FILE * config	2191:64:68802:68814	1342831	3	True				
ANR	1343463	ParameterType	FILE *		1342831	0					
ANR	1343464	Identifier	config		1342831	1					
ANR	1343465	Parameter	bool intact	2192:10:68827:68837	1342831	4	True				
ANR	1343466	ParameterType	bool		1342831	0					
ANR	1343467	Identifier	intact		1342831	1					
ANR	1343468	CFGEntryNode	ENTRY		1342831		True				
ANR	1343469	CFGExitNode	EXIT		1342831		True				
ANR	1343470	Symbol	ps		1342831						
ANR	1343471	Symbol	line		1342831						
ANR	1343472	Symbol	& nlines		1342831						
ANR	1343473	Symbol	nlines		1342831						
ANR	1343474	Symbol	do_intact		1342831						
ANR	1343475	Symbol	strchr		1342831						
ANR	1343476	Symbol	* line		1342831						
ANR	1343477	Symbol	prefix_open		1342831						
ANR	1343478	Symbol	strncmp		1342831						
ANR	1343479	Symbol	strlen		1342831						
ANR	1343480	Symbol	quote		1342831						
ANR	1343481	Symbol	len		1342831						
ANR	1343482	Symbol	* quote		1342831						
ANR	1343483	Symbol	doit		1342831						
ANR	1343484	Symbol	os_prefix		1342831						
ANR	1343485	Symbol	* psname		1342831						
ANR	1343486	Symbol	* str		1342831						
ANR	1343487	Symbol	inname		1342831						
ANR	1343488	Symbol	LINE_SIZE		1342831						
ANR	1343489	Symbol	strcmp		1342831						
ANR	1343490	Symbol	* buf		1342831						
ANR	1343491	Symbol	NULL		1342831						
ANR	1343492	Symbol	in		1342831						
ANR	1343493	Symbol	level		1342831						
ANR	1343494	Symbol	psname		1342831						
ANR	1343495	Symbol	false		1342831						
ANR	1343496	Symbol	stderr		1342831						
ANR	1343497	Symbol	str		1342831						
ANR	1343498	Symbol	intact		1342831						
ANR	1343499	Symbol	buf		1342831						
ANR	1343500	Symbol	* strlen		1342831						
ANR	1343501	Symbol	sscanf		1342831						
ANR	1343502	Symbol	true		1342831						
ANR	1343503	Symbol	rl		1342831						
ANR	1343504	Symbol	config		1342831						
ANR	1343505	Symbol	first		1342831						
ANR	1343506	Symbol	* len		1342831						
ANR	1343507	Function	merge_to_ps	2292:0:72213:72500							
ANR	1343508	FunctionDef	"merge_to_ps (const char * os_prefix , const char * inname , FILE * in , FILE * config)"		1343507	0					
ANR	1343509	CompoundStatement		2294:0:72299:72500	1343507	0					
ANR	1343510	IdentifierDeclStatement	char line [ LINE_SIZE + 1 ] ;	2295:4:72305:72329	1343507	0	True				
ANR	1343511	IdentifierDecl	line [ LINE_SIZE + 1 ]		1343507	0					
ANR	1343512	IdentifierDeclType	char [ LINE_SIZE + 1 ]		1343507	0					
ANR	1343513	Identifier	line		1343507	1					
ANR	1343514	AdditiveExpression	LINE_SIZE + 1		1343507	2		+			
ANR	1343515	Identifier	LINE_SIZE		1343507	0					
ANR	1343516	PrimaryExpression	1		1343507	1					
ANR	1343517	WhileStatement	"while ( ( rl ( in , line , LINE_SIZE ) , line [ 0 ] ) )"		1343507	1					
ANR	1343518	Condition	"rl ( in , line , LINE_SIZE ) , line [ 0 ]"	2297:11:72343:72376	1343507	0	True				
ANR	1343519	Expression	"rl ( in , line , LINE_SIZE ) , line [ 0 ]"		1343507	0					
ANR	1343520	CallExpression	"rl ( in , line , LINE_SIZE )"		1343507	0					
ANR	1343521	Callee	rl		1343507	0					
ANR	1343522	Identifier	rl		1343507	0					
ANR	1343523	ArgumentList	in		1343507	1					
ANR	1343524	Argument	in		1343507	0					
ANR	1343525	Identifier	in		1343507	0					
ANR	1343526	Argument	line		1343507	1					
ANR	1343527	Identifier	line		1343507	0					
ANR	1343528	Argument	LINE_SIZE		1343507	2					
ANR	1343529	Identifier	LINE_SIZE		1343507	0					
ANR	1343530	ArrayIndexing	line [ 0 ]		1343507	1					
ANR	1343531	Identifier	line		1343507	0					
ANR	1343532	PrimaryExpression	0		1343507	1					
ANR	1343533	CompoundStatement		4:47:79:79	1343507	1					
ANR	1343534	ExpressionStatement	"sprintf ( linebuf , ""%s"" , line )"	2298:8:72389:72418	1343507	0	True				
ANR	1343535	CallExpression	"sprintf ( linebuf , ""%s"" , line )"		1343507	0					
ANR	1343536	Callee	sprintf		1343507	0					
ANR	1343537	Identifier	sprintf		1343507	0					
ANR	1343538	ArgumentList	linebuf		1343507	1					
ANR	1343539	Argument	linebuf		1343507	0					
ANR	1343540	Identifier	linebuf		1343507	0					
ANR	1343541	Argument	"""%s"""		1343507	1					
ANR	1343542	PrimaryExpression	"""%s"""		1343507	0					
ANR	1343543	Argument	line		1343507	2					
ANR	1343544	Identifier	line		1343507	0					
ANR	1343545	ExpressionStatement	wl ( linebuf )	2299:8:72428:72439	1343507	1	True				
ANR	1343546	CallExpression	wl ( linebuf )		1343507	0					
ANR	1343547	Callee	wl		1343507	0					
ANR	1343548	Identifier	wl		1343507	0					
ANR	1343549	ArgumentList	linebuf		1343507	1					
ANR	1343550	Argument	linebuf		1343507	0					
ANR	1343551	Identifier	linebuf		1343507	0					
ANR	1343552	ExpressionStatement	"mergefile ( os_prefix , inname , in , config , false )"	2301:4:72451:72498	1343507	2	True				
ANR	1343553	CallExpression	"mergefile ( os_prefix , inname , in , config , false )"		1343507	0					
ANR	1343554	Callee	mergefile		1343507	0					
ANR	1343555	Identifier	mergefile		1343507	0					
ANR	1343556	ArgumentList	os_prefix		1343507	1					
ANR	1343557	Argument	os_prefix		1343507	0					
ANR	1343558	Identifier	os_prefix		1343507	0					
ANR	1343559	Argument	inname		1343507	1					
ANR	1343560	Identifier	inname		1343507	0					
ANR	1343561	Argument	in		1343507	2					
ANR	1343562	Identifier	in		1343507	0					
ANR	1343563	Argument	config		1343507	3					
ANR	1343564	Identifier	config		1343507	0					
ANR	1343565	Argument	false		1343507	4					
ANR	1343566	Identifier	false		1343507	0					
ANR	1343567	ReturnType	void		1343507	1					
ANR	1343568	Identifier	merge_to_ps		1343507	2					
ANR	1343569	ParameterList	"const char * os_prefix , const char * inname , FILE * in , FILE * config"		1343507	3					
ANR	1343570	Parameter	const char * os_prefix	2293:12:72230:72250	1343507	0	True				
ANR	1343571	ParameterType	const char *		1343507	0					
ANR	1343572	Identifier	os_prefix		1343507	1					
ANR	1343573	Parameter	const char * inname	2293:35:72253:72270	1343507	1	True				
ANR	1343574	ParameterType	const char *		1343507	0					
ANR	1343575	Identifier	inname		1343507	1					
ANR	1343576	Parameter	FILE * in	2293:55:72273:72281	1343507	2	True				
ANR	1343577	ParameterType	FILE *		1343507	0					
ANR	1343578	Identifier	in		1343507	1					
ANR	1343579	Parameter	FILE * config	2293:66:72284:72296	1343507	3	True				
ANR	1343580	ParameterType	FILE *		1343507	0					
ANR	1343581	Identifier	config		1343507	1					
ANR	1343582	CFGEntryNode	ENTRY		1343507		True				
ANR	1343583	CFGExitNode	EXIT		1343507		True				
ANR	1343584	Symbol	LINE_SIZE		1343507						
ANR	1343585	Symbol	linebuf		1343507						
ANR	1343586	Symbol	in		1343507						
ANR	1343587	Symbol	line		1343507						
ANR	1343588	Symbol	false		1343507						
ANR	1343589	Symbol	os_prefix		1343507						
ANR	1343590	Symbol	rl		1343507						
ANR	1343591	Symbol	* line		1343507						
ANR	1343592	Symbol	config		1343507						
ANR	1343593	Symbol	inname		1343507						
ANR	1343594	Function	main	2304:0:72503:79624							
ANR	1343595	FunctionDef	"main (int argc , char * argv [ ])"		1343594	0					
ANR	1343596	CompoundStatement		2306:0:72536:79624	1343594	0					
ANR	1343597	IdentifierDeclStatement	int i ;	2307:4:72542:72547	1343594	0	True				
ANR	1343598	IdentifierDecl	i		1343594	0					
ANR	1343599	IdentifierDeclType	int		1343594	0					
ANR	1343600	Identifier	i		1343594	1					
ANR	1343601	IdentifierDeclStatement	"int inode_count = 0 , totlen = 0 ;"	2308:4:72553:72584	1343594	1	True				
ANR	1343602	IdentifierDecl	inode_count = 0		1343594	0					
ANR	1343603	IdentifierDeclType	int		1343594	0					
ANR	1343604	Identifier	inode_count		1343594	1					
ANR	1343605	AssignmentExpression	inode_count = 0		1343594	2		=			
ANR	1343606	Identifier	inode_count		1343594	0					
ANR	1343607	PrimaryExpression	0		1343594	1					
ANR	1343608	IdentifierDecl	totlen = 0		1343594	1					
ANR	1343609	IdentifierDeclType	int		1343594	0					
ANR	1343610	Identifier	totlen		1343594	1					
ANR	1343611	AssignmentExpression	totlen = 0		1343594	2		=			
ANR	1343612	Identifier	totlen		1343594	0					
ANR	1343613	PrimaryExpression	0		1343594	1					
ANR	1343614	IdentifierDeclStatement	FILE * out ;	2309:4:72590:72599	1343594	2	True				
ANR	1343615	IdentifierDecl	* out		1343594	0					
ANR	1343616	IdentifierDeclType	FILE *		1343594	0					
ANR	1343617	Identifier	out		1343594	1					
ANR	1343618	IdentifierDeclStatement	"const char * outfilename = ""obj/gsromfs.c"" ;"	2310:4:72605:72646	1343594	3	True				
ANR	1343619	IdentifierDecl	"* outfilename = ""obj/gsromfs.c"""		1343594	0					
ANR	1343620	IdentifierDeclType	const char *		1343594	0					
ANR	1343621	Identifier	outfilename		1343594	1					
ANR	1343622	AssignmentExpression	"* outfilename = ""obj/gsromfs.c"""		1343594	2		=			
ANR	1343623	Identifier	outfilename		1343594	0					
ANR	1343624	PrimaryExpression	"""obj/gsromfs.c"""		1343594	1					
ANR	1343625	IdentifierDeclStatement	"const char * os_prefix = """" ;"	2311:4:72652:72678	1343594	4	True				
ANR	1343626	IdentifierDecl	"* os_prefix = """""		1343594	0					
ANR	1343627	IdentifierDeclType	const char *		1343594	0					
ANR	1343628	Identifier	os_prefix		1343594	1					
ANR	1343629	AssignmentExpression	"* os_prefix = """""		1343594	2		=			
ANR	1343630	Identifier	os_prefix		1343594	0					
ANR	1343631	PrimaryExpression	""""""		1343594	1					
ANR	1343632	IdentifierDeclStatement	"const char * rom_prefix = """" ;"	2312:4:72684:72711	1343594	5	True				
ANR	1343633	IdentifierDecl	"* rom_prefix = """""		1343594	0					
ANR	1343634	IdentifierDeclType	const char *		1343594	0					
ANR	1343635	Identifier	rom_prefix		1343594	1					
ANR	1343636	AssignmentExpression	"* rom_prefix = """""		1343594	2		=			
ANR	1343637	Identifier	rom_prefix		1343594	0					
ANR	1343638	PrimaryExpression	""""""		1343594	1					
ANR	1343639	IdentifierDeclStatement	int atarg = 1 ;	2313:4:72717:72730	1343594	6	True				
ANR	1343640	IdentifierDecl	atarg = 1		1343594	0					
ANR	1343641	IdentifierDeclType	int		1343594	0					
ANR	1343642	Identifier	atarg		1343594	1					
ANR	1343643	AssignmentExpression	atarg = 1		1343594	2		=			
ANR	1343644	Identifier	atarg		1343594	0					
ANR	1343645	PrimaryExpression	1		1343594	1					
ANR	1343646	IdentifierDeclStatement	int compression = 1 ;	2314:4:72736:72755	1343594	7	True				
ANR	1343647	IdentifierDecl	compression = 1		1343594	0					
ANR	1343648	IdentifierDeclType	int		1343594	0					
ANR	1343649	Identifier	compression		1343594	1					
ANR	1343650	AssignmentExpression	compression = 1		1343594	2		=			
ANR	1343651	Identifier	compression		1343594	0					
ANR	1343652	PrimaryExpression	1		1343594	1					
ANR	1343653	IdentifierDeclStatement	int compaction = 0 ;	2315:4:72798:72816	1343594	8	True				
ANR	1343654	IdentifierDecl	compaction = 0		1343594	0					
ANR	1343655	IdentifierDeclType	int		1343594	0					
ANR	1343656	Identifier	compaction		1343594	1					
ANR	1343657	AssignmentExpression	compaction = 0		1343594	2		=			
ANR	1343658	Identifier	compaction		1343594	0					
ANR	1343659	PrimaryExpression	0		1343594	1					
ANR	1343660	IdentifierDeclStatement	"Xlist_element * Xlist_scan = NULL , * Xlist_head = NULL ;"	2316:4:72822:72874	1343594	9	True				
ANR	1343661	IdentifierDecl	* Xlist_scan = NULL		1343594	0					
ANR	1343662	IdentifierDeclType	Xlist_element *		1343594	0					
ANR	1343663	Identifier	Xlist_scan		1343594	1					
ANR	1343664	AssignmentExpression	* Xlist_scan = NULL		1343594	2		=			
ANR	1343665	Identifier	NULL		1343594	0					
ANR	1343666	Identifier	NULL		1343594	1					
ANR	1343667	IdentifierDecl	* Xlist_head = NULL		1343594	1					
ANR	1343668	IdentifierDeclType	Xlist_element *		1343594	0					
ANR	1343669	Identifier	Xlist_head		1343594	1					
ANR	1343670	AssignmentExpression	* Xlist_head = NULL		1343594	2		=			
ANR	1343671	Identifier	NULL		1343594	0					
ANR	1343672	Identifier	NULL		1343594	1					
ANR	1343673	IdentifierDeclStatement	char pa [ PATH_STR_LEN ] ;	2317:4:72880:72901	1343594	10	True				
ANR	1343674	IdentifierDecl	pa [ PATH_STR_LEN ]		1343594	0					
ANR	1343675	IdentifierDeclType	char [ PATH_STR_LEN ]		1343594	0					
ANR	1343676	Identifier	pa		1343594	1					
ANR	1343677	Identifier	PATH_STR_LEN		1343594	2					
ANR	1343678	IdentifierDeclStatement	time_t buildtime = 0 ;	2318:4:72907:72927	1343594	11	True				
ANR	1343679	IdentifierDecl	buildtime = 0		1343594	0					
ANR	1343680	IdentifierDeclType	time_t		1343594	0					
ANR	1343681	Identifier	buildtime		1343594	1					
ANR	1343682	AssignmentExpression	buildtime = 0		1343594	2		=			
ANR	1343683	Identifier	buildtime		1343594	0					
ANR	1343684	PrimaryExpression	0		1343594	1					
ANR	1343685	IdentifierDeclStatement	char * env_source_date_epoch ;	2319:4:72933:72960	1343594	12	True				
ANR	1343686	IdentifierDecl	* env_source_date_epoch		1343594	0					
ANR	1343687	IdentifierDeclType	char *		1343594	0					
ANR	1343688	Identifier	env_source_date_epoch		1343594	1					
ANR	1343689	ExpressionStatement	"memset ( pa , 0x00 , PATH_STR_LEN )"	2321:4:72967:72997	1343594	13	True				
ANR	1343690	CallExpression	"memset ( pa , 0x00 , PATH_STR_LEN )"		1343594	0					
ANR	1343691	Callee	memset		1343594	0					
ANR	1343692	Identifier	memset		1343594	0					
ANR	1343693	ArgumentList	pa		1343594	1					
ANR	1343694	Argument	pa		1343594	0					
ANR	1343695	Identifier	pa		1343594	0					
ANR	1343696	Argument	0x00		1343594	1					
ANR	1343697	PrimaryExpression	0x00		1343594	0					
ANR	1343698	Argument	PATH_STR_LEN		1343594	2					
ANR	1343699	Identifier	PATH_STR_LEN		1343594	0					
ANR	1343700	IfStatement	if ( argc < 2 )		1343594	14					
ANR	1343701	Condition	argc < 2	2323:8:73008:73015	1343594	0	True				
ANR	1343702	RelationalExpression	argc < 2		1343594	0		<			
ANR	1343703	Identifier	argc		1343594	0					
ANR	1343704	PrimaryExpression	2		1343594	1					
ANR	1343705	CompoundStatement		18:18:481:481	1343594	1					
ANR	1343706	Statement	printf	2324:8:73028:73033	1343594	0	True				
ANR	1343707	Statement	(	2324:14:73034:73034	1343594	1	True				
ANR	1343708	Statement	"""\\n"""	2324:15:73035:73038	1343594	2	True				
ANR	1343709	Statement	"""       Usage: mkromfs [-o outputfile] [options ...] paths\\n"""	2325:16:73056:73116	1343594	3	True				
ANR	1343710	Statement	"""           options and paths can be interspersed and are processed in order\\n"""	2326:16:73134:73212	1343594	4	True				
ANR	1343711	Statement	"""           options:\\n"""	2327:16:73230:73252	1343594	5	True				
ANR	1343712	Statement	"""               -o outputfile   default: obj/gsromfs.c if this option present, must be first.\\n"""	2328:16:73270:73365	1343594	6	True				
ANR	1343713	Statement	"""               -P prefix       use prefix to find path. prefix not included in %%rom%%\\n"""	2329:16:73383:73472	1343594	7	True				
ANR	1343714	Statement	"""               -X path         exclude the path from further processing.\\n"""	2330:16:73490:73565	1343594	8	True				
ANR	1343715	Statement	"""                         Note: The tail of any path encountered will be tested so .svn on the -X\\n"""	2331:16:73583:73682	1343594	9	True				
ANR	1343716	Statement	"""                               list will exclude that path in all subsequent paths enumerated.\\n"""	2332:16:73700:73797	1343594	10	True				
ANR	1343717	Statement	"""\\n"""	2333:16:73815:73818	1343594	11	True				
ANR	1343718	Statement	"""               -d romprefix    directory in %%rom file system (just a prefix string on filename)\\n"""	2334:16:73836:73935	1343594	12	True				
ANR	1343719	Statement	"""               -c              compression on\\n"""	2335:16:73953:74001	1343594	13	True				
ANR	1343720	Statement	"""               -b              compression off (binary).\\n"""	2336:16:74019:74078	1343594	14	True				
ANR	1343721	Statement	"""               -C              postscript 'compaction' on\\n"""	2337:16:74096:74156	1343594	15	True				
ANR	1343722	Statement	"""               -B              postscript 'compaction' off\\n"""	2338:16:74174:74235	1343594	16	True				
ANR	1343723	Statement	"""               -g initfile gconfig_h \\n"""	2339:16:74253:74293	1343594	17	True				
ANR	1343724	Statement	"""                       special handling to read the 'gs_init.ps' file (from\\n"""	2340:16:74311:74389	1343594	18	True				
ANR	1343725	Statement	"""                       the current -P prefix path), and read the gconfig.h for\\n"""	2341:16:74407:74488	1343594	19	True				
ANR	1343726	Statement	"""                       psfile_ entries and combines them into a whitespace\\n"""	2342:16:74506:74583	1343594	20	True				
ANR	1343727	Statement	"""                       optimized and no comments form and writes this 'gs_init.ps'\\n"""	2343:16:74601:74686	1343594	21	True				
ANR	1343728	Statement	"""                       to the current -d destination path. This is a space and\\n"""	2344:16:74704:74785	1343594	22	True				
ANR	1343729	Statement	"""                       startup performance improvement, so also this should be\\n"""	2345:16:74803:74884	1343594	23	True				
ANR	1343730	Statement	"""                       BEFORE other stuff in the %%rom%% list of files (currently\\n"""	2346:16:74902:74986	1343594	24	True				
ANR	1343731	Statement	"""                       we do a sequential search in the %%rom%% directory).\\n"""	2347:16:75004:75082	1343594	25	True				
ANR	1343732	Statement	"""\\n"""	2348:16:75100:75103	1343594	26	True				
ANR	1343733	Statement	"""                       For performance reasons, it is best to turn off compression\\n"""	2349:16:75121:75206	1343594	27	True				
ANR	1343734	Statement	"""                       for the init file. Less frequently accessed files, if they\\n"""	2350:16:75224:75308	1343594	28	True				
ANR	1343735	Statement	"""                       are large should still be compressed.\\n"""	2351:16:75326:75389	1343594	29	True				
ANR	1343736	Statement	"""\\n"""	2352:16:75407:75410	1343594	30	True				
ANR	1343737	Statement	)	2353:12:75424:75424	1343594	31	True				
ANR	1343738	ExpressionStatement		2353:13:75425:75425	1343594	32	True				
ANR	1343739	ExpressionStatement	exit ( 1 )	2354:8:75435:75442	1343594	33	True				
ANR	1343740	CallExpression	exit ( 1 )		1343594	0					
ANR	1343741	Callee	exit		1343594	0					
ANR	1343742	Identifier	exit		1343594	0					
ANR	1343743	ArgumentList	1		1343594	1					
ANR	1343744	Argument	1		1343594	0					
ANR	1343745	PrimaryExpression	1		1343594	0					
ANR	1343746	ExpressionStatement	"printf ( ""compression will use %d byte blocksize (zlib output buffer %d bytes)\\n"" , ROMFS_BLOCKSIZE , ROMFS_CBUFSIZE )"	2357:4:75455:75576	1343594	15	True				
ANR	1343747	CallExpression	"printf ( ""compression will use %d byte blocksize (zlib output buffer %d bytes)\\n"" , ROMFS_BLOCKSIZE , ROMFS_CBUFSIZE )"		1343594	0					
ANR	1343748	Callee	printf		1343594	0					
ANR	1343749	Identifier	printf		1343594	0					
ANR	1343750	ArgumentList	"""compression will use %d byte blocksize (zlib output buffer %d bytes)\\n"""		1343594	1					
ANR	1343751	Argument	"""compression will use %d byte blocksize (zlib output buffer %d bytes)\\n"""		1343594	0					
ANR	1343752	PrimaryExpression	"""compression will use %d byte blocksize (zlib output buffer %d bytes)\\n"""		1343594	0					
ANR	1343753	Argument	ROMFS_BLOCKSIZE		1343594	1					
ANR	1343754	Identifier	ROMFS_BLOCKSIZE		1343594	0					
ANR	1343755	Argument	ROMFS_CBUFSIZE		1343594	2					
ANR	1343756	Identifier	ROMFS_CBUFSIZE		1343594	0					
ANR	1343757	IfStatement	if ( argc > 3 && argv [ 1 ] [ 0 ] == '-' && argv [ 1 ] [ 1 ] == 'o' )		1343594	16					
ANR	1343758	Condition	argc > 3 && argv [ 1 ] [ 0 ] == '-' && argv [ 1 ] [ 1 ] == 'o'	2360:8:75587:75636	1343594	0	True				
ANR	1343759	AndExpression	argc > 3 && argv [ 1 ] [ 0 ] == '-' && argv [ 1 ] [ 1 ] == 'o'		1343594	0		&&			
ANR	1343760	RelationalExpression	argc > 3		1343594	0		>			
ANR	1343761	Identifier	argc		1343594	0					
ANR	1343762	PrimaryExpression	3		1343594	1					
ANR	1343763	AndExpression	argv [ 1 ] [ 0 ] == '-' && argv [ 1 ] [ 1 ] == 'o'		1343594	1		&&			
ANR	1343764	EqualityExpression	argv [ 1 ] [ 0 ] == '-'		1343594	0		==			
ANR	1343765	ArrayIndexing	argv [ 1 ] [ 0 ]		1343594	0					
ANR	1343766	ArrayIndexing	argv [ 1 ]		1343594	0					
ANR	1343767	Identifier	argv		1343594	0					
ANR	1343768	PrimaryExpression	1		1343594	1					
ANR	1343769	PrimaryExpression	0		1343594	1					
ANR	1343770	PrimaryExpression	'-'		1343594	1					
ANR	1343771	EqualityExpression	argv [ 1 ] [ 1 ] == 'o'		1343594	1		==			
ANR	1343772	ArrayIndexing	argv [ 1 ] [ 1 ]		1343594	0					
ANR	1343773	ArrayIndexing	argv [ 1 ]		1343594	0					
ANR	1343774	Identifier	argv		1343594	0					
ANR	1343775	PrimaryExpression	1		1343594	1					
ANR	1343776	PrimaryExpression	1		1343594	1					
ANR	1343777	PrimaryExpression	'o'		1343594	1					
ANR	1343778	CompoundStatement		55:60:3102:3102	1343594	1					
ANR	1343779	ExpressionStatement	outfilename = argv [ 2 ]	2362:8:75696:75717	1343594	0	True				
ANR	1343780	AssignmentExpression	outfilename = argv [ 2 ]		1343594	0		=			
ANR	1343781	Identifier	outfilename		1343594	0					
ANR	1343782	ArrayIndexing	argv [ 2 ]		1343594	1					
ANR	1343783	Identifier	argv		1343594	0					
ANR	1343784	PrimaryExpression	2		1343594	1					
ANR	1343785	ExpressionStatement	atarg += 2	2363:8:75727:75737	1343594	1	True				
ANR	1343786	AssignmentExpression	atarg += 2		1343594	0		+=			
ANR	1343787	Identifier	atarg		1343594	0					
ANR	1343788	PrimaryExpression	2		1343594	1					
ANR	1343789	ExpressionStatement	"printf ( ""   writing romfs data to '%s'\\n"" , outfilename )"	2365:4:75749:75803	1343594	17	True				
ANR	1343790	CallExpression	"printf ( ""   writing romfs data to '%s'\\n"" , outfilename )"		1343594	0					
ANR	1343791	Callee	printf		1343594	0					
ANR	1343792	Identifier	printf		1343594	0					
ANR	1343793	ArgumentList	"""   writing romfs data to '%s'\\n"""		1343594	1					
ANR	1343794	Argument	"""   writing romfs data to '%s'\\n"""		1343594	0					
ANR	1343795	PrimaryExpression	"""   writing romfs data to '%s'\\n"""		1343594	0					
ANR	1343796	Argument	outfilename		1343594	1					
ANR	1343797	Identifier	outfilename		1343594	0					
ANR	1343798	ExpressionStatement	"out = fopen ( outfilename , ""w"" )"	2366:4:75809:75838	1343594	18	True				
ANR	1343799	AssignmentExpression	"out = fopen ( outfilename , ""w"" )"		1343594	0		=			
ANR	1343800	Identifier	out		1343594	0					
ANR	1343801	CallExpression	"fopen ( outfilename , ""w"" )"		1343594	1					
ANR	1343802	Callee	fopen		1343594	0					
ANR	1343803	Identifier	fopen		1343594	0					
ANR	1343804	ArgumentList	outfilename		1343594	1					
ANR	1343805	Argument	outfilename		1343594	0					
ANR	1343806	Identifier	outfilename		1343594	0					
ANR	1343807	Argument	"""w"""		1343594	1					
ANR	1343808	PrimaryExpression	"""w"""		1343594	0					
ANR	1343809	ExpressionStatement	"fprintf ( out , ""\\t/* Generated data for %%rom%% device, see mkromfs.c */\\n"" )"	2368:4:75845:75918	1343594	19	True				
ANR	1343810	CallExpression	"fprintf ( out , ""\\t/* Generated data for %%rom%% device, see mkromfs.c */\\n"" )"		1343594	0					
ANR	1343811	Callee	fprintf		1343594	0					
ANR	1343812	Identifier	fprintf		1343594	0					
ANR	1343813	ArgumentList	out		1343594	1					
ANR	1343814	Argument	out		1343594	0					
ANR	1343815	Identifier	out		1343594	0					
ANR	1343816	Argument	"""\\t/* Generated data for %%rom%% device, see mkromfs.c */\\n"""		1343594	1					
ANR	1343817	PrimaryExpression	"""\\t/* Generated data for %%rom%% device, see mkromfs.c */\\n"""		1343594	0					
ANR	1343818	ExpressionStatement	"fprintf ( out , ""\\t/* this code assumes a big endian target platform */\\n"" )"	2370:4:75947:76018	1343594	20	True				
ANR	1343819	CallExpression	"fprintf ( out , ""\\t/* this code assumes a big endian target platform */\\n"" )"		1343594	0					
ANR	1343820	Callee	fprintf		1343594	0					
ANR	1343821	Identifier	fprintf		1343594	0					
ANR	1343822	ArgumentList	out		1343594	1					
ANR	1343823	Argument	out		1343594	0					
ANR	1343824	Identifier	out		1343594	0					
ANR	1343825	Argument	"""\\t/* this code assumes a big endian target platform */\\n"""		1343594	1					
ANR	1343826	PrimaryExpression	"""\\t/* this code assumes a big endian target platform */\\n"""		1343594	0					
ANR	1343827	ExpressionStatement	"fprintf ( out , ""\\n#include \\""stdint_.h\\""\\n"" )"	2374:4:76117:76158	1343594	21	True				
ANR	1343828	CallExpression	"fprintf ( out , ""\\n#include \\""stdint_.h\\""\\n"" )"		1343594	0					
ANR	1343829	Callee	fprintf		1343594	0					
ANR	1343830	Identifier	fprintf		1343594	0					
ANR	1343831	ArgumentList	out		1343594	1					
ANR	1343832	Argument	out		1343594	0					
ANR	1343833	Identifier	out		1343594	0					
ANR	1343834	Argument	"""\\n#include \\""stdint_.h\\""\\n"""		1343594	1					
ANR	1343835	PrimaryExpression	"""\\n#include \\""stdint_.h\\""\\n"""		1343594	0					
ANR	1343836	ExpressionStatement	"fprintf ( out , ""\\n#include \\""time_.h\\""\\n\\n"" )"	2375:4:76164:76205	1343594	22	True				
ANR	1343837	CallExpression	"fprintf ( out , ""\\n#include \\""time_.h\\""\\n\\n"" )"		1343594	0					
ANR	1343838	Callee	fprintf		1343594	0					
ANR	1343839	Identifier	fprintf		1343594	0					
ANR	1343840	ArgumentList	out		1343594	1					
ANR	1343841	Argument	out		1343594	0					
ANR	1343842	Identifier	out		1343594	0					
ANR	1343843	Argument	"""\\n#include \\""time_.h\\""\\n\\n"""		1343594	1					
ANR	1343844	PrimaryExpression	"""\\n#include \\""time_.h\\""\\n\\n"""		1343594	0					
ANR	1343845	IfStatement	"if ( ( env_source_date_epoch = getenv ( ""SOURCE_DATE_EPOCH"" ) ) )"		1343594	23					
ANR	1343846	Condition	"env_source_date_epoch = getenv ( ""SOURCE_DATE_EPOCH"" )"	2377:8:76216:76268	1343594	0	True				
ANR	1343847	AssignmentExpression	"env_source_date_epoch = getenv ( ""SOURCE_DATE_EPOCH"" )"		1343594	0		=			
ANR	1343848	Identifier	env_source_date_epoch		1343594	0					
ANR	1343849	CallExpression	"getenv ( ""SOURCE_DATE_EPOCH"" )"		1343594	1					
ANR	1343850	Callee	getenv		1343594	0					
ANR	1343851	Identifier	getenv		1343594	0					
ANR	1343852	ArgumentList	"""SOURCE_DATE_EPOCH"""		1343594	1					
ANR	1343853	Argument	"""SOURCE_DATE_EPOCH"""		1343594	0					
ANR	1343854	PrimaryExpression	"""SOURCE_DATE_EPOCH"""		1343594	0					
ANR	1343855	CompoundStatement		72:63:3734:3734	1343594	1					
ANR	1343856	ExpressionStatement	"buildtime = strtoul ( env_source_date_epoch , NULL , 10 )"	2378:8:76281:76333	1343594	0	True				
ANR	1343857	AssignmentExpression	"buildtime = strtoul ( env_source_date_epoch , NULL , 10 )"		1343594	0		=			
ANR	1343858	Identifier	buildtime		1343594	0					
ANR	1343859	CallExpression	"strtoul ( env_source_date_epoch , NULL , 10 )"		1343594	1					
ANR	1343860	Callee	strtoul		1343594	0					
ANR	1343861	Identifier	strtoul		1343594	0					
ANR	1343862	ArgumentList	env_source_date_epoch		1343594	1					
ANR	1343863	Argument	env_source_date_epoch		1343594	0					
ANR	1343864	Identifier	env_source_date_epoch		1343594	0					
ANR	1343865	Argument	NULL		1343594	1					
ANR	1343866	Identifier	NULL		1343594	0					
ANR	1343867	Argument	10		1343594	2					
ANR	1343868	PrimaryExpression	10		1343594	0					
ANR	1343869	IfStatement	if ( ! buildtime )		1343594	24					
ANR	1343870	Condition	! buildtime	2380:8:76349:76358	1343594	0	True				
ANR	1343871	UnaryOperationExpression	! buildtime		1343594	0					
ANR	1343872	UnaryOperator	!		1343594	0					
ANR	1343873	Identifier	buildtime		1343594	1					
ANR	1343874	ExpressionStatement	buildtime = time ( NULL )	2381:8:76369:76391	1343594	1	True				
ANR	1343875	AssignmentExpression	buildtime = time ( NULL )		1343594	0		=			
ANR	1343876	Identifier	buildtime		1343594	0					
ANR	1343877	CallExpression	time ( NULL )		1343594	1					
ANR	1343878	Callee	time		1343594	0					
ANR	1343879	Identifier	time		1343594	0					
ANR	1343880	ArgumentList	NULL		1343594	1					
ANR	1343881	Argument	NULL		1343594	0					
ANR	1343882	Identifier	NULL		1343594	0					
ANR	1343883	ExpressionStatement	"fprintf ( out , ""    time_t gs_romfs_buildtime = %ld;\\n\\n"" , buildtime )"	2382:4:76397:76463	1343594	25	True				
ANR	1343884	CallExpression	"fprintf ( out , ""    time_t gs_romfs_buildtime = %ld;\\n\\n"" , buildtime )"		1343594	0					
ANR	1343885	Callee	fprintf		1343594	0					
ANR	1343886	Identifier	fprintf		1343594	0					
ANR	1343887	ArgumentList	out		1343594	1					
ANR	1343888	Argument	out		1343594	0					
ANR	1343889	Identifier	out		1343594	0					
ANR	1343890	Argument	"""    time_t gs_romfs_buildtime = %ld;\\n\\n"""		1343594	1					
ANR	1343891	PrimaryExpression	"""    time_t gs_romfs_buildtime = %ld;\\n\\n"""		1343594	0					
ANR	1343892	Argument	buildtime		1343594	2					
ANR	1343893	Identifier	buildtime		1343594	0					
ANR	1343894	ForStatement	for ( ; atarg < argc ; atarg ++ )		1343594	26					
ANR	1343895	Condition	atarg < argc	2385:11:76553:76564	1343594	0	True				
ANR	1343896	RelationalExpression	atarg < argc		1343594	0		<			
ANR	1343897	Identifier	atarg		1343594	0					
ANR	1343898	Identifier	argc		1343594	1					
ANR	1343899	PostIncDecOperationExpression	atarg ++	2385:25:76567:76573	1343594	1	True				
ANR	1343900	Identifier	atarg		1343594	0					
ANR	1343901	IncDec	++		1343594	1					
ANR	1343902	CompoundStatement		80:34:4039:4039	1343594	2					
ANR	1343903	IfStatement	if ( argv [ atarg ] [ 0 ] == '-' )		1343594	0					
ANR	1343904	Condition	argv [ atarg ] [ 0 ] == '-'	2386:12:76590:76610	1343594	0	True				
ANR	1343905	EqualityExpression	argv [ atarg ] [ 0 ] == '-'		1343594	0		==			
ANR	1343906	ArrayIndexing	argv [ atarg ] [ 0 ]		1343594	0					
ANR	1343907	ArrayIndexing	argv [ atarg ]		1343594	0					
ANR	1343908	Identifier	argv		1343594	0					
ANR	1343909	Identifier	atarg		1343594	1					
ANR	1343910	PrimaryExpression	0		1343594	1					
ANR	1343911	PrimaryExpression	'-'		1343594	1					
ANR	1343912	CompoundStatement		81:35:4076:4076	1343594	1					
ANR	1343913	SwitchStatement	switch ( argv [ atarg ] [ 1 ] )		1343594	0					
ANR	1343914	Condition	argv [ atarg ] [ 1 ]	2388:20:76671:76684	1343594	0	True				
ANR	1343915	ArrayIndexing	argv [ atarg ] [ 1 ]		1343594	0					
ANR	1343916	ArrayIndexing	argv [ atarg ]		1343594	0					
ANR	1343917	Identifier	argv		1343594	0					
ANR	1343918	Identifier	atarg		1343594	1					
ANR	1343919	PrimaryExpression	1		1343594	1					
ANR	1343920	CompoundStatement		83:36:4150:4150	1343594	1					
ANR	1343921	Label	case 'b' :	2389:14:76703:76711	1343594	0	True				
ANR	1343922	ExpressionStatement	compression = 0	2390:16:76729:76744	1343594	1	True				
ANR	1343923	AssignmentExpression	compression = 0		1343594	0		=			
ANR	1343924	Identifier	compression		1343594	0					
ANR	1343925	PrimaryExpression	0		1343594	1					
ANR	1343926	BreakStatement	break ;	2391:16:76762:76767	1343594	2	True				
ANR	1343927	Label	case 'c' :	2392:14:76783:76791	1343594	3	True				
ANR	1343928	ExpressionStatement	compression = 1	2393:16:76809:76824	1343594	4	True				
ANR	1343929	AssignmentExpression	compression = 1		1343594	0		=			
ANR	1343930	Identifier	compression		1343594	0					
ANR	1343931	PrimaryExpression	1		1343594	1					
ANR	1343932	BreakStatement	break ;	2394:16:76842:76847	1343594	5	True				
ANR	1343933	Label	case 'B' :	2395:14:76863:76871	1343594	6	True				
ANR	1343934	ExpressionStatement	compaction = 0	2396:16:76889:76903	1343594	7	True				
ANR	1343935	AssignmentExpression	compaction = 0		1343594	0		=			
ANR	1343936	Identifier	compaction		1343594	0					
ANR	1343937	PrimaryExpression	0		1343594	1					
ANR	1343938	BreakStatement	break ;	2397:16:76921:76926	1343594	8	True				
ANR	1343939	Label	case 'C' :	2398:14:76942:76950	1343594	9	True				
ANR	1343940	ExpressionStatement	compaction = 1	2399:16:76968:76982	1343594	10	True				
ANR	1343941	AssignmentExpression	compaction = 1		1343594	0		=			
ANR	1343942	Identifier	compaction		1343594	0					
ANR	1343943	PrimaryExpression	1		1343594	1					
ANR	1343944	BreakStatement	break ;	2400:16:77000:77005	1343594	11	True				
ANR	1343945	Label	case 'd' :	2401:14:77021:77029	1343594	12	True				
ANR	1343946	IfStatement	if ( ++ atarg == argc )		1343594	13					
ANR	1343947	Condition	++ atarg == argc	2402:20:77051:77065	1343594	0	True				
ANR	1343948	EqualityExpression	++ atarg == argc		1343594	0		==			
ANR	1343949	UnaryExpression	++ atarg		1343594	0					
ANR	1343950	IncDec	++		1343594	0					
ANR	1343951	Identifier	atarg		1343594	1					
ANR	1343952	Identifier	argc		1343594	1					
ANR	1343953	CompoundStatement		97:37:4531:4531	1343594	1					
ANR	1343954	ExpressionStatement	"printf ( ""   option %s missing required argument\\n"" , argv [ atarg - 1 ] )"	2403:20:77090:77155	1343594	0	True				
ANR	1343955	CallExpression	"printf ( ""   option %s missing required argument\\n"" , argv [ atarg - 1 ] )"		1343594	0					
ANR	1343956	Callee	printf		1343594	0					
ANR	1343957	Identifier	printf		1343594	0					
ANR	1343958	ArgumentList	"""   option %s missing required argument\\n"""		1343594	1					
ANR	1343959	Argument	"""   option %s missing required argument\\n"""		1343594	0					
ANR	1343960	PrimaryExpression	"""   option %s missing required argument\\n"""		1343594	0					
ANR	1343961	Argument	argv [ atarg - 1 ]		1343594	1					
ANR	1343962	ArrayIndexing	argv [ atarg - 1 ]		1343594	0					
ANR	1343963	Identifier	argv		1343594	0					
ANR	1343964	AdditiveExpression	atarg - 1		1343594	1		-			
ANR	1343965	Identifier	atarg		1343594	0					
ANR	1343966	PrimaryExpression	1		1343594	1					
ANR	1343967	ExpressionStatement	exit ( 1 )	2404:20:77177:77184	1343594	1	True				
ANR	1343968	CallExpression	exit ( 1 )		1343594	0					
ANR	1343969	Callee	exit		1343594	0					
ANR	1343970	Identifier	exit		1343594	0					
ANR	1343971	ArgumentList	1		1343594	1					
ANR	1343972	Argument	1		1343594	0					
ANR	1343973	PrimaryExpression	1		1343594	0					
ANR	1343974	ExpressionStatement	rom_prefix = argv [ atarg ]	2406:16:77220:77244	1343594	14	True				
ANR	1343975	AssignmentExpression	rom_prefix = argv [ atarg ]		1343594	0		=			
ANR	1343976	Identifier	rom_prefix		1343594	0					
ANR	1343977	ArrayIndexing	argv [ atarg ]		1343594	1					
ANR	1343978	Identifier	argv		1343594	0					
ANR	1343979	Identifier	atarg		1343594	1					
ANR	1343980	BreakStatement	break ;	2407:16:77262:77267	1343594	15	True				
ANR	1343981	Label	case 'g' :	2408:14:77283:77291	1343594	16	True				
ANR	1343982	CompoundStatement		106:20:4849:4883	1343594	17					
ANR	1343983	IdentifierDeclStatement	char initfile [ PATH_STR_LEN ] = { 0 } ;	2410:20:77331:77364	1343594	0	True				
ANR	1343984	IdentifierDecl	initfile [ PATH_STR_LEN ] = { 0 }		1343594	0					
ANR	1343985	IdentifierDeclType	char [ PATH_STR_LEN ]		1343594	0					
ANR	1343986	Identifier	initfile		1343594	1					
ANR	1343987	Identifier	PATH_STR_LEN		1343594	2					
ANR	1343988	AssignmentExpression	initfile [ PATH_STR_LEN ] = { 0 }		1343594	3		=			
ANR	1343989	Identifier	PATH_STR_LEN		1343594	0					
ANR	1343990	InitializerList	0		1343594	1					
ANR	1343991	PrimaryExpression	0		1343594	0					
ANR	1343992	IdentifierDeclStatement	char gconfig_h [ PATH_STR_LEN ] = { 0 } ;	2411:20:77386:77420	1343594	1	True				
ANR	1343993	IdentifierDecl	gconfig_h [ PATH_STR_LEN ] = { 0 }		1343594	0					
ANR	1343994	IdentifierDeclType	char [ PATH_STR_LEN ]		1343594	0					
ANR	1343995	Identifier	gconfig_h		1343594	1					
ANR	1343996	Identifier	PATH_STR_LEN		1343594	2					
ANR	1343997	AssignmentExpression	gconfig_h [ PATH_STR_LEN ] = { 0 }		1343594	3		=			
ANR	1343998	Identifier	PATH_STR_LEN		1343594	0					
ANR	1343999	InitializerList	0		1343594	1					
ANR	1344000	PrimaryExpression	0		1343594	0					
ANR	1344001	IfStatement	if ( ( ++ atarg ) + 1 == argc )		1343594	2					
ANR	1344002	Condition	( ++ atarg ) + 1 == argc	2412:24:77446:77466	1343594	0	True				
ANR	1344003	EqualityExpression	( ++ atarg ) + 1 == argc		1343594	0		==			
ANR	1344004	AdditiveExpression	( ++ atarg ) + 1		1343594	0		+			
ANR	1344005	UnaryExpression	++ atarg		1343594	0					
ANR	1344006	IncDec	++		1343594	0					
ANR	1344007	Identifier	atarg		1343594	1					
ANR	1344008	PrimaryExpression	1		1343594	1					
ANR	1344009	Identifier	argc		1343594	1					
ANR	1344010	CompoundStatement		107:47:4932:4932	1343594	1					
ANR	1344011	ExpressionStatement	"printf ( ""   option %s missing required arguments\\n"" , argv [ atarg - 1 ] )"	2413:24:77495:77561	1343594	0	True				
ANR	1344012	CallExpression	"printf ( ""   option %s missing required arguments\\n"" , argv [ atarg - 1 ] )"		1343594	0					
ANR	1344013	Callee	printf		1343594	0					
ANR	1344014	Identifier	printf		1343594	0					
ANR	1344015	ArgumentList	"""   option %s missing required arguments\\n"""		1343594	1					
ANR	1344016	Argument	"""   option %s missing required arguments\\n"""		1343594	0					
ANR	1344017	PrimaryExpression	"""   option %s missing required arguments\\n"""		1343594	0					
ANR	1344018	Argument	argv [ atarg - 1 ]		1343594	1					
ANR	1344019	ArrayIndexing	argv [ atarg - 1 ]		1343594	0					
ANR	1344020	Identifier	argv		1343594	0					
ANR	1344021	AdditiveExpression	atarg - 1		1343594	1		-			
ANR	1344022	Identifier	atarg		1343594	0					
ANR	1344023	PrimaryExpression	1		1343594	1					
ANR	1344024	ExpressionStatement	exit ( 1 )	2414:24:77587:77594	1343594	1	True				
ANR	1344025	CallExpression	exit ( 1 )		1343594	0					
ANR	1344026	Callee	exit		1343594	0					
ANR	1344027	Identifier	exit		1343594	0					
ANR	1344028	ArgumentList	1		1343594	1					
ANR	1344029	Argument	1		1343594	0					
ANR	1344030	PrimaryExpression	1		1343594	0					
ANR	1344031	ExpressionStatement	"strncpy ( initfile , argv [ atarg ] , PATH_STR_LEN - 1 )"	2416:20:77638:77686	1343594	3	True				
ANR	1344032	CallExpression	"strncpy ( initfile , argv [ atarg ] , PATH_STR_LEN - 1 )"		1343594	0					
ANR	1344033	Callee	strncpy		1343594	0					
ANR	1344034	Identifier	strncpy		1343594	0					
ANR	1344035	ArgumentList	initfile		1343594	1					
ANR	1344036	Argument	initfile		1343594	0					
ANR	1344037	Identifier	initfile		1343594	0					
ANR	1344038	Argument	argv [ atarg ]		1343594	1					
ANR	1344039	ArrayIndexing	argv [ atarg ]		1343594	0					
ANR	1344040	Identifier	argv		1343594	0					
ANR	1344041	Identifier	atarg		1343594	1					
ANR	1344042	Argument	PATH_STR_LEN - 1		1343594	2					
ANR	1344043	AdditiveExpression	PATH_STR_LEN - 1		1343594	0		-			
ANR	1344044	Identifier	PATH_STR_LEN		1343594	0					
ANR	1344045	PrimaryExpression	1		1343594	1					
ANR	1344046	ExpressionStatement	atarg ++	2417:20:77708:77715	1343594	4	True				
ANR	1344047	PostIncDecOperationExpression	atarg ++		1343594	0					
ANR	1344048	Identifier	atarg		1343594	0					
ANR	1344049	IncDec	++		1343594	1					
ANR	1344050	ExpressionStatement	"strncpy ( gconfig_h , argv [ atarg ] , PATH_STR_LEN - 1 )"	2418:20:77737:77786	1343594	5	True				
ANR	1344051	CallExpression	"strncpy ( gconfig_h , argv [ atarg ] , PATH_STR_LEN - 1 )"		1343594	0					
ANR	1344052	Callee	strncpy		1343594	0					
ANR	1344053	Identifier	strncpy		1343594	0					
ANR	1344054	ArgumentList	gconfig_h		1343594	1					
ANR	1344055	Argument	gconfig_h		1343594	0					
ANR	1344056	Identifier	gconfig_h		1343594	0					
ANR	1344057	Argument	argv [ atarg ]		1343594	1					
ANR	1344058	ArrayIndexing	argv [ atarg ]		1343594	0					
ANR	1344059	Identifier	argv		1343594	0					
ANR	1344060	Identifier	atarg		1343594	1					
ANR	1344061	Argument	PATH_STR_LEN - 1		1343594	2					
ANR	1344062	AdditiveExpression	PATH_STR_LEN - 1		1343594	0		-			
ANR	1344063	Identifier	PATH_STR_LEN		1343594	0					
ANR	1344064	PrimaryExpression	1		1343594	1					
ANR	1344065	ExpressionStatement	"process_initfile ( initfile , gconfig_h , os_prefix , rom_prefix , compression , & inode_count , & totlen , out )"	2419:20:77808:77945	1343594	6	True				
ANR	1344066	CallExpression	"process_initfile ( initfile , gconfig_h , os_prefix , rom_prefix , compression , & inode_count , & totlen , out )"		1343594	0					
ANR	1344067	Callee	process_initfile		1343594	0					
ANR	1344068	Identifier	process_initfile		1343594	0					
ANR	1344069	ArgumentList	initfile		1343594	1					
ANR	1344070	Argument	initfile		1343594	0					
ANR	1344071	Identifier	initfile		1343594	0					
ANR	1344072	Argument	gconfig_h		1343594	1					
ANR	1344073	Identifier	gconfig_h		1343594	0					
ANR	1344074	Argument	os_prefix		1343594	2					
ANR	1344075	Identifier	os_prefix		1343594	0					
ANR	1344076	Argument	rom_prefix		1343594	3					
ANR	1344077	Identifier	rom_prefix		1343594	0					
ANR	1344078	Argument	compression		1343594	4					
ANR	1344079	Identifier	compression		1343594	0					
ANR	1344080	Argument	& inode_count		1343594	5					
ANR	1344081	UnaryOperationExpression	& inode_count		1343594	0					
ANR	1344082	UnaryOperator	&		1343594	0					
ANR	1344083	Identifier	inode_count		1343594	1					
ANR	1344084	Argument	& totlen		1343594	6					
ANR	1344085	UnaryOperationExpression	& totlen		1343594	0					
ANR	1344086	UnaryOperator	&		1343594	0					
ANR	1344087	Identifier	totlen		1343594	1					
ANR	1344088	Argument	out		1343594	7					
ANR	1344089	Identifier	out		1343594	0					
ANR	1344090	BreakStatement	break ;	2422:16:77981:77986	1343594	18	True				
ANR	1344091	Label	case 'P' :	2423:14:78002:78010	1343594	19	True				
ANR	1344092	IfStatement	if ( ++ atarg == argc )		1343594	20					
ANR	1344093	Condition	++ atarg == argc	2424:20:78032:78046	1343594	0	True				
ANR	1344094	EqualityExpression	++ atarg == argc		1343594	0		==			
ANR	1344095	UnaryExpression	++ atarg		1343594	0					
ANR	1344096	IncDec	++		1343594	0					
ANR	1344097	Identifier	atarg		1343594	1					
ANR	1344098	Identifier	argc		1343594	1					
ANR	1344099	CompoundStatement		119:37:5512:5512	1343594	1					
ANR	1344100	ExpressionStatement	"printf ( ""   option %s missing required argument\\n"" , argv [ atarg - 1 ] )"	2425:20:78071:78136	1343594	0	True				
ANR	1344101	CallExpression	"printf ( ""   option %s missing required argument\\n"" , argv [ atarg - 1 ] )"		1343594	0					
ANR	1344102	Callee	printf		1343594	0					
ANR	1344103	Identifier	printf		1343594	0					
ANR	1344104	ArgumentList	"""   option %s missing required argument\\n"""		1343594	1					
ANR	1344105	Argument	"""   option %s missing required argument\\n"""		1343594	0					
ANR	1344106	PrimaryExpression	"""   option %s missing required argument\\n"""		1343594	0					
ANR	1344107	Argument	argv [ atarg - 1 ]		1343594	1					
ANR	1344108	ArrayIndexing	argv [ atarg - 1 ]		1343594	0					
ANR	1344109	Identifier	argv		1343594	0					
ANR	1344110	AdditiveExpression	atarg - 1		1343594	1		-			
ANR	1344111	Identifier	atarg		1343594	0					
ANR	1344112	PrimaryExpression	1		1343594	1					
ANR	1344113	ExpressionStatement	exit ( 1 )	2426:20:78158:78165	1343594	1	True				
ANR	1344114	CallExpression	exit ( 1 )		1343594	0					
ANR	1344115	Callee	exit		1343594	0					
ANR	1344116	Identifier	exit		1343594	0					
ANR	1344117	ArgumentList	1		1343594	1					
ANR	1344118	Argument	1		1343594	0					
ANR	1344119	PrimaryExpression	1		1343594	0					
ANR	1344120	ExpressionStatement	os_prefix = argv [ atarg ]	2428:16:78201:78224	1343594	21	True				
ANR	1344121	AssignmentExpression	os_prefix = argv [ atarg ]		1343594	0		=			
ANR	1344122	Identifier	os_prefix		1343594	0					
ANR	1344123	ArrayIndexing	argv [ atarg ]		1343594	1					
ANR	1344124	Identifier	argv		1343594	0					
ANR	1344125	Identifier	atarg		1343594	1					
ANR	1344126	BreakStatement	break ;	2429:16:78242:78247	1343594	22	True				
ANR	1344127	Label	case 'X' :	2430:14:78263:78271	1343594	23	True				
ANR	1344128	IfStatement	if ( ++ atarg == argc )		1343594	24					
ANR	1344129	Condition	++ atarg == argc	2431:20:78293:78307	1343594	0	True				
ANR	1344130	EqualityExpression	++ atarg == argc		1343594	0		==			
ANR	1344131	UnaryExpression	++ atarg		1343594	0					
ANR	1344132	IncDec	++		1343594	0					
ANR	1344133	Identifier	atarg		1343594	1					
ANR	1344134	Identifier	argc		1343594	1					
ANR	1344135	CompoundStatement		126:37:5773:5773	1343594	1					
ANR	1344136	ExpressionStatement	"printf ( ""   option %s missing required argument\\n"" , argv [ atarg - 1 ] )"	2432:20:78332:78397	1343594	0	True				
ANR	1344137	CallExpression	"printf ( ""   option %s missing required argument\\n"" , argv [ atarg - 1 ] )"		1343594	0					
ANR	1344138	Callee	printf		1343594	0					
ANR	1344139	Identifier	printf		1343594	0					
ANR	1344140	ArgumentList	"""   option %s missing required argument\\n"""		1343594	1					
ANR	1344141	Argument	"""   option %s missing required argument\\n"""		1343594	0					
ANR	1344142	PrimaryExpression	"""   option %s missing required argument\\n"""		1343594	0					
ANR	1344143	Argument	argv [ atarg - 1 ]		1343594	1					
ANR	1344144	ArrayIndexing	argv [ atarg - 1 ]		1343594	0					
ANR	1344145	Identifier	argv		1343594	0					
ANR	1344146	AdditiveExpression	atarg - 1		1343594	1		-			
ANR	1344147	Identifier	atarg		1343594	0					
ANR	1344148	PrimaryExpression	1		1343594	1					
ANR	1344149	ExpressionStatement	exit ( 1 )	2433:20:78419:78426	1343594	1	True				
ANR	1344150	CallExpression	exit ( 1 )		1343594	0					
ANR	1344151	Callee	exit		1343594	0					
ANR	1344152	Identifier	exit		1343594	0					
ANR	1344153	ArgumentList	1		1343594	1					
ANR	1344154	Argument	1		1343594	0					
ANR	1344155	PrimaryExpression	1		1343594	0					
ANR	1344156	ExpressionStatement	Xlist_scan = malloc ( sizeof ( Xlist_element ) )	2435:16:78462:78504	1343594	25	True				
ANR	1344157	AssignmentExpression	Xlist_scan = malloc ( sizeof ( Xlist_element ) )		1343594	0		=			
ANR	1344158	Identifier	Xlist_scan		1343594	0					
ANR	1344159	CallExpression	malloc ( sizeof ( Xlist_element ) )		1343594	1					
ANR	1344160	Callee	malloc		1343594	0					
ANR	1344161	Identifier	malloc		1343594	0					
ANR	1344162	ArgumentList	sizeof ( Xlist_element )		1343594	1					
ANR	1344163	Argument	sizeof ( Xlist_element )		1343594	0					
ANR	1344164	SizeofExpression	sizeof ( Xlist_element )		1343594	0					
ANR	1344165	Sizeof	sizeof		1343594	0					
ANR	1344166	SizeofOperand	Xlist_element		1343594	1					
ANR	1344167	IfStatement	if ( Xlist_scan == NULL )		1343594	26					
ANR	1344168	Condition	Xlist_scan == NULL	2436:20:78526:78543	1343594	0	True				
ANR	1344169	EqualityExpression	Xlist_scan == NULL		1343594	0		==			
ANR	1344170	Identifier	Xlist_scan		1343594	0					
ANR	1344171	Identifier	NULL		1343594	1					
ANR	1344172	CompoundStatement		131:40:6009:6009	1343594	1					
ANR	1344173	ExpressionStatement	exit ( 1 )	2437:20:78568:78575	1343594	0	True				
ANR	1344174	CallExpression	exit ( 1 )		1343594	0					
ANR	1344175	Callee	exit		1343594	0					
ANR	1344176	Identifier	exit		1343594	0					
ANR	1344177	ArgumentList	1		1343594	1					
ANR	1344178	Argument	1		1343594	0					
ANR	1344179	PrimaryExpression	1		1343594	0					
ANR	1344180	ExpressionStatement	Xlist_scan -> next = Xlist_head	2439:16:78611:78640	1343594	27	True				
ANR	1344181	AssignmentExpression	Xlist_scan -> next = Xlist_head		1343594	0		=			
ANR	1344182	PtrMemberAccess	Xlist_scan -> next		1343594	0					
ANR	1344183	Identifier	Xlist_scan		1343594	0					
ANR	1344184	Identifier	next		1343594	1					
ANR	1344185	Identifier	Xlist_head		1343594	1					
ANR	1344186	ExpressionStatement	Xlist_head = Xlist_scan	2440:16:78658:78681	1343594	28	True				
ANR	1344187	AssignmentExpression	Xlist_head = Xlist_scan		1343594	0		=			
ANR	1344188	Identifier	Xlist_head		1343594	0					
ANR	1344189	Identifier	Xlist_scan		1343594	1					
ANR	1344190	ExpressionStatement	Xlist_head -> path = argv [ atarg ]	2441:16:78699:78729	1343594	29	True				
ANR	1344191	AssignmentExpression	Xlist_head -> path = argv [ atarg ]		1343594	0		=			
ANR	1344192	PtrMemberAccess	Xlist_head -> path		1343594	0					
ANR	1344193	Identifier	Xlist_head		1343594	0					
ANR	1344194	Identifier	path		1343594	1					
ANR	1344195	ArrayIndexing	argv [ atarg ]		1343594	1					
ANR	1344196	Identifier	argv		1343594	0					
ANR	1344197	Identifier	atarg		1343594	1					
ANR	1344198	BreakStatement	break ;	2442:16:78747:78752	1343594	30	True				
ANR	1344199	Label	default :	2443:14:78768:78775	1343594	31	True				
ANR	1344200	Identifier	default		1343594	0					
ANR	1344201	ExpressionStatement	"printf ( ""  unknown option: %s \\n"" , argv [ atarg ] )"	2444:16:78793:78839	1343594	32	True				
ANR	1344202	CallExpression	"printf ( ""  unknown option: %s \\n"" , argv [ atarg ] )"		1343594	0					
ANR	1344203	Callee	printf		1343594	0					
ANR	1344204	Identifier	printf		1343594	0					
ANR	1344205	ArgumentList	"""  unknown option: %s \\n"""		1343594	1					
ANR	1344206	Argument	"""  unknown option: %s \\n"""		1343594	0					
ANR	1344207	PrimaryExpression	"""  unknown option: %s \\n"""		1343594	0					
ANR	1344208	Argument	argv [ atarg ]		1343594	1					
ANR	1344209	ArrayIndexing	argv [ atarg ]		1343594	0					
ANR	1344210	Identifier	argv		1343594	0					
ANR	1344211	Identifier	atarg		1343594	1					
ANR	1344212	ContinueStatement	continue ;	2446:12:78867:78875	1343594	1	True				
ANR	1344213	ExpressionStatement	"strncpy ( pa , argv [ atarg ] , PATH_STR_LEN - ( strlen ( os_prefix ) < strlen ( rom_prefix ) ? strlen ( rom_prefix ) : strlen ( os_prefix ) ) )"	2449:8:78932:79054	1343594	1	True				
ANR	1344214	CallExpression	"strncpy ( pa , argv [ atarg ] , PATH_STR_LEN - ( strlen ( os_prefix ) < strlen ( rom_prefix ) ? strlen ( rom_prefix ) : strlen ( os_prefix ) ) )"		1343594	0					
ANR	1344215	Callee	strncpy		1343594	0					
ANR	1344216	Identifier	strncpy		1343594	0					
ANR	1344217	ArgumentList	pa		1343594	1					
ANR	1344218	Argument	pa		1343594	0					
ANR	1344219	Identifier	pa		1343594	0					
ANR	1344220	Argument	argv [ atarg ]		1343594	1					
ANR	1344221	ArrayIndexing	argv [ atarg ]		1343594	0					
ANR	1344222	Identifier	argv		1343594	0					
ANR	1344223	Identifier	atarg		1343594	1					
ANR	1344224	Argument	PATH_STR_LEN - ( strlen ( os_prefix ) < strlen ( rom_prefix ) ? strlen ( rom_prefix ) : strlen ( os_prefix ) )		1343594	2					
ANR	1344225	AdditiveExpression	PATH_STR_LEN - ( strlen ( os_prefix ) < strlen ( rom_prefix ) ? strlen ( rom_prefix ) : strlen ( os_prefix ) )		1343594	0		-			
ANR	1344226	Identifier	PATH_STR_LEN		1343594	0					
ANR	1344227	ConditionalExpression	strlen ( os_prefix ) < strlen ( rom_prefix ) ? strlen ( rom_prefix ) : strlen ( os_prefix )		1343594	1					
ANR	1344228	Condition	strlen ( os_prefix ) < strlen ( rom_prefix )		1343594	0					
ANR	1344229	RelationalExpression	strlen ( os_prefix ) < strlen ( rom_prefix )		1343594	0		<			
ANR	1344230	CallExpression	strlen ( os_prefix )		1343594	0					
ANR	1344231	Callee	strlen		1343594	0					
ANR	1344232	Identifier	strlen		1343594	0					
ANR	1344233	ArgumentList	os_prefix		1343594	1					
ANR	1344234	Argument	os_prefix		1343594	0					
ANR	1344235	Identifier	os_prefix		1343594	0					
ANR	1344236	CallExpression	strlen ( rom_prefix )		1343594	1					
ANR	1344237	Callee	strlen		1343594	0					
ANR	1344238	Identifier	strlen		1343594	0					
ANR	1344239	ArgumentList	rom_prefix		1343594	1					
ANR	1344240	Argument	rom_prefix		1343594	0					
ANR	1344241	Identifier	rom_prefix		1343594	0					
ANR	1344242	CallExpression	strlen ( rom_prefix )		1343594	1					
ANR	1344243	Callee	strlen		1343594	0					
ANR	1344244	Identifier	strlen		1343594	0					
ANR	1344245	ArgumentList	rom_prefix		1343594	1					
ANR	1344246	Argument	rom_prefix		1343594	0					
ANR	1344247	Identifier	rom_prefix		1343594	0					
ANR	1344248	CallExpression	strlen ( os_prefix )		1343594	2					
ANR	1344249	Callee	strlen		1343594	0					
ANR	1344250	Identifier	strlen		1343594	0					
ANR	1344251	ArgumentList	os_prefix		1343594	1					
ANR	1344252	Argument	os_prefix		1343594	0					
ANR	1344253	Identifier	os_prefix		1343594	0					
ANR	1344254	ExpressionStatement	"process_path ( pa , os_prefix , rom_prefix , Xlist_head , compression , compaction , & inode_count , & totlen , out )"	2450:8:79064:79188	1343594	2	True				
ANR	1344255	CallExpression	"process_path ( pa , os_prefix , rom_prefix , Xlist_head , compression , compaction , & inode_count , & totlen , out )"		1343594	0					
ANR	1344256	Callee	process_path		1343594	0					
ANR	1344257	Identifier	process_path		1343594	0					
ANR	1344258	ArgumentList	pa		1343594	1					
ANR	1344259	Argument	pa		1343594	0					
ANR	1344260	Identifier	pa		1343594	0					
ANR	1344261	Argument	os_prefix		1343594	1					
ANR	1344262	Identifier	os_prefix		1343594	0					
ANR	1344263	Argument	rom_prefix		1343594	2					
ANR	1344264	Identifier	rom_prefix		1343594	0					
ANR	1344265	Argument	Xlist_head		1343594	3					
ANR	1344266	Identifier	Xlist_head		1343594	0					
ANR	1344267	Argument	compression		1343594	4					
ANR	1344268	Identifier	compression		1343594	0					
ANR	1344269	Argument	compaction		1343594	5					
ANR	1344270	Identifier	compaction		1343594	0					
ANR	1344271	Argument	& inode_count		1343594	6					
ANR	1344272	UnaryOperationExpression	& inode_count		1343594	0					
ANR	1344273	UnaryOperator	&		1343594	0					
ANR	1344274	Identifier	inode_count		1343594	1					
ANR	1344275	Argument	& totlen		1343594	7					
ANR	1344276	UnaryOperationExpression	& totlen		1343594	0					
ANR	1344277	UnaryOperator	&		1343594	0					
ANR	1344278	Identifier	totlen		1343594	1					
ANR	1344279	Argument	out		1343594	8					
ANR	1344280	Identifier	out		1343594	0					
ANR	1344281	ExpressionStatement	"fprintf ( out , ""    uint32_t *gs_romfs[] = {\\n"" )"	2454:4:79243:79289	1343594	27	True				
ANR	1344282	CallExpression	"fprintf ( out , ""    uint32_t *gs_romfs[] = {\\n"" )"		1343594	0					
ANR	1344283	Callee	fprintf		1343594	0					
ANR	1344284	Identifier	fprintf		1343594	0					
ANR	1344285	ArgumentList	out		1343594	1					
ANR	1344286	Argument	out		1343594	0					
ANR	1344287	Identifier	out		1343594	0					
ANR	1344288	Argument	"""    uint32_t *gs_romfs[] = {\\n"""		1343594	1					
ANR	1344289	PrimaryExpression	"""    uint32_t *gs_romfs[] = {\\n"""		1343594	0					
ANR	1344290	ForStatement	for ( i = 0 ; i < inode_count ; i ++ )		1343594	28					
ANR	1344291	ForInit	i = 0 ;	2455:9:79300:79303	1343594	0	True				
ANR	1344292	AssignmentExpression	i = 0		1343594	0		=			
ANR	1344293	Identifier	i		1343594	0					
ANR	1344294	PrimaryExpression	0		1343594	1					
ANR	1344295	Condition	i < inode_count	2455:14:79305:79317	1343594	1	True				
ANR	1344296	RelationalExpression	i < inode_count		1343594	0		<			
ANR	1344297	Identifier	i		1343594	0					
ANR	1344298	Identifier	inode_count		1343594	1					
ANR	1344299	PostIncDecOperationExpression	i ++	2455:29:79320:79322	1343594	2	True				
ANR	1344300	Identifier	i		1343594	0					
ANR	1344301	IncDec	++		1343594	1					
ANR	1344302	ExpressionStatement	"fprintf ( out , ""\\tnode_%d,\\n"" , i )"	2456:8:79333:79364	1343594	3	True				
ANR	1344303	CallExpression	"fprintf ( out , ""\\tnode_%d,\\n"" , i )"		1343594	0					
ANR	1344304	Callee	fprintf		1343594	0					
ANR	1344305	Identifier	fprintf		1343594	0					
ANR	1344306	ArgumentList	out		1343594	1					
ANR	1344307	Argument	out		1343594	0					
ANR	1344308	Identifier	out		1343594	0					
ANR	1344309	Argument	"""\\tnode_%d,\\n"""		1343594	1					
ANR	1344310	PrimaryExpression	"""\\tnode_%d,\\n"""		1343594	0					
ANR	1344311	Argument	i		1343594	2					
ANR	1344312	Identifier	i		1343594	0					
ANR	1344313	ExpressionStatement	"fprintf ( out , ""\\t0 };\\n"" )"	2457:4:79370:79394	1343594	29	True				
ANR	1344314	CallExpression	"fprintf ( out , ""\\t0 };\\n"" )"		1343594	0					
ANR	1344315	Callee	fprintf		1343594	0					
ANR	1344316	Identifier	fprintf		1343594	0					
ANR	1344317	ArgumentList	out		1343594	1					
ANR	1344318	Argument	out		1343594	0					
ANR	1344319	Identifier	out		1343594	0					
ANR	1344320	Argument	"""\\t0 };\\n"""		1343594	1					
ANR	1344321	PrimaryExpression	"""\\t0 };\\n"""		1343594	0					
ANR	1344322	ExpressionStatement	fclose ( out )	2458:4:79400:79411	1343594	30	True				
ANR	1344323	CallExpression	fclose ( out )		1343594	0					
ANR	1344324	Callee	fclose		1343594	0					
ANR	1344325	Identifier	fclose		1343594	0					
ANR	1344326	ArgumentList	out		1343594	1					
ANR	1344327	Argument	out		1343594	0					
ANR	1344328	Identifier	out		1343594	0					
ANR	1344329	WhileStatement	while ( Xlist_head )		1343594	31					
ANR	1344330	Condition	Xlist_head	2459:11:79424:79433	1343594	0	True				
ANR	1344331	Identifier	Xlist_head		1343594	0					
ANR	1344332	CompoundStatement		154:23:6899:6899	1343594	1					
ANR	1344333	ExpressionStatement	Xlist_scan = Xlist_head -> next	2460:8:79446:79475	1343594	0	True				
ANR	1344334	AssignmentExpression	Xlist_scan = Xlist_head -> next		1343594	0		=			
ANR	1344335	Identifier	Xlist_scan		1343594	0					
ANR	1344336	PtrMemberAccess	Xlist_head -> next		1343594	1					
ANR	1344337	Identifier	Xlist_head		1343594	0					
ANR	1344338	Identifier	next		1343594	1					
ANR	1344339	ExpressionStatement	free ( Xlist_head )	2461:8:79485:79501	1343594	1	True				
ANR	1344340	CallExpression	free ( Xlist_head )		1343594	0					
ANR	1344341	Callee	free		1343594	0					
ANR	1344342	Identifier	free		1343594	0					
ANR	1344343	ArgumentList	Xlist_head		1343594	1					
ANR	1344344	Argument	Xlist_head		1343594	0					
ANR	1344345	Identifier	Xlist_head		1343594	0					
ANR	1344346	ExpressionStatement	Xlist_head = Xlist_scan	2462:8:79511:79534	1343594	2	True				
ANR	1344347	AssignmentExpression	Xlist_head = Xlist_scan		1343594	0		=			
ANR	1344348	Identifier	Xlist_head		1343594	0					
ANR	1344349	Identifier	Xlist_scan		1343594	1					
ANR	1344350	ExpressionStatement	"printf ( ""Total %%rom%% structure size is %d bytes.\\n"" , totlen )"	2464:4:79546:79607	1343594	32	True				
ANR	1344351	CallExpression	"printf ( ""Total %%rom%% structure size is %d bytes.\\n"" , totlen )"		1343594	0					
ANR	1344352	Callee	printf		1343594	0					
ANR	1344353	Identifier	printf		1343594	0					
ANR	1344354	ArgumentList	"""Total %%rom%% structure size is %d bytes.\\n"""		1343594	1					
ANR	1344355	Argument	"""Total %%rom%% structure size is %d bytes.\\n"""		1343594	0					
ANR	1344356	PrimaryExpression	"""Total %%rom%% structure size is %d bytes.\\n"""		1343594	0					
ANR	1344357	Argument	totlen		1343594	1					
ANR	1344358	Identifier	totlen		1343594	0					
ANR	1344359	ReturnStatement	return 0 ;	2466:4:79614:79622	1343594	33	True				
ANR	1344360	PrimaryExpression	0		1343594	0					
ANR	1344361	ReturnType	int		1343594	1					
ANR	1344362	Identifier	main		1343594	2					
ANR	1344363	ParameterList	"int argc , char * argv [ ]"		1343594	3					
ANR	1344364	Parameter	int argc	2305:5:72512:72519	1343594	0	True				
ANR	1344365	ParameterType	int		1343594	0					
ANR	1344366	Identifier	argc		1343594	1					
ANR	1344367	Parameter	char * argv [ ]	2305:15:72522:72533	1343594	1	True				
ANR	1344368	ParameterType	char * [ ]		1343594	0					
ANR	1344369	Identifier	argv		1343594	1					
ANR	1344370	CFGEntryNode	ENTRY		1343594		True				
ANR	1344371	CFGExitNode	EXIT		1343594		True				
ANR	1344372	Symbol	* Xlist_head		1343594						
ANR	1344373	Symbol	Xlist_head -> next		1343594						
ANR	1344374	Symbol	PATH_STR_LEN		1343594						
ANR	1344375	Symbol	initfile		1343594						
ANR	1344376	Symbol	Xlist_head		1343594						
ANR	1344377	Symbol	* argv		1343594						
ANR	1344378	Symbol	argv		1343594						
ANR	1344379	Symbol	atarg		1343594						
ANR	1344380	Symbol	ROMFS_CBUFSIZE		1343594						
ANR	1344381	Symbol	out		1343594						
ANR	1344382	Symbol	strlen		1343594						
ANR	1344383	Symbol	totlen		1343594						
ANR	1344384	Symbol	strtoul		1343594						
ANR	1344385	Symbol	compaction		1343594						
ANR	1344386	Symbol	* * argv		1343594						
ANR	1344387	Symbol	os_prefix		1343594						
ANR	1344388	Symbol	* * atarg		1343594						
ANR	1344389	Symbol	getenv		1343594						
ANR	1344390	Symbol	* Xlist_scan		1343594						
ANR	1344391	Symbol	argc		1343594						
ANR	1344392	Symbol	* atarg		1343594						
ANR	1344393	Symbol	fopen		1343594						
ANR	1344394	Symbol	malloc		1343594						
ANR	1344395	Symbol	NULL		1343594						
ANR	1344396	Symbol	rom_prefix		1343594						
ANR	1344397	Symbol	outfilename		1343594						
ANR	1344398	Symbol	Xlist_scan -> next		1343594						
ANR	1344399	Symbol	gconfig_h		1343594						
ANR	1344400	Symbol	i		1343594						
ANR	1344401	Symbol	inode_count		1343594						
ANR	1344402	Symbol	Xlist_scan		1343594						
ANR	1344403	Symbol	env_source_date_epoch		1343594						
ANR	1344404	Symbol	& totlen		1343594						
ANR	1344405	Symbol	ROMFS_BLOCKSIZE		1343594						
ANR	1344406	Symbol	pa		1343594						
ANR	1344407	Symbol	Xlist_head -> path		1343594						
ANR	1344408	Symbol	buildtime		1343594						
ANR	1344409	Symbol	time		1343594						
ANR	1344410	Symbol	compression		1343594						
ANR	1344411	Symbol	& inode_count		1343594						
